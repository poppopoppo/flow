§§ Test ≒ 
	¶ list◂a' ≃ ∐ : nil ∐ a' list : cns 
	§  
§§.
ℤp ; polymorphic ℤ 
¶ bit ≃ % n y 
`bit:y
`bit:n
bit == ℤp◂bit_ℤ  
ℤ == ℤp◂{}
(+) `: x∀ {ℤp◂x' ℤp◂x'}→ℤp◂x' 
 
a ‹^› b ; optional vector
a |^| b ; vector 
{^ t:b , s:x , a':z }

{^ ft:d , se:z <}  
∐[a' b' c'] 
?∐[2]◂{} ; ∐[a0' a1' {}] 

¶ @ stack◂a' ≃ 
	∏ ! ‹a' stack◂a'› : pop 
	∏ ! a'→(stack◂a') : push

§ @ stack : ! list◂a' ⊢ ! stack◂a' ≒ 
	! $ .∆ 
		∏ ! ∠[$] .∇ 
			∐ ! ‹› 
			∐ ! ‹{$◃0 stack◂($◃1)}› 
		∇. 
		∏ ! ?0 | 
			?0 ≒ .»
				stack◂⟦$ $'⟧
				».
	∆.   
	
[`t:x']∀ \a[x']→\a[x']

ºººº°°
a + b// 

a ⊞ b ; binary sequence align type  
a⊞b → bin ; down cast 
bin → a⊞b ; up cast 

$+$+$*(n//) 
`bit:$// + n 
`bool:t◂{} 
`t:`t0:`t1:a