# 1 "imp_lexer.mll"
 
    open Imp_parser
    exception Error of string

# 7 "imp_lexer.ml"
let __ocaml_lex_tables = {
  Lexing.lex_base =
   "\000\000\197\255\198\255\002\000\079\000\089\000\000\000\203\255\
    \204\255\210\255\211\255\212\255\213\255\214\255\215\255\222\255\
    \223\255\224\255\236\255\237\255\099\000\240\255\241\255\001\000\
    \133\000\129\000\250\255\009\000\004\000\006\000\007\000\235\255\
    \001\000\251\255\003\000\000\000\014\000\252\255\244\255\009\000\
    \029\000\007\000\002\000\028\000\001\000\033\000\140\000\226\255\
    \227\255\228\255\016\000\017\000\000\000\049\000\249\255\036\000\
    \054\000\073\000\238\255\232\255\229\255\225\255\246\255\242\255\
    \220\255\221\255\218\255\219\255\209\255\216\255\217\255\207\255\
    \208\255\205\255\206\255\248\255\242\000\041\000\037\000\243\255\
    \126\000\230\255\233\255\061\001\071\001";
  Lexing.lex_backtrk =
   "\255\255\255\255\255\255\056\000\055\000\058\000\053\000\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\058\000\255\255\255\255\058\000\
    \008\000\058\000\255\255\058\000\058\000\255\255\000\000\255\255\
    \010\000\255\255\001\000\255\255\002\000\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\024\000\021\000\054\000\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\008\000\255\255\255\255\255\255\
    \255\255\255\255\255\255\016\000\055\000";
  Lexing.lex_default =
   "\001\000\000\000\000\000\255\255\255\255\255\255\255\255\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\255\255\000\000\000\000\255\255\
    \255\255\255\255\000\000\255\255\029\000\029\000\029\000\000\000\
    \255\255\000\000\255\255\255\255\255\255\000\000\000\000\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\000\000\
    \000\000\000\000\255\255\255\255\255\255\255\255\000\000\255\255\
    \255\255\255\255\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\255\255\255\255\255\255\000\000\
    \255\255\000\000\000\000\255\255\255\255";
  Lexing.lex_trans =
   "\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\003\000\003\000\003\000\003\000\003\000\030\000\003\000\
    \030\000\030\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \003\000\009\000\003\000\000\000\006\000\020\000\013\000\006\000\
    \012\000\011\000\007\000\008\000\000\000\005\000\023\000\038\000\
    \004\000\004\000\004\000\004\000\004\000\004\000\004\000\004\000\
    \004\000\004\000\022\000\028\000\037\000\010\000\060\000\059\000\
    \000\000\024\000\024\000\024\000\024\000\024\000\024\000\024\000\
    \024\000\024\000\024\000\024\000\024\000\024\000\024\000\024\000\
    \024\000\024\000\024\000\024\000\024\000\024\000\024\000\024\000\
    \024\000\024\000\024\000\058\000\026\000\019\000\018\000\000\000\
    \017\000\024\000\024\000\024\000\024\000\024\000\024\000\024\000\
    \024\000\024\000\024\000\024\000\024\000\024\000\024\000\024\000\
    \024\000\024\000\024\000\024\000\024\000\024\000\024\000\024\000\
    \024\000\024\000\024\000\016\000\021\000\015\000\014\000\004\000\
    \004\000\004\000\004\000\004\000\004\000\004\000\004\000\004\000\
    \004\000\084\000\084\000\084\000\084\000\084\000\084\000\084\000\
    \084\000\084\000\084\000\083\000\083\000\083\000\083\000\083\000\
    \083\000\083\000\083\000\083\000\083\000\056\000\073\000\072\000\
    \071\000\065\000\064\000\063\000\062\000\055\000\057\000\036\000\
    \067\000\066\000\068\000\054\000\075\000\074\000\054\000\031\000\
    \034\000\080\000\000\000\061\000\000\000\076\000\076\000\076\000\
    \076\000\076\000\076\000\076\000\076\000\076\000\076\000\033\000\
    \070\000\069\000\027\000\078\000\032\000\035\000\024\000\024\000\
    \024\000\024\000\024\000\024\000\024\000\024\000\024\000\024\000\
    \024\000\024\000\024\000\024\000\024\000\024\000\024\000\024\000\
    \024\000\024\000\024\000\024\000\024\000\024\000\024\000\024\000\
    \079\000\000\000\025\000\077\000\076\000\000\000\024\000\024\000\
    \024\000\024\000\024\000\024\000\024\000\024\000\024\000\024\000\
    \024\000\024\000\024\000\024\000\024\000\024\000\024\000\024\000\
    \024\000\024\000\024\000\024\000\024\000\024\000\024\000\024\000\
    \002\000\041\000\043\000\000\000\255\255\039\000\255\255\255\255\
    \000\000\046\000\045\000\044\000\053\000\081\000\082\000\000\000\
    \000\000\000\000\047\000\048\000\000\000\000\000\000\000\000\000\
    \040\000\075\000\049\000\050\000\051\000\000\000\000\000\000\000\
    \042\000\000\000\076\000\076\000\076\000\076\000\076\000\076\000\
    \076\000\076\000\076\000\076\000\052\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\076\000\076\000\076\000\076\000\076\000\
    \076\000\076\000\076\000\076\000\076\000\076\000\076\000\076\000\
    \076\000\076\000\076\000\076\000\076\000\076\000\076\000\076\000\
    \076\000\076\000\076\000\076\000\076\000\000\000\000\000\000\000\
    \000\000\076\000\000\000\076\000\076\000\076\000\076\000\076\000\
    \076\000\076\000\076\000\076\000\076\000\076\000\076\000\076\000\
    \076\000\076\000\076\000\076\000\076\000\076\000\076\000\076\000\
    \076\000\076\000\076\000\076\000\076\000\083\000\083\000\083\000\
    \083\000\083\000\083\000\083\000\083\000\083\000\083\000\084\000\
    \084\000\084\000\084\000\084\000\084\000\084\000\084\000\084\000\
    \084\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    ";
  Lexing.lex_check =
   "\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\000\000\000\000\003\000\003\000\000\000\028\000\003\000\
    \029\000\030\000\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \000\000\000\000\003\000\255\255\000\000\000\000\000\000\006\000\
    \000\000\000\000\000\000\000\000\255\255\000\000\000\000\032\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\036\000\000\000\050\000\051\000\
    \255\255\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\052\000\000\000\000\000\000\000\255\255\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\004\000\
    \004\000\004\000\004\000\004\000\004\000\004\000\004\000\004\000\
    \004\000\005\000\005\000\005\000\005\000\005\000\005\000\005\000\
    \005\000\005\000\005\000\020\000\020\000\020\000\020\000\020\000\
    \020\000\020\000\020\000\020\000\020\000\055\000\039\000\040\000\
    \040\000\043\000\043\000\044\000\045\000\053\000\056\000\035\000\
    \042\000\042\000\041\000\053\000\024\000\039\000\057\000\027\000\
    \027\000\077\000\255\255\045\000\255\255\024\000\024\000\024\000\
    \024\000\024\000\024\000\024\000\024\000\024\000\024\000\027\000\
    \041\000\041\000\000\000\023\000\027\000\034\000\024\000\024\000\
    \024\000\024\000\024\000\024\000\024\000\024\000\024\000\024\000\
    \024\000\024\000\024\000\024\000\024\000\024\000\024\000\024\000\
    \024\000\024\000\024\000\024\000\024\000\024\000\024\000\024\000\
    \078\000\255\255\000\000\023\000\024\000\255\255\024\000\024\000\
    \024\000\024\000\024\000\024\000\024\000\024\000\024\000\024\000\
    \024\000\024\000\024\000\024\000\024\000\024\000\024\000\024\000\
    \024\000\024\000\024\000\024\000\024\000\024\000\024\000\024\000\
    \000\000\025\000\025\000\255\255\028\000\025\000\029\000\030\000\
    \255\255\025\000\025\000\025\000\046\000\080\000\080\000\255\255\
    \255\255\255\255\046\000\046\000\255\255\255\255\255\255\255\255\
    \025\000\076\000\046\000\046\000\046\000\255\255\255\255\255\255\
    \025\000\255\255\076\000\076\000\076\000\076\000\076\000\076\000\
    \076\000\076\000\076\000\076\000\046\000\255\255\255\255\255\255\
    \255\255\255\255\255\255\076\000\076\000\076\000\076\000\076\000\
    \076\000\076\000\076\000\076\000\076\000\076\000\076\000\076\000\
    \076\000\076\000\076\000\076\000\076\000\076\000\076\000\076\000\
    \076\000\076\000\076\000\076\000\076\000\255\255\255\255\255\255\
    \255\255\076\000\255\255\076\000\076\000\076\000\076\000\076\000\
    \076\000\076\000\076\000\076\000\076\000\076\000\076\000\076\000\
    \076\000\076\000\076\000\076\000\076\000\076\000\076\000\076\000\
    \076\000\076\000\076\000\076\000\076\000\083\000\083\000\083\000\
    \083\000\083\000\083\000\083\000\083\000\083\000\083\000\084\000\
    \084\000\084\000\084\000\084\000\084\000\084\000\084\000\084\000\
    \084\000\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    ";
  Lexing.lex_base_code =
   "";
  Lexing.lex_backtrk_code =
   "";
  Lexing.lex_default_code =
   "";
  Lexing.lex_trans_code =
   "";
  Lexing.lex_check_code =
   "";
  Lexing.lex_code =
   "";
}

let rec token lexbuf =
   __ocaml_lex_token_rec lexbuf 0
and __ocaml_lex_token_rec lexbuf __ocaml_lex_state =
  match Lexing.engine __ocaml_lex_tables __ocaml_lex_state lexbuf with
      | 0 ->
# 16 "imp_lexer.mll"
                     ( (print_string "comment\n";flush stdout);token lexbuf )
# 216 "imp_lexer.ml"

  | 1 ->
# 17 "imp_lexer.mll"
            ( LCE )
# 221 "imp_lexer.ml"

  | 2 ->
# 18 "imp_lexer.mll"
              ( MDL )
# 226 "imp_lexer.ml"

  | 3 ->
# 19 "imp_lexer.mll"
              ( MDL_END )
# 231 "imp_lexer.ml"

  | 4 ->
# 20 "imp_lexer.mll"
           ( DTA )
# 236 "imp_lexer.ml"

  | 5 ->
# 21 "imp_lexer.mll"
            ( SLH )
# 241 "imp_lexer.ml"

  | 6 ->
# 22 "imp_lexer.mll"
                           ( FOR_ALL )
# 246 "imp_lexer.ml"

  | 7 ->
let
# 23 "imp_lexer.mll"
               lxm
# 252 "imp_lexer.ml"
= Lexing.sub_lexeme lexbuf lexbuf.Lexing.lex_start_pos (lexbuf.Lexing.lex_curr_pos + -1) in
# 23 "imp_lexer.mll"
                         ( VAL(lxm) )
# 256 "imp_lexer.ml"

  | 8 ->
let
# 24 "imp_lexer.mll"
              lxm
# 262 "imp_lexer.ml"
= Lexing.sub_lexeme lexbuf lexbuf.Lexing.lex_start_pos lexbuf.Lexing.lex_curr_pos in
# 24 "imp_lexer.mll"
                  ( NAM(lxm) )
# 266 "imp_lexer.ml"

  | 9 ->
# 25 "imp_lexer.mll"
                      ( EQV )
# 271 "imp_lexer.ml"

  | 10 ->
# 26 "imp_lexer.mll"
                     ( ARR       )
# 276 "imp_lexer.ml"

  | 11 ->
# 27 "imp_lexer.mll"
                          ( ARR_END )
# 281 "imp_lexer.ml"

  | 12 ->
# 28 "imp_lexer.mll"
                           ( ARR_STT )
# 286 "imp_lexer.ml"

  | 13 ->
# 29 "imp_lexer.mll"
                      ( SRC )
# 291 "imp_lexer.ml"

  | 14 ->
# 30 "imp_lexer.mll"
          ( CLN )
# 296 "imp_lexer.ml"

  | 15 ->
# 31 "imp_lexer.mll"
          ( SPL )
# 301 "imp_lexer.ml"

  | 16 ->
let
# 32 "imp_lexer.mll"
                     lxm
# 307 "imp_lexer.ml"
= Lexing.sub_lexeme lexbuf (lexbuf.Lexing.lex_start_pos + 1) lexbuf.Lexing.lex_curr_pos in
# 32 "imp_lexer.mll"
                          ( MCR(lxm) )
# 311 "imp_lexer.ml"

  | 17 ->
# 33 "imp_lexer.mll"
                           ( AGL )
# 316 "imp_lexer.ml"

  | 18 ->
# 34 "imp_lexer.mll"
          ( AGL_END )
# 321 "imp_lexer.ml"

  | 19 ->
# 35 "imp_lexer.mll"
          ( SEQ )
# 326 "imp_lexer.ml"

  | 20 ->
# 36 "imp_lexer.mll"
                     ( M_CNN )
# 331 "imp_lexer.ml"

  | 21 ->
# 37 "imp_lexer.mll"
              ( CO_PRD )
# 336 "imp_lexer.ml"

  | 22 ->
# 38 "imp_lexer.mll"
              ( CO_PRD_STT )
# 341 "imp_lexer.ml"

  | 23 ->
# 39 "imp_lexer.mll"
              ( END_CO_PRD )
# 346 "imp_lexer.ml"

  | 24 ->
# 40 "imp_lexer.mll"
              ( PRD )
# 351 "imp_lexer.ml"

  | 25 ->
# 41 "imp_lexer.mll"
              ( PRD_STT )
# 356 "imp_lexer.ml"

  | 26 ->
# 42 "imp_lexer.mll"
              ( END_PRD )
# 361 "imp_lexer.ml"

  | 27 ->
# 43 "imp_lexer.mll"
            ( EOP )
# 366 "imp_lexer.ml"

  | 28 ->
# 44 "imp_lexer.mll"
            ( COPRD_END )
# 371 "imp_lexer.ml"

  | 29 ->
# 45 "imp_lexer.mll"
            ( PRD_END )
# 376 "imp_lexer.ml"

  | 30 ->
# 46 "imp_lexer.mll"
            ( DEF )
# 381 "imp_lexer.ml"

  | 31 ->
# 47 "imp_lexer.mll"
          ( ACT )
# 386 "imp_lexer.ml"

  | 32 ->
# 48 "imp_lexer.mll"
          ( L_RCD )
# 391 "imp_lexer.ml"

  | 33 ->
# 49 "imp_lexer.mll"
          ( R_RCD )
# 396 "imp_lexer.ml"

  | 34 ->
# 50 "imp_lexer.mll"
            ( L_HLZ )
# 401 "imp_lexer.ml"

  | 35 ->
# 51 "imp_lexer.mll"
            ( R_HLZ  )
# 406 "imp_lexer.ml"

  | 36 ->
# 52 "imp_lexer.mll"
            ( L_LST )
# 411 "imp_lexer.ml"

  | 37 ->
# 53 "imp_lexer.mll"
            ( R_LST )
# 416 "imp_lexer.ml"

  | 38 ->
# 54 "imp_lexer.mll"
            ( L_OPN )
# 421 "imp_lexer.ml"

  | 39 ->
# 55 "imp_lexer.mll"
            ( R_OPN )
# 426 "imp_lexer.ml"

  | 40 ->
# 56 "imp_lexer.mll"
          ( CNN )
# 431 "imp_lexer.ml"

  | 41 ->
# 57 "imp_lexer.mll"
          ( SGN )
# 436 "imp_lexer.ml"

  | 42 ->
# 58 "imp_lexer.mll"
          ( L_PRN )
# 441 "imp_lexer.ml"

  | 43 ->
# 59 "imp_lexer.mll"
          ( R_PRN )
# 446 "imp_lexer.ml"

  | 44 ->
# 60 "imp_lexer.mll"
          ( EQ )
# 451 "imp_lexer.ml"

  | 45 ->
# 61 "imp_lexer.mll"
          ( EXP )
# 456 "imp_lexer.ml"

  | 46 ->
# 62 "imp_lexer.mll"
            ( R_APP )
# 461 "imp_lexer.ml"

  | 47 ->
# 63 "imp_lexer.mll"
            ( APP )
# 466 "imp_lexer.ml"

  | 48 ->
# 64 "imp_lexer.mll"
            ( PRJ )
# 471 "imp_lexer.ml"

  | 49 ->
# 65 "imp_lexer.mll"
            ( Z )
# 476 "imp_lexer.ml"

  | 50 ->
# 66 "imp_lexer.mll"
            ( N )
# 481 "imp_lexer.ml"

  | 51 ->
# 67 "imp_lexer.mll"
          ( PLS )
# 486 "imp_lexer.ml"

  | 52 ->
# 68 "imp_lexer.mll"
          ( MLT )
# 491 "imp_lexer.ml"

  | 53 ->
let
# 69 "imp_lexer.mll"
                      lxm
# 497 "imp_lexer.ml"
= Lexing.sub_lexeme lexbuf (lexbuf.Lexing.lex_start_pos + 1) lexbuf.Lexing.lex_curr_pos in
# 69 "imp_lexer.mll"
                           ( ROT (String.length lxm) )
# 501 "imp_lexer.ml"

  | 54 ->
# 70 "imp_lexer.mll"
             ( AGL )
# 506 "imp_lexer.ml"

  | 55 ->
let
# 71 "imp_lexer.mll"
           lxm
# 512 "imp_lexer.ml"
= Lexing.sub_lexeme lexbuf lexbuf.Lexing.lex_start_pos lexbuf.Lexing.lex_curr_pos in
# 71 "imp_lexer.mll"
                ( INT (int_of_string lxm) )
# 516 "imp_lexer.ml"

  | 56 ->
# 72 "imp_lexer.mll"
                    ( token lexbuf                         )
# 521 "imp_lexer.ml"

  | 57 ->
# 73 "imp_lexer.mll"
                    ( EOF               )
# 526 "imp_lexer.ml"

  | 58 ->
# 74 "imp_lexer.mll"
                    ( raise (Error (Printf.sprintf
                      "At offset %d: unexpected character.\n"
                      (Lexing.lexeme_start lexbuf))) )
# 533 "imp_lexer.ml"

  | __ocaml_lex_state -> lexbuf.Lexing.refill_buff lexbuf;
      __ocaml_lex_token_rec lexbuf __ocaml_lex_state

;;

