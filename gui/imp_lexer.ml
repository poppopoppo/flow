# 1 "imp_lexer.mll"
 
    open Imp_parser
    exception Error of string

# 7 "imp_lexer.ml"
let __ocaml_lex_tables = {
  Lexing.lex_base =
   "\000\000\184\255\185\255\005\000\079\000\000\000\021\000\194\255\
    \195\255\023\000\098\000\203\255\205\255\206\255\207\255\208\255\
    \215\255\216\255\217\255\091\000\219\255\227\255\228\255\229\255\
    \232\255\233\255\015\000\242\255\079\000\162\000\013\000\248\255\
    \000\000\084\000\002\000\110\000\255\255\112\000\114\000\128\000\
    \094\000\109\000\095\000\226\255\032\000\249\255\001\000\002\000\
    \111\000\250\255\034\000\010\000\030\000\000\000\004\000\042\000\
    \035\000\001\000\034\000\034\000\157\000\221\255\222\255\223\255\
    \224\255\225\255\082\000\247\255\230\255\220\255\244\255\239\255\
    \240\255\236\255\234\255\235\255\213\255\214\255\211\255\212\255\
    \209\255\210\255\201\255\144\000\191\255\198\255\199\255\200\255\
    \246\255\067\001\243\255\001\000\060\000\238\255\218\255\190\255\
    \189\255\193\000\254\255\255\255";
  Lexing.lex_backtrk =
   "\013\000\255\255\255\255\069\000\068\000\063\000\062\000\255\255\
    \255\255\059\000\058\000\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\071\000\255\255\255\255\255\255\255\255\
    \255\255\255\255\024\000\255\255\051\000\010\000\071\000\255\255\
    \071\000\071\000\001\000\071\000\255\255\255\255\255\255\000\000\
    \255\255\255\255\002\000\255\255\014\000\255\255\003\000\255\255\
    \004\000\255\255\018\000\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\067\000\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\053\000\255\255\255\255\255\255\255\255\
    \255\255\010\000\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255";
  Lexing.lex_default =
   "\001\000\000\000\000\000\255\255\255\255\255\255\255\255\000\000\
    \000\000\255\255\255\255\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\255\255\000\000\000\000\000\000\000\000\
    \000\000\000\000\255\255\000\000\255\255\255\255\255\255\000\000\
    \255\255\255\255\034\000\037\000\000\000\037\000\037\000\037\000\
    \040\000\040\000\040\000\000\000\255\255\000\000\255\255\255\255\
    \255\255\000\000\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\000\000\000\000\000\000\
    \000\000\000\000\255\255\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\255\255\000\000\000\000\000\000\000\000\
    \000\000\255\255\000\000\255\255\255\255\000\000\000\000\000\000\
    \000\000\098\000\000\000\000\000";
  Lexing.lex_trans =
   "\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\003\000\003\000\000\000\255\255\003\000\003\000\003\000\
    \000\000\000\000\003\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \003\000\011\000\035\000\014\000\006\000\003\000\015\000\005\000\
    \013\000\012\000\009\000\010\000\007\000\008\000\033\000\019\000\
    \004\000\004\000\004\000\004\000\004\000\004\000\004\000\004\000\
    \004\000\004\000\024\000\034\000\006\000\028\000\096\000\025\000\
    \005\000\029\000\029\000\029\000\029\000\029\000\029\000\029\000\
    \029\000\029\000\029\000\029\000\029\000\029\000\029\000\029\000\
    \029\000\029\000\029\000\029\000\029\000\029\000\029\000\029\000\
    \029\000\029\000\029\000\022\000\031\000\023\000\021\000\018\000\
    \020\000\029\000\029\000\029\000\029\000\029\000\029\000\029\000\
    \029\000\029\000\029\000\029\000\029\000\029\000\029\000\029\000\
    \029\000\029\000\029\000\029\000\029\000\029\000\029\000\029\000\
    \029\000\029\000\029\000\017\000\026\000\016\000\027\000\004\000\
    \004\000\004\000\004\000\004\000\004\000\004\000\004\000\004\000\
    \004\000\095\000\094\000\092\000\090\000\053\000\055\000\040\000\
    \036\000\051\000\036\000\058\000\039\000\060\000\059\000\057\000\
    \056\000\041\000\041\000\042\000\050\000\049\000\050\000\086\000\
    \083\000\082\000\036\000\073\000\052\000\070\000\043\000\046\000\
    \041\000\048\000\079\000\078\000\054\000\068\000\087\000\077\000\
    \076\000\075\000\074\000\072\000\069\000\071\000\045\000\084\000\
    \092\000\081\000\080\000\044\000\093\000\000\000\000\000\000\000\
    \000\000\000\000\032\000\047\000\000\000\000\000\000\000\000\000\
    \085\000\088\000\038\000\099\000\038\000\000\000\038\000\000\000\
    \000\000\091\000\089\000\089\000\089\000\089\000\089\000\089\000\
    \089\000\089\000\089\000\089\000\038\000\000\000\000\000\000\000\
    \000\000\000\000\030\000\029\000\029\000\029\000\029\000\029\000\
    \029\000\029\000\029\000\029\000\029\000\029\000\029\000\029\000\
    \029\000\029\000\029\000\029\000\029\000\029\000\029\000\029\000\
    \029\000\029\000\029\000\029\000\029\000\000\000\091\000\000\000\
    \002\000\089\000\255\255\029\000\029\000\029\000\029\000\029\000\
    \029\000\029\000\029\000\029\000\029\000\029\000\029\000\029\000\
    \029\000\029\000\029\000\029\000\029\000\029\000\029\000\029\000\
    \029\000\029\000\029\000\029\000\029\000\067\000\000\000\000\000\
    \000\000\000\000\000\000\061\000\062\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\063\000\064\000\065\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\066\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\255\255\255\255\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\088\000\000\000\000\000\255\255\255\255\000\000\
    \255\255\000\000\255\255\089\000\089\000\089\000\089\000\089\000\
    \089\000\089\000\089\000\089\000\089\000\000\000\000\000\000\000\
    \255\255\000\000\000\000\000\000\089\000\089\000\089\000\089\000\
    \089\000\089\000\089\000\089\000\089\000\089\000\089\000\089\000\
    \089\000\089\000\089\000\089\000\089\000\089\000\089\000\089\000\
    \089\000\089\000\089\000\089\000\089\000\089\000\000\000\000\000\
    \000\000\000\000\089\000\000\000\089\000\089\000\089\000\089\000\
    \089\000\089\000\089\000\089\000\089\000\089\000\089\000\089\000\
    \089\000\089\000\089\000\089\000\089\000\089\000\089\000\089\000\
    \089\000\089\000\089\000\089\000\089\000\089\000\000\000\000\000\
    \000\000\255\255\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000";
  Lexing.lex_check =
   "\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\000\000\000\000\255\255\034\000\000\000\003\000\003\000\
    \255\255\255\255\003\000\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \000\000\000\000\000\000\000\000\000\000\003\000\000\000\005\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\006\000\000\000\009\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\004\000\
    \004\000\004\000\004\000\004\000\004\000\004\000\004\000\004\000\
    \004\000\010\000\019\000\026\000\028\000\030\000\030\000\033\000\
    \035\000\030\000\037\000\030\000\038\000\030\000\030\000\030\000\
    \030\000\040\000\042\000\041\000\044\000\048\000\050\000\051\000\
    \052\000\052\000\039\000\057\000\030\000\059\000\032\000\032\000\
    \041\000\047\000\054\000\054\000\030\000\066\000\051\000\055\000\
    \055\000\056\000\056\000\058\000\059\000\058\000\032\000\083\000\
    \092\000\053\000\053\000\032\000\091\000\255\255\255\255\255\255\
    \255\255\255\255\000\000\046\000\255\255\255\255\255\255\255\255\
    \051\000\029\000\035\000\097\000\037\000\255\255\038\000\255\255\
    \255\255\026\000\029\000\029\000\029\000\029\000\029\000\029\000\
    \029\000\029\000\029\000\029\000\039\000\255\255\255\255\255\255\
    \255\255\255\255\000\000\029\000\029\000\029\000\029\000\029\000\
    \029\000\029\000\029\000\029\000\029\000\029\000\029\000\029\000\
    \029\000\029\000\029\000\029\000\029\000\029\000\029\000\029\000\
    \029\000\029\000\029\000\029\000\029\000\255\255\092\000\255\255\
    \000\000\029\000\034\000\029\000\029\000\029\000\029\000\029\000\
    \029\000\029\000\029\000\029\000\029\000\029\000\029\000\029\000\
    \029\000\029\000\029\000\029\000\029\000\029\000\029\000\029\000\
    \029\000\029\000\029\000\029\000\029\000\060\000\255\255\255\255\
    \255\255\255\255\255\255\060\000\060\000\255\255\255\255\255\255\
    \255\255\255\255\255\255\060\000\060\000\060\000\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\060\000\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\040\000\042\000\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\089\000\255\255\255\255\041\000\035\000\255\255\
    \037\000\255\255\038\000\089\000\089\000\089\000\089\000\089\000\
    \089\000\089\000\089\000\089\000\089\000\255\255\255\255\255\255\
    \039\000\255\255\255\255\255\255\089\000\089\000\089\000\089\000\
    \089\000\089\000\089\000\089\000\089\000\089\000\089\000\089\000\
    \089\000\089\000\089\000\089\000\089\000\089\000\089\000\089\000\
    \089\000\089\000\089\000\089\000\089\000\089\000\255\255\255\255\
    \255\255\255\255\089\000\255\255\089\000\089\000\089\000\089\000\
    \089\000\089\000\089\000\089\000\089\000\089\000\089\000\089\000\
    \089\000\089\000\089\000\089\000\089\000\089\000\089\000\089\000\
    \089\000\089\000\089\000\089\000\089\000\089\000\255\255\255\255\
    \255\255\097\000\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255";
  Lexing.lex_base_code =
   "";
  Lexing.lex_backtrk_code =
   "";
  Lexing.lex_default_code =
   "";
  Lexing.lex_trans_code =
   "";
  Lexing.lex_check_code =
   "";
  Lexing.lex_code =
   "";
}

let rec token lexbuf =
   __ocaml_lex_token_rec lexbuf 0
and __ocaml_lex_token_rec lexbuf __ocaml_lex_state =
  match Lexing.engine __ocaml_lex_tables __ocaml_lex_state lexbuf with
      | 0 ->
let
# 16 "imp_lexer.mll"
                                  lxm
# 221 "imp_lexer.ml"
= Lexing.sub_lexeme lexbuf (lexbuf.Lexing.lex_start_pos + 1) (lexbuf.Lexing.lex_curr_pos + -1) in
# 16 "imp_lexer.mll"
                                            ( STG(lxm) )
# 225 "imp_lexer.ml"

  | 1 ->
# 17 "imp_lexer.mll"
                    ( Util.pnt true "start line comment\n"; token lexbuf )
# 230 "imp_lexer.ml"

  | 2 ->
# 18 "imp_lexer.mll"
                      ( token lexbuf )
# 235 "imp_lexer.ml"

  | 3 ->
# 19 "imp_lexer.mll"
            ( LCE )
# 240 "imp_lexer.ml"

  | 4 ->
# 20 "imp_lexer.mll"
              ( MDL )
# 245 "imp_lexer.ml"

  | 5 ->
# 21 "imp_lexer.mll"
              ( MDL_END )
# 250 "imp_lexer.ml"

  | 6 ->
# 22 "imp_lexer.mll"
           ( DTA )
# 255 "imp_lexer.ml"

  | 7 ->
# 23 "imp_lexer.mll"
            ( SLH )
# 260 "imp_lexer.ml"

  | 8 ->
# 24 "imp_lexer.mll"
            ( FOR_ALL )
# 265 "imp_lexer.ml"

  | 9 ->
let
# 25 "imp_lexer.mll"
               lxm
# 271 "imp_lexer.ml"
= Lexing.sub_lexeme lexbuf lexbuf.Lexing.lex_start_pos (lexbuf.Lexing.lex_curr_pos + -1) in
# 25 "imp_lexer.mll"
                         ( VAL(lxm) )
# 275 "imp_lexer.ml"

  | 10 ->
let
# 26 "imp_lexer.mll"
              lxm
# 281 "imp_lexer.ml"
= Lexing.sub_lexeme lexbuf lexbuf.Lexing.lex_start_pos lexbuf.Lexing.lex_curr_pos in
# 26 "imp_lexer.mll"
                  ( NAM(lxm) )
# 285 "imp_lexer.ml"

  | 11 ->
# 27 "imp_lexer.mll"
            ( ISO )
# 290 "imp_lexer.ml"

  | 12 ->
# 28 "imp_lexer.mll"
            ( DEQ )
# 295 "imp_lexer.ml"

  | 13 ->
# 29 "imp_lexer.mll"
              ( LET )
# 300 "imp_lexer.ml"

  | 14 ->
# 30 "imp_lexer.mll"
           ( ARR )
# 305 "imp_lexer.ml"

  | 15 ->
# 31 "imp_lexer.mll"
            ( INJ )
# 310 "imp_lexer.ml"

  | 16 ->
# 32 "imp_lexer.mll"
            ( CHO )
# 315 "imp_lexer.ml"

  | 17 ->
let
# 37 "imp_lexer.mll"
                 lxm
# 321 "imp_lexer.ml"
= Lexing.sub_lexeme lexbuf lexbuf.Lexing.lex_start_pos (lexbuf.Lexing.lex_curr_pos + -2) in
# 37 "imp_lexer.mll"
                           ( IN(String.length lxm) )
# 325 "imp_lexer.ml"

  | 18 ->
let
# 38 "imp_lexer.mll"
                      lxm
# 331 "imp_lexer.ml"
= Lexing.sub_lexeme lexbuf (lexbuf.Lexing.lex_start_pos + 2) lexbuf.Lexing.lex_curr_pos in
# 38 "imp_lexer.mll"
                            ( OUT(String.length lxm) )
# 335 "imp_lexer.ml"

  | 19 ->
# 39 "imp_lexer.mll"
            ( SRC )
# 340 "imp_lexer.ml"

  | 20 ->
# 40 "imp_lexer.mll"
            ( EMT )
# 345 "imp_lexer.ml"

  | 21 ->
# 41 "imp_lexer.mll"
            ( CNT )
# 350 "imp_lexer.ml"

  | 22 ->
# 42 "imp_lexer.mll"
          ( EXN )
# 355 "imp_lexer.ml"

  | 23 ->
# 43 "imp_lexer.mll"
          ( CLN )
# 360 "imp_lexer.ml"

  | 24 ->
# 44 "imp_lexer.mll"
          ( SPL )
# 365 "imp_lexer.ml"

  | 25 ->
# 45 "imp_lexer.mll"
                 ( AGL )
# 370 "imp_lexer.ml"

  | 26 ->
# 46 "imp_lexer.mll"
          ( R_BLK )
# 375 "imp_lexer.ml"

  | 27 ->
# 47 "imp_lexer.mll"
          ( L_BLK )
# 380 "imp_lexer.ml"

  | 28 ->
# 48 "imp_lexer.mll"
          ( SEQ )
# 385 "imp_lexer.ml"

  | 29 ->
# 49 "imp_lexer.mll"
            ( M_HLZ )
# 390 "imp_lexer.ml"

  | 30 ->
# 50 "imp_lexer.mll"
              ( COPRD )
# 395 "imp_lexer.ml"

  | 31 ->
# 51 "imp_lexer.mll"
              ( PRD )
# 400 "imp_lexer.ml"

  | 32 ->
# 52 "imp_lexer.mll"
            ( EOP )
# 405 "imp_lexer.ml"

  | 33 ->
# 53 "imp_lexer.mll"
            ( COPRD_END )
# 410 "imp_lexer.ml"

  | 34 ->
# 54 "imp_lexer.mll"
            ( PRD_END )
# 415 "imp_lexer.ml"

  | 35 ->
# 55 "imp_lexer.mll"
            ( DEF )
# 420 "imp_lexer.ml"

  | 36 ->
# 56 "imp_lexer.mll"
          ( ACT )
# 425 "imp_lexer.ml"

  | 37 ->
# 57 "imp_lexer.mll"
            ( CST )
# 430 "imp_lexer.ml"

  | 38 ->
# 58 "imp_lexer.mll"
          ( WC )
# 435 "imp_lexer.ml"

  | 39 ->
# 59 "imp_lexer.mll"
          ( L_RCD )
# 440 "imp_lexer.ml"

  | 40 ->
# 60 "imp_lexer.mll"
          ( R_RCD )
# 445 "imp_lexer.ml"

  | 41 ->
# 61 "imp_lexer.mll"
            ( L_HLZ )
# 450 "imp_lexer.ml"

  | 42 ->
# 62 "imp_lexer.mll"
            ( R_HLZ  )
# 455 "imp_lexer.ml"

  | 43 ->
# 63 "imp_lexer.mll"
            ( L_LST )
# 460 "imp_lexer.ml"

  | 44 ->
# 64 "imp_lexer.mll"
            ( R_LST )
# 465 "imp_lexer.ml"

  | 45 ->
# 65 "imp_lexer.mll"
            ( L_OPN )
# 470 "imp_lexer.ml"

  | 46 ->
# 66 "imp_lexer.mll"
            ( R_OPN )
# 475 "imp_lexer.ml"

  | 47 ->
# 67 "imp_lexer.mll"
          ( SGN )
# 480 "imp_lexer.ml"

  | 48 ->
# 68 "imp_lexer.mll"
          ( VCT )
# 485 "imp_lexer.ml"

  | 49 ->
# 69 "imp_lexer.mll"
          ( L_PRN )
# 490 "imp_lexer.ml"

  | 50 ->
# 70 "imp_lexer.mll"
          ( R_PRN )
# 495 "imp_lexer.ml"

  | 51 ->
# 71 "imp_lexer.mll"
          ( EQ )
# 500 "imp_lexer.ml"

  | 52 ->
# 72 "imp_lexer.mll"
          ( EXP )
# 505 "imp_lexer.ml"

  | 53 ->
# 73 "imp_lexer.mll"
            ( APP )
# 510 "imp_lexer.ml"

  | 54 ->
# 74 "imp_lexer.mll"
            ( PRJ )
# 515 "imp_lexer.ml"

  | 55 ->
# 75 "imp_lexer.mll"
            ( Z )
# 520 "imp_lexer.ml"

  | 56 ->
# 76 "imp_lexer.mll"
            ( N )
# 525 "imp_lexer.ml"

  | 57 ->
# 77 "imp_lexer.mll"
            ( TYP_STG )
# 530 "imp_lexer.ml"

  | 58 ->
# 78 "imp_lexer.mll"
          ( PLS )
# 535 "imp_lexer.ml"

  | 59 ->
# 79 "imp_lexer.mll"
          ( MLT )
# 540 "imp_lexer.ml"

  | 60 ->
# 80 "imp_lexer.mll"
          ( MNS )
# 545 "imp_lexer.ml"

  | 61 ->
# 81 "imp_lexer.mll"
          ( CMM )
# 550 "imp_lexer.ml"

  | 62 ->
let
# 82 "imp_lexer.mll"
                      lxm
# 556 "imp_lexer.ml"
= Lexing.sub_lexeme lexbuf (lexbuf.Lexing.lex_start_pos + 1) lexbuf.Lexing.lex_curr_pos in
# 82 "imp_lexer.mll"
                           ( ROT (String.length lxm) )
# 560 "imp_lexer.ml"

  | 63 ->
let
# 83 "imp_lexer.mll"
                      lxm
# 566 "imp_lexer.ml"
= Lexing.sub_lexeme lexbuf (lexbuf.Lexing.lex_start_pos + 1) lexbuf.Lexing.lex_curr_pos in
# 83 "imp_lexer.mll"
                           ( SLF (String.length lxm) )
# 570 "imp_lexer.ml"

  | 64 ->
# 84 "imp_lexer.mll"
              ( APP_EVL )
# 575 "imp_lexer.ml"

  | 65 ->
# 85 "imp_lexer.mll"
            ( PLS_EVL )
# 580 "imp_lexer.ml"

  | 66 ->
# 86 "imp_lexer.mll"
            ( MLT_EVL )
# 585 "imp_lexer.ml"

  | 67 ->
# 87 "imp_lexer.mll"
             ( AGL )
# 590 "imp_lexer.ml"

  | 68 ->
let
# 88 "imp_lexer.mll"
                lxm
# 596 "imp_lexer.ml"
= Lexing.sub_lexeme lexbuf lexbuf.Lexing.lex_start_pos lexbuf.Lexing.lex_curr_pos in
# 88 "imp_lexer.mll"
                     ( INT (int_of_string lxm) )
# 600 "imp_lexer.ml"

  | 69 ->
# 89 "imp_lexer.mll"
                    ( token lexbuf                         )
# 605 "imp_lexer.ml"

  | 70 ->
# 90 "imp_lexer.mll"
                    ( EOF               )
# 610 "imp_lexer.ml"

  | 71 ->
# 91 "imp_lexer.mll"
                    ( raise (Error (Printf.sprintf
                      "At offset %d: unexpected character.\n"
                      (Lexing.lexeme_start lexbuf))) )
# 617 "imp_lexer.ml"

  | __ocaml_lex_state -> lexbuf.Lexing.refill_buff lexbuf;
      __ocaml_lex_token_rec lexbuf __ocaml_lex_state

and line_comment lexbuf =
   __ocaml_lex_line_comment_rec lexbuf 97
and __ocaml_lex_line_comment_rec lexbuf __ocaml_lex_state =
  match Lexing.engine __ocaml_lex_tables __ocaml_lex_state lexbuf with
      | 0 ->
# 95 "imp_lexer.mll"
          ( Util.pnt true "end line comment\n"; token lexbuf )
# 629 "imp_lexer.ml"

  | 1 ->
# 96 "imp_lexer.mll"
      ( line_comment lexbuf )
# 634 "imp_lexer.ml"

  | __ocaml_lex_state -> lexbuf.Lexing.refill_buff lexbuf;
      __ocaml_lex_line_comment_rec lexbuf __ocaml_lex_state

;;

