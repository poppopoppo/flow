# 1 "imp_lexer.mll"
 
    open Imp_parser
    exception Error of string

# 7 "imp_lexer.ml"
let __ocaml_lex_tables = {
  Lexing.lex_base =
   "\000\000\154\255\155\255\118\000\160\255\090\000\091\000\093\000\
    \164\255\086\000\170\255\171\255\172\255\180\255\181\255\182\255\
    \183\255\184\255\185\255\186\255\191\255\192\255\040\000\199\255\
    \211\255\042\000\214\255\078\000\228\255\229\255\013\000\025\000\
    \192\000\250\000\020\000\241\255\001\000\078\001\096\000\149\000\
    \136\000\255\255\051\001\140\000\179\255\118\000\067\000\253\255\
    \161\255\111\000\147\000\157\000\048\000\103\001\158\001\115\000\
    \249\255\250\255\219\255\041\000\042\000\043\000\021\000\148\000\
    \002\000\127\000\247\255\130\000\245\255\000\000\135\000\001\000\
    \048\000\028\000\243\255\242\255\060\000\225\255\056\000\069\000\
    \001\000\050\000\089\000\058\000\092\000\099\000\101\001\201\255\
    \202\255\065\000\206\255\095\001\102\000\240\255\126\001\214\001\
    \195\255\165\255\208\255\129\000\207\255\204\255\177\255\100\000\
    \234\255\200\255\231\255\194\255\113\000\220\255\193\255\159\000\
    \161\000\224\001\234\001\197\255\244\001\004\002\196\255\189\255\
    \190\255\187\255\188\255\173\255\174\255\175\255\169\255\033\002\
    \108\002\238\255\192\002\066\000\251\000\233\255\243\000\112\000\
    \093\000\153\000\235\255\236\255\221\255\203\255\224\255\232\255\
    \217\255\178\255\167\255\166\255\077\001\254\255\255\255";
  Lexing.lex_backtrk =
   "\255\255\255\255\255\255\098\000\255\255\097\000\093\000\092\000\
    \255\255\101\000\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\057\000\255\255\
    \255\255\043\000\255\255\037\000\255\255\255\255\025\000\039\000\
    \018\000\101\000\101\000\255\255\101\000\097\000\042\000\001\000\
    \101\000\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\003\000\255\255\255\255\004\000\255\255\
    \255\255\255\255\255\255\029\000\028\000\087\000\011\000\007\000\
    \255\255\255\255\255\255\009\000\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\032\000\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\050\000\255\255\045\000\040\000\255\255\255\255\255\255\
    \255\255\255\255\255\255\046\000\255\255\255\255\255\255\079\000\
    \255\255\255\255\255\255\255\255\033\000\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\016\000\
    \016\000\255\255\018\000\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255";
  Lexing.lex_default =
   "\001\000\000\000\000\000\255\255\000\000\255\255\255\255\255\255\
    \000\000\255\255\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\255\255\000\000\
    \000\000\255\255\000\000\255\255\000\000\000\000\255\255\255\255\
    \255\255\255\255\255\255\000\000\255\255\255\255\255\255\039\000\
    \043\000\000\000\255\255\043\000\000\000\045\000\255\255\000\000\
    \000\000\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \000\000\000\000\000\000\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\000\000\255\255\000\000\255\255\255\255\255\255\
    \255\255\255\255\000\000\000\000\255\255\000\000\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\000\000\
    \000\000\255\255\000\000\255\255\255\255\000\000\255\255\255\255\
    \000\000\000\000\000\000\255\255\000\000\000\000\000\000\255\255\
    \000\000\000\000\000\000\000\000\255\255\000\000\000\000\255\255\
    \255\255\255\255\255\255\000\000\255\255\255\255\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\255\255\
    \255\255\000\000\255\255\255\255\255\255\000\000\255\255\255\255\
    \255\255\255\255\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\149\000\000\000\000\000";
  Lexing.lex_trans =
   "\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\003\000\003\000\000\000\000\000\003\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \003\000\013\000\040\000\018\000\007\000\033\000\019\000\015\000\
    \017\000\016\000\011\000\012\000\008\000\010\000\004\000\009\000\
    \037\000\005\000\005\000\005\000\005\000\005\000\005\000\005\000\
    \005\000\005\000\027\000\039\000\029\000\014\000\028\000\024\000\
    \006\000\032\000\032\000\032\000\032\000\032\000\032\000\032\000\
    \032\000\032\000\032\000\032\000\032\000\032\000\032\000\032\000\
    \032\000\032\000\032\000\032\000\032\000\032\000\032\000\032\000\
    \032\000\032\000\032\000\038\000\035\000\026\000\025\000\022\000\
    \023\000\032\000\032\000\032\000\032\000\032\000\032\000\032\000\
    \032\000\032\000\032\000\032\000\032\000\032\000\032\000\032\000\
    \032\000\032\000\032\000\032\000\032\000\032\000\032\000\032\000\
    \032\000\032\000\032\000\021\000\031\000\020\000\030\000\003\000\
    \003\000\048\000\006\000\003\000\007\000\147\000\146\000\145\000\
    \144\000\143\000\005\000\005\000\005\000\005\000\005\000\005\000\
    \005\000\005\000\005\000\005\000\080\000\132\000\003\000\133\000\
    \079\000\078\000\082\000\045\000\086\000\084\000\083\000\255\255\
    \047\000\052\000\055\000\057\000\056\000\077\000\076\000\075\000\
    \063\000\067\000\041\000\085\000\059\000\061\000\041\000\066\000\
    \068\000\046\000\071\000\081\000\073\000\074\000\070\000\062\000\
    \076\000\126\000\122\000\121\000\060\000\101\000\044\000\065\000\
    \058\000\094\000\036\000\051\000\051\000\051\000\051\000\051\000\
    \051\000\051\000\051\000\051\000\051\000\051\000\051\000\051\000\
    \051\000\051\000\051\000\051\000\051\000\051\000\051\000\069\000\
    \120\000\119\000\124\000\131\000\108\000\100\000\123\000\106\000\
    \104\000\053\000\034\000\072\000\042\000\102\000\103\000\129\000\
    \042\000\125\000\112\000\110\000\111\000\109\000\105\000\107\000\
    \130\000\130\000\130\000\130\000\130\000\130\000\130\000\130\000\
    \130\000\130\000\116\000\134\000\113\000\142\000\141\000\140\000\
    \002\000\032\000\032\000\032\000\032\000\032\000\032\000\032\000\
    \032\000\032\000\032\000\032\000\032\000\032\000\032\000\032\000\
    \032\000\032\000\032\000\032\000\032\000\032\000\032\000\032\000\
    \032\000\032\000\032\000\139\000\138\000\000\000\000\000\130\000\
    \000\000\032\000\032\000\032\000\032\000\032\000\032\000\032\000\
    \032\000\032\000\032\000\032\000\032\000\032\000\032\000\032\000\
    \032\000\032\000\032\000\032\000\032\000\032\000\032\000\032\000\
    \032\000\032\000\032\000\127\000\127\000\127\000\127\000\127\000\
    \127\000\127\000\127\000\127\000\127\000\127\000\127\000\127\000\
    \127\000\127\000\127\000\127\000\127\000\127\000\127\000\127\000\
    \127\000\127\000\127\000\127\000\127\000\043\000\064\000\150\000\
    \000\000\000\000\043\000\127\000\127\000\127\000\127\000\127\000\
    \127\000\127\000\127\000\127\000\127\000\127\000\127\000\127\000\
    \127\000\127\000\127\000\127\000\127\000\127\000\127\000\127\000\
    \127\000\127\000\127\000\127\000\127\000\048\000\255\255\132\000\
    \000\000\000\000\000\000\135\000\000\000\136\000\005\000\005\000\
    \005\000\005\000\005\000\005\000\005\000\005\000\005\000\005\000\
    \255\255\097\000\137\000\000\000\255\255\099\000\000\000\043\000\
    \000\000\000\000\000\000\000\000\000\000\255\255\000\000\054\000\
    \054\000\054\000\054\000\054\000\054\000\054\000\054\000\054\000\
    \054\000\043\000\000\000\000\000\000\000\000\000\000\000\043\000\
    \054\000\054\000\054\000\054\000\054\000\054\000\095\000\095\000\
    \095\000\095\000\095\000\095\000\095\000\095\000\095\000\095\000\
    \000\000\000\000\000\000\098\000\000\000\131\000\000\000\000\000\
    \050\000\000\000\000\000\000\000\000\000\000\000\049\000\000\000\
    \054\000\054\000\054\000\054\000\054\000\054\000\054\000\054\000\
    \054\000\054\000\054\000\054\000\054\000\054\000\054\000\054\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\054\000\
    \054\000\054\000\054\000\054\000\054\000\093\000\000\000\000\000\
    \000\000\000\000\000\000\087\000\088\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\089\000\090\000\091\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\054\000\
    \054\000\054\000\054\000\054\000\054\000\092\000\095\000\095\000\
    \095\000\095\000\095\000\095\000\095\000\095\000\095\000\095\000\
    \114\000\114\000\114\000\114\000\114\000\114\000\114\000\114\000\
    \114\000\114\000\114\000\114\000\114\000\114\000\114\000\114\000\
    \114\000\114\000\114\000\114\000\117\000\117\000\117\000\117\000\
    \117\000\117\000\117\000\117\000\117\000\117\000\000\000\000\000\
    \000\000\000\000\000\000\096\000\117\000\117\000\117\000\117\000\
    \117\000\117\000\117\000\117\000\117\000\117\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\115\000\
    \000\000\000\000\000\000\000\000\000\000\255\255\000\000\000\000\
    \000\000\128\000\128\000\128\000\128\000\128\000\128\000\128\000\
    \128\000\128\000\128\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\118\000\127\000\127\000\127\000\127\000\127\000\127\000\
    \127\000\127\000\127\000\127\000\127\000\127\000\127\000\127\000\
    \127\000\127\000\127\000\127\000\127\000\127\000\127\000\127\000\
    \127\000\127\000\127\000\127\000\000\000\000\000\000\000\000\000\
    \128\000\000\000\127\000\127\000\127\000\127\000\127\000\127\000\
    \127\000\127\000\127\000\127\000\127\000\127\000\127\000\127\000\
    \127\000\127\000\127\000\127\000\127\000\127\000\127\000\127\000\
    \127\000\127\000\127\000\127\000\128\000\128\000\128\000\128\000\
    \128\000\128\000\128\000\128\000\128\000\128\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\128\000\128\000\128\000\
    \128\000\128\000\128\000\128\000\128\000\128\000\128\000\128\000\
    \128\000\128\000\128\000\128\000\128\000\128\000\128\000\128\000\
    \128\000\128\000\128\000\128\000\128\000\128\000\128\000\000\000\
    \000\000\000\000\000\000\128\000\000\000\128\000\128\000\128\000\
    \128\000\128\000\128\000\128\000\128\000\128\000\128\000\128\000\
    \128\000\128\000\128\000\128\000\128\000\128\000\128\000\128\000\
    \128\000\128\000\128\000\128\000\128\000\128\000\128\000\129\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \130\000\130\000\130\000\130\000\130\000\130\000\130\000\130\000\
    \130\000\130\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\130\000\130\000\130\000\130\000\130\000\130\000\130\000\
    \130\000\130\000\130\000\130\000\130\000\130\000\130\000\130\000\
    \130\000\130\000\130\000\130\000\130\000\130\000\130\000\130\000\
    \130\000\130\000\130\000\000\000\000\000\000\000\000\000\130\000\
    \000\000\130\000\130\000\130\000\130\000\130\000\130\000\130\000\
    \130\000\130\000\130\000\130\000\130\000\130\000\130\000\130\000\
    \130\000\130\000\130\000\130\000\130\000\130\000\130\000\130\000\
    \130\000\130\000\130\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000";
  Lexing.lex_check =
   "\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\000\000\000\000\255\255\255\255\000\000\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\003\000\
    \003\000\005\000\006\000\003\000\007\000\009\000\022\000\025\000\
    \027\000\030\000\005\000\005\000\005\000\005\000\005\000\005\000\
    \005\000\005\000\005\000\005\000\034\000\031\000\003\000\031\000\
    \034\000\034\000\034\000\038\000\034\000\034\000\034\000\039\000\
    \046\000\049\000\052\000\055\000\055\000\059\000\060\000\061\000\
    \036\000\064\000\040\000\034\000\036\000\036\000\043\000\065\000\
    \067\000\045\000\070\000\034\000\072\000\073\000\069\000\036\000\
    \076\000\078\000\080\000\080\000\036\000\089\000\038\000\063\000\
    \036\000\092\000\000\000\050\000\050\000\050\000\050\000\050\000\
    \050\000\050\000\050\000\050\000\050\000\051\000\051\000\051\000\
    \051\000\051\000\051\000\051\000\051\000\051\000\051\000\062\000\
    \081\000\081\000\079\000\031\000\083\000\099\000\079\000\084\000\
    \103\000\049\000\000\000\071\000\040\000\085\000\085\000\032\000\
    \043\000\079\000\082\000\082\000\082\000\108\000\084\000\083\000\
    \032\000\032\000\032\000\032\000\032\000\032\000\032\000\032\000\
    \032\000\032\000\111\000\031\000\112\000\131\000\135\000\136\000\
    \000\000\032\000\032\000\032\000\032\000\032\000\032\000\032\000\
    \032\000\032\000\032\000\032\000\032\000\032\000\032\000\032\000\
    \032\000\032\000\032\000\032\000\032\000\032\000\032\000\032\000\
    \032\000\032\000\032\000\137\000\137\000\255\255\255\255\032\000\
    \255\255\032\000\032\000\032\000\032\000\032\000\032\000\032\000\
    \032\000\032\000\032\000\032\000\032\000\032\000\032\000\032\000\
    \032\000\032\000\032\000\032\000\032\000\032\000\032\000\032\000\
    \032\000\032\000\032\000\033\000\033\000\033\000\033\000\033\000\
    \033\000\033\000\033\000\033\000\033\000\033\000\033\000\033\000\
    \033\000\033\000\033\000\033\000\033\000\033\000\033\000\033\000\
    \033\000\033\000\033\000\033\000\033\000\042\000\063\000\148\000\
    \255\255\255\255\042\000\033\000\033\000\033\000\033\000\033\000\
    \033\000\033\000\033\000\033\000\033\000\033\000\033\000\033\000\
    \033\000\033\000\033\000\033\000\033\000\033\000\033\000\033\000\
    \033\000\033\000\033\000\033\000\033\000\037\000\045\000\132\000\
    \255\255\255\255\255\255\134\000\255\255\134\000\037\000\037\000\
    \037\000\037\000\037\000\037\000\037\000\037\000\037\000\037\000\
    \040\000\091\000\134\000\255\255\043\000\091\000\255\255\042\000\
    \255\255\255\255\255\255\255\255\255\255\039\000\255\255\053\000\
    \053\000\053\000\053\000\053\000\053\000\053\000\053\000\053\000\
    \053\000\042\000\255\255\255\255\255\255\255\255\255\255\042\000\
    \053\000\053\000\053\000\053\000\053\000\053\000\094\000\094\000\
    \094\000\094\000\094\000\094\000\094\000\094\000\094\000\094\000\
    \255\255\255\255\255\255\091\000\255\255\132\000\255\255\255\255\
    \037\000\255\255\255\255\255\255\255\255\255\255\037\000\255\255\
    \053\000\053\000\053\000\053\000\053\000\053\000\054\000\054\000\
    \054\000\054\000\054\000\054\000\054\000\054\000\054\000\054\000\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\054\000\
    \054\000\054\000\054\000\054\000\054\000\086\000\255\255\255\255\
    \255\255\255\255\255\255\086\000\086\000\255\255\255\255\255\255\
    \255\255\255\255\255\255\086\000\086\000\086\000\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\054\000\
    \054\000\054\000\054\000\054\000\054\000\086\000\095\000\095\000\
    \095\000\095\000\095\000\095\000\095\000\095\000\095\000\095\000\
    \113\000\113\000\113\000\113\000\113\000\113\000\113\000\113\000\
    \113\000\113\000\114\000\114\000\114\000\114\000\114\000\114\000\
    \114\000\114\000\114\000\114\000\116\000\116\000\116\000\116\000\
    \116\000\116\000\116\000\116\000\116\000\116\000\255\255\255\255\
    \255\255\255\255\255\255\095\000\117\000\117\000\117\000\117\000\
    \117\000\117\000\117\000\117\000\117\000\117\000\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\114\000\
    \255\255\255\255\255\255\255\255\255\255\148\000\255\255\255\255\
    \255\255\127\000\127\000\127\000\127\000\127\000\127\000\127\000\
    \127\000\127\000\127\000\255\255\255\255\255\255\255\255\255\255\
    \255\255\117\000\127\000\127\000\127\000\127\000\127\000\127\000\
    \127\000\127\000\127\000\127\000\127\000\127\000\127\000\127\000\
    \127\000\127\000\127\000\127\000\127\000\127\000\127\000\127\000\
    \127\000\127\000\127\000\127\000\255\255\255\255\255\255\255\255\
    \127\000\255\255\127\000\127\000\127\000\127\000\127\000\127\000\
    \127\000\127\000\127\000\127\000\127\000\127\000\127\000\127\000\
    \127\000\127\000\127\000\127\000\127\000\127\000\127\000\127\000\
    \127\000\127\000\127\000\127\000\128\000\128\000\128\000\128\000\
    \128\000\128\000\128\000\128\000\128\000\128\000\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\128\000\128\000\128\000\
    \128\000\128\000\128\000\128\000\128\000\128\000\128\000\128\000\
    \128\000\128\000\128\000\128\000\128\000\128\000\128\000\128\000\
    \128\000\128\000\128\000\128\000\128\000\128\000\128\000\255\255\
    \255\255\255\255\255\255\128\000\255\255\128\000\128\000\128\000\
    \128\000\128\000\128\000\128\000\128\000\128\000\128\000\128\000\
    \128\000\128\000\128\000\128\000\128\000\128\000\128\000\128\000\
    \128\000\128\000\128\000\128\000\128\000\128\000\128\000\130\000\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \130\000\130\000\130\000\130\000\130\000\130\000\130\000\130\000\
    \130\000\130\000\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\130\000\130\000\130\000\130\000\130\000\130\000\130\000\
    \130\000\130\000\130\000\130\000\130\000\130\000\130\000\130\000\
    \130\000\130\000\130\000\130\000\130\000\130\000\130\000\130\000\
    \130\000\130\000\130\000\255\255\255\255\255\255\255\255\130\000\
    \255\255\130\000\130\000\130\000\130\000\130\000\130\000\130\000\
    \130\000\130\000\130\000\130\000\130\000\130\000\130\000\130\000\
    \130\000\130\000\130\000\130\000\130\000\130\000\130\000\130\000\
    \130\000\130\000\130\000\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255";
  Lexing.lex_base_code =
   "";
  Lexing.lex_backtrk_code =
   "";
  Lexing.lex_default_code =
   "";
  Lexing.lex_trans_code =
   "";
  Lexing.lex_check_code =
   "";
  Lexing.lex_code =
   "";
}

let rec token lexbuf =
   __ocaml_lex_token_rec lexbuf 0
and __ocaml_lex_token_rec lexbuf __ocaml_lex_state =
  match Lexing.engine __ocaml_lex_tables __ocaml_lex_state lexbuf with
      | 0 ->
let
# 20 "imp_lexer.mll"
                                                                 lxm
# 335 "imp_lexer.ml"
= Lexing.sub_lexeme lexbuf (lexbuf.Lexing.lex_start_pos + 1) (lexbuf.Lexing.lex_curr_pos + -1) in
# 20 "imp_lexer.mll"
                                                                           ( STG(Scanf.unescaped lxm) )
# 339 "imp_lexer.ml"

  | 1 ->
# 21 "imp_lexer.mll"
                    ( Util.pnt true "start line comment\n"; token lexbuf )
# 344 "imp_lexer.ml"

  | 2 ->
# 22 "imp_lexer.mll"
                          ( token lexbuf )
# 349 "imp_lexer.ml"

  | 3 ->
let
# 23 "imp_lexer.mll"
                      lxm
# 355 "imp_lexer.ml"
= Lexing.sub_lexeme lexbuf (lexbuf.Lexing.lex_start_pos + 2) lexbuf.Lexing.lex_curr_pos in
# 23 "imp_lexer.mll"
                           ( R64(Int64.of_string lxm) )
# 359 "imp_lexer.ml"

  | 4 ->
let
# 24 "imp_lexer.mll"
                     lxm
# 365 "imp_lexer.ml"
= Lexing.sub_lexeme lexbuf (lexbuf.Lexing.lex_start_pos + 3) lexbuf.Lexing.lex_curr_pos in
# 24 "imp_lexer.mll"
                          ( R64(Int64.of_string ("0x"^lxm)) )
# 369 "imp_lexer.ml"

  | 5 ->
# 25 "imp_lexer.mll"
              ( R2(false) )
# 374 "imp_lexer.ml"

  | 6 ->
# 26 "imp_lexer.mll"
              ( R2(true) )
# 379 "imp_lexer.ml"

  | 7 ->
# 27 "imp_lexer.mll"
            ( LCE )
# 384 "imp_lexer.ml"

  | 8 ->
# 28 "imp_lexer.mll"
             ( LCE_IR  )
# 389 "imp_lexer.ml"

  | 9 ->
# 29 "imp_lexer.mll"
              ( MDL )
# 394 "imp_lexer.ml"

  | 10 ->
# 30 "imp_lexer.mll"
              ( MDL_END )
# 399 "imp_lexer.ml"

  | 11 ->
# 31 "imp_lexer.mll"
           ( DTA )
# 404 "imp_lexer.ml"

  | 12 ->
# 32 "imp_lexer.mll"
                 ( DTA_GRM )
# 409 "imp_lexer.ml"

  | 13 ->
# 33 "imp_lexer.mll"
             ( NOT_SPL )
# 414 "imp_lexer.ml"

  | 14 ->
# 34 "imp_lexer.mll"
            ( SLH )
# 419 "imp_lexer.ml"

  | 15 ->
# 35 "imp_lexer.mll"
            ( FOR_ALL )
# 424 "imp_lexer.ml"

  | 16 ->
let
# 36 "imp_lexer.mll"
                   lxm
# 430 "imp_lexer.ml"
= Lexing.sub_lexeme lexbuf (lexbuf.Lexing.lex_start_pos + 1) lexbuf.Lexing.lex_curr_pos in
# 36 "imp_lexer.mll"
                        ( REG(lxm) )
# 434 "imp_lexer.ml"

  | 17 ->
let
# 37 "imp_lexer.mll"
               lxm
# 440 "imp_lexer.ml"
= Lexing.sub_lexeme lexbuf lexbuf.Lexing.lex_start_pos (lexbuf.Lexing.lex_curr_pos + -1) in
# 37 "imp_lexer.mll"
                         ( VAL(lxm) )
# 444 "imp_lexer.ml"

  | 18 ->
let
# 38 "imp_lexer.mll"
              lxm
# 450 "imp_lexer.ml"
= Lexing.sub_lexeme lexbuf lexbuf.Lexing.lex_start_pos lexbuf.Lexing.lex_curr_pos in
# 38 "imp_lexer.mll"
                  ( NAM(lxm) )
# 454 "imp_lexer.ml"

  | 19 ->
# 39 "imp_lexer.mll"
              ( OUT_IR )
# 459 "imp_lexer.ml"

  | 20 ->
# 40 "imp_lexer.mll"
              ( PRJ_IR  )
# 464 "imp_lexer.ml"

  | 21 ->
# 41 "imp_lexer.mll"
              ( CNS_IR  )
# 469 "imp_lexer.ml"

  | 22 ->
# 42 "imp_lexer.mll"
            ( INI_IR )
# 474 "imp_lexer.ml"

  | 23 ->
# 43 "imp_lexer.mll"
            ( MTC_IR )
# 479 "imp_lexer.ml"

  | 24 ->
# 44 "imp_lexer.mll"
            ( ISO )
# 484 "imp_lexer.ml"

  | 25 ->
# 45 "imp_lexer.mll"
          ( LET )
# 489 "imp_lexer.ml"

  | 26 ->
# 46 "imp_lexer.mll"
          ( OP )
# 494 "imp_lexer.ml"

  | 27 ->
# 47 "imp_lexer.mll"
          ( LB )
# 499 "imp_lexer.ml"

  | 28 ->
# 48 "imp_lexer.mll"
           ( ARR )
# 504 "imp_lexer.ml"

  | 29 ->
# 49 "imp_lexer.mll"
           ( ARR_REV )
# 509 "imp_lexer.ml"

  | 30 ->
# 50 "imp_lexer.mll"
             ( ARR_REV_IN )
# 514 "imp_lexer.ml"

  | 31 ->
let
# 51 "imp_lexer.mll"
                 lxm
# 520 "imp_lexer.ml"
= Lexing.sub_lexeme lexbuf lexbuf.Lexing.lex_start_pos (lexbuf.Lexing.lex_curr_pos + -2) in
# 51 "imp_lexer.mll"
                           ( IN(String.length lxm) )
# 524 "imp_lexer.ml"

  | 32 ->
let
# 52 "imp_lexer.mll"
                      lxm
# 530 "imp_lexer.ml"
= Lexing.sub_lexeme lexbuf (lexbuf.Lexing.lex_start_pos + 2) lexbuf.Lexing.lex_curr_pos in
# 52 "imp_lexer.mll"
                            ( OUT(String.length lxm) )
# 534 "imp_lexer.ml"

  | 33 ->
# 53 "imp_lexer.mll"
            ( SRC )
# 539 "imp_lexer.ml"

  | 34 ->
# 54 "imp_lexer.mll"
              ( SRC_OUT )
# 544 "imp_lexer.ml"

  | 35 ->
# 55 "imp_lexer.mll"
              ( SRC_IL )
# 549 "imp_lexer.ml"

  | 36 ->
# 56 "imp_lexer.mll"
           ( EXN )
# 554 "imp_lexer.ml"

  | 37 ->
# 57 "imp_lexer.mll"
          ( CLN )
# 559 "imp_lexer.ml"

  | 38 ->
# 58 "imp_lexer.mll"
           ( CLN2 )
# 564 "imp_lexer.ml"

  | 39 ->
# 59 "imp_lexer.mll"
          ( SPL )
# 569 "imp_lexer.ml"

  | 40 ->
# 60 "imp_lexer.mll"
             ( AGL )
# 574 "imp_lexer.ml"

  | 41 ->
# 61 "imp_lexer.mll"
          ( R_BLK )
# 579 "imp_lexer.ml"

  | 42 ->
# 62 "imp_lexer.mll"
          ( L_BLK )
# 584 "imp_lexer.ml"

  | 43 ->
# 63 "imp_lexer.mll"
          ( SEQ )
# 589 "imp_lexer.ml"

  | 44 ->
# 64 "imp_lexer.mll"
           ( MTC )
# 594 "imp_lexer.ml"

  | 45 ->
# 65 "imp_lexer.mll"
              ( COPRD )
# 599 "imp_lexer.ml"

  | 46 ->
# 66 "imp_lexer.mll"
             ( COPRD_END )
# 604 "imp_lexer.ml"

  | 47 ->
# 67 "imp_lexer.mll"
              ( COPRD_PTN )
# 609 "imp_lexer.ml"

  | 48 ->
# 68 "imp_lexer.mll"
               ( COPRD_PTN_END )
# 614 "imp_lexer.ml"

  | 49 ->
# 69 "imp_lexer.mll"
              ( PRD )
# 619 "imp_lexer.ml"

  | 50 ->
# 70 "imp_lexer.mll"
            ( EOP )
# 624 "imp_lexer.ml"

  | 51 ->
# 71 "imp_lexer.mll"
             ( EOP_EXN )
# 629 "imp_lexer.ml"

  | 52 ->
# 72 "imp_lexer.mll"
             ( EOP_OUT )
# 634 "imp_lexer.ml"

  | 53 ->
# 73 "imp_lexer.mll"
            ( COPRD_END )
# 639 "imp_lexer.ml"

  | 54 ->
# 74 "imp_lexer.mll"
            ( PRD_END )
# 644 "imp_lexer.ml"

  | 55 ->
# 75 "imp_lexer.mll"
            ( DEF )
# 649 "imp_lexer.ml"

  | 56 ->
# 76 "imp_lexer.mll"
          ( ACT )
# 654 "imp_lexer.ml"

  | 57 ->
# 78 "imp_lexer.mll"
          ( WC )
# 659 "imp_lexer.ml"

  | 58 ->
let
# 79 "imp_lexer.mll"
                        lxm
# 665 "imp_lexer.ml"
= Lexing.sub_lexeme lexbuf (lexbuf.Lexing.lex_start_pos + 4) (lexbuf.Lexing.lex_curr_pos + -1) in
# 79 "imp_lexer.mll"
                                 ( INJ(int_of_string lxm) )
# 669 "imp_lexer.ml"

  | 59 ->
let
# 80 "imp_lexer.mll"
                        lxm
# 675 "imp_lexer.ml"
= Lexing.sub_lexeme lexbuf (lexbuf.Lexing.lex_start_pos + 4) (lexbuf.Lexing.lex_curr_pos + -1) in
# 80 "imp_lexer.mll"
                                 ( CHO(int_of_string lxm) )
# 679 "imp_lexer.ml"

  | 60 ->
let
# 81 "imp_lexer.mll"
                        lxm
# 685 "imp_lexer.ml"
= Lexing.sub_lexeme lexbuf (lexbuf.Lexing.lex_start_pos + 4) (lexbuf.Lexing.lex_curr_pos + -1) in
# 81 "imp_lexer.mll"
                                 ( AGL_OP(int_of_string lxm) )
# 689 "imp_lexer.ml"

  | 61 ->
# 82 "imp_lexer.mll"
            ( VCT )
# 694 "imp_lexer.ml"

  | 62 ->
# 83 "imp_lexer.mll"
            ( IMP )
# 699 "imp_lexer.ml"

  | 63 ->
# 84 "imp_lexer.mll"
          ( L_RCD )
# 704 "imp_lexer.ml"

  | 64 ->
# 85 "imp_lexer.mll"
          ( R_RCD )
# 709 "imp_lexer.ml"

  | 65 ->
# 86 "imp_lexer.mll"
            ( L_LST )
# 714 "imp_lexer.ml"

  | 66 ->
# 87 "imp_lexer.mll"
            ( R_LST )
# 719 "imp_lexer.ml"

  | 67 ->
# 88 "imp_lexer.mll"
            ( L_OPN )
# 724 "imp_lexer.ml"

  | 68 ->
# 89 "imp_lexer.mll"
            ( R_OPN )
# 729 "imp_lexer.ml"

  | 69 ->
# 90 "imp_lexer.mll"
          ( SGN )
# 734 "imp_lexer.ml"

  | 70 ->
# 91 "imp_lexer.mll"
          ( VCT_INI )
# 739 "imp_lexer.ml"

  | 71 ->
# 92 "imp_lexer.mll"
          ( L_PRN )
# 744 "imp_lexer.ml"

  | 72 ->
# 93 "imp_lexer.mll"
          ( R_PRN )
# 749 "imp_lexer.ml"

  | 73 ->
# 94 "imp_lexer.mll"
           ( DSH )
# 754 "imp_lexer.ml"

  | 74 ->
# 95 "imp_lexer.mll"
          ( EQ )
# 759 "imp_lexer.ml"

  | 75 ->
# 96 "imp_lexer.mll"
          ( EXP )
# 764 "imp_lexer.ml"

  | 76 ->
# 97 "imp_lexer.mll"
           ( S8_STT )
# 769 "imp_lexer.ml"

  | 77 ->
# 98 "imp_lexer.mll"
           ( S8_END )
# 774 "imp_lexer.ml"

  | 78 ->
# 99 "imp_lexer.mll"
            ( APP )
# 779 "imp_lexer.ml"

  | 79 ->
# 100 "imp_lexer.mll"
            ( PRJ )
# 784 "imp_lexer.ml"

  | 80 ->
# 101 "imp_lexer.mll"
            ( Z )
# 789 "imp_lexer.ml"

  | 81 ->
# 102 "imp_lexer.mll"
            ( N )
# 794 "imp_lexer.ml"

  | 82 ->
# 103 "imp_lexer.mll"
            ( TYP_STG )
# 799 "imp_lexer.ml"

  | 83 ->
# 104 "imp_lexer.mll"
          ( PLS )
# 804 "imp_lexer.ml"

  | 84 ->
# 105 "imp_lexer.mll"
          ( MLT )
# 809 "imp_lexer.ml"

  | 85 ->
# 106 "imp_lexer.mll"
          ( MNS )
# 814 "imp_lexer.ml"

  | 86 ->
# 107 "imp_lexer.mll"
            ( GRM )
# 819 "imp_lexer.ml"

  | 87 ->
# 108 "imp_lexer.mll"
           ( NOT )
# 824 "imp_lexer.ml"

  | 88 ->
# 109 "imp_lexer.mll"
           ( S8_E )
# 829 "imp_lexer.ml"

  | 89 ->
# 110 "imp_lexer.mll"
           ( S8_P )
# 834 "imp_lexer.ml"

  | 90 ->
# 111 "imp_lexer.mll"
              ( ORD_LEX_COPRD )
# 839 "imp_lexer.ml"

  | 91 ->
# 112 "imp_lexer.mll"
          ( CMM )
# 844 "imp_lexer.ml"

  | 92 ->
let
# 113 "imp_lexer.mll"
                      lxm
# 850 "imp_lexer.ml"
= Lexing.sub_lexeme lexbuf (lexbuf.Lexing.lex_start_pos + 1) lexbuf.Lexing.lex_curr_pos in
# 113 "imp_lexer.mll"
                           ( ROT (String.length lxm) )
# 854 "imp_lexer.ml"

  | 93 ->
let
# 114 "imp_lexer.mll"
                      lxm
# 860 "imp_lexer.ml"
= Lexing.sub_lexeme lexbuf (lexbuf.Lexing.lex_start_pos + 1) lexbuf.Lexing.lex_curr_pos in
# 114 "imp_lexer.mll"
                           ( SLF (String.length lxm) )
# 864 "imp_lexer.ml"

  | 94 ->
let
# 115 "imp_lexer.mll"
                 lxm
# 870 "imp_lexer.ml"
= Lexing.sub_lexeme lexbuf lexbuf.Lexing.lex_start_pos (lexbuf.Lexing.lex_curr_pos + -1) in
# 115 "imp_lexer.mll"
                           ( IDX (int_of_string lxm) )
# 874 "imp_lexer.ml"

  | 95 ->
# 116 "imp_lexer.mll"
          ( DOT )
# 879 "imp_lexer.ml"

  | 96 ->
# 117 "imp_lexer.mll"
             ( AGL )
# 884 "imp_lexer.ml"

  | 97 ->
let
# 118 "imp_lexer.mll"
                lxm
# 890 "imp_lexer.ml"
= Lexing.sub_lexeme lexbuf lexbuf.Lexing.lex_start_pos lexbuf.Lexing.lex_curr_pos in
# 118 "imp_lexer.mll"
                     ( INT (int_of_string lxm) )
# 894 "imp_lexer.ml"

  | 98 ->
# 119 "imp_lexer.mll"
                    ( token lexbuf                         )
# 899 "imp_lexer.ml"

  | 99 ->
# 120 "imp_lexer.mll"
            ( NL )
# 904 "imp_lexer.ml"

  | 100 ->
# 121 "imp_lexer.mll"
                    ( EOF               )
# 909 "imp_lexer.ml"

  | 101 ->
# 122 "imp_lexer.mll"
                    ( raise (Error (Printf.sprintf
                      "At offset %d: unexpected character.\n"
                      (Lexing.lexeme_start lexbuf))) )
# 916 "imp_lexer.ml"

  | __ocaml_lex_state -> lexbuf.Lexing.refill_buff lexbuf;
      __ocaml_lex_token_rec lexbuf __ocaml_lex_state

and line_comment lexbuf =
   __ocaml_lex_line_comment_rec lexbuf 148
and __ocaml_lex_line_comment_rec lexbuf __ocaml_lex_state =
  match Lexing.engine __ocaml_lex_tables __ocaml_lex_state lexbuf with
      | 0 ->
# 126 "imp_lexer.mll"
          ( Util.pnt true "end line comment\n"; token lexbuf )
# 928 "imp_lexer.ml"

  | 1 ->
# 127 "imp_lexer.mll"
      ( line_comment lexbuf )
# 933 "imp_lexer.ml"

  | __ocaml_lex_state -> lexbuf.Lexing.refill_buff lexbuf;
      __ocaml_lex_line_comment_rec lexbuf __ocaml_lex_state

;;

