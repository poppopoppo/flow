# 1 "imp_lexer.mll"
 
    open Imp_parser
    exception Error of string

# 7 "imp_lexer.ml"
let __ocaml_lex_tables = {
  Lexing.lex_base =
   "\000\000\148\255\149\255\118\000\090\000\091\000\093\000\158\255\
    \086\000\164\255\165\255\166\255\174\255\175\255\176\255\177\255\
    \178\255\179\255\180\255\185\255\186\255\206\255\041\000\209\255\
    \077\000\223\255\224\255\012\000\025\000\192\000\020\001\078\001\
    \020\000\237\255\091\000\001\000\162\001\096\000\170\000\171\000\
    \077\001\255\255\125\000\080\001\254\255\174\000\173\255\116\000\
    \067\000\252\255\155\255\111\000\147\000\157\000\048\000\172\001\
    \195\001\117\000\248\255\249\255\214\255\039\000\043\000\045\000\
    \021\000\192\001\003\000\126\000\245\255\246\255\243\255\130\000\
    \241\255\000\000\134\000\001\000\046\000\032\000\239\255\238\255\
    \062\000\220\255\244\255\058\000\067\000\036\000\057\000\083\000\
    \056\000\101\000\103\000\156\001\195\255\196\255\112\000\201\255\
    \147\000\100\000\236\255\253\001\015\002\189\255\159\255\203\255\
    \146\000\202\255\104\000\199\255\100\000\197\255\171\255\119\000\
    \229\255\194\255\226\255\188\255\120\000\215\255\187\255\154\000\
    \155\000\033\002\043\002\191\255\061\002\071\002\190\255\183\255\
    \184\255\181\255\182\255\167\255\168\255\169\255\163\255\100\002\
    \175\002\234\255\003\003\161\255\078\003\153\003\061\000\125\000\
    \228\255\184\000\108\000\090\000\123\000\230\255\231\255\216\255\
    \198\255\219\255\227\255\212\255\172\255\160\255\019\001\254\255\
    \255\255";
  Lexing.lex_backtrk =
   "\255\255\255\255\255\255\104\000\103\000\099\000\098\000\255\255\
    \107\000\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\048\000\255\255\
    \042\000\255\255\255\255\030\000\044\000\063\000\022\000\107\000\
    \107\000\255\255\101\000\107\000\103\000\047\000\002\000\062\000\
    \107\000\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\004\000\255\255\255\255\
    \005\000\255\255\255\255\255\255\255\255\034\000\033\000\093\000\
    \015\000\008\000\255\255\255\255\255\255\255\255\255\255\013\000\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \037\000\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\055\000\255\255\
    \050\000\045\000\255\255\255\255\255\255\255\255\255\255\255\255\
    \051\000\255\255\255\255\255\255\255\255\255\255\255\255\085\000\
    \255\255\255\255\255\255\255\255\038\000\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\020\000\
    \020\000\255\255\022\000\255\255\023\000\023\000\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255";
  Lexing.lex_default =
   "\001\000\000\000\000\000\255\255\255\255\255\255\255\255\000\000\
    \255\255\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\255\255\000\000\
    \255\255\000\000\000\000\255\255\255\255\255\255\255\255\255\255\
    \255\255\000\000\255\255\255\255\255\255\255\255\038\000\045\000\
    \043\000\000\000\255\255\043\000\000\000\045\000\000\000\047\000\
    \255\255\000\000\000\000\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\000\000\000\000\000\000\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\000\000\000\000\000\000\255\255\
    \000\000\255\255\255\255\255\255\255\255\255\255\000\000\000\000\
    \255\255\000\000\000\000\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\000\000\000\000\255\255\000\000\
    \255\255\255\255\000\000\255\255\255\255\000\000\000\000\000\000\
    \255\255\000\000\255\255\000\000\255\255\000\000\000\000\255\255\
    \000\000\000\000\000\000\000\000\255\255\000\000\000\000\255\255\
    \255\255\255\255\255\255\000\000\255\255\255\255\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\255\255\
    \255\255\000\000\255\255\000\000\255\255\255\255\255\255\255\255\
    \000\000\255\255\255\255\255\255\255\255\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\159\000\000\000\
    \000\000";
  Lexing.lex_trans =
   "\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\003\000\003\000\000\000\000\000\003\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \003\000\012\000\040\000\017\000\006\000\031\000\018\000\014\000\
    \016\000\015\000\010\000\011\000\007\000\009\000\034\000\008\000\
    \036\000\004\000\004\000\004\000\004\000\004\000\004\000\004\000\
    \004\000\004\000\024\000\038\000\026\000\013\000\025\000\021\000\
    \005\000\030\000\030\000\030\000\030\000\030\000\030\000\030\000\
    \030\000\030\000\030\000\030\000\030\000\030\000\030\000\030\000\
    \030\000\030\000\030\000\030\000\030\000\030\000\030\000\030\000\
    \030\000\030\000\030\000\037\000\033\000\023\000\022\000\029\000\
    \039\000\030\000\030\000\030\000\030\000\030\000\030\000\030\000\
    \030\000\030\000\030\000\030\000\030\000\030\000\030\000\030\000\
    \030\000\030\000\030\000\030\000\030\000\030\000\030\000\030\000\
    \030\000\030\000\030\000\020\000\028\000\019\000\027\000\003\000\
    \003\000\050\000\005\000\003\000\006\000\157\000\156\000\155\000\
    \154\000\082\000\004\000\004\000\004\000\004\000\004\000\004\000\
    \004\000\004\000\004\000\004\000\085\000\143\000\003\000\144\000\
    \084\000\083\000\087\000\047\000\091\000\089\000\088\000\043\000\
    \049\000\054\000\057\000\081\000\043\000\059\000\058\000\080\000\
    \065\000\079\000\071\000\090\000\061\000\063\000\070\000\048\000\
    \072\000\075\000\077\000\086\000\255\255\044\000\074\000\064\000\
    \044\000\078\000\080\000\134\000\062\000\102\000\046\000\099\000\
    \060\000\104\000\035\000\053\000\053\000\053\000\053\000\053\000\
    \053\000\053\000\053\000\053\000\053\000\053\000\053\000\053\000\
    \053\000\053\000\053\000\053\000\053\000\053\000\053\000\073\000\
    \132\000\043\000\116\000\142\000\131\000\130\000\129\000\128\000\
    \127\000\055\000\032\000\076\000\120\000\118\000\119\000\133\000\
    \114\000\110\000\111\000\043\000\107\000\115\000\105\000\103\000\
    \108\000\043\000\109\000\112\000\117\000\124\000\121\000\113\000\
    \153\000\143\000\152\000\145\000\151\000\150\000\149\000\000\000\
    \002\000\140\000\140\000\140\000\140\000\140\000\140\000\140\000\
    \140\000\140\000\140\000\140\000\140\000\140\000\140\000\140\000\
    \140\000\140\000\140\000\140\000\140\000\140\000\140\000\140\000\
    \140\000\140\000\140\000\000\000\000\000\160\000\139\000\000\000\
    \000\000\140\000\140\000\140\000\140\000\140\000\140\000\140\000\
    \140\000\140\000\140\000\140\000\140\000\140\000\140\000\140\000\
    \140\000\140\000\140\000\140\000\140\000\140\000\140\000\140\000\
    \140\000\140\000\140\000\137\000\000\000\000\000\000\000\142\000\
    \146\000\000\000\147\000\000\000\138\000\138\000\138\000\138\000\
    \138\000\138\000\138\000\138\000\138\000\138\000\000\000\148\000\
    \000\000\000\000\106\000\000\000\000\000\030\000\030\000\030\000\
    \030\000\030\000\030\000\030\000\030\000\030\000\030\000\030\000\
    \030\000\030\000\030\000\030\000\030\000\030\000\030\000\030\000\
    \030\000\030\000\030\000\030\000\030\000\030\000\030\000\041\000\
    \000\000\000\000\041\000\138\000\255\255\030\000\030\000\030\000\
    \030\000\030\000\030\000\030\000\030\000\030\000\030\000\030\000\
    \030\000\030\000\030\000\030\000\030\000\030\000\030\000\030\000\
    \030\000\030\000\030\000\030\000\030\000\030\000\030\000\135\000\
    \135\000\135\000\135\000\135\000\135\000\135\000\135\000\135\000\
    \135\000\135\000\135\000\135\000\135\000\135\000\135\000\135\000\
    \135\000\135\000\135\000\135\000\135\000\135\000\135\000\135\000\
    \135\000\042\000\255\255\255\255\042\000\000\000\255\255\135\000\
    \135\000\135\000\135\000\135\000\135\000\135\000\135\000\135\000\
    \135\000\135\000\135\000\135\000\135\000\135\000\135\000\135\000\
    \135\000\135\000\135\000\135\000\135\000\135\000\135\000\135\000\
    \135\000\050\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\004\000\004\000\004\000\004\000\004\000\004\000\
    \004\000\004\000\004\000\004\000\056\000\056\000\056\000\056\000\
    \056\000\056\000\056\000\056\000\056\000\056\000\000\000\000\000\
    \000\000\000\000\000\000\067\000\000\000\056\000\056\000\056\000\
    \056\000\056\000\056\000\056\000\056\000\056\000\056\000\056\000\
    \056\000\056\000\056\000\056\000\056\000\069\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\056\000\056\000\056\000\056\000\
    \056\000\056\000\000\000\000\000\000\000\056\000\056\000\056\000\
    \056\000\056\000\056\000\255\255\052\000\000\000\000\000\000\000\
    \000\000\000\000\051\000\000\000\098\000\000\000\000\000\000\000\
    \000\000\000\000\092\000\093\000\056\000\056\000\056\000\056\000\
    \056\000\056\000\094\000\095\000\096\000\100\000\100\000\100\000\
    \100\000\100\000\100\000\100\000\100\000\100\000\100\000\000\000\
    \000\000\000\000\000\000\000\000\097\000\000\000\068\000\100\000\
    \100\000\100\000\100\000\100\000\100\000\100\000\100\000\100\000\
    \100\000\000\000\000\000\000\000\000\000\255\255\000\000\000\000\
    \255\255\122\000\122\000\122\000\122\000\122\000\122\000\122\000\
    \122\000\122\000\122\000\122\000\122\000\122\000\122\000\122\000\
    \122\000\122\000\122\000\122\000\122\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\101\000\125\000\125\000\125\000\
    \125\000\125\000\125\000\125\000\125\000\125\000\125\000\125\000\
    \125\000\125\000\125\000\125\000\125\000\125\000\125\000\125\000\
    \125\000\000\000\066\000\000\000\000\000\000\000\000\000\000\000\
    \123\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\136\000\136\000\136\000\136\000\
    \136\000\136\000\136\000\136\000\136\000\136\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\126\000\135\000\135\000\135\000\
    \135\000\135\000\135\000\135\000\135\000\135\000\135\000\135\000\
    \135\000\135\000\135\000\135\000\135\000\135\000\135\000\135\000\
    \135\000\135\000\135\000\135\000\135\000\135\000\135\000\000\000\
    \000\000\000\000\000\000\136\000\000\000\135\000\135\000\135\000\
    \135\000\135\000\135\000\135\000\135\000\135\000\135\000\135\000\
    \135\000\135\000\135\000\135\000\135\000\135\000\135\000\135\000\
    \135\000\135\000\135\000\135\000\135\000\135\000\135\000\136\000\
    \136\000\136\000\136\000\136\000\136\000\136\000\136\000\136\000\
    \136\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \136\000\136\000\136\000\136\000\136\000\136\000\136\000\136\000\
    \136\000\136\000\136\000\136\000\136\000\136\000\136\000\136\000\
    \136\000\136\000\136\000\136\000\136\000\136\000\136\000\136\000\
    \136\000\136\000\000\000\000\000\000\000\000\000\136\000\000\000\
    \136\000\136\000\136\000\136\000\136\000\136\000\136\000\136\000\
    \136\000\136\000\136\000\136\000\136\000\136\000\136\000\136\000\
    \136\000\136\000\136\000\136\000\136\000\136\000\136\000\136\000\
    \136\000\136\000\137\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\138\000\138\000\138\000\138\000\138\000\
    \138\000\138\000\138\000\138\000\138\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\138\000\138\000\138\000\138\000\
    \138\000\138\000\138\000\138\000\138\000\138\000\138\000\138\000\
    \138\000\138\000\138\000\138\000\138\000\138\000\138\000\138\000\
    \138\000\138\000\138\000\138\000\138\000\138\000\000\000\000\000\
    \000\000\000\000\138\000\000\000\138\000\138\000\138\000\138\000\
    \138\000\138\000\138\000\138\000\138\000\138\000\138\000\138\000\
    \138\000\138\000\138\000\138\000\138\000\138\000\138\000\138\000\
    \138\000\138\000\138\000\138\000\138\000\138\000\141\000\141\000\
    \141\000\141\000\141\000\141\000\141\000\141\000\141\000\141\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\140\000\
    \140\000\140\000\140\000\140\000\140\000\140\000\140\000\140\000\
    \140\000\140\000\140\000\140\000\140\000\140\000\140\000\140\000\
    \140\000\140\000\140\000\140\000\140\000\140\000\140\000\140\000\
    \140\000\000\000\000\000\000\000\000\000\141\000\000\000\140\000\
    \140\000\140\000\140\000\140\000\140\000\140\000\140\000\140\000\
    \140\000\140\000\140\000\140\000\140\000\140\000\140\000\140\000\
    \140\000\140\000\140\000\140\000\140\000\140\000\140\000\140\000\
    \140\000\141\000\141\000\141\000\141\000\141\000\141\000\141\000\
    \141\000\141\000\141\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\141\000\141\000\141\000\141\000\141\000\141\000\
    \141\000\141\000\141\000\141\000\141\000\141\000\141\000\141\000\
    \141\000\141\000\141\000\141\000\141\000\141\000\141\000\141\000\
    \141\000\141\000\141\000\141\000\000\000\000\000\000\000\000\000\
    \141\000\000\000\141\000\141\000\141\000\141\000\141\000\141\000\
    \141\000\141\000\141\000\141\000\141\000\141\000\141\000\141\000\
    \141\000\141\000\141\000\141\000\141\000\141\000\141\000\141\000\
    \141\000\141\000\141\000\141\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000";
  Lexing.lex_check =
   "\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\000\000\000\000\255\255\255\255\000\000\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\003\000\
    \003\000\004\000\005\000\003\000\006\000\008\000\022\000\024\000\
    \027\000\034\000\004\000\004\000\004\000\004\000\004\000\004\000\
    \004\000\004\000\004\000\004\000\032\000\028\000\003\000\028\000\
    \032\000\032\000\032\000\037\000\032\000\032\000\032\000\042\000\
    \048\000\051\000\054\000\061\000\042\000\057\000\057\000\062\000\
    \035\000\063\000\066\000\032\000\035\000\035\000\067\000\047\000\
    \071\000\074\000\076\000\032\000\038\000\039\000\073\000\035\000\
    \045\000\077\000\080\000\083\000\035\000\096\000\037\000\097\000\
    \035\000\096\000\000\000\052\000\052\000\052\000\052\000\052\000\
    \052\000\052\000\052\000\052\000\052\000\053\000\053\000\053\000\
    \053\000\053\000\053\000\053\000\053\000\053\000\053\000\064\000\
    \084\000\042\000\088\000\028\000\084\000\085\000\085\000\086\000\
    \086\000\051\000\000\000\075\000\087\000\087\000\087\000\084\000\
    \089\000\090\000\090\000\042\000\094\000\088\000\104\000\096\000\
    \106\000\042\000\108\000\111\000\116\000\119\000\120\000\089\000\
    \142\000\143\000\146\000\028\000\147\000\148\000\148\000\255\255\
    \000\000\029\000\029\000\029\000\029\000\029\000\029\000\029\000\
    \029\000\029\000\029\000\029\000\029\000\029\000\029\000\029\000\
    \029\000\029\000\029\000\029\000\029\000\029\000\029\000\029\000\
    \029\000\029\000\029\000\255\255\255\255\158\000\029\000\255\255\
    \255\255\029\000\029\000\029\000\029\000\029\000\029\000\029\000\
    \029\000\029\000\029\000\029\000\029\000\029\000\029\000\029\000\
    \029\000\029\000\029\000\029\000\029\000\029\000\029\000\029\000\
    \029\000\029\000\029\000\030\000\255\255\255\255\255\255\143\000\
    \145\000\255\255\145\000\255\255\030\000\030\000\030\000\030\000\
    \030\000\030\000\030\000\030\000\030\000\030\000\255\255\145\000\
    \255\255\255\255\094\000\255\255\255\255\030\000\030\000\030\000\
    \030\000\030\000\030\000\030\000\030\000\030\000\030\000\030\000\
    \030\000\030\000\030\000\030\000\030\000\030\000\030\000\030\000\
    \030\000\030\000\030\000\030\000\030\000\030\000\030\000\040\000\
    \255\255\255\255\043\000\030\000\047\000\030\000\030\000\030\000\
    \030\000\030\000\030\000\030\000\030\000\030\000\030\000\030\000\
    \030\000\030\000\030\000\030\000\030\000\030\000\030\000\030\000\
    \030\000\030\000\030\000\030\000\030\000\030\000\030\000\031\000\
    \031\000\031\000\031\000\031\000\031\000\031\000\031\000\031\000\
    \031\000\031\000\031\000\031\000\031\000\031\000\031\000\031\000\
    \031\000\031\000\031\000\031\000\031\000\031\000\031\000\031\000\
    \031\000\040\000\038\000\039\000\043\000\255\255\045\000\031\000\
    \031\000\031\000\031\000\031\000\031\000\031\000\031\000\031\000\
    \031\000\031\000\031\000\031\000\031\000\031\000\031\000\031\000\
    \031\000\031\000\031\000\031\000\031\000\031\000\031\000\031\000\
    \031\000\036\000\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\036\000\036\000\036\000\036\000\036\000\036\000\
    \036\000\036\000\036\000\036\000\055\000\055\000\055\000\055\000\
    \055\000\055\000\055\000\055\000\055\000\055\000\255\255\255\255\
    \255\255\255\255\255\255\065\000\255\255\055\000\055\000\055\000\
    \055\000\055\000\055\000\056\000\056\000\056\000\056\000\056\000\
    \056\000\056\000\056\000\056\000\056\000\065\000\255\255\255\255\
    \255\255\255\255\255\255\255\255\056\000\056\000\056\000\056\000\
    \056\000\056\000\255\255\255\255\255\255\055\000\055\000\055\000\
    \055\000\055\000\055\000\158\000\036\000\255\255\255\255\255\255\
    \255\255\255\255\036\000\255\255\091\000\255\255\255\255\255\255\
    \255\255\255\255\091\000\091\000\056\000\056\000\056\000\056\000\
    \056\000\056\000\091\000\091\000\091\000\099\000\099\000\099\000\
    \099\000\099\000\099\000\099\000\099\000\099\000\099\000\255\255\
    \255\255\255\255\255\255\255\255\091\000\255\255\065\000\100\000\
    \100\000\100\000\100\000\100\000\100\000\100\000\100\000\100\000\
    \100\000\255\255\255\255\255\255\255\255\040\000\255\255\255\255\
    \043\000\121\000\121\000\121\000\121\000\121\000\121\000\121\000\
    \121\000\121\000\121\000\122\000\122\000\122\000\122\000\122\000\
    \122\000\122\000\122\000\122\000\122\000\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\100\000\124\000\124\000\124\000\
    \124\000\124\000\124\000\124\000\124\000\124\000\124\000\125\000\
    \125\000\125\000\125\000\125\000\125\000\125\000\125\000\125\000\
    \125\000\255\255\065\000\255\255\255\255\255\255\255\255\255\255\
    \122\000\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\135\000\135\000\135\000\135\000\
    \135\000\135\000\135\000\135\000\135\000\135\000\255\255\255\255\
    \255\255\255\255\255\255\255\255\125\000\135\000\135\000\135\000\
    \135\000\135\000\135\000\135\000\135\000\135\000\135\000\135\000\
    \135\000\135\000\135\000\135\000\135\000\135\000\135\000\135\000\
    \135\000\135\000\135\000\135\000\135\000\135\000\135\000\255\255\
    \255\255\255\255\255\255\135\000\255\255\135\000\135\000\135\000\
    \135\000\135\000\135\000\135\000\135\000\135\000\135\000\135\000\
    \135\000\135\000\135\000\135\000\135\000\135\000\135\000\135\000\
    \135\000\135\000\135\000\135\000\135\000\135\000\135\000\136\000\
    \136\000\136\000\136\000\136\000\136\000\136\000\136\000\136\000\
    \136\000\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \136\000\136\000\136\000\136\000\136\000\136\000\136\000\136\000\
    \136\000\136\000\136\000\136\000\136\000\136\000\136\000\136\000\
    \136\000\136\000\136\000\136\000\136\000\136\000\136\000\136\000\
    \136\000\136\000\255\255\255\255\255\255\255\255\136\000\255\255\
    \136\000\136\000\136\000\136\000\136\000\136\000\136\000\136\000\
    \136\000\136\000\136\000\136\000\136\000\136\000\136\000\136\000\
    \136\000\136\000\136\000\136\000\136\000\136\000\136\000\136\000\
    \136\000\136\000\138\000\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\138\000\138\000\138\000\138\000\138\000\
    \138\000\138\000\138\000\138\000\138\000\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\138\000\138\000\138\000\138\000\
    \138\000\138\000\138\000\138\000\138\000\138\000\138\000\138\000\
    \138\000\138\000\138\000\138\000\138\000\138\000\138\000\138\000\
    \138\000\138\000\138\000\138\000\138\000\138\000\255\255\255\255\
    \255\255\255\255\138\000\255\255\138\000\138\000\138\000\138\000\
    \138\000\138\000\138\000\138\000\138\000\138\000\138\000\138\000\
    \138\000\138\000\138\000\138\000\138\000\138\000\138\000\138\000\
    \138\000\138\000\138\000\138\000\138\000\138\000\140\000\140\000\
    \140\000\140\000\140\000\140\000\140\000\140\000\140\000\140\000\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\140\000\
    \140\000\140\000\140\000\140\000\140\000\140\000\140\000\140\000\
    \140\000\140\000\140\000\140\000\140\000\140\000\140\000\140\000\
    \140\000\140\000\140\000\140\000\140\000\140\000\140\000\140\000\
    \140\000\255\255\255\255\255\255\255\255\140\000\255\255\140\000\
    \140\000\140\000\140\000\140\000\140\000\140\000\140\000\140\000\
    \140\000\140\000\140\000\140\000\140\000\140\000\140\000\140\000\
    \140\000\140\000\140\000\140\000\140\000\140\000\140\000\140\000\
    \140\000\141\000\141\000\141\000\141\000\141\000\141\000\141\000\
    \141\000\141\000\141\000\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\141\000\141\000\141\000\141\000\141\000\141\000\
    \141\000\141\000\141\000\141\000\141\000\141\000\141\000\141\000\
    \141\000\141\000\141\000\141\000\141\000\141\000\141\000\141\000\
    \141\000\141\000\141\000\141\000\255\255\255\255\255\255\255\255\
    \141\000\255\255\141\000\141\000\141\000\141\000\141\000\141\000\
    \141\000\141\000\141\000\141\000\141\000\141\000\141\000\141\000\
    \141\000\141\000\141\000\141\000\141\000\141\000\141\000\141\000\
    \141\000\141\000\141\000\141\000\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255";
  Lexing.lex_base_code =
   "";
  Lexing.lex_backtrk_code =
   "";
  Lexing.lex_default_code =
   "";
  Lexing.lex_trans_code =
   "";
  Lexing.lex_check_code =
   "";
  Lexing.lex_code =
   "";
}

let rec token lexbuf =
   __ocaml_lex_token_rec lexbuf 0
and __ocaml_lex_token_rec lexbuf __ocaml_lex_state =
  match Lexing.engine __ocaml_lex_tables __ocaml_lex_state lexbuf with
      | 0 ->
let
# 20 "imp_lexer.mll"
                                                                 lxm
# 395 "imp_lexer.ml"
= Lexing.sub_lexeme lexbuf (lexbuf.Lexing.lex_start_pos + 1) (lexbuf.Lexing.lex_curr_pos + -1) in
# 20 "imp_lexer.mll"
                                                                           ( STG(Scanf.unescaped lxm) )
# 399 "imp_lexer.ml"

  | 1 ->
let
# 21 "imp_lexer.mll"
                               lxm
# 405 "imp_lexer.ml"
= Lexing.sub_lexeme lexbuf (lexbuf.Lexing.lex_start_pos + 1) lexbuf.Lexing.lex_curr_pos in
# 21 "imp_lexer.mll"
                                    ( LINE(lxm) )
# 409 "imp_lexer.ml"

  | 2 ->
# 22 "imp_lexer.mll"
                    ( Util.pnt true "start line comment\n"; token lexbuf )
# 414 "imp_lexer.ml"

  | 3 ->
# 23 "imp_lexer.mll"
                          ( token lexbuf )
# 419 "imp_lexer.ml"

  | 4 ->
let
# 24 "imp_lexer.mll"
                      lxm
# 425 "imp_lexer.ml"
= Lexing.sub_lexeme lexbuf (lexbuf.Lexing.lex_start_pos + 2) lexbuf.Lexing.lex_curr_pos in
# 24 "imp_lexer.mll"
                           ( R64(Int64.of_string lxm) )
# 429 "imp_lexer.ml"

  | 5 ->
let
# 25 "imp_lexer.mll"
                     lxm
# 435 "imp_lexer.ml"
= Lexing.sub_lexeme lexbuf (lexbuf.Lexing.lex_start_pos + 3) lexbuf.Lexing.lex_curr_pos in
# 25 "imp_lexer.mll"
                          ( R64(Int64.of_string ("0x"^lxm)) )
# 439 "imp_lexer.ml"

  | 6 ->
# 26 "imp_lexer.mll"
              ( R2(false) )
# 444 "imp_lexer.ml"

  | 7 ->
# 27 "imp_lexer.mll"
              ( R2(true) )
# 449 "imp_lexer.ml"

  | 8 ->
# 28 "imp_lexer.mll"
            ( LCE )
# 454 "imp_lexer.ml"

  | 9 ->
# 29 "imp_lexer.mll"
            ( LCE_EQ )
# 459 "imp_lexer.ml"

  | 10 ->
# 30 "imp_lexer.mll"
            ( LCE_EXEC )
# 464 "imp_lexer.ml"

  | 11 ->
# 31 "imp_lexer.mll"
           ( ENV )
# 469 "imp_lexer.ml"

  | 12 ->
# 32 "imp_lexer.mll"
             ( LCE_IR  )
# 474 "imp_lexer.ml"

  | 13 ->
# 33 "imp_lexer.mll"
              ( MDL )
# 479 "imp_lexer.ml"

  | 14 ->
# 34 "imp_lexer.mll"
              ( MDL_END )
# 484 "imp_lexer.ml"

  | 15 ->
# 35 "imp_lexer.mll"
           ( DTA )
# 489 "imp_lexer.ml"

  | 16 ->
# 36 "imp_lexer.mll"
                 ( DTA_GRM )
# 494 "imp_lexer.ml"

  | 17 ->
# 37 "imp_lexer.mll"
             ( NOT_SPL )
# 499 "imp_lexer.ml"

  | 18 ->
# 38 "imp_lexer.mll"
            ( SLH )
# 504 "imp_lexer.ml"

  | 19 ->
# 39 "imp_lexer.mll"
            ( FOR_ALL )
# 509 "imp_lexer.ml"

  | 20 ->
let
# 40 "imp_lexer.mll"
                   lxm
# 515 "imp_lexer.ml"
= Lexing.sub_lexeme lexbuf (lexbuf.Lexing.lex_start_pos + 1) lexbuf.Lexing.lex_curr_pos in
# 40 "imp_lexer.mll"
                        ( REG(lxm) )
# 519 "imp_lexer.ml"

  | 21 ->
let
# 41 "imp_lexer.mll"
               lxm
# 525 "imp_lexer.ml"
= Lexing.sub_lexeme lexbuf lexbuf.Lexing.lex_start_pos (lexbuf.Lexing.lex_curr_pos + -1) in
# 41 "imp_lexer.mll"
                         ( VAL(lxm) )
# 529 "imp_lexer.ml"

  | 22 ->
let
# 42 "imp_lexer.mll"
              lxm
# 535 "imp_lexer.ml"
= Lexing.sub_lexeme lexbuf lexbuf.Lexing.lex_start_pos lexbuf.Lexing.lex_curr_pos in
# 42 "imp_lexer.mll"
                  ( NAM(lxm) )
# 539 "imp_lexer.ml"

  | 23 ->
let
# 43 "imp_lexer.mll"
                    lxm
# 545 "imp_lexer.ml"
= Lexing.sub_lexeme lexbuf lexbuf.Lexing.lex_start_pos lexbuf.Lexing.lex_curr_pos in
# 43 "imp_lexer.mll"
                        ( PRM(lxm) )
# 549 "imp_lexer.ml"

  | 24 ->
# 44 "imp_lexer.mll"
              ( OUT_IR )
# 554 "imp_lexer.ml"

  | 25 ->
# 45 "imp_lexer.mll"
              ( PRJ_IR  )
# 559 "imp_lexer.ml"

  | 26 ->
# 46 "imp_lexer.mll"
              ( CNS_IR  )
# 564 "imp_lexer.ml"

  | 27 ->
# 47 "imp_lexer.mll"
            ( INI_IR )
# 569 "imp_lexer.ml"

  | 28 ->
# 48 "imp_lexer.mll"
            ( MTC_IR )
# 574 "imp_lexer.ml"

  | 29 ->
# 49 "imp_lexer.mll"
            ( ISO )
# 579 "imp_lexer.ml"

  | 30 ->
# 50 "imp_lexer.mll"
          ( LET )
# 584 "imp_lexer.ml"

  | 31 ->
# 51 "imp_lexer.mll"
          ( OP )
# 589 "imp_lexer.ml"

  | 32 ->
# 52 "imp_lexer.mll"
          ( LB )
# 594 "imp_lexer.ml"

  | 33 ->
# 53 "imp_lexer.mll"
           ( ARR )
# 599 "imp_lexer.ml"

  | 34 ->
# 54 "imp_lexer.mll"
           ( ARR_REV )
# 604 "imp_lexer.ml"

  | 35 ->
# 55 "imp_lexer.mll"
             ( ARR_REV_IN )
# 609 "imp_lexer.ml"

  | 36 ->
let
# 56 "imp_lexer.mll"
                 lxm
# 615 "imp_lexer.ml"
= Lexing.sub_lexeme lexbuf lexbuf.Lexing.lex_start_pos (lexbuf.Lexing.lex_curr_pos + -2) in
# 56 "imp_lexer.mll"
                           ( IN(String.length lxm) )
# 619 "imp_lexer.ml"

  | 37 ->
let
# 57 "imp_lexer.mll"
                      lxm
# 625 "imp_lexer.ml"
= Lexing.sub_lexeme lexbuf (lexbuf.Lexing.lex_start_pos + 2) lexbuf.Lexing.lex_curr_pos in
# 57 "imp_lexer.mll"
                            ( OUT(String.length lxm) )
# 629 "imp_lexer.ml"

  | 38 ->
# 58 "imp_lexer.mll"
            ( SRC )
# 634 "imp_lexer.ml"

  | 39 ->
# 59 "imp_lexer.mll"
              ( SRC_OUT )
# 639 "imp_lexer.ml"

  | 40 ->
# 60 "imp_lexer.mll"
              ( SRC_IL )
# 644 "imp_lexer.ml"

  | 41 ->
# 61 "imp_lexer.mll"
           ( EXN )
# 649 "imp_lexer.ml"

  | 42 ->
# 62 "imp_lexer.mll"
          ( CLN )
# 654 "imp_lexer.ml"

  | 43 ->
# 63 "imp_lexer.mll"
           ( CLN2 )
# 659 "imp_lexer.ml"

  | 44 ->
# 64 "imp_lexer.mll"
          ( SPL )
# 664 "imp_lexer.ml"

  | 45 ->
# 65 "imp_lexer.mll"
             ( AGL )
# 669 "imp_lexer.ml"

  | 46 ->
# 66 "imp_lexer.mll"
          ( R_BLK )
# 674 "imp_lexer.ml"

  | 47 ->
# 67 "imp_lexer.mll"
          ( L_BLK )
# 679 "imp_lexer.ml"

  | 48 ->
# 68 "imp_lexer.mll"
          ( SEQ )
# 684 "imp_lexer.ml"

  | 49 ->
# 69 "imp_lexer.mll"
           ( MTC )
# 689 "imp_lexer.ml"

  | 50 ->
# 70 "imp_lexer.mll"
              ( COPRD )
# 694 "imp_lexer.ml"

  | 51 ->
# 71 "imp_lexer.mll"
             ( COPRD_END )
# 699 "imp_lexer.ml"

  | 52 ->
# 72 "imp_lexer.mll"
              ( COPRD_PTN )
# 704 "imp_lexer.ml"

  | 53 ->
# 73 "imp_lexer.mll"
               ( COPRD_PTN_END )
# 709 "imp_lexer.ml"

  | 54 ->
# 74 "imp_lexer.mll"
              ( PRD )
# 714 "imp_lexer.ml"

  | 55 ->
# 75 "imp_lexer.mll"
            ( EOP )
# 719 "imp_lexer.ml"

  | 56 ->
# 76 "imp_lexer.mll"
             ( EOP_EXN )
# 724 "imp_lexer.ml"

  | 57 ->
# 77 "imp_lexer.mll"
             ( EOP_OUT )
# 729 "imp_lexer.ml"

  | 58 ->
# 78 "imp_lexer.mll"
               ( MDL_EOP )
# 734 "imp_lexer.ml"

  | 59 ->
# 79 "imp_lexer.mll"
            ( COPRD_END )
# 739 "imp_lexer.ml"

  | 60 ->
# 80 "imp_lexer.mll"
            ( PRD_END )
# 744 "imp_lexer.ml"

  | 61 ->
# 81 "imp_lexer.mll"
            ( DEF )
# 749 "imp_lexer.ml"

  | 62 ->
# 82 "imp_lexer.mll"
          ( ACT )
# 754 "imp_lexer.ml"

  | 63 ->
# 84 "imp_lexer.mll"
          ( WC )
# 759 "imp_lexer.ml"

  | 64 ->
let
# 85 "imp_lexer.mll"
                        lxm
# 765 "imp_lexer.ml"
= Lexing.sub_lexeme lexbuf (lexbuf.Lexing.lex_start_pos + 4) (lexbuf.Lexing.lex_curr_pos + -1) in
# 85 "imp_lexer.mll"
                                 ( INJ(int_of_string lxm) )
# 769 "imp_lexer.ml"

  | 65 ->
let
# 86 "imp_lexer.mll"
                        lxm
# 775 "imp_lexer.ml"
= Lexing.sub_lexeme lexbuf (lexbuf.Lexing.lex_start_pos + 4) (lexbuf.Lexing.lex_curr_pos + -1) in
# 86 "imp_lexer.mll"
                                 ( CHO(int_of_string lxm) )
# 779 "imp_lexer.ml"

  | 66 ->
let
# 87 "imp_lexer.mll"
                        lxm
# 785 "imp_lexer.ml"
= Lexing.sub_lexeme lexbuf (lexbuf.Lexing.lex_start_pos + 4) (lexbuf.Lexing.lex_curr_pos + -1) in
# 87 "imp_lexer.mll"
                                 ( AGL_OP(int_of_string lxm) )
# 789 "imp_lexer.ml"

  | 67 ->
# 88 "imp_lexer.mll"
            ( VCT )
# 794 "imp_lexer.ml"

  | 68 ->
# 89 "imp_lexer.mll"
            ( IMP )
# 799 "imp_lexer.ml"

  | 69 ->
# 90 "imp_lexer.mll"
          ( L_RCD )
# 804 "imp_lexer.ml"

  | 70 ->
# 91 "imp_lexer.mll"
          ( R_RCD )
# 809 "imp_lexer.ml"

  | 71 ->
# 92 "imp_lexer.mll"
            ( L_LST )
# 814 "imp_lexer.ml"

  | 72 ->
# 93 "imp_lexer.mll"
            ( R_LST )
# 819 "imp_lexer.ml"

  | 73 ->
# 94 "imp_lexer.mll"
            ( L_OPN )
# 824 "imp_lexer.ml"

  | 74 ->
# 95 "imp_lexer.mll"
            ( R_OPN )
# 829 "imp_lexer.ml"

  | 75 ->
# 96 "imp_lexer.mll"
          ( SGN )
# 834 "imp_lexer.ml"

  | 76 ->
# 97 "imp_lexer.mll"
          ( VCT_INI )
# 839 "imp_lexer.ml"

  | 77 ->
# 98 "imp_lexer.mll"
          ( L_PRN )
# 844 "imp_lexer.ml"

  | 78 ->
# 99 "imp_lexer.mll"
          ( R_PRN )
# 849 "imp_lexer.ml"

  | 79 ->
# 100 "imp_lexer.mll"
           ( DSH )
# 854 "imp_lexer.ml"

  | 80 ->
# 101 "imp_lexer.mll"
          ( EQ )
# 859 "imp_lexer.ml"

  | 81 ->
# 102 "imp_lexer.mll"
          ( EXP )
# 864 "imp_lexer.ml"

  | 82 ->
# 103 "imp_lexer.mll"
           ( S8_STT )
# 869 "imp_lexer.ml"

  | 83 ->
# 104 "imp_lexer.mll"
           ( S8_END )
# 874 "imp_lexer.ml"

  | 84 ->
# 105 "imp_lexer.mll"
            ( APP )
# 879 "imp_lexer.ml"

  | 85 ->
# 106 "imp_lexer.mll"
            ( PRJ )
# 884 "imp_lexer.ml"

  | 86 ->
# 107 "imp_lexer.mll"
            ( Z )
# 889 "imp_lexer.ml"

  | 87 ->
# 108 "imp_lexer.mll"
            ( N )
# 894 "imp_lexer.ml"

  | 88 ->
# 109 "imp_lexer.mll"
            ( TYP_STG )
# 899 "imp_lexer.ml"

  | 89 ->
# 110 "imp_lexer.mll"
          ( PLS )
# 904 "imp_lexer.ml"

  | 90 ->
# 111 "imp_lexer.mll"
          ( MLT )
# 909 "imp_lexer.ml"

  | 91 ->
# 112 "imp_lexer.mll"
          ( MNS )
# 914 "imp_lexer.ml"

  | 92 ->
# 113 "imp_lexer.mll"
            ( GRM )
# 919 "imp_lexer.ml"

  | 93 ->
# 114 "imp_lexer.mll"
           ( NOT )
# 924 "imp_lexer.ml"

  | 94 ->
# 115 "imp_lexer.mll"
           ( S8_E )
# 929 "imp_lexer.ml"

  | 95 ->
# 116 "imp_lexer.mll"
           ( S8_P )
# 934 "imp_lexer.ml"

  | 96 ->
# 117 "imp_lexer.mll"
              ( ORD_LEX_COPRD )
# 939 "imp_lexer.ml"

  | 97 ->
# 118 "imp_lexer.mll"
          ( CMM )
# 944 "imp_lexer.ml"

  | 98 ->
let
# 119 "imp_lexer.mll"
                      lxm
# 950 "imp_lexer.ml"
= Lexing.sub_lexeme lexbuf (lexbuf.Lexing.lex_start_pos + 1) lexbuf.Lexing.lex_curr_pos in
# 119 "imp_lexer.mll"
                           ( ROT (String.length lxm) )
# 954 "imp_lexer.ml"

  | 99 ->
let
# 120 "imp_lexer.mll"
                      lxm
# 960 "imp_lexer.ml"
= Lexing.sub_lexeme lexbuf (lexbuf.Lexing.lex_start_pos + 1) lexbuf.Lexing.lex_curr_pos in
# 120 "imp_lexer.mll"
                           ( SLF (String.length lxm) )
# 964 "imp_lexer.ml"

  | 100 ->
let
# 121 "imp_lexer.mll"
                 lxm
# 970 "imp_lexer.ml"
= Lexing.sub_lexeme lexbuf lexbuf.Lexing.lex_start_pos (lexbuf.Lexing.lex_curr_pos + -1) in
# 121 "imp_lexer.mll"
                           ( IDX (int_of_string lxm) )
# 974 "imp_lexer.ml"

  | 101 ->
# 122 "imp_lexer.mll"
          ( DOT )
# 979 "imp_lexer.ml"

  | 102 ->
# 123 "imp_lexer.mll"
             ( AGL )
# 984 "imp_lexer.ml"

  | 103 ->
let
# 124 "imp_lexer.mll"
                lxm
# 990 "imp_lexer.ml"
= Lexing.sub_lexeme lexbuf lexbuf.Lexing.lex_start_pos lexbuf.Lexing.lex_curr_pos in
# 124 "imp_lexer.mll"
                     ( INT (int_of_string lxm) )
# 994 "imp_lexer.ml"

  | 104 ->
# 125 "imp_lexer.mll"
                    ( token lexbuf                         )
# 999 "imp_lexer.ml"

  | 105 ->
# 126 "imp_lexer.mll"
            ( NL )
# 1004 "imp_lexer.ml"

  | 106 ->
# 127 "imp_lexer.mll"
                    ( EOF               )
# 1009 "imp_lexer.ml"

  | 107 ->
# 128 "imp_lexer.mll"
                    ( raise (Error (Printf.sprintf
                      "At offset %d: unexpected character.\n"
                      (Lexing.lexeme_start lexbuf))) )
# 1016 "imp_lexer.ml"

  | __ocaml_lex_state -> lexbuf.Lexing.refill_buff lexbuf;
      __ocaml_lex_token_rec lexbuf __ocaml_lex_state

and line_comment lexbuf =
   __ocaml_lex_line_comment_rec lexbuf 158
and __ocaml_lex_line_comment_rec lexbuf __ocaml_lex_state =
  match Lexing.engine __ocaml_lex_tables __ocaml_lex_state lexbuf with
      | 0 ->
# 132 "imp_lexer.mll"
          ( Util.pnt true "end line comment\n"; token lexbuf )
# 1028 "imp_lexer.ml"

  | 1 ->
# 133 "imp_lexer.mll"
      ( line_comment lexbuf )
# 1033 "imp_lexer.ml"

  | __ocaml_lex_state -> lexbuf.Lexing.refill_buff lexbuf;
      __ocaml_lex_line_comment_rec lexbuf __ocaml_lex_state

;;

