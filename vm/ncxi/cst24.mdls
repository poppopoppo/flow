§ smt o 
	∐ o ⊢ _some◂a .
		∎ a 
	∐. . 
		_emt %[ "smt 0" ] ⊢ _ 
		∎| 
¶ iso a' 
	∐ iso : a' 
§ inv a 
	$ a ⊢ 
	∐. iso◂a . 
		∎ a 
	
§ KB = 1024r 
§§ rp8 
	¶ @.t 
		∐ nd : { t _r64 t } 
		∐ lf : _s8 
		∐ e : {} 
		∐ chr : _r64 
	
	§ of_s8 s 
		lf s ⊢ a 
		∎ a 
	§ len r 
		$ r ⊢ 
		∐ nd◂{ r0 l r1 } .
			$ l ⊢ l,l0 
			nd { r0 l0 r1 } ⊢ r 
			∎ { r l }
		∐ chr◂c .
			» 1r _ ⊢ l 
			chr c ⊢ r 
			∎ { r l }  
    ∐ e◂{} . 
			e {} ⊢ r
			» 0r _ ⊢ l  
      ∎ { r l } 
		∐. lf◂s . 
			_s8_len s ⊢ { s l } 
			lf s ⊢ r 
			∎ { r l }
	§ add_s8 { e s } 
		_s8_len s ⊢ { s l } 
		len e ⊢ { e le } 
		_add { l le } ⊢ { l le } 
		lf s ⊢ s 
		nd { e l s } ⊢ e 
		∎ e 
	§ pfx_s8 { s e } 
		_s8_len s ⊢ { s l } 
		len e ⊢ { e le } 
		_add { l le } ⊢ { l le } 
		lf s ⊢ s 
		nd { s l e } ⊢ e 
		∎ e
	§ add_chr { e c } 
		len e ⊢ { e le } 
		_inc le ⊢ le 
		chr c ⊢ c 
		nd { e le c } ⊢ e 
		∎ e 
	§ pfx_chr { c e } 
		len e ⊢ { e le } 
		_inc le ⊢ le 
		chr c ⊢ c 
		nd { c le e } ⊢ e 
		∎ e
	§ cct { r0 r1 }
		len r0 ⊢ { r0 l0 } 
		len r1 ⊢ { r1 l1 } 
		_add { l0 l1 } ⊢ { l0 l1 } 
		nd { r0 l0 r1 } ⊢ r 
		∎ r 
	§ @.mk_s8_i { r s i }
		$ r ⊢ 
		∐ nd◂{ r0 l r1 } .
			mk_s8_i { r0 s i } ⊢ { r0 s i } 
			mk_s8_i { r1 s i } ⊢ { r1 s i }
			nd { r0 l r1 } ⊢ r 
			∎ { r s i }
		∐ e◂{} . 
			e {} ⊢ r 
			∎ { r s i } 
		∐ chr◂c . 
			_sts { s i c } ⊢ { s i c }
			_inc i ⊢ i
			chr c ⊢ r  
			∎ { r s i }
		∐. lf◂s0 . 
			_s8_len s0 ⊢ { s0 l0 } 
			» 0r _ ⊢ i0 
			_rep_movsb { l0 s0 i0 s i } ⊢ { l0 s0 i0 s i }
			lf s0 ⊢ r 
			∎ { r s i } 
	§ mk_s8 r 
		len r ⊢ { r l }
		_mlc_s8 l ⊢ { l s }
		» 0r _ ⊢ i 
		mk_s8_i { r s i } ⊢ { r s i }
		∎ { r s }
	∎∎
\[
§ exc_q { a i v } 
	_get_q { a i } ⊢ { a i w } 
	_set_q { a i v } ⊢ { a i } 
	∎ { a i w }
\]
§§ bl 
	¶ t 
		∐ t : {} 
		∐ f : {}
	§ and { b0 b1 } 
		∐ b0 ⊢ t◂{}; b1 ⊢ t◂{} . 
			t {} ⊢ b 
			∎ b 
		∐. . 
			f {} ⊢ b 
			∎ b
	§ or { b0 b1 } 
		∐ b0 ⊢ f◂{}; b1 ⊢ f◂{} . 
			f {} ⊢ b 
			∎ b 
		∐. . 
			t {} ⊢ b 
			∎ b
	§ sub { b0 b1 } 
		∐ b1 ⊢ f◂{} . 
			∎ b0 
		∐. b1 ⊢ t◂{} . 
			f {} ⊢ b 
			∎ b 
	∎∎
¶ @.p_lst ◂ a'
 	∐ p_cns : { a' p_lst◂a' }
	∐ p_end : a'

§ @.rev_i { l0 l1 }
	∐ l1 ⊢ _nil◂{} .
		∎ l0
	∐. l1 ⊢ _cns◂{ hd tl } .
		_cns { hd l0 } ⊢ l0
		rev_i { l0 tl } ⊢ l0
		∎ l0
§ rev l
	_nil {} ⊢ l0
	rev_i { l0 l } ⊢ l0
	∎ l0
§ @.apnd { l0 l1 }
	$ l0 ⊢ 
	∐ _cns◂{ hd l0 } . 
		apnd { l0 l1 } ⊢ l 
		_cns { hd l } ⊢ l 
		∎ l 
	∐. _nil◂{} . 
		∎ l1 
§ @.s8_of_r64_lst_i { i rl }
	∐ rl ⊢ _cns◂{ ri rl_tl } .
		_inc i ⊢ i
		s8_of_r64_lst_i { i rl_tl } ⊢ { i s0 }
		_dec i ⊢ i
		_sts { s0 i ri } ⊢ { s0 i ri }
		∎ { i s0 }
	∐. rl ⊢ _nil◂{} .
		_mlc_s8 i ⊢ { i s0 }
		∎ { i s0 }
§ s8_of_r64_lst cl
	» 0r _ ⊢ i
	s8_of_r64_lst_i { i cl } ⊢ { i s }
	∎ s
§ @.s8_of_s8_lst_i { l sl }
	$ sl ⊢ 
	∐ _cns◂{ s sl } . 
		_s8_len s ⊢ { s b }
		_add { l b } ⊢ { l b } 
		s8_of_s8_lst_i { l sl } ⊢ { sr n } 
		» 0r _ ⊢ o0 
		$ b ⊢ b,b0 
		_rep_movsb { b s o0 sr n } ⊢ { b s o0 sr n } 
		∎ { sr n } 
	∐. _nil◂{} . 
		_mlc_s8 l ⊢ { l sr } 
		» 0r _ ⊢ o 
		∎ { sr o }
§ s8_of_s8_lst l 
	» 0r _ ⊢ i 
	s8_of_s8_lst_i { i l } ⊢ { s n } 
	∎ s 
\[
§ A « 
	_nil {} ⊢ l 
	» "HELLO " _ ⊢ s0 
	_cns { s0 l } ⊢ l 
	» "HOO ooo" _ ⊢ s0 
	_cns { s0 l } ⊢ l 
	» "world!!" _ ⊢ s 
	_cns { s l } ⊢ l 
	s8_of_s8_lst l ⊢ s 
	_emt s ⊢ s 
	∎|  
\]

§ @.assoc { l k }
	∐ l ⊢ _cns◂{ { k0 o0 } l } .
		∐ k'=k0' .
			∐ o0 ⊢ _some◂v0 .
				$ v0 ⊢ v0,v1
				_some v0 ⊢ o0
				_cns { { k0 o0 } l } ⊢ l
				_some v1 ⊢ r1
				∎ { l k r1 }
			∐. .
				_cns { { k0 o0 } l } ⊢ l
				_none {} ⊢ r1
				∎ { l k r1 }
		∐. .
			assoc { l k } ⊢ { l k r0 }
			_cns { { k0 o0 } l } ⊢ l
			∎ { l k r0 }
	∐. .
		_none {} ⊢ r1
		∎ { l k r1 }	
§ subst { r0 sl } 
	assoc { sl r0 } ⊢ { sl r0 o } 
	$ o ⊢ 
	∐ _some◂r1 . 
		∎ { r1 sl } 
	∐. _none◂{} . 
		∎ { r0 sl } 
§ @.subst_lst { l sl } 
	$ l ⊢ 
	∐ _cns◂{ a l } .
		subst { a sl } ⊢ { a sl } 
		subst_lst { l sl } ⊢ { l sl } 
		_cns { a l } ⊢ l 
		∎ { l sl }
	∐. _nil◂{} . 
		_nil {} ⊢ l 
		∎ { l sl }
§§ lst
	¶ t a' = _lst◂a' 
	§ assoc = assoc 
	§ rev = rev 
	§ apnd = apnd 
	§ @.len l 
		$ l ⊢ 
		∐ _cns◂{ a l } . 
			len l ⊢ { l n } 
			_cns { a l } ⊢ l 
			_inc n ⊢ n 
			∎ { l n } 
		∐. _nil◂{} . 
			» 0r _ ⊢ n 
			_nil {} ⊢ l 
			∎ { l n }
	§ @.csm { l a } 
		$ l ⊢ 
		∐ _cns◂{ x l } . 	
			∐ x'=a' . 
				##csm { l a } ⊢|
				csm { l a } ⊢ { l a } 
				∎ { l a } 
			∐. . 
				csm { l a } ⊢ { l a } 
				_cns { x l } ⊢ l 
				∎ { l a }
		∐. _nil◂{} . 
			_nil {} ⊢ l 
			∎ { l a }
	§ @.nth { l i } 
		$ l ⊢ 
		∐ _cns◂{ a l } . 
			∐ i'=0r . 
				∎ { a l } 
			∐. . 
				_dec i ⊢ i 
				nth { l i } ⊢ { b l } 
				_cns { a l } ⊢ l 
				∎ { b l } 
		∐. _nil◂{} . 
			» "nth 0" _ ⊢ se 
			_emt se ⊢ se 
			∎| 
	§ @.add { l a } 
		$ l ⊢ 
		∐ _cns◂{ b l } . 
			∐ a'=b' . 
				_cns { b l } ⊢ l 
				∎ l 
			∐. . 
				add { l a } ⊢ l 
				_cns { b l } ⊢ l 
				∎ l 
		∐. _nil◂{} . 
			_nil {} ⊢ l 
			_cns { a l } ⊢ l 
			∎ l 
	∎∎
§§+s8 
	@.esc_s8 
		∐ "\n" esc_s8 ⊢ { {} e0 }
			» "\\n" _ ⊢ s0 
			rp8.pfx_s8 { s0 e0 } ⊢ e0 
			_some e0 ⊢ e0
			∎ e0 
		∐ "\t" esc_s8 ⊢ { {} e0 }
			» "\\t" _ ⊢ s0 
			rp8.pfx_s8 { s0 e0 } ⊢ e0 
			_some e0 ⊢ e0
			∎ e0 		
		∐ "\\" esc_s8 ⊢ { {} e0 }
			» "\\\\" _ ⊢ s0 
			rp8.pfx_s8 { s0 e0 } ⊢ e0 
			_some e0 ⊢ e0
			∎ e0
		∐ "\"" esc_s8 ⊢ { {} e0 }
			» "\\\"" _ ⊢ s0 
			rp8.pfx_s8 { s0 e0 } ⊢ e0 
			_some e0 ⊢ e0
			∎ e0
		∐ _byt esc_s8 ⊢ { b e0 }
			∐ b'=0r . 
				» "\\0" _ ⊢ s0 
				rp8.pfx_s8 { s0 e0 } ⊢ e0 
				_some e0 ⊢ e0
				∎ e0
			∐. . 
				rp8.pfx_chr { b e0 } ⊢ e0 
				_some e0 ⊢ e0
				∎ e0
		∐. ⊢ { } 
			rp8.e {} ⊢ e0 
			_some e0 ⊢ e0
			∎ e0
§ mk_esc_s8 s 
	» 0r _ ⊢ x0 
	esc_s8.prs { s x0 } ⊢ { s x0 es } 
	∐ es ⊢ _some◂es . 
		rp8.mk_s8 es ⊢ { es ss } 
		∎ { s ss }
	∐. . 
		» "esc_stg_ltr" _ ⊢ ee 
		_emt ee ⊢ ee 
		∎| 
§§+s8
	@.stg_ltr
	∐. "\"" stg_ltr_seq ⊢ { {} cl }
		##s8_of_r64_lst cl ⊢ s
		rp8.mk_s8 cl ⊢ { cl s }
		_some s ⊢ a
		∎ a
	@.stg_ltr_seq
	∐ "\n" !| ⊢ { xx } 
		_none {} ⊢ a 
		∎ a 
	∐ "\\" stg_ltr_sp stg_ltr_seq ⊢ { {} c0 cl }
		##_cns { c0 cl } ⊢ cl
		rp8.pfx_chr { c0 cl } ⊢ cl 
		_some cl ⊢ a
		∎ a
	∐ "\"" ⊢ { {} }
		##_nil {} ⊢ cl
		rp8.e {} ⊢ cl
		_some cl ⊢ a
		∎ a
	∐. _byt stg_ltr_seq ⊢ { c0 cl }
		rp8.pfx_chr { c0 cl } ⊢ cl 
		##_cns { c0 cl } ⊢ cl
		_some cl ⊢ a
		∎ a
	@.stg_ltr_sp
	∐ "\\" ⊢ { {} }
		» 92r _ ⊢ c0
		_some c0 ⊢ a0
		∎ a0
	∐ "\"" ⊢ { {} }
		» 34r _ ⊢ c0
		_some c0 ⊢ a0
		∎ a0
	∐ "n" ⊢ { {} }
		» 10r _ ⊢ c0
		_some c0 ⊢ a0
		∎ a0
	∐ "t" ⊢ { {} }
		» 9r _ ⊢ c0
		_some c0 ⊢ a0
		∎ a0
	∐. "0" ⊢ { {} }
		» 0r _ ⊢ c0
		_some c0 ⊢ a0
		∎ a0

§§+s8
	@.dgt
	∐. _byt ⊢ { c }
		∐ 48r=<c'; c'=<57r . 
			_some c ⊢ a
			∎ a
		∐. .
			_none {} ⊢ a
			∎ a
§§+s8
	@.ch_l
	∐. _byt ⊢ { c }
		∐ 97r=<c'; c'=<122r . 
			_some c ⊢ a
			∎ a
		∐. .
			_none {} ⊢ a
			∎ a

§§+s8
	@.ch_u
	∐. _byt ⊢ { c }
		∐ 65r=<c'; c'=<90r . 
			_some c ⊢ a
			∎ a
		∐. .
			_none {} ⊢ a
			∎ a
§§+s8
	@.ch_a
	∐ ch_u ⊢ { c }
		_some c ⊢ a
		∎ a 
	∐. ch_l ⊢ { c }
		_some c ⊢ a
		∎ a

§§+s8
	@.word
		∐. ch_a word_tl ⊢ { c0 cl }
			rp8.pfx_chr { c0 cl } ⊢ cl 
			rp8.mk_s8 cl ⊢ { cl s } 
			_some s ⊢ a
			∎ a
	@.word_tl
		∐ word_hd word_tl ⊢ { c tl }
			rp8.pfx_chr { c tl } ⊢ l 
			_some l ⊢ a
			∎ a
		∐. ⊢ { }
			rp8.e {} ⊢ l 
			_some l ⊢ a 
			∎ a
	@.word_hd
		∐ ch_a ⊢ { c }
			_some c ⊢ a
			∎ a
		∐ dgt ⊢ { c }
			_some c ⊢ a
			∎ a
		∐. "_" ⊢ { {} }
			» 95r _ ⊢ c
			_some c ⊢ a
			∎ a

§§+s8
	@.prm_word
	∐ "_" word_tl ⊢ { {} cl }
		##s8_of_r64_lst cl ⊢ s
		rp8.mk_s8 cl ⊢ { cl s } 
		» _^ s ⊢ s,sr 
			"_" 0' // 
		_some sr ⊢ a 
		∎ a
	∐. word ⊢ { s }
		_some s ⊢ a
		∎ a

§§ OpADL 
  §§ reg_ptn
		¶ @.t ◂ a'
			∐ rcd : _lst◂(t◂a')
			∐ atm : a'
		∎∎
	§§ RP = reg_ptn
	§§ ast
		¶ @.name
			∐ mdl_n : { _s8 name }
			∐ fst_n : _s8
		§ @.pnt_name n
			∐ n ⊢ mdl_n◂{ w n } .
				pnt_name n ⊢ s
				» _^ w,s ⊢ w,s,sr
					0' "." 1' //
				∎ sr
			∐. n ⊢ fst_n◂w .
				∎ w
		¶ cst_v 
			∐ r64 : _r64 
			∐ s8 : _s8 
		¶ cst◂e'
			∐ cst_v : cst_v
			∐ cst_name : e'
		§ pnt_cst_v v 
			$ v ⊢
			∐ r64◂x .
				» _^ x ⊢ x,sr
				0d' "r" //
				∎ sr
			∐. s8◂s .
				mk_esc_s8 s ⊢ { s ss } 
				» _^ ss ⊢ ss,sr
				"\"" 0' "\"" // 
				∎ sr
		§ pnt_cst c
			$ c ⊢
			∐ cst_v◂v .
				##pnt_cst_v v ⊢|  
				pnt_cst_v v ⊢ s 
				∎ s 
			∐. cst_name◂n .
				pnt_name n ⊢ sr
				∎ sr
		¶
			@.src r',e'
				∐ im_reg : cst◂e'
				∐ src_reg : r'
			@.dst r'
				∐ wc : _opn◂r'
				∐ dst_reg : r'
		¶	src_ptn r',e' = RP.t◂(src◂r'◂e')
		¶ dst_ptn r' = RP.t◂(dst◂r')
		¶ SP r',e' = src_ptn◂r'◂e'
		¶ DP r' = dst_ptn◂r'
		¶
			@.mtc_atm r',e'
				∐ mtc_agl : { e' MP◂r'◂e' }
				∐ mtc_cst : cst◂e'
				∐ mtc_wc : _opn◂r' 
				∐ mtc_reg : r' 
			@.MP r',e' = reg_ptn.t◂(mtc_atm◂r'◂e')
		§ 
			@.pnt_src_ptn sp
				∐ sp ⊢ RP.rcd◂l .
					pnt_src_ptn_lst l ⊢ sl
					» _^ sl ⊢ sl,sr
						"{ " 0' "}" //
					∎ sr
				∐. sp ⊢ RP.atm◂a .
					∐ a ⊢ im_reg◂c .
						pnt_cst c ⊢ sc
						» _^ sc ⊢ sc,sr
							"%[ " 0' " ] " // 
						∎ sr
					∐. a ⊢ src_reg◂w .
						∎ w
			@.pnt_src_ptn_lst l
				∐ l ⊢ _cns◂{ hd l } .
					pnt_src_ptn hd ⊢ shd 
					pnt_src_ptn_lst l ⊢ sl
					» _^ shd,sl ⊢ shd,sl,sr 
						0' " " 1' //
					∎ sr
				∐. l ⊢ _nil◂{} .
					» "" _ ⊢ sr
					∎ sr
			@.pnt_dst_ptn p
				∐ p ⊢ RP.rcd◂l .
					pnt_dst_ptn_lst l ⊢ sl
					» _^ sl ⊢ sl,sr
						"{ " 0' "}" //
					∎ sr
				∐. p ⊢ RP.atm◂a .
					∐ a ⊢ wc◂o .
						» "_ " _ ⊢ sr
						∎ sr
					∐. a ⊢ dst_reg◂w .
						∎ w
			@.pnt_dst_ptn_lst l
				∐ l ⊢ _cns◂{ hd l } .
					pnt_dst_ptn hd ⊢ shd
					pnt_dst_ptn_lst l ⊢ sl
					» _^ shd,sl ⊢ shd,sl,sr
						0' " " 1' //
					∎ sr
				∐. l ⊢ _nil◂{} .
					» "" _ ⊢ sr
					∎ sr
		§ @.pnt_mtc_ptn mp 
			$ mp ⊢
			∐ RP.rcd◂l . 
				$ l ⊢ l,l0 
				RP.rcd l0 ⊢ r0 
				pnt_mtc_ptn_lst l ⊢ sl 
				» _^ sl ⊢ sl,sr
					"{ " 0' "}" //
				∎ sr
			∐. RP.atm◂a .
				$ a ⊢ 
				∐ mtc_cst◂c .
					pnt_cst c ⊢ sc
					» _^ sc ⊢ sc,sr
						"%[ " 0' " ] " // 
					∎ sr
				∐ mtc_agl◂{ n mp } .
					pnt_mtc_ptn mp ⊢ smp 
					pnt_name n ⊢ sn 
					» _^ sn,smp ⊢ sn,smp,sr
						0' "◂" 1' // 
					∎ sr
				∐ mtc_reg◂w . 
					» _^ w ⊢ w,sr
						"%" 0' // 
					∎ sr 
				∐. mtc_wc◂o . 
					» "_" _ ⊢ sr
					∎ sr 
			@.pnt_mtc_ptn_lst l
				$ l ⊢
				∐ _cns◂{ hd l } .
					pnt_mtc_ptn hd ⊢ shd 
					pnt_mtc_ptn_lst l ⊢ sl
					» _^ shd,sl ⊢ shd,sl,sr 
						0' " " 1' //
					∎ sr
				∐. _nil◂{} .
						» "" _ ⊢ sr
				∎ sr
		§§ exp_s8 
			¶ fmt
				∐ s : {}
				∐ d : {}
				∐ x : {}
				∐ p : {}
			¶ t◂e' 
				∐ s8 : _s8
				∐ cst : cst◂e'
				∐ idx : { fmt _r64 }
				∐ for : { _r64 _s8 }
			∎∎
		¶
			@.lc_code r',e'
				∐ jmp : { e' SP◂r'◂e' }
				∐ app_jmp : { src◂r'◂e' SP◂r'◂e' }
				∐ seq : { lc_line◂r'◂e' lc_code◂r'◂e' }
				∐ mtc : lc_mtc◂r'◂e'
				∐ op_id : { SP◂r'◂e' lc_id_line◂r'◂e' }
				∐ ret : _opn◂(SP◂r'◂e')
				∐ exn : exn◂r'◂e' 
			@.exn r',e' = _r64 
			@.lc_mtc r',e' = p_lst◂{ _lst◂(mtc_op◂r'◂e') mtc_etr◂r'◂e' }
			@.lc_id_mtc r',e' = p_lst◂{ MP◂r'◂e' _lst◂(mtc_op◂r'◂e') mtc_etr◂r'◂e' }
			@.lc_id_line r',e'
				∐ id_mtc : lc_id_mtc◂r'◂e'
				∐ id_line : { _lst◂(DP◂r') lc_code◂r'◂e' }
			@.lc_line r',e'
				∐ op_name : { e' SP◂r'◂e' DP◂r' }
				∐ op_app : { src◂r'◂e' SP◂r'◂e' DP◂r' }
				∐ op_exp_cst : { cst◂e' SP◂r'◂e' DP◂r' }
				∐ op_exp_s8 : { _lst◂(op_exp_s8◂e') _lst◂(src◂r'◂e') _lst◂(dst◂r') }
			@.mtc_etr r',e'
				∐ mtc_rmf : lc_mtc◂r'◂e'
				∐ mtc_id_rmf : { SP◂r'◂e' lc_id_mtc◂r'◂e' }
				∐ mtc_code : lc_code◂r'◂e'
			@.mtc_op r',e'
				∐ mtc_id : { SP◂r'◂e' MP◂r'◂e' }
				∐ mtc_test : { test_var◂r'◂e' test_var◂r'◂e' }
				∐ mtc_cmp_test : { test_var◂r'◂e' test_var◂r'◂e' } 
			@.test_var r',e'
				∐ test_cst : cst◂e'
				∐ test_var : r'
			@.op_exp_s8 e' = exp_s8.t◂e' 
		 
		§ @.pnt_lc_code { dn lc }
			$ lc ⊢ 
			∐ jmp◂{ n s } . 
				pnt_name n ⊢ sn 
				pnt_src_ptn s ⊢ ss 
				» _^ dn,sn,ss ⊢ dn,sn,ss,sr 
					0'*"\t" 1' " " 2' " ⊢|\n" // 
				∎ { dn sr } 
			∐ app_jmp◂{ f x } . 
				RP.atm f ⊢ f 
				pnt_src_ptn f ⊢ sf 
				pnt_src_ptn x ⊢ sx 
				» _^ dn,sf,sx ⊢ dn,sf,sx,sr 
					0'*"\t" "◂" 1' "," 2' " ⊢|\n" // 
					∎ { dn sr } 
			∐ seq◂{ ll lc } .
				pnt_lc_line { dn ll } ⊢ { dn sll }
				pnt_lc_code { dn lc } ⊢ { dn slc }
				» _^ sll,slc ⊢ sll,slc,sr
					0'
					1' //
				∎ { dn sr }
			∐ mtc◂m .
				pnt_lc_mtc { dn m } ⊢ { dn sm }
				∎ { dn sm }
			∐ op_id◂{ s m } . 
				pnt_src_ptn s ⊢ ss 
				$ m ⊢ 
				∐ id_line◂{ d lc } . 
					pnt_dst_ptn_lst d ⊢ sd 
					pnt_lc_code { dn lc } ⊢ { dn slc }
					» _^ dn,ss,sd,slc ⊢ dn,ss,sd,slc,sr 
						0'*"\t" "$ " 1' " ⊢ " 2' "\n" 
						3' // 
					∎ { dn sr } 
				∐. id_mtc◂m . 
					pnt_lc_id_mtc { dn m } ⊢ { dn sm } 
					» _^ dn,ss,sm ⊢ dn,ss,sm,sr 
						0'*"\t" "$ " 1' " ⊢\n" 
						2' //
					∎ { dn sr } 
			∐ ret◂sp .
				» _^ dn ⊢ dn,s
					0'*"\t" "∎ ..\n" //
				∎ { dn s }
			∐. exn◂ne .
				» _^ dn ⊢ dn,sr
					0'*"\t" "∎|\n" //
				∎ { dn sr }
		@.pnt_lc_line { dn o }
			∐ o ⊢ op_name◂{ n s d } .
				pnt_src_ptn s ⊢ ss
				pnt_dst_ptn d ⊢ sd
				pnt_name n ⊢ sn
				» _^ dn,sn,ss,sd ⊢ dn,sn,ss,sd,sr
					0'*"\t" 1' " " 2' " ⊢ " 3' "\n" //
				∎ { dn sr }
			∐ o ⊢ op_app◂{ f x y } .
				RP.atm f ⊢ fr
				pnt_src_ptn fr ⊢ sf
				pnt_src_ptn x ⊢ ss
				pnt_dst_ptn y ⊢ sd
				» _^ dn,sf,ss,sd ⊢ dn,sf,ss,sd,sr 
					0'*"\t" "◂ " 1' "," 2' " ⊢ " 3' "\n" //
				∎ { dn sr }
			∐ o ⊢ op_exp_cst◂{ c s d } .
				pnt_src_ptn s ⊢ ss
				pnt_dst_ptn d ⊢ sd
				pnt_cst c ⊢ sc
				» _^ dn,sc,ss,sd ⊢ dn,sc,ss,sd,sr
					0'*"\t" "» " 1' " " 2' " ⊢ " 3' "\n" //
				∎ { dn sr }
			∐. o ⊢ op_exp_s8◂{ l sl dl } .
				» _^ dn ⊢ dn,sr
					0'*"\t" "» _^ .." " ⊢ .." "\n"
					" .. //\n" //
				∎ { dn sr }
		@.pnt_lc_mtc { dn m }
			∐ m ⊢ p_cns◂{ { l e } m } .
				pnt_lc_mtc { dn m } ⊢ { dn sm }
				$ e ⊢ 
				∐ mtc_rmf◂m0 .
					pnt_lc_mtc { dn m0 } ⊢ { dn sm0 }
					» _^ dn,sm,sm0 ⊢ dn,sm,sm0,sr
						0'*"\t" "∐ .. ;\n"
						2'
						1' //
					∎ { dn sr }
				∐ mtc_id_rmf◂{ sp m0 } . 
					pnt_src_ptn sp ⊢ ssp 
					pnt_lc_id_mtc { dn m0 } ⊢ { dn sm0 }
					» _^ dn,ssp,sm,sm0 ⊢ dn,ssp,sm,sm0,sr
						0'*"\t" "∐ .. ; " 1' "⊢ \n"
						3'
						2' //
					∎ { dn sr }
				∐. mtc_code◂lc .
					_inc dn ⊢ dn
					pnt_lc_code { dn lc } ⊢ { dn slc }
					_dec dn ⊢ dn
					» _^ dn,sm,slc ⊢ dn,sm,slc,sr
						0'*"\t" "∐ .. .\n"
						2'
						1' //
					∎ { dn sr }
			∐. m ⊢ p_end◂{ l e } .
			  ∐ e ⊢ mtc_rmf◂m0 .
					pnt_lc_mtc { dn m0 } ⊢ { dn sm0 }
					» _^ dn,sm0 ⊢ dn,sm0,sr
						0'*"\t" "∐. .. .\n"
						1' //
					∎ { dn sr }
				∐ e ⊢ mtc_id_rmf◂{ sp m0 } . 
					pnt_src_ptn sp ⊢ ssp 
					pnt_lc_id_mtc { dn m0 } ⊢ { dn sm0 }
					» _^ dn,ssp,sm0 ⊢ dn,ssp,sm0,sr
						0'*"\t" "∐ .. ; " 1' "⊢ \n"
						2'
						//
					∎ { dn sr }
				∐. e ⊢ mtc_code◂lc .
					_inc dn ⊢ dn
					pnt_lc_code { dn lc } ⊢ { dn slc }
					_dec dn ⊢ dn
					» _^ dn,slc ⊢ dn,slc,sr
						0'*"\t" "∐. .. .\n"
						1' //
					∎ { dn sr }
		@.pnt_lc_id_mtc { dn m }
			∐ m ⊢ p_cns◂{ { mp l e } m } .
				pnt_mtc_ptn mp ⊢ smp 
				pnt_lc_id_mtc { dn m } ⊢ { dn sm }
				$ e ⊢ 
				∐ mtc_rmf◂m0 .
					pnt_lc_mtc { dn m0 } ⊢ { dn sm0 }
					» _^ dn,smp,sm,sm0 ⊢ dn,smp,sm,sm0,sr
						0'*"\t" "∐ " 1' ".. ;\n"
						3'
						2' //
					∎ { dn sr }
				∐ mtc_id_rmf◂{ sp m0 } . 
					pnt_src_ptn sp ⊢ ssp 
					pnt_lc_id_mtc { dn m0 } ⊢ { dn sm0 }
					» _^ dn,ssp,sm,sm0 ⊢ dn,ssp,sm,sm0,sr
						0'*"\t" "∐ .. ; " 1' "⊢ \n"
						3'
						2' //
					∎ { dn sr }
				∐. mtc_code◂lc .
					_inc dn ⊢ dn
					pnt_lc_code { dn lc } ⊢ { dn slc }
					_dec dn ⊢ dn
					» _^ dn,sm,slc ⊢ dn,sm,slc,sr
						0'*"\t" "∐ .. .\n"
						2'
						1' //
					∎ { dn sr }
			∐. m ⊢ p_end◂{ mp l e } .
			  ∐ e ⊢ mtc_rmf◂m0 .
					pnt_mtc_ptn mp ⊢ smp 
					pnt_lc_mtc { dn m0 } ⊢ { dn sm0 }
					» _^ dn,sm0 ⊢ dn,sm0,sr
						0'*"\t" "∐. .. ;\n"
						1' //
					∎ { dn sr }
				∐ e ⊢ mtc_id_rmf◂{ sp m0 } .
					pnt_src_ptn sp ⊢ ssp 
					pnt_lc_id_mtc { dn m0 } ⊢ { dn sm0 }
					» _^ dn,ssp,sm0 ⊢ dn,ssp,sm0,sr
						0'*"\t" "∐ .. ; " 1' "⊢ \n"
						2' //
					∎ { dn sr }
				∐. e ⊢ mtc_code◂lc .
					_inc dn ⊢ dn
					pnt_lc_code { dn lc } ⊢ { dn slc }
					_dec dn ⊢ dn
					» _^ dn,slc ⊢ dn,slc,sr
						0'*"\t" "∐. .. .\n"
						1' //		
					∎ { dn sr }
		¶ @.type
			∐ type_rcd : _lst◂type
			∐ imp : { type type }
			∐ app : { type type }
			∐ type_name : name
			∐ type_var : _s8
		§§ grm 
			¶ 
				@.t r',e' = _lst◂{ _s8 etr◂r'◂e' }
				@.etr r',e' 
					∐ cnc : cnc◂r'◂e'
					∐ act : act◂r'◂e' 
				@.cnc r',e'  
					∐ cnc_cns : { _opn◂_s8 rle_flg rle◂e' _opn◂(cnc◂r'◂e') cnc◂r'◂e' }
					∐ cnc_end : { _opn◂_s8 rle_flg rle◂e' _opn◂(cnc◂r'◂e') }
				@.act r',e' 
					∐ act_cns : { _lst◂(dst◂r') DP◂r' lc_code◂r'◂e' rle_flg rle◂e' _opn◂{ DP◂r' act◂r'◂e' } act◂r'◂e' }
					∐ act_end : { _lst◂(dst◂r') DP◂r' lc_code◂r'◂e' rle_flg rle◂e' _opn◂{ DP◂r' act◂r'◂e' } }
				@.rle_flg
					∐ lex : {}
					∐ synt : {}
					∐ line : {}
				@.rle e'
					∐ ptn_cut : rle_cut◂e'
					∐ ptn_seq : { ptn◂e' rle◂e' }
					∐ ptn_end : {}
				@.rle_cut e' = _lst◂(ptn◂e')
				@.ptn e'
					∐ lst : atm◂e'
					∐ atm : atm◂e'
				@.atm e'
					∐ name : e'
					∐ s8 : _s8
			§ 
				@.pnt { dn q }
					∐ q ⊢ _cns◂{ { w g } q } .
						_inc dn ⊢ dn
						pnt_etr { dn g } ⊢ { dn sg }
						_dec dn ⊢ dn
						pnt { dn q } ⊢ { dn sq }
						» _^ dn,w,sg,sq ⊢ dn,w,sg,sq,sr
							0'*"\t" "@." 1' "\n" 2'
							3' //
						∎ { dn sr }
					∐. q ⊢ _nil◂{} .
						» "" _ ⊢ sr
						∎ { dn sr }
				@.pnt_etr { dn g }
					∐ g ⊢ cnc◂g .
					 pnt_cnc { dn g } ⊢ { dn sr }
					 ∎ { dn sr }
					∐. g ⊢ act◂g .
						pnt_act { dn g } ⊢ { dn sr }
						∎ { dn sr }
				@.pnt_cnc { dn g }
					∐ g ⊢ cnc_cns◂{ cn o ps gc g } .
						pnt_cnc { dn g } ⊢ { dn sg }
						» _^ dn,sg ⊢ dn,sg,sr
							0'*"\t" "∐ ..\n"
							1' //
						∎ { dn sr }
					∐. g ⊢ cnc_end◂{ cn o ps gc } .
						» _^ dn ⊢ dn,sr
							0'*"\t" "∐. .. \n" //
						∎ { dn sr }
				@.pnt_act { dn g }
					∐ g ⊢ act_cns◂{ dl dp lc o ps gc g } .
						pnt_dst_ptn dp ⊢ sdp
						_inc dn ⊢ dn
						pnt_lc_code { dn lc } ⊢ { dn slc }
						_dec dn ⊢ dn
						pnt_act { dn g } ⊢ { dn sg }
						» _^ dn,sdp,slc,sg ⊢ dn,sdp,slc,sg,sr
							0'*"\t" "∐ .. ⊢ " 1' "\n"
							2'
							3' //
						∎ { dn sr }
					∐. g ⊢ act_end◂{ drl dp lc o ps gc } .
						pnt_dst_ptn dp ⊢ sdp
						_inc dn ⊢ dn
						pnt_lc_code { dn lc } ⊢ { dn slc }
						_dec dn ⊢ dn
						» _^ dn,sdp,slc ⊢ dn,sdp,slc,sr
							0'*"\t" "∐. .. ⊢ " 1' "\n"
							2' //
						∎ { dn sr }
				@.pnt_rle { dn ps }
					∐ ps ⊢ ptn_cut◂cps .
						pnt_rle_cut cps ⊢ scps
						» _^ scps ⊢ scps,sr
							" !| " 0' //
						∎ { dn sr }
					∐ ps ⊢ ptn_seq◂{ p ps } .
						pnt_rle { dn ps } ⊢ { dn sps }
						» _^ sps ⊢ sps,sr
							" .. " 0' //
						∎ { dn sr }
					∐. ps ⊢ ptn_end◂{} .
						» "" _ ⊢ sr
						∎ { dn sr }
				@.pnt_rle_cut ps
					∐ ps ⊢ _cns◂{ p ps } .
						pnt_rle_cut ps ⊢ sps
						» _^ sps ⊢ sps,sr
							" .. " 0' //
						∎ sr
					∐. ps ⊢ _nil◂{} .
						» "" _ ⊢ sr
						∎ sr
			§ act_regs {} 
				» "_r" _ ⊢ r0 
				» "_n" _ ⊢ r1 
				dst_reg r0 ⊢ d0 
				dst_reg r1 ⊢ d1 
				_nil {} ⊢ l0 
				_cns { d0 l0 } ⊢ l0 
				_cns { d1 l0 } ⊢ l0 
				∎ l0 
			∎∎
		¶
			@.file = _lst◂glb_etr
			@.glb_etr
				∐ mdl_etr : { _s8 mdl_etr }
				∐ grm_etr : grm.t◂_s8◂name
				∐ lc_etr : { _s8 lc_etr }
				∐ lc_qlq_etr : _lst◂{ _s8 DP◂_s8 _opn◂type lc_code◂_s8◂name }
				∐ dt_etr : { _s8 dt_etr }
				∐ dt_qlq_etr : _lst◂{ _s8 dt_etr }
			@.mdl_etr
				∐ mdl_def : _lst◂glb_etr
				∐ mdl_ln : name
			@.lc_etr
				∐ lc_def : { DP◂_s8 _opn◂type lc_code◂_s8◂name }
				∐ lc_ln : cst◂name
				∐ lc_cst : lc_code◂_s8◂name
			@.dt_etr
				∐ dt_def : { _lst◂_s8 _lst◂{ _s8 type } }
				∐ dt_ln : { _lst◂_s8 type }
	§ 
		@.pnt { dn f } 
		∐ f ⊢ _nil◂{} .
			» "" _ ⊢ s
			∎ { dn s }
		∐. f ⊢ _cns◂{ hd tl } .
			pnt_glb_etr { dn hd } ⊢ { dn s0 }
			pnt { dn tl } ⊢ { dn s1 }
			» _^ s0,s1 ⊢ s0,s1,sr
				0'
				1' //
			∎ { dn sr }
		@.pnt_glb_etr { dn e }
			∐ e ⊢ mdl_etr◂{ w me } .
				∐ me ⊢ mdl_def◂el .
					_inc dn ⊢ dn
					pnt { dn el } ⊢ { dn sl }
					_dec dn ⊢ dn
					» _^ dn,w,sl ⊢ dn,w,sl,sr
						0'*"\t" "§§ " 1' "\n"
							2'
						0'*"\t" "\t" "∎∎\n"
						//
					∎ { dn sr }
				∐. me ⊢ mdl_ln◂n .
					pnt_name n ⊢ sn
					» _^ dn,w,sn ⊢ dn,w,sn,sr
						0'*"\t" "§§ " 1' " = " 2' "\n"
						//
					∎ { dn sr }
			∐ e ⊢ grm_etr◂l .
				_inc dn ⊢ dn
				grm.pnt { dn l } ⊢ { dn sl }
				_dec dn ⊢ dn
				» _^ dn,sl ⊢ dn,sl,sr
					0'*"\t" "§§+s8\n"
						1'
					//
				∎ { dn sr }
			∐ e ⊢ lc_etr◂{ w lce } .
				_inc dn ⊢ dn
				pnt_lc_etr { dn lce } ⊢ { dn se }
				_dec dn ⊢ dn
				» _^ dn,w,se ⊢ dn,w,se,sr
					0'*"\t" "§ " 1' 2'
					//
				∎ { dn sr }
			∐ e ⊢ lc_qlq_etr◂q .
				_inc dn ⊢ dn
				pnt_lc_qlq_etr { dn q } ⊢ { dn sq }
				_dec dn ⊢ dn
				» _^ dn,sq ⊢ dn,sq,sr
					0'*"\t" "§ \n"
						1'
					//
				∎ { dn sr }
			∐ e ⊢ dt_etr◂{ w d } .
				∐ d ⊢ dt_def◂{ as l } .
					_inc dn ⊢ dn
					pnt_dt_def { dn l } ⊢ { dn sl }
					_dec dn ⊢ dn
					» _^ dn,w,sl ⊢ dn,w,sl,sr
						0'*"\t" "¶ " 1' "\n"
							2' //
					∎ { dn sr }
				∐. d ⊢ dt_ln◂{ as t } .
					» _^ dn,w ⊢ dn,w,sr
						0'*"\t" "¶ " 1' " = .. \n" //
					∎ { dn sr }
			∐. e ⊢ dt_qlq_etr◂q .
				_inc dn ⊢ dn
				pnt_dt_qlq_etr { dn q } ⊢ { dn sq }
				_dec dn ⊢ dn
				» _^ dn,sq ⊢ dn,sq,sr
					0'*"\t" "¶\n"
						1'
					//
				∎ { dn sr }
		@.pnt_dt_qlq_etr { dn q }
			∐ q ⊢ _cns◂{ { w d } q } .
				##_emt dn ⊢ dn
				pnt_dt_qlq_etr { dn q } ⊢ { dn sq }
				∐ d ⊢ dt_def◂{ as l } .
					_inc dn ⊢ dn
					pnt_dt_def { dn l } ⊢ { dn sl }
					_dec dn ⊢ dn
					» _^ dn,w,sl,sq ⊢ dn,w,sl,sq,sr
						0'*"\t" "@." 1' "\n"
							2'
						3' //
					∎ { dn sr }
				∐. d ⊢ dt_ln◂{ as t } .
					» _^ dn,w,sq ⊢ dn,w,sq,sr
						0'*"\t" "@." 1' " = .. \n"
						2' //
					∎ { dn sr }
			∐. q ⊢ _nil◂{} .
				» "" _ ⊢ sr
				∎ { dn sr }
		@.pnt_dt_etr { dn e }
			∐ e ⊢ dt_def◂{ a l } .
				_inc dn ⊢ dn
				pnt_dt_def { dn l } ⊢ { dn sl }
				_dec dn ⊢ dn
				» _^ sl ⊢ sl,sr
					"\n"
					0' //
				∎ { dn sl }
			∐. e ⊢ dt_ln◂{ a t } .
				pnt_type t ⊢ st
				» _^ st ⊢ st,sr
					" = " 0' "\n" //
				∎ { dn sr }
		@.pnt_dt_def { dn l }
			∐ l ⊢ _cns◂{ { w t } l } .
				pnt_dt_def { dn l } ⊢ { dn sl }
				pnt_type t ⊢ st
				» _^ dn,w,st,sl ⊢ dn,w,st,sl,sr
					0'*"\t" "∐ " 1' " : " 2' "\n"
					3' //
				∎ { dn sr }
			∐. l ⊢ _nil◂{} .
				» "" _ ⊢ sr
				∎ { dn sr }
		@.pnt_type t
			∐ t ⊢ type_rcd◂l .
				pnt_type_rcd l ⊢ sl
				» _^ sl ⊢ sl,sr
					"{ " 0' "}" //
				∎ sr
			∐ t ⊢ imp◂{ t0 t1 } .
				pnt_type t0 ⊢ st0
				pnt_type t1 ⊢ st1
				» _^ st0,st1 ⊢ st0,st1,sr
					0' " → " 1' //
				∎ sr
			∐ t ⊢ app◂{ t0 t1 } .
				pnt_type t0 ⊢ st0
				pnt_type t1 ⊢ st1
				» _^ st0,st1 ⊢ st0,st1,sr
					0' "◂" 1' //
				∎ sr
			∐ t ⊢ type_name◂n .
				pnt_name n ⊢ sn
				∎ sn
			∐. t ⊢ type_var◂v .
				» _^ v ⊢ v,sr
					0' "'" //
				∎ sr
		@.pnt_type_rcd l
			∐ l ⊢ _cns◂{ t l } .
				pnt_type t ⊢ st
				pnt_type_rcd l ⊢ sl
				» _^ st,sl ⊢ st,sl,sr
					0' " " 1' //
				∎ sr
			∐. l ⊢ _nil◂{} .
				» "" _ ⊢ sr
				∎ sr
		@.pnt_lc_etr { dn e }
			∐ e ⊢ lc_def◂{ dp dt lc } .
				∐ dt ⊢ _some◂dt . 
					pnt_type dt ⊢ sdt 
					pnt_dst_ptn dp ⊢ sdp
					_inc dn ⊢ dn
					pnt_lc_code { dn lc } ⊢ { dn slc }
					_dec dn ⊢ dn
					» _^ sdp,slc,sdt ⊢ sdp,slc,sdt,sr
						" " 0' " : " 2' "\n"
						1' //
					∎ { dn sr }
				∐. . 
					pnt_dst_ptn dp ⊢ sdp
					_inc dn ⊢ dn
					pnt_lc_code { dn lc } ⊢ { dn slc }
					_dec dn ⊢ dn
					» _^ sdp,slc ⊢ sdp,slc,sr
						" " 0' "\n"
						1' //
					∎ { dn sr }
			∐ e ⊢ lc_ln◂c .
				pnt_cst c ⊢ sc
				» _^ sc ⊢ sc,sr
					" = " 0' "\n" //
				∎ { dn sr }
			∐. e ⊢ lc_cst◂lc .
				_inc dn ⊢ dn
				pnt_lc_code { dn lc } ⊢ { dn slc }
				_dec dn ⊢ dn
				» _^ slc ⊢ slc,sr
					" « \n"
					0'
					//
				∎ { dn sr }
		@.pnt_lc_qlq_etr { dn q }
			∐ q ⊢ _cns◂{ { w dp dt lc } q } .  
				∐ dt ⊢ _some◂dt . 
					pnt_type dt ⊢ sdt 
					pnt_dst_ptn dp ⊢ sdp
					pnt_lc_qlq_etr { dn q } ⊢ { dn sq }
					_inc dn ⊢ dn
					pnt_lc_code { dn lc } ⊢ { dn slc }
					_dec dn ⊢ dn
					» _^ dn,w,sdp,slc,sq,sdt ⊢ dn,w,sdp,slc,sq,sdt,sr
						0'*"\t" "@." 1' " " 2' " : " 5' "\n"
							3'
						4'
						//
					∎ { dn sr } 
				∐. . 
					pnt_dst_ptn dp ⊢ sdp
					pnt_lc_qlq_etr { dn q } ⊢ { dn sq }
					_inc dn ⊢ dn
					pnt_lc_code { dn lc } ⊢ { dn slc }
					_dec dn ⊢ dn
					» _^ dn,w,sdp,slc,sq ⊢ dn,w,sdp,slc,sq,sr
						0'*"\t" "@." 1' " " 2' "\n"
							3'
						4'
						//
					∎ { dn sr } 
			∐. q ⊢ _nil◂{} .
				» "" _ ⊢ sr
				∎ { dn sr }
				
	∎∎ 
  § @.mk_app { a l }
		∐ l ⊢ _cns◂{ hd tl } .
			ast.app { a hd } ⊢ a
			mk_app { a tl } ⊢ a
			∎ a
		∐. l ⊢ _nil◂{} .
			∎ a
  §§ syntax 
    §§+s8 
		@.wc 
			∐. "_" !| ; ⊢ { {} },p 
				_some {} ⊢ a 
				∎ a
				∐ " " ⊢ { {} } 
					_some {} ⊢ a 
					∎ a
				∐ "\t" ⊢ { {} } 
					_some {} ⊢ a 
					∎ a 
				∐ wc_tl !| ⊢ { xx }
					_none {} ⊢ a 
					∎ a
				∐. ⊢ { } 
					_some {} ⊢ a 
					∎ a 
		@.wc_tl 
			∐ "," !| ⊢ { {} }
				_none {} ⊢ a 
				∎ a 
			∐. ⊢ { }
				_some {} ⊢ a  
				∎ a
	§§+s8
		@.name
			∐# prm_word "." name ⊢ { w {} n }
				ast.mdl_n { w n } ⊢ r
				_some r ⊢ a
				∎ a
			∐.# prm_word ⊢ { w }
				ast.fst_n w ⊢ r
				_some r ⊢ a
				∎ a
	§§+s8
		@.cst
			∐ _scf_d "r" ⊢ { x {} }
				ast.r64 x ⊢ r
				ast.cst_v r ⊢ r 
				_some r ⊢ a
				∎ a
			∐ "0x" _scf_x "r" ⊢ { {} x {} }
				ast.r64 x ⊢ r 
				ast.cst_v r ⊢ r 
				_some r ⊢ a 
				∎ a  
			∐ stg_ltr ⊢ { s }
				ast.s8 s ⊢ r
				ast.cst_v r ⊢ r 
				_some r ⊢ a
				∎ a
			∐. name ⊢ { n }
				ast.cst_name n ⊢ r
				_some r ⊢ a
				∎ a 
    §§+s8
		  @.nl
		  	∐# "\n" nl ⊢ { {} nn }
		  		_inc nn ⊢ nn 
		  		_some nn ⊢ a 
		  		∎ a 
		  	∐.# "\n" ⊢ { {} } 
		  		_some %[ 1r ] ⊢ a 
		  		∎ a
    ¶ prs_rslt◂a'
		∐ prs_vld : a'
		∐ prs_err : _lst◂{ _r64 _r64 _s8 }  
	§ prs_cct { e0 e1 } 
		$ e0 ⊢
		∐ prs_vld◂a0 . 
			$ e1 ⊢ 
			∐ prs_vld◂a1 . 
				prs_vld { a0 a1 } ⊢ e 
				∎ e 
			∐. prs_err◂l1 . 
				prs_err l1 ⊢ e 
				∎ e 
		∐. prs_err◂l0 .
			$ e1 ⊢ 
			∐ prs_vld◂a1  . 
				prs_err l0 ⊢ e 
				∎ e 
			∐. prs_err◂l1 . 
				apnd { l0 l1 } ⊢ l
				prs_err l ⊢ e 
				∎ e  
	§ mk_prs_err { n r s } 
		_nil {} ⊢ l 
		_cns { { n r s } l } ⊢ l 
		prs_err l ⊢ e  
		∎ e 
	§ @.pnt_prs_err el 
		$ el ⊢ 
		∐ _cns◂{ { n0 n1 em } el } . 
			pnt_prs_err el ⊢ sel 
			» _^ n0,n1,em,sel ⊢ n0,n1,em,sel,sr 
				"prs_err " 0d' "-" 1d' ":" 2' "\n" 
				3' // 
			∎ sr   
		∐. _nil◂{} . 
			» "" _ ⊢ sr 
			∎ sr 
			

	§§+s8
		@.mtc_ptn
			∐# "{" mtc_ptn_lst "}" ⊢ { {} l {} }
				RP.rcd l ⊢ r
				_some r ⊢ a
				∎ a
			∐.# mtc ⊢ { s }
				RP.atm s ⊢ r
				_some r ⊢ a
				∎ a
		@.mtc_ptn_lst
			∐# mtc_ptn mtc_ptn_lst ⊢ { hd tl }
				_cns { hd tl } ⊢ l
				_some l ⊢ a
				∎ a
			∐.# ⊢ {}
				_nil {} ⊢ l
				_some l ⊢ a
				∎ a
		@.mtc_tl
			∐# "," !| mtc mtc_tl ⊢ { {} r rs }
				##RP.atm r ⊢ r
				_cns { r rs } ⊢ rs
				_some rs ⊢ a
				∎ a
			∐.# ⊢ { }
				_nil {} ⊢ rs
				_some rs ⊢ a
				∎ a
		@.mtc
			∐# name "◂" mtc_ptn ⊢ { n {} mp } 
				ast.mtc_agl { n mp } ⊢ p 
				_some p ⊢ a 
				∎ a
			∐# "%[" !| cst "]" ⊢ { {} c {} }
				ast.mtc_cst c ⊢ r
				_some r ⊢ a
				∎ a
			∐# "%" !| prm_word ⊢ { {} w }
				ast.mtc_reg w ⊢ r
				_some r ⊢ a
				∎ a
			∐# prm_word ⊢ { w }
				ast.mtc_reg w ⊢ r
				_some r ⊢ a
				∎ a
			∐.# "_" ⊢ { {} }
				_none {} ⊢ o 
				ast.mtc_wc o ⊢ r 
				_some r ⊢ a 
				∎ a
	§§+s8
		@.src_ptn
			∐# "{" src_ptn_lst "}" ⊢ { {} l {} }
				RP.rcd l ⊢ r
				_some r ⊢ a
				∎ a
			∐.# src ⊢ { s }
				RP.atm s ⊢ r
				_some r ⊢ a
				∎ a
		@.src_ptn_lst
			∐# src_ptn src_ptn_lst ⊢ { hd tl }
				_cns { hd tl } ⊢ l
				_some l ⊢ a
				∎ a
			∐.# ⊢ {}
				_nil {} ⊢ l
				_some l ⊢ a
				∎ a
		@.src_tl
			∐# "," !| src src_tl ⊢ { {} r rs }
				##RP.atm r ⊢ r
				_cns { r rs } ⊢ rs
				_some rs ⊢ a
				∎ a
			∐.# ⊢ { }
				_nil {} ⊢ rs
				_some rs ⊢ a
				∎ a
		@.src
			∐# "%[" cst "]" ⊢ { {} c {} }
				ast.im_reg c ⊢ r
				_some r ⊢ a
				∎ a
			∐ "%" !| prm_word ⊢ { {} w }
				ast.src_reg w ⊢ r
				_some r ⊢ a
				∎ a
			∐.# prm_word ⊢ { w }
				ast.src_reg w ⊢ r
				_some r ⊢ a
				∎ a
	§§+s8
		@.dst_ptn
			∐# "{" dst_ptn_lst "}" ⊢ { {} l {} }
				RP.rcd l ⊢ r
				_some r ⊢ a
				∎ a
			∐.# dst ⊢ { s }
				RP.atm s ⊢ r
				_some r ⊢ a
				∎ a
		@.dst_ptn_lst
			∐# dst_ptn dst_ptn_lst ⊢ { hd tl }
				_cns { hd tl } ⊢ l
				_some l ⊢ a
				∎ a
			∐.# ⊢ {}
				_nil {} ⊢ l
				_some l ⊢ a
				∎ a
		@.dst_ptn_tl
			∐# "," !| dst_ptn dst_ptn_tl ⊢ { {} d ds }
				_cns { d ds } ⊢ ds
				_some ds ⊢ a
				∎ a
			∐.# ⊢ { }
				_nil {} ⊢ ds
				_some ds ⊢ a
				∎ a
		@.dst_tl
			∐# "," !| dst dst_tl ⊢ { {} r rs }
				##RP.atm r ⊢ r
				_cns { r rs } ⊢ rs
				_some rs ⊢ a
				∎ a
			∐.# ⊢ { }
				_nil {} ⊢ rs
				_some rs ⊢ a
				∎ a
		@.dst
			∐ "%" !| word ⊢ { {} w }
				ast.dst_reg w ⊢ r
				_some r ⊢ a
				∎ a
			∐ word ⊢ { w }
				ast.dst_reg w ⊢ r
				_some r ⊢ a
				∎ a
			∐. "_" ⊢ { {} }
				_none {} ⊢ o 
				ast.wc o ⊢ r
				_some r ⊢ a
				∎ a 
    §§+s8
		@.type
			∐.# type_atm type_app_tl type_tl ⊢ { t0 t1 t2 }
				mk_app { t0 t1 } ⊢ t
				∐ t2 ⊢ _some◂t2 .
					ast.imp { t t2 } ⊢ t
					_some t ⊢ a
					∎ a
				∐. t2 ⊢ _none◂{} .
					_some t ⊢ a
					∎ a
		@.type_lst 
      ∐# type type_lst ⊢ { t l } 
        _cns { t l } ⊢ l 
        _some l ⊢ a 
        ∎ a 
      ∐.# ⊢ { } 
        _nil {} ⊢ l 
        _some l ⊢ a 
        ∎ a 
    @.type_tl
			∐# "→" type ⊢ { {} t }
				_some t ⊢ a
				_some a ⊢ a
				∎ a
			∐.# ⊢ { }
				_none {} ⊢ r
				_some r ⊢ a
				∎ a
		@.type_app_tl
			∐# "◂" type_atm type_app_tl ⊢ { {} t0 t1 }
				_cns { t0 t1 } ⊢ r
				_some r ⊢ a
				∎ a
			∐.# ⊢ { }
				_nil {} ⊢ r
				_some r ⊢ a
				∎ a
		@.type_atm
			∐# "{" type_lst "}" ⊢ { {} l {} }
				rev l ⊢ l
				ast.type_rcd l ⊢ t
				_some t ⊢ a
				∎ a
			∐# "(" type ")" ⊢ { {} t {} }
				_some t ⊢ a
				∎ a
			∐# var ⊢ { v }
				ast.type_var v ⊢ r
				_some r ⊢ a
				∎ a
			∐.# name ⊢ { n }
				ast.type_name n ⊢ r
				_some r ⊢ a
				∎ a
		@.var
			∐. word "'" ⊢ { w {} }
				_some w ⊢ a
				∎ a
    §§+s8 
		@.nls 
			∐# "\n" !| nls ⊢ { {} xx }
				prs_vld {} ⊢ p 
				_some p ⊢ a 
				∎ a 
			∐# "##" !| line_res nls ⊢ { {} xx yy } 
				prs_vld {} ⊢ p 
				_some p ⊢ a 
				∎ a
			∐# "\\\\" !| line_res nls ⊢ { {} xx yy } 
				prs_vld {} ⊢ p 
				_some p ⊢ a 
				∎ a
			∐# "\\[" !| ; ⊢ { {} },p
				_some p ⊢ a 
				∎ a
				∐# "\n" cmt_in nls ⊢ { {} p0 p1 }
					prs_cct { p0 p1 } ⊢ pr 
					$ pr ⊢ 
					∐ prs_vld◂{ p0 p1 } . 
						prs_vld {} ⊢ p 
						_some p ⊢ a 
						∎ a 
					∐. prs_err◂e . 
						pnt_prs_err e ⊢ s 
						_emt s ⊢ s 
						∎| 		
				∐.# ⊢ { } 
					##» _^ n,r ⊢ n,r,sr 
					» _^ _n,_r ⊢ n,r,sr 
						"nls_err " 0d' "-" 1d' ":\n" //
					_emt sr ⊢ sr 
					∎|   
			∐.# ⊢ { } 
				prs_vld {} ⊢ p 
				_some p ⊢ a 
				∎ a
		@.cmt_in 
			∐# "\\[" !| ; ⊢ { {} },p
				_some p ⊢ a 
				∎ a 
				∐# "\n" cmt_in cmt_in ⊢ { {} p0 p1 }
					prs_cct { p0 p1 } ⊢ pr 
					$ pr ⊢ 
					∐ prs_vld◂{ p0 p1 } . 
						prs_vld {} ⊢ p 
						_some p ⊢ a 
						∎ a 
					∐. prs_err◂e . 
						pnt_prs_err e ⊢ s 
						_emt s ⊢ s 
						∎| 		
					∐.# ⊢ { } 
						_nil {} ⊢ l 
						» "blk_cmt 0" _ ⊢ s
						_cns { { _n _r s } l } ⊢ l 
						prs_err l ⊢ l 
						_some l ⊢ a 
						∎ a 
			∐# "\\]" !| ; ⊢ { {} },pe
				prs_vld {} ⊢ p 
				_some p ⊢ a 
				∎ a  
				∐# "\n" ⊢ { {} }
					_some {} ⊢ a 
					∎ a  
				∐# !| _byt ⊢ { b } 
					_none {} ⊢ a 
					∎ a 
				∐.# ⊢ { } 
					_some {} ⊢ a 
					∎ a   
			∐# line_res_c ⊢ { c }
				_some c ⊢ a 
				∎ a
			∐.# ⊢ { } 
				_nil {} ⊢ l 
				» "blk_cmt 1" _ ⊢ s
				_cns { { _n _r s } l } ⊢ l 
				prs_err l ⊢ l 
				_some l ⊢ a 
				∎ a
		@.line_res_c 
			∐# "\n" cmt_in ⊢ { {} c }
				_some c ⊢ a 
				∎ a 
			∐# _byt line_res_c ⊢ { b l }  
				_some l ⊢ a 
				∎ a 
			∐.# ⊢ { } 
				» "line_res_c 0" _ ⊢ se 
				_emt se ⊢ se 
				∎| 
		@.line_res 
			∐# "\n" ⊢ { {} }
				_some { _n _r } ⊢ a 
				∎ a 
			∐# _byt line_res ⊢ { b { n0 r0 } }
				_some { _n r0 } ⊢ a
				∎ a  
			∐.# ⊢ { }
				_some { _n _r } ⊢ a 
				∎ a
	§§+s8 
		@.glb_etr_ch 
			∐* "§§+s8" ⊢ { {} }
				_some {} ⊢ a 
				∎ a
			∐* "§§" ⊢ { {} }
				_some {} ⊢ a 
				∎ a
			∐* "§" ⊢ { {} }
				_some {} ⊢ a 
				∎ a
			∐* "¶" ⊢ { {} }
				_some {} ⊢ a 
				∎ a
			∐.* "∎∎" ⊢ { {} }
				_some {} ⊢ a 
				∎ a
		@.glb_etr_res_ch 
			∐* glb_etr_ch !| ⊢ { g }
				_none {} ⊢ a 
				∎ a  
			∐.* _byt ⊢ { b } 
				_some {} ⊢ a 
				∎ a
		@.glb_etr_clq_ch 
			∐* "@" !| ⊢ { q } 
				_none {} ⊢ a 
				∎ a 
			∐* glb_etr_ch !| ⊢ { c } 
				_none {} ⊢ a
				∎ a  
			∐.* _byt ⊢ { b } 
				_some {} ⊢ a 
				∎ a
		@.glb_etr_res_clq 
			∐* glb_etr_clq_ch glb_etr_res_clq ⊢ { c r }
				_some {} ⊢ a 
				∎ a 
			∐.* ⊢ { } 
				_some {} ⊢ a 
				∎ a   
		@.glb_etr_res_line 
			∐# "\n" ⊢ { n } 
				_some {} ⊢ a 
				∎ a 
			∐# glb_etr_ch !| ⊢ { g } 
				_none {} ⊢ a 
				∎ a 
			∐# "@" !| ⊢ { q } 
				_none {} ⊢ a 
				∎ a 
			∐# _byt glb_etr_res_line ⊢ { b r } 
				_some {} ⊢ a 
				∎ a 
			∐# _byt ⊢ { b } 
				_some {} ⊢ a 
				∎ a 
			∐.# ⊢ { } 
				_some {} ⊢ a 
				∎ a  
    §§+s8 @.rtm_sbl 
		∐ "§~" ⊢ { {} } 
			_some {} ⊢ a 
			∎ a 
		∐. "§%" ⊢ { {} } 
			_some {} ⊢ a 
			∎ a
		§§+s8 
      @.s8_ptn
			∐* var_idx "*" !| stg_ltr ⊢ { i {} s }
				ast.exp_s8.for { i s } ⊢ r
				_some r ⊢ a
				∎ a
			∐* s8_ptn_line ⊢ { s }
				ast.exp_s8.s8 s ⊢ r
				_some r ⊢ a
				∎ a
			∐* stg_ltr ⊢ { s }
				ast.exp_s8.s8 s ⊢ s
				_some s ⊢ a
				∎ a
			∐* name ⊢ { n }
				ast.cst_name n ⊢ c 
				ast.exp_s8.cst c ⊢ n
				_some n ⊢ a
				∎ a
			∐.* s8_fmt ⊢ { f }
				ast.exp_s8.idx f ⊢ r
				_some r ⊢ a
				∎ a
		@.var_idx
			∐. _scf_d "'" ⊢ { x {} }
				_some x ⊢ a
				∎ a
		@.s8_fmt
			∐ _scf_d "d'" ⊢ { d {} }
				ast.exp_s8.d {} ⊢ f
				_some { f d } ⊢ a
				∎ a
			∐ _scf_d "x'" ⊢ { d {} }
				ast.exp_s8.x {} ⊢ f
				_some { f d } ⊢ a
				∎ a
			∐. _scf_d "'" ⊢ { d {} }
				ast.exp_s8.s {} ⊢ f
				_some { f d } ⊢ a
				∎ a
		@.s8_ptn_line
			∐. "`" line ⊢ { {} l }
				rp8.mk_s8 l ⊢ { l s } 
				_some s ⊢ a
				∎ a
		@.line
			∐ "\n" ⊢ { {} }
				» 10r _ ⊢ s
				##_nil {} ⊢ l
				##_cns { s l } ⊢ l
				rp8.e {} ⊢ l 
				rp8.pfx_chr { s l } ⊢ l 
				_some l ⊢ a
				∎ a
			∐. _byt line ⊢ { b l }
				##_cns { b l } ⊢ l
				rp8.pfx_chr { b l } ⊢ l 
				_some l ⊢ a
				∎ a
    §§+s8 
      @.s8_ptn_lst 
			∐# nls "//" ⊢ { nn {} } 
				_nil {} ⊢ l 
				_some l ⊢ a 
				∎ a 
			∐.# nls s8_ptn s8_ptn_lst ⊢ { nn p l } 
				_cns { p l } ⊢ l 
				_some l ⊢ a 
				∎ a     
   \[
    §§+s8 @.g0 
      ∐.*  ; ⊢ {  },o 
        ##$ o ⊢ 
				##∐ prs_vld◂o . 
					$ o ⊢ 
					∐ _some◂{ d lc } . 
            $ lc ⊢ lc0 
            ∎|  
					∐. _none◂{} . 
				##∐. prs_err◂e . 
        ##  prs_err e ⊢ e 
				##	_some e ⊢ a 
				##	∎ a   
            ∎| 

        ∐. ⊢ { } 
          _none {} ⊢ o 
          ##prs_vld o ⊢ o 
          _some o ⊢ a 
          ∎ a  
          \]

    §§+s8 
		@.lc_exp_line
			∐* "_^" !| lc_exp_s8_sd s8_ptn_lst ⊢ { {} { s d } ps }
				ast.op_exp_s8 { ps s d } ⊢ e
				_some e ⊢ a
				∎ a
			∐.* cst "_" "⊢" dst_ptn ⊢ { c {} {} r }
				_nil {} ⊢ l
				RP.rcd l ⊢ s
				ast.op_exp_cst { c s r } ⊢ e
				_some e ⊢ a
				∎ a		
		@.lc_exp_s8_sd
			∐* wc "⊢" !| dst ⊢ { xx {} r }
				_nil {} ⊢ l0
				_nil {} ⊢ l1
				_cns { r l1 } ⊢ l1
				_some { l0 l1 } ⊢ a
				∎ a
			∐.* src src_tl "⊢" dst dst_tl ⊢ { r0 rs0 {} r1 rs1 }
				_cns { r0 rs0 } ⊢ rs0
				_cns { r1 rs1 } ⊢ rs1
				_some { rs0 rs1 } ⊢ a
				∎ a
	
		@.lc_code
			∐* nls "∎|" ⊢ { nn {} }
				ast.exn _n ⊢ c
				prs_vld c ⊢ c 
				_some c ⊢ a
				∎ a
			∐# nls "∎" !| ; ⊢ { nn {} },r
				_some r ⊢ r 
				∎ r  

				∐# "\n" ⊢ { {} } 
					_none {} ⊢ r 
					ast.ret r ⊢ c 
					prs_vld c ⊢ c 
					_some c ⊢ a 
					∎ a 
				∐# src_ptn "\n" ⊢ { r {} }
					_some r ⊢ r 
					ast.ret r ⊢ c
					prs_vld c ⊢ c 
					_some c ⊢ a
					∎ a
				∐.# line_res ⊢ { b } 
					» "lc_code ∎ .. " _ ⊢ se
					_nil {} ⊢ l 
					_cns { { _n _r se } l } ⊢ l 
					prs_err l ⊢ e 
					_some e ⊢ a 
					∎ a 
			∐# nls "^" !| lc_exp_s8_sd "\n" s8_ptn_lst lc_code ⊢ { nn {} { s d } {} ps lc }
				rev ps ⊢ ps 
				ast.op_exp_s8 { ps s d } ⊢ l 
				$ lc ⊢ 
				∐ prs_vld◂lc . 
					ast.seq { l lc } ⊢ lc 
					prs_vld lc ⊢ lc 
					_some lc ⊢ a
					∎ a
				∐. prs_err◂e . 
					prs_err e ⊢ e 
					_some e ⊢ a 
					∎ a 
			∐* nls "◂" !| src "," src_ptn ; ⊢ { nn {} r0 {} r1 },o
        $ o ⊢ 
				∐ prs_vld◂o . 
					$ o ⊢ 
					∐ _some◂{ d lc } . 
            ast.op_app { r0 r1 d } ⊢ e
						ast.seq { e lc } ⊢ c
						prs_vld c ⊢ c 
						_some c ⊢ a 
						∎ a 
					∐. _none◂{} . 
            ast.app_jmp { r0 r1 } ⊢ c 
						prs_vld c ⊢ c 
						_some c ⊢ a 
						∎ a
				∐. prs_err◂e . 
          prs_err e ⊢ e 
					_some e ⊢ a 
					∎ a   
			
        ∐* "⊢|" !| ⊢ { {} } 
					_none {} ⊢ o 
					prs_vld o ⊢ o 
					_some o ⊢ a 
					∎ a  
				∐.* "⊢" dst_ptn lc_code ⊢ { {} r2 lc }
					$ lc ⊢ 
					∐ prs_vld◂lc . 
						_some { r2 lc } ⊢ a 
						prs_vld a ⊢ a 
						_some a ⊢ a 
						∎ a
					∐. prs_err◂e . 
						prs_err e ⊢ e 
						_some e ⊢ a 
						∎ a 
      ∐* nls "»" !| lc_exp_line lc_code ⊢ { nn {} l lc } 
				$ lc ⊢ 
				∐ prs_vld◂lc . 
					∐ l ⊢ ast.op_exp_cst◂{ c sp dp } . 
						ast.im_reg c ⊢ s 
						RP.atm s ⊢ s 
						_nil {} ⊢ l 
						_cns { dp l } ⊢ l 
						ast.id_line { l lc } ⊢ il 
						ast.op_id { s il } ⊢ lc 
						prs_vld lc ⊢ lc 
						_some lc ⊢ a 
						∎ a 
					∐. . 
						ast.seq { l lc } ⊢ lc 
						prs_vld lc ⊢ lc 
						_some lc ⊢ a
						∎ a
				∐. prs_err◂e . 
					prs_err e ⊢ e 
					_some e ⊢ a 
					∎ a 
			∐# nls name src_ptn ; ⊢ { nn n r0 },o 
				$ o ⊢ 
				∐ prs_vld◂o . 
					$ o ⊢ 
					∐ _some◂{ y lc } .
						ast.op_name { n r0 y } ⊢ e
						ast.seq { e lc } ⊢ e 
						prs_vld e ⊢ e 
						_some e ⊢ a
						∎ a	
					∐. _none◂{} . 
						ast.jmp { n r0 } ⊢ lc 
						prs_vld lc ⊢ lc 
						_some lc ⊢ a 
						∎ a
				∐. prs_err◂e . 
					prs_err e ⊢ e 
					_some e ⊢ a 
					∎ a  
				
				∐* "⊢|" !| ⊢ { {} }
					_none {} ⊢ o 
					prs_vld o ⊢ o 
					_some o ⊢ a 
					∎ a  
				∐# "⊢" dst_ptn "\n" !| lc_code ⊢ { {} r1 {} lc }
					$ lc ⊢ 
					∐ prs_vld◂lc . 
						_some { r1 lc } ⊢ o
						prs_vld o ⊢ o 
						_some o ⊢ a 
						∎ a
					∐. prs_err◂e . 
						prs_err e ⊢ e 
						_some e ⊢ a 
						∎ a 
				∐.# line_res lc_code ⊢ { { nn rr } lc }
					$ lc ⊢ 
					∐ prs_vld◂lc . 
						» "lc_code 20" _ ⊢ se 
						_nil {} ⊢ e
						_cns { { nn rr se } e } ⊢ e 
						prs_err e ⊢ e 
						_some e ⊢ a 
						∎ a
					∐. prs_err◂e . 
						» "lc_code 21" _ ⊢ se 
						_cns { { nn rr se } e } ⊢ e 
						prs_err e ⊢ e 
						_some e ⊢ a 
						∎ a 
      ∐* lc_mtc ⊢ { m }
				$ m ⊢ 
				∐ prs_vld◂m . 
					ast.mtc m ⊢ m
					prs_vld m ⊢ m 
					_some m ⊢ a
					∎ a
				∐. prs_err◂e . 
					prs_err e ⊢ e 
					_some e ⊢ a 
					∎ a 
      ∐# nls "$" !| ; ⊢ { nn {} },rr
				$ rr ⊢ 
				∐ prs_vld◂{ s il } .  
					$ il ⊢ 
					∐ prs_vld◂il . 
						ast.op_id { s il } ⊢ l 
						prs_vld l ⊢ l 
						_some l ⊢ a 
						∎ a
					∐. prs_err◂e . 
						prs_err e ⊢ e 
						_some e ⊢ a 
						∎ a 
				∐. prs_err◂l . 
					prs_err l ⊢ e 
					_some e ⊢ a 
					∎ a 

				∐# src_ptn "⊢" !| ; ⊢ { s {} },il 
					prs_vld { s il } ⊢ a 
					_some a ⊢ a 
					∎ a 
					∐# "\n" lc_id_mtc ⊢ { {} m }
						$ m ⊢ 
						∐ prs_vld◂m . 
							ast.id_mtc m ⊢ m 
							prs_vld m ⊢ m 
							_some m ⊢ a 
							∎ a
						∐. prs_err◂e . 
							prs_err e ⊢ e 
							_some e ⊢ a 
							∎ a  
					∐.# dst_ptn dst_ptn_tl "\n" lc_code ⊢ { r1 rs {} lc }
						$ lc ⊢ 
						∐ prs_vld◂lc . 
							_cns { r1 rs } ⊢ rs
							ast.id_line { rs lc } ⊢ e
							prs_vld e ⊢ e 
							_some e ⊢ a
							∎ a
						∐. prs_err◂e . 
							prs_err e ⊢ e 
							_some e ⊢ a 
							∎ a 
				∐# line_res lc_id_mtc ⊢ { { n r } lc }
					$ lc ⊢ 
					∐ prs_vld◂x . 
						_nil {} ⊢ l 
						» "glb_etr id_line line_res 0" _ ⊢ s
						_cns { { n r s } l } ⊢ l 
						prs_err l ⊢ l 
						_some l ⊢ a 
						∎ a
					∐. prs_err◂l . 
						» "glb_etr id_line line_res 1" _ ⊢ s
						_cns { { n r s } l } ⊢ l 
						prs_err l ⊢ l 
						_some l ⊢ a 
						∎ a
				∐.# line_res lc_code ⊢ { { n r } lc } 
					$ lc ⊢ 
					∐ prs_vld◂x . 
						_nil {} ⊢ l 
						» "glb_etr id_line line_res 2" _ ⊢ s
						_cns { { n r s } l } ⊢ l 
						prs_err l ⊢ l 
						_some l ⊢ a 
						∎ a
					∐. prs_err◂l . 
						» "glb_etr id_line line_res 3" _ ⊢ s
						_cns { { n r s } l } ⊢ l 
						prs_err l ⊢ l 
						_some l ⊢ a 
						∎ a
			∐.* glb_etr_res_line ; ⊢ { r },lc
				$ lc ⊢ 
				∐ prs_vld◂lc . 			 
					» "lc_code 9" _ ⊢ se 
					mk_prs_err { _n _r se } ⊢ e
					_some e ⊢ a 
					∎ a
				∐. prs_err◂e . 
					» "lc_code 10" _ ⊢ se  
					_cns { { _n _r se } e } ⊢ e
					prs_err e ⊢ e 
					_some e ⊢ a 
					∎ a 
				
				∐* lc_code ⊢ { lc } 
					_some lc ⊢ a 
					∎ a
				∐.* glb_etr_res_clq ⊢ { r } 
					» "lc_code 11" _ ⊢ se 
					_nil {} ⊢ l 
					_cns { { _n _r se } l } ⊢ l 
					prs_err l ⊢ e 
					_some e ⊢ a 
					∎ a  
    @.id_line
			∐* lc_id_mtc ⊢ { m }
				$ m ⊢ 
				∐ prs_vld◂m . 
					ast.id_mtc m ⊢ m 
					prs_vld m ⊢ m 
					_some m ⊢ a 
					∎ a
				∐. prs_err◂e . 
					prs_err e ⊢ e 
					_some e ⊢ a 
					∎ a 
			∐.* dst_ptn dst_ptn_tl lc_code ⊢ { r1 rs lc }
				$ lc ⊢ 
				∐ prs_vld◂lc . 
					_cns { r1 rs } ⊢ rs
					ast.id_line { rs lc } ⊢ e
					prs_vld e ⊢ e 
					_some e ⊢ a
					∎ a
				∐. prs_err◂e . 
					prs_err e ⊢ e 
					_some e ⊢ a 
					∎ a 
		@.lc_mtc
			∐* nls "∐." !| mtc_line lc_code ⊢ { nn {} l c0 }
				prs_cct { l c0 } ⊢ e0 
        $ e0 ⊢ 
        ∐ prs_vld◂{ l c0 } . 
					ast.mtc_code c0 ⊢ c1
					p_end { l c1 } ⊢ m
					prs_vld m ⊢ m 
					_some m ⊢ a
					∎ a
        ∐. prs_err◂e0 . 
          prs_err e0 ⊢ e0
          _some e0 ⊢ a 
          ∎ a 
			∐.* nls "∐" mtc_line lc_code lc_mtc ⊢ { nn {} l c m }
				prs_cct { l c } ⊢ e0 
        prs_cct { e0 m } ⊢ e0 
        $ e0 ⊢ 
        ∐ prs_vld◂{ { l c } m } . 
					ast.mtc_code c ⊢ c
					p_cns { { l c } m } ⊢ m
					prs_vld m ⊢ m 
					_some m ⊢ a
					∎ a
        ∐. prs_err◂e0 . 
          prs_err e0 ⊢ e0 
          _some e0 ⊢ a 
          ∎ a 					
		@.lc_id_mtc
			∐# nls "∐." !| mtc_ptn mtc_line_tl lc_code ⊢ { nn {} mp l c }
				prs_cct { l c } ⊢ e0 
        $ e0 ⊢ 
        ∐ prs_vld◂{ l c } . 
					ast.mtc_code c ⊢ c
					p_end { mp l c } ⊢ m
					prs_vld m ⊢ m 
					_some m ⊢ a
					∎ a
        ∐. prs_err◂e0 . 
          prs_err e0 ⊢ e0 
          _some e0 ⊢ a 
          ∎ a 
			∐.# nls "∐" mtc_ptn mtc_line_tl lc_code lc_id_mtc ⊢ { nn {} mp l c m }
				prs_cct { l c } ⊢ e0 
        prs_cct { e0 m } ⊢ e0 
        $ e0 ⊢ 
        ∐ prs_vld◂{ { l c } m } . 
					ast.mtc_code c ⊢ c
					p_cns { { mp l c } m } ⊢ m
					prs_vld m ⊢ m 
					_some m ⊢ a
					∎	a
        ∐. prs_err◂e0 . 
          prs_err e0 ⊢ e0 
          _some e0 ⊢ a 
          ∎ a 					
		@.mtc_line
			∐# mtc_test mtc_test_tl ⊢ { e0 l }
				_cns { e0 l } ⊢ l
				prs_vld l ⊢ l 
				_some l ⊢ a
				∎ a
			∐# "." "\n" ⊢ { {} {} }
				_nil {} ⊢ l
				prs_vld l ⊢ l 
				_some l ⊢ a
				∎ a
			∐.# line_res ⊢ { bb } 
				» "mtc_line 0" _ ⊢ se 
				_nil {} ⊢ pe 
				_cns { { _n _r se } pe } ⊢ pe 
				prs_err pe ⊢ pe 
				_some pe ⊢ a 
				∎ a  
		@.mtc_test
			∐# src_ptn "⊢" !| name "◂" mtc_ptn ⊢ { r0 {} n {} r1 }
				ast.mtc_agl { n r1 } ⊢ mp 
				RP.atm mp ⊢ mp 
				ast.mtc_id { r0 mp } ⊢ r
				_some r ⊢ a
				∎ a
			∐# mtc_val "=<" mtc_val ⊢ { v0 {} v1 }
				ast.mtc_cmp_test { v0 v1 } ⊢ r 
				_some r ⊢ a 
				∎ a  
			∐.# mtc_val "=" mtc_val ⊢ { v0 {} v1 }
				ast.mtc_test { v0 v1 } ⊢ r
				_some r ⊢ a
				∎ a
		@.mtc_test_tl
			∐# ";" !| mtc_test mtc_test_tl ⊢ { {} e l }
				_cns { e l } ⊢ l
				_some l ⊢ a
				∎ a
			∐.# "." "\n" ⊢ { {} {} }
				_nil {} ⊢ l
				_some l ⊢ a
				∎ a
		@.mtc_line_tl
      ∐# ";" !| mtc_test mtc_test_tl ⊢ { {} e l }
				_cns { e l } ⊢ l
				prs_vld l ⊢ l
				_some l ⊢ a
				∎ a
			∐# "." "\n" ⊢ { {} {} }
				_nil {} ⊢ l
				prs_vld l ⊢ l 
				_some l ⊢ a
				∎ a
			∐.# line_res ⊢ { bb } 
				» "mtc_line_tl 0" _ ⊢ se 
				_nil {} ⊢ pe 
				_cns { { _n _r se } pe } ⊢ pe 
				prs_err pe ⊢ pe 
				_some pe ⊢ a 
				∎ a 
		@.mtc_val
			∐ word "'" ⊢ { w {} }
        ast.test_var w ⊢ v
				_some v ⊢ a
				∎ a
			∐. cst ⊢ { c }
        ast.test_cst c ⊢ v
				_some v ⊢ a
				∎ a
    §§+s8
		@.file
			∐* nls glb_etr file ⊢ { nn e gl }
				prs_cct { e gl } ⊢ e0 
				$ e0 ⊢ 
				∐ prs_vld◂{ e gl } . 
					_cns { e gl } ⊢ gl
					prs_vld gl ⊢ gl 
					_some gl ⊢ a
					∎ a
				∐. prs_err◂err . 
					prs_err err ⊢ e 
					_some e ⊢ a 
					∎ a 
			∐.* nls ; ⊢ { nn },p 
				_nil {} ⊢ gl
				prs_vld gl ⊢ gl  
				_some gl ⊢ a
				∎ a
				∐* _byt !| ⊢ { b }
					» "file end" _ ⊢ xx 
					_emt xx ⊢ xx 
					_none {} ⊢ a 
					∎ a   
				∐.* ⊢ { } 
					» "file end nl" _ ⊢ xx 
					_emt xx ⊢ xx 
					_some {} ⊢ a 
					∎ a 
		@.glb_etr
			∐* "§§+s8" !| ; ⊢ { {} },p 
				_some p ⊢ a
				∎ a 
				∐* grm_etr grm_etr_lst  ⊢ { e l }
					##rev l ⊢ l
					_cns { e l } ⊢ l
					ast.grm_etr l ⊢ l
					prs_vld l ⊢ l 
					_some l ⊢ a
					∎ a
				∐.* glb_etr_res ⊢ { bs }
					_nil {} ⊢ l 
					» "grb_etr 1" _ ⊢ s 
					_cns { { _n _r s } l } ⊢ l 
					prs_err l ⊢ e 
					_some e ⊢ a
					∎ a
			∐* nls "§§" !| ; ⊢ { nn {} },p 
				_some p ⊢ a 
				∎ a
				∐* word mdl_etr_def ⊢ { n d }
					$ d ⊢ 
					∐ prs_vld◂d . 
						ast.mdl_etr { n d } ⊢ r
						prs_vld r ⊢ r 
						_some r ⊢ a
						∎ a 
					∐. prs_err◂err . 
						prs_err err ⊢ err 
						_some err ⊢ a 
						∎ a 
				∐.* mdl_etr_res ⊢ { r } 
					_nil {} ⊢ l 
					» "glb_etr 0.1" _ ⊢ s
					_cns { { _n _r s } l } ⊢ l
					prs_err l ⊢ e 
					_some e ⊢ a 
					∎ a
			∐# rtm_sbl "\n" lc_code ⊢ { {} {} lc }
				$ lc ⊢ 
				∐ prs_vld◂lc . 
					ast.lc_cst lc ⊢ r
					» "" _ ⊢ n 
					ast.lc_etr { n r } ⊢ r 
					prs_vld r ⊢ r 
					_some r ⊢ a
					∎ a
				∐. prs_err◂e .	
					prs_err e ⊢ e 
					_some e ⊢ a 
					∎ a
			∐* "§" !| ; ⊢ { {} },p 
				_some p ⊢ a 
				∎ a
				∐* lc_etr_body ⊢ { le }
					##prs_vld le ⊢ le 
					_some le ⊢ a
					∎ a
				∐.* glb_etr_res ⊢ { bs }
					_nil {} ⊢ l 
					» "glb_etr 3" _ ⊢ s 
					_cns { { _n _r s } l } ⊢ l 
					prs_err l ⊢ e 
					_some e ⊢ a
					∎ a
			∐.* "¶" !| ; ⊢ { {} },p 
				_some p ⊢ a
				∎ a 
				∐* dt_etr ⊢ { de }
					prs_vld de ⊢ de 
					_some de ⊢ a
					∎ a
				∐.* glb_etr_res ⊢ { bs }
					_nil {} ⊢ l 
					» "glb_etr 4" _ ⊢ s 
					_cns { { _n _r s } l } ⊢ l 
					prs_err l ⊢ e 
					_some e ⊢ a
					∎ a
		@.glb_etr_res 
			∐* glb_etr_res_ch glb_etr_res ⊢ { c r }
				_some {} ⊢ a 
				∎ a
			∐.* ⊢ { }
				_some {} ⊢ a 
				∎ a
		@.mdl_etr_res 
			∐* "∎∎" ⊢ { {} } 
				_some {} ⊢ a
				∎ a 
			∐* "§§" ; ⊢ { {} },p
				_some {} ⊢ a 
				∎ a 
				∐* word "=" name mdl_etr_res ⊢ { w {} n r }
					_some {} ⊢ a 
					∎ a 
				∐.* mdl_etr_res mdl_etr_res ⊢ { r0 r1 } 
					_some {} ⊢ a 
					∎ a 
			∐* _byt mdl_etr_res ⊢ { b r } 
				_some {} ⊢ a 
				∎ a
			∐.* ⊢ { } 
				_some {} ⊢ a   
				∎ a 
		
		@.mdl_etr_def
			∐* "=" !| name nls ⊢ { {} n nn }
				ast.mdl_ln n ⊢ r
				prs_vld r ⊢ r 
				_some r ⊢ a
				∎ a
			∐.* nls mdl_glb_etr ⊢ { nn m }
				$ m ⊢ 
				∐ prs_vld◂m . 
					ast.mdl_def m ⊢ r
					prs_vld r ⊢ r 
					_some r ⊢ a
					∎ a
				∐. prs_err◂err . 
					prs_err err ⊢ err 
					_some err ⊢ a 
					∎ a
		@.mdl_glb_etr
			∐* nls "∎∎" nls ⊢ { nn0 {} nn }
				_nil {} ⊢ l
				prs_vld l ⊢ l 
				_some l ⊢ a
				∎ a
			∐* nls glb_etr mdl_glb_etr ⊢ { nn e gl }
				prs_cct { e gl } ⊢ e0 
				$ e0 ⊢ 
				∐ prs_vld◂{ e gl } . 
					_cns { e gl } ⊢ gl
					prs_vld gl ⊢ gl 
					_some gl ⊢ a
					∎ a
				∐. prs_err◂err . 
					prs_err err ⊢ e 
					_some e ⊢ a 
					∎ a 
			∐. mdl_etr_res ⊢ { r }
				_nil {} ⊢ l 
				» "glb_etr 7" _ ⊢ s 
				_cns { { _n _r s } l } ⊢ l 
				prs_err l ⊢ e 
				_some e ⊢ a
				∎ a
		@.dt_etr
			∐* "@" !| "." dt_etr_body qlq_dt_etr ⊢ { {} {} e q }
				_cns { e q } ⊢ q
				ast.dt_qlq_etr q ⊢ r
				_some r ⊢ a
				∎ a
			∐* dt_etr_body ⊢ { e }
				ast.dt_etr e ⊢ r
				_some r ⊢ a
				∎ a
			∐. ⊢ { }
				» "dt_etr 0" _ ⊢ s
				_emt s ⊢ s
				_none {} ⊢ a
				∎ a
		@.dt_etr_body
			∐* word dt_args "=" !| type ⊢ { w as {} n }
				ast.dt_ln { as n } ⊢ r
				_some { w r } ⊢ a 
				∎ a
			∐.* word dt_args nls "∐" word ":" type dt_etr_coprd ⊢ { w as nn {} wc {} t d }
				_cns { { wc t } d } ⊢ c
				ast.dt_def { as c } ⊢ r
				_some { w r } ⊢ a
				∎ a
		@.dt_args
			∐* "◂" !| var args_tl ⊢ { {} v as }
				_cns { v as } ⊢ as 
				_some as ⊢ o 
				∎ o  
			∐* var !| args_tl ⊢ { v as } 
				_cns { v as } ⊢ as
				_some as ⊢ o 
				∎ o  
			∐.* ⊢ { } 
				_nil {} ⊢ as 
				_some as ⊢ o 
				∎ o
		@.args_tl 
			∐* "," !| var args_tl ⊢ { {} v as } 
				_cns { v as } ⊢ as 
				_some as ⊢ o 
				∎ o 
			∐.* ⊢ { } 
				_nil {} ⊢ as 
				_some as ⊢ o 
				∎ o
		@.qlq_dt_etr
			∐* nls "@" !| "." dt_etr_body qlq_dt_etr ⊢ { nn {} {} p q }
				_cns { p q } ⊢ l
				_some l ⊢ a
				∎ a
			∐.* ⊢ { }
				_nil {} ⊢ l
				_some l ⊢ a
				∎ a
		@.dt_etr_coprd
			∐* nls "∐" !| word ":" type dt_etr_coprd ⊢ { nn {} w {} t d }
				_cns { { w t } d } ⊢ l
				_some l ⊢ a
				∎ a
			∐.* ⊢ { }
				_nil {} ⊢ l
				_some l ⊢ a
				∎ a
		@.lc_etr_body
			∐# nls "@" !| "." word dst_ptn type_rtr "\n" lc_code qlq_etr ⊢ { nn {} {} w dp t {} lc q }
				$ q ⊢ 
				∐ prs_vld◂q . 
					$ lc ⊢ 
						∐ prs_vld◂lc . 
						##rev q ⊢ q
						_cns { { w dp t lc } q } ⊢ r
						ast.lc_qlq_etr r ⊢ r
						prs_vld r ⊢ r 
						_some r ⊢ a
						∎ a
					∐. prs_err◂e . 
						prs_err e ⊢ e 
						_some e ⊢ a 
						∎ a 
				∐. prs_err◂eq . 
					$ lc ⊢ 
						∐ prs_vld◂lc . 
						prs_err eq ⊢ e 
						_some e ⊢ a 
						∎ a 
					∐. prs_err◂e . 
						apnd { eq e } ⊢ e 
						prs_err e ⊢ e 
						_some e ⊢ a 
						∎ a 
			∐* word lc_etr_def ⊢ { n e }
				$ e ⊢ 
				∐ prs_vld◂e . 	
					ast.lc_etr { n e } ⊢ r
					prs_vld r ⊢ r 
					_some r ⊢ a
					∎ a
				∐. prs_err◂e . 
					prs_err e ⊢ e 
					_some e ⊢ a 
					∎ a 
			∐. ⊢ { }
				» "lc_etr_body 0" _ ⊢ s
				_emt s ⊢ s
				_none {} ⊢ a
				∎ a
		@.qlq_etr
			∐# nls "@" !| "." word dst_ptn type_rtr "\n" lc_code qlq_etr ⊢ { nn {} {} w dp t {} lc q }
				prs_cct { q lc } ⊢ e0 
				$ e0 ⊢ 
				∐ prs_vld◂{ q lc } . 
					_cns { { w dp t lc } q } ⊢ q 
					prs_vld q ⊢ q  
					_some q ⊢ a
					∎ a
				∐. prs_err◂e . 
					prs_err e ⊢ e 
					_some e ⊢ a 
					∎ a
			∐.* ⊢ { } 
				_nil {} ⊢ q 
				prs_vld q ⊢ q 
				_some q ⊢ a 
				∎ a 
		@.type_rtr 
			∐# ":" !| type ⊢ { {} t } 
				_some t ⊢ t 
				_some t ⊢ a
				∎ a 
			∐.# ⊢ { }
				_none {} ⊢ t 
				_some t ⊢ a 
				∎ a 
		@.lc_etr_def
			∐# "=" !| cst "\n" ⊢ { {} c {} }
				ast.lc_ln c ⊢ r
				prs_vld r ⊢ r 
				_some r ⊢ a
				∎ a
			∐# "«" !| "\n" lc_code ⊢ { {} {} x }
				$ x ⊢ 
				∐ prs_vld◂x . 
					ast.lc_cst x ⊢ r
					prs_vld r ⊢ r 
					_some r ⊢ a
					∎ a
				∐. prs_err◂e .	
					prs_err e ⊢ e 
					_some e ⊢ a 
					∎ a 
			∐.# dst_ptn type_rtr "\n" lc_code ⊢ { r0 t0 {} x0 }  
				$ x0 ⊢ 
				∐ prs_vld◂x0 . 
					ast.lc_def { r0 t0 x0 } ⊢ r
					prs_vld r ⊢ r 
					_some r ⊢ a
					∎ a
				∐. prs_err◂e . 
					prs_err e ⊢ e 
					_some e ⊢ a 
					∎ a 

		@.grm_etr
			∐.* "@" "." word grm_etr_def ⊢ { {} {} w d }
				_some { w d } ⊢ a
				∎ a 
		@.grm_etr_lst 
			∐* grm_etr grm_etr_lst ⊢ { e l } 
				_cns { e l } ⊢ l 
				_some l ⊢ a 
				∎ a 
			∐. ⊢ { } 
				_nil {} ⊢ l 
				_some l ⊢ a 
				∎ a 
		@.grm_etr_def
			∐* grm_etr_act ⊢ { g }
				ast.grm.act g ⊢ g
				_some g ⊢ a
				∎ a
			∐.* grm_etr_cnc ⊢ { g }
				ast.grm.cnc g ⊢ g
				_some g ⊢ a
				∎ a
		@.grm_etr_act
			∐* grm_ord_end !| grm_rle grm_etr_act_act	⊢ { o l { r0 lc a } }
				ast.grm.act_regs {} ⊢ dl 
				ast.grm.act_end { dl r0 lc o l a } ⊢ e
				_some e ⊢ a
				∎ a
			∐.* grm_ord grm_rle grm_etr_act_act grm_etr_act ⊢ { o l { r0 lc a } g }
				ast.grm.act_regs {} ⊢ dl 
				ast.grm.act_cns { dl r0 lc o l a g } ⊢ e
				_some e ⊢ a
				∎ a
		@.grm_etr_act_act
			∐* ";" "⊢" !| dst_ptn "," dst_ptn lc_code grm_etr_act ⊢ { {} {} r0 {} r1 lc g }
				$ lc ⊢ 
				∐ prs_vld◂lc . 
					_some { r1 g } ⊢ r
					_some { r0 lc r } ⊢ a
					∎ a
				∐. prs_err◂e .
					» "grm_etr_act_act 0" _ ⊢ se 
					_emt se ⊢ se 
					_emt { _n _r } ⊢ a 
					∎| 
			∐.* "⊢" !| dst_ptn lc_code ⊢ { {} r0 lc }
				$ lc ⊢ 
				∐ prs_vld◂lc . 
					_none {} ⊢ r
					_some { r0 lc r } ⊢ a
					∎ a
				∐. prs_err◂e .
					» "grm_etr_act_act 1" _ ⊢ se 
					_emt se ⊢ se 
					_emt { _n _r } ⊢ a 
					∎| 
		@.grm_rle
			∐* "!|" !| grm_rle_cut ⊢ { {} g }
				ast.grm.ptn_cut g ⊢ g
				_some g ⊢ r
				∎ r
			∐* grm_ptn grm_rle ⊢ { h g }
				ast.grm.ptn_seq { h g } ⊢ r
				_some r ⊢ a
				∎ a
			∐.* ⊢ { }
				ast.grm.ptn_end {} ⊢ r
				_some r ⊢ a
				∎ a
		@.grm_rle_cut
			∐* grm_ptn grm_rle_cut ⊢ { p g }
				_cns { p g } ⊢ r
				_some r ⊢ a
				∎ a
			∐.* ⊢ { }
				_nil {} ⊢ r
				_some r ⊢ a
				∎ a
		@.grm_ptn
			∐* "⟦" grm_ptn_atm "⟧" ⊢ { {} p {} }
				ast.grm.lst p ⊢ r
				_some r ⊢ a
				∎ a
			∐.* grm_ptn_atm ⊢ { a }
				ast.grm.atm a ⊢ a
				_some a ⊢ a
				∎ a
		@.grm_ptn_atm
			∐* stg_ltr ⊢ { a }
				ast.grm.s8 a ⊢ a
				_some a ⊢ a
				∎ a
			∐.* name ⊢ { n }
				ast.grm.name n ⊢ a
				_some a ⊢ a
				∎ a
		@.grm_ord
			∐* "∐*" ⊢ { {} }
				ast.grm.synt {} ⊢ r
				_some r ⊢ a
				∎ a
			∐* "∐#" ⊢ { {} }
				ast.grm.line {} ⊢ r
				_some r ⊢ a
				∎ a
			∐.* "∐" ⊢ { {} }
				ast.grm.lex {} ⊢ r
				_some r ⊢ a
				∎ a
		@.grm_ord_end
			∐* "∐.*" ⊢ { {} }
				ast.grm.synt {} ⊢ r
				_some r ⊢ a
				∎ a
			∐* "∐.#" ⊢ { {} }
				ast.grm.line {} ⊢ r
				_some r ⊢ a
				∎ a
			∐.* "∐." ⊢ { {} }
				ast.grm.lex {} ⊢ r
				_some r ⊢ a
				∎ a
		@.grm_etr_cnc
			∐* grm_ord_end !| cnc_cn grm_rle grm_etr_cnc_seq ⊢ { o cn ps g }
				ast.grm.cnc_end { cn o ps g } ⊢ r
				_some r ⊢ a
				∎ a
			∐.* grm_ord cnc_cn grm_rle grm_etr_cnc_seq grm_etr_cnc ⊢ { o cn ps g0 g1 }
				ast.grm.cnc_cns { cn o ps g0 g1 } ⊢ r
				_some r ⊢ a
				∎ a
		@.grm_etr_cnc_seq
			∐* ";" grm_etr_cnc ⊢ { {} g }
				_some g ⊢ a
				_some a ⊢ a
				∎ a
			∐.* ⊢ { }
				_none {} ⊢ r
				_some r ⊢ a
				∎ a
		@.cnc_cn
			∐* word ":" ⊢ { w {} }
				_some w ⊢ r
				_some r ⊢ a
				∎ a
			∐.* ⊢ { }
				_none {} ⊢ r
				_some r ⊢ a
				∎ a		
    ∎∎
	§§ rset
			¶ t = _arr◂bl.t 
			\[
			§ @.lp0 { v i } 
				∐ i'=64r . 
					∎ v 
				∐. . 
					bl.f {} ⊢ b 
					_set_q { v i b } ⊢ { v i } 
					_inc i ⊢ i 
					lp0 { v i } ⊢| 
			\]
			§ ini {} 
				bl.f {} ⊢ b 
				_mk_arr { %[ 64r ] b } ⊢ { _ _ v } 
				∎ v 
			§ @.max_t v 
					» 0r _ ⊢ i 
					» 0r _ ⊢ j 
					max_t_lp { v i j } ⊢| 
				@.max_t_lp { v i j } 
					∐ i'=64r . 
						∎ { v j } 
					∐. . 
						_lod_q { v i } ⊢ { v i b } 
						$ b ⊢ 
						∐ bl.f◂{} . 
							_inc i ⊢ i 
							max_t_lp { v i j } ⊢| 
						∐. bl.t◂{} . 
							$ i ⊢ i,i0
							_inc i ⊢ i 
							max_t_lp { v i i0 } ⊢| 
			\[
			§ pnt v 
				max_t v ⊢ { v i } 
			\]
			§ set_t { v0 i } 
				bl.t {} ⊢ b 
				_exc_q { v0 i b } ⊢ { v0 i _ } 
				∎ { v0 i }
			§ set_f { v0 i } 
				bl.f {} ⊢ b 
				_exc_q { v0 i b } ⊢ { v0 i _ } 
				∎ { v0 i }
			§ @.and_lp { v0 v1 i }
				∐ i'=64r . 
					∎ { v0 v1 }  
				∐. . 
					_lod_q { v0 i } ⊢ { v0 i b0 } 
					_lod_q { v1 i } ⊢ { v1 i b1 }
					bl.and { b0 b1 } ⊢ b2 
					_exc_q { v0 i b2 } ⊢ { v0 i _ } 
					_inc i ⊢ i 
					and_lp { v0 v1 i } ⊢|  
			§ and { v0 v1 } 
				and_lp { v0 v1 %[ 0r ] } ⊢|
			§ @.or_lp { v0 v1 i }
				∐ i'=64r . 
					∎ { v0 v1 }  
				∐. . 
					_lod_q { v0 i } ⊢ { v0 i b0 } 
					_lod_q { v1 i } ⊢ { v1 i b1 }
					bl.or { b0 b1 } ⊢ b2 
					_exc_q { v0 i b2 } ⊢ { v0 i _ } 
					_inc i ⊢ i 
					or_lp { v0 v1 i } ⊢|  
			§ or { v0 v1 } 
				» 0r _ ⊢ i 
				or_lp { v0 v1 i } ⊢|
			§ @.sub_lp { v0 v1 i }
				∐ i'=64r . 
					∎ { v0 v1 }  
				∐. . 
					_lod_q { v0 i } ⊢ { v0 i b0 } 
					_lod_q { v1 i } ⊢ { v1 i b1 }
					bl.sub { b0 b1 } ⊢ b2 
					_exc_q { v0 i b2 } ⊢ { v0 i _ } 
					_inc i ⊢ i 
					sub_lp { v0 v1 i } ⊢|  
			§ sub { v0 v1 } 
				» 0r _ ⊢ i 
				sub_lp { v0 v1 i } ⊢|
			§ @.min_f v 
					» 0r _ ⊢ i 
					min_f_lp { v i } ⊢| 
				@.min_f_lp { v i } 
					∐ i'=64r . 
						∎ { v i } 
					∐. . 
						_lod_q { v i } ⊢ { v i b } 
						$ b ⊢ 
						∐ bl.f◂{} . 
							∎ { v i } 
						∐. bl.t◂{} . 
							_inc i ⊢ i 
							min_f_lp { v i } ⊢| 
			§ @.min_t v 
					» 0r _ ⊢ i 
					min_t_lp { v i } ⊢| 
				@.min_t_lp { v i } 
					∐ i'=64r . 
						∎ { v i } 
					∐. . 
						_lod_q { v i } ⊢ { v i b } 
						$ b ⊢ 
						∐ bl.t◂{} . 
							∎ { v i } 
						∐. bl.f◂{} . 
							_inc i ⊢ i 
							min_f_lp { v i } ⊢| 	
			§ @.is_zero_lp { v i }  
				∐ i'=64r .
					bl.t {} ⊢ b 
					∎ { v b } 
				∐. . 
					_lod_q { v i } ⊢ { v i b } 
					$ b ⊢ 
					∐ bl.t◂{} . 
						bl.f {} ⊢ b 
						∎ { v b } 
					∐. bl.f◂{} . 
						_inc i ⊢ i 
						is_zero_lp { v i } ⊢| 
			§ is_zero v 
				» 0r _ ⊢ i 
				is_zero_lp { v i } ⊢ { v b } 
				∎ { v b }
			∎∎
	§ alc_vs vs 
			rset.min_f vs ⊢ { vs i0 } 
			bl.t {} ⊢ b
			_exc_q { vs i0 b } ⊢ { vs i0 b }
			∎ { vs i0 }
	§§ stt_v 
		¶ @.t r' = RP.t◂(t_atm◂r') 
			@.r 
				∐ r_reg : _r64
				∐ r_stk : _r64 
				∐ r_mem : _s8  
			@.t_atm r'
				∐ hp : { r' hp }
				∐ hp_im : ast.cst_v  
				∐ hp_im_e : _r64 
				∐ stt_adt : { _r64 _r64 t◂r' } 
				∐ pt : { r' r' }	
			@.agl_p
				∐ agl_unt : {} 
				∐ agl_hp : hp   
			@.hp 
				∐ ref : ref 
				∐ r64 : {} 
				∐ pv : _r64 
				∐ adt : { _r64 _lst◂hp }
			@.hp_v = _arr◂hp_k
			@.hp_k = { _r64 hp }
			@.ref 
				∐ opq : {}
				∐ arr : hp
				∐ clr : hp
				∐ pt_hp : {} 
				∐ rcd : _lst◂hp 
			@.t_agl
				∐ t_agl_t : _r64   
				∐ t_agl_f : {} 
			@.t_len = _opn◂_r64
			@.t_cf 
				∐ cf_t : {} 
				∐ cf_f : {} 
				∐ cf_p : {}
		§
			@.ptn_of_hp { v0 h0 }
				∐ h0 ⊢ ref◂q0; q0 ⊢ rcd◂l0 .
					ptn_of_hp_lst { v0 l0 } ⊢ { v0 l0 } 
					RP.rcd l0 ⊢ p0 
					∎ { v0 p0 }
				∐ h0 ⊢ ref◂q0; q0 ⊢ pt_hp◂{} . 
					alc_vs v0 ⊢ { v0 m0 } 
					alc_vs v0 ⊢ { v0 m1 }
					pt { m0 m1 } ⊢ p0 
					RP.atm p0 ⊢ p0 
					∎ { v0 p0 }
				∐. . 
					alc_vs v0 ⊢ { v0 m0 }
					hp { m0 h0 } ⊢ a0 
					RP.atm a0 ⊢ p0 
					∎ { v0 p0 } 
			@.ptn_of_hp_lst { v0 l0 } 
				$ l0 ⊢ 
				∐ _cns◂{ h0 l0 } . 
					ptn_of_hp { v0 h0 } ⊢ { v0 p0 } 
					ptn_of_hp_lst { v0 l0 } ⊢ { v0 l0 } 
					_cns { p0 l0 } ⊢ l0 
					∎ { v0 l0 }
				∐. _nil◂{} . 
					_nil {} ⊢ l0 
					∎ { v0 l0 }
		§ 
			@.eq_hp { h0 h1 } 
				∐ h0 ⊢ ref◂q0; h1 ⊢ ref◂q1 .  
					∐ q0 ⊢ opq◂{}; q1 ⊢ opq◂{} . 
						opq {} ⊢ q0 
						opq {} ⊢ q1 
						ref q0 ⊢ h0 
						ref q1 ⊢ h1 
						bl.t {} ⊢ b 
						∎ { h0 h1 b }
					∐ q0 ⊢ rcd◂l0; q1 ⊢ rcd◂l1 . 
						eq_hp_lst { l0 l1 } ⊢ { l0 l1 b } 
						rcd l0 ⊢ q0 
						rcd l1 ⊢ q1 
						ref q0 ⊢ h0 
						ref q1 ⊢ h1 
						∎ { h0 h1 b }
					∐ q0 ⊢ arr◂h0; q1 ⊢ arr◂h1 . 
						eq_hp { h0 h1 } ⊢ { h0 h1 b }
						arr h0 ⊢ q0 
						arr h1 ⊢ q1 
						ref q0 ⊢ h0 
						ref q1 ⊢ h1 
						∎ { h0 h1 b }
					∐ q0 ⊢ clr◂h0; q1 ⊢ clr◂h1 . 
						eq_hp { h0 h1 } ⊢ { h0 h1 b }
						clr h0 ⊢ q0 
						clr h1 ⊢ q1 
						ref q0 ⊢ h0 
						ref q1 ⊢ h1 
						∎ { h0 h1 b }
					∐ q0 ⊢ pt_hp◂{}; q1 ⊢ pt_hp◂{} . 
						pt_hp {} ⊢ q0 
						pt_hp {} ⊢ q1
						ref q0 ⊢ h0 
						ref q1 ⊢ h1 
						bl.t {} ⊢ b 
						∎ { h0 h1 b }
					∐. . 
						bl.f {} ⊢ b 
						ref q0 ⊢ h0 
						ref q1 ⊢ h1 
						∎ { h0 h1 b }
				∐ h0 ⊢ r64◂{}; h1 ⊢ r64◂{} . 
					r64 {} ⊢ h0 
					r64 {} ⊢ h1 
					bl.t {} ⊢ b
					∎ { h0 h1 b }
				∐ h0 ⊢ pv◂q0; h1 ⊢ pv◂q1 .  
					∐ q0'=q1' . 
						pv q0 ⊢ h0 
						pv q1 ⊢ h1 
						bl.t {} ⊢ b 
						∎ { h0 h1 b }
					∐. . 
						pv q0 ⊢ h0 
						pv q1 ⊢ h1 
						bl.f {} ⊢ b 
						∎ { h0 h1 b }
				∐ h0 ⊢ adt◂{ ax0 hl0 }; h1 ⊢ adt◂{ ax1 hl1 } . 
					eq_hp_lst { hl0 hl1 } ⊢ { hl0 hl1 bh }
					∐ ax0'=ax1'; bh ⊢ bl.t◂{} . 
						adt { ax0 hl0 } ⊢ h0 
						adt { ax1 hl1 } ⊢ h1 
						bl.t {} ⊢ b 
						∎ { h0 h1 b }
					∐. . 
						adt { ax0 hl0 } ⊢ h0 
						adt { ax1 hl1 } ⊢ h1 
						bl.f {} ⊢ b 
						∎ { h0 h1 b }
				∐. . 
					bl.f {} ⊢ b 
					∎ { h0 h1 b } 
			@.eq_hp_lst { l0 l1 }
						∐ l0 ⊢ _cns◂{ h0 l0 }; l1 ⊢ _cns◂{ h1 l1 } . 
							eq_hp { h0 h1 } ⊢ { h0 h1 b0 } 
							eq_hp_lst { l0 l1 } ⊢ { l0 l1 b1 } 
							bl.and { b0 b1 } ⊢ b 
							_cns { h0 l0 } ⊢ l0 
							_cns { h1 l1 } ⊢ l1 
							∎ { l0 l1 b }
						∐ l0 ⊢ _nil◂{}; l1 ⊢ _nil◂{} . 
							bl.t {} ⊢ b 
							_nil {} ⊢ l0  
							_nil {} ⊢ l1 
							∎ { l0 l1 b }
						∐. . 
							bl.f {} ⊢ b 
							∎ { l0 l1 b }
				§ cf h 
					∐ h ⊢ ref◂q . 
						cf_f {} ⊢ cf 
						ref q ⊢ h 
						∎ { h cf } 
					∐ h ⊢ r64◂{} . 
						cf_t {} ⊢ cf 
						r64 {} ⊢ h 
						∎ { h cf } 
					∐ h ⊢ pv◂ipv . 
						cf_p {} ⊢ cf 
						pv ipv ⊢ h 
						∎ { h cf }
					∐. . 
						» "cf 0" _ ⊢ se 
						_emt se ⊢ se 
						∎| 
				§§ pnt 
					§ hp0 = hp 
					§ @.f p
						$ p ⊢ 
						∐ RP.rcd◂l . 
							lst l ⊢ sl 
							» _^ sl ⊢ sl,sr 
								"{ " 0' "}" // 
							∎ sr 
						∐. RP.atm◂a . 
							$ a ⊢ 					
							∐ hp0◂{ r h } . 
								hp h ⊢ sh
								» _^ r,sh ⊢ r,sh,sr 
									0d' "'" "(= " 1' " )" // 
								∎ sr
							∐ hp_im◂v . 
								ast.pnt_cst_v v ⊢ sv 
								» _^ sv ⊢ sv,sr 
									"%[ " 0' " ]" // 
								∎ sr 
							
							∐ hp_im_e◂i . 
								» _^ i ⊢ i,sr 
									"%[ " 0d' "e' ]" // 
								∎ sr  
							∐ pt◂{ r0 r1 } .
								» _^ r0,r1 ⊢ r0,r1,sr 
									"[< " 0d' "' , " 1d' "' >]" // 
								∎ sr
							∐. stt_adt◂{ c n p } .
								f p ⊢ sp  
								» _^ c,n,sp ⊢ c,n,sp,sr 
									0d' "(<" 1d' ")◂" 2' // 
								∎ sr
						@.hp h
							$ h ⊢ 
							∐ adt◂{ ax l } . 
								hp_lst l ⊢ sl 
								» _^ ax,sl ⊢ ax,sl,sr 
									"a" 0d' "◂ [ " 1' "]" // 
								∎ sr 
							∐ r64◂{} . 
								» _^ _ ⊢ sr 
									"r" // 
								∎ sr 
							∐ ref◂q . 
								$ q ⊢ 
								∐ rcd◂l .  
									hp_lst l ⊢ s
									» _^ s ⊢ s,sr 
										"*{ " 0' "}" // 
									∎ sr 
								∐ arr◂h .
									hp h ⊢ sh 
									» _^ sh ⊢ sh,s 
										"{| " 0' "|}" // 
									∎ s 
								∐ clr◂h . 
									hp h ⊢ sh 
									» _^ sh ⊢ sh,s 
										"{< " 0' ">}" // 
									∎ s
								∐ pt_hp◂{} . 
									» "*[< _ >]" _ ⊢ s 
									∎ s 
								∐. opq◂{} . 
									» "{| l |}" _ ⊢ s 
									∎ s  
							∐. pv◂ipv . 
								» _^ ipv ⊢ ipv,s
									"q" 0d' // 
								∎ s 
					@.hp_lst l 
						$ l ⊢ 
						∐ _cns◂{ h l } . 
							hp h ⊢ sh 
							hp_lst l ⊢ sl 
							» _^ sh,sl ⊢ sh,sl,s 
								0' 1' // 
							∎ s 
						∐. _nil◂{} . 
							» "" _ ⊢ s 
							∎ s   
					@.lst l 
						$ l ⊢ 
						∐ _cns◂{ p l } . 
							f p ⊢ sp 
							lst l ⊢ sl 
							» _^ sp,sl ⊢ sp,sl,sr 
								0' " " 1' // 
							∎ sr 
						∐. _nil◂{} . 
							» "" _ ⊢ sr 
							∎ sr 							
					∎∎	 
				
				§ @.mk_rset { p v }
					$ p ⊢ 
					∐ RP.rcd◂l . 
						mk_rset_lst { l v } ⊢| 
					∐. RP.atm◂a . 
						$ a ⊢ 
						∐ hp◂{ r h } .
							rset.set_t { v r } ⊢ { v r }
							∎ v 
						∐ hp_im◂c . 
							∎ v 
						∐ hp_im_e◂i . 
							∎ v
						∐ pt◂{ r0 r1 } .
							rset.set_t { v r0 } ⊢ { v r0 } 
							rset.set_t { v r1 } ⊢ { v r1 }
							∎ v 
						∐. stt_adt◂{ i n p } . 
							mk_rset { p v } ⊢|
					@.mk_rset_lst { l v } 
						$ l ⊢ 
						∐ _cns◂{ p l } . 
							mk_rset { p v } ⊢ v 
							mk_rset_lst { l v } ⊢ v 
							∎ v 
						∐. _nil◂{} . 
							∎ v 
					@.mk_rset_env { irv l v } 
						$ l ⊢ 
						∐ _cns◂{ i l } .
							_lod_q { irv i } ⊢ { irv i p } 
							mk_rset { p v } ⊢ v 
							mk_rset_env { irv l v } ⊢| 
						∐. _nil◂{} . 
							∎ { irv v }
			§ mk_rset_env_x { irv rl } 
				rset.ini {} ⊢ v0 
				$ rl ⊢ rl,rl0 
				mk_rset_env { irv rl0 v0 } ⊢ { irv v0 }
				∎ { irv rl v0 } 
			§ mk_rset_x p 
				$ p ⊢ p,p0
				rset.ini {} ⊢ v  
				mk_rset { p0 v } ⊢ v
				∎ { p v } 
			§ rcd_2 { p0 p1 } 
				_nil {} ⊢ l 
				_cns { p1 l } ⊢ l 
				_cns { p0 l } ⊢ l 
				RP.rcd l ⊢ p 
				∎ p  
			§ rcd_3 { p0 p1 p2 } 
				_nil {} ⊢ l
				_cns { p2 l } ⊢ l 
				_cns { p1 l } ⊢ l 
				_cns { p0 l } ⊢ l 
				RP.rcd l ⊢ p 
				∎ p  
			§ r64_reg r
				r64 {} ⊢ h 
				hp { r h } ⊢ k 
				RP.atm k ⊢ p 
				∎ p
			§ r64_im x 
				ast.r64 x ⊢ im 
				hp_im im ⊢ k 
				RP.atm k ⊢ p 
				∎ p 
			§ s8_reg r 
				opq {} ⊢ q 
				ref q ⊢ h 
				hp { r h } ⊢ k 
				RP.atm k ⊢ p 
				∎ p  
			§ s8_im s 
				ast.s8 s ⊢ im 
				hp_im im ⊢ k 
				RP.atm k ⊢ p 
				∎ p
			§ arr_reg { r h } 
				arr h ⊢ q 
				ref q ⊢ h 
				hp { r h } ⊢ a 
				RP.atm a ⊢ p 
				∎ p   
			§ @.ptns_of_env { irv l } 
				$ l ⊢ 
				∐ _cns◂{ i l } .
					_lod_q { irv i } ⊢ { irv i p } 
					ptns_of_env { irv l } ⊢ { irv l } 
					_cns { p l } ⊢ l 
					∎ { irv l } 
				∐. _nil◂{} . 
					_nil {} ⊢ l 
					∎ { irv l } 
			∎∎  
		§§ gbg
			¶ t_t 
				∐ ln : {} 
				∐ rcd : _r64 				 
			¶ t = { _r64 t_t }
			§ pnt n 
				» _^ n ⊢ n,s 
					"QWORD [GBG_VCT+8*" 0d' "]" // 
				∎ { n s } 
			§ ini {} 
				» 0r _ ⊢ gl_n 
				_nil {} ⊢ gl 
				∎ { gl_n gl } 
			§ @.dlt { gl e } 
				$ gl ⊢ 
				∐ _cns◂{ { n g } gl } . 
					$ g ⊢ 
					∐ ln◂{} . 
						pnt n ⊢ { n sn } 
						» _^ sn ⊢ _,sr 
							"\tmov rdi," 0' "\n" 
							`	FREE_LN rdi
							// 
						rp8.add_s8 { e sr } ⊢ e 
						dlt { gl e } ⊢| 
					∐. rcd◂nr . 
						pnt n ⊢ { n sn } 
						» _^ sn,nr ⊢ _,_,sr 
							"\tmov rdi," 0' "\n" 
							"\tFREE_RCD " 1d' ",rdi\n"
							// 
						rp8.add_s8 { e sr } ⊢ e 
						dlt { gl e } ⊢|
				∐. _nil◂{} . 
					∎ e 
			∎∎
		§ @.slv_ns_m { n mmv m_ns m_l } 
			$ n ⊢ 
			∐ ast.mdl_n◂{ w n } . 
				assoc { m_ns w } ⊢ { m_ns w o }
				$ o ⊢ 
				∐ _some◂i_m0 . 
					_lod_q { mmv i_m0 } ⊢ { mmv i_m0 ns_m0 }
					_nil {} ⊢ m_l0 
					slv_ns_m { n mmv ns_m0 m_l0 } ⊢ { mmv ns_m0 m_l0 i_m }
					∎ { mmv m_ns m_l i_m }
				∐. _none◂{} . 
					$ m_l ⊢ 
					∐ _cns◂{ { i_m_r ns_m0 ns_e0 ns_t0 } m_l } .
						##_lod_q { mmv i_m_r } ⊢ { mmv i_m_r m_ns0 }
						ast.mdl_n { w n } ⊢ n 
						slv_ns_m { n mmv ns_m0 m_l } ⊢ { mmv ns_m0 m_l i_m }
						_cns { { i_m_r ns_m0 ns_e0 ns_t0 } m_l } ⊢ m_l 
						∎ { mmv m_ns m_l i_m }
					∐. _nil◂{} . 
						_emt %[ "slv_ns_m 0:not found" ] ⊢ _ 
						_emt w ⊢ _
						∎|
			∐. ast.fst_n◂w . 
				assoc { m_ns w } ⊢ { m_ns w o } 
				$ o ⊢
				∐ _some◂i_m . 
					∎ { mmv m_ns m_l i_m }
				∐. _none◂{} . 
					$ m_l ⊢ 
					∐ _cns◂{ { i_m_r m_ns0 e_ns0 t_ns0 } m_l } .
						##_lod_q { mmv i_m_r } ⊢ { mmv i_m_r m_ns0 }
						ast.fst_n w ⊢ n 
						slv_ns_m { n mmv m_ns0 m_l } ⊢ { mmv m_ns0 m_l i_m }
						_cns { { i_m_r m_ns0 e_ns0 t_ns0 } m_l } ⊢ m_l 
						∎ { mmv m_ns m_l i_m }
					∐. _nil◂{} . 
						_emt %[ "slv_ns_m 1:not found" ] ⊢ _ 
						_emt w ⊢ _
						∎|  
		§ 
			@.slv_file_lp { RTM_ST i il MV LCV tx_n NS gel gfl EC } 
				_emt gel ⊢ gel 
				\\_getchar {} ⊢ _ 
				$ gel ⊢
				∐ _cns◂{ e gel } . 
					$ e ⊢
					∐ ast.mdl_etr◂{ w e } . 
						$ e ⊢
						∐ ast.mdl_def◂gel0 . 
							inv MV ⊢ { mmv mev mtv mv_n } 
							inv NS ⊢ { ns_m ns_e ns_t } 
							$ mv_n ⊢ mv_n,i0 
							_inc mv_n ⊢ mv_n
							_cns { { i ns_m ns_e ns_t } il } ⊢ il 
							_nil {} ⊢ ns_m 
							_nil {} ⊢ ns_e 
							_nil {} ⊢ ns_t 
							iso { ns_m ns_e ns_t } ⊢ NS0 
							iso { mmv mev mtv mv_n } ⊢ MV 
							_emt %[ "Dx0" ] ⊢ _ 
							_emt gel0 ⊢ gel0 
							_emt gel ⊢ gel 
							slv_file_lp { RTM_ST i0 il MV LCV tx_n NS0 gel0 gfl EC } ⊢ { RTM_ST i0 il MV LCV tx_n NS0 gfl EC }
							_emt gel ⊢ gel 
							inv MV ⊢ { mmv mev mtv mv_n } 
							inv NS0 ⊢ { ns_m ns_e ns_t } 
							_exc_q { mmv i0 ns_m } ⊢ { mmv i0 _ } 
							_exc_q { mev i0 ns_e } ⊢ { mev i0 _ } 
							_exc_q { mtv i0 ns_t } ⊢ { mtv i0 _ }
							\\» _^ dd ⊢ dd,ep1 
							\\	0'*"\t" "∎∎\n" // 
							\\_cns { ep1 ep0 } ⊢ ep0
							\\_dec dd ⊢ dd 
							$ il ⊢ 
							∐ _cns◂{ { i ns_m ns_e ns_t } il } . 
								_some i0 ⊢ o 
								_cns { { w o } ns_m } ⊢ ns_m
								iso { mmv mev mtv mv_n } ⊢ MV 
								iso { ns_m ns_e ns_t } ⊢ NS 
								\\_emt gel ⊢ gel
								slv_file_lp { RTM_ST i il MV LCV tx_n NS gel gfl EC } ⊢|
							∐. _nil◂{} . 
								» "slv_file_lp 0" _ ⊢ se 
								_emt se ⊢ se 
								∎| 
						∐. ast.mdl_ln◂n0 .
							inv MV ⊢ { mmv mev mtv mv_n } 
							inv NS ⊢ { ns_m ns_e ns_t } 
							\\$ n0 ⊢ n0,n0_0 
							\\ast.pnt_name n0_0 ⊢ sn0  							
							\\\\» _^ dd,w,sn0 ⊢ dd,w,sn0,ep1 
							\\	0'*"\t" "§§ " 1' " = " 2' "\n" // 
							\\_cns { ep1 ep0 } ⊢ ep0
							\\$ n0 ⊢ n0,n0_0 
							slv_ns_m { n0 mmv ns_m il } ⊢ { mmv ns_m il i_m } 
							_some i_m ⊢ o 
							_cns { { w o } ns_m } ⊢ ns_m 
							iso { mmv mev mtv mv_n } ⊢ MV
							iso { ns_m ns_e ns_t } ⊢ NS
							slv_file_lp { RTM_ST i il MV LCV tx_n NS gel gfl EC } ⊢|
					∐ ast.grm_etr◂g .
						##slv_grm.f { g i il { hpv hpv_n } { mmv mev mtv mv_n rv rv_n ev ev_n tv tv_n } irv tav evv tx_n ns_m ns_e ns_t gel { dd ep0 ec0 rtm_n lb_n } } ⊢ { g i il { hpv hpv_n } { mmv mev mtv mv_n rv rv_n ev ev_n tv tv_n } irv tav evv tx_n ns_m ns_e ns_t gel { dd ep0 ec0 rtm_n lb_n } }
						##» "\tret\n" _ ⊢ ret_g 
						##rp8.e {} ⊢ ec1 
						##rp8.e {} ⊢ eg1 
						##emt_grm.f { gfl ret_g { eg1 eds ec1 } ev evv rv irv tav tv tv_n lb_n g } ⊢ { gfl ret_g { eg1 eds ec1 } ev evv rv irv tav tv tv_n lb_n }
						##rp8.cct { ec0 eg1 } ⊢ ec0 
						##rp8.cct { ec0 ec1 } ⊢ ec0 
						slv_file_lp { RTM_ST i il MV LCV tx_n NS gel gfl EC } ⊢|
					∐ ast.lc_etr◂{ w e } .
						$ e ⊢
						∐ ast.lc_def◂{ d td lc } .
							\[
							_nil {} ⊢ ns_r_e
							» 1r _ ⊢ lv 
							crt_dst_ptn { lv rv tv tv_n rv_n ns_r_e d } ⊢ { lv rv tv tv_n rv_n ns_r_e d y } 
							$ y ⊢ y,y0 
							rtr_dst_ptn { { mmv mev ev ns_m ns_e il } mtv tv_n tv ns_t y0 td } ⊢ { { mmv mev ev ns_m ns_e il } mtv tv_n tv ns_t } 
							slv_r { lv { mmv mev ev ns_m ns_e il } rv tv tv_n rv_n ns_r_e lc } ⊢ { lv { mmv mev ev ns_m ns_e il } rv tv tv_n rv_n ns_r_e lc yr } 
							_dec lv ⊢ lv 
							gen { tv_n tv lv y } ⊢ { tv_n tv lv y } 
							$ y ⊢ y,y0 
							$ yr ⊢ yr,yr0 
							imp { y0 yr0 } ⊢ yx 
							RP.atm yx ⊢ yx 
							$ yx ⊢ yx,yx0 
							pnt_type_k { tv yx0 } ⊢ { tv syx } 
							_nil {} ⊢ ql0 
							$ y ⊢ y,y0
							chk_pv { tv y0 ql0 } ⊢ { tv ql0 } 
							∐ ql0 ⊢ _nil◂{} . 
								rset.ini {} ⊢ s0 
								» 0r _ ⊢ pv_n 
								_nil {} ⊢ alp 
								$ y ⊢ y,y0 
								alc_type_k.f { pv_n alp tav tv_n tv s0 y0 } ⊢ { pv_n alp tav tv_n tv s0 p0 } 
								rset.ini {} ⊢ sr0 
								$ yr ⊢ yr,yr0 
								alc_type_k.f { pv_n alp tav tv_n tv sr0 yr0 } ⊢ { pv_n alp tav tv_n tv sr0 pr0 } 
								$ p0 ⊢ p0,p00 
								stt_v.pnt.f p00 ⊢ sp0 
								$ pr0 ⊢ pr0,pr00 
								stt_v.pnt.f pr00 ⊢ spr0 
								$ p0 ⊢ p0,p00 
								_nil {} ⊢ rl_e 
								_nil {} ⊢ dl 
								emt.idx.crt_ptn { irv d p00 rl_e dl } ⊢ { irv rl_e dl } 
								$ pr0 ⊢ pr0,pr00 
								$ pr0 ⊢ pr0,pr0_0 
								emt.mk_rsp pr0_0 ⊢ rsp_d 
								$ p0 ⊢ p0,p00 
								emt.mk_rsp p00 ⊢ rsp_e 
								$ rsp_e ⊢ rsp_e,rsp0 
								$ rsp_d ⊢ rsp_d,rsp_d0 
								k_op { rsp0 p0 rsp_d pr0 } ⊢ k 
								##k_op_axm {} ⊢ k 
								$ ev_n ⊢ ev_n,en 
								» _^ dd,w,syx,sp0,spr0,en ⊢ dd,w,syx,sp0,spr0,en,ep1 
									0'*"\t" "§ " 1' "(" 5d' ") " 3' " ⊢ " 4' " : " 2' "\n" // 
								_cns { ep1 ep0 } ⊢ ep0
								_nil {} ⊢ cl 
								rp8.e {} ⊢ ee0 
								rp8.e {} ⊢ eeg0 
								» _^ en,w,sp0,spr0,syx ⊢ en,w,sp0,spr0,syx,ec1 
									"ETR_" 0d' ": ;; " 1' " " 2' " ⊢ " 3' " : " 4' "\n" //
								add_e { tv_n tv evv ev ev_n ns_e w k yx } ⊢ { tv_n tv evv ev ev_n ns_e }
								rp8.add_s8 { ee0 ec1 } ⊢ ee0 
								∐ rsp_e'=0r . 
									f_etr { rsp_d0 pr00 yr } ⊢ ft 
									emt.lc_code.f { { gfl cl } lb_n { ev evv } rsp_e { rv irv } tav tv_n tv lc { eeg0 eds ee0 } rl_e ft } ⊢ { { gfl cl } lb_n { ev evv } rsp_e { rv irv } tav tv_n tv { eeg0 eds ee0 } rl_e ft } 
									rp8.cct { ec0 eeg0 } ⊢ ec0 
									rp8.cct { ec0 ee0 } ⊢ ec0  
									slv_file_lp { { rsp rl ns_r } i il { hpv hpv_n } { mmv mev mtv mv_n rv rv_n ev ev_n tv tv_n } irv tav evv tx_n ns_m ns_e ns_t gel gfl { eds dd ep0 ec0 rtm_n lb_n } } ⊢|
								∐. . 
									» "\tadd rsp,8\n" _ ⊢ se0 
									rp8.add_s8 { ee0 se0 } ⊢ ee0 
									f_etr { rsp_d0 pr00 yr } ⊢ ft 
									emt.lc_code.f { { gfl cl } lb_n { ev evv } rsp_e { rv irv } tav tv_n tv lc { eeg0 eds ee0 } rl_e ft } ⊢ { { gfl cl } lb_n { ev evv } rsp_e { rv irv } tav tv_n tv { eeg0 eds ee0 } rl_e ft } 
									rp8.cct { ec0 eeg0 } ⊢ ec0 
									rp8.cct { ec0 ee0 } ⊢ ec0 
									slv_file_lp { { rsp rl ns_r } i il { hpv hpv_n } { mmv mev mtv mv_n rv rv_n ev ev_n tv tv_n } irv tav evv tx_n ns_m ns_e ns_t gel gfl { eds dd ep0 ec0 rtm_n lb_n } } ⊢|
							∐. .
								k_op_gnr { d lc } ⊢ k 
								add_e { tv_n tv evv ev ev_n ns_e w k yx } ⊢ { tv_n tv evv ev ev_n ns_e }
								slv_file_lp { { rsp rl ns_r } i il { hpv hpv_n } { mmv mev mtv mv_n rv rv_n ev ev_n tv tv_n } irv tav evv tx_n ns_m ns_e ns_t gel gfl { eds dd ep0 ec0 rtm_n lb_n } } ⊢|
								\]
								slv_file_lp { RTM_ST i il MV LCV tx_n NS gel gfl EC } ⊢|
						∐ ast.lc_ln◂c . 
							\[
							$ c ⊢ 
							∐ ast.cst_name◂cn . 
								$ cn ⊢ cn,cn0 
								slv_ns_e { cn0 mmv mev ev ns_m ns_e il } ⊢ { mmv mev ev ns_m ns_e il i_e } 
								_some i_e ⊢ o 
								_cns { { w o } ns_e } ⊢ ns_e 
								slv_file_lp { { rsp rl ns_r } i il { hpv hpv_n } { mmv mev mtv mv_n rv rv_n ev ev_n tv tv_n } irv tav evv tx_n ns_m ns_e ns_t gel gfl { eds dd ep0 ec0 rtm_n lb_n } } ⊢|
							∐. ast.cst_v◂v . 
								slv_cst_v v ⊢ { v yx } 
								k_cst_v v ⊢ k 
								add_e { tv_n tv evv ev ev_n ns_e w k yx } ⊢ { tv_n tv evv ev ev_n ns_e } 
								slv_file_lp { { rsp rl ns_r } i il { hpv hpv_n } { mmv mev mtv mv_n rv rv_n ev ev_n tv tv_n } irv tav evv tx_n ns_m ns_e ns_t gel gfl { eds dd ep0 ec0 rtm_n lb_n } } ⊢|
								\]
							slv_file_lp { RTM_ST i il MV LCV tx_n NS gel gfl EC } ⊢|
						∐. ast.lc_cst◂lc . 
							\[
							##_nil {} ⊢ ns_r 
							» 0r _ ⊢ lv 
							slv_r { lv { mmv mev ev ns_m ns_e il } rv tv tv_n rv_n ns_r lc } ⊢ { lv { mmv mev ev ns_m ns_e il } rv tv tv_n rv_n ns_r lc yr0 } 
							##add_e { tv_n tv ev ev_n ns_e w yr } ⊢ { tv_n tv ev ev_n ns_e } 
							» _^ dd ⊢ dd,ep1 
								0'*"\t" "§ _ _ ⊢ _\n" // 
							_cns { ep1 ep0 } ⊢ ep0
							##add_e { tv_n tv evv ev ev_n ns_e w k yx } ⊢ { tv_n tv evv ev ev_n ns_e }
							$ rtm_n ⊢ rtm_n,n0 
							_inc rtm_n ⊢ rtm_n 
							rp8.e {} ⊢ eg1 
							rp8.e {} ⊢ er0 
							» _^ rtm_n ⊢ rtm_n,ret0 
								"\tjmp RTM_" 0d' "\n" // 
							» _^ n0 ⊢ n0,ec1 
								"RTM_" 0d' ":\n" //
							rp8.add_s8 { er0 ec1 } ⊢ er0 
							##» 0r _ ⊢ rsp 
							##_nil {} ⊢ rl
							##_nil {} ⊢ l0 
							##RP.rcd l0 ⊢ pr0 
							##» 0r _ ⊢ rsp_d 
							##_nil {} ⊢ l0 
							##RP.rcd l0 ⊢ yr 
							f_rtm ret0 ⊢ ft 
							_nil {} ⊢ cl
							emt.lc_code.f { { gfl cl } lb_n { ev evv } rsp { rv irv } tav tv_n tv lc { eg1 eds er0 } rl ft } ⊢ { { gfl cl } lb_n { ev evv } rsp { rv irv } tav tv_n tv { eg1 eds er0 } rl ft } 
							rp8.cct { ec0 eg1 } ⊢ ec0 
							rp8.cct { ec0 er0 } ⊢ ec0 
							\]
							slv_file_lp { RTM_ST i il MV LCV tx_n NS gel gfl EC } ⊢|
					∐ ast.lc_qlq_etr◂q . 
						##slv_lc_clq.f { { mmv mev ev ns_m ns_e il } irv tav evv rv tv tv_n ev_n rv_n q gfl { eds dd ep0 ec0 lb_n } } ⊢ { { mmv mev ev ns_m ns_e il } irv tav evv rv tv tv_n ev_n rv_n q gfl { eds dd ep0 ec0 lb_n } } 
						slv_file_lp { RTM_ST i il MV LCV tx_n NS gel gfl EC } ⊢|
					∐ ast.dt_etr◂{ w e } .
						\[
						$ e ⊢ 
						∐ ast.dt_def◂{ as dl } .
							$ tx_n ⊢ tx_n,x 
							$ x ⊢ x,x0 
							_inc tx_n ⊢ tx_n
							$ w ⊢ w,w0 
							slv_args_def { { mmv mev ev ns_m ns_e il } mtv tv_n tv ns_t as x dl } ⊢ { { mmv mev ev ns_m ns_e il } mtv tv_n tv ns_t al k yx dl ql } 
							add_t { tv_n tv ns_t w k } ⊢ { tv_n tv ns_t }
							» 0r _ ⊢ an 
							slv_dt_def { { mmv mev ns_m il } { tav evv } an mtv al yx tv tv_n ns_t ev ev_n ns_e dl { dd ep0 ec0 } } ⊢ { { mmv mev ns_m il } { tav evv } an mtv al yx tv tv_n ns_t ev ev_n ns_e { dd ep0 ec0 } ac kl }
							mk_t_aux_f { tv_n tv ql kl } ⊢ { tv_n tv ql kl }
							$ kl ⊢ kl,kl0 
							» 0r _ ⊢ pv_n 
							_nil {} ⊢ alp 
							alc_type_k.hp_lst { pv_n alp tav tv_n tv kl0 } ⊢ { pv_n alp tav tv_n tv hl }
							$ ql ⊢ ql,ql0 
							subst_lst { ql0 alp } ⊢ { ql0 alp } 
							_some { ql kl ql0 hl } ⊢ o 
							##_none {} ⊢ o 
							_set_q { tav x0 { w0 o } } ⊢ { tav x } 
							slv_file_lp { { rsp rl ns_r } i il { hpv hpv_n } { mmv mev mtv mv_n rv rv_n ev ev_n tv tv_n } irv tav evv tx_n ns_m ns_e ns_t gel gfl { eds dd ep0 ec0 rtm_n lb_n } } ⊢| 
						∐. ast.dt_ln◂{ as y } . 
							_nil {} ⊢ al
							slv_args_ln { { mmv mev ev ns_m ns_e il } mtv tv_n tv ns_t as y al } ⊢ { { mmv mev ev ns_m ns_e il } mtv tv_n tv ns_t al k l2 } 
							$ k ⊢ k,k0 
							pnt_type_k { tv k0 } ⊢ { tv sk } 
							» _^ dd,w,tv_n,sk ⊢ dd,w,tv_n,sk,ep1 
								0'*"\t" "¶ " 1' "(" 2d' ") ~ " 3' // 
							_cns { ep1 ep0 } ⊢ ep0 
							add_t { tv_n tv ns_t w k } ⊢ { tv_n tv ns_t } 
							\]
						slv_file_lp { RTM_ST i il MV LCV tx_n NS gel gfl EC } ⊢|
					∐. ast.dt_qlq_etr◂q .
						\[
						» "dt_clq_etr" _ ⊢ sec0 
						_emt sec0 ⊢ sec0
						slv_dt_clq.f { q { mmv mev ev ns_m ns_e il } tav evv ev_n tx_n mtv tv_n tv ns_t { dd ep0 ec0 } } ⊢ { { mmv mev ev ns_m ns_e il } tav evv ev_n tx_n mtv tv_n tv ns_t { dd ep0 ec0 } }
						\]
						slv_file_lp { RTM_ST i il MV LCV tx_n NS gel gfl EC } ⊢|
				∐. _nil◂{} . 
					∎ { RTM_ST i il MV LCV tx_n NS gfl EC } 				
	\[
		§ 
			@.slv_file_lp { RTM_ST i il { mmv mev mtv mv_n } LCV tx_n { ns_m ns_e ns_t } gel gfl { eds dd ep0 ec0 rtm_n lb_n } }
				$ gel ⊢ 
				∐ _cns◂{ e gel } .
					$ e ⊢ 
					∐ ast.mdl_etr◂{ w e } .
						$ e ⊢ 
						∐ ast.mdl_def◂gel0 . 
							» _^ dd,w ⊢ dd,w,ep1 
								0'*"\t" "§§ " 1' "\n" // 
							_cns { ep1 ep0 } ⊢ ep0
							_inc dd ⊢ dd 
							$ mv_n ⊢ mv_n,mv_n_0 
							_inc mv_n ⊢ mv_n
							##_exc_q { mmv i ns_m } ⊢ { mmv i } 
							##_exc_q { mev i ns_e } ⊢ { mev i } 
							##_exc_q { mtv i ns_t } ⊢ { mtv i } 
							_cns { { i ns_m ns_e ns_t } il } ⊢ il 
							_nil {} ⊢ ns_m 
							_nil {} ⊢ ns_e 
							_nil {} ⊢ ns_t 
							slv_file_lp { RTM_ST mv_n_0 il { mmv mev mtv mv_n } LCV tx_n { ns_m ns_e ns_t } gel0 gfl { eds dd ep0 ec0 rtm_n lb_n } } ⊢ { RTM_ST mv_n_0 il { mmv mev mtv mv_n } LCV tx_n { ns_m ns_e ns_t } gfl { eds dd ep0 ec0 rtm_n lb_n } }
							_exc_q { mmv mv_n_0 ns_m } ⊢ { mmv mv_n_0 _ } 
							_exc_q { mev mv_n_0 ns_e } ⊢ { mev mv_n_0 _ } 
							_exc_q { mtv mv_n_0 ns_t } ⊢ { mtv mv_n_0 _ } 
							» _^ dd ⊢ dd,ep1 
								0'*"\t" "∎∎\n" // 
							_cns { ep1 ep0 } ⊢ ep0
							_dec dd ⊢ dd 
							$ il ⊢ 
							∐ _cns◂{ { i ns_m ns_e ns_t } il } . 
								_some mv_n_0 ⊢ o 
								##_get_q { mmv i } ⊢ { mmv i ns_m }
								##_get_q { mev i } ⊢ { mev i ns_e } 
								##_get_q { mtv i } ⊢ { mtv i ns_t } 
								_cns { { w o } ns_m } ⊢ ns_m
								slv_file_lp { RTM_ST i il { mmv mev mtv mv_n } LCV tx_n { ns_m ns_e ns_t } gel gfl { eds dd ep0 ec0 rtm_n lb_n } } ⊢| 
								∎| 
							∐. _nil◂{} . 
								» "slv_file_lp 0" _ ⊢ se 
								_emt se ⊢ se 
								∎| 
						∐. ast.mdl_ln◂n0 .
							$ n0 ⊢ n0,n0_0 
							ast.pnt_name n0_0 ⊢ sn0  							
							» _^ dd,w,sn0 ⊢ dd,w,sn0,ep1 
								0'*"\t" "§§ " 1' " = " 2' "\n" // 
							_cns { ep1 ep0 } ⊢ ep0
							##$ n0 ⊢ n0,n0_0 
							slv_ns_m { n0 mmv ns_m il } ⊢ { mmv ns_m il i_m } 
							##_some i_m ⊢ o 
							##_cns { { w o } ns_m } ⊢ ns_m 
							##slv_file_lp { RTM_ST i il { mmv mev mtv mv_n } LCV tx_n { ns_m ns_e ns_t } gel gfl { eds dd ep0 ec0 rtm_n lb_n } } ⊢|
							∎| 
					∐ ast.grm_etr◂g .
						##slv_grm.f { g i il { hpv hpv_n } { mmv mev mtv mv_n rv rv_n ev ev_n tv tv_n } irv tav evv tx_n ns_m ns_e ns_t gel { dd ep0 ec0 rtm_n lb_n } } ⊢ { g i il { hpv hpv_n } { mmv mev mtv mv_n rv rv_n ev ev_n tv tv_n } irv tav evv tx_n ns_m ns_e ns_t gel { dd ep0 ec0 rtm_n lb_n } }
						##» "\tret\n" _ ⊢ ret_g 
						##rp8.e {} ⊢ ec1 
						##rp8.e {} ⊢ eg1 
						##emt_grm.f { gfl ret_g { eg1 eds ec1 } ev evv rv irv tav tv tv_n lb_n g } ⊢ { gfl ret_g { eg1 eds ec1 } ev evv rv irv tav tv tv_n lb_n }
						##rp8.cct { ec0 eg1 } ⊢ ec0 
						##rp8.cct { ec0 ec1 } ⊢ ec0 
						∎| 
						## slv_file_lp { RTM_ST i il { mmv mev mtv mv_n } LCV tx_n { ns_m ns_e ns_t } gel gfl { eds dd ep0 ec0 rtm_n lb_n } } ⊢|
					∐ ast.lc_etr◂{ w e } .
						$ e ⊢
						∐ ast.lc_def◂{ d td lc } .
							\[
							_nil {} ⊢ ns_r_e
							» 1r _ ⊢ lv 
							crt_dst_ptn { lv rv tv tv_n rv_n ns_r_e d } ⊢ { lv rv tv tv_n rv_n ns_r_e d y } 
							$ y ⊢ y,y0 
							rtr_dst_ptn { { mmv mev ev ns_m ns_e il } mtv tv_n tv ns_t y0 td } ⊢ { { mmv mev ev ns_m ns_e il } mtv tv_n tv ns_t } 
							slv_r { lv { mmv mev ev ns_m ns_e il } rv tv tv_n rv_n ns_r_e lc } ⊢ { lv { mmv mev ev ns_m ns_e il } rv tv tv_n rv_n ns_r_e lc yr } 
							_dec lv ⊢ lv 
							gen { tv_n tv lv y } ⊢ { tv_n tv lv y } 
							$ y ⊢ y,y0 
							$ yr ⊢ yr,yr0 
							imp { y0 yr0 } ⊢ yx 
							RP.atm yx ⊢ yx 
							$ yx ⊢ yx,yx0 
							pnt_type_k { tv yx0 } ⊢ { tv syx } 
							_nil {} ⊢ ql0 
							$ y ⊢ y,y0
							chk_pv { tv y0 ql0 } ⊢ { tv ql0 } 
							∐ ql0 ⊢ _nil◂{} . 
								rset.ini {} ⊢ s0 
								» 0r _ ⊢ pv_n 
								_nil {} ⊢ alp 
								$ y ⊢ y,y0 
								alc_type_k.f { pv_n alp tav tv_n tv s0 y0 } ⊢ { pv_n alp tav tv_n tv s0 p0 } 
								rset.ini {} ⊢ sr0 
								$ yr ⊢ yr,yr0 
								alc_type_k.f { pv_n alp tav tv_n tv sr0 yr0 } ⊢ { pv_n alp tav tv_n tv sr0 pr0 } 
								$ p0 ⊢ p0,p00 
								stt_v.pnt.f p00 ⊢ sp0 
								$ pr0 ⊢ pr0,pr00 
								stt_v.pnt.f pr00 ⊢ spr0 
								$ p0 ⊢ p0,p00 
								_nil {} ⊢ rl_e 
								_nil {} ⊢ dl 
								emt.idx.crt_ptn { irv d p00 rl_e dl } ⊢ { irv rl_e dl } 
								$ pr0 ⊢ pr0,pr00 
								$ pr0 ⊢ pr0,pr0_0 
								emt.mk_rsp pr0_0 ⊢ rsp_d 
								$ p0 ⊢ p0,p00 
								emt.mk_rsp p00 ⊢ rsp_e 
								$ rsp_e ⊢ rsp_e,rsp0 
								$ rsp_d ⊢ rsp_d,rsp_d0 
								k_op { rsp0 p0 rsp_d pr0 } ⊢ k 
								##k_op_axm {} ⊢ k 
								$ ev_n ⊢ ev_n,en 
								» _^ dd,w,syx,sp0,spr0,en ⊢ dd,w,syx,sp0,spr0,en,ep1 
									0'*"\t" "§ " 1' "(" 5d' ") " 3' " ⊢ " 4' " : " 2' "\n" // 
								_cns { ep1 ep0 } ⊢ ep0
								_nil {} ⊢ cl 
								rp8.e {} ⊢ ee0 
								rp8.e {} ⊢ eeg0 
								» _^ en,w,sp0,spr0,syx ⊢ en,w,sp0,spr0,syx,ec1 
									"ETR_" 0d' ": ;; " 1' " " 2' " ⊢ " 3' " : " 4' "\n" //
								add_e { tv_n tv evv ev ev_n ns_e w k yx } ⊢ { tv_n tv evv ev ev_n ns_e }
								rp8.add_s8 { ee0 ec1 } ⊢ ee0 
								∐ rsp_e'=0r . 
									f_etr { rsp_d0 pr00 yr } ⊢ ft 
									emt.lc_code.f { { gfl cl } lb_n { ev evv } rsp_e { rv irv } tav tv_n tv lc { eeg0 eds ee0 } rl_e ft } ⊢ { { gfl cl } lb_n { ev evv } rsp_e { rv irv } tav tv_n tv { eeg0 eds ee0 } rl_e ft } 
									rp8.cct { ec0 eeg0 } ⊢ ec0 
									rp8.cct { ec0 ee0 } ⊢ ec0  
									slv_file_lp { { rsp rl ns_r } i il { hpv hpv_n } { mmv mev mtv mv_n rv rv_n ev ev_n tv tv_n } irv tav evv tx_n ns_m ns_e ns_t gel gfl { eds dd ep0 ec0 rtm_n lb_n } } ⊢|
								∐. . 
									» "\tadd rsp,8\n" _ ⊢ se0 
									rp8.add_s8 { ee0 se0 } ⊢ ee0 
									f_etr { rsp_d0 pr00 yr } ⊢ ft 
									emt.lc_code.f { { gfl cl } lb_n { ev evv } rsp_e { rv irv } tav tv_n tv lc { eeg0 eds ee0 } rl_e ft } ⊢ { { gfl cl } lb_n { ev evv } rsp_e { rv irv } tav tv_n tv { eeg0 eds ee0 } rl_e ft } 
									rp8.cct { ec0 eeg0 } ⊢ ec0 
									rp8.cct { ec0 ee0 } ⊢ ec0 
									slv_file_lp { { rsp rl ns_r } i il { hpv hpv_n } { mmv mev mtv mv_n rv rv_n ev ev_n tv tv_n } irv tav evv tx_n ns_m ns_e ns_t gel gfl { eds dd ep0 ec0 rtm_n lb_n } } ⊢|
							∐. .
								k_op_gnr { d lc } ⊢ k 
								add_e { tv_n tv evv ev ev_n ns_e w k yx } ⊢ { tv_n tv evv ev ev_n ns_e }
								slv_file_lp { { rsp rl ns_r } i il { hpv hpv_n } { mmv mev mtv mv_n rv rv_n ev ev_n tv tv_n } irv tav evv tx_n ns_m ns_e ns_t gel gfl { eds dd ep0 ec0 rtm_n lb_n } } ⊢|
								\]
								∎| 
								##slv_file_lp { RTM_ST i il { mmv mev mtv mv_n } LCV tx_n { ns_m ns_e ns_t } gel gfl { eds dd ep0 ec0 rtm_n lb_n } } ⊢|								
						∐ ast.lc_ln◂c . 
							\[
							$ c ⊢ 
							∐ ast.cst_name◂cn . 
								$ cn ⊢ cn,cn0 
								slv_ns_e { cn0 mmv mev ev ns_m ns_e il } ⊢ { mmv mev ev ns_m ns_e il i_e } 
								_some i_e ⊢ o 
								_cns { { w o } ns_e } ⊢ ns_e 
								slv_file_lp { { rsp rl ns_r } i il { hpv hpv_n } { mmv mev mtv mv_n rv rv_n ev ev_n tv tv_n } irv tav evv tx_n ns_m ns_e ns_t gel gfl { eds dd ep0 ec0 rtm_n lb_n } } ⊢|
							∐. ast.cst_v◂v . 
								slv_cst_v v ⊢ { v yx } 
								k_cst_v v ⊢ k 
								add_e { tv_n tv evv ev ev_n ns_e w k yx } ⊢ { tv_n tv evv ev ev_n ns_e } 
								slv_file_lp { { rsp rl ns_r } i il { hpv hpv_n } { mmv mev mtv mv_n rv rv_n ev ev_n tv tv_n } irv tav evv tx_n ns_m ns_e ns_t gel gfl { eds dd ep0 ec0 rtm_n lb_n } } ⊢|
								\]
							∎| 
							##slv_file_lp { RTM_ST i il { mmv mev mtv mv_n } LCV tx_n { ns_m ns_e ns_t } gel gfl { eds dd ep0 ec0 rtm_n lb_n } } ⊢|
						∐. ast.lc_cst◂lc . 
							\[
							##_nil {} ⊢ ns_r 
							» 0r _ ⊢ lv 
							slv_r { lv { mmv mev ev ns_m ns_e il } rv tv tv_n rv_n ns_r lc } ⊢ { lv { mmv mev ev ns_m ns_e il } rv tv tv_n rv_n ns_r lc yr0 } 
							##add_e { tv_n tv ev ev_n ns_e w yr } ⊢ { tv_n tv ev ev_n ns_e } 
							» _^ dd ⊢ dd,ep1 
								0'*"\t" "§ _ _ ⊢ _\n" // 
							_cns { ep1 ep0 } ⊢ ep0
							##add_e { tv_n tv evv ev ev_n ns_e w k yx } ⊢ { tv_n tv evv ev ev_n ns_e }
							$ rtm_n ⊢ rtm_n,n0 
							_inc rtm_n ⊢ rtm_n 
							rp8.e {} ⊢ eg1 
							rp8.e {} ⊢ er0 
							» _^ rtm_n ⊢ rtm_n,ret0 
								"\tjmp RTM_" 0d' "\n" // 
							» _^ n0 ⊢ n0,ec1 
								"RTM_" 0d' ":\n" //
							rp8.add_s8 { er0 ec1 } ⊢ er0 
							##» 0r _ ⊢ rsp 
							##_nil {} ⊢ rl
							##_nil {} ⊢ l0 
							##RP.rcd l0 ⊢ pr0 
							##» 0r _ ⊢ rsp_d 
							##_nil {} ⊢ l0 
							##RP.rcd l0 ⊢ yr 
							f_rtm ret0 ⊢ ft 
							_nil {} ⊢ cl
							emt.lc_code.f { { gfl cl } lb_n { ev evv } rsp { rv irv } tav tv_n tv lc { eg1 eds er0 } rl ft } ⊢ { { gfl cl } lb_n { ev evv } rsp { rv irv } tav tv_n tv { eg1 eds er0 } rl ft } 
							rp8.cct { ec0 eg1 } ⊢ ec0 
							rp8.cct { ec0 er0 } ⊢ ec0 
							\]
							∎| 
							##slv_file_lp { RTM_ST i il { mmv mev mtv mv_n } LCV tx_n { ns_m ns_e ns_t } gel gfl { eds dd ep0 ec0 rtm_n lb_n } } ⊢|
					∐ ast.lc_qlq_etr◂q . 
						##slv_lc_clq.f { { mmv mev ev ns_m ns_e il } irv tav evv rv tv tv_n ev_n rv_n q gfl { eds dd ep0 ec0 lb_n } } ⊢ { { mmv mev ev ns_m ns_e il } irv tav evv rv tv tv_n ev_n rv_n q gfl { eds dd ep0 ec0 lb_n } }
						∎| 
						## slv_file_lp { RTM_ST i il { mmv mev mtv mv_n } LCV tx_n { ns_m ns_e ns_t } gel gfl { eds dd ep0 ec0 rtm_n lb_n } } ⊢|
					∐ ast.dt_etr◂{ w e } .
						\[
						$ e ⊢ 
						∐ ast.dt_def◂{ as dl } .
							$ tx_n ⊢ tx_n,x 
							$ x ⊢ x,x0 
							_inc tx_n ⊢ tx_n
							$ w ⊢ w,w0 
							slv_args_def { { mmv mev ev ns_m ns_e il } mtv tv_n tv ns_t as x dl } ⊢ { { mmv mev ev ns_m ns_e il } mtv tv_n tv ns_t al k yx dl ql } 
							add_t { tv_n tv ns_t w k } ⊢ { tv_n tv ns_t }
							» 0r _ ⊢ an 
							slv_dt_def { { mmv mev ns_m il } { tav evv } an mtv al yx tv tv_n ns_t ev ev_n ns_e dl { dd ep0 ec0 } } ⊢ { { mmv mev ns_m il } { tav evv } an mtv al yx tv tv_n ns_t ev ev_n ns_e { dd ep0 ec0 } ac kl }
							mk_t_aux_f { tv_n tv ql kl } ⊢ { tv_n tv ql kl }
							$ kl ⊢ kl,kl0 
							» 0r _ ⊢ pv_n 
							_nil {} ⊢ alp 
							alc_type_k.hp_lst { pv_n alp tav tv_n tv kl0 } ⊢ { pv_n alp tav tv_n tv hl }
							$ ql ⊢ ql,ql0 
							subst_lst { ql0 alp } ⊢ { ql0 alp } 
							_some { ql kl ql0 hl } ⊢ o 
							##_none {} ⊢ o 
							_set_q { tav x0 { w0 o } } ⊢ { tav x } 
							slv_file_lp { { rsp rl ns_r } i il { hpv hpv_n } { mmv mev mtv mv_n rv rv_n ev ev_n tv tv_n } irv tav evv tx_n ns_m ns_e ns_t gel gfl { eds dd ep0 ec0 rtm_n lb_n } } ⊢| 
						∐. ast.dt_ln◂{ as y } . 
							_nil {} ⊢ al
							slv_args_ln { { mmv mev ev ns_m ns_e il } mtv tv_n tv ns_t as y al } ⊢ { { mmv mev ev ns_m ns_e il } mtv tv_n tv ns_t al k l2 } 
							$ k ⊢ k,k0 
							pnt_type_k { tv k0 } ⊢ { tv sk } 
							» _^ dd,w,tv_n,sk ⊢ dd,w,tv_n,sk,ep1 
								0'*"\t" "¶ " 1' "(" 2d' ") ~ " 3' // 
							_cns { ep1 ep0 } ⊢ ep0 
							add_t { tv_n tv ns_t w k } ⊢ { tv_n tv ns_t } 
							\]
							∎| 
							##slv_file_lp { RTM_ST i il { mmv mev mtv mv_n } LCV tx_n { ns_m ns_e ns_t } gel gfl { eds dd ep0 ec0 rtm_n lb_n } } ⊢|
					∐. ast.dt_qlq_etr◂q .
						\[
						» "dt_clq_etr" _ ⊢ sec0 
						_emt sec0 ⊢ sec0
						slv_dt_clq.f { q { mmv mev ev ns_m ns_e il } tav evv ev_n tx_n mtv tv_n tv ns_t { dd ep0 ec0 } } ⊢ { { mmv mev ev ns_m ns_e il } tav evv ev_n tx_n mtv tv_n tv ns_t { dd ep0 ec0 } }
						\]
						∎| 
						##slv_file_lp { RTM_ST i il { mmv mev mtv mv_n } LCV tx_n { ns_m ns_e ns_t } gel gfl { eds dd ep0 ec0 rtm_n lb_n } } ⊢|
				∐. _nil◂{} . 
					∎ { RTM_ST i il { mmv mev mtv mv_n } LCV tx_n { ns_m ns_e ns_t } gfl { eds dd ep0 ec0 rtm_n lb_n } }
	\]
	§ mk_nil_arr n 
		_nil {} ⊢ l 
		_mk_arr { n l } ⊢ { n _ a } 
		∎ { n a }
	§ mk_none_arr n 
		_none {} ⊢ l 
		_mk_arr { n l } ⊢ { n _ a } 
		∎	{ n a }
	§ slv_file gel 
		##» t_axm.N0 _ ⊢ tx_n 
		$ %[ 0r ] ⊢ tx_n 
		_nil {} ⊢ ns_m 
		_nil {} ⊢ ns_t 
		_nil {} ⊢ ns_e 
		mk_nil_arr %[ 800r ] ⊢ { _ mmv }  
		mk_nil_arr %[ 800r ] ⊢ { _ mev }  
		mk_nil_arr %[ 800r ] ⊢ { _ mtv }  
		##mk_none_arr %[ 16000r ] ⊢ { _ rv }
		##mk_none_arr %[ 4000r ] ⊢ { _ irv }
		##mk_none_arr %[ 2000r ] ⊢ { _ ev }
		##mk_none_arr %[ 2000r ] ⊢ { _ evv }
		##mk_none_arr %[ 32000r ] ⊢ { _ tv }
		##mk_none_arr %[ 2000r ] ⊢ { _ tav }
		##mk_none_arr %[ 2000r ] ⊢ { _ hpv }
		##» 0r _ ⊢ hpv_n  
		» 1r _ ⊢ mv_n
		» 0r _ ⊢ rv_n
		» 0r _ ⊢ ev_n
		» 0r _ ⊢ tv_n
		» 0r _ ⊢ i 
		» 0r _ ⊢ lv 
		\[
		» t_axm.id.r64 _ ⊢ ix 
		t_axm.r64 {} ⊢ y0 
		» "_r64" _ ⊢ t0
		$ t0 ⊢ t0,t00 
		add_t { tv_n tv ns_t t0 y0 } ⊢ { tv_n tv ns_t }
		_none {} ⊢ o 
				_set_q { tav ix { t00 o } } ⊢ { tav ix }
				_inc ix ⊢ ix 

				t_axm.s8 {} ⊢ y0 
				» "_s8" _ ⊢ t0
				$ t0 ⊢ t0,t00 
				add_t { tv_n tv ns_t t0 y0 } ⊢ { tv_n tv ns_t }
				_none {} ⊢ o 
				_set_q { tav ix { t00 o } } ⊢ { tav ix }
				_inc ix ⊢ ix 

				lst_v { tv_n tv } ⊢ { tv_n tv y0 }  
				» "_lst" _ ⊢ t0
				$ t0 ⊢ t0,t00 
				add_t { tv_n tv ns_t t0 y0 } ⊢ { tv_n tv ns_t }
				newvar_i { tv_n tv } ⊢ { tv_n tv ia } 
				$ ia ⊢ ia,ia0 
				var ia ⊢ v 
				RP.atm v ⊢ v 
				$ v ⊢ v,v0 
				t_axm.lst v ⊢ y
				_nil {} ⊢ r0 
				_cns { y r0 } ⊢ r0 
				_cns { v0 r0 } ⊢ r0 
				RP.rcd r0 ⊢ r0 
				t_axm.unt {} ⊢ u0 
				_nil {} ⊢ l0 
				_cns { u0 l0 } ⊢ l0
				_cns { r0 l0 } ⊢ l0 
				_nil {} ⊢ a0 
				_cns { ia0 a0 } ⊢ a0
				  
				_nil {} ⊢ vl 
				» 0r _ ⊢ q0 
				$ q0 ⊢ q0,q00
				_cns { q00 vl } ⊢ vl 
				$ q0 ⊢ q0,q00 
				stt_v.pv q00 ⊢ h0 
				_nil {} ⊢ vl0 
				_cns { h0 vl0 } ⊢ vl0 
				» t_axm.id.lst  _ ⊢ id0 
				stt_v.adt { id0 vl0 } ⊢ ad0 
				_nil {} ⊢ c0 
				_cns { ad0 c0 } ⊢ c0 
				stt_v.pv q0 ⊢ h0 
				_cns { h0 c0 } ⊢ c0 
				stt_v.rcd c0 ⊢ h0 
				stt_v.ref h0 ⊢ h0 
				_nil {} ⊢ c0 
				stt_v.rcd c0 ⊢ c0 
				stt_v.ref c0 ⊢ h1 
				_nil {} ⊢ hl 
				_cns { h1 hl } ⊢ hl 
				_cns { h0 hl } ⊢ hl 
				_some { a0 l0 vl hl } ⊢ o 
				_set_q { tav ix { t00 o } } ⊢ { tav ix }
				_inc ix ⊢ ix 

				opn_v { tv_n tv } ⊢ { tv_n tv y0 }  
				» "_opn" _ ⊢ t0
				$ t0 ⊢ t0,t00 
				add_t { tv_n tv ns_t t0 y0 } ⊢ { tv_n tv ns_t }
				newvar_i { tv_n tv } ⊢ { tv_n tv ia } 
				$ ia ⊢ ia,ia0 
				var ia ⊢ v 
				RP.atm v ⊢ v 
				$ v ⊢ v,v0 
				t_axm.opn v ⊢ y 
				_nil {} ⊢ r0 
				t_axm.unt {} ⊢ u0
				_nil {} ⊢ l0 
				_cns { u0 l0 } ⊢ l0
				_cns { v0 l0 } ⊢ l0 
				_nil {} ⊢ a0 
				_cns { ia0 a0 } ⊢ a0  
				
				_nil {} ⊢ vl 
				» 0r _ ⊢ q0 
				$ q0 ⊢ q0,q00
				_cns { q0 vl } ⊢ vl 
				stt_v.pv q00 ⊢ h0 
				_nil {} ⊢ c0 
				stt_v.rcd c0 ⊢ c0 
				stt_v.ref c0 ⊢ h1 
				_nil {} ⊢ hl 
				_cns { h1 hl } ⊢ hl 
				_cns { h0 hl } ⊢ hl 
				_some { a0 l0 vl hl } ⊢ o 
				_set_q { tav ix { t00 o } } ⊢ { tav ix }
				_inc ix ⊢ ix 
				
				arr_v { tv_n tv } ⊢ { tv_n tv y0 }  
				» "_arr" _ ⊢ t0
				$ t0 ⊢ t0,t00 
				add_t { tv_n tv ns_t t0 y0 } ⊢ { tv_n tv ns_t }
				_none {} ⊢ o 
				_set_q { tav ix { t00 o } } ⊢ { tav ix }
				_inc ix ⊢ ix 

				» "_mk_arr" _ ⊢ se 
				_nil {} ⊢ l0 
				t_axm.r64 {} ⊢ y0 
				newvar_q { tv_n tv lv } ⊢ { tv_n tv lv yv }
				$ yv ⊢ yv,yv0 
				_cns { yv0 l0 } ⊢ l0 
				_cns { y0 l0 } ⊢ l0 
				RP.rcd l0 ⊢ y0 
				t_axm.r64 {} ⊢ y1 
				$ yv ⊢ yv,yv0
				t_axm.arr yv0 ⊢ ya
				_nil {} ⊢l0 
				_cns { ya l0 } ⊢ l0
				_cns { yv l0 } ⊢ l0 
				_cns { y1 l0 } ⊢ l0 
				RP.rcd l0 ⊢ yr0 
				imp { y0 yr0 } ⊢ yx  
				RP.atm yx ⊢ yx 
				» e_axm.mk_arr _ ⊢ k0
				k_op_axm k0 ⊢ k 
				add_e { tv_n tv evv ev ev_n ns_e se k yx } ⊢ { tv_n tv evv ev ev_n ns_e } 
				
				t_axm.r64 {} ⊢ y0 
				t_axm.r64 {} ⊢ y1 
				newvar_q { tv_n tv lv } ⊢ { tv_n tv lv yv }
				$ yv ⊢ yv,yv0 
				t_axm.arr yv0 ⊢ ya
				$ ya ⊢ ya,ya0 
				_nil {} ⊢ l0 
				$ yv ⊢ yv,yv0
				_cns { yv0 l0 } ⊢ l0 
				_cns { y0 l0 } ⊢ l0
				_cns { ya l0 } ⊢ l0
				RP.rcd l0 ⊢ y_s 
				_nil {} ⊢ l1 
				_cns { yv l1 } ⊢ l1
				_cns { y1 l1 } ⊢ l1 
				_cns { ya0 l1 } ⊢ l1   
				RP.rcd l1 ⊢ y_d 
				imp { y_s y_d } ⊢ yx 
				RP.atm yx ⊢ yx 
				» "_exc_q" _ ⊢ se
				» e_axm.exc_q _ ⊢ k0 
				k_op_axm k0 ⊢ k 
				add_e { tv_n tv evv ev ev_n ns_e se k yx } ⊢ { tv_n tv evv ev ev_n ns_e } 
						
				» "_set_q" _ ⊢ se
				t_axm.r64 {} ⊢ y0 
				t_axm.r64 {} ⊢ y1 
				newvar_q { tv_n tv lv } ⊢ { tv_n tv lv yv }
				$ yv ⊢ yv,yv0 
				t_axm.arr yv ⊢ ya
				$ ya ⊢ ya,ya0 
				_nil {} ⊢ l0 
				_cns { yv0 l0 } ⊢ l0 
				_cns { y0 l0 } ⊢ l0
				_cns { ya l0 } ⊢ l0
				RP.rcd l0 ⊢ y_s 
				_nil {} ⊢ l1 
				_cns { y1 l1 } ⊢ l1
				_cns { ya0 l1 } ⊢ l1   
				RP.rcd l1 ⊢ y_d 
				imp { y_s y_d } ⊢ yx 
				RP.atm yx ⊢ yx 
				» e_axm.set_q _ ⊢ k0 
				k_op_axm k0 ⊢ k 
				add_e { tv_n tv evv ev ev_n ns_e se k yx } ⊢ { tv_n tv evv ev ev_n ns_e } 
							
				» "_get_q" _ ⊢ se
				t_axm.r64 {} ⊢ y0 
				t_axm.r64 {} ⊢ y1 
				newvar_q { tv_n tv lv } ⊢ { tv_n tv lv yv }
				$ yv ⊢ yv,yv0 
				t_axm.arr yv ⊢ ya
				$ ya ⊢ ya,ya0 
				_nil {} ⊢ l0 
				_cns { yv0 l0 } ⊢ l0 
				_cns { y0 l0 } ⊢ l0
				_cns { ya l0 } ⊢ l0
				RP.rcd l0 ⊢ y_d 
				_nil {} ⊢ l1 
				_cns { y1 l1 } ⊢ l1
				_cns { ya0 l1 } ⊢ l1   
				RP.rcd l1 ⊢ y_s 
				imp { y_s y_d } ⊢ yx
				RP.atm yx ⊢ yx 
				» e_axm.get_q _ ⊢ k0 
				k_op_axm k0 ⊢ k 
				add_e { tv_n tv evv ev ev_n ns_e se k yx } ⊢ { tv_n tv evv ev ev_n ns_e } 
							
				» "_lod_q" _ ⊢ se
				t_axm.r64 {} ⊢ y0 
				t_axm.r64 {} ⊢ y1 
				newvar_q { tv_n tv lv } ⊢ { tv_n tv lv yv }
				$ yv ⊢ yv,yv0 
				t_axm.arr yv ⊢ ya
				$ ya ⊢ ya,ya0 
				_nil {} ⊢ l0 
				_cns { yv0 l0 } ⊢ l0 
				_cns { y0 l0 } ⊢ l0
				_cns { ya l0 } ⊢ l0
				RP.rcd l0 ⊢ y_d 
				_nil {} ⊢ l1 
				_cns { y1 l1 } ⊢ l1
				_cns { ya0 l1 } ⊢ l1   
				RP.rcd l1 ⊢ y_s 
				imp { y_s y_d } ⊢ yx
				RP.atm yx ⊢ yx 
				» e_axm.lod_q _ ⊢ k0 
				k_op_axm k0 ⊢ k 
				add_e { tv_n tv evv ev ev_n ns_e se k yx } ⊢ { tv_n tv evv ev ev_n ns_e } 
								
				» "_arr_of_lst" _ ⊢ se 
				newvar_q { tv_n tv lv } ⊢ { tv_n tv lv yv }
				$ yv ⊢ yv,yv0 				
				t_axm.arr yv0 ⊢ ya
				t_axm.lst yv ⊢ ys
				imp { ys ya } ⊢ yx  
				RP.atm yx ⊢ yx 
				» e_axm.arr_of_lst _ ⊢ k0
				k_op_axm k0 ⊢ k 
				add_e { tv_n tv evv ev ev_n ns_e se k yx } ⊢ { tv_n tv evv ev ev_n ns_e } 
				
				» "_arr_len" _ ⊢ se
				newvar_q { tv_n tv lv } ⊢ { tv_n tv lv yv }
				t_axm.arr yv ⊢ ya
				$ ya ⊢ ya,ya0 
				t_axm.r64 {} ⊢ y0 
				_nil {} ⊢ l0 
				_cns { y0 l0 } ⊢ l0
				_cns { ya0 l0 } ⊢ l0 
				RP.rcd l0 ⊢ y_d 
				imp { ya y_d } ⊢ yx 
				RP.atm yx ⊢ yx 
				» e_axm.arr_len _ ⊢ k0 
				k_op_axm k0 ⊢ k 
				add_e { tv_n tv evv ev ev_n ns_e se k yx } ⊢ { tv_n tv evv ev ev_n ns_e } 
						
				t_axm.s8 {} ⊢ ys 
				t_axm.lst ys ⊢ yx 
				» "_args" _ ⊢ se
				» 11111111r _ ⊢ k0 
				k_op_axm k0 ⊢ k 
				add_e { tv_n tv evv ev ev_n ns_e se k yx } ⊢ { tv_n tv evv ev ev_n ns_e } 
					
				t_axm.r64 {} ⊢ yl0 
				t_axm.r64 {} ⊢ yl1
				t_axm.s8 {} ⊢ ys 
				_nil {} ⊢ l0 
				_cns { ys l0 } ⊢ l0 
				_cns { yl1 l0 } ⊢ l0 
				RP.rcd l0 ⊢ y_d 
				imp { yl0 y_d } ⊢ yx  
				RP.atm yx ⊢ yx 
				» "_mlc_s8" _ ⊢ se
				» e_axm.mlc_s8 _ ⊢ k0 
				k_op_axm k0 ⊢ k 
				add_e { tv_n tv evv ev ev_n ns_e se k yx } ⊢ { tv_n tv evv ev ev_n ns_e } 
					
				t_axm.r64 {} ⊢ yl0 
				t_axm.s8 {} ⊢ ys
				$ ys ⊢ ys,ys0  
				_nil {} ⊢ l0 
				_cns { yl0 l0 } ⊢ l0 
				_cns { ys0 l0 } ⊢ l0 
				RP.rcd l0 ⊢ y_d 
				imp { ys y_d } ⊢ yx  
				RP.atm yx ⊢ yx 
				» "_s8_len" _ ⊢ se
				» e_axm.s8_len _ ⊢ k0 
				k_op_axm k0 ⊢ k 
				add_e { tv_n tv evv ev ev_n ns_e se k yx } ⊢ { tv_n tv evv ev ev_n ns_e } 
						
				newvar_q { tv_n tv lv } ⊢ { tv_n tv lv yv }
				$ yv ⊢ yv,yv0 
				imp { yv yv0 } ⊢ yx 
				RP.atm yx ⊢ yx 
				» "_emt" _ ⊢ se
				» e_axm.emt _ ⊢ k0 
				k_op_axm k0 ⊢ k  
				add_e { tv_n tv evv ev ev_n ns_e se k yx } ⊢ { tv_n tv evv ev ev_n ns_e } 
					
				t_axm.r64 {} ⊢ y0 
				t_axm.r64 {} ⊢ y1 
				imp { y0 y1 } ⊢ yx 
				RP.atm yx ⊢ yx 
				» "_inc" _ ⊢ se
				» e_axm.inc _ ⊢ k0 
				k_op_axm k0 ⊢ k 
				add_e { tv_n tv evv ev ev_n ns_e se k yx } ⊢ { tv_n tv evv ev ev_n ns_e } 
						
				t_axm.r64 {} ⊢ y0 
				t_axm.r64 {} ⊢ y1 
				imp { y0 y1 } ⊢ yx
				RP.atm yx ⊢ yx 
				» "_dec" _ ⊢ se
				» e_axm.dec _ ⊢ k0 
				k_op_axm k0 ⊢ k 
				add_e { tv_n tv evv ev ev_n ns_e se k yx } ⊢ { tv_n tv evv ev ev_n ns_e } 
					
				t_axm.r64 {} ⊢ y0 
				t_axm.r64 {} ⊢ y1 
				_nil {} ⊢ l0 
				_cns { y0 l0 } ⊢ l0 
				_cns { y1 l0 } ⊢ l0 
				RP.rcd l0 ⊢ y_d 
				t_axm.r64 {} ⊢ y0 
				t_axm.r64 {} ⊢ y1 
				_nil {} ⊢ l0 
				_cns { y0 l0 } ⊢ l0 
				_cns { y1 l0 } ⊢ l0 
				RP.rcd l0 ⊢ y_s 
				imp { y_s y_d } ⊢ yx
				RP.atm yx ⊢ yx 
				» "_add" _ ⊢ se
				» e_axm.add _ ⊢ k0 
				k_op_axm k0 ⊢ k 
				add_e { tv_n tv evv ev ev_n ns_e se k yx } ⊢ { tv_n tv evv ev ev_n ns_e } 						
				t_axm.r64 {} ⊢ y0 
				t_axm.r64 {} ⊢ y1 
				_nil {} ⊢ l0 
				_cns { y0 l0 } ⊢ l0 
				_cns { y1 l0 } ⊢ l0 
				RP.rcd l0 ⊢ y_d 
				t_axm.r64 {} ⊢ y0 
				t_axm.r64 {} ⊢ y1 
				_nil {} ⊢ l0 
				_cns { y0 l0 } ⊢ l0 
				_cns { y1 l0 } ⊢ l0 
				RP.rcd l0 ⊢ y_s 
				imp { y_s y_d } ⊢ yx
				RP.atm yx ⊢ yx 
				» "_sub" _ ⊢ se
				» e_axm.sub _ ⊢ k0 
				k_op_axm k0 ⊢ k 
				add_e { tv_n tv evv ev ev_n ns_e se k yx } ⊢ { tv_n tv evv ev ev_n ns_e } 
					
				t_axm.r64 {} ⊢ y0 
				t_axm.r64 {} ⊢ y1 
				_nil {} ⊢ l0 
				_cns { y0 l0 } ⊢ l0 
				_cns { y1 l0 } ⊢ l0 
				RP.rcd l0 ⊢ y_d 
				t_axm.r64 {} ⊢ y0 
				t_axm.r64 {} ⊢ y1 
				_nil {} ⊢ l0 
				_cns { y0 l0 } ⊢ l0 
				_cns { y1 l0 } ⊢ l0 
				RP.rcd l0 ⊢ y_s 
				imp { y_s y_d } ⊢ yx
				RP.atm yx ⊢ yx 
				» "_imul" _ ⊢ se
				» e_axm.imul _ ⊢ k0 
				k_op_axm k0 ⊢ k 
				add_e { tv_n tv evv ev ev_n ns_e se k yx } ⊢ { tv_n tv evv ev ev_n ns_e } 
					
				t_axm.r64 {} ⊢ y0 
				t_axm.r64 {} ⊢ y1 
				t_axm.s8 {} ⊢ y2   
				_nil {} ⊢ l0 
				_cns { y0 l0 } ⊢ l0 
				_cns { y1 l0 } ⊢ l0 
				_cns { y2 l0 } ⊢ l0 
				RP.rcd l0 ⊢ y_s  
				t_axm.r64 {} ⊢ y0  
				t_axm.r64 {} ⊢ y1 
				t_axm.s8 {} ⊢ y2  
				_nil {} ⊢ l0 
				_cns { y0 l0 } ⊢ l0 
				_cns { y1 l0 } ⊢ l0
				_cns { y2 l0 } ⊢ l0  
				RP.rcd l0 ⊢ y_d 
				imp { y_s y_d } ⊢ yx
				RP.atm yx ⊢ yx 
				» "_sts" _ ⊢ se
				» e_axm.sts _ ⊢ k0 
				k_op_axm k0 ⊢ k 
				add_e { tv_n tv evv ev ev_n ns_e se k yx } ⊢ { tv_n tv evv ev ev_n ns_e } 
						
				t_axm.r64 {} ⊢ y0 
				t_axm.r64 {} ⊢ y1 
				t_axm.s8 {} ⊢ y2   
				_nil {} ⊢ l0 
				_cns { y0 l0 } ⊢ l0 
				_cns { y1 l0 } ⊢ l0 
				_cns { y2 l0 } ⊢ l0 
				RP.rcd l0 ⊢ y_d  
				t_axm.r64 {} ⊢ y0  
				t_axm.s8 {} ⊢ y1   
				_nil {} ⊢ l0 
				_cns { y0 l0 } ⊢ l0 
				_cns { y1 l0 } ⊢ l0 
				RP.rcd l0 ⊢ y_s 
				imp { y_s y_d } ⊢ yx
				RP.atm yx ⊢ yx 
				» "_lds" _ ⊢ se
				» e_axm.lds _ ⊢ k0 
				k_op_axm k0 ⊢ k  
				add_e { tv_n tv evv ev ev_n ns_e se k yx } ⊢ { tv_n tv evv ev ev_n ns_e } 
					
				t_axm.r64 {} ⊢ y0 
				t_axm.r64 {} ⊢ y1 
				_nil {} ⊢ l0 
				_cns { y0 l0 } ⊢ l0 
				_cns { y1 l0 } ⊢ l0 
				RP.rcd l0 ⊢ y_s
				t_axm.r64 {} ⊢ y0 
				t_axm.r64 {} ⊢ y1 
				t_axm.r64 {} ⊢ y2 
				_nil {} ⊢ l0 
				_cns { y2 l0 } ⊢ l0 
				_cns { y0 l0 } ⊢ l0 
				_cns { y1 l0 } ⊢ l0 
				RP.rcd l0 ⊢ y_d 
				imp { y_s y_d } ⊢ yx 
				RP.atm yx ⊢ yx 
				» "_setge" _ ⊢ se
				» e_axm.setge _ ⊢ k0 
				k_op_axm k0 ⊢ k 
				add_e { tv_n tv evv ev ev_n ns_e se k yx } ⊢ { tv_n tv evv ev ev_n ns_e } 
						
				t_axm.r64 {} ⊢ y0 
				t_axm.s8 {} ⊢ y1
				t_axm.r64 {} ⊢ y2
				t_axm.s8 {} ⊢ y3 
				t_axm.r64 {} ⊢ y4 
				_nil {} ⊢ l0 
				_cns { y4 l0 } ⊢ l0
				_cns { y3 l0 } ⊢ l0 
				_cns { y2 l0 } ⊢ l0
				_cns { y1 l0 } ⊢ l0 
				_cns { y0 l0 } ⊢ l0  
				RP.rcd l0 ⊢ y_s
				$ y_s ⊢ y_s,y_d 
				imp { y_s y_d } ⊢ yx
				RP.atm yx ⊢ yx 
				» "_rep_movsb" _ ⊢ se
				» e_axm.rep_movsb _ ⊢ k0 
				k_op_axm k0 ⊢ k 
				add_e { tv_n tv evv ev ev_n ns_e se k yx } ⊢ { tv_n tv evv ev ev_n ns_e } 
						
				_nil {} ⊢ l0 
				RP.rcd l0 ⊢ y0 
				_nil {} ⊢ l0 
				RP.rcd l0 ⊢ y1 
				imp { y0 y1 } ⊢ yx 
				RP.atm yx ⊢ yx 
				» "_info" _ ⊢ se 
				» e_axm.info _ ⊢ k0 
				k_op_axm k0 ⊢ k 
				add_e { tv_n tv evv ev ev_n ns_e se k yx } ⊢ { tv_n tv evv ev ev_n ns_e } 
							
					_nil {} ⊢ l0 
				RP.rcd l0 ⊢ y0 
				t_axm.r64 {} ⊢ y1 
				imp { y0 y1 } ⊢ yx 
				RP.atm yx ⊢ yx 
				» "_getchar" _ ⊢ se 
				» e_axm.getchar _ ⊢ k0 
				k_op_axm k0 ⊢ k 
				add_e { tv_n tv evv ev ev_n ns_e se k yx } ⊢ { tv_n tv evv ev ev_n ns_e } 
					
				newvar_q { tv_n tv lv } ⊢ { tv_n tv lv y0 }
				t_axm.lst y0 ⊢ y0  
				_nil {} ⊢ l0 
				RP.rcd l0 ⊢ y1 
				imp { y1 y0 } ⊢ yx
				RP.atm yx ⊢ yx 
				» "_nil" _ ⊢ se
				» 1r _ ⊢ ia0 
				» 2r _ ⊢ in 
				k_ctr { ia0 in } ⊢ k 
				add_e { tv_n tv evv ev ev_n ns_e se k yx } ⊢ { tv_n tv evv ev ev_n ns_e } 
						
				newvar_q { tv_n tv lv } ⊢ { tv_n tv lv y0 }
				$ y0 ⊢ y0,y1 
				t_axm.lst y0 ⊢ y0 
				$ y0 ⊢ y0,y2 
				_nil {} ⊢ l0 
				_cns { y0 l0 } ⊢ l0 
				_cns { y1 l0 } ⊢ l0 
				RP.rcd l0 ⊢ y0
				imp { y0 y2 } ⊢ yx 
				RP.atm yx ⊢ yx 
				» "_cns" _ ⊢ se
				» 0r _ ⊢ ia0 
				» 2r _ ⊢ in 
				k_ctr { ia0 in } ⊢ k 
				add_e { tv_n tv evv ev ev_n ns_e se k yx } ⊢ { tv_n tv evv ev ev_n ns_e } 
					
				newvar_q { tv_n tv lv } ⊢ { tv_n tv lv y0 } 
				$ y0 ⊢ y0,y1 
				t_axm.opn y1 ⊢ y1  
				imp { y0 y1 } ⊢ yx 				
				RP.atm yx ⊢ yx 
				» "_some" _ ⊢ se
				» 0r _ ⊢ ia0 
				» 2r _ ⊢ in 
				k_ctr { ia0 in } ⊢ k 
				add_e { tv_n tv evv ev ev_n ns_e se k yx } ⊢ { tv_n tv evv ev ev_n ns_e } 
					
				newvar_q { tv_n tv lv } ⊢ { tv_n tv lv y0 }
				t_axm.opn y0 ⊢ y0 
				_nil {} ⊢ l0 
				RP.rcd l0 ⊢ y1 
				imp { y1 y0 } ⊢ yx
				RP.atm yx ⊢ yx 
				» "_none" _ ⊢ se
				» 1r _ ⊢ ia0 
				» 2r _ ⊢ in 
				k_ctr { ia0 in } ⊢ k 
				add_e { tv_n tv evv ev ev_n ns_e se k yx } ⊢ { tv_n tv evv ev ev_n ns_e } 
					
				t_axm.s8 {} ⊢ y0 
				t_axm.s8 {} ⊢ y1 
				t_axm.s8 {} ⊢ y2 
				_nil {} ⊢ l0 
				_cns { y0 l0 } ⊢ l0 
				_cns { y1 l0 } ⊢ l0 
				RP.rcd l0 ⊢ y0 
				imp { y2 y0 } ⊢ yx 
				RP.atm yx ⊢ yx 
				» "_in_fn" _ ⊢ se
				» e_axm.in_fn _ ⊢ k0 
				k_op_axm k0 ⊢ k  
				add_e { tv_n tv evv ev ev_n ns_e se k yx } ⊢ { tv_n tv evv ev ev_n ns_e } 
				
				t_axm.s8 {} ⊢ y0 
				$ y0 ⊢ y0,y1 
				_nil {} ⊢ l0 
				_cns { y0 l0 } ⊢ l0 
				_cns { y1 l0 } ⊢ l0
				RP.rcd l0 ⊢ y0 
				$ y0 ⊢ y0,y1 
				imp { y1 y0 } ⊢ yx 
				RP.atm yx ⊢ yx 
				» "_emt_s8_to" _ ⊢ se
				» e_axm.emt_s8_to _ ⊢ k0 
				k_op_axm k0 ⊢ k 
				add_e { tv_n tv evv ev ev_n ns_e se k yx } ⊢ { tv_n tv evv ev ev_n ns_e } 
				
				t_axm.s8 {} ⊢ y0 
				$ y0 ⊢ y0,y1 
				imp { y1 y0 } ⊢ yx 
				RP.atm yx ⊢ yx 
				» "_cd" _ ⊢ se
				» e_axm.cd _ ⊢ k0 
				k_op_axm k0 ⊢ k 
				add_e { tv_n tv evv ev ev_n ns_e se k yx } ⊢ { tv_n tv evv ev ev_n ns_e } 
			\]				
				
				_nil {} ⊢ ep
				rp8.e {} ⊢ ec 
				» 0r _ ⊢ dd 
				» 0r _ ⊢ rtm_n 

				» _^ _ ⊢ eds 
					`section .data
					`	err_n: dq 0
					` SS_LN_C: dq 0
					`	fmt_err_line: db "err:%x",10,0
					`	fmt_r64: db "%dr",0
					`	fmt_s8: db 34,"%s",34,0
					`	fmt_d: db "%d",0
					`	fmt_x: db "%x",0
					`	fmt_arr_l: db "{| ",0
					`	fmt_arr_r: db "|}",0
					`	fmt_rcd_l: db "{ ",0
					`	fmt_rcd_r: db "} ",0
					`	fmt_rcd_box_l: db "*{ "
					`	fmt_nl: db 10,0
					`	fmt_spc: db " ",0
					`	fmt_emt: db "_emt:",0
					`	fmt_getchar: db "_getchar:",0
					`	rt_err0: db "rt_err 0:",10,0 
					` s8_e: dq 0,0
					`
					`	fmt_info:
					`		db "info:",10
					`		db "SS_LN_C=%d",10
					`		db "SS_LN_N=%d",10
					`		db 0
					`	fmt_info_rcd:
					`		db "rcd %d",10
					`		db "SS_RCD_C=%d",10
					`		db "SS_RCD_N=%d",10
					`		db 0
					`
					`fmt_sig_hdl:
					`	db "sig_hdl:",10
					`	db "signal number=%d",10
					`	db 0
					`
					`	unt: dq 0x0
					`
					`	unt_0: dq 0x0 
					`	unt_1: dq 0x00_01_0000_0000_0000 
					`	unt_2: dq 0x00_02_0000_0000_0000 
					`	unt_3: dq 0x00_03_0000_0000_0000 
					`	unt_4: dq 0x00_04_0000_0000_0000 
					`	unt_5: dq 0x00_05_0000_0000_0000 
					`	unt_6: dq 0x00_06_0000_0000_0000 
					`	unt_7: dq 0x00_07_0000_0000_0000 
					`	unt_8: dq 0x00_08_0000_0000_0000 
					`
					//
				rp8.of_s8 eds ⊢ eds 
				
				» _^ _ ⊢ sc1 
					`section .text
					`global _start
					`
					`info:
					`	C_PUSH_REGS
					`	mov rdi,fmt_info 
					`	mov rsi,QWORD [SS_LN_C]
					`	mov rdx,SS_LN_N 
					`	xor rax,rax 
					`	C_CALL printf
					`	mov rax,0
					`info_rcd:
					`	push rax 
					`	mov rdi,fmt_info_rcd
					`	mov rsi,rax 
					`	mov rdx,QWORD [SS_RCD_C+8*rax]
					`	mov rcx,QWORD [SS_RCD_N+8*rax]
					`	xor rax,rax
					`	C_CALL printf 
					`	pop rax 
					`	cmp rax,RCD_N 
					`	jz info_rcd_end 
					`	add rax,1 
					`	jmp info_rcd 
					`info_rcd_end:
					`	C_POP_REGS 
					`	ret
					`;getchar:
					`;	xor rax,rax 
					`;	C_CALL_SF getchar 
					`;	ret
					`
					`sig_hdl: ; rdi=sig_n rsi=siginfo_t* rdx=void*
					`	push rdi 
					`	push rsi 
					`	push rdx 
					`	xor rax,rax 
					`	mov rsi,rdi 
					`	mov rdi,fmt_sig_hdl
					`	C_CALL printf 
					`	call info 
					`	call exit 
					`	jmp err
					`
					`eq_s8: ;rdi,rsi
					`	push rdx
					`	mov rax,0x0000_ffff_ffff_ffff 
					`	and rax,QWORD [rdi]
					`	mov rdx,0x0000_ffff_ffff_ffff
					`	and rdx,QWORD [rsi]
					`	cmp rax,rdx
					`	jnz eq_s8_f 
					`eq_s8_lp:
					`	cmp rax,0
					`	jz eq_s8_t
					`	movzx rdx,BYTE [rdi+7+rax]
					`	cmp BYTE [rsi+7+rax],dl 
					`	jnz eq_s8_f 
					`	sub rax,1 
					`	jmp eq_s8_lp 
					`eq_s8_f:
					`	pop rdx 
					`	mov rax,0 
					`	stz
					`	ret 
					`eq_s8_t:
					`	pop rdx 
					`	mov rax,1 
					`	ret
					`
					`rpc_s8: ; rdi ⊢ rax
					`	push rdi 
					`	mov rsi,0x0000_ffff_ffff_ffff
					`	and rsi,QWORD [rdi]  
					`	push rsi
					`	mov rdi,rsi 
					`	call mlc_s8
					`	pop rcx 
					`	pop rsi 
					`	add rsi,8
					`	lea rdi,[rax+8]
					`	cld 
					`	rep movsb
					`	ret
					`     
					`esc_s8: ; rdi ⊢ rax 
					`	mov rsi,0x0000_ffff_ffff_ffff
					`	and rsi,QWORD [rdi] 
					`	mov rax,rsi 
					`	shl rax,1 
					`	sub rsp,rax 
					`esc_s8_lp0: 
					`
					`arr_of_lst: 
					`	mov rsi,0 
					`arr_of_lst_r:
					`	cmp BYTE [rdi+6],1
					`	jz arr_of_lst_end 
					`	push QWORD [rdi+8] 
					`	mov rdi,QWORD [rdi+16]
					`	add rsi,1 
					`	call arr_of_lst_r
					`	sub rsi,1 
					`	pop QWORD [rax+8+8*rsi]
					`	ret 
					`arr_of_lst_end: 
					`	push rsi 
					`	xor rax,rax
					`	mov rdi,8
					`	add rsi,1 
					`	C_CALL calloc
					`	pop rsi 
					`	mov QWORD [rax],rsi
					`	ret 
					`
					`scf_d: ; rdi=src ⊢ rax=flg rdi=dst rsi=n
					`	push rdi
					`	movzx rdi,BYTE [rdi]
					`	C_CALL isspace
					`	cmp rax,0
					`	jnz scf_d_err0 
					`	jmp scf_d_scf 
					`scf_d_err0: 
					`	add rsp,8
					`	mov rax,0
					`	ret
					`	scf_d_scf:
					`	mov rdi,QWORD [rsp]
					`	sub rsp,8
					`	mov rsi,rsp
					`	mov rdx,10
					`	mov rax,0
					`	C_CALL strtoul
					`	pop rsi
					`	pop rdi
					`	sub rsi,rdi
					`	jz scf_d_err1
					` mov rdi,rax
					`	mov rax,1 
					`	ret
					`scf_d_err1:
					`	mov rax,0 
					`	ret
					`
					`scf_x: ; rdi=src ⊢ rax=flg rdi=dst rsi=n
					`	push rdi
					`	movzx rdi,BYTE [rdi]
					`	C_CALL isspace
					`	cmp rax,0
					`	jnz scf_x_err0 
					`	jmp scf_x_scf 
					`scf_x_err0: 
					`	add rsp,8
					`	mov rax,0
					`	ret
					`	scf_x_scf:
					`	mov rdi,QWORD [rsp]
					`	sub rsp,8
					`	mov rsi,rsp
					`	mov rdx,16
					`	mov rax,0
					`	C_CALL strtoul
					`	pop rsi
					`	pop rdi
					`	sub rsi,rdi
					`	jz scf_x_err1
					` mov rdi,rax
					`	mov rax,1 
					`	ret
					`scf_x_err1:
					`	mov rax,0 
					`	ret
					`
					`mlc_s8: ; rdi=len  
					`	push rdi 
					`	and rdi,~111b
					`	lea rdi,[rdi+16] 
					`	mov rsi,1 
					`	xor rax,rax 
					`	C_CALL_SF calloc
					`	pop QWORD [rax] 
					`	ret
					`
					`s8_of_c_stg: 
					`	push rdi
  				`	xor rax,rax
					`	C_CALL strlen
  				`	push rax
  				`	mov rdi,rax
  				`	call mlc_s8
  				`	pop rcx
  				`	pop rsi
  				`	mov rdi,rax
  				`	add rdi,8
  				`	cld
  				`	rep movsb
  				`	ret
					`
					`free_s8: ;rdi=ptr
					`	C_CALL_SF free
					`	ret 
					`
					`in_fn: 
					`	mov rax,2
					`	mov rsi,2
  				`	syscall
  				`	push rax ; [rsp]=fd
  				`	mov rdi,rax
  				`	mov rax,5
  				`	mov rsi,stat
  				`	syscall
  				`	mov rdi,[stat + STAT.st_size]
  				`	call mlc_s8
  				`	mov rdi,QWORD [rsp]
					`	push rax ; [rsp]=buf
  				`	mov rsi,rax
					`	add rsi,8
  				`	mov rax,0
 				 	`	mov rdx,[stat+STAT.st_size]
  				`	syscall
  				`	mov rax,3
  				`	mov rdi,QWORD [rsp+8]
  				`	syscall
					`	mov rax,QWORD [rsp]	
					`	add rsp,16
					`	ret 
					`
					`out_fn: ; rdi=fn,rsi=src
					`	push rsi 
					`	mov rax,2
    			`	mov rsi,0x42
    			`	syscall
    			`	pop rsi 
					`	push rax
    			`	mov rdi,rax
					`	mov rdx,QWORD [rsi]
					`	mov rax,0x0000_ffff_ffff_ffff
					`	and rdx,rax
    			`	add rsi,8
    			`	mov rax,1
    			`	syscall
    			`	pop rdi
    			`	mov rax,3
    			`	syscall
    			`	ret
					`
					`emt_stg: ; rdi=stg 
					`	xor rax,rax 
					`	C_CALL_SF printf
					`	ret
					`
					`emt_r64: ;rdi=r64
					`	xor rax,rax 
					`	mov rsi,rdi
					`	mov rdi,fmt_r64
					`	C_CALL_SF printf
					`	ret
					`
					`emt_s8: ;rdi=s8
					`	xor rax,rax 
					`	lea rsi,[rdi+8]
					`	mov rdi,fmt_s8
					`	C_CALL_SF printf
					`	ret
					`
					`emt_add: ; rdi=len rsi=stg
					`	cld 
					`	push rcx 
					`	mov rcx,rdi 
					`	mov rax,QWORD [EMT_BUF_OFS]
					`	add rdi,rax
					`	cmp rdi,EMT_BUF_MAX 
					`	jge emt_add_buf 
					`	mov BYTE [EMT_BUF+rdi],0
					`	mov QWORD [EMT_BUF_OFS],rdi
					`	lea rdi,[EMT_BUF+rax]
					`	jmp emt_add_end 
					`emt_add_buf:
					`	push rsi 
					`	call emt_buf 
					`	pop rsi 
					`	cmp rcx,EMT_BUF_MAX
					`	jge emt_add_stg 
					`	mov BYTE [EMT_BUF+rcx],0
					`	mov QWORD [EMT_BUF_OFS],rcx 
					`	mov rdi,EMT_BUF
					`emt_add_end:
					`	rep movsb 
					`	pop rcx 
					`	ret 
					`emt_add_stg 
					`	mov QWORD [EMT_BUF],0
					`	mov QWORD [EMT_BUF_OFS],0
					`	mov rdi,rsi 
					`	call emt_stg 
					`	pop rcx 
					`	ret 
					`
					`emt_buf:
					`	xor rax,rax 
					`	mov rdi,EMT_BUF 
					`	C_CALL printf 
					`	mov QWORD [EMT_BUF_OFS],0
					`	mov BYTE [EMT_BUF],0
					`	ret 
					`	 
					`_start:
					`; set signal handler 
					`	mov rdi,SIG_SEGV 
					`	mov rsi,sig_hdl 
					`	C_CALL set_handler 
					`
					`SS_init:
					`	mov QWORD [SS_TOP],SS_VCT
					`	mov rdi,0 
					`	mov rax,SS_VCT 
					`SS_lp: 
					`	cmp rdi,SS_MAX 
					`	jz SS_end 
					`	add rdi,1 
					`	lea rsi,[rax+8*16] 
					`	mov QWORD [rax],rsi 
					`	mov rax,rsi 
					`	jmp SS_lp 
					`SS_end:
					`	mov rsi,SS_NULL 
					`	mov [rax],rsi
					`
					`SS_LN_init:
					##` mov QWORD [SS_LN_N],0
					`	mov SS_LN_N,0
					`	mov QWORD [SS_LN_TOP],SS_LN_VCT
					`	mov r15,SS_LN_VCT 
					`	mov rdi,0 
					`	mov rax,SS_LN_VCT 
					`SS_LN_lp: 
					`	cmp rdi,SS_LN_MAX 
					`	jz SS_LN_end 
					`	add rdi,1 
					`	lea rsi,[rax+8*2] 
					`	mov QWORD [rax],rsi 
					`	mov rax,rsi 
					`	jmp SS_LN_lp 
					`SS_LN_end:
					`	mov rsi,0xffff_ffff_ffff_0100 
					`	mov [rax],rsi
					`
					`SS_PT_init:
					`	mov QWORD [SS_PT_TOP],SS_PT_VCT
					`	mov rdi,0 
					`	mov rax,SS_PT_VCT 
					`SS_PT_lp: 
					`	cmp rdi,SS_MAX 
					`	jz SS_PT_end 
					`	add rdi,1 
					`	lea rsi,[rax+8*3] 
					`	mov QWORD [rax],rsi 
					`	mov rax,rsi 
					`	jmp SS_PT_lp 
					`SS_PT_end:
					`	mov rsi,0xffff_ffff_ffff_0200 
					`	mov [rax],rsi
					`
					`	mov rdi,0
					`	mov QWORD [EMT_BUF],0
					`	mov QWORD [EMT_BUF_OFS],0
					`
					`; _args 
					`	mov rdi,QWORD [rsp]
					` lea rdi,[rdi+1]
					`	mov rsi,8 
					`	xor rax,rax 
					`	C_CALL calloc
					`	pop r13
					`	mov QWORD [rax],r13
					`	xor r14,r14
					`	mov rbx,rax
					`args_lp:
					`	cmp r14,r13
					`	jz args_lp_end
					`	pop rdi
					`	call s8_of_c_stg 
					`	mov QWORD [rbx+8+8*r14],rax
					`	add r14,1 
					`	jmp args_lp 
					`args_lp_end:
					`	mov r13,rbx
					`	
					//
				rp8.add_s8 { ec sc1 } ⊢ ec
				» 0r _ ⊢ lb_n 
				_nil {} ⊢ il 
				\[
				» 1r _ ⊢ ssn0 
				##» 1r _ ⊢ rnx 
				» "SS_MAX" _ ⊢ rmx 
				» RCD_N _ ⊢ ssN 
				ss_init_rcd_lp { ssn0 rmx ssN ec } ⊢ { rmx ssN ec } 
	
				» "\tjmp RTM_0\n" _ ⊢ sc1 
				rp8.add_s8 { ec sc1 } ⊢ ec 
				
				» "_byt" _ ⊢ wg0 
				t_axm.r64 {} ⊢ tg0 
				» e_axm.byt _ ⊢ ak0 
				k_op_axm ak0 ⊢ k
				add_grm { { wg0 tg0 k } i il { hpv hpv_n } { mmv mev mtv mv_n rv rv_n ev ev_n tv tv_n } irv tav evv tx_n ns_m ns_e ns_t gel { dd ep ec rtm_n lb_n } } ⊢ { i il { hpv hpv_n } { mmv mev mtv mv_n rv rv_n ev ev_n tv tv_n } irv tav evv tx_n ns_m ns_e ns_t gel { dd ep ec rtm_n lb_n } }

				» "_scf_d" _ ⊢ wg0 
				t_axm.r64 {} ⊢ tg0 
				» e_axm.scf_d _ ⊢ ak0 
				k_op_axm ak0 ⊢ k
				add_grm { { wg0 tg0 k } i il { hpv hpv_n } { mmv mev mtv mv_n rv rv_n ev ev_n tv tv_n } irv tav evv tx_n ns_m ns_e ns_t gel { dd ep ec rtm_n lb_n } } ⊢ { i il { hpv hpv_n } { mmv mev mtv mv_n rv rv_n ev ev_n tv tv_n } irv tav evv tx_n ns_m ns_e ns_t gel { dd ep ec rtm_n lb_n } }

				» "_scf_x" _ ⊢ wg0 
				t_axm.r64 {} ⊢ tg0 
				» e_axm.scf_x _ ⊢ ak0 
				k_op_axm ak0 ⊢ k
				add_grm { { wg0 tg0 k } i il { hpv hpv_n } { mmv mev mtv mv_n rv rv_n ev ev_n tv tv_n } irv tav evv tx_n ns_m ns_e ns_t gel { dd ep ec rtm_n lb_n } } ⊢ { i il { hpv hpv_n } { mmv mev mtv mv_n rv rv_n ev ev_n tv tv_n } irv tav evv tx_n ns_m ns_e ns_t gel { dd ep ec rtm_n lb_n } }


				» "_args" _ ⊢ nx0 
				ast.dst_reg nx0 ⊢ dx0 
				_nil {} ⊢ rs_n 
				_cns { dx0 rs_n } ⊢ rs_n 

				t_axm.s8 {} ⊢ y0 
				t_axm.arr y0 ⊢ y0 
				_nil {} ⊢ rs_t 
				_cns { y0 rs_t } ⊢ rs_t 
				\]
				_nil {} ⊢ gfl
				_nil {} ⊢ ns_r 
				» 0r _ ⊢ rsp 
				_nil {} ⊢ rl
				\[
				» 0r _ ⊢ lvx 
				_inc lvx ⊢ lvx 
				crt_dst_lst { lvx rv tv tv_n rv_n ns_r rs_n } ⊢ { lvx rv tv tv_n rv_n ns_r rs_n rs_t0 }
				unify.f_lst { tv rs_t0 rs_t } ⊢ tv 
				_dec lvx ⊢ lvx 
						
				_nil {} ⊢ rs_i 
				stt_v.opq {} ⊢ q0 
				stt_v.ref q0 ⊢ h0 
				stt_v.arr h0 ⊢ h0 
				stt_v.ref h0 ⊢ h0
				» 0r _ ⊢ rx0 
				stt_v.hp { rx0 h0 } ⊢ ax0 
				RP.atm ax0 ⊢ px0 
				_cns { px0 rs_i } ⊢ rs_i 
				_nil {} ⊢ dl
				emt.idx.crt_lst { irv rs_n rs_i rl dl } ⊢ { irv rl dl } 
				\]
				iso { mmv mev mtv mv_n } ⊢ MV 
				iso { eds dd ep ec rtm_n lb_n } ⊢ EC 
				iso { ns_m ns_e ns_t } ⊢ NS
				slv_file_lp { {} i il MV {} tx_n NS gel gfl EC } ⊢| 
		\[
		§ emt_rtm a0 
			slv_file a0 ⊢ { { rsp rl ns_r } i il { hpv hpv_n } { mmv mev mtv mv_n rv rv_n ev ev_n tv tv_n } irv tav evv tx_n ns_m ns_e ns_t gfl { eds dd ep0 ec0 rtm_n lb_n } }		
			» RCD_N _ ⊢ ssN 
			^ ssN ⊢ ssN,eh 
				`bits 64 
				`; macros 
				`%macro C_PUSH_REGS 0 
				`	push rdx
				`	push rcx
				`	push r8
				`	push r9
				`	push r10
				`	push r11
				`%endmacro
				`
				`%macro C_POP_REGS 0 
				`	pop r11 
				`	pop r10 
				`	pop r9 
				`	pop r8 
				`	pop rcx 
				`	pop rdx 
				`%endmacro
				`
				`%macro C_CALL_SF 1 
				`	push rdx
				`	push rcx
				`	push r8
				`	push r9
				`	push r10
				`	push r11
				`	mov QWORD [rsp_tmp],rsp 
				`	and rsp,~0xf 
				`	call %1 
				`	mov rsp,QWORD [rsp_tmp]
				`	pop r11 
				`	pop r10 
				`	pop r9 
				`	pop r8 
				`	pop rcx 
				`	pop rdx 
				`%endmacro 
				`
				`%macro C_CALL 1 
				`	mov QWORD [rsp_tmp],rsp 
				`	and rsp,~0xf 
				`	call %1 
				`	mov rsp,QWORD [rsp_tmp]
				`%endmacro 
				`
				`%macro JZ_SPC 2
				`	movzx MCR_REG,%1
				`	cmp MCR_REG,9 
				`	jz %2
				`	cmp MCR_REG,10 
				`	jz %2
				`	cmp MCR_REG,32 
				`	jz %2
				`%endmacro
				` 
				`%macro JZ_LINE_SPC 2
				`	movzx MCR_REG,%1 
				`	cmp MCR_REG,9 
				`	jz %2
				`	cmp MCR_REG,32 
				`	jz %2
				`%endmacro
				` 
				`%macro PUSH_GRM 0 
				`	sub rsp,32
				`	mov QWORD [rsp+24],r13
				`	mov QWORD [rsp+16],r14 
				`	mov QWORD [rsp+8],r9
				`%endmacro
				`
				`%macro POP_GRM_SCC 0
				`	mov r9,QWORD [rsp+8]
				`	mov r14,QWORD [rsp]
				`	mov r13,QWORD [rsp+24]
				`	add rsp,32 
				`%endmacro 
				`
				`%macro POP_GRM_FAIL 0
				`	mov r9,QWORD [rsp+8]
				`	mov r14,QWORD [rsp+16]
				`	mov r13,QWORD [rsp+24]
				`	add rsp,32 
				`%endmacro 
				`
				`%macro RB_GRM 0
				`	mov r9,QWORD [rsp+8]
				`	mov r14,QWORD [rsp+16]
				`	mov r13,QWORD [rsp+24]
				`%endmacro 
				`
				`%macro ALC_RCD 2 ; n,reg-name!=rbx 
				`	add QWORD [SS_RCD_C+8*%1],1
				`	add QWORD [SS_RCD_N+8*%1],1 
				`	mov %2,[SS_RCD_%1_TOP]
				`	mov MCR_REG,[%2]
				`	mov QWORD [SS_RCD_%1_TOP],MCR_REG
				`%endmacro 
				`
				`%macro FREE_RCD 2 ; n,reg-name!=rbx 
				`	sub QWORD [SS_RCD_N+8*%1],1
				`	mov rbx,QWORD [SS_RCD_%1_TOP] 
				`	mov QWORD [%2],rbx
				`	mov QWORD [SS_RCD_%1_TOP],%2
				`%endmacro
				`				
				`%macro FREE_LN 1 
				##`	sub QWORD [SS_LN_N],1
				`	sub SS_LN_N,1 
				`	mov QWORD [%1],SS_LN_REG
				`	mov SS_LN_REG,%1
				`%endmacro
				`
				`%macro ALC_LN 1 
				##`	add QWORD [SS_LN_N],1 
				`	add QWORD [SS_LN_C],1 
				`	add SS_LN_N,1 
				`	mov %1,SS_LN_REG 
				`	mov SS_LN_REG,QWORD [SS_LN_REG]
				`%endmacro
				`
				`%macro GET_LEN 2 
				`	mov %1,0x0000_ffff_ffff_ffff
				`	and %1,QWORD [%2]
				`%endmacro
				`
				`%macro MOV_RAX 2 
				`	mov rax,%2 
				`	mov %1,rax
				`	%endmacro
				`
				`%macro MOV_RDI 2 
				`	mov rdi,%2 
				`	mov %1,rdi
				`%endmacro
				`
				`%macro MOV_RBX 2 
				`	mov rbx,%2
				`	mov %1,rbx
				`%endmacro
				`
				`%macro BSS_SS_RCD 2 
				`	SS_RCD_%1_TOP: resq 1 
				`	SS_RCD_%1_VCT: resq (%1+1)*(%2+4)
				`	SS_RCD_%1_BTM: resq 1
				`%endmacro 
				`
				##`%macro BSS_INIT_SS_RCD 2 

				`%define KB 1024
				`%define MB KB*KB 
				`%define GB MB*MB
				`%define SIG_INT 2
				`%define SIG_SEGV 11
				`%define SS_MAX 4000
				`%define SS_LN_MAX 1<<16
				"%define RCD_N " 0d' "\n"
				`%define SS_NULL 0xffff_ffff_ffff_0000
				`%define EMT_BUF_MAX (KB<<1)
				`%define SS_LN_REG r15
				`%define MCR_REG rbx
				`%define SS_LN_N rbp
				`extern exit 
				`extern printf 
				`extern sprintf
				`extern malloc 
				`extern calloc
				`extern free 
				`extern isspace 
				`extern strtoul
				`extern strlen
				`extern getchar
				`extern set_handler
				`section .bss
				`	tmp: resq 64
				`	ret_vct: resq 64
				` rsp_tmp: resq 1
				`
				`; emt buffer 
				`	EMT_BUF_OFS: resq 1 
				` EMT_BUF: resb EMT_BUF_MAX 
				`	EMT_BUF_END: resb 1
				` 
				`; garbage vector 
				`	GBG_VCT: resq 252
				`
				`; SS segments 
				`	SS_TOP: resq 1
				`	SS_VCT: resq 16*SS_MAX
				`	SS_BTM: resq 1 
				`
				`	SS_LN_TOP: resq 1
				`	SS_LN_VCT: resq 2*SS_LN_MAX
				`	SS_LN_BTM: resq 1  
				##`	SS_LN_N: resq 1 
				`
				`	SS_PT_TOP: resq 1
				`	SS_PT_VCT: resq 3*SS_MAX
				`	SS_PT_BTM: resq 1 
				`
				`	SS_RCD_N: resq (RCD_N+1) 
				`	SS_RCD_C: resq (RCD_N+1)
				`
				`stat: resb 144
  			`struc STAT
  			`	.st_dev         resq 1
    		`	.st_ino         resq 1
    		`	.st_mode        resd 1
    		`	.st_nlink       resd 1
  			`	.st_uid         resd 1
  			`	.st_gid         resd 1
    		`	.st_rdev        resq 1
    		`	.pad1           resq 1
    		`	.st_size        resq 1
  			`	.st_blksize     resd 1
  			`	.pad2 resd 1
    		`	.st_blocks      resq 1
    		`	.st_atime       resq 1
    		`	.st_atime_nsec  resq 1
  			`	.st_mtime       resq 1
  			`	.st_mtime_nsec  resq 1
    		`	.st_ctime       resq 1
    		`	.st_ctime_nsec  resq 1
    		`	.__unused4  resd 1
  			`	.__unused5  resd 1
				`endstruc
				`
				//
			rp8.of_s8 eh ⊢ eh 
			
			» 1r _ ⊢ rnx 
			» "SS_MAX" _ ⊢ rmx 
			ss_rcd_n_lp { rnx ssN rmx eh } ⊢ { ssN rmx eh }
			
			rp8.cct { eh eds } ⊢ eds 
			rp8.cct { eds ec0 } ⊢ ec0
			» _^ rtm_n ⊢ rtm_n,ec1 
				"RTM_" 0d' ":\n" 	
				`	mov rdi,0
				`	mov QWORD rdi,rsp
  			`	and rsp,~0xf
				`	push rdi
  			`	call exit
				`	pop rdi
  			`	mov rsp,rdi
				`
				`err: 
				`	mov rdi,fmt_err_line
				`	mov rsi,QWORD [err_n]
				`	xor rax,rax
				`	C_CALL printf
  			`	mov rax,1
  			`	mov rbx,0
  			`	int 0x80
				//
			rp8.add_s8 { ec0 ec1 } ⊢ ec0 
			∎ { i il { hpv hpv_n } { mmv mev mtv mv_n rv rv_n ev ev_n tv tv_n } irv tav evv tx_n ns_m ns_e ns_t { dd ep0 ec0 rtm_n lb_n } }				
			\]
	∎∎
§ E fn0
	^ _ ⊢ sf0
		`§§ M0
		`	∎∎ 
		`§§ M1 = M0
		// 
	##_s8_len sf0 ⊢ { sf0 lsf0 } 
	##_emt lsf0 ⊢ _ 
	\\_emt sf0 ⊢ sf0 
	##_in_fn %[ "cst24.mdls" ] ⊢ { _ sf1 }
	\\_info {} ⊢ {} 
	_in_fn fn0 ⊢ { _ sf1 } 
	_emt sf1 ⊢ sf1 
	OpADL.syntax.file.prs { sf1 %[ 0r ] } ⊢ { _ r0 a0 } 
	_emt r0 ⊢ _ 
	_emt a0 ⊢ a0  
	$ a0 ⊢ 
	∐ _some◂a0 . 
		$ a0 ⊢ 
		∐ OpADL.syntax.prs_vld◂a0 . 
			_emt %[ "D1" ] ⊢ _ 
			##OpADL.ast.pnt { %[ 0r ] a0 } ⊢ { d0 sa0 }  
			_emt a0 ⊢ a0
			OpADL.slv_file a0 ⊢ M 
			##_s8_len sa0 ⊢ { sa0 ls0 } 
			\\_emt ls0 ⊢ _ 
			\\_emt d0 ⊢ _ 
			##_emt sa0 ⊢ _ 
			∎ {} 
		∐. OpADL.syntax.prs_err◂e0 .
			∎|
	∐. _none◂{} . 
		∎| 
§ E1 {} 
	^ _ ⊢ sf0
		"xy0"
		// 
	OpADL.syntax.dst_ptn.prs { sf0 %[ 0r ] } ⊢ { sf0 r0 a0 } 
	_emt r0 ⊢ _ 
	_emt a0 ⊢ a0  
	$ a0 ⊢ 
	∐ _some◂a0 . 
		_emt %[ "D0" ] ⊢ _ 
		OpADL.ast.pnt_dst_ptn a0 ⊢ sa0  
		_emt sa0 ⊢ _ 
		∎ {} 
	∐. _none◂{} . 
		∎| 
§ f0 c
	∐ 97r=<c'; c'=<122r . 
		_some c ⊢ a
		∎ a
	∐. .
		_none {} ⊢ a
		∎ a
§% 
	^ _ ⊢ sf0
		`§§ M0
		`	∎∎ 
		`§§ M1 = M0
		// 
	##_s8_len sf0 ⊢ { sf0 lsf0 } 
	##_emt lsf0 ⊢ _ 
	\\_emt sf0 ⊢ sf0 
	##_in_fn %[ "cst28.mdls" ] ⊢ { _ sf1 }
	##_in_fn fn0 ⊢ { _ sf1 } 
	##_emt sf1 ⊢ sf1 
	\\OpADL.syntax.file.prs { sf0 %[ 0r ] } ⊢ { _ _ a0 }
	\\_emt a0 ⊢ a0  
	∎
§% 
	\\_nil {} ⊢ a0 
	\\OpADL.slv_file a0 ⊢ _
	##OpADL.ast.dst_reg %[ "xy0" ] ⊢ r 
	##OpADL.RP.atm r ⊢ p 
	##OpADL.ast.pnt_dst_ptn p ⊢ sa0  
	##_emt sa0 ⊢ _ 
	##$ %[ "xyz0" ] ⊢ sx0 
	##prm_word.prs { sx0 %[ 0r ] } ⊢ { sx0 r0 a0 }
	##OpADL.syntax.src.prs { sx0 %[ 0r ] } ⊢ { sx0 r0 a0 } 
	##_emt { sx0 r0 a0 } ⊢ _ 
	^ _ ⊢ sx0
		`	∎ x 
		// 
	##_emt sx0 ⊢ sx0 
	\\OpADL.syntax.lc_code.prs { sx0 %[ 0r ] } ⊢ { sx0 r0 a0 } 
	\\_emt { sx0 r0 a0 } ⊢ _ 
	##_in_fn %[ "cst24.mdls" ] ⊢ { _ sf0 }
	##E1 {} ⊢ _ 
	_emt _args ⊢ args
	_lod_q { args %[ 1r ] } ⊢ { _ _ fn0 } 
	E fn0 ⊢ _ 
	∎ 
