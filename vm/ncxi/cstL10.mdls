##§ @.slv_type { env0 mtv tv_n tv t_ns al t l2 } 
	\[
  § ff { tv_n } 
  	» 0r _ ⊢ xx 
		_add { xx tv_n } ⊢ { xx tv_n } 
		∎| 
	\]
  \[
  @.slv_type_lst { env0 mtv tv_n tv t_ns al l l2 }
		$ l ⊢ 
		∐ _cns◂{ t l } . 
			slv_type { env0 mtv tv_n tv t_ns al t l2 } ⊢ { env0 mtv tv_n tv t_ns al k l2 } 
			slv_type_lst { env0 mtv tv_n tv t_ns al l l2 } ⊢ { env0 mtv tv_n tv t_ns al l l2 } 
			_cns { k l } ⊢ l 
			∎ { env0 mtv tv_n tv t_ns al l l2 }
		∐. _nil◂{} . 
				_nil {} ⊢ l 
				∎ { env0 mtv tv_n tv t_ns al l l2 } 
	\]
  \[
  
		@.slv_type_app { env0 mtv tv_n tv t_ns al k0 k1 l2 } 
				∐ k0 ⊢ abs◂{ a k0 } . 
					var_ln k1 ⊢ v1 
					exc_q { tv a v1 } ⊢ { tv a v1 } 
					∎ { env0 mtv tv_n tv t_ns al k0 l2 } 
				∐ k0 ⊢ var◂i . 
					_lod_q { tv i } ⊢ { tv i v } 
					∐ v ⊢ var_ln◂k2 . 
						slv_type_app { env0 mtv tv_n tv t_ns al k2 k1 l2 } ⊢|
					∐. . 
						pnt_type_k { tv k1 } ⊢ { tv s0 } 
						» "slv_type_app 1" _ ⊢ se 
						_emt se ⊢ se 
						_emt s0 ⊢ s0 
						∎|
				∐. . 
					pnt_type_k { tv k0 } ⊢ { tv s0 } 
					» "slv_type_app 0" _ ⊢ se 
					_emt se ⊢ se 
					_emt s0 ⊢ s0 
					∎| 
			@.slv_args_ln { env0 mtv tv_n tv t_ns as al t l2 } 
				$ as ⊢ 
				∐ _cns◂{ a as } . 
					assoc { al a } ⊢ { al a o } 
					$ o ⊢ 
					∐ _none◂{} . 
						newvar_i { tv_n tv } ⊢ { tv_n tv i } 
						$ i ⊢ i,i0 
						_some i ⊢ o 
						_cns { { a o } al } ⊢ al 
						slv_args_ln { env0 mtv tv_n tv t_ns as al t l2 } ⊢ { env0 mtv tv_n tv t_ns al k l2 } 
						abs { i0 k } ⊢ k 
						∎ { env0 mtv tv_n tv t_ns al k l2 }
					∐. _some◂y . 
						» "slv_args 0" _ ⊢ se 
						_emt se ⊢ se 
						∎| 
				∐. _nil◂{} .  
					slv_type { env0 mtv tv_n tv t_ns al t l2 } ⊢|
					##∎|

          \]§ assoc { v a } 
  ∎| 
§§ ast 
	¶ @.name
		∐ mdl_n : { _s8 name }
		∐ fst_n : _s8
    ¶ @.type
		∐ type_rcd : _lst◂type
		∐ imp : { type type }
		∐ app : { type type }
		∐ type_name : name
		∐ type_var : _s8
  ∎∎ 
¶ @.type_k
				∐ rcd : _lst◂type_k
				∐ dta : { _r64 _lst◂type_k }
				∐ imp : { type_k type_k }
				∐ abs : { _r64 type_k }
				∐ var : _r64
		@.var
				∐ var_l : _r64
				∐ var_q : _r64 
				∐ var_ln : type_k
§ slv_ns_e { n mmv mtv tv m_ns t_ns m_l }
  ∎| 
§ newvar_i { tv_n tv }
  ∎|  
§ inst { tv_n tv lv y } 
  ∎| 
§ gen { tv_n tv lv y } 
  ∎| 
§ exc_q { v a x } 
	∎|
§ @.slv_type { env0 mtv tv_n tv t_ns al t l2 } 
			» 0r _ ⊢ xx 
			_add { xx tv_n } ⊢ { xx tv_n } 
			$ t ⊢ 
			∐ ast.type_rcd◂l . 
				slv_type_lst { env0 mtv tv_n tv t_ns al l l2 } ⊢ { env0 mtv tv_n tv t_ns al l l2 } 
				rcd l ⊢ k 
				∎ { env0 mtv tv_n tv t_ns al k l2 }
			∐ ast.imp◂{ t0 t1 } . 
				slv_type { env0 mtv tv_n tv t_ns al t0 l2 } ⊢ { env0 mtv tv_n tv t_ns al k0 l2 }
				slv_type { env0 mtv tv_n tv t_ns al t1 l2 } ⊢ { env0 mtv tv_n tv t_ns al k1 l2 } 
				imp { k0 k1 } ⊢ k 
				∎ { env0 mtv tv_n tv t_ns al k l2 } 
			∐ ast.app◂{ t0 t1 } .
				slv_type { env0 mtv tv_n tv t_ns al t0 l2 } ⊢ { env0 mtv tv_n tv t_ns al k0 l2 }
				slv_type { env0 mtv tv_n tv t_ns al t1 l2 } ⊢ { env0 mtv tv_n tv t_ns al k1 l2 } 
				slv_type_app { env0 mtv tv_n tv t_ns al k0 k1 l2 } ⊢| 	
			∐ ast.type_name◂n . 
				$ env0 ⊢ { mmv mev ev m_ns e_ns m_l } 
				slv_ns_e { n mmv mtv tv m_ns t_ns m_l } ⊢ { mmv mtv tv m_ns t_ns m_l iv }
				$ { mmv mev ev m_ns e_ns m_l } ⊢ env0 	
				assoc { l2 iv } ⊢ { l2 iv o } 
				∐ o ⊢ _some◂o; o ⊢ _some◂{ w as y } .
					_none {} ⊢ o 
					_some o ⊢ o 
					$ iv ⊢ iv,i0_0 
					_cns { { i0_0 o } l2 } ⊢ l2 
					_nil {} ⊢ al0 
					slv_args_ln { env0 mtv tv_n tv t_ns as al0 y l2 } ⊢ { env0 mtv tv_n tv t_ns al0 k l2 } 
					_none {} ⊢ o 
					$ iv ⊢ iv,i0_0 
					_cns { { i0_0 o } l2 } ⊢ l2 
					var_ln k ⊢ v 
					_set_q { tv iv v } ⊢ { tv iv }
					var iv ⊢ k 
					∎ { env0 mtv tv_n tv t_ns al k l2 } 
				∐ o ⊢ _some◂o; o ⊢ _none◂{} . 
					» "slv_type 0" _ ⊢ se 
					_emt se ⊢ se 
					∎| 
				∐. . 
					var iv ⊢ k 
					» 1r _ ⊢ lv 
					inst { tv_n tv lv k } ⊢ { tv_n tv lv k }
					_dec lv ⊢ lv  
					gen { tv_n tv lv k } ⊢ { tv_n tv lv k } 
					∎ { env0 mtv tv_n tv t_ns al k l2 }
			∐. ast.type_var◂s . 
				assoc { al s } ⊢ { al s o } 
				$ o ⊢ 
				∐ _some◂i . 
					var i ⊢ k 
					∎ { env0 mtv tv_n tv t_ns al k l2 }
				∐. _none◂{} . 
					» "slv_type 1" _ ⊢ se 
					_emt se ⊢ se 
					∎| 
			@.slv_type_lst { env0 mtv tv_n tv t_ns al l l2 }
				$ l ⊢ 
				∐ _cns◂{ t l } . 
					slv_type { env0 mtv tv_n tv t_ns al t l2 } ⊢ { env0 mtv tv_n tv t_ns al k l2 } 
					slv_type_lst { env0 mtv tv_n tv t_ns al l l2 } ⊢ { env0 mtv tv_n tv t_ns al l l2 } 
					_cns { k l } ⊢ l 
					∎ { env0 mtv tv_n tv t_ns al l l2 }
				∐. _nil◂{} . 
					_nil {} ⊢ l 
					∎ { env0 mtv tv_n tv t_ns al l l2 } 
			@.slv_type_app { env0 mtv tv_n tv t_ns al k0 k1 l2 } 
				∐ k0 ⊢ abs◂{ a k0 } . 
					var_ln k1 ⊢ v1 
					exc_q { tv a v1 } ⊢ { tv a v1 } 
					∎ { env0 mtv tv_n tv t_ns al k0 l2 } 
				∐ k0 ⊢ var◂i . 
					_lod_q { tv i } ⊢ { tv i v } 
					∐ v ⊢ var_ln◂k2 . 
						slv_type_app { env0 mtv tv_n tv t_ns al k2 k1 l2 } ⊢|
					∐. . 
						##pnt_type_k { tv k1 } ⊢ { tv s0 } 
						» "slv_type_app 1" _ ⊢ se 
						_emt se ⊢ se 
						##_emt s0 ⊢ s0 
						∎|
				∐. . 
					##pnt_type_k { tv k0 } ⊢ { tv s0 } 
					» "slv_type_app 0" _ ⊢ se 
					_emt se ⊢ se 
					##_emt s0 ⊢ s0 
					∎| 
      @.slv_args_ln { env0 mtv tv_n tv t_ns as al t l2 } 
				∎| 
        § F « 
  » _^ _ ⊢ s 
    `TEST
    ` JJJ FFF h h 
    `OJF OIEJ OJ
    //
  » "rm -f FF.txt\n" _ ⊢ xx0
  » "touch FF.txt\n" _ ⊢ xx1 
  _cd xx0 ⊢ xx0 
  _cd xx1 ⊢ xx1 
  » "FF.txt" _ ⊢ f 
  _emt_s8_to { f s } ⊢ { f s }
  » "ls -a\n" _ ⊢ l0 
  _cd l0 ⊢ l0 
  ∎ {} 