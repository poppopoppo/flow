§§ Inc
[;
§ test0 {}
  $ {{} {}} ⊢ r0,r1,r2
  $ r0 ⊢ { r3 r4 }
  ∎ { r3 r1 }
§ test2 {} 
  » 0xrFFFF |~ {} ⊢ x0
  » 0xrffffccccAFAB0000 |~ {} ⊢ y
  » 0r10 |~ {} ⊢ x1
  » 0r24 |~ {} ⊢ x2
  mul { x2 x1 } ⊢ x3
  ∎ { x0 x3 }
§ test3 {}
  » 0x2r1 |~ {} ⊢ b0
  » 0xrff |~ {} ⊢ x0
  » 0xrff |~ {} ⊢ x1
  cmp { x0 x1 } ⊢ { b1 c }
  ∠ b1
    ∐ b1
    ∎ b1
    ∐ b2
    ∎ b2
  ∇
§ @.f0 x
  $ x ⊢ x0,x1
  » 0r0 |~ {} ⊢ y
  cmp { x0 y } ⊢ { b c }
  ∠ b
    ∐ b0
    » 0r1 |~ {} ⊢ t0
    sub { x1 t0 } ⊢ x1
    f0 x1 ⊢ y1
    ∎ y1
    ∐ b1
    » 0r0 |~ {} ⊢ y
    ∎ y
  ∇ ;]
§ @.fact x
  $ x ⊢ x0,x1
  » 0r0 |~ {} ⊢ y
  cmp { x0 y } ⊢ { b _ }
  ∠ b
    ∐ _
    » 0r1 |~ {} ⊢ t0
    $ x1 ⊢ x1,x2
    sub { x1 t0 } ⊢ x1
    fact x1 ⊢ y1
    mul { x2 y1 } ⊢ y1
    ∎ y1
    ∐ _
    » 0r1 |~ {} ⊢ y
    ∎ y
  ∇
§ @.tak { x y z }
  $ x ⊢ x,x0
  $ y ⊢ y,y0
  cmp { x0 y0 } ⊢ { _ c }
  ∠ c
    ∐ _
    ∎ z
    ∐ _
    $ x ⊢ x,x0
    » 0r1 |~ {} ⊢ t
    sub { x0 t } ⊢ xt
    $ z ⊢ z,z0
    $ y ⊢ y,y0
    tak { xt y0 z0 } ⊢ r0

    $ y ⊢ y,y0
    » 0r1 |~ {} ⊢ t
    sub { y0 t } ⊢ yt
    $ z ⊢ z,z0
    $ x ⊢ x,x0
    tak { yt z0 x0 } ⊢ r1

    » 0r1 |~ {} ⊢ t
    sub { z t } ⊢ zt
    tak { zt x y } ⊢ r2

    tak { r0 r1 r2 } ⊢ rr
    ∎ rr
  ∇
§ @.tak_i { x y z }
  $ x ⊢ x,x0
  $ y ⊢ y,y0
  cmp { x0 y0 } ⊢ { _ c }
  ∠ c
    ∐ _
    ∎ z
    ∐ _
    $ x ⊢ x,x0
    » 0r1 |~ {} ⊢ t
    sub { x0 t } ⊢ xt
    $ z ⊢ z,z0
    $ y ⊢ y,y0
    tak_i { xt y0 z0 } ⊢ r0

    $ y ⊢ y,y0  
    » 0r1 |~ {} ⊢ t
    sub { y0 t } ⊢ yt
    $ z ⊢ z,z0
    $ x ⊢ x,x0
    tak_i { yt z0 x0 } ⊢ r1

    » 0r1 |~ {} ⊢ t
    sub { z t } ⊢ zt
    tak_i { zt x y } ⊢ r2

    tak_i { r0 r1 r2 } ⊢|
  ∇
§ @.fib x
  $ x ⊢ x,x0
  » 0r0 |~ {} ⊢ y
  cmp { x0 y } ⊢ { b _ }
  ∠ b
    ∐ _
    $ x ⊢ x,x0
    » 0r1 |~ {} ⊢ y
    cmp { x0 y } ⊢ { b _ }
    ∠ b
      ∐ _
      $ x ⊢ x,x0
      » 0r1 |~ {} ⊢ t0
      » 0r2 |~ {} ⊢ t1
      sub { x t0 } ⊢ xt0
      sub { x0 t1 } ⊢ xt1
      fib xt0 ⊢ y0
      fib xt1 ⊢ y1
      add { y0 y1 } ⊢ y
      ∎ y
      ∐ _
      » 0r1 |~ {} ⊢ y
      ∎ y
    ∇
    ∐ _
    » 0r0 |~ {} ⊢ y
    ∎ y
  ∇
§ test6 {}
  » 0r5 |~ {} ⊢ x
  fib x ⊢ y0
  » 0r6 |~ {} ⊢ x
  fib x ⊢ y1
  ∎ { y0 y1 }
§ test4 {}
  » 0r5 |~ _ ⊢ x
  fact x ⊢ y
  ∎ y
§ test7 {}
  » 0r18 |~ {} ⊢ x
  » 0r12 |~ {} ⊢ y
  » 0r6 |~ {} ⊢ z
  tak { x y z } ⊢ r
  ∎ r
§ test5 {}
  » 0r20 |~ _ ⊢ x
  » 0r10 |~ {} ⊢ y
  » 0r0 |~ {} ⊢ z
  tak { x y z } ⊢ r
  » 0r5 |~ {} ⊢ x
  fact x ⊢ y
  » 0r5 |~ {} ⊢ x
  fib x ⊢ y0
  » 0r6 |~ {} ⊢ x
  fib x ⊢ y1
  ∎ { r y y0 y1 }
§ test8 {}
  » 0r20 |~ {} ⊢ x
  » 0r10 |~ {} ⊢ y
  » 0r0 |~ {} ⊢ z
  tak_i { x y z } ⊢|
[;
§ test1 {}
  ∎ { {{} {} {{{}} {} }} {{} {}} }
;]
§§.
§§ F0 
§ f0	 
	|» x 
	∎ x 
§ f1 
	|» x 
	$ x ⊢ { y _ } 
	∎ y    

§ @.fact   
	|» x   
	$ x ⊢ x0,x1   
	∠ x0   
		∐ _  
		» 1 |~ _ ⊢ y 
		∎ y 
		∐ _ 
		» $*(fact◂($-1)) |~ x1 ⊢ y 
		∎ y 
		∇
§ @.fact_i   
  |» { x y }
  $ x ⊢ x0,x1
  ∠ x0
    ∐ _
    ∎ y
    ∐ _
    » { (0'-1) (0'*1') } |~ { x1 y } ⊢ { x y }
    fact_i  { x y } ⊢|
    ∇
§§.    §§ slv_n 
      § reg { w rv_n rv re tv_n tv }
			  $ rv_n ⊢ rv_n,n0
			  _some n0 ⊢ o
			  _cns { { w o } re } ⊢ re
			  _inc rv_n ⊢ rv_n 
			  ∎ { rv_n rv re tv_n tv }
      § cst { env0 tv_n tv c } 
		    ∐ c ⊢ ast.k_name◂cn . 
			    $ env0 ⊢ { mmv mev ev m_ns e_ns m_l } 
			    slv_ns_e { cn mmv mev ev m_ns e_ns m_l } ⊢ { mmv mev ev m_ns e_ns m_l i_e }
			    ast.k_name i_e ⊢ c  
			    $ { mmv mev ev m_ns e_ns m_l } ⊢ env0 	
			    ∎ { env0 tv_n tv c }
	    	∐ c ⊢ ast.k_r64◂x . 
		    	ast.k_r64 x ⊢ c 
		    	∎ { env0 tv_n tv c }
		    ∐ c ⊢ ast.k_s8◂s . 
		    	ast.k_s8 s ⊢ c
			    ∎ { env0 tv_n tv c } 
	    	∐. . 
		    	err  %[ "slv_cst 0" ] ⊢| 	
			§ 
				@.crt_mtc_ptn { env0 rv tv tv_n n re p }
					$ p ⊢ 
          ∐ RP.rcd◂l .
						crt_mtc_ptn_lst { env0 rv tv tv_n n re l } ⊢ { env0 rv tv tv_n n re l }
						RP.rcd l ⊢ p
						∎ { env0 rv tv tv_n n re p }
					∐. RP.atm◂a .
					 	$ a ⊢ 
						∐ ast.mtc_reg◂w .
							assoc { re w } ⊢ { re w o }
							nnt o ⊢ {} 
							$ n ⊢ n,n0
							ast.mtc_reg n0 ⊢ a
							reg { w n rv re tv_n tv } ⊢ { n rv re tv_n tv } 
							RP.atm a ⊢ p
							∎ { env0 rv tv tv_n n re p }
						∐ ast.mtc_wc◂o .
							nnt o ⊢ {} 
							$ n ⊢ n,n0
							_some n0 ⊢ o 
							ast.mtc_wc o ⊢ a
							_inc n ⊢ n 							
							RP.atm a ⊢ p
							∎ { env0 rv tv tv_n n re p }
						∐ ast.mtc_cst◂c . 
							cst { env0 tv_n tv c } ⊢ { env0 tv_n tv c } 
							ast.mtc_cst c ⊢ a 
							RP.atm a ⊢ p 
							∎ { env0 rv tv tv_n n re p }
						∐. ast.mtc_agl◂{ cn ap } . 
							crt_mtc_ptn { env0 rv tv tv_n n re ap } ⊢ { env0 rv tv tv_n n re ap } 
							$ env0 ⊢ { mmv mev ev m_ns e_ns m_l } 
							slv_ns_e { cn mmv mev ev m_ns e_ns m_l } ⊢ { mmv mev ev m_ns e_ns m_l i_e } 
							$ { mmv mev ev m_ns e_ns m_l } ⊢ env0 
							ast.mtc_agl { i_e ap } ⊢ a
							RP.atm a ⊢ p 
							∎ { env0 rv tv tv_n n re p }
				@.crt_mtc_ptn_lst { env0 rv tv tv_n n re l }
					∐ l ⊢ _cns◂{ hd l } .
						crt_mtc_ptn { env0 rv tv tv_n n re hd } ⊢ { env0 rv tv tv_n n re hd }
						crt_mtc_ptn_lst { env0 rv tv tv_n n re l } ⊢ { env0 rv tv tv_n n re l }
						_cns { hd l } ⊢ l
						∎ { env0 rv tv tv_n n re l }
					∐. .
						_nil {} ⊢ l0
						_nil {} ⊢ y 
						∎ { env0 rv tv tv_n n re l0 }
		§ 
			@.crt_dst_ptn { rv tv tv_n n re p }
				$ p ⊢ 
				∐ RP.rcd◂l .
					crt_dst_ptn_lst { rv tv tv_n n re l } ⊢ { rv tv tv_n n re l }
					RP.rcd l ⊢ p
					∎ { rv tv tv_n n re p }
				∐. RP.atm◂a .
					crt_dst { rv tv tv_n n re a } ⊢ { rv tv tv_n n re a } 
					RP.atm a ⊢ p
					∎ { rv tv tv_n n re p }
			@.crt_dst { rv tv tv_n n re a } 
				∐ a ⊢ ast.dst_reg◂w .
					assoc { re w } ⊢ { re w o }
					nnt o ⊢ {} 
					$ n ⊢ n,n0
					ast.dst_reg n0 ⊢ a
					reg { w n rv re tv_n tv } ⊢ { n rv re tv_n tv } 
					∎ { rv tv tv_n n re a }
				∐. a ⊢ ast.wc◂o .
					nnt o ⊢ {} 
					$ n ⊢ n,n0
					_some n0 ⊢ o 
					ast.wc o ⊢ a
					_inc n ⊢ n 							
					∎ { rv tv tv_n n re a }
			@.crt_dst_ptn_lst { rv tv tv_n n re l }
				$ l ⊢ 
				∐ _cns◂{ hd l } .
					crt_dst_ptn { rv tv tv_n n re hd } ⊢ { rv tv tv_n n re hd }
					crt_dst_ptn_lst { rv tv tv_n n re l } ⊢ { rv tv tv_n n re l }
					_cns { hd l } ⊢ l
					∎ { rv tv tv_n n re l }
				∐. _nil◂{} .
					_nil {} ⊢ l0
					∎ { rv tv tv_n n re l0 }
			@.crt_dst_lst { rv tv tv_n n re l }
				$ l ⊢ 
				∐ _cns◂{ hd l } .
					crt_dst { rv tv tv_n n re hd } ⊢ { rv tv tv_n n re hd }
					crt_dst_lst { rv tv tv_n n re l } ⊢ { rv tv tv_n n re l }
					_cns { hd l } ⊢ l
					∎ { rv tv tv_n n re l }
				∐. _nil◂{} .
					_nil {} ⊢ l0
					∎ { rv tv tv_n n re l0 }
		§ 
			@.csm_src_ptn { env0 rv tv tv_n re p }
				∐ p ⊢ RP.rcd◂l .
					csm_src_ptn_lst { env0 rv tv tv_n re l } ⊢ { env0 rv tv tv_n re l }
					RP.rcd l ⊢ p
					∎ { env0 rv tv tv_n re p }
				∐. p ⊢ RP.atm◂a .
					csm_src { env0 rv tv tv_n re a } ⊢ { env0 rv tv tv_n re a } 
					RP.atm a ⊢ p 
					∎ { env0 rv tv tv_n re p }
			@.csm_src { env0 rv tv tv_n re a }
				∐ a ⊢ ast.src_reg◂w .
					assoc { re w } ⊢ { re w o }
					smt o ⊢ i 
					ast.src_reg i ⊢ a
					_none {} ⊢ o
					_cns { { w o } re } ⊢ re
					∎ { env0 rv tv tv_n re a }
				∐. a ⊢ ast.im_reg◂c .
					cst { env0 tv_n tv c } ⊢ { env0 tv_n tv c }
					ast.im_reg c ⊢ a 
					∎ { env0 rv tv tv_n re a }
			@.csm_src_ptn_lst { env0 rv tv tv_n re l }
				∐ l ⊢ _cns◂{ hd l } .
					csm_src_ptn { env0 rv tv tv_n re hd } ⊢ { env0 rv tv tv_n re hd }
					csm_src_ptn_lst { env0 rv tv tv_n re l } ⊢ { env0 rv tv tv_n re l }
					_cns { hd l } ⊢ l
					∎ { env0 rv tv tv_n re l }
				∐. .
					_nil {} ⊢ l0
					∎ { env0 rv tv tv_n re l0 }
			@.csm_src_lst { env0 rv tv tv_n re l }
				∐ l ⊢ _cns◂{ hd l } .
					csm_src { env0 rv tv tv_n re hd } ⊢ { env0 rv tv tv_n re hd }
					csm_src_lst { env0 rv tv tv_n re l } ⊢ { env0 rv tv tv_n re l }
					_cns { hd l } ⊢ l
					∎ { env0 rv tv tv_n re l }
				∐. .
					_nil {} ⊢ l0
					∎ { env0 rv tv tv_n re l0 }
		§ @.test_var { env0 tv_n tv rv n re v } 
			$ v ⊢ 
			∐ ast.test_var◂w . 
				assoc { re w } ⊢ { re w o } 
				smt o ⊢ i 
				ast.test_var i ⊢ v 
  			∎ { env0 tv_n tv rv n re v }
			∐. ast.test_cst◂c . 
				cst { env0 tv_n tv c } ⊢ { env0 tv_n tv c }
				ast.test_cst c ⊢ v 
				∎ { env0 tv_n tv rv n re v }
		§ exp_s8 { env0 tv_n tv e } 
			$ e ⊢ 
			∐ ast.exp_s8_cst◂c . 
				cst { env0 tv_n tv c } ⊢ { env0 tv_n tv c } 
				ast.exp_s8_cst c ⊢ e 
				∎ { env0 tv_n tv e }
			∐ ast.exp_s8_idx◂{ p i } . 
				$ i ⊢ i,i0 
				$ p ⊢ 
				∐ ast.fmt_s◂{} . 
					ast.fmt_s {} ⊢ p 
					ast.exp_s8_idx { p i } ⊢ e 
					∎ { env0 tv_n tv e }
				∐ ast.fmt_d◂{} . 
					ast.fmt_d {} ⊢ p 
					ast.exp_s8_idx { p i } ⊢ e 				 
					∎ { env0 tv_n tv e }
				∐ ast.fmt_x◂{} .
					ast.fmt_x {} ⊢ p 
					ast.exp_s8_idx { p i } ⊢ e 
					∎ { env0 tv_n tv e } 
				∐. ast.fmt_p◂{} .
					err %[ "slv_exp_s8_fmt 0" ] ⊢| 
			∐. ast.exp_s8_for◂{ i c } . 
				cst { env0 tv_n tv c } ⊢ { env0 tv_n tv c } 
				ast.exp_s8_for { i c } ⊢ e
			  ∎ { env0 tv_n tv e } 
		§§ exp_s8 
			§ 
				@.f { env0 n rv re tv_n tv ss ds el } 
					» 0r _ ⊢ i
					f0 { env0 n rv re tv_n tv ss ds i } ⊢ { env0 n rv re tv_n tv ss ds a i ys }
					f1 { env0 tv_n tv el a } ⊢ { env0 tv_n tv el a }
				  ∎ { env0 n rv re tv_n tv ss ds el }
				@.f0 { env0 n rv re tv_n tv ss ds i } 
					∐ ss ⊢ _cns◂{ s ss }; ds ⊢ _cns◂{ d ds } . 
						csm_src { env0 rv tv tv_n re s } ⊢ { env0 rv tv tv_n re s }
						crt_dst { rv tv tv_n n re d } ⊢ { rv tv tv_n n re d }
					  _inc i ⊢ i 
						f0 { env0 n rv re tv_n tv ss ds i } ⊢ { env0 n rv re tv_n tv ss ds a i }
						_dec i ⊢ i 
						_cns { s ss } ⊢ ss 
						_cns { d ds } ⊢ ds 
						∎ { env0 n rv re tv_n tv ss ds a i } 
					∐ ss ⊢ _nil◂{}; ds ⊢ _cns◂{ d ds }; ds ⊢ _nil◂{} . 
						crt_dst { rv tv tv_n n re d } ⊢ { rv tv tv_n n re d }						
						_nil {} ⊢ ss 
						_nil {} ⊢ ds 
						_cns { d ds } ⊢ ds
						∎ { env0 n rv re tv_n tv ss ds a i }
					∐. . 
						» "slv_exp_s8.f0 0" _ ⊢ se 
						_emt se ⊢ se
						∎|  
			@.f1 { env0 tv_n tv el a } 
				$ el ⊢ 
				∐ _cns◂{ hd el } .
					exp_s8 { env0 tv_n tv hd } ⊢ { env0 tv_n tv e } 
					f1 { env0 tv_n tv el a } ⊢ { env0 tv_n tv el a }
					_cns { e el } ⊢ el 
					∎ { env0 tv_n tv el a }
				∐. _nil◂{} . 
					_nil {} ⊢ el 
					∎ { env0 tv_n tv el a }
			∎∎ 
		§ 
			@.r { env0 rv tv tv_n n re lc }
			$ lc ⊢
			∐ ast.jmp◂{ en x } . 
				$ env0 ⊢ { mmv mev ev m_ns e_ns m_l } 
				slv_ns_e { en mmv mev ev m_ns e_ns m_l } ⊢ { mmv mev ev m_ns e_ns m_l i_e } 
				$ { mmv mev ev m_ns e_ns m_l } ⊢ env0 
				csm_src_ptn { env0 rv tv tv_n re x } ⊢ { env0 rv tv tv_n re x y0 } 
				ast.jmp { i_e x } ⊢ lc 
				∎ { env0 rv tv tv_n n re lc yy0 } 
			∐ ast.seq◂{ ll lc } .
				$ ll ⊢
				∐ ast.op_name◂{ o s d } .
					$ env0 ⊢ { mmv mev ev m_ns e_ns m_l } 
					slv_ns_e { o mmv mev ev m_ns e_ns m_l } ⊢ { mmv mev ev m_ns e_ns m_l i_e } 
					$ { mmv mev ev m_ns e_ns m_l } ⊢ env0 
					csm_src_ptn { env0 rv tv tv_n re s } ⊢ { env0 rv tv tv_n re s y_s }
					crt_dst_ptn { rv tv tv_n n re d } ⊢ { rv tv tv_n n re d y_d }
					ast.op_name { i_e s d } ⊢ ll 
					r { env0 rv tv tv_n n re lc } ⊢ { env0 rv tv tv_n n re lc yr }
					ast.seq { ll lc } ⊢ lc
					∎ { env0 rv tv tv_n n re lc yr }
				∐. ast.op_exp_s8◂{ pl ss ds } .
					exp_s8.f { env0 n rv re tv_n tv ss ds pl } ⊢ { env0 n rv re tv_n tv ss ds pl }
					ast.op_exp_s8 { pl ss ds } ⊢ ll 
					r { env0 rv tv tv_n n re lc } ⊢ { env0 rv tv tv_n n re lc } 
					ast.seq { ll lc } ⊢ lc 
					∎ { env0 rv tv tv_n n re lc }
			∐ ast.mtc◂lm .
				lc_mtc { env0 rv tv tv_n n re lm } ⊢ { env0 rv tv tv_n n re lm }
				ast.mtc lm ⊢ lc 
				∎ { env0 rv tv tv_n n re lc } 
			∐ ast.op_id◂{ sp ll } . 
				$ ll ⊢ 
				∐ ast.id_mtc◂ilm . 
					csm_src_ptn { env0 rv tv tv_n re sp } ⊢ { env0 rv tv tv_n re sp y0 }  
					lc_id_mtc_mp { env0 rv tv tv_n n re ilm } ⊢ { env0 rv tv tv_n n ilm } 
					lc_id_mtc { env0 rv tv tv_n n ilm } ⊢ { env0 rv tv tv_n n ilm } 
					ast.id_mtc ilm ⊢ ll 
					ast.op_id { sp ll } ⊢ lc 
					_nil {} ⊢ re 
					∎ { env0 rv tv tv_n n re lc } 
				∐. ast.id_line◂{ dl lc } . 
					csm_src_ptn { env0 rv tv tv_n re sp } ⊢ { env0 rv tv tv_n re sp } 
					crt_dst_ptn_lst { rv tv tv_n n re dl } ⊢ { rv tv tv_n n re dl }
					r { env0 rv tv tv_n n re lc } ⊢ { env0 rv tv tv_n n re lc } 
					ast.id_line { dl lc } ⊢ ll
					ast.op_id { sp ll } ⊢ lc 
					∎ { env0 rv tv tv_n n re lc }
			∐ ast.ret◂s .
				$ s ⊢
				∐ _some◂s . 
					csm_src_ptn { env0 rv tv tv_n re s } ⊢ { env0 rv tv tv_n re s } 
					_some s ⊢ s 
					ast.ret s ⊢ lc 
					∎ { env0 rv tv tv_n n re lc } 			
				∐. _none◂{} . 
					_none {} ⊢ s 
					ast.ret s ⊢ lc 
				  ∎ { env0 rv tv tv_n n re lc } 						
			∐. ast.exn◂ne .
				ast.exn ne ⊢ lc 
				∎ { env0 rv tv tv_n n re lc }   			
		@.lc_mtc { env0 rv tv tv_n n re lm } 
			$ lm ⊢ 
			∐ p_cns◂{ { tl me } lm } .  
				$ re ⊢ re,re0 
				mtc_line { env0 rv tv tv_n n re tl } ⊢ { env0 rv tv tv_n n re tl } 
				mtc_etr { env0 rv tv tv_n n re me } ⊢ { env0 rv tv tv_n n re me yr1 } 
				lc_mtc { env0 rv tv tv_n n re0 lm } ⊢ { env0 rv tv tv_n n re0 lm } 
				p_cns { { tl me } lm } ⊢ lm 
				∎ { env0 rv tv tv_n n re lm }
			∐. p_end◂{ tl me } .
				mtc_line { env0 rv tv tv_n n re tl } ⊢ { env0 rv tv tv_n n re tl } 
				mtc_etr { env0 rv tv tv_n n re me } ⊢ { env0 rv tv tv_n n re me } 
				p_end { tl me } ⊢ lm 
				∎ { env0 rv tv tv_n n re lm }
		@.mtc_etr { env0 rv tv tv_n n re me } 
			$ me ⊢ 
			∐ ast.mtc_rmf◂lm0 .
				lc_mtc { env0 rv tv tv_n n re lm0 } ⊢ { env0 rv tv tv_n n re lm0 }  
				ast.mtc_rmf lm0 ⊢ me 
				∎ { env0 rv tv tv_n n re me yr } 
			∐ ast.mtc_id_rmf◂{ sp0 ilm0 } .  
				csm_src_ptn { env0 rv tv tv_n re sp0 } ⊢ { env0 rv tv tv_n re sp0 } 
				lc_id_mtc_mp { env0 rv tv tv_n n re ilm0 } ⊢ { env0 rv tv tv_n n ilm0 } 
				lc_id_mtc { env0 rv tv tv_n n ilm0 } ⊢ { env0 rv tv tv_n n ilm0 } 
				ast.mtc_id_rmf { sp0 ilm0 } ⊢ me  
				_nil {} ⊢ re
				∎ { env0 rv tv tv_n n re me }  
			∐. ast.mtc_code◂lc0 . 
				r { env0 rv tv tv_n n re lc0 } ⊢ { env0 rv tv tv_n n re lc0 } 
				ast.mtc_code lc0 ⊢ me 
				∎ { env0 rv tv tv_n n re me } 
		@.mtc_line { env0 rv tv tv_n n re tl } 
			$ tl ⊢ 
			∐ _cns◂{ t tl } . 
				$ t ⊢ 
				∐ ast.mtc_id◂{ sp mp } . 
					csm_src_ptn { env0 rv tv tv_n re sp } ⊢ { env0 rv tv tv_n re sp } 
					crt_mtc_ptn { env0 rv tv tv_n n re mp } ⊢ { env0 rv tv tv_n n re mp }
					ast.mtc_id { sp mp } ⊢ t 
					mtc_line { env0 rv tv tv_n n re tl } ⊢ { env0 rv tv tv_n n re tl } 
					_cns { t tl } ⊢ tl 
					∎ { env0 rv tv tv_n n re tl } 
				∐ ast.mtc_cmp_test◂{ v0 v1 } .  
					test_var { env0 tv_n tv rv n re v0 } ⊢ { env0 tv_n tv rv n re v0 } 
					test_var { env0 tv_n tv rv n re v1 } ⊢ { env0 tv_n tv rv n re v1 } 
					ast.mtc_cmp_test { v0 v1 } ⊢ t 
					mtc_line { env0 rv tv tv_n n re tl } ⊢ { env0 rv tv tv_n n re tl } 
					_cns { t tl } ⊢ tl 
					∎ { env0 rv tv tv_n n re tl } 
				∐. ast.mtc_test◂{ v0 v1 } .  
					_inc ⊢ 
					test_var { env0 tv_n tv rv n re v0 } ⊢ { env0 tv_n tv rv n re v0 } 
					test_var { env0 tv_n tv rv n re v1 } ⊢ { env0 tv_n tv rv n re v1 } 
					ast.mtc_test { v0 v1 } ⊢ t 
					mtc_line { env0 rv tv tv_n n re tl } ⊢ { env0 rv tv tv_n n re tl } 
					_cns { t tl } ⊢ tl 
					∎ { env0 rv tv tv_n n re tl } 
			∐. _nil◂{} . 
				_nil {} ⊢ tl 
				∎ { env0 rv tv tv_n n re tl }
		@.lc_id_mtc_mp { env0 rv tv tv_n n re ilm } 
			$ ilm ⊢ 
			∐ p_cns◂{ { mp tl me } ilm } .
				$ re ⊢ re,re0 
				lc_id_mtc_mp { env0 rv tv tv_n n re0 ilm } ⊢ { env0 rv tv tv_n n ilm } 
				crt_mtc_ptn { env0 rv tv tv_n n re mp } ⊢ { env0 rv tv tv_n n re mp } 
				p_cns { { mp re tl me } ilm } ⊢ ilm 
				∎ { env0 rv tv tv_n n ilm }
			∐. p_end◂{ mp tl me } .
				crt_mtc_ptn { env0 rv tv tv_n n re mp } ⊢ { env0 rv tv tv_n n re mp } 
			  p_end { mp re tl me } ⊢ ilm 
				∎ { env0 rv tv tv_n n ilm }
		@.lc_id_mtc { env0 rv tv tv_n n ilm } 
			$ ilm ⊢ 
			∐ p_cns◂{ { mp re tl me } ilm } .  
				mtc_line { env0 rv tv tv_n n re tl } ⊢ { env0 rv tv tv_n n re tl } 
				mtc_etr { env0 rv tv tv_n n re me } ⊢ { env0 rv tv tv_n n re me } 
				lc_id_mtc { env0 rv tv tv_n n ilm } ⊢ { env0 rv tv tv_n n ilm } 
				p_cns { { mp tl me } ilm } ⊢ ilm 
				∎ { env0 rv tv tv_n n ilm }
			∐. p_end◂{ mp re tl me } .
				mtc_line { env0 rv tv tv_n n re tl } ⊢ { env0 rv tv tv_n n re tl } 
				mtc_etr { env0 rv tv tv_n n re me } ⊢ { env0 rv tv tv_n n re me } 
				p_end { mp tl me } ⊢ ilm 
				∎ { env0 rv tv tv_n n ilm }
		∎∎	
    	§§ ns
		¶
			@.type_k_atm 
				∐ dta : { _r64 _lst◂type_k }
				∐ imp : { type_k type_k }
				∐ abs : { _r64 type_k }
				∐ var : _r64
			@.type_k = RP.t◂type_k_atm
			@.type_aux = { _lst◂_r64 _lst◂type_k } 
			@.type_aux_vct = _arr◂type_aux
			@.type_exp
				∐ type_k : type_k  
				∐ app : { type_exp type_exp }
			@.var
				∐ var_l : _r64
				∐ var_q : _r64 
				∐ var_ln : type_k
				∐ var_i : {}  
		¶ 
			@.reg_env = _lst◂{ _s8 _opn◂_r64 }
			@.mdl_env = { _lst◂{ _s8 _opn◂_r64 } type_env etr_env reg_env }
			@.etr_env = _lst◂{ _s8 _opn◂_r64 }
			@.type_env = _lst◂{ _s8 _opn◂_r64 }
			@.mdl_vct = _arr◂mdl_k
			@.reg_vct = _arr◂reg_k
			@.etr_vct = _arr◂etr_k
			@.cst_vct = _arr◂cst_k
			@.type_vct = _arr◂var
			@.mdl_k = mdl_env
			@.reg_k = { _s8 _r64 _r64 } 
			## { name pos type-var } 
			@.etr_k
				∐ k_op : { _r64 stt_v.t◂_r64 _r64 stt_v.t◂_r64 }
				∐ k_op_gnr : { ast.DP◂_r64 ast.lc_code◂_r64◂_r64 }
				∐ k_op_axm : _r64
				∐ k_cst_v : ast.cst_v 
				∐ k_ctr : { _r64 _r64 }  
			@.cst_k = _r64
			
		¶ f_t e'
			∐ f_etr : e'
			∐ f_rtm : _s8 
			∐ f_inl : { e' _s8 }
		¶ gnr e',a' 
			∐ gnr_etr : e' 
			∐ gnr_axm : a' 
		§ newvar_i { tv_n tv } 
			var_i {} ⊢ v
			_set_q { tv tv_n v } ⊢ { tv tv_n } 
			$ tv_n ⊢ tv_n,tv_n0 
			_inc tv_n ⊢ tv_n 
			∎ { tv_n tv tv_n0 }
		§ newvar_l { tv_n tv lv } 
			$ lv ⊢ lv,lv0 
			var_l lv0 ⊢ v
			##_emt tv_n ⊢ tv_n 
			_set_q { tv tv_n v } ⊢ { tv tv_n } 
			##_emt tv_n ⊢ tv_n 
			$ tv_n ⊢ tv_n,tv_n0 
			_inc tv_n ⊢ tv_n 
			var tv_n0 ⊢ y 
			RP.atm y ⊢ y 
			∎ { tv_n tv lv y }
		§ newvar_q { tv_n tv lv } 
			$ lv ⊢ lv,lv0 
			var_q lv0 ⊢ v
			_set_q { tv tv_n v } ⊢ { tv tv_n } 
			$ tv_n ⊢ tv_n,tv_n0 
			_inc tv_n ⊢ tv_n 
			var tv_n0 ⊢ y  
			RP.atm y ⊢ y 
			∎ { tv_n tv lv y }
		§ newvar_ln { tv_n tv y } 
			var_ln y ⊢ v 
			_set_q { tv tv_n v } ⊢ { tv tv_n }
			$ tv_n ⊢ tv_n,tv_n0 
			_inc tv_n ⊢ tv_n 
			∎ { tv_n tv tv_n0 }
		§§ t_axm 
			§ N0 = 13r 
  		§§ id 
				§ r64 = 0r 
  			§ s8 = 1r 
  			§ lst = 2r 
  			§ opn = 3r 
				§ arr = 4r  
				§ clr = 5r 
				§ pt = 6r 
				§ r32 = 7r 
				§ r16 = 8r 
				§ r8 = 9r 
  			§ r4 = 10r 
				§ r2 = 11r 

				§ ext = 12r 
				∎∎
			§ unt {} 
				_nil {} ⊢ l 
				RP.rcd l ⊢ t 
				∎ t 
			§ r64 {} 
				_nil {} ⊢ l 
				» id.r64 _ ⊢ a 
				dta { a l } ⊢ y 
				RP.atm y ⊢ y 
				∎ y

			§ s8 {} 
				_nil {} ⊢ l
				» id.s8 _ ⊢ a  
				dta { a l } ⊢ y 
				RP.atm y ⊢ y 
				∎ y 

			§ lst y  
				» id.lst _ ⊢ a   
				_nil {} ⊢ l 
				_cns { y l } ⊢ l 
				dta { a l } ⊢ y
				RP.atm y ⊢ y 
				∎ y 
			§ opn y  
				» id.opn _ ⊢ a 
				_nil {} ⊢ l 
				_cns { y l } ⊢ l
				dta { a l } ⊢ y
				RP.atm y ⊢ y 
				∎ y
			§ arr y 
				_nil {} ⊢ l 
				_cns { y l } ⊢ l 
				» id.arr _ ⊢ a 
				dta { a l } ⊢ y 
				RP.atm y ⊢ y 
				∎ y 
			§ clr y 
				_nil {} ⊢ l 
				_cns { y l } ⊢ l 
				» id.clr _ ⊢ a 
				dta { a l } ⊢ y 
				RP.atm y ⊢ y 
				∎ y 
			§ pt y 
				_nil {} ⊢ l 
				_cns { y l } ⊢ l 
				» id.pt _ ⊢ a 
				dta { a l } ⊢ y 
				RP.atm y ⊢ y 
				∎ y
			§ ext {} 
				_nil {} ⊢ l 
				» id.ext _ ⊢ a 
				dta { a l } ⊢ y 
				RP.atm y ⊢ y 
				∎ y 
			∎∎
		§§ e_axm 
			§ mk_arr = 0r 
			§ exc_q = 1r 
			§ set_q = 2r 
			§ get_q = 3r 
			§ lod_q = 4r 
			
			§ args = 5r 
			
			§ mlc_s8 = 6r 
			§ s8_len = 7r 
			
			§ emt = 8r 
			
			§ inc = 9r 
			§ dec = 10r 
			§ add = 11r 
			§ sub = 12r 
			§ imul = 13r
			
			§ sts = 14r 
			§ lds = 15r 
			§ setge = 16r 
			§ rep_movsb = 17r 
			§ nil = 18r 
			§ cns = 19r 
			§ some = 20r 
			§ none = 21r
			§ in_fn = 22r
			§ emt_s8_to = 23r 
			§ cd = 24r  
			§ byt = 25r

			§ mk_clr = 26r 
			§ alp = 27r 
			§ frp = 28r 
			§ mkp = 29r
			§ dlp = 30r

			§ arr_len = 31r 
			§ arr_of_lst = 32r

			§ scf_d = 33r 
			§ scf_x = 34r 
			§ dlt = 35r 
			§ info = 36r 
			§ rpc = 37r
			§ getchar = 38r 
			∎∎
		§ @.pnt_type_k { tv k } 
			$ k ⊢ 
			∐ RP.rcd◂l .
				pnt_type_k_lst { tv l } ⊢ { tv s } 
				» _^ s ⊢ s,sr 
					"{ " 0' "}" // 
				∎ { tv sr } 
			∐. RP.atm◂ak . 
				$ ak ⊢ 
				∐ dta◂{ a l } . 
					pnt_dta { tv l } ⊢ { tv s }
					pnt_dta_i a ⊢ sa  
					» _^ sa,s ⊢ sa,s,sr 
						0' 1' // 
					∎ { tv sr } 
				∐ imp◂{ k0 k1 } . 
					pnt_type_k { tv k0 } ⊢ { tv s0 }  
					pnt_type_k { tv k1 } ⊢ { tv s1 } 
					» _^ s0,s1 ⊢ s0,s1,sr 
						"(" 0' "→" 1' ")" // 
					∎ { tv sr } 
				∐ abs◂{ a k0 } . 
					pnt_type_k { tv k0 } ⊢ { tv s0 } 
					» _^ a,s0 ⊢ a,s0,sr 
							"\\" 0d' "' . " 1' //
					∎ { tv sr }  
				∐. var◂i . 
					_lod_q { tv i } ⊢ { tv i v } 
					$ v ⊢ 
					∐ var_l◂lv . 
						» _^ i,lv ⊢ i,lv,sr 
							0d' "''" "(" 1d' ")" // 
						∎ { tv sr } 
					∐ var_q◂lv .
						» _^ i,lv ⊢ i,lv,sr 
							0d' "'" "(" 1d' ")" // 
						∎ { tv sr }
					∐ var_i◂{} . 
						» _^ i ⊢ i,sr 
							"?" 0d' // 
						∎ { tv sr }
					∐. var_ln◂kx . 
						pnt_type_k { tv kx } ⊢ { tv sx } 
						» _^ i,sx ⊢ i,sx,sr 
							0d' "'" "(=" 1' ")" // 
						∎ { tv sr }
			@.pnt_type_k_lst { tv l } 
				$ l ⊢ 
				∐ _cns◂{ k0 l } . 
					pnt_type_k { tv k0 } ⊢ { tv s0 } 
					pnt_type_k_lst { tv l } ⊢ { tv sl } 
					» _^ s0,sl ⊢ s0,sl,sr 
						0' " " 1' // 
					∎ { tv sr }  
				∐. _nil◂{} .
					» "" _ ⊢ sr 
					∎ { tv sr }
			@.pnt_dta { tv l } 
				$ l ⊢ 
				∐ _cns◂{ k l } . 
					pnt_type_k { tv k } ⊢ { tv s } 
					pnt_dta { tv l } ⊢ { tv sl } 
					» _^ s,sl ⊢ s,sl,sr 
						1' "◂" 0' // 
					∎ { tv sr } 
				∐. _nil◂{} . 
					» "" _ ⊢ sr 
					∎ { tv sr }  
			@.pnt_dta_i a  
				∐ a'=0r . 
					» "_r64" _ ⊢ s 
					∎ s 
				∐ a'=1r . 
					» "_s8" _ ⊢ s 
					∎ s 
				∐ a'=2r . 
					» "_lst" _ ⊢ s 
					∎ s 
				∐ a'=3r . 
					» "_opn" _ ⊢ s 
					∎ s 
				∐ a'=4r . 
					» "_arr" _ ⊢ s 
					∎ s 
				∐. . 
					» _^ a ⊢ a,s 
						"_t" 0d' // 
					∎ s 
		§ 
			@.chk_pv { tv k0 pl0 } 
				$ k0 ⊢ 
				∐ RP.rcd◂l0 . 
					chk_pv_lst { tv l0 pl0 } ⊢| 
				∐. RP.atm◂a0 . 
					$ a0 ⊢ 
					∐ dta◂{ ax0 ql0 } . 
						chk_pv_lst { tv ql0 pl0 } ⊢| 
					∐ imp◂{ k0 k1 } . 
						chk_pv { tv k0 pl0 } ⊢ { tv pl0 }
						chk_pv { tv k1 pl0 } ⊢ { tv pl0 }
						∎ { tv pl0 } 
					∐ abs◂{ vv0 k0 } . 
						∎| 
					∐. var◂i0 . 
						_lod_q { tv i0 } ⊢ { tv i0 v1 } 
						$ v1 ⊢ 
						∐ var_ln◂y2 . 
							chk_pv { tv y2 pl0 } ⊢| 
						∐ var_q◂lv1 . 
							lst.add { pl0 i0 } ⊢ pl0 
							∎ { tv pl0 }
						∐ var_l◂lv1 . 
							∎| 
						∐. var_i◂{} . 
							∎| 
			@.chk_pv_lst { tv l0 pl0 } 
				$ l0 ⊢ 
				∐ _cns◂{ k0 l0 } . 
					chk_pv { tv k0 pl0 } ⊢ { tv pl0 } 
					chk_pv_lst { tv l0 pl0 } ⊢| 
				∐. _nil◂{} . 
					∎ { tv pl0 }
		§§ eq_t 
			§ 
				@.f { tv y0 y1 }
					∐ y0 ⊢ RP.atm◂ak; ak ⊢ var◂i0 . 
						_lod_q { tv i0 } ⊢ { tv i0 v0 } 
						∐ v0 ⊢ var_ln◂y2 . 
							f { tv y2 y1 } ⊢|
						∐ v0 ⊢ var_q◂lv0 . 
							l0 { tv i0 y1 } ⊢| 
						∐. .  
							bl.f {} ⊢ b 
							∎ { tv b }
					∐ y1 ⊢ RP.atm◂ak; ak ⊢ var◂i1 . 
						_lod_q { tv i1 } ⊢ { tv i1 v0 } 
						∐ v0 ⊢ var_ln◂y2 . 
							f { tv y0 y2 } ⊢|
						∐ v0 ⊢ var_q◂lv . 
							l0 { tv i1 y0 } ⊢|
						∐. .  
							bl.f {} ⊢ b 
							∎ { tv b }
					∐ y0 ⊢ RP.rcd◂r0 ; y1 ⊢ RP.rcd◂r1 . 
						f_lst { tv r0 r1 } ⊢| 
					∐ y0 ⊢ RP.atm◂ak0; ak0 ⊢ dta◂{ a0 l0 }; y1 ⊢ RP.atm◂ak1; ak1 ⊢ dta◂{ a1 l1 } . 
						∐ a0'=a1' . 
							f_lst { tv l0 l1 } ⊢|
						∐. . 
							bl.f {} ⊢ b 
							∎ { tv b }
					∐ y0 ⊢ RP.atm◂ak0; ak0 ⊢ imp◂{ y0_0 y0_1 }; y1 ⊢ RP.atm◂ak1; ak1 ⊢ imp◂{ y1_0 y1_1 } . 
						f { tv y0_0 y1_0 } ⊢ { tv b }   
						∐ b ⊢ bl.t◂{} . 
							f { tv y0_1 y1_1 } ⊢|
						∐. . 
							∎ { tv b }
					∐. . 
						bl.f {} ⊢ b 
						∎ { tv b }
			@.l0 { tv i0 y1 } 
				∐ y1 ⊢ RP.atm◂a1; a1 ⊢ var◂i1 . 
					_lod_q { tv i1 } ⊢ { tv i1 v0 } 
					∐ v0 ⊢ var_ln◂y2 . 
						l0 { tv i0 y2 } ⊢|
					∐ v0 ⊢ var_q◂lv0 . 
						∐ i0'=i1' . 
							bl.t {} ⊢ b 
							∎ { tv b }
						∐. . 
							bl.f {} ⊢ b 
							∎ { tv b }
					∐. .  
						bl.f {} ⊢ b 
						∎ { tv b }
				∐. . 
					bl.f {} ⊢ b 
					∎ { tv b }
			@.f_lst { tv l0 l1 }
				∐ l0 ⊢ _cns◂{ y0 l0 }; l1 ⊢ _cns◂{ y1 l1 } . 
					f { tv y0 y1 } ⊢ { tv b }
					∐ b ⊢ bl.t◂{} .  
						f_lst { tv l0 l1 } ⊢| 
					∐. .
						∎ { tv b }
				∐ l0 ⊢ _nil◂{}; l1 ⊢ _nil◂{} . 
					bl.t {} ⊢ b 
					∎ { tv b }  
				∐. . 
					bl.f {} ⊢ b 
					∎ { tv b } 		
			∎∎
		§§ cmp_t
			§ 
				@.f { tv y0 y1 cl }
					∐ y1 ⊢ RP.atm◂ak; ak ⊢ var◂i1 . 
						_lod_q { tv i1 } ⊢ { tv i1 v0 } 
						∐ v0 ⊢ var_ln◂y2 . 
							f { tv y0 y2 cl } ⊢|
						∐ v0 ⊢ var_q◂lv . 
							assoc { cl i1 } ⊢ { cl i1 o } 
							∐ o ⊢ _some◂yt . 
								eq_t.f { tv yt y0 } ⊢ { tv bt }  
								∎ { tv bt cl }
							∐. . 
								_some y0 ⊢ o0 
								_cns { { i1 o0 } cl } ⊢ cl 
								bl.t {} ⊢ b 
								∎ { tv b cl } 
						∐. .  
							bl.f {} ⊢ b 
							∎ { tv b cl }
					∐ y0 ⊢ RP.atm◂ak; ak ⊢ var◂i0 . 
						_lod_q { tv i0 } ⊢ { tv i0 v0 } 
						∐ v0 ⊢ var_ln◂y2 . 
							f { tv y2 y1 cl } ⊢|
						∐ v0 ⊢ var_q◂v2 . 
							##» "cmp_t 1" _ ⊢ ee0 
							##_emt ee0 ⊢ _ 
							##∎|
							bl.f {} ⊢ b 
							∎ { tv b cl }
						∐. .  
							##bl.f {} ⊢ b 
							##∎ { tv b cl }
							» "cmp_t 0" _ ⊢ ee0 
							_emt ee0 ⊢ _ 
							∎| 
					∐ y0 ⊢ RP.rcd◂r0 ; y1 ⊢ RP.rcd◂r1 . 
						f_lst { tv r0 r1 cl } ⊢| 
					∐ y0 ⊢ RP.atm◂ak0; ak0 ⊢ dta◂{ a0 l0 }; y1 ⊢ RP.atm◂ak1; ak1 ⊢ dta◂{ a1 l1 } . 
						∐ a0'=a1' . 
							f_lst { tv l0 l1 cl } ⊢|
						∐. . 
							bl.f {} ⊢ b 
							∎ { tv b cl }
					∐ y0 ⊢ RP.atm◂ak0; ak0 ⊢ imp◂{ y0_0 y0_1 }; y1 ⊢ RP.atm◂ak1; ak1 ⊢ imp◂{ y1_0 y1_1 } . 
						f { tv y0_0 y1_0 cl } ⊢ { tv b cl }   
						∐ b ⊢ bl.t◂{} . 
							f { tv y0_1 y1_1 cl } ⊢|
						∐. . 
							∎ { tv b cl }
					∐. . 
						bl.f {} ⊢ b 
						∎ { tv b cl }
			@.f_lst { tv l0 l1 cl }
				∐ l0 ⊢ _cns◂{ y0 l0 }; l1 ⊢ _cns◂{ y1 l1 } . 
					f { tv y0 y1 cl } ⊢ { tv b cl }
					∐ b ⊢ bl.t◂{} .  
						f_lst { tv l0 l1 cl } ⊢| 
					∐. .
						∎ { tv b cl }
				∐ l0 ⊢ _nil◂{}; l1 ⊢ _nil◂{} . 
					bl.t {} ⊢ b 
					∎ { tv b cl }  
				∐. . 
					bl.f {} ⊢ b 
					∎ { tv b cl } 				
			§ eqv { tv y0 y1 } 
				_nil {} ⊢ cl 
				$ y0 ⊢ y0,y0_0
				$ y1 ⊢ y1,y1_0 
				f { tv y0_0 y1_0 cl } ⊢ { tv bl _ }
				_nil {} ⊢ cl 
				$ y0 ⊢ y0,y0_0
				$ y1 ⊢ y1,y1_0 
				f { tv y1_0 y0_0 cl } ⊢ { tv br _ }
				bl.and { bl br } ⊢ b 
				∎ { tv y0 y1 b }
			∎∎
		§ @.find_gf { tv gfl i0 y0 } 
			$ gfl ⊢ 
			∐ _cns◂{ ge gfl } . 
				∐ ge ⊢ gnr_etr◂{ lb i1 y1 rsp_s p0 rsp_d p1 } .
					∐ i0'=i1' . 
						##» "find_gf D0" _ ⊢ dd0
						##_emt dd0 ⊢ _ 
						##$ y0 ⊢ y0,y00 
						##$ y1 ⊢ y1,y10
						##_nil {} ⊢ cl
						##cmp_t.f { tv y00 y10 cl } ⊢ { tv b cl } 
						cmp_t.eqv { tv y0 y1 } ⊢ { tv y0 y1 b } 
						∐ b ⊢ bl.t◂{} . 
							$ { lb i1 y1 rsp_s p0 rsp_d p1 } ⊢ A0,A1 
							gnr_etr A0 ⊢ A0 
							_cns { A0 gfl } ⊢ gfl 
							_some A1 ⊢ A1 
							∎ { tv gfl i0 y0 A1 }
						∐. . 
							$ { lb i1 y1 rsp_s p0 rsp_d p1 } ⊢ A0
							gnr_etr A0 ⊢ A0 
							find_gf { tv gfl i0 y0 } ⊢ { tv gfl i0 y0 o0 } 
							_cns { A0 gfl } ⊢ gfl 
							∎ { tv gfl i0 y0 o0 }
					∐. . 
						##	» "find_gf D1" _ ⊢ dd0
						##_emt dd0 ⊢ _ 
						$ { lb i1 y1 rsp_s p0 rsp_d p1 } ⊢ A0  
						gnr_etr A0 ⊢ A0 
						find_gf { tv gfl i0 y0 } ⊢ { tv gfl i0 y0 o0 } 
						_cns { A0 gfl } ⊢ gfl 
						∎ { tv gfl i0 y0 o0 }
				∐. . 
					find_gf { tv gfl i0 y0 } ⊢ { tv gfl i0 y0 o0 } 
					_cns { ge gfl } ⊢ gfl
					∎ { tv gfl i0 y0 o0 } 
			∐. _nil◂{} . 
				_nil {} ⊢ gfl 
				_none {} ⊢ o0 
				∎ { tv gfl i0 y0 o0 }
		§§ find_axm 
			§ 
				@.l0 { gfl i0 h0 ge }
					f { gfl i0 h0 } ⊢ { gfl i0 h0 o0 } 
					_cns { ge gfl } ⊢ gfl 
					∎ { gfl i0 h0 o0 }
				@.f { gfl i0 h0 } 
					$ gfl ⊢ 
					∐ _cns◂{ ge gfl } . 
						∐ ge ⊢ gnr_axm◂{ lb i1 h1 } .
							∐ i0'=i1' . 
								stt_v.eq_hp { h0 h1 } ⊢ { h0 h1 b } 
								∐ b ⊢ bl.t◂{} . 
									$ lb ⊢ lb,lb0 
									_some lb0 ⊢ A1 
									gnr_axm { lb i1 h1 } ⊢ ge 
									_cns { ge gfl } ⊢ gfl 
									∎ { gfl i0 h0 A1 }
								∐. . 
									gnr_axm { lb i1 h1 } ⊢ ge 
									l0 { gfl i0 h0 ge } ⊢|
							∐. .  
								gnr_axm { lb i1 h1 } ⊢ ge 
								l0 { gfl i0 h0 ge } ⊢|
						∐. . 
							l0 { gfl i0 h0 ge } ⊢|
					∐. _nil◂{} . 
						_nil {} ⊢ gfl 
						_none {} ⊢ o0 
						∎ { gfl i0 h0 o0 }
			∎∎
		§ @.occurs { tv i0 lv0 y1 } 
			∐ y1 ⊢ RP.rcd◂l1 . 
				occurs_lst { tv i0 lv0 l1 } ⊢| 
			∐ y1 ⊢ RP.atm◂ak; ak ⊢ dta◂{ a1 l1 } . 
				occurs_lst { tv i0 lv0 l1 } ⊢| 
			∐ y1 ⊢ RP.atm◂ak; ak ⊢ imp◂{ y1_0 y1_1 } . 
				occurs { tv i0 lv0 y1_0 } ⊢ { tv i0 lv0 } 
				occurs { tv i0 lv0 y1_1 } ⊢ { tv i0 lv0 } 
				∎ { tv i0 lv0 } 
			∐ y1 ⊢ RP.atm◂ak; ak ⊢ var◂i1 . 
				∐ i0'=i1' . 
					_emt { i0 lv0 } ⊢ { i0 lv0 } 
					∎| 
				∐. . 
					_lod_q { tv i1 } ⊢ { tv i1 v1 } 
					$ v1 ⊢ 
					∐ var_ln◂y2 . 
						occurs { tv i0 lv0 y2 } ⊢| 
					∐ var_l◂lv1 . 
						_setge { lv0 lv1 } ⊢ { lv0 lv1 b }
						∐ b'=0r . 
							$ lv0 ⊢ lv0,lv0_0 
							_get_q { tv i1 } ⊢ { tv i1 vt } 
							var_l lv0_0 ⊢ v2 
							_set_q { tv i1 v2 } ⊢ { tv i1 } 
							∎ { tv i0 lv0 } 
						∐. . 
							∎ { tv i0 lv0 }
					∐ var_i◂{} . 
						##» "occurs 17" _ ⊢ se 
						##_emt se ⊢ se 
						##∎| 
						∎ { tv i0 lv0 } 
				
					∐. var_q◂lv1 .
						_emt { i1 lv1 } ⊢ a 
						» "occurs 0" _ ⊢ se 
						_emt se ⊢ se 
						∎| 
			∐. . 
				_emt { i0 lv0 } ⊢ { i0 lv0 } 
				» "occurs 1" _ ⊢ se 
				_emt se ⊢ se 
				∎|
			@.occurs_lst { tv i0 lv0 l1 } 
				$ l1 ⊢ 
				∐ _cns◂{ y1 l1 } . 
					occurs { tv i0 lv0 y1 } ⊢ { tv i0 lv0 } 
					occurs_lst { tv i0 lv0 l1 } ⊢| 
				∐. _nil◂{} . 
					∎ { tv i0 lv0 } 
		§§ unify 
		§ 
			@.f { tv y0 y1 }
				##$ y0 ⊢ y0,y00
				##$ y1 ⊢ y1,y10
				##pnt_type_k { tv y00 } ⊢ { tv y0s } 
				##pnt_type_k { tv y10 } ⊢ { tv y1s } 
				##_emt { y0s y1s } ⊢ _
				##» "unify d0" _ ⊢ se 
				##_emt se ⊢ _
				∐ y0 ⊢ RP.atm◂ak; ak ⊢ var◂i0 . 
					f_l0 { tv i0 y1 } ⊢| 
				∐ y1 ⊢ RP.atm◂ak; ak ⊢ var◂i1 . 
					f_l0 { tv i1 y0 } ⊢| 
				∐ y0 ⊢ RP.rcd◂r0 ; y1 ⊢ RP.rcd◂r1 . 
					f_lst { tv r0 r1 } ⊢| 
				∐ y0 ⊢ RP.atm◂ak0; ak0 ⊢ dta◂{ a0 l0 }; y1 ⊢ RP.atm◂ak1; ak1 ⊢ dta◂{ a1 l1 } . 
					∐ a0'=a1' . 
						f_lst { tv l0 l1 } ⊢|
					∐. . 
						» "unify 0" _ ⊢ se 
						pnt_type_k_lst { tv l0 } ⊢ { tv l0s } 
						pnt_type_k_lst { tv l1 } ⊢ { tv l1s } 
						pnt_dta_i a0 ⊢ a0s 
						pnt_dta_i a1 ⊢ a1s 
						_emt { a0s l0s a1s l1s } ⊢ a
						_emt se ⊢ se 
						∎| 
				∐ y0 ⊢ RP.atm◂ak0; ak0 ⊢ imp◂{ y0_0 y0_1 }; y1 ⊢ RP.atm◂ak1; ak1 ⊢ imp◂{ y1_0 y1_1 } . 
					f { tv y0_0 y1_0 } ⊢ tv  
					f { tv y0_1 y1_1 } ⊢|
				∐. . 
					pnt_type_k { tv y0 } ⊢ { tv y0s } 
					pnt_type_k { tv y1 } ⊢ { tv y1s } 
					_emt { y0s y1s } ⊢ { y0s y1s } 
					» "unify 1" _ ⊢ se 
					_emt se ⊢ se 
					∎|
			@.f_lst { tv l0 l1 }
				∐ l0 ⊢ _cns◂{ y0 l0 }; l1 ⊢ _cns◂{ y1 l1 } . 
					f { tv y0 y1 } ⊢ tv 
					f_lst { tv l0 l1 } ⊢| 
				∐ l0 ⊢ _nil◂{}; l1 ⊢ _nil◂{} . 
					∎ tv 
				∐. . 
					» "unify.f_lst 2" _ ⊢ se 
					_emt se ⊢ se 
					_emt { l0 l1 } ⊢ { l0 l1 }
					∎|  
				
			@.f_l0 { tv i0 y1 }   
				_lod_q { tv i0 } ⊢ { tv i0 v0 } 
				∐ v0 ⊢ var_ln◂y2 . 
					f { tv y2 y1 } ⊢|
				∐ v0 ⊢ var_l◂lv .  
					f_l1 { tv i0 lv y1 } ⊢|
				∐. . 
					» "unify 3" _ ⊢ se 
					_emt se ⊢ se 
					∎|  
			@.f_l1 { tv i0 lv y1 } 
				∐ y1 ⊢ RP.atm◂ak1; ak1 ⊢ var◂i1 . 
					∐ i0'=i1' . 
						∎ tv 
					∐. .
						_lod_q { tv i1 } ⊢ { tv i1 v1 }
						∐ v1 ⊢ var_ln◂y2 . 
							f_l1 { tv i0 lv y2 } ⊢|  
						∐ v1 ⊢ var_l◂lv1 . 
							_setge { lv lv1 } ⊢ { lv lv1 b }
							∐ b'=0r .  
								_get_q { tv i1 } ⊢ { tv i1 vt } 
								var i0 ⊢ yv 
								RP.atm yv ⊢ yv 
								var_ln yv ⊢ v2 
								_set_q { tv i1 v2 } ⊢ { tv i1 } 
								∎ tv 
							∐. . 
								_get_q { tv i0 } ⊢ { tv i0 vt } 
								var i1 ⊢ yv 
								RP.atm yv ⊢ yv 
								var_ln yv ⊢ v2 
								_set_q { tv i0 v2 } ⊢ { tv i0 } 
								∎ tv
						∐. . 
							» "unify 4" _ ⊢ se 
							_emt se ⊢ se 
							∎|  
				∐. .  
					$ y1 ⊢ y1,y1_0 
					occurs { tv i0 lv y1 } ⊢ { tv i0 lv }
					_get_q { tv i0 } ⊢ { tv i0 vt }
					var_ln y1_0 ⊢ vy 
					_set_q { tv i0 vy } ⊢ { tv i0 }  
					∎ tv
			∎∎ 
		§ @.unifys { tv y0 ys } 
			$ ys ⊢ 
			∐ _cns◂{ %y1 %ys } . 
				$ y0 ⊢ y0,y00 
				unify.f { tv y0 y1 } ⊢ tv 
				unifys { tv y00 ys } ⊢|
			∐. _nil◂{} . 
				∎ { tv y0 } 	
		§ 
			@.inst_al { tv_n tv lv y al } 
			$ y ⊢
			∐ RP.rcd◂l . 
				inst_lst { tv_n tv lv l al } ⊢ { tv_n tv lv l al } 
				RP.rcd l ⊢ y 
				∎ { tv_n tv lv y al } 
			∐. RP.atm◂ak . 
				$ ak ⊢ 
				∐ dta◂{ a l } . 
					inst_lst { tv_n tv lv l al } ⊢ { tv_n tv lv l al }
					dta { a l } ⊢ y 
					RP.atm y ⊢ y 
					∎ { tv_n tv lv y al } 
				∐ imp◂{ y0 y1 } . 
					inst_al { tv_n tv lv y0 al } ⊢ { tv_n tv lv y0 al } 
					inst_al { tv_n tv lv y1 al } ⊢ { tv_n tv lv y1 al } 
					imp { y0 y1 } ⊢ y2 
					RP.atm y2 ⊢ y2 
					∎ { tv_n tv lv y2 al } 
				∐ abs◂{ a0 y0 } . 
					assoc { al a0 } ⊢ { al a0 o } 
					$ o ⊢ 
					∐ _none◂{} . 
						$ a0 ⊢ a0,a0_0 
						newvar_i { tv_n tv } ⊢ { tv_n tv ia }
						$ ia ⊢ ia,ia0 
						_some ia ⊢ o 
						_cns { { a0 o } al } ⊢ al  
						inst_al { tv_n tv lv y0 al } ⊢ { tv_n tv lv y0 al } 
						_none {} ⊢ o 
						_cns { { a0_0 o } al } ⊢ al 
						abs { ia0 y0 } ⊢ y0 
						RP.atm y0 ⊢ y0 
						∎ { tv_n tv lv y0 al }
					∐. _some◂v . 
						» "inst 6" _ ⊢ se 
						_emt se ⊢ se 
						∎|  
				∐. var◂i0 . 
					assoc { al i0 } ⊢ { al i0 o } 
					$ o ⊢ 
					∐ _some◂i1 . 
						var i1 ⊢ y0
						RP.atm y0 ⊢ y0 
						∎ { tv_n tv lv y0 al } 
					∐. _none◂{} . 
						_lod_q { tv i0 } ⊢ { tv i0 v0 } 
						∐ v0 ⊢ var_ln◂y0 . 
							inst_al { tv_n tv lv y0 al } ⊢|
						∐ v0 ⊢ var_q◂lvq .
								##_emt tv_n ⊢ tv_n 
							$ tv_n ⊢ tv_n,tv_n_0
							newvar_l { tv_n tv lv } ⊢ { tv_n tv lv y0 } 
							_some tv_n_0 ⊢ o 
							_cns { { i0 o } al } ⊢ al  
							∎ { tv_n tv lv y0 al }  
						∐ v0 ⊢ var_i◂{} . 
							» "inst 4" _ ⊢ se 
							_emt se ⊢ se 
							∎| 
						∐. . 
							var i0 ⊢ y 
							RP.atm y ⊢ y 
							∎ { tv_n tv lv y al }
		@.inst_lst { tv_n tv lv l al } 
			$ l ⊢ 
			∐ _cns◂{ y l } . 
				inst_al { tv_n tv lv y al } ⊢ { tv_n tv lv y al } 
				inst_lst { tv_n tv lv l al } ⊢ { tv_n tv lv l al } 
				_cns { y l } ⊢ l 
				∎ { tv_n tv lv l al }
			∐. _nil◂{} . 
				_nil {} ⊢ l
				∎ { tv_n tv lv l al }
		§ inst { tv_n tv lv y } 
			_nil {} ⊢ al 
			inst_al { tv_n tv lv y al } ⊢ { tv_n tv lv y al } 
			∎ { tv_n tv lv y }   
		§ @.gen { tv_n tv lv y } 
			##_emt y ⊢ y 
			##» "enter gen" _ ⊢ sxe0 
			##_emt sxe0 ⊢ sxe0
			$ y ⊢ 
			∐ RP.rcd◂l . 
				gen_lst { tv_n tv lv l } ⊢ { tv_n tv lv l }
				RP.rcd l ⊢ y 
				∎ { tv_n tv lv y } 
			∐. RP.atm◂ak . 
				$ ak ⊢ 
				∐ dta◂{ a l } . 
					gen_lst { tv_n tv lv l } ⊢ { tv_n tv lv l }
					dta { a l } ⊢ y
					RP.atm y ⊢ y 
					∎ { tv_n tv lv y }
				∐ imp◂{ y0 y1 } . 
					gen { tv_n tv lv y0 } ⊢ { tv_n tv lv y0 } 
					gen { tv_n tv lv y1 } ⊢ { tv_n tv lv y1 } 
					imp { y0 y1 } ⊢ y 
					RP.atm y ⊢ y 
					∎ { tv_n tv lv y } 
				∐ abs◂{ a y0 } . 
					gen { tv_n tv lv y0 } ⊢ { tv_n tv lv y0 } 
					abs { a y0 } ⊢ y
					RP.atm y ⊢ y 
					∎ { tv_n tv lv y }
				∐. var◂i . 
					_lod_q { tv i } ⊢ { tv i v } 
					$ v ⊢ 
					∐ var_ln◂y1 . 
						gen { tv_n tv lv y1 } ⊢|
					∐ var_l◂lv1 .
						_setge { lv lv1 } ⊢ { lv lv1 b } 
						∐ b'=0r .
							_get_q { tv i } ⊢ { tv i vt } 
							$ lv ⊢ lv,lv_0 
							var_q lv_0 ⊢ vq 
							_set_q { tv i vq } ⊢ { tv i } 
							var i ⊢ y  
							RP.atm y ⊢ y 
							∎ { tv_n tv lv y }
						∐. . 
							var i ⊢ y 
							RP.atm y ⊢ y 
							∎ { tv_n tv lv y }
					∐ var_q◂lv1 . 
						var i ⊢ y  
						RP.atm y ⊢ y 
						∎ { tv_n tv lv y } 
					∐. var_i◂{} . 
						var i ⊢ y  
						RP.atm y ⊢ y 
						∎ { tv_n tv lv y } 
			@.gen_lst { tv_n tv lv l } 
				$ l ⊢ 
				∐ _cns◂{ y l } .
					gen { tv_n tv lv y } ⊢ { tv_n tv lv y } 
					gen_lst { tv_n tv lv l } ⊢ { tv_n tv lv l } 
					_cns { y l } ⊢ l 
					∎ { tv_n tv lv l } 
				∐. _nil◂{} . 
					_nil {} ⊢ l 
					∎ { tv_n tv lv l } 
		§ iug { tv_n tv lv y0 y1 } 
			_inc lv ⊢ lv 
			inst { tv_n tv lv y0 } ⊢ { tv_n tv lv y0 } 
			inst { tv_n tv lv y1 } ⊢ { tv_n tv lv y1 } 
			$ y0 ⊢ y0,y00 
			$ y1 ⊢ y1,y10
			unify.f { tv y00 y10 } ⊢ tv
			_dec lv ⊢ lv 
			gen { tv_n tv lv y0 } ⊢ { tv_n tv lv y0 }
			∎ { tv_n tv lv y0 y1 }  
		§ iug_imp { tv_n tv lv ys yd y1 } 
			_inc lv ⊢ lv 
			inst { tv_n tv lv ys } ⊢ { tv_n tv lv ys }
			inst { tv_n tv lv yd } ⊢ { tv_n tv lv yd } 
			inst { tv_n tv lv y1 } ⊢ { tv_n tv lv y1 }
			$ ys ⊢ ys,ys0
			$ yd ⊢ yd,yd0 
			imp { ys0 yd0 } ⊢ yi 
			RP.atm yi  ⊢ yi 
			$ y1 ⊢ y1,y10
			unify.f { tv yi y10 } ⊢ tv
			_dec lv ⊢ lv 
			gen { tv_n tv lv y1 } ⊢ { tv_n tv lv y1 }
			∎ { tv_n tv lv ys yd y1 }  
		§ 
			@.inst_cl { tv_n tv y cl } 
				$ y ⊢
				∐ RP.rcd◂l . 
					inst_cl_lst { tv_n tv l cl } ⊢ { tv_n tv l cl } 
					RP.rcd l ⊢ y 
					∎ { tv_n tv y cl } 
				∐. RP.atm◂ak . 
					$ ak ⊢ 
					∐ dta◂{ a l } . 
						inst_cl_lst { tv_n tv l cl } ⊢ { tv_n tv l cl }
						dta { a l } ⊢ y 
						RP.atm y ⊢ y 
						∎ { tv_n tv y cl } 
					∐ imp◂{ y0 y1 } . 
						inst_cl { tv_n tv y0 cl } ⊢ { tv_n tv y0 cl } 
						inst_cl { tv_n tv y1 cl } ⊢ { tv_n tv y1 cl } 
						imp { y0 y1 } ⊢ y2 
						RP.atm y2 ⊢ y2 
						∎ { tv_n tv y2 cl } 
					∐ abs◂{ a0 y0 } . 
						∎| 
					∐. var◂i0 . 
						##» "inst_cl E0" _ ⊢ ee0 
						##_emt ee0 ⊢ ee0 
						_lod_q { tv i0 } ⊢ { tv i0 v0 } 
						##» "inst_cl E1" _ ⊢ ee1 
						##_emt ee1 ⊢ ee1 
						∐ v0 ⊢ var_ln◂y0 . 
							inst_cl { tv_n tv y0 cl } ⊢|
						∐ v0 ⊢ var_q◂lvq .
							assoc { cl i0 } ⊢ { cl i0 o } 
							$ o ⊢ 
							∐ _some◂i1 . 
								var i1 ⊢ ya 
								RP.atm ya ⊢ ya 
								∎ { tv_n tv ya cl } 
							∐. _none◂{} . 
								var i0 ⊢ ya 
								RP.atm ya ⊢ ya 
								∎ { tv_n tv ya cl }  
						∐ v0 ⊢ var_i◂{} . 
							» "inst_cl 5" _ ⊢ se 
							_emt se ⊢ se 
							∎|
						∐. . 
							» "inst_cl 4" _ ⊢ se 
							_emt se ⊢ se 
							∎| 
			@.inst_cl_lst { tv_n tv l cl } 
				$ l ⊢ 
				∐ _cns◂{ y l } . 
					inst_cl { tv_n tv y cl } ⊢ { tv_n tv y cl } 
					inst_cl_lst { tv_n tv l cl } ⊢ { tv_n tv l cl } 
					_cns { y l } ⊢ l 
					∎ { tv_n tv l cl }
				∐. _nil◂{} . 
					_nil {} ⊢ l
					∎ { tv_n tv l cl }
		\[
		§ inst_gen { tv_n tv y al } 
			» 1r _ ⊢ lv 
			inst_al { tv_n tv lv y al } ⊢ { tv_n tv lv y al } 
			_dec lv ⊢ lv 
			gen { tv_n tv lv y } ⊢ { tv_n tv lv y } 
			∎ { tv_n tv y al } 
		\]
		§§ mk_t_aux 
			§ @.f { tv_n tv tav a l } 
					_lod_q { tav a } ⊢ { tav a { s o } } 
					$ o ⊢ 
					∐ _some◂{ as r pl hl } .
						_nil {} ⊢ al 
						f0 { tv_n tv l as al } ⊢ { tv_n tv al }  
						» 1r _ ⊢ lv 
						inst_lst { tv_n tv lv r al } ⊢ { tv_n tv lv r al }
						_dec lv ⊢ lv 
						gen_lst { tv_n tv lv r } ⊢ { tv_n tv lv r }
						_some r ⊢ o 
						∎ { tv_n tv tav { s o } }
					∐. _none◂{} . 
						_none {} ⊢ o 
						∎ { tv_n tv tav { s o } }
				@.f0 { tv_n tv l r al } 
					∐ l ⊢ _cns◂{ hl l }; r ⊢ _cns◂{ hr r } . 	
						newvar_ln { tv_n tv hl } ⊢ { tv_n tv t0 } 
						_some t0 ⊢ o 
						_cns { { hr o } al } ⊢ al 
						f0 { tv_n tv l r al } ⊢|
					∐ l ⊢ _nil◂{}; r ⊢ _nil◂{} . 
						∎ { tv_n tv al }
					∐. . 
						» "inst_t_aux 0" _ ⊢ se 
						_emt se ⊢ se 
						∎|  
			∎∎
		§§ alc_type_k 
			§ @.hp { pv_n al tav tv_n tv t0 }
				##» "enter hp" _ ⊢ sd0 
				##_emt sd0 ⊢ sd0 
				$ t0 ⊢ 
				∐ RP.rcd◂l . 
					∐ l ⊢ _nil◂{} . 
						_nil {} ⊢ l 
						stt_v.rcd l ⊢ h
						stt_v.ref h ⊢ h  
						∎ { pv_n al tav tv_n tv h }
					∐. . 
						hp_lst { pv_n al tav tv_n tv l } ⊢ { pv_n al tav tv_n tv l }
						stt_v.rcd l ⊢ r 
						stt_v.ref r ⊢ h 
						∎ { pv_n al tav tv_n tv h }
				∐. RP.atm◂ak . 
					$ ak ⊢ 
					∐ dta◂{ a l } . 	
						∐ a'=t_axm.id.arr; l ⊢ _cns◂{ y l }; l ⊢ _nil◂{} . 
							hp { pv_n al tav tv_n tv y } ⊢ { pv_n al tav tv_n tv ha }
							stt_v.arr ha ⊢ h0  
							stt_v.ref h0 ⊢ h0 
							∎ { pv_n al tav tv_n tv h0 }
						∐ a'=t_axm.id.s8; l ⊢ _nil◂{} . 
							stt_v.opq {} ⊢ h0 
							stt_v.ref h0 ⊢ h0 
							∎ { pv_n al tav tv_n tv h0 }
						∐ a'=t_axm.id.r64; l ⊢ _nil◂{} . 
							stt_v.r64 {} ⊢ h0 
							∎ { pv_n al tav tv_n tv h0 }    
						∐. .
							hp_lst { pv_n al tav tv_n tv l } ⊢ { pv_n al tav tv_n tv l }
							stt_v.adt { a l } ⊢ h0
							∎ { pv_n al tav tv_n tv h0 } 
					∐ var◂i . 
						_lod_q { tv i } ⊢ { tv i v }
						∐ v ⊢ var_ln◂k . 
							hp { pv_n al tav tv_n tv k } ⊢| 
						∐. .
							assoc { al i } ⊢ { al i o } 
							∐ o ⊢ _some◂pvi . 
								stt_v.pv pvi ⊢ h 
								∎ { pv_n al tav tv_n tv h } 
							∐. . 
								$ pv_n ⊢ pv_n,pvi 
								$ pvi ⊢ pvi,pvi0 
								_some pvi0 ⊢ o0 
								_cns { { i o0 } al } ⊢ al 
								_inc pv_n ⊢ pv_n 
								stt_v.pv pvi ⊢ h 
								∎ { pv_n al tav tv_n tv h } 	
					∐ abs◂{ a k0 } . 
						» "hp abs" _ ⊢ se 
						_emt se ⊢ se 
						∎|  
					∐. imp◂{ k0 k1 } .
						» "hp imp" _ ⊢ se 
						_emt se ⊢ se 
						∎|
				@.hp_lst { pv_n al tav tv_n tv l } 
					$ l ⊢ 
					∐ _cns◂{ k l } . 
						hp { pv_n al tav tv_n tv k } ⊢ { pv_n al tav tv_n tv h } 
						hp_lst { pv_n al tav tv_n tv l } ⊢ { pv_n al tav tv_n tv l } 
						_cns { h l } ⊢ l 
						∎ { pv_n al tav tv_n tv l }
					∐. _nil◂{} . 
						_nil {} ⊢ l 
						∎ { pv_n al tav tv_n tv l }
				@.f { pv_n al tav tv_n tv s0 t0 }
					$ t0 ⊢ 
					∐ RP.rcd◂l . 
						f_lst { pv_n al tav tv_n tv s0 l } ⊢ { pv_n al tav tv_n tv s0 l } 
						RP.rcd l ⊢ p0 
						∎ { pv_n al tav tv_n tv s0 p0 }
					∐. RP.atm◂ak . 
						$ ak ⊢ 
						∐ dta◂{ a l } . 	
							∐ a'=t_axm.id.arr; l ⊢ _cns◂{ y l }; l ⊢ _nil◂{} . 
								rset.min_f s0 ⊢ { s0 j0 }
								bl.t {} ⊢ b 
								exc_q { s0 j0 b } ⊢ { s0 j0 b } 
								hp { pv_n al tav tv_n tv y } ⊢ { pv_n al tav tv_n tv ha } 
								stt_v.arr ha ⊢ q 
								stt_v.ref q ⊢ h0  
								stt_v.hp { j0 h0 } ⊢ r0 
								RP.atm r0 ⊢ p0 
								∎ { pv_n al tav tv_n tv s0 p0 }
							∐ a'=t_axm.id.s8; l ⊢ _nil◂{} . 
								alc_vs s0 ⊢ { s0 j0 }
								stt_v.s8_reg j0 ⊢ p0 
								∎ { pv_n al tav tv_n tv s0 p0 }
							∐ a'=t_axm.id.r64; l ⊢ _nil◂{} . 
								alc_vs s0 ⊢ { s0 j0 } 
								stt_v.r64_reg j0 ⊢ p0 
								∎ { pv_n al tav tv_n tv s0 p0 }    
							∐. .
								hp_lst { pv_n al tav tv_n tv l } ⊢ { pv_n al tav tv_n tv hl } 
								stt_v.adt { a hl } ⊢ h0 
								alc_vs s0 ⊢ { s0 j0 } 
								stt_v.hp { j0 h0 } ⊢ r0 
								RP.atm r0 ⊢ p0 
								∎ { pv_n al tav tv_n tv s0 p0 } 
						∐ var◂i . 
							_lod_q { tv i } ⊢ { tv i v }
							∐ v ⊢ var_ln◂k . 
								f { pv_n al tav tv_n tv s0 k } ⊢| 
							∐. .
								assoc { al i } ⊢ { al i o } 
								∐ o ⊢ _some◂pvi . 
									alc_vs s0 ⊢ { s0 j0 } 
									stt_v.pv pvi ⊢ h 
									stt_v.hp { j0 h } ⊢ r0 
									RP.atm r0 ⊢ p0 
									∎ { pv_n al tav tv_n tv s0 p0 }
								∐. . 
									$ pv_n ⊢ pv_n,pvi 
									$ pvi ⊢ pvi,pvi0 
									_some pvi0 ⊢ o0 
									_cns { { i o0 } al } ⊢ al 
									_inc pv_n ⊢ pv_n 		
									alc_vs s0 ⊢ { s0 j0 } 
									stt_v.pv pvi ⊢ h 
									stt_v.hp { j0 h } ⊢ r0 
									RP.atm r0 ⊢ p0 
									∎ { pv_n al tav tv_n tv s0 p0 }
						∐ abs◂{ a k0 } . 
							» "alc_type_k.f abs" _ ⊢ se 
							_emt se ⊢ se 
							∎|  
						∐. imp◂{ k0 k1 } .
							» "alc_type_k.f imp" _ ⊢ se 
							_emt se ⊢ se 
							∎| 
			@.f_lst { pv_n al tav tv_n tv s0 l } 
				$ l ⊢ 
				∐ _cns◂{ k l } . 
					f { pv_n al tav tv_n tv s0 k } ⊢ { pv_n al tav tv_n tv s0 p }
					f_lst { pv_n al tav tv_n tv s0 l } ⊢ { pv_n al tav tv_n tv s0 l }
					_cns { p l } ⊢ l 
					∎ { pv_n al tav tv_n tv s0 l }
				∐. _nil◂{} . 
					_nil {} ⊢ l 
					∎ { pv_n al tav tv_n tv s0 l }
			∎∎
	§§ crt_type_k 
		§ 
	 		@.dst_ptn { tv rv p } 
				$ p ⊢ 
				∐ RP.rcd◂l . 
					dst_ptn_lst { tv rv l } ⊢ { tv rv l } 
					RP.rcd l ⊢ k 
					∎ { tv rv k }
				∐. RP.atm◂r . 
					$ r ⊢ 
					∐ ast.wc◂o . 
						$ o ⊢ 
						∐ _some◂r . 
							_lod_q { rv r } ⊢ { rv r v } 
							var v ⊢ y 
							RP.atm y ⊢ y 
							∎ { tv rv y } 
						∐. _none◂{} . 
							∎| 
					∐. ast.dst_reg◂r . 
						_lod_q { rv r } ⊢ { rv r v } 
						var v ⊢ y 
						RP.atm y ⊢ y 
						∎ { tv rv y } 
			@.dst_ptn_lst { tv rv l }
				$ l ⊢ 
				∐ _cns◂{ p l } . 
					dst_ptn { tv rv p } ⊢ { tv rv k } 
					dst_ptn_lst { tv rv l } ⊢ { tv rv l } 
					_cns { k l } ⊢ l 
					∎ { tv rv l }
				∐. _nil◂{} .
					_nil {} ⊢ l 
					∎ { tv rv l }
		§ cst { ev c }
			$ c ⊢ 
			∐ ast.cst_v◂v . 
				$ v ⊢ 
				∐ ast.r64◂x .
					t_axm.r64 {} ⊢ y 
					∎ { ev y }
				∐. ast.s8◂s . 
					t_axm.s8 {} ⊢ y 
					∎ { ev y }  
			∐. ast.cst_name◂i . 
				_lod_q { ev i } ⊢ { ev i vi } 
				var vi ⊢ y 
				RP.atm y ⊢ y 
				∎ { ev y }
		§ 
	 		@.src_ptn { ev tv rv p } 
				$ p ⊢ 
				∐ RP.rcd◂l . 
					src_ptn_lst { ev tv rv l } ⊢ { ev tv rv l } 
					RP.rcd l ⊢ k 
					∎ { ev tv rv k }
				∐. RP.atm◂r . 
					$ r ⊢ 
					∐ ast.im_reg◂c0 . 
						cst { ev c0 } ⊢ { ev y } 
						∎ { ev tv rv y } 
					∐. ast.src_reg◂r . 
						_lod_q { rv r } ⊢ { rv r v } 
						var v ⊢ y 
						RP.atm y ⊢ y 
						∎ { ev tv rv y } 
			@.src_ptn_lst { ev tv rv l }
				$ l ⊢ 
				∐ _cns◂{ p l } . 
					src_ptn { ev tv rv p } ⊢ { ev tv rv k } 
					src_ptn_lst { ev tv rv l } ⊢ { ev tv rv l } 
					_cns { k l } ⊢ l 
					∎ { ev tv rv l }
				∐. _nil◂{} .
					_nil {} ⊢ l 
					∎ { ev tv rv l }
		∎∎	 
	§§ mk_adt 
		§ @.inst { al h }
			∐ h ⊢ stt_v.pv◂p . 
				assoc { al p } ⊢ { al p o }
				∐ o ⊢ _some◂h . 
					∎ { al h } 
				∐. . 
					» "mk_adt.inst 0" _ ⊢ se 
					_emt se ⊢ se 
					∎| 
			∐ h ⊢ stt_v.adt◂{ ax hl } . 
				inst_lst { al hl } ⊢ { al hl } 
				stt_v.adt { ax hl } ⊢ h 
				∎ { al h } 
			∐ h ⊢ stt_v.ref◂q; q ⊢ stt_v.arr◂ha . 
				inst { al ha } ⊢ { al ha } 
				stt_v.arr ha ⊢ q 
				stt_v.ref q ⊢ h 
				∎ { al h } 
			∐ h ⊢ stt_v.ref◂q; q ⊢ stt_v.rcd◂l . 
				inst_lst { al l } ⊢ { al l } 
				stt_v.rcd l ⊢ q 
				stt_v.ref q ⊢ h 
				∎ { al h }
			∐. . 
				∎ { al h }
			@.inst_lst { al l } 
				$ l ⊢ 
				∐ _cns◂{ h l } . 
					inst { al h } ⊢ { al h } 
					inst_lst { al l } ⊢ { al l } 
					_cns { h l } ⊢ l 
					∎ { al l } 
				∐. _nil◂{} . 
					_nil {} ⊢ l 
					∎ { al l }
		§ @.lp { ql pl al } 
			∐ ql ⊢ _cns◂{ qi ql }; pl ⊢ _cns◂{ pi pl } . 
				_some qi ⊢ o 
				_cns { { pi o } al } ⊢ al 
				lp { ql pl al } ⊢| 
			∐ ql ⊢ _nil◂{}; pl ⊢ _nil◂{} . 
				∎ al 
			∐. . 
				» "mk_adt.lp 0" _ ⊢ se 
				_emt se ⊢ se 
				∎| 
		§ f { ql pl ipl }	
			_nil {} ⊢ al 
			lp { ql pl al } ⊢ al
			inst_lst { al ipl } ⊢ { al ipl }
			∎ ipl  
		∎∎ 
	
	§§ emt
		§§ reg_idx  
			§ r13 = 0r 
			§ r14 = 1r 
			§ r8 = 2r 
			§ r9 = 3r 
			§ r10 = 4r 
			§ r11 = 5r 
			§ rcx = 6r 
			§ rdx = 7r 
			∎∎ 
		§ lb_etr { lb e } 
			» _^ lb ⊢ lb,s 
				"LB_" 0d' ":\n" // 
			rp8.add_s8 { e s } ⊢ e 
			∎ { lb e }
		§ jmp_lb { lb e } 
			» _^ lb ⊢ lb,s0 
				"\tjmp LB_" 0d' "\n" // 
			rp8.add_s8 { e s0 } ⊢ e 
			∎ { lb e } 
		§ jg_lb { lb e } 
			» _^ lb ⊢ lb,s0 
				"\tjg LB_" 0d' "\n" // 
			rp8.add_s8 { e s0 } ⊢ e 
			∎ { lb e } 
		§ jnz_lb { lb e } 
			» _^ lb ⊢ lb,s0 
				"\tjnz LB_" 0d' "\n" // 
			rp8.add_s8 { e s0 } ⊢ e 
			∎ { lb e } 
		§ jz_lb { lb e } 
			» _^ lb ⊢ lb,s0 
				"\tjz LB_" 0d' "\n" // 
			rp8.add_s8 { e s0 } ⊢ e 
			∎ { lb e } 
		§ jl_lb { lb e } 
			» _^ lb ⊢ lb,s0 
				"\tjl LB_" 0d' "\n" // 
			rp8.add_s8 { e s0 } ⊢ e 
			∎ { lb e } 
		§ skip { lb_n e0 }
			rp8.e {} ⊢ e1 
			$ lb_n ⊢ lb_n,lb0 
			_inc lb_n ⊢ lb_n 
			» _^ lb0 ⊢ lb0,s0 
				"\tjmp LB_" 0d' "\n" // 
			rp8.add_s8 { e1 s0 } ⊢ e1 
			rp8.cct { e1 e0 } ⊢ e1 
			» _^ lb0 ⊢ lb0,s0 
				"LB_" 0d' ":\n" //
			rp8.add_s8 { e1 s0 } ⊢ e1 
			∎ { lb_n e1 }
		§ ret r 
			∐ r ⊢ _some◂lb . 
				» _^ lb ⊢ lb,s0 
					"\tjmp LB_" 0d' "\n" // 
				∎ s0 
			∐. . 
				» "\tret\n" _ ⊢ s0 
				∎ s0
		§ @.mk_jmp_tbl { lb_n n } 			 
			∐ n'=0r .
				rp8.e {} ⊢ e 
				_nil {} ⊢ lbl
				∎ { lb_n e lbl } 
			∐ n'=1r .
				» _^ lb_n ⊢ lb_n,s
					"LB_" 0d' // 
				rp8.of_s8 s ⊢ e 
				$ lb_n ⊢ lb_n,lb0 
				_inc lb_n ⊢ lb_n  
				_nil {} ⊢ lbl 
				_cns { lb0 lbl } ⊢ lbl
				∎ { lb_n e lbl }
			∐. . 
				» _^ lb_n ⊢ lb_n,s 
					"LB_" 0d' "," //
				rp8.of_s8 s ⊢ es  
				_dec n ⊢ n 
				$ lb_n ⊢ lb_n,lb0 
				_inc lb_n ⊢ lb_n 
				mk_jmp_tbl { lb_n n } ⊢ { lb_n e lbl } 
				rp8.cct { es e } ⊢ e 
				_cns { lb0 lbl } ⊢ lbl 
				∎ { lb_n e lbl }
		§ REG_N = 8r 
		§ mk_rbp rsp 
			» REG_N _ ⊢ rbp 
			_add { rbp rsp } ⊢ { rbp rsp } 
			∎ { rsp rbp } 
		§ mk_rsp p0 
			rset.ini {} ⊢ v0 
			stt_v.mk_rset { p0 v0 } ⊢ v0 
			rset.max_t v0 ⊢ { v0 j0 }
			» REG_N _ ⊢ n0
			_setge { j0 n0 } ⊢ { j0 n0 b }
			∐ b'=0r . 
				» 0r _ ⊢ rsp 
				∎ rsp 
			∐. .
				_sub { j0 n0 } ⊢ { j0 n0 } 
				_inc j0 ⊢ rsp 
				∎ rsp  
		§ sub_rsp n 
			∐ n'=0r . 
				» "" _ ⊢ s 
				∎ { n s } 
			∐. . 
				$ n ⊢ n,x 
				» 3r _ ⊢ l 
				_shl { x l } ⊢ { x _ } 
				» _^ x ⊢ x,s 
					##"\tlea rsp,[rsp-8*" 0d' "]\n"
					"\tsub rsp," 0d' "\n" // 
				∎ { n s }
		§ add_rsp n 
			∐ n'=0r . 
				» "" _ ⊢ s 
				∎ { n s } 
			∐. . 
				$ n ⊢ n,x 
				» 3r _ ⊢ l 
				_shl { x l } ⊢ { x _ }  
				» _^ x ⊢ x,s 
					##"\tlea rsp,[rsp+8*" 0d' "]\n" 
					"\tadd rsp," 0d' "\n" // 
				∎ { n s }	
		§ set_rsp { rsp0 rsp1 } 
			∐ rsp0'=rsp1' .
				» "" _ ⊢ e 
				∎ { rsp0 rsp1 e } 
			∐. . 
				_setge { rsp0 rsp1 } ⊢ { rsp0 rsp1 b } 
				∐ b'=1r . 
					$ rsp0 ⊢ rsp0,n 
					_sub { n rsp1 } ⊢ { n rsp1 } 
					add_rsp n ⊢ { n e } 
					∎ { rsp0 rsp1 e } 
				∐. . 
					$ rsp1 ⊢ rsp1,n 
					_sub { n rsp0 } ⊢ { n rsp0 } 
					sub_rsp n ⊢ { n e } 
					∎ { rsp0 rsp1 e } 
		§ resize_rsp { rsp n }
			$ n ⊢ n,rsp1 
			» REG_N _ ⊢ rbp 
			_setge { n rbp } ⊢ { n rbp b } 
			∐ b'=1r . 
				_sub { rsp1 rbp } ⊢ { rsp1 rbp } 
				_inc rsp1 ⊢ rsp1 
				set_rsp { rsp rsp1 } ⊢ { rsp rsp1 e } 
				∎ { rsp1 n e }
			∐. . 
				add_rsp rsp ⊢ { rsp e } 
				» 0r _ ⊢ rsp0 
				∎ { rsp0 n e }
		§ set_rsp { rsp0 rsp1 e0 } 
			set_rsp { rsp0 rsp1 } ⊢ { rsp0 rsp1 e1 }
			rp8.add_s8 { e0 e1 } ⊢ e0 
			∎ { rsp1 e0 } 
		§ rb_rsp { rsp rsp0 lb0 e }
			set_rsp { rsp rsp0 e } ⊢ { rsp0 e } 
			jmp_lb { lb0 e } ⊢ { lb0 e } 
			∎ { rsp0 lb0 e } 
		§ c_call e 
			» _^ e ⊢ e,r 				
				"\tC_CALL " 0' "\n" 
				// 
			∎ { e r }
		##§ push_c_regs = "\tpush rdx\n\tpush rcx\n\tpush r8\n\tpush r9\n\tpush r10\n\tpush r11\n" 
		§ push_c_regs = "\tC_PUSH_REGS\n" 
		##§ pop_c_regs = "\tpop r11\n\tpop r10\n\tpop r9\n\tpop r8\n\tpop rcx\n\tpop rdx\n" 					  
		§ pop_c_regs = "\tC_POP_REGS\n" 
		§ mlc_s8 l 
			$ l ⊢ l,l0 
			» 3r _ ⊢ x0  
			_shr { l0 x0 } ⊢ { l0 x0 } 
			_inc l0 ⊢ l0  
			$ l0 ⊢ l0,l1 
			_inc l0 ⊢ l0 
			_shl { l0 x0 } ⊢ { l0 x0 } 
			» _^ l,l0 ⊢ l,l0,e 
				`	mov rsi,1  
				"\tmov rdi," 1d' "\n" 
				`	xor rax,rax 
				`	C_CALL_SF calloc
				"\tmov QWORD [rax]," 0d' "\n"
				//
			∎ { l e }   
		§ @.mk_s8_lp { s l i e } 
			∐ i'=l' . 
				∎ { s l e } 
			∐. . 
				_lds { s i } ⊢ { s i b } 
				» _^ i,b ⊢ i,b,eb 
					"\tmov BYTE [rax+8+" 0d' "]," 1d' "\n" 
					// 
				rp8.of_s8 eb ⊢ eb 
				rp8.cct { e eb } ⊢ e 
				_inc i ⊢ i 
				mk_s8_lp { s l i e } ⊢| 
		§ mk_s8 s 
			_s8_len s ⊢ { s l } 
			mlc_s8 l ⊢ { l e0 } 
			rp8.of_s8 e0 ⊢ e0 
			» 0r _ ⊢ i 	
			mk_s8_lp { s l i e0 } ⊢ { s l e0 } 
			∎ { s e0 }
		§ @.mk_db_lp { s i l r } 
			∐ i'=l' . 
				» _^ r ⊢ r,e 
					0d' // 
				rp8.of_s8 e ⊢ e 
				∎ { s i l r e } 
			∐. . 
				_lds { s i } ⊢ { s i b } 
				» _^ b ⊢ b,eb 
					0d' "," // 
				_inc i ⊢ i 
				mk_db_lp { s i l r } ⊢ { s i l r e1 } 
				rp8.of_s8 eb ⊢ eb 
				rp8.cct { eb e1 } ⊢ e 
				∎ { s i l r e } 			
		§ mk_db { s r }  
			» 0r _ ⊢ i 
			_s8_len s ⊢ { s l } 
			mk_db_lp { s i l r } ⊢ { s i l r e } 
			rp8.mk_s8 e ⊢ { e se } 
			∎ { s r se }
		§ data_s8 { eds lb s }
			» 0r _ ⊢ r 
			mk_db { s r } ⊢ { s r se } 
			» _^ lb,se ⊢ lb,se,ss 
				"LB_" 0d' ": db " 1' "\n" // 
			rp8.add_s8 { eds ss } ⊢ eds 
			∎ { eds lb s } 
		§ reg { rsp i }  
			∐ i'=reg_idx.r13 . 
				» "r13" _ ⊢ r 
				bl.t {} ⊢ b
				∎ { rsp i r b } 
			∐ i'=1r . 
				» "r14" _ ⊢ r 
				bl.t {} ⊢ b
				∎ { rsp i r b } 
			∐ i'=2r . 
				» "r8" _ ⊢ r 
				bl.t {} ⊢ b
				∎ { rsp i r b } 
			∐ i'=3r . 
				» "r9" _ ⊢ r 
				bl.t {} ⊢ b
				∎ { rsp i r b } 
			∐ i'=4r . 
				» "r10" _ ⊢ r 
				bl.t {} ⊢ b
				∎ { rsp i r b } 
			∐ i'=5r . 
				» "r11" _ ⊢ r 
				bl.t {} ⊢ b
				∎ { rsp i r b } 
			∐ i'=6r . 
				» "rcx" _ ⊢ r 
				bl.t {} ⊢ b
				∎ { rsp i r b } 
			∐ i'=7r . 
				» "rdx" _ ⊢ r 
				bl.t {} ⊢ b
				∎ { rsp i r b } 
			∐. . 
				» REG_N _ ⊢ rbp 
				_add { rbp rsp } ⊢ { rbp rsp } 
				_setge { i rbp } ⊢ { i rbp b } 
				∐ b'=0r . 
					$ i ⊢ i,i0 
					» REG_N _ ⊢ n0
					_sub { i0 n0 } ⊢ { i0 n0 } 
					$ rsp ⊢ rsp,rsp0 
					_sub { rsp0 i0 } ⊢ { rsp0 i0 } 
					» _^ rsp0 ⊢ rsp0,sr 
						"QWORD [rsp-8+8*" 0d' "]" // 
					bl.f {} ⊢ br 
					∎ { rsp i sr br } 
				∐. . 
					» "emt.reg 0" _ ⊢ se0 
					_emt se0 ⊢ se0 
					_emt { rsp i } ⊢ { rsp i } 
					∎|
			§ brk_rsp { rsp i } 
				» REG_N _ ⊢ rbp 
				_add { rbp rsp } ⊢ { rbp rsp } 
				_setge { i rbp } ⊢ { i rbp b } 
				∐ b'=0r . 
					» "" _ ⊢ s 
					∎ { rsp i s }  
				∐. . 
					$ i ⊢ i,i0 
					_sub { i rbp } ⊢ { i rbp } 
					_inc i ⊢ i  
					_add { rsp i } ⊢ { rsp i }
					sub_rsp i ⊢ { i s } 
					∎ { rsp i0 s } 
			§ brk_rsp_e { rsp i e } 
				brk_rsp { rsp i } ⊢ { rsp i s } 
				rp8.add_s8 { e s } ⊢ e 
				∎ { rsp i e }
		§ reg_brk { rsp i }  
			∐ i'=0r . 
				» "r13" _ ⊢ r 
				bl.t {} ⊢ b
				» "" _ ⊢ sb
				∎ { rsp i r b sb } 
			∐ i'=1r . 
				» "r14" _ ⊢ r 
				bl.t {} ⊢ b 
				» "" _ ⊢ sb				
				∎ { rsp i r b sb } 
			∐ i'=2r . 
				» "r8" _ ⊢ r 
				bl.t {} ⊢ b
				» "" _ ⊢ sb
				∎ { rsp i r b sb } 
			∐ i'=3r . 
				» "r9" _ ⊢ r 
				bl.t {} ⊢ b
				» "" _ ⊢ sb
				∎ { rsp i r b sb } 
			∐ i'=4r . 
				» "r10" _ ⊢ r 
				bl.t {} ⊢ b
				» "" _ ⊢ sb
				∎ { rsp i r b sb } 
			∐ i'=5r . 
				» "r11" _ ⊢ r 
				bl.t {} ⊢ b
				» "" _ ⊢ sb
				∎ { rsp i r b sb } 
			∐ i'=6r . 
				» "rcx" _ ⊢ r 
				bl.t {} ⊢ b
				» "" _ ⊢ sb
				∎ { rsp i r b sb } 
			∐ i'=7r . 
				» "rdx" _ ⊢ r 
				bl.t {} ⊢ b
				» "" _ ⊢ sb
				∎ { rsp i r b sb } 
			∐. . 
				» REG_N _ ⊢ rbp 
				_add { rbp rsp } ⊢ { rbp rsp } 
				_setge { i rbp } ⊢ { i rbp b } 
				∐ b'=0r . 
					$ i ⊢ i,i0 
					» REG_N _ ⊢ n0
					_sub { i0 n0 } ⊢ { i0 n0 } 
					$ rsp ⊢ rsp,rsp0 
					_sub { rsp0 i0 } ⊢ { rsp0 i0 } 
					» _^ rsp0 ⊢ rsp0,sr 
						"QWORD [rsp-8+8*" 0d' "]" // 
					bl.f {} ⊢ br 
					» "" _ ⊢ sb
					∎ { rsp i sr br sb } 
				∐. . 
					brk_rsp { rsp i } ⊢ { rsp i sb } 
					$ i ⊢ i,i0 
					» REG_N _ ⊢ n0
					_sub { i0 n0 } ⊢ { i0 n0 } 
					$ rsp ⊢ rsp,rsp0 
					_sub { rsp0 i0 } ⊢ { rsp0 i0 } 
					» _^ rsp0 ⊢ rsp0,sr 
						"QWORD [rsp-8+8*" 0d' "]" // 
					bl.f {} ⊢ br 
					∎ { rsp i sr br sb }
					\[
					» "emt.reg_brk 0" _ ⊢ se0 
					_emt se0 ⊢ se0 
					_emt { rsp i } ⊢ { rsp i } 
					∎|
					\]  
			§ chk_rsp { rsp i } 
				» REG_N _ ⊢ rbp 
				_add { rbp rsp } ⊢ { rbp rsp } 
				_setge { i rbp } ⊢ { i rbp b } 
				∐ b'=0r . 
					» 0r _ ⊢ i1 
					∎ { rsp i i1 }  
				∐. . 
					$ i ⊢ i,i0 
					_sub { i rbp } ⊢ { i rbp } 
					_inc i ⊢ i  
					_add { rsp i } ⊢ { rsp i }
					∎ { rsp i0 i } 
			§ mov { rsp i0 i1 } 
				∐ i0'=i1' . 
					» "" _ ⊢ sr 
					∎ { rsp i0 i1 sr }
				∐. . 
					reg { rsp i0 } ⊢ { rsp i0 s0 b0 } 
					reg { rsp i1 } ⊢ { rsp i1 s1 b1 } 
					∐ b0 ⊢ bl.f◂{}; b1 ⊢ bl.f◂{} . 
						» _^ s0,s1 ⊢ s0,s1,sr 
							"\tMOV_RBX " 1' "," 0' "\n" // 
						∎ { rsp i0 i1 sr } 
					∐. . 
						» _^ s0,s1 ⊢ s0,s1,sr 
							"\tmov " 1' "," 0' "\n" // 
						∎ { rsp i0 i1 sr } 
			§ mov_e { rsp r0 r1 e } 
				mov { rsp r0 r1 } ⊢ { rsp r0 r1 s } 
				rp8.add_s8 { e s } ⊢ e 
				∎ { rsp r0 r1 e } 
			§ alt { rsp vs0 r0 sl e } 
				brk_rsp_e { rsp r0 e } ⊢ { rsp r0 e } 
				_lod_q { vs0 r0 } ⊢ { vs0 r0 b } 
				∐ b ⊢ bl.t◂{} . 
					alc_vs vs0 ⊢ { vs0 m0 } 
					brk_rsp_e { rsp m0 e } ⊢ { rsp m0 e } 
					mov_e { rsp r0 m0 e } ⊢ { rsp r0 m0 e } 
					$ r0 ⊢ r0,r0_0 
					_some m0 ⊢ o 
					_cns { { r0_0 o } sl } ⊢ sl 
					∎ { rsp vs0 r0 sl e } 
				∐. . 
					∎ { rsp vs0 r0 sl e }
			§ mov_brk { rsp i0 i1 } 
				∐ i0'=i1' . 
					» "" _ ⊢ sr 
					∎ { rsp i0 i1 sr }
				∐. . 
					brk_rsp { rsp i1 } ⊢ { rsp i1 sb0 } 
					reg { rsp i0 } ⊢ { rsp i0 s0 b0 } 
					reg { rsp i1 } ⊢ { rsp i1 s1 b1 } 
					∐ b0 ⊢ bl.f◂{}; b1 ⊢ bl.f◂{} . 
						» _^ s0,s1,sb0 ⊢ s0,s1,sb0,sr 
							2' 
							"\tmov rbx," 0' "\n" 
							"\tmov " 1' ",rbx\n" // 
						∎ { rsp i0 i1 sr } 
					∐. . 
						» _^ s0,s1,sb0 ⊢ s0,s1,sb0,sr 
							2' 
							"\tmov " 1' "," 0' "\n" // 
						∎ { rsp i0 i1 sr } 

			§ r64_to_rax { rsp evv a0 }
				∐ a0 ⊢ stt_v.hp_im◂v0; v0 ⊢ ast.r64◂x0 . 
					» _^ x0 ⊢ x0,sc0 
						"\tmov rax," 0d' "\n" //
					∎ { rsp evv sc0 }
				∐ a0 ⊢ stt_v.hp◂{ r0 h0 }; h0 ⊢ stt_v.r64◂{} . 
					reg { rsp r0 } ⊢ { rsp r0 sr0 br0 } 
					» _^ sr0 ⊢ sr0,sc0 
						"\tmov rax," 0' "\n" //
					∎ { rsp evv sc0 }
				∐ a0 ⊢ stt_v.hp_im_e◂i0 . 
					_lod_q { evv i0 } ⊢ { evv i0 k0 }
					∐ k0 ⊢ k_cst_v◂v0; v0 ⊢ ast.r64◂x0 . 
						» _^ x0 ⊢ x0,sc0 
						"\tmov rax," 0d' "\n" //
						∎ { rsp evv sc0 }
					∐. .
						» "r64_t0_rax" _ ⊢ ee 
						_emt ee ⊢ ee
						∎| 	
				∐. .
					» "r64_t0_rax" _ ⊢ ee 
					_emt ee ⊢ ee
					∎| 
		§§ reg 
			¶ t 
				∐ rdi : {} 
				∐ rsi : {} 
				∐ rax : {} 
				∐ idx : _r64  
			§ eq { r0 r1 } 
				∐ r0 ⊢ rdi◂{}; r1 ⊢ rdi◂{} . 
					rdi {} ⊢ r0 
					rdi {} ⊢ r1 
					bl.t {} ⊢ b 
					∎ { r0 r1 b }
				∐ r0 ⊢ rsi◂{}; r1 ⊢ rsi◂{} . 
					rsi {} ⊢ r0 
					rsi {} ⊢ r1 
					bl.t {} ⊢ b 
					∎ { r0 r1 b }
				∐ r0 ⊢ rax◂{}; r1 ⊢ rax◂{} . 
					rax {} ⊢ r0 
					rax {} ⊢ r1 
					bl.t {} ⊢ b 
					∎ { r0 r1 b }
				∐ r0 ⊢ idx◂i0; r1 ⊢ idx◂i1 . 
					∐ i0'=i1' . 
						idx i0 ⊢ r0 
						idx i1 ⊢ r1 
						bl.t {} ⊢ b 
						∎ { r0 r1 b }
					∐. .
						idx i0 ⊢ r0 
						idx i1 ⊢ r1 
						bl.f {} ⊢ b 
						∎ { r0 r1 b }
				∐. . 
					bl.f {} ⊢ b 
					∎ { r0 r1 b }
			§ pnt { rsp r } 
				$ r ⊢ 
				∐ rdi◂{} . 
					» "rdi" _ ⊢ s 
					bl.t {} ⊢ b 
					rdi {} ⊢ r 
					∎ { rsp r s b } 
				∐ rsi◂{} . 
					» "rsi" _ ⊢ s 
					bl.t {} ⊢ b
					rsi {} ⊢ r  
					∎ { rsp r s b }
				∐ rax◂{} . 
					» "rax" _ ⊢ s 
					bl.t {} ⊢ b
					rax {} ⊢ r  
					∎ { rsp r s b }
				∐. idx◂i . 
					reg { rsp i } ⊢ { rsp i s b } 
					idx i ⊢ r 
					∎ { rsp r s b }
			§ msk_ini {} 
				bl.f {} ⊢ b 
				$ b ⊢ b,b0 
				$ b ⊢ b,b1 
				∎ { b b0 b1 }
			§ msk_rdi { rdi rsi rax }
				bl.t {} ⊢ rdi0 
				∎ { rdi0 rsi rax }
			§ msk_rsi { rdi rsi rax }
				bl.t {} ⊢ rsi0 
				∎ { rdi rsi0 rax }
			§ msk_rax { rdi rsi rax }
				bl.t {} ⊢ rax0 
				∎ { rdi rsi rax0 }
			§ msk_r { m r }
				∐ r ⊢ rdi◂{} . 
					msk_rdi m ⊢ m 
					rdi {} ⊢ r 
					∎ { m r }
				∐ r ⊢ rsi◂{} . 
					msk_rsi m ⊢ m 
					rsi {} ⊢ r 
					∎ { m r }
				∐ r ⊢ rax◂{} . 
					msk_rax m ⊢ m 
					rax {} ⊢ r 
					∎ { m r }
				∐. . 
					∎ { m r }
			§ alc_r { rdi rsi rax } 
				∐ rdi ⊢ bl.f◂{} . 
					bl.t {} ⊢ rdi0
					rdi {} ⊢ r 
					∎ { { rdi0 rsi rax } r }
				∐. . 
					∐ rsi ⊢ bl.f◂{} . 
						bl.t {} ⊢ rsi0
						rsi {} ⊢ r 
						∎ { { rdi rsi0 rax } r } 
					∐. . 
						∐ rax ⊢ bl.f◂{} . 
							bl.t {} ⊢ rax0
							rax {} ⊢ r 
							∎ { { rdi rsi rax0 } r } 
						∐. . 
							» "alc_r 0" _ ⊢ ee0 
							_emt ee0 ⊢ _ 
							∎| 
					
			∎∎
		§§ mov 
			¶ o 
				∐ o8 : {} 
				∐ o4 : {} 
				∐ o2 : {} 
				∐ o1 : {} 
			§ pnt_o o 
				$ o ⊢ 
				∐ o8◂{} . 
					» "8*" _ ⊢ s 
					∎ s 
				∐ o4◂{} . 
					» "4*" _ ⊢ s 
					∎ s
				∐ o2◂{} . 
					» "2*" _ ⊢ s 
					∎ s
				∐. o1◂{} . 
					» "1*" _ ⊢ s 
					∎ s
			¶ w 
				∐ w64 : {} 
				∐ w32 : {}
				∐ w16 : {} 
				∐ w8 : {}
			§ pnt_w w 
				$ w ⊢ 
				∐ w64◂{} . 
					» "QWORD" _ ⊢ s 
					∎ s 
				∐ w32◂{} . 
					» "DWORD" _ ⊢ s 
					∎ s 
				∐ w16◂{} . 
					» "WORD" _ ⊢ s 
					∎ s 
				∐. w8◂{} . 
					» "BYTE" _ ⊢ s 
					∎ s  
			§ emt_reg = reg 
			¶ ea 
				∐ reg : reg.t 
				∐ lea : { w reg.t _r64 _opn◂{ o reg.t } } 
			§ pnt { rsp ea } 
				$ ea ⊢ 
				∐ reg◂r . 
					reg.pnt { rsp r } ⊢ { rsp r sr br } 
					∎ { rsp sr br }
				∐. lea◂{ w r0 x oo } . 
					reg.pnt { rsp r0 } ⊢ { rsp r0 sr0 br0 } 
					pnt_w w ⊢ sw 
					∐ oo ⊢ _some◂{ o r1 } . 
						pnt_o o ⊢ so 
						reg.pnt { rsp r1 } ⊢ { rsp r1 sr1 br1 } 
						» _^ sw,x,sr0,so,sr1 ⊢ _,_,_,_,_,sc0 
							0' " [" 2' "+" 1d' "+" 3' 4' "]" // 
						bl.f {} ⊢ b 
						∎ { rsp sc0 b }
					∐. . 
						» _^ sw,x,sr0 ⊢ _,_,_,sc0 
							0' " [" 2' "+" 1d' "]" // 
						bl.f {} ⊢ b 
						∎ { rsp sc0 b }
			§ to_reg { rsp m r e }
				reg.pnt { rsp r } ⊢ { rsp r sr b } 
				∐ b ⊢ bl.f◂{} . 
					reg.alc_r m ⊢ { m rt } 
					reg.pnt { rsp rt } ⊢ { rsp rt srt brt }
					» _^ sr,srt ⊢ sr,srt,sc0 
						"\tmov " 0' "," 1' "\n" //
					rp8.add_s8 { e sc0 } ⊢ e 
					∎ { rsp m rt e } 
				∐. . 
					∎ { rsp m r e }
			§ mov { rsp ea0 ea1 } 
				rp8.e {} ⊢ e0 
				$ ea0 ⊢ 
				∐ reg◂r0 . 
					reg.pnt { rsp r0 } ⊢ { rsp r0 sr0 b0 } 
					$ ea1 ⊢ 
					∐ reg◂r1 . 
						reg.pnt { rsp r1 } ⊢ { rsp r1 sr1 b1 } 
						reg.eq { r0 r1 } ⊢ { r0 r1 b }
						$ b ⊢ 
						∐ bl.t◂{} . 
							∎ { rsp e0 } 
						∐. bl.f◂{} . 
							∐ b0 ⊢ bl.f◂{}; b1 ⊢ bl.f◂{} . 
								» _^ sr0,sr1 ⊢ sr0,sr1,sc0 
									"\tmov rdi," 0' "\n" 
									"\tmov " 1' ",rdi\n" // 
								rp8.add_s8 { e0 sc0 } ⊢ e0
								∎ { rsp e0 } 
							∐. . 
								» _^ sr0,sr1 ⊢ sr0,sr1,sc0 
									"\tmov " 1' "," 0' "\n" //
								rp8.add_s8 { e0 sc0 } ⊢ e0
								∎ { rsp e0 }
					∐. lea◂{ w1 r1_0 x1 oo1 } . 
						pnt_w w1 ⊢ sw 
						reg.msk_ini {} ⊢ m0 
						reg.msk_r { m0 r0 } ⊢ { m0 r0 } 
						reg.msk_r { m0 r1_0 } ⊢ { m0 r1_0 } 
						to_reg { rsp m0 r1_0 e0 } ⊢ { rsp m0 rt1_0 e0 } 
						reg.pnt { rsp rt1_0 } ⊢ { rsp rt1_0 srt1_0 _ }
						∐ oo1 ⊢ _some◂{ o1 r1_1 } . 
							pnt_o o1 ⊢ so 
							reg.msk_r { m0 r1_1 } ⊢ { m0 r1_1 } 
							to_reg { rsp m0 r1_1 e0 } ⊢ { rsp m0 rt1_1 e0 } 
							reg.pnt { rsp rt1_1 } ⊢ { rsp rt1_1 srt1_1 _ }
							$ b0 ⊢ 
							∐ bl.t◂{} . 
								» _^ sw,so,x1,sr0,srt1_0,srt1_1 ⊢ _,_,_,_,_,_,sc0 
									"\tmov " 0' " [" 4' "+" 2d' "+" 1' 5' "]," 3' "\n" // 
								rp8.add_s8 { e0 sc0 } ⊢ e0 
								∎ { rsp e0 }
							∐. bl.f◂{} . 
								reg.alc_r m0 ⊢ { m0 rt0 } 
								reg.pnt { rsp rt0 } ⊢ { rsp rt0 srt0 _ }
								» _^ sw,so,x1,sr0,srt1_0,srt1_1,srt0 ⊢ _,_,_,_,_,_,_,sc0
									"\tmov " 6' "," 3' "\n"  
									"\tmov " 0' " [" 4' "+" 2d' "+" 1' 5' "]," 6' "\n" // 
								rp8.add_s8 { e0 sc0 } ⊢ e0 
								∎ { rsp e0 }
						∐. . 
							$ b0 ⊢ 
							∐ bl.t◂{} . 
								» _^ sw,x1,sr0,srt1_0 ⊢ _,_,_,_,sc0 
									"\tmov " 0' " [" 3' "+" 1d' "]," 2' "\n" // 
								rp8.add_s8 { e0 sc0 } ⊢ e0 
								∎ { rsp e0 }
							∐. bl.f◂{} . 
								reg.alc_r m0 ⊢ { m0 rt0 } 
								reg.pnt { rsp rt0 } ⊢ { rsp rt0 srt0 _ }
								» _^ sw,x1,sr0,srt1_0,srt0 ⊢ _,_,_,_,_,sc0
									"\tmov " 4' "," 2' "\n"  
									"\tmov " 0' " [" 3' "+" 1d' "]," 4' "\n" // 
								rp8.add_s8 { e0 sc0 } ⊢ e0 
								∎ { rsp e0 }
				∐. lea◂{ w0 r0_0 x0 oo0 } . 
					$ ea1 ⊢ 
					∐ reg◂r1 . 	
						reg.pnt { rsp r1 } ⊢ { rsp r1 sr1 br1 } 
						pnt_w w0 ⊢ sw 
						reg.msk_ini {} ⊢ m0 
						reg.msk_r { m0 r1 } ⊢ { m0 r0 } 
						reg.msk_r { m0 r0_0 } ⊢ { m0 r0_0 } 
						to_reg { rsp m0 r0_0 e0 } ⊢ { rsp m0 rt0_0 e0 } 
						reg.pnt { rsp rt0_0 } ⊢ { rsp rt0_0 srt0_0 _ }
						∐ oo0 ⊢ _some◂{ o0 r0_1 } . 
							pnt_o o0 ⊢ so 
							reg.msk_r { m0 r0_1 } ⊢ { m0 r0_1 } 
							to_reg { rsp m0 r0_1 e0 } ⊢ { rsp m0 rt0_1 e0 } 
							reg.pnt { rsp rt0_1 } ⊢ { rsp rt0_1 srt0_1 _ }
							$ br1 ⊢ 
							∐ bl.t◂{} . 
								» _^ sw,so,x0,sr1,srt0_0,srt0_1 ⊢ _,_,_,_,_,_,sc0 
									"\tmov " 3' "," 0' " [" 4' "+" 2d' "+" 1' 5' "]\n" // 
								rp8.add_s8 { e0 sc0 } ⊢ e0 
								∎ { rsp e0 }
							∐. bl.f◂{} . 
								reg.alc_r m0 ⊢ { m0 rt0 } 
								reg.pnt { rsp rt0 } ⊢ { rsp rt0 srt0 _ }
								» _^ sw,so,x0,sr1,srt0_0,srt0_1,srt0 ⊢ _,_,_,_,_,_,_,sc0
									"\tmov " 6' "," 0' " [" 4' "+" 2d' "+" 1' 5' "]\n" 
									"\tmov " 3' "," 6' "\n" //
								rp8.add_s8 { e0 sc0 } ⊢ e0 
								∎ { rsp e0 }
						∐. . 
							$ br1 ⊢ 
							∐ bl.t◂{} . 
								» _^ sw,x0,sr1,srt0_0 ⊢ _,_,_,_,sc0 
									"\tmov " 2' "," 0' " [" 3' "+" 1d' "]\n" // 
								rp8.add_s8 { e0 sc0 } ⊢ e0 
								∎ { rsp e0 }
							∐. bl.f◂{} . 
								reg.alc_r m0 ⊢ { m0 rt0 } 
								reg.pnt { rsp rt0 } ⊢ { rsp rt0 srt0 _ }
								» _^ sw,x0,sr1,srt0_0,srt0 ⊢ _,_,_,_,_,sc0
									"\tmov " 4' "," 0' " [" 3' "+" 1d' "]\n" 
									"\tmov " 2' "," 4' "\n" //
								rp8.add_s8 { e0 sc0 } ⊢ e0 
								∎ { rsp e0 }
					∐. lea◂{ w1 r1_0 x1 oo1 } . 
						» "mov lea lea" _ ⊢ ee0 
						_emt ee0 ⊢ _ 
						∎| 
				\[
				§ idx_lea_idx_x { rsp i0 i1 x }
					reg.idx i0 ⊢ r0 
					reg.idx i1 ⊢ r1 
					_none ⊢ oo 
					w64 {} ⊢ w 
					lea { r1 w x oo } ⊢ ea1 
					reg r0 ⊢ ea0 
					mov { rsp ea0 ea1 } ⊢ { rsp e0 } 
					∎ { rsp e0 }
				§ cmp_BYTE_lea_im { rsp i x y } 
					reg { rsp i } ⊢ { rsp i si bi }
					∐ bi ⊢ bl.t◂{} . 
						» _^ si,x,y ⊢ _,_,_,sc0 
							"\tcmp BYTE [" 0' "+" 1' "]," 2d' "\n" // 
						∎ { rsp sc0 } 
					∐. . 
						» _^ si,x,y ⊢ _,_,_,sc0 
							"\tmov rdi," 0' "\n" 
							"\tcmp BYTE [rdi+" 1' "]," 2d' "\n" // 
						∎ { rsp sc0 } 
						\]
				§ idx_mem { rsp r0 m e0 } 
					emt_reg { rsp r0 } ⊢ { rsp r0 sr0 br0 } 
					∐ br0 ⊢ bl.t◂{} . 
						» _^ sr0,m ⊢ sr0,m,sc0 
							"\tmov " 0' "," 1' "\n" // 
						rp8.add_s8 { e0 sc0 } ⊢ e0 
						∎ { rsp r0 m e0 }
					∐. . 
						» _^ sr0,m ⊢ sr0,m,sc0 
							"\tMOV_RAX " 0' "," 1' "\n" // 
						rp8.add_s8 { e0 sc0 } ⊢ e0 
						∎ { rsp r0 m e0 }
				§ mem_idx { rsp m r1 e0 } 
					emt_reg { rsp r1 } ⊢ { rsp r1 sr br } 
					∐ br ⊢ bl.t◂{} . 
						» _^ sr,m ⊢ sr,m,sc0 
							"\tmov " 1' "," 0' "\n" // 
						rp8.add_s8 { e0 sc0 } ⊢ e0 
						∎ { rsp m r1 e0 }
					∐. . 
						» _^ sr,m ⊢ sr,m,sc0 
							"\tMOV_RAX " 1' "," 0' "\n" // 
						rp8.add_s8 { e0 sc0 } ⊢ e0 
						∎ { rsp m r1 e0 }
				§ idx_im { rsp r0 x e0 } 
					emt_reg { rsp r0 } ⊢ { rsp r0 sr0 br0 } 
					» _^ sr0,x ⊢ _,x,sc0 
						"\tmov " 0' "," 1d' "\n" //
					rp8.add_s8 { e0 sc0 } ⊢ e0 
					∎ { rsp r0 x e0 }
				§ idx_lea_idx_x { rsp r0 r1 x e0 }
					emt_reg { rsp r0 } ⊢ { rsp r0 sr0 br0 } 
					emt_reg { rsp r1 } ⊢ { rsp r1 sr1 br1 }
					$ br0 ⊢ 
					∐ bl.t◂{} . 
						$ br1 ⊢ 
						∐ bl.t◂{} . 
							» _^ sr0,sr1,x ⊢ sr0,sr1,x,sc0 
								"\tmov " 0' ", QWORD [" 1' "+" 2d' "]\n" // 
							rp8.add_s8 { e0 sc0 } ⊢ e0 
							∎ { rsp r0 r1 x e0 }
						∐. bl.f◂{} . 
							» _^ sr0,sr1,x ⊢ sr0,sr1,x,sc0 
								"\tmov rdi," 1' "\n" 
								"\tmov " 0' ", QWORD [rdi+" 2d' "]\n" // 
							rp8.add_s8 { e0 sc0 } ⊢ e0 
							∎ { rsp r0 r1 x e0 }
					∐. bl.f◂{} . 
						$ br1 ⊢ 
						∐ bl.t◂{} . 
							» _^ sr0,sr1,x ⊢ sr0,sr1,x,sc0 
								##"\tmov rdi, QWORD [" 1' "+" 2d' "]\n"
								##"\tmov " 0' ",rdi\n" 
								"\tMOV_RDI " 0' ", QWORD [" 1' "+" 2d' "]\n" // 
							rp8.add_s8 { e0 sc0 } ⊢ e0 
							∎ { rsp r0 r1 x e0 }
						∐. bl.f◂{} . 
							» _^ sr0,sr1,x ⊢ sr0,sr1,x,sc0 
								"\tmov rdi," 1' "\n" 
								##"\tmov rdi, QWORD [rdi+" 2d' "]\n" 
								##"\tmov " 0' ",rdi\n" 
								"\tMOV_RDI " 0' ", QWORD [rdi+" 2d' "]\n" // 
							rp8.add_s8 { e0 sc0 } ⊢ e0 
							∎ { rsp r0 r1 x e0 }
				§ lea_rax { rsp r x e } 
					emt_reg { rsp r } ⊢ { rsp r s b } 
					∐ b ⊢ bl.t◂{} . 
						» _^ s,x ⊢ _,x,sc0
							"\tmov QWORD [" 0' "+" 1d' "],rax\n" 
							// 
						rp8.add_s8 { e sc0 } ⊢ e
						∎ { rsp r x e } 
					∐. . 
						» _^ s,x ⊢ _,x,sc0
							"\tmov rbx," 0' "\n" 
							"\tmov QWORD [rbx+" 1d' "],rax\n" 
							// 
						rp8.add_s8 { e sc0 } ⊢ e
						∎ { rsp r x e } 
				§ lea_reg_idx { rsp s x i e } 
					emt_reg { rsp i } ⊢ { rsp i si bi } 
					∐ bi ⊢ bl.t◂{} . 
						» _^ s,x,si ⊢ s,x,_,sc0 
							"\tmov QWORD [" 0' "+" 1d' "]," 2' "\n" //
						rp8.add_s8 { e sc0 } ⊢ e 
						∎ { rsp s x i e } 
					∐. . 
						» _^ s,x,si ⊢ s,x,_,sc0 
							"\tMOV_RDI QWORD [" 0' "+" 1d' "]," 2' "\n" //
						rp8.add_s8 { e sc0 } ⊢ e 
						∎ { rsp s x i e } 
				§ idx_rax { rsp r0 e } 
					emt_reg { rsp r0 } ⊢ { rsp r0 sr br }
					» _^ sr ⊢ _,sc0 
						"\tmov " 0' ",rax\n" // 
					rp8.add_s8 { e sc0 } ⊢ e
					∎ { rsp r0 e }
				§ rax_idx { rsp r0 e } 
					emt_reg { rsp r0 } ⊢ { rsp r0 sr br }
					» _^ sr ⊢ _,sc0 
						"\tmov rax," 0' "\n" // 
					rp8.add_s8 { e sc0 } ⊢ e
					∎ { rsp r0 e }
				§ rax_im { x e } 
					» _^ x ⊢ x,s
						"\tmov rax," 0d' "\n" // 
					rp8.add_s8 { e s } ⊢ e 
					∎ { x e }
				§ rax_unt_n { n e } 
					» _^ n ⊢ n,s
						"\tmov rax,unt_" 0d' "\n" // 
					rp8.add_s8 { e s } ⊢ e 
					∎ { n e }
				§ idx_unt_n { rsp r n e } 
					emt_reg { rsp r } ⊢ { rsp r sr br } 
					» _^ sr,n ⊢ _,n,sc0 
						"\tmov " 0' ",unt_" 1d' "\n" // 
					rp8.add_s8 { e sc0 } ⊢ e 
					∎ { rsp r n e }
				§ rax_unt e 
					» "\tmov rax,unt\n" _ ⊢ s 
					rp8.add_s8 { e s } ⊢ e 
					∎ e 
				§ rax_set_n { n e } 
					» _^ n ⊢ n,sc0 
						"\tmov BYTE [rax+6]," 0d' "\n" // 
					rp8.add_s8 { e sc0 } ⊢ e 
					∎ { n e }
				§ idx_set_n { rsp r n e } 
					emt_reg { rsp r } ⊢ { rsp r sr br } 
					∐ br ⊢ bl.t◂{} . 
						» _^ sr,n ⊢ sr,n,sc0 
						"\tmov BYTE [" 0' "+6]," 1d' "\n" // 
						rp8.add_s8 { e sc0 } ⊢ e 
						∎ { rsp r n e }
					∐. . 
						rax_idx { rsp r e } ⊢ { rsp r e } 
						rax_set_n { n e } ⊢ { n e } 
						∎ { rsp r n e }
				§ idx_blk_n_rax { rsp r i e } 
					$ i ⊢ i,x 
					» 3r _ ⊢ xs 
					_shl { x xs } ⊢ { x _ } 
					» 8r _ ⊢ xa 
					_add { x xa } ⊢ { x _ } 
					mov.lea_rax { rsp r x e } ⊢ { rsp r _ e } 
					∎ { rsp r i e } 
				§ idx_idx_blk_n { rsp r0 r1 i e } 
					$ i ⊢ i,xn 
					» 3r _ ⊢ sn 
					_shl { xn sn } ⊢ { xn _ } 
					» 8r _ ⊢ an 
					_add { xn an } ⊢ { xn _ }
					mov.idx_lea_idx_x { rsp r0 r1 xn e } ⊢ { rsp r0 r1 _ e }
					∎ { rsp r0 r1 i e }
				§ idx_unt { rsp r e } 
					emt_reg { rsp r } ⊢ { rsp r sr br } 
					» _^ sr ⊢ _,sc0 
						"\tmov " 0' ",unt\n" // 
					rp8.add_s8 { e sc0 } ⊢ e 
					∎ { rsp r e }
			∎∎ 	
		§§ cmp 
			§ idx_idx { rsp r0 r1 e }
				reg { rsp r0 } ⊢ { rsp r0 sr0 b0 } 
				reg { rsp r1 } ⊢ { rsp r1 sr1 b1 } 
				∐ b1 ⊢ bl.t◂{} . 
					» _^ sr0,sr1 ⊢ sr0,sr1,sc 
						"\tcmp " 0' "," 1' "\n" //
					rp8.add_s8 { e sc } ⊢ e
					∎ { rsp r0 r1 e }  
				∐. . 
					» _^ sr0,sr1 ⊢ sr0,sr1,sc 
						"\tmov rdi," 1' "\n" 
						"\tcmp " 0' ",rdi\n" //
					rp8.add_s8 { e sc } ⊢ e
					∎ { rsp r0 r1 e }
			§ idx_im { rsp r0 x e }
				reg { rsp r0 } ⊢ { rsp r0 sr0 b0 } 
				» _^ sr0,x ⊢ sr0,x,sc 
					"\tcmp " 0' "," 1d' "\n" //
				rp8.add_s8 { e sc } ⊢ e
				∎ { rsp r0 x e }   
			∎∎
		§§ alc_mtc_ptn 
		§ @.lp { { gl lb1 rsp lb_n } isp mp rl evv rv irv tav tv_n tv vs0 e0 dl }
			$ mp ⊢ 
			∐ RP.rcd◂l1 . 
				$ isp ⊢ 
				∐ RP.rcd◂l0 . 
					lp_lst { { gl lb1 rsp lb_n } l0 l1 rl evv rv irv tav tv_n tv vs0 e0 dl } ⊢ { { gl lb1 rsp lb_n } rl evv rv irv tav tv_n tv vs0 e0 dl lr } 
					∐ lr ⊢ _some◂lr . 
						RP.rcd lr ⊢ p1 
						_some p1 ⊢ p1  
						∎ { { gl lb1 rsp lb_n } rl evv rv irv tav tv_n tv vs0 e0 dl p1 }
					∐. . 
						_none {} ⊢ p1 
						∎ { { gl lb1 rsp lb_n } rl evv rv irv tav tv_n tv vs0 e0 dl p1 } 
				∐. RP.atm◂a0 . 		
					∐ a0 ⊢ stt_v.hp◂{ r0 h0 }; h0 ⊢ stt_v.ref◂q0; q0 ⊢ stt_v.rcd◂l0 . 
						$ r0 ⊢ r0,r00 
						$ l0 ⊢ l0,l00 
						stt_v.rcd l00 ⊢ q0 
						stt_v.ref q0 ⊢ h0 
						##_cns { { r00 h0 } gl } ⊢ gl 
						» 0r _ ⊢ j0 
						$ r0 ⊢ r0,r0_0 
						lp_hp_lst { { gl lb1 rsp lb_n } j0 r0 l0 l1 rl evv rv irv tav tv_n tv vs0 e0 dl } ⊢ { { gl lb1 rsp lb_n } rl evv rv irv tav tv_n tv vs0 e0 dl l }
						∐ l ⊢ _some◂l . 
							∐ l ⊢ _nil◂{} . 
								_nil {} ⊢ l 
								RP.rcd l ⊢ p1
								_some p1 ⊢ p1  
								∎ { { gl lb1 rsp lb_n } rl evv rv irv tav tv_n tv vs0 e0 dl p1 }
							∐. . 
								$ gl ⊢ { gl_n gl } 
								gbg.pnt gl_n ⊢ { gl_n sg } 
								mov.mem_idx { rsp sg r0_0 e0 } ⊢ { rsp _ r0 e0 } 
								lst.len l ⊢ { l sl } 
								inc_x gl_n ⊢ { n0 gl_n }
								gbg.rcd sl ⊢ gb0 
								_cns { { n0 gb0 } gl } ⊢ gl 
								$ { gl_n gl } ⊢ gl 
								RP.rcd l ⊢ p1
								_some p1 ⊢ p1  
								∎ { { gl lb1 rsp lb_n } rl evv rv irv tav tv_n tv vs0 e0 dl p1 }
						∐. . 
							_none {} ⊢ p1 
							∎ { { gl lb1 rsp lb_n } rl evv rv irv tav tv_n tv vs0 e0 dl p1 }
					∐. .  
						» "mov_ptn.ptn_to_r d9" _ ⊢ ee0 
						_emt ee0 ⊢ _ 
						∎| 
			∐. RP.atm◂a1 .
				$ a1 ⊢ 
				∐ ast.mtc_wc◂o . 
					∐ o ⊢ _some◂wr . 
						$ isp ⊢ isp,isp0 
						_set_q { irv wr isp0 } ⊢ { irv wr }  
						$ isp ⊢ isp,isp0 
						_cns { isp0 dl } ⊢ dl 
						_some isp ⊢ isp 
						∎ { { gl lb1 rsp lb_n } rl evv rv irv tav tv_n tv vs0 e0 dl isp }
					∐. . 
						∎| 
				∐ ast.mtc_reg◂r1 . 
					$ isp ⊢ isp,isp0 
					_set_q { irv r1 isp0 } ⊢ { irv r1 }  
					_cns { r1 rl } ⊢ rl
					_some isp ⊢ isp
					∎ { { gl lb1 rsp lb_n } rl evv rv irv tav tv_n tv vs0 e0 dl isp }
				∐ ast.mtc_cst◂c1 . 
					$ c1 ⊢ 
					∐ ast.cst_v◂v1 . 
						stt_v.hp_im v1 ⊢ h 
						RP.atm h ⊢ p1
						_some p1 ⊢ p1  
						∎ { { gl lb1 rsp lb_n } rl evv rv irv tav tv_n tv vs0 e0 dl p1 }
					∐. ast.cst_name◂e1 . 
						stt_v.hp_im_e e1 ⊢ h 
						RP.atm h ⊢ p1 
						_some p1 ⊢ p1 
						∎ { { gl lb1 rsp lb_n } rl evv rv irv tav tv_n tv vs0 e0 dl p1 }
				∐. ast.mtc_agl◂{ ea1 mpa1 } . 
					_lod_q { evv ea1 } ⊢ { evv ea1 k1 } 
					∐ k1 ⊢ k_ctr◂{ ia1 na1 } .  
						$ isp ⊢ 
						∐ RP.atm◂a0 . 
							∐ a0 ⊢ stt_v.hp◂{ r0 h0 }; h0 ⊢ stt_v.adt◂{ ax0 ql0 } . 
								_lod_q { tav ax0 } ⊢ { tav ax0 { aw o0 } } 
								∐ o0 ⊢ _some◂{ vl0 kl0 pvl0 ipl0 } . 
									∐ lb1 ⊢ _some◂{ lb1 rsp0 } . 
										reg { rsp r0 } ⊢ { rsp r0 er0 br0 } 
										##» 6r _ ⊢ x0
										##mov.cmp_BYTE_lea_im { rsp r0 x0 ia1 } ⊢ { rsp sc0 } 
										inc_x lb_n ⊢ { lb2 lb_n } 
										inc_x lb_n ⊢ { lb3 lb_n }
										» _^ er0,ia1,lb2 ⊢ er0,ia1,lb2,ec1 
											"\tmov rdi," 0' "\n" 
											"\tcmp BYTE [rdi+6]," 1d' "\n" 
											"\tjnz LB_" 2d' "\n" //
										rp8.add_s8 { e0 ec1 } ⊢ e0 
										jmp_lb { lb3 e0 } ⊢ { lb3 e0 }
										lb_etr { lb2 e0 } ⊢ { lb2 e0 } 
										$ rsp ⊢ rsp,rsp1 
										rb_rsp { rsp1 rsp0 lb1 e0 } ⊢ { rsp0 lb1 e0 }
										lb_etr { lb3 e0 } ⊢ { lb3 e0 } 
										_some { lb1 rsp0 } ⊢ lb1 
										mk_adt.f { ql0 pvl0 ipl0 } ⊢ ipl0 
										$ ia1 ⊢ ia1,i1 
										lst.nth { ipl0 i1 } ⊢ { ip0 ipl0 }
										∐ ip0 ⊢ stt_v.ref◂iq0 . 
											stt_v.ref iq0 ⊢ ip0 
											lp_hp { { gl lb1 rsp lb_n } r0 ip0 mpa1 rl evv rv irv tav tv_n tv vs0 e0 dl } ⊢ { { gl lb1 rsp lb_n } rl evv rv irv tav tv_n tv vs0 e0 dl p1 }
											∐ p1 ⊢ _some◂p1 . 
												stt_v.stt_adt { ia1 na1 p1 } ⊢ p1 
												RP.atm p1 ⊢ p1
												_some p1 ⊢ p1  
												∎ { { gl lb1 rsp lb_n } rl evv rv irv tav tv_n tv vs0 e0 dl p1 }
											∐. . 
												∎ { { gl lb1 rsp lb_n } rl evv rv irv tav tv_n tv vs0 e0 dl p1 }												
										∐. . 
											alc_vs vs0 ⊢ { vs0 r2 } 
											brk_rsp { rsp r2 } ⊢ { rsp r2 sb0 } 
											rp8.add_s8 { e0 sb0 } ⊢ e0 
											##reg { rsp r2 } ⊢ { rsp r2 er2 br2 }
											$ gl ⊢ { gl_n gl } 
											gbg.pnt gl_n ⊢ { gl_n sg } 
											» _^ sg ⊢ _,sc0 
												"\tmov " 0' ",rdi\n" // 
											rp8.add_s8 { e0 sc0 } ⊢ e0 
											gbg.ln {} ⊢ gb0 
											inc_x gl_n ⊢ { n0 gl_n }
											_cns { { n0 gb0 } gl } ⊢ gl 
											$ { gl_n gl } ⊢ gl 
											» "QWORD [rdi+8]" _ ⊢ ms0 
											mov.idx_mem { rsp r2 ms0 e0 } ⊢ { rsp r2 ms0 e0 } 
											$ r2 ⊢ r2,r20 
											$ ip0 ⊢ ip0,ip00 
											##_cns { { r20 ip00 } gl } ⊢ gl 
											lp_hp { { gl lb1 rsp lb_n } r2 ip0 mpa1 rl evv rv irv tav tv_n tv vs0 e0 dl } ⊢ { { gl lb1 rsp lb_n } rl evv rv irv tav tv_n tv vs0 e0 dl p1 }
											∐ p1 ⊢ _some◂p1 . 
												stt_v.stt_adt { ia1 na1 p1 } ⊢ p1 
												RP.atm p1 ⊢ p1
												_some p1 ⊢ p1  
												∎ { { gl lb1 rsp lb_n } rl evv rv irv tav tv_n tv vs0 e0 dl p1 }											
											∐. . 
												∎ { { gl lb1 rsp lb_n } rl evv rv irv tav tv_n tv vs0 e0 dl p1 }
									∐. . 
										mk_adt.f { ql0 pvl0 ipl0 } ⊢ ipl0 
										$ ia1 ⊢ ia1,i1 
										lst.nth { ipl0 i1 } ⊢ { ip0 ipl0 }
										\[
										lp_hp { { gl lb1 rsp lb_n } r0 ip0 mpa1 rl evv rv irv tav tv_n tv vs0 e0 dl } ⊢ { { gl lb1 rsp lb_n } rl evv rv irv tav tv_n tv vs0 e0 dl p1 }
										∐ p1 ⊢ _some◂p1 . 
											stt_v.stt_adt { ia1 na1 p1 } ⊢ p1 
											RP.atm p1 ⊢ p1 
											_some p1 ⊢ p1 
											∎ { { gl lb1 rsp lb_n } rl evv rv irv tav tv_n tv vs0 e0 dl p1 }
										∐. . 
											∎ { { gl lb1 rsp lb_n } rl evv rv irv tav tv_n tv vs0 e0 dl p1 }											
											\]
										∐ ip0 ⊢ stt_v.ref◂iq0 . 
											stt_v.ref iq0 ⊢ ip0 
											lp_hp { { gl lb1 rsp lb_n } r0 ip0 mpa1 rl evv rv irv tav tv_n tv vs0 e0 dl } ⊢ { { gl lb1 rsp lb_n } rl evv rv irv tav tv_n tv vs0 e0 dl p1 }
											∐ p1 ⊢ _some◂p1 . 
												stt_v.stt_adt { ia1 na1 p1 } ⊢ p1 
												RP.atm p1 ⊢ p1
												_some p1 ⊢ p1  
												∎ { { gl lb1 rsp lb_n } rl evv rv irv tav tv_n tv vs0 e0 dl p1 }
											∐. . 
												∎ { { gl lb1 rsp lb_n } rl evv rv irv tav tv_n tv vs0 e0 dl p1 }												
										∐. . 
											alc_vs vs0 ⊢ { vs0 r2 } 
											brk_rsp { rsp r2 } ⊢ { rsp r2 sb0 } 
											rp8.add_s8 { e0 sb0 } ⊢ e0 
											$ gl ⊢ { gl_n gl } 
											gbg.pnt gl_n ⊢ { gl_n sg } 
											» _^ sg ⊢ _,sc0 
												"\tmov " 0' ",rdi\n" // 
											rp8.add_s8 { e0 sc0 } ⊢ e0 
											gbg.ln {} ⊢ gb0 
											inc_x gl_n ⊢ { n0 gl_n }
											_cns { { n0 gb0 } gl } ⊢ gl 
											$ { gl_n gl } ⊢ gl 
											» "QWORD [rdi+8]" _ ⊢ ms0 
											mov.idx_mem { rsp r2 ms0 e0 } ⊢ { rsp r2 ms0 e0 } 
											$ r2 ⊢ r2,r20 
											$ ip0 ⊢ ip0,ip00 
											##_cns { { r20 ip00 } gl } ⊢ gl 
											lp_hp { { gl lb1 rsp lb_n } r2 ip0 mpa1 rl evv rv irv tav tv_n tv vs0 e0 dl } ⊢ { { gl lb1 rsp lb_n } rl evv rv irv tav tv_n tv vs0 e0 dl p1 }
											∐ p1 ⊢ _some◂p1 . 
												stt_v.stt_adt { ia1 na1 p1 } ⊢ p1 
												RP.atm p1 ⊢ p1
												_some p1 ⊢ p1  
												∎ { { gl lb1 rsp lb_n } rl evv rv irv tav tv_n tv vs0 e0 dl p1 }											
											∐. . 
												∎ { { gl lb1 rsp lb_n } rl evv rv irv tav tv_n tv vs0 e0 dl p1 }
								∐. . 
									» "mov_ptn.ptn_to_r d8" _ ⊢ ee0 
										_emt ee0 ⊢ _ 
									∎| 
							∐ a0 ⊢ stt_v.stt_adt◂{ ia0 rn0 pa0 } . 
								∐ ia0'=ia1' . 
									lp { { gl lb1 rsp lb_n } pa0 mpa1 rl evv rv irv tav tv_n tv vs0 e0 dl } ⊢ { { gl lb1 rsp lb_n } rl evv rv irv tav tv_n tv vs0 e0 dl p1 }
									∐ p1 ⊢ _some◂p1 . 
										stt_v.stt_adt { ia1 na1 p1 } ⊢ p1 
										RP.atm p1 ⊢ p1 
										_some p1 ⊢ p1 
										∎ { { gl lb1 rsp lb_n } rl evv rv irv tav tv_n tv vs0 e0 dl p1 }
									∐. . 
										∎ { { gl lb1 rsp lb_n } rl evv rv irv tav tv_n tv vs0 e0 dl p1 }										
								∐. . 
									∐ lb1 ⊢ _some◂{ lb1 rsp0 } . 
										$ rsp ⊢ rsp,rsp1 
										rb_rsp { rsp1 rsp0 lb1 e0 } ⊢ { rsp0 lb1 e0 }
										##» _^ lb1 ⊢ lb1,ec1 
										##	"\tjmp LB_" 0d' "\n" //
										##rp8.add_s8 { e0 ec1 } ⊢ e0 
										_some { lb1 rsp0 } ⊢ lb1 
										_none {} ⊢ p1 
										∎ { { gl lb1 rsp lb_n } rl evv rv irv tav tv_n tv vs0 e0 dl p1 } 											
									∐. . 
										» _^ _ ⊢ ec1
											`	mov rdi,rt_err0 
											` call emt_stg
											`	mov QWORD [err_n],0xffff_0007
											`	jmp err
											// 
										rp8.add_s8 { e0 ec1 } ⊢ e0 
										_none {} ⊢ p1 
										∎ { { gl lb1 rsp lb_n } rl evv rv irv tav tv_n tv vs0 e0 dl p1 } 											
							∐. .
								» "mov_ptn.ptn_to_r d6" _ ⊢ ee0 
								_emt ee0 ⊢ _ 
								∎|  
						∐. RP.rcd◂l0 . 
							» "mov_ptn.ptn_to_r d7" _ ⊢ ee0 
							_emt ee0 ⊢ _ 
							∎| 
					∐. . 
						» "alc_mtc_ptn 6" _ ⊢ se 
						_emt se ⊢ se  
						∎|
			@.lp_hp { { gl lb1 rsp lb_n } r0 hp mp rl evv rv irv tav tv_n tv vs0 e0 dl }
				$ mp ⊢ 
				∐ RP.rcd◂l1 . 
					∐ hp ⊢ stt_v.ref◂q0; q0 ⊢ stt_v.rcd◂l0 . 
						$ r0 ⊢ r0,r0_0 
						$ l0 ⊢ l0,l00 
						stt_v.rcd l00 ⊢ q0 
						stt_v.ref q0 ⊢ h0 
						##_cns { { r00 h0 } gl } ⊢ gl 
						» 0r _ ⊢ j0 
						lp_hp_lst { { gl lb1 rsp lb_n } j0 r0 l0 l1 rl evv rv irv tav tv_n tv vs0 e0 dl } ⊢ { { gl lb1 rsp lb_n } rl evv rv irv tav tv_n tv vs0 e0 dl l }
						∐ l ⊢ _some◂l . 
							∐ l ⊢ _nil◂{} . 
								_nil {} ⊢ l
								RP.rcd l ⊢ p1 
								_some p1 ⊢ p1 
								∎ { { gl lb1 rsp lb_n } rl evv rv irv tav tv_n tv vs0 e0 dl p1 }
							∐. . 
								$ gl ⊢ { gl_n gl } 
								gbg.pnt gl_n ⊢ { gl_n sg } 
								mov.mem_idx { rsp sg r0_0 e0 } ⊢ { rsp _ r0 e0 } 
								lst.len l ⊢ { l sl } 
								inc_x gl_n ⊢ { n0 gl_n }
								gbg.rcd sl ⊢ gb0 
								_cns { { n0 gb0 } gl } ⊢ gl 
								$ { gl_n gl } ⊢ gl 
								RP.rcd l ⊢ p1 
								_some p1 ⊢ p1 
								∎ { { gl lb1 rsp lb_n } rl evv rv irv tav tv_n tv vs0 e0 dl p1 }
						∐. . 
							_none {} ⊢ p1 
							∎ { { gl lb1 rsp lb_n } rl evv rv irv tav tv_n tv vs0 e0 dl p1 }							
					∐ hp ⊢ stt_v.pv◂pv . 
						∐ lb1 ⊢ _some◂{ lb1 rsp0 } . 
							##» _^ lb1 ⊢ lb1,se0 
							##	"\tjmp LB_" 0d' "\n" //
							##rp8.add_s8 { e0 se0 } ⊢ e0
							$ rsp0 ⊢ rsp0,rsp00 
							rb_rsp { rsp rsp00 lb1 e0 } ⊢ { rsp lb1 e0 }
							_none {} ⊢ p1 
							_some { lb1 rsp0 } ⊢ lb1 
							∎ { { gl lb1 rsp lb_n } rl evv rv irv tav tv_n tv vs0 e0 dl p1 }							
						∐. . 	
							» "alc_mtc_ptn.ptn_to_r d7" _ ⊢ ee0 
							_emt ee0 ⊢ _ 
							∎| 
					∐. . 
						» "alc_mtc_ptn.ptn_to_r d8" _ ⊢ ee0 
						_emt ee0 ⊢ _ 
						∎| 
				∐. RP.atm◂a1 . 
					$ a1 ⊢ 
					∐ ast.mtc_wc◂o . 
						∐ o ⊢ _some◂wr . 
							##rset.min_f vs0 ⊢ { vs0 im0 } 
							##exc_q { vs0 im0 b0 } ⊢ { vs0 im0 b0 } 
							##stt_v.hp { im0 hp } ⊢ h0 
							rset.set_t { vs0 r0 } ⊢ { vs0 r0 }
							stt_v.hp { r0 hp } ⊢ h0 
							RP.atm h0 ⊢ isp
							$ isp ⊢ isp,isp0 
							_set_q { irv wr isp0 } ⊢ { irv wr }  
							$ isp ⊢ isp,isp0 
							_cns { isp0 dl } ⊢ dl
							_some isp ⊢ isp 
							∎ { { gl lb1 rsp lb_n } rl evv rv irv tav tv_n tv vs0 e0 dl isp }
						∐. . 
							» "mov_ptn.ptn_to_r d4" _ ⊢ ee0 
										_emt ee0 ⊢ _ 
							∎| 
					∐ ast.mtc_reg◂r1 . 
						##rset.min_f vs0 ⊢ { vs0 im0 } 
						##exc_q { vs0 im0 b0 } ⊢ { vs0 im0 b0 } 
						##stt_v.hp { im0 hp } ⊢ h0 
						rset.set_t { vs0 r0 } ⊢ { vs0 r0 }
						stt_v.hp { r0 hp } ⊢ h0 
						RP.atm h0 ⊢ isp
						$ isp ⊢ isp,isp0 
						_set_q { irv r1 isp0 } ⊢ { irv r1 }  
						_cns { r1 rl } ⊢ rl
						_some isp ⊢ isp 
						∎ { { gl lb1 rsp lb_n } rl evv rv irv tav tv_n tv vs0 e0 dl isp }
					∐ ast.mtc_cst◂c1 . 
						$ c1 ⊢ 
						∐ ast.cst_v◂v1 . 
							stt_v.hp_im v1 ⊢ h 
							RP.atm h ⊢ p1 
							_some p1 ⊢ p1 
							∎ { { gl lb1 rsp lb_n } rl evv rv irv tav tv_n tv vs0 e0 dl p1 }
						∐. ast.cst_name◂e1 . 
							stt_v.hp_im_e e1 ⊢ h 
							RP.atm h ⊢ p1 
							_some p1 ⊢ p1 
							∎ { { gl lb1 rsp lb_n } rl evv rv irv tav tv_n tv vs0 e0 dl p1 }
					∐. ast.mtc_agl◂{ ea1 mpa1 } . 
						_lod_q { evv ea1 } ⊢ { evv ea1 k1 } 
						∐ k1 ⊢ k_ctr◂{ ia1 na1 }; hp ⊢ stt_v.adt◂{ ax0 ql0 } . 
							_lod_q { tav ax0 } ⊢ { tav ax0 { aw0 o0 } } 
							∐ o0 ⊢ _some◂{ vl0 kl0 pvl0 ipl0 } . 
								∐ lb1 ⊢ _some◂{ lb1 rsp0 } . 
									reg { rsp r0 } ⊢ { rsp r0 er0 br0 } 
									inc_x lb_n ⊢ { lb2 lb_n } 
									inc_x lb_n ⊢ { lb3 lb_n }
									» _^ er0,ia1,lb2 ⊢ er0,ia1,lb2,ec1 
										"\tmov rdi," 0' "\n" 
										"\tcmp BYTE [rdi+6]," 1d' "\n" 
										"\tjnz LB_" 2d' "\n" //
									rp8.add_s8 { e0 ec1 } ⊢ e0 
									jmp_lb { lb3 e0 } ⊢ { lb3 e0 }
									lb_etr { lb2 e0 } ⊢ { lb2 e0 } 
									$ rsp ⊢ rsp,rsp1 
									rb_rsp { rsp1 rsp0 lb1 e0 } ⊢ { rsp0 lb1 e0 }
									lb_etr { lb3 e0 } ⊢ { lb3 e0 } 
									_some { lb1 rsp0 } ⊢ lb1 
									mk_adt.f { ql0 pvl0 ipl0 } ⊢ ipl0 
									$ ia1 ⊢ ia1,i1 
									lst.nth { ipl0 i1 } ⊢ { ip0 ipl0 }
									lp_hp { { gl lb1 rsp lb_n } r0 ip0 mpa1 rl evv rv irv tav tv_n tv vs0 e0 dl } ⊢ { { gl lb1 rsp lb_n } rl evv rv irv tav tv_n tv vs0 e0 dl p1 }
									∐ p1 ⊢ _some◂p1 . 
										stt_v.stt_adt { ia1 na1 p1 } ⊢ p1 
										RP.atm p1 ⊢ p1 
										_some p1 ⊢ p1 
										∎ { { gl lb1 rsp lb_n } rl evv rv irv tav tv_n tv vs0 e0 dl p1 }
									∐. . 
										∎ { { gl lb1 rsp lb_n } rl evv rv irv tav tv_n tv vs0 e0 dl p1 }										
								∐. . 
									mk_adt.f { ql0 pvl0 ipl0 } ⊢ ipl0 
									$ ia1 ⊢ ia1,i1 
									lst.nth { ipl0 i1 } ⊢ { ip0 ipl0 }
									lp_hp { { gl lb1 rsp lb_n } r0 ip0 mpa1 rl evv rv irv tav tv_n tv vs0 e0 dl } ⊢ { { gl lb1 rsp lb_n } rl evv rv irv tav tv_n tv vs0 e0 dl p1 }
									∐ p1 ⊢ _some◂p1 . 
										stt_v.stt_adt { ia1 na1 p1 } ⊢ p1 
										RP.atm p1 ⊢ p1 
										_some p1 ⊢ p1 
										∎ { { gl lb1 rsp lb_n } rl evv rv irv tav tv_n tv vs0 e0 dl p1 }
									∐. . 
										∎ { { gl lb1 rsp lb_n } rl evv rv irv tav tv_n tv vs0 e0 dl p1 }
							∐. . 
								» "mov_ptn.ptn_to_r d2" _ ⊢ ee0 
										_emt ee0 ⊢ _ 
								∎| 
						∐. . 
							» "alc_mtc_ptn 6" _ ⊢ se 
							_emt se ⊢ se  
							∎|
			@.lp_lst { { gl lb1 rsp lb_n } l0 l1 rl evv rv irv tav tv_n tv vs0 e0 dl }
				∐ l0 ⊢ _cns◂{ p0 l0 }; l1 ⊢ _cns◂{ p1 l1 } . 
					lp { { gl lb1 rsp lb_n } p0 p1 rl evv rv irv tav tv_n tv vs0 e0 dl } ⊢ { { gl lb1 rsp lb_n } rl evv rv irv tav tv_n tv vs0 e0 dl p1 } 
					∐ p1 ⊢ _some◂p1 . 
						lp_lst { { gl lb1 rsp lb_n } l0 l1 rl evv rv irv tav tv_n tv vs0 e0 dl } ⊢ { { gl lb1 rsp lb_n } rl evv rv irv tav tv_n tv vs0 e0 dl l } 
						∐ l ⊢ _some◂l . 
							_cns { p1 l } ⊢ l 
							_some l ⊢ l
							∎ { { gl lb1 rsp lb_n } rl evv rv irv tav tv_n tv vs0 e0 dl l } 
						∐. . 
							##_none {} ⊢ l 
							∎ { { gl lb1 rsp lb_n } rl evv rv irv tav tv_n tv vs0 e0 dl l } 
					∐. . 
						_none {} ⊢ l 
						∎ { { gl lb1 rsp lb_n } rl evv rv irv tav tv_n tv vs0 e0 dl l } 					
				∐ l0 ⊢ _nil◂{}; l1 ⊢ _nil◂{} . 
					_nil {} ⊢ l 
					_some l ⊢ l 
					∎ { { gl lb1 rsp lb_n } rl evv rv irv tav tv_n tv vs0 e0 dl l }
				∐. . 
					» "mov_ptn.ptn_to_r d1" _ ⊢ ee0 
										_emt ee0 ⊢ _ 
					∎|
			@.lp_hp_lst { { gl lb1 rsp lb_n } j0 r0 l0 l1 rl evv rv irv tav tv_n tv vs0 e0 dl }
				∐ l0 ⊢ _cns◂{ h0 l0 }; l1 ⊢ _cns◂{ p1 l1 } . 
					alc_vs vs0 ⊢ { vs0 r2 } 
					brk_rsp { rsp r2 } ⊢ { rsp r2 sb0 } 
					rp8.add_s8 { e0 sb0 } ⊢ e0
					\[
					reg { rsp r2 } ⊢ { rsp r2 er2 br2 } 
					reg { rsp r0 } ⊢ { rsp r0 er0 erb0 } 
					» _^ er0,er2,j0 ⊢ er0,er2,j0,ec1 
						"\tmov rdi," 0' "\n" 
						"\tmov rdi,QWORD [rdi+8+8*" 2d' "]\n"
						"\tmov " 1' ",rdi\n" //  
					rp8.add_s8 { e0 ec1 } ⊢ e0 
					\]
					» 3r _ ⊢ sn 
					$ j0 ⊢ j0,xn 
					_shl { xn sn } ⊢ { xn _ } 
					» 8r _ ⊢ an 
					_add { xn an } ⊢ { xn _ }
					mov.idx_lea_idx_x { rsp r2 r0 xn e0 } ⊢ { rsp r2 r0 _ e0 }		
					lp_hp { { gl lb1 rsp lb_n } r2 h0 p1 rl evv rv irv tav tv_n tv vs0 e0 dl } ⊢ { { gl lb1 rsp lb_n } rl evv rv irv tav tv_n tv vs0 e0 dl p1 } 
					∐ p1 ⊢ _some◂p1 . 
						_inc j0 ⊢ j0 
						lp_hp_lst { { gl lb1 rsp lb_n } j0 r0 l0 l1 rl evv rv irv tav tv_n tv vs0 e0 dl } ⊢ { { gl lb1 rsp lb_n } rl evv rv irv tav tv_n tv vs0 e0 dl l }
						∐ l ⊢ _some◂l . 
							_cns { p1 l } ⊢ l 
							_some l ⊢ l 
							∎ { { gl lb1 rsp lb_n } rl evv rv irv tav tv_n tv vs0 e0 dl l } 
						∐. . 
							##_none {} ⊢ l 
							∎ { { gl lb1 rsp lb_n } rl evv rv irv tav tv_n tv vs0 e0 dl l } 
					∐. . 
						_none {} ⊢ l 
						∎ { { gl lb1 rsp lb_n } rl evv rv irv tav tv_n tv vs0 e0 dl l } 
				∐ l0 ⊢ _nil◂{}; l1 ⊢ _nil◂{} . 
					_nil {} ⊢ l 
					_some l ⊢ l 
					∎ { { gl lb1 rsp lb_n } rl evv rv irv tav tv_n tv vs0 e0 dl l }
				∐. .
					» "alc_mtc_ptn d0" _ ⊢ ee0 
										_emt ee0 ⊢ _  
					∎|			
		§ f { { gl lb1 rsp lb_n } rl evv rv irv tav tv_n tv vs0 isp mp dl }
			rp8.e {} ⊢ e0 
			lp { { gl lb1 rsp lb_n } isp mp rl evv rv irv tav tv_n tv vs0 e0 dl } ⊢| 
		∎∎
	§§ idx 
		§ crt { irv d ip rl dl }
			$ d ⊢ 
			∐ ast.dst_reg◂i . 
				_set_q { irv i ip } ⊢ { irv i }
				_cns { i rl } ⊢ rl
				∎ { irv rl dl }
			∐. ast.wc◂o . 
				∐ o ⊢ _some◂i . 
					$ ip ⊢ ip,ip0 
					_set_q { irv i ip0 } ⊢ { irv i }
					_cns { ip dl } ⊢ dl 
					∎ { irv rl dl }
				∐. .
					» "crt_idx_ptn 1" _ ⊢ se 
					_emt se ⊢ se  
					∎|
		§ @.crt_lst { irv dl ipl rl dll } 
			∐ dl ⊢ _cns◂{ d dl }; ipl ⊢ _cns◂{ ip ipl } . 
				crt { irv d ip rl dll } ⊢ { irv rl dll } 
				crt_lst { irv dl ipl rl dll } ⊢|
			∐ dl ⊢ _nil◂{}; ipl ⊢ _nil◂{} . 
				∎ { irv rl dll }
			∐. . 
				» "idx.crt_lst 0" _ ⊢ ee 
				_emt ee ⊢ ee 
				∎|  
		§ 
			@.crt_ptn { irv rp ip rl dl }
				∐ rp ⊢ RP.rcd◂r . 
					∐ ip ⊢ RP.rcd◂ir . 
						crt_ptn_lst { irv r ir rl dl } ⊢| 
					∐ ip ⊢ RP.atm◂p0; p0 ⊢ stt_v.hp◂{ r0 h0 }; h0 ⊢ stt_v.ref◂q0; q0 ⊢ stt_v.rcd◂l0 .
						stt_v.rcd l0 ⊢ q0 
						stt_v.ref q0 ⊢ h0 
						stt_v.hp { r0 h0 } ⊢ p0 
						RP.atm p0 ⊢ ip
						stt_v.pnt.f ip ⊢ sip 
						» "crt_idx_ptn 3" _ ⊢ se 
						_emt se ⊢ se 
						_emt sip ⊢ sip 
						∎|
					∐. . 
						» "crt_idx_ptn 2" _ ⊢ se 
						_emt se ⊢ se  
						∎| 
				∐ rp ⊢ RP.atm◂a .  
					crt { irv a ip rl dl } ⊢| 
				∐. .
					stt_v.pnt.f ip ⊢ sip 
					» "crt_idx_ptn 0" _ ⊢ se 
					_emt se ⊢ se 
					_emt sip ⊢ sip 
					∎| 
			@.crt_ptn_lst { irv r ir rl dl } 
				∐ r ⊢ _cns◂{ p r }; ir ⊢ _cns◂{ ip ir } . 
					crt_ptn { irv p ip rl dl } ⊢ { irv rl dl }  
					crt_ptn_lst { irv r ir rl dl } ⊢|
				∐ r ⊢ _nil◂{}; ir ⊢ _nil◂{} . 
					∎ { irv rl dl } 
				∐. . 
					» "crt_idx_ptn_lst 0" _ ⊢ se 
					_emt se ⊢ se 
					∎| 
		§ csm { irv s rl } 
			$ s ⊢ 
			∐ ast.im_reg◂c . 
				$ c ⊢ 
				∐ ast.cst_v◂v . 
					stt_v.hp_im v ⊢ h 
					RP.atm h ⊢ p 
					∎ { irv p rl }
				∐. ast.cst_name◂i . 
					stt_v.hp_im_e i ⊢ h 
					RP.atm h ⊢ p 
					∎ { irv p rl } 
			∐. ast.src_reg◂r . 
				_lod_q { irv r } ⊢ { irv r ip }
				lst.csm { rl r } ⊢ { rl r }
				∎ { irv ip rl } 
		§ @.csm_lst { irv sl rl } 
			$ sl ⊢ 
			∐ _cns◂{ s sl } . 
				csm { irv s rl } ⊢ { irv p rl } 
				csm_lst { irv sl rl } ⊢ { irv pl rl } 
				_cns { p pl } ⊢ pl 
				∎ { irv pl rl }
			∐. _nil◂{} . 
				_nil {} ⊢ pl 
				∎ { irv pl rl }
		§ 
			@.csm_ptn { irv rp rl }
				∐ rp ⊢ RP.rcd◂r . 
					csm_ptn_lst { irv r rl } ⊢ { irv ir rl } 
					RP.rcd ir ⊢ ip 
					∎ { irv ip rl } 
				∐. rp ⊢ RP.atm◂a .  
					csm { irv a rl } ⊢| 
			@.csm_ptn_lst { irv r rl } 
				∐ r ⊢ _cns◂{ p r } . 
					csm_ptn { irv p rl } ⊢ { irv ip rl }  
					csm_ptn_lst { irv r rl } ⊢ { irv ir rl } 
					_cns { ip ir } ⊢ ir 
					∎ { irv ir rl }
				∐. r ⊢ _nil◂{} . 
					_nil {} ⊢ ir 
					∎ { irv ir rl } 
		∎∎
		§ alc_ln_n { rsp r n e } 
			reg { rsp r } ⊢ { rsp r sr br } 
			∐ br ⊢ bl.t◂{} . 
				» _^ sr,n ⊢ _,n,sc1 
					`	ALC_LN rax
					"\tmov BYTE [rax+6]," 1d' "\n"
					"\tmov QWORD [rax+8]," 0' "\n"
					"\tmov " 0' ",rax\n" 
					// 
				rp8.add_s8 { e sc1 } ⊢ e 
				∎ { rsp r n e }
			∐. . 
				» _^ sr,n ⊢ _,n,sc1 
					`	ALC_LN rax
					"\tmov BYTE [rax+6]," 1d' "\n"
					"\tmov rdi," 0' "\n" 
					"\tmov QWORD [rax+8],rdi\n"
					"\tmov " 0' ",rax\n" 
					// 
					rp8.add_s8 { e sc1 } ⊢ e 
					∎ { rsp r n e }
		§ @.subst_ptn { p sl }
				$ p ⊢ 
				∐ RP.rcd◂l . 
					subst_ptn_lst { l sl } ⊢ { l sl } 
					RP.rcd l ⊢ p 
					∎ { p sl }
				∐. RP.atm◂a .
					∐ a ⊢ stt_v.hp◂{ r0 h } . 
						subst { r0 sl } ⊢ { r0 sl } 
						stt_v.hp { r0 h } ⊢ a 
						RP.atm a ⊢ p 
						∎ { p sl }
					∐ a ⊢ stt_v.pt◂{ r0 r1 } . 
						subst { r0 sl } ⊢ { r0 sl } 
						subst { r1 sl } ⊢ { r1 sl } 
						stt_v.pt { r0 r1 } ⊢ a 
						RP.atm a ⊢ p 
						∎ { p sl }
					∐ a ⊢ stt_v.stt_adt◂{ ia nn pa } . 
						subst_ptn { pa sl } ⊢ { pa sl }
						stt_v.stt_adt { ia nn pa } ⊢ a 
						RP.atm a ⊢ p 
						∎ { p sl }
					∐. . 
						RP.atm a ⊢ p
						∎ { p sl }
				@.subst_ptn_lst { l sl } 
					$ l ⊢ 
					∐ _cns◂{ p l } . 
						subst_ptn { p sl } ⊢ { p sl } 
						subst_ptn_lst { l sl } ⊢ { l sl }
						_cns { p l } ⊢ l 
						∎ { l sl }
					∐. _nil◂{} . 
						_nil {} ⊢ l 
						∎ { l sl }  
			§§ mov_ptn 
				§ 
					@.f { tav rsp vs p0 p1 lb1 }
						$ vs ⊢ vs,vs0 
						$ p0 ⊢ p0,p00 
						stt_v.pnt.f p00 ⊢ sp0 
						$ p1 ⊢ p1,p10 
						stt_v.pnt.f p10 ⊢ sp1 
						stt_v.mk_rset_x p0 ⊢ { p0 v0 }
						stt_v.mk_rset_x p1 ⊢ { p1 v1 }
						##_emt p1 ⊢ p1 
						$ v0 ⊢ v0,v0_0 
						rset.and { v0_0 v1 } ⊢ { v0_0 v1 } 
						rset.or { vs0 v1 } ⊢ { vs0 v1 } 
						rset.or { vs0 v0 } ⊢ { vs0 v0 }  
						_nil {} ⊢ sl 
						» 0r _ ⊢ i0 
						» _^ sp0,sp1 ⊢ sp0,sp1,er 
							"; .mov_ptn " 0' " ⊢ " 1' "\n" 
							// 
						rp8.of_s8 er ⊢ e0 
						rset.max_t vs0 ⊢ { vs0 rbp0 } 
						brk_rsp { rsp rbp0 } ⊢ { rsp rbp0 sb0 }
						rp8.add_s8 { e0 sb0 } ⊢ e0  
						lp0 { rsp vs0 v0_0 i0 sl e0 } ⊢ { rsp vs0 v0_0 sl e0 } 
						subst_ptn { p1 sl } ⊢ { p1 sl } 
						lp1 { e0 tav rsp vs0 p0 v0 p1 v1 lb1 } ⊢ { e0 tav rsp vs0 v0 v1 } 
						∎ { tav rsp vs e0 } 
					@.lp0 { rsp vs0 v0_0 i0 sl e0 } 
						∐ i0'=128r .
							∎ { rsp vs0 v0_0 sl e0 } 
						∐. . 
							_lod_q { v0_0 i0 } ⊢ { v0_0 i0 b } 
							$ b ⊢ 
							∐ bl.f◂{} . 
								_inc i0 ⊢ i0 
								lp0 { rsp vs0 v0_0 i0 sl e0 } ⊢| 
							∐. bl.t◂{} . 
								rset.min_f vs0 ⊢ { vs0 j0 }
								##bl.t {} ⊢ b 
								##exc_q { vs0 j0 b } ⊢ { vs0 j0 b }
								rset.set_t { vs0 j0 } ⊢ { vs0 j0 } 
								brk_rsp { rsp j0 } ⊢ { rsp j0 s0 } 
								rp8.add_s8 { e0 s0 } ⊢ e0 
								mov { rsp i0 j0 } ⊢ { rsp i0 j0 s0 } 
								rp8.add_s8 { e0 s0 } ⊢ e0 
								$ i0 ⊢ i0,i0_0 
								_some j0 ⊢ o 
								_cns { { i0_0 o } sl } ⊢ sl 
								_inc i0 ⊢ i0 
								lp0 { rsp vs0 v0_0 i0 sl e0 } ⊢| 	
				@.lp1 { e0 tav rsp vs0 p0 v0 p1 v1 lb1 } 
						$ p1 ⊢ 
						∐ RP.rcd◂l1 . 
							∐ p0 ⊢ RP.rcd◂l0 . 		
								lp1_lst { e0 tav rsp vs0 v0 l0 v1 l1 lb1 } ⊢| 
							∐ p0 ⊢ RP.atm◂a0; a0 ⊢ stt_v.hp◂{ r0 h0 }; h0 ⊢ stt_v.ref◂q; q ⊢ stt_v.rcd◂l0 . 
								» 0r _ ⊢ i 
								r_to_rcd { e0 tav i rsp vs0 r0 l0 l1 lb1 } ⊢ { e0 tav rsp vs0 }
								∎ { e0 tav rsp vs0 v0 v1 } 
							∐. . 
								» "mov_ptn.lp1 0" _ ⊢ se 
								_emt se ⊢ se 
								∎|
						∐. RP.atm◂a1 . 
							∐ a1 ⊢ stt_v.hp◂{ r1 h1 } . 				
								ptn_to_h { e0 tav rsp vs0 p0 h1 lb1 } ⊢ { e0 tav rsp vs0 }
								brk_rsp { rsp r1 } ⊢ { rsp r1 sb0 } 
								rp8.add_s8 { e0 sb0 } ⊢ e0
								reg { rsp r1 } ⊢ { rsp r1 sr1 br1 }
								» _^ sr1 ⊢ sr1,sc0 
									"\tmov " 0' ",rax\n" // 
								rp8.add_s8 { e0 sc0 } ⊢ e0
								∎ { e0 tav rsp vs0 v0 v1 }
							∐ a1 ⊢ stt_v.pt◂{ r10 r11 } . 
								max { r10 r11 } ⊢ { r10 r11 rM } 
								brk_rsp { rsp rM } ⊢ { rsp rM sb0 } 
								rp8.add_s8 { e0 sb0 } ⊢ e0 
								∐ p0 ⊢ RP.atm◂a0; a0 ⊢ stt_v.pt◂{ r00 r01 } . 
									mov { rsp r00 r10 } ⊢ { rsp r00 r10 sm0 } 
									rp8.add_s8 { e0 sm0 } ⊢ e0 
									mov { rsp r10 r11 } ⊢ { rsp r10 r11 sm1 } 
									rp8.add_s8 { e0 sm1 } ⊢ e0 
									∎ { e0 tav rsp vs0 v0 v1 } 
								∐ p0 ⊢ RP.atm◂a0; a0 ⊢ stt_v.hp◂{ r0 h0 }; h0 ⊢ stt_v.ref◂q0; q0 ⊢ stt_v.pt_hp◂{} . 
									reg { rsp r0 } ⊢ { rsp r0 sr0 br0 } 
									reg { rsp r10 } ⊢ { rsp r10 sr10 br10 } 
									reg { rsp r11 } ⊢ { rsp r11 sr11 br11 } 
									» _^ sr0,sr10,sr11 ⊢ sr0,sr10,sr11,sr 
										"\tmov rdi," 0' "\n"
										`	mov rsi,QWORD [rdi+8]
										"\tmov " 1' ",rsi\n" 
										`	mov rsi,QWORD [rdi+16]
										"\tmov " 2' ",rsi\n" //   
									rp8.add_s8 { e0 sr } ⊢ e0 
									∎ { e0 tav rsp vs0 v0 v1 }
								∐. . 
									» "mov_ptn.lp1 pt 0" _ ⊢ ee0 
									_emt ee0 ⊢ _ 
									∎| 
							∐ a1 ⊢ stt_v.stt_adt◂{ p1_i p1_n p1_p }; p0 ⊢ RP.atm◂a0; a0 ⊢ stt_v.stt_adt◂{ ia0 na0 pa0 } . 
								∐ p1_i'=ia0' . 
									lp1 { e0 tav rsp vs0 pa0 v0 p1_p v1 lb1 } ⊢| 
								∐ lb1 ⊢ _some◂lb1 . 
									» _^ lb1 ⊢ lb1,ec1 
										"\tjnz LB_" 0d' "\n" 
									// 
									rp8.of_s8 ec1 ⊢ ec1 
									rp8.cct { e0 ec1 } ⊢ e0 
									∎ { e0 tav rsp vs0 v0 v1 }
								∐. . 
									» "stt stt 0" _ ⊢ se 
									_emt se ⊢ se 
									∎| 
							∐. . 
								» "mov_ptn.lp1 152" _ ⊢ se 
								_emt se ⊢ se  
								RP.atm a1 ⊢ p1 
								stt_v.pnt.f p1 ⊢ sp1 
								_emt sp1 ⊢ sp1 
								∎| 
					@.lp1_lst { e0 tav rsp vs0 v0 l0 v1 l1 lb1 }
						∐ l0 ⊢ _cns◂{ p0 l0 }; l1 ⊢ _cns◂{ p1 l1 } . 
							$ lb1 ⊢ lb1,lb10 
							lp1 { e0 tav rsp vs0 p0 v0 p1 v1 lb10 } ⊢ { e0 tav rsp vs0 v0 v1 }
							lp1_lst { e0 tav rsp vs0 v0 l0 v1 l1 lb1 } ⊢ { e0 tav rsp vs0 v0 v1 } 
							∎ { e0 tav rsp vs0 v0 v1 } 							
						∐ l0 ⊢ _nil◂{}; l1 ⊢ _nil◂{} . 
							∎ { e0 tav rsp vs0 v0 v1 } 
						∐. . 
							» "lp1_lst 0" _ ⊢ se 
							_emt se ⊢ se 
							∎| 
					\[
					@.rcd_to_r { e0 tav i rsp vs0 l0 r1 l1 lb1 }
						∐ l1 ⊢ _cns◂{ h1 l1 }; l0 ⊢ _cns◂{ p0 l0 } .  
							$ lb1 ⊢ lb1,lb10 
							ptn_to_r { e0 tav rsp vs0 p0 h1 lb10 } ⊢ { e0 tav rsp vs0 }
							reg { rsp r1 } ⊢ { rsp r1 er1 erb } 
							∐ erb ⊢ bl.t◂{} . 
								» _^ er1,i ⊢ er1,i,e1
									"\tmov QWORD [" 0' "+8+8*" 1d' "],rax\n" 
									// 
								rp8.add_s8 { e0 e1 } ⊢ e0 
								_inc i ⊢ i 
								##rset.set_f { vs0 m0 } ⊢ { vs0 m0 } 
								rcd_to_r { e0 tav i rsp vs0 l0 r1 l1 lb1 } ⊢| 
							∐. . 
								» _^ er1,i ⊢ er1,i,e1
									"\tmov rdi," 0' "\n" 
									"\tmov QWORD [rdi+8+8*" 1d' "],rax\n" 
									// 
								rp8.add_s8 { e0 e1 } ⊢ e0 
								_inc i ⊢ i 
								##rset.set_f { vs0 m0 } ⊢ { vs0 m0 } 
								rcd_to_r { e0 tav i rsp vs0 l0 r1 l1 lb1 } ⊢| 
						∐ l1 ⊢ _nil◂{}; l0 ⊢ _nil◂{} . 
							∎ { e0 tav rsp vs0 }
						∐. . 
							» "rcd_to_r" _ ⊢ se 
							_emt se ⊢ se 
							∎|  
					\]
					@.rcd_to_h { e0 tav i rsp vs0 l0 r1 l1 lb1 }
						∐ l1 ⊢ _cns◂{ h1 l1 }; l0 ⊢ _cns◂{ p0 l0 } .  
							$ lb1 ⊢ lb1,lb10 
							ptn_to_h { e0 tav rsp vs0 p0 h1 lb10 } ⊢ { e0 tav rsp vs0 }
							reg { rsp r1 } ⊢ { rsp r1 er1 erb } 
							∐ erb ⊢ bl.t◂{} . 
								» _^ er1,i ⊢ er1,i,e1
									"\tmov QWORD [" 0' "+8+8*" 1d' "],rax\n" 
									// 
								rp8.add_s8 { e0 e1 } ⊢ e0 
								_inc i ⊢ i 
								##rset.set_f { vs0 m0 } ⊢ { vs0 m0 } 
								rcd_to_h { e0 tav i rsp vs0 l0 r1 l1 lb1 } ⊢| 
							∐. . 
								» _^ er1,i ⊢ er1,i,e1
									"\tmov rdi," 0' "\n" 
									"\tmov QWORD [rdi+8+8*" 1d' "],rax\n" 
									// 
								rp8.add_s8 { e0 e1 } ⊢ e0 
								_inc i ⊢ i 
								##rset.set_f { vs0 m0 } ⊢ { vs0 m0 } 
								rcd_to_h { e0 tav i rsp vs0 l0 r1 l1 lb1 } ⊢| 
						∐ l1 ⊢ _nil◂{}; l0 ⊢ _nil◂{} . 
							∎ { e0 tav rsp vs0 }
						∐. . 
							» "rcd_to_r" _ ⊢ se 
							_emt se ⊢ se 
							∎|  
					\[
					@.ptn_to_r { e0 tav rsp vs0 p0 rv1 h1 lb1 } 
						$ p0 ⊢ 
						∐ RP.rcd◂l0 . 
							∐ h1 ⊢ stt_v.ref◂q; q ⊢ stt_v.rcd◂l1 . 
								∐ l1 ⊢ _nil◂{} . 
									brk_rsp_e { rsp rv1 e0 } ⊢ { rsp v1 e0 } 
									reg { rsp rv1 } ⊢ { rsp rv1 srv1 brv1 } 
									» _^ srv1 ⊢ srv1,sc1 
										"\tmov " 0' ",unt\n" 
										//
									rp8.add_s8 { e0 sc1 } ⊢ e0   
									∎ { e0 tav rsp vs0 }
								∐. . 
									lst.len l1 ⊢ { l1 nl1 } 
									» 0r _ ⊢ i 
									##reg { rsp r1 } ⊢ { rsp r1 er1 br1 } 
									alc_vs vs0 ⊢ { vs0 r1 } 
									brk_rsp_e { rsp r1 e0 } ⊢ { rsp r1 e0 } 
									reg { rsp r1 } ⊢ { rsp r1 sr1 br1 } 
									» _^ sr1,nl1 ⊢ sr1,nl1,ec1 
										"\tmov rax,[SS_RCD_" 1d' "_TOP]\n" 
										`	mov rsi,[rax] 
										"\tmov QWORD [SS_RCD_" 1d' "_TOP],rsi\n"
										##`	mov QWORD [rax],0
										"\tmov " 0' ",rax\n" 
										//
									rp8.add_s8 { e0 ec1 } ⊢ e0   
									$ r1 ⊢ r1,r10 
									rcd_to_r { e0 tav i rsp vs0 l0 r1 l1 lb1 } ⊢ { e0 tav rsp vs0 } 
									reg { rsp r10 } ⊢ { rsp r10 sr10 br10 }
									» _^ sr10 ⊢ sr10,sc0 
										"\tmov rax," 0' "\n" // 
									rp8.add_s8 { e0 sc0 } ⊢ e0
									rset.set_f { vs0 r10 } ⊢ { vs0 r10 }
									∎ { e0 tav rsp vs0 }
							∐. . 
								\[
								stt_v.pnt.hp h1 ⊢ sh1 
								_emt sh1 ⊢ _ 
								» "ptn_to_r 0" _ ⊢ se 
								_emt se ⊢ se 
								∎|
								\]
								» _^ _ ⊢ ec1
									`	mov rdi,rt_err0 
									` call emt_stg
									`	mov QWORD [err_n],0xffff_0000
									`	jmp err
									// 
								rp8.add_s8 { e0 ec1 } ⊢ e0 
								∎ { e0 tav rsp vs0 }
						∐. RP.atm◂a0 . 
							$ a0 ⊢ 
							∐ stt_v.hp◂{ r0 h0 } . 
								reg { rsp r0 } ⊢ { rsp r0 sr0 br0 } 
								##brk_rsp { rsp r1 } ⊢ { rsp r1 eb } 
								##rp8.add_s8 { e0 eb } ⊢ e0 
								##mov { rsp r0 r1 } ⊢ { rsp r0 r1 em } 
								» _^ sr0 ⊢ sr0,em 
									"\tmov rax," 0' "\n" //
								rp8.add_s8 { e0 em } ⊢ e0 
								∎ { e0 tav rsp vs0 }
							∐ stt_v.hp_im◂cv . 
								∐ cv ⊢ ast.r64◂x . 
									» _^ x ⊢ x,e1
										"\tmov rax," 0d' "\n" // 
									rp8.add_s8 { e0 e1 } ⊢ e0 
									∎ { e0 tav rsp vs0 }
								∐ cv ⊢ ast.s8◂s . 
									mk_s8 s ⊢ { s es } 
									rp8.cct { e0 es } ⊢ e0 
									∎ { e0 tav rsp vs0 }
								∐. .
									» "mov_ptn im hp 0" _ ⊢ ee0 
									_emt ee0 ⊢ ec0 
									∎| 
							∐ stt_v.hp_im_e◂ie . 
								» "mov_ptn im_e 08" _ ⊢ ee0 
								_emt ee0 ⊢ ec0 
								∎| 
							∐ stt_v.pt◂{ r00 r01 } . 
								∐ h1 ⊢ stt_v.ref◂q0; q0 ⊢ stt_v.pt_hp◂{} . 
									reg { rsp r00 } ⊢ { rsp r00 sr00 br00 } 
									reg { rsp r01 } ⊢ { rsp r01 sr01 br01 } 
									» _^ sr00,sr01 ⊢ sr00,sr01,ec1 
										`	mov rax,[SS_PT_TOP] 
										`	mov rsi,[rax] 
										`	mov QWORD [SS_PT_TOP],rsi
										##`	mov QWORD [rax],0
										"\tmov rsi," 0' "\n" 
										`	mov QWORD [rax+8],rsi
										"\tmov rsi," 1' "\n" 
										`	mov QWORD [rax+16],rsi 
										//
									rp8.add_s8 { e0 ec1 } ⊢ e0   
									∎ { e0 tav rsp vs0 }
								∐. . 
									» "mov_ptn.ptn_to_r pt 0" _ ⊢ ee0 
									_emt ee0 ⊢ _
									∎|  
							∐. stt_v.stt_adt◂{ ia0 na0 pa0 } .
								∐ h1 ⊢ stt_v.adt◂{ ax1 ql1 } . 
									_lod_q { tav ax1 } ⊢ { tav ax1 { aw1 o1 } } 
									∐ o1 ⊢ _some◂{ vl1 kl1 pl1 ipl1 } . 
										mk_adt.f { ql1 pl1 ipl1 } ⊢ ipl1 
										$ ia0 ⊢ ia0,ia00
										lst.nth { ipl1 ia00 } ⊢ { ip1 ipl1 }
										$ ip1 ⊢ ip1,ip10 
										##reg { rsp r1 } ⊢ { rsp r1 er1 br1 } 
										ptn_to_r { e0 tav rsp vs0 pa0 ip10 lb1 } ⊢ { e0 tav rsp vs0 }
										∐ ip1 ⊢ stt_v.ref◂q1 .
											∐ q1 ⊢ stt_v.rcd◂l1; l1 ⊢ _nil◂{} . 
												» _^ ia0 ⊢ ia0,ec1 
													"\tmov rax,unt_" 0d' "\n" //
												rp8.add_s8 { e0 ec1 } ⊢ e0 
												∎ { e0 tav rsp vs0 }
											∐. . 
												» _^ ia0 ⊢ ia0,ec1 
													"\tmov BYTE [rax+6]," 0d' "\n" // 
												rp8.add_s8 { e0 ec1 } ⊢ e0 
												∎ { e0 tav rsp vs0 }
										∐. .
											» _^ ia0 ⊢ ia0,ec1 
												`	mov rdi,rax
												`	mov rax,SS_LN_REG
												`	mov SS_LN_REG,QWORD [SS_LN_REG] 
												"\tmov BYTE [rax+6]," 0d' "\n"
												`	mov QWORD [rax+8],rdi
												// 
											rp8.add_s8 { e0 ec1 } ⊢ e0 
											∎ { e0 tav rsp vs0 }
									∐. . 
										» "mov_ptn.ptn_to_r 0" _ ⊢ ee0 
										_emt ee0 ⊢ _ 
										∎| 
								∐. . 
									\[
									» "mov_ptn.ptn_to_r 1" _ ⊢ ee0 
										_emt ee0 ⊢ _ 
									stt_v.pnt.hp h1 ⊢ sh1 
									_emt sh1 ⊢ _ 
									∎|
									\]
									» _^ _ ⊢ ec1
									`	mov rdi,rt_err0 
									`	call emt_stg
									`	mov QWORD [err_n],0xffff_0009
									`	jmp err
									// 
								rp8.add_s8 { e0 ec1 } ⊢ e0 
								∎ { e0 tav rsp vs0 } 
					\]
					@.ptn_to_h { e0 tav rsp vs0 p0 h1 lb1 } 
						$ p0 ⊢ 
						∐ RP.rcd◂l0 . 
							∐ h1 ⊢ stt_v.ref◂q; q ⊢ stt_v.rcd◂l1 . 
								∐ l1 ⊢ _nil◂{} . 
									##reg { rsp r1 } ⊢ { rsp r1 er1 br1 } 
									» _^ _ ⊢ ec1 
										`	mov rax,unt 
										//
									rp8.add_s8 { e0 ec1 } ⊢ e0   
									∎ { e0 tav rsp vs0 }
								∐. . 
									lst.len l1 ⊢ { l1 nl1 } 
									» 0r _ ⊢ i 
									##reg { rsp r1 } ⊢ { rsp r1 er1 br1 } 
									alc_vs vs0 ⊢ { vs0 r1 } 
									brk_rsp { rsp r1 } ⊢ { rsp r1 sb0 } 
									rp8.add_s8 { e0 sb0 } ⊢ e0 
									reg { rsp r1 } ⊢ { rsp r1 sr1 br1 } 
									» _^ sr1,nl1 ⊢ sr1,nl1,ec1 
										"\tALC_RCD " 1d' ", rax\n" 
										"\tmov " 0' ",rax\n" 
										//
									rp8.add_s8 { e0 ec1 } ⊢ e0   
									$ r1 ⊢ r1,r10 
									rcd_to_h { e0 tav i rsp vs0 l0 r1 l1 lb1 } ⊢ { e0 tav rsp vs0 } 
									reg { rsp r10 } ⊢ { rsp r10 sr10 br10 }
									» _^ sr10 ⊢ sr10,sc0 
										"\tmov rax," 0' "\n" // 
									rp8.add_s8 { e0 sc0 } ⊢ e0
									rset.set_f { vs0 r10 } ⊢ { vs0 r10 }
									∎ { e0 tav rsp vs0 }
							∐. . 
								\[
								stt_v.pnt.hp h1 ⊢ sh1 
								_emt sh1 ⊢ _ 
								» "ptn_to_r 0" _ ⊢ se 
								_emt se ⊢ se 
								∎|
								\]
								» _^ _ ⊢ ec1
									`	mov rdi,rt_err0 
									` call emt_stg
									`	mov QWORD [err_n],0xffff_0000
									`	jmp err
									// 
								rp8.add_s8 { e0 ec1 } ⊢ e0 
								∎ { e0 tav rsp vs0 }
						∐. RP.atm◂a0 . 
							$ a0 ⊢ 
							∐ stt_v.hp◂{ r0 h0 } . 
								reg { rsp r0 } ⊢ { rsp r0 sr0 br0 } 
								##brk_rsp { rsp r1 } ⊢ { rsp r1 eb } 
								##rp8.add_s8 { e0 eb } ⊢ e0 
								##mov { rsp r0 r1 } ⊢ { rsp r0 r1 em } 
								» _^ sr0 ⊢ sr0,em 
									"\tmov rax," 0' "\n" //
								rp8.add_s8 { e0 em } ⊢ e0 
								∎ { e0 tav rsp vs0 }
							∐ stt_v.hp_im◂cv . 
								∐ cv ⊢ ast.r64◂x . 
									» _^ x ⊢ x,e1
										"\tmov rax," 0d' "\n" // 
									rp8.add_s8 { e0 e1 } ⊢ e0 
									∎ { e0 tav rsp vs0 }
								∐ cv ⊢ ast.s8◂s . 
									mk_s8 s ⊢ { s es } 
									rp8.cct { e0 es } ⊢ e0 
									∎ { e0 tav rsp vs0 }
								∐. .
									» "mov_ptn im hp 0" _ ⊢ ee0 
									_emt ee0 ⊢ ec0 
									∎| 
							∐ stt_v.hp_im_e◂ie . 
								» "mov_ptn im_e 08" _ ⊢ ee0 
								_emt ee0 ⊢ ec0 
								∎| 
							∐ stt_v.pt◂{ r00 r01 } . 
								∐ h1 ⊢ stt_v.ref◂q0; q0 ⊢ stt_v.pt_hp◂{} . 
									reg { rsp r00 } ⊢ { rsp r00 sr00 br00 } 
									reg { rsp r01 } ⊢ { rsp r01 sr01 br01 } 
									» _^ sr00,sr01 ⊢ sr00,sr01,ec1 
										`	mov rax,[SS_PT_TOP] 
										`	mov rsi,[rax] 
										`	mov QWORD [SS_PT_TOP],rsi
										##`	mov QWORD [rax],0
										"\tmov rsi," 0' "\n" 
										`	mov QWORD [rax+8],rsi
										"\tmov rsi," 1' "\n" 
										`	mov QWORD [rax+16],rsi 
										//
									rp8.add_s8 { e0 ec1 } ⊢ e0   
									∎ { e0 tav rsp vs0 }
								∐. . 
									» "mov_ptn.ptn_to_r pt 0" _ ⊢ ee0 
									_emt ee0 ⊢ _
									∎|  
							∐. stt_v.stt_adt◂{ ia0 na0 pa0 } .
								∐ h1 ⊢ stt_v.adt◂{ ax1 ql1 } . 
									_lod_q { tav ax1 } ⊢ { tav ax1 { aw1 o1 } } 
									∐ o1 ⊢ _some◂{ vl1 kl1 pl1 ipl1 } . 
										mk_adt.f { ql1 pl1 ipl1 } ⊢ ipl1 
										$ ia0 ⊢ ia0,ia00
										lst.nth { ipl1 ia00 } ⊢ { ip1 ipl1 }
										$ ip1 ⊢ ip1,ip10 
										##reg { rsp r1 } ⊢ { rsp r1 er1 br1 } 
										ptn_to_h { e0 tav rsp vs0 pa0 ip10 lb1 } ⊢ { e0 tav rsp vs0 }
										∐ ip1 ⊢ stt_v.ref◂q1 .
											∐ q1 ⊢ stt_v.rcd◂l1; l1 ⊢ _nil◂{} . 
												» _^ ia0 ⊢ ia0,ec1 
													"\tmov rax,unt_" 0d' "\n" //
												rp8.add_s8 { e0 ec1 } ⊢ e0 
												∎ { e0 tav rsp vs0 }
											∐. . 
												» _^ ia0 ⊢ ia0,ec1 
													"\tmov BYTE [rax+6]," 0d' "\n" // 
												rp8.add_s8 { e0 ec1 } ⊢ e0 
												∎ { e0 tav rsp vs0 }
										∐. .
											» _^ ia0 ⊢ ia0,ec1 
												`	mov rdi,rax
												`	ALC_LN rax
												"\tmov BYTE [rax+6]," 0d' "\n"
												`	mov QWORD [rax+8],rdi
												// 
											rp8.add_s8 { e0 ec1 } ⊢ e0 
											∎ { e0 tav rsp vs0 }
									∐. . 
										» "mov_ptn.ptn_to_r 0" _ ⊢ ee0 
										_emt ee0 ⊢ _ 
										∎| 
								∐. . 
									» _^ _ ⊢ ec1
										`	mov rdi,rt_err0 
										`	call emt_stg
										`	mov QWORD [err_n],0xffff_0001
										`	jmp err
										// 
									rp8.add_s8 { e0 ec1 } ⊢ e0 
									∎ { e0 tav rsp vs0 }
					@.r_to_ptn { e0 tav rsp vs0 r0 h0 p1 lb1 }  
						∐ p1 ⊢ RP.rcd◂l1; h0 ⊢ stt_v.ref◂q; q ⊢ stt_v.rcd◂l0 . 
							» 0r _ ⊢ i 
							r_to_rcd { e0 tav i rsp vs0 r0 l0 l1 lb1 } ⊢| 
						∐ p1 ⊢ RP.atm◂a1; a1 ⊢ stt_v.hp◂{ p1_r p1_h } . 
							##mov { rsp r0 p1_r } ⊢ { rsp r0 p1_r em0 } 
							brk_rsp { rsp p1_r } ⊢ { rsp p1_r sb0 } 
							rp8.add_s8 { e0 sb0 } ⊢ e0 
							mov { rsp r0 p1_r } ⊢ { rsp r0 p1_r em0 } 
							rp8.add_s8 { e0 em0 } ⊢ e0 
							rset.set_t { vs0 p1_r } ⊢ { vs0 p1_r }
							∎ { e0 tav rsp vs0 }
						∐. . 
							» "mov_ptn.lp1 1007" _ ⊢ se 
							_emt se ⊢ se 
							∎|   							
					@.r_to_rcd { e0 tav i rsp vs0 r0 l0 l1 lb1 } 
						∐ l0 ⊢ _cns◂{ h0 l0 }; l1 ⊢ _cns◂{ p1 l1 } .  
							alc_vs vs0 ⊢ { vs0 m0 } 
							brk_rsp { rsp m0 } ⊢ { rsp m0 sb0 } 
							rp8.add_s8 { e0 sb0 } ⊢ e0 
							» 3r _ ⊢ sn 
							$ i ⊢ i,xn 
							_shl { xn sn } ⊢ { xn _ } 
							» 8r _ ⊢ an 
							_add { xn an } ⊢ { xn _ }
							mov.idx_lea_idx_x { rsp m0 r0 xn e0 } ⊢ { rsp m0 r0 _ e0 }
							\[
							reg { rsp r0 } ⊢ { rsp r0 er0 erb } 
							reg { rsp m0 } ⊢ { rsp m0 em0 bm0 }
							» _^ er0,em0,i ⊢ er0,em0,i,e1
								"\tmov rdi," 0' "\n" 
								"\tmov rdi,QWORD [rdi+8+8*" 2d' "]\n"
								"\tmov " 1' ",rdi\n" 
								// 
							rp8.add_s8 { e0 e1 } ⊢ e0 
							\]
							$ m0 ⊢ m0,m00 
							$ lb1 ⊢ lb1,lb10 
							r_to_ptn { e0 tav rsp vs0 m00 h0 p1 lb10 } ⊢ { e0 tav rsp vs0 }
							_inc i ⊢ i 
							r_to_rcd { e0 tav i rsp vs0 r0 l0 l1 lb1 } ⊢| 
						∐ l0 ⊢ _nil◂{}; l1 ⊢ _nil◂{} . 
							∐ i'=0r . 
								∎ { e0 tav rsp vs0 } 
							∐. . 
								reg { rsp r0 } ⊢ { rsp r0 er0 erb } 
								» _^ er0,i ⊢ _,_,sc0 
									"\tmov rdi," 0' "\n" 
									"\tFREE_RCD " 1d' ",rdi\n" // 
								rp8.add_s8 { e0 sc0 } ⊢ e0 
								∎ { e0 tav rsp vs0 }
						∐. . 
							» "r_to_rcd" _ ⊢ se 
							_emt se ⊢ se 
							∎|  
				§ @.f2_lp0 { p0 p1 r } 
						∐ p0 ⊢ RP.rcd◂l0; p1 ⊢ RP.rcd◂l1 . 
							f2_lp0_lst { l0 l1 r } ⊢| 
						∐. . 
							_cns { { p0 p1 } r } ⊢ r 
							∎ r
					@.f2_lp0_lst { l0 l1 r }
						∐ l0 ⊢ _cns◂{ p0 l0 }; l1 ⊢ _cns◂{ p1 l1 } . 
							f2_lp0 { p0 p1 r } ⊢ r 
							f2_lp0_lst { l0 l1 r } ⊢| 
						∐ l0 ⊢ _nil◂{}; l1 ⊢ _nil◂{} . 
							∎ r
						∐. . 
						» "mov_ptn.lp1 10000" _ ⊢ se 
									_emt se ⊢ se 
							∎|
				¶ vf_t 
					∐ c0 : {} 
					∐ c1 : {} 
					∐ c2 : {}
				§ vf_ini n 
					c0 {} ⊢ t 
					mk_arr.f { n t } ⊢ { n _ a }
					∎ { n a }
				§ @.f2_lp1_i { a0 tij an i0 } 
						∐ i0'=an' . 
							∎ { a0 tij an }
						∐. . 
							» 0r _ ⊢ j0 
							f2_lp1_j { a0 tij an i0 j0 } ⊢ { a0 tij i0 an } 
							_inc i0 ⊢ i0 
							f2_lp1_i { a0 tij an i0 } ⊢| 
					@.f2_lp1_j { a0 tij an i0 j0 } 
						∐ j0'=an' . 
							∎ { a0 tij i0 an }
						∐. . 
							_lod_q { a0 i0 } ⊢ { a0 i0 { pi0 pi1 } }
							_lod_q { a0 j0 } ⊢ { a0 j0 { pj0 pj1 } } 
							stt_v.mk_rset_x pi1 ⊢ { pi1 vi }
							stt_v.mk_rset_x pj0 ⊢ { pj0 vj } 
							rset.and { vi vj } ⊢ { vi vj } 
							rset.is_zero vi ⊢ { vi b0 }
							$ i0 ⊢ i0,i00 
							_imul { i00 an } ⊢ { i00 an }
							_add { i00 j0 } ⊢ { i00 j0 }
							_set_q { tij i00 b0 } ⊢ { tij i00 }
							_inc j0 ⊢ j0 
							f2_lp1_j { a0 tij an i0 j0 } ⊢| 
				§ @.f2_lp2 { c0 vf0 tij an i0 l0 } 
						∐ i0'=an' . 
							∎ { vf0 tij an l0 } 
						∐. . 
							_lod_q { vf0 i0 } ⊢ { vf0 i0 b0 } 
							∐ b0 ⊢ bl.f◂{} . 
								$ c0 ⊢ c0,c01 
								$ c0 ⊢ 
								∐ _some◂c0 . 
									$ c0 ⊢ c0,c00 
									_imul { c00 an } ⊢ { c00 an }
									_add { c00 i0 } ⊢ { c00 i0 }
									_lod_q { tij c00 } ⊢ { tij c00 b0 }
									∐ b0 ⊢ bl.t◂{} . 
										bl.t {} ⊢ bt1 
										exc_q { vf0 i0 bt1 } ⊢ { vf0 i0 bt1 } 
										» 0r _ ⊢ j0 
										$ i0 ⊢ i0,i00 
										_some i00 ⊢ ci0 
										f2_lp2 { ci0 vf0 tij an j0 l0 } ⊢ { vf0 tij an l0 }
										$ i0 ⊢ i0,i00 
										_cns { i00 l0 } ⊢ l0 
										_inc i0 ⊢ i0 
										f2_lp2 { c01 vf0 tij an i0 l0 } ⊢|
									∐. . 
										_inc i0 ⊢ i0 
										f2_lp2 { c01 vf0 tij an i0 l0 } ⊢| 
								∐. _none◂{} . 
									bl.t {} ⊢ bt1 
									exc_q { vf0 i0 bt1 } ⊢ { vf0 i0 bt1 } 
									» 0r _ ⊢ j0 
									$ i0 ⊢ i0,i00 
									_some i00 ⊢ ci0 
									f2_lp2 { ci0 vf0 tij an j0 l0 } ⊢ { vf0 tij an l0 } 
									$ i0 ⊢ i0,i00 
									_cns { i00 l0 } ⊢ l0 
									_inc i0 ⊢ i0 
									f2_lp2 { c01 vf0 tij an i0 l0 } ⊢|
							∐. . 
								_inc i0 ⊢ i0 
								f2_lp2 { c0 vf0 tij an i0 l0 } ⊢| 
	
				§ @.f2_lp3 { tav rsp a0 vs0 vs1 l0 e0 sl lb1 } 
					$ l0 ⊢ 
					∐ _cns◂{ n0 l0 } . 
						_lod_q { a0 n0 } ⊢ { a0 n0 { p0 p1 } } 
						subst_ptn { p0 sl } ⊢ { p0 sl } 
						∐ p0 ⊢ RP.atm◂v0; v0 ⊢ stt_v.hp◂{ r0 h0 }; p1 ⊢ RP.atm◂v1; v1 ⊢ stt_v.hp◂{ r1 h1 }; r0'=r1' .  
							f2_lp3 { tav rsp a0 vs0 vs1 l0 e0 sl lb1 } ⊢| 
						∐. . 
							$ vs0 ⊢ vs0,vs00 
							stt_v.mk_rset_x p1 ⊢ { p1 vp1 } 
							rset.and { vs00 vp1 } ⊢ { vs00 vp1 }
							» 0r _ ⊢ i0 
							lp0 { rsp vs1 vs00 i0 sl e0 } ⊢ { rsp vs1 vs00 sl e0 } 
							subst_ptn { p0 sl } ⊢ { p0 sl } 
							stt_v.mk_rset_x p0 ⊢ { p0 vp0 } 
							rset.sub { vs0 vp0 } ⊢ { vs0 vp0 } 
							rset.sub { vs0 vp1 } ⊢ { vs0 vp1 }
							$ lb1 ⊢ lb1,lb10  
							f { tav rsp vs0 p0 p1 lb10 } ⊢ { tav rsp vs0 e1 } 
							rp8.cct { e0 e1 } ⊢ e0 
							rset.or { vs0 vp1 } ⊢ { vs0 vp1 } 
							f2_lp3 { tav rsp a0 vs0 vs1 l0 e0 sl lb1 } ⊢| 
					∐. _nil◂{} . 
						∎ { tav rsp a0 vs0 vs1 e0 sl }
				§ f2 { tav rsp v0 p0 p1 lb1 }
					$ p0 ⊢ p0,p00 
					stt_v.pnt.f p00 ⊢ sp0 
					$ p1 ⊢ p1,p10 
					stt_v.pnt.f p10 ⊢ sp1 
					stt_v.mk_rset_x p0 ⊢ { p0 vs0 }
					stt_v.mk_rset_x p1 ⊢ { p1 vs1 }
					_nil {} ⊢ r0 
					f2_lp0 { p0 p1 r0 } ⊢ r0 
					arr_of_lst_len r0 ⊢ { a0 na }  
					##_arr_len a0 ⊢ { a0 na } 
					$ na ⊢ na,na0 
					_imul { na0 na } ⊢ { na0 na }
					_mk_arr na0 ⊢ { na0 tij } 
					» 0r _ ⊢ i0 
					f2_lp1_i { a0 tij na i0 } ⊢ { a0 tij na }   
					_none {} ⊢ c0 
					rset.ini {} ⊢ vf0 
					» 0r _ ⊢ i0 
					_nil {} ⊢ l0 
					f2_lp2 { c0 vf0 tij na i0 l0 } ⊢ { vf0 tij na l0 } 
					» _^ sp0,sp1 ⊢ sp0,sp1,spr 
						"; .mov_ptn2 " 0' " ⊢ " 1' "\n" //
					rp8.of_s8 spr ⊢ er 
					$ v0 ⊢ v0,v00 
					rset.or { vs0 v0 } ⊢ { vs0 v0 } 
					$ vs0 ⊢ vs0,vs01 
					rset.or { vs01 vs1 } ⊢ { vs01 vs1 } 
					_nil {} ⊢ sl 
					f2_lp3 { tav rsp a0 vs0 vs01 l0 er sl lb1 } ⊢ { tav rsp vs0 vs01 l0 er sl } 
					##rp8.mk_s8 er ⊢ { er sr } 
					##» "mov_ptn.f2 d1" _ ⊢ ee0 
					##_emt ee0 ⊢ _
					∎ { tav rsp v0 er }
				§ f3 { tav rsp v0 p0 p1 e0 }
					_none {} ⊢ o 
					f2 { tav rsp v0 p0 p1 o } ⊢ { tav rsp v0 e1 }
					rp8.cct { e0 e1 } ⊢ e0 
					∎ { tav rsp v0 e0 } 
				∎∎
			§§ mov_ptn2 
				§  	
					@.ptn { e0 tav rsp vs0 p0 p1 } 
						$ p1 ⊢ 
						∐ RP.rcd◂l1 . 
							∐ p0 ⊢ RP.rcd◂l0 . 		
								ptn_lst { e0 tav rsp vs0 l0 l1 } ⊢| 
							∐ p0 ⊢ RP.atm◂a0; a0 ⊢ stt_v.hp◂{ r0 h0 }; h0 ⊢ stt_v.ref◂q; q ⊢ stt_v.rcd◂l0 . 
								alc_vs vs0 ⊢ { vs0 m0 } 
								brk_rsp_e { rsp m0 e0 } ⊢ { rsp m0 e0 } 
								» 0r _ ⊢ i 
								r_to_rcd { e0 tav i rsp vs0 r0 l0 m0 l1 } ⊢| 
							∐. . 
								» "mov_ptn.lp1 0" _ ⊢ se 
								_emt se ⊢ se 
								∎|
						∐. RP.atm◂a1 . 
							∐ a1 ⊢ stt_v.hp◂{ r1 h1 } . 				
								brk_rsp_e { rsp r1 e0 } ⊢ { rsp r1 e0 } 
								ptn_to_r { e0 tav rsp vs0 p0 r1 h1 } ⊢| 
								## { e0 tav rsp { vs0 vss } sl }
								##mov.idx_rax { rsp r1 e0 } ⊢ { rsp _ e0 } 
								##∎ { e0 tav rsp { vs0 vss } sl }
							∐ a1 ⊢ stt_v.pt◂{ r10 r11 } . 
								max { r10 r11 } ⊢ { r10 r11 rM } 
								brk_rsp_e { rsp rM e0 } ⊢ { rsp rM e0 } 
								∐ p0 ⊢ RP.atm◂a0; a0 ⊢ stt_v.pt◂{ r00 r01 } . 
									mov_e { rsp r00 r10 e0 } ⊢ { rsp r00 r10 e0 } 
									mov_e { rsp r10 r11 e0 } ⊢ { rsp r10 r11 e0 } 
									∎ { e0 tav rsp vs0 } 
								∐ p0 ⊢ RP.atm◂a0; a0 ⊢ stt_v.hp◂{ r0 h0 }; h0 ⊢ stt_v.ref◂q0; q0 ⊢ stt_v.pt_hp◂{} . 
									reg { rsp r0 } ⊢ { rsp r0 sr0 br0 } 
									reg { rsp r10 } ⊢ { rsp r10 sr10 br10 } 
									reg { rsp r11 } ⊢ { rsp r11 sr11 br11 } 
									» _^ sr0,sr10,sr11 ⊢ sr0,sr10,sr11,sr 
										"\tmov rdi," 0' "\n"
										`	mov rsi,QWORD [rdi+8]
										"\tmov " 1' ",rsi\n" 
										`	mov rsi,QWORD [rdi+16]
										"\tmov " 2' ",rsi\n" //   
									rp8.add_s8 { e0 sr } ⊢ e0 
									∎ { e0 tav rsp vs0 }
								∐. . 
									» "mov_ptn.lp1 pt 0" _ ⊢ ee0 
									_emt ee0 ⊢ _ 
									∎| 
							∐ a1 ⊢ stt_v.stt_adt◂{ p1_i p1_n p1_p }; p0 ⊢ RP.atm◂a0; a0 ⊢ stt_v.stt_adt◂{ ia0 na0 pa0 } . 
								∐ p1_i'=ia0' . 
									ptn { e0 tav rsp vs0 pa0 p1_p } ⊢| 
								∐. . 
									» "stt stt 0" _ ⊢ se 
									_emt se ⊢ se 
									∎| 
							∐. . 
								» "mov_ptn.lp1 152" _ ⊢ se 
								_emt se ⊢ se  
								RP.atm a1 ⊢ p1 
								stt_v.pnt.f p1 ⊢ sp1 
								_emt sp1 ⊢ sp1 
								∎| 
					@.ptn_lst { e0 tav rsp vs0 l0 l1 }
						∐ l0 ⊢ _cns◂{ p0 l0 }; l1 ⊢ _cns◂{ p1 l1 } . 
							ptn { e0 tav rsp vs0 p0 p1 } ⊢ { e0 tav rsp vs0 }
							ptn_lst { e0 tav rsp vs0 l0 l1 } ⊢|			
						∐ l0 ⊢ _nil◂{}; l1 ⊢ _nil◂{} . 
							∎ { e0 tav rsp vs0 } 
						∐. . 
							» "lp1_lst 0" _ ⊢ se 
							_emt se ⊢ se 
							∎| 
					@.rcd_to_r { e0 tav i rsp vs0 l0 r1 l1 r2 }
						∐ l1 ⊢ _cns◂{ h1 l1 }; l0 ⊢ _cns◂{ p0 l0 } .  
							$ r2 ⊢ r2,r2_0 
							ptn_to_r { e0 tav rsp vs0 p0 r2_0 h1 } ⊢ { e0 tav rsp vs0 }
							mov.rax_idx { rsp r2 e0 } ⊢ { rsp r2 e0 } 
							mov.idx_blk_n_rax { rsp r1 i e0 } ⊢ { rsp r1 i e0 }  
							_inc i ⊢ i 
							rcd_to_r { e0 tav i rsp vs0 l0 r1 l1 r2 } ⊢| 
						∐ l1 ⊢ _nil◂{}; l0 ⊢ _nil◂{} . 
							∎ { e0 tav rsp vs0 }
						∐. . 
							» "rcd_to_r" _ ⊢ se 
							_emt se ⊢ se 
							∎|  
					@.ptn_to_r { e0 tav rsp vs0 p0 r1 h1 } 
						$ p0 ⊢ 
						∐ RP.rcd◂l0 . 
							∐ h1 ⊢ stt_v.ref◂q; q ⊢ stt_v.rcd◂l1 . 
								∐ l1 ⊢ _nil◂{} . 
									mov.idx_unt { rsp r1 e0 } ⊢ { rsp _ e0 } 
									∎ { e0 tav rsp vs0 }
								∐. . 
									alc_vs vs0 ⊢ { vs0 r2 } 
									brk_rsp_e { rsp r2 e0 } ⊢ { rsp r2 e0 } 
									reg { rsp r1 } ⊢ { rsp r1 sr1 br1 } 
									lst.len l1 ⊢ { l1 nl1 } 
									» _^ sr1,nl1 ⊢ sr1,nl1,ec1 
										"\tALC_RCD " 1d' ", rax\n" 
										"\tmov " 0' ",rax\n" 
										//
									rp8.add_s8 { e0 ec1 } ⊢ e0   
									$ r1 ⊢ r1,r10 
									» 0r _ ⊢ i 
									rcd_to_r { e0 tav i rsp vs0 l0 r1 l1 r2 } ⊢| 
							∐. . 
								» "\tRT_ERR 0xffff_0000\n" _ ⊢ ec1
								rp8.add_s8 { e0 ec1 } ⊢ e0 
								∎ { e0 tav rsp vs0 }
						∐. RP.atm◂a0 . 
							$ a0 ⊢ 
							∐ stt_v.hp◂{ r0 h0 } . 
								mov_e { rsp r0 r1 e0 } ⊢ { rsp _ _ e0 } 
								∎ { e0 tav rsp vs0 }
							∐ stt_v.hp_im◂cv . 
								∐ cv ⊢ ast.r64◂x . 
									mov.idx_im { rsp r1 x e0 } ⊢ { rsp _ _ e0 }
									∎ { e0 tav rsp vs0 }
								∐ cv ⊢ ast.s8◂s . 
									mk_s8 s ⊢ { s es } 
									rp8.cct { e0 es } ⊢ e0 
									mov.idx_rax { rsp r1 e0 } ⊢ { rsp _ e0 }
									∎ { e0 tav rsp vs0 }
								∐. .
									» "mov_ptn im hp 0" _ ⊢ ee0 
									_emt ee0 ⊢ ec0 
									∎| 
							∐ stt_v.hp_im_e◂ie . 
								» "mov_ptn im_e 08" _ ⊢ ee0 
								_emt ee0 ⊢ ec0 
								∎| 
							∐ stt_v.pt◂{ r00 r01 } . 
								∐ h1 ⊢ stt_v.ref◂q0; q0 ⊢ stt_v.pt_hp◂{} . 
									reg { rsp r00 } ⊢ { rsp r00 sr00 br00 } 
									reg { rsp r01 } ⊢ { rsp r01 sr01 br01 } 
									» _^ sr00,sr01 ⊢ sr00,sr01,ec1 
										`	ALC_PT rax 
										"\tmov rsi," 0' "\n" 
										`	mov QWORD [rax+8],rsi
										"\tmov rsi," 1' "\n" 
										`	mov QWORD [rax+16],rsi 
										//
									rp8.add_s8 { e0 ec1 } ⊢ e0   
									∎ { e0 tav rsp vs0 }
								∐. . 
									» "mov_ptn.ptn_to_r pt 0" _ ⊢ ee0 
									_emt ee0 ⊢ _
									∎|  
							∐. stt_v.stt_adt◂{ ia0 na0 pa0 } .
								∐ h1 ⊢ stt_v.adt◂{ ax1 ql1 } . 
									_lod_q { tav ax1 } ⊢ { tav ax1 { aw1 o1 } } 
									∐ o1 ⊢ _some◂{ vl1 kl1 pl1 ipl1 } . 
										mk_adt.f { ql1 pl1 ipl1 } ⊢ ipl1 
										$ ia0 ⊢ ia0,ia00
										lst.nth { ipl1 ia00 } ⊢ { ip1 ipl1 }
										$ ip1 ⊢ ip1,ip10 
										∐ ip1 ⊢ stt_v.ref◂q1 .
											∐ q1 ⊢ stt_v.rcd◂l1; l1 ⊢ _nil◂{} . 
												mov.idx_unt_n { rsp r1 ia0 e0 } ⊢ { rsp _ _ e0 }
												∎ { e0 tav rsp vs0 }
											∐. . 
												$ r1 ⊢ r1,r1_0 
												ptn_to_r { e0 tav rsp vs0 pa0 r1 ip10 } ⊢ { e0 tav rsp vs0 }
												mov.idx_set_n { rsp r1_0 ia0 e0 } ⊢ { rsp _ _ e0 } 
												∎ { e0 tav rsp vs0 }
										∐. .
											$ r1 ⊢ r1,r1_0 
											ptn_to_r { e0 tav rsp vs0 pa0 r1_0 ip10 } ⊢ { e0 tav rsp vs0 }
											alc_ln_n { rsp r1 ia0 e0 } ⊢ { rsp _ _ e0 }
											∎ { e0 tav rsp vs0 }
									∐. . 
										» "mov_ptn.ptn_to_r 0" _ ⊢ ee0 
										_emt ee0 ⊢ _ 
										∎| 
								∐. . 
									» "\tRT_ERR 0xffff_0001\n" _ ⊢ ec1
									rp8.add_s8 { e0 ec1 } ⊢ e0 
									∎ { e0 tav rsp vs0 }
					@.r_to_ptn { e0 tav rsp vs0 r0 h0 p1 }  
						∐ p1 ⊢ RP.rcd◂l1; h0 ⊢ stt_v.ref◂q; q ⊢ stt_v.rcd◂l0 . 
							alc_vs vs0 ⊢ { vs0 m0 } 
							brk_rsp_e { rsp m0 e0 } ⊢ { rsp m0 e0 } 
							» 0r _ ⊢ i 
							r_to_rcd { e0 tav i rsp vs0 r0 l0 m0 l1 } ⊢| 
						∐ p1 ⊢ RP.atm◂a1; a1 ⊢ stt_v.hp◂{ p1_r p1_h } . 
							brk_rsp_e { rsp p1_r e0 } ⊢ { rsp p1_r e0 } 
							mov_e { rsp r0 p1_r e0 } ⊢ { rsp r0 p1_r e0 } 
							##rset.set_t { vs0 p1_r } ⊢ { vs0 p1_r }
							∎ { e0 tav rsp vs0 }
						∐. . 
							» "mov_ptn.lp1 1007" _ ⊢ se 
							_emt se ⊢ se 
							∎|   							
					@.r_to_rcd { e0 tav i rsp vs0 r0 l0 m0 l1 } 
						∐ l0 ⊢ _cns◂{ h0 l0 }; l1 ⊢ _cns◂{ p1 l1 } .  
							mov.idx_idx_blk_n { rsp m0 r0 i e0 } ⊢ { rsp m0 r0 i e0 } 
							$ m0 ⊢ m0,m00 
							r_to_ptn { e0 tav rsp vs0 m00 h0 p1 } ⊢ { e0 tav rsp vs0 }
							_inc i ⊢ i 
							r_to_rcd { e0 tav i rsp vs0 r0 l0 m0 l1 } ⊢| 
						∐ l0 ⊢ _nil◂{}; l1 ⊢ _nil◂{} . 
							∐ i'=0r . 
								∎ { e0 tav rsp vs0 } 
							∐. . 
								reg { rsp r0 } ⊢ { rsp r0 er0 erb } 
								» _^ er0,i ⊢ _,_,sc0 
									"\tmov rdi," 0' "\n" 
									"\tFREE_RCD " 1d' ",rdi\n" // 
								rp8.add_s8 { e0 sc0 } ⊢ e0 
								∎ { e0 tav rsp vs0 }
						∐. . 
							» "r_to_rcd" _ ⊢ se 
							_emt se ⊢ se 
							∎|  
				§ @.f2_lp0 { p0 p1 r } 
						∐ p0 ⊢ RP.rcd◂l0; p1 ⊢ RP.rcd◂l1 . 
							f2_lp0_lst { l0 l1 r } ⊢| 
						∐. . 
							_cns { { p0 p1 } r } ⊢ r 
							∎ r
					@.f2_lp0_lst { l0 l1 r }
						∐ l0 ⊢ _cns◂{ p0 l0 }; l1 ⊢ _cns◂{ p1 l1 } . 
							f2_lp0 { p0 p1 r } ⊢ r 
							f2_lp0_lst { l0 l1 r } ⊢| 
						∐ l0 ⊢ _nil◂{}; l1 ⊢ _nil◂{} . 
							∎ r
						∐. . 
						» "mov_ptn.lp1 10000" _ ⊢ se 
									_emt se ⊢ se 
							∎|
				§ @.f2_lp1_i { a0 tij an i0 } 
						∐ i0'=an' . 
							∎ { a0 tij an }
						∐. . 
							» 0r _ ⊢ j0 
							f2_lp1_j { a0 tij an i0 j0 } ⊢ { a0 tij i0 an } 
							_inc i0 ⊢ i0 
							f2_lp1_i { a0 tij an i0 } ⊢| 
					@.f2_lp1_j { a0 tij an i0 j0 } 
						∐ j0'=an' . 
							∎ { a0 tij i0 an }
						∐. . 
							_lod_q { a0 i0 } ⊢ { a0 i0 { pi0 pi1 } }
							_lod_q { a0 j0 } ⊢ { a0 j0 { pj0 pj1 } } 
							stt_v.mk_rset_x pi1 ⊢ { pi1 vi }
							stt_v.mk_rset_x pj0 ⊢ { pj0 vj } 
							rset.and { vi vj } ⊢ { vi vj } 
							rset.is_zero vi ⊢ { vi b0 }
							$ i0 ⊢ i0,i00 
							_imul { i00 an } ⊢ { i00 an }
							_add { i00 j0 } ⊢ { i00 j0 }
							_set_q { tij i00 b0 } ⊢ { tij i00 }
							_inc j0 ⊢ j0 
							f2_lp1_j { a0 tij an i0 j0 } ⊢| 
				§ @.f2_lp2 { c0 vf0 tij an i0 l0 } 
						∐ i0'=an' . 
							∎ { vf0 tij an l0 } 
						∐. . 
							_lod_q { vf0 i0 } ⊢ { vf0 i0 b0 } 
							∐ b0 ⊢ bl.f◂{} . 
								$ c0 ⊢ c0,c01 
								$ c0 ⊢ 
								∐ _some◂c0 . 
									$ c0 ⊢ c0,c00 
									_imul { c00 an } ⊢ { c00 an }
									_add { c00 i0 } ⊢ { c00 i0 }
									_lod_q { tij c00 } ⊢ { tij c00 b0 }
									∐ b0 ⊢ bl.t◂{} . 
										bl.t {} ⊢ bt1 
										exc_q { vf0 i0 bt1 } ⊢ { vf0 i0 bt1 } 
										» 0r _ ⊢ j0 
										$ i0 ⊢ i0,i00 
										_some i00 ⊢ ci0 
										f2_lp2 { ci0 vf0 tij an j0 l0 } ⊢ { vf0 tij an l0 }
										$ i0 ⊢ i0,i00 
										_cns { i00 l0 } ⊢ l0 
										_inc i0 ⊢ i0 
										f2_lp2 { c01 vf0 tij an i0 l0 } ⊢|
									∐. . 
										_inc i0 ⊢ i0 
										f2_lp2 { c01 vf0 tij an i0 l0 } ⊢| 
								∐. _none◂{} . 
									bl.t {} ⊢ bt1 
									exc_q { vf0 i0 bt1 } ⊢ { vf0 i0 bt1 } 
									» 0r _ ⊢ j0 
									$ i0 ⊢ i0,i00 
									_some i00 ⊢ ci0 
									f2_lp2 { ci0 vf0 tij an j0 l0 } ⊢ { vf0 tij an l0 } 
									$ i0 ⊢ i0,i00 
									_cns { i00 l0 } ⊢ l0 
									_inc i0 ⊢ i0 
									f2_lp2 { c01 vf0 tij an i0 l0 } ⊢|
							∐. . 
								_inc i0 ⊢ i0 
								f2_lp2 { c0 vf0 tij an i0 l0 } ⊢| 
				§ @.lp0 { e0 rsp i vs0 vss v1 sl }
					∐ i'=128r . 
						∎ { e0 rsp vs0 vss v1 sl } 
					∐. . 
						_lod_q { vss i } ⊢ { vss i b0 } 
						_lod_q { v1 i } ⊢ { v1 i b1 } 
						∐ b0 ⊢ bl.t◂{}; b1 ⊢ bl.t◂{} .
							alc_vs vs0 ⊢ { vs0 m0 }
							brk_rsp_e { rsp m0 e0 } ⊢ { rsp m0 e0 } 
							mov_e { rsp i m0 e0 } ⊢ { rsp i m0 e0 }
							rset.set_f { vss i } ⊢ { vss i } 
							rset.set_t { vss m0 } ⊢ { vss m0 } 
							$ i ⊢ i,i0 
							_some m0 ⊢ o 
							_cns { { i0 o } sl } ⊢ sl 
							_inc i ⊢ i 
							lp0 { e0 rsp i vs0 vss v1 sl } ⊢| 
						∐. . 
							_inc i ⊢ i 
							lp0 { e0 rsp i vs0 vss v1 sl } ⊢| 
				§ @.f2_lp3 { tav rsp a0 { vs0 vss } l0 e0 sl } 
					$ l0 ⊢ 
					∐ _cns◂{ n0 l0 } . 
						_lod_q { a0 n0 } ⊢ { a0 n0 { p0 p1 } } 
						subst_ptn { p0 sl } ⊢ { p0 sl } 
						∐ p0 ⊢ RP.atm◂v0; v0 ⊢ stt_v.hp◂{ r0 h0 }; p1 ⊢ RP.atm◂v1; v1 ⊢ stt_v.hp◂{ r1 h1 }; r0'=r1' .  
							f2_lp3 { tav rsp a0 { vs0 vss } l0 e0 sl } ⊢| 
						∐. . 
							stt_v.mk_rset_x p1 ⊢ { p1 v1 } 
							» 0r _ ⊢ i 
							lp0 { e0 rsp i vs0 vss v1 sl } ⊢ { e0 rsp vs0 vss v1 sl }
							subst_ptn { p0 sl } ⊢ { p0 sl } 
							stt_v.mk_rset_x p0 ⊢ { p0 v0 } 
							$ vs0 ⊢ vs0,vs00
							rset.sub { vss v0 } ⊢ { vss v0 } 
							rset.sub { vs0 v0 } ⊢ { vs0 _ } 
							rset.or { vs0 v1 } ⊢ { vs0 v1 } 
							ptn { e0 tav rsp vs00 p0 p1 } ⊢ { e0 tav rsp _ } 
							f2_lp3 { tav rsp a0 { vs0 vss } l0 e0 sl } ⊢| 
					∐. _nil◂{} . 
						∎ { tav rsp a0 { vs0 vss } e0 sl }
				§ f2 { tav rsp v0 p0 p1 ec0 }
					$ p0 ⊢ p0,p00 
					stt_v.pnt.f p00 ⊢ sp0 
					$ p1 ⊢ p1,p10 
					stt_v.pnt.f p10 ⊢ sp1 
					stt_v.mk_rset_x p0 ⊢ { p0 vp0 } 
					stt_v.mk_rset_x p1 ⊢ { p1 vp1 } 
					_nil {} ⊢ r0 
					f2_lp0 { p0 p1 r0 } ⊢ r0 
					arr_of_lst_len r0 ⊢ { a0 na }  
					##_arr_len a0 ⊢ { a0 na } 
					$ na ⊢ na,na0 
					_imul { na0 na } ⊢ { na0 na }
					_mk_arr na0 ⊢ { na0 tij } 
					» 0r _ ⊢ i0 
					f2_lp1_i { a0 tij na i0 } ⊢ { a0 tij na }   
					rset.ini {} ⊢ vf0 
					» 0r _ ⊢ i0 
					_nil {} ⊢ l0 
					_none {} ⊢ c0 
					f2_lp2 { c0 vf0 tij na i0 l0 } ⊢ { vf0 tij na l0 } 
					$ v0 ⊢ v0,vc0 
					rset.or { vc0 vp0 } ⊢ { vc0 vp0 } 
					rset.or { vc0 vp1 } ⊢ { vc0 vp1 } 
					rset.pnt.f vc0 ⊢ { vc0 svc0 }
					» _^ sp0,sp1,svc0 ⊢ sp0,sp1,_,spr 
						"; .mov_ptn2 " 0' " ⊢ " 1' "\n" 
						"; {| " 2' "0.. |}\n" //
					rp8.add_s8 { ec0 spr } ⊢ ec0 
					_nil {} ⊢ sl 
					f2_lp3 { tav rsp a0 { vc0 vp0 } l0 ec0 sl } ⊢ { tav rsp a0 { vc0 vp0 } ec0 sl } 
					∎ { tav rsp v0 ec0 }
				∎∎
			§§ push_regs 
				§ @.lp { rsp irv v i n l e } 
					∐ i' = REG_N . 
						sub_rsp n ⊢ { n e1 } 
						rp8.pfx_s8 { e1 e } ⊢ e 
						∎ { rsp irv v i n l e } 
					∐. . 
						_lod_q { v i } ⊢ { v i b } 
						$ b ⊢ 
						∐ bl.f◂{} . 
							_inc i ⊢ i 
							lp { rsp irv v i n l e } ⊢| 
						∐. bl.t◂{} . 
							» REG_N _ ⊢ m0 
							_add { m0 rsp } ⊢ { m0 rsp } 
							rset.set_f { v i } ⊢ { v i } 
							rset.set_t { v m0 } ⊢ { v m0 } 
							 $ i ⊢ i,i0 
							_cns { i0 l } ⊢ l 
							##reg { rsp i } ⊢ { rsp i si b0 } 
							» "rsp" _ ⊢ si 
							» 3r _ ⊢ xa 
							_shl { n xa } ⊢ { n xa } 
							mov.lea_reg_idx { rsp si n i e } ⊢ { rsp _ n i e } 
							_shr { n xa } ⊢ { n _ } 
							_inc i ⊢ i 
							_inc n ⊢ n 
							_inc rsp ⊢ rsp 
							lp { rsp irv v i n l e } ⊢| 
				§ f { rsp irv rl er } 
					stt_v.mk_rset_env_x { irv rl } ⊢ { irv rl v } 
					» 0r _ ⊢ i 
					» 0r _ ⊢ n 
					_nil {} ⊢ l 
					rp8.e {} ⊢ e 
					lp { rsp irv v i n l e } ⊢ { rsp irv v i n l e }
					rp8.cct { er e } ⊢ er 
					∎ { rsp irv v rl er n l }
				∎∎
			§ shft { i n } 
				» REG_N _ ⊢ j 
				_setge { i j } ⊢ { i j b }
				∐ b'=1r . 
					_add { i n } ⊢ { i n } 
					∎ { i n } 
				∐. . 
					∎ { i n }
			§ @.shft_ptn { p n }
				$ p ⊢ 
				∐ RP.rcd◂l . 
					shft_ptn_lst { l n } ⊢ { l n } 
					RP.rcd l ⊢ p 
					∎ { p n }
				∐. RP.atm◂a .
					∐ a ⊢ stt_v.hp◂{ r0 h } . 
						shft { r0 n } ⊢ { r0 n } 
						stt_v.hp { r0 h } ⊢ a 
						RP.atm a ⊢ p 
						∎ { p n }
					∐ a ⊢ stt_v.pt◂{ r0 r1 } . 
						shft { r0 n } ⊢ { r0 n } 
						shft { r1 n } ⊢ { r1 n } 
						stt_v.pt { r0 r1 } ⊢ a 
						RP.atm a ⊢ p 
						∎ { p n }
					∐ a ⊢ stt_v.stt_adt◂{ ia nn pa } . 
						shft_ptn { pa n } ⊢ { pa n }
						stt_v.stt_adt { ia nn pa } ⊢ a 
						RP.atm a ⊢ p 
						∎ { p n }
					∐. . 
						RP.atm a ⊢ p
						∎ { p n }
				@.shft_ptn_lst { l n } 
					$ l ⊢ 
					∐ _cns◂{ p l } . 
						shft_ptn { p n } ⊢ { p n } 
						shft_ptn_lst { l n } ⊢ { l n }
						_cns { p l } ⊢ l 
						∎ { l n }
					∐. _nil◂{} . 
						_nil {} ⊢ l 
						∎ { l n }
			§§ pop_regs 
				§ @.lp { rsp irv v0 v1 rl i l sl e0 }
					$ l ⊢ 
					∐ _cns◂{ j l } . 
						_lod_q { v1 j } ⊢ { v1 j b } 
						$ b ⊢ 
						∐ bl.t◂{} . 
							rset.set_f { v0 i } ⊢ { v0 i } 
							alc_vs v0 ⊢ { v0 m0 } 
							##mov { rsp j m0 } ⊢ { rsp j m0 em0 }
							brk_rsp { rsp m0 } ⊢ { rsp m0 sb0 } 
							rp8.add_s8 { e0 sb0 } ⊢ e0
							mov { rsp j m0 } ⊢ { rsp j m0 em0 } 
							reg { rsp j } ⊢ { rsp j ej bc } 
							reg { rsp i } ⊢ { rsp i ei bi } 
							∐ m0'=i' . 
								» _^ em0,ej,ei ⊢ em0,ej,ei,e1 
									"\tmov rax," 2' "\n" 
									0' 
									"\tmov " 1' ",rax\n" //
								rp8.add_s8 { e0 e1 } ⊢ e0 
								_some m0 ⊢ o 
								_cns { { j o } sl } ⊢ sl 
								_inc i ⊢ i 
								lp { rsp irv v0 v1 rl i l sl e0 } ⊢|
							∐. .
								mov { rsp i j } ⊢ { rsp i j em1 } 
								» _^ em0,em1 ⊢ em0,em1,e1 
									0' 
									1' //
								rp8.add_s8 { e0 e1 } ⊢ e0 
								_some m0 ⊢ o 
								_cns { { j o } sl } ⊢ sl 
								_inc i ⊢ i 
								lp { rsp irv v0 v1 rl i l sl e0 } ⊢|
						∐. bl.f◂{} . 
							rset.set_f { v0 i } ⊢ { v0 i }
							brk_rsp { rsp j } ⊢ { rsp j sb0 } 
							rp8.add_s8 { e0 sb0 } ⊢ e0
							mov { rsp i j } ⊢ { rsp i j em0 } 
							rp8.add_s8 { e0 em0 } ⊢ e0 
							_inc i ⊢ i 
							lp { rsp irv v0 v1 rl i l sl e0 } ⊢|
					∐. _nil◂{} . 
						∎ { rsp irv v0 v1 rl i sl e0 } 
				§ f { rsp irv rl p1 l vv n } 
					##» "pop_regs D0" _ ⊢ ee0 
					##_emt ee0 ⊢ _ 
					$ rl ⊢ rl,rl0 
					$ vv ⊢ vv,v0 
					stt_v.mk_rset_env { irv rl0 v0 } ⊢ { irv v0 }
					stt_v.mk_rset_x p1 ⊢ { p1 v1 }
					rset.or { v0 v1 } ⊢ { v0 v1 }
					_nil {} ⊢ sl 
					##» "" _ ⊢ e1 
					$ n ⊢ n,i
					rp8.e {} ⊢ e1 
					lp { rsp irv v0 v1 rl i l sl e1 } ⊢ { rsp irv v0 v1 rl i sl e1 }
					rset.max_t v0 ⊢ { v0 im } 
					resize_rsp { rsp im } ⊢ { rsp im er }
					rp8.add_s8 { e1 er } ⊢ e1
					subst_ptn { p1 sl } ⊢ { p1 sl }
					##» "pop_regs D1" _ ⊢ ee0 
					##_emt ee0 ⊢ _ 
					rp8.mk_s8 e1 ⊢ { e1 e2 }
					∎ { rsp irv rl p1 e2 vv n }
				∎∎
			§ @.pnt_env_lp { irv rl } 
				$ rl ⊢ 
				∐ _cns◂{ i rl } . 
					_lod_q { irv i } ⊢ { irv i p } 
					stt_v.pnt.f p ⊢ sp 
					pnt_env_lp { irv rl } ⊢ { irv sr }
					» _^ i,sp,sr ⊢ i,sp,sr,srr 
						"%" 0d' "~" 1' " " 2' // 
					∎ { irv srr }
				∐. _nil◂{} . 
					» "" _ ⊢ sr 
					∎ { irv sr } 
			§ pnt_env { irv rsp rl } 
				pnt_env_lp { irv rl } ⊢ { irv s }
				» _^ rsp,s ⊢ rsp,s,sr 
					";; rsp=" 0d' " , " 1' "\n" // 
				∎ { irv rsp sr } 

			§§ dlt 
				§ @.ptn { lb_n rsp p } 
					∐ p ⊢ RP.rcd◂l . 
						ptn_lst { lb_n rsp l } ⊢| 
					∐. p ⊢ RP.atm◂a . 	
						∐ a ⊢ stt_v.hp◂{ r h } . 
							hp { rsp r h } ⊢ { rsp eh } 
							∐ eh ⊢ _some◂eh . 
								∎ { lb_n rsp eh }
							∐. . 
								rp8.e {} ⊢ e 
								∎ { lb_n rsp e }
						∐ a ⊢ stt_v.pt◂{ r0 r1 } .
							rp8.e {} ⊢ e0  
							∎ { lb_n rsp e0 }
						∐ a ⊢ stt_v.stt_adt◂{ ia na pa } . 
							ptn { lb_n rsp pa } ⊢| 
						∐ a ⊢ stt_v.hp_im◂v .  
							rp8.e {} ⊢ e 
							∎ { lb_n rsp e }
						\[
						∐ a ⊢ stt_v.dyn_agl◂{ ir nr rp lr } . 
							reg { rsp ir } ⊢ { rsp ir sir bir } 
							$ lb_n ⊢ lb_n,lb1 
							_inc lb_n ⊢ lb_n 
							$ lb_n ⊢ lb_n,lb0 
							_inc lb_n ⊢ lb_n 
							$ lb_n ⊢ lb_n,lb_b 
							$ lb1 ⊢ lb1,lb10 
							dyn_agl { rsp rp lr lb10 lb_n } ⊢ { rsp lb_n eg beg }
							∐ beg ⊢ bl.t◂{} . 
								$ lb_n ⊢ lb_n,lb_c 
								_sub { lb_c lb_b } ⊢ { lb_c lb_b } 
								mk_jmp_tbl { lb_b lb_c } ⊢ { lb_b et } 
								rp8.mk_s8 et ⊢ { et st } 
								» _^ lb0,sir,st ⊢ lb0,sir,st,sj 
									"\tmov rdi," 1' "\n" 
									"\tjmp QWORD [LB_" 0d' "+8*rdi]\n"
									"LB_" 0d' ": dq " 2' "\n" //
								rp8.of_s8 sj ⊢ ej 
								rp8.cct { ej eg } ⊢ e 
								» _^ lb1 ⊢ lb1,e1 
									"LB_" 0d' ":\n" // 
								rp8.of_s8 e1 ⊢ e1 
								rp8.cct { e e1 } ⊢ e    
								∎ { lb_n rsp e }
							∐. . 
								rp8.e {} ⊢ e 
								∎ { lb_n rsp e }
						\]
						∐. . 
							» "dlt 1" _ ⊢ se 
							_emt se ⊢ se 
							∎| 
					@.hp { rsp r h } 
						$ h ⊢ 
						∐ stt_v.adt◂{ ax0 ql0 } . 
							» _^ _ ⊢ e0 
								`;	.dlt adt ⊢ _  
								// 
							rp8.of_s8 e0 ⊢ e0 
							_some e0 ⊢ e0 
							∎ { rsp e0 }
						∐ stt_v.ref◂q .
							$ q ⊢ 
							∐ stt_v.opq◂{} . 
								reg { rsp r } ⊢ { rsp r er br } 
								» _^ er ⊢ er,e 
									"\tmov rdi," 0' "\n"  
									`	call free_s8 
									//
								rp8.of_s8 e ⊢ e 
								_some e ⊢ e 
								∎ { rsp e } 
							∐ stt_v.arr◂h .
								» _^ _ ⊢ sc1 
									"; .dlt.hp \n" // 
								rp8.of_s8 sc1 ⊢ e 
								_some e ⊢ e 
								∎ { rsp e } 
							∐ stt_v.clr◂h . 
								» _^ _ ⊢ sc1 
									"; .dlt.hp clr\n" // 
								rp8.of_s8 sc1 ⊢ e 
								_some e ⊢ e 
								∎ { rsp e } 
							∐ stt_v.pt_hp◂{} . 
								» _^ _ ⊢ sc1 
									"; .dlt.hp pt\n" // 
								rp8.of_s8 sc1 ⊢ e 
								_some e ⊢ e 
								∎ { rsp e } 
							∐. stt_v.rcd◂l .
								» _^ _ ⊢ sc1 
									"; .dlt.hp rcd\n" // 
								rp8.of_s8 sc1 ⊢ e 
								_some e ⊢ e 
								∎ { rsp e }  
						∐ stt_v.r64◂{} . 
							_none {} ⊢ e 
							∎ { rsp e }
						∐. stt_v.pv◂ipv. 
							\[
							» "dlt.hp 4" _ ⊢ se 
								_emt se ⊢ se 
								∎| 
								\]
								» _^ _ ⊢ sc1 
									"; .dlt.hp pv\n" // 
								rp8.of_s8 sc1 ⊢ e 
								_some e ⊢ e 
								∎ { rsp e } 
					@.dyn_agl { rsp r lr lb1 lb_n } 
						$ lr ⊢ 
						∐ _cns◂{ h lr } . 
							$ r ⊢ r,r0  
							hp { rsp r0 h } ⊢ { rsp eh } 
							∐ eh ⊢ _some◂eh . 
								» _^ lb_n ⊢ lb_n,e1 
									"LB_" 0d' ":\n" // 
								_inc lb_n ⊢ lb_n 
								rp8.of_s8 e1 ⊢ e1 
								rp8.cct { e1 eh } ⊢ e 
								» _^ lb1 ⊢ lb1,el0 
									"\tjmp LB_" 0d' "\n" // 
								rp8.of_s8 el0 ⊢ el0 
								rp8.cct { e el0 } ⊢ e 
								dyn_agl { rsp r lr lb1 lb_n } ⊢ { rsp lb_n e2 be } 
								bl.t {} ⊢ be1 
								rp8.cct { e e2 } ⊢ e 
								∎ { rsp lb_n e be1 }
							∐. . 
								» _^ lb_n,lb1 ⊢ lb_n,lb1,e 
									"LB_" 0d' ":\n" 
									"\tjmp LB_" 1d' "\n" // 
								_inc lb_n ⊢ lb_n 
								rp8.of_s8 e ⊢ e 
								dyn_agl { rsp r lr lb1 lb_n } ⊢ { rsp lb_n e2 be } 
								∐ be ⊢ bl.t◂{} . 
									bl.t {} ⊢ be1 
									rp8.cct { e e2 } ⊢ e 
									∎ { rsp lb_n e be1 }
								∐. . 
									bl.f {} ⊢ be1 
									rp8.cct { e e2 } ⊢ e 
									∎ { rsp lb_n e be1 }
						∐. _nil◂{} . 
							rp8.e {} ⊢ e 
							bl.f {} ⊢ be 
							∎ { rsp lb_n e be } 
					@.ptn_lst { lb_n rsp l } 
					$ l ⊢ 
					∐ _cns◂{ p l } . 
						ptn { lb_n rsp p } ⊢ { lb_n rsp ep } 
						ptn_lst { lb_n rsp l } ⊢ { lb_n rsp el } 
						rp8.cct { ep el } ⊢ e 
						∎ { lb_n rsp e }
					∐. _nil◂{} . 
						rp8.e {} ⊢ e 
						∎ { lb_n rsp e } 
				§ @.f { lb_n rsp dl }
					$ dl ⊢ 
					∐ _cns◂{ p dl } . 
						$ p ⊢ p,p0 
						stt_v.pnt.f p0 ⊢ sp 
						» _^ sp ⊢ sp,sc 
							"; .dlt.ptn " 0' "\n" // 
						rp8.of_s8 sc ⊢ sc 
						ptn { lb_n rsp p } ⊢ { lb_n rsp ep } 
						f { lb_n rsp dl } ⊢ { lb_n rsp e } 
						rp8.cct { sc ep } ⊢ ep 
						rp8.cct { ep e } ⊢ e 
						∎ { lb_n rsp e }
					∐. _nil◂{} . 
						rp8.e {} ⊢ e 
						∎ { lb_n rsp e }
				§ @.env_lp { lb_n rsp irv rl } 
					$ rl ⊢ 
					∐ _cns◂{ i rl } . 
						_lod_q { irv i } ⊢ { irv i p } 
						$ p ⊢ p,p0 
						stt_v.pnt.f p0 ⊢ sp 
						» _^ sp ⊢ sp,sc 
							"; .dlt.ptn " 0' "\n" //
						rp8.of_s8 sc ⊢ sc 
						ptn { lb_n rsp p } ⊢ { lb_n rsp ep } 
						rp8.cct { sc ep } ⊢ ep 
						env_lp { lb_n rsp irv rl } ⊢ { lb_n rsp irv sr }
						rp8.cct { ep sr } ⊢ e  
						∎ { lb_n rsp irv e }
					∐. _nil◂{} . 
						rp8.e {} ⊢ e 
						∎ { lb_n rsp irv e } 
				§ env { lb_n irv rsp rl } 
					env_lp { lb_n rsp irv rl } ⊢ { lb_n rsp irv s }
					∎ { lb_n irv rsp s }   
				∎∎ 
			§§ dlt 
				§ 
					@.ptn { ahl fl tav lb_n rsp is0 { eds e0 } } 
						$ is0 ⊢ 
						∐ RP.rcd◂l0 . 
							ptn_lst { ahl fl tav lb_n rsp l0 { eds e0 } } ⊢ { ahl fl tav lb_n rsp { eds e0 } }
							∎	{ ahl fl tav lb_n rsp { eds e0 } }
						∐. RP.atm◂k0 . 
							$ k0 ⊢ 
							∐ stt_v.hp◂{ r h } . 
								reg { rsp r } ⊢ { rsp r sr b }
								» _^ sr ⊢ sr,s0 
									"\tmov rdi," 0' "\n"
									push_c_regs
									"\tmov r8,rdi\n" 
									//		
								rp8.add_s8 { e0 s0 } ⊢ e0 
								hp { ahl fl tav lb_n h e0 } ⊢ { ahl fl tav lb_n e0 } 
								» _^ _ ⊢ s0 
									pop_c_regs //
								rp8.add_s8 { e0 s0 } ⊢ e0 
								∎ { ahl fl tav lb_n rsp { eds e0 } } 								
							∐ stt_v.hp_im◂iv . 
								∎ { ahl fl tav lb_n rsp { eds e0 } }
							∐ stt_v.hp_im_e◂ie0 . 
								∎ { ahl fl tav lb_n rsp { eds e0 } }
							∐ stt_v.pt◂{ r0 r1 } . 	
								» "clr A0" _ ⊢ ee0 
								_emt ee0 ⊢ _ 
								∎|  
							∐. stt_v.stt_adt◂{ ia0 na0 pa0 } .
								ptn { ahl fl tav lb_n rsp pa0 { eds e0 } } ⊢| 
					@.hp { ahl fl tav lb_n h e0 } 
						$ h ⊢ 
						∐ stt_v.r64◂{} . 
							∎ { ahl fl tav lb_n e0 }
						∐ stt_v.ref◂q0 . 
							$ q0 ⊢ 
							∐ stt_v.opq◂{} . 
								» _^ _ ⊢ s1 
									`	mov rdi,r8
									`	call free_s8
									//		
								rp8.add_s8 { e0 s1 } ⊢ e0 
								∎ { ahl fl tav lb_n e0 }
							∐ stt_v.arr◂h0 . 
								inc_x lb_n ⊢ { lb0 lb_n } 
								inc_x lb_n ⊢ { lb1 lb_n } 
								» _^ lb0,lb1 ⊢ lb0,lb1,s1 
									`	GET_LEN rsi,r8
									`	mov rax,0 
									"LB_" 0d' ":\n"
									`	cmp rsi,rax 
									"\tjz LB_" 1d' "\n"
									`	push r8 
									`	push rsi 
									`	push rax 
									`	mov r8,QWORD [r8+8+8*rax]
									//
								rp8.add_s8 { e0 s1 } ⊢ e0
								hp { ahl fl tav lb_n h0 e0 } ⊢ { ahl fl tav lb_n e0 } 
								» _^ lb0,lb1 ⊢ lb0,lb1,s1 	 
									`	pop rax 
									`	pop rsi 
									`	pop r8 
									`	add rax,1 
									"\tjmp LB_" 0d' "\n" 
									"LB_" 1d' ":\n" 
									//	
								rp8.add_s8 { e0 s1 } ⊢ e0
								∎ { ahl fl tav lb_n e0 } 
							∐ stt_v.clr◂h0 . 
							» "clr A1" _ ⊢ ee0 
								_emt ee0 ⊢ _ 
								∎|
							∐ stt_v.pt_hp◂{} . 
								» "clr A2" _ ⊢ ee0 
								_emt ee0 ⊢ _ 
								∎|
							∐. stt_v.rcd◂l0 . 
								» 0r _ ⊢ i0 
								hp_rcd { ahl fl tav lb_n l0 i0 e0 } ⊢ { ahl fl tav lb_n e0 }
								∎	{ ahl fl tav lb_n e0 }
						∐ stt_v.adt◂{ ax0 l0 } . 
							$ ax0 ⊢ ax0,ax00 
							$ l0 ⊢ l0,l00 
							stt_v.adt { ax00 l00 } ⊢ h0 
							» e_axm.dlt _ ⊢ ig0 
							find_axm.f { ahl ig0 h0 } ⊢ { ahl ig0 h0 o } 
							$ o ⊢ 
							∐ _some◂lb0 . 
								» _^ lb0 ⊢ lb0,s1 
									"\tcall LB_" 0d' "\n"  
									//		
								rp8.add_s8 { e0 s1 } ⊢ e0 
								∎ { ahl fl tav lb_n e0 }
							∐. _none◂{} . 
								inc_x lb_n ⊢ { lb0 lb_n } 
								» _^ lb0 ⊢ lb0,s1 
									"\tcall LB_" 0d' "\n"  
									//		
								rp8.add_s8 { e0 s1 } ⊢ e0 
								$ lb0 ⊢ lb0,lb00 
								gnr_axm { lb00 ig0 h0 } ⊢ o 
								_cns { o ahl } ⊢ ahl 
								_cns { { ax0 l0 lb0 } fl } ⊢ fl 
								∎ { ahl fl tav lb_n e0 }
						∐. stt_v.pv◂pv0 .  
							» _^ _ ⊢ ec1
									`	mov rdi,rt_err0 
									`	call emt_stg
									`	mov QWORD [err_n],0xffff_0002
									`	jmp err
									// 
								rp8.add_s8 { e0 ec1 } ⊢ e0 
								∎ { ahl fl tav lb_n e0 }
					@.hp_rcd { ahl fl tav lb_n l0 i0 e0 }
						$ l0 ⊢ 
						∐ _cns◂{ h l0 } . 
							» _^ i0 ⊢ i0,s0 
								"\tpush r8\n" 
								"\tmov r8,QWORD [r8+8+8*" 0d' "]\n" // 
							rp8.add_s8 { e0 s0 } ⊢ e0 
							hp { ahl fl tav lb_n h e0 } ⊢ { ahl fl tav lb_n e0 } 
							» _^ _ ⊢ s0 
								`	pop r8 
								//
							rp8.add_s8 { e0 s0 } ⊢ e0 
							_inc i0 ⊢ i0 
							hp_rcd { ahl fl tav lb_n l0 i0 e0 } ⊢| 
						∐. _nil◂{} . 
							∐ i0'=0r . 
								∎ { ahl fl tav lb_n e0 }
							∐. . 
								» _^ i0 ⊢ i0,s0 
									"\tFREE_RCD " 0d' ", r8\n" //
								rp8.add_s8 { e0 s0 } ⊢ e0 
								∎ { ahl fl tav lb_n e0 }
					@.ptn_lst { ahl fl tav lb_n rsp l0 { eds e0 } } 
						$ l0 ⊢ 
						∐ _cns◂{ p0 l0 } . 
							ptn { ahl fl tav lb_n rsp p0 { eds e0 } } ⊢ { ahl fl tav lb_n rsp { eds e0 } }
							ptn_lst { ahl fl tav lb_n rsp l0 { eds e0 } } ⊢|
						∐. _nil◂{} . 
							∎ { ahl fl tav lb_n rsp { eds e0 } } 
					@.adt { ahl fl ax0 l0 tav lb_n { eds e0 } } 
						_lod_q { tav ax0 } ⊢ { tav ax0 { w0 o0 } } 
						∐ o0 ⊢ _some◂{ lx0 lx1 vl0 pl0 } .
							mk_adt.f { l0 vl0 pl0 } ⊢ pl0							
							lst.len pl0 ⊢ { pl0 n } 
							mk_jmp_tbl { lb_n n } ⊢ { lb_n ej lbl } 
							rp8.mk_s8 ej ⊢ { ej sj } 
							inc_x lb_n ⊢ { lb0 lb_n }
							inc_x lb_n ⊢ { lb1 lb_n }
							» _^ lb0,sj ⊢ lb0,sj,s0  
								"\tmovzx rax,BYTE [r8+6]\n" 
								"\tjmp QWORD [LB_" 0d' "+8*rax]\n"
								"LB_" 0d' ": dq " 1' "\n" //
							rp8.add_s8 { e0 s0 } ⊢ e0 
							» 0r _ ⊢ j0  
							adt_hp { ahl fl j0 tav pl0 lbl lb1 lb_n { eds e0 } } ⊢ { ahl fl tav lb1 lb_n { eds e0 } }
							» _^ lb1 ⊢ lb1,s0 
								"LB_" 0d' ":\n"
								"\tret\n" //
							rp8.add_s8 { e0 s0 } ⊢ e0   
							∎ { ahl fl tav lb_n { eds e0 } }
						∐. . 
						» "emt x2" _ ⊢ ee 
									_emt ee ⊢ ee 
							∎|   
					@.adt_hp { ahl fl j0 tav lr lbl lb1 lb_n { eds e0 } } 
						∐ lr ⊢ _cns◂{ h lr }; lbl ⊢ _cns◂{ lbi lbl } . 
							» _^ lbi ⊢ lbi,s0 
								"LB_" 0d' ":\n" // 
							rp8.add_s8 { e0 s0 } ⊢ e0 
							_inc j0 ⊢ j0 
							∐ h ⊢ stt_v.ref◂q0 . 
								stt_v.ref q0 ⊢ h 
								hp { ahl fl tav lb_n h e0 } ⊢ { ahl fl tav lb_n e0 } 
								» _^ lb1 ⊢ lb1,s0 
									"\tjmp LB_" 0d' "\n" // 
								rp8.add_s8 { e0 s0 } ⊢ e0 
								adt_hp { ahl fl j0 tav lr lbl lb1 lb_n { eds e0 } } ⊢| 
							∐. . 
								» _^ _ ⊢ s0 
									`	FREE_LN r8 
									"\tmov r8,QWORD [r8+8]\n" // 
								rp8.add_s8 { e0 s0 } ⊢ e0 
								hp { ahl fl tav lb_n h e0 } ⊢ { ahl fl tav lb_n e0 } 
								» _^ lb1 ⊢ lb1,s0 
									"\tjmp LB_" 0d' "\n" // 
								rp8.add_s8 { e0 s0 } ⊢ e0 
								adt_hp { ahl fl j0 tav lr lbl lb1 lb_n { eds e0 } } ⊢|
						∐ lr ⊢ _nil◂{}; lbl ⊢ _nil◂{} . 
							∎ { ahl fl tav lb1 lb_n { eds e0 } }
						∐. . 
						» "emt adt_hp x3" _ ⊢ ee 
									_emt ee ⊢ ee 
							∎|
					@.adt_lp { ahl fl tav lb_n { eds e0 } }
						∐ fl ⊢ _cns◂{ { ax0 tl0 lb0 } fl } . 
							» _^ lb0 ⊢ lb0,se 
								"LB_" 0d' ":\n" // 
							rp8.add_s8 { e0 se } ⊢ e0 
							adt { ahl fl ax0 tl0 tav lb_n { eds e0 } } ⊢ { ahl fl tav lb_n { eds e0 } }
							adt_lp { ahl fl tav lb_n { eds e0 } } ⊢| 
						∐. . 
							∎ { ahl tav lb_n { eds e0 } }
				§ @.f { gfl fl tav lb_n rsp dl { eds e0 } } 
					$ dl ⊢ 
					∐ _cns◂{ p dl } . 
						$ p ⊢ p,p0 
						stt_v.pnt.f p0 ⊢ sp 
						» _^ sp ⊢ sp,sc 
							"; .dlt.ptn " 0' "\n" // 
						rp8.add_s8 { e0 sc } ⊢ e0 
						ptn { gfl fl tav lb_n rsp p { eds e0 } } ⊢ { gfl fl tav lb_n rsp { eds e0 } }
						f { gfl fl tav lb_n rsp dl { eds e0 } } ⊢| 
					∐. _nil◂{} . 
						∎ { gfl fl tav lb_n rsp { eds e0 } } 
				§ f { gfl tav lb_n rsp dl { eg0 eds e0 } }
					_nil {} ⊢ fl 
					rp8.e {} ⊢ e1 
					f { gfl fl tav lb_n rsp dl { eds e1 } } ⊢ { gfl fl tav lb_n rsp { eds e1 } }
					adt_lp { gfl fl tav lb_n { eds eg0 } } ⊢ { gfl tav lb_n { eds eg0 } }
					rp8.cct { e0 e1 } ⊢ e0 
					∎ { gfl tav lb_n rsp { eg0 eds e0 } }
				§ env { gfl irv tav lb_n rsp env { eg0 eds e0 } }
					stt_v.ptns_of_env { irv env } ⊢ { irv dl } 
					f { gfl tav lb_n rsp dl { eg0 eds e0 } } ⊢ { gfl tav lb_n rsp { eg0 eds e0 } } 
					∎ { gfl irv tav lb_n rsp { eg0 eds e0 } }
				∎∎
			§ printf { s lb_n }
				» 0r _ ⊢ rs  
				mk_db { s rs } ⊢ { s rs dbs }	
				$ lb_n ⊢ lb_n,lb0 
				_inc lb_n ⊢ lb_n 
				$ lb_n ⊢ lb_n,lb1 
				_inc lb_n ⊢ lb_n 
				» _^ lb0,lb1,dbs ⊢ lb0,lb1,dbs,s0
					"\tjmp LB_" 1d' "\n" 
					"LB_" 0d' ": db " 2' "\n"   
					"LB_" 1d' ":\n" 
					"\tmov rdi,LB_" 0d' "\n" 
					`	call emt_stg
					//
				∎ { s lb_n s0 }
			§ printf { eds ec0 s lb_n }
				inc_x lb_n ⊢ { lb0 lb_n }
				data_s8 { eds lb0 s } ⊢ { eds lb0 s }
				» _^ lb0 ⊢ lb0,sc0 
					"\tmov rdi,LB_" 0d' "\n" 
					`	call emt_stg 
					//
				rp8.add_s8 { ec0 sc0 } ⊢ ec0 
				∎ { eds ec0 s lb_n }
			§§ cmp_s8
				§ 
					@.f { lb0 s }  
						_s8_len s ⊢ { s ls } 
						» 0r _ ⊢ i 
						rp8.e {} ⊢ e0
						lp { lb0 s ls i e0 } ⊢ { lb0 s e0 }
						∎ { lb0 s e0 } 
					@.lp { lb0 s ls i e0 } 
						∐ ls'=i' . 
							∎ { lb0 s e0 } 
						∐. . 
							_lds { s i } ⊢ { s i c } 
							» _^ i,c,lb0 ⊢ i,c,lb0,s0 
								"\tcmp BYTE [rdi+" 0d' "]," 1d' "\n" 
								"\tjnz LB_" 2d' "\n" 
								// 
							_inc i ⊢ i 
							rp8.add_s8 { e0 s0 } ⊢ e0 
							lp { lb0 s ls i e0 } ⊢|
				∎∎ 
			§ @.asc_hp { l k }
				∐ l ⊢ _cns◂{ { k0 o0 } l } .
					stt_v.eq_hp { k k0 } ⊢ { k k0 b } 
					∐ b ⊢ bl.t◂{} .
						∐ o0 ⊢ _some◂v0 .
							$ v0 ⊢ v0,v1
							_some v0 ⊢ o0
							_cns { { k0 o0 } l } ⊢ l
							_some v1 ⊢ r1
							∎ { l k r1 }
						∐. .
							_cns { { k0 o0 } l } ⊢ l
							_none {} ⊢ r1
							∎ { l k r1 }
					∐. .
						asc_hp { l k } ⊢ { l k r0 }
						_cns { { k0 o0 } l } ⊢ l
						∎ { l k r0 }
				∐. .
					_none {} ⊢ r1
					∎ { l k r1 }	
			§§ emt 
				§
					@.hp { ahl fl tav lb_n h e0 } 
						$ h ⊢ 
						∐ stt_v.r64◂{} . 
							» _^ _ ⊢ %s1 
								`	mov rdi,r8 
								`	call emt_r64 
								//		 
								rp8.add_s8 { e0 s1 } ⊢ e0 
								∎ { ahl fl tav lb_n e0 }
						∐ stt_v.ref◂q0 . 
							$ q0 ⊢ 
							∐ stt_v.opq◂{} . 
								» _^ _ ⊢ s1 
									`	mov rdi,r8
									`	call emt_s8
									//		
								rp8.add_s8 { e0 s1 } ⊢ e0 
								∎ { ahl fl tav lb_n e0 }
							∐ stt_v.arr◂h0 . 
								inc_x lb_n ⊢ { lb0 lb_n } 
								inc_x lb_n ⊢ { lb1 lb_n } 
								» _^ lb0,lb1 ⊢ lb0,lb1,s1 
									`	mov rdi,fmt_arr_l 
									`	call emt_stg 
									`	mov rsi,[r8]
									`	mov rax,0 
									"LB_" 0d' ":\n"
									`	cmp rsi,rax 
									"\tjz LB_" 1d' "\n"
									`	push r8 
									`	push rsi 
									`	push rax 
									`	mov r8,QWORD [r8+8+8*rax]
									//
								rp8.add_s8 { e0 s1 } ⊢ e0
								hp { ahl fl tav lb_n h0 e0 } ⊢ { ahl fl tav lb_n e0 } 
								» _^ lb0,lb1 ⊢ lb0,lb1,s1 	 
									`	mov rdi,fmt_spc 
									`	call emt_stg 
									`	pop rax 
									`	pop rsi 
									`	pop r8 
									`	add rax,1 
									"\tjmp LB_" 0d' "\n" 
									"LB_" 1d' ":\n" 
									`	mov rdi,fmt_arr_r 
									`	call emt_stg
									//	
								rp8.add_s8 { e0 s1 } ⊢ e0
								∎ { ahl fl tav lb_n e0 } 
							∐ stt_v.clr◂h0 . 
							» "clr A1" _ ⊢ ee0 
								_emt ee0 ⊢ _ 
								∎|
							∐ stt_v.pt_hp◂{} . 
								» "clr A2" _ ⊢ ee0 
								_emt ee0 ⊢ _ 
								∎|
							∐. stt_v.rcd◂l0 . 
								» "\tmov rdi,fmt_rcd_box_l\n\tcall emt_stg\n" _ ⊢ s0 
								rp8.add_s8 { e0 s0 } ⊢ e0 
								» 0r _ ⊢ i0 
								hp_rcd { ahl fl tav lb_n l0 i0 e0 } ⊢ { ahl fl tav lb_n e0 }
								» "\tmov rdi,fmt_rcd_r\n\tcall emt_stg\n" _ ⊢ s1 
								rp8.add_s8 { e0 s1 } ⊢ e0
								∎	{ ahl fl tav lb_n e0 }
						∐ stt_v.adt◂{ ax0 l0 } . 
							$ ax0 ⊢ ax0,ax00 
							$ l0 ⊢ l0,l00 
							stt_v.adt { ax00 l00 } ⊢ h0 
							##asc_hp { ahl h0 } ⊢ { ahl h0 o } 
							» e_axm.emt _ ⊢ ig0 
							find_axm.f { ahl ig0 h0 } ⊢ { ahl ig0 h0 o } 
							$ o ⊢ 
							∐ _some◂lb0 . 
								» _^ lb0 ⊢ lb0,s1 
									"\tcall LB_" 0d' "\n"  
									//		
								rp8.add_s8 { e0 s1 } ⊢ e0 
								∎ { ahl fl tav lb_n e0 }
							∐. _none◂{} . 
								$ lb_n ⊢ lb_n,lb0 
								_inc lb_n ⊢ lb_n 
								» _^ lb0 ⊢ lb0,s1 
									"\tcall LB_" 0d' "\n"  
									//		
								rp8.add_s8 { e0 s1 } ⊢ e0 
								$ lb0 ⊢ lb0,lb00 
								gnr_axm { lb00 ig0 h0 } ⊢ o 
								_cns { o ahl } ⊢ ahl 
								_cns { { ax0 l0 lb0 } fl } ⊢ fl 
								∎ { ahl fl tav lb_n e0 }
						∐. stt_v.pv◂pv0 .  
							» _^ _ ⊢ ec1
									`	mov rdi,rt_err0 
									`	call emt_stg
									`	mov QWORD [err_n],0xffff_0002
									`	jmp err
									// 
								rp8.add_s8 { e0 ec1 } ⊢ e0 
								∎ { ahl fl tav lb_n e0 }
					@.hp_rcd { ahl fl tav lb_n l0 i0 e0 }
						$ l0 ⊢ 
						∐ _cns◂{ h l0 } . 
							» _^ i0 ⊢ i0,s0 
								"\tpush r8\n" 
								"\tmov r8,QWORD [r8+8+8*" 0d' "]\n" // 
							rp8.add_s8 { e0 s0 } ⊢ e0 
							hp { ahl fl tav lb_n h e0 } ⊢ { ahl fl tav lb_n e0 } 
							» _^ _ ⊢ s0 
								`	pop r8 
								`	mov rdi,fmt_spc 
								`	call emt_stg 
								//
							rp8.add_s8 { e0 s0 } ⊢ e0 
							_inc i0 ⊢ i0 
							hp_rcd { ahl fl tav lb_n l0 i0 e0 } ⊢| 
						∐. _nil◂{} . 
							∎ { ahl fl tav lb_n e0 }
				§ 
					@.ptn { ahl fl tav lb_n rsp is0 { eds e0 } } 
						$ is0 ⊢ 
						∐ RP.rcd◂l0 . 
							» _^ _ ⊢ s0 
								`	mov rdi,fmt_rcd_l 
								`	call emt_stg 
								//
							rp8.add_s8 { e0 s0 } ⊢ e0
							ptn_lst { ahl fl tav lb_n rsp l0 { eds e0 } } ⊢ { ahl fl tav lb_n rsp { eds e0 } }
							» _^ _ ⊢ s1 
								`	mov rdi,fmt_rcd_r 
								`	call emt_stg 
								//
							rp8.add_s8 { e0 s1 } ⊢ e0
							∎	{ ahl fl tav lb_n rsp { eds e0 } }
						∐. RP.atm◂k0 . 
							$ k0 ⊢ 
							∐ stt_v.hp◂{ r h } . 
								reg { rsp r } ⊢ { rsp r sr b }
								» _^ sr ⊢ sr,s0 
									"\tmov rdi," 0' "\n"
									push_c_regs 
									"\tmov r8,rdi\n" 
									//		
								rp8.add_s8 { e0 s0 } ⊢ e0 
								hp { ahl fl tav lb_n h e0 } ⊢ { ahl fl tav lb_n e0 } 
								» _^ _ ⊢ s0 
									pop_c_regs //
								rp8.add_s8 { e0 s0 } ⊢ e0 
								∎ { ahl fl tav lb_n rsp { eds e0 } } 								
							∐ stt_v.hp_im◂iv . 
								$ iv ⊢ 
								∐ ast.r64◂x . 
									» _^ x ⊢ x,sx 
										0d' "r" //
									printf { eds e0 sx lb_n } ⊢ { eds e0 sx lb_n } 
									∎ { ahl fl tav lb_n rsp { eds e0 } }
								∐. ast.s8◂s . 
									» 0r _ ⊢ x0 
									mk_esc_s8 s ⊢ { s ss } 
									» _^ ss ⊢ ss,s0 
										"\"" 0' "\"" // 
									printf { eds e0 s0 lb_n } ⊢ { eds e0 s0 lb_n } 
									∎ { ahl fl tav lb_n rsp { eds e0 } }
							∐ stt_v.hp_im_e◂ie0 . 
							» "emt x0 " _ ⊢ ee 
									_emt ee ⊢ ee 
								∎|
							∐ stt_v.pt◂{ r0 r1 } . 	
								» "clr A0" _ ⊢ ee0 
								_emt ee0 ⊢ _ 
								∎|  
							∐. stt_v.stt_adt◂{ ia0 na0 pa0 } .
								» _^ ia0 ⊢ ia0,sx 
										"'" 0d' "◂" //
								printf { eds e0 sx lb_n } ⊢ { eds e0 sx lb_n }
								ptn { ahl fl tav lb_n rsp pa0 { eds e0 } } ⊢| 
					
					@.ptn_lst { ahl fl tav lb_n rsp l0 { eds e0 } } 
						$ l0 ⊢ 
						∐ _cns◂{ p0 l0 } . 
							ptn { ahl fl tav lb_n rsp p0 { eds e0 } } ⊢ { ahl fl tav lb_n rsp { eds e0 } } 
							» _^ _ ⊢ s0 
								`	mov rdi,fmt_spc 
								`	call emt_stg 
								//
							rp8.add_s8 { e0 s0 } ⊢ e0
							ptn_lst { ahl fl tav lb_n rsp l0 { eds e0 } } ⊢|
						∐. _nil◂{} . 
							∎ { ahl fl tav lb_n rsp { eds e0 } } 
					@.adt { ahl fl ax0 l0 tav lb_n { eds e0 } } 
						_lod_q { tav ax0 } ⊢ { tav ax0 { w0 o0 } } 
						∐ o0 ⊢ _some◂{ lx0 lx1 vl0 pl0 } .
							mk_adt.f { l0 vl0 pl0 } ⊢ pl0							
							lst.len pl0 ⊢ { pl0 n } 
							mk_jmp_tbl { lb_n n } ⊢ { lb_n ej lbl } 
							rp8.mk_s8 ej ⊢ { ej sj } 
							inc_x lb_n ⊢ { lb0 lb_n }
							inc_x lb_n ⊢ { lb1 lb_n }
							» _^ lb0,sj ⊢ lb0,sj,s0  
								"\tmovzx rax,BYTE [r8+6]\n" 
								"\tjmp QWORD [LB_" 0d' "+8*rax]\n"
								"LB_" 0d' ": dq " 1' "\n" //
							rp8.add_s8 { e0 s0 } ⊢ e0 
							» 0r _ ⊢ j0  
							adt_hp { ahl fl j0 tav pl0 lbl lb1 lb_n { eds e0 } } ⊢ { ahl fl tav lb1 lb_n { eds e0 } }
							» _^ lb1 ⊢ lb1,s0 
								"LB_" 0d' ":\n"
								"\tret\n" //
							rp8.add_s8 { e0 s0 } ⊢ e0   
							∎ { ahl fl tav lb_n { eds e0 } }
						∐. . 
						» "emt x2" _ ⊢ ee 
									_emt ee ⊢ ee 
							∎|   
					@.adt_hp { ahl fl j0 tav lr lbl lb1 lb_n { eds e0 } } 
						∐ lr ⊢ _cns◂{ h lr }; lbl ⊢ _cns◂{ lbi lbl } . 
							» _^ lbi ⊢ lbi,s0 
								"LB_" 0d' ":\n" // 
							rp8.add_s8 { e0 s0 } ⊢ e0 
							» _^ j0 ⊢ j0,sx 
										"'" 0d' "◂" //
							_inc j0 ⊢ j0 
							printf { eds e0 sx lb_n } ⊢ { eds e0 sx lb_n }
							∐ h ⊢ stt_v.ref◂q0 . 
								stt_v.ref q0 ⊢ h 
								hp { ahl fl tav lb_n h e0 } ⊢ { ahl fl tav lb_n e0 } 
								» _^ lb1 ⊢ lb1,s0 
									"\tjmp LB_" 0d' "\n" // 
								rp8.add_s8 { e0 s0 } ⊢ e0 
								adt_hp { ahl fl j0 tav lr lbl lb1 lb_n { eds e0 } } ⊢| 
							∐. . 
								» _^ _ ⊢ s0 
									"\tmov r8,QWORD [r8+8]\n" // 
								rp8.add_s8 { e0 s0 } ⊢ e0 
								hp { ahl fl tav lb_n h e0 } ⊢ { ahl fl tav lb_n e0 } 
								» _^ lb1 ⊢ lb1,s0 
									"\tjmp LB_" 0d' "\n" // 
								rp8.add_s8 { e0 s0 } ⊢ e0 
								adt_hp { ahl fl j0 tav lr lbl lb1 lb_n { eds e0 } } ⊢|
						∐ lr ⊢ _nil◂{}; lbl ⊢ _nil◂{} . 
							∎ { ahl fl tav lb1 lb_n { eds e0 } }
						∐. . 
						» "emt adt_hp x3" _ ⊢ ee 
									_emt ee ⊢ ee 
							∎|
					@.adt_lp { ahl fl tav lb_n { eds e0 } }
						∐ fl ⊢ _cns◂{ { ax0 tl0 lb0 } fl } . 
							» _^ lb0 ⊢ lb0,se 
								"LB_" 0d' ":\n" // 
							rp8.add_s8 { e0 se } ⊢ e0 
							adt { ahl fl ax0 tl0 tav lb_n { eds e0 } } ⊢ { ahl fl tav lb_n { eds e0 } }
							adt_lp { ahl fl tav lb_n { eds e0 } } ⊢| 
						∐. . 
							∎ { ahl tav lb_n { eds e0 } } 
				∎∎
			§§ rpc
				§ 
					@.hp_rcd { j0 ahl fl tav lb_n hl e0 }
						$ hl ⊢ 
						∐ _cns◂{ h hl } . 
							» _^ j0 ⊢ j0,s0 
								`	push r8
								`	push r9
								"\tmov r8,QWORD [r8+8+8*" 0d' "]\n" //
							rp8.add_s8 { e0 s0 } ⊢ e0
							hp { ahl fl tav lb_n h e0 } ⊢ { ahl fl tav lb_n e0 } 
							» _^ j0 ⊢ j0,s0
								`	pop r9  
								`	pop r8 
								"\tmov QWORD [r9+8+8*" 0d' "],rax\n"  
								//  
							rp8.add_s8 { e0 s0 } ⊢ e0
							_inc j0 ⊢ j0 
							hp_rcd { j0 ahl fl tav lb_n hl e0 } ⊢|
						∐. _nil◂{} . 
							» _^ _ ⊢ s0 
								`	mov rax,r9 
								//
							rp8.add_s8 { e0 s0 } ⊢ e0 
							∎ { ahl fl tav lb_n e0 } 
					
					@.hp { ahl fl tav lb_n h e0 }
						$ h ⊢ 
						∐ stt_v.r64◂{} . 
							» "\tmov rax,r8\n" _ ⊢ s0 
							rp8.add_s8 { e0 s0 } ⊢ e0 
							∎ { ahl fl tav lb_n e0 }
						∐ stt_v.ref◂q0 . 
							$ q0 ⊢ 
							∐ stt_v.opq◂{} . 
								» _^ _ ⊢ ec1 
									push_c_regs
									`	mov rdi,r8  
									`	call rpc_s8  
									pop_c_regs // 
								rp8.add_s8 { e0 ec1 } ⊢ e0 
								∎ { ahl fl tav lb_n e0 }
							∐ stt_v.arr◂ar0 .
							» "rpc.hp 0" _ ⊢ ee 
									_emt ee ⊢ ee 
								∎|  
							∐ stt_v.clr◂hc0 . 
								» "clr A4" _ ⊢ ee0 
								_emt ee0 ⊢ _ 
								∎|
							∐ stt_v.pt_hp◂{} . 
								» "clr A5" _ ⊢ ee0 
								_emt ee0 ⊢ _ 
								∎|
							∐. stt_v.rcd◂l0 .
								∐ l0 ⊢ _nil◂{} . 
									» _^ _ ⊢ s0 
										`	mov rax,unt
										//
									rp8.add_s8 { e0 s0 } ⊢ e0 
									∎ { ahl fl tav lb_n e0 }
								∐. . 
									lst.len l0 ⊢ { l0 nl0 } 
									» _^ nl0 ⊢ nl0,s0 
										"\tALC_RCD " 0d' ",r9\n" 
										// 
									rp8.add_s8 { e0 s0 } ⊢ e0
									» 0r _ ⊢ j0 
									hp_rcd { j0 ahl fl tav lb_n l0 e0 } ⊢| 
						∐ stt_v.adt◂{ ax0 l0 } .
							$ ax0 ⊢ ax0,ax00 
							$ l0 ⊢ l0,l00 
							stt_v.adt { ax00 l00 } ⊢ h0 
							» e_axm.rpc _ ⊢ ig0 
							find_axm.f { ahl ig0 h0 } ⊢ { ahl ig0 h0 o } 
							##asc_hp { ahl h0 } ⊢ { ahl h0 o } 
							$ o ⊢ 
							∐ _some◂lb0 . 
								» _^ lb0 ⊢ lb0,s1 
									"\tcall LB_" 0d' "\n"  
									//		
								rp8.add_s8 { e0 s1 } ⊢ e0 
								∎ { ahl fl tav lb_n e0 }
							∐. _none◂{} . 
								$ lb_n ⊢ lb_n,lb0 
								_inc lb_n ⊢ lb_n 
								» _^ lb0 ⊢ lb0,s1 
									"\tcall LB_" 0d' "\n"  
									//		
								rp8.add_s8 { e0 s1 } ⊢ e0 
								$ lb0 ⊢ lb0,lb00 
								gnr_axm { lb00 ig0 h0 } ⊢ o 
								_cns { o ahl } ⊢ ahl 
								_cns { { ax0 l0 lb0 } fl } ⊢ fl 
								∎ { ahl fl tav lb_n e0 } 
						∐. stt_v.pv◂vi .
							» _^ _ ⊢ ec1
									`	mov rdi,rt_err0 
									`	call emt_stg
									`	mov QWORD [err_n],0xffff_0004
									`	jmp err
									// 
								rp8.add_s8 { e0 ec1 } ⊢ e0 
								∎ { ahl fl tav lb_n e0 }
				§	
					@.adt { ahl fl ax0 l0 tav lb_n e0 } 
						_lod_q { tav ax0 } ⊢ { tav ax0 { w0 o0 } } 
						∐ o0 ⊢ _some◂{ lx0 lx1 vl0 pl0 } .
							mk_adt.f { l0 vl0 pl0 } ⊢ pl0							
							lst.len pl0 ⊢ { pl0 n } 
							mk_jmp_tbl { lb_n n } ⊢ { lb_n ej lbl } 
							rp8.mk_s8 ej ⊢ { ej sj } 
							$ lb_n ⊢ lb_n,lb0 
							_inc lb_n ⊢ lb_n
							$ lb_n ⊢ lb_n,lb1 
							_inc lb_n ⊢ lb_n 
							» _^ lb0,sj ⊢ lb0,sj,s0  
								"\tmovzx rax,BYTE [r8+6]\n" 
								"\tjmp QWORD [LB_" 0d' "+8*rax]\n"
								"LB_" 0d' ": dq " 1' "\n" //
							rp8.add_s8 { e0 s0 } ⊢ e0 
							» 0r _ ⊢ j0  
							adt_hp { ahl fl j0 tav pl0 lbl lb1 lb_n e0 } ⊢ { ahl fl tav lb1 lb_n e0 }
							» _^ lb1 ⊢ lb1,s0 
								"LB_" 0d' ":\n"
								"\tret\n" //
							rp8.add_s8 { e0 s0 } ⊢ e0   
							∎ { ahl fl tav lb_n e0 }
						∐. . 
							∎|   
					@.adt_hp { ahl fl j0 tav lr lbl lb1 lb_n e0 } 
						∐ lr ⊢ _cns◂{ h lr }; lbl ⊢ _cns◂{ lbi lbl } . 
							» _^ lbi ⊢ lbi,s0 
								"LB_" 0d' ":\n" // 
							rp8.add_s8 { e0 s0 } ⊢ e0 
							∐ h ⊢ stt_v.ref◂q0 . 
								stt_v.ref q0 ⊢ h 
								hp { ahl fl tav lb_n h e0 } ⊢ { ahl fl tav lb_n e0 } 
								» _^ lb1,j0 ⊢ lb1,j0,s0
									"\tmov BYTE [rax+6]," 1d' "\n" 
									"\tjmp LB_" 0d' "\n" // 
								rp8.add_s8 { e0 s0 } ⊢ e0 
								_inc j0 ⊢ j0 
								adt_hp { ahl fl j0 tav lr lbl lb1 lb_n e0 } ⊢| 
							∐. . 
								» _^ _ ⊢ s0 
									"\tmov r8,QWORD [r8+8]\n" // 
								rp8.add_s8 { e0 s0 } ⊢ e0 
								hp { ahl fl tav lb_n h e0 } ⊢ { ahl fl tav lb_n e0 } 
								» _^ lb1,j0 ⊢ lb1,j0,s0 
									`	ALC_LN rsi 
									"\tmov BYTE [rsi+6]," 1d' "\n"
									`	mov QWORD [rsi+8],rax
									`	mov rax,rsi
									"\tjmp LB_" 0d' "\n" // 
								rp8.add_s8 { e0 s0 } ⊢ e0 
								_inc j0 ⊢ j0 
								adt_hp { ahl fl j0 tav lr lbl lb1 lb_n e0 } ⊢|
						∐ lr ⊢ _nil◂{}; lbl ⊢ _nil◂{} . 
							∎ { ahl fl tav lb1 lb_n e0 }
						∐. . 
							∎|
					@.adt_lp { ahl fl tav lb_n e0 }
						∐ fl ⊢ _cns◂{ { ax0 tl0 lb0 } fl } . 
							» _^ lb0 ⊢ lb0,se 
								"LB_" 0d' ":\n" // 
							rp8.add_s8 { e0 se } ⊢ e0 
							adt { ahl fl ax0 tl0 tav lb_n e0 } ⊢ { ahl fl tav lb_n e0 }
							adt_lp { ahl fl tav lb_n e0 } ⊢| 
						∐. . 
							∎ { ahl tav lb_n e0 }  
				§ 
					@.ptn_lst { ahl fl tav lb_n l0 rsp irv v0 e0 }   					
						$ l0 ⊢
						∐ _cns◂{ p0 l0 } . 
							ptn { ahl fl tav lb_n p0 rsp irv v0 e0 } ⊢ { ahl fl tav lb_n p0 p1 rsp irv v0 e0 }
							ptn_lst { ahl fl tav lb_n l0 rsp irv v0 e0 } ⊢ { ahl fl tav lb_n l0 l1 rsp irv v0 e0 } 
							_cns { p0 l0 } ⊢ l0 
							_cns { p1 l1 } ⊢ l1 
							∎ { ahl fl tav lb_n l0 l1 rsp irv v0 e0 }
						∐. _nil◂{} . 
							_nil {} ⊢ l0
							_nil {} ⊢ l1 
							∎ { ahl fl tav lb_n l0 l1 rsp irv v0 e0 }
					@.ptn { ahl fl tav lb_n is rsp irv vs0 e0 }
						$ is ⊢ is,is0 
						$ is0 ⊢ 
						∐ RP.atm◂k . 
							$ k ⊢ 
							∐ stt_v.hp◂{ r0 h } . 
								_nil {} ⊢ dl 
								alc_vs vs0 ⊢ { vs0 rm0 } 
								brk_rsp_e { rsp rm0 e0 } ⊢ { rsp rm0 e0 } 
								$ h ⊢ h,h0
								reg { rsp r0 } ⊢ { rsp r0 sr0 br0 } 
								reg { rsp rm0 } ⊢ { rsp rm0 srm0 brm0 }
								stt_v.hp { rm0 h0 } ⊢ p1 
								RP.atm p1 ⊢ p1 
								» _^ sr0 ⊢ sr0,s0 
									"\tmov rdi," 0' "\n" 
									push_c_regs 
									"\tmov r8,rdi\n" // 
								rp8.add_s8 { e0 s0 } ⊢ e0 
								hp { ahl fl tav lb_n h e0 } ⊢ { ahl fl tav lb_n e0 }
								» _^ srm0 ⊢ srm0,s0 
									pop_c_regs
									"\tmov " 0' ",rax\n" // 
								rp8.add_s8 { e0 s0 } ⊢ e0
								∎ { ahl fl tav lb_n is p1 rsp irv vs0 e0 } 
							∐ stt_v.hp_im◂v0 .
								$ is ⊢ is,id 
								∎ { ahl fl tav lb_n is id rsp irv vs0 e0 } 
							∐ stt_v.hp_im_e◂ev0 .
								$ is ⊢ is,id 
								∎ { ahl fl tav lb_n is id rsp irv vs0 e0 }
							∐ stt_v.pt◂{ r0 r1 } . 
							» "clr A6" _ ⊢ ee0 
								_emt ee0 ⊢ _ 
								∎|
							∐. stt_v.stt_adt◂{ ia na pa0 } . 
								ptn { ahl fl tav lb_n pa0 rsp irv vs0 e0 } ⊢ { ahl fl tav lb_n pa0 id0 rsp irv vs0 e0 }
								stt_v.stt_adt { ia na id0 } ⊢ p1 
								RP.atm p1 ⊢ p1 
								∎ { ahl fl tav lb_n is p1 rsp irv vs0 e0 }
						∐. RP.rcd◂l0 . 
							ptn_lst { ahl fl tav lb_n l0 rsp irv vs0 e0 } ⊢ { ahl fl tav lb_n l0 l1 rsp irv vs0 e0 }
							RP.rcd l0 ⊢ p0 
							RP.rcd l1 ⊢ p1 
							∎ { ahl fl tav lb_n p0 p1 rsp irv vs0 e0 }						   					
				§ @.lp { v0 gfl fl tav lb_n rsp irv rl is dpl ppl { eg0 eds e0 } } 
					$ dpl ⊢ 
					∐ _cns◂{ d0 dpl } . 
						##stt_v.mk_rset_env_x { irv rl } ⊢ { irv rl v0 } 
						ptn { gfl fl tav lb_n is rsp irv v0 e0 } ⊢ { gfl fl tav lb_n is id rsp irv v0 e0 } 
						$ id ⊢ id,id0 
						stt_v.pnt.f id0 ⊢ sid 
						» _^ sid ⊢ sid,s0 
							"," 0' // 
						rp8.add_s8 { ppl s0 } ⊢ ppl
						_nil {} ⊢ dl 
						idx.crt_ptn { irv d0 id rl dl } ⊢ { irv rl dl } 
						dlt.f { gfl tav lb_n rsp dl { eg0 eds e0 } } ⊢ { gfl tav lb_n rsp { eg0 eds e0 } }
						lp { v0 gfl fl tav lb_n rsp irv rl is dpl ppl { eg0 eds e0 } } ⊢| 
					∐. _nil◂{} . 
						» "\n" _ ⊢ s0 
						rp8.add_s8 { ppl s0 } ⊢ ppl 
						rp8.cct { ppl e0 } ⊢ e0
						∎ { v0 gfl fl tav lb_n rsp irv rl is { eg0 eds e0 } }
						
				§ id { v0 gfl tav lb_n rsp irv sis is rl dpl } 
					∐ dpl ⊢ _cns◂{ d0 dpl } . 
						rp8.e {} ⊢ e0 
						rp8.e {} ⊢ eg0 
						rp8.e {} ⊢ eds 
						» _^ sis ⊢ sis,ppl 
							"; $ " 0' " ⊢ " 0' // 
						rp8.of_s8 ppl ⊢ ppl 
						_nil {} ⊢ dl 
				 		$ is ⊢ is,is0 
						idx.crt_ptn { irv d0 is0 rl dl } ⊢ { irv rl dl } 
						_nil {} ⊢ fl
						lp { v0 gfl fl tav lb_n rsp irv rl is dpl ppl { eg0 eds e0 } } ⊢ { v0 gfl fl tav lb_n rsp irv rl is { eg0 eds e0 } } 
						dlt.f { gfl tav lb_n rsp dl { eg0 eds e0 } } ⊢ { gfl tav lb_n rsp { eg0 eds e0 } }
						adt_lp { gfl fl tav lb_n eg0 } ⊢ { gfl tav lb_n eg0 }
						∎ { v0 gfl tav lb_n rsp irv sis is rl { eg0 eds e0 } }
					∐. . 
					» "id 0" _ ⊢ ee 
									_emt ee ⊢ ee 
						∎| 
				∎∎ 
			§§ arr 
				§ l1 { rsp evv a0 e0 }
					∐ a0 ⊢ stt_v.hp_im◂v0; v0 ⊢ ast.r64◂x0 .
						» _^ x0 ⊢ x0,s0
							"\tmov rdi," 0d' "\n" //
						rp8.add_s8 { e0 s0 } ⊢ e0
						∎ { rsp evv e0 }
					∐ a0 ⊢ stt_v.hp_im_e◂i0 . 
						_lod_q { evv i0 } ⊢ { evv i0 k0 } 
						∐ k0 ⊢ k_cst_v◂v0; v0 ⊢ ast.r64◂x0 . 
							» _^ x0 ⊢ x0,s0
								"\tmov rdi," 0d' "\n" //
							rp8.add_s8 { e0 s0 } ⊢ e0
							∎ { rsp evv e0 }
						∐. .
							» "mk_arr 0" _ ⊢ ee 
							_emt ee ⊢ ee  
							∎|  
					∐ a0 ⊢ stt_v.hp◂{ r1 h1 }; h1 ⊢ stt_v.r64◂{} . 
						reg { rsp r1 } ⊢ { rsp r1 sr1 br1 } 
						» _^ sr1 ⊢ sr1,s0
							"\tmov rdi," 0' "\n" //
						rp8.add_s8 { e0 s0 } ⊢ e0
						∎ { rsp evv e0 }
					∐. . 
						» "mk_arr 0" _ ⊢ ee 
						_emt ee ⊢ ee 
						∎|  
				§ mk_arr { gfl is sis irv evv tav tv_n tv yd lb_n rl rsp }
					rp8.e {} ⊢ e0 
					rp8.e {} ⊢ eg0 
					stt_v.mk_rset_env_x { irv rl } ⊢ { irv rl vs1 }
					$ is ⊢ is,is0 
					stt_v.mk_rset { is0 vs1 } ⊢ vs1 
					∐ is ⊢ RP.rcd◂l0; l0 ⊢ _cns◂{ a0 l0 }; l0 ⊢ _cns◂{ a1 l0 }; l0 ⊢ _nil◂{}; a0 ⊢ RP.atm◂a0 . 
						» 0r _ ⊢ pv_n 
						_nil {} ⊢ al 
						rset.ini {} ⊢ vs0 
						alc_type_k.f { pv_n al tav tv_n tv vs0 yd } ⊢ { pv_n al tav tv_n tv vs0 pd0 }
						∐ pd0 ⊢ RP.rcd◂l0; l0 ⊢ _cns◂{ a2 l0 }; l0 ⊢ _cns◂{ a3 l0 }; l0 ⊢ _cns◂{ a4 l0 }; l0 ⊢ _nil◂{} .
							∐ a4 ⊢ RP.atm◂ap; ap ⊢ stt_v.hp◂{ r0 h0 }; h0 ⊢ stt_v.ref◂q0; q0 ⊢ stt_v.arr◂ha0 . 
								alc_vs vs1 ⊢ { vs1 rm0 } 
								alc_vs vs1 ⊢ { vs1 rm1 } 
								alc_vs vs1 ⊢ { vs1 rm2 } 
								$ ha0 ⊢ ha0,ha00 
								$ rm0 ⊢ rm0,rm00 
								stt_v.arr_reg { rm00 ha00 } ⊢ k0 
								$ a0 ⊢ a0,a00 
								RP.atm a00 ⊢ a00 
								$ a1 ⊢ a1,a1_0 
								stt_v.rcd_3 { a00 a1_0 k0 } ⊢ pd1 
								$ rm1 ⊢ rm1,rm10				
								$ ha0 ⊢ ha0,ha00 
								##stt_v.arr_reg { rm10 ha00 } ⊢ pt0 
								stt_v.hp { rm10 ha00 } ⊢ pt0 
								RP.atm pt0 ⊢ pt0
								brk_rsp_e { rsp rm2 e0 } ⊢ { rsp rm2 e0 } 
								l1 { rsp evv a0 e0 } ⊢ { rsp evv e0 }
								$ rsp ⊢ rsp,rsp0 
								inc_x lb_n ⊢ { lb2 lb_n } 
								inc_x lb_n ⊢ { lb3 lb_n }
								reg { rsp rm0 } ⊢ { rsp rm0 srm0 _ } 
								reg { rsp rm2 } ⊢ { rsp rm2 srm2 _ } 
								reg { rsp rm1 } ⊢ { rsp rm1 srm1 _ } 
								» _^ srm0,srm2,lb2,lb3 ⊢ srm0,srm2,lb2,lb3,s0 
									`	push rdi 
									`	lea rsi,[8+8*rdi]
									`	mov rdi,1 
									` C_CALL_SF calloc
									`	pop rdi 
									"\tmov " 0' ",rax\n" 
									`	mov QWORD [rax],rdi 
									"LB_" 2d' ":\n" 
									`	cmp rdi,0 
									"\tjz LB_" 3d' "\n" 
									`	sub rdi,1
									"\tmov " 1' ",rdi\n" 
									//
								rp8.add_s8 { e0 s0 } ⊢ e0 
								_nil {} ⊢ fl
								rpc.ptn { gfl fl tav lb_n a1 rsp irv vs1 e0 } ⊢ { gfl fl tav lb_n a1 p1 rsp irv vs1 e0 }					
								rpc.adt_lp { gfl fl tav lb_n eg0 } ⊢ { gfl tav lb_n eg0 }
								mov_ptn2.f2 { tav rsp vs1 p1 pt0 e0 } ⊢ { tav rsp vs1 e0 }
								set_rsp { rsp rsp0 e0 } ⊢ { rsp e0 } 
								» _^ srm0,srm1,srm2,lb2,lb3 ⊢ srm0,srm1,srm2,lb2,lb3,sc2	
									"\tmov rsi," 0' "\n" 
									"\tmov rax," 1' "\n" 
									"\tmov rdi," 2' "\n" 
									`	mov QWORD [rsi+8+8*rdi],rax 
									"\tjmp LB_" 3d' "\n" 
									"LB_" 4d' ":\n"
									//	
								rp8.add_s8 { e0 sc2 } ⊢ e0				
								∎ { gfl irv evv tav tv_n tv lb_n rl rsp { eg0 e0 } pd1 }
							∐. .
								» "mk_arr 0" _ ⊢ ee 
								_emt ee ⊢ ee 
								∎| 
						∐. . 
						» "mk_arr 0" _ ⊢ ee 
									_emt ee ⊢ ee 
							∎| 
					∐. . 
						» "mk_arr 0" _ ⊢ ee 
							_emt ee ⊢ ee 
							∎| 
			
				§ exc { h } 
					» "ret_f D660" _ ⊢ ee0 
									_emt ee0 ⊢ _ 
					∎| 
				§ arr_of_lst { is sis irv evv tav tv_n tv yd lb_n rl rsp }
					rp8.e {} ⊢ e0 
					» 0r _ ⊢ pv_n 
					_nil {} ⊢ al 
					alc_type_k.hp { pv_n al tav tv_n tv yd } ⊢ { pv_n al tav tv_n tv hd } 
					stt_v.mk_rset_env_x { irv rl } ⊢ { irv rl vs0 } 
					$ is ⊢ is,is0 
					stt_v.mk_rset { is0 vs0 } ⊢ vs0 
					∐ is ⊢ RP.atm◂a0; a0 ⊢ stt_v.stt_adt◂{ ia na p0 } . 
						∐ ia'=1r; p0 ⊢ RP.rcd◂l0; l0 ⊢ _nil◂{} . 
							alc_vs vs0 ⊢ { vs0 rm0 } 
							brk_rsp { rsp rm0 } ⊢ { rsp rm0 sb0 } 
							rp8.add_s8 { e0 sb0 } ⊢ e0 
							reg { rsp rm0 } ⊢ { rsp rm0 srm0 brm0 } 
							» _^ srm0 ⊢ srm0,s0 
								`	xor rax,rax 
								`	mov rdi,1 
								`	mov rsi,8 
								`	C_CALL_SF calloc
								"\tmov " 0' ",rax\n" // 
							rp8.add_s8 { e0 s0 } ⊢ e0
							stt_v.hp { rm0 hd } ⊢ a0 
							RP.atm a0 ⊢ is1 
							∎ { irv evv tav tv_n tv lb_n rl rsp e0 is1 }	
						∐ hd ⊢ stt_v.ref◂q0; q0 ⊢ stt_v.arr◂ha0 . 
							$ ha0 ⊢ ha0,ha00 
							_nil {} ⊢ l1 
							_cns { ha00 l1 } ⊢ l1 
							» t_axm.id.lst _ ⊢ ax0 
							stt_v.adt { ax0 l1 } ⊢ h1 
							alc_vs vs0 ⊢ { vs0 rm0 } 
							$ rm0 ⊢ rm0,rm00 
							stt_v.hp { rm00 h1 } ⊢ a1 
							RP.atm a1 ⊢ p1 
							mov_ptn2.f2 { tav rsp vs0 p0 p1 e0 } ⊢ { tav rsp vs0 e0 } 
							reg { rsp rm0 } ⊢ { rsp rm0 srm0 brm0 }
							» _^ srm0 ⊢ srm0,s0 
								"\tmov rdi," 0' "\n" 
								push_c_regs 
								`	call arr_of_lst 
								pop_c_regs 
								"\tmov " 0' ",rax\n" //
							rp8.add_s8 { e0 s0 } ⊢ e0
							stt_v.arr ha0 ⊢ q0 
							stt_v.ref q0 ⊢ hd 
							stt_v.hp { rm0 hd } ⊢ a0 
							RP.atm a0 ⊢ is1 
							∎ { irv evv tav tv_n tv lb_n rl rsp e0 is1 }
						∐. . 							
							» "arr_of_lst d0" _ ⊢ ee0 
							_emt ee0 ⊢ _ 
							_emt sis ⊢ _ 
							∎| 
					∐ is ⊢ RP.atm◂a0; a0 ⊢ stt_v.hp◂{ r0 h0 }; h0 ⊢ stt_v.adt◂{ ax0 hl0 } . 
						reg { rsp r0 } ⊢ { rsp r0 sr0 br0 } 
						» _^ sr0 ⊢ sr0,s0 
							"\tmov rdi," 0' "\n" 
							push_c_regs 
							`	call arr_of_lst 
							pop_c_regs 
							"\tmov " 0' ",rax\n" //
						rp8.add_s8 { e0 s0 } ⊢ e0
						stt_v.hp { r0 hd } ⊢ a0 
						RP.atm a0 ⊢ is1 
						∎ { irv evv tav tv_n tv lb_n rl rsp e0 is1 }	
					∐. . 
						##stt_v.pnt.f is ⊢ sis 
					» "arr_of_lst d1" _ ⊢ ee0 
							_emt ee0 ⊢ _ 
						_emt sis ⊢ _ 
						∎| 
				 
				∎∎ 
			\[
			§§ eq 
				∎∎
			§§ spc 
				§ mk { h } 
					∎| 
				§ alp { h }
					∎| 
				§ frp { h } 
					∎|  
				§ ldp { h } 
					∎|  
				§ xcp { h } 
					∎| 
				∎∎
			\]
			§§ lc_code 
				§§ rep_movsb
					§ 
						@.f { sip0 ip0 lb_n rsp irv rl e0 } 
							∐ ip0 ⊢ RP.rcd◂l0; l0 ⊢ _cns◂{ a0 l0 }; l0 ⊢ _cns◂{ a1 l0 }; l0 ⊢ _cns◂{ a2 l0 }; l0 ⊢ _cns◂{ a3 l0 }; l0 ⊢ _cns◂{ a4 l0 };l0 ⊢ _nil◂{} . 
								f_c0 { a0 lb_n rsp rl e0 } ⊢ { lb_n rsp rl e0 c0 }
								f_s0 { a1 lb_n rsp rl e0 } ⊢ { lb_n rsp rl e0 s0 }
								f_o0 { a2 lb_n rsp rl e0 } ⊢ { lb_n rsp rl e0 o0 }
								f_s1 { a3 lb_n rsp irv rl e0 } ⊢ { lb_n rsp irv rl e0 s1 } 
								f_o1 { a4 lb_n rsp rl e0 } ⊢ { lb_n rsp rl e0 o1 }
								_nil {} ⊢ lr 
								_cns { o1 lr } ⊢ lr 
								_cns { s1 lr } ⊢ lr 
								_cns { o0 lr } ⊢ lr 
								_cns { s0 lr } ⊢ lr 
								_cns { c0 lr } ⊢ lr 
								RP.rcd lr ⊢ p1 
								» _^ _ ⊢ sc0 
									`	pop rsi 
									`	push rcx 
									`	mov rcx,rax 
									`	cld 
									`	rep movsb
									`	pop rcx 
									// 
								rp8.add_s8 { e0 sc0 } ⊢ e0
								$ p1 ⊢ p1,p10 
								stt_v.pnt.f p10 ⊢ sp1 
								» _^ sip0,sp1 ⊢ sip0,sp1,s0 
									"; _rep_movsb " 0' " ⊢ " 1' "\n" // 
								rp8.of_s8 s0 ⊢ s0 
								rp8.cct { s0 e0 } ⊢ e0 
								∎ { lb_n rsp irv rl e0 p1 }
							∐. . 
								∎| 
						@.f_c0 { a0 lb_n rsp rl e0 } 
							∐ a0 ⊢ RP.atm◂a0; a0 ⊢ stt_v.hp_im◂v0; v0 ⊢ ast.r64◂c0 . 
								» _^ c0 ⊢ c0,sc0 
									"\tmov rax," 0d' "\n" // 
								rp8.add_s8 { e0 sc0 } ⊢ e0 
								stt_v.r64_im c0 ⊢ p1 
								∎ { lb_n rsp rl e0 p1 }
							∐ a0 ⊢ RP.atm◂a0; a0 ⊢ stt_v.hp◂{ r0 h0 }; h0 ⊢ stt_v.r64◂{} .
								reg { rsp r0 } ⊢ { rsp r0 sr0 br0 }
								» _^ sr0 ⊢ sr0,sc0 
									"\tmov rax," 0' "\n" // 
								rp8.add_s8 { e0 sc0 } ⊢ e0
								stt_v.r64_reg r0 ⊢ p1 
								∎ { lb_n rsp rl e0 p1 }
							∐. . 
								∎| 
						@.f_s0 { a0 lb_n rsp rl e0 } 
							∐ a0 ⊢ RP.atm◂a0; a0 ⊢ stt_v.hp_im◂v0; v0 ⊢ ast.s8◂s0 . 
								_s8_len s0 ⊢ { s0 ls0 } 
								$ lb_n ⊢ lb_n,lb0 
								_inc lb_n ⊢ lb_n 
								$ lb_n ⊢ lb_n,lb1 
								_inc lb_n ⊢ lb_n  
								» 0r _ ⊢ x0 
								mk_db { s0 x0 } ⊢ { s0 x0 ss0 }
								» _^ lb0,lb1,ss0,ls0 ⊢ lb0,lb1,ss0,ls0,sc0 
									"\tjmp LB_" 0d' "\n"
									"\tLB_ " 1d' ": db " 2' "\n" 
									"LB_" 0d' ":\n" 
									"\tmov rsi,LB_" 1d' "\n" 
									"\tmov rdi," 3d' "\n"
									"\tsub rdi,rax\n" // 
								rp8.add_s8 { e0 sc0 } ⊢ e0
								stt_v.s8_im s0 ⊢ p1 
								∎ { lb_n rsp rl e0 p1 }
							∐ a0 ⊢ RP.atm◂a0; a0 ⊢ stt_v.hp◂{ r0 h0 }; h0 ⊢ stt_v.ref◂q0; q0 ⊢ stt_v.opq◂{} .
								reg { rsp r0 } ⊢ { rsp r0 sr0 br0 } 
								» _^ sr0 ⊢ sr0,sc0 
									"\tmov rsi," 0' "\n" 
									"\tmov rdi,0x0000_ffff_ffff_ffff\n"
									"\tand rdi,[rsi]\n"
									"\tsub rdi,rax\n" 
									"\tlea rsi,[rsi+8]\n" // 
								rp8.add_s8 { e0 sc0 } ⊢ e0
								stt_v.s8_reg r0 ⊢ p1 
								∎ { lb_n rsp rl e0 p1 }  
							∐. . 
								∎|  
						@.f_o0 { a0 lb_n rsp rl e0 } 
							∐ a0 ⊢ RP.atm◂a0; a0 ⊢ stt_v.hp_im◂v0; v0 ⊢ ast.r64◂o0 . 
								» _^ o0 ⊢ o0,sc0 
									"\tcmp rdi," 0d' "\n" 
									"\tjl err\n"
									"\tlea rsi,[rsi+" 0d' "]\n" 
									`	push rsi 
									// 
								rp8.add_s8 { e0 sc0 } ⊢ e0
								stt_v.r64_im o0 ⊢ p1
								∎ { lb_n rsp rl e0 p1 } 
							∐ a0 ⊢ RP.atm◂a0; a0 ⊢ stt_v.hp◂{ r0 h0 }; h0 ⊢ stt_v.r64◂{} .
								reg { rsp r0 } ⊢ { rsp r0 sr0 br0 } 
								» _^ sr0 ⊢ sr0,sc0 
									"\tcmp rdi," 0' "\n" 
									"\tjl err\n"
									"\tadd rdi," 0' "\n"
									`	push rsi 
									// 
								rp8.add_s8 { e0 sc0 } ⊢ e0
								stt_v.r64_reg r0 ⊢ p1
								∎ { lb_n rsp rl e0 p1 } 
							∐. . 
								∎| 
						@.f_s1 { a0 lb_n rsp irv rl e0 } 
							∐ a0 ⊢ RP.atm◂a0; a0 ⊢ stt_v.hp_im◂v0; v0 ⊢ ast.s8◂s1 . 
								_s8_len s1 ⊢ { s1 ls1 } 
								stt_v.mk_rset_env_x { irv rl } ⊢ { irv rl v0 }  	
								alc_vs v0 ⊢ { v0 rm0 } 
								brk_rsp { rsp rm0 } ⊢ { rsp rm0 sb0 } 
								rp8.add_s8 { e0 sb0 } ⊢ e0 
								reg { rsp rm0 } ⊢ { rsp rm0 srm0 brm0 } 
								$ rm0 ⊢ rm0,rm00 
								» _^ srm0 ⊢ srm0,sc0 
									"\tmov " 0' ",rax\n" // 
								rp8.add_s8 { e0 sc0 } ⊢ e0 
								mk_s8 s1 ⊢ { s1 es1 }
								rp8.cct { e0 es1 } ⊢ e0 
								» _^ srm0,ls1 ⊢ srm0,ls1,sc0 
									"\tmov rsi," 0' "\n" 
									"\tmov " 0' ",rax\n" 
									"\tlea rax,[rax+8]\n" 
									"\tmov rdi," 1d' "\n"
									"\tsub rdi,rsi\n" // 
								rp8.add_s8 { e0 sc0 } ⊢ e0 
								stt_v.s8_reg rm00 ⊢ p1 
								∎ { lb_n rsp irv rl e0 p1 }
							∐ a0 ⊢ RP.atm◂a0; a0 ⊢ stt_v.hp◂{ r0 h0 }; h0 ⊢ stt_v.ref◂q0; q0 ⊢ stt_v.opq◂{} .
								reg { rsp r0 } ⊢ { rsp r0 sr0 br0 } 
								» _^ sr0 ⊢ sr0,s0 
									"\tmov rsi," 0' "\n" 
									"\tmov rdi,0x0000_ffff_ffff_ffff\n"
									"\tand rdi,[rsi]\n"
									"\tsub rdi,rax\n" 
									"\tlea rsi,[rsi+8]\n" // 
								rp8.add_s8 { e0 s0 } ⊢ e0
								stt_v.s8_reg r0 ⊢ p1 
								∎ { lb_n rsp irv rl e0 p1 }  
							∐. . 
								∎|  
						@.f_o1 { a0 lb_n rsp rl e0 } 
							∐ a0 ⊢ RP.atm◂a0; a0 ⊢ stt_v.hp_im◂v0; v0 ⊢ ast.r64◂o1 . 
								» _^ o1 ⊢ o1,sc0 
									"\tcmp rdi," 0d' "\n" 
									"\tjl err\n"
									"\tlea rsi,[rsi+" 0d' "]\n"
									`	mov rdi,rsi
									// 
								rp8.add_s8 { e0 sc0 } ⊢ e0
								stt_v.r64_im o1 ⊢ p1 
								∎ { lb_n rsp rl e0 p1 } 
							∐ a0 ⊢ RP.atm◂a0; a0 ⊢ stt_v.hp◂{ r0 h0 }; h0 ⊢ stt_v.r64◂{} .
								reg { rsp r0 } ⊢ { rsp r0 sr0 br0 } 
								» _^ sr0 ⊢ sr0,sc0 
									"\tcmp rdi," 0' "\n" 
									"\tjl err\n"
									"\tadd rsi," 0' "\n" 
									`	mov rdi,rsi 
									// 
								rp8.add_s8 { e0 sc0 } ⊢ e0
								stt_v.r64_reg r0 ⊢ p1 
								∎ { lb_n rsp rl e0 p1 } 
							∐. . 
								∎|
					∎∎
					§§ sts 
						§ 
						@.f { sip0 ip0 lb_n rsp irv rl e0 } 
							∐ ip0 ⊢ RP.rcd◂l0; l0 ⊢ _cns◂{ a0 l0 }; l0 ⊢ _cns◂{ a1 l0 }; l0 ⊢ _cns◂{ a2 l0 }; l0 ⊢ _nil◂{} . 
								f_s0 { a0 lb_n rsp irv rl e0 } ⊢ { lb_n rsp irv rl e0 s0 } 
								f_o0 { a1 lb_n rsp rl e0 } ⊢ { lb_n rsp rl e0 o0 }
								f_c0 { a2 lb_n rsp rl e0 } ⊢ { lb_n rsp rl e0 c0 }
								_nil {} ⊢ lr 
								_cns { c0 lr } ⊢ lr 
								_cns { o0 lr } ⊢ lr 
								_cns { s0 lr } ⊢ lr 
								RP.rcd lr ⊢ p1 
								$ p1 ⊢ p1,p10 
								stt_v.pnt.f p10 ⊢ sp1 
								» _^ sip0,sp1 ⊢ sip0,sp1,s0 
									"; _sts " 0' " ⊢ " 1' "\n" // 
								rp8.of_s8 s0 ⊢ s0 
								rp8.cct { s0 e0 } ⊢ e0 
								∎ { lb_n rsp irv rl e0 p1 }
							∐. . 
								∎| 
						@.f_s0 { a0 lb_n rsp irv rl e0 } 
							∐ a0 ⊢ RP.atm◂a0; a0 ⊢ stt_v.hp_im◂v0; v0 ⊢ ast.s8◂s0 . 
								_s8_len s0 ⊢ { s0 ls0 }  
								stt_v.mk_rset_env_x { irv rl } ⊢ { irv rl v0 }  
								alc_vs v0 ⊢ { v0 rm0 } 
								brk_rsp { rsp rm0 } ⊢ { rsp rm0 sb0 } 
								rp8.add_s8 { e0 sb0 } ⊢ e0 
								reg { rsp rm0 } ⊢ { rsp rm0 srm0 brm0 } 
								$ rm0 ⊢ rm0,rm00 
								mk_s8 s0 ⊢ { s0 es0 }
								rp8.cct { e0 es0 } ⊢ e0 
								» _^ srm0,ls0 ⊢ srm0,ls0,sc0 
									"\tmov " 0' ",rax\n" 
									"\tmov rdi," 1d' "\n" // 
								rp8.add_s8 { e0 sc0 } ⊢ e0 
								stt_v.s8_reg rm00 ⊢ p1 
								∎ { lb_n rsp irv rl e0 p1 }
							∐ a0 ⊢ RP.atm◂a0; a0 ⊢ stt_v.hp◂{ r0 h0 }; h0 ⊢ stt_v.ref◂q0; q0 ⊢ stt_v.opq◂{} .
								reg { rsp r0 } ⊢ { rsp r0 sr0 br0 } 
								» _^ sr0 ⊢ sr0,s0 
									"\tmov rax," 0' "\n" 
									"\tmov rdi,0x0000_ffff_ffff_ffff\n"
									"\tand rdi,[rax]\n" // 
								rp8.add_s8 { e0 s0 } ⊢ e0
								stt_v.s8_reg r0 ⊢ p1 
								∎ { lb_n rsp irv rl e0 p1 }  
							∐. . 
								∎|
						@.f_o0 { a0 lb_n rsp rl e0 } 
							∐ a0 ⊢ RP.atm◂a0; a0 ⊢ stt_v.hp_im◂v0; v0 ⊢ ast.r64◂o0 . 
								» _^ o0 ⊢ o0,sc0 
									"\tcmp rdi," 0d' "\n" 
									"\tjle err\n"
									"\tmov rsi," 0d' "\n" 
									// 
								rp8.add_s8 { e0 sc0 } ⊢ e0
								stt_v.r64_im o0 ⊢ p1 
								∎ { lb_n rsp rl e0 p1 } 
							∐ a0 ⊢ RP.atm◂a0; a0 ⊢ stt_v.hp◂{ r0 h0 }; h0 ⊢ stt_v.r64◂{} .
								reg { rsp r0 } ⊢ { rsp r0 sr0 br0 } 
								» _^ sr0 ⊢ sr0,sc0 
									"\tcmp rdi," 0' "\n" 
									"\tjle err\n"
									"\tmov rsi," 0' "\n"
									// 
								rp8.add_s8 { e0 sc0 } ⊢ e0
								stt_v.r64 {} ⊢ h0 
								stt_v.hp { r0 h0 } ⊢ a0 
								RP.atm a0 ⊢ p1  
								∎ { lb_n rsp rl e0 p1 } 
							∐. . 
								∎| 
						@.f_c0 { a0 lb_n rsp rl e0 } 
							∐ a0 ⊢ RP.atm◂a0; a0 ⊢ stt_v.hp_im◂v0; v0 ⊢ ast.r64◂o0 . 
								» _^ o0 ⊢ o0,sc0 
									"\tmov BYTE [rax+8+rsi]," 0d' "\n" 
									// 
								rp8.add_s8 { e0 sc0 } ⊢ e0
								ast.r64 o0 ⊢ v0 
								stt_v.hp_im v0 ⊢ a0 
								RP.atm a0 ⊢ p1 
								∎ { lb_n rsp rl e0 p1 } 
							∐ a0 ⊢ RP.atm◂a0; a0 ⊢ stt_v.hp◂{ r0 h0 }; h0 ⊢ stt_v.r64◂{} .
								reg { rsp r0 } ⊢ { rsp r0 sr0 br0 } 
								» _^ sr0 ⊢ sr0,sc0 
									"\tmov rdi," 0' "\n" 
									"\tmov BYTE [rax+8+rsi],dil\n" // 
								rp8.add_s8 { e0 sc0 } ⊢ e0
								stt_v.r64 {} ⊢ h0 
								stt_v.hp { r0 h0 } ⊢ a0 
								RP.atm a0 ⊢ p1  
								∎ { lb_n rsp rl e0 p1 } 
							∐. . 
								∎|   
					∎∎
				§§ exp_s8 
					§ @.lp0 { i irv rl sl dl dll } 
						∐ sl ⊢ _cns◂{ s sl }; dl ⊢ _cns◂{ d dl } .
							idx.csm { irv s rl } ⊢ { irv ip rl } 
							$ ip ⊢ ip,ip0
							idx.crt { irv d ip0 rl dll } ⊢ { irv rl dll }
							_inc i ⊢ i 
							lp0 { i irv rl sl dl dll } ⊢ { i irv rl dll ar rr } 
							_dec i ⊢ i 
							_set_q { ar i ip } ⊢ { ar i } 
							∎ { i irv rl dll ar rr } 
						∐ sl ⊢ _nil◂{}; dl ⊢ _cns◂{ d dl }; dl ⊢ _nil◂{} .  
							stt_v.mk_rset_env_x { irv rl } ⊢ { irv rl v } 
							alc_vs v ⊢ { v rr } 
							stt_v.opq {} ⊢ q0 
							stt_v.ref q0 ⊢ h0 
							$ rr ⊢ rr,rr0 
							stt_v.hp { rr0 h0 } ⊢ a0 
							RP.atm a0 ⊢ pr 
							idx.crt { irv d pr rl dll } ⊢ { irv rl dll }
							_mk_arr i ⊢ { i ar }
							∎ { i irv rl dll ar rr }
						∐. . 
							» "exp_s8 0" _ ⊢ ee 
							_emt ee ⊢ ee 
							∎| 
					§ 
						@.ip2 { evv l e0 } 
							$ l ⊢ 
							∐ _cns◂{ p1 l } . 
								∐ p1 ⊢ ast.exp_s8.s8◂s1 . 
									rp8.add_s8 { e0 s1 } ⊢ e0 
									ip2 { evv l e0 } ⊢| 
								∐ p1 ⊢ ast.exp_s8.cst◂i1 . 
									∐ i1 ⊢ ast.cst_v◂v1; v1 ⊢ ast.s8◂s1 . 
										rp8.add_s8 { e0 s1 } ⊢ e0 
										ip2 { evv l e0 } ⊢| 
									∐ i1 ⊢ ast.cst_name◂i1 . 
										_lod_q { evv i1 } ⊢ { evv i1 k0 } 
										∐ k0 ⊢ k_cst_v◂v0; v0 ⊢ ast.s8◂s1 . 
											rp8.add_s8 { e0 s1 } ⊢ e0 
											ip2 { evv l e0 } ⊢| 
										∐. . 
											∎| 
									∐. . 
										∎| 
								∐. . 
									rp8.mk_s8 e0 ⊢ { _ s0 } 
									ast.exp_s8.s8 s0 ⊢ p0 
									##_cns { p1 l } ⊢ l 
									ip0 { evv l } ⊢ { evv l } 
									_cns { p1 l } ⊢ l 
									_cns { p0 l } ⊢ l 
									∎ { evv l } 
							∐. _nil◂{} . 
								rp8.mk_s8 e0 ⊢ { _ s0 } 
								ast.exp_s8.s8 s0 ⊢ p0 
								_nil {} ⊢ l 
								_cns { p0 l } ⊢ l 
								∎ { evv l }
						@.ip0 { evv l }  
							$ l ⊢ 
							∐ _cns◂{ p0 l } . 
								∐ p0 ⊢ ast.exp_s8.s8◂s0 . 
									rp8.of_s8 s0 ⊢ e0 
									ip2 { evv l e0 } ⊢| 
								∐ p0 ⊢ ast.exp_s8.cst◂i0 . 
									∐ i0 ⊢ ast.cst_v◂v0; v0 ⊢ ast.s8◂s0 . 
										rp8.of_s8 s0 ⊢ e0 
										ip2 { evv l e0 } ⊢| 
									∐ i0 ⊢ ast.cst_name◂i0 . 
										_lod_q { evv i0 } ⊢ { evv i0 k0 } 
										∐ k0 ⊢ k_cst_v◂v0; v0 ⊢ ast.s8◂s0 . 
											rp8.of_s8 s0 ⊢ e0 
											ip2 { evv l e0 } ⊢| 
										∐. . 
											∎|
									∐. . 
										∎| 
								∐. . 
									ip0 { evv l } ⊢ { evv l } 
									_cns { p0 l } ⊢ l 
									∎ { evv l }
							∐. _nil◂{} . 
								_nil {} ⊢ l 
								∎ { evv l } 
					§ 
						@.s8 { evv { eds e0 } ld lb_n rsp irv rl ar s0 rr pl }
							_s8_len s0 ⊢ { s0 l0 } 
							_add { ld l0 } ⊢ { ld l0 } 
							lp1 { evv { eds e0 } ld lb_n rsp irv rl ar rr pl } ⊢ { evv { eds e0 } ld lb_n rsp irv rl ar }
							_sub { ld l0 } ⊢ { ld l0 }
							inc_x lb_n ⊢ { lb0 lb_n }  
							data_s8 { eds lb0 s0 } ⊢ { eds lb0 s0 }
							» _^ lb0,l0 ⊢ lb0,l0,sr 
								"\tlea rsi,[LB_" 0d' "+" 1d' "-1]\n" 
								"\tmov rcx," 1d' "\n" 
								`	rep movsb
								//
							rp8.add_s8 { e0 sr } ⊢ e0 
							∎ { evv { eds e0 } ld lb_n rsp irv rl ar }
						@.d { evv { eds e0 } ld lb_n rsp irv rl ar x0 rr pl }
							» _^ x0 ⊢ x0,s0 
								0d' // 
							s8 { evv { eds e0 } ld lb_n rsp irv rl ar s0 rr pl } ⊢| 
						@.s8_for { evv { eds e0 } ld lb_n rsp irv rl ar x0 s0 rr pl }
							_s8_len s0 ⊢ { s0 l0 } 
							$ l0 ⊢ l0,l00 
							_imul { l00 x0 } ⊢ { l00 x0 }
							_add { ld l00 } ⊢ { ld l00 } 
							lp1 { evv { eds e0 } ld lb_n rsp irv rl ar rr pl } ⊢ { evv { eds e0 } ld lb_n rsp irv rl ar }
							_sub { ld l00 } ⊢ { ld l00 }
							inc_x lb_n ⊢ { lb1 lb_n }  
							data_s8 { eds lb1 s0 } ⊢ { eds lb1 s0 } 
							inc_x lb_n ⊢ { lb2 lb_n }
							inc_x lb_n ⊢ { lb3 lb_n }
							» _^ lb1,l0,x0,lb2,lb3 ⊢ lb1,l0,x0,lb2,lb3,sr 
								"\tmov rax," 2d' "\n" 
								"LB_" 3d' ":\n"
								`	cmp rax,0
								"\tjz LB_" 4d' "\n" 
								`	sub rax,1
								"\tlea rsi,[LB_" 0d' "+" 1d' "-1]\n" 
								"\tmov rcx," 1d' "\n" 
								`	rep movsb 
								"\tjmp LB_" 3d' "\n" 
								"LB_" 4d' ":\n"
								//
							rp8.add_s8 { e0 sr } ⊢ e0 
							∎ { evv { eds e0 } ld lb_n rsp irv rl ar } 
						@.lp1 { evv { eds e0 } ld lb_n rsp irv rl ar rr pl }
						$ pl ⊢ 
						∐ _cns◂{ ps pl } . 
							$ ps ⊢ 
							∐ ast.exp_s8.s8◂s0 .
								s8 { evv { eds e0 } ld lb_n rsp irv rl ar s0 rr pl } ⊢|									
							∐ ast.exp_s8.cst◂c0 . 
								$ c0 ⊢ 
								∐ ast.cst_v◂v0 . 
									∐ v0 ⊢ ast.s8◂s0 . 
										s8 { evv { eds e0 } ld lb_n rsp irv rl ar s0 rr pl } ⊢|									
									∐. . 
										∎| 
								∐. ast.cst_name◂i0 . 
									_lod_q { evv i0 } ⊢ { evv i0 k0 } 
									∐ k0 ⊢ k_cst_v◂v0; v0 ⊢ ast.s8◂s0 . 
										s8 { evv { eds e0 } ld lb_n rsp irv rl ar s0 rr pl } ⊢|									
									∐. . 
										∎| 
							∐ ast.exp_s8.idx◂{ f0 j0 } . 
								_lod_q { ar j0 } ⊢ { ar j0 p0 }
								$ f0 ⊢ 
								∐ ast.exp_s8.s◂{} . 
									∐ p0 ⊢ RP.atm◂a0; a0 ⊢ stt_v.hp_im◂v0; v0 ⊢ ast.s8◂s0 . 
										s8 { evv { eds e0 } ld lb_n rsp irv rl ar s0 rr pl } ⊢|									
									∐ p0 ⊢ RP.atm◂a0; a0 ⊢ stt_v.hp_im_e◂i0 . 
										_lod_q { evv i0 } ⊢ { evv i0 k0 } 
										∐ k0 ⊢ k_cst_v◂v0; v0 ⊢ ast.s8◂s0 . 
											s8 { evv { eds e0 } ld lb_n rsp irv rl ar s0 rr pl } ⊢|									
										∐. . 
											∎|
									∐ p0 ⊢ RP.atm◂a0; a0 ⊢ stt_v.hp◂{ r0 h0 }; h0 ⊢ stt_v.ref◂q0; q0 ⊢ stt_v.opq◂{} . 
										∐ r0'=reg_idx.rcx . 
											» _^ _ ⊢ s1 
												`	mov rax,0x0000_ffff_ffff_ffff 
												`	and rax,[rcx] 
												`	add rdi,rax 
												`	push rax
												// 
											##_inc rsp ⊢ rsp 
											_inc rsp ⊢ rsp
											rp8.add_s8 { e0 s1 } ⊢ e0
											lp1 { evv { eds e0 } ld lb_n rsp irv rl ar rr pl } ⊢ { evv { eds e0 } ld lb_n rsp irv rl ar }
											##_dec rsp ⊢ rsp 
											_dec rsp ⊢ rsp 
											» _^ _ ⊢ sr 
												`	mov rsi,QWORD [tmp]
												`	pop rcx
												`	lea rsi,[rsi+7+rcx]
												`	rep movsb
												//
											rp8.add_s8 { e0 sr } ⊢ e0 
											∎ { evv { eds e0 } ld lb_n rsp irv rl ar } 	
										∐. . 
											reg { rsp r0 } ⊢ { rsp r0 sr0 br0 } 
											∐ br0 ⊢ bl.t◂{} . 
												» _^ sr0 ⊢ sr0,s1 
													##"\tmov rsi," 0' "\n" 
													`	mov rax,0x0000_ffff_ffff_ffff 
													"\tand rax,[" 0' "]\n"  
													`	add rdi,rax 
													`	push rax
													// 
												##_inc rsp ⊢ rsp 
												_inc rsp ⊢ rsp
												rp8.add_s8 { e0 s1 } ⊢ e0
												lp1 { evv { eds e0 } ld lb_n rsp irv rl ar rr pl } ⊢ { evv { eds e0 } ld lb_n rsp irv rl ar }
												##_dec rsp ⊢ rsp 
												_dec rsp ⊢ rsp 
												» _^ sr0 ⊢ sr0,sr 
													##`	pop rsi 
													`	pop rcx
													##`	lea rsi,[rsi+7+rcx]
													"\tlea rsi,[" 0' "+7+rcx]\n" 
													`	rep movsb
													//
												rp8.add_s8 { e0 sr } ⊢ e0 
												∎ { evv { eds e0 } ld lb_n rsp irv rl ar } 
											∐. . 
												» _^ sr0 ⊢ sr0,s1 
													"\tmov rsi," 0' "\n" 
													`	mov rax,0x0000_ffff_ffff_ffff 
													`	and rax,[rsi] 
													`	add rdi,rax 
													`	push rax
													// 
												##_inc rsp ⊢ rsp 
												_inc rsp ⊢ rsp
												rp8.add_s8 { e0 s1 } ⊢ e0
												lp1 { evv { eds e0 } ld lb_n rsp irv rl ar rr pl } ⊢ { evv { eds e0 } ld lb_n rsp irv rl ar }
												##_dec rsp ⊢ rsp 
												_dec rsp ⊢ rsp 
												» _^ sr0 ⊢ sr0,sr 
													"\tmov rsi," 0' "\n"  
													`	pop rcx
													`	lea rsi,[rsi+7+rcx]
													`	rep movsb
													//
												rp8.add_s8 { e0 sr } ⊢ e0 
												∎ { evv { eds e0 } ld lb_n rsp irv rl ar } 					
									∐. . 
										∎| 
								∐ ast.exp_s8.d◂{} .
									∐ p0 ⊢ RP.atm◂a0; a0 ⊢ stt_v.hp_im◂v0; v0 ⊢ ast.r64◂x0 . 
										d { evv { eds e0 } ld lb_n rsp irv rl ar x0 rr pl } ⊢|									
									∐ p0 ⊢ RP.atm◂a0; a0 ⊢ stt_v.hp_im_e◂i0 . 
										_lod_q { evv i0 } ⊢ { evv i0 k0 } 
										∐ k0 ⊢ k_cst_v◂v0; v0 ⊢ ast.r64◂x0 . 
											d { evv { eds e0 } ld lb_n rsp irv rl ar x0 rr pl } ⊢|									
										∐. . 
											∎|
									∐ p0 ⊢ RP.atm◂a0; a0 ⊢ stt_v.hp◂{ r0 h0 }; h0 ⊢ stt_v.r64◂{} . 
										reg { rsp r0 } ⊢ { rsp r0 sr0 br0 } 
										» _^ sr0 ⊢ sr0,s1 
											`	sub rsp,128
											`	push rdi 
											`	lea rdi,[rsp+8]
											"\tmov rdx," 0' "\n" 
											`	mov rsi,fmt_d
											` xor rax,rax
											`	C_CALL_SF sprintf
											`	pop rdi
											`	add rdi,rax 
											`	push rax 
											// 
										_inc rsp ⊢ rsp 
										» 16r _ ⊢ w0 
										_add { rsp w0 } ⊢ { rsp w0 }
										rp8.add_s8 { e0 s1 } ⊢ e0
										lp1 { evv { eds e0 } ld lb_n rsp irv rl ar rr pl } ⊢ { evv { eds e0 } ld lb_n rsp irv rl ar }
										_sub { rsp w0 } ⊢ { rsp w0 }
										_dec rsp ⊢ rsp 
										» _^ _ ⊢ sr 
											`	pop rcx
											`	lea rsi,[rsp+rcx-1]
											`	rep movsb
											`	add rsp,128
											//
										rp8.add_s8 { e0 sr } ⊢ e0 
										∎ { evv { eds e0 } ld lb_n rsp irv rl ar } 	 
									∐. . 
										∎| 
								∐ ast.exp_s8.x◂{} .
									∐ p0 ⊢ RP.atm◂a0; a0 ⊢ stt_v.hp_im◂v0; v0 ⊢ ast.s8◂s0 . 
										∎| 
									∐ p0 ⊢ RP.atm◂a0; a0 ⊢ stt_v.hp_im_e◂i0 . 
										∎| 
									∐ p0 ⊢ RP.atm◂a0; a0 ⊢ stt_v.hp◂{ r0 h0 }; h0 ⊢ stt_v.ref◂q0; q0 ⊢ stt_v.opq◂{} . 
										∎| 
									∐. . 
										∎| 
								∐. ast.exp_s8.p◂{} .
									∐ p0 ⊢ RP.atm◂a0; a0 ⊢ stt_v.hp_im◂v0; v0 ⊢ ast.s8◂s0 . 
										∎| 
									∐ p0 ⊢ RP.atm◂a0; a0 ⊢ stt_v.hp_im_e◂i0 . 
										∎| 
									∐ p0 ⊢ RP.atm◂a0; a0 ⊢ stt_v.hp◂{ r0 h0 }; h0 ⊢ stt_v.ref◂q0; q0 ⊢ stt_v.opq◂{} . 
										∎| 
									∐. . 
										∎| 
							∐. ast.exp_s8.for◂{ j0 s0 } . 
								_lod_q { ar j0 } ⊢ { ar j0 p0 }
								∐ p0 ⊢ RP.atm◂a0; a0 ⊢ stt_v.hp_im◂v0; v0 ⊢ ast.r64◂x0 . 
									s8_for { evv { eds e0 } ld lb_n rsp irv rl ar x0 s0 rr pl } ⊢|									
								∐ p0 ⊢ RP.atm◂a0; a0 ⊢ stt_v.hp_im_e◂i0 . 
									_lod_q { evv i0 } ⊢ { evv i0 k0 } 
									∐ k0 ⊢ k_cst_v◂v0; v0 ⊢ ast.r64◂x0 . 
										s8_for { evv { eds e0 } ld lb_n rsp irv rl ar x0 s0 rr pl } ⊢|									
									∐. . 
										∎|
								∐ p0 ⊢ RP.atm◂a0; a0 ⊢ stt_v.hp◂{ r0 h0 }; h0 ⊢ stt_v.r64◂{} . 
									_s8_len s0 ⊢ { s0 l0 } 
									reg { rsp r0 } ⊢ { rsp r0 sr0 br0 } 
									» _^ sr0,l0 ⊢ sr0,l0,s1 
										"\tmov rsi," 0' "\n" 
										"\timul rsi," 1d' "\n" 
										`	add rdi,rsi 
										// 
									##_inc rsp ⊢ rsp 
									rp8.add_s8 { e0 s1 } ⊢ e0
									lp1 { evv { eds e0 } ld lb_n rsp irv rl ar rr pl } ⊢ { evv { eds e0 } ld lb_n rsp irv rl ar }
									##_dec rsp ⊢ rsp 
									inc_x lb_n ⊢ { lb1 lb_n }  
									data_s8 { eds lb1 s0 } ⊢ { eds lb1 s0 } 
									inc_x lb_n ⊢ { lb2 lb_n }
									inc_x lb_n ⊢ { lb3 lb_n }
									» _^ lb1,l0,lb2,lb3,sr0 ⊢ lb1,l0,lb2,lb3,sr0,sr 
										"\tmov rax," 4' "\n" 
										"LB_" 2d' ":\n"
										`	cmp rax,0
										"\tjz LB_" 3d' "\n"
										`	sub rax,1
										"\tlea rsi,[LB_" 0d' "+" 1d' "-1]\n" 
										"\tmov rcx," 1d' "\n" 
										`	rep movsb 
										"\tjmp LB_" 2d' "\n" 
										"LB_" 3d' ":\n" 
										//
									rp8.add_s8 { e0 sr } ⊢ e0 
									∎ { evv { eds e0 } ld lb_n rsp irv rl ar } 	 
								∐. . 
									∎|
						∐. _nil◂{} . 
							reg { rsp rr } ⊢ { rsp rr srr brr }
							##» "calloc" _ ⊢ n0 
							##c_call n0 ⊢ { n0 cn0 } 
							» _^ ld,srr ⊢ ld,srr,s1 
								"\tadd rdi," 0d' "\n" 
								`	push rdi 
								`	call mlc_s8
								`	pop rdi
								"\tmov " 1' ",rax\n" 
								`	lea rdi,[rax+7+rdi]
								`	std 
								`	mov QWORD [tmp],rcx 
								//
							rp8.add_s8 { e0 s1 } ⊢ e0 
							∎ { evv { eds e0 } ld lb_n rsp irv rl ar }
					§ f { evv lb_n rsp irv rl sl dl pl { eds e0 } }
						ip0 { evv pl } ⊢ { evv pl } 
						» 0r _ ⊢ i 
						_nil {} ⊢ dll 
						lp0 { i irv rl sl dl dll } ⊢ { i irv rl dll ar rr }
						brk_rsp { rsp rr } ⊢ { rsp rr sb0 } 
						rp8.add_s8 { e0 sb0 } ⊢ e0 
						» 0r _ ⊢ ld 
						» "\tmov rdi,0\n" _ ⊢ se0 
						rp8.add_s8 { e0 se0 } ⊢ e0 
						lp1 { evv { eds e0 } ld lb_n rsp irv rl ar rr pl } ⊢ { evv { eds e0 } ld lb_n rsp irv rl ar }
						» _^ _ ⊢ se0 
							`	mov rcx,QWORD [tmp] 
							//
						rp8.add_s8 { e0 se0 } ⊢ e0 
						∎ { evv lb_n rsp irv rl { eds e0 } }
					∎∎ 
				\[
				§§ asc 
					§ rl { lb_n { ev evv } rsp { rv irv } tav tv_n tv lc { eg0 eds ec0 } rl ft} 
						∎ { rl { lb_n { ev evv } rsp { rv irv } tav tv_n tv lc ec0 ft } } 
					∎∎
				§§ rtn
					§ rl { rl { lb_n { ev evv } rsp { rv irv } tav tv_n tv lc ec0 ft } } 
						∎ { lb_n { ev evv } rsp { rv irv } tav tv_n tv lc { eg0 eds ec0 } rl ft } 
					∎∎ 
				\]
				§ 
					@.op_axm { gfl evv tav tv_n tv lb_n a rsp rl irv is yd { eg0 eds ec0 } } 
						##» "enter op_axm" _ ⊢ ee0 
						##_emt ee0 ⊢ _ 
						##_emt a ⊢ a 
						∐ a'=e_axm.inc . 
							∐ is ⊢ RP.atm◂k; k ⊢ stt_v.hp◂{ r h }; h ⊢ stt_v.r64◂{} . 
								$ r ⊢ r,r0 
								stt_v.r64_reg r0 ⊢ is 
								reg { rsp r } ⊢ { rsp r sr b } 						
								» _^ sr ⊢ sr,ec1 
									"\tadd " 0' ",1\n" 
									//
								rp8.add_s8 { ec0 ec1 } ⊢ ec0
								∎ { gfl evv tav tv_n tv lb_n a rsp rl irv is { eg0 eds ec0 } }
							∐ is ⊢ RP.atm◂k; k ⊢ stt_v.hp_im◂v; v ⊢ ast.r64◂x . 
								_inc x ⊢ x 
								ast.r64 x ⊢ v 
								stt_v.hp_im v ⊢ k 
								RP.atm k ⊢ is1 
								∎ { gfl evv tav tv_n tv lb_n a rsp rl irv is1 { eg0 eds ec0 } }
							∐. . 
								» "lc_code.f t2" _ ⊢ se 
								_emt se ⊢ se 
								∎|
						∐ a'=e_axm.dec . 
							∐ is ⊢ RP.atm◂k; k ⊢ stt_v.hp◂{ r h }; h ⊢ stt_v.r64◂{} . 
								reg { rsp r } ⊢ { rsp r sr b } 
								stt_v.r64 {} ⊢ h 
								stt_v.hp { r h } ⊢ k
								RP.atm k ⊢ is 
								» _^ sr ⊢ sr,ec1 
									"\tsub " 0' ",1\n" 
									// 
								rp8.add_s8 { ec0 ec1 } ⊢ ec0
								∎ { gfl evv tav tv_n tv lb_n a rsp rl irv is { eg0 eds ec0 } }
							∐ is ⊢ RP.atm◂k; k ⊢ stt_v.hp_im◂v; v ⊢ ast.r64◂x . 
								_dec x ⊢ x 
								ast.r64 x ⊢ v 
								stt_v.hp_im v ⊢ k 
								RP.atm k ⊢ is1 
								∎ { gfl evv tav tv_n tv lb_n a rsp rl irv is1 { eg0 eds ec0 } }
							∐. . 
								» "lc_code.f t3" _ ⊢ se 
								_emt se ⊢ se 
								∎|  					
						∐ a' = e_axm.imul . 
							» "imul" _ ⊢ op0 
							op2 { op0 tav lb_n a rsp rl irv is } ⊢ { tav lb_n a rsp rl irv is1 ec1 }
							rp8.cct { ec0 ec1 } ⊢ ec0 
							∎ { gfl evv tav tv_n tv lb_n a rsp rl irv is1 { eg0 eds ec0 } }						
						∐ a' = e_axm.add . 
							» "add" _ ⊢ op0 
							op2 { op0 tav lb_n a rsp rl irv is } ⊢ { tav lb_n a rsp rl irv is1 ec1 }
							rp8.cct { ec0 ec1 } ⊢ ec0 
							∎ { gfl evv tav tv_n tv lb_n a rsp rl irv is1 { eg0 eds ec0 } }	
						∐ a'=e_axm.mlc_s8 . 
							rp8.e {} ⊢ e0 
							∐ is ⊢ RP.atm◂a0 . 
								∐ a0 ⊢ stt_v.hp_im◂v0; v0 ⊢ ast.r64◂l0 . 
									_mlc_s8 l0 ⊢ { l0 s1 } 
									ast.r64 l0 ⊢ v0 
									stt_v.hp_im v0 ⊢ h0
									RP.atm h0 ⊢ a0   
									ast.s8 s1 ⊢ v1 
									stt_v.hp_im v1 ⊢ h1
									RP.atm h1 ⊢ a1  
									_nil {} ⊢ l0 
									_cns { a1 l0 } ⊢ l0 
									_cns { a0 l0 } ⊢ l0 
									RP.rcd l0 ⊢ ip1 
									rp8.cct { ec0 e0 } ⊢ ec0  
									∎ { gfl evv tav tv_n tv lb_n a rsp rl irv ip1 { eg0 eds ec0 } }
								∐ a0 ⊢ stt_v.hp◂{ r0 h0 }; h0 ⊢ stt_v.r64◂{} . 
									stt_v.mk_rset_env_x { irv rl } ⊢ { irv rl v0 } 
									rset.set_t { v0 r0 } ⊢ { v0 r0 } 
									alc_vs v0 ⊢ { v0 rm0 } 
									$ rm0 ⊢ rm0,rm00 
									stt_v.s8_reg rm00 ⊢ a1 
									$ r0 ⊢ r0,r00 
									stt_v.r64_reg r00 ⊢ a0 
									_nil {} ⊢ l0 
									_cns { a1 l0 } ⊢ l0 
									_cns { a0 l0 } ⊢ l0 
									RP.rcd l0 ⊢ ip1 
									brk_rsp { rsp rm0 } ⊢ { rsp rm0 sb0 } 
									rp8.add_s8 { e0 sb0 } ⊢ e0
									reg { rsp r0 } ⊢ { rsp r0 sr0 br0 } 
									reg { rsp rm0 } ⊢ { rsp rm0 srm0 brm0 } 
									» _^ sr0,srm0 ⊢ sr0,srm0,sc0 
										##"; _mlc_s8 " 0' " ⊢ " 1' "\n" 
										"\tmov rdi," 0' "\n" 
										`	call mlc_s8
										"\tmov " 1' ",rax\n" // 
									rp8.add_s8 { e0 sc0 } ⊢ e0 
									rp8.cct { ec0 e0 } ⊢ ec0
									∎ { gfl evv tav tv_n tv lb_n a rsp rl irv ip1 { eg0 eds ec0 } }
								∐. . 
									» "mlc_s8 0" _ ⊢ se 
									_emt se ⊢ se 
									∎|	
							∐. . 
								» "mlc_s8 0" _ ⊢ se 
								_emt se ⊢ se 
								∎|
						∐ a'=e_axm.rep_movsb . 
							rp8.e {} ⊢ e0 
							$ is ⊢ is,is0 
							stt_v.pnt.f is0 ⊢ sis 
							rep_movsb.f { sis is lb_n rsp irv rl e0 } ⊢ { lb_n rsp irv rl e0 p1 }
							rp8.cct { ec0 e0 } ⊢ ec0  
							∎ { gfl evv tav tv_n tv lb_n a rsp rl irv p1 { eg0 eds ec0 } }  
						∐ a'=e_axm.sts . 
							rp8.e {} ⊢ e0 
								$ is ⊢ is,is0 
							stt_v.pnt.f is0 ⊢ sis 
							sts.f { sis is lb_n rsp irv rl e0 } ⊢ { lb_n rsp irv rl e0 p1 }
							rp8.cct { ec0 e0 } ⊢ ec0 
							∎ { gfl evv tav tv_n tv lb_n a rsp rl irv p1 { eg0 eds ec0 } } 
						∐ a'=e_axm.s8_len . 
							∐ is ⊢ RP.atm◂a0 . 
								∐ a0 ⊢ stt_v.hp_im◂v0; v0 ⊢ ast.s8◂s0 . 
									_s8_len s0 ⊢ { s0 l0 } 
									ast.r64 l0 ⊢ v1 
									stt_v.hp_im v1 ⊢ h1
									RP.atm h1 ⊢ a1   
									ast.s8 s0 ⊢ v0 
									stt_v.hp_im v0 ⊢ h0
									RP.atm h0 ⊢ a0  
									_nil {} ⊢ l0 
									_cns { a1 l0 } ⊢ l0 
									_cns { a0 l0 } ⊢ l0 
									RP.rcd l0 ⊢ ip1 
									∎ { gfl evv tav tv_n tv lb_n a rsp rl irv ip1 { eg0 eds ec0 } }
								∐ a0 ⊢ stt_v.hp◂{ r0 h0 }; h0 ⊢ stt_v.ref◂q0; q0 ⊢ stt_v.opq◂{} .
									stt_v.mk_rset_env_x { irv rl } ⊢ { irv rl v0 } 
									rset.set_t { v0 r0 } ⊢ { v0 r0 } 
									alc_vs v0 ⊢ { v0 rm0 } 
									$ rm0 ⊢ rm0,rm00 
									stt_v.r64_reg rm00 ⊢ a1 
									$ r0 ⊢ r0,r00
									stt_v.s8_reg r00 ⊢ a0 
									_nil {} ⊢ l0 
									_cns { a1 l0 } ⊢ l0 
									_cns { a0 l0 } ⊢ l0 
									RP.rcd l0 ⊢ ip1 
									##$ ip1 ⊢ ip1,ip10 
									##stt_v.pnt.f ip10 ⊢ sip1 
									brk_rsp { rsp rm0 } ⊢ { rsp rm0 er }
									##rp8.add_s8 { sc0 er } ⊢ sc0 
									reg { rsp r0 } ⊢ { rsp r0 sr0 br0 } 
									reg { rsp rm0 } ⊢ { rsp rm0 srm0 brm0 } 
									» _^ sr0,srm0,er ⊢ sr0,srm0,er,sc0 
										2' 
										##"; _s8_len " 0' " ⊢ " 1' "\n" 
										"\tmov rdi," 0' "\n" 
										`	mov rsi,0x0000_ffff_ffff_ffff
										`	and rsi,[rdi] 
										"\tmov " 1' ",rsi\n" // 
										rp8.add_s8 { ec0 sc0 } ⊢ ec0 
									∎ { gfl evv tav tv_n tv lb_n a rsp rl irv ip1 { eg0 eds ec0 } }
								∐. . 
									» "s8_len 0" _ ⊢ se 
									_emt se ⊢ se 
									∎|	
							∐. . 
								» "s8_len 0" _ ⊢ se 
								_emt se ⊢ se 
								∎|
						∐ a'=e_axm.emt .
							rp8.e {} ⊢ e0 
							$ is ⊢ is,is0  
							» "\tmov rdi,fmt_emt\n\tcall emt_stg\n" _ ⊢ se1 
							rp8.add_s8 { e0 se1 } ⊢ e0 
							##_nil {} ⊢ ahl
							_nil {} ⊢ fl 
							emt.ptn { gfl fl tav lb_n rsp is0 { eds e0 } } ⊢ { gfl fl tav lb_n rsp { eds e0 } }
							» "\tmov rdi,fmt_nl\n\tcall emt_stg\n" _ ⊢ se1 
							rp8.add_s8 { e0 se1 } ⊢ e0 
							inc_x lb_n ⊢ { lb0 lb_n }
							» _^ lb0 ⊢ lb0,s0 
								"\tjmp LB_" 0d' "\n" // 
							rp8.add_s8 { e0 s0 } ⊢ e0 
							emt.adt_lp { gfl fl tav lb_n { eds eg0 } } ⊢ { gfl tav lb_n { eds eg0 } }
							» _^ lb0 ⊢ lb0,s0 
								"LB_" 0d' ":\n" // 
							rp8.add_s8 { e0 s0 } ⊢ e0  
							\[
							» _^ _ ⊢ s0 
								pop_c_regs //
							rp8.add_s8 { e0 s0 } ⊢ e0 
							\]
							rp8.cct { ec0 e0 } ⊢ ec0 
							∎ { gfl evv tav tv_n tv lb_n a rsp rl irv is { eg0 eds ec0 } } 
						∐ a'=e_axm.mk_arr .
							$ is ⊢ is,is0 
							stt_v.pnt.f is0 ⊢ sis 
							arr.mk_arr { gfl is sis irv evv tav tv_n tv yd lb_n rl rsp } ⊢ { gfl irv evv tav tv_n tv lb_n rl rsp { eg1 e0 } is1 }
							rp8.cct { ec0 e0 } ⊢ ec0  
							rp8.cct { eg0 eg1 } ⊢ eg0 
							∎ { gfl evv tav tv_n tv lb_n a rsp rl irv is1 { eg0 eds ec0 } } 
						∐ a'=e_axm.arr_of_lst . 
							$ is ⊢ is,is0 
							stt_v.pnt.f is0 ⊢ sis 
							arr.arr_of_lst { is sis irv evv tav tv_n tv yd lb_n rl rsp } ⊢ { irv evv tav tv_n tv lb_n rl rsp e0 is1 }
							rp8.cct { ec0 e0 } ⊢ ec0  
							∎ { gfl evv tav tv_n tv lb_n a rsp rl irv is1 { eg0 eds ec0 } } 
						∐ a'=e_axm.exc_q . 
							stt_v.mk_rset_env_x { irv rl } ⊢ { irv rl vs0 }
							$ is ⊢ is,is0 
							stt_v.mk_rset { is0 vs0 } ⊢ vs0
							∐ is ⊢ RP.rcd◂l0; l0 ⊢ _cns◂{ a0 l0 }; l0 ⊢ _cns◂{ a1 l0 }; l0 ⊢ _cns◂{ a2 l0 }; l0 ⊢ _nil◂{}; a0 ⊢ RP.atm◂aa0; a1 ⊢ RP.atm◂aa1 .
								$ aa0 ⊢ aa0,aa00 
								RP.atm aa0 ⊢ a0 
								∐ aa00 ⊢ stt_v.hp◂{ r0 h0 }; h0 ⊢ stt_v.ref◂q0; q0 ⊢ stt_v.arr◂ha0 . 
									alc_vs vs0 ⊢ { vs0 rm0 } 
									$ ha0 ⊢ ha0,ha00 
									$ rm0 ⊢ rm0,rm00 
									stt_v.hp { rm00 ha00 } ⊢ pp0 
									RP.atm pp0 ⊢ ip0 
									$ ip0 ⊢ ip0,ip00
									mov_ptn2.f2 { tav rsp vs0 a2 ip00 ec0 } ⊢ { tav rsp vs0 ec0 }
									$ aa1 ⊢ aa1,aa10 
									r64_to_rax { rsp evv aa10 } ⊢ { rsp evv sc0 } 
									rp8.add_s8 { ec0 sc0 } ⊢ ec0 
									reg { rsp r0 } ⊢ { rsp r0 sr0 br0 } 
									reg { rsp rm0 } ⊢ { rsp rm0 srm0 brm0 }
									» _^ sr0,srm0 ⊢ sr0,srm0,sc0 
										"\tmov rdi," 0' "\n" 
										`	mov rsi,0x0000_ffff_ffff_ffff 
										`	and rsi,QWORD [rdi]
										`	cmp rax,rsi 
										`	jge err
										`	lea rdi,[rdi+8+8*rax]
										`	mov rax,QWORD [rdi]
										"\tmov rsi," 1' "\n" 
										`	mov QWORD [rdi],rsi 
										"\tmov " 1' ",rax\n" 
										//
									rp8.add_s8 { ec0 sc0 } ⊢ ec0 
									stt_v.ptn_of_hp { vs0 ha0 } ⊢ { vs0 pt0 }
									$ pt0 ⊢ pt0,pt00
									RP.atm aa1 ⊢ a1 
									stt_v.rcd_3 { a0 a1 pt0 } ⊢ p1 
									mov_ptn2.f2 { tav rsp vs0 ip0 pt00 ec0 } ⊢ { tav rsp vs0 ec0 }
									∎ { gfl evv tav tv_n tv lb_n a rsp rl irv p1 { eg0 eds ec0 } }
								∐. .
									» "exc_q D0" _ ⊢ ee0 
									_emt ee0 ⊢ _ 
									∎| 
							∐. .
								» "exc_q D1" _ ⊢ ee0 
									_emt ee0 ⊢ _ 
								∎|
						∐ a'=e_axm.lod_q . 
							» "lod_q D0" _ ⊢ ee0 
							_emt ee0 ⊢ _ 
							rp8.e {} ⊢ e0 
							stt_v.mk_rset_env_x { irv rl } ⊢ { irv rl vs0 }
							$ is ⊢ is,is0 
							stt_v.mk_rset { is0 vs0 } ⊢ vs0
							∐ is ⊢ RP.rcd◂l0; l0 ⊢ _cns◂{ a0 l0 }; l0 ⊢ _cns◂{ a1 l0 }; l0 ⊢ _nil◂{}; a0 ⊢ RP.atm◂aa0; a1 ⊢ RP.atm◂aa1 .
								$ aa0 ⊢ aa0,aa00 
								RP.atm aa0 ⊢ a0 
								$ aa1 ⊢ aa1,aa10 
								RP.atm aa1 ⊢ a1 
								r64_to_rax { rsp evv aa10 } ⊢ { rsp evv sc0 } 
								rp8.add_s8 { e0 sc0 } ⊢ e0 
								∐ aa00 ⊢ stt_v.hp◂{ r0 h0 }; h0 ⊢ stt_v.ref◂q0; q0 ⊢ stt_v.arr◂ha0 . 
									alc_vs vs0 ⊢ { vs0 rm0 } 
									brk_rsp_e { rsp rm0 e0 } ⊢ { rsp rm0 e0 } 
									reg { rsp r0 } ⊢ { rsp r0 sr0 br0 } 
									» _^ sr0 ⊢ sr0,sc0 
										"\tmov rdi," 0' "\n"
										`	mov rsi,0x0000_ffff_ffff_ffff 
										`	and rsi,QWORD [rdi]
										`	cmp rax,rsi 
										`	jge err 
										`	mov rdi,[rdi+8+8*rax]
										push_c_regs 
										`	mov r8,rdi
										//
									rp8.add_s8 { e0 sc0 } ⊢ e0 
									rp8.e {} ⊢ eh 
									$ ha0 ⊢ ha0,ha00 
									_nil {} ⊢ fl
									rpc.hp { gfl fl tav lb_n ha00 eh } ⊢ { gfl fl tav lb_n eh }
									rpc.adt_lp { gfl fl tav lb_n eg0 } ⊢ { gfl tav lb_n eg0 }
									rp8.cct { e0 eh } ⊢ e0 
									reg { rsp rm0 } ⊢ { rsp rm0 srm0 brm0 }
									» _^ srm0 ⊢ srm0,sc0 
										pop_c_regs 
										"\tmov " 0' ",rax\n" //
									rp8.add_s8 { e0 sc0 } ⊢ e0 
									$ ha0 ⊢ ha0,ha00
									stt_v.ptn_of_hp { vs0 ha00 } ⊢ { vs0 pt0 } 
									$ rm0 ⊢ rm0,rm00 
									stt_v.hp { rm00 ha0 } ⊢ ap0 
									RP.atm ap0 ⊢ ip0 
									$ pt0 ⊢ pt0,pt00 
									stt_v.rcd_3 { a0 a1 pt0 } ⊢ p1
									mov_ptn2.f2 { tav rsp vs0 ip0 pt00 e0 } ⊢ { tav rsp vs0 e0 }
									rp8.cct { ec0 e0 } ⊢ ec0  
									∎ { gfl evv tav tv_n tv lb_n a rsp rl irv p1 { eg0 eds ec0 } }
								∐. . 
									» "lod_q 0" _ ⊢ ee0 
									_emt ee0 ⊢ _ 
									∎| 
							∐. . 
								» "lod_q 1" _ ⊢ ee0 
								_emt ee0 ⊢ _ 
								∎|
						∐ a'=e_axm.arr_len . 
							rp8.e {} ⊢ e0 
							stt_v.mk_rset_env_x { irv rl } ⊢ { irv rl v0 } 
							$ is ⊢ is,is0 
							stt_v.mk_rset { is0 v0 } ⊢ v0 
							$ is ⊢ is,is0 
							∐ is ⊢ RP.atm◂a0 . 
								∐ a0 ⊢ stt_v.hp◂{ r0 h0 }; h0 ⊢ stt_v.ref◂q0; q0 ⊢ stt_v.arr◂ha .
									alc_vs v0 ⊢ { v0 rm0 } 
									$ rm0 ⊢ rm0,rm00 
									stt_v.r64_reg rm00 ⊢ a1 
									stt_v.rcd_2 { is0 a1 } ⊢ ip1 
									brk_rsp_e { rsp rm0 e0 } ⊢ { rsp rm0 e0 }
									reg { rsp r0 } ⊢ { rsp r0 sr0 br0 } 
									reg { rsp rm0 } ⊢ { rsp rm0 srm0 brm0 } 
									» _^ sr0,srm0 ⊢ sr0,srm0,sc0 
										##"; _arr_len " 0' " ⊢ " 1' "\n" 
										"\tmov rdi," 0' "\n" 
										`	mov rsi,0x0000_ffff_ffff_ffff 
										`	and rsi,QWORD [rdi]
										"\tmov " 1' ",rsi\n" // 
									rp8.add_s8 { e0 sc0 } ⊢ e0 
									rp8.cct { ec0 e0 } ⊢ ec0  
									∎ { gfl evv tav tv_n tv lb_n a rsp rl irv ip1 { eg0 eds ec0 } }
								∐. . 
									» "arr_len 0" _ ⊢ se 
									_emt se ⊢ se 
									∎|	
							∐. . 
								» "arr_len 0" _ ⊢ se 
								_emt se ⊢ se 
								∎| 
						∐ a'=e_axm.info . 
							» "\tcall info\n" _ ⊢ sc0 
							rp8.add_s8 { ec0 sc0 } ⊢ ec0 
							$ is ⊢ p1
							∎ { gfl evv tav tv_n tv lb_n a rsp rl irv p1 { eg0 eds ec0 } }
						∐ a'=e_axm.getchar . 
							stt_v.mk_rset_env_x { irv rl } ⊢ { irv rl v0 } 
							$ is ⊢ is,is0 
							stt_v.mk_rset { is0 v0 } ⊢ v0 
							alc_vs v0 ⊢ { v0 rm0 } 
							brk_rsp_e { rsp rm0 ec0 } ⊢ { rsp rm0 ec0 } 
							reg { rsp rm0 } ⊢ { rsp rm0 srm0 brm0 } 
							» _^ srm0 ⊢ srm0,sc0 
								`	mov rdi,fmt_getchar 
								`	call emt_stg 
								`	xor rax,rax 
								`	C_CALL_SF getchar 
								"\tmov " 0' ",rax\n" // 
							rp8.add_s8 { ec0 sc0 } ⊢ ec0 
							stt_v.r64_reg rm0 ⊢ p1 
							∎ { gfl evv tav tv_n tv lb_n a rsp rl irv p1 { eg0 eds ec0 } }						
						∐ a'=e_axm.in_fn . 
							rp8.e {} ⊢ e0 
							stt_v.mk_rset_env_x { irv rl } ⊢ { irv rl vs0 }
							$ is ⊢ is,is0 
							stt_v.mk_rset { is0 vs0 } ⊢ vs0
							$ is ⊢ is,is0 
							alc_vs vs0 ⊢ { vs0 rm0 } 
							brk_rsp { rsp rm0 } ⊢ { rsp rm0 sb0 } 
							rp8.add_s8 { e0 sb0 } ⊢ e0 
							reg { rsp rm0 } ⊢ { rsp rm0 srm0 brm0 } 
							∐ is ⊢ RP.atm◂a0; a0 ⊢ stt_v.hp◂{ r0 h0 }; h0 ⊢ stt_v.ref◂q0; q0 ⊢ stt_v.opq◂{} . 
								reg { rsp r0 } ⊢ { rsp r0 sr0 br0 } 
								stt_v.s8_reg rm0 ⊢ a1 
								stt_v.rcd_2 { is0 a1 } ⊢ p1 
								» _^ sr0,srm0 ⊢ sr0,srm0,sc0 
									"\tmov rdi," 0' "\n" 
									push_c_regs 
									`	add rdi,8
									`	call in_fn
									pop_c_regs 
									"\tmov " 1' ",rax\n" 
									// 
								rp8.add_s8 { e0 sc0 } ⊢ e0
								rp8.cct { ec0 e0 } ⊢ ec0 
								∎ { gfl evv tav tv_n tv lb_n a rsp rl irv p1 { eg0 eds ec0 } }
							∐ is ⊢ RP.atm◂a0; a0 ⊢ stt_v.hp_im◂v0; v0 ⊢ ast.s8◂s0 . 
								stt_v.s8_reg rm0 ⊢ a1 
								_nil {} ⊢ l0 
								_cns { a1 l0 } ⊢ l0 
								_cns { is0 l0 } ⊢ l0 
								RP.rcd l0 ⊢ p1 
								inc_x lb_n ⊢ { lb0 lb_n } 
								data_s8 { eds lb0 s0 } ⊢ { eds lb0 s0 }
								» _^ lb0,srm0 ⊢ lb0,srm0,sr 
									"\tmov rdi,LB_" 0d' "\n" 
									push_c_regs 
									`	call in_fn 
									pop_c_regs 
									"\tmov " 1' ",rax\n" 
								//
								rp8.add_s8 { e0 sr } ⊢ e0 
								rp8.cct { ec0 e0 } ⊢ ec0  
								∎ { gfl evv tav tv_n tv lb_n a rsp rl irv p1 { eg0 eds ec0 } }
							∐. . 
								» "in_fn D660" _ ⊢ ee0 
									_emt ee0 ⊢ _ 
									∎|
						\[
						∐ a'=e_axm.out_fn . 
							rp8.e {} ⊢ e0 
							stt_v.mk_rset_env_x { irv rl } ⊢ { irv rl vs0 }
							$ is ⊢ is,is0 
							stt_v.mk_rset { is0 vs0 } ⊢ vs0
							$ is ⊢ is,is0 
							∐ is ⊢ RP.atm◂a0; a0 ⊢ stt_v.hp◂{ r0 h0 }; h0 ⊢ stt_v.ref◂q0; q0 ⊢ stt_v.opq◂{} . 
								reg { rsp r0 } ⊢ { rsp r0 sr0 br0 } 
								alc_vs vs0 ⊢ { vs0 rm0 } 
								reg_brk { rsp rm0 } ⊢ { rsp rm0 srm0 brm0 sbrm0 } 
								rp8.add_s8 { e0 sbrm0 } ⊢ e0 
								stt_v.s8_reg rm0 ⊢ a1 
								_nil {} ⊢ l0 
								_cns { a1 l0 } ⊢ l0 
								_cns { is0 l0 } ⊢ l0 
								RP.rcd l0 ⊢ p1 
								» _^ sr0,srm0 ⊢ sr0,srm0,sc0 
									"\tmov rdi," 0' "\n" 
									`	add rdi,8
									push_c_regs 
									`	call in_fn
									pop_c_regs 
									"\tmov " 1' ",rax\n" 
									// 
								rp8.add_s8 { e0 sc0 } ⊢ e0
								rp8.mk_s8 e0 ⊢ { e0 se0 } 
								∎ { evv tav tv_n tv lb_n a rsp rl irv p1 se0 }
							∐ is ⊢ RP.atm◂a0; a0 ⊢ stt_v.hp_im◂v0; v0 ⊢ ast.s8◂s0 . 
								alc_vs vs0 ⊢ { vs0 rm0 } 
								reg_brk { rsp rm0 } ⊢ { rsp rm0 srm0 brm0 sbrm0 } 
								rp8.add_s8 { e0 sbrm0 } ⊢ e0 
								stt_v.s8_reg rm0 ⊢ a1 
								_nil {} ⊢ l0 
								_cns { a1 l0 } ⊢ l0 
								_cns { is0 l0 } ⊢ l0 
								RP.rcd l0 ⊢ p1 
								» 0r _ ⊢ rs 
								mk_db { s0 rs } ⊢ { s0 rs dbs } 
								inc_x lb_n ⊢ { lb0 lb_n }
								inc_x lb_n ⊢ { lb1 lb_n }  
								» _^ lb0,lb1,dbs,srm0 ⊢ lb0,lb1,dbs,srm0,sr 
									"\tjmp LB_" 0d' "\n"
									"\tLB_" 1d' ": db " 2' "\n" 
									"LB_" 0d' ":\n" 
									push_c_regs 
									"\tmov rdi,LB_" 1d' "\n" 
									`	call in_fn 
									pop_c_regs 
									"\tmov " 3' ",rax\n" 
								//
								rp8.add_s8 { e0 sr } ⊢ e0 
								rp8.mk_s8 e0 ⊢ { e0 se0 } 
								∎ { evv tav tv_n tv lb_n a rsp rl irv p1 se0 }
							∐. . 
								∎|
						\]
						∐. . 
							» _^ a ⊢ a,ee1 
								"; ##" 0d' ".. ⊢ ..\n"
								"\tcall ETR_" 0d' "\n" //
							##rp8.of_s8 ec1 ⊢ ec1  
							_emt ee1 ⊢ ee1 
							∎| 
					\[
					@.op2 { op im tav lb_n a rsp rl irv sis is }
						∐ is ⊢ RP.atm◂k; k ⊢ stt_v.hp◂{ r h }; h ⊢ stt_v.r64◂{} . 
							stt_v.r64 {} ⊢ h 
							reg { rsp r } ⊢ { rsp r sr b } 
							stt_v.hp { r h } ⊢ k
							RP.atm k ⊢ is 
							» _^ sis,sr,op,im ⊢ sis,sr,op,im,ec1 
								"; " 2' " " 0' " ⊢ " 0' "\n" 
								"\t" 2' " " 1' "," 3' "\n" 
								//
							∎ { evv tav tv_n tv lb_n a rsp rl irv is ec1 }
							∐ is ⊢ RP.atm◂k; k ⊢ stt_v.hp_im◂v; v ⊢ ast.r64◂x . 
								$ rl ⊢ rl,rl0 
								rset.ini {} ⊢ v 
								stt_v.mk_rset_env { irv rl0 v } ⊢ { irv v } 
								rset.min_f v ⊢ { v i0 } 
								stt_v.r64 {} ⊢ h 
								$ i0 ⊢ i0,i00 
								stt_v.hp { i0 h } ⊢ k
								RP.atm k ⊢ is1 
								$ is1 ⊢ is1,is10 
								stt_v.pnt.f is10 ⊢ sis1
								reg { rsp i00 } ⊢ { rsp i00 sr b } 
								_inc x ⊢ x 
								» _^ sis,sis1,sr,x ⊢ sis,sis1,sr,x,ec1 
									"; _inc " 0' " ⊢ " 1' "\n" 
									"\tmov " 2' "," 3d' "\n" 
									//
								∎ { evv tav tv_n tv lb_n a rsp rl irv is1 ec1 }
							∐. . 
								» "lc_code.f t2" _ ⊢ se 
								_emt se ⊢ se 
								∎|
						∎ { tav lb_n a rsp rl irv is ec1 }
					\]
					@.op2 { op tav lb_n a rsp rl irv is }
						rp8.e {} ⊢ e0 
						∐ is ⊢ RP.rcd◂l; l ⊢ _cns◂{ a0 l }; l ⊢ _cns◂{ a1 l }; l ⊢ _nil◂{}; a0 ⊢ RP.atm◂k0; a1 ⊢ RP.atm◂k1 . 
							∐ k0 ⊢ stt_v.hp◂{ r0 h0 }; h0 ⊢ stt_v.r64◂{} .
								∐ k1 ⊢ stt_v.hp◂{ r1 h1 }; h1 ⊢ stt_v.r64◂{} .  
									$ r0 ⊢ r0,r00 
									stt_v.r64_reg r00 ⊢ a0
									$ r1 ⊢ r1,r10 
									stt_v.r64_reg r10 ⊢ a1 
									_nil {} ⊢ l 
									_cns { a1 l } ⊢ l 
									_cns { a0 l } ⊢ l 
									RP.rcd l ⊢ is 
									reg { rsp r0 } ⊢ { rsp r0 sr0 b0 } 
									reg { rsp r1 } ⊢ { rsp r1 sr1 b1 } 
									$ b1 ⊢ 
									∐ bl.t◂{} . 
										» _^ sr0,sr1,op ⊢ sr0,sr1,op,ec1 
											##"; _" 3' " " 0' " ⊢ " 0' "\n" 
											"\t" 2' " " 0' "," 1' "\n" 
											//
										rp8.add_s8 { e0 ec1 } ⊢ e0 
										∎ { tav lb_n a rsp rl irv is e0 }
									∐. bl.f◂{} . 
										» _^ sr0,sr1,op ⊢ sr0,sr1,op,ec1 
											##"; _" 3' " " 0' " ⊢ " 0' "\n"
											"\tmov rdi," 1' "\n" 
											"\t" 2' " " 0' ",rdi\n"
											//
										rp8.add_s8 { e0 ec1 } ⊢ e0 
										∎ { tav lb_n a rsp rl irv is e0 }
									∐ k1 ⊢ stt_v.hp_im◂v; v ⊢ ast.r64◂x .  
										reg { rsp r0 } ⊢ { rsp r0 sr0 b0 } 
										stt_v.r64_reg r0 ⊢ a0 
										$ x ⊢ x,x0 
										stt_v.r64_im x0 ⊢ a1 
										_nil {} ⊢ l 
										_cns { a1 l } ⊢ l 
										_cns { a0 l } ⊢ l 
										RP.rcd l ⊢ is 
										##$ is ⊢ is,is0 
										##stt_v.pnt.f is0 ⊢ sis1 
										∐ b0 ⊢ bl.t◂{} . 
											» _^ sr0,x,op ⊢ sr0,x,op,ec1 
												##"; _" 4' " " 0' " ⊢ " 1' "\n" 
												"\t" 2' " " 0' "," 1d' "\n" 
												//
											rp8.add_s8 { e0 ec1 } ⊢ e0 
											∎ { tav lb_n a rsp rl irv is e0 }
										∐. . 
											» _^ sr0,x,op ⊢ sr0,x,op,ec1 
												##"; _" 4' " " 0' " ⊢ " 1' "\n" 
												"\tmov rdi," 1d' "\n" 
												"\t" 2' " " 0' ",rdi\n" 
												//
											rp8.add_s8 { e0 ec1 } ⊢ e0 
											∎ { tav lb_n a rsp rl irv is e0 }
									∐. . 
										» "lc_code.f _imul 0" _ ⊢ se 
										_emt se ⊢ se 
										∎| 
								∐ k0 ⊢ stt_v.hp_im◂v0; v0 ⊢ ast.r64◂x0 . 
									∐ k1 ⊢ stt_v.hp◂{ r1 h1 }; h1 ⊢ stt_v.r64◂{} .  
										stt_v.mk_rset_env_x { irv rl } ⊢ { irv rl v0 }
										alc_vs v0 ⊢ { v0 rm0 } 
										brk_rsp { rsp rm0 } ⊢ { rsp rm0 sb0 } 
										rp8.add_s8 { e0 sb0 } ⊢ e0 
										$ r1 ⊢ r1,r10 
										stt_v.r64_reg r10 ⊢ a1 
										$ rm0 ⊢ rm0,rm00 
										stt_v.r64_reg rm00 ⊢ a0 
										_nil {} ⊢ l 
										_cns { a1 l } ⊢ l 
										_cns { a0 l } ⊢ l 
										RP.rcd l ⊢ is 
										##$ is ⊢ is,is0 
										##stt_v.pnt.f is0 ⊢ sis1 
										reg { rsp r1 } ⊢ { rsp r1 sr1 b1 } 
										reg { rsp rm0 } ⊢ { rsp rm0 sr0 b0 } 
										∐ b0 ⊢ bl.t◂{} . 
											» _^ sr0,sr1,x0,op ⊢ sr0,sr1,x0,op,ec1  
												##"; _" 5' " " 0' " ⊢ " 1' "\n" 
												"\tmov " 0' "," 2d' "\n"  
												"\t" 3' " " 0' "," 1' "\n" 
												//
											rp8.add_s8 { e0 ec1 } ⊢ e0 
											∎ { tav lb_n a rsp rl irv is e0 }
										∐. b0 ⊢ bl.f◂{} . 
											» _^ sr0,sr1,x0 ⊢ sr0,sr1,x0,ec1 
												##"; _imul " 0' " ⊢ " 1' "\n" 
												"\tmov rdi," 2d' "\n" 
												"\timul rdi," 1' "\n" 
												"\tmov " 0' ",rdi\n"  
												//
											rp8.add_s8 { e0 ec1 } ⊢ e0 
											∎ { tav lb_n a rsp rl irv is e0 }
									∐ k1 ⊢ stt_v.hp_im◂v1; v1 ⊢ ast.r64◂x1 .  
										stt_v.mk_rset_env_x { irv rl } ⊢ { irv rl v0 } 
										alc_vs v0 ⊢ { v0 rm0 } 
										alc_vs v0 ⊢ { v0 rm1 }  
										$ rm0 ⊢ rm0,rm00
										stt_v.r64_reg rm00 ⊢ a0 
										$ rm1 ⊢ rm1,rm10 
										stt_v.r64_reg rm10 ⊢ a1 
										_nil {} ⊢ l 
										_cns { a1 l } ⊢ l 
										_cns { a0 l } ⊢ l 
										RP.rcd l ⊢ is 
										##$ is ⊢ is,is0 
										##stt_v.pnt.f is0 ⊢ sis1 
										brk_rsp { rsp rm1 } ⊢ { rsp rm1 sb0 } 
										rp8.add_s8 { e0 sb0 } ⊢ e0 
										reg { rsp rm0 } ⊢ { rsp rm0 sr0 b0 } 
										##$ rm1 ⊢ rm1,rm10 
										reg { rsp rm1 } ⊢ { rsp rm1 sr1 b1 } 
										∐ b1 ⊢ bl.t◂{}; b0 ⊢ bl.f◂{} . 
											» _^ sr0,sr1,x0,x1,op ⊢ sr0,sr1,x0,x1,op,ec1 
												##"; _" 6' " " 0' " ⊢ " 1' "\n" 
												"\tmov " 1' "," 3d' "\n"  
												"\tmov rdi," 2d' "\n" 
												"\t" 4' " rdi," 1' "\n"
												"\tmov " 0' ",rdi\n"  
												//
											rp8.add_s8 { e0 ec1 } ⊢ e0
											∎ { tav lb_n a rsp rl irv is e0 }
										∐ b1 ⊢ bl.t◂{}; b0 ⊢ bl.t◂{} . 
											» _^ sr0,sr1,x0,x1,op ⊢ sr0,sr1,x0,x1,op,ec1 
												##"; _" 6' " " 0' " ⊢ " 1' "\n" 
												"\tmov " 1' "," 3d' "\n"  
												"\tmov " 0' "," 2d' "\n" 
												"\t" 4' " " 0' "," 1' "\n"
												//
											rp8.add_s8 { e0 ec1 } ⊢ e0
											rp8.mk_s8 e0 ⊢ { e0 ec1 } 
											∎ { tav lb_n a rsp rl irv is e0 }
										∐ b1 ⊢ bl.f◂{}; b0 ⊢ bl.t◂{} . 
											» _^ sr0,sr1,x0,x1,op ⊢ sr0,sr1,x0,x1,op,ec1 
											##	"; _" 6' " " 0' " ⊢ " 1' "\n" 
												"\tmov rdi," 3d' "\n"  
												"\tmov " 0' "," 2d' "\n" 
												"\t" 4' " " 0' ",rdi\n"
												"\tmov " 1' ",rdi\n" 
												//
											rp8.add_s8 { e0 ec1 } ⊢ e0
											∎ { tav lb_n a rsp rl irv is e0 }
										∐. b1 ⊢ bl.f◂{}; b0 ⊢ bl.f◂{} . 
											» _^ sr0,sr1,x0,x1,op ⊢ sr0,sr1,x0,x1,op,ec1 
												##"; _" 6' " " 0' " ⊢ " 1' "\n" 
												"\tmov rsi," 3d' "\n"  
												"\tmov rdi," 2d' "\n" 
												"\t" 4' " rdi,rsi\n"
												"\tmov " 0' ",rdi\n"  
												"\tmov " 1' ",rsi\n" 
												//
											rp8.add_s8 { e0 ec1 } ⊢ e0
											∎ { tav lb_n a rsp rl irv is e0 }
									∐. . 
										» "lc_code.f _imul 1" _ ⊢ se 
										_emt se ⊢ se 
										∎| 
								∐. . 
									» "lc_code.f _imul 2" _ ⊢ se 
									_emt se ⊢ se 
									##_emt sis ⊢ sis 
									∎|
							∐. . 
								» "lc_code.f _imul 3" _ ⊢ se 
								_emt se ⊢ se 
								∎|
				§ 
					@.stt_call { tav o lb_n rsp irv rl rsp_s p0 is }
						rp8.e {} ⊢ er 
						» REG_N _ ⊢ nb 
						_add { nb rsp } ⊢ { nb rsp }
						push_regs.f { rsp irv rl er } ⊢ { rsp irv v0 rl er n l }
						∐ rsp_s'=0r . 
							_inc rsp ⊢ rsp 
							shft_ptn { p0 rsp } ⊢ { p0 rsp }
							_dec rsp ⊢ rsp 
							##sub_rsp rsp_s ⊢ { rsp_s ec2 } 
							$ rsp ⊢ rsp,rsp00 
							##_add { rsp00 rsp_s } ⊢ { rsp00 rsp_s }
							mov_ptn2.f2 { tav rsp00 v0 is p0 er } ⊢ { tav rsp00 v0 er }
							set_rsp { rsp00 rsp er } ⊢ { rsp er } 
							» _^ o ⊢ o,e1 
								"\tcall " 0' "\n" //
							rp8.add_s8 { er e1 } ⊢ er 
							∎ { tav o lb_n rsp irv rl rsp_s er l v0 nb } 
						∐. . 
							inc_x lb_n ⊢ { lbr lb_n }  
							» _^ lbr ⊢ lbr,s0 
								"\tpush LB_" 0d' "\n" // 
							rp8.add_s8 { er s0 } ⊢ er 
							» REG_N _ ⊢ nb1 
							_add { nb1 rsp } ⊢ { nb1 rsp } 
							rset.set_t { v0 nb1 } ⊢ { v0 nb1 } 
							$ rsp ⊢ rsp,rsp00  
							_inc rsp00 ⊢ rsp00 
							shft_ptn { p0 rsp00 } ⊢ { p0 rsp00 }
							_add { rsp00 rsp_s } ⊢ { rsp00 rsp_s }
							sub_rsp rsp_s ⊢ { rsp_s ec2 }
							rp8.add_s8 { er ec2 } ⊢ er  
							$ rsp00 ⊢ rsp00,rsp00_0
							mov_ptn2.f2 { tav rsp00 v0 is p0 er } ⊢ { tav rsp00 v0 er }
							set_rsp { rsp00 rsp00_0 er } ⊢ { rsp00 er } 
							rset.set_f { v0 nb1 } ⊢ { v0 nb1 } 
							» _^ lbr,o ⊢ lbr,o,s0 
								"\tcall " 1' "\n" 
								"LB_" 0d' ":\n" // 
							rp8.add_s8 { er s0 } ⊢ er
							∎ { tav o lb_n rsp irv rl rsp_s er l v0 nb } 
				§ 
					@.stt_jmp_op { { gfl cl } lb_n { ev evv } rsp { rv irv } tav tv_n tv { eg0 eds ec0 } rl { { se0 rsp_d0 p0 rsp_d1 p1 } is o yr } }
						stt_call { tav se0 lb_n rsp irv rl rsp_d0 p0 is } ⊢ { tav se0 lb_n rsp irv rl rsp_d0 er l v0 nb } 
						rp8.cct { ec0 er } ⊢ ec0 
						∐ rsp_d1'=0r . 
							pop_regs.f { rsp irv rl p1 l v0 nb } ⊢ { rsp irv rl p1 e1 v0 nb }
							rp8.add_s8 { ec0 e1 } ⊢ ec0 
							∎ { { gfl cl } lb_n { ev evv } rsp { rv irv } tav tv_n tv { eg0 eds ec0 } rl { p1 o yr } } 
						∐. . 
							_inc rsp ⊢ rsp 
							shft_ptn { p1 rsp } ⊢ { p1 rsp } 
							_add { rsp rsp_d1 } ⊢ { rsp rsp_d1 }
							pop_regs.f { rsp irv rl p1 l v0 nb } ⊢ { rsp irv rl p1 e1 v0 nb }
							rp8.add_s8 { ec0 e1 } ⊢ ec0 
							∎ { { gfl cl } lb_n { ev evv } rsp { rv irv } tav tv_n tv { eg0 eds ec0 } rl { p1 o yr } } 
				§ 
					@.stt_jmp { { gfl cl } lb_n { ev evv } rsp { rv irv } tav tv_n tv { eg0 eds ec0 } rl { ys is o yr } } 
						_lod_q { evv o } ⊢ { evv o k }
						∐ k ⊢ k_op_axm◂a . 
							$ yr ⊢ yr,yr0 
							op_axm { gfl evv tav tv_n tv lb_n a rsp rl irv is yr0 { eg0 eds ec0 } } ⊢ { gfl evv tav tv_n tv lb_n a rsp rl irv iy { eg0 eds ec0 } }
							∎ { { gfl cl } lb_n { ev evv } rsp { rv irv } tav tv_n tv { eg0 eds ec0 } rl { iy o yr } } 
						∐ k ⊢ k_ctr◂{ ia na } . 
							stt_v.stt_adt { ia na is } ⊢ iy 
							RP.atm iy ⊢ iy 
							∎ { { gfl cl } lb_n { ev evv } rsp { rv irv } tav tv_n tv { eg0 eds ec0 } rl { iy o yr } } 
						∐ k ⊢ k_op◂{ rsp_s p0 rsp_d1 p1 } . 
							» _^ o ⊢ o,se0 
								"ETR_" 0d' // 
							stt_jmp_op { { gfl cl } lb_n { ev evv } rsp { rv irv } tav tv_n tv { eg0 eds ec0 } rl { { se0 rsp_s p0 rsp_d1 p1 } is o yr } } ⊢| 		
						∐ k ⊢ k_op_gnr◂{ dp lcg } . 
							find_gf { tv gfl o ys } ⊢ { tv gfl o ys oa0 } 
							∐ oa0 ⊢ _some◂{ lb ig y1 rsp_g0 p0 rsp_g1 p1 } . 
								» _^ lb ⊢ lb,se0 
									"LB_" 0d' // 
								stt_jmp_op { { gfl cl } lb_n { ev evv } rsp { rv irv } tav tv_n tv { eg0 eds ec0 } rl { { se0 rsp_g0 p0 rsp_g1 p1 } is o yr } } ⊢| 
							∐. . 
								$ yr ⊢ yr,yr0
								$ o ⊢ o,o0 
								gnr_lc_code { { o0 ys yr0 dp } { gfl cl } lb_n { ev evv } rv tav tv_n tv lcg } ⊢ { { eeg0 eds0 ee0 } R0 { gfl cl } lb_n { ev evv } rv tav tv_n tv }
								$ R0 ⊢ { lb ig y1 rsp_g0 p0 rsp_g1 p1 }
								rp8.cct { eg0 eeg0 } ⊢ eg0 
								rp8.cct { eg0 ee0 } ⊢ eg0 
								rp8.cct { eds eds0 } ⊢ eds 
								» _^ lb ⊢ lb,se0 
									"LB_" 0d' // 
								stt_jmp_op { { gfl cl } lb_n { ev evv } rsp { rv irv } tav tv_n tv { eg0 eds ec0 } rl { { se0 rsp_g0 p0 rsp_g1 p1 } is o yr } } ⊢| 
						∐. . 
							» _^ o ⊢ o,ec1 
								"; " "#" 0d' ".." " ⊢|\n" 
								"\tjmp ETR_" 0d' "\n" // 
							_emt ec1 ⊢ _ 
							∎|
					@.f { { gfl cl } lb_n { ev evv } rsp { rv irv } tav tv_n tv lc { eg0 eds ec0 } rl ft } 
						##» "\tret\n" _ ⊢ ret 
						ret_f { { gfl cl } lb_n { ev evv } rsp { rv irv } tav tv_n tv lc { eg0 eds ec0 } rl ft } ⊢|						
					@.ret_f { { gfl cl } lb_n { ev evv } rsp { rv irv } tav tv_n tv lc { eg0 eds ec0 } rl ft } 
						$ rl ⊢ rl,rl0 
						pnt_env { irv rsp rl0 } ⊢ { irv rsp srl } 
						##» "ret_f D0" _ ⊢ eed 
						##_emt eed ⊢ _ 
						##_emt srl ⊢ srl
						rp8.add_s8 { ec0 srl } ⊢ ec0 
						$ lc ⊢
						∐ ast.jmp◂{ o x } . 
								$ x ⊢ x,s0
							crt_type_k.src_ptn { ev tv rv s0 } ⊢ { ev tv rv ys } 
							inst_cl { tv_n tv ys cl } ⊢ { tv_n tv ys cl }
							idx.csm_ptn { irv x rl } ⊢ { irv is rl }
							$ is ⊢ is,is0 
							stt_v.pnt.f is0 ⊢ sis
							» _^ o,sis ⊢ o,sis,ec1 
								"; #" 0d' " " 1' " ⊢|\n" //
							rp8.add_s8 { ec0 ec1 } ⊢ ec0 
							dlt.env { gfl irv tav lb_n rsp rl { eg0 eds ec0 } } ⊢ { gfl irv tav lb_n rsp { eg0 eds ec0 } } 
							_nil {} ⊢ rl 
							_lod_q { ev o } ⊢ { ev o yk } 
							var yk ⊢ yk 
							RP.atm yk ⊢ yk 
							∐ ft ⊢ f_etr◂{ rsp_d pr yr } . 
								» 1r _ ⊢ lv 
								$ yr ⊢ yr,yr0 
								iug_imp { tv_n tv lv ys yr0 yk } ⊢ { tv_n tv lv ys _ yk } 
								##$ rl ⊢ _ 
								stt_jmp { { gfl cl } lb_n { ev evv } rsp { rv irv } tav tv_n tv { eg0 eds ec0 } rl { ys is o yr } } ⊢ { { gfl cl } lb_n { ev evv } rsp { rv irv } tav tv_n tv { eg0 eds ec0 } rl { p1 o yr } }  
								rset.ini {} ⊢ vs0
								$ pr ⊢ pr,pr0
								mov_ptn2.f2 { tav rsp vs0 p1 pr0 ec0 } ⊢ { tav rsp vs0 ec0 } 
								$ rsp_d ⊢ rsp_d,rsp_d0 
								set_rsp { rsp rsp_d0 ec0 } ⊢ { rsp ec0 }
								∐ rsp_d'=0r . 
									» "\tret\n" _ ⊢ sc1 
									rp8.add_s8 { ec0 sc1 } ⊢ ec0 
									f_etr { rsp_d pr yr } ⊢ ft 
									∎ { { gfl cl } lb_n { ev evv } rsp { rv irv } tav tv_n tv { eg0 eds ec0 } rl ft } 
								∐. . 
									» _^ rsp ⊢ rsp,sc1 
										"\tpush QWORD [rsp+8*" 0d' "]\n"
										`	ret
										//
									rp8.add_s8 { ec0 sc1 } ⊢ ec0 
									f_etr { rsp_d pr yr } ⊢ ft 
									∎ { { gfl cl } lb_n { ev evv } rsp { rv irv } tav tv_n tv { eg0 eds ec0 } rl ft } 							
							∐ ft ⊢ f_inl◂{ { rsp_d pr yr } ret } . 
								» 1r _ ⊢ lv 
								$ yr ⊢ yr,yr0 
								iug_imp { tv_n tv lv ys yr0 yk } ⊢ { tv_n tv lv ys _ yk } 
								stt_jmp { { gfl cl } lb_n { ev evv } rsp { rv irv } tav tv_n tv { eg0 eds ec0 } rl { ys is o yr } } ⊢ { { gfl cl } lb_n { ev evv } rsp { rv irv } tav tv_n tv { eg0 eds ec0 } rl { p1 o yr } }  
								rset.ini {} ⊢ vs0
								$ pr ⊢ pr,pr0
								mov_ptn2.f2 { tav rsp vs0 p1 pr0 ec0 } ⊢ { tav rsp vs0 ec0 } 
								$ rsp_d ⊢ rsp_d,rsp_d0 
								set_rsp { rsp rsp_d0 ec0 } ⊢ { rsp ec0 }
								$ ret ⊢ ret,ret0 
								rp8.add_s8 { ec0 ret0 } ⊢ ec0 
								f_inl { { rsp_d pr yr } ret } ⊢ ft 
								∎ { { gfl cl } lb_n { ev evv } rsp { rv irv } tav tv_n tv { eg0 eds ec0 } rl ft } 
							∐. . 
								» "ret_f D664" _ ⊢ ee0 
									_emt ee0 ⊢ _ 
									∎| 
						∐ ast.app_jmp◂{ f x } . 
							» _^ _ ⊢ ec1 
								"; " "◂ ..,.. ⊢|\n"
								"\tjmp err\n" //
							rp8.add_s8 { ec0 ec1 } ⊢ ec0
							∎ { { gfl cl } lb_n { ev evv } rsp { rv irv } tav tv_n tv { eg0 eds ec0 } rl ft } 
						∐ ast.seq◂{ ll lc } .
							$ ll ⊢
							∐ ast.op_name◂{ o s d } .			
								##» "ret_f D2" _ ⊢ eed 
								##_emt eed ⊢ _ 
								$ s ⊢ s,s0
								crt_type_k.src_ptn { ev tv rv s0 } ⊢ { ev tv rv ys } 
								idx.csm_ptn { irv s rl } ⊢ { irv is rl }
								$ is ⊢ is,is0 
								stt_v.pnt.f is0 ⊢ sis
								$ d ⊢ d,d0 
								crt_type_k.dst_ptn { tv rv d0 } ⊢ { tv rv yd }
								inst_cl { tv_n tv ys cl } ⊢ { tv_n tv ys cl }
								inst_cl { tv_n tv yd cl } ⊢ { tv_n tv yd cl } 
								_lod_q { ev o } ⊢ { ev o yk } 
								##» "ret_f D1" _ ⊢ eed 
								##_emt eed ⊢ _ 
								var yk ⊢ yk 
								RP.atm yk ⊢ yk
								» 1r _ ⊢ lv 
								iug_imp { tv_n tv lv ys yd yk } ⊢ { tv_n tv lv ys yd yk } 
								rp8.e {} ⊢ ec1 
								stt_jmp { { gfl cl } lb_n { ev evv } rsp { rv irv } tav tv_n tv { eg0 eds ec1 } rl { ys is o yd } } ⊢ { { gfl cl } lb_n { ev evv } rsp { rv irv } tav tv_n tv { eg0 eds ec1 } rl { p1 o yd } }  
								$ p1 ⊢ p1,iy 
								stt_v.pnt.f iy ⊢ sp1 
								» _^ o,sis,sp1 ⊢ o,sis,_,el1 
									"; #" 0d' " " 1' " ⊢ " 2' "\n" //
								rp8.add_s8 { ec0 el1 } ⊢ ec0 
								rp8.cct { ec0 ec1 } ⊢ ec0
								_nil {} ⊢ dl 
								idx.crt_ptn { irv d p1 rl dl } ⊢ { irv rl dl } 
								dlt.f { gfl tav lb_n rsp dl { eg0 eds ec0 } } ⊢ { gfl tav lb_n rsp { eg0 eds ec0 } }
								ret_f { { gfl cl } lb_n { ev evv } rsp { rv irv } tav tv_n tv lc { eg0 eds ec0 } rl ft } ⊢|
							∐ ast.op_app◂{ f x y } .
								» _^ _ ⊢ ec1 
									"; ◂ ..,.. ⊢ ..\n"
									// 
								rp8.add_s8 { ec0 ec1 } ⊢ ec0 
								ret_f { { gfl cl } lb_n { ev evv } rsp { rv irv  } tav tv_n tv lc { eg0 eds ec0 } rl ft } ⊢| 
							∐ ast.op_exp_cst◂{ c s d } .
								» _^ _ ⊢ ec1 
									"; » .. .. ⊢ ..\n" // 
								rp8.add_s8 { ec0 ec1 } ⊢ ec0 
								ret_f { { gfl cl } lb_n { ev evv } rsp { rv irv  } tav tv_n tv lc { eg0 eds ec0 } rl ft } ⊢| 
							∐. ast.op_exp_s8◂{ pl ss ds } .
								» _^ _ ⊢ ec1 
									"; » _^ .. ⊢ ..\n"
									"; .. //\n" // 
								rp8.add_s8 { ec0 ec1 } ⊢ ec0 
								exp_s8.f { evv lb_n rsp irv rl ss ds pl { eds ec0 } } ⊢ { evv lb_n rsp irv rl { eds ec0 } }
								##rp8.cct { ec0 e0 } ⊢ ec0
								ret_f { { gfl cl } lb_n { ev evv } rsp { rv irv } tav tv_n tv lc { eg0 eds ec0 } rl ft } ⊢|
						∐ ast.mtc◂lm .
							∐ ft ⊢ f_rtm◂ret0 . 
								» "ret_f D663" _ ⊢ ee0 
									_emt ee0 ⊢ _ 
									∎|
							∐. .  
								mtc { { gfl cl } lb_n { ev evv } rsp { rv irv } tav tv_n tv lm { eg0 eds ec0 } rl ft } ⊢| 
						∐ ast.op_id◂{ sp ll } . 
							idx.csm_ptn { irv sp rl } ⊢ { irv is rl }
							$ is ⊢ is,is0 
							stt_v.pnt.f is0 ⊢ sis
							stt_v.mk_rset_env_x { irv rl } ⊢ { irv rl v0 } 
							$ is ⊢ is,is0 
							stt_v.mk_rset { is0 v0 } ⊢ v0 
							$ ll ⊢ 
							∐ ast.id_mtc◂ilm . 
								∐ ft ⊢ f_rtm◂ret0 . 
									» "ret_f D662" _ ⊢ ee0 
									_emt ee0 ⊢ _ 
									∎| 
								∐. . 
									id_mtc { { gfl cl } { is sis } lb_n { ev evv } rsp { rv irv } tav tv_n tv ilm { eg0 eds ec0 } rl ft } ⊢| 
							∐. ast.id_line◂{ dl lc } . 
								rpc.id { v0 gfl tav lb_n rsp irv sis is rl dl } ⊢ { v0 gfl tav lb_n rsp irv sis is rl { eg1 eds1 e1 } }
								rp8.cct { eds eds1 } ⊢ eds 
								rp8.cct { ec0 e1 } ⊢ ec0 
								rp8.cct { eg0 eg1 } ⊢ eg0 
								ret_f { { gfl cl } lb_n { ev evv } rsp { rv irv } tav tv_n tv lc { eg0 eds ec0 } rl ft } ⊢|
						∐ ast.ret◂s .
							$ s ⊢ 
							∐ _some◂s . 
								idx.csm_ptn { irv s rl } ⊢ { irv is rl }
								$ is ⊢ is,is0 
								stt_v.pnt.f is0 ⊢ sis
								» _^ sis ⊢ sis,ec1 
									"; ∎ " 0' "\n"
									 // 
								rp8.add_s8 { ec0 ec1 } ⊢ ec0 
								dlt.env { gfl irv tav lb_n rsp rl { eg0 eds ec0 } } ⊢ { gfl irv tav lb_n rsp { eg0 eds ec0 } } 
								_nil {} ⊢ rl 
								∐ ft ⊢ f_etr◂{ rsp_d pr yr } . 
									rset.ini {} ⊢ v 
									$ pr ⊢ pr,pr0 
									mov_ptn2.f2 { tav rsp v is pr0 ec0 } ⊢ { tav rsp v ec0 } 
									∐ rsp_d'=0r . 
										add_rsp rsp ⊢ { rsp es0 }
										rp8.add_s8 { ec0 es0 } ⊢ ec0 
										» "\tret\n" _ ⊢ ret 
										rp8.add_s8 { ec0 ret } ⊢ ec0
										f_etr { rsp_d pr yr } ⊢ ft 
										∎ { { gfl cl } lb_n { ev evv } rsp { rv irv } tav tv_n tv { eg0 eds ec0 } rl ft }
									∐. .  
										$ rsp_d ⊢ rsp_d,rsp_d0
										set_rsp { rsp rsp_d0 ec0 } ⊢ { rsp ec0 } 
										» _^ rsp ⊢ rsp,ret 
											"\tpush QWORD [rsp+8*" 0d' "]\n"
											`	ret
											//
										rp8.add_s8 { ec0 ret } ⊢ ec0 
										f_etr { rsp_d pr yr } ⊢ ft 
										∎ { { gfl cl } lb_n { ev evv } rsp { rv irv } tav tv_n tv { eg0 eds ec0 } rl ft }
								∐ ft ⊢ f_inl◂{ { rsp_d pr yr } ret } . 
									$ pr ⊢ pr,pr0 
									rset.ini {} ⊢ v 
									mov_ptn2.f2 { tav rsp v is pr0 ec0 } ⊢ { tav rsp v ec0 } 
									$ rsp_d ⊢ rsp_d,rsp_d0
									set_rsp { rsp rsp_d0 ec0 } ⊢ { rsp ec0 } 
									$ ret ⊢ ret,ret0 
									rp8.add_s8 { ec0 ret0 } ⊢ ec0
									f_inl { { rsp_d pr yr } ret } ⊢ ft 
									∎ { { gfl cl } lb_n { ev evv } rsp { rv irv } tav tv_n tv { eg0 eds ec0 } rl ft }
								∐. . 
									» "ret_f D661" _ ⊢ ee0 
									_emt ee0 ⊢ _ 
									∎| 
							∐. _none◂{} . 
								∐ ft ⊢ f_rtm◂ret . 
									» "; ∎\n" _ ⊢ sc0 
									rp8.add_s8 { ec0 sc0 } ⊢ ec0 
									$ ret ⊢ ret,ret0 
									rp8.add_s8 { ec0 ret0 } ⊢ ec0
									f_rtm ret ⊢ ft 
									∎ { { gfl cl } lb_n { ev evv } rsp { rv irv } tav tv_n tv { eg0 eds ec0 } rl ft }
								∐. . 
									» "ret_f D660" _ ⊢ ee0 
									_emt ee0 ⊢ _ 
									∎|
						∐. ast.exn◂ne .
							» _^ ne ⊢ ne,se 
								"; ∎|\n" 
								"exn " 0d' ":\n" // 
							printf { eds ec0 se lb_n } ⊢ { eds ec0 se lb_n }
							» _^ _ ⊢ ec1 
								"\tjmp err\n" // 
							rp8.add_s8 { ec0 ec1 } ⊢ ec0 
							∎ { { gfl cl } lb_n { ev evv } rsp { rv irv } tav tv_n tv { eg0 eds ec0 } rl ft } 		
					@.gnr_lc_code { { o gys gyd dp } { gfl cl } lb_n { ev evv } rv tav tv_n tv lc } 
						» 8000r _ ⊢ irv_g_N 
						_mk_arr irv_g_N ⊢ { irv_g_N irv_g } 
						_mk_arr irv_g_N ⊢ { _ rv_g } 
						» "gnr_lc_code D0" _ ⊢ dd0
						_emt dd0 ⊢ _ 
						$ lb_n ⊢ lb_n,lbg 
						_inc lb_n ⊢ lb_n 
						rset.ini {} ⊢ s0 
						» 0r _ ⊢ pv_n 
						_nil {} ⊢ alp 
						$ gys ⊢ gys,gys0 
						alc_type_k.f { pv_n alp tav tv_n tv s0 gys0 } ⊢ { pv_n alp tav tv_n tv s0 p0 } 
						rset.ini {} ⊢ sr0 
						$ gyd ⊢ gyd,gyd0 
						alc_type_k.f { pv_n alp tav tv_n tv sr0 gyd0 } ⊢ { pv_n alp tav tv_n tv sr0 pr0 } 
						$ p0 ⊢ p0,p00 
						stt_v.pnt.f p00 ⊢ sp0 
						$ pr0 ⊢ pr0,pr00 
						stt_v.pnt.f pr00 ⊢ spr0 
						$ pr0 ⊢ pr0,pr0_0 
						emt.mk_rsp pr0_0 ⊢ rsp_d 
						$ p0 ⊢ p0,p00 
						emt.mk_rsp p00 ⊢ rsp 

						$ dp ⊢ dp,dp0 
						crt_type_k.dst_ptn { tv rv dp0 } ⊢ { tv rv dk }
						$ p0 ⊢ p0,p00 
						_nil {} ⊢ dl 
						_nil {} ⊢ rl 
						emt.idx.crt_ptn { irv_g dp p00 rl dl } ⊢ { irv_g rl dl } 
							
						$ pr0 ⊢ pr0,pr00 
						$ rsp ⊢ rsp,rsp0 
						$ rsp_d ⊢ rsp_d,rsp_d0 
						rp8.e {} ⊢ ee0 
						$ gys ⊢ gys,gys0 
						$ gyd ⊢ gyd,gyd0 
						imp { gys0 gyd0 } ⊢ yx 
						RP.atm yx ⊢ yx 
						##» "gnr_lc_code D1" _ ⊢ dd0
						##_emt dd0 ⊢ _ 
						_lod_q { ev o } ⊢ { ev o yi } 
						var yi ⊢ yi 
						RP.atm yi ⊢ yi 
						##» "gnr_lc_code D2" _ ⊢ dd0
						##_emt dd0 ⊢ _  
						$ yi ⊢ yi,yi0 
						##pnt_type_k { tv yi0 } ⊢ { tv syi }
						##_emt { syx syi } ⊢ { syx syi }
						_nil {} ⊢ clg 
						##cmp_t.f { tv yx yi clg } ⊢ { tv b clg }
						» 1r _ ⊢ lvg 
						##inst_al { tv_n tv lvg yx clg } ⊢ { tv_n tv lvg yx clg }
						##inst_al { tv_n tv lvg yi clg } ⊢ { tv_n tv lvg yi clg }
						$ gys ⊢ gys,gys0 
						inst { tv_n tv lvg gys0 } ⊢ { tv_n tv lvg gys0 } 
						inst_al { tv_n tv lvg dk clg } ⊢ { tv_n tv lvg dk clg } 

						$ dk ⊢ dk,dk0 
						unify.f { tv dk0 gys0 } ⊢ tv 
						_dec lvg ⊢ lvg 
						gen { tv_n tv lvg dk } ⊢ { tv_n tv lvg dk } 
						##∐ b ⊢ bl.t◂{} . 
						##» "gnr_lc_code D3" _ ⊢ dd0
						##_emt dd0 ⊢ _ 
						$ yx ⊢ yx,yx0 
						pnt_type_k { tv yx0 } ⊢ { tv syx } 
						» _^ lbg,o,sp0,spr0,syx ⊢ lbg,o,sp0,spr0,syx,ec1 
							"LB_" 0d' ": ;; #" 1d' " " 2' " ⊢ " 3' " : " 4' "\n" //
						_emt ec1 ⊢ ec1 
						_emt clg ⊢ clg 
						$ { lbg o gys rsp0 p0 rsp_d pr0 } ⊢ R0
						$ R0 ⊢ R0,R1 
						gnr_etr R1 ⊢ R1
						_cns { R1 gfl } ⊢ gfl
						rp8.add_s8 { ee0 ec1 } ⊢ ee0 
						rp8.e {} ⊢ eds 
						rp8.e {} ⊢ eg0 
						∐ rsp'=0r . 
							##» "gnr_lc_code D5" _ ⊢ dd0
							##_emt dd0 ⊢ _ 
							f_etr { rsp_d0 pr00 gyd } ⊢ ft 
							emt.lc_code.f { { gfl clg } lb_n { ev evv } rsp { rv irv_g } tav tv_n tv lc { eg0 eds ee0 } rl ft } ⊢ { { gfl clg } lb_n { ev evv } rsp { rv irv_g } tav tv_n tv { eg0 eds ee0 } rl ft } 
							##» "gnr_lc_code D7" _ ⊢ dd0
							##_emt dd0 ⊢ _ 
							∎ { { eg0 eds ee0 } R0 { gfl cl } lb_n { ev evv } rv tav tv_n tv } 
						∐. . 
							##» "gnr_lc_code D6" _ ⊢ dd0
							##		_emt dd0 ⊢ _ 
							» "\tadd rsp,8\n" _ ⊢ sc0 
							rp8.add_s8 { ee0 sc0 } ⊢ ee0
							f_etr { rsp_d0 pr00 gyd } ⊢ ft 
							emt.lc_code.f { { gfl cl } lb_n { ev evv } rsp { rv irv_g } tav tv_n tv lc { eg0 eds ee0 } rl ft } ⊢ { { gfl cl } lb_n { ev evv } rsp { rv irv_g } tav tv_n tv { eg0 eds ee0 } rl ft } 
							∎ { { eg0 eds ee0 } R0 { gfl cl } lb_n { ev evv } rv tav tv_n tv }
							##∎| 
						\[
						∐. . 
							» "gnr_lc_code D4" _ ⊢ dd0
										_emt dd0 ⊢ _ 
										∎| 
										\]				
					
					@.mtc { { gfl cl } lb_n { ev evv } rsp { rv irv } tav tv_n tv lm { eg0 eds ec0 } rl ft } 
						$ lm ⊢ 
						∐ p_cns◂{ { tl me } lm } .  
							_nil {} ⊢ gl 
							» 0r _ ⊢ gl_n 
							$ { gl_n gl } ⊢ gl 
							_nil {} ⊢ dl
							stt_v.mk_rset_env_x { irv rl } ⊢ { irv rl vs0 }
							$ rl ⊢ rl,rl0 
							$ rsp ⊢ rsp,rsp0 
							$ rsp ⊢ rsp,rsp1
							inc_x lb_n ⊢ { lb0 lb_n } 
							» _^ lb0 ⊢ lb0,slb0 
								"LB_" 0d' ":\n" //
							_some { lb0 rsp1 } ⊢ o0 
							mtc_line { vs0 gl dl lb_n o0 { ev evv } rsp0 { rv irv } tav tv_n tv tl { eg0 eds ec0 } rl0 } ⊢ { vs0 gl dl lb_n { ev evv } rsp0 { rv irv } tav tv_n tv { eg0 eds ec0 } rl0 } 
							$ gl ⊢ { _ gl } 
							gbg.dlt { gl ec0 } ⊢ ec0 
							mtc_etr { { gfl cl } lb_n { ev evv } rsp0 { rv irv } tav tv_n tv me { eg0 eds ec0 } rl0 ft } ⊢ { { gfl cl } lb_n { ev evv } rsp0 { rv irv } tav tv_n tv { eg0 eds ec0 } rl0 ft } 
							rp8.add_s8 { ec0 slb0 } ⊢ ec0 
							mtc { { gfl cl } lb_n { ev evv } rsp { rv irv } tav tv_n tv lm { eg0 eds ec0 } rl ft } ⊢|
						∐. p_end◂{ tl me } .
							_none {} ⊢ o  
							stt_v.mk_rset_env_x { irv rl } ⊢ { irv rl vs0 }
							_nil {} ⊢ gl 
							» 0r _ ⊢ gl_n 
							$ { gl_n gl } ⊢ gl 
							_nil {} ⊢ dl 
							mtc_line { vs0 gl dl lb_n o { ev evv } rsp { rv irv } tav tv_n tv tl { eg0 eds ec0 } rl } ⊢ { vs0 gl dl lb_n { ev evv } rsp { rv irv } tav tv_n tv { eg0 eds ec0 } rl } 
							$ gl ⊢ { _ gl } 
							gbg.dlt { gl ec0 } ⊢ ec0 
							mtc_etr { { gfl cl } lb_n { ev evv } rsp { rv irv } tav tv_n tv me { eg0 eds ec0 } rl ft } ⊢ { { gfl cl } lb_n { ev evv } rsp { rv irv  } tav tv_n tv { eg0 eds ec0 } rl ft } 
							∎ { { gfl cl } lb_n { ev evv } rsp { rv irv } tav tv_n tv { eg0 eds ec0 } rl ft }
					@.mtc_etr { { gfl cl } lb_n { ev evv } rsp { rv irv } tav tv_n tv me { eg0 eds ec0 } rl ft } 
						$ me ⊢ 
						∐ ast.mtc_rmf◂lm0 .
							mtc { { gfl cl } lb_n { ev evv } rsp { rv irv } tav tv_n tv lm0 { eg0 eds ec0 } rl ft } ⊢| 
						∐ ast.mtc_id_rmf◂{ sp0 ilm0 } .  
							idx.csm_ptn { irv sp0 rl } ⊢ { irv is0 rl }
							$ is0 ⊢ is0,is00 
							stt_v.pnt.f is00 ⊢ sis
							id_mtc { { gfl cl } { is0 sis } lb_n { ev evv } rsp { rv irv } tav tv_n tv ilm0 { eg0 eds ec0 } rl ft } ⊢| 
						∐. ast.mtc_code◂lc0 . 
							ret_f { { gfl cl } lb_n { ev evv } rsp { rv irv } tav tv_n tv lc0 { eg0 eds ec0 } rl ft } ⊢|
					@.mtc_line { vs0 gl dl lb_n o0 { ev evv } rsp { rv irv } tav tv_n tv tl { eg0 eds ec0 } rl } 
						$ tl ⊢ 
						∐ _cns◂{ t tl } . 
							$ t ⊢ 
							∐ ast.mtc_id◂{ sp mp } . 
								idx.csm_ptn { irv sp rl } ⊢ { irv isp rl } 
								$ isp ⊢ isp,isp0 
								stt_v.pnt.f isp0 ⊢ sisp 
								$ isp ⊢ isp,isp0
								alc_mtc_ptn.f { { gl o0 rsp lb_n } rl evv rv irv tav tv_n tv vs0 isp0 mp dl } ⊢ { { gl o0 rsp lb_n } rl evv rv irv tav tv_n tv vs0 e0 dl p1 } 
								∐ p1 ⊢ _some◂p1 . 
									$ p1 ⊢ p1,p10 
									stt_v.pnt.f p10 ⊢ sp1 
									» _^ sisp,sp1 ⊢ sisp,sp1,ec1 
										";; ?; " 0' " ⊢ " 1' "\n" // 
									rp8.add_s8 { ec0 ec1 } ⊢ ec0 
									rp8.cct { ec0 e0 } ⊢ ec0
									mtc_line { vs0 gl dl lb_n o0 { ev evv } rsp { rv irv } tav tv_n tv tl { eg0 eds ec0 } rl } ⊢|
								∐. . 
									∎ { vs0 gl dl lb_n { ev evv } rsp { rv irv } tav tv_n tv { eg0 eds ec0 } rl }
							∐ ast.mtc_cmp_test◂{ v0 v1 } .  
								$ o0 ⊢ 
								∐ _some◂{ lb0 rsp0 } . 
									$ lb0 ⊢ lb0,lb00 
									$ rsp0 ⊢ rsp0,rsp00
									inc_x lb_n ⊢ { lb_t lb_n } 
									inc_x lb_n ⊢ { lb_f lb_n }			 
									_some { lb00 rsp00 } ⊢ o0 
									cmp_test { rsp lb_n irv lb_t lb_f v0 v1 ec0 } ⊢ { rsp lb_n irv lb_t lb_f ec0 }
									lb_etr { lb_f ec0 } ⊢ { lb_f ec0 } 
									$ rsp ⊢ rsp,rsp1 
									rb_rsp { rsp1 rsp0 lb0 ec0 } ⊢ { rsp0 lb0 ec0 }
									lb_etr { lb_t ec0 } ⊢ { lb_t ec0 } 											
									mtc_line { vs0 gl dl lb_n o0 { ev evv } rsp { rv irv } tav tv_n tv tl { eg0 eds ec0 } rl } ⊢|		
								∐. _none◂{} . 
									_none {} ⊢ o0 
									mtc_line { vs0 gl dl lb_n o0 { ev evv } rsp { rv irv } tav tv_n tv tl { eg0 eds ec0 } rl } ⊢|
							∐. ast.mtc_test◂{ v0 v1 } .  
								$ o0 ⊢ 
								∐ _some◂{ lb0 rsp0 } . 
									$ lb0 ⊢ lb0,lb00 
									$ rsp0 ⊢ rsp0,rsp00
									inc_x lb_n ⊢ { lb_t lb_n } 
									inc_x lb_n ⊢ { lb_f lb_n }			 
									_some { lb00 rsp00 } ⊢ o0 
									eq_test { rsp lb_n irv lb_t lb_f v0 v1 ec0 } ⊢ { rsp lb_n irv lb_t lb_f ec0 }
									lb_etr { lb_f ec0 } ⊢ { lb_f ec0 } 
									$ rsp ⊢ rsp,rsp1 
									rb_rsp { rsp1 rsp0 lb0 ec0 } ⊢ { rsp0 lb0 ec0 }
									lb_etr { lb_t ec0 } ⊢ { lb_t ec0 } 											
									mtc_line { vs0 gl dl lb_n o0 { ev evv } rsp { rv irv } tav tv_n tv tl { eg0 eds ec0 } rl } ⊢|		
								∐. _none◂{} . 
									_none {} ⊢ o0 
									mtc_line { vs0 gl dl lb_n o0 { ev evv } rsp { rv irv } tav tv_n tv tl { eg0 eds ec0 } rl } ⊢|
						∐. _nil◂{} . 
							∎ { vs0 gl dl lb_n { ev evv } rsp { rv irv } tav tv_n tv { eg0 eds ec0 } rl }
					@.cmp_test { rsp lb_n irv lb_t lb_f v0 v1 ec0 }
						∐ v0 ⊢ ast.test_var◂i0 . 
							∐ v1 ⊢ ast.test_cst◂c1 . 
								bl.t {} ⊢ bf0 
								cmp_var_cst { bf0 i0 c1 rsp lb_n irv lb_t lb_f ec0 } ⊢| 
							∐. v1 ⊢ ast.test_var◂i1 . 
								_lod_q { irv i0 } ⊢ { irv i0 p0 } 
								_lod_q { irv i1 } ⊢ { irv i1 p1 }
								$ p0 ⊢ p0,p00 
								stt_v.pnt.f p00 ⊢ sp0 
								$ p1 ⊢ p1,p10 
								stt_v.pnt.f p10 ⊢ sp1 
								» _^ sp0,sp1 ⊢ sp0,sp1,e0 
									";;" 0' "=<" 1' "\n" //
								rp8.add_s8 { ec0 e0 } ⊢ ec0 
								∐ p0 ⊢ RP.atm◂a0; a0 ⊢ stt_v.hp◂{ r0 h0 } .
									∐ p1 ⊢ RP.atm◂a1; a1 ⊢ stt_v.hp◂{ r1 h1 } .
										∐ h0 ⊢ stt_v.r64◂{} . 
											cmp.idx_idx { rsp r0 r1 ec0 } ⊢ { rsp r0 r1 ec0 } 
											jg_lb { lb_f ec0 } ⊢ { lb_f ec0 }
											jmp_lb { lb_t ec0 } ⊢ { lb_t ec0 } 
											∎ { rsp lb_n irv lb_t lb_f ec0 }
										∐. . 
											» "ret_f D668" _ ⊢ ee0 
											_emt ee0 ⊢ _ 
											∎|
									∐ p1 ⊢ RP.atm◂a1; a1 ⊢ stt_v.hp_im◂iv; iv ⊢ ast.r64◂x1 .
										cmp.idx_im { rsp r0 x1 ec0 } ⊢ { rsp r0 x1 ec0 } 
										jg_lb { lb_f ec0 } ⊢ { lb_f ec0 }
										jmp_lb { lb_t ec0 } ⊢ { lb_t ec0 } 
										∎	{ rsp lb_n irv lb_t lb_f ec0 }
									∐. . 
										» "ret_f D669" _ ⊢ ee0 
										_emt ee0 ⊢ _ 
										∎|												
								∐ p0 ⊢ RP.atm◂a0; a0 ⊢ stt_v.hp_im◂iv; iv ⊢ ast.r64◂x0 . 
									∐ p1 ⊢ RP.atm◂a1; a1 ⊢ stt_v.hp◂{ r1 h1 } .
										cmp.idx_im { rsp r1 x0 ec0 } ⊢ { rsp _ _ ec0 } 
										jl_lb { lb_f ec0 } ⊢ { lb_f ec0 }
										jmp_lb { lb_t ec0 } ⊢ { lb_t ec0 } 	
										∎ { rsp lb_n irv lb_t lb_f ec0 }									
									∐ p1 ⊢ RP.atm◂a1; a1 ⊢ stt_v.hp_im◂iv; iv ⊢ ast.r64◂x1 .
										_setge { x1 x0 } ⊢ { x2 x0 bc } 
										∐ bc'=1r .  
											jmp_lb { lb_t ec0 } ⊢ { lb_t ec0 } 
											∎ { rsp lb_n irv lb_t lb_f ec0 }
										∐. . 
											jmp_lb { lb_f ec0 } ⊢ { lb_f ec0 }
											∎ { rsp lb_n irv lb_t lb_f ec0 } 
									∐. . 
										» "ret_f D670" _ ⊢ ee0 
										_emt ee0 ⊢ _ 
										∎|	
								∐. . 
									» "ret_f D671" _ ⊢ ee0 
									_emt ee0 ⊢ _ 
									∎|
						∐. v0 ⊢ ast.test_cst◂c0 . 
							∐ v1 ⊢ ast.test_var◂i1 . 
								bl.f {} ⊢ bf0 
								cmp_var_cst { bf0 i1 c0 rsp lb_n irv lb_t lb_f ec0 } ⊢| 
							∐. v1 ⊢ ast.test_cst◂c1 . 
								∐ c1 ⊢ ast.cst_v◂cv1 . 
									» "ret_f D672" _ ⊢ ee0 
									_emt ee0 ⊢ _ 
									∎|
								∐ c1 ⊢ ast.cst_name◂in1 . 
									» "ret_f D680" _ ⊢ ee0 
									_emt ee0 ⊢ _ 
									∎|
								∐. .
									» "ret_f D681" _ ⊢ ee0 
									_emt ee0 ⊢ _ 
									∎|
					@.eq_test { rsp lb_n irv lb_t lb_f v0 v1 ec0 }
						∐ v0 ⊢ ast.test_var◂i0 . 
							∐ v1 ⊢ ast.test_cst◂c1 . 
								eq_var_cst { i0 c1 rsp lb_n irv lb_t lb_f ec0 } ⊢|
							∐. v1 ⊢ ast.test_var◂i1 . 
								_lod_q { irv i0 } ⊢ { irv i0 p0 } 
								_lod_q { irv i1 } ⊢ { irv i1 p1 }
								∐ p0 ⊢ RP.atm◂a0; a0 ⊢ stt_v.hp◂{ r0 h0 } .
									∐ p1 ⊢ RP.atm◂a1; a1 ⊢ stt_v.hp◂{ r1 h1 } .
										∐ h0 ⊢ stt_v.r64◂{} . 
											cmp.idx_idx { rsp r0 r1 ec0 } ⊢ { rsp r0 r1 ec0 } 
											jnz_lb { lb_f ec0 } ⊢ { lb_f ec0 }		
											jmp_lb { lb_t ec0 } ⊢ { lb_t ec0 } 
											∎ { rsp lb_n irv lb_t lb_f ec0 }
										∐ h0 ⊢ stt_v.ref◂q0 . 	
											∐ q0 ⊢ stt_v.opq◂{} . 
												reg { rsp r0 } ⊢ { rsp r0 sr0 b0 } 
												reg { rsp r1 } ⊢ { rsp r1 sr1 b1 } 
												» _^ sr0,sr1,lb_f ⊢ sr0,sr1,lb_f,e0 
													"\tmov rdi," 1' "\n"
													"\tmov rsi," 0' "\n" 
													`	call eq_s8  
													"\tcmp rax,1\n" 
													"\tjnz LB_" 2d' "\n" // 
												rp8.add_s8 { ec0 e0 } ⊢ ec0 
												jmp_lb { lb_t ec0 } ⊢ { lb_t ec0 }
												∎ { rsp lb_n irv lb_t lb_f ec0 }
											∐. . 
												» "ret_f D683" _ ⊢ ee0 
												_emt ee0 ⊢ _ 
												∎| 
										∐. . 
											» "ret_f D673" _ ⊢ ee0 
											_emt ee0 ⊢ _ 
											∎|
									∐ p1 ⊢ RP.atm◂a1; a1 ⊢ stt_v.hp_im◂iv; iv ⊢ ast.r64◂x1 .
										cmp.idx_im { rsp r0 x1 ec0 } ⊢ { rsp _ _ ec0 } 
										jnz_lb { lb_f ec0 } ⊢ { lb_f ec0 } 
										jmp_lb { lb_t ec0 } ⊢ { lb_t ec0 } 
										∎ { rsp lb_n irv lb_t lb_f ec0 }
									∐. . 
										» "ret_f D674" _ ⊢ ee0 
										_emt ee0 ⊢ _ 
										∎|												
								∐ p0 ⊢ RP.atm◂a0; a0 ⊢ stt_v.hp_im◂iv; iv ⊢ ast.r64◂x0 . 
									∐ p1 ⊢ RP.atm◂a1; a1 ⊢ stt_v.hp◂{ r1 h1 } .
										cmp.idx_im { rsp r1 x0 ec0 } ⊢ { rsp r1 x0 ec0 } 
										jnz_lb { lb_f ec0 } ⊢ { lb_f ec0 } 
										jmp_lb { lb_t ec0 } ⊢ { lb_t ec0 } 
										∎ { rsp lb_n irv lb_t lb_f ec0 }
									∐ p1 ⊢ RP.atm◂a1; a1 ⊢ stt_v.hp_im◂iv; iv ⊢ ast.r64◂x1 .
										∐ x0'=x1' . 
											jmp_lb { lb_t ec0 } ⊢ { lb_t ec0 }
											∎ { rsp lb_n irv lb_t lb_f ec0 } 
										∐. . 
											jmp_lb { lb_f ec0 } ⊢ { lb_f ec0 }
											∎ { rsp lb_n irv lb_t lb_f ec0 } 
									∐. . 
										» "ret_f D675" _ ⊢ ee0 
										_emt ee0 ⊢ _ 
										∎| 	
								∐. . 
									» "ret_f D676" _ ⊢ ee0 
									_emt ee0 ⊢ _ 
									∎| 	
						∐. v0 ⊢ ast.test_cst◂c0 . 
							∐ v1 ⊢ ast.test_var◂i1 . 
								eq_var_cst { i1 c0 rsp lb_n irv lb_t lb_f ec0 } ⊢|
							∐. v1 ⊢ ast.test_cst◂c1 . 
								∐ c1 ⊢ ast.cst_v◂cv1 . 
									» "ret_f D677" _ ⊢ ee0 
									_emt ee0 ⊢ _ 
									∎| 
								∐. .
									» "ret_f D678" _ ⊢ ee0 
									_emt ee0 ⊢ _ 
									∎|	
					@.eq_var_cst { i0 c1 rsp lb_n irv lb_t lb_f ec0 }
						_lod_q { irv i0 } ⊢ { irv i0 p0 } 
						∐ c1 ⊢ ast.cst_v◂cv1 . 
							$ cv1 ⊢ 
							∐ ast.r64◂x1 . 
								∐ p0 ⊢ RP.atm◂a0; a0 ⊢ stt_v.hp◂{ r0 h0 } .
									cmp.idx_im { rsp r0 x1 ec0 } ⊢ { rsp r0 x1 ec0 } 
									jnz_lb { lb_f ec0 } ⊢ { lb_f ec0 } 
									jmp_lb { lb_t ec0 } ⊢ { lb_t ec0 } 
									∎ { rsp lb_n irv lb_t lb_f ec0 }
								∐ p0 ⊢ RP.atm◂a0; a0 ⊢ stt_v.hp_im◂iv; iv ⊢ ast.r64◂x0 . 
									∐ x0'=x1' . 
										jmp_lb { lb_t ec0 } ⊢ { lb_t ec0 } 
										∎ { rsp lb_n irv lb_t lb_f ec0 }
									∐. . 
										jmp_lb { lb_f ec0 } ⊢ { lb_f ec0 } 
										∎ { rsp lb_n irv lb_t lb_f ec0 }
								∐. . 
									» "ret_f D679" _ ⊢ ee0 
									_emt ee0 ⊢ _ 
									∎|	
							∐. ast.s8◂s1 . 
								» "ret_f D679" _ ⊢ ee0 
									_emt ee0 ⊢ _ 
									∎|
						∐. .
							» "ret_f D680" _ ⊢ ee0 
									_emt ee0 ⊢ _ 
									∎|
					@.cmp_var_cst { bf i0 c1 rsp lb_n irv lb_t lb_f ec0 }
						_lod_q { irv i0 } ⊢ { irv i0 p0 } 
						∐ c1 ⊢ ast.cst_v◂cv1 . 
							$ cv1 ⊢ 
							∐ ast.r64◂x1 . 
								∐ p0 ⊢ RP.atm◂a0; a0 ⊢ stt_v.hp◂{ r0 h0 } .
									cmp.idx_im { rsp r0 x1 ec0 } ⊢ { rsp r0 x1 ec0 }
									$ bf ⊢ 
									∐ bl.t◂{} . 
										jg_lb { lb_f ec0 } ⊢ { lb_f ec0 } 
										jmp_lb { lb_t ec0 } ⊢ { lb_t ec0 }	
										∎ { rsp lb_n irv lb_t lb_f ec0 }
									∐. bl.f◂{} . 
										jl_lb { lb_f ec0 } ⊢ { lb_f ec0 } 
										jmp_lb { lb_t ec0 } ⊢ { lb_t ec0 }
										∎ { rsp lb_n irv lb_t lb_f ec0 }
								∐ p0 ⊢ RP.atm◂a0; a0 ⊢ stt_v.hp_im◂iv; iv ⊢ ast.r64◂x0 . 
									_setge { x1 x0 } ⊢ { x1 x0 bc } 
									∐ bf ⊢ bl.t◂{}; bc'=1r . 
										jmp_lb { lb_t ec0 } ⊢ { lb_t ec0 }
										∎ { rsp lb_n irv lb_t lb_f ec0 }
									∐ bf ⊢ bl.f◂{}; bc'=0r . 
										jmp_lb { lb_t ec0 } ⊢ { lb_t ec0 }
										∎ { rsp lb_n irv lb_t lb_f ec0 }
									∐. . 
										jmp_lb { lb_f ec0 } ⊢ { lb_f ec0 }
										∎ { rsp lb_n irv lb_t lb_f ec0 }
								∐. . 
									» "ret_f D681" _ ⊢ ee0 
									_emt ee0 ⊢ _ 
									∎| 	
							∐. ast.s8◂s1 . 
								» "ret_f D682" _ ⊢ ee0 
									_emt ee0 ⊢ _ 
									∎| 
						∐. .
							» "ret_f D683" _ ⊢ ee0 
									_emt ee0 ⊢ _ 
									∎|
					@.id_mtc { { gfl cl } { is sis } lb_n { ev evv } rsp { rv irv } tav tv_n tv ilm { eg0 eds ec0 } rl ft } 
						$ ilm ⊢ 
						∐ p_cns◂{ { mp tl me } ilm } .
							stt_v.mk_rset_env_x { irv rl } ⊢ { irv rl vs0 }
							$ is ⊢ is,is0 
							stt_v.mk_rset { is0 vs0 } ⊢ vs0 
							gbg.ini {} ⊢ gl 
							_nil {} ⊢ dl
							$ rl ⊢ rl,rl0 
							$ is ⊢ is,is0 
							$ rsp ⊢ rsp,rsp0 
							$ rsp ⊢ rsp,rsp00
							inc_x lb_n ⊢ { lb0 lb_n } 
							» _^ lb0 ⊢ lb0,slb0 
								"LB_" 0d' ":\n" // 
							_some { lb0 rsp00 } ⊢ o0 
							alc_mtc_ptn.f { { gl o0 rsp0 lb_n } rl0 evv rv irv tav tv_n tv vs0 is0 mp dl } ⊢ { { gl o0 rsp0 lb_n } rl0 evv rv irv tav tv_n tv vs0 e0 dl p1 } 
							∐ p1 ⊢ _some◂p1 . 
								$ p1 ⊢ p1,p10 
								stt_v.pnt.f p10 ⊢ sp1 
								» _^ sis,sp1 ⊢ sis,sp1,ec1 
									";; ? " 0' " ⊢ " 1' "\n" // 
								rp8.add_s8 { ec0 ec1 } ⊢ ec0 
								rp8.cct { ec0 e0 } ⊢ ec0 
								mtc_line { vs0 gl dl lb_n o0 { ev evv } rsp0 { rv irv  } tav tv_n tv tl { eg0 eds ec0 } rl0 } ⊢ { vs0 gl dl lb_n { ev evv } rsp0 { rv irv  } tav tv_n tv { eg0 eds ec0 } rl0 }
								$ gl ⊢ { _ gl } 
								gbg.dlt { gl ec0 } ⊢ ec0 
								mtc_etr { { gfl cl } lb_n { ev evv } rsp0 { rv irv } tav tv_n tv me { eg0 eds ec0 } rl0 ft } ⊢ { { gfl cl } lb_n { ev evv } rsp0 { rv irv } tav tv_n tv { eg0 eds ec0 } rl0 ft } 
								rp8.add_s8 { ec0 slb0 } ⊢ ec0 
								id_mtc { { gfl cl } { is sis } lb_n { ev evv } rsp { rv irv } tav tv_n tv ilm { eg0 eds ec0 } rl ft } ⊢| 
							∐. . 
								##rp8.add_s8 { ec0 slb0 } ⊢ ec0 
								id_mtc { { gfl cl } { is sis } lb_n { ev evv } rsp { rv irv } tav tv_n tv ilm { eg0 eds ec0 } rl ft } ⊢| 								
						∐. p_end◂{ mp tl me } .
							stt_v.mk_rset_env_x { irv rl } ⊢ { irv rl vs0 }
							$ is ⊢ is,is0 
							stt_v.mk_rset { is0 vs0 } ⊢ vs0 
							gbg.ini {} ⊢ gl 
							_nil {} ⊢ dl
							_none {} ⊢ o0
							##$ rl ⊢ rl,rl0  
							alc_mtc_ptn.f { { gl o0 rsp lb_n } rl evv rv irv tav tv_n tv vs0 is mp dl } ⊢ { { gl o0 rsp lb_n } rl evv rv irv tav tv_n tv vs0 e0 dl p1 } 
							∐ p1 ⊢ _some◂p1 . 
								$ p1 ⊢ p1,p10 
								stt_v.pnt.f p10 ⊢ sp1 
								» _^ sis,sp1 ⊢ sis,sp1,ec1 
									";; ?. " 0' " ⊢ " 1' "\n" // 
								rp8.add_s8 { ec0 ec1 } ⊢ ec0 
								rp8.cct { ec0 e0 } ⊢ ec0 
								mtc_line { vs0 gl dl lb_n o0 { ev evv } rsp { rv irv } tav tv_n tv tl { eg0 eds ec0 } rl } ⊢ { vs0 gl dl lb_n { ev evv }  rsp { rv irv  } tav tv_n tv { eg0 eds ec0 } rl }
								$ gl ⊢ { _ gl } 
								gbg.dlt { gl ec0 } ⊢ ec0
								mtc_etr { { gfl cl } lb_n { ev evv } rsp { rv irv } tav tv_n tv me { eg0 eds ec0 } rl ft } ⊢ { { gfl cl } lb_n { ev evv } rsp { rv irv  } tav tv_n tv { eg0 eds ec0 } rl ft }
								∎ { { gfl cl } lb_n { ev evv } rsp { rv irv } tav tv_n tv { eg0 eds ec0 } rl ft }
							∐. . 
								##rp8.cct { ec0 e0 } ⊢ ec0 
								##$ gl ⊢ { _ gl } 
								##gbg.dlt { gl ec0 } ⊢ ec0
								» _^ _ ⊢ ec1
									`	mov rdi,rt_err0 
									` call emt_stg
									`	mov QWORD [err_n],0xffff_0008
									`	jmp err
									// 
								rp8.add_s8 { ec0 ec1 } ⊢ ec0 
								∎ { { gfl cl } lb_n { ev evv } rsp { rv irv } tav tv_n tv { eg0 eds ec0 } rl ft }
				∎∎
				
			∎∎
		§ @.slv_ns_e { n mmv mev ev m_ns e_ns m_l } 
			$ n ⊢ 
			∐ ast.mdl_n◂{ w n } . 
				assoc { m_ns w } ⊢ { m_ns w o }
				$ o ⊢ 
				∐ _some◂i_m . 
					_lod_q { mmv i_m } ⊢ { mmv i_m m_ns0 }
					_lod_q { mev i_m } ⊢ { mev i_m e_ns0 }
					_nil {} ⊢ m_l0 
					slv_ns_e { n mmv mev ev m_ns0 e_ns0 m_l0 } ⊢ { mmv mev ev m_ns0 e_ns0 m_l0 i_e }
					∎ { mmv mev ev m_ns e_ns m_l i_e }
				∐. _none◂{} . 
					$ m_l ⊢ 
					∐ _cns◂{ i_m_r m_l } .
						_lod_q { mmv i_m_r } ⊢ { mmv i_m_r m_ns0 }
						_lod_q { mev i_m_r } ⊢ { mev i_m_r e_ns0 }
						ast.mdl_n { w n } ⊢ n 
						slv_ns_e { n mmv mev ev m_ns0 e_ns0 m_l } ⊢ { mmv mev ev m_ns0 e_ns0 m_l i_e }
						_cns { i_m_r m_l } ⊢ m_l 
						∎ { mmv mev ev m_ns e_ns m_l i_e }
					∐. _nil◂{} . 
						» _^ _ ⊢ sr 
							"slv_ns_e 0:not found\n" //
						_emt sr ⊢ sr 
						_emt { w } ⊢ { w }
						∎|  
			∐. ast.fst_n◂w . 
				assoc { e_ns w } ⊢ { e_ns w o } 
				$ o ⊢
				∐ _some◂i_e . 
					∎ { mmv mev ev m_ns e_ns m_l i_e }
				∐. _none◂{} . 
					$ m_l ⊢ 
					∐ _cns◂{ i_m_r m_l } .
						_lod_q { mmv i_m_r } ⊢ { mmv i_m_r m_ns0 }
						_lod_q { mev i_m_r } ⊢ { mev i_m_r e_ns0 }
						ast.fst_n w ⊢ n 
						slv_ns_e { n mmv mev ev m_ns0 e_ns0 m_l } ⊢ { mmv mev ev m_ns0 e_ns0 m_l i_e }
						_cns { i_m_r m_l } ⊢ m_l 
						∎ { mmv mev ev m_ns e_ns m_l i_e }
					∐. _nil◂{} . 
						_emt { w } ⊢ { w }
						» _^ _ ⊢ sr 
							"slv_ns_e 1:not found\n" //
						_emt sr ⊢ sr 
						_emt e_ns ⊢ e_ns 
						∎|  
		§ @.slv_ns_m { n mmv m_ns m_l } 
			$ n ⊢ 
			∐ ast.mdl_n◂{ w n } . 
				assoc { m_ns w } ⊢ { m_ns w o }
				$ o ⊢ 
				∐ _some◂i_m0 . 
					_lod_q { mmv i_m0 } ⊢ { mmv i_m0 m_ns0 }
					_nil {} ⊢ m_l0 
					slv_ns_m { n mmv m_ns0 m_l0 } ⊢ { mmv m_ns0 m_l0 i_m }
					∎ { mmv m_ns m_l i_m }
				∐. _none◂{} . 
					$ m_l ⊢ 
					∐ _cns◂{ i_m_r m_l } .
						_lod_q { mmv i_m_r } ⊢ { mmv i_m_r m_ns0 }
						ast.mdl_n { w n } ⊢ n 
						slv_ns_m { n mmv m_ns0 m_l } ⊢ { mmv m_ns0 m_l i_m }
						_cns { i_m_r m_l } ⊢ m_l 
						∎ { mmv m_ns m_l i_m }
					∐. _nil◂{} . 
						» _^ _ ⊢ sr 
							"slv_ns_m 0:not found\n" //
						_emt sr ⊢ sr 
						_emt { w } ⊢ { w }
						∎|    
			∐. ast.fst_n◂w . 
				assoc { m_ns w } ⊢ { m_ns w o } 
				$ o ⊢
				∐ _some◂i_m . 
					∎ { mmv m_ns m_l i_m }
				∐. _none◂{} . 
					$ m_l ⊢ 
					∐ _cns◂{ i_m_r m_l } .
						_lod_q { mmv i_m_r } ⊢ { mmv i_m_r m_ns0 }
						ast.fst_n w ⊢ n 
						slv_ns_m { n mmv m_ns0 m_l } ⊢ { mmv m_ns0 m_l i_m }
						_cns { i_m_r m_l } ⊢ m_l 
						∎ { mmv m_ns m_l i_m }
					∐. _nil◂{} . 
						» _^ _ ⊢ sr 
							"slv_ns_m 1:not found\n" //
						_emt sr ⊢ sr 
						_emt { w } ⊢ { w }
						∎|
		§ slv_cst_v v
			$ v ⊢ 
			∐ ast.r64◂x . 
				t_axm.r64 {} ⊢ y 
				ast.r64 x ⊢ v 
				∎ { v y }
			∐. ast.s8◂s . 
				t_axm.s8 {} ⊢ y 
				ast.s8 s ⊢ v 
				∎ { v y } 
		§ slv_cst { lv env0 tv_n tv c } 
			$ c ⊢ 
			∐ ast.cst_name◂cn . 
				$ env0 ⊢ { mmv mev ev m_ns e_ns m_l } 
				slv_ns_e { cn mmv mev ev m_ns e_ns m_l } ⊢ { mmv mev ev m_ns e_ns m_l i_e }
				_lod_q { ev i_e } ⊢ { ev i_e vi }
				ast.cst_name i_e ⊢ c 
				var vi ⊢ y 
				RP.atm y ⊢ y 
				inst { tv_n tv lv y } ⊢ { tv_n tv lv y } 
				$ { mmv mev ev m_ns e_ns m_l } ⊢ env0 	
				∎ { lv env0 tv_n tv c y }
			∐. ast.cst_v◂v .
				slv_cst_v v ⊢ { v y } 
				ast.cst_v v ⊢ c 
				∎ { lv env0 tv_n tv c y }  
		
		§ inst_imp { tv_n tv lv y } 
			inst { tv_n tv lv y } ⊢ { tv_n tv lv y }
			newvar_l { tv_n tv lv } ⊢ { tv_n tv lv y0 }
			newvar_l { tv_n tv lv } ⊢ { tv_n tv lv y1 } 
			$ y0 ⊢ y0,y0_0 
			$ y1 ⊢ y1,y1_0 
			imp { y0_0 y1_0 } ⊢ y2 
			RP.atm y2 ⊢ y2 
			unify.f { tv y y2 } ⊢ tv 
			∎ { tv_n tv lv y0 y1 }
		§ ini_reg { lv w rv_n rv re tv_n tv }
			$ rv_n ⊢ rv_n,n0
			_some n0 ⊢ o
			_cns { { w o } re } ⊢ re
			$ tv_n ⊢ tv_n,tv_n_0
			_set_q { rv rv_n tv_n_0 } ⊢ { rv rv_n } 
			$ lv ⊢ lv,lv_0 
			var_l lv_0 ⊢ v0 
			_set_q { tv tv_n v0 } ⊢ { tv tv_n }
			$ tv_n ⊢ tv_n,tv_n_0 
			var tv_n_0 ⊢ y 
			RP.atm y ⊢ y 
			_inc tv_n ⊢ tv_n 
			_inc rv_n ⊢ rv_n 
			∎ { lv rv_n rv re tv_n tv y }
		§ mk_reg { w rv_n rv re tv_n tv y } 
			$ rv_n ⊢ rv_n,n0
			_some n0 ⊢ o
			_cns { { w o } re } ⊢ re
			$ tv_n ⊢ tv_n,tv_n_0
			_set_q { rv rv_n tv_n_0 } ⊢ { rv rv_n }  
			var_ln y ⊢ v0 
			_set_q { tv tv_n v0 } ⊢ { tv tv_n }
			$ tv_n ⊢ tv_n,tv_n_0 
			var tv_n_0 ⊢ y 
			RP.atm y ⊢ y 
			$ rv_n ⊢ rv_n,n0
			_inc tv_n ⊢ tv_n 
			_inc rv_n ⊢ rv_n 
			∎ { rv_n rv re tv_n tv y n0 }
		§ add_t { tv_n tv ns e y } 
			newvar_ln { tv_n tv y } ⊢ { tv_n tv i0 } 
			_some i0 ⊢ o 
			_cns { { e o } ns } ⊢ ns 
			∎ { tv_n tv ns } 
		§ @.crt_mtc_ptn { lv env0 rv tv tv_n n re p }
				##_emt { n re p } ⊢ { n re p }
				∐ p ⊢ RP.rcd◂l .
					crt_mtc_ptn_lst { lv env0 rv tv tv_n n re l } ⊢ { lv env0 rv tv tv_n n re l y }
					RP.rcd l ⊢ p
					RP.rcd y ⊢ y 
					∎ { lv env0 rv tv tv_n n re p y }
				∐. p ⊢ RP.atm◂a .
				 	$ a ⊢ 
					∐ ast.mtc_reg◂w .
						##_emt { lv w n } ⊢ { lv w n }
						assoc { re w } ⊢ { re w o }
						∐ o ⊢ _none◂{} .
							$ n ⊢ n,n0
							ast.mtc_reg n0 ⊢ a
							ini_reg { lv w n rv re tv_n tv } ⊢ { lv n rv re tv_n tv y } 
							RP.atm a ⊢ p
							∎ { lv env0 rv tv tv_n n re p y }
						∐. .
							» "crt_mtc_ptn 0" _ ⊢ e 
							_emt e ⊢ e 
							∎|
					∐ ast.mtc_wc◂o .
						∐ o ⊢ _none◂{} . 
							$ n ⊢ n,n0
							_some n0 ⊢ o 
							ast.mtc_wc o ⊢ a
							$ tv_n ⊢ tv_n,tv_n_0
							_set_q { rv n tv_n_0 } ⊢ { rv n } 
							$ lv ⊢ lv,lv_0 
							var_l lv_0 ⊢ v0 
							_set_q { tv tv_n v0 } ⊢ { tv tv_n }
							$ tv_n ⊢ tv_n,tv_n_0 
							var tv_n_0 ⊢ y 
							RP.atm y ⊢ y 
							_inc tv_n ⊢ tv_n 
							_inc n ⊢ n 							
							RP.atm a ⊢ p
							∎ { lv env0 rv tv tv_n n re p y }
						∐. . 
							» "crt_mtc_ptn 6" _ ⊢ e 
							_emt e ⊢ e 
							∎|
					∐ ast.mtc_cst◂c . 
						slv_cst { lv env0 tv_n tv c } ⊢ { lv env0 tv_n tv c y } 
						ast.mtc_cst c ⊢ a 
						RP.atm a ⊢ p 
						∎ { lv env0 rv tv tv_n n re p y }
					∐. ast.mtc_agl◂{ cn ap } . 
						crt_mtc_ptn { lv env0 rv tv tv_n n re ap } ⊢ { lv env0 rv tv tv_n n re ap y } 
						$ env0 ⊢ { mmv mev ev m_ns e_ns m_l } 
						_emt cn ⊢ cn 
						slv_ns_e { cn mmv mev ev m_ns e_ns m_l } ⊢ { mmv mev ev m_ns e_ns m_l i_e } 
						_lod_q { ev i_e } ⊢ { ev i_e iv } 
						$ { mmv mev ev m_ns e_ns m_l } ⊢ env0 
						##_emt iv ⊢ iv 
						var iv ⊢ yx 
						RP.atm yx ⊢ yx
						inst { tv_n tv lv yx } ⊢ { tv_n tv lv yx } 
						newvar_l { tv_n tv lv } ⊢ { tv_n tv lv yy }	
						$ yy ⊢ yy,yy0 
						imp { y yy } ⊢ y0 
						RP.atm y0 ⊢ y0 
						unify.f { tv y0 yx } ⊢ tv 
						ast.mtc_agl { i_e ap } ⊢ a
						RP.atm a ⊢ p 
						∎ { lv env0 rv tv tv_n n re p yy0 }
			@.crt_mtc_ptn_lst { lv env0 rv tv tv_n n re l }
				∐ l ⊢ _cns◂{ hd l } .
					crt_mtc_ptn { lv env0 rv tv tv_n n re hd } ⊢ { lv env0 rv tv tv_n n re hd y0 }
					crt_mtc_ptn_lst { lv env0 rv tv tv_n n re l } ⊢ { lv env0 rv tv tv_n n re l y1 }
					_cns { hd l } ⊢ l
					_cns { y0 y1 } ⊢ y
					∎ { lv env0 rv tv tv_n n re l y }
				∐. .
					_nil {} ⊢ l0
					_nil {} ⊢ y 
					∎ { lv env0 rv tv tv_n n re l0 y }
		§ 
			@.crt_dst_ptn { lv rv tv tv_n n re p }
				##_emt { n re p } ⊢ { n re p }
				∐ p ⊢ RP.rcd◂l .
					crt_dst_ptn_lst { lv rv tv tv_n n re l } ⊢ { lv rv tv tv_n n re l y }
					RP.rcd l ⊢ p
					RP.rcd y ⊢ y 
					∎ { lv rv tv tv_n n re p y }
				∐. p ⊢ RP.atm◂a .
					crt_dst { lv rv tv tv_n n re a } ⊢ { lv rv tv tv_n n re a y } 
					RP.atm a ⊢ p
					∎ { lv rv tv tv_n n re p y }
			@.crt_dst { lv rv tv tv_n n re a } 
				 	∐ a ⊢ ast.dst_reg◂w .
						##_emt { re w n } ⊢ { re w n }
						assoc { re w } ⊢ { re w o }
						∐ o ⊢ _none◂{} .
							$ n ⊢ n,n0
							ast.dst_reg n0 ⊢ a
							ini_reg { lv w n rv re tv_n tv } ⊢ { lv n rv re tv_n tv y } 
							∎ { lv rv tv tv_n n re a y }
						∐. .
							» "crt_dst 0" _ ⊢ se 
							_emt se ⊢ se 
							∎|
					∐. a ⊢ ast.wc◂o .
						∐ o ⊢ _none◂{} . 
							$ n ⊢ n,n0
							_some n0 ⊢ o 
							ast.wc o ⊢ a
							$ tv_n ⊢ tv_n,tv_n_0
							_set_q { rv n tv_n_0 } ⊢ { rv n } 
							$ lv ⊢ lv,lv_0 
							var_l lv_0 ⊢ v0 
							_set_q { tv tv_n v0 } ⊢ { tv tv_n }
							$ tv_n ⊢ tv_n,tv_n_0 
							var tv_n_0 ⊢ y 
							RP.atm y ⊢ y 
							_inc tv_n ⊢ tv_n 
							_inc n ⊢ n 							
							∎ { lv rv tv tv_n n re a y }
						∐. . 
							» "crt_mtc_ptn 6" _ ⊢ e 
							_emt e ⊢ e 
							∎|
			@.crt_dst_ptn_lst { lv rv tv tv_n n re l }
				∐ l ⊢ _cns◂{ hd l } .
					crt_dst_ptn { lv rv tv tv_n n re hd } ⊢ { lv rv tv tv_n n re hd y }
					crt_dst_ptn_lst { lv rv tv tv_n n re l } ⊢ { lv rv tv tv_n n re l yl }
					_cns { hd l } ⊢ l
					_cns { y yl } ⊢ y 
					∎ { lv rv tv tv_n n re l y }
				∐. .
					_nil {} ⊢ l0
					_nil {} ⊢ y 
					∎ { lv rv tv tv_n n re l0 y }
			@.crt_dst_lst { lv rv tv tv_n n re l }
				∐ l ⊢ _cns◂{ hd l } .
					crt_dst { lv rv tv tv_n n re hd } ⊢ { lv rv tv tv_n n re hd y }
					crt_dst_lst { lv rv tv tv_n n re l } ⊢ { lv rv tv tv_n n re l yl }
					_cns { hd l } ⊢ l
					_cns { y yl } ⊢ y 
					∎ { lv rv tv tv_n n re l y }
				∐. .
					_nil {} ⊢ l0
					_nil {} ⊢ y 
					∎ { lv rv tv tv_n n re l0 y }
		§ @.csm_src_ptn { lv env0 rv tv tv_n re p }
				∐ p ⊢ RP.rcd◂l .
					csm_src_ptn_lst { lv env0 rv tv tv_n re l } ⊢ { lv env0 rv tv tv_n re l y0 }
					RP.rcd l ⊢ p
					RP.rcd y0 ⊢ y0 
					∎ { lv env0 rv tv tv_n re p y0 }
				∐. p ⊢ RP.atm◂a .
					csm_src { lv env0 rv tv tv_n re a } ⊢ { lv env0 rv tv tv_n re a y0 } 
					RP.atm a ⊢ p 
					∎ { lv env0 rv tv tv_n re p y0 }
			@.csm_src { lv env0 rv tv tv_n re a }
				∐ a ⊢ ast.src_reg◂w .
					assoc { re w } ⊢ { re w o }
					∐ o ⊢ _some◂i .
						_lod_q { rv i } ⊢ { rv i vi } 
						var vi ⊢ y0 
						RP.atm y0 ⊢ y0 
						inst { tv_n tv lv y0 } ⊢ { tv_n tv lv y0 } 
						##mk_reg { w rv_n rv re tv_n tv y0 } ⊢ { rv_n rv re tv_n tv y0 i1 }
						ast.src_reg i ⊢ a
						_none {} ⊢ o
						_cns { { w o } re } ⊢ re
						∎ { lv env0 rv tv tv_n re a y0 }
					∐. .
						» "csm_src 0" _ ⊢ s0 
						_emt { re w } ⊢ { re w }
						_emt s0 ⊢ s0 
						∎|
				∐. a ⊢ ast.im_reg◂c .
					slv_cst { lv env0 tv_n tv c } ⊢ { lv env0 tv_n tv c y0 }
					ast.im_reg c ⊢ a 
					∎ { lv env0 rv tv tv_n re a y0 }
			@.csm_src_ptn_lst { lv env0 rv tv tv_n re l }
				∐ l ⊢ _cns◂{ hd l } .
					csm_src_ptn { lv env0 rv tv tv_n re hd } ⊢ { lv env0 rv tv tv_n re hd y0 }
					csm_src_ptn_lst { lv env0 rv tv tv_n re l } ⊢ { lv env0 rv tv tv_n re l y1 }
					_cns { hd l } ⊢ l
					_cns { y0 y1 } ⊢ y0
					∎ { lv env0 rv tv tv_n re l y0 }
				∐. .
					_nil {} ⊢ l0
					_nil {} ⊢ y0
					∎ { lv env0 rv tv tv_n re l0 y0 }
			@.csm_src_lst { lv env0 rv tv tv_n re l }
				∐ l ⊢ _cns◂{ hd l } .
					csm_src { lv env0 rv tv tv_n re hd } ⊢ { lv env0 rv tv tv_n re hd y0 }
					csm_src_lst { lv env0 rv tv tv_n re l } ⊢ { lv env0 rv tv tv_n re l y1 }
					_cns { hd l } ⊢ l
					_cns { y0 y1 } ⊢ y0 
					∎ { lv env0 rv tv tv_n re l y0 }
				∐. .
					_nil {} ⊢ l0
					_nil {} ⊢ y0 
					∎ { lv env0 rv tv tv_n re l0 y0 }
		§ @.slv_src_ptn { re p }
				∐ p ⊢ RP.rcd◂l .
					slv_src_ptn_lst { re l } ⊢ { re l }
					RP.rcd l ⊢ p
					∎ { re p }
				∐. p ⊢ RP.atm◂a .
					slv_src { re a } ⊢ { re a } 
					RP.atm a ⊢ p 
					∎ { re p }
			@.slv_src { re a }
				∐ a ⊢ ast.src_reg◂w .
					assoc { re w } ⊢ { re w o }
					∐ o ⊢ _some◂i .
						ast.src_reg i ⊢ a
						_none {} ⊢ o
						∎ { re a }
					∐. .
						_emt { re w } ⊢ { re w } 
						∎|
				∐. a ⊢ ast.im_reg◂c .
					ast.im_reg c ⊢ a
					\[
					∎ { re a }
					\]
					» "slv_src 0" _ ⊢ se 
					_emt se ⊢ se 
					∎|
			@.slv_src_ptn_lst { re l }
				∐ l ⊢ _cns◂{ hd l } .
					slv_src_ptn { re hd } ⊢ { re hd }
					slv_src_ptn_lst { re l } ⊢ { re l }
					_cns { hd l } ⊢ l
					∎ { re l }
				∐. .
					_nil {} ⊢ l0
					∎ { re l0 }
		§ @.slv_test_var { lv env0 tv_n tv rv n re v } 
			$ v ⊢ 
			∐ ast.test_var◂w . 
				assoc { re w } ⊢ { re w o } 
				$ o ⊢ 
				∐ _some◂i . 
					_lod_q { rv i } ⊢ { rv i vi } 
					var vi ⊢ yv 
					RP.atm yv ⊢ yv 
					inst { tv_n tv lv yv } ⊢ { tv_n tv lv yv }  
					ast.test_var i ⊢ v 
					∎ { lv env0 tv_n tv rv n re v yv }
				∐. _none◂{} . 
					» "slv_test_var" _ ⊢ se 
					_emt se ⊢ se 
					∎| 
			∐. ast.test_cst◂c . 
				slv_cst { lv env0 tv_n tv c } ⊢ { lv env0 tv_n tv c y }
				ast.test_cst c ⊢ v 
				∎ { lv env0 tv_n tv rv n re v y }
		§ slv_exp_s8 { lv env0 tv_n tv e } 
			$ e ⊢ 
			∐ ast.exp_s8.cst◂c . 
				slv_cst { lv env0 tv_n tv c } ⊢ { lv env0 tv_n tv c y } 
				ast.exp_s8.cst c ⊢ e 
				_none {} ⊢ o 
				∎ { lv env0 tv_n tv e o }
			∐ ast.exp_s8.s8◂s . 
				ast.exp_s8.s8 s ⊢ e 
				t_axm.s8 {} ⊢ y 
				_none {} ⊢ o 
				∎ { lv env0 tv_n tv e o } 
			∐ ast.exp_s8.idx◂{ p i } . 
				$ i ⊢ i,i0 
				$ p ⊢ 
				∐ ast.exp_s8.s◂{} . 
					ast.exp_s8.s {} ⊢ p 
					ast.exp_s8.idx { p i } ⊢ e 
					t_axm.s8 {} ⊢ y 
					_some { i0 y } ⊢ o 
					∎ { lv env0 tv_n tv e o }
				∐ ast.exp_s8.d◂{} . 
					ast.exp_s8.d {} ⊢ p 
					ast.exp_s8.idx { p i } ⊢ e 
					t_axm.r64 {} ⊢ y
					_some { i0 y } ⊢ o 					 
					∎ { lv env0 tv_n tv e o }
				∐ ast.exp_s8.x◂{} .
					ast.exp_s8.x {} ⊢ p 
					ast.exp_s8.idx { p i } ⊢ e 
					t_axm.r64 {} ⊢ y 
					_some { i0 y } ⊢ o 
					∎ { lv env0 tv_n tv e o } 
				∐. ast.exp_s8.p◂{} .
					» "slv_exp_s8_fmt 0" _ ⊢ se 
					_emt se ⊢ se 
					∎|  
			∐. ast.exp_s8.for◂{ i p } . 
				$ i ⊢ i,i0 
				ast.exp_s8.for { i p } ⊢ e
				t_axm.r64 {} ⊢ y 
				_some { i0 y } ⊢ o 
				∎ { lv env0 tv_n tv e o } 
		§§ slv_exp_s8 
			§ 
				@.f { lv env0 n rv re tv_n tv ss ds el } 
					_inc lv ⊢ lv 
					» 0r _ ⊢ i
					f0 { lv env0 n rv re tv_n tv ss ds i } ⊢ { lv env0 n rv re tv_n tv ss ds a i ys }
					f1 { lv env0 tv_n tv el a } ⊢ { lv env0 tv_n tv el a }
					_dec lv ⊢ lv 
					gen_lst { tv_n tv lv ys } ⊢ { tv_n tv lv ys }
					∎ { lv env0 n rv re tv_n tv ss ds el }
				@.f0 { lv env0 n rv re tv_n tv ss ds i } 
					∐ ss ⊢ _cns◂{ s ss }; ds ⊢ _cns◂{ d ds } . 
						csm_src { lv env0 rv tv tv_n re s } ⊢ { lv env0 rv tv tv_n re s ys }
						crt_dst { lv rv tv tv_n n re d } ⊢ { lv rv tv tv_n n re d yd }
						$ yd ⊢ yd,yd0 
						unify.f { tv ys yd0 } ⊢ tv
						_inc i ⊢ i 
						f0 { lv env0 n rv re tv_n tv ss ds i } ⊢ { lv env0 n rv re tv_n tv ss ds a i ys }
						_dec i ⊢ i 
						$ yd ⊢ yd,yd0 
						_set_q { a i yd } ⊢ { a i } 
						_cns { s ss } ⊢ ss 
						_cns { d ds } ⊢ ds 
						_cns { yd0 ys } ⊢ ys 
						∎ { lv env0 n rv re tv_n tv ss ds a i ys } 
					∐ ss ⊢ _nil◂{}; ds ⊢ _cns◂{ d ds }; ds ⊢ _nil◂{} . 
						crt_dst { lv rv tv tv_n n re d } ⊢ { lv rv tv tv_n n re d yd }						
						t_axm.s8 {} ⊢ yy 
						$ yd ⊢ yd,yd0 
						unify.f { tv yy yd } ⊢ tv  
						_mk_arr i ⊢ { i a } 
						_nil {} ⊢ ys 
						_cns { yd0 ys } ⊢ ys 
						_nil {} ⊢ ss 
						_nil {} ⊢ ds 
						_cns { d ds } ⊢ ds
						∎ { lv env0 n rv re tv_n tv ss ds a i ys }
					∐. . 
						» "slv_exp_s8.f0 0" _ ⊢ se 
						_emt se ⊢ se
						∎|  
			@.f1 { lv env0 tv_n tv el a } 
				$ el ⊢ 
				∐ _cns◂{ hd el } .
					slv_exp_s8 { lv env0 tv_n tv hd } ⊢ { lv env0 tv_n tv e o } 
					$ o ⊢ 
					∐ _some◂{ i y } . 
						_lod_q { a i } ⊢ { a i yd }
						unify.f { tv y yd } ⊢ tv
						f1 { lv env0 tv_n tv el a } ⊢ { lv env0 tv_n tv el a }
						_cns { e el } ⊢ el 
						∎ { lv env0 tv_n tv el a }
					∐. _none◂{} . 
						f1 { lv env0 tv_n tv el a } ⊢ { lv env0 tv_n tv el a }
						_cns { e el } ⊢ el 
						∎ { lv env0 tv_n tv el a }
					∐. _nil◂{} . 
						_nil {} ⊢ el 
						∎ { lv env0 tv_n tv el a }
			∎∎ 
		§ 
			@.slv_r { lv env0 rv tv tv_n n re lc }
			##» "enter slv_r" _  ⊢ sd0 
			##_emt sd0 ⊢ sd0 
			##_emt { lv n } ⊢ { lv n }
			$ lc ⊢
			∐ ast.jmp◂{ en x } . 
				$ env0 ⊢ { mmv mev ev m_ns e_ns m_l } 
				slv_ns_e { en mmv mev ev m_ns e_ns m_l } ⊢ { mmv mev ev m_ns e_ns m_l i_e } 
				_lod_q { ev i_e } ⊢ { ev i_e iv } 
				$ { mmv mev ev m_ns e_ns m_l } ⊢ env0 
				var iv ⊢ yv 
				RP.atm yv ⊢ yv 
				_inc lv ⊢ lv 
				inst { tv_n tv lv yv } ⊢ { tv_n tv lv yv } 
				csm_src_ptn { lv env0 rv tv tv_n re x } ⊢ { lv env0 rv tv tv_n re x y0 } 
				newvar_l { tv_n tv lv } ⊢ { tv_n tv lv yy } 
				$ yy ⊢ yy,yy0 
				imp { y0 yy } ⊢ y_f
				RP.atm y_f ⊢ y_f 
				unify.f { tv y_f yv } ⊢ tv 
				_dec lv ⊢ lv 
				gen { tv_n tv lv yy0 } ⊢ { tv_n tv lv yy0 } 
				ast.jmp { i_e x } ⊢ lc 
				∎ { lv env0 rv tv tv_n n re lc yy0 } 
			∐ ast.app_jmp◂{ f x } . 
				_inc lv ⊢ lv 
				csm_src { lv env0 rv tv tv_n re f } ⊢ { lv env0 rv tv tv_n re f ys } 
				csm_src_ptn { lv env0 rv tv tv_n re x } ⊢ { lv env0 rv tv tv_n re x y0 } 
				newvar_l { tv_n tv lv } ⊢ { tv_n tv lv yy } 
				_dec lv ⊢ lv 
				$ yy ⊢ yy,yy0 
				imp { y0 yy } ⊢ y_f
				RP.atm y_f ⊢ y_f 
				unify.f { tv y_f ys } ⊢ tv 
				gen { tv_n tv lv yy0 } ⊢ { tv_n tv lv yy0 }
				ast.app_jmp { f x } ⊢ lc 
				∎ { lv env0 rv tv tv_n n re lc yy0 } 
			∐ ast.seq◂{ ll lc } .
				$ ll ⊢
				∐ ast.op_name◂{ o s d } .
					##» "slv_r op_name" _ ⊢ sec0 
					##_emt sec0 ⊢ sec0 
					##_emt o ⊢ o
					##_emt { o s d } ⊢ { o s d } 
					$ env0 ⊢ { mmv mev ev m_ns e_ns m_l } 
					slv_ns_e { o mmv mev ev m_ns e_ns m_l } ⊢ { mmv mev ev m_ns e_ns m_l i_e } 
					_lod_q { ev i_e } ⊢ { ev i_e iv } 
					$ { mmv mev ev m_ns e_ns m_l } ⊢ env0 
					##_lod_q { tv iv } ⊢ { tv iv yt }  
					##_emt { i_e iv yt } ⊢ { i_e iv yt } 
					var iv ⊢ yo 
					RP.atm yo ⊢ yo 
					##$ yo ⊢ yo,yo0 
					##pnt_type_k { tv yo0 } ⊢ { tv syo } 
					##_emt i_e ⊢ i_e 
					##_emt syox ⊢ syox 
					_inc lv ⊢ lv 
					inst { tv_n tv lv yo } ⊢ { tv_n tv lv yo } 
					csm_src_ptn { lv env0 rv tv tv_n re s } ⊢ { lv env0 rv tv tv_n re s y_s }
					crt_dst_ptn { lv rv tv tv_n n re d } ⊢ { lv rv tv tv_n n re d y_d }
					imp { y_s y_d } ⊢ y_s_d 
					RP.atm y_s_d ⊢ y_s_d 
					$ yo ⊢ yo,yo0 
					unify.f { tv yo0 y_s_d } ⊢ tv 
					_dec lv ⊢ lv 
					gen { tv_n tv lv yo } ⊢ { tv_n tv lv yo } 
					ast.op_name { i_e s d } ⊢ ll 
					pnt_type_k { tv yo } ⊢ { tv syo } 
					_emt syo ⊢ syo 
					slv_r { lv env0 rv tv tv_n n re lc } ⊢ { lv env0 rv tv tv_n n re lc yr }
					ast.seq { ll lc } ⊢ lc
					∎ { lv env0 rv tv tv_n n re lc yr }
				∐ ast.op_app◂{ f x y } .
					_inc lv ⊢ lv 
					csm_src { lv env0 rv tv tv_n re f } ⊢ { lv env0 rv tv tv_n re f y0 } 
					csm_src_ptn { lv env0 rv tv tv_n re x } ⊢ { lv env0 rv tv tv_n re x y_s } 
					crt_dst_ptn { lv rv tv tv_n n re y } ⊢ { lv rv tv tv_n n re y y_d } 
					imp { y_s y_d } ⊢ yx 
					RP.atm yx ⊢ yx 
					$ y0 ⊢ y0,y0_0 
					unify.f { tv y0 yx } ⊢ tv 
					_dec lv ⊢ lv 
					gen { tv_n tv lv y0_0 } ⊢ { tv_n tv lv y0_0 } 
					ast.op_app { f x y } ⊢ ll 
					slv_r { lv env0 rv tv tv_n n re lc } ⊢ { lv env0 rv tv tv_n n re lc yr }
					ast.seq { ll lc } ⊢ lc 
					∎ { lv env0 rv tv tv_n n re lc yr } 
				∐ ast.op_exp_cst◂{ c s d } .
					» "slv_r op_exp_cst" _ ⊢ sec0 
					_emt c ⊢ c 
					_emt sec0 ⊢ sec0
					_inc lv ⊢ lv 
					slv_cst { lv env0 tv_n tv c } ⊢ { lv env0 tv_n tv c y } 
					##_emt sec0 ⊢ sec0
					csm_src_ptn { lv env0 rv tv tv_n re s } ⊢ { lv env0 rv tv tv_n re s y_s } 
					crt_dst_ptn { lv rv tv tv_n n re d } ⊢ { lv rv tv tv_n n re d y_d } 
					##_emt sec0 ⊢ sec0
					_dec lv ⊢ lv 
					$ y ⊢ y,y0 
					unify.f { tv y0 y_d } ⊢ tv 
					##_emt sec0 ⊢ sec0
					gen { tv_n tv lv y } ⊢ { tv_n tv lv y } 
					gen { tv_n tv lv y_s } ⊢ { tv_n tv lv y_s } 
					ast.op_exp_cst { c s d } ⊢ ll 
					slv_r { lv env0 rv tv tv_n n re lc } ⊢ { lv env0 rv tv tv_n n re lc yr }
					ast.seq { ll lc } ⊢ lc 
					∎ { lv env0 rv tv tv_n n re lc yr }
				∐. ast.op_exp_s8◂{ pl ss ds } .
					##» "op_exp_s8 d0" _ ⊢ sd2 
					##_emt sd2 ⊢ sd2 
					slv_exp_s8.f { lv env0 n rv re tv_n tv ss ds pl } ⊢ { lv env0 n rv re tv_n tv ss ds pl }
					ast.op_exp_s8 { pl ss ds } ⊢ ll 
					slv_r { lv env0 rv tv tv_n n re lc } ⊢ { lv env0 rv tv tv_n n re lc yr } 
					ast.seq { ll lc } ⊢ lc 
					∎ { lv env0 rv tv tv_n n re lc yr }
			∐ ast.mtc◂lm .
				slv_lc_mtc { lv env0 rv tv tv_n n re lm } ⊢ { lv env0 rv tv tv_n n re lm yr }
				ast.mtc lm ⊢ lc 
				∎ { lv env0 rv tv tv_n n re lc yr } 
			∐ ast.op_id◂{ sp ll } . 
				$ ll ⊢ 
				∐ ast.id_mtc◂ilm . 
					_inc lv ⊢ lv 
					csm_src_ptn { lv env0 rv tv tv_n re sp } ⊢ { lv env0 rv tv tv_n re sp y0 } 
					_dec lv ⊢ lv 
					$ y0 ⊢ y0,y0_0 
					##» "op_id d0" _ ⊢ sd4 
					##_emt sd4 ⊢ sd4 
					slv_lc_id_mtc_mp { y0 lv env0 rv tv tv_n n re ilm } ⊢ { lv env0 rv tv tv_n n ilm } 
					gen { tv_n tv lv y0_0 } ⊢ { tv_n tv lv y0_0 } 
					slv_lc_id_mtc { lv env0 rv tv tv_n n ilm } ⊢ { lv env0 rv tv tv_n n ilm yr } 
					ast.id_mtc ilm ⊢ ll 
					ast.op_id { sp ll } ⊢ lc 
					_nil {} ⊢ re 
					∎ { lv env0 rv tv tv_n n re lc yr } 
				∐. ast.id_line◂{ dl lc } . 
					_inc lv ⊢ lv 
					csm_src_ptn { lv env0 rv tv tv_n re sp } ⊢ { lv env0 rv tv tv_n re sp y_s } 
					crt_dst_ptn_lst { lv rv tv tv_n n re dl } ⊢ { lv rv tv tv_n n re dl y_d }
					##$ y_s ⊢ y_s,y_s0 
					unifys { tv y_s y_d } ⊢ { tv y_s } 
					_dec lv ⊢ lv 
					gen { tv_n tv lv y_s } ⊢ { tv_n tv lv y_s } 
					slv_r { lv env0 rv tv tv_n n re lc } ⊢ { lv env0 rv tv tv_n n re lc yr } 
					ast.id_line { dl lc } ⊢ ll
					ast.op_id { sp ll } ⊢ lc 
					∎ { lv env0 rv tv tv_n n re lc yr }
			∐ ast.ret◂s .
				$ s ⊢
				∐ _some◂s . 
					##» "slv_r ast.ret 0" _ ⊢ ser0 
					##_emt ser0 ⊢ ser0 
					_inc lv ⊢ lv 
					csm_src_ptn { lv env0 rv tv tv_n re s } ⊢ { lv env0 rv tv tv_n re s y0 } 
					_dec lv ⊢ lv 
					gen { tv_n tv lv y0 } ⊢ { tv_n tv lv y0 } 
					_some s ⊢ s 
					ast.ret s ⊢ lc 
					∎ { lv env0 rv tv tv_n n re lc y0 } 			
				∐. _none◂{} . 
					_none {} ⊢ s 
					ast.ret s ⊢ lc 
					_nil {} ⊢ l0 
					RP.rcd l0 ⊢ y0 
					∎ { lv env0 rv tv tv_n n re lc y0 } 								
			∐. ast.exn◂ne .
				ast.exn ne ⊢ lc 
				newvar_q { tv_n tv lv } ⊢ { tv_n tv lv yq }
				∎ { lv env0 rv tv tv_n n re lc yq }   			
		@.slv_lc_mtc { lv env0 rv tv tv_n n re lm } 
			$ lm ⊢ 
			∐ p_cns◂{ { tl me } lm } .  
				$ re ⊢ re,re0 
				slv_mtc_line { lv env0 rv tv tv_n n re tl } ⊢ { lv env0 rv tv tv_n n re tl } 
				slv_mtc_etr { lv env0 rv tv tv_n n re me } ⊢ { lv env0 rv tv tv_n n re me yr1 } 
				slv_lc_mtc { lv env0 rv tv tv_n n re0 lm } ⊢ { lv env0 rv tv tv_n n re0 lm yr0 } 
				_inc lv ⊢ lv 
				inst { tv_n tv lv yr0 } ⊢ { tv_n tv lv yr0 } 
				inst { tv_n tv lv yr1 } ⊢ { tv_n tv lv yr1 }
				$ yr0 ⊢ yr0,yr0_0 
				unify.f { tv yr0 yr1 } ⊢ tv 
				_dec lv ⊢ lv 
				gen { tv_n tv lv yr0_0 } ⊢ { tv_n tv lv yr0_0 } 
				p_cns { { tl me } lm } ⊢ lm 
				∎ { lv env0 rv tv tv_n n re lm yr0_0 }
			∐. p_end◂{ tl me } .
				slv_mtc_line { lv env0 rv tv tv_n n re tl } ⊢ { lv env0 rv tv tv_n n re tl } 
				slv_mtc_etr { lv env0 rv tv tv_n n re me } ⊢ { lv env0 rv tv tv_n n re me yr0 } 
				p_end { tl me } ⊢ lm 
				∎ { lv env0 rv tv tv_n n re lm yr0 }
		@.slv_mtc_etr { lv env0 rv tv tv_n n re me } 
			$ me ⊢ 
			∐ ast.mtc_rmf◂lm0 .
				slv_lc_mtc { lv env0 rv tv tv_n n re lm0 } ⊢ { lv env0 rv tv tv_n n re lm0 yr }  
				ast.mtc_rmf lm0 ⊢ me 
				∎ { lv env0 rv tv tv_n n re me yr } 
			∐ ast.mtc_id_rmf◂{ sp0 ilm0 } .  
				_inc lv ⊢ lv 
				csm_src_ptn { lv env0 rv tv tv_n re sp0 } ⊢ { lv env0 rv tv tv_n re sp0 y0 } 
				_dec lv ⊢ lv 
				$ y0 ⊢ y0,y0_0 
				slv_lc_id_mtc_mp { y0 lv env0 rv tv tv_n n re ilm0 } ⊢ { lv env0 rv tv tv_n n ilm0 } 
				gen { tv_n tv lv y0_0 } ⊢ { tv_n tv lv y0_0 } 
				slv_lc_id_mtc { lv env0 rv tv tv_n n ilm0 } ⊢ { lv env0 rv tv tv_n n ilm0 yr } 
				ast.mtc_id_rmf { sp0 ilm0 } ⊢ me  
				_nil {} ⊢ re
				∎ { lv env0 rv tv tv_n n re me yr }  
			∐. ast.mtc_code◂lc0 . 
				slv_r { lv env0 rv tv tv_n n re lc0 } ⊢ { lv env0 rv tv tv_n n re lc0 yr } 
				ast.mtc_code lc0 ⊢ me 
				∎ { lv env0 rv tv tv_n n re me yr } 
		@.slv_mtc_line { lv env0 rv tv tv_n n re tl } 
			##» "slv_mtc_line d0" _ ⊢ sd0 
			##_emt sd0 ⊢ sd0 
			$ tl ⊢ 
			∐ _cns◂{ t tl } . 
				$ t ⊢ 
				∐ ast.mtc_id◂{ sp mp } . 
					_inc lv ⊢ lv 
					csm_src_ptn { lv env0 rv tv tv_n re sp } ⊢ { lv env0 rv tv tv_n re sp y0 } 
					crt_mtc_ptn { lv env0 rv tv tv_n n re mp } ⊢ { lv env0 rv tv tv_n n re mp y }
					_dec lv ⊢ lv 
					$ y0 ⊢ y0,y0_0 
					unify.f { tv y0_0 y } ⊢ tv 
					gen { tv_n tv lv y0 } ⊢ { tv_n tv lv y0 } 
					ast.mtc_id { sp mp } ⊢ t 
					$ y0 ⊢ y0,y00 
					pnt_type_k { tv y00 } ⊢ { tv s00 } 
					##_emt sd0 ⊢ sd0 
					##_emt s00 ⊢ s00 
					slv_mtc_line { lv env0 rv tv tv_n n re tl } ⊢ { lv env0 rv tv tv_n n re tl } 
					_cns { t tl } ⊢ tl 
					∎ { lv env0 rv tv tv_n n re tl } 
				∐ ast.mtc_cmp_test◂{ v0 v1 } .  
					_inc lv ⊢ lv 
					slv_test_var { lv env0 tv_n tv rv n re v0 } ⊢ { lv env0 tv_n tv rv n re v0 y0 } 
					slv_test_var { lv env0 tv_n tv rv n re v1 } ⊢ { lv env0 tv_n tv rv n re v1 y1 } 
					_dec lv ⊢ lv 
					$ y0 ⊢ y0,y0_0 
					unify.f { tv y0_0 y1 } ⊢ tv  
					gen { tv_n tv lv y0 } ⊢ { tv_n tv lv y0 } 
					ast.mtc_cmp_test { v0 v1 } ⊢ t 
					slv_mtc_line { lv env0 rv tv tv_n n re tl } ⊢ { lv env0 rv tv tv_n n re tl } 
					_cns { t tl } ⊢ tl 
					∎ { lv env0 rv tv tv_n n re tl } 
				∐. ast.mtc_test◂{ v0 v1 } .  
					_inc lv ⊢ lv 
					slv_test_var { lv env0 tv_n tv rv n re v0 } ⊢ { lv env0 tv_n tv rv n re v0 y0 } 
					slv_test_var { lv env0 tv_n tv rv n re v1 } ⊢ { lv env0 tv_n tv rv n re v1 y1 } 
					_dec lv ⊢ lv 
					$ y0 ⊢ y0,y0_0 
					unify.f { tv y0_0 y1 } ⊢ tv  
					gen { tv_n tv lv y0 } ⊢ { tv_n tv lv y0 } 
					ast.mtc_test { v0 v1 } ⊢ t 
					slv_mtc_line { lv env0 rv tv tv_n n re tl } ⊢ { lv env0 rv tv tv_n n re tl } 
					_cns { t tl } ⊢ tl 
					∎ { lv env0 rv tv tv_n n re tl } 
			∐. _nil◂{} . 
				_nil {} ⊢ tl 
				∎ { lv env0 rv tv tv_n n re tl }
		@.slv_lc_id_mtc_mp { y0 lv env0 rv tv tv_n n re ilm } 
			##» "slv_id_mtc_mp d0" _ ⊢ sd0 
			##_emt sd0 ⊢ sd0 
			$ ilm ⊢ 
			∐ p_cns◂{ { mp tl me } ilm } .
				$ re ⊢ re,re0 
				$ y0 ⊢ y0,y0_0 
				slv_lc_id_mtc_mp { y0_0 lv env0 rv tv tv_n n re0 ilm } ⊢ { lv env0 rv tv tv_n n ilm } 
				_inc lv ⊢ lv 
				crt_mtc_ptn { lv env0 rv tv tv_n n re mp } ⊢ { lv env0 rv tv tv_n n re mp y } 
				_dec lv ⊢ lv  
				unify.f { tv y0 y } ⊢ tv
				p_cns { { mp re tl me } ilm } ⊢ ilm 
				∎ { lv env0 rv tv tv_n n ilm }
			∐. p_end◂{ mp tl me } .
				_inc lv ⊢ lv 
				crt_mtc_ptn { lv env0 rv tv tv_n n re mp } ⊢ { lv env0 rv tv tv_n n re mp y } 
				_dec lv ⊢ lv  
				unify.f { tv y0 y } ⊢ tv 
				p_end { mp re tl me } ⊢ ilm 
				∎ { lv env0 rv tv tv_n n ilm }
		@.slv_lc_id_mtc { lv env0 rv tv tv_n n ilm } 
			$ ilm ⊢ 
			∐ p_cns◂{ { mp re tl me } ilm } .  
				slv_mtc_line { lv env0 rv tv tv_n n re tl } ⊢ { lv env0 rv tv tv_n n re tl } 
				slv_mtc_etr { lv env0 rv tv tv_n n re me } ⊢ { lv env0 rv tv tv_n n re me yr1 } 
				slv_lc_id_mtc { lv env0 rv tv tv_n n ilm } ⊢ { lv env0 rv tv tv_n n ilm yr0 } 
				_inc lv ⊢ lv 
				inst { tv_n tv lv yr0 } ⊢ { tv_n tv lv yr0 } 
				inst { tv_n tv lv yr1 } ⊢ { tv_n tv lv yr1 }
				$ yr0 ⊢ yr0,yr0_0 
				unify.f { tv yr0 yr1 } ⊢ tv 
				_dec lv ⊢ lv 
				gen { tv_n tv lv yr0_0 } ⊢ { tv_n tv lv yr0_0 } 
				p_cns { { mp tl me } ilm } ⊢ ilm 
				∎ { lv env0 rv tv tv_n n ilm yr0_0 }
			∐. p_end◂{ mp re tl me } .
				slv_mtc_line { lv env0 rv tv tv_n n re tl } ⊢ { lv env0 rv tv tv_n n re tl } 
				slv_mtc_etr { lv env0 rv tv tv_n n re me } ⊢ { lv env0 rv tv tv_n n re me yr0 } 
				p_end { mp tl me } ⊢ ilm 
				∎ { lv env0 rv tv tv_n n ilm yr0 }
		§ add_e { tv_n tv evv ev ev_n ns e k y } 
			newvar_ln { tv_n tv y } ⊢ { tv_n tv i0 } 
			_set_q { ev ev_n i0 } ⊢ { ev ev_n }
			_set_q { evv ev_n k } ⊢ { evv ev_n } 
			$ ev_n ⊢ ev_n,n0 
			_inc ev_n ⊢ ev_n 
			_some n0 ⊢ o 
			_cns { { e o } ns } ⊢ ns 
			∎ { tv_n tv evv ev ev_n ns } 
		\[
		§§ slv_r 
			§ 
				@.slv_r { lv env0 rv tv tv_n n re lc }
					$ lc ⊢
					∐ ast.jmp◂{ i_e x } . 
						##$ env0 ⊢ { mmv mev ev m_ns e_ns m_l } 
						##slv_ns_e { en mmv mev ev m_ns e_ns m_l } ⊢ { mmv mev ev m_ns e_ns m_l i_e } 
						_lod_q { ev i_e } ⊢ { ev i_e iv } 
						$ { mmv mev ev m_ns e_ns m_l } ⊢ env0 
						var iv ⊢ yv 
						RP.atm yv ⊢ yv 
						_inc lv ⊢ lv 
						inst { tv_n tv lv yv } ⊢ { tv_n tv lv yv } 
						csm_src_ptn { lv env0 rv tv tv_n re x } ⊢ { lv env0 rv tv tv_n re x y0 } 
						newvar_l { tv_n tv lv } ⊢ { tv_n tv lv yy } 
						$ yy ⊢ yy,yy0 
						imp { y0 yy } ⊢ y_f
						RP.atm y_f ⊢ y_f 
						unify.f { tv y_f yv } ⊢ tv 
						_dec lv ⊢ lv 
						gen { tv_n tv lv yy0 } ⊢ { tv_n tv lv yy0 } 
						ast.jmp { i_e x } ⊢ lc 
						∎ { lv env0 rv tv tv_n n re lc yy0 } 
					∐ ast.app_jmp◂{ f x } . 
						_inc lv ⊢ lv 
						csm_src { lv env0 rv tv tv_n re f } ⊢ { lv env0 rv tv tv_n re f ys } 
						csm_src_ptn { lv env0 rv tv tv_n re x } ⊢ { lv env0 rv tv tv_n re x y0 } 
						newvar_l { tv_n tv lv } ⊢ { tv_n tv lv yy } 
						_dec lv ⊢ lv 
						$ yy ⊢ yy,yy0 
						imp { y0 yy } ⊢ y_f
						RP.atm y_f ⊢ y_f 
						unify.f { tv y_f ys } ⊢ tv 
						gen { tv_n tv lv yy0 } ⊢ { tv_n tv lv yy0 }
						ast.app_jmp { f x } ⊢ lc 
						∎ { lv env0 rv tv tv_n n re lc yy0 } 
					∐ ast.seq◂{ ll lc } .
						$ ll ⊢
						∐ ast.op_name◂{ i_e s d } .
							$ env0 ⊢ { mmv mev ev m_ns e_ns m_l } 
							##slv_ns_e { o mmv mev ev m_ns e_ns m_l } ⊢ { mmv mev ev m_ns e_ns m_l i_e } 
							_lod_q { ev i_e } ⊢ { ev i_e iv } 
							$ { mmv mev ev m_ns e_ns m_l } ⊢ env0 
							var iv ⊢ yo 
							RP.atm yo ⊢ yo 
							_inc lv ⊢ lv 
							inst { tv_n tv lv yo } ⊢ { tv_n tv lv yo } 
							csm_src_ptn { lv env0 rv tv tv_n re s } ⊢ { lv env0 rv tv tv_n re s y_s }
							crt_dst_ptn { lv rv tv tv_n n re d } ⊢ { lv rv tv tv_n n re d y_d }
							imp { y_s y_d } ⊢ y_s_d 
							RP.atm y_s_d ⊢ y_s_d 
							$ yo ⊢ yo,yo0 
							unify.f { tv yo0 y_s_d } ⊢ tv 
							_dec lv ⊢ lv 
							gen { tv_n tv lv yo } ⊢ { tv_n tv lv yo } 
							ast.op_name { i_e s d } ⊢ ll 
							pnt_type_k { tv yo } ⊢ { tv syo } 
							slv_r { lv env0 rv tv tv_n n re lc } ⊢ { lv env0 rv tv tv_n n re lc yr }
							ast.seq { ll lc } ⊢ lc
							∎ { lv env0 rv tv tv_n n re lc yr }
						∐ ast.op_app◂{ f x y } .
							_inc lv ⊢ lv 
							csm_src { lv env0 rv tv tv_n re f } ⊢ { lv env0 rv tv tv_n re f y0 } 
							csm_src_ptn { lv env0 rv tv tv_n re x } ⊢ { lv env0 rv tv tv_n re x y_s } 
							crt_dst_ptn { lv rv tv tv_n n re y } ⊢ { lv rv tv tv_n n re y y_d } 
							imp { y_s y_d } ⊢ yx 
							RP.atm yx ⊢ yx 
							$ y0 ⊢ y0,y0_0 
							unify.f { tv y0 yx } ⊢ tv 
							_dec lv ⊢ lv 
							gen { tv_n tv lv y0_0 } ⊢ { tv_n tv lv y0_0 } 
							ast.op_app { f x y } ⊢ ll 
							slv_r { lv env0 rv tv tv_n n re lc } ⊢ { lv env0 rv tv tv_n n re lc yr }
							ast.seq { ll lc } ⊢ lc 
							∎ { lv env0 rv tv tv_n n re lc yr } 
						∐ ast.op_exp_cst◂{ c s d } .
							» "slv_r op_exp_cst" _ ⊢ sec0 
							_emt c ⊢ c 
							_emt sec0 ⊢ sec0
							_inc lv ⊢ lv 
							slv_cst { lv env0 tv_n tv c } ⊢ { lv env0 tv_n tv c y } 
							##_emt sec0 ⊢ sec0
							csm_src_ptn { lv env0 rv tv tv_n re s } ⊢ { lv env0 rv tv tv_n re s y_s } 
							crt_dst_ptn { lv rv tv tv_n n re d } ⊢ { lv rv tv tv_n n re d y_d } 
							##_emt sec0 ⊢ sec0
							_dec lv ⊢ lv 
							$ y ⊢ y,y0 
							unify.f { tv y0 y_d } ⊢ tv 
							##_emt sec0 ⊢ sec0
							gen { tv_n tv lv y } ⊢ { tv_n tv lv y } 
							gen { tv_n tv lv y_s } ⊢ { tv_n tv lv y_s } 
							ast.op_exp_cst { c s d } ⊢ ll 
							slv_r { lv env0 rv tv tv_n n re lc } ⊢ { lv env0 rv tv tv_n n re lc yr }
							ast.seq { ll lc } ⊢ lc 
							∎ { lv env0 rv tv tv_n n re lc yr }
						∐. ast.op_exp_s8◂{ pl ss ds } .
							slv_exp_s8.f { lv env0 n rv re tv_n tv ss ds pl } ⊢ { lv env0 n rv re tv_n tv ss ds pl }
							ast.op_exp_s8 { pl ss ds } ⊢ ll 
							slv_r { lv env0 rv tv tv_n n re lc } ⊢ { lv env0 rv tv tv_n n re lc yr } 
							ast.seq { ll lc } ⊢ lc 
							∎ { lv env0 rv tv tv_n n re lc yr }
					∐ ast.mtc◂lm .
						slv_lc_mtc { lv env0 rv tv tv_n n re lm } ⊢ { lv env0 rv tv tv_n n re lm yr }
						ast.mtc lm ⊢ lc 
						∎ { lv env0 rv tv tv_n n re lc yr } 
					∐ ast.op_id◂{ sp ll } . 
				$ ll ⊢ 
				∐ ast.id_mtc◂ilm . 
					_inc lv ⊢ lv 
					csm_src_ptn { lv env0 rv tv tv_n re sp } ⊢ { lv env0 rv tv tv_n re sp y0 } 
					_dec lv ⊢ lv 
					$ y0 ⊢ y0,y0_0 
					##» "op_id d0" _ ⊢ sd4 
					##_emt sd4 ⊢ sd4 
					slv_lc_id_mtc_mp { y0 lv env0 rv tv tv_n n re ilm } ⊢ { lv env0 rv tv tv_n n ilm } 
					gen { tv_n tv lv y0_0 } ⊢ { tv_n tv lv y0_0 } 
					slv_lc_id_mtc { lv env0 rv tv tv_n n ilm } ⊢ { lv env0 rv tv tv_n n ilm yr } 
					ast.id_mtc ilm ⊢ ll 
					ast.op_id { sp ll } ⊢ lc 
					_nil {} ⊢ re 
					∎ { lv env0 rv tv tv_n n re lc yr } 
				∐. ast.id_line◂{ dl lc } . 
					_inc lv ⊢ lv 
					csm_src_ptn { lv env0 rv tv tv_n re sp } ⊢ { lv env0 rv tv tv_n re sp y_s } 
					crt_dst_ptn_lst { lv rv tv tv_n n re dl } ⊢ { lv rv tv tv_n n re dl y_d }
					##$ y_s ⊢ y_s,y_s0 
					unifys { tv y_s y_d } ⊢ { tv y_s } 
					_dec lv ⊢ lv 
					gen { tv_n tv lv y_s } ⊢ { tv_n tv lv y_s } 
					slv_r { lv env0 rv tv tv_n n re lc } ⊢ { lv env0 rv tv tv_n n re lc yr } 
					ast.id_line { dl lc } ⊢ ll
					ast.op_id { sp ll } ⊢ lc 
					∎ { lv env0 rv tv tv_n n re lc yr }
			∐ ast.ret◂s .
				$ s ⊢
				∐ _some◂s . 
					##» "slv_r ast.ret 0" _ ⊢ ser0 
					##_emt ser0 ⊢ ser0 
					_inc lv ⊢ lv 
					csm_src_ptn { lv env0 rv tv tv_n re s } ⊢ { lv env0 rv tv tv_n re s y0 } 
					_dec lv ⊢ lv 
					gen { tv_n tv lv y0 } ⊢ { tv_n tv lv y0 } 
					_some s ⊢ s 
					ast.ret s ⊢ lc 
					∎ { lv env0 rv tv tv_n n re lc y0 } 			
				∐. _none◂{} . 
					_none {} ⊢ s 
					ast.ret s ⊢ lc 
					_nil {} ⊢ l0 
					RP.rcd l0 ⊢ y0 
					∎ { lv env0 rv tv tv_n n re lc y0 } 								
			∐. ast.exn◂ne .
				ast.exn ne ⊢ lc 
				newvar_q { tv_n tv lv } ⊢ { tv_n tv lv yq }
				∎ { lv env0 rv tv tv_n n re lc yq }   			
		@.slv_lc_mtc { lv env0 rv tv tv_n n re lm } 
			$ lm ⊢ 
			∐ p_cns◂{ { tl me } lm } .  
				$ re ⊢ re,re0 
				slv_mtc_line { lv env0 rv tv tv_n n re tl } ⊢ { lv env0 rv tv tv_n n re tl } 
				slv_mtc_etr { lv env0 rv tv tv_n n re me } ⊢ { lv env0 rv tv tv_n n re me yr1 } 
				slv_lc_mtc { lv env0 rv tv tv_n n re0 lm } ⊢ { lv env0 rv tv tv_n n re0 lm yr0 } 
				_inc lv ⊢ lv 
				inst { tv_n tv lv yr0 } ⊢ { tv_n tv lv yr0 } 
				inst { tv_n tv lv yr1 } ⊢ { tv_n tv lv yr1 }
				$ yr0 ⊢ yr0,yr0_0 
				unify.f { tv yr0 yr1 } ⊢ tv 
				_dec lv ⊢ lv 
				gen { tv_n tv lv yr0_0 } ⊢ { tv_n tv lv yr0_0 } 
				p_cns { { tl me } lm } ⊢ lm 
				∎ { lv env0 rv tv tv_n n re lm yr0_0 }
			∐. p_end◂{ tl me } .
				slv_mtc_line { lv env0 rv tv tv_n n re tl } ⊢ { lv env0 rv tv tv_n n re tl } 
				slv_mtc_etr { lv env0 rv tv tv_n n re me } ⊢ { lv env0 rv tv tv_n n re me yr0 } 
				p_end { tl me } ⊢ lm 
				∎ { lv env0 rv tv tv_n n re lm yr0 }
		@.slv_mtc_etr { lv env0 rv tv tv_n n re me } 
			$ me ⊢ 
			∐ ast.mtc_rmf◂lm0 .
				slv_lc_mtc { lv env0 rv tv tv_n n re lm0 } ⊢ { lv env0 rv tv tv_n n re lm0 yr }  
				ast.mtc_rmf lm0 ⊢ me 
				∎ { lv env0 rv tv tv_n n re me yr } 
			∐ ast.mtc_id_rmf◂{ sp0 ilm0 } .  
				_inc lv ⊢ lv 
				csm_src_ptn { lv env0 rv tv tv_n re sp0 } ⊢ { lv env0 rv tv tv_n re sp0 y0 } 
				_dec lv ⊢ lv 
				$ y0 ⊢ y0,y0_0 
				slv_lc_id_mtc_mp { y0 lv env0 rv tv tv_n n re ilm0 } ⊢ { lv env0 rv tv tv_n n ilm0 } 
				gen { tv_n tv lv y0_0 } ⊢ { tv_n tv lv y0_0 } 
				slv_lc_id_mtc { lv env0 rv tv tv_n n ilm0 } ⊢ { lv env0 rv tv tv_n n ilm0 yr } 
				ast.mtc_id_rmf { sp0 ilm0 } ⊢ me  
				_nil {} ⊢ re
				∎ { lv env0 rv tv tv_n n re me yr }  
			∐. ast.mtc_code◂lc0 . 
				slv_r { lv env0 rv tv tv_n n re lc0 } ⊢ { lv env0 rv tv tv_n n re lc0 yr } 
				ast.mtc_code lc0 ⊢ me 
				∎ { lv env0 rv tv tv_n n re me yr } 
		@.slv_mtc_line { lv env0 rv tv tv_n n re tl } 
			##» "slv_mtc_line d0" _ ⊢ sd0 
			##_emt sd0 ⊢ sd0 
			$ tl ⊢ 
			∐ _cns◂{ t tl } . 
				$ t ⊢ 
				∐ ast.mtc_id◂{ sp mp } . 
					_inc lv ⊢ lv 
					csm_src_ptn { lv env0 rv tv tv_n re sp } ⊢ { lv env0 rv tv tv_n re sp y0 } 
					crt_mtc_ptn { lv env0 rv tv tv_n n re mp } ⊢ { lv env0 rv tv tv_n n re mp y }
					_dec lv ⊢ lv 
					$ y0 ⊢ y0,y0_0 
					unify.f { tv y0_0 y } ⊢ tv 
					gen { tv_n tv lv y0 } ⊢ { tv_n tv lv y0 } 
					ast.mtc_id { sp mp } ⊢ t 
					$ y0 ⊢ y0,y00 
					pnt_type_k { tv y00 } ⊢ { tv s00 } 
					##_emt sd0 ⊢ sd0 
					##_emt s00 ⊢ s00 
					slv_mtc_line { lv env0 rv tv tv_n n re tl } ⊢ { lv env0 rv tv tv_n n re tl } 
					_cns { t tl } ⊢ tl 
					∎ { lv env0 rv tv tv_n n re tl } 
				∐ ast.mtc_cmp_test◂{ v0 v1 } .  
					_inc lv ⊢ lv 
					slv_test_var { lv env0 tv_n tv rv n re v0 } ⊢ { lv env0 tv_n tv rv n re v0 y0 } 
					slv_test_var { lv env0 tv_n tv rv n re v1 } ⊢ { lv env0 tv_n tv rv n re v1 y1 } 
					_dec lv ⊢ lv 
					$ y0 ⊢ y0,y0_0 
					unify.f { tv y0_0 y1 } ⊢ tv  
					gen { tv_n tv lv y0 } ⊢ { tv_n tv lv y0 } 
					ast.mtc_cmp_test { v0 v1 } ⊢ t 
					slv_mtc_line { lv env0 rv tv tv_n n re tl } ⊢ { lv env0 rv tv tv_n n re tl } 
					_cns { t tl } ⊢ tl 
					∎ { lv env0 rv tv tv_n n re tl } 
				∐. ast.mtc_test◂{ v0 v1 } .  
					_inc lv ⊢ lv 
					slv_test_var { lv env0 tv_n tv rv n re v0 } ⊢ { lv env0 tv_n tv rv n re v0 y0 } 
					slv_test_var { lv env0 tv_n tv rv n re v1 } ⊢ { lv env0 tv_n tv rv n re v1 y1 } 
					_dec lv ⊢ lv 
					$ y0 ⊢ y0,y0_0 
					unify.f { tv y0_0 y1 } ⊢ tv  
					gen { tv_n tv lv y0 } ⊢ { tv_n tv lv y0 } 
					ast.mtc_test { v0 v1 } ⊢ t 
					slv_mtc_line { lv env0 rv tv tv_n n re tl } ⊢ { lv env0 rv tv tv_n n re tl } 
					_cns { t tl } ⊢ tl 
					∎ { lv env0 rv tv tv_n n re tl } 
			∐. _nil◂{} . 
				_nil {} ⊢ tl 
				∎ { lv env0 rv tv tv_n n re tl }
		@.slv_lc_id_mtc_mp { y0 lv env0 rv tv tv_n n re ilm } 
			##» "slv_id_mtc_mp d0" _ ⊢ sd0 
			##_emt sd0 ⊢ sd0 
			$ ilm ⊢ 
			∐ p_cns◂{ { mp tl me } ilm } .
				$ re ⊢ re,re0 
				$ y0 ⊢ y0,y0_0 
				slv_lc_id_mtc_mp { y0_0 lv env0 rv tv tv_n n re0 ilm } ⊢ { lv env0 rv tv tv_n n ilm } 
				_inc lv ⊢ lv 
				crt_mtc_ptn { lv env0 rv tv tv_n n re mp } ⊢ { lv env0 rv tv tv_n n re mp y } 
				_dec lv ⊢ lv  
				unify.f { tv y0 y } ⊢ tv
				p_cns { { mp re tl me } ilm } ⊢ ilm 
				∎ { lv env0 rv tv tv_n n ilm }
			∐. p_end◂{ mp tl me } .
				_inc lv ⊢ lv 
				crt_mtc_ptn { lv env0 rv tv tv_n n re mp } ⊢ { lv env0 rv tv tv_n n re mp y } 
				_dec lv ⊢ lv  
				unify.f { tv y0 y } ⊢ tv 
				p_end { mp re tl me } ⊢ ilm 
				∎ { lv env0 rv tv tv_n n ilm }
		@.slv_lc_id_mtc { lv env0 rv tv tv_n n ilm } 
			$ ilm ⊢ 
			∐ p_cns◂{ { mp re tl me } ilm } .  
				slv_mtc_line { lv env0 rv tv tv_n n re tl } ⊢ { lv env0 rv tv tv_n n re tl } 
				slv_mtc_etr { lv env0 rv tv tv_n n re me } ⊢ { lv env0 rv tv tv_n n re me yr1 } 
				slv_lc_id_mtc { lv env0 rv tv tv_n n ilm } ⊢ { lv env0 rv tv tv_n n ilm yr0 } 
				_inc lv ⊢ lv 
				inst { tv_n tv lv yr0 } ⊢ { tv_n tv lv yr0 } 
				inst { tv_n tv lv yr1 } ⊢ { tv_n tv lv yr1 }
				$ yr0 ⊢ yr0,yr0_0 
				unify.f { tv yr0 yr1 } ⊢ tv 
				_dec lv ⊢ lv 
				gen { tv_n tv lv yr0_0 } ⊢ { tv_n tv lv yr0_0 } 
				p_cns { { mp tl me } ilm } ⊢ ilm 
				∎ { lv env0 rv tv tv_n n ilm yr0_0 }
			∐. p_end◂{ mp re tl me } .
				slv_mtc_line { lv env0 rv tv tv_n n re tl } ⊢ { lv env0 rv tv tv_n n re tl } 
				slv_mtc_etr { lv env0 rv tv tv_n n re me } ⊢ { lv env0 rv tv tv_n n re me yr0 } 
				p_end { mp tl me } ⊢ ilm 
				∎ { lv env0 rv tv tv_n n ilm yr0 }
			∎∎
		\]
		§§ slv_lc_clq 
			§ 
				@.f { env0 irv tav evv rv tv tv_n ev_n r_n q gfl { eds dd ep0 ec0 lb_n } } 
					_nil {} ⊢ cl 
					f_l0 { env0 evv tv tv_n ev_n r_n q cl } ⊢ { env0 evv tv tv_n ev_n r_n q } 
					f_l1 { env0 rv tv tv_n r_n q } ⊢ { env0 rv tv tv_n r_n q yl } 
					» 0r _ ⊢ pv_n 
					_nil {} ⊢ al 
					f_l2 { { pv_n al } env0 irv tav evv rv tv_n tv yl { dd ep0 ec0 lb_n } } ⊢ { { pv_n al } env0 irv tav evv rv tv_n tv yl { dd ep0 ec0 lb_n } } 
					rp8.e {} ⊢ eg0 
					rp8.e {} ⊢ ec1 
					f_l3 { gfl env0 lb_n evv { rv irv } tav tv_n tv { eg0 eds ec1 } yl } ⊢ { gfl env0 lb_n evv { rv irv } tav tv_n tv { eg0 eds ec1 } } 
					rp8.cct { ec0 eg0 } ⊢ ec0 
					rp8.cct { ec0 ec1 } ⊢ ec0 
					∎ { env0 irv tav evv rv tv tv_n ev_n r_n q gfl { eds dd ep0 ec0 lb_n } } 
				@.f_l0 { env0 evv tv tv_n ev_n r_n q cl }
					$ q ⊢ 
					∐ _cns◂{ { w d td lc } q } . 
						» "enter slv_lc_clq" _ ⊢ sxe0
						_emt sxe0 ⊢ _
						_emt w ⊢ w  
						assoc { cl w } ⊢ { cl w o } 
						$ o ⊢ 
						∐ _none◂{} . 
							$ w ⊢ w,w0 
							_some {} ⊢ a 
							_cns { { w0 a } cl } ⊢ cl 
							$ env0 ⊢ { mmv mev ev ns_m ns_e il }
							» 1r _ ⊢ lv 
							newvar_l { tv_n tv lv } ⊢ { tv_n tv lv yx }
							$ yx ⊢ yx,yx0 
							$ w ⊢ w,w0
							$ ev_n ⊢ ev_n,en0 
							» 0r _ ⊢ ka0 
							k_op_axm ka0 ⊢ k 
							add_e { tv_n tv evv ev ev_n ns_e w k yx } ⊢ { tv_n tv evv ev ev_n ns_e }
							$ { mmv mev ev ns_m ns_e il } ⊢ env0 
							f_l0 { env0 evv tv tv_n ev_n r_n q cl } ⊢ { env0 evv tv tv_n ev_n r_n q } 
							##_emt yx0 ⊢ yx0 
							_cns { { en0 w0 yx0 d lc } q } ⊢ q 
							∎ { env0 evv tv tv_n ev_n r_n q }
						∐. _some◂{} . 
							_emt w ⊢ w 
							∎| 
					∐. _nil◂{} . 
						_nil {} ⊢ q 
						∎ { env0 evv tv tv_n ev_n r_n q } 
				@.f_l1 { env0 rv tv tv_n r_n q } 
					» "enter f_l1" _ ⊢ sxe0
					_emt sxe0 ⊢ _
					$ q ⊢ 
					∐ _cns◂{ { en w yx d lc } q } . 
						_nil {} ⊢ re 
						» 1r _ ⊢ lv 
						crt_dst_ptn { lv rv tv tv_n r_n re d } ⊢ { lv rv tv tv_n r_n re d y0 } 
						##» "enter f_l1 d1" _ ⊢ sd1
						##_emt sd1 ⊢ sd1
						##_emt w ⊢ w 
						slv_r { lv env0 rv tv tv_n r_n re lc } ⊢ { lv env0 rv tv tv_n r_n re lc yr } 
						inst { tv_n tv lv yr } ⊢ { tv_n tv lv yr } 
						##» "enter f_l1 d2" _ ⊢ sd2
						##_emt sd2 ⊢ sd2
						$ y0 ⊢ y0,y00 
						$ yr ⊢ yr,yr0 
						imp { y00 yr0 } ⊢ yf
						RP.atm yf ⊢ yf 
						$ yf ⊢ yf,yf0 
						pnt_type_k { tv yf0 } ⊢ { tv syf0 } 
						##_emt syf0 ⊢ syf0 
						##» "DBG Fx2" _ ⊢ sdde 
						##_emt sdde ⊢ sdde
						unify.f { tv yf yx } ⊢ tv 
						f_l1 { env0 rv tv tv_n r_n q } ⊢ { env0 rv tv tv_n r_n q yl } 
						_cns { {} q } ⊢ q 
						_cns { { en lc w { d y0 yr } } yl } ⊢ yl 
						∎ { env0 rv tv tv_n r_n q yl } 
					∐. _nil◂{} . 
						_nil {} ⊢ q 
						_nil {} ⊢ yl
						∎ { env0 rv tv tv_n r_n q yl }
				@.f_l2 { { pv_n al } env0 irv tav evv rv tv_n tv yl { dd ep0 ec0 lb_n } }  
					$ yl ⊢ 
					∐ _cns◂{ { en lc w { d ys yd } } yl } .
						» 0r _ ⊢ lv 
						» "f_l2 0" _ ⊢ se1 
						_emt se1 ⊢ _
						$ ys ⊢ ys,ys0 
						$ yd ⊢ yd,yd0 
						imp { ys0 yd0 } ⊢ yx
						RP.atm yx ⊢ yx 
						gen { tv_n tv lv yx } ⊢ { tv_n tv lv yx } 
						$ ys ⊢ ys,ys0 
						_nil {} ⊢ ql0 
						chk_pv { tv ys0 ql0 } ⊢ { tv ql0 } 
						∐ ql0 ⊢ _nil◂{} .  
							$ ys ⊢ ys,ys0 
							rset.ini {} ⊢ s0 
							alc_type_k.f { pv_n al tav tv_n tv s0 ys0 } ⊢ { pv_n al tav tv_n tv s0 p0 } 
							$ yd ⊢ yd,yd0 
							rset.ini {} ⊢ sd0 
							alc_type_k.f { pv_n al tav tv_n tv sd0 yd0 } ⊢ { pv_n al tav tv_n tv sr0 pr0 } 
							$ p0 ⊢ p0,p00 
							stt_v.pnt.f p00 ⊢ sp0 
							$ p0 ⊢ p0,p00 
							emt.mk_rsp p00 ⊢ rsp 
							$ p0 ⊢ p0,p00 
							_nil {} ⊢ dl 
							_nil {} ⊢ rl 
							emt.idx.crt_ptn { irv d p00 rl dl } ⊢ { irv rl dl } 
							$ pr0 ⊢ pr0,pr00 
							stt_v.pnt.f pr00 ⊢ spr0 
							$ pr0 ⊢ pr0,pr00 
							emt.mk_rsp pr00 ⊢ rsp_d 
							$ pr0 ⊢ pr0,pr00 
							$ rsp ⊢ rsp,rsp0 
							$ rsp_d ⊢ rsp_d,rsp_d0 
							k_op { rsp0 p0 rsp_d pr0 } ⊢ k 
							$ yx ⊢ yx,yx0 
							exc_q { evv en k } ⊢ { evv en k } 
							pnt_type_k { tv yx0 } ⊢ { tv yx1s } 
							» _^ dd,w,yx1s,sp0,spr0,en ⊢ dd,w,yx1s,sp0,spr0,en,ep1 
								0'*"\t" "§ " 1' "(" 5d' ") " 3' " ⊢ " 4' " : " 2' "\n" // 
							_emt ep1 ⊢ ep1 
							_cns { ep1 ep0 } ⊢ ep0
							rp8.e {} ⊢ ee0 
							» _^ en,w,sp0,spr0,yx1s ⊢ en,w,sp0,spr0,yx1s,ec1 
								"ETR_" 0d' ": ;; " 1' " " 2' " ⊢ " 3' " : " 4' "\n" //
							rp8.add_s8 { ee0 ec1 } ⊢ ee0 
							∐ rsp'=0r . 
								f_l2 { { pv_n al } env0 irv tav evv rv tv_n tv yl { dd ep0 ec0 lb_n } } ⊢ { { pv_n al } env0 irv tav evv rv tv_n tv yl { dd ep0 ec0 lb_n } }
								_cns { { rsp lc rl rsp_d0 pr00 yx yd ee0 } yl } ⊢ yl 
								∎ { { pv_n al } env0 irv tav evv rv tv_n tv yl { dd ep0 ec0 lb_n } } 
							∐. . 
								» "\tadd rsp,8\n" _ ⊢ sc0 
								rp8.add_s8 { ee0 sc0 } ⊢ ee0 
								f_l2 { { pv_n al } env0 irv tav evv rv tv_n tv yl { dd ep0 ec0 lb_n } } ⊢ { { pv_n al } env0 irv tav evv rv tv_n tv yl { dd ep0 ec0 lb_n } }
								_cns { { rsp lc rl rsp_d0 pr00 yx yd ee0 } yl } ⊢ yl 
								∎ { { pv_n al } env0 irv tav evv rv tv_n tv yl { dd ep0 ec0 lb_n } }
						∐. . 
							k_op_gnr { d lc } ⊢ k 
							exc_q { evv en k } ⊢ { evv en k } 
							f_l2 { { pv_n al } env0 irv tav evv rv tv_n tv yl { dd ep0 ec0 lb_n } } ⊢ { { pv_n al } env0 irv tav evv rv tv_n tv yl { dd ep0 ec0 lb_n } }
							##_cns { { rsp lc rl rsp_d0 pr00 yx yd } yl } ⊢ yl 
							∎ { { pv_n al } env0 irv tav evv rv tv_n tv yl { dd ep0 ec0 lb_n } } 
					∐. _nil◂{} . 
						_nil {} ⊢ yl 
						∎ { { pv_n al } env0 irv tav evv rv tv_n tv yl { dd ep0 ec0 lb_n } }
				@.f_l3 { gfl env0 lb_n evv { rv irv } tav tv_n tv { eg0 eds ec0 } yl }
					$ yl ⊢ 
					∐ _cns◂{ { rsp lc rl rsp_d pr00 yx yd ee0 } yl } . 
						$ env0 ⊢ { mmv mev ev m_ns e_ns m_l } 						
						_nil {} ⊢ cl 
						f_etr { rsp_d pr00 yd } ⊢ ft 
						emt.lc_code.f { { gfl cl } lb_n { ev evv } rsp { rv irv } tav tv_n tv lc { eg0 eds ee0 } rl ft } ⊢ { { gfl cl } lb_n { ev evv } rsp { rv irv } tav tv_n tv { eg0 eds ee0 } rl ft } 
						rp8.cct { ec0 ee0 } ⊢ ec0 
						$ { mmv mev ev m_ns e_ns m_l } ⊢ env0 
						f_l3 { gfl env0 lb_n evv { rv irv } tav tv_n tv { eg0 eds ec0 } yl } ⊢| 
					∐. _nil◂{} . 
						∎ { gfl env0 lb_n evv { rv irv } tav tv_n tv { eg0 eds ec0 } }
			∎∎ 
		
		§ @.slv_type { env0 mtv tv_n tv t_ns al t l2 } 
			» 0r _ ⊢ xx 
			_add { xx tv_n } ⊢ { xx tv_n } 
			$ t ⊢ 
			∐ ast.type_rcd◂l . 
				slv_type_lst { env0 mtv tv_n tv t_ns al l l2 } ⊢ { env0 mtv tv_n tv t_ns al l l2 } 
				RP.rcd l ⊢ k 
				∎ { env0 mtv tv_n tv t_ns al k l2 }
			∐ ast.imp◂{ t0 t1 } . 
				slv_type { env0 mtv tv_n tv t_ns al t0 l2 } ⊢ { env0 mtv tv_n tv t_ns al k0 l2 }
				slv_type { env0 mtv tv_n tv t_ns al t1 l2 } ⊢ { env0 mtv tv_n tv t_ns al k1 l2 } 
				imp { k0 k1 } ⊢ k 
				RP.atm k ⊢ k 
				∎ { env0 mtv tv_n tv t_ns al k l2 } 
			∐ ast.app◂{ t0 t1 } .
				slv_type { env0 mtv tv_n tv t_ns al t0 l2 } ⊢ { env0 mtv tv_n tv t_ns al k0 l2 }
				slv_type { env0 mtv tv_n tv t_ns al t1 l2 } ⊢ { env0 mtv tv_n tv t_ns al k1 l2 } 
				slv_type_app { env0 mtv tv_n tv t_ns al k0 k1 l2 } ⊢| 	
			∐ ast.type_name◂n . 
				$ env0 ⊢ { mmv mev ev m_ns e_ns m_l } 
				slv_ns_e { n mmv mtv tv m_ns t_ns m_l } ⊢ { mmv mtv tv m_ns t_ns m_l iv }
				$ { mmv mev ev m_ns e_ns m_l } ⊢ env0 	
				assoc { l2 iv } ⊢ { l2 iv o } 
				∐ o ⊢ _some◂o; o ⊢ _some◂{ w as y } .
					_none {} ⊢ o 
					_some o ⊢ o 
					$ iv ⊢ iv,i0_0 
					_cns { { i0_0 o } l2 } ⊢ l2 
					_nil {} ⊢ al0 
					slv_args_ln { env0 mtv tv_n tv t_ns as al0 y l2 } ⊢ { env0 mtv tv_n tv t_ns al0 k l2 } 
					_none {} ⊢ o 
					$ iv ⊢ iv,i0_0 
					_cns { { i0_0 o } l2 } ⊢ l2 
					var_ln k ⊢ v 
					_set_q { tv iv v } ⊢ { tv iv }
					var iv ⊢ k 
					RP.atm k ⊢ k 
					∎ { env0 mtv tv_n tv t_ns al k l2 } 
				∐ o ⊢ _some◂o; o ⊢ _none◂{} . 
					» "slv_type 0" _ ⊢ se 
					_emt se ⊢ se 
					∎| 
				∐. . 
					var iv ⊢ k 
					RP.atm k ⊢ k 
					» 1r _ ⊢ lv 
					inst { tv_n tv lv k } ⊢ { tv_n tv lv k }
					_dec lv ⊢ lv  
					gen { tv_n tv lv k } ⊢ { tv_n tv lv k } 
					∎ { env0 mtv tv_n tv t_ns al k l2 }
			∐. ast.type_var◂s . 
				assoc { al s } ⊢ { al s o } 
				$ o ⊢ 
				∐ _some◂i . 
					var i ⊢ k 
					RP.atm k ⊢ k 
					∎ { env0 mtv tv_n tv t_ns al k l2 }
				∐. _none◂{} . 
					» "slv_type 1" _ ⊢ se 
					_emt se ⊢ se 
					∎| 
			@.slv_type_lst { env0 mtv tv_n tv t_ns al l l2 }
				$ l ⊢ 
				∐ _cns◂{ t l } . 
					slv_type { env0 mtv tv_n tv t_ns al t l2 } ⊢ { env0 mtv tv_n tv t_ns al k l2 } 
					slv_type_lst { env0 mtv tv_n tv t_ns al l l2 } ⊢ { env0 mtv tv_n tv t_ns al l l2 } 
					_cns { k l } ⊢ l 
					∎ { env0 mtv tv_n tv t_ns al l l2 }
				∐. _nil◂{} . 
					_nil {} ⊢ l 
					∎ { env0 mtv tv_n tv t_ns al l l2 } 
			@.slv_type_app { env0 mtv tv_n tv t_ns al k0 k1 l2 } 
				$ k0 ⊢ 
				∐ RP.rcd◂l . 
					RP.rcd l ⊢ k0 
					pnt_type_k { tv k0 } ⊢ { tv s0 } 
					##» "slv_type_app 1" _ ⊢ se 
					##_emt se ⊢ se 
					##_emt s0 ⊢ s0 
					∎| 
				∐. RP.atm◂k0 . 
					∐ k0 ⊢ abs◂{ a k0 } . 
						var_ln k1 ⊢ v1 
						exc_q { tv a v1 } ⊢ { tv a v1 } 
						∎ { env0 mtv tv_n tv t_ns al k0 l2 } 
					∐ k0 ⊢ var◂i . 
						_lod_q { tv i } ⊢ { tv i v } 
						∐ v ⊢ var_ln◂k2 . 
							slv_type_app { env0 mtv tv_n tv t_ns al k2 k1 l2 } ⊢|
						∐. . 
							pnt_type_k { tv k1 } ⊢ { tv s0 } 
							» "slv_type_app 1" _ ⊢ se 
							_emt se ⊢ se 
							_emt s0 ⊢ s0 
							∎|
					∐. . 
						RP.atm k0 ⊢ k0 
						pnt_type_k { tv k0 } ⊢ { tv s0 } 
						» "slv_type_app 0" _ ⊢ se 
						_emt se ⊢ se 
						_emt s0 ⊢ s0 
						∎| 
			@.slv_args_ln { env0 mtv tv_n tv t_ns as al t l2 } 
				$ as ⊢ 
				∐ _cns◂{ a as } . 
					assoc { al a } ⊢ { al a o } 
					$ o ⊢ 
					∐ _none◂{} . 
						newvar_i { tv_n tv } ⊢ { tv_n tv i } 
						$ i ⊢ i,i0 
						_some i ⊢ o 
						_cns { { a o } al } ⊢ al 
						slv_args_ln { env0 mtv tv_n tv t_ns as al t l2 } ⊢ { env0 mtv tv_n tv t_ns al k l2 } 
						abs { i0 k } ⊢ k 
						RP.atm k ⊢ k 
						∎ { env0 mtv tv_n tv t_ns al k l2 }
					∐. _some◂y . 
						» "slv_args 0" _ ⊢ se 
						_emt se ⊢ se 
						∎| 
				∐. _nil◂{} .  
					slv_type { env0 mtv tv_n tv t_ns al t l2 } ⊢|
		§ slv_args_ln { env0 mtv tv_n tv t_ns as t l2 } 
			_nil {} ⊢ al 
			slv_args_ln { env0 mtv tv_n tv t_ns as al t l2 } ⊢| 
		§ @.slv_args_def_0 { env0 mtv tv_n tv t_ns as al x xl ql dl } 
			$ as ⊢ 
			∐ _cns◂{ a as } . 
				assoc { al a } ⊢ { al a o } 
				$ o ⊢ 
				∐ _none◂{} . 
					newvar_i { tv_n tv } ⊢ { tv_n tv i } 
					» 0r _ ⊢ lv 
					$ tv_n ⊢ tv_n,tv_n0 
					$ tv_n ⊢ tv_n,qi 
					newvar_q { tv_n tv lv } ⊢ { tv_n tv lv q } 
					_cns { q ql } ⊢ ql 
					_some tv_n0 ⊢ o 
					_cns { { a o } al } ⊢ al 
					$ i ⊢ i,i1 
					var i1 ⊢ v 
					RP.atm v ⊢ v 
					_cns { v xl } ⊢ xl 
					slv_args_def_0 { env0 mtv tv_n tv t_ns as al x xl ql dl } ⊢ { env0 mtv tv_n tv t_ns al k yx dl ql } 
					_cns { qi ql } ⊢ ql 
					abs { i k } ⊢ k 
					RP.atm k ⊢ k 
					∎ { env0 mtv tv_n tv t_ns al k yx dl ql }
				∐. _some◂y . 
					» "slv_args_def 0" _ ⊢ se 
					_emt se ⊢ se 
					∎| 
			∐. _nil◂{} .  
				$ x ⊢ x,x0 
				##slv_args_def_dl { tv_n dl } ⊢ { tv_n dl } 
				_nil {} ⊢ ql0 
				dta { x0 ql } ⊢ yx 
				RP.atm yx ⊢ yx 
				dta { x xl } ⊢ k 
				RP.atm k ⊢ k 
				∎ { env0 mtv tv_n tv t_ns al k yx dl ql0 }
		§ slv_args_def { env0 mtv tv_n tv t_ns as x dl } 
			_nil {} ⊢ al 
			_nil {} ⊢ xl
			_nil {} ⊢ ql 
			slv_args_def_0 { env0 mtv tv_n tv t_ns as al x xl ql dl } ⊢ { env0 mtv tv_n tv t_ns al k yx dl ql0 } 
			rev ql0 ⊢ ql0 
			∎ { env0 mtv tv_n tv t_ns al k yx dl ql0 }
		§ @.slv_dt_def { { mmv mev ns_m il } { tav evv } an mtv al yx tv tv_n ns_t ev ev_n ns_e dl { dd ep0 ec0 } } 
			$ dl ⊢ 
			∐ _cns◂{ { cn y } dl } . 
				_nil {} ⊢ l2 
				slv_type { { mmv mev ev ns_m ns_e il } mtv tv_n tv ns_t al y l2 } ⊢ { { mmv mev ev ns_m ns_e il } mtv tv_n tv ns_t al k l2 } 
				» 0r _ ⊢ lv 
				$ yx ⊢ yx,yx0 
				##$ k ⊢ k,k0 
				$ k ⊢ k,k0 
				imp { k yx0 } ⊢ yy 
				RP.atm yy ⊢ yy 
				$ yy ⊢ yy,yy0 
				pnt_type_k { tv yy0 } ⊢ { tv syy }
				» _^ dd,ev_n,cn,syy ⊢ dd,ev_n,cn,syy,ep1 
					0'*"\t" "§ " 2' "(" 1d' ") : " 3' "\n" // 
				##var_ln k0 ⊢ vk 
				##_set_q { tv ic vk } ⊢ { tv ic } 
				_inc an ⊢ an 
				slv_dt_def { { mmv mev ns_m il } { tav evv } an mtv al yx tv tv_n ns_t ev ev_n ns_e dl { dd ep0 ec0 } } ⊢ { { mmv mev ns_m il } { tav evv } an mtv al yx tv tv_n ns_t ev ev_n ns_e { dd ep0 ec0 } ac kl }  
				_dec an ⊢ an 
				_cns { k0 kl } ⊢ kl 
				$ ac ⊢ ac,ac0 
				$ an ⊢ an,an0 
				k_ctr { an0 ac0 } ⊢ k 
				add_e { tv_n tv evv ev ev_n ns_e cn k yy } ⊢ { tv_n tv evv ev ev_n ns_e } 
				_cns { ep1 ep0 } ⊢ ep0 
				∎ { { mmv mev ns_m il } { tav evv } an mtv al yx tv tv_n ns_t ev ev_n ns_e { dd ep0 ec0 } ac kl } 
			∐. _nil◂{} . 
				$ an ⊢ an,ac 
				_nil {} ⊢ kl 
				∎ { { mmv mev ns_m il } { tav evv } an mtv al yx tv tv_n ns_t ev ev_n ns_e { dd ep0 ec0 } ac kl }

		§ @.mk_asc_lst { tv_n tv ql } 
			$ ql ⊢ 
			∐ _cns◂{ i0 ql } . 
				mk_asc_lst { tv_n tv ql } ⊢ { tv_n tv ql al } 
				newvar_i { tv_n tv } ⊢ { tv_n tv i1 }
				$ i1 ⊢ i1,i11 
				_some i1 ⊢ o 
				_cns { { i0 o } al } ⊢ al 
				_cns { i11 ql } ⊢ ql 
				∎ { tv_n tv ql al }
			∐. _nil◂{} . 
				_nil {} ⊢ al 
				_nil {} ⊢ ql 
				∎ { tv_n tv ql al } 
		§ mk_t_aux_f { tv_n tv ql kl } 
			mk_asc_lst { tv_n tv ql } ⊢ { tv_n tv ql al } 
			» 1r _ ⊢ lv 
			inst_lst { tv_n tv lv kl al } ⊢ { tv_n tv lv kl al } 
			_dec lv ⊢ lv 
			gen_lst { tv_n tv lv kl } ⊢ { tv_n tv lv kl }
			∎ { tv_n tv ql kl }
		§§ slv_dt_clq 
			§ 
				@.f { q { mmv mev ev ns_m ns_e il } tav evv ev_n tx_n mtv tv_n tv ns_t { dd ep0 ec0 } }
					_nil {} ⊢ l0 
					_nil {} ⊢ l1
					_nil {} ⊢ l2 
					lp0 { q { l0 l1 l2 } { mmv mev ev ns_m ns_e il } tav tx_n mtv tv_n tv ns_t } ⊢ { { l0 l1 l2 } { mmv mev ev ns_m ns_e il } tav tx_n mtv tv_n tv ns_t }
					lp0_ln { { l1 l2 } { mmv mev ev ns_m ns_e il } ev_n tx_n mtv tv_n tv ns_t { dd ep0 ec0 } } ⊢ { { mmv mev ev ns_m ns_e il } ev_n tx_n mtv tv_n tv ns_t { dd ep0 ec0 } } 
					lp0_def { l0 { mmv mev ev ns_m ns_e il } tav evv ev_n tx_n mtv tv_n tv ns_t { dd ep0 ec0 } } ⊢ { { mmv mev ev ns_m ns_e il } tav evv ev_n tx_n mtv tv_n tv ns_t { dd ep0 ec0 } }
					∎ { { mmv mev ev ns_m ns_e il } tav evv ev_n tx_n mtv tv_n tv ns_t { dd ep0 ec0 } }
				@.lp0 { q { l0 l1 l2 } { mmv mev ev ns_m ns_e il } tav tx_n mtv tv_n tv ns_t } 
					##» "slv_dt_clq.lp0" _ ⊢ sec1 
					##_emt sec1 ⊢ sec1 
					$ q ⊢ 
					∐ _cns◂{ { w d } q } . 
						$ d ⊢ 
						∐ ast.dt_def◂{ as dl } .
							$ tx_n ⊢ tx_n,x 
							$ x ⊢ x,x0 
							$ w ⊢ w,w0 
							_inc tx_n ⊢ tx_n 
							slv_args_def { { mmv mev ev ns_m ns_e il } mtv tv_n tv ns_t as x dl } ⊢ { { mmv mev ev ns_m ns_e il } mtv tv_n tv ns_t al k yx dl ql } 
							add_t { tv_n tv ns_t w k } ⊢ { tv_n tv ns_t }
							_cns { { al yx dl x0 w0 ql } l0 } ⊢ l0 
							##_cns { { as dl
							 lp0 { q { l0 l1 l2 } { mmv mev ev ns_m ns_e il } tav tx_n mtv tv_n tv ns_t } ⊢| 
						∐. ast.dt_ln◂{ as y } . 
							##slv_args_ln { { mmv mev ev ns_m ns_e il } mtv tv_n tv ns_t as y } ⊢ { { mmv mev ev ns_m ns_e il } mtv tv_n tv ns_t al k } 
							##add_t { tv_n tv ns_t w k } ⊢ { tv_n tv ns_t } 
							$ tv_n ⊢ tv_n,t0
							_some t0 ⊢ o 
							$ w ⊢ w,w0 
							_cns { { w o } ns_t } ⊢ ns_t 
							$ tv_n ⊢ tv_n,t0 
							_cns { t0 l2 } ⊢ l2 
							$ tv_n ⊢ tv_n,t0 
							_inc tv_n ⊢ tv_n 
							_some { w0 as y } ⊢ o 
							_some o ⊢ o 
							_cns { { t0 o } l1 } ⊢ l1
							lp0 { q { l0 l1 l2 } { mmv mev ev ns_m ns_e il } tav tx_n mtv tv_n tv ns_t } ⊢| 
					∐. _nil◂{} .
						∎ { { l0 l1 l2 } { mmv mev ev ns_m ns_e il } tav tx_n mtv tv_n tv ns_t } 
				@.lp0_ln { { l1 l2 } { mmv mev ev ns_m ns_e il } ev_n tx_n mtv tv_n tv ns_t { dd ep0 ec0 } }  
					$ l2 ⊢ 
					∐ _cns◂{ i0 l2 } . 
						assoc { l1 i0 } ⊢ { l1 i0 o } 
						∐ o ⊢ _some◂o; o ⊢ _some◂{ w as y } . 
							_none {} ⊢ o 
							_some o ⊢ o 
							$ i0 ⊢ i0,i0_0 
							_cns { { i0_0 o } l1 } ⊢ l1 
							slv_args_ln { { mmv mev ev ns_m ns_e il } mtv tv_n tv ns_t as y l1 } ⊢ { { mmv mev ev ns_m ns_e il } mtv tv_n tv ns_t al k l1 } 
							_none {} ⊢ o 
							$ i0 ⊢ i0,i0_0 
							_cns { { i0_0 o } l1 } ⊢ l1 
							$ k ⊢ k,k0 
							var_ln k ⊢ v 
							pnt_type_k { tv k0 } ⊢ { tv sv } 
							» _^ dd,w,i0,sv ⊢ dd,w,i0,sv,ep1 
								0'*"\t" "¶ " 1' "(" 2d' ") ~ " 3' // 
							_cns { ep1 ep0 } ⊢ ep0 
							_set_q { tv i0 v } ⊢ { tv i0 }
							lp0_ln { { l1 l2 } { mmv mev ev ns_m ns_e il } ev_n tx_n mtv tv_n tv ns_t { dd ep0 ec0 } } ⊢|
						∐ o ⊢ _some◂o; o ⊢ _none◂{} . 
							» "lp0_ln 0" _ ⊢ se 
							_emt se ⊢ se 
							∎|	  
						∐. .
							lp0_ln { { l1 l2 } { mmv mev ev ns_m ns_e il } ev_n tx_n mtv tv_n tv ns_t { dd ep0 ec0 } } ⊢|
					∐. _nil◂{} . 
						∎ { { mmv mev ev ns_m ns_e il } ev_n tx_n mtv tv_n tv ns_t { dd ep0 ec0 } } 
				@.lp0_def { l0 { mmv mev ev ns_m ns_e il } tav evv ev_n tx_n mtv tv_n tv ns_t { dd ep0 ec0 } } 
					$ l0 ⊢ 
					∐ _cns◂{ { al yx dl x w ql } l0 } . 
						» 0r _ ⊢ an 
						slv_dt_def { { mmv mev ns_m il } { tav evv } an mtv al yx tv tv_n ns_t ev ev_n ns_e dl { dd ep0 ec0 } } ⊢ { { mmv mev ns_m il } { tav evv } an mtv al yx tv tv_n ns_t ev ev_n ns_e { dd ep0 ec0 } ac kl }
						mk_t_aux_f { tv_n tv ql kl } ⊢ { tv_n tv ql kl }
						$ kl ⊢ kl,kl0 
						» 0r _ ⊢ pv_n 
						_nil {} ⊢ alp 
						alc_type_k.hp_lst { pv_n alp tav tv_n tv kl0 } ⊢ { pv_n alp tav tv_n tv hl }
						$ ql ⊢ ql,ql0 
						subst_lst { ql0 alp } ⊢ { ql0 alp } 
						_some { ql kl ql0 hl } ⊢ o 						
						_set_q { tav x { w o } } ⊢ { tav x } 
						lp0_def { l0 { mmv mev ev ns_m ns_e il } tav evv ev_n tx_n mtv tv_n tv ns_t { dd ep0 ec0 } } ⊢| 
					∐. _nil◂{} .
						∎ { { mmv mev ev ns_m ns_e il } tav evv ev_n tx_n mtv tv_n tv ns_t { dd ep0 ec0 } }	
			∎∎
		§ rtr_dst_ptn { { mmv mev ev ns_m ns_e il } mtv tv_n tv ns_t y td } 
			∐ td ⊢ _some◂td . 
				_nil {} ⊢ l2 
				_nil {} ⊢ al 
				slv_type { { mmv mev ev ns_m ns_e il } mtv tv_n tv ns_t al td l2 } ⊢ { { mmv mev ev ns_m ns_e il } mtv tv_n tv ns_t al kd l2 } 
				unify.f { tv y kd } ⊢ tv
				∎ { { mmv mev ev ns_m ns_e il } mtv tv_n tv ns_t }
			∐. . 
				∎ { { mmv mev ev ns_m ns_e il } mtv tv_n tv ns_t }
		§ mk_prs { yt i il { hpv hpv_n } { mmv mev mtv mv_n rv rv_n ev ev_n tv tv_n } irv tav evv tx_n ns_m ns_e ns_t gel { dd ep0 ec0 rtm_n lb_n } }
			» 0r _ ⊢ pv_n 
			_nil {} ⊢ al 
			alc_type_k.hp { pv_n al tav tv_n tv yt } ⊢ { pv_n al tav tv_n tv h } 
			stt_v.opq {} ⊢ q0 
			stt_v.ref q0 ⊢ h0 
			stt_v.r64 {} ⊢ h1 
			$ h0 ⊢ h0,h2 
			$ h1 ⊢ h1,h3 
			» 0r _ ⊢ r0 
			» 1r _ ⊢ r1 
			» 2r _ ⊢ r2 
			stt_v.hp { r0 h0 } ⊢ a0
			RP.atm a0 ⊢ a0 
			stt_v.hp { r1 h1 } ⊢ a1  
			RP.atm a1 ⊢ a1 
			_nil {} ⊢ l0 
			_cns { a1 l0 } ⊢ l0 
			_cns { a0 l0 } ⊢ l0 
			RP.rcd l0 ⊢ sp0 
			» 0r _ ⊢ r0 
			» 1r _ ⊢ r1 
			stt_v.hp { r0 h2 } ⊢ a0
			RP.atm a0 ⊢ a0 
			stt_v.hp { r1 h3 } ⊢ a1 
			RP.atm a1 ⊢ a1 
			stt_v.hp { r2 h } ⊢ a2
			RP.atm a2 ⊢ a2  
			_nil {} ⊢ l0 
			_cns { a2 l0 } ⊢ l0 
			_cns { a1 l0 } ⊢ l0 
			_cns { a0 l0 } ⊢ l0 		
			RP.rcd l0 ⊢ dp0 
			» 0r _ ⊢ rsp_s 
			» 0r _ ⊢ rsp_d 
			k_op { rsp_s sp0 rsp_d dp0 } ⊢ k 
			∎ { k i il { hpv hpv_n } { mmv mev mtv mv_n rv rv_n ev ev_n tv tv_n } irv tav evv tx_n ns_m ns_e ns_t gel { dd ep0 ec0 rtm_n lb_n } }

		§ add_grm { { w yt k } i il { hpv hpv_n } { mmv mev mtv mv_n rv rv_n ev ev_n tv tv_n } irv tav evv tx_n ns_m ns_e ns_t gel { dd ep0 ec0 rtm_n lb_n } }
			$ mv_n ⊢ mv_n,mv_n_0 
			_inc mv_n ⊢ mv_n  
			_nil {} ⊢ ns_m_g 
			_nil {} ⊢ ns_e_g 
			_nil {} ⊢ ns_t_g
			$ yt ⊢ yt,yt0 
			» "t" _ ⊢ tn0 
			» "prs" _ ⊢ e0 
			t_axm.s8 {} ⊢ y0 
			t_axm.r64 {} ⊢ y1 
			$ y0 ⊢ y0,y2 
			$ y1 ⊢ y1,y3 
			_nil {} ⊢ l0 
			_cns { yt0 l0 } ⊢ l0 
			_cns { y3 l0 } ⊢ l0 
			_cns { y2 l0 } ⊢ l0 
			RP.rcd l0 ⊢ yd 
			_nil {} ⊢ l0
			_cns { y1 l0 } ⊢ l0 
			_cns { y0 l0 } ⊢ l0 
			RP.rcd l0 ⊢ ys  
			imp { ys yd } ⊢ yp 
			RP.atm yp ⊢ yp 
			$ yt ⊢ yt,yt0 
			add_t { tv_n tv ns_t_g tn0 yt0 } ⊢ { tv_n tv ns_t_g }			
			$ ev_n ⊢ ev_n,en 
			add_e { tv_n tv evv ev ev_n ns_e_g e0 k yp } ⊢ { tv_n tv evv ev ev_n ns_e_g }
			_set_q { mmv mv_n_0 ns_m_g } ⊢ { mmv mv_n_0 }
			_set_q { mev mv_n_0 ns_e_g } ⊢ { mev mv_n_0 }
			_set_q { mtv mv_n_0 ns_t_g } ⊢ { mtv mv_n_0 }				
			_some mv_n_0 ⊢ o 
			_cns { { w o } ns_m } ⊢ ns_m 
			∎ { i il { hpv hpv_n } { mmv mev mtv mv_n rv rv_n ev ev_n tv tv_n } irv tav evv tx_n ns_m ns_e ns_t gel { dd ep0 ec0 rtm_n lb_n } }
		§§ slv_grm 
			§ act_regs {} 
				t_axm.r64 {} ⊢ y0 
				t_axm.r64 {} ⊢ y1 
				_nil {} ⊢ l0 
				_cns { y0 l0 } ⊢ l0 
				_cns { y1 l0 } ⊢ l0 
				∎ l0
			§
				@.grm_rle { { il mmv mev mtv ns_m } gr }  
					$ gr ⊢ 
					∐ ast.grm.ptn_cut◂gc . 
						grm_rle_cut { { il mmv mev mtv ns_m } gc } ⊢ { { il mmv mev mtv ns_m } gc yl } 
						ast.grm.ptn_cut gc ⊢ gr 
						∎ { { il mmv mev mtv ns_m } gr yl }
					∐ ast.grm.ptn_seq◂{ gp gr } .
						grm_ptn { { il mmv mev mtv ns_m } gp } ⊢ { { il mmv mev mtv ns_m } gp y } 
						grm_rle { { il mmv mev mtv ns_m } gr } ⊢ { { il mmv mev mtv ns_m } gr yl }
						_cns { y yl } ⊢ yl 
						ast.grm.ptn_seq { gp gr } ⊢ gr
						∎ { { il mmv mev mtv ns_m } gr yl }   
					∐. ast.grm.ptn_end◂{} . 
						ast.grm.ptn_end {} ⊢ gr 
						_nil {} ⊢ yl 
						∎ { { il mmv mev mtv ns_m } gr yl }
				@.grm_rle_cut { { il mmv mev mtv ns_m } gc } 
					$ gc ⊢ 
					∐ _cns◂{ gp gc } .
						grm_ptn { { il mmv mev mtv ns_m } gp } ⊢ { { il mmv mev mtv ns_m } gp y } 
						grm_rle_cut { { il mmv mev mtv ns_m } gc } ⊢ { { il mmv mev mtv ns_m } gc yl }
						_cns { y yl } ⊢ yl 
						_cns { gp gc } ⊢ gc 
						∎ { { il mmv mev mtv ns_m } gc yl } 
					∐. _nil◂{} . 
						_nil {} ⊢ gc 
						_nil {} ⊢ yl 
						∎ { { il mmv mev mtv ns_m } gc yl }
				@.grm_ptn { { il mmv mev mtv ns_m } gp }  
					$ gp ⊢ 
					∐ ast.grm.lst◂ga . 
						grm_atm { { il mmv mev mtv ns_m } ga } ⊢ { { il mmv mev mtv ns_m } ga y } 
						t_axm.lst y ⊢ y 
						ast.grm.lst ga ⊢ gp 
						∎ { { il mmv mev mtv ns_m } gp y }
					∐. ast.grm.atm◂ga . 
						grm_atm { { il mmv mev mtv ns_m } ga } ⊢ { { il mmv mev mtv ns_m } ga y } 
						ast.grm.atm ga ⊢ gp 
						∎ { { il mmv mev mtv ns_m } gp y }
				@.grm_atm { { il mmv mev mtv ns_m } ga }  
					$ ga ⊢ 
					∐ ast.grm.name◂en . 
						slv_ns_m { en mmv ns_m il } ⊢ { mmv ns_m il i_m } 
						_lod_q { mev i_m } ⊢ { mev i_m ns_e_g }
						_lod_q { mtv i_m } ⊢ { mtv i_m ns_t_g }
						» "t" _ ⊢ nt0 
						» "prs" _ ⊢ ne0 
						assoc { ns_e_g ne0 } ⊢ { ns_e_g ne0 oe } 
						assoc { ns_t_g nt0 } ⊢ { ns_t_g nt0 ot } 
						∐ oe ⊢ _some◂ve; ot ⊢ _some◂vt . 
							ast.grm.name ve ⊢ ga 
							var vt ⊢ y 
							RP.atm y ⊢ y 
							∎ { { il mmv mev mtv ns_m } ga y }
						∐. . 
							∎| 			
					∐. ast.grm.s8◂s . 
						t_axm.unt {} ⊢ y 
						ast.grm.s8 s ⊢ ga 
						∎ { { il mmv mev mtv ns_m } ga y }
			§ 
				@.f { g i il { hpv hpv_n } { mmv mev mtv mv_n rv rv_n ev ev_n tv tv_n } irv tav evv tx_n ns_m ns_e ns_t gel { dd ep0 ec0 rtm_n lb_n } }
					##» "slv_grm d0\n" _ ⊢ ee0 
					##_emt ee0 ⊢ _ 
					lp0 { g i il { hpv hpv_n } { mmv mev mtv mv_n rv rv_n ev ev_n tv tv_n } irv tav evv tx_n ns_m ns_e ns_t gel { dd ep0 ec0 rtm_n lb_n } } ⊢ { g i il { hpv hpv_n } { mmv mev mtv mv_n rv rv_n ev ev_n tv tv_n } irv tav evv tx_n ns_m ns_e ns_t gel { dd ep0 ec0 rtm_n lb_n } }
 					» 1r _ ⊢ lv 
					##	» "slv_grm d1\n" _ ⊢ ee0 
					##_emt ee0 ⊢ _ 
					lp1 { lv g i il { hpv hpv_n } { mmv mev mtv mv_n rv rv_n ev ev_n tv tv_n } irv tav evv tx_n ns_m ns_e ns_t gel { dd ep0 ec0 rtm_n lb_n } } ⊢ { lv g i il { hpv hpv_n } { mmv mev mtv mv_n rv rv_n ev ev_n tv tv_n } irv tav evv tx_n ns_m ns_e ns_t gel { dd ep0 ec0 rtm_n lb_n } }
					##	» "slv_grm d2\n" _ ⊢ ee0 
					##_emt ee0 ⊢ _ 
					lp2 { g i il { hpv hpv_n } { mmv mev mtv mv_n rv rv_n ev ev_n tv tv_n } irv tav evv tx_n ns_m ns_e ns_t gel { dd ep0 ec0 rtm_n lb_n } } ⊢ { g i il { hpv hpv_n } { mmv mev mtv mv_n rv rv_n ev ev_n tv tv_n } irv tav evv tx_n ns_m ns_e ns_t gel { dd ep0 ec0 rtm_n lb_n } }
					##	» "slv_grm d3\n" _ ⊢ ee0 
					##_emt ee0 ⊢ _ 
					lp3 { g i il { hpv hpv_n } { mmv mev mtv mv_n rv rv_n ev ev_n tv tv_n } irv tav evv tx_n ns_m ns_e ns_t gel { dd ep0 ec0 rtm_n lb_n } } ⊢ { g i il { hpv hpv_n } { mmv mev mtv mv_n rv rv_n ev ev_n tv tv_n } irv tav evv tx_n ns_m ns_e ns_t gel { dd ep0 ec0 rtm_n lb_n } }
					##	» "slv_grm d4\n" _ ⊢ ee0 
					##_emt ee0 ⊢ _ 
					∎ { g i il { hpv hpv_n } { mmv mev mtv mv_n rv rv_n ev ev_n tv tv_n } irv tav evv tx_n ns_m ns_e ns_t gel { dd ep0 ec0 rtm_n lb_n } }
				@.lp0 { g i il { hpv hpv_n } { mmv mev mtv mv_n rv rv_n ev ev_n tv tv_n } irv tav evv tx_n ns_m ns_e ns_t gel { dd ep0 ec0 rtm_n lb_n } }
					$ g ⊢ 
					∐ _cns◂{ { w e } g } . 
						$ mv_n ⊢ mv_n,mv_n_0 
						_inc mv_n ⊢ mv_n  
						_nil {} ⊢ ns_m_g 
						_nil {} ⊢ ns_e_g 
						_nil {} ⊢ ns_t_g
						» 1r _ ⊢ lv0 
						newvar_l { tv_n tv lv0 } ⊢ { tv_n tv lv0 yt }
						$ yt ⊢ yt,yt0 
						t_axm.opn yt0 ⊢ yt0 
						» "t" _ ⊢ tn0 
						» "prs" _ ⊢ e0 
						t_axm.s8 {} ⊢ y0 
						t_axm.r64 {} ⊢ y1 
						$ y0 ⊢ y0,y2 
						$ y1 ⊢ y1,y3 
						_nil {} ⊢ l0 
						_cns { yt0 l0 } ⊢ l0 
						_cns { y3 l0 } ⊢ l0 
						_cns { y2 l0 } ⊢ l0 
						RP.rcd l0 ⊢ yd 
						_nil {} ⊢ l0
						_cns { y1 l0 } ⊢ l0 
						_cns { y0 l0 } ⊢ l0 
						RP.rcd l0 ⊢ ys  
						imp { ys yd } ⊢ yp 
						RP.atm yp ⊢ yp 
						$ yt ⊢ yt,yt0 
						add_t { tv_n tv ns_t_g tn0 yt0 } ⊢ { tv_n tv ns_t_g }
						» 0r _ ⊢ ka0 
						k_op_axm ka0 ⊢ k 
						$ ev_n ⊢ ev_n,en 
						add_e { tv_n tv evv ev ev_n ns_e_g e0 k yp } ⊢ { tv_n tv evv ev ev_n ns_e_g }
						_set_q { mmv mv_n_0 ns_m_g } ⊢ { mmv mv_n_0 }
						_set_q { mev mv_n_0 ns_e_g } ⊢ { mev mv_n_0 }
						_set_q { mtv mv_n_0 ns_t_g } ⊢ { mtv mv_n_0 }				
						_some mv_n_0 ⊢ o 
						_cns { { w o } ns_m } ⊢ ns_m 
						lp0 { g i il { hpv hpv_n } { mmv mev mtv mv_n rv rv_n ev ev_n tv tv_n } irv tav evv tx_n ns_m ns_e ns_t gel { dd ep0 ec0 rtm_n lb_n } } ⊢ { g i il { hpv hpv_n } { mmv mev mtv mv_n rv rv_n ev ev_n tv tv_n } irv tav evv tx_n ns_m ns_e ns_t gel { dd ep0 ec0 rtm_n lb_n } } 
						_cns { { en yt e } g } ⊢ g 
						∎ { g i il { hpv hpv_n } { mmv mev mtv mv_n rv rv_n ev ev_n tv tv_n } irv tav evv tx_n ns_m ns_e ns_t gel { dd ep0 ec0 rtm_n lb_n } }
					∐. _nil◂{} . 
						_nil {} ⊢ g
						∎ { g i il { hpv hpv_n } { mmv mev mtv mv_n rv rv_n ev ev_n tv tv_n } irv tav evv tx_n ns_m ns_e ns_t gel { dd ep0 ec0 rtm_n lb_n } }
				@.lp1 { lv g i il { hpv hpv_n } { mmv mev mtv mv_n rv rv_n ev ev_n tv tv_n } irv tav evv tx_n ns_m ns_e ns_t gel { dd ep0 ec0 rtm_n lb_n } }
					$ g ⊢ 
					∐ _cns◂{ { en yt e } g } . 
						∐ e ⊢ ast.grm.act◂ga . 
							lp1_act { { lv yt ga } i il { hpv hpv_n } { mmv mev mtv mv_n rv rv_n ev ev_n tv tv_n } irv tav evv tx_n ns_m ns_e ns_t gel { dd ep0 ec0 rtm_n lb_n } } ⊢ { { lv yt ga } i il { hpv hpv_n } { mmv mev mtv mv_n rv rv_n ev ev_n tv tv_n } irv tav evv tx_n ns_m ns_e ns_t gel { dd ep0 ec0 rtm_n lb_n } }
							ast.grm.act ga ⊢ e 
							lp1 { lv g i il { hpv hpv_n } { mmv mev mtv mv_n rv rv_n ev ev_n tv tv_n } irv tav evv tx_n ns_m ns_e ns_t gel { dd ep0 ec0 rtm_n lb_n } } ⊢ { lv g i il { hpv hpv_n } { mmv mev mtv mv_n rv rv_n ev ev_n tv tv_n } irv tav evv tx_n ns_m ns_e ns_t gel { dd ep0 ec0 rtm_n lb_n } }							
							_cns { { en yt e } g } ⊢ g 
							∎ { lv g i il { hpv hpv_n } { mmv mev mtv mv_n rv rv_n ev ev_n tv tv_n } irv tav evv tx_n ns_m ns_e ns_t gel { dd ep0 ec0 rtm_n lb_n } }
						∐. . 
							lp1 { lv g i il { hpv hpv_n } { mmv mev mtv mv_n rv rv_n ev ev_n tv tv_n } irv tav evv tx_n ns_m ns_e ns_t gel { dd ep0 ec0 rtm_n lb_n } } ⊢ { lv g i il { hpv hpv_n } { mmv mev mtv mv_n rv rv_n ev ev_n tv tv_n } irv tav evv tx_n ns_m ns_e ns_t gel { dd ep0 ec0 rtm_n lb_n } }
							##_cns { { en yt e } g } ⊢ g 
							∎ { lv g i il { hpv hpv_n } { mmv mev mtv mv_n rv rv_n ev ev_n tv tv_n } irv tav evv tx_n ns_m ns_e ns_t gel { dd ep0 ec0 rtm_n lb_n } }
					∐. _nil◂{} . 
						_nil {} ⊢ g 
						∎ { lv g i il { hpv hpv_n } { mmv mev mtv mv_n rv rv_n ev ev_n tv tv_n } irv tav evv tx_n ns_m ns_e ns_t gel { dd ep0 ec0 rtm_n lb_n } }
				@.lp1_act { { lv yt ga } i il { hpv hpv_n } { mmv mev mtv mv_n rv rv_n ev ev_n tv tv_n } irv tav evv tx_n ns_m ns_e ns_t gel { dd ep0 ec0 rtm_n lb_n } }
					_nil {} ⊢ re 
					$ ga ⊢ 
					∐ ast.grm.act_cns◂{ drl dp lc rf gr go ga } . 
						grm_rle { { il mmv mev mtv ns_m } gr } ⊢ { { il mmv mev mtv ns_m } gr yl }  
						RP.rcd yl ⊢ yd 
						_inc lv ⊢ lv 
						inst { tv_n tv lv yd } ⊢ { tv_n tv lv yd } 
						crt_dst_ptn { lv rv tv tv_n rv_n re dp } ⊢ { lv rv tv tv_n rv_n re dp y0 } 
						$ yd ⊢ yd,yd0 
						unify.f { tv yd0 y0 } ⊢ tv 
						crt_dst_lst { lv rv tv tv_n rv_n re drl } ⊢ { lv rv tv tv_n rv_n re drl yrl }
						act_regs {} ⊢ yal 
						unify.f_lst { tv yal yrl } ⊢ tv 
						_dec lv ⊢ lv 
						gen { tv_n tv lv yd } ⊢ { tv_n tv lv yd } 
						$ go ⊢ 
						∐ _some◂{ dpr gar } . 
							_inc lv ⊢ lv 
							newvar_l { tv_n tv lv } ⊢ { tv_n tv lv ytr }
							lp1_act { { lv ytr gar } i il { hpv hpv_n } { mmv mev mtv mv_n rv rv_n ev ev_n tv tv_n } irv tav evv tx_n ns_m ns_e ns_t gel { dd ep0 ec0 rtm_n lb_n } } ⊢ { { lv ytr gar } i il { hpv hpv_n } { mmv mev mtv mv_n rv rv_n ev ev_n tv tv_n } irv tav evv tx_n ns_m ns_e ns_t gel { dd ep0 ec0 rtm_n lb_n } }
							crt_dst_ptn { lv rv tv tv_n rv_n re dpr } ⊢ { lv rv tv tv_n rv_n re dpr y0 } 
							$ ytr ⊢ ytr,ytr0
							unify.f { tv ytr0 y0 } ⊢ tv 
							_dec lv ⊢ lv 
							gen { tv_n tv lv ytr } ⊢ { tv_n tv lv ytr } 
							slv_r { lv { mmv mev ev ns_m ns_e il } rv tv tv_n rv_n re lc } ⊢ { lv { mmv mev ev ns_m ns_e il } rv tv tv_n rv_n re lc yr }  
							$ yt ⊢ yt,yt0 
							t_axm.opn yt0 ⊢ yt0 
							_inc lv ⊢ lv 
							inst { tv_n tv lv yr } ⊢ { tv_n tv lv yr }
							$ yr ⊢ yr,yr0 
							unify.f { tv yt0 yr0 } ⊢ tv  
							_dec lv ⊢ lv 
							gen { tv_n tv lv yr } ⊢ { tv_n tv lv yr }
							lp1_act { { lv yt ga } i il { hpv hpv_n } { mmv mev mtv mv_n rv rv_n ev ev_n tv tv_n } irv tav evv tx_n ns_m ns_e ns_t gel { dd ep0 ec0 rtm_n lb_n } } ⊢ { { lv yt ga } i il { hpv hpv_n } { mmv mev mtv mv_n rv rv_n ev ev_n tv tv_n } irv tav evv tx_n ns_m ns_e ns_t gel { dd ep0 ec0 rtm_n lb_n } }
							_some { dpr gar } ⊢ go 
							ast.grm.act_cns { drl dp lc rf gr go ga } ⊢ ga 
							∎ { { lv yt ga } i il { hpv hpv_n } { mmv mev mtv mv_n rv rv_n ev ev_n tv tv_n } irv tav evv tx_n ns_m ns_e ns_t gel { dd ep0 ec0 rtm_n lb_n } }
						∐. _none◂{} . 
							slv_r { lv { mmv mev ev ns_m ns_e il } rv tv tv_n rv_n re lc } ⊢ { lv { mmv mev ev ns_m ns_e il } rv tv tv_n rv_n re lc yr } 						
							$ yt ⊢ yt,yt0 
							t_axm.opn yt0 ⊢ yt0 
							_inc lv ⊢ lv 
							inst { tv_n tv lv yr } ⊢ { tv_n tv lv yr }
							$ yr ⊢ yr,yr0 
							unify.f { tv yt0 yr0 } ⊢ tv  
							_dec lv ⊢ lv 
							gen { tv_n tv lv yr } ⊢ { tv_n tv lv yr }
							lp1_act { { lv yt ga } i il { hpv hpv_n } { mmv mev mtv mv_n rv rv_n ev ev_n tv tv_n } irv tav evv tx_n ns_m ns_e ns_t gel { dd ep0 ec0 rtm_n lb_n } } ⊢ { { lv yt ga } i il { hpv hpv_n } { mmv mev mtv mv_n rv rv_n ev ev_n tv tv_n } irv tav evv tx_n ns_m ns_e ns_t gel { dd ep0 ec0 rtm_n lb_n } }
							_none {} ⊢ go 
							ast.grm.act_cns { drl dp lc rf gr go ga } ⊢ ga 
							∎ { { lv yt ga } i il { hpv hpv_n } { mmv mev mtv mv_n rv rv_n ev ev_n tv tv_n } irv tav evv tx_n ns_m ns_e ns_t gel { dd ep0 ec0 rtm_n lb_n } }						
					∐. ast.grm.act_end◂{ drl dp lc rf gr go } .
						grm_rle { { il mmv mev mtv ns_m } gr } ⊢ { { il mmv mev mtv ns_m } gr yl }  
						RP.rcd yl ⊢ yd 
						_inc lv ⊢ lv 
						inst { tv_n tv lv yd } ⊢ { tv_n tv lv yd } 
						crt_dst_ptn { lv rv tv tv_n rv_n re dp } ⊢ { lv rv tv tv_n rv_n re dp y0 } 
						$ yd ⊢ yd,yd0 
						unify.f { tv yd0 y0 } ⊢ tv 
						_dec lv ⊢ lv 
						gen { tv_n tv lv yd } ⊢ { tv_n tv lv yd } 
						_inc lv ⊢ lv 
						crt_dst_lst { lv rv tv tv_n rv_n re drl } ⊢ { lv rv tv tv_n rv_n re drl yrl }
						act_regs {} ⊢ yal 
						$ yrl ⊢ yrl,yrl0 
						unify.f_lst { tv yal yrl0 } ⊢ tv 
						_dec lv ⊢ lv 
						gen_lst { tv_n tv lv yrl } ⊢ { tv_n tv lv yrl } 
						$ go ⊢ 
						∐ _some◂{ dpr gar } . 
							_inc lv ⊢ lv 
							newvar_l { tv_n tv lv } ⊢ { tv_n tv lv ytr }
							lp1_act { { lv ytr gar } i il { hpv hpv_n } { mmv mev mtv mv_n rv rv_n ev ev_n tv tv_n } irv tav evv tx_n ns_m ns_e ns_t gel { dd ep0 ec0 rtm_n lb_n } } ⊢ { { lv ytr gar } i il { hpv hpv_n } { mmv mev mtv mv_n rv rv_n ev ev_n tv tv_n } irv tav evv tx_n ns_m ns_e ns_t gel { dd ep0 ec0 rtm_n lb_n } }
							crt_dst_ptn { lv rv tv tv_n rv_n re dpr } ⊢ { lv rv tv tv_n rv_n re dpr y0 } 
							$ ytr ⊢ ytr,ytr0 
							unify.f { tv ytr0 y0 } ⊢ tv 
							_dec lv ⊢ lv 
							gen { tv_n tv lv ytr } ⊢ { tv_n tv lv ytr } 
							slv_r { lv { mmv mev ev ns_m ns_e il } rv tv tv_n rv_n re lc } ⊢ { lv { mmv mev ev ns_m ns_e il } rv tv tv_n rv_n re lc yr }  
							$ yt ⊢ yt,yt0 
							t_axm.opn yt0 ⊢ yt0 
							_inc lv ⊢ lv 
							inst { tv_n tv lv yr } ⊢ { tv_n tv lv yr }
							$ yr ⊢ yr,yr0 
							unify.f { tv yt0 yr0 } ⊢ tv  
							_dec lv ⊢ lv 
							gen { tv_n tv lv yr } ⊢ { tv_n tv lv yr }
							_some { dpr gar } ⊢ go 
							ast.grm.act_end { drl dp lc rf gr go } ⊢ ga 
							∎ { { lv yt ga } i il { hpv hpv_n } { mmv mev mtv mv_n rv rv_n ev ev_n tv tv_n } irv tav evv tx_n ns_m ns_e ns_t gel { dd ep0 ec0 rtm_n lb_n } }
						∐. _none◂{} . 
							slv_r { lv { mmv mev ev ns_m ns_e il } rv tv tv_n rv_n re lc } ⊢ { lv { mmv mev ev ns_m ns_e il } rv tv tv_n rv_n re lc yr } 						
							$ yt ⊢ yt,yt0 
							t_axm.opn yt0 ⊢ yt0 
							_inc lv ⊢ lv 
							inst { tv_n tv lv yr } ⊢ { tv_n tv lv yr }
							$ yr ⊢ yr,yr0 
							unify.f { tv yt0 yr0 } ⊢ tv  
							_dec lv ⊢ lv 
							gen { tv_n tv lv yr } ⊢ { tv_n tv lv yr }
							_none {} ⊢ go 
							ast.grm.act_end { drl dp lc rf gr go } ⊢ ga 
							∎ { { lv yt ga } i il { hpv hpv_n } { mmv mev mtv mv_n rv rv_n ev ev_n tv tv_n } irv tav evv tx_n ns_m ns_e ns_t gel { dd ep0 ec0 rtm_n lb_n } }						
				@.lp2 { g i il { hpv hpv_n } { mmv mev mtv mv_n rv rv_n ev ev_n tv tv_n } irv tav evv tx_n ns_m ns_e ns_t gel { dd ep0 ec0 rtm_n lb_n } }
					$ g ⊢ 
					∐ _cns◂{ { en yt e } g } . 
						» 0r _ ⊢ lv 
						gen { tv_n tv lv yt } ⊢ { tv_n tv lv yt } 
						lp2 { g i il { hpv hpv_n } { mmv mev mtv mv_n rv rv_n ev ev_n tv tv_n } irv tav evv tx_n ns_m ns_e ns_t gel { dd ep0 ec0 rtm_n lb_n } } ⊢ { g i il { hpv hpv_n } { mmv mev mtv mv_n rv rv_n ev ev_n tv tv_n } irv tav evv tx_n ns_m ns_e ns_t gel { dd ep0 ec0 rtm_n lb_n } }							
						_cns { { en yt e } g } ⊢ g 
						∎ { g i il { hpv hpv_n } { mmv mev mtv mv_n rv rv_n ev ev_n tv tv_n } irv tav evv tx_n ns_m ns_e ns_t gel { dd ep0 ec0 rtm_n lb_n } }
					∐. _nil◂{} . 
						_nil {} ⊢ g 
						∎ { g i il { hpv hpv_n } { mmv mev mtv mv_n rv rv_n ev ev_n tv tv_n } irv tav evv tx_n ns_m ns_e ns_t gel { dd ep0 ec0 rtm_n lb_n } }
				@.lp3 { g i il { hpv hpv_n } { mmv mev mtv mv_n rv rv_n ev ev_n tv tv_n } irv tav evv tx_n ns_m ns_e ns_t gel { dd ep0 ec0 rtm_n lb_n } }
					$ g ⊢ 
					∐ _cns◂{ { en yt e } g } . 
						» 0r _ ⊢ pv_n 
						_nil {} ⊢ al 
						t_axm.opn yt ⊢ yt 
						alc_type_k.hp { pv_n al tav tv_n tv yt } ⊢ { pv_n al tav tv_n tv h } 
						stt_v.opq {} ⊢ q0 
						stt_v.ref q0 ⊢ h0 
						stt_v.r64 {} ⊢ h1 
						$ h0 ⊢ h0,h2 
						$ h1 ⊢ h1,h3 
						» 0r _ ⊢ r0 
						» 1r _ ⊢ r1 
						» 2r _ ⊢ r2 
						stt_v.hp { r0 h0 } ⊢ a0
						RP.atm a0 ⊢ a0 
						stt_v.hp { r1 h1 } ⊢ a1  
						RP.atm a1 ⊢ a1 
						_nil {} ⊢ l0 
						_cns { a1 l0 } ⊢ l0 
						_cns { a0 l0 } ⊢ l0 
						RP.rcd l0 ⊢ sp0 
						» 0r _ ⊢ r0 
						» 1r _ ⊢ r1 
						stt_v.hp { r0 h2 } ⊢ a0
						RP.atm a0 ⊢ a0 
						stt_v.hp { r1 h3 } ⊢ a1 
						RP.atm a1 ⊢ a1 
						stt_v.hp { r2 h } ⊢ a2
						RP.atm a2 ⊢ a2  
						_nil {} ⊢ l0 
						_cns { a2 l0 } ⊢ l0 
						_cns { a1 l0 } ⊢ l0 
						_cns { a0 l0 } ⊢ l0 
						RP.rcd l0 ⊢ dp0 
						» 0r _ ⊢ rsp_s 
						» 0r _ ⊢ rsp_d 
						k_op { rsp_s sp0 rsp_d dp0 } ⊢ k0 
						exc_q { evv en k0 } ⊢ { evv en k0 }
						lp3 { g i il { hpv hpv_n } { mmv mev mtv mv_n rv rv_n ev ev_n tv tv_n } irv tav evv tx_n ns_m ns_e ns_t gel { dd ep0 ec0 rtm_n lb_n } } ⊢ { g i il { hpv hpv_n } { mmv mev mtv mv_n rv rv_n ev ev_n tv tv_n } irv tav evv tx_n ns_m ns_e ns_t gel { dd ep0 ec0 rtm_n lb_n } }							
						_cns { { en e } g } ⊢ g 
						∎ { g i il { hpv hpv_n } { mmv mev mtv mv_n rv rv_n ev ev_n tv tv_n } irv tav evv tx_n ns_m ns_e ns_t gel { dd ep0 ec0 rtm_n lb_n } }
					∐. _nil◂{} . 
						_nil {} ⊢ g 
						∎ { g i il { hpv hpv_n } { mmv mev mtv mv_n rv rv_n ev ev_n tv tv_n } irv tav evv tx_n ns_m ns_e ns_t gel { dd ep0 ec0 rtm_n lb_n } }
			∎∎ 
		§§ emt_grm  
			§ act_regs {} 
				_nil {} ⊢ l0 
				stt_v.r64 {} ⊢ h0 
				» 1r _ ⊢ r0 
				stt_v.hp { r0 h0 } ⊢ a0 
				RP.atm a0 ⊢ p0 
				_cns { p0 l0 } ⊢ l0 
				stt_v.r64 {} ⊢ h0 
				» 0r _ ⊢ r0 
				stt_v.hp { r0 h0 } ⊢ a0 
				RP.atm a0 ⊢ p0 
				_cns { p0 l0 } ⊢ l0
				∎ l0  
			§ 
				@.rf { lb_n rf } 
					$ rf ⊢ 
					∐ ast.grm.lex◂{} .
						» "" _ ⊢ e 
						∎ { lb_n e }   
					∐ ast.grm.synt◂{} . 
						inc_x lb_n ⊢ { lb0 lb_n } 
						inc_x lb_n ⊢ { lb1 lb_n } 
						inc_x lb_n ⊢ { lb2 lb_n } 
						» _^ lb0,lb1,lb2 ⊢ lb0,lb1,lb2,s0 
							"\tjmp LB_" 1d' "\n" 
							"LB_" 0d' ":\n" 
							`	add r14,1 
							"LB_" 1d' ":\n" 
							`	cmp r14,r9
							"\tjge LB_" 2d' "\n" 
							"\tJZ_SPC BYTE [r13+8+r14], LB_" 0d' "\n"  
							"LB_" 2d' "\n" // 
						∎ { lb_n s0 }
					∐. ast.grm.line◂{} . 
						inc_x lb_n ⊢ { lb0 lb_n } 
						inc_x lb_n ⊢ { lb1 lb_n } 
						inc_x lb_n ⊢ { lb2 lb_n } 
						» _^ lb0,lb1,lb2 ⊢ lb0,lb1,lb2,s0 
							"\tjmp LB_" 1d' "\n" 
							"LB_" 0d' ":\n" 
							`	add r14,1 
							"LB_" 1d' ":\n" 
							`	cmp r14,r9
							"\tjge LB_" 2d' "\n" 
							"\tJZ_LINE_SPC BYTE [r13+8+r14], LB_" 0d' "\n"
							"LB_" 2d' "\n" // 
						∎ { lb_n s0 }
				@.rle { ret hl tav vs0 rsp_g e0 lb0 i0 evv lb_n rf gr }  
					$ gr ⊢ 
					∐ ast.grm.ptn_cut◂gc . 
						rle_cut { ret hl tav vs0 rsp_g e0 i0 evv lb_n rf gc } ⊢|
					∐ ast.grm.ptn_seq◂{ gp gr } .
						$ rf ⊢ rf,rf0 
						rf { lb_n rf0 } ⊢ { lb_n srf } 
						rp8.add_s8 { e0 srf } ⊢ e0 
						inc_x lb_n ⊢ { lb1 lb_n } 
						inc_x lb_n ⊢ { lb2 lb_n } 
						$ lb1 ⊢ lb1,olb1 
						_some olb1 ⊢ olb1 
						$ rsp_g ⊢ rsp_g,rsp_g0
						ptn { tav vs0 rsp_g e0 olb1 i0 evv lb_n gp } ⊢ { h tav vs0 rsp_g e0 olb1 i0 evv lb_n } 
						» _^ lb1,lb2 ⊢ lb1,lb2,s0 
							"\tjmp LB_" 1d' "\n" 
							"LB_" 0d' ":\n" // 
						rp8.add_s8 { e0 s0 } ⊢ e0  
						rb_rle { rsp_g0 hl e0 } ⊢ { rsp_g0 hl e0 } 
						$ lb0 ⊢ lb0,lb00 
						emt.ret lb00 ⊢ ret0 
						rp8.add_s8 { e0 ret0 } ⊢ e0 
						» _^ lb2 ⊢ lb2,s0 
							"LB_" 0d' ":\n" // 
						rp8.add_s8 { e0 s0 } ⊢ e0 
						_cns { h hl } ⊢ hl 
						_inc i0 ⊢ i0 
						rle { ret hl tav vs0 rsp_g e0 lb0 i0 evv lb_n rf gr } ⊢| 
					∐. ast.grm.ptn_end◂{} . 
						∎ { ret hl tav vs0 rsp_g e0 i0 evv lb_n }
				@.rle_cut { ret hl tav vs0 rsp_g e0 i0 evv lb_n rf gc } 
					$ gc ⊢ 
					∐ _cns◂{ gp gc } .
						$ rf ⊢ rf,rf0 
						rf { lb_n rf0 } ⊢ { lb_n srf } 
						rp8.add_s8 { e0 srf } ⊢ e0 
						inc_x lb_n ⊢ { lb1 lb_n } 
						inc_x lb_n ⊢ { lb2 lb_n } 
						$ lb1 ⊢ lb1,olb1 
						_some olb1 ⊢ olb1 
						$ rsp_g ⊢ rsp_g,rsp_g0
						ptn { tav vs0 rsp_g e0 olb1 i0 evv lb_n gp } ⊢ { h tav vs0 rsp_g e0 olb1 i0 evv lb_n } 
						» _^ lb1,lb2 ⊢ lb1,lb2,s0 
							"\tjmp LB_" 1d' "\n" 
							"LB_" 0d' ":\n" // 
						rp8.add_s8 { e0 s0 } ⊢ e0  
						rb_rle { rsp_g0 hl e0 } ⊢ { rsp_g0 hl e0 } 
						» _^ lb2,ret ⊢ lb2,ret,s0 
							`	POP_GRM_FAIL
							1'
							"LB_" 0d' ":\n" // 
						rp8.add_s8 { e0 s0 } ⊢ e0 
						_cns { h hl } ⊢ hl 
						rle_cut { ret hl tav vs0 rsp_g e0 i0 evv lb_n rf gc } ⊢| 
					∐. _nil◂{} . 
						∎ { ret hl tav vs0 rsp_g e0 i0 evv lb_n }
				@.rb_rle { rsp_g hl e0 } 
					$ rsp_g ⊢ rsp_g,rn 
					» 3r _ ⊢ sn 
					_shl { rn sn } ⊢ { rn _ }
					» _^ rn ⊢ rn,s0 
						"\tadd rsp," 0d' "\n" // 
					rp8.add_s8 { e0 s0 } ⊢ e0 
					∎ { rsp_g hl e0 } 
				@.ptn { tav vs0 rsp_g e0 lb0 i0 evv lb_n gp }  
					$ gp ⊢ 
					∐ ast.grm.lst◂ga . 
						$ ga ⊢ 
						∐ ast.grm.name◂en . 
							_lod_q { evv en } ⊢ { evv en k } 
							∐ k ⊢ k_op_axm◂ax0 . 
								∐ ax0'=e_axm.byt . 
									stt_v.r64 {} ⊢ h 
									$ i0 ⊢ i0,i00 
									» emt.REG_N _ ⊢ rbp0 
									_add { rbp0 rsp_g } ⊢ { rbp0 rsp_g }
									_inc rsp_g ⊢ rsp_g 
									stt_v.hp { rbp0 h } ⊢ a0 
									RP.atm a0 ⊢ a0 
									∐ lb0 ⊢ _some◂lb0 . 
										» _^ lb0 ⊢ lb0,s0 
											`	lea rax,[r14+1]
											`	cmp rax,r9
											"\tjge LB_" 0d' "\n" 
											`	movzx rdi,BYTE [r13+8+r14]
											`	push rdi 
											//
										_some lb0 ⊢ lb0
										rp8.add_s8 { e0 s0 } ⊢ e0 
										∎ { a0 tav vs0 rsp_g e0 lb0 i0 evv lb_n }
									∐. . 
										$ lb_n ⊢ lb_n,lb1 
										_inc lb_n ⊢ lb_n
										» _^ lb1 ⊢ lb1,s0 
											"\tlea rax,[r14+1]\n"
											"\tcmp rax,r9\n"
											"\tjl LB_" 0d' "\n"
											`	ret 
											"LB_" 0d' ":\n"  
											`	movzx rdi,BYTE [r13+8+r14]
											`	push rdi 
											//
										rp8.add_s8 { e0 s0 } ⊢ e0 
										∎ { a0 tav vs0 rsp_g e0 lb0 i0 evv lb_n }
								∐ ax0'=e_axm.scf_d . 
									stt_v.r64 {} ⊢ h 
									$ i0 ⊢ i0,i00 
									» emt.REG_N _ ⊢ rbp0 
									_add { rbp0 rsp_g } ⊢ { rbp0 rsp_g }
									_inc rsp_g ⊢ rsp_g 
									stt_v.hp { rbp0 h } ⊢ a0 
									RP.atm a0 ⊢ a0 
									∐ lb0 ⊢ _some◂lb0 . 
										» _^ lb0 ⊢ lb0,s0 
											"\tlea rax,[r14+1]\n"
											"\tcmp rax,r9\n"
											"\tjge LB_" 0d' "\n"
											` lea rdi,[r13+8+r14] 
											emt.push_c_regs 
											`	call scf_d
											emt.pop_c_regs 
											`	cmp rax,0 
											"\tjz LB_" 0d' "\n" 
											`	add r14,rsi
											`	push rdi 
											//
										_some lb0 ⊢ lb0
										rp8.add_s8 { e0 s0 } ⊢ e0 
										∎ { a0 tav vs0 rsp_g e0 lb0 i0 evv lb_n }
									∐. . 
										$ lb_n ⊢ lb_n,lb1 
										_inc lb_n ⊢ lb_n
										$ lb_n ⊢ lb_n,lb2 
										_inc lb_n ⊢ lb_n
										» _^ lb1,lb2 ⊢ lb1,lb2,s0 
											"\tlea rax,[r14+1]\n"
											"\tcmp rax,r9\n"
											"\tjl LB_" 0d' "\n"
											`	ret 
											"LB_" 0d' ":\n"  
											` lea rdi,[r13+8+r14] 
											emt.push_c_regs 
											`	call scf_d
											emt.pop_c_regs 
											`	cmp rax,1 
											"\tjz LB_" 0d' "\n"
											`	ret 
											"LB_" 1d' ":\n"  
											`	add r14,rsi
											`	push rdi 
											//
										rp8.add_s8 { e0 s0 } ⊢ e0 
										∎ { a0 tav vs0 rsp_g e0 lb0 i0 evv lb_n }
								∐. . 
									» "emt_grm 0" _ ⊢ ee0 
									_emt ee0 ⊢ ee0
									∎| 	 
							∐ k ⊢ k_op◂{ rsp_s ip0 rsp_d ip1 }; ip1 ⊢ RP.rcd◂l0; l0 ⊢ _cns◂{ pa0 l0 }; l0 ⊢ _cns◂{ pa1 l0 }; l0 ⊢ _cns◂{ pa2 l0 }; l0 ⊢ _nil◂{}; pa2 ⊢ RP.atm◂ah0; ah0 ⊢ stt_v.hp◂{ rh0 h0 } . 
								$ i0 ⊢ i0,i00 
								» emt.REG_N _ ⊢ r0 
								_add { r0 i00 } ⊢ { r0 i00 } 
								stt_v.hp { r0 h0 } ⊢ a0 
								RP.atm a0 ⊢ a0 
								» _^ en ⊢ en,s0 
									"\tcall GRM_" 0d' "\n"
									"\tpush r8\n" // 
								rp8.add_s8 { e0 s0 } ⊢ e0 
								∎ { a0 tav vs0 rsp_g e0 lb0 i0 evv lb_n }
							∐. . 
								» "emt_grm 1" _ ⊢ ee0 
									_emt ee0 ⊢ ee0
								∎| 			
						∐. ast.grm.s8◂s . 
							∐ lb0 ⊢ _some◂lb0 . 
								_s8_len s ⊢ { s ls } 
								» _^ ls,lb0 ⊢ ls,lb0,s0 
									"\tlea rax,[r14+" 0d' "]\n"
									"\tcmp rax,r9\n"
									"\tjge LB_" 1d' "\n"
									"\tlea rdi,[r13+8+r14]\n" // 
								rp8.add_s8 { e0 s0 } ⊢ e0  
								emt.cmp_s8.f { lb0 s } ⊢ { lb0 s e1 }
								» _^ ls ⊢ ls,s0 
									"\tadd r14," 0d' "\n"
									"\tpush unt_0\n" //
								rp8.add_s8 { e0 s0 } ⊢ e0 
								_nil {} ⊢ l0 
								stt_v.rcd l0 ⊢ q0 
								stt_v.ref q0 ⊢ h0 
								$ i0 ⊢ i0,i00 
								stt_v.hp { i00 h0 } ⊢ a0 
								RP.atm a0 ⊢ a0 
								_some lb0 ⊢ lb0
								∎ { a0 tav vs0 rsp_g e0 lb0 i0 evv lb_n } 
							∐. . 
								$ lb_n ⊢ lb_n,lb1 
								_inc lb_n ⊢ lb_n 
								$ lb_n ⊢ lb_n,lb2
								_inc lb_n ⊢ lb_n
								_s8_len s ⊢ { s ls } 
								» _^ ls,lb1 ⊢ ls,lb1,s0 
									"\tlea rax,[r14+" 0d' "]\n"
									"\tcmp rax,r9\n"
									"\tjge LB_" 1d' "\n"
									"\tlea rdi,[r13+8+r14]\n" // 
								rp8.add_s8 { e0 s0 } ⊢ e0  
								emt.cmp_s8.f { lb1 s } ⊢ { lb1 s e1 }
								» _^ ls,lb1,lb2 ⊢ ls,lb1,lb2,s0 
									"\tadd r14," 0d' "\n"
									"\tpush unt_0\n"
									"\tjmp LB_" 2d' "\n" 
									"LB_" 1d' "\n" 
									"\tret\n" 
									"LB_" 2d' "\n" //
								rp8.add_s8 { e0 s0 } ⊢ e0 
								_nil {} ⊢ l0 
								stt_v.rcd l0 ⊢ q0 
								stt_v.ref q0 ⊢ h0 
								$ i0 ⊢ i0,i00 
								stt_v.hp { i00 h0 } ⊢ a0 
								RP.atm a0 ⊢ a0 
								∎ { a0 tav vs0 rsp_g e0 lb0 i0 evv lb_n }
					∐. ast.grm.atm◂ga . 
						$ ga ⊢ 
						∐ ast.grm.name◂en . 
							_lod_q { evv en } ⊢ { evv en k } 
							∐ k ⊢ k_op_axm◂ax0 . 
								∐ ax0'=e_axm.byt . 
									$ lb0 ⊢ lb0,lb00 
									emt.ret lb00 ⊢ ret 
									$ lb_n ⊢ lb_n,lb1 
									_inc lb_n ⊢ lb_n 
									$ lb_n ⊢ lb_n,lb2 
									_inc lb_n ⊢ lb_n 
									» _^ ret,lb1,lb2 ⊢ ret,lb1,lb2,ec1 
										`	cmp r14,r9
										"\tjge LB_" 1d' "\n" 
										"\tjmp LB_" 2d' "\n" 
										"LB_" 1d' ":\n"
										`	mov r8,unt_1 
										0'
										"LB_" 2d' ":\n" 
										`	movzx rdi,BYTE [r13+8+r14]
										`	push rdi 
										`	add r14,1 
										//
									rp8.add_s8 { e0 ec1 } ⊢ e0 
									emt.mk_rbp rsp_g ⊢ { rsp_g rbp0 } 
									rset.set_t { vs0 rbp0 } ⊢ { vs0 rbp0 } 
									_inc rsp_g ⊢ rsp_g 			
									stt_v.r64_reg rbp0 ⊢ a0 			
									∎ { a0 tav vs0 rsp_g e0 lb0 i0 evv lb_n }
								∐ ax0'=e_axm.scf_d . 
									$ i0 ⊢ i0,i00 
									emt.mk_rbp rsp_g ⊢ { rsp_g rbp0 } 
									rset.set_t { vs0 rbp0 } ⊢ { vs0 rbp0 } 
									_inc rsp_g ⊢ rsp_g 
									stt_v.r64_reg rbp0 ⊢ a0 
									$ lb0 ⊢ lb0,lb00 
									emt.ret lb00 ⊢ ret0
									$ lb_n ⊢ lb_n,lbj0 
									_inc lb_n ⊢ lb_n 
									$ lb_n ⊢ lb_n,lbj1
									_inc lb_n ⊢ lb_n  
									» _^ ret0,lbj0,lbj1 ⊢ ret0,lbj0,lbj1,s0 
										`	cmp r14,r9
										"\tjge LB_" 1d' "\n"
										` lea rdi,[r13+8+r14] 
										emt.push_c_regs
										`	call scf_d
										emt.pop_c_regs
										`	cmp rax,0 
										"\tjz LB_" 1d' "\n" 
										`	add r14,rsi
										`	push rdi
										"\tjmp LB_" 2d' "\n"  
										"LB_" 1d' ":\n" 
										`	mov r8,unt_1
										0' 
										"LB_" 2d' ":\n" 
										//
									rp8.add_s8 { e0 s0 } ⊢ e0 
									∎ { a0 tav vs0 rsp_g e0 lb0 i0 evv lb_n }
								∐ ax0'=e_axm.scf_x . 
									$ i0 ⊢ i0,i00 
									emt.mk_rbp rsp_g ⊢ { rsp_g rbp0 } 
									rset.set_t { vs0 rbp0 } ⊢ { vs0 rbp0 } 
									_inc rsp_g ⊢ rsp_g 
									stt_v.r64_reg rbp0 ⊢ a0 
									$ lb0 ⊢ lb0,lb00 
									emt.ret lb00 ⊢ ret0
									$ lb_n ⊢ lb_n,lbj0 
									_inc lb_n ⊢ lb_n 
									$ lb_n ⊢ lb_n,lbj1
									_inc lb_n ⊢ lb_n  
									» _^ ret0,lbj0,lbj1 ⊢ ret0,lbj0,lbj1,s0 
										`	cmp r14,r9
										"\tjge LB_" 1d' "\n"
										` lea rdi,[r13+8+r14] 
										emt.push_c_regs
										`	call scf_x
										emt.pop_c_regs
										`	cmp rax,0 
										"\tjz LB_" 1d' "\n" 
										`	add r14,rsi
										`	push rdi
										"\tjmp LB_" 2d' "\n"  
										"LB_" 1d' ":\n" 
										`	mov r8,unt_1
										0' 
										"LB_" 2d' ":\n" 
										//
									rp8.add_s8 { e0 s0 } ⊢ e0 
									∎ { a0 tav vs0 rsp_g e0 lb0 i0 evv lb_n }
								∐. . 
									» "emt_grm 2" _ ⊢ ee0 
									_emt ee0 ⊢ ee0
									∎| 	 
							∐ k ⊢ k_op◂{ rsp_s ip0 rsp_d ip1 } . 
								∐ ip1 ⊢ RP.rcd◂l0; l0 ⊢ _cns◂{ pa0 l0 }; l0 ⊢ _cns◂{ pa1 l0 }; l0 ⊢ _cns◂{ pa2 l0 }; l0 ⊢ _nil◂{}; pa2 ⊢ RP.atm◂ah0; ah0 ⊢ stt_v.hp◂{ rh0 h0 }; h0 ⊢ stt_v.adt◂{ ax0 ql0 } . 
									_lod_q { tav ax0 } ⊢ { tav ax0 { aw o0 } } 
									∐ o0 ⊢ _some◂{ vl0 kl0 pvl0 ipl0 } . 
										$ lb0 ⊢ lb0,lb00 
										emt.ret lb00 ⊢ ret 
										$ lb_n ⊢ lb_n,lb1 
										_inc lb_n ⊢ lb_n 
										$ lb_n ⊢ lb_n,lb2 
										_inc lb_n ⊢ lb_n 
										» _^ en,ret,lb1,lb2 ⊢ en,ret,lb1,lb2,ec1 
											"\tcall GRM_" 0d' "\n" 
											`	cmp BYTE [r8+6],0
											"\tjnz LB_" 2d' "\n" 
											"\tjmp LB_" 3d' "\n" 
											"LB_" 2d' ":\n"
											1' 
											"LB_" 3d' ":\n" 
											//
										rp8.add_s8 { e0 ec1 } ⊢ e0 
										mk_adt.f { ql0 pvl0 ipl0 } ⊢ ipl0 
										» 0r _ ⊢ ia0
										lst.nth { ipl0 ia0 } ⊢ { iap0 ipl0 }
										$ iap0 ⊢ iap0,iap00 
										$ vs0 ⊢ vs0,v0
										reg_vs.f {} ⊢ vs1 
										rset.or { vs0 vs1 } ⊢ { vs0 vs1 }  
										stt_v.ptn_of_hp { vs0 iap00 } ⊢ { vs0 ipp0 } 
										rset.sub { vs0 vs1 } ⊢ { vs0 vs1 }
										» 0r _ ⊢ ir0 
										» 1r _ ⊢ ir1 
										» 3r _ ⊢ ir3 
										rset.set_t { vs0 ir0 } ⊢ { vs0 ir0 } 
										rset.set_t { vs0 ir1 } ⊢ { vs0 ir1 } 
										rset.set_t { vs0 ir3 } ⊢ { vs0 ir3 }
										rset.max_t vs0 ⊢ { vs0 rbp }
										emt.brk_rsp { rsp_g rbp } ⊢ { rsp_g rbp es1 } 
										rp8.add_s8 { e0 es1 } ⊢ e0 
										» 2r _ ⊢ r0 
										∐ iap0 ⊢ stt_v.ref◂iq0 .
											stt_v.ref iq0 ⊢ iap0 
											stt_v.hp { r0 iap0 } ⊢ iy 
											RP.atm iy ⊢ iy 
											$ ipp0 ⊢ ipp0,a0 
											» "emt_grm DX3" _ ⊢ ex0 
											_emt ex0 ⊢ _  
											emt.mov_ptn2.f2 { tav rsp_g v0 iy ipp0 e0 } ⊢ { tav rsp_g v0 e0 }  
											∎ { a0 tav vs0 rsp_g e0 lb0 i0 evv lb_n }
										∐. . 
											» _^ en ⊢ en,s0 
												`	mov rdi,[r8+8]
												`	FREE_LN r8 
												`	mov r8,rdi
												 // 
											rp8.add_s8 { e0 s0 } ⊢ e0 
											stt_v.hp { r0 iap0 } ⊢ iy 
											RP.atm iy ⊢ iy 
											$ ipp0 ⊢ ipp0,a0 
											» "emt_grm DX2" _ ⊢ ex0 
											_emt ex0 ⊢ _  
											emt.mov_ptn2.f2 { tav rsp_g v0 iy ipp0 e0 } ⊢ { tav rsp_g v0 e0 } 
											» "emt_grm DX4" _ ⊢ ex0 
											_emt ex0 ⊢ _  
											∎ { a0 tav vs0 rsp_g e0 lb0 i0 evv lb_n }
									∐. . 
										» "emt_grm 3" _ ⊢ ee0 
										_emt ee0 ⊢ ee0
										∎|
								∐. . 
									stt_v.pnt.f ip1 ⊢ sip1 
									» "emt_grm 6" _ ⊢ ee0 
									_emt ee0 ⊢ ee0
									_emt sip1 ⊢ sip1 
									∎|  
							∐. . 
								» "emt_grm 4" _ ⊢ ee0 
								_emt ee0 ⊢ ee0
								∎| 			
						∐. ast.grm.s8◂s . 
							$ lb0 ⊢ lb0,lb00 
							emt.ret lb00 ⊢ ret 
							inc_x lb_n ⊢ { lb1 lb_n } 
							inc_x lb_n ⊢ { lb2 lb_n } 
							_s8_len s ⊢ { s ls } 
							» _^ ls,ret,lb1,lb2 ⊢ ls,ret,lb1,lb2,ec1 
								"\tlea rax,[r14+" 0d' "]\n"
								"\tcmp rax,r9\n"
								"\tjg LB_" 2d' "\n"
								"\tjmp LB_" 3d' "\n" 
								"LB_" 2d' ":\n" 
								`	mov r8,unt_1
								1' 
								"LB_" 3d' ":\n" 
								"\tlea rdi,[r13+8+r14]\n" // 
							rp8.add_s8 { e0 ec1 } ⊢ e0
							$ lb_n ⊢ lb_n,lb3
							_inc lb_n ⊢ lb_n 
							$ lb_n ⊢ lb_n,lb4
							_inc lb_n ⊢ lb_n
							emt.cmp_s8.f { lb3 s } ⊢ { lb3 s e1 }
							rp8.cct { e0 e1 } ⊢ e0 
							» _^ ls,lb3,lb4,ret ⊢ ls,lb3,lb4,ret,s0 
								"\tjmp LB_" 2d' "\n" 
								"LB_" 1d' ":\n"
								`	mov r8,unt_1
								3' 
								"LB_" 2d' ":\n" 
								"\tadd r14," 0d' "\n" 
								//
							rp8.add_s8 { e0 s0 } ⊢ e0 
							##_nil {} ⊢ l0 
							##stt_v.rcd l0 ⊢ q0 
							##stt_v.ref q0 ⊢ h0 
							##» emt.REG_N _ ⊢ rbp0 
							##_add { rbp0 rsp_g } ⊢ { rbp0 rsp_g }
							##_inc rsp_g ⊢ rsp_g  
							##rset.set_t { vs0 rbp0 } ⊢ { vs0 rbp0 } 
							##stt_v.hp { rbp0 h0 } ⊢ a0 
							_nil {} ⊢ l0 
							RP.rcd l0 ⊢ a0
							##RP.atm a0 ⊢ a0 
							∎ { a0 tav vs0 rsp_g e0 lb0 i0 evv lb_n } 		
			§ 
				@.f { gfl ret { eg0 eds e0 } ev evv rv irv tav tv tv_n lb_n g }
					$ g ⊢ 
					∐ _cns◂{ { en e } g } . 
						∐ e ⊢ ast.grm.act◂ga .
							_lod_q { evv en } ⊢ { evv en k } 
							_lod_q { ev en } ⊢ { ev en yk }
							∐ k ⊢ k_op◂{ rsp_s ip0 rsp_d ip1 }; ip1 ⊢ RP.rcd◂l0; l0 ⊢ _cns◂{ pa0 l0 }; l0 ⊢ _cns◂{ pa1 l0 }; l0 ⊢ _cns◂{ pa2 l0 }; l0 ⊢ _nil◂{}; pa2 ⊢ RP.atm◂ah0; ah0 ⊢ stt_v.hp◂{ rh0 h0 } . 
								» 1r _ ⊢ lv0 
								newvar_l { tv_n tv lv0 } ⊢ { tv_n tv lv0 y0 }
								newvar_l { tv_n tv lv0 } ⊢ { tv_n tv lv0 y1 }
								t_axm.r64 {} ⊢ y3 
								t_axm.s8 {} ⊢ y4 
								_nil {} ⊢ l0 
								$ y0 ⊢ y0,y00 
								_cns { y0 l0 } ⊢ l0 
								_cns { y3 l0 } ⊢ l0 
								_cns { y4 l0 } ⊢ l0 
								RP.rcd l0 ⊢ yd0 
								imp { y1 yd0 } ⊢ yu0 
								RP.atm yu0 ⊢ yu0
								var yk ⊢ yk 
								RP.atm yk ⊢ yk
								inst { tv_n tv lv0 yk } ⊢ { tv_n tv lv0 yk } 
								$ yk ⊢ yk,yk0 
								unify.f { tv yu0 yk0 } ⊢ tv
								_dec lv0 ⊢ lv0 
								gen { tv_n tv lv0 yk } ⊢ { tv_n tv lv0 yk } 
								» _^ en,ret ⊢ en,ret,s0 
									"ETR_" 0d' ":\n" 
									`	mov r9,0x0000_ffff_ffff_ffff
									`	and r9,[r13]
									"\tcall GRM_" 0d' "\n" 
									1'
									"GRM_" 0d' ":\n" //
								rp8.add_s8 { e0 s0 } ⊢ e0 
								act { gfl ret y00 h0 ga { eg0 eds e0 } ev evv rv irv tav tv tv_n lb_n } ⊢ { gfl ret { eg0 eds e0 } ev evv rv irv tav tv tv_n lb_n } 
								f { gfl ret { eg0 eds e0 } ev evv rv irv tav tv tv_n lb_n g } ⊢| 
							∐. . 
								» "emt_grm 5" _ ⊢ ee0 
									_emt ee0 ⊢ ee0
								∎| 
						∐. .  
							f { gfl ret { eg0 eds e0 } ev evv rv irv tav tv tv_n lb_n g } ⊢|
					∐. _nil◂{} . 
						∎ { gfl ret { eg0 eds e0 } ev evv rv irv tav tv tv_n lb_n }
				@.act_rmf { gfl rb ret rsp_g go { eg0 eds e0 } ev evv rv irv tav tv tv_n rl lb_n }
					$ go ⊢
					∐ _none◂{} . 
						» _^ rsp_g ⊢ rsp_g,s0 
							"\tmov QWORD [rsp+8*" 0d' "],r14\n" //
						rp8.add_s8 { e0 s0 } ⊢ e0
						∎  { gfl rb ret rsp_g { eg0 eds e0 } ev evv rv irv tav tv tv_n rl lb_n } 
					∐. _some◂{ dpr gar } .
						$ dpr ⊢ dpr,dpr0 
						crt_type_k.dst_ptn { tv rv dpr0 } ⊢ { tv rv k0 }
						$ k0 ⊢ k0,k00 
						t_axm.opn k00 ⊢ ok0 
						» 0r _ ⊢ pv_n
						_nil {} ⊢ al 
						$ ok0 ⊢ ok0,ok00 
						alc_type_k.hp { pv_n al tav tv_n tv ok00 } ⊢ { pv_n al tav tv_n tv hok0 } 
						$ lb_n ⊢ lb_n,lb0
						_inc lb_n ⊢ lb_n 
						» _^ lb0 ⊢ lb0,ret_r 
							"\tjmp LB_" 0d' "\n" //
						act { gfl ret_r ok0 hok0 gar { eg0 eds e0 } ev evv rv irv tav tv tv_n lb_n } ⊢ { gfl ret_r { eg0 eds e0 } ev evv rv irv tav tv tv_n lb_n }
						» _^ lb0 ⊢ lb0,sl0 
							"LB_" 0d' ":\n" // 
						rp8.add_s8 { e0 sl0 } ⊢ e0 
						stt_v.mk_rset_env_x { irv rl } ⊢ { irv rl vs0 } 
						» 2r _ ⊢ x2 
						rset.set_t { vs0 x2 } ⊢ { vs0 x2 }
						$ k0 ⊢ k0,k00 
						alc_type_k.f { pv_n al tav tv_n tv vs0 k00 } ⊢ { pv_n al tav tv_n tv vs0 pk0 } 
						$ k0 ⊢ k0,k00 
						alc_type_k.hp { pv_n al tav tv_n tv k00 } ⊢ { pv_n al tav tv_n tv hk0 } 
						inc_x lb_n ⊢ { lb1 lb_n }  
						inc_x lb_n ⊢ { lb2 lb_n }  
						» _^ rb,ret,lb1,lb2 ⊢ rb,ret,lb1,lb2,ec1 
							`	cmp BYTE [r8+6],0
							"\tjnz LB_" 2d' "\n" 
							"\tjmp LB_" 3d' "\n" 
							"LB_" 2d' ":\n"
							0'
							`	POP_GRM_FAIL
							1' 
							"LB_" 3d' ":\n" 
							//
							rp8.add_s8 { e0 ec1 } ⊢ e0 						
							» _^ rsp_g ⊢ rsp_g,s0 
								"\tmov QWORD [rsp+8*" 0d' "],r14\n" //
							rp8.add_s8 { e0 s0 } ⊢ e0
							∐ hk0 ⊢ stt_v.ref◂iq0 .
								stt_v.ref iq0 ⊢ hk0 
								stt_v.hp { x2 hk0 } ⊢ a0 
								RP.atm a0 ⊢ pr0 						 
								$ pk0 ⊢ pk0,pk00 
								» "emt_grm DX5" _ ⊢ ex0 
								_emt ex0 ⊢ _  
								emt.mov_ptn2.f2 { tav rsp_g vs0 pr0 pk00 e0 } ⊢ { tav rsp_g vs0 e0 }  
								_nil {} ⊢ dl 
								emt.idx.crt_ptn { irv dpr pk0 rl dl } ⊢ { irv rl dl } 																			
								∎ { gfl rb ret rsp_g { eg0 eds e0 } ev evv rv irv tav tv tv_n rl lb_n } 
							∐. . 
								» _^ _ ⊢ s0 
									`	mov rdi,[r8+8]
									`	FREE_LN r8 
									`	mov r8,rdi 
									 // 
								rp8.add_s8 { e0 s0 } ⊢ e0 
								stt_v.hp { x2 hk0 } ⊢ a0 
								RP.atm a0 ⊢ pr0 						 
								$ pk0 ⊢ pk0,pk00
								» "emt_grm DX0" _ ⊢ ex0 
								_emt ex0 ⊢ _  
								emt.mov_ptn2.f2 { tav rsp_g vs0 pr0 pk00 e0 } ⊢ { tav rsp_g vs0 e0 }  
								» "emt_grm DX1" _ ⊢ ex0 
								_emt ex0 ⊢ _  
								_nil {} ⊢ dl 
								emt.idx.crt_ptn { irv dpr pk0 rl dl } ⊢ { irv rl dl } 																			
								∎ { gfl rb ret rsp_g { eg0 eds e0 } ev evv rv irv tav tv tv_n rl lb_n } 
				@.act_mtc { gfl ret kh0 h0 { drl dp lc rf gr go } { eg0 eds e0 } ev evv rv irv tav tv tv_n lb_n }
					$ lb_n ⊢ lb_n,lb0 
					_inc lb_n ⊢ lb_n 
					» 0r _ ⊢ i0 
					_nil {} ⊢ hl
					$ lb0 ⊢ lb0,lb00 
					_some lb00 ⊢ olb0 
					rset.ini {} ⊢ vs0 
					» 0r _ ⊢ ir0 
					» 1r _ ⊢ ir1 
					» 3r _ ⊢ ir3 
					rset.set_t { vs0 ir0 } ⊢ { vs0 ir0 }
					rset.set_t { vs0 ir1 } ⊢ { vs0 ir1 }
					rset.set_t { vs0 ir3 } ⊢ { vs0 ir3 }
					» 0r _ ⊢ rsp_g 
					rle { ret hl tav vs0 rsp_g e0 olb0 i0 evv lb_n rf gr } ⊢ { ret hl tav vs0 rsp_g e0 i0 evv lb_n }  
					rp8.e {} ⊢ erb 
					rb_rle { rsp_g hl erb } ⊢ { rsp_g hl erb } 
					rp8.mk_s8 erb ⊢ { erb rb }
					rev hl ⊢ hl 
					RP.rcd hl ⊢ gp0 
					_nil {} ⊢ rl 
					_nil {} ⊢ dl 
					emt.idx.crt_ptn { irv dp gp0 rl dl } ⊢ { irv rl dl } 																			
					act_regs {} ⊢ ipl 
					emt.idx.crt_lst { irv drl ipl rl dl } ⊢ { irv rl dl } 
					act_rmf { gfl rb ret rsp_g go { eg0 eds e0 } ev evv rv irv tav tv tv_n rl lb_n }  ⊢ { gfl rb ret rsp_g { eg0 eds e0 } ev evv rv irv tav tv tv_n rl lb_n } 					
					» 2r _ ⊢ r0 
					$ h0 ⊢ h0,h00 
					stt_v.hp { r0 h00 } ⊢ a0 
					RP.atm a0 ⊢ pr0 
					$ lb_n ⊢ lb_n,lbe 
					_inc lb_n ⊢ lb_n 
					» _^ lbe,rsp_g ⊢ lbe,rsp_g,sc0 
						"\tmov r13,QWORD [rsp+16+8*" 1d' "]\n"
						"\tmov r14,QWORD [rsp+8*" 1d' "]\n"
						"\tjmp LB_" 0d' "\n" // 
					rp8.add_s8 { e0 sc0 } ⊢ e0 
					rp8.e {} ⊢ ee0 
					» _^ lbe ⊢ lbe,sc0 
						"LB_" 0d' "\n" // 
					rp8.add_s8 { ee0 sc0 } ⊢ ee0
					» "emt_grm DX6" _ ⊢ ex0 
					_emt ex0 ⊢ _  
					inc_x lb_n ⊢ { lbr lb_n } 
					» _^ lbr ⊢ lbr,ret0 
						"\tjmp LB_" 0d' "\n" //
					» 0r _ ⊢ rsp_d 
					f_inl { { rsp_d pr0 kh0 } ret0 } ⊢ ft 
					_nil {} ⊢ cl
					emt.lc_code.ret_f { { gfl cl } lb_n { ev evv } rsp_g { rv irv } tav tv_n tv lc { eg0 eds ee0 } rl ft } ⊢ { { gfl cl } lb_n { ev evv } rsp_g { rv irv } tav tv_n tv { eg0 eds ee0 } rl ft } 
					» "emt_grm DX7" _ ⊢ ex0 
					_emt ex0 ⊢ _
					rp8.cct { e0 ee0 } ⊢ e0 
					» _^ lbr,lb0,ret ⊢ lbr,lb0,ret,sl0 
						"LB_" 0d' ":\n" 
						`	cmp BYTE [r8+6],0
						"\tjnz LB_" 1d' "\n" 
						`	POP_GRM_SCC
						2'
						"LB_" 1d' ":\n" 
						//
					rp8.add_s8 { e0 sl0 } ⊢ e0 
					∎ { gfl ret { eg0 eds e0 } ev evv rv irv tav tv tv_n lb_n } 
				@.act { gfl ret kh0 h0 ga { eg0 eds e0 } ev evv rv irv tav tv tv_n lb_n } 
					» _^ _ ⊢ s0
						`	PUSH_GRM
						// 
					rp8.add_s8 { e0 s0 } ⊢ e0 
					act_lp { gfl ret kh0 h0 ga { eg0 eds e0 } ev evv rv irv tav tv tv_n lb_n } ⊢|
				@.act_lp { gfl ret kh0 h0 ga { eg0 eds e0 } ev evv rv irv tav tv tv_n lb_n }
					$ ga ⊢ 
					∐ ast.grm.act_cns◂{ drl dp lc rf gr go ga } . 
						$ h0 ⊢ h0,h00 
						$ kh0 ⊢ kh0,kh00 
						act_mtc { gfl ret kh00 h00 { drl dp lc rf gr go } { eg0 eds e0 } ev evv rv irv tav tv tv_n lb_n } ⊢ { gfl ret { eg0 eds e0 } ev evv rv irv tav tv tv_n lb_n } 						
						» _^ _ ⊢ s0 
							`	RB_GRM
							//
						rp8.add_s8 { e0 s0 } ⊢ e0 
						act_lp { gfl ret kh0 h0 ga { eg0 eds e0 } ev evv rv irv tav tv tv_n lb_n } ⊢| 
					∐. ast.grm.act_end◂{ drl dp lc rf gr go } .
						act_mtc { gfl ret kh0 h0 { drl dp lc rf gr go } { eg0 eds e0 } ev evv rv irv tav tv tv_n lb_n } ⊢ { gfl ret { eg0 eds e0 } ev evv rv irv tav tv tv_n lb_n } 						
						» _^ _ ⊢ s0 
							`	POP_GRM_FAIL 
							//
						rp8.add_s8 { e0 s0 } ⊢ e0 
						$ ret ⊢ ret,ret0 
						rp8.add_s8 { e0 ret0 } ⊢ e0 
						∎ { gfl ret { eg0 eds e0 } ev evv rv irv tav tv tv_n lb_n }
			∎∎
		§ lst_v { tv_n tv } 
			_nil {} ⊢ l 
			newvar_i { tv_n tv } ⊢ { tv_n tv i0 } 
			$ i0 ⊢ i0,i1 
			var i0 ⊢ y0 
			RP.atm y0 ⊢ y0 
			t_axm.lst y0 ⊢ y0 
			abs { i1 y0 } ⊢ y0 
			RP.atm y0 ⊢ y0 
			∎ { tv_n tv y0 }  

		§ opn_v { tv_n tv } 
			_nil {} ⊢ l 
			newvar_i { tv_n tv } ⊢ { tv_n tv i0 } 
			$ i0 ⊢ i0,i1 
			var i0 ⊢ y0 
			RP.atm y0 ⊢ y0 
			t_axm.opn y0 ⊢ y0 
			abs { i1 y0 } ⊢ y0 
			RP.atm y0 ⊢ y0 
			∎ { tv_n tv y0 }  
		
		§ arr_v { tv_n tv } 
			_nil {} ⊢ l 
			newvar_i { tv_n tv } ⊢ { tv_n tv i0 } 
			$ i0 ⊢ i0,i1 
			var i0 ⊢ y0 
			RP.atm y0 ⊢ y0 
			t_axm.arr y0 ⊢ y0 
			abs { i1 y0 } ⊢ y0 
			RP.atm y0 ⊢ y0 
			∎ { tv_n tv y0 }  
		§ ss_rcd_n { n m e } 
			∐ n'=2r . 
				» _^ n,m ⊢ n,m,s 
					"%define SS_RCD_2_MAX (1<<16)\n" 
					"\tBSS_SS_RCD " 0d' ",SS_RCD_2_MAX\n" 
					//
				rp8.add_s8 { e s } ⊢ e 
				∎ { n m e }
			∐ n'=3r . 
				» _^ n,m ⊢ n,m,s 
					"%define SS_RCD_3_MAX (1<<14)\n" 
					"\tBSS_SS_RCD " 0d' ",SS_RCD_3_MAX\n" 
					//
				rp8.add_s8 { e s } ⊢ e 
				∎ { n m e }
			∐. . 
				» _^ n,m ⊢ n,m,s 
					"%define SS_RCD_" 0d' "_MAX 800\n"
					"\tBSS_SS_RCD " 0d' ",SS_RCD_" 0d' "_MAX\n" 
					//
				rp8.add_s8 { e s } ⊢ e 
				∎ { n m e }
		§ @.ss_rcd_n_lp { n N m e } 
			∐ n'=N' . 
				∎ { N m e } 
			∐. . 
				ss_rcd_n { n m e } ⊢ { n m e } 
				_inc n ⊢ n 
				ss_rcd_n_lp { n N m e } ⊢| 
		§ ss_init_n { lb top vct null n m e }
			» _^ lb,top,vct,null,n,m ⊢ lb,top,vct,null,n,m,s 
				"\tmov QWORD [" 1' "]," 2' "\n" 
				`	mov rdi,0 
				"\tmov rax," 2' "\n" 
				"ss_lp_" 0' ":\n" 
				"\tcmp rdi," 5' "\n" 
				"\tjz ss_end_" 0' "\n" 
				`	add rdi,1 
				"\tlea rsi,[rax+8*" 4d' "]\n" 
				`	mov QWORD [rax],rsi 
				`	mov rax,rsi 
				"\tjmp ss_lp_" 0' "\n" 
				"ss_end_" 0' ":\n" 
				"\tmov rsi," 3' "\n" 
				`	mov [rax],rsi 
				// 
			rp8.add_s8 { e s } ⊢ e 
			∎ { lb top vct null n m e } 
		§ ss_init_rcd { n m e } 
			» _^ n ⊢ n,lb 
				"rcd_" 0d' // 
			» _^ n ⊢ n,top 
				"SS_RCD_" 0d' "_TOP" //
			» _^ n ⊢ n,vct 
				"SS_RCD_" 0d' "_VCT" // 
			» _^ n ⊢ n,M 
				"SS_RCD_" 0d' "_MAX" //
			» 0xffffffffffff0000r _ ⊢ nl 
			_add { nl n } ⊢ { nl n }
			» _^ nl ⊢ nl,null 
				0d' //
			» _^ n ⊢ n,etr 
				"\ninit_ss_rcd_" 0d' ":\n"
				"\tmov QWORD [SS_RCD_N+8*" 0d' "],0\n"
				"\tmov QWORD [SS_RCD_C+8*" 0d' "],0\n" // 
			rp8.add_s8 { e etr } ⊢ e  
			_inc n ⊢ n  
			ss_init_n { lb top vct null n M e } ⊢ { lb top vct null n _ e }
			_dec n ⊢ n 
			∎ { n m e } 
		§ @.ss_init_rcd_lp { n m N e }
			∐ n'=N' . 
				∎ { m N e }  
			∐. . 	
				ss_init_rcd { n m e } ⊢ { n m e }
				_inc n ⊢ n 
				ss_init_rcd_lp { n m N e } ⊢| 
		§ RCD_N = 32r 
	∎∎
§§ Lang ≒ 
¶+ℙ 
	@.str ≃  
	∐* "\"" str_in  
	@.str_in ≃  
	∐* "\\" str_sp str_in 
	∐* "\""    
	∐* _ str_in 
	@.str_sp ≃ ∐* "\\" ∐* "\"" ∐* "t" ∐* "n" 
	@.name ≃ ∐* alph ⟦alph_us⟧ ⟦digit⟧
	@.num ≃ 
	∐* digit ⟦digit⟧
	@.alph_us ≃  
	∐* alph 
	∐* "_"
	@.alph ≃ ∐* lo_c ∐* up_c  
	@.lo_c ≃ 
	∐* "a" ∐* "b" ∐* "c" ∐* "d" ∐* "e" ∐* "f" ∐* "g" ∐* "h" ∐* "i" ∐* "j" ∐* "k" ∐* "l" 
	∐* "m" ∐* "n" ∐* "o" ∐* "p" ∐* "q" ∐* "r" ∐* "s" ∐* "t" ∐* "u" ∐* "v" ∐* "w" ∐* "x" ∐* "y" ∐* "z" 
	@.digit ≃ ∐* "0" ∐* "1" ∐* "2" ∐* "3" ∐* "4" ∐* "5" ∐* "6" ∐* "7" ∐* "8" ∐* "9" 
	@.up_c ≃
	∐* "A" ∐* "B" ∐* "C" ∐* "D" ∐* "E" ∐* "F" ∐* "G" ∐* "H" ∐* "I" ∐* "J" ∐* "K"
	∐* "L" ∐* "M" ∐* "N" ∐* "O" ∐* "P" ∐* "Q" ∐* "R" ∐* "S" ∐* "T" ∐* "U" ∐* "V" 
	∐* "W" ∐* "X" ∐* "Y" ∐* "Z" 
¶+ℙ     
	@.nl ≃ ∐ "\n"  
  @.def_mdl ≃ ∐ "§§" name "≒" ⟦mdl_etr⟧ "§§."
	@.def_arg ≃ 
	∐ "◂" var ⟦args⟧ 
	∐ "◂" "'" ⟦"'"⟧   
	@.args ≃ ∐ "," var  
	@.var ≃ ∐ name "'"   
	@.mdl_etr ≃   
  ∐ glb_etr     
  ∐ def_typ 
	@.def_typ ≃   
  ∐ "¶" def_typ_body_clq ⟦def_typ_body_clq⟧
  ∐ "¶" def_typ_body
  ∐ "¶+ℙ" grm_body ⟦grm_body⟧  
	@.def_typ_body_clq ≃ ∐ "@" "." def_typ_body
  @.def_typ_body ≃
  ∐ name ‹def_arg› "≃" def_coprd ⟦def_coprd⟧
  ∐ name ‹def_arg› "≃" def_prd ⟦def_prd⟧
  ∐ name ‹def_arg› "=" typ  
  ∐ name ‹def_arg›
  @.def_coprd ≃ ∐ "∐" typ_top ":" name
	@.def_prd ≃ ∐ "∏" typ_top ":" name
  @.grm_body ≃ ∐ "@" "." name "≃" grm_ord
	@.grm_ord ≃ ∐ grm_rule ⟦grm_rule⟧
	@.grm_rule ≃ ∐ ord ⟦grm_ptn⟧ ‹grm_pred›
	@.ord ≃ ∐ "∐*" ∐ "∐"
	@.grm_ptn ≃
  ∐ grm_atom
  ∐ "⟦" grm_atom "⟧"
	∐ "‹" grm_atom "›" 
	@.grm_atom ≃ ∐ str ∐ name ∐ "_" 
	@.grm_pred ≃ ∐ pred_flg ⟦grm_ptn⟧
	@.pred_flg ≃ ∐ "+|" ∐ "¬|"
	@.typ_top ≃
  ∐ "!" typ 
  ∐ ⟦typ⟧
	@.typ ≃ ∐ typ_imp 
	@.typ_imp ≃ ∐ typ_vct ⟦typ_imp_tl⟧ 
	@.typ_imp_tl ≃ ∐ "→" typ_vct
	@.typ_vct ≃ ∐ typ_app ⟦typ_vct_tl⟧
	@.typ_vct_tl ≃ ∐ "◃" typ_app
	@.typ_app ≃ ∐ typ_atm ⟦typ_app_tl⟧
	@.typ_app_tl ≃ ∐ "◂" typ_atm
	@.typ_atm ≃
  ∐ typ_rec 
  ∐ "(" typ ")"
  ∐ "{" typ_top "}"
  ∐ "‹" typ_imp "›"
  ∐ "⟦" typ_imp "⟧" 
  ∐ var 
  ∐ name
  ∐ "$" ⟦"'"⟧
  ∐ "ℤ"
  ∐ "ℕ" 
  ∐ "&"
  ∐ "ℙ"
  ∐ "_"  
  @.typ_rec ≃ 
  ∐ "@" "." typ_imp typ_rec_body 
  @.typ_rec_body ≃
  ∐ "≃∐[" ⟦typ_imp⟧ typ_rec_r
  ∐ "≃∏[" typ_imp "⊢" ⟦typ_imp⟧ typ_rec_r 
  @.typ_rec_r ≃
  ∐ "]" ∐ "<]"
	@.in ≃ ∐ "|»" 
	@.glb_etr ≃
  ∐ "§" name ‹typ_def› "≒" in stt_code
  ∐ "§" glb_etr_clq ⟦glb_etr_clq⟧
  ∐ "§+0" name ‹typ_def› "≒" ir_code
  @.ir_code ≃ 
  ∐ ir_etr ⟦ir_line⟧ ir_ret 
  @.ir_etr ≃ ∐ "»" reg_ptn  
  @.ir_ret ≃ ∐ "∎" reg_ptn 
  @.ir_line ≃ 
  ∐ "|~" "\\" ir_tkn "⊢" reg 
  ∐ "~|" "\\" reg "⊢" 
  ∐ "$" "\\" reg "⊢" reg ⟦regs⟧ 
  ∐ "◂" "\\" reg "," reg_ptn "⊢" reg_ptn 
  ∐ call_etr "\\" reg_ptn "⊢" reg_ptn 
  ∐ "∇" "\\" reg_ptn "⊢" reg_ptn co_prd_etr ⟦co_prd_etr⟧ 
  @.call_etr ≃
  ∐ name
  ∐ "(" "+" ")" 
  ∐ "(" "*" ")" 
  ∐ "(" "-" ")" 
  ∐ "(" "=" ")"   
  @.reg ≃ ∐ name 
  @.regs ≃ ∐ "," reg 
  @.reg_ptn ≃
  ∐ "∠" reg
  ∐ reg 
  ∐ "_"
  ∐ "{" ⟦reg_ptn⟧ "}" 
  ∐ "{" ⟦reg_ptn⟧ "<" reg "}"
  @.ir_tkn ≃ 
	∐ "-" num 
	∐ num 
	∐ str 
  ∐ call_etr  
  ∐ tkn_ptn
  @.tkn_ptn ≃
  ∐ ir_tkn 
  ∐ "{" ⟦tkn_ptn⟧ "}" 
	∐ "{" ⟦tkn_ptn⟧ "<" ir_tkn "}" 
  @.co_prd_etr ≃ 
  ∐ "∐" reg_ptn ⟦ir_line⟧ ir_ret
	@.glb_etr_clq ≃ ∐ "@" "." name ‹typ_def› "≒" in stt_code
	@.typ_def ≃ ∐ ":" typ_top "⊢" typ_top
  @.stt_code ≃
  ∐ exp_top code
  ∐ exp_top code_coprd_etr ⟦code_coprd_etr⟧ "∇" ‹tail›
  ∐ exp_top code_prd_etr ⟦code_prd_etr⟧ "∆" ‹tail›
  ∐ exp_top in stt_code "∎" ‹tail›
	@.code ≃ 
  ∐ "∎" ‹tail›
  ∐ "|{" ⟦code⟧ "}|" ‹tail›
  ∐ "»" stt_code
	@.eop ≃ 
	∐ "∎"
	∐ "»|"
  @.tail ≃ ∐ "^" code
  @.code_coprd_etr ≃ ∐ "∐" stt_code
  @.code_prd_etr ≃ ∐ "∏" stt_code 
	@.exp_top ≃
  ∐ "!" exp_top_rcd 
  ∐ ⟦exp_top_rcd⟧
  @.exp_top_rcd ≃
  ∐ "{" ⟦exp_top_rcd⟧ "}" 
  ∐ "∠" exp_eq
  ∐ exp_eq
  @.exp ≃ ∐ exp_rcd 
  @.exp_rcd ≃ 
  ∐ "{" ⟦exp_rcd⟧ "}" 
  ∐ exp_eq  
  @.exp_eq ≃ ∐ exp_add ⟦exp_eq_tl⟧ 
  @.exp_eq_tl ≃ ∐ "=" exp_add
  @.exp_add ≃ ∐ exp_mlt ⟦exp_add_tl⟧
  @.exp_add_tl ≃ ∐ op_add exp_mlt 
  @.op_add ≃ ∐ "+" ∐ "-"
  @.exp_mlt ≃ 
  ∐ exp_app "*" exp_mlt 
  ∐ exp_app  
  @.exp_app ≃
  ∐ exp_prj "◂" exp_app 
  ∐ exp_prj
  @.exp_prj ≃
  ∐ exp_atm "◃" exp_idx
  ∐ exp_atm
  @.exp_idx ≃
  ∐ idx "◃" exp_idx 
  ∐ idx
  @.idx ≃ 
  ∐ num 
  ∐ name
  @.exp_atm ≃
  ∐ num "'" 
  ∐ num
  ∐ "(" "+" ")"
  ∐ "(" "*" ")"
  ∐ "(" exp_rcd ")" 
  ∐ "{" ⟦exp_rcd⟧ "}" 
  ∐ "‹" exp_rcd "›"
  ∐ "⟦" ⟦exp_rcd⟧ "⟧"
  ∐ "?"
  ∐ "$"
  ∐ "↑[" num "]"
  ∐ "↓[" num "]"
  ∐ var 
  ∐ name
  ∐ "&"
  ∐ "@"
  ∐ "‹›"
	
¶ @.rcd_ptn ◂' ≃
	∐ ! $ : rp_a 
	∐ ! ⟦$⟧ : rp_r
	∐ ⟦$⟧ $ : rp_ro
¶ ty_prm ≃
	∐ : vct ∐ : opn ∐ : lst ∐ : zn ∐ : n
	∐ : sgn ∐ : stg ∐ : z_u ∐ ℤ : z_n 
	∐ ! & : axm ∐ : inj ∐ : cho ∐ ! & : z_d
¶ v_t ◂' ≃ ∐ : wc ∐ ! ℤ : v ∐ : q ∐ ! $ : ln
¶ @.ty ≃
	∐ ! & : var ∐ ty ty : app
	∐ ty ty : imp ∐ ! ty_prm : prm
	∐ ! ty_rcd : rcd ∐ ! ty_rcd_lb : rcd_lb
	∐ ! & : ty_rec
	@.ty_rec ≃
	∐ ty ty_rcd : cp ∐ ty ty ty_rcd : p
	@.ty_rcd ≃
	∐ ty ty_rcd : cns ∐ & : uo ∐ : u
	@.ty_rcd_lb ≃
	∐ ℙ ty ty_rcd_lb : cns_lb
	∐ & : uo_lb ∐ : u_lb
¶ @.tkn ◂'' ≃ 
	∐ : name ∐ : stg ∐ ℤ : z ∐ ℤ ℤ : zn
	∐ ! & : sgn ∐ ℤ tkn : co_p
	∐ : pls ∐ : mlt ∐ : mns ∐ : cmp
	∐ : eq ∐ ℤ : inj ∐ ! ℤ : cho ∐ : fix
	∐ : exn
¶ nd ◂'' ≃
	∐ $ ⟦$⟧ : id
	∐ $ { ⟦$⟧ $ } : prj 
	∐ { ⟦$⟧ $ } $ : cns
	∐ ! $ : rm 
	∐ tkn◂$'◂$ $ : ini
	∐ { $ rcd_ptn◂$ } rcd_ptn◂$ : call 
	∐ call_etr rcd_ptn◂$ rcd_ptn◂$ : glb_call
	∐ { rcd_ptn◂$ ⟦ℤ⟧ ⟦{ rcd_ptn◂$ $'}⟧ } rcd_ptn◂$ : agl
	∐ rcd_ptn◂$ rcd_ptn◂$ : etr
¶ ir◂'' ≃
	∐ nd◂$◂$' $' : seq
	∐ : ret
¶ ir_vct◂'' = (ir◂$◂$')◃&
¶ ir_mdl 
¶ ns_v ≃ ∐ ! & : ns_sgn 
§ apt ≒ |» ! pnt◂(def_mdl◂(read◂$)) ∎ 
§ a0 ≒ |» ! def_mdl ∎
§ @.ir_of_apt ≒ |» ∎
§ occurs ≒ |» ∎
§ @.unify ≒ |» ! 0 ∎
§ @.gen ≒ |» ∎
§ @.inst ≒ |» ∎
§ @.slv ≒ |» ∎
§ run ≒
	|» ∎
§§.
