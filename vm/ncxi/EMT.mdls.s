bits 64 
; macros 
%macro C_PUSH_REGS 0 
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
%endmacro

%macro C_POP_REGS 0 
	pop r11 
	pop r10 
	pop r9 
	pop r8 
	pop rcx 
	pop rdx 
%endmacro

%macro C_CALL_SF 1 
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call %1 
	mov rsp,QWORD [rsp_tmp]
	pop r11 
	pop r10 
	pop r9 
	pop r8 
	pop rcx 
	pop rdx 
%endmacro 

%macro C_CALL 1 
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call %1 
	mov rsp,QWORD [rsp_tmp]
%endmacro 

%macro JZ_SPC 2
	movzx MCR_REG,%1
	cmp MCR_REG,9 
	jz %2
	cmp MCR_REG,10 
	jz %2
	cmp MCR_REG,32 
	jz %2
%endmacro
 
%macro JZ_LINE_SPC 2
	movzx MCR_REG,%1 
	cmp MCR_REG,9 
	jz %2
	cmp MCR_REG,32 
	jz %2
%endmacro
 
%macro PUSH_GRM 0 
	sub rsp,32
	mov QWORD [rsp+24],r13
	mov QWORD [rsp+16],r14 
	mov QWORD [rsp+8],r9
%endmacro

%macro POP_GRM_SCC 0
	mov r9,QWORD [rsp+8]
	mov r14,QWORD [rsp]
	mov r13,QWORD [rsp+24]
	add rsp,32 
%endmacro 

%macro POP_GRM_FAIL 0
	mov r9,QWORD [rsp+8]
	mov r14,QWORD [rsp+16]
	mov r13,QWORD [rsp+24]
	add rsp,32 
%endmacro 

%macro RB_GRM 0
	mov r9,QWORD [rsp+8]
	mov r14,QWORD [rsp+16]
	mov r13,QWORD [rsp+24]
%endmacro 

%macro ALC_RCD 2 ; n,reg-name!=rbx 
	add QWORD [SS_RCD_C+8*%1],1
	add QWORD [SS_RCD_N+8*%1],1 
	mov %2,[SS_RCD_%1_TOP]
	mov MCR_REG,[%2]
	mov QWORD [SS_RCD_%1_TOP],MCR_REG
%endmacro 

%macro FREE_RCD 2 ; n,reg-name!=rbx 
	sub QWORD [SS_RCD_N+8*%1],1
	mov rbx,QWORD [SS_RCD_%1_TOP] 
	mov QWORD [%2],rbx
	mov QWORD [SS_RCD_%1_TOP],%2
%endmacro
				
%macro FREE_LN 1 
	sub SS_LN_N,1 
	mov QWORD [%1],SS_LN_REG
	mov SS_LN_REG,%1
%endmacro

%macro ALC_LN 1 
	add QWORD [SS_LN_C],1 
	add SS_LN_N,1 
	mov %1,SS_LN_REG 
	mov SS_LN_REG,QWORD [SS_LN_REG]
%endmacro

%macro GET_LEN 2 
	mov %1,0x0000_ffff_ffff_ffff
	and %1,QWORD [%2]
%endmacro

%macro MOV_RAX 2 
	mov rax,%2 
	mov %1,rax
	%endmacro

%macro MOV_RDI 2 
	mov rdi,%2 
	mov %1,rdi
%endmacro

%macro MOV_RBX 2 
	mov rbx,%2
	mov %1,rbx
%endmacro

%macro BSS_SS_RCD 2 
	SS_RCD_%1_TOP: resq 1 
	SS_RCD_%1_VCT: resq (%1+1)*(%2+4)
	SS_RCD_%1_BTM: resq 1
%endmacro 

%define SIG_INT 2
%define SIG_SEGV 11
%define SS_MAX 2000
%define SS_LN_MAX 4000
%define RCD_N 16
%define SS_NULL 0xffff_ffff_ffff_0000
%define EMT_BUF_MAX 2048
%define SS_LN_REG r15
%define MCR_REG rbx
%define SS_LN_N rbp
extern exit 
extern printf 
extern sprintf
extern malloc 
extern calloc
extern free 
extern isspace 
extern strtoul
extern strlen
extern getchar
extern set_handler
section .bss
	tmp: resq 64
	ret_vct: resq 64
 rsp_tmp: resq 1

; emt buffer 
	EMT_BUF_OFS: resq 1 
 EMT_BUF: resb EMT_BUF_MAX 
	EMT_BUF_END: resb 1
 
; garbage vector 
	GBG_VCT: resq 252

; SS segments 
	SS_TOP: resq 1
	SS_VCT: resq 16*SS_MAX
	SS_BTM: resq 1 

	SS_LN_TOP: resq 1
	SS_LN_VCT: resq 2*(SS_LN_MAX+4)
	SS_LN_BTM: resq 1  

	SS_PT_TOP: resq 1
	SS_PT_VCT: resq 3*SS_MAX
	SS_PT_BTM: resq 1 

	SS_RCD_N: resq (RCD_N+1) 
	SS_RCD_C: resq (RCD_N+1)

stat: resb 144
struc STAT
	.st_dev         resq 1
	.st_ino         resq 1
	.st_mode        resd 1
	.st_nlink       resd 1
	.st_uid         resd 1
	.st_gid         resd 1
	.st_rdev        resq 1
	.pad1           resq 1
	.st_size        resq 1
	.st_blksize     resd 1
	.pad2 resd 1
	.st_blocks      resq 1
	.st_atime       resq 1
	.st_atime_nsec  resq 1
	.st_mtime       resq 1
	.st_mtime_nsec  resq 1
	.st_ctime       resq 1
	.st_ctime_nsec  resq 1
	.__unused4  resd 1
	.__unused5  resd 1
endstruc

	BSS_SS_RCD 1, SS_MAX
	BSS_SS_RCD 2, SS_MAX
	BSS_SS_RCD 3, SS_MAX
	BSS_SS_RCD 4, SS_MAX
	BSS_SS_RCD 5, SS_MAX
	BSS_SS_RCD 6, SS_MAX
	BSS_SS_RCD 7, SS_MAX
	BSS_SS_RCD 8, SS_MAX
	BSS_SS_RCD 9, SS_MAX
	BSS_SS_RCD 10, SS_MAX
	BSS_SS_RCD 11, SS_MAX
	BSS_SS_RCD 12, SS_MAX
	BSS_SS_RCD 13, SS_MAX
	BSS_SS_RCD 14, SS_MAX
	BSS_SS_RCD 15, SS_MAX
section .data
	err_n: dq 0
 SS_LN_C: dq 0
	fmt_err_line: db "err:%x",10,0
	fmt_r64: db "%dr",0
	fmt_s8: db 34,"%s",34,0
	fmt_d: db "%d",0
	fmt_x: db "%x",0
	fmt_arr_l: db "{| ",0
	fmt_arr_r: db "|}",0
	fmt_rcd_l: db "{ ",0
	fmt_rcd_r: db "} ",0
	fmt_rcd_box_l: db "*{ "
	fmt_nl: db 10,0
	fmt_spc: db " ",0
	fmt_emt: db "_emt:",0
	fmt_getchar: db "_getchar:",0
	rt_err0: db "rt_err 0:",10,0 
 s8_e: dq 0,0

	fmt_info:
		db "info:",10
		db "SS_LN_C=%d",10
		db "SS_LN_N=%d",10
		db 0
	fmt_info_rcd:
		db "rcd %d",10
		db "SS_RCD_C=%d",10
		db "SS_RCD_N=%d",10
		db 0

fmt_sig_hdl:
	db "sig_hdl:",10
	db "signal number=%d",10
	db 0

	unt: dq 0x0

	unt_0: dq 0x0 
	unt_1: dq 0x00_01_0000_0000_0000 
	unt_2: dq 0x00_02_0000_0000_0000 
	unt_3: dq 0x00_03_0000_0000_0000 
	unt_4: dq 0x00_04_0000_0000_0000 
	unt_5: dq 0x00_05_0000_0000_0000 
	unt_6: dq 0x00_06_0000_0000_0000 
	unt_7: dq 0x00_07_0000_0000_0000 
	unt_8: dq 0x00_08_0000_0000_0000 

LB_91: db 34,101,115,99,95,115,116,103,95,108,116,114,34,0
LB_93: db 59,32,226,136,142,124,10,101,120,110,32,54,52,49,49,58,10,0
LB_297: db 95,0
LB_306: db 46,0
LB_308: db 114,0
LB_309: db 34,0
LB_310: db 34,0
LB_313: db 125,0
LB_314: db 123,32,0
LB_316: db 32,93,32,0
LB_317: db 37,91,32,0
LB_319: db 32,0
LB_321: db 125,0
LB_322: db 123,32,0
LB_330: db 32,0
LB_369: db 125,0
LB_370: db 123,32,0
LB_404: db 32,93,32,0
LB_405: db 37,91,32,0
LB_407: db 226,151,130,0
LB_409: db 37,0
LB_411: db 32,0
LB_413: db 32,226,138,162,124,10,0
LB_414: db 32,0
LB_415: db 9,0
LB_419: db 32,226,138,162,124,10,0
LB_420: db 44,0
LB_421: db 226,151,130,0
LB_422: db 9,0
LB_429: db 10,0
LB_430: db 32,226,138,162,32,0
LB_431: db 36,32,0
LB_432: db 9,0
LB_435: db 32,226,138,162,10,0
LB_436: db 36,32,0
LB_437: db 9,0
LB_441: db 226,136,142,32,46,46,10,0
LB_442: db 9,0
LB_460: db 226,136,142,124,10,0
LB_461: db 9,0
LB_465: db 10,0
LB_466: db 32,226,138,162,32,0
LB_467: db 32,0
LB_468: db 9,0
LB_472: db 10,0
LB_473: db 32,226,138,162,32,0
LB_474: db 44,0
LB_475: db 226,151,130,32,0
LB_476: db 9,0
LB_480: db 10,0
LB_481: db 32,226,138,162,32,0
LB_482: db 32,0
LB_483: db 194,187,32,0
LB_484: db 9,0
LB_487: db 194,187,32,95,94,32,46,46,32,226,138,162,32,46,46,10,32,46,46,32,47,47,10,0
LB_488: db 9,0
LB_527: db 226,136,144,32,46,46,32,59,10,0
LB_528: db 9,0
LB_548: db 226,138,162,32,10,0
LB_549: db 226,136,144,32,46,46,32,59,32,0
LB_550: db 9,0
LB_553: db 226,136,144,32,46,46,32,46,10,0
LB_554: db 9,0
LB_558: db 226,136,144,46,32,46,46,32,46,10,0
LB_559: db 9,0
LB_563: db 226,138,162,32,10,0
LB_564: db 226,136,144,32,46,46,32,59,32,0
LB_565: db 9,0
LB_568: db 226,136,144,46,32,46,46,32,46,10,0
LB_569: db 9,0
LB_574: db 46,46,32,59,10,0
LB_575: db 226,136,144,32,0
LB_576: db 9,0
LB_580: db 226,138,162,32,10,0
LB_581: db 226,136,144,32,46,46,32,59,32,0
LB_582: db 9,0
LB_585: db 226,136,144,32,46,46,32,46,10,0
LB_586: db 9,0
LB_590: db 226,136,144,46,32,46,46,32,59,10,0
LB_591: db 9,0
LB_595: db 226,138,162,32,10,0
LB_596: db 226,136,144,32,46,46,32,59,32,0
LB_597: db 9,0
LB_600: db 226,136,144,46,32,46,46,32,46,10,0
LB_601: db 9,0
LB_605: db 10,0
LB_606: db 64,46,0
LB_607: db 9,0
LB_612: db 226,136,144,32,46,46,10,0
LB_613: db 9,0
LB_653: db 226,136,144,46,32,46,46,32,10,0
LB_654: db 9,0
LB_658: db 10,0
LB_659: db 226,136,144,32,46,46,32,226,138,162,32,0
LB_660: db 9,0
LB_721: db 10,0
LB_722: db 226,136,144,46,32,46,46,32,226,138,162,32,0
LB_723: db 9,0
LB_729: db 9,226,136,142,226,136,142,10,0
LB_730: db 9,0
LB_733: db 10,0
LB_734: db 194,167,194,167,32,0
LB_735: db 9,0
LB_738: db 10,0
LB_739: db 32,61,32,0
LB_740: db 194,167,194,167,32,0
LB_741: db 9,0
LB_745: db 194,167,194,167,43,115,56,10,0
LB_746: db 9,0
LB_750: db 194,167,32,0
LB_751: db 9,0
LB_755: db 194,167,32,10,0
LB_756: db 9,0
LB_761: db 10,0
LB_762: db 194,182,32,0
LB_763: db 9,0
LB_771: db 32,61,32,46,46,32,10,0
LB_772: db 194,182,32,0
LB_773: db 9,0
LB_789: db 194,182,10,0
LB_790: db 9,0
LB_795: db 10,0
LB_796: db 64,46,0
LB_797: db 9,0
LB_800: db 32,61,32,46,46,32,10,0
LB_801: db 64,46,0
LB_802: db 9,0
LB_806: db 10,0
LB_807: db 10,0
LB_808: db 32,61,32,0
LB_810: db 10,0
LB_811: db 32,58,32,0
LB_812: db 226,136,144,32,0
LB_813: db 9,0
LB_817: db 125,0
LB_818: db 123,32,0
LB_820: db 32,226,134,146,32,0
LB_822: db 226,151,130,0
LB_824: db 39,0
LB_826: db 32,0
LB_829: db 10,0
LB_830: db 32,58,32,0
LB_831: db 32,0
LB_832: db 10,0
LB_833: db 32,0
LB_840: db 10,0
LB_841: db 32,61,32,0
LB_842: db 32,194,171,32,10,0
LB_845: db 10,0
LB_846: db 32,58,32,0
LB_847: db 32,0
LB_848: db 64,46,0
LB_849: db 9,0
LB_852: db 10,0
LB_853: db 32,0
LB_854: db 64,46,0
LB_855: db 9,0
LB_1025: db 10,0
LB_1026: db 58,0
LB_1027: db 45,0
LB_1028: db 112,114,115,95,101,114,114,32,0
LB_1808: db 59,32,226,136,142,124,10,101,120,110,32,51,52,49,55,48,58,10,0
LB_1812: db 58,10,0
LB_1813: db 45,0
LB_1814: db 110,108,115,95,101,114,114,32,0
LB_1816: db 59,32,226,136,142,124,10,101,120,110,32,51,52,51,49,57,58,10,0
LB_1863: db 59,32,226,136,142,124,10,101,120,110,32,51,52,55,50,57,58,10,0
LB_1963: db 34,108,105,110,101,95,114,101,115,95,99,32,48,34,0
LB_1965: db 59,32,226,136,142,124,10,101,120,110,32,51,53,53,56,55,58,10,0
LB_3607: db 34,102,105,108,101,32,101,110,100,34,0
LB_3612: db 34,102,105,108,101,32,101,110,100,32,110,108,34,0
LB_4047: db 34,100,116,95,101,116,114,32,48,34,0
LB_4413: db 34,108,99,95,101,116,114,95,98,111,100,121,32,48,34,0
LB_4797: db 34,103,114,109,95,101,116,114,95,97,99,116,95,97,99,116,32,48,34,0
LB_4800: db 59,32,226,136,142,124,10,101,120,110,32,53,55,55,48,55,58,10,0
LB_4828: db 34,103,114,109,95,101,116,114,95,97,99,116,95,97,99,116,32,49,34,0
LB_4831: db 59,32,226,136,142,124,10,101,120,110,32,53,55,57,55,54,58,10,0
LB_5134: db 194,167,194,167,32,77,48,10,9,226,136,142,226,136,142,32,10,0
LB_5143: db 39,48,226,151,130,0
LB_5145: db 39,49,226,151,130,0
LB_5150: db 39,48,226,151,130,0
LB_5152: db 39,49,226,151,130,0
LB_5158: db 39,48,226,151,130,0
LB_5159: db 39,49,226,151,130,0
LB_5164: db 39,48,226,151,130,0
LB_5166: db 39,49,226,151,130,0
LB_5175: db 39,48,226,151,130,0
LB_5177: db 39,49,226,151,130,0
LB_5179: db 39,50,226,151,130,0
LB_5181: db 39,51,226,151,130,0
LB_5183: db 39,52,226,151,130,0
LB_5185: db 39,53,226,151,130,0
LB_5191: db 39,48,226,151,130,0
LB_5192: db 39,49,226,151,130,0
LB_5197: db 39,48,226,151,130,0
LB_5200: db 39,49,226,151,130,0
LB_5209: db 39,48,226,151,130,0
LB_5211: db 39,49,226,151,130,0
LB_5212: db 39,50,226,151,130,0
LB_5213: db 39,51,226,151,130,0
LB_5215: db 39,52,226,151,130,0
LB_5220: db 39,48,226,151,130,0
LB_5221: db 39,49,226,151,130,0
LB_5226: db 39,48,226,151,130,0
LB_5227: db 39,49,226,151,130,0
LB_5232: db 39,48,226,151,130,0
LB_5233: db 39,49,226,151,130,0
LB_5238: db 39,48,226,151,130,0
LB_5239: db 39,49,226,151,130,0
LB_5244: db 39,48,226,151,130,0
LB_5248: db 39,49,226,151,130,0
LB_5258: db 39,48,226,151,130,0
LB_5260: db 39,49,226,151,130,0
LB_5262: db 39,50,226,151,130,0
LB_5264: db 39,51,226,151,130,0
LB_5266: db 39,52,226,151,130,0
LB_5268: db 39,53,226,151,130,0
LB_5269: db 39,54,226,151,130,0
LB_5274: db 39,48,226,151,130,0
LB_5276: db 39,49,226,151,130,0
LB_5282: db 39,48,226,151,130,0
LB_5283: db 39,49,226,151,130,0
LB_5288: db 39,48,226,151,130,0
LB_5292: db 39,49,226,151,130,0
LB_5298: db 39,48,226,151,130,0
LB_5299: db 39,49,226,151,130,0
LB_5300: db 39,50,226,151,130,0
LB_5305: db 39,48,226,151,130,0
LB_5307: db 39,49,226,151,130,0
LB_5313: db 39,48,226,151,130,0
LB_5314: db 39,49,226,151,130,0
LB_5316: db 39,50,226,151,130,0
LB_5321: db 39,48,226,151,130,0
LB_5323: db 39,49,226,151,130,0
LB_5328: db 39,48,226,151,130,0
LB_5330: db 39,49,226,151,130,0
LB_5335: db 39,48,226,151,130,0
LB_5336: db 39,49,226,151,130,0
LB_5341: db 39,48,226,151,130,0
LB_5343: db 39,49,226,151,130,0
LB_5351: db 39,48,226,151,130,0
LB_5352: db 39,49,226,151,130,0
LB_5353: db 39,50,226,151,130,0
LB_5355: db 39,51,226,151,130,0
LB_5360: db 39,48,226,151,130,0
LB_5361: db 39,49,226,151,130,0
LB_5366: db 39,48,226,151,130,0
LB_5367: db 39,49,226,151,130,0
LB_5372: db 39,48,226,151,130,0
LB_5373: db 39,49,226,151,130,0
LB_5380: db 39,48,226,151,130,0
LB_5381: db 39,49,226,151,130,0
LB_5382: db 39,50,226,151,130,0
LB_5383: db 39,51,226,151,130,0
LB_5391: db 39,48,226,151,130,0
LB_5393: db 39,49,226,151,130,0
LB_5398: db 39,48,226,151,130,0
LB_5399: db 39,49,226,151,130,0
LB_5404: db 39,48,226,151,130,0
LB_5405: db 39,49,226,151,130,0
LB_5410: db 39,48,226,151,130,0
LB_5412: db 39,49,226,151,130,0
LB_5419: db 39,48,226,151,130,0
LB_5420: db 39,49,226,151,130,0
LB_5421: db 39,50,226,151,130,0
LB_5423: db 39,51,226,151,130,0
LB_5430: db 39,48,226,151,130,0
LB_5431: db 39,49,226,151,130,0
LB_5432: db 39,50,226,151,130,0
LB_5433: db 39,51,226,151,130,0
LB_5438: db 39,48,226,151,130,0
LB_5439: db 39,49,226,151,130,0
LB_5444: db 39,48,226,151,130,0
LB_5446: db 39,49,226,151,130,0
LB_5451: db 39,48,226,151,130,0
LB_5452: db 39,49,226,151,130,0
LB_5457: db 39,48,226,151,130,0
LB_5458: db 39,49,226,151,130,0
LB_5463: db 39,48,226,151,130,0
LB_5464: db 39,49,226,151,130,0
LB_5470: db 39,48,226,151,130,0
LB_5471: db 39,49,226,151,130,0
LB_5472: db 39,50,226,151,130,0
LB_5477: db 39,48,226,151,130,0
LB_5479: db 39,49,226,151,130,0
LB_5484: db 39,48,226,151,130,0
LB_5486: db 39,49,226,151,130,0
LB_5492: db 39,48,226,151,130,0
LB_5496: db 39,49,226,151,130,0
LB_5501: db 39,48,226,151,130,0
LB_5502: db 39,49,226,151,130,0
LB_5508: db 39,48,226,151,130,0
LB_5510: db 39,49,226,151,130,0
LB_5512: db 39,50,226,151,130,0
LB_5517: db 39,48,226,151,130,0
LB_5519: db 39,49,226,151,130,0
LB_5524: db 39,48,226,151,130,0
LB_5525: db 39,49,226,151,130,0
LB_5530: db 39,48,226,151,130,0
LB_5531: db 39,49,226,151,130,0
LB_5537: db 39,48,226,151,130,0
LB_5538: db 39,49,226,151,130,0
LB_5539: db 39,50,226,151,130,0
LB_5544: db 39,48,226,151,130,0
LB_5546: db 39,49,226,151,130,0
LB_5551: db 39,48,226,151,130,0
LB_5552: db 39,49,226,151,130,0
LB_5557: db 39,48,226,151,130,0
LB_5558: db 39,49,226,151,130,0
LB_5561: db 34,68,48,34,0
LB_5566: db 59,32,226,136,142,124,10,101,120,110,32,54,48,53,54,54,58,10,0
LB_5567: db 59,32,226,136,142,124,10,101,120,110,32,54,48,53,57,51,58,10,0
LB_5568: db 120,121,48,0
LB_5576: db 39,48,226,151,130,0
LB_5577: db 39,49,226,151,130,0
LB_5579: db 34,68,48,34,0
LB_5582: db 59,32,226,136,142,124,10,101,120,110,32,54,48,56,55,50,58,10,0
LB_5584: db 194,167,194,167,32,77,48,10,9,226,136,142,226,136,142,32,10,0
LB_5596: db 9,226,136,142,32,120,32,10,0
LB_5603: db 39,48,226,151,130,0
LB_5605: db 39,49,226,151,130,0
LB_5610: db 39,48,226,151,130,0
LB_5611: db 39,49,226,151,130,0
section .text
global _start

info:
	C_PUSH_REGS
	mov rdi,fmt_info 
	mov rsi,QWORD [SS_LN_C]
	mov rdx,SS_LN_N 
	xor rax,rax 
	C_CALL printf
	mov rax,0
info_rcd:
	push rax 
	mov rdi,fmt_info_rcd
	mov rsi,rax 
	mov rdx,QWORD [SS_RCD_C+8*rax]
	mov rcx,QWORD [SS_RCD_N+8*rax]
	xor rax,rax
	C_CALL printf 
	pop rax 
	cmp rax,RCD_N 
	jz info_rcd_end 
	add rax,1 
	jmp info_rcd 
info_rcd_end:
	C_POP_REGS 
	ret
;getchar:
;	xor rax,rax 
;	C_CALL_SF getchar 
;	ret

sig_hdl: ; rdi=sig_n rsi=siginfo_t* rdx=void*
	push rdi 
	push rsi 
	push rdx 
	xor rax,rax 
	mov rsi,rdi 
	mov rdi,fmt_sig_hdl
	C_CALL printf 
	call info 
	call exit 
	jmp err

rpc_s8: ; rdi ⊢ rax
	push rdi 
	mov rsi,0x0000_ffff_ffff_ffff
	and rsi,QWORD [rdi]  
	push rsi
	mov rdi,rsi 
	call mlc_s8
	pop rcx 
	pop rsi 
	add rsi,8
	lea rdi,[rax+8]
	cld 
	rep movsb
	ret
     
esc_s8: ; rdi ⊢ rax 
	mov rsi,0x0000_ffff_ffff_ffff
	and rsi,QWORD [rdi] 
	mov rax,rsi 
	shl rax,1 
	sub rsp,rax 
esc_s8_lp0: 

arr_of_lst: 
	mov rsi,0 
arr_of_lst_r:
	cmp BYTE [rdi+6],1
	jz arr_of_lst_end 
	push QWORD [rdi+8] 
	mov rdi,QWORD [rdi+16]
	add rsi,1 
	call arr_of_lst_r
	sub rsi,1 
	pop QWORD [rax+8+8*rsi]
	ret 
arr_of_lst_end: 
	push rsi 
	xor rax,rax
	mov rdi,8
	add rsi,1 
	C_CALL calloc
	pop rsi 
	mov QWORD [rax],rsi
	ret 

scf_d: ; rdi=src ⊢ rax=flg rdi=dst rsi=n
	push rdi
	movzx rdi,BYTE [rdi]
	C_CALL isspace
	cmp rax,0
	jnz scf_d_err0 
	jmp scf_d_scf 
scf_d_err0: 
	add rsp,8
	mov rax,0
	ret
	scf_d_scf:
	mov rdi,QWORD [rsp]
	sub rsp,8
	mov rsi,rsp
	mov rdx,10
	mov rax,0
	C_CALL strtoul
	pop rsi
	pop rdi
	sub rsi,rdi
	jz scf_d_err1
 mov rdi,rax
	mov rax,1 
	ret
scf_d_err1:
	mov rax,0 
	ret

scf_x: ; rdi=src ⊢ rax=flg rdi=dst rsi=n
	push rdi
	movzx rdi,BYTE [rdi]
	C_CALL isspace
	cmp rax,0
	jnz scf_x_err0 
	jmp scf_x_scf 
scf_x_err0: 
	add rsp,8
	mov rax,0
	ret
	scf_x_scf:
	mov rdi,QWORD [rsp]
	sub rsp,8
	mov rsi,rsp
	mov rdx,16
	mov rax,0
	C_CALL strtoul
	pop rsi
	pop rdi
	sub rsi,rdi
	jz scf_x_err1
 mov rdi,rax
	mov rax,1 
	ret
scf_x_err1:
	mov rax,0 
	ret

mlc_s8: ; rdi=len  
	push rdi 
	and rdi,~111b
	lea rdi,[rdi+16] 
	mov rsi,1 
	xor rax,rax 
	C_CALL_SF calloc
	pop QWORD [rax] 
	ret

s8_of_c_stg: 
	push rdi
	xor rax,rax
	C_CALL strlen
	push rax
	mov rdi,rax
	call mlc_s8
	pop rcx
	pop rsi
	mov rdi,rax
	add rdi,8
	cld
	rep movsb
	ret

free_s8: ;rdi=ptr
	C_CALL_SF free
	ret 

in_fn: 
	mov rax,2
	mov rsi,2
	syscall
	push rax ; [rsp]=fd
	mov rdi,rax
	mov rax,5
	mov rsi,stat
	syscall
	mov rdi,[stat + STAT.st_size]
	call mlc_s8
	mov rdi,QWORD [rsp]
	push rax ; [rsp]=buf
	mov rsi,rax
	add rsi,8
	mov rax,0
	mov rdx,[stat+STAT.st_size]
	syscall
	mov rax,3
	mov rdi,QWORD [rsp+8]
	syscall
	mov rax,QWORD [rsp]	
	add rsp,16
	ret 

out_fn: ; rdi=fn,rsi=src
	push rsi 
	mov rax,2
	mov rsi,0x42
	syscall
	pop rsi 
	push rax
	mov rdi,rax
	mov rdx,QWORD [rsi]
	mov rax,0x0000_ffff_ffff_ffff
	and rdx,rax
	add rsi,8
	mov rax,1
	syscall
	pop rdi
	mov rax,3
	syscall
	ret

emt_stg: ; rdi=stg 
	xor rax,rax 
	C_CALL_SF printf
	ret

emt_r64: ;rdi=r64
	xor rax,rax 
	mov rsi,rdi
	mov rdi,fmt_r64
	C_CALL_SF printf
	ret

emt_s8: ;rdi=s8
	xor rax,rax 
	lea rsi,[rdi+8]
	mov rdi,fmt_s8
	C_CALL_SF printf
	ret

emt_add: ; rdi=len rsi=stg
	cld 
	push rcx 
	mov rcx,rdi 
	mov rax,QWORD [EMT_BUF_OFS]
	add rdi,rax
	cmp rdi,EMT_BUF_MAX 
	jge emt_add_buf 
	mov BYTE [EMT_BUF+rdi],0
	mov QWORD [EMT_BUF_OFS],rdi
	lea rdi,[EMT_BUF+rax]
	jmp emt_add_end 
emt_add_buf:
	push rsi 
	call emt_buf 
	pop rsi 
	cmp rcx,EMT_BUF_MAX
	jge emt_add_stg 
	mov BYTE [EMT_BUF+rcx],0
	mov QWORD [EMT_BUF_OFS],rcx 
	mov rdi,EMT_BUF
emt_add_end:
	rep movsb 
	pop rcx 
	ret 
emt_add_stg 
	mov QWORD [EMT_BUF],0
	mov QWORD [EMT_BUF_OFS],0
	mov rdi,rsi 
	call emt_stg 
	pop rcx 
	ret 

emt_buf:
	xor rax,rax 
	mov rdi,EMT_BUF 
	C_CALL printf 
	mov QWORD [EMT_BUF_OFS],0
	mov BYTE [EMT_BUF],0
	ret 
	 
_start:
; set signal handler 
	mov rdi,SIG_SEGV 
	mov rsi,sig_hdl 
	C_CALL set_handler 

SS_init:
	mov QWORD [SS_TOP],SS_VCT
	mov rdi,0 
	mov rax,SS_VCT 
SS_lp: 
	cmp rdi,SS_MAX 
	jz SS_end 
	add rdi,1 
	lea rsi,[rax+8*16] 
	mov QWORD [rax],rsi 
	mov rax,rsi 
	jmp SS_lp 
SS_end:
	mov rsi,SS_NULL 
	mov [rax],rsi

SS_LN_init:
	mov SS_LN_N,0
	mov QWORD [SS_LN_TOP],SS_LN_VCT
	mov r15,SS_LN_VCT 
	mov rdi,0 
	mov rax,SS_LN_VCT 
SS_LN_lp: 
	cmp rdi,SS_LN_MAX 
	jz SS_LN_end 
	add rdi,1 
	lea rsi,[rax+8*2] 
	mov QWORD [rax],rsi 
	mov rax,rsi 
	jmp SS_LN_lp 
SS_LN_end:
	mov rsi,0xffff_ffff_ffff_0100 
	mov [rax],rsi

SS_PT_init:
	mov QWORD [SS_PT_TOP],SS_PT_VCT
	mov rdi,0 
	mov rax,SS_PT_VCT 
SS_PT_lp: 
	cmp rdi,SS_MAX 
	jz SS_PT_end 
	add rdi,1 
	lea rsi,[rax+8*3] 
	mov QWORD [rax],rsi 
	mov rax,rsi 
	jmp SS_PT_lp 
SS_PT_end:
	mov rsi,0xffff_ffff_ffff_0200 
	mov [rax],rsi

	mov rdi,0
	mov QWORD [EMT_BUF],0
	mov QWORD [EMT_BUF_OFS],0

; _args 
	mov rdi,QWORD [rsp]
 lea rdi,[rdi+1]
	mov rsi,8 
	xor rax,rax 
	C_CALL calloc
	pop r13
	mov QWORD [rax],r13
	xor r14,r14
	mov rbx,rax
args_lp:
	cmp r14,r13
	jz args_lp_end
	pop rdi
	call s8_of_c_stg 
	mov QWORD [rbx+8+8*r14],rax
	add r14,1 
	jmp args_lp 
args_lp_end:
	mov r13,rbx
	

init_ss_rcd_1:
	mov QWORD [SS_RCD_N+8*1],0
	mov QWORD [SS_RCD_C+8*1],0
	mov QWORD [SS_RCD_1_TOP],SS_RCD_1_VCT
	mov rdi,0 
	mov rax,SS_RCD_1_VCT
ss_lp_rcd_1:
	cmp rdi,SS_MAX
	jz ss_end_rcd_1
	add rdi,1 
	lea rsi,[rax+8*2]
	mov QWORD [rax],rsi 
	mov rax,rsi 
	jmp ss_lp_rcd_1
ss_end_rcd_1:
	mov rsi,-65535
	mov [rax],rsi 

init_ss_rcd_2:
	mov QWORD [SS_RCD_N+8*2],0
	mov QWORD [SS_RCD_C+8*2],0
	mov QWORD [SS_RCD_2_TOP],SS_RCD_2_VCT
	mov rdi,0 
	mov rax,SS_RCD_2_VCT
ss_lp_rcd_2:
	cmp rdi,SS_MAX
	jz ss_end_rcd_2
	add rdi,1 
	lea rsi,[rax+8*3]
	mov QWORD [rax],rsi 
	mov rax,rsi 
	jmp ss_lp_rcd_2
ss_end_rcd_2:
	mov rsi,-65534
	mov [rax],rsi 

init_ss_rcd_3:
	mov QWORD [SS_RCD_N+8*3],0
	mov QWORD [SS_RCD_C+8*3],0
	mov QWORD [SS_RCD_3_TOP],SS_RCD_3_VCT
	mov rdi,0 
	mov rax,SS_RCD_3_VCT
ss_lp_rcd_3:
	cmp rdi,SS_MAX
	jz ss_end_rcd_3
	add rdi,1 
	lea rsi,[rax+8*4]
	mov QWORD [rax],rsi 
	mov rax,rsi 
	jmp ss_lp_rcd_3
ss_end_rcd_3:
	mov rsi,-65533
	mov [rax],rsi 

init_ss_rcd_4:
	mov QWORD [SS_RCD_N+8*4],0
	mov QWORD [SS_RCD_C+8*4],0
	mov QWORD [SS_RCD_4_TOP],SS_RCD_4_VCT
	mov rdi,0 
	mov rax,SS_RCD_4_VCT
ss_lp_rcd_4:
	cmp rdi,SS_MAX
	jz ss_end_rcd_4
	add rdi,1 
	lea rsi,[rax+8*5]
	mov QWORD [rax],rsi 
	mov rax,rsi 
	jmp ss_lp_rcd_4
ss_end_rcd_4:
	mov rsi,-65532
	mov [rax],rsi 

init_ss_rcd_5:
	mov QWORD [SS_RCD_N+8*5],0
	mov QWORD [SS_RCD_C+8*5],0
	mov QWORD [SS_RCD_5_TOP],SS_RCD_5_VCT
	mov rdi,0 
	mov rax,SS_RCD_5_VCT
ss_lp_rcd_5:
	cmp rdi,SS_MAX
	jz ss_end_rcd_5
	add rdi,1 
	lea rsi,[rax+8*6]
	mov QWORD [rax],rsi 
	mov rax,rsi 
	jmp ss_lp_rcd_5
ss_end_rcd_5:
	mov rsi,-65531
	mov [rax],rsi 

init_ss_rcd_6:
	mov QWORD [SS_RCD_N+8*6],0
	mov QWORD [SS_RCD_C+8*6],0
	mov QWORD [SS_RCD_6_TOP],SS_RCD_6_VCT
	mov rdi,0 
	mov rax,SS_RCD_6_VCT
ss_lp_rcd_6:
	cmp rdi,SS_MAX
	jz ss_end_rcd_6
	add rdi,1 
	lea rsi,[rax+8*7]
	mov QWORD [rax],rsi 
	mov rax,rsi 
	jmp ss_lp_rcd_6
ss_end_rcd_6:
	mov rsi,-65530
	mov [rax],rsi 

init_ss_rcd_7:
	mov QWORD [SS_RCD_N+8*7],0
	mov QWORD [SS_RCD_C+8*7],0
	mov QWORD [SS_RCD_7_TOP],SS_RCD_7_VCT
	mov rdi,0 
	mov rax,SS_RCD_7_VCT
ss_lp_rcd_7:
	cmp rdi,SS_MAX
	jz ss_end_rcd_7
	add rdi,1 
	lea rsi,[rax+8*8]
	mov QWORD [rax],rsi 
	mov rax,rsi 
	jmp ss_lp_rcd_7
ss_end_rcd_7:
	mov rsi,-65529
	mov [rax],rsi 

init_ss_rcd_8:
	mov QWORD [SS_RCD_N+8*8],0
	mov QWORD [SS_RCD_C+8*8],0
	mov QWORD [SS_RCD_8_TOP],SS_RCD_8_VCT
	mov rdi,0 
	mov rax,SS_RCD_8_VCT
ss_lp_rcd_8:
	cmp rdi,SS_MAX
	jz ss_end_rcd_8
	add rdi,1 
	lea rsi,[rax+8*9]
	mov QWORD [rax],rsi 
	mov rax,rsi 
	jmp ss_lp_rcd_8
ss_end_rcd_8:
	mov rsi,-65528
	mov [rax],rsi 

init_ss_rcd_9:
	mov QWORD [SS_RCD_N+8*9],0
	mov QWORD [SS_RCD_C+8*9],0
	mov QWORD [SS_RCD_9_TOP],SS_RCD_9_VCT
	mov rdi,0 
	mov rax,SS_RCD_9_VCT
ss_lp_rcd_9:
	cmp rdi,SS_MAX
	jz ss_end_rcd_9
	add rdi,1 
	lea rsi,[rax+8*10]
	mov QWORD [rax],rsi 
	mov rax,rsi 
	jmp ss_lp_rcd_9
ss_end_rcd_9:
	mov rsi,-65527
	mov [rax],rsi 

init_ss_rcd_10:
	mov QWORD [SS_RCD_N+8*10],0
	mov QWORD [SS_RCD_C+8*10],0
	mov QWORD [SS_RCD_10_TOP],SS_RCD_10_VCT
	mov rdi,0 
	mov rax,SS_RCD_10_VCT
ss_lp_rcd_10:
	cmp rdi,SS_MAX
	jz ss_end_rcd_10
	add rdi,1 
	lea rsi,[rax+8*11]
	mov QWORD [rax],rsi 
	mov rax,rsi 
	jmp ss_lp_rcd_10
ss_end_rcd_10:
	mov rsi,-65526
	mov [rax],rsi 

init_ss_rcd_11:
	mov QWORD [SS_RCD_N+8*11],0
	mov QWORD [SS_RCD_C+8*11],0
	mov QWORD [SS_RCD_11_TOP],SS_RCD_11_VCT
	mov rdi,0 
	mov rax,SS_RCD_11_VCT
ss_lp_rcd_11:
	cmp rdi,SS_MAX
	jz ss_end_rcd_11
	add rdi,1 
	lea rsi,[rax+8*12]
	mov QWORD [rax],rsi 
	mov rax,rsi 
	jmp ss_lp_rcd_11
ss_end_rcd_11:
	mov rsi,-65525
	mov [rax],rsi 

init_ss_rcd_12:
	mov QWORD [SS_RCD_N+8*12],0
	mov QWORD [SS_RCD_C+8*12],0
	mov QWORD [SS_RCD_12_TOP],SS_RCD_12_VCT
	mov rdi,0 
	mov rax,SS_RCD_12_VCT
ss_lp_rcd_12:
	cmp rdi,SS_MAX
	jz ss_end_rcd_12
	add rdi,1 
	lea rsi,[rax+8*13]
	mov QWORD [rax],rsi 
	mov rax,rsi 
	jmp ss_lp_rcd_12
ss_end_rcd_12:
	mov rsi,-65524
	mov [rax],rsi 

init_ss_rcd_13:
	mov QWORD [SS_RCD_N+8*13],0
	mov QWORD [SS_RCD_C+8*13],0
	mov QWORD [SS_RCD_13_TOP],SS_RCD_13_VCT
	mov rdi,0 
	mov rax,SS_RCD_13_VCT
ss_lp_rcd_13:
	cmp rdi,SS_MAX
	jz ss_end_rcd_13
	add rdi,1 
	lea rsi,[rax+8*14]
	mov QWORD [rax],rsi 
	mov rax,rsi 
	jmp ss_lp_rcd_13
ss_end_rcd_13:
	mov rsi,-65523
	mov [rax],rsi 

init_ss_rcd_14:
	mov QWORD [SS_RCD_N+8*14],0
	mov QWORD [SS_RCD_C+8*14],0
	mov QWORD [SS_RCD_14_TOP],SS_RCD_14_VCT
	mov rdi,0 
	mov rax,SS_RCD_14_VCT
ss_lp_rcd_14:
	cmp rdi,SS_MAX
	jz ss_end_rcd_14
	add rdi,1 
	lea rsi,[rax+8*15]
	mov QWORD [rax],rsi 
	mov rax,rsi 
	jmp ss_lp_rcd_14
ss_end_rcd_14:
	mov rsi,-65522
	mov [rax],rsi 

init_ss_rcd_15:
	mov QWORD [SS_RCD_N+8*15],0
	mov QWORD [SS_RCD_C+8*15],0
	mov QWORD [SS_RCD_15_TOP],SS_RCD_15_VCT
	mov rdi,0 
	mov rax,SS_RCD_15_VCT
ss_lp_rcd_15:
	cmp rdi,SS_MAX
	jz ss_end_rcd_15
	add rdi,1 
	lea rsi,[rax+8*16]
	mov QWORD [rax],rsi 
	mov rax,rsi 
	jmp ss_lp_rcd_15
ss_end_rcd_15:
	mov rsi,-65521
	mov [rax],rsi 
	jmp RTM_0
ETR_37: ;; of_s8 0'(= {| l |} ) ⊢ 0'(= a5◂ [ ] ) : (_s8→_t5)
;; rsp=0 , %4~0'(= {| l |} ) 
; #35 0'(= {| l |} ) ⊢ 1(<4)◂0'(= {| l |} )
;; rsp=0 , %5~1(<4)◂0'(= {| l |} ) 
; ∎ 1(<4)◂0'(= {| l |} )
; .mov_ptn2 1(<4)◂0'(= {| l |} ) ⊢ 0'(= a5◂ [ ] )
	mov r14,r13
; .mov_ptn 1(<4)◂1'(= {| l |} ) ⊢ 0'(= a5◂ [ ] )
	mov rax,r14
	mov BYTE [rax+6],1
	mov r13,rax
	ret
ETR_38: ;; len 0'(= a5◂ [ ] ) ⊢ { 0'(= a5◂ [ ] ) 1'(= r ) } : (_t5→{ _t5 _r64 })
;; rsp=0 , %6~0'(= a5◂ [ ] ) 
;; ? 0'(= a5◂ [ ] ) ⊢ 0(<4)◂{ 1'(= a5◂ [ ] ) 2'(= r ) 3'(= a5◂ [ ] ) }
	mov rdi,r13
	cmp BYTE [rdi+6],0
	jnz LB_0
	mov r14, QWORD [r13+8]
	mov r8, QWORD [r13+16]
	mov r9, QWORD [r13+24]
	mov QWORD [GBG_VCT+8*0],r13
	mov rdi,QWORD [GBG_VCT+8*0]
	mov rax,[SS_RCD_3_TOP]
	mov QWORD [rdi],rax 
	mov QWORD [SS_RCD_3_TOP],rdi
;; rsp=0 , %11~3'(= a5◂ [ ] ) %10~2'(= r ) %9~1'(= a5◂ [ ] ) 
; $ 2'(= r ) ⊢ 2'(= r ),0'(= r )
	mov rdi,r8
	C_PUSH_REGS
	mov r8,rdi
	mov rax,r8
	C_POP_REGS
	mov r13,rax
;; rsp=0 , %13~0'(= r ) %12~2'(= r ) %11~3'(= a5◂ [ ] ) %9~1'(= a5◂ [ ] ) 
; #36 { 1'(= a5◂ [ ] ) 0'(= r ) 3'(= a5◂ [ ] ) } ⊢ 0(<4)◂{ 1'(= a5◂ [ ] ) 0'(= r ) 3'(= a5◂ [ ] ) }
;; rsp=0 , %14~0(<4)◂{ 1'(= a5◂ [ ] ) 0'(= r ) 3'(= a5◂ [ ] ) } %12~2'(= r ) 
; ∎ { 0(<4)◂{ 1'(= a5◂ [ ] ) 0'(= r ) 3'(= a5◂ [ ] ) } 2'(= r ) }
; .mov_ptn2 { 0(<4)◂{ 1'(= a5◂ [ ] ) 0'(= r ) 3'(= a5◂ [ ] ) } 2'(= r ) } ⊢ { 0'(= a5◂ [ ] ) 1'(= r ) }
	mov r10,r13
; .mov_ptn 0(<4)◂{ 1'(= a5◂ [ ] ) 4'(= r ) 3'(= a5◂ [ ] ) } ⊢ 0'(= a5◂ [ ] )
	ALC_RCD 3, rax
	mov r11,rax
	mov rax,r14
	mov QWORD [r11+8+8*0],rax
	mov rax,r10
	mov QWORD [r11+8+8*1],rax
	mov rax,r9
	mov QWORD [r11+8+8*2],rax
	mov rax,r11
	mov BYTE [rax+6],0
	mov r13,rax
; .mov_ptn 2'(= r ) ⊢ 1'(= r )
	mov rax,r8
	mov r14,rax
	ret
LB_0:
;; ? 0'(= a5◂ [ ] ) ⊢ 3(<4)◂1'(= r )
	mov rdi,r13
	cmp BYTE [rdi+6],3
	jnz LB_1
	mov QWORD [GBG_VCT+8*0],rdi
	mov r14,QWORD [rdi+8]
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_LN rdi
;; rsp=0 , %8~1'(= r ) 
; $ %[ 1r ] ⊢ %[ 1r ]
;; rsp=0 , %15~%[ 1r ] %8~1'(= r ) 
; #33 1'(= r ) ⊢ 3(<4)◂1'(= r )
;; rsp=0 , %16~3(<4)◂1'(= r ) %15~%[ 1r ] 
; ∎ { 3(<4)◂1'(= r ) %[ 1r ] }
; .mov_ptn2 { 3(<4)◂1'(= r ) %[ 1r ] } ⊢ { 0'(= a5◂ [ ] ) 1'(= r ) }
; .mov_ptn 3(<4)◂1'(= r ) ⊢ 0'(= a5◂ [ ] )
	mov rax,r14
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],3
	mov QWORD [rax+8],rdi
	mov r13,rax
; .mov_ptn %[ 1r ] ⊢ 1'(= r )
	mov rax,1
	mov r14,rax
	ret
LB_1:
;; ? 0'(= a5◂ [ ] ) ⊢ 2(<4)◂{ }
	mov rdi,r13
	cmp BYTE [rdi+6],2
	jnz LB_2
;; rsp=0 , 
; #34 { } ⊢ 2(<4)◂{ }
;; rsp=0 , %17~2(<4)◂{ } 
; $ %[ 0r ] ⊢ %[ 0r ]
;; rsp=0 , %18~%[ 0r ] %17~2(<4)◂{ } 
; ∎ { 2(<4)◂{ } %[ 0r ] }
; .mov_ptn2 { 2(<4)◂{ } %[ 0r ] } ⊢ { 0'(= a5◂ [ ] ) 1'(= r ) }
; .mov_ptn %[ 0r ] ⊢ 1'(= r )
	mov rax,0
	mov r14,rax
; .mov_ptn 2(<4)◂{ } ⊢ 0'(= a5◂ [ ] )
	mov rax,unt 
	mov rax,unt_2
	mov r13,rax
	ret
LB_2:
;; ?. 0'(= a5◂ [ ] ) ⊢ 1(<4)◂0'(= {| l |} )
;; rsp=0 , %7~0'(= {| l |} ) 
; #9 0'(= {| l |} ) ⊢ { 0'(= {| l |} ) 1'(= r ) }
	mov rdi,r13
	mov rsi,0x0000_ffff_ffff_ffff
	and rsi,[rdi] 
	mov r14,rsi
;; rsp=0 , %20~1'(= r ) %19~0'(= {| l |} ) 
; #35 0'(= {| l |} ) ⊢ 1(<4)◂0'(= {| l |} )
;; rsp=0 , %21~1(<4)◂0'(= {| l |} ) %20~1'(= r ) 
; ∎ { 1(<4)◂0'(= {| l |} ) 1'(= r ) }
; .mov_ptn2 { 1(<4)◂0'(= {| l |} ) 1'(= r ) } ⊢ { 0'(= a5◂ [ ] ) 1'(= r ) }
	mov r8,r13
; .mov_ptn 1(<4)◂2'(= {| l |} ) ⊢ 0'(= a5◂ [ ] )
	mov rax,r8
	mov BYTE [rax+6],1
	mov r13,rax
	ret
ETR_39: ;; add_s8 { 0'(= a5◂ [ ] ) 1'(= {| l |} ) } ⊢ 0'(= a5◂ [ ] ) : ({ _t5 _s8 }→_t5)
;; rsp=0 , %23~1'(= {| l |} ) %22~0'(= a5◂ [ ] ) 
; #9 1'(= {| l |} ) ⊢ { 1'(= {| l |} ) 2'(= r ) }
	mov rdi,r14
	mov rsi,0x0000_ffff_ffff_ffff
	and rsi,[rdi] 
	mov r8,rsi
;; rsp=0 , %25~2'(= r ) %24~1'(= {| l |} ) %22~0'(= a5◂ [ ] ) 
; #38 0'(= a5◂ [ ] ) ⊢ { 0'(= a5◂ [ ] ) 3'(= r ) }
	sub rsp,16
	mov QWORD [rsp+8*0],r14
	mov QWORD [rsp+8*1],r8
; .mov_ptn2 0'(= a5◂ [ ] ) ⊢ 0'(= a5◂ [ ] )
	call ETR_38
	mov r8,QWORD [rsp-8+8*2]
	mov r9,r14
	mov r14,QWORD [rsp-8+8*1]
	add rsp,16
;; rsp=0 , %27~3'(= r ) %26~0'(= a5◂ [ ] ) %25~2'(= r ) %24~1'(= {| l |} ) 
; #13 { 2'(= r ) 3'(= r ) } ⊢ { 2'(= r ) 3'(= r ) }
	add r8,r9
;; rsp=0 , %29~3'(= r ) %28~2'(= r ) %26~0'(= a5◂ [ ] ) %24~1'(= {| l |} ) 
; #35 1'(= {| l |} ) ⊢ 1(<4)◂1'(= {| l |} )
;; rsp=0 , %30~1(<4)◂1'(= {| l |} ) %29~3'(= r ) %28~2'(= r ) %26~0'(= a5◂ [ ] ) 
; #36 { 0'(= a5◂ [ ] ) 2'(= r ) 1(<4)◂1'(= {| l |} ) } ⊢ 0(<4)◂{ 0'(= a5◂ [ ] ) 2'(= r ) 1(<4)◂1'(= {| l |} ) }
;; rsp=0 , %31~0(<4)◂{ 0'(= a5◂ [ ] ) 2'(= r ) 1(<4)◂1'(= {| l |} ) } %29~3'(= r ) 
; ∎ 0(<4)◂{ 0'(= a5◂ [ ] ) 2'(= r ) 1(<4)◂1'(= {| l |} ) }
; .dlt.ptn 3'(= r )
	mov rdi,r9
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<4)◂{ 0'(= a5◂ [ ] ) 2'(= r ) 1(<4)◂1'(= {| l |} ) } ⊢ 0'(= a5◂ [ ] )
	mov r9,r13
; .mov_ptn 0(<4)◂{ 3'(= a5◂ [ ] ) 2'(= r ) 1(<4)◂1'(= {| l |} ) } ⊢ 0'(= a5◂ [ ] )
	ALC_RCD 3, rax
	mov r10,rax
	mov rax,r9
	mov QWORD [r10+8+8*0],rax
	mov rax,r8
	mov QWORD [r10+8+8*1],rax
	mov rax,r14
	mov BYTE [rax+6],1
	mov QWORD [r10+8+8*2],rax
	mov rax,r10
	mov BYTE [rax+6],0
	mov r13,rax
	ret
ETR_40: ;; pfx_s8 { 0'(= {| l |} ) 1'(= a5◂ [ ] ) } ⊢ 0'(= a5◂ [ ] ) : ({ _s8 _t5 }→_t5)
;; rsp=0 , %33~1'(= a5◂ [ ] ) %32~0'(= {| l |} ) 
; #9 0'(= {| l |} ) ⊢ { 0'(= {| l |} ) 2'(= r ) }
	mov rdi,r13
	mov rsi,0x0000_ffff_ffff_ffff
	and rsi,[rdi] 
	mov r8,rsi
;; rsp=0 , %35~2'(= r ) %34~0'(= {| l |} ) %33~1'(= a5◂ [ ] ) 
; #38 1'(= a5◂ [ ] ) ⊢ { 3'(= a5◂ [ ] ) 1'(= r ) }
	sub rsp,16
	mov QWORD [rsp+8*0],r13
	mov QWORD [rsp+8*1],r8
; .mov_ptn2 1'(= a5◂ [ ] ) ⊢ 0'(= a5◂ [ ] )
; .mov_ptn 1'(= a5◂ [ ] ) ⊢ 0'(= a5◂ [ ] )
	mov rax,r14
	mov r13,rax
	call ETR_38
	mov r8,QWORD [rsp-8+8*2]
	mov r9,r13
	mov r13,QWORD [rsp-8+8*1]
	add rsp,16
;; rsp=0 , %37~1'(= r ) %36~3'(= a5◂ [ ] ) %35~2'(= r ) %34~0'(= {| l |} ) 
; #13 { 2'(= r ) 1'(= r ) } ⊢ { 2'(= r ) 1'(= r ) }
	add r8,r14
;; rsp=0 , %39~1'(= r ) %38~2'(= r ) %36~3'(= a5◂ [ ] ) %34~0'(= {| l |} ) 
; #35 0'(= {| l |} ) ⊢ 1(<4)◂0'(= {| l |} )
;; rsp=0 , %40~1(<4)◂0'(= {| l |} ) %39~1'(= r ) %38~2'(= r ) %36~3'(= a5◂ [ ] ) 
; #36 { 1(<4)◂0'(= {| l |} ) 2'(= r ) 3'(= a5◂ [ ] ) } ⊢ 0(<4)◂{ 1(<4)◂0'(= {| l |} ) 2'(= r ) 3'(= a5◂ [ ] ) }
;; rsp=0 , %41~0(<4)◂{ 1(<4)◂0'(= {| l |} ) 2'(= r ) 3'(= a5◂ [ ] ) } %39~1'(= r ) 
; ∎ 0(<4)◂{ 1(<4)◂0'(= {| l |} ) 2'(= r ) 3'(= a5◂ [ ] ) }
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<4)◂{ 1(<4)◂0'(= {| l |} ) 2'(= r ) 3'(= a5◂ [ ] ) } ⊢ 0'(= a5◂ [ ] )
	mov r14,r13
; .mov_ptn 0(<4)◂{ 1(<4)◂1'(= {| l |} ) 2'(= r ) 3'(= a5◂ [ ] ) } ⊢ 0'(= a5◂ [ ] )
	ALC_RCD 3, rax
	mov r10,rax
	mov rax,r14
	mov BYTE [rax+6],1
	mov QWORD [r10+8+8*0],rax
	mov rax,r8
	mov QWORD [r10+8+8*1],rax
	mov rax,r9
	mov QWORD [r10+8+8*2],rax
	mov rax,r10
	mov BYTE [rax+6],0
	mov r13,rax
	ret
ETR_41: ;; add_chr { 0'(= a5◂ [ ] ) 1'(= r ) } ⊢ 0'(= a5◂ [ ] ) : ({ _t5 _r64 }→_t5)
;; rsp=0 , %43~1'(= r ) %42~0'(= a5◂ [ ] ) 
; #38 0'(= a5◂ [ ] ) ⊢ { 0'(= a5◂ [ ] ) 2'(= r ) }
	sub rsp,8
	mov QWORD [rsp+8*0],r14
; .mov_ptn2 0'(= a5◂ [ ] ) ⊢ 0'(= a5◂ [ ] )
	call ETR_38
	mov r8,r14
	mov r14,QWORD [rsp-8+8*1]
	add rsp,8
;; rsp=0 , %45~2'(= r ) %44~0'(= a5◂ [ ] ) %43~1'(= r ) 
; #11 2'(= r ) ⊢ 2'(= r )
	add r8,1
;; rsp=0 , %46~2'(= r ) %44~0'(= a5◂ [ ] ) %43~1'(= r ) 
; #33 1'(= r ) ⊢ 3(<4)◂1'(= r )
;; rsp=0 , %47~3(<4)◂1'(= r ) %46~2'(= r ) %44~0'(= a5◂ [ ] ) 
; #36 { 0'(= a5◂ [ ] ) 2'(= r ) 3(<4)◂1'(= r ) } ⊢ 0(<4)◂{ 0'(= a5◂ [ ] ) 2'(= r ) 3(<4)◂1'(= r ) }
;; rsp=0 , %48~0(<4)◂{ 0'(= a5◂ [ ] ) 2'(= r ) 3(<4)◂1'(= r ) } 
; ∎ 0(<4)◂{ 0'(= a5◂ [ ] ) 2'(= r ) 3(<4)◂1'(= r ) }
; .mov_ptn2 0(<4)◂{ 0'(= a5◂ [ ] ) 2'(= r ) 3(<4)◂1'(= r ) } ⊢ 0'(= a5◂ [ ] )
	mov r9,r13
; .mov_ptn 0(<4)◂{ 3'(= a5◂ [ ] ) 2'(= r ) 3(<4)◂1'(= r ) } ⊢ 0'(= a5◂ [ ] )
	ALC_RCD 3, rax
	mov r10,rax
	mov rax,r9
	mov QWORD [r10+8+8*0],rax
	mov rax,r8
	mov QWORD [r10+8+8*1],rax
	mov rax,r14
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],3
	mov QWORD [rax+8],rdi
	mov QWORD [r10+8+8*2],rax
	mov rax,r10
	mov BYTE [rax+6],0
	mov r13,rax
	ret
ETR_42: ;; pfx_chr { 0'(= r ) 1'(= a5◂ [ ] ) } ⊢ 0'(= a5◂ [ ] ) : ({ _r64 _t5 }→_t5)
;; rsp=0 , %50~1'(= a5◂ [ ] ) %49~0'(= r ) 
; #38 1'(= a5◂ [ ] ) ⊢ { 2'(= a5◂ [ ] ) 1'(= r ) }
	sub rsp,8
	mov QWORD [rsp+8*0],r13
; .mov_ptn2 1'(= a5◂ [ ] ) ⊢ 0'(= a5◂ [ ] )
; .mov_ptn 1'(= a5◂ [ ] ) ⊢ 0'(= a5◂ [ ] )
	mov rax,r14
	mov r13,rax
	call ETR_38
	mov r8,r13
	mov r13,QWORD [rsp-8+8*1]
	add rsp,8
;; rsp=0 , %52~1'(= r ) %51~2'(= a5◂ [ ] ) %49~0'(= r ) 
; #11 1'(= r ) ⊢ 1'(= r )
	add r14,1
;; rsp=0 , %53~1'(= r ) %51~2'(= a5◂ [ ] ) %49~0'(= r ) 
; #33 0'(= r ) ⊢ 3(<4)◂0'(= r )
;; rsp=0 , %54~3(<4)◂0'(= r ) %53~1'(= r ) %51~2'(= a5◂ [ ] ) 
; #36 { 3(<4)◂0'(= r ) 1'(= r ) 2'(= a5◂ [ ] ) } ⊢ 0(<4)◂{ 3(<4)◂0'(= r ) 1'(= r ) 2'(= a5◂ [ ] ) }
;; rsp=0 , %55~0(<4)◂{ 3(<4)◂0'(= r ) 1'(= r ) 2'(= a5◂ [ ] ) } 
; ∎ 0(<4)◂{ 3(<4)◂0'(= r ) 1'(= r ) 2'(= a5◂ [ ] ) }
; .mov_ptn2 0(<4)◂{ 3(<4)◂0'(= r ) 1'(= r ) 2'(= a5◂ [ ] ) } ⊢ 0'(= a5◂ [ ] )
	mov r9,r13
; .mov_ptn 0(<4)◂{ 3(<4)◂3'(= r ) 1'(= r ) 2'(= a5◂ [ ] ) } ⊢ 0'(= a5◂ [ ] )
	ALC_RCD 3, rax
	mov r10,rax
	mov rax,r9
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],3
	mov QWORD [rax+8],rdi
	mov QWORD [r10+8+8*0],rax
	mov rax,r14
	mov QWORD [r10+8+8*1],rax
	mov rax,r8
	mov QWORD [r10+8+8*2],rax
	mov rax,r10
	mov BYTE [rax+6],0
	mov r13,rax
	ret
ETR_43: ;; cct { 0'(= a5◂ [ ] ) 1'(= a5◂ [ ] ) } ⊢ 0'(= a5◂ [ ] ) : ({ _t5 _t5 }→_t5)
;; rsp=0 , %57~1'(= a5◂ [ ] ) %56~0'(= a5◂ [ ] ) 
; #38 0'(= a5◂ [ ] ) ⊢ { 0'(= a5◂ [ ] ) 2'(= r ) }
	sub rsp,8
	mov QWORD [rsp+8*0],r14
; .mov_ptn2 0'(= a5◂ [ ] ) ⊢ 0'(= a5◂ [ ] )
	call ETR_38
	mov r8,r14
	mov r14,QWORD [rsp-8+8*1]
	add rsp,8
;; rsp=0 , %59~2'(= r ) %58~0'(= a5◂ [ ] ) %57~1'(= a5◂ [ ] ) 
; #38 1'(= a5◂ [ ] ) ⊢ { 3'(= a5◂ [ ] ) 1'(= r ) }
	sub rsp,16
	mov QWORD [rsp+8*0],r13
	mov QWORD [rsp+8*1],r8
; .mov_ptn2 1'(= a5◂ [ ] ) ⊢ 0'(= a5◂ [ ] )
; .mov_ptn 1'(= a5◂ [ ] ) ⊢ 0'(= a5◂ [ ] )
	mov rax,r14
	mov r13,rax
	call ETR_38
	mov r8,QWORD [rsp-8+8*2]
	mov r9,r13
	mov r13,QWORD [rsp-8+8*1]
	add rsp,16
;; rsp=0 , %61~1'(= r ) %60~3'(= a5◂ [ ] ) %59~2'(= r ) %58~0'(= a5◂ [ ] ) 
; #13 { 2'(= r ) 1'(= r ) } ⊢ { 2'(= r ) 1'(= r ) }
	add r8,r14
;; rsp=0 , %63~1'(= r ) %62~2'(= r ) %60~3'(= a5◂ [ ] ) %58~0'(= a5◂ [ ] ) 
; #36 { 0'(= a5◂ [ ] ) 2'(= r ) 3'(= a5◂ [ ] ) } ⊢ 0(<4)◂{ 0'(= a5◂ [ ] ) 2'(= r ) 3'(= a5◂ [ ] ) }
;; rsp=0 , %64~0(<4)◂{ 0'(= a5◂ [ ] ) 2'(= r ) 3'(= a5◂ [ ] ) } %63~1'(= r ) 
; ∎ 0(<4)◂{ 0'(= a5◂ [ ] ) 2'(= r ) 3'(= a5◂ [ ] ) }
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<4)◂{ 0'(= a5◂ [ ] ) 2'(= r ) 3'(= a5◂ [ ] ) } ⊢ 0'(= a5◂ [ ] )
	mov r14,r13
; .mov_ptn 0(<4)◂{ 1'(= a5◂ [ ] ) 2'(= r ) 3'(= a5◂ [ ] ) } ⊢ 0'(= a5◂ [ ] )
	ALC_RCD 3, rax
	mov r10,rax
	mov rax,r14
	mov QWORD [r10+8+8*0],rax
	mov rax,r8
	mov QWORD [r10+8+8*1],rax
	mov rax,r9
	mov QWORD [r10+8+8*2],rax
	mov rax,r10
	mov BYTE [rax+6],0
	mov r13,rax
	ret
ETR_44: ;; mk_s8_i { 0'(= a5◂ [ ] ) 1'(= {| l |} ) 2'(= r ) } ⊢ { 0'(= a5◂ [ ] ) 1'(= {| l |} ) 2'(= r ) } : ({ _t5 _s8 _r64 }→{ _t5 _s8 _r64 })
;; rsp=0 , %67~2'(= r ) %66~1'(= {| l |} ) %65~0'(= a5◂ [ ] ) 
;; ? 0'(= a5◂ [ ] ) ⊢ 0(<4)◂{ 3'(= a5◂ [ ] ) 4'(= r ) 5'(= a5◂ [ ] ) }
	mov rdi,r13
	cmp BYTE [rdi+6],0
	jnz LB_3
	mov r9, QWORD [r13+8]
	mov r10, QWORD [r13+16]
	mov r11, QWORD [r13+24]
	mov QWORD [GBG_VCT+8*0],r13
	mov rdi,QWORD [GBG_VCT+8*0]
	mov rax,[SS_RCD_3_TOP]
	mov QWORD [rdi],rax 
	mov QWORD [SS_RCD_3_TOP],rdi
;; rsp=0 , %72~5'(= a5◂ [ ] ) %71~4'(= r ) %70~3'(= a5◂ [ ] ) %67~2'(= r ) %66~1'(= {| l |} ) 
; #44 { 3'(= a5◂ [ ] ) 1'(= {| l |} ) 2'(= r ) } ⊢ { 0'(= a5◂ [ ] ) 1'(= {| l |} ) 2'(= r ) }
	sub rsp,16
	mov QWORD [rsp+8*0],r10
	mov QWORD [rsp+8*1],r11
; .mov_ptn2 { 3'(= a5◂ [ ] ) 1'(= {| l |} ) 2'(= r ) } ⊢ { 0'(= a5◂ [ ] ) 1'(= {| l |} ) 2'(= r ) }
; .mov_ptn 3'(= a5◂ [ ] ) ⊢ 0'(= a5◂ [ ] )
	mov rax,r9
	mov r13,rax
	call ETR_44
	mov r11,QWORD [rsp-8+8*2]
	mov r10,QWORD [rsp-8+8*1]
	add rsp,16
;; rsp=0 , %75~2'(= r ) %74~1'(= {| l |} ) %73~0'(= a5◂ [ ] ) %72~5'(= a5◂ [ ] ) %71~4'(= r ) 
; #44 { 5'(= a5◂ [ ] ) 1'(= {| l |} ) 2'(= r ) } ⊢ { 3'(= a5◂ [ ] ) 1'(= {| l |} ) 2'(= r ) }
	sub rsp,16
	mov QWORD [rsp+8*0],r13
	mov QWORD [rsp+8*1],r10
; .mov_ptn2 { 5'(= a5◂ [ ] ) 1'(= {| l |} ) 2'(= r ) } ⊢ { 0'(= a5◂ [ ] ) 1'(= {| l |} ) 2'(= r ) }
; .mov_ptn 5'(= a5◂ [ ] ) ⊢ 0'(= a5◂ [ ] )
	mov rax,r11
	mov r13,rax
	call ETR_44
	mov r10,QWORD [rsp-8+8*2]
	mov r9,r13
	mov r13,QWORD [rsp-8+8*1]
	add rsp,16
;; rsp=0 , %78~2'(= r ) %77~1'(= {| l |} ) %76~3'(= a5◂ [ ] ) %73~0'(= a5◂ [ ] ) %71~4'(= r ) 
; #36 { 0'(= a5◂ [ ] ) 4'(= r ) 3'(= a5◂ [ ] ) } ⊢ 0(<4)◂{ 0'(= a5◂ [ ] ) 4'(= r ) 3'(= a5◂ [ ] ) }
;; rsp=0 , %79~0(<4)◂{ 0'(= a5◂ [ ] ) 4'(= r ) 3'(= a5◂ [ ] ) } %78~2'(= r ) %77~1'(= {| l |} ) 
; ∎ { 0(<4)◂{ 0'(= a5◂ [ ] ) 4'(= r ) 3'(= a5◂ [ ] ) } 1'(= {| l |} ) 2'(= r ) }
; .mov_ptn2 { 0(<4)◂{ 0'(= a5◂ [ ] ) 4'(= r ) 3'(= a5◂ [ ] ) } 1'(= {| l |} ) 2'(= r ) } ⊢ { 0'(= a5◂ [ ] ) 1'(= {| l |} ) 2'(= r ) }
	mov r11,r13
; .mov_ptn 0(<4)◂{ 5'(= a5◂ [ ] ) 4'(= r ) 3'(= a5◂ [ ] ) } ⊢ 0'(= a5◂ [ ] )
	ALC_RCD 3, rax
	mov rcx,rax
	mov rax,r11
	mov QWORD [rcx+8+8*0],rax
	mov rax,r10
	mov QWORD [rcx+8+8*1],rax
	mov rax,r9
	mov QWORD [rcx+8+8*2],rax
	mov rax,rcx
	mov BYTE [rax+6],0
	mov r13,rax
	ret
LB_3:
;; ? 0'(= a5◂ [ ] ) ⊢ 2(<4)◂{ }
	mov rdi,r13
	cmp BYTE [rdi+6],2
	jnz LB_4
;; rsp=0 , %67~2'(= r ) %66~1'(= {| l |} ) 
; #34 { } ⊢ 2(<4)◂{ }
;; rsp=0 , %80~2(<4)◂{ } %67~2'(= r ) %66~1'(= {| l |} ) 
; ∎ { 2(<4)◂{ } 1'(= {| l |} ) 2'(= r ) }
; .mov_ptn2 { 2(<4)◂{ } 1'(= {| l |} ) 2'(= r ) } ⊢ { 0'(= a5◂ [ ] ) 1'(= {| l |} ) 2'(= r ) }
; .mov_ptn 2(<4)◂{ } ⊢ 0'(= a5◂ [ ] )
	mov rax,unt 
	mov rax,unt_2
	mov r13,rax
	ret
LB_4:
;; ? 0'(= a5◂ [ ] ) ⊢ 3(<4)◂3'(= r )
	mov rdi,r13
	cmp BYTE [rdi+6],3
	jnz LB_5
	mov QWORD [GBG_VCT+8*0],rdi
	mov r9,QWORD [rdi+8]
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_LN rdi
;; rsp=0 , %69~3'(= r ) %67~2'(= r ) %66~1'(= {| l |} ) 
; #16 { 1'(= {| l |} ) 2'(= r ) 3'(= r ) } ⊢ { 1'(= {| l |} ) 2'(= r ) 3'(= r ) }
; _sts { 1'(= {| l |} ) 2'(= r ) 3'(= r ) } ⊢ { 1'(= {| l |} ) 2'(= r ) 3'(= r ) }
	mov rax,r14
	mov rdi,0x0000_ffff_ffff_ffff
	and rdi,[rax]
	cmp rdi,r8
	jle err
	mov rsi,r8
	mov rdi,r9
	mov BYTE [rax+8+rsi],dil
;; rsp=0 , %83~3'(= r ) %82~2'(= r ) %81~1'(= {| l |} ) 
; #11 2'(= r ) ⊢ 2'(= r )
	add r8,1
;; rsp=0 , %84~2'(= r ) %83~3'(= r ) %81~1'(= {| l |} ) 
; #33 3'(= r ) ⊢ 3(<4)◂3'(= r )
;; rsp=0 , %85~3(<4)◂3'(= r ) %84~2'(= r ) %81~1'(= {| l |} ) 
; ∎ { 3(<4)◂3'(= r ) 1'(= {| l |} ) 2'(= r ) }
; .mov_ptn2 { 3(<4)◂3'(= r ) 1'(= {| l |} ) 2'(= r ) } ⊢ { 0'(= a5◂ [ ] ) 1'(= {| l |} ) 2'(= r ) }
; .mov_ptn 3(<4)◂3'(= r ) ⊢ 0'(= a5◂ [ ] )
	mov rax,r9
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],3
	mov QWORD [rax+8],rdi
	mov r13,rax
	ret
LB_5:
;; ?. 0'(= a5◂ [ ] ) ⊢ 1(<4)◂0'(= {| l |} )
;; rsp=0 , %68~0'(= {| l |} ) %67~2'(= r ) %66~1'(= {| l |} ) 
; #9 0'(= {| l |} ) ⊢ { 0'(= {| l |} ) 3'(= r ) }
	mov rdi,r13
	mov rsi,0x0000_ffff_ffff_ffff
	and rsi,[rdi] 
	mov r9,rsi
;; rsp=0 , %87~3'(= r ) %86~0'(= {| l |} ) %67~2'(= r ) %66~1'(= {| l |} ) 
; $ %[ 0r ] ⊢ %[ 0r ]
;; rsp=0 , %88~%[ 0r ] %87~3'(= r ) %86~0'(= {| l |} ) %67~2'(= r ) %66~1'(= {| l |} ) 
; #19 { 3'(= r ) 0'(= {| l |} ) %[ 0r ] 1'(= {| l |} ) 2'(= r ) } ⊢ { 3'(= r ) 0'(= {| l |} ) %[ 0r ] 1'(= {| l |} ) 2'(= r ) }
; _rep_movsb { 3'(= r ) 0'(= {| l |} ) %[ 0r ] 1'(= {| l |} ) 2'(= r ) } ⊢ { 3'(= r ) 0'(= {| l |} ) %[ 0r ] 1'(= {| l |} ) 2'(= r ) }
	mov rax,r9
	mov rsi,r13
	mov rdi,0x0000_ffff_ffff_ffff
	and rdi,[rsi]
	sub rdi,rax
	lea rsi,[rsi+8]
	cmp rdi,0
	jl err
	lea rsi,[rsi+0]
	push rsi 
	mov rsi,r14
	mov rdi,0x0000_ffff_ffff_ffff
	and rdi,[rsi]
	sub rdi,rax
	lea rsi,[rsi+8]
	cmp rdi,r8
	jl err
	add rsi,r8
	mov rdi,rsi 
	pop rsi 
	push rcx 
	mov rcx,rax 
	cld 
	rep movsb
	pop rcx 
;; rsp=0 , %93~2'(= r ) %92~1'(= {| l |} ) %91~%[ 0r ] %90~0'(= {| l |} ) %89~3'(= r ) 
; #35 0'(= {| l |} ) ⊢ 1(<4)◂0'(= {| l |} )
;; rsp=0 , %94~1(<4)◂0'(= {| l |} ) %93~2'(= r ) %92~1'(= {| l |} ) %91~%[ 0r ] %89~3'(= r ) 
; ∎ { 1(<4)◂0'(= {| l |} ) 1'(= {| l |} ) 2'(= r ) }
; .dlt.ptn %[ 0r ]
; .dlt.ptn 3'(= r )
	mov rdi,r9
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 { 1(<4)◂0'(= {| l |} ) 1'(= {| l |} ) 2'(= r ) } ⊢ { 0'(= a5◂ [ ] ) 1'(= {| l |} ) 2'(= r ) }
	mov r9,r13
; .mov_ptn 1(<4)◂3'(= {| l |} ) ⊢ 0'(= a5◂ [ ] )
	mov rax,r9
	mov BYTE [rax+6],1
	mov r13,rax
	ret
ETR_45: ;; mk_s8 0'(= a5◂ [ ] ) ⊢ { 0'(= a5◂ [ ] ) 1'(= {| l |} ) } : (_t5→{ _t5 _s8 })
;; rsp=0 , %95~0'(= a5◂ [ ] ) 
; #38 0'(= a5◂ [ ] ) ⊢ { 0'(= a5◂ [ ] ) 1'(= r ) }
; .mov_ptn2 0'(= a5◂ [ ] ) ⊢ 0'(= a5◂ [ ] )
	call ETR_38
;; rsp=0 , %97~1'(= r ) %96~0'(= a5◂ [ ] ) 
; #8 1'(= r ) ⊢ { 1'(= r ) 2'(= {| l |} ) }
	mov rdi,r14
	call mlc_s8
	mov r8,rax
;; rsp=0 , %99~2'(= {| l |} ) %98~1'(= r ) %96~0'(= a5◂ [ ] ) 
; $ %[ 0r ] ⊢ %[ 0r ]
;; rsp=0 , %100~%[ 0r ] %99~2'(= {| l |} ) %98~1'(= r ) %96~0'(= a5◂ [ ] ) 
; #44 { 0'(= a5◂ [ ] ) 2'(= {| l |} ) %[ 0r ] } ⊢ { 0'(= a5◂ [ ] ) 3'(= {| l |} ) 2'(= r ) }
	sub rsp,8
	mov QWORD [rsp+8*0],r14
; .mov_ptn2 { 0'(= a5◂ [ ] ) 2'(= {| l |} ) %[ 0r ] } ⊢ { 0'(= a5◂ [ ] ) 1'(= {| l |} ) 2'(= r ) }
	mov r9,r8
; .mov_ptn %[ 0r ] ⊢ 2'(= r )
	mov rax,0
	mov r8,rax
; .mov_ptn 3'(= {| l |} ) ⊢ 1'(= {| l |} )
	mov rax,r9
	mov r14,rax
	call ETR_44
	mov r9,r14
	mov r14,QWORD [rsp-8+8*1]
	add rsp,8
;; rsp=0 , %103~2'(= r ) %102~3'(= {| l |} ) %101~0'(= a5◂ [ ] ) %98~1'(= r ) 
; ∎ { 0'(= a5◂ [ ] ) 3'(= {| l |} ) }
; .dlt.ptn 2'(= r )
	mov rdi,r8
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 { 0'(= a5◂ [ ] ) 3'(= {| l |} ) } ⊢ { 0'(= a5◂ [ ] ) 1'(= {| l |} ) }
; .mov_ptn 3'(= {| l |} ) ⊢ 1'(= {| l |} )
	mov rax,r9
	mov r14,rax
	ret
LB_7:
	movzx rax,BYTE [r8+6]
	jmp QWORD [LB_10+8*rax]
LB_10: dq LB_8,LB_9
LB_8:
	jmp LB_11
LB_9:
	jmp LB_11
LB_11:
	ret
ETR_48: ;; and { 0'(= a6◂ [ ] ) 1'(= a6◂ [ ] ) } ⊢ 0'(= a6◂ [ ] ) : ({ _t6 _t6 }→_t6)
;; rsp=0 , %105~1'(= a6◂ [ ] ) %104~0'(= a6◂ [ ] ) 
;; ?; 0'(= a6◂ [ ] ) ⊢ 0(<2)◂{ }
	mov rdi,r13
	cmp BYTE [rdi+6],0
	jnz LB_6
;; ?; 1'(= a6◂ [ ] ) ⊢ 0(<2)◂{ }
	mov rdi,r14
	cmp BYTE [rdi+6],0
	jnz LB_6
;; rsp=0 , 
; #47 { } ⊢ 0(<2)◂{ }
;; rsp=0 , %106~0(<2)◂{ } 
; ∎ 0(<2)◂{ }
; .mov_ptn2 0(<2)◂{ } ⊢ 0'(= a6◂ [ ] )
; .mov_ptn 0(<2)◂{ } ⊢ 0'(= a6◂ [ ] )
	mov rax,unt 
	mov rax,unt_0
	mov r13,rax
	ret
LB_6:
;; rsp=0 , %105~1'(= a6◂ [ ] ) %104~0'(= a6◂ [ ] ) 
; #46 { } ⊢ 1(<2)◂{ }
;; rsp=0 , %107~1(<2)◂{ } %105~1'(= a6◂ [ ] ) %104~0'(= a6◂ [ ] ) 
; ∎ 1(<2)◂{ }
; .dlt.ptn 1'(= a6◂ [ ] )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	call LB_7
	C_POP_REGS
; .dlt.ptn 0'(= a6◂ [ ] )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	call LB_7
	C_POP_REGS
; .mov_ptn2 1(<2)◂{ } ⊢ 0'(= a6◂ [ ] )
; .mov_ptn 1(<2)◂{ } ⊢ 0'(= a6◂ [ ] )
	mov rax,unt 
	mov rax,unt_1
	mov r13,rax
	ret
ETR_49: ;; or { 0'(= a6◂ [ ] ) 1'(= a6◂ [ ] ) } ⊢ 0'(= a6◂ [ ] ) : ({ _t6 _t6 }→_t6)
;; rsp=0 , %109~1'(= a6◂ [ ] ) %108~0'(= a6◂ [ ] ) 
;; ?; 0'(= a6◂ [ ] ) ⊢ 1(<2)◂{ }
	mov rdi,r13
	cmp BYTE [rdi+6],1
	jnz LB_12
;; ?; 1'(= a6◂ [ ] ) ⊢ 1(<2)◂{ }
	mov rdi,r14
	cmp BYTE [rdi+6],1
	jnz LB_12
;; rsp=0 , 
; #46 { } ⊢ 1(<2)◂{ }
;; rsp=0 , %110~1(<2)◂{ } 
; ∎ 1(<2)◂{ }
; .mov_ptn2 1(<2)◂{ } ⊢ 0'(= a6◂ [ ] )
; .mov_ptn 1(<2)◂{ } ⊢ 0'(= a6◂ [ ] )
	mov rax,unt 
	mov rax,unt_1
	mov r13,rax
	ret
LB_12:
;; rsp=0 , %109~1'(= a6◂ [ ] ) %108~0'(= a6◂ [ ] ) 
; #47 { } ⊢ 0(<2)◂{ }
;; rsp=0 , %111~0(<2)◂{ } %109~1'(= a6◂ [ ] ) %108~0'(= a6◂ [ ] ) 
; ∎ 0(<2)◂{ }
; .dlt.ptn 1'(= a6◂ [ ] )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	call LB_7
	C_POP_REGS
; .dlt.ptn 0'(= a6◂ [ ] )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	call LB_7
	C_POP_REGS
; .mov_ptn2 0(<2)◂{ } ⊢ 0'(= a6◂ [ ] )
; .mov_ptn 0(<2)◂{ } ⊢ 0'(= a6◂ [ ] )
	mov rax,unt 
	mov rax,unt_0
	mov r13,rax
	ret
ETR_50: ;; sub { 0'(= a6◂ [ ] ) 1'(= a6◂ [ ] ) } ⊢ 0'(= a6◂ [ ] ) : ({ _t6 _t6 }→_t6)
;; rsp=0 , %113~1'(= a6◂ [ ] ) %112~0'(= a6◂ [ ] ) 
;; ?; 1'(= a6◂ [ ] ) ⊢ 1(<2)◂{ }
	mov rdi,r14
	cmp BYTE [rdi+6],1
	jnz LB_13
;; rsp=0 , %112~0'(= a6◂ [ ] ) 
; ∎ 0'(= a6◂ [ ] )
; .mov_ptn2 0'(= a6◂ [ ] ) ⊢ 0'(= a6◂ [ ] )
	ret
LB_13:
;; ?; 1'(= a6◂ [ ] ) ⊢ 0(<2)◂{ }
;; rsp=0 , %112~0'(= a6◂ [ ] ) 
; #46 { } ⊢ 1(<2)◂{ }
;; rsp=0 , %114~1(<2)◂{ } %112~0'(= a6◂ [ ] ) 
; ∎ 1(<2)◂{ }
; .dlt.ptn 0'(= a6◂ [ ] )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	call LB_7
	C_POP_REGS
; .mov_ptn2 1(<2)◂{ } ⊢ 0'(= a6◂ [ ] )
; .mov_ptn 1(<2)◂{ } ⊢ 0'(= a6◂ [ ] )
	mov rax,unt 
	mov rax,unt_1
	mov r13,rax
	ret
ETR_56: ;; s8_of_r64_lst_i { 0'(= r ) 1'(= a2◂ [ r] ) } ⊢ { 0'(= r ) 1'(= {| l |} ) } : ({ _r64 _lst◂_r64 }→{ _r64 _s8 })
;; rsp=0 , %131~1'(= a2◂ [ r] ) %130~0'(= r ) 
;; ?; 1'(= a2◂ [ r] ) ⊢ 0(<2)◂{ 2'(= r ) 3'(= a2◂ [ r] ) }
	mov rdi,r14
	cmp BYTE [rdi+6],0
	jnz LB_14
	mov r8, QWORD [r14+8]
	mov r9, QWORD [r14+16]
	mov QWORD [GBG_VCT+8*0],r14
	mov rdi,QWORD [GBG_VCT+8*0]
	mov rax,[SS_RCD_2_TOP]
	mov QWORD [rdi],rax 
	mov QWORD [SS_RCD_2_TOP],rdi
;; rsp=0 , %133~3'(= a2◂ [ r] ) %132~2'(= r ) %130~0'(= r ) 
; #11 0'(= r ) ⊢ 0'(= r )
	add r13,1
;; rsp=0 , %134~0'(= r ) %133~3'(= a2◂ [ r] ) %132~2'(= r ) 
; #56 { 0'(= r ) 3'(= a2◂ [ r] ) } ⊢ { 0'(= r ) 1'(= {| l |} ) }
	sub rsp,8
	mov QWORD [rsp+8*0],r8
; .mov_ptn2 { 0'(= r ) 3'(= a2◂ [ r] ) } ⊢ { 0'(= r ) 1'(= a2◂ [ r] ) }
; .mov_ptn 3'(= a2◂ [ r] ) ⊢ 1'(= a2◂ [ r] )
	mov rax,r9
	mov r14,rax
	call ETR_56
	mov r8,QWORD [rsp-8+8*1]
	add rsp,8
;; rsp=0 , %136~1'(= {| l |} ) %135~0'(= r ) %132~2'(= r ) 
; #12 0'(= r ) ⊢ 0'(= r )
	sub r13,1
;; rsp=0 , %137~0'(= r ) %136~1'(= {| l |} ) %132~2'(= r ) 
; #16 { 1'(= {| l |} ) 0'(= r ) 2'(= r ) } ⊢ { 1'(= {| l |} ) 0'(= r ) 2'(= r ) }
; _sts { 1'(= {| l |} ) 0'(= r ) 2'(= r ) } ⊢ { 1'(= {| l |} ) 0'(= r ) 2'(= r ) }
	mov rax,r14
	mov rdi,0x0000_ffff_ffff_ffff
	and rdi,[rax]
	cmp rdi,r13
	jle err
	mov rsi,r13
	mov rdi,r8
	mov BYTE [rax+8+rsi],dil
;; rsp=0 , %140~2'(= r ) %139~0'(= r ) %138~1'(= {| l |} ) 
; ∎ { 0'(= r ) 1'(= {| l |} ) }
; .dlt.ptn 2'(= r )
	mov rdi,r8
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 { 0'(= r ) 1'(= {| l |} ) } ⊢ { 0'(= r ) 1'(= {| l |} ) }
	ret
LB_14:
;; ?; 1'(= a2◂ [ r] ) ⊢ 1(<2)◂{ }
;; rsp=0 , %130~0'(= r ) 
; #8 0'(= r ) ⊢ { 0'(= r ) 1'(= {| l |} ) }
	mov rdi,r13
	call mlc_s8
	mov r14,rax
;; rsp=0 , %142~1'(= {| l |} ) %141~0'(= r ) 
; ∎ { 0'(= r ) 1'(= {| l |} ) }
; .mov_ptn2 { 0'(= r ) 1'(= {| l |} ) } ⊢ { 0'(= r ) 1'(= {| l |} ) }
	ret
ETR_57: ;; s8_of_r64_lst 0'(= a2◂ [ r] ) ⊢ 0'(= {| l |} ) : (_lst◂_r64→_s8)
;; rsp=0 , %143~0'(= a2◂ [ r] ) 
; $ %[ 0r ] ⊢ %[ 0r ]
;; rsp=0 , %144~%[ 0r ] %143~0'(= a2◂ [ r] ) 
; #56 { %[ 0r ] 0'(= a2◂ [ r] ) } ⊢ { 0'(= r ) 1'(= {| l |} ) }
; .mov_ptn2 { %[ 0r ] 0'(= a2◂ [ r] ) } ⊢ { 0'(= r ) 1'(= a2◂ [ r] ) }
; .mov_ptn 0'(= a2◂ [ r] ) ⊢ 1'(= a2◂ [ r] )
	mov rax,r13
	mov r14,rax
; .mov_ptn %[ 0r ] ⊢ 0'(= r )
	mov rax,0
	mov r13,rax
	call ETR_56
;; rsp=0 , %146~1'(= {| l |} ) %145~0'(= r ) 
; ∎ 1'(= {| l |} )
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 1'(= {| l |} ) ⊢ 0'(= {| l |} )
; .mov_ptn 1'(= {| l |} ) ⊢ 0'(= {| l |} )
	mov rax,r14
	mov r13,rax
	ret
ETR_58: ;; s8_of_s8_lst_i { 0'(= r ) 1'(= a2◂ [ {| l |}] ) } ⊢ { 0'(= {| l |} ) 1'(= r ) } : ({ _r64 _lst◂_s8 }→{ _s8 _r64 })
;; rsp=0 , %148~1'(= a2◂ [ {| l |}] ) %147~0'(= r ) 
;; ? 1'(= a2◂ [ {| l |}] ) ⊢ 0(<2)◂{ 2'(= {| l |} ) 3'(= a2◂ [ {| l |}] ) }
	mov rdi,r14
	cmp BYTE [rdi+6],0
	jnz LB_15
	mov r8, QWORD [r14+8]
	mov r9, QWORD [r14+16]
	mov QWORD [GBG_VCT+8*0],r14
	mov rdi,QWORD [GBG_VCT+8*0]
	mov rax,[SS_RCD_2_TOP]
	mov QWORD [rdi],rax 
	mov QWORD [SS_RCD_2_TOP],rdi
;; rsp=0 , %150~3'(= a2◂ [ {| l |}] ) %149~2'(= {| l |} ) %147~0'(= r ) 
; #9 2'(= {| l |} ) ⊢ { 2'(= {| l |} ) 1'(= r ) }
	mov rdi,r8
	mov rsi,0x0000_ffff_ffff_ffff
	and rsi,[rdi] 
	mov r14,rsi
;; rsp=0 , %152~1'(= r ) %151~2'(= {| l |} ) %150~3'(= a2◂ [ {| l |}] ) %147~0'(= r ) 
; #13 { 0'(= r ) 1'(= r ) } ⊢ { 0'(= r ) 1'(= r ) }
	add r13,r14
;; rsp=0 , %154~1'(= r ) %153~0'(= r ) %151~2'(= {| l |} ) %150~3'(= a2◂ [ {| l |}] ) 
; #58 { 0'(= r ) 3'(= a2◂ [ {| l |}] ) } ⊢ { 0'(= {| l |} ) 3'(= r ) }
	sub rsp,16
	mov QWORD [rsp+8*0],r14
	mov QWORD [rsp+8*1],r8
; .mov_ptn2 { 0'(= r ) 3'(= a2◂ [ {| l |}] ) } ⊢ { 0'(= r ) 1'(= a2◂ [ {| l |}] ) }
; .mov_ptn 3'(= a2◂ [ {| l |}] ) ⊢ 1'(= a2◂ [ {| l |}] )
	mov rax,r9
	mov r14,rax
	call ETR_58
	mov r8,QWORD [rsp-8+8*2]
	mov r9,r14
	mov r14,QWORD [rsp-8+8*1]
	add rsp,16
;; rsp=0 , %156~3'(= r ) %155~0'(= {| l |} ) %154~1'(= r ) %151~2'(= {| l |} ) 
; $ %[ 0r ] ⊢ %[ 0r ]
;; rsp=0 , %157~%[ 0r ] %156~3'(= r ) %155~0'(= {| l |} ) %154~1'(= r ) %151~2'(= {| l |} ) 
; $ 1'(= r ) ⊢ 1'(= r ),4'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	mov rax,r8
	C_POP_REGS
	mov r10,rax
;; rsp=0 , %159~4'(= r ) %158~1'(= r ) %157~%[ 0r ] %156~3'(= r ) %155~0'(= {| l |} ) %151~2'(= {| l |} ) 
; #19 { 1'(= r ) 2'(= {| l |} ) %[ 0r ] 0'(= {| l |} ) 3'(= r ) } ⊢ { 1'(= r ) 2'(= {| l |} ) %[ 0r ] 0'(= {| l |} ) 3'(= r ) }
; _rep_movsb { 1'(= r ) 2'(= {| l |} ) %[ 0r ] 0'(= {| l |} ) 3'(= r ) } ⊢ { 1'(= r ) 2'(= {| l |} ) %[ 0r ] 0'(= {| l |} ) 3'(= r ) }
	mov rax,r14
	mov rsi,r8
	mov rdi,0x0000_ffff_ffff_ffff
	and rdi,[rsi]
	sub rdi,rax
	lea rsi,[rsi+8]
	cmp rdi,0
	jl err
	lea rsi,[rsi+0]
	push rsi 
	mov rsi,r13
	mov rdi,0x0000_ffff_ffff_ffff
	and rdi,[rsi]
	sub rdi,rax
	lea rsi,[rsi+8]
	cmp rdi,r9
	jl err
	add rsi,r9
	mov rdi,rsi 
	pop rsi 
	push rcx 
	mov rcx,rax 
	cld 
	rep movsb
	pop rcx 
;; rsp=0 , %164~3'(= r ) %163~0'(= {| l |} ) %162~%[ 0r ] %161~2'(= {| l |} ) %160~1'(= r ) %159~4'(= r ) 
; ∎ { 0'(= {| l |} ) 3'(= r ) }
; .dlt.ptn %[ 0r ]
; .dlt.ptn 2'(= {| l |} )
	mov rdi,r8
	C_PUSH_REGS
	mov r8,rdi
	mov rdi,r8
	call free_s8
	C_POP_REGS
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 4'(= r )
	mov rdi,r10
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 { 0'(= {| l |} ) 3'(= r ) } ⊢ { 0'(= {| l |} ) 1'(= r ) }
; .mov_ptn 3'(= r ) ⊢ 1'(= r )
	mov rax,r9
	mov r14,rax
	ret
LB_15:
;; ?. 1'(= a2◂ [ {| l |}] ) ⊢ 1(<2)◂{ }
;; rsp=0 , %147~0'(= r ) 
; #8 0'(= r ) ⊢ { 0'(= r ) 1'(= {| l |} ) }
	mov rdi,r13
	call mlc_s8
	mov r14,rax
;; rsp=0 , %166~1'(= {| l |} ) %165~0'(= r ) 
; $ %[ 0r ] ⊢ %[ 0r ]
;; rsp=0 , %167~%[ 0r ] %166~1'(= {| l |} ) %165~0'(= r ) 
; ∎ { 1'(= {| l |} ) %[ 0r ] }
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 { 1'(= {| l |} ) %[ 0r ] } ⊢ { 0'(= {| l |} ) 1'(= r ) }
; .mov_ptn 1'(= {| l |} ) ⊢ 0'(= {| l |} )
	mov rax,r14
	mov r13,rax
; .mov_ptn %[ 0r ] ⊢ 1'(= r )
	mov rax,0
	mov r14,rax
	ret
ETR_59: ;; s8_of_s8_lst 0'(= a2◂ [ {| l |}] ) ⊢ 0'(= {| l |} ) : (_lst◂_s8→_s8)
;; rsp=0 , %168~0'(= a2◂ [ {| l |}] ) 
; $ %[ 0r ] ⊢ %[ 0r ]
;; rsp=0 , %169~%[ 0r ] %168~0'(= a2◂ [ {| l |}] ) 
; #58 { %[ 0r ] 0'(= a2◂ [ {| l |}] ) } ⊢ { 0'(= {| l |} ) 1'(= r ) }
; .mov_ptn2 { %[ 0r ] 0'(= a2◂ [ {| l |}] ) } ⊢ { 0'(= r ) 1'(= a2◂ [ {| l |}] ) }
; .mov_ptn 0'(= a2◂ [ {| l |}] ) ⊢ 1'(= a2◂ [ {| l |}] )
	mov rax,r13
	mov r14,rax
; .mov_ptn %[ 0r ] ⊢ 0'(= r )
	mov rax,0
	mov r13,rax
	call ETR_58
;; rsp=0 , %171~1'(= r ) %170~0'(= {| l |} ) 
; ∎ 0'(= {| l |} )
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0'(= {| l |} ) ⊢ 0'(= {| l |} )
	ret
ETR_67:
	mov r9,0x0000_ffff_ffff_ffff
	and r9,[r13]
	call GRM_67
	ret
GRM_67:
	PUSH_GRM
	lea rax,[r14+1]
	cmp rax,r9
	jg LB_19
	jmp LB_20
LB_19:
	mov r8,unt_1
	jmp LB_17
LB_20:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],10
	jnz LB_21
	jmp LB_22
LB_21:
	mov r8,unt_1
	jmp LB_17
LB_22:
	add r14,1
	jmp LB_18
LB_17:
	add rsp,0
	jmp LB_16
LB_18:
	call GRM_67
	cmp BYTE [r8+6],0
	jnz LB_25
	jmp LB_26
LB_25:
	jmp LB_23
LB_26:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a5◂ [ ] ) ⊢ 8'(= a5◂ [ ] )
; .mov_ptn 2'(= a5◂ [ ] ) ⊢ 8'(= a5◂ [ ] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_24
LB_23:
	add rsp,0
	jmp LB_16
LB_24:
	mov QWORD [rsp+8*1],r14
	mov r13,QWORD [rsp+16+8*1]
	mov r14,QWORD [rsp+8*1]
	jmp LB_27
LB_27
;; rsp=1 , %246~1'(= r ) %245~0'(= r ) %244~8'(= a5◂ [ ] ) 
; $ %[ "\\n" ] ⊢ %[ "\\n" ]
;; rsp=1 , %247~%[ "\\n" ] %246~1'(= r ) %245~0'(= r ) %244~8'(= a5◂ [ ] ) 
; #40 { %[ "\\n" ] 8'(= a5◂ [ ] ) } ⊢ 2'(= a5◂ [ ] )
	sub rsp,16
	mov QWORD [rsp+8*0],r13
	mov QWORD [rsp+8*1],r14
; .mov_ptn2 { %[ "\\n" ] 8'(= a5◂ [ ] ) } ⊢ { 0'(= {| l |} ) 1'(= a5◂ [ ] ) }
; .mov_ptn 8'(= a5◂ [ ] ) ⊢ 1'(= a5◂ [ ] )
	mov rax,QWORD [rsp-8+8*3]
	mov r14,rax
; .mov_ptn %[ "\\n" ] ⊢ 0'(= {| l |} )
	mov rsi,1  
	mov rdi,16
	xor rax,rax 
	C_CALL_SF calloc
	mov QWORD [rax],2
	mov BYTE [rax+8+0],92
	mov BYTE [rax+8+1],110
	mov r13,rax
	call ETR_40
	mov r14,QWORD [rsp-8+8*2]
	mov r8,r13
	mov r13,QWORD [rsp-8+8*1]
	add rsp,24
;; rsp=0 , %248~2'(= a5◂ [ ] ) %246~1'(= r ) %245~0'(= r ) 
; #24 2'(= a5◂ [ ] ) ⊢ 0(<2)◂2'(= a5◂ [ ] )
;; rsp=0 , %249~0(<2)◂2'(= a5◂ [ ] ) %246~1'(= r ) %245~0'(= r ) 
; ∎ 0(<2)◂2'(= a5◂ [ ] )
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂2'(= a5◂ [ ] ) ⊢ 2'(= a3◂ [ a5◂ [ ]] )
	mov r13,r8
; .mov_ptn 0(<2)◂0'(= a5◂ [ ] ) ⊢ 2'(= a3◂ [ a5◂ [ ]] )
	mov rax,r13
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	jmp LB_28
LB_28:
	cmp BYTE [r8+6],0
	jnz LB_16
	POP_GRM_SCC
	ret
LB_16:
	RB_GRM
	lea rax,[r14+1]
	cmp rax,r9
	jg LB_32
	jmp LB_33
LB_32:
	mov r8,unt_1
	jmp LB_30
LB_33:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],9
	jnz LB_34
	jmp LB_35
LB_34:
	mov r8,unt_1
	jmp LB_30
LB_35:
	add r14,1
	jmp LB_31
LB_30:
	add rsp,0
	jmp LB_29
LB_31:
	call GRM_67
	cmp BYTE [r8+6],0
	jnz LB_38
	jmp LB_39
LB_38:
	jmp LB_36
LB_39:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a5◂ [ ] ) ⊢ 8'(= a5◂ [ ] )
; .mov_ptn 2'(= a5◂ [ ] ) ⊢ 8'(= a5◂ [ ] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_37
LB_36:
	add rsp,0
	jmp LB_29
LB_37:
	mov QWORD [rsp+8*1],r14
	mov r13,QWORD [rsp+16+8*1]
	mov r14,QWORD [rsp+8*1]
	jmp LB_40
LB_40
;; rsp=1 , %252~1'(= r ) %251~0'(= r ) %250~8'(= a5◂ [ ] ) 
; $ %[ "\\t" ] ⊢ %[ "\\t" ]
;; rsp=1 , %253~%[ "\\t" ] %252~1'(= r ) %251~0'(= r ) %250~8'(= a5◂ [ ] ) 
; #40 { %[ "\\t" ] 8'(= a5◂ [ ] ) } ⊢ 2'(= a5◂ [ ] )
	sub rsp,16
	mov QWORD [rsp+8*0],r13
	mov QWORD [rsp+8*1],r14
; .mov_ptn2 { %[ "\\t" ] 8'(= a5◂ [ ] ) } ⊢ { 0'(= {| l |} ) 1'(= a5◂ [ ] ) }
; .mov_ptn 8'(= a5◂ [ ] ) ⊢ 1'(= a5◂ [ ] )
	mov rax,QWORD [rsp-8+8*3]
	mov r14,rax
; .mov_ptn %[ "\\t" ] ⊢ 0'(= {| l |} )
	mov rsi,1  
	mov rdi,16
	xor rax,rax 
	C_CALL_SF calloc
	mov QWORD [rax],2
	mov BYTE [rax+8+0],92
	mov BYTE [rax+8+1],116
	mov r13,rax
	call ETR_40
	mov r14,QWORD [rsp-8+8*2]
	mov r8,r13
	mov r13,QWORD [rsp-8+8*1]
	add rsp,24
;; rsp=0 , %254~2'(= a5◂ [ ] ) %252~1'(= r ) %251~0'(= r ) 
; #24 2'(= a5◂ [ ] ) ⊢ 0(<2)◂2'(= a5◂ [ ] )
;; rsp=0 , %255~0(<2)◂2'(= a5◂ [ ] ) %252~1'(= r ) %251~0'(= r ) 
; ∎ 0(<2)◂2'(= a5◂ [ ] )
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂2'(= a5◂ [ ] ) ⊢ 2'(= a3◂ [ a5◂ [ ]] )
	mov r13,r8
; .mov_ptn 0(<2)◂0'(= a5◂ [ ] ) ⊢ 2'(= a3◂ [ a5◂ [ ]] )
	mov rax,r13
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	jmp LB_41
LB_41:
	cmp BYTE [r8+6],0
	jnz LB_29
	POP_GRM_SCC
	ret
LB_29:
	RB_GRM
	lea rax,[r14+1]
	cmp rax,r9
	jg LB_45
	jmp LB_46
LB_45:
	mov r8,unt_1
	jmp LB_43
LB_46:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],92
	jnz LB_47
	jmp LB_48
LB_47:
	mov r8,unt_1
	jmp LB_43
LB_48:
	add r14,1
	jmp LB_44
LB_43:
	add rsp,0
	jmp LB_42
LB_44:
	call GRM_67
	cmp BYTE [r8+6],0
	jnz LB_51
	jmp LB_52
LB_51:
	jmp LB_49
LB_52:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a5◂ [ ] ) ⊢ 8'(= a5◂ [ ] )
; .mov_ptn 2'(= a5◂ [ ] ) ⊢ 8'(= a5◂ [ ] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_50
LB_49:
	add rsp,0
	jmp LB_42
LB_50:
	mov QWORD [rsp+8*1],r14
	mov r13,QWORD [rsp+16+8*1]
	mov r14,QWORD [rsp+8*1]
	jmp LB_53
LB_53
;; rsp=1 , %258~1'(= r ) %257~0'(= r ) %256~8'(= a5◂ [ ] ) 
; $ %[ "\\\\" ] ⊢ %[ "\\\\" ]
;; rsp=1 , %259~%[ "\\\\" ] %258~1'(= r ) %257~0'(= r ) %256~8'(= a5◂ [ ] ) 
; #40 { %[ "\\\\" ] 8'(= a5◂ [ ] ) } ⊢ 2'(= a5◂ [ ] )
	sub rsp,16
	mov QWORD [rsp+8*0],r13
	mov QWORD [rsp+8*1],r14
; .mov_ptn2 { %[ "\\\\" ] 8'(= a5◂ [ ] ) } ⊢ { 0'(= {| l |} ) 1'(= a5◂ [ ] ) }
; .mov_ptn 8'(= a5◂ [ ] ) ⊢ 1'(= a5◂ [ ] )
	mov rax,QWORD [rsp-8+8*3]
	mov r14,rax
; .mov_ptn %[ "\\\\" ] ⊢ 0'(= {| l |} )
	mov rsi,1  
	mov rdi,16
	xor rax,rax 
	C_CALL_SF calloc
	mov QWORD [rax],2
	mov BYTE [rax+8+0],92
	mov BYTE [rax+8+1],92
	mov r13,rax
	call ETR_40
	mov r14,QWORD [rsp-8+8*2]
	mov r8,r13
	mov r13,QWORD [rsp-8+8*1]
	add rsp,24
;; rsp=0 , %260~2'(= a5◂ [ ] ) %258~1'(= r ) %257~0'(= r ) 
; #24 2'(= a5◂ [ ] ) ⊢ 0(<2)◂2'(= a5◂ [ ] )
;; rsp=0 , %261~0(<2)◂2'(= a5◂ [ ] ) %258~1'(= r ) %257~0'(= r ) 
; ∎ 0(<2)◂2'(= a5◂ [ ] )
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂2'(= a5◂ [ ] ) ⊢ 2'(= a3◂ [ a5◂ [ ]] )
	mov r13,r8
; .mov_ptn 0(<2)◂0'(= a5◂ [ ] ) ⊢ 2'(= a3◂ [ a5◂ [ ]] )
	mov rax,r13
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	jmp LB_54
LB_54:
	cmp BYTE [r8+6],0
	jnz LB_42
	POP_GRM_SCC
	ret
LB_42:
	RB_GRM
	lea rax,[r14+1]
	cmp rax,r9
	jg LB_58
	jmp LB_59
LB_58:
	mov r8,unt_1
	jmp LB_56
LB_59:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],34
	jnz LB_60
	jmp LB_61
LB_60:
	mov r8,unt_1
	jmp LB_56
LB_61:
	add r14,1
	jmp LB_57
LB_56:
	add rsp,0
	jmp LB_55
LB_57:
	call GRM_67
	cmp BYTE [r8+6],0
	jnz LB_64
	jmp LB_65
LB_64:
	jmp LB_62
LB_65:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a5◂ [ ] ) ⊢ 8'(= a5◂ [ ] )
; .mov_ptn 2'(= a5◂ [ ] ) ⊢ 8'(= a5◂ [ ] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_63
LB_62:
	add rsp,0
	jmp LB_55
LB_63:
	mov QWORD [rsp+8*1],r14
	mov r13,QWORD [rsp+16+8*1]
	mov r14,QWORD [rsp+8*1]
	jmp LB_66
LB_66
;; rsp=1 , %264~1'(= r ) %263~0'(= r ) %262~8'(= a5◂ [ ] ) 
; $ %[ "\\\"" ] ⊢ %[ "\\\"" ]
;; rsp=1 , %265~%[ "\\\"" ] %264~1'(= r ) %263~0'(= r ) %262~8'(= a5◂ [ ] ) 
; #40 { %[ "\\\"" ] 8'(= a5◂ [ ] ) } ⊢ 2'(= a5◂ [ ] )
	sub rsp,16
	mov QWORD [rsp+8*0],r13
	mov QWORD [rsp+8*1],r14
; .mov_ptn2 { %[ "\\\"" ] 8'(= a5◂ [ ] ) } ⊢ { 0'(= {| l |} ) 1'(= a5◂ [ ] ) }
; .mov_ptn 8'(= a5◂ [ ] ) ⊢ 1'(= a5◂ [ ] )
	mov rax,QWORD [rsp-8+8*3]
	mov r14,rax
; .mov_ptn %[ "\\\"" ] ⊢ 0'(= {| l |} )
	mov rsi,1  
	mov rdi,16
	xor rax,rax 
	C_CALL_SF calloc
	mov QWORD [rax],2
	mov BYTE [rax+8+0],92
	mov BYTE [rax+8+1],34
	mov r13,rax
	call ETR_40
	mov r14,QWORD [rsp-8+8*2]
	mov r8,r13
	mov r13,QWORD [rsp-8+8*1]
	add rsp,24
;; rsp=0 , %266~2'(= a5◂ [ ] ) %264~1'(= r ) %263~0'(= r ) 
; #24 2'(= a5◂ [ ] ) ⊢ 0(<2)◂2'(= a5◂ [ ] )
;; rsp=0 , %267~0(<2)◂2'(= a5◂ [ ] ) %264~1'(= r ) %263~0'(= r ) 
; ∎ 0(<2)◂2'(= a5◂ [ ] )
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂2'(= a5◂ [ ] ) ⊢ 2'(= a3◂ [ a5◂ [ ]] )
	mov r13,r8
; .mov_ptn 0(<2)◂0'(= a5◂ [ ] ) ⊢ 2'(= a3◂ [ a5◂ [ ]] )
	mov rax,r13
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	jmp LB_67
LB_67:
	cmp BYTE [r8+6],0
	jnz LB_55
	POP_GRM_SCC
	ret
LB_55:
	RB_GRM
	cmp r14,r9
	jge LB_71
	jmp LB_72
LB_71:
	mov r8,unt_1 
	jmp LB_69
LB_72:
	movzx rdi,BYTE [r13+8+r14]
	push rdi 
	add r14,1 
	jmp LB_70
LB_69:
	add rsp,0
	jmp LB_68
LB_70:
	call GRM_67
	cmp BYTE [r8+6],0
	jnz LB_75
	jmp LB_76
LB_75:
	jmp LB_73
LB_76:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a5◂ [ ] ) ⊢ 9'(= a5◂ [ ] )
; .mov_ptn 2'(= a5◂ [ ] ) ⊢ 9'(= a5◂ [ ] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_74
LB_73:
	add rsp,8
	jmp LB_68
LB_74:
	mov QWORD [rsp+8*2],r14
	mov r13,QWORD [rsp+16+8*2]
	mov r14,QWORD [rsp+8*2]
	jmp LB_77
LB_77
;; rsp=2 , %271~1'(= r ) %270~0'(= r ) %269~9'(= a5◂ [ ] ) %268~8'(= r ) 
	mov rdi,0
	cmp QWORD [rsp-8+8*2],rdi
	jnz LB_79
;; rsp=2 , %271~1'(= r ) %270~0'(= r ) %269~9'(= a5◂ [ ] ) %268~8'(= r ) 
; $ %[ "\\0" ] ⊢ %[ "\\0" ]
;; rsp=2 , %272~%[ "\\0" ] %271~1'(= r ) %270~0'(= r ) %269~9'(= a5◂ [ ] ) %268~8'(= r ) 
; #40 { %[ "\\0" ] 9'(= a5◂ [ ] ) } ⊢ 2'(= a5◂ [ ] )
	sub rsp,16
	mov QWORD [rsp+8*0],r13
	mov QWORD [rsp+8*1],r14
; .mov_ptn2 { %[ "\\0" ] 9'(= a5◂ [ ] ) } ⊢ { 0'(= {| l |} ) 1'(= a5◂ [ ] ) }
; .mov_ptn 9'(= a5◂ [ ] ) ⊢ 1'(= a5◂ [ ] )
	mov rax,QWORD [rsp-8+8*3]
	mov r14,rax
; .mov_ptn %[ "\\0" ] ⊢ 0'(= {| l |} )
	mov rsi,1  
	mov rdi,16
	xor rax,rax 
	C_CALL_SF calloc
	mov QWORD [rax],2
	mov BYTE [rax+8+0],92
	mov BYTE [rax+8+1],48
	mov r13,rax
	call ETR_40
	mov r14,QWORD [rsp-8+8*2]
	mov r8,r13
	mov r13,QWORD [rsp-8+8*1]
	add rsp,24
;; rsp=1 , %273~2'(= a5◂ [ ] ) %271~1'(= r ) %270~0'(= r ) %268~8'(= r ) 
; #24 2'(= a5◂ [ ] ) ⊢ 0(<2)◂2'(= a5◂ [ ] )
;; rsp=1 , %274~0(<2)◂2'(= a5◂ [ ] ) %271~1'(= r ) %270~0'(= r ) %268~8'(= r ) 
; ∎ 0(<2)◂2'(= a5◂ [ ] )
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 8'(= r )
	mov rdi,QWORD [rsp-8+8*1]
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂2'(= a5◂ [ ] ) ⊢ 2'(= a3◂ [ a5◂ [ ]] )
	mov r13,r8
; .mov_ptn 0(<2)◂0'(= a5◂ [ ] ) ⊢ 2'(= a3◂ [ a5◂ [ ]] )
	mov rax,r13
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,8
	jmp LB_78
LB_79:
;; rsp=2 , %271~1'(= r ) %270~0'(= r ) %269~9'(= a5◂ [ ] ) %268~8'(= r ) 
; #42 { 8'(= r ) 9'(= a5◂ [ ] ) } ⊢ 2'(= a5◂ [ ] )
	sub rsp,16
	mov QWORD [rsp+8*0],r13
	mov QWORD [rsp+8*1],r14
; .mov_ptn2 { 8'(= r ) 9'(= a5◂ [ ] ) } ⊢ { 0'(= r ) 1'(= a5◂ [ ] ) }
; .mov_ptn 9'(= a5◂ [ ] ) ⊢ 1'(= a5◂ [ ] )
	mov rax,QWORD [rsp-8+8*3]
	mov r14,rax
; .mov_ptn 8'(= r ) ⊢ 0'(= r )
	mov rax,QWORD [rsp-8+8*4]
	mov r13,rax
	call ETR_42
	mov r14,QWORD [rsp-8+8*2]
	mov r8,r13
	mov r13,QWORD [rsp-8+8*1]
	add rsp,32
;; rsp=0 , %275~2'(= a5◂ [ ] ) %271~1'(= r ) %270~0'(= r ) 
; #24 2'(= a5◂ [ ] ) ⊢ 0(<2)◂2'(= a5◂ [ ] )
;; rsp=0 , %276~0(<2)◂2'(= a5◂ [ ] ) %271~1'(= r ) %270~0'(= r ) 
; ∎ 0(<2)◂2'(= a5◂ [ ] )
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂2'(= a5◂ [ ] ) ⊢ 2'(= a3◂ [ a5◂ [ ]] )
	mov r13,r8
; .mov_ptn 0(<2)◂0'(= a5◂ [ ] ) ⊢ 2'(= a3◂ [ a5◂ [ ]] )
	mov rax,r13
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	jmp LB_78
LB_78:
	cmp BYTE [r8+6],0
	jnz LB_68
	POP_GRM_SCC
	ret
LB_68:
	RB_GRM
	mov QWORD [rsp+8*0],r14
	mov r13,QWORD [rsp+16+8*0]
	mov r14,QWORD [rsp+8*0]
	jmp LB_81
LB_81
;; rsp=0 , %278~1'(= r ) %277~0'(= r ) 
; #34 { } ⊢ 2(<4)◂{ }
;; rsp=0 , %279~2(<4)◂{ } %278~1'(= r ) %277~0'(= r ) 
; #24 2(<4)◂{ } ⊢ 0(<2)◂2(<4)◂{ }
;; rsp=0 , %280~0(<2)◂2(<4)◂{ } %278~1'(= r ) %277~0'(= r ) 
; ∎ 0(<2)◂2(<4)◂{ }
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂2(<4)◂{ } ⊢ 2'(= a3◂ [ a5◂ [ ]] )
; .mov_ptn 0(<2)◂2(<4)◂{ } ⊢ 2'(= a3◂ [ a5◂ [ ]] )
	mov rax,unt 
	mov rax,unt_2
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	jmp LB_82
LB_82:
	cmp BYTE [r8+6],0
	jnz LB_80
	POP_GRM_SCC
	ret
LB_80:
	POP_GRM_FAIL 
	ret
LB_84:
	movzx rax,BYTE [r8+6]
	jmp QWORD [LB_89+8*rax]
LB_89: dq LB_85,LB_86,LB_87,LB_88
LB_85:
	push r8
	mov r8,QWORD [r8+8+8*0]
	call LB_84
	pop r8 
	push r8
	mov r8,QWORD [r8+8+8*1]
	pop r8 
	push r8
	mov r8,QWORD [r8+8+8*2]
	call LB_84
	pop r8 
	FREE_RCD 3, r8
	jmp LB_90
LB_86:
	mov rdi,r8
	call free_s8
	jmp LB_90
LB_87:
	jmp LB_90
LB_88:
	FREE_LN r8 
	mov r8,QWORD [r8+8]
	jmp LB_90
LB_90:
	ret
ETR_68: ;; mk_esc_s8 0'(= {| l |} ) ⊢ { 0'(= {| l |} ) 1'(= {| l |} ) } : (_s8→{ _s8 _s8 })
;; rsp=0 , %281~0'(= {| l |} ) 
; $ %[ 0r ] ⊢ %[ 0r ]
;; rsp=0 , %282~%[ 0r ] %281~0'(= {| l |} ) 
; #67 { 0'(= {| l |} ) %[ 0r ] } ⊢ { 0'(= {| l |} ) 1'(= r ) 2'(= a3◂ [ a5◂ [ ]] ) }
; .mov_ptn2 { 0'(= {| l |} ) %[ 0r ] } ⊢ { 0'(= {| l |} ) 1'(= r ) }
; .mov_ptn %[ 0r ] ⊢ 1'(= r )
	mov rax,0
	mov r14,rax
	call ETR_67
;; rsp=0 , %285~2'(= a3◂ [ a5◂ [ ]] ) %284~1'(= r ) %283~0'(= {| l |} ) 
;; ?; 2'(= a3◂ [ a5◂ [ ]] ) ⊢ 0(<2)◂3'(= a5◂ [ ] )
	mov rdi,r8
	cmp BYTE [rdi+6],0
	jnz LB_83
	mov QWORD [GBG_VCT+8*0],rdi
	mov r9,QWORD [rdi+8]
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_LN rdi
;; rsp=0 , %286~3'(= a5◂ [ ] ) %284~1'(= r ) %283~0'(= {| l |} ) 
; #45 3'(= a5◂ [ ] ) ⊢ { 3'(= a5◂ [ ] ) 2'(= {| l |} ) }
	sub rsp,16
	mov QWORD [rsp+8*0],r13
	mov QWORD [rsp+8*1],r14
; .mov_ptn2 3'(= a5◂ [ ] ) ⊢ 0'(= a5◂ [ ] )
; .mov_ptn 3'(= a5◂ [ ] ) ⊢ 0'(= a5◂ [ ] )
	mov rax,r9
	mov r13,rax
	call ETR_45
	mov r8,r14
	mov r14,QWORD [rsp-8+8*2]
	mov r9,r13
	mov r13,QWORD [rsp-8+8*1]
	add rsp,16
;; rsp=0 , %288~2'(= {| l |} ) %287~3'(= a5◂ [ ] ) %284~1'(= r ) %283~0'(= {| l |} ) 
; ∎ { 0'(= {| l |} ) 2'(= {| l |} ) }
; .dlt.ptn 3'(= a5◂ [ ] )
	mov rdi,r9
	C_PUSH_REGS
	mov r8,rdi
	call LB_84
	C_POP_REGS
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 { 0'(= {| l |} ) 2'(= {| l |} ) } ⊢ { 0'(= {| l |} ) 1'(= {| l |} ) }
; .mov_ptn 2'(= {| l |} ) ⊢ 1'(= {| l |} )
	mov rax,r8
	mov r14,rax
	ret
LB_83:
;; rsp=0 , %285~2'(= a3◂ [ a5◂ [ ]] ) %284~1'(= r ) %283~0'(= {| l |} ) 
; $ %[ "esc_stg_ltr" ] ⊢ %[ "esc_stg_ltr" ]
;; rsp=0 , %289~%[ "esc_stg_ltr" ] %285~2'(= a3◂ [ a5◂ [ ]] ) %284~1'(= r ) %283~0'(= {| l |} ) 
; #10 %[ "esc_stg_ltr" ] ⊢ %[ "esc_stg_ltr" ]
	mov rdi,fmt_emt
	call emt_stg
	mov rdi,LB_91
	call emt_stg 
	mov rdi,fmt_nl
	call emt_stg
	jmp LB_92
LB_92:
;; rsp=0 , %290~%[ "esc_stg_ltr" ] %285~2'(= a3◂ [ a5◂ [ ]] ) %284~1'(= r ) %283~0'(= {| l |} ) 
	mov rdi,LB_93
	call emt_stg 
	jmp err
ETR_69:
	mov r9,0x0000_ffff_ffff_ffff
	and r9,[r13]
	call GRM_69
	ret
GRM_69:
	PUSH_GRM
	lea rax,[r14+1]
	cmp rax,r9
	jg LB_97
	jmp LB_98
LB_97:
	mov r8,unt_1
	jmp LB_95
LB_98:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],34
	jnz LB_99
	jmp LB_100
LB_99:
	mov r8,unt_1
	jmp LB_95
LB_100:
	add r14,1
	jmp LB_96
LB_95:
	add rsp,0
	jmp LB_94
LB_96:
	call GRM_70
	cmp BYTE [r8+6],0
	jnz LB_103
	jmp LB_104
LB_103:
	jmp LB_101
LB_104:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a5◂ [ ] ) ⊢ 8'(= a5◂ [ ] )
; .mov_ptn 2'(= a5◂ [ ] ) ⊢ 8'(= a5◂ [ ] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_102
LB_101:
	add rsp,0
	jmp LB_94
LB_102:
	mov QWORD [rsp+8*1],r14
	mov r13,QWORD [rsp+16+8*1]
	mov r14,QWORD [rsp+8*1]
	jmp LB_105
LB_105
;; rsp=1 , %293~1'(= r ) %292~0'(= r ) %291~8'(= a5◂ [ ] ) 
; #45 8'(= a5◂ [ ] ) ⊢ { 3'(= a5◂ [ ] ) 2'(= {| l |} ) }
	sub rsp,16
	mov QWORD [rsp+8*0],r13
	mov QWORD [rsp+8*1],r14
; .mov_ptn2 8'(= a5◂ [ ] ) ⊢ 0'(= a5◂ [ ] )
; .mov_ptn 8'(= a5◂ [ ] ) ⊢ 0'(= a5◂ [ ] )
	mov rax,QWORD [rsp-8+8*3]
	mov r13,rax
	call ETR_45
	mov r8,r14
	mov r14,QWORD [rsp-8+8*2]
	mov r9,r13
	mov r13,QWORD [rsp-8+8*1]
	add rsp,24
;; rsp=0 , %295~2'(= {| l |} ) %294~3'(= a5◂ [ ] ) %293~1'(= r ) %292~0'(= r ) 
; #24 2'(= {| l |} ) ⊢ 0(<2)◂2'(= {| l |} )
;; rsp=0 , %296~0(<2)◂2'(= {| l |} ) %294~3'(= a5◂ [ ] ) %293~1'(= r ) %292~0'(= r ) 
; ∎ 0(<2)◂2'(= {| l |} )
; .dlt.ptn 3'(= a5◂ [ ] )
	mov rdi,r9
	C_PUSH_REGS
	mov r8,rdi
	call LB_84
	C_POP_REGS
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂2'(= {| l |} ) ⊢ 2'(= a3◂ [ {| l |}] )
	mov r13,r8
; .mov_ptn 0(<2)◂0'(= {| l |} ) ⊢ 2'(= a3◂ [ {| l |}] )
	mov rax,r13
	mov BYTE [rax+6],0
	mov r8,rax
	jmp LB_106
LB_106:
	cmp BYTE [r8+6],0
	jnz LB_94
	POP_GRM_SCC
	ret
LB_94:
	POP_GRM_FAIL 
	ret
ETR_70:
	mov r9,0x0000_ffff_ffff_ffff
	and r9,[r13]
	call GRM_70
	ret
GRM_70:
	PUSH_GRM
	lea rax,[r14+1]
	cmp rax,r9
	jg LB_110
	jmp LB_111
LB_110:
	mov r8,unt_1
	jmp LB_108
LB_111:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],10
	jnz LB_112
	jmp LB_113
LB_112:
	mov r8,unt_1
	jmp LB_108
LB_113:
	add r14,1
	jmp LB_109
LB_108:
	add rsp,0
	jmp LB_107
LB_109:
	mov QWORD [rsp+8*0],r14
	mov r13,QWORD [rsp+16+8*0]
	mov r14,QWORD [rsp+8*0]
	jmp LB_114
LB_114
;; rsp=0 , %299~1'(= r ) %298~0'(= r ) %297~{ } 
; #25 { } ⊢ 1(<2)◂{ }
;; rsp=0 , %300~1(<2)◂{ } %299~1'(= r ) %298~0'(= r ) %297~{ } 
; ∎ 1(<2)◂{ }
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn { }
; .mov_ptn2 1(<2)◂{ } ⊢ 2'(= a3◂ [ a5◂ [ ]] )
; .mov_ptn 1(<2)◂{ } ⊢ 2'(= a3◂ [ a5◂ [ ]] )
	mov rax,unt 
	mov rax,unt_1
	mov r8,rax
	jmp LB_115
LB_115:
	cmp BYTE [r8+6],0
	jnz LB_107
	POP_GRM_SCC
	ret
LB_107:
	RB_GRM
	lea rax,[r14+1]
	cmp rax,r9
	jg LB_119
	jmp LB_120
LB_119:
	mov r8,unt_1
	jmp LB_117
LB_120:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],92
	jnz LB_121
	jmp LB_122
LB_121:
	mov r8,unt_1
	jmp LB_117
LB_122:
	add r14,1
	jmp LB_118
LB_117:
	add rsp,0
	jmp LB_116
LB_118:
	call GRM_71
	cmp BYTE [r8+6],0
	jnz LB_125
	jmp LB_126
LB_125:
	jmp LB_123
LB_126:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= r ) ⊢ 8'(= r )
; .mov_ptn 2'(= r ) ⊢ 8'(= r )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_124
LB_123:
	add rsp,0
	jmp LB_116
LB_124:
	call GRM_70
	cmp BYTE [r8+6],0
	jnz LB_129
	jmp LB_130
LB_129:
	jmp LB_127
LB_130:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a5◂ [ ] ) ⊢ 9'(= a5◂ [ ] )
; .mov_ptn 2'(= a5◂ [ ] ) ⊢ 9'(= a5◂ [ ] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_128
LB_127:
	add rsp,8
	jmp LB_116
LB_128:
	mov QWORD [rsp+8*2],r14
	mov r13,QWORD [rsp+16+8*2]
	mov r14,QWORD [rsp+8*2]
	jmp LB_131
LB_131
;; rsp=2 , %304~1'(= r ) %303~0'(= r ) %302~9'(= a5◂ [ ] ) %301~8'(= r ) 
; #42 { 8'(= r ) 9'(= a5◂ [ ] ) } ⊢ 2'(= a5◂ [ ] )
	sub rsp,16
	mov QWORD [rsp+8*0],r13
	mov QWORD [rsp+8*1],r14
; .mov_ptn2 { 8'(= r ) 9'(= a5◂ [ ] ) } ⊢ { 0'(= r ) 1'(= a5◂ [ ] ) }
; .mov_ptn 9'(= a5◂ [ ] ) ⊢ 1'(= a5◂ [ ] )
	mov rax,QWORD [rsp-8+8*3]
	mov r14,rax
; .mov_ptn 8'(= r ) ⊢ 0'(= r )
	mov rax,QWORD [rsp-8+8*4]
	mov r13,rax
	call ETR_42
	mov r14,QWORD [rsp-8+8*2]
	mov r8,r13
	mov r13,QWORD [rsp-8+8*1]
	add rsp,32
;; rsp=0 , %305~2'(= a5◂ [ ] ) %304~1'(= r ) %303~0'(= r ) 
; #24 2'(= a5◂ [ ] ) ⊢ 0(<2)◂2'(= a5◂ [ ] )
;; rsp=0 , %306~0(<2)◂2'(= a5◂ [ ] ) %304~1'(= r ) %303~0'(= r ) 
; ∎ 0(<2)◂2'(= a5◂ [ ] )
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂2'(= a5◂ [ ] ) ⊢ 2'(= a3◂ [ a5◂ [ ]] )
	mov r13,r8
; .mov_ptn 0(<2)◂0'(= a5◂ [ ] ) ⊢ 2'(= a3◂ [ a5◂ [ ]] )
	mov rax,r13
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	jmp LB_132
LB_132:
	cmp BYTE [r8+6],0
	jnz LB_116
	POP_GRM_SCC
	ret
LB_116:
	RB_GRM
	lea rax,[r14+1]
	cmp rax,r9
	jg LB_136
	jmp LB_137
LB_136:
	mov r8,unt_1
	jmp LB_134
LB_137:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],34
	jnz LB_138
	jmp LB_139
LB_138:
	mov r8,unt_1
	jmp LB_134
LB_139:
	add r14,1
	jmp LB_135
LB_134:
	add rsp,0
	jmp LB_133
LB_135:
	mov QWORD [rsp+8*0],r14
	mov r13,QWORD [rsp+16+8*0]
	mov r14,QWORD [rsp+8*0]
	jmp LB_140
LB_140
;; rsp=0 , %308~1'(= r ) %307~0'(= r ) 
; #34 { } ⊢ 2(<4)◂{ }
;; rsp=0 , %309~2(<4)◂{ } %308~1'(= r ) %307~0'(= r ) 
; #24 2(<4)◂{ } ⊢ 0(<2)◂2(<4)◂{ }
;; rsp=0 , %310~0(<2)◂2(<4)◂{ } %308~1'(= r ) %307~0'(= r ) 
; ∎ 0(<2)◂2(<4)◂{ }
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂2(<4)◂{ } ⊢ 2'(= a3◂ [ a5◂ [ ]] )
; .mov_ptn 0(<2)◂2(<4)◂{ } ⊢ 2'(= a3◂ [ a5◂ [ ]] )
	mov rax,unt 
	mov rax,unt_2
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	jmp LB_141
LB_141:
	cmp BYTE [r8+6],0
	jnz LB_133
	POP_GRM_SCC
	ret
LB_133:
	RB_GRM
	cmp r14,r9
	jge LB_145
	jmp LB_146
LB_145:
	mov r8,unt_1 
	jmp LB_143
LB_146:
	movzx rdi,BYTE [r13+8+r14]
	push rdi 
	add r14,1 
	jmp LB_144
LB_143:
	add rsp,0
	jmp LB_142
LB_144:
	call GRM_70
	cmp BYTE [r8+6],0
	jnz LB_149
	jmp LB_150
LB_149:
	jmp LB_147
LB_150:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a5◂ [ ] ) ⊢ 9'(= a5◂ [ ] )
; .mov_ptn 2'(= a5◂ [ ] ) ⊢ 9'(= a5◂ [ ] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_148
LB_147:
	add rsp,8
	jmp LB_142
LB_148:
	mov QWORD [rsp+8*2],r14
	mov r13,QWORD [rsp+16+8*2]
	mov r14,QWORD [rsp+8*2]
	jmp LB_151
LB_151
;; rsp=2 , %314~1'(= r ) %313~0'(= r ) %312~9'(= a5◂ [ ] ) %311~8'(= r ) 
; #42 { 8'(= r ) 9'(= a5◂ [ ] ) } ⊢ 2'(= a5◂ [ ] )
	sub rsp,16
	mov QWORD [rsp+8*0],r13
	mov QWORD [rsp+8*1],r14
; .mov_ptn2 { 8'(= r ) 9'(= a5◂ [ ] ) } ⊢ { 0'(= r ) 1'(= a5◂ [ ] ) }
; .mov_ptn 9'(= a5◂ [ ] ) ⊢ 1'(= a5◂ [ ] )
	mov rax,QWORD [rsp-8+8*3]
	mov r14,rax
; .mov_ptn 8'(= r ) ⊢ 0'(= r )
	mov rax,QWORD [rsp-8+8*4]
	mov r13,rax
	call ETR_42
	mov r14,QWORD [rsp-8+8*2]
	mov r8,r13
	mov r13,QWORD [rsp-8+8*1]
	add rsp,32
;; rsp=0 , %315~2'(= a5◂ [ ] ) %314~1'(= r ) %313~0'(= r ) 
; #24 2'(= a5◂ [ ] ) ⊢ 0(<2)◂2'(= a5◂ [ ] )
;; rsp=0 , %316~0(<2)◂2'(= a5◂ [ ] ) %314~1'(= r ) %313~0'(= r ) 
; ∎ 0(<2)◂2'(= a5◂ [ ] )
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂2'(= a5◂ [ ] ) ⊢ 2'(= a3◂ [ a5◂ [ ]] )
	mov r13,r8
; .mov_ptn 0(<2)◂0'(= a5◂ [ ] ) ⊢ 2'(= a3◂ [ a5◂ [ ]] )
	mov rax,r13
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	jmp LB_152
LB_152:
	cmp BYTE [r8+6],0
	jnz LB_142
	POP_GRM_SCC
	ret
LB_142:
	POP_GRM_FAIL 
	ret
ETR_71:
	mov r9,0x0000_ffff_ffff_ffff
	and r9,[r13]
	call GRM_71
	ret
GRM_71:
	PUSH_GRM
	lea rax,[r14+1]
	cmp rax,r9
	jg LB_156
	jmp LB_157
LB_156:
	mov r8,unt_1
	jmp LB_154
LB_157:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],92
	jnz LB_158
	jmp LB_159
LB_158:
	mov r8,unt_1
	jmp LB_154
LB_159:
	add r14,1
	jmp LB_155
LB_154:
	add rsp,0
	jmp LB_153
LB_155:
	mov QWORD [rsp+8*0],r14
	mov r13,QWORD [rsp+16+8*0]
	mov r14,QWORD [rsp+8*0]
	jmp LB_160
LB_160
;; rsp=0 , %318~1'(= r ) %317~0'(= r ) 
; $ %[ 92r ] ⊢ %[ 92r ]
;; rsp=0 , %319~%[ 92r ] %318~1'(= r ) %317~0'(= r ) 
; #24 %[ 92r ] ⊢ 0(<2)◂%[ 92r ]
;; rsp=0 , %320~0(<2)◂%[ 92r ] %318~1'(= r ) %317~0'(= r ) 
; ∎ 0(<2)◂%[ 92r ]
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂%[ 92r ] ⊢ 2'(= a3◂ [ r] )
; .mov_ptn 0(<2)◂%[ 92r ] ⊢ 2'(= a3◂ [ r] )
	mov rax,92
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	jmp LB_161
LB_161:
	cmp BYTE [r8+6],0
	jnz LB_153
	POP_GRM_SCC
	ret
LB_153:
	RB_GRM
	lea rax,[r14+1]
	cmp rax,r9
	jg LB_165
	jmp LB_166
LB_165:
	mov r8,unt_1
	jmp LB_163
LB_166:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],34
	jnz LB_167
	jmp LB_168
LB_167:
	mov r8,unt_1
	jmp LB_163
LB_168:
	add r14,1
	jmp LB_164
LB_163:
	add rsp,0
	jmp LB_162
LB_164:
	mov QWORD [rsp+8*0],r14
	mov r13,QWORD [rsp+16+8*0]
	mov r14,QWORD [rsp+8*0]
	jmp LB_169
LB_169
;; rsp=0 , %322~1'(= r ) %321~0'(= r ) 
; $ %[ 34r ] ⊢ %[ 34r ]
;; rsp=0 , %323~%[ 34r ] %322~1'(= r ) %321~0'(= r ) 
; #24 %[ 34r ] ⊢ 0(<2)◂%[ 34r ]
;; rsp=0 , %324~0(<2)◂%[ 34r ] %322~1'(= r ) %321~0'(= r ) 
; ∎ 0(<2)◂%[ 34r ]
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂%[ 34r ] ⊢ 2'(= a3◂ [ r] )
; .mov_ptn 0(<2)◂%[ 34r ] ⊢ 2'(= a3◂ [ r] )
	mov rax,34
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	jmp LB_170
LB_170:
	cmp BYTE [r8+6],0
	jnz LB_162
	POP_GRM_SCC
	ret
LB_162:
	RB_GRM
	lea rax,[r14+1]
	cmp rax,r9
	jg LB_174
	jmp LB_175
LB_174:
	mov r8,unt_1
	jmp LB_172
LB_175:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],110
	jnz LB_176
	jmp LB_177
LB_176:
	mov r8,unt_1
	jmp LB_172
LB_177:
	add r14,1
	jmp LB_173
LB_172:
	add rsp,0
	jmp LB_171
LB_173:
	mov QWORD [rsp+8*0],r14
	mov r13,QWORD [rsp+16+8*0]
	mov r14,QWORD [rsp+8*0]
	jmp LB_178
LB_178
;; rsp=0 , %326~1'(= r ) %325~0'(= r ) 
; $ %[ 10r ] ⊢ %[ 10r ]
;; rsp=0 , %327~%[ 10r ] %326~1'(= r ) %325~0'(= r ) 
; #24 %[ 10r ] ⊢ 0(<2)◂%[ 10r ]
;; rsp=0 , %328~0(<2)◂%[ 10r ] %326~1'(= r ) %325~0'(= r ) 
; ∎ 0(<2)◂%[ 10r ]
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂%[ 10r ] ⊢ 2'(= a3◂ [ r] )
; .mov_ptn 0(<2)◂%[ 10r ] ⊢ 2'(= a3◂ [ r] )
	mov rax,10
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	jmp LB_179
LB_179:
	cmp BYTE [r8+6],0
	jnz LB_171
	POP_GRM_SCC
	ret
LB_171:
	RB_GRM
	lea rax,[r14+1]
	cmp rax,r9
	jg LB_183
	jmp LB_184
LB_183:
	mov r8,unt_1
	jmp LB_181
LB_184:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],116
	jnz LB_185
	jmp LB_186
LB_185:
	mov r8,unt_1
	jmp LB_181
LB_186:
	add r14,1
	jmp LB_182
LB_181:
	add rsp,0
	jmp LB_180
LB_182:
	mov QWORD [rsp+8*0],r14
	mov r13,QWORD [rsp+16+8*0]
	mov r14,QWORD [rsp+8*0]
	jmp LB_187
LB_187
;; rsp=0 , %330~1'(= r ) %329~0'(= r ) 
; $ %[ 9r ] ⊢ %[ 9r ]
;; rsp=0 , %331~%[ 9r ] %330~1'(= r ) %329~0'(= r ) 
; #24 %[ 9r ] ⊢ 0(<2)◂%[ 9r ]
;; rsp=0 , %332~0(<2)◂%[ 9r ] %330~1'(= r ) %329~0'(= r ) 
; ∎ 0(<2)◂%[ 9r ]
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂%[ 9r ] ⊢ 2'(= a3◂ [ r] )
; .mov_ptn 0(<2)◂%[ 9r ] ⊢ 2'(= a3◂ [ r] )
	mov rax,9
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	jmp LB_188
LB_188:
	cmp BYTE [r8+6],0
	jnz LB_180
	POP_GRM_SCC
	ret
LB_180:
	RB_GRM
	lea rax,[r14+1]
	cmp rax,r9
	jg LB_192
	jmp LB_193
LB_192:
	mov r8,unt_1
	jmp LB_190
LB_193:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],48
	jnz LB_194
	jmp LB_195
LB_194:
	mov r8,unt_1
	jmp LB_190
LB_195:
	add r14,1
	jmp LB_191
LB_190:
	add rsp,0
	jmp LB_189
LB_191:
	mov QWORD [rsp+8*0],r14
	mov r13,QWORD [rsp+16+8*0]
	mov r14,QWORD [rsp+8*0]
	jmp LB_196
LB_196
;; rsp=0 , %334~1'(= r ) %333~0'(= r ) 
; $ %[ 0r ] ⊢ %[ 0r ]
;; rsp=0 , %335~%[ 0r ] %334~1'(= r ) %333~0'(= r ) 
; #24 %[ 0r ] ⊢ 0(<2)◂%[ 0r ]
;; rsp=0 , %336~0(<2)◂%[ 0r ] %334~1'(= r ) %333~0'(= r ) 
; ∎ 0(<2)◂%[ 0r ]
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂%[ 0r ] ⊢ 2'(= a3◂ [ r] )
; .mov_ptn 0(<2)◂%[ 0r ] ⊢ 2'(= a3◂ [ r] )
	mov rax,0
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	jmp LB_197
LB_197:
	cmp BYTE [r8+6],0
	jnz LB_189
	POP_GRM_SCC
	ret
LB_189:
	POP_GRM_FAIL 
	ret
ETR_72:
	mov r9,0x0000_ffff_ffff_ffff
	and r9,[r13]
	call GRM_72
	ret
GRM_72:
	PUSH_GRM
	cmp r14,r9
	jge LB_201
	jmp LB_202
LB_201:
	mov r8,unt_1 
	jmp LB_199
LB_202:
	movzx rdi,BYTE [r13+8+r14]
	push rdi 
	add r14,1 
	jmp LB_200
LB_199:
	add rsp,0
	jmp LB_198
LB_200:
	mov QWORD [rsp+8*1],r14
	mov r13,QWORD [rsp+16+8*1]
	mov r14,QWORD [rsp+8*1]
	jmp LB_203
LB_203
;; rsp=1 , %339~1'(= r ) %338~0'(= r ) %337~8'(= r ) 
	mov rdi,48
	cmp QWORD [rsp-8+8*1],rdi
;;48 =< .. 
	jl LB_205
	mov rdi,57
	cmp QWORD [rsp-8+8*1],rdi
;; .. =< 57
	jg LB_205
;; rsp=1 , %339~1'(= r ) %338~0'(= r ) %337~8'(= r ) 
; #24 8'(= r ) ⊢ 0(<2)◂8'(= r )
;; rsp=1 , %340~0(<2)◂8'(= r ) %339~1'(= r ) %338~0'(= r ) 
; ∎ 0(<2)◂8'(= r )
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂8'(= r ) ⊢ 2'(= a3◂ [ r] )
; .mov_ptn 0(<2)◂8'(= r ) ⊢ 2'(= a3◂ [ r] )
	mov rax,QWORD [rsp-8+8*1]
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,8
	jmp LB_204
LB_205:
;; rsp=1 , %339~1'(= r ) %338~0'(= r ) %337~8'(= r ) 
; #25 { } ⊢ 1(<2)◂{ }
;; rsp=1 , %341~1(<2)◂{ } %339~1'(= r ) %338~0'(= r ) %337~8'(= r ) 
; ∎ 1(<2)◂{ }
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 8'(= r )
	mov rdi,QWORD [rsp-8+8*1]
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 1(<2)◂{ } ⊢ 2'(= a3◂ [ r] )
; .mov_ptn 1(<2)◂{ } ⊢ 2'(= a3◂ [ r] )
	mov rax,unt 
	mov rax,unt_1
	mov r8,rax
	add rsp,8
	jmp LB_204
LB_204:
	cmp BYTE [r8+6],0
	jnz LB_198
	POP_GRM_SCC
	ret
LB_198:
	POP_GRM_FAIL 
	ret
ETR_73:
	mov r9,0x0000_ffff_ffff_ffff
	and r9,[r13]
	call GRM_73
	ret
GRM_73:
	PUSH_GRM
	cmp r14,r9
	jge LB_209
	jmp LB_210
LB_209:
	mov r8,unt_1 
	jmp LB_207
LB_210:
	movzx rdi,BYTE [r13+8+r14]
	push rdi 
	add r14,1 
	jmp LB_208
LB_207:
	add rsp,0
	jmp LB_206
LB_208:
	mov QWORD [rsp+8*1],r14
	mov r13,QWORD [rsp+16+8*1]
	mov r14,QWORD [rsp+8*1]
	jmp LB_211
LB_211
;; rsp=1 , %344~1'(= r ) %343~0'(= r ) %342~8'(= r ) 
	mov rdi,97
	cmp QWORD [rsp-8+8*1],rdi
;;97 =< .. 
	jl LB_213
	mov rdi,122
	cmp QWORD [rsp-8+8*1],rdi
;; .. =< 122
	jg LB_213
;; rsp=1 , %344~1'(= r ) %343~0'(= r ) %342~8'(= r ) 
; #24 8'(= r ) ⊢ 0(<2)◂8'(= r )
;; rsp=1 , %345~0(<2)◂8'(= r ) %344~1'(= r ) %343~0'(= r ) 
; ∎ 0(<2)◂8'(= r )
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂8'(= r ) ⊢ 2'(= a3◂ [ r] )
; .mov_ptn 0(<2)◂8'(= r ) ⊢ 2'(= a3◂ [ r] )
	mov rax,QWORD [rsp-8+8*1]
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,8
	jmp LB_212
LB_213:
;; rsp=1 , %344~1'(= r ) %343~0'(= r ) %342~8'(= r ) 
; #25 { } ⊢ 1(<2)◂{ }
;; rsp=1 , %346~1(<2)◂{ } %344~1'(= r ) %343~0'(= r ) %342~8'(= r ) 
; ∎ 1(<2)◂{ }
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 8'(= r )
	mov rdi,QWORD [rsp-8+8*1]
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 1(<2)◂{ } ⊢ 2'(= a3◂ [ r] )
; .mov_ptn 1(<2)◂{ } ⊢ 2'(= a3◂ [ r] )
	mov rax,unt 
	mov rax,unt_1
	mov r8,rax
	add rsp,8
	jmp LB_212
LB_212:
	cmp BYTE [r8+6],0
	jnz LB_206
	POP_GRM_SCC
	ret
LB_206:
	POP_GRM_FAIL 
	ret
ETR_74:
	mov r9,0x0000_ffff_ffff_ffff
	and r9,[r13]
	call GRM_74
	ret
GRM_74:
	PUSH_GRM
	cmp r14,r9
	jge LB_217
	jmp LB_218
LB_217:
	mov r8,unt_1 
	jmp LB_215
LB_218:
	movzx rdi,BYTE [r13+8+r14]
	push rdi 
	add r14,1 
	jmp LB_216
LB_215:
	add rsp,0
	jmp LB_214
LB_216:
	mov QWORD [rsp+8*1],r14
	mov r13,QWORD [rsp+16+8*1]
	mov r14,QWORD [rsp+8*1]
	jmp LB_219
LB_219
;; rsp=1 , %349~1'(= r ) %348~0'(= r ) %347~8'(= r ) 
	mov rdi,65
	cmp QWORD [rsp-8+8*1],rdi
;;65 =< .. 
	jl LB_221
	mov rdi,90
	cmp QWORD [rsp-8+8*1],rdi
;; .. =< 90
	jg LB_221
;; rsp=1 , %349~1'(= r ) %348~0'(= r ) %347~8'(= r ) 
; #24 8'(= r ) ⊢ 0(<2)◂8'(= r )
;; rsp=1 , %350~0(<2)◂8'(= r ) %349~1'(= r ) %348~0'(= r ) 
; ∎ 0(<2)◂8'(= r )
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂8'(= r ) ⊢ 2'(= a3◂ [ r] )
; .mov_ptn 0(<2)◂8'(= r ) ⊢ 2'(= a3◂ [ r] )
	mov rax,QWORD [rsp-8+8*1]
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,8
	jmp LB_220
LB_221:
;; rsp=1 , %349~1'(= r ) %348~0'(= r ) %347~8'(= r ) 
; #25 { } ⊢ 1(<2)◂{ }
;; rsp=1 , %351~1(<2)◂{ } %349~1'(= r ) %348~0'(= r ) %347~8'(= r ) 
; ∎ 1(<2)◂{ }
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 8'(= r )
	mov rdi,QWORD [rsp-8+8*1]
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 1(<2)◂{ } ⊢ 2'(= a3◂ [ r] )
; .mov_ptn 1(<2)◂{ } ⊢ 2'(= a3◂ [ r] )
	mov rax,unt 
	mov rax,unt_1
	mov r8,rax
	add rsp,8
	jmp LB_220
LB_220:
	cmp BYTE [r8+6],0
	jnz LB_214
	POP_GRM_SCC
	ret
LB_214:
	POP_GRM_FAIL 
	ret
ETR_75:
	mov r9,0x0000_ffff_ffff_ffff
	and r9,[r13]
	call GRM_75
	ret
GRM_75:
	PUSH_GRM
	call GRM_74
	cmp BYTE [r8+6],0
	jnz LB_225
	jmp LB_226
LB_225:
	jmp LB_223
LB_226:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= r ) ⊢ 8'(= r )
; .mov_ptn 2'(= r ) ⊢ 8'(= r )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_224
LB_223:
	add rsp,0
	jmp LB_222
LB_224:
	mov QWORD [rsp+8*1],r14
	mov r13,QWORD [rsp+16+8*1]
	mov r14,QWORD [rsp+8*1]
	jmp LB_227
LB_227
;; rsp=1 , %354~1'(= r ) %353~0'(= r ) %352~8'(= r ) 
; #24 8'(= r ) ⊢ 0(<2)◂8'(= r )
;; rsp=1 , %355~0(<2)◂8'(= r ) %354~1'(= r ) %353~0'(= r ) 
; ∎ 0(<2)◂8'(= r )
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂8'(= r ) ⊢ 2'(= a3◂ [ r] )
; .mov_ptn 0(<2)◂8'(= r ) ⊢ 2'(= a3◂ [ r] )
	mov rax,QWORD [rsp-8+8*1]
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,8
	jmp LB_228
LB_228:
	cmp BYTE [r8+6],0
	jnz LB_222
	POP_GRM_SCC
	ret
LB_222:
	RB_GRM
	call GRM_73
	cmp BYTE [r8+6],0
	jnz LB_232
	jmp LB_233
LB_232:
	jmp LB_230
LB_233:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= r ) ⊢ 8'(= r )
; .mov_ptn 2'(= r ) ⊢ 8'(= r )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_231
LB_230:
	add rsp,0
	jmp LB_229
LB_231:
	mov QWORD [rsp+8*1],r14
	mov r13,QWORD [rsp+16+8*1]
	mov r14,QWORD [rsp+8*1]
	jmp LB_234
LB_234
;; rsp=1 , %358~1'(= r ) %357~0'(= r ) %356~8'(= r ) 
; #24 8'(= r ) ⊢ 0(<2)◂8'(= r )
;; rsp=1 , %359~0(<2)◂8'(= r ) %358~1'(= r ) %357~0'(= r ) 
; ∎ 0(<2)◂8'(= r )
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂8'(= r ) ⊢ 2'(= a3◂ [ r] )
; .mov_ptn 0(<2)◂8'(= r ) ⊢ 2'(= a3◂ [ r] )
	mov rax,QWORD [rsp-8+8*1]
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,8
	jmp LB_235
LB_235:
	cmp BYTE [r8+6],0
	jnz LB_229
	POP_GRM_SCC
	ret
LB_229:
	POP_GRM_FAIL 
	ret
ETR_76:
	mov r9,0x0000_ffff_ffff_ffff
	and r9,[r13]
	call GRM_76
	ret
GRM_76:
	PUSH_GRM
	call GRM_75
	cmp BYTE [r8+6],0
	jnz LB_239
	jmp LB_240
LB_239:
	jmp LB_237
LB_240:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= r ) ⊢ 8'(= r )
; .mov_ptn 2'(= r ) ⊢ 8'(= r )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_238
LB_237:
	add rsp,0
	jmp LB_236
LB_238:
	call GRM_77
	cmp BYTE [r8+6],0
	jnz LB_243
	jmp LB_244
LB_243:
	jmp LB_241
LB_244:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a5◂ [ ] ) ⊢ 9'(= a5◂ [ ] )
; .mov_ptn 2'(= a5◂ [ ] ) ⊢ 9'(= a5◂ [ ] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_242
LB_241:
	add rsp,8
	jmp LB_236
LB_242:
	mov QWORD [rsp+8*2],r14
	mov r13,QWORD [rsp+16+8*2]
	mov r14,QWORD [rsp+8*2]
	jmp LB_245
LB_245
;; rsp=2 , %363~1'(= r ) %362~0'(= r ) %361~9'(= a5◂ [ ] ) %360~8'(= r ) 
; #42 { 8'(= r ) 9'(= a5◂ [ ] ) } ⊢ 2'(= a5◂ [ ] )
	sub rsp,16
	mov QWORD [rsp+8*0],r13
	mov QWORD [rsp+8*1],r14
; .mov_ptn2 { 8'(= r ) 9'(= a5◂ [ ] ) } ⊢ { 0'(= r ) 1'(= a5◂ [ ] ) }
; .mov_ptn 9'(= a5◂ [ ] ) ⊢ 1'(= a5◂ [ ] )
	mov rax,QWORD [rsp-8+8*3]
	mov r14,rax
; .mov_ptn 8'(= r ) ⊢ 0'(= r )
	mov rax,QWORD [rsp-8+8*4]
	mov r13,rax
	call ETR_42
	mov r14,QWORD [rsp-8+8*2]
	mov r8,r13
	mov r13,QWORD [rsp-8+8*1]
	add rsp,32
;; rsp=0 , %364~2'(= a5◂ [ ] ) %363~1'(= r ) %362~0'(= r ) 
; #45 2'(= a5◂ [ ] ) ⊢ { 3'(= a5◂ [ ] ) 2'(= {| l |} ) }
	sub rsp,16
	mov QWORD [rsp+8*0],r13
	mov QWORD [rsp+8*1],r14
; .mov_ptn2 2'(= a5◂ [ ] ) ⊢ 0'(= a5◂ [ ] )
; .mov_ptn 2'(= a5◂ [ ] ) ⊢ 0'(= a5◂ [ ] )
	mov rax,r8
	mov r13,rax
	call ETR_45
	mov r8,r14
	mov r14,QWORD [rsp-8+8*2]
	mov r9,r13
	mov r13,QWORD [rsp-8+8*1]
	add rsp,16
;; rsp=0 , %366~2'(= {| l |} ) %365~3'(= a5◂ [ ] ) %363~1'(= r ) %362~0'(= r ) 
; #24 2'(= {| l |} ) ⊢ 0(<2)◂2'(= {| l |} )
;; rsp=0 , %367~0(<2)◂2'(= {| l |} ) %365~3'(= a5◂ [ ] ) %363~1'(= r ) %362~0'(= r ) 
; ∎ 0(<2)◂2'(= {| l |} )
; .dlt.ptn 3'(= a5◂ [ ] )
	mov rdi,r9
	C_PUSH_REGS
	mov r8,rdi
	call LB_84
	C_POP_REGS
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂2'(= {| l |} ) ⊢ 2'(= a3◂ [ {| l |}] )
	mov r13,r8
; .mov_ptn 0(<2)◂0'(= {| l |} ) ⊢ 2'(= a3◂ [ {| l |}] )
	mov rax,r13
	mov BYTE [rax+6],0
	mov r8,rax
	jmp LB_246
LB_246:
	cmp BYTE [r8+6],0
	jnz LB_236
	POP_GRM_SCC
	ret
LB_236:
	POP_GRM_FAIL 
	ret
ETR_77:
	mov r9,0x0000_ffff_ffff_ffff
	and r9,[r13]
	call GRM_77
	ret
GRM_77:
	PUSH_GRM
	call GRM_78
	cmp BYTE [r8+6],0
	jnz LB_250
	jmp LB_251
LB_250:
	jmp LB_248
LB_251:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= r ) ⊢ 8'(= r )
; .mov_ptn 2'(= r ) ⊢ 8'(= r )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_249
LB_248:
	add rsp,0
	jmp LB_247
LB_249:
	call GRM_77
	cmp BYTE [r8+6],0
	jnz LB_254
	jmp LB_255
LB_254:
	jmp LB_252
LB_255:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a5◂ [ ] ) ⊢ 9'(= a5◂ [ ] )
; .mov_ptn 2'(= a5◂ [ ] ) ⊢ 9'(= a5◂ [ ] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_253
LB_252:
	add rsp,8
	jmp LB_247
LB_253:
	mov QWORD [rsp+8*2],r14
	mov r13,QWORD [rsp+16+8*2]
	mov r14,QWORD [rsp+8*2]
	jmp LB_256
LB_256
;; rsp=2 , %371~1'(= r ) %370~0'(= r ) %369~9'(= a5◂ [ ] ) %368~8'(= r ) 
; #42 { 8'(= r ) 9'(= a5◂ [ ] ) } ⊢ 2'(= a5◂ [ ] )
	sub rsp,16
	mov QWORD [rsp+8*0],r13
	mov QWORD [rsp+8*1],r14
; .mov_ptn2 { 8'(= r ) 9'(= a5◂ [ ] ) } ⊢ { 0'(= r ) 1'(= a5◂ [ ] ) }
; .mov_ptn 9'(= a5◂ [ ] ) ⊢ 1'(= a5◂ [ ] )
	mov rax,QWORD [rsp-8+8*3]
	mov r14,rax
; .mov_ptn 8'(= r ) ⊢ 0'(= r )
	mov rax,QWORD [rsp-8+8*4]
	mov r13,rax
	call ETR_42
	mov r14,QWORD [rsp-8+8*2]
	mov r8,r13
	mov r13,QWORD [rsp-8+8*1]
	add rsp,32
;; rsp=0 , %372~2'(= a5◂ [ ] ) %371~1'(= r ) %370~0'(= r ) 
; #24 2'(= a5◂ [ ] ) ⊢ 0(<2)◂2'(= a5◂ [ ] )
;; rsp=0 , %373~0(<2)◂2'(= a5◂ [ ] ) %371~1'(= r ) %370~0'(= r ) 
; ∎ 0(<2)◂2'(= a5◂ [ ] )
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂2'(= a5◂ [ ] ) ⊢ 2'(= a3◂ [ a5◂ [ ]] )
	mov r13,r8
; .mov_ptn 0(<2)◂0'(= a5◂ [ ] ) ⊢ 2'(= a3◂ [ a5◂ [ ]] )
	mov rax,r13
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	jmp LB_257
LB_257:
	cmp BYTE [r8+6],0
	jnz LB_247
	POP_GRM_SCC
	ret
LB_247:
	RB_GRM
	mov QWORD [rsp+8*0],r14
	mov r13,QWORD [rsp+16+8*0]
	mov r14,QWORD [rsp+8*0]
	jmp LB_259
LB_259
;; rsp=0 , %375~1'(= r ) %374~0'(= r ) 
; #34 { } ⊢ 2(<4)◂{ }
;; rsp=0 , %376~2(<4)◂{ } %375~1'(= r ) %374~0'(= r ) 
; #24 2(<4)◂{ } ⊢ 0(<2)◂2(<4)◂{ }
;; rsp=0 , %377~0(<2)◂2(<4)◂{ } %375~1'(= r ) %374~0'(= r ) 
; ∎ 0(<2)◂2(<4)◂{ }
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂2(<4)◂{ } ⊢ 2'(= a3◂ [ a5◂ [ ]] )
; .mov_ptn 0(<2)◂2(<4)◂{ } ⊢ 2'(= a3◂ [ a5◂ [ ]] )
	mov rax,unt 
	mov rax,unt_2
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	jmp LB_260
LB_260:
	cmp BYTE [r8+6],0
	jnz LB_258
	POP_GRM_SCC
	ret
LB_258:
	POP_GRM_FAIL 
	ret
ETR_78:
	mov r9,0x0000_ffff_ffff_ffff
	and r9,[r13]
	call GRM_78
	ret
GRM_78:
	PUSH_GRM
	call GRM_75
	cmp BYTE [r8+6],0
	jnz LB_264
	jmp LB_265
LB_264:
	jmp LB_262
LB_265:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= r ) ⊢ 8'(= r )
; .mov_ptn 2'(= r ) ⊢ 8'(= r )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_263
LB_262:
	add rsp,0
	jmp LB_261
LB_263:
	mov QWORD [rsp+8*1],r14
	mov r13,QWORD [rsp+16+8*1]
	mov r14,QWORD [rsp+8*1]
	jmp LB_266
LB_266
;; rsp=1 , %380~1'(= r ) %379~0'(= r ) %378~8'(= r ) 
; #24 8'(= r ) ⊢ 0(<2)◂8'(= r )
;; rsp=1 , %381~0(<2)◂8'(= r ) %380~1'(= r ) %379~0'(= r ) 
; ∎ 0(<2)◂8'(= r )
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂8'(= r ) ⊢ 2'(= a3◂ [ r] )
; .mov_ptn 0(<2)◂8'(= r ) ⊢ 2'(= a3◂ [ r] )
	mov rax,QWORD [rsp-8+8*1]
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,8
	jmp LB_267
LB_267:
	cmp BYTE [r8+6],0
	jnz LB_261
	POP_GRM_SCC
	ret
LB_261:
	RB_GRM
	call GRM_72
	cmp BYTE [r8+6],0
	jnz LB_271
	jmp LB_272
LB_271:
	jmp LB_269
LB_272:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= r ) ⊢ 8'(= r )
; .mov_ptn 2'(= r ) ⊢ 8'(= r )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_270
LB_269:
	add rsp,0
	jmp LB_268
LB_270:
	mov QWORD [rsp+8*1],r14
	mov r13,QWORD [rsp+16+8*1]
	mov r14,QWORD [rsp+8*1]
	jmp LB_273
LB_273
;; rsp=1 , %384~1'(= r ) %383~0'(= r ) %382~8'(= r ) 
; #24 8'(= r ) ⊢ 0(<2)◂8'(= r )
;; rsp=1 , %385~0(<2)◂8'(= r ) %384~1'(= r ) %383~0'(= r ) 
; ∎ 0(<2)◂8'(= r )
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂8'(= r ) ⊢ 2'(= a3◂ [ r] )
; .mov_ptn 0(<2)◂8'(= r ) ⊢ 2'(= a3◂ [ r] )
	mov rax,QWORD [rsp-8+8*1]
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,8
	jmp LB_274
LB_274:
	cmp BYTE [r8+6],0
	jnz LB_268
	POP_GRM_SCC
	ret
LB_268:
	RB_GRM
	lea rax,[r14+1]
	cmp rax,r9
	jg LB_278
	jmp LB_279
LB_278:
	mov r8,unt_1
	jmp LB_276
LB_279:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],95
	jnz LB_280
	jmp LB_281
LB_280:
	mov r8,unt_1
	jmp LB_276
LB_281:
	add r14,1
	jmp LB_277
LB_276:
	add rsp,0
	jmp LB_275
LB_277:
	mov QWORD [rsp+8*0],r14
	mov r13,QWORD [rsp+16+8*0]
	mov r14,QWORD [rsp+8*0]
	jmp LB_282
LB_282
;; rsp=0 , %387~1'(= r ) %386~0'(= r ) 
; $ %[ 95r ] ⊢ %[ 95r ]
;; rsp=0 , %388~%[ 95r ] %387~1'(= r ) %386~0'(= r ) 
; #24 %[ 95r ] ⊢ 0(<2)◂%[ 95r ]
;; rsp=0 , %389~0(<2)◂%[ 95r ] %387~1'(= r ) %386~0'(= r ) 
; ∎ 0(<2)◂%[ 95r ]
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂%[ 95r ] ⊢ 2'(= a3◂ [ r] )
; .mov_ptn 0(<2)◂%[ 95r ] ⊢ 2'(= a3◂ [ r] )
	mov rax,95
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	jmp LB_283
LB_283:
	cmp BYTE [r8+6],0
	jnz LB_275
	POP_GRM_SCC
	ret
LB_275:
	POP_GRM_FAIL 
	ret
ETR_79:
	mov r9,0x0000_ffff_ffff_ffff
	and r9,[r13]
	call GRM_79
	ret
GRM_79:
	PUSH_GRM
	lea rax,[r14+1]
	cmp rax,r9
	jg LB_287
	jmp LB_288
LB_287:
	mov r8,unt_1
	jmp LB_285
LB_288:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],95
	jnz LB_289
	jmp LB_290
LB_289:
	mov r8,unt_1
	jmp LB_285
LB_290:
	add r14,1
	jmp LB_286
LB_285:
	add rsp,0
	jmp LB_284
LB_286:
	call GRM_77
	cmp BYTE [r8+6],0
	jnz LB_293
	jmp LB_294
LB_293:
	jmp LB_291
LB_294:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a5◂ [ ] ) ⊢ 8'(= a5◂ [ ] )
; .mov_ptn 2'(= a5◂ [ ] ) ⊢ 8'(= a5◂ [ ] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_292
LB_291:
	add rsp,0
	jmp LB_284
LB_292:
	mov QWORD [rsp+8*1],r14
	mov r13,QWORD [rsp+16+8*1]
	mov r14,QWORD [rsp+8*1]
	jmp LB_295
LB_295
;; rsp=1 , %392~1'(= r ) %391~0'(= r ) %390~8'(= a5◂ [ ] ) 
; #45 8'(= a5◂ [ ] ) ⊢ { 3'(= a5◂ [ ] ) 2'(= {| l |} ) }
	sub rsp,16
	mov QWORD [rsp+8*0],r13
	mov QWORD [rsp+8*1],r14
; .mov_ptn2 8'(= a5◂ [ ] ) ⊢ 0'(= a5◂ [ ] )
; .mov_ptn 8'(= a5◂ [ ] ) ⊢ 0'(= a5◂ [ ] )
	mov rax,QWORD [rsp-8+8*3]
	mov r13,rax
	call ETR_45
	mov r8,r14
	mov r14,QWORD [rsp-8+8*2]
	mov r9,r13
	mov r13,QWORD [rsp-8+8*1]
	add rsp,24
;; rsp=0 , %394~2'(= {| l |} ) %393~3'(= a5◂ [ ] ) %392~1'(= r ) %391~0'(= r ) 
; » _^ .. ⊢ ..
; .. //
	mov rdi,0
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[r8]
	add rdi,rax 
	push rax
	add rdi,1
	push rdi 
	call mlc_s8
	pop rdi
	mov r10,rax
	lea rdi,[rax+7+rdi]
	std 
	mov QWORD [tmp],rcx 
	pop rcx
	lea rsi,[r8+7+rcx]
	rep movsb
	lea rsi,[LB_297+1-1]
	mov rcx,1
	rep movsb
	mov rcx,QWORD [tmp] 
;; rsp=0 , %396~4'(= {| l |} ) %395~2'(= {| l |} ) %393~3'(= a5◂ [ ] ) %392~1'(= r ) %391~0'(= r ) 
; #24 4'(= {| l |} ) ⊢ 0(<2)◂4'(= {| l |} )
;; rsp=0 , %397~0(<2)◂4'(= {| l |} ) %395~2'(= {| l |} ) %393~3'(= a5◂ [ ] ) %392~1'(= r ) %391~0'(= r ) 
; ∎ 0(<2)◂4'(= {| l |} )
; .dlt.ptn 2'(= {| l |} )
	mov rdi,r8
	C_PUSH_REGS
	mov r8,rdi
	mov rdi,r8
	call free_s8
	C_POP_REGS
; .dlt.ptn 3'(= a5◂ [ ] )
	mov rdi,r9
	C_PUSH_REGS
	mov r8,rdi
	call LB_84
	C_POP_REGS
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂4'(= {| l |} ) ⊢ 2'(= a3◂ [ {| l |}] )
; .mov_ptn 0(<2)◂4'(= {| l |} ) ⊢ 2'(= a3◂ [ {| l |}] )
	mov rax,r10
	mov BYTE [rax+6],0
	mov r8,rax
	jmp LB_296
LB_296:
	cmp BYTE [r8+6],0
	jnz LB_284
	POP_GRM_SCC
	ret
LB_284:
	RB_GRM
	call GRM_76
	cmp BYTE [r8+6],0
	jnz LB_301
	jmp LB_302
LB_301:
	jmp LB_299
LB_302:
	sub rsp,8
; .mov_ptn2 2'(= {| l |} ) ⊢ 8'(= {| l |} )
; .mov_ptn 2'(= {| l |} ) ⊢ 8'(= {| l |} )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_300
LB_299:
	add rsp,0
	jmp LB_298
LB_300:
	mov QWORD [rsp+8*1],r14
	mov r13,QWORD [rsp+16+8*1]
	mov r14,QWORD [rsp+8*1]
	jmp LB_303
LB_303
;; rsp=1 , %400~1'(= r ) %399~0'(= r ) %398~8'(= {| l |} ) 
; #24 8'(= {| l |} ) ⊢ 0(<2)◂8'(= {| l |} )
;; rsp=1 , %401~0(<2)◂8'(= {| l |} ) %400~1'(= r ) %399~0'(= r ) 
; ∎ 0(<2)◂8'(= {| l |} )
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂8'(= {| l |} ) ⊢ 2'(= a3◂ [ {| l |}] )
; .mov_ptn 0(<2)◂8'(= {| l |} ) ⊢ 2'(= a3◂ [ {| l |}] )
	mov rax,QWORD [rsp-8+8*1]
	mov BYTE [rax+6],0
	mov r8,rax
	add rsp,8
	jmp LB_304
LB_304:
	cmp BYTE [r8+6],0
	jnz LB_298
	POP_GRM_SCC
	ret
LB_298:
	POP_GRM_FAIL 
	ret
ETR_84: ;; pnt_name 0'(= a9◂ [ ] ) ⊢ 0'(= {| l |} ) : (_t9→_s8)
;; rsp=0 , %402~0'(= a9◂ [ ] ) 
;; ?; 0'(= a9◂ [ ] ) ⊢ 0(<2)◂{ 1'(= {| l |} ) 2'(= a9◂ [ ] ) }
	mov rdi,r13
	cmp BYTE [rdi+6],0
	jnz LB_305
	mov r14, QWORD [r13+8]
	mov r8, QWORD [r13+16]
	mov QWORD [GBG_VCT+8*0],r13
	mov rdi,QWORD [GBG_VCT+8*0]
	mov rax,[SS_RCD_2_TOP]
	mov QWORD [rdi],rax 
	mov QWORD [SS_RCD_2_TOP],rdi
;; rsp=0 , %404~2'(= a9◂ [ ] ) %403~1'(= {| l |} ) 
; #84 2'(= a9◂ [ ] ) ⊢ 0'(= {| l |} )
	sub rsp,8
	mov QWORD [rsp+8*0],r14
; .mov_ptn2 2'(= a9◂ [ ] ) ⊢ 0'(= a9◂ [ ] )
; .mov_ptn 2'(= a9◂ [ ] ) ⊢ 0'(= a9◂ [ ] )
	mov rax,r8
	mov r13,rax
	call ETR_84
	mov r14,QWORD [rsp-8+8*1]
	add rsp,8
;; rsp=0 , %405~0'(= {| l |} ) %403~1'(= {| l |} ) 
; » _^ .. ⊢ ..
; .. //
	mov rdi,0
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[r14]
	add rdi,rax 
	push rax
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[r13]
	add rdi,rax 
	push rax
	add rdi,1
	push rdi 
	call mlc_s8
	pop rdi
	mov r8,rax
	lea rdi,[rax+7+rdi]
	std 
	mov QWORD [tmp],rcx 
	pop rcx
	lea rsi,[r13+7+rcx]
	rep movsb
	lea rsi,[LB_306+1-1]
	mov rcx,1
	rep movsb
	pop rcx
	lea rsi,[r14+7+rcx]
	rep movsb
	mov rcx,QWORD [tmp] 
;; rsp=0 , %408~2'(= {| l |} ) %407~0'(= {| l |} ) %406~1'(= {| l |} ) 
; ∎ 2'(= {| l |} )
; .dlt.ptn 0'(= {| l |} )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	mov rdi,r8
	call free_s8
	C_POP_REGS
; .dlt.ptn 1'(= {| l |} )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	mov rdi,r8
	call free_s8
	C_POP_REGS
; .mov_ptn2 2'(= {| l |} ) ⊢ 0'(= {| l |} )
; .mov_ptn 2'(= {| l |} ) ⊢ 0'(= {| l |} )
	mov rax,r8
	mov r13,rax
	ret
LB_305:
;; ?; 0'(= a9◂ [ ] ) ⊢ 1(<2)◂0'(= {| l |} )
;; rsp=0 , %409~0'(= {| l |} ) 
; ∎ 0'(= {| l |} )
; .mov_ptn2 0'(= {| l |} ) ⊢ 0'(= {| l |} )
	ret
ETR_89: ;; pnt_cst_v 0'(= a10◂ [ ] ) ⊢ 0'(= {| l |} ) : (_t10→_s8)
;; rsp=0 , %410~0'(= a10◂ [ ] ) 
;; ? 0'(= a10◂ [ ] ) ⊢ 0(<2)◂1'(= r )
	mov rdi,r13
	cmp BYTE [rdi+6],0
	jnz LB_307
	mov QWORD [GBG_VCT+8*0],rdi
	mov r14,QWORD [rdi+8]
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_LN rdi
;; rsp=0 , %412~1'(= r ) 
; » _^ .. ⊢ ..
; .. //
	mov rdi,0
	sub rsp,128
	push rdi 
	lea rdi,[rsp+8]
	mov rdx,r14
	mov rsi,fmt_d
 xor rax,rax
	C_CALL_SF sprintf
	pop rdi
	add rdi,rax 
	push rax 
	add rdi,1
	push rdi 
	call mlc_s8
	pop rdi
	mov r13,rax
	lea rdi,[rax+7+rdi]
	std 
	mov QWORD [tmp],rcx 
	lea rsi,[LB_308+1-1]
	mov rcx,1
	rep movsb
	pop rcx
	lea rsi,[rsp+rcx-1]
	rep movsb
	add rsp,128
	mov rcx,QWORD [tmp] 
;; rsp=0 , %414~0'(= {| l |} ) %413~1'(= r ) 
; ∎ 0'(= {| l |} )
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0'(= {| l |} ) ⊢ 0'(= {| l |} )
	ret
LB_307:
;; ?. 0'(= a10◂ [ ] ) ⊢ 1(<2)◂0'(= {| l |} )
;; rsp=0 , %411~0'(= {| l |} ) 
; #68 0'(= {| l |} ) ⊢ { 0'(= {| l |} ) 1'(= {| l |} ) }
; .mov_ptn2 0'(= {| l |} ) ⊢ 0'(= {| l |} )
	call ETR_68
;; rsp=0 , %416~1'(= {| l |} ) %415~0'(= {| l |} ) 
; » _^ .. ⊢ ..
; .. //
	mov rdi,0
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[r14]
	add rdi,rax 
	push rax
	add rdi,2
	push rdi 
	call mlc_s8
	pop rdi
	mov r8,rax
	lea rdi,[rax+7+rdi]
	std 
	mov QWORD [tmp],rcx 
	lea rsi,[LB_309+1-1]
	mov rcx,1
	rep movsb
	pop rcx
	lea rsi,[r14+7+rcx]
	rep movsb
	lea rsi,[LB_310+1-1]
	mov rcx,1
	rep movsb
	mov rcx,QWORD [tmp] 
;; rsp=0 , %418~2'(= {| l |} ) %417~1'(= {| l |} ) %415~0'(= {| l |} ) 
; ∎ 2'(= {| l |} )
; .dlt.ptn 1'(= {| l |} )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	mov rdi,r8
	call free_s8
	C_POP_REGS
; .dlt.ptn 0'(= {| l |} )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	mov rdi,r8
	call free_s8
	C_POP_REGS
; .mov_ptn2 2'(= {| l |} ) ⊢ 0'(= {| l |} )
; .mov_ptn 2'(= {| l |} ) ⊢ 0'(= {| l |} )
	mov rax,r8
	mov r13,rax
	ret
ETR_90: ;; pnt_cst 0'(= a11◂ [ a9◂ [ ]] ) ⊢ 0'(= {| l |} ) : (_t11◂_t9→_s8)
;; rsp=0 , %419~0'(= a11◂ [ a9◂ [ ]] ) 
;; ? 0'(= a11◂ [ a9◂ [ ]] ) ⊢ 0(<2)◂1'(= a10◂ [ ] )
	mov rdi,r13
	cmp BYTE [rdi+6],0
	jnz LB_311
	mov QWORD [GBG_VCT+8*0],rdi
	mov r14,QWORD [rdi+8]
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_LN rdi
;; rsp=0 , %421~1'(= a10◂ [ ] ) 
; #89 1'(= a10◂ [ ] ) ⊢ 0'(= {| l |} )
; .mov_ptn2 1'(= a10◂ [ ] ) ⊢ 0'(= a10◂ [ ] )
; .mov_ptn 1'(= a10◂ [ ] ) ⊢ 0'(= a10◂ [ ] )
	mov rax,r14
	mov r13,rax
	call ETR_89
;; rsp=0 , %422~0'(= {| l |} ) 
; ∎ 0'(= {| l |} )
; .mov_ptn2 0'(= {| l |} ) ⊢ 0'(= {| l |} )
	ret
LB_311:
;; ?. 0'(= a11◂ [ a9◂ [ ]] ) ⊢ 1(<2)◂1'(= a9◂ [ ] )
	mov QWORD [GBG_VCT+8*0],rdi
	mov r14,QWORD [rdi+8]
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_LN rdi
;; rsp=0 , %420~1'(= a9◂ [ ] ) 
; #84 1'(= a9◂ [ ] ) ⊢ 0'(= {| l |} )
; .mov_ptn2 1'(= a9◂ [ ] ) ⊢ 0'(= a9◂ [ ] )
; .mov_ptn 1'(= a9◂ [ ] ) ⊢ 0'(= a9◂ [ ] )
	mov rax,r14
	mov r13,rax
	call ETR_84
;; rsp=0 , %423~0'(= {| l |} ) 
; ∎ 0'(= {| l |} )
; .mov_ptn2 0'(= {| l |} ) ⊢ 0'(= {| l |} )
	ret
LB_324:
	movzx rax,BYTE [r8+6]
	jmp QWORD [LB_327+8*rax]
LB_327: dq LB_325,LB_326
LB_325:
	mov rdi,r8
	call free_s8
	jmp LB_328
LB_326:
	jmp LB_328
LB_328:
	ret
ETR_99: ;; pnt_src_ptn 0'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) ⊢ 0'(= {| l |} ) : (_t8◂_t12◂_s8◂_t9→_s8)
;; rsp=0 , %424~0'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) 
;; ?; 0'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) ⊢ 0(<2)◂1'(= a2◂ [ a8◂ [ a12◂ [ a9◂ [ ]{| l |}]]] )
	mov rdi,r13
	cmp BYTE [rdi+6],0
	jnz LB_312
	mov QWORD [GBG_VCT+8*0],rdi
	mov r14,QWORD [rdi+8]
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_LN rdi
;; rsp=0 , %425~1'(= a2◂ [ a8◂ [ a12◂ [ a9◂ [ ]{| l |}]]] ) 
; #100 1'(= a2◂ [ a8◂ [ a12◂ [ a9◂ [ ]{| l |}]]] ) ⊢ 0'(= {| l |} )
; .mov_ptn2 1'(= a2◂ [ a8◂ [ a12◂ [ a9◂ [ ]{| l |}]]] ) ⊢ 0'(= a2◂ [ a8◂ [ a12◂ [ a9◂ [ ]{| l |}]]] )
; .mov_ptn 1'(= a2◂ [ a8◂ [ a12◂ [ a9◂ [ ]{| l |}]]] ) ⊢ 0'(= a2◂ [ a8◂ [ a12◂ [ a9◂ [ ]{| l |}]]] )
	mov rax,r14
	mov r13,rax
	call ETR_100
;; rsp=0 , %426~0'(= {| l |} ) 
; » _^ .. ⊢ ..
; .. //
	mov rdi,0
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[r13]
	add rdi,rax 
	push rax
	add rdi,3
	push rdi 
	call mlc_s8
	pop rdi
	mov r14,rax
	lea rdi,[rax+7+rdi]
	std 
	mov QWORD [tmp],rcx 
	lea rsi,[LB_313+1-1]
	mov rcx,1
	rep movsb
	pop rcx
	lea rsi,[r13+7+rcx]
	rep movsb
	lea rsi,[LB_314+2-1]
	mov rcx,2
	rep movsb
	mov rcx,QWORD [tmp] 
;; rsp=0 , %428~1'(= {| l |} ) %427~0'(= {| l |} ) 
; ∎ 1'(= {| l |} )
; .dlt.ptn 0'(= {| l |} )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	mov rdi,r8
	call free_s8
	C_POP_REGS
; .mov_ptn2 1'(= {| l |} ) ⊢ 0'(= {| l |} )
; .mov_ptn 1'(= {| l |} ) ⊢ 0'(= {| l |} )
	mov rax,r14
	mov r13,rax
	ret
LB_312:
;; ?; 0'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) ⊢ 1(<2)◂1'(= a12◂ [ a9◂ [ ]{| l |}] )
	mov QWORD [GBG_VCT+8*0],rdi
	mov r14,QWORD [rdi+8]
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_LN rdi
;; rsp=0 , %429~1'(= a12◂ [ a9◂ [ ]{| l |}] ) 
;; ?; 1'(= a12◂ [ a9◂ [ ]{| l |}] ) ⊢ 0(<2)◂0'(= a11◂ [ a9◂ [ ]] )
	mov rdi,r14
	cmp BYTE [rdi+6],0
	jnz LB_315
	mov QWORD [GBG_VCT+8*0],rdi
	mov r13,QWORD [rdi+8]
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_LN rdi
;; rsp=0 , %430~0'(= a11◂ [ a9◂ [ ]] ) 
; #90 0'(= a11◂ [ a9◂ [ ]] ) ⊢ 0'(= {| l |} )
; .mov_ptn2 0'(= a11◂ [ a9◂ [ ]] ) ⊢ 0'(= a11◂ [ a9◂ [ ]] )
	call ETR_90
;; rsp=0 , %431~0'(= {| l |} ) 
; » _^ .. ⊢ ..
; .. //
	mov rdi,0
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[r13]
	add rdi,rax 
	push rax
	add rdi,6
	push rdi 
	call mlc_s8
	pop rdi
	mov r14,rax
	lea rdi,[rax+7+rdi]
	std 
	mov QWORD [tmp],rcx 
	lea rsi,[LB_316+3-1]
	mov rcx,3
	rep movsb
	pop rcx
	lea rsi,[r13+7+rcx]
	rep movsb
	lea rsi,[LB_317+3-1]
	mov rcx,3
	rep movsb
	mov rcx,QWORD [tmp] 
;; rsp=0 , %433~1'(= {| l |} ) %432~0'(= {| l |} ) 
; ∎ 1'(= {| l |} )
; .dlt.ptn 0'(= {| l |} )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	mov rdi,r8
	call free_s8
	C_POP_REGS
; .mov_ptn2 1'(= {| l |} ) ⊢ 0'(= {| l |} )
; .mov_ptn 1'(= {| l |} ) ⊢ 0'(= {| l |} )
	mov rax,r14
	mov r13,rax
	ret
LB_315:
;; ?; 1'(= a12◂ [ a9◂ [ ]{| l |}] ) ⊢ 1(<2)◂1'(= {| l |} )
;; rsp=0 , %434~1'(= {| l |} ) 
; ∎ 1'(= {| l |} )
; .mov_ptn2 1'(= {| l |} ) ⊢ 0'(= {| l |} )
; .mov_ptn 1'(= {| l |} ) ⊢ 0'(= {| l |} )
	mov rax,r14
	mov r13,rax
	ret
ETR_100: ;; pnt_src_ptn_lst 0'(= a2◂ [ a8◂ [ a12◂ [ a9◂ [ ]{| l |}]]] ) ⊢ 0'(= {| l |} ) : (_lst◂_t8◂_t12◂_s8◂_t9→_s8)
;; rsp=0 , %435~0'(= a2◂ [ a8◂ [ a12◂ [ a9◂ [ ]{| l |}]]] ) 
;; ?; 0'(= a2◂ [ a8◂ [ a12◂ [ a9◂ [ ]{| l |}]]] ) ⊢ 0(<2)◂{ 1'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) 2'(= a2◂ [ a8◂ [ a12◂ [ a9◂ [ ]{| l |}]]] ) }
	mov rdi,r13
	cmp BYTE [rdi+6],0
	jnz LB_318
	mov r14, QWORD [r13+8]
	mov r8, QWORD [r13+16]
	mov QWORD [GBG_VCT+8*0],r13
	mov rdi,QWORD [GBG_VCT+8*0]
	mov rax,[SS_RCD_2_TOP]
	mov QWORD [rdi],rax 
	mov QWORD [SS_RCD_2_TOP],rdi
;; rsp=0 , %437~2'(= a2◂ [ a8◂ [ a12◂ [ a9◂ [ ]{| l |}]]] ) %436~1'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) 
; #99 1'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) ⊢ 0'(= {| l |} )
	sub rsp,8
	mov QWORD [rsp+8*0],r8
; .mov_ptn2 1'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) ⊢ 0'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] )
; .mov_ptn 1'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) ⊢ 0'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] )
	mov rax,r14
	mov r13,rax
	call ETR_99
	mov r8,QWORD [rsp-8+8*1]
	add rsp,8
;; rsp=0 , %438~0'(= {| l |} ) %437~2'(= a2◂ [ a8◂ [ a12◂ [ a9◂ [ ]{| l |}]]] ) 
; #100 2'(= a2◂ [ a8◂ [ a12◂ [ a9◂ [ ]{| l |}]]] ) ⊢ 1'(= {| l |} )
	sub rsp,8
	mov QWORD [rsp+8*0],r13
; .mov_ptn2 2'(= a2◂ [ a8◂ [ a12◂ [ a9◂ [ ]{| l |}]]] ) ⊢ 0'(= a2◂ [ a8◂ [ a12◂ [ a9◂ [ ]{| l |}]]] )
; .mov_ptn 2'(= a2◂ [ a8◂ [ a12◂ [ a9◂ [ ]{| l |}]]] ) ⊢ 0'(= a2◂ [ a8◂ [ a12◂ [ a9◂ [ ]{| l |}]]] )
	mov rax,r8
	mov r13,rax
	call ETR_100
	mov r14,r13
	mov r13,QWORD [rsp-8+8*1]
	add rsp,8
;; rsp=0 , %439~1'(= {| l |} ) %438~0'(= {| l |} ) 
; » _^ .. ⊢ ..
; .. //
	mov rdi,0
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[r13]
	add rdi,rax 
	push rax
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[r14]
	add rdi,rax 
	push rax
	add rdi,1
	push rdi 
	call mlc_s8
	pop rdi
	mov r8,rax
	lea rdi,[rax+7+rdi]
	std 
	mov QWORD [tmp],rcx 
	pop rcx
	lea rsi,[r14+7+rcx]
	rep movsb
	lea rsi,[LB_319+1-1]
	mov rcx,1
	rep movsb
	pop rcx
	lea rsi,[r13+7+rcx]
	rep movsb
	mov rcx,QWORD [tmp] 
;; rsp=0 , %442~2'(= {| l |} ) %441~1'(= {| l |} ) %440~0'(= {| l |} ) 
; ∎ 2'(= {| l |} )
; .dlt.ptn 1'(= {| l |} )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	mov rdi,r8
	call free_s8
	C_POP_REGS
; .dlt.ptn 0'(= {| l |} )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	mov rdi,r8
	call free_s8
	C_POP_REGS
; .mov_ptn2 2'(= {| l |} ) ⊢ 0'(= {| l |} )
; .mov_ptn 2'(= {| l |} ) ⊢ 0'(= {| l |} )
	mov rax,r8
	mov r13,rax
	ret
LB_318:
;; ?; 0'(= a2◂ [ a8◂ [ a12◂ [ a9◂ [ ]{| l |}]]] ) ⊢ 1(<2)◂{ }
;; rsp=0 , 
; $ %[ "" ] ⊢ %[ "" ]
;; rsp=0 , %443~%[ "" ] 
; ∎ %[ "" ]
; .mov_ptn2 %[ "" ] ⊢ 0'(= {| l |} )
; .mov_ptn %[ "" ] ⊢ 0'(= {| l |} )
	mov rsi,1  
	mov rdi,16
	xor rax,rax 
	C_CALL_SF calloc
	mov QWORD [rax],0
	mov r13,rax
	ret
ETR_101: ;; pnt_dst_ptn 0'(= a8◂ [ a13◂ [ {| l |}]] ) ⊢ 0'(= {| l |} ) : (_t8◂_t13◂_s8→_s8)
;; rsp=0 , %444~0'(= a8◂ [ a13◂ [ {| l |}]] ) 
;; ?; 0'(= a8◂ [ a13◂ [ {| l |}]] ) ⊢ 0(<2)◂1'(= a2◂ [ a8◂ [ a13◂ [ {| l |}]]] )
	mov rdi,r13
	cmp BYTE [rdi+6],0
	jnz LB_320
	mov QWORD [GBG_VCT+8*0],rdi
	mov r14,QWORD [rdi+8]
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_LN rdi
;; rsp=0 , %445~1'(= a2◂ [ a8◂ [ a13◂ [ {| l |}]]] ) 
; #102 1'(= a2◂ [ a8◂ [ a13◂ [ {| l |}]]] ) ⊢ 0'(= {| l |} )
; .mov_ptn2 1'(= a2◂ [ a8◂ [ a13◂ [ {| l |}]]] ) ⊢ 0'(= a2◂ [ a8◂ [ a13◂ [ {| l |}]]] )
; .mov_ptn 1'(= a2◂ [ a8◂ [ a13◂ [ {| l |}]]] ) ⊢ 0'(= a2◂ [ a8◂ [ a13◂ [ {| l |}]]] )
	mov rax,r14
	mov r13,rax
	call ETR_102
;; rsp=0 , %446~0'(= {| l |} ) 
; » _^ .. ⊢ ..
; .. //
	mov rdi,0
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[r13]
	add rdi,rax 
	push rax
	add rdi,3
	push rdi 
	call mlc_s8
	pop rdi
	mov r14,rax
	lea rdi,[rax+7+rdi]
	std 
	mov QWORD [tmp],rcx 
	lea rsi,[LB_321+1-1]
	mov rcx,1
	rep movsb
	pop rcx
	lea rsi,[r13+7+rcx]
	rep movsb
	lea rsi,[LB_322+2-1]
	mov rcx,2
	rep movsb
	mov rcx,QWORD [tmp] 
;; rsp=0 , %448~1'(= {| l |} ) %447~0'(= {| l |} ) 
; ∎ 1'(= {| l |} )
; .dlt.ptn 0'(= {| l |} )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	mov rdi,r8
	call free_s8
	C_POP_REGS
; .mov_ptn2 1'(= {| l |} ) ⊢ 0'(= {| l |} )
; .mov_ptn 1'(= {| l |} ) ⊢ 0'(= {| l |} )
	mov rax,r14
	mov r13,rax
	ret
LB_320:
;; ?; 0'(= a8◂ [ a13◂ [ {| l |}]] ) ⊢ 1(<2)◂1'(= a13◂ [ {| l |}] )
	mov QWORD [GBG_VCT+8*0],rdi
	mov r14,QWORD [rdi+8]
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_LN rdi
;; rsp=0 , %449~1'(= a13◂ [ {| l |}] ) 
;; ?; 1'(= a13◂ [ {| l |}] ) ⊢ 0(<2)◂0'(= a3◂ [ {| l |}] )
	mov rdi,r14
	cmp BYTE [rdi+6],0
	jnz LB_323
	mov QWORD [GBG_VCT+8*0],rdi
	mov r13,QWORD [rdi+8]
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_LN rdi
;; rsp=0 , %450~0'(= a3◂ [ {| l |}] ) 
; $ %[ "_ " ] ⊢ %[ "_ " ]
;; rsp=0 , %451~%[ "_ " ] %450~0'(= a3◂ [ {| l |}] ) 
; ∎ %[ "_ " ]
; .dlt.ptn 0'(= a3◂ [ {| l |}] )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	call LB_324
	C_POP_REGS
; .mov_ptn2 %[ "_ " ] ⊢ 0'(= {| l |} )
; .mov_ptn %[ "_ " ] ⊢ 0'(= {| l |} )
	mov rsi,1  
	mov rdi,16
	xor rax,rax 
	C_CALL_SF calloc
	mov QWORD [rax],2
	mov BYTE [rax+8+0],95
	mov BYTE [rax+8+1],32
	mov r13,rax
	ret
LB_323:
;; ?; 1'(= a13◂ [ {| l |}] ) ⊢ 1(<2)◂1'(= {| l |} )
;; rsp=0 , %452~1'(= {| l |} ) 
; ∎ 1'(= {| l |} )
; .mov_ptn2 1'(= {| l |} ) ⊢ 0'(= {| l |} )
; .mov_ptn 1'(= {| l |} ) ⊢ 0'(= {| l |} )
	mov rax,r14
	mov r13,rax
	ret
ETR_102: ;; pnt_dst_ptn_lst 0'(= a2◂ [ a8◂ [ a13◂ [ {| l |}]]] ) ⊢ 0'(= {| l |} ) : (_lst◂_t8◂_t13◂_s8→_s8)
;; rsp=0 , %453~0'(= a2◂ [ a8◂ [ a13◂ [ {| l |}]]] ) 
;; ?; 0'(= a2◂ [ a8◂ [ a13◂ [ {| l |}]]] ) ⊢ 0(<2)◂{ 1'(= a8◂ [ a13◂ [ {| l |}]] ) 2'(= a2◂ [ a8◂ [ a13◂ [ {| l |}]]] ) }
	mov rdi,r13
	cmp BYTE [rdi+6],0
	jnz LB_329
	mov r14, QWORD [r13+8]
	mov r8, QWORD [r13+16]
	mov QWORD [GBG_VCT+8*0],r13
	mov rdi,QWORD [GBG_VCT+8*0]
	mov rax,[SS_RCD_2_TOP]
	mov QWORD [rdi],rax 
	mov QWORD [SS_RCD_2_TOP],rdi
;; rsp=0 , %455~2'(= a2◂ [ a8◂ [ a13◂ [ {| l |}]]] ) %454~1'(= a8◂ [ a13◂ [ {| l |}]] ) 
; #101 1'(= a8◂ [ a13◂ [ {| l |}]] ) ⊢ 0'(= {| l |} )
	sub rsp,8
	mov QWORD [rsp+8*0],r8
; .mov_ptn2 1'(= a8◂ [ a13◂ [ {| l |}]] ) ⊢ 0'(= a8◂ [ a13◂ [ {| l |}]] )
; .mov_ptn 1'(= a8◂ [ a13◂ [ {| l |}]] ) ⊢ 0'(= a8◂ [ a13◂ [ {| l |}]] )
	mov rax,r14
	mov r13,rax
	call ETR_101
	mov r8,QWORD [rsp-8+8*1]
	add rsp,8
;; rsp=0 , %456~0'(= {| l |} ) %455~2'(= a2◂ [ a8◂ [ a13◂ [ {| l |}]]] ) 
; #102 2'(= a2◂ [ a8◂ [ a13◂ [ {| l |}]]] ) ⊢ 1'(= {| l |} )
	sub rsp,8
	mov QWORD [rsp+8*0],r13
; .mov_ptn2 2'(= a2◂ [ a8◂ [ a13◂ [ {| l |}]]] ) ⊢ 0'(= a2◂ [ a8◂ [ a13◂ [ {| l |}]]] )
; .mov_ptn 2'(= a2◂ [ a8◂ [ a13◂ [ {| l |}]]] ) ⊢ 0'(= a2◂ [ a8◂ [ a13◂ [ {| l |}]]] )
	mov rax,r8
	mov r13,rax
	call ETR_102
	mov r14,r13
	mov r13,QWORD [rsp-8+8*1]
	add rsp,8
;; rsp=0 , %457~1'(= {| l |} ) %456~0'(= {| l |} ) 
; » _^ .. ⊢ ..
; .. //
	mov rdi,0
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[r13]
	add rdi,rax 
	push rax
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[r14]
	add rdi,rax 
	push rax
	add rdi,1
	push rdi 
	call mlc_s8
	pop rdi
	mov r8,rax
	lea rdi,[rax+7+rdi]
	std 
	mov QWORD [tmp],rcx 
	pop rcx
	lea rsi,[r14+7+rcx]
	rep movsb
	lea rsi,[LB_330+1-1]
	mov rcx,1
	rep movsb
	pop rcx
	lea rsi,[r13+7+rcx]
	rep movsb
	mov rcx,QWORD [tmp] 
;; rsp=0 , %460~2'(= {| l |} ) %459~1'(= {| l |} ) %458~0'(= {| l |} ) 
; ∎ 2'(= {| l |} )
; .dlt.ptn 1'(= {| l |} )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	mov rdi,r8
	call free_s8
	C_POP_REGS
; .dlt.ptn 0'(= {| l |} )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	mov rdi,r8
	call free_s8
	C_POP_REGS
; .mov_ptn2 2'(= {| l |} ) ⊢ 0'(= {| l |} )
; .mov_ptn 2'(= {| l |} ) ⊢ 0'(= {| l |} )
	mov rax,r8
	mov r13,rax
	ret
LB_329:
;; ?; 0'(= a2◂ [ a8◂ [ a13◂ [ {| l |}]]] ) ⊢ 1(<2)◂{ }
;; rsp=0 , 
; $ %[ "" ] ⊢ %[ "" ]
;; rsp=0 , %461~%[ "" ] 
; ∎ %[ "" ]
; .mov_ptn2 %[ "" ] ⊢ 0'(= {| l |} )
; .mov_ptn %[ "" ] ⊢ 0'(= {| l |} )
	mov rsi,1  
	mov rdi,16
	xor rax,rax 
	C_CALL_SF calloc
	mov QWORD [rax],0
	mov r13,rax
	ret
LB_332:
	movzx rax,BYTE [r8+6]
	jmp QWORD [LB_335+8*rax]
LB_335: dq LB_333,LB_334
LB_333:
	ALC_RCD 2,r9
	push r8
	push r9
	mov r8,QWORD [r8+8+8*0]
	call LB_337
	pop r9  
	pop r8 
	mov QWORD [r9+8+8*0],rax
	push r8
	push r9
	mov r8,QWORD [r8+8+8*1]
	call LB_332
	pop r9  
	pop r8 
	mov QWORD [r9+8+8*1],rax
	mov rax,r9 
	mov BYTE [rax+6],0
	jmp LB_336
LB_334:
	mov rax,unt
	mov BYTE [rax+6],1
	jmp LB_336
LB_336:
	ret
LB_337:
	movzx rax,BYTE [r8+6]
	jmp QWORD [LB_340+8*rax]
LB_340: dq LB_338,LB_339
LB_338:
	mov r8,QWORD [r8+8]
	call LB_332
	ALC_LN rsi 
	mov BYTE [rsi+6],0
	mov QWORD [rsi+8],rax
	mov rax,rsi
	jmp LB_341
LB_339:
	mov r8,QWORD [r8+8]
	call LB_342
	ALC_LN rsi 
	mov BYTE [rsi+6],1
	mov QWORD [rsi+8],rax
	mov rax,rsi
	jmp LB_341
LB_341:
	ret
LB_342:
	movzx rax,BYTE [r8+6]
	jmp QWORD [LB_347+8*rax]
LB_347: dq LB_343,LB_344,LB_345,LB_346
LB_343:
	ALC_RCD 2,r9
	push r8
	push r9
	mov r8,QWORD [r8+8+8*0]
	call LB_349
	pop r9  
	pop r8 
	mov QWORD [r9+8+8*0],rax
	push r8
	push r9
	mov r8,QWORD [r8+8+8*1]
	call LB_337
	pop r9  
	pop r8 
	mov QWORD [r9+8+8*1],rax
	mov rax,r9 
	mov BYTE [rax+6],0
	jmp LB_348
LB_344:
	mov r8,QWORD [r8+8]
	call LB_350
	ALC_LN rsi 
	mov BYTE [rsi+6],1
	mov QWORD [rsi+8],rax
	mov rax,rsi
	jmp LB_348
LB_345:
	mov r8,QWORD [r8+8]
	call LB_351
	ALC_LN rsi 
	mov BYTE [rsi+6],2
	mov QWORD [rsi+8],rax
	mov rax,rsi
	jmp LB_348
LB_346:
	C_PUSH_REGS
	mov rdi,r8  
	call rpc_s8  
	C_POP_REGS
	mov BYTE [rax+6],3
	jmp LB_348
LB_348:
	ret
LB_351:
	movzx rax,BYTE [r8+6]
	jmp QWORD [LB_354+8*rax]
LB_354: dq LB_352,LB_353
LB_352:
	C_PUSH_REGS
	mov rdi,r8  
	call rpc_s8  
	C_POP_REGS
	mov BYTE [rax+6],0
	jmp LB_355
LB_353:
	mov rax,unt
	mov BYTE [rax+6],1
	jmp LB_355
LB_355:
	ret
LB_350:
	movzx rax,BYTE [r8+6]
	jmp QWORD [LB_358+8*rax]
LB_358: dq LB_356,LB_357
LB_356:
	mov r8,QWORD [r8+8]
	call LB_360
	ALC_LN rsi 
	mov BYTE [rsi+6],0
	mov QWORD [rsi+8],rax
	mov rax,rsi
	jmp LB_359
LB_357:
	mov r8,QWORD [r8+8]
	call LB_349
	ALC_LN rsi 
	mov BYTE [rsi+6],1
	mov QWORD [rsi+8],rax
	mov rax,rsi
	jmp LB_359
LB_359:
	ret
LB_360:
	movzx rax,BYTE [r8+6]
	jmp QWORD [LB_363+8*rax]
LB_363: dq LB_361,LB_362
LB_361:
	mov r8,QWORD [r8+8]
	mov rax,r8
	ALC_LN rsi 
	mov BYTE [rsi+6],0
	mov QWORD [rsi+8],rax
	mov rax,rsi
	jmp LB_364
LB_362:
	C_PUSH_REGS
	mov rdi,r8  
	call rpc_s8  
	C_POP_REGS
	mov BYTE [rax+6],1
	jmp LB_364
LB_364:
	ret
LB_349:
	movzx rax,BYTE [r8+6]
	jmp QWORD [LB_367+8*rax]
LB_367: dq LB_365,LB_366
LB_365:
	ALC_RCD 2,r9
	push r8
	push r9
	mov r8,QWORD [r8+8+8*0]
	C_PUSH_REGS
	mov rdi,r8  
	call rpc_s8  
	C_POP_REGS
	pop r9  
	pop r8 
	mov QWORD [r9+8+8*0],rax
	push r8
	push r9
	mov r8,QWORD [r8+8+8*1]
	call LB_349
	pop r9  
	pop r8 
	mov QWORD [r9+8+8*1],rax
	mov rax,r9 
	mov BYTE [rax+6],0
	jmp LB_368
LB_366:
	C_PUSH_REGS
	mov rdi,r8  
	call rpc_s8  
	C_POP_REGS
	mov BYTE [rax+6],1
	jmp LB_368
LB_368:
	ret
LB_371:
	movzx rax,BYTE [r8+6]
	jmp QWORD [LB_374+8*rax]
LB_374: dq LB_372,LB_373
LB_372:
	push r8
	mov r8,QWORD [r8+8+8*0]
	call LB_376
	pop r8 
	push r8
	mov r8,QWORD [r8+8+8*1]
	call LB_371
	pop r8 
	FREE_RCD 2, r8
	jmp LB_375
LB_373:
	jmp LB_375
LB_375:
	ret
LB_376:
	movzx rax,BYTE [r8+6]
	jmp QWORD [LB_379+8*rax]
LB_379: dq LB_377,LB_378
LB_377:
	FREE_LN r8 
	mov r8,QWORD [r8+8]
	call LB_371
	jmp LB_380
LB_378:
	FREE_LN r8 
	mov r8,QWORD [r8+8]
	call LB_381
	jmp LB_380
LB_380:
	ret
LB_381:
	movzx rax,BYTE [r8+6]
	jmp QWORD [LB_386+8*rax]
LB_386: dq LB_382,LB_383,LB_384,LB_385
LB_382:
	push r8
	mov r8,QWORD [r8+8+8*0]
	call LB_388
	pop r8 
	push r8
	mov r8,QWORD [r8+8+8*1]
	call LB_376
	pop r8 
	FREE_RCD 2, r8
	jmp LB_387
LB_383:
	FREE_LN r8 
	mov r8,QWORD [r8+8]
	call LB_389
	jmp LB_387
LB_384:
	FREE_LN r8 
	mov r8,QWORD [r8+8]
	call LB_324
	jmp LB_387
LB_385:
	mov rdi,r8
	call free_s8
	jmp LB_387
LB_387:
	ret
LB_389:
	movzx rax,BYTE [r8+6]
	jmp QWORD [LB_392+8*rax]
LB_392: dq LB_390,LB_391
LB_390:
	FREE_LN r8 
	mov r8,QWORD [r8+8]
	call LB_394
	jmp LB_393
LB_391:
	FREE_LN r8 
	mov r8,QWORD [r8+8]
	call LB_388
	jmp LB_393
LB_393:
	ret
LB_394:
	movzx rax,BYTE [r8+6]
	jmp QWORD [LB_397+8*rax]
LB_397: dq LB_395,LB_396
LB_395:
	FREE_LN r8 
	mov r8,QWORD [r8+8]
	jmp LB_398
LB_396:
	mov rdi,r8
	call free_s8
	jmp LB_398
LB_398:
	ret
LB_388:
	movzx rax,BYTE [r8+6]
	jmp QWORD [LB_401+8*rax]
LB_401: dq LB_399,LB_400
LB_399:
	push r8
	mov r8,QWORD [r8+8+8*0]
	mov rdi,r8
	call free_s8
	pop r8 
	push r8
	mov r8,QWORD [r8+8+8*1]
	call LB_388
	pop r8 
	FREE_RCD 2, r8
	jmp LB_402
LB_400:
	mov rdi,r8
	call free_s8
	jmp LB_402
LB_402:
	ret
ETR_103: ;; pnt_mtc_ptn 0'(= a8◂ [ a14◂ [ a9◂ [ ]{| l |}]] ) ⊢ 0'(= {| l |} ) : (_t8◂_t14◂_s8◂_t9→_s8)
;; rsp=0 , %462~0'(= a8◂ [ a14◂ [ a9◂ [ ]{| l |}]] ) 
;; ? 0'(= a8◂ [ a14◂ [ a9◂ [ ]{| l |}]] ) ⊢ 0(<2)◂1'(= a2◂ [ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]] )
	mov rdi,r13
	cmp BYTE [rdi+6],0
	jnz LB_331
	mov QWORD [GBG_VCT+8*0],rdi
	mov r14,QWORD [rdi+8]
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_LN rdi
;; rsp=0 , %464~1'(= a2◂ [ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]] ) 
; $ 1'(= a2◂ [ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]] ) ⊢ 1'(= a2◂ [ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]] ),0'(= a2◂ [ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]] )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	call LB_332
	C_POP_REGS
	mov r13,rax
;; rsp=0 , %466~0'(= a2◂ [ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]] ) %465~1'(= a2◂ [ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]] ) 
; #81 0'(= a2◂ [ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]] ) ⊢ 0(<2)◂0'(= a2◂ [ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]] )
;; rsp=0 , %467~0(<2)◂0'(= a2◂ [ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]] ) %465~1'(= a2◂ [ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]] ) 
; #104 1'(= a2◂ [ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]] ) ⊢ 1'(= {| l |} )
	sub rsp,8
	mov QWORD [rsp+8*0],r13
; .mov_ptn2 1'(= a2◂ [ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]] ) ⊢ 0'(= a2◂ [ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]] )
; .mov_ptn 1'(= a2◂ [ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]] ) ⊢ 0'(= a2◂ [ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]] )
	mov rax,r14
	mov r13,rax
	call ETR_104
	mov r14,r13
	mov r13,QWORD [rsp-8+8*1]
	add rsp,8
;; rsp=0 , %468~1'(= {| l |} ) %467~0(<2)◂0'(= a2◂ [ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]] ) 
; » _^ .. ⊢ ..
; .. //
	mov rdi,0
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[r14]
	add rdi,rax 
	push rax
	add rdi,3
	push rdi 
	call mlc_s8
	pop rdi
	mov r8,rax
	lea rdi,[rax+7+rdi]
	std 
	mov QWORD [tmp],rcx 
	lea rsi,[LB_369+1-1]
	mov rcx,1
	rep movsb
	pop rcx
	lea rsi,[r14+7+rcx]
	rep movsb
	lea rsi,[LB_370+2-1]
	mov rcx,2
	rep movsb
	mov rcx,QWORD [tmp] 
;; rsp=0 , %470~2'(= {| l |} ) %469~1'(= {| l |} ) %467~0(<2)◂0'(= a2◂ [ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]] ) 
; ∎ 2'(= {| l |} )
; .dlt.ptn 1'(= {| l |} )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	mov rdi,r8
	call free_s8
	C_POP_REGS
; .dlt.ptn 0(<2)◂0'(= a2◂ [ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]] )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	call LB_371
	C_POP_REGS
; .mov_ptn2 2'(= {| l |} ) ⊢ 0'(= {| l |} )
; .mov_ptn 2'(= {| l |} ) ⊢ 0'(= {| l |} )
	mov rax,r8
	mov r13,rax
	ret
LB_331:
;; ?. 0'(= a8◂ [ a14◂ [ a9◂ [ ]{| l |}]] ) ⊢ 1(<2)◂1'(= a14◂ [ a9◂ [ ]{| l |}] )
	mov QWORD [GBG_VCT+8*0],rdi
	mov r14,QWORD [rdi+8]
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_LN rdi
;; rsp=0 , %463~1'(= a14◂ [ a9◂ [ ]{| l |}] ) 
;; ? 1'(= a14◂ [ a9◂ [ ]{| l |}] ) ⊢ 1(<4)◂0'(= a11◂ [ a9◂ [ ]] )
	mov rdi,r14
	cmp BYTE [rdi+6],1
	jnz LB_403
	mov QWORD [GBG_VCT+8*0],rdi
	mov r13,QWORD [rdi+8]
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_LN rdi
;; rsp=0 , %475~0'(= a11◂ [ a9◂ [ ]] ) 
; #90 0'(= a11◂ [ a9◂ [ ]] ) ⊢ 0'(= {| l |} )
; .mov_ptn2 0'(= a11◂ [ a9◂ [ ]] ) ⊢ 0'(= a11◂ [ a9◂ [ ]] )
	call ETR_90
;; rsp=0 , %476~0'(= {| l |} ) 
; » _^ .. ⊢ ..
; .. //
	mov rdi,0
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[r13]
	add rdi,rax 
	push rax
	add rdi,6
	push rdi 
	call mlc_s8
	pop rdi
	mov r14,rax
	lea rdi,[rax+7+rdi]
	std 
	mov QWORD [tmp],rcx 
	lea rsi,[LB_404+3-1]
	mov rcx,3
	rep movsb
	pop rcx
	lea rsi,[r13+7+rcx]
	rep movsb
	lea rsi,[LB_405+3-1]
	mov rcx,3
	rep movsb
	mov rcx,QWORD [tmp] 
;; rsp=0 , %478~1'(= {| l |} ) %477~0'(= {| l |} ) 
; ∎ 1'(= {| l |} )
; .dlt.ptn 0'(= {| l |} )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	mov rdi,r8
	call free_s8
	C_POP_REGS
; .mov_ptn2 1'(= {| l |} ) ⊢ 0'(= {| l |} )
; .mov_ptn 1'(= {| l |} ) ⊢ 0'(= {| l |} )
	mov rax,r14
	mov r13,rax
	ret
LB_403:
;; ? 1'(= a14◂ [ a9◂ [ ]{| l |}] ) ⊢ 0(<4)◂{ 0'(= a9◂ [ ] ) 2'(= a8◂ [ a14◂ [ a9◂ [ ]{| l |}]] ) }
	mov rdi,r14
	cmp BYTE [rdi+6],0
	jnz LB_406
	mov r13, QWORD [r14+8]
	mov r8, QWORD [r14+16]
	mov QWORD [GBG_VCT+8*0],r14
	mov rdi,QWORD [GBG_VCT+8*0]
	mov rax,[SS_RCD_2_TOP]
	mov QWORD [rdi],rax 
	mov QWORD [SS_RCD_2_TOP],rdi
;; rsp=0 , %474~2'(= a8◂ [ a14◂ [ a9◂ [ ]{| l |}]] ) %473~0'(= a9◂ [ ] ) 
; #103 2'(= a8◂ [ a14◂ [ a9◂ [ ]{| l |}]] ) ⊢ 1'(= {| l |} )
	sub rsp,8
	mov QWORD [rsp+8*0],r13
; .mov_ptn2 2'(= a8◂ [ a14◂ [ a9◂ [ ]{| l |}]] ) ⊢ 0'(= a8◂ [ a14◂ [ a9◂ [ ]{| l |}]] )
; .mov_ptn 2'(= a8◂ [ a14◂ [ a9◂ [ ]{| l |}]] ) ⊢ 0'(= a8◂ [ a14◂ [ a9◂ [ ]{| l |}]] )
	mov rax,r8
	mov r13,rax
	call ETR_103
	mov r14,r13
	mov r13,QWORD [rsp-8+8*1]
	add rsp,8
;; rsp=0 , %479~1'(= {| l |} ) %473~0'(= a9◂ [ ] ) 
; #84 0'(= a9◂ [ ] ) ⊢ 0'(= {| l |} )
	sub rsp,8
	mov QWORD [rsp+8*0],r14
; .mov_ptn2 0'(= a9◂ [ ] ) ⊢ 0'(= a9◂ [ ] )
	call ETR_84
	mov r14,QWORD [rsp-8+8*1]
	add rsp,8
;; rsp=0 , %480~0'(= {| l |} ) %479~1'(= {| l |} ) 
; » _^ .. ⊢ ..
; .. //
	mov rdi,0
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[r13]
	add rdi,rax 
	push rax
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[r14]
	add rdi,rax 
	push rax
	add rdi,3
	push rdi 
	call mlc_s8
	pop rdi
	mov r8,rax
	lea rdi,[rax+7+rdi]
	std 
	mov QWORD [tmp],rcx 
	pop rcx
	lea rsi,[r14+7+rcx]
	rep movsb
	lea rsi,[LB_407+3-1]
	mov rcx,3
	rep movsb
	pop rcx
	lea rsi,[r13+7+rcx]
	rep movsb
	mov rcx,QWORD [tmp] 
;; rsp=0 , %483~2'(= {| l |} ) %482~1'(= {| l |} ) %481~0'(= {| l |} ) 
; ∎ 2'(= {| l |} )
; .dlt.ptn 1'(= {| l |} )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	mov rdi,r8
	call free_s8
	C_POP_REGS
; .dlt.ptn 0'(= {| l |} )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	mov rdi,r8
	call free_s8
	C_POP_REGS
; .mov_ptn2 2'(= {| l |} ) ⊢ 0'(= {| l |} )
; .mov_ptn 2'(= {| l |} ) ⊢ 0'(= {| l |} )
	mov rax,r8
	mov r13,rax
	ret
LB_406:
;; ? 1'(= a14◂ [ a9◂ [ ]{| l |}] ) ⊢ 3(<4)◂1'(= {| l |} )
	mov rdi,r14
	cmp BYTE [rdi+6],3
	jnz LB_408
;; rsp=0 , %472~1'(= {| l |} ) 
; » _^ .. ⊢ ..
; .. //
	mov rdi,0
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[r14]
	add rdi,rax 
	push rax
	add rdi,1
	push rdi 
	call mlc_s8
	pop rdi
	mov r13,rax
	lea rdi,[rax+7+rdi]
	std 
	mov QWORD [tmp],rcx 
	pop rcx
	lea rsi,[r14+7+rcx]
	rep movsb
	lea rsi,[LB_409+1-1]
	mov rcx,1
	rep movsb
	mov rcx,QWORD [tmp] 
;; rsp=0 , %485~0'(= {| l |} ) %484~1'(= {| l |} ) 
; ∎ 0'(= {| l |} )
; .dlt.ptn 1'(= {| l |} )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	mov rdi,r8
	call free_s8
	C_POP_REGS
; .mov_ptn2 0'(= {| l |} ) ⊢ 0'(= {| l |} )
	ret
LB_408:
;; ?. 1'(= a14◂ [ a9◂ [ ]{| l |}] ) ⊢ 2(<4)◂0'(= a3◂ [ {| l |}] )
	mov QWORD [GBG_VCT+8*0],rdi
	mov r13,QWORD [rdi+8]
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_LN rdi
;; rsp=0 , %471~0'(= a3◂ [ {| l |}] ) 
; $ %[ "_" ] ⊢ %[ "_" ]
;; rsp=0 , %486~%[ "_" ] %471~0'(= a3◂ [ {| l |}] ) 
; ∎ %[ "_" ]
; .dlt.ptn 0'(= a3◂ [ {| l |}] )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	call LB_324
	C_POP_REGS
; .mov_ptn2 %[ "_" ] ⊢ 0'(= {| l |} )
; .mov_ptn %[ "_" ] ⊢ 0'(= {| l |} )
	mov rsi,1  
	mov rdi,16
	xor rax,rax 
	C_CALL_SF calloc
	mov QWORD [rax],1
	mov BYTE [rax+8+0],95
	mov r13,rax
	ret
ETR_104: ;; pnt_mtc_ptn_lst 0'(= a2◂ [ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]] ) ⊢ 0'(= {| l |} ) : (_lst◂_t8◂_t14◂_s8◂_t9→_s8)
;; rsp=0 , %487~0'(= a2◂ [ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]] ) 
;; ? 0'(= a2◂ [ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]] ) ⊢ 0(<2)◂{ 1'(= a8◂ [ a14◂ [ a9◂ [ ]{| l |}]] ) 2'(= a2◂ [ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]] ) }
	mov rdi,r13
	cmp BYTE [rdi+6],0
	jnz LB_410
	mov r14, QWORD [r13+8]
	mov r8, QWORD [r13+16]
	mov QWORD [GBG_VCT+8*0],r13
	mov rdi,QWORD [GBG_VCT+8*0]
	mov rax,[SS_RCD_2_TOP]
	mov QWORD [rdi],rax 
	mov QWORD [SS_RCD_2_TOP],rdi
;; rsp=0 , %489~2'(= a2◂ [ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]] ) %488~1'(= a8◂ [ a14◂ [ a9◂ [ ]{| l |}]] ) 
; #103 1'(= a8◂ [ a14◂ [ a9◂ [ ]{| l |}]] ) ⊢ 0'(= {| l |} )
	sub rsp,8
	mov QWORD [rsp+8*0],r8
; .mov_ptn2 1'(= a8◂ [ a14◂ [ a9◂ [ ]{| l |}]] ) ⊢ 0'(= a8◂ [ a14◂ [ a9◂ [ ]{| l |}]] )
; .mov_ptn 1'(= a8◂ [ a14◂ [ a9◂ [ ]{| l |}]] ) ⊢ 0'(= a8◂ [ a14◂ [ a9◂ [ ]{| l |}]] )
	mov rax,r14
	mov r13,rax
	call ETR_103
	mov r8,QWORD [rsp-8+8*1]
	add rsp,8
;; rsp=0 , %490~0'(= {| l |} ) %489~2'(= a2◂ [ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]] ) 
; #104 2'(= a2◂ [ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]] ) ⊢ 1'(= {| l |} )
	sub rsp,8
	mov QWORD [rsp+8*0],r13
; .mov_ptn2 2'(= a2◂ [ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]] ) ⊢ 0'(= a2◂ [ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]] )
; .mov_ptn 2'(= a2◂ [ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]] ) ⊢ 0'(= a2◂ [ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]] )
	mov rax,r8
	mov r13,rax
	call ETR_104
	mov r14,r13
	mov r13,QWORD [rsp-8+8*1]
	add rsp,8
;; rsp=0 , %491~1'(= {| l |} ) %490~0'(= {| l |} ) 
; » _^ .. ⊢ ..
; .. //
	mov rdi,0
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[r13]
	add rdi,rax 
	push rax
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[r14]
	add rdi,rax 
	push rax
	add rdi,1
	push rdi 
	call mlc_s8
	pop rdi
	mov r8,rax
	lea rdi,[rax+7+rdi]
	std 
	mov QWORD [tmp],rcx 
	pop rcx
	lea rsi,[r14+7+rcx]
	rep movsb
	lea rsi,[LB_411+1-1]
	mov rcx,1
	rep movsb
	pop rcx
	lea rsi,[r13+7+rcx]
	rep movsb
	mov rcx,QWORD [tmp] 
;; rsp=0 , %494~2'(= {| l |} ) %493~1'(= {| l |} ) %492~0'(= {| l |} ) 
; ∎ 2'(= {| l |} )
; .dlt.ptn 1'(= {| l |} )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	mov rdi,r8
	call free_s8
	C_POP_REGS
; .dlt.ptn 0'(= {| l |} )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	mov rdi,r8
	call free_s8
	C_POP_REGS
; .mov_ptn2 2'(= {| l |} ) ⊢ 0'(= {| l |} )
; .mov_ptn 2'(= {| l |} ) ⊢ 0'(= {| l |} )
	mov rax,r8
	mov r13,rax
	ret
LB_410:
;; ?. 0'(= a2◂ [ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]] ) ⊢ 1(<2)◂{ }
;; rsp=0 , 
; $ %[ "" ] ⊢ %[ "" ]
;; rsp=0 , %495~%[ "" ] 
; ∎ %[ "" ]
; .mov_ptn2 %[ "" ] ⊢ 0'(= {| l |} )
; .mov_ptn %[ "" ] ⊢ 0'(= {| l |} )
	mov rsi,1  
	mov rdi,16
	xor rax,rax 
	C_CALL_SF calloc
	mov QWORD [rax],0
	mov r13,rax
	ret
LB_445:
	movzx rax,BYTE [r8+6]
	jmp QWORD [LB_448+8*rax]
LB_448: dq LB_446,LB_447
LB_446:
	FREE_LN r8 
	mov r8,QWORD [r8+8]
	call LB_450
	jmp LB_449
LB_447:
	FREE_LN r8 
	mov r8,QWORD [r8+8]
	call LB_451
	jmp LB_449
LB_449:
	ret
LB_451:
	movzx rax,BYTE [r8+6]
	jmp QWORD [LB_454+8*rax]
LB_454: dq LB_452,LB_453
LB_452:
	FREE_LN r8 
	mov r8,QWORD [r8+8]
	call LB_389
	jmp LB_455
LB_453:
	mov rdi,r8
	call free_s8
	jmp LB_455
LB_455:
	ret
LB_450:
	movzx rax,BYTE [r8+6]
	jmp QWORD [LB_458+8*rax]
LB_458: dq LB_456,LB_457
LB_456:
	push r8
	mov r8,QWORD [r8+8+8*0]
	call LB_445
	pop r8 
	push r8
	mov r8,QWORD [r8+8+8*1]
	call LB_450
	pop r8 
	FREE_RCD 2, r8
	jmp LB_459
LB_457:
	jmp LB_459
LB_459:
	ret
LB_493:
	movzx rax,BYTE [r8+6]
	jmp QWORD [LB_496+8*rax]
LB_496: dq LB_494,LB_495
LB_494:
	push r8
	mov r8,QWORD [r8+8+8*0]
	call LB_498
	pop r8 
	push r8
	mov r8,QWORD [r8+8+8*1]
	call LB_493
	pop r8 
	FREE_RCD 2, r8
	jmp LB_497
LB_495:
	jmp LB_497
LB_497:
	ret
LB_498:
	movzx rax,BYTE [r8+6]
	jmp QWORD [LB_503+8*rax]
LB_503: dq LB_499,LB_500,LB_501,LB_502
LB_499:
	mov rdi,r8
	call free_s8
	jmp LB_504
LB_500:
	FREE_LN r8 
	mov r8,QWORD [r8+8]
	call LB_389
	jmp LB_504
LB_501:
	push r8
	mov r8,QWORD [r8+8+8*0]
	call LB_505
	pop r8 
	push r8
	mov r8,QWORD [r8+8+8*1]
	pop r8 
	FREE_RCD 2, r8
	jmp LB_504
LB_502:
	push r8
	mov r8,QWORD [r8+8+8*0]
	pop r8 
	push r8
	mov r8,QWORD [r8+8+8*1]
	mov rdi,r8
	call free_s8
	pop r8 
	FREE_RCD 2, r8
	jmp LB_504
LB_504:
	ret
LB_505:
	movzx rax,BYTE [r8+6]
	jmp QWORD [LB_510+8*rax]
LB_510: dq LB_506,LB_507,LB_508,LB_509
LB_506:
	jmp LB_511
LB_507:
	jmp LB_511
LB_508:
	jmp LB_511
LB_509:
	jmp LB_511
LB_511:
	ret
LB_492:
	movzx rax,BYTE [r8+6]
	jmp QWORD [LB_514+8*rax]
LB_514: dq LB_512,LB_513
LB_512:
	push r8
	mov r8,QWORD [r8+8+8*0]
	call LB_451
	pop r8 
	push r8
	mov r8,QWORD [r8+8+8*1]
	call LB_492
	pop r8 
	FREE_RCD 2, r8
	jmp LB_515
LB_513:
	jmp LB_515
LB_515:
	ret
LB_491:
	movzx rax,BYTE [r8+6]
	jmp QWORD [LB_518+8*rax]
LB_518: dq LB_516,LB_517
LB_516:
	push r8
	mov r8,QWORD [r8+8+8*0]
	call LB_520
	pop r8 
	push r8
	mov r8,QWORD [r8+8+8*1]
	call LB_491
	pop r8 
	FREE_RCD 2, r8
	jmp LB_519
LB_517:
	jmp LB_519
LB_519:
	ret
LB_520:
	movzx rax,BYTE [r8+6]
	jmp QWORD [LB_523+8*rax]
LB_523: dq LB_521,LB_522
LB_521:
	FREE_LN r8 
	mov r8,QWORD [r8+8]
	call LB_324
	jmp LB_524
LB_522:
	mov rdi,r8
	call free_s8
	jmp LB_524
LB_524:
	ret
LB_531:
	movzx rax,BYTE [r8+6]
	jmp QWORD [LB_534+8*rax]
LB_534: dq LB_532,LB_533
LB_532:
	push r8
	mov r8,QWORD [r8+8+8*0]
	call LB_536
	pop r8 
	push r8
	mov r8,QWORD [r8+8+8*1]
	call LB_531
	pop r8 
	FREE_RCD 2, r8
	jmp LB_535
LB_533:
	jmp LB_535
LB_535:
	ret
LB_536:
	movzx rax,BYTE [r8+6]
	jmp QWORD [LB_540+8*rax]
LB_540: dq LB_537,LB_538,LB_539
LB_537:
	push r8
	mov r8,QWORD [r8+8+8*0]
	call LB_445
	pop r8 
	push r8
	mov r8,QWORD [r8+8+8*1]
	call LB_376
	pop r8 
	FREE_RCD 2, r8
	jmp LB_541
LB_538:
	push r8
	mov r8,QWORD [r8+8+8*0]
	call LB_542
	pop r8 
	push r8
	mov r8,QWORD [r8+8+8*1]
	call LB_542
	pop r8 
	FREE_RCD 2, r8
	jmp LB_541
LB_539:
	push r8
	mov r8,QWORD [r8+8+8*0]
	call LB_542
	pop r8 
	push r8
	mov r8,QWORD [r8+8+8*1]
	call LB_542
	pop r8 
	FREE_RCD 2, r8
	jmp LB_541
LB_541:
	ret
LB_542:
	movzx rax,BYTE [r8+6]
	jmp QWORD [LB_545+8*rax]
LB_545: dq LB_543,LB_544
LB_543:
	FREE_LN r8 
	mov r8,QWORD [r8+8]
	call LB_389
	jmp LB_546
LB_544:
	mov rdi,r8
	call free_s8
	jmp LB_546
LB_546:
	ret
ETR_134: ;; pnt_lc_code { 0'(= r ) 1'(= a17◂ [ a9◂ [ ]{| l |}] ) } ⊢ { 0'(= r ) 1'(= {| l |} ) } : ({ _r64 _t17◂_s8◂_t9 }→{ _r64 _s8 })
;; rsp=0 , %497~1'(= a17◂ [ a9◂ [ ]{| l |}] ) %496~0'(= r ) 
;; ? 1'(= a17◂ [ a9◂ [ ]{| l |}] ) ⊢ 0(<7)◂{ 2'(= a9◂ [ ] ) 3'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) }
	mov rdi,r14
	cmp BYTE [rdi+6],0
	jnz LB_412
	mov r8, QWORD [r14+8]
	mov r9, QWORD [r14+16]
	mov QWORD [GBG_VCT+8*0],r14
	mov rdi,QWORD [GBG_VCT+8*0]
	mov rax,[SS_RCD_2_TOP]
	mov QWORD [rdi],rax 
	mov QWORD [SS_RCD_2_TOP],rdi
;; rsp=0 , %508~3'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) %507~2'(= a9◂ [ ] ) %496~0'(= r ) 
; #84 2'(= a9◂ [ ] ) ⊢ 1'(= {| l |} )
	sub rsp,16
	mov QWORD [rsp+8*0],r13
	mov QWORD [rsp+8*1],r9
; .mov_ptn2 2'(= a9◂ [ ] ) ⊢ 0'(= a9◂ [ ] )
; .mov_ptn 2'(= a9◂ [ ] ) ⊢ 0'(= a9◂ [ ] )
	mov rax,r8
	mov r13,rax
	call ETR_84
	mov r9,QWORD [rsp-8+8*2]
	mov r14,r13
	mov r13,QWORD [rsp-8+8*1]
	add rsp,16
;; rsp=0 , %509~1'(= {| l |} ) %508~3'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) %496~0'(= r ) 
; #99 3'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) ⊢ 2'(= {| l |} )
	sub rsp,16
	mov QWORD [rsp+8*0],r13
	mov QWORD [rsp+8*1],r14
; .mov_ptn2 3'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) ⊢ 0'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] )
; .mov_ptn 3'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) ⊢ 0'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] )
	mov rax,r9
	mov r13,rax
	call ETR_99
	mov r14,QWORD [rsp-8+8*2]
	mov r8,r13
	mov r13,QWORD [rsp-8+8*1]
	add rsp,16
;; rsp=0 , %510~2'(= {| l |} ) %509~1'(= {| l |} ) %496~0'(= r ) 
; » _^ .. ⊢ ..
; .. //
	mov rdi,0
	mov rsi,r13
	imul rsi,1
	add rdi,rsi 
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[r14]
	add rdi,rax 
	push rax
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[r8]
	add rdi,rax 
	push rax
	add rdi,7
	push rdi 
	call mlc_s8
	pop rdi
	mov r9,rax
	lea rdi,[rax+7+rdi]
	std 
	mov QWORD [tmp],rcx 
	lea rsi,[LB_413+6-1]
	mov rcx,6
	rep movsb
	pop rcx
	lea rsi,[r8+7+rcx]
	rep movsb
	lea rsi,[LB_414+1-1]
	mov rcx,1
	rep movsb
	pop rcx
	lea rsi,[r14+7+rcx]
	rep movsb
	mov rax,r13
LB_416:
	cmp rax,0
	jz LB_417
	sub rax,1
	lea rsi,[LB_415+1-1]
	mov rcx,1
	rep movsb 
	jmp LB_416
LB_417:
	mov rcx,QWORD [tmp] 
;; rsp=0 , %514~3'(= {| l |} ) %513~2'(= {| l |} ) %512~1'(= {| l |} ) %511~0'(= r ) 
; ∎ { 0'(= r ) 3'(= {| l |} ) }
; .dlt.ptn 2'(= {| l |} )
	mov rdi,r8
	C_PUSH_REGS
	mov r8,rdi
	mov rdi,r8
	call free_s8
	C_POP_REGS
; .dlt.ptn 1'(= {| l |} )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	mov rdi,r8
	call free_s8
	C_POP_REGS
; .mov_ptn2 { 0'(= r ) 3'(= {| l |} ) } ⊢ { 0'(= r ) 1'(= {| l |} ) }
; .mov_ptn 3'(= {| l |} ) ⊢ 1'(= {| l |} )
	mov rax,r9
	mov r14,rax
	ret
LB_412:
;; ? 1'(= a17◂ [ a9◂ [ ]{| l |}] ) ⊢ 1(<7)◂{ 2'(= a12◂ [ a9◂ [ ]{| l |}] ) 3'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) }
	mov rdi,r14
	cmp BYTE [rdi+6],1
	jnz LB_418
	mov r8, QWORD [r14+8]
	mov r9, QWORD [r14+16]
	mov QWORD [GBG_VCT+8*0],r14
	mov rdi,QWORD [GBG_VCT+8*0]
	mov rax,[SS_RCD_2_TOP]
	mov QWORD [rdi],rax 
	mov QWORD [SS_RCD_2_TOP],rdi
;; rsp=0 , %506~3'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) %505~2'(= a12◂ [ a9◂ [ ]{| l |}] ) %496~0'(= r ) 
; #80 2'(= a12◂ [ a9◂ [ ]{| l |}] ) ⊢ 1(<2)◂2'(= a12◂ [ a9◂ [ ]{| l |}] )
;; rsp=0 , %515~1(<2)◂2'(= a12◂ [ a9◂ [ ]{| l |}] ) %506~3'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) %496~0'(= r ) 
; #99 1(<2)◂2'(= a12◂ [ a9◂ [ ]{| l |}] ) ⊢ 1'(= {| l |} )
	sub rsp,16
	mov QWORD [rsp+8*0],r13
	mov QWORD [rsp+8*1],r9
; .mov_ptn2 1(<2)◂2'(= a12◂ [ a9◂ [ ]{| l |}] ) ⊢ 0'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] )
; .mov_ptn 1(<2)◂2'(= a12◂ [ a9◂ [ ]{| l |}] ) ⊢ 0'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] )
	mov rax,r8
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],1
	mov QWORD [rax+8],rdi
	mov r13,rax
	call ETR_99
	mov r9,QWORD [rsp-8+8*2]
	mov r14,r13
	mov r13,QWORD [rsp-8+8*1]
	add rsp,16
;; rsp=0 , %516~1'(= {| l |} ) %506~3'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) %496~0'(= r ) 
; #99 3'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) ⊢ 2'(= {| l |} )
	sub rsp,16
	mov QWORD [rsp+8*0],r13
	mov QWORD [rsp+8*1],r14
; .mov_ptn2 3'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) ⊢ 0'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] )
; .mov_ptn 3'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) ⊢ 0'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] )
	mov rax,r9
	mov r13,rax
	call ETR_99
	mov r14,QWORD [rsp-8+8*2]
	mov r8,r13
	mov r13,QWORD [rsp-8+8*1]
	add rsp,16
;; rsp=0 , %517~2'(= {| l |} ) %516~1'(= {| l |} ) %496~0'(= r ) 
; » _^ .. ⊢ ..
; .. //
	mov rdi,0
	mov rsi,r13
	imul rsi,1
	add rdi,rsi 
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[r14]
	add rdi,rax 
	push rax
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[r8]
	add rdi,rax 
	push rax
	add rdi,10
	push rdi 
	call mlc_s8
	pop rdi
	mov r9,rax
	lea rdi,[rax+7+rdi]
	std 
	mov QWORD [tmp],rcx 
	lea rsi,[LB_419+6-1]
	mov rcx,6
	rep movsb
	pop rcx
	lea rsi,[r8+7+rcx]
	rep movsb
	lea rsi,[LB_420+1-1]
	mov rcx,1
	rep movsb
	pop rcx
	lea rsi,[r14+7+rcx]
	rep movsb
	lea rsi,[LB_421+3-1]
	mov rcx,3
	rep movsb
	mov rax,r13
LB_423:
	cmp rax,0
	jz LB_424
	sub rax,1
	lea rsi,[LB_422+1-1]
	mov rcx,1
	rep movsb 
	jmp LB_423
LB_424:
	mov rcx,QWORD [tmp] 
;; rsp=0 , %521~3'(= {| l |} ) %520~2'(= {| l |} ) %519~1'(= {| l |} ) %518~0'(= r ) 
; ∎ { 0'(= r ) 3'(= {| l |} ) }
; .dlt.ptn 2'(= {| l |} )
	mov rdi,r8
	C_PUSH_REGS
	mov r8,rdi
	mov rdi,r8
	call free_s8
	C_POP_REGS
; .dlt.ptn 1'(= {| l |} )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	mov rdi,r8
	call free_s8
	C_POP_REGS
; .mov_ptn2 { 0'(= r ) 3'(= {| l |} ) } ⊢ { 0'(= r ) 1'(= {| l |} ) }
; .mov_ptn 3'(= {| l |} ) ⊢ 1'(= {| l |} )
	mov rax,r9
	mov r14,rax
	ret
LB_418:
;; ? 1'(= a17◂ [ a9◂ [ ]{| l |}] ) ⊢ 2(<7)◂{ 2'(= a19◂ [ a9◂ [ ]{| l |}] ) 3'(= a17◂ [ a9◂ [ ]{| l |}] ) }
	mov rdi,r14
	cmp BYTE [rdi+6],2
	jnz LB_425
	mov r8, QWORD [r14+8]
	mov r9, QWORD [r14+16]
	mov QWORD [GBG_VCT+8*0],r14
	mov rdi,QWORD [GBG_VCT+8*0]
	mov rax,[SS_RCD_2_TOP]
	mov QWORD [rdi],rax 
	mov QWORD [SS_RCD_2_TOP],rdi
;; rsp=0 , %504~3'(= a17◂ [ a9◂ [ ]{| l |}] ) %503~2'(= a19◂ [ a9◂ [ ]{| l |}] ) %496~0'(= r ) 
; #135 { 0'(= r ) 2'(= a19◂ [ a9◂ [ ]{| l |}] ) } ⊢ { 0'(= r ) 1'(= {| l |} ) }
	sub rsp,8
	mov QWORD [rsp+8*0],r9
; .mov_ptn2 { 0'(= r ) 2'(= a19◂ [ a9◂ [ ]{| l |}] ) } ⊢ { 0'(= r ) 1'(= a19◂ [ a9◂ [ ]{| l |}] ) }
; .mov_ptn 2'(= a19◂ [ a9◂ [ ]{| l |}] ) ⊢ 1'(= a19◂ [ a9◂ [ ]{| l |}] )
	mov rax,r8
	mov r14,rax
	call ETR_135
	mov r9,QWORD [rsp-8+8*1]
	add rsp,8
;; rsp=0 , %523~1'(= {| l |} ) %522~0'(= r ) %504~3'(= a17◂ [ a9◂ [ ]{| l |}] ) 
; #134 { 0'(= r ) 3'(= a17◂ [ a9◂ [ ]{| l |}] ) } ⊢ { 0'(= r ) 2'(= {| l |} ) }
	sub rsp,8
	mov QWORD [rsp+8*0],r14
; .mov_ptn2 { 0'(= r ) 3'(= a17◂ [ a9◂ [ ]{| l |}] ) } ⊢ { 0'(= r ) 1'(= a17◂ [ a9◂ [ ]{| l |}] ) }
; .mov_ptn 3'(= a17◂ [ a9◂ [ ]{| l |}] ) ⊢ 1'(= a17◂ [ a9◂ [ ]{| l |}] )
	mov rax,r9
	mov r14,rax
	call ETR_134
	mov r8,r14
	mov r14,QWORD [rsp-8+8*1]
	add rsp,8
;; rsp=0 , %525~2'(= {| l |} ) %524~0'(= r ) %523~1'(= {| l |} ) 
; » _^ .. ⊢ ..
; .. //
	mov rdi,0
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[r14]
	add rdi,rax 
	push rax
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[r8]
	add rdi,rax 
	push rax
	add rdi,0
	push rdi 
	call mlc_s8
	pop rdi
	mov r9,rax
	lea rdi,[rax+7+rdi]
	std 
	mov QWORD [tmp],rcx 
	pop rcx
	lea rsi,[r8+7+rcx]
	rep movsb
	pop rcx
	lea rsi,[r14+7+rcx]
	rep movsb
	mov rcx,QWORD [tmp] 
;; rsp=0 , %528~3'(= {| l |} ) %527~2'(= {| l |} ) %526~1'(= {| l |} ) %524~0'(= r ) 
; ∎ { 0'(= r ) 3'(= {| l |} ) }
; .dlt.ptn 2'(= {| l |} )
	mov rdi,r8
	C_PUSH_REGS
	mov r8,rdi
	mov rdi,r8
	call free_s8
	C_POP_REGS
; .dlt.ptn 1'(= {| l |} )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	mov rdi,r8
	call free_s8
	C_POP_REGS
; .mov_ptn2 { 0'(= r ) 3'(= {| l |} ) } ⊢ { 0'(= r ) 1'(= {| l |} ) }
; .mov_ptn 3'(= {| l |} ) ⊢ 1'(= {| l |} )
	mov rax,r9
	mov r14,rax
	ret
LB_425:
;; ? 1'(= a17◂ [ a9◂ [ ]{| l |}] ) ⊢ 3(<7)◂2'(= a7◂ [ *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}] )
	mov rdi,r14
	cmp BYTE [rdi+6],3
	jnz LB_426
	mov QWORD [GBG_VCT+8*0],rdi
	mov r8,QWORD [rdi+8]
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_LN rdi
;; rsp=0 , %502~2'(= a7◂ [ *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}] ) %496~0'(= r ) 
; #136 { 0'(= r ) 2'(= a7◂ [ *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}] ) } ⊢ { 0'(= r ) 1'(= {| l |} ) }
; .mov_ptn2 { 0'(= r ) 2'(= a7◂ [ *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}] ) } ⊢ { 0'(= r ) 1'(= a7◂ [ *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}] ) }
; .mov_ptn 2'(= a7◂ [ *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}] ) ⊢ 1'(= a7◂ [ *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}] )
	mov rax,r8
	mov r14,rax
	call ETR_136
;; rsp=0 , %530~1'(= {| l |} ) %529~0'(= r ) 
; ∎ { 0'(= r ) 1'(= {| l |} ) }
; .mov_ptn2 { 0'(= r ) 1'(= {| l |} ) } ⊢ { 0'(= r ) 1'(= {| l |} ) }
	ret
LB_426:
;; ? 1'(= a17◂ [ a9◂ [ ]{| l |}] ) ⊢ 4(<7)◂{ 2'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) 3'(= a18◂ [ a9◂ [ ]{| l |}] ) }
	mov rdi,r14
	cmp BYTE [rdi+6],4
	jnz LB_427
	mov r8, QWORD [r14+8]
	mov r9, QWORD [r14+16]
	mov QWORD [GBG_VCT+8*0],r14
	mov rdi,QWORD [GBG_VCT+8*0]
	mov rax,[SS_RCD_2_TOP]
	mov QWORD [rdi],rax 
	mov QWORD [SS_RCD_2_TOP],rdi
;; rsp=0 , %501~3'(= a18◂ [ a9◂ [ ]{| l |}] ) %500~2'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) %496~0'(= r ) 
; #99 2'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) ⊢ 1'(= {| l |} )
	sub rsp,16
	mov QWORD [rsp+8*0],r13
	mov QWORD [rsp+8*1],r9
; .mov_ptn2 2'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) ⊢ 0'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] )
; .mov_ptn 2'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) ⊢ 0'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] )
	mov rax,r8
	mov r13,rax
	call ETR_99
	mov r9,QWORD [rsp-8+8*2]
	mov r14,r13
	mov r13,QWORD [rsp-8+8*1]
	add rsp,16
;; rsp=0 , %531~1'(= {| l |} ) %501~3'(= a18◂ [ a9◂ [ ]{| l |}] ) %496~0'(= r ) 
;; ? 3'(= a18◂ [ a9◂ [ ]{| l |}] ) ⊢ 1(<2)◂{ 2'(= a2◂ [ a8◂ [ a13◂ [ {| l |}]]] ) 4'(= a17◂ [ a9◂ [ ]{| l |}] ) }
	mov rdi,r9
	cmp BYTE [rdi+6],1
	jnz LB_428
	mov r8, QWORD [r9+8]
	mov r10, QWORD [r9+16]
	mov QWORD [GBG_VCT+8*0],r9
	mov rdi,QWORD [GBG_VCT+8*0]
	mov rax,[SS_RCD_2_TOP]
	mov QWORD [rdi],rax 
	mov QWORD [SS_RCD_2_TOP],rdi
;; rsp=0 , %534~4'(= a17◂ [ a9◂ [ ]{| l |}] ) %533~2'(= a2◂ [ a8◂ [ a13◂ [ {| l |}]]] ) %531~1'(= {| l |} ) %496~0'(= r ) 
; #102 2'(= a2◂ [ a8◂ [ a13◂ [ {| l |}]]] ) ⊢ 2'(= {| l |} )
	sub rsp,24
	mov QWORD [rsp+8*0],r13
	mov QWORD [rsp+8*1],r14
	mov QWORD [rsp+8*2],r10
; .mov_ptn2 2'(= a2◂ [ a8◂ [ a13◂ [ {| l |}]]] ) ⊢ 0'(= a2◂ [ a8◂ [ a13◂ [ {| l |}]]] )
; .mov_ptn 2'(= a2◂ [ a8◂ [ a13◂ [ {| l |}]]] ) ⊢ 0'(= a2◂ [ a8◂ [ a13◂ [ {| l |}]]] )
	mov rax,r8
	mov r13,rax
	call ETR_102
	mov r10,QWORD [rsp-8+8*3]
	mov r14,QWORD [rsp-8+8*2]
	mov r8,r13
	mov r13,QWORD [rsp-8+8*1]
	add rsp,24
;; rsp=0 , %535~2'(= {| l |} ) %534~4'(= a17◂ [ a9◂ [ ]{| l |}] ) %531~1'(= {| l |} ) %496~0'(= r ) 
; #134 { 0'(= r ) 4'(= a17◂ [ a9◂ [ ]{| l |}] ) } ⊢ { 0'(= r ) 3'(= {| l |} ) }
	sub rsp,16
	mov QWORD [rsp+8*0],r14
	mov QWORD [rsp+8*1],r8
; .mov_ptn2 { 0'(= r ) 4'(= a17◂ [ a9◂ [ ]{| l |}] ) } ⊢ { 0'(= r ) 1'(= a17◂ [ a9◂ [ ]{| l |}] ) }
; .mov_ptn 4'(= a17◂ [ a9◂ [ ]{| l |}] ) ⊢ 1'(= a17◂ [ a9◂ [ ]{| l |}] )
	mov rax,r10
	mov r14,rax
	call ETR_134
	mov r8,QWORD [rsp-8+8*2]
	mov r9,r14
	mov r14,QWORD [rsp-8+8*1]
	add rsp,16
;; rsp=0 , %537~3'(= {| l |} ) %536~0'(= r ) %535~2'(= {| l |} ) %531~1'(= {| l |} ) 
; » _^ .. ⊢ ..
; .. //
	mov rdi,0
	mov rsi,r13
	imul rsi,1
	add rdi,rsi 
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[r14]
	add rdi,rax 
	push rax
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[r8]
	add rdi,rax 
	push rax
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[r9]
	add rdi,rax 
	push rax
	add rdi,8
	push rdi 
	call mlc_s8
	pop rdi
	mov r10,rax
	lea rdi,[rax+7+rdi]
	std 
	mov QWORD [tmp],rcx 
	pop rcx
	lea rsi,[r9+7+rcx]
	rep movsb
	lea rsi,[LB_429+1-1]
	mov rcx,1
	rep movsb
	pop rcx
	lea rsi,[r8+7+rcx]
	rep movsb
	lea rsi,[LB_430+5-1]
	mov rcx,5
	rep movsb
	pop rcx
	lea rsi,[r14+7+rcx]
	rep movsb
	lea rsi,[LB_431+2-1]
	mov rcx,2
	rep movsb
	mov rax,r13
LB_433:
	cmp rax,0
	jz LB_434
	sub rax,1
	lea rsi,[LB_432+1-1]
	mov rcx,1
	rep movsb 
	jmp LB_433
LB_434:
	mov rcx,QWORD [tmp] 
;; rsp=0 , %542~4'(= {| l |} ) %541~3'(= {| l |} ) %540~2'(= {| l |} ) %539~1'(= {| l |} ) %538~0'(= r ) 
; ∎ { 0'(= r ) 4'(= {| l |} ) }
; .dlt.ptn 3'(= {| l |} )
	mov rdi,r9
	C_PUSH_REGS
	mov r8,rdi
	mov rdi,r8
	call free_s8
	C_POP_REGS
; .dlt.ptn 2'(= {| l |} )
	mov rdi,r8
	C_PUSH_REGS
	mov r8,rdi
	mov rdi,r8
	call free_s8
	C_POP_REGS
; .dlt.ptn 1'(= {| l |} )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	mov rdi,r8
	call free_s8
	C_POP_REGS
; .mov_ptn2 { 0'(= r ) 4'(= {| l |} ) } ⊢ { 0'(= r ) 1'(= {| l |} ) }
; .mov_ptn 4'(= {| l |} ) ⊢ 1'(= {| l |} )
	mov rax,r10
	mov r14,rax
	ret
LB_428:
;; ?. 3'(= a18◂ [ a9◂ [ ]{| l |}] ) ⊢ 0(<2)◂2'(= a7◂ [ *{ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}] )
	mov QWORD [GBG_VCT+8*0],rdi
	mov r8,QWORD [rdi+8]
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_LN rdi
;; rsp=0 , %532~2'(= a7◂ [ *{ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}] ) %531~1'(= {| l |} ) %496~0'(= r ) 
; #137 { 0'(= r ) 2'(= a7◂ [ *{ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}] ) } ⊢ { 0'(= r ) 2'(= {| l |} ) }
	sub rsp,8
	mov QWORD [rsp+8*0],r14
; .mov_ptn2 { 0'(= r ) 2'(= a7◂ [ *{ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}] ) } ⊢ { 0'(= r ) 1'(= a7◂ [ *{ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}] ) }
; .mov_ptn 2'(= a7◂ [ *{ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}] ) ⊢ 1'(= a7◂ [ *{ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}] )
	mov rax,r8
	mov r14,rax
	call ETR_137
	mov r8,r14
	mov r14,QWORD [rsp-8+8*1]
	add rsp,8
;; rsp=0 , %544~2'(= {| l |} ) %543~0'(= r ) %531~1'(= {| l |} ) 
; » _^ .. ⊢ ..
; .. //
	mov rdi,0
	mov rsi,r13
	imul rsi,1
	add rdi,rsi 
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[r14]
	add rdi,rax 
	push rax
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[r8]
	add rdi,rax 
	push rax
	add rdi,7
	push rdi 
	call mlc_s8
	pop rdi
	mov r9,rax
	lea rdi,[rax+7+rdi]
	std 
	mov QWORD [tmp],rcx 
	pop rcx
	lea rsi,[r8+7+rcx]
	rep movsb
	lea rsi,[LB_435+5-1]
	mov rcx,5
	rep movsb
	pop rcx
	lea rsi,[r14+7+rcx]
	rep movsb
	lea rsi,[LB_436+2-1]
	mov rcx,2
	rep movsb
	mov rax,r13
LB_438:
	cmp rax,0
	jz LB_439
	sub rax,1
	lea rsi,[LB_437+1-1]
	mov rcx,1
	rep movsb 
	jmp LB_438
LB_439:
	mov rcx,QWORD [tmp] 
;; rsp=0 , %548~3'(= {| l |} ) %547~2'(= {| l |} ) %546~1'(= {| l |} ) %545~0'(= r ) 
; ∎ { 0'(= r ) 3'(= {| l |} ) }
; .dlt.ptn 2'(= {| l |} )
	mov rdi,r8
	C_PUSH_REGS
	mov r8,rdi
	mov rdi,r8
	call free_s8
	C_POP_REGS
; .dlt.ptn 1'(= {| l |} )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	mov rdi,r8
	call free_s8
	C_POP_REGS
; .mov_ptn2 { 0'(= r ) 3'(= {| l |} ) } ⊢ { 0'(= r ) 1'(= {| l |} ) }
; .mov_ptn 3'(= {| l |} ) ⊢ 1'(= {| l |} )
	mov rax,r9
	mov r14,rax
	ret
LB_427:
;; ? 1'(= a17◂ [ a9◂ [ ]{| l |}] ) ⊢ 5(<7)◂2'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] )
	mov rdi,r14
	cmp BYTE [rdi+6],5
	jnz LB_440
	mov QWORD [GBG_VCT+8*0],rdi
	mov r8,QWORD [rdi+8]
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_LN rdi
;; rsp=0 , %499~2'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) %496~0'(= r ) 
; » _^ .. ⊢ ..
; .. //
	mov rdi,0
	mov rsi,r13
	imul rsi,1
	add rdi,rsi 
	add rdi,7
	push rdi 
	call mlc_s8
	pop rdi
	mov r14,rax
	lea rdi,[rax+7+rdi]
	std 
	mov QWORD [tmp],rcx 
	lea rsi,[LB_441+7-1]
	mov rcx,7
	rep movsb
	mov rax,r13
LB_443:
	cmp rax,0
	jz LB_444
	sub rax,1
	lea rsi,[LB_442+1-1]
	mov rcx,1
	rep movsb 
	jmp LB_443
LB_444:
	mov rcx,QWORD [tmp] 
;; rsp=0 , %550~1'(= {| l |} ) %549~0'(= r ) %499~2'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) 
; ∎ { 0'(= r ) 1'(= {| l |} ) }
; .dlt.ptn 2'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] )
	mov rdi,r8
	C_PUSH_REGS
	mov r8,rdi
	call LB_445
	C_POP_REGS
; .mov_ptn2 { 0'(= r ) 1'(= {| l |} ) } ⊢ { 0'(= r ) 1'(= {| l |} ) }
	ret
LB_440:
;; ?. 1'(= a17◂ [ a9◂ [ ]{| l |}] ) ⊢ 6(<7)◂2'(= r )
	mov QWORD [GBG_VCT+8*0],rdi
	mov r8,QWORD [rdi+8]
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_LN rdi
;; rsp=0 , %498~2'(= r ) %496~0'(= r ) 
; » _^ .. ⊢ ..
; .. //
	mov rdi,0
	mov rsi,r13
	imul rsi,1
	add rdi,rsi 
	add rdi,5
	push rdi 
	call mlc_s8
	pop rdi
	mov r14,rax
	lea rdi,[rax+7+rdi]
	std 
	mov QWORD [tmp],rcx 
	lea rsi,[LB_460+5-1]
	mov rcx,5
	rep movsb
	mov rax,r13
LB_462:
	cmp rax,0
	jz LB_463
	sub rax,1
	lea rsi,[LB_461+1-1]
	mov rcx,1
	rep movsb 
	jmp LB_462
LB_463:
	mov rcx,QWORD [tmp] 
;; rsp=0 , %552~1'(= {| l |} ) %551~0'(= r ) %498~2'(= r ) 
; ∎ { 0'(= r ) 1'(= {| l |} ) }
; .dlt.ptn 2'(= r )
	mov rdi,r8
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 { 0'(= r ) 1'(= {| l |} ) } ⊢ { 0'(= r ) 1'(= {| l |} ) }
	ret
ETR_135: ;; pnt_lc_line { 0'(= r ) 1'(= a19◂ [ a9◂ [ ]{| l |}] ) } ⊢ { 0'(= r ) 1'(= {| l |} ) } : ({ _r64 _t19◂_s8◂_t9 }→{ _r64 _s8 })
;; rsp=0 , %554~1'(= a19◂ [ a9◂ [ ]{| l |}] ) %553~0'(= r ) 
;; ?; 1'(= a19◂ [ a9◂ [ ]{| l |}] ) ⊢ 0(<4)◂{ 2'(= a9◂ [ ] ) 3'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) 4'(= a8◂ [ a13◂ [ {| l |}]] ) }
	mov rdi,r14
	cmp BYTE [rdi+6],0
	jnz LB_464
	mov r8, QWORD [r14+8]
	mov r9, QWORD [r14+16]
	mov r10, QWORD [r14+24]
	mov QWORD [GBG_VCT+8*0],r14
	mov rdi,QWORD [GBG_VCT+8*0]
	mov rax,[SS_RCD_3_TOP]
	mov QWORD [rdi],rax 
	mov QWORD [SS_RCD_3_TOP],rdi
;; rsp=0 , %557~4'(= a8◂ [ a13◂ [ {| l |}]] ) %556~3'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) %555~2'(= a9◂ [ ] ) %553~0'(= r ) 
; #99 3'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) ⊢ 1'(= {| l |} )
	sub rsp,24
	mov QWORD [rsp+8*0],r13
	mov QWORD [rsp+8*1],r8
	mov QWORD [rsp+8*2],r10
; .mov_ptn2 3'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) ⊢ 0'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] )
; .mov_ptn 3'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) ⊢ 0'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] )
	mov rax,r9
	mov r13,rax
	call ETR_99
	mov r10,QWORD [rsp-8+8*3]
	mov r8,QWORD [rsp-8+8*2]
	mov r14,r13
	mov r13,QWORD [rsp-8+8*1]
	add rsp,24
;; rsp=0 , %558~1'(= {| l |} ) %557~4'(= a8◂ [ a13◂ [ {| l |}]] ) %555~2'(= a9◂ [ ] ) %553~0'(= r ) 
; #101 4'(= a8◂ [ a13◂ [ {| l |}]] ) ⊢ 3'(= {| l |} )
	sub rsp,24
	mov QWORD [rsp+8*0],r13
	mov QWORD [rsp+8*1],r14
	mov QWORD [rsp+8*2],r8
; .mov_ptn2 4'(= a8◂ [ a13◂ [ {| l |}]] ) ⊢ 0'(= a8◂ [ a13◂ [ {| l |}]] )
; .mov_ptn 4'(= a8◂ [ a13◂ [ {| l |}]] ) ⊢ 0'(= a8◂ [ a13◂ [ {| l |}]] )
	mov rax,r10
	mov r13,rax
	call ETR_101
	mov r8,QWORD [rsp-8+8*3]
	mov r14,QWORD [rsp-8+8*2]
	mov r9,r13
	mov r13,QWORD [rsp-8+8*1]
	add rsp,24
;; rsp=0 , %559~3'(= {| l |} ) %558~1'(= {| l |} ) %555~2'(= a9◂ [ ] ) %553~0'(= r ) 
; #84 2'(= a9◂ [ ] ) ⊢ 2'(= {| l |} )
	sub rsp,24
	mov QWORD [rsp+8*0],r13
	mov QWORD [rsp+8*1],r14
	mov QWORD [rsp+8*2],r9
; .mov_ptn2 2'(= a9◂ [ ] ) ⊢ 0'(= a9◂ [ ] )
; .mov_ptn 2'(= a9◂ [ ] ) ⊢ 0'(= a9◂ [ ] )
	mov rax,r8
	mov r13,rax
	call ETR_84
	mov r9,QWORD [rsp-8+8*3]
	mov r14,QWORD [rsp-8+8*2]
	mov r8,r13
	mov r13,QWORD [rsp-8+8*1]
	add rsp,24
;; rsp=0 , %560~2'(= {| l |} ) %559~3'(= {| l |} ) %558~1'(= {| l |} ) %553~0'(= r ) 
; » _^ .. ⊢ ..
; .. //
	mov rdi,0
	mov rsi,r13
	imul rsi,1
	add rdi,rsi 
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[r8]
	add rdi,rax 
	push rax
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[r14]
	add rdi,rax 
	push rax
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[r9]
	add rdi,rax 
	push rax
	add rdi,7
	push rdi 
	call mlc_s8
	pop rdi
	mov r10,rax
	lea rdi,[rax+7+rdi]
	std 
	mov QWORD [tmp],rcx 
	lea rsi,[LB_465+1-1]
	mov rcx,1
	rep movsb
	pop rcx
	lea rsi,[r9+7+rcx]
	rep movsb
	lea rsi,[LB_466+5-1]
	mov rcx,5
	rep movsb
	pop rcx
	lea rsi,[r14+7+rcx]
	rep movsb
	lea rsi,[LB_467+1-1]
	mov rcx,1
	rep movsb
	pop rcx
	lea rsi,[r8+7+rcx]
	rep movsb
	mov rax,r13
LB_469:
	cmp rax,0
	jz LB_470
	sub rax,1
	lea rsi,[LB_468+1-1]
	mov rcx,1
	rep movsb 
	jmp LB_469
LB_470:
	mov rcx,QWORD [tmp] 
;; rsp=0 , %565~4'(= {| l |} ) %564~3'(= {| l |} ) %563~1'(= {| l |} ) %562~2'(= {| l |} ) %561~0'(= r ) 
; ∎ { 0'(= r ) 4'(= {| l |} ) }
; .dlt.ptn 3'(= {| l |} )
	mov rdi,r9
	C_PUSH_REGS
	mov r8,rdi
	mov rdi,r8
	call free_s8
	C_POP_REGS
; .dlt.ptn 1'(= {| l |} )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	mov rdi,r8
	call free_s8
	C_POP_REGS
; .dlt.ptn 2'(= {| l |} )
	mov rdi,r8
	C_PUSH_REGS
	mov r8,rdi
	mov rdi,r8
	call free_s8
	C_POP_REGS
; .mov_ptn2 { 0'(= r ) 4'(= {| l |} ) } ⊢ { 0'(= r ) 1'(= {| l |} ) }
; .mov_ptn 4'(= {| l |} ) ⊢ 1'(= {| l |} )
	mov rax,r10
	mov r14,rax
	ret
LB_464:
;; ?; 1'(= a19◂ [ a9◂ [ ]{| l |}] ) ⊢ 1(<4)◂{ 2'(= a12◂ [ a9◂ [ ]{| l |}] ) 3'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) 4'(= a8◂ [ a13◂ [ {| l |}]] ) }
	mov rdi,r14
	cmp BYTE [rdi+6],1
	jnz LB_471
	mov r8, QWORD [r14+8]
	mov r9, QWORD [r14+16]
	mov r10, QWORD [r14+24]
	mov QWORD [GBG_VCT+8*0],r14
	mov rdi,QWORD [GBG_VCT+8*0]
	mov rax,[SS_RCD_3_TOP]
	mov QWORD [rdi],rax 
	mov QWORD [SS_RCD_3_TOP],rdi
;; rsp=0 , %568~4'(= a8◂ [ a13◂ [ {| l |}]] ) %567~3'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) %566~2'(= a12◂ [ a9◂ [ ]{| l |}] ) %553~0'(= r ) 
; #80 2'(= a12◂ [ a9◂ [ ]{| l |}] ) ⊢ 1(<2)◂2'(= a12◂ [ a9◂ [ ]{| l |}] )
;; rsp=0 , %569~1(<2)◂2'(= a12◂ [ a9◂ [ ]{| l |}] ) %568~4'(= a8◂ [ a13◂ [ {| l |}]] ) %567~3'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) %553~0'(= r ) 
; #99 1(<2)◂2'(= a12◂ [ a9◂ [ ]{| l |}] ) ⊢ 1'(= {| l |} )
	sub rsp,24
	mov QWORD [rsp+8*0],r13
	mov QWORD [rsp+8*1],r9
	mov QWORD [rsp+8*2],r10
; .mov_ptn2 1(<2)◂2'(= a12◂ [ a9◂ [ ]{| l |}] ) ⊢ 0'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] )
; .mov_ptn 1(<2)◂2'(= a12◂ [ a9◂ [ ]{| l |}] ) ⊢ 0'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] )
	mov rax,r8
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],1
	mov QWORD [rax+8],rdi
	mov r13,rax
	call ETR_99
	mov r10,QWORD [rsp-8+8*3]
	mov r9,QWORD [rsp-8+8*2]
	mov r14,r13
	mov r13,QWORD [rsp-8+8*1]
	add rsp,24
;; rsp=0 , %570~1'(= {| l |} ) %568~4'(= a8◂ [ a13◂ [ {| l |}]] ) %567~3'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) %553~0'(= r ) 
; #99 3'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) ⊢ 2'(= {| l |} )
	sub rsp,24
	mov QWORD [rsp+8*0],r13
	mov QWORD [rsp+8*1],r14
	mov QWORD [rsp+8*2],r10
; .mov_ptn2 3'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) ⊢ 0'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] )
; .mov_ptn 3'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) ⊢ 0'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] )
	mov rax,r9
	mov r13,rax
	call ETR_99
	mov r10,QWORD [rsp-8+8*3]
	mov r14,QWORD [rsp-8+8*2]
	mov r8,r13
	mov r13,QWORD [rsp-8+8*1]
	add rsp,24
;; rsp=0 , %571~2'(= {| l |} ) %570~1'(= {| l |} ) %568~4'(= a8◂ [ a13◂ [ {| l |}]] ) %553~0'(= r ) 
; #101 4'(= a8◂ [ a13◂ [ {| l |}]] ) ⊢ 3'(= {| l |} )
	sub rsp,24
	mov QWORD [rsp+8*0],r13
	mov QWORD [rsp+8*1],r14
	mov QWORD [rsp+8*2],r8
; .mov_ptn2 4'(= a8◂ [ a13◂ [ {| l |}]] ) ⊢ 0'(= a8◂ [ a13◂ [ {| l |}]] )
; .mov_ptn 4'(= a8◂ [ a13◂ [ {| l |}]] ) ⊢ 0'(= a8◂ [ a13◂ [ {| l |}]] )
	mov rax,r10
	mov r13,rax
	call ETR_101
	mov r8,QWORD [rsp-8+8*3]
	mov r14,QWORD [rsp-8+8*2]
	mov r9,r13
	mov r13,QWORD [rsp-8+8*1]
	add rsp,24
;; rsp=0 , %572~3'(= {| l |} ) %571~2'(= {| l |} ) %570~1'(= {| l |} ) %553~0'(= r ) 
; » _^ .. ⊢ ..
; .. //
	mov rdi,0
	mov rsi,r13
	imul rsi,1
	add rdi,rsi 
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[r14]
	add rdi,rax 
	push rax
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[r8]
	add rdi,rax 
	push rax
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[r9]
	add rdi,rax 
	push rax
	add rdi,11
	push rdi 
	call mlc_s8
	pop rdi
	mov r10,rax
	lea rdi,[rax+7+rdi]
	std 
	mov QWORD [tmp],rcx 
	lea rsi,[LB_472+1-1]
	mov rcx,1
	rep movsb
	pop rcx
	lea rsi,[r9+7+rcx]
	rep movsb
	lea rsi,[LB_473+5-1]
	mov rcx,5
	rep movsb
	pop rcx
	lea rsi,[r8+7+rcx]
	rep movsb
	lea rsi,[LB_474+1-1]
	mov rcx,1
	rep movsb
	pop rcx
	lea rsi,[r14+7+rcx]
	rep movsb
	lea rsi,[LB_475+4-1]
	mov rcx,4
	rep movsb
	mov rax,r13
LB_477:
	cmp rax,0
	jz LB_478
	sub rax,1
	lea rsi,[LB_476+1-1]
	mov rcx,1
	rep movsb 
	jmp LB_477
LB_478:
	mov rcx,QWORD [tmp] 
;; rsp=0 , %577~4'(= {| l |} ) %576~3'(= {| l |} ) %575~2'(= {| l |} ) %574~1'(= {| l |} ) %573~0'(= r ) 
; ∎ { 0'(= r ) 4'(= {| l |} ) }
; .dlt.ptn 3'(= {| l |} )
	mov rdi,r9
	C_PUSH_REGS
	mov r8,rdi
	mov rdi,r8
	call free_s8
	C_POP_REGS
; .dlt.ptn 2'(= {| l |} )
	mov rdi,r8
	C_PUSH_REGS
	mov r8,rdi
	mov rdi,r8
	call free_s8
	C_POP_REGS
; .dlt.ptn 1'(= {| l |} )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	mov rdi,r8
	call free_s8
	C_POP_REGS
; .mov_ptn2 { 0'(= r ) 4'(= {| l |} ) } ⊢ { 0'(= r ) 1'(= {| l |} ) }
; .mov_ptn 4'(= {| l |} ) ⊢ 1'(= {| l |} )
	mov rax,r10
	mov r14,rax
	ret
LB_471:
;; ?; 1'(= a19◂ [ a9◂ [ ]{| l |}] ) ⊢ 2(<4)◂{ 2'(= a11◂ [ a9◂ [ ]] ) 3'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) 4'(= a8◂ [ a13◂ [ {| l |}]] ) }
	mov rdi,r14
	cmp BYTE [rdi+6],2
	jnz LB_479
	mov r8, QWORD [r14+8]
	mov r9, QWORD [r14+16]
	mov r10, QWORD [r14+24]
	mov QWORD [GBG_VCT+8*0],r14
	mov rdi,QWORD [GBG_VCT+8*0]
	mov rax,[SS_RCD_3_TOP]
	mov QWORD [rdi],rax 
	mov QWORD [SS_RCD_3_TOP],rdi
;; rsp=0 , %580~4'(= a8◂ [ a13◂ [ {| l |}]] ) %579~3'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) %578~2'(= a11◂ [ a9◂ [ ]] ) %553~0'(= r ) 
; #99 3'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) ⊢ 1'(= {| l |} )
	sub rsp,24
	mov QWORD [rsp+8*0],r13
	mov QWORD [rsp+8*1],r8
	mov QWORD [rsp+8*2],r10
; .mov_ptn2 3'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) ⊢ 0'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] )
; .mov_ptn 3'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) ⊢ 0'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] )
	mov rax,r9
	mov r13,rax
	call ETR_99
	mov r10,QWORD [rsp-8+8*3]
	mov r8,QWORD [rsp-8+8*2]
	mov r14,r13
	mov r13,QWORD [rsp-8+8*1]
	add rsp,24
;; rsp=0 , %581~1'(= {| l |} ) %580~4'(= a8◂ [ a13◂ [ {| l |}]] ) %578~2'(= a11◂ [ a9◂ [ ]] ) %553~0'(= r ) 
; #101 4'(= a8◂ [ a13◂ [ {| l |}]] ) ⊢ 3'(= {| l |} )
	sub rsp,24
	mov QWORD [rsp+8*0],r13
	mov QWORD [rsp+8*1],r14
	mov QWORD [rsp+8*2],r8
; .mov_ptn2 4'(= a8◂ [ a13◂ [ {| l |}]] ) ⊢ 0'(= a8◂ [ a13◂ [ {| l |}]] )
; .mov_ptn 4'(= a8◂ [ a13◂ [ {| l |}]] ) ⊢ 0'(= a8◂ [ a13◂ [ {| l |}]] )
	mov rax,r10
	mov r13,rax
	call ETR_101
	mov r8,QWORD [rsp-8+8*3]
	mov r14,QWORD [rsp-8+8*2]
	mov r9,r13
	mov r13,QWORD [rsp-8+8*1]
	add rsp,24
;; rsp=0 , %582~3'(= {| l |} ) %581~1'(= {| l |} ) %578~2'(= a11◂ [ a9◂ [ ]] ) %553~0'(= r ) 
; #90 2'(= a11◂ [ a9◂ [ ]] ) ⊢ 2'(= {| l |} )
	sub rsp,24
	mov QWORD [rsp+8*0],r13
	mov QWORD [rsp+8*1],r14
	mov QWORD [rsp+8*2],r9
; .mov_ptn2 2'(= a11◂ [ a9◂ [ ]] ) ⊢ 0'(= a11◂ [ a9◂ [ ]] )
; .mov_ptn 2'(= a11◂ [ a9◂ [ ]] ) ⊢ 0'(= a11◂ [ a9◂ [ ]] )
	mov rax,r8
	mov r13,rax
	call ETR_90
	mov r9,QWORD [rsp-8+8*3]
	mov r14,QWORD [rsp-8+8*2]
	mov r8,r13
	mov r13,QWORD [rsp-8+8*1]
	add rsp,24
;; rsp=0 , %583~2'(= {| l |} ) %582~3'(= {| l |} ) %581~1'(= {| l |} ) %553~0'(= r ) 
; » _^ .. ⊢ ..
; .. //
	mov rdi,0
	mov rsi,r13
	imul rsi,1
	add rdi,rsi 
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[r8]
	add rdi,rax 
	push rax
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[r14]
	add rdi,rax 
	push rax
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[r9]
	add rdi,rax 
	push rax
	add rdi,10
	push rdi 
	call mlc_s8
	pop rdi
	mov r10,rax
	lea rdi,[rax+7+rdi]
	std 
	mov QWORD [tmp],rcx 
	lea rsi,[LB_480+1-1]
	mov rcx,1
	rep movsb
	pop rcx
	lea rsi,[r9+7+rcx]
	rep movsb
	lea rsi,[LB_481+5-1]
	mov rcx,5
	rep movsb
	pop rcx
	lea rsi,[r14+7+rcx]
	rep movsb
	lea rsi,[LB_482+1-1]
	mov rcx,1
	rep movsb
	pop rcx
	lea rsi,[r8+7+rcx]
	rep movsb
	lea rsi,[LB_483+3-1]
	mov rcx,3
	rep movsb
	mov rax,r13
LB_485:
	cmp rax,0
	jz LB_486
	sub rax,1
	lea rsi,[LB_484+1-1]
	mov rcx,1
	rep movsb 
	jmp LB_485
LB_486:
	mov rcx,QWORD [tmp] 
;; rsp=0 , %588~4'(= {| l |} ) %587~3'(= {| l |} ) %586~1'(= {| l |} ) %585~2'(= {| l |} ) %584~0'(= r ) 
; ∎ { 0'(= r ) 4'(= {| l |} ) }
; .dlt.ptn 3'(= {| l |} )
	mov rdi,r9
	C_PUSH_REGS
	mov r8,rdi
	mov rdi,r8
	call free_s8
	C_POP_REGS
; .dlt.ptn 1'(= {| l |} )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	mov rdi,r8
	call free_s8
	C_POP_REGS
; .dlt.ptn 2'(= {| l |} )
	mov rdi,r8
	C_PUSH_REGS
	mov r8,rdi
	mov rdi,r8
	call free_s8
	C_POP_REGS
; .mov_ptn2 { 0'(= r ) 4'(= {| l |} ) } ⊢ { 0'(= r ) 1'(= {| l |} ) }
; .mov_ptn 4'(= {| l |} ) ⊢ 1'(= {| l |} )
	mov rax,r10
	mov r14,rax
	ret
LB_479:
;; ?; 1'(= a19◂ [ a9◂ [ ]{| l |}] ) ⊢ 3(<4)◂{ 2'(= a2◂ [ a16◂ [ a9◂ [ ]]] ) 3'(= a2◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) 4'(= a2◂ [ a13◂ [ {| l |}]] ) }
	mov r8, QWORD [r14+8]
	mov r9, QWORD [r14+16]
	mov r10, QWORD [r14+24]
	mov QWORD [GBG_VCT+8*0],r14
	mov rdi,QWORD [GBG_VCT+8*0]
	mov rax,[SS_RCD_3_TOP]
	mov QWORD [rdi],rax 
	mov QWORD [SS_RCD_3_TOP],rdi
;; rsp=0 , %591~4'(= a2◂ [ a13◂ [ {| l |}]] ) %590~3'(= a2◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) %589~2'(= a2◂ [ a16◂ [ a9◂ [ ]]] ) %553~0'(= r ) 
; » _^ .. ⊢ ..
; .. //
	mov rdi,0
	mov rsi,r13
	imul rsi,1
	add rdi,rsi 
	add rdi,23
	push rdi 
	call mlc_s8
	pop rdi
	mov r14,rax
	lea rdi,[rax+7+rdi]
	std 
	mov QWORD [tmp],rcx 
	lea rsi,[LB_487+23-1]
	mov rcx,23
	rep movsb
	mov rax,r13
LB_489:
	cmp rax,0
	jz LB_490
	sub rax,1
	lea rsi,[LB_488+1-1]
	mov rcx,1
	rep movsb 
	jmp LB_489
LB_490:
	mov rcx,QWORD [tmp] 
;; rsp=0 , %593~1'(= {| l |} ) %592~0'(= r ) %591~4'(= a2◂ [ a13◂ [ {| l |}]] ) %590~3'(= a2◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) %589~2'(= a2◂ [ a16◂ [ a9◂ [ ]]] ) 
; ∎ { 0'(= r ) 1'(= {| l |} ) }
; .dlt.ptn 4'(= a2◂ [ a13◂ [ {| l |}]] )
	mov rdi,r10
	C_PUSH_REGS
	mov r8,rdi
	call LB_491
	C_POP_REGS
; .dlt.ptn 3'(= a2◂ [ a12◂ [ a9◂ [ ]{| l |}]] )
	mov rdi,r9
	C_PUSH_REGS
	mov r8,rdi
	call LB_492
	C_POP_REGS
; .dlt.ptn 2'(= a2◂ [ a16◂ [ a9◂ [ ]]] )
	mov rdi,r8
	C_PUSH_REGS
	mov r8,rdi
	call LB_493
	C_POP_REGS
; .mov_ptn2 { 0'(= r ) 1'(= {| l |} ) } ⊢ { 0'(= r ) 1'(= {| l |} ) }
	ret
ETR_136: ;; pnt_lc_mtc { 0'(= r ) 1'(= a7◂ [ *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}] ) } ⊢ { 0'(= r ) 1'(= {| l |} ) } : ({ _r64 _t7◂{ _lst◂_t21◂_s8◂_t9 _t20◂_s8◂_t9 } }→{ _r64 _s8 })
;; rsp=0 , %595~1'(= a7◂ [ *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}] ) %594~0'(= r ) 
;; ?; 1'(= a7◂ [ *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}] ) ⊢ 0(<2)◂{ { 3'(= a2◂ [ a21◂ [ a9◂ [ ]{| l |}]] ) 4'(= a20◂ [ a9◂ [ ]{| l |}] ) } 5'(= a7◂ [ *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}] ) }
	mov rdi,r14
	cmp BYTE [rdi+6],0
	jnz LB_525
	mov r8, QWORD [r14+8]
	mov r9, QWORD [r8+8]
	mov r10, QWORD [r8+16]
	mov QWORD [GBG_VCT+8*0],r8
	mov r11, QWORD [r14+16]
	mov QWORD [GBG_VCT+8*1],r14
	mov rdi,QWORD [GBG_VCT+8*1]
	mov rax,[SS_RCD_2_TOP]
	mov QWORD [rdi],rax 
	mov QWORD [SS_RCD_2_TOP],rdi
	mov rdi,QWORD [GBG_VCT+8*0]
	mov rax,[SS_RCD_2_TOP]
	mov QWORD [rdi],rax 
	mov QWORD [SS_RCD_2_TOP],rdi
;; rsp=0 , %598~5'(= a7◂ [ *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}] ) %597~4'(= a20◂ [ a9◂ [ ]{| l |}] ) %596~3'(= a2◂ [ a21◂ [ a9◂ [ ]{| l |}]] ) %594~0'(= r ) 
; #136 { 0'(= r ) 5'(= a7◂ [ *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}] ) } ⊢ { 0'(= r ) 1'(= {| l |} ) }
	sub rsp,16
	mov QWORD [rsp+8*0],r9
	mov QWORD [rsp+8*1],r10
; .mov_ptn2 { 0'(= r ) 5'(= a7◂ [ *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}] ) } ⊢ { 0'(= r ) 1'(= a7◂ [ *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}] ) }
; .mov_ptn 5'(= a7◂ [ *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}] ) ⊢ 1'(= a7◂ [ *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}] )
	mov rax,r11
	mov r14,rax
	call ETR_136
	mov r10,QWORD [rsp-8+8*2]
	mov r9,QWORD [rsp-8+8*1]
	add rsp,16
;; rsp=0 , %600~1'(= {| l |} ) %599~0'(= r ) %597~4'(= a20◂ [ a9◂ [ ]{| l |}] ) %596~3'(= a2◂ [ a21◂ [ a9◂ [ ]{| l |}]] ) 
;; ? 4'(= a20◂ [ a9◂ [ ]{| l |}] ) ⊢ 0(<3)◂2'(= a7◂ [ *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}] )
	mov rdi,r10
	cmp BYTE [rdi+6],0
	jnz LB_526
	mov QWORD [GBG_VCT+8*0],rdi
	mov r8,QWORD [rdi+8]
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_LN rdi
;; rsp=0 , %604~2'(= a7◂ [ *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}] ) %600~1'(= {| l |} ) %599~0'(= r ) %596~3'(= a2◂ [ a21◂ [ a9◂ [ ]{| l |}]] ) 
; #136 { 0'(= r ) 2'(= a7◂ [ *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}] ) } ⊢ { 0'(= r ) 2'(= {| l |} ) }
	sub rsp,16
	mov QWORD [rsp+8*0],r14
	mov QWORD [rsp+8*1],r9
; .mov_ptn2 { 0'(= r ) 2'(= a7◂ [ *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}] ) } ⊢ { 0'(= r ) 1'(= a7◂ [ *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}] ) }
; .mov_ptn 2'(= a7◂ [ *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}] ) ⊢ 1'(= a7◂ [ *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}] )
	mov rax,r8
	mov r14,rax
	call ETR_136
	mov r9,QWORD [rsp-8+8*2]
	mov r8,r14
	mov r14,QWORD [rsp-8+8*1]
	add rsp,16
;; rsp=0 , %606~2'(= {| l |} ) %605~0'(= r ) %600~1'(= {| l |} ) %596~3'(= a2◂ [ a21◂ [ a9◂ [ ]{| l |}]] ) 
; » _^ .. ⊢ ..
; .. //
	mov rdi,0
	mov rsi,r13
	imul rsi,1
	add rdi,rsi 
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[r8]
	add rdi,rax 
	push rax
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[r14]
	add rdi,rax 
	push rax
	add rdi,9
	push rdi 
	call mlc_s8
	pop rdi
	mov r10,rax
	lea rdi,[rax+7+rdi]
	std 
	mov QWORD [tmp],rcx 
	pop rcx
	lea rsi,[r14+7+rcx]
	rep movsb
	pop rcx
	lea rsi,[r8+7+rcx]
	rep movsb
	lea rsi,[LB_527+9-1]
	mov rcx,9
	rep movsb
	mov rax,r13
LB_529:
	cmp rax,0
	jz LB_530
	sub rax,1
	lea rsi,[LB_528+1-1]
	mov rcx,1
	rep movsb 
	jmp LB_529
LB_530:
	mov rcx,QWORD [tmp] 
;; rsp=0 , %610~4'(= {| l |} ) %609~2'(= {| l |} ) %608~1'(= {| l |} ) %607~0'(= r ) %596~3'(= a2◂ [ a21◂ [ a9◂ [ ]{| l |}]] ) 
; ∎ { 0'(= r ) 4'(= {| l |} ) }
; .dlt.ptn 2'(= {| l |} )
	mov rdi,r8
	C_PUSH_REGS
	mov r8,rdi
	mov rdi,r8
	call free_s8
	C_POP_REGS
; .dlt.ptn 1'(= {| l |} )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	mov rdi,r8
	call free_s8
	C_POP_REGS
; .dlt.ptn 3'(= a2◂ [ a21◂ [ a9◂ [ ]{| l |}]] )
	mov rdi,r9
	C_PUSH_REGS
	mov r8,rdi
	call LB_531
	C_POP_REGS
; .mov_ptn2 { 0'(= r ) 4'(= {| l |} ) } ⊢ { 0'(= r ) 1'(= {| l |} ) }
; .mov_ptn 4'(= {| l |} ) ⊢ 1'(= {| l |} )
	mov rax,r10
	mov r14,rax
	ret
LB_526:
;; ? 4'(= a20◂ [ a9◂ [ ]{| l |}] ) ⊢ 1(<3)◂{ 2'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) 5'(= a7◂ [ *{ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}] ) }
	mov rdi,r10
	cmp BYTE [rdi+6],1
	jnz LB_547
	mov r8, QWORD [r10+8]
	mov r11, QWORD [r10+16]
	mov QWORD [GBG_VCT+8*0],r10
	mov rdi,QWORD [GBG_VCT+8*0]
	mov rax,[SS_RCD_2_TOP]
	mov QWORD [rdi],rax 
	mov QWORD [SS_RCD_2_TOP],rdi
;; rsp=0 , %603~5'(= a7◂ [ *{ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}] ) %602~2'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) %600~1'(= {| l |} ) %599~0'(= r ) %596~3'(= a2◂ [ a21◂ [ a9◂ [ ]{| l |}]] ) 
; #99 2'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) ⊢ 2'(= {| l |} )
	sub rsp,32
	mov QWORD [rsp+8*0],r13
	mov QWORD [rsp+8*1],r14
	mov QWORD [rsp+8*2],r9
	mov QWORD [rsp+8*3],r11
; .mov_ptn2 2'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) ⊢ 0'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] )
; .mov_ptn 2'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) ⊢ 0'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] )
	mov rax,r8
	mov r13,rax
	call ETR_99
	mov r11,QWORD [rsp-8+8*4]
	mov r9,QWORD [rsp-8+8*3]
	mov r14,QWORD [rsp-8+8*2]
	mov r8,r13
	mov r13,QWORD [rsp-8+8*1]
	add rsp,32
;; rsp=0 , %611~2'(= {| l |} ) %603~5'(= a7◂ [ *{ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}] ) %600~1'(= {| l |} ) %599~0'(= r ) %596~3'(= a2◂ [ a21◂ [ a9◂ [ ]{| l |}]] ) 
; #137 { 0'(= r ) 5'(= a7◂ [ *{ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}] ) } ⊢ { 0'(= r ) 4'(= {| l |} ) }
	sub rsp,24
	mov QWORD [rsp+8*0],r14
	mov QWORD [rsp+8*1],r8
	mov QWORD [rsp+8*2],r9
; .mov_ptn2 { 0'(= r ) 5'(= a7◂ [ *{ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}] ) } ⊢ { 0'(= r ) 1'(= a7◂ [ *{ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}] ) }
; .mov_ptn 5'(= a7◂ [ *{ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}] ) ⊢ 1'(= a7◂ [ *{ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}] )
	mov rax,r11
	mov r14,rax
	call ETR_137
	mov r9,QWORD [rsp-8+8*3]
	mov r8,QWORD [rsp-8+8*2]
	mov r10,r14
	mov r14,QWORD [rsp-8+8*1]
	add rsp,24
;; rsp=0 , %613~4'(= {| l |} ) %612~0'(= r ) %611~2'(= {| l |} ) %600~1'(= {| l |} ) %596~3'(= a2◂ [ a21◂ [ a9◂ [ ]{| l |}]] ) 
; » _^ .. ⊢ ..
; .. //
	mov rdi,0
	mov rsi,r13
	imul rsi,1
	add rdi,rsi 
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[r8]
	add rdi,rax 
	push rax
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[r10]
	add rdi,rax 
	push rax
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[r14]
	add rdi,rax 
	push rax
	add rdi,14
	push rdi 
	call mlc_s8
	pop rdi
	mov r11,rax
	lea rdi,[rax+7+rdi]
	std 
	mov QWORD [tmp],rcx 
	pop rcx
	lea rsi,[r14+7+rcx]
	rep movsb
	pop rcx
	lea rsi,[r10+7+rcx]
	rep movsb
	lea rsi,[LB_548+5-1]
	mov rcx,5
	rep movsb
	pop rcx
	lea rsi,[r8+7+rcx]
	rep movsb
	lea rsi,[LB_549+9-1]
	mov rcx,9
	rep movsb
	mov rax,r13
LB_551:
	cmp rax,0
	jz LB_552
	sub rax,1
	lea rsi,[LB_550+1-1]
	mov rcx,1
	rep movsb 
	jmp LB_551
LB_552:
	mov rcx,QWORD [tmp] 
;; rsp=0 , %618~5'(= {| l |} ) %617~4'(= {| l |} ) %616~1'(= {| l |} ) %615~2'(= {| l |} ) %614~0'(= r ) %596~3'(= a2◂ [ a21◂ [ a9◂ [ ]{| l |}]] ) 
; ∎ { 0'(= r ) 5'(= {| l |} ) }
; .dlt.ptn 4'(= {| l |} )
	mov rdi,r10
	C_PUSH_REGS
	mov r8,rdi
	mov rdi,r8
	call free_s8
	C_POP_REGS
; .dlt.ptn 1'(= {| l |} )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	mov rdi,r8
	call free_s8
	C_POP_REGS
; .dlt.ptn 2'(= {| l |} )
	mov rdi,r8
	C_PUSH_REGS
	mov r8,rdi
	mov rdi,r8
	call free_s8
	C_POP_REGS
; .dlt.ptn 3'(= a2◂ [ a21◂ [ a9◂ [ ]{| l |}]] )
	mov rdi,r9
	C_PUSH_REGS
	mov r8,rdi
	call LB_531
	C_POP_REGS
; .mov_ptn2 { 0'(= r ) 5'(= {| l |} ) } ⊢ { 0'(= r ) 1'(= {| l |} ) }
; .mov_ptn 5'(= {| l |} ) ⊢ 1'(= {| l |} )
	mov rax,r11
	mov r14,rax
	ret
LB_547:
;; ?. 4'(= a20◂ [ a9◂ [ ]{| l |}] ) ⊢ 2(<3)◂2'(= a17◂ [ a9◂ [ ]{| l |}] )
	mov QWORD [GBG_VCT+8*0],rdi
	mov r8,QWORD [rdi+8]
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_LN rdi
;; rsp=0 , %601~2'(= a17◂ [ a9◂ [ ]{| l |}] ) %600~1'(= {| l |} ) %599~0'(= r ) %596~3'(= a2◂ [ a21◂ [ a9◂ [ ]{| l |}]] ) 
; #11 0'(= r ) ⊢ 0'(= r )
	add r13,1
;; rsp=0 , %619~0'(= r ) %601~2'(= a17◂ [ a9◂ [ ]{| l |}] ) %600~1'(= {| l |} ) %596~3'(= a2◂ [ a21◂ [ a9◂ [ ]{| l |}]] ) 
; #134 { 0'(= r ) 2'(= a17◂ [ a9◂ [ ]{| l |}] ) } ⊢ { 0'(= r ) 2'(= {| l |} ) }
	sub rsp,16
	mov QWORD [rsp+8*0],r14
	mov QWORD [rsp+8*1],r9
; .mov_ptn2 { 0'(= r ) 2'(= a17◂ [ a9◂ [ ]{| l |}] ) } ⊢ { 0'(= r ) 1'(= a17◂ [ a9◂ [ ]{| l |}] ) }
; .mov_ptn 2'(= a17◂ [ a9◂ [ ]{| l |}] ) ⊢ 1'(= a17◂ [ a9◂ [ ]{| l |}] )
	mov rax,r8
	mov r14,rax
	call ETR_134
	mov r9,QWORD [rsp-8+8*2]
	mov r8,r14
	mov r14,QWORD [rsp-8+8*1]
	add rsp,16
;; rsp=0 , %621~2'(= {| l |} ) %620~0'(= r ) %600~1'(= {| l |} ) %596~3'(= a2◂ [ a21◂ [ a9◂ [ ]{| l |}]] ) 
; #12 0'(= r ) ⊢ 0'(= r )
	sub r13,1
;; rsp=0 , %622~0'(= r ) %621~2'(= {| l |} ) %600~1'(= {| l |} ) %596~3'(= a2◂ [ a21◂ [ a9◂ [ ]{| l |}]] ) 
; » _^ .. ⊢ ..
; .. //
	mov rdi,0
	mov rsi,r13
	imul rsi,1
	add rdi,rsi 
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[r8]
	add rdi,rax 
	push rax
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[r14]
	add rdi,rax 
	push rax
	add rdi,9
	push rdi 
	call mlc_s8
	pop rdi
	mov r10,rax
	lea rdi,[rax+7+rdi]
	std 
	mov QWORD [tmp],rcx 
	pop rcx
	lea rsi,[r14+7+rcx]
	rep movsb
	pop rcx
	lea rsi,[r8+7+rcx]
	rep movsb
	lea rsi,[LB_553+9-1]
	mov rcx,9
	rep movsb
	mov rax,r13
LB_555:
	cmp rax,0
	jz LB_556
	sub rax,1
	lea rsi,[LB_554+1-1]
	mov rcx,1
	rep movsb 
	jmp LB_555
LB_556:
	mov rcx,QWORD [tmp] 
;; rsp=0 , %626~4'(= {| l |} ) %625~2'(= {| l |} ) %624~1'(= {| l |} ) %623~0'(= r ) %596~3'(= a2◂ [ a21◂ [ a9◂ [ ]{| l |}]] ) 
; ∎ { 0'(= r ) 4'(= {| l |} ) }
; .dlt.ptn 2'(= {| l |} )
	mov rdi,r8
	C_PUSH_REGS
	mov r8,rdi
	mov rdi,r8
	call free_s8
	C_POP_REGS
; .dlt.ptn 1'(= {| l |} )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	mov rdi,r8
	call free_s8
	C_POP_REGS
; .dlt.ptn 3'(= a2◂ [ a21◂ [ a9◂ [ ]{| l |}]] )
	mov rdi,r9
	C_PUSH_REGS
	mov r8,rdi
	call LB_531
	C_POP_REGS
; .mov_ptn2 { 0'(= r ) 4'(= {| l |} ) } ⊢ { 0'(= r ) 1'(= {| l |} ) }
; .mov_ptn 4'(= {| l |} ) ⊢ 1'(= {| l |} )
	mov rax,r10
	mov r14,rax
	ret
LB_525:
;; ?; 1'(= a7◂ [ *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}] ) ⊢ 1(<2)◂{ 2'(= a2◂ [ a21◂ [ a9◂ [ ]{| l |}]] ) 3'(= a20◂ [ a9◂ [ ]{| l |}] ) }
	mov r8, QWORD [r14+8]
	mov r9, QWORD [r14+16]
	mov QWORD [GBG_VCT+8*0],r14
	mov rdi,QWORD [GBG_VCT+8*0]
	mov rax,[SS_RCD_2_TOP]
	mov QWORD [rdi],rax 
	mov QWORD [SS_RCD_2_TOP],rdi
;; rsp=0 , %628~3'(= a20◂ [ a9◂ [ ]{| l |}] ) %627~2'(= a2◂ [ a21◂ [ a9◂ [ ]{| l |}]] ) %594~0'(= r ) 
;; ?; 3'(= a20◂ [ a9◂ [ ]{| l |}] ) ⊢ 0(<3)◂1'(= a7◂ [ *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}] )
	mov rdi,r9
	cmp BYTE [rdi+6],0
	jnz LB_557
	mov QWORD [GBG_VCT+8*0],rdi
	mov r14,QWORD [rdi+8]
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_LN rdi
;; rsp=0 , %629~1'(= a7◂ [ *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}] ) %627~2'(= a2◂ [ a21◂ [ a9◂ [ ]{| l |}]] ) %594~0'(= r ) 
; #136 { 0'(= r ) 1'(= a7◂ [ *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}] ) } ⊢ { 0'(= r ) 1'(= {| l |} ) }
	sub rsp,8
	mov QWORD [rsp+8*0],r8
; .mov_ptn2 { 0'(= r ) 1'(= a7◂ [ *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}] ) } ⊢ { 0'(= r ) 1'(= a7◂ [ *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}] ) }
	call ETR_136
	mov r8,QWORD [rsp-8+8*1]
	add rsp,8
;; rsp=0 , %631~1'(= {| l |} ) %630~0'(= r ) %627~2'(= a2◂ [ a21◂ [ a9◂ [ ]{| l |}]] ) 
; » _^ .. ⊢ ..
; .. //
	mov rdi,0
	mov rsi,r13
	imul rsi,1
	add rdi,rsi 
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[r14]
	add rdi,rax 
	push rax
	add rdi,10
	push rdi 
	call mlc_s8
	pop rdi
	mov r9,rax
	lea rdi,[rax+7+rdi]
	std 
	mov QWORD [tmp],rcx 
	pop rcx
	lea rsi,[r14+7+rcx]
	rep movsb
	lea rsi,[LB_558+10-1]
	mov rcx,10
	rep movsb
	mov rax,r13
LB_560:
	cmp rax,0
	jz LB_561
	sub rax,1
	lea rsi,[LB_559+1-1]
	mov rcx,1
	rep movsb 
	jmp LB_560
LB_561:
	mov rcx,QWORD [tmp] 
;; rsp=0 , %634~3'(= {| l |} ) %633~1'(= {| l |} ) %632~0'(= r ) %627~2'(= a2◂ [ a21◂ [ a9◂ [ ]{| l |}]] ) 
; ∎ { 0'(= r ) 3'(= {| l |} ) }
; .dlt.ptn 1'(= {| l |} )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	mov rdi,r8
	call free_s8
	C_POP_REGS
; .dlt.ptn 2'(= a2◂ [ a21◂ [ a9◂ [ ]{| l |}]] )
	mov rdi,r8
	C_PUSH_REGS
	mov r8,rdi
	call LB_531
	C_POP_REGS
; .mov_ptn2 { 0'(= r ) 3'(= {| l |} ) } ⊢ { 0'(= r ) 1'(= {| l |} ) }
; .mov_ptn 3'(= {| l |} ) ⊢ 1'(= {| l |} )
	mov rax,r9
	mov r14,rax
	ret
LB_557:
;; ?; 3'(= a20◂ [ a9◂ [ ]{| l |}] ) ⊢ 1(<3)◂{ 1'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) 4'(= a7◂ [ *{ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}] ) }
	mov rdi,r9
	cmp BYTE [rdi+6],1
	jnz LB_562
	mov r14, QWORD [r9+8]
	mov r10, QWORD [r9+16]
	mov QWORD [GBG_VCT+8*0],r9
	mov rdi,QWORD [GBG_VCT+8*0]
	mov rax,[SS_RCD_2_TOP]
	mov QWORD [rdi],rax 
	mov QWORD [SS_RCD_2_TOP],rdi
;; rsp=0 , %636~4'(= a7◂ [ *{ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}] ) %635~1'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) %627~2'(= a2◂ [ a21◂ [ a9◂ [ ]{| l |}]] ) %594~0'(= r ) 
; #99 1'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) ⊢ 1'(= {| l |} )
	sub rsp,24
	mov QWORD [rsp+8*0],r13
	mov QWORD [rsp+8*1],r8
	mov QWORD [rsp+8*2],r10
; .mov_ptn2 1'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) ⊢ 0'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] )
; .mov_ptn 1'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) ⊢ 0'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] )
	mov rax,r14
	mov r13,rax
	call ETR_99
	mov r10,QWORD [rsp-8+8*3]
	mov r8,QWORD [rsp-8+8*2]
	mov r14,r13
	mov r13,QWORD [rsp-8+8*1]
	add rsp,24
;; rsp=0 , %637~1'(= {| l |} ) %636~4'(= a7◂ [ *{ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}] ) %627~2'(= a2◂ [ a21◂ [ a9◂ [ ]{| l |}]] ) %594~0'(= r ) 
; #137 { 0'(= r ) 4'(= a7◂ [ *{ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}] ) } ⊢ { 0'(= r ) 3'(= {| l |} ) }
	sub rsp,16
	mov QWORD [rsp+8*0],r14
	mov QWORD [rsp+8*1],r8
; .mov_ptn2 { 0'(= r ) 4'(= a7◂ [ *{ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}] ) } ⊢ { 0'(= r ) 1'(= a7◂ [ *{ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}] ) }
; .mov_ptn 4'(= a7◂ [ *{ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}] ) ⊢ 1'(= a7◂ [ *{ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}] )
	mov rax,r10
	mov r14,rax
	call ETR_137
	mov r8,QWORD [rsp-8+8*2]
	mov r9,r14
	mov r14,QWORD [rsp-8+8*1]
	add rsp,16
;; rsp=0 , %639~3'(= {| l |} ) %638~0'(= r ) %637~1'(= {| l |} ) %627~2'(= a2◂ [ a21◂ [ a9◂ [ ]{| l |}]] ) 
; » _^ .. ⊢ ..
; .. //
	mov rdi,0
	mov rsi,r13
	imul rsi,1
	add rdi,rsi 
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[r14]
	add rdi,rax 
	push rax
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[r9]
	add rdi,rax 
	push rax
	add rdi,14
	push rdi 
	call mlc_s8
	pop rdi
	mov r10,rax
	lea rdi,[rax+7+rdi]
	std 
	mov QWORD [tmp],rcx 
	pop rcx
	lea rsi,[r9+7+rcx]
	rep movsb
	lea rsi,[LB_563+5-1]
	mov rcx,5
	rep movsb
	pop rcx
	lea rsi,[r14+7+rcx]
	rep movsb
	lea rsi,[LB_564+9-1]
	mov rcx,9
	rep movsb
	mov rax,r13
LB_566:
	cmp rax,0
	jz LB_567
	sub rax,1
	lea rsi,[LB_565+1-1]
	mov rcx,1
	rep movsb 
	jmp LB_566
LB_567:
	mov rcx,QWORD [tmp] 
;; rsp=0 , %643~4'(= {| l |} ) %642~3'(= {| l |} ) %641~1'(= {| l |} ) %640~0'(= r ) %627~2'(= a2◂ [ a21◂ [ a9◂ [ ]{| l |}]] ) 
; ∎ { 0'(= r ) 4'(= {| l |} ) }
; .dlt.ptn 3'(= {| l |} )
	mov rdi,r9
	C_PUSH_REGS
	mov r8,rdi
	mov rdi,r8
	call free_s8
	C_POP_REGS
; .dlt.ptn 1'(= {| l |} )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	mov rdi,r8
	call free_s8
	C_POP_REGS
; .dlt.ptn 2'(= a2◂ [ a21◂ [ a9◂ [ ]{| l |}]] )
	mov rdi,r8
	C_PUSH_REGS
	mov r8,rdi
	call LB_531
	C_POP_REGS
; .mov_ptn2 { 0'(= r ) 4'(= {| l |} ) } ⊢ { 0'(= r ) 1'(= {| l |} ) }
; .mov_ptn 4'(= {| l |} ) ⊢ 1'(= {| l |} )
	mov rax,r10
	mov r14,rax
	ret
LB_562:
;; ?; 3'(= a20◂ [ a9◂ [ ]{| l |}] ) ⊢ 2(<3)◂1'(= a17◂ [ a9◂ [ ]{| l |}] )
	mov QWORD [GBG_VCT+8*0],rdi
	mov r14,QWORD [rdi+8]
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_LN rdi
;; rsp=0 , %644~1'(= a17◂ [ a9◂ [ ]{| l |}] ) %627~2'(= a2◂ [ a21◂ [ a9◂ [ ]{| l |}]] ) %594~0'(= r ) 
; #11 0'(= r ) ⊢ 0'(= r )
	add r13,1
;; rsp=0 , %645~0'(= r ) %644~1'(= a17◂ [ a9◂ [ ]{| l |}] ) %627~2'(= a2◂ [ a21◂ [ a9◂ [ ]{| l |}]] ) 
; #134 { 0'(= r ) 1'(= a17◂ [ a9◂ [ ]{| l |}] ) } ⊢ { 0'(= r ) 1'(= {| l |} ) }
	sub rsp,8
	mov QWORD [rsp+8*0],r8
; .mov_ptn2 { 0'(= r ) 1'(= a17◂ [ a9◂ [ ]{| l |}] ) } ⊢ { 0'(= r ) 1'(= a17◂ [ a9◂ [ ]{| l |}] ) }
	call ETR_134
	mov r8,QWORD [rsp-8+8*1]
	add rsp,8
;; rsp=0 , %647~1'(= {| l |} ) %646~0'(= r ) %627~2'(= a2◂ [ a21◂ [ a9◂ [ ]{| l |}]] ) 
; #12 0'(= r ) ⊢ 0'(= r )
	sub r13,1
;; rsp=0 , %648~0'(= r ) %647~1'(= {| l |} ) %627~2'(= a2◂ [ a21◂ [ a9◂ [ ]{| l |}]] ) 
; » _^ .. ⊢ ..
; .. //
	mov rdi,0
	mov rsi,r13
	imul rsi,1
	add rdi,rsi 
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[r14]
	add rdi,rax 
	push rax
	add rdi,10
	push rdi 
	call mlc_s8
	pop rdi
	mov r9,rax
	lea rdi,[rax+7+rdi]
	std 
	mov QWORD [tmp],rcx 
	pop rcx
	lea rsi,[r14+7+rcx]
	rep movsb
	lea rsi,[LB_568+10-1]
	mov rcx,10
	rep movsb
	mov rax,r13
LB_570:
	cmp rax,0
	jz LB_571
	sub rax,1
	lea rsi,[LB_569+1-1]
	mov rcx,1
	rep movsb 
	jmp LB_570
LB_571:
	mov rcx,QWORD [tmp] 
;; rsp=0 , %651~3'(= {| l |} ) %650~1'(= {| l |} ) %649~0'(= r ) %627~2'(= a2◂ [ a21◂ [ a9◂ [ ]{| l |}]] ) 
; ∎ { 0'(= r ) 3'(= {| l |} ) }
; .dlt.ptn 1'(= {| l |} )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	mov rdi,r8
	call free_s8
	C_POP_REGS
; .dlt.ptn 2'(= a2◂ [ a21◂ [ a9◂ [ ]{| l |}]] )
	mov rdi,r8
	C_PUSH_REGS
	mov r8,rdi
	call LB_531
	C_POP_REGS
; .mov_ptn2 { 0'(= r ) 3'(= {| l |} ) } ⊢ { 0'(= r ) 1'(= {| l |} ) }
; .mov_ptn 3'(= {| l |} ) ⊢ 1'(= {| l |} )
	mov rax,r9
	mov r14,rax
	ret
ETR_137: ;; pnt_lc_id_mtc { 0'(= r ) 1'(= a7◂ [ *{ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}] ) } ⊢ { 0'(= r ) 1'(= {| l |} ) } : ({ _r64 _t7◂{ _t8◂_t14◂_s8◂_t9 _lst◂_t21◂_s8◂_t9 _t20◂_s8◂_t9 } }→{ _r64 _s8 })
;; rsp=0 , %653~1'(= a7◂ [ *{ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}] ) %652~0'(= r ) 
;; ?; 1'(= a7◂ [ *{ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}] ) ⊢ 0(<2)◂{ { 3'(= a8◂ [ a14◂ [ a9◂ [ ]{| l |}]] ) 4'(= a2◂ [ a21◂ [ a9◂ [ ]{| l |}]] ) 5'(= a20◂ [ a9◂ [ ]{| l |}] ) } 6'(= a7◂ [ *{ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}] ) }
	mov rdi,r14
	cmp BYTE [rdi+6],0
	jnz LB_572
	mov r8, QWORD [r14+8]
	mov r9, QWORD [r8+8]
	mov r10, QWORD [r8+16]
	mov r11, QWORD [r8+24]
	mov QWORD [GBG_VCT+8*0],r8
	mov rcx, QWORD [r14+16]
	mov QWORD [GBG_VCT+8*1],r14
	mov rdi,QWORD [GBG_VCT+8*1]
	mov rax,[SS_RCD_2_TOP]
	mov QWORD [rdi],rax 
	mov QWORD [SS_RCD_2_TOP],rdi
	mov rdi,QWORD [GBG_VCT+8*0]
	mov rax,[SS_RCD_3_TOP]
	mov QWORD [rdi],rax 
	mov QWORD [SS_RCD_3_TOP],rdi
;; rsp=0 , %657~6'(= a7◂ [ *{ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}] ) %656~5'(= a20◂ [ a9◂ [ ]{| l |}] ) %655~4'(= a2◂ [ a21◂ [ a9◂ [ ]{| l |}]] ) %654~3'(= a8◂ [ a14◂ [ a9◂ [ ]{| l |}]] ) %652~0'(= r ) 
; #103 3'(= a8◂ [ a14◂ [ a9◂ [ ]{| l |}]] ) ⊢ 1'(= {| l |} )
	sub rsp,32
	mov QWORD [rsp+8*0],r13
	mov QWORD [rsp+8*1],r10
	mov QWORD [rsp+8*2],r11
	mov QWORD [rsp+8*3],rcx
; .mov_ptn2 3'(= a8◂ [ a14◂ [ a9◂ [ ]{| l |}]] ) ⊢ 0'(= a8◂ [ a14◂ [ a9◂ [ ]{| l |}]] )
; .mov_ptn 3'(= a8◂ [ a14◂ [ a9◂ [ ]{| l |}]] ) ⊢ 0'(= a8◂ [ a14◂ [ a9◂ [ ]{| l |}]] )
	mov rax,r9
	mov r13,rax
	call ETR_103
	mov rcx,QWORD [rsp-8+8*4]
	mov r11,QWORD [rsp-8+8*3]
	mov r10,QWORD [rsp-8+8*2]
	mov r14,r13
	mov r13,QWORD [rsp-8+8*1]
	add rsp,32
;; rsp=0 , %658~1'(= {| l |} ) %657~6'(= a7◂ [ *{ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}] ) %656~5'(= a20◂ [ a9◂ [ ]{| l |}] ) %655~4'(= a2◂ [ a21◂ [ a9◂ [ ]{| l |}]] ) %652~0'(= r ) 
; #137 { 0'(= r ) 6'(= a7◂ [ *{ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}] ) } ⊢ { 0'(= r ) 2'(= {| l |} ) }
	sub rsp,24
	mov QWORD [rsp+8*0],r14
	mov QWORD [rsp+8*1],r10
	mov QWORD [rsp+8*2],r11
; .mov_ptn2 { 0'(= r ) 6'(= a7◂ [ *{ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}] ) } ⊢ { 0'(= r ) 1'(= a7◂ [ *{ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}] ) }
; .mov_ptn 6'(= a7◂ [ *{ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}] ) ⊢ 1'(= a7◂ [ *{ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}] )
	mov rax,rcx
	mov r14,rax
	call ETR_137
	mov r11,QWORD [rsp-8+8*3]
	mov r10,QWORD [rsp-8+8*2]
	mov r8,r14
	mov r14,QWORD [rsp-8+8*1]
	add rsp,24
;; rsp=0 , %660~2'(= {| l |} ) %659~0'(= r ) %658~1'(= {| l |} ) %656~5'(= a20◂ [ a9◂ [ ]{| l |}] ) %655~4'(= a2◂ [ a21◂ [ a9◂ [ ]{| l |}]] ) 
;; ? 5'(= a20◂ [ a9◂ [ ]{| l |}] ) ⊢ 0(<3)◂3'(= a7◂ [ *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}] )
	mov rdi,r11
	cmp BYTE [rdi+6],0
	jnz LB_573
	mov QWORD [GBG_VCT+8*0],rdi
	mov r9,QWORD [rdi+8]
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_LN rdi
;; rsp=0 , %664~3'(= a7◂ [ *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}] ) %660~2'(= {| l |} ) %659~0'(= r ) %658~1'(= {| l |} ) %655~4'(= a2◂ [ a21◂ [ a9◂ [ ]{| l |}]] ) 
; #136 { 0'(= r ) 3'(= a7◂ [ *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}] ) } ⊢ { 0'(= r ) 3'(= {| l |} ) }
	sub rsp,24
	mov QWORD [rsp+8*0],r14
	mov QWORD [rsp+8*1],r8
	mov QWORD [rsp+8*2],r10
; .mov_ptn2 { 0'(= r ) 3'(= a7◂ [ *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}] ) } ⊢ { 0'(= r ) 1'(= a7◂ [ *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}] ) }
; .mov_ptn 3'(= a7◂ [ *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}] ) ⊢ 1'(= a7◂ [ *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}] )
	mov rax,r9
	mov r14,rax
	call ETR_136
	mov r10,QWORD [rsp-8+8*3]
	mov r8,QWORD [rsp-8+8*2]
	mov r9,r14
	mov r14,QWORD [rsp-8+8*1]
	add rsp,24
;; rsp=0 , %666~3'(= {| l |} ) %665~0'(= r ) %660~2'(= {| l |} ) %658~1'(= {| l |} ) %655~4'(= a2◂ [ a21◂ [ a9◂ [ ]{| l |}]] ) 
; » _^ .. ⊢ ..
; .. //
	mov rdi,0
	mov rsi,r13
	imul rsi,1
	add rdi,rsi 
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[r14]
	add rdi,rax 
	push rax
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[r9]
	add rdi,rax 
	push rax
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[r8]
	add rdi,rax 
	push rax
	add rdi,9
	push rdi 
	call mlc_s8
	pop rdi
	mov r11,rax
	lea rdi,[rax+7+rdi]
	std 
	mov QWORD [tmp],rcx 
	pop rcx
	lea rsi,[r8+7+rcx]
	rep movsb
	pop rcx
	lea rsi,[r9+7+rcx]
	rep movsb
	lea rsi,[LB_574+5-1]
	mov rcx,5
	rep movsb
	pop rcx
	lea rsi,[r14+7+rcx]
	rep movsb
	lea rsi,[LB_575+4-1]
	mov rcx,4
	rep movsb
	mov rax,r13
LB_577:
	cmp rax,0
	jz LB_578
	sub rax,1
	lea rsi,[LB_576+1-1]
	mov rcx,1
	rep movsb 
	jmp LB_577
LB_578:
	mov rcx,QWORD [tmp] 
;; rsp=0 , %671~5'(= {| l |} ) %670~3'(= {| l |} ) %669~2'(= {| l |} ) %668~1'(= {| l |} ) %667~0'(= r ) %655~4'(= a2◂ [ a21◂ [ a9◂ [ ]{| l |}]] ) 
; ∎ { 0'(= r ) 5'(= {| l |} ) }
; .dlt.ptn 3'(= {| l |} )
	mov rdi,r9
	C_PUSH_REGS
	mov r8,rdi
	mov rdi,r8
	call free_s8
	C_POP_REGS
; .dlt.ptn 2'(= {| l |} )
	mov rdi,r8
	C_PUSH_REGS
	mov r8,rdi
	mov rdi,r8
	call free_s8
	C_POP_REGS
; .dlt.ptn 1'(= {| l |} )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	mov rdi,r8
	call free_s8
	C_POP_REGS
; .dlt.ptn 4'(= a2◂ [ a21◂ [ a9◂ [ ]{| l |}]] )
	mov rdi,r10
	C_PUSH_REGS
	mov r8,rdi
	call LB_531
	C_POP_REGS
; .mov_ptn2 { 0'(= r ) 5'(= {| l |} ) } ⊢ { 0'(= r ) 1'(= {| l |} ) }
; .mov_ptn 5'(= {| l |} ) ⊢ 1'(= {| l |} )
	mov rax,r11
	mov r14,rax
	ret
LB_573:
;; ? 5'(= a20◂ [ a9◂ [ ]{| l |}] ) ⊢ 1(<3)◂{ 3'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) 6'(= a7◂ [ *{ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}] ) }
	mov rdi,r11
	cmp BYTE [rdi+6],1
	jnz LB_579
	mov r9, QWORD [r11+8]
	mov rcx, QWORD [r11+16]
	mov QWORD [GBG_VCT+8*0],r11
	mov rdi,QWORD [GBG_VCT+8*0]
	mov rax,[SS_RCD_2_TOP]
	mov QWORD [rdi],rax 
	mov QWORD [SS_RCD_2_TOP],rdi
;; rsp=0 , %663~6'(= a7◂ [ *{ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}] ) %662~3'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) %660~2'(= {| l |} ) %659~0'(= r ) %658~1'(= {| l |} ) %655~4'(= a2◂ [ a21◂ [ a9◂ [ ]{| l |}]] ) 
; #99 3'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) ⊢ 3'(= {| l |} )
	sub rsp,40
	mov QWORD [rsp+8*0],r13
	mov QWORD [rsp+8*1],r14
	mov QWORD [rsp+8*2],r8
	mov QWORD [rsp+8*3],r10
	mov QWORD [rsp+8*4],rcx
; .mov_ptn2 3'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) ⊢ 0'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] )
; .mov_ptn 3'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) ⊢ 0'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] )
	mov rax,r9
	mov r13,rax
	call ETR_99
	mov rcx,QWORD [rsp-8+8*5]
	mov r10,QWORD [rsp-8+8*4]
	mov r8,QWORD [rsp-8+8*3]
	mov r14,QWORD [rsp-8+8*2]
	mov r9,r13
	mov r13,QWORD [rsp-8+8*1]
	add rsp,40
;; rsp=0 , %672~3'(= {| l |} ) %663~6'(= a7◂ [ *{ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}] ) %660~2'(= {| l |} ) %659~0'(= r ) %658~1'(= {| l |} ) %655~4'(= a2◂ [ a21◂ [ a9◂ [ ]{| l |}]] ) 
; #137 { 0'(= r ) 6'(= a7◂ [ *{ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}] ) } ⊢ { 0'(= r ) 5'(= {| l |} ) }
	sub rsp,32
	mov QWORD [rsp+8*0],r14
	mov QWORD [rsp+8*1],r8
	mov QWORD [rsp+8*2],r9
	mov QWORD [rsp+8*3],r10
; .mov_ptn2 { 0'(= r ) 6'(= a7◂ [ *{ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}] ) } ⊢ { 0'(= r ) 1'(= a7◂ [ *{ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}] ) }
; .mov_ptn 6'(= a7◂ [ *{ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}] ) ⊢ 1'(= a7◂ [ *{ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}] )
	mov rax,rcx
	mov r14,rax
	call ETR_137
	mov r10,QWORD [rsp-8+8*4]
	mov r9,QWORD [rsp-8+8*3]
	mov r8,QWORD [rsp-8+8*2]
	mov r11,r14
	mov r14,QWORD [rsp-8+8*1]
	add rsp,32
;; rsp=0 , %674~5'(= {| l |} ) %673~0'(= r ) %672~3'(= {| l |} ) %660~2'(= {| l |} ) %658~1'(= {| l |} ) %655~4'(= a2◂ [ a21◂ [ a9◂ [ ]{| l |}]] ) 
; » _^ .. ⊢ ..
; .. //
	mov rdi,0
	mov rsi,r13
	imul rsi,1
	add rdi,rsi 
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[r9]
	add rdi,rax 
	push rax
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[r11]
	add rdi,rax 
	push rax
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[r8]
	add rdi,rax 
	push rax
	add rdi,14
	push rdi 
	call mlc_s8
	pop rdi
	mov rcx,rax
	lea rdi,[rax+7+rdi]
	std 
	mov QWORD [tmp],rcx 
	pop rcx
	lea rsi,[r8+7+rcx]
	rep movsb
	pop rcx
	lea rsi,[r11+7+rcx]
	rep movsb
	lea rsi,[LB_580+5-1]
	mov rcx,5
	rep movsb
	pop rcx
	lea rsi,[r9+7+rcx]
	rep movsb
	lea rsi,[LB_581+9-1]
	mov rcx,9
	rep movsb
	mov rax,r13
LB_583:
	cmp rax,0
	jz LB_584
	sub rax,1
	lea rsi,[LB_582+1-1]
	mov rcx,1
	rep movsb 
	jmp LB_583
LB_584:
	mov rcx,QWORD [tmp] 
;; rsp=0 , %679~6'(= {| l |} ) %678~5'(= {| l |} ) %677~2'(= {| l |} ) %676~3'(= {| l |} ) %675~0'(= r ) %658~1'(= {| l |} ) %655~4'(= a2◂ [ a21◂ [ a9◂ [ ]{| l |}]] ) 
; ∎ { 0'(= r ) 6'(= {| l |} ) }
; .dlt.ptn 5'(= {| l |} )
	mov rdi,r11
	C_PUSH_REGS
	mov r8,rdi
	mov rdi,r8
	call free_s8
	C_POP_REGS
; .dlt.ptn 2'(= {| l |} )
	mov rdi,r8
	C_PUSH_REGS
	mov r8,rdi
	mov rdi,r8
	call free_s8
	C_POP_REGS
; .dlt.ptn 3'(= {| l |} )
	mov rdi,r9
	C_PUSH_REGS
	mov r8,rdi
	mov rdi,r8
	call free_s8
	C_POP_REGS
; .dlt.ptn 1'(= {| l |} )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	mov rdi,r8
	call free_s8
	C_POP_REGS
; .dlt.ptn 4'(= a2◂ [ a21◂ [ a9◂ [ ]{| l |}]] )
	mov rdi,r10
	C_PUSH_REGS
	mov r8,rdi
	call LB_531
	C_POP_REGS
; .mov_ptn2 { 0'(= r ) 6'(= {| l |} ) } ⊢ { 0'(= r ) 1'(= {| l |} ) }
; .mov_ptn 6'(= {| l |} ) ⊢ 1'(= {| l |} )
	mov rax,rcx
	mov r14,rax
	ret
LB_579:
;; ?. 5'(= a20◂ [ a9◂ [ ]{| l |}] ) ⊢ 2(<3)◂3'(= a17◂ [ a9◂ [ ]{| l |}] )
	mov QWORD [GBG_VCT+8*0],rdi
	mov r9,QWORD [rdi+8]
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_LN rdi
;; rsp=0 , %661~3'(= a17◂ [ a9◂ [ ]{| l |}] ) %660~2'(= {| l |} ) %659~0'(= r ) %658~1'(= {| l |} ) %655~4'(= a2◂ [ a21◂ [ a9◂ [ ]{| l |}]] ) 
; #11 0'(= r ) ⊢ 0'(= r )
	add r13,1
;; rsp=0 , %680~0'(= r ) %661~3'(= a17◂ [ a9◂ [ ]{| l |}] ) %660~2'(= {| l |} ) %658~1'(= {| l |} ) %655~4'(= a2◂ [ a21◂ [ a9◂ [ ]{| l |}]] ) 
; #134 { 0'(= r ) 3'(= a17◂ [ a9◂ [ ]{| l |}] ) } ⊢ { 0'(= r ) 3'(= {| l |} ) }
	sub rsp,24
	mov QWORD [rsp+8*0],r14
	mov QWORD [rsp+8*1],r8
	mov QWORD [rsp+8*2],r10
; .mov_ptn2 { 0'(= r ) 3'(= a17◂ [ a9◂ [ ]{| l |}] ) } ⊢ { 0'(= r ) 1'(= a17◂ [ a9◂ [ ]{| l |}] ) }
; .mov_ptn 3'(= a17◂ [ a9◂ [ ]{| l |}] ) ⊢ 1'(= a17◂ [ a9◂ [ ]{| l |}] )
	mov rax,r9
	mov r14,rax
	call ETR_134
	mov r10,QWORD [rsp-8+8*3]
	mov r8,QWORD [rsp-8+8*2]
	mov r9,r14
	mov r14,QWORD [rsp-8+8*1]
	add rsp,24
;; rsp=0 , %682~3'(= {| l |} ) %681~0'(= r ) %660~2'(= {| l |} ) %658~1'(= {| l |} ) %655~4'(= a2◂ [ a21◂ [ a9◂ [ ]{| l |}]] ) 
; #12 0'(= r ) ⊢ 0'(= r )
	sub r13,1
;; rsp=0 , %683~0'(= r ) %682~3'(= {| l |} ) %660~2'(= {| l |} ) %658~1'(= {| l |} ) %655~4'(= a2◂ [ a21◂ [ a9◂ [ ]{| l |}]] ) 
; » _^ .. ⊢ ..
; .. //
	mov rdi,0
	mov rsi,r13
	imul rsi,1
	add rdi,rsi 
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[r9]
	add rdi,rax 
	push rax
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[r8]
	add rdi,rax 
	push rax
	add rdi,9
	push rdi 
	call mlc_s8
	pop rdi
	mov r11,rax
	lea rdi,[rax+7+rdi]
	std 
	mov QWORD [tmp],rcx 
	pop rcx
	lea rsi,[r8+7+rcx]
	rep movsb
	pop rcx
	lea rsi,[r9+7+rcx]
	rep movsb
	lea rsi,[LB_585+9-1]
	mov rcx,9
	rep movsb
	mov rax,r13
LB_587:
	cmp rax,0
	jz LB_588
	sub rax,1
	lea rsi,[LB_586+1-1]
	mov rcx,1
	rep movsb 
	jmp LB_587
LB_588:
	mov rcx,QWORD [tmp] 
;; rsp=0 , %687~5'(= {| l |} ) %686~3'(= {| l |} ) %685~2'(= {| l |} ) %684~0'(= r ) %658~1'(= {| l |} ) %655~4'(= a2◂ [ a21◂ [ a9◂ [ ]{| l |}]] ) 
; ∎ { 0'(= r ) 5'(= {| l |} ) }
; .dlt.ptn 3'(= {| l |} )
	mov rdi,r9
	C_PUSH_REGS
	mov r8,rdi
	mov rdi,r8
	call free_s8
	C_POP_REGS
; .dlt.ptn 2'(= {| l |} )
	mov rdi,r8
	C_PUSH_REGS
	mov r8,rdi
	mov rdi,r8
	call free_s8
	C_POP_REGS
; .dlt.ptn 1'(= {| l |} )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	mov rdi,r8
	call free_s8
	C_POP_REGS
; .dlt.ptn 4'(= a2◂ [ a21◂ [ a9◂ [ ]{| l |}]] )
	mov rdi,r10
	C_PUSH_REGS
	mov r8,rdi
	call LB_531
	C_POP_REGS
; .mov_ptn2 { 0'(= r ) 5'(= {| l |} ) } ⊢ { 0'(= r ) 1'(= {| l |} ) }
; .mov_ptn 5'(= {| l |} ) ⊢ 1'(= {| l |} )
	mov rax,r11
	mov r14,rax
	ret
LB_572:
;; ?; 1'(= a7◂ [ *{ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}] ) ⊢ 1(<2)◂{ 2'(= a8◂ [ a14◂ [ a9◂ [ ]{| l |}]] ) 3'(= a2◂ [ a21◂ [ a9◂ [ ]{| l |}]] ) 4'(= a20◂ [ a9◂ [ ]{| l |}] ) }
	mov r8, QWORD [r14+8]
	mov r9, QWORD [r14+16]
	mov r10, QWORD [r14+24]
	mov QWORD [GBG_VCT+8*0],r14
	mov rdi,QWORD [GBG_VCT+8*0]
	mov rax,[SS_RCD_3_TOP]
	mov QWORD [rdi],rax 
	mov QWORD [SS_RCD_3_TOP],rdi
;; rsp=0 , %690~4'(= a20◂ [ a9◂ [ ]{| l |}] ) %689~3'(= a2◂ [ a21◂ [ a9◂ [ ]{| l |}]] ) %688~2'(= a8◂ [ a14◂ [ a9◂ [ ]{| l |}]] ) %652~0'(= r ) 
;; ?; 4'(= a20◂ [ a9◂ [ ]{| l |}] ) ⊢ 0(<3)◂1'(= a7◂ [ *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}] )
	mov rdi,r10
	cmp BYTE [rdi+6],0
	jnz LB_589
	mov QWORD [GBG_VCT+8*0],rdi
	mov r14,QWORD [rdi+8]
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_LN rdi
;; rsp=0 , %691~1'(= a7◂ [ *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}] ) %689~3'(= a2◂ [ a21◂ [ a9◂ [ ]{| l |}]] ) %688~2'(= a8◂ [ a14◂ [ a9◂ [ ]{| l |}]] ) %652~0'(= r ) 
; #103 2'(= a8◂ [ a14◂ [ a9◂ [ ]{| l |}]] ) ⊢ 2'(= {| l |} )
	sub rsp,24
	mov QWORD [rsp+8*0],r13
	mov QWORD [rsp+8*1],r14
	mov QWORD [rsp+8*2],r9
; .mov_ptn2 2'(= a8◂ [ a14◂ [ a9◂ [ ]{| l |}]] ) ⊢ 0'(= a8◂ [ a14◂ [ a9◂ [ ]{| l |}]] )
; .mov_ptn 2'(= a8◂ [ a14◂ [ a9◂ [ ]{| l |}]] ) ⊢ 0'(= a8◂ [ a14◂ [ a9◂ [ ]{| l |}]] )
	mov rax,r8
	mov r13,rax
	call ETR_103
	mov r9,QWORD [rsp-8+8*3]
	mov r14,QWORD [rsp-8+8*2]
	mov r8,r13
	mov r13,QWORD [rsp-8+8*1]
	add rsp,24
;; rsp=0 , %692~2'(= {| l |} ) %691~1'(= a7◂ [ *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}] ) %689~3'(= a2◂ [ a21◂ [ a9◂ [ ]{| l |}]] ) %652~0'(= r ) 
; #136 { 0'(= r ) 1'(= a7◂ [ *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}] ) } ⊢ { 0'(= r ) 1'(= {| l |} ) }
	sub rsp,16
	mov QWORD [rsp+8*0],r8
	mov QWORD [rsp+8*1],r9
; .mov_ptn2 { 0'(= r ) 1'(= a7◂ [ *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}] ) } ⊢ { 0'(= r ) 1'(= a7◂ [ *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}] ) }
	call ETR_136
	mov r9,QWORD [rsp-8+8*2]
	mov r8,QWORD [rsp-8+8*1]
	add rsp,16
;; rsp=0 , %694~1'(= {| l |} ) %693~0'(= r ) %692~2'(= {| l |} ) %689~3'(= a2◂ [ a21◂ [ a9◂ [ ]{| l |}]] ) 
; » _^ .. ⊢ ..
; .. //
	mov rdi,0
	mov rsi,r13
	imul rsi,1
	add rdi,rsi 
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[r14]
	add rdi,rax 
	push rax
	add rdi,10
	push rdi 
	call mlc_s8
	pop rdi
	mov r10,rax
	lea rdi,[rax+7+rdi]
	std 
	mov QWORD [tmp],rcx 
	pop rcx
	lea rsi,[r14+7+rcx]
	rep movsb
	lea rsi,[LB_590+10-1]
	mov rcx,10
	rep movsb
	mov rax,r13
LB_592:
	cmp rax,0
	jz LB_593
	sub rax,1
	lea rsi,[LB_591+1-1]
	mov rcx,1
	rep movsb 
	jmp LB_592
LB_593:
	mov rcx,QWORD [tmp] 
;; rsp=0 , %697~4'(= {| l |} ) %696~1'(= {| l |} ) %695~0'(= r ) %692~2'(= {| l |} ) %689~3'(= a2◂ [ a21◂ [ a9◂ [ ]{| l |}]] ) 
; ∎ { 0'(= r ) 4'(= {| l |} ) }
; .dlt.ptn 1'(= {| l |} )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	mov rdi,r8
	call free_s8
	C_POP_REGS
; .dlt.ptn 2'(= {| l |} )
	mov rdi,r8
	C_PUSH_REGS
	mov r8,rdi
	mov rdi,r8
	call free_s8
	C_POP_REGS
; .dlt.ptn 3'(= a2◂ [ a21◂ [ a9◂ [ ]{| l |}]] )
	mov rdi,r9
	C_PUSH_REGS
	mov r8,rdi
	call LB_531
	C_POP_REGS
; .mov_ptn2 { 0'(= r ) 4'(= {| l |} ) } ⊢ { 0'(= r ) 1'(= {| l |} ) }
; .mov_ptn 4'(= {| l |} ) ⊢ 1'(= {| l |} )
	mov rax,r10
	mov r14,rax
	ret
LB_589:
;; ?; 4'(= a20◂ [ a9◂ [ ]{| l |}] ) ⊢ 1(<3)◂{ 1'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) 5'(= a7◂ [ *{ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}] ) }
	mov rdi,r10
	cmp BYTE [rdi+6],1
	jnz LB_594
	mov r14, QWORD [r10+8]
	mov r11, QWORD [r10+16]
	mov QWORD [GBG_VCT+8*0],r10
	mov rdi,QWORD [GBG_VCT+8*0]
	mov rax,[SS_RCD_2_TOP]
	mov QWORD [rdi],rax 
	mov QWORD [SS_RCD_2_TOP],rdi
;; rsp=0 , %699~5'(= a7◂ [ *{ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}] ) %698~1'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) %689~3'(= a2◂ [ a21◂ [ a9◂ [ ]{| l |}]] ) %688~2'(= a8◂ [ a14◂ [ a9◂ [ ]{| l |}]] ) %652~0'(= r ) 
; #99 1'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) ⊢ 1'(= {| l |} )
	sub rsp,32
	mov QWORD [rsp+8*0],r13
	mov QWORD [rsp+8*1],r8
	mov QWORD [rsp+8*2],r9
	mov QWORD [rsp+8*3],r11
; .mov_ptn2 1'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) ⊢ 0'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] )
; .mov_ptn 1'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) ⊢ 0'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] )
	mov rax,r14
	mov r13,rax
	call ETR_99
	mov r11,QWORD [rsp-8+8*4]
	mov r9,QWORD [rsp-8+8*3]
	mov r8,QWORD [rsp-8+8*2]
	mov r14,r13
	mov r13,QWORD [rsp-8+8*1]
	add rsp,32
;; rsp=0 , %700~1'(= {| l |} ) %699~5'(= a7◂ [ *{ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}] ) %689~3'(= a2◂ [ a21◂ [ a9◂ [ ]{| l |}]] ) %688~2'(= a8◂ [ a14◂ [ a9◂ [ ]{| l |}]] ) %652~0'(= r ) 
; #137 { 0'(= r ) 5'(= a7◂ [ *{ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}] ) } ⊢ { 0'(= r ) 4'(= {| l |} ) }
	sub rsp,24
	mov QWORD [rsp+8*0],r14
	mov QWORD [rsp+8*1],r8
	mov QWORD [rsp+8*2],r9
; .mov_ptn2 { 0'(= r ) 5'(= a7◂ [ *{ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}] ) } ⊢ { 0'(= r ) 1'(= a7◂ [ *{ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}] ) }
; .mov_ptn 5'(= a7◂ [ *{ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}] ) ⊢ 1'(= a7◂ [ *{ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}] )
	mov rax,r11
	mov r14,rax
	call ETR_137
	mov r9,QWORD [rsp-8+8*3]
	mov r8,QWORD [rsp-8+8*2]
	mov r10,r14
	mov r14,QWORD [rsp-8+8*1]
	add rsp,24
;; rsp=0 , %702~4'(= {| l |} ) %701~0'(= r ) %700~1'(= {| l |} ) %689~3'(= a2◂ [ a21◂ [ a9◂ [ ]{| l |}]] ) %688~2'(= a8◂ [ a14◂ [ a9◂ [ ]{| l |}]] ) 
; » _^ .. ⊢ ..
; .. //
	mov rdi,0
	mov rsi,r13
	imul rsi,1
	add rdi,rsi 
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[r14]
	add rdi,rax 
	push rax
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[r10]
	add rdi,rax 
	push rax
	add rdi,14
	push rdi 
	call mlc_s8
	pop rdi
	mov r11,rax
	lea rdi,[rax+7+rdi]
	std 
	mov QWORD [tmp],rcx 
	pop rcx
	lea rsi,[r10+7+rcx]
	rep movsb
	lea rsi,[LB_595+5-1]
	mov rcx,5
	rep movsb
	pop rcx
	lea rsi,[r14+7+rcx]
	rep movsb
	lea rsi,[LB_596+9-1]
	mov rcx,9
	rep movsb
	mov rax,r13
LB_598:
	cmp rax,0
	jz LB_599
	sub rax,1
	lea rsi,[LB_597+1-1]
	mov rcx,1
	rep movsb 
	jmp LB_598
LB_599:
	mov rcx,QWORD [tmp] 
;; rsp=0 , %706~5'(= {| l |} ) %705~4'(= {| l |} ) %704~1'(= {| l |} ) %703~0'(= r ) %689~3'(= a2◂ [ a21◂ [ a9◂ [ ]{| l |}]] ) %688~2'(= a8◂ [ a14◂ [ a9◂ [ ]{| l |}]] ) 
; ∎ { 0'(= r ) 5'(= {| l |} ) }
; .dlt.ptn 4'(= {| l |} )
	mov rdi,r10
	C_PUSH_REGS
	mov r8,rdi
	mov rdi,r8
	call free_s8
	C_POP_REGS
; .dlt.ptn 1'(= {| l |} )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	mov rdi,r8
	call free_s8
	C_POP_REGS
; .dlt.ptn 3'(= a2◂ [ a21◂ [ a9◂ [ ]{| l |}]] )
	mov rdi,r9
	C_PUSH_REGS
	mov r8,rdi
	call LB_531
	C_POP_REGS
; .dlt.ptn 2'(= a8◂ [ a14◂ [ a9◂ [ ]{| l |}]] )
	mov rdi,r8
	C_PUSH_REGS
	mov r8,rdi
	call LB_376
	C_POP_REGS
; .mov_ptn2 { 0'(= r ) 5'(= {| l |} ) } ⊢ { 0'(= r ) 1'(= {| l |} ) }
; .mov_ptn 5'(= {| l |} ) ⊢ 1'(= {| l |} )
	mov rax,r11
	mov r14,rax
	ret
LB_594:
;; ?; 4'(= a20◂ [ a9◂ [ ]{| l |}] ) ⊢ 2(<3)◂1'(= a17◂ [ a9◂ [ ]{| l |}] )
	mov QWORD [GBG_VCT+8*0],rdi
	mov r14,QWORD [rdi+8]
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_LN rdi
;; rsp=0 , %707~1'(= a17◂ [ a9◂ [ ]{| l |}] ) %689~3'(= a2◂ [ a21◂ [ a9◂ [ ]{| l |}]] ) %688~2'(= a8◂ [ a14◂ [ a9◂ [ ]{| l |}]] ) %652~0'(= r ) 
; #11 0'(= r ) ⊢ 0'(= r )
	add r13,1
;; rsp=0 , %708~0'(= r ) %707~1'(= a17◂ [ a9◂ [ ]{| l |}] ) %689~3'(= a2◂ [ a21◂ [ a9◂ [ ]{| l |}]] ) %688~2'(= a8◂ [ a14◂ [ a9◂ [ ]{| l |}]] ) 
; #134 { 0'(= r ) 1'(= a17◂ [ a9◂ [ ]{| l |}] ) } ⊢ { 0'(= r ) 1'(= {| l |} ) }
	sub rsp,16
	mov QWORD [rsp+8*0],r8
	mov QWORD [rsp+8*1],r9
; .mov_ptn2 { 0'(= r ) 1'(= a17◂ [ a9◂ [ ]{| l |}] ) } ⊢ { 0'(= r ) 1'(= a17◂ [ a9◂ [ ]{| l |}] ) }
	call ETR_134
	mov r9,QWORD [rsp-8+8*2]
	mov r8,QWORD [rsp-8+8*1]
	add rsp,16
;; rsp=0 , %710~1'(= {| l |} ) %709~0'(= r ) %689~3'(= a2◂ [ a21◂ [ a9◂ [ ]{| l |}]] ) %688~2'(= a8◂ [ a14◂ [ a9◂ [ ]{| l |}]] ) 
; #12 0'(= r ) ⊢ 0'(= r )
	sub r13,1
;; rsp=0 , %711~0'(= r ) %710~1'(= {| l |} ) %689~3'(= a2◂ [ a21◂ [ a9◂ [ ]{| l |}]] ) %688~2'(= a8◂ [ a14◂ [ a9◂ [ ]{| l |}]] ) 
; » _^ .. ⊢ ..
; .. //
	mov rdi,0
	mov rsi,r13
	imul rsi,1
	add rdi,rsi 
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[r14]
	add rdi,rax 
	push rax
	add rdi,10
	push rdi 
	call mlc_s8
	pop rdi
	mov r10,rax
	lea rdi,[rax+7+rdi]
	std 
	mov QWORD [tmp],rcx 
	pop rcx
	lea rsi,[r14+7+rcx]
	rep movsb
	lea rsi,[LB_600+10-1]
	mov rcx,10
	rep movsb
	mov rax,r13
LB_602:
	cmp rax,0
	jz LB_603
	sub rax,1
	lea rsi,[LB_601+1-1]
	mov rcx,1
	rep movsb 
	jmp LB_602
LB_603:
	mov rcx,QWORD [tmp] 
;; rsp=0 , %714~4'(= {| l |} ) %713~1'(= {| l |} ) %712~0'(= r ) %689~3'(= a2◂ [ a21◂ [ a9◂ [ ]{| l |}]] ) %688~2'(= a8◂ [ a14◂ [ a9◂ [ ]{| l |}]] ) 
; ∎ { 0'(= r ) 4'(= {| l |} ) }
; .dlt.ptn 1'(= {| l |} )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	mov rdi,r8
	call free_s8
	C_POP_REGS
; .dlt.ptn 3'(= a2◂ [ a21◂ [ a9◂ [ ]{| l |}]] )
	mov rdi,r9
	C_PUSH_REGS
	mov r8,rdi
	call LB_531
	C_POP_REGS
; .dlt.ptn 2'(= a8◂ [ a14◂ [ a9◂ [ ]{| l |}]] )
	mov rdi,r8
	C_PUSH_REGS
	mov r8,rdi
	call LB_376
	C_POP_REGS
; .mov_ptn2 { 0'(= r ) 4'(= {| l |} ) } ⊢ { 0'(= r ) 1'(= {| l |} ) }
; .mov_ptn 4'(= {| l |} ) ⊢ 1'(= {| l |} )
	mov rax,r10
	mov r14,rax
	ret
LB_618:
	movzx rax,BYTE [r8+6]
	jmp QWORD [LB_622+8*rax]
LB_622: dq LB_619,LB_620,LB_621
LB_619:
	jmp LB_623
LB_620:
	jmp LB_623
LB_621:
	jmp LB_623
LB_623:
	ret
LB_617:
	movzx rax,BYTE [r8+6]
	jmp QWORD [LB_627+8*rax]
LB_627: dq LB_624,LB_625,LB_626
LB_624:
	FREE_LN r8 
	mov r8,QWORD [r8+8]
	call LB_629
	jmp LB_628
LB_625:
	push r8
	mov r8,QWORD [r8+8+8*0]
	call LB_630
	pop r8 
	push r8
	mov r8,QWORD [r8+8+8*1]
	call LB_617
	pop r8 
	FREE_RCD 2, r8
	jmp LB_628
LB_626:
	jmp LB_628
LB_628:
	ret
LB_630:
	movzx rax,BYTE [r8+6]
	jmp QWORD [LB_633+8*rax]
LB_633: dq LB_631,LB_632
LB_631:
	FREE_LN r8 
	mov r8,QWORD [r8+8]
	call LB_635
	jmp LB_634
LB_632:
	FREE_LN r8 
	mov r8,QWORD [r8+8]
	call LB_635
	jmp LB_634
LB_634:
	ret
LB_635:
	movzx rax,BYTE [r8+6]
	jmp QWORD [LB_638+8*rax]
LB_638: dq LB_636,LB_637
LB_636:
	FREE_LN r8 
	mov r8,QWORD [r8+8]
	call LB_388
	jmp LB_639
LB_637:
	mov rdi,r8
	call free_s8
	jmp LB_639
LB_639:
	ret
LB_629:
	movzx rax,BYTE [r8+6]
	jmp QWORD [LB_642+8*rax]
LB_642: dq LB_640,LB_641
LB_640:
	push r8
	mov r8,QWORD [r8+8+8*0]
	call LB_630
	pop r8 
	push r8
	mov r8,QWORD [r8+8+8*1]
	call LB_629
	pop r8 
	FREE_RCD 2, r8
	jmp LB_643
LB_641:
	jmp LB_643
LB_643:
	ret
LB_616:
	movzx rax,BYTE [r8+6]
	jmp QWORD [LB_646+8*rax]
LB_646: dq LB_644,LB_645
LB_644:
	FREE_LN r8 
	mov r8,QWORD [r8+8]
	call LB_648
	jmp LB_647
LB_645:
	jmp LB_647
LB_647:
	ret
LB_648:
	movzx rax,BYTE [r8+6]
	jmp QWORD [LB_651+8*rax]
LB_651: dq LB_649,LB_650
LB_649:
	push r8
	mov r8,QWORD [r8+8+8*0]
	call LB_324
	pop r8 
	push r8
	mov r8,QWORD [r8+8+8*1]
	call LB_618
	pop r8 
	push r8
	mov r8,QWORD [r8+8+8*2]
	call LB_617
	pop r8 
	push r8
	mov r8,QWORD [r8+8+8*3]
	call LB_616
	pop r8 
	push r8
	mov r8,QWORD [r8+8+8*4]
	call LB_648
	pop r8 
	FREE_RCD 5, r8
	jmp LB_652
LB_650:
	push r8
	mov r8,QWORD [r8+8+8*0]
	call LB_324
	pop r8 
	push r8
	mov r8,QWORD [r8+8+8*1]
	call LB_618
	pop r8 
	push r8
	mov r8,QWORD [r8+8+8*2]
	call LB_617
	pop r8 
	push r8
	mov r8,QWORD [r8+8+8*3]
	call LB_616
	pop r8 
	FREE_RCD 4, r8
	jmp LB_652
LB_652:
	ret
LB_663:
	movzx rax,BYTE [r8+6]
	jmp QWORD [LB_666+8*rax]
LB_666: dq LB_664,LB_665
LB_664:
	push r8
	mov r8,QWORD [r8+8+8*0]
	call LB_668
	pop r8 
	push r8
	mov r8,QWORD [r8+8+8*1]
	call LB_669
	pop r8 
	FREE_RCD 2, r8
	jmp LB_667
LB_665:
	jmp LB_667
LB_667:
	ret
LB_669:
	movzx rax,BYTE [r8+6]
	jmp QWORD [LB_672+8*rax]
LB_672: dq LB_670,LB_671
LB_670:
	push r8
	mov r8,QWORD [r8+8+8*0]
	call LB_491
	pop r8 
	push r8
	mov r8,QWORD [r8+8+8*1]
	call LB_668
	pop r8 
	push r8
	mov r8,QWORD [r8+8+8*2]
	call LB_674
	pop r8 
	push r8
	mov r8,QWORD [r8+8+8*3]
	call LB_618
	pop r8 
	push r8
	mov r8,QWORD [r8+8+8*4]
	call LB_617
	pop r8 
	push r8
	mov r8,QWORD [r8+8+8*5]
	call LB_663
	pop r8 
	push r8
	mov r8,QWORD [r8+8+8*6]
	call LB_669
	pop r8 
	FREE_RCD 7, r8
	jmp LB_673
LB_671:
	push r8
	mov r8,QWORD [r8+8+8*0]
	call LB_491
	pop r8 
	push r8
	mov r8,QWORD [r8+8+8*1]
	call LB_668
	pop r8 
	push r8
	mov r8,QWORD [r8+8+8*2]
	call LB_674
	pop r8 
	push r8
	mov r8,QWORD [r8+8+8*3]
	call LB_618
	pop r8 
	push r8
	mov r8,QWORD [r8+8+8*4]
	call LB_617
	pop r8 
	push r8
	mov r8,QWORD [r8+8+8*5]
	call LB_663
	pop r8 
	FREE_RCD 6, r8
	jmp LB_673
LB_673:
	ret
LB_674:
	movzx rax,BYTE [r8+6]
	jmp QWORD [LB_682+8*rax]
LB_682: dq LB_675,LB_676,LB_677,LB_678,LB_679,LB_680,LB_681
LB_675:
	push r8
	mov r8,QWORD [r8+8+8*0]
	call LB_388
	pop r8 
	push r8
	mov r8,QWORD [r8+8+8*1]
	call LB_445
	pop r8 
	FREE_RCD 2, r8
	jmp LB_683
LB_676:
	push r8
	mov r8,QWORD [r8+8+8*0]
	call LB_451
	pop r8 
	push r8
	mov r8,QWORD [r8+8+8*1]
	call LB_445
	pop r8 
	FREE_RCD 2, r8
	jmp LB_683
LB_677:
	push r8
	mov r8,QWORD [r8+8+8*0]
	call LB_684
	pop r8 
	push r8
	mov r8,QWORD [r8+8+8*1]
	call LB_674
	pop r8 
	FREE_RCD 2, r8
	jmp LB_683
LB_678:
	FREE_LN r8 
	mov r8,QWORD [r8+8]
	call LB_685
	jmp LB_683
LB_679:
	push r8
	mov r8,QWORD [r8+8+8*0]
	call LB_445
	pop r8 
	push r8
	mov r8,QWORD [r8+8+8*1]
	call LB_686
	pop r8 
	FREE_RCD 2, r8
	jmp LB_683
LB_680:
	FREE_LN r8 
	mov r8,QWORD [r8+8]
	call LB_445
	jmp LB_683
LB_681:
	FREE_LN r8 
	mov r8,QWORD [r8+8]
	jmp LB_683
LB_683:
	ret
LB_686:
	movzx rax,BYTE [r8+6]
	jmp QWORD [LB_689+8*rax]
LB_689: dq LB_687,LB_688
LB_687:
	FREE_LN r8 
	mov r8,QWORD [r8+8]
	call LB_691
	jmp LB_690
LB_688:
	push r8
	mov r8,QWORD [r8+8+8*0]
	call LB_692
	pop r8 
	push r8
	mov r8,QWORD [r8+8+8*1]
	call LB_674
	pop r8 
	FREE_RCD 2, r8
	jmp LB_690
LB_690:
	ret
LB_692:
	movzx rax,BYTE [r8+6]
	jmp QWORD [LB_695+8*rax]
LB_695: dq LB_693,LB_694
LB_693:
	push r8
	mov r8,QWORD [r8+8+8*0]
	call LB_668
	pop r8 
	push r8
	mov r8,QWORD [r8+8+8*1]
	call LB_692
	pop r8 
	FREE_RCD 2, r8
	jmp LB_696
LB_694:
	jmp LB_696
LB_696:
	ret
LB_691:
	movzx rax,BYTE [r8+6]
	jmp QWORD [LB_699+8*rax]
LB_699: dq LB_697,LB_698
LB_697:
	push r8
	mov r8,QWORD [r8+8+8*0]
	push r8
	mov r8,QWORD [r8+8+8*0]
	call LB_376
	pop r8 
	push r8
	mov r8,QWORD [r8+8+8*1]
	call LB_531
	pop r8 
	push r8
	mov r8,QWORD [r8+8+8*2]
	call LB_701
	pop r8 
	FREE_RCD 3, r8
	pop r8 
	push r8
	mov r8,QWORD [r8+8+8*1]
	call LB_691
	pop r8 
	FREE_RCD 2, r8
	jmp LB_700
LB_698:
	push r8
	mov r8,QWORD [r8+8+8*0]
	call LB_376
	pop r8 
	push r8
	mov r8,QWORD [r8+8+8*1]
	call LB_531
	pop r8 
	push r8
	mov r8,QWORD [r8+8+8*2]
	call LB_701
	pop r8 
	FREE_RCD 3, r8
	jmp LB_700
LB_700:
	ret
LB_701:
	movzx rax,BYTE [r8+6]
	jmp QWORD [LB_705+8*rax]
LB_705: dq LB_702,LB_703,LB_704
LB_702:
	FREE_LN r8 
	mov r8,QWORD [r8+8]
	call LB_685
	jmp LB_706
LB_703:
	push r8
	mov r8,QWORD [r8+8+8*0]
	call LB_445
	pop r8 
	push r8
	mov r8,QWORD [r8+8+8*1]
	call LB_691
	pop r8 
	FREE_RCD 2, r8
	jmp LB_706
LB_704:
	FREE_LN r8 
	mov r8,QWORD [r8+8]
	call LB_674
	jmp LB_706
LB_706:
	ret
LB_685:
	movzx rax,BYTE [r8+6]
	jmp QWORD [LB_709+8*rax]
LB_709: dq LB_707,LB_708
LB_707:
	push r8
	mov r8,QWORD [r8+8+8*0]
	push r8
	mov r8,QWORD [r8+8+8*0]
	call LB_531
	pop r8 
	push r8
	mov r8,QWORD [r8+8+8*1]
	call LB_701
	pop r8 
	FREE_RCD 2, r8
	pop r8 
	push r8
	mov r8,QWORD [r8+8+8*1]
	call LB_685
	pop r8 
	FREE_RCD 2, r8
	jmp LB_710
LB_708:
	push r8
	mov r8,QWORD [r8+8+8*0]
	call LB_531
	pop r8 
	push r8
	mov r8,QWORD [r8+8+8*1]
	call LB_701
	pop r8 
	FREE_RCD 2, r8
	jmp LB_710
LB_710:
	ret
LB_684:
	movzx rax,BYTE [r8+6]
	jmp QWORD [LB_715+8*rax]
LB_715: dq LB_711,LB_712,LB_713,LB_714
LB_711:
	push r8
	mov r8,QWORD [r8+8+8*0]
	call LB_388
	pop r8 
	push r8
	mov r8,QWORD [r8+8+8*1]
	call LB_445
	pop r8 
	push r8
	mov r8,QWORD [r8+8+8*2]
	call LB_668
	pop r8 
	FREE_RCD 3, r8
	jmp LB_716
LB_712:
	push r8
	mov r8,QWORD [r8+8+8*0]
	call LB_451
	pop r8 
	push r8
	mov r8,QWORD [r8+8+8*1]
	call LB_445
	pop r8 
	push r8
	mov r8,QWORD [r8+8+8*2]
	call LB_668
	pop r8 
	FREE_RCD 3, r8
	jmp LB_716
LB_713:
	push r8
	mov r8,QWORD [r8+8+8*0]
	call LB_389
	pop r8 
	push r8
	mov r8,QWORD [r8+8+8*1]
	call LB_445
	pop r8 
	push r8
	mov r8,QWORD [r8+8+8*2]
	call LB_668
	pop r8 
	FREE_RCD 3, r8
	jmp LB_716
LB_714:
	push r8
	mov r8,QWORD [r8+8+8*0]
	call LB_493
	pop r8 
	push r8
	mov r8,QWORD [r8+8+8*1]
	call LB_492
	pop r8 
	push r8
	mov r8,QWORD [r8+8+8*2]
	call LB_491
	pop r8 
	FREE_RCD 3, r8
	jmp LB_716
LB_716:
	ret
LB_668:
	movzx rax,BYTE [r8+6]
	jmp QWORD [LB_719+8*rax]
LB_719: dq LB_717,LB_718
LB_717:
	FREE_LN r8 
	mov r8,QWORD [r8+8]
	call LB_692
	jmp LB_720
LB_718:
	FREE_LN r8 
	mov r8,QWORD [r8+8]
	call LB_520
	jmp LB_720
LB_720:
	ret
ETR_159: ;; pnt { 0'(= r ) 1'(= a2◂ [ *{ {| l |}a24◂ [ a9◂ [ ]{| l |}]}] ) } ⊢ { 0'(= r ) 1'(= {| l |} ) } : ({ _r64 _lst◂{ _s8 _t24◂_s8◂_t9 } }→{ _r64 _s8 })
;; rsp=0 , %716~1'(= a2◂ [ *{ {| l |}a24◂ [ a9◂ [ ]{| l |}]}] ) %715~0'(= r ) 
;; ?; 1'(= a2◂ [ *{ {| l |}a24◂ [ a9◂ [ ]{| l |}]}] ) ⊢ 0(<2)◂{ { 3'(= {| l |} ) 4'(= a24◂ [ a9◂ [ ]{| l |}] ) } 5'(= a2◂ [ *{ {| l |}a24◂ [ a9◂ [ ]{| l |}]}] ) }
	mov rdi,r14
	cmp BYTE [rdi+6],0
	jnz LB_604
	mov r8, QWORD [r14+8]
	mov r9, QWORD [r8+8]
	mov r10, QWORD [r8+16]
	mov QWORD [GBG_VCT+8*0],r8
	mov r11, QWORD [r14+16]
	mov QWORD [GBG_VCT+8*1],r14
	mov rdi,QWORD [GBG_VCT+8*1]
	mov rax,[SS_RCD_2_TOP]
	mov QWORD [rdi],rax 
	mov QWORD [SS_RCD_2_TOP],rdi
	mov rdi,QWORD [GBG_VCT+8*0]
	mov rax,[SS_RCD_2_TOP]
	mov QWORD [rdi],rax 
	mov QWORD [SS_RCD_2_TOP],rdi
;; rsp=0 , %719~5'(= a2◂ [ *{ {| l |}a24◂ [ a9◂ [ ]{| l |}]}] ) %718~4'(= a24◂ [ a9◂ [ ]{| l |}] ) %717~3'(= {| l |} ) %715~0'(= r ) 
; #11 0'(= r ) ⊢ 0'(= r )
	add r13,1
;; rsp=0 , %720~0'(= r ) %719~5'(= a2◂ [ *{ {| l |}a24◂ [ a9◂ [ ]{| l |}]}] ) %718~4'(= a24◂ [ a9◂ [ ]{| l |}] ) %717~3'(= {| l |} ) 
; #160 { 0'(= r ) 4'(= a24◂ [ a9◂ [ ]{| l |}] ) } ⊢ { 0'(= r ) 1'(= {| l |} ) }
	sub rsp,16
	mov QWORD [rsp+8*0],r9
	mov QWORD [rsp+8*1],r11
; .mov_ptn2 { 0'(= r ) 4'(= a24◂ [ a9◂ [ ]{| l |}] ) } ⊢ { 0'(= r ) 1'(= a24◂ [ a9◂ [ ]{| l |}] ) }
; .mov_ptn 4'(= a24◂ [ a9◂ [ ]{| l |}] ) ⊢ 1'(= a24◂ [ a9◂ [ ]{| l |}] )
	mov rax,r10
	mov r14,rax
	call ETR_160
	mov r11,QWORD [rsp-8+8*2]
	mov r9,QWORD [rsp-8+8*1]
	add rsp,16
;; rsp=0 , %722~1'(= {| l |} ) %721~0'(= r ) %719~5'(= a2◂ [ *{ {| l |}a24◂ [ a9◂ [ ]{| l |}]}] ) %717~3'(= {| l |} ) 
; #12 0'(= r ) ⊢ 0'(= r )
	sub r13,1
;; rsp=0 , %723~0'(= r ) %722~1'(= {| l |} ) %719~5'(= a2◂ [ *{ {| l |}a24◂ [ a9◂ [ ]{| l |}]}] ) %717~3'(= {| l |} ) 
; #159 { 0'(= r ) 5'(= a2◂ [ *{ {| l |}a24◂ [ a9◂ [ ]{| l |}]}] ) } ⊢ { 0'(= r ) 2'(= {| l |} ) }
	sub rsp,16
	mov QWORD [rsp+8*0],r14
	mov QWORD [rsp+8*1],r9
; .mov_ptn2 { 0'(= r ) 5'(= a2◂ [ *{ {| l |}a24◂ [ a9◂ [ ]{| l |}]}] ) } ⊢ { 0'(= r ) 1'(= a2◂ [ *{ {| l |}a24◂ [ a9◂ [ ]{| l |}]}] ) }
; .mov_ptn 5'(= a2◂ [ *{ {| l |}a24◂ [ a9◂ [ ]{| l |}]}] ) ⊢ 1'(= a2◂ [ *{ {| l |}a24◂ [ a9◂ [ ]{| l |}]}] )
	mov rax,r11
	mov r14,rax
	call ETR_159
	mov r9,QWORD [rsp-8+8*2]
	mov r8,r14
	mov r14,QWORD [rsp-8+8*1]
	add rsp,16
;; rsp=0 , %725~2'(= {| l |} ) %724~0'(= r ) %722~1'(= {| l |} ) %717~3'(= {| l |} ) 
; » _^ .. ⊢ ..
; .. //
	mov rdi,0
	mov rsi,r13
	imul rsi,1
	add rdi,rsi 
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[r9]
	add rdi,rax 
	push rax
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[r14]
	add rdi,rax 
	push rax
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[r8]
	add rdi,rax 
	push rax
	add rdi,3
	push rdi 
	call mlc_s8
	pop rdi
	mov r10,rax
	lea rdi,[rax+7+rdi]
	std 
	mov QWORD [tmp],rcx 
	pop rcx
	lea rsi,[r8+7+rcx]
	rep movsb
	pop rcx
	lea rsi,[r14+7+rcx]
	rep movsb
	lea rsi,[LB_605+1-1]
	mov rcx,1
	rep movsb
	pop rcx
	lea rsi,[r9+7+rcx]
	rep movsb
	lea rsi,[LB_606+2-1]
	mov rcx,2
	rep movsb
	mov rax,r13
LB_608:
	cmp rax,0
	jz LB_609
	sub rax,1
	lea rsi,[LB_607+1-1]
	mov rcx,1
	rep movsb 
	jmp LB_608
LB_609:
	mov rcx,QWORD [tmp] 
;; rsp=0 , %730~4'(= {| l |} ) %729~2'(= {| l |} ) %728~1'(= {| l |} ) %727~3'(= {| l |} ) %726~0'(= r ) 
; ∎ { 0'(= r ) 4'(= {| l |} ) }
; .dlt.ptn 2'(= {| l |} )
	mov rdi,r8
	C_PUSH_REGS
	mov r8,rdi
	mov rdi,r8
	call free_s8
	C_POP_REGS
; .dlt.ptn 1'(= {| l |} )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	mov rdi,r8
	call free_s8
	C_POP_REGS
; .dlt.ptn 3'(= {| l |} )
	mov rdi,r9
	C_PUSH_REGS
	mov r8,rdi
	mov rdi,r8
	call free_s8
	C_POP_REGS
; .mov_ptn2 { 0'(= r ) 4'(= {| l |} ) } ⊢ { 0'(= r ) 1'(= {| l |} ) }
; .mov_ptn 4'(= {| l |} ) ⊢ 1'(= {| l |} )
	mov rax,r10
	mov r14,rax
	ret
LB_604:
;; ?; 1'(= a2◂ [ *{ {| l |}a24◂ [ a9◂ [ ]{| l |}]}] ) ⊢ 1(<2)◂{ }
;; rsp=0 , %715~0'(= r ) 
; $ %[ "" ] ⊢ %[ "" ]
;; rsp=0 , %731~%[ "" ] %715~0'(= r ) 
; ∎ { 0'(= r ) %[ "" ] }
; .mov_ptn2 { 0'(= r ) %[ "" ] } ⊢ { 0'(= r ) 1'(= {| l |} ) }
; .mov_ptn %[ "" ] ⊢ 1'(= {| l |} )
	mov rsi,1  
	mov rdi,16
	xor rax,rax 
	C_CALL_SF calloc
	mov QWORD [rax],0
	mov r14,rax
	ret
ETR_160: ;; pnt_etr { 0'(= r ) 1'(= a24◂ [ a9◂ [ ]{| l |}] ) } ⊢ { 0'(= r ) 1'(= {| l |} ) } : ({ _r64 _t24◂_s8◂_t9 }→{ _r64 _s8 })
;; rsp=0 , %733~1'(= a24◂ [ a9◂ [ ]{| l |}] ) %732~0'(= r ) 
;; ?; 1'(= a24◂ [ a9◂ [ ]{| l |}] ) ⊢ 0(<2)◂2'(= a25◂ [ a9◂ [ ]{| l |}] )
	mov rdi,r14
	cmp BYTE [rdi+6],0
	jnz LB_610
	mov QWORD [GBG_VCT+8*0],rdi
	mov r8,QWORD [rdi+8]
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_LN rdi
;; rsp=0 , %734~2'(= a25◂ [ a9◂ [ ]{| l |}] ) %732~0'(= r ) 
; #161 { 0'(= r ) 2'(= a25◂ [ a9◂ [ ]{| l |}] ) } ⊢ { 0'(= r ) 1'(= {| l |} ) }
; .mov_ptn2 { 0'(= r ) 2'(= a25◂ [ a9◂ [ ]{| l |}] ) } ⊢ { 0'(= r ) 1'(= a25◂ [ a9◂ [ ]{| l |}] ) }
; .mov_ptn 2'(= a25◂ [ a9◂ [ ]{| l |}] ) ⊢ 1'(= a25◂ [ a9◂ [ ]{| l |}] )
	mov rax,r8
	mov r14,rax
	call ETR_161
;; rsp=0 , %736~1'(= {| l |} ) %735~0'(= r ) 
; ∎ { 0'(= r ) 1'(= {| l |} ) }
; .mov_ptn2 { 0'(= r ) 1'(= {| l |} ) } ⊢ { 0'(= r ) 1'(= {| l |} ) }
	ret
LB_610:
;; ?; 1'(= a24◂ [ a9◂ [ ]{| l |}] ) ⊢ 1(<2)◂2'(= a26◂ [ a9◂ [ ]{| l |}] )
	mov QWORD [GBG_VCT+8*0],rdi
	mov r8,QWORD [rdi+8]
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_LN rdi
;; rsp=0 , %737~2'(= a26◂ [ a9◂ [ ]{| l |}] ) %732~0'(= r ) 
; #162 { 0'(= r ) 2'(= a26◂ [ a9◂ [ ]{| l |}] ) } ⊢ { 0'(= r ) 1'(= {| l |} ) }
; .mov_ptn2 { 0'(= r ) 2'(= a26◂ [ a9◂ [ ]{| l |}] ) } ⊢ { 0'(= r ) 1'(= a26◂ [ a9◂ [ ]{| l |}] ) }
; .mov_ptn 2'(= a26◂ [ a9◂ [ ]{| l |}] ) ⊢ 1'(= a26◂ [ a9◂ [ ]{| l |}] )
	mov rax,r8
	mov r14,rax
	call ETR_162
;; rsp=0 , %739~1'(= {| l |} ) %738~0'(= r ) 
; ∎ { 0'(= r ) 1'(= {| l |} ) }
; .mov_ptn2 { 0'(= r ) 1'(= {| l |} ) } ⊢ { 0'(= r ) 1'(= {| l |} ) }
	ret
ETR_161: ;; pnt_cnc { 0'(= r ) 1'(= a25◂ [ a9◂ [ ]{| l |}] ) } ⊢ { 0'(= r ) 1'(= {| l |} ) } : ({ _r64 _t25◂_s8◂_t9 }→{ _r64 _s8 })
;; rsp=0 , %741~1'(= a25◂ [ a9◂ [ ]{| l |}] ) %740~0'(= r ) 
;; ?; 1'(= a25◂ [ a9◂ [ ]{| l |}] ) ⊢ 0(<2)◂{ 2'(= a3◂ [ {| l |}] ) 3'(= a27◂ [ ] ) 4'(= a28◂ [ a9◂ [ ]] ) 5'(= a3◂ [ a25◂ [ a9◂ [ ]{| l |}]] ) 6'(= a25◂ [ a9◂ [ ]{| l |}] ) }
	mov rdi,r14
	cmp BYTE [rdi+6],0
	jnz LB_611
	mov r8, QWORD [r14+8]
	mov r9, QWORD [r14+16]
	mov r10, QWORD [r14+24]
	mov r11, QWORD [r14+32]
	mov rcx, QWORD [r14+40]
	mov QWORD [GBG_VCT+8*0],r14
	mov rdi,QWORD [GBG_VCT+8*0]
	mov rax,[SS_RCD_5_TOP]
	mov QWORD [rdi],rax 
	mov QWORD [SS_RCD_5_TOP],rdi
;; rsp=0 , %746~6'(= a25◂ [ a9◂ [ ]{| l |}] ) %745~5'(= a3◂ [ a25◂ [ a9◂ [ ]{| l |}]] ) %744~4'(= a28◂ [ a9◂ [ ]] ) %743~3'(= a27◂ [ ] ) %742~2'(= a3◂ [ {| l |}] ) %740~0'(= r ) 
; #161 { 0'(= r ) 6'(= a25◂ [ a9◂ [ ]{| l |}] ) } ⊢ { 0'(= r ) 1'(= {| l |} ) }
	sub rsp,32
	mov QWORD [rsp+8*0],r8
	mov QWORD [rsp+8*1],r9
	mov QWORD [rsp+8*2],r10
	mov QWORD [rsp+8*3],r11
; .mov_ptn2 { 0'(= r ) 6'(= a25◂ [ a9◂ [ ]{| l |}] ) } ⊢ { 0'(= r ) 1'(= a25◂ [ a9◂ [ ]{| l |}] ) }
; .mov_ptn 6'(= a25◂ [ a9◂ [ ]{| l |}] ) ⊢ 1'(= a25◂ [ a9◂ [ ]{| l |}] )
	mov rax,rcx
	mov r14,rax
	call ETR_161
	mov r11,QWORD [rsp-8+8*4]
	mov r10,QWORD [rsp-8+8*3]
	mov r9,QWORD [rsp-8+8*2]
	mov r8,QWORD [rsp-8+8*1]
	add rsp,32
;; rsp=0 , %748~1'(= {| l |} ) %747~0'(= r ) %745~5'(= a3◂ [ a25◂ [ a9◂ [ ]{| l |}]] ) %744~4'(= a28◂ [ a9◂ [ ]] ) %743~3'(= a27◂ [ ] ) %742~2'(= a3◂ [ {| l |}] ) 
; » _^ .. ⊢ ..
; .. //
	mov rdi,0
	mov rsi,r13
	imul rsi,1
	add rdi,rsi 
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[r14]
	add rdi,rax 
	push rax
	add rdi,7
	push rdi 
	call mlc_s8
	pop rdi
	mov rcx,rax
	lea rdi,[rax+7+rdi]
	std 
	mov QWORD [tmp],rcx 
	pop rcx
	lea rsi,[r14+7+rcx]
	rep movsb
	lea rsi,[LB_612+7-1]
	mov rcx,7
	rep movsb
	mov rax,r13
LB_614:
	cmp rax,0
	jz LB_615
	sub rax,1
	lea rsi,[LB_613+1-1]
	mov rcx,1
	rep movsb 
	jmp LB_614
LB_615:
	mov rcx,QWORD [tmp] 
;; rsp=0 , %751~6'(= {| l |} ) %750~1'(= {| l |} ) %749~0'(= r ) %745~5'(= a3◂ [ a25◂ [ a9◂ [ ]{| l |}]] ) %744~4'(= a28◂ [ a9◂ [ ]] ) %743~3'(= a27◂ [ ] ) %742~2'(= a3◂ [ {| l |}] ) 
; ∎ { 0'(= r ) 6'(= {| l |} ) }
; .dlt.ptn 1'(= {| l |} )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	mov rdi,r8
	call free_s8
	C_POP_REGS
; .dlt.ptn 5'(= a3◂ [ a25◂ [ a9◂ [ ]{| l |}]] )
	mov rdi,r11
	C_PUSH_REGS
	mov r8,rdi
	call LB_616
	C_POP_REGS
; .dlt.ptn 4'(= a28◂ [ a9◂ [ ]] )
	mov rdi,r10
	C_PUSH_REGS
	mov r8,rdi
	call LB_617
	C_POP_REGS
; .dlt.ptn 3'(= a27◂ [ ] )
	mov rdi,r9
	C_PUSH_REGS
	mov r8,rdi
	call LB_618
	C_POP_REGS
; .dlt.ptn 2'(= a3◂ [ {| l |}] )
	mov rdi,r8
	C_PUSH_REGS
	mov r8,rdi
	call LB_324
	C_POP_REGS
; .mov_ptn2 { 0'(= r ) 6'(= {| l |} ) } ⊢ { 0'(= r ) 1'(= {| l |} ) }
; .mov_ptn 6'(= {| l |} ) ⊢ 1'(= {| l |} )
	mov rax,rcx
	mov r14,rax
	ret
LB_611:
;; ?; 1'(= a25◂ [ a9◂ [ ]{| l |}] ) ⊢ 1(<2)◂{ 2'(= a3◂ [ {| l |}] ) 3'(= a27◂ [ ] ) 4'(= a28◂ [ a9◂ [ ]] ) 5'(= a3◂ [ a25◂ [ a9◂ [ ]{| l |}]] ) }
	mov r8, QWORD [r14+8]
	mov r9, QWORD [r14+16]
	mov r10, QWORD [r14+24]
	mov r11, QWORD [r14+32]
	mov QWORD [GBG_VCT+8*0],r14
	mov rdi,QWORD [GBG_VCT+8*0]
	mov rax,[SS_RCD_4_TOP]
	mov QWORD [rdi],rax 
	mov QWORD [SS_RCD_4_TOP],rdi
;; rsp=0 , %755~5'(= a3◂ [ a25◂ [ a9◂ [ ]{| l |}]] ) %754~4'(= a28◂ [ a9◂ [ ]] ) %753~3'(= a27◂ [ ] ) %752~2'(= a3◂ [ {| l |}] ) %740~0'(= r ) 
; » _^ .. ⊢ ..
; .. //
	mov rdi,0
	mov rsi,r13
	imul rsi,1
	add rdi,rsi 
	add rdi,9
	push rdi 
	call mlc_s8
	pop rdi
	mov r14,rax
	lea rdi,[rax+7+rdi]
	std 
	mov QWORD [tmp],rcx 
	lea rsi,[LB_653+9-1]
	mov rcx,9
	rep movsb
	mov rax,r13
LB_655:
	cmp rax,0
	jz LB_656
	sub rax,1
	lea rsi,[LB_654+1-1]
	mov rcx,1
	rep movsb 
	jmp LB_655
LB_656:
	mov rcx,QWORD [tmp] 
;; rsp=0 , %757~1'(= {| l |} ) %756~0'(= r ) %755~5'(= a3◂ [ a25◂ [ a9◂ [ ]{| l |}]] ) %754~4'(= a28◂ [ a9◂ [ ]] ) %753~3'(= a27◂ [ ] ) %752~2'(= a3◂ [ {| l |}] ) 
; ∎ { 0'(= r ) 1'(= {| l |} ) }
; .dlt.ptn 5'(= a3◂ [ a25◂ [ a9◂ [ ]{| l |}]] )
	mov rdi,r11
	C_PUSH_REGS
	mov r8,rdi
	call LB_616
	C_POP_REGS
; .dlt.ptn 4'(= a28◂ [ a9◂ [ ]] )
	mov rdi,r10
	C_PUSH_REGS
	mov r8,rdi
	call LB_617
	C_POP_REGS
; .dlt.ptn 3'(= a27◂ [ ] )
	mov rdi,r9
	C_PUSH_REGS
	mov r8,rdi
	call LB_618
	C_POP_REGS
; .dlt.ptn 2'(= a3◂ [ {| l |}] )
	mov rdi,r8
	C_PUSH_REGS
	mov r8,rdi
	call LB_324
	C_POP_REGS
; .mov_ptn2 { 0'(= r ) 1'(= {| l |} ) } ⊢ { 0'(= r ) 1'(= {| l |} ) }
	ret
ETR_162: ;; pnt_act { 0'(= r ) 1'(= a26◂ [ a9◂ [ ]{| l |}] ) } ⊢ { 0'(= r ) 1'(= {| l |} ) } : ({ _r64 _t26◂_s8◂_t9 }→{ _r64 _s8 })
;; rsp=0 , %759~1'(= a26◂ [ a9◂ [ ]{| l |}] ) %758~0'(= r ) 
;; ?; 1'(= a26◂ [ a9◂ [ ]{| l |}] ) ⊢ 0(<2)◂{ 2'(= a2◂ [ a13◂ [ {| l |}]] ) 3'(= a8◂ [ a13◂ [ {| l |}]] ) 4'(= a17◂ [ a9◂ [ ]{| l |}] ) 5'(= a27◂ [ ] ) 6'(= a28◂ [ a9◂ [ ]] ) 7'(= a3◂ [ *{ a8◂ [ a13◂ [ {| l |}]]a26◂ [ a9◂ [ ]{| l |}]}] ) 8'(= a26◂ [ a9◂ [ ]{| l |}] ) }
	mov rdi,r14
	cmp BYTE [rdi+6],0
	jnz LB_657
	mov r8, QWORD [r14+8]
	mov r9, QWORD [r14+16]
	mov r10, QWORD [r14+24]
	mov r11, QWORD [r14+32]
	mov rcx, QWORD [r14+40]
	mov rdx, QWORD [r14+48]
	sub rsp,8
	MOV_RDI QWORD [rsp-8+8*1], QWORD [r14+56]
	mov QWORD [GBG_VCT+8*0],r14
	mov rdi,QWORD [GBG_VCT+8*0]
	mov rax,[SS_RCD_7_TOP]
	mov QWORD [rdi],rax 
	mov QWORD [SS_RCD_7_TOP],rdi
;; rsp=1 , %766~8'(= a26◂ [ a9◂ [ ]{| l |}] ) %765~7'(= a3◂ [ *{ a8◂ [ a13◂ [ {| l |}]]a26◂ [ a9◂ [ ]{| l |}]}] ) %764~6'(= a28◂ [ a9◂ [ ]] ) %763~5'(= a27◂ [ ] ) %762~4'(= a17◂ [ a9◂ [ ]{| l |}] ) %761~3'(= a8◂ [ a13◂ [ {| l |}]] ) %760~2'(= a2◂ [ a13◂ [ {| l |}]] ) %758~0'(= r ) 
; #101 3'(= a8◂ [ a13◂ [ {| l |}]] ) ⊢ 1'(= {| l |} )
	sub rsp,48
	mov QWORD [rsp+8*0],r13
	mov QWORD [rsp+8*1],r8
	mov QWORD [rsp+8*2],r10
	mov QWORD [rsp+8*3],r11
	mov QWORD [rsp+8*4],rcx
	mov QWORD [rsp+8*5],rdx
; .mov_ptn2 3'(= a8◂ [ a13◂ [ {| l |}]] ) ⊢ 0'(= a8◂ [ a13◂ [ {| l |}]] )
; .mov_ptn 3'(= a8◂ [ a13◂ [ {| l |}]] ) ⊢ 0'(= a8◂ [ a13◂ [ {| l |}]] )
	mov rax,r9
	mov r13,rax
	call ETR_101
	mov rdx,QWORD [rsp-8+8*6]
	mov rcx,QWORD [rsp-8+8*5]
	mov r11,QWORD [rsp-8+8*4]
	mov r10,QWORD [rsp-8+8*3]
	mov r8,QWORD [rsp-8+8*2]
	mov r14,r13
	mov r13,QWORD [rsp-8+8*1]
	add rsp,48
;; rsp=1 , %767~1'(= {| l |} ) %766~8'(= a26◂ [ a9◂ [ ]{| l |}] ) %765~7'(= a3◂ [ *{ a8◂ [ a13◂ [ {| l |}]]a26◂ [ a9◂ [ ]{| l |}]}] ) %764~6'(= a28◂ [ a9◂ [ ]] ) %763~5'(= a27◂ [ ] ) %762~4'(= a17◂ [ a9◂ [ ]{| l |}] ) %760~2'(= a2◂ [ a13◂ [ {| l |}]] ) %758~0'(= r ) 
; #11 0'(= r ) ⊢ 0'(= r )
	add r13,1
;; rsp=1 , %768~0'(= r ) %767~1'(= {| l |} ) %766~8'(= a26◂ [ a9◂ [ ]{| l |}] ) %765~7'(= a3◂ [ *{ a8◂ [ a13◂ [ {| l |}]]a26◂ [ a9◂ [ ]{| l |}]}] ) %764~6'(= a28◂ [ a9◂ [ ]] ) %763~5'(= a27◂ [ ] ) %762~4'(= a17◂ [ a9◂ [ ]{| l |}] ) %760~2'(= a2◂ [ a13◂ [ {| l |}]] ) 
; #134 { 0'(= r ) 4'(= a17◂ [ a9◂ [ ]{| l |}] ) } ⊢ { 0'(= r ) 3'(= {| l |} ) }
	sub rsp,40
	mov QWORD [rsp+8*0],r14
	mov QWORD [rsp+8*1],r8
	mov QWORD [rsp+8*2],r11
	mov QWORD [rsp+8*3],rcx
	mov QWORD [rsp+8*4],rdx
; .mov_ptn2 { 0'(= r ) 4'(= a17◂ [ a9◂ [ ]{| l |}] ) } ⊢ { 0'(= r ) 1'(= a17◂ [ a9◂ [ ]{| l |}] ) }
; .mov_ptn 4'(= a17◂ [ a9◂ [ ]{| l |}] ) ⊢ 1'(= a17◂ [ a9◂ [ ]{| l |}] )
	mov rax,r10
	mov r14,rax
	call ETR_134
	mov rdx,QWORD [rsp-8+8*5]
	mov rcx,QWORD [rsp-8+8*4]
	mov r11,QWORD [rsp-8+8*3]
	mov r8,QWORD [rsp-8+8*2]
	mov r9,r14
	mov r14,QWORD [rsp-8+8*1]
	add rsp,40
;; rsp=1 , %770~3'(= {| l |} ) %769~0'(= r ) %767~1'(= {| l |} ) %766~8'(= a26◂ [ a9◂ [ ]{| l |}] ) %765~7'(= a3◂ [ *{ a8◂ [ a13◂ [ {| l |}]]a26◂ [ a9◂ [ ]{| l |}]}] ) %764~6'(= a28◂ [ a9◂ [ ]] ) %763~5'(= a27◂ [ ] ) %760~2'(= a2◂ [ a13◂ [ {| l |}]] ) 
; #12 0'(= r ) ⊢ 0'(= r )
	sub r13,1
;; rsp=1 , %771~0'(= r ) %770~3'(= {| l |} ) %767~1'(= {| l |} ) %766~8'(= a26◂ [ a9◂ [ ]{| l |}] ) %765~7'(= a3◂ [ *{ a8◂ [ a13◂ [ {| l |}]]a26◂ [ a9◂ [ ]{| l |}]}] ) %764~6'(= a28◂ [ a9◂ [ ]] ) %763~5'(= a27◂ [ ] ) %760~2'(= a2◂ [ a13◂ [ {| l |}]] ) 
; #162 { 0'(= r ) 8'(= a26◂ [ a9◂ [ ]{| l |}] ) } ⊢ { 0'(= r ) 4'(= {| l |} ) }
	sub rsp,48
	mov QWORD [rsp+8*0],r14
	mov QWORD [rsp+8*1],r8
	mov QWORD [rsp+8*2],r9
	mov QWORD [rsp+8*3],r11
	mov QWORD [rsp+8*4],rcx
	mov QWORD [rsp+8*5],rdx
; .mov_ptn2 { 0'(= r ) 8'(= a26◂ [ a9◂ [ ]{| l |}] ) } ⊢ { 0'(= r ) 1'(= a26◂ [ a9◂ [ ]{| l |}] ) }
; .mov_ptn 8'(= a26◂ [ a9◂ [ ]{| l |}] ) ⊢ 1'(= a26◂ [ a9◂ [ ]{| l |}] )
	mov rax,QWORD [rsp-8+8*7]
	mov r14,rax
	call ETR_162
	mov rdx,QWORD [rsp-8+8*6]
	mov rcx,QWORD [rsp-8+8*5]
	mov r11,QWORD [rsp-8+8*4]
	mov r9,QWORD [rsp-8+8*3]
	mov r8,QWORD [rsp-8+8*2]
	mov r10,r14
	mov r14,QWORD [rsp-8+8*1]
	add rsp,56
;; rsp=0 , %773~4'(= {| l |} ) %772~0'(= r ) %770~3'(= {| l |} ) %767~1'(= {| l |} ) %765~7'(= a3◂ [ *{ a8◂ [ a13◂ [ {| l |}]]a26◂ [ a9◂ [ ]{| l |}]}] ) %764~6'(= a28◂ [ a9◂ [ ]] ) %763~5'(= a27◂ [ ] ) %760~2'(= a2◂ [ a13◂ [ {| l |}]] ) 
; » _^ .. ⊢ ..
; .. //
	sub rsp,8
	mov rdi,0
	mov rsi,r13
	imul rsi,1
	add rdi,rsi 
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[r14]
	add rdi,rax 
	push rax
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[r9]
	add rdi,rax 
	push rax
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[r10]
	add rdi,rax 
	push rax
	add rdi,12
	push rdi 
	call mlc_s8
	pop rdi
	mov QWORD [rsp-8+8*4],rax
	lea rdi,[rax+7+rdi]
	std 
	mov QWORD [tmp],rcx 
	pop rcx
	lea rsi,[r10+7+rcx]
	rep movsb
	pop rcx
	lea rsi,[r9+7+rcx]
	rep movsb
	lea rsi,[LB_658+1-1]
	mov rcx,1
	rep movsb
	pop rcx
	lea rsi,[r14+7+rcx]
	rep movsb
	lea rsi,[LB_659+11-1]
	mov rcx,11
	rep movsb
	mov rax,r13
LB_661:
	cmp rax,0
	jz LB_662
	sub rax,1
	lea rsi,[LB_660+1-1]
	mov rcx,1
	rep movsb 
	jmp LB_661
LB_662:
	mov rcx,QWORD [tmp] 
;; rsp=1 , %778~8'(= {| l |} ) %777~4'(= {| l |} ) %776~3'(= {| l |} ) %775~1'(= {| l |} ) %774~0'(= r ) %765~7'(= a3◂ [ *{ a8◂ [ a13◂ [ {| l |}]]a26◂ [ a9◂ [ ]{| l |}]}] ) %764~6'(= a28◂ [ a9◂ [ ]] ) %763~5'(= a27◂ [ ] ) %760~2'(= a2◂ [ a13◂ [ {| l |}]] ) 
; ∎ { 0'(= r ) 8'(= {| l |} ) }
; .dlt.ptn 4'(= {| l |} )
	mov rdi,r10
	C_PUSH_REGS
	mov r8,rdi
	mov rdi,r8
	call free_s8
	C_POP_REGS
; .dlt.ptn 3'(= {| l |} )
	mov rdi,r9
	C_PUSH_REGS
	mov r8,rdi
	mov rdi,r8
	call free_s8
	C_POP_REGS
; .dlt.ptn 1'(= {| l |} )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	mov rdi,r8
	call free_s8
	C_POP_REGS
; .dlt.ptn 7'(= a3◂ [ *{ a8◂ [ a13◂ [ {| l |}]]a26◂ [ a9◂ [ ]{| l |}]}] )
	mov rdi,rdx
	C_PUSH_REGS
	mov r8,rdi
	call LB_663
	C_POP_REGS
; .dlt.ptn 6'(= a28◂ [ a9◂ [ ]] )
	mov rdi,rcx
	C_PUSH_REGS
	mov r8,rdi
	call LB_617
	C_POP_REGS
; .dlt.ptn 5'(= a27◂ [ ] )
	mov rdi,r11
	C_PUSH_REGS
	mov r8,rdi
	call LB_618
	C_POP_REGS
; .dlt.ptn 2'(= a2◂ [ a13◂ [ {| l |}]] )
	mov rdi,r8
	C_PUSH_REGS
	mov r8,rdi
	call LB_491
	C_POP_REGS
; .mov_ptn2 { 0'(= r ) 8'(= {| l |} ) } ⊢ { 0'(= r ) 1'(= {| l |} ) }
; .mov_ptn 8'(= {| l |} ) ⊢ 1'(= {| l |} )
	mov rax,QWORD [rsp-8+8*1]
	mov r14,rax
	add rsp,8
	ret
LB_657:
;; ?; 1'(= a26◂ [ a9◂ [ ]{| l |}] ) ⊢ 1(<2)◂{ 2'(= a2◂ [ a13◂ [ {| l |}]] ) 3'(= a8◂ [ a13◂ [ {| l |}]] ) 4'(= a17◂ [ a9◂ [ ]{| l |}] ) 5'(= a27◂ [ ] ) 6'(= a28◂ [ a9◂ [ ]] ) 7'(= a3◂ [ *{ a8◂ [ a13◂ [ {| l |}]]a26◂ [ a9◂ [ ]{| l |}]}] ) }
	mov r8, QWORD [r14+8]
	mov r9, QWORD [r14+16]
	mov r10, QWORD [r14+24]
	mov r11, QWORD [r14+32]
	mov rcx, QWORD [r14+40]
	mov rdx, QWORD [r14+48]
	mov QWORD [GBG_VCT+8*0],r14
	mov rdi,QWORD [GBG_VCT+8*0]
	mov rax,[SS_RCD_6_TOP]
	mov QWORD [rdi],rax 
	mov QWORD [SS_RCD_6_TOP],rdi
;; rsp=0 , %784~7'(= a3◂ [ *{ a8◂ [ a13◂ [ {| l |}]]a26◂ [ a9◂ [ ]{| l |}]}] ) %783~6'(= a28◂ [ a9◂ [ ]] ) %782~5'(= a27◂ [ ] ) %781~4'(= a17◂ [ a9◂ [ ]{| l |}] ) %780~3'(= a8◂ [ a13◂ [ {| l |}]] ) %779~2'(= a2◂ [ a13◂ [ {| l |}]] ) %758~0'(= r ) 
; #101 3'(= a8◂ [ a13◂ [ {| l |}]] ) ⊢ 1'(= {| l |} )
	sub rsp,48
	mov QWORD [rsp+8*0],r13
	mov QWORD [rsp+8*1],r8
	mov QWORD [rsp+8*2],r10
	mov QWORD [rsp+8*3],r11
	mov QWORD [rsp+8*4],rcx
	mov QWORD [rsp+8*5],rdx
; .mov_ptn2 3'(= a8◂ [ a13◂ [ {| l |}]] ) ⊢ 0'(= a8◂ [ a13◂ [ {| l |}]] )
; .mov_ptn 3'(= a8◂ [ a13◂ [ {| l |}]] ) ⊢ 0'(= a8◂ [ a13◂ [ {| l |}]] )
	mov rax,r9
	mov r13,rax
	call ETR_101
	mov rdx,QWORD [rsp-8+8*6]
	mov rcx,QWORD [rsp-8+8*5]
	mov r11,QWORD [rsp-8+8*4]
	mov r10,QWORD [rsp-8+8*3]
	mov r8,QWORD [rsp-8+8*2]
	mov r14,r13
	mov r13,QWORD [rsp-8+8*1]
	add rsp,48
;; rsp=0 , %785~1'(= {| l |} ) %784~7'(= a3◂ [ *{ a8◂ [ a13◂ [ {| l |}]]a26◂ [ a9◂ [ ]{| l |}]}] ) %783~6'(= a28◂ [ a9◂ [ ]] ) %782~5'(= a27◂ [ ] ) %781~4'(= a17◂ [ a9◂ [ ]{| l |}] ) %779~2'(= a2◂ [ a13◂ [ {| l |}]] ) %758~0'(= r ) 
; #11 0'(= r ) ⊢ 0'(= r )
	add r13,1
;; rsp=0 , %786~0'(= r ) %785~1'(= {| l |} ) %784~7'(= a3◂ [ *{ a8◂ [ a13◂ [ {| l |}]]a26◂ [ a9◂ [ ]{| l |}]}] ) %783~6'(= a28◂ [ a9◂ [ ]] ) %782~5'(= a27◂ [ ] ) %781~4'(= a17◂ [ a9◂ [ ]{| l |}] ) %779~2'(= a2◂ [ a13◂ [ {| l |}]] ) 
; #134 { 0'(= r ) 4'(= a17◂ [ a9◂ [ ]{| l |}] ) } ⊢ { 0'(= r ) 3'(= {| l |} ) }
	sub rsp,40
	mov QWORD [rsp+8*0],r14
	mov QWORD [rsp+8*1],r8
	mov QWORD [rsp+8*2],r11
	mov QWORD [rsp+8*3],rcx
	mov QWORD [rsp+8*4],rdx
; .mov_ptn2 { 0'(= r ) 4'(= a17◂ [ a9◂ [ ]{| l |}] ) } ⊢ { 0'(= r ) 1'(= a17◂ [ a9◂ [ ]{| l |}] ) }
; .mov_ptn 4'(= a17◂ [ a9◂ [ ]{| l |}] ) ⊢ 1'(= a17◂ [ a9◂ [ ]{| l |}] )
	mov rax,r10
	mov r14,rax
	call ETR_134
	mov rdx,QWORD [rsp-8+8*5]
	mov rcx,QWORD [rsp-8+8*4]
	mov r11,QWORD [rsp-8+8*3]
	mov r8,QWORD [rsp-8+8*2]
	mov r9,r14
	mov r14,QWORD [rsp-8+8*1]
	add rsp,40
;; rsp=0 , %788~3'(= {| l |} ) %787~0'(= r ) %785~1'(= {| l |} ) %784~7'(= a3◂ [ *{ a8◂ [ a13◂ [ {| l |}]]a26◂ [ a9◂ [ ]{| l |}]}] ) %783~6'(= a28◂ [ a9◂ [ ]] ) %782~5'(= a27◂ [ ] ) %779~2'(= a2◂ [ a13◂ [ {| l |}]] ) 
; #12 0'(= r ) ⊢ 0'(= r )
	sub r13,1
;; rsp=0 , %789~0'(= r ) %788~3'(= {| l |} ) %785~1'(= {| l |} ) %784~7'(= a3◂ [ *{ a8◂ [ a13◂ [ {| l |}]]a26◂ [ a9◂ [ ]{| l |}]}] ) %783~6'(= a28◂ [ a9◂ [ ]] ) %782~5'(= a27◂ [ ] ) %779~2'(= a2◂ [ a13◂ [ {| l |}]] ) 
; » _^ .. ⊢ ..
; .. //
	mov rdi,0
	mov rsi,r13
	imul rsi,1
	add rdi,rsi 
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[r14]
	add rdi,rax 
	push rax
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[r9]
	add rdi,rax 
	push rax
	add rdi,13
	push rdi 
	call mlc_s8
	pop rdi
	mov r10,rax
	lea rdi,[rax+7+rdi]
	std 
	mov QWORD [tmp],rcx 
	pop rcx
	lea rsi,[r9+7+rcx]
	rep movsb
	lea rsi,[LB_721+1-1]
	mov rcx,1
	rep movsb
	pop rcx
	lea rsi,[r14+7+rcx]
	rep movsb
	lea rsi,[LB_722+12-1]
	mov rcx,12
	rep movsb
	mov rax,r13
LB_724:
	cmp rax,0
	jz LB_725
	sub rax,1
	lea rsi,[LB_723+1-1]
	mov rcx,1
	rep movsb 
	jmp LB_724
LB_725:
	mov rcx,QWORD [tmp] 
;; rsp=0 , %793~4'(= {| l |} ) %792~3'(= {| l |} ) %791~1'(= {| l |} ) %790~0'(= r ) %784~7'(= a3◂ [ *{ a8◂ [ a13◂ [ {| l |}]]a26◂ [ a9◂ [ ]{| l |}]}] ) %783~6'(= a28◂ [ a9◂ [ ]] ) %782~5'(= a27◂ [ ] ) %779~2'(= a2◂ [ a13◂ [ {| l |}]] ) 
; ∎ { 0'(= r ) 4'(= {| l |} ) }
; .dlt.ptn 3'(= {| l |} )
	mov rdi,r9
	C_PUSH_REGS
	mov r8,rdi
	mov rdi,r8
	call free_s8
	C_POP_REGS
; .dlt.ptn 1'(= {| l |} )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	mov rdi,r8
	call free_s8
	C_POP_REGS
; .dlt.ptn 7'(= a3◂ [ *{ a8◂ [ a13◂ [ {| l |}]]a26◂ [ a9◂ [ ]{| l |}]}] )
	mov rdi,rdx
	C_PUSH_REGS
	mov r8,rdi
	call LB_663
	C_POP_REGS
; .dlt.ptn 6'(= a28◂ [ a9◂ [ ]] )
	mov rdi,rcx
	C_PUSH_REGS
	mov r8,rdi
	call LB_617
	C_POP_REGS
; .dlt.ptn 5'(= a27◂ [ ] )
	mov rdi,r11
	C_PUSH_REGS
	mov r8,rdi
	call LB_618
	C_POP_REGS
; .dlt.ptn 2'(= a2◂ [ a13◂ [ {| l |}]] )
	mov rdi,r8
	C_PUSH_REGS
	mov r8,rdi
	call LB_491
	C_POP_REGS
; .mov_ptn2 { 0'(= r ) 4'(= {| l |} ) } ⊢ { 0'(= r ) 1'(= {| l |} ) }
; .mov_ptn 4'(= {| l |} ) ⊢ 1'(= {| l |} )
	mov rax,r10
	mov r14,rax
	ret
ETR_165: ;; act_regs { } ⊢ 0'(= a2◂ [ a13◂ [ {| l |}]] ) : ({ }→_lst◂_t13◂_s8)
;; rsp=0 , 
; $ %[ "_r" ] ⊢ %[ "_r" ]
;; rsp=0 , %814~%[ "_r" ] 
; $ %[ "_n" ] ⊢ %[ "_n" ]
;; rsp=0 , %815~%[ "_n" ] %814~%[ "_r" ] 
; #91 %[ "_r" ] ⊢ 1(<2)◂%[ "_r" ]
;; rsp=0 , %816~1(<2)◂%[ "_r" ] %815~%[ "_n" ] 
; #91 %[ "_n" ] ⊢ 1(<2)◂%[ "_n" ]
;; rsp=0 , %817~1(<2)◂%[ "_n" ] %816~1(<2)◂%[ "_r" ] 
; #22 { } ⊢ 1(<2)◂{ }
;; rsp=0 , %818~1(<2)◂{ } %817~1(<2)◂%[ "_n" ] %816~1(<2)◂%[ "_r" ] 
; #23 { 1(<2)◂%[ "_r" ] 1(<2)◂{ } } ⊢ 0(<2)◂{ 1(<2)◂%[ "_r" ] 1(<2)◂{ } }
;; rsp=0 , %819~0(<2)◂{ 1(<2)◂%[ "_r" ] 1(<2)◂{ } } %817~1(<2)◂%[ "_n" ] 
; #23 { 1(<2)◂%[ "_n" ] 0(<2)◂{ 1(<2)◂%[ "_r" ] 1(<2)◂{ } } } ⊢ 0(<2)◂{ 1(<2)◂%[ "_n" ] 0(<2)◂{ 1(<2)◂%[ "_r" ] 1(<2)◂{ } } }
;; rsp=0 , %820~0(<2)◂{ 1(<2)◂%[ "_n" ] 0(<2)◂{ 1(<2)◂%[ "_r" ] 1(<2)◂{ } } } 
; ∎ 0(<2)◂{ 1(<2)◂%[ "_n" ] 0(<2)◂{ 1(<2)◂%[ "_r" ] 1(<2)◂{ } } }
; .mov_ptn2 0(<2)◂{ 1(<2)◂%[ "_n" ] 0(<2)◂{ 1(<2)◂%[ "_r" ] 1(<2)◂{ } } } ⊢ 0'(= a2◂ [ a13◂ [ {| l |}]] )
; .mov_ptn 0(<2)◂{ 1(<2)◂%[ "_n" ] 0(<2)◂{ 1(<2)◂%[ "_r" ] 1(<2)◂{ } } } ⊢ 0'(= a2◂ [ a13◂ [ {| l |}]] )
	ALC_RCD 2, rax
	mov r14,rax
	mov rsi,1  
	mov rdi,16
	xor rax,rax 
	C_CALL_SF calloc
	mov QWORD [rax],2
	mov BYTE [rax+8+0],95
	mov BYTE [rax+8+1],110
	mov BYTE [rax+6],1
	mov QWORD [r14+8+8*0],rax
	ALC_RCD 2, rax
	mov r8,rax
	mov rsi,1  
	mov rdi,16
	xor rax,rax 
	C_CALL_SF calloc
	mov QWORD [rax],2
	mov BYTE [rax+8+0],95
	mov BYTE [rax+8+1],114
	mov BYTE [rax+6],1
	mov QWORD [r8+8+8*0],rax
	mov rax,unt 
	mov rax,unt_1
	mov QWORD [r8+8+8*1],rax
	mov rax,r8
	mov BYTE [rax+6],0
	mov QWORD [r14+8+8*1],rax
	mov rax,r14
	mov BYTE [rax+6],0
	mov r13,rax
	ret
LB_766:
	movzx rax,BYTE [r8+6]
	jmp QWORD [LB_769+8*rax]
LB_769: dq LB_767,LB_768
LB_767:
	push r8
	mov r8,QWORD [r8+8+8*0]
	mov rdi,r8
	call free_s8
	pop r8 
	push r8
	mov r8,QWORD [r8+8+8*1]
	call LB_766
	pop r8 
	FREE_RCD 2, r8
	jmp LB_770
LB_768:
	jmp LB_770
LB_770:
	ret
LB_776:
	movzx rax,BYTE [r8+6]
	jmp QWORD [LB_782+8*rax]
LB_782: dq LB_777,LB_778,LB_779,LB_780,LB_781
LB_777:
	FREE_LN r8 
	mov r8,QWORD [r8+8]
	call LB_784
	jmp LB_783
LB_778:
	push r8
	mov r8,QWORD [r8+8+8*0]
	call LB_776
	pop r8 
	push r8
	mov r8,QWORD [r8+8+8*1]
	call LB_776
	pop r8 
	FREE_RCD 2, r8
	jmp LB_783
LB_779:
	push r8
	mov r8,QWORD [r8+8+8*0]
	call LB_776
	pop r8 
	push r8
	mov r8,QWORD [r8+8+8*1]
	call LB_776
	pop r8 
	FREE_RCD 2, r8
	jmp LB_783
LB_780:
	FREE_LN r8 
	mov r8,QWORD [r8+8]
	call LB_388
	jmp LB_783
LB_781:
	mov rdi,r8
	call free_s8
	jmp LB_783
LB_783:
	ret
LB_784:
	movzx rax,BYTE [r8+6]
	jmp QWORD [LB_787+8*rax]
LB_787: dq LB_785,LB_786
LB_785:
	push r8
	mov r8,QWORD [r8+8+8*0]
	call LB_776
	pop r8 
	push r8
	mov r8,QWORD [r8+8+8*1]
	call LB_784
	pop r8 
	FREE_RCD 2, r8
	jmp LB_788
LB_786:
	jmp LB_788
LB_788:
	ret
LB_834:
	movzx rax,BYTE [r8+6]
	jmp QWORD [LB_837+8*rax]
LB_837: dq LB_835,LB_836
LB_835:
	FREE_LN r8 
	mov r8,QWORD [r8+8]
	call LB_776
	jmp LB_838
LB_836:
	jmp LB_838
LB_838:
	ret
ETR_179: ;; pnt { 0'(= r ) 1'(= a2◂ [ a31◂ [ ]] ) } ⊢ { 0'(= r ) 1'(= {| l |} ) } : ({ _r64 _lst◂_t31 }→{ _r64 _s8 })
;; rsp=0 , %822~1'(= a2◂ [ a31◂ [ ]] ) %821~0'(= r ) 
;; ?; 1'(= a2◂ [ a31◂ [ ]] ) ⊢ 1(<2)◂{ }
	mov rdi,r14
	cmp BYTE [rdi+6],1
	jnz LB_726
;; rsp=0 , %821~0'(= r ) 
; $ %[ "" ] ⊢ %[ "" ]
;; rsp=0 , %823~%[ "" ] %821~0'(= r ) 
; ∎ { 0'(= r ) %[ "" ] }
; .mov_ptn2 { 0'(= r ) %[ "" ] } ⊢ { 0'(= r ) 1'(= {| l |} ) }
; .mov_ptn %[ "" ] ⊢ 1'(= {| l |} )
	mov rsi,1  
	mov rdi,16
	xor rax,rax 
	C_CALL_SF calloc
	mov QWORD [rax],0
	mov r14,rax
	ret
LB_726:
;; ?; 1'(= a2◂ [ a31◂ [ ]] ) ⊢ 0(<2)◂{ 2'(= a31◂ [ ] ) 3'(= a2◂ [ a31◂ [ ]] ) }
	mov r8, QWORD [r14+8]
	mov r9, QWORD [r14+16]
	mov QWORD [GBG_VCT+8*0],r14
	mov rdi,QWORD [GBG_VCT+8*0]
	mov rax,[SS_RCD_2_TOP]
	mov QWORD [rdi],rax 
	mov QWORD [SS_RCD_2_TOP],rdi
;; rsp=0 , %825~3'(= a2◂ [ a31◂ [ ]] ) %824~2'(= a31◂ [ ] ) %821~0'(= r ) 
; #180 { 0'(= r ) 2'(= a31◂ [ ] ) } ⊢ { 0'(= r ) 1'(= {| l |} ) }
	sub rsp,8
	mov QWORD [rsp+8*0],r9
; .mov_ptn2 { 0'(= r ) 2'(= a31◂ [ ] ) } ⊢ { 0'(= r ) 1'(= a31◂ [ ] ) }
; .mov_ptn 2'(= a31◂ [ ] ) ⊢ 1'(= a31◂ [ ] )
	mov rax,r8
	mov r14,rax
	call ETR_180
	mov r9,QWORD [rsp-8+8*1]
	add rsp,8
;; rsp=0 , %827~1'(= {| l |} ) %826~0'(= r ) %825~3'(= a2◂ [ a31◂ [ ]] ) 
; #179 { 0'(= r ) 3'(= a2◂ [ a31◂ [ ]] ) } ⊢ { 0'(= r ) 2'(= {| l |} ) }
	sub rsp,8
	mov QWORD [rsp+8*0],r14
; .mov_ptn2 { 0'(= r ) 3'(= a2◂ [ a31◂ [ ]] ) } ⊢ { 0'(= r ) 1'(= a2◂ [ a31◂ [ ]] ) }
; .mov_ptn 3'(= a2◂ [ a31◂ [ ]] ) ⊢ 1'(= a2◂ [ a31◂ [ ]] )
	mov rax,r9
	mov r14,rax
	call ETR_179
	mov r8,r14
	mov r14,QWORD [rsp-8+8*1]
	add rsp,8
;; rsp=0 , %829~2'(= {| l |} ) %828~0'(= r ) %827~1'(= {| l |} ) 
; » _^ .. ⊢ ..
; .. //
	mov rdi,0
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[r14]
	add rdi,rax 
	push rax
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[r8]
	add rdi,rax 
	push rax
	add rdi,0
	push rdi 
	call mlc_s8
	pop rdi
	mov r9,rax
	lea rdi,[rax+7+rdi]
	std 
	mov QWORD [tmp],rcx 
	pop rcx
	lea rsi,[r8+7+rcx]
	rep movsb
	pop rcx
	lea rsi,[r14+7+rcx]
	rep movsb
	mov rcx,QWORD [tmp] 
;; rsp=0 , %832~3'(= {| l |} ) %831~2'(= {| l |} ) %830~1'(= {| l |} ) %828~0'(= r ) 
; ∎ { 0'(= r ) 3'(= {| l |} ) }
; .dlt.ptn 2'(= {| l |} )
	mov rdi,r8
	C_PUSH_REGS
	mov r8,rdi
	mov rdi,r8
	call free_s8
	C_POP_REGS
; .dlt.ptn 1'(= {| l |} )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	mov rdi,r8
	call free_s8
	C_POP_REGS
; .mov_ptn2 { 0'(= r ) 3'(= {| l |} ) } ⊢ { 0'(= r ) 1'(= {| l |} ) }
; .mov_ptn 3'(= {| l |} ) ⊢ 1'(= {| l |} )
	mov rax,r9
	mov r14,rax
	ret
ETR_180: ;; pnt_glb_etr { 0'(= r ) 1'(= a31◂ [ ] ) } ⊢ { 0'(= r ) 1'(= {| l |} ) } : ({ _r64 _t31 }→{ _r64 _s8 })
;; rsp=0 , %834~1'(= a31◂ [ ] ) %833~0'(= r ) 
;; ?; 1'(= a31◂ [ ] ) ⊢ 0(<6)◂{ 2'(= {| l |} ) 3'(= a32◂ [ ] ) }
	mov rdi,r14
	cmp BYTE [rdi+6],0
	jnz LB_727
	mov r8, QWORD [r14+8]
	mov r9, QWORD [r14+16]
	mov QWORD [GBG_VCT+8*0],r14
	mov rdi,QWORD [GBG_VCT+8*0]
	mov rax,[SS_RCD_2_TOP]
	mov QWORD [rdi],rax 
	mov QWORD [SS_RCD_2_TOP],rdi
;; rsp=0 , %836~3'(= a32◂ [ ] ) %835~2'(= {| l |} ) %833~0'(= r ) 
;; ?; 3'(= a32◂ [ ] ) ⊢ 0(<2)◂1'(= a2◂ [ a31◂ [ ]] )
	mov rdi,r9
	cmp BYTE [rdi+6],0
	jnz LB_728
	mov QWORD [GBG_VCT+8*0],rdi
	mov r14,QWORD [rdi+8]
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_LN rdi
;; rsp=0 , %837~1'(= a2◂ [ a31◂ [ ]] ) %835~2'(= {| l |} ) %833~0'(= r ) 
; #11 0'(= r ) ⊢ 0'(= r )
	add r13,1
;; rsp=0 , %838~0'(= r ) %837~1'(= a2◂ [ a31◂ [ ]] ) %835~2'(= {| l |} ) 
; #179 { 0'(= r ) 1'(= a2◂ [ a31◂ [ ]] ) } ⊢ { 0'(= r ) 1'(= {| l |} ) }
	sub rsp,8
	mov QWORD [rsp+8*0],r8
; .mov_ptn2 { 0'(= r ) 1'(= a2◂ [ a31◂ [ ]] ) } ⊢ { 0'(= r ) 1'(= a2◂ [ a31◂ [ ]] ) }
	call ETR_179
	mov r8,QWORD [rsp-8+8*1]
	add rsp,8
;; rsp=0 , %840~1'(= {| l |} ) %839~0'(= r ) %835~2'(= {| l |} ) 
; #12 0'(= r ) ⊢ 0'(= r )
	sub r13,1
;; rsp=0 , %841~0'(= r ) %840~1'(= {| l |} ) %835~2'(= {| l |} ) 
; » _^ .. ⊢ ..
; .. //
	mov rdi,0
	mov rsi,r13
	imul rsi,1
	add rdi,rsi 
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[r8]
	add rdi,rax 
	push rax
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[r14]
	add rdi,rax 
	push rax
	mov rsi,r13
	imul rsi,1
	add rdi,rsi 
	add rdi,14
	push rdi 
	call mlc_s8
	pop rdi
	mov r9,rax
	lea rdi,[rax+7+rdi]
	std 
	mov QWORD [tmp],rcx 
	lea rsi,[LB_729+8-1]
	mov rcx,8
	rep movsb
	mov rax,r13
LB_731:
	cmp rax,0
	jz LB_732
	sub rax,1
	lea rsi,[LB_730+1-1]
	mov rcx,1
	rep movsb 
	jmp LB_731
LB_732:
	pop rcx
	lea rsi,[r14+7+rcx]
	rep movsb
	lea rsi,[LB_733+1-1]
	mov rcx,1
	rep movsb
	pop rcx
	lea rsi,[r8+7+rcx]
	rep movsb
	lea rsi,[LB_734+5-1]
	mov rcx,5
	rep movsb
	mov rax,r13
LB_736:
	cmp rax,0
	jz LB_737
	sub rax,1
	lea rsi,[LB_735+1-1]
	mov rcx,1
	rep movsb 
	jmp LB_736
LB_737:
	mov rcx,QWORD [tmp] 
;; rsp=0 , %845~3'(= {| l |} ) %844~1'(= {| l |} ) %843~2'(= {| l |} ) %842~0'(= r ) 
; ∎ { 0'(= r ) 3'(= {| l |} ) }
; .dlt.ptn 1'(= {| l |} )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	mov rdi,r8
	call free_s8
	C_POP_REGS
; .dlt.ptn 2'(= {| l |} )
	mov rdi,r8
	C_PUSH_REGS
	mov r8,rdi
	mov rdi,r8
	call free_s8
	C_POP_REGS
; .mov_ptn2 { 0'(= r ) 3'(= {| l |} ) } ⊢ { 0'(= r ) 1'(= {| l |} ) }
; .mov_ptn 3'(= {| l |} ) ⊢ 1'(= {| l |} )
	mov rax,r9
	mov r14,rax
	ret
LB_728:
;; ?; 3'(= a32◂ [ ] ) ⊢ 1(<2)◂1'(= a9◂ [ ] )
	mov QWORD [GBG_VCT+8*0],rdi
	mov r14,QWORD [rdi+8]
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_LN rdi
;; rsp=0 , %846~1'(= a9◂ [ ] ) %835~2'(= {| l |} ) %833~0'(= r ) 
; #84 1'(= a9◂ [ ] ) ⊢ 1'(= {| l |} )
	sub rsp,16
	mov QWORD [rsp+8*0],r13
	mov QWORD [rsp+8*1],r8
; .mov_ptn2 1'(= a9◂ [ ] ) ⊢ 0'(= a9◂ [ ] )
; .mov_ptn 1'(= a9◂ [ ] ) ⊢ 0'(= a9◂ [ ] )
	mov rax,r14
	mov r13,rax
	call ETR_84
	mov r8,QWORD [rsp-8+8*2]
	mov r14,r13
	mov r13,QWORD [rsp-8+8*1]
	add rsp,16
;; rsp=0 , %847~1'(= {| l |} ) %835~2'(= {| l |} ) %833~0'(= r ) 
; » _^ .. ⊢ ..
; .. //
	mov rdi,0
	mov rsi,r13
	imul rsi,1
	add rdi,rsi 
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[r8]
	add rdi,rax 
	push rax
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[r14]
	add rdi,rax 
	push rax
	add rdi,9
	push rdi 
	call mlc_s8
	pop rdi
	mov r9,rax
	lea rdi,[rax+7+rdi]
	std 
	mov QWORD [tmp],rcx 
	lea rsi,[LB_738+1-1]
	mov rcx,1
	rep movsb
	pop rcx
	lea rsi,[r14+7+rcx]
	rep movsb
	lea rsi,[LB_739+3-1]
	mov rcx,3
	rep movsb
	pop rcx
	lea rsi,[r8+7+rcx]
	rep movsb
	lea rsi,[LB_740+5-1]
	mov rcx,5
	rep movsb
	mov rax,r13
LB_742:
	cmp rax,0
	jz LB_743
	sub rax,1
	lea rsi,[LB_741+1-1]
	mov rcx,1
	rep movsb 
	jmp LB_742
LB_743:
	mov rcx,QWORD [tmp] 
;; rsp=0 , %851~3'(= {| l |} ) %850~1'(= {| l |} ) %849~2'(= {| l |} ) %848~0'(= r ) 
; ∎ { 0'(= r ) 3'(= {| l |} ) }
; .dlt.ptn 1'(= {| l |} )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	mov rdi,r8
	call free_s8
	C_POP_REGS
; .dlt.ptn 2'(= {| l |} )
	mov rdi,r8
	C_PUSH_REGS
	mov r8,rdi
	mov rdi,r8
	call free_s8
	C_POP_REGS
; .mov_ptn2 { 0'(= r ) 3'(= {| l |} ) } ⊢ { 0'(= r ) 1'(= {| l |} ) }
; .mov_ptn 3'(= {| l |} ) ⊢ 1'(= {| l |} )
	mov rax,r9
	mov r14,rax
	ret
LB_727:
;; ?; 1'(= a31◂ [ ] ) ⊢ 1(<6)◂2'(= a2◂ [ *{ {| l |}a24◂ [ a9◂ [ ]{| l |}]}] )
	mov rdi,r14
	cmp BYTE [rdi+6],1
	jnz LB_744
	mov QWORD [GBG_VCT+8*0],rdi
	mov r8,QWORD [rdi+8]
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_LN rdi
;; rsp=0 , %852~2'(= a2◂ [ *{ {| l |}a24◂ [ a9◂ [ ]{| l |}]}] ) %833~0'(= r ) 
; #11 0'(= r ) ⊢ 0'(= r )
	add r13,1
;; rsp=0 , %853~0'(= r ) %852~2'(= a2◂ [ *{ {| l |}a24◂ [ a9◂ [ ]{| l |}]}] ) 
; #159 { 0'(= r ) 2'(= a2◂ [ *{ {| l |}a24◂ [ a9◂ [ ]{| l |}]}] ) } ⊢ { 0'(= r ) 1'(= {| l |} ) }
; .mov_ptn2 { 0'(= r ) 2'(= a2◂ [ *{ {| l |}a24◂ [ a9◂ [ ]{| l |}]}] ) } ⊢ { 0'(= r ) 1'(= a2◂ [ *{ {| l |}a24◂ [ a9◂ [ ]{| l |}]}] ) }
; .mov_ptn 2'(= a2◂ [ *{ {| l |}a24◂ [ a9◂ [ ]{| l |}]}] ) ⊢ 1'(= a2◂ [ *{ {| l |}a24◂ [ a9◂ [ ]{| l |}]}] )
	mov rax,r8
	mov r14,rax
	call ETR_159
;; rsp=0 , %855~1'(= {| l |} ) %854~0'(= r ) 
; #12 0'(= r ) ⊢ 0'(= r )
	sub r13,1
;; rsp=0 , %856~0'(= r ) %855~1'(= {| l |} ) 
; » _^ .. ⊢ ..
; .. //
	mov rdi,0
	mov rsi,r13
	imul rsi,1
	add rdi,rsi 
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[r14]
	add rdi,rax 
	push rax
	add rdi,8
	push rdi 
	call mlc_s8
	pop rdi
	mov r8,rax
	lea rdi,[rax+7+rdi]
	std 
	mov QWORD [tmp],rcx 
	pop rcx
	lea rsi,[r14+7+rcx]
	rep movsb
	lea rsi,[LB_745+8-1]
	mov rcx,8
	rep movsb
	mov rax,r13
LB_747:
	cmp rax,0
	jz LB_748
	sub rax,1
	lea rsi,[LB_746+1-1]
	mov rcx,1
	rep movsb 
	jmp LB_747
LB_748:
	mov rcx,QWORD [tmp] 
;; rsp=0 , %859~2'(= {| l |} ) %858~1'(= {| l |} ) %857~0'(= r ) 
; ∎ { 0'(= r ) 2'(= {| l |} ) }
; .dlt.ptn 1'(= {| l |} )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	mov rdi,r8
	call free_s8
	C_POP_REGS
; .mov_ptn2 { 0'(= r ) 2'(= {| l |} ) } ⊢ { 0'(= r ) 1'(= {| l |} ) }
; .mov_ptn 2'(= {| l |} ) ⊢ 1'(= {| l |} )
	mov rax,r8
	mov r14,rax
	ret
LB_744:
;; ?; 1'(= a31◂ [ ] ) ⊢ 2(<6)◂{ 2'(= {| l |} ) 3'(= a33◂ [ ] ) }
	mov rdi,r14
	cmp BYTE [rdi+6],2
	jnz LB_749
	mov r8, QWORD [r14+8]
	mov r9, QWORD [r14+16]
	mov QWORD [GBG_VCT+8*0],r14
	mov rdi,QWORD [GBG_VCT+8*0]
	mov rax,[SS_RCD_2_TOP]
	mov QWORD [rdi],rax 
	mov QWORD [SS_RCD_2_TOP],rdi
;; rsp=0 , %861~3'(= a33◂ [ ] ) %860~2'(= {| l |} ) %833~0'(= r ) 
; #11 0'(= r ) ⊢ 0'(= r )
	add r13,1
;; rsp=0 , %862~0'(= r ) %861~3'(= a33◂ [ ] ) %860~2'(= {| l |} ) 
; #186 { 0'(= r ) 3'(= a33◂ [ ] ) } ⊢ { 0'(= r ) 1'(= {| l |} ) }
	sub rsp,8
	mov QWORD [rsp+8*0],r8
; .mov_ptn2 { 0'(= r ) 3'(= a33◂ [ ] ) } ⊢ { 0'(= r ) 1'(= a33◂ [ ] ) }
; .mov_ptn 3'(= a33◂ [ ] ) ⊢ 1'(= a33◂ [ ] )
	mov rax,r9
	mov r14,rax
	call ETR_186
	mov r8,QWORD [rsp-8+8*1]
	add rsp,8
;; rsp=0 , %864~1'(= {| l |} ) %863~0'(= r ) %860~2'(= {| l |} ) 
; #12 0'(= r ) ⊢ 0'(= r )
	sub r13,1
;; rsp=0 , %865~0'(= r ) %864~1'(= {| l |} ) %860~2'(= {| l |} ) 
; » _^ .. ⊢ ..
; .. //
	mov rdi,0
	mov rsi,r13
	imul rsi,1
	add rdi,rsi 
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[r8]
	add rdi,rax 
	push rax
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[r14]
	add rdi,rax 
	push rax
	add rdi,3
	push rdi 
	call mlc_s8
	pop rdi
	mov r9,rax
	lea rdi,[rax+7+rdi]
	std 
	mov QWORD [tmp],rcx 
	pop rcx
	lea rsi,[r14+7+rcx]
	rep movsb
	pop rcx
	lea rsi,[r8+7+rcx]
	rep movsb
	lea rsi,[LB_750+3-1]
	mov rcx,3
	rep movsb
	mov rax,r13
LB_752:
	cmp rax,0
	jz LB_753
	sub rax,1
	lea rsi,[LB_751+1-1]
	mov rcx,1
	rep movsb 
	jmp LB_752
LB_753:
	mov rcx,QWORD [tmp] 
;; rsp=0 , %869~3'(= {| l |} ) %868~1'(= {| l |} ) %867~2'(= {| l |} ) %866~0'(= r ) 
; ∎ { 0'(= r ) 3'(= {| l |} ) }
; .dlt.ptn 1'(= {| l |} )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	mov rdi,r8
	call free_s8
	C_POP_REGS
; .dlt.ptn 2'(= {| l |} )
	mov rdi,r8
	C_PUSH_REGS
	mov r8,rdi
	mov rdi,r8
	call free_s8
	C_POP_REGS
; .mov_ptn2 { 0'(= r ) 3'(= {| l |} ) } ⊢ { 0'(= r ) 1'(= {| l |} ) }
; .mov_ptn 3'(= {| l |} ) ⊢ 1'(= {| l |} )
	mov rax,r9
	mov r14,rax
	ret
LB_749:
;; ?; 1'(= a31◂ [ ] ) ⊢ 3(<6)◂2'(= a2◂ [ *{ {| l |}a8◂ [ a13◂ [ {| l |}]]a3◂ [ a23◂ [ ]]a17◂ [ a9◂ [ ]{| l |}]}] )
	mov rdi,r14
	cmp BYTE [rdi+6],3
	jnz LB_754
	mov QWORD [GBG_VCT+8*0],rdi
	mov r8,QWORD [rdi+8]
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_LN rdi
;; rsp=0 , %870~2'(= a2◂ [ *{ {| l |}a8◂ [ a13◂ [ {| l |}]]a3◂ [ a23◂ [ ]]a17◂ [ a9◂ [ ]{| l |}]}] ) %833~0'(= r ) 
; #11 0'(= r ) ⊢ 0'(= r )
	add r13,1
;; rsp=0 , %871~0'(= r ) %870~2'(= a2◂ [ *{ {| l |}a8◂ [ a13◂ [ {| l |}]]a3◂ [ a23◂ [ ]]a17◂ [ a9◂ [ ]{| l |}]}] ) 
; #187 { 0'(= r ) 2'(= a2◂ [ *{ {| l |}a8◂ [ a13◂ [ {| l |}]]a3◂ [ a23◂ [ ]]a17◂ [ a9◂ [ ]{| l |}]}] ) } ⊢ { 0'(= r ) 1'(= {| l |} ) }
; .mov_ptn2 { 0'(= r ) 2'(= a2◂ [ *{ {| l |}a8◂ [ a13◂ [ {| l |}]]a3◂ [ a23◂ [ ]]a17◂ [ a9◂ [ ]{| l |}]}] ) } ⊢ { 0'(= r ) 1'(= a2◂ [ *{ {| l |}a8◂ [ a13◂ [ {| l |}]]a3◂ [ a23◂ [ ]]a17◂ [ a9◂ [ ]{| l |}]}] ) }
; .mov_ptn 2'(= a2◂ [ *{ {| l |}a8◂ [ a13◂ [ {| l |}]]a3◂ [ a23◂ [ ]]a17◂ [ a9◂ [ ]{| l |}]}] ) ⊢ 1'(= a2◂ [ *{ {| l |}a8◂ [ a13◂ [ {| l |}]]a3◂ [ a23◂ [ ]]a17◂ [ a9◂ [ ]{| l |}]}] )
	mov rax,r8
	mov r14,rax
	call ETR_187
;; rsp=0 , %873~1'(= {| l |} ) %872~0'(= r ) 
; #12 0'(= r ) ⊢ 0'(= r )
	sub r13,1
;; rsp=0 , %874~0'(= r ) %873~1'(= {| l |} ) 
; » _^ .. ⊢ ..
; .. //
	mov rdi,0
	mov rsi,r13
	imul rsi,1
	add rdi,rsi 
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[r14]
	add rdi,rax 
	push rax
	add rdi,4
	push rdi 
	call mlc_s8
	pop rdi
	mov r8,rax
	lea rdi,[rax+7+rdi]
	std 
	mov QWORD [tmp],rcx 
	pop rcx
	lea rsi,[r14+7+rcx]
	rep movsb
	lea rsi,[LB_755+4-1]
	mov rcx,4
	rep movsb
	mov rax,r13
LB_757:
	cmp rax,0
	jz LB_758
	sub rax,1
	lea rsi,[LB_756+1-1]
	mov rcx,1
	rep movsb 
	jmp LB_757
LB_758:
	mov rcx,QWORD [tmp] 
;; rsp=0 , %877~2'(= {| l |} ) %876~1'(= {| l |} ) %875~0'(= r ) 
; ∎ { 0'(= r ) 2'(= {| l |} ) }
; .dlt.ptn 1'(= {| l |} )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	mov rdi,r8
	call free_s8
	C_POP_REGS
; .mov_ptn2 { 0'(= r ) 2'(= {| l |} ) } ⊢ { 0'(= r ) 1'(= {| l |} ) }
; .mov_ptn 2'(= {| l |} ) ⊢ 1'(= {| l |} )
	mov rax,r8
	mov r14,rax
	ret
LB_754:
;; ?; 1'(= a31◂ [ ] ) ⊢ 4(<6)◂{ 2'(= {| l |} ) 3'(= a34◂ [ ] ) }
	mov rdi,r14
	cmp BYTE [rdi+6],4
	jnz LB_759
	mov r8, QWORD [r14+8]
	mov r9, QWORD [r14+16]
	mov QWORD [GBG_VCT+8*0],r14
	mov rdi,QWORD [GBG_VCT+8*0]
	mov rax,[SS_RCD_2_TOP]
	mov QWORD [rdi],rax 
	mov QWORD [SS_RCD_2_TOP],rdi
;; rsp=0 , %879~3'(= a34◂ [ ] ) %878~2'(= {| l |} ) %833~0'(= r ) 
;; ?; 3'(= a34◂ [ ] ) ⊢ 0(<2)◂{ 1'(= a2◂ [ {| l |}] ) 4'(= a2◂ [ *{ {| l |}a23◂ [ ]}] ) }
	mov rdi,r9
	cmp BYTE [rdi+6],0
	jnz LB_760
	mov r14, QWORD [r9+8]
	mov r10, QWORD [r9+16]
	mov QWORD [GBG_VCT+8*0],r9
	mov rdi,QWORD [GBG_VCT+8*0]
	mov rax,[SS_RCD_2_TOP]
	mov QWORD [rdi],rax 
	mov QWORD [SS_RCD_2_TOP],rdi
;; rsp=0 , %881~4'(= a2◂ [ *{ {| l |}a23◂ [ ]}] ) %880~1'(= a2◂ [ {| l |}] ) %878~2'(= {| l |} ) %833~0'(= r ) 
; #11 0'(= r ) ⊢ 0'(= r )
	add r13,1
;; rsp=0 , %882~0'(= r ) %881~4'(= a2◂ [ *{ {| l |}a23◂ [ ]}] ) %880~1'(= a2◂ [ {| l |}] ) %878~2'(= {| l |} ) 
; #183 { 0'(= r ) 4'(= a2◂ [ *{ {| l |}a23◂ [ ]}] ) } ⊢ { 0'(= r ) 3'(= {| l |} ) }
	sub rsp,16
	mov QWORD [rsp+8*0],r14
	mov QWORD [rsp+8*1],r8
; .mov_ptn2 { 0'(= r ) 4'(= a2◂ [ *{ {| l |}a23◂ [ ]}] ) } ⊢ { 0'(= r ) 1'(= a2◂ [ *{ {| l |}a23◂ [ ]}] ) }
; .mov_ptn 4'(= a2◂ [ *{ {| l |}a23◂ [ ]}] ) ⊢ 1'(= a2◂ [ *{ {| l |}a23◂ [ ]}] )
	mov rax,r10
	mov r14,rax
	call ETR_183
	mov r8,QWORD [rsp-8+8*2]
	mov r9,r14
	mov r14,QWORD [rsp-8+8*1]
	add rsp,16
;; rsp=0 , %884~3'(= {| l |} ) %883~0'(= r ) %880~1'(= a2◂ [ {| l |}] ) %878~2'(= {| l |} ) 
; #12 0'(= r ) ⊢ 0'(= r )
	sub r13,1
;; rsp=0 , %885~0'(= r ) %884~3'(= {| l |} ) %880~1'(= a2◂ [ {| l |}] ) %878~2'(= {| l |} ) 
; » _^ .. ⊢ ..
; .. //
	mov rdi,0
	mov rsi,r13
	imul rsi,1
	add rdi,rsi 
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[r8]
	add rdi,rax 
	push rax
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[r9]
	add rdi,rax 
	push rax
	add rdi,4
	push rdi 
	call mlc_s8
	pop rdi
	mov r10,rax
	lea rdi,[rax+7+rdi]
	std 
	mov QWORD [tmp],rcx 
	pop rcx
	lea rsi,[r9+7+rcx]
	rep movsb
	lea rsi,[LB_761+1-1]
	mov rcx,1
	rep movsb
	pop rcx
	lea rsi,[r8+7+rcx]
	rep movsb
	lea rsi,[LB_762+3-1]
	mov rcx,3
	rep movsb
	mov rax,r13
LB_764:
	cmp rax,0
	jz LB_765
	sub rax,1
	lea rsi,[LB_763+1-1]
	mov rcx,1
	rep movsb 
	jmp LB_764
LB_765:
	mov rcx,QWORD [tmp] 
;; rsp=0 , %889~4'(= {| l |} ) %888~3'(= {| l |} ) %887~2'(= {| l |} ) %886~0'(= r ) %880~1'(= a2◂ [ {| l |}] ) 
; ∎ { 0'(= r ) 4'(= {| l |} ) }
; .dlt.ptn 3'(= {| l |} )
	mov rdi,r9
	C_PUSH_REGS
	mov r8,rdi
	mov rdi,r8
	call free_s8
	C_POP_REGS
; .dlt.ptn 2'(= {| l |} )
	mov rdi,r8
	C_PUSH_REGS
	mov r8,rdi
	mov rdi,r8
	call free_s8
	C_POP_REGS
; .dlt.ptn 1'(= a2◂ [ {| l |}] )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	call LB_766
	C_POP_REGS
; .mov_ptn2 { 0'(= r ) 4'(= {| l |} ) } ⊢ { 0'(= r ) 1'(= {| l |} ) }
; .mov_ptn 4'(= {| l |} ) ⊢ 1'(= {| l |} )
	mov rax,r10
	mov r14,rax
	ret
LB_760:
;; ?; 3'(= a34◂ [ ] ) ⊢ 1(<2)◂{ 1'(= a2◂ [ {| l |}] ) 4'(= a23◂ [ ] ) }
	mov r14, QWORD [r9+8]
	mov r10, QWORD [r9+16]
	mov QWORD [GBG_VCT+8*0],r9
	mov rdi,QWORD [GBG_VCT+8*0]
	mov rax,[SS_RCD_2_TOP]
	mov QWORD [rdi],rax 
	mov QWORD [SS_RCD_2_TOP],rdi
;; rsp=0 , %891~4'(= a23◂ [ ] ) %890~1'(= a2◂ [ {| l |}] ) %878~2'(= {| l |} ) %833~0'(= r ) 
; » _^ .. ⊢ ..
; .. //
	mov rdi,0
	mov rsi,r13
	imul rsi,1
	add rdi,rsi 
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[r8]
	add rdi,rax 
	push rax
	add rdi,10
	push rdi 
	call mlc_s8
	pop rdi
	mov r9,rax
	lea rdi,[rax+7+rdi]
	std 
	mov QWORD [tmp],rcx 
	lea rsi,[LB_771+7-1]
	mov rcx,7
	rep movsb
	pop rcx
	lea rsi,[r8+7+rcx]
	rep movsb
	lea rsi,[LB_772+3-1]
	mov rcx,3
	rep movsb
	mov rax,r13
LB_774:
	cmp rax,0
	jz LB_775
	sub rax,1
	lea rsi,[LB_773+1-1]
	mov rcx,1
	rep movsb 
	jmp LB_774
LB_775:
	mov rcx,QWORD [tmp] 
;; rsp=0 , %894~3'(= {| l |} ) %893~2'(= {| l |} ) %892~0'(= r ) %891~4'(= a23◂ [ ] ) %890~1'(= a2◂ [ {| l |}] ) 
; ∎ { 0'(= r ) 3'(= {| l |} ) }
; .dlt.ptn 2'(= {| l |} )
	mov rdi,r8
	C_PUSH_REGS
	mov r8,rdi
	mov rdi,r8
	call free_s8
	C_POP_REGS
; .dlt.ptn 4'(= a23◂ [ ] )
	mov rdi,r10
	C_PUSH_REGS
	mov r8,rdi
	call LB_776
	C_POP_REGS
; .dlt.ptn 1'(= a2◂ [ {| l |}] )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	call LB_766
	C_POP_REGS
; .mov_ptn2 { 0'(= r ) 3'(= {| l |} ) } ⊢ { 0'(= r ) 1'(= {| l |} ) }
; .mov_ptn 3'(= {| l |} ) ⊢ 1'(= {| l |} )
	mov rax,r9
	mov r14,rax
	ret
LB_759:
;; ?; 1'(= a31◂ [ ] ) ⊢ 5(<6)◂2'(= a2◂ [ *{ {| l |}a34◂ [ ]}] )
	mov QWORD [GBG_VCT+8*0],rdi
	mov r8,QWORD [rdi+8]
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_LN rdi
;; rsp=0 , %895~2'(= a2◂ [ *{ {| l |}a34◂ [ ]}] ) %833~0'(= r ) 
; #11 0'(= r ) ⊢ 0'(= r )
	add r13,1
;; rsp=0 , %896~0'(= r ) %895~2'(= a2◂ [ *{ {| l |}a34◂ [ ]}] ) 
; #181 { 0'(= r ) 2'(= a2◂ [ *{ {| l |}a34◂ [ ]}] ) } ⊢ { 0'(= r ) 1'(= {| l |} ) }
; .mov_ptn2 { 0'(= r ) 2'(= a2◂ [ *{ {| l |}a34◂ [ ]}] ) } ⊢ { 0'(= r ) 1'(= a2◂ [ *{ {| l |}a34◂ [ ]}] ) }
; .mov_ptn 2'(= a2◂ [ *{ {| l |}a34◂ [ ]}] ) ⊢ 1'(= a2◂ [ *{ {| l |}a34◂ [ ]}] )
	mov rax,r8
	mov r14,rax
	call ETR_181
;; rsp=0 , %898~1'(= {| l |} ) %897~0'(= r ) 
; #12 0'(= r ) ⊢ 0'(= r )
	sub r13,1
;; rsp=0 , %899~0'(= r ) %898~1'(= {| l |} ) 
; » _^ .. ⊢ ..
; .. //
	mov rdi,0
	mov rsi,r13
	imul rsi,1
	add rdi,rsi 
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[r14]
	add rdi,rax 
	push rax
	add rdi,3
	push rdi 
	call mlc_s8
	pop rdi
	mov r8,rax
	lea rdi,[rax+7+rdi]
	std 
	mov QWORD [tmp],rcx 
	pop rcx
	lea rsi,[r14+7+rcx]
	rep movsb
	lea rsi,[LB_789+3-1]
	mov rcx,3
	rep movsb
	mov rax,r13
LB_791:
	cmp rax,0
	jz LB_792
	sub rax,1
	lea rsi,[LB_790+1-1]
	mov rcx,1
	rep movsb 
	jmp LB_791
LB_792:
	mov rcx,QWORD [tmp] 
;; rsp=0 , %902~2'(= {| l |} ) %901~1'(= {| l |} ) %900~0'(= r ) 
; ∎ { 0'(= r ) 2'(= {| l |} ) }
; .dlt.ptn 1'(= {| l |} )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	mov rdi,r8
	call free_s8
	C_POP_REGS
; .mov_ptn2 { 0'(= r ) 2'(= {| l |} ) } ⊢ { 0'(= r ) 1'(= {| l |} ) }
; .mov_ptn 2'(= {| l |} ) ⊢ 1'(= {| l |} )
	mov rax,r8
	mov r14,rax
	ret
ETR_181: ;; pnt_dt_qlq_etr { 0'(= r ) 1'(= a2◂ [ *{ {| l |}a34◂ [ ]}] ) } ⊢ { 0'(= r ) 1'(= {| l |} ) } : ({ _r64 _lst◂{ _s8 _t34 } }→{ _r64 _s8 })
;; rsp=0 , %904~1'(= a2◂ [ *{ {| l |}a34◂ [ ]}] ) %903~0'(= r ) 
;; ?; 1'(= a2◂ [ *{ {| l |}a34◂ [ ]}] ) ⊢ 0(<2)◂{ { 3'(= {| l |} ) 4'(= a34◂ [ ] ) } 5'(= a2◂ [ *{ {| l |}a34◂ [ ]}] ) }
	mov rdi,r14
	cmp BYTE [rdi+6],0
	jnz LB_793
	mov r8, QWORD [r14+8]
	mov r9, QWORD [r8+8]
	mov r10, QWORD [r8+16]
	mov QWORD [GBG_VCT+8*0],r8
	mov r11, QWORD [r14+16]
	mov QWORD [GBG_VCT+8*1],r14
	mov rdi,QWORD [GBG_VCT+8*1]
	mov rax,[SS_RCD_2_TOP]
	mov QWORD [rdi],rax 
	mov QWORD [SS_RCD_2_TOP],rdi
	mov rdi,QWORD [GBG_VCT+8*0]
	mov rax,[SS_RCD_2_TOP]
	mov QWORD [rdi],rax 
	mov QWORD [SS_RCD_2_TOP],rdi
;; rsp=0 , %907~5'(= a2◂ [ *{ {| l |}a34◂ [ ]}] ) %906~4'(= a34◂ [ ] ) %905~3'(= {| l |} ) %903~0'(= r ) 
; #181 { 0'(= r ) 5'(= a2◂ [ *{ {| l |}a34◂ [ ]}] ) } ⊢ { 0'(= r ) 1'(= {| l |} ) }
	sub rsp,16
	mov QWORD [rsp+8*0],r9
	mov QWORD [rsp+8*1],r10
; .mov_ptn2 { 0'(= r ) 5'(= a2◂ [ *{ {| l |}a34◂ [ ]}] ) } ⊢ { 0'(= r ) 1'(= a2◂ [ *{ {| l |}a34◂ [ ]}] ) }
; .mov_ptn 5'(= a2◂ [ *{ {| l |}a34◂ [ ]}] ) ⊢ 1'(= a2◂ [ *{ {| l |}a34◂ [ ]}] )
	mov rax,r11
	mov r14,rax
	call ETR_181
	mov r10,QWORD [rsp-8+8*2]
	mov r9,QWORD [rsp-8+8*1]
	add rsp,16
;; rsp=0 , %909~1'(= {| l |} ) %908~0'(= r ) %906~4'(= a34◂ [ ] ) %905~3'(= {| l |} ) 
;; ?; 4'(= a34◂ [ ] ) ⊢ 0(<2)◂{ 2'(= a2◂ [ {| l |}] ) 5'(= a2◂ [ *{ {| l |}a23◂ [ ]}] ) }
	mov rdi,r10
	cmp BYTE [rdi+6],0
	jnz LB_794
	mov r8, QWORD [r10+8]
	mov r11, QWORD [r10+16]
	mov QWORD [GBG_VCT+8*0],r10
	mov rdi,QWORD [GBG_VCT+8*0]
	mov rax,[SS_RCD_2_TOP]
	mov QWORD [rdi],rax 
	mov QWORD [SS_RCD_2_TOP],rdi
;; rsp=0 , %911~5'(= a2◂ [ *{ {| l |}a23◂ [ ]}] ) %910~2'(= a2◂ [ {| l |}] ) %909~1'(= {| l |} ) %908~0'(= r ) %905~3'(= {| l |} ) 
; #11 0'(= r ) ⊢ 0'(= r )
	add r13,1
;; rsp=0 , %912~0'(= r ) %911~5'(= a2◂ [ *{ {| l |}a23◂ [ ]}] ) %910~2'(= a2◂ [ {| l |}] ) %909~1'(= {| l |} ) %905~3'(= {| l |} ) 
; #183 { 0'(= r ) 5'(= a2◂ [ *{ {| l |}a23◂ [ ]}] ) } ⊢ { 0'(= r ) 4'(= {| l |} ) }
	sub rsp,24
	mov QWORD [rsp+8*0],r14
	mov QWORD [rsp+8*1],r8
	mov QWORD [rsp+8*2],r9
; .mov_ptn2 { 0'(= r ) 5'(= a2◂ [ *{ {| l |}a23◂ [ ]}] ) } ⊢ { 0'(= r ) 1'(= a2◂ [ *{ {| l |}a23◂ [ ]}] ) }
; .mov_ptn 5'(= a2◂ [ *{ {| l |}a23◂ [ ]}] ) ⊢ 1'(= a2◂ [ *{ {| l |}a23◂ [ ]}] )
	mov rax,r11
	mov r14,rax
	call ETR_183
	mov r9,QWORD [rsp-8+8*3]
	mov r8,QWORD [rsp-8+8*2]
	mov r10,r14
	mov r14,QWORD [rsp-8+8*1]
	add rsp,24
;; rsp=0 , %914~4'(= {| l |} ) %913~0'(= r ) %910~2'(= a2◂ [ {| l |}] ) %909~1'(= {| l |} ) %905~3'(= {| l |} ) 
; #12 0'(= r ) ⊢ 0'(= r )
	sub r13,1
;; rsp=0 , %915~0'(= r ) %914~4'(= {| l |} ) %910~2'(= a2◂ [ {| l |}] ) %909~1'(= {| l |} ) %905~3'(= {| l |} ) 
; » _^ .. ⊢ ..
; .. //
	mov rdi,0
	mov rsi,r13
	imul rsi,1
	add rdi,rsi 
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[r9]
	add rdi,rax 
	push rax
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[r10]
	add rdi,rax 
	push rax
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[r14]
	add rdi,rax 
	push rax
	add rdi,3
	push rdi 
	call mlc_s8
	pop rdi
	mov r11,rax
	lea rdi,[rax+7+rdi]
	std 
	mov QWORD [tmp],rcx 
	pop rcx
	lea rsi,[r14+7+rcx]
	rep movsb
	pop rcx
	lea rsi,[r10+7+rcx]
	rep movsb
	lea rsi,[LB_795+1-1]
	mov rcx,1
	rep movsb
	pop rcx
	lea rsi,[r9+7+rcx]
	rep movsb
	lea rsi,[LB_796+2-1]
	mov rcx,2
	rep movsb
	mov rax,r13
LB_798:
	cmp rax,0
	jz LB_799
	sub rax,1
	lea rsi,[LB_797+1-1]
	mov rcx,1
	rep movsb 
	jmp LB_798
LB_799:
	mov rcx,QWORD [tmp] 
;; rsp=0 , %920~5'(= {| l |} ) %919~1'(= {| l |} ) %918~4'(= {| l |} ) %917~3'(= {| l |} ) %916~0'(= r ) %910~2'(= a2◂ [ {| l |}] ) 
; ∎ { 0'(= r ) 5'(= {| l |} ) }
; .dlt.ptn 1'(= {| l |} )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	mov rdi,r8
	call free_s8
	C_POP_REGS
; .dlt.ptn 4'(= {| l |} )
	mov rdi,r10
	C_PUSH_REGS
	mov r8,rdi
	mov rdi,r8
	call free_s8
	C_POP_REGS
; .dlt.ptn 3'(= {| l |} )
	mov rdi,r9
	C_PUSH_REGS
	mov r8,rdi
	mov rdi,r8
	call free_s8
	C_POP_REGS
; .dlt.ptn 2'(= a2◂ [ {| l |}] )
	mov rdi,r8
	C_PUSH_REGS
	mov r8,rdi
	call LB_766
	C_POP_REGS
; .mov_ptn2 { 0'(= r ) 5'(= {| l |} ) } ⊢ { 0'(= r ) 1'(= {| l |} ) }
; .mov_ptn 5'(= {| l |} ) ⊢ 1'(= {| l |} )
	mov rax,r11
	mov r14,rax
	ret
LB_794:
;; ?; 4'(= a34◂ [ ] ) ⊢ 1(<2)◂{ 2'(= a2◂ [ {| l |}] ) 5'(= a23◂ [ ] ) }
	mov r8, QWORD [r10+8]
	mov r11, QWORD [r10+16]
	mov QWORD [GBG_VCT+8*0],r10
	mov rdi,QWORD [GBG_VCT+8*0]
	mov rax,[SS_RCD_2_TOP]
	mov QWORD [rdi],rax 
	mov QWORD [SS_RCD_2_TOP],rdi
;; rsp=0 , %922~5'(= a23◂ [ ] ) %921~2'(= a2◂ [ {| l |}] ) %909~1'(= {| l |} ) %908~0'(= r ) %905~3'(= {| l |} ) 
; » _^ .. ⊢ ..
; .. //
	mov rdi,0
	mov rsi,r13
	imul rsi,1
	add rdi,rsi 
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[r9]
	add rdi,rax 
	push rax
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[r14]
	add rdi,rax 
	push rax
	add rdi,9
	push rdi 
	call mlc_s8
	pop rdi
	mov r10,rax
	lea rdi,[rax+7+rdi]
	std 
	mov QWORD [tmp],rcx 
	pop rcx
	lea rsi,[r14+7+rcx]
	rep movsb
	lea rsi,[LB_800+7-1]
	mov rcx,7
	rep movsb
	pop rcx
	lea rsi,[r9+7+rcx]
	rep movsb
	lea rsi,[LB_801+2-1]
	mov rcx,2
	rep movsb
	mov rax,r13
LB_803:
	cmp rax,0
	jz LB_804
	sub rax,1
	lea rsi,[LB_802+1-1]
	mov rcx,1
	rep movsb 
	jmp LB_803
LB_804:
	mov rcx,QWORD [tmp] 
;; rsp=0 , %926~4'(= {| l |} ) %925~1'(= {| l |} ) %924~3'(= {| l |} ) %923~0'(= r ) %922~5'(= a23◂ [ ] ) %921~2'(= a2◂ [ {| l |}] ) 
; ∎ { 0'(= r ) 4'(= {| l |} ) }
; .dlt.ptn 1'(= {| l |} )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	mov rdi,r8
	call free_s8
	C_POP_REGS
; .dlt.ptn 3'(= {| l |} )
	mov rdi,r9
	C_PUSH_REGS
	mov r8,rdi
	mov rdi,r8
	call free_s8
	C_POP_REGS
; .dlt.ptn 5'(= a23◂ [ ] )
	mov rdi,r11
	C_PUSH_REGS
	mov r8,rdi
	call LB_776
	C_POP_REGS
; .dlt.ptn 2'(= a2◂ [ {| l |}] )
	mov rdi,r8
	C_PUSH_REGS
	mov r8,rdi
	call LB_766
	C_POP_REGS
; .mov_ptn2 { 0'(= r ) 4'(= {| l |} ) } ⊢ { 0'(= r ) 1'(= {| l |} ) }
; .mov_ptn 4'(= {| l |} ) ⊢ 1'(= {| l |} )
	mov rax,r10
	mov r14,rax
	ret
LB_793:
;; ?; 1'(= a2◂ [ *{ {| l |}a34◂ [ ]}] ) ⊢ 1(<2)◂{ }
;; rsp=0 , %903~0'(= r ) 
; $ %[ "" ] ⊢ %[ "" ]
;; rsp=0 , %927~%[ "" ] %903~0'(= r ) 
; ∎ { 0'(= r ) %[ "" ] }
; .mov_ptn2 { 0'(= r ) %[ "" ] } ⊢ { 0'(= r ) 1'(= {| l |} ) }
; .mov_ptn %[ "" ] ⊢ 1'(= {| l |} )
	mov rsi,1  
	mov rdi,16
	xor rax,rax 
	C_CALL_SF calloc
	mov QWORD [rax],0
	mov r14,rax
	ret
ETR_182: ;; pnt_dt_etr { 0'(= r ) 1'(= a34◂ [ ] ) } ⊢ { 0'(= r ) 1'(= {| l |} ) } : ({ _r64 _t34 }→{ _r64 _s8 })
;; rsp=0 , %929~1'(= a34◂ [ ] ) %928~0'(= r ) 
;; ?; 1'(= a34◂ [ ] ) ⊢ 0(<2)◂{ 2'(= a2◂ [ {| l |}] ) 3'(= a2◂ [ *{ {| l |}a23◂ [ ]}] ) }
	mov rdi,r14
	cmp BYTE [rdi+6],0
	jnz LB_805
	mov r8, QWORD [r14+8]
	mov r9, QWORD [r14+16]
	mov QWORD [GBG_VCT+8*0],r14
	mov rdi,QWORD [GBG_VCT+8*0]
	mov rax,[SS_RCD_2_TOP]
	mov QWORD [rdi],rax 
	mov QWORD [SS_RCD_2_TOP],rdi
;; rsp=0 , %931~3'(= a2◂ [ *{ {| l |}a23◂ [ ]}] ) %930~2'(= a2◂ [ {| l |}] ) %928~0'(= r ) 
; #11 0'(= r ) ⊢ 0'(= r )
	add r13,1
;; rsp=0 , %932~0'(= r ) %931~3'(= a2◂ [ *{ {| l |}a23◂ [ ]}] ) %930~2'(= a2◂ [ {| l |}] ) 
; #183 { 0'(= r ) 3'(= a2◂ [ *{ {| l |}a23◂ [ ]}] ) } ⊢ { 0'(= r ) 1'(= {| l |} ) }
	sub rsp,8
	mov QWORD [rsp+8*0],r8
; .mov_ptn2 { 0'(= r ) 3'(= a2◂ [ *{ {| l |}a23◂ [ ]}] ) } ⊢ { 0'(= r ) 1'(= a2◂ [ *{ {| l |}a23◂ [ ]}] ) }
; .mov_ptn 3'(= a2◂ [ *{ {| l |}a23◂ [ ]}] ) ⊢ 1'(= a2◂ [ *{ {| l |}a23◂ [ ]}] )
	mov rax,r9
	mov r14,rax
	call ETR_183
	mov r8,QWORD [rsp-8+8*1]
	add rsp,8
;; rsp=0 , %934~1'(= {| l |} ) %933~0'(= r ) %930~2'(= a2◂ [ {| l |}] ) 
; #12 0'(= r ) ⊢ 0'(= r )
	sub r13,1
;; rsp=0 , %935~0'(= r ) %934~1'(= {| l |} ) %930~2'(= a2◂ [ {| l |}] ) 
; » _^ .. ⊢ ..
; .. //
	mov rdi,0
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[r14]
	add rdi,rax 
	push rax
	add rdi,1
	push rdi 
	call mlc_s8
	pop rdi
	mov r9,rax
	lea rdi,[rax+7+rdi]
	std 
	mov QWORD [tmp],rcx 
	pop rcx
	lea rsi,[r14+7+rcx]
	rep movsb
	lea rsi,[LB_806+1-1]
	mov rcx,1
	rep movsb
	mov rcx,QWORD [tmp] 
;; rsp=0 , %937~3'(= {| l |} ) %936~1'(= {| l |} ) %935~0'(= r ) %930~2'(= a2◂ [ {| l |}] ) 
; ∎ { 0'(= r ) 1'(= {| l |} ) }
; .dlt.ptn 3'(= {| l |} )
	mov rdi,r9
	C_PUSH_REGS
	mov r8,rdi
	mov rdi,r8
	call free_s8
	C_POP_REGS
; .dlt.ptn 2'(= a2◂ [ {| l |}] )
	mov rdi,r8
	C_PUSH_REGS
	mov r8,rdi
	call LB_766
	C_POP_REGS
; .mov_ptn2 { 0'(= r ) 1'(= {| l |} ) } ⊢ { 0'(= r ) 1'(= {| l |} ) }
	ret
LB_805:
;; ?; 1'(= a34◂ [ ] ) ⊢ 1(<2)◂{ 2'(= a2◂ [ {| l |}] ) 3'(= a23◂ [ ] ) }
	mov r8, QWORD [r14+8]
	mov r9, QWORD [r14+16]
	mov QWORD [GBG_VCT+8*0],r14
	mov rdi,QWORD [GBG_VCT+8*0]
	mov rax,[SS_RCD_2_TOP]
	mov QWORD [rdi],rax 
	mov QWORD [SS_RCD_2_TOP],rdi
;; rsp=0 , %939~3'(= a23◂ [ ] ) %938~2'(= a2◂ [ {| l |}] ) %928~0'(= r ) 
; #184 3'(= a23◂ [ ] ) ⊢ 1'(= {| l |} )
	sub rsp,16
	mov QWORD [rsp+8*0],r13
	mov QWORD [rsp+8*1],r8
; .mov_ptn2 3'(= a23◂ [ ] ) ⊢ 0'(= a23◂ [ ] )
; .mov_ptn 3'(= a23◂ [ ] ) ⊢ 0'(= a23◂ [ ] )
	mov rax,r9
	mov r13,rax
	call ETR_184
	mov r8,QWORD [rsp-8+8*2]
	mov r14,r13
	mov r13,QWORD [rsp-8+8*1]
	add rsp,16
;; rsp=0 , %940~1'(= {| l |} ) %938~2'(= a2◂ [ {| l |}] ) %928~0'(= r ) 
; » _^ .. ⊢ ..
; .. //
	mov rdi,0
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[r14]
	add rdi,rax 
	push rax
	add rdi,4
	push rdi 
	call mlc_s8
	pop rdi
	mov r9,rax
	lea rdi,[rax+7+rdi]
	std 
	mov QWORD [tmp],rcx 
	lea rsi,[LB_807+1-1]
	mov rcx,1
	rep movsb
	pop rcx
	lea rsi,[r14+7+rcx]
	rep movsb
	lea rsi,[LB_808+3-1]
	mov rcx,3
	rep movsb
	mov rcx,QWORD [tmp] 
;; rsp=0 , %942~3'(= {| l |} ) %941~1'(= {| l |} ) %938~2'(= a2◂ [ {| l |}] ) %928~0'(= r ) 
; ∎ { 0'(= r ) 3'(= {| l |} ) }
; .dlt.ptn 1'(= {| l |} )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	mov rdi,r8
	call free_s8
	C_POP_REGS
; .dlt.ptn 2'(= a2◂ [ {| l |}] )
	mov rdi,r8
	C_PUSH_REGS
	mov r8,rdi
	call LB_766
	C_POP_REGS
; .mov_ptn2 { 0'(= r ) 3'(= {| l |} ) } ⊢ { 0'(= r ) 1'(= {| l |} ) }
; .mov_ptn 3'(= {| l |} ) ⊢ 1'(= {| l |} )
	mov rax,r9
	mov r14,rax
	ret
ETR_183: ;; pnt_dt_def { 0'(= r ) 1'(= a2◂ [ *{ {| l |}a23◂ [ ]}] ) } ⊢ { 0'(= r ) 1'(= {| l |} ) } : ({ _r64 _lst◂{ _s8 _t23 } }→{ _r64 _s8 })
;; rsp=0 , %944~1'(= a2◂ [ *{ {| l |}a23◂ [ ]}] ) %943~0'(= r ) 
;; ?; 1'(= a2◂ [ *{ {| l |}a23◂ [ ]}] ) ⊢ 0(<2)◂{ { 3'(= {| l |} ) 4'(= a23◂ [ ] ) } 5'(= a2◂ [ *{ {| l |}a23◂ [ ]}] ) }
	mov rdi,r14
	cmp BYTE [rdi+6],0
	jnz LB_809
	mov r8, QWORD [r14+8]
	mov r9, QWORD [r8+8]
	mov r10, QWORD [r8+16]
	mov QWORD [GBG_VCT+8*0],r8
	mov r11, QWORD [r14+16]
	mov QWORD [GBG_VCT+8*1],r14
	mov rdi,QWORD [GBG_VCT+8*1]
	mov rax,[SS_RCD_2_TOP]
	mov QWORD [rdi],rax 
	mov QWORD [SS_RCD_2_TOP],rdi
	mov rdi,QWORD [GBG_VCT+8*0]
	mov rax,[SS_RCD_2_TOP]
	mov QWORD [rdi],rax 
	mov QWORD [SS_RCD_2_TOP],rdi
;; rsp=0 , %947~5'(= a2◂ [ *{ {| l |}a23◂ [ ]}] ) %946~4'(= a23◂ [ ] ) %945~3'(= {| l |} ) %943~0'(= r ) 
; #183 { 0'(= r ) 5'(= a2◂ [ *{ {| l |}a23◂ [ ]}] ) } ⊢ { 0'(= r ) 1'(= {| l |} ) }
	sub rsp,16
	mov QWORD [rsp+8*0],r9
	mov QWORD [rsp+8*1],r10
; .mov_ptn2 { 0'(= r ) 5'(= a2◂ [ *{ {| l |}a23◂ [ ]}] ) } ⊢ { 0'(= r ) 1'(= a2◂ [ *{ {| l |}a23◂ [ ]}] ) }
; .mov_ptn 5'(= a2◂ [ *{ {| l |}a23◂ [ ]}] ) ⊢ 1'(= a2◂ [ *{ {| l |}a23◂ [ ]}] )
	mov rax,r11
	mov r14,rax
	call ETR_183
	mov r10,QWORD [rsp-8+8*2]
	mov r9,QWORD [rsp-8+8*1]
	add rsp,16
;; rsp=0 , %949~1'(= {| l |} ) %948~0'(= r ) %946~4'(= a23◂ [ ] ) %945~3'(= {| l |} ) 
; #184 4'(= a23◂ [ ] ) ⊢ 2'(= {| l |} )
	sub rsp,24
	mov QWORD [rsp+8*0],r13
	mov QWORD [rsp+8*1],r14
	mov QWORD [rsp+8*2],r9
; .mov_ptn2 4'(= a23◂ [ ] ) ⊢ 0'(= a23◂ [ ] )
; .mov_ptn 4'(= a23◂ [ ] ) ⊢ 0'(= a23◂ [ ] )
	mov rax,r10
	mov r13,rax
	call ETR_184
	mov r9,QWORD [rsp-8+8*3]
	mov r14,QWORD [rsp-8+8*2]
	mov r8,r13
	mov r13,QWORD [rsp-8+8*1]
	add rsp,24
;; rsp=0 , %950~2'(= {| l |} ) %949~1'(= {| l |} ) %948~0'(= r ) %945~3'(= {| l |} ) 
; » _^ .. ⊢ ..
; .. //
	mov rdi,0
	mov rsi,r13
	imul rsi,1
	add rdi,rsi 
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[r9]
	add rdi,rax 
	push rax
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[r8]
	add rdi,rax 
	push rax
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[r14]
	add rdi,rax 
	push rax
	add rdi,8
	push rdi 
	call mlc_s8
	pop rdi
	mov r10,rax
	lea rdi,[rax+7+rdi]
	std 
	mov QWORD [tmp],rcx 
	pop rcx
	lea rsi,[r14+7+rcx]
	rep movsb
	lea rsi,[LB_810+1-1]
	mov rcx,1
	rep movsb
	pop rcx
	lea rsi,[r8+7+rcx]
	rep movsb
	lea rsi,[LB_811+3-1]
	mov rcx,3
	rep movsb
	pop rcx
	lea rsi,[r9+7+rcx]
	rep movsb
	lea rsi,[LB_812+4-1]
	mov rcx,4
	rep movsb
	mov rax,r13
LB_814:
	cmp rax,0
	jz LB_815
	sub rax,1
	lea rsi,[LB_813+1-1]
	mov rcx,1
	rep movsb 
	jmp LB_814
LB_815:
	mov rcx,QWORD [tmp] 
;; rsp=0 , %955~4'(= {| l |} ) %954~1'(= {| l |} ) %953~2'(= {| l |} ) %952~3'(= {| l |} ) %951~0'(= r ) 
; ∎ { 0'(= r ) 4'(= {| l |} ) }
; .dlt.ptn 1'(= {| l |} )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	mov rdi,r8
	call free_s8
	C_POP_REGS
; .dlt.ptn 2'(= {| l |} )
	mov rdi,r8
	C_PUSH_REGS
	mov r8,rdi
	mov rdi,r8
	call free_s8
	C_POP_REGS
; .dlt.ptn 3'(= {| l |} )
	mov rdi,r9
	C_PUSH_REGS
	mov r8,rdi
	mov rdi,r8
	call free_s8
	C_POP_REGS
; .mov_ptn2 { 0'(= r ) 4'(= {| l |} ) } ⊢ { 0'(= r ) 1'(= {| l |} ) }
; .mov_ptn 4'(= {| l |} ) ⊢ 1'(= {| l |} )
	mov rax,r10
	mov r14,rax
	ret
LB_809:
;; ?; 1'(= a2◂ [ *{ {| l |}a23◂ [ ]}] ) ⊢ 1(<2)◂{ }
;; rsp=0 , %943~0'(= r ) 
; $ %[ "" ] ⊢ %[ "" ]
;; rsp=0 , %956~%[ "" ] %943~0'(= r ) 
; ∎ { 0'(= r ) %[ "" ] }
; .mov_ptn2 { 0'(= r ) %[ "" ] } ⊢ { 0'(= r ) 1'(= {| l |} ) }
; .mov_ptn %[ "" ] ⊢ 1'(= {| l |} )
	mov rsi,1  
	mov rdi,16
	xor rax,rax 
	C_CALL_SF calloc
	mov QWORD [rax],0
	mov r14,rax
	ret
ETR_184: ;; pnt_type 0'(= a23◂ [ ] ) ⊢ 0'(= {| l |} ) : (_t23→_s8)
;; rsp=0 , %957~0'(= a23◂ [ ] ) 
;; ?; 0'(= a23◂ [ ] ) ⊢ 0(<5)◂1'(= a2◂ [ a23◂ [ ]] )
	mov rdi,r13
	cmp BYTE [rdi+6],0
	jnz LB_816
	mov QWORD [GBG_VCT+8*0],rdi
	mov r14,QWORD [rdi+8]
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_LN rdi
;; rsp=0 , %958~1'(= a2◂ [ a23◂ [ ]] ) 
; #185 1'(= a2◂ [ a23◂ [ ]] ) ⊢ 0'(= {| l |} )
; .mov_ptn2 1'(= a2◂ [ a23◂ [ ]] ) ⊢ 0'(= a2◂ [ a23◂ [ ]] )
; .mov_ptn 1'(= a2◂ [ a23◂ [ ]] ) ⊢ 0'(= a2◂ [ a23◂ [ ]] )
	mov rax,r14
	mov r13,rax
	call ETR_185
;; rsp=0 , %959~0'(= {| l |} ) 
; » _^ .. ⊢ ..
; .. //
	mov rdi,0
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[r13]
	add rdi,rax 
	push rax
	add rdi,3
	push rdi 
	call mlc_s8
	pop rdi
	mov r14,rax
	lea rdi,[rax+7+rdi]
	std 
	mov QWORD [tmp],rcx 
	lea rsi,[LB_817+1-1]
	mov rcx,1
	rep movsb
	pop rcx
	lea rsi,[r13+7+rcx]
	rep movsb
	lea rsi,[LB_818+2-1]
	mov rcx,2
	rep movsb
	mov rcx,QWORD [tmp] 
;; rsp=0 , %961~1'(= {| l |} ) %960~0'(= {| l |} ) 
; ∎ 1'(= {| l |} )
; .dlt.ptn 0'(= {| l |} )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	mov rdi,r8
	call free_s8
	C_POP_REGS
; .mov_ptn2 1'(= {| l |} ) ⊢ 0'(= {| l |} )
; .mov_ptn 1'(= {| l |} ) ⊢ 0'(= {| l |} )
	mov rax,r14
	mov r13,rax
	ret
LB_816:
;; ?; 0'(= a23◂ [ ] ) ⊢ 1(<5)◂{ 1'(= a23◂ [ ] ) 2'(= a23◂ [ ] ) }
	mov rdi,r13
	cmp BYTE [rdi+6],1
	jnz LB_819
	mov r14, QWORD [r13+8]
	mov r8, QWORD [r13+16]
	mov QWORD [GBG_VCT+8*0],r13
	mov rdi,QWORD [GBG_VCT+8*0]
	mov rax,[SS_RCD_2_TOP]
	mov QWORD [rdi],rax 
	mov QWORD [SS_RCD_2_TOP],rdi
;; rsp=0 , %963~2'(= a23◂ [ ] ) %962~1'(= a23◂ [ ] ) 
; #184 1'(= a23◂ [ ] ) ⊢ 0'(= {| l |} )
	sub rsp,8
	mov QWORD [rsp+8*0],r8
; .mov_ptn2 1'(= a23◂ [ ] ) ⊢ 0'(= a23◂ [ ] )
; .mov_ptn 1'(= a23◂ [ ] ) ⊢ 0'(= a23◂ [ ] )
	mov rax,r14
	mov r13,rax
	call ETR_184
	mov r8,QWORD [rsp-8+8*1]
	add rsp,8
;; rsp=0 , %964~0'(= {| l |} ) %963~2'(= a23◂ [ ] ) 
; #184 2'(= a23◂ [ ] ) ⊢ 1'(= {| l |} )
	sub rsp,8
	mov QWORD [rsp+8*0],r13
; .mov_ptn2 2'(= a23◂ [ ] ) ⊢ 0'(= a23◂ [ ] )
; .mov_ptn 2'(= a23◂ [ ] ) ⊢ 0'(= a23◂ [ ] )
	mov rax,r8
	mov r13,rax
	call ETR_184
	mov r14,r13
	mov r13,QWORD [rsp-8+8*1]
	add rsp,8
;; rsp=0 , %965~1'(= {| l |} ) %964~0'(= {| l |} ) 
; » _^ .. ⊢ ..
; .. //
	mov rdi,0
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[r13]
	add rdi,rax 
	push rax
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[r14]
	add rdi,rax 
	push rax
	add rdi,5
	push rdi 
	call mlc_s8
	pop rdi
	mov r8,rax
	lea rdi,[rax+7+rdi]
	std 
	mov QWORD [tmp],rcx 
	pop rcx
	lea rsi,[r14+7+rcx]
	rep movsb
	lea rsi,[LB_820+5-1]
	mov rcx,5
	rep movsb
	pop rcx
	lea rsi,[r13+7+rcx]
	rep movsb
	mov rcx,QWORD [tmp] 
;; rsp=0 , %968~2'(= {| l |} ) %967~1'(= {| l |} ) %966~0'(= {| l |} ) 
; ∎ 2'(= {| l |} )
; .dlt.ptn 1'(= {| l |} )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	mov rdi,r8
	call free_s8
	C_POP_REGS
; .dlt.ptn 0'(= {| l |} )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	mov rdi,r8
	call free_s8
	C_POP_REGS
; .mov_ptn2 2'(= {| l |} ) ⊢ 0'(= {| l |} )
; .mov_ptn 2'(= {| l |} ) ⊢ 0'(= {| l |} )
	mov rax,r8
	mov r13,rax
	ret
LB_819:
;; ?; 0'(= a23◂ [ ] ) ⊢ 2(<5)◂{ 1'(= a23◂ [ ] ) 2'(= a23◂ [ ] ) }
	mov rdi,r13
	cmp BYTE [rdi+6],2
	jnz LB_821
	mov r14, QWORD [r13+8]
	mov r8, QWORD [r13+16]
	mov QWORD [GBG_VCT+8*0],r13
	mov rdi,QWORD [GBG_VCT+8*0]
	mov rax,[SS_RCD_2_TOP]
	mov QWORD [rdi],rax 
	mov QWORD [SS_RCD_2_TOP],rdi
;; rsp=0 , %970~2'(= a23◂ [ ] ) %969~1'(= a23◂ [ ] ) 
; #184 1'(= a23◂ [ ] ) ⊢ 0'(= {| l |} )
	sub rsp,8
	mov QWORD [rsp+8*0],r8
; .mov_ptn2 1'(= a23◂ [ ] ) ⊢ 0'(= a23◂ [ ] )
; .mov_ptn 1'(= a23◂ [ ] ) ⊢ 0'(= a23◂ [ ] )
	mov rax,r14
	mov r13,rax
	call ETR_184
	mov r8,QWORD [rsp-8+8*1]
	add rsp,8
;; rsp=0 , %971~0'(= {| l |} ) %970~2'(= a23◂ [ ] ) 
; #184 2'(= a23◂ [ ] ) ⊢ 1'(= {| l |} )
	sub rsp,8
	mov QWORD [rsp+8*0],r13
; .mov_ptn2 2'(= a23◂ [ ] ) ⊢ 0'(= a23◂ [ ] )
; .mov_ptn 2'(= a23◂ [ ] ) ⊢ 0'(= a23◂ [ ] )
	mov rax,r8
	mov r13,rax
	call ETR_184
	mov r14,r13
	mov r13,QWORD [rsp-8+8*1]
	add rsp,8
;; rsp=0 , %972~1'(= {| l |} ) %971~0'(= {| l |} ) 
; » _^ .. ⊢ ..
; .. //
	mov rdi,0
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[r13]
	add rdi,rax 
	push rax
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[r14]
	add rdi,rax 
	push rax
	add rdi,3
	push rdi 
	call mlc_s8
	pop rdi
	mov r8,rax
	lea rdi,[rax+7+rdi]
	std 
	mov QWORD [tmp],rcx 
	pop rcx
	lea rsi,[r14+7+rcx]
	rep movsb
	lea rsi,[LB_822+3-1]
	mov rcx,3
	rep movsb
	pop rcx
	lea rsi,[r13+7+rcx]
	rep movsb
	mov rcx,QWORD [tmp] 
;; rsp=0 , %975~2'(= {| l |} ) %974~1'(= {| l |} ) %973~0'(= {| l |} ) 
; ∎ 2'(= {| l |} )
; .dlt.ptn 1'(= {| l |} )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	mov rdi,r8
	call free_s8
	C_POP_REGS
; .dlt.ptn 0'(= {| l |} )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	mov rdi,r8
	call free_s8
	C_POP_REGS
; .mov_ptn2 2'(= {| l |} ) ⊢ 0'(= {| l |} )
; .mov_ptn 2'(= {| l |} ) ⊢ 0'(= {| l |} )
	mov rax,r8
	mov r13,rax
	ret
LB_821:
;; ?; 0'(= a23◂ [ ] ) ⊢ 3(<5)◂1'(= a9◂ [ ] )
	mov rdi,r13
	cmp BYTE [rdi+6],3
	jnz LB_823
	mov QWORD [GBG_VCT+8*0],rdi
	mov r14,QWORD [rdi+8]
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_LN rdi
;; rsp=0 , %976~1'(= a9◂ [ ] ) 
; #84 1'(= a9◂ [ ] ) ⊢ 0'(= {| l |} )
; .mov_ptn2 1'(= a9◂ [ ] ) ⊢ 0'(= a9◂ [ ] )
; .mov_ptn 1'(= a9◂ [ ] ) ⊢ 0'(= a9◂ [ ] )
	mov rax,r14
	mov r13,rax
	call ETR_84
;; rsp=0 , %977~0'(= {| l |} ) 
; ∎ 0'(= {| l |} )
; .mov_ptn2 0'(= {| l |} ) ⊢ 0'(= {| l |} )
	ret
LB_823:
;; ?; 0'(= a23◂ [ ] ) ⊢ 4(<5)◂0'(= {| l |} )
;; rsp=0 , %978~0'(= {| l |} ) 
; » _^ .. ⊢ ..
; .. //
	mov rdi,0
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[r13]
	add rdi,rax 
	push rax
	add rdi,1
	push rdi 
	call mlc_s8
	pop rdi
	mov r14,rax
	lea rdi,[rax+7+rdi]
	std 
	mov QWORD [tmp],rcx 
	lea rsi,[LB_824+1-1]
	mov rcx,1
	rep movsb
	pop rcx
	lea rsi,[r13+7+rcx]
	rep movsb
	mov rcx,QWORD [tmp] 
;; rsp=0 , %980~1'(= {| l |} ) %979~0'(= {| l |} ) 
; ∎ 1'(= {| l |} )
; .dlt.ptn 0'(= {| l |} )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	mov rdi,r8
	call free_s8
	C_POP_REGS
; .mov_ptn2 1'(= {| l |} ) ⊢ 0'(= {| l |} )
; .mov_ptn 1'(= {| l |} ) ⊢ 0'(= {| l |} )
	mov rax,r14
	mov r13,rax
	ret
ETR_185: ;; pnt_type_rcd 0'(= a2◂ [ a23◂ [ ]] ) ⊢ 0'(= {| l |} ) : (_lst◂_t23→_s8)
;; rsp=0 , %981~0'(= a2◂ [ a23◂ [ ]] ) 
;; ?; 0'(= a2◂ [ a23◂ [ ]] ) ⊢ 0(<2)◂{ 1'(= a23◂ [ ] ) 2'(= a2◂ [ a23◂ [ ]] ) }
	mov rdi,r13
	cmp BYTE [rdi+6],0
	jnz LB_825
	mov r14, QWORD [r13+8]
	mov r8, QWORD [r13+16]
	mov QWORD [GBG_VCT+8*0],r13
	mov rdi,QWORD [GBG_VCT+8*0]
	mov rax,[SS_RCD_2_TOP]
	mov QWORD [rdi],rax 
	mov QWORD [SS_RCD_2_TOP],rdi
;; rsp=0 , %983~2'(= a2◂ [ a23◂ [ ]] ) %982~1'(= a23◂ [ ] ) 
; #184 1'(= a23◂ [ ] ) ⊢ 0'(= {| l |} )
	sub rsp,8
	mov QWORD [rsp+8*0],r8
; .mov_ptn2 1'(= a23◂ [ ] ) ⊢ 0'(= a23◂ [ ] )
; .mov_ptn 1'(= a23◂ [ ] ) ⊢ 0'(= a23◂ [ ] )
	mov rax,r14
	mov r13,rax
	call ETR_184
	mov r8,QWORD [rsp-8+8*1]
	add rsp,8
;; rsp=0 , %984~0'(= {| l |} ) %983~2'(= a2◂ [ a23◂ [ ]] ) 
; #185 2'(= a2◂ [ a23◂ [ ]] ) ⊢ 1'(= {| l |} )
	sub rsp,8
	mov QWORD [rsp+8*0],r13
; .mov_ptn2 2'(= a2◂ [ a23◂ [ ]] ) ⊢ 0'(= a2◂ [ a23◂ [ ]] )
; .mov_ptn 2'(= a2◂ [ a23◂ [ ]] ) ⊢ 0'(= a2◂ [ a23◂ [ ]] )
	mov rax,r8
	mov r13,rax
	call ETR_185
	mov r14,r13
	mov r13,QWORD [rsp-8+8*1]
	add rsp,8
;; rsp=0 , %985~1'(= {| l |} ) %984~0'(= {| l |} ) 
; » _^ .. ⊢ ..
; .. //
	mov rdi,0
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[r13]
	add rdi,rax 
	push rax
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[r14]
	add rdi,rax 
	push rax
	add rdi,1
	push rdi 
	call mlc_s8
	pop rdi
	mov r8,rax
	lea rdi,[rax+7+rdi]
	std 
	mov QWORD [tmp],rcx 
	pop rcx
	lea rsi,[r14+7+rcx]
	rep movsb
	lea rsi,[LB_826+1-1]
	mov rcx,1
	rep movsb
	pop rcx
	lea rsi,[r13+7+rcx]
	rep movsb
	mov rcx,QWORD [tmp] 
;; rsp=0 , %988~2'(= {| l |} ) %987~1'(= {| l |} ) %986~0'(= {| l |} ) 
; ∎ 2'(= {| l |} )
; .dlt.ptn 1'(= {| l |} )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	mov rdi,r8
	call free_s8
	C_POP_REGS
; .dlt.ptn 0'(= {| l |} )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	mov rdi,r8
	call free_s8
	C_POP_REGS
; .mov_ptn2 2'(= {| l |} ) ⊢ 0'(= {| l |} )
; .mov_ptn 2'(= {| l |} ) ⊢ 0'(= {| l |} )
	mov rax,r8
	mov r13,rax
	ret
LB_825:
;; ?; 0'(= a2◂ [ a23◂ [ ]] ) ⊢ 1(<2)◂{ }
;; rsp=0 , 
; $ %[ "" ] ⊢ %[ "" ]
;; rsp=0 , %989~%[ "" ] 
; ∎ %[ "" ]
; .mov_ptn2 %[ "" ] ⊢ 0'(= {| l |} )
; .mov_ptn %[ "" ] ⊢ 0'(= {| l |} )
	mov rsi,1  
	mov rdi,16
	xor rax,rax 
	C_CALL_SF calloc
	mov QWORD [rax],0
	mov r13,rax
	ret
ETR_186: ;; pnt_lc_etr { 0'(= r ) 1'(= a33◂ [ ] ) } ⊢ { 0'(= r ) 1'(= {| l |} ) } : ({ _r64 _t33 }→{ _r64 _s8 })
;; rsp=0 , %991~1'(= a33◂ [ ] ) %990~0'(= r ) 
;; ?; 1'(= a33◂ [ ] ) ⊢ 0(<3)◂{ 2'(= a8◂ [ a13◂ [ {| l |}]] ) 3'(= a3◂ [ a23◂ [ ]] ) 4'(= a17◂ [ a9◂ [ ]{| l |}] ) }
	mov rdi,r14
	cmp BYTE [rdi+6],0
	jnz LB_827
	mov r8, QWORD [r14+8]
	mov r9, QWORD [r14+16]
	mov r10, QWORD [r14+24]
	mov QWORD [GBG_VCT+8*0],r14
	mov rdi,QWORD [GBG_VCT+8*0]
	mov rax,[SS_RCD_3_TOP]
	mov QWORD [rdi],rax 
	mov QWORD [SS_RCD_3_TOP],rdi
;; rsp=0 , %994~4'(= a17◂ [ a9◂ [ ]{| l |}] ) %993~3'(= a3◂ [ a23◂ [ ]] ) %992~2'(= a8◂ [ a13◂ [ {| l |}]] ) %990~0'(= r ) 
;; ?; 3'(= a3◂ [ a23◂ [ ]] ) ⊢ 0(<2)◂1'(= a23◂ [ ] )
	mov rdi,r9
	cmp BYTE [rdi+6],0
	jnz LB_828
	mov QWORD [GBG_VCT+8*0],rdi
	mov r14,QWORD [rdi+8]
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_LN rdi
;; rsp=0 , %995~1'(= a23◂ [ ] ) %994~4'(= a17◂ [ a9◂ [ ]{| l |}] ) %992~2'(= a8◂ [ a13◂ [ {| l |}]] ) %990~0'(= r ) 
; #184 1'(= a23◂ [ ] ) ⊢ 1'(= {| l |} )
	sub rsp,24
	mov QWORD [rsp+8*0],r13
	mov QWORD [rsp+8*1],r8
	mov QWORD [rsp+8*2],r10
; .mov_ptn2 1'(= a23◂ [ ] ) ⊢ 0'(= a23◂ [ ] )
; .mov_ptn 1'(= a23◂ [ ] ) ⊢ 0'(= a23◂ [ ] )
	mov rax,r14
	mov r13,rax
	call ETR_184
	mov r10,QWORD [rsp-8+8*3]
	mov r8,QWORD [rsp-8+8*2]
	mov r14,r13
	mov r13,QWORD [rsp-8+8*1]
	add rsp,24
;; rsp=0 , %996~1'(= {| l |} ) %994~4'(= a17◂ [ a9◂ [ ]{| l |}] ) %992~2'(= a8◂ [ a13◂ [ {| l |}]] ) %990~0'(= r ) 
; #101 2'(= a8◂ [ a13◂ [ {| l |}]] ) ⊢ 2'(= {| l |} )
	sub rsp,24
	mov QWORD [rsp+8*0],r13
	mov QWORD [rsp+8*1],r14
	mov QWORD [rsp+8*2],r10
; .mov_ptn2 2'(= a8◂ [ a13◂ [ {| l |}]] ) ⊢ 0'(= a8◂ [ a13◂ [ {| l |}]] )
; .mov_ptn 2'(= a8◂ [ a13◂ [ {| l |}]] ) ⊢ 0'(= a8◂ [ a13◂ [ {| l |}]] )
	mov rax,r8
	mov r13,rax
	call ETR_101
	mov r10,QWORD [rsp-8+8*3]
	mov r14,QWORD [rsp-8+8*2]
	mov r8,r13
	mov r13,QWORD [rsp-8+8*1]
	add rsp,24
;; rsp=0 , %997~2'(= {| l |} ) %996~1'(= {| l |} ) %994~4'(= a17◂ [ a9◂ [ ]{| l |}] ) %990~0'(= r ) 
; #11 0'(= r ) ⊢ 0'(= r )
	add r13,1
;; rsp=0 , %998~0'(= r ) %997~2'(= {| l |} ) %996~1'(= {| l |} ) %994~4'(= a17◂ [ a9◂ [ ]{| l |}] ) 
; #134 { 0'(= r ) 4'(= a17◂ [ a9◂ [ ]{| l |}] ) } ⊢ { 0'(= r ) 3'(= {| l |} ) }
	sub rsp,16
	mov QWORD [rsp+8*0],r14
	mov QWORD [rsp+8*1],r8
; .mov_ptn2 { 0'(= r ) 4'(= a17◂ [ a9◂ [ ]{| l |}] ) } ⊢ { 0'(= r ) 1'(= a17◂ [ a9◂ [ ]{| l |}] ) }
; .mov_ptn 4'(= a17◂ [ a9◂ [ ]{| l |}] ) ⊢ 1'(= a17◂ [ a9◂ [ ]{| l |}] )
	mov rax,r10
	mov r14,rax
	call ETR_134
	mov r8,QWORD [rsp-8+8*2]
	mov r9,r14
	mov r14,QWORD [rsp-8+8*1]
	add rsp,16
;; rsp=0 , %1000~3'(= {| l |} ) %999~0'(= r ) %997~2'(= {| l |} ) %996~1'(= {| l |} ) 
; #12 0'(= r ) ⊢ 0'(= r )
	sub r13,1
;; rsp=0 , %1001~0'(= r ) %1000~3'(= {| l |} ) %997~2'(= {| l |} ) %996~1'(= {| l |} ) 
; » _^ .. ⊢ ..
; .. //
	mov rdi,0
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[r8]
	add rdi,rax 
	push rax
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[r14]
	add rdi,rax 
	push rax
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[r9]
	add rdi,rax 
	push rax
	add rdi,5
	push rdi 
	call mlc_s8
	pop rdi
	mov r10,rax
	lea rdi,[rax+7+rdi]
	std 
	mov QWORD [tmp],rcx 
	pop rcx
	lea rsi,[r9+7+rcx]
	rep movsb
	lea rsi,[LB_829+1-1]
	mov rcx,1
	rep movsb
	pop rcx
	lea rsi,[r14+7+rcx]
	rep movsb
	lea rsi,[LB_830+3-1]
	mov rcx,3
	rep movsb
	pop rcx
	lea rsi,[r8+7+rcx]
	rep movsb
	lea rsi,[LB_831+1-1]
	mov rcx,1
	rep movsb
	mov rcx,QWORD [tmp] 
;; rsp=0 , %1005~4'(= {| l |} ) %1004~1'(= {| l |} ) %1003~3'(= {| l |} ) %1002~2'(= {| l |} ) %1001~0'(= r ) 
; ∎ { 0'(= r ) 4'(= {| l |} ) }
; .dlt.ptn 1'(= {| l |} )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	mov rdi,r8
	call free_s8
	C_POP_REGS
; .dlt.ptn 3'(= {| l |} )
	mov rdi,r9
	C_PUSH_REGS
	mov r8,rdi
	mov rdi,r8
	call free_s8
	C_POP_REGS
; .dlt.ptn 2'(= {| l |} )
	mov rdi,r8
	C_PUSH_REGS
	mov r8,rdi
	mov rdi,r8
	call free_s8
	C_POP_REGS
; .mov_ptn2 { 0'(= r ) 4'(= {| l |} ) } ⊢ { 0'(= r ) 1'(= {| l |} ) }
; .mov_ptn 4'(= {| l |} ) ⊢ 1'(= {| l |} )
	mov rax,r10
	mov r14,rax
	ret
LB_828:
;; rsp=0 , %994~4'(= a17◂ [ a9◂ [ ]{| l |}] ) %993~3'(= a3◂ [ a23◂ [ ]] ) %992~2'(= a8◂ [ a13◂ [ {| l |}]] ) %990~0'(= r ) 
; #101 2'(= a8◂ [ a13◂ [ {| l |}]] ) ⊢ 1'(= {| l |} )
	sub rsp,24
	mov QWORD [rsp+8*0],r13
	mov QWORD [rsp+8*1],r9
	mov QWORD [rsp+8*2],r10
; .mov_ptn2 2'(= a8◂ [ a13◂ [ {| l |}]] ) ⊢ 0'(= a8◂ [ a13◂ [ {| l |}]] )
; .mov_ptn 2'(= a8◂ [ a13◂ [ {| l |}]] ) ⊢ 0'(= a8◂ [ a13◂ [ {| l |}]] )
	mov rax,r8
	mov r13,rax
	call ETR_101
	mov r10,QWORD [rsp-8+8*3]
	mov r9,QWORD [rsp-8+8*2]
	mov r14,r13
	mov r13,QWORD [rsp-8+8*1]
	add rsp,24
;; rsp=0 , %1006~1'(= {| l |} ) %994~4'(= a17◂ [ a9◂ [ ]{| l |}] ) %993~3'(= a3◂ [ a23◂ [ ]] ) %990~0'(= r ) 
; #11 0'(= r ) ⊢ 0'(= r )
	add r13,1
;; rsp=0 , %1007~0'(= r ) %1006~1'(= {| l |} ) %994~4'(= a17◂ [ a9◂ [ ]{| l |}] ) %993~3'(= a3◂ [ a23◂ [ ]] ) 
; #134 { 0'(= r ) 4'(= a17◂ [ a9◂ [ ]{| l |}] ) } ⊢ { 0'(= r ) 2'(= {| l |} ) }
	sub rsp,16
	mov QWORD [rsp+8*0],r14
	mov QWORD [rsp+8*1],r9
; .mov_ptn2 { 0'(= r ) 4'(= a17◂ [ a9◂ [ ]{| l |}] ) } ⊢ { 0'(= r ) 1'(= a17◂ [ a9◂ [ ]{| l |}] ) }
; .mov_ptn 4'(= a17◂ [ a9◂ [ ]{| l |}] ) ⊢ 1'(= a17◂ [ a9◂ [ ]{| l |}] )
	mov rax,r10
	mov r14,rax
	call ETR_134
	mov r9,QWORD [rsp-8+8*2]
	mov r8,r14
	mov r14,QWORD [rsp-8+8*1]
	add rsp,16
;; rsp=0 , %1009~2'(= {| l |} ) %1008~0'(= r ) %1006~1'(= {| l |} ) %993~3'(= a3◂ [ a23◂ [ ]] ) 
; #12 0'(= r ) ⊢ 0'(= r )
	sub r13,1
;; rsp=0 , %1010~0'(= r ) %1009~2'(= {| l |} ) %1006~1'(= {| l |} ) %993~3'(= a3◂ [ a23◂ [ ]] ) 
; » _^ .. ⊢ ..
; .. //
	mov rdi,0
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[r14]
	add rdi,rax 
	push rax
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[r8]
	add rdi,rax 
	push rax
	add rdi,2
	push rdi 
	call mlc_s8
	pop rdi
	mov r10,rax
	lea rdi,[rax+7+rdi]
	std 
	mov QWORD [tmp],rcx 
	pop rcx
	lea rsi,[r8+7+rcx]
	rep movsb
	lea rsi,[LB_832+1-1]
	mov rcx,1
	rep movsb
	pop rcx
	lea rsi,[r14+7+rcx]
	rep movsb
	lea rsi,[LB_833+1-1]
	mov rcx,1
	rep movsb
	mov rcx,QWORD [tmp] 
;; rsp=0 , %1013~4'(= {| l |} ) %1012~2'(= {| l |} ) %1011~1'(= {| l |} ) %1010~0'(= r ) %993~3'(= a3◂ [ a23◂ [ ]] ) 
; ∎ { 0'(= r ) 4'(= {| l |} ) }
; .dlt.ptn 2'(= {| l |} )
	mov rdi,r8
	C_PUSH_REGS
	mov r8,rdi
	mov rdi,r8
	call free_s8
	C_POP_REGS
; .dlt.ptn 1'(= {| l |} )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	mov rdi,r8
	call free_s8
	C_POP_REGS
; .dlt.ptn 3'(= a3◂ [ a23◂ [ ]] )
	mov rdi,r9
	C_PUSH_REGS
	mov r8,rdi
	call LB_834
	C_POP_REGS
; .mov_ptn2 { 0'(= r ) 4'(= {| l |} ) } ⊢ { 0'(= r ) 1'(= {| l |} ) }
; .mov_ptn 4'(= {| l |} ) ⊢ 1'(= {| l |} )
	mov rax,r10
	mov r14,rax
	ret
LB_827:
;; ?; 1'(= a33◂ [ ] ) ⊢ 1(<3)◂2'(= a11◂ [ a9◂ [ ]] )
	mov rdi,r14
	cmp BYTE [rdi+6],1
	jnz LB_839
	mov QWORD [GBG_VCT+8*0],rdi
	mov r8,QWORD [rdi+8]
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_LN rdi
;; rsp=0 , %1014~2'(= a11◂ [ a9◂ [ ]] ) %990~0'(= r ) 
; #90 2'(= a11◂ [ a9◂ [ ]] ) ⊢ 1'(= {| l |} )
	sub rsp,8
	mov QWORD [rsp+8*0],r13
; .mov_ptn2 2'(= a11◂ [ a9◂ [ ]] ) ⊢ 0'(= a11◂ [ a9◂ [ ]] )
; .mov_ptn 2'(= a11◂ [ a9◂ [ ]] ) ⊢ 0'(= a11◂ [ a9◂ [ ]] )
	mov rax,r8
	mov r13,rax
	call ETR_90
	mov r14,r13
	mov r13,QWORD [rsp-8+8*1]
	add rsp,8
;; rsp=0 , %1015~1'(= {| l |} ) %990~0'(= r ) 
; » _^ .. ⊢ ..
; .. //
	mov rdi,0
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[r14]
	add rdi,rax 
	push rax
	add rdi,4
	push rdi 
	call mlc_s8
	pop rdi
	mov r8,rax
	lea rdi,[rax+7+rdi]
	std 
	mov QWORD [tmp],rcx 
	lea rsi,[LB_840+1-1]
	mov rcx,1
	rep movsb
	pop rcx
	lea rsi,[r14+7+rcx]
	rep movsb
	lea rsi,[LB_841+3-1]
	mov rcx,3
	rep movsb
	mov rcx,QWORD [tmp] 
;; rsp=0 , %1017~2'(= {| l |} ) %1016~1'(= {| l |} ) %990~0'(= r ) 
; ∎ { 0'(= r ) 2'(= {| l |} ) }
; .dlt.ptn 1'(= {| l |} )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	mov rdi,r8
	call free_s8
	C_POP_REGS
; .mov_ptn2 { 0'(= r ) 2'(= {| l |} ) } ⊢ { 0'(= r ) 1'(= {| l |} ) }
; .mov_ptn 2'(= {| l |} ) ⊢ 1'(= {| l |} )
	mov rax,r8
	mov r14,rax
	ret
LB_839:
;; ?; 1'(= a33◂ [ ] ) ⊢ 2(<3)◂2'(= a17◂ [ a9◂ [ ]{| l |}] )
	mov QWORD [GBG_VCT+8*0],rdi
	mov r8,QWORD [rdi+8]
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_LN rdi
;; rsp=0 , %1018~2'(= a17◂ [ a9◂ [ ]{| l |}] ) %990~0'(= r ) 
; #11 0'(= r ) ⊢ 0'(= r )
	add r13,1
;; rsp=0 , %1019~0'(= r ) %1018~2'(= a17◂ [ a9◂ [ ]{| l |}] ) 
; #134 { 0'(= r ) 2'(= a17◂ [ a9◂ [ ]{| l |}] ) } ⊢ { 0'(= r ) 1'(= {| l |} ) }
; .mov_ptn2 { 0'(= r ) 2'(= a17◂ [ a9◂ [ ]{| l |}] ) } ⊢ { 0'(= r ) 1'(= a17◂ [ a9◂ [ ]{| l |}] ) }
; .mov_ptn 2'(= a17◂ [ a9◂ [ ]{| l |}] ) ⊢ 1'(= a17◂ [ a9◂ [ ]{| l |}] )
	mov rax,r8
	mov r14,rax
	call ETR_134
;; rsp=0 , %1021~1'(= {| l |} ) %1020~0'(= r ) 
; #12 0'(= r ) ⊢ 0'(= r )
	sub r13,1
;; rsp=0 , %1022~0'(= r ) %1021~1'(= {| l |} ) 
; » _^ .. ⊢ ..
; .. //
	mov rdi,0
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[r14]
	add rdi,rax 
	push rax
	add rdi,5
	push rdi 
	call mlc_s8
	pop rdi
	mov r8,rax
	lea rdi,[rax+7+rdi]
	std 
	mov QWORD [tmp],rcx 
	pop rcx
	lea rsi,[r14+7+rcx]
	rep movsb
	lea rsi,[LB_842+5-1]
	mov rcx,5
	rep movsb
	mov rcx,QWORD [tmp] 
;; rsp=0 , %1024~2'(= {| l |} ) %1023~1'(= {| l |} ) %1022~0'(= r ) 
; ∎ { 0'(= r ) 2'(= {| l |} ) }
; .dlt.ptn 1'(= {| l |} )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	mov rdi,r8
	call free_s8
	C_POP_REGS
; .mov_ptn2 { 0'(= r ) 2'(= {| l |} ) } ⊢ { 0'(= r ) 1'(= {| l |} ) }
; .mov_ptn 2'(= {| l |} ) ⊢ 1'(= {| l |} )
	mov rax,r8
	mov r14,rax
	ret
ETR_187: ;; pnt_lc_qlq_etr { 0'(= r ) 1'(= a2◂ [ *{ {| l |}a8◂ [ a13◂ [ {| l |}]]a3◂ [ a23◂ [ ]]a17◂ [ a9◂ [ ]{| l |}]}] ) } ⊢ { 0'(= r ) 1'(= {| l |} ) } : ({ _r64 _lst◂{ _s8 _t8◂_t13◂_s8 _opn◂_t23 _t17◂_s8◂_t9 } }→{ _r64 _s8 })
;; rsp=0 , %1026~1'(= a2◂ [ *{ {| l |}a8◂ [ a13◂ [ {| l |}]]a3◂ [ a23◂ [ ]]a17◂ [ a9◂ [ ]{| l |}]}] ) %1025~0'(= r ) 
;; ?; 1'(= a2◂ [ *{ {| l |}a8◂ [ a13◂ [ {| l |}]]a3◂ [ a23◂ [ ]]a17◂ [ a9◂ [ ]{| l |}]}] ) ⊢ 0(<2)◂{ { 3'(= {| l |} ) 4'(= a8◂ [ a13◂ [ {| l |}]] ) 5'(= a3◂ [ a23◂ [ ]] ) 6'(= a17◂ [ a9◂ [ ]{| l |}] ) } 7'(= a2◂ [ *{ {| l |}a8◂ [ a13◂ [ {| l |}]]a3◂ [ a23◂ [ ]]a17◂ [ a9◂ [ ]{| l |}]}] ) }
	mov rdi,r14
	cmp BYTE [rdi+6],0
	jnz LB_843
	mov r8, QWORD [r14+8]
	mov r9, QWORD [r8+8]
	mov r10, QWORD [r8+16]
	mov r11, QWORD [r8+24]
	mov rcx, QWORD [r8+32]
	mov QWORD [GBG_VCT+8*0],r8
	mov rdx, QWORD [r14+16]
	mov QWORD [GBG_VCT+8*1],r14
	mov rdi,QWORD [GBG_VCT+8*1]
	mov rax,[SS_RCD_2_TOP]
	mov QWORD [rdi],rax 
	mov QWORD [SS_RCD_2_TOP],rdi
	mov rdi,QWORD [GBG_VCT+8*0]
	mov rax,[SS_RCD_4_TOP]
	mov QWORD [rdi],rax 
	mov QWORD [SS_RCD_4_TOP],rdi
;; rsp=0 , %1031~7'(= a2◂ [ *{ {| l |}a8◂ [ a13◂ [ {| l |}]]a3◂ [ a23◂ [ ]]a17◂ [ a9◂ [ ]{| l |}]}] ) %1030~6'(= a17◂ [ a9◂ [ ]{| l |}] ) %1029~5'(= a3◂ [ a23◂ [ ]] ) %1028~4'(= a8◂ [ a13◂ [ {| l |}]] ) %1027~3'(= {| l |} ) %1025~0'(= r ) 
;; ?; 5'(= a3◂ [ a23◂ [ ]] ) ⊢ 0(<2)◂1'(= a23◂ [ ] )
	mov rdi,r11
	cmp BYTE [rdi+6],0
	jnz LB_844
	mov QWORD [GBG_VCT+8*0],rdi
	mov r14,QWORD [rdi+8]
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_LN rdi
;; rsp=0 , %1032~1'(= a23◂ [ ] ) %1031~7'(= a2◂ [ *{ {| l |}a8◂ [ a13◂ [ {| l |}]]a3◂ [ a23◂ [ ]]a17◂ [ a9◂ [ ]{| l |}]}] ) %1030~6'(= a17◂ [ a9◂ [ ]{| l |}] ) %1028~4'(= a8◂ [ a13◂ [ {| l |}]] ) %1027~3'(= {| l |} ) %1025~0'(= r ) 
; #184 1'(= a23◂ [ ] ) ⊢ 1'(= {| l |} )
	sub rsp,40
	mov QWORD [rsp+8*0],r13
	mov QWORD [rsp+8*1],r9
	mov QWORD [rsp+8*2],r10
	mov QWORD [rsp+8*3],rcx
	mov QWORD [rsp+8*4],rdx
; .mov_ptn2 1'(= a23◂ [ ] ) ⊢ 0'(= a23◂ [ ] )
; .mov_ptn 1'(= a23◂ [ ] ) ⊢ 0'(= a23◂ [ ] )
	mov rax,r14
	mov r13,rax
	call ETR_184
	mov rdx,QWORD [rsp-8+8*5]
	mov rcx,QWORD [rsp-8+8*4]
	mov r10,QWORD [rsp-8+8*3]
	mov r9,QWORD [rsp-8+8*2]
	mov r14,r13
	mov r13,QWORD [rsp-8+8*1]
	add rsp,40
;; rsp=0 , %1033~1'(= {| l |} ) %1031~7'(= a2◂ [ *{ {| l |}a8◂ [ a13◂ [ {| l |}]]a3◂ [ a23◂ [ ]]a17◂ [ a9◂ [ ]{| l |}]}] ) %1030~6'(= a17◂ [ a9◂ [ ]{| l |}] ) %1028~4'(= a8◂ [ a13◂ [ {| l |}]] ) %1027~3'(= {| l |} ) %1025~0'(= r ) 
; #101 4'(= a8◂ [ a13◂ [ {| l |}]] ) ⊢ 2'(= {| l |} )
	sub rsp,40
	mov QWORD [rsp+8*0],r13
	mov QWORD [rsp+8*1],r14
	mov QWORD [rsp+8*2],r9
	mov QWORD [rsp+8*3],rcx
	mov QWORD [rsp+8*4],rdx
; .mov_ptn2 4'(= a8◂ [ a13◂ [ {| l |}]] ) ⊢ 0'(= a8◂ [ a13◂ [ {| l |}]] )
; .mov_ptn 4'(= a8◂ [ a13◂ [ {| l |}]] ) ⊢ 0'(= a8◂ [ a13◂ [ {| l |}]] )
	mov rax,r10
	mov r13,rax
	call ETR_101
	mov rdx,QWORD [rsp-8+8*5]
	mov rcx,QWORD [rsp-8+8*4]
	mov r9,QWORD [rsp-8+8*3]
	mov r14,QWORD [rsp-8+8*2]
	mov r8,r13
	mov r13,QWORD [rsp-8+8*1]
	add rsp,40
;; rsp=0 , %1034~2'(= {| l |} ) %1033~1'(= {| l |} ) %1031~7'(= a2◂ [ *{ {| l |}a8◂ [ a13◂ [ {| l |}]]a3◂ [ a23◂ [ ]]a17◂ [ a9◂ [ ]{| l |}]}] ) %1030~6'(= a17◂ [ a9◂ [ ]{| l |}] ) %1027~3'(= {| l |} ) %1025~0'(= r ) 
; #187 { 0'(= r ) 7'(= a2◂ [ *{ {| l |}a8◂ [ a13◂ [ {| l |}]]a3◂ [ a23◂ [ ]]a17◂ [ a9◂ [ ]{| l |}]}] ) } ⊢ { 0'(= r ) 4'(= {| l |} ) }
	sub rsp,32
	mov QWORD [rsp+8*0],r14
	mov QWORD [rsp+8*1],r8
	mov QWORD [rsp+8*2],r9
	mov QWORD [rsp+8*3],rcx
; .mov_ptn2 { 0'(= r ) 7'(= a2◂ [ *{ {| l |}a8◂ [ a13◂ [ {| l |}]]a3◂ [ a23◂ [ ]]a17◂ [ a9◂ [ ]{| l |}]}] ) } ⊢ { 0'(= r ) 1'(= a2◂ [ *{ {| l |}a8◂ [ a13◂ [ {| l |}]]a3◂ [ a23◂ [ ]]a17◂ [ a9◂ [ ]{| l |}]}] ) }
; .mov_ptn 7'(= a2◂ [ *{ {| l |}a8◂ [ a13◂ [ {| l |}]]a3◂ [ a23◂ [ ]]a17◂ [ a9◂ [ ]{| l |}]}] ) ⊢ 1'(= a2◂ [ *{ {| l |}a8◂ [ a13◂ [ {| l |}]]a3◂ [ a23◂ [ ]]a17◂ [ a9◂ [ ]{| l |}]}] )
	mov rax,rdx
	mov r14,rax
	call ETR_187
	mov rcx,QWORD [rsp-8+8*4]
	mov r9,QWORD [rsp-8+8*3]
	mov r8,QWORD [rsp-8+8*2]
	mov r10,r14
	mov r14,QWORD [rsp-8+8*1]
	add rsp,32
;; rsp=0 , %1036~4'(= {| l |} ) %1035~0'(= r ) %1034~2'(= {| l |} ) %1033~1'(= {| l |} ) %1030~6'(= a17◂ [ a9◂ [ ]{| l |}] ) %1027~3'(= {| l |} ) 
; #11 0'(= r ) ⊢ 0'(= r )
	add r13,1
;; rsp=0 , %1037~0'(= r ) %1036~4'(= {| l |} ) %1034~2'(= {| l |} ) %1033~1'(= {| l |} ) %1030~6'(= a17◂ [ a9◂ [ ]{| l |}] ) %1027~3'(= {| l |} ) 
; #134 { 0'(= r ) 6'(= a17◂ [ a9◂ [ ]{| l |}] ) } ⊢ { 0'(= r ) 5'(= {| l |} ) }
	sub rsp,32
	mov QWORD [rsp+8*0],r14
	mov QWORD [rsp+8*1],r8
	mov QWORD [rsp+8*2],r9
	mov QWORD [rsp+8*3],r10
; .mov_ptn2 { 0'(= r ) 6'(= a17◂ [ a9◂ [ ]{| l |}] ) } ⊢ { 0'(= r ) 1'(= a17◂ [ a9◂ [ ]{| l |}] ) }
; .mov_ptn 6'(= a17◂ [ a9◂ [ ]{| l |}] ) ⊢ 1'(= a17◂ [ a9◂ [ ]{| l |}] )
	mov rax,rcx
	mov r14,rax
	call ETR_134
	mov r10,QWORD [rsp-8+8*4]
	mov r9,QWORD [rsp-8+8*3]
	mov r8,QWORD [rsp-8+8*2]
	mov r11,r14
	mov r14,QWORD [rsp-8+8*1]
	add rsp,32
;; rsp=0 , %1039~5'(= {| l |} ) %1038~0'(= r ) %1036~4'(= {| l |} ) %1034~2'(= {| l |} ) %1033~1'(= {| l |} ) %1027~3'(= {| l |} ) 
; #12 0'(= r ) ⊢ 0'(= r )
	sub r13,1
;; rsp=0 , %1040~0'(= r ) %1039~5'(= {| l |} ) %1036~4'(= {| l |} ) %1034~2'(= {| l |} ) %1033~1'(= {| l |} ) %1027~3'(= {| l |} ) 
; » _^ .. ⊢ ..
; .. //
	mov rdi,0
	mov rsi,r13
	imul rsi,1
	add rdi,rsi 
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[r9]
	add rdi,rax 
	push rax
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[r8]
	add rdi,rax 
	push rax
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[r14]
	add rdi,rax 
	push rax
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[r11]
	add rdi,rax 
	push rax
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[r10]
	add rdi,rax 
	push rax
	add rdi,7
	push rdi 
	call mlc_s8
	pop rdi
	mov rcx,rax
	lea rdi,[rax+7+rdi]
	std 
	mov QWORD [tmp],rcx 
	pop rcx
	lea rsi,[r10+7+rcx]
	rep movsb
	pop rcx
	lea rsi,[r11+7+rcx]
	rep movsb
	lea rsi,[LB_845+1-1]
	mov rcx,1
	rep movsb
	pop rcx
	lea rsi,[r14+7+rcx]
	rep movsb
	lea rsi,[LB_846+3-1]
	mov rcx,3
	rep movsb
	pop rcx
	lea rsi,[r8+7+rcx]
	rep movsb
	lea rsi,[LB_847+1-1]
	mov rcx,1
	rep movsb
	pop rcx
	lea rsi,[r9+7+rcx]
	rep movsb
	lea rsi,[LB_848+2-1]
	mov rcx,2
	rep movsb
	mov rax,r13
LB_850:
	cmp rax,0
	jz LB_851
	sub rax,1
	lea rsi,[LB_849+1-1]
	mov rcx,1
	rep movsb 
	jmp LB_850
LB_851:
	mov rcx,QWORD [tmp] 
;; rsp=0 , %1047~6'(= {| l |} ) %1046~1'(= {| l |} ) %1045~4'(= {| l |} ) %1044~5'(= {| l |} ) %1043~2'(= {| l |} ) %1042~3'(= {| l |} ) %1041~0'(= r ) 
; ∎ { 0'(= r ) 6'(= {| l |} ) }
; .dlt.ptn 1'(= {| l |} )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	mov rdi,r8
	call free_s8
	C_POP_REGS
; .dlt.ptn 4'(= {| l |} )
	mov rdi,r10
	C_PUSH_REGS
	mov r8,rdi
	mov rdi,r8
	call free_s8
	C_POP_REGS
; .dlt.ptn 5'(= {| l |} )
	mov rdi,r11
	C_PUSH_REGS
	mov r8,rdi
	mov rdi,r8
	call free_s8
	C_POP_REGS
; .dlt.ptn 2'(= {| l |} )
	mov rdi,r8
	C_PUSH_REGS
	mov r8,rdi
	mov rdi,r8
	call free_s8
	C_POP_REGS
; .dlt.ptn 3'(= {| l |} )
	mov rdi,r9
	C_PUSH_REGS
	mov r8,rdi
	mov rdi,r8
	call free_s8
	C_POP_REGS
; .mov_ptn2 { 0'(= r ) 6'(= {| l |} ) } ⊢ { 0'(= r ) 1'(= {| l |} ) }
; .mov_ptn 6'(= {| l |} ) ⊢ 1'(= {| l |} )
	mov rax,rcx
	mov r14,rax
	ret
LB_844:
;; rsp=0 , %1031~7'(= a2◂ [ *{ {| l |}a8◂ [ a13◂ [ {| l |}]]a3◂ [ a23◂ [ ]]a17◂ [ a9◂ [ ]{| l |}]}] ) %1030~6'(= a17◂ [ a9◂ [ ]{| l |}] ) %1029~5'(= a3◂ [ a23◂ [ ]] ) %1028~4'(= a8◂ [ a13◂ [ {| l |}]] ) %1027~3'(= {| l |} ) %1025~0'(= r ) 
; #101 4'(= a8◂ [ a13◂ [ {| l |}]] ) ⊢ 1'(= {| l |} )
	sub rsp,40
	mov QWORD [rsp+8*0],r13
	mov QWORD [rsp+8*1],r9
	mov QWORD [rsp+8*2],r11
	mov QWORD [rsp+8*3],rcx
	mov QWORD [rsp+8*4],rdx
; .mov_ptn2 4'(= a8◂ [ a13◂ [ {| l |}]] ) ⊢ 0'(= a8◂ [ a13◂ [ {| l |}]] )
; .mov_ptn 4'(= a8◂ [ a13◂ [ {| l |}]] ) ⊢ 0'(= a8◂ [ a13◂ [ {| l |}]] )
	mov rax,r10
	mov r13,rax
	call ETR_101
	mov rdx,QWORD [rsp-8+8*5]
	mov rcx,QWORD [rsp-8+8*4]
	mov r11,QWORD [rsp-8+8*3]
	mov r9,QWORD [rsp-8+8*2]
	mov r14,r13
	mov r13,QWORD [rsp-8+8*1]
	add rsp,40
;; rsp=0 , %1048~1'(= {| l |} ) %1031~7'(= a2◂ [ *{ {| l |}a8◂ [ a13◂ [ {| l |}]]a3◂ [ a23◂ [ ]]a17◂ [ a9◂ [ ]{| l |}]}] ) %1030~6'(= a17◂ [ a9◂ [ ]{| l |}] ) %1029~5'(= a3◂ [ a23◂ [ ]] ) %1027~3'(= {| l |} ) %1025~0'(= r ) 
; #187 { 0'(= r ) 7'(= a2◂ [ *{ {| l |}a8◂ [ a13◂ [ {| l |}]]a3◂ [ a23◂ [ ]]a17◂ [ a9◂ [ ]{| l |}]}] ) } ⊢ { 0'(= r ) 2'(= {| l |} ) }
	sub rsp,32
	mov QWORD [rsp+8*0],r14
	mov QWORD [rsp+8*1],r9
	mov QWORD [rsp+8*2],r11
	mov QWORD [rsp+8*3],rcx
; .mov_ptn2 { 0'(= r ) 7'(= a2◂ [ *{ {| l |}a8◂ [ a13◂ [ {| l |}]]a3◂ [ a23◂ [ ]]a17◂ [ a9◂ [ ]{| l |}]}] ) } ⊢ { 0'(= r ) 1'(= a2◂ [ *{ {| l |}a8◂ [ a13◂ [ {| l |}]]a3◂ [ a23◂ [ ]]a17◂ [ a9◂ [ ]{| l |}]}] ) }
; .mov_ptn 7'(= a2◂ [ *{ {| l |}a8◂ [ a13◂ [ {| l |}]]a3◂ [ a23◂ [ ]]a17◂ [ a9◂ [ ]{| l |}]}] ) ⊢ 1'(= a2◂ [ *{ {| l |}a8◂ [ a13◂ [ {| l |}]]a3◂ [ a23◂ [ ]]a17◂ [ a9◂ [ ]{| l |}]}] )
	mov rax,rdx
	mov r14,rax
	call ETR_187
	mov rcx,QWORD [rsp-8+8*4]
	mov r11,QWORD [rsp-8+8*3]
	mov r9,QWORD [rsp-8+8*2]
	mov r8,r14
	mov r14,QWORD [rsp-8+8*1]
	add rsp,32
;; rsp=0 , %1050~2'(= {| l |} ) %1049~0'(= r ) %1048~1'(= {| l |} ) %1030~6'(= a17◂ [ a9◂ [ ]{| l |}] ) %1029~5'(= a3◂ [ a23◂ [ ]] ) %1027~3'(= {| l |} ) 
; #11 0'(= r ) ⊢ 0'(= r )
	add r13,1
;; rsp=0 , %1051~0'(= r ) %1050~2'(= {| l |} ) %1048~1'(= {| l |} ) %1030~6'(= a17◂ [ a9◂ [ ]{| l |}] ) %1029~5'(= a3◂ [ a23◂ [ ]] ) %1027~3'(= {| l |} ) 
; #134 { 0'(= r ) 6'(= a17◂ [ a9◂ [ ]{| l |}] ) } ⊢ { 0'(= r ) 4'(= {| l |} ) }
	sub rsp,32
	mov QWORD [rsp+8*0],r14
	mov QWORD [rsp+8*1],r8
	mov QWORD [rsp+8*2],r9
	mov QWORD [rsp+8*3],r11
; .mov_ptn2 { 0'(= r ) 6'(= a17◂ [ a9◂ [ ]{| l |}] ) } ⊢ { 0'(= r ) 1'(= a17◂ [ a9◂ [ ]{| l |}] ) }
; .mov_ptn 6'(= a17◂ [ a9◂ [ ]{| l |}] ) ⊢ 1'(= a17◂ [ a9◂ [ ]{| l |}] )
	mov rax,rcx
	mov r14,rax
	call ETR_134
	mov r11,QWORD [rsp-8+8*4]
	mov r9,QWORD [rsp-8+8*3]
	mov r8,QWORD [rsp-8+8*2]
	mov r10,r14
	mov r14,QWORD [rsp-8+8*1]
	add rsp,32
;; rsp=0 , %1053~4'(= {| l |} ) %1052~0'(= r ) %1050~2'(= {| l |} ) %1048~1'(= {| l |} ) %1029~5'(= a3◂ [ a23◂ [ ]] ) %1027~3'(= {| l |} ) 
; #12 0'(= r ) ⊢ 0'(= r )
	sub r13,1
;; rsp=0 , %1054~0'(= r ) %1053~4'(= {| l |} ) %1050~2'(= {| l |} ) %1048~1'(= {| l |} ) %1029~5'(= a3◂ [ a23◂ [ ]] ) %1027~3'(= {| l |} ) 
; » _^ .. ⊢ ..
; .. //
	mov rdi,0
	mov rsi,r13
	imul rsi,1
	add rdi,rsi 
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[r9]
	add rdi,rax 
	push rax
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[r14]
	add rdi,rax 
	push rax
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[r10]
	add rdi,rax 
	push rax
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[r8]
	add rdi,rax 
	push rax
	add rdi,4
	push rdi 
	call mlc_s8
	pop rdi
	mov rcx,rax
	lea rdi,[rax+7+rdi]
	std 
	mov QWORD [tmp],rcx 
	pop rcx
	lea rsi,[r8+7+rcx]
	rep movsb
	pop rcx
	lea rsi,[r10+7+rcx]
	rep movsb
	lea rsi,[LB_852+1-1]
	mov rcx,1
	rep movsb
	pop rcx
	lea rsi,[r14+7+rcx]
	rep movsb
	lea rsi,[LB_853+1-1]
	mov rcx,1
	rep movsb
	pop rcx
	lea rsi,[r9+7+rcx]
	rep movsb
	lea rsi,[LB_854+2-1]
	mov rcx,2
	rep movsb
	mov rax,r13
LB_856:
	cmp rax,0
	jz LB_857
	sub rax,1
	lea rsi,[LB_855+1-1]
	mov rcx,1
	rep movsb 
	jmp LB_856
LB_857:
	mov rcx,QWORD [tmp] 
;; rsp=0 , %1060~6'(= {| l |} ) %1059~2'(= {| l |} ) %1058~4'(= {| l |} ) %1057~1'(= {| l |} ) %1056~3'(= {| l |} ) %1055~0'(= r ) %1029~5'(= a3◂ [ a23◂ [ ]] ) 
; ∎ { 0'(= r ) 6'(= {| l |} ) }
; .dlt.ptn 2'(= {| l |} )
	mov rdi,r8
	C_PUSH_REGS
	mov r8,rdi
	mov rdi,r8
	call free_s8
	C_POP_REGS
; .dlt.ptn 4'(= {| l |} )
	mov rdi,r10
	C_PUSH_REGS
	mov r8,rdi
	mov rdi,r8
	call free_s8
	C_POP_REGS
; .dlt.ptn 1'(= {| l |} )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	mov rdi,r8
	call free_s8
	C_POP_REGS
; .dlt.ptn 3'(= {| l |} )
	mov rdi,r9
	C_PUSH_REGS
	mov r8,rdi
	mov rdi,r8
	call free_s8
	C_POP_REGS
; .dlt.ptn 5'(= a3◂ [ a23◂ [ ]] )
	mov rdi,r11
	C_PUSH_REGS
	mov r8,rdi
	call LB_834
	C_POP_REGS
; .mov_ptn2 { 0'(= r ) 6'(= {| l |} ) } ⊢ { 0'(= r ) 1'(= {| l |} ) }
; .mov_ptn 6'(= {| l |} ) ⊢ 1'(= {| l |} )
	mov rax,rcx
	mov r14,rax
	ret
LB_843:
;; ?; 1'(= a2◂ [ *{ {| l |}a8◂ [ a13◂ [ {| l |}]]a3◂ [ a23◂ [ ]]a17◂ [ a9◂ [ ]{| l |}]}] ) ⊢ 1(<2)◂{ }
;; rsp=0 , %1025~0'(= r ) 
; $ %[ "" ] ⊢ %[ "" ]
;; rsp=0 , %1061~%[ "" ] %1025~0'(= r ) 
; ∎ { 0'(= r ) %[ "" ] }
; .mov_ptn2 { 0'(= r ) %[ "" ] } ⊢ { 0'(= r ) 1'(= {| l |} ) }
; .mov_ptn %[ "" ] ⊢ 1'(= {| l |} )
	mov rsi,1  
	mov rdi,16
	xor rax,rax 
	C_CALL_SF calloc
	mov QWORD [rax],0
	mov r14,rax
	ret
ETR_188: ;; mk_app { 0'(= a23◂ [ ] ) 1'(= a2◂ [ a23◂ [ ]] ) } ⊢ 0'(= a23◂ [ ] ) : ({ _t23 _lst◂_t23 }→_t23)
;; rsp=0 , %1063~1'(= a2◂ [ a23◂ [ ]] ) %1062~0'(= a23◂ [ ] ) 
;; ?; 1'(= a2◂ [ a23◂ [ ]] ) ⊢ 0(<2)◂{ 2'(= a23◂ [ ] ) 3'(= a2◂ [ a23◂ [ ]] ) }
	mov rdi,r14
	cmp BYTE [rdi+6],0
	jnz LB_858
	mov r8, QWORD [r14+8]
	mov r9, QWORD [r14+16]
	mov QWORD [GBG_VCT+8*0],r14
	mov rdi,QWORD [GBG_VCT+8*0]
	mov rax,[SS_RCD_2_TOP]
	mov QWORD [rdi],rax 
	mov QWORD [SS_RCD_2_TOP],rdi
;; rsp=0 , %1065~3'(= a2◂ [ a23◂ [ ]] ) %1064~2'(= a23◂ [ ] ) %1062~0'(= a23◂ [ ] ) 
; #140 { 0'(= a23◂ [ ] ) 2'(= a23◂ [ ] ) } ⊢ 2(<5)◂{ 0'(= a23◂ [ ] ) 2'(= a23◂ [ ] ) }
;; rsp=0 , %1066~2(<5)◂{ 0'(= a23◂ [ ] ) 2'(= a23◂ [ ] ) } %1065~3'(= a2◂ [ a23◂ [ ]] ) 
; #188 { 2(<5)◂{ 0'(= a23◂ [ ] ) 2'(= a23◂ [ ] ) } 3'(= a2◂ [ a23◂ [ ]] ) } ⊢ 0'(= a23◂ [ ] )
; .mov_ptn2 { 2(<5)◂{ 0'(= a23◂ [ ] ) 2'(= a23◂ [ ] ) } 3'(= a2◂ [ a23◂ [ ]] ) } ⊢ { 0'(= a23◂ [ ] ) 1'(= a2◂ [ a23◂ [ ]] ) }
; .mov_ptn 3'(= a2◂ [ a23◂ [ ]] ) ⊢ 1'(= a2◂ [ a23◂ [ ]] )
	mov rax,r9
	mov r14,rax
	mov r10,r13
; .mov_ptn 2(<5)◂{ 4'(= a23◂ [ ] ) 2'(= a23◂ [ ] ) } ⊢ 0'(= a23◂ [ ] )
	ALC_RCD 2, rax
	mov r9,rax
	mov rax,r10
	mov QWORD [r9+8+8*0],rax
	mov rax,r8
	mov QWORD [r9+8+8*1],rax
	mov rax,r9
	mov BYTE [rax+6],2
	mov r13,rax
	call ETR_188
;; rsp=0 , %1067~0'(= a23◂ [ ] ) 
; ∎ 0'(= a23◂ [ ] )
; .mov_ptn2 0'(= a23◂ [ ] ) ⊢ 0'(= a23◂ [ ] )
	ret
LB_858:
;; ?; 1'(= a2◂ [ a23◂ [ ]] ) ⊢ 1(<2)◂{ }
;; rsp=0 , %1062~0'(= a23◂ [ ] ) 
; ∎ 0'(= a23◂ [ ] )
; .mov_ptn2 0'(= a23◂ [ ] ) ⊢ 0'(= a23◂ [ ] )
	ret
ETR_189:
	mov r9,0x0000_ffff_ffff_ffff
	and r9,[r13]
	call GRM_189
	ret
GRM_189:
	PUSH_GRM
	lea rax,[r14+1]
	cmp rax,r9
	jg LB_862
	jmp LB_863
LB_862:
	mov r8,unt_1
	jmp LB_860
LB_863:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],95
	jnz LB_864
	jmp LB_865
LB_864:
	mov r8,unt_1
	jmp LB_860
LB_865:
	add r14,1
	jmp LB_861
LB_860:
	add rsp,0
	jmp LB_859
LB_861:
	PUSH_GRM
	lea rax,[r14+1]
	cmp rax,r9
	jg LB_870
	jmp LB_871
LB_870:
	mov r8,unt_1
	jmp LB_868
LB_871:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],32
	jnz LB_872
	jmp LB_873
LB_872:
	mov r8,unt_1
	jmp LB_868
LB_873:
	add r14,1
	jmp LB_869
LB_868:
	add rsp,0
	jmp LB_867
LB_869:
	mov QWORD [rsp+8*0],r14
	mov r13,QWORD [rsp+16+8*0]
	mov r14,QWORD [rsp+8*0]
	jmp LB_874
LB_874
;; rsp=0 , %1071~1'(= r ) %1070~0'(= r ) 
; #24 { } ⊢ 0(<2)◂{ }
;; rsp=0 , %1072~0(<2)◂{ } %1071~1'(= r ) %1070~0'(= r ) 
; ∎ 0(<2)◂{ }
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂{ } ⊢ 2'(= a3◂ [ *{ }] )
; .mov_ptn 0(<2)◂{ } ⊢ 2'(= a3◂ [ *{ }] )
	mov rax,unt 
	mov rax,unt_0
	mov r8,rax
	jmp LB_875
LB_875:
	cmp BYTE [r8+6],0
	jnz LB_867
	POP_GRM_SCC
	jmp LB_866
LB_867:
	RB_GRM
	lea rax,[r14+1]
	cmp rax,r9
	jg LB_879
	jmp LB_880
LB_879:
	mov r8,unt_1
	jmp LB_877
LB_880:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],9
	jnz LB_881
	jmp LB_882
LB_881:
	mov r8,unt_1
	jmp LB_877
LB_882:
	add r14,1
	jmp LB_878
LB_877:
	add rsp,0
	jmp LB_876
LB_878:
	mov QWORD [rsp+8*0],r14
	mov r13,QWORD [rsp+16+8*0]
	mov r14,QWORD [rsp+8*0]
	jmp LB_883
LB_883
;; rsp=0 , %1074~1'(= r ) %1073~0'(= r ) 
; #24 { } ⊢ 0(<2)◂{ }
;; rsp=0 , %1075~0(<2)◂{ } %1074~1'(= r ) %1073~0'(= r ) 
; ∎ 0(<2)◂{ }
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂{ } ⊢ 2'(= a3◂ [ *{ }] )
; .mov_ptn 0(<2)◂{ } ⊢ 2'(= a3◂ [ *{ }] )
	mov rax,unt 
	mov rax,unt_0
	mov r8,rax
	jmp LB_884
LB_884:
	cmp BYTE [r8+6],0
	jnz LB_876
	POP_GRM_SCC
	jmp LB_866
LB_876:
	RB_GRM
	call GRM_190
	cmp BYTE [r8+6],0
	jnz LB_888
	jmp LB_889
LB_888:
	jmp LB_886
LB_889:
; .mov_ptn2 2'(= *{ } ) ⊢ { }
; .mov_ptn 2'(= *{ } ) ⊢ { }
	jmp LB_887
LB_886:
	add rsp,0
	jmp LB_885
LB_887:
	mov QWORD [rsp+8*0],r14
	mov r13,QWORD [rsp+16+8*0]
	mov r14,QWORD [rsp+8*0]
	jmp LB_890
LB_890
;; rsp=0 , %1078~1'(= r ) %1077~0'(= r ) %1076~{ } 
; #25 { } ⊢ 1(<2)◂{ }
;; rsp=0 , %1079~1(<2)◂{ } %1078~1'(= r ) %1077~0'(= r ) %1076~{ } 
; ∎ 1(<2)◂{ }
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn { }
; .mov_ptn2 1(<2)◂{ } ⊢ 2'(= a3◂ [ *{ }] )
; .mov_ptn 1(<2)◂{ } ⊢ 2'(= a3◂ [ *{ }] )
	mov rax,unt 
	mov rax,unt_1
	mov r8,rax
	jmp LB_891
LB_891:
	cmp BYTE [r8+6],0
	jnz LB_885
	POP_GRM_SCC
	jmp LB_866
LB_885:
	RB_GRM
	mov QWORD [rsp+8*0],r14
	mov r13,QWORD [rsp+16+8*0]
	mov r14,QWORD [rsp+8*0]
	jmp LB_893
LB_893
;; rsp=0 , %1081~1'(= r ) %1080~0'(= r ) 
; #24 { } ⊢ 0(<2)◂{ }
;; rsp=0 , %1082~0(<2)◂{ } %1081~1'(= r ) %1080~0'(= r ) 
; ∎ 0(<2)◂{ }
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂{ } ⊢ 2'(= a3◂ [ *{ }] )
; .mov_ptn 0(<2)◂{ } ⊢ 2'(= a3◂ [ *{ }] )
	mov rax,unt 
	mov rax,unt_0
	mov r8,rax
	jmp LB_894
LB_894:
	cmp BYTE [r8+6],0
	jnz LB_892
	POP_GRM_SCC
	jmp LB_866
LB_892:
	POP_GRM_FAIL 
	jmp LB_866
LB_866:
	cmp BYTE [r8+6],0
	jnz LB_895
	jmp LB_896
LB_895:
	add rsp,0
	POP_GRM_FAIL
	ret
LB_896:
	mov QWORD [rsp+8*0],r14
; .mov_ptn2 2'(= *{ } ) ⊢ { }
; .mov_ptn 2'(= *{ } ) ⊢ { }
	mov r13,QWORD [rsp+16+8*0]
	mov r14,QWORD [rsp+8*0]
	jmp LB_897
LB_897
;; rsp=0 , %1083~{ } %1069~1'(= r ) %1068~0'(= r ) 
; #24 { } ⊢ 0(<2)◂{ }
;; rsp=0 , %1084~0(<2)◂{ } %1083~{ } %1069~1'(= r ) %1068~0'(= r ) 
; ∎ 0(<2)◂{ }
; .dlt.ptn { }
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂{ } ⊢ 2'(= a3◂ [ *{ }] )
; .mov_ptn 0(<2)◂{ } ⊢ 2'(= a3◂ [ *{ }] )
	mov rax,unt 
	mov rax,unt_0
	mov r8,rax
	jmp LB_898
LB_898:
	cmp BYTE [r8+6],0
	jnz LB_859
	POP_GRM_SCC
	ret
LB_859:
	POP_GRM_FAIL 
	ret
ETR_190:
	mov r9,0x0000_ffff_ffff_ffff
	and r9,[r13]
	call GRM_190
	ret
GRM_190:
	PUSH_GRM
	lea rax,[r14+1]
	cmp rax,r9
	jg LB_902
	jmp LB_903
LB_902:
	mov r8,unt_1
	jmp LB_900
LB_903:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],44
	jnz LB_904
	jmp LB_905
LB_904:
	mov r8,unt_1
	jmp LB_900
LB_905:
	add r14,1
	jmp LB_901
LB_900:
	add rsp,0
	jmp LB_899
LB_901:
	mov QWORD [rsp+8*0],r14
	mov r13,QWORD [rsp+16+8*0]
	mov r14,QWORD [rsp+8*0]
	jmp LB_906
LB_906
;; rsp=0 , %1086~1'(= r ) %1085~0'(= r ) 
; #25 { } ⊢ 1(<2)◂{ }
;; rsp=0 , %1087~1(<2)◂{ } %1086~1'(= r ) %1085~0'(= r ) 
; ∎ 1(<2)◂{ }
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 1(<2)◂{ } ⊢ 2'(= a3◂ [ *{ }] )
; .mov_ptn 1(<2)◂{ } ⊢ 2'(= a3◂ [ *{ }] )
	mov rax,unt 
	mov rax,unt_1
	mov r8,rax
	jmp LB_907
LB_907:
	cmp BYTE [r8+6],0
	jnz LB_899
	POP_GRM_SCC
	ret
LB_899:
	RB_GRM
	mov QWORD [rsp+8*0],r14
	mov r13,QWORD [rsp+16+8*0]
	mov r14,QWORD [rsp+8*0]
	jmp LB_909
LB_909
;; rsp=0 , %1089~1'(= r ) %1088~0'(= r ) 
; #24 { } ⊢ 0(<2)◂{ }
;; rsp=0 , %1090~0(<2)◂{ } %1089~1'(= r ) %1088~0'(= r ) 
; ∎ 0(<2)◂{ }
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂{ } ⊢ 2'(= a3◂ [ *{ }] )
; .mov_ptn 0(<2)◂{ } ⊢ 2'(= a3◂ [ *{ }] )
	mov rax,unt 
	mov rax,unt_0
	mov r8,rax
	jmp LB_910
LB_910:
	cmp BYTE [r8+6],0
	jnz LB_908
	POP_GRM_SCC
	ret
LB_908:
	POP_GRM_FAIL 
	ret
ETR_191:
	mov r9,0x0000_ffff_ffff_ffff
	and r9,[r13]
	call GRM_191
	ret
GRM_191:
	PUSH_GRM
	jmp LB_913
LB_912:
	add r14,1 
LB_913:
	cmp r14,r9
	jge LB_914
	JZ_LINE_SPC BYTE [r13+8+r14], LB_912
LB_914
	call GRM_79
	cmp BYTE [r8+6],0
	jnz LB_917
	jmp LB_918
LB_917:
	jmp LB_915
LB_918:
	sub rsp,8
; .mov_ptn2 2'(= {| l |} ) ⊢ 8'(= {| l |} )
; .mov_ptn 2'(= {| l |} ) ⊢ 8'(= {| l |} )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_916
LB_915:
	add rsp,0
	jmp LB_911
LB_916:
	jmp LB_920
LB_919:
	add r14,1 
LB_920:
	cmp r14,r9
	jge LB_921
	JZ_LINE_SPC BYTE [r13+8+r14], LB_919
LB_921
	lea rax,[r14+1]
	cmp rax,r9
	jg LB_924
	jmp LB_925
LB_924:
	mov r8,unt_1
	jmp LB_922
LB_925:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],46
	jnz LB_926
	jmp LB_927
LB_926:
	mov r8,unt_1
	jmp LB_922
LB_927:
	add r14,1
	jmp LB_923
LB_922:
	add rsp,8
	jmp LB_911
LB_923:
	jmp LB_929
LB_928:
	add r14,1 
LB_929:
	cmp r14,r9
	jge LB_930
	JZ_LINE_SPC BYTE [r13+8+r14], LB_928
LB_930
	call GRM_191
	cmp BYTE [r8+6],0
	jnz LB_933
	jmp LB_934
LB_933:
	jmp LB_931
LB_934:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a9◂ [ ] ) ⊢ 9'(= a9◂ [ ] )
; .mov_ptn 2'(= a9◂ [ ] ) ⊢ 9'(= a9◂ [ ] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_932
LB_931:
	add rsp,8
	jmp LB_911
LB_932:
	mov QWORD [rsp+8*2],r14
	mov r13,QWORD [rsp+16+8*2]
	mov r14,QWORD [rsp+8*2]
	jmp LB_935
LB_935
;; rsp=2 , %1094~1'(= r ) %1093~0'(= r ) %1092~9'(= a9◂ [ ] ) %1091~8'(= {| l |} ) 
; #83 { 8'(= {| l |} ) 9'(= a9◂ [ ] ) } ⊢ 0(<2)◂{ 8'(= {| l |} ) 9'(= a9◂ [ ] ) }
;; rsp=2 , %1095~0(<2)◂{ 8'(= {| l |} ) 9'(= a9◂ [ ] ) } %1094~1'(= r ) %1093~0'(= r ) 
; #24 0(<2)◂{ 8'(= {| l |} ) 9'(= a9◂ [ ] ) } ⊢ 0(<2)◂0(<2)◂{ 8'(= {| l |} ) 9'(= a9◂ [ ] ) }
;; rsp=2 , %1096~0(<2)◂0(<2)◂{ 8'(= {| l |} ) 9'(= a9◂ [ ] ) } %1094~1'(= r ) %1093~0'(= r ) 
; ∎ 0(<2)◂0(<2)◂{ 8'(= {| l |} ) 9'(= a9◂ [ ] ) }
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂0(<2)◂{ 8'(= {| l |} ) 9'(= a9◂ [ ] ) } ⊢ 2'(= a3◂ [ a9◂ [ ]] )
; .mov_ptn 0(<2)◂0(<2)◂{ 8'(= {| l |} ) 9'(= a9◂ [ ] ) } ⊢ 2'(= a3◂ [ a9◂ [ ]] )
	ALC_RCD 2, rax
	mov r13,rax
	mov rax,QWORD [rsp-8+8*2]
	mov QWORD [r13+8+8*0],rax
	mov rax,QWORD [rsp-8+8*1]
	mov QWORD [r13+8+8*1],rax
	mov rax,r13
	mov BYTE [rax+6],0
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,16
	jmp LB_936
LB_936:
	cmp BYTE [r8+6],0
	jnz LB_911
	POP_GRM_SCC
	ret
LB_911:
	RB_GRM
	jmp LB_939
LB_938:
	add r14,1 
LB_939:
	cmp r14,r9
	jge LB_940
	JZ_LINE_SPC BYTE [r13+8+r14], LB_938
LB_940
	call GRM_79
	cmp BYTE [r8+6],0
	jnz LB_943
	jmp LB_944
LB_943:
	jmp LB_941
LB_944:
	sub rsp,8
; .mov_ptn2 2'(= {| l |} ) ⊢ 8'(= {| l |} )
; .mov_ptn 2'(= {| l |} ) ⊢ 8'(= {| l |} )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_942
LB_941:
	add rsp,0
	jmp LB_937
LB_942:
	mov QWORD [rsp+8*1],r14
	mov r13,QWORD [rsp+16+8*1]
	mov r14,QWORD [rsp+8*1]
	jmp LB_945
LB_945
;; rsp=1 , %1099~1'(= r ) %1098~0'(= r ) %1097~8'(= {| l |} ) 
; #82 8'(= {| l |} ) ⊢ 1(<2)◂8'(= {| l |} )
;; rsp=1 , %1100~1(<2)◂8'(= {| l |} ) %1099~1'(= r ) %1098~0'(= r ) 
; #24 1(<2)◂8'(= {| l |} ) ⊢ 0(<2)◂1(<2)◂8'(= {| l |} )
;; rsp=1 , %1101~0(<2)◂1(<2)◂8'(= {| l |} ) %1099~1'(= r ) %1098~0'(= r ) 
; ∎ 0(<2)◂1(<2)◂8'(= {| l |} )
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂1(<2)◂8'(= {| l |} ) ⊢ 2'(= a3◂ [ a9◂ [ ]] )
; .mov_ptn 0(<2)◂1(<2)◂8'(= {| l |} ) ⊢ 2'(= a3◂ [ a9◂ [ ]] )
	mov rax,QWORD [rsp-8+8*1]
	mov BYTE [rax+6],1
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,8
	jmp LB_946
LB_946:
	cmp BYTE [r8+6],0
	jnz LB_937
	POP_GRM_SCC
	ret
LB_937:
	POP_GRM_FAIL 
	ret
ETR_192:
	mov r9,0x0000_ffff_ffff_ffff
	and r9,[r13]
	call GRM_192
	ret
GRM_192:
	PUSH_GRM
	cmp r14,r9
	jge LB_950
 lea rdi,[r13+8+r14] 
	C_PUSH_REGS
	call scf_d
	C_POP_REGS
	cmp rax,0 
	jz LB_950
	add r14,rsi
	push rdi
	jmp LB_951
LB_950:
	mov r8,unt_1
	jmp LB_948
LB_951:
	jmp LB_949
LB_948:
	add rsp,0
	jmp LB_947
LB_949:
	lea rax,[r14+1]
	cmp rax,r9
	jg LB_954
	jmp LB_955
LB_954:
	mov r8,unt_1
	jmp LB_952
LB_955:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],114
	jnz LB_956
	jmp LB_957
LB_956:
	mov r8,unt_1
	jmp LB_952
LB_957:
	add r14,1
	jmp LB_953
LB_952:
	add rsp,8
	jmp LB_947
LB_953:
	mov QWORD [rsp+8*1],r14
	mov r13,QWORD [rsp+16+8*1]
	mov r14,QWORD [rsp+8*1]
	jmp LB_958
LB_958
;; rsp=1 , %1104~1'(= r ) %1103~0'(= r ) %1102~8'(= r ) 
; #86 8'(= r ) ⊢ 0(<2)◂8'(= r )
;; rsp=1 , %1105~0(<2)◂8'(= r ) %1104~1'(= r ) %1103~0'(= r ) 
; #88 0(<2)◂8'(= r ) ⊢ 0(<2)◂0(<2)◂8'(= r )
;; rsp=1 , %1106~0(<2)◂0(<2)◂8'(= r ) %1104~1'(= r ) %1103~0'(= r ) 
; #24 0(<2)◂0(<2)◂8'(= r ) ⊢ 0(<2)◂0(<2)◂0(<2)◂8'(= r )
;; rsp=1 , %1107~0(<2)◂0(<2)◂0(<2)◂8'(= r ) %1104~1'(= r ) %1103~0'(= r ) 
; ∎ 0(<2)◂0(<2)◂0(<2)◂8'(= r )
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂0(<2)◂0(<2)◂8'(= r ) ⊢ 2'(= a3◂ [ a11◂ [ a9◂ [ ]]] )
; .mov_ptn 0(<2)◂0(<2)◂0(<2)◂8'(= r ) ⊢ 2'(= a3◂ [ a11◂ [ a9◂ [ ]]] )
	mov rax,QWORD [rsp-8+8*1]
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,8
	jmp LB_959
LB_959:
	cmp BYTE [r8+6],0
	jnz LB_947
	POP_GRM_SCC
	ret
LB_947:
	RB_GRM
	lea rax,[r14+2]
	cmp rax,r9
	jg LB_963
	jmp LB_964
LB_963:
	mov r8,unt_1
	jmp LB_961
LB_964:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],48
	jnz LB_965
	cmp BYTE [rdi+1],120
	jnz LB_965
	jmp LB_966
LB_965:
	mov r8,unt_1
	jmp LB_961
LB_966:
	add r14,2
	jmp LB_962
LB_961:
	add rsp,0
	jmp LB_960
LB_962:
	cmp r14,r9
	jge LB_969
 lea rdi,[r13+8+r14] 
	C_PUSH_REGS
	call scf_x
	C_POP_REGS
	cmp rax,0 
	jz LB_969
	add r14,rsi
	push rdi
	jmp LB_970
LB_969:
	mov r8,unt_1
	jmp LB_967
LB_970:
	jmp LB_968
LB_967:
	add rsp,0
	jmp LB_960
LB_968:
	lea rax,[r14+1]
	cmp rax,r9
	jg LB_973
	jmp LB_974
LB_973:
	mov r8,unt_1
	jmp LB_971
LB_974:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],114
	jnz LB_975
	jmp LB_976
LB_975:
	mov r8,unt_1
	jmp LB_971
LB_976:
	add r14,1
	jmp LB_972
LB_971:
	add rsp,8
	jmp LB_960
LB_972:
	mov QWORD [rsp+8*1],r14
	mov r13,QWORD [rsp+16+8*1]
	mov r14,QWORD [rsp+8*1]
	jmp LB_977
LB_977
;; rsp=1 , %1110~1'(= r ) %1109~0'(= r ) %1108~8'(= r ) 
; #86 8'(= r ) ⊢ 0(<2)◂8'(= r )
;; rsp=1 , %1111~0(<2)◂8'(= r ) %1110~1'(= r ) %1109~0'(= r ) 
; #88 0(<2)◂8'(= r ) ⊢ 0(<2)◂0(<2)◂8'(= r )
;; rsp=1 , %1112~0(<2)◂0(<2)◂8'(= r ) %1110~1'(= r ) %1109~0'(= r ) 
; #24 0(<2)◂0(<2)◂8'(= r ) ⊢ 0(<2)◂0(<2)◂0(<2)◂8'(= r )
;; rsp=1 , %1113~0(<2)◂0(<2)◂0(<2)◂8'(= r ) %1110~1'(= r ) %1109~0'(= r ) 
; ∎ 0(<2)◂0(<2)◂0(<2)◂8'(= r )
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂0(<2)◂0(<2)◂8'(= r ) ⊢ 2'(= a3◂ [ a11◂ [ a9◂ [ ]]] )
; .mov_ptn 0(<2)◂0(<2)◂0(<2)◂8'(= r ) ⊢ 2'(= a3◂ [ a11◂ [ a9◂ [ ]]] )
	mov rax,QWORD [rsp-8+8*1]
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,8
	jmp LB_978
LB_978:
	cmp BYTE [r8+6],0
	jnz LB_960
	POP_GRM_SCC
	ret
LB_960:
	RB_GRM
	call GRM_69
	cmp BYTE [r8+6],0
	jnz LB_982
	jmp LB_983
LB_982:
	jmp LB_980
LB_983:
	sub rsp,8
; .mov_ptn2 2'(= {| l |} ) ⊢ 8'(= {| l |} )
; .mov_ptn 2'(= {| l |} ) ⊢ 8'(= {| l |} )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_981
LB_980:
	add rsp,0
	jmp LB_979
LB_981:
	mov QWORD [rsp+8*1],r14
	mov r13,QWORD [rsp+16+8*1]
	mov r14,QWORD [rsp+8*1]
	jmp LB_984
LB_984
;; rsp=1 , %1116~1'(= r ) %1115~0'(= r ) %1114~8'(= {| l |} ) 
; #85 8'(= {| l |} ) ⊢ 1(<2)◂8'(= {| l |} )
;; rsp=1 , %1117~1(<2)◂8'(= {| l |} ) %1116~1'(= r ) %1115~0'(= r ) 
; #88 1(<2)◂8'(= {| l |} ) ⊢ 0(<2)◂1(<2)◂8'(= {| l |} )
;; rsp=1 , %1118~0(<2)◂1(<2)◂8'(= {| l |} ) %1116~1'(= r ) %1115~0'(= r ) 
; #24 0(<2)◂1(<2)◂8'(= {| l |} ) ⊢ 0(<2)◂0(<2)◂1(<2)◂8'(= {| l |} )
;; rsp=1 , %1119~0(<2)◂0(<2)◂1(<2)◂8'(= {| l |} ) %1116~1'(= r ) %1115~0'(= r ) 
; ∎ 0(<2)◂0(<2)◂1(<2)◂8'(= {| l |} )
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂0(<2)◂1(<2)◂8'(= {| l |} ) ⊢ 2'(= a3◂ [ a11◂ [ a9◂ [ ]]] )
; .mov_ptn 0(<2)◂0(<2)◂1(<2)◂8'(= {| l |} ) ⊢ 2'(= a3◂ [ a11◂ [ a9◂ [ ]]] )
	mov rax,QWORD [rsp-8+8*1]
	mov BYTE [rax+6],1
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,8
	jmp LB_985
LB_985:
	cmp BYTE [r8+6],0
	jnz LB_979
	POP_GRM_SCC
	ret
LB_979:
	RB_GRM
	call GRM_191
	cmp BYTE [r8+6],0
	jnz LB_989
	jmp LB_990
LB_989:
	jmp LB_987
LB_990:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a9◂ [ ] ) ⊢ 8'(= a9◂ [ ] )
; .mov_ptn 2'(= a9◂ [ ] ) ⊢ 8'(= a9◂ [ ] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_988
LB_987:
	add rsp,0
	jmp LB_986
LB_988:
	mov QWORD [rsp+8*1],r14
	mov r13,QWORD [rsp+16+8*1]
	mov r14,QWORD [rsp+8*1]
	jmp LB_991
LB_991
;; rsp=1 , %1122~1'(= r ) %1121~0'(= r ) %1120~8'(= a9◂ [ ] ) 
; #87 8'(= a9◂ [ ] ) ⊢ 1(<2)◂8'(= a9◂ [ ] )
;; rsp=1 , %1123~1(<2)◂8'(= a9◂ [ ] ) %1122~1'(= r ) %1121~0'(= r ) 
; #24 1(<2)◂8'(= a9◂ [ ] ) ⊢ 0(<2)◂1(<2)◂8'(= a9◂ [ ] )
;; rsp=1 , %1124~0(<2)◂1(<2)◂8'(= a9◂ [ ] ) %1122~1'(= r ) %1121~0'(= r ) 
; ∎ 0(<2)◂1(<2)◂8'(= a9◂ [ ] )
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂1(<2)◂8'(= a9◂ [ ] ) ⊢ 2'(= a3◂ [ a11◂ [ a9◂ [ ]]] )
; .mov_ptn 0(<2)◂1(<2)◂8'(= a9◂ [ ] ) ⊢ 2'(= a3◂ [ a11◂ [ a9◂ [ ]]] )
	mov rax,QWORD [rsp-8+8*1]
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],1
	mov QWORD [rax+8],rdi
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,8
	jmp LB_992
LB_992:
	cmp BYTE [r8+6],0
	jnz LB_986
	POP_GRM_SCC
	ret
LB_986:
	POP_GRM_FAIL 
	ret
ETR_193:
	mov r9,0x0000_ffff_ffff_ffff
	and r9,[r13]
	call GRM_193
	ret
GRM_193:
	PUSH_GRM
	jmp LB_995
LB_994:
	add r14,1 
LB_995:
	cmp r14,r9
	jge LB_996
	JZ_LINE_SPC BYTE [r13+8+r14], LB_994
LB_996
	lea rax,[r14+1]
	cmp rax,r9
	jg LB_999
	jmp LB_1000
LB_999:
	mov r8,unt_1
	jmp LB_997
LB_1000:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],10
	jnz LB_1001
	jmp LB_1002
LB_1001:
	mov r8,unt_1
	jmp LB_997
LB_1002:
	add r14,1
	jmp LB_998
LB_997:
	add rsp,0
	jmp LB_993
LB_998:
	jmp LB_1004
LB_1003:
	add r14,1 
LB_1004:
	cmp r14,r9
	jge LB_1005
	JZ_LINE_SPC BYTE [r13+8+r14], LB_1003
LB_1005
	call GRM_193
	cmp BYTE [r8+6],0
	jnz LB_1008
	jmp LB_1009
LB_1008:
	jmp LB_1006
LB_1009:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= r ) ⊢ 8'(= r )
; .mov_ptn 2'(= r ) ⊢ 8'(= r )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_1007
LB_1006:
	add rsp,0
	jmp LB_993
LB_1007:
	mov QWORD [rsp+8*1],r14
	mov r13,QWORD [rsp+16+8*1]
	mov r14,QWORD [rsp+8*1]
	jmp LB_1010
LB_1010
;; rsp=1 , %1127~1'(= r ) %1126~0'(= r ) %1125~8'(= r ) 
; #11 8'(= r ) ⊢ 8'(= r )
	add QWORD [rsp-8+8*1],1
;; rsp=1 , %1128~8'(= r ) %1127~1'(= r ) %1126~0'(= r ) 
; #24 8'(= r ) ⊢ 0(<2)◂8'(= r )
;; rsp=1 , %1129~0(<2)◂8'(= r ) %1127~1'(= r ) %1126~0'(= r ) 
; ∎ 0(<2)◂8'(= r )
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂8'(= r ) ⊢ 2'(= a3◂ [ r] )
; .mov_ptn 0(<2)◂8'(= r ) ⊢ 2'(= a3◂ [ r] )
	mov rax,QWORD [rsp-8+8*1]
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,8
	jmp LB_1011
LB_1011:
	cmp BYTE [r8+6],0
	jnz LB_993
	POP_GRM_SCC
	ret
LB_993:
	RB_GRM
	jmp LB_1014
LB_1013:
	add r14,1 
LB_1014:
	cmp r14,r9
	jge LB_1015
	JZ_LINE_SPC BYTE [r13+8+r14], LB_1013
LB_1015
	lea rax,[r14+1]
	cmp rax,r9
	jg LB_1018
	jmp LB_1019
LB_1018:
	mov r8,unt_1
	jmp LB_1016
LB_1019:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],10
	jnz LB_1020
	jmp LB_1021
LB_1020:
	mov r8,unt_1
	jmp LB_1016
LB_1021:
	add r14,1
	jmp LB_1017
LB_1016:
	add rsp,0
	jmp LB_1012
LB_1017:
	mov QWORD [rsp+8*0],r14
	mov r13,QWORD [rsp+16+8*0]
	mov r14,QWORD [rsp+8*0]
	jmp LB_1022
LB_1022
;; rsp=0 , %1131~1'(= r ) %1130~0'(= r ) 
; #24 %[ 1r ] ⊢ 0(<2)◂%[ 1r ]
;; rsp=0 , %1132~0(<2)◂%[ 1r ] %1131~1'(= r ) %1130~0'(= r ) 
; ∎ 0(<2)◂%[ 1r ]
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂%[ 1r ] ⊢ 2'(= a3◂ [ r] )
; .mov_ptn 0(<2)◂%[ 1r ] ⊢ 2'(= a3◂ [ r] )
	mov rax,1
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	jmp LB_1023
LB_1023:
	cmp BYTE [r8+6],0
	jnz LB_1012
	POP_GRM_SCC
	ret
LB_1012:
	POP_GRM_FAIL 
	ret
ETR_197: ;; mk_prs_err { 0'(= r ) 1'(= r ) 2'(= {| l |} ) } ⊢ 0'(= a35◂ [ q0] ) : ({ _r64 _r64 _s8 }→_t35◂2325'(1))
;; rsp=0 , %1148~2'(= {| l |} ) %1147~1'(= r ) %1146~0'(= r ) 
; #22 { } ⊢ 1(<2)◂{ }
;; rsp=0 , %1149~1(<2)◂{ } %1148~2'(= {| l |} ) %1147~1'(= r ) %1146~0'(= r ) 
; #23 { { 0'(= r ) 1'(= r ) 2'(= {| l |} ) } 1(<2)◂{ } } ⊢ 0(<2)◂{ { 0'(= r ) 1'(= r ) 2'(= {| l |} ) } 1(<2)◂{ } }
;; rsp=0 , %1150~0(<2)◂{ { 0'(= r ) 1'(= r ) 2'(= {| l |} ) } 1(<2)◂{ } } 
; #194 0(<2)◂{ { 0'(= r ) 1'(= r ) 2'(= {| l |} ) } 1(<2)◂{ } } ⊢ 1(<2)◂0(<2)◂{ { 0'(= r ) 1'(= r ) 2'(= {| l |} ) } 1(<2)◂{ } }
;; rsp=0 , %1151~1(<2)◂0(<2)◂{ { 0'(= r ) 1'(= r ) 2'(= {| l |} ) } 1(<2)◂{ } } 
; ∎ 1(<2)◂0(<2)◂{ { 0'(= r ) 1'(= r ) 2'(= {| l |} ) } 1(<2)◂{ } }
; .mov_ptn2 1(<2)◂0(<2)◂{ { 0'(= r ) 1'(= r ) 2'(= {| l |} ) } 1(<2)◂{ } } ⊢ 0'(= a35◂ [ q0] )
	mov r9,r13
; .mov_ptn 1(<2)◂0(<2)◂{ { 3'(= r ) 1'(= r ) 2'(= {| l |} ) } 1(<2)◂{ } } ⊢ 0'(= a35◂ [ q0] )
	ALC_RCD 2, rax
	mov r10,rax
	ALC_RCD 3, rax
	mov r11,rax
	mov rax,r9
	mov QWORD [r11+8+8*0],rax
	mov rax,r14
	mov QWORD [r11+8+8*1],rax
	mov rax,r8
	mov QWORD [r11+8+8*2],rax
	mov rax,r11
	mov QWORD [r10+8+8*0],rax
	mov rax,unt 
	mov rax,unt_1
	mov QWORD [r10+8+8*1],rax
	mov rax,r10
	mov BYTE [rax+6],0
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],1
	mov QWORD [rax+8],rdi
	mov r13,rax
	ret
ETR_198: ;; pnt_prs_err 0'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 0'(= {| l |} ) : (_lst◂{ _r64 _r64 _s8 }→_s8)
;; rsp=0 , %1152~0'(= a2◂ [ *{ rr{| l |}}] ) 
;; ? 0'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 0(<2)◂{ { 2'(= r ) 3'(= r ) 4'(= {| l |} ) } 5'(= a2◂ [ *{ rr{| l |}}] ) }
	mov rdi,r13
	cmp BYTE [rdi+6],0
	jnz LB_1024
	mov r14, QWORD [r13+8]
	mov r8, QWORD [r14+8]
	mov r9, QWORD [r14+16]
	mov r10, QWORD [r14+24]
	mov QWORD [GBG_VCT+8*0],r14
	mov r11, QWORD [r13+16]
	mov QWORD [GBG_VCT+8*1],r13
	mov rdi,QWORD [GBG_VCT+8*1]
	mov rax,[SS_RCD_2_TOP]
	mov QWORD [rdi],rax 
	mov QWORD [SS_RCD_2_TOP],rdi
	mov rdi,QWORD [GBG_VCT+8*0]
	mov rax,[SS_RCD_3_TOP]
	mov QWORD [rdi],rax 
	mov QWORD [SS_RCD_3_TOP],rdi
;; rsp=0 , %1156~5'(= a2◂ [ *{ rr{| l |}}] ) %1155~4'(= {| l |} ) %1154~3'(= r ) %1153~2'(= r ) 
; #198 5'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 0'(= {| l |} )
	sub rsp,24
	mov QWORD [rsp+8*0],r8
	mov QWORD [rsp+8*1],r9
	mov QWORD [rsp+8*2],r10
; .mov_ptn2 5'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 0'(= a2◂ [ *{ rr{| l |}}] )
; .mov_ptn 5'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 0'(= a2◂ [ *{ rr{| l |}}] )
	mov rax,r11
	mov r13,rax
	call ETR_198
	mov r10,QWORD [rsp-8+8*3]
	mov r9,QWORD [rsp-8+8*2]
	mov r8,QWORD [rsp-8+8*1]
	add rsp,24
;; rsp=0 , %1157~0'(= {| l |} ) %1155~4'(= {| l |} ) %1154~3'(= r ) %1153~2'(= r ) 
; » _^ .. ⊢ ..
; .. //
	mov rdi,0
	sub rsp,128
	push rdi 
	lea rdi,[rsp+8]
	mov rdx,r8
	mov rsi,fmt_d
 xor rax,rax
	C_CALL_SF sprintf
	pop rdi
	add rdi,rax 
	push rax 
	sub rsp,128
	push rdi 
	lea rdi,[rsp+8]
	mov rdx,r9
	mov rsi,fmt_d
 xor rax,rax
	C_CALL_SF sprintf
	pop rdi
	add rdi,rax 
	push rax 
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[r10]
	add rdi,rax 
	push rax
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[r13]
	add rdi,rax 
	push rax
	add rdi,11
	push rdi 
	call mlc_s8
	pop rdi
	mov r14,rax
	lea rdi,[rax+7+rdi]
	std 
	mov QWORD [tmp],rcx 
	pop rcx
	lea rsi,[r13+7+rcx]
	rep movsb
	lea rsi,[LB_1025+1-1]
	mov rcx,1
	rep movsb
	pop rcx
	lea rsi,[r10+7+rcx]
	rep movsb
	lea rsi,[LB_1026+1-1]
	mov rcx,1
	rep movsb
	pop rcx
	lea rsi,[rsp+rcx-1]
	rep movsb
	add rsp,128
	lea rsi,[LB_1027+1-1]
	mov rcx,1
	rep movsb
	pop rcx
	lea rsi,[rsp+rcx-1]
	rep movsb
	add rsp,128
	lea rsi,[LB_1028+8-1]
	mov rcx,8
	rep movsb
	mov rcx,QWORD [tmp] 
;; rsp=0 , %1162~1'(= {| l |} ) %1161~0'(= {| l |} ) %1160~4'(= {| l |} ) %1159~3'(= r ) %1158~2'(= r ) 
; ∎ 1'(= {| l |} )
; .dlt.ptn 0'(= {| l |} )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	mov rdi,r8
	call free_s8
	C_POP_REGS
; .dlt.ptn 4'(= {| l |} )
	mov rdi,r10
	C_PUSH_REGS
	mov r8,rdi
	mov rdi,r8
	call free_s8
	C_POP_REGS
; .dlt.ptn 3'(= r )
	mov rdi,r9
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 2'(= r )
	mov rdi,r8
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 1'(= {| l |} ) ⊢ 0'(= {| l |} )
; .mov_ptn 1'(= {| l |} ) ⊢ 0'(= {| l |} )
	mov rax,r14
	mov r13,rax
	ret
LB_1024:
;; ?. 0'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 1(<2)◂{ }
;; rsp=0 , 
; $ %[ "" ] ⊢ %[ "" ]
;; rsp=0 , %1163~%[ "" ] 
; ∎ %[ "" ]
; .mov_ptn2 %[ "" ] ⊢ 0'(= {| l |} )
; .mov_ptn %[ "" ] ⊢ 0'(= {| l |} )
	mov rsi,1  
	mov rdi,16
	xor rax,rax 
	C_CALL_SF calloc
	mov QWORD [rax],0
	mov r13,rax
	ret
ETR_199:
	mov r9,0x0000_ffff_ffff_ffff
	and r9,[r13]
	call GRM_199
	ret
GRM_199:
	PUSH_GRM
	jmp LB_1031
LB_1030:
	add r14,1 
LB_1031:
	cmp r14,r9
	jge LB_1032
	JZ_LINE_SPC BYTE [r13+8+r14], LB_1030
LB_1032
	lea rax,[r14+1]
	cmp rax,r9
	jg LB_1035
	jmp LB_1036
LB_1035:
	mov r8,unt_1
	jmp LB_1033
LB_1036:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],123
	jnz LB_1037
	jmp LB_1038
LB_1037:
	mov r8,unt_1
	jmp LB_1033
LB_1038:
	add r14,1
	jmp LB_1034
LB_1033:
	add rsp,0
	jmp LB_1029
LB_1034:
	jmp LB_1040
LB_1039:
	add r14,1 
LB_1040:
	cmp r14,r9
	jge LB_1041
	JZ_LINE_SPC BYTE [r13+8+r14], LB_1039
LB_1041
	call GRM_200
	cmp BYTE [r8+6],0
	jnz LB_1044
	jmp LB_1045
LB_1044:
	jmp LB_1042
LB_1045:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a2◂ [ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]] ) ⊢ 8'(= a2◂ [ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]] )
; .mov_ptn 2'(= a2◂ [ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]] ) ⊢ 8'(= a2◂ [ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_1043
LB_1042:
	add rsp,0
	jmp LB_1029
LB_1043:
	jmp LB_1047
LB_1046:
	add r14,1 
LB_1047:
	cmp r14,r9
	jge LB_1048
	JZ_LINE_SPC BYTE [r13+8+r14], LB_1046
LB_1048
	lea rax,[r14+1]
	cmp rax,r9
	jg LB_1051
	jmp LB_1052
LB_1051:
	mov r8,unt_1
	jmp LB_1049
LB_1052:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],125
	jnz LB_1053
	jmp LB_1054
LB_1053:
	mov r8,unt_1
	jmp LB_1049
LB_1054:
	add r14,1
	jmp LB_1050
LB_1049:
	add rsp,8
	jmp LB_1029
LB_1050:
	mov QWORD [rsp+8*1],r14
	mov r13,QWORD [rsp+16+8*1]
	mov r14,QWORD [rsp+8*1]
	jmp LB_1055
LB_1055
;; rsp=1 , %1166~1'(= r ) %1165~0'(= r ) %1164~8'(= a2◂ [ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]] ) 
; #81 8'(= a2◂ [ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]] ) ⊢ 0(<2)◂8'(= a2◂ [ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]] )
;; rsp=1 , %1167~0(<2)◂8'(= a2◂ [ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]] ) %1166~1'(= r ) %1165~0'(= r ) 
; #24 0(<2)◂8'(= a2◂ [ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]] ) ⊢ 0(<2)◂0(<2)◂8'(= a2◂ [ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]] )
;; rsp=1 , %1168~0(<2)◂0(<2)◂8'(= a2◂ [ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]] ) %1166~1'(= r ) %1165~0'(= r ) 
; ∎ 0(<2)◂0(<2)◂8'(= a2◂ [ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]] )
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂0(<2)◂8'(= a2◂ [ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]] ) ⊢ 2'(= a3◂ [ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]] )
; .mov_ptn 0(<2)◂0(<2)◂8'(= a2◂ [ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]] ) ⊢ 2'(= a3◂ [ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]] )
	mov rax,QWORD [rsp-8+8*1]
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,8
	jmp LB_1056
LB_1056:
	cmp BYTE [r8+6],0
	jnz LB_1029
	POP_GRM_SCC
	ret
LB_1029:
	RB_GRM
	jmp LB_1059
LB_1058:
	add r14,1 
LB_1059:
	cmp r14,r9
	jge LB_1060
	JZ_LINE_SPC BYTE [r13+8+r14], LB_1058
LB_1060
	call GRM_202
	cmp BYTE [r8+6],0
	jnz LB_1063
	jmp LB_1064
LB_1063:
	jmp LB_1061
LB_1064:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a14◂ [ a9◂ [ ]{| l |}] ) ⊢ 8'(= a14◂ [ a9◂ [ ]{| l |}] )
; .mov_ptn 2'(= a14◂ [ a9◂ [ ]{| l |}] ) ⊢ 8'(= a14◂ [ a9◂ [ ]{| l |}] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_1062
LB_1061:
	add rsp,0
	jmp LB_1057
LB_1062:
	mov QWORD [rsp+8*1],r14
	mov r13,QWORD [rsp+16+8*1]
	mov r14,QWORD [rsp+8*1]
	jmp LB_1065
LB_1065
;; rsp=1 , %1171~1'(= r ) %1170~0'(= r ) %1169~8'(= a14◂ [ a9◂ [ ]{| l |}] ) 
; #80 8'(= a14◂ [ a9◂ [ ]{| l |}] ) ⊢ 1(<2)◂8'(= a14◂ [ a9◂ [ ]{| l |}] )
;; rsp=1 , %1172~1(<2)◂8'(= a14◂ [ a9◂ [ ]{| l |}] ) %1171~1'(= r ) %1170~0'(= r ) 
; #24 1(<2)◂8'(= a14◂ [ a9◂ [ ]{| l |}] ) ⊢ 0(<2)◂1(<2)◂8'(= a14◂ [ a9◂ [ ]{| l |}] )
;; rsp=1 , %1173~0(<2)◂1(<2)◂8'(= a14◂ [ a9◂ [ ]{| l |}] ) %1171~1'(= r ) %1170~0'(= r ) 
; ∎ 0(<2)◂1(<2)◂8'(= a14◂ [ a9◂ [ ]{| l |}] )
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂1(<2)◂8'(= a14◂ [ a9◂ [ ]{| l |}] ) ⊢ 2'(= a3◂ [ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]] )
; .mov_ptn 0(<2)◂1(<2)◂8'(= a14◂ [ a9◂ [ ]{| l |}] ) ⊢ 2'(= a3◂ [ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]] )
	mov rax,QWORD [rsp-8+8*1]
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],1
	mov QWORD [rax+8],rdi
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,8
	jmp LB_1066
LB_1066:
	cmp BYTE [r8+6],0
	jnz LB_1057
	POP_GRM_SCC
	ret
LB_1057:
	POP_GRM_FAIL 
	ret
ETR_200:
	mov r9,0x0000_ffff_ffff_ffff
	and r9,[r13]
	call GRM_200
	ret
GRM_200:
	PUSH_GRM
	jmp LB_1069
LB_1068:
	add r14,1 
LB_1069:
	cmp r14,r9
	jge LB_1070
	JZ_LINE_SPC BYTE [r13+8+r14], LB_1068
LB_1070
	call GRM_199
	cmp BYTE [r8+6],0
	jnz LB_1073
	jmp LB_1074
LB_1073:
	jmp LB_1071
LB_1074:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a8◂ [ a14◂ [ a9◂ [ ]{| l |}]] ) ⊢ 8'(= a8◂ [ a14◂ [ a9◂ [ ]{| l |}]] )
; .mov_ptn 2'(= a8◂ [ a14◂ [ a9◂ [ ]{| l |}]] ) ⊢ 8'(= a8◂ [ a14◂ [ a9◂ [ ]{| l |}]] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_1072
LB_1071:
	add rsp,0
	jmp LB_1067
LB_1072:
	jmp LB_1076
LB_1075:
	add r14,1 
LB_1076:
	cmp r14,r9
	jge LB_1077
	JZ_LINE_SPC BYTE [r13+8+r14], LB_1075
LB_1077
	call GRM_200
	cmp BYTE [r8+6],0
	jnz LB_1080
	jmp LB_1081
LB_1080:
	jmp LB_1078
LB_1081:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a2◂ [ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]] ) ⊢ 9'(= a2◂ [ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]] )
; .mov_ptn 2'(= a2◂ [ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]] ) ⊢ 9'(= a2◂ [ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_1079
LB_1078:
	add rsp,8
	jmp LB_1067
LB_1079:
	mov QWORD [rsp+8*2],r14
	mov r13,QWORD [rsp+16+8*2]
	mov r14,QWORD [rsp+8*2]
	jmp LB_1082
LB_1082
;; rsp=2 , %1177~1'(= r ) %1176~0'(= r ) %1175~9'(= a2◂ [ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]] ) %1174~8'(= a8◂ [ a14◂ [ a9◂ [ ]{| l |}]] ) 
; #23 { 8'(= a8◂ [ a14◂ [ a9◂ [ ]{| l |}]] ) 9'(= a2◂ [ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]] ) } ⊢ 0(<2)◂{ 8'(= a8◂ [ a14◂ [ a9◂ [ ]{| l |}]] ) 9'(= a2◂ [ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]] ) }
;; rsp=2 , %1178~0(<2)◂{ 8'(= a8◂ [ a14◂ [ a9◂ [ ]{| l |}]] ) 9'(= a2◂ [ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]] ) } %1177~1'(= r ) %1176~0'(= r ) 
; #24 0(<2)◂{ 8'(= a8◂ [ a14◂ [ a9◂ [ ]{| l |}]] ) 9'(= a2◂ [ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]] ) } ⊢ 0(<2)◂0(<2)◂{ 8'(= a8◂ [ a14◂ [ a9◂ [ ]{| l |}]] ) 9'(= a2◂ [ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]] ) }
;; rsp=2 , %1179~0(<2)◂0(<2)◂{ 8'(= a8◂ [ a14◂ [ a9◂ [ ]{| l |}]] ) 9'(= a2◂ [ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]] ) } %1177~1'(= r ) %1176~0'(= r ) 
; ∎ 0(<2)◂0(<2)◂{ 8'(= a8◂ [ a14◂ [ a9◂ [ ]{| l |}]] ) 9'(= a2◂ [ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]] ) }
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂0(<2)◂{ 8'(= a8◂ [ a14◂ [ a9◂ [ ]{| l |}]] ) 9'(= a2◂ [ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]] ) } ⊢ 2'(= a3◂ [ a2◂ [ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]]] )
; .mov_ptn 0(<2)◂0(<2)◂{ 8'(= a8◂ [ a14◂ [ a9◂ [ ]{| l |}]] ) 9'(= a2◂ [ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]] ) } ⊢ 2'(= a3◂ [ a2◂ [ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]]] )
	ALC_RCD 2, rax
	mov r13,rax
	mov rax,QWORD [rsp-8+8*2]
	mov QWORD [r13+8+8*0],rax
	mov rax,QWORD [rsp-8+8*1]
	mov QWORD [r13+8+8*1],rax
	mov rax,r13
	mov BYTE [rax+6],0
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,16
	jmp LB_1083
LB_1083:
	cmp BYTE [r8+6],0
	jnz LB_1067
	POP_GRM_SCC
	ret
LB_1067:
	RB_GRM
	mov QWORD [rsp+8*0],r14
	mov r13,QWORD [rsp+16+8*0]
	mov r14,QWORD [rsp+8*0]
	jmp LB_1085
LB_1085
;; rsp=0 , %1181~1'(= r ) %1180~0'(= r ) 
; #22 { } ⊢ 1(<2)◂{ }
;; rsp=0 , %1182~1(<2)◂{ } %1181~1'(= r ) %1180~0'(= r ) 
; #24 1(<2)◂{ } ⊢ 0(<2)◂1(<2)◂{ }
;; rsp=0 , %1183~0(<2)◂1(<2)◂{ } %1181~1'(= r ) %1180~0'(= r ) 
; ∎ 0(<2)◂1(<2)◂{ }
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂1(<2)◂{ } ⊢ 2'(= a3◂ [ a2◂ [ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]]] )
; .mov_ptn 0(<2)◂1(<2)◂{ } ⊢ 2'(= a3◂ [ a2◂ [ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]]] )
	mov rax,unt 
	mov rax,unt_1
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	jmp LB_1086
LB_1086:
	cmp BYTE [r8+6],0
	jnz LB_1084
	POP_GRM_SCC
	ret
LB_1084:
	POP_GRM_FAIL 
	ret
ETR_201:
	mov r9,0x0000_ffff_ffff_ffff
	and r9,[r13]
	call GRM_201
	ret
GRM_201:
	PUSH_GRM
	jmp LB_1089
LB_1088:
	add r14,1 
LB_1089:
	cmp r14,r9
	jge LB_1090
	JZ_LINE_SPC BYTE [r13+8+r14], LB_1088
LB_1090
	lea rax,[r14+1]
	cmp rax,r9
	jg LB_1093
	jmp LB_1094
LB_1093:
	mov r8,unt_1
	jmp LB_1091
LB_1094:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],44
	jnz LB_1095
	jmp LB_1096
LB_1095:
	mov r8,unt_1
	jmp LB_1091
LB_1096:
	add r14,1
	jmp LB_1092
LB_1091:
	add rsp,0
	jmp LB_1087
LB_1092:
	jmp LB_1098
LB_1097:
	add r14,1 
LB_1098:
	cmp r14,r9
	jge LB_1099
	JZ_LINE_SPC BYTE [r13+8+r14], LB_1097
LB_1099
	call GRM_202
	cmp BYTE [r8+6],0
	jnz LB_1102
	jmp LB_1103
LB_1102:
	jmp LB_1100
LB_1103:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a14◂ [ a9◂ [ ]{| l |}] ) ⊢ 8'(= a14◂ [ a9◂ [ ]{| l |}] )
; .mov_ptn 2'(= a14◂ [ a9◂ [ ]{| l |}] ) ⊢ 8'(= a14◂ [ a9◂ [ ]{| l |}] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_1101
LB_1100:
	add rsp,0
	POP_GRM_FAIL
	ret
LB_1101:
	jmp LB_1105
LB_1104:
	add r14,1 
LB_1105:
	cmp r14,r9
	jge LB_1106
	JZ_LINE_SPC BYTE [r13+8+r14], LB_1104
LB_1106
	call GRM_201
	cmp BYTE [r8+6],0
	jnz LB_1109
	jmp LB_1110
LB_1109:
	jmp LB_1107
LB_1110:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a2◂ [ a14◂ [ a9◂ [ ]{| l |}]] ) ⊢ 9'(= a2◂ [ a14◂ [ a9◂ [ ]{| l |}]] )
; .mov_ptn 2'(= a2◂ [ a14◂ [ a9◂ [ ]{| l |}]] ) ⊢ 9'(= a2◂ [ a14◂ [ a9◂ [ ]{| l |}]] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_1108
LB_1107:
	add rsp,8
	POP_GRM_FAIL
	ret
LB_1108:
	mov QWORD [rsp+8*2],r14
	mov r13,QWORD [rsp+16+8*2]
	mov r14,QWORD [rsp+8*2]
	jmp LB_1111
LB_1111
;; rsp=2 , %1187~1'(= r ) %1186~0'(= r ) %1185~9'(= a2◂ [ a14◂ [ a9◂ [ ]{| l |}]] ) %1184~8'(= a14◂ [ a9◂ [ ]{| l |}] ) 
; #23 { 8'(= a14◂ [ a9◂ [ ]{| l |}] ) 9'(= a2◂ [ a14◂ [ a9◂ [ ]{| l |}]] ) } ⊢ 0(<2)◂{ 8'(= a14◂ [ a9◂ [ ]{| l |}] ) 9'(= a2◂ [ a14◂ [ a9◂ [ ]{| l |}]] ) }
;; rsp=2 , %1188~0(<2)◂{ 8'(= a14◂ [ a9◂ [ ]{| l |}] ) 9'(= a2◂ [ a14◂ [ a9◂ [ ]{| l |}]] ) } %1187~1'(= r ) %1186~0'(= r ) 
; #24 0(<2)◂{ 8'(= a14◂ [ a9◂ [ ]{| l |}] ) 9'(= a2◂ [ a14◂ [ a9◂ [ ]{| l |}]] ) } ⊢ 0(<2)◂0(<2)◂{ 8'(= a14◂ [ a9◂ [ ]{| l |}] ) 9'(= a2◂ [ a14◂ [ a9◂ [ ]{| l |}]] ) }
;; rsp=2 , %1189~0(<2)◂0(<2)◂{ 8'(= a14◂ [ a9◂ [ ]{| l |}] ) 9'(= a2◂ [ a14◂ [ a9◂ [ ]{| l |}]] ) } %1187~1'(= r ) %1186~0'(= r ) 
; ∎ 0(<2)◂0(<2)◂{ 8'(= a14◂ [ a9◂ [ ]{| l |}] ) 9'(= a2◂ [ a14◂ [ a9◂ [ ]{| l |}]] ) }
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂0(<2)◂{ 8'(= a14◂ [ a9◂ [ ]{| l |}] ) 9'(= a2◂ [ a14◂ [ a9◂ [ ]{| l |}]] ) } ⊢ 2'(= a3◂ [ a2◂ [ a14◂ [ a9◂ [ ]{| l |}]]] )
; .mov_ptn 0(<2)◂0(<2)◂{ 8'(= a14◂ [ a9◂ [ ]{| l |}] ) 9'(= a2◂ [ a14◂ [ a9◂ [ ]{| l |}]] ) } ⊢ 2'(= a3◂ [ a2◂ [ a14◂ [ a9◂ [ ]{| l |}]]] )
	ALC_RCD 2, rax
	mov r13,rax
	mov rax,QWORD [rsp-8+8*2]
	mov QWORD [r13+8+8*0],rax
	mov rax,QWORD [rsp-8+8*1]
	mov QWORD [r13+8+8*1],rax
	mov rax,r13
	mov BYTE [rax+6],0
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,16
	jmp LB_1112
LB_1112:
	cmp BYTE [r8+6],0
	jnz LB_1087
	POP_GRM_SCC
	ret
LB_1087:
	RB_GRM
	mov QWORD [rsp+8*0],r14
	mov r13,QWORD [rsp+16+8*0]
	mov r14,QWORD [rsp+8*0]
	jmp LB_1114
LB_1114
;; rsp=0 , %1191~1'(= r ) %1190~0'(= r ) 
; #22 { } ⊢ 1(<2)◂{ }
;; rsp=0 , %1192~1(<2)◂{ } %1191~1'(= r ) %1190~0'(= r ) 
; #24 1(<2)◂{ } ⊢ 0(<2)◂1(<2)◂{ }
;; rsp=0 , %1193~0(<2)◂1(<2)◂{ } %1191~1'(= r ) %1190~0'(= r ) 
; ∎ 0(<2)◂1(<2)◂{ }
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂1(<2)◂{ } ⊢ 2'(= a3◂ [ a2◂ [ a14◂ [ a9◂ [ ]{| l |}]]] )
; .mov_ptn 0(<2)◂1(<2)◂{ } ⊢ 2'(= a3◂ [ a2◂ [ a14◂ [ a9◂ [ ]{| l |}]]] )
	mov rax,unt 
	mov rax,unt_1
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	jmp LB_1115
LB_1115:
	cmp BYTE [r8+6],0
	jnz LB_1113
	POP_GRM_SCC
	ret
LB_1113:
	POP_GRM_FAIL 
	ret
ETR_202:
	mov r9,0x0000_ffff_ffff_ffff
	and r9,[r13]
	call GRM_202
	ret
GRM_202:
	PUSH_GRM
	jmp LB_1118
LB_1117:
	add r14,1 
LB_1118:
	cmp r14,r9
	jge LB_1119
	JZ_LINE_SPC BYTE [r13+8+r14], LB_1117
LB_1119
	call GRM_191
	cmp BYTE [r8+6],0
	jnz LB_1122
	jmp LB_1123
LB_1122:
	jmp LB_1120
LB_1123:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a9◂ [ ] ) ⊢ 8'(= a9◂ [ ] )
; .mov_ptn 2'(= a9◂ [ ] ) ⊢ 8'(= a9◂ [ ] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_1121
LB_1120:
	add rsp,0
	jmp LB_1116
LB_1121:
	jmp LB_1125
LB_1124:
	add r14,1 
LB_1125:
	cmp r14,r9
	jge LB_1126
	JZ_LINE_SPC BYTE [r13+8+r14], LB_1124
LB_1126
	lea rax,[r14+3]
	cmp rax,r9
	jg LB_1129
	jmp LB_1130
LB_1129:
	mov r8,unt_1
	jmp LB_1127
LB_1130:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],226
	jnz LB_1131
	cmp BYTE [rdi+1],151
	jnz LB_1131
	cmp BYTE [rdi+2],130
	jnz LB_1131
	jmp LB_1132
LB_1131:
	mov r8,unt_1
	jmp LB_1127
LB_1132:
	add r14,3
	jmp LB_1128
LB_1127:
	add rsp,8
	jmp LB_1116
LB_1128:
	jmp LB_1134
LB_1133:
	add r14,1 
LB_1134:
	cmp r14,r9
	jge LB_1135
	JZ_LINE_SPC BYTE [r13+8+r14], LB_1133
LB_1135
	call GRM_199
	cmp BYTE [r8+6],0
	jnz LB_1138
	jmp LB_1139
LB_1138:
	jmp LB_1136
LB_1139:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a8◂ [ a14◂ [ a9◂ [ ]{| l |}]] ) ⊢ 9'(= a8◂ [ a14◂ [ a9◂ [ ]{| l |}]] )
; .mov_ptn 2'(= a8◂ [ a14◂ [ a9◂ [ ]{| l |}]] ) ⊢ 9'(= a8◂ [ a14◂ [ a9◂ [ ]{| l |}]] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_1137
LB_1136:
	add rsp,8
	jmp LB_1116
LB_1137:
	mov QWORD [rsp+8*2],r14
	mov r13,QWORD [rsp+16+8*2]
	mov r14,QWORD [rsp+8*2]
	jmp LB_1140
LB_1140
;; rsp=2 , %1197~1'(= r ) %1196~0'(= r ) %1195~9'(= a8◂ [ a14◂ [ a9◂ [ ]{| l |}]] ) %1194~8'(= a9◂ [ ] ) 
; #98 { 8'(= a9◂ [ ] ) 9'(= a8◂ [ a14◂ [ a9◂ [ ]{| l |}]] ) } ⊢ 0(<4)◂{ 8'(= a9◂ [ ] ) 9'(= a8◂ [ a14◂ [ a9◂ [ ]{| l |}]] ) }
;; rsp=2 , %1198~0(<4)◂{ 8'(= a9◂ [ ] ) 9'(= a8◂ [ a14◂ [ a9◂ [ ]{| l |}]] ) } %1197~1'(= r ) %1196~0'(= r ) 
; #24 0(<4)◂{ 8'(= a9◂ [ ] ) 9'(= a8◂ [ a14◂ [ a9◂ [ ]{| l |}]] ) } ⊢ 0(<2)◂0(<4)◂{ 8'(= a9◂ [ ] ) 9'(= a8◂ [ a14◂ [ a9◂ [ ]{| l |}]] ) }
;; rsp=2 , %1199~0(<2)◂0(<4)◂{ 8'(= a9◂ [ ] ) 9'(= a8◂ [ a14◂ [ a9◂ [ ]{| l |}]] ) } %1197~1'(= r ) %1196~0'(= r ) 
; ∎ 0(<2)◂0(<4)◂{ 8'(= a9◂ [ ] ) 9'(= a8◂ [ a14◂ [ a9◂ [ ]{| l |}]] ) }
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂0(<4)◂{ 8'(= a9◂ [ ] ) 9'(= a8◂ [ a14◂ [ a9◂ [ ]{| l |}]] ) } ⊢ 2'(= a3◂ [ a14◂ [ a9◂ [ ]{| l |}]] )
; .mov_ptn 0(<2)◂0(<4)◂{ 8'(= a9◂ [ ] ) 9'(= a8◂ [ a14◂ [ a9◂ [ ]{| l |}]] ) } ⊢ 2'(= a3◂ [ a14◂ [ a9◂ [ ]{| l |}]] )
	ALC_RCD 2, rax
	mov r13,rax
	mov rax,QWORD [rsp-8+8*2]
	mov QWORD [r13+8+8*0],rax
	mov rax,QWORD [rsp-8+8*1]
	mov QWORD [r13+8+8*1],rax
	mov rax,r13
	mov BYTE [rax+6],0
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,16
	jmp LB_1141
LB_1141:
	cmp BYTE [r8+6],0
	jnz LB_1116
	POP_GRM_SCC
	ret
LB_1116:
	RB_GRM
	jmp LB_1144
LB_1143:
	add r14,1 
LB_1144:
	cmp r14,r9
	jge LB_1145
	JZ_LINE_SPC BYTE [r13+8+r14], LB_1143
LB_1145
	lea rax,[r14+2]
	cmp rax,r9
	jg LB_1148
	jmp LB_1149
LB_1148:
	mov r8,unt_1
	jmp LB_1146
LB_1149:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],37
	jnz LB_1150
	cmp BYTE [rdi+1],91
	jnz LB_1150
	jmp LB_1151
LB_1150:
	mov r8,unt_1
	jmp LB_1146
LB_1151:
	add r14,2
	jmp LB_1147
LB_1146:
	add rsp,0
	jmp LB_1142
LB_1147:
	jmp LB_1153
LB_1152:
	add r14,1 
LB_1153:
	cmp r14,r9
	jge LB_1154
	JZ_LINE_SPC BYTE [r13+8+r14], LB_1152
LB_1154
	call GRM_192
	cmp BYTE [r8+6],0
	jnz LB_1157
	jmp LB_1158
LB_1157:
	jmp LB_1155
LB_1158:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a11◂ [ a9◂ [ ]] ) ⊢ 8'(= a11◂ [ a9◂ [ ]] )
; .mov_ptn 2'(= a11◂ [ a9◂ [ ]] ) ⊢ 8'(= a11◂ [ a9◂ [ ]] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_1156
LB_1155:
	add rsp,0
	POP_GRM_FAIL
	ret
LB_1156:
	jmp LB_1160
LB_1159:
	add r14,1 
LB_1160:
	cmp r14,r9
	jge LB_1161
	JZ_LINE_SPC BYTE [r13+8+r14], LB_1159
LB_1161
	lea rax,[r14+1]
	cmp rax,r9
	jg LB_1164
	jmp LB_1165
LB_1164:
	mov r8,unt_1
	jmp LB_1162
LB_1165:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],93
	jnz LB_1166
	jmp LB_1167
LB_1166:
	mov r8,unt_1
	jmp LB_1162
LB_1167:
	add r14,1
	jmp LB_1163
LB_1162:
	add rsp,8
	POP_GRM_FAIL
	ret
LB_1163:
	mov QWORD [rsp+8*1],r14
	mov r13,QWORD [rsp+16+8*1]
	mov r14,QWORD [rsp+8*1]
	jmp LB_1168
LB_1168
;; rsp=1 , %1202~1'(= r ) %1201~0'(= r ) %1200~8'(= a11◂ [ a9◂ [ ]] ) 
; #97 8'(= a11◂ [ a9◂ [ ]] ) ⊢ 1(<4)◂8'(= a11◂ [ a9◂ [ ]] )
;; rsp=1 , %1203~1(<4)◂8'(= a11◂ [ a9◂ [ ]] ) %1202~1'(= r ) %1201~0'(= r ) 
; #24 1(<4)◂8'(= a11◂ [ a9◂ [ ]] ) ⊢ 0(<2)◂1(<4)◂8'(= a11◂ [ a9◂ [ ]] )
;; rsp=1 , %1204~0(<2)◂1(<4)◂8'(= a11◂ [ a9◂ [ ]] ) %1202~1'(= r ) %1201~0'(= r ) 
; ∎ 0(<2)◂1(<4)◂8'(= a11◂ [ a9◂ [ ]] )
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂1(<4)◂8'(= a11◂ [ a9◂ [ ]] ) ⊢ 2'(= a3◂ [ a14◂ [ a9◂ [ ]{| l |}]] )
; .mov_ptn 0(<2)◂1(<4)◂8'(= a11◂ [ a9◂ [ ]] ) ⊢ 2'(= a3◂ [ a14◂ [ a9◂ [ ]{| l |}]] )
	mov rax,QWORD [rsp-8+8*1]
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],1
	mov QWORD [rax+8],rdi
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,8
	jmp LB_1169
LB_1169:
	cmp BYTE [r8+6],0
	jnz LB_1142
	POP_GRM_SCC
	ret
LB_1142:
	RB_GRM
	jmp LB_1172
LB_1171:
	add r14,1 
LB_1172:
	cmp r14,r9
	jge LB_1173
	JZ_LINE_SPC BYTE [r13+8+r14], LB_1171
LB_1173
	lea rax,[r14+1]
	cmp rax,r9
	jg LB_1176
	jmp LB_1177
LB_1176:
	mov r8,unt_1
	jmp LB_1174
LB_1177:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],37
	jnz LB_1178
	jmp LB_1179
LB_1178:
	mov r8,unt_1
	jmp LB_1174
LB_1179:
	add r14,1
	jmp LB_1175
LB_1174:
	add rsp,0
	jmp LB_1170
LB_1175:
	jmp LB_1181
LB_1180:
	add r14,1 
LB_1181:
	cmp r14,r9
	jge LB_1182
	JZ_LINE_SPC BYTE [r13+8+r14], LB_1180
LB_1182
	call GRM_79
	cmp BYTE [r8+6],0
	jnz LB_1185
	jmp LB_1186
LB_1185:
	jmp LB_1183
LB_1186:
	sub rsp,8
; .mov_ptn2 2'(= {| l |} ) ⊢ 8'(= {| l |} )
; .mov_ptn 2'(= {| l |} ) ⊢ 8'(= {| l |} )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_1184
LB_1183:
	add rsp,0
	POP_GRM_FAIL
	ret
LB_1184:
	mov QWORD [rsp+8*1],r14
	mov r13,QWORD [rsp+16+8*1]
	mov r14,QWORD [rsp+8*1]
	jmp LB_1187
LB_1187
;; rsp=1 , %1207~1'(= r ) %1206~0'(= r ) %1205~8'(= {| l |} ) 
; #95 8'(= {| l |} ) ⊢ 3(<4)◂8'(= {| l |} )
;; rsp=1 , %1208~3(<4)◂8'(= {| l |} ) %1207~1'(= r ) %1206~0'(= r ) 
; #24 3(<4)◂8'(= {| l |} ) ⊢ 0(<2)◂3(<4)◂8'(= {| l |} )
;; rsp=1 , %1209~0(<2)◂3(<4)◂8'(= {| l |} ) %1207~1'(= r ) %1206~0'(= r ) 
; ∎ 0(<2)◂3(<4)◂8'(= {| l |} )
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂3(<4)◂8'(= {| l |} ) ⊢ 2'(= a3◂ [ a14◂ [ a9◂ [ ]{| l |}]] )
; .mov_ptn 0(<2)◂3(<4)◂8'(= {| l |} ) ⊢ 2'(= a3◂ [ a14◂ [ a9◂ [ ]{| l |}]] )
	mov rax,QWORD [rsp-8+8*1]
	mov BYTE [rax+6],3
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,8
	jmp LB_1188
LB_1188:
	cmp BYTE [r8+6],0
	jnz LB_1170
	POP_GRM_SCC
	ret
LB_1170:
	RB_GRM
	jmp LB_1191
LB_1190:
	add r14,1 
LB_1191:
	cmp r14,r9
	jge LB_1192
	JZ_LINE_SPC BYTE [r13+8+r14], LB_1190
LB_1192
	call GRM_79
	cmp BYTE [r8+6],0
	jnz LB_1195
	jmp LB_1196
LB_1195:
	jmp LB_1193
LB_1196:
	sub rsp,8
; .mov_ptn2 2'(= {| l |} ) ⊢ 8'(= {| l |} )
; .mov_ptn 2'(= {| l |} ) ⊢ 8'(= {| l |} )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_1194
LB_1193:
	add rsp,0
	jmp LB_1189
LB_1194:
	mov QWORD [rsp+8*1],r14
	mov r13,QWORD [rsp+16+8*1]
	mov r14,QWORD [rsp+8*1]
	jmp LB_1197
LB_1197
;; rsp=1 , %1212~1'(= r ) %1211~0'(= r ) %1210~8'(= {| l |} ) 
; #95 8'(= {| l |} ) ⊢ 3(<4)◂8'(= {| l |} )
;; rsp=1 , %1213~3(<4)◂8'(= {| l |} ) %1212~1'(= r ) %1211~0'(= r ) 
; #24 3(<4)◂8'(= {| l |} ) ⊢ 0(<2)◂3(<4)◂8'(= {| l |} )
;; rsp=1 , %1214~0(<2)◂3(<4)◂8'(= {| l |} ) %1212~1'(= r ) %1211~0'(= r ) 
; ∎ 0(<2)◂3(<4)◂8'(= {| l |} )
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂3(<4)◂8'(= {| l |} ) ⊢ 2'(= a3◂ [ a14◂ [ a9◂ [ ]{| l |}]] )
; .mov_ptn 0(<2)◂3(<4)◂8'(= {| l |} ) ⊢ 2'(= a3◂ [ a14◂ [ a9◂ [ ]{| l |}]] )
	mov rax,QWORD [rsp-8+8*1]
	mov BYTE [rax+6],3
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,8
	jmp LB_1198
LB_1198:
	cmp BYTE [r8+6],0
	jnz LB_1189
	POP_GRM_SCC
	ret
LB_1189:
	RB_GRM
	jmp LB_1201
LB_1200:
	add r14,1 
LB_1201:
	cmp r14,r9
	jge LB_1202
	JZ_LINE_SPC BYTE [r13+8+r14], LB_1200
LB_1202
	lea rax,[r14+1]
	cmp rax,r9
	jg LB_1205
	jmp LB_1206
LB_1205:
	mov r8,unt_1
	jmp LB_1203
LB_1206:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],95
	jnz LB_1207
	jmp LB_1208
LB_1207:
	mov r8,unt_1
	jmp LB_1203
LB_1208:
	add r14,1
	jmp LB_1204
LB_1203:
	add rsp,0
	jmp LB_1199
LB_1204:
	mov QWORD [rsp+8*0],r14
	mov r13,QWORD [rsp+16+8*0]
	mov r14,QWORD [rsp+8*0]
	jmp LB_1209
LB_1209
;; rsp=0 , %1216~1'(= r ) %1215~0'(= r ) 
; #25 { } ⊢ 1(<2)◂{ }
;; rsp=0 , %1217~1(<2)◂{ } %1216~1'(= r ) %1215~0'(= r ) 
; #96 1(<2)◂{ } ⊢ 2(<4)◂1(<2)◂{ }
;; rsp=0 , %1218~2(<4)◂1(<2)◂{ } %1216~1'(= r ) %1215~0'(= r ) 
; #24 2(<4)◂1(<2)◂{ } ⊢ 0(<2)◂2(<4)◂1(<2)◂{ }
;; rsp=0 , %1219~0(<2)◂2(<4)◂1(<2)◂{ } %1216~1'(= r ) %1215~0'(= r ) 
; ∎ 0(<2)◂2(<4)◂1(<2)◂{ }
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂2(<4)◂1(<2)◂{ } ⊢ 2'(= a3◂ [ a14◂ [ a9◂ [ ]{| l |}]] )
; .mov_ptn 0(<2)◂2(<4)◂1(<2)◂{ } ⊢ 2'(= a3◂ [ a14◂ [ a9◂ [ ]{| l |}]] )
	mov rax,unt 
	mov rax,unt_1
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],2
	mov QWORD [rax+8],rdi
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	jmp LB_1210
LB_1210:
	cmp BYTE [r8+6],0
	jnz LB_1199
	POP_GRM_SCC
	ret
LB_1199:
	POP_GRM_FAIL 
	ret
ETR_203:
	mov r9,0x0000_ffff_ffff_ffff
	and r9,[r13]
	call GRM_203
	ret
GRM_203:
	PUSH_GRM
	jmp LB_1213
LB_1212:
	add r14,1 
LB_1213:
	cmp r14,r9
	jge LB_1214
	JZ_LINE_SPC BYTE [r13+8+r14], LB_1212
LB_1214
	lea rax,[r14+1]
	cmp rax,r9
	jg LB_1217
	jmp LB_1218
LB_1217:
	mov r8,unt_1
	jmp LB_1215
LB_1218:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],123
	jnz LB_1219
	jmp LB_1220
LB_1219:
	mov r8,unt_1
	jmp LB_1215
LB_1220:
	add r14,1
	jmp LB_1216
LB_1215:
	add rsp,0
	jmp LB_1211
LB_1216:
	jmp LB_1222
LB_1221:
	add r14,1 
LB_1222:
	cmp r14,r9
	jge LB_1223
	JZ_LINE_SPC BYTE [r13+8+r14], LB_1221
LB_1223
	call GRM_204
	cmp BYTE [r8+6],0
	jnz LB_1226
	jmp LB_1227
LB_1226:
	jmp LB_1224
LB_1227:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a2◂ [ a8◂ [ a12◂ [ a9◂ [ ]{| l |}]]] ) ⊢ 8'(= a2◂ [ a8◂ [ a12◂ [ a9◂ [ ]{| l |}]]] )
; .mov_ptn 2'(= a2◂ [ a8◂ [ a12◂ [ a9◂ [ ]{| l |}]]] ) ⊢ 8'(= a2◂ [ a8◂ [ a12◂ [ a9◂ [ ]{| l |}]]] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_1225
LB_1224:
	add rsp,0
	jmp LB_1211
LB_1225:
	jmp LB_1229
LB_1228:
	add r14,1 
LB_1229:
	cmp r14,r9
	jge LB_1230
	JZ_LINE_SPC BYTE [r13+8+r14], LB_1228
LB_1230
	lea rax,[r14+1]
	cmp rax,r9
	jg LB_1233
	jmp LB_1234
LB_1233:
	mov r8,unt_1
	jmp LB_1231
LB_1234:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],125
	jnz LB_1235
	jmp LB_1236
LB_1235:
	mov r8,unt_1
	jmp LB_1231
LB_1236:
	add r14,1
	jmp LB_1232
LB_1231:
	add rsp,8
	jmp LB_1211
LB_1232:
	mov QWORD [rsp+8*1],r14
	mov r13,QWORD [rsp+16+8*1]
	mov r14,QWORD [rsp+8*1]
	jmp LB_1237
LB_1237
;; rsp=1 , %1222~1'(= r ) %1221~0'(= r ) %1220~8'(= a2◂ [ a8◂ [ a12◂ [ a9◂ [ ]{| l |}]]] ) 
; #81 8'(= a2◂ [ a8◂ [ a12◂ [ a9◂ [ ]{| l |}]]] ) ⊢ 0(<2)◂8'(= a2◂ [ a8◂ [ a12◂ [ a9◂ [ ]{| l |}]]] )
;; rsp=1 , %1223~0(<2)◂8'(= a2◂ [ a8◂ [ a12◂ [ a9◂ [ ]{| l |}]]] ) %1222~1'(= r ) %1221~0'(= r ) 
; #24 0(<2)◂8'(= a2◂ [ a8◂ [ a12◂ [ a9◂ [ ]{| l |}]]] ) ⊢ 0(<2)◂0(<2)◂8'(= a2◂ [ a8◂ [ a12◂ [ a9◂ [ ]{| l |}]]] )
;; rsp=1 , %1224~0(<2)◂0(<2)◂8'(= a2◂ [ a8◂ [ a12◂ [ a9◂ [ ]{| l |}]]] ) %1222~1'(= r ) %1221~0'(= r ) 
; ∎ 0(<2)◂0(<2)◂8'(= a2◂ [ a8◂ [ a12◂ [ a9◂ [ ]{| l |}]]] )
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂0(<2)◂8'(= a2◂ [ a8◂ [ a12◂ [ a9◂ [ ]{| l |}]]] ) ⊢ 2'(= a3◂ [ a8◂ [ a12◂ [ a9◂ [ ]{| l |}]]] )
; .mov_ptn 0(<2)◂0(<2)◂8'(= a2◂ [ a8◂ [ a12◂ [ a9◂ [ ]{| l |}]]] ) ⊢ 2'(= a3◂ [ a8◂ [ a12◂ [ a9◂ [ ]{| l |}]]] )
	mov rax,QWORD [rsp-8+8*1]
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,8
	jmp LB_1238
LB_1238:
	cmp BYTE [r8+6],0
	jnz LB_1211
	POP_GRM_SCC
	ret
LB_1211:
	RB_GRM
	jmp LB_1241
LB_1240:
	add r14,1 
LB_1241:
	cmp r14,r9
	jge LB_1242
	JZ_LINE_SPC BYTE [r13+8+r14], LB_1240
LB_1242
	call GRM_206
	cmp BYTE [r8+6],0
	jnz LB_1245
	jmp LB_1246
LB_1245:
	jmp LB_1243
LB_1246:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a12◂ [ a9◂ [ ]{| l |}] ) ⊢ 8'(= a12◂ [ a9◂ [ ]{| l |}] )
; .mov_ptn 2'(= a12◂ [ a9◂ [ ]{| l |}] ) ⊢ 8'(= a12◂ [ a9◂ [ ]{| l |}] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_1244
LB_1243:
	add rsp,0
	jmp LB_1239
LB_1244:
	mov QWORD [rsp+8*1],r14
	mov r13,QWORD [rsp+16+8*1]
	mov r14,QWORD [rsp+8*1]
	jmp LB_1247
LB_1247
;; rsp=1 , %1227~1'(= r ) %1226~0'(= r ) %1225~8'(= a12◂ [ a9◂ [ ]{| l |}] ) 
; #80 8'(= a12◂ [ a9◂ [ ]{| l |}] ) ⊢ 1(<2)◂8'(= a12◂ [ a9◂ [ ]{| l |}] )
;; rsp=1 , %1228~1(<2)◂8'(= a12◂ [ a9◂ [ ]{| l |}] ) %1227~1'(= r ) %1226~0'(= r ) 
; #24 1(<2)◂8'(= a12◂ [ a9◂ [ ]{| l |}] ) ⊢ 0(<2)◂1(<2)◂8'(= a12◂ [ a9◂ [ ]{| l |}] )
;; rsp=1 , %1229~0(<2)◂1(<2)◂8'(= a12◂ [ a9◂ [ ]{| l |}] ) %1227~1'(= r ) %1226~0'(= r ) 
; ∎ 0(<2)◂1(<2)◂8'(= a12◂ [ a9◂ [ ]{| l |}] )
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂1(<2)◂8'(= a12◂ [ a9◂ [ ]{| l |}] ) ⊢ 2'(= a3◂ [ a8◂ [ a12◂ [ a9◂ [ ]{| l |}]]] )
; .mov_ptn 0(<2)◂1(<2)◂8'(= a12◂ [ a9◂ [ ]{| l |}] ) ⊢ 2'(= a3◂ [ a8◂ [ a12◂ [ a9◂ [ ]{| l |}]]] )
	mov rax,QWORD [rsp-8+8*1]
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],1
	mov QWORD [rax+8],rdi
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,8
	jmp LB_1248
LB_1248:
	cmp BYTE [r8+6],0
	jnz LB_1239
	POP_GRM_SCC
	ret
LB_1239:
	POP_GRM_FAIL 
	ret
ETR_204:
	mov r9,0x0000_ffff_ffff_ffff
	and r9,[r13]
	call GRM_204
	ret
GRM_204:
	PUSH_GRM
	jmp LB_1251
LB_1250:
	add r14,1 
LB_1251:
	cmp r14,r9
	jge LB_1252
	JZ_LINE_SPC BYTE [r13+8+r14], LB_1250
LB_1252
	call GRM_203
	cmp BYTE [r8+6],0
	jnz LB_1255
	jmp LB_1256
LB_1255:
	jmp LB_1253
LB_1256:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) ⊢ 8'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] )
; .mov_ptn 2'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) ⊢ 8'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_1254
LB_1253:
	add rsp,0
	jmp LB_1249
LB_1254:
	jmp LB_1258
LB_1257:
	add r14,1 
LB_1258:
	cmp r14,r9
	jge LB_1259
	JZ_LINE_SPC BYTE [r13+8+r14], LB_1257
LB_1259
	call GRM_204
	cmp BYTE [r8+6],0
	jnz LB_1262
	jmp LB_1263
LB_1262:
	jmp LB_1260
LB_1263:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a2◂ [ a8◂ [ a12◂ [ a9◂ [ ]{| l |}]]] ) ⊢ 9'(= a2◂ [ a8◂ [ a12◂ [ a9◂ [ ]{| l |}]]] )
; .mov_ptn 2'(= a2◂ [ a8◂ [ a12◂ [ a9◂ [ ]{| l |}]]] ) ⊢ 9'(= a2◂ [ a8◂ [ a12◂ [ a9◂ [ ]{| l |}]]] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_1261
LB_1260:
	add rsp,8
	jmp LB_1249
LB_1261:
	mov QWORD [rsp+8*2],r14
	mov r13,QWORD [rsp+16+8*2]
	mov r14,QWORD [rsp+8*2]
	jmp LB_1264
LB_1264
;; rsp=2 , %1233~1'(= r ) %1232~0'(= r ) %1231~9'(= a2◂ [ a8◂ [ a12◂ [ a9◂ [ ]{| l |}]]] ) %1230~8'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) 
; #23 { 8'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) 9'(= a2◂ [ a8◂ [ a12◂ [ a9◂ [ ]{| l |}]]] ) } ⊢ 0(<2)◂{ 8'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) 9'(= a2◂ [ a8◂ [ a12◂ [ a9◂ [ ]{| l |}]]] ) }
;; rsp=2 , %1234~0(<2)◂{ 8'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) 9'(= a2◂ [ a8◂ [ a12◂ [ a9◂ [ ]{| l |}]]] ) } %1233~1'(= r ) %1232~0'(= r ) 
; #24 0(<2)◂{ 8'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) 9'(= a2◂ [ a8◂ [ a12◂ [ a9◂ [ ]{| l |}]]] ) } ⊢ 0(<2)◂0(<2)◂{ 8'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) 9'(= a2◂ [ a8◂ [ a12◂ [ a9◂ [ ]{| l |}]]] ) }
;; rsp=2 , %1235~0(<2)◂0(<2)◂{ 8'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) 9'(= a2◂ [ a8◂ [ a12◂ [ a9◂ [ ]{| l |}]]] ) } %1233~1'(= r ) %1232~0'(= r ) 
; ∎ 0(<2)◂0(<2)◂{ 8'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) 9'(= a2◂ [ a8◂ [ a12◂ [ a9◂ [ ]{| l |}]]] ) }
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂0(<2)◂{ 8'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) 9'(= a2◂ [ a8◂ [ a12◂ [ a9◂ [ ]{| l |}]]] ) } ⊢ 2'(= a3◂ [ a2◂ [ a8◂ [ a12◂ [ a9◂ [ ]{| l |}]]]] )
; .mov_ptn 0(<2)◂0(<2)◂{ 8'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) 9'(= a2◂ [ a8◂ [ a12◂ [ a9◂ [ ]{| l |}]]] ) } ⊢ 2'(= a3◂ [ a2◂ [ a8◂ [ a12◂ [ a9◂ [ ]{| l |}]]]] )
	ALC_RCD 2, rax
	mov r13,rax
	mov rax,QWORD [rsp-8+8*2]
	mov QWORD [r13+8+8*0],rax
	mov rax,QWORD [rsp-8+8*1]
	mov QWORD [r13+8+8*1],rax
	mov rax,r13
	mov BYTE [rax+6],0
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,16
	jmp LB_1265
LB_1265:
	cmp BYTE [r8+6],0
	jnz LB_1249
	POP_GRM_SCC
	ret
LB_1249:
	RB_GRM
	mov QWORD [rsp+8*0],r14
	mov r13,QWORD [rsp+16+8*0]
	mov r14,QWORD [rsp+8*0]
	jmp LB_1267
LB_1267
;; rsp=0 , %1237~1'(= r ) %1236~0'(= r ) 
; #22 { } ⊢ 1(<2)◂{ }
;; rsp=0 , %1238~1(<2)◂{ } %1237~1'(= r ) %1236~0'(= r ) 
; #24 1(<2)◂{ } ⊢ 0(<2)◂1(<2)◂{ }
;; rsp=0 , %1239~0(<2)◂1(<2)◂{ } %1237~1'(= r ) %1236~0'(= r ) 
; ∎ 0(<2)◂1(<2)◂{ }
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂1(<2)◂{ } ⊢ 2'(= a3◂ [ a2◂ [ a8◂ [ a12◂ [ a9◂ [ ]{| l |}]]]] )
; .mov_ptn 0(<2)◂1(<2)◂{ } ⊢ 2'(= a3◂ [ a2◂ [ a8◂ [ a12◂ [ a9◂ [ ]{| l |}]]]] )
	mov rax,unt 
	mov rax,unt_1
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	jmp LB_1268
LB_1268:
	cmp BYTE [r8+6],0
	jnz LB_1266
	POP_GRM_SCC
	ret
LB_1266:
	POP_GRM_FAIL 
	ret
ETR_205:
	mov r9,0x0000_ffff_ffff_ffff
	and r9,[r13]
	call GRM_205
	ret
GRM_205:
	PUSH_GRM
	jmp LB_1271
LB_1270:
	add r14,1 
LB_1271:
	cmp r14,r9
	jge LB_1272
	JZ_LINE_SPC BYTE [r13+8+r14], LB_1270
LB_1272
	lea rax,[r14+1]
	cmp rax,r9
	jg LB_1275
	jmp LB_1276
LB_1275:
	mov r8,unt_1
	jmp LB_1273
LB_1276:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],44
	jnz LB_1277
	jmp LB_1278
LB_1277:
	mov r8,unt_1
	jmp LB_1273
LB_1278:
	add r14,1
	jmp LB_1274
LB_1273:
	add rsp,0
	jmp LB_1269
LB_1274:
	jmp LB_1280
LB_1279:
	add r14,1 
LB_1280:
	cmp r14,r9
	jge LB_1281
	JZ_LINE_SPC BYTE [r13+8+r14], LB_1279
LB_1281
	call GRM_206
	cmp BYTE [r8+6],0
	jnz LB_1284
	jmp LB_1285
LB_1284:
	jmp LB_1282
LB_1285:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a12◂ [ a9◂ [ ]{| l |}] ) ⊢ 8'(= a12◂ [ a9◂ [ ]{| l |}] )
; .mov_ptn 2'(= a12◂ [ a9◂ [ ]{| l |}] ) ⊢ 8'(= a12◂ [ a9◂ [ ]{| l |}] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_1283
LB_1282:
	add rsp,0
	POP_GRM_FAIL
	ret
LB_1283:
	jmp LB_1287
LB_1286:
	add r14,1 
LB_1287:
	cmp r14,r9
	jge LB_1288
	JZ_LINE_SPC BYTE [r13+8+r14], LB_1286
LB_1288
	call GRM_205
	cmp BYTE [r8+6],0
	jnz LB_1291
	jmp LB_1292
LB_1291:
	jmp LB_1289
LB_1292:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a2◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) ⊢ 9'(= a2◂ [ a12◂ [ a9◂ [ ]{| l |}]] )
; .mov_ptn 2'(= a2◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) ⊢ 9'(= a2◂ [ a12◂ [ a9◂ [ ]{| l |}]] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_1290
LB_1289:
	add rsp,8
	POP_GRM_FAIL
	ret
LB_1290:
	mov QWORD [rsp+8*2],r14
	mov r13,QWORD [rsp+16+8*2]
	mov r14,QWORD [rsp+8*2]
	jmp LB_1293
LB_1293
;; rsp=2 , %1243~1'(= r ) %1242~0'(= r ) %1241~9'(= a2◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) %1240~8'(= a12◂ [ a9◂ [ ]{| l |}] ) 
; #23 { 8'(= a12◂ [ a9◂ [ ]{| l |}] ) 9'(= a2◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) } ⊢ 0(<2)◂{ 8'(= a12◂ [ a9◂ [ ]{| l |}] ) 9'(= a2◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) }
;; rsp=2 , %1244~0(<2)◂{ 8'(= a12◂ [ a9◂ [ ]{| l |}] ) 9'(= a2◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) } %1243~1'(= r ) %1242~0'(= r ) 
; #24 0(<2)◂{ 8'(= a12◂ [ a9◂ [ ]{| l |}] ) 9'(= a2◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) } ⊢ 0(<2)◂0(<2)◂{ 8'(= a12◂ [ a9◂ [ ]{| l |}] ) 9'(= a2◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) }
;; rsp=2 , %1245~0(<2)◂0(<2)◂{ 8'(= a12◂ [ a9◂ [ ]{| l |}] ) 9'(= a2◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) } %1243~1'(= r ) %1242~0'(= r ) 
; ∎ 0(<2)◂0(<2)◂{ 8'(= a12◂ [ a9◂ [ ]{| l |}] ) 9'(= a2◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) }
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂0(<2)◂{ 8'(= a12◂ [ a9◂ [ ]{| l |}] ) 9'(= a2◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) } ⊢ 2'(= a3◂ [ a2◂ [ a12◂ [ a9◂ [ ]{| l |}]]] )
; .mov_ptn 0(<2)◂0(<2)◂{ 8'(= a12◂ [ a9◂ [ ]{| l |}] ) 9'(= a2◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) } ⊢ 2'(= a3◂ [ a2◂ [ a12◂ [ a9◂ [ ]{| l |}]]] )
	ALC_RCD 2, rax
	mov r13,rax
	mov rax,QWORD [rsp-8+8*2]
	mov QWORD [r13+8+8*0],rax
	mov rax,QWORD [rsp-8+8*1]
	mov QWORD [r13+8+8*1],rax
	mov rax,r13
	mov BYTE [rax+6],0
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,16
	jmp LB_1294
LB_1294:
	cmp BYTE [r8+6],0
	jnz LB_1269
	POP_GRM_SCC
	ret
LB_1269:
	RB_GRM
	mov QWORD [rsp+8*0],r14
	mov r13,QWORD [rsp+16+8*0]
	mov r14,QWORD [rsp+8*0]
	jmp LB_1296
LB_1296
;; rsp=0 , %1247~1'(= r ) %1246~0'(= r ) 
; #22 { } ⊢ 1(<2)◂{ }
;; rsp=0 , %1248~1(<2)◂{ } %1247~1'(= r ) %1246~0'(= r ) 
; #24 1(<2)◂{ } ⊢ 0(<2)◂1(<2)◂{ }
;; rsp=0 , %1249~0(<2)◂1(<2)◂{ } %1247~1'(= r ) %1246~0'(= r ) 
; ∎ 0(<2)◂1(<2)◂{ }
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂1(<2)◂{ } ⊢ 2'(= a3◂ [ a2◂ [ a12◂ [ a9◂ [ ]{| l |}]]] )
; .mov_ptn 0(<2)◂1(<2)◂{ } ⊢ 2'(= a3◂ [ a2◂ [ a12◂ [ a9◂ [ ]{| l |}]]] )
	mov rax,unt 
	mov rax,unt_1
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	jmp LB_1297
LB_1297:
	cmp BYTE [r8+6],0
	jnz LB_1295
	POP_GRM_SCC
	ret
LB_1295:
	POP_GRM_FAIL 
	ret
ETR_206:
	mov r9,0x0000_ffff_ffff_ffff
	and r9,[r13]
	call GRM_206
	ret
GRM_206:
	PUSH_GRM
	jmp LB_1300
LB_1299:
	add r14,1 
LB_1300:
	cmp r14,r9
	jge LB_1301
	JZ_LINE_SPC BYTE [r13+8+r14], LB_1299
LB_1301
	lea rax,[r14+2]
	cmp rax,r9
	jg LB_1304
	jmp LB_1305
LB_1304:
	mov r8,unt_1
	jmp LB_1302
LB_1305:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],37
	jnz LB_1306
	cmp BYTE [rdi+1],91
	jnz LB_1306
	jmp LB_1307
LB_1306:
	mov r8,unt_1
	jmp LB_1302
LB_1307:
	add r14,2
	jmp LB_1303
LB_1302:
	add rsp,0
	jmp LB_1298
LB_1303:
	jmp LB_1309
LB_1308:
	add r14,1 
LB_1309:
	cmp r14,r9
	jge LB_1310
	JZ_LINE_SPC BYTE [r13+8+r14], LB_1308
LB_1310
	call GRM_192
	cmp BYTE [r8+6],0
	jnz LB_1313
	jmp LB_1314
LB_1313:
	jmp LB_1311
LB_1314:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a11◂ [ a9◂ [ ]] ) ⊢ 8'(= a11◂ [ a9◂ [ ]] )
; .mov_ptn 2'(= a11◂ [ a9◂ [ ]] ) ⊢ 8'(= a11◂ [ a9◂ [ ]] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_1312
LB_1311:
	add rsp,0
	jmp LB_1298
LB_1312:
	jmp LB_1316
LB_1315:
	add r14,1 
LB_1316:
	cmp r14,r9
	jge LB_1317
	JZ_LINE_SPC BYTE [r13+8+r14], LB_1315
LB_1317
	lea rax,[r14+1]
	cmp rax,r9
	jg LB_1320
	jmp LB_1321
LB_1320:
	mov r8,unt_1
	jmp LB_1318
LB_1321:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],93
	jnz LB_1322
	jmp LB_1323
LB_1322:
	mov r8,unt_1
	jmp LB_1318
LB_1323:
	add r14,1
	jmp LB_1319
LB_1318:
	add rsp,8
	jmp LB_1298
LB_1319:
	mov QWORD [rsp+8*1],r14
	mov r13,QWORD [rsp+16+8*1]
	mov r14,QWORD [rsp+8*1]
	jmp LB_1324
LB_1324
;; rsp=1 , %1252~1'(= r ) %1251~0'(= r ) %1250~8'(= a11◂ [ a9◂ [ ]] ) 
; #94 8'(= a11◂ [ a9◂ [ ]] ) ⊢ 0(<2)◂8'(= a11◂ [ a9◂ [ ]] )
;; rsp=1 , %1253~0(<2)◂8'(= a11◂ [ a9◂ [ ]] ) %1252~1'(= r ) %1251~0'(= r ) 
; #24 0(<2)◂8'(= a11◂ [ a9◂ [ ]] ) ⊢ 0(<2)◂0(<2)◂8'(= a11◂ [ a9◂ [ ]] )
;; rsp=1 , %1254~0(<2)◂0(<2)◂8'(= a11◂ [ a9◂ [ ]] ) %1252~1'(= r ) %1251~0'(= r ) 
; ∎ 0(<2)◂0(<2)◂8'(= a11◂ [ a9◂ [ ]] )
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂0(<2)◂8'(= a11◂ [ a9◂ [ ]] ) ⊢ 2'(= a3◂ [ a12◂ [ a9◂ [ ]{| l |}]] )
; .mov_ptn 0(<2)◂0(<2)◂8'(= a11◂ [ a9◂ [ ]] ) ⊢ 2'(= a3◂ [ a12◂ [ a9◂ [ ]{| l |}]] )
	mov rax,QWORD [rsp-8+8*1]
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,8
	jmp LB_1325
LB_1325:
	cmp BYTE [r8+6],0
	jnz LB_1298
	POP_GRM_SCC
	ret
LB_1298:
	RB_GRM
	lea rax,[r14+1]
	cmp rax,r9
	jg LB_1329
	jmp LB_1330
LB_1329:
	mov r8,unt_1
	jmp LB_1327
LB_1330:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],37
	jnz LB_1331
	jmp LB_1332
LB_1331:
	mov r8,unt_1
	jmp LB_1327
LB_1332:
	add r14,1
	jmp LB_1328
LB_1327:
	add rsp,0
	jmp LB_1326
LB_1328:
	call GRM_79
	cmp BYTE [r8+6],0
	jnz LB_1335
	jmp LB_1336
LB_1335:
	jmp LB_1333
LB_1336:
	sub rsp,8
; .mov_ptn2 2'(= {| l |} ) ⊢ 8'(= {| l |} )
; .mov_ptn 2'(= {| l |} ) ⊢ 8'(= {| l |} )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_1334
LB_1333:
	add rsp,0
	POP_GRM_FAIL
	ret
LB_1334:
	mov QWORD [rsp+8*1],r14
	mov r13,QWORD [rsp+16+8*1]
	mov r14,QWORD [rsp+8*1]
	jmp LB_1337
LB_1337
;; rsp=1 , %1257~1'(= r ) %1256~0'(= r ) %1255~8'(= {| l |} ) 
; #93 8'(= {| l |} ) ⊢ 1(<2)◂8'(= {| l |} )
;; rsp=1 , %1258~1(<2)◂8'(= {| l |} ) %1257~1'(= r ) %1256~0'(= r ) 
; #24 1(<2)◂8'(= {| l |} ) ⊢ 0(<2)◂1(<2)◂8'(= {| l |} )
;; rsp=1 , %1259~0(<2)◂1(<2)◂8'(= {| l |} ) %1257~1'(= r ) %1256~0'(= r ) 
; ∎ 0(<2)◂1(<2)◂8'(= {| l |} )
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂1(<2)◂8'(= {| l |} ) ⊢ 2'(= a3◂ [ a12◂ [ a9◂ [ ]{| l |}]] )
; .mov_ptn 0(<2)◂1(<2)◂8'(= {| l |} ) ⊢ 2'(= a3◂ [ a12◂ [ a9◂ [ ]{| l |}]] )
	mov rax,QWORD [rsp-8+8*1]
	mov BYTE [rax+6],1
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,8
	jmp LB_1338
LB_1338:
	cmp BYTE [r8+6],0
	jnz LB_1326
	POP_GRM_SCC
	ret
LB_1326:
	RB_GRM
	jmp LB_1341
LB_1340:
	add r14,1 
LB_1341:
	cmp r14,r9
	jge LB_1342
	JZ_LINE_SPC BYTE [r13+8+r14], LB_1340
LB_1342
	call GRM_79
	cmp BYTE [r8+6],0
	jnz LB_1345
	jmp LB_1346
LB_1345:
	jmp LB_1343
LB_1346:
	sub rsp,8
; .mov_ptn2 2'(= {| l |} ) ⊢ 8'(= {| l |} )
; .mov_ptn 2'(= {| l |} ) ⊢ 8'(= {| l |} )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_1344
LB_1343:
	add rsp,0
	jmp LB_1339
LB_1344:
	mov QWORD [rsp+8*1],r14
	mov r13,QWORD [rsp+16+8*1]
	mov r14,QWORD [rsp+8*1]
	jmp LB_1347
LB_1347
;; rsp=1 , %1262~1'(= r ) %1261~0'(= r ) %1260~8'(= {| l |} ) 
; #93 8'(= {| l |} ) ⊢ 1(<2)◂8'(= {| l |} )
;; rsp=1 , %1263~1(<2)◂8'(= {| l |} ) %1262~1'(= r ) %1261~0'(= r ) 
; #24 1(<2)◂8'(= {| l |} ) ⊢ 0(<2)◂1(<2)◂8'(= {| l |} )
;; rsp=1 , %1264~0(<2)◂1(<2)◂8'(= {| l |} ) %1262~1'(= r ) %1261~0'(= r ) 
; ∎ 0(<2)◂1(<2)◂8'(= {| l |} )
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂1(<2)◂8'(= {| l |} ) ⊢ 2'(= a3◂ [ a12◂ [ a9◂ [ ]{| l |}]] )
; .mov_ptn 0(<2)◂1(<2)◂8'(= {| l |} ) ⊢ 2'(= a3◂ [ a12◂ [ a9◂ [ ]{| l |}]] )
	mov rax,QWORD [rsp-8+8*1]
	mov BYTE [rax+6],1
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,8
	jmp LB_1348
LB_1348:
	cmp BYTE [r8+6],0
	jnz LB_1339
	POP_GRM_SCC
	ret
LB_1339:
	POP_GRM_FAIL 
	ret
ETR_207:
	mov r9,0x0000_ffff_ffff_ffff
	and r9,[r13]
	call GRM_207
	ret
GRM_207:
	PUSH_GRM
	jmp LB_1351
LB_1350:
	add r14,1 
LB_1351:
	cmp r14,r9
	jge LB_1352
	JZ_LINE_SPC BYTE [r13+8+r14], LB_1350
LB_1352
	lea rax,[r14+1]
	cmp rax,r9
	jg LB_1355
	jmp LB_1356
LB_1355:
	mov r8,unt_1
	jmp LB_1353
LB_1356:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],123
	jnz LB_1357
	jmp LB_1358
LB_1357:
	mov r8,unt_1
	jmp LB_1353
LB_1358:
	add r14,1
	jmp LB_1354
LB_1353:
	add rsp,0
	jmp LB_1349
LB_1354:
	jmp LB_1360
LB_1359:
	add r14,1 
LB_1360:
	cmp r14,r9
	jge LB_1361
	JZ_LINE_SPC BYTE [r13+8+r14], LB_1359
LB_1361
	call GRM_208
	cmp BYTE [r8+6],0
	jnz LB_1364
	jmp LB_1365
LB_1364:
	jmp LB_1362
LB_1365:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a2◂ [ a8◂ [ a13◂ [ {| l |}]]] ) ⊢ 8'(= a2◂ [ a8◂ [ a13◂ [ {| l |}]]] )
; .mov_ptn 2'(= a2◂ [ a8◂ [ a13◂ [ {| l |}]]] ) ⊢ 8'(= a2◂ [ a8◂ [ a13◂ [ {| l |}]]] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_1363
LB_1362:
	add rsp,0
	jmp LB_1349
LB_1363:
	jmp LB_1367
LB_1366:
	add r14,1 
LB_1367:
	cmp r14,r9
	jge LB_1368
	JZ_LINE_SPC BYTE [r13+8+r14], LB_1366
LB_1368
	lea rax,[r14+1]
	cmp rax,r9
	jg LB_1371
	jmp LB_1372
LB_1371:
	mov r8,unt_1
	jmp LB_1369
LB_1372:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],125
	jnz LB_1373
	jmp LB_1374
LB_1373:
	mov r8,unt_1
	jmp LB_1369
LB_1374:
	add r14,1
	jmp LB_1370
LB_1369:
	add rsp,8
	jmp LB_1349
LB_1370:
	mov QWORD [rsp+8*1],r14
	mov r13,QWORD [rsp+16+8*1]
	mov r14,QWORD [rsp+8*1]
	jmp LB_1375
LB_1375
;; rsp=1 , %1267~1'(= r ) %1266~0'(= r ) %1265~8'(= a2◂ [ a8◂ [ a13◂ [ {| l |}]]] ) 
; #81 8'(= a2◂ [ a8◂ [ a13◂ [ {| l |}]]] ) ⊢ 0(<2)◂8'(= a2◂ [ a8◂ [ a13◂ [ {| l |}]]] )
;; rsp=1 , %1268~0(<2)◂8'(= a2◂ [ a8◂ [ a13◂ [ {| l |}]]] ) %1267~1'(= r ) %1266~0'(= r ) 
; #24 0(<2)◂8'(= a2◂ [ a8◂ [ a13◂ [ {| l |}]]] ) ⊢ 0(<2)◂0(<2)◂8'(= a2◂ [ a8◂ [ a13◂ [ {| l |}]]] )
;; rsp=1 , %1269~0(<2)◂0(<2)◂8'(= a2◂ [ a8◂ [ a13◂ [ {| l |}]]] ) %1267~1'(= r ) %1266~0'(= r ) 
; ∎ 0(<2)◂0(<2)◂8'(= a2◂ [ a8◂ [ a13◂ [ {| l |}]]] )
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂0(<2)◂8'(= a2◂ [ a8◂ [ a13◂ [ {| l |}]]] ) ⊢ 2'(= a3◂ [ a8◂ [ a13◂ [ {| l |}]]] )
; .mov_ptn 0(<2)◂0(<2)◂8'(= a2◂ [ a8◂ [ a13◂ [ {| l |}]]] ) ⊢ 2'(= a3◂ [ a8◂ [ a13◂ [ {| l |}]]] )
	mov rax,QWORD [rsp-8+8*1]
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,8
	jmp LB_1376
LB_1376:
	cmp BYTE [r8+6],0
	jnz LB_1349
	POP_GRM_SCC
	ret
LB_1349:
	RB_GRM
	jmp LB_1379
LB_1378:
	add r14,1 
LB_1379:
	cmp r14,r9
	jge LB_1380
	JZ_LINE_SPC BYTE [r13+8+r14], LB_1378
LB_1380
	call GRM_211
	cmp BYTE [r8+6],0
	jnz LB_1383
	jmp LB_1384
LB_1383:
	jmp LB_1381
LB_1384:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a13◂ [ {| l |}] ) ⊢ 8'(= a13◂ [ {| l |}] )
; .mov_ptn 2'(= a13◂ [ {| l |}] ) ⊢ 8'(= a13◂ [ {| l |}] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_1382
LB_1381:
	add rsp,0
	jmp LB_1377
LB_1382:
	mov QWORD [rsp+8*1],r14
	mov r13,QWORD [rsp+16+8*1]
	mov r14,QWORD [rsp+8*1]
	jmp LB_1385
LB_1385
;; rsp=1 , %1272~1'(= r ) %1271~0'(= r ) %1270~8'(= a13◂ [ {| l |}] ) 
; #80 8'(= a13◂ [ {| l |}] ) ⊢ 1(<2)◂8'(= a13◂ [ {| l |}] )
;; rsp=1 , %1273~1(<2)◂8'(= a13◂ [ {| l |}] ) %1272~1'(= r ) %1271~0'(= r ) 
; #24 1(<2)◂8'(= a13◂ [ {| l |}] ) ⊢ 0(<2)◂1(<2)◂8'(= a13◂ [ {| l |}] )
;; rsp=1 , %1274~0(<2)◂1(<2)◂8'(= a13◂ [ {| l |}] ) %1272~1'(= r ) %1271~0'(= r ) 
; ∎ 0(<2)◂1(<2)◂8'(= a13◂ [ {| l |}] )
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂1(<2)◂8'(= a13◂ [ {| l |}] ) ⊢ 2'(= a3◂ [ a8◂ [ a13◂ [ {| l |}]]] )
; .mov_ptn 0(<2)◂1(<2)◂8'(= a13◂ [ {| l |}] ) ⊢ 2'(= a3◂ [ a8◂ [ a13◂ [ {| l |}]]] )
	mov rax,QWORD [rsp-8+8*1]
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],1
	mov QWORD [rax+8],rdi
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,8
	jmp LB_1386
LB_1386:
	cmp BYTE [r8+6],0
	jnz LB_1377
	POP_GRM_SCC
	ret
LB_1377:
	POP_GRM_FAIL 
	ret
ETR_208:
	mov r9,0x0000_ffff_ffff_ffff
	and r9,[r13]
	call GRM_208
	ret
GRM_208:
	PUSH_GRM
	jmp LB_1389
LB_1388:
	add r14,1 
LB_1389:
	cmp r14,r9
	jge LB_1390
	JZ_LINE_SPC BYTE [r13+8+r14], LB_1388
LB_1390
	call GRM_207
	cmp BYTE [r8+6],0
	jnz LB_1393
	jmp LB_1394
LB_1393:
	jmp LB_1391
LB_1394:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a8◂ [ a13◂ [ {| l |}]] ) ⊢ 8'(= a8◂ [ a13◂ [ {| l |}]] )
; .mov_ptn 2'(= a8◂ [ a13◂ [ {| l |}]] ) ⊢ 8'(= a8◂ [ a13◂ [ {| l |}]] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_1392
LB_1391:
	add rsp,0
	jmp LB_1387
LB_1392:
	jmp LB_1396
LB_1395:
	add r14,1 
LB_1396:
	cmp r14,r9
	jge LB_1397
	JZ_LINE_SPC BYTE [r13+8+r14], LB_1395
LB_1397
	call GRM_208
	cmp BYTE [r8+6],0
	jnz LB_1400
	jmp LB_1401
LB_1400:
	jmp LB_1398
LB_1401:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a2◂ [ a8◂ [ a13◂ [ {| l |}]]] ) ⊢ 9'(= a2◂ [ a8◂ [ a13◂ [ {| l |}]]] )
; .mov_ptn 2'(= a2◂ [ a8◂ [ a13◂ [ {| l |}]]] ) ⊢ 9'(= a2◂ [ a8◂ [ a13◂ [ {| l |}]]] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_1399
LB_1398:
	add rsp,8
	jmp LB_1387
LB_1399:
	mov QWORD [rsp+8*2],r14
	mov r13,QWORD [rsp+16+8*2]
	mov r14,QWORD [rsp+8*2]
	jmp LB_1402
LB_1402
;; rsp=2 , %1278~1'(= r ) %1277~0'(= r ) %1276~9'(= a2◂ [ a8◂ [ a13◂ [ {| l |}]]] ) %1275~8'(= a8◂ [ a13◂ [ {| l |}]] ) 
; #23 { 8'(= a8◂ [ a13◂ [ {| l |}]] ) 9'(= a2◂ [ a8◂ [ a13◂ [ {| l |}]]] ) } ⊢ 0(<2)◂{ 8'(= a8◂ [ a13◂ [ {| l |}]] ) 9'(= a2◂ [ a8◂ [ a13◂ [ {| l |}]]] ) }
;; rsp=2 , %1279~0(<2)◂{ 8'(= a8◂ [ a13◂ [ {| l |}]] ) 9'(= a2◂ [ a8◂ [ a13◂ [ {| l |}]]] ) } %1278~1'(= r ) %1277~0'(= r ) 
; #24 0(<2)◂{ 8'(= a8◂ [ a13◂ [ {| l |}]] ) 9'(= a2◂ [ a8◂ [ a13◂ [ {| l |}]]] ) } ⊢ 0(<2)◂0(<2)◂{ 8'(= a8◂ [ a13◂ [ {| l |}]] ) 9'(= a2◂ [ a8◂ [ a13◂ [ {| l |}]]] ) }
;; rsp=2 , %1280~0(<2)◂0(<2)◂{ 8'(= a8◂ [ a13◂ [ {| l |}]] ) 9'(= a2◂ [ a8◂ [ a13◂ [ {| l |}]]] ) } %1278~1'(= r ) %1277~0'(= r ) 
; ∎ 0(<2)◂0(<2)◂{ 8'(= a8◂ [ a13◂ [ {| l |}]] ) 9'(= a2◂ [ a8◂ [ a13◂ [ {| l |}]]] ) }
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂0(<2)◂{ 8'(= a8◂ [ a13◂ [ {| l |}]] ) 9'(= a2◂ [ a8◂ [ a13◂ [ {| l |}]]] ) } ⊢ 2'(= a3◂ [ a2◂ [ a8◂ [ a13◂ [ {| l |}]]]] )
; .mov_ptn 0(<2)◂0(<2)◂{ 8'(= a8◂ [ a13◂ [ {| l |}]] ) 9'(= a2◂ [ a8◂ [ a13◂ [ {| l |}]]] ) } ⊢ 2'(= a3◂ [ a2◂ [ a8◂ [ a13◂ [ {| l |}]]]] )
	ALC_RCD 2, rax
	mov r13,rax
	mov rax,QWORD [rsp-8+8*2]
	mov QWORD [r13+8+8*0],rax
	mov rax,QWORD [rsp-8+8*1]
	mov QWORD [r13+8+8*1],rax
	mov rax,r13
	mov BYTE [rax+6],0
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,16
	jmp LB_1403
LB_1403:
	cmp BYTE [r8+6],0
	jnz LB_1387
	POP_GRM_SCC
	ret
LB_1387:
	RB_GRM
	mov QWORD [rsp+8*0],r14
	mov r13,QWORD [rsp+16+8*0]
	mov r14,QWORD [rsp+8*0]
	jmp LB_1405
LB_1405
;; rsp=0 , %1282~1'(= r ) %1281~0'(= r ) 
; #22 { } ⊢ 1(<2)◂{ }
;; rsp=0 , %1283~1(<2)◂{ } %1282~1'(= r ) %1281~0'(= r ) 
; #24 1(<2)◂{ } ⊢ 0(<2)◂1(<2)◂{ }
;; rsp=0 , %1284~0(<2)◂1(<2)◂{ } %1282~1'(= r ) %1281~0'(= r ) 
; ∎ 0(<2)◂1(<2)◂{ }
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂1(<2)◂{ } ⊢ 2'(= a3◂ [ a2◂ [ a8◂ [ a13◂ [ {| l |}]]]] )
; .mov_ptn 0(<2)◂1(<2)◂{ } ⊢ 2'(= a3◂ [ a2◂ [ a8◂ [ a13◂ [ {| l |}]]]] )
	mov rax,unt 
	mov rax,unt_1
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	jmp LB_1406
LB_1406:
	cmp BYTE [r8+6],0
	jnz LB_1404
	POP_GRM_SCC
	ret
LB_1404:
	POP_GRM_FAIL 
	ret
ETR_209:
	mov r9,0x0000_ffff_ffff_ffff
	and r9,[r13]
	call GRM_209
	ret
GRM_209:
	PUSH_GRM
	jmp LB_1409
LB_1408:
	add r14,1 
LB_1409:
	cmp r14,r9
	jge LB_1410
	JZ_LINE_SPC BYTE [r13+8+r14], LB_1408
LB_1410
	lea rax,[r14+1]
	cmp rax,r9
	jg LB_1413
	jmp LB_1414
LB_1413:
	mov r8,unt_1
	jmp LB_1411
LB_1414:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],44
	jnz LB_1415
	jmp LB_1416
LB_1415:
	mov r8,unt_1
	jmp LB_1411
LB_1416:
	add r14,1
	jmp LB_1412
LB_1411:
	add rsp,0
	jmp LB_1407
LB_1412:
	jmp LB_1418
LB_1417:
	add r14,1 
LB_1418:
	cmp r14,r9
	jge LB_1419
	JZ_LINE_SPC BYTE [r13+8+r14], LB_1417
LB_1419
	call GRM_207
	cmp BYTE [r8+6],0
	jnz LB_1422
	jmp LB_1423
LB_1422:
	jmp LB_1420
LB_1423:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a8◂ [ a13◂ [ {| l |}]] ) ⊢ 8'(= a8◂ [ a13◂ [ {| l |}]] )
; .mov_ptn 2'(= a8◂ [ a13◂ [ {| l |}]] ) ⊢ 8'(= a8◂ [ a13◂ [ {| l |}]] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_1421
LB_1420:
	add rsp,0
	POP_GRM_FAIL
	ret
LB_1421:
	jmp LB_1425
LB_1424:
	add r14,1 
LB_1425:
	cmp r14,r9
	jge LB_1426
	JZ_LINE_SPC BYTE [r13+8+r14], LB_1424
LB_1426
	call GRM_209
	cmp BYTE [r8+6],0
	jnz LB_1429
	jmp LB_1430
LB_1429:
	jmp LB_1427
LB_1430:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a2◂ [ a8◂ [ a13◂ [ {| l |}]]] ) ⊢ 9'(= a2◂ [ a8◂ [ a13◂ [ {| l |}]]] )
; .mov_ptn 2'(= a2◂ [ a8◂ [ a13◂ [ {| l |}]]] ) ⊢ 9'(= a2◂ [ a8◂ [ a13◂ [ {| l |}]]] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_1428
LB_1427:
	add rsp,8
	POP_GRM_FAIL
	ret
LB_1428:
	mov QWORD [rsp+8*2],r14
	mov r13,QWORD [rsp+16+8*2]
	mov r14,QWORD [rsp+8*2]
	jmp LB_1431
LB_1431
;; rsp=2 , %1288~1'(= r ) %1287~0'(= r ) %1286~9'(= a2◂ [ a8◂ [ a13◂ [ {| l |}]]] ) %1285~8'(= a8◂ [ a13◂ [ {| l |}]] ) 
; #23 { 8'(= a8◂ [ a13◂ [ {| l |}]] ) 9'(= a2◂ [ a8◂ [ a13◂ [ {| l |}]]] ) } ⊢ 0(<2)◂{ 8'(= a8◂ [ a13◂ [ {| l |}]] ) 9'(= a2◂ [ a8◂ [ a13◂ [ {| l |}]]] ) }
;; rsp=2 , %1289~0(<2)◂{ 8'(= a8◂ [ a13◂ [ {| l |}]] ) 9'(= a2◂ [ a8◂ [ a13◂ [ {| l |}]]] ) } %1288~1'(= r ) %1287~0'(= r ) 
; #24 0(<2)◂{ 8'(= a8◂ [ a13◂ [ {| l |}]] ) 9'(= a2◂ [ a8◂ [ a13◂ [ {| l |}]]] ) } ⊢ 0(<2)◂0(<2)◂{ 8'(= a8◂ [ a13◂ [ {| l |}]] ) 9'(= a2◂ [ a8◂ [ a13◂ [ {| l |}]]] ) }
;; rsp=2 , %1290~0(<2)◂0(<2)◂{ 8'(= a8◂ [ a13◂ [ {| l |}]] ) 9'(= a2◂ [ a8◂ [ a13◂ [ {| l |}]]] ) } %1288~1'(= r ) %1287~0'(= r ) 
; ∎ 0(<2)◂0(<2)◂{ 8'(= a8◂ [ a13◂ [ {| l |}]] ) 9'(= a2◂ [ a8◂ [ a13◂ [ {| l |}]]] ) }
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂0(<2)◂{ 8'(= a8◂ [ a13◂ [ {| l |}]] ) 9'(= a2◂ [ a8◂ [ a13◂ [ {| l |}]]] ) } ⊢ 2'(= a3◂ [ a2◂ [ a8◂ [ a13◂ [ {| l |}]]]] )
; .mov_ptn 0(<2)◂0(<2)◂{ 8'(= a8◂ [ a13◂ [ {| l |}]] ) 9'(= a2◂ [ a8◂ [ a13◂ [ {| l |}]]] ) } ⊢ 2'(= a3◂ [ a2◂ [ a8◂ [ a13◂ [ {| l |}]]]] )
	ALC_RCD 2, rax
	mov r13,rax
	mov rax,QWORD [rsp-8+8*2]
	mov QWORD [r13+8+8*0],rax
	mov rax,QWORD [rsp-8+8*1]
	mov QWORD [r13+8+8*1],rax
	mov rax,r13
	mov BYTE [rax+6],0
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,16
	jmp LB_1432
LB_1432:
	cmp BYTE [r8+6],0
	jnz LB_1407
	POP_GRM_SCC
	ret
LB_1407:
	RB_GRM
	mov QWORD [rsp+8*0],r14
	mov r13,QWORD [rsp+16+8*0]
	mov r14,QWORD [rsp+8*0]
	jmp LB_1434
LB_1434
;; rsp=0 , %1292~1'(= r ) %1291~0'(= r ) 
; #22 { } ⊢ 1(<2)◂{ }
;; rsp=0 , %1293~1(<2)◂{ } %1292~1'(= r ) %1291~0'(= r ) 
; #24 1(<2)◂{ } ⊢ 0(<2)◂1(<2)◂{ }
;; rsp=0 , %1294~0(<2)◂1(<2)◂{ } %1292~1'(= r ) %1291~0'(= r ) 
; ∎ 0(<2)◂1(<2)◂{ }
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂1(<2)◂{ } ⊢ 2'(= a3◂ [ a2◂ [ a8◂ [ a13◂ [ {| l |}]]]] )
; .mov_ptn 0(<2)◂1(<2)◂{ } ⊢ 2'(= a3◂ [ a2◂ [ a8◂ [ a13◂ [ {| l |}]]]] )
	mov rax,unt 
	mov rax,unt_1
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	jmp LB_1435
LB_1435:
	cmp BYTE [r8+6],0
	jnz LB_1433
	POP_GRM_SCC
	ret
LB_1433:
	POP_GRM_FAIL 
	ret
ETR_210:
	mov r9,0x0000_ffff_ffff_ffff
	and r9,[r13]
	call GRM_210
	ret
GRM_210:
	PUSH_GRM
	jmp LB_1438
LB_1437:
	add r14,1 
LB_1438:
	cmp r14,r9
	jge LB_1439
	JZ_LINE_SPC BYTE [r13+8+r14], LB_1437
LB_1439
	lea rax,[r14+1]
	cmp rax,r9
	jg LB_1442
	jmp LB_1443
LB_1442:
	mov r8,unt_1
	jmp LB_1440
LB_1443:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],44
	jnz LB_1444
	jmp LB_1445
LB_1444:
	mov r8,unt_1
	jmp LB_1440
LB_1445:
	add r14,1
	jmp LB_1441
LB_1440:
	add rsp,0
	jmp LB_1436
LB_1441:
	jmp LB_1447
LB_1446:
	add r14,1 
LB_1447:
	cmp r14,r9
	jge LB_1448
	JZ_LINE_SPC BYTE [r13+8+r14], LB_1446
LB_1448
	call GRM_211
	cmp BYTE [r8+6],0
	jnz LB_1451
	jmp LB_1452
LB_1451:
	jmp LB_1449
LB_1452:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a13◂ [ {| l |}] ) ⊢ 8'(= a13◂ [ {| l |}] )
; .mov_ptn 2'(= a13◂ [ {| l |}] ) ⊢ 8'(= a13◂ [ {| l |}] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_1450
LB_1449:
	add rsp,0
	POP_GRM_FAIL
	ret
LB_1450:
	jmp LB_1454
LB_1453:
	add r14,1 
LB_1454:
	cmp r14,r9
	jge LB_1455
	JZ_LINE_SPC BYTE [r13+8+r14], LB_1453
LB_1455
	call GRM_210
	cmp BYTE [r8+6],0
	jnz LB_1458
	jmp LB_1459
LB_1458:
	jmp LB_1456
LB_1459:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a2◂ [ a13◂ [ {| l |}]] ) ⊢ 9'(= a2◂ [ a13◂ [ {| l |}]] )
; .mov_ptn 2'(= a2◂ [ a13◂ [ {| l |}]] ) ⊢ 9'(= a2◂ [ a13◂ [ {| l |}]] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_1457
LB_1456:
	add rsp,8
	POP_GRM_FAIL
	ret
LB_1457:
	mov QWORD [rsp+8*2],r14
	mov r13,QWORD [rsp+16+8*2]
	mov r14,QWORD [rsp+8*2]
	jmp LB_1460
LB_1460
;; rsp=2 , %1298~1'(= r ) %1297~0'(= r ) %1296~9'(= a2◂ [ a13◂ [ {| l |}]] ) %1295~8'(= a13◂ [ {| l |}] ) 
; #23 { 8'(= a13◂ [ {| l |}] ) 9'(= a2◂ [ a13◂ [ {| l |}]] ) } ⊢ 0(<2)◂{ 8'(= a13◂ [ {| l |}] ) 9'(= a2◂ [ a13◂ [ {| l |}]] ) }
;; rsp=2 , %1299~0(<2)◂{ 8'(= a13◂ [ {| l |}] ) 9'(= a2◂ [ a13◂ [ {| l |}]] ) } %1298~1'(= r ) %1297~0'(= r ) 
; #24 0(<2)◂{ 8'(= a13◂ [ {| l |}] ) 9'(= a2◂ [ a13◂ [ {| l |}]] ) } ⊢ 0(<2)◂0(<2)◂{ 8'(= a13◂ [ {| l |}] ) 9'(= a2◂ [ a13◂ [ {| l |}]] ) }
;; rsp=2 , %1300~0(<2)◂0(<2)◂{ 8'(= a13◂ [ {| l |}] ) 9'(= a2◂ [ a13◂ [ {| l |}]] ) } %1298~1'(= r ) %1297~0'(= r ) 
; ∎ 0(<2)◂0(<2)◂{ 8'(= a13◂ [ {| l |}] ) 9'(= a2◂ [ a13◂ [ {| l |}]] ) }
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂0(<2)◂{ 8'(= a13◂ [ {| l |}] ) 9'(= a2◂ [ a13◂ [ {| l |}]] ) } ⊢ 2'(= a3◂ [ a2◂ [ a13◂ [ {| l |}]]] )
; .mov_ptn 0(<2)◂0(<2)◂{ 8'(= a13◂ [ {| l |}] ) 9'(= a2◂ [ a13◂ [ {| l |}]] ) } ⊢ 2'(= a3◂ [ a2◂ [ a13◂ [ {| l |}]]] )
	ALC_RCD 2, rax
	mov r13,rax
	mov rax,QWORD [rsp-8+8*2]
	mov QWORD [r13+8+8*0],rax
	mov rax,QWORD [rsp-8+8*1]
	mov QWORD [r13+8+8*1],rax
	mov rax,r13
	mov BYTE [rax+6],0
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,16
	jmp LB_1461
LB_1461:
	cmp BYTE [r8+6],0
	jnz LB_1436
	POP_GRM_SCC
	ret
LB_1436:
	RB_GRM
	mov QWORD [rsp+8*0],r14
	mov r13,QWORD [rsp+16+8*0]
	mov r14,QWORD [rsp+8*0]
	jmp LB_1463
LB_1463
;; rsp=0 , %1302~1'(= r ) %1301~0'(= r ) 
; #22 { } ⊢ 1(<2)◂{ }
;; rsp=0 , %1303~1(<2)◂{ } %1302~1'(= r ) %1301~0'(= r ) 
; #24 1(<2)◂{ } ⊢ 0(<2)◂1(<2)◂{ }
;; rsp=0 , %1304~0(<2)◂1(<2)◂{ } %1302~1'(= r ) %1301~0'(= r ) 
; ∎ 0(<2)◂1(<2)◂{ }
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂1(<2)◂{ } ⊢ 2'(= a3◂ [ a2◂ [ a13◂ [ {| l |}]]] )
; .mov_ptn 0(<2)◂1(<2)◂{ } ⊢ 2'(= a3◂ [ a2◂ [ a13◂ [ {| l |}]]] )
	mov rax,unt 
	mov rax,unt_1
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	jmp LB_1464
LB_1464:
	cmp BYTE [r8+6],0
	jnz LB_1462
	POP_GRM_SCC
	ret
LB_1462:
	POP_GRM_FAIL 
	ret
ETR_211:
	mov r9,0x0000_ffff_ffff_ffff
	and r9,[r13]
	call GRM_211
	ret
GRM_211:
	PUSH_GRM
	lea rax,[r14+1]
	cmp rax,r9
	jg LB_1468
	jmp LB_1469
LB_1468:
	mov r8,unt_1
	jmp LB_1466
LB_1469:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],37
	jnz LB_1470
	jmp LB_1471
LB_1470:
	mov r8,unt_1
	jmp LB_1466
LB_1471:
	add r14,1
	jmp LB_1467
LB_1466:
	add rsp,0
	jmp LB_1465
LB_1467:
	call GRM_76
	cmp BYTE [r8+6],0
	jnz LB_1474
	jmp LB_1475
LB_1474:
	jmp LB_1472
LB_1475:
	sub rsp,8
; .mov_ptn2 2'(= {| l |} ) ⊢ 8'(= {| l |} )
; .mov_ptn 2'(= {| l |} ) ⊢ 8'(= {| l |} )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_1473
LB_1472:
	add rsp,0
	POP_GRM_FAIL
	ret
LB_1473:
	mov QWORD [rsp+8*1],r14
	mov r13,QWORD [rsp+16+8*1]
	mov r14,QWORD [rsp+8*1]
	jmp LB_1476
LB_1476
;; rsp=1 , %1307~1'(= r ) %1306~0'(= r ) %1305~8'(= {| l |} ) 
; #91 8'(= {| l |} ) ⊢ 1(<2)◂8'(= {| l |} )
;; rsp=1 , %1308~1(<2)◂8'(= {| l |} ) %1307~1'(= r ) %1306~0'(= r ) 
; #24 1(<2)◂8'(= {| l |} ) ⊢ 0(<2)◂1(<2)◂8'(= {| l |} )
;; rsp=1 , %1309~0(<2)◂1(<2)◂8'(= {| l |} ) %1307~1'(= r ) %1306~0'(= r ) 
; ∎ 0(<2)◂1(<2)◂8'(= {| l |} )
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂1(<2)◂8'(= {| l |} ) ⊢ 2'(= a3◂ [ a13◂ [ {| l |}]] )
; .mov_ptn 0(<2)◂1(<2)◂8'(= {| l |} ) ⊢ 2'(= a3◂ [ a13◂ [ {| l |}]] )
	mov rax,QWORD [rsp-8+8*1]
	mov BYTE [rax+6],1
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,8
	jmp LB_1477
LB_1477:
	cmp BYTE [r8+6],0
	jnz LB_1465
	POP_GRM_SCC
	ret
LB_1465:
	RB_GRM
	call GRM_76
	cmp BYTE [r8+6],0
	jnz LB_1481
	jmp LB_1482
LB_1481:
	jmp LB_1479
LB_1482:
	sub rsp,8
; .mov_ptn2 2'(= {| l |} ) ⊢ 8'(= {| l |} )
; .mov_ptn 2'(= {| l |} ) ⊢ 8'(= {| l |} )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_1480
LB_1479:
	add rsp,0
	jmp LB_1478
LB_1480:
	mov QWORD [rsp+8*1],r14
	mov r13,QWORD [rsp+16+8*1]
	mov r14,QWORD [rsp+8*1]
	jmp LB_1483
LB_1483
;; rsp=1 , %1312~1'(= r ) %1311~0'(= r ) %1310~8'(= {| l |} ) 
; #91 8'(= {| l |} ) ⊢ 1(<2)◂8'(= {| l |} )
;; rsp=1 , %1313~1(<2)◂8'(= {| l |} ) %1312~1'(= r ) %1311~0'(= r ) 
; #24 1(<2)◂8'(= {| l |} ) ⊢ 0(<2)◂1(<2)◂8'(= {| l |} )
;; rsp=1 , %1314~0(<2)◂1(<2)◂8'(= {| l |} ) %1312~1'(= r ) %1311~0'(= r ) 
; ∎ 0(<2)◂1(<2)◂8'(= {| l |} )
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂1(<2)◂8'(= {| l |} ) ⊢ 2'(= a3◂ [ a13◂ [ {| l |}]] )
; .mov_ptn 0(<2)◂1(<2)◂8'(= {| l |} ) ⊢ 2'(= a3◂ [ a13◂ [ {| l |}]] )
	mov rax,QWORD [rsp-8+8*1]
	mov BYTE [rax+6],1
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,8
	jmp LB_1484
LB_1484:
	cmp BYTE [r8+6],0
	jnz LB_1478
	POP_GRM_SCC
	ret
LB_1478:
	RB_GRM
	lea rax,[r14+1]
	cmp rax,r9
	jg LB_1488
	jmp LB_1489
LB_1488:
	mov r8,unt_1
	jmp LB_1486
LB_1489:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],95
	jnz LB_1490
	jmp LB_1491
LB_1490:
	mov r8,unt_1
	jmp LB_1486
LB_1491:
	add r14,1
	jmp LB_1487
LB_1486:
	add rsp,0
	jmp LB_1485
LB_1487:
	mov QWORD [rsp+8*0],r14
	mov r13,QWORD [rsp+16+8*0]
	mov r14,QWORD [rsp+8*0]
	jmp LB_1492
LB_1492
;; rsp=0 , %1316~1'(= r ) %1315~0'(= r ) 
; #25 { } ⊢ 1(<2)◂{ }
;; rsp=0 , %1317~1(<2)◂{ } %1316~1'(= r ) %1315~0'(= r ) 
; #92 1(<2)◂{ } ⊢ 0(<2)◂1(<2)◂{ }
;; rsp=0 , %1318~0(<2)◂1(<2)◂{ } %1316~1'(= r ) %1315~0'(= r ) 
; #24 0(<2)◂1(<2)◂{ } ⊢ 0(<2)◂0(<2)◂1(<2)◂{ }
;; rsp=0 , %1319~0(<2)◂0(<2)◂1(<2)◂{ } %1316~1'(= r ) %1315~0'(= r ) 
; ∎ 0(<2)◂0(<2)◂1(<2)◂{ }
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂0(<2)◂1(<2)◂{ } ⊢ 2'(= a3◂ [ a13◂ [ {| l |}]] )
; .mov_ptn 0(<2)◂0(<2)◂1(<2)◂{ } ⊢ 2'(= a3◂ [ a13◂ [ {| l |}]] )
	mov rax,unt 
	mov rax,unt_1
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	jmp LB_1493
LB_1493:
	cmp BYTE [r8+6],0
	jnz LB_1485
	POP_GRM_SCC
	ret
LB_1485:
	POP_GRM_FAIL 
	ret
LB_1619: ;; #53 { 0'(= a2◂ [ a23◂ [ ]] ) 1'(= a2◂ [ a23◂ [ ]] ) } ⊢ 0'(= a2◂ [ a23◂ [ ]] ) : ({ _lst◂2969'(=2970'(=_t23)) _lst◂_t23 }→_lst◂_t23)
;; rsp=0 , %116~1'(= a2◂ [ a23◂ [ ]] ) %115~0'(= a2◂ [ a23◂ [ ]] ) 
;; ?; 1'(= a2◂ [ a23◂ [ ]] ) ⊢ 1(<2)◂{ }
	mov rdi,r14
	cmp BYTE [rdi+6],1
	jnz LB_1620
;; rsp=0 , %115~0'(= a2◂ [ a23◂ [ ]] ) 
; ∎ 0'(= a2◂ [ a23◂ [ ]] )
; .mov_ptn2 0'(= a2◂ [ a23◂ [ ]] ) ⊢ 0'(= a2◂ [ a23◂ [ ]] )
	ret
LB_1620:
;; ?; 1'(= a2◂ [ a23◂ [ ]] ) ⊢ 0(<2)◂{ 2'(= a23◂ [ ] ) 3'(= a2◂ [ a23◂ [ ]] ) }
	mov r8, QWORD [r14+8]
	mov r9, QWORD [r14+16]
	mov QWORD [GBG_VCT+8*0],r14
	mov rdi,QWORD [GBG_VCT+8*0]
	mov rax,[SS_RCD_2_TOP]
	mov QWORD [rdi],rax 
	mov QWORD [SS_RCD_2_TOP],rdi
;; rsp=0 , %118~3'(= a2◂ [ a23◂ [ ]] ) %117~2'(= a23◂ [ ] ) %115~0'(= a2◂ [ a23◂ [ ]] ) 
; #23 { 2'(= a23◂ [ ] ) 0'(= a2◂ [ a23◂ [ ]] ) } ⊢ 0(<2)◂{ 2'(= a23◂ [ ] ) 0'(= a2◂ [ a23◂ [ ]] ) }
;; rsp=0 , %119~0(<2)◂{ 2'(= a23◂ [ ] ) 0'(= a2◂ [ a23◂ [ ]] ) } %118~3'(= a2◂ [ a23◂ [ ]] ) 
; #53 { 0(<2)◂{ 2'(= a23◂ [ ] ) 0'(= a2◂ [ a23◂ [ ]] ) } 3'(= a2◂ [ a23◂ [ ]] ) } ⊢ 0'(= a2◂ [ a23◂ [ ]] )
; .mov_ptn2 { 0(<2)◂{ 2'(= a23◂ [ ] ) 0'(= a2◂ [ a23◂ [ ]] ) } 3'(= a2◂ [ a23◂ [ ]] ) } ⊢ { 0'(= a2◂ [ a23◂ [ ]] ) 1'(= a2◂ [ a23◂ [ ]] ) }
; .mov_ptn 3'(= a2◂ [ a23◂ [ ]] ) ⊢ 1'(= a2◂ [ a23◂ [ ]] )
	mov rax,r9
	mov r14,rax
	mov r10,r13
; .mov_ptn 0(<2)◂{ 2'(= a23◂ [ ] ) 4'(= a2◂ [ a23◂ [ ]] ) } ⊢ 0'(= a2◂ [ a23◂ [ ]] )
	ALC_RCD 2, rax
	mov r9,rax
	mov rax,r8
	mov QWORD [r9+8+8*0],rax
	mov rax,r10
	mov QWORD [r9+8+8*1],rax
	mov rax,r9
	mov BYTE [rax+6],0
	mov r13,rax
	call LB_1619
;; rsp=0 , %120~0'(= a2◂ [ a23◂ [ ]] ) 
; ∎ 0'(= a2◂ [ a23◂ [ ]] )
; .mov_ptn2 0'(= a2◂ [ a23◂ [ ]] ) ⊢ 0'(= a2◂ [ a23◂ [ ]] )
	ret
LB_1618: ;; #54 0'(= a2◂ [ a23◂ [ ]] ) ⊢ 0'(= a2◂ [ a23◂ [ ]] ) : (_lst◂_t23→_lst◂_t23)
;; rsp=0 , %121~0'(= a2◂ [ a23◂ [ ]] ) 
; #22 { } ⊢ 1(<2)◂{ }
;; rsp=0 , %122~1(<2)◂{ } %121~0'(= a2◂ [ a23◂ [ ]] ) 
; #53 { 1(<2)◂{ } 0'(= a2◂ [ a23◂ [ ]] ) } ⊢ 0'(= a2◂ [ a23◂ [ ]] )
; .mov_ptn2 { 1(<2)◂{ } 0'(= a2◂ [ a23◂ [ ]] ) } ⊢ { 0'(= a2◂ [ a23◂ [ ]] ) 1'(= a2◂ [ a23◂ [ ]] ) }
; .mov_ptn 0'(= a2◂ [ a23◂ [ ]] ) ⊢ 1'(= a2◂ [ a23◂ [ ]] )
	mov rax,r13
	mov r14,rax
; .mov_ptn 1(<2)◂{ } ⊢ 0'(= a2◂ [ a23◂ [ ]] )
	mov rax,unt 
	mov rax,unt_1
	mov r13,rax
	call LB_1619
;; rsp=0 , %123~0'(= a2◂ [ a23◂ [ ]] ) 
; ∎ 0'(= a2◂ [ a23◂ [ ]] )
; .mov_ptn2 0'(= a2◂ [ a23◂ [ ]] ) ⊢ 0'(= a2◂ [ a23◂ [ ]] )
	ret
ETR_212:
	mov r9,0x0000_ffff_ffff_ffff
	and r9,[r13]
	call GRM_212
	ret
GRM_212:
	PUSH_GRM
	jmp LB_1496
LB_1495:
	add r14,1 
LB_1496:
	cmp r14,r9
	jge LB_1497
	JZ_LINE_SPC BYTE [r13+8+r14], LB_1495
LB_1497
	call GRM_216
	cmp BYTE [r8+6],0
	jnz LB_1500
	jmp LB_1501
LB_1500:
	jmp LB_1498
LB_1501:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a23◂ [ ] ) ⊢ 8'(= a23◂ [ ] )
; .mov_ptn 2'(= a23◂ [ ] ) ⊢ 8'(= a23◂ [ ] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_1499
LB_1498:
	add rsp,0
	jmp LB_1494
LB_1499:
	jmp LB_1503
LB_1502:
	add r14,1 
LB_1503:
	cmp r14,r9
	jge LB_1504
	JZ_LINE_SPC BYTE [r13+8+r14], LB_1502
LB_1504
	call GRM_215
	cmp BYTE [r8+6],0
	jnz LB_1507
	jmp LB_1508
LB_1507:
	jmp LB_1505
LB_1508:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a2◂ [ a23◂ [ ]] ) ⊢ 9'(= a2◂ [ a23◂ [ ]] )
; .mov_ptn 2'(= a2◂ [ a23◂ [ ]] ) ⊢ 9'(= a2◂ [ a23◂ [ ]] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_1506
LB_1505:
	add rsp,8
	jmp LB_1494
LB_1506:
	jmp LB_1510
LB_1509:
	add r14,1 
LB_1510:
	cmp r14,r9
	jge LB_1511
	JZ_LINE_SPC BYTE [r13+8+r14], LB_1509
LB_1511
	call GRM_214
	cmp BYTE [r8+6],0
	jnz LB_1514
	jmp LB_1515
LB_1514:
	jmp LB_1512
LB_1515:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a3◂ [ a23◂ [ ]] ) ⊢ 10'(= a3◂ [ a23◂ [ ]] )
; .mov_ptn 2'(= a3◂ [ a23◂ [ ]] ) ⊢ 10'(= a3◂ [ a23◂ [ ]] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_1513
LB_1512:
	add rsp,16
	jmp LB_1494
LB_1513:
	mov QWORD [rsp+8*3],r14
	mov r13,QWORD [rsp+16+8*3]
	mov r14,QWORD [rsp+8*3]
	jmp LB_1516
LB_1516
;; rsp=3 , %1324~1'(= r ) %1323~0'(= r ) %1322~10'(= a3◂ [ a23◂ [ ]] ) %1321~9'(= a2◂ [ a23◂ [ ]] ) %1320~8'(= a23◂ [ ] ) 
; #188 { 8'(= a23◂ [ ] ) 9'(= a2◂ [ a23◂ [ ]] ) } ⊢ 2'(= a23◂ [ ] )
	sub rsp,16
	mov QWORD [rsp+8*0],r13
	mov QWORD [rsp+8*1],r14
; .mov_ptn2 { 8'(= a23◂ [ ] ) 9'(= a2◂ [ a23◂ [ ]] ) } ⊢ { 0'(= a23◂ [ ] ) 1'(= a2◂ [ a23◂ [ ]] ) }
; .mov_ptn 9'(= a2◂ [ a23◂ [ ]] ) ⊢ 1'(= a2◂ [ a23◂ [ ]] )
	mov rax,QWORD [rsp-8+8*4]
	mov r14,rax
; .mov_ptn 8'(= a23◂ [ ] ) ⊢ 0'(= a23◂ [ ] )
	mov rax,QWORD [rsp-8+8*5]
	mov r13,rax
	call ETR_188
	mov r14,QWORD [rsp-8+8*2]
	mov r8,r13
	mov r13,QWORD [rsp-8+8*1]
	add rsp,16
;; rsp=3 , %1325~2'(= a23◂ [ ] ) %1324~1'(= r ) %1323~0'(= r ) %1322~10'(= a3◂ [ a23◂ [ ]] ) 
;; ?; 10'(= a3◂ [ a23◂ [ ]] ) ⊢ 0(<2)◂3'(= a23◂ [ ] )
	mov rdi,QWORD [rsp-8+8*1]
	cmp BYTE [rdi+6],0
	jnz LB_1518
	mov QWORD [GBG_VCT+8*0],rdi
	mov r9,QWORD [rdi+8]
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_LN rdi
;; rsp=3 , %1326~3'(= a23◂ [ ] ) %1325~2'(= a23◂ [ ] ) %1324~1'(= r ) %1323~0'(= r ) 
; #141 { 2'(= a23◂ [ ] ) 3'(= a23◂ [ ] ) } ⊢ 1(<5)◂{ 2'(= a23◂ [ ] ) 3'(= a23◂ [ ] ) }
;; rsp=3 , %1327~1(<5)◂{ 2'(= a23◂ [ ] ) 3'(= a23◂ [ ] ) } %1324~1'(= r ) %1323~0'(= r ) 
; #24 1(<5)◂{ 2'(= a23◂ [ ] ) 3'(= a23◂ [ ] ) } ⊢ 0(<2)◂1(<5)◂{ 2'(= a23◂ [ ] ) 3'(= a23◂ [ ] ) }
;; rsp=3 , %1328~0(<2)◂1(<5)◂{ 2'(= a23◂ [ ] ) 3'(= a23◂ [ ] ) } %1324~1'(= r ) %1323~0'(= r ) 
; ∎ 0(<2)◂1(<5)◂{ 2'(= a23◂ [ ] ) 3'(= a23◂ [ ] ) }
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂1(<5)◂{ 2'(= a23◂ [ ] ) 3'(= a23◂ [ ] ) } ⊢ 2'(= a3◂ [ a23◂ [ ]] )
	mov r13,r8
; .mov_ptn 0(<2)◂1(<5)◂{ 0'(= a23◂ [ ] ) 3'(= a23◂ [ ] ) } ⊢ 2'(= a3◂ [ a23◂ [ ]] )
	ALC_RCD 2, rax
	mov r14,rax
	mov rax,r13
	mov QWORD [r14+8+8*0],rax
	mov rax,r9
	mov QWORD [r14+8+8*1],rax
	mov rax,r14
	mov BYTE [rax+6],1
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,24
	jmp LB_1517
LB_1518:
;; ?; 10'(= a3◂ [ a23◂ [ ]] ) ⊢ 1(<2)◂{ }
;; rsp=3 , %1325~2'(= a23◂ [ ] ) %1324~1'(= r ) %1323~0'(= r ) 
; #24 2'(= a23◂ [ ] ) ⊢ 0(<2)◂2'(= a23◂ [ ] )
;; rsp=3 , %1329~0(<2)◂2'(= a23◂ [ ] ) %1324~1'(= r ) %1323~0'(= r ) 
; ∎ 0(<2)◂2'(= a23◂ [ ] )
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂2'(= a23◂ [ ] ) ⊢ 2'(= a3◂ [ a23◂ [ ]] )
	mov r13,r8
; .mov_ptn 0(<2)◂0'(= a23◂ [ ] ) ⊢ 2'(= a3◂ [ a23◂ [ ]] )
	mov rax,r13
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,24
	jmp LB_1517
LB_1517:
	cmp BYTE [r8+6],0
	jnz LB_1494
	POP_GRM_SCC
	ret
LB_1494:
	POP_GRM_FAIL 
	ret
ETR_213:
	mov r9,0x0000_ffff_ffff_ffff
	and r9,[r13]
	call GRM_213
	ret
GRM_213:
	PUSH_GRM
	jmp LB_1521
LB_1520:
	add r14,1 
LB_1521:
	cmp r14,r9
	jge LB_1522
	JZ_LINE_SPC BYTE [r13+8+r14], LB_1520
LB_1522
	call GRM_212
	cmp BYTE [r8+6],0
	jnz LB_1525
	jmp LB_1526
LB_1525:
	jmp LB_1523
LB_1526:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a23◂ [ ] ) ⊢ 8'(= a23◂ [ ] )
; .mov_ptn 2'(= a23◂ [ ] ) ⊢ 8'(= a23◂ [ ] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_1524
LB_1523:
	add rsp,0
	jmp LB_1519
LB_1524:
	jmp LB_1528
LB_1527:
	add r14,1 
LB_1528:
	cmp r14,r9
	jge LB_1529
	JZ_LINE_SPC BYTE [r13+8+r14], LB_1527
LB_1529
	call GRM_213
	cmp BYTE [r8+6],0
	jnz LB_1532
	jmp LB_1533
LB_1532:
	jmp LB_1530
LB_1533:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a2◂ [ a23◂ [ ]] ) ⊢ 9'(= a2◂ [ a23◂ [ ]] )
; .mov_ptn 2'(= a2◂ [ a23◂ [ ]] ) ⊢ 9'(= a2◂ [ a23◂ [ ]] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_1531
LB_1530:
	add rsp,8
	jmp LB_1519
LB_1531:
	mov QWORD [rsp+8*2],r14
	mov r13,QWORD [rsp+16+8*2]
	mov r14,QWORD [rsp+8*2]
	jmp LB_1534
LB_1534
;; rsp=2 , %1333~1'(= r ) %1332~0'(= r ) %1331~9'(= a2◂ [ a23◂ [ ]] ) %1330~8'(= a23◂ [ ] ) 
; #23 { 8'(= a23◂ [ ] ) 9'(= a2◂ [ a23◂ [ ]] ) } ⊢ 0(<2)◂{ 8'(= a23◂ [ ] ) 9'(= a2◂ [ a23◂ [ ]] ) }
;; rsp=2 , %1334~0(<2)◂{ 8'(= a23◂ [ ] ) 9'(= a2◂ [ a23◂ [ ]] ) } %1333~1'(= r ) %1332~0'(= r ) 
; #24 0(<2)◂{ 8'(= a23◂ [ ] ) 9'(= a2◂ [ a23◂ [ ]] ) } ⊢ 0(<2)◂0(<2)◂{ 8'(= a23◂ [ ] ) 9'(= a2◂ [ a23◂ [ ]] ) }
;; rsp=2 , %1335~0(<2)◂0(<2)◂{ 8'(= a23◂ [ ] ) 9'(= a2◂ [ a23◂ [ ]] ) } %1333~1'(= r ) %1332~0'(= r ) 
; ∎ 0(<2)◂0(<2)◂{ 8'(= a23◂ [ ] ) 9'(= a2◂ [ a23◂ [ ]] ) }
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂0(<2)◂{ 8'(= a23◂ [ ] ) 9'(= a2◂ [ a23◂ [ ]] ) } ⊢ 2'(= a3◂ [ a2◂ [ a23◂ [ ]]] )
; .mov_ptn 0(<2)◂0(<2)◂{ 8'(= a23◂ [ ] ) 9'(= a2◂ [ a23◂ [ ]] ) } ⊢ 2'(= a3◂ [ a2◂ [ a23◂ [ ]]] )
	ALC_RCD 2, rax
	mov r13,rax
	mov rax,QWORD [rsp-8+8*2]
	mov QWORD [r13+8+8*0],rax
	mov rax,QWORD [rsp-8+8*1]
	mov QWORD [r13+8+8*1],rax
	mov rax,r13
	mov BYTE [rax+6],0
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,16
	jmp LB_1535
LB_1535:
	cmp BYTE [r8+6],0
	jnz LB_1519
	POP_GRM_SCC
	ret
LB_1519:
	RB_GRM
	mov QWORD [rsp+8*0],r14
	mov r13,QWORD [rsp+16+8*0]
	mov r14,QWORD [rsp+8*0]
	jmp LB_1537
LB_1537
;; rsp=0 , %1337~1'(= r ) %1336~0'(= r ) 
; #22 { } ⊢ 1(<2)◂{ }
;; rsp=0 , %1338~1(<2)◂{ } %1337~1'(= r ) %1336~0'(= r ) 
; #24 1(<2)◂{ } ⊢ 0(<2)◂1(<2)◂{ }
;; rsp=0 , %1339~0(<2)◂1(<2)◂{ } %1337~1'(= r ) %1336~0'(= r ) 
; ∎ 0(<2)◂1(<2)◂{ }
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂1(<2)◂{ } ⊢ 2'(= a3◂ [ a2◂ [ a23◂ [ ]]] )
; .mov_ptn 0(<2)◂1(<2)◂{ } ⊢ 2'(= a3◂ [ a2◂ [ a23◂ [ ]]] )
	mov rax,unt 
	mov rax,unt_1
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	jmp LB_1538
LB_1538:
	cmp BYTE [r8+6],0
	jnz LB_1536
	POP_GRM_SCC
	ret
LB_1536:
	POP_GRM_FAIL 
	ret
ETR_214:
	mov r9,0x0000_ffff_ffff_ffff
	and r9,[r13]
	call GRM_214
	ret
GRM_214:
	PUSH_GRM
	jmp LB_1541
LB_1540:
	add r14,1 
LB_1541:
	cmp r14,r9
	jge LB_1542
	JZ_LINE_SPC BYTE [r13+8+r14], LB_1540
LB_1542
	lea rax,[r14+3]
	cmp rax,r9
	jg LB_1545
	jmp LB_1546
LB_1545:
	mov r8,unt_1
	jmp LB_1543
LB_1546:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],226
	jnz LB_1547
	cmp BYTE [rdi+1],134
	jnz LB_1547
	cmp BYTE [rdi+2],146
	jnz LB_1547
	jmp LB_1548
LB_1547:
	mov r8,unt_1
	jmp LB_1543
LB_1548:
	add r14,3
	jmp LB_1544
LB_1543:
	add rsp,0
	jmp LB_1539
LB_1544:
	jmp LB_1550
LB_1549:
	add r14,1 
LB_1550:
	cmp r14,r9
	jge LB_1551
	JZ_LINE_SPC BYTE [r13+8+r14], LB_1549
LB_1551
	call GRM_212
	cmp BYTE [r8+6],0
	jnz LB_1554
	jmp LB_1555
LB_1554:
	jmp LB_1552
LB_1555:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a23◂ [ ] ) ⊢ 8'(= a23◂ [ ] )
; .mov_ptn 2'(= a23◂ [ ] ) ⊢ 8'(= a23◂ [ ] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_1553
LB_1552:
	add rsp,0
	jmp LB_1539
LB_1553:
	mov QWORD [rsp+8*1],r14
	mov r13,QWORD [rsp+16+8*1]
	mov r14,QWORD [rsp+8*1]
	jmp LB_1556
LB_1556
;; rsp=1 , %1342~1'(= r ) %1341~0'(= r ) %1340~8'(= a23◂ [ ] ) 
; #24 8'(= a23◂ [ ] ) ⊢ 0(<2)◂8'(= a23◂ [ ] )
;; rsp=1 , %1343~0(<2)◂8'(= a23◂ [ ] ) %1342~1'(= r ) %1341~0'(= r ) 
; #24 0(<2)◂8'(= a23◂ [ ] ) ⊢ 0(<2)◂0(<2)◂8'(= a23◂ [ ] )
;; rsp=1 , %1344~0(<2)◂0(<2)◂8'(= a23◂ [ ] ) %1342~1'(= r ) %1341~0'(= r ) 
; ∎ 0(<2)◂0(<2)◂8'(= a23◂ [ ] )
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂0(<2)◂8'(= a23◂ [ ] ) ⊢ 2'(= a3◂ [ a3◂ [ a23◂ [ ]]] )
; .mov_ptn 0(<2)◂0(<2)◂8'(= a23◂ [ ] ) ⊢ 2'(= a3◂ [ a3◂ [ a23◂ [ ]]] )
	mov rax,QWORD [rsp-8+8*1]
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,8
	jmp LB_1557
LB_1557:
	cmp BYTE [r8+6],0
	jnz LB_1539
	POP_GRM_SCC
	ret
LB_1539:
	RB_GRM
	mov QWORD [rsp+8*0],r14
	mov r13,QWORD [rsp+16+8*0]
	mov r14,QWORD [rsp+8*0]
	jmp LB_1559
LB_1559
;; rsp=0 , %1346~1'(= r ) %1345~0'(= r ) 
; #25 { } ⊢ 1(<2)◂{ }
;; rsp=0 , %1347~1(<2)◂{ } %1346~1'(= r ) %1345~0'(= r ) 
; #24 1(<2)◂{ } ⊢ 0(<2)◂1(<2)◂{ }
;; rsp=0 , %1348~0(<2)◂1(<2)◂{ } %1346~1'(= r ) %1345~0'(= r ) 
; ∎ 0(<2)◂1(<2)◂{ }
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂1(<2)◂{ } ⊢ 2'(= a3◂ [ a3◂ [ a23◂ [ ]]] )
; .mov_ptn 0(<2)◂1(<2)◂{ } ⊢ 2'(= a3◂ [ a3◂ [ a23◂ [ ]]] )
	mov rax,unt 
	mov rax,unt_1
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	jmp LB_1560
LB_1560:
	cmp BYTE [r8+6],0
	jnz LB_1558
	POP_GRM_SCC
	ret
LB_1558:
	POP_GRM_FAIL 
	ret
ETR_215:
	mov r9,0x0000_ffff_ffff_ffff
	and r9,[r13]
	call GRM_215
	ret
GRM_215:
	PUSH_GRM
	jmp LB_1563
LB_1562:
	add r14,1 
LB_1563:
	cmp r14,r9
	jge LB_1564
	JZ_LINE_SPC BYTE [r13+8+r14], LB_1562
LB_1564
	lea rax,[r14+3]
	cmp rax,r9
	jg LB_1567
	jmp LB_1568
LB_1567:
	mov r8,unt_1
	jmp LB_1565
LB_1568:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],226
	jnz LB_1569
	cmp BYTE [rdi+1],151
	jnz LB_1569
	cmp BYTE [rdi+2],130
	jnz LB_1569
	jmp LB_1570
LB_1569:
	mov r8,unt_1
	jmp LB_1565
LB_1570:
	add r14,3
	jmp LB_1566
LB_1565:
	add rsp,0
	jmp LB_1561
LB_1566:
	jmp LB_1572
LB_1571:
	add r14,1 
LB_1572:
	cmp r14,r9
	jge LB_1573
	JZ_LINE_SPC BYTE [r13+8+r14], LB_1571
LB_1573
	call GRM_216
	cmp BYTE [r8+6],0
	jnz LB_1576
	jmp LB_1577
LB_1576:
	jmp LB_1574
LB_1577:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a23◂ [ ] ) ⊢ 8'(= a23◂ [ ] )
; .mov_ptn 2'(= a23◂ [ ] ) ⊢ 8'(= a23◂ [ ] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_1575
LB_1574:
	add rsp,0
	jmp LB_1561
LB_1575:
	jmp LB_1579
LB_1578:
	add r14,1 
LB_1579:
	cmp r14,r9
	jge LB_1580
	JZ_LINE_SPC BYTE [r13+8+r14], LB_1578
LB_1580
	call GRM_215
	cmp BYTE [r8+6],0
	jnz LB_1583
	jmp LB_1584
LB_1583:
	jmp LB_1581
LB_1584:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a2◂ [ a23◂ [ ]] ) ⊢ 9'(= a2◂ [ a23◂ [ ]] )
; .mov_ptn 2'(= a2◂ [ a23◂ [ ]] ) ⊢ 9'(= a2◂ [ a23◂ [ ]] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_1582
LB_1581:
	add rsp,8
	jmp LB_1561
LB_1582:
	mov QWORD [rsp+8*2],r14
	mov r13,QWORD [rsp+16+8*2]
	mov r14,QWORD [rsp+8*2]
	jmp LB_1585
LB_1585
;; rsp=2 , %1352~1'(= r ) %1351~0'(= r ) %1350~9'(= a2◂ [ a23◂ [ ]] ) %1349~8'(= a23◂ [ ] ) 
; #23 { 8'(= a23◂ [ ] ) 9'(= a2◂ [ a23◂ [ ]] ) } ⊢ 0(<2)◂{ 8'(= a23◂ [ ] ) 9'(= a2◂ [ a23◂ [ ]] ) }
;; rsp=2 , %1353~0(<2)◂{ 8'(= a23◂ [ ] ) 9'(= a2◂ [ a23◂ [ ]] ) } %1352~1'(= r ) %1351~0'(= r ) 
; #24 0(<2)◂{ 8'(= a23◂ [ ] ) 9'(= a2◂ [ a23◂ [ ]] ) } ⊢ 0(<2)◂0(<2)◂{ 8'(= a23◂ [ ] ) 9'(= a2◂ [ a23◂ [ ]] ) }
;; rsp=2 , %1354~0(<2)◂0(<2)◂{ 8'(= a23◂ [ ] ) 9'(= a2◂ [ a23◂ [ ]] ) } %1352~1'(= r ) %1351~0'(= r ) 
; ∎ 0(<2)◂0(<2)◂{ 8'(= a23◂ [ ] ) 9'(= a2◂ [ a23◂ [ ]] ) }
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂0(<2)◂{ 8'(= a23◂ [ ] ) 9'(= a2◂ [ a23◂ [ ]] ) } ⊢ 2'(= a3◂ [ a2◂ [ a23◂ [ ]]] )
; .mov_ptn 0(<2)◂0(<2)◂{ 8'(= a23◂ [ ] ) 9'(= a2◂ [ a23◂ [ ]] ) } ⊢ 2'(= a3◂ [ a2◂ [ a23◂ [ ]]] )
	ALC_RCD 2, rax
	mov r13,rax
	mov rax,QWORD [rsp-8+8*2]
	mov QWORD [r13+8+8*0],rax
	mov rax,QWORD [rsp-8+8*1]
	mov QWORD [r13+8+8*1],rax
	mov rax,r13
	mov BYTE [rax+6],0
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,16
	jmp LB_1586
LB_1586:
	cmp BYTE [r8+6],0
	jnz LB_1561
	POP_GRM_SCC
	ret
LB_1561:
	RB_GRM
	mov QWORD [rsp+8*0],r14
	mov r13,QWORD [rsp+16+8*0]
	mov r14,QWORD [rsp+8*0]
	jmp LB_1588
LB_1588
;; rsp=0 , %1356~1'(= r ) %1355~0'(= r ) 
; #22 { } ⊢ 1(<2)◂{ }
;; rsp=0 , %1357~1(<2)◂{ } %1356~1'(= r ) %1355~0'(= r ) 
; #24 1(<2)◂{ } ⊢ 0(<2)◂1(<2)◂{ }
;; rsp=0 , %1358~0(<2)◂1(<2)◂{ } %1356~1'(= r ) %1355~0'(= r ) 
; ∎ 0(<2)◂1(<2)◂{ }
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂1(<2)◂{ } ⊢ 2'(= a3◂ [ a2◂ [ a23◂ [ ]]] )
; .mov_ptn 0(<2)◂1(<2)◂{ } ⊢ 2'(= a3◂ [ a2◂ [ a23◂ [ ]]] )
	mov rax,unt 
	mov rax,unt_1
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	jmp LB_1589
LB_1589:
	cmp BYTE [r8+6],0
	jnz LB_1587
	POP_GRM_SCC
	ret
LB_1587:
	POP_GRM_FAIL 
	ret
ETR_216:
	mov r9,0x0000_ffff_ffff_ffff
	and r9,[r13]
	call GRM_216
	ret
GRM_216:
	PUSH_GRM
	jmp LB_1592
LB_1591:
	add r14,1 
LB_1592:
	cmp r14,r9
	jge LB_1593
	JZ_LINE_SPC BYTE [r13+8+r14], LB_1591
LB_1593
	lea rax,[r14+1]
	cmp rax,r9
	jg LB_1596
	jmp LB_1597
LB_1596:
	mov r8,unt_1
	jmp LB_1594
LB_1597:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],123
	jnz LB_1598
	jmp LB_1599
LB_1598:
	mov r8,unt_1
	jmp LB_1594
LB_1599:
	add r14,1
	jmp LB_1595
LB_1594:
	add rsp,0
	jmp LB_1590
LB_1595:
	jmp LB_1601
LB_1600:
	add r14,1 
LB_1601:
	cmp r14,r9
	jge LB_1602
	JZ_LINE_SPC BYTE [r13+8+r14], LB_1600
LB_1602
	call GRM_213
	cmp BYTE [r8+6],0
	jnz LB_1605
	jmp LB_1606
LB_1605:
	jmp LB_1603
LB_1606:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a2◂ [ a23◂ [ ]] ) ⊢ 8'(= a2◂ [ a23◂ [ ]] )
; .mov_ptn 2'(= a2◂ [ a23◂ [ ]] ) ⊢ 8'(= a2◂ [ a23◂ [ ]] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_1604
LB_1603:
	add rsp,0
	jmp LB_1590
LB_1604:
	jmp LB_1608
LB_1607:
	add r14,1 
LB_1608:
	cmp r14,r9
	jge LB_1609
	JZ_LINE_SPC BYTE [r13+8+r14], LB_1607
LB_1609
	lea rax,[r14+1]
	cmp rax,r9
	jg LB_1612
	jmp LB_1613
LB_1612:
	mov r8,unt_1
	jmp LB_1610
LB_1613:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],125
	jnz LB_1614
	jmp LB_1615
LB_1614:
	mov r8,unt_1
	jmp LB_1610
LB_1615:
	add r14,1
	jmp LB_1611
LB_1610:
	add rsp,8
	jmp LB_1590
LB_1611:
	mov QWORD [rsp+8*1],r14
	mov r13,QWORD [rsp+16+8*1]
	mov r14,QWORD [rsp+8*1]
	jmp LB_1616
LB_1616
;; rsp=1 , %1361~1'(= r ) %1360~0'(= r ) %1359~8'(= a2◂ [ a23◂ [ ]] ) 
; #54 8'(= a2◂ [ a23◂ [ ]] ) ⊢ 2'(= a2◂ [ a23◂ [ ]] )
	sub rsp,16
	mov QWORD [rsp+8*0],r13
	mov QWORD [rsp+8*1],r14
; .mov_ptn2 8'(= a2◂ [ a23◂ [ ]] ) ⊢ 0'(= a2◂ [ a23◂ [ ]] )
; .mov_ptn 8'(= a2◂ [ a23◂ [ ]] ) ⊢ 0'(= a2◂ [ a23◂ [ ]] )
	mov rax,QWORD [rsp-8+8*3]
	mov r13,rax
	call LB_1618
	mov r14,QWORD [rsp-8+8*2]
	mov r8,r13
	mov r13,QWORD [rsp-8+8*1]
	add rsp,24
;; rsp=0 , %1362~2'(= a2◂ [ a23◂ [ ]] ) %1361~1'(= r ) %1360~0'(= r ) 
; #142 2'(= a2◂ [ a23◂ [ ]] ) ⊢ 0(<5)◂2'(= a2◂ [ a23◂ [ ]] )
;; rsp=0 , %1363~0(<5)◂2'(= a2◂ [ a23◂ [ ]] ) %1361~1'(= r ) %1360~0'(= r ) 
; #24 0(<5)◂2'(= a2◂ [ a23◂ [ ]] ) ⊢ 0(<2)◂0(<5)◂2'(= a2◂ [ a23◂ [ ]] )
;; rsp=0 , %1364~0(<2)◂0(<5)◂2'(= a2◂ [ a23◂ [ ]] ) %1361~1'(= r ) %1360~0'(= r ) 
; ∎ 0(<2)◂0(<5)◂2'(= a2◂ [ a23◂ [ ]] )
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂0(<5)◂2'(= a2◂ [ a23◂ [ ]] ) ⊢ 2'(= a3◂ [ a23◂ [ ]] )
	mov r13,r8
; .mov_ptn 0(<2)◂0(<5)◂0'(= a2◂ [ a23◂ [ ]] ) ⊢ 2'(= a3◂ [ a23◂ [ ]] )
	mov rax,r13
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	jmp LB_1617
LB_1617:
	cmp BYTE [r8+6],0
	jnz LB_1590
	POP_GRM_SCC
	ret
LB_1590:
	RB_GRM
	jmp LB_1623
LB_1622:
	add r14,1 
LB_1623:
	cmp r14,r9
	jge LB_1624
	JZ_LINE_SPC BYTE [r13+8+r14], LB_1622
LB_1624
	lea rax,[r14+1]
	cmp rax,r9
	jg LB_1627
	jmp LB_1628
LB_1627:
	mov r8,unt_1
	jmp LB_1625
LB_1628:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],40
	jnz LB_1629
	jmp LB_1630
LB_1629:
	mov r8,unt_1
	jmp LB_1625
LB_1630:
	add r14,1
	jmp LB_1626
LB_1625:
	add rsp,0
	jmp LB_1621
LB_1626:
	jmp LB_1632
LB_1631:
	add r14,1 
LB_1632:
	cmp r14,r9
	jge LB_1633
	JZ_LINE_SPC BYTE [r13+8+r14], LB_1631
LB_1633
	call GRM_212
	cmp BYTE [r8+6],0
	jnz LB_1636
	jmp LB_1637
LB_1636:
	jmp LB_1634
LB_1637:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a23◂ [ ] ) ⊢ 8'(= a23◂ [ ] )
; .mov_ptn 2'(= a23◂ [ ] ) ⊢ 8'(= a23◂ [ ] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_1635
LB_1634:
	add rsp,0
	jmp LB_1621
LB_1635:
	jmp LB_1639
LB_1638:
	add r14,1 
LB_1639:
	cmp r14,r9
	jge LB_1640
	JZ_LINE_SPC BYTE [r13+8+r14], LB_1638
LB_1640
	lea rax,[r14+1]
	cmp rax,r9
	jg LB_1643
	jmp LB_1644
LB_1643:
	mov r8,unt_1
	jmp LB_1641
LB_1644:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],41
	jnz LB_1645
	jmp LB_1646
LB_1645:
	mov r8,unt_1
	jmp LB_1641
LB_1646:
	add r14,1
	jmp LB_1642
LB_1641:
	add rsp,8
	jmp LB_1621
LB_1642:
	mov QWORD [rsp+8*1],r14
	mov r13,QWORD [rsp+16+8*1]
	mov r14,QWORD [rsp+8*1]
	jmp LB_1647
LB_1647
;; rsp=1 , %1367~1'(= r ) %1366~0'(= r ) %1365~8'(= a23◂ [ ] ) 
; #24 8'(= a23◂ [ ] ) ⊢ 0(<2)◂8'(= a23◂ [ ] )
;; rsp=1 , %1368~0(<2)◂8'(= a23◂ [ ] ) %1367~1'(= r ) %1366~0'(= r ) 
; ∎ 0(<2)◂8'(= a23◂ [ ] )
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂8'(= a23◂ [ ] ) ⊢ 2'(= a3◂ [ a23◂ [ ]] )
; .mov_ptn 0(<2)◂8'(= a23◂ [ ] ) ⊢ 2'(= a3◂ [ a23◂ [ ]] )
	mov rax,QWORD [rsp-8+8*1]
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,8
	jmp LB_1648
LB_1648:
	cmp BYTE [r8+6],0
	jnz LB_1621
	POP_GRM_SCC
	ret
LB_1621:
	RB_GRM
	jmp LB_1651
LB_1650:
	add r14,1 
LB_1651:
	cmp r14,r9
	jge LB_1652
	JZ_LINE_SPC BYTE [r13+8+r14], LB_1650
LB_1652
	call GRM_217
	cmp BYTE [r8+6],0
	jnz LB_1655
	jmp LB_1656
LB_1655:
	jmp LB_1653
LB_1656:
	sub rsp,8
; .mov_ptn2 2'(= {| l |} ) ⊢ 8'(= {| l |} )
; .mov_ptn 2'(= {| l |} ) ⊢ 8'(= {| l |} )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_1654
LB_1653:
	add rsp,0
	jmp LB_1649
LB_1654:
	mov QWORD [rsp+8*1],r14
	mov r13,QWORD [rsp+16+8*1]
	mov r14,QWORD [rsp+8*1]
	jmp LB_1657
LB_1657
;; rsp=1 , %1371~1'(= r ) %1370~0'(= r ) %1369~8'(= {| l |} ) 
; #138 8'(= {| l |} ) ⊢ 4(<5)◂8'(= {| l |} )
;; rsp=1 , %1372~4(<5)◂8'(= {| l |} ) %1371~1'(= r ) %1370~0'(= r ) 
; #24 4(<5)◂8'(= {| l |} ) ⊢ 0(<2)◂4(<5)◂8'(= {| l |} )
;; rsp=1 , %1373~0(<2)◂4(<5)◂8'(= {| l |} ) %1371~1'(= r ) %1370~0'(= r ) 
; ∎ 0(<2)◂4(<5)◂8'(= {| l |} )
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂4(<5)◂8'(= {| l |} ) ⊢ 2'(= a3◂ [ a23◂ [ ]] )
; .mov_ptn 0(<2)◂4(<5)◂8'(= {| l |} ) ⊢ 2'(= a3◂ [ a23◂ [ ]] )
	mov rax,QWORD [rsp-8+8*1]
	mov BYTE [rax+6],4
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,8
	jmp LB_1658
LB_1658:
	cmp BYTE [r8+6],0
	jnz LB_1649
	POP_GRM_SCC
	ret
LB_1649:
	RB_GRM
	jmp LB_1661
LB_1660:
	add r14,1 
LB_1661:
	cmp r14,r9
	jge LB_1662
	JZ_LINE_SPC BYTE [r13+8+r14], LB_1660
LB_1662
	call GRM_191
	cmp BYTE [r8+6],0
	jnz LB_1665
	jmp LB_1666
LB_1665:
	jmp LB_1663
LB_1666:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a9◂ [ ] ) ⊢ 8'(= a9◂ [ ] )
; .mov_ptn 2'(= a9◂ [ ] ) ⊢ 8'(= a9◂ [ ] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_1664
LB_1663:
	add rsp,0
	jmp LB_1659
LB_1664:
	mov QWORD [rsp+8*1],r14
	mov r13,QWORD [rsp+16+8*1]
	mov r14,QWORD [rsp+8*1]
	jmp LB_1667
LB_1667
;; rsp=1 , %1376~1'(= r ) %1375~0'(= r ) %1374~8'(= a9◂ [ ] ) 
; #139 8'(= a9◂ [ ] ) ⊢ 3(<5)◂8'(= a9◂ [ ] )
;; rsp=1 , %1377~3(<5)◂8'(= a9◂ [ ] ) %1376~1'(= r ) %1375~0'(= r ) 
; #24 3(<5)◂8'(= a9◂ [ ] ) ⊢ 0(<2)◂3(<5)◂8'(= a9◂ [ ] )
;; rsp=1 , %1378~0(<2)◂3(<5)◂8'(= a9◂ [ ] ) %1376~1'(= r ) %1375~0'(= r ) 
; ∎ 0(<2)◂3(<5)◂8'(= a9◂ [ ] )
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂3(<5)◂8'(= a9◂ [ ] ) ⊢ 2'(= a3◂ [ a23◂ [ ]] )
; .mov_ptn 0(<2)◂3(<5)◂8'(= a9◂ [ ] ) ⊢ 2'(= a3◂ [ a23◂ [ ]] )
	mov rax,QWORD [rsp-8+8*1]
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],3
	mov QWORD [rax+8],rdi
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,8
	jmp LB_1668
LB_1668:
	cmp BYTE [r8+6],0
	jnz LB_1659
	POP_GRM_SCC
	ret
LB_1659:
	POP_GRM_FAIL 
	ret
ETR_217:
	mov r9,0x0000_ffff_ffff_ffff
	and r9,[r13]
	call GRM_217
	ret
GRM_217:
	PUSH_GRM
	call GRM_76
	cmp BYTE [r8+6],0
	jnz LB_1672
	jmp LB_1673
LB_1672:
	jmp LB_1670
LB_1673:
	sub rsp,8
; .mov_ptn2 2'(= {| l |} ) ⊢ 8'(= {| l |} )
; .mov_ptn 2'(= {| l |} ) ⊢ 8'(= {| l |} )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_1671
LB_1670:
	add rsp,0
	jmp LB_1669
LB_1671:
	lea rax,[r14+1]
	cmp rax,r9
	jg LB_1676
	jmp LB_1677
LB_1676:
	mov r8,unt_1
	jmp LB_1674
LB_1677:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],39
	jnz LB_1678
	jmp LB_1679
LB_1678:
	mov r8,unt_1
	jmp LB_1674
LB_1679:
	add r14,1
	jmp LB_1675
LB_1674:
	add rsp,8
	jmp LB_1669
LB_1675:
	mov QWORD [rsp+8*1],r14
	mov r13,QWORD [rsp+16+8*1]
	mov r14,QWORD [rsp+8*1]
	jmp LB_1680
LB_1680
;; rsp=1 , %1381~1'(= r ) %1380~0'(= r ) %1379~8'(= {| l |} ) 
; #24 8'(= {| l |} ) ⊢ 0(<2)◂8'(= {| l |} )
;; rsp=1 , %1382~0(<2)◂8'(= {| l |} ) %1381~1'(= r ) %1380~0'(= r ) 
; ∎ 0(<2)◂8'(= {| l |} )
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂8'(= {| l |} ) ⊢ 2'(= a3◂ [ {| l |}] )
; .mov_ptn 0(<2)◂8'(= {| l |} ) ⊢ 2'(= a3◂ [ {| l |}] )
	mov rax,QWORD [rsp-8+8*1]
	mov BYTE [rax+6],0
	mov r8,rax
	add rsp,8
	jmp LB_1681
LB_1681:
	cmp BYTE [r8+6],0
	jnz LB_1669
	POP_GRM_SCC
	ret
LB_1669:
	POP_GRM_FAIL 
	ret
LB_1701:
	movzx rax,BYTE [r8+6]
	jmp QWORD [LB_1704+8*rax]
LB_1704: dq LB_1702,LB_1703
LB_1702:
	jmp LB_1705
LB_1703:
	FREE_LN r8 
	mov r8,QWORD [r8+8]
	call LB_1706
	jmp LB_1705
LB_1705:
	ret
LB_1706:
	movzx rax,BYTE [r8+6]
	jmp QWORD [LB_1709+8*rax]
LB_1709: dq LB_1707,LB_1708
LB_1707:
	push r8
	mov r8,QWORD [r8+8+8*0]
	push r8
	mov r8,QWORD [r8+8+8*0]
	pop r8 
	push r8
	mov r8,QWORD [r8+8+8*1]
	pop r8 
	push r8
	mov r8,QWORD [r8+8+8*2]
	mov rdi,r8
	call free_s8
	pop r8 
	FREE_RCD 3, r8
	pop r8 
	push r8
	mov r8,QWORD [r8+8+8*1]
	call LB_1706
	pop r8 
	FREE_RCD 2, r8
	jmp LB_1710
LB_1708:
	jmp LB_1710
LB_1710:
	ret
LB_1804: ;; #55 { 0'(= a2◂ [ *{ rr{| l |}}] ) 1'(= a2◂ [ *{ rr{| l |}}] ) } ⊢ 0'(= a2◂ [ *{ rr{| l |}}] ) : ({ _lst◂{ _r64 _r64 _s8 } _lst◂{ _r64 _r64 _s8 } }→_lst◂{ _r64 _r64 _s8 })
;; rsp=0 , %125~1'(= a2◂ [ *{ rr{| l |}}] ) %124~0'(= a2◂ [ *{ rr{| l |}}] ) 
;; ? 0'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 0(<2)◂{ 2'(= *{ rr{| l |}} ) 3'(= a2◂ [ *{ rr{| l |}}] ) }
	mov rdi,r13
	cmp BYTE [rdi+6],0
	jnz LB_1805
	mov r8, QWORD [r13+8]
	mov r9, QWORD [r13+16]
	mov QWORD [GBG_VCT+8*0],r13
	mov rdi,QWORD [GBG_VCT+8*0]
	mov rax,[SS_RCD_2_TOP]
	mov QWORD [rdi],rax 
	mov QWORD [SS_RCD_2_TOP],rdi
;; rsp=0 , %127~3'(= a2◂ [ *{ rr{| l |}}] ) %126~2'(= *{ rr{| l |}} ) %125~1'(= a2◂ [ *{ rr{| l |}}] ) 
; #55 { 3'(= a2◂ [ *{ rr{| l |}}] ) 1'(= a2◂ [ *{ rr{| l |}}] ) } ⊢ 0'(= a2◂ [ *{ rr{| l |}}] )
	sub rsp,8
	mov QWORD [rsp+8*0],r8
; .mov_ptn2 { 3'(= a2◂ [ *{ rr{| l |}}] ) 1'(= a2◂ [ *{ rr{| l |}}] ) } ⊢ { 0'(= a2◂ [ *{ rr{| l |}}] ) 1'(= a2◂ [ *{ rr{| l |}}] ) }
; .mov_ptn 3'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 0'(= a2◂ [ *{ rr{| l |}}] )
	mov rax,r9
	mov r13,rax
	call LB_1804
	mov r8,QWORD [rsp-8+8*1]
	add rsp,8
;; rsp=0 , %128~0'(= a2◂ [ *{ rr{| l |}}] ) %126~2'(= *{ rr{| l |}} ) 
; #23 { 2'(= *{ rr{| l |}} ) 0'(= a2◂ [ *{ rr{| l |}}] ) } ⊢ 0(<2)◂{ 2'(= *{ rr{| l |}} ) 0'(= a2◂ [ *{ rr{| l |}}] ) }
;; rsp=0 , %129~0(<2)◂{ 2'(= *{ rr{| l |}} ) 0'(= a2◂ [ *{ rr{| l |}}] ) } 
; ∎ 0(<2)◂{ 2'(= *{ rr{| l |}} ) 0'(= a2◂ [ *{ rr{| l |}}] ) }
; .mov_ptn2 0(<2)◂{ 2'(= *{ rr{| l |}} ) 0'(= a2◂ [ *{ rr{| l |}}] ) } ⊢ 0'(= a2◂ [ *{ rr{| l |}}] )
	mov r14,r13
; .mov_ptn 0(<2)◂{ 2'(= *{ rr{| l |}} ) 1'(= a2◂ [ *{ rr{| l |}}] ) } ⊢ 0'(= a2◂ [ *{ rr{| l |}}] )
	ALC_RCD 2, rax
	mov r9,rax
	mov rax,r8
	mov QWORD [r9+8+8*0],rax
	mov rax,r14
	mov QWORD [r9+8+8*1],rax
	mov rax,r9
	mov BYTE [rax+6],0
	mov r13,rax
	ret
LB_1805:
;; ?. 0'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 1(<2)◂{ }
;; rsp=0 , %125~1'(= a2◂ [ *{ rr{| l |}}] ) 
; ∎ 1'(= a2◂ [ *{ rr{| l |}}] )
; .mov_ptn2 1'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 0'(= a2◂ [ *{ rr{| l |}}] )
; .mov_ptn 1'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 0'(= a2◂ [ *{ rr{| l |}}] )
	mov rax,r14
	mov r13,rax
	ret
LB_1800: ;; #196 { 0'(= a35◂ [ *{ }] ) 1'(= a35◂ [ *{ }] ) } ⊢ 0'(= a35◂ [ *{ *{ }*{ }}] ) : ({ _t35◂{ } _t35◂{ } }→_t35◂{ { } { } })
;; rsp=0 , %1134~1'(= a35◂ [ *{ }] ) %1133~0'(= a35◂ [ *{ }] ) 
;; ? 0'(= a35◂ [ *{ }] ) ⊢ 0(<2)◂0'(= *{ } )
	mov rdi,r13
	cmp BYTE [rdi+6],0
	jnz LB_1801
;; rsp=0 , %1136~0'(= *{ } ) %1134~1'(= a35◂ [ *{ }] ) 
;; ? 1'(= a35◂ [ *{ }] ) ⊢ 0(<2)◂1'(= *{ } )
	mov rdi,r14
	cmp BYTE [rdi+6],0
	jnz LB_1802
;; rsp=0 , %1138~1'(= *{ } ) %1136~0'(= *{ } ) 
; #195 { 0'(= *{ } ) 1'(= *{ } ) } ⊢ 0(<2)◂{ 0'(= *{ } ) 1'(= *{ } ) }
;; rsp=0 , %1139~0(<2)◂{ 0'(= *{ } ) 1'(= *{ } ) } 
; ∎ 0(<2)◂{ 0'(= *{ } ) 1'(= *{ } ) }
; .mov_ptn2 0(<2)◂{ 0'(= *{ } ) 1'(= *{ } ) } ⊢ 0'(= a35◂ [ *{ *{ }*{ }}] )
	mov r8,r13
; .mov_ptn 0(<2)◂{ 2'(= *{ } ) 1'(= *{ } ) } ⊢ 0'(= a35◂ [ *{ *{ }*{ }}] )
	ALC_RCD 2, rax
	mov r9,rax
	mov rax,r8
	mov QWORD [r9+8+8*0],rax
	mov rax,r14
	mov QWORD [r9+8+8*1],rax
	mov rax,r9
	mov BYTE [rax+6],0
	mov r13,rax
	ret
LB_1802:
;; ?. 1'(= a35◂ [ *{ }] ) ⊢ 1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] )
	mov QWORD [GBG_VCT+8*0],rdi
	mov r8,QWORD [rdi+8]
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_LN rdi
;; rsp=0 , %1137~2'(= a2◂ [ *{ rr{| l |}}] ) %1136~0'(= *{ } ) 
; #194 2'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] )
;; rsp=0 , %1140~1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] ) %1136~0'(= *{ } ) 
; ∎ 1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] )
; .dlt.ptn 0'(= *{ } )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 0'(= a35◂ [ *{ *{ }*{ }}] )
; .mov_ptn 1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 0'(= a35◂ [ *{ *{ }*{ }}] )
	mov rax,r8
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],1
	mov QWORD [rax+8],rdi
	mov r13,rax
	ret
LB_1801:
;; ?. 0'(= a35◂ [ *{ }] ) ⊢ 1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] )
	mov QWORD [GBG_VCT+8*0],rdi
	mov r8,QWORD [rdi+8]
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_LN rdi
;; rsp=0 , %1135~2'(= a2◂ [ *{ rr{| l |}}] ) %1134~1'(= a35◂ [ *{ }] ) 
;; ? 1'(= a35◂ [ *{ }] ) ⊢ 0(<2)◂1'(= *{ } )
	mov rdi,r14
	cmp BYTE [rdi+6],0
	jnz LB_1803
;; rsp=0 , %1142~1'(= *{ } ) %1135~2'(= a2◂ [ *{ rr{| l |}}] ) 
; #194 2'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] )
;; rsp=0 , %1143~1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] ) %1142~1'(= *{ } ) 
; ∎ 1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] )
; .dlt.ptn 1'(= *{ } )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 0'(= a35◂ [ *{ *{ }*{ }}] )
; .mov_ptn 1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 0'(= a35◂ [ *{ *{ }*{ }}] )
	mov rax,r8
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],1
	mov QWORD [rax+8],rdi
	mov r13,rax
	ret
LB_1803:
;; ?. 1'(= a35◂ [ *{ }] ) ⊢ 1(<2)◂0'(= a2◂ [ *{ rr{| l |}}] )
	mov QWORD [GBG_VCT+8*0],rdi
	mov r13,QWORD [rdi+8]
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_LN rdi
;; rsp=0 , %1141~0'(= a2◂ [ *{ rr{| l |}}] ) %1135~2'(= a2◂ [ *{ rr{| l |}}] ) 
; #55 { 2'(= a2◂ [ *{ rr{| l |}}] ) 0'(= a2◂ [ *{ rr{| l |}}] ) } ⊢ 0'(= a2◂ [ *{ rr{| l |}}] )
; .mov_ptn2 { 2'(= a2◂ [ *{ rr{| l |}}] ) 0'(= a2◂ [ *{ rr{| l |}}] ) } ⊢ { 0'(= a2◂ [ *{ rr{| l |}}] ) 1'(= a2◂ [ *{ rr{| l |}}] ) }
; .mov_ptn 0'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 1'(= a2◂ [ *{ rr{| l |}}] )
	mov rax,r13
	mov r14,rax
; .mov_ptn 2'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 0'(= a2◂ [ *{ rr{| l |}}] )
	mov rax,r8
	mov r13,rax
	call LB_1804
;; rsp=0 , %1144~0'(= a2◂ [ *{ rr{| l |}}] ) 
; #194 0'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 1(<2)◂0'(= a2◂ [ *{ rr{| l |}}] )
;; rsp=0 , %1145~1(<2)◂0'(= a2◂ [ *{ rr{| l |}}] ) 
; ∎ 1(<2)◂0'(= a2◂ [ *{ rr{| l |}}] )
; .mov_ptn2 1(<2)◂0'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 0'(= a35◂ [ *{ *{ }*{ }}] )
	mov r14,r13
; .mov_ptn 1(<2)◂1'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 0'(= a35◂ [ *{ *{ }*{ }}] )
	mov rax,r14
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],1
	mov QWORD [rax+8],rdi
	mov r13,rax
	ret
ETR_219:
	mov r9,0x0000_ffff_ffff_ffff
	and r9,[r13]
	call GRM_219
	ret
GRM_219:
	PUSH_GRM
	jmp LB_1684
LB_1683:
	add r14,1 
LB_1684:
	cmp r14,r9
	jge LB_1685
	JZ_LINE_SPC BYTE [r13+8+r14], LB_1683
LB_1685
	lea rax,[r14+1]
	cmp rax,r9
	jg LB_1688
	jmp LB_1689
LB_1688:
	mov r8,unt_1
	jmp LB_1686
LB_1689:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],10
	jnz LB_1690
	jmp LB_1691
LB_1690:
	mov r8,unt_1
	jmp LB_1686
LB_1691:
	add r14,1
	jmp LB_1687
LB_1686:
	add rsp,0
	jmp LB_1682
LB_1687:
	jmp LB_1693
LB_1692:
	add r14,1 
LB_1693:
	cmp r14,r9
	jge LB_1694
	JZ_LINE_SPC BYTE [r13+8+r14], LB_1692
LB_1694
	call GRM_219
	cmp BYTE [r8+6],0
	jnz LB_1697
	jmp LB_1698
LB_1697:
	jmp LB_1695
LB_1698:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a35◂ [ *{ }] ) ⊢ 8'(= a35◂ [ *{ }] )
; .mov_ptn 2'(= a35◂ [ *{ }] ) ⊢ 8'(= a35◂ [ *{ }] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_1696
LB_1695:
	add rsp,0
	POP_GRM_FAIL
	ret
LB_1696:
	mov QWORD [rsp+8*1],r14
	mov r13,QWORD [rsp+16+8*1]
	mov r14,QWORD [rsp+8*1]
	jmp LB_1699
LB_1699
;; rsp=1 , %1385~1'(= r ) %1384~0'(= r ) %1383~8'(= a35◂ [ *{ }] ) 
; #195 { } ⊢ 0(<2)◂{ }
;; rsp=1 , %1386~0(<2)◂{ } %1385~1'(= r ) %1384~0'(= r ) %1383~8'(= a35◂ [ *{ }] ) 
; #24 0(<2)◂{ } ⊢ 0(<2)◂0(<2)◂{ }
;; rsp=1 , %1387~0(<2)◂0(<2)◂{ } %1385~1'(= r ) %1384~0'(= r ) %1383~8'(= a35◂ [ *{ }] ) 
; ∎ 0(<2)◂0(<2)◂{ }
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 8'(= a35◂ [ *{ }] )
	mov rdi,QWORD [rsp-8+8*1]
	C_PUSH_REGS
	mov r8,rdi
	call LB_1701
	C_POP_REGS
; .mov_ptn2 0(<2)◂0(<2)◂{ } ⊢ 2'(= a3◂ [ a35◂ [ *{ }]] )
; .mov_ptn 0(<2)◂0(<2)◂{ } ⊢ 2'(= a3◂ [ a35◂ [ *{ }]] )
	mov rax,unt 
	mov rax,unt_0
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,8
	jmp LB_1700
LB_1700:
	cmp BYTE [r8+6],0
	jnz LB_1682
	POP_GRM_SCC
	ret
LB_1682:
	RB_GRM
	jmp LB_1713
LB_1712:
	add r14,1 
LB_1713:
	cmp r14,r9
	jge LB_1714
	JZ_LINE_SPC BYTE [r13+8+r14], LB_1712
LB_1714
	lea rax,[r14+2]
	cmp rax,r9
	jg LB_1717
	jmp LB_1718
LB_1717:
	mov r8,unt_1
	jmp LB_1715
LB_1718:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],35
	jnz LB_1719
	cmp BYTE [rdi+1],35
	jnz LB_1719
	jmp LB_1720
LB_1719:
	mov r8,unt_1
	jmp LB_1715
LB_1720:
	add r14,2
	jmp LB_1716
LB_1715:
	add rsp,0
	jmp LB_1711
LB_1716:
	jmp LB_1722
LB_1721:
	add r14,1 
LB_1722:
	cmp r14,r9
	jge LB_1723
	JZ_LINE_SPC BYTE [r13+8+r14], LB_1721
LB_1723
	call GRM_222
	cmp BYTE [r8+6],0
	jnz LB_1726
	jmp LB_1727
LB_1726:
	jmp LB_1724
LB_1727:
	sub rsp,16
; .mov_ptn2 2'(= *{ rr} ) ⊢ { 8'(= r ) 9'(= r ) }
; .mov_ptn 2'(= *{ rr} ) ⊢ { 8'(= r ) 9'(= r ) }
	mov r10, QWORD [r8+8]
	mov QWORD [rsp-8+8*2],r10
	mov r11, QWORD [r8+16]
	mov QWORD [rsp-8+8*1],r11
	jmp LB_1725
LB_1724:
	add rsp,0
	POP_GRM_FAIL
	ret
LB_1725:
	jmp LB_1729
LB_1728:
	add r14,1 
LB_1729:
	cmp r14,r9
	jge LB_1730
	JZ_LINE_SPC BYTE [r13+8+r14], LB_1728
LB_1730
	call GRM_219
	cmp BYTE [r8+6],0
	jnz LB_1733
	jmp LB_1734
LB_1733:
	jmp LB_1731
LB_1734:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a35◂ [ *{ }] ) ⊢ 10'(= a35◂ [ *{ }] )
; .mov_ptn 2'(= a35◂ [ *{ }] ) ⊢ 10'(= a35◂ [ *{ }] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_1732
LB_1731:
	add rsp,16
	POP_GRM_FAIL
	ret
LB_1732:
	mov QWORD [rsp+8*3],r14
	mov r13,QWORD [rsp+16+8*3]
	mov r14,QWORD [rsp+8*3]
	jmp LB_1735
LB_1735
;; rsp=3 , %1391~1'(= r ) %1390~0'(= r ) %1389~10'(= a35◂ [ *{ }] ) %1388~{ 8'(= r ) 9'(= r ) } 
; #195 { } ⊢ 0(<2)◂{ }
;; rsp=3 , %1392~0(<2)◂{ } %1391~1'(= r ) %1390~0'(= r ) %1389~10'(= a35◂ [ *{ }] ) %1388~{ 8'(= r ) 9'(= r ) } 
; #24 0(<2)◂{ } ⊢ 0(<2)◂0(<2)◂{ }
;; rsp=3 , %1393~0(<2)◂0(<2)◂{ } %1391~1'(= r ) %1390~0'(= r ) %1389~10'(= a35◂ [ *{ }] ) %1388~{ 8'(= r ) 9'(= r ) } 
; ∎ 0(<2)◂0(<2)◂{ }
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 10'(= a35◂ [ *{ }] )
	mov rdi,QWORD [rsp-8+8*1]
	C_PUSH_REGS
	mov r8,rdi
	call LB_1701
	C_POP_REGS
; .dlt.ptn { 8'(= r ) 9'(= r ) }
	mov rdi,QWORD [rsp-8+8*3]
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
	mov rdi,QWORD [rsp-8+8*2]
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂0(<2)◂{ } ⊢ 2'(= a3◂ [ a35◂ [ *{ }]] )
; .mov_ptn 0(<2)◂0(<2)◂{ } ⊢ 2'(= a3◂ [ a35◂ [ *{ }]] )
	mov rax,unt 
	mov rax,unt_0
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,24
	jmp LB_1736
LB_1736:
	cmp BYTE [r8+6],0
	jnz LB_1711
	POP_GRM_SCC
	ret
LB_1711:
	RB_GRM
	jmp LB_1739
LB_1738:
	add r14,1 
LB_1739:
	cmp r14,r9
	jge LB_1740
	JZ_LINE_SPC BYTE [r13+8+r14], LB_1738
LB_1740
	lea rax,[r14+2]
	cmp rax,r9
	jg LB_1743
	jmp LB_1744
LB_1743:
	mov r8,unt_1
	jmp LB_1741
LB_1744:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],92
	jnz LB_1745
	cmp BYTE [rdi+1],92
	jnz LB_1745
	jmp LB_1746
LB_1745:
	mov r8,unt_1
	jmp LB_1741
LB_1746:
	add r14,2
	jmp LB_1742
LB_1741:
	add rsp,0
	jmp LB_1737
LB_1742:
	jmp LB_1748
LB_1747:
	add r14,1 
LB_1748:
	cmp r14,r9
	jge LB_1749
	JZ_LINE_SPC BYTE [r13+8+r14], LB_1747
LB_1749
	call GRM_222
	cmp BYTE [r8+6],0
	jnz LB_1752
	jmp LB_1753
LB_1752:
	jmp LB_1750
LB_1753:
	sub rsp,16
; .mov_ptn2 2'(= *{ rr} ) ⊢ { 8'(= r ) 9'(= r ) }
; .mov_ptn 2'(= *{ rr} ) ⊢ { 8'(= r ) 9'(= r ) }
	mov r10, QWORD [r8+8]
	mov QWORD [rsp-8+8*2],r10
	mov r11, QWORD [r8+16]
	mov QWORD [rsp-8+8*1],r11
	jmp LB_1751
LB_1750:
	add rsp,0
	POP_GRM_FAIL
	ret
LB_1751:
	jmp LB_1755
LB_1754:
	add r14,1 
LB_1755:
	cmp r14,r9
	jge LB_1756
	JZ_LINE_SPC BYTE [r13+8+r14], LB_1754
LB_1756
	call GRM_219
	cmp BYTE [r8+6],0
	jnz LB_1759
	jmp LB_1760
LB_1759:
	jmp LB_1757
LB_1760:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a35◂ [ *{ }] ) ⊢ 10'(= a35◂ [ *{ }] )
; .mov_ptn 2'(= a35◂ [ *{ }] ) ⊢ 10'(= a35◂ [ *{ }] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_1758
LB_1757:
	add rsp,16
	POP_GRM_FAIL
	ret
LB_1758:
	mov QWORD [rsp+8*3],r14
	mov r13,QWORD [rsp+16+8*3]
	mov r14,QWORD [rsp+8*3]
	jmp LB_1761
LB_1761
;; rsp=3 , %1397~1'(= r ) %1396~0'(= r ) %1395~10'(= a35◂ [ *{ }] ) %1394~{ 8'(= r ) 9'(= r ) } 
; #195 { } ⊢ 0(<2)◂{ }
;; rsp=3 , %1398~0(<2)◂{ } %1397~1'(= r ) %1396~0'(= r ) %1395~10'(= a35◂ [ *{ }] ) %1394~{ 8'(= r ) 9'(= r ) } 
; #24 0(<2)◂{ } ⊢ 0(<2)◂0(<2)◂{ }
;; rsp=3 , %1399~0(<2)◂0(<2)◂{ } %1397~1'(= r ) %1396~0'(= r ) %1395~10'(= a35◂ [ *{ }] ) %1394~{ 8'(= r ) 9'(= r ) } 
; ∎ 0(<2)◂0(<2)◂{ }
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 10'(= a35◂ [ *{ }] )
	mov rdi,QWORD [rsp-8+8*1]
	C_PUSH_REGS
	mov r8,rdi
	call LB_1701
	C_POP_REGS
; .dlt.ptn { 8'(= r ) 9'(= r ) }
	mov rdi,QWORD [rsp-8+8*3]
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
	mov rdi,QWORD [rsp-8+8*2]
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂0(<2)◂{ } ⊢ 2'(= a3◂ [ a35◂ [ *{ }]] )
; .mov_ptn 0(<2)◂0(<2)◂{ } ⊢ 2'(= a3◂ [ a35◂ [ *{ }]] )
	mov rax,unt 
	mov rax,unt_0
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,24
	jmp LB_1762
LB_1762:
	cmp BYTE [r8+6],0
	jnz LB_1737
	POP_GRM_SCC
	ret
LB_1737:
	RB_GRM
	jmp LB_1765
LB_1764:
	add r14,1 
LB_1765:
	cmp r14,r9
	jge LB_1766
	JZ_LINE_SPC BYTE [r13+8+r14], LB_1764
LB_1766
	lea rax,[r14+2]
	cmp rax,r9
	jg LB_1769
	jmp LB_1770
LB_1769:
	mov r8,unt_1
	jmp LB_1767
LB_1770:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],92
	jnz LB_1771
	cmp BYTE [rdi+1],91
	jnz LB_1771
	jmp LB_1772
LB_1771:
	mov r8,unt_1
	jmp LB_1767
LB_1772:
	add r14,2
	jmp LB_1768
LB_1767:
	add rsp,0
	jmp LB_1763
LB_1768:
	PUSH_GRM
	jmp LB_1776
LB_1775:
	add r14,1 
LB_1776:
	cmp r14,r9
	jge LB_1777
	JZ_LINE_SPC BYTE [r13+8+r14], LB_1775
LB_1777
	lea rax,[r14+1]
	cmp rax,r9
	jg LB_1780
	jmp LB_1781
LB_1780:
	mov r8,unt_1
	jmp LB_1778
LB_1781:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],10
	jnz LB_1782
	jmp LB_1783
LB_1782:
	mov r8,unt_1
	jmp LB_1778
LB_1783:
	add r14,1
	jmp LB_1779
LB_1778:
	add rsp,0
	jmp LB_1774
LB_1779:
	jmp LB_1785
LB_1784:
	add r14,1 
LB_1785:
	cmp r14,r9
	jge LB_1786
	JZ_LINE_SPC BYTE [r13+8+r14], LB_1784
LB_1786
	call GRM_220
	cmp BYTE [r8+6],0
	jnz LB_1789
	jmp LB_1790
LB_1789:
	jmp LB_1787
LB_1790:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a35◂ [ *{ }] ) ⊢ 8'(= a35◂ [ *{ }] )
; .mov_ptn 2'(= a35◂ [ *{ }] ) ⊢ 8'(= a35◂ [ *{ }] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_1788
LB_1787:
	add rsp,0
	jmp LB_1774
LB_1788:
	jmp LB_1792
LB_1791:
	add r14,1 
LB_1792:
	cmp r14,r9
	jge LB_1793
	JZ_LINE_SPC BYTE [r13+8+r14], LB_1791
LB_1793
	call GRM_219
	cmp BYTE [r8+6],0
	jnz LB_1796
	jmp LB_1797
LB_1796:
	jmp LB_1794
LB_1797:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a35◂ [ *{ }] ) ⊢ 9'(= a35◂ [ *{ }] )
; .mov_ptn 2'(= a35◂ [ *{ }] ) ⊢ 9'(= a35◂ [ *{ }] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_1795
LB_1794:
	add rsp,8
	jmp LB_1774
LB_1795:
	mov QWORD [rsp+8*2],r14
	mov r13,QWORD [rsp+16+8*2]
	mov r14,QWORD [rsp+8*2]
	jmp LB_1798
LB_1798
;; rsp=2 , %1405~1'(= r ) %1404~0'(= r ) %1403~9'(= a35◂ [ *{ }] ) %1402~8'(= a35◂ [ *{ }] ) 
; #196 { 8'(= a35◂ [ *{ }] ) 9'(= a35◂ [ *{ }] ) } ⊢ 2'(= a35◂ [ *{ *{ }*{ }}] )
	sub rsp,16
	mov QWORD [rsp+8*0],r13
	mov QWORD [rsp+8*1],r14
; .mov_ptn2 { 8'(= a35◂ [ *{ }] ) 9'(= a35◂ [ *{ }] ) } ⊢ { 0'(= a35◂ [ *{ }] ) 1'(= a35◂ [ *{ }] ) }
; .mov_ptn 9'(= a35◂ [ *{ }] ) ⊢ 1'(= a35◂ [ *{ }] )
	mov rax,QWORD [rsp-8+8*3]
	mov r14,rax
; .mov_ptn 8'(= a35◂ [ *{ }] ) ⊢ 0'(= a35◂ [ *{ }] )
	mov rax,QWORD [rsp-8+8*4]
	mov r13,rax
	call LB_1800
	mov r14,QWORD [rsp-8+8*2]
	mov r8,r13
	mov r13,QWORD [rsp-8+8*1]
	add rsp,32
;; rsp=0 , %1406~2'(= a35◂ [ *{ *{ }*{ }}] ) %1405~1'(= r ) %1404~0'(= r ) 
;; ? 2'(= a35◂ [ *{ *{ }*{ }}] ) ⊢ 0(<2)◂{ 3'(= *{ } ) 4'(= *{ } ) }
	mov rdi,r8
	cmp BYTE [rdi+6],0
	jnz LB_1806
	mov r9, QWORD [r8+8]
	mov r10, QWORD [r8+16]
	mov QWORD [GBG_VCT+8*0],r8
	mov rdi,QWORD [GBG_VCT+8*0]
	mov rax,[SS_RCD_2_TOP]
	mov QWORD [rdi],rax 
	mov QWORD [SS_RCD_2_TOP],rdi
;; rsp=0 , %1409~4'(= *{ } ) %1408~3'(= *{ } ) %1405~1'(= r ) %1404~0'(= r ) 
; #195 { } ⊢ 0(<2)◂{ }
;; rsp=0 , %1410~0(<2)◂{ } %1409~4'(= *{ } ) %1408~3'(= *{ } ) %1405~1'(= r ) %1404~0'(= r ) 
; #24 0(<2)◂{ } ⊢ 0(<2)◂0(<2)◂{ }
;; rsp=0 , %1411~0(<2)◂0(<2)◂{ } %1409~4'(= *{ } ) %1408~3'(= *{ } ) %1405~1'(= r ) %1404~0'(= r ) 
; ∎ 0(<2)◂0(<2)◂{ }
; .dlt.ptn 4'(= *{ } )
	mov rdi,r10
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 3'(= *{ } )
	mov rdi,r9
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂0(<2)◂{ } ⊢ 2'(= a3◂ [ a35◂ [ *{ }]] )
; .mov_ptn 0(<2)◂0(<2)◂{ } ⊢ 2'(= a3◂ [ a35◂ [ *{ }]] )
	mov rax,unt 
	mov rax,unt_0
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	jmp LB_1799
LB_1806:
;; ?. 2'(= a35◂ [ *{ *{ }*{ }}] ) ⊢ 1(<2)◂3'(= a2◂ [ *{ rr{| l |}}] )
	mov QWORD [GBG_VCT+8*0],rdi
	mov r9,QWORD [rdi+8]
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_LN rdi
;; rsp=0 , %1407~3'(= a2◂ [ *{ rr{| l |}}] ) %1405~1'(= r ) %1404~0'(= r ) 
; #198 3'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 2'(= {| l |} )
	sub rsp,16
	mov QWORD [rsp+8*0],r13
	mov QWORD [rsp+8*1],r14
; .mov_ptn2 3'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 0'(= a2◂ [ *{ rr{| l |}}] )
; .mov_ptn 3'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 0'(= a2◂ [ *{ rr{| l |}}] )
	mov rax,r9
	mov r13,rax
	call ETR_198
	mov r14,QWORD [rsp-8+8*2]
	mov r8,r13
	mov r13,QWORD [rsp-8+8*1]
	add rsp,16
;; rsp=0 , %1412~2'(= {| l |} ) %1405~1'(= r ) %1404~0'(= r ) 
; #10 2'(= {| l |} ) ⊢ 2'(= {| l |} )
	mov rdi,fmt_emt
	call emt_stg
	mov rdi,r8
	C_PUSH_REGS
	mov r8,rdi
	mov rdi,r8
	call emt_s8
	C_POP_REGS
	mov rdi,fmt_nl
	call emt_stg
	jmp LB_1807
LB_1807:
;; rsp=0 , %1413~2'(= {| l |} ) %1405~1'(= r ) %1404~0'(= r ) 
	mov rdi,LB_1808
	call emt_stg 
	jmp err
LB_1799:
	cmp BYTE [r8+6],0
	jnz LB_1774
	POP_GRM_SCC
	jmp LB_1773
LB_1774:
	RB_GRM
	mov QWORD [rsp+8*0],r14
	mov r13,QWORD [rsp+16+8*0]
	mov r14,QWORD [rsp+8*0]
	jmp LB_1810
LB_1810
;; rsp=0 , %1415~1'(= r ) %1414~0'(= r ) 
; » _^ .. ⊢ ..
; .. //
	mov rdi,0
	sub rsp,128
	push rdi 
	lea rdi,[rsp+8]
	mov rdx,r13
	mov rsi,fmt_d
 xor rax,rax
	C_CALL_SF sprintf
	pop rdi
	add rdi,rax 
	push rax 
	sub rsp,128
	push rdi 
	lea rdi,[rsp+8]
	mov rdx,r14
	mov rsi,fmt_d
 xor rax,rax
	C_CALL_SF sprintf
	pop rdi
	add rdi,rax 
	push rax 
	add rdi,11
	push rdi 
	call mlc_s8
	pop rdi
	mov r8,rax
	lea rdi,[rax+7+rdi]
	std 
	mov QWORD [tmp],rcx 
	lea rsi,[LB_1812+2-1]
	mov rcx,2
	rep movsb
	pop rcx
	lea rsi,[rsp+rcx-1]
	rep movsb
	add rsp,128
	lea rsi,[LB_1813+1-1]
	mov rcx,1
	rep movsb
	pop rcx
	lea rsi,[rsp+rcx-1]
	rep movsb
	add rsp,128
	lea rsi,[LB_1814+8-1]
	mov rcx,8
	rep movsb
	mov rcx,QWORD [tmp] 
;; rsp=0 , %1418~2'(= {| l |} ) %1417~1'(= r ) %1416~0'(= r ) 
; #10 2'(= {| l |} ) ⊢ 2'(= {| l |} )
	mov rdi,fmt_emt
	call emt_stg
	mov rdi,r8
	C_PUSH_REGS
	mov r8,rdi
	mov rdi,r8
	call emt_s8
	C_POP_REGS
	mov rdi,fmt_nl
	call emt_stg
	jmp LB_1815
LB_1815:
;; rsp=0 , %1419~2'(= {| l |} ) %1417~1'(= r ) %1416~0'(= r ) 
	mov rdi,LB_1816
	call emt_stg 
	jmp err
LB_1811:
	cmp BYTE [r8+6],0
	jnz LB_1809
	POP_GRM_SCC
	jmp LB_1773
LB_1809:
	POP_GRM_FAIL 
	jmp LB_1773
LB_1773:
	cmp BYTE [r8+6],0
	jnz LB_1817
	jmp LB_1818
LB_1817:
	add rsp,0
	POP_GRM_FAIL
	ret
LB_1818:
	mov QWORD [rsp+8*0],r14
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi 
; .mov_ptn2 2'(= a35◂ [ *{ }] ) ⊢ 3'(= a35◂ [ *{ }] )
	mov r10,r9
; .mov_ptn 2'(= a35◂ [ *{ }] ) ⊢ 3'(= a35◂ [ *{ }] )
	mov rax,r8
	mov r9,rax
	mov r13,QWORD [rsp+16+8*0]
	mov r14,QWORD [rsp+8*0]
	jmp LB_1819
LB_1819
;; rsp=0 , %1420~3'(= a35◂ [ *{ }] ) %1401~1'(= r ) %1400~0'(= r ) 
; #24 3'(= a35◂ [ *{ }] ) ⊢ 0(<2)◂3'(= a35◂ [ *{ }] )
;; rsp=0 , %1421~0(<2)◂3'(= a35◂ [ *{ }] ) %1401~1'(= r ) %1400~0'(= r ) 
; ∎ 0(<2)◂3'(= a35◂ [ *{ }] )
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂3'(= a35◂ [ *{ }] ) ⊢ 2'(= a3◂ [ a35◂ [ *{ }]] )
; .mov_ptn 0(<2)◂3'(= a35◂ [ *{ }] ) ⊢ 2'(= a3◂ [ a35◂ [ *{ }]] )
	mov rax,r9
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	jmp LB_1820
LB_1820:
	cmp BYTE [r8+6],0
	jnz LB_1763
	POP_GRM_SCC
	ret
LB_1763:
	RB_GRM
	mov QWORD [rsp+8*0],r14
	mov r13,QWORD [rsp+16+8*0]
	mov r14,QWORD [rsp+8*0]
	jmp LB_1822
LB_1822
;; rsp=0 , %1423~1'(= r ) %1422~0'(= r ) 
; #195 { } ⊢ 0(<2)◂{ }
;; rsp=0 , %1424~0(<2)◂{ } %1423~1'(= r ) %1422~0'(= r ) 
; #24 0(<2)◂{ } ⊢ 0(<2)◂0(<2)◂{ }
;; rsp=0 , %1425~0(<2)◂0(<2)◂{ } %1423~1'(= r ) %1422~0'(= r ) 
; ∎ 0(<2)◂0(<2)◂{ }
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂0(<2)◂{ } ⊢ 2'(= a3◂ [ a35◂ [ *{ }]] )
; .mov_ptn 0(<2)◂0(<2)◂{ } ⊢ 2'(= a3◂ [ a35◂ [ *{ }]] )
	mov rax,unt 
	mov rax,unt_0
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	jmp LB_1823
LB_1823:
	cmp BYTE [r8+6],0
	jnz LB_1821
	POP_GRM_SCC
	ret
LB_1821:
	POP_GRM_FAIL 
	ret
ETR_220:
	mov r9,0x0000_ffff_ffff_ffff
	and r9,[r13]
	call GRM_220
	ret
GRM_220:
	PUSH_GRM
	jmp LB_1826
LB_1825:
	add r14,1 
LB_1826:
	cmp r14,r9
	jge LB_1827
	JZ_LINE_SPC BYTE [r13+8+r14], LB_1825
LB_1827
	lea rax,[r14+2]
	cmp rax,r9
	jg LB_1830
	jmp LB_1831
LB_1830:
	mov r8,unt_1
	jmp LB_1828
LB_1831:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],92
	jnz LB_1832
	cmp BYTE [rdi+1],91
	jnz LB_1832
	jmp LB_1833
LB_1832:
	mov r8,unt_1
	jmp LB_1828
LB_1833:
	add r14,2
	jmp LB_1829
LB_1828:
	add rsp,0
	jmp LB_1824
LB_1829:
	PUSH_GRM
	jmp LB_1837
LB_1836:
	add r14,1 
LB_1837:
	cmp r14,r9
	jge LB_1838
	JZ_LINE_SPC BYTE [r13+8+r14], LB_1836
LB_1838
	lea rax,[r14+1]
	cmp rax,r9
	jg LB_1841
	jmp LB_1842
LB_1841:
	mov r8,unt_1
	jmp LB_1839
LB_1842:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],10
	jnz LB_1843
	jmp LB_1844
LB_1843:
	mov r8,unt_1
	jmp LB_1839
LB_1844:
	add r14,1
	jmp LB_1840
LB_1839:
	add rsp,0
	jmp LB_1835
LB_1840:
	jmp LB_1846
LB_1845:
	add r14,1 
LB_1846:
	cmp r14,r9
	jge LB_1847
	JZ_LINE_SPC BYTE [r13+8+r14], LB_1845
LB_1847
	call GRM_220
	cmp BYTE [r8+6],0
	jnz LB_1850
	jmp LB_1851
LB_1850:
	jmp LB_1848
LB_1851:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a35◂ [ *{ }] ) ⊢ 8'(= a35◂ [ *{ }] )
; .mov_ptn 2'(= a35◂ [ *{ }] ) ⊢ 8'(= a35◂ [ *{ }] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_1849
LB_1848:
	add rsp,0
	jmp LB_1835
LB_1849:
	jmp LB_1853
LB_1852:
	add r14,1 
LB_1853:
	cmp r14,r9
	jge LB_1854
	JZ_LINE_SPC BYTE [r13+8+r14], LB_1852
LB_1854
	call GRM_220
	cmp BYTE [r8+6],0
	jnz LB_1857
	jmp LB_1858
LB_1857:
	jmp LB_1855
LB_1858:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a35◂ [ *{ }] ) ⊢ 9'(= a35◂ [ *{ }] )
; .mov_ptn 2'(= a35◂ [ *{ }] ) ⊢ 9'(= a35◂ [ *{ }] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_1856
LB_1855:
	add rsp,8
	jmp LB_1835
LB_1856:
	mov QWORD [rsp+8*2],r14
	mov r13,QWORD [rsp+16+8*2]
	mov r14,QWORD [rsp+8*2]
	jmp LB_1859
LB_1859
;; rsp=2 , %1431~1'(= r ) %1430~0'(= r ) %1429~9'(= a35◂ [ *{ }] ) %1428~8'(= a35◂ [ *{ }] ) 
; #196 { 8'(= a35◂ [ *{ }] ) 9'(= a35◂ [ *{ }] ) } ⊢ 2'(= a35◂ [ *{ *{ }*{ }}] )
	sub rsp,16
	mov QWORD [rsp+8*0],r13
	mov QWORD [rsp+8*1],r14
; .mov_ptn2 { 8'(= a35◂ [ *{ }] ) 9'(= a35◂ [ *{ }] ) } ⊢ { 0'(= a35◂ [ *{ }] ) 1'(= a35◂ [ *{ }] ) }
; .mov_ptn 9'(= a35◂ [ *{ }] ) ⊢ 1'(= a35◂ [ *{ }] )
	mov rax,QWORD [rsp-8+8*3]
	mov r14,rax
; .mov_ptn 8'(= a35◂ [ *{ }] ) ⊢ 0'(= a35◂ [ *{ }] )
	mov rax,QWORD [rsp-8+8*4]
	mov r13,rax
	call LB_1800
	mov r14,QWORD [rsp-8+8*2]
	mov r8,r13
	mov r13,QWORD [rsp-8+8*1]
	add rsp,32
;; rsp=0 , %1432~2'(= a35◂ [ *{ *{ }*{ }}] ) %1431~1'(= r ) %1430~0'(= r ) 
;; ? 2'(= a35◂ [ *{ *{ }*{ }}] ) ⊢ 0(<2)◂{ 3'(= *{ } ) 4'(= *{ } ) }
	mov rdi,r8
	cmp BYTE [rdi+6],0
	jnz LB_1861
	mov r9, QWORD [r8+8]
	mov r10, QWORD [r8+16]
	mov QWORD [GBG_VCT+8*0],r8
	mov rdi,QWORD [GBG_VCT+8*0]
	mov rax,[SS_RCD_2_TOP]
	mov QWORD [rdi],rax 
	mov QWORD [SS_RCD_2_TOP],rdi
;; rsp=0 , %1435~4'(= *{ } ) %1434~3'(= *{ } ) %1431~1'(= r ) %1430~0'(= r ) 
; #195 { } ⊢ 0(<2)◂{ }
;; rsp=0 , %1436~0(<2)◂{ } %1435~4'(= *{ } ) %1434~3'(= *{ } ) %1431~1'(= r ) %1430~0'(= r ) 
; #24 0(<2)◂{ } ⊢ 0(<2)◂0(<2)◂{ }
;; rsp=0 , %1437~0(<2)◂0(<2)◂{ } %1435~4'(= *{ } ) %1434~3'(= *{ } ) %1431~1'(= r ) %1430~0'(= r ) 
; ∎ 0(<2)◂0(<2)◂{ }
; .dlt.ptn 4'(= *{ } )
	mov rdi,r10
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 3'(= *{ } )
	mov rdi,r9
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂0(<2)◂{ } ⊢ 2'(= a3◂ [ a35◂ [ *{ }]] )
; .mov_ptn 0(<2)◂0(<2)◂{ } ⊢ 2'(= a3◂ [ a35◂ [ *{ }]] )
	mov rax,unt 
	mov rax,unt_0
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	jmp LB_1860
LB_1861:
;; ?. 2'(= a35◂ [ *{ *{ }*{ }}] ) ⊢ 1(<2)◂3'(= a2◂ [ *{ rr{| l |}}] )
	mov QWORD [GBG_VCT+8*0],rdi
	mov r9,QWORD [rdi+8]
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_LN rdi
;; rsp=0 , %1433~3'(= a2◂ [ *{ rr{| l |}}] ) %1431~1'(= r ) %1430~0'(= r ) 
; #198 3'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 2'(= {| l |} )
	sub rsp,16
	mov QWORD [rsp+8*0],r13
	mov QWORD [rsp+8*1],r14
; .mov_ptn2 3'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 0'(= a2◂ [ *{ rr{| l |}}] )
; .mov_ptn 3'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 0'(= a2◂ [ *{ rr{| l |}}] )
	mov rax,r9
	mov r13,rax
	call ETR_198
	mov r14,QWORD [rsp-8+8*2]
	mov r8,r13
	mov r13,QWORD [rsp-8+8*1]
	add rsp,16
;; rsp=0 , %1438~2'(= {| l |} ) %1431~1'(= r ) %1430~0'(= r ) 
; #10 2'(= {| l |} ) ⊢ 2'(= {| l |} )
	mov rdi,fmt_emt
	call emt_stg
	mov rdi,r8
	C_PUSH_REGS
	mov r8,rdi
	mov rdi,r8
	call emt_s8
	C_POP_REGS
	mov rdi,fmt_nl
	call emt_stg
	jmp LB_1862
LB_1862:
;; rsp=0 , %1439~2'(= {| l |} ) %1431~1'(= r ) %1430~0'(= r ) 
	mov rdi,LB_1863
	call emt_stg 
	jmp err
LB_1860:
	cmp BYTE [r8+6],0
	jnz LB_1835
	POP_GRM_SCC
	jmp LB_1834
LB_1835:
	RB_GRM
	mov QWORD [rsp+8*0],r14
	mov r13,QWORD [rsp+16+8*0]
	mov r14,QWORD [rsp+8*0]
	jmp LB_1865
LB_1865
;; rsp=0 , %1441~1'(= r ) %1440~0'(= r ) 
; #22 { } ⊢ 1(<2)◂{ }
;; rsp=0 , %1442~1(<2)◂{ } %1441~1'(= r ) %1440~0'(= r ) 
; $ %[ "blk_cmt 0" ] ⊢ %[ "blk_cmt 0" ]
;; rsp=0 , %1443~%[ "blk_cmt 0" ] %1442~1(<2)◂{ } %1441~1'(= r ) %1440~0'(= r ) 
; #23 { { 0'(= r ) 1'(= r ) %[ "blk_cmt 0" ] } 1(<2)◂{ } } ⊢ 0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "blk_cmt 0" ] } 1(<2)◂{ } }
;; rsp=0 , %1444~0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "blk_cmt 0" ] } 1(<2)◂{ } } 
; #194 0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "blk_cmt 0" ] } 1(<2)◂{ } } ⊢ 1(<2)◂0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "blk_cmt 0" ] } 1(<2)◂{ } }
;; rsp=0 , %1445~1(<2)◂0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "blk_cmt 0" ] } 1(<2)◂{ } } 
; #24 1(<2)◂0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "blk_cmt 0" ] } 1(<2)◂{ } } ⊢ 0(<2)◂1(<2)◂0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "blk_cmt 0" ] } 1(<2)◂{ } }
;; rsp=0 , %1446~0(<2)◂1(<2)◂0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "blk_cmt 0" ] } 1(<2)◂{ } } 
; ∎ 0(<2)◂1(<2)◂0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "blk_cmt 0" ] } 1(<2)◂{ } }
; .mov_ptn2 0(<2)◂1(<2)◂0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "blk_cmt 0" ] } 1(<2)◂{ } } ⊢ 2'(= a3◂ [ a35◂ [ *{ }]] )
; .mov_ptn 0(<2)◂1(<2)◂0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "blk_cmt 0" ] } 1(<2)◂{ } } ⊢ 2'(= a3◂ [ a35◂ [ *{ }]] )
	ALC_RCD 2, rax
	mov r9,rax
	ALC_RCD 3, rax
	mov r10,rax
	mov rax,r13
	mov QWORD [r10+8+8*0],rax
	mov rax,r14
	mov QWORD [r10+8+8*1],rax
	mov rsi,1  
	mov rdi,24
	xor rax,rax 
	C_CALL_SF calloc
	mov QWORD [rax],9
	mov BYTE [rax+8+0],98
	mov BYTE [rax+8+1],108
	mov BYTE [rax+8+2],107
	mov BYTE [rax+8+3],95
	mov BYTE [rax+8+4],99
	mov BYTE [rax+8+5],109
	mov BYTE [rax+8+6],116
	mov BYTE [rax+8+7],32
	mov BYTE [rax+8+8],48
	mov QWORD [r10+8+8*2],rax
	mov rax,r10
	mov QWORD [r9+8+8*0],rax
	mov rax,unt 
	mov rax,unt_1
	mov QWORD [r9+8+8*1],rax
	mov rax,r9
	mov BYTE [rax+6],0
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],1
	mov QWORD [rax+8],rdi
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	jmp LB_1866
LB_1866:
	cmp BYTE [r8+6],0
	jnz LB_1864
	POP_GRM_SCC
	jmp LB_1834
LB_1864:
	POP_GRM_FAIL 
	jmp LB_1834
LB_1834:
	cmp BYTE [r8+6],0
	jnz LB_1867
	jmp LB_1868
LB_1867:
	add rsp,0
	POP_GRM_FAIL
	ret
LB_1868:
	mov QWORD [rsp+8*0],r14
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi 
; .mov_ptn2 2'(= a35◂ [ *{ }] ) ⊢ 3'(= a35◂ [ *{ }] )
	mov r10,r9
; .mov_ptn 2'(= a35◂ [ *{ }] ) ⊢ 3'(= a35◂ [ *{ }] )
	mov rax,r8
	mov r9,rax
	mov r13,QWORD [rsp+16+8*0]
	mov r14,QWORD [rsp+8*0]
	jmp LB_1869
LB_1869
;; rsp=0 , %1447~3'(= a35◂ [ *{ }] ) %1427~1'(= r ) %1426~0'(= r ) 
; #24 3'(= a35◂ [ *{ }] ) ⊢ 0(<2)◂3'(= a35◂ [ *{ }] )
;; rsp=0 , %1448~0(<2)◂3'(= a35◂ [ *{ }] ) %1427~1'(= r ) %1426~0'(= r ) 
; ∎ 0(<2)◂3'(= a35◂ [ *{ }] )
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂3'(= a35◂ [ *{ }] ) ⊢ 2'(= a3◂ [ a35◂ [ *{ }]] )
; .mov_ptn 0(<2)◂3'(= a35◂ [ *{ }] ) ⊢ 2'(= a3◂ [ a35◂ [ *{ }]] )
	mov rax,r9
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	jmp LB_1870
LB_1870:
	cmp BYTE [r8+6],0
	jnz LB_1824
	POP_GRM_SCC
	ret
LB_1824:
	RB_GRM
	jmp LB_1873
LB_1872:
	add r14,1 
LB_1873:
	cmp r14,r9
	jge LB_1874
	JZ_LINE_SPC BYTE [r13+8+r14], LB_1872
LB_1874
	lea rax,[r14+2]
	cmp rax,r9
	jg LB_1877
	jmp LB_1878
LB_1877:
	mov r8,unt_1
	jmp LB_1875
LB_1878:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],92
	jnz LB_1879
	cmp BYTE [rdi+1],93
	jnz LB_1879
	jmp LB_1880
LB_1879:
	mov r8,unt_1
	jmp LB_1875
LB_1880:
	add r14,2
	jmp LB_1876
LB_1875:
	add rsp,0
	jmp LB_1871
LB_1876:
	PUSH_GRM
	jmp LB_1884
LB_1883:
	add r14,1 
LB_1884:
	cmp r14,r9
	jge LB_1885
	JZ_LINE_SPC BYTE [r13+8+r14], LB_1883
LB_1885
	lea rax,[r14+1]
	cmp rax,r9
	jg LB_1888
	jmp LB_1889
LB_1888:
	mov r8,unt_1
	jmp LB_1886
LB_1889:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],10
	jnz LB_1890
	jmp LB_1891
LB_1890:
	mov r8,unt_1
	jmp LB_1886
LB_1891:
	add r14,1
	jmp LB_1887
LB_1886:
	add rsp,0
	jmp LB_1882
LB_1887:
	mov QWORD [rsp+8*0],r14
	mov r13,QWORD [rsp+16+8*0]
	mov r14,QWORD [rsp+8*0]
	jmp LB_1892
LB_1892
;; rsp=0 , %1452~1'(= r ) %1451~0'(= r ) 
; #24 { } ⊢ 0(<2)◂{ }
;; rsp=0 , %1453~0(<2)◂{ } %1452~1'(= r ) %1451~0'(= r ) 
; ∎ 0(<2)◂{ }
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂{ } ⊢ 2'(= a3◂ [ *{ }] )
; .mov_ptn 0(<2)◂{ } ⊢ 2'(= a3◂ [ *{ }] )
	mov rax,unt 
	mov rax,unt_0
	mov r8,rax
	jmp LB_1893
LB_1893:
	cmp BYTE [r8+6],0
	jnz LB_1882
	POP_GRM_SCC
	jmp LB_1881
LB_1882:
	RB_GRM
	jmp LB_1896
LB_1895:
	add r14,1 
LB_1896:
	cmp r14,r9
	jge LB_1897
	JZ_LINE_SPC BYTE [r13+8+r14], LB_1895
LB_1897
	cmp r14,r9
	jge LB_1900
	jmp LB_1901
LB_1900:
	mov r8,unt_1 
	jmp LB_1898
LB_1901:
	movzx rdi,BYTE [r13+8+r14]
	push rdi 
	add r14,1 
	jmp LB_1899
LB_1898:
	add rsp,0
	POP_GRM_FAIL
	jmp LB_1881
LB_1899:
	mov QWORD [rsp+8*1],r14
	mov r13,QWORD [rsp+16+8*1]
	mov r14,QWORD [rsp+8*1]
	jmp LB_1902
LB_1902
;; rsp=1 , %1456~1'(= r ) %1455~0'(= r ) %1454~8'(= r ) 
; #25 { } ⊢ 1(<2)◂{ }
;; rsp=1 , %1457~1(<2)◂{ } %1456~1'(= r ) %1455~0'(= r ) %1454~8'(= r ) 
; ∎ 1(<2)◂{ }
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 8'(= r )
	mov rdi,QWORD [rsp-8+8*1]
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 1(<2)◂{ } ⊢ 2'(= a3◂ [ *{ }] )
; .mov_ptn 1(<2)◂{ } ⊢ 2'(= a3◂ [ *{ }] )
	mov rax,unt 
	mov rax,unt_1
	mov r8,rax
	add rsp,8
	jmp LB_1903
LB_1903:
	cmp BYTE [r8+6],0
	jnz LB_1894
	POP_GRM_SCC
	jmp LB_1881
LB_1894:
	RB_GRM
	mov QWORD [rsp+8*0],r14
	mov r13,QWORD [rsp+16+8*0]
	mov r14,QWORD [rsp+8*0]
	jmp LB_1905
LB_1905
;; rsp=0 , %1459~1'(= r ) %1458~0'(= r ) 
; #24 { } ⊢ 0(<2)◂{ }
;; rsp=0 , %1460~0(<2)◂{ } %1459~1'(= r ) %1458~0'(= r ) 
; ∎ 0(<2)◂{ }
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂{ } ⊢ 2'(= a3◂ [ *{ }] )
; .mov_ptn 0(<2)◂{ } ⊢ 2'(= a3◂ [ *{ }] )
	mov rax,unt 
	mov rax,unt_0
	mov r8,rax
	jmp LB_1906
LB_1906:
	cmp BYTE [r8+6],0
	jnz LB_1904
	POP_GRM_SCC
	jmp LB_1881
LB_1904:
	POP_GRM_FAIL 
	jmp LB_1881
LB_1881:
	cmp BYTE [r8+6],0
	jnz LB_1907
	jmp LB_1908
LB_1907:
	add rsp,0
	POP_GRM_FAIL
	ret
LB_1908:
	mov QWORD [rsp+8*0],r14
; .mov_ptn2 2'(= *{ } ) ⊢ { }
; .mov_ptn 2'(= *{ } ) ⊢ { }
	mov r13,QWORD [rsp+16+8*0]
	mov r14,QWORD [rsp+8*0]
	jmp LB_1909
LB_1909
;; rsp=0 , %1461~{ } %1450~1'(= r ) %1449~0'(= r ) 
; #195 { } ⊢ 0(<2)◂{ }
;; rsp=0 , %1462~0(<2)◂{ } %1461~{ } %1450~1'(= r ) %1449~0'(= r ) 
; #24 0(<2)◂{ } ⊢ 0(<2)◂0(<2)◂{ }
;; rsp=0 , %1463~0(<2)◂0(<2)◂{ } %1461~{ } %1450~1'(= r ) %1449~0'(= r ) 
; ∎ 0(<2)◂0(<2)◂{ }
; .dlt.ptn { }
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂0(<2)◂{ } ⊢ 2'(= a3◂ [ a35◂ [ *{ }]] )
; .mov_ptn 0(<2)◂0(<2)◂{ } ⊢ 2'(= a3◂ [ a35◂ [ *{ }]] )
	mov rax,unt 
	mov rax,unt_0
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	jmp LB_1910
LB_1910:
	cmp BYTE [r8+6],0
	jnz LB_1871
	POP_GRM_SCC
	ret
LB_1871:
	RB_GRM
	jmp LB_1913
LB_1912:
	add r14,1 
LB_1913:
	cmp r14,r9
	jge LB_1914
	JZ_LINE_SPC BYTE [r13+8+r14], LB_1912
LB_1914
	call GRM_221
	cmp BYTE [r8+6],0
	jnz LB_1917
	jmp LB_1918
LB_1917:
	jmp LB_1915
LB_1918:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a35◂ [ *{ }] ) ⊢ 8'(= a35◂ [ *{ }] )
; .mov_ptn 2'(= a35◂ [ *{ }] ) ⊢ 8'(= a35◂ [ *{ }] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_1916
LB_1915:
	add rsp,0
	jmp LB_1911
LB_1916:
	mov QWORD [rsp+8*1],r14
	mov r13,QWORD [rsp+16+8*1]
	mov r14,QWORD [rsp+8*1]
	jmp LB_1919
LB_1919
;; rsp=1 , %1466~1'(= r ) %1465~0'(= r ) %1464~8'(= a35◂ [ *{ }] ) 
; #24 8'(= a35◂ [ *{ }] ) ⊢ 0(<2)◂8'(= a35◂ [ *{ }] )
;; rsp=1 , %1467~0(<2)◂8'(= a35◂ [ *{ }] ) %1466~1'(= r ) %1465~0'(= r ) 
; ∎ 0(<2)◂8'(= a35◂ [ *{ }] )
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂8'(= a35◂ [ *{ }] ) ⊢ 2'(= a3◂ [ a35◂ [ *{ }]] )
; .mov_ptn 0(<2)◂8'(= a35◂ [ *{ }] ) ⊢ 2'(= a3◂ [ a35◂ [ *{ }]] )
	mov rax,QWORD [rsp-8+8*1]
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,8
	jmp LB_1920
LB_1920:
	cmp BYTE [r8+6],0
	jnz LB_1911
	POP_GRM_SCC
	ret
LB_1911:
	RB_GRM
	mov QWORD [rsp+8*0],r14
	mov r13,QWORD [rsp+16+8*0]
	mov r14,QWORD [rsp+8*0]
	jmp LB_1922
LB_1922
;; rsp=0 , %1469~1'(= r ) %1468~0'(= r ) 
; #22 { } ⊢ 1(<2)◂{ }
;; rsp=0 , %1470~1(<2)◂{ } %1469~1'(= r ) %1468~0'(= r ) 
; $ %[ "blk_cmt 1" ] ⊢ %[ "blk_cmt 1" ]
;; rsp=0 , %1471~%[ "blk_cmt 1" ] %1470~1(<2)◂{ } %1469~1'(= r ) %1468~0'(= r ) 
; #23 { { 0'(= r ) 1'(= r ) %[ "blk_cmt 1" ] } 1(<2)◂{ } } ⊢ 0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "blk_cmt 1" ] } 1(<2)◂{ } }
;; rsp=0 , %1472~0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "blk_cmt 1" ] } 1(<2)◂{ } } 
; #194 0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "blk_cmt 1" ] } 1(<2)◂{ } } ⊢ 1(<2)◂0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "blk_cmt 1" ] } 1(<2)◂{ } }
;; rsp=0 , %1473~1(<2)◂0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "blk_cmt 1" ] } 1(<2)◂{ } } 
; #24 1(<2)◂0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "blk_cmt 1" ] } 1(<2)◂{ } } ⊢ 0(<2)◂1(<2)◂0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "blk_cmt 1" ] } 1(<2)◂{ } }
;; rsp=0 , %1474~0(<2)◂1(<2)◂0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "blk_cmt 1" ] } 1(<2)◂{ } } 
; ∎ 0(<2)◂1(<2)◂0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "blk_cmt 1" ] } 1(<2)◂{ } }
; .mov_ptn2 0(<2)◂1(<2)◂0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "blk_cmt 1" ] } 1(<2)◂{ } } ⊢ 2'(= a3◂ [ a35◂ [ *{ }]] )
; .mov_ptn 0(<2)◂1(<2)◂0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "blk_cmt 1" ] } 1(<2)◂{ } } ⊢ 2'(= a3◂ [ a35◂ [ *{ }]] )
	ALC_RCD 2, rax
	mov r9,rax
	ALC_RCD 3, rax
	mov r10,rax
	mov rax,r13
	mov QWORD [r10+8+8*0],rax
	mov rax,r14
	mov QWORD [r10+8+8*1],rax
	mov rsi,1  
	mov rdi,24
	xor rax,rax 
	C_CALL_SF calloc
	mov QWORD [rax],9
	mov BYTE [rax+8+0],98
	mov BYTE [rax+8+1],108
	mov BYTE [rax+8+2],107
	mov BYTE [rax+8+3],95
	mov BYTE [rax+8+4],99
	mov BYTE [rax+8+5],109
	mov BYTE [rax+8+6],116
	mov BYTE [rax+8+7],32
	mov BYTE [rax+8+8],49
	mov QWORD [r10+8+8*2],rax
	mov rax,r10
	mov QWORD [r9+8+8*0],rax
	mov rax,unt 
	mov rax,unt_1
	mov QWORD [r9+8+8*1],rax
	mov rax,r9
	mov BYTE [rax+6],0
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],1
	mov QWORD [rax+8],rdi
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	jmp LB_1923
LB_1923:
	cmp BYTE [r8+6],0
	jnz LB_1921
	POP_GRM_SCC
	ret
LB_1921:
	POP_GRM_FAIL 
	ret
ETR_221:
	mov r9,0x0000_ffff_ffff_ffff
	and r9,[r13]
	call GRM_221
	ret
GRM_221:
	PUSH_GRM
	jmp LB_1926
LB_1925:
	add r14,1 
LB_1926:
	cmp r14,r9
	jge LB_1927
	JZ_LINE_SPC BYTE [r13+8+r14], LB_1925
LB_1927
	lea rax,[r14+1]
	cmp rax,r9
	jg LB_1930
	jmp LB_1931
LB_1930:
	mov r8,unt_1
	jmp LB_1928
LB_1931:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],10
	jnz LB_1932
	jmp LB_1933
LB_1932:
	mov r8,unt_1
	jmp LB_1928
LB_1933:
	add r14,1
	jmp LB_1929
LB_1928:
	add rsp,0
	jmp LB_1924
LB_1929:
	jmp LB_1935
LB_1934:
	add r14,1 
LB_1935:
	cmp r14,r9
	jge LB_1936
	JZ_LINE_SPC BYTE [r13+8+r14], LB_1934
LB_1936
	call GRM_220
	cmp BYTE [r8+6],0
	jnz LB_1939
	jmp LB_1940
LB_1939:
	jmp LB_1937
LB_1940:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a35◂ [ *{ }] ) ⊢ 8'(= a35◂ [ *{ }] )
; .mov_ptn 2'(= a35◂ [ *{ }] ) ⊢ 8'(= a35◂ [ *{ }] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_1938
LB_1937:
	add rsp,0
	jmp LB_1924
LB_1938:
	mov QWORD [rsp+8*1],r14
	mov r13,QWORD [rsp+16+8*1]
	mov r14,QWORD [rsp+8*1]
	jmp LB_1941
LB_1941
;; rsp=1 , %1477~1'(= r ) %1476~0'(= r ) %1475~8'(= a35◂ [ *{ }] ) 
; #24 8'(= a35◂ [ *{ }] ) ⊢ 0(<2)◂8'(= a35◂ [ *{ }] )
;; rsp=1 , %1478~0(<2)◂8'(= a35◂ [ *{ }] ) %1477~1'(= r ) %1476~0'(= r ) 
; ∎ 0(<2)◂8'(= a35◂ [ *{ }] )
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂8'(= a35◂ [ *{ }] ) ⊢ 2'(= a3◂ [ a35◂ [ *{ }]] )
; .mov_ptn 0(<2)◂8'(= a35◂ [ *{ }] ) ⊢ 2'(= a3◂ [ a35◂ [ *{ }]] )
	mov rax,QWORD [rsp-8+8*1]
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,8
	jmp LB_1942
LB_1942:
	cmp BYTE [r8+6],0
	jnz LB_1924
	POP_GRM_SCC
	ret
LB_1924:
	RB_GRM
	jmp LB_1945
LB_1944:
	add r14,1 
LB_1945:
	cmp r14,r9
	jge LB_1946
	JZ_LINE_SPC BYTE [r13+8+r14], LB_1944
LB_1946
	cmp r14,r9
	jge LB_1949
	jmp LB_1950
LB_1949:
	mov r8,unt_1 
	jmp LB_1947
LB_1950:
	movzx rdi,BYTE [r13+8+r14]
	push rdi 
	add r14,1 
	jmp LB_1948
LB_1947:
	add rsp,0
	jmp LB_1943
LB_1948:
	jmp LB_1952
LB_1951:
	add r14,1 
LB_1952:
	cmp r14,r9
	jge LB_1953
	JZ_LINE_SPC BYTE [r13+8+r14], LB_1951
LB_1953
	call GRM_221
	cmp BYTE [r8+6],0
	jnz LB_1956
	jmp LB_1957
LB_1956:
	jmp LB_1954
LB_1957:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a35◂ [ *{ }] ) ⊢ 9'(= a35◂ [ *{ }] )
; .mov_ptn 2'(= a35◂ [ *{ }] ) ⊢ 9'(= a35◂ [ *{ }] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_1955
LB_1954:
	add rsp,8
	jmp LB_1943
LB_1955:
	mov QWORD [rsp+8*2],r14
	mov r13,QWORD [rsp+16+8*2]
	mov r14,QWORD [rsp+8*2]
	jmp LB_1958
LB_1958
;; rsp=2 , %1482~1'(= r ) %1481~0'(= r ) %1480~9'(= a35◂ [ *{ }] ) %1479~8'(= r ) 
; #24 9'(= a35◂ [ *{ }] ) ⊢ 0(<2)◂9'(= a35◂ [ *{ }] )
;; rsp=2 , %1483~0(<2)◂9'(= a35◂ [ *{ }] ) %1482~1'(= r ) %1481~0'(= r ) %1479~8'(= r ) 
; ∎ 0(<2)◂9'(= a35◂ [ *{ }] )
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 8'(= r )
	mov rdi,QWORD [rsp-8+8*2]
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂9'(= a35◂ [ *{ }] ) ⊢ 2'(= a3◂ [ a35◂ [ *{ }]] )
; .mov_ptn 0(<2)◂9'(= a35◂ [ *{ }] ) ⊢ 2'(= a3◂ [ a35◂ [ *{ }]] )
	mov rax,QWORD [rsp-8+8*1]
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,16
	jmp LB_1959
LB_1959:
	cmp BYTE [r8+6],0
	jnz LB_1943
	POP_GRM_SCC
	ret
LB_1943:
	RB_GRM
	mov QWORD [rsp+8*0],r14
	mov r13,QWORD [rsp+16+8*0]
	mov r14,QWORD [rsp+8*0]
	jmp LB_1961
LB_1961
;; rsp=0 , %1485~1'(= r ) %1484~0'(= r ) 
; $ %[ "line_res_c 0" ] ⊢ %[ "line_res_c 0" ]
;; rsp=0 , %1486~%[ "line_res_c 0" ] %1485~1'(= r ) %1484~0'(= r ) 
; #10 %[ "line_res_c 0" ] ⊢ %[ "line_res_c 0" ]
	mov rdi,fmt_emt
	call emt_stg
	mov rdi,LB_1963
	call emt_stg 
	mov rdi,fmt_nl
	call emt_stg
	jmp LB_1964
LB_1964:
;; rsp=0 , %1487~%[ "line_res_c 0" ] %1485~1'(= r ) %1484~0'(= r ) 
	mov rdi,LB_1965
	call emt_stg 
	jmp err
LB_1962:
	cmp BYTE [r8+6],0
	jnz LB_1960
	POP_GRM_SCC
	ret
LB_1960:
	POP_GRM_FAIL 
	ret
ETR_222:
	mov r9,0x0000_ffff_ffff_ffff
	and r9,[r13]
	call GRM_222
	ret
GRM_222:
	PUSH_GRM
	jmp LB_1968
LB_1967:
	add r14,1 
LB_1968:
	cmp r14,r9
	jge LB_1969
	JZ_LINE_SPC BYTE [r13+8+r14], LB_1967
LB_1969
	lea rax,[r14+1]
	cmp rax,r9
	jg LB_1972
	jmp LB_1973
LB_1972:
	mov r8,unt_1
	jmp LB_1970
LB_1973:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],10
	jnz LB_1974
	jmp LB_1975
LB_1974:
	mov r8,unt_1
	jmp LB_1970
LB_1975:
	add r14,1
	jmp LB_1971
LB_1970:
	add rsp,0
	jmp LB_1966
LB_1971:
	mov QWORD [rsp+8*0],r14
	mov r13,QWORD [rsp+16+8*0]
	mov r14,QWORD [rsp+8*0]
	jmp LB_1976
LB_1976
;; rsp=0 , %1489~1'(= r ) %1488~0'(= r ) 
; #24 { 0'(= r ) 1'(= r ) } ⊢ 0(<2)◂{ 0'(= r ) 1'(= r ) }
;; rsp=0 , %1490~0(<2)◂{ 0'(= r ) 1'(= r ) } 
; ∎ 0(<2)◂{ 0'(= r ) 1'(= r ) }
; .mov_ptn2 0(<2)◂{ 0'(= r ) 1'(= r ) } ⊢ 2'(= a3◂ [ *{ rr}] )
; .mov_ptn 0(<2)◂{ 0'(= r ) 1'(= r ) } ⊢ 2'(= a3◂ [ *{ rr}] )
	ALC_RCD 2, rax
	mov r9,rax
	mov rax,r13
	mov QWORD [r9+8+8*0],rax
	mov rax,r14
	mov QWORD [r9+8+8*1],rax
	mov rax,r9
	mov BYTE [rax+6],0
	mov r8,rax
	jmp LB_1977
LB_1977:
	cmp BYTE [r8+6],0
	jnz LB_1966
	POP_GRM_SCC
	ret
LB_1966:
	RB_GRM
	jmp LB_1980
LB_1979:
	add r14,1 
LB_1980:
	cmp r14,r9
	jge LB_1981
	JZ_LINE_SPC BYTE [r13+8+r14], LB_1979
LB_1981
	cmp r14,r9
	jge LB_1984
	jmp LB_1985
LB_1984:
	mov r8,unt_1 
	jmp LB_1982
LB_1985:
	movzx rdi,BYTE [r13+8+r14]
	push rdi 
	add r14,1 
	jmp LB_1983
LB_1982:
	add rsp,0
	jmp LB_1978
LB_1983:
	jmp LB_1987
LB_1986:
	add r14,1 
LB_1987:
	cmp r14,r9
	jge LB_1988
	JZ_LINE_SPC BYTE [r13+8+r14], LB_1986
LB_1988
	call GRM_222
	cmp BYTE [r8+6],0
	jnz LB_1991
	jmp LB_1992
LB_1991:
	jmp LB_1989
LB_1992:
	sub rsp,16
; .mov_ptn2 2'(= *{ rr} ) ⊢ { 9'(= r ) 10'(= r ) }
; .mov_ptn 2'(= *{ rr} ) ⊢ { 9'(= r ) 10'(= r ) }
	mov r10, QWORD [r8+8]
	mov QWORD [rsp-8+8*2],r10
	mov r11, QWORD [r8+16]
	mov QWORD [rsp-8+8*1],r11
	jmp LB_1990
LB_1989:
	add rsp,8
	jmp LB_1978
LB_1990:
	mov QWORD [rsp+8*3],r14
	mov r13,QWORD [rsp+16+8*3]
	mov r14,QWORD [rsp+8*3]
	jmp LB_1993
LB_1993
;; rsp=3 , %1495~1'(= r ) %1494~0'(= r ) %1493~10'(= r ) %1492~9'(= r ) %1491~8'(= r ) 
; #24 { 0'(= r ) 10'(= r ) } ⊢ 0(<2)◂{ 0'(= r ) 10'(= r ) }
;; rsp=3 , %1496~0(<2)◂{ 0'(= r ) 10'(= r ) } %1495~1'(= r ) %1492~9'(= r ) %1491~8'(= r ) 
; ∎ 0(<2)◂{ 0'(= r ) 10'(= r ) }
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 9'(= r )
	mov rdi,QWORD [rsp-8+8*2]
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 8'(= r )
	mov rdi,QWORD [rsp-8+8*3]
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂{ 0'(= r ) 10'(= r ) } ⊢ 2'(= a3◂ [ *{ rr}] )
; .mov_ptn 0(<2)◂{ 0'(= r ) 10'(= r ) } ⊢ 2'(= a3◂ [ *{ rr}] )
	ALC_RCD 2, rax
	mov r14,rax
	mov rax,r13
	mov QWORD [r14+8+8*0],rax
	mov rax,QWORD [rsp-8+8*1]
	mov QWORD [r14+8+8*1],rax
	mov rax,r14
	mov BYTE [rax+6],0
	mov r8,rax
	add rsp,24
	jmp LB_1994
LB_1994:
	cmp BYTE [r8+6],0
	jnz LB_1978
	POP_GRM_SCC
	ret
LB_1978:
	RB_GRM
	mov QWORD [rsp+8*0],r14
	mov r13,QWORD [rsp+16+8*0]
	mov r14,QWORD [rsp+8*0]
	jmp LB_1996
LB_1996
;; rsp=0 , %1498~1'(= r ) %1497~0'(= r ) 
; #24 { 0'(= r ) 1'(= r ) } ⊢ 0(<2)◂{ 0'(= r ) 1'(= r ) }
;; rsp=0 , %1499~0(<2)◂{ 0'(= r ) 1'(= r ) } 
; ∎ 0(<2)◂{ 0'(= r ) 1'(= r ) }
; .mov_ptn2 0(<2)◂{ 0'(= r ) 1'(= r ) } ⊢ 2'(= a3◂ [ *{ rr}] )
; .mov_ptn 0(<2)◂{ 0'(= r ) 1'(= r ) } ⊢ 2'(= a3◂ [ *{ rr}] )
	ALC_RCD 2, rax
	mov r9,rax
	mov rax,r13
	mov QWORD [r9+8+8*0],rax
	mov rax,r14
	mov QWORD [r9+8+8*1],rax
	mov rax,r9
	mov BYTE [rax+6],0
	mov r8,rax
	jmp LB_1997
LB_1997:
	cmp BYTE [r8+6],0
	jnz LB_1995
	POP_GRM_SCC
	ret
LB_1995:
	POP_GRM_FAIL 
	ret
ETR_223:
	mov r9,0x0000_ffff_ffff_ffff
	and r9,[r13]
	call GRM_223
	ret
GRM_223:
	PUSH_GRM
	jmp LB_2000
LB_1999:
	add r14,1 
LB_2000:
	cmp r14,r9
	jge LB_2001
	JZ_SPC BYTE [r13+8+r14], LB_1999
LB_2001
	lea rax,[r14+7]
	cmp rax,r9
	jg LB_2004
	jmp LB_2005
LB_2004:
	mov r8,unt_1
	jmp LB_2002
LB_2005:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],194
	jnz LB_2006
	cmp BYTE [rdi+1],167
	jnz LB_2006
	cmp BYTE [rdi+2],194
	jnz LB_2006
	cmp BYTE [rdi+3],167
	jnz LB_2006
	cmp BYTE [rdi+4],43
	jnz LB_2006
	cmp BYTE [rdi+5],115
	jnz LB_2006
	cmp BYTE [rdi+6],56
	jnz LB_2006
	jmp LB_2007
LB_2006:
	mov r8,unt_1
	jmp LB_2002
LB_2007:
	add r14,7
	jmp LB_2003
LB_2002:
	add rsp,0
	jmp LB_1998
LB_2003:
	mov QWORD [rsp+8*0],r14
	mov r13,QWORD [rsp+16+8*0]
	mov r14,QWORD [rsp+8*0]
	jmp LB_2008
LB_2008
;; rsp=0 , %1501~1'(= r ) %1500~0'(= r ) 
; #24 { } ⊢ 0(<2)◂{ }
;; rsp=0 , %1502~0(<2)◂{ } %1501~1'(= r ) %1500~0'(= r ) 
; ∎ 0(<2)◂{ }
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂{ } ⊢ 2'(= a3◂ [ *{ }] )
; .mov_ptn 0(<2)◂{ } ⊢ 2'(= a3◂ [ *{ }] )
	mov rax,unt 
	mov rax,unt_0
	mov r8,rax
	jmp LB_2009
LB_2009:
	cmp BYTE [r8+6],0
	jnz LB_1998
	POP_GRM_SCC
	ret
LB_1998:
	RB_GRM
	jmp LB_2012
LB_2011:
	add r14,1 
LB_2012:
	cmp r14,r9
	jge LB_2013
	JZ_SPC BYTE [r13+8+r14], LB_2011
LB_2013
	lea rax,[r14+4]
	cmp rax,r9
	jg LB_2016
	jmp LB_2017
LB_2016:
	mov r8,unt_1
	jmp LB_2014
LB_2017:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],194
	jnz LB_2018
	cmp BYTE [rdi+1],167
	jnz LB_2018
	cmp BYTE [rdi+2],194
	jnz LB_2018
	cmp BYTE [rdi+3],167
	jnz LB_2018
	jmp LB_2019
LB_2018:
	mov r8,unt_1
	jmp LB_2014
LB_2019:
	add r14,4
	jmp LB_2015
LB_2014:
	add rsp,0
	jmp LB_2010
LB_2015:
	mov QWORD [rsp+8*0],r14
	mov r13,QWORD [rsp+16+8*0]
	mov r14,QWORD [rsp+8*0]
	jmp LB_2020
LB_2020
;; rsp=0 , %1504~1'(= r ) %1503~0'(= r ) 
; #24 { } ⊢ 0(<2)◂{ }
;; rsp=0 , %1505~0(<2)◂{ } %1504~1'(= r ) %1503~0'(= r ) 
; ∎ 0(<2)◂{ }
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂{ } ⊢ 2'(= a3◂ [ *{ }] )
; .mov_ptn 0(<2)◂{ } ⊢ 2'(= a3◂ [ *{ }] )
	mov rax,unt 
	mov rax,unt_0
	mov r8,rax
	jmp LB_2021
LB_2021:
	cmp BYTE [r8+6],0
	jnz LB_2010
	POP_GRM_SCC
	ret
LB_2010:
	RB_GRM
	jmp LB_2024
LB_2023:
	add r14,1 
LB_2024:
	cmp r14,r9
	jge LB_2025
	JZ_SPC BYTE [r13+8+r14], LB_2023
LB_2025
	lea rax,[r14+2]
	cmp rax,r9
	jg LB_2028
	jmp LB_2029
LB_2028:
	mov r8,unt_1
	jmp LB_2026
LB_2029:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],194
	jnz LB_2030
	cmp BYTE [rdi+1],167
	jnz LB_2030
	jmp LB_2031
LB_2030:
	mov r8,unt_1
	jmp LB_2026
LB_2031:
	add r14,2
	jmp LB_2027
LB_2026:
	add rsp,0
	jmp LB_2022
LB_2027:
	mov QWORD [rsp+8*0],r14
	mov r13,QWORD [rsp+16+8*0]
	mov r14,QWORD [rsp+8*0]
	jmp LB_2032
LB_2032
;; rsp=0 , %1507~1'(= r ) %1506~0'(= r ) 
; #24 { } ⊢ 0(<2)◂{ }
;; rsp=0 , %1508~0(<2)◂{ } %1507~1'(= r ) %1506~0'(= r ) 
; ∎ 0(<2)◂{ }
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂{ } ⊢ 2'(= a3◂ [ *{ }] )
; .mov_ptn 0(<2)◂{ } ⊢ 2'(= a3◂ [ *{ }] )
	mov rax,unt 
	mov rax,unt_0
	mov r8,rax
	jmp LB_2033
LB_2033:
	cmp BYTE [r8+6],0
	jnz LB_2022
	POP_GRM_SCC
	ret
LB_2022:
	RB_GRM
	jmp LB_2036
LB_2035:
	add r14,1 
LB_2036:
	cmp r14,r9
	jge LB_2037
	JZ_SPC BYTE [r13+8+r14], LB_2035
LB_2037
	lea rax,[r14+2]
	cmp rax,r9
	jg LB_2040
	jmp LB_2041
LB_2040:
	mov r8,unt_1
	jmp LB_2038
LB_2041:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],194
	jnz LB_2042
	cmp BYTE [rdi+1],182
	jnz LB_2042
	jmp LB_2043
LB_2042:
	mov r8,unt_1
	jmp LB_2038
LB_2043:
	add r14,2
	jmp LB_2039
LB_2038:
	add rsp,0
	jmp LB_2034
LB_2039:
	mov QWORD [rsp+8*0],r14
	mov r13,QWORD [rsp+16+8*0]
	mov r14,QWORD [rsp+8*0]
	jmp LB_2044
LB_2044
;; rsp=0 , %1510~1'(= r ) %1509~0'(= r ) 
; #24 { } ⊢ 0(<2)◂{ }
;; rsp=0 , %1511~0(<2)◂{ } %1510~1'(= r ) %1509~0'(= r ) 
; ∎ 0(<2)◂{ }
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂{ } ⊢ 2'(= a3◂ [ *{ }] )
; .mov_ptn 0(<2)◂{ } ⊢ 2'(= a3◂ [ *{ }] )
	mov rax,unt 
	mov rax,unt_0
	mov r8,rax
	jmp LB_2045
LB_2045:
	cmp BYTE [r8+6],0
	jnz LB_2034
	POP_GRM_SCC
	ret
LB_2034:
	RB_GRM
	jmp LB_2048
LB_2047:
	add r14,1 
LB_2048:
	cmp r14,r9
	jge LB_2049
	JZ_SPC BYTE [r13+8+r14], LB_2047
LB_2049
	lea rax,[r14+6]
	cmp rax,r9
	jg LB_2052
	jmp LB_2053
LB_2052:
	mov r8,unt_1
	jmp LB_2050
LB_2053:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],226
	jnz LB_2054
	cmp BYTE [rdi+1],136
	jnz LB_2054
	cmp BYTE [rdi+2],142
	jnz LB_2054
	cmp BYTE [rdi+3],226
	jnz LB_2054
	cmp BYTE [rdi+4],136
	jnz LB_2054
	cmp BYTE [rdi+5],142
	jnz LB_2054
	jmp LB_2055
LB_2054:
	mov r8,unt_1
	jmp LB_2050
LB_2055:
	add r14,6
	jmp LB_2051
LB_2050:
	add rsp,0
	jmp LB_2046
LB_2051:
	mov QWORD [rsp+8*0],r14
	mov r13,QWORD [rsp+16+8*0]
	mov r14,QWORD [rsp+8*0]
	jmp LB_2056
LB_2056
;; rsp=0 , %1513~1'(= r ) %1512~0'(= r ) 
; #24 { } ⊢ 0(<2)◂{ }
;; rsp=0 , %1514~0(<2)◂{ } %1513~1'(= r ) %1512~0'(= r ) 
; ∎ 0(<2)◂{ }
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂{ } ⊢ 2'(= a3◂ [ *{ }] )
; .mov_ptn 0(<2)◂{ } ⊢ 2'(= a3◂ [ *{ }] )
	mov rax,unt 
	mov rax,unt_0
	mov r8,rax
	jmp LB_2057
LB_2057:
	cmp BYTE [r8+6],0
	jnz LB_2046
	POP_GRM_SCC
	ret
LB_2046:
	POP_GRM_FAIL 
	ret
ETR_224:
	mov r9,0x0000_ffff_ffff_ffff
	and r9,[r13]
	call GRM_224
	ret
GRM_224:
	PUSH_GRM
	jmp LB_2060
LB_2059:
	add r14,1 
LB_2060:
	cmp r14,r9
	jge LB_2061
	JZ_SPC BYTE [r13+8+r14], LB_2059
LB_2061
	call GRM_223
	cmp BYTE [r8+6],0
	jnz LB_2064
	jmp LB_2065
LB_2064:
	jmp LB_2062
LB_2065:
; .mov_ptn2 2'(= *{ } ) ⊢ { }
; .mov_ptn 2'(= *{ } ) ⊢ { }
	jmp LB_2063
LB_2062:
	add rsp,0
	jmp LB_2058
LB_2063:
	mov QWORD [rsp+8*0],r14
	mov r13,QWORD [rsp+16+8*0]
	mov r14,QWORD [rsp+8*0]
	jmp LB_2066
LB_2066
;; rsp=0 , %1517~1'(= r ) %1516~0'(= r ) %1515~{ } 
; #25 { } ⊢ 1(<2)◂{ }
;; rsp=0 , %1518~1(<2)◂{ } %1517~1'(= r ) %1516~0'(= r ) %1515~{ } 
; ∎ 1(<2)◂{ }
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn { }
; .mov_ptn2 1(<2)◂{ } ⊢ 2'(= a3◂ [ *{ }] )
; .mov_ptn 1(<2)◂{ } ⊢ 2'(= a3◂ [ *{ }] )
	mov rax,unt 
	mov rax,unt_1
	mov r8,rax
	jmp LB_2067
LB_2067:
	cmp BYTE [r8+6],0
	jnz LB_2058
	POP_GRM_SCC
	ret
LB_2058:
	RB_GRM
	jmp LB_2070
LB_2069:
	add r14,1 
LB_2070:
	cmp r14,r9
	jge LB_2071
	JZ_SPC BYTE [r13+8+r14], LB_2069
LB_2071
	cmp r14,r9
	jge LB_2074
	jmp LB_2075
LB_2074:
	mov r8,unt_1 
	jmp LB_2072
LB_2075:
	movzx rdi,BYTE [r13+8+r14]
	push rdi 
	add r14,1 
	jmp LB_2073
LB_2072:
	add rsp,0
	jmp LB_2068
LB_2073:
	mov QWORD [rsp+8*1],r14
	mov r13,QWORD [rsp+16+8*1]
	mov r14,QWORD [rsp+8*1]
	jmp LB_2076
LB_2076
;; rsp=1 , %1521~1'(= r ) %1520~0'(= r ) %1519~8'(= r ) 
; #24 { } ⊢ 0(<2)◂{ }
;; rsp=1 , %1522~0(<2)◂{ } %1521~1'(= r ) %1520~0'(= r ) %1519~8'(= r ) 
; ∎ 0(<2)◂{ }
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 8'(= r )
	mov rdi,QWORD [rsp-8+8*1]
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂{ } ⊢ 2'(= a3◂ [ *{ }] )
; .mov_ptn 0(<2)◂{ } ⊢ 2'(= a3◂ [ *{ }] )
	mov rax,unt 
	mov rax,unt_0
	mov r8,rax
	add rsp,8
	jmp LB_2077
LB_2077:
	cmp BYTE [r8+6],0
	jnz LB_2068
	POP_GRM_SCC
	ret
LB_2068:
	POP_GRM_FAIL 
	ret
ETR_225:
	mov r9,0x0000_ffff_ffff_ffff
	and r9,[r13]
	call GRM_225
	ret
GRM_225:
	PUSH_GRM
	jmp LB_2080
LB_2079:
	add r14,1 
LB_2080:
	cmp r14,r9
	jge LB_2081
	JZ_SPC BYTE [r13+8+r14], LB_2079
LB_2081
	lea rax,[r14+1]
	cmp rax,r9
	jg LB_2084
	jmp LB_2085
LB_2084:
	mov r8,unt_1
	jmp LB_2082
LB_2085:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],64
	jnz LB_2086
	jmp LB_2087
LB_2086:
	mov r8,unt_1
	jmp LB_2082
LB_2087:
	add r14,1
	jmp LB_2083
LB_2082:
	add rsp,0
	jmp LB_2078
LB_2083:
	mov QWORD [rsp+8*0],r14
	mov r13,QWORD [rsp+16+8*0]
	mov r14,QWORD [rsp+8*0]
	jmp LB_2088
LB_2088
;; rsp=0 , %1525~1'(= r ) %1524~0'(= r ) %1523~{ } 
; #25 { } ⊢ 1(<2)◂{ }
;; rsp=0 , %1526~1(<2)◂{ } %1525~1'(= r ) %1524~0'(= r ) %1523~{ } 
; ∎ 1(<2)◂{ }
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn { }
; .mov_ptn2 1(<2)◂{ } ⊢ 2'(= a3◂ [ *{ }] )
; .mov_ptn 1(<2)◂{ } ⊢ 2'(= a3◂ [ *{ }] )
	mov rax,unt 
	mov rax,unt_1
	mov r8,rax
	jmp LB_2089
LB_2089:
	cmp BYTE [r8+6],0
	jnz LB_2078
	POP_GRM_SCC
	ret
LB_2078:
	RB_GRM
	jmp LB_2092
LB_2091:
	add r14,1 
LB_2092:
	cmp r14,r9
	jge LB_2093
	JZ_SPC BYTE [r13+8+r14], LB_2091
LB_2093
	call GRM_223
	cmp BYTE [r8+6],0
	jnz LB_2096
	jmp LB_2097
LB_2096:
	jmp LB_2094
LB_2097:
; .mov_ptn2 2'(= *{ } ) ⊢ { }
; .mov_ptn 2'(= *{ } ) ⊢ { }
	jmp LB_2095
LB_2094:
	add rsp,0
	jmp LB_2090
LB_2095:
	mov QWORD [rsp+8*0],r14
	mov r13,QWORD [rsp+16+8*0]
	mov r14,QWORD [rsp+8*0]
	jmp LB_2098
LB_2098
;; rsp=0 , %1529~1'(= r ) %1528~0'(= r ) %1527~{ } 
; #25 { } ⊢ 1(<2)◂{ }
;; rsp=0 , %1530~1(<2)◂{ } %1529~1'(= r ) %1528~0'(= r ) %1527~{ } 
; ∎ 1(<2)◂{ }
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn { }
; .mov_ptn2 1(<2)◂{ } ⊢ 2'(= a3◂ [ *{ }] )
; .mov_ptn 1(<2)◂{ } ⊢ 2'(= a3◂ [ *{ }] )
	mov rax,unt 
	mov rax,unt_1
	mov r8,rax
	jmp LB_2099
LB_2099:
	cmp BYTE [r8+6],0
	jnz LB_2090
	POP_GRM_SCC
	ret
LB_2090:
	RB_GRM
	jmp LB_2102
LB_2101:
	add r14,1 
LB_2102:
	cmp r14,r9
	jge LB_2103
	JZ_SPC BYTE [r13+8+r14], LB_2101
LB_2103
	cmp r14,r9
	jge LB_2106
	jmp LB_2107
LB_2106:
	mov r8,unt_1 
	jmp LB_2104
LB_2107:
	movzx rdi,BYTE [r13+8+r14]
	push rdi 
	add r14,1 
	jmp LB_2105
LB_2104:
	add rsp,0
	jmp LB_2100
LB_2105:
	mov QWORD [rsp+8*1],r14
	mov r13,QWORD [rsp+16+8*1]
	mov r14,QWORD [rsp+8*1]
	jmp LB_2108
LB_2108
;; rsp=1 , %1533~1'(= r ) %1532~0'(= r ) %1531~8'(= r ) 
; #24 { } ⊢ 0(<2)◂{ }
;; rsp=1 , %1534~0(<2)◂{ } %1533~1'(= r ) %1532~0'(= r ) %1531~8'(= r ) 
; ∎ 0(<2)◂{ }
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 8'(= r )
	mov rdi,QWORD [rsp-8+8*1]
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂{ } ⊢ 2'(= a3◂ [ *{ }] )
; .mov_ptn 0(<2)◂{ } ⊢ 2'(= a3◂ [ *{ }] )
	mov rax,unt 
	mov rax,unt_0
	mov r8,rax
	add rsp,8
	jmp LB_2109
LB_2109:
	cmp BYTE [r8+6],0
	jnz LB_2100
	POP_GRM_SCC
	ret
LB_2100:
	POP_GRM_FAIL 
	ret
ETR_226:
	mov r9,0x0000_ffff_ffff_ffff
	and r9,[r13]
	call GRM_226
	ret
GRM_226:
	PUSH_GRM
	jmp LB_2112
LB_2111:
	add r14,1 
LB_2112:
	cmp r14,r9
	jge LB_2113
	JZ_SPC BYTE [r13+8+r14], LB_2111
LB_2113
	call GRM_225
	cmp BYTE [r8+6],0
	jnz LB_2116
	jmp LB_2117
LB_2116:
	jmp LB_2114
LB_2117:
; .mov_ptn2 2'(= *{ } ) ⊢ { }
; .mov_ptn 2'(= *{ } ) ⊢ { }
	jmp LB_2115
LB_2114:
	add rsp,0
	jmp LB_2110
LB_2115:
	jmp LB_2119
LB_2118:
	add r14,1 
LB_2119:
	cmp r14,r9
	jge LB_2120
	JZ_SPC BYTE [r13+8+r14], LB_2118
LB_2120
	call GRM_226
	cmp BYTE [r8+6],0
	jnz LB_2123
	jmp LB_2124
LB_2123:
	jmp LB_2121
LB_2124:
; .mov_ptn2 2'(= *{ } ) ⊢ { }
; .mov_ptn 2'(= *{ } ) ⊢ { }
	jmp LB_2122
LB_2121:
	add rsp,0
	jmp LB_2110
LB_2122:
	mov QWORD [rsp+8*0],r14
	mov r13,QWORD [rsp+16+8*0]
	mov r14,QWORD [rsp+8*0]
	jmp LB_2125
LB_2125
;; rsp=0 , %1538~1'(= r ) %1537~0'(= r ) %1536~{ } %1535~{ } 
; #24 { } ⊢ 0(<2)◂{ }
;; rsp=0 , %1539~0(<2)◂{ } %1538~1'(= r ) %1537~0'(= r ) %1536~{ } %1535~{ } 
; ∎ 0(<2)◂{ }
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn { }
; .dlt.ptn { }
; .mov_ptn2 0(<2)◂{ } ⊢ 2'(= a3◂ [ *{ }] )
; .mov_ptn 0(<2)◂{ } ⊢ 2'(= a3◂ [ *{ }] )
	mov rax,unt 
	mov rax,unt_0
	mov r8,rax
	jmp LB_2126
LB_2126:
	cmp BYTE [r8+6],0
	jnz LB_2110
	POP_GRM_SCC
	ret
LB_2110:
	RB_GRM
	mov QWORD [rsp+8*0],r14
	mov r13,QWORD [rsp+16+8*0]
	mov r14,QWORD [rsp+8*0]
	jmp LB_2128
LB_2128
;; rsp=0 , %1541~1'(= r ) %1540~0'(= r ) 
; #24 { } ⊢ 0(<2)◂{ }
;; rsp=0 , %1542~0(<2)◂{ } %1541~1'(= r ) %1540~0'(= r ) 
; ∎ 0(<2)◂{ }
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂{ } ⊢ 2'(= a3◂ [ *{ }] )
; .mov_ptn 0(<2)◂{ } ⊢ 2'(= a3◂ [ *{ }] )
	mov rax,unt 
	mov rax,unt_0
	mov r8,rax
	jmp LB_2129
LB_2129:
	cmp BYTE [r8+6],0
	jnz LB_2127
	POP_GRM_SCC
	ret
LB_2127:
	POP_GRM_FAIL 
	ret
ETR_227:
	mov r9,0x0000_ffff_ffff_ffff
	and r9,[r13]
	call GRM_227
	ret
GRM_227:
	PUSH_GRM
	jmp LB_2132
LB_2131:
	add r14,1 
LB_2132:
	cmp r14,r9
	jge LB_2133
	JZ_LINE_SPC BYTE [r13+8+r14], LB_2131
LB_2133
	lea rax,[r14+1]
	cmp rax,r9
	jg LB_2136
	jmp LB_2137
LB_2136:
	mov r8,unt_1
	jmp LB_2134
LB_2137:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],10
	jnz LB_2138
	jmp LB_2139
LB_2138:
	mov r8,unt_1
	jmp LB_2134
LB_2139:
	add r14,1
	jmp LB_2135
LB_2134:
	add rsp,0
	jmp LB_2130
LB_2135:
	mov QWORD [rsp+8*0],r14
	mov r13,QWORD [rsp+16+8*0]
	mov r14,QWORD [rsp+8*0]
	jmp LB_2140
LB_2140
;; rsp=0 , %1545~1'(= r ) %1544~0'(= r ) %1543~{ } 
; #24 { } ⊢ 0(<2)◂{ }
;; rsp=0 , %1546~0(<2)◂{ } %1545~1'(= r ) %1544~0'(= r ) %1543~{ } 
; ∎ 0(<2)◂{ }
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn { }
; .mov_ptn2 0(<2)◂{ } ⊢ 2'(= a3◂ [ *{ }] )
; .mov_ptn 0(<2)◂{ } ⊢ 2'(= a3◂ [ *{ }] )
	mov rax,unt 
	mov rax,unt_0
	mov r8,rax
	jmp LB_2141
LB_2141:
	cmp BYTE [r8+6],0
	jnz LB_2130
	POP_GRM_SCC
	ret
LB_2130:
	RB_GRM
	jmp LB_2144
LB_2143:
	add r14,1 
LB_2144:
	cmp r14,r9
	jge LB_2145
	JZ_LINE_SPC BYTE [r13+8+r14], LB_2143
LB_2145
	call GRM_223
	cmp BYTE [r8+6],0
	jnz LB_2148
	jmp LB_2149
LB_2148:
	jmp LB_2146
LB_2149:
; .mov_ptn2 2'(= *{ } ) ⊢ { }
; .mov_ptn 2'(= *{ } ) ⊢ { }
	jmp LB_2147
LB_2146:
	add rsp,0
	jmp LB_2142
LB_2147:
	mov QWORD [rsp+8*0],r14
	mov r13,QWORD [rsp+16+8*0]
	mov r14,QWORD [rsp+8*0]
	jmp LB_2150
LB_2150
;; rsp=0 , %1549~1'(= r ) %1548~0'(= r ) %1547~{ } 
; #25 { } ⊢ 1(<2)◂{ }
;; rsp=0 , %1550~1(<2)◂{ } %1549~1'(= r ) %1548~0'(= r ) %1547~{ } 
; ∎ 1(<2)◂{ }
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn { }
; .mov_ptn2 1(<2)◂{ } ⊢ 2'(= a3◂ [ *{ }] )
; .mov_ptn 1(<2)◂{ } ⊢ 2'(= a3◂ [ *{ }] )
	mov rax,unt 
	mov rax,unt_1
	mov r8,rax
	jmp LB_2151
LB_2151:
	cmp BYTE [r8+6],0
	jnz LB_2142
	POP_GRM_SCC
	ret
LB_2142:
	RB_GRM
	jmp LB_2154
LB_2153:
	add r14,1 
LB_2154:
	cmp r14,r9
	jge LB_2155
	JZ_LINE_SPC BYTE [r13+8+r14], LB_2153
LB_2155
	lea rax,[r14+1]
	cmp rax,r9
	jg LB_2158
	jmp LB_2159
LB_2158:
	mov r8,unt_1
	jmp LB_2156
LB_2159:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],64
	jnz LB_2160
	jmp LB_2161
LB_2160:
	mov r8,unt_1
	jmp LB_2156
LB_2161:
	add r14,1
	jmp LB_2157
LB_2156:
	add rsp,0
	jmp LB_2152
LB_2157:
	mov QWORD [rsp+8*0],r14
	mov r13,QWORD [rsp+16+8*0]
	mov r14,QWORD [rsp+8*0]
	jmp LB_2162
LB_2162
;; rsp=0 , %1553~1'(= r ) %1552~0'(= r ) %1551~{ } 
; #25 { } ⊢ 1(<2)◂{ }
;; rsp=0 , %1554~1(<2)◂{ } %1553~1'(= r ) %1552~0'(= r ) %1551~{ } 
; ∎ 1(<2)◂{ }
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn { }
; .mov_ptn2 1(<2)◂{ } ⊢ 2'(= a3◂ [ *{ }] )
; .mov_ptn 1(<2)◂{ } ⊢ 2'(= a3◂ [ *{ }] )
	mov rax,unt 
	mov rax,unt_1
	mov r8,rax
	jmp LB_2163
LB_2163:
	cmp BYTE [r8+6],0
	jnz LB_2152
	POP_GRM_SCC
	ret
LB_2152:
	RB_GRM
	jmp LB_2166
LB_2165:
	add r14,1 
LB_2166:
	cmp r14,r9
	jge LB_2167
	JZ_LINE_SPC BYTE [r13+8+r14], LB_2165
LB_2167
	cmp r14,r9
	jge LB_2170
	jmp LB_2171
LB_2170:
	mov r8,unt_1 
	jmp LB_2168
LB_2171:
	movzx rdi,BYTE [r13+8+r14]
	push rdi 
	add r14,1 
	jmp LB_2169
LB_2168:
	add rsp,0
	jmp LB_2164
LB_2169:
	jmp LB_2173
LB_2172:
	add r14,1 
LB_2173:
	cmp r14,r9
	jge LB_2174
	JZ_LINE_SPC BYTE [r13+8+r14], LB_2172
LB_2174
	call GRM_227
	cmp BYTE [r8+6],0
	jnz LB_2177
	jmp LB_2178
LB_2177:
	jmp LB_2175
LB_2178:
; .mov_ptn2 2'(= *{ } ) ⊢ { }
; .mov_ptn 2'(= *{ } ) ⊢ { }
	jmp LB_2176
LB_2175:
	add rsp,8
	jmp LB_2164
LB_2176:
	mov QWORD [rsp+8*1],r14
	mov r13,QWORD [rsp+16+8*1]
	mov r14,QWORD [rsp+8*1]
	jmp LB_2179
LB_2179
;; rsp=1 , %1558~1'(= r ) %1557~0'(= r ) %1556~{ } %1555~8'(= r ) 
; #24 { } ⊢ 0(<2)◂{ }
;; rsp=1 , %1559~0(<2)◂{ } %1558~1'(= r ) %1557~0'(= r ) %1556~{ } %1555~8'(= r ) 
; ∎ 0(<2)◂{ }
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn { }
; .dlt.ptn 8'(= r )
	mov rdi,QWORD [rsp-8+8*1]
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂{ } ⊢ 2'(= a3◂ [ *{ }] )
; .mov_ptn 0(<2)◂{ } ⊢ 2'(= a3◂ [ *{ }] )
	mov rax,unt 
	mov rax,unt_0
	mov r8,rax
	add rsp,8
	jmp LB_2180
LB_2180:
	cmp BYTE [r8+6],0
	jnz LB_2164
	POP_GRM_SCC
	ret
LB_2164:
	RB_GRM
	jmp LB_2183
LB_2182:
	add r14,1 
LB_2183:
	cmp r14,r9
	jge LB_2184
	JZ_LINE_SPC BYTE [r13+8+r14], LB_2182
LB_2184
	cmp r14,r9
	jge LB_2187
	jmp LB_2188
LB_2187:
	mov r8,unt_1 
	jmp LB_2185
LB_2188:
	movzx rdi,BYTE [r13+8+r14]
	push rdi 
	add r14,1 
	jmp LB_2186
LB_2185:
	add rsp,0
	jmp LB_2181
LB_2186:
	mov QWORD [rsp+8*1],r14
	mov r13,QWORD [rsp+16+8*1]
	mov r14,QWORD [rsp+8*1]
	jmp LB_2189
LB_2189
;; rsp=1 , %1562~1'(= r ) %1561~0'(= r ) %1560~8'(= r ) 
; #24 { } ⊢ 0(<2)◂{ }
;; rsp=1 , %1563~0(<2)◂{ } %1562~1'(= r ) %1561~0'(= r ) %1560~8'(= r ) 
; ∎ 0(<2)◂{ }
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 8'(= r )
	mov rdi,QWORD [rsp-8+8*1]
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂{ } ⊢ 2'(= a3◂ [ *{ }] )
; .mov_ptn 0(<2)◂{ } ⊢ 2'(= a3◂ [ *{ }] )
	mov rax,unt 
	mov rax,unt_0
	mov r8,rax
	add rsp,8
	jmp LB_2190
LB_2190:
	cmp BYTE [r8+6],0
	jnz LB_2181
	POP_GRM_SCC
	ret
LB_2181:
	RB_GRM
	mov QWORD [rsp+8*0],r14
	mov r13,QWORD [rsp+16+8*0]
	mov r14,QWORD [rsp+8*0]
	jmp LB_2192
LB_2192
;; rsp=0 , %1565~1'(= r ) %1564~0'(= r ) 
; #24 { } ⊢ 0(<2)◂{ }
;; rsp=0 , %1566~0(<2)◂{ } %1565~1'(= r ) %1564~0'(= r ) 
; ∎ 0(<2)◂{ }
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂{ } ⊢ 2'(= a3◂ [ *{ }] )
; .mov_ptn 0(<2)◂{ } ⊢ 2'(= a3◂ [ *{ }] )
	mov rax,unt 
	mov rax,unt_0
	mov r8,rax
	jmp LB_2193
LB_2193:
	cmp BYTE [r8+6],0
	jnz LB_2191
	POP_GRM_SCC
	ret
LB_2191:
	POP_GRM_FAIL 
	ret
ETR_228:
	mov r9,0x0000_ffff_ffff_ffff
	and r9,[r13]
	call GRM_228
	ret
GRM_228:
	PUSH_GRM
	jmp LB_2196
LB_2195:
	add r14,1 
LB_2196:
	cmp r14,r9
	jge LB_2197
	JZ_SPC BYTE [r13+8+r14], LB_2195
LB_2197
	call GRM_229
	cmp BYTE [r8+6],0
	jnz LB_2200
	jmp LB_2201
LB_2200:
	jmp LB_2198
LB_2201:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= r ) ⊢ 8'(= r )
; .mov_ptn 2'(= r ) ⊢ 8'(= r )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_2199
LB_2198:
	add rsp,0
	jmp LB_2194
LB_2199:
	jmp LB_2203
LB_2202:
	add r14,1 
LB_2203:
	cmp r14,r9
	jge LB_2204
	JZ_SPC BYTE [r13+8+r14], LB_2202
LB_2204
	lea rax,[r14+1]
	cmp rax,r9
	jg LB_2207
	jmp LB_2208
LB_2207:
	mov r8,unt_1
	jmp LB_2205
LB_2208:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],42
	jnz LB_2209
	jmp LB_2210
LB_2209:
	mov r8,unt_1
	jmp LB_2205
LB_2210:
	add r14,1
	jmp LB_2206
LB_2205:
	add rsp,8
	jmp LB_2194
LB_2206:
	jmp LB_2212
LB_2211:
	add r14,1 
LB_2212:
	cmp r14,r9
	jge LB_2213
	JZ_SPC BYTE [r13+8+r14], LB_2211
LB_2213
	call GRM_69
	cmp BYTE [r8+6],0
	jnz LB_2216
	jmp LB_2217
LB_2216:
	jmp LB_2214
LB_2217:
	sub rsp,8
; .mov_ptn2 2'(= {| l |} ) ⊢ 9'(= {| l |} )
; .mov_ptn 2'(= {| l |} ) ⊢ 9'(= {| l |} )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_2215
LB_2214:
	add rsp,8
	POP_GRM_FAIL
	ret
LB_2215:
	mov QWORD [rsp+8*2],r14
	mov r13,QWORD [rsp+16+8*2]
	mov r14,QWORD [rsp+8*2]
	jmp LB_2218
LB_2218
;; rsp=2 , %1570~1'(= r ) %1569~0'(= r ) %1568~9'(= {| l |} ) %1567~8'(= r ) 
; #109 { 8'(= r ) 9'(= {| l |} ) } ⊢ 3(<4)◂{ 8'(= r ) 9'(= {| l |} ) }
;; rsp=2 , %1571~3(<4)◂{ 8'(= r ) 9'(= {| l |} ) } %1570~1'(= r ) %1569~0'(= r ) 
; #24 3(<4)◂{ 8'(= r ) 9'(= {| l |} ) } ⊢ 0(<2)◂3(<4)◂{ 8'(= r ) 9'(= {| l |} ) }
;; rsp=2 , %1572~0(<2)◂3(<4)◂{ 8'(= r ) 9'(= {| l |} ) } %1570~1'(= r ) %1569~0'(= r ) 
; ∎ 0(<2)◂3(<4)◂{ 8'(= r ) 9'(= {| l |} ) }
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂3(<4)◂{ 8'(= r ) 9'(= {| l |} ) } ⊢ 2'(= a3◂ [ a16◂ [ a9◂ [ ]]] )
; .mov_ptn 0(<2)◂3(<4)◂{ 8'(= r ) 9'(= {| l |} ) } ⊢ 2'(= a3◂ [ a16◂ [ a9◂ [ ]]] )
	ALC_RCD 2, rax
	mov r13,rax
	mov rax,QWORD [rsp-8+8*2]
	mov QWORD [r13+8+8*0],rax
	mov rax,QWORD [rsp-8+8*1]
	mov QWORD [r13+8+8*1],rax
	mov rax,r13
	mov BYTE [rax+6],3
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,16
	jmp LB_2219
LB_2219:
	cmp BYTE [r8+6],0
	jnz LB_2194
	POP_GRM_SCC
	ret
LB_2194:
	RB_GRM
	jmp LB_2222
LB_2221:
	add r14,1 
LB_2222:
	cmp r14,r9
	jge LB_2223
	JZ_SPC BYTE [r13+8+r14], LB_2221
LB_2223
	call GRM_231
	cmp BYTE [r8+6],0
	jnz LB_2226
	jmp LB_2227
LB_2226:
	jmp LB_2224
LB_2227:
	sub rsp,8
; .mov_ptn2 2'(= {| l |} ) ⊢ 8'(= {| l |} )
; .mov_ptn 2'(= {| l |} ) ⊢ 8'(= {| l |} )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_2225
LB_2224:
	add rsp,0
	jmp LB_2220
LB_2225:
	mov QWORD [rsp+8*1],r14
	mov r13,QWORD [rsp+16+8*1]
	mov r14,QWORD [rsp+8*1]
	jmp LB_2228
LB_2228
;; rsp=1 , %1575~1'(= r ) %1574~0'(= r ) %1573~8'(= {| l |} ) 
; #112 8'(= {| l |} ) ⊢ 0(<4)◂8'(= {| l |} )
;; rsp=1 , %1576~0(<4)◂8'(= {| l |} ) %1575~1'(= r ) %1574~0'(= r ) 
; #24 0(<4)◂8'(= {| l |} ) ⊢ 0(<2)◂0(<4)◂8'(= {| l |} )
;; rsp=1 , %1577~0(<2)◂0(<4)◂8'(= {| l |} ) %1575~1'(= r ) %1574~0'(= r ) 
; ∎ 0(<2)◂0(<4)◂8'(= {| l |} )
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂0(<4)◂8'(= {| l |} ) ⊢ 2'(= a3◂ [ a16◂ [ a9◂ [ ]]] )
; .mov_ptn 0(<2)◂0(<4)◂8'(= {| l |} ) ⊢ 2'(= a3◂ [ a16◂ [ a9◂ [ ]]] )
	mov rax,QWORD [rsp-8+8*1]
	mov BYTE [rax+6],0
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,8
	jmp LB_2229
LB_2229:
	cmp BYTE [r8+6],0
	jnz LB_2220
	POP_GRM_SCC
	ret
LB_2220:
	RB_GRM
	jmp LB_2232
LB_2231:
	add r14,1 
LB_2232:
	cmp r14,r9
	jge LB_2233
	JZ_SPC BYTE [r13+8+r14], LB_2231
LB_2233
	call GRM_69
	cmp BYTE [r8+6],0
	jnz LB_2236
	jmp LB_2237
LB_2236:
	jmp LB_2234
LB_2237:
	sub rsp,8
; .mov_ptn2 2'(= {| l |} ) ⊢ 8'(= {| l |} )
; .mov_ptn 2'(= {| l |} ) ⊢ 8'(= {| l |} )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_2235
LB_2234:
	add rsp,0
	jmp LB_2230
LB_2235:
	mov QWORD [rsp+8*1],r14
	mov r13,QWORD [rsp+16+8*1]
	mov r14,QWORD [rsp+8*1]
	jmp LB_2238
LB_2238
;; rsp=1 , %1580~1'(= r ) %1579~0'(= r ) %1578~8'(= {| l |} ) 
; #112 8'(= {| l |} ) ⊢ 0(<4)◂8'(= {| l |} )
;; rsp=1 , %1581~0(<4)◂8'(= {| l |} ) %1580~1'(= r ) %1579~0'(= r ) 
; #24 0(<4)◂8'(= {| l |} ) ⊢ 0(<2)◂0(<4)◂8'(= {| l |} )
;; rsp=1 , %1582~0(<2)◂0(<4)◂8'(= {| l |} ) %1580~1'(= r ) %1579~0'(= r ) 
; ∎ 0(<2)◂0(<4)◂8'(= {| l |} )
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂0(<4)◂8'(= {| l |} ) ⊢ 2'(= a3◂ [ a16◂ [ a9◂ [ ]]] )
; .mov_ptn 0(<2)◂0(<4)◂8'(= {| l |} ) ⊢ 2'(= a3◂ [ a16◂ [ a9◂ [ ]]] )
	mov rax,QWORD [rsp-8+8*1]
	mov BYTE [rax+6],0
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,8
	jmp LB_2239
LB_2239:
	cmp BYTE [r8+6],0
	jnz LB_2230
	POP_GRM_SCC
	ret
LB_2230:
	RB_GRM
	jmp LB_2242
LB_2241:
	add r14,1 
LB_2242:
	cmp r14,r9
	jge LB_2243
	JZ_SPC BYTE [r13+8+r14], LB_2241
LB_2243
	call GRM_191
	cmp BYTE [r8+6],0
	jnz LB_2246
	jmp LB_2247
LB_2246:
	jmp LB_2244
LB_2247:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a9◂ [ ] ) ⊢ 8'(= a9◂ [ ] )
; .mov_ptn 2'(= a9◂ [ ] ) ⊢ 8'(= a9◂ [ ] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_2245
LB_2244:
	add rsp,0
	jmp LB_2240
LB_2245:
	mov QWORD [rsp+8*1],r14
	mov r13,QWORD [rsp+16+8*1]
	mov r14,QWORD [rsp+8*1]
	jmp LB_2248
LB_2248
;; rsp=1 , %1585~1'(= r ) %1584~0'(= r ) %1583~8'(= a9◂ [ ] ) 
; #87 8'(= a9◂ [ ] ) ⊢ 1(<2)◂8'(= a9◂ [ ] )
;; rsp=1 , %1586~1(<2)◂8'(= a9◂ [ ] ) %1585~1'(= r ) %1584~0'(= r ) 
; #111 1(<2)◂8'(= a9◂ [ ] ) ⊢ 1(<4)◂1(<2)◂8'(= a9◂ [ ] )
;; rsp=1 , %1587~1(<4)◂1(<2)◂8'(= a9◂ [ ] ) %1585~1'(= r ) %1584~0'(= r ) 
; #24 1(<4)◂1(<2)◂8'(= a9◂ [ ] ) ⊢ 0(<2)◂1(<4)◂1(<2)◂8'(= a9◂ [ ] )
;; rsp=1 , %1588~0(<2)◂1(<4)◂1(<2)◂8'(= a9◂ [ ] ) %1585~1'(= r ) %1584~0'(= r ) 
; ∎ 0(<2)◂1(<4)◂1(<2)◂8'(= a9◂ [ ] )
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂1(<4)◂1(<2)◂8'(= a9◂ [ ] ) ⊢ 2'(= a3◂ [ a16◂ [ a9◂ [ ]]] )
; .mov_ptn 0(<2)◂1(<4)◂1(<2)◂8'(= a9◂ [ ] ) ⊢ 2'(= a3◂ [ a16◂ [ a9◂ [ ]]] )
	mov rax,QWORD [rsp-8+8*1]
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],1
	mov QWORD [rax+8],rdi
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],1
	mov QWORD [rax+8],rdi
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,8
	jmp LB_2249
LB_2249:
	cmp BYTE [r8+6],0
	jnz LB_2240
	POP_GRM_SCC
	ret
LB_2240:
	RB_GRM
	jmp LB_2252
LB_2251:
	add r14,1 
LB_2252:
	cmp r14,r9
	jge LB_2253
	JZ_SPC BYTE [r13+8+r14], LB_2251
LB_2253
	call GRM_230
	cmp BYTE [r8+6],0
	jnz LB_2256
	jmp LB_2257
LB_2256:
	jmp LB_2254
LB_2257:
	sub rsp,16
; .mov_ptn2 2'(= *{ a15◂ [ ]r} ) ⊢ { 8'(= a15◂ [ ] ) 9'(= r ) }
; .mov_ptn 2'(= *{ a15◂ [ ]r} ) ⊢ { 8'(= a15◂ [ ] ) 9'(= r ) }
	mov r10, QWORD [r8+8]
	mov QWORD [rsp-8+8*2],r10
	mov r11, QWORD [r8+16]
	mov QWORD [rsp-8+8*1],r11
	jmp LB_2255
LB_2254:
	add rsp,0
	jmp LB_2250
LB_2255:
	mov QWORD [rsp+8*2],r14
	mov r13,QWORD [rsp+16+8*2]
	mov r14,QWORD [rsp+8*2]
	jmp LB_2258
LB_2258
;; rsp=2 , %1591~1'(= r ) %1590~0'(= r ) %1589~{ 8'(= a15◂ [ ] ) 9'(= r ) } 
; #110 { 8'(= a15◂ [ ] ) 9'(= r ) } ⊢ 2(<4)◂{ 8'(= a15◂ [ ] ) 9'(= r ) }
;; rsp=2 , %1592~2(<4)◂{ 8'(= a15◂ [ ] ) 9'(= r ) } %1591~1'(= r ) %1590~0'(= r ) 
; #24 2(<4)◂{ 8'(= a15◂ [ ] ) 9'(= r ) } ⊢ 0(<2)◂2(<4)◂{ 8'(= a15◂ [ ] ) 9'(= r ) }
;; rsp=2 , %1593~0(<2)◂2(<4)◂{ 8'(= a15◂ [ ] ) 9'(= r ) } %1591~1'(= r ) %1590~0'(= r ) 
; ∎ 0(<2)◂2(<4)◂{ 8'(= a15◂ [ ] ) 9'(= r ) }
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂2(<4)◂{ 8'(= a15◂ [ ] ) 9'(= r ) } ⊢ 2'(= a3◂ [ a16◂ [ a9◂ [ ]]] )
; .mov_ptn 0(<2)◂2(<4)◂{ 8'(= a15◂ [ ] ) 9'(= r ) } ⊢ 2'(= a3◂ [ a16◂ [ a9◂ [ ]]] )
	ALC_RCD 2, rax
	mov r13,rax
	mov rax,QWORD [rsp-8+8*2]
	mov QWORD [r13+8+8*0],rax
	mov rax,QWORD [rsp-8+8*1]
	mov QWORD [r13+8+8*1],rax
	mov rax,r13
	mov BYTE [rax+6],2
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,16
	jmp LB_2259
LB_2259:
	cmp BYTE [r8+6],0
	jnz LB_2250
	POP_GRM_SCC
	ret
LB_2250:
	POP_GRM_FAIL 
	ret
ETR_229:
	mov r9,0x0000_ffff_ffff_ffff
	and r9,[r13]
	call GRM_229
	ret
GRM_229:
	PUSH_GRM
	cmp r14,r9
	jge LB_2263
 lea rdi,[r13+8+r14] 
	C_PUSH_REGS
	call scf_d
	C_POP_REGS
	cmp rax,0 
	jz LB_2263
	add r14,rsi
	push rdi
	jmp LB_2264
LB_2263:
	mov r8,unt_1
	jmp LB_2261
LB_2264:
	jmp LB_2262
LB_2261:
	add rsp,0
	jmp LB_2260
LB_2262:
	lea rax,[r14+1]
	cmp rax,r9
	jg LB_2267
	jmp LB_2268
LB_2267:
	mov r8,unt_1
	jmp LB_2265
LB_2268:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],39
	jnz LB_2269
	jmp LB_2270
LB_2269:
	mov r8,unt_1
	jmp LB_2265
LB_2270:
	add r14,1
	jmp LB_2266
LB_2265:
	add rsp,8
	jmp LB_2260
LB_2266:
	mov QWORD [rsp+8*1],r14
	mov r13,QWORD [rsp+16+8*1]
	mov r14,QWORD [rsp+8*1]
	jmp LB_2271
LB_2271
;; rsp=1 , %1596~1'(= r ) %1595~0'(= r ) %1594~8'(= r ) 
; #24 8'(= r ) ⊢ 0(<2)◂8'(= r )
;; rsp=1 , %1597~0(<2)◂8'(= r ) %1596~1'(= r ) %1595~0'(= r ) 
; ∎ 0(<2)◂8'(= r )
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂8'(= r ) ⊢ 2'(= a3◂ [ r] )
; .mov_ptn 0(<2)◂8'(= r ) ⊢ 2'(= a3◂ [ r] )
	mov rax,QWORD [rsp-8+8*1]
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,8
	jmp LB_2272
LB_2272:
	cmp BYTE [r8+6],0
	jnz LB_2260
	POP_GRM_SCC
	ret
LB_2260:
	POP_GRM_FAIL 
	ret
ETR_230:
	mov r9,0x0000_ffff_ffff_ffff
	and r9,[r13]
	call GRM_230
	ret
GRM_230:
	PUSH_GRM
	cmp r14,r9
	jge LB_2276
 lea rdi,[r13+8+r14] 
	C_PUSH_REGS
	call scf_d
	C_POP_REGS
	cmp rax,0 
	jz LB_2276
	add r14,rsi
	push rdi
	jmp LB_2277
LB_2276:
	mov r8,unt_1
	jmp LB_2274
LB_2277:
	jmp LB_2275
LB_2274:
	add rsp,0
	jmp LB_2273
LB_2275:
	lea rax,[r14+2]
	cmp rax,r9
	jg LB_2280
	jmp LB_2281
LB_2280:
	mov r8,unt_1
	jmp LB_2278
LB_2281:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],100
	jnz LB_2282
	cmp BYTE [rdi+1],39
	jnz LB_2282
	jmp LB_2283
LB_2282:
	mov r8,unt_1
	jmp LB_2278
LB_2283:
	add r14,2
	jmp LB_2279
LB_2278:
	add rsp,8
	jmp LB_2273
LB_2279:
	mov QWORD [rsp+8*1],r14
	mov r13,QWORD [rsp+16+8*1]
	mov r14,QWORD [rsp+8*1]
	jmp LB_2284
LB_2284
;; rsp=1 , %1600~1'(= r ) %1599~0'(= r ) %1598~8'(= r ) 
; #107 { } ⊢ 1(<4)◂{ }
;; rsp=1 , %1601~1(<4)◂{ } %1600~1'(= r ) %1599~0'(= r ) %1598~8'(= r ) 
; #24 { 1(<4)◂{ } 8'(= r ) } ⊢ 0(<2)◂{ 1(<4)◂{ } 8'(= r ) }
;; rsp=1 , %1602~0(<2)◂{ 1(<4)◂{ } 8'(= r ) } %1600~1'(= r ) %1599~0'(= r ) 
; ∎ 0(<2)◂{ 1(<4)◂{ } 8'(= r ) }
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂{ 1(<4)◂{ } 8'(= r ) } ⊢ 2'(= a3◂ [ *{ a15◂ [ ]r}] )
; .mov_ptn 0(<2)◂{ 1(<4)◂{ } 8'(= r ) } ⊢ 2'(= a3◂ [ *{ a15◂ [ ]r}] )
	ALC_RCD 2, rax
	mov r13,rax
	mov rax,unt 
	mov rax,unt_1
	mov QWORD [r13+8+8*0],rax
	mov rax,QWORD [rsp-8+8*1]
	mov QWORD [r13+8+8*1],rax
	mov rax,r13
	mov BYTE [rax+6],0
	mov r8,rax
	add rsp,8
	jmp LB_2285
LB_2285:
	cmp BYTE [r8+6],0
	jnz LB_2273
	POP_GRM_SCC
	ret
LB_2273:
	RB_GRM
	cmp r14,r9
	jge LB_2289
 lea rdi,[r13+8+r14] 
	C_PUSH_REGS
	call scf_d
	C_POP_REGS
	cmp rax,0 
	jz LB_2289
	add r14,rsi
	push rdi
	jmp LB_2290
LB_2289:
	mov r8,unt_1
	jmp LB_2287
LB_2290:
	jmp LB_2288
LB_2287:
	add rsp,0
	jmp LB_2286
LB_2288:
	lea rax,[r14+2]
	cmp rax,r9
	jg LB_2293
	jmp LB_2294
LB_2293:
	mov r8,unt_1
	jmp LB_2291
LB_2294:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],120
	jnz LB_2295
	cmp BYTE [rdi+1],39
	jnz LB_2295
	jmp LB_2296
LB_2295:
	mov r8,unt_1
	jmp LB_2291
LB_2296:
	add r14,2
	jmp LB_2292
LB_2291:
	add rsp,8
	jmp LB_2286
LB_2292:
	mov QWORD [rsp+8*1],r14
	mov r13,QWORD [rsp+16+8*1]
	mov r14,QWORD [rsp+8*1]
	jmp LB_2297
LB_2297
;; rsp=1 , %1605~1'(= r ) %1604~0'(= r ) %1603~8'(= r ) 
; #106 { } ⊢ 2(<4)◂{ }
;; rsp=1 , %1606~2(<4)◂{ } %1605~1'(= r ) %1604~0'(= r ) %1603~8'(= r ) 
; #24 { 2(<4)◂{ } 8'(= r ) } ⊢ 0(<2)◂{ 2(<4)◂{ } 8'(= r ) }
;; rsp=1 , %1607~0(<2)◂{ 2(<4)◂{ } 8'(= r ) } %1605~1'(= r ) %1604~0'(= r ) 
; ∎ 0(<2)◂{ 2(<4)◂{ } 8'(= r ) }
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂{ 2(<4)◂{ } 8'(= r ) } ⊢ 2'(= a3◂ [ *{ a15◂ [ ]r}] )
; .mov_ptn 0(<2)◂{ 2(<4)◂{ } 8'(= r ) } ⊢ 2'(= a3◂ [ *{ a15◂ [ ]r}] )
	ALC_RCD 2, rax
	mov r13,rax
	mov rax,unt 
	mov rax,unt_2
	mov QWORD [r13+8+8*0],rax
	mov rax,QWORD [rsp-8+8*1]
	mov QWORD [r13+8+8*1],rax
	mov rax,r13
	mov BYTE [rax+6],0
	mov r8,rax
	add rsp,8
	jmp LB_2298
LB_2298:
	cmp BYTE [r8+6],0
	jnz LB_2286
	POP_GRM_SCC
	ret
LB_2286:
	RB_GRM
	cmp r14,r9
	jge LB_2302
 lea rdi,[r13+8+r14] 
	C_PUSH_REGS
	call scf_d
	C_POP_REGS
	cmp rax,0 
	jz LB_2302
	add r14,rsi
	push rdi
	jmp LB_2303
LB_2302:
	mov r8,unt_1
	jmp LB_2300
LB_2303:
	jmp LB_2301
LB_2300:
	add rsp,0
	jmp LB_2299
LB_2301:
	lea rax,[r14+1]
	cmp rax,r9
	jg LB_2306
	jmp LB_2307
LB_2306:
	mov r8,unt_1
	jmp LB_2304
LB_2307:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],39
	jnz LB_2308
	jmp LB_2309
LB_2308:
	mov r8,unt_1
	jmp LB_2304
LB_2309:
	add r14,1
	jmp LB_2305
LB_2304:
	add rsp,8
	jmp LB_2299
LB_2305:
	mov QWORD [rsp+8*1],r14
	mov r13,QWORD [rsp+16+8*1]
	mov r14,QWORD [rsp+8*1]
	jmp LB_2310
LB_2310
;; rsp=1 , %1610~1'(= r ) %1609~0'(= r ) %1608~8'(= r ) 
; #108 { } ⊢ 0(<4)◂{ }
;; rsp=1 , %1611~0(<4)◂{ } %1610~1'(= r ) %1609~0'(= r ) %1608~8'(= r ) 
; #24 { 0(<4)◂{ } 8'(= r ) } ⊢ 0(<2)◂{ 0(<4)◂{ } 8'(= r ) }
;; rsp=1 , %1612~0(<2)◂{ 0(<4)◂{ } 8'(= r ) } %1610~1'(= r ) %1609~0'(= r ) 
; ∎ 0(<2)◂{ 0(<4)◂{ } 8'(= r ) }
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂{ 0(<4)◂{ } 8'(= r ) } ⊢ 2'(= a3◂ [ *{ a15◂ [ ]r}] )
; .mov_ptn 0(<2)◂{ 0(<4)◂{ } 8'(= r ) } ⊢ 2'(= a3◂ [ *{ a15◂ [ ]r}] )
	ALC_RCD 2, rax
	mov r13,rax
	mov rax,unt 
	mov rax,unt_0
	mov QWORD [r13+8+8*0],rax
	mov rax,QWORD [rsp-8+8*1]
	mov QWORD [r13+8+8*1],rax
	mov rax,r13
	mov BYTE [rax+6],0
	mov r8,rax
	add rsp,8
	jmp LB_2311
LB_2311:
	cmp BYTE [r8+6],0
	jnz LB_2299
	POP_GRM_SCC
	ret
LB_2299:
	POP_GRM_FAIL 
	ret
ETR_231:
	mov r9,0x0000_ffff_ffff_ffff
	and r9,[r13]
	call GRM_231
	ret
GRM_231:
	PUSH_GRM
	lea rax,[r14+1]
	cmp rax,r9
	jg LB_2315
	jmp LB_2316
LB_2315:
	mov r8,unt_1
	jmp LB_2313
LB_2316:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],96
	jnz LB_2317
	jmp LB_2318
LB_2317:
	mov r8,unt_1
	jmp LB_2313
LB_2318:
	add r14,1
	jmp LB_2314
LB_2313:
	add rsp,0
	jmp LB_2312
LB_2314:
	call GRM_232
	cmp BYTE [r8+6],0
	jnz LB_2321
	jmp LB_2322
LB_2321:
	jmp LB_2319
LB_2322:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a5◂ [ ] ) ⊢ 8'(= a5◂ [ ] )
; .mov_ptn 2'(= a5◂ [ ] ) ⊢ 8'(= a5◂ [ ] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_2320
LB_2319:
	add rsp,0
	jmp LB_2312
LB_2320:
	mov QWORD [rsp+8*1],r14
	mov r13,QWORD [rsp+16+8*1]
	mov r14,QWORD [rsp+8*1]
	jmp LB_2323
LB_2323
;; rsp=1 , %1615~1'(= r ) %1614~0'(= r ) %1613~8'(= a5◂ [ ] ) 
; #45 8'(= a5◂ [ ] ) ⊢ { 3'(= a5◂ [ ] ) 2'(= {| l |} ) }
	sub rsp,16
	mov QWORD [rsp+8*0],r13
	mov QWORD [rsp+8*1],r14
; .mov_ptn2 8'(= a5◂ [ ] ) ⊢ 0'(= a5◂ [ ] )
; .mov_ptn 8'(= a5◂ [ ] ) ⊢ 0'(= a5◂ [ ] )
	mov rax,QWORD [rsp-8+8*3]
	mov r13,rax
	call ETR_45
	mov r8,r14
	mov r14,QWORD [rsp-8+8*2]
	mov r9,r13
	mov r13,QWORD [rsp-8+8*1]
	add rsp,24
;; rsp=0 , %1617~2'(= {| l |} ) %1616~3'(= a5◂ [ ] ) %1615~1'(= r ) %1614~0'(= r ) 
; #24 2'(= {| l |} ) ⊢ 0(<2)◂2'(= {| l |} )
;; rsp=0 , %1618~0(<2)◂2'(= {| l |} ) %1616~3'(= a5◂ [ ] ) %1615~1'(= r ) %1614~0'(= r ) 
; ∎ 0(<2)◂2'(= {| l |} )
; .dlt.ptn 3'(= a5◂ [ ] )
	mov rdi,r9
	C_PUSH_REGS
	mov r8,rdi
	call LB_84
	C_POP_REGS
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂2'(= {| l |} ) ⊢ 2'(= a3◂ [ {| l |}] )
	mov r13,r8
; .mov_ptn 0(<2)◂0'(= {| l |} ) ⊢ 2'(= a3◂ [ {| l |}] )
	mov rax,r13
	mov BYTE [rax+6],0
	mov r8,rax
	jmp LB_2324
LB_2324:
	cmp BYTE [r8+6],0
	jnz LB_2312
	POP_GRM_SCC
	ret
LB_2312:
	POP_GRM_FAIL 
	ret
ETR_232:
	mov r9,0x0000_ffff_ffff_ffff
	and r9,[r13]
	call GRM_232
	ret
GRM_232:
	PUSH_GRM
	lea rax,[r14+1]
	cmp rax,r9
	jg LB_2328
	jmp LB_2329
LB_2328:
	mov r8,unt_1
	jmp LB_2326
LB_2329:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],10
	jnz LB_2330
	jmp LB_2331
LB_2330:
	mov r8,unt_1
	jmp LB_2326
LB_2331:
	add r14,1
	jmp LB_2327
LB_2326:
	add rsp,0
	jmp LB_2325
LB_2327:
	mov QWORD [rsp+8*0],r14
	mov r13,QWORD [rsp+16+8*0]
	mov r14,QWORD [rsp+8*0]
	jmp LB_2332
LB_2332
;; rsp=0 , %1620~1'(= r ) %1619~0'(= r ) 
; $ %[ 10r ] ⊢ %[ 10r ]
;; rsp=0 , %1621~%[ 10r ] %1620~1'(= r ) %1619~0'(= r ) 
; #34 { } ⊢ 2(<4)◂{ }
;; rsp=0 , %1622~2(<4)◂{ } %1621~%[ 10r ] %1620~1'(= r ) %1619~0'(= r ) 
; #42 { %[ 10r ] 2(<4)◂{ } } ⊢ 2'(= a5◂ [ ] )
	sub rsp,16
	mov QWORD [rsp+8*0],r13
	mov QWORD [rsp+8*1],r14
; .mov_ptn2 { %[ 10r ] 2(<4)◂{ } } ⊢ { 0'(= r ) 1'(= a5◂ [ ] ) }
; .mov_ptn 2(<4)◂{ } ⊢ 1'(= a5◂ [ ] )
	mov rax,unt 
	mov rax,unt_2
	mov r14,rax
; .mov_ptn %[ 10r ] ⊢ 0'(= r )
	mov rax,10
	mov r13,rax
	call ETR_42
	mov r14,QWORD [rsp-8+8*2]
	mov r8,r13
	mov r13,QWORD [rsp-8+8*1]
	add rsp,16
;; rsp=0 , %1623~2'(= a5◂ [ ] ) %1620~1'(= r ) %1619~0'(= r ) 
; #24 2'(= a5◂ [ ] ) ⊢ 0(<2)◂2'(= a5◂ [ ] )
;; rsp=0 , %1624~0(<2)◂2'(= a5◂ [ ] ) %1620~1'(= r ) %1619~0'(= r ) 
; ∎ 0(<2)◂2'(= a5◂ [ ] )
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂2'(= a5◂ [ ] ) ⊢ 2'(= a3◂ [ a5◂ [ ]] )
	mov r13,r8
; .mov_ptn 0(<2)◂0'(= a5◂ [ ] ) ⊢ 2'(= a3◂ [ a5◂ [ ]] )
	mov rax,r13
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	jmp LB_2333
LB_2333:
	cmp BYTE [r8+6],0
	jnz LB_2325
	POP_GRM_SCC
	ret
LB_2325:
	RB_GRM
	cmp r14,r9
	jge LB_2337
	jmp LB_2338
LB_2337:
	mov r8,unt_1 
	jmp LB_2335
LB_2338:
	movzx rdi,BYTE [r13+8+r14]
	push rdi 
	add r14,1 
	jmp LB_2336
LB_2335:
	add rsp,0
	jmp LB_2334
LB_2336:
	call GRM_232
	cmp BYTE [r8+6],0
	jnz LB_2341
	jmp LB_2342
LB_2341:
	jmp LB_2339
LB_2342:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a5◂ [ ] ) ⊢ 9'(= a5◂ [ ] )
; .mov_ptn 2'(= a5◂ [ ] ) ⊢ 9'(= a5◂ [ ] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_2340
LB_2339:
	add rsp,8
	jmp LB_2334
LB_2340:
	mov QWORD [rsp+8*2],r14
	mov r13,QWORD [rsp+16+8*2]
	mov r14,QWORD [rsp+8*2]
	jmp LB_2343
LB_2343
;; rsp=2 , %1628~1'(= r ) %1627~0'(= r ) %1626~9'(= a5◂ [ ] ) %1625~8'(= r ) 
; #42 { 8'(= r ) 9'(= a5◂ [ ] ) } ⊢ 2'(= a5◂ [ ] )
	sub rsp,16
	mov QWORD [rsp+8*0],r13
	mov QWORD [rsp+8*1],r14
; .mov_ptn2 { 8'(= r ) 9'(= a5◂ [ ] ) } ⊢ { 0'(= r ) 1'(= a5◂ [ ] ) }
; .mov_ptn 9'(= a5◂ [ ] ) ⊢ 1'(= a5◂ [ ] )
	mov rax,QWORD [rsp-8+8*3]
	mov r14,rax
; .mov_ptn 8'(= r ) ⊢ 0'(= r )
	mov rax,QWORD [rsp-8+8*4]
	mov r13,rax
	call ETR_42
	mov r14,QWORD [rsp-8+8*2]
	mov r8,r13
	mov r13,QWORD [rsp-8+8*1]
	add rsp,32
;; rsp=0 , %1629~2'(= a5◂ [ ] ) %1628~1'(= r ) %1627~0'(= r ) 
; #24 2'(= a5◂ [ ] ) ⊢ 0(<2)◂2'(= a5◂ [ ] )
;; rsp=0 , %1630~0(<2)◂2'(= a5◂ [ ] ) %1628~1'(= r ) %1627~0'(= r ) 
; ∎ 0(<2)◂2'(= a5◂ [ ] )
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂2'(= a5◂ [ ] ) ⊢ 2'(= a3◂ [ a5◂ [ ]] )
	mov r13,r8
; .mov_ptn 0(<2)◂0'(= a5◂ [ ] ) ⊢ 2'(= a3◂ [ a5◂ [ ]] )
	mov rax,r13
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	jmp LB_2344
LB_2344:
	cmp BYTE [r8+6],0
	jnz LB_2334
	POP_GRM_SCC
	ret
LB_2334:
	POP_GRM_FAIL 
	ret
ETR_233:
	mov r9,0x0000_ffff_ffff_ffff
	and r9,[r13]
	call GRM_233
	ret
GRM_233:
	PUSH_GRM
	jmp LB_2347
LB_2346:
	add r14,1 
LB_2347:
	cmp r14,r9
	jge LB_2348
	JZ_LINE_SPC BYTE [r13+8+r14], LB_2346
LB_2348
	call GRM_219
	cmp BYTE [r8+6],0
	jnz LB_2351
	jmp LB_2352
LB_2351:
	jmp LB_2349
LB_2352:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a35◂ [ *{ }] ) ⊢ 8'(= a35◂ [ *{ }] )
; .mov_ptn 2'(= a35◂ [ *{ }] ) ⊢ 8'(= a35◂ [ *{ }] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_2350
LB_2349:
	add rsp,0
	jmp LB_2345
LB_2350:
	jmp LB_2354
LB_2353:
	add r14,1 
LB_2354:
	cmp r14,r9
	jge LB_2355
	JZ_LINE_SPC BYTE [r13+8+r14], LB_2353
LB_2355
	lea rax,[r14+2]
	cmp rax,r9
	jg LB_2358
	jmp LB_2359
LB_2358:
	mov r8,unt_1
	jmp LB_2356
LB_2359:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],47
	jnz LB_2360
	cmp BYTE [rdi+1],47
	jnz LB_2360
	jmp LB_2361
LB_2360:
	mov r8,unt_1
	jmp LB_2356
LB_2361:
	add r14,2
	jmp LB_2357
LB_2356:
	add rsp,8
	jmp LB_2345
LB_2357:
	mov QWORD [rsp+8*1],r14
	mov r13,QWORD [rsp+16+8*1]
	mov r14,QWORD [rsp+8*1]
	jmp LB_2362
LB_2362
;; rsp=1 , %1633~1'(= r ) %1632~0'(= r ) %1631~8'(= a35◂ [ *{ }] ) 
; #22 { } ⊢ 1(<2)◂{ }
;; rsp=1 , %1634~1(<2)◂{ } %1633~1'(= r ) %1632~0'(= r ) %1631~8'(= a35◂ [ *{ }] ) 
; #24 1(<2)◂{ } ⊢ 0(<2)◂1(<2)◂{ }
;; rsp=1 , %1635~0(<2)◂1(<2)◂{ } %1633~1'(= r ) %1632~0'(= r ) %1631~8'(= a35◂ [ *{ }] ) 
; ∎ 0(<2)◂1(<2)◂{ }
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 8'(= a35◂ [ *{ }] )
	mov rdi,QWORD [rsp-8+8*1]
	C_PUSH_REGS
	mov r8,rdi
	call LB_1701
	C_POP_REGS
; .mov_ptn2 0(<2)◂1(<2)◂{ } ⊢ 2'(= a3◂ [ a2◂ [ a16◂ [ a9◂ [ ]]]] )
; .mov_ptn 0(<2)◂1(<2)◂{ } ⊢ 2'(= a3◂ [ a2◂ [ a16◂ [ a9◂ [ ]]]] )
	mov rax,unt 
	mov rax,unt_1
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,8
	jmp LB_2363
LB_2363:
	cmp BYTE [r8+6],0
	jnz LB_2345
	POP_GRM_SCC
	ret
LB_2345:
	RB_GRM
	jmp LB_2366
LB_2365:
	add r14,1 
LB_2366:
	cmp r14,r9
	jge LB_2367
	JZ_LINE_SPC BYTE [r13+8+r14], LB_2365
LB_2367
	call GRM_219
	cmp BYTE [r8+6],0
	jnz LB_2370
	jmp LB_2371
LB_2370:
	jmp LB_2368
LB_2371:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a35◂ [ *{ }] ) ⊢ 8'(= a35◂ [ *{ }] )
; .mov_ptn 2'(= a35◂ [ *{ }] ) ⊢ 8'(= a35◂ [ *{ }] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_2369
LB_2368:
	add rsp,0
	jmp LB_2364
LB_2369:
	jmp LB_2373
LB_2372:
	add r14,1 
LB_2373:
	cmp r14,r9
	jge LB_2374
	JZ_LINE_SPC BYTE [r13+8+r14], LB_2372
LB_2374
	call GRM_228
	cmp BYTE [r8+6],0
	jnz LB_2377
	jmp LB_2378
LB_2377:
	jmp LB_2375
LB_2378:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a16◂ [ a9◂ [ ]] ) ⊢ 9'(= a16◂ [ a9◂ [ ]] )
; .mov_ptn 2'(= a16◂ [ a9◂ [ ]] ) ⊢ 9'(= a16◂ [ a9◂ [ ]] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_2376
LB_2375:
	add rsp,8
	jmp LB_2364
LB_2376:
	jmp LB_2380
LB_2379:
	add r14,1 
LB_2380:
	cmp r14,r9
	jge LB_2381
	JZ_LINE_SPC BYTE [r13+8+r14], LB_2379
LB_2381
	call GRM_233
	cmp BYTE [r8+6],0
	jnz LB_2384
	jmp LB_2385
LB_2384:
	jmp LB_2382
LB_2385:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a2◂ [ a16◂ [ a9◂ [ ]]] ) ⊢ 10'(= a2◂ [ a16◂ [ a9◂ [ ]]] )
; .mov_ptn 2'(= a2◂ [ a16◂ [ a9◂ [ ]]] ) ⊢ 10'(= a2◂ [ a16◂ [ a9◂ [ ]]] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_2383
LB_2382:
	add rsp,16
	jmp LB_2364
LB_2383:
	mov QWORD [rsp+8*3],r14
	mov r13,QWORD [rsp+16+8*3]
	mov r14,QWORD [rsp+8*3]
	jmp LB_2386
LB_2386
;; rsp=3 , %1640~1'(= r ) %1639~0'(= r ) %1638~10'(= a2◂ [ a16◂ [ a9◂ [ ]]] ) %1637~9'(= a16◂ [ a9◂ [ ]] ) %1636~8'(= a35◂ [ *{ }] ) 
; #23 { 9'(= a16◂ [ a9◂ [ ]] ) 10'(= a2◂ [ a16◂ [ a9◂ [ ]]] ) } ⊢ 0(<2)◂{ 9'(= a16◂ [ a9◂ [ ]] ) 10'(= a2◂ [ a16◂ [ a9◂ [ ]]] ) }
;; rsp=3 , %1641~0(<2)◂{ 9'(= a16◂ [ a9◂ [ ]] ) 10'(= a2◂ [ a16◂ [ a9◂ [ ]]] ) } %1640~1'(= r ) %1639~0'(= r ) %1636~8'(= a35◂ [ *{ }] ) 
; #24 0(<2)◂{ 9'(= a16◂ [ a9◂ [ ]] ) 10'(= a2◂ [ a16◂ [ a9◂ [ ]]] ) } ⊢ 0(<2)◂0(<2)◂{ 9'(= a16◂ [ a9◂ [ ]] ) 10'(= a2◂ [ a16◂ [ a9◂ [ ]]] ) }
;; rsp=3 , %1642~0(<2)◂0(<2)◂{ 9'(= a16◂ [ a9◂ [ ]] ) 10'(= a2◂ [ a16◂ [ a9◂ [ ]]] ) } %1640~1'(= r ) %1639~0'(= r ) %1636~8'(= a35◂ [ *{ }] ) 
; ∎ 0(<2)◂0(<2)◂{ 9'(= a16◂ [ a9◂ [ ]] ) 10'(= a2◂ [ a16◂ [ a9◂ [ ]]] ) }
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 8'(= a35◂ [ *{ }] )
	mov rdi,QWORD [rsp-8+8*3]
	C_PUSH_REGS
	mov r8,rdi
	call LB_1701
	C_POP_REGS
; .mov_ptn2 0(<2)◂0(<2)◂{ 9'(= a16◂ [ a9◂ [ ]] ) 10'(= a2◂ [ a16◂ [ a9◂ [ ]]] ) } ⊢ 2'(= a3◂ [ a2◂ [ a16◂ [ a9◂ [ ]]]] )
; .mov_ptn 0(<2)◂0(<2)◂{ 9'(= a16◂ [ a9◂ [ ]] ) 10'(= a2◂ [ a16◂ [ a9◂ [ ]]] ) } ⊢ 2'(= a3◂ [ a2◂ [ a16◂ [ a9◂ [ ]]]] )
	ALC_RCD 2, rax
	mov r13,rax
	mov rax,QWORD [rsp-8+8*2]
	mov QWORD [r13+8+8*0],rax
	mov rax,QWORD [rsp-8+8*1]
	mov QWORD [r13+8+8*1],rax
	mov rax,r13
	mov BYTE [rax+6],0
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,24
	jmp LB_2387
LB_2387:
	cmp BYTE [r8+6],0
	jnz LB_2364
	POP_GRM_SCC
	ret
LB_2364:
	POP_GRM_FAIL 
	ret
LB_2626: ;; #53 { 0'(= a2◂ [ a16◂ [ a9◂ [ ]]] ) 1'(= a2◂ [ a16◂ [ a9◂ [ ]]] ) } ⊢ 0'(= a2◂ [ a16◂ [ a9◂ [ ]]] ) : ({ _lst◂4630'(=4631'(=_t16◂_t9)) _lst◂_t16◂_t9 }→_lst◂_t16◂_t9)
;; rsp=0 , %116~1'(= a2◂ [ a16◂ [ a9◂ [ ]]] ) %115~0'(= a2◂ [ a16◂ [ a9◂ [ ]]] ) 
;; ?; 1'(= a2◂ [ a16◂ [ a9◂ [ ]]] ) ⊢ 1(<2)◂{ }
	mov rdi,r14
	cmp BYTE [rdi+6],1
	jnz LB_2627
;; rsp=0 , %115~0'(= a2◂ [ a16◂ [ a9◂ [ ]]] ) 
; ∎ 0'(= a2◂ [ a16◂ [ a9◂ [ ]]] )
; .mov_ptn2 0'(= a2◂ [ a16◂ [ a9◂ [ ]]] ) ⊢ 0'(= a2◂ [ a16◂ [ a9◂ [ ]]] )
	ret
LB_2627:
;; ?; 1'(= a2◂ [ a16◂ [ a9◂ [ ]]] ) ⊢ 0(<2)◂{ 2'(= a16◂ [ a9◂ [ ]] ) 3'(= a2◂ [ a16◂ [ a9◂ [ ]]] ) }
	mov r8, QWORD [r14+8]
	mov r9, QWORD [r14+16]
	mov QWORD [GBG_VCT+8*0],r14
	mov rdi,QWORD [GBG_VCT+8*0]
	mov rax,[SS_RCD_2_TOP]
	mov QWORD [rdi],rax 
	mov QWORD [SS_RCD_2_TOP],rdi
;; rsp=0 , %118~3'(= a2◂ [ a16◂ [ a9◂ [ ]]] ) %117~2'(= a16◂ [ a9◂ [ ]] ) %115~0'(= a2◂ [ a16◂ [ a9◂ [ ]]] ) 
; #23 { 2'(= a16◂ [ a9◂ [ ]] ) 0'(= a2◂ [ a16◂ [ a9◂ [ ]]] ) } ⊢ 0(<2)◂{ 2'(= a16◂ [ a9◂ [ ]] ) 0'(= a2◂ [ a16◂ [ a9◂ [ ]]] ) }
;; rsp=0 , %119~0(<2)◂{ 2'(= a16◂ [ a9◂ [ ]] ) 0'(= a2◂ [ a16◂ [ a9◂ [ ]]] ) } %118~3'(= a2◂ [ a16◂ [ a9◂ [ ]]] ) 
; #53 { 0(<2)◂{ 2'(= a16◂ [ a9◂ [ ]] ) 0'(= a2◂ [ a16◂ [ a9◂ [ ]]] ) } 3'(= a2◂ [ a16◂ [ a9◂ [ ]]] ) } ⊢ 0'(= a2◂ [ a16◂ [ a9◂ [ ]]] )
; .mov_ptn2 { 0(<2)◂{ 2'(= a16◂ [ a9◂ [ ]] ) 0'(= a2◂ [ a16◂ [ a9◂ [ ]]] ) } 3'(= a2◂ [ a16◂ [ a9◂ [ ]]] ) } ⊢ { 0'(= a2◂ [ a16◂ [ a9◂ [ ]]] ) 1'(= a2◂ [ a16◂ [ a9◂ [ ]]] ) }
; .mov_ptn 3'(= a2◂ [ a16◂ [ a9◂ [ ]]] ) ⊢ 1'(= a2◂ [ a16◂ [ a9◂ [ ]]] )
	mov rax,r9
	mov r14,rax
	mov r10,r13
; .mov_ptn 0(<2)◂{ 2'(= a16◂ [ a9◂ [ ]] ) 4'(= a2◂ [ a16◂ [ a9◂ [ ]]] ) } ⊢ 0'(= a2◂ [ a16◂ [ a9◂ [ ]]] )
	ALC_RCD 2, rax
	mov r9,rax
	mov rax,r8
	mov QWORD [r9+8+8*0],rax
	mov rax,r10
	mov QWORD [r9+8+8*1],rax
	mov rax,r9
	mov BYTE [rax+6],0
	mov r13,rax
	call LB_2626
;; rsp=0 , %120~0'(= a2◂ [ a16◂ [ a9◂ [ ]]] ) 
; ∎ 0'(= a2◂ [ a16◂ [ a9◂ [ ]]] )
; .mov_ptn2 0'(= a2◂ [ a16◂ [ a9◂ [ ]]] ) ⊢ 0'(= a2◂ [ a16◂ [ a9◂ [ ]]] )
	ret
LB_2625: ;; #54 0'(= a2◂ [ a16◂ [ a9◂ [ ]]] ) ⊢ 0'(= a2◂ [ a16◂ [ a9◂ [ ]]] ) : (_lst◂_t16◂_t9→_lst◂_t16◂_t9)
;; rsp=0 , %121~0'(= a2◂ [ a16◂ [ a9◂ [ ]]] ) 
; #22 { } ⊢ 1(<2)◂{ }
;; rsp=0 , %122~1(<2)◂{ } %121~0'(= a2◂ [ a16◂ [ a9◂ [ ]]] ) 
; #53 { 1(<2)◂{ } 0'(= a2◂ [ a16◂ [ a9◂ [ ]]] ) } ⊢ 0'(= a2◂ [ a16◂ [ a9◂ [ ]]] )
; .mov_ptn2 { 1(<2)◂{ } 0'(= a2◂ [ a16◂ [ a9◂ [ ]]] ) } ⊢ { 0'(= a2◂ [ a16◂ [ a9◂ [ ]]] ) 1'(= a2◂ [ a16◂ [ a9◂ [ ]]] ) }
; .mov_ptn 0'(= a2◂ [ a16◂ [ a9◂ [ ]]] ) ⊢ 1'(= a2◂ [ a16◂ [ a9◂ [ ]]] )
	mov rax,r13
	mov r14,rax
; .mov_ptn 1(<2)◂{ } ⊢ 0'(= a2◂ [ a16◂ [ a9◂ [ ]]] )
	mov rax,unt 
	mov rax,unt_1
	mov r13,rax
	call LB_2626
;; rsp=0 , %123~0'(= a2◂ [ a16◂ [ a9◂ [ ]]] ) 
; ∎ 0'(= a2◂ [ a16◂ [ a9◂ [ ]]] )
; .mov_ptn2 0'(= a2◂ [ a16◂ [ a9◂ [ ]]] ) ⊢ 0'(= a2◂ [ a16◂ [ a9◂ [ ]]] )
	ret
LB_3095: ;; #196 { 0'(= a35◂ [ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]] ) 1'(= a35◂ [ a17◂ [ a9◂ [ ]{| l |}]] ) } ⊢ 0'(= a35◂ [ *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a17◂ [ a9◂ [ ]{| l |}]}] ) : ({ _t35◂_lst◂_t21◂_s8◂_t9 _t35◂_t17◂_s8◂_t9 }→_t35◂{ _lst◂_t21◂_s8◂_t9 _t17◂_s8◂_t9 })
;; rsp=0 , %1134~1'(= a35◂ [ a17◂ [ a9◂ [ ]{| l |}]] ) %1133~0'(= a35◂ [ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]] ) 
;; ? 0'(= a35◂ [ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]] ) ⊢ 0(<2)◂2'(= a2◂ [ a21◂ [ a9◂ [ ]{| l |}]] )
	mov rdi,r13
	cmp BYTE [rdi+6],0
	jnz LB_3096
	mov QWORD [GBG_VCT+8*0],rdi
	mov r8,QWORD [rdi+8]
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_LN rdi
;; rsp=0 , %1136~2'(= a2◂ [ a21◂ [ a9◂ [ ]{| l |}]] ) %1134~1'(= a35◂ [ a17◂ [ a9◂ [ ]{| l |}]] ) 
;; ? 1'(= a35◂ [ a17◂ [ a9◂ [ ]{| l |}]] ) ⊢ 0(<2)◂0'(= a17◂ [ a9◂ [ ]{| l |}] )
	mov rdi,r14
	cmp BYTE [rdi+6],0
	jnz LB_3097
	mov QWORD [GBG_VCT+8*0],rdi
	mov r13,QWORD [rdi+8]
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_LN rdi
;; rsp=0 , %1138~0'(= a17◂ [ a9◂ [ ]{| l |}] ) %1136~2'(= a2◂ [ a21◂ [ a9◂ [ ]{| l |}]] ) 
; #195 { 2'(= a2◂ [ a21◂ [ a9◂ [ ]{| l |}]] ) 0'(= a17◂ [ a9◂ [ ]{| l |}] ) } ⊢ 0(<2)◂{ 2'(= a2◂ [ a21◂ [ a9◂ [ ]{| l |}]] ) 0'(= a17◂ [ a9◂ [ ]{| l |}] ) }
;; rsp=0 , %1139~0(<2)◂{ 2'(= a2◂ [ a21◂ [ a9◂ [ ]{| l |}]] ) 0'(= a17◂ [ a9◂ [ ]{| l |}] ) } 
; ∎ 0(<2)◂{ 2'(= a2◂ [ a21◂ [ a9◂ [ ]{| l |}]] ) 0'(= a17◂ [ a9◂ [ ]{| l |}] ) }
; .mov_ptn2 0(<2)◂{ 2'(= a2◂ [ a21◂ [ a9◂ [ ]{| l |}]] ) 0'(= a17◂ [ a9◂ [ ]{| l |}] ) } ⊢ 0'(= a35◂ [ *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a17◂ [ a9◂ [ ]{| l |}]}] )
	mov r14,r13
; .mov_ptn 0(<2)◂{ 2'(= a2◂ [ a21◂ [ a9◂ [ ]{| l |}]] ) 1'(= a17◂ [ a9◂ [ ]{| l |}] ) } ⊢ 0'(= a35◂ [ *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a17◂ [ a9◂ [ ]{| l |}]}] )
	ALC_RCD 2, rax
	mov r9,rax
	mov rax,r8
	mov QWORD [r9+8+8*0],rax
	mov rax,r14
	mov QWORD [r9+8+8*1],rax
	mov rax,r9
	mov BYTE [rax+6],0
	mov r13,rax
	ret
LB_3097:
;; ?. 1'(= a35◂ [ a17◂ [ a9◂ [ ]{| l |}]] ) ⊢ 1(<2)◂0'(= a2◂ [ *{ rr{| l |}}] )
	mov QWORD [GBG_VCT+8*0],rdi
	mov r13,QWORD [rdi+8]
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_LN rdi
;; rsp=0 , %1137~0'(= a2◂ [ *{ rr{| l |}}] ) %1136~2'(= a2◂ [ a21◂ [ a9◂ [ ]{| l |}]] ) 
; #194 0'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 1(<2)◂0'(= a2◂ [ *{ rr{| l |}}] )
;; rsp=0 , %1140~1(<2)◂0'(= a2◂ [ *{ rr{| l |}}] ) %1136~2'(= a2◂ [ a21◂ [ a9◂ [ ]{| l |}]] ) 
; ∎ 1(<2)◂0'(= a2◂ [ *{ rr{| l |}}] )
; .dlt.ptn 2'(= a2◂ [ a21◂ [ a9◂ [ ]{| l |}]] )
	mov rdi,r8
	C_PUSH_REGS
	mov r8,rdi
	call LB_531
	C_POP_REGS
; .mov_ptn2 1(<2)◂0'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 0'(= a35◂ [ *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a17◂ [ a9◂ [ ]{| l |}]}] )
	mov r14,r13
; .mov_ptn 1(<2)◂1'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 0'(= a35◂ [ *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a17◂ [ a9◂ [ ]{| l |}]}] )
	mov rax,r14
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],1
	mov QWORD [rax+8],rdi
	mov r13,rax
	ret
LB_3096:
;; ?. 0'(= a35◂ [ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]] ) ⊢ 1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] )
	mov QWORD [GBG_VCT+8*0],rdi
	mov r8,QWORD [rdi+8]
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_LN rdi
;; rsp=0 , %1135~2'(= a2◂ [ *{ rr{| l |}}] ) %1134~1'(= a35◂ [ a17◂ [ a9◂ [ ]{| l |}]] ) 
;; ? 1'(= a35◂ [ a17◂ [ a9◂ [ ]{| l |}]] ) ⊢ 0(<2)◂0'(= a17◂ [ a9◂ [ ]{| l |}] )
	mov rdi,r14
	cmp BYTE [rdi+6],0
	jnz LB_3098
	mov QWORD [GBG_VCT+8*0],rdi
	mov r13,QWORD [rdi+8]
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_LN rdi
;; rsp=0 , %1142~0'(= a17◂ [ a9◂ [ ]{| l |}] ) %1135~2'(= a2◂ [ *{ rr{| l |}}] ) 
; #194 2'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] )
;; rsp=0 , %1143~1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] ) %1142~0'(= a17◂ [ a9◂ [ ]{| l |}] ) 
; ∎ 1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] )
; .dlt.ptn 0'(= a17◂ [ a9◂ [ ]{| l |}] )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	call LB_674
	C_POP_REGS
; .mov_ptn2 1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 0'(= a35◂ [ *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a17◂ [ a9◂ [ ]{| l |}]}] )
; .mov_ptn 1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 0'(= a35◂ [ *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a17◂ [ a9◂ [ ]{| l |}]}] )
	mov rax,r8
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],1
	mov QWORD [rax+8],rdi
	mov r13,rax
	ret
LB_3098:
;; ?. 1'(= a35◂ [ a17◂ [ a9◂ [ ]{| l |}]] ) ⊢ 1(<2)◂0'(= a2◂ [ *{ rr{| l |}}] )
	mov QWORD [GBG_VCT+8*0],rdi
	mov r13,QWORD [rdi+8]
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_LN rdi
;; rsp=0 , %1141~0'(= a2◂ [ *{ rr{| l |}}] ) %1135~2'(= a2◂ [ *{ rr{| l |}}] ) 
; #55 { 2'(= a2◂ [ *{ rr{| l |}}] ) 0'(= a2◂ [ *{ rr{| l |}}] ) } ⊢ 0'(= a2◂ [ *{ rr{| l |}}] )
; .mov_ptn2 { 2'(= a2◂ [ *{ rr{| l |}}] ) 0'(= a2◂ [ *{ rr{| l |}}] ) } ⊢ { 0'(= a2◂ [ *{ rr{| l |}}] ) 1'(= a2◂ [ *{ rr{| l |}}] ) }
; .mov_ptn 0'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 1'(= a2◂ [ *{ rr{| l |}}] )
	mov rax,r13
	mov r14,rax
; .mov_ptn 2'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 0'(= a2◂ [ *{ rr{| l |}}] )
	mov rax,r8
	mov r13,rax
	call LB_1804
;; rsp=0 , %1144~0'(= a2◂ [ *{ rr{| l |}}] ) 
; #194 0'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 1(<2)◂0'(= a2◂ [ *{ rr{| l |}}] )
;; rsp=0 , %1145~1(<2)◂0'(= a2◂ [ *{ rr{| l |}}] ) 
; ∎ 1(<2)◂0'(= a2◂ [ *{ rr{| l |}}] )
; .mov_ptn2 1(<2)◂0'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 0'(= a35◂ [ *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a17◂ [ a9◂ [ ]{| l |}]}] )
	mov r14,r13
; .mov_ptn 1(<2)◂1'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 0'(= a35◂ [ *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a17◂ [ a9◂ [ ]{| l |}]}] )
	mov rax,r14
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],1
	mov QWORD [rax+8],rdi
	mov r13,rax
	ret
LB_3140: ;; #196 { 0'(= a35◂ [ *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a17◂ [ a9◂ [ ]{| l |}]}] ) 1'(= a35◂ [ a7◂ [ *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}]] ) } ⊢ 0'(= a35◂ [ *{ *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a17◂ [ a9◂ [ ]{| l |}]}a7◂ [ *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}]}] ) : ({ _t35◂{ _lst◂_t21◂_s8◂_t9 _t17◂_s8◂_t9 } _t35◂_t7◂{ _lst◂_t21◂_s8◂_t9 _t20◂_s8◂_t9 } }→_t35◂{ { _lst◂_t21◂_s8◂_t9 _t17◂_s8◂_t9 } _t7◂{ _lst◂_t21◂_s8◂_t9 _t20◂_s8◂_t9 } })
;; rsp=0 , %1134~1'(= a35◂ [ a7◂ [ *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}]] ) %1133~0'(= a35◂ [ *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a17◂ [ a9◂ [ ]{| l |}]}] ) 
;; ? 0'(= a35◂ [ *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a17◂ [ a9◂ [ ]{| l |}]}] ) ⊢ 0(<2)◂0'(= *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a17◂ [ a9◂ [ ]{| l |}]} )
	mov rdi,r13
	cmp BYTE [rdi+6],0
	jnz LB_3141
;; rsp=0 , %1136~0'(= *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a17◂ [ a9◂ [ ]{| l |}]} ) %1134~1'(= a35◂ [ a7◂ [ *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}]] ) 
;; ? 1'(= a35◂ [ a7◂ [ *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}]] ) ⊢ 0(<2)◂2'(= a7◂ [ *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}] )
	mov rdi,r14
	cmp BYTE [rdi+6],0
	jnz LB_3142
	mov QWORD [GBG_VCT+8*0],rdi
	mov r8,QWORD [rdi+8]
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_LN rdi
;; rsp=0 , %1138~2'(= a7◂ [ *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}] ) %1136~0'(= *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a17◂ [ a9◂ [ ]{| l |}]} ) 
; #195 { 0'(= *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a17◂ [ a9◂ [ ]{| l |}]} ) 2'(= a7◂ [ *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}] ) } ⊢ 0(<2)◂{ 0'(= *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a17◂ [ a9◂ [ ]{| l |}]} ) 2'(= a7◂ [ *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}] ) }
;; rsp=0 , %1139~0(<2)◂{ 0'(= *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a17◂ [ a9◂ [ ]{| l |}]} ) 2'(= a7◂ [ *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}] ) } 
; ∎ 0(<2)◂{ 0'(= *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a17◂ [ a9◂ [ ]{| l |}]} ) 2'(= a7◂ [ *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}] ) }
; .mov_ptn2 0(<2)◂{ 0'(= *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a17◂ [ a9◂ [ ]{| l |}]} ) 2'(= a7◂ [ *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}] ) } ⊢ 0'(= a35◂ [ *{ *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a17◂ [ a9◂ [ ]{| l |}]}a7◂ [ *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}]}] )
	mov r14,r13
; .mov_ptn 0(<2)◂{ 1'(= *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a17◂ [ a9◂ [ ]{| l |}]} ) 2'(= a7◂ [ *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}] ) } ⊢ 0'(= a35◂ [ *{ *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a17◂ [ a9◂ [ ]{| l |}]}a7◂ [ *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}]}] )
	ALC_RCD 2, rax
	mov r9,rax
	mov rax,r14
	mov QWORD [r9+8+8*0],rax
	mov rax,r8
	mov QWORD [r9+8+8*1],rax
	mov rax,r9
	mov BYTE [rax+6],0
	mov r13,rax
	ret
LB_3142:
;; ?. 1'(= a35◂ [ a7◂ [ *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}]] ) ⊢ 1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] )
	mov QWORD [GBG_VCT+8*0],rdi
	mov r8,QWORD [rdi+8]
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_LN rdi
;; rsp=0 , %1137~2'(= a2◂ [ *{ rr{| l |}}] ) %1136~0'(= *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a17◂ [ a9◂ [ ]{| l |}]} ) 
; #194 2'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] )
;; rsp=0 , %1140~1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] ) %1136~0'(= *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a17◂ [ a9◂ [ ]{| l |}]} ) 
; ∎ 1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] )
; .dlt.ptn 0'(= *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a17◂ [ a9◂ [ ]{| l |}]} )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	push r8
	mov r8,QWORD [r8+8+8*0]
	call LB_531
	pop r8 
	push r8
	mov r8,QWORD [r8+8+8*1]
	call LB_674
	pop r8 
	FREE_RCD 2, r8
	C_POP_REGS
; .mov_ptn2 1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 0'(= a35◂ [ *{ *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a17◂ [ a9◂ [ ]{| l |}]}a7◂ [ *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}]}] )
; .mov_ptn 1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 0'(= a35◂ [ *{ *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a17◂ [ a9◂ [ ]{| l |}]}a7◂ [ *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}]}] )
	mov rax,r8
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],1
	mov QWORD [rax+8],rdi
	mov r13,rax
	ret
LB_3141:
;; ?. 0'(= a35◂ [ *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a17◂ [ a9◂ [ ]{| l |}]}] ) ⊢ 1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] )
	mov QWORD [GBG_VCT+8*0],rdi
	mov r8,QWORD [rdi+8]
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_LN rdi
;; rsp=0 , %1135~2'(= a2◂ [ *{ rr{| l |}}] ) %1134~1'(= a35◂ [ a7◂ [ *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}]] ) 
;; ? 1'(= a35◂ [ a7◂ [ *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}]] ) ⊢ 0(<2)◂0'(= a7◂ [ *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}] )
	mov rdi,r14
	cmp BYTE [rdi+6],0
	jnz LB_3143
	mov QWORD [GBG_VCT+8*0],rdi
	mov r13,QWORD [rdi+8]
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_LN rdi
;; rsp=0 , %1142~0'(= a7◂ [ *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}] ) %1135~2'(= a2◂ [ *{ rr{| l |}}] ) 
; #194 2'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] )
;; rsp=0 , %1143~1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] ) %1142~0'(= a7◂ [ *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}] ) 
; ∎ 1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] )
; .dlt.ptn 0'(= a7◂ [ *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}] )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	call LB_685
	C_POP_REGS
; .mov_ptn2 1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 0'(= a35◂ [ *{ *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a17◂ [ a9◂ [ ]{| l |}]}a7◂ [ *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}]}] )
; .mov_ptn 1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 0'(= a35◂ [ *{ *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a17◂ [ a9◂ [ ]{| l |}]}a7◂ [ *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}]}] )
	mov rax,r8
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],1
	mov QWORD [rax+8],rdi
	mov r13,rax
	ret
LB_3143:
;; ?. 1'(= a35◂ [ a7◂ [ *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}]] ) ⊢ 1(<2)◂0'(= a2◂ [ *{ rr{| l |}}] )
	mov QWORD [GBG_VCT+8*0],rdi
	mov r13,QWORD [rdi+8]
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_LN rdi
;; rsp=0 , %1141~0'(= a2◂ [ *{ rr{| l |}}] ) %1135~2'(= a2◂ [ *{ rr{| l |}}] ) 
; #55 { 2'(= a2◂ [ *{ rr{| l |}}] ) 0'(= a2◂ [ *{ rr{| l |}}] ) } ⊢ 0'(= a2◂ [ *{ rr{| l |}}] )
; .mov_ptn2 { 2'(= a2◂ [ *{ rr{| l |}}] ) 0'(= a2◂ [ *{ rr{| l |}}] ) } ⊢ { 0'(= a2◂ [ *{ rr{| l |}}] ) 1'(= a2◂ [ *{ rr{| l |}}] ) }
; .mov_ptn 0'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 1'(= a2◂ [ *{ rr{| l |}}] )
	mov rax,r13
	mov r14,rax
; .mov_ptn 2'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 0'(= a2◂ [ *{ rr{| l |}}] )
	mov rax,r8
	mov r13,rax
	call LB_1804
;; rsp=0 , %1144~0'(= a2◂ [ *{ rr{| l |}}] ) 
; #194 0'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 1(<2)◂0'(= a2◂ [ *{ rr{| l |}}] )
;; rsp=0 , %1145~1(<2)◂0'(= a2◂ [ *{ rr{| l |}}] ) 
; ∎ 1(<2)◂0'(= a2◂ [ *{ rr{| l |}}] )
; .mov_ptn2 1(<2)◂0'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 0'(= a35◂ [ *{ *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a17◂ [ a9◂ [ ]{| l |}]}a7◂ [ *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}]}] )
	mov r14,r13
; .mov_ptn 1(<2)◂1'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 0'(= a35◂ [ *{ *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a17◂ [ a9◂ [ ]{| l |}]}a7◂ [ *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}]}] )
	mov rax,r14
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],1
	mov QWORD [rax+8],rdi
	mov r13,rax
	ret
LB_3233: ;; #196 { 0'(= a35◂ [ *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a17◂ [ a9◂ [ ]{| l |}]}] ) 1'(= a35◂ [ a7◂ [ *{ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}]] ) } ⊢ 0'(= a35◂ [ *{ *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a17◂ [ a9◂ [ ]{| l |}]}a7◂ [ *{ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}]}] ) : ({ _t35◂{ _lst◂_t21◂_s8◂_t9 _t17◂_s8◂_t9 } _t35◂_t7◂{ _t8◂_t14◂_s8◂_t9 _lst◂_t21◂_s8◂_t9 _t20◂_s8◂_t9 } }→_t35◂{ { _lst◂_t21◂_s8◂_t9 _t17◂_s8◂_t9 } _t7◂{ _t8◂_t14◂_s8◂_t9 _lst◂_t21◂_s8◂_t9 _t20◂_s8◂_t9 } })
;; rsp=0 , %1134~1'(= a35◂ [ a7◂ [ *{ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}]] ) %1133~0'(= a35◂ [ *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a17◂ [ a9◂ [ ]{| l |}]}] ) 
;; ? 0'(= a35◂ [ *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a17◂ [ a9◂ [ ]{| l |}]}] ) ⊢ 0(<2)◂0'(= *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a17◂ [ a9◂ [ ]{| l |}]} )
	mov rdi,r13
	cmp BYTE [rdi+6],0
	jnz LB_3234
;; rsp=0 , %1136~0'(= *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a17◂ [ a9◂ [ ]{| l |}]} ) %1134~1'(= a35◂ [ a7◂ [ *{ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}]] ) 
;; ? 1'(= a35◂ [ a7◂ [ *{ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}]] ) ⊢ 0(<2)◂2'(= a7◂ [ *{ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}] )
	mov rdi,r14
	cmp BYTE [rdi+6],0
	jnz LB_3235
	mov QWORD [GBG_VCT+8*0],rdi
	mov r8,QWORD [rdi+8]
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_LN rdi
;; rsp=0 , %1138~2'(= a7◂ [ *{ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}] ) %1136~0'(= *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a17◂ [ a9◂ [ ]{| l |}]} ) 
; #195 { 0'(= *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a17◂ [ a9◂ [ ]{| l |}]} ) 2'(= a7◂ [ *{ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}] ) } ⊢ 0(<2)◂{ 0'(= *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a17◂ [ a9◂ [ ]{| l |}]} ) 2'(= a7◂ [ *{ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}] ) }
;; rsp=0 , %1139~0(<2)◂{ 0'(= *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a17◂ [ a9◂ [ ]{| l |}]} ) 2'(= a7◂ [ *{ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}] ) } 
; ∎ 0(<2)◂{ 0'(= *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a17◂ [ a9◂ [ ]{| l |}]} ) 2'(= a7◂ [ *{ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}] ) }
; .mov_ptn2 0(<2)◂{ 0'(= *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a17◂ [ a9◂ [ ]{| l |}]} ) 2'(= a7◂ [ *{ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}] ) } ⊢ 0'(= a35◂ [ *{ *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a17◂ [ a9◂ [ ]{| l |}]}a7◂ [ *{ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}]}] )
	mov r14,r13
; .mov_ptn 0(<2)◂{ 1'(= *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a17◂ [ a9◂ [ ]{| l |}]} ) 2'(= a7◂ [ *{ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}] ) } ⊢ 0'(= a35◂ [ *{ *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a17◂ [ a9◂ [ ]{| l |}]}a7◂ [ *{ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}]}] )
	ALC_RCD 2, rax
	mov r9,rax
	mov rax,r14
	mov QWORD [r9+8+8*0],rax
	mov rax,r8
	mov QWORD [r9+8+8*1],rax
	mov rax,r9
	mov BYTE [rax+6],0
	mov r13,rax
	ret
LB_3235:
;; ?. 1'(= a35◂ [ a7◂ [ *{ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}]] ) ⊢ 1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] )
	mov QWORD [GBG_VCT+8*0],rdi
	mov r8,QWORD [rdi+8]
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_LN rdi
;; rsp=0 , %1137~2'(= a2◂ [ *{ rr{| l |}}] ) %1136~0'(= *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a17◂ [ a9◂ [ ]{| l |}]} ) 
; #194 2'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] )
;; rsp=0 , %1140~1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] ) %1136~0'(= *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a17◂ [ a9◂ [ ]{| l |}]} ) 
; ∎ 1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] )
; .dlt.ptn 0'(= *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a17◂ [ a9◂ [ ]{| l |}]} )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	push r8
	mov r8,QWORD [r8+8+8*0]
	call LB_531
	pop r8 
	push r8
	mov r8,QWORD [r8+8+8*1]
	call LB_674
	pop r8 
	FREE_RCD 2, r8
	C_POP_REGS
; .mov_ptn2 1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 0'(= a35◂ [ *{ *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a17◂ [ a9◂ [ ]{| l |}]}a7◂ [ *{ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}]}] )
; .mov_ptn 1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 0'(= a35◂ [ *{ *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a17◂ [ a9◂ [ ]{| l |}]}a7◂ [ *{ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}]}] )
	mov rax,r8
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],1
	mov QWORD [rax+8],rdi
	mov r13,rax
	ret
LB_3234:
;; ?. 0'(= a35◂ [ *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a17◂ [ a9◂ [ ]{| l |}]}] ) ⊢ 1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] )
	mov QWORD [GBG_VCT+8*0],rdi
	mov r8,QWORD [rdi+8]
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_LN rdi
;; rsp=0 , %1135~2'(= a2◂ [ *{ rr{| l |}}] ) %1134~1'(= a35◂ [ a7◂ [ *{ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}]] ) 
;; ? 1'(= a35◂ [ a7◂ [ *{ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}]] ) ⊢ 0(<2)◂0'(= a7◂ [ *{ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}] )
	mov rdi,r14
	cmp BYTE [rdi+6],0
	jnz LB_3236
	mov QWORD [GBG_VCT+8*0],rdi
	mov r13,QWORD [rdi+8]
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_LN rdi
;; rsp=0 , %1142~0'(= a7◂ [ *{ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}] ) %1135~2'(= a2◂ [ *{ rr{| l |}}] ) 
; #194 2'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] )
;; rsp=0 , %1143~1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] ) %1142~0'(= a7◂ [ *{ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}] ) 
; ∎ 1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] )
; .dlt.ptn 0'(= a7◂ [ *{ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}] )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	call LB_691
	C_POP_REGS
; .mov_ptn2 1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 0'(= a35◂ [ *{ *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a17◂ [ a9◂ [ ]{| l |}]}a7◂ [ *{ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}]}] )
; .mov_ptn 1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 0'(= a35◂ [ *{ *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a17◂ [ a9◂ [ ]{| l |}]}a7◂ [ *{ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}]}] )
	mov rax,r8
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],1
	mov QWORD [rax+8],rdi
	mov r13,rax
	ret
LB_3236:
;; ?. 1'(= a35◂ [ a7◂ [ *{ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}]] ) ⊢ 1(<2)◂0'(= a2◂ [ *{ rr{| l |}}] )
	mov QWORD [GBG_VCT+8*0],rdi
	mov r13,QWORD [rdi+8]
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_LN rdi
;; rsp=0 , %1141~0'(= a2◂ [ *{ rr{| l |}}] ) %1135~2'(= a2◂ [ *{ rr{| l |}}] ) 
; #55 { 2'(= a2◂ [ *{ rr{| l |}}] ) 0'(= a2◂ [ *{ rr{| l |}}] ) } ⊢ 0'(= a2◂ [ *{ rr{| l |}}] )
; .mov_ptn2 { 2'(= a2◂ [ *{ rr{| l |}}] ) 0'(= a2◂ [ *{ rr{| l |}}] ) } ⊢ { 0'(= a2◂ [ *{ rr{| l |}}] ) 1'(= a2◂ [ *{ rr{| l |}}] ) }
; .mov_ptn 0'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 1'(= a2◂ [ *{ rr{| l |}}] )
	mov rax,r13
	mov r14,rax
; .mov_ptn 2'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 0'(= a2◂ [ *{ rr{| l |}}] )
	mov rax,r8
	mov r13,rax
	call LB_1804
;; rsp=0 , %1144~0'(= a2◂ [ *{ rr{| l |}}] ) 
; #194 0'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 1(<2)◂0'(= a2◂ [ *{ rr{| l |}}] )
;; rsp=0 , %1145~1(<2)◂0'(= a2◂ [ *{ rr{| l |}}] ) 
; ∎ 1(<2)◂0'(= a2◂ [ *{ rr{| l |}}] )
; .mov_ptn2 1(<2)◂0'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 0'(= a35◂ [ *{ *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a17◂ [ a9◂ [ ]{| l |}]}a7◂ [ *{ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}]}] )
	mov r14,r13
; .mov_ptn 1(<2)◂1'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 0'(= a35◂ [ *{ *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a17◂ [ a9◂ [ ]{| l |}]}a7◂ [ *{ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}]}] )
	mov rax,r14
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],1
	mov QWORD [rax+8],rdi
	mov r13,rax
	ret
ETR_234:
	mov r9,0x0000_ffff_ffff_ffff
	and r9,[r13]
	call GRM_234
	ret
GRM_234:
	PUSH_GRM
	jmp LB_2390
LB_2389:
	add r14,1 
LB_2390:
	cmp r14,r9
	jge LB_2391
	JZ_SPC BYTE [r13+8+r14], LB_2389
LB_2391
	lea rax,[r14+2]
	cmp rax,r9
	jg LB_2394
	jmp LB_2395
LB_2394:
	mov r8,unt_1
	jmp LB_2392
LB_2395:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],95
	jnz LB_2396
	cmp BYTE [rdi+1],94
	jnz LB_2396
	jmp LB_2397
LB_2396:
	mov r8,unt_1
	jmp LB_2392
LB_2397:
	add r14,2
	jmp LB_2393
LB_2392:
	add rsp,0
	jmp LB_2388
LB_2393:
	jmp LB_2399
LB_2398:
	add r14,1 
LB_2399:
	cmp r14,r9
	jge LB_2400
	JZ_SPC BYTE [r13+8+r14], LB_2398
LB_2400
	call GRM_235
	cmp BYTE [r8+6],0
	jnz LB_2403
	jmp LB_2404
LB_2403:
	jmp LB_2401
LB_2404:
	sub rsp,16
; .mov_ptn2 2'(= *{ a2◂ [ a12◂ [ a9◂ [ ]{| l |}]]a2◂ [ a13◂ [ {| l |}]]} ) ⊢ { 8'(= a2◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) 9'(= a2◂ [ a13◂ [ {| l |}]] ) }
; .mov_ptn 2'(= *{ a2◂ [ a12◂ [ a9◂ [ ]{| l |}]]a2◂ [ a13◂ [ {| l |}]]} ) ⊢ { 8'(= a2◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) 9'(= a2◂ [ a13◂ [ {| l |}]] ) }
	mov r10, QWORD [r8+8]
	mov QWORD [rsp-8+8*2],r10
	mov r11, QWORD [r8+16]
	mov QWORD [rsp-8+8*1],r11
	jmp LB_2402
LB_2401:
	add rsp,0
	POP_GRM_FAIL
	ret
LB_2402:
	jmp LB_2406
LB_2405:
	add r14,1 
LB_2406:
	cmp r14,r9
	jge LB_2407
	JZ_SPC BYTE [r13+8+r14], LB_2405
LB_2407
	call GRM_233
	cmp BYTE [r8+6],0
	jnz LB_2410
	jmp LB_2411
LB_2410:
	jmp LB_2408
LB_2411:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a2◂ [ a16◂ [ a9◂ [ ]]] ) ⊢ 10'(= a2◂ [ a16◂ [ a9◂ [ ]]] )
; .mov_ptn 2'(= a2◂ [ a16◂ [ a9◂ [ ]]] ) ⊢ 10'(= a2◂ [ a16◂ [ a9◂ [ ]]] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_2409
LB_2408:
	add rsp,16
	POP_GRM_FAIL
	ret
LB_2409:
	mov QWORD [rsp+8*3],r14
	mov r13,QWORD [rsp+16+8*3]
	mov r14,QWORD [rsp+8*3]
	jmp LB_2412
LB_2412
;; rsp=3 , %1647~1'(= r ) %1646~0'(= r ) %1645~10'(= a2◂ [ a16◂ [ a9◂ [ ]]] ) %1644~9'(= a2◂ [ a13◂ [ {| l |}]] ) %1643~8'(= a2◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) 
; #121 { 10'(= a2◂ [ a16◂ [ a9◂ [ ]]] ) 8'(= a2◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) 9'(= a2◂ [ a13◂ [ {| l |}]] ) } ⊢ 3(<4)◂{ 10'(= a2◂ [ a16◂ [ a9◂ [ ]]] ) 8'(= a2◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) 9'(= a2◂ [ a13◂ [ {| l |}]] ) }
;; rsp=3 , %1648~3(<4)◂{ 10'(= a2◂ [ a16◂ [ a9◂ [ ]]] ) 8'(= a2◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) 9'(= a2◂ [ a13◂ [ {| l |}]] ) } %1647~1'(= r ) %1646~0'(= r ) 
; #24 3(<4)◂{ 10'(= a2◂ [ a16◂ [ a9◂ [ ]]] ) 8'(= a2◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) 9'(= a2◂ [ a13◂ [ {| l |}]] ) } ⊢ 0(<2)◂3(<4)◂{ 10'(= a2◂ [ a16◂ [ a9◂ [ ]]] ) 8'(= a2◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) 9'(= a2◂ [ a13◂ [ {| l |}]] ) }
;; rsp=3 , %1649~0(<2)◂3(<4)◂{ 10'(= a2◂ [ a16◂ [ a9◂ [ ]]] ) 8'(= a2◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) 9'(= a2◂ [ a13◂ [ {| l |}]] ) } %1647~1'(= r ) %1646~0'(= r ) 
; ∎ 0(<2)◂3(<4)◂{ 10'(= a2◂ [ a16◂ [ a9◂ [ ]]] ) 8'(= a2◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) 9'(= a2◂ [ a13◂ [ {| l |}]] ) }
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂3(<4)◂{ 10'(= a2◂ [ a16◂ [ a9◂ [ ]]] ) 8'(= a2◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) 9'(= a2◂ [ a13◂ [ {| l |}]] ) } ⊢ 2'(= a3◂ [ a19◂ [ a9◂ [ ]{| l |}]] )
; .mov_ptn 0(<2)◂3(<4)◂{ 10'(= a2◂ [ a16◂ [ a9◂ [ ]]] ) 8'(= a2◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) 9'(= a2◂ [ a13◂ [ {| l |}]] ) } ⊢ 2'(= a3◂ [ a19◂ [ a9◂ [ ]{| l |}]] )
	ALC_RCD 3, rax
	mov r13,rax
	mov rax,QWORD [rsp-8+8*1]
	mov QWORD [r13+8+8*0],rax
	mov rax,QWORD [rsp-8+8*3]
	mov QWORD [r13+8+8*1],rax
	mov rax,QWORD [rsp-8+8*2]
	mov QWORD [r13+8+8*2],rax
	mov rax,r13
	mov BYTE [rax+6],3
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,24
	jmp LB_2413
LB_2413:
	cmp BYTE [r8+6],0
	jnz LB_2388
	POP_GRM_SCC
	ret
LB_2388:
	RB_GRM
	jmp LB_2416
LB_2415:
	add r14,1 
LB_2416:
	cmp r14,r9
	jge LB_2417
	JZ_SPC BYTE [r13+8+r14], LB_2415
LB_2417
	call GRM_192
	cmp BYTE [r8+6],0
	jnz LB_2420
	jmp LB_2421
LB_2420:
	jmp LB_2418
LB_2421:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a11◂ [ a9◂ [ ]] ) ⊢ 8'(= a11◂ [ a9◂ [ ]] )
; .mov_ptn 2'(= a11◂ [ a9◂ [ ]] ) ⊢ 8'(= a11◂ [ a9◂ [ ]] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_2419
LB_2418:
	add rsp,0
	jmp LB_2414
LB_2419:
	jmp LB_2423
LB_2422:
	add r14,1 
LB_2423:
	cmp r14,r9
	jge LB_2424
	JZ_SPC BYTE [r13+8+r14], LB_2422
LB_2424
	lea rax,[r14+1]
	cmp rax,r9
	jg LB_2427
	jmp LB_2428
LB_2427:
	mov r8,unt_1
	jmp LB_2425
LB_2428:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],95
	jnz LB_2429
	jmp LB_2430
LB_2429:
	mov r8,unt_1
	jmp LB_2425
LB_2430:
	add r14,1
	jmp LB_2426
LB_2425:
	add rsp,8
	jmp LB_2414
LB_2426:
	jmp LB_2432
LB_2431:
	add r14,1 
LB_2432:
	cmp r14,r9
	jge LB_2433
	JZ_SPC BYTE [r13+8+r14], LB_2431
LB_2433
	lea rax,[r14+3]
	cmp rax,r9
	jg LB_2436
	jmp LB_2437
LB_2436:
	mov r8,unt_1
	jmp LB_2434
LB_2437:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],226
	jnz LB_2438
	cmp BYTE [rdi+1],138
	jnz LB_2438
	cmp BYTE [rdi+2],162
	jnz LB_2438
	jmp LB_2439
LB_2438:
	mov r8,unt_1
	jmp LB_2434
LB_2439:
	add r14,3
	jmp LB_2435
LB_2434:
	add rsp,8
	jmp LB_2414
LB_2435:
	jmp LB_2441
LB_2440:
	add r14,1 
LB_2441:
	cmp r14,r9
	jge LB_2442
	JZ_SPC BYTE [r13+8+r14], LB_2440
LB_2442
	call GRM_207
	cmp BYTE [r8+6],0
	jnz LB_2445
	jmp LB_2446
LB_2445:
	jmp LB_2443
LB_2446:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a8◂ [ a13◂ [ {| l |}]] ) ⊢ 9'(= a8◂ [ a13◂ [ {| l |}]] )
; .mov_ptn 2'(= a8◂ [ a13◂ [ {| l |}]] ) ⊢ 9'(= a8◂ [ a13◂ [ {| l |}]] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_2444
LB_2443:
	add rsp,8
	jmp LB_2414
LB_2444:
	mov QWORD [rsp+8*2],r14
	mov r13,QWORD [rsp+16+8*2]
	mov r14,QWORD [rsp+8*2]
	jmp LB_2447
LB_2447
;; rsp=2 , %1653~1'(= r ) %1652~0'(= r ) %1651~9'(= a8◂ [ a13◂ [ {| l |}]] ) %1650~8'(= a11◂ [ a9◂ [ ]] ) 
; #22 { } ⊢ 1(<2)◂{ }
;; rsp=2 , %1654~1(<2)◂{ } %1653~1'(= r ) %1652~0'(= r ) %1651~9'(= a8◂ [ a13◂ [ {| l |}]] ) %1650~8'(= a11◂ [ a9◂ [ ]] ) 
; #81 1(<2)◂{ } ⊢ 0(<2)◂1(<2)◂{ }
;; rsp=2 , %1655~0(<2)◂1(<2)◂{ } %1653~1'(= r ) %1652~0'(= r ) %1651~9'(= a8◂ [ a13◂ [ {| l |}]] ) %1650~8'(= a11◂ [ a9◂ [ ]] ) 
; #122 { 8'(= a11◂ [ a9◂ [ ]] ) 0(<2)◂1(<2)◂{ } 9'(= a8◂ [ a13◂ [ {| l |}]] ) } ⊢ 2(<4)◂{ 8'(= a11◂ [ a9◂ [ ]] ) 0(<2)◂1(<2)◂{ } 9'(= a8◂ [ a13◂ [ {| l |}]] ) }
;; rsp=2 , %1656~2(<4)◂{ 8'(= a11◂ [ a9◂ [ ]] ) 0(<2)◂1(<2)◂{ } 9'(= a8◂ [ a13◂ [ {| l |}]] ) } %1653~1'(= r ) %1652~0'(= r ) 
; #24 2(<4)◂{ 8'(= a11◂ [ a9◂ [ ]] ) 0(<2)◂1(<2)◂{ } 9'(= a8◂ [ a13◂ [ {| l |}]] ) } ⊢ 0(<2)◂2(<4)◂{ 8'(= a11◂ [ a9◂ [ ]] ) 0(<2)◂1(<2)◂{ } 9'(= a8◂ [ a13◂ [ {| l |}]] ) }
;; rsp=2 , %1657~0(<2)◂2(<4)◂{ 8'(= a11◂ [ a9◂ [ ]] ) 0(<2)◂1(<2)◂{ } 9'(= a8◂ [ a13◂ [ {| l |}]] ) } %1653~1'(= r ) %1652~0'(= r ) 
; ∎ 0(<2)◂2(<4)◂{ 8'(= a11◂ [ a9◂ [ ]] ) 0(<2)◂1(<2)◂{ } 9'(= a8◂ [ a13◂ [ {| l |}]] ) }
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂2(<4)◂{ 8'(= a11◂ [ a9◂ [ ]] ) 0(<2)◂1(<2)◂{ } 9'(= a8◂ [ a13◂ [ {| l |}]] ) } ⊢ 2'(= a3◂ [ a19◂ [ a9◂ [ ]{| l |}]] )
; .mov_ptn 0(<2)◂2(<4)◂{ 8'(= a11◂ [ a9◂ [ ]] ) 0(<2)◂1(<2)◂{ } 9'(= a8◂ [ a13◂ [ {| l |}]] ) } ⊢ 2'(= a3◂ [ a19◂ [ a9◂ [ ]{| l |}]] )
	ALC_RCD 3, rax
	mov r13,rax
	mov rax,QWORD [rsp-8+8*2]
	mov QWORD [r13+8+8*0],rax
	mov rax,unt 
	mov rax,unt_1
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov QWORD [r13+8+8*1],rax
	mov rax,QWORD [rsp-8+8*1]
	mov QWORD [r13+8+8*2],rax
	mov rax,r13
	mov BYTE [rax+6],2
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,16
	jmp LB_2448
LB_2448:
	cmp BYTE [r8+6],0
	jnz LB_2414
	POP_GRM_SCC
	ret
LB_2414:
	POP_GRM_FAIL 
	ret
ETR_235:
	mov r9,0x0000_ffff_ffff_ffff
	and r9,[r13]
	call GRM_235
	ret
GRM_235:
	PUSH_GRM
	jmp LB_2451
LB_2450:
	add r14,1 
LB_2451:
	cmp r14,r9
	jge LB_2452
	JZ_SPC BYTE [r13+8+r14], LB_2450
LB_2452
	call GRM_189
	cmp BYTE [r8+6],0
	jnz LB_2455
	jmp LB_2456
LB_2455:
	jmp LB_2453
LB_2456:
; .mov_ptn2 2'(= *{ } ) ⊢ { }
; .mov_ptn 2'(= *{ } ) ⊢ { }
	jmp LB_2454
LB_2453:
	add rsp,0
	jmp LB_2449
LB_2454:
	jmp LB_2458
LB_2457:
	add r14,1 
LB_2458:
	cmp r14,r9
	jge LB_2459
	JZ_SPC BYTE [r13+8+r14], LB_2457
LB_2459
	lea rax,[r14+3]
	cmp rax,r9
	jg LB_2462
	jmp LB_2463
LB_2462:
	mov r8,unt_1
	jmp LB_2460
LB_2463:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],226
	jnz LB_2464
	cmp BYTE [rdi+1],138
	jnz LB_2464
	cmp BYTE [rdi+2],162
	jnz LB_2464
	jmp LB_2465
LB_2464:
	mov r8,unt_1
	jmp LB_2460
LB_2465:
	add r14,3
	jmp LB_2461
LB_2460:
	add rsp,0
	POP_GRM_FAIL
	ret
LB_2461:
	jmp LB_2467
LB_2466:
	add r14,1 
LB_2467:
	cmp r14,r9
	jge LB_2468
	JZ_SPC BYTE [r13+8+r14], LB_2466
LB_2468
	call GRM_211
	cmp BYTE [r8+6],0
	jnz LB_2471
	jmp LB_2472
LB_2471:
	jmp LB_2469
LB_2472:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a13◂ [ {| l |}] ) ⊢ 8'(= a13◂ [ {| l |}] )
; .mov_ptn 2'(= a13◂ [ {| l |}] ) ⊢ 8'(= a13◂ [ {| l |}] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_2470
LB_2469:
	add rsp,0
	POP_GRM_FAIL
	ret
LB_2470:
	mov QWORD [rsp+8*1],r14
	mov r13,QWORD [rsp+16+8*1]
	mov r14,QWORD [rsp+8*1]
	jmp LB_2473
LB_2473
;; rsp=1 , %1661~1'(= r ) %1660~0'(= r ) %1659~8'(= a13◂ [ {| l |}] ) %1658~{ } 
; #22 { } ⊢ 1(<2)◂{ }
;; rsp=1 , %1662~1(<2)◂{ } %1661~1'(= r ) %1660~0'(= r ) %1659~8'(= a13◂ [ {| l |}] ) %1658~{ } 
; #22 { } ⊢ 1(<2)◂{ }
;; rsp=1 , %1663~1(<2)◂{ } %1662~1(<2)◂{ } %1661~1'(= r ) %1660~0'(= r ) %1659~8'(= a13◂ [ {| l |}] ) %1658~{ } 
; #23 { 8'(= a13◂ [ {| l |}] ) 1(<2)◂{ } } ⊢ 0(<2)◂{ 8'(= a13◂ [ {| l |}] ) 1(<2)◂{ } }
;; rsp=1 , %1664~0(<2)◂{ 8'(= a13◂ [ {| l |}] ) 1(<2)◂{ } } %1662~1(<2)◂{ } %1661~1'(= r ) %1660~0'(= r ) %1658~{ } 
; #24 { 1(<2)◂{ } 0(<2)◂{ 8'(= a13◂ [ {| l |}] ) 1(<2)◂{ } } } ⊢ 0(<2)◂{ 1(<2)◂{ } 0(<2)◂{ 8'(= a13◂ [ {| l |}] ) 1(<2)◂{ } } }
;; rsp=1 , %1665~0(<2)◂{ 1(<2)◂{ } 0(<2)◂{ 8'(= a13◂ [ {| l |}] ) 1(<2)◂{ } } } %1661~1'(= r ) %1660~0'(= r ) %1658~{ } 
; ∎ 0(<2)◂{ 1(<2)◂{ } 0(<2)◂{ 8'(= a13◂ [ {| l |}] ) 1(<2)◂{ } } }
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn { }
; .mov_ptn2 0(<2)◂{ 1(<2)◂{ } 0(<2)◂{ 8'(= a13◂ [ {| l |}] ) 1(<2)◂{ } } } ⊢ 2'(= a3◂ [ *{ a2◂ [ a12◂ [ a9◂ [ ]{| l |}]]a2◂ [ a13◂ [ {| l |}]]}] )
; .mov_ptn 0(<2)◂{ 1(<2)◂{ } 0(<2)◂{ 8'(= a13◂ [ {| l |}] ) 1(<2)◂{ } } } ⊢ 2'(= a3◂ [ *{ a2◂ [ a12◂ [ a9◂ [ ]{| l |}]]a2◂ [ a13◂ [ {| l |}]]}] )
	ALC_RCD 2, rax
	mov r13,rax
	mov rax,unt 
	mov rax,unt_1
	mov QWORD [r13+8+8*0],rax
	ALC_RCD 2, rax
	mov r14,rax
	mov rax,QWORD [rsp-8+8*1]
	mov QWORD [r14+8+8*0],rax
	mov rax,unt 
	mov rax,unt_1
	mov QWORD [r14+8+8*1],rax
	mov rax,r14
	mov BYTE [rax+6],0
	mov QWORD [r13+8+8*1],rax
	mov rax,r13
	mov BYTE [rax+6],0
	mov r8,rax
	add rsp,8
	jmp LB_2474
LB_2474:
	cmp BYTE [r8+6],0
	jnz LB_2449
	POP_GRM_SCC
	ret
LB_2449:
	RB_GRM
	jmp LB_2477
LB_2476:
	add r14,1 
LB_2477:
	cmp r14,r9
	jge LB_2478
	JZ_SPC BYTE [r13+8+r14], LB_2476
LB_2478
	call GRM_206
	cmp BYTE [r8+6],0
	jnz LB_2481
	jmp LB_2482
LB_2481:
	jmp LB_2479
LB_2482:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a12◂ [ a9◂ [ ]{| l |}] ) ⊢ 8'(= a12◂ [ a9◂ [ ]{| l |}] )
; .mov_ptn 2'(= a12◂ [ a9◂ [ ]{| l |}] ) ⊢ 8'(= a12◂ [ a9◂ [ ]{| l |}] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_2480
LB_2479:
	add rsp,0
	jmp LB_2475
LB_2480:
	jmp LB_2484
LB_2483:
	add r14,1 
LB_2484:
	cmp r14,r9
	jge LB_2485
	JZ_SPC BYTE [r13+8+r14], LB_2483
LB_2485
	call GRM_205
	cmp BYTE [r8+6],0
	jnz LB_2488
	jmp LB_2489
LB_2488:
	jmp LB_2486
LB_2489:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a2◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) ⊢ 9'(= a2◂ [ a12◂ [ a9◂ [ ]{| l |}]] )
; .mov_ptn 2'(= a2◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) ⊢ 9'(= a2◂ [ a12◂ [ a9◂ [ ]{| l |}]] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_2487
LB_2486:
	add rsp,8
	jmp LB_2475
LB_2487:
	jmp LB_2491
LB_2490:
	add r14,1 
LB_2491:
	cmp r14,r9
	jge LB_2492
	JZ_SPC BYTE [r13+8+r14], LB_2490
LB_2492
	lea rax,[r14+3]
	cmp rax,r9
	jg LB_2495
	jmp LB_2496
LB_2495:
	mov r8,unt_1
	jmp LB_2493
LB_2496:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],226
	jnz LB_2497
	cmp BYTE [rdi+1],138
	jnz LB_2497
	cmp BYTE [rdi+2],162
	jnz LB_2497
	jmp LB_2498
LB_2497:
	mov r8,unt_1
	jmp LB_2493
LB_2498:
	add r14,3
	jmp LB_2494
LB_2493:
	add rsp,16
	jmp LB_2475
LB_2494:
	jmp LB_2500
LB_2499:
	add r14,1 
LB_2500:
	cmp r14,r9
	jge LB_2501
	JZ_SPC BYTE [r13+8+r14], LB_2499
LB_2501
	call GRM_211
	cmp BYTE [r8+6],0
	jnz LB_2504
	jmp LB_2505
LB_2504:
	jmp LB_2502
LB_2505:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a13◂ [ {| l |}] ) ⊢ 10'(= a13◂ [ {| l |}] )
; .mov_ptn 2'(= a13◂ [ {| l |}] ) ⊢ 10'(= a13◂ [ {| l |}] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_2503
LB_2502:
	add rsp,16
	jmp LB_2475
LB_2503:
	jmp LB_2507
LB_2506:
	add r14,1 
LB_2507:
	cmp r14,r9
	jge LB_2508
	JZ_SPC BYTE [r13+8+r14], LB_2506
LB_2508
	call GRM_210
	cmp BYTE [r8+6],0
	jnz LB_2511
	jmp LB_2512
LB_2511:
	jmp LB_2509
LB_2512:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a2◂ [ a13◂ [ {| l |}]] ) ⊢ 11'(= a2◂ [ a13◂ [ {| l |}]] )
; .mov_ptn 2'(= a2◂ [ a13◂ [ {| l |}]] ) ⊢ 11'(= a2◂ [ a13◂ [ {| l |}]] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_2510
LB_2509:
	add rsp,24
	jmp LB_2475
LB_2510:
	mov QWORD [rsp+8*4],r14
	mov r13,QWORD [rsp+16+8*4]
	mov r14,QWORD [rsp+8*4]
	jmp LB_2513
LB_2513
;; rsp=4 , %1671~1'(= r ) %1670~0'(= r ) %1669~11'(= a2◂ [ a13◂ [ {| l |}]] ) %1668~10'(= a13◂ [ {| l |}] ) %1667~9'(= a2◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) %1666~8'(= a12◂ [ a9◂ [ ]{| l |}] ) 
; #23 { 8'(= a12◂ [ a9◂ [ ]{| l |}] ) 9'(= a2◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) } ⊢ 0(<2)◂{ 8'(= a12◂ [ a9◂ [ ]{| l |}] ) 9'(= a2◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) }
;; rsp=4 , %1672~0(<2)◂{ 8'(= a12◂ [ a9◂ [ ]{| l |}] ) 9'(= a2◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) } %1671~1'(= r ) %1670~0'(= r ) %1669~11'(= a2◂ [ a13◂ [ {| l |}]] ) %1668~10'(= a13◂ [ {| l |}] ) 
; #23 { 10'(= a13◂ [ {| l |}] ) 11'(= a2◂ [ a13◂ [ {| l |}]] ) } ⊢ 0(<2)◂{ 10'(= a13◂ [ {| l |}] ) 11'(= a2◂ [ a13◂ [ {| l |}]] ) }
;; rsp=4 , %1673~0(<2)◂{ 10'(= a13◂ [ {| l |}] ) 11'(= a2◂ [ a13◂ [ {| l |}]] ) } %1672~0(<2)◂{ 8'(= a12◂ [ a9◂ [ ]{| l |}] ) 9'(= a2◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) } %1671~1'(= r ) %1670~0'(= r ) 
; #24 { 0(<2)◂{ 8'(= a12◂ [ a9◂ [ ]{| l |}] ) 9'(= a2◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) } 0(<2)◂{ 10'(= a13◂ [ {| l |}] ) 11'(= a2◂ [ a13◂ [ {| l |}]] ) } } ⊢ 0(<2)◂{ 0(<2)◂{ 8'(= a12◂ [ a9◂ [ ]{| l |}] ) 9'(= a2◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) } 0(<2)◂{ 10'(= a13◂ [ {| l |}] ) 11'(= a2◂ [ a13◂ [ {| l |}]] ) } }
;; rsp=4 , %1674~0(<2)◂{ 0(<2)◂{ 8'(= a12◂ [ a9◂ [ ]{| l |}] ) 9'(= a2◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) } 0(<2)◂{ 10'(= a13◂ [ {| l |}] ) 11'(= a2◂ [ a13◂ [ {| l |}]] ) } } %1671~1'(= r ) %1670~0'(= r ) 
; ∎ 0(<2)◂{ 0(<2)◂{ 8'(= a12◂ [ a9◂ [ ]{| l |}] ) 9'(= a2◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) } 0(<2)◂{ 10'(= a13◂ [ {| l |}] ) 11'(= a2◂ [ a13◂ [ {| l |}]] ) } }
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂{ 0(<2)◂{ 8'(= a12◂ [ a9◂ [ ]{| l |}] ) 9'(= a2◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) } 0(<2)◂{ 10'(= a13◂ [ {| l |}] ) 11'(= a2◂ [ a13◂ [ {| l |}]] ) } } ⊢ 2'(= a3◂ [ *{ a2◂ [ a12◂ [ a9◂ [ ]{| l |}]]a2◂ [ a13◂ [ {| l |}]]}] )
; .mov_ptn 0(<2)◂{ 0(<2)◂{ 8'(= a12◂ [ a9◂ [ ]{| l |}] ) 9'(= a2◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) } 0(<2)◂{ 10'(= a13◂ [ {| l |}] ) 11'(= a2◂ [ a13◂ [ {| l |}]] ) } } ⊢ 2'(= a3◂ [ *{ a2◂ [ a12◂ [ a9◂ [ ]{| l |}]]a2◂ [ a13◂ [ {| l |}]]}] )
	ALC_RCD 2, rax
	mov r13,rax
	ALC_RCD 2, rax
	mov r14,rax
	mov rax,QWORD [rsp-8+8*4]
	mov QWORD [r14+8+8*0],rax
	mov rax,QWORD [rsp-8+8*3]
	mov QWORD [r14+8+8*1],rax
	mov rax,r14
	mov BYTE [rax+6],0
	mov QWORD [r13+8+8*0],rax
	ALC_RCD 2, rax
	mov r14,rax
	mov rax,QWORD [rsp-8+8*2]
	mov QWORD [r14+8+8*0],rax
	mov rax,QWORD [rsp-8+8*1]
	mov QWORD [r14+8+8*1],rax
	mov rax,r14
	mov BYTE [rax+6],0
	mov QWORD [r13+8+8*1],rax
	mov rax,r13
	mov BYTE [rax+6],0
	mov r8,rax
	add rsp,32
	jmp LB_2514
LB_2514:
	cmp BYTE [r8+6],0
	jnz LB_2475
	POP_GRM_SCC
	ret
LB_2475:
	POP_GRM_FAIL 
	ret
ETR_236:
	mov r9,0x0000_ffff_ffff_ffff
	and r9,[r13]
	call GRM_236
	ret
GRM_236:
	PUSH_GRM
	jmp LB_2517
LB_2516:
	add r14,1 
LB_2517:
	cmp r14,r9
	jge LB_2518
	JZ_SPC BYTE [r13+8+r14], LB_2516
LB_2518
	call GRM_219
	cmp BYTE [r8+6],0
	jnz LB_2521
	jmp LB_2522
LB_2521:
	jmp LB_2519
LB_2522:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a35◂ [ *{ }] ) ⊢ 8'(= a35◂ [ *{ }] )
; .mov_ptn 2'(= a35◂ [ *{ }] ) ⊢ 8'(= a35◂ [ *{ }] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_2520
LB_2519:
	add rsp,0
	jmp LB_2515
LB_2520:
	jmp LB_2524
LB_2523:
	add r14,1 
LB_2524:
	cmp r14,r9
	jge LB_2525
	JZ_SPC BYTE [r13+8+r14], LB_2523
LB_2525
	lea rax,[r14+4]
	cmp rax,r9
	jg LB_2528
	jmp LB_2529
LB_2528:
	mov r8,unt_1
	jmp LB_2526
LB_2529:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],226
	jnz LB_2530
	cmp BYTE [rdi+1],136
	jnz LB_2530
	cmp BYTE [rdi+2],142
	jnz LB_2530
	cmp BYTE [rdi+3],124
	jnz LB_2530
	jmp LB_2531
LB_2530:
	mov r8,unt_1
	jmp LB_2526
LB_2531:
	add r14,4
	jmp LB_2527
LB_2526:
	add rsp,8
	jmp LB_2515
LB_2527:
	mov QWORD [rsp+8*1],r14
	mov r13,QWORD [rsp+16+8*1]
	mov r14,QWORD [rsp+8*1]
	jmp LB_2532
LB_2532
;; rsp=1 , %1677~1'(= r ) %1676~0'(= r ) %1675~8'(= a35◂ [ *{ }] ) 
; #127 0'(= r ) ⊢ 6(<7)◂0'(= r )
;; rsp=1 , %1678~6(<7)◂0'(= r ) %1677~1'(= r ) %1675~8'(= a35◂ [ *{ }] ) 
; #195 6(<7)◂0'(= r ) ⊢ 0(<2)◂6(<7)◂0'(= r )
;; rsp=1 , %1679~0(<2)◂6(<7)◂0'(= r ) %1677~1'(= r ) %1675~8'(= a35◂ [ *{ }] ) 
; #24 0(<2)◂6(<7)◂0'(= r ) ⊢ 0(<2)◂0(<2)◂6(<7)◂0'(= r )
;; rsp=1 , %1680~0(<2)◂0(<2)◂6(<7)◂0'(= r ) %1677~1'(= r ) %1675~8'(= a35◂ [ *{ }] ) 
; ∎ 0(<2)◂0(<2)◂6(<7)◂0'(= r )
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 8'(= a35◂ [ *{ }] )
	mov rdi,QWORD [rsp-8+8*1]
	C_PUSH_REGS
	mov r8,rdi
	call LB_1701
	C_POP_REGS
; .mov_ptn2 0(<2)◂0(<2)◂6(<7)◂0'(= r ) ⊢ 2'(= a3◂ [ a35◂ [ a17◂ [ a9◂ [ ]{| l |}]]] )
; .mov_ptn 0(<2)◂0(<2)◂6(<7)◂0'(= r ) ⊢ 2'(= a3◂ [ a35◂ [ a17◂ [ a9◂ [ ]{| l |}]]] )
	mov rax,r13
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],6
	mov QWORD [rax+8],rdi
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,8
	jmp LB_2533
LB_2533:
	cmp BYTE [r8+6],0
	jnz LB_2515
	POP_GRM_SCC
	ret
LB_2515:
	RB_GRM
	jmp LB_2536
LB_2535:
	add r14,1 
LB_2536:
	cmp r14,r9
	jge LB_2537
	JZ_SPC BYTE [r13+8+r14], LB_2535
LB_2537
	call GRM_219
	cmp BYTE [r8+6],0
	jnz LB_2540
	jmp LB_2541
LB_2540:
	jmp LB_2538
LB_2541:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a35◂ [ *{ }] ) ⊢ 8'(= a35◂ [ *{ }] )
; .mov_ptn 2'(= a35◂ [ *{ }] ) ⊢ 8'(= a35◂ [ *{ }] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_2539
LB_2538:
	add rsp,0
	jmp LB_2534
LB_2539:
	jmp LB_2543
LB_2542:
	add r14,1 
LB_2543:
	cmp r14,r9
	jge LB_2544
	JZ_SPC BYTE [r13+8+r14], LB_2542
LB_2544
	lea rax,[r14+3]
	cmp rax,r9
	jg LB_2547
	jmp LB_2548
LB_2547:
	mov r8,unt_1
	jmp LB_2545
LB_2548:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],226
	jnz LB_2549
	cmp BYTE [rdi+1],136
	jnz LB_2549
	cmp BYTE [rdi+2],142
	jnz LB_2549
	jmp LB_2550
LB_2549:
	mov r8,unt_1
	jmp LB_2545
LB_2550:
	add r14,3
	jmp LB_2546
LB_2545:
	add rsp,8
	jmp LB_2534
LB_2546:
	PUSH_GRM
	jmp LB_2554
LB_2553:
	add r14,1 
LB_2554:
	cmp r14,r9
	jge LB_2555
	JZ_SPC BYTE [r13+8+r14], LB_2553
LB_2555
	call GRM_203
	cmp BYTE [r8+6],0
	jnz LB_2558
	jmp LB_2559
LB_2558:
	jmp LB_2556
LB_2559:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) ⊢ 8'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] )
; .mov_ptn 2'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) ⊢ 8'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_2557
LB_2556:
	add rsp,0
	jmp LB_2552
LB_2557:
	mov QWORD [rsp+8*1],r14
	mov r13,QWORD [rsp+16+8*1]
	mov r14,QWORD [rsp+8*1]
	jmp LB_2560
LB_2560
;; rsp=1 , %1686~1'(= r ) %1685~0'(= r ) %1684~8'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) 
; #128 8'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) ⊢ 5(<7)◂8'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] )
;; rsp=1 , %1687~5(<7)◂8'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) %1686~1'(= r ) %1685~0'(= r ) 
; #195 5(<7)◂8'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) ⊢ 0(<2)◂5(<7)◂8'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] )
;; rsp=1 , %1688~0(<2)◂5(<7)◂8'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) %1686~1'(= r ) %1685~0'(= r ) 
; #24 0(<2)◂5(<7)◂8'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) ⊢ 0(<2)◂0(<2)◂5(<7)◂8'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] )
;; rsp=1 , %1689~0(<2)◂0(<2)◂5(<7)◂8'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) %1686~1'(= r ) %1685~0'(= r ) 
; ∎ 0(<2)◂0(<2)◂5(<7)◂8'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] )
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂0(<2)◂5(<7)◂8'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) ⊢ 2'(= a3◂ [ a35◂ [ a17◂ [ a9◂ [ ]{| l |}]]] )
; .mov_ptn 0(<2)◂0(<2)◂5(<7)◂8'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) ⊢ 2'(= a3◂ [ a35◂ [ a17◂ [ a9◂ [ ]{| l |}]]] )
	mov rax,QWORD [rsp-8+8*1]
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],5
	mov QWORD [rax+8],rdi
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,8
	jmp LB_2561
LB_2561:
	cmp BYTE [r8+6],0
	jnz LB_2552
	POP_GRM_SCC
	jmp LB_2551
LB_2552:
	RB_GRM
	jmp LB_2564
LB_2563:
	add r14,1 
LB_2564:
	cmp r14,r9
	jge LB_2565
	JZ_SPC BYTE [r13+8+r14], LB_2563
LB_2565
	call GRM_222
	cmp BYTE [r8+6],0
	jnz LB_2568
	jmp LB_2569
LB_2568:
	jmp LB_2566
LB_2569:
	sub rsp,16
; .mov_ptn2 2'(= *{ rr} ) ⊢ { 8'(= r ) 9'(= r ) }
; .mov_ptn 2'(= *{ rr} ) ⊢ { 8'(= r ) 9'(= r ) }
	mov r10, QWORD [r8+8]
	mov QWORD [rsp-8+8*2],r10
	mov r11, QWORD [r8+16]
	mov QWORD [rsp-8+8*1],r11
	jmp LB_2567
LB_2566:
	add rsp,0
	jmp LB_2562
LB_2567:
	mov QWORD [rsp+8*2],r14
	mov r13,QWORD [rsp+16+8*2]
	mov r14,QWORD [rsp+8*2]
	jmp LB_2570
LB_2570
;; rsp=2 , %1692~1'(= r ) %1691~0'(= r ) %1690~{ 8'(= r ) 9'(= r ) } 
; $ %[ "lc_code ∎ .. " ] ⊢ %[ "lc_code ∎ .. " ]
;; rsp=2 , %1693~%[ "lc_code ∎ .. " ] %1692~1'(= r ) %1691~0'(= r ) %1690~{ 8'(= r ) 9'(= r ) } 
; #22 { } ⊢ 1(<2)◂{ }
;; rsp=2 , %1694~1(<2)◂{ } %1693~%[ "lc_code ∎ .. " ] %1692~1'(= r ) %1691~0'(= r ) %1690~{ 8'(= r ) 9'(= r ) } 
; #23 { { 0'(= r ) 1'(= r ) %[ "lc_code ∎ .. " ] } 1(<2)◂{ } } ⊢ 0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "lc_code ∎ .. " ] } 1(<2)◂{ } }
;; rsp=2 , %1695~0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "lc_code ∎ .. " ] } 1(<2)◂{ } } %1690~{ 8'(= r ) 9'(= r ) } 
; #194 0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "lc_code ∎ .. " ] } 1(<2)◂{ } } ⊢ 1(<2)◂0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "lc_code ∎ .. " ] } 1(<2)◂{ } }
;; rsp=2 , %1696~1(<2)◂0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "lc_code ∎ .. " ] } 1(<2)◂{ } } %1690~{ 8'(= r ) 9'(= r ) } 
; #24 1(<2)◂0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "lc_code ∎ .. " ] } 1(<2)◂{ } } ⊢ 0(<2)◂1(<2)◂0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "lc_code ∎ .. " ] } 1(<2)◂{ } }
;; rsp=2 , %1697~0(<2)◂1(<2)◂0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "lc_code ∎ .. " ] } 1(<2)◂{ } } %1690~{ 8'(= r ) 9'(= r ) } 
; ∎ 0(<2)◂1(<2)◂0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "lc_code ∎ .. " ] } 1(<2)◂{ } }
; .dlt.ptn { 8'(= r ) 9'(= r ) }
	mov rdi,QWORD [rsp-8+8*2]
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
	mov rdi,QWORD [rsp-8+8*1]
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂1(<2)◂0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "lc_code ∎ .. " ] } 1(<2)◂{ } } ⊢ 2'(= a3◂ [ a35◂ [ a17◂ [ a9◂ [ ]{| l |}]]] )
; .mov_ptn 0(<2)◂1(<2)◂0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "lc_code ∎ .. " ] } 1(<2)◂{ } } ⊢ 2'(= a3◂ [ a35◂ [ a17◂ [ a9◂ [ ]{| l |}]]] )
	ALC_RCD 2, rax
	mov r9,rax
	ALC_RCD 3, rax
	mov r10,rax
	mov rax,r13
	mov QWORD [r10+8+8*0],rax
	mov rax,r14
	mov QWORD [r10+8+8*1],rax
	mov rsi,1  
	mov rdi,24
	xor rax,rax 
	C_CALL_SF calloc
	mov QWORD [rax],15
	mov BYTE [rax+8+0],108
	mov BYTE [rax+8+1],99
	mov BYTE [rax+8+2],95
	mov BYTE [rax+8+3],99
	mov BYTE [rax+8+4],111
	mov BYTE [rax+8+5],100
	mov BYTE [rax+8+6],101
	mov BYTE [rax+8+7],32
	mov BYTE [rax+8+8],226
	mov BYTE [rax+8+9],136
	mov BYTE [rax+8+10],142
	mov BYTE [rax+8+11],32
	mov BYTE [rax+8+12],46
	mov BYTE [rax+8+13],46
	mov BYTE [rax+8+14],32
	mov QWORD [r10+8+8*2],rax
	mov rax,r10
	mov QWORD [r9+8+8*0],rax
	mov rax,unt 
	mov rax,unt_1
	mov QWORD [r9+8+8*1],rax
	mov rax,r9
	mov BYTE [rax+6],0
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],1
	mov QWORD [rax+8],rdi
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,16
	jmp LB_2571
LB_2571:
	cmp BYTE [r8+6],0
	jnz LB_2562
	POP_GRM_SCC
	jmp LB_2551
LB_2562:
	POP_GRM_FAIL 
	jmp LB_2551
LB_2551:
	cmp BYTE [r8+6],0
	jnz LB_2572
	jmp LB_2573
LB_2572:
	add rsp,8
	POP_GRM_FAIL
	ret
LB_2573:
	mov QWORD [rsp+8*1],r14
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi 
; .mov_ptn2 2'(= a35◂ [ a17◂ [ a9◂ [ ]{| l |}]] ) ⊢ 3'(= a35◂ [ a17◂ [ a9◂ [ ]{| l |}]] )
	mov r10,r9
; .mov_ptn 2'(= a35◂ [ a17◂ [ a9◂ [ ]{| l |}]] ) ⊢ 3'(= a35◂ [ a17◂ [ a9◂ [ ]{| l |}]] )
	mov rax,r8
	mov r9,rax
	mov r13,QWORD [rsp+16+8*1]
	mov r14,QWORD [rsp+8*1]
	jmp LB_2574
LB_2574
;; rsp=1 , %1698~3'(= a35◂ [ a17◂ [ a9◂ [ ]{| l |}]] ) %1683~1'(= r ) %1682~0'(= r ) %1681~8'(= a35◂ [ *{ }] ) 
; #24 3'(= a35◂ [ a17◂ [ a9◂ [ ]{| l |}]] ) ⊢ 0(<2)◂3'(= a35◂ [ a17◂ [ a9◂ [ ]{| l |}]] )
;; rsp=1 , %1699~0(<2)◂3'(= a35◂ [ a17◂ [ a9◂ [ ]{| l |}]] ) %1683~1'(= r ) %1682~0'(= r ) %1681~8'(= a35◂ [ *{ }] ) 
; ∎ 0(<2)◂3'(= a35◂ [ a17◂ [ a9◂ [ ]{| l |}]] )
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 8'(= a35◂ [ *{ }] )
	mov rdi,QWORD [rsp-8+8*1]
	C_PUSH_REGS
	mov r8,rdi
	call LB_1701
	C_POP_REGS
; .mov_ptn2 0(<2)◂3'(= a35◂ [ a17◂ [ a9◂ [ ]{| l |}]] ) ⊢ 2'(= a3◂ [ a35◂ [ a17◂ [ a9◂ [ ]{| l |}]]] )
; .mov_ptn 0(<2)◂3'(= a35◂ [ a17◂ [ a9◂ [ ]{| l |}]] ) ⊢ 2'(= a3◂ [ a35◂ [ a17◂ [ a9◂ [ ]{| l |}]]] )
	mov rax,r9
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,8
	jmp LB_2575
LB_2575:
	cmp BYTE [r8+6],0
	jnz LB_2534
	POP_GRM_SCC
	ret
LB_2534:
	RB_GRM
	jmp LB_2578
LB_2577:
	add r14,1 
LB_2578:
	cmp r14,r9
	jge LB_2579
	JZ_LINE_SPC BYTE [r13+8+r14], LB_2577
LB_2579
	call GRM_219
	cmp BYTE [r8+6],0
	jnz LB_2582
	jmp LB_2583
LB_2582:
	jmp LB_2580
LB_2583:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a35◂ [ *{ }] ) ⊢ 8'(= a35◂ [ *{ }] )
; .mov_ptn 2'(= a35◂ [ *{ }] ) ⊢ 8'(= a35◂ [ *{ }] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_2581
LB_2580:
	add rsp,0
	jmp LB_2576
LB_2581:
	jmp LB_2585
LB_2584:
	add r14,1 
LB_2585:
	cmp r14,r9
	jge LB_2586
	JZ_LINE_SPC BYTE [r13+8+r14], LB_2584
LB_2586
	lea rax,[r14+1]
	cmp rax,r9
	jg LB_2589
	jmp LB_2590
LB_2589:
	mov r8,unt_1
	jmp LB_2587
LB_2590:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],94
	jnz LB_2591
	jmp LB_2592
LB_2591:
	mov r8,unt_1
	jmp LB_2587
LB_2592:
	add r14,1
	jmp LB_2588
LB_2587:
	add rsp,8
	jmp LB_2576
LB_2588:
	jmp LB_2594
LB_2593:
	add r14,1 
LB_2594:
	cmp r14,r9
	jge LB_2595
	JZ_LINE_SPC BYTE [r13+8+r14], LB_2593
LB_2595
	call GRM_235
	cmp BYTE [r8+6],0
	jnz LB_2598
	jmp LB_2599
LB_2598:
	jmp LB_2596
LB_2599:
	sub rsp,16
; .mov_ptn2 2'(= *{ a2◂ [ a12◂ [ a9◂ [ ]{| l |}]]a2◂ [ a13◂ [ {| l |}]]} ) ⊢ { 9'(= a2◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) 10'(= a2◂ [ a13◂ [ {| l |}]] ) }
; .mov_ptn 2'(= *{ a2◂ [ a12◂ [ a9◂ [ ]{| l |}]]a2◂ [ a13◂ [ {| l |}]]} ) ⊢ { 9'(= a2◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) 10'(= a2◂ [ a13◂ [ {| l |}]] ) }
	mov r10, QWORD [r8+8]
	mov QWORD [rsp-8+8*2],r10
	mov r11, QWORD [r8+16]
	mov QWORD [rsp-8+8*1],r11
	jmp LB_2597
LB_2596:
	add rsp,8
	POP_GRM_FAIL
	ret
LB_2597:
	jmp LB_2601
LB_2600:
	add r14,1 
LB_2601:
	cmp r14,r9
	jge LB_2602
	JZ_LINE_SPC BYTE [r13+8+r14], LB_2600
LB_2602
	lea rax,[r14+1]
	cmp rax,r9
	jg LB_2605
	jmp LB_2606
LB_2605:
	mov r8,unt_1
	jmp LB_2603
LB_2606:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],10
	jnz LB_2607
	jmp LB_2608
LB_2607:
	mov r8,unt_1
	jmp LB_2603
LB_2608:
	add r14,1
	jmp LB_2604
LB_2603:
	add rsp,24
	POP_GRM_FAIL
	ret
LB_2604:
	jmp LB_2610
LB_2609:
	add r14,1 
LB_2610:
	cmp r14,r9
	jge LB_2611
	JZ_LINE_SPC BYTE [r13+8+r14], LB_2609
LB_2611
	call GRM_233
	cmp BYTE [r8+6],0
	jnz LB_2614
	jmp LB_2615
LB_2614:
	jmp LB_2612
LB_2615:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a2◂ [ a16◂ [ a9◂ [ ]]] ) ⊢ 11'(= a2◂ [ a16◂ [ a9◂ [ ]]] )
; .mov_ptn 2'(= a2◂ [ a16◂ [ a9◂ [ ]]] ) ⊢ 11'(= a2◂ [ a16◂ [ a9◂ [ ]]] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_2613
LB_2612:
	add rsp,24
	POP_GRM_FAIL
	ret
LB_2613:
	jmp LB_2617
LB_2616:
	add r14,1 
LB_2617:
	cmp r14,r9
	jge LB_2618
	JZ_LINE_SPC BYTE [r13+8+r14], LB_2616
LB_2618
	call GRM_236
	cmp BYTE [r8+6],0
	jnz LB_2621
	jmp LB_2622
LB_2621:
	jmp LB_2619
LB_2622:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a35◂ [ a17◂ [ a9◂ [ ]{| l |}]] ) ⊢ 12'(= a35◂ [ a17◂ [ a9◂ [ ]{| l |}]] )
; .mov_ptn 2'(= a35◂ [ a17◂ [ a9◂ [ ]{| l |}]] ) ⊢ 12'(= a35◂ [ a17◂ [ a9◂ [ ]{| l |}]] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_2620
LB_2619:
	add rsp,32
	POP_GRM_FAIL
	ret
LB_2620:
	mov QWORD [rsp+8*5],r14
	mov r13,QWORD [rsp+16+8*5]
	mov r14,QWORD [rsp+8*5]
	jmp LB_2623
LB_2623
;; rsp=5 , %1706~1'(= r ) %1705~0'(= r ) %1704~12'(= a35◂ [ a17◂ [ a9◂ [ ]{| l |}]] ) %1703~11'(= a2◂ [ a16◂ [ a9◂ [ ]]] ) %1702~10'(= a2◂ [ a13◂ [ {| l |}]] ) %1701~9'(= a2◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) %1700~8'(= a35◂ [ *{ }] ) 
; #54 11'(= a2◂ [ a16◂ [ a9◂ [ ]]] ) ⊢ 2'(= a2◂ [ a16◂ [ a9◂ [ ]]] )
	sub rsp,16
	mov QWORD [rsp+8*0],r13
	mov QWORD [rsp+8*1],r14
; .mov_ptn2 11'(= a2◂ [ a16◂ [ a9◂ [ ]]] ) ⊢ 0'(= a2◂ [ a16◂ [ a9◂ [ ]]] )
; .mov_ptn 11'(= a2◂ [ a16◂ [ a9◂ [ ]]] ) ⊢ 0'(= a2◂ [ a16◂ [ a9◂ [ ]]] )
	mov rax,QWORD [rsp-8+8*4]
	mov r13,rax
	call LB_2625
	mov r14,QWORD [rsp-8+8*2]
	mov r8,r13
	mov r13,QWORD [rsp-8+8*1]
	add rsp,16
;; rsp=5 , %1707~2'(= a2◂ [ a16◂ [ a9◂ [ ]]] ) %1706~1'(= r ) %1705~0'(= r ) %1704~12'(= a35◂ [ a17◂ [ a9◂ [ ]{| l |}]] ) %1702~10'(= a2◂ [ a13◂ [ {| l |}]] ) %1701~9'(= a2◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) %1700~8'(= a35◂ [ *{ }] ) 
; #121 { 2'(= a2◂ [ a16◂ [ a9◂ [ ]]] ) 9'(= a2◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) 10'(= a2◂ [ a13◂ [ {| l |}]] ) } ⊢ 3(<4)◂{ 2'(= a2◂ [ a16◂ [ a9◂ [ ]]] ) 9'(= a2◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) 10'(= a2◂ [ a13◂ [ {| l |}]] ) }
;; rsp=5 , %1708~3(<4)◂{ 2'(= a2◂ [ a16◂ [ a9◂ [ ]]] ) 9'(= a2◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) 10'(= a2◂ [ a13◂ [ {| l |}]] ) } %1706~1'(= r ) %1705~0'(= r ) %1704~12'(= a35◂ [ a17◂ [ a9◂ [ ]{| l |}]] ) %1700~8'(= a35◂ [ *{ }] ) 
;; ? 12'(= a35◂ [ a17◂ [ a9◂ [ ]{| l |}]] ) ⊢ 0(<2)◂3'(= a17◂ [ a9◂ [ ]{| l |}] )
	mov rdi,QWORD [rsp-8+8*1]
	cmp BYTE [rdi+6],0
	jnz LB_2628
	mov QWORD [GBG_VCT+8*0],rdi
	mov r9,QWORD [rdi+8]
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_LN rdi
;; rsp=5 , %1710~3'(= a17◂ [ a9◂ [ ]{| l |}] ) %1708~3(<4)◂{ 2'(= a2◂ [ a16◂ [ a9◂ [ ]]] ) 9'(= a2◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) 10'(= a2◂ [ a13◂ [ {| l |}]] ) } %1706~1'(= r ) %1705~0'(= r ) %1700~8'(= a35◂ [ *{ }] ) 
; #131 { 3(<4)◂{ 2'(= a2◂ [ a16◂ [ a9◂ [ ]]] ) 9'(= a2◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) 10'(= a2◂ [ a13◂ [ {| l |}]] ) } 3'(= a17◂ [ a9◂ [ ]{| l |}] ) } ⊢ 2(<7)◂{ 3(<4)◂{ 2'(= a2◂ [ a16◂ [ a9◂ [ ]]] ) 9'(= a2◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) 10'(= a2◂ [ a13◂ [ {| l |}]] ) } 3'(= a17◂ [ a9◂ [ ]{| l |}] ) }
;; rsp=5 , %1711~2(<7)◂{ 3(<4)◂{ 2'(= a2◂ [ a16◂ [ a9◂ [ ]]] ) 9'(= a2◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) 10'(= a2◂ [ a13◂ [ {| l |}]] ) } 3'(= a17◂ [ a9◂ [ ]{| l |}] ) } %1706~1'(= r ) %1705~0'(= r ) %1700~8'(= a35◂ [ *{ }] ) 
; #195 2(<7)◂{ 3(<4)◂{ 2'(= a2◂ [ a16◂ [ a9◂ [ ]]] ) 9'(= a2◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) 10'(= a2◂ [ a13◂ [ {| l |}]] ) } 3'(= a17◂ [ a9◂ [ ]{| l |}] ) } ⊢ 0(<2)◂2(<7)◂{ 3(<4)◂{ 2'(= a2◂ [ a16◂ [ a9◂ [ ]]] ) 9'(= a2◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) 10'(= a2◂ [ a13◂ [ {| l |}]] ) } 3'(= a17◂ [ a9◂ [ ]{| l |}] ) }
;; rsp=5 , %1712~0(<2)◂2(<7)◂{ 3(<4)◂{ 2'(= a2◂ [ a16◂ [ a9◂ [ ]]] ) 9'(= a2◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) 10'(= a2◂ [ a13◂ [ {| l |}]] ) } 3'(= a17◂ [ a9◂ [ ]{| l |}] ) } %1706~1'(= r ) %1705~0'(= r ) %1700~8'(= a35◂ [ *{ }] ) 
; #24 0(<2)◂2(<7)◂{ 3(<4)◂{ 2'(= a2◂ [ a16◂ [ a9◂ [ ]]] ) 9'(= a2◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) 10'(= a2◂ [ a13◂ [ {| l |}]] ) } 3'(= a17◂ [ a9◂ [ ]{| l |}] ) } ⊢ 0(<2)◂0(<2)◂2(<7)◂{ 3(<4)◂{ 2'(= a2◂ [ a16◂ [ a9◂ [ ]]] ) 9'(= a2◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) 10'(= a2◂ [ a13◂ [ {| l |}]] ) } 3'(= a17◂ [ a9◂ [ ]{| l |}] ) }
;; rsp=5 , %1713~0(<2)◂0(<2)◂2(<7)◂{ 3(<4)◂{ 2'(= a2◂ [ a16◂ [ a9◂ [ ]]] ) 9'(= a2◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) 10'(= a2◂ [ a13◂ [ {| l |}]] ) } 3'(= a17◂ [ a9◂ [ ]{| l |}] ) } %1706~1'(= r ) %1705~0'(= r ) %1700~8'(= a35◂ [ *{ }] ) 
; ∎ 0(<2)◂0(<2)◂2(<7)◂{ 3(<4)◂{ 2'(= a2◂ [ a16◂ [ a9◂ [ ]]] ) 9'(= a2◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) 10'(= a2◂ [ a13◂ [ {| l |}]] ) } 3'(= a17◂ [ a9◂ [ ]{| l |}] ) }
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 8'(= a35◂ [ *{ }] )
	mov rdi,QWORD [rsp-8+8*5]
	C_PUSH_REGS
	mov r8,rdi
	call LB_1701
	C_POP_REGS
; .mov_ptn2 0(<2)◂0(<2)◂2(<7)◂{ 3(<4)◂{ 2'(= a2◂ [ a16◂ [ a9◂ [ ]]] ) 9'(= a2◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) 10'(= a2◂ [ a13◂ [ {| l |}]] ) } 3'(= a17◂ [ a9◂ [ ]{| l |}] ) } ⊢ 2'(= a3◂ [ a35◂ [ a17◂ [ a9◂ [ ]{| l |}]]] )
	mov r13,r8
; .mov_ptn 0(<2)◂0(<2)◂2(<7)◂{ 3(<4)◂{ 0'(= a2◂ [ a16◂ [ a9◂ [ ]]] ) 9'(= a2◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) 10'(= a2◂ [ a13◂ [ {| l |}]] ) } 3'(= a17◂ [ a9◂ [ ]{| l |}] ) } ⊢ 2'(= a3◂ [ a35◂ [ a17◂ [ a9◂ [ ]{| l |}]]] )
	ALC_RCD 2, rax
	mov r14,rax
	ALC_RCD 3, rax
	mov r10,rax
	mov rax,r13
	mov QWORD [r10+8+8*0],rax
	mov rax,QWORD [rsp-8+8*4]
	mov QWORD [r10+8+8*1],rax
	mov rax,QWORD [rsp-8+8*3]
	mov QWORD [r10+8+8*2],rax
	mov rax,r10
	mov BYTE [rax+6],3
	mov QWORD [r14+8+8*0],rax
	mov rax,r9
	mov QWORD [r14+8+8*1],rax
	mov rax,r14
	mov BYTE [rax+6],2
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,40
	jmp LB_2624
LB_2628:
;; ?. 12'(= a35◂ [ a17◂ [ a9◂ [ ]{| l |}]] ) ⊢ 1(<2)◂3'(= a2◂ [ *{ rr{| l |}}] )
	mov QWORD [GBG_VCT+8*0],rdi
	mov r9,QWORD [rdi+8]
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_LN rdi
;; rsp=5 , %1709~3'(= a2◂ [ *{ rr{| l |}}] ) %1708~3(<4)◂{ 2'(= a2◂ [ a16◂ [ a9◂ [ ]]] ) 9'(= a2◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) 10'(= a2◂ [ a13◂ [ {| l |}]] ) } %1706~1'(= r ) %1705~0'(= r ) %1700~8'(= a35◂ [ *{ }] ) 
; #194 3'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 1(<2)◂3'(= a2◂ [ *{ rr{| l |}}] )
;; rsp=5 , %1714~1(<2)◂3'(= a2◂ [ *{ rr{| l |}}] ) %1708~3(<4)◂{ 2'(= a2◂ [ a16◂ [ a9◂ [ ]]] ) 9'(= a2◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) 10'(= a2◂ [ a13◂ [ {| l |}]] ) } %1706~1'(= r ) %1705~0'(= r ) %1700~8'(= a35◂ [ *{ }] ) 
; #24 1(<2)◂3'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 0(<2)◂1(<2)◂3'(= a2◂ [ *{ rr{| l |}}] )
;; rsp=5 , %1715~0(<2)◂1(<2)◂3'(= a2◂ [ *{ rr{| l |}}] ) %1708~3(<4)◂{ 2'(= a2◂ [ a16◂ [ a9◂ [ ]]] ) 9'(= a2◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) 10'(= a2◂ [ a13◂ [ {| l |}]] ) } %1706~1'(= r ) %1705~0'(= r ) %1700~8'(= a35◂ [ *{ }] ) 
; ∎ 0(<2)◂1(<2)◂3'(= a2◂ [ *{ rr{| l |}}] )
; .dlt.ptn 3(<4)◂{ 2'(= a2◂ [ a16◂ [ a9◂ [ ]]] ) 9'(= a2◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) 10'(= a2◂ [ a13◂ [ {| l |}]] ) }
	mov rdi,r8
	C_PUSH_REGS
	mov r8,rdi
	call LB_493
	C_POP_REGS
	mov rdi,QWORD [rsp-8+8*4]
	C_PUSH_REGS
	mov r8,rdi
	call LB_492
	C_POP_REGS
	mov rdi,QWORD [rsp-8+8*3]
	C_PUSH_REGS
	mov r8,rdi
	call LB_491
	C_POP_REGS
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 8'(= a35◂ [ *{ }] )
	mov rdi,QWORD [rsp-8+8*5]
	C_PUSH_REGS
	mov r8,rdi
	call LB_1701
	C_POP_REGS
; .mov_ptn2 0(<2)◂1(<2)◂3'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 2'(= a3◂ [ a35◂ [ a17◂ [ a9◂ [ ]{| l |}]]] )
; .mov_ptn 0(<2)◂1(<2)◂3'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 2'(= a3◂ [ a35◂ [ a17◂ [ a9◂ [ ]{| l |}]]] )
	mov rax,r9
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],1
	mov QWORD [rax+8],rdi
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,40
	jmp LB_2624
LB_2624:
	cmp BYTE [r8+6],0
	jnz LB_2576
	POP_GRM_SCC
	ret
LB_2576:
	RB_GRM
	jmp LB_2631
LB_2630:
	add r14,1 
LB_2631:
	cmp r14,r9
	jge LB_2632
	JZ_SPC BYTE [r13+8+r14], LB_2630
LB_2632
	call GRM_219
	cmp BYTE [r8+6],0
	jnz LB_2635
	jmp LB_2636
LB_2635:
	jmp LB_2633
LB_2636:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a35◂ [ *{ }] ) ⊢ 8'(= a35◂ [ *{ }] )
; .mov_ptn 2'(= a35◂ [ *{ }] ) ⊢ 8'(= a35◂ [ *{ }] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_2634
LB_2633:
	add rsp,0
	jmp LB_2629
LB_2634:
	jmp LB_2638
LB_2637:
	add r14,1 
LB_2638:
	cmp r14,r9
	jge LB_2639
	JZ_SPC BYTE [r13+8+r14], LB_2637
LB_2639
	lea rax,[r14+3]
	cmp rax,r9
	jg LB_2642
	jmp LB_2643
LB_2642:
	mov r8,unt_1
	jmp LB_2640
LB_2643:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],226
	jnz LB_2644
	cmp BYTE [rdi+1],151
	jnz LB_2644
	cmp BYTE [rdi+2],130
	jnz LB_2644
	jmp LB_2645
LB_2644:
	mov r8,unt_1
	jmp LB_2640
LB_2645:
	add r14,3
	jmp LB_2641
LB_2640:
	add rsp,8
	jmp LB_2629
LB_2641:
	jmp LB_2647
LB_2646:
	add r14,1 
LB_2647:
	cmp r14,r9
	jge LB_2648
	JZ_SPC BYTE [r13+8+r14], LB_2646
LB_2648
	call GRM_206
	cmp BYTE [r8+6],0
	jnz LB_2651
	jmp LB_2652
LB_2651:
	jmp LB_2649
LB_2652:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a12◂ [ a9◂ [ ]{| l |}] ) ⊢ 9'(= a12◂ [ a9◂ [ ]{| l |}] )
; .mov_ptn 2'(= a12◂ [ a9◂ [ ]{| l |}] ) ⊢ 9'(= a12◂ [ a9◂ [ ]{| l |}] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_2650
LB_2649:
	add rsp,8
	POP_GRM_FAIL
	ret
LB_2650:
	jmp LB_2654
LB_2653:
	add r14,1 
LB_2654:
	cmp r14,r9
	jge LB_2655
	JZ_SPC BYTE [r13+8+r14], LB_2653
LB_2655
	lea rax,[r14+1]
	cmp rax,r9
	jg LB_2658
	jmp LB_2659
LB_2658:
	mov r8,unt_1
	jmp LB_2656
LB_2659:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],44
	jnz LB_2660
	jmp LB_2661
LB_2660:
	mov r8,unt_1
	jmp LB_2656
LB_2661:
	add r14,1
	jmp LB_2657
LB_2656:
	add rsp,16
	POP_GRM_FAIL
	ret
LB_2657:
	jmp LB_2663
LB_2662:
	add r14,1 
LB_2663:
	cmp r14,r9
	jge LB_2664
	JZ_SPC BYTE [r13+8+r14], LB_2662
LB_2664
	call GRM_203
	cmp BYTE [r8+6],0
	jnz LB_2667
	jmp LB_2668
LB_2667:
	jmp LB_2665
LB_2668:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) ⊢ 10'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] )
; .mov_ptn 2'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) ⊢ 10'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_2666
LB_2665:
	add rsp,16
	POP_GRM_FAIL
	ret
LB_2666:
	PUSH_GRM
	jmp LB_2672
LB_2671:
	add r14,1 
LB_2672:
	cmp r14,r9
	jge LB_2673
	JZ_SPC BYTE [r13+8+r14], LB_2671
LB_2673
	lea rax,[r14+4]
	cmp rax,r9
	jg LB_2676
	jmp LB_2677
LB_2676:
	mov r8,unt_1
	jmp LB_2674
LB_2677:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],226
	jnz LB_2678
	cmp BYTE [rdi+1],138
	jnz LB_2678
	cmp BYTE [rdi+2],162
	jnz LB_2678
	cmp BYTE [rdi+3],124
	jnz LB_2678
	jmp LB_2679
LB_2678:
	mov r8,unt_1
	jmp LB_2674
LB_2679:
	add r14,4
	jmp LB_2675
LB_2674:
	add rsp,0
	jmp LB_2670
LB_2675:
	mov QWORD [rsp+8*0],r14
	mov r13,QWORD [rsp+16+8*0]
	mov r14,QWORD [rsp+8*0]
	jmp LB_2680
LB_2680
;; rsp=0 , %1722~1'(= r ) %1721~0'(= r ) 
; #25 { } ⊢ 1(<2)◂{ }
;; rsp=0 , %1723~1(<2)◂{ } %1722~1'(= r ) %1721~0'(= r ) 
; #195 1(<2)◂{ } ⊢ 0(<2)◂1(<2)◂{ }
;; rsp=0 , %1724~0(<2)◂1(<2)◂{ } %1722~1'(= r ) %1721~0'(= r ) 
; #24 0(<2)◂1(<2)◂{ } ⊢ 0(<2)◂0(<2)◂1(<2)◂{ }
;; rsp=0 , %1725~0(<2)◂0(<2)◂1(<2)◂{ } %1722~1'(= r ) %1721~0'(= r ) 
; ∎ 0(<2)◂0(<2)◂1(<2)◂{ }
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂0(<2)◂1(<2)◂{ } ⊢ 2'(= a3◂ [ a35◂ [ a3◂ [ *{ a8◂ [ a13◂ [ {| l |}]]a17◂ [ a9◂ [ ]{| l |}]}]]] )
; .mov_ptn 0(<2)◂0(<2)◂1(<2)◂{ } ⊢ 2'(= a3◂ [ a35◂ [ a3◂ [ *{ a8◂ [ a13◂ [ {| l |}]]a17◂ [ a9◂ [ ]{| l |}]}]]] )
	mov rax,unt 
	mov rax,unt_1
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	jmp LB_2681
LB_2681:
	cmp BYTE [r8+6],0
	jnz LB_2670
	POP_GRM_SCC
	jmp LB_2669
LB_2670:
	RB_GRM
	jmp LB_2684
LB_2683:
	add r14,1 
LB_2684:
	cmp r14,r9
	jge LB_2685
	JZ_SPC BYTE [r13+8+r14], LB_2683
LB_2685
	lea rax,[r14+3]
	cmp rax,r9
	jg LB_2688
	jmp LB_2689
LB_2688:
	mov r8,unt_1
	jmp LB_2686
LB_2689:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],226
	jnz LB_2690
	cmp BYTE [rdi+1],138
	jnz LB_2690
	cmp BYTE [rdi+2],162
	jnz LB_2690
	jmp LB_2691
LB_2690:
	mov r8,unt_1
	jmp LB_2686
LB_2691:
	add r14,3
	jmp LB_2687
LB_2686:
	add rsp,0
	jmp LB_2682
LB_2687:
	jmp LB_2693
LB_2692:
	add r14,1 
LB_2693:
	cmp r14,r9
	jge LB_2694
	JZ_SPC BYTE [r13+8+r14], LB_2692
LB_2694
	call GRM_207
	cmp BYTE [r8+6],0
	jnz LB_2697
	jmp LB_2698
LB_2697:
	jmp LB_2695
LB_2698:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a8◂ [ a13◂ [ {| l |}]] ) ⊢ 8'(= a8◂ [ a13◂ [ {| l |}]] )
; .mov_ptn 2'(= a8◂ [ a13◂ [ {| l |}]] ) ⊢ 8'(= a8◂ [ a13◂ [ {| l |}]] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_2696
LB_2695:
	add rsp,0
	jmp LB_2682
LB_2696:
	jmp LB_2700
LB_2699:
	add r14,1 
LB_2700:
	cmp r14,r9
	jge LB_2701
	JZ_SPC BYTE [r13+8+r14], LB_2699
LB_2701
	call GRM_236
	cmp BYTE [r8+6],0
	jnz LB_2704
	jmp LB_2705
LB_2704:
	jmp LB_2702
LB_2705:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a35◂ [ a17◂ [ a9◂ [ ]{| l |}]] ) ⊢ 9'(= a35◂ [ a17◂ [ a9◂ [ ]{| l |}]] )
; .mov_ptn 2'(= a35◂ [ a17◂ [ a9◂ [ ]{| l |}]] ) ⊢ 9'(= a35◂ [ a17◂ [ a9◂ [ ]{| l |}]] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_2703
LB_2702:
	add rsp,8
	jmp LB_2682
LB_2703:
	mov QWORD [rsp+8*2],r14
	mov r13,QWORD [rsp+16+8*2]
	mov r14,QWORD [rsp+8*2]
	jmp LB_2706
LB_2706
;; rsp=2 , %1729~1'(= r ) %1728~0'(= r ) %1727~9'(= a35◂ [ a17◂ [ a9◂ [ ]{| l |}]] ) %1726~8'(= a8◂ [ a13◂ [ {| l |}]] ) 
;; ? 9'(= a35◂ [ a17◂ [ a9◂ [ ]{| l |}]] ) ⊢ 0(<2)◂2'(= a17◂ [ a9◂ [ ]{| l |}] )
	mov rdi,QWORD [rsp-8+8*1]
	cmp BYTE [rdi+6],0
	jnz LB_2708
	mov QWORD [GBG_VCT+8*0],rdi
	mov r8,QWORD [rdi+8]
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_LN rdi
;; rsp=2 , %1731~2'(= a17◂ [ a9◂ [ ]{| l |}] ) %1729~1'(= r ) %1728~0'(= r ) %1726~8'(= a8◂ [ a13◂ [ {| l |}]] ) 
; #24 { 8'(= a8◂ [ a13◂ [ {| l |}]] ) 2'(= a17◂ [ a9◂ [ ]{| l |}] ) } ⊢ 0(<2)◂{ 8'(= a8◂ [ a13◂ [ {| l |}]] ) 2'(= a17◂ [ a9◂ [ ]{| l |}] ) }
;; rsp=2 , %1732~0(<2)◂{ 8'(= a8◂ [ a13◂ [ {| l |}]] ) 2'(= a17◂ [ a9◂ [ ]{| l |}] ) } %1729~1'(= r ) %1728~0'(= r ) 
; #195 0(<2)◂{ 8'(= a8◂ [ a13◂ [ {| l |}]] ) 2'(= a17◂ [ a9◂ [ ]{| l |}] ) } ⊢ 0(<2)◂0(<2)◂{ 8'(= a8◂ [ a13◂ [ {| l |}]] ) 2'(= a17◂ [ a9◂ [ ]{| l |}] ) }
;; rsp=2 , %1733~0(<2)◂0(<2)◂{ 8'(= a8◂ [ a13◂ [ {| l |}]] ) 2'(= a17◂ [ a9◂ [ ]{| l |}] ) } %1729~1'(= r ) %1728~0'(= r ) 
; #24 0(<2)◂0(<2)◂{ 8'(= a8◂ [ a13◂ [ {| l |}]] ) 2'(= a17◂ [ a9◂ [ ]{| l |}] ) } ⊢ 0(<2)◂0(<2)◂0(<2)◂{ 8'(= a8◂ [ a13◂ [ {| l |}]] ) 2'(= a17◂ [ a9◂ [ ]{| l |}] ) }
;; rsp=2 , %1734~0(<2)◂0(<2)◂0(<2)◂{ 8'(= a8◂ [ a13◂ [ {| l |}]] ) 2'(= a17◂ [ a9◂ [ ]{| l |}] ) } %1729~1'(= r ) %1728~0'(= r ) 
; ∎ 0(<2)◂0(<2)◂0(<2)◂{ 8'(= a8◂ [ a13◂ [ {| l |}]] ) 2'(= a17◂ [ a9◂ [ ]{| l |}] ) }
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂0(<2)◂0(<2)◂{ 8'(= a8◂ [ a13◂ [ {| l |}]] ) 2'(= a17◂ [ a9◂ [ ]{| l |}] ) } ⊢ 2'(= a3◂ [ a35◂ [ a3◂ [ *{ a8◂ [ a13◂ [ {| l |}]]a17◂ [ a9◂ [ ]{| l |}]}]]] )
	mov r13,r8
; .mov_ptn 0(<2)◂0(<2)◂0(<2)◂{ 8'(= a8◂ [ a13◂ [ {| l |}]] ) 0'(= a17◂ [ a9◂ [ ]{| l |}] ) } ⊢ 2'(= a3◂ [ a35◂ [ a3◂ [ *{ a8◂ [ a13◂ [ {| l |}]]a17◂ [ a9◂ [ ]{| l |}]}]]] )
	ALC_RCD 2, rax
	mov r14,rax
	mov rax,QWORD [rsp-8+8*2]
	mov QWORD [r14+8+8*0],rax
	mov rax,r13
	mov QWORD [r14+8+8*1],rax
	mov rax,r14
	mov BYTE [rax+6],0
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,16
	jmp LB_2707
LB_2708:
;; ?. 9'(= a35◂ [ a17◂ [ a9◂ [ ]{| l |}]] ) ⊢ 1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] )
	mov QWORD [GBG_VCT+8*0],rdi
	mov r8,QWORD [rdi+8]
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_LN rdi
;; rsp=2 , %1730~2'(= a2◂ [ *{ rr{| l |}}] ) %1729~1'(= r ) %1728~0'(= r ) %1726~8'(= a8◂ [ a13◂ [ {| l |}]] ) 
; #194 2'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] )
;; rsp=2 , %1735~1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] ) %1729~1'(= r ) %1728~0'(= r ) %1726~8'(= a8◂ [ a13◂ [ {| l |}]] ) 
; #24 1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 0(<2)◂1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] )
;; rsp=2 , %1736~0(<2)◂1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] ) %1729~1'(= r ) %1728~0'(= r ) %1726~8'(= a8◂ [ a13◂ [ {| l |}]] ) 
; ∎ 0(<2)◂1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] )
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 8'(= a8◂ [ a13◂ [ {| l |}]] )
	mov rdi,QWORD [rsp-8+8*2]
	C_PUSH_REGS
	mov r8,rdi
	call LB_668
	C_POP_REGS
; .mov_ptn2 0(<2)◂1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 2'(= a3◂ [ a35◂ [ a3◂ [ *{ a8◂ [ a13◂ [ {| l |}]]a17◂ [ a9◂ [ ]{| l |}]}]]] )
	mov r13,r8
; .mov_ptn 0(<2)◂1(<2)◂0'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 2'(= a3◂ [ a35◂ [ a3◂ [ *{ a8◂ [ a13◂ [ {| l |}]]a17◂ [ a9◂ [ ]{| l |}]}]]] )
	mov rax,r13
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],1
	mov QWORD [rax+8],rdi
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,16
	jmp LB_2707
LB_2707:
	cmp BYTE [r8+6],0
	jnz LB_2682
	POP_GRM_SCC
	jmp LB_2669
LB_2682:
	POP_GRM_FAIL 
	jmp LB_2669
LB_2669:
	cmp BYTE [r8+6],0
	jnz LB_2709
	jmp LB_2710
LB_2709:
	add rsp,24
	POP_GRM_FAIL
	ret
LB_2710:
	mov QWORD [rsp+8*3],r14
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi 
; .mov_ptn2 2'(= a35◂ [ a3◂ [ *{ a8◂ [ a13◂ [ {| l |}]]a17◂ [ a9◂ [ ]{| l |}]}]] ) ⊢ 3'(= a35◂ [ a3◂ [ *{ a8◂ [ a13◂ [ {| l |}]]a17◂ [ a9◂ [ ]{| l |}]}]] )
	mov r10,r9
; .mov_ptn 2'(= a35◂ [ a3◂ [ *{ a8◂ [ a13◂ [ {| l |}]]a17◂ [ a9◂ [ ]{| l |}]}]] ) ⊢ 3'(= a35◂ [ a3◂ [ *{ a8◂ [ a13◂ [ {| l |}]]a17◂ [ a9◂ [ ]{| l |}]}]] )
	mov rax,r8
	mov r9,rax
	mov r13,QWORD [rsp+16+8*3]
	mov r14,QWORD [rsp+8*3]
	jmp LB_2711
LB_2711
;; rsp=3 , %1737~3'(= a35◂ [ a3◂ [ *{ a8◂ [ a13◂ [ {| l |}]]a17◂ [ a9◂ [ ]{| l |}]}]] ) %1720~1'(= r ) %1719~0'(= r ) %1718~10'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) %1717~9'(= a12◂ [ a9◂ [ ]{| l |}] ) %1716~8'(= a35◂ [ *{ }] ) 
;; ? 3'(= a35◂ [ a3◂ [ *{ a8◂ [ a13◂ [ {| l |}]]a17◂ [ a9◂ [ ]{| l |}]}]] ) ⊢ 0(<2)◂2'(= a3◂ [ *{ a8◂ [ a13◂ [ {| l |}]]a17◂ [ a9◂ [ ]{| l |}]}] )
	mov rdi,r9
	cmp BYTE [rdi+6],0
	jnz LB_2713
	mov QWORD [GBG_VCT+8*0],rdi
	mov r8,QWORD [rdi+8]
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_LN rdi
;; rsp=3 , %1739~2'(= a3◂ [ *{ a8◂ [ a13◂ [ {| l |}]]a17◂ [ a9◂ [ ]{| l |}]}] ) %1720~1'(= r ) %1719~0'(= r ) %1718~10'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) %1717~9'(= a12◂ [ a9◂ [ ]{| l |}] ) %1716~8'(= a35◂ [ *{ }] ) 
;; ? 2'(= a3◂ [ *{ a8◂ [ a13◂ [ {| l |}]]a17◂ [ a9◂ [ ]{| l |}]}] ) ⊢ 0(<2)◂{ 3'(= a8◂ [ a13◂ [ {| l |}]] ) 4'(= a17◂ [ a9◂ [ ]{| l |}] ) }
	mov rdi,r8
	cmp BYTE [rdi+6],0
	jnz LB_2714
	mov r9, QWORD [r8+8]
	mov r10, QWORD [r8+16]
	mov QWORD [GBG_VCT+8*0],r8
	mov rdi,QWORD [GBG_VCT+8*0]
	mov rax,[SS_RCD_2_TOP]
	mov QWORD [rdi],rax 
	mov QWORD [SS_RCD_2_TOP],rdi
;; rsp=3 , %1741~4'(= a17◂ [ a9◂ [ ]{| l |}] ) %1740~3'(= a8◂ [ a13◂ [ {| l |}]] ) %1720~1'(= r ) %1719~0'(= r ) %1718~10'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) %1717~9'(= a12◂ [ a9◂ [ ]{| l |}] ) %1716~8'(= a35◂ [ *{ }] ) 
; #123 { 9'(= a12◂ [ a9◂ [ ]{| l |}] ) 10'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) 3'(= a8◂ [ a13◂ [ {| l |}]] ) } ⊢ 1(<4)◂{ 9'(= a12◂ [ a9◂ [ ]{| l |}] ) 10'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) 3'(= a8◂ [ a13◂ [ {| l |}]] ) }
;; rsp=3 , %1742~1(<4)◂{ 9'(= a12◂ [ a9◂ [ ]{| l |}] ) 10'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) 3'(= a8◂ [ a13◂ [ {| l |}]] ) } %1741~4'(= a17◂ [ a9◂ [ ]{| l |}] ) %1720~1'(= r ) %1719~0'(= r ) %1716~8'(= a35◂ [ *{ }] ) 
; #131 { 1(<4)◂{ 9'(= a12◂ [ a9◂ [ ]{| l |}] ) 10'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) 3'(= a8◂ [ a13◂ [ {| l |}]] ) } 4'(= a17◂ [ a9◂ [ ]{| l |}] ) } ⊢ 2(<7)◂{ 1(<4)◂{ 9'(= a12◂ [ a9◂ [ ]{| l |}] ) 10'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) 3'(= a8◂ [ a13◂ [ {| l |}]] ) } 4'(= a17◂ [ a9◂ [ ]{| l |}] ) }
;; rsp=3 , %1743~2(<7)◂{ 1(<4)◂{ 9'(= a12◂ [ a9◂ [ ]{| l |}] ) 10'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) 3'(= a8◂ [ a13◂ [ {| l |}]] ) } 4'(= a17◂ [ a9◂ [ ]{| l |}] ) } %1720~1'(= r ) %1719~0'(= r ) %1716~8'(= a35◂ [ *{ }] ) 
; #195 2(<7)◂{ 1(<4)◂{ 9'(= a12◂ [ a9◂ [ ]{| l |}] ) 10'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) 3'(= a8◂ [ a13◂ [ {| l |}]] ) } 4'(= a17◂ [ a9◂ [ ]{| l |}] ) } ⊢ 0(<2)◂2(<7)◂{ 1(<4)◂{ 9'(= a12◂ [ a9◂ [ ]{| l |}] ) 10'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) 3'(= a8◂ [ a13◂ [ {| l |}]] ) } 4'(= a17◂ [ a9◂ [ ]{| l |}] ) }
;; rsp=3 , %1744~0(<2)◂2(<7)◂{ 1(<4)◂{ 9'(= a12◂ [ a9◂ [ ]{| l |}] ) 10'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) 3'(= a8◂ [ a13◂ [ {| l |}]] ) } 4'(= a17◂ [ a9◂ [ ]{| l |}] ) } %1720~1'(= r ) %1719~0'(= r ) %1716~8'(= a35◂ [ *{ }] ) 
; #24 0(<2)◂2(<7)◂{ 1(<4)◂{ 9'(= a12◂ [ a9◂ [ ]{| l |}] ) 10'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) 3'(= a8◂ [ a13◂ [ {| l |}]] ) } 4'(= a17◂ [ a9◂ [ ]{| l |}] ) } ⊢ 0(<2)◂0(<2)◂2(<7)◂{ 1(<4)◂{ 9'(= a12◂ [ a9◂ [ ]{| l |}] ) 10'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) 3'(= a8◂ [ a13◂ [ {| l |}]] ) } 4'(= a17◂ [ a9◂ [ ]{| l |}] ) }
;; rsp=3 , %1745~0(<2)◂0(<2)◂2(<7)◂{ 1(<4)◂{ 9'(= a12◂ [ a9◂ [ ]{| l |}] ) 10'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) 3'(= a8◂ [ a13◂ [ {| l |}]] ) } 4'(= a17◂ [ a9◂ [ ]{| l |}] ) } %1720~1'(= r ) %1719~0'(= r ) %1716~8'(= a35◂ [ *{ }] ) 
; ∎ 0(<2)◂0(<2)◂2(<7)◂{ 1(<4)◂{ 9'(= a12◂ [ a9◂ [ ]{| l |}] ) 10'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) 3'(= a8◂ [ a13◂ [ {| l |}]] ) } 4'(= a17◂ [ a9◂ [ ]{| l |}] ) }
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 8'(= a35◂ [ *{ }] )
	mov rdi,QWORD [rsp-8+8*3]
	C_PUSH_REGS
	mov r8,rdi
	call LB_1701
	C_POP_REGS
; .mov_ptn2 0(<2)◂0(<2)◂2(<7)◂{ 1(<4)◂{ 9'(= a12◂ [ a9◂ [ ]{| l |}] ) 10'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) 3'(= a8◂ [ a13◂ [ {| l |}]] ) } 4'(= a17◂ [ a9◂ [ ]{| l |}] ) } ⊢ 2'(= a3◂ [ a35◂ [ a17◂ [ a9◂ [ ]{| l |}]]] )
; .mov_ptn 0(<2)◂0(<2)◂2(<7)◂{ 1(<4)◂{ 9'(= a12◂ [ a9◂ [ ]{| l |}] ) 10'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) 3'(= a8◂ [ a13◂ [ {| l |}]] ) } 4'(= a17◂ [ a9◂ [ ]{| l |}] ) } ⊢ 2'(= a3◂ [ a35◂ [ a17◂ [ a9◂ [ ]{| l |}]]] )
	ALC_RCD 2, rax
	mov r13,rax
	ALC_RCD 3, rax
	mov r14,rax
	mov rax,QWORD [rsp-8+8*2]
	mov QWORD [r14+8+8*0],rax
	mov rax,QWORD [rsp-8+8*1]
	mov QWORD [r14+8+8*1],rax
	mov rax,r9
	mov QWORD [r14+8+8*2],rax
	mov rax,r14
	mov BYTE [rax+6],1
	mov QWORD [r13+8+8*0],rax
	mov rax,r10
	mov QWORD [r13+8+8*1],rax
	mov rax,r13
	mov BYTE [rax+6],2
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,24
	jmp LB_2712
LB_2714:
;; ?. 2'(= a3◂ [ *{ a8◂ [ a13◂ [ {| l |}]]a17◂ [ a9◂ [ ]{| l |}]}] ) ⊢ 1(<2)◂{ }
;; rsp=3 , %1720~1'(= r ) %1719~0'(= r ) %1718~10'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) %1717~9'(= a12◂ [ a9◂ [ ]{| l |}] ) %1716~8'(= a35◂ [ *{ }] ) 
; #132 { 9'(= a12◂ [ a9◂ [ ]{| l |}] ) 10'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) } ⊢ 1(<7)◂{ 9'(= a12◂ [ a9◂ [ ]{| l |}] ) 10'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) }
;; rsp=3 , %1746~1(<7)◂{ 9'(= a12◂ [ a9◂ [ ]{| l |}] ) 10'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) } %1720~1'(= r ) %1719~0'(= r ) %1716~8'(= a35◂ [ *{ }] ) 
; #195 1(<7)◂{ 9'(= a12◂ [ a9◂ [ ]{| l |}] ) 10'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) } ⊢ 0(<2)◂1(<7)◂{ 9'(= a12◂ [ a9◂ [ ]{| l |}] ) 10'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) }
;; rsp=3 , %1747~0(<2)◂1(<7)◂{ 9'(= a12◂ [ a9◂ [ ]{| l |}] ) 10'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) } %1720~1'(= r ) %1719~0'(= r ) %1716~8'(= a35◂ [ *{ }] ) 
; #24 0(<2)◂1(<7)◂{ 9'(= a12◂ [ a9◂ [ ]{| l |}] ) 10'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) } ⊢ 0(<2)◂0(<2)◂1(<7)◂{ 9'(= a12◂ [ a9◂ [ ]{| l |}] ) 10'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) }
;; rsp=3 , %1748~0(<2)◂0(<2)◂1(<7)◂{ 9'(= a12◂ [ a9◂ [ ]{| l |}] ) 10'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) } %1720~1'(= r ) %1719~0'(= r ) %1716~8'(= a35◂ [ *{ }] ) 
; ∎ 0(<2)◂0(<2)◂1(<7)◂{ 9'(= a12◂ [ a9◂ [ ]{| l |}] ) 10'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) }
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 8'(= a35◂ [ *{ }] )
	mov rdi,QWORD [rsp-8+8*3]
	C_PUSH_REGS
	mov r8,rdi
	call LB_1701
	C_POP_REGS
; .mov_ptn2 0(<2)◂0(<2)◂1(<7)◂{ 9'(= a12◂ [ a9◂ [ ]{| l |}] ) 10'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) } ⊢ 2'(= a3◂ [ a35◂ [ a17◂ [ a9◂ [ ]{| l |}]]] )
; .mov_ptn 0(<2)◂0(<2)◂1(<7)◂{ 9'(= a12◂ [ a9◂ [ ]{| l |}] ) 10'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) } ⊢ 2'(= a3◂ [ a35◂ [ a17◂ [ a9◂ [ ]{| l |}]]] )
	ALC_RCD 2, rax
	mov r13,rax
	mov rax,QWORD [rsp-8+8*2]
	mov QWORD [r13+8+8*0],rax
	mov rax,QWORD [rsp-8+8*1]
	mov QWORD [r13+8+8*1],rax
	mov rax,r13
	mov BYTE [rax+6],1
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,24
	jmp LB_2712
LB_2713:
;; ?. 3'(= a35◂ [ a3◂ [ *{ a8◂ [ a13◂ [ {| l |}]]a17◂ [ a9◂ [ ]{| l |}]}]] ) ⊢ 1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] )
	mov QWORD [GBG_VCT+8*0],rdi
	mov r8,QWORD [rdi+8]
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_LN rdi
;; rsp=3 , %1738~2'(= a2◂ [ *{ rr{| l |}}] ) %1720~1'(= r ) %1719~0'(= r ) %1718~10'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) %1717~9'(= a12◂ [ a9◂ [ ]{| l |}] ) %1716~8'(= a35◂ [ *{ }] ) 
; #194 2'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] )
;; rsp=3 , %1749~1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] ) %1720~1'(= r ) %1719~0'(= r ) %1718~10'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) %1717~9'(= a12◂ [ a9◂ [ ]{| l |}] ) %1716~8'(= a35◂ [ *{ }] ) 
; #24 1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 0(<2)◂1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] )
;; rsp=3 , %1750~0(<2)◂1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] ) %1720~1'(= r ) %1719~0'(= r ) %1718~10'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) %1717~9'(= a12◂ [ a9◂ [ ]{| l |}] ) %1716~8'(= a35◂ [ *{ }] ) 
; ∎ 0(<2)◂1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] )
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 10'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] )
	mov rdi,QWORD [rsp-8+8*1]
	C_PUSH_REGS
	mov r8,rdi
	call LB_445
	C_POP_REGS
; .dlt.ptn 9'(= a12◂ [ a9◂ [ ]{| l |}] )
	mov rdi,QWORD [rsp-8+8*2]
	C_PUSH_REGS
	mov r8,rdi
	call LB_451
	C_POP_REGS
; .dlt.ptn 8'(= a35◂ [ *{ }] )
	mov rdi,QWORD [rsp-8+8*3]
	C_PUSH_REGS
	mov r8,rdi
	call LB_1701
	C_POP_REGS
; .mov_ptn2 0(<2)◂1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 2'(= a3◂ [ a35◂ [ a17◂ [ a9◂ [ ]{| l |}]]] )
	mov r13,r8
; .mov_ptn 0(<2)◂1(<2)◂0'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 2'(= a3◂ [ a35◂ [ a17◂ [ a9◂ [ ]{| l |}]]] )
	mov rax,r13
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],1
	mov QWORD [rax+8],rdi
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,24
	jmp LB_2712
LB_2712:
	cmp BYTE [r8+6],0
	jnz LB_2629
	POP_GRM_SCC
	ret
LB_2629:
	RB_GRM
	jmp LB_2717
LB_2716:
	add r14,1 
LB_2717:
	cmp r14,r9
	jge LB_2718
	JZ_SPC BYTE [r13+8+r14], LB_2716
LB_2718
	call GRM_219
	cmp BYTE [r8+6],0
	jnz LB_2721
	jmp LB_2722
LB_2721:
	jmp LB_2719
LB_2722:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a35◂ [ *{ }] ) ⊢ 8'(= a35◂ [ *{ }] )
; .mov_ptn 2'(= a35◂ [ *{ }] ) ⊢ 8'(= a35◂ [ *{ }] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_2720
LB_2719:
	add rsp,0
	jmp LB_2715
LB_2720:
	jmp LB_2724
LB_2723:
	add r14,1 
LB_2724:
	cmp r14,r9
	jge LB_2725
	JZ_SPC BYTE [r13+8+r14], LB_2723
LB_2725
	lea rax,[r14+2]
	cmp rax,r9
	jg LB_2728
	jmp LB_2729
LB_2728:
	mov r8,unt_1
	jmp LB_2726
LB_2729:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],194
	jnz LB_2730
	cmp BYTE [rdi+1],187
	jnz LB_2730
	jmp LB_2731
LB_2730:
	mov r8,unt_1
	jmp LB_2726
LB_2731:
	add r14,2
	jmp LB_2727
LB_2726:
	add rsp,8
	jmp LB_2715
LB_2727:
	jmp LB_2733
LB_2732:
	add r14,1 
LB_2733:
	cmp r14,r9
	jge LB_2734
	JZ_SPC BYTE [r13+8+r14], LB_2732
LB_2734
	call GRM_234
	cmp BYTE [r8+6],0
	jnz LB_2737
	jmp LB_2738
LB_2737:
	jmp LB_2735
LB_2738:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a19◂ [ a9◂ [ ]{| l |}] ) ⊢ 9'(= a19◂ [ a9◂ [ ]{| l |}] )
; .mov_ptn 2'(= a19◂ [ a9◂ [ ]{| l |}] ) ⊢ 9'(= a19◂ [ a9◂ [ ]{| l |}] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_2736
LB_2735:
	add rsp,8
	POP_GRM_FAIL
	ret
LB_2736:
	jmp LB_2740
LB_2739:
	add r14,1 
LB_2740:
	cmp r14,r9
	jge LB_2741
	JZ_SPC BYTE [r13+8+r14], LB_2739
LB_2741
	call GRM_236
	cmp BYTE [r8+6],0
	jnz LB_2744
	jmp LB_2745
LB_2744:
	jmp LB_2742
LB_2745:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a35◂ [ a17◂ [ a9◂ [ ]{| l |}]] ) ⊢ 10'(= a35◂ [ a17◂ [ a9◂ [ ]{| l |}]] )
; .mov_ptn 2'(= a35◂ [ a17◂ [ a9◂ [ ]{| l |}]] ) ⊢ 10'(= a35◂ [ a17◂ [ a9◂ [ ]{| l |}]] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_2743
LB_2742:
	add rsp,16
	POP_GRM_FAIL
	ret
LB_2743:
	mov QWORD [rsp+8*3],r14
	mov r13,QWORD [rsp+16+8*3]
	mov r14,QWORD [rsp+8*3]
	jmp LB_2746
LB_2746
;; rsp=3 , %1755~1'(= r ) %1754~0'(= r ) %1753~10'(= a35◂ [ a17◂ [ a9◂ [ ]{| l |}]] ) %1752~9'(= a19◂ [ a9◂ [ ]{| l |}] ) %1751~8'(= a35◂ [ *{ }] ) 
;; ? 10'(= a35◂ [ a17◂ [ a9◂ [ ]{| l |}]] ) ⊢ 0(<2)◂2'(= a17◂ [ a9◂ [ ]{| l |}] )
	mov rdi,QWORD [rsp-8+8*1]
	cmp BYTE [rdi+6],0
	jnz LB_2748
	mov QWORD [GBG_VCT+8*0],rdi
	mov r8,QWORD [rdi+8]
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_LN rdi
;; rsp=3 , %1757~2'(= a17◂ [ a9◂ [ ]{| l |}] ) %1755~1'(= r ) %1754~0'(= r ) %1752~9'(= a19◂ [ a9◂ [ ]{| l |}] ) %1751~8'(= a35◂ [ *{ }] ) 
;; ?; 9'(= a19◂ [ a9◂ [ ]{| l |}] ) ⊢ 2(<4)◂{ 3'(= a11◂ [ a9◂ [ ]] ) 4'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) 5'(= a8◂ [ a13◂ [ {| l |}]] ) }
	mov rdi,QWORD [rsp-8+8*2]
	cmp BYTE [rdi+6],2
	jnz LB_2749
	mov rdi,QWORD [rsp-8+8*2]
	mov r9, QWORD [rdi+8]
	mov rdi,QWORD [rsp-8+8*2]
	mov r10, QWORD [rdi+16]
	mov rdi,QWORD [rsp-8+8*2]
	mov r11, QWORD [rdi+24]
	MOV_RAX QWORD [GBG_VCT+8*0],QWORD [rsp-8+8*2]
	mov rdi,QWORD [GBG_VCT+8*0]
	mov rax,[SS_RCD_3_TOP]
	mov QWORD [rdi],rax 
	mov QWORD [SS_RCD_3_TOP],rdi
;; rsp=3 , %1760~5'(= a8◂ [ a13◂ [ {| l |}]] ) %1759~4'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) %1758~3'(= a11◂ [ a9◂ [ ]] ) %1757~2'(= a17◂ [ a9◂ [ ]{| l |}] ) %1755~1'(= r ) %1754~0'(= r ) %1751~8'(= a35◂ [ *{ }] ) 
; #94 3'(= a11◂ [ a9◂ [ ]] ) ⊢ 0(<2)◂3'(= a11◂ [ a9◂ [ ]] )
;; rsp=3 , %1761~0(<2)◂3'(= a11◂ [ a9◂ [ ]] ) %1760~5'(= a8◂ [ a13◂ [ {| l |}]] ) %1759~4'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) %1757~2'(= a17◂ [ a9◂ [ ]{| l |}] ) %1755~1'(= r ) %1754~0'(= r ) %1751~8'(= a35◂ [ *{ }] ) 
; #80 0(<2)◂3'(= a11◂ [ a9◂ [ ]] ) ⊢ 1(<2)◂0(<2)◂3'(= a11◂ [ a9◂ [ ]] )
;; rsp=3 , %1762~1(<2)◂0(<2)◂3'(= a11◂ [ a9◂ [ ]] ) %1760~5'(= a8◂ [ a13◂ [ {| l |}]] ) %1759~4'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) %1757~2'(= a17◂ [ a9◂ [ ]{| l |}] ) %1755~1'(= r ) %1754~0'(= r ) %1751~8'(= a35◂ [ *{ }] ) 
; #22 { } ⊢ 1(<2)◂{ }
;; rsp=3 , %1763~1(<2)◂{ } %1762~1(<2)◂0(<2)◂3'(= a11◂ [ a9◂ [ ]] ) %1760~5'(= a8◂ [ a13◂ [ {| l |}]] ) %1759~4'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) %1757~2'(= a17◂ [ a9◂ [ ]{| l |}] ) %1755~1'(= r ) %1754~0'(= r ) %1751~8'(= a35◂ [ *{ }] ) 
; #23 { 5'(= a8◂ [ a13◂ [ {| l |}]] ) 1(<2)◂{ } } ⊢ 0(<2)◂{ 5'(= a8◂ [ a13◂ [ {| l |}]] ) 1(<2)◂{ } }
;; rsp=3 , %1764~0(<2)◂{ 5'(= a8◂ [ a13◂ [ {| l |}]] ) 1(<2)◂{ } } %1762~1(<2)◂0(<2)◂3'(= a11◂ [ a9◂ [ ]] ) %1759~4'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) %1757~2'(= a17◂ [ a9◂ [ ]{| l |}] ) %1755~1'(= r ) %1754~0'(= r ) %1751~8'(= a35◂ [ *{ }] ) 
; #125 { 0(<2)◂{ 5'(= a8◂ [ a13◂ [ {| l |}]] ) 1(<2)◂{ } } 2'(= a17◂ [ a9◂ [ ]{| l |}] ) } ⊢ 1(<2)◂{ 0(<2)◂{ 5'(= a8◂ [ a13◂ [ {| l |}]] ) 1(<2)◂{ } } 2'(= a17◂ [ a9◂ [ ]{| l |}] ) }
;; rsp=3 , %1765~1(<2)◂{ 0(<2)◂{ 5'(= a8◂ [ a13◂ [ {| l |}]] ) 1(<2)◂{ } } 2'(= a17◂ [ a9◂ [ ]{| l |}] ) } %1762~1(<2)◂0(<2)◂3'(= a11◂ [ a9◂ [ ]] ) %1759~4'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) %1755~1'(= r ) %1754~0'(= r ) %1751~8'(= a35◂ [ *{ }] ) 
; #129 { 1(<2)◂0(<2)◂3'(= a11◂ [ a9◂ [ ]] ) 1(<2)◂{ 0(<2)◂{ 5'(= a8◂ [ a13◂ [ {| l |}]] ) 1(<2)◂{ } } 2'(= a17◂ [ a9◂ [ ]{| l |}] ) } } ⊢ 4(<7)◂{ 1(<2)◂0(<2)◂3'(= a11◂ [ a9◂ [ ]] ) 1(<2)◂{ 0(<2)◂{ 5'(= a8◂ [ a13◂ [ {| l |}]] ) 1(<2)◂{ } } 2'(= a17◂ [ a9◂ [ ]{| l |}] ) } }
;; rsp=3 , %1766~4(<7)◂{ 1(<2)◂0(<2)◂3'(= a11◂ [ a9◂ [ ]] ) 1(<2)◂{ 0(<2)◂{ 5'(= a8◂ [ a13◂ [ {| l |}]] ) 1(<2)◂{ } } 2'(= a17◂ [ a9◂ [ ]{| l |}] ) } } %1759~4'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) %1755~1'(= r ) %1754~0'(= r ) %1751~8'(= a35◂ [ *{ }] ) 
; #195 4(<7)◂{ 1(<2)◂0(<2)◂3'(= a11◂ [ a9◂ [ ]] ) 1(<2)◂{ 0(<2)◂{ 5'(= a8◂ [ a13◂ [ {| l |}]] ) 1(<2)◂{ } } 2'(= a17◂ [ a9◂ [ ]{| l |}] ) } } ⊢ 0(<2)◂4(<7)◂{ 1(<2)◂0(<2)◂3'(= a11◂ [ a9◂ [ ]] ) 1(<2)◂{ 0(<2)◂{ 5'(= a8◂ [ a13◂ [ {| l |}]] ) 1(<2)◂{ } } 2'(= a17◂ [ a9◂ [ ]{| l |}] ) } }
;; rsp=3 , %1767~0(<2)◂4(<7)◂{ 1(<2)◂0(<2)◂3'(= a11◂ [ a9◂ [ ]] ) 1(<2)◂{ 0(<2)◂{ 5'(= a8◂ [ a13◂ [ {| l |}]] ) 1(<2)◂{ } } 2'(= a17◂ [ a9◂ [ ]{| l |}] ) } } %1759~4'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) %1755~1'(= r ) %1754~0'(= r ) %1751~8'(= a35◂ [ *{ }] ) 
; #24 0(<2)◂4(<7)◂{ 1(<2)◂0(<2)◂3'(= a11◂ [ a9◂ [ ]] ) 1(<2)◂{ 0(<2)◂{ 5'(= a8◂ [ a13◂ [ {| l |}]] ) 1(<2)◂{ } } 2'(= a17◂ [ a9◂ [ ]{| l |}] ) } } ⊢ 0(<2)◂0(<2)◂4(<7)◂{ 1(<2)◂0(<2)◂3'(= a11◂ [ a9◂ [ ]] ) 1(<2)◂{ 0(<2)◂{ 5'(= a8◂ [ a13◂ [ {| l |}]] ) 1(<2)◂{ } } 2'(= a17◂ [ a9◂ [ ]{| l |}] ) } }
;; rsp=3 , %1768~0(<2)◂0(<2)◂4(<7)◂{ 1(<2)◂0(<2)◂3'(= a11◂ [ a9◂ [ ]] ) 1(<2)◂{ 0(<2)◂{ 5'(= a8◂ [ a13◂ [ {| l |}]] ) 1(<2)◂{ } } 2'(= a17◂ [ a9◂ [ ]{| l |}] ) } } %1759~4'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) %1755~1'(= r ) %1754~0'(= r ) %1751~8'(= a35◂ [ *{ }] ) 
; ∎ 0(<2)◂0(<2)◂4(<7)◂{ 1(<2)◂0(<2)◂3'(= a11◂ [ a9◂ [ ]] ) 1(<2)◂{ 0(<2)◂{ 5'(= a8◂ [ a13◂ [ {| l |}]] ) 1(<2)◂{ } } 2'(= a17◂ [ a9◂ [ ]{| l |}] ) } }
; .dlt.ptn 4'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] )
	mov rdi,r10
	C_PUSH_REGS
	mov r8,rdi
	call LB_445
	C_POP_REGS
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 8'(= a35◂ [ *{ }] )
	mov rdi,QWORD [rsp-8+8*3]
	C_PUSH_REGS
	mov r8,rdi
	call LB_1701
	C_POP_REGS
; .mov_ptn2 0(<2)◂0(<2)◂4(<7)◂{ 1(<2)◂0(<2)◂3'(= a11◂ [ a9◂ [ ]] ) 1(<2)◂{ 0(<2)◂{ 5'(= a8◂ [ a13◂ [ {| l |}]] ) 1(<2)◂{ } } 2'(= a17◂ [ a9◂ [ ]{| l |}] ) } } ⊢ 2'(= a3◂ [ a35◂ [ a17◂ [ a9◂ [ ]{| l |}]]] )
	mov r13,r8
; .mov_ptn 0(<2)◂0(<2)◂4(<7)◂{ 1(<2)◂0(<2)◂3'(= a11◂ [ a9◂ [ ]] ) 1(<2)◂{ 0(<2)◂{ 5'(= a8◂ [ a13◂ [ {| l |}]] ) 1(<2)◂{ } } 0'(= a17◂ [ a9◂ [ ]{| l |}] ) } } ⊢ 2'(= a3◂ [ a35◂ [ a17◂ [ a9◂ [ ]{| l |}]]] )
	ALC_RCD 2, rax
	mov r14,rax
	mov rax,r9
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],1
	mov QWORD [rax+8],rdi
	mov QWORD [r14+8+8*0],rax
	ALC_RCD 2, rax
	mov r10,rax
	ALC_RCD 2, rax
	mov rcx,rax
	mov rax,r11
	mov QWORD [rcx+8+8*0],rax
	mov rax,unt 
	mov rax,unt_1
	mov QWORD [rcx+8+8*1],rax
	mov rax,rcx
	mov BYTE [rax+6],0
	mov QWORD [r10+8+8*0],rax
	mov rax,r13
	mov QWORD [r10+8+8*1],rax
	mov rax,r10
	mov BYTE [rax+6],1
	mov QWORD [r14+8+8*1],rax
	mov rax,r14
	mov BYTE [rax+6],4
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,24
	jmp LB_2747
LB_2749:
;; rsp=3 , %1757~2'(= a17◂ [ a9◂ [ ]{| l |}] ) %1755~1'(= r ) %1754~0'(= r ) %1752~9'(= a19◂ [ a9◂ [ ]{| l |}] ) %1751~8'(= a35◂ [ *{ }] ) 
; #131 { 9'(= a19◂ [ a9◂ [ ]{| l |}] ) 2'(= a17◂ [ a9◂ [ ]{| l |}] ) } ⊢ 2(<7)◂{ 9'(= a19◂ [ a9◂ [ ]{| l |}] ) 2'(= a17◂ [ a9◂ [ ]{| l |}] ) }
;; rsp=3 , %1769~2(<7)◂{ 9'(= a19◂ [ a9◂ [ ]{| l |}] ) 2'(= a17◂ [ a9◂ [ ]{| l |}] ) } %1755~1'(= r ) %1754~0'(= r ) %1751~8'(= a35◂ [ *{ }] ) 
; #195 2(<7)◂{ 9'(= a19◂ [ a9◂ [ ]{| l |}] ) 2'(= a17◂ [ a9◂ [ ]{| l |}] ) } ⊢ 0(<2)◂2(<7)◂{ 9'(= a19◂ [ a9◂ [ ]{| l |}] ) 2'(= a17◂ [ a9◂ [ ]{| l |}] ) }
;; rsp=3 , %1770~0(<2)◂2(<7)◂{ 9'(= a19◂ [ a9◂ [ ]{| l |}] ) 2'(= a17◂ [ a9◂ [ ]{| l |}] ) } %1755~1'(= r ) %1754~0'(= r ) %1751~8'(= a35◂ [ *{ }] ) 
; #24 0(<2)◂2(<7)◂{ 9'(= a19◂ [ a9◂ [ ]{| l |}] ) 2'(= a17◂ [ a9◂ [ ]{| l |}] ) } ⊢ 0(<2)◂0(<2)◂2(<7)◂{ 9'(= a19◂ [ a9◂ [ ]{| l |}] ) 2'(= a17◂ [ a9◂ [ ]{| l |}] ) }
;; rsp=3 , %1771~0(<2)◂0(<2)◂2(<7)◂{ 9'(= a19◂ [ a9◂ [ ]{| l |}] ) 2'(= a17◂ [ a9◂ [ ]{| l |}] ) } %1755~1'(= r ) %1754~0'(= r ) %1751~8'(= a35◂ [ *{ }] ) 
; ∎ 0(<2)◂0(<2)◂2(<7)◂{ 9'(= a19◂ [ a9◂ [ ]{| l |}] ) 2'(= a17◂ [ a9◂ [ ]{| l |}] ) }
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 8'(= a35◂ [ *{ }] )
	mov rdi,QWORD [rsp-8+8*3]
	C_PUSH_REGS
	mov r8,rdi
	call LB_1701
	C_POP_REGS
; .mov_ptn2 0(<2)◂0(<2)◂2(<7)◂{ 9'(= a19◂ [ a9◂ [ ]{| l |}] ) 2'(= a17◂ [ a9◂ [ ]{| l |}] ) } ⊢ 2'(= a3◂ [ a35◂ [ a17◂ [ a9◂ [ ]{| l |}]]] )
	mov r13,r8
; .mov_ptn 0(<2)◂0(<2)◂2(<7)◂{ 9'(= a19◂ [ a9◂ [ ]{| l |}] ) 0'(= a17◂ [ a9◂ [ ]{| l |}] ) } ⊢ 2'(= a3◂ [ a35◂ [ a17◂ [ a9◂ [ ]{| l |}]]] )
	ALC_RCD 2, rax
	mov r14,rax
	mov rax,QWORD [rsp-8+8*2]
	mov QWORD [r14+8+8*0],rax
	mov rax,r13
	mov QWORD [r14+8+8*1],rax
	mov rax,r14
	mov BYTE [rax+6],2
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,24
	jmp LB_2747
LB_2748:
;; ?. 10'(= a35◂ [ a17◂ [ a9◂ [ ]{| l |}]] ) ⊢ 1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] )
	mov QWORD [GBG_VCT+8*0],rdi
	mov r8,QWORD [rdi+8]
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_LN rdi
;; rsp=3 , %1756~2'(= a2◂ [ *{ rr{| l |}}] ) %1755~1'(= r ) %1754~0'(= r ) %1752~9'(= a19◂ [ a9◂ [ ]{| l |}] ) %1751~8'(= a35◂ [ *{ }] ) 
; #194 2'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] )
;; rsp=3 , %1772~1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] ) %1755~1'(= r ) %1754~0'(= r ) %1752~9'(= a19◂ [ a9◂ [ ]{| l |}] ) %1751~8'(= a35◂ [ *{ }] ) 
; #24 1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 0(<2)◂1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] )
;; rsp=3 , %1773~0(<2)◂1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] ) %1755~1'(= r ) %1754~0'(= r ) %1752~9'(= a19◂ [ a9◂ [ ]{| l |}] ) %1751~8'(= a35◂ [ *{ }] ) 
; ∎ 0(<2)◂1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] )
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 9'(= a19◂ [ a9◂ [ ]{| l |}] )
	mov rdi,QWORD [rsp-8+8*2]
	C_PUSH_REGS
	mov r8,rdi
	call LB_684
	C_POP_REGS
; .dlt.ptn 8'(= a35◂ [ *{ }] )
	mov rdi,QWORD [rsp-8+8*3]
	C_PUSH_REGS
	mov r8,rdi
	call LB_1701
	C_POP_REGS
; .mov_ptn2 0(<2)◂1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 2'(= a3◂ [ a35◂ [ a17◂ [ a9◂ [ ]{| l |}]]] )
	mov r13,r8
; .mov_ptn 0(<2)◂1(<2)◂0'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 2'(= a3◂ [ a35◂ [ a17◂ [ a9◂ [ ]{| l |}]]] )
	mov rax,r13
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],1
	mov QWORD [rax+8],rdi
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,24
	jmp LB_2747
LB_2747:
	cmp BYTE [r8+6],0
	jnz LB_2715
	POP_GRM_SCC
	ret
LB_2715:
	RB_GRM
	jmp LB_2752
LB_2751:
	add r14,1 
LB_2752:
	cmp r14,r9
	jge LB_2753
	JZ_LINE_SPC BYTE [r13+8+r14], LB_2751
LB_2753
	call GRM_219
	cmp BYTE [r8+6],0
	jnz LB_2756
	jmp LB_2757
LB_2756:
	jmp LB_2754
LB_2757:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a35◂ [ *{ }] ) ⊢ 8'(= a35◂ [ *{ }] )
; .mov_ptn 2'(= a35◂ [ *{ }] ) ⊢ 8'(= a35◂ [ *{ }] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_2755
LB_2754:
	add rsp,0
	jmp LB_2750
LB_2755:
	jmp LB_2759
LB_2758:
	add r14,1 
LB_2759:
	cmp r14,r9
	jge LB_2760
	JZ_LINE_SPC BYTE [r13+8+r14], LB_2758
LB_2760
	call GRM_191
	cmp BYTE [r8+6],0
	jnz LB_2763
	jmp LB_2764
LB_2763:
	jmp LB_2761
LB_2764:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a9◂ [ ] ) ⊢ 9'(= a9◂ [ ] )
; .mov_ptn 2'(= a9◂ [ ] ) ⊢ 9'(= a9◂ [ ] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_2762
LB_2761:
	add rsp,8
	jmp LB_2750
LB_2762:
	jmp LB_2766
LB_2765:
	add r14,1 
LB_2766:
	cmp r14,r9
	jge LB_2767
	JZ_LINE_SPC BYTE [r13+8+r14], LB_2765
LB_2767
	call GRM_203
	cmp BYTE [r8+6],0
	jnz LB_2770
	jmp LB_2771
LB_2770:
	jmp LB_2768
LB_2771:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) ⊢ 10'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] )
; .mov_ptn 2'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) ⊢ 10'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_2769
LB_2768:
	add rsp,16
	jmp LB_2750
LB_2769:
	PUSH_GRM
	jmp LB_2775
LB_2774:
	add r14,1 
LB_2775:
	cmp r14,r9
	jge LB_2776
	JZ_SPC BYTE [r13+8+r14], LB_2774
LB_2776
	lea rax,[r14+4]
	cmp rax,r9
	jg LB_2779
	jmp LB_2780
LB_2779:
	mov r8,unt_1
	jmp LB_2777
LB_2780:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],226
	jnz LB_2781
	cmp BYTE [rdi+1],138
	jnz LB_2781
	cmp BYTE [rdi+2],162
	jnz LB_2781
	cmp BYTE [rdi+3],124
	jnz LB_2781
	jmp LB_2782
LB_2781:
	mov r8,unt_1
	jmp LB_2777
LB_2782:
	add r14,4
	jmp LB_2778
LB_2777:
	add rsp,0
	jmp LB_2773
LB_2778:
	mov QWORD [rsp+8*0],r14
	mov r13,QWORD [rsp+16+8*0]
	mov r14,QWORD [rsp+8*0]
	jmp LB_2783
LB_2783
;; rsp=0 , %1780~1'(= r ) %1779~0'(= r ) 
; #25 { } ⊢ 1(<2)◂{ }
;; rsp=0 , %1781~1(<2)◂{ } %1780~1'(= r ) %1779~0'(= r ) 
; #195 1(<2)◂{ } ⊢ 0(<2)◂1(<2)◂{ }
;; rsp=0 , %1782~0(<2)◂1(<2)◂{ } %1780~1'(= r ) %1779~0'(= r ) 
; #24 0(<2)◂1(<2)◂{ } ⊢ 0(<2)◂0(<2)◂1(<2)◂{ }
;; rsp=0 , %1783~0(<2)◂0(<2)◂1(<2)◂{ } %1780~1'(= r ) %1779~0'(= r ) 
; ∎ 0(<2)◂0(<2)◂1(<2)◂{ }
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂0(<2)◂1(<2)◂{ } ⊢ 2'(= a3◂ [ a35◂ [ a3◂ [ *{ a8◂ [ a13◂ [ {| l |}]]a17◂ [ a9◂ [ ]{| l |}]}]]] )
; .mov_ptn 0(<2)◂0(<2)◂1(<2)◂{ } ⊢ 2'(= a3◂ [ a35◂ [ a3◂ [ *{ a8◂ [ a13◂ [ {| l |}]]a17◂ [ a9◂ [ ]{| l |}]}]]] )
	mov rax,unt 
	mov rax,unt_1
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	jmp LB_2784
LB_2784:
	cmp BYTE [r8+6],0
	jnz LB_2773
	POP_GRM_SCC
	jmp LB_2772
LB_2773:
	RB_GRM
	jmp LB_2787
LB_2786:
	add r14,1 
LB_2787:
	cmp r14,r9
	jge LB_2788
	JZ_LINE_SPC BYTE [r13+8+r14], LB_2786
LB_2788
	lea rax,[r14+3]
	cmp rax,r9
	jg LB_2791
	jmp LB_2792
LB_2791:
	mov r8,unt_1
	jmp LB_2789
LB_2792:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],226
	jnz LB_2793
	cmp BYTE [rdi+1],138
	jnz LB_2793
	cmp BYTE [rdi+2],162
	jnz LB_2793
	jmp LB_2794
LB_2793:
	mov r8,unt_1
	jmp LB_2789
LB_2794:
	add r14,3
	jmp LB_2790
LB_2789:
	add rsp,0
	jmp LB_2785
LB_2790:
	jmp LB_2796
LB_2795:
	add r14,1 
LB_2796:
	cmp r14,r9
	jge LB_2797
	JZ_LINE_SPC BYTE [r13+8+r14], LB_2795
LB_2797
	call GRM_207
	cmp BYTE [r8+6],0
	jnz LB_2800
	jmp LB_2801
LB_2800:
	jmp LB_2798
LB_2801:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a8◂ [ a13◂ [ {| l |}]] ) ⊢ 8'(= a8◂ [ a13◂ [ {| l |}]] )
; .mov_ptn 2'(= a8◂ [ a13◂ [ {| l |}]] ) ⊢ 8'(= a8◂ [ a13◂ [ {| l |}]] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_2799
LB_2798:
	add rsp,0
	POP_GRM_FAIL
	jmp LB_2772
LB_2799:
	jmp LB_2803
LB_2802:
	add r14,1 
LB_2803:
	cmp r14,r9
	jge LB_2804
	JZ_LINE_SPC BYTE [r13+8+r14], LB_2802
LB_2804
	lea rax,[r14+1]
	cmp rax,r9
	jg LB_2807
	jmp LB_2808
LB_2807:
	mov r8,unt_1
	jmp LB_2805
LB_2808:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],10
	jnz LB_2809
	jmp LB_2810
LB_2809:
	mov r8,unt_1
	jmp LB_2805
LB_2810:
	add r14,1
	jmp LB_2806
LB_2805:
	add rsp,8
	POP_GRM_FAIL
	jmp LB_2772
LB_2806:
	jmp LB_2812
LB_2811:
	add r14,1 
LB_2812:
	cmp r14,r9
	jge LB_2813
	JZ_LINE_SPC BYTE [r13+8+r14], LB_2811
LB_2813
	call GRM_236
	cmp BYTE [r8+6],0
	jnz LB_2816
	jmp LB_2817
LB_2816:
	jmp LB_2814
LB_2817:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a35◂ [ a17◂ [ a9◂ [ ]{| l |}]] ) ⊢ 9'(= a35◂ [ a17◂ [ a9◂ [ ]{| l |}]] )
; .mov_ptn 2'(= a35◂ [ a17◂ [ a9◂ [ ]{| l |}]] ) ⊢ 9'(= a35◂ [ a17◂ [ a9◂ [ ]{| l |}]] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_2815
LB_2814:
	add rsp,8
	POP_GRM_FAIL
	jmp LB_2772
LB_2815:
	mov QWORD [rsp+8*2],r14
	mov r13,QWORD [rsp+16+8*2]
	mov r14,QWORD [rsp+8*2]
	jmp LB_2818
LB_2818
;; rsp=2 , %1787~1'(= r ) %1786~0'(= r ) %1785~9'(= a35◂ [ a17◂ [ a9◂ [ ]{| l |}]] ) %1784~8'(= a8◂ [ a13◂ [ {| l |}]] ) 
;; ? 9'(= a35◂ [ a17◂ [ a9◂ [ ]{| l |}]] ) ⊢ 0(<2)◂2'(= a17◂ [ a9◂ [ ]{| l |}] )
	mov rdi,QWORD [rsp-8+8*1]
	cmp BYTE [rdi+6],0
	jnz LB_2820
	mov QWORD [GBG_VCT+8*0],rdi
	mov r8,QWORD [rdi+8]
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_LN rdi
;; rsp=2 , %1789~2'(= a17◂ [ a9◂ [ ]{| l |}] ) %1787~1'(= r ) %1786~0'(= r ) %1784~8'(= a8◂ [ a13◂ [ {| l |}]] ) 
; #24 { 8'(= a8◂ [ a13◂ [ {| l |}]] ) 2'(= a17◂ [ a9◂ [ ]{| l |}] ) } ⊢ 0(<2)◂{ 8'(= a8◂ [ a13◂ [ {| l |}]] ) 2'(= a17◂ [ a9◂ [ ]{| l |}] ) }
;; rsp=2 , %1790~0(<2)◂{ 8'(= a8◂ [ a13◂ [ {| l |}]] ) 2'(= a17◂ [ a9◂ [ ]{| l |}] ) } %1787~1'(= r ) %1786~0'(= r ) 
; #195 0(<2)◂{ 8'(= a8◂ [ a13◂ [ {| l |}]] ) 2'(= a17◂ [ a9◂ [ ]{| l |}] ) } ⊢ 0(<2)◂0(<2)◂{ 8'(= a8◂ [ a13◂ [ {| l |}]] ) 2'(= a17◂ [ a9◂ [ ]{| l |}] ) }
;; rsp=2 , %1791~0(<2)◂0(<2)◂{ 8'(= a8◂ [ a13◂ [ {| l |}]] ) 2'(= a17◂ [ a9◂ [ ]{| l |}] ) } %1787~1'(= r ) %1786~0'(= r ) 
; #24 0(<2)◂0(<2)◂{ 8'(= a8◂ [ a13◂ [ {| l |}]] ) 2'(= a17◂ [ a9◂ [ ]{| l |}] ) } ⊢ 0(<2)◂0(<2)◂0(<2)◂{ 8'(= a8◂ [ a13◂ [ {| l |}]] ) 2'(= a17◂ [ a9◂ [ ]{| l |}] ) }
;; rsp=2 , %1792~0(<2)◂0(<2)◂0(<2)◂{ 8'(= a8◂ [ a13◂ [ {| l |}]] ) 2'(= a17◂ [ a9◂ [ ]{| l |}] ) } %1787~1'(= r ) %1786~0'(= r ) 
; ∎ 0(<2)◂0(<2)◂0(<2)◂{ 8'(= a8◂ [ a13◂ [ {| l |}]] ) 2'(= a17◂ [ a9◂ [ ]{| l |}] ) }
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂0(<2)◂0(<2)◂{ 8'(= a8◂ [ a13◂ [ {| l |}]] ) 2'(= a17◂ [ a9◂ [ ]{| l |}] ) } ⊢ 2'(= a3◂ [ a35◂ [ a3◂ [ *{ a8◂ [ a13◂ [ {| l |}]]a17◂ [ a9◂ [ ]{| l |}]}]]] )
	mov r13,r8
; .mov_ptn 0(<2)◂0(<2)◂0(<2)◂{ 8'(= a8◂ [ a13◂ [ {| l |}]] ) 0'(= a17◂ [ a9◂ [ ]{| l |}] ) } ⊢ 2'(= a3◂ [ a35◂ [ a3◂ [ *{ a8◂ [ a13◂ [ {| l |}]]a17◂ [ a9◂ [ ]{| l |}]}]]] )
	ALC_RCD 2, rax
	mov r14,rax
	mov rax,QWORD [rsp-8+8*2]
	mov QWORD [r14+8+8*0],rax
	mov rax,r13
	mov QWORD [r14+8+8*1],rax
	mov rax,r14
	mov BYTE [rax+6],0
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,16
	jmp LB_2819
LB_2820:
;; ?. 9'(= a35◂ [ a17◂ [ a9◂ [ ]{| l |}]] ) ⊢ 1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] )
	mov QWORD [GBG_VCT+8*0],rdi
	mov r8,QWORD [rdi+8]
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_LN rdi
;; rsp=2 , %1788~2'(= a2◂ [ *{ rr{| l |}}] ) %1787~1'(= r ) %1786~0'(= r ) %1784~8'(= a8◂ [ a13◂ [ {| l |}]] ) 
; #194 2'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] )
;; rsp=2 , %1793~1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] ) %1787~1'(= r ) %1786~0'(= r ) %1784~8'(= a8◂ [ a13◂ [ {| l |}]] ) 
; #24 1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 0(<2)◂1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] )
;; rsp=2 , %1794~0(<2)◂1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] ) %1787~1'(= r ) %1786~0'(= r ) %1784~8'(= a8◂ [ a13◂ [ {| l |}]] ) 
; ∎ 0(<2)◂1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] )
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 8'(= a8◂ [ a13◂ [ {| l |}]] )
	mov rdi,QWORD [rsp-8+8*2]
	C_PUSH_REGS
	mov r8,rdi
	call LB_668
	C_POP_REGS
; .mov_ptn2 0(<2)◂1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 2'(= a3◂ [ a35◂ [ a3◂ [ *{ a8◂ [ a13◂ [ {| l |}]]a17◂ [ a9◂ [ ]{| l |}]}]]] )
	mov r13,r8
; .mov_ptn 0(<2)◂1(<2)◂0'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 2'(= a3◂ [ a35◂ [ a3◂ [ *{ a8◂ [ a13◂ [ {| l |}]]a17◂ [ a9◂ [ ]{| l |}]}]]] )
	mov rax,r13
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],1
	mov QWORD [rax+8],rdi
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,16
	jmp LB_2819
LB_2819:
	cmp BYTE [r8+6],0
	jnz LB_2785
	POP_GRM_SCC
	jmp LB_2772
LB_2785:
	RB_GRM
	jmp LB_2823
LB_2822:
	add r14,1 
LB_2823:
	cmp r14,r9
	jge LB_2824
	JZ_LINE_SPC BYTE [r13+8+r14], LB_2822
LB_2824
	call GRM_222
	cmp BYTE [r8+6],0
	jnz LB_2827
	jmp LB_2828
LB_2827:
	jmp LB_2825
LB_2828:
	sub rsp,16
; .mov_ptn2 2'(= *{ rr} ) ⊢ { 8'(= r ) 9'(= r ) }
; .mov_ptn 2'(= *{ rr} ) ⊢ { 8'(= r ) 9'(= r ) }
	mov r10, QWORD [r8+8]
	mov QWORD [rsp-8+8*2],r10
	mov r11, QWORD [r8+16]
	mov QWORD [rsp-8+8*1],r11
	jmp LB_2826
LB_2825:
	add rsp,0
	jmp LB_2821
LB_2826:
	jmp LB_2830
LB_2829:
	add r14,1 
LB_2830:
	cmp r14,r9
	jge LB_2831
	JZ_LINE_SPC BYTE [r13+8+r14], LB_2829
LB_2831
	call GRM_236
	cmp BYTE [r8+6],0
	jnz LB_2834
	jmp LB_2835
LB_2834:
	jmp LB_2832
LB_2835:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a35◂ [ a17◂ [ a9◂ [ ]{| l |}]] ) ⊢ 10'(= a35◂ [ a17◂ [ a9◂ [ ]{| l |}]] )
; .mov_ptn 2'(= a35◂ [ a17◂ [ a9◂ [ ]{| l |}]] ) ⊢ 10'(= a35◂ [ a17◂ [ a9◂ [ ]{| l |}]] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_2833
LB_2832:
	add rsp,16
	jmp LB_2821
LB_2833:
	mov QWORD [rsp+8*3],r14
	mov r13,QWORD [rsp+16+8*3]
	mov r14,QWORD [rsp+8*3]
	jmp LB_2836
LB_2836
;; rsp=3 , %1799~1'(= r ) %1798~0'(= r ) %1797~10'(= a35◂ [ a17◂ [ a9◂ [ ]{| l |}]] ) %1796~9'(= r ) %1795~8'(= r ) 
;; ? 10'(= a35◂ [ a17◂ [ a9◂ [ ]{| l |}]] ) ⊢ 0(<2)◂2'(= a17◂ [ a9◂ [ ]{| l |}] )
	mov rdi,QWORD [rsp-8+8*1]
	cmp BYTE [rdi+6],0
	jnz LB_2838
	mov QWORD [GBG_VCT+8*0],rdi
	mov r8,QWORD [rdi+8]
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_LN rdi
;; rsp=3 , %1801~2'(= a17◂ [ a9◂ [ ]{| l |}] ) %1799~1'(= r ) %1798~0'(= r ) %1796~9'(= r ) %1795~8'(= r ) 
; $ %[ "lc_code 20" ] ⊢ %[ "lc_code 20" ]
;; rsp=3 , %1802~%[ "lc_code 20" ] %1801~2'(= a17◂ [ a9◂ [ ]{| l |}] ) %1799~1'(= r ) %1798~0'(= r ) %1796~9'(= r ) %1795~8'(= r ) 
; #22 { } ⊢ 1(<2)◂{ }
;; rsp=3 , %1803~1(<2)◂{ } %1802~%[ "lc_code 20" ] %1801~2'(= a17◂ [ a9◂ [ ]{| l |}] ) %1799~1'(= r ) %1798~0'(= r ) %1796~9'(= r ) %1795~8'(= r ) 
; #23 { { 8'(= r ) 9'(= r ) %[ "lc_code 20" ] } 1(<2)◂{ } } ⊢ 0(<2)◂{ { 8'(= r ) 9'(= r ) %[ "lc_code 20" ] } 1(<2)◂{ } }
;; rsp=3 , %1804~0(<2)◂{ { 8'(= r ) 9'(= r ) %[ "lc_code 20" ] } 1(<2)◂{ } } %1801~2'(= a17◂ [ a9◂ [ ]{| l |}] ) %1799~1'(= r ) %1798~0'(= r ) 
; #194 0(<2)◂{ { 8'(= r ) 9'(= r ) %[ "lc_code 20" ] } 1(<2)◂{ } } ⊢ 1(<2)◂0(<2)◂{ { 8'(= r ) 9'(= r ) %[ "lc_code 20" ] } 1(<2)◂{ } }
;; rsp=3 , %1805~1(<2)◂0(<2)◂{ { 8'(= r ) 9'(= r ) %[ "lc_code 20" ] } 1(<2)◂{ } } %1801~2'(= a17◂ [ a9◂ [ ]{| l |}] ) %1799~1'(= r ) %1798~0'(= r ) 
; #24 1(<2)◂0(<2)◂{ { 8'(= r ) 9'(= r ) %[ "lc_code 20" ] } 1(<2)◂{ } } ⊢ 0(<2)◂1(<2)◂0(<2)◂{ { 8'(= r ) 9'(= r ) %[ "lc_code 20" ] } 1(<2)◂{ } }
;; rsp=3 , %1806~0(<2)◂1(<2)◂0(<2)◂{ { 8'(= r ) 9'(= r ) %[ "lc_code 20" ] } 1(<2)◂{ } } %1801~2'(= a17◂ [ a9◂ [ ]{| l |}] ) %1799~1'(= r ) %1798~0'(= r ) 
; ∎ 0(<2)◂1(<2)◂0(<2)◂{ { 8'(= r ) 9'(= r ) %[ "lc_code 20" ] } 1(<2)◂{ } }
; .dlt.ptn 2'(= a17◂ [ a9◂ [ ]{| l |}] )
	mov rdi,r8
	C_PUSH_REGS
	mov r8,rdi
	call LB_674
	C_POP_REGS
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂1(<2)◂0(<2)◂{ { 8'(= r ) 9'(= r ) %[ "lc_code 20" ] } 1(<2)◂{ } } ⊢ 2'(= a3◂ [ a35◂ [ a3◂ [ *{ a8◂ [ a13◂ [ {| l |}]]a17◂ [ a9◂ [ ]{| l |}]}]]] )
; .mov_ptn 0(<2)◂1(<2)◂0(<2)◂{ { 8'(= r ) 9'(= r ) %[ "lc_code 20" ] } 1(<2)◂{ } } ⊢ 2'(= a3◂ [ a35◂ [ a3◂ [ *{ a8◂ [ a13◂ [ {| l |}]]a17◂ [ a9◂ [ ]{| l |}]}]]] )
	ALC_RCD 2, rax
	mov r13,rax
	ALC_RCD 3, rax
	mov r14,rax
	mov rax,QWORD [rsp-8+8*3]
	mov QWORD [r14+8+8*0],rax
	mov rax,QWORD [rsp-8+8*2]
	mov QWORD [r14+8+8*1],rax
	mov rsi,1  
	mov rdi,24
	xor rax,rax 
	C_CALL_SF calloc
	mov QWORD [rax],10
	mov BYTE [rax+8+0],108
	mov BYTE [rax+8+1],99
	mov BYTE [rax+8+2],95
	mov BYTE [rax+8+3],99
	mov BYTE [rax+8+4],111
	mov BYTE [rax+8+5],100
	mov BYTE [rax+8+6],101
	mov BYTE [rax+8+7],32
	mov BYTE [rax+8+8],50
	mov BYTE [rax+8+9],48
	mov QWORD [r14+8+8*2],rax
	mov rax,r14
	mov QWORD [r13+8+8*0],rax
	mov rax,unt 
	mov rax,unt_1
	mov QWORD [r13+8+8*1],rax
	mov rax,r13
	mov BYTE [rax+6],0
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],1
	mov QWORD [rax+8],rdi
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,24
	jmp LB_2837
LB_2838:
;; ?. 10'(= a35◂ [ a17◂ [ a9◂ [ ]{| l |}]] ) ⊢ 1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] )
	mov QWORD [GBG_VCT+8*0],rdi
	mov r8,QWORD [rdi+8]
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_LN rdi
;; rsp=3 , %1800~2'(= a2◂ [ *{ rr{| l |}}] ) %1799~1'(= r ) %1798~0'(= r ) %1796~9'(= r ) %1795~8'(= r ) 
; $ %[ "lc_code 21" ] ⊢ %[ "lc_code 21" ]
;; rsp=3 , %1807~%[ "lc_code 21" ] %1800~2'(= a2◂ [ *{ rr{| l |}}] ) %1799~1'(= r ) %1798~0'(= r ) %1796~9'(= r ) %1795~8'(= r ) 
; #23 { { 8'(= r ) 9'(= r ) %[ "lc_code 21" ] } 2'(= a2◂ [ *{ rr{| l |}}] ) } ⊢ 0(<2)◂{ { 8'(= r ) 9'(= r ) %[ "lc_code 21" ] } 2'(= a2◂ [ *{ rr{| l |}}] ) }
;; rsp=3 , %1808~0(<2)◂{ { 8'(= r ) 9'(= r ) %[ "lc_code 21" ] } 2'(= a2◂ [ *{ rr{| l |}}] ) } %1799~1'(= r ) %1798~0'(= r ) 
; #194 0(<2)◂{ { 8'(= r ) 9'(= r ) %[ "lc_code 21" ] } 2'(= a2◂ [ *{ rr{| l |}}] ) } ⊢ 1(<2)◂0(<2)◂{ { 8'(= r ) 9'(= r ) %[ "lc_code 21" ] } 2'(= a2◂ [ *{ rr{| l |}}] ) }
;; rsp=3 , %1809~1(<2)◂0(<2)◂{ { 8'(= r ) 9'(= r ) %[ "lc_code 21" ] } 2'(= a2◂ [ *{ rr{| l |}}] ) } %1799~1'(= r ) %1798~0'(= r ) 
; #24 1(<2)◂0(<2)◂{ { 8'(= r ) 9'(= r ) %[ "lc_code 21" ] } 2'(= a2◂ [ *{ rr{| l |}}] ) } ⊢ 0(<2)◂1(<2)◂0(<2)◂{ { 8'(= r ) 9'(= r ) %[ "lc_code 21" ] } 2'(= a2◂ [ *{ rr{| l |}}] ) }
;; rsp=3 , %1810~0(<2)◂1(<2)◂0(<2)◂{ { 8'(= r ) 9'(= r ) %[ "lc_code 21" ] } 2'(= a2◂ [ *{ rr{| l |}}] ) } %1799~1'(= r ) %1798~0'(= r ) 
; ∎ 0(<2)◂1(<2)◂0(<2)◂{ { 8'(= r ) 9'(= r ) %[ "lc_code 21" ] } 2'(= a2◂ [ *{ rr{| l |}}] ) }
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂1(<2)◂0(<2)◂{ { 8'(= r ) 9'(= r ) %[ "lc_code 21" ] } 2'(= a2◂ [ *{ rr{| l |}}] ) } ⊢ 2'(= a3◂ [ a35◂ [ a3◂ [ *{ a8◂ [ a13◂ [ {| l |}]]a17◂ [ a9◂ [ ]{| l |}]}]]] )
	mov r13,r8
; .mov_ptn 0(<2)◂1(<2)◂0(<2)◂{ { 8'(= r ) 9'(= r ) %[ "lc_code 21" ] } 0'(= a2◂ [ *{ rr{| l |}}] ) } ⊢ 2'(= a3◂ [ a35◂ [ a3◂ [ *{ a8◂ [ a13◂ [ {| l |}]]a17◂ [ a9◂ [ ]{| l |}]}]]] )
	ALC_RCD 2, rax
	mov r14,rax
	ALC_RCD 3, rax
	mov r9,rax
	mov rax,QWORD [rsp-8+8*3]
	mov QWORD [r9+8+8*0],rax
	mov rax,QWORD [rsp-8+8*2]
	mov QWORD [r9+8+8*1],rax
	mov rsi,1  
	mov rdi,24
	xor rax,rax 
	C_CALL_SF calloc
	mov QWORD [rax],10
	mov BYTE [rax+8+0],108
	mov BYTE [rax+8+1],99
	mov BYTE [rax+8+2],95
	mov BYTE [rax+8+3],99
	mov BYTE [rax+8+4],111
	mov BYTE [rax+8+5],100
	mov BYTE [rax+8+6],101
	mov BYTE [rax+8+7],32
	mov BYTE [rax+8+8],50
	mov BYTE [rax+8+9],49
	mov QWORD [r9+8+8*2],rax
	mov rax,r9
	mov QWORD [r14+8+8*0],rax
	mov rax,r13
	mov QWORD [r14+8+8*1],rax
	mov rax,r14
	mov BYTE [rax+6],0
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],1
	mov QWORD [rax+8],rdi
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,24
	jmp LB_2837
LB_2837:
	cmp BYTE [r8+6],0
	jnz LB_2821
	POP_GRM_SCC
	jmp LB_2772
LB_2821:
	POP_GRM_FAIL 
	jmp LB_2772
LB_2772:
	cmp BYTE [r8+6],0
	jnz LB_2839
	jmp LB_2840
LB_2839:
	add rsp,24
	POP_GRM_FAIL
	ret
LB_2840:
	mov QWORD [rsp+8*3],r14
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi 
; .mov_ptn2 2'(= a35◂ [ a3◂ [ *{ a8◂ [ a13◂ [ {| l |}]]a17◂ [ a9◂ [ ]{| l |}]}]] ) ⊢ 3'(= a35◂ [ a3◂ [ *{ a8◂ [ a13◂ [ {| l |}]]a17◂ [ a9◂ [ ]{| l |}]}]] )
	mov r10,r9
; .mov_ptn 2'(= a35◂ [ a3◂ [ *{ a8◂ [ a13◂ [ {| l |}]]a17◂ [ a9◂ [ ]{| l |}]}]] ) ⊢ 3'(= a35◂ [ a3◂ [ *{ a8◂ [ a13◂ [ {| l |}]]a17◂ [ a9◂ [ ]{| l |}]}]] )
	mov rax,r8
	mov r9,rax
	mov r13,QWORD [rsp+16+8*3]
	mov r14,QWORD [rsp+8*3]
	jmp LB_2841
LB_2841
;; rsp=3 , %1811~3'(= a35◂ [ a3◂ [ *{ a8◂ [ a13◂ [ {| l |}]]a17◂ [ a9◂ [ ]{| l |}]}]] ) %1778~1'(= r ) %1777~0'(= r ) %1776~10'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) %1775~9'(= a9◂ [ ] ) %1774~8'(= a35◂ [ *{ }] ) 
;; ? 3'(= a35◂ [ a3◂ [ *{ a8◂ [ a13◂ [ {| l |}]]a17◂ [ a9◂ [ ]{| l |}]}]] ) ⊢ 0(<2)◂2'(= a3◂ [ *{ a8◂ [ a13◂ [ {| l |}]]a17◂ [ a9◂ [ ]{| l |}]}] )
	mov rdi,r9
	cmp BYTE [rdi+6],0
	jnz LB_2843
	mov QWORD [GBG_VCT+8*0],rdi
	mov r8,QWORD [rdi+8]
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_LN rdi
;; rsp=3 , %1813~2'(= a3◂ [ *{ a8◂ [ a13◂ [ {| l |}]]a17◂ [ a9◂ [ ]{| l |}]}] ) %1778~1'(= r ) %1777~0'(= r ) %1776~10'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) %1775~9'(= a9◂ [ ] ) %1774~8'(= a35◂ [ *{ }] ) 
;; ? 2'(= a3◂ [ *{ a8◂ [ a13◂ [ {| l |}]]a17◂ [ a9◂ [ ]{| l |}]}] ) ⊢ 0(<2)◂{ 3'(= a8◂ [ a13◂ [ {| l |}]] ) 4'(= a17◂ [ a9◂ [ ]{| l |}] ) }
	mov rdi,r8
	cmp BYTE [rdi+6],0
	jnz LB_2844
	mov r9, QWORD [r8+8]
	mov r10, QWORD [r8+16]
	mov QWORD [GBG_VCT+8*0],r8
	mov rdi,QWORD [GBG_VCT+8*0]
	mov rax,[SS_RCD_2_TOP]
	mov QWORD [rdi],rax 
	mov QWORD [SS_RCD_2_TOP],rdi
;; rsp=3 , %1815~4'(= a17◂ [ a9◂ [ ]{| l |}] ) %1814~3'(= a8◂ [ a13◂ [ {| l |}]] ) %1778~1'(= r ) %1777~0'(= r ) %1776~10'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) %1775~9'(= a9◂ [ ] ) %1774~8'(= a35◂ [ *{ }] ) 
; #124 { 9'(= a9◂ [ ] ) 10'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) 3'(= a8◂ [ a13◂ [ {| l |}]] ) } ⊢ 0(<4)◂{ 9'(= a9◂ [ ] ) 10'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) 3'(= a8◂ [ a13◂ [ {| l |}]] ) }
;; rsp=3 , %1816~0(<4)◂{ 9'(= a9◂ [ ] ) 10'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) 3'(= a8◂ [ a13◂ [ {| l |}]] ) } %1815~4'(= a17◂ [ a9◂ [ ]{| l |}] ) %1778~1'(= r ) %1777~0'(= r ) %1774~8'(= a35◂ [ *{ }] ) 
; #131 { 0(<4)◂{ 9'(= a9◂ [ ] ) 10'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) 3'(= a8◂ [ a13◂ [ {| l |}]] ) } 4'(= a17◂ [ a9◂ [ ]{| l |}] ) } ⊢ 2(<7)◂{ 0(<4)◂{ 9'(= a9◂ [ ] ) 10'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) 3'(= a8◂ [ a13◂ [ {| l |}]] ) } 4'(= a17◂ [ a9◂ [ ]{| l |}] ) }
;; rsp=3 , %1817~2(<7)◂{ 0(<4)◂{ 9'(= a9◂ [ ] ) 10'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) 3'(= a8◂ [ a13◂ [ {| l |}]] ) } 4'(= a17◂ [ a9◂ [ ]{| l |}] ) } %1778~1'(= r ) %1777~0'(= r ) %1774~8'(= a35◂ [ *{ }] ) 
; #195 2(<7)◂{ 0(<4)◂{ 9'(= a9◂ [ ] ) 10'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) 3'(= a8◂ [ a13◂ [ {| l |}]] ) } 4'(= a17◂ [ a9◂ [ ]{| l |}] ) } ⊢ 0(<2)◂2(<7)◂{ 0(<4)◂{ 9'(= a9◂ [ ] ) 10'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) 3'(= a8◂ [ a13◂ [ {| l |}]] ) } 4'(= a17◂ [ a9◂ [ ]{| l |}] ) }
;; rsp=3 , %1818~0(<2)◂2(<7)◂{ 0(<4)◂{ 9'(= a9◂ [ ] ) 10'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) 3'(= a8◂ [ a13◂ [ {| l |}]] ) } 4'(= a17◂ [ a9◂ [ ]{| l |}] ) } %1778~1'(= r ) %1777~0'(= r ) %1774~8'(= a35◂ [ *{ }] ) 
; #24 0(<2)◂2(<7)◂{ 0(<4)◂{ 9'(= a9◂ [ ] ) 10'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) 3'(= a8◂ [ a13◂ [ {| l |}]] ) } 4'(= a17◂ [ a9◂ [ ]{| l |}] ) } ⊢ 0(<2)◂0(<2)◂2(<7)◂{ 0(<4)◂{ 9'(= a9◂ [ ] ) 10'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) 3'(= a8◂ [ a13◂ [ {| l |}]] ) } 4'(= a17◂ [ a9◂ [ ]{| l |}] ) }
;; rsp=3 , %1819~0(<2)◂0(<2)◂2(<7)◂{ 0(<4)◂{ 9'(= a9◂ [ ] ) 10'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) 3'(= a8◂ [ a13◂ [ {| l |}]] ) } 4'(= a17◂ [ a9◂ [ ]{| l |}] ) } %1778~1'(= r ) %1777~0'(= r ) %1774~8'(= a35◂ [ *{ }] ) 
; ∎ 0(<2)◂0(<2)◂2(<7)◂{ 0(<4)◂{ 9'(= a9◂ [ ] ) 10'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) 3'(= a8◂ [ a13◂ [ {| l |}]] ) } 4'(= a17◂ [ a9◂ [ ]{| l |}] ) }
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 8'(= a35◂ [ *{ }] )
	mov rdi,QWORD [rsp-8+8*3]
	C_PUSH_REGS
	mov r8,rdi
	call LB_1701
	C_POP_REGS
; .mov_ptn2 0(<2)◂0(<2)◂2(<7)◂{ 0(<4)◂{ 9'(= a9◂ [ ] ) 10'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) 3'(= a8◂ [ a13◂ [ {| l |}]] ) } 4'(= a17◂ [ a9◂ [ ]{| l |}] ) } ⊢ 2'(= a3◂ [ a35◂ [ a17◂ [ a9◂ [ ]{| l |}]]] )
; .mov_ptn 0(<2)◂0(<2)◂2(<7)◂{ 0(<4)◂{ 9'(= a9◂ [ ] ) 10'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) 3'(= a8◂ [ a13◂ [ {| l |}]] ) } 4'(= a17◂ [ a9◂ [ ]{| l |}] ) } ⊢ 2'(= a3◂ [ a35◂ [ a17◂ [ a9◂ [ ]{| l |}]]] )
	ALC_RCD 2, rax
	mov r13,rax
	ALC_RCD 3, rax
	mov r14,rax
	mov rax,QWORD [rsp-8+8*2]
	mov QWORD [r14+8+8*0],rax
	mov rax,QWORD [rsp-8+8*1]
	mov QWORD [r14+8+8*1],rax
	mov rax,r9
	mov QWORD [r14+8+8*2],rax
	mov rax,r14
	mov BYTE [rax+6],0
	mov QWORD [r13+8+8*0],rax
	mov rax,r10
	mov QWORD [r13+8+8*1],rax
	mov rax,r13
	mov BYTE [rax+6],2
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,24
	jmp LB_2842
LB_2844:
;; ?. 2'(= a3◂ [ *{ a8◂ [ a13◂ [ {| l |}]]a17◂ [ a9◂ [ ]{| l |}]}] ) ⊢ 1(<2)◂{ }
;; rsp=3 , %1778~1'(= r ) %1777~0'(= r ) %1776~10'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) %1775~9'(= a9◂ [ ] ) %1774~8'(= a35◂ [ *{ }] ) 
; #133 { 9'(= a9◂ [ ] ) 10'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) } ⊢ 0(<7)◂{ 9'(= a9◂ [ ] ) 10'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) }
;; rsp=3 , %1820~0(<7)◂{ 9'(= a9◂ [ ] ) 10'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) } %1778~1'(= r ) %1777~0'(= r ) %1774~8'(= a35◂ [ *{ }] ) 
; #195 0(<7)◂{ 9'(= a9◂ [ ] ) 10'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) } ⊢ 0(<2)◂0(<7)◂{ 9'(= a9◂ [ ] ) 10'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) }
;; rsp=3 , %1821~0(<2)◂0(<7)◂{ 9'(= a9◂ [ ] ) 10'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) } %1778~1'(= r ) %1777~0'(= r ) %1774~8'(= a35◂ [ *{ }] ) 
; #24 0(<2)◂0(<7)◂{ 9'(= a9◂ [ ] ) 10'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) } ⊢ 0(<2)◂0(<2)◂0(<7)◂{ 9'(= a9◂ [ ] ) 10'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) }
;; rsp=3 , %1822~0(<2)◂0(<2)◂0(<7)◂{ 9'(= a9◂ [ ] ) 10'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) } %1778~1'(= r ) %1777~0'(= r ) %1774~8'(= a35◂ [ *{ }] ) 
; ∎ 0(<2)◂0(<2)◂0(<7)◂{ 9'(= a9◂ [ ] ) 10'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) }
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 8'(= a35◂ [ *{ }] )
	mov rdi,QWORD [rsp-8+8*3]
	C_PUSH_REGS
	mov r8,rdi
	call LB_1701
	C_POP_REGS
; .mov_ptn2 0(<2)◂0(<2)◂0(<7)◂{ 9'(= a9◂ [ ] ) 10'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) } ⊢ 2'(= a3◂ [ a35◂ [ a17◂ [ a9◂ [ ]{| l |}]]] )
; .mov_ptn 0(<2)◂0(<2)◂0(<7)◂{ 9'(= a9◂ [ ] ) 10'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) } ⊢ 2'(= a3◂ [ a35◂ [ a17◂ [ a9◂ [ ]{| l |}]]] )
	ALC_RCD 2, rax
	mov r13,rax
	mov rax,QWORD [rsp-8+8*2]
	mov QWORD [r13+8+8*0],rax
	mov rax,QWORD [rsp-8+8*1]
	mov QWORD [r13+8+8*1],rax
	mov rax,r13
	mov BYTE [rax+6],0
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,24
	jmp LB_2842
LB_2843:
;; ?. 3'(= a35◂ [ a3◂ [ *{ a8◂ [ a13◂ [ {| l |}]]a17◂ [ a9◂ [ ]{| l |}]}]] ) ⊢ 1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] )
	mov QWORD [GBG_VCT+8*0],rdi
	mov r8,QWORD [rdi+8]
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_LN rdi
;; rsp=3 , %1812~2'(= a2◂ [ *{ rr{| l |}}] ) %1778~1'(= r ) %1777~0'(= r ) %1776~10'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) %1775~9'(= a9◂ [ ] ) %1774~8'(= a35◂ [ *{ }] ) 
; #194 2'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] )
;; rsp=3 , %1823~1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] ) %1778~1'(= r ) %1777~0'(= r ) %1776~10'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) %1775~9'(= a9◂ [ ] ) %1774~8'(= a35◂ [ *{ }] ) 
; #24 1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 0(<2)◂1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] )
;; rsp=3 , %1824~0(<2)◂1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] ) %1778~1'(= r ) %1777~0'(= r ) %1776~10'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) %1775~9'(= a9◂ [ ] ) %1774~8'(= a35◂ [ *{ }] ) 
; ∎ 0(<2)◂1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] )
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 10'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] )
	mov rdi,QWORD [rsp-8+8*1]
	C_PUSH_REGS
	mov r8,rdi
	call LB_445
	C_POP_REGS
; .dlt.ptn 9'(= a9◂ [ ] )
	mov rdi,QWORD [rsp-8+8*2]
	C_PUSH_REGS
	mov r8,rdi
	call LB_388
	C_POP_REGS
; .dlt.ptn 8'(= a35◂ [ *{ }] )
	mov rdi,QWORD [rsp-8+8*3]
	C_PUSH_REGS
	mov r8,rdi
	call LB_1701
	C_POP_REGS
; .mov_ptn2 0(<2)◂1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 2'(= a3◂ [ a35◂ [ a17◂ [ a9◂ [ ]{| l |}]]] )
	mov r13,r8
; .mov_ptn 0(<2)◂1(<2)◂0'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 2'(= a3◂ [ a35◂ [ a17◂ [ a9◂ [ ]{| l |}]]] )
	mov rax,r13
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],1
	mov QWORD [rax+8],rdi
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,24
	jmp LB_2842
LB_2842:
	cmp BYTE [r8+6],0
	jnz LB_2750
	POP_GRM_SCC
	ret
LB_2750:
	RB_GRM
	jmp LB_2847
LB_2846:
	add r14,1 
LB_2847:
	cmp r14,r9
	jge LB_2848
	JZ_SPC BYTE [r13+8+r14], LB_2846
LB_2848
	call GRM_238
	cmp BYTE [r8+6],0
	jnz LB_2851
	jmp LB_2852
LB_2851:
	jmp LB_2849
LB_2852:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a35◂ [ a7◂ [ *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}]] ) ⊢ 8'(= a35◂ [ a7◂ [ *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}]] )
; .mov_ptn 2'(= a35◂ [ a7◂ [ *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}]] ) ⊢ 8'(= a35◂ [ a7◂ [ *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}]] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_2850
LB_2849:
	add rsp,0
	jmp LB_2845
LB_2850:
	mov QWORD [rsp+8*1],r14
	mov r13,QWORD [rsp+16+8*1]
	mov r14,QWORD [rsp+8*1]
	jmp LB_2853
LB_2853
;; rsp=1 , %1827~1'(= r ) %1826~0'(= r ) %1825~8'(= a35◂ [ a7◂ [ *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}]] ) 
;; ? 8'(= a35◂ [ a7◂ [ *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}]] ) ⊢ 0(<2)◂2'(= a7◂ [ *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}] )
	mov rdi,QWORD [rsp-8+8*1]
	cmp BYTE [rdi+6],0
	jnz LB_2855
	mov QWORD [GBG_VCT+8*0],rdi
	mov r8,QWORD [rdi+8]
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_LN rdi
;; rsp=1 , %1829~2'(= a7◂ [ *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}] ) %1827~1'(= r ) %1826~0'(= r ) 
; #130 2'(= a7◂ [ *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}] ) ⊢ 3(<7)◂2'(= a7◂ [ *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}] )
;; rsp=1 , %1830~3(<7)◂2'(= a7◂ [ *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}] ) %1827~1'(= r ) %1826~0'(= r ) 
; #195 3(<7)◂2'(= a7◂ [ *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}] ) ⊢ 0(<2)◂3(<7)◂2'(= a7◂ [ *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}] )
;; rsp=1 , %1831~0(<2)◂3(<7)◂2'(= a7◂ [ *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}] ) %1827~1'(= r ) %1826~0'(= r ) 
; #24 0(<2)◂3(<7)◂2'(= a7◂ [ *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}] ) ⊢ 0(<2)◂0(<2)◂3(<7)◂2'(= a7◂ [ *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}] )
;; rsp=1 , %1832~0(<2)◂0(<2)◂3(<7)◂2'(= a7◂ [ *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}] ) %1827~1'(= r ) %1826~0'(= r ) 
; ∎ 0(<2)◂0(<2)◂3(<7)◂2'(= a7◂ [ *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}] )
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂0(<2)◂3(<7)◂2'(= a7◂ [ *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}] ) ⊢ 2'(= a3◂ [ a35◂ [ a17◂ [ a9◂ [ ]{| l |}]]] )
	mov r13,r8
; .mov_ptn 0(<2)◂0(<2)◂3(<7)◂0'(= a7◂ [ *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}] ) ⊢ 2'(= a3◂ [ a35◂ [ a17◂ [ a9◂ [ ]{| l |}]]] )
	mov rax,r13
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],3
	mov QWORD [rax+8],rdi
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,8
	jmp LB_2854
LB_2855:
;; ?. 8'(= a35◂ [ a7◂ [ *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}]] ) ⊢ 1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] )
	mov QWORD [GBG_VCT+8*0],rdi
	mov r8,QWORD [rdi+8]
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_LN rdi
;; rsp=1 , %1828~2'(= a2◂ [ *{ rr{| l |}}] ) %1827~1'(= r ) %1826~0'(= r ) 
; #194 2'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] )
;; rsp=1 , %1833~1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] ) %1827~1'(= r ) %1826~0'(= r ) 
; #24 1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 0(<2)◂1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] )
;; rsp=1 , %1834~0(<2)◂1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] ) %1827~1'(= r ) %1826~0'(= r ) 
; ∎ 0(<2)◂1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] )
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 2'(= a3◂ [ a35◂ [ a17◂ [ a9◂ [ ]{| l |}]]] )
	mov r13,r8
; .mov_ptn 0(<2)◂1(<2)◂0'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 2'(= a3◂ [ a35◂ [ a17◂ [ a9◂ [ ]{| l |}]]] )
	mov rax,r13
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],1
	mov QWORD [rax+8],rdi
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,8
	jmp LB_2854
LB_2854:
	cmp BYTE [r8+6],0
	jnz LB_2845
	POP_GRM_SCC
	ret
LB_2845:
	RB_GRM
	jmp LB_2858
LB_2857:
	add r14,1 
LB_2858:
	cmp r14,r9
	jge LB_2859
	JZ_LINE_SPC BYTE [r13+8+r14], LB_2857
LB_2859
	call GRM_219
	cmp BYTE [r8+6],0
	jnz LB_2862
	jmp LB_2863
LB_2862:
	jmp LB_2860
LB_2863:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a35◂ [ *{ }] ) ⊢ 8'(= a35◂ [ *{ }] )
; .mov_ptn 2'(= a35◂ [ *{ }] ) ⊢ 8'(= a35◂ [ *{ }] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_2861
LB_2860:
	add rsp,0
	jmp LB_2856
LB_2861:
	jmp LB_2865
LB_2864:
	add r14,1 
LB_2865:
	cmp r14,r9
	jge LB_2866
	JZ_LINE_SPC BYTE [r13+8+r14], LB_2864
LB_2866
	lea rax,[r14+1]
	cmp rax,r9
	jg LB_2869
	jmp LB_2870
LB_2869:
	mov r8,unt_1
	jmp LB_2867
LB_2870:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],36
	jnz LB_2871
	jmp LB_2872
LB_2871:
	mov r8,unt_1
	jmp LB_2867
LB_2872:
	add r14,1
	jmp LB_2868
LB_2867:
	add rsp,8
	jmp LB_2856
LB_2868:
	PUSH_GRM
	jmp LB_2876
LB_2875:
	add r14,1 
LB_2876:
	cmp r14,r9
	jge LB_2877
	JZ_LINE_SPC BYTE [r13+8+r14], LB_2875
LB_2877
	call GRM_203
	cmp BYTE [r8+6],0
	jnz LB_2880
	jmp LB_2881
LB_2880:
	jmp LB_2878
LB_2881:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) ⊢ 8'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] )
; .mov_ptn 2'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) ⊢ 8'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_2879
LB_2878:
	add rsp,0
	jmp LB_2874
LB_2879:
	jmp LB_2883
LB_2882:
	add r14,1 
LB_2883:
	cmp r14,r9
	jge LB_2884
	JZ_LINE_SPC BYTE [r13+8+r14], LB_2882
LB_2884
	lea rax,[r14+3]
	cmp rax,r9
	jg LB_2887
	jmp LB_2888
LB_2887:
	mov r8,unt_1
	jmp LB_2885
LB_2888:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],226
	jnz LB_2889
	cmp BYTE [rdi+1],138
	jnz LB_2889
	cmp BYTE [rdi+2],162
	jnz LB_2889
	jmp LB_2890
LB_2889:
	mov r8,unt_1
	jmp LB_2885
LB_2890:
	add r14,3
	jmp LB_2886
LB_2885:
	add rsp,8
	jmp LB_2874
LB_2886:
	PUSH_GRM
	jmp LB_2894
LB_2893:
	add r14,1 
LB_2894:
	cmp r14,r9
	jge LB_2895
	JZ_LINE_SPC BYTE [r13+8+r14], LB_2893
LB_2895
	lea rax,[r14+1]
	cmp rax,r9
	jg LB_2898
	jmp LB_2899
LB_2898:
	mov r8,unt_1
	jmp LB_2896
LB_2899:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],10
	jnz LB_2900
	jmp LB_2901
LB_2900:
	mov r8,unt_1
	jmp LB_2896
LB_2901:
	add r14,1
	jmp LB_2897
LB_2896:
	add rsp,0
	jmp LB_2892
LB_2897:
	jmp LB_2903
LB_2902:
	add r14,1 
LB_2903:
	cmp r14,r9
	jge LB_2904
	JZ_LINE_SPC BYTE [r13+8+r14], LB_2902
LB_2904
	call GRM_239
	cmp BYTE [r8+6],0
	jnz LB_2907
	jmp LB_2908
LB_2907:
	jmp LB_2905
LB_2908:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a35◂ [ a7◂ [ *{ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}]] ) ⊢ 8'(= a35◂ [ a7◂ [ *{ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}]] )
; .mov_ptn 2'(= a35◂ [ a7◂ [ *{ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}]] ) ⊢ 8'(= a35◂ [ a7◂ [ *{ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}]] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_2906
LB_2905:
	add rsp,0
	jmp LB_2892
LB_2906:
	mov QWORD [rsp+8*1],r14
	mov r13,QWORD [rsp+16+8*1]
	mov r14,QWORD [rsp+8*1]
	jmp LB_2909
LB_2909
;; rsp=1 , %1843~1'(= r ) %1842~0'(= r ) %1841~8'(= a35◂ [ a7◂ [ *{ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}]] ) 
;; ? 8'(= a35◂ [ a7◂ [ *{ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}]] ) ⊢ 0(<2)◂2'(= a7◂ [ *{ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}] )
	mov rdi,QWORD [rsp-8+8*1]
	cmp BYTE [rdi+6],0
	jnz LB_2911
	mov QWORD [GBG_VCT+8*0],rdi
	mov r8,QWORD [rdi+8]
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_LN rdi
;; rsp=1 , %1845~2'(= a7◂ [ *{ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}] ) %1843~1'(= r ) %1842~0'(= r ) 
; #126 2'(= a7◂ [ *{ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}] ) ⊢ 0(<2)◂2'(= a7◂ [ *{ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}] )
;; rsp=1 , %1846~0(<2)◂2'(= a7◂ [ *{ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}] ) %1843~1'(= r ) %1842~0'(= r ) 
; #195 0(<2)◂2'(= a7◂ [ *{ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}] ) ⊢ 0(<2)◂0(<2)◂2'(= a7◂ [ *{ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}] )
;; rsp=1 , %1847~0(<2)◂0(<2)◂2'(= a7◂ [ *{ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}] ) %1843~1'(= r ) %1842~0'(= r ) 
; #24 0(<2)◂0(<2)◂2'(= a7◂ [ *{ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}] ) ⊢ 0(<2)◂0(<2)◂0(<2)◂2'(= a7◂ [ *{ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}] )
;; rsp=1 , %1848~0(<2)◂0(<2)◂0(<2)◂2'(= a7◂ [ *{ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}] ) %1843~1'(= r ) %1842~0'(= r ) 
; ∎ 0(<2)◂0(<2)◂0(<2)◂2'(= a7◂ [ *{ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}] )
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂0(<2)◂0(<2)◂2'(= a7◂ [ *{ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}] ) ⊢ 2'(= a3◂ [ a35◂ [ a18◂ [ a9◂ [ ]{| l |}]]] )
	mov r13,r8
; .mov_ptn 0(<2)◂0(<2)◂0(<2)◂0'(= a7◂ [ *{ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}] ) ⊢ 2'(= a3◂ [ a35◂ [ a18◂ [ a9◂ [ ]{| l |}]]] )
	mov rax,r13
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,8
	jmp LB_2910
LB_2911:
;; ?. 8'(= a35◂ [ a7◂ [ *{ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}]] ) ⊢ 1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] )
	mov QWORD [GBG_VCT+8*0],rdi
	mov r8,QWORD [rdi+8]
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_LN rdi
;; rsp=1 , %1844~2'(= a2◂ [ *{ rr{| l |}}] ) %1843~1'(= r ) %1842~0'(= r ) 
; #194 2'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] )
;; rsp=1 , %1849~1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] ) %1843~1'(= r ) %1842~0'(= r ) 
; #24 1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 0(<2)◂1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] )
;; rsp=1 , %1850~0(<2)◂1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] ) %1843~1'(= r ) %1842~0'(= r ) 
; ∎ 0(<2)◂1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] )
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 2'(= a3◂ [ a35◂ [ a18◂ [ a9◂ [ ]{| l |}]]] )
	mov r13,r8
; .mov_ptn 0(<2)◂1(<2)◂0'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 2'(= a3◂ [ a35◂ [ a18◂ [ a9◂ [ ]{| l |}]]] )
	mov rax,r13
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],1
	mov QWORD [rax+8],rdi
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,8
	jmp LB_2910
LB_2910:
	cmp BYTE [r8+6],0
	jnz LB_2892
	POP_GRM_SCC
	jmp LB_2891
LB_2892:
	RB_GRM
	jmp LB_2914
LB_2913:
	add r14,1 
LB_2914:
	cmp r14,r9
	jge LB_2915
	JZ_LINE_SPC BYTE [r13+8+r14], LB_2913
LB_2915
	call GRM_207
	cmp BYTE [r8+6],0
	jnz LB_2918
	jmp LB_2919
LB_2918:
	jmp LB_2916
LB_2919:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a8◂ [ a13◂ [ {| l |}]] ) ⊢ 8'(= a8◂ [ a13◂ [ {| l |}]] )
; .mov_ptn 2'(= a8◂ [ a13◂ [ {| l |}]] ) ⊢ 8'(= a8◂ [ a13◂ [ {| l |}]] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_2917
LB_2916:
	add rsp,0
	jmp LB_2912
LB_2917:
	jmp LB_2921
LB_2920:
	add r14,1 
LB_2921:
	cmp r14,r9
	jge LB_2922
	JZ_LINE_SPC BYTE [r13+8+r14], LB_2920
LB_2922
	call GRM_209
	cmp BYTE [r8+6],0
	jnz LB_2925
	jmp LB_2926
LB_2925:
	jmp LB_2923
LB_2926:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a2◂ [ a8◂ [ a13◂ [ {| l |}]]] ) ⊢ 9'(= a2◂ [ a8◂ [ a13◂ [ {| l |}]]] )
; .mov_ptn 2'(= a2◂ [ a8◂ [ a13◂ [ {| l |}]]] ) ⊢ 9'(= a2◂ [ a8◂ [ a13◂ [ {| l |}]]] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_2924
LB_2923:
	add rsp,8
	jmp LB_2912
LB_2924:
	jmp LB_2928
LB_2927:
	add r14,1 
LB_2928:
	cmp r14,r9
	jge LB_2929
	JZ_LINE_SPC BYTE [r13+8+r14], LB_2927
LB_2929
	lea rax,[r14+1]
	cmp rax,r9
	jg LB_2932
	jmp LB_2933
LB_2932:
	mov r8,unt_1
	jmp LB_2930
LB_2933:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],10
	jnz LB_2934
	jmp LB_2935
LB_2934:
	mov r8,unt_1
	jmp LB_2930
LB_2935:
	add r14,1
	jmp LB_2931
LB_2930:
	add rsp,16
	jmp LB_2912
LB_2931:
	jmp LB_2937
LB_2936:
	add r14,1 
LB_2937:
	cmp r14,r9
	jge LB_2938
	JZ_LINE_SPC BYTE [r13+8+r14], LB_2936
LB_2938
	call GRM_236
	cmp BYTE [r8+6],0
	jnz LB_2941
	jmp LB_2942
LB_2941:
	jmp LB_2939
LB_2942:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a35◂ [ a17◂ [ a9◂ [ ]{| l |}]] ) ⊢ 10'(= a35◂ [ a17◂ [ a9◂ [ ]{| l |}]] )
; .mov_ptn 2'(= a35◂ [ a17◂ [ a9◂ [ ]{| l |}]] ) ⊢ 10'(= a35◂ [ a17◂ [ a9◂ [ ]{| l |}]] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_2940
LB_2939:
	add rsp,16
	jmp LB_2912
LB_2940:
	mov QWORD [rsp+8*3],r14
	mov r13,QWORD [rsp+16+8*3]
	mov r14,QWORD [rsp+8*3]
	jmp LB_2943
LB_2943
;; rsp=3 , %1855~1'(= r ) %1854~0'(= r ) %1853~10'(= a35◂ [ a17◂ [ a9◂ [ ]{| l |}]] ) %1852~9'(= a2◂ [ a8◂ [ a13◂ [ {| l |}]]] ) %1851~8'(= a8◂ [ a13◂ [ {| l |}]] ) 
;; ? 10'(= a35◂ [ a17◂ [ a9◂ [ ]{| l |}]] ) ⊢ 0(<2)◂2'(= a17◂ [ a9◂ [ ]{| l |}] )
	mov rdi,QWORD [rsp-8+8*1]
	cmp BYTE [rdi+6],0
	jnz LB_2945
	mov QWORD [GBG_VCT+8*0],rdi
	mov r8,QWORD [rdi+8]
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_LN rdi
;; rsp=3 , %1857~2'(= a17◂ [ a9◂ [ ]{| l |}] ) %1855~1'(= r ) %1854~0'(= r ) %1852~9'(= a2◂ [ a8◂ [ a13◂ [ {| l |}]]] ) %1851~8'(= a8◂ [ a13◂ [ {| l |}]] ) 
; #23 { 8'(= a8◂ [ a13◂ [ {| l |}]] ) 9'(= a2◂ [ a8◂ [ a13◂ [ {| l |}]]] ) } ⊢ 0(<2)◂{ 8'(= a8◂ [ a13◂ [ {| l |}]] ) 9'(= a2◂ [ a8◂ [ a13◂ [ {| l |}]]] ) }
;; rsp=3 , %1858~0(<2)◂{ 8'(= a8◂ [ a13◂ [ {| l |}]] ) 9'(= a2◂ [ a8◂ [ a13◂ [ {| l |}]]] ) } %1857~2'(= a17◂ [ a9◂ [ ]{| l |}] ) %1855~1'(= r ) %1854~0'(= r ) 
; #125 { 0(<2)◂{ 8'(= a8◂ [ a13◂ [ {| l |}]] ) 9'(= a2◂ [ a8◂ [ a13◂ [ {| l |}]]] ) } 2'(= a17◂ [ a9◂ [ ]{| l |}] ) } ⊢ 1(<2)◂{ 0(<2)◂{ 8'(= a8◂ [ a13◂ [ {| l |}]] ) 9'(= a2◂ [ a8◂ [ a13◂ [ {| l |}]]] ) } 2'(= a17◂ [ a9◂ [ ]{| l |}] ) }
;; rsp=3 , %1859~1(<2)◂{ 0(<2)◂{ 8'(= a8◂ [ a13◂ [ {| l |}]] ) 9'(= a2◂ [ a8◂ [ a13◂ [ {| l |}]]] ) } 2'(= a17◂ [ a9◂ [ ]{| l |}] ) } %1855~1'(= r ) %1854~0'(= r ) 
; #195 1(<2)◂{ 0(<2)◂{ 8'(= a8◂ [ a13◂ [ {| l |}]] ) 9'(= a2◂ [ a8◂ [ a13◂ [ {| l |}]]] ) } 2'(= a17◂ [ a9◂ [ ]{| l |}] ) } ⊢ 0(<2)◂1(<2)◂{ 0(<2)◂{ 8'(= a8◂ [ a13◂ [ {| l |}]] ) 9'(= a2◂ [ a8◂ [ a13◂ [ {| l |}]]] ) } 2'(= a17◂ [ a9◂ [ ]{| l |}] ) }
;; rsp=3 , %1860~0(<2)◂1(<2)◂{ 0(<2)◂{ 8'(= a8◂ [ a13◂ [ {| l |}]] ) 9'(= a2◂ [ a8◂ [ a13◂ [ {| l |}]]] ) } 2'(= a17◂ [ a9◂ [ ]{| l |}] ) } %1855~1'(= r ) %1854~0'(= r ) 
; #24 0(<2)◂1(<2)◂{ 0(<2)◂{ 8'(= a8◂ [ a13◂ [ {| l |}]] ) 9'(= a2◂ [ a8◂ [ a13◂ [ {| l |}]]] ) } 2'(= a17◂ [ a9◂ [ ]{| l |}] ) } ⊢ 0(<2)◂0(<2)◂1(<2)◂{ 0(<2)◂{ 8'(= a8◂ [ a13◂ [ {| l |}]] ) 9'(= a2◂ [ a8◂ [ a13◂ [ {| l |}]]] ) } 2'(= a17◂ [ a9◂ [ ]{| l |}] ) }
;; rsp=3 , %1861~0(<2)◂0(<2)◂1(<2)◂{ 0(<2)◂{ 8'(= a8◂ [ a13◂ [ {| l |}]] ) 9'(= a2◂ [ a8◂ [ a13◂ [ {| l |}]]] ) } 2'(= a17◂ [ a9◂ [ ]{| l |}] ) } %1855~1'(= r ) %1854~0'(= r ) 
; ∎ 0(<2)◂0(<2)◂1(<2)◂{ 0(<2)◂{ 8'(= a8◂ [ a13◂ [ {| l |}]] ) 9'(= a2◂ [ a8◂ [ a13◂ [ {| l |}]]] ) } 2'(= a17◂ [ a9◂ [ ]{| l |}] ) }
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂0(<2)◂1(<2)◂{ 0(<2)◂{ 8'(= a8◂ [ a13◂ [ {| l |}]] ) 9'(= a2◂ [ a8◂ [ a13◂ [ {| l |}]]] ) } 2'(= a17◂ [ a9◂ [ ]{| l |}] ) } ⊢ 2'(= a3◂ [ a35◂ [ a18◂ [ a9◂ [ ]{| l |}]]] )
	mov r13,r8
; .mov_ptn 0(<2)◂0(<2)◂1(<2)◂{ 0(<2)◂{ 8'(= a8◂ [ a13◂ [ {| l |}]] ) 9'(= a2◂ [ a8◂ [ a13◂ [ {| l |}]]] ) } 0'(= a17◂ [ a9◂ [ ]{| l |}] ) } ⊢ 2'(= a3◂ [ a35◂ [ a18◂ [ a9◂ [ ]{| l |}]]] )
	ALC_RCD 2, rax
	mov r14,rax
	ALC_RCD 2, rax
	mov r9,rax
	mov rax,QWORD [rsp-8+8*3]
	mov QWORD [r9+8+8*0],rax
	mov rax,QWORD [rsp-8+8*2]
	mov QWORD [r9+8+8*1],rax
	mov rax,r9
	mov BYTE [rax+6],0
	mov QWORD [r14+8+8*0],rax
	mov rax,r13
	mov QWORD [r14+8+8*1],rax
	mov rax,r14
	mov BYTE [rax+6],1
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,24
	jmp LB_2944
LB_2945:
;; ?. 10'(= a35◂ [ a17◂ [ a9◂ [ ]{| l |}]] ) ⊢ 1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] )
	mov QWORD [GBG_VCT+8*0],rdi
	mov r8,QWORD [rdi+8]
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_LN rdi
;; rsp=3 , %1856~2'(= a2◂ [ *{ rr{| l |}}] ) %1855~1'(= r ) %1854~0'(= r ) %1852~9'(= a2◂ [ a8◂ [ a13◂ [ {| l |}]]] ) %1851~8'(= a8◂ [ a13◂ [ {| l |}]] ) 
; #194 2'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] )
;; rsp=3 , %1862~1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] ) %1855~1'(= r ) %1854~0'(= r ) %1852~9'(= a2◂ [ a8◂ [ a13◂ [ {| l |}]]] ) %1851~8'(= a8◂ [ a13◂ [ {| l |}]] ) 
; #24 1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 0(<2)◂1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] )
;; rsp=3 , %1863~0(<2)◂1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] ) %1855~1'(= r ) %1854~0'(= r ) %1852~9'(= a2◂ [ a8◂ [ a13◂ [ {| l |}]]] ) %1851~8'(= a8◂ [ a13◂ [ {| l |}]] ) 
; ∎ 0(<2)◂1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] )
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 9'(= a2◂ [ a8◂ [ a13◂ [ {| l |}]]] )
	mov rdi,QWORD [rsp-8+8*2]
	C_PUSH_REGS
	mov r8,rdi
	call LB_692
	C_POP_REGS
; .dlt.ptn 8'(= a8◂ [ a13◂ [ {| l |}]] )
	mov rdi,QWORD [rsp-8+8*3]
	C_PUSH_REGS
	mov r8,rdi
	call LB_668
	C_POP_REGS
; .mov_ptn2 0(<2)◂1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 2'(= a3◂ [ a35◂ [ a18◂ [ a9◂ [ ]{| l |}]]] )
	mov r13,r8
; .mov_ptn 0(<2)◂1(<2)◂0'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 2'(= a3◂ [ a35◂ [ a18◂ [ a9◂ [ ]{| l |}]]] )
	mov rax,r13
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],1
	mov QWORD [rax+8],rdi
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,24
	jmp LB_2944
LB_2944:
	cmp BYTE [r8+6],0
	jnz LB_2912
	POP_GRM_SCC
	jmp LB_2891
LB_2912:
	POP_GRM_FAIL 
	jmp LB_2891
LB_2891:
	cmp BYTE [r8+6],0
	jnz LB_2946
	jmp LB_2947
LB_2946:
	add rsp,8
	POP_GRM_FAIL
	jmp LB_2873
LB_2947:
	mov QWORD [rsp+8*1],r14
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi 
; .mov_ptn2 2'(= a35◂ [ a18◂ [ a9◂ [ ]{| l |}]] ) ⊢ 3'(= a35◂ [ a18◂ [ a9◂ [ ]{| l |}]] )
	mov r10,r9
; .mov_ptn 2'(= a35◂ [ a18◂ [ a9◂ [ ]{| l |}]] ) ⊢ 3'(= a35◂ [ a18◂ [ a9◂ [ ]{| l |}]] )
	mov rax,r8
	mov r9,rax
	mov r13,QWORD [rsp+16+8*1]
	mov r14,QWORD [rsp+8*1]
	jmp LB_2948
LB_2948
;; rsp=1 , %1864~3'(= a35◂ [ a18◂ [ a9◂ [ ]{| l |}]] ) %1840~1'(= r ) %1839~0'(= r ) %1838~8'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) 
; #195 { 8'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) 3'(= a35◂ [ a18◂ [ a9◂ [ ]{| l |}]] ) } ⊢ 0(<2)◂{ 8'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) 3'(= a35◂ [ a18◂ [ a9◂ [ ]{| l |}]] ) }
;; rsp=1 , %1865~0(<2)◂{ 8'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) 3'(= a35◂ [ a18◂ [ a9◂ [ ]{| l |}]] ) } %1840~1'(= r ) %1839~0'(= r ) 
; #24 0(<2)◂{ 8'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) 3'(= a35◂ [ a18◂ [ a9◂ [ ]{| l |}]] ) } ⊢ 0(<2)◂0(<2)◂{ 8'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) 3'(= a35◂ [ a18◂ [ a9◂ [ ]{| l |}]] ) }
;; rsp=1 , %1866~0(<2)◂0(<2)◂{ 8'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) 3'(= a35◂ [ a18◂ [ a9◂ [ ]{| l |}]] ) } %1840~1'(= r ) %1839~0'(= r ) 
; ∎ 0(<2)◂0(<2)◂{ 8'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) 3'(= a35◂ [ a18◂ [ a9◂ [ ]{| l |}]] ) }
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂0(<2)◂{ 8'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) 3'(= a35◂ [ a18◂ [ a9◂ [ ]{| l |}]] ) } ⊢ 2'(= a3◂ [ a35◂ [ *{ a8◂ [ a12◂ [ a9◂ [ ]{| l |}]]a35◂ [ a18◂ [ a9◂ [ ]{| l |}]]}]] )
; .mov_ptn 0(<2)◂0(<2)◂{ 8'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) 3'(= a35◂ [ a18◂ [ a9◂ [ ]{| l |}]] ) } ⊢ 2'(= a3◂ [ a35◂ [ *{ a8◂ [ a12◂ [ a9◂ [ ]{| l |}]]a35◂ [ a18◂ [ a9◂ [ ]{| l |}]]}]] )
	ALC_RCD 2, rax
	mov r13,rax
	mov rax,QWORD [rsp-8+8*1]
	mov QWORD [r13+8+8*0],rax
	mov rax,r9
	mov QWORD [r13+8+8*1],rax
	mov rax,r13
	mov BYTE [rax+6],0
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,8
	jmp LB_2949
LB_2949:
	cmp BYTE [r8+6],0
	jnz LB_2874
	POP_GRM_SCC
	jmp LB_2873
LB_2874:
	RB_GRM
	jmp LB_2952
LB_2951:
	add r14,1 
LB_2952:
	cmp r14,r9
	jge LB_2953
	JZ_LINE_SPC BYTE [r13+8+r14], LB_2951
LB_2953
	call GRM_222
	cmp BYTE [r8+6],0
	jnz LB_2956
	jmp LB_2957
LB_2956:
	jmp LB_2954
LB_2957:
	sub rsp,16
; .mov_ptn2 2'(= *{ rr} ) ⊢ { 8'(= r ) 9'(= r ) }
; .mov_ptn 2'(= *{ rr} ) ⊢ { 8'(= r ) 9'(= r ) }
	mov r10, QWORD [r8+8]
	mov QWORD [rsp-8+8*2],r10
	mov r11, QWORD [r8+16]
	mov QWORD [rsp-8+8*1],r11
	jmp LB_2955
LB_2954:
	add rsp,0
	jmp LB_2950
LB_2955:
	jmp LB_2959
LB_2958:
	add r14,1 
LB_2959:
	cmp r14,r9
	jge LB_2960
	JZ_LINE_SPC BYTE [r13+8+r14], LB_2958
LB_2960
	call GRM_239
	cmp BYTE [r8+6],0
	jnz LB_2963
	jmp LB_2964
LB_2963:
	jmp LB_2961
LB_2964:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a35◂ [ a7◂ [ *{ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}]] ) ⊢ 10'(= a35◂ [ a7◂ [ *{ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}]] )
; .mov_ptn 2'(= a35◂ [ a7◂ [ *{ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}]] ) ⊢ 10'(= a35◂ [ a7◂ [ *{ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}]] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_2962
LB_2961:
	add rsp,16
	jmp LB_2950
LB_2962:
	mov QWORD [rsp+8*3],r14
	mov r13,QWORD [rsp+16+8*3]
	mov r14,QWORD [rsp+8*3]
	jmp LB_2965
LB_2965
;; rsp=3 , %1871~1'(= r ) %1870~0'(= r ) %1869~10'(= a35◂ [ a7◂ [ *{ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}]] ) %1868~9'(= r ) %1867~8'(= r ) 
;; ? 10'(= a35◂ [ a7◂ [ *{ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}]] ) ⊢ 0(<2)◂2'(= a7◂ [ *{ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}] )
	mov rdi,QWORD [rsp-8+8*1]
	cmp BYTE [rdi+6],0
	jnz LB_2967
	mov QWORD [GBG_VCT+8*0],rdi
	mov r8,QWORD [rdi+8]
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_LN rdi
;; rsp=3 , %1873~2'(= a7◂ [ *{ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}] ) %1871~1'(= r ) %1870~0'(= r ) %1868~9'(= r ) %1867~8'(= r ) 
; #22 { } ⊢ 1(<2)◂{ }
;; rsp=3 , %1874~1(<2)◂{ } %1873~2'(= a7◂ [ *{ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}] ) %1871~1'(= r ) %1870~0'(= r ) %1868~9'(= r ) %1867~8'(= r ) 
; $ %[ "glb_etr id_line line_res 0" ] ⊢ %[ "glb_etr id_line line_res 0" ]
;; rsp=3 , %1875~%[ "glb_etr id_line line_res 0" ] %1874~1(<2)◂{ } %1873~2'(= a7◂ [ *{ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}] ) %1871~1'(= r ) %1870~0'(= r ) %1868~9'(= r ) %1867~8'(= r ) 
; #23 { { 8'(= r ) 9'(= r ) %[ "glb_etr id_line line_res 0" ] } 1(<2)◂{ } } ⊢ 0(<2)◂{ { 8'(= r ) 9'(= r ) %[ "glb_etr id_line line_res 0" ] } 1(<2)◂{ } }
;; rsp=3 , %1876~0(<2)◂{ { 8'(= r ) 9'(= r ) %[ "glb_etr id_line line_res 0" ] } 1(<2)◂{ } } %1873~2'(= a7◂ [ *{ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}] ) %1871~1'(= r ) %1870~0'(= r ) 
; #194 0(<2)◂{ { 8'(= r ) 9'(= r ) %[ "glb_etr id_line line_res 0" ] } 1(<2)◂{ } } ⊢ 1(<2)◂0(<2)◂{ { 8'(= r ) 9'(= r ) %[ "glb_etr id_line line_res 0" ] } 1(<2)◂{ } }
;; rsp=3 , %1877~1(<2)◂0(<2)◂{ { 8'(= r ) 9'(= r ) %[ "glb_etr id_line line_res 0" ] } 1(<2)◂{ } } %1873~2'(= a7◂ [ *{ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}] ) %1871~1'(= r ) %1870~0'(= r ) 
; #24 1(<2)◂0(<2)◂{ { 8'(= r ) 9'(= r ) %[ "glb_etr id_line line_res 0" ] } 1(<2)◂{ } } ⊢ 0(<2)◂1(<2)◂0(<2)◂{ { 8'(= r ) 9'(= r ) %[ "glb_etr id_line line_res 0" ] } 1(<2)◂{ } }
;; rsp=3 , %1878~0(<2)◂1(<2)◂0(<2)◂{ { 8'(= r ) 9'(= r ) %[ "glb_etr id_line line_res 0" ] } 1(<2)◂{ } } %1873~2'(= a7◂ [ *{ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}] ) %1871~1'(= r ) %1870~0'(= r ) 
; ∎ 0(<2)◂1(<2)◂0(<2)◂{ { 8'(= r ) 9'(= r ) %[ "glb_etr id_line line_res 0" ] } 1(<2)◂{ } }
; .dlt.ptn 2'(= a7◂ [ *{ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}] )
	mov rdi,r8
	C_PUSH_REGS
	mov r8,rdi
	call LB_691
	C_POP_REGS
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂1(<2)◂0(<2)◂{ { 8'(= r ) 9'(= r ) %[ "glb_etr id_line line_res 0" ] } 1(<2)◂{ } } ⊢ 2'(= a3◂ [ a35◂ [ *{ a8◂ [ a12◂ [ a9◂ [ ]{| l |}]]a35◂ [ a18◂ [ a9◂ [ ]{| l |}]]}]] )
; .mov_ptn 0(<2)◂1(<2)◂0(<2)◂{ { 8'(= r ) 9'(= r ) %[ "glb_etr id_line line_res 0" ] } 1(<2)◂{ } } ⊢ 2'(= a3◂ [ a35◂ [ *{ a8◂ [ a12◂ [ a9◂ [ ]{| l |}]]a35◂ [ a18◂ [ a9◂ [ ]{| l |}]]}]] )
	ALC_RCD 2, rax
	mov r13,rax
	ALC_RCD 3, rax
	mov r14,rax
	mov rax,QWORD [rsp-8+8*3]
	mov QWORD [r14+8+8*0],rax
	mov rax,QWORD [rsp-8+8*2]
	mov QWORD [r14+8+8*1],rax
	mov rsi,1  
	mov rdi,40
	xor rax,rax 
	C_CALL_SF calloc
	mov QWORD [rax],26
	mov BYTE [rax+8+0],103
	mov BYTE [rax+8+1],108
	mov BYTE [rax+8+2],98
	mov BYTE [rax+8+3],95
	mov BYTE [rax+8+4],101
	mov BYTE [rax+8+5],116
	mov BYTE [rax+8+6],114
	mov BYTE [rax+8+7],32
	mov BYTE [rax+8+8],105
	mov BYTE [rax+8+9],100
	mov BYTE [rax+8+10],95
	mov BYTE [rax+8+11],108
	mov BYTE [rax+8+12],105
	mov BYTE [rax+8+13],110
	mov BYTE [rax+8+14],101
	mov BYTE [rax+8+15],32
	mov BYTE [rax+8+16],108
	mov BYTE [rax+8+17],105
	mov BYTE [rax+8+18],110
	mov BYTE [rax+8+19],101
	mov BYTE [rax+8+20],95
	mov BYTE [rax+8+21],114
	mov BYTE [rax+8+22],101
	mov BYTE [rax+8+23],115
	mov BYTE [rax+8+24],32
	mov BYTE [rax+8+25],48
	mov QWORD [r14+8+8*2],rax
	mov rax,r14
	mov QWORD [r13+8+8*0],rax
	mov rax,unt 
	mov rax,unt_1
	mov QWORD [r13+8+8*1],rax
	mov rax,r13
	mov BYTE [rax+6],0
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],1
	mov QWORD [rax+8],rdi
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,24
	jmp LB_2966
LB_2967:
;; ?. 10'(= a35◂ [ a7◂ [ *{ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}]] ) ⊢ 1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] )
	mov QWORD [GBG_VCT+8*0],rdi
	mov r8,QWORD [rdi+8]
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_LN rdi
;; rsp=3 , %1872~2'(= a2◂ [ *{ rr{| l |}}] ) %1871~1'(= r ) %1870~0'(= r ) %1868~9'(= r ) %1867~8'(= r ) 
; $ %[ "glb_etr id_line line_res 1" ] ⊢ %[ "glb_etr id_line line_res 1" ]
;; rsp=3 , %1879~%[ "glb_etr id_line line_res 1" ] %1872~2'(= a2◂ [ *{ rr{| l |}}] ) %1871~1'(= r ) %1870~0'(= r ) %1868~9'(= r ) %1867~8'(= r ) 
; #23 { { 8'(= r ) 9'(= r ) %[ "glb_etr id_line line_res 1" ] } 2'(= a2◂ [ *{ rr{| l |}}] ) } ⊢ 0(<2)◂{ { 8'(= r ) 9'(= r ) %[ "glb_etr id_line line_res 1" ] } 2'(= a2◂ [ *{ rr{| l |}}] ) }
;; rsp=3 , %1880~0(<2)◂{ { 8'(= r ) 9'(= r ) %[ "glb_etr id_line line_res 1" ] } 2'(= a2◂ [ *{ rr{| l |}}] ) } %1871~1'(= r ) %1870~0'(= r ) 
; #194 0(<2)◂{ { 8'(= r ) 9'(= r ) %[ "glb_etr id_line line_res 1" ] } 2'(= a2◂ [ *{ rr{| l |}}] ) } ⊢ 1(<2)◂0(<2)◂{ { 8'(= r ) 9'(= r ) %[ "glb_etr id_line line_res 1" ] } 2'(= a2◂ [ *{ rr{| l |}}] ) }
;; rsp=3 , %1881~1(<2)◂0(<2)◂{ { 8'(= r ) 9'(= r ) %[ "glb_etr id_line line_res 1" ] } 2'(= a2◂ [ *{ rr{| l |}}] ) } %1871~1'(= r ) %1870~0'(= r ) 
; #24 1(<2)◂0(<2)◂{ { 8'(= r ) 9'(= r ) %[ "glb_etr id_line line_res 1" ] } 2'(= a2◂ [ *{ rr{| l |}}] ) } ⊢ 0(<2)◂1(<2)◂0(<2)◂{ { 8'(= r ) 9'(= r ) %[ "glb_etr id_line line_res 1" ] } 2'(= a2◂ [ *{ rr{| l |}}] ) }
;; rsp=3 , %1882~0(<2)◂1(<2)◂0(<2)◂{ { 8'(= r ) 9'(= r ) %[ "glb_etr id_line line_res 1" ] } 2'(= a2◂ [ *{ rr{| l |}}] ) } %1871~1'(= r ) %1870~0'(= r ) 
; ∎ 0(<2)◂1(<2)◂0(<2)◂{ { 8'(= r ) 9'(= r ) %[ "glb_etr id_line line_res 1" ] } 2'(= a2◂ [ *{ rr{| l |}}] ) }
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂1(<2)◂0(<2)◂{ { 8'(= r ) 9'(= r ) %[ "glb_etr id_line line_res 1" ] } 2'(= a2◂ [ *{ rr{| l |}}] ) } ⊢ 2'(= a3◂ [ a35◂ [ *{ a8◂ [ a12◂ [ a9◂ [ ]{| l |}]]a35◂ [ a18◂ [ a9◂ [ ]{| l |}]]}]] )
	mov r13,r8
; .mov_ptn 0(<2)◂1(<2)◂0(<2)◂{ { 8'(= r ) 9'(= r ) %[ "glb_etr id_line line_res 1" ] } 0'(= a2◂ [ *{ rr{| l |}}] ) } ⊢ 2'(= a3◂ [ a35◂ [ *{ a8◂ [ a12◂ [ a9◂ [ ]{| l |}]]a35◂ [ a18◂ [ a9◂ [ ]{| l |}]]}]] )
	ALC_RCD 2, rax
	mov r14,rax
	ALC_RCD 3, rax
	mov r9,rax
	mov rax,QWORD [rsp-8+8*3]
	mov QWORD [r9+8+8*0],rax
	mov rax,QWORD [rsp-8+8*2]
	mov QWORD [r9+8+8*1],rax
	mov rsi,1  
	mov rdi,40
	xor rax,rax 
	C_CALL_SF calloc
	mov QWORD [rax],26
	mov BYTE [rax+8+0],103
	mov BYTE [rax+8+1],108
	mov BYTE [rax+8+2],98
	mov BYTE [rax+8+3],95
	mov BYTE [rax+8+4],101
	mov BYTE [rax+8+5],116
	mov BYTE [rax+8+6],114
	mov BYTE [rax+8+7],32
	mov BYTE [rax+8+8],105
	mov BYTE [rax+8+9],100
	mov BYTE [rax+8+10],95
	mov BYTE [rax+8+11],108
	mov BYTE [rax+8+12],105
	mov BYTE [rax+8+13],110
	mov BYTE [rax+8+14],101
	mov BYTE [rax+8+15],32
	mov BYTE [rax+8+16],108
	mov BYTE [rax+8+17],105
	mov BYTE [rax+8+18],110
	mov BYTE [rax+8+19],101
	mov BYTE [rax+8+20],95
	mov BYTE [rax+8+21],114
	mov BYTE [rax+8+22],101
	mov BYTE [rax+8+23],115
	mov BYTE [rax+8+24],32
	mov BYTE [rax+8+25],49
	mov QWORD [r9+8+8*2],rax
	mov rax,r9
	mov QWORD [r14+8+8*0],rax
	mov rax,r13
	mov QWORD [r14+8+8*1],rax
	mov rax,r14
	mov BYTE [rax+6],0
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],1
	mov QWORD [rax+8],rdi
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,24
	jmp LB_2966
LB_2966:
	cmp BYTE [r8+6],0
	jnz LB_2950
	POP_GRM_SCC
	jmp LB_2873
LB_2950:
	RB_GRM
	jmp LB_2970
LB_2969:
	add r14,1 
LB_2970:
	cmp r14,r9
	jge LB_2971
	JZ_LINE_SPC BYTE [r13+8+r14], LB_2969
LB_2971
	call GRM_222
	cmp BYTE [r8+6],0
	jnz LB_2974
	jmp LB_2975
LB_2974:
	jmp LB_2972
LB_2975:
	sub rsp,16
; .mov_ptn2 2'(= *{ rr} ) ⊢ { 8'(= r ) 9'(= r ) }
; .mov_ptn 2'(= *{ rr} ) ⊢ { 8'(= r ) 9'(= r ) }
	mov r10, QWORD [r8+8]
	mov QWORD [rsp-8+8*2],r10
	mov r11, QWORD [r8+16]
	mov QWORD [rsp-8+8*1],r11
	jmp LB_2973
LB_2972:
	add rsp,0
	jmp LB_2968
LB_2973:
	jmp LB_2977
LB_2976:
	add r14,1 
LB_2977:
	cmp r14,r9
	jge LB_2978
	JZ_LINE_SPC BYTE [r13+8+r14], LB_2976
LB_2978
	call GRM_236
	cmp BYTE [r8+6],0
	jnz LB_2981
	jmp LB_2982
LB_2981:
	jmp LB_2979
LB_2982:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a35◂ [ a17◂ [ a9◂ [ ]{| l |}]] ) ⊢ 10'(= a35◂ [ a17◂ [ a9◂ [ ]{| l |}]] )
; .mov_ptn 2'(= a35◂ [ a17◂ [ a9◂ [ ]{| l |}]] ) ⊢ 10'(= a35◂ [ a17◂ [ a9◂ [ ]{| l |}]] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_2980
LB_2979:
	add rsp,16
	jmp LB_2968
LB_2980:
	mov QWORD [rsp+8*3],r14
	mov r13,QWORD [rsp+16+8*3]
	mov r14,QWORD [rsp+8*3]
	jmp LB_2983
LB_2983
;; rsp=3 , %1887~1'(= r ) %1886~0'(= r ) %1885~10'(= a35◂ [ a17◂ [ a9◂ [ ]{| l |}]] ) %1884~9'(= r ) %1883~8'(= r ) 
;; ? 10'(= a35◂ [ a17◂ [ a9◂ [ ]{| l |}]] ) ⊢ 0(<2)◂2'(= a17◂ [ a9◂ [ ]{| l |}] )
	mov rdi,QWORD [rsp-8+8*1]
	cmp BYTE [rdi+6],0
	jnz LB_2985
	mov QWORD [GBG_VCT+8*0],rdi
	mov r8,QWORD [rdi+8]
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_LN rdi
;; rsp=3 , %1889~2'(= a17◂ [ a9◂ [ ]{| l |}] ) %1887~1'(= r ) %1886~0'(= r ) %1884~9'(= r ) %1883~8'(= r ) 
; #22 { } ⊢ 1(<2)◂{ }
;; rsp=3 , %1890~1(<2)◂{ } %1889~2'(= a17◂ [ a9◂ [ ]{| l |}] ) %1887~1'(= r ) %1886~0'(= r ) %1884~9'(= r ) %1883~8'(= r ) 
; $ %[ "glb_etr id_line line_res 2" ] ⊢ %[ "glb_etr id_line line_res 2" ]
;; rsp=3 , %1891~%[ "glb_etr id_line line_res 2" ] %1890~1(<2)◂{ } %1889~2'(= a17◂ [ a9◂ [ ]{| l |}] ) %1887~1'(= r ) %1886~0'(= r ) %1884~9'(= r ) %1883~8'(= r ) 
; #23 { { 8'(= r ) 9'(= r ) %[ "glb_etr id_line line_res 2" ] } 1(<2)◂{ } } ⊢ 0(<2)◂{ { 8'(= r ) 9'(= r ) %[ "glb_etr id_line line_res 2" ] } 1(<2)◂{ } }
;; rsp=3 , %1892~0(<2)◂{ { 8'(= r ) 9'(= r ) %[ "glb_etr id_line line_res 2" ] } 1(<2)◂{ } } %1889~2'(= a17◂ [ a9◂ [ ]{| l |}] ) %1887~1'(= r ) %1886~0'(= r ) 
; #194 0(<2)◂{ { 8'(= r ) 9'(= r ) %[ "glb_etr id_line line_res 2" ] } 1(<2)◂{ } } ⊢ 1(<2)◂0(<2)◂{ { 8'(= r ) 9'(= r ) %[ "glb_etr id_line line_res 2" ] } 1(<2)◂{ } }
;; rsp=3 , %1893~1(<2)◂0(<2)◂{ { 8'(= r ) 9'(= r ) %[ "glb_etr id_line line_res 2" ] } 1(<2)◂{ } } %1889~2'(= a17◂ [ a9◂ [ ]{| l |}] ) %1887~1'(= r ) %1886~0'(= r ) 
; #24 1(<2)◂0(<2)◂{ { 8'(= r ) 9'(= r ) %[ "glb_etr id_line line_res 2" ] } 1(<2)◂{ } } ⊢ 0(<2)◂1(<2)◂0(<2)◂{ { 8'(= r ) 9'(= r ) %[ "glb_etr id_line line_res 2" ] } 1(<2)◂{ } }
;; rsp=3 , %1894~0(<2)◂1(<2)◂0(<2)◂{ { 8'(= r ) 9'(= r ) %[ "glb_etr id_line line_res 2" ] } 1(<2)◂{ } } %1889~2'(= a17◂ [ a9◂ [ ]{| l |}] ) %1887~1'(= r ) %1886~0'(= r ) 
; ∎ 0(<2)◂1(<2)◂0(<2)◂{ { 8'(= r ) 9'(= r ) %[ "glb_etr id_line line_res 2" ] } 1(<2)◂{ } }
; .dlt.ptn 2'(= a17◂ [ a9◂ [ ]{| l |}] )
	mov rdi,r8
	C_PUSH_REGS
	mov r8,rdi
	call LB_674
	C_POP_REGS
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂1(<2)◂0(<2)◂{ { 8'(= r ) 9'(= r ) %[ "glb_etr id_line line_res 2" ] } 1(<2)◂{ } } ⊢ 2'(= a3◂ [ a35◂ [ *{ a8◂ [ a12◂ [ a9◂ [ ]{| l |}]]a35◂ [ a18◂ [ a9◂ [ ]{| l |}]]}]] )
; .mov_ptn 0(<2)◂1(<2)◂0(<2)◂{ { 8'(= r ) 9'(= r ) %[ "glb_etr id_line line_res 2" ] } 1(<2)◂{ } } ⊢ 2'(= a3◂ [ a35◂ [ *{ a8◂ [ a12◂ [ a9◂ [ ]{| l |}]]a35◂ [ a18◂ [ a9◂ [ ]{| l |}]]}]] )
	ALC_RCD 2, rax
	mov r13,rax
	ALC_RCD 3, rax
	mov r14,rax
	mov rax,QWORD [rsp-8+8*3]
	mov QWORD [r14+8+8*0],rax
	mov rax,QWORD [rsp-8+8*2]
	mov QWORD [r14+8+8*1],rax
	mov rsi,1  
	mov rdi,40
	xor rax,rax 
	C_CALL_SF calloc
	mov QWORD [rax],26
	mov BYTE [rax+8+0],103
	mov BYTE [rax+8+1],108
	mov BYTE [rax+8+2],98
	mov BYTE [rax+8+3],95
	mov BYTE [rax+8+4],101
	mov BYTE [rax+8+5],116
	mov BYTE [rax+8+6],114
	mov BYTE [rax+8+7],32
	mov BYTE [rax+8+8],105
	mov BYTE [rax+8+9],100
	mov BYTE [rax+8+10],95
	mov BYTE [rax+8+11],108
	mov BYTE [rax+8+12],105
	mov BYTE [rax+8+13],110
	mov BYTE [rax+8+14],101
	mov BYTE [rax+8+15],32
	mov BYTE [rax+8+16],108
	mov BYTE [rax+8+17],105
	mov BYTE [rax+8+18],110
	mov BYTE [rax+8+19],101
	mov BYTE [rax+8+20],95
	mov BYTE [rax+8+21],114
	mov BYTE [rax+8+22],101
	mov BYTE [rax+8+23],115
	mov BYTE [rax+8+24],32
	mov BYTE [rax+8+25],50
	mov QWORD [r14+8+8*2],rax
	mov rax,r14
	mov QWORD [r13+8+8*0],rax
	mov rax,unt 
	mov rax,unt_1
	mov QWORD [r13+8+8*1],rax
	mov rax,r13
	mov BYTE [rax+6],0
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],1
	mov QWORD [rax+8],rdi
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,24
	jmp LB_2984
LB_2985:
;; ?. 10'(= a35◂ [ a17◂ [ a9◂ [ ]{| l |}]] ) ⊢ 1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] )
	mov QWORD [GBG_VCT+8*0],rdi
	mov r8,QWORD [rdi+8]
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_LN rdi
;; rsp=3 , %1888~2'(= a2◂ [ *{ rr{| l |}}] ) %1887~1'(= r ) %1886~0'(= r ) %1884~9'(= r ) %1883~8'(= r ) 
; $ %[ "glb_etr id_line line_res 3" ] ⊢ %[ "glb_etr id_line line_res 3" ]
;; rsp=3 , %1895~%[ "glb_etr id_line line_res 3" ] %1888~2'(= a2◂ [ *{ rr{| l |}}] ) %1887~1'(= r ) %1886~0'(= r ) %1884~9'(= r ) %1883~8'(= r ) 
; #23 { { 8'(= r ) 9'(= r ) %[ "glb_etr id_line line_res 3" ] } 2'(= a2◂ [ *{ rr{| l |}}] ) } ⊢ 0(<2)◂{ { 8'(= r ) 9'(= r ) %[ "glb_etr id_line line_res 3" ] } 2'(= a2◂ [ *{ rr{| l |}}] ) }
;; rsp=3 , %1896~0(<2)◂{ { 8'(= r ) 9'(= r ) %[ "glb_etr id_line line_res 3" ] } 2'(= a2◂ [ *{ rr{| l |}}] ) } %1887~1'(= r ) %1886~0'(= r ) 
; #194 0(<2)◂{ { 8'(= r ) 9'(= r ) %[ "glb_etr id_line line_res 3" ] } 2'(= a2◂ [ *{ rr{| l |}}] ) } ⊢ 1(<2)◂0(<2)◂{ { 8'(= r ) 9'(= r ) %[ "glb_etr id_line line_res 3" ] } 2'(= a2◂ [ *{ rr{| l |}}] ) }
;; rsp=3 , %1897~1(<2)◂0(<2)◂{ { 8'(= r ) 9'(= r ) %[ "glb_etr id_line line_res 3" ] } 2'(= a2◂ [ *{ rr{| l |}}] ) } %1887~1'(= r ) %1886~0'(= r ) 
; #24 1(<2)◂0(<2)◂{ { 8'(= r ) 9'(= r ) %[ "glb_etr id_line line_res 3" ] } 2'(= a2◂ [ *{ rr{| l |}}] ) } ⊢ 0(<2)◂1(<2)◂0(<2)◂{ { 8'(= r ) 9'(= r ) %[ "glb_etr id_line line_res 3" ] } 2'(= a2◂ [ *{ rr{| l |}}] ) }
;; rsp=3 , %1898~0(<2)◂1(<2)◂0(<2)◂{ { 8'(= r ) 9'(= r ) %[ "glb_etr id_line line_res 3" ] } 2'(= a2◂ [ *{ rr{| l |}}] ) } %1887~1'(= r ) %1886~0'(= r ) 
; ∎ 0(<2)◂1(<2)◂0(<2)◂{ { 8'(= r ) 9'(= r ) %[ "glb_etr id_line line_res 3" ] } 2'(= a2◂ [ *{ rr{| l |}}] ) }
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂1(<2)◂0(<2)◂{ { 8'(= r ) 9'(= r ) %[ "glb_etr id_line line_res 3" ] } 2'(= a2◂ [ *{ rr{| l |}}] ) } ⊢ 2'(= a3◂ [ a35◂ [ *{ a8◂ [ a12◂ [ a9◂ [ ]{| l |}]]a35◂ [ a18◂ [ a9◂ [ ]{| l |}]]}]] )
	mov r13,r8
; .mov_ptn 0(<2)◂1(<2)◂0(<2)◂{ { 8'(= r ) 9'(= r ) %[ "glb_etr id_line line_res 3" ] } 0'(= a2◂ [ *{ rr{| l |}}] ) } ⊢ 2'(= a3◂ [ a35◂ [ *{ a8◂ [ a12◂ [ a9◂ [ ]{| l |}]]a35◂ [ a18◂ [ a9◂ [ ]{| l |}]]}]] )
	ALC_RCD 2, rax
	mov r14,rax
	ALC_RCD 3, rax
	mov r9,rax
	mov rax,QWORD [rsp-8+8*3]
	mov QWORD [r9+8+8*0],rax
	mov rax,QWORD [rsp-8+8*2]
	mov QWORD [r9+8+8*1],rax
	mov rsi,1  
	mov rdi,40
	xor rax,rax 
	C_CALL_SF calloc
	mov QWORD [rax],26
	mov BYTE [rax+8+0],103
	mov BYTE [rax+8+1],108
	mov BYTE [rax+8+2],98
	mov BYTE [rax+8+3],95
	mov BYTE [rax+8+4],101
	mov BYTE [rax+8+5],116
	mov BYTE [rax+8+6],114
	mov BYTE [rax+8+7],32
	mov BYTE [rax+8+8],105
	mov BYTE [rax+8+9],100
	mov BYTE [rax+8+10],95
	mov BYTE [rax+8+11],108
	mov BYTE [rax+8+12],105
	mov BYTE [rax+8+13],110
	mov BYTE [rax+8+14],101
	mov BYTE [rax+8+15],32
	mov BYTE [rax+8+16],108
	mov BYTE [rax+8+17],105
	mov BYTE [rax+8+18],110
	mov BYTE [rax+8+19],101
	mov BYTE [rax+8+20],95
	mov BYTE [rax+8+21],114
	mov BYTE [rax+8+22],101
	mov BYTE [rax+8+23],115
	mov BYTE [rax+8+24],32
	mov BYTE [rax+8+25],51
	mov QWORD [r9+8+8*2],rax
	mov rax,r9
	mov QWORD [r14+8+8*0],rax
	mov rax,r13
	mov QWORD [r14+8+8*1],rax
	mov rax,r14
	mov BYTE [rax+6],0
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],1
	mov QWORD [rax+8],rdi
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,24
	jmp LB_2984
LB_2984:
	cmp BYTE [r8+6],0
	jnz LB_2968
	POP_GRM_SCC
	jmp LB_2873
LB_2968:
	POP_GRM_FAIL 
	jmp LB_2873
LB_2873:
	cmp BYTE [r8+6],0
	jnz LB_2986
	jmp LB_2987
LB_2986:
	add rsp,8
	POP_GRM_FAIL
	ret
LB_2987:
	mov QWORD [rsp+8*1],r14
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi 
; .mov_ptn2 2'(= a35◂ [ *{ a8◂ [ a12◂ [ a9◂ [ ]{| l |}]]a35◂ [ a18◂ [ a9◂ [ ]{| l |}]]}] ) ⊢ 3'(= a35◂ [ *{ a8◂ [ a12◂ [ a9◂ [ ]{| l |}]]a35◂ [ a18◂ [ a9◂ [ ]{| l |}]]}] )
	mov r10,r9
; .mov_ptn 2'(= a35◂ [ *{ a8◂ [ a12◂ [ a9◂ [ ]{| l |}]]a35◂ [ a18◂ [ a9◂ [ ]{| l |}]]}] ) ⊢ 3'(= a35◂ [ *{ a8◂ [ a12◂ [ a9◂ [ ]{| l |}]]a35◂ [ a18◂ [ a9◂ [ ]{| l |}]]}] )
	mov rax,r8
	mov r9,rax
	mov r13,QWORD [rsp+16+8*1]
	mov r14,QWORD [rsp+8*1]
	jmp LB_2988
LB_2988
;; rsp=1 , %1899~3'(= a35◂ [ *{ a8◂ [ a12◂ [ a9◂ [ ]{| l |}]]a35◂ [ a18◂ [ a9◂ [ ]{| l |}]]}] ) %1837~1'(= r ) %1836~0'(= r ) %1835~8'(= a35◂ [ *{ }] ) 
;; ? 3'(= a35◂ [ *{ a8◂ [ a12◂ [ a9◂ [ ]{| l |}]]a35◂ [ a18◂ [ a9◂ [ ]{| l |}]]}] ) ⊢ 0(<2)◂{ 2'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) 4'(= a35◂ [ a18◂ [ a9◂ [ ]{| l |}]] ) }
	mov rdi,r9
	cmp BYTE [rdi+6],0
	jnz LB_2990
	mov r8, QWORD [r9+8]
	mov r10, QWORD [r9+16]
	mov QWORD [GBG_VCT+8*0],r9
	mov rdi,QWORD [GBG_VCT+8*0]
	mov rax,[SS_RCD_2_TOP]
	mov QWORD [rdi],rax 
	mov QWORD [SS_RCD_2_TOP],rdi
;; rsp=1 , %1902~4'(= a35◂ [ a18◂ [ a9◂ [ ]{| l |}]] ) %1901~2'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) %1837~1'(= r ) %1836~0'(= r ) %1835~8'(= a35◂ [ *{ }] ) 
;; ? 4'(= a35◂ [ a18◂ [ a9◂ [ ]{| l |}]] ) ⊢ 0(<2)◂3'(= a18◂ [ a9◂ [ ]{| l |}] )
	mov rdi,r10
	cmp BYTE [rdi+6],0
	jnz LB_2991
	mov QWORD [GBG_VCT+8*0],rdi
	mov r9,QWORD [rdi+8]
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_LN rdi
;; rsp=1 , %1904~3'(= a18◂ [ a9◂ [ ]{| l |}] ) %1901~2'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) %1837~1'(= r ) %1836~0'(= r ) %1835~8'(= a35◂ [ *{ }] ) 
; #129 { 2'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) 3'(= a18◂ [ a9◂ [ ]{| l |}] ) } ⊢ 4(<7)◂{ 2'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) 3'(= a18◂ [ a9◂ [ ]{| l |}] ) }
;; rsp=1 , %1905~4(<7)◂{ 2'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) 3'(= a18◂ [ a9◂ [ ]{| l |}] ) } %1837~1'(= r ) %1836~0'(= r ) %1835~8'(= a35◂ [ *{ }] ) 
; #195 4(<7)◂{ 2'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) 3'(= a18◂ [ a9◂ [ ]{| l |}] ) } ⊢ 0(<2)◂4(<7)◂{ 2'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) 3'(= a18◂ [ a9◂ [ ]{| l |}] ) }
;; rsp=1 , %1906~0(<2)◂4(<7)◂{ 2'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) 3'(= a18◂ [ a9◂ [ ]{| l |}] ) } %1837~1'(= r ) %1836~0'(= r ) %1835~8'(= a35◂ [ *{ }] ) 
; #24 0(<2)◂4(<7)◂{ 2'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) 3'(= a18◂ [ a9◂ [ ]{| l |}] ) } ⊢ 0(<2)◂0(<2)◂4(<7)◂{ 2'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) 3'(= a18◂ [ a9◂ [ ]{| l |}] ) }
;; rsp=1 , %1907~0(<2)◂0(<2)◂4(<7)◂{ 2'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) 3'(= a18◂ [ a9◂ [ ]{| l |}] ) } %1837~1'(= r ) %1836~0'(= r ) %1835~8'(= a35◂ [ *{ }] ) 
; ∎ 0(<2)◂0(<2)◂4(<7)◂{ 2'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) 3'(= a18◂ [ a9◂ [ ]{| l |}] ) }
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 8'(= a35◂ [ *{ }] )
	mov rdi,QWORD [rsp-8+8*1]
	C_PUSH_REGS
	mov r8,rdi
	call LB_1701
	C_POP_REGS
; .mov_ptn2 0(<2)◂0(<2)◂4(<7)◂{ 2'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) 3'(= a18◂ [ a9◂ [ ]{| l |}] ) } ⊢ 2'(= a3◂ [ a35◂ [ a17◂ [ a9◂ [ ]{| l |}]]] )
	mov r13,r8
; .mov_ptn 0(<2)◂0(<2)◂4(<7)◂{ 0'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) 3'(= a18◂ [ a9◂ [ ]{| l |}] ) } ⊢ 2'(= a3◂ [ a35◂ [ a17◂ [ a9◂ [ ]{| l |}]]] )
	ALC_RCD 2, rax
	mov r14,rax
	mov rax,r13
	mov QWORD [r14+8+8*0],rax
	mov rax,r9
	mov QWORD [r14+8+8*1],rax
	mov rax,r14
	mov BYTE [rax+6],4
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,8
	jmp LB_2989
LB_2991:
;; ?. 4'(= a35◂ [ a18◂ [ a9◂ [ ]{| l |}]] ) ⊢ 1(<2)◂3'(= a2◂ [ *{ rr{| l |}}] )
	mov QWORD [GBG_VCT+8*0],rdi
	mov r9,QWORD [rdi+8]
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_LN rdi
;; rsp=1 , %1903~3'(= a2◂ [ *{ rr{| l |}}] ) %1901~2'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) %1837~1'(= r ) %1836~0'(= r ) %1835~8'(= a35◂ [ *{ }] ) 
; #194 3'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 1(<2)◂3'(= a2◂ [ *{ rr{| l |}}] )
;; rsp=1 , %1908~1(<2)◂3'(= a2◂ [ *{ rr{| l |}}] ) %1901~2'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) %1837~1'(= r ) %1836~0'(= r ) %1835~8'(= a35◂ [ *{ }] ) 
; #24 1(<2)◂3'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 0(<2)◂1(<2)◂3'(= a2◂ [ *{ rr{| l |}}] )
;; rsp=1 , %1909~0(<2)◂1(<2)◂3'(= a2◂ [ *{ rr{| l |}}] ) %1901~2'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) %1837~1'(= r ) %1836~0'(= r ) %1835~8'(= a35◂ [ *{ }] ) 
; ∎ 0(<2)◂1(<2)◂3'(= a2◂ [ *{ rr{| l |}}] )
; .dlt.ptn 2'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] )
	mov rdi,r8
	C_PUSH_REGS
	mov r8,rdi
	call LB_445
	C_POP_REGS
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 8'(= a35◂ [ *{ }] )
	mov rdi,QWORD [rsp-8+8*1]
	C_PUSH_REGS
	mov r8,rdi
	call LB_1701
	C_POP_REGS
; .mov_ptn2 0(<2)◂1(<2)◂3'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 2'(= a3◂ [ a35◂ [ a17◂ [ a9◂ [ ]{| l |}]]] )
; .mov_ptn 0(<2)◂1(<2)◂3'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 2'(= a3◂ [ a35◂ [ a17◂ [ a9◂ [ ]{| l |}]]] )
	mov rax,r9
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],1
	mov QWORD [rax+8],rdi
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,8
	jmp LB_2989
LB_2990:
;; ?. 3'(= a35◂ [ *{ a8◂ [ a12◂ [ a9◂ [ ]{| l |}]]a35◂ [ a18◂ [ a9◂ [ ]{| l |}]]}] ) ⊢ 1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] )
	mov QWORD [GBG_VCT+8*0],rdi
	mov r8,QWORD [rdi+8]
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_LN rdi
;; rsp=1 , %1900~2'(= a2◂ [ *{ rr{| l |}}] ) %1837~1'(= r ) %1836~0'(= r ) %1835~8'(= a35◂ [ *{ }] ) 
; #194 2'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] )
;; rsp=1 , %1910~1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] ) %1837~1'(= r ) %1836~0'(= r ) %1835~8'(= a35◂ [ *{ }] ) 
; #24 1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 0(<2)◂1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] )
;; rsp=1 , %1911~0(<2)◂1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] ) %1837~1'(= r ) %1836~0'(= r ) %1835~8'(= a35◂ [ *{ }] ) 
; ∎ 0(<2)◂1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] )
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 8'(= a35◂ [ *{ }] )
	mov rdi,QWORD [rsp-8+8*1]
	C_PUSH_REGS
	mov r8,rdi
	call LB_1701
	C_POP_REGS
; .mov_ptn2 0(<2)◂1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 2'(= a3◂ [ a35◂ [ a17◂ [ a9◂ [ ]{| l |}]]] )
	mov r13,r8
; .mov_ptn 0(<2)◂1(<2)◂0'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 2'(= a3◂ [ a35◂ [ a17◂ [ a9◂ [ ]{| l |}]]] )
	mov rax,r13
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],1
	mov QWORD [rax+8],rdi
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,8
	jmp LB_2989
LB_2989:
	cmp BYTE [r8+6],0
	jnz LB_2856
	POP_GRM_SCC
	ret
LB_2856:
	RB_GRM
	jmp LB_2994
LB_2993:
	add r14,1 
LB_2994:
	cmp r14,r9
	jge LB_2995
	JZ_SPC BYTE [r13+8+r14], LB_2993
LB_2995
	call GRM_227
	cmp BYTE [r8+6],0
	jnz LB_2998
	jmp LB_2999
LB_2998:
	jmp LB_2996
LB_2999:
; .mov_ptn2 2'(= *{ } ) ⊢ { }
; .mov_ptn 2'(= *{ } ) ⊢ { }
	jmp LB_2997
LB_2996:
	add rsp,0
	jmp LB_2992
LB_2997:
	PUSH_GRM
	jmp LB_3003
LB_3002:
	add r14,1 
LB_3003:
	cmp r14,r9
	jge LB_3004
	JZ_SPC BYTE [r13+8+r14], LB_3002
LB_3004
	call GRM_236
	cmp BYTE [r8+6],0
	jnz LB_3007
	jmp LB_3008
LB_3007:
	jmp LB_3005
LB_3008:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a35◂ [ a17◂ [ a9◂ [ ]{| l |}]] ) ⊢ 8'(= a35◂ [ a17◂ [ a9◂ [ ]{| l |}]] )
; .mov_ptn 2'(= a35◂ [ a17◂ [ a9◂ [ ]{| l |}]] ) ⊢ 8'(= a35◂ [ a17◂ [ a9◂ [ ]{| l |}]] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_3006
LB_3005:
	add rsp,0
	jmp LB_3001
LB_3006:
	mov QWORD [rsp+8*1],r14
	mov r13,QWORD [rsp+16+8*1]
	mov r14,QWORD [rsp+8*1]
	jmp LB_3009
LB_3009
;; rsp=1 , %1917~1'(= r ) %1916~0'(= r ) %1915~8'(= a35◂ [ a17◂ [ a9◂ [ ]{| l |}]] ) 
; #24 8'(= a35◂ [ a17◂ [ a9◂ [ ]{| l |}]] ) ⊢ 0(<2)◂8'(= a35◂ [ a17◂ [ a9◂ [ ]{| l |}]] )
;; rsp=1 , %1918~0(<2)◂8'(= a35◂ [ a17◂ [ a9◂ [ ]{| l |}]] ) %1917~1'(= r ) %1916~0'(= r ) 
; ∎ 0(<2)◂8'(= a35◂ [ a17◂ [ a9◂ [ ]{| l |}]] )
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂8'(= a35◂ [ a17◂ [ a9◂ [ ]{| l |}]] ) ⊢ 2'(= a3◂ [ a35◂ [ a17◂ [ a9◂ [ ]{| l |}]]] )
; .mov_ptn 0(<2)◂8'(= a35◂ [ a17◂ [ a9◂ [ ]{| l |}]] ) ⊢ 2'(= a3◂ [ a35◂ [ a17◂ [ a9◂ [ ]{| l |}]]] )
	mov rax,QWORD [rsp-8+8*1]
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,8
	jmp LB_3010
LB_3010:
	cmp BYTE [r8+6],0
	jnz LB_3001
	POP_GRM_SCC
	jmp LB_3000
LB_3001:
	RB_GRM
	jmp LB_3013
LB_3012:
	add r14,1 
LB_3013:
	cmp r14,r9
	jge LB_3014
	JZ_SPC BYTE [r13+8+r14], LB_3012
LB_3014
	call GRM_226
	cmp BYTE [r8+6],0
	jnz LB_3017
	jmp LB_3018
LB_3017:
	jmp LB_3015
LB_3018:
; .mov_ptn2 2'(= *{ } ) ⊢ { }
; .mov_ptn 2'(= *{ } ) ⊢ { }
	jmp LB_3016
LB_3015:
	add rsp,0
	jmp LB_3011
LB_3016:
	mov QWORD [rsp+8*0],r14
	mov r13,QWORD [rsp+16+8*0]
	mov r14,QWORD [rsp+8*0]
	jmp LB_3019
LB_3019
;; rsp=0 , %1921~1'(= r ) %1920~0'(= r ) %1919~{ } 
; $ %[ "lc_code 11" ] ⊢ %[ "lc_code 11" ]
;; rsp=0 , %1922~%[ "lc_code 11" ] %1921~1'(= r ) %1920~0'(= r ) %1919~{ } 
; #22 { } ⊢ 1(<2)◂{ }
;; rsp=0 , %1923~1(<2)◂{ } %1922~%[ "lc_code 11" ] %1921~1'(= r ) %1920~0'(= r ) %1919~{ } 
; #23 { { 0'(= r ) 1'(= r ) %[ "lc_code 11" ] } 1(<2)◂{ } } ⊢ 0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "lc_code 11" ] } 1(<2)◂{ } }
;; rsp=0 , %1924~0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "lc_code 11" ] } 1(<2)◂{ } } %1919~{ } 
; #194 0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "lc_code 11" ] } 1(<2)◂{ } } ⊢ 1(<2)◂0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "lc_code 11" ] } 1(<2)◂{ } }
;; rsp=0 , %1925~1(<2)◂0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "lc_code 11" ] } 1(<2)◂{ } } %1919~{ } 
; #24 1(<2)◂0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "lc_code 11" ] } 1(<2)◂{ } } ⊢ 0(<2)◂1(<2)◂0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "lc_code 11" ] } 1(<2)◂{ } }
;; rsp=0 , %1926~0(<2)◂1(<2)◂0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "lc_code 11" ] } 1(<2)◂{ } } %1919~{ } 
; ∎ 0(<2)◂1(<2)◂0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "lc_code 11" ] } 1(<2)◂{ } }
; .dlt.ptn { }
; .mov_ptn2 0(<2)◂1(<2)◂0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "lc_code 11" ] } 1(<2)◂{ } } ⊢ 2'(= a3◂ [ a35◂ [ a17◂ [ a9◂ [ ]{| l |}]]] )
; .mov_ptn 0(<2)◂1(<2)◂0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "lc_code 11" ] } 1(<2)◂{ } } ⊢ 2'(= a3◂ [ a35◂ [ a17◂ [ a9◂ [ ]{| l |}]]] )
	ALC_RCD 2, rax
	mov r9,rax
	ALC_RCD 3, rax
	mov r10,rax
	mov rax,r13
	mov QWORD [r10+8+8*0],rax
	mov rax,r14
	mov QWORD [r10+8+8*1],rax
	mov rsi,1  
	mov rdi,24
	xor rax,rax 
	C_CALL_SF calloc
	mov QWORD [rax],10
	mov BYTE [rax+8+0],108
	mov BYTE [rax+8+1],99
	mov BYTE [rax+8+2],95
	mov BYTE [rax+8+3],99
	mov BYTE [rax+8+4],111
	mov BYTE [rax+8+5],100
	mov BYTE [rax+8+6],101
	mov BYTE [rax+8+7],32
	mov BYTE [rax+8+8],49
	mov BYTE [rax+8+9],49
	mov QWORD [r10+8+8*2],rax
	mov rax,r10
	mov QWORD [r9+8+8*0],rax
	mov rax,unt 
	mov rax,unt_1
	mov QWORD [r9+8+8*1],rax
	mov rax,r9
	mov BYTE [rax+6],0
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],1
	mov QWORD [rax+8],rdi
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	jmp LB_3020
LB_3020:
	cmp BYTE [r8+6],0
	jnz LB_3011
	POP_GRM_SCC
	jmp LB_3000
LB_3011:
	POP_GRM_FAIL 
	jmp LB_3000
LB_3000:
	cmp BYTE [r8+6],0
	jnz LB_3021
	jmp LB_3022
LB_3021:
	add rsp,0
	POP_GRM_FAIL
	ret
LB_3022:
	mov QWORD [rsp+8*0],r14
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi 
; .mov_ptn2 2'(= a35◂ [ a17◂ [ a9◂ [ ]{| l |}]] ) ⊢ 3'(= a35◂ [ a17◂ [ a9◂ [ ]{| l |}]] )
	mov r10,r9
; .mov_ptn 2'(= a35◂ [ a17◂ [ a9◂ [ ]{| l |}]] ) ⊢ 3'(= a35◂ [ a17◂ [ a9◂ [ ]{| l |}]] )
	mov rax,r8
	mov r9,rax
	mov r13,QWORD [rsp+16+8*0]
	mov r14,QWORD [rsp+8*0]
	jmp LB_3023
LB_3023
;; rsp=0 , %1927~3'(= a35◂ [ a17◂ [ a9◂ [ ]{| l |}]] ) %1914~1'(= r ) %1913~0'(= r ) %1912~{ } 
;; ? 3'(= a35◂ [ a17◂ [ a9◂ [ ]{| l |}]] ) ⊢ 0(<2)◂2'(= a17◂ [ a9◂ [ ]{| l |}] )
	mov rdi,r9
	cmp BYTE [rdi+6],0
	jnz LB_3025
	mov QWORD [GBG_VCT+8*0],rdi
	mov r8,QWORD [rdi+8]
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_LN rdi
;; rsp=0 , %1929~2'(= a17◂ [ a9◂ [ ]{| l |}] ) %1914~1'(= r ) %1913~0'(= r ) %1912~{ } 
; $ %[ "lc_code 9" ] ⊢ %[ "lc_code 9" ]
;; rsp=0 , %1930~%[ "lc_code 9" ] %1929~2'(= a17◂ [ a9◂ [ ]{| l |}] ) %1914~1'(= r ) %1913~0'(= r ) %1912~{ } 
; #197 { 0'(= r ) 1'(= r ) %[ "lc_code 9" ] } ⊢ 0'(= a35◂ [ q0] )
	sub rsp,8
	mov QWORD [rsp+8*0],r8
; .mov_ptn2 { 0'(= r ) 1'(= r ) %[ "lc_code 9" ] } ⊢ { 0'(= r ) 1'(= r ) 2'(= {| l |} ) }
; .mov_ptn %[ "lc_code 9" ] ⊢ 2'(= {| l |} )
	mov rsi,1  
	mov rdi,24
	xor rax,rax 
	C_CALL_SF calloc
	mov QWORD [rax],9
	mov BYTE [rax+8+0],108
	mov BYTE [rax+8+1],99
	mov BYTE [rax+8+2],95
	mov BYTE [rax+8+3],99
	mov BYTE [rax+8+4],111
	mov BYTE [rax+8+5],100
	mov BYTE [rax+8+6],101
	mov BYTE [rax+8+7],32
	mov BYTE [rax+8+8],57
	mov r8,rax
	call ETR_197
	mov r8,QWORD [rsp-8+8*1]
	add rsp,8
;; rsp=0 , %1931~0'(= a35◂ [ q0] ) %1929~2'(= a17◂ [ a9◂ [ ]{| l |}] ) %1912~{ } 
; #24 0'(= a35◂ [ q0] ) ⊢ 0(<2)◂0'(= a35◂ [ q0] )
;; rsp=0 , %1932~0(<2)◂0'(= a35◂ [ q0] ) %1929~2'(= a17◂ [ a9◂ [ ]{| l |}] ) %1912~{ } 
; ∎ 0(<2)◂0'(= a35◂ [ q0] )
; .dlt.ptn 2'(= a17◂ [ a9◂ [ ]{| l |}] )
	mov rdi,r8
	C_PUSH_REGS
	mov r8,rdi
	call LB_674
	C_POP_REGS
; .dlt.ptn { }
; .mov_ptn2 0(<2)◂0'(= a35◂ [ q0] ) ⊢ 2'(= a3◂ [ a35◂ [ a17◂ [ a9◂ [ ]{| l |}]]] )
; .mov_ptn 0(<2)◂0'(= a35◂ [ q0] ) ⊢ 2'(= a3◂ [ a35◂ [ a17◂ [ a9◂ [ ]{| l |}]]] )
	mov rax,r13
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	jmp LB_3024
LB_3025:
;; ?. 3'(= a35◂ [ a17◂ [ a9◂ [ ]{| l |}]] ) ⊢ 1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] )
	mov QWORD [GBG_VCT+8*0],rdi
	mov r8,QWORD [rdi+8]
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_LN rdi
;; rsp=0 , %1928~2'(= a2◂ [ *{ rr{| l |}}] ) %1914~1'(= r ) %1913~0'(= r ) %1912~{ } 
; $ %[ "lc_code 10" ] ⊢ %[ "lc_code 10" ]
;; rsp=0 , %1933~%[ "lc_code 10" ] %1928~2'(= a2◂ [ *{ rr{| l |}}] ) %1914~1'(= r ) %1913~0'(= r ) %1912~{ } 
; #23 { { 0'(= r ) 1'(= r ) %[ "lc_code 10" ] } 2'(= a2◂ [ *{ rr{| l |}}] ) } ⊢ 0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "lc_code 10" ] } 2'(= a2◂ [ *{ rr{| l |}}] ) }
;; rsp=0 , %1934~0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "lc_code 10" ] } 2'(= a2◂ [ *{ rr{| l |}}] ) } %1912~{ } 
; #194 0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "lc_code 10" ] } 2'(= a2◂ [ *{ rr{| l |}}] ) } ⊢ 1(<2)◂0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "lc_code 10" ] } 2'(= a2◂ [ *{ rr{| l |}}] ) }
;; rsp=0 , %1935~1(<2)◂0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "lc_code 10" ] } 2'(= a2◂ [ *{ rr{| l |}}] ) } %1912~{ } 
; #24 1(<2)◂0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "lc_code 10" ] } 2'(= a2◂ [ *{ rr{| l |}}] ) } ⊢ 0(<2)◂1(<2)◂0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "lc_code 10" ] } 2'(= a2◂ [ *{ rr{| l |}}] ) }
;; rsp=0 , %1936~0(<2)◂1(<2)◂0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "lc_code 10" ] } 2'(= a2◂ [ *{ rr{| l |}}] ) } %1912~{ } 
; ∎ 0(<2)◂1(<2)◂0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "lc_code 10" ] } 2'(= a2◂ [ *{ rr{| l |}}] ) }
; .dlt.ptn { }
; .mov_ptn2 0(<2)◂1(<2)◂0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "lc_code 10" ] } 2'(= a2◂ [ *{ rr{| l |}}] ) } ⊢ 2'(= a3◂ [ a35◂ [ a17◂ [ a9◂ [ ]{| l |}]]] )
	mov r9,r8
; .mov_ptn 0(<2)◂1(<2)◂0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "lc_code 10" ] } 3'(= a2◂ [ *{ rr{| l |}}] ) } ⊢ 2'(= a3◂ [ a35◂ [ a17◂ [ a9◂ [ ]{| l |}]]] )
	ALC_RCD 2, rax
	mov r10,rax
	ALC_RCD 3, rax
	mov r11,rax
	mov rax,r13
	mov QWORD [r11+8+8*0],rax
	mov rax,r14
	mov QWORD [r11+8+8*1],rax
	mov rsi,1  
	mov rdi,24
	xor rax,rax 
	C_CALL_SF calloc
	mov QWORD [rax],10
	mov BYTE [rax+8+0],108
	mov BYTE [rax+8+1],99
	mov BYTE [rax+8+2],95
	mov BYTE [rax+8+3],99
	mov BYTE [rax+8+4],111
	mov BYTE [rax+8+5],100
	mov BYTE [rax+8+6],101
	mov BYTE [rax+8+7],32
	mov BYTE [rax+8+8],49
	mov BYTE [rax+8+9],48
	mov QWORD [r11+8+8*2],rax
	mov rax,r11
	mov QWORD [r10+8+8*0],rax
	mov rax,r9
	mov QWORD [r10+8+8*1],rax
	mov rax,r10
	mov BYTE [rax+6],0
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],1
	mov QWORD [rax+8],rdi
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	jmp LB_3024
LB_3024:
	cmp BYTE [r8+6],0
	jnz LB_2992
	POP_GRM_SCC
	ret
LB_2992:
	POP_GRM_FAIL 
	ret
ETR_237:
	mov r9,0x0000_ffff_ffff_ffff
	and r9,[r13]
	call GRM_237
	ret
GRM_237:
	PUSH_GRM
	jmp LB_3028
LB_3027:
	add r14,1 
LB_3028:
	cmp r14,r9
	jge LB_3029
	JZ_SPC BYTE [r13+8+r14], LB_3027
LB_3029
	call GRM_239
	cmp BYTE [r8+6],0
	jnz LB_3032
	jmp LB_3033
LB_3032:
	jmp LB_3030
LB_3033:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a35◂ [ a7◂ [ *{ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}]] ) ⊢ 8'(= a35◂ [ a7◂ [ *{ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}]] )
; .mov_ptn 2'(= a35◂ [ a7◂ [ *{ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}]] ) ⊢ 8'(= a35◂ [ a7◂ [ *{ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}]] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_3031
LB_3030:
	add rsp,0
	jmp LB_3026
LB_3031:
	mov QWORD [rsp+8*1],r14
	mov r13,QWORD [rsp+16+8*1]
	mov r14,QWORD [rsp+8*1]
	jmp LB_3034
LB_3034
;; rsp=1 , %1939~1'(= r ) %1938~0'(= r ) %1937~8'(= a35◂ [ a7◂ [ *{ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}]] ) 
;; ? 8'(= a35◂ [ a7◂ [ *{ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}]] ) ⊢ 0(<2)◂2'(= a7◂ [ *{ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}] )
	mov rdi,QWORD [rsp-8+8*1]
	cmp BYTE [rdi+6],0
	jnz LB_3036
	mov QWORD [GBG_VCT+8*0],rdi
	mov r8,QWORD [rdi+8]
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_LN rdi
;; rsp=1 , %1941~2'(= a7◂ [ *{ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}] ) %1939~1'(= r ) %1938~0'(= r ) 
; #126 2'(= a7◂ [ *{ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}] ) ⊢ 0(<2)◂2'(= a7◂ [ *{ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}] )
;; rsp=1 , %1942~0(<2)◂2'(= a7◂ [ *{ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}] ) %1939~1'(= r ) %1938~0'(= r ) 
; #195 0(<2)◂2'(= a7◂ [ *{ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}] ) ⊢ 0(<2)◂0(<2)◂2'(= a7◂ [ *{ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}] )
;; rsp=1 , %1943~0(<2)◂0(<2)◂2'(= a7◂ [ *{ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}] ) %1939~1'(= r ) %1938~0'(= r ) 
; #24 0(<2)◂0(<2)◂2'(= a7◂ [ *{ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}] ) ⊢ 0(<2)◂0(<2)◂0(<2)◂2'(= a7◂ [ *{ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}] )
;; rsp=1 , %1944~0(<2)◂0(<2)◂0(<2)◂2'(= a7◂ [ *{ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}] ) %1939~1'(= r ) %1938~0'(= r ) 
; ∎ 0(<2)◂0(<2)◂0(<2)◂2'(= a7◂ [ *{ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}] )
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂0(<2)◂0(<2)◂2'(= a7◂ [ *{ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}] ) ⊢ 2'(= a3◂ [ a35◂ [ a18◂ [ a9◂ [ ]{| l |}]]] )
	mov r13,r8
; .mov_ptn 0(<2)◂0(<2)◂0(<2)◂0'(= a7◂ [ *{ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}] ) ⊢ 2'(= a3◂ [ a35◂ [ a18◂ [ a9◂ [ ]{| l |}]]] )
	mov rax,r13
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,8
	jmp LB_3035
LB_3036:
;; ?. 8'(= a35◂ [ a7◂ [ *{ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}]] ) ⊢ 1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] )
	mov QWORD [GBG_VCT+8*0],rdi
	mov r8,QWORD [rdi+8]
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_LN rdi
;; rsp=1 , %1940~2'(= a2◂ [ *{ rr{| l |}}] ) %1939~1'(= r ) %1938~0'(= r ) 
; #194 2'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] )
;; rsp=1 , %1945~1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] ) %1939~1'(= r ) %1938~0'(= r ) 
; #24 1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 0(<2)◂1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] )
;; rsp=1 , %1946~0(<2)◂1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] ) %1939~1'(= r ) %1938~0'(= r ) 
; ∎ 0(<2)◂1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] )
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 2'(= a3◂ [ a35◂ [ a18◂ [ a9◂ [ ]{| l |}]]] )
	mov r13,r8
; .mov_ptn 0(<2)◂1(<2)◂0'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 2'(= a3◂ [ a35◂ [ a18◂ [ a9◂ [ ]{| l |}]]] )
	mov rax,r13
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],1
	mov QWORD [rax+8],rdi
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,8
	jmp LB_3035
LB_3035:
	cmp BYTE [r8+6],0
	jnz LB_3026
	POP_GRM_SCC
	ret
LB_3026:
	RB_GRM
	jmp LB_3039
LB_3038:
	add r14,1 
LB_3039:
	cmp r14,r9
	jge LB_3040
	JZ_SPC BYTE [r13+8+r14], LB_3038
LB_3040
	call GRM_207
	cmp BYTE [r8+6],0
	jnz LB_3043
	jmp LB_3044
LB_3043:
	jmp LB_3041
LB_3044:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a8◂ [ a13◂ [ {| l |}]] ) ⊢ 8'(= a8◂ [ a13◂ [ {| l |}]] )
; .mov_ptn 2'(= a8◂ [ a13◂ [ {| l |}]] ) ⊢ 8'(= a8◂ [ a13◂ [ {| l |}]] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_3042
LB_3041:
	add rsp,0
	jmp LB_3037
LB_3042:
	jmp LB_3046
LB_3045:
	add r14,1 
LB_3046:
	cmp r14,r9
	jge LB_3047
	JZ_SPC BYTE [r13+8+r14], LB_3045
LB_3047
	call GRM_209
	cmp BYTE [r8+6],0
	jnz LB_3050
	jmp LB_3051
LB_3050:
	jmp LB_3048
LB_3051:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a2◂ [ a8◂ [ a13◂ [ {| l |}]]] ) ⊢ 9'(= a2◂ [ a8◂ [ a13◂ [ {| l |}]]] )
; .mov_ptn 2'(= a2◂ [ a8◂ [ a13◂ [ {| l |}]]] ) ⊢ 9'(= a2◂ [ a8◂ [ a13◂ [ {| l |}]]] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_3049
LB_3048:
	add rsp,8
	jmp LB_3037
LB_3049:
	jmp LB_3053
LB_3052:
	add r14,1 
LB_3053:
	cmp r14,r9
	jge LB_3054
	JZ_SPC BYTE [r13+8+r14], LB_3052
LB_3054
	call GRM_236
	cmp BYTE [r8+6],0
	jnz LB_3057
	jmp LB_3058
LB_3057:
	jmp LB_3055
LB_3058:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a35◂ [ a17◂ [ a9◂ [ ]{| l |}]] ) ⊢ 10'(= a35◂ [ a17◂ [ a9◂ [ ]{| l |}]] )
; .mov_ptn 2'(= a35◂ [ a17◂ [ a9◂ [ ]{| l |}]] ) ⊢ 10'(= a35◂ [ a17◂ [ a9◂ [ ]{| l |}]] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_3056
LB_3055:
	add rsp,16
	jmp LB_3037
LB_3056:
	mov QWORD [rsp+8*3],r14
	mov r13,QWORD [rsp+16+8*3]
	mov r14,QWORD [rsp+8*3]
	jmp LB_3059
LB_3059
;; rsp=3 , %1951~1'(= r ) %1950~0'(= r ) %1949~10'(= a35◂ [ a17◂ [ a9◂ [ ]{| l |}]] ) %1948~9'(= a2◂ [ a8◂ [ a13◂ [ {| l |}]]] ) %1947~8'(= a8◂ [ a13◂ [ {| l |}]] ) 
;; ? 10'(= a35◂ [ a17◂ [ a9◂ [ ]{| l |}]] ) ⊢ 0(<2)◂2'(= a17◂ [ a9◂ [ ]{| l |}] )
	mov rdi,QWORD [rsp-8+8*1]
	cmp BYTE [rdi+6],0
	jnz LB_3061
	mov QWORD [GBG_VCT+8*0],rdi
	mov r8,QWORD [rdi+8]
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_LN rdi
;; rsp=3 , %1953~2'(= a17◂ [ a9◂ [ ]{| l |}] ) %1951~1'(= r ) %1950~0'(= r ) %1948~9'(= a2◂ [ a8◂ [ a13◂ [ {| l |}]]] ) %1947~8'(= a8◂ [ a13◂ [ {| l |}]] ) 
; #23 { 8'(= a8◂ [ a13◂ [ {| l |}]] ) 9'(= a2◂ [ a8◂ [ a13◂ [ {| l |}]]] ) } ⊢ 0(<2)◂{ 8'(= a8◂ [ a13◂ [ {| l |}]] ) 9'(= a2◂ [ a8◂ [ a13◂ [ {| l |}]]] ) }
;; rsp=3 , %1954~0(<2)◂{ 8'(= a8◂ [ a13◂ [ {| l |}]] ) 9'(= a2◂ [ a8◂ [ a13◂ [ {| l |}]]] ) } %1953~2'(= a17◂ [ a9◂ [ ]{| l |}] ) %1951~1'(= r ) %1950~0'(= r ) 
; #125 { 0(<2)◂{ 8'(= a8◂ [ a13◂ [ {| l |}]] ) 9'(= a2◂ [ a8◂ [ a13◂ [ {| l |}]]] ) } 2'(= a17◂ [ a9◂ [ ]{| l |}] ) } ⊢ 1(<2)◂{ 0(<2)◂{ 8'(= a8◂ [ a13◂ [ {| l |}]] ) 9'(= a2◂ [ a8◂ [ a13◂ [ {| l |}]]] ) } 2'(= a17◂ [ a9◂ [ ]{| l |}] ) }
;; rsp=3 , %1955~1(<2)◂{ 0(<2)◂{ 8'(= a8◂ [ a13◂ [ {| l |}]] ) 9'(= a2◂ [ a8◂ [ a13◂ [ {| l |}]]] ) } 2'(= a17◂ [ a9◂ [ ]{| l |}] ) } %1951~1'(= r ) %1950~0'(= r ) 
; #195 1(<2)◂{ 0(<2)◂{ 8'(= a8◂ [ a13◂ [ {| l |}]] ) 9'(= a2◂ [ a8◂ [ a13◂ [ {| l |}]]] ) } 2'(= a17◂ [ a9◂ [ ]{| l |}] ) } ⊢ 0(<2)◂1(<2)◂{ 0(<2)◂{ 8'(= a8◂ [ a13◂ [ {| l |}]] ) 9'(= a2◂ [ a8◂ [ a13◂ [ {| l |}]]] ) } 2'(= a17◂ [ a9◂ [ ]{| l |}] ) }
;; rsp=3 , %1956~0(<2)◂1(<2)◂{ 0(<2)◂{ 8'(= a8◂ [ a13◂ [ {| l |}]] ) 9'(= a2◂ [ a8◂ [ a13◂ [ {| l |}]]] ) } 2'(= a17◂ [ a9◂ [ ]{| l |}] ) } %1951~1'(= r ) %1950~0'(= r ) 
; #24 0(<2)◂1(<2)◂{ 0(<2)◂{ 8'(= a8◂ [ a13◂ [ {| l |}]] ) 9'(= a2◂ [ a8◂ [ a13◂ [ {| l |}]]] ) } 2'(= a17◂ [ a9◂ [ ]{| l |}] ) } ⊢ 0(<2)◂0(<2)◂1(<2)◂{ 0(<2)◂{ 8'(= a8◂ [ a13◂ [ {| l |}]] ) 9'(= a2◂ [ a8◂ [ a13◂ [ {| l |}]]] ) } 2'(= a17◂ [ a9◂ [ ]{| l |}] ) }
;; rsp=3 , %1957~0(<2)◂0(<2)◂1(<2)◂{ 0(<2)◂{ 8'(= a8◂ [ a13◂ [ {| l |}]] ) 9'(= a2◂ [ a8◂ [ a13◂ [ {| l |}]]] ) } 2'(= a17◂ [ a9◂ [ ]{| l |}] ) } %1951~1'(= r ) %1950~0'(= r ) 
; ∎ 0(<2)◂0(<2)◂1(<2)◂{ 0(<2)◂{ 8'(= a8◂ [ a13◂ [ {| l |}]] ) 9'(= a2◂ [ a8◂ [ a13◂ [ {| l |}]]] ) } 2'(= a17◂ [ a9◂ [ ]{| l |}] ) }
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂0(<2)◂1(<2)◂{ 0(<2)◂{ 8'(= a8◂ [ a13◂ [ {| l |}]] ) 9'(= a2◂ [ a8◂ [ a13◂ [ {| l |}]]] ) } 2'(= a17◂ [ a9◂ [ ]{| l |}] ) } ⊢ 2'(= a3◂ [ a35◂ [ a18◂ [ a9◂ [ ]{| l |}]]] )
	mov r13,r8
; .mov_ptn 0(<2)◂0(<2)◂1(<2)◂{ 0(<2)◂{ 8'(= a8◂ [ a13◂ [ {| l |}]] ) 9'(= a2◂ [ a8◂ [ a13◂ [ {| l |}]]] ) } 0'(= a17◂ [ a9◂ [ ]{| l |}] ) } ⊢ 2'(= a3◂ [ a35◂ [ a18◂ [ a9◂ [ ]{| l |}]]] )
	ALC_RCD 2, rax
	mov r14,rax
	ALC_RCD 2, rax
	mov r9,rax
	mov rax,QWORD [rsp-8+8*3]
	mov QWORD [r9+8+8*0],rax
	mov rax,QWORD [rsp-8+8*2]
	mov QWORD [r9+8+8*1],rax
	mov rax,r9
	mov BYTE [rax+6],0
	mov QWORD [r14+8+8*0],rax
	mov rax,r13
	mov QWORD [r14+8+8*1],rax
	mov rax,r14
	mov BYTE [rax+6],1
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,24
	jmp LB_3060
LB_3061:
;; ?. 10'(= a35◂ [ a17◂ [ a9◂ [ ]{| l |}]] ) ⊢ 1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] )
	mov QWORD [GBG_VCT+8*0],rdi
	mov r8,QWORD [rdi+8]
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_LN rdi
;; rsp=3 , %1952~2'(= a2◂ [ *{ rr{| l |}}] ) %1951~1'(= r ) %1950~0'(= r ) %1948~9'(= a2◂ [ a8◂ [ a13◂ [ {| l |}]]] ) %1947~8'(= a8◂ [ a13◂ [ {| l |}]] ) 
; #194 2'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] )
;; rsp=3 , %1958~1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] ) %1951~1'(= r ) %1950~0'(= r ) %1948~9'(= a2◂ [ a8◂ [ a13◂ [ {| l |}]]] ) %1947~8'(= a8◂ [ a13◂ [ {| l |}]] ) 
; #24 1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 0(<2)◂1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] )
;; rsp=3 , %1959~0(<2)◂1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] ) %1951~1'(= r ) %1950~0'(= r ) %1948~9'(= a2◂ [ a8◂ [ a13◂ [ {| l |}]]] ) %1947~8'(= a8◂ [ a13◂ [ {| l |}]] ) 
; ∎ 0(<2)◂1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] )
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 9'(= a2◂ [ a8◂ [ a13◂ [ {| l |}]]] )
	mov rdi,QWORD [rsp-8+8*2]
	C_PUSH_REGS
	mov r8,rdi
	call LB_692
	C_POP_REGS
; .dlt.ptn 8'(= a8◂ [ a13◂ [ {| l |}]] )
	mov rdi,QWORD [rsp-8+8*3]
	C_PUSH_REGS
	mov r8,rdi
	call LB_668
	C_POP_REGS
; .mov_ptn2 0(<2)◂1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 2'(= a3◂ [ a35◂ [ a18◂ [ a9◂ [ ]{| l |}]]] )
	mov r13,r8
; .mov_ptn 0(<2)◂1(<2)◂0'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 2'(= a3◂ [ a35◂ [ a18◂ [ a9◂ [ ]{| l |}]]] )
	mov rax,r13
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],1
	mov QWORD [rax+8],rdi
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,24
	jmp LB_3060
LB_3060:
	cmp BYTE [r8+6],0
	jnz LB_3037
	POP_GRM_SCC
	ret
LB_3037:
	POP_GRM_FAIL 
	ret
ETR_238:
	mov r9,0x0000_ffff_ffff_ffff
	and r9,[r13]
	call GRM_238
	ret
GRM_238:
	PUSH_GRM
	jmp LB_3064
LB_3063:
	add r14,1 
LB_3064:
	cmp r14,r9
	jge LB_3065
	JZ_SPC BYTE [r13+8+r14], LB_3063
LB_3065
	call GRM_219
	cmp BYTE [r8+6],0
	jnz LB_3068
	jmp LB_3069
LB_3068:
	jmp LB_3066
LB_3069:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a35◂ [ *{ }] ) ⊢ 8'(= a35◂ [ *{ }] )
; .mov_ptn 2'(= a35◂ [ *{ }] ) ⊢ 8'(= a35◂ [ *{ }] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_3067
LB_3066:
	add rsp,0
	jmp LB_3062
LB_3067:
	jmp LB_3071
LB_3070:
	add r14,1 
LB_3071:
	cmp r14,r9
	jge LB_3072
	JZ_SPC BYTE [r13+8+r14], LB_3070
LB_3072
	lea rax,[r14+4]
	cmp rax,r9
	jg LB_3075
	jmp LB_3076
LB_3075:
	mov r8,unt_1
	jmp LB_3073
LB_3076:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],226
	jnz LB_3077
	cmp BYTE [rdi+1],136
	jnz LB_3077
	cmp BYTE [rdi+2],144
	jnz LB_3077
	cmp BYTE [rdi+3],46
	jnz LB_3077
	jmp LB_3078
LB_3077:
	mov r8,unt_1
	jmp LB_3073
LB_3078:
	add r14,4
	jmp LB_3074
LB_3073:
	add rsp,8
	jmp LB_3062
LB_3074:
	jmp LB_3080
LB_3079:
	add r14,1 
LB_3080:
	cmp r14,r9
	jge LB_3081
	JZ_SPC BYTE [r13+8+r14], LB_3079
LB_3081
	call GRM_240
	cmp BYTE [r8+6],0
	jnz LB_3084
	jmp LB_3085
LB_3084:
	jmp LB_3082
LB_3085:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a35◂ [ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]] ) ⊢ 9'(= a35◂ [ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]] )
; .mov_ptn 2'(= a35◂ [ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]] ) ⊢ 9'(= a35◂ [ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_3083
LB_3082:
	add rsp,8
	POP_GRM_FAIL
	ret
LB_3083:
	jmp LB_3087
LB_3086:
	add r14,1 
LB_3087:
	cmp r14,r9
	jge LB_3088
	JZ_SPC BYTE [r13+8+r14], LB_3086
LB_3088
	call GRM_236
	cmp BYTE [r8+6],0
	jnz LB_3091
	jmp LB_3092
LB_3091:
	jmp LB_3089
LB_3092:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a35◂ [ a17◂ [ a9◂ [ ]{| l |}]] ) ⊢ 10'(= a35◂ [ a17◂ [ a9◂ [ ]{| l |}]] )
; .mov_ptn 2'(= a35◂ [ a17◂ [ a9◂ [ ]{| l |}]] ) ⊢ 10'(= a35◂ [ a17◂ [ a9◂ [ ]{| l |}]] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_3090
LB_3089:
	add rsp,16
	POP_GRM_FAIL
	ret
LB_3090:
	mov QWORD [rsp+8*3],r14
	mov r13,QWORD [rsp+16+8*3]
	mov r14,QWORD [rsp+8*3]
	jmp LB_3093
LB_3093
;; rsp=3 , %1964~1'(= r ) %1963~0'(= r ) %1962~10'(= a35◂ [ a17◂ [ a9◂ [ ]{| l |}]] ) %1961~9'(= a35◂ [ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]] ) %1960~8'(= a35◂ [ *{ }] ) 
; #196 { 9'(= a35◂ [ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]] ) 10'(= a35◂ [ a17◂ [ a9◂ [ ]{| l |}]] ) } ⊢ 2'(= a35◂ [ *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a17◂ [ a9◂ [ ]{| l |}]}] )
	sub rsp,16
	mov QWORD [rsp+8*0],r13
	mov QWORD [rsp+8*1],r14
; .mov_ptn2 { 9'(= a35◂ [ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]] ) 10'(= a35◂ [ a17◂ [ a9◂ [ ]{| l |}]] ) } ⊢ { 0'(= a35◂ [ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]] ) 1'(= a35◂ [ a17◂ [ a9◂ [ ]{| l |}]] ) }
; .mov_ptn 10'(= a35◂ [ a17◂ [ a9◂ [ ]{| l |}]] ) ⊢ 1'(= a35◂ [ a17◂ [ a9◂ [ ]{| l |}]] )
	mov rax,QWORD [rsp-8+8*3]
	mov r14,rax
; .mov_ptn 9'(= a35◂ [ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]] ) ⊢ 0'(= a35◂ [ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]] )
	mov rax,QWORD [rsp-8+8*4]
	mov r13,rax
	call LB_3095
	mov r14,QWORD [rsp-8+8*2]
	mov r8,r13
	mov r13,QWORD [rsp-8+8*1]
	add rsp,32
;; rsp=1 , %1965~2'(= a35◂ [ *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a17◂ [ a9◂ [ ]{| l |}]}] ) %1964~1'(= r ) %1963~0'(= r ) %1960~8'(= a35◂ [ *{ }] ) 
;; ? 2'(= a35◂ [ *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a17◂ [ a9◂ [ ]{| l |}]}] ) ⊢ 0(<2)◂{ 3'(= a2◂ [ a21◂ [ a9◂ [ ]{| l |}]] ) 4'(= a17◂ [ a9◂ [ ]{| l |}] ) }
	mov rdi,r8
	cmp BYTE [rdi+6],0
	jnz LB_3099
	mov r9, QWORD [r8+8]
	mov r10, QWORD [r8+16]
	mov QWORD [GBG_VCT+8*0],r8
	mov rdi,QWORD [GBG_VCT+8*0]
	mov rax,[SS_RCD_2_TOP]
	mov QWORD [rdi],rax 
	mov QWORD [SS_RCD_2_TOP],rdi
;; rsp=1 , %1968~4'(= a17◂ [ a9◂ [ ]{| l |}] ) %1967~3'(= a2◂ [ a21◂ [ a9◂ [ ]{| l |}]] ) %1964~1'(= r ) %1963~0'(= r ) %1960~8'(= a35◂ [ *{ }] ) 
; #118 4'(= a17◂ [ a9◂ [ ]{| l |}] ) ⊢ 2(<3)◂4'(= a17◂ [ a9◂ [ ]{| l |}] )
;; rsp=1 , %1969~2(<3)◂4'(= a17◂ [ a9◂ [ ]{| l |}] ) %1967~3'(= a2◂ [ a21◂ [ a9◂ [ ]{| l |}]] ) %1964~1'(= r ) %1963~0'(= r ) %1960~8'(= a35◂ [ *{ }] ) 
; #51 { 3'(= a2◂ [ a21◂ [ a9◂ [ ]{| l |}]] ) 2(<3)◂4'(= a17◂ [ a9◂ [ ]{| l |}] ) } ⊢ 1(<2)◂{ 3'(= a2◂ [ a21◂ [ a9◂ [ ]{| l |}]] ) 2(<3)◂4'(= a17◂ [ a9◂ [ ]{| l |}] ) }
;; rsp=1 , %1970~1(<2)◂{ 3'(= a2◂ [ a21◂ [ a9◂ [ ]{| l |}]] ) 2(<3)◂4'(= a17◂ [ a9◂ [ ]{| l |}] ) } %1964~1'(= r ) %1963~0'(= r ) %1960~8'(= a35◂ [ *{ }] ) 
; #195 1(<2)◂{ 3'(= a2◂ [ a21◂ [ a9◂ [ ]{| l |}]] ) 2(<3)◂4'(= a17◂ [ a9◂ [ ]{| l |}] ) } ⊢ 0(<2)◂1(<2)◂{ 3'(= a2◂ [ a21◂ [ a9◂ [ ]{| l |}]] ) 2(<3)◂4'(= a17◂ [ a9◂ [ ]{| l |}] ) }
;; rsp=1 , %1971~0(<2)◂1(<2)◂{ 3'(= a2◂ [ a21◂ [ a9◂ [ ]{| l |}]] ) 2(<3)◂4'(= a17◂ [ a9◂ [ ]{| l |}] ) } %1964~1'(= r ) %1963~0'(= r ) %1960~8'(= a35◂ [ *{ }] ) 
; #24 0(<2)◂1(<2)◂{ 3'(= a2◂ [ a21◂ [ a9◂ [ ]{| l |}]] ) 2(<3)◂4'(= a17◂ [ a9◂ [ ]{| l |}] ) } ⊢ 0(<2)◂0(<2)◂1(<2)◂{ 3'(= a2◂ [ a21◂ [ a9◂ [ ]{| l |}]] ) 2(<3)◂4'(= a17◂ [ a9◂ [ ]{| l |}] ) }
;; rsp=1 , %1972~0(<2)◂0(<2)◂1(<2)◂{ 3'(= a2◂ [ a21◂ [ a9◂ [ ]{| l |}]] ) 2(<3)◂4'(= a17◂ [ a9◂ [ ]{| l |}] ) } %1964~1'(= r ) %1963~0'(= r ) %1960~8'(= a35◂ [ *{ }] ) 
; ∎ 0(<2)◂0(<2)◂1(<2)◂{ 3'(= a2◂ [ a21◂ [ a9◂ [ ]{| l |}]] ) 2(<3)◂4'(= a17◂ [ a9◂ [ ]{| l |}] ) }
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 8'(= a35◂ [ *{ }] )
	mov rdi,QWORD [rsp-8+8*1]
	C_PUSH_REGS
	mov r8,rdi
	call LB_1701
	C_POP_REGS
; .mov_ptn2 0(<2)◂0(<2)◂1(<2)◂{ 3'(= a2◂ [ a21◂ [ a9◂ [ ]{| l |}]] ) 2(<3)◂4'(= a17◂ [ a9◂ [ ]{| l |}] ) } ⊢ 2'(= a3◂ [ a35◂ [ a7◂ [ *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}]]] )
; .mov_ptn 0(<2)◂0(<2)◂1(<2)◂{ 3'(= a2◂ [ a21◂ [ a9◂ [ ]{| l |}]] ) 2(<3)◂4'(= a17◂ [ a9◂ [ ]{| l |}] ) } ⊢ 2'(= a3◂ [ a35◂ [ a7◂ [ *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}]]] )
	ALC_RCD 2, rax
	mov r13,rax
	mov rax,r9
	mov QWORD [r13+8+8*0],rax
	mov rax,r10
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],2
	mov QWORD [rax+8],rdi
	mov QWORD [r13+8+8*1],rax
	mov rax,r13
	mov BYTE [rax+6],1
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,8
	jmp LB_3094
LB_3099:
;; ?. 2'(= a35◂ [ *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a17◂ [ a9◂ [ ]{| l |}]}] ) ⊢ 1(<2)◂3'(= a2◂ [ *{ rr{| l |}}] )
	mov QWORD [GBG_VCT+8*0],rdi
	mov r9,QWORD [rdi+8]
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_LN rdi
;; rsp=1 , %1966~3'(= a2◂ [ *{ rr{| l |}}] ) %1964~1'(= r ) %1963~0'(= r ) %1960~8'(= a35◂ [ *{ }] ) 
; #194 3'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 1(<2)◂3'(= a2◂ [ *{ rr{| l |}}] )
;; rsp=1 , %1973~1(<2)◂3'(= a2◂ [ *{ rr{| l |}}] ) %1964~1'(= r ) %1963~0'(= r ) %1960~8'(= a35◂ [ *{ }] ) 
; #24 1(<2)◂3'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 0(<2)◂1(<2)◂3'(= a2◂ [ *{ rr{| l |}}] )
;; rsp=1 , %1974~0(<2)◂1(<2)◂3'(= a2◂ [ *{ rr{| l |}}] ) %1964~1'(= r ) %1963~0'(= r ) %1960~8'(= a35◂ [ *{ }] ) 
; ∎ 0(<2)◂1(<2)◂3'(= a2◂ [ *{ rr{| l |}}] )
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 8'(= a35◂ [ *{ }] )
	mov rdi,QWORD [rsp-8+8*1]
	C_PUSH_REGS
	mov r8,rdi
	call LB_1701
	C_POP_REGS
; .mov_ptn2 0(<2)◂1(<2)◂3'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 2'(= a3◂ [ a35◂ [ a7◂ [ *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}]]] )
; .mov_ptn 0(<2)◂1(<2)◂3'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 2'(= a3◂ [ a35◂ [ a7◂ [ *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}]]] )
	mov rax,r9
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],1
	mov QWORD [rax+8],rdi
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,8
	jmp LB_3094
LB_3094:
	cmp BYTE [r8+6],0
	jnz LB_3062
	POP_GRM_SCC
	ret
LB_3062:
	RB_GRM
	jmp LB_3102
LB_3101:
	add r14,1 
LB_3102:
	cmp r14,r9
	jge LB_3103
	JZ_SPC BYTE [r13+8+r14], LB_3101
LB_3103
	call GRM_219
	cmp BYTE [r8+6],0
	jnz LB_3106
	jmp LB_3107
LB_3106:
	jmp LB_3104
LB_3107:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a35◂ [ *{ }] ) ⊢ 8'(= a35◂ [ *{ }] )
; .mov_ptn 2'(= a35◂ [ *{ }] ) ⊢ 8'(= a35◂ [ *{ }] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_3105
LB_3104:
	add rsp,0
	jmp LB_3100
LB_3105:
	jmp LB_3109
LB_3108:
	add r14,1 
LB_3109:
	cmp r14,r9
	jge LB_3110
	JZ_SPC BYTE [r13+8+r14], LB_3108
LB_3110
	lea rax,[r14+3]
	cmp rax,r9
	jg LB_3113
	jmp LB_3114
LB_3113:
	mov r8,unt_1
	jmp LB_3111
LB_3114:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],226
	jnz LB_3115
	cmp BYTE [rdi+1],136
	jnz LB_3115
	cmp BYTE [rdi+2],144
	jnz LB_3115
	jmp LB_3116
LB_3115:
	mov r8,unt_1
	jmp LB_3111
LB_3116:
	add r14,3
	jmp LB_3112
LB_3111:
	add rsp,8
	jmp LB_3100
LB_3112:
	jmp LB_3118
LB_3117:
	add r14,1 
LB_3118:
	cmp r14,r9
	jge LB_3119
	JZ_SPC BYTE [r13+8+r14], LB_3117
LB_3119
	call GRM_240
	cmp BYTE [r8+6],0
	jnz LB_3122
	jmp LB_3123
LB_3122:
	jmp LB_3120
LB_3123:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a35◂ [ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]] ) ⊢ 9'(= a35◂ [ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]] )
; .mov_ptn 2'(= a35◂ [ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]] ) ⊢ 9'(= a35◂ [ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_3121
LB_3120:
	add rsp,8
	jmp LB_3100
LB_3121:
	jmp LB_3125
LB_3124:
	add r14,1 
LB_3125:
	cmp r14,r9
	jge LB_3126
	JZ_SPC BYTE [r13+8+r14], LB_3124
LB_3126
	call GRM_236
	cmp BYTE [r8+6],0
	jnz LB_3129
	jmp LB_3130
LB_3129:
	jmp LB_3127
LB_3130:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a35◂ [ a17◂ [ a9◂ [ ]{| l |}]] ) ⊢ 10'(= a35◂ [ a17◂ [ a9◂ [ ]{| l |}]] )
; .mov_ptn 2'(= a35◂ [ a17◂ [ a9◂ [ ]{| l |}]] ) ⊢ 10'(= a35◂ [ a17◂ [ a9◂ [ ]{| l |}]] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_3128
LB_3127:
	add rsp,16
	jmp LB_3100
LB_3128:
	jmp LB_3132
LB_3131:
	add r14,1 
LB_3132:
	cmp r14,r9
	jge LB_3133
	JZ_SPC BYTE [r13+8+r14], LB_3131
LB_3133
	call GRM_238
	cmp BYTE [r8+6],0
	jnz LB_3136
	jmp LB_3137
LB_3136:
	jmp LB_3134
LB_3137:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a35◂ [ a7◂ [ *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}]] ) ⊢ 11'(= a35◂ [ a7◂ [ *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}]] )
; .mov_ptn 2'(= a35◂ [ a7◂ [ *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}]] ) ⊢ 11'(= a35◂ [ a7◂ [ *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}]] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_3135
LB_3134:
	add rsp,24
	jmp LB_3100
LB_3135:
	mov QWORD [rsp+8*4],r14
	mov r13,QWORD [rsp+16+8*4]
	mov r14,QWORD [rsp+8*4]
	jmp LB_3138
LB_3138
;; rsp=4 , %1980~1'(= r ) %1979~0'(= r ) %1978~11'(= a35◂ [ a7◂ [ *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}]] ) %1977~10'(= a35◂ [ a17◂ [ a9◂ [ ]{| l |}]] ) %1976~9'(= a35◂ [ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]] ) %1975~8'(= a35◂ [ *{ }] ) 
; #196 { 9'(= a35◂ [ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]] ) 10'(= a35◂ [ a17◂ [ a9◂ [ ]{| l |}]] ) } ⊢ 2'(= a35◂ [ *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a17◂ [ a9◂ [ ]{| l |}]}] )
	sub rsp,16
	mov QWORD [rsp+8*0],r13
	mov QWORD [rsp+8*1],r14
; .mov_ptn2 { 9'(= a35◂ [ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]] ) 10'(= a35◂ [ a17◂ [ a9◂ [ ]{| l |}]] ) } ⊢ { 0'(= a35◂ [ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]] ) 1'(= a35◂ [ a17◂ [ a9◂ [ ]{| l |}]] ) }
; .mov_ptn 10'(= a35◂ [ a17◂ [ a9◂ [ ]{| l |}]] ) ⊢ 1'(= a35◂ [ a17◂ [ a9◂ [ ]{| l |}]] )
	mov rax,QWORD [rsp-8+8*4]
	mov r14,rax
; .mov_ptn 9'(= a35◂ [ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]] ) ⊢ 0'(= a35◂ [ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]] )
	mov rax,QWORD [rsp-8+8*5]
	mov r13,rax
	call LB_3095
	mov r14,QWORD [rsp-8+8*2]
	mov r8,r13
	mov r13,QWORD [rsp-8+8*1]
	add rsp,16
;; rsp=4 , %1981~2'(= a35◂ [ *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a17◂ [ a9◂ [ ]{| l |}]}] ) %1980~1'(= r ) %1979~0'(= r ) %1978~11'(= a35◂ [ a7◂ [ *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}]] ) %1975~8'(= a35◂ [ *{ }] ) 
; #196 { 2'(= a35◂ [ *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a17◂ [ a9◂ [ ]{| l |}]}] ) 11'(= a35◂ [ a7◂ [ *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}]] ) } ⊢ 2'(= a35◂ [ *{ *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a17◂ [ a9◂ [ ]{| l |}]}a7◂ [ *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}]}] )
	sub rsp,16
	mov QWORD [rsp+8*0],r13
	mov QWORD [rsp+8*1],r14
; .mov_ptn2 { 2'(= a35◂ [ *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a17◂ [ a9◂ [ ]{| l |}]}] ) 11'(= a35◂ [ a7◂ [ *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}]] ) } ⊢ { 0'(= a35◂ [ *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a17◂ [ a9◂ [ ]{| l |}]}] ) 1'(= a35◂ [ a7◂ [ *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}]] ) }
; .mov_ptn 11'(= a35◂ [ a7◂ [ *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}]] ) ⊢ 1'(= a35◂ [ a7◂ [ *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}]] )
	mov rax,QWORD [rsp-8+8*3]
	mov r14,rax
; .mov_ptn 2'(= a35◂ [ *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a17◂ [ a9◂ [ ]{| l |}]}] ) ⊢ 0'(= a35◂ [ *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a17◂ [ a9◂ [ ]{| l |}]}] )
	mov rax,r8
	mov r13,rax
	call LB_3140
	mov r14,QWORD [rsp-8+8*2]
	mov r8,r13
	mov r13,QWORD [rsp-8+8*1]
	add rsp,40
;; rsp=1 , %1982~2'(= a35◂ [ *{ *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a17◂ [ a9◂ [ ]{| l |}]}a7◂ [ *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}]}] ) %1980~1'(= r ) %1979~0'(= r ) %1975~8'(= a35◂ [ *{ }] ) 
;; ? 2'(= a35◂ [ *{ *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a17◂ [ a9◂ [ ]{| l |}]}a7◂ [ *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}]}] ) ⊢ 0(<2)◂{ { 4'(= a2◂ [ a21◂ [ a9◂ [ ]{| l |}]] ) 5'(= a17◂ [ a9◂ [ ]{| l |}] ) } 6'(= a7◂ [ *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}] ) }
	mov rdi,r8
	cmp BYTE [rdi+6],0
	jnz LB_3144
	mov r9, QWORD [r8+8]
	mov r10, QWORD [r9+8]
	mov r11, QWORD [r9+16]
	mov QWORD [GBG_VCT+8*0],r9
	mov rcx, QWORD [r8+16]
	mov QWORD [GBG_VCT+8*1],r8
	mov rdi,QWORD [GBG_VCT+8*1]
	mov rax,[SS_RCD_2_TOP]
	mov QWORD [rdi],rax 
	mov QWORD [SS_RCD_2_TOP],rdi
	mov rdi,QWORD [GBG_VCT+8*0]
	mov rax,[SS_RCD_2_TOP]
	mov QWORD [rdi],rax 
	mov QWORD [SS_RCD_2_TOP],rdi
;; rsp=1 , %1986~6'(= a7◂ [ *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}] ) %1985~5'(= a17◂ [ a9◂ [ ]{| l |}] ) %1984~4'(= a2◂ [ a21◂ [ a9◂ [ ]{| l |}]] ) %1980~1'(= r ) %1979~0'(= r ) %1975~8'(= a35◂ [ *{ }] ) 
; #118 5'(= a17◂ [ a9◂ [ ]{| l |}] ) ⊢ 2(<3)◂5'(= a17◂ [ a9◂ [ ]{| l |}] )
;; rsp=1 , %1987~2(<3)◂5'(= a17◂ [ a9◂ [ ]{| l |}] ) %1986~6'(= a7◂ [ *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}] ) %1984~4'(= a2◂ [ a21◂ [ a9◂ [ ]{| l |}]] ) %1980~1'(= r ) %1979~0'(= r ) %1975~8'(= a35◂ [ *{ }] ) 
; #52 { { 4'(= a2◂ [ a21◂ [ a9◂ [ ]{| l |}]] ) 2(<3)◂5'(= a17◂ [ a9◂ [ ]{| l |}] ) } 6'(= a7◂ [ *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}] ) } ⊢ 0(<2)◂{ { 4'(= a2◂ [ a21◂ [ a9◂ [ ]{| l |}]] ) 2(<3)◂5'(= a17◂ [ a9◂ [ ]{| l |}] ) } 6'(= a7◂ [ *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}] ) }
;; rsp=1 , %1988~0(<2)◂{ { 4'(= a2◂ [ a21◂ [ a9◂ [ ]{| l |}]] ) 2(<3)◂5'(= a17◂ [ a9◂ [ ]{| l |}] ) } 6'(= a7◂ [ *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}] ) } %1980~1'(= r ) %1979~0'(= r ) %1975~8'(= a35◂ [ *{ }] ) 
; #195 0(<2)◂{ { 4'(= a2◂ [ a21◂ [ a9◂ [ ]{| l |}]] ) 2(<3)◂5'(= a17◂ [ a9◂ [ ]{| l |}] ) } 6'(= a7◂ [ *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}] ) } ⊢ 0(<2)◂0(<2)◂{ { 4'(= a2◂ [ a21◂ [ a9◂ [ ]{| l |}]] ) 2(<3)◂5'(= a17◂ [ a9◂ [ ]{| l |}] ) } 6'(= a7◂ [ *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}] ) }
;; rsp=1 , %1989~0(<2)◂0(<2)◂{ { 4'(= a2◂ [ a21◂ [ a9◂ [ ]{| l |}]] ) 2(<3)◂5'(= a17◂ [ a9◂ [ ]{| l |}] ) } 6'(= a7◂ [ *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}] ) } %1980~1'(= r ) %1979~0'(= r ) %1975~8'(= a35◂ [ *{ }] ) 
; #24 0(<2)◂0(<2)◂{ { 4'(= a2◂ [ a21◂ [ a9◂ [ ]{| l |}]] ) 2(<3)◂5'(= a17◂ [ a9◂ [ ]{| l |}] ) } 6'(= a7◂ [ *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}] ) } ⊢ 0(<2)◂0(<2)◂0(<2)◂{ { 4'(= a2◂ [ a21◂ [ a9◂ [ ]{| l |}]] ) 2(<3)◂5'(= a17◂ [ a9◂ [ ]{| l |}] ) } 6'(= a7◂ [ *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}] ) }
;; rsp=1 , %1990~0(<2)◂0(<2)◂0(<2)◂{ { 4'(= a2◂ [ a21◂ [ a9◂ [ ]{| l |}]] ) 2(<3)◂5'(= a17◂ [ a9◂ [ ]{| l |}] ) } 6'(= a7◂ [ *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}] ) } %1980~1'(= r ) %1979~0'(= r ) %1975~8'(= a35◂ [ *{ }] ) 
; ∎ 0(<2)◂0(<2)◂0(<2)◂{ { 4'(= a2◂ [ a21◂ [ a9◂ [ ]{| l |}]] ) 2(<3)◂5'(= a17◂ [ a9◂ [ ]{| l |}] ) } 6'(= a7◂ [ *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}] ) }
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 8'(= a35◂ [ *{ }] )
	mov rdi,QWORD [rsp-8+8*1]
	C_PUSH_REGS
	mov r8,rdi
	call LB_1701
	C_POP_REGS
; .mov_ptn2 0(<2)◂0(<2)◂0(<2)◂{ { 4'(= a2◂ [ a21◂ [ a9◂ [ ]{| l |}]] ) 2(<3)◂5'(= a17◂ [ a9◂ [ ]{| l |}] ) } 6'(= a7◂ [ *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}] ) } ⊢ 2'(= a3◂ [ a35◂ [ a7◂ [ *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}]]] )
; .mov_ptn 0(<2)◂0(<2)◂0(<2)◂{ { 4'(= a2◂ [ a21◂ [ a9◂ [ ]{| l |}]] ) 2(<3)◂5'(= a17◂ [ a9◂ [ ]{| l |}] ) } 6'(= a7◂ [ *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}] ) } ⊢ 2'(= a3◂ [ a35◂ [ a7◂ [ *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}]]] )
	ALC_RCD 2, rax
	mov r13,rax
	ALC_RCD 2, rax
	mov r14,rax
	mov rax,r10
	mov QWORD [r14+8+8*0],rax
	mov rax,r11
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],2
	mov QWORD [rax+8],rdi
	mov QWORD [r14+8+8*1],rax
	mov rax,r14
	mov QWORD [r13+8+8*0],rax
	mov rax,rcx
	mov QWORD [r13+8+8*1],rax
	mov rax,r13
	mov BYTE [rax+6],0
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,8
	jmp LB_3139
LB_3144:
;; ?. 2'(= a35◂ [ *{ *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a17◂ [ a9◂ [ ]{| l |}]}a7◂ [ *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}]}] ) ⊢ 1(<2)◂3'(= a2◂ [ *{ rr{| l |}}] )
	mov QWORD [GBG_VCT+8*0],rdi
	mov r9,QWORD [rdi+8]
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_LN rdi
;; rsp=1 , %1983~3'(= a2◂ [ *{ rr{| l |}}] ) %1980~1'(= r ) %1979~0'(= r ) %1975~8'(= a35◂ [ *{ }] ) 
; #194 3'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 1(<2)◂3'(= a2◂ [ *{ rr{| l |}}] )
;; rsp=1 , %1991~1(<2)◂3'(= a2◂ [ *{ rr{| l |}}] ) %1980~1'(= r ) %1979~0'(= r ) %1975~8'(= a35◂ [ *{ }] ) 
; #24 1(<2)◂3'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 0(<2)◂1(<2)◂3'(= a2◂ [ *{ rr{| l |}}] )
;; rsp=1 , %1992~0(<2)◂1(<2)◂3'(= a2◂ [ *{ rr{| l |}}] ) %1980~1'(= r ) %1979~0'(= r ) %1975~8'(= a35◂ [ *{ }] ) 
; ∎ 0(<2)◂1(<2)◂3'(= a2◂ [ *{ rr{| l |}}] )
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 8'(= a35◂ [ *{ }] )
	mov rdi,QWORD [rsp-8+8*1]
	C_PUSH_REGS
	mov r8,rdi
	call LB_1701
	C_POP_REGS
; .mov_ptn2 0(<2)◂1(<2)◂3'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 2'(= a3◂ [ a35◂ [ a7◂ [ *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}]]] )
; .mov_ptn 0(<2)◂1(<2)◂3'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 2'(= a3◂ [ a35◂ [ a7◂ [ *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}]]] )
	mov rax,r9
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],1
	mov QWORD [rax+8],rdi
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,8
	jmp LB_3139
LB_3139:
	cmp BYTE [r8+6],0
	jnz LB_3100
	POP_GRM_SCC
	ret
LB_3100:
	POP_GRM_FAIL 
	ret
ETR_239:
	mov r9,0x0000_ffff_ffff_ffff
	and r9,[r13]
	call GRM_239
	ret
GRM_239:
	PUSH_GRM
	jmp LB_3147
LB_3146:
	add r14,1 
LB_3147:
	cmp r14,r9
	jge LB_3148
	JZ_LINE_SPC BYTE [r13+8+r14], LB_3146
LB_3148
	call GRM_219
	cmp BYTE [r8+6],0
	jnz LB_3151
	jmp LB_3152
LB_3151:
	jmp LB_3149
LB_3152:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a35◂ [ *{ }] ) ⊢ 8'(= a35◂ [ *{ }] )
; .mov_ptn 2'(= a35◂ [ *{ }] ) ⊢ 8'(= a35◂ [ *{ }] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_3150
LB_3149:
	add rsp,0
	jmp LB_3145
LB_3150:
	jmp LB_3154
LB_3153:
	add r14,1 
LB_3154:
	cmp r14,r9
	jge LB_3155
	JZ_LINE_SPC BYTE [r13+8+r14], LB_3153
LB_3155
	lea rax,[r14+4]
	cmp rax,r9
	jg LB_3158
	jmp LB_3159
LB_3158:
	mov r8,unt_1
	jmp LB_3156
LB_3159:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],226
	jnz LB_3160
	cmp BYTE [rdi+1],136
	jnz LB_3160
	cmp BYTE [rdi+2],144
	jnz LB_3160
	cmp BYTE [rdi+3],46
	jnz LB_3160
	jmp LB_3161
LB_3160:
	mov r8,unt_1
	jmp LB_3156
LB_3161:
	add r14,4
	jmp LB_3157
LB_3156:
	add rsp,8
	jmp LB_3145
LB_3157:
	jmp LB_3163
LB_3162:
	add r14,1 
LB_3163:
	cmp r14,r9
	jge LB_3164
	JZ_LINE_SPC BYTE [r13+8+r14], LB_3162
LB_3164
	call GRM_199
	cmp BYTE [r8+6],0
	jnz LB_3167
	jmp LB_3168
LB_3167:
	jmp LB_3165
LB_3168:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a8◂ [ a14◂ [ a9◂ [ ]{| l |}]] ) ⊢ 9'(= a8◂ [ a14◂ [ a9◂ [ ]{| l |}]] )
; .mov_ptn 2'(= a8◂ [ a14◂ [ a9◂ [ ]{| l |}]] ) ⊢ 9'(= a8◂ [ a14◂ [ a9◂ [ ]{| l |}]] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_3166
LB_3165:
	add rsp,8
	POP_GRM_FAIL
	ret
LB_3166:
	jmp LB_3170
LB_3169:
	add r14,1 
LB_3170:
	cmp r14,r9
	jge LB_3171
	JZ_LINE_SPC BYTE [r13+8+r14], LB_3169
LB_3171
	call GRM_243
	cmp BYTE [r8+6],0
	jnz LB_3174
	jmp LB_3175
LB_3174:
	jmp LB_3172
LB_3175:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a35◂ [ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]] ) ⊢ 10'(= a35◂ [ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]] )
; .mov_ptn 2'(= a35◂ [ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]] ) ⊢ 10'(= a35◂ [ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_3173
LB_3172:
	add rsp,16
	POP_GRM_FAIL
	ret
LB_3173:
	jmp LB_3177
LB_3176:
	add r14,1 
LB_3177:
	cmp r14,r9
	jge LB_3178
	JZ_LINE_SPC BYTE [r13+8+r14], LB_3176
LB_3178
	call GRM_236
	cmp BYTE [r8+6],0
	jnz LB_3181
	jmp LB_3182
LB_3181:
	jmp LB_3179
LB_3182:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a35◂ [ a17◂ [ a9◂ [ ]{| l |}]] ) ⊢ 11'(= a35◂ [ a17◂ [ a9◂ [ ]{| l |}]] )
; .mov_ptn 2'(= a35◂ [ a17◂ [ a9◂ [ ]{| l |}]] ) ⊢ 11'(= a35◂ [ a17◂ [ a9◂ [ ]{| l |}]] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_3180
LB_3179:
	add rsp,24
	POP_GRM_FAIL
	ret
LB_3180:
	mov QWORD [rsp+8*4],r14
	mov r13,QWORD [rsp+16+8*4]
	mov r14,QWORD [rsp+8*4]
	jmp LB_3183
LB_3183
;; rsp=4 , %1998~1'(= r ) %1997~0'(= r ) %1996~11'(= a35◂ [ a17◂ [ a9◂ [ ]{| l |}]] ) %1995~10'(= a35◂ [ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]] ) %1994~9'(= a8◂ [ a14◂ [ a9◂ [ ]{| l |}]] ) %1993~8'(= a35◂ [ *{ }] ) 
; #196 { 10'(= a35◂ [ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]] ) 11'(= a35◂ [ a17◂ [ a9◂ [ ]{| l |}]] ) } ⊢ 2'(= a35◂ [ *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a17◂ [ a9◂ [ ]{| l |}]}] )
	sub rsp,16
	mov QWORD [rsp+8*0],r13
	mov QWORD [rsp+8*1],r14
; .mov_ptn2 { 10'(= a35◂ [ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]] ) 11'(= a35◂ [ a17◂ [ a9◂ [ ]{| l |}]] ) } ⊢ { 0'(= a35◂ [ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]] ) 1'(= a35◂ [ a17◂ [ a9◂ [ ]{| l |}]] ) }
; .mov_ptn 11'(= a35◂ [ a17◂ [ a9◂ [ ]{| l |}]] ) ⊢ 1'(= a35◂ [ a17◂ [ a9◂ [ ]{| l |}]] )
	mov rax,QWORD [rsp-8+8*3]
	mov r14,rax
; .mov_ptn 10'(= a35◂ [ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]] ) ⊢ 0'(= a35◂ [ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]] )
	mov rax,QWORD [rsp-8+8*4]
	mov r13,rax
	call LB_3095
	mov r14,QWORD [rsp-8+8*2]
	mov r8,r13
	mov r13,QWORD [rsp-8+8*1]
	add rsp,32
;; rsp=2 , %1999~2'(= a35◂ [ *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a17◂ [ a9◂ [ ]{| l |}]}] ) %1998~1'(= r ) %1997~0'(= r ) %1994~9'(= a8◂ [ a14◂ [ a9◂ [ ]{| l |}]] ) %1993~8'(= a35◂ [ *{ }] ) 
;; ? 2'(= a35◂ [ *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a17◂ [ a9◂ [ ]{| l |}]}] ) ⊢ 0(<2)◂{ 3'(= a2◂ [ a21◂ [ a9◂ [ ]{| l |}]] ) 4'(= a17◂ [ a9◂ [ ]{| l |}] ) }
	mov rdi,r8
	cmp BYTE [rdi+6],0
	jnz LB_3185
	mov r9, QWORD [r8+8]
	mov r10, QWORD [r8+16]
	mov QWORD [GBG_VCT+8*0],r8
	mov rdi,QWORD [GBG_VCT+8*0]
	mov rax,[SS_RCD_2_TOP]
	mov QWORD [rdi],rax 
	mov QWORD [SS_RCD_2_TOP],rdi
;; rsp=2 , %2002~4'(= a17◂ [ a9◂ [ ]{| l |}] ) %2001~3'(= a2◂ [ a21◂ [ a9◂ [ ]{| l |}]] ) %1998~1'(= r ) %1997~0'(= r ) %1994~9'(= a8◂ [ a14◂ [ a9◂ [ ]{| l |}]] ) %1993~8'(= a35◂ [ *{ }] ) 
; #118 4'(= a17◂ [ a9◂ [ ]{| l |}] ) ⊢ 2(<3)◂4'(= a17◂ [ a9◂ [ ]{| l |}] )
;; rsp=2 , %2003~2(<3)◂4'(= a17◂ [ a9◂ [ ]{| l |}] ) %2001~3'(= a2◂ [ a21◂ [ a9◂ [ ]{| l |}]] ) %1998~1'(= r ) %1997~0'(= r ) %1994~9'(= a8◂ [ a14◂ [ a9◂ [ ]{| l |}]] ) %1993~8'(= a35◂ [ *{ }] ) 
; #51 { 9'(= a8◂ [ a14◂ [ a9◂ [ ]{| l |}]] ) 3'(= a2◂ [ a21◂ [ a9◂ [ ]{| l |}]] ) 2(<3)◂4'(= a17◂ [ a9◂ [ ]{| l |}] ) } ⊢ 1(<2)◂{ 9'(= a8◂ [ a14◂ [ a9◂ [ ]{| l |}]] ) 3'(= a2◂ [ a21◂ [ a9◂ [ ]{| l |}]] ) 2(<3)◂4'(= a17◂ [ a9◂ [ ]{| l |}] ) }
;; rsp=2 , %2004~1(<2)◂{ 9'(= a8◂ [ a14◂ [ a9◂ [ ]{| l |}]] ) 3'(= a2◂ [ a21◂ [ a9◂ [ ]{| l |}]] ) 2(<3)◂4'(= a17◂ [ a9◂ [ ]{| l |}] ) } %1998~1'(= r ) %1997~0'(= r ) %1993~8'(= a35◂ [ *{ }] ) 
; #195 1(<2)◂{ 9'(= a8◂ [ a14◂ [ a9◂ [ ]{| l |}]] ) 3'(= a2◂ [ a21◂ [ a9◂ [ ]{| l |}]] ) 2(<3)◂4'(= a17◂ [ a9◂ [ ]{| l |}] ) } ⊢ 0(<2)◂1(<2)◂{ 9'(= a8◂ [ a14◂ [ a9◂ [ ]{| l |}]] ) 3'(= a2◂ [ a21◂ [ a9◂ [ ]{| l |}]] ) 2(<3)◂4'(= a17◂ [ a9◂ [ ]{| l |}] ) }
;; rsp=2 , %2005~0(<2)◂1(<2)◂{ 9'(= a8◂ [ a14◂ [ a9◂ [ ]{| l |}]] ) 3'(= a2◂ [ a21◂ [ a9◂ [ ]{| l |}]] ) 2(<3)◂4'(= a17◂ [ a9◂ [ ]{| l |}] ) } %1998~1'(= r ) %1997~0'(= r ) %1993~8'(= a35◂ [ *{ }] ) 
; #24 0(<2)◂1(<2)◂{ 9'(= a8◂ [ a14◂ [ a9◂ [ ]{| l |}]] ) 3'(= a2◂ [ a21◂ [ a9◂ [ ]{| l |}]] ) 2(<3)◂4'(= a17◂ [ a9◂ [ ]{| l |}] ) } ⊢ 0(<2)◂0(<2)◂1(<2)◂{ 9'(= a8◂ [ a14◂ [ a9◂ [ ]{| l |}]] ) 3'(= a2◂ [ a21◂ [ a9◂ [ ]{| l |}]] ) 2(<3)◂4'(= a17◂ [ a9◂ [ ]{| l |}] ) }
;; rsp=2 , %2006~0(<2)◂0(<2)◂1(<2)◂{ 9'(= a8◂ [ a14◂ [ a9◂ [ ]{| l |}]] ) 3'(= a2◂ [ a21◂ [ a9◂ [ ]{| l |}]] ) 2(<3)◂4'(= a17◂ [ a9◂ [ ]{| l |}] ) } %1998~1'(= r ) %1997~0'(= r ) %1993~8'(= a35◂ [ *{ }] ) 
; ∎ 0(<2)◂0(<2)◂1(<2)◂{ 9'(= a8◂ [ a14◂ [ a9◂ [ ]{| l |}]] ) 3'(= a2◂ [ a21◂ [ a9◂ [ ]{| l |}]] ) 2(<3)◂4'(= a17◂ [ a9◂ [ ]{| l |}] ) }
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 8'(= a35◂ [ *{ }] )
	mov rdi,QWORD [rsp-8+8*2]
	C_PUSH_REGS
	mov r8,rdi
	call LB_1701
	C_POP_REGS
; .mov_ptn2 0(<2)◂0(<2)◂1(<2)◂{ 9'(= a8◂ [ a14◂ [ a9◂ [ ]{| l |}]] ) 3'(= a2◂ [ a21◂ [ a9◂ [ ]{| l |}]] ) 2(<3)◂4'(= a17◂ [ a9◂ [ ]{| l |}] ) } ⊢ 2'(= a3◂ [ a35◂ [ a7◂ [ *{ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}]]] )
; .mov_ptn 0(<2)◂0(<2)◂1(<2)◂{ 9'(= a8◂ [ a14◂ [ a9◂ [ ]{| l |}]] ) 3'(= a2◂ [ a21◂ [ a9◂ [ ]{| l |}]] ) 2(<3)◂4'(= a17◂ [ a9◂ [ ]{| l |}] ) } ⊢ 2'(= a3◂ [ a35◂ [ a7◂ [ *{ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}]]] )
	ALC_RCD 3, rax
	mov r13,rax
	mov rax,QWORD [rsp-8+8*1]
	mov QWORD [r13+8+8*0],rax
	mov rax,r9
	mov QWORD [r13+8+8*1],rax
	mov rax,r10
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],2
	mov QWORD [rax+8],rdi
	mov QWORD [r13+8+8*2],rax
	mov rax,r13
	mov BYTE [rax+6],1
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,16
	jmp LB_3184
LB_3185:
;; ?. 2'(= a35◂ [ *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a17◂ [ a9◂ [ ]{| l |}]}] ) ⊢ 1(<2)◂3'(= a2◂ [ *{ rr{| l |}}] )
	mov QWORD [GBG_VCT+8*0],rdi
	mov r9,QWORD [rdi+8]
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_LN rdi
;; rsp=2 , %2000~3'(= a2◂ [ *{ rr{| l |}}] ) %1998~1'(= r ) %1997~0'(= r ) %1994~9'(= a8◂ [ a14◂ [ a9◂ [ ]{| l |}]] ) %1993~8'(= a35◂ [ *{ }] ) 
; #194 3'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 1(<2)◂3'(= a2◂ [ *{ rr{| l |}}] )
;; rsp=2 , %2007~1(<2)◂3'(= a2◂ [ *{ rr{| l |}}] ) %1998~1'(= r ) %1997~0'(= r ) %1994~9'(= a8◂ [ a14◂ [ a9◂ [ ]{| l |}]] ) %1993~8'(= a35◂ [ *{ }] ) 
; #24 1(<2)◂3'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 0(<2)◂1(<2)◂3'(= a2◂ [ *{ rr{| l |}}] )
;; rsp=2 , %2008~0(<2)◂1(<2)◂3'(= a2◂ [ *{ rr{| l |}}] ) %1998~1'(= r ) %1997~0'(= r ) %1994~9'(= a8◂ [ a14◂ [ a9◂ [ ]{| l |}]] ) %1993~8'(= a35◂ [ *{ }] ) 
; ∎ 0(<2)◂1(<2)◂3'(= a2◂ [ *{ rr{| l |}}] )
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 9'(= a8◂ [ a14◂ [ a9◂ [ ]{| l |}]] )
	mov rdi,QWORD [rsp-8+8*1]
	C_PUSH_REGS
	mov r8,rdi
	call LB_376
	C_POP_REGS
; .dlt.ptn 8'(= a35◂ [ *{ }] )
	mov rdi,QWORD [rsp-8+8*2]
	C_PUSH_REGS
	mov r8,rdi
	call LB_1701
	C_POP_REGS
; .mov_ptn2 0(<2)◂1(<2)◂3'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 2'(= a3◂ [ a35◂ [ a7◂ [ *{ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}]]] )
; .mov_ptn 0(<2)◂1(<2)◂3'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 2'(= a3◂ [ a35◂ [ a7◂ [ *{ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}]]] )
	mov rax,r9
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],1
	mov QWORD [rax+8],rdi
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,16
	jmp LB_3184
LB_3184:
	cmp BYTE [r8+6],0
	jnz LB_3145
	POP_GRM_SCC
	ret
LB_3145:
	RB_GRM
	jmp LB_3188
LB_3187:
	add r14,1 
LB_3188:
	cmp r14,r9
	jge LB_3189
	JZ_LINE_SPC BYTE [r13+8+r14], LB_3187
LB_3189
	call GRM_219
	cmp BYTE [r8+6],0
	jnz LB_3192
	jmp LB_3193
LB_3192:
	jmp LB_3190
LB_3193:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a35◂ [ *{ }] ) ⊢ 8'(= a35◂ [ *{ }] )
; .mov_ptn 2'(= a35◂ [ *{ }] ) ⊢ 8'(= a35◂ [ *{ }] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_3191
LB_3190:
	add rsp,0
	jmp LB_3186
LB_3191:
	jmp LB_3195
LB_3194:
	add r14,1 
LB_3195:
	cmp r14,r9
	jge LB_3196
	JZ_LINE_SPC BYTE [r13+8+r14], LB_3194
LB_3196
	lea rax,[r14+3]
	cmp rax,r9
	jg LB_3199
	jmp LB_3200
LB_3199:
	mov r8,unt_1
	jmp LB_3197
LB_3200:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],226
	jnz LB_3201
	cmp BYTE [rdi+1],136
	jnz LB_3201
	cmp BYTE [rdi+2],144
	jnz LB_3201
	jmp LB_3202
LB_3201:
	mov r8,unt_1
	jmp LB_3197
LB_3202:
	add r14,3
	jmp LB_3198
LB_3197:
	add rsp,8
	jmp LB_3186
LB_3198:
	jmp LB_3204
LB_3203:
	add r14,1 
LB_3204:
	cmp r14,r9
	jge LB_3205
	JZ_LINE_SPC BYTE [r13+8+r14], LB_3203
LB_3205
	call GRM_199
	cmp BYTE [r8+6],0
	jnz LB_3208
	jmp LB_3209
LB_3208:
	jmp LB_3206
LB_3209:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a8◂ [ a14◂ [ a9◂ [ ]{| l |}]] ) ⊢ 9'(= a8◂ [ a14◂ [ a9◂ [ ]{| l |}]] )
; .mov_ptn 2'(= a8◂ [ a14◂ [ a9◂ [ ]{| l |}]] ) ⊢ 9'(= a8◂ [ a14◂ [ a9◂ [ ]{| l |}]] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_3207
LB_3206:
	add rsp,8
	jmp LB_3186
LB_3207:
	jmp LB_3211
LB_3210:
	add r14,1 
LB_3211:
	cmp r14,r9
	jge LB_3212
	JZ_LINE_SPC BYTE [r13+8+r14], LB_3210
LB_3212
	call GRM_243
	cmp BYTE [r8+6],0
	jnz LB_3215
	jmp LB_3216
LB_3215:
	jmp LB_3213
LB_3216:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a35◂ [ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]] ) ⊢ 10'(= a35◂ [ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]] )
; .mov_ptn 2'(= a35◂ [ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]] ) ⊢ 10'(= a35◂ [ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_3214
LB_3213:
	add rsp,16
	jmp LB_3186
LB_3214:
	jmp LB_3218
LB_3217:
	add r14,1 
LB_3218:
	cmp r14,r9
	jge LB_3219
	JZ_LINE_SPC BYTE [r13+8+r14], LB_3217
LB_3219
	call GRM_236
	cmp BYTE [r8+6],0
	jnz LB_3222
	jmp LB_3223
LB_3222:
	jmp LB_3220
LB_3223:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a35◂ [ a17◂ [ a9◂ [ ]{| l |}]] ) ⊢ 11'(= a35◂ [ a17◂ [ a9◂ [ ]{| l |}]] )
; .mov_ptn 2'(= a35◂ [ a17◂ [ a9◂ [ ]{| l |}]] ) ⊢ 11'(= a35◂ [ a17◂ [ a9◂ [ ]{| l |}]] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_3221
LB_3220:
	add rsp,24
	jmp LB_3186
LB_3221:
	jmp LB_3225
LB_3224:
	add r14,1 
LB_3225:
	cmp r14,r9
	jge LB_3226
	JZ_LINE_SPC BYTE [r13+8+r14], LB_3224
LB_3226
	call GRM_239
	cmp BYTE [r8+6],0
	jnz LB_3229
	jmp LB_3230
LB_3229:
	jmp LB_3227
LB_3230:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a35◂ [ a7◂ [ *{ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}]] ) ⊢ 12'(= a35◂ [ a7◂ [ *{ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}]] )
; .mov_ptn 2'(= a35◂ [ a7◂ [ *{ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}]] ) ⊢ 12'(= a35◂ [ a7◂ [ *{ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}]] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_3228
LB_3227:
	add rsp,32
	jmp LB_3186
LB_3228:
	mov QWORD [rsp+8*5],r14
	mov r13,QWORD [rsp+16+8*5]
	mov r14,QWORD [rsp+8*5]
	jmp LB_3231
LB_3231
;; rsp=5 , %2015~1'(= r ) %2014~0'(= r ) %2013~12'(= a35◂ [ a7◂ [ *{ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}]] ) %2012~11'(= a35◂ [ a17◂ [ a9◂ [ ]{| l |}]] ) %2011~10'(= a35◂ [ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]] ) %2010~9'(= a8◂ [ a14◂ [ a9◂ [ ]{| l |}]] ) %2009~8'(= a35◂ [ *{ }] ) 
; #196 { 10'(= a35◂ [ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]] ) 11'(= a35◂ [ a17◂ [ a9◂ [ ]{| l |}]] ) } ⊢ 2'(= a35◂ [ *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a17◂ [ a9◂ [ ]{| l |}]}] )
	sub rsp,16
	mov QWORD [rsp+8*0],r13
	mov QWORD [rsp+8*1],r14
; .mov_ptn2 { 10'(= a35◂ [ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]] ) 11'(= a35◂ [ a17◂ [ a9◂ [ ]{| l |}]] ) } ⊢ { 0'(= a35◂ [ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]] ) 1'(= a35◂ [ a17◂ [ a9◂ [ ]{| l |}]] ) }
; .mov_ptn 11'(= a35◂ [ a17◂ [ a9◂ [ ]{| l |}]] ) ⊢ 1'(= a35◂ [ a17◂ [ a9◂ [ ]{| l |}]] )
	mov rax,QWORD [rsp-8+8*4]
	mov r14,rax
; .mov_ptn 10'(= a35◂ [ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]] ) ⊢ 0'(= a35◂ [ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]] )
	mov rax,QWORD [rsp-8+8*5]
	mov r13,rax
	call LB_3095
	mov r14,QWORD [rsp-8+8*2]
	mov r8,r13
	mov r13,QWORD [rsp-8+8*1]
	add rsp,16
;; rsp=5 , %2016~2'(= a35◂ [ *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a17◂ [ a9◂ [ ]{| l |}]}] ) %2015~1'(= r ) %2014~0'(= r ) %2013~12'(= a35◂ [ a7◂ [ *{ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}]] ) %2010~9'(= a8◂ [ a14◂ [ a9◂ [ ]{| l |}]] ) %2009~8'(= a35◂ [ *{ }] ) 
; #196 { 2'(= a35◂ [ *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a17◂ [ a9◂ [ ]{| l |}]}] ) 12'(= a35◂ [ a7◂ [ *{ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}]] ) } ⊢ 2'(= a35◂ [ *{ *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a17◂ [ a9◂ [ ]{| l |}]}a7◂ [ *{ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}]}] )
	sub rsp,16
	mov QWORD [rsp+8*0],r13
	mov QWORD [rsp+8*1],r14
; .mov_ptn2 { 2'(= a35◂ [ *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a17◂ [ a9◂ [ ]{| l |}]}] ) 12'(= a35◂ [ a7◂ [ *{ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}]] ) } ⊢ { 0'(= a35◂ [ *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a17◂ [ a9◂ [ ]{| l |}]}] ) 1'(= a35◂ [ a7◂ [ *{ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}]] ) }
; .mov_ptn 12'(= a35◂ [ a7◂ [ *{ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}]] ) ⊢ 1'(= a35◂ [ a7◂ [ *{ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}]] )
	mov rax,QWORD [rsp-8+8*3]
	mov r14,rax
; .mov_ptn 2'(= a35◂ [ *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a17◂ [ a9◂ [ ]{| l |}]}] ) ⊢ 0'(= a35◂ [ *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a17◂ [ a9◂ [ ]{| l |}]}] )
	mov rax,r8
	mov r13,rax
	call LB_3233
	mov r14,QWORD [rsp-8+8*2]
	mov r8,r13
	mov r13,QWORD [rsp-8+8*1]
	add rsp,40
;; rsp=2 , %2017~2'(= a35◂ [ *{ *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a17◂ [ a9◂ [ ]{| l |}]}a7◂ [ *{ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}]}] ) %2015~1'(= r ) %2014~0'(= r ) %2010~9'(= a8◂ [ a14◂ [ a9◂ [ ]{| l |}]] ) %2009~8'(= a35◂ [ *{ }] ) 
;; ? 2'(= a35◂ [ *{ *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a17◂ [ a9◂ [ ]{| l |}]}a7◂ [ *{ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}]}] ) ⊢ 0(<2)◂{ { 4'(= a2◂ [ a21◂ [ a9◂ [ ]{| l |}]] ) 5'(= a17◂ [ a9◂ [ ]{| l |}] ) } 6'(= a7◂ [ *{ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}] ) }
	mov rdi,r8
	cmp BYTE [rdi+6],0
	jnz LB_3237
	mov r9, QWORD [r8+8]
	mov r10, QWORD [r9+8]
	mov r11, QWORD [r9+16]
	mov QWORD [GBG_VCT+8*0],r9
	mov rcx, QWORD [r8+16]
	mov QWORD [GBG_VCT+8*1],r8
	mov rdi,QWORD [GBG_VCT+8*1]
	mov rax,[SS_RCD_2_TOP]
	mov QWORD [rdi],rax 
	mov QWORD [SS_RCD_2_TOP],rdi
	mov rdi,QWORD [GBG_VCT+8*0]
	mov rax,[SS_RCD_2_TOP]
	mov QWORD [rdi],rax 
	mov QWORD [SS_RCD_2_TOP],rdi
;; rsp=2 , %2021~6'(= a7◂ [ *{ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}] ) %2020~5'(= a17◂ [ a9◂ [ ]{| l |}] ) %2019~4'(= a2◂ [ a21◂ [ a9◂ [ ]{| l |}]] ) %2015~1'(= r ) %2014~0'(= r ) %2010~9'(= a8◂ [ a14◂ [ a9◂ [ ]{| l |}]] ) %2009~8'(= a35◂ [ *{ }] ) 
; #118 5'(= a17◂ [ a9◂ [ ]{| l |}] ) ⊢ 2(<3)◂5'(= a17◂ [ a9◂ [ ]{| l |}] )
;; rsp=2 , %2022~2(<3)◂5'(= a17◂ [ a9◂ [ ]{| l |}] ) %2021~6'(= a7◂ [ *{ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}] ) %2019~4'(= a2◂ [ a21◂ [ a9◂ [ ]{| l |}]] ) %2015~1'(= r ) %2014~0'(= r ) %2010~9'(= a8◂ [ a14◂ [ a9◂ [ ]{| l |}]] ) %2009~8'(= a35◂ [ *{ }] ) 
; #52 { { 9'(= a8◂ [ a14◂ [ a9◂ [ ]{| l |}]] ) 4'(= a2◂ [ a21◂ [ a9◂ [ ]{| l |}]] ) 2(<3)◂5'(= a17◂ [ a9◂ [ ]{| l |}] ) } 6'(= a7◂ [ *{ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}] ) } ⊢ 0(<2)◂{ { 9'(= a8◂ [ a14◂ [ a9◂ [ ]{| l |}]] ) 4'(= a2◂ [ a21◂ [ a9◂ [ ]{| l |}]] ) 2(<3)◂5'(= a17◂ [ a9◂ [ ]{| l |}] ) } 6'(= a7◂ [ *{ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}] ) }
;; rsp=2 , %2023~0(<2)◂{ { 9'(= a8◂ [ a14◂ [ a9◂ [ ]{| l |}]] ) 4'(= a2◂ [ a21◂ [ a9◂ [ ]{| l |}]] ) 2(<3)◂5'(= a17◂ [ a9◂ [ ]{| l |}] ) } 6'(= a7◂ [ *{ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}] ) } %2015~1'(= r ) %2014~0'(= r ) %2009~8'(= a35◂ [ *{ }] ) 
; #195 0(<2)◂{ { 9'(= a8◂ [ a14◂ [ a9◂ [ ]{| l |}]] ) 4'(= a2◂ [ a21◂ [ a9◂ [ ]{| l |}]] ) 2(<3)◂5'(= a17◂ [ a9◂ [ ]{| l |}] ) } 6'(= a7◂ [ *{ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}] ) } ⊢ 0(<2)◂0(<2)◂{ { 9'(= a8◂ [ a14◂ [ a9◂ [ ]{| l |}]] ) 4'(= a2◂ [ a21◂ [ a9◂ [ ]{| l |}]] ) 2(<3)◂5'(= a17◂ [ a9◂ [ ]{| l |}] ) } 6'(= a7◂ [ *{ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}] ) }
;; rsp=2 , %2024~0(<2)◂0(<2)◂{ { 9'(= a8◂ [ a14◂ [ a9◂ [ ]{| l |}]] ) 4'(= a2◂ [ a21◂ [ a9◂ [ ]{| l |}]] ) 2(<3)◂5'(= a17◂ [ a9◂ [ ]{| l |}] ) } 6'(= a7◂ [ *{ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}] ) } %2015~1'(= r ) %2014~0'(= r ) %2009~8'(= a35◂ [ *{ }] ) 
; #24 0(<2)◂0(<2)◂{ { 9'(= a8◂ [ a14◂ [ a9◂ [ ]{| l |}]] ) 4'(= a2◂ [ a21◂ [ a9◂ [ ]{| l |}]] ) 2(<3)◂5'(= a17◂ [ a9◂ [ ]{| l |}] ) } 6'(= a7◂ [ *{ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}] ) } ⊢ 0(<2)◂0(<2)◂0(<2)◂{ { 9'(= a8◂ [ a14◂ [ a9◂ [ ]{| l |}]] ) 4'(= a2◂ [ a21◂ [ a9◂ [ ]{| l |}]] ) 2(<3)◂5'(= a17◂ [ a9◂ [ ]{| l |}] ) } 6'(= a7◂ [ *{ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}] ) }
;; rsp=2 , %2025~0(<2)◂0(<2)◂0(<2)◂{ { 9'(= a8◂ [ a14◂ [ a9◂ [ ]{| l |}]] ) 4'(= a2◂ [ a21◂ [ a9◂ [ ]{| l |}]] ) 2(<3)◂5'(= a17◂ [ a9◂ [ ]{| l |}] ) } 6'(= a7◂ [ *{ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}] ) } %2015~1'(= r ) %2014~0'(= r ) %2009~8'(= a35◂ [ *{ }] ) 
; ∎ 0(<2)◂0(<2)◂0(<2)◂{ { 9'(= a8◂ [ a14◂ [ a9◂ [ ]{| l |}]] ) 4'(= a2◂ [ a21◂ [ a9◂ [ ]{| l |}]] ) 2(<3)◂5'(= a17◂ [ a9◂ [ ]{| l |}] ) } 6'(= a7◂ [ *{ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}] ) }
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 8'(= a35◂ [ *{ }] )
	mov rdi,QWORD [rsp-8+8*2]
	C_PUSH_REGS
	mov r8,rdi
	call LB_1701
	C_POP_REGS
; .mov_ptn2 0(<2)◂0(<2)◂0(<2)◂{ { 9'(= a8◂ [ a14◂ [ a9◂ [ ]{| l |}]] ) 4'(= a2◂ [ a21◂ [ a9◂ [ ]{| l |}]] ) 2(<3)◂5'(= a17◂ [ a9◂ [ ]{| l |}] ) } 6'(= a7◂ [ *{ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}] ) } ⊢ 2'(= a3◂ [ a35◂ [ a7◂ [ *{ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}]]] )
; .mov_ptn 0(<2)◂0(<2)◂0(<2)◂{ { 9'(= a8◂ [ a14◂ [ a9◂ [ ]{| l |}]] ) 4'(= a2◂ [ a21◂ [ a9◂ [ ]{| l |}]] ) 2(<3)◂5'(= a17◂ [ a9◂ [ ]{| l |}] ) } 6'(= a7◂ [ *{ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}] ) } ⊢ 2'(= a3◂ [ a35◂ [ a7◂ [ *{ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}]]] )
	ALC_RCD 2, rax
	mov r13,rax
	ALC_RCD 3, rax
	mov r14,rax
	mov rax,QWORD [rsp-8+8*1]
	mov QWORD [r14+8+8*0],rax
	mov rax,r10
	mov QWORD [r14+8+8*1],rax
	mov rax,r11
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],2
	mov QWORD [rax+8],rdi
	mov QWORD [r14+8+8*2],rax
	mov rax,r14
	mov QWORD [r13+8+8*0],rax
	mov rax,rcx
	mov QWORD [r13+8+8*1],rax
	mov rax,r13
	mov BYTE [rax+6],0
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,16
	jmp LB_3232
LB_3237:
;; ?. 2'(= a35◂ [ *{ *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a17◂ [ a9◂ [ ]{| l |}]}a7◂ [ *{ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}]}] ) ⊢ 1(<2)◂3'(= a2◂ [ *{ rr{| l |}}] )
	mov QWORD [GBG_VCT+8*0],rdi
	mov r9,QWORD [rdi+8]
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_LN rdi
;; rsp=2 , %2018~3'(= a2◂ [ *{ rr{| l |}}] ) %2015~1'(= r ) %2014~0'(= r ) %2010~9'(= a8◂ [ a14◂ [ a9◂ [ ]{| l |}]] ) %2009~8'(= a35◂ [ *{ }] ) 
; #194 3'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 1(<2)◂3'(= a2◂ [ *{ rr{| l |}}] )
;; rsp=2 , %2026~1(<2)◂3'(= a2◂ [ *{ rr{| l |}}] ) %2015~1'(= r ) %2014~0'(= r ) %2010~9'(= a8◂ [ a14◂ [ a9◂ [ ]{| l |}]] ) %2009~8'(= a35◂ [ *{ }] ) 
; #24 1(<2)◂3'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 0(<2)◂1(<2)◂3'(= a2◂ [ *{ rr{| l |}}] )
;; rsp=2 , %2027~0(<2)◂1(<2)◂3'(= a2◂ [ *{ rr{| l |}}] ) %2015~1'(= r ) %2014~0'(= r ) %2010~9'(= a8◂ [ a14◂ [ a9◂ [ ]{| l |}]] ) %2009~8'(= a35◂ [ *{ }] ) 
; ∎ 0(<2)◂1(<2)◂3'(= a2◂ [ *{ rr{| l |}}] )
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 9'(= a8◂ [ a14◂ [ a9◂ [ ]{| l |}]] )
	mov rdi,QWORD [rsp-8+8*1]
	C_PUSH_REGS
	mov r8,rdi
	call LB_376
	C_POP_REGS
; .dlt.ptn 8'(= a35◂ [ *{ }] )
	mov rdi,QWORD [rsp-8+8*2]
	C_PUSH_REGS
	mov r8,rdi
	call LB_1701
	C_POP_REGS
; .mov_ptn2 0(<2)◂1(<2)◂3'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 2'(= a3◂ [ a35◂ [ a7◂ [ *{ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}]]] )
; .mov_ptn 0(<2)◂1(<2)◂3'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 2'(= a3◂ [ a35◂ [ a7◂ [ *{ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}]]] )
	mov rax,r9
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],1
	mov QWORD [rax+8],rdi
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,16
	jmp LB_3232
LB_3232:
	cmp BYTE [r8+6],0
	jnz LB_3186
	POP_GRM_SCC
	ret
LB_3186:
	POP_GRM_FAIL 
	ret
ETR_240:
	mov r9,0x0000_ffff_ffff_ffff
	and r9,[r13]
	call GRM_240
	ret
GRM_240:
	PUSH_GRM
	jmp LB_3240
LB_3239:
	add r14,1 
LB_3240:
	cmp r14,r9
	jge LB_3241
	JZ_LINE_SPC BYTE [r13+8+r14], LB_3239
LB_3241
	call GRM_241
	cmp BYTE [r8+6],0
	jnz LB_3244
	jmp LB_3245
LB_3244:
	jmp LB_3242
LB_3245:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a21◂ [ a9◂ [ ]{| l |}] ) ⊢ 8'(= a21◂ [ a9◂ [ ]{| l |}] )
; .mov_ptn 2'(= a21◂ [ a9◂ [ ]{| l |}] ) ⊢ 8'(= a21◂ [ a9◂ [ ]{| l |}] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_3243
LB_3242:
	add rsp,0
	jmp LB_3238
LB_3243:
	jmp LB_3247
LB_3246:
	add r14,1 
LB_3247:
	cmp r14,r9
	jge LB_3248
	JZ_LINE_SPC BYTE [r13+8+r14], LB_3246
LB_3248
	call GRM_242
	cmp BYTE [r8+6],0
	jnz LB_3251
	jmp LB_3252
LB_3251:
	jmp LB_3249
LB_3252:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a2◂ [ a21◂ [ a9◂ [ ]{| l |}]] ) ⊢ 9'(= a2◂ [ a21◂ [ a9◂ [ ]{| l |}]] )
; .mov_ptn 2'(= a2◂ [ a21◂ [ a9◂ [ ]{| l |}]] ) ⊢ 9'(= a2◂ [ a21◂ [ a9◂ [ ]{| l |}]] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_3250
LB_3249:
	add rsp,8
	jmp LB_3238
LB_3250:
	mov QWORD [rsp+8*2],r14
	mov r13,QWORD [rsp+16+8*2]
	mov r14,QWORD [rsp+8*2]
	jmp LB_3253
LB_3253
;; rsp=2 , %2031~1'(= r ) %2030~0'(= r ) %2029~9'(= a2◂ [ a21◂ [ a9◂ [ ]{| l |}]] ) %2028~8'(= a21◂ [ a9◂ [ ]{| l |}] ) 
; #23 { 8'(= a21◂ [ a9◂ [ ]{| l |}] ) 9'(= a2◂ [ a21◂ [ a9◂ [ ]{| l |}]] ) } ⊢ 0(<2)◂{ 8'(= a21◂ [ a9◂ [ ]{| l |}] ) 9'(= a2◂ [ a21◂ [ a9◂ [ ]{| l |}]] ) }
;; rsp=2 , %2032~0(<2)◂{ 8'(= a21◂ [ a9◂ [ ]{| l |}] ) 9'(= a2◂ [ a21◂ [ a9◂ [ ]{| l |}]] ) } %2031~1'(= r ) %2030~0'(= r ) 
; #195 0(<2)◂{ 8'(= a21◂ [ a9◂ [ ]{| l |}] ) 9'(= a2◂ [ a21◂ [ a9◂ [ ]{| l |}]] ) } ⊢ 0(<2)◂0(<2)◂{ 8'(= a21◂ [ a9◂ [ ]{| l |}] ) 9'(= a2◂ [ a21◂ [ a9◂ [ ]{| l |}]] ) }
;; rsp=2 , %2033~0(<2)◂0(<2)◂{ 8'(= a21◂ [ a9◂ [ ]{| l |}] ) 9'(= a2◂ [ a21◂ [ a9◂ [ ]{| l |}]] ) } %2031~1'(= r ) %2030~0'(= r ) 
; #24 0(<2)◂0(<2)◂{ 8'(= a21◂ [ a9◂ [ ]{| l |}] ) 9'(= a2◂ [ a21◂ [ a9◂ [ ]{| l |}]] ) } ⊢ 0(<2)◂0(<2)◂0(<2)◂{ 8'(= a21◂ [ a9◂ [ ]{| l |}] ) 9'(= a2◂ [ a21◂ [ a9◂ [ ]{| l |}]] ) }
;; rsp=2 , %2034~0(<2)◂0(<2)◂0(<2)◂{ 8'(= a21◂ [ a9◂ [ ]{| l |}] ) 9'(= a2◂ [ a21◂ [ a9◂ [ ]{| l |}]] ) } %2031~1'(= r ) %2030~0'(= r ) 
; ∎ 0(<2)◂0(<2)◂0(<2)◂{ 8'(= a21◂ [ a9◂ [ ]{| l |}] ) 9'(= a2◂ [ a21◂ [ a9◂ [ ]{| l |}]] ) }
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂0(<2)◂0(<2)◂{ 8'(= a21◂ [ a9◂ [ ]{| l |}] ) 9'(= a2◂ [ a21◂ [ a9◂ [ ]{| l |}]] ) } ⊢ 2'(= a3◂ [ a35◂ [ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]]] )
; .mov_ptn 0(<2)◂0(<2)◂0(<2)◂{ 8'(= a21◂ [ a9◂ [ ]{| l |}] ) 9'(= a2◂ [ a21◂ [ a9◂ [ ]{| l |}]] ) } ⊢ 2'(= a3◂ [ a35◂ [ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]]] )
	ALC_RCD 2, rax
	mov r13,rax
	mov rax,QWORD [rsp-8+8*2]
	mov QWORD [r13+8+8*0],rax
	mov rax,QWORD [rsp-8+8*1]
	mov QWORD [r13+8+8*1],rax
	mov rax,r13
	mov BYTE [rax+6],0
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,16
	jmp LB_3254
LB_3254:
	cmp BYTE [r8+6],0
	jnz LB_3238
	POP_GRM_SCC
	ret
LB_3238:
	RB_GRM
	jmp LB_3257
LB_3256:
	add r14,1 
LB_3257:
	cmp r14,r9
	jge LB_3258
	JZ_LINE_SPC BYTE [r13+8+r14], LB_3256
LB_3258
	lea rax,[r14+1]
	cmp rax,r9
	jg LB_3261
	jmp LB_3262
LB_3261:
	mov r8,unt_1
	jmp LB_3259
LB_3262:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],46
	jnz LB_3263
	jmp LB_3264
LB_3263:
	mov r8,unt_1
	jmp LB_3259
LB_3264:
	add r14,1
	jmp LB_3260
LB_3259:
	add rsp,0
	jmp LB_3255
LB_3260:
	jmp LB_3266
LB_3265:
	add r14,1 
LB_3266:
	cmp r14,r9
	jge LB_3267
	JZ_LINE_SPC BYTE [r13+8+r14], LB_3265
LB_3267
	lea rax,[r14+1]
	cmp rax,r9
	jg LB_3270
	jmp LB_3271
LB_3270:
	mov r8,unt_1
	jmp LB_3268
LB_3271:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],10
	jnz LB_3272
	jmp LB_3273
LB_3272:
	mov r8,unt_1
	jmp LB_3268
LB_3273:
	add r14,1
	jmp LB_3269
LB_3268:
	add rsp,0
	jmp LB_3255
LB_3269:
	mov QWORD [rsp+8*0],r14
	mov r13,QWORD [rsp+16+8*0]
	mov r14,QWORD [rsp+8*0]
	jmp LB_3274
LB_3274
;; rsp=0 , %2036~1'(= r ) %2035~0'(= r ) 
; #22 { } ⊢ 1(<2)◂{ }
;; rsp=0 , %2037~1(<2)◂{ } %2036~1'(= r ) %2035~0'(= r ) 
; #195 1(<2)◂{ } ⊢ 0(<2)◂1(<2)◂{ }
;; rsp=0 , %2038~0(<2)◂1(<2)◂{ } %2036~1'(= r ) %2035~0'(= r ) 
; #24 0(<2)◂1(<2)◂{ } ⊢ 0(<2)◂0(<2)◂1(<2)◂{ }
;; rsp=0 , %2039~0(<2)◂0(<2)◂1(<2)◂{ } %2036~1'(= r ) %2035~0'(= r ) 
; ∎ 0(<2)◂0(<2)◂1(<2)◂{ }
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂0(<2)◂1(<2)◂{ } ⊢ 2'(= a3◂ [ a35◂ [ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]]] )
; .mov_ptn 0(<2)◂0(<2)◂1(<2)◂{ } ⊢ 2'(= a3◂ [ a35◂ [ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]]] )
	mov rax,unt 
	mov rax,unt_1
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	jmp LB_3275
LB_3275:
	cmp BYTE [r8+6],0
	jnz LB_3255
	POP_GRM_SCC
	ret
LB_3255:
	RB_GRM
	jmp LB_3278
LB_3277:
	add r14,1 
LB_3278:
	cmp r14,r9
	jge LB_3279
	JZ_LINE_SPC BYTE [r13+8+r14], LB_3277
LB_3279
	call GRM_222
	cmp BYTE [r8+6],0
	jnz LB_3282
	jmp LB_3283
LB_3282:
	jmp LB_3280
LB_3283:
	sub rsp,16
; .mov_ptn2 2'(= *{ rr} ) ⊢ { 8'(= r ) 9'(= r ) }
; .mov_ptn 2'(= *{ rr} ) ⊢ { 8'(= r ) 9'(= r ) }
	mov r10, QWORD [r8+8]
	mov QWORD [rsp-8+8*2],r10
	mov r11, QWORD [r8+16]
	mov QWORD [rsp-8+8*1],r11
	jmp LB_3281
LB_3280:
	add rsp,0
	jmp LB_3276
LB_3281:
	mov QWORD [rsp+8*2],r14
	mov r13,QWORD [rsp+16+8*2]
	mov r14,QWORD [rsp+8*2]
	jmp LB_3284
LB_3284
;; rsp=2 , %2042~1'(= r ) %2041~0'(= r ) %2040~{ 8'(= r ) 9'(= r ) } 
; $ %[ "mtc_line 0" ] ⊢ %[ "mtc_line 0" ]
;; rsp=2 , %2043~%[ "mtc_line 0" ] %2042~1'(= r ) %2041~0'(= r ) %2040~{ 8'(= r ) 9'(= r ) } 
; #22 { } ⊢ 1(<2)◂{ }
;; rsp=2 , %2044~1(<2)◂{ } %2043~%[ "mtc_line 0" ] %2042~1'(= r ) %2041~0'(= r ) %2040~{ 8'(= r ) 9'(= r ) } 
; #23 { { 0'(= r ) 1'(= r ) %[ "mtc_line 0" ] } 1(<2)◂{ } } ⊢ 0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "mtc_line 0" ] } 1(<2)◂{ } }
;; rsp=2 , %2045~0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "mtc_line 0" ] } 1(<2)◂{ } } %2040~{ 8'(= r ) 9'(= r ) } 
; #194 0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "mtc_line 0" ] } 1(<2)◂{ } } ⊢ 1(<2)◂0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "mtc_line 0" ] } 1(<2)◂{ } }
;; rsp=2 , %2046~1(<2)◂0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "mtc_line 0" ] } 1(<2)◂{ } } %2040~{ 8'(= r ) 9'(= r ) } 
; #24 1(<2)◂0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "mtc_line 0" ] } 1(<2)◂{ } } ⊢ 0(<2)◂1(<2)◂0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "mtc_line 0" ] } 1(<2)◂{ } }
;; rsp=2 , %2047~0(<2)◂1(<2)◂0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "mtc_line 0" ] } 1(<2)◂{ } } %2040~{ 8'(= r ) 9'(= r ) } 
; ∎ 0(<2)◂1(<2)◂0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "mtc_line 0" ] } 1(<2)◂{ } }
; .dlt.ptn { 8'(= r ) 9'(= r ) }
	mov rdi,QWORD [rsp-8+8*2]
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
	mov rdi,QWORD [rsp-8+8*1]
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂1(<2)◂0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "mtc_line 0" ] } 1(<2)◂{ } } ⊢ 2'(= a3◂ [ a35◂ [ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]]] )
; .mov_ptn 0(<2)◂1(<2)◂0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "mtc_line 0" ] } 1(<2)◂{ } } ⊢ 2'(= a3◂ [ a35◂ [ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]]] )
	ALC_RCD 2, rax
	mov r9,rax
	ALC_RCD 3, rax
	mov r10,rax
	mov rax,r13
	mov QWORD [r10+8+8*0],rax
	mov rax,r14
	mov QWORD [r10+8+8*1],rax
	mov rsi,1  
	mov rdi,24
	xor rax,rax 
	C_CALL_SF calloc
	mov QWORD [rax],10
	mov BYTE [rax+8+0],109
	mov BYTE [rax+8+1],116
	mov BYTE [rax+8+2],99
	mov BYTE [rax+8+3],95
	mov BYTE [rax+8+4],108
	mov BYTE [rax+8+5],105
	mov BYTE [rax+8+6],110
	mov BYTE [rax+8+7],101
	mov BYTE [rax+8+8],32
	mov BYTE [rax+8+9],48
	mov QWORD [r10+8+8*2],rax
	mov rax,r10
	mov QWORD [r9+8+8*0],rax
	mov rax,unt 
	mov rax,unt_1
	mov QWORD [r9+8+8*1],rax
	mov rax,r9
	mov BYTE [rax+6],0
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],1
	mov QWORD [rax+8],rdi
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,16
	jmp LB_3285
LB_3285:
	cmp BYTE [r8+6],0
	jnz LB_3276
	POP_GRM_SCC
	ret
LB_3276:
	POP_GRM_FAIL 
	ret
ETR_241:
	mov r9,0x0000_ffff_ffff_ffff
	and r9,[r13]
	call GRM_241
	ret
GRM_241:
	PUSH_GRM
	jmp LB_3288
LB_3287:
	add r14,1 
LB_3288:
	cmp r14,r9
	jge LB_3289
	JZ_LINE_SPC BYTE [r13+8+r14], LB_3287
LB_3289
	call GRM_203
	cmp BYTE [r8+6],0
	jnz LB_3292
	jmp LB_3293
LB_3292:
	jmp LB_3290
LB_3293:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) ⊢ 8'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] )
; .mov_ptn 2'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) ⊢ 8'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_3291
LB_3290:
	add rsp,0
	jmp LB_3286
LB_3291:
	jmp LB_3295
LB_3294:
	add r14,1 
LB_3295:
	cmp r14,r9
	jge LB_3296
	JZ_LINE_SPC BYTE [r13+8+r14], LB_3294
LB_3296
	lea rax,[r14+3]
	cmp rax,r9
	jg LB_3299
	jmp LB_3300
LB_3299:
	mov r8,unt_1
	jmp LB_3297
LB_3300:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],226
	jnz LB_3301
	cmp BYTE [rdi+1],138
	jnz LB_3301
	cmp BYTE [rdi+2],162
	jnz LB_3301
	jmp LB_3302
LB_3301:
	mov r8,unt_1
	jmp LB_3297
LB_3302:
	add r14,3
	jmp LB_3298
LB_3297:
	add rsp,8
	jmp LB_3286
LB_3298:
	jmp LB_3304
LB_3303:
	add r14,1 
LB_3304:
	cmp r14,r9
	jge LB_3305
	JZ_LINE_SPC BYTE [r13+8+r14], LB_3303
LB_3305
	call GRM_191
	cmp BYTE [r8+6],0
	jnz LB_3308
	jmp LB_3309
LB_3308:
	jmp LB_3306
LB_3309:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a9◂ [ ] ) ⊢ 9'(= a9◂ [ ] )
; .mov_ptn 2'(= a9◂ [ ] ) ⊢ 9'(= a9◂ [ ] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_3307
LB_3306:
	add rsp,8
	POP_GRM_FAIL
	ret
LB_3307:
	jmp LB_3311
LB_3310:
	add r14,1 
LB_3311:
	cmp r14,r9
	jge LB_3312
	JZ_LINE_SPC BYTE [r13+8+r14], LB_3310
LB_3312
	lea rax,[r14+3]
	cmp rax,r9
	jg LB_3315
	jmp LB_3316
LB_3315:
	mov r8,unt_1
	jmp LB_3313
LB_3316:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],226
	jnz LB_3317
	cmp BYTE [rdi+1],151
	jnz LB_3317
	cmp BYTE [rdi+2],130
	jnz LB_3317
	jmp LB_3318
LB_3317:
	mov r8,unt_1
	jmp LB_3313
LB_3318:
	add r14,3
	jmp LB_3314
LB_3313:
	add rsp,16
	POP_GRM_FAIL
	ret
LB_3314:
	jmp LB_3320
LB_3319:
	add r14,1 
LB_3320:
	cmp r14,r9
	jge LB_3321
	JZ_LINE_SPC BYTE [r13+8+r14], LB_3319
LB_3321
	call GRM_199
	cmp BYTE [r8+6],0
	jnz LB_3324
	jmp LB_3325
LB_3324:
	jmp LB_3322
LB_3325:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a8◂ [ a14◂ [ a9◂ [ ]{| l |}]] ) ⊢ 10'(= a8◂ [ a14◂ [ a9◂ [ ]{| l |}]] )
; .mov_ptn 2'(= a8◂ [ a14◂ [ a9◂ [ ]{| l |}]] ) ⊢ 10'(= a8◂ [ a14◂ [ a9◂ [ ]{| l |}]] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_3323
LB_3322:
	add rsp,16
	POP_GRM_FAIL
	ret
LB_3323:
	mov QWORD [rsp+8*3],r14
	mov r13,QWORD [rsp+16+8*3]
	mov r14,QWORD [rsp+8*3]
	jmp LB_3326
LB_3326
;; rsp=3 , %2052~1'(= r ) %2051~0'(= r ) %2050~10'(= a8◂ [ a14◂ [ a9◂ [ ]{| l |}]] ) %2049~9'(= a9◂ [ ] ) %2048~8'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) 
; #98 { 9'(= a9◂ [ ] ) 10'(= a8◂ [ a14◂ [ a9◂ [ ]{| l |}]] ) } ⊢ 0(<4)◂{ 9'(= a9◂ [ ] ) 10'(= a8◂ [ a14◂ [ a9◂ [ ]{| l |}]] ) }
;; rsp=3 , %2053~0(<4)◂{ 9'(= a9◂ [ ] ) 10'(= a8◂ [ a14◂ [ a9◂ [ ]{| l |}]] ) } %2052~1'(= r ) %2051~0'(= r ) %2048~8'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) 
; #80 0(<4)◂{ 9'(= a9◂ [ ] ) 10'(= a8◂ [ a14◂ [ a9◂ [ ]{| l |}]] ) } ⊢ 1(<2)◂0(<4)◂{ 9'(= a9◂ [ ] ) 10'(= a8◂ [ a14◂ [ a9◂ [ ]{| l |}]] ) }
;; rsp=3 , %2054~1(<2)◂0(<4)◂{ 9'(= a9◂ [ ] ) 10'(= a8◂ [ a14◂ [ a9◂ [ ]{| l |}]] ) } %2052~1'(= r ) %2051~0'(= r ) %2048~8'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) 
; #117 { 8'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) 1(<2)◂0(<4)◂{ 9'(= a9◂ [ ] ) 10'(= a8◂ [ a14◂ [ a9◂ [ ]{| l |}]] ) } } ⊢ 0(<3)◂{ 8'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) 1(<2)◂0(<4)◂{ 9'(= a9◂ [ ] ) 10'(= a8◂ [ a14◂ [ a9◂ [ ]{| l |}]] ) } }
;; rsp=3 , %2055~0(<3)◂{ 8'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) 1(<2)◂0(<4)◂{ 9'(= a9◂ [ ] ) 10'(= a8◂ [ a14◂ [ a9◂ [ ]{| l |}]] ) } } %2052~1'(= r ) %2051~0'(= r ) 
; #24 0(<3)◂{ 8'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) 1(<2)◂0(<4)◂{ 9'(= a9◂ [ ] ) 10'(= a8◂ [ a14◂ [ a9◂ [ ]{| l |}]] ) } } ⊢ 0(<2)◂0(<3)◂{ 8'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) 1(<2)◂0(<4)◂{ 9'(= a9◂ [ ] ) 10'(= a8◂ [ a14◂ [ a9◂ [ ]{| l |}]] ) } }
;; rsp=3 , %2056~0(<2)◂0(<3)◂{ 8'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) 1(<2)◂0(<4)◂{ 9'(= a9◂ [ ] ) 10'(= a8◂ [ a14◂ [ a9◂ [ ]{| l |}]] ) } } %2052~1'(= r ) %2051~0'(= r ) 
; ∎ 0(<2)◂0(<3)◂{ 8'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) 1(<2)◂0(<4)◂{ 9'(= a9◂ [ ] ) 10'(= a8◂ [ a14◂ [ a9◂ [ ]{| l |}]] ) } }
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂0(<3)◂{ 8'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) 1(<2)◂0(<4)◂{ 9'(= a9◂ [ ] ) 10'(= a8◂ [ a14◂ [ a9◂ [ ]{| l |}]] ) } } ⊢ 2'(= a3◂ [ a21◂ [ a9◂ [ ]{| l |}]] )
; .mov_ptn 0(<2)◂0(<3)◂{ 8'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) 1(<2)◂0(<4)◂{ 9'(= a9◂ [ ] ) 10'(= a8◂ [ a14◂ [ a9◂ [ ]{| l |}]] ) } } ⊢ 2'(= a3◂ [ a21◂ [ a9◂ [ ]{| l |}]] )
	ALC_RCD 2, rax
	mov r13,rax
	mov rax,QWORD [rsp-8+8*3]
	mov QWORD [r13+8+8*0],rax
	ALC_RCD 2, rax
	mov r14,rax
	mov rax,QWORD [rsp-8+8*2]
	mov QWORD [r14+8+8*0],rax
	mov rax,QWORD [rsp-8+8*1]
	mov QWORD [r14+8+8*1],rax
	mov rax,r14
	mov BYTE [rax+6],0
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],1
	mov QWORD [rax+8],rdi
	mov QWORD [r13+8+8*1],rax
	mov rax,r13
	mov BYTE [rax+6],0
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,24
	jmp LB_3327
LB_3327:
	cmp BYTE [r8+6],0
	jnz LB_3286
	POP_GRM_SCC
	ret
LB_3286:
	RB_GRM
	jmp LB_3330
LB_3329:
	add r14,1 
LB_3330:
	cmp r14,r9
	jge LB_3331
	JZ_LINE_SPC BYTE [r13+8+r14], LB_3329
LB_3331
	call GRM_244
	cmp BYTE [r8+6],0
	jnz LB_3334
	jmp LB_3335
LB_3334:
	jmp LB_3332
LB_3335:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a22◂ [ a9◂ [ ]{| l |}] ) ⊢ 8'(= a22◂ [ a9◂ [ ]{| l |}] )
; .mov_ptn 2'(= a22◂ [ a9◂ [ ]{| l |}] ) ⊢ 8'(= a22◂ [ a9◂ [ ]{| l |}] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_3333
LB_3332:
	add rsp,0
	jmp LB_3328
LB_3333:
	jmp LB_3337
LB_3336:
	add r14,1 
LB_3337:
	cmp r14,r9
	jge LB_3338
	JZ_LINE_SPC BYTE [r13+8+r14], LB_3336
LB_3338
	lea rax,[r14+2]
	cmp rax,r9
	jg LB_3341
	jmp LB_3342
LB_3341:
	mov r8,unt_1
	jmp LB_3339
LB_3342:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],61
	jnz LB_3343
	cmp BYTE [rdi+1],60
	jnz LB_3343
	jmp LB_3344
LB_3343:
	mov r8,unt_1
	jmp LB_3339
LB_3344:
	add r14,2
	jmp LB_3340
LB_3339:
	add rsp,8
	jmp LB_3328
LB_3340:
	jmp LB_3346
LB_3345:
	add r14,1 
LB_3346:
	cmp r14,r9
	jge LB_3347
	JZ_LINE_SPC BYTE [r13+8+r14], LB_3345
LB_3347
	call GRM_244
	cmp BYTE [r8+6],0
	jnz LB_3350
	jmp LB_3351
LB_3350:
	jmp LB_3348
LB_3351:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a22◂ [ a9◂ [ ]{| l |}] ) ⊢ 9'(= a22◂ [ a9◂ [ ]{| l |}] )
; .mov_ptn 2'(= a22◂ [ a9◂ [ ]{| l |}] ) ⊢ 9'(= a22◂ [ a9◂ [ ]{| l |}] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_3349
LB_3348:
	add rsp,8
	jmp LB_3328
LB_3349:
	mov QWORD [rsp+8*2],r14
	mov r13,QWORD [rsp+16+8*2]
	mov r14,QWORD [rsp+8*2]
	jmp LB_3352
LB_3352
;; rsp=2 , %2060~1'(= r ) %2059~0'(= r ) %2058~9'(= a22◂ [ a9◂ [ ]{| l |}] ) %2057~8'(= a22◂ [ a9◂ [ ]{| l |}] ) 
; #115 { 8'(= a22◂ [ a9◂ [ ]{| l |}] ) 9'(= a22◂ [ a9◂ [ ]{| l |}] ) } ⊢ 2(<3)◂{ 8'(= a22◂ [ a9◂ [ ]{| l |}] ) 9'(= a22◂ [ a9◂ [ ]{| l |}] ) }
;; rsp=2 , %2061~2(<3)◂{ 8'(= a22◂ [ a9◂ [ ]{| l |}] ) 9'(= a22◂ [ a9◂ [ ]{| l |}] ) } %2060~1'(= r ) %2059~0'(= r ) 
; #24 2(<3)◂{ 8'(= a22◂ [ a9◂ [ ]{| l |}] ) 9'(= a22◂ [ a9◂ [ ]{| l |}] ) } ⊢ 0(<2)◂2(<3)◂{ 8'(= a22◂ [ a9◂ [ ]{| l |}] ) 9'(= a22◂ [ a9◂ [ ]{| l |}] ) }
;; rsp=2 , %2062~0(<2)◂2(<3)◂{ 8'(= a22◂ [ a9◂ [ ]{| l |}] ) 9'(= a22◂ [ a9◂ [ ]{| l |}] ) } %2060~1'(= r ) %2059~0'(= r ) 
; ∎ 0(<2)◂2(<3)◂{ 8'(= a22◂ [ a9◂ [ ]{| l |}] ) 9'(= a22◂ [ a9◂ [ ]{| l |}] ) }
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂2(<3)◂{ 8'(= a22◂ [ a9◂ [ ]{| l |}] ) 9'(= a22◂ [ a9◂ [ ]{| l |}] ) } ⊢ 2'(= a3◂ [ a21◂ [ a9◂ [ ]{| l |}]] )
; .mov_ptn 0(<2)◂2(<3)◂{ 8'(= a22◂ [ a9◂ [ ]{| l |}] ) 9'(= a22◂ [ a9◂ [ ]{| l |}] ) } ⊢ 2'(= a3◂ [ a21◂ [ a9◂ [ ]{| l |}]] )
	ALC_RCD 2, rax
	mov r13,rax
	mov rax,QWORD [rsp-8+8*2]
	mov QWORD [r13+8+8*0],rax
	mov rax,QWORD [rsp-8+8*1]
	mov QWORD [r13+8+8*1],rax
	mov rax,r13
	mov BYTE [rax+6],2
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,16
	jmp LB_3353
LB_3353:
	cmp BYTE [r8+6],0
	jnz LB_3328
	POP_GRM_SCC
	ret
LB_3328:
	RB_GRM
	jmp LB_3356
LB_3355:
	add r14,1 
LB_3356:
	cmp r14,r9
	jge LB_3357
	JZ_LINE_SPC BYTE [r13+8+r14], LB_3355
LB_3357
	call GRM_244
	cmp BYTE [r8+6],0
	jnz LB_3360
	jmp LB_3361
LB_3360:
	jmp LB_3358
LB_3361:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a22◂ [ a9◂ [ ]{| l |}] ) ⊢ 8'(= a22◂ [ a9◂ [ ]{| l |}] )
; .mov_ptn 2'(= a22◂ [ a9◂ [ ]{| l |}] ) ⊢ 8'(= a22◂ [ a9◂ [ ]{| l |}] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_3359
LB_3358:
	add rsp,0
	jmp LB_3354
LB_3359:
	jmp LB_3363
LB_3362:
	add r14,1 
LB_3363:
	cmp r14,r9
	jge LB_3364
	JZ_LINE_SPC BYTE [r13+8+r14], LB_3362
LB_3364
	lea rax,[r14+1]
	cmp rax,r9
	jg LB_3367
	jmp LB_3368
LB_3367:
	mov r8,unt_1
	jmp LB_3365
LB_3368:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],61
	jnz LB_3369
	jmp LB_3370
LB_3369:
	mov r8,unt_1
	jmp LB_3365
LB_3370:
	add r14,1
	jmp LB_3366
LB_3365:
	add rsp,8
	jmp LB_3354
LB_3366:
	jmp LB_3372
LB_3371:
	add r14,1 
LB_3372:
	cmp r14,r9
	jge LB_3373
	JZ_LINE_SPC BYTE [r13+8+r14], LB_3371
LB_3373
	call GRM_244
	cmp BYTE [r8+6],0
	jnz LB_3376
	jmp LB_3377
LB_3376:
	jmp LB_3374
LB_3377:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a22◂ [ a9◂ [ ]{| l |}] ) ⊢ 9'(= a22◂ [ a9◂ [ ]{| l |}] )
; .mov_ptn 2'(= a22◂ [ a9◂ [ ]{| l |}] ) ⊢ 9'(= a22◂ [ a9◂ [ ]{| l |}] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_3375
LB_3374:
	add rsp,8
	jmp LB_3354
LB_3375:
	mov QWORD [rsp+8*2],r14
	mov r13,QWORD [rsp+16+8*2]
	mov r14,QWORD [rsp+8*2]
	jmp LB_3378
LB_3378
;; rsp=2 , %2066~1'(= r ) %2065~0'(= r ) %2064~9'(= a22◂ [ a9◂ [ ]{| l |}] ) %2063~8'(= a22◂ [ a9◂ [ ]{| l |}] ) 
; #116 { 8'(= a22◂ [ a9◂ [ ]{| l |}] ) 9'(= a22◂ [ a9◂ [ ]{| l |}] ) } ⊢ 1(<3)◂{ 8'(= a22◂ [ a9◂ [ ]{| l |}] ) 9'(= a22◂ [ a9◂ [ ]{| l |}] ) }
;; rsp=2 , %2067~1(<3)◂{ 8'(= a22◂ [ a9◂ [ ]{| l |}] ) 9'(= a22◂ [ a9◂ [ ]{| l |}] ) } %2066~1'(= r ) %2065~0'(= r ) 
; #24 1(<3)◂{ 8'(= a22◂ [ a9◂ [ ]{| l |}] ) 9'(= a22◂ [ a9◂ [ ]{| l |}] ) } ⊢ 0(<2)◂1(<3)◂{ 8'(= a22◂ [ a9◂ [ ]{| l |}] ) 9'(= a22◂ [ a9◂ [ ]{| l |}] ) }
;; rsp=2 , %2068~0(<2)◂1(<3)◂{ 8'(= a22◂ [ a9◂ [ ]{| l |}] ) 9'(= a22◂ [ a9◂ [ ]{| l |}] ) } %2066~1'(= r ) %2065~0'(= r ) 
; ∎ 0(<2)◂1(<3)◂{ 8'(= a22◂ [ a9◂ [ ]{| l |}] ) 9'(= a22◂ [ a9◂ [ ]{| l |}] ) }
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂1(<3)◂{ 8'(= a22◂ [ a9◂ [ ]{| l |}] ) 9'(= a22◂ [ a9◂ [ ]{| l |}] ) } ⊢ 2'(= a3◂ [ a21◂ [ a9◂ [ ]{| l |}]] )
; .mov_ptn 0(<2)◂1(<3)◂{ 8'(= a22◂ [ a9◂ [ ]{| l |}] ) 9'(= a22◂ [ a9◂ [ ]{| l |}] ) } ⊢ 2'(= a3◂ [ a21◂ [ a9◂ [ ]{| l |}]] )
	ALC_RCD 2, rax
	mov r13,rax
	mov rax,QWORD [rsp-8+8*2]
	mov QWORD [r13+8+8*0],rax
	mov rax,QWORD [rsp-8+8*1]
	mov QWORD [r13+8+8*1],rax
	mov rax,r13
	mov BYTE [rax+6],1
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,16
	jmp LB_3379
LB_3379:
	cmp BYTE [r8+6],0
	jnz LB_3354
	POP_GRM_SCC
	ret
LB_3354:
	POP_GRM_FAIL 
	ret
ETR_242:
	mov r9,0x0000_ffff_ffff_ffff
	and r9,[r13]
	call GRM_242
	ret
GRM_242:
	PUSH_GRM
	jmp LB_3382
LB_3381:
	add r14,1 
LB_3382:
	cmp r14,r9
	jge LB_3383
	JZ_LINE_SPC BYTE [r13+8+r14], LB_3381
LB_3383
	lea rax,[r14+1]
	cmp rax,r9
	jg LB_3386
	jmp LB_3387
LB_3386:
	mov r8,unt_1
	jmp LB_3384
LB_3387:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],59
	jnz LB_3388
	jmp LB_3389
LB_3388:
	mov r8,unt_1
	jmp LB_3384
LB_3389:
	add r14,1
	jmp LB_3385
LB_3384:
	add rsp,0
	jmp LB_3380
LB_3385:
	jmp LB_3391
LB_3390:
	add r14,1 
LB_3391:
	cmp r14,r9
	jge LB_3392
	JZ_LINE_SPC BYTE [r13+8+r14], LB_3390
LB_3392
	call GRM_241
	cmp BYTE [r8+6],0
	jnz LB_3395
	jmp LB_3396
LB_3395:
	jmp LB_3393
LB_3396:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a21◂ [ a9◂ [ ]{| l |}] ) ⊢ 8'(= a21◂ [ a9◂ [ ]{| l |}] )
; .mov_ptn 2'(= a21◂ [ a9◂ [ ]{| l |}] ) ⊢ 8'(= a21◂ [ a9◂ [ ]{| l |}] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_3394
LB_3393:
	add rsp,0
	POP_GRM_FAIL
	ret
LB_3394:
	jmp LB_3398
LB_3397:
	add r14,1 
LB_3398:
	cmp r14,r9
	jge LB_3399
	JZ_LINE_SPC BYTE [r13+8+r14], LB_3397
LB_3399
	call GRM_242
	cmp BYTE [r8+6],0
	jnz LB_3402
	jmp LB_3403
LB_3402:
	jmp LB_3400
LB_3403:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a2◂ [ a21◂ [ a9◂ [ ]{| l |}]] ) ⊢ 9'(= a2◂ [ a21◂ [ a9◂ [ ]{| l |}]] )
; .mov_ptn 2'(= a2◂ [ a21◂ [ a9◂ [ ]{| l |}]] ) ⊢ 9'(= a2◂ [ a21◂ [ a9◂ [ ]{| l |}]] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_3401
LB_3400:
	add rsp,8
	POP_GRM_FAIL
	ret
LB_3401:
	mov QWORD [rsp+8*2],r14
	mov r13,QWORD [rsp+16+8*2]
	mov r14,QWORD [rsp+8*2]
	jmp LB_3404
LB_3404
;; rsp=2 , %2072~1'(= r ) %2071~0'(= r ) %2070~9'(= a2◂ [ a21◂ [ a9◂ [ ]{| l |}]] ) %2069~8'(= a21◂ [ a9◂ [ ]{| l |}] ) 
; #23 { 8'(= a21◂ [ a9◂ [ ]{| l |}] ) 9'(= a2◂ [ a21◂ [ a9◂ [ ]{| l |}]] ) } ⊢ 0(<2)◂{ 8'(= a21◂ [ a9◂ [ ]{| l |}] ) 9'(= a2◂ [ a21◂ [ a9◂ [ ]{| l |}]] ) }
;; rsp=2 , %2073~0(<2)◂{ 8'(= a21◂ [ a9◂ [ ]{| l |}] ) 9'(= a2◂ [ a21◂ [ a9◂ [ ]{| l |}]] ) } %2072~1'(= r ) %2071~0'(= r ) 
; #24 0(<2)◂{ 8'(= a21◂ [ a9◂ [ ]{| l |}] ) 9'(= a2◂ [ a21◂ [ a9◂ [ ]{| l |}]] ) } ⊢ 0(<2)◂0(<2)◂{ 8'(= a21◂ [ a9◂ [ ]{| l |}] ) 9'(= a2◂ [ a21◂ [ a9◂ [ ]{| l |}]] ) }
;; rsp=2 , %2074~0(<2)◂0(<2)◂{ 8'(= a21◂ [ a9◂ [ ]{| l |}] ) 9'(= a2◂ [ a21◂ [ a9◂ [ ]{| l |}]] ) } %2072~1'(= r ) %2071~0'(= r ) 
; ∎ 0(<2)◂0(<2)◂{ 8'(= a21◂ [ a9◂ [ ]{| l |}] ) 9'(= a2◂ [ a21◂ [ a9◂ [ ]{| l |}]] ) }
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂0(<2)◂{ 8'(= a21◂ [ a9◂ [ ]{| l |}] ) 9'(= a2◂ [ a21◂ [ a9◂ [ ]{| l |}]] ) } ⊢ 2'(= a3◂ [ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]] )
; .mov_ptn 0(<2)◂0(<2)◂{ 8'(= a21◂ [ a9◂ [ ]{| l |}] ) 9'(= a2◂ [ a21◂ [ a9◂ [ ]{| l |}]] ) } ⊢ 2'(= a3◂ [ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]] )
	ALC_RCD 2, rax
	mov r13,rax
	mov rax,QWORD [rsp-8+8*2]
	mov QWORD [r13+8+8*0],rax
	mov rax,QWORD [rsp-8+8*1]
	mov QWORD [r13+8+8*1],rax
	mov rax,r13
	mov BYTE [rax+6],0
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,16
	jmp LB_3405
LB_3405:
	cmp BYTE [r8+6],0
	jnz LB_3380
	POP_GRM_SCC
	ret
LB_3380:
	RB_GRM
	jmp LB_3408
LB_3407:
	add r14,1 
LB_3408:
	cmp r14,r9
	jge LB_3409
	JZ_LINE_SPC BYTE [r13+8+r14], LB_3407
LB_3409
	lea rax,[r14+1]
	cmp rax,r9
	jg LB_3412
	jmp LB_3413
LB_3412:
	mov r8,unt_1
	jmp LB_3410
LB_3413:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],46
	jnz LB_3414
	jmp LB_3415
LB_3414:
	mov r8,unt_1
	jmp LB_3410
LB_3415:
	add r14,1
	jmp LB_3411
LB_3410:
	add rsp,0
	jmp LB_3406
LB_3411:
	jmp LB_3417
LB_3416:
	add r14,1 
LB_3417:
	cmp r14,r9
	jge LB_3418
	JZ_LINE_SPC BYTE [r13+8+r14], LB_3416
LB_3418
	lea rax,[r14+1]
	cmp rax,r9
	jg LB_3421
	jmp LB_3422
LB_3421:
	mov r8,unt_1
	jmp LB_3419
LB_3422:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],10
	jnz LB_3423
	jmp LB_3424
LB_3423:
	mov r8,unt_1
	jmp LB_3419
LB_3424:
	add r14,1
	jmp LB_3420
LB_3419:
	add rsp,0
	jmp LB_3406
LB_3420:
	mov QWORD [rsp+8*0],r14
	mov r13,QWORD [rsp+16+8*0]
	mov r14,QWORD [rsp+8*0]
	jmp LB_3425
LB_3425
;; rsp=0 , %2076~1'(= r ) %2075~0'(= r ) 
; #22 { } ⊢ 1(<2)◂{ }
;; rsp=0 , %2077~1(<2)◂{ } %2076~1'(= r ) %2075~0'(= r ) 
; #24 1(<2)◂{ } ⊢ 0(<2)◂1(<2)◂{ }
;; rsp=0 , %2078~0(<2)◂1(<2)◂{ } %2076~1'(= r ) %2075~0'(= r ) 
; ∎ 0(<2)◂1(<2)◂{ }
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂1(<2)◂{ } ⊢ 2'(= a3◂ [ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]] )
; .mov_ptn 0(<2)◂1(<2)◂{ } ⊢ 2'(= a3◂ [ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]] )
	mov rax,unt 
	mov rax,unt_1
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	jmp LB_3426
LB_3426:
	cmp BYTE [r8+6],0
	jnz LB_3406
	POP_GRM_SCC
	ret
LB_3406:
	POP_GRM_FAIL 
	ret
ETR_243:
	mov r9,0x0000_ffff_ffff_ffff
	and r9,[r13]
	call GRM_243
	ret
GRM_243:
	PUSH_GRM
	jmp LB_3429
LB_3428:
	add r14,1 
LB_3429:
	cmp r14,r9
	jge LB_3430
	JZ_LINE_SPC BYTE [r13+8+r14], LB_3428
LB_3430
	lea rax,[r14+1]
	cmp rax,r9
	jg LB_3433
	jmp LB_3434
LB_3433:
	mov r8,unt_1
	jmp LB_3431
LB_3434:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],59
	jnz LB_3435
	jmp LB_3436
LB_3435:
	mov r8,unt_1
	jmp LB_3431
LB_3436:
	add r14,1
	jmp LB_3432
LB_3431:
	add rsp,0
	jmp LB_3427
LB_3432:
	jmp LB_3438
LB_3437:
	add r14,1 
LB_3438:
	cmp r14,r9
	jge LB_3439
	JZ_LINE_SPC BYTE [r13+8+r14], LB_3437
LB_3439
	call GRM_241
	cmp BYTE [r8+6],0
	jnz LB_3442
	jmp LB_3443
LB_3442:
	jmp LB_3440
LB_3443:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a21◂ [ a9◂ [ ]{| l |}] ) ⊢ 8'(= a21◂ [ a9◂ [ ]{| l |}] )
; .mov_ptn 2'(= a21◂ [ a9◂ [ ]{| l |}] ) ⊢ 8'(= a21◂ [ a9◂ [ ]{| l |}] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_3441
LB_3440:
	add rsp,0
	POP_GRM_FAIL
	ret
LB_3441:
	jmp LB_3445
LB_3444:
	add r14,1 
LB_3445:
	cmp r14,r9
	jge LB_3446
	JZ_LINE_SPC BYTE [r13+8+r14], LB_3444
LB_3446
	call GRM_242
	cmp BYTE [r8+6],0
	jnz LB_3449
	jmp LB_3450
LB_3449:
	jmp LB_3447
LB_3450:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a2◂ [ a21◂ [ a9◂ [ ]{| l |}]] ) ⊢ 9'(= a2◂ [ a21◂ [ a9◂ [ ]{| l |}]] )
; .mov_ptn 2'(= a2◂ [ a21◂ [ a9◂ [ ]{| l |}]] ) ⊢ 9'(= a2◂ [ a21◂ [ a9◂ [ ]{| l |}]] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_3448
LB_3447:
	add rsp,8
	POP_GRM_FAIL
	ret
LB_3448:
	mov QWORD [rsp+8*2],r14
	mov r13,QWORD [rsp+16+8*2]
	mov r14,QWORD [rsp+8*2]
	jmp LB_3451
LB_3451
;; rsp=2 , %2082~1'(= r ) %2081~0'(= r ) %2080~9'(= a2◂ [ a21◂ [ a9◂ [ ]{| l |}]] ) %2079~8'(= a21◂ [ a9◂ [ ]{| l |}] ) 
; #23 { 8'(= a21◂ [ a9◂ [ ]{| l |}] ) 9'(= a2◂ [ a21◂ [ a9◂ [ ]{| l |}]] ) } ⊢ 0(<2)◂{ 8'(= a21◂ [ a9◂ [ ]{| l |}] ) 9'(= a2◂ [ a21◂ [ a9◂ [ ]{| l |}]] ) }
;; rsp=2 , %2083~0(<2)◂{ 8'(= a21◂ [ a9◂ [ ]{| l |}] ) 9'(= a2◂ [ a21◂ [ a9◂ [ ]{| l |}]] ) } %2082~1'(= r ) %2081~0'(= r ) 
; #195 0(<2)◂{ 8'(= a21◂ [ a9◂ [ ]{| l |}] ) 9'(= a2◂ [ a21◂ [ a9◂ [ ]{| l |}]] ) } ⊢ 0(<2)◂0(<2)◂{ 8'(= a21◂ [ a9◂ [ ]{| l |}] ) 9'(= a2◂ [ a21◂ [ a9◂ [ ]{| l |}]] ) }
;; rsp=2 , %2084~0(<2)◂0(<2)◂{ 8'(= a21◂ [ a9◂ [ ]{| l |}] ) 9'(= a2◂ [ a21◂ [ a9◂ [ ]{| l |}]] ) } %2082~1'(= r ) %2081~0'(= r ) 
; #24 0(<2)◂0(<2)◂{ 8'(= a21◂ [ a9◂ [ ]{| l |}] ) 9'(= a2◂ [ a21◂ [ a9◂ [ ]{| l |}]] ) } ⊢ 0(<2)◂0(<2)◂0(<2)◂{ 8'(= a21◂ [ a9◂ [ ]{| l |}] ) 9'(= a2◂ [ a21◂ [ a9◂ [ ]{| l |}]] ) }
;; rsp=2 , %2085~0(<2)◂0(<2)◂0(<2)◂{ 8'(= a21◂ [ a9◂ [ ]{| l |}] ) 9'(= a2◂ [ a21◂ [ a9◂ [ ]{| l |}]] ) } %2082~1'(= r ) %2081~0'(= r ) 
; ∎ 0(<2)◂0(<2)◂0(<2)◂{ 8'(= a21◂ [ a9◂ [ ]{| l |}] ) 9'(= a2◂ [ a21◂ [ a9◂ [ ]{| l |}]] ) }
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂0(<2)◂0(<2)◂{ 8'(= a21◂ [ a9◂ [ ]{| l |}] ) 9'(= a2◂ [ a21◂ [ a9◂ [ ]{| l |}]] ) } ⊢ 2'(= a3◂ [ a35◂ [ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]]] )
; .mov_ptn 0(<2)◂0(<2)◂0(<2)◂{ 8'(= a21◂ [ a9◂ [ ]{| l |}] ) 9'(= a2◂ [ a21◂ [ a9◂ [ ]{| l |}]] ) } ⊢ 2'(= a3◂ [ a35◂ [ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]]] )
	ALC_RCD 2, rax
	mov r13,rax
	mov rax,QWORD [rsp-8+8*2]
	mov QWORD [r13+8+8*0],rax
	mov rax,QWORD [rsp-8+8*1]
	mov QWORD [r13+8+8*1],rax
	mov rax,r13
	mov BYTE [rax+6],0
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,16
	jmp LB_3452
LB_3452:
	cmp BYTE [r8+6],0
	jnz LB_3427
	POP_GRM_SCC
	ret
LB_3427:
	RB_GRM
	jmp LB_3455
LB_3454:
	add r14,1 
LB_3455:
	cmp r14,r9
	jge LB_3456
	JZ_LINE_SPC BYTE [r13+8+r14], LB_3454
LB_3456
	lea rax,[r14+1]
	cmp rax,r9
	jg LB_3459
	jmp LB_3460
LB_3459:
	mov r8,unt_1
	jmp LB_3457
LB_3460:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],46
	jnz LB_3461
	jmp LB_3462
LB_3461:
	mov r8,unt_1
	jmp LB_3457
LB_3462:
	add r14,1
	jmp LB_3458
LB_3457:
	add rsp,0
	jmp LB_3453
LB_3458:
	jmp LB_3464
LB_3463:
	add r14,1 
LB_3464:
	cmp r14,r9
	jge LB_3465
	JZ_LINE_SPC BYTE [r13+8+r14], LB_3463
LB_3465
	lea rax,[r14+1]
	cmp rax,r9
	jg LB_3468
	jmp LB_3469
LB_3468:
	mov r8,unt_1
	jmp LB_3466
LB_3469:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],10
	jnz LB_3470
	jmp LB_3471
LB_3470:
	mov r8,unt_1
	jmp LB_3466
LB_3471:
	add r14,1
	jmp LB_3467
LB_3466:
	add rsp,0
	jmp LB_3453
LB_3467:
	mov QWORD [rsp+8*0],r14
	mov r13,QWORD [rsp+16+8*0]
	mov r14,QWORD [rsp+8*0]
	jmp LB_3472
LB_3472
;; rsp=0 , %2087~1'(= r ) %2086~0'(= r ) 
; #22 { } ⊢ 1(<2)◂{ }
;; rsp=0 , %2088~1(<2)◂{ } %2087~1'(= r ) %2086~0'(= r ) 
; #195 1(<2)◂{ } ⊢ 0(<2)◂1(<2)◂{ }
;; rsp=0 , %2089~0(<2)◂1(<2)◂{ } %2087~1'(= r ) %2086~0'(= r ) 
; #24 0(<2)◂1(<2)◂{ } ⊢ 0(<2)◂0(<2)◂1(<2)◂{ }
;; rsp=0 , %2090~0(<2)◂0(<2)◂1(<2)◂{ } %2087~1'(= r ) %2086~0'(= r ) 
; ∎ 0(<2)◂0(<2)◂1(<2)◂{ }
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂0(<2)◂1(<2)◂{ } ⊢ 2'(= a3◂ [ a35◂ [ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]]] )
; .mov_ptn 0(<2)◂0(<2)◂1(<2)◂{ } ⊢ 2'(= a3◂ [ a35◂ [ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]]] )
	mov rax,unt 
	mov rax,unt_1
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	jmp LB_3473
LB_3473:
	cmp BYTE [r8+6],0
	jnz LB_3453
	POP_GRM_SCC
	ret
LB_3453:
	RB_GRM
	jmp LB_3476
LB_3475:
	add r14,1 
LB_3476:
	cmp r14,r9
	jge LB_3477
	JZ_LINE_SPC BYTE [r13+8+r14], LB_3475
LB_3477
	call GRM_222
	cmp BYTE [r8+6],0
	jnz LB_3480
	jmp LB_3481
LB_3480:
	jmp LB_3478
LB_3481:
	sub rsp,16
; .mov_ptn2 2'(= *{ rr} ) ⊢ { 8'(= r ) 9'(= r ) }
; .mov_ptn 2'(= *{ rr} ) ⊢ { 8'(= r ) 9'(= r ) }
	mov r10, QWORD [r8+8]
	mov QWORD [rsp-8+8*2],r10
	mov r11, QWORD [r8+16]
	mov QWORD [rsp-8+8*1],r11
	jmp LB_3479
LB_3478:
	add rsp,0
	jmp LB_3474
LB_3479:
	mov QWORD [rsp+8*2],r14
	mov r13,QWORD [rsp+16+8*2]
	mov r14,QWORD [rsp+8*2]
	jmp LB_3482
LB_3482
;; rsp=2 , %2093~1'(= r ) %2092~0'(= r ) %2091~{ 8'(= r ) 9'(= r ) } 
; $ %[ "mtc_line_tl 0" ] ⊢ %[ "mtc_line_tl 0" ]
;; rsp=2 , %2094~%[ "mtc_line_tl 0" ] %2093~1'(= r ) %2092~0'(= r ) %2091~{ 8'(= r ) 9'(= r ) } 
; #22 { } ⊢ 1(<2)◂{ }
;; rsp=2 , %2095~1(<2)◂{ } %2094~%[ "mtc_line_tl 0" ] %2093~1'(= r ) %2092~0'(= r ) %2091~{ 8'(= r ) 9'(= r ) } 
; #23 { { 0'(= r ) 1'(= r ) %[ "mtc_line_tl 0" ] } 1(<2)◂{ } } ⊢ 0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "mtc_line_tl 0" ] } 1(<2)◂{ } }
;; rsp=2 , %2096~0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "mtc_line_tl 0" ] } 1(<2)◂{ } } %2091~{ 8'(= r ) 9'(= r ) } 
; #194 0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "mtc_line_tl 0" ] } 1(<2)◂{ } } ⊢ 1(<2)◂0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "mtc_line_tl 0" ] } 1(<2)◂{ } }
;; rsp=2 , %2097~1(<2)◂0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "mtc_line_tl 0" ] } 1(<2)◂{ } } %2091~{ 8'(= r ) 9'(= r ) } 
; #24 1(<2)◂0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "mtc_line_tl 0" ] } 1(<2)◂{ } } ⊢ 0(<2)◂1(<2)◂0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "mtc_line_tl 0" ] } 1(<2)◂{ } }
;; rsp=2 , %2098~0(<2)◂1(<2)◂0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "mtc_line_tl 0" ] } 1(<2)◂{ } } %2091~{ 8'(= r ) 9'(= r ) } 
; ∎ 0(<2)◂1(<2)◂0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "mtc_line_tl 0" ] } 1(<2)◂{ } }
; .dlt.ptn { 8'(= r ) 9'(= r ) }
	mov rdi,QWORD [rsp-8+8*2]
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
	mov rdi,QWORD [rsp-8+8*1]
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂1(<2)◂0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "mtc_line_tl 0" ] } 1(<2)◂{ } } ⊢ 2'(= a3◂ [ a35◂ [ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]]] )
; .mov_ptn 0(<2)◂1(<2)◂0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "mtc_line_tl 0" ] } 1(<2)◂{ } } ⊢ 2'(= a3◂ [ a35◂ [ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]]] )
	ALC_RCD 2, rax
	mov r9,rax
	ALC_RCD 3, rax
	mov r10,rax
	mov rax,r13
	mov QWORD [r10+8+8*0],rax
	mov rax,r14
	mov QWORD [r10+8+8*1],rax
	mov rsi,1  
	mov rdi,24
	xor rax,rax 
	C_CALL_SF calloc
	mov QWORD [rax],13
	mov BYTE [rax+8+0],109
	mov BYTE [rax+8+1],116
	mov BYTE [rax+8+2],99
	mov BYTE [rax+8+3],95
	mov BYTE [rax+8+4],108
	mov BYTE [rax+8+5],105
	mov BYTE [rax+8+6],110
	mov BYTE [rax+8+7],101
	mov BYTE [rax+8+8],95
	mov BYTE [rax+8+9],116
	mov BYTE [rax+8+10],108
	mov BYTE [rax+8+11],32
	mov BYTE [rax+8+12],48
	mov QWORD [r10+8+8*2],rax
	mov rax,r10
	mov QWORD [r9+8+8*0],rax
	mov rax,unt 
	mov rax,unt_1
	mov QWORD [r9+8+8*1],rax
	mov rax,r9
	mov BYTE [rax+6],0
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],1
	mov QWORD [rax+8],rdi
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,16
	jmp LB_3483
LB_3483:
	cmp BYTE [r8+6],0
	jnz LB_3474
	POP_GRM_SCC
	ret
LB_3474:
	POP_GRM_FAIL 
	ret
ETR_244:
	mov r9,0x0000_ffff_ffff_ffff
	and r9,[r13]
	call GRM_244
	ret
GRM_244:
	PUSH_GRM
	call GRM_76
	cmp BYTE [r8+6],0
	jnz LB_3487
	jmp LB_3488
LB_3487:
	jmp LB_3485
LB_3488:
	sub rsp,8
; .mov_ptn2 2'(= {| l |} ) ⊢ 8'(= {| l |} )
; .mov_ptn 2'(= {| l |} ) ⊢ 8'(= {| l |} )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_3486
LB_3485:
	add rsp,0
	jmp LB_3484
LB_3486:
	lea rax,[r14+1]
	cmp rax,r9
	jg LB_3491
	jmp LB_3492
LB_3491:
	mov r8,unt_1
	jmp LB_3489
LB_3492:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],39
	jnz LB_3493
	jmp LB_3494
LB_3493:
	mov r8,unt_1
	jmp LB_3489
LB_3494:
	add r14,1
	jmp LB_3490
LB_3489:
	add rsp,8
	jmp LB_3484
LB_3490:
	mov QWORD [rsp+8*1],r14
	mov r13,QWORD [rsp+16+8*1]
	mov r14,QWORD [rsp+8*1]
	jmp LB_3495
LB_3495
;; rsp=1 , %2101~1'(= r ) %2100~0'(= r ) %2099~8'(= {| l |} ) 
; #113 8'(= {| l |} ) ⊢ 1(<2)◂8'(= {| l |} )
;; rsp=1 , %2102~1(<2)◂8'(= {| l |} ) %2101~1'(= r ) %2100~0'(= r ) 
; #24 1(<2)◂8'(= {| l |} ) ⊢ 0(<2)◂1(<2)◂8'(= {| l |} )
;; rsp=1 , %2103~0(<2)◂1(<2)◂8'(= {| l |} ) %2101~1'(= r ) %2100~0'(= r ) 
; ∎ 0(<2)◂1(<2)◂8'(= {| l |} )
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂1(<2)◂8'(= {| l |} ) ⊢ 2'(= a3◂ [ a22◂ [ a9◂ [ ]{| l |}]] )
; .mov_ptn 0(<2)◂1(<2)◂8'(= {| l |} ) ⊢ 2'(= a3◂ [ a22◂ [ a9◂ [ ]{| l |}]] )
	mov rax,QWORD [rsp-8+8*1]
	mov BYTE [rax+6],1
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,8
	jmp LB_3496
LB_3496:
	cmp BYTE [r8+6],0
	jnz LB_3484
	POP_GRM_SCC
	ret
LB_3484:
	RB_GRM
	call GRM_192
	cmp BYTE [r8+6],0
	jnz LB_3500
	jmp LB_3501
LB_3500:
	jmp LB_3498
LB_3501:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a11◂ [ a9◂ [ ]] ) ⊢ 8'(= a11◂ [ a9◂ [ ]] )
; .mov_ptn 2'(= a11◂ [ a9◂ [ ]] ) ⊢ 8'(= a11◂ [ a9◂ [ ]] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_3499
LB_3498:
	add rsp,0
	jmp LB_3497
LB_3499:
	mov QWORD [rsp+8*1],r14
	mov r13,QWORD [rsp+16+8*1]
	mov r14,QWORD [rsp+8*1]
	jmp LB_3502
LB_3502
;; rsp=1 , %2106~1'(= r ) %2105~0'(= r ) %2104~8'(= a11◂ [ a9◂ [ ]] ) 
; #114 8'(= a11◂ [ a9◂ [ ]] ) ⊢ 0(<2)◂8'(= a11◂ [ a9◂ [ ]] )
;; rsp=1 , %2107~0(<2)◂8'(= a11◂ [ a9◂ [ ]] ) %2106~1'(= r ) %2105~0'(= r ) 
; #24 0(<2)◂8'(= a11◂ [ a9◂ [ ]] ) ⊢ 0(<2)◂0(<2)◂8'(= a11◂ [ a9◂ [ ]] )
;; rsp=1 , %2108~0(<2)◂0(<2)◂8'(= a11◂ [ a9◂ [ ]] ) %2106~1'(= r ) %2105~0'(= r ) 
; ∎ 0(<2)◂0(<2)◂8'(= a11◂ [ a9◂ [ ]] )
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂0(<2)◂8'(= a11◂ [ a9◂ [ ]] ) ⊢ 2'(= a3◂ [ a22◂ [ a9◂ [ ]{| l |}]] )
; .mov_ptn 0(<2)◂0(<2)◂8'(= a11◂ [ a9◂ [ ]] ) ⊢ 2'(= a3◂ [ a22◂ [ a9◂ [ ]{| l |}]] )
	mov rax,QWORD [rsp-8+8*1]
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,8
	jmp LB_3503
LB_3503:
	cmp BYTE [r8+6],0
	jnz LB_3497
	POP_GRM_SCC
	ret
LB_3497:
	POP_GRM_FAIL 
	ret
LB_3531:
	movzx rax,BYTE [r8+6]
	jmp QWORD [LB_3538+8*rax]
LB_3538: dq LB_3532,LB_3533,LB_3534,LB_3535,LB_3536,LB_3537
LB_3532:
	push r8
	mov r8,QWORD [r8+8+8*0]
	mov rdi,r8
	call free_s8
	pop r8 
	push r8
	mov r8,QWORD [r8+8+8*1]
	call LB_3540
	pop r8 
	FREE_RCD 2, r8
	jmp LB_3539
LB_3533:
	FREE_LN r8 
	mov r8,QWORD [r8+8]
	call LB_3541
	jmp LB_3539
LB_3534:
	push r8
	mov r8,QWORD [r8+8+8*0]
	mov rdi,r8
	call free_s8
	pop r8 
	push r8
	mov r8,QWORD [r8+8+8*1]
	call LB_3542
	pop r8 
	FREE_RCD 2, r8
	jmp LB_3539
LB_3535:
	FREE_LN r8 
	mov r8,QWORD [r8+8]
	call LB_3543
	jmp LB_3539
LB_3536:
	push r8
	mov r8,QWORD [r8+8+8*0]
	mov rdi,r8
	call free_s8
	pop r8 
	push r8
	mov r8,QWORD [r8+8+8*1]
	call LB_3544
	pop r8 
	FREE_RCD 2, r8
	jmp LB_3539
LB_3537:
	FREE_LN r8 
	mov r8,QWORD [r8+8]
	call LB_3545
	jmp LB_3539
LB_3539:
	ret
LB_3545:
	movzx rax,BYTE [r8+6]
	jmp QWORD [LB_3548+8*rax]
LB_3548: dq LB_3546,LB_3547
LB_3546:
	push r8
	mov r8,QWORD [r8+8+8*0]
	push r8
	mov r8,QWORD [r8+8+8*0]
	mov rdi,r8
	call free_s8
	pop r8 
	push r8
	mov r8,QWORD [r8+8+8*1]
	call LB_3544
	pop r8 
	FREE_RCD 2, r8
	pop r8 
	push r8
	mov r8,QWORD [r8+8+8*1]
	call LB_3545
	pop r8 
	FREE_RCD 2, r8
	jmp LB_3549
LB_3547:
	jmp LB_3549
LB_3549:
	ret
LB_3544:
	movzx rax,BYTE [r8+6]
	jmp QWORD [LB_3552+8*rax]
LB_3552: dq LB_3550,LB_3551
LB_3550:
	push r8
	mov r8,QWORD [r8+8+8*0]
	call LB_766
	pop r8 
	push r8
	mov r8,QWORD [r8+8+8*1]
	call LB_3554
	pop r8 
	FREE_RCD 2, r8
	jmp LB_3553
LB_3551:
	push r8
	mov r8,QWORD [r8+8+8*0]
	call LB_766
	pop r8 
	push r8
	mov r8,QWORD [r8+8+8*1]
	call LB_776
	pop r8 
	FREE_RCD 2, r8
	jmp LB_3553
LB_3553:
	ret
LB_3554:
	movzx rax,BYTE [r8+6]
	jmp QWORD [LB_3557+8*rax]
LB_3557: dq LB_3555,LB_3556
LB_3555:
	push r8
	mov r8,QWORD [r8+8+8*0]
	push r8
	mov r8,QWORD [r8+8+8*0]
	mov rdi,r8
	call free_s8
	pop r8 
	push r8
	mov r8,QWORD [r8+8+8*1]
	call LB_776
	pop r8 
	FREE_RCD 2, r8
	pop r8 
	push r8
	mov r8,QWORD [r8+8+8*1]
	call LB_3554
	pop r8 
	FREE_RCD 2, r8
	jmp LB_3558
LB_3556:
	jmp LB_3558
LB_3558:
	ret
LB_3543:
	movzx rax,BYTE [r8+6]
	jmp QWORD [LB_3561+8*rax]
LB_3561: dq LB_3559,LB_3560
LB_3559:
	push r8
	mov r8,QWORD [r8+8+8*0]
	push r8
	mov r8,QWORD [r8+8+8*0]
	mov rdi,r8
	call free_s8
	pop r8 
	push r8
	mov r8,QWORD [r8+8+8*1]
	call LB_668
	pop r8 
	push r8
	mov r8,QWORD [r8+8+8*2]
	call LB_834
	pop r8 
	push r8
	mov r8,QWORD [r8+8+8*3]
	call LB_674
	pop r8 
	FREE_RCD 4, r8
	pop r8 
	push r8
	mov r8,QWORD [r8+8+8*1]
	call LB_3543
	pop r8 
	FREE_RCD 2, r8
	jmp LB_3562
LB_3560:
	jmp LB_3562
LB_3562:
	ret
LB_3542:
	movzx rax,BYTE [r8+6]
	jmp QWORD [LB_3566+8*rax]
LB_3566: dq LB_3563,LB_3564,LB_3565
LB_3563:
	push r8
	mov r8,QWORD [r8+8+8*0]
	call LB_668
	pop r8 
	push r8
	mov r8,QWORD [r8+8+8*1]
	call LB_834
	pop r8 
	push r8
	mov r8,QWORD [r8+8+8*2]
	call LB_674
	pop r8 
	FREE_RCD 3, r8
	jmp LB_3567
LB_3564:
	FREE_LN r8 
	mov r8,QWORD [r8+8]
	call LB_389
	jmp LB_3567
LB_3565:
	FREE_LN r8 
	mov r8,QWORD [r8+8]
	call LB_674
	jmp LB_3567
LB_3567:
	ret
LB_3541:
	movzx rax,BYTE [r8+6]
	jmp QWORD [LB_3570+8*rax]
LB_3570: dq LB_3568,LB_3569
LB_3568:
	push r8
	mov r8,QWORD [r8+8+8*0]
	push r8
	mov r8,QWORD [r8+8+8*0]
	mov rdi,r8
	call free_s8
	pop r8 
	push r8
	mov r8,QWORD [r8+8+8*1]
	call LB_3572
	pop r8 
	FREE_RCD 2, r8
	pop r8 
	push r8
	mov r8,QWORD [r8+8+8*1]
	call LB_3541
	pop r8 
	FREE_RCD 2, r8
	jmp LB_3571
LB_3569:
	jmp LB_3571
LB_3571:
	ret
LB_3572:
	movzx rax,BYTE [r8+6]
	jmp QWORD [LB_3575+8*rax]
LB_3575: dq LB_3573,LB_3574
LB_3573:
	FREE_LN r8 
	mov r8,QWORD [r8+8]
	call LB_648
	jmp LB_3576
LB_3574:
	FREE_LN r8 
	mov r8,QWORD [r8+8]
	call LB_669
	jmp LB_3576
LB_3576:
	ret
LB_3540:
	movzx rax,BYTE [r8+6]
	jmp QWORD [LB_3579+8*rax]
LB_3579: dq LB_3577,LB_3578
LB_3577:
	FREE_LN r8 
	mov r8,QWORD [r8+8]
	call LB_3581
	jmp LB_3580
LB_3578:
	FREE_LN r8 
	mov r8,QWORD [r8+8]
	call LB_388
	jmp LB_3580
LB_3580:
	ret
LB_3581:
	movzx rax,BYTE [r8+6]
	jmp QWORD [LB_3584+8*rax]
LB_3584: dq LB_3582,LB_3583
LB_3582:
	push r8
	mov r8,QWORD [r8+8+8*0]
	call LB_3531
	pop r8 
	push r8
	mov r8,QWORD [r8+8+8*1]
	call LB_3581
	pop r8 
	FREE_RCD 2, r8
	jmp LB_3585
LB_3583:
	jmp LB_3585
LB_3585:
	ret
LB_3528: ;; #196 { 0'(= a35◂ [ a31◂ [ ]] ) 1'(= a35◂ [ a2◂ [ a31◂ [ ]]] ) } ⊢ 0'(= a35◂ [ *{ a31◂ [ ]a2◂ [ a31◂ [ ]]}] ) : ({ _t35◂_t31 _t35◂_lst◂_t31 }→_t35◂{ _t31 _lst◂_t31 })
;; rsp=0 , %1134~1'(= a35◂ [ a2◂ [ a31◂ [ ]]] ) %1133~0'(= a35◂ [ a31◂ [ ]] ) 
;; ? 0'(= a35◂ [ a31◂ [ ]] ) ⊢ 0(<2)◂2'(= a31◂ [ ] )
	mov rdi,r13
	cmp BYTE [rdi+6],0
	jnz LB_3529
	mov QWORD [GBG_VCT+8*0],rdi
	mov r8,QWORD [rdi+8]
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_LN rdi
;; rsp=0 , %1136~2'(= a31◂ [ ] ) %1134~1'(= a35◂ [ a2◂ [ a31◂ [ ]]] ) 
;; ? 1'(= a35◂ [ a2◂ [ a31◂ [ ]]] ) ⊢ 0(<2)◂0'(= a2◂ [ a31◂ [ ]] )
	mov rdi,r14
	cmp BYTE [rdi+6],0
	jnz LB_3530
	mov QWORD [GBG_VCT+8*0],rdi
	mov r13,QWORD [rdi+8]
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_LN rdi
;; rsp=0 , %1138~0'(= a2◂ [ a31◂ [ ]] ) %1136~2'(= a31◂ [ ] ) 
; #195 { 2'(= a31◂ [ ] ) 0'(= a2◂ [ a31◂ [ ]] ) } ⊢ 0(<2)◂{ 2'(= a31◂ [ ] ) 0'(= a2◂ [ a31◂ [ ]] ) }
;; rsp=0 , %1139~0(<2)◂{ 2'(= a31◂ [ ] ) 0'(= a2◂ [ a31◂ [ ]] ) } 
; ∎ 0(<2)◂{ 2'(= a31◂ [ ] ) 0'(= a2◂ [ a31◂ [ ]] ) }
; .mov_ptn2 0(<2)◂{ 2'(= a31◂ [ ] ) 0'(= a2◂ [ a31◂ [ ]] ) } ⊢ 0'(= a35◂ [ *{ a31◂ [ ]a2◂ [ a31◂ [ ]]}] )
	mov r14,r13
; .mov_ptn 0(<2)◂{ 2'(= a31◂ [ ] ) 1'(= a2◂ [ a31◂ [ ]] ) } ⊢ 0'(= a35◂ [ *{ a31◂ [ ]a2◂ [ a31◂ [ ]]}] )
	ALC_RCD 2, rax
	mov r9,rax
	mov rax,r8
	mov QWORD [r9+8+8*0],rax
	mov rax,r14
	mov QWORD [r9+8+8*1],rax
	mov rax,r9
	mov BYTE [rax+6],0
	mov r13,rax
	ret
LB_3530:
;; ?. 1'(= a35◂ [ a2◂ [ a31◂ [ ]]] ) ⊢ 1(<2)◂0'(= a2◂ [ *{ rr{| l |}}] )
	mov QWORD [GBG_VCT+8*0],rdi
	mov r13,QWORD [rdi+8]
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_LN rdi
;; rsp=0 , %1137~0'(= a2◂ [ *{ rr{| l |}}] ) %1136~2'(= a31◂ [ ] ) 
; #194 0'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 1(<2)◂0'(= a2◂ [ *{ rr{| l |}}] )
;; rsp=0 , %1140~1(<2)◂0'(= a2◂ [ *{ rr{| l |}}] ) %1136~2'(= a31◂ [ ] ) 
; ∎ 1(<2)◂0'(= a2◂ [ *{ rr{| l |}}] )
; .dlt.ptn 2'(= a31◂ [ ] )
	mov rdi,r8
	C_PUSH_REGS
	mov r8,rdi
	call LB_3531
	C_POP_REGS
; .mov_ptn2 1(<2)◂0'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 0'(= a35◂ [ *{ a31◂ [ ]a2◂ [ a31◂ [ ]]}] )
	mov r14,r13
; .mov_ptn 1(<2)◂1'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 0'(= a35◂ [ *{ a31◂ [ ]a2◂ [ a31◂ [ ]]}] )
	mov rax,r14
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],1
	mov QWORD [rax+8],rdi
	mov r13,rax
	ret
LB_3529:
;; ?. 0'(= a35◂ [ a31◂ [ ]] ) ⊢ 1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] )
	mov QWORD [GBG_VCT+8*0],rdi
	mov r8,QWORD [rdi+8]
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_LN rdi
;; rsp=0 , %1135~2'(= a2◂ [ *{ rr{| l |}}] ) %1134~1'(= a35◂ [ a2◂ [ a31◂ [ ]]] ) 
;; ? 1'(= a35◂ [ a2◂ [ a31◂ [ ]]] ) ⊢ 0(<2)◂0'(= a2◂ [ a31◂ [ ]] )
	mov rdi,r14
	cmp BYTE [rdi+6],0
	jnz LB_3586
	mov QWORD [GBG_VCT+8*0],rdi
	mov r13,QWORD [rdi+8]
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_LN rdi
;; rsp=0 , %1142~0'(= a2◂ [ a31◂ [ ]] ) %1135~2'(= a2◂ [ *{ rr{| l |}}] ) 
; #194 2'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] )
;; rsp=0 , %1143~1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] ) %1142~0'(= a2◂ [ a31◂ [ ]] ) 
; ∎ 1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] )
; .dlt.ptn 0'(= a2◂ [ a31◂ [ ]] )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	call LB_3581
	C_POP_REGS
; .mov_ptn2 1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 0'(= a35◂ [ *{ a31◂ [ ]a2◂ [ a31◂ [ ]]}] )
; .mov_ptn 1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 0'(= a35◂ [ *{ a31◂ [ ]a2◂ [ a31◂ [ ]]}] )
	mov rax,r8
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],1
	mov QWORD [rax+8],rdi
	mov r13,rax
	ret
LB_3586:
;; ?. 1'(= a35◂ [ a2◂ [ a31◂ [ ]]] ) ⊢ 1(<2)◂0'(= a2◂ [ *{ rr{| l |}}] )
	mov QWORD [GBG_VCT+8*0],rdi
	mov r13,QWORD [rdi+8]
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_LN rdi
;; rsp=0 , %1141~0'(= a2◂ [ *{ rr{| l |}}] ) %1135~2'(= a2◂ [ *{ rr{| l |}}] ) 
; #55 { 2'(= a2◂ [ *{ rr{| l |}}] ) 0'(= a2◂ [ *{ rr{| l |}}] ) } ⊢ 0'(= a2◂ [ *{ rr{| l |}}] )
; .mov_ptn2 { 2'(= a2◂ [ *{ rr{| l |}}] ) 0'(= a2◂ [ *{ rr{| l |}}] ) } ⊢ { 0'(= a2◂ [ *{ rr{| l |}}] ) 1'(= a2◂ [ *{ rr{| l |}}] ) }
; .mov_ptn 0'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 1'(= a2◂ [ *{ rr{| l |}}] )
	mov rax,r13
	mov r14,rax
; .mov_ptn 2'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 0'(= a2◂ [ *{ rr{| l |}}] )
	mov rax,r8
	mov r13,rax
	call LB_1804
;; rsp=0 , %1144~0'(= a2◂ [ *{ rr{| l |}}] ) 
; #194 0'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 1(<2)◂0'(= a2◂ [ *{ rr{| l |}}] )
;; rsp=0 , %1145~1(<2)◂0'(= a2◂ [ *{ rr{| l |}}] ) 
; ∎ 1(<2)◂0'(= a2◂ [ *{ rr{| l |}}] )
; .mov_ptn2 1(<2)◂0'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 0'(= a35◂ [ *{ a31◂ [ ]a2◂ [ a31◂ [ ]]}] )
	mov r14,r13
; .mov_ptn 1(<2)◂1'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 0'(= a35◂ [ *{ a31◂ [ ]a2◂ [ a31◂ [ ]]}] )
	mov rax,r14
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],1
	mov QWORD [rax+8],rdi
	mov r13,rax
	ret
LB_4487: ;; #196 { 0'(= a35◂ [ a2◂ [ *{ {| l |}a8◂ [ a13◂ [ {| l |}]]a3◂ [ a23◂ [ ]]a17◂ [ a9◂ [ ]{| l |}]}]] ) 1'(= a35◂ [ a17◂ [ a9◂ [ ]{| l |}]] ) } ⊢ 0'(= a35◂ [ *{ a2◂ [ *{ {| l |}a8◂ [ a13◂ [ {| l |}]]a3◂ [ a23◂ [ ]]a17◂ [ a9◂ [ ]{| l |}]}]a17◂ [ a9◂ [ ]{| l |}]}] ) : ({ _t35◂_lst◂{ _s8 _t8◂_t13◂_s8 _opn◂_t23 _t17◂_s8◂_t9 } _t35◂_t17◂_s8◂_t9 }→_t35◂{ _lst◂{ _s8 _t8◂_t13◂_s8 _opn◂_t23 _t17◂_s8◂_t9 } _t17◂_s8◂_t9 })
;; rsp=0 , %1134~1'(= a35◂ [ a17◂ [ a9◂ [ ]{| l |}]] ) %1133~0'(= a35◂ [ a2◂ [ *{ {| l |}a8◂ [ a13◂ [ {| l |}]]a3◂ [ a23◂ [ ]]a17◂ [ a9◂ [ ]{| l |}]}]] ) 
;; ? 0'(= a35◂ [ a2◂ [ *{ {| l |}a8◂ [ a13◂ [ {| l |}]]a3◂ [ a23◂ [ ]]a17◂ [ a9◂ [ ]{| l |}]}]] ) ⊢ 0(<2)◂2'(= a2◂ [ *{ {| l |}a8◂ [ a13◂ [ {| l |}]]a3◂ [ a23◂ [ ]]a17◂ [ a9◂ [ ]{| l |}]}] )
	mov rdi,r13
	cmp BYTE [rdi+6],0
	jnz LB_4488
	mov QWORD [GBG_VCT+8*0],rdi
	mov r8,QWORD [rdi+8]
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_LN rdi
;; rsp=0 , %1136~2'(= a2◂ [ *{ {| l |}a8◂ [ a13◂ [ {| l |}]]a3◂ [ a23◂ [ ]]a17◂ [ a9◂ [ ]{| l |}]}] ) %1134~1'(= a35◂ [ a17◂ [ a9◂ [ ]{| l |}]] ) 
;; ? 1'(= a35◂ [ a17◂ [ a9◂ [ ]{| l |}]] ) ⊢ 0(<2)◂0'(= a17◂ [ a9◂ [ ]{| l |}] )
	mov rdi,r14
	cmp BYTE [rdi+6],0
	jnz LB_4489
	mov QWORD [GBG_VCT+8*0],rdi
	mov r13,QWORD [rdi+8]
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_LN rdi
;; rsp=0 , %1138~0'(= a17◂ [ a9◂ [ ]{| l |}] ) %1136~2'(= a2◂ [ *{ {| l |}a8◂ [ a13◂ [ {| l |}]]a3◂ [ a23◂ [ ]]a17◂ [ a9◂ [ ]{| l |}]}] ) 
; #195 { 2'(= a2◂ [ *{ {| l |}a8◂ [ a13◂ [ {| l |}]]a3◂ [ a23◂ [ ]]a17◂ [ a9◂ [ ]{| l |}]}] ) 0'(= a17◂ [ a9◂ [ ]{| l |}] ) } ⊢ 0(<2)◂{ 2'(= a2◂ [ *{ {| l |}a8◂ [ a13◂ [ {| l |}]]a3◂ [ a23◂ [ ]]a17◂ [ a9◂ [ ]{| l |}]}] ) 0'(= a17◂ [ a9◂ [ ]{| l |}] ) }
;; rsp=0 , %1139~0(<2)◂{ 2'(= a2◂ [ *{ {| l |}a8◂ [ a13◂ [ {| l |}]]a3◂ [ a23◂ [ ]]a17◂ [ a9◂ [ ]{| l |}]}] ) 0'(= a17◂ [ a9◂ [ ]{| l |}] ) } 
; ∎ 0(<2)◂{ 2'(= a2◂ [ *{ {| l |}a8◂ [ a13◂ [ {| l |}]]a3◂ [ a23◂ [ ]]a17◂ [ a9◂ [ ]{| l |}]}] ) 0'(= a17◂ [ a9◂ [ ]{| l |}] ) }
; .mov_ptn2 0(<2)◂{ 2'(= a2◂ [ *{ {| l |}a8◂ [ a13◂ [ {| l |}]]a3◂ [ a23◂ [ ]]a17◂ [ a9◂ [ ]{| l |}]}] ) 0'(= a17◂ [ a9◂ [ ]{| l |}] ) } ⊢ 0'(= a35◂ [ *{ a2◂ [ *{ {| l |}a8◂ [ a13◂ [ {| l |}]]a3◂ [ a23◂ [ ]]a17◂ [ a9◂ [ ]{| l |}]}]a17◂ [ a9◂ [ ]{| l |}]}] )
	mov r14,r13
; .mov_ptn 0(<2)◂{ 2'(= a2◂ [ *{ {| l |}a8◂ [ a13◂ [ {| l |}]]a3◂ [ a23◂ [ ]]a17◂ [ a9◂ [ ]{| l |}]}] ) 1'(= a17◂ [ a9◂ [ ]{| l |}] ) } ⊢ 0'(= a35◂ [ *{ a2◂ [ *{ {| l |}a8◂ [ a13◂ [ {| l |}]]a3◂ [ a23◂ [ ]]a17◂ [ a9◂ [ ]{| l |}]}]a17◂ [ a9◂ [ ]{| l |}]}] )
	ALC_RCD 2, rax
	mov r9,rax
	mov rax,r8
	mov QWORD [r9+8+8*0],rax
	mov rax,r14
	mov QWORD [r9+8+8*1],rax
	mov rax,r9
	mov BYTE [rax+6],0
	mov r13,rax
	ret
LB_4489:
;; ?. 1'(= a35◂ [ a17◂ [ a9◂ [ ]{| l |}]] ) ⊢ 1(<2)◂0'(= a2◂ [ *{ rr{| l |}}] )
	mov QWORD [GBG_VCT+8*0],rdi
	mov r13,QWORD [rdi+8]
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_LN rdi
;; rsp=0 , %1137~0'(= a2◂ [ *{ rr{| l |}}] ) %1136~2'(= a2◂ [ *{ {| l |}a8◂ [ a13◂ [ {| l |}]]a3◂ [ a23◂ [ ]]a17◂ [ a9◂ [ ]{| l |}]}] ) 
; #194 0'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 1(<2)◂0'(= a2◂ [ *{ rr{| l |}}] )
;; rsp=0 , %1140~1(<2)◂0'(= a2◂ [ *{ rr{| l |}}] ) %1136~2'(= a2◂ [ *{ {| l |}a8◂ [ a13◂ [ {| l |}]]a3◂ [ a23◂ [ ]]a17◂ [ a9◂ [ ]{| l |}]}] ) 
; ∎ 1(<2)◂0'(= a2◂ [ *{ rr{| l |}}] )
; .dlt.ptn 2'(= a2◂ [ *{ {| l |}a8◂ [ a13◂ [ {| l |}]]a3◂ [ a23◂ [ ]]a17◂ [ a9◂ [ ]{| l |}]}] )
	mov rdi,r8
	C_PUSH_REGS
	mov r8,rdi
	call LB_3543
	C_POP_REGS
; .mov_ptn2 1(<2)◂0'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 0'(= a35◂ [ *{ a2◂ [ *{ {| l |}a8◂ [ a13◂ [ {| l |}]]a3◂ [ a23◂ [ ]]a17◂ [ a9◂ [ ]{| l |}]}]a17◂ [ a9◂ [ ]{| l |}]}] )
	mov r14,r13
; .mov_ptn 1(<2)◂1'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 0'(= a35◂ [ *{ a2◂ [ *{ {| l |}a8◂ [ a13◂ [ {| l |}]]a3◂ [ a23◂ [ ]]a17◂ [ a9◂ [ ]{| l |}]}]a17◂ [ a9◂ [ ]{| l |}]}] )
	mov rax,r14
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],1
	mov QWORD [rax+8],rdi
	mov r13,rax
	ret
LB_4488:
;; ?. 0'(= a35◂ [ a2◂ [ *{ {| l |}a8◂ [ a13◂ [ {| l |}]]a3◂ [ a23◂ [ ]]a17◂ [ a9◂ [ ]{| l |}]}]] ) ⊢ 1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] )
	mov QWORD [GBG_VCT+8*0],rdi
	mov r8,QWORD [rdi+8]
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_LN rdi
;; rsp=0 , %1135~2'(= a2◂ [ *{ rr{| l |}}] ) %1134~1'(= a35◂ [ a17◂ [ a9◂ [ ]{| l |}]] ) 
;; ? 1'(= a35◂ [ a17◂ [ a9◂ [ ]{| l |}]] ) ⊢ 0(<2)◂0'(= a17◂ [ a9◂ [ ]{| l |}] )
	mov rdi,r14
	cmp BYTE [rdi+6],0
	jnz LB_4490
	mov QWORD [GBG_VCT+8*0],rdi
	mov r13,QWORD [rdi+8]
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_LN rdi
;; rsp=0 , %1142~0'(= a17◂ [ a9◂ [ ]{| l |}] ) %1135~2'(= a2◂ [ *{ rr{| l |}}] ) 
; #194 2'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] )
;; rsp=0 , %1143~1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] ) %1142~0'(= a17◂ [ a9◂ [ ]{| l |}] ) 
; ∎ 1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] )
; .dlt.ptn 0'(= a17◂ [ a9◂ [ ]{| l |}] )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	call LB_674
	C_POP_REGS
; .mov_ptn2 1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 0'(= a35◂ [ *{ a2◂ [ *{ {| l |}a8◂ [ a13◂ [ {| l |}]]a3◂ [ a23◂ [ ]]a17◂ [ a9◂ [ ]{| l |}]}]a17◂ [ a9◂ [ ]{| l |}]}] )
; .mov_ptn 1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 0'(= a35◂ [ *{ a2◂ [ *{ {| l |}a8◂ [ a13◂ [ {| l |}]]a3◂ [ a23◂ [ ]]a17◂ [ a9◂ [ ]{| l |}]}]a17◂ [ a9◂ [ ]{| l |}]}] )
	mov rax,r8
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],1
	mov QWORD [rax+8],rdi
	mov r13,rax
	ret
LB_4490:
;; ?. 1'(= a35◂ [ a17◂ [ a9◂ [ ]{| l |}]] ) ⊢ 1(<2)◂0'(= a2◂ [ *{ rr{| l |}}] )
	mov QWORD [GBG_VCT+8*0],rdi
	mov r13,QWORD [rdi+8]
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_LN rdi
;; rsp=0 , %1141~0'(= a2◂ [ *{ rr{| l |}}] ) %1135~2'(= a2◂ [ *{ rr{| l |}}] ) 
; #55 { 2'(= a2◂ [ *{ rr{| l |}}] ) 0'(= a2◂ [ *{ rr{| l |}}] ) } ⊢ 0'(= a2◂ [ *{ rr{| l |}}] )
; .mov_ptn2 { 2'(= a2◂ [ *{ rr{| l |}}] ) 0'(= a2◂ [ *{ rr{| l |}}] ) } ⊢ { 0'(= a2◂ [ *{ rr{| l |}}] ) 1'(= a2◂ [ *{ rr{| l |}}] ) }
; .mov_ptn 0'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 1'(= a2◂ [ *{ rr{| l |}}] )
	mov rax,r13
	mov r14,rax
; .mov_ptn 2'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 0'(= a2◂ [ *{ rr{| l |}}] )
	mov rax,r8
	mov r13,rax
	call LB_1804
;; rsp=0 , %1144~0'(= a2◂ [ *{ rr{| l |}}] ) 
; #194 0'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 1(<2)◂0'(= a2◂ [ *{ rr{| l |}}] )
;; rsp=0 , %1145~1(<2)◂0'(= a2◂ [ *{ rr{| l |}}] ) 
; ∎ 1(<2)◂0'(= a2◂ [ *{ rr{| l |}}] )
; .mov_ptn2 1(<2)◂0'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 0'(= a35◂ [ *{ a2◂ [ *{ {| l |}a8◂ [ a13◂ [ {| l |}]]a3◂ [ a23◂ [ ]]a17◂ [ a9◂ [ ]{| l |}]}]a17◂ [ a9◂ [ ]{| l |}]}] )
	mov r14,r13
; .mov_ptn 1(<2)◂1'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 0'(= a35◂ [ *{ a2◂ [ *{ {| l |}a8◂ [ a13◂ [ {| l |}]]a3◂ [ a23◂ [ ]]a17◂ [ a9◂ [ ]{| l |}]}]a17◂ [ a9◂ [ ]{| l |}]}] )
	mov rax,r14
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],1
	mov QWORD [rax+8],rdi
	mov r13,rax
	ret
ETR_245:
	mov r9,0x0000_ffff_ffff_ffff
	and r9,[r13]
	call GRM_245
	ret
GRM_245:
	PUSH_GRM
	jmp LB_3506
LB_3505:
	add r14,1 
LB_3506:
	cmp r14,r9
	jge LB_3507
	JZ_SPC BYTE [r13+8+r14], LB_3505
LB_3507
	call GRM_219
	cmp BYTE [r8+6],0
	jnz LB_3510
	jmp LB_3511
LB_3510:
	jmp LB_3508
LB_3511:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a35◂ [ *{ }] ) ⊢ 8'(= a35◂ [ *{ }] )
; .mov_ptn 2'(= a35◂ [ *{ }] ) ⊢ 8'(= a35◂ [ *{ }] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_3509
LB_3508:
	add rsp,0
	jmp LB_3504
LB_3509:
	jmp LB_3513
LB_3512:
	add r14,1 
LB_3513:
	cmp r14,r9
	jge LB_3514
	JZ_SPC BYTE [r13+8+r14], LB_3512
LB_3514
	call GRM_246
	cmp BYTE [r8+6],0
	jnz LB_3517
	jmp LB_3518
LB_3517:
	jmp LB_3515
LB_3518:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a35◂ [ a31◂ [ ]] ) ⊢ 9'(= a35◂ [ a31◂ [ ]] )
; .mov_ptn 2'(= a35◂ [ a31◂ [ ]] ) ⊢ 9'(= a35◂ [ a31◂ [ ]] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_3516
LB_3515:
	add rsp,8
	jmp LB_3504
LB_3516:
	jmp LB_3520
LB_3519:
	add r14,1 
LB_3520:
	cmp r14,r9
	jge LB_3521
	JZ_SPC BYTE [r13+8+r14], LB_3519
LB_3521
	call GRM_245
	cmp BYTE [r8+6],0
	jnz LB_3524
	jmp LB_3525
LB_3524:
	jmp LB_3522
LB_3525:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a35◂ [ a2◂ [ a31◂ [ ]]] ) ⊢ 10'(= a35◂ [ a2◂ [ a31◂ [ ]]] )
; .mov_ptn 2'(= a35◂ [ a2◂ [ a31◂ [ ]]] ) ⊢ 10'(= a35◂ [ a2◂ [ a31◂ [ ]]] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_3523
LB_3522:
	add rsp,16
	jmp LB_3504
LB_3523:
	mov QWORD [rsp+8*3],r14
	mov r13,QWORD [rsp+16+8*3]
	mov r14,QWORD [rsp+8*3]
	jmp LB_3526
LB_3526
;; rsp=3 , %2113~1'(= r ) %2112~0'(= r ) %2111~10'(= a35◂ [ a2◂ [ a31◂ [ ]]] ) %2110~9'(= a35◂ [ a31◂ [ ]] ) %2109~8'(= a35◂ [ *{ }] ) 
; #196 { 9'(= a35◂ [ a31◂ [ ]] ) 10'(= a35◂ [ a2◂ [ a31◂ [ ]]] ) } ⊢ 2'(= a35◂ [ *{ a31◂ [ ]a2◂ [ a31◂ [ ]]}] )
	sub rsp,16
	mov QWORD [rsp+8*0],r13
	mov QWORD [rsp+8*1],r14
; .mov_ptn2 { 9'(= a35◂ [ a31◂ [ ]] ) 10'(= a35◂ [ a2◂ [ a31◂ [ ]]] ) } ⊢ { 0'(= a35◂ [ a31◂ [ ]] ) 1'(= a35◂ [ a2◂ [ a31◂ [ ]]] ) }
; .mov_ptn 10'(= a35◂ [ a2◂ [ a31◂ [ ]]] ) ⊢ 1'(= a35◂ [ a2◂ [ a31◂ [ ]]] )
	mov rax,QWORD [rsp-8+8*3]
	mov r14,rax
; .mov_ptn 9'(= a35◂ [ a31◂ [ ]] ) ⊢ 0'(= a35◂ [ a31◂ [ ]] )
	mov rax,QWORD [rsp-8+8*4]
	mov r13,rax
	call LB_3528
	mov r14,QWORD [rsp-8+8*2]
	mov r8,r13
	mov r13,QWORD [rsp-8+8*1]
	add rsp,32
;; rsp=1 , %2114~2'(= a35◂ [ *{ a31◂ [ ]a2◂ [ a31◂ [ ]]}] ) %2113~1'(= r ) %2112~0'(= r ) %2109~8'(= a35◂ [ *{ }] ) 
;; ? 2'(= a35◂ [ *{ a31◂ [ ]a2◂ [ a31◂ [ ]]}] ) ⊢ 0(<2)◂{ 3'(= a31◂ [ ] ) 4'(= a2◂ [ a31◂ [ ]] ) }
	mov rdi,r8
	cmp BYTE [rdi+6],0
	jnz LB_3587
	mov r9, QWORD [r8+8]
	mov r10, QWORD [r8+16]
	mov QWORD [GBG_VCT+8*0],r8
	mov rdi,QWORD [GBG_VCT+8*0]
	mov rax,[SS_RCD_2_TOP]
	mov QWORD [rdi],rax 
	mov QWORD [SS_RCD_2_TOP],rdi
;; rsp=1 , %2117~4'(= a2◂ [ a31◂ [ ]] ) %2116~3'(= a31◂ [ ] ) %2113~1'(= r ) %2112~0'(= r ) %2109~8'(= a35◂ [ *{ }] ) 
; #23 { 3'(= a31◂ [ ] ) 4'(= a2◂ [ a31◂ [ ]] ) } ⊢ 0(<2)◂{ 3'(= a31◂ [ ] ) 4'(= a2◂ [ a31◂ [ ]] ) }
;; rsp=1 , %2118~0(<2)◂{ 3'(= a31◂ [ ] ) 4'(= a2◂ [ a31◂ [ ]] ) } %2113~1'(= r ) %2112~0'(= r ) %2109~8'(= a35◂ [ *{ }] ) 
; #195 0(<2)◂{ 3'(= a31◂ [ ] ) 4'(= a2◂ [ a31◂ [ ]] ) } ⊢ 0(<2)◂0(<2)◂{ 3'(= a31◂ [ ] ) 4'(= a2◂ [ a31◂ [ ]] ) }
;; rsp=1 , %2119~0(<2)◂0(<2)◂{ 3'(= a31◂ [ ] ) 4'(= a2◂ [ a31◂ [ ]] ) } %2113~1'(= r ) %2112~0'(= r ) %2109~8'(= a35◂ [ *{ }] ) 
; #24 0(<2)◂0(<2)◂{ 3'(= a31◂ [ ] ) 4'(= a2◂ [ a31◂ [ ]] ) } ⊢ 0(<2)◂0(<2)◂0(<2)◂{ 3'(= a31◂ [ ] ) 4'(= a2◂ [ a31◂ [ ]] ) }
;; rsp=1 , %2120~0(<2)◂0(<2)◂0(<2)◂{ 3'(= a31◂ [ ] ) 4'(= a2◂ [ a31◂ [ ]] ) } %2113~1'(= r ) %2112~0'(= r ) %2109~8'(= a35◂ [ *{ }] ) 
; ∎ 0(<2)◂0(<2)◂0(<2)◂{ 3'(= a31◂ [ ] ) 4'(= a2◂ [ a31◂ [ ]] ) }
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 8'(= a35◂ [ *{ }] )
	mov rdi,QWORD [rsp-8+8*1]
	C_PUSH_REGS
	mov r8,rdi
	call LB_1701
	C_POP_REGS
; .mov_ptn2 0(<2)◂0(<2)◂0(<2)◂{ 3'(= a31◂ [ ] ) 4'(= a2◂ [ a31◂ [ ]] ) } ⊢ 2'(= a3◂ [ a35◂ [ a2◂ [ a31◂ [ ]]]] )
; .mov_ptn 0(<2)◂0(<2)◂0(<2)◂{ 3'(= a31◂ [ ] ) 4'(= a2◂ [ a31◂ [ ]] ) } ⊢ 2'(= a3◂ [ a35◂ [ a2◂ [ a31◂ [ ]]]] )
	ALC_RCD 2, rax
	mov r13,rax
	mov rax,r9
	mov QWORD [r13+8+8*0],rax
	mov rax,r10
	mov QWORD [r13+8+8*1],rax
	mov rax,r13
	mov BYTE [rax+6],0
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,8
	jmp LB_3527
LB_3587:
;; ?. 2'(= a35◂ [ *{ a31◂ [ ]a2◂ [ a31◂ [ ]]}] ) ⊢ 1(<2)◂3'(= a2◂ [ *{ rr{| l |}}] )
	mov QWORD [GBG_VCT+8*0],rdi
	mov r9,QWORD [rdi+8]
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_LN rdi
;; rsp=1 , %2115~3'(= a2◂ [ *{ rr{| l |}}] ) %2113~1'(= r ) %2112~0'(= r ) %2109~8'(= a35◂ [ *{ }] ) 
; #194 3'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 1(<2)◂3'(= a2◂ [ *{ rr{| l |}}] )
;; rsp=1 , %2121~1(<2)◂3'(= a2◂ [ *{ rr{| l |}}] ) %2113~1'(= r ) %2112~0'(= r ) %2109~8'(= a35◂ [ *{ }] ) 
; #24 1(<2)◂3'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 0(<2)◂1(<2)◂3'(= a2◂ [ *{ rr{| l |}}] )
;; rsp=1 , %2122~0(<2)◂1(<2)◂3'(= a2◂ [ *{ rr{| l |}}] ) %2113~1'(= r ) %2112~0'(= r ) %2109~8'(= a35◂ [ *{ }] ) 
; ∎ 0(<2)◂1(<2)◂3'(= a2◂ [ *{ rr{| l |}}] )
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 8'(= a35◂ [ *{ }] )
	mov rdi,QWORD [rsp-8+8*1]
	C_PUSH_REGS
	mov r8,rdi
	call LB_1701
	C_POP_REGS
; .mov_ptn2 0(<2)◂1(<2)◂3'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 2'(= a3◂ [ a35◂ [ a2◂ [ a31◂ [ ]]]] )
; .mov_ptn 0(<2)◂1(<2)◂3'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 2'(= a3◂ [ a35◂ [ a2◂ [ a31◂ [ ]]]] )
	mov rax,r9
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],1
	mov QWORD [rax+8],rdi
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,8
	jmp LB_3527
LB_3527:
	cmp BYTE [r8+6],0
	jnz LB_3504
	POP_GRM_SCC
	ret
LB_3504:
	RB_GRM
	jmp LB_3590
LB_3589:
	add r14,1 
LB_3590:
	cmp r14,r9
	jge LB_3591
	JZ_SPC BYTE [r13+8+r14], LB_3589
LB_3591
	call GRM_219
	cmp BYTE [r8+6],0
	jnz LB_3594
	jmp LB_3595
LB_3594:
	jmp LB_3592
LB_3595:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a35◂ [ *{ }] ) ⊢ 8'(= a35◂ [ *{ }] )
; .mov_ptn 2'(= a35◂ [ *{ }] ) ⊢ 8'(= a35◂ [ *{ }] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_3593
LB_3592:
	add rsp,0
	jmp LB_3588
LB_3593:
	PUSH_GRM
	jmp LB_3599
LB_3598:
	add r14,1 
LB_3599:
	cmp r14,r9
	jge LB_3600
	JZ_SPC BYTE [r13+8+r14], LB_3598
LB_3600
	cmp r14,r9
	jge LB_3603
	jmp LB_3604
LB_3603:
	mov r8,unt_1 
	jmp LB_3601
LB_3604:
	movzx rdi,BYTE [r13+8+r14]
	push rdi 
	add r14,1 
	jmp LB_3602
LB_3601:
	add rsp,0
	jmp LB_3597
LB_3602:
	mov QWORD [rsp+8*1],r14
	mov r13,QWORD [rsp+16+8*1]
	mov r14,QWORD [rsp+8*1]
	jmp LB_3605
LB_3605
;; rsp=1 , %2128~1'(= r ) %2127~0'(= r ) %2126~8'(= r ) 
; $ %[ "file end" ] ⊢ %[ "file end" ]
;; rsp=1 , %2129~%[ "file end" ] %2128~1'(= r ) %2127~0'(= r ) %2126~8'(= r ) 
; #10 %[ "file end" ] ⊢ %[ "file end" ]
	mov rdi,fmt_emt
	call emt_stg
	mov rdi,LB_3607
	call emt_stg 
	mov rdi,fmt_nl
	call emt_stg
	jmp LB_3608
LB_3608:
;; rsp=1 , %2130~%[ "file end" ] %2128~1'(= r ) %2127~0'(= r ) %2126~8'(= r ) 
; #25 { } ⊢ 1(<2)◂{ }
;; rsp=1 , %2131~1(<2)◂{ } %2130~%[ "file end" ] %2128~1'(= r ) %2127~0'(= r ) %2126~8'(= r ) 
; ∎ 1(<2)◂{ }
; .dlt.ptn %[ "file end" ]
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 8'(= r )
	mov rdi,QWORD [rsp-8+8*1]
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 1(<2)◂{ } ⊢ 2'(= a3◂ [ *{ }] )
; .mov_ptn 1(<2)◂{ } ⊢ 2'(= a3◂ [ *{ }] )
	mov rax,unt 
	mov rax,unt_1
	mov r8,rax
	add rsp,8
	jmp LB_3606
LB_3606:
	cmp BYTE [r8+6],0
	jnz LB_3597
	POP_GRM_SCC
	jmp LB_3596
LB_3597:
	RB_GRM
	mov QWORD [rsp+8*0],r14
	mov r13,QWORD [rsp+16+8*0]
	mov r14,QWORD [rsp+8*0]
	jmp LB_3610
LB_3610
;; rsp=0 , %2133~1'(= r ) %2132~0'(= r ) 
; $ %[ "file end nl" ] ⊢ %[ "file end nl" ]
;; rsp=0 , %2134~%[ "file end nl" ] %2133~1'(= r ) %2132~0'(= r ) 
; #10 %[ "file end nl" ] ⊢ %[ "file end nl" ]
	mov rdi,fmt_emt
	call emt_stg
	mov rdi,LB_3612
	call emt_stg 
	mov rdi,fmt_nl
	call emt_stg
	jmp LB_3613
LB_3613:
;; rsp=0 , %2135~%[ "file end nl" ] %2133~1'(= r ) %2132~0'(= r ) 
; #24 { } ⊢ 0(<2)◂{ }
;; rsp=0 , %2136~0(<2)◂{ } %2135~%[ "file end nl" ] %2133~1'(= r ) %2132~0'(= r ) 
; ∎ 0(<2)◂{ }
; .dlt.ptn %[ "file end nl" ]
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂{ } ⊢ 2'(= a3◂ [ *{ }] )
; .mov_ptn 0(<2)◂{ } ⊢ 2'(= a3◂ [ *{ }] )
	mov rax,unt 
	mov rax,unt_0
	mov r8,rax
	jmp LB_3611
LB_3611:
	cmp BYTE [r8+6],0
	jnz LB_3609
	POP_GRM_SCC
	jmp LB_3596
LB_3609:
	POP_GRM_FAIL 
	jmp LB_3596
LB_3596:
	cmp BYTE [r8+6],0
	jnz LB_3614
	jmp LB_3615
LB_3614:
	add rsp,8
	POP_GRM_FAIL
	ret
LB_3615:
	mov QWORD [rsp+8*1],r14
; .mov_ptn2 2'(= *{ } ) ⊢ { }
; .mov_ptn 2'(= *{ } ) ⊢ { }
	mov r13,QWORD [rsp+16+8*1]
	mov r14,QWORD [rsp+8*1]
	jmp LB_3616
LB_3616
;; rsp=1 , %2137~{ } %2125~1'(= r ) %2124~0'(= r ) %2123~8'(= a35◂ [ *{ }] ) 
; #22 { } ⊢ 1(<2)◂{ }
;; rsp=1 , %2138~1(<2)◂{ } %2137~{ } %2125~1'(= r ) %2124~0'(= r ) %2123~8'(= a35◂ [ *{ }] ) 
; #195 1(<2)◂{ } ⊢ 0(<2)◂1(<2)◂{ }
;; rsp=1 , %2139~0(<2)◂1(<2)◂{ } %2137~{ } %2125~1'(= r ) %2124~0'(= r ) %2123~8'(= a35◂ [ *{ }] ) 
; #24 0(<2)◂1(<2)◂{ } ⊢ 0(<2)◂0(<2)◂1(<2)◂{ }
;; rsp=1 , %2140~0(<2)◂0(<2)◂1(<2)◂{ } %2137~{ } %2125~1'(= r ) %2124~0'(= r ) %2123~8'(= a35◂ [ *{ }] ) 
; ∎ 0(<2)◂0(<2)◂1(<2)◂{ }
; .dlt.ptn { }
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 8'(= a35◂ [ *{ }] )
	mov rdi,QWORD [rsp-8+8*1]
	C_PUSH_REGS
	mov r8,rdi
	call LB_1701
	C_POP_REGS
; .mov_ptn2 0(<2)◂0(<2)◂1(<2)◂{ } ⊢ 2'(= a3◂ [ a35◂ [ a2◂ [ a31◂ [ ]]]] )
; .mov_ptn 0(<2)◂0(<2)◂1(<2)◂{ } ⊢ 2'(= a3◂ [ a35◂ [ a2◂ [ a31◂ [ ]]]] )
	mov rax,unt 
	mov rax,unt_1
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,8
	jmp LB_3617
LB_3617:
	cmp BYTE [r8+6],0
	jnz LB_3588
	POP_GRM_SCC
	ret
LB_3588:
	POP_GRM_FAIL 
	ret
ETR_246:
	mov r9,0x0000_ffff_ffff_ffff
	and r9,[r13]
	call GRM_246
	ret
GRM_246:
	PUSH_GRM
	jmp LB_3620
LB_3619:
	add r14,1 
LB_3620:
	cmp r14,r9
	jge LB_3621
	JZ_SPC BYTE [r13+8+r14], LB_3619
LB_3621
	lea rax,[r14+7]
	cmp rax,r9
	jg LB_3624
	jmp LB_3625
LB_3624:
	mov r8,unt_1
	jmp LB_3622
LB_3625:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],194
	jnz LB_3626
	cmp BYTE [rdi+1],167
	jnz LB_3626
	cmp BYTE [rdi+2],194
	jnz LB_3626
	cmp BYTE [rdi+3],167
	jnz LB_3626
	cmp BYTE [rdi+4],43
	jnz LB_3626
	cmp BYTE [rdi+5],115
	jnz LB_3626
	cmp BYTE [rdi+6],56
	jnz LB_3626
	jmp LB_3627
LB_3626:
	mov r8,unt_1
	jmp LB_3622
LB_3627:
	add r14,7
	jmp LB_3623
LB_3622:
	add rsp,0
	jmp LB_3618
LB_3623:
	PUSH_GRM
	jmp LB_3631
LB_3630:
	add r14,1 
LB_3631:
	cmp r14,r9
	jge LB_3632
	JZ_SPC BYTE [r13+8+r14], LB_3630
LB_3632
	call GRM_261
	cmp BYTE [r8+6],0
	jnz LB_3635
	jmp LB_3636
LB_3635:
	jmp LB_3633
LB_3636:
	sub rsp,16
; .mov_ptn2 2'(= *{ {| l |}a24◂ [ a9◂ [ ]{| l |}]} ) ⊢ { 8'(= {| l |} ) 9'(= a24◂ [ a9◂ [ ]{| l |}] ) }
; .mov_ptn 2'(= *{ {| l |}a24◂ [ a9◂ [ ]{| l |}]} ) ⊢ { 8'(= {| l |} ) 9'(= a24◂ [ a9◂ [ ]{| l |}] ) }
	mov r10, QWORD [r8+8]
	mov QWORD [rsp-8+8*2],r10
	mov r11, QWORD [r8+16]
	mov QWORD [rsp-8+8*1],r11
	jmp LB_3634
LB_3633:
	add rsp,0
	jmp LB_3629
LB_3634:
	jmp LB_3638
LB_3637:
	add r14,1 
LB_3638:
	cmp r14,r9
	jge LB_3639
	JZ_SPC BYTE [r13+8+r14], LB_3637
LB_3639
	call GRM_262
	cmp BYTE [r8+6],0
	jnz LB_3642
	jmp LB_3643
LB_3642:
	jmp LB_3640
LB_3643:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a2◂ [ *{ {| l |}a24◂ [ a9◂ [ ]{| l |}]}] ) ⊢ 10'(= a2◂ [ *{ {| l |}a24◂ [ a9◂ [ ]{| l |}]}] )
; .mov_ptn 2'(= a2◂ [ *{ {| l |}a24◂ [ a9◂ [ ]{| l |}]}] ) ⊢ 10'(= a2◂ [ *{ {| l |}a24◂ [ a9◂ [ ]{| l |}]}] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_3641
LB_3640:
	add rsp,16
	jmp LB_3629
LB_3641:
	mov QWORD [rsp+8*3],r14
	mov r13,QWORD [rsp+16+8*3]
	mov r14,QWORD [rsp+8*3]
	jmp LB_3644
LB_3644
;; rsp=3 , %2146~1'(= r ) %2145~0'(= r ) %2144~10'(= a2◂ [ *{ {| l |}a24◂ [ a9◂ [ ]{| l |}]}] ) %2143~{ 8'(= {| l |} ) 9'(= a24◂ [ a9◂ [ ]{| l |}] ) } 
; #23 { { 8'(= {| l |} ) 9'(= a24◂ [ a9◂ [ ]{| l |}] ) } 10'(= a2◂ [ *{ {| l |}a24◂ [ a9◂ [ ]{| l |}]}] ) } ⊢ 0(<2)◂{ { 8'(= {| l |} ) 9'(= a24◂ [ a9◂ [ ]{| l |}] ) } 10'(= a2◂ [ *{ {| l |}a24◂ [ a9◂ [ ]{| l |}]}] ) }
;; rsp=3 , %2147~0(<2)◂{ { 8'(= {| l |} ) 9'(= a24◂ [ a9◂ [ ]{| l |}] ) } 10'(= a2◂ [ *{ {| l |}a24◂ [ a9◂ [ ]{| l |}]}] ) } %2146~1'(= r ) %2145~0'(= r ) 
; #177 0(<2)◂{ { 8'(= {| l |} ) 9'(= a24◂ [ a9◂ [ ]{| l |}] ) } 10'(= a2◂ [ *{ {| l |}a24◂ [ a9◂ [ ]{| l |}]}] ) } ⊢ 1(<6)◂0(<2)◂{ { 8'(= {| l |} ) 9'(= a24◂ [ a9◂ [ ]{| l |}] ) } 10'(= a2◂ [ *{ {| l |}a24◂ [ a9◂ [ ]{| l |}]}] ) }
;; rsp=3 , %2148~1(<6)◂0(<2)◂{ { 8'(= {| l |} ) 9'(= a24◂ [ a9◂ [ ]{| l |}] ) } 10'(= a2◂ [ *{ {| l |}a24◂ [ a9◂ [ ]{| l |}]}] ) } %2146~1'(= r ) %2145~0'(= r ) 
; #195 1(<6)◂0(<2)◂{ { 8'(= {| l |} ) 9'(= a24◂ [ a9◂ [ ]{| l |}] ) } 10'(= a2◂ [ *{ {| l |}a24◂ [ a9◂ [ ]{| l |}]}] ) } ⊢ 0(<2)◂1(<6)◂0(<2)◂{ { 8'(= {| l |} ) 9'(= a24◂ [ a9◂ [ ]{| l |}] ) } 10'(= a2◂ [ *{ {| l |}a24◂ [ a9◂ [ ]{| l |}]}] ) }
;; rsp=3 , %2149~0(<2)◂1(<6)◂0(<2)◂{ { 8'(= {| l |} ) 9'(= a24◂ [ a9◂ [ ]{| l |}] ) } 10'(= a2◂ [ *{ {| l |}a24◂ [ a9◂ [ ]{| l |}]}] ) } %2146~1'(= r ) %2145~0'(= r ) 
; #24 0(<2)◂1(<6)◂0(<2)◂{ { 8'(= {| l |} ) 9'(= a24◂ [ a9◂ [ ]{| l |}] ) } 10'(= a2◂ [ *{ {| l |}a24◂ [ a9◂ [ ]{| l |}]}] ) } ⊢ 0(<2)◂0(<2)◂1(<6)◂0(<2)◂{ { 8'(= {| l |} ) 9'(= a24◂ [ a9◂ [ ]{| l |}] ) } 10'(= a2◂ [ *{ {| l |}a24◂ [ a9◂ [ ]{| l |}]}] ) }
;; rsp=3 , %2150~0(<2)◂0(<2)◂1(<6)◂0(<2)◂{ { 8'(= {| l |} ) 9'(= a24◂ [ a9◂ [ ]{| l |}] ) } 10'(= a2◂ [ *{ {| l |}a24◂ [ a9◂ [ ]{| l |}]}] ) } %2146~1'(= r ) %2145~0'(= r ) 
; ∎ 0(<2)◂0(<2)◂1(<6)◂0(<2)◂{ { 8'(= {| l |} ) 9'(= a24◂ [ a9◂ [ ]{| l |}] ) } 10'(= a2◂ [ *{ {| l |}a24◂ [ a9◂ [ ]{| l |}]}] ) }
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂0(<2)◂1(<6)◂0(<2)◂{ { 8'(= {| l |} ) 9'(= a24◂ [ a9◂ [ ]{| l |}] ) } 10'(= a2◂ [ *{ {| l |}a24◂ [ a9◂ [ ]{| l |}]}] ) } ⊢ 2'(= a3◂ [ a35◂ [ a31◂ [ ]]] )
; .mov_ptn 0(<2)◂0(<2)◂1(<6)◂0(<2)◂{ { 8'(= {| l |} ) 9'(= a24◂ [ a9◂ [ ]{| l |}] ) } 10'(= a2◂ [ *{ {| l |}a24◂ [ a9◂ [ ]{| l |}]}] ) } ⊢ 2'(= a3◂ [ a35◂ [ a31◂ [ ]]] )
	ALC_RCD 2, rax
	mov r13,rax
	ALC_RCD 2, rax
	mov r14,rax
	mov rax,QWORD [rsp-8+8*3]
	mov QWORD [r14+8+8*0],rax
	mov rax,QWORD [rsp-8+8*2]
	mov QWORD [r14+8+8*1],rax
	mov rax,r14
	mov QWORD [r13+8+8*0],rax
	mov rax,QWORD [rsp-8+8*1]
	mov QWORD [r13+8+8*1],rax
	mov rax,r13
	mov BYTE [rax+6],0
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],1
	mov QWORD [rax+8],rdi
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,24
	jmp LB_3645
LB_3645:
	cmp BYTE [r8+6],0
	jnz LB_3629
	POP_GRM_SCC
	jmp LB_3628
LB_3629:
	RB_GRM
	jmp LB_3648
LB_3647:
	add r14,1 
LB_3648:
	cmp r14,r9
	jge LB_3649
	JZ_SPC BYTE [r13+8+r14], LB_3647
LB_3649
	call GRM_247
	cmp BYTE [r8+6],0
	jnz LB_3652
	jmp LB_3653
LB_3652:
	jmp LB_3650
LB_3653:
; .mov_ptn2 2'(= *{ } ) ⊢ { }
; .mov_ptn 2'(= *{ } ) ⊢ { }
	jmp LB_3651
LB_3650:
	add rsp,0
	jmp LB_3646
LB_3651:
	mov QWORD [rsp+8*0],r14
	mov r13,QWORD [rsp+16+8*0]
	mov r14,QWORD [rsp+8*0]
	jmp LB_3654
LB_3654
;; rsp=0 , %2153~1'(= r ) %2152~0'(= r ) %2151~{ } 
; #22 { } ⊢ 1(<2)◂{ }
;; rsp=0 , %2154~1(<2)◂{ } %2153~1'(= r ) %2152~0'(= r ) %2151~{ } 
; $ %[ "grb_etr 1" ] ⊢ %[ "grb_etr 1" ]
;; rsp=0 , %2155~%[ "grb_etr 1" ] %2154~1(<2)◂{ } %2153~1'(= r ) %2152~0'(= r ) %2151~{ } 
; #23 { { 0'(= r ) 1'(= r ) %[ "grb_etr 1" ] } 1(<2)◂{ } } ⊢ 0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "grb_etr 1" ] } 1(<2)◂{ } }
;; rsp=0 , %2156~0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "grb_etr 1" ] } 1(<2)◂{ } } %2151~{ } 
; #194 0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "grb_etr 1" ] } 1(<2)◂{ } } ⊢ 1(<2)◂0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "grb_etr 1" ] } 1(<2)◂{ } }
;; rsp=0 , %2157~1(<2)◂0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "grb_etr 1" ] } 1(<2)◂{ } } %2151~{ } 
; #24 1(<2)◂0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "grb_etr 1" ] } 1(<2)◂{ } } ⊢ 0(<2)◂1(<2)◂0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "grb_etr 1" ] } 1(<2)◂{ } }
;; rsp=0 , %2158~0(<2)◂1(<2)◂0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "grb_etr 1" ] } 1(<2)◂{ } } %2151~{ } 
; ∎ 0(<2)◂1(<2)◂0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "grb_etr 1" ] } 1(<2)◂{ } }
; .dlt.ptn { }
; .mov_ptn2 0(<2)◂1(<2)◂0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "grb_etr 1" ] } 1(<2)◂{ } } ⊢ 2'(= a3◂ [ a35◂ [ a31◂ [ ]]] )
; .mov_ptn 0(<2)◂1(<2)◂0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "grb_etr 1" ] } 1(<2)◂{ } } ⊢ 2'(= a3◂ [ a35◂ [ a31◂ [ ]]] )
	ALC_RCD 2, rax
	mov r9,rax
	ALC_RCD 3, rax
	mov r10,rax
	mov rax,r13
	mov QWORD [r10+8+8*0],rax
	mov rax,r14
	mov QWORD [r10+8+8*1],rax
	mov rsi,1  
	mov rdi,24
	xor rax,rax 
	C_CALL_SF calloc
	mov QWORD [rax],9
	mov BYTE [rax+8+0],103
	mov BYTE [rax+8+1],114
	mov BYTE [rax+8+2],98
	mov BYTE [rax+8+3],95
	mov BYTE [rax+8+4],101
	mov BYTE [rax+8+5],116
	mov BYTE [rax+8+6],114
	mov BYTE [rax+8+7],32
	mov BYTE [rax+8+8],49
	mov QWORD [r10+8+8*2],rax
	mov rax,r10
	mov QWORD [r9+8+8*0],rax
	mov rax,unt 
	mov rax,unt_1
	mov QWORD [r9+8+8*1],rax
	mov rax,r9
	mov BYTE [rax+6],0
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],1
	mov QWORD [rax+8],rdi
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	jmp LB_3655
LB_3655:
	cmp BYTE [r8+6],0
	jnz LB_3646
	POP_GRM_SCC
	jmp LB_3628
LB_3646:
	POP_GRM_FAIL 
	jmp LB_3628
LB_3628:
	cmp BYTE [r8+6],0
	jnz LB_3656
	jmp LB_3657
LB_3656:
	add rsp,0
	POP_GRM_FAIL
	ret
LB_3657:
	mov QWORD [rsp+8*0],r14
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi 
; .mov_ptn2 2'(= a35◂ [ a31◂ [ ]] ) ⊢ 3'(= a35◂ [ a31◂ [ ]] )
	mov r10,r9
; .mov_ptn 2'(= a35◂ [ a31◂ [ ]] ) ⊢ 3'(= a35◂ [ a31◂ [ ]] )
	mov rax,r8
	mov r9,rax
	mov r13,QWORD [rsp+16+8*0]
	mov r14,QWORD [rsp+8*0]
	jmp LB_3658
LB_3658
;; rsp=0 , %2159~3'(= a35◂ [ a31◂ [ ]] ) %2142~1'(= r ) %2141~0'(= r ) 
; #24 3'(= a35◂ [ a31◂ [ ]] ) ⊢ 0(<2)◂3'(= a35◂ [ a31◂ [ ]] )
;; rsp=0 , %2160~0(<2)◂3'(= a35◂ [ a31◂ [ ]] ) %2142~1'(= r ) %2141~0'(= r ) 
; ∎ 0(<2)◂3'(= a35◂ [ a31◂ [ ]] )
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂3'(= a35◂ [ a31◂ [ ]] ) ⊢ 2'(= a3◂ [ a35◂ [ a31◂ [ ]]] )
; .mov_ptn 0(<2)◂3'(= a35◂ [ a31◂ [ ]] ) ⊢ 2'(= a3◂ [ a35◂ [ a31◂ [ ]]] )
	mov rax,r9
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	jmp LB_3659
LB_3659:
	cmp BYTE [r8+6],0
	jnz LB_3618
	POP_GRM_SCC
	ret
LB_3618:
	RB_GRM
	jmp LB_3662
LB_3661:
	add r14,1 
LB_3662:
	cmp r14,r9
	jge LB_3663
	JZ_SPC BYTE [r13+8+r14], LB_3661
LB_3663
	call GRM_219
	cmp BYTE [r8+6],0
	jnz LB_3666
	jmp LB_3667
LB_3666:
	jmp LB_3664
LB_3667:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a35◂ [ *{ }] ) ⊢ 8'(= a35◂ [ *{ }] )
; .mov_ptn 2'(= a35◂ [ *{ }] ) ⊢ 8'(= a35◂ [ *{ }] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_3665
LB_3664:
	add rsp,0
	jmp LB_3660
LB_3665:
	jmp LB_3669
LB_3668:
	add r14,1 
LB_3669:
	cmp r14,r9
	jge LB_3670
	JZ_SPC BYTE [r13+8+r14], LB_3668
LB_3670
	lea rax,[r14+4]
	cmp rax,r9
	jg LB_3673
	jmp LB_3674
LB_3673:
	mov r8,unt_1
	jmp LB_3671
LB_3674:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],194
	jnz LB_3675
	cmp BYTE [rdi+1],167
	jnz LB_3675
	cmp BYTE [rdi+2],194
	jnz LB_3675
	cmp BYTE [rdi+3],167
	jnz LB_3675
	jmp LB_3676
LB_3675:
	mov r8,unt_1
	jmp LB_3671
LB_3676:
	add r14,4
	jmp LB_3672
LB_3671:
	add rsp,8
	jmp LB_3660
LB_3672:
	PUSH_GRM
	jmp LB_3680
LB_3679:
	add r14,1 
LB_3680:
	cmp r14,r9
	jge LB_3681
	JZ_SPC BYTE [r13+8+r14], LB_3679
LB_3681
	call GRM_76
	cmp BYTE [r8+6],0
	jnz LB_3684
	jmp LB_3685
LB_3684:
	jmp LB_3682
LB_3685:
	sub rsp,8
; .mov_ptn2 2'(= {| l |} ) ⊢ 8'(= {| l |} )
; .mov_ptn 2'(= {| l |} ) ⊢ 8'(= {| l |} )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_3683
LB_3682:
	add rsp,0
	jmp LB_3678
LB_3683:
	jmp LB_3687
LB_3686:
	add r14,1 
LB_3687:
	cmp r14,r9
	jge LB_3688
	JZ_SPC BYTE [r13+8+r14], LB_3686
LB_3688
	call GRM_249
	cmp BYTE [r8+6],0
	jnz LB_3691
	jmp LB_3692
LB_3691:
	jmp LB_3689
LB_3692:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a35◂ [ a32◂ [ ]] ) ⊢ 9'(= a35◂ [ a32◂ [ ]] )
; .mov_ptn 2'(= a35◂ [ a32◂ [ ]] ) ⊢ 9'(= a35◂ [ a32◂ [ ]] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_3690
LB_3689:
	add rsp,8
	jmp LB_3678
LB_3690:
	mov QWORD [rsp+8*2],r14
	mov r13,QWORD [rsp+16+8*2]
	mov r14,QWORD [rsp+8*2]
	jmp LB_3693
LB_3693
;; rsp=2 , %2167~1'(= r ) %2166~0'(= r ) %2165~9'(= a35◂ [ a32◂ [ ]] ) %2164~8'(= {| l |} ) 
;; ? 9'(= a35◂ [ a32◂ [ ]] ) ⊢ 0(<2)◂2'(= a32◂ [ ] )
	mov rdi,QWORD [rsp-8+8*1]
	cmp BYTE [rdi+6],0
	jnz LB_3695
	mov QWORD [GBG_VCT+8*0],rdi
	mov r8,QWORD [rdi+8]
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_LN rdi
;; rsp=2 , %2169~2'(= a32◂ [ ] ) %2167~1'(= r ) %2166~0'(= r ) %2164~8'(= {| l |} ) 
; #178 { 8'(= {| l |} ) 2'(= a32◂ [ ] ) } ⊢ 0(<6)◂{ 8'(= {| l |} ) 2'(= a32◂ [ ] ) }
;; rsp=2 , %2170~0(<6)◂{ 8'(= {| l |} ) 2'(= a32◂ [ ] ) } %2167~1'(= r ) %2166~0'(= r ) 
; #195 0(<6)◂{ 8'(= {| l |} ) 2'(= a32◂ [ ] ) } ⊢ 0(<2)◂0(<6)◂{ 8'(= {| l |} ) 2'(= a32◂ [ ] ) }
;; rsp=2 , %2171~0(<2)◂0(<6)◂{ 8'(= {| l |} ) 2'(= a32◂ [ ] ) } %2167~1'(= r ) %2166~0'(= r ) 
; #24 0(<2)◂0(<6)◂{ 8'(= {| l |} ) 2'(= a32◂ [ ] ) } ⊢ 0(<2)◂0(<2)◂0(<6)◂{ 8'(= {| l |} ) 2'(= a32◂ [ ] ) }
;; rsp=2 , %2172~0(<2)◂0(<2)◂0(<6)◂{ 8'(= {| l |} ) 2'(= a32◂ [ ] ) } %2167~1'(= r ) %2166~0'(= r ) 
; ∎ 0(<2)◂0(<2)◂0(<6)◂{ 8'(= {| l |} ) 2'(= a32◂ [ ] ) }
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂0(<2)◂0(<6)◂{ 8'(= {| l |} ) 2'(= a32◂ [ ] ) } ⊢ 2'(= a3◂ [ a35◂ [ a31◂ [ ]]] )
	mov r13,r8
; .mov_ptn 0(<2)◂0(<2)◂0(<6)◂{ 8'(= {| l |} ) 0'(= a32◂ [ ] ) } ⊢ 2'(= a3◂ [ a35◂ [ a31◂ [ ]]] )
	ALC_RCD 2, rax
	mov r14,rax
	mov rax,QWORD [rsp-8+8*2]
	mov QWORD [r14+8+8*0],rax
	mov rax,r13
	mov QWORD [r14+8+8*1],rax
	mov rax,r14
	mov BYTE [rax+6],0
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,16
	jmp LB_3694
LB_3695:
;; ?. 9'(= a35◂ [ a32◂ [ ]] ) ⊢ 1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] )
	mov QWORD [GBG_VCT+8*0],rdi
	mov r8,QWORD [rdi+8]
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_LN rdi
;; rsp=2 , %2168~2'(= a2◂ [ *{ rr{| l |}}] ) %2167~1'(= r ) %2166~0'(= r ) %2164~8'(= {| l |} ) 
; #194 2'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] )
;; rsp=2 , %2173~1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] ) %2167~1'(= r ) %2166~0'(= r ) %2164~8'(= {| l |} ) 
; #24 1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 0(<2)◂1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] )
;; rsp=2 , %2174~0(<2)◂1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] ) %2167~1'(= r ) %2166~0'(= r ) %2164~8'(= {| l |} ) 
; ∎ 0(<2)◂1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] )
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 8'(= {| l |} )
	mov rdi,QWORD [rsp-8+8*2]
	C_PUSH_REGS
	mov r8,rdi
	mov rdi,r8
	call free_s8
	C_POP_REGS
; .mov_ptn2 0(<2)◂1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 2'(= a3◂ [ a35◂ [ a31◂ [ ]]] )
	mov r13,r8
; .mov_ptn 0(<2)◂1(<2)◂0'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 2'(= a3◂ [ a35◂ [ a31◂ [ ]]] )
	mov rax,r13
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],1
	mov QWORD [rax+8],rdi
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,16
	jmp LB_3694
LB_3694:
	cmp BYTE [r8+6],0
	jnz LB_3678
	POP_GRM_SCC
	jmp LB_3677
LB_3678:
	RB_GRM
	jmp LB_3698
LB_3697:
	add r14,1 
LB_3698:
	cmp r14,r9
	jge LB_3699
	JZ_SPC BYTE [r13+8+r14], LB_3697
LB_3699
	call GRM_248
	cmp BYTE [r8+6],0
	jnz LB_3702
	jmp LB_3703
LB_3702:
	jmp LB_3700
LB_3703:
; .mov_ptn2 2'(= *{ } ) ⊢ { }
; .mov_ptn 2'(= *{ } ) ⊢ { }
	jmp LB_3701
LB_3700:
	add rsp,0
	jmp LB_3696
LB_3701:
	mov QWORD [rsp+8*0],r14
	mov r13,QWORD [rsp+16+8*0]
	mov r14,QWORD [rsp+8*0]
	jmp LB_3704
LB_3704
;; rsp=0 , %2177~1'(= r ) %2176~0'(= r ) %2175~{ } 
; #22 { } ⊢ 1(<2)◂{ }
;; rsp=0 , %2178~1(<2)◂{ } %2177~1'(= r ) %2176~0'(= r ) %2175~{ } 
; $ %[ "glb_etr 0.1" ] ⊢ %[ "glb_etr 0.1" ]
;; rsp=0 , %2179~%[ "glb_etr 0.1" ] %2178~1(<2)◂{ } %2177~1'(= r ) %2176~0'(= r ) %2175~{ } 
; #23 { { 0'(= r ) 1'(= r ) %[ "glb_etr 0.1" ] } 1(<2)◂{ } } ⊢ 0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "glb_etr 0.1" ] } 1(<2)◂{ } }
;; rsp=0 , %2180~0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "glb_etr 0.1" ] } 1(<2)◂{ } } %2175~{ } 
; #194 0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "glb_etr 0.1" ] } 1(<2)◂{ } } ⊢ 1(<2)◂0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "glb_etr 0.1" ] } 1(<2)◂{ } }
;; rsp=0 , %2181~1(<2)◂0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "glb_etr 0.1" ] } 1(<2)◂{ } } %2175~{ } 
; #24 1(<2)◂0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "glb_etr 0.1" ] } 1(<2)◂{ } } ⊢ 0(<2)◂1(<2)◂0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "glb_etr 0.1" ] } 1(<2)◂{ } }
;; rsp=0 , %2182~0(<2)◂1(<2)◂0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "glb_etr 0.1" ] } 1(<2)◂{ } } %2175~{ } 
; ∎ 0(<2)◂1(<2)◂0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "glb_etr 0.1" ] } 1(<2)◂{ } }
; .dlt.ptn { }
; .mov_ptn2 0(<2)◂1(<2)◂0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "glb_etr 0.1" ] } 1(<2)◂{ } } ⊢ 2'(= a3◂ [ a35◂ [ a31◂ [ ]]] )
; .mov_ptn 0(<2)◂1(<2)◂0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "glb_etr 0.1" ] } 1(<2)◂{ } } ⊢ 2'(= a3◂ [ a35◂ [ a31◂ [ ]]] )
	ALC_RCD 2, rax
	mov r9,rax
	ALC_RCD 3, rax
	mov r10,rax
	mov rax,r13
	mov QWORD [r10+8+8*0],rax
	mov rax,r14
	mov QWORD [r10+8+8*1],rax
	mov rsi,1  
	mov rdi,24
	xor rax,rax 
	C_CALL_SF calloc
	mov QWORD [rax],11
	mov BYTE [rax+8+0],103
	mov BYTE [rax+8+1],108
	mov BYTE [rax+8+2],98
	mov BYTE [rax+8+3],95
	mov BYTE [rax+8+4],101
	mov BYTE [rax+8+5],116
	mov BYTE [rax+8+6],114
	mov BYTE [rax+8+7],32
	mov BYTE [rax+8+8],48
	mov BYTE [rax+8+9],46
	mov BYTE [rax+8+10],49
	mov QWORD [r10+8+8*2],rax
	mov rax,r10
	mov QWORD [r9+8+8*0],rax
	mov rax,unt 
	mov rax,unt_1
	mov QWORD [r9+8+8*1],rax
	mov rax,r9
	mov BYTE [rax+6],0
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],1
	mov QWORD [rax+8],rdi
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	jmp LB_3705
LB_3705:
	cmp BYTE [r8+6],0
	jnz LB_3696
	POP_GRM_SCC
	jmp LB_3677
LB_3696:
	POP_GRM_FAIL 
	jmp LB_3677
LB_3677:
	cmp BYTE [r8+6],0
	jnz LB_3706
	jmp LB_3707
LB_3706:
	add rsp,8
	POP_GRM_FAIL
	ret
LB_3707:
	mov QWORD [rsp+8*1],r14
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi 
; .mov_ptn2 2'(= a35◂ [ a31◂ [ ]] ) ⊢ 3'(= a35◂ [ a31◂ [ ]] )
	mov r10,r9
; .mov_ptn 2'(= a35◂ [ a31◂ [ ]] ) ⊢ 3'(= a35◂ [ a31◂ [ ]] )
	mov rax,r8
	mov r9,rax
	mov r13,QWORD [rsp+16+8*1]
	mov r14,QWORD [rsp+8*1]
	jmp LB_3708
LB_3708
;; rsp=1 , %2183~3'(= a35◂ [ a31◂ [ ]] ) %2163~1'(= r ) %2162~0'(= r ) %2161~8'(= a35◂ [ *{ }] ) 
; #24 3'(= a35◂ [ a31◂ [ ]] ) ⊢ 0(<2)◂3'(= a35◂ [ a31◂ [ ]] )
;; rsp=1 , %2184~0(<2)◂3'(= a35◂ [ a31◂ [ ]] ) %2163~1'(= r ) %2162~0'(= r ) %2161~8'(= a35◂ [ *{ }] ) 
; ∎ 0(<2)◂3'(= a35◂ [ a31◂ [ ]] )
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 8'(= a35◂ [ *{ }] )
	mov rdi,QWORD [rsp-8+8*1]
	C_PUSH_REGS
	mov r8,rdi
	call LB_1701
	C_POP_REGS
; .mov_ptn2 0(<2)◂3'(= a35◂ [ a31◂ [ ]] ) ⊢ 2'(= a3◂ [ a35◂ [ a31◂ [ ]]] )
; .mov_ptn 0(<2)◂3'(= a35◂ [ a31◂ [ ]] ) ⊢ 2'(= a3◂ [ a35◂ [ a31◂ [ ]]] )
	mov rax,r9
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,8
	jmp LB_3709
LB_3709:
	cmp BYTE [r8+6],0
	jnz LB_3660
	POP_GRM_SCC
	ret
LB_3660:
	RB_GRM
	jmp LB_3712
LB_3711:
	add r14,1 
LB_3712:
	cmp r14,r9
	jge LB_3713
	JZ_SPC BYTE [r13+8+r14], LB_3711
LB_3713
	lea rax,[r14+2]
	cmp rax,r9
	jg LB_3716
	jmp LB_3717
LB_3716:
	mov r8,unt_1
	jmp LB_3714
LB_3717:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],194
	jnz LB_3718
	cmp BYTE [rdi+1],167
	jnz LB_3718
	jmp LB_3719
LB_3718:
	mov r8,unt_1
	jmp LB_3714
LB_3719:
	add r14,2
	jmp LB_3715
LB_3714:
	add rsp,0
	jmp LB_3710
LB_3715:
	PUSH_GRM
	jmp LB_3723
LB_3722:
	add r14,1 
LB_3723:
	cmp r14,r9
	jge LB_3724
	JZ_SPC BYTE [r13+8+r14], LB_3722
LB_3724
	call GRM_257
	cmp BYTE [r8+6],0
	jnz LB_3727
	jmp LB_3728
LB_3727:
	jmp LB_3725
LB_3728:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a35◂ [ a31◂ [ ]] ) ⊢ 8'(= a35◂ [ a31◂ [ ]] )
; .mov_ptn 2'(= a35◂ [ a31◂ [ ]] ) ⊢ 8'(= a35◂ [ a31◂ [ ]] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_3726
LB_3725:
	add rsp,0
	jmp LB_3721
LB_3726:
	mov QWORD [rsp+8*1],r14
	mov r13,QWORD [rsp+16+8*1]
	mov r14,QWORD [rsp+8*1]
	jmp LB_3729
LB_3729
;; rsp=1 , %2189~1'(= r ) %2188~0'(= r ) %2187~8'(= a35◂ [ a31◂ [ ]] ) 
; #24 8'(= a35◂ [ a31◂ [ ]] ) ⊢ 0(<2)◂8'(= a35◂ [ a31◂ [ ]] )
;; rsp=1 , %2190~0(<2)◂8'(= a35◂ [ a31◂ [ ]] ) %2189~1'(= r ) %2188~0'(= r ) 
; ∎ 0(<2)◂8'(= a35◂ [ a31◂ [ ]] )
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂8'(= a35◂ [ a31◂ [ ]] ) ⊢ 2'(= a3◂ [ a35◂ [ a31◂ [ ]]] )
; .mov_ptn 0(<2)◂8'(= a35◂ [ a31◂ [ ]] ) ⊢ 2'(= a3◂ [ a35◂ [ a31◂ [ ]]] )
	mov rax,QWORD [rsp-8+8*1]
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,8
	jmp LB_3730
LB_3730:
	cmp BYTE [r8+6],0
	jnz LB_3721
	POP_GRM_SCC
	jmp LB_3720
LB_3721:
	RB_GRM
	jmp LB_3733
LB_3732:
	add r14,1 
LB_3733:
	cmp r14,r9
	jge LB_3734
	JZ_SPC BYTE [r13+8+r14], LB_3732
LB_3734
	call GRM_247
	cmp BYTE [r8+6],0
	jnz LB_3737
	jmp LB_3738
LB_3737:
	jmp LB_3735
LB_3738:
; .mov_ptn2 2'(= *{ } ) ⊢ { }
; .mov_ptn 2'(= *{ } ) ⊢ { }
	jmp LB_3736
LB_3735:
	add rsp,0
	jmp LB_3731
LB_3736:
	mov QWORD [rsp+8*0],r14
	mov r13,QWORD [rsp+16+8*0]
	mov r14,QWORD [rsp+8*0]
	jmp LB_3739
LB_3739
;; rsp=0 , %2193~1'(= r ) %2192~0'(= r ) %2191~{ } 
; #22 { } ⊢ 1(<2)◂{ }
;; rsp=0 , %2194~1(<2)◂{ } %2193~1'(= r ) %2192~0'(= r ) %2191~{ } 
; $ %[ "glb_etr 3" ] ⊢ %[ "glb_etr 3" ]
;; rsp=0 , %2195~%[ "glb_etr 3" ] %2194~1(<2)◂{ } %2193~1'(= r ) %2192~0'(= r ) %2191~{ } 
; #23 { { 0'(= r ) 1'(= r ) %[ "glb_etr 3" ] } 1(<2)◂{ } } ⊢ 0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "glb_etr 3" ] } 1(<2)◂{ } }
;; rsp=0 , %2196~0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "glb_etr 3" ] } 1(<2)◂{ } } %2191~{ } 
; #194 0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "glb_etr 3" ] } 1(<2)◂{ } } ⊢ 1(<2)◂0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "glb_etr 3" ] } 1(<2)◂{ } }
;; rsp=0 , %2197~1(<2)◂0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "glb_etr 3" ] } 1(<2)◂{ } } %2191~{ } 
; #24 1(<2)◂0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "glb_etr 3" ] } 1(<2)◂{ } } ⊢ 0(<2)◂1(<2)◂0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "glb_etr 3" ] } 1(<2)◂{ } }
;; rsp=0 , %2198~0(<2)◂1(<2)◂0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "glb_etr 3" ] } 1(<2)◂{ } } %2191~{ } 
; ∎ 0(<2)◂1(<2)◂0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "glb_etr 3" ] } 1(<2)◂{ } }
; .dlt.ptn { }
; .mov_ptn2 0(<2)◂1(<2)◂0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "glb_etr 3" ] } 1(<2)◂{ } } ⊢ 2'(= a3◂ [ a35◂ [ a31◂ [ ]]] )
; .mov_ptn 0(<2)◂1(<2)◂0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "glb_etr 3" ] } 1(<2)◂{ } } ⊢ 2'(= a3◂ [ a35◂ [ a31◂ [ ]]] )
	ALC_RCD 2, rax
	mov r9,rax
	ALC_RCD 3, rax
	mov r10,rax
	mov rax,r13
	mov QWORD [r10+8+8*0],rax
	mov rax,r14
	mov QWORD [r10+8+8*1],rax
	mov rsi,1  
	mov rdi,24
	xor rax,rax 
	C_CALL_SF calloc
	mov QWORD [rax],9
	mov BYTE [rax+8+0],103
	mov BYTE [rax+8+1],108
	mov BYTE [rax+8+2],98
	mov BYTE [rax+8+3],95
	mov BYTE [rax+8+4],101
	mov BYTE [rax+8+5],116
	mov BYTE [rax+8+6],114
	mov BYTE [rax+8+7],32
	mov BYTE [rax+8+8],51
	mov QWORD [r10+8+8*2],rax
	mov rax,r10
	mov QWORD [r9+8+8*0],rax
	mov rax,unt 
	mov rax,unt_1
	mov QWORD [r9+8+8*1],rax
	mov rax,r9
	mov BYTE [rax+6],0
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],1
	mov QWORD [rax+8],rdi
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	jmp LB_3740
LB_3740:
	cmp BYTE [r8+6],0
	jnz LB_3731
	POP_GRM_SCC
	jmp LB_3720
LB_3731:
	POP_GRM_FAIL 
	jmp LB_3720
LB_3720:
	cmp BYTE [r8+6],0
	jnz LB_3741
	jmp LB_3742
LB_3741:
	add rsp,0
	POP_GRM_FAIL
	ret
LB_3742:
	mov QWORD [rsp+8*0],r14
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi 
; .mov_ptn2 2'(= a35◂ [ a31◂ [ ]] ) ⊢ 3'(= a35◂ [ a31◂ [ ]] )
	mov r10,r9
; .mov_ptn 2'(= a35◂ [ a31◂ [ ]] ) ⊢ 3'(= a35◂ [ a31◂ [ ]] )
	mov rax,r8
	mov r9,rax
	mov r13,QWORD [rsp+16+8*0]
	mov r14,QWORD [rsp+8*0]
	jmp LB_3743
LB_3743
;; rsp=0 , %2199~3'(= a35◂ [ a31◂ [ ]] ) %2186~1'(= r ) %2185~0'(= r ) 
; #24 3'(= a35◂ [ a31◂ [ ]] ) ⊢ 0(<2)◂3'(= a35◂ [ a31◂ [ ]] )
;; rsp=0 , %2200~0(<2)◂3'(= a35◂ [ a31◂ [ ]] ) %2186~1'(= r ) %2185~0'(= r ) 
; ∎ 0(<2)◂3'(= a35◂ [ a31◂ [ ]] )
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂3'(= a35◂ [ a31◂ [ ]] ) ⊢ 2'(= a3◂ [ a35◂ [ a31◂ [ ]]] )
; .mov_ptn 0(<2)◂3'(= a35◂ [ a31◂ [ ]] ) ⊢ 2'(= a3◂ [ a35◂ [ a31◂ [ ]]] )
	mov rax,r9
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	jmp LB_3744
LB_3744:
	cmp BYTE [r8+6],0
	jnz LB_3710
	POP_GRM_SCC
	ret
LB_3710:
	RB_GRM
	jmp LB_3747
LB_3746:
	add r14,1 
LB_3747:
	cmp r14,r9
	jge LB_3748
	JZ_SPC BYTE [r13+8+r14], LB_3746
LB_3748
	lea rax,[r14+2]
	cmp rax,r9
	jg LB_3751
	jmp LB_3752
LB_3751:
	mov r8,unt_1
	jmp LB_3749
LB_3752:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],194
	jnz LB_3753
	cmp BYTE [rdi+1],182
	jnz LB_3753
	jmp LB_3754
LB_3753:
	mov r8,unt_1
	jmp LB_3749
LB_3754:
	add r14,2
	jmp LB_3750
LB_3749:
	add rsp,0
	jmp LB_3745
LB_3750:
	PUSH_GRM
	jmp LB_3758
LB_3757:
	add r14,1 
LB_3758:
	cmp r14,r9
	jge LB_3759
	JZ_SPC BYTE [r13+8+r14], LB_3757
LB_3759
	call GRM_251
	cmp BYTE [r8+6],0
	jnz LB_3762
	jmp LB_3763
LB_3762:
	jmp LB_3760
LB_3763:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a31◂ [ ] ) ⊢ 8'(= a31◂ [ ] )
; .mov_ptn 2'(= a31◂ [ ] ) ⊢ 8'(= a31◂ [ ] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_3761
LB_3760:
	add rsp,0
	jmp LB_3756
LB_3761:
	mov QWORD [rsp+8*1],r14
	mov r13,QWORD [rsp+16+8*1]
	mov r14,QWORD [rsp+8*1]
	jmp LB_3764
LB_3764
;; rsp=1 , %2205~1'(= r ) %2204~0'(= r ) %2203~8'(= a31◂ [ ] ) 
; #195 8'(= a31◂ [ ] ) ⊢ 0(<2)◂8'(= a31◂ [ ] )
;; rsp=1 , %2206~0(<2)◂8'(= a31◂ [ ] ) %2205~1'(= r ) %2204~0'(= r ) 
; #24 0(<2)◂8'(= a31◂ [ ] ) ⊢ 0(<2)◂0(<2)◂8'(= a31◂ [ ] )
;; rsp=1 , %2207~0(<2)◂0(<2)◂8'(= a31◂ [ ] ) %2205~1'(= r ) %2204~0'(= r ) 
; ∎ 0(<2)◂0(<2)◂8'(= a31◂ [ ] )
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂0(<2)◂8'(= a31◂ [ ] ) ⊢ 2'(= a3◂ [ a35◂ [ a31◂ [ ]]] )
; .mov_ptn 0(<2)◂0(<2)◂8'(= a31◂ [ ] ) ⊢ 2'(= a3◂ [ a35◂ [ a31◂ [ ]]] )
	mov rax,QWORD [rsp-8+8*1]
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,8
	jmp LB_3765
LB_3765:
	cmp BYTE [r8+6],0
	jnz LB_3756
	POP_GRM_SCC
	jmp LB_3755
LB_3756:
	RB_GRM
	jmp LB_3768
LB_3767:
	add r14,1 
LB_3768:
	cmp r14,r9
	jge LB_3769
	JZ_SPC BYTE [r13+8+r14], LB_3767
LB_3769
	call GRM_247
	cmp BYTE [r8+6],0
	jnz LB_3772
	jmp LB_3773
LB_3772:
	jmp LB_3770
LB_3773:
; .mov_ptn2 2'(= *{ } ) ⊢ { }
; .mov_ptn 2'(= *{ } ) ⊢ { }
	jmp LB_3771
LB_3770:
	add rsp,0
	jmp LB_3766
LB_3771:
	mov QWORD [rsp+8*0],r14
	mov r13,QWORD [rsp+16+8*0]
	mov r14,QWORD [rsp+8*0]
	jmp LB_3774
LB_3774
;; rsp=0 , %2210~1'(= r ) %2209~0'(= r ) %2208~{ } 
; #22 { } ⊢ 1(<2)◂{ }
;; rsp=0 , %2211~1(<2)◂{ } %2210~1'(= r ) %2209~0'(= r ) %2208~{ } 
; $ %[ "glb_etr 4" ] ⊢ %[ "glb_etr 4" ]
;; rsp=0 , %2212~%[ "glb_etr 4" ] %2211~1(<2)◂{ } %2210~1'(= r ) %2209~0'(= r ) %2208~{ } 
; #23 { { 0'(= r ) 1'(= r ) %[ "glb_etr 4" ] } 1(<2)◂{ } } ⊢ 0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "glb_etr 4" ] } 1(<2)◂{ } }
;; rsp=0 , %2213~0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "glb_etr 4" ] } 1(<2)◂{ } } %2208~{ } 
; #194 0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "glb_etr 4" ] } 1(<2)◂{ } } ⊢ 1(<2)◂0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "glb_etr 4" ] } 1(<2)◂{ } }
;; rsp=0 , %2214~1(<2)◂0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "glb_etr 4" ] } 1(<2)◂{ } } %2208~{ } 
; #24 1(<2)◂0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "glb_etr 4" ] } 1(<2)◂{ } } ⊢ 0(<2)◂1(<2)◂0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "glb_etr 4" ] } 1(<2)◂{ } }
;; rsp=0 , %2215~0(<2)◂1(<2)◂0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "glb_etr 4" ] } 1(<2)◂{ } } %2208~{ } 
; ∎ 0(<2)◂1(<2)◂0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "glb_etr 4" ] } 1(<2)◂{ } }
; .dlt.ptn { }
; .mov_ptn2 0(<2)◂1(<2)◂0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "glb_etr 4" ] } 1(<2)◂{ } } ⊢ 2'(= a3◂ [ a35◂ [ a31◂ [ ]]] )
; .mov_ptn 0(<2)◂1(<2)◂0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "glb_etr 4" ] } 1(<2)◂{ } } ⊢ 2'(= a3◂ [ a35◂ [ a31◂ [ ]]] )
	ALC_RCD 2, rax
	mov r9,rax
	ALC_RCD 3, rax
	mov r10,rax
	mov rax,r13
	mov QWORD [r10+8+8*0],rax
	mov rax,r14
	mov QWORD [r10+8+8*1],rax
	mov rsi,1  
	mov rdi,24
	xor rax,rax 
	C_CALL_SF calloc
	mov QWORD [rax],9
	mov BYTE [rax+8+0],103
	mov BYTE [rax+8+1],108
	mov BYTE [rax+8+2],98
	mov BYTE [rax+8+3],95
	mov BYTE [rax+8+4],101
	mov BYTE [rax+8+5],116
	mov BYTE [rax+8+6],114
	mov BYTE [rax+8+7],32
	mov BYTE [rax+8+8],52
	mov QWORD [r10+8+8*2],rax
	mov rax,r10
	mov QWORD [r9+8+8*0],rax
	mov rax,unt 
	mov rax,unt_1
	mov QWORD [r9+8+8*1],rax
	mov rax,r9
	mov BYTE [rax+6],0
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],1
	mov QWORD [rax+8],rdi
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	jmp LB_3775
LB_3775:
	cmp BYTE [r8+6],0
	jnz LB_3766
	POP_GRM_SCC
	jmp LB_3755
LB_3766:
	POP_GRM_FAIL 
	jmp LB_3755
LB_3755:
	cmp BYTE [r8+6],0
	jnz LB_3776
	jmp LB_3777
LB_3776:
	add rsp,0
	POP_GRM_FAIL
	ret
LB_3777:
	mov QWORD [rsp+8*0],r14
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi 
; .mov_ptn2 2'(= a35◂ [ a31◂ [ ]] ) ⊢ 3'(= a35◂ [ a31◂ [ ]] )
	mov r10,r9
; .mov_ptn 2'(= a35◂ [ a31◂ [ ]] ) ⊢ 3'(= a35◂ [ a31◂ [ ]] )
	mov rax,r8
	mov r9,rax
	mov r13,QWORD [rsp+16+8*0]
	mov r14,QWORD [rsp+8*0]
	jmp LB_3778
LB_3778
;; rsp=0 , %2216~3'(= a35◂ [ a31◂ [ ]] ) %2202~1'(= r ) %2201~0'(= r ) 
; #24 3'(= a35◂ [ a31◂ [ ]] ) ⊢ 0(<2)◂3'(= a35◂ [ a31◂ [ ]] )
;; rsp=0 , %2217~0(<2)◂3'(= a35◂ [ a31◂ [ ]] ) %2202~1'(= r ) %2201~0'(= r ) 
; ∎ 0(<2)◂3'(= a35◂ [ a31◂ [ ]] )
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂3'(= a35◂ [ a31◂ [ ]] ) ⊢ 2'(= a3◂ [ a35◂ [ a31◂ [ ]]] )
; .mov_ptn 0(<2)◂3'(= a35◂ [ a31◂ [ ]] ) ⊢ 2'(= a3◂ [ a35◂ [ a31◂ [ ]]] )
	mov rax,r9
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	jmp LB_3779
LB_3779:
	cmp BYTE [r8+6],0
	jnz LB_3745
	POP_GRM_SCC
	ret
LB_3745:
	POP_GRM_FAIL 
	ret
ETR_247:
	mov r9,0x0000_ffff_ffff_ffff
	and r9,[r13]
	call GRM_247
	ret
GRM_247:
	PUSH_GRM
	jmp LB_3782
LB_3781:
	add r14,1 
LB_3782:
	cmp r14,r9
	jge LB_3783
	JZ_SPC BYTE [r13+8+r14], LB_3781
LB_3783
	call GRM_224
	cmp BYTE [r8+6],0
	jnz LB_3786
	jmp LB_3787
LB_3786:
	jmp LB_3784
LB_3787:
; .mov_ptn2 2'(= *{ } ) ⊢ { }
; .mov_ptn 2'(= *{ } ) ⊢ { }
	jmp LB_3785
LB_3784:
	add rsp,0
	jmp LB_3780
LB_3785:
	jmp LB_3789
LB_3788:
	add r14,1 
LB_3789:
	cmp r14,r9
	jge LB_3790
	JZ_SPC BYTE [r13+8+r14], LB_3788
LB_3790
	call GRM_247
	cmp BYTE [r8+6],0
	jnz LB_3793
	jmp LB_3794
LB_3793:
	jmp LB_3791
LB_3794:
; .mov_ptn2 2'(= *{ } ) ⊢ { }
; .mov_ptn 2'(= *{ } ) ⊢ { }
	jmp LB_3792
LB_3791:
	add rsp,0
	jmp LB_3780
LB_3792:
	mov QWORD [rsp+8*0],r14
	mov r13,QWORD [rsp+16+8*0]
	mov r14,QWORD [rsp+8*0]
	jmp LB_3795
LB_3795
;; rsp=0 , %2221~1'(= r ) %2220~0'(= r ) %2219~{ } %2218~{ } 
; #24 { } ⊢ 0(<2)◂{ }
;; rsp=0 , %2222~0(<2)◂{ } %2221~1'(= r ) %2220~0'(= r ) %2219~{ } %2218~{ } 
; ∎ 0(<2)◂{ }
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn { }
; .dlt.ptn { }
; .mov_ptn2 0(<2)◂{ } ⊢ 2'(= a3◂ [ *{ }] )
; .mov_ptn 0(<2)◂{ } ⊢ 2'(= a3◂ [ *{ }] )
	mov rax,unt 
	mov rax,unt_0
	mov r8,rax
	jmp LB_3796
LB_3796:
	cmp BYTE [r8+6],0
	jnz LB_3780
	POP_GRM_SCC
	ret
LB_3780:
	RB_GRM
	mov QWORD [rsp+8*0],r14
	mov r13,QWORD [rsp+16+8*0]
	mov r14,QWORD [rsp+8*0]
	jmp LB_3798
LB_3798
;; rsp=0 , %2224~1'(= r ) %2223~0'(= r ) 
; #24 { } ⊢ 0(<2)◂{ }
;; rsp=0 , %2225~0(<2)◂{ } %2224~1'(= r ) %2223~0'(= r ) 
; ∎ 0(<2)◂{ }
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂{ } ⊢ 2'(= a3◂ [ *{ }] )
; .mov_ptn 0(<2)◂{ } ⊢ 2'(= a3◂ [ *{ }] )
	mov rax,unt 
	mov rax,unt_0
	mov r8,rax
	jmp LB_3799
LB_3799:
	cmp BYTE [r8+6],0
	jnz LB_3797
	POP_GRM_SCC
	ret
LB_3797:
	POP_GRM_FAIL 
	ret
ETR_248:
	mov r9,0x0000_ffff_ffff_ffff
	and r9,[r13]
	call GRM_248
	ret
GRM_248:
	PUSH_GRM
	jmp LB_3802
LB_3801:
	add r14,1 
LB_3802:
	cmp r14,r9
	jge LB_3803
	JZ_SPC BYTE [r13+8+r14], LB_3801
LB_3803
	lea rax,[r14+6]
	cmp rax,r9
	jg LB_3806
	jmp LB_3807
LB_3806:
	mov r8,unt_1
	jmp LB_3804
LB_3807:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],226
	jnz LB_3808
	cmp BYTE [rdi+1],136
	jnz LB_3808
	cmp BYTE [rdi+2],142
	jnz LB_3808
	cmp BYTE [rdi+3],226
	jnz LB_3808
	cmp BYTE [rdi+4],136
	jnz LB_3808
	cmp BYTE [rdi+5],142
	jnz LB_3808
	jmp LB_3809
LB_3808:
	mov r8,unt_1
	jmp LB_3804
LB_3809:
	add r14,6
	jmp LB_3805
LB_3804:
	add rsp,0
	jmp LB_3800
LB_3805:
	mov QWORD [rsp+8*0],r14
	mov r13,QWORD [rsp+16+8*0]
	mov r14,QWORD [rsp+8*0]
	jmp LB_3810
LB_3810
;; rsp=0 , %2227~1'(= r ) %2226~0'(= r ) 
; #24 { } ⊢ 0(<2)◂{ }
;; rsp=0 , %2228~0(<2)◂{ } %2227~1'(= r ) %2226~0'(= r ) 
; ∎ 0(<2)◂{ }
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂{ } ⊢ 2'(= a3◂ [ *{ }] )
; .mov_ptn 0(<2)◂{ } ⊢ 2'(= a3◂ [ *{ }] )
	mov rax,unt 
	mov rax,unt_0
	mov r8,rax
	jmp LB_3811
LB_3811:
	cmp BYTE [r8+6],0
	jnz LB_3800
	POP_GRM_SCC
	ret
LB_3800:
	RB_GRM
	jmp LB_3814
LB_3813:
	add r14,1 
LB_3814:
	cmp r14,r9
	jge LB_3815
	JZ_SPC BYTE [r13+8+r14], LB_3813
LB_3815
	lea rax,[r14+4]
	cmp rax,r9
	jg LB_3818
	jmp LB_3819
LB_3818:
	mov r8,unt_1
	jmp LB_3816
LB_3819:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],194
	jnz LB_3820
	cmp BYTE [rdi+1],167
	jnz LB_3820
	cmp BYTE [rdi+2],194
	jnz LB_3820
	cmp BYTE [rdi+3],167
	jnz LB_3820
	jmp LB_3821
LB_3820:
	mov r8,unt_1
	jmp LB_3816
LB_3821:
	add r14,4
	jmp LB_3817
LB_3816:
	add rsp,0
	jmp LB_3812
LB_3817:
	PUSH_GRM
	jmp LB_3825
LB_3824:
	add r14,1 
LB_3825:
	cmp r14,r9
	jge LB_3826
	JZ_SPC BYTE [r13+8+r14], LB_3824
LB_3826
	call GRM_76
	cmp BYTE [r8+6],0
	jnz LB_3829
	jmp LB_3830
LB_3829:
	jmp LB_3827
LB_3830:
	sub rsp,8
; .mov_ptn2 2'(= {| l |} ) ⊢ 8'(= {| l |} )
; .mov_ptn 2'(= {| l |} ) ⊢ 8'(= {| l |} )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_3828
LB_3827:
	add rsp,0
	jmp LB_3823
LB_3828:
	jmp LB_3832
LB_3831:
	add r14,1 
LB_3832:
	cmp r14,r9
	jge LB_3833
	JZ_SPC BYTE [r13+8+r14], LB_3831
LB_3833
	lea rax,[r14+1]
	cmp rax,r9
	jg LB_3836
	jmp LB_3837
LB_3836:
	mov r8,unt_1
	jmp LB_3834
LB_3837:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],61
	jnz LB_3838
	jmp LB_3839
LB_3838:
	mov r8,unt_1
	jmp LB_3834
LB_3839:
	add r14,1
	jmp LB_3835
LB_3834:
	add rsp,8
	jmp LB_3823
LB_3835:
	jmp LB_3841
LB_3840:
	add r14,1 
LB_3841:
	cmp r14,r9
	jge LB_3842
	JZ_SPC BYTE [r13+8+r14], LB_3840
LB_3842
	call GRM_191
	cmp BYTE [r8+6],0
	jnz LB_3845
	jmp LB_3846
LB_3845:
	jmp LB_3843
LB_3846:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a9◂ [ ] ) ⊢ 9'(= a9◂ [ ] )
; .mov_ptn 2'(= a9◂ [ ] ) ⊢ 9'(= a9◂ [ ] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_3844
LB_3843:
	add rsp,8
	jmp LB_3823
LB_3844:
	jmp LB_3848
LB_3847:
	add r14,1 
LB_3848:
	cmp r14,r9
	jge LB_3849
	JZ_SPC BYTE [r13+8+r14], LB_3847
LB_3849
	call GRM_248
	cmp BYTE [r8+6],0
	jnz LB_3852
	jmp LB_3853
LB_3852:
	jmp LB_3850
LB_3853:
; .mov_ptn2 2'(= *{ } ) ⊢ { }
; .mov_ptn 2'(= *{ } ) ⊢ { }
	jmp LB_3851
LB_3850:
	add rsp,16
	jmp LB_3823
LB_3851:
	mov QWORD [rsp+8*2],r14
	mov r13,QWORD [rsp+16+8*2]
	mov r14,QWORD [rsp+8*2]
	jmp LB_3854
LB_3854
;; rsp=2 , %2235~1'(= r ) %2234~0'(= r ) %2233~{ } %2232~9'(= a9◂ [ ] ) %2231~8'(= {| l |} ) 
; #24 { } ⊢ 0(<2)◂{ }
;; rsp=2 , %2236~0(<2)◂{ } %2235~1'(= r ) %2234~0'(= r ) %2233~{ } %2232~9'(= a9◂ [ ] ) %2231~8'(= {| l |} ) 
; ∎ 0(<2)◂{ }
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn { }
; .dlt.ptn 9'(= a9◂ [ ] )
	mov rdi,QWORD [rsp-8+8*1]
	C_PUSH_REGS
	mov r8,rdi
	call LB_388
	C_POP_REGS
; .dlt.ptn 8'(= {| l |} )
	mov rdi,QWORD [rsp-8+8*2]
	C_PUSH_REGS
	mov r8,rdi
	mov rdi,r8
	call free_s8
	C_POP_REGS
; .mov_ptn2 0(<2)◂{ } ⊢ 2'(= a3◂ [ *{ }] )
; .mov_ptn 0(<2)◂{ } ⊢ 2'(= a3◂ [ *{ }] )
	mov rax,unt 
	mov rax,unt_0
	mov r8,rax
	add rsp,16
	jmp LB_3855
LB_3855:
	cmp BYTE [r8+6],0
	jnz LB_3823
	POP_GRM_SCC
	jmp LB_3822
LB_3823:
	RB_GRM
	jmp LB_3858
LB_3857:
	add r14,1 
LB_3858:
	cmp r14,r9
	jge LB_3859
	JZ_SPC BYTE [r13+8+r14], LB_3857
LB_3859
	call GRM_248
	cmp BYTE [r8+6],0
	jnz LB_3862
	jmp LB_3863
LB_3862:
	jmp LB_3860
LB_3863:
; .mov_ptn2 2'(= *{ } ) ⊢ { }
; .mov_ptn 2'(= *{ } ) ⊢ { }
	jmp LB_3861
LB_3860:
	add rsp,0
	jmp LB_3856
LB_3861:
	jmp LB_3865
LB_3864:
	add r14,1 
LB_3865:
	cmp r14,r9
	jge LB_3866
	JZ_SPC BYTE [r13+8+r14], LB_3864
LB_3866
	call GRM_248
	cmp BYTE [r8+6],0
	jnz LB_3869
	jmp LB_3870
LB_3869:
	jmp LB_3867
LB_3870:
; .mov_ptn2 2'(= *{ } ) ⊢ { }
; .mov_ptn 2'(= *{ } ) ⊢ { }
	jmp LB_3868
LB_3867:
	add rsp,0
	jmp LB_3856
LB_3868:
	mov QWORD [rsp+8*0],r14
	mov r13,QWORD [rsp+16+8*0]
	mov r14,QWORD [rsp+8*0]
	jmp LB_3871
LB_3871
;; rsp=0 , %2240~1'(= r ) %2239~0'(= r ) %2238~{ } %2237~{ } 
; #24 { } ⊢ 0(<2)◂{ }
;; rsp=0 , %2241~0(<2)◂{ } %2240~1'(= r ) %2239~0'(= r ) %2238~{ } %2237~{ } 
; ∎ 0(<2)◂{ }
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn { }
; .dlt.ptn { }
; .mov_ptn2 0(<2)◂{ } ⊢ 2'(= a3◂ [ *{ }] )
; .mov_ptn 0(<2)◂{ } ⊢ 2'(= a3◂ [ *{ }] )
	mov rax,unt 
	mov rax,unt_0
	mov r8,rax
	jmp LB_3872
LB_3872:
	cmp BYTE [r8+6],0
	jnz LB_3856
	POP_GRM_SCC
	jmp LB_3822
LB_3856:
	POP_GRM_FAIL 
	jmp LB_3822
LB_3822:
	cmp BYTE [r8+6],0
	jnz LB_3873
	jmp LB_3874
LB_3873:
	add rsp,0
	POP_GRM_FAIL
	ret
LB_3874:
	mov QWORD [rsp+8*0],r14
; .mov_ptn2 2'(= *{ } ) ⊢ { }
; .mov_ptn 2'(= *{ } ) ⊢ { }
	mov r13,QWORD [rsp+16+8*0]
	mov r14,QWORD [rsp+8*0]
	jmp LB_3875
LB_3875
;; rsp=0 , %2242~{ } %2230~1'(= r ) %2229~0'(= r ) 
; #24 { } ⊢ 0(<2)◂{ }
;; rsp=0 , %2243~0(<2)◂{ } %2242~{ } %2230~1'(= r ) %2229~0'(= r ) 
; ∎ 0(<2)◂{ }
; .dlt.ptn { }
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂{ } ⊢ 2'(= a3◂ [ *{ }] )
; .mov_ptn 0(<2)◂{ } ⊢ 2'(= a3◂ [ *{ }] )
	mov rax,unt 
	mov rax,unt_0
	mov r8,rax
	jmp LB_3876
LB_3876:
	cmp BYTE [r8+6],0
	jnz LB_3812
	POP_GRM_SCC
	ret
LB_3812:
	RB_GRM
	jmp LB_3879
LB_3878:
	add r14,1 
LB_3879:
	cmp r14,r9
	jge LB_3880
	JZ_SPC BYTE [r13+8+r14], LB_3878
LB_3880
	cmp r14,r9
	jge LB_3883
	jmp LB_3884
LB_3883:
	mov r8,unt_1 
	jmp LB_3881
LB_3884:
	movzx rdi,BYTE [r13+8+r14]
	push rdi 
	add r14,1 
	jmp LB_3882
LB_3881:
	add rsp,0
	jmp LB_3877
LB_3882:
	jmp LB_3886
LB_3885:
	add r14,1 
LB_3886:
	cmp r14,r9
	jge LB_3887
	JZ_SPC BYTE [r13+8+r14], LB_3885
LB_3887
	call GRM_248
	cmp BYTE [r8+6],0
	jnz LB_3890
	jmp LB_3891
LB_3890:
	jmp LB_3888
LB_3891:
; .mov_ptn2 2'(= *{ } ) ⊢ { }
; .mov_ptn 2'(= *{ } ) ⊢ { }
	jmp LB_3889
LB_3888:
	add rsp,8
	jmp LB_3877
LB_3889:
	mov QWORD [rsp+8*1],r14
	mov r13,QWORD [rsp+16+8*1]
	mov r14,QWORD [rsp+8*1]
	jmp LB_3892
LB_3892
;; rsp=1 , %2247~1'(= r ) %2246~0'(= r ) %2245~{ } %2244~8'(= r ) 
; #24 { } ⊢ 0(<2)◂{ }
;; rsp=1 , %2248~0(<2)◂{ } %2247~1'(= r ) %2246~0'(= r ) %2245~{ } %2244~8'(= r ) 
; ∎ 0(<2)◂{ }
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn { }
; .dlt.ptn 8'(= r )
	mov rdi,QWORD [rsp-8+8*1]
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂{ } ⊢ 2'(= a3◂ [ *{ }] )
; .mov_ptn 0(<2)◂{ } ⊢ 2'(= a3◂ [ *{ }] )
	mov rax,unt 
	mov rax,unt_0
	mov r8,rax
	add rsp,8
	jmp LB_3893
LB_3893:
	cmp BYTE [r8+6],0
	jnz LB_3877
	POP_GRM_SCC
	ret
LB_3877:
	RB_GRM
	mov QWORD [rsp+8*0],r14
	mov r13,QWORD [rsp+16+8*0]
	mov r14,QWORD [rsp+8*0]
	jmp LB_3895
LB_3895
;; rsp=0 , %2250~1'(= r ) %2249~0'(= r ) 
; #24 { } ⊢ 0(<2)◂{ }
;; rsp=0 , %2251~0(<2)◂{ } %2250~1'(= r ) %2249~0'(= r ) 
; ∎ 0(<2)◂{ }
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂{ } ⊢ 2'(= a3◂ [ *{ }] )
; .mov_ptn 0(<2)◂{ } ⊢ 2'(= a3◂ [ *{ }] )
	mov rax,unt 
	mov rax,unt_0
	mov r8,rax
	jmp LB_3896
LB_3896:
	cmp BYTE [r8+6],0
	jnz LB_3894
	POP_GRM_SCC
	ret
LB_3894:
	POP_GRM_FAIL 
	ret
ETR_249:
	mov r9,0x0000_ffff_ffff_ffff
	and r9,[r13]
	call GRM_249
	ret
GRM_249:
	PUSH_GRM
	jmp LB_3899
LB_3898:
	add r14,1 
LB_3899:
	cmp r14,r9
	jge LB_3900
	JZ_SPC BYTE [r13+8+r14], LB_3898
LB_3900
	lea rax,[r14+1]
	cmp rax,r9
	jg LB_3903
	jmp LB_3904
LB_3903:
	mov r8,unt_1
	jmp LB_3901
LB_3904:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],61
	jnz LB_3905
	jmp LB_3906
LB_3905:
	mov r8,unt_1
	jmp LB_3901
LB_3906:
	add r14,1
	jmp LB_3902
LB_3901:
	add rsp,0
	jmp LB_3897
LB_3902:
	jmp LB_3908
LB_3907:
	add r14,1 
LB_3908:
	cmp r14,r9
	jge LB_3909
	JZ_SPC BYTE [r13+8+r14], LB_3907
LB_3909
	call GRM_191
	cmp BYTE [r8+6],0
	jnz LB_3912
	jmp LB_3913
LB_3912:
	jmp LB_3910
LB_3913:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a9◂ [ ] ) ⊢ 8'(= a9◂ [ ] )
; .mov_ptn 2'(= a9◂ [ ] ) ⊢ 8'(= a9◂ [ ] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_3911
LB_3910:
	add rsp,0
	POP_GRM_FAIL
	ret
LB_3911:
	jmp LB_3915
LB_3914:
	add r14,1 
LB_3915:
	cmp r14,r9
	jge LB_3916
	JZ_SPC BYTE [r13+8+r14], LB_3914
LB_3916
	call GRM_219
	cmp BYTE [r8+6],0
	jnz LB_3919
	jmp LB_3920
LB_3919:
	jmp LB_3917
LB_3920:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a35◂ [ *{ }] ) ⊢ 9'(= a35◂ [ *{ }] )
; .mov_ptn 2'(= a35◂ [ *{ }] ) ⊢ 9'(= a35◂ [ *{ }] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_3918
LB_3917:
	add rsp,8
	POP_GRM_FAIL
	ret
LB_3918:
	mov QWORD [rsp+8*2],r14
	mov r13,QWORD [rsp+16+8*2]
	mov r14,QWORD [rsp+8*2]
	jmp LB_3921
LB_3921
;; rsp=2 , %2255~1'(= r ) %2254~0'(= r ) %2253~9'(= a35◂ [ *{ }] ) %2252~8'(= a9◂ [ ] ) 
; #171 8'(= a9◂ [ ] ) ⊢ 1(<2)◂8'(= a9◂ [ ] )
;; rsp=2 , %2256~1(<2)◂8'(= a9◂ [ ] ) %2255~1'(= r ) %2254~0'(= r ) %2253~9'(= a35◂ [ *{ }] ) 
; #195 1(<2)◂8'(= a9◂ [ ] ) ⊢ 0(<2)◂1(<2)◂8'(= a9◂ [ ] )
;; rsp=2 , %2257~0(<2)◂1(<2)◂8'(= a9◂ [ ] ) %2255~1'(= r ) %2254~0'(= r ) %2253~9'(= a35◂ [ *{ }] ) 
; #24 0(<2)◂1(<2)◂8'(= a9◂ [ ] ) ⊢ 0(<2)◂0(<2)◂1(<2)◂8'(= a9◂ [ ] )
;; rsp=2 , %2258~0(<2)◂0(<2)◂1(<2)◂8'(= a9◂ [ ] ) %2255~1'(= r ) %2254~0'(= r ) %2253~9'(= a35◂ [ *{ }] ) 
; ∎ 0(<2)◂0(<2)◂1(<2)◂8'(= a9◂ [ ] )
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 9'(= a35◂ [ *{ }] )
	mov rdi,QWORD [rsp-8+8*1]
	C_PUSH_REGS
	mov r8,rdi
	call LB_1701
	C_POP_REGS
; .mov_ptn2 0(<2)◂0(<2)◂1(<2)◂8'(= a9◂ [ ] ) ⊢ 2'(= a3◂ [ a35◂ [ a32◂ [ ]]] )
; .mov_ptn 0(<2)◂0(<2)◂1(<2)◂8'(= a9◂ [ ] ) ⊢ 2'(= a3◂ [ a35◂ [ a32◂ [ ]]] )
	mov rax,QWORD [rsp-8+8*2]
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],1
	mov QWORD [rax+8],rdi
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,16
	jmp LB_3922
LB_3922:
	cmp BYTE [r8+6],0
	jnz LB_3897
	POP_GRM_SCC
	ret
LB_3897:
	RB_GRM
	jmp LB_3925
LB_3924:
	add r14,1 
LB_3925:
	cmp r14,r9
	jge LB_3926
	JZ_SPC BYTE [r13+8+r14], LB_3924
LB_3926
	call GRM_219
	cmp BYTE [r8+6],0
	jnz LB_3929
	jmp LB_3930
LB_3929:
	jmp LB_3927
LB_3930:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a35◂ [ *{ }] ) ⊢ 8'(= a35◂ [ *{ }] )
; .mov_ptn 2'(= a35◂ [ *{ }] ) ⊢ 8'(= a35◂ [ *{ }] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_3928
LB_3927:
	add rsp,0
	jmp LB_3923
LB_3928:
	jmp LB_3932
LB_3931:
	add r14,1 
LB_3932:
	cmp r14,r9
	jge LB_3933
	JZ_SPC BYTE [r13+8+r14], LB_3931
LB_3933
	call GRM_250
	cmp BYTE [r8+6],0
	jnz LB_3936
	jmp LB_3937
LB_3936:
	jmp LB_3934
LB_3937:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a35◂ [ a2◂ [ a31◂ [ ]]] ) ⊢ 9'(= a35◂ [ a2◂ [ a31◂ [ ]]] )
; .mov_ptn 2'(= a35◂ [ a2◂ [ a31◂ [ ]]] ) ⊢ 9'(= a35◂ [ a2◂ [ a31◂ [ ]]] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_3935
LB_3934:
	add rsp,8
	jmp LB_3923
LB_3935:
	mov QWORD [rsp+8*2],r14
	mov r13,QWORD [rsp+16+8*2]
	mov r14,QWORD [rsp+8*2]
	jmp LB_3938
LB_3938
;; rsp=2 , %2262~1'(= r ) %2261~0'(= r ) %2260~9'(= a35◂ [ a2◂ [ a31◂ [ ]]] ) %2259~8'(= a35◂ [ *{ }] ) 
;; ? 9'(= a35◂ [ a2◂ [ a31◂ [ ]]] ) ⊢ 0(<2)◂2'(= a2◂ [ a31◂ [ ]] )
	mov rdi,QWORD [rsp-8+8*1]
	cmp BYTE [rdi+6],0
	jnz LB_3940
	mov QWORD [GBG_VCT+8*0],rdi
	mov r8,QWORD [rdi+8]
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_LN rdi
;; rsp=2 , %2264~2'(= a2◂ [ a31◂ [ ]] ) %2262~1'(= r ) %2261~0'(= r ) %2259~8'(= a35◂ [ *{ }] ) 
; #172 2'(= a2◂ [ a31◂ [ ]] ) ⊢ 0(<2)◂2'(= a2◂ [ a31◂ [ ]] )
;; rsp=2 , %2265~0(<2)◂2'(= a2◂ [ a31◂ [ ]] ) %2262~1'(= r ) %2261~0'(= r ) %2259~8'(= a35◂ [ *{ }] ) 
; #195 0(<2)◂2'(= a2◂ [ a31◂ [ ]] ) ⊢ 0(<2)◂0(<2)◂2'(= a2◂ [ a31◂ [ ]] )
;; rsp=2 , %2266~0(<2)◂0(<2)◂2'(= a2◂ [ a31◂ [ ]] ) %2262~1'(= r ) %2261~0'(= r ) %2259~8'(= a35◂ [ *{ }] ) 
; #24 0(<2)◂0(<2)◂2'(= a2◂ [ a31◂ [ ]] ) ⊢ 0(<2)◂0(<2)◂0(<2)◂2'(= a2◂ [ a31◂ [ ]] )
;; rsp=2 , %2267~0(<2)◂0(<2)◂0(<2)◂2'(= a2◂ [ a31◂ [ ]] ) %2262~1'(= r ) %2261~0'(= r ) %2259~8'(= a35◂ [ *{ }] ) 
; ∎ 0(<2)◂0(<2)◂0(<2)◂2'(= a2◂ [ a31◂ [ ]] )
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 8'(= a35◂ [ *{ }] )
	mov rdi,QWORD [rsp-8+8*2]
	C_PUSH_REGS
	mov r8,rdi
	call LB_1701
	C_POP_REGS
; .mov_ptn2 0(<2)◂0(<2)◂0(<2)◂2'(= a2◂ [ a31◂ [ ]] ) ⊢ 2'(= a3◂ [ a35◂ [ a32◂ [ ]]] )
	mov r13,r8
; .mov_ptn 0(<2)◂0(<2)◂0(<2)◂0'(= a2◂ [ a31◂ [ ]] ) ⊢ 2'(= a3◂ [ a35◂ [ a32◂ [ ]]] )
	mov rax,r13
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,16
	jmp LB_3939
LB_3940:
;; ?. 9'(= a35◂ [ a2◂ [ a31◂ [ ]]] ) ⊢ 1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] )
	mov QWORD [GBG_VCT+8*0],rdi
	mov r8,QWORD [rdi+8]
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_LN rdi
;; rsp=2 , %2263~2'(= a2◂ [ *{ rr{| l |}}] ) %2262~1'(= r ) %2261~0'(= r ) %2259~8'(= a35◂ [ *{ }] ) 
; #194 2'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] )
;; rsp=2 , %2268~1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] ) %2262~1'(= r ) %2261~0'(= r ) %2259~8'(= a35◂ [ *{ }] ) 
; #24 1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 0(<2)◂1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] )
;; rsp=2 , %2269~0(<2)◂1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] ) %2262~1'(= r ) %2261~0'(= r ) %2259~8'(= a35◂ [ *{ }] ) 
; ∎ 0(<2)◂1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] )
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 8'(= a35◂ [ *{ }] )
	mov rdi,QWORD [rsp-8+8*2]
	C_PUSH_REGS
	mov r8,rdi
	call LB_1701
	C_POP_REGS
; .mov_ptn2 0(<2)◂1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 2'(= a3◂ [ a35◂ [ a32◂ [ ]]] )
	mov r13,r8
; .mov_ptn 0(<2)◂1(<2)◂0'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 2'(= a3◂ [ a35◂ [ a32◂ [ ]]] )
	mov rax,r13
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],1
	mov QWORD [rax+8],rdi
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,16
	jmp LB_3939
LB_3939:
	cmp BYTE [r8+6],0
	jnz LB_3923
	POP_GRM_SCC
	ret
LB_3923:
	POP_GRM_FAIL 
	ret
ETR_250:
	mov r9,0x0000_ffff_ffff_ffff
	and r9,[r13]
	call GRM_250
	ret
GRM_250:
	PUSH_GRM
	jmp LB_3943
LB_3942:
	add r14,1 
LB_3943:
	cmp r14,r9
	jge LB_3944
	JZ_SPC BYTE [r13+8+r14], LB_3942
LB_3944
	call GRM_219
	cmp BYTE [r8+6],0
	jnz LB_3947
	jmp LB_3948
LB_3947:
	jmp LB_3945
LB_3948:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a35◂ [ *{ }] ) ⊢ 8'(= a35◂ [ *{ }] )
; .mov_ptn 2'(= a35◂ [ *{ }] ) ⊢ 8'(= a35◂ [ *{ }] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_3946
LB_3945:
	add rsp,0
	jmp LB_3941
LB_3946:
	jmp LB_3950
LB_3949:
	add r14,1 
LB_3950:
	cmp r14,r9
	jge LB_3951
	JZ_SPC BYTE [r13+8+r14], LB_3949
LB_3951
	lea rax,[r14+6]
	cmp rax,r9
	jg LB_3954
	jmp LB_3955
LB_3954:
	mov r8,unt_1
	jmp LB_3952
LB_3955:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],226
	jnz LB_3956
	cmp BYTE [rdi+1],136
	jnz LB_3956
	cmp BYTE [rdi+2],142
	jnz LB_3956
	cmp BYTE [rdi+3],226
	jnz LB_3956
	cmp BYTE [rdi+4],136
	jnz LB_3956
	cmp BYTE [rdi+5],142
	jnz LB_3956
	jmp LB_3957
LB_3956:
	mov r8,unt_1
	jmp LB_3952
LB_3957:
	add r14,6
	jmp LB_3953
LB_3952:
	add rsp,8
	jmp LB_3941
LB_3953:
	jmp LB_3959
LB_3958:
	add r14,1 
LB_3959:
	cmp r14,r9
	jge LB_3960
	JZ_SPC BYTE [r13+8+r14], LB_3958
LB_3960
	call GRM_219
	cmp BYTE [r8+6],0
	jnz LB_3963
	jmp LB_3964
LB_3963:
	jmp LB_3961
LB_3964:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a35◂ [ *{ }] ) ⊢ 9'(= a35◂ [ *{ }] )
; .mov_ptn 2'(= a35◂ [ *{ }] ) ⊢ 9'(= a35◂ [ *{ }] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_3962
LB_3961:
	add rsp,8
	jmp LB_3941
LB_3962:
	mov QWORD [rsp+8*2],r14
	mov r13,QWORD [rsp+16+8*2]
	mov r14,QWORD [rsp+8*2]
	jmp LB_3965
LB_3965
;; rsp=2 , %2273~1'(= r ) %2272~0'(= r ) %2271~9'(= a35◂ [ *{ }] ) %2270~8'(= a35◂ [ *{ }] ) 
; #22 { } ⊢ 1(<2)◂{ }
;; rsp=2 , %2274~1(<2)◂{ } %2273~1'(= r ) %2272~0'(= r ) %2271~9'(= a35◂ [ *{ }] ) %2270~8'(= a35◂ [ *{ }] ) 
; #195 1(<2)◂{ } ⊢ 0(<2)◂1(<2)◂{ }
;; rsp=2 , %2275~0(<2)◂1(<2)◂{ } %2273~1'(= r ) %2272~0'(= r ) %2271~9'(= a35◂ [ *{ }] ) %2270~8'(= a35◂ [ *{ }] ) 
; #24 0(<2)◂1(<2)◂{ } ⊢ 0(<2)◂0(<2)◂1(<2)◂{ }
;; rsp=2 , %2276~0(<2)◂0(<2)◂1(<2)◂{ } %2273~1'(= r ) %2272~0'(= r ) %2271~9'(= a35◂ [ *{ }] ) %2270~8'(= a35◂ [ *{ }] ) 
; ∎ 0(<2)◂0(<2)◂1(<2)◂{ }
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 9'(= a35◂ [ *{ }] )
	mov rdi,QWORD [rsp-8+8*1]
	C_PUSH_REGS
	mov r8,rdi
	call LB_1701
	C_POP_REGS
; .dlt.ptn 8'(= a35◂ [ *{ }] )
	mov rdi,QWORD [rsp-8+8*2]
	C_PUSH_REGS
	mov r8,rdi
	call LB_1701
	C_POP_REGS
; .mov_ptn2 0(<2)◂0(<2)◂1(<2)◂{ } ⊢ 2'(= a3◂ [ a35◂ [ a2◂ [ a31◂ [ ]]]] )
; .mov_ptn 0(<2)◂0(<2)◂1(<2)◂{ } ⊢ 2'(= a3◂ [ a35◂ [ a2◂ [ a31◂ [ ]]]] )
	mov rax,unt 
	mov rax,unt_1
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,16
	jmp LB_3966
LB_3966:
	cmp BYTE [r8+6],0
	jnz LB_3941
	POP_GRM_SCC
	ret
LB_3941:
	RB_GRM
	jmp LB_3969
LB_3968:
	add r14,1 
LB_3969:
	cmp r14,r9
	jge LB_3970
	JZ_SPC BYTE [r13+8+r14], LB_3968
LB_3970
	call GRM_219
	cmp BYTE [r8+6],0
	jnz LB_3973
	jmp LB_3974
LB_3973:
	jmp LB_3971
LB_3974:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a35◂ [ *{ }] ) ⊢ 8'(= a35◂ [ *{ }] )
; .mov_ptn 2'(= a35◂ [ *{ }] ) ⊢ 8'(= a35◂ [ *{ }] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_3972
LB_3971:
	add rsp,0
	jmp LB_3967
LB_3972:
	jmp LB_3976
LB_3975:
	add r14,1 
LB_3976:
	cmp r14,r9
	jge LB_3977
	JZ_SPC BYTE [r13+8+r14], LB_3975
LB_3977
	call GRM_246
	cmp BYTE [r8+6],0
	jnz LB_3980
	jmp LB_3981
LB_3980:
	jmp LB_3978
LB_3981:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a35◂ [ a31◂ [ ]] ) ⊢ 9'(= a35◂ [ a31◂ [ ]] )
; .mov_ptn 2'(= a35◂ [ a31◂ [ ]] ) ⊢ 9'(= a35◂ [ a31◂ [ ]] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_3979
LB_3978:
	add rsp,8
	jmp LB_3967
LB_3979:
	jmp LB_3983
LB_3982:
	add r14,1 
LB_3983:
	cmp r14,r9
	jge LB_3984
	JZ_SPC BYTE [r13+8+r14], LB_3982
LB_3984
	call GRM_250
	cmp BYTE [r8+6],0
	jnz LB_3987
	jmp LB_3988
LB_3987:
	jmp LB_3985
LB_3988:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a35◂ [ a2◂ [ a31◂ [ ]]] ) ⊢ 10'(= a35◂ [ a2◂ [ a31◂ [ ]]] )
; .mov_ptn 2'(= a35◂ [ a2◂ [ a31◂ [ ]]] ) ⊢ 10'(= a35◂ [ a2◂ [ a31◂ [ ]]] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_3986
LB_3985:
	add rsp,16
	jmp LB_3967
LB_3986:
	mov QWORD [rsp+8*3],r14
	mov r13,QWORD [rsp+16+8*3]
	mov r14,QWORD [rsp+8*3]
	jmp LB_3989
LB_3989
;; rsp=3 , %2281~1'(= r ) %2280~0'(= r ) %2279~10'(= a35◂ [ a2◂ [ a31◂ [ ]]] ) %2278~9'(= a35◂ [ a31◂ [ ]] ) %2277~8'(= a35◂ [ *{ }] ) 
; #196 { 9'(= a35◂ [ a31◂ [ ]] ) 10'(= a35◂ [ a2◂ [ a31◂ [ ]]] ) } ⊢ 2'(= a35◂ [ *{ a31◂ [ ]a2◂ [ a31◂ [ ]]}] )
	sub rsp,16
	mov QWORD [rsp+8*0],r13
	mov QWORD [rsp+8*1],r14
; .mov_ptn2 { 9'(= a35◂ [ a31◂ [ ]] ) 10'(= a35◂ [ a2◂ [ a31◂ [ ]]] ) } ⊢ { 0'(= a35◂ [ a31◂ [ ]] ) 1'(= a35◂ [ a2◂ [ a31◂ [ ]]] ) }
; .mov_ptn 10'(= a35◂ [ a2◂ [ a31◂ [ ]]] ) ⊢ 1'(= a35◂ [ a2◂ [ a31◂ [ ]]] )
	mov rax,QWORD [rsp-8+8*3]
	mov r14,rax
; .mov_ptn 9'(= a35◂ [ a31◂ [ ]] ) ⊢ 0'(= a35◂ [ a31◂ [ ]] )
	mov rax,QWORD [rsp-8+8*4]
	mov r13,rax
	call LB_3528
	mov r14,QWORD [rsp-8+8*2]
	mov r8,r13
	mov r13,QWORD [rsp-8+8*1]
	add rsp,32
;; rsp=1 , %2282~2'(= a35◂ [ *{ a31◂ [ ]a2◂ [ a31◂ [ ]]}] ) %2281~1'(= r ) %2280~0'(= r ) %2277~8'(= a35◂ [ *{ }] ) 
;; ? 2'(= a35◂ [ *{ a31◂ [ ]a2◂ [ a31◂ [ ]]}] ) ⊢ 0(<2)◂{ 3'(= a31◂ [ ] ) 4'(= a2◂ [ a31◂ [ ]] ) }
	mov rdi,r8
	cmp BYTE [rdi+6],0
	jnz LB_3991
	mov r9, QWORD [r8+8]
	mov r10, QWORD [r8+16]
	mov QWORD [GBG_VCT+8*0],r8
	mov rdi,QWORD [GBG_VCT+8*0]
	mov rax,[SS_RCD_2_TOP]
	mov QWORD [rdi],rax 
	mov QWORD [SS_RCD_2_TOP],rdi
;; rsp=1 , %2285~4'(= a2◂ [ a31◂ [ ]] ) %2284~3'(= a31◂ [ ] ) %2281~1'(= r ) %2280~0'(= r ) %2277~8'(= a35◂ [ *{ }] ) 
; #23 { 3'(= a31◂ [ ] ) 4'(= a2◂ [ a31◂ [ ]] ) } ⊢ 0(<2)◂{ 3'(= a31◂ [ ] ) 4'(= a2◂ [ a31◂ [ ]] ) }
;; rsp=1 , %2286~0(<2)◂{ 3'(= a31◂ [ ] ) 4'(= a2◂ [ a31◂ [ ]] ) } %2281~1'(= r ) %2280~0'(= r ) %2277~8'(= a35◂ [ *{ }] ) 
; #195 0(<2)◂{ 3'(= a31◂ [ ] ) 4'(= a2◂ [ a31◂ [ ]] ) } ⊢ 0(<2)◂0(<2)◂{ 3'(= a31◂ [ ] ) 4'(= a2◂ [ a31◂ [ ]] ) }
;; rsp=1 , %2287~0(<2)◂0(<2)◂{ 3'(= a31◂ [ ] ) 4'(= a2◂ [ a31◂ [ ]] ) } %2281~1'(= r ) %2280~0'(= r ) %2277~8'(= a35◂ [ *{ }] ) 
; #24 0(<2)◂0(<2)◂{ 3'(= a31◂ [ ] ) 4'(= a2◂ [ a31◂ [ ]] ) } ⊢ 0(<2)◂0(<2)◂0(<2)◂{ 3'(= a31◂ [ ] ) 4'(= a2◂ [ a31◂ [ ]] ) }
;; rsp=1 , %2288~0(<2)◂0(<2)◂0(<2)◂{ 3'(= a31◂ [ ] ) 4'(= a2◂ [ a31◂ [ ]] ) } %2281~1'(= r ) %2280~0'(= r ) %2277~8'(= a35◂ [ *{ }] ) 
; ∎ 0(<2)◂0(<2)◂0(<2)◂{ 3'(= a31◂ [ ] ) 4'(= a2◂ [ a31◂ [ ]] ) }
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 8'(= a35◂ [ *{ }] )
	mov rdi,QWORD [rsp-8+8*1]
	C_PUSH_REGS
	mov r8,rdi
	call LB_1701
	C_POP_REGS
; .mov_ptn2 0(<2)◂0(<2)◂0(<2)◂{ 3'(= a31◂ [ ] ) 4'(= a2◂ [ a31◂ [ ]] ) } ⊢ 2'(= a3◂ [ a35◂ [ a2◂ [ a31◂ [ ]]]] )
; .mov_ptn 0(<2)◂0(<2)◂0(<2)◂{ 3'(= a31◂ [ ] ) 4'(= a2◂ [ a31◂ [ ]] ) } ⊢ 2'(= a3◂ [ a35◂ [ a2◂ [ a31◂ [ ]]]] )
	ALC_RCD 2, rax
	mov r13,rax
	mov rax,r9
	mov QWORD [r13+8+8*0],rax
	mov rax,r10
	mov QWORD [r13+8+8*1],rax
	mov rax,r13
	mov BYTE [rax+6],0
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,8
	jmp LB_3990
LB_3991:
;; ?. 2'(= a35◂ [ *{ a31◂ [ ]a2◂ [ a31◂ [ ]]}] ) ⊢ 1(<2)◂3'(= a2◂ [ *{ rr{| l |}}] )
	mov QWORD [GBG_VCT+8*0],rdi
	mov r9,QWORD [rdi+8]
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_LN rdi
;; rsp=1 , %2283~3'(= a2◂ [ *{ rr{| l |}}] ) %2281~1'(= r ) %2280~0'(= r ) %2277~8'(= a35◂ [ *{ }] ) 
; #194 3'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 1(<2)◂3'(= a2◂ [ *{ rr{| l |}}] )
;; rsp=1 , %2289~1(<2)◂3'(= a2◂ [ *{ rr{| l |}}] ) %2281~1'(= r ) %2280~0'(= r ) %2277~8'(= a35◂ [ *{ }] ) 
; #24 1(<2)◂3'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 0(<2)◂1(<2)◂3'(= a2◂ [ *{ rr{| l |}}] )
;; rsp=1 , %2290~0(<2)◂1(<2)◂3'(= a2◂ [ *{ rr{| l |}}] ) %2281~1'(= r ) %2280~0'(= r ) %2277~8'(= a35◂ [ *{ }] ) 
; ∎ 0(<2)◂1(<2)◂3'(= a2◂ [ *{ rr{| l |}}] )
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 8'(= a35◂ [ *{ }] )
	mov rdi,QWORD [rsp-8+8*1]
	C_PUSH_REGS
	mov r8,rdi
	call LB_1701
	C_POP_REGS
; .mov_ptn2 0(<2)◂1(<2)◂3'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 2'(= a3◂ [ a35◂ [ a2◂ [ a31◂ [ ]]]] )
; .mov_ptn 0(<2)◂1(<2)◂3'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 2'(= a3◂ [ a35◂ [ a2◂ [ a31◂ [ ]]]] )
	mov rax,r9
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],1
	mov QWORD [rax+8],rdi
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,8
	jmp LB_3990
LB_3990:
	cmp BYTE [r8+6],0
	jnz LB_3967
	POP_GRM_SCC
	ret
LB_3967:
	RB_GRM
	call GRM_248
	cmp BYTE [r8+6],0
	jnz LB_3995
	jmp LB_3996
LB_3995:
	jmp LB_3993
LB_3996:
; .mov_ptn2 2'(= *{ } ) ⊢ { }
; .mov_ptn 2'(= *{ } ) ⊢ { }
	jmp LB_3994
LB_3993:
	add rsp,0
	jmp LB_3992
LB_3994:
	mov QWORD [rsp+8*0],r14
	mov r13,QWORD [rsp+16+8*0]
	mov r14,QWORD [rsp+8*0]
	jmp LB_3997
LB_3997
;; rsp=0 , %2293~1'(= r ) %2292~0'(= r ) %2291~{ } 
; #22 { } ⊢ 1(<2)◂{ }
;; rsp=0 , %2294~1(<2)◂{ } %2293~1'(= r ) %2292~0'(= r ) %2291~{ } 
; $ %[ "glb_etr 7" ] ⊢ %[ "glb_etr 7" ]
;; rsp=0 , %2295~%[ "glb_etr 7" ] %2294~1(<2)◂{ } %2293~1'(= r ) %2292~0'(= r ) %2291~{ } 
; #23 { { 0'(= r ) 1'(= r ) %[ "glb_etr 7" ] } 1(<2)◂{ } } ⊢ 0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "glb_etr 7" ] } 1(<2)◂{ } }
;; rsp=0 , %2296~0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "glb_etr 7" ] } 1(<2)◂{ } } %2291~{ } 
; #194 0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "glb_etr 7" ] } 1(<2)◂{ } } ⊢ 1(<2)◂0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "glb_etr 7" ] } 1(<2)◂{ } }
;; rsp=0 , %2297~1(<2)◂0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "glb_etr 7" ] } 1(<2)◂{ } } %2291~{ } 
; #24 1(<2)◂0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "glb_etr 7" ] } 1(<2)◂{ } } ⊢ 0(<2)◂1(<2)◂0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "glb_etr 7" ] } 1(<2)◂{ } }
;; rsp=0 , %2298~0(<2)◂1(<2)◂0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "glb_etr 7" ] } 1(<2)◂{ } } %2291~{ } 
; ∎ 0(<2)◂1(<2)◂0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "glb_etr 7" ] } 1(<2)◂{ } }
; .dlt.ptn { }
; .mov_ptn2 0(<2)◂1(<2)◂0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "glb_etr 7" ] } 1(<2)◂{ } } ⊢ 2'(= a3◂ [ a35◂ [ a2◂ [ a31◂ [ ]]]] )
; .mov_ptn 0(<2)◂1(<2)◂0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "glb_etr 7" ] } 1(<2)◂{ } } ⊢ 2'(= a3◂ [ a35◂ [ a2◂ [ a31◂ [ ]]]] )
	ALC_RCD 2, rax
	mov r9,rax
	ALC_RCD 3, rax
	mov r10,rax
	mov rax,r13
	mov QWORD [r10+8+8*0],rax
	mov rax,r14
	mov QWORD [r10+8+8*1],rax
	mov rsi,1  
	mov rdi,24
	xor rax,rax 
	C_CALL_SF calloc
	mov QWORD [rax],9
	mov BYTE [rax+8+0],103
	mov BYTE [rax+8+1],108
	mov BYTE [rax+8+2],98
	mov BYTE [rax+8+3],95
	mov BYTE [rax+8+4],101
	mov BYTE [rax+8+5],116
	mov BYTE [rax+8+6],114
	mov BYTE [rax+8+7],32
	mov BYTE [rax+8+8],55
	mov QWORD [r10+8+8*2],rax
	mov rax,r10
	mov QWORD [r9+8+8*0],rax
	mov rax,unt 
	mov rax,unt_1
	mov QWORD [r9+8+8*1],rax
	mov rax,r9
	mov BYTE [rax+6],0
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],1
	mov QWORD [rax+8],rdi
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	jmp LB_3998
LB_3998:
	cmp BYTE [r8+6],0
	jnz LB_3992
	POP_GRM_SCC
	ret
LB_3992:
	POP_GRM_FAIL 
	ret
ETR_251:
	mov r9,0x0000_ffff_ffff_ffff
	and r9,[r13]
	call GRM_251
	ret
GRM_251:
	PUSH_GRM
	jmp LB_4001
LB_4000:
	add r14,1 
LB_4001:
	cmp r14,r9
	jge LB_4002
	JZ_SPC BYTE [r13+8+r14], LB_4000
LB_4002
	lea rax,[r14+1]
	cmp rax,r9
	jg LB_4005
	jmp LB_4006
LB_4005:
	mov r8,unt_1
	jmp LB_4003
LB_4006:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],64
	jnz LB_4007
	jmp LB_4008
LB_4007:
	mov r8,unt_1
	jmp LB_4003
LB_4008:
	add r14,1
	jmp LB_4004
LB_4003:
	add rsp,0
	jmp LB_3999
LB_4004:
	jmp LB_4010
LB_4009:
	add r14,1 
LB_4010:
	cmp r14,r9
	jge LB_4011
	JZ_SPC BYTE [r13+8+r14], LB_4009
LB_4011
	lea rax,[r14+1]
	cmp rax,r9
	jg LB_4014
	jmp LB_4015
LB_4014:
	mov r8,unt_1
	jmp LB_4012
LB_4015:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],46
	jnz LB_4016
	jmp LB_4017
LB_4016:
	mov r8,unt_1
	jmp LB_4012
LB_4017:
	add r14,1
	jmp LB_4013
LB_4012:
	add rsp,0
	POP_GRM_FAIL
	ret
LB_4013:
	jmp LB_4019
LB_4018:
	add r14,1 
LB_4019:
	cmp r14,r9
	jge LB_4020
	JZ_SPC BYTE [r13+8+r14], LB_4018
LB_4020
	call GRM_252
	cmp BYTE [r8+6],0
	jnz LB_4023
	jmp LB_4024
LB_4023:
	jmp LB_4021
LB_4024:
	sub rsp,16
; .mov_ptn2 2'(= *{ {| l |}a34◂ [ ]} ) ⊢ { 8'(= {| l |} ) 9'(= a34◂ [ ] ) }
; .mov_ptn 2'(= *{ {| l |}a34◂ [ ]} ) ⊢ { 8'(= {| l |} ) 9'(= a34◂ [ ] ) }
	mov r10, QWORD [r8+8]
	mov QWORD [rsp-8+8*2],r10
	mov r11, QWORD [r8+16]
	mov QWORD [rsp-8+8*1],r11
	jmp LB_4022
LB_4021:
	add rsp,0
	POP_GRM_FAIL
	ret
LB_4022:
	jmp LB_4026
LB_4025:
	add r14,1 
LB_4026:
	cmp r14,r9
	jge LB_4027
	JZ_SPC BYTE [r13+8+r14], LB_4025
LB_4027
	call GRM_255
	cmp BYTE [r8+6],0
	jnz LB_4030
	jmp LB_4031
LB_4030:
	jmp LB_4028
LB_4031:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a2◂ [ *{ {| l |}a34◂ [ ]}] ) ⊢ 10'(= a2◂ [ *{ {| l |}a34◂ [ ]}] )
; .mov_ptn 2'(= a2◂ [ *{ {| l |}a34◂ [ ]}] ) ⊢ 10'(= a2◂ [ *{ {| l |}a34◂ [ ]}] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_4029
LB_4028:
	add rsp,16
	POP_GRM_FAIL
	ret
LB_4029:
	mov QWORD [rsp+8*3],r14
	mov r13,QWORD [rsp+16+8*3]
	mov r14,QWORD [rsp+8*3]
	jmp LB_4032
LB_4032
;; rsp=3 , %2302~1'(= r ) %2301~0'(= r ) %2300~10'(= a2◂ [ *{ {| l |}a34◂ [ ]}] ) %2299~{ 8'(= {| l |} ) 9'(= a34◂ [ ] ) } 
; #23 { { 8'(= {| l |} ) 9'(= a34◂ [ ] ) } 10'(= a2◂ [ *{ {| l |}a34◂ [ ]}] ) } ⊢ 0(<2)◂{ { 8'(= {| l |} ) 9'(= a34◂ [ ] ) } 10'(= a2◂ [ *{ {| l |}a34◂ [ ]}] ) }
;; rsp=3 , %2303~0(<2)◂{ { 8'(= {| l |} ) 9'(= a34◂ [ ] ) } 10'(= a2◂ [ *{ {| l |}a34◂ [ ]}] ) } %2302~1'(= r ) %2301~0'(= r ) 
; #173 0(<2)◂{ { 8'(= {| l |} ) 9'(= a34◂ [ ] ) } 10'(= a2◂ [ *{ {| l |}a34◂ [ ]}] ) } ⊢ 5(<6)◂0(<2)◂{ { 8'(= {| l |} ) 9'(= a34◂ [ ] ) } 10'(= a2◂ [ *{ {| l |}a34◂ [ ]}] ) }
;; rsp=3 , %2304~5(<6)◂0(<2)◂{ { 8'(= {| l |} ) 9'(= a34◂ [ ] ) } 10'(= a2◂ [ *{ {| l |}a34◂ [ ]}] ) } %2302~1'(= r ) %2301~0'(= r ) 
; #24 5(<6)◂0(<2)◂{ { 8'(= {| l |} ) 9'(= a34◂ [ ] ) } 10'(= a2◂ [ *{ {| l |}a34◂ [ ]}] ) } ⊢ 0(<2)◂5(<6)◂0(<2)◂{ { 8'(= {| l |} ) 9'(= a34◂ [ ] ) } 10'(= a2◂ [ *{ {| l |}a34◂ [ ]}] ) }
;; rsp=3 , %2305~0(<2)◂5(<6)◂0(<2)◂{ { 8'(= {| l |} ) 9'(= a34◂ [ ] ) } 10'(= a2◂ [ *{ {| l |}a34◂ [ ]}] ) } %2302~1'(= r ) %2301~0'(= r ) 
; ∎ 0(<2)◂5(<6)◂0(<2)◂{ { 8'(= {| l |} ) 9'(= a34◂ [ ] ) } 10'(= a2◂ [ *{ {| l |}a34◂ [ ]}] ) }
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂5(<6)◂0(<2)◂{ { 8'(= {| l |} ) 9'(= a34◂ [ ] ) } 10'(= a2◂ [ *{ {| l |}a34◂ [ ]}] ) } ⊢ 2'(= a3◂ [ a31◂ [ ]] )
; .mov_ptn 0(<2)◂5(<6)◂0(<2)◂{ { 8'(= {| l |} ) 9'(= a34◂ [ ] ) } 10'(= a2◂ [ *{ {| l |}a34◂ [ ]}] ) } ⊢ 2'(= a3◂ [ a31◂ [ ]] )
	ALC_RCD 2, rax
	mov r13,rax
	ALC_RCD 2, rax
	mov r14,rax
	mov rax,QWORD [rsp-8+8*3]
	mov QWORD [r14+8+8*0],rax
	mov rax,QWORD [rsp-8+8*2]
	mov QWORD [r14+8+8*1],rax
	mov rax,r14
	mov QWORD [r13+8+8*0],rax
	mov rax,QWORD [rsp-8+8*1]
	mov QWORD [r13+8+8*1],rax
	mov rax,r13
	mov BYTE [rax+6],0
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],5
	mov QWORD [rax+8],rdi
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,24
	jmp LB_4033
LB_4033:
	cmp BYTE [r8+6],0
	jnz LB_3999
	POP_GRM_SCC
	ret
LB_3999:
	RB_GRM
	jmp LB_4036
LB_4035:
	add r14,1 
LB_4036:
	cmp r14,r9
	jge LB_4037
	JZ_SPC BYTE [r13+8+r14], LB_4035
LB_4037
	call GRM_252
	cmp BYTE [r8+6],0
	jnz LB_4040
	jmp LB_4041
LB_4040:
	jmp LB_4038
LB_4041:
	sub rsp,16
; .mov_ptn2 2'(= *{ {| l |}a34◂ [ ]} ) ⊢ { 8'(= {| l |} ) 9'(= a34◂ [ ] ) }
; .mov_ptn 2'(= *{ {| l |}a34◂ [ ]} ) ⊢ { 8'(= {| l |} ) 9'(= a34◂ [ ] ) }
	mov r10, QWORD [r8+8]
	mov QWORD [rsp-8+8*2],r10
	mov r11, QWORD [r8+16]
	mov QWORD [rsp-8+8*1],r11
	jmp LB_4039
LB_4038:
	add rsp,0
	jmp LB_4034
LB_4039:
	mov QWORD [rsp+8*2],r14
	mov r13,QWORD [rsp+16+8*2]
	mov r14,QWORD [rsp+8*2]
	jmp LB_4042
LB_4042
;; rsp=2 , %2308~1'(= r ) %2307~0'(= r ) %2306~{ 8'(= {| l |} ) 9'(= a34◂ [ ] ) } 
; #174 { 8'(= {| l |} ) 9'(= a34◂ [ ] ) } ⊢ 4(<6)◂{ 8'(= {| l |} ) 9'(= a34◂ [ ] ) }
;; rsp=2 , %2309~4(<6)◂{ 8'(= {| l |} ) 9'(= a34◂ [ ] ) } %2308~1'(= r ) %2307~0'(= r ) 
; #24 4(<6)◂{ 8'(= {| l |} ) 9'(= a34◂ [ ] ) } ⊢ 0(<2)◂4(<6)◂{ 8'(= {| l |} ) 9'(= a34◂ [ ] ) }
;; rsp=2 , %2310~0(<2)◂4(<6)◂{ 8'(= {| l |} ) 9'(= a34◂ [ ] ) } %2308~1'(= r ) %2307~0'(= r ) 
; ∎ 0(<2)◂4(<6)◂{ 8'(= {| l |} ) 9'(= a34◂ [ ] ) }
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂4(<6)◂{ 8'(= {| l |} ) 9'(= a34◂ [ ] ) } ⊢ 2'(= a3◂ [ a31◂ [ ]] )
; .mov_ptn 0(<2)◂4(<6)◂{ 8'(= {| l |} ) 9'(= a34◂ [ ] ) } ⊢ 2'(= a3◂ [ a31◂ [ ]] )
	ALC_RCD 2, rax
	mov r13,rax
	mov rax,QWORD [rsp-8+8*2]
	mov QWORD [r13+8+8*0],rax
	mov rax,QWORD [rsp-8+8*1]
	mov QWORD [r13+8+8*1],rax
	mov rax,r13
	mov BYTE [rax+6],4
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,16
	jmp LB_4043
LB_4043:
	cmp BYTE [r8+6],0
	jnz LB_4034
	POP_GRM_SCC
	ret
LB_4034:
	RB_GRM
	mov QWORD [rsp+8*0],r14
	mov r13,QWORD [rsp+16+8*0]
	mov r14,QWORD [rsp+8*0]
	jmp LB_4045
LB_4045
;; rsp=0 , %2312~1'(= r ) %2311~0'(= r ) 
; $ %[ "dt_etr 0" ] ⊢ %[ "dt_etr 0" ]
;; rsp=0 , %2313~%[ "dt_etr 0" ] %2312~1'(= r ) %2311~0'(= r ) 
; #10 %[ "dt_etr 0" ] ⊢ %[ "dt_etr 0" ]
	mov rdi,fmt_emt
	call emt_stg
	mov rdi,LB_4047
	call emt_stg 
	mov rdi,fmt_nl
	call emt_stg
	jmp LB_4048
LB_4048:
;; rsp=0 , %2314~%[ "dt_etr 0" ] %2312~1'(= r ) %2311~0'(= r ) 
; #25 { } ⊢ 1(<2)◂{ }
;; rsp=0 , %2315~1(<2)◂{ } %2314~%[ "dt_etr 0" ] %2312~1'(= r ) %2311~0'(= r ) 
; ∎ 1(<2)◂{ }
; .dlt.ptn %[ "dt_etr 0" ]
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 1(<2)◂{ } ⊢ 2'(= a3◂ [ a31◂ [ ]] )
; .mov_ptn 1(<2)◂{ } ⊢ 2'(= a3◂ [ a31◂ [ ]] )
	mov rax,unt 
	mov rax,unt_1
	mov r8,rax
	jmp LB_4046
LB_4046:
	cmp BYTE [r8+6],0
	jnz LB_4044
	POP_GRM_SCC
	ret
LB_4044:
	POP_GRM_FAIL 
	ret
ETR_252:
	mov r9,0x0000_ffff_ffff_ffff
	and r9,[r13]
	call GRM_252
	ret
GRM_252:
	PUSH_GRM
	jmp LB_4051
LB_4050:
	add r14,1 
LB_4051:
	cmp r14,r9
	jge LB_4052
	JZ_SPC BYTE [r13+8+r14], LB_4050
LB_4052
	call GRM_76
	cmp BYTE [r8+6],0
	jnz LB_4055
	jmp LB_4056
LB_4055:
	jmp LB_4053
LB_4056:
	sub rsp,8
; .mov_ptn2 2'(= {| l |} ) ⊢ 8'(= {| l |} )
; .mov_ptn 2'(= {| l |} ) ⊢ 8'(= {| l |} )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_4054
LB_4053:
	add rsp,0
	jmp LB_4049
LB_4054:
	jmp LB_4058
LB_4057:
	add r14,1 
LB_4058:
	cmp r14,r9
	jge LB_4059
	JZ_SPC BYTE [r13+8+r14], LB_4057
LB_4059
	call GRM_253
	cmp BYTE [r8+6],0
	jnz LB_4062
	jmp LB_4063
LB_4062:
	jmp LB_4060
LB_4063:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a2◂ [ {| l |}] ) ⊢ 9'(= a2◂ [ {| l |}] )
; .mov_ptn 2'(= a2◂ [ {| l |}] ) ⊢ 9'(= a2◂ [ {| l |}] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_4061
LB_4060:
	add rsp,8
	jmp LB_4049
LB_4061:
	jmp LB_4065
LB_4064:
	add r14,1 
LB_4065:
	cmp r14,r9
	jge LB_4066
	JZ_SPC BYTE [r13+8+r14], LB_4064
LB_4066
	lea rax,[r14+1]
	cmp rax,r9
	jg LB_4069
	jmp LB_4070
LB_4069:
	mov r8,unt_1
	jmp LB_4067
LB_4070:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],61
	jnz LB_4071
	jmp LB_4072
LB_4071:
	mov r8,unt_1
	jmp LB_4067
LB_4072:
	add r14,1
	jmp LB_4068
LB_4067:
	add rsp,16
	jmp LB_4049
LB_4068:
	jmp LB_4074
LB_4073:
	add r14,1 
LB_4074:
	cmp r14,r9
	jge LB_4075
	JZ_SPC BYTE [r13+8+r14], LB_4073
LB_4075
	call GRM_212
	cmp BYTE [r8+6],0
	jnz LB_4078
	jmp LB_4079
LB_4078:
	jmp LB_4076
LB_4079:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a23◂ [ ] ) ⊢ 10'(= a23◂ [ ] )
; .mov_ptn 2'(= a23◂ [ ] ) ⊢ 10'(= a23◂ [ ] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_4077
LB_4076:
	add rsp,16
	POP_GRM_FAIL
	ret
LB_4077:
	mov QWORD [rsp+8*3],r14
	mov r13,QWORD [rsp+16+8*3]
	mov r14,QWORD [rsp+8*3]
	jmp LB_4080
LB_4080
;; rsp=3 , %2320~1'(= r ) %2319~0'(= r ) %2318~10'(= a23◂ [ ] ) %2317~9'(= a2◂ [ {| l |}] ) %2316~8'(= {| l |} ) 
; #166 { 9'(= a2◂ [ {| l |}] ) 10'(= a23◂ [ ] ) } ⊢ 1(<2)◂{ 9'(= a2◂ [ {| l |}] ) 10'(= a23◂ [ ] ) }
;; rsp=3 , %2321~1(<2)◂{ 9'(= a2◂ [ {| l |}] ) 10'(= a23◂ [ ] ) } %2320~1'(= r ) %2319~0'(= r ) %2316~8'(= {| l |} ) 
; #24 { 8'(= {| l |} ) 1(<2)◂{ 9'(= a2◂ [ {| l |}] ) 10'(= a23◂ [ ] ) } } ⊢ 0(<2)◂{ 8'(= {| l |} ) 1(<2)◂{ 9'(= a2◂ [ {| l |}] ) 10'(= a23◂ [ ] ) } }
;; rsp=3 , %2322~0(<2)◂{ 8'(= {| l |} ) 1(<2)◂{ 9'(= a2◂ [ {| l |}] ) 10'(= a23◂ [ ] ) } } %2320~1'(= r ) %2319~0'(= r ) 
; ∎ 0(<2)◂{ 8'(= {| l |} ) 1(<2)◂{ 9'(= a2◂ [ {| l |}] ) 10'(= a23◂ [ ] ) } }
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂{ 8'(= {| l |} ) 1(<2)◂{ 9'(= a2◂ [ {| l |}] ) 10'(= a23◂ [ ] ) } } ⊢ 2'(= a3◂ [ *{ {| l |}a34◂ [ ]}] )
; .mov_ptn 0(<2)◂{ 8'(= {| l |} ) 1(<2)◂{ 9'(= a2◂ [ {| l |}] ) 10'(= a23◂ [ ] ) } } ⊢ 2'(= a3◂ [ *{ {| l |}a34◂ [ ]}] )
	ALC_RCD 2, rax
	mov r13,rax
	mov rax,QWORD [rsp-8+8*3]
	mov QWORD [r13+8+8*0],rax
	ALC_RCD 2, rax
	mov r14,rax
	mov rax,QWORD [rsp-8+8*2]
	mov QWORD [r14+8+8*0],rax
	mov rax,QWORD [rsp-8+8*1]
	mov QWORD [r14+8+8*1],rax
	mov rax,r14
	mov BYTE [rax+6],1
	mov QWORD [r13+8+8*1],rax
	mov rax,r13
	mov BYTE [rax+6],0
	mov r8,rax
	add rsp,24
	jmp LB_4081
LB_4081:
	cmp BYTE [r8+6],0
	jnz LB_4049
	POP_GRM_SCC
	ret
LB_4049:
	RB_GRM
	jmp LB_4084
LB_4083:
	add r14,1 
LB_4084:
	cmp r14,r9
	jge LB_4085
	JZ_SPC BYTE [r13+8+r14], LB_4083
LB_4085
	call GRM_76
	cmp BYTE [r8+6],0
	jnz LB_4088
	jmp LB_4089
LB_4088:
	jmp LB_4086
LB_4089:
	sub rsp,8
; .mov_ptn2 2'(= {| l |} ) ⊢ 8'(= {| l |} )
; .mov_ptn 2'(= {| l |} ) ⊢ 8'(= {| l |} )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_4087
LB_4086:
	add rsp,0
	jmp LB_4082
LB_4087:
	jmp LB_4091
LB_4090:
	add r14,1 
LB_4091:
	cmp r14,r9
	jge LB_4092
	JZ_SPC BYTE [r13+8+r14], LB_4090
LB_4092
	call GRM_253
	cmp BYTE [r8+6],0
	jnz LB_4095
	jmp LB_4096
LB_4095:
	jmp LB_4093
LB_4096:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a2◂ [ {| l |}] ) ⊢ 9'(= a2◂ [ {| l |}] )
; .mov_ptn 2'(= a2◂ [ {| l |}] ) ⊢ 9'(= a2◂ [ {| l |}] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_4094
LB_4093:
	add rsp,8
	jmp LB_4082
LB_4094:
	jmp LB_4098
LB_4097:
	add r14,1 
LB_4098:
	cmp r14,r9
	jge LB_4099
	JZ_SPC BYTE [r13+8+r14], LB_4097
LB_4099
	call GRM_219
	cmp BYTE [r8+6],0
	jnz LB_4102
	jmp LB_4103
LB_4102:
	jmp LB_4100
LB_4103:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a35◂ [ *{ }] ) ⊢ 10'(= a35◂ [ *{ }] )
; .mov_ptn 2'(= a35◂ [ *{ }] ) ⊢ 10'(= a35◂ [ *{ }] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_4101
LB_4100:
	add rsp,16
	jmp LB_4082
LB_4101:
	jmp LB_4105
LB_4104:
	add r14,1 
LB_4105:
	cmp r14,r9
	jge LB_4106
	JZ_SPC BYTE [r13+8+r14], LB_4104
LB_4106
	lea rax,[r14+3]
	cmp rax,r9
	jg LB_4109
	jmp LB_4110
LB_4109:
	mov r8,unt_1
	jmp LB_4107
LB_4110:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],226
	jnz LB_4111
	cmp BYTE [rdi+1],136
	jnz LB_4111
	cmp BYTE [rdi+2],144
	jnz LB_4111
	jmp LB_4112
LB_4111:
	mov r8,unt_1
	jmp LB_4107
LB_4112:
	add r14,3
	jmp LB_4108
LB_4107:
	add rsp,24
	jmp LB_4082
LB_4108:
	jmp LB_4114
LB_4113:
	add r14,1 
LB_4114:
	cmp r14,r9
	jge LB_4115
	JZ_SPC BYTE [r13+8+r14], LB_4113
LB_4115
	call GRM_76
	cmp BYTE [r8+6],0
	jnz LB_4118
	jmp LB_4119
LB_4118:
	jmp LB_4116
LB_4119:
	sub rsp,8
; .mov_ptn2 2'(= {| l |} ) ⊢ 11'(= {| l |} )
; .mov_ptn 2'(= {| l |} ) ⊢ 11'(= {| l |} )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_4117
LB_4116:
	add rsp,24
	jmp LB_4082
LB_4117:
	jmp LB_4121
LB_4120:
	add r14,1 
LB_4121:
	cmp r14,r9
	jge LB_4122
	JZ_SPC BYTE [r13+8+r14], LB_4120
LB_4122
	lea rax,[r14+1]
	cmp rax,r9
	jg LB_4125
	jmp LB_4126
LB_4125:
	mov r8,unt_1
	jmp LB_4123
LB_4126:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],58
	jnz LB_4127
	jmp LB_4128
LB_4127:
	mov r8,unt_1
	jmp LB_4123
LB_4128:
	add r14,1
	jmp LB_4124
LB_4123:
	add rsp,32
	jmp LB_4082
LB_4124:
	jmp LB_4130
LB_4129:
	add r14,1 
LB_4130:
	cmp r14,r9
	jge LB_4131
	JZ_SPC BYTE [r13+8+r14], LB_4129
LB_4131
	call GRM_212
	cmp BYTE [r8+6],0
	jnz LB_4134
	jmp LB_4135
LB_4134:
	jmp LB_4132
LB_4135:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a23◂ [ ] ) ⊢ 12'(= a23◂ [ ] )
; .mov_ptn 2'(= a23◂ [ ] ) ⊢ 12'(= a23◂ [ ] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_4133
LB_4132:
	add rsp,32
	jmp LB_4082
LB_4133:
	jmp LB_4137
LB_4136:
	add r14,1 
LB_4137:
	cmp r14,r9
	jge LB_4138
	JZ_SPC BYTE [r13+8+r14], LB_4136
LB_4138
	call GRM_256
	cmp BYTE [r8+6],0
	jnz LB_4141
	jmp LB_4142
LB_4141:
	jmp LB_4139
LB_4142:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a2◂ [ *{ {| l |}a23◂ [ ]}] ) ⊢ 13'(= a2◂ [ *{ {| l |}a23◂ [ ]}] )
; .mov_ptn 2'(= a2◂ [ *{ {| l |}a23◂ [ ]}] ) ⊢ 13'(= a2◂ [ *{ {| l |}a23◂ [ ]}] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_4140
LB_4139:
	add rsp,40
	jmp LB_4082
LB_4140:
	mov QWORD [rsp+8*6],r14
	mov r13,QWORD [rsp+16+8*6]
	mov r14,QWORD [rsp+8*6]
	jmp LB_4143
LB_4143
;; rsp=6 , %2330~1'(= r ) %2329~0'(= r ) %2328~13'(= a2◂ [ *{ {| l |}a23◂ [ ]}] ) %2327~12'(= a23◂ [ ] ) %2326~11'(= {| l |} ) %2325~10'(= a35◂ [ *{ }] ) %2324~9'(= a2◂ [ {| l |}] ) %2323~8'(= {| l |} ) 
; #23 { { 11'(= {| l |} ) 12'(= a23◂ [ ] ) } 13'(= a2◂ [ *{ {| l |}a23◂ [ ]}] ) } ⊢ 0(<2)◂{ { 11'(= {| l |} ) 12'(= a23◂ [ ] ) } 13'(= a2◂ [ *{ {| l |}a23◂ [ ]}] ) }
;; rsp=6 , %2331~0(<2)◂{ { 11'(= {| l |} ) 12'(= a23◂ [ ] ) } 13'(= a2◂ [ *{ {| l |}a23◂ [ ]}] ) } %2330~1'(= r ) %2329~0'(= r ) %2325~10'(= a35◂ [ *{ }] ) %2324~9'(= a2◂ [ {| l |}] ) %2323~8'(= {| l |} ) 
; #167 { 9'(= a2◂ [ {| l |}] ) 0(<2)◂{ { 11'(= {| l |} ) 12'(= a23◂ [ ] ) } 13'(= a2◂ [ *{ {| l |}a23◂ [ ]}] ) } } ⊢ 0(<2)◂{ 9'(= a2◂ [ {| l |}] ) 0(<2)◂{ { 11'(= {| l |} ) 12'(= a23◂ [ ] ) } 13'(= a2◂ [ *{ {| l |}a23◂ [ ]}] ) } }
;; rsp=6 , %2332~0(<2)◂{ 9'(= a2◂ [ {| l |}] ) 0(<2)◂{ { 11'(= {| l |} ) 12'(= a23◂ [ ] ) } 13'(= a2◂ [ *{ {| l |}a23◂ [ ]}] ) } } %2330~1'(= r ) %2329~0'(= r ) %2325~10'(= a35◂ [ *{ }] ) %2323~8'(= {| l |} ) 
; #24 { 8'(= {| l |} ) 0(<2)◂{ 9'(= a2◂ [ {| l |}] ) 0(<2)◂{ { 11'(= {| l |} ) 12'(= a23◂ [ ] ) } 13'(= a2◂ [ *{ {| l |}a23◂ [ ]}] ) } } } ⊢ 0(<2)◂{ 8'(= {| l |} ) 0(<2)◂{ 9'(= a2◂ [ {| l |}] ) 0(<2)◂{ { 11'(= {| l |} ) 12'(= a23◂ [ ] ) } 13'(= a2◂ [ *{ {| l |}a23◂ [ ]}] ) } } }
;; rsp=6 , %2333~0(<2)◂{ 8'(= {| l |} ) 0(<2)◂{ 9'(= a2◂ [ {| l |}] ) 0(<2)◂{ { 11'(= {| l |} ) 12'(= a23◂ [ ] ) } 13'(= a2◂ [ *{ {| l |}a23◂ [ ]}] ) } } } %2330~1'(= r ) %2329~0'(= r ) %2325~10'(= a35◂ [ *{ }] ) 
; ∎ 0(<2)◂{ 8'(= {| l |} ) 0(<2)◂{ 9'(= a2◂ [ {| l |}] ) 0(<2)◂{ { 11'(= {| l |} ) 12'(= a23◂ [ ] ) } 13'(= a2◂ [ *{ {| l |}a23◂ [ ]}] ) } } }
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 10'(= a35◂ [ *{ }] )
	mov rdi,QWORD [rsp-8+8*4]
	C_PUSH_REGS
	mov r8,rdi
	call LB_1701
	C_POP_REGS
; .mov_ptn2 0(<2)◂{ 8'(= {| l |} ) 0(<2)◂{ 9'(= a2◂ [ {| l |}] ) 0(<2)◂{ { 11'(= {| l |} ) 12'(= a23◂ [ ] ) } 13'(= a2◂ [ *{ {| l |}a23◂ [ ]}] ) } } } ⊢ 2'(= a3◂ [ *{ {| l |}a34◂ [ ]}] )
; .mov_ptn 0(<2)◂{ 8'(= {| l |} ) 0(<2)◂{ 9'(= a2◂ [ {| l |}] ) 0(<2)◂{ { 11'(= {| l |} ) 12'(= a23◂ [ ] ) } 13'(= a2◂ [ *{ {| l |}a23◂ [ ]}] ) } } } ⊢ 2'(= a3◂ [ *{ {| l |}a34◂ [ ]}] )
	ALC_RCD 2, rax
	mov r13,rax
	mov rax,QWORD [rsp-8+8*6]
	mov QWORD [r13+8+8*0],rax
	ALC_RCD 2, rax
	mov r14,rax
	mov rax,QWORD [rsp-8+8*5]
	mov QWORD [r14+8+8*0],rax
	ALC_RCD 2, rax
	mov r9,rax
	ALC_RCD 2, rax
	mov r10,rax
	mov rax,QWORD [rsp-8+8*3]
	mov QWORD [r10+8+8*0],rax
	mov rax,QWORD [rsp-8+8*2]
	mov QWORD [r10+8+8*1],rax
	mov rax,r10
	mov QWORD [r9+8+8*0],rax
	mov rax,QWORD [rsp-8+8*1]
	mov QWORD [r9+8+8*1],rax
	mov rax,r9
	mov BYTE [rax+6],0
	mov QWORD [r14+8+8*1],rax
	mov rax,r14
	mov BYTE [rax+6],0
	mov QWORD [r13+8+8*1],rax
	mov rax,r13
	mov BYTE [rax+6],0
	mov r8,rax
	add rsp,48
	jmp LB_4144
LB_4144:
	cmp BYTE [r8+6],0
	jnz LB_4082
	POP_GRM_SCC
	ret
LB_4082:
	POP_GRM_FAIL 
	ret
ETR_253:
	mov r9,0x0000_ffff_ffff_ffff
	and r9,[r13]
	call GRM_253
	ret
GRM_253:
	PUSH_GRM
	jmp LB_4147
LB_4146:
	add r14,1 
LB_4147:
	cmp r14,r9
	jge LB_4148
	JZ_SPC BYTE [r13+8+r14], LB_4146
LB_4148
	lea rax,[r14+3]
	cmp rax,r9
	jg LB_4151
	jmp LB_4152
LB_4151:
	mov r8,unt_1
	jmp LB_4149
LB_4152:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],226
	jnz LB_4153
	cmp BYTE [rdi+1],151
	jnz LB_4153
	cmp BYTE [rdi+2],130
	jnz LB_4153
	jmp LB_4154
LB_4153:
	mov r8,unt_1
	jmp LB_4149
LB_4154:
	add r14,3
	jmp LB_4150
LB_4149:
	add rsp,0
	jmp LB_4145
LB_4150:
	jmp LB_4156
LB_4155:
	add r14,1 
LB_4156:
	cmp r14,r9
	jge LB_4157
	JZ_SPC BYTE [r13+8+r14], LB_4155
LB_4157
	call GRM_217
	cmp BYTE [r8+6],0
	jnz LB_4160
	jmp LB_4161
LB_4160:
	jmp LB_4158
LB_4161:
	sub rsp,8
; .mov_ptn2 2'(= {| l |} ) ⊢ 8'(= {| l |} )
; .mov_ptn 2'(= {| l |} ) ⊢ 8'(= {| l |} )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_4159
LB_4158:
	add rsp,0
	POP_GRM_FAIL
	ret
LB_4159:
	jmp LB_4163
LB_4162:
	add r14,1 
LB_4163:
	cmp r14,r9
	jge LB_4164
	JZ_SPC BYTE [r13+8+r14], LB_4162
LB_4164
	call GRM_254
	cmp BYTE [r8+6],0
	jnz LB_4167
	jmp LB_4168
LB_4167:
	jmp LB_4165
LB_4168:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a2◂ [ {| l |}] ) ⊢ 9'(= a2◂ [ {| l |}] )
; .mov_ptn 2'(= a2◂ [ {| l |}] ) ⊢ 9'(= a2◂ [ {| l |}] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_4166
LB_4165:
	add rsp,8
	POP_GRM_FAIL
	ret
LB_4166:
	mov QWORD [rsp+8*2],r14
	mov r13,QWORD [rsp+16+8*2]
	mov r14,QWORD [rsp+8*2]
	jmp LB_4169
LB_4169
;; rsp=2 , %2337~1'(= r ) %2336~0'(= r ) %2335~9'(= a2◂ [ {| l |}] ) %2334~8'(= {| l |} ) 
; #23 { 8'(= {| l |} ) 9'(= a2◂ [ {| l |}] ) } ⊢ 0(<2)◂{ 8'(= {| l |} ) 9'(= a2◂ [ {| l |}] ) }
;; rsp=2 , %2338~0(<2)◂{ 8'(= {| l |} ) 9'(= a2◂ [ {| l |}] ) } %2337~1'(= r ) %2336~0'(= r ) 
; #24 0(<2)◂{ 8'(= {| l |} ) 9'(= a2◂ [ {| l |}] ) } ⊢ 0(<2)◂0(<2)◂{ 8'(= {| l |} ) 9'(= a2◂ [ {| l |}] ) }
;; rsp=2 , %2339~0(<2)◂0(<2)◂{ 8'(= {| l |} ) 9'(= a2◂ [ {| l |}] ) } %2337~1'(= r ) %2336~0'(= r ) 
; ∎ 0(<2)◂0(<2)◂{ 8'(= {| l |} ) 9'(= a2◂ [ {| l |}] ) }
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂0(<2)◂{ 8'(= {| l |} ) 9'(= a2◂ [ {| l |}] ) } ⊢ 2'(= a3◂ [ a2◂ [ {| l |}]] )
; .mov_ptn 0(<2)◂0(<2)◂{ 8'(= {| l |} ) 9'(= a2◂ [ {| l |}] ) } ⊢ 2'(= a3◂ [ a2◂ [ {| l |}]] )
	ALC_RCD 2, rax
	mov r13,rax
	mov rax,QWORD [rsp-8+8*2]
	mov QWORD [r13+8+8*0],rax
	mov rax,QWORD [rsp-8+8*1]
	mov QWORD [r13+8+8*1],rax
	mov rax,r13
	mov BYTE [rax+6],0
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,16
	jmp LB_4170
LB_4170:
	cmp BYTE [r8+6],0
	jnz LB_4145
	POP_GRM_SCC
	ret
LB_4145:
	RB_GRM
	jmp LB_4173
LB_4172:
	add r14,1 
LB_4173:
	cmp r14,r9
	jge LB_4174
	JZ_SPC BYTE [r13+8+r14], LB_4172
LB_4174
	call GRM_217
	cmp BYTE [r8+6],0
	jnz LB_4177
	jmp LB_4178
LB_4177:
	jmp LB_4175
LB_4178:
	sub rsp,8
; .mov_ptn2 2'(= {| l |} ) ⊢ 8'(= {| l |} )
; .mov_ptn 2'(= {| l |} ) ⊢ 8'(= {| l |} )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_4176
LB_4175:
	add rsp,0
	jmp LB_4171
LB_4176:
	jmp LB_4180
LB_4179:
	add r14,1 
LB_4180:
	cmp r14,r9
	jge LB_4181
	JZ_SPC BYTE [r13+8+r14], LB_4179
LB_4181
	call GRM_254
	cmp BYTE [r8+6],0
	jnz LB_4184
	jmp LB_4185
LB_4184:
	jmp LB_4182
LB_4185:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a2◂ [ {| l |}] ) ⊢ 9'(= a2◂ [ {| l |}] )
; .mov_ptn 2'(= a2◂ [ {| l |}] ) ⊢ 9'(= a2◂ [ {| l |}] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_4183
LB_4182:
	add rsp,8
	POP_GRM_FAIL
	ret
LB_4183:
	mov QWORD [rsp+8*2],r14
	mov r13,QWORD [rsp+16+8*2]
	mov r14,QWORD [rsp+8*2]
	jmp LB_4186
LB_4186
;; rsp=2 , %2343~1'(= r ) %2342~0'(= r ) %2341~9'(= a2◂ [ {| l |}] ) %2340~8'(= {| l |} ) 
; #23 { 8'(= {| l |} ) 9'(= a2◂ [ {| l |}] ) } ⊢ 0(<2)◂{ 8'(= {| l |} ) 9'(= a2◂ [ {| l |}] ) }
;; rsp=2 , %2344~0(<2)◂{ 8'(= {| l |} ) 9'(= a2◂ [ {| l |}] ) } %2343~1'(= r ) %2342~0'(= r ) 
; #24 0(<2)◂{ 8'(= {| l |} ) 9'(= a2◂ [ {| l |}] ) } ⊢ 0(<2)◂0(<2)◂{ 8'(= {| l |} ) 9'(= a2◂ [ {| l |}] ) }
;; rsp=2 , %2345~0(<2)◂0(<2)◂{ 8'(= {| l |} ) 9'(= a2◂ [ {| l |}] ) } %2343~1'(= r ) %2342~0'(= r ) 
; ∎ 0(<2)◂0(<2)◂{ 8'(= {| l |} ) 9'(= a2◂ [ {| l |}] ) }
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂0(<2)◂{ 8'(= {| l |} ) 9'(= a2◂ [ {| l |}] ) } ⊢ 2'(= a3◂ [ a2◂ [ {| l |}]] )
; .mov_ptn 0(<2)◂0(<2)◂{ 8'(= {| l |} ) 9'(= a2◂ [ {| l |}] ) } ⊢ 2'(= a3◂ [ a2◂ [ {| l |}]] )
	ALC_RCD 2, rax
	mov r13,rax
	mov rax,QWORD [rsp-8+8*2]
	mov QWORD [r13+8+8*0],rax
	mov rax,QWORD [rsp-8+8*1]
	mov QWORD [r13+8+8*1],rax
	mov rax,r13
	mov BYTE [rax+6],0
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,16
	jmp LB_4187
LB_4187:
	cmp BYTE [r8+6],0
	jnz LB_4171
	POP_GRM_SCC
	ret
LB_4171:
	RB_GRM
	mov QWORD [rsp+8*0],r14
	mov r13,QWORD [rsp+16+8*0]
	mov r14,QWORD [rsp+8*0]
	jmp LB_4189
LB_4189
;; rsp=0 , %2347~1'(= r ) %2346~0'(= r ) 
; #22 { } ⊢ 1(<2)◂{ }
;; rsp=0 , %2348~1(<2)◂{ } %2347~1'(= r ) %2346~0'(= r ) 
; #24 1(<2)◂{ } ⊢ 0(<2)◂1(<2)◂{ }
;; rsp=0 , %2349~0(<2)◂1(<2)◂{ } %2347~1'(= r ) %2346~0'(= r ) 
; ∎ 0(<2)◂1(<2)◂{ }
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂1(<2)◂{ } ⊢ 2'(= a3◂ [ a2◂ [ {| l |}]] )
; .mov_ptn 0(<2)◂1(<2)◂{ } ⊢ 2'(= a3◂ [ a2◂ [ {| l |}]] )
	mov rax,unt 
	mov rax,unt_1
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	jmp LB_4190
LB_4190:
	cmp BYTE [r8+6],0
	jnz LB_4188
	POP_GRM_SCC
	ret
LB_4188:
	POP_GRM_FAIL 
	ret
ETR_254:
	mov r9,0x0000_ffff_ffff_ffff
	and r9,[r13]
	call GRM_254
	ret
GRM_254:
	PUSH_GRM
	jmp LB_4193
LB_4192:
	add r14,1 
LB_4193:
	cmp r14,r9
	jge LB_4194
	JZ_SPC BYTE [r13+8+r14], LB_4192
LB_4194
	lea rax,[r14+1]
	cmp rax,r9
	jg LB_4197
	jmp LB_4198
LB_4197:
	mov r8,unt_1
	jmp LB_4195
LB_4198:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],44
	jnz LB_4199
	jmp LB_4200
LB_4199:
	mov r8,unt_1
	jmp LB_4195
LB_4200:
	add r14,1
	jmp LB_4196
LB_4195:
	add rsp,0
	jmp LB_4191
LB_4196:
	jmp LB_4202
LB_4201:
	add r14,1 
LB_4202:
	cmp r14,r9
	jge LB_4203
	JZ_SPC BYTE [r13+8+r14], LB_4201
LB_4203
	call GRM_217
	cmp BYTE [r8+6],0
	jnz LB_4206
	jmp LB_4207
LB_4206:
	jmp LB_4204
LB_4207:
	sub rsp,8
; .mov_ptn2 2'(= {| l |} ) ⊢ 8'(= {| l |} )
; .mov_ptn 2'(= {| l |} ) ⊢ 8'(= {| l |} )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_4205
LB_4204:
	add rsp,0
	POP_GRM_FAIL
	ret
LB_4205:
	jmp LB_4209
LB_4208:
	add r14,1 
LB_4209:
	cmp r14,r9
	jge LB_4210
	JZ_SPC BYTE [r13+8+r14], LB_4208
LB_4210
	call GRM_254
	cmp BYTE [r8+6],0
	jnz LB_4213
	jmp LB_4214
LB_4213:
	jmp LB_4211
LB_4214:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a2◂ [ {| l |}] ) ⊢ 9'(= a2◂ [ {| l |}] )
; .mov_ptn 2'(= a2◂ [ {| l |}] ) ⊢ 9'(= a2◂ [ {| l |}] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_4212
LB_4211:
	add rsp,8
	POP_GRM_FAIL
	ret
LB_4212:
	mov QWORD [rsp+8*2],r14
	mov r13,QWORD [rsp+16+8*2]
	mov r14,QWORD [rsp+8*2]
	jmp LB_4215
LB_4215
;; rsp=2 , %2353~1'(= r ) %2352~0'(= r ) %2351~9'(= a2◂ [ {| l |}] ) %2350~8'(= {| l |} ) 
; #23 { 8'(= {| l |} ) 9'(= a2◂ [ {| l |}] ) } ⊢ 0(<2)◂{ 8'(= {| l |} ) 9'(= a2◂ [ {| l |}] ) }
;; rsp=2 , %2354~0(<2)◂{ 8'(= {| l |} ) 9'(= a2◂ [ {| l |}] ) } %2353~1'(= r ) %2352~0'(= r ) 
; #24 0(<2)◂{ 8'(= {| l |} ) 9'(= a2◂ [ {| l |}] ) } ⊢ 0(<2)◂0(<2)◂{ 8'(= {| l |} ) 9'(= a2◂ [ {| l |}] ) }
;; rsp=2 , %2355~0(<2)◂0(<2)◂{ 8'(= {| l |} ) 9'(= a2◂ [ {| l |}] ) } %2353~1'(= r ) %2352~0'(= r ) 
; ∎ 0(<2)◂0(<2)◂{ 8'(= {| l |} ) 9'(= a2◂ [ {| l |}] ) }
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂0(<2)◂{ 8'(= {| l |} ) 9'(= a2◂ [ {| l |}] ) } ⊢ 2'(= a3◂ [ a2◂ [ {| l |}]] )
; .mov_ptn 0(<2)◂0(<2)◂{ 8'(= {| l |} ) 9'(= a2◂ [ {| l |}] ) } ⊢ 2'(= a3◂ [ a2◂ [ {| l |}]] )
	ALC_RCD 2, rax
	mov r13,rax
	mov rax,QWORD [rsp-8+8*2]
	mov QWORD [r13+8+8*0],rax
	mov rax,QWORD [rsp-8+8*1]
	mov QWORD [r13+8+8*1],rax
	mov rax,r13
	mov BYTE [rax+6],0
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,16
	jmp LB_4216
LB_4216:
	cmp BYTE [r8+6],0
	jnz LB_4191
	POP_GRM_SCC
	ret
LB_4191:
	RB_GRM
	mov QWORD [rsp+8*0],r14
	mov r13,QWORD [rsp+16+8*0]
	mov r14,QWORD [rsp+8*0]
	jmp LB_4218
LB_4218
;; rsp=0 , %2357~1'(= r ) %2356~0'(= r ) 
; #22 { } ⊢ 1(<2)◂{ }
;; rsp=0 , %2358~1(<2)◂{ } %2357~1'(= r ) %2356~0'(= r ) 
; #24 1(<2)◂{ } ⊢ 0(<2)◂1(<2)◂{ }
;; rsp=0 , %2359~0(<2)◂1(<2)◂{ } %2357~1'(= r ) %2356~0'(= r ) 
; ∎ 0(<2)◂1(<2)◂{ }
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂1(<2)◂{ } ⊢ 2'(= a3◂ [ a2◂ [ {| l |}]] )
; .mov_ptn 0(<2)◂1(<2)◂{ } ⊢ 2'(= a3◂ [ a2◂ [ {| l |}]] )
	mov rax,unt 
	mov rax,unt_1
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	jmp LB_4219
LB_4219:
	cmp BYTE [r8+6],0
	jnz LB_4217
	POP_GRM_SCC
	ret
LB_4217:
	POP_GRM_FAIL 
	ret
ETR_255:
	mov r9,0x0000_ffff_ffff_ffff
	and r9,[r13]
	call GRM_255
	ret
GRM_255:
	PUSH_GRM
	jmp LB_4222
LB_4221:
	add r14,1 
LB_4222:
	cmp r14,r9
	jge LB_4223
	JZ_SPC BYTE [r13+8+r14], LB_4221
LB_4223
	call GRM_219
	cmp BYTE [r8+6],0
	jnz LB_4226
	jmp LB_4227
LB_4226:
	jmp LB_4224
LB_4227:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a35◂ [ *{ }] ) ⊢ 8'(= a35◂ [ *{ }] )
; .mov_ptn 2'(= a35◂ [ *{ }] ) ⊢ 8'(= a35◂ [ *{ }] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_4225
LB_4224:
	add rsp,0
	jmp LB_4220
LB_4225:
	jmp LB_4229
LB_4228:
	add r14,1 
LB_4229:
	cmp r14,r9
	jge LB_4230
	JZ_SPC BYTE [r13+8+r14], LB_4228
LB_4230
	lea rax,[r14+1]
	cmp rax,r9
	jg LB_4233
	jmp LB_4234
LB_4233:
	mov r8,unt_1
	jmp LB_4231
LB_4234:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],64
	jnz LB_4235
	jmp LB_4236
LB_4235:
	mov r8,unt_1
	jmp LB_4231
LB_4236:
	add r14,1
	jmp LB_4232
LB_4231:
	add rsp,8
	jmp LB_4220
LB_4232:
	jmp LB_4238
LB_4237:
	add r14,1 
LB_4238:
	cmp r14,r9
	jge LB_4239
	JZ_SPC BYTE [r13+8+r14], LB_4237
LB_4239
	lea rax,[r14+1]
	cmp rax,r9
	jg LB_4242
	jmp LB_4243
LB_4242:
	mov r8,unt_1
	jmp LB_4240
LB_4243:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],46
	jnz LB_4244
	jmp LB_4245
LB_4244:
	mov r8,unt_1
	jmp LB_4240
LB_4245:
	add r14,1
	jmp LB_4241
LB_4240:
	add rsp,8
	POP_GRM_FAIL
	ret
LB_4241:
	jmp LB_4247
LB_4246:
	add r14,1 
LB_4247:
	cmp r14,r9
	jge LB_4248
	JZ_SPC BYTE [r13+8+r14], LB_4246
LB_4248
	call GRM_252
	cmp BYTE [r8+6],0
	jnz LB_4251
	jmp LB_4252
LB_4251:
	jmp LB_4249
LB_4252:
	sub rsp,16
; .mov_ptn2 2'(= *{ {| l |}a34◂ [ ]} ) ⊢ { 9'(= {| l |} ) 10'(= a34◂ [ ] ) }
; .mov_ptn 2'(= *{ {| l |}a34◂ [ ]} ) ⊢ { 9'(= {| l |} ) 10'(= a34◂ [ ] ) }
	mov r10, QWORD [r8+8]
	mov QWORD [rsp-8+8*2],r10
	mov r11, QWORD [r8+16]
	mov QWORD [rsp-8+8*1],r11
	jmp LB_4250
LB_4249:
	add rsp,8
	POP_GRM_FAIL
	ret
LB_4250:
	jmp LB_4254
LB_4253:
	add r14,1 
LB_4254:
	cmp r14,r9
	jge LB_4255
	JZ_SPC BYTE [r13+8+r14], LB_4253
LB_4255
	call GRM_255
	cmp BYTE [r8+6],0
	jnz LB_4258
	jmp LB_4259
LB_4258:
	jmp LB_4256
LB_4259:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a2◂ [ *{ {| l |}a34◂ [ ]}] ) ⊢ 11'(= a2◂ [ *{ {| l |}a34◂ [ ]}] )
; .mov_ptn 2'(= a2◂ [ *{ {| l |}a34◂ [ ]}] ) ⊢ 11'(= a2◂ [ *{ {| l |}a34◂ [ ]}] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_4257
LB_4256:
	add rsp,24
	POP_GRM_FAIL
	ret
LB_4257:
	mov QWORD [rsp+8*4],r14
	mov r13,QWORD [rsp+16+8*4]
	mov r14,QWORD [rsp+8*4]
	jmp LB_4260
LB_4260
;; rsp=4 , %2364~1'(= r ) %2363~0'(= r ) %2362~11'(= a2◂ [ *{ {| l |}a34◂ [ ]}] ) %2361~{ 9'(= {| l |} ) 10'(= a34◂ [ ] ) } %2360~8'(= a35◂ [ *{ }] ) 
; #23 { { 9'(= {| l |} ) 10'(= a34◂ [ ] ) } 11'(= a2◂ [ *{ {| l |}a34◂ [ ]}] ) } ⊢ 0(<2)◂{ { 9'(= {| l |} ) 10'(= a34◂ [ ] ) } 11'(= a2◂ [ *{ {| l |}a34◂ [ ]}] ) }
;; rsp=4 , %2365~0(<2)◂{ { 9'(= {| l |} ) 10'(= a34◂ [ ] ) } 11'(= a2◂ [ *{ {| l |}a34◂ [ ]}] ) } %2364~1'(= r ) %2363~0'(= r ) %2360~8'(= a35◂ [ *{ }] ) 
; #24 0(<2)◂{ { 9'(= {| l |} ) 10'(= a34◂ [ ] ) } 11'(= a2◂ [ *{ {| l |}a34◂ [ ]}] ) } ⊢ 0(<2)◂0(<2)◂{ { 9'(= {| l |} ) 10'(= a34◂ [ ] ) } 11'(= a2◂ [ *{ {| l |}a34◂ [ ]}] ) }
;; rsp=4 , %2366~0(<2)◂0(<2)◂{ { 9'(= {| l |} ) 10'(= a34◂ [ ] ) } 11'(= a2◂ [ *{ {| l |}a34◂ [ ]}] ) } %2364~1'(= r ) %2363~0'(= r ) %2360~8'(= a35◂ [ *{ }] ) 
; ∎ 0(<2)◂0(<2)◂{ { 9'(= {| l |} ) 10'(= a34◂ [ ] ) } 11'(= a2◂ [ *{ {| l |}a34◂ [ ]}] ) }
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 8'(= a35◂ [ *{ }] )
	mov rdi,QWORD [rsp-8+8*4]
	C_PUSH_REGS
	mov r8,rdi
	call LB_1701
	C_POP_REGS
; .mov_ptn2 0(<2)◂0(<2)◂{ { 9'(= {| l |} ) 10'(= a34◂ [ ] ) } 11'(= a2◂ [ *{ {| l |}a34◂ [ ]}] ) } ⊢ 2'(= a3◂ [ a2◂ [ *{ {| l |}a34◂ [ ]}]] )
; .mov_ptn 0(<2)◂0(<2)◂{ { 9'(= {| l |} ) 10'(= a34◂ [ ] ) } 11'(= a2◂ [ *{ {| l |}a34◂ [ ]}] ) } ⊢ 2'(= a3◂ [ a2◂ [ *{ {| l |}a34◂ [ ]}]] )
	ALC_RCD 2, rax
	mov r13,rax
	ALC_RCD 2, rax
	mov r14,rax
	mov rax,QWORD [rsp-8+8*3]
	mov QWORD [r14+8+8*0],rax
	mov rax,QWORD [rsp-8+8*2]
	mov QWORD [r14+8+8*1],rax
	mov rax,r14
	mov QWORD [r13+8+8*0],rax
	mov rax,QWORD [rsp-8+8*1]
	mov QWORD [r13+8+8*1],rax
	mov rax,r13
	mov BYTE [rax+6],0
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,32
	jmp LB_4261
LB_4261:
	cmp BYTE [r8+6],0
	jnz LB_4220
	POP_GRM_SCC
	ret
LB_4220:
	RB_GRM
	mov QWORD [rsp+8*0],r14
	mov r13,QWORD [rsp+16+8*0]
	mov r14,QWORD [rsp+8*0]
	jmp LB_4263
LB_4263
;; rsp=0 , %2368~1'(= r ) %2367~0'(= r ) 
; #22 { } ⊢ 1(<2)◂{ }
;; rsp=0 , %2369~1(<2)◂{ } %2368~1'(= r ) %2367~0'(= r ) 
; #24 1(<2)◂{ } ⊢ 0(<2)◂1(<2)◂{ }
;; rsp=0 , %2370~0(<2)◂1(<2)◂{ } %2368~1'(= r ) %2367~0'(= r ) 
; ∎ 0(<2)◂1(<2)◂{ }
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂1(<2)◂{ } ⊢ 2'(= a3◂ [ a2◂ [ *{ {| l |}a34◂ [ ]}]] )
; .mov_ptn 0(<2)◂1(<2)◂{ } ⊢ 2'(= a3◂ [ a2◂ [ *{ {| l |}a34◂ [ ]}]] )
	mov rax,unt 
	mov rax,unt_1
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	jmp LB_4264
LB_4264:
	cmp BYTE [r8+6],0
	jnz LB_4262
	POP_GRM_SCC
	ret
LB_4262:
	POP_GRM_FAIL 
	ret
ETR_256:
	mov r9,0x0000_ffff_ffff_ffff
	and r9,[r13]
	call GRM_256
	ret
GRM_256:
	PUSH_GRM
	jmp LB_4267
LB_4266:
	add r14,1 
LB_4267:
	cmp r14,r9
	jge LB_4268
	JZ_SPC BYTE [r13+8+r14], LB_4266
LB_4268
	call GRM_219
	cmp BYTE [r8+6],0
	jnz LB_4271
	jmp LB_4272
LB_4271:
	jmp LB_4269
LB_4272:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a35◂ [ *{ }] ) ⊢ 8'(= a35◂ [ *{ }] )
; .mov_ptn 2'(= a35◂ [ *{ }] ) ⊢ 8'(= a35◂ [ *{ }] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_4270
LB_4269:
	add rsp,0
	jmp LB_4265
LB_4270:
	jmp LB_4274
LB_4273:
	add r14,1 
LB_4274:
	cmp r14,r9
	jge LB_4275
	JZ_SPC BYTE [r13+8+r14], LB_4273
LB_4275
	lea rax,[r14+3]
	cmp rax,r9
	jg LB_4278
	jmp LB_4279
LB_4278:
	mov r8,unt_1
	jmp LB_4276
LB_4279:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],226
	jnz LB_4280
	cmp BYTE [rdi+1],136
	jnz LB_4280
	cmp BYTE [rdi+2],144
	jnz LB_4280
	jmp LB_4281
LB_4280:
	mov r8,unt_1
	jmp LB_4276
LB_4281:
	add r14,3
	jmp LB_4277
LB_4276:
	add rsp,8
	jmp LB_4265
LB_4277:
	jmp LB_4283
LB_4282:
	add r14,1 
LB_4283:
	cmp r14,r9
	jge LB_4284
	JZ_SPC BYTE [r13+8+r14], LB_4282
LB_4284
	call GRM_76
	cmp BYTE [r8+6],0
	jnz LB_4287
	jmp LB_4288
LB_4287:
	jmp LB_4285
LB_4288:
	sub rsp,8
; .mov_ptn2 2'(= {| l |} ) ⊢ 9'(= {| l |} )
; .mov_ptn 2'(= {| l |} ) ⊢ 9'(= {| l |} )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_4286
LB_4285:
	add rsp,8
	POP_GRM_FAIL
	ret
LB_4286:
	jmp LB_4290
LB_4289:
	add r14,1 
LB_4290:
	cmp r14,r9
	jge LB_4291
	JZ_SPC BYTE [r13+8+r14], LB_4289
LB_4291
	lea rax,[r14+1]
	cmp rax,r9
	jg LB_4294
	jmp LB_4295
LB_4294:
	mov r8,unt_1
	jmp LB_4292
LB_4295:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],58
	jnz LB_4296
	jmp LB_4297
LB_4296:
	mov r8,unt_1
	jmp LB_4292
LB_4297:
	add r14,1
	jmp LB_4293
LB_4292:
	add rsp,16
	POP_GRM_FAIL
	ret
LB_4293:
	jmp LB_4299
LB_4298:
	add r14,1 
LB_4299:
	cmp r14,r9
	jge LB_4300
	JZ_SPC BYTE [r13+8+r14], LB_4298
LB_4300
	call GRM_212
	cmp BYTE [r8+6],0
	jnz LB_4303
	jmp LB_4304
LB_4303:
	jmp LB_4301
LB_4304:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a23◂ [ ] ) ⊢ 10'(= a23◂ [ ] )
; .mov_ptn 2'(= a23◂ [ ] ) ⊢ 10'(= a23◂ [ ] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_4302
LB_4301:
	add rsp,16
	POP_GRM_FAIL
	ret
LB_4302:
	jmp LB_4306
LB_4305:
	add r14,1 
LB_4306:
	cmp r14,r9
	jge LB_4307
	JZ_SPC BYTE [r13+8+r14], LB_4305
LB_4307
	call GRM_256
	cmp BYTE [r8+6],0
	jnz LB_4310
	jmp LB_4311
LB_4310:
	jmp LB_4308
LB_4311:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a2◂ [ *{ {| l |}a23◂ [ ]}] ) ⊢ 11'(= a2◂ [ *{ {| l |}a23◂ [ ]}] )
; .mov_ptn 2'(= a2◂ [ *{ {| l |}a23◂ [ ]}] ) ⊢ 11'(= a2◂ [ *{ {| l |}a23◂ [ ]}] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_4309
LB_4308:
	add rsp,24
	POP_GRM_FAIL
	ret
LB_4309:
	mov QWORD [rsp+8*4],r14
	mov r13,QWORD [rsp+16+8*4]
	mov r14,QWORD [rsp+8*4]
	jmp LB_4312
LB_4312
;; rsp=4 , %2376~1'(= r ) %2375~0'(= r ) %2374~11'(= a2◂ [ *{ {| l |}a23◂ [ ]}] ) %2373~10'(= a23◂ [ ] ) %2372~9'(= {| l |} ) %2371~8'(= a35◂ [ *{ }] ) 
; #23 { { 9'(= {| l |} ) 10'(= a23◂ [ ] ) } 11'(= a2◂ [ *{ {| l |}a23◂ [ ]}] ) } ⊢ 0(<2)◂{ { 9'(= {| l |} ) 10'(= a23◂ [ ] ) } 11'(= a2◂ [ *{ {| l |}a23◂ [ ]}] ) }
;; rsp=4 , %2377~0(<2)◂{ { 9'(= {| l |} ) 10'(= a23◂ [ ] ) } 11'(= a2◂ [ *{ {| l |}a23◂ [ ]}] ) } %2376~1'(= r ) %2375~0'(= r ) %2371~8'(= a35◂ [ *{ }] ) 
; #24 0(<2)◂{ { 9'(= {| l |} ) 10'(= a23◂ [ ] ) } 11'(= a2◂ [ *{ {| l |}a23◂ [ ]}] ) } ⊢ 0(<2)◂0(<2)◂{ { 9'(= {| l |} ) 10'(= a23◂ [ ] ) } 11'(= a2◂ [ *{ {| l |}a23◂ [ ]}] ) }
;; rsp=4 , %2378~0(<2)◂0(<2)◂{ { 9'(= {| l |} ) 10'(= a23◂ [ ] ) } 11'(= a2◂ [ *{ {| l |}a23◂ [ ]}] ) } %2376~1'(= r ) %2375~0'(= r ) %2371~8'(= a35◂ [ *{ }] ) 
; ∎ 0(<2)◂0(<2)◂{ { 9'(= {| l |} ) 10'(= a23◂ [ ] ) } 11'(= a2◂ [ *{ {| l |}a23◂ [ ]}] ) }
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 8'(= a35◂ [ *{ }] )
	mov rdi,QWORD [rsp-8+8*4]
	C_PUSH_REGS
	mov r8,rdi
	call LB_1701
	C_POP_REGS
; .mov_ptn2 0(<2)◂0(<2)◂{ { 9'(= {| l |} ) 10'(= a23◂ [ ] ) } 11'(= a2◂ [ *{ {| l |}a23◂ [ ]}] ) } ⊢ 2'(= a3◂ [ a2◂ [ *{ {| l |}a23◂ [ ]}]] )
; .mov_ptn 0(<2)◂0(<2)◂{ { 9'(= {| l |} ) 10'(= a23◂ [ ] ) } 11'(= a2◂ [ *{ {| l |}a23◂ [ ]}] ) } ⊢ 2'(= a3◂ [ a2◂ [ *{ {| l |}a23◂ [ ]}]] )
	ALC_RCD 2, rax
	mov r13,rax
	ALC_RCD 2, rax
	mov r14,rax
	mov rax,QWORD [rsp-8+8*3]
	mov QWORD [r14+8+8*0],rax
	mov rax,QWORD [rsp-8+8*2]
	mov QWORD [r14+8+8*1],rax
	mov rax,r14
	mov QWORD [r13+8+8*0],rax
	mov rax,QWORD [rsp-8+8*1]
	mov QWORD [r13+8+8*1],rax
	mov rax,r13
	mov BYTE [rax+6],0
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,32
	jmp LB_4313
LB_4313:
	cmp BYTE [r8+6],0
	jnz LB_4265
	POP_GRM_SCC
	ret
LB_4265:
	RB_GRM
	mov QWORD [rsp+8*0],r14
	mov r13,QWORD [rsp+16+8*0]
	mov r14,QWORD [rsp+8*0]
	jmp LB_4315
LB_4315
;; rsp=0 , %2380~1'(= r ) %2379~0'(= r ) 
; #22 { } ⊢ 1(<2)◂{ }
;; rsp=0 , %2381~1(<2)◂{ } %2380~1'(= r ) %2379~0'(= r ) 
; #24 1(<2)◂{ } ⊢ 0(<2)◂1(<2)◂{ }
;; rsp=0 , %2382~0(<2)◂1(<2)◂{ } %2380~1'(= r ) %2379~0'(= r ) 
; ∎ 0(<2)◂1(<2)◂{ }
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂1(<2)◂{ } ⊢ 2'(= a3◂ [ a2◂ [ *{ {| l |}a23◂ [ ]}]] )
; .mov_ptn 0(<2)◂1(<2)◂{ } ⊢ 2'(= a3◂ [ a2◂ [ *{ {| l |}a23◂ [ ]}]] )
	mov rax,unt 
	mov rax,unt_1
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	jmp LB_4316
LB_4316:
	cmp BYTE [r8+6],0
	jnz LB_4314
	POP_GRM_SCC
	ret
LB_4314:
	POP_GRM_FAIL 
	ret
ETR_257:
	mov r9,0x0000_ffff_ffff_ffff
	and r9,[r13]
	call GRM_257
	ret
GRM_257:
	PUSH_GRM
	jmp LB_4319
LB_4318:
	add r14,1 
LB_4319:
	cmp r14,r9
	jge LB_4320
	JZ_LINE_SPC BYTE [r13+8+r14], LB_4318
LB_4320
	call GRM_219
	cmp BYTE [r8+6],0
	jnz LB_4323
	jmp LB_4324
LB_4323:
	jmp LB_4321
LB_4324:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a35◂ [ *{ }] ) ⊢ 8'(= a35◂ [ *{ }] )
; .mov_ptn 2'(= a35◂ [ *{ }] ) ⊢ 8'(= a35◂ [ *{ }] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_4322
LB_4321:
	add rsp,0
	jmp LB_4317
LB_4322:
	jmp LB_4326
LB_4325:
	add r14,1 
LB_4326:
	cmp r14,r9
	jge LB_4327
	JZ_LINE_SPC BYTE [r13+8+r14], LB_4325
LB_4327
	lea rax,[r14+1]
	cmp rax,r9
	jg LB_4330
	jmp LB_4331
LB_4330:
	mov r8,unt_1
	jmp LB_4328
LB_4331:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],64
	jnz LB_4332
	jmp LB_4333
LB_4332:
	mov r8,unt_1
	jmp LB_4328
LB_4333:
	add r14,1
	jmp LB_4329
LB_4328:
	add rsp,8
	jmp LB_4317
LB_4329:
	jmp LB_4335
LB_4334:
	add r14,1 
LB_4335:
	cmp r14,r9
	jge LB_4336
	JZ_LINE_SPC BYTE [r13+8+r14], LB_4334
LB_4336
	lea rax,[r14+1]
	cmp rax,r9
	jg LB_4339
	jmp LB_4340
LB_4339:
	mov r8,unt_1
	jmp LB_4337
LB_4340:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],46
	jnz LB_4341
	jmp LB_4342
LB_4341:
	mov r8,unt_1
	jmp LB_4337
LB_4342:
	add r14,1
	jmp LB_4338
LB_4337:
	add rsp,8
	POP_GRM_FAIL
	ret
LB_4338:
	jmp LB_4344
LB_4343:
	add r14,1 
LB_4344:
	cmp r14,r9
	jge LB_4345
	JZ_LINE_SPC BYTE [r13+8+r14], LB_4343
LB_4345
	call GRM_76
	cmp BYTE [r8+6],0
	jnz LB_4348
	jmp LB_4349
LB_4348:
	jmp LB_4346
LB_4349:
	sub rsp,8
; .mov_ptn2 2'(= {| l |} ) ⊢ 9'(= {| l |} )
; .mov_ptn 2'(= {| l |} ) ⊢ 9'(= {| l |} )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_4347
LB_4346:
	add rsp,8
	POP_GRM_FAIL
	ret
LB_4347:
	jmp LB_4351
LB_4350:
	add r14,1 
LB_4351:
	cmp r14,r9
	jge LB_4352
	JZ_LINE_SPC BYTE [r13+8+r14], LB_4350
LB_4352
	call GRM_207
	cmp BYTE [r8+6],0
	jnz LB_4355
	jmp LB_4356
LB_4355:
	jmp LB_4353
LB_4356:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a8◂ [ a13◂ [ {| l |}]] ) ⊢ 10'(= a8◂ [ a13◂ [ {| l |}]] )
; .mov_ptn 2'(= a8◂ [ a13◂ [ {| l |}]] ) ⊢ 10'(= a8◂ [ a13◂ [ {| l |}]] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_4354
LB_4353:
	add rsp,16
	POP_GRM_FAIL
	ret
LB_4354:
	jmp LB_4358
LB_4357:
	add r14,1 
LB_4358:
	cmp r14,r9
	jge LB_4359
	JZ_LINE_SPC BYTE [r13+8+r14], LB_4357
LB_4359
	call GRM_259
	cmp BYTE [r8+6],0
	jnz LB_4362
	jmp LB_4363
LB_4362:
	jmp LB_4360
LB_4363:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a3◂ [ a23◂ [ ]] ) ⊢ 11'(= a3◂ [ a23◂ [ ]] )
; .mov_ptn 2'(= a3◂ [ a23◂ [ ]] ) ⊢ 11'(= a3◂ [ a23◂ [ ]] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_4361
LB_4360:
	add rsp,24
	POP_GRM_FAIL
	ret
LB_4361:
	jmp LB_4365
LB_4364:
	add r14,1 
LB_4365:
	cmp r14,r9
	jge LB_4366
	JZ_LINE_SPC BYTE [r13+8+r14], LB_4364
LB_4366
	lea rax,[r14+1]
	cmp rax,r9
	jg LB_4369
	jmp LB_4370
LB_4369:
	mov r8,unt_1
	jmp LB_4367
LB_4370:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],10
	jnz LB_4371
	jmp LB_4372
LB_4371:
	mov r8,unt_1
	jmp LB_4367
LB_4372:
	add r14,1
	jmp LB_4368
LB_4367:
	add rsp,32
	POP_GRM_FAIL
	ret
LB_4368:
	jmp LB_4374
LB_4373:
	add r14,1 
LB_4374:
	cmp r14,r9
	jge LB_4375
	JZ_LINE_SPC BYTE [r13+8+r14], LB_4373
LB_4375
	call GRM_236
	cmp BYTE [r8+6],0
	jnz LB_4378
	jmp LB_4379
LB_4378:
	jmp LB_4376
LB_4379:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a35◂ [ a17◂ [ a9◂ [ ]{| l |}]] ) ⊢ 12'(= a35◂ [ a17◂ [ a9◂ [ ]{| l |}]] )
; .mov_ptn 2'(= a35◂ [ a17◂ [ a9◂ [ ]{| l |}]] ) ⊢ 12'(= a35◂ [ a17◂ [ a9◂ [ ]{| l |}]] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_4377
LB_4376:
	add rsp,32
	POP_GRM_FAIL
	ret
LB_4377:
	jmp LB_4381
LB_4380:
	add r14,1 
LB_4381:
	cmp r14,r9
	jge LB_4382
	JZ_LINE_SPC BYTE [r13+8+r14], LB_4380
LB_4382
	call GRM_258
	cmp BYTE [r8+6],0
	jnz LB_4385
	jmp LB_4386
LB_4385:
	jmp LB_4383
LB_4386:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a35◂ [ a2◂ [ *{ {| l |}a8◂ [ a13◂ [ {| l |}]]a3◂ [ a23◂ [ ]]a17◂ [ a9◂ [ ]{| l |}]}]] ) ⊢ 13'(= a35◂ [ a2◂ [ *{ {| l |}a8◂ [ a13◂ [ {| l |}]]a3◂ [ a23◂ [ ]]a17◂ [ a9◂ [ ]{| l |}]}]] )
; .mov_ptn 2'(= a35◂ [ a2◂ [ *{ {| l |}a8◂ [ a13◂ [ {| l |}]]a3◂ [ a23◂ [ ]]a17◂ [ a9◂ [ ]{| l |}]}]] ) ⊢ 13'(= a35◂ [ a2◂ [ *{ {| l |}a8◂ [ a13◂ [ {| l |}]]a3◂ [ a23◂ [ ]]a17◂ [ a9◂ [ ]{| l |}]}]] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_4384
LB_4383:
	add rsp,40
	POP_GRM_FAIL
	ret
LB_4384:
	mov QWORD [rsp+8*6],r14
	mov r13,QWORD [rsp+16+8*6]
	mov r14,QWORD [rsp+8*6]
	jmp LB_4387
LB_4387
;; rsp=6 , %2390~1'(= r ) %2389~0'(= r ) %2388~13'(= a35◂ [ a2◂ [ *{ {| l |}a8◂ [ a13◂ [ {| l |}]]a3◂ [ a23◂ [ ]]a17◂ [ a9◂ [ ]{| l |}]}]] ) %2387~12'(= a35◂ [ a17◂ [ a9◂ [ ]{| l |}]] ) %2386~11'(= a3◂ [ a23◂ [ ]] ) %2385~10'(= a8◂ [ a13◂ [ {| l |}]] ) %2384~9'(= {| l |} ) %2383~8'(= a35◂ [ *{ }] ) 
;; ? 13'(= a35◂ [ a2◂ [ *{ {| l |}a8◂ [ a13◂ [ {| l |}]]a3◂ [ a23◂ [ ]]a17◂ [ a9◂ [ ]{| l |}]}]] ) ⊢ 0(<2)◂2'(= a2◂ [ *{ {| l |}a8◂ [ a13◂ [ {| l |}]]a3◂ [ a23◂ [ ]]a17◂ [ a9◂ [ ]{| l |}]}] )
	mov rdi,QWORD [rsp-8+8*1]
	cmp BYTE [rdi+6],0
	jnz LB_4389
	mov QWORD [GBG_VCT+8*0],rdi
	mov r8,QWORD [rdi+8]
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_LN rdi
;; rsp=6 , %2392~2'(= a2◂ [ *{ {| l |}a8◂ [ a13◂ [ {| l |}]]a3◂ [ a23◂ [ ]]a17◂ [ a9◂ [ ]{| l |}]}] ) %2390~1'(= r ) %2389~0'(= r ) %2387~12'(= a35◂ [ a17◂ [ a9◂ [ ]{| l |}]] ) %2386~11'(= a3◂ [ a23◂ [ ]] ) %2385~10'(= a8◂ [ a13◂ [ {| l |}]] ) %2384~9'(= {| l |} ) %2383~8'(= a35◂ [ *{ }] ) 
;; ? 12'(= a35◂ [ a17◂ [ a9◂ [ ]{| l |}]] ) ⊢ 0(<2)◂3'(= a17◂ [ a9◂ [ ]{| l |}] )
	mov rdi,QWORD [rsp-8+8*2]
	cmp BYTE [rdi+6],0
	jnz LB_4390
	mov QWORD [GBG_VCT+8*0],rdi
	mov r9,QWORD [rdi+8]
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_LN rdi
;; rsp=6 , %2394~3'(= a17◂ [ a9◂ [ ]{| l |}] ) %2392~2'(= a2◂ [ *{ {| l |}a8◂ [ a13◂ [ {| l |}]]a3◂ [ a23◂ [ ]]a17◂ [ a9◂ [ ]{| l |}]}] ) %2390~1'(= r ) %2389~0'(= r ) %2386~11'(= a3◂ [ a23◂ [ ]] ) %2385~10'(= a8◂ [ a13◂ [ {| l |}]] ) %2384~9'(= {| l |} ) %2383~8'(= a35◂ [ *{ }] ) 
; #23 { { 9'(= {| l |} ) 10'(= a8◂ [ a13◂ [ {| l |}]] ) 11'(= a3◂ [ a23◂ [ ]] ) 3'(= a17◂ [ a9◂ [ ]{| l |}] ) } 2'(= a2◂ [ *{ {| l |}a8◂ [ a13◂ [ {| l |}]]a3◂ [ a23◂ [ ]]a17◂ [ a9◂ [ ]{| l |}]}] ) } ⊢ 0(<2)◂{ { 9'(= {| l |} ) 10'(= a8◂ [ a13◂ [ {| l |}]] ) 11'(= a3◂ [ a23◂ [ ]] ) 3'(= a17◂ [ a9◂ [ ]{| l |}] ) } 2'(= a2◂ [ *{ {| l |}a8◂ [ a13◂ [ {| l |}]]a3◂ [ a23◂ [ ]]a17◂ [ a9◂ [ ]{| l |}]}] ) }
;; rsp=6 , %2395~0(<2)◂{ { 9'(= {| l |} ) 10'(= a8◂ [ a13◂ [ {| l |}]] ) 11'(= a3◂ [ a23◂ [ ]] ) 3'(= a17◂ [ a9◂ [ ]{| l |}] ) } 2'(= a2◂ [ *{ {| l |}a8◂ [ a13◂ [ {| l |}]]a3◂ [ a23◂ [ ]]a17◂ [ a9◂ [ ]{| l |}]}] ) } %2390~1'(= r ) %2389~0'(= r ) %2383~8'(= a35◂ [ *{ }] ) 
; #175 0(<2)◂{ { 9'(= {| l |} ) 10'(= a8◂ [ a13◂ [ {| l |}]] ) 11'(= a3◂ [ a23◂ [ ]] ) 3'(= a17◂ [ a9◂ [ ]{| l |}] ) } 2'(= a2◂ [ *{ {| l |}a8◂ [ a13◂ [ {| l |}]]a3◂ [ a23◂ [ ]]a17◂ [ a9◂ [ ]{| l |}]}] ) } ⊢ 3(<6)◂0(<2)◂{ { 9'(= {| l |} ) 10'(= a8◂ [ a13◂ [ {| l |}]] ) 11'(= a3◂ [ a23◂ [ ]] ) 3'(= a17◂ [ a9◂ [ ]{| l |}] ) } 2'(= a2◂ [ *{ {| l |}a8◂ [ a13◂ [ {| l |}]]a3◂ [ a23◂ [ ]]a17◂ [ a9◂ [ ]{| l |}]}] ) }
;; rsp=6 , %2396~3(<6)◂0(<2)◂{ { 9'(= {| l |} ) 10'(= a8◂ [ a13◂ [ {| l |}]] ) 11'(= a3◂ [ a23◂ [ ]] ) 3'(= a17◂ [ a9◂ [ ]{| l |}] ) } 2'(= a2◂ [ *{ {| l |}a8◂ [ a13◂ [ {| l |}]]a3◂ [ a23◂ [ ]]a17◂ [ a9◂ [ ]{| l |}]}] ) } %2390~1'(= r ) %2389~0'(= r ) %2383~8'(= a35◂ [ *{ }] ) 
; #195 3(<6)◂0(<2)◂{ { 9'(= {| l |} ) 10'(= a8◂ [ a13◂ [ {| l |}]] ) 11'(= a3◂ [ a23◂ [ ]] ) 3'(= a17◂ [ a9◂ [ ]{| l |}] ) } 2'(= a2◂ [ *{ {| l |}a8◂ [ a13◂ [ {| l |}]]a3◂ [ a23◂ [ ]]a17◂ [ a9◂ [ ]{| l |}]}] ) } ⊢ 0(<2)◂3(<6)◂0(<2)◂{ { 9'(= {| l |} ) 10'(= a8◂ [ a13◂ [ {| l |}]] ) 11'(= a3◂ [ a23◂ [ ]] ) 3'(= a17◂ [ a9◂ [ ]{| l |}] ) } 2'(= a2◂ [ *{ {| l |}a8◂ [ a13◂ [ {| l |}]]a3◂ [ a23◂ [ ]]a17◂ [ a9◂ [ ]{| l |}]}] ) }
;; rsp=6 , %2397~0(<2)◂3(<6)◂0(<2)◂{ { 9'(= {| l |} ) 10'(= a8◂ [ a13◂ [ {| l |}]] ) 11'(= a3◂ [ a23◂ [ ]] ) 3'(= a17◂ [ a9◂ [ ]{| l |}] ) } 2'(= a2◂ [ *{ {| l |}a8◂ [ a13◂ [ {| l |}]]a3◂ [ a23◂ [ ]]a17◂ [ a9◂ [ ]{| l |}]}] ) } %2390~1'(= r ) %2389~0'(= r ) %2383~8'(= a35◂ [ *{ }] ) 
; #24 0(<2)◂3(<6)◂0(<2)◂{ { 9'(= {| l |} ) 10'(= a8◂ [ a13◂ [ {| l |}]] ) 11'(= a3◂ [ a23◂ [ ]] ) 3'(= a17◂ [ a9◂ [ ]{| l |}] ) } 2'(= a2◂ [ *{ {| l |}a8◂ [ a13◂ [ {| l |}]]a3◂ [ a23◂ [ ]]a17◂ [ a9◂ [ ]{| l |}]}] ) } ⊢ 0(<2)◂0(<2)◂3(<6)◂0(<2)◂{ { 9'(= {| l |} ) 10'(= a8◂ [ a13◂ [ {| l |}]] ) 11'(= a3◂ [ a23◂ [ ]] ) 3'(= a17◂ [ a9◂ [ ]{| l |}] ) } 2'(= a2◂ [ *{ {| l |}a8◂ [ a13◂ [ {| l |}]]a3◂ [ a23◂ [ ]]a17◂ [ a9◂ [ ]{| l |}]}] ) }
;; rsp=6 , %2398~0(<2)◂0(<2)◂3(<6)◂0(<2)◂{ { 9'(= {| l |} ) 10'(= a8◂ [ a13◂ [ {| l |}]] ) 11'(= a3◂ [ a23◂ [ ]] ) 3'(= a17◂ [ a9◂ [ ]{| l |}] ) } 2'(= a2◂ [ *{ {| l |}a8◂ [ a13◂ [ {| l |}]]a3◂ [ a23◂ [ ]]a17◂ [ a9◂ [ ]{| l |}]}] ) } %2390~1'(= r ) %2389~0'(= r ) %2383~8'(= a35◂ [ *{ }] ) 
; ∎ 0(<2)◂0(<2)◂3(<6)◂0(<2)◂{ { 9'(= {| l |} ) 10'(= a8◂ [ a13◂ [ {| l |}]] ) 11'(= a3◂ [ a23◂ [ ]] ) 3'(= a17◂ [ a9◂ [ ]{| l |}] ) } 2'(= a2◂ [ *{ {| l |}a8◂ [ a13◂ [ {| l |}]]a3◂ [ a23◂ [ ]]a17◂ [ a9◂ [ ]{| l |}]}] ) }
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 8'(= a35◂ [ *{ }] )
	mov rdi,QWORD [rsp-8+8*6]
	C_PUSH_REGS
	mov r8,rdi
	call LB_1701
	C_POP_REGS
; .mov_ptn2 0(<2)◂0(<2)◂3(<6)◂0(<2)◂{ { 9'(= {| l |} ) 10'(= a8◂ [ a13◂ [ {| l |}]] ) 11'(= a3◂ [ a23◂ [ ]] ) 3'(= a17◂ [ a9◂ [ ]{| l |}] ) } 2'(= a2◂ [ *{ {| l |}a8◂ [ a13◂ [ {| l |}]]a3◂ [ a23◂ [ ]]a17◂ [ a9◂ [ ]{| l |}]}] ) } ⊢ 2'(= a3◂ [ a35◂ [ a31◂ [ ]]] )
	mov r13,r8
; .mov_ptn 0(<2)◂0(<2)◂3(<6)◂0(<2)◂{ { 9'(= {| l |} ) 10'(= a8◂ [ a13◂ [ {| l |}]] ) 11'(= a3◂ [ a23◂ [ ]] ) 3'(= a17◂ [ a9◂ [ ]{| l |}] ) } 0'(= a2◂ [ *{ {| l |}a8◂ [ a13◂ [ {| l |}]]a3◂ [ a23◂ [ ]]a17◂ [ a9◂ [ ]{| l |}]}] ) } ⊢ 2'(= a3◂ [ a35◂ [ a31◂ [ ]]] )
	ALC_RCD 2, rax
	mov r14,rax
	ALC_RCD 4, rax
	mov r10,rax
	mov rax,QWORD [rsp-8+8*5]
	mov QWORD [r10+8+8*0],rax
	mov rax,QWORD [rsp-8+8*4]
	mov QWORD [r10+8+8*1],rax
	mov rax,QWORD [rsp-8+8*3]
	mov QWORD [r10+8+8*2],rax
	mov rax,r9
	mov QWORD [r10+8+8*3],rax
	mov rax,r10
	mov QWORD [r14+8+8*0],rax
	mov rax,r13
	mov QWORD [r14+8+8*1],rax
	mov rax,r14
	mov BYTE [rax+6],0
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],3
	mov QWORD [rax+8],rdi
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,48
	jmp LB_4388
LB_4390:
;; ?. 12'(= a35◂ [ a17◂ [ a9◂ [ ]{| l |}]] ) ⊢ 1(<2)◂3'(= a2◂ [ *{ rr{| l |}}] )
	mov QWORD [GBG_VCT+8*0],rdi
	mov r9,QWORD [rdi+8]
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_LN rdi
;; rsp=6 , %2393~3'(= a2◂ [ *{ rr{| l |}}] ) %2392~2'(= a2◂ [ *{ {| l |}a8◂ [ a13◂ [ {| l |}]]a3◂ [ a23◂ [ ]]a17◂ [ a9◂ [ ]{| l |}]}] ) %2390~1'(= r ) %2389~0'(= r ) %2386~11'(= a3◂ [ a23◂ [ ]] ) %2385~10'(= a8◂ [ a13◂ [ {| l |}]] ) %2384~9'(= {| l |} ) %2383~8'(= a35◂ [ *{ }] ) 
; #194 3'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 1(<2)◂3'(= a2◂ [ *{ rr{| l |}}] )
;; rsp=6 , %2399~1(<2)◂3'(= a2◂ [ *{ rr{| l |}}] ) %2392~2'(= a2◂ [ *{ {| l |}a8◂ [ a13◂ [ {| l |}]]a3◂ [ a23◂ [ ]]a17◂ [ a9◂ [ ]{| l |}]}] ) %2390~1'(= r ) %2389~0'(= r ) %2386~11'(= a3◂ [ a23◂ [ ]] ) %2385~10'(= a8◂ [ a13◂ [ {| l |}]] ) %2384~9'(= {| l |} ) %2383~8'(= a35◂ [ *{ }] ) 
; #24 1(<2)◂3'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 0(<2)◂1(<2)◂3'(= a2◂ [ *{ rr{| l |}}] )
;; rsp=6 , %2400~0(<2)◂1(<2)◂3'(= a2◂ [ *{ rr{| l |}}] ) %2392~2'(= a2◂ [ *{ {| l |}a8◂ [ a13◂ [ {| l |}]]a3◂ [ a23◂ [ ]]a17◂ [ a9◂ [ ]{| l |}]}] ) %2390~1'(= r ) %2389~0'(= r ) %2386~11'(= a3◂ [ a23◂ [ ]] ) %2385~10'(= a8◂ [ a13◂ [ {| l |}]] ) %2384~9'(= {| l |} ) %2383~8'(= a35◂ [ *{ }] ) 
; ∎ 0(<2)◂1(<2)◂3'(= a2◂ [ *{ rr{| l |}}] )
; .dlt.ptn 2'(= a2◂ [ *{ {| l |}a8◂ [ a13◂ [ {| l |}]]a3◂ [ a23◂ [ ]]a17◂ [ a9◂ [ ]{| l |}]}] )
	mov rdi,r8
	C_PUSH_REGS
	mov r8,rdi
	call LB_3543
	C_POP_REGS
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 11'(= a3◂ [ a23◂ [ ]] )
	mov rdi,QWORD [rsp-8+8*3]
	C_PUSH_REGS
	mov r8,rdi
	call LB_834
	C_POP_REGS
; .dlt.ptn 10'(= a8◂ [ a13◂ [ {| l |}]] )
	mov rdi,QWORD [rsp-8+8*4]
	C_PUSH_REGS
	mov r8,rdi
	call LB_668
	C_POP_REGS
; .dlt.ptn 9'(= {| l |} )
	mov rdi,QWORD [rsp-8+8*5]
	C_PUSH_REGS
	mov r8,rdi
	mov rdi,r8
	call free_s8
	C_POP_REGS
; .dlt.ptn 8'(= a35◂ [ *{ }] )
	mov rdi,QWORD [rsp-8+8*6]
	C_PUSH_REGS
	mov r8,rdi
	call LB_1701
	C_POP_REGS
; .mov_ptn2 0(<2)◂1(<2)◂3'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 2'(= a3◂ [ a35◂ [ a31◂ [ ]]] )
; .mov_ptn 0(<2)◂1(<2)◂3'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 2'(= a3◂ [ a35◂ [ a31◂ [ ]]] )
	mov rax,r9
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],1
	mov QWORD [rax+8],rdi
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,48
	jmp LB_4388
LB_4389:
;; ?. 13'(= a35◂ [ a2◂ [ *{ {| l |}a8◂ [ a13◂ [ {| l |}]]a3◂ [ a23◂ [ ]]a17◂ [ a9◂ [ ]{| l |}]}]] ) ⊢ 1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] )
	mov QWORD [GBG_VCT+8*0],rdi
	mov r8,QWORD [rdi+8]
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_LN rdi
;; rsp=6 , %2391~2'(= a2◂ [ *{ rr{| l |}}] ) %2390~1'(= r ) %2389~0'(= r ) %2387~12'(= a35◂ [ a17◂ [ a9◂ [ ]{| l |}]] ) %2386~11'(= a3◂ [ a23◂ [ ]] ) %2385~10'(= a8◂ [ a13◂ [ {| l |}]] ) %2384~9'(= {| l |} ) %2383~8'(= a35◂ [ *{ }] ) 
;; ? 12'(= a35◂ [ a17◂ [ a9◂ [ ]{| l |}]] ) ⊢ 0(<2)◂3'(= a17◂ [ a9◂ [ ]{| l |}] )
	mov rdi,QWORD [rsp-8+8*2]
	cmp BYTE [rdi+6],0
	jnz LB_4391
	mov QWORD [GBG_VCT+8*0],rdi
	mov r9,QWORD [rdi+8]
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_LN rdi
;; rsp=6 , %2402~3'(= a17◂ [ a9◂ [ ]{| l |}] ) %2391~2'(= a2◂ [ *{ rr{| l |}}] ) %2390~1'(= r ) %2389~0'(= r ) %2386~11'(= a3◂ [ a23◂ [ ]] ) %2385~10'(= a8◂ [ a13◂ [ {| l |}]] ) %2384~9'(= {| l |} ) %2383~8'(= a35◂ [ *{ }] ) 
; #194 2'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] )
;; rsp=6 , %2403~1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] ) %2402~3'(= a17◂ [ a9◂ [ ]{| l |}] ) %2390~1'(= r ) %2389~0'(= r ) %2386~11'(= a3◂ [ a23◂ [ ]] ) %2385~10'(= a8◂ [ a13◂ [ {| l |}]] ) %2384~9'(= {| l |} ) %2383~8'(= a35◂ [ *{ }] ) 
; #24 1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 0(<2)◂1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] )
;; rsp=6 , %2404~0(<2)◂1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] ) %2402~3'(= a17◂ [ a9◂ [ ]{| l |}] ) %2390~1'(= r ) %2389~0'(= r ) %2386~11'(= a3◂ [ a23◂ [ ]] ) %2385~10'(= a8◂ [ a13◂ [ {| l |}]] ) %2384~9'(= {| l |} ) %2383~8'(= a35◂ [ *{ }] ) 
; ∎ 0(<2)◂1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] )
; .dlt.ptn 3'(= a17◂ [ a9◂ [ ]{| l |}] )
	mov rdi,r9
	C_PUSH_REGS
	mov r8,rdi
	call LB_674
	C_POP_REGS
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 11'(= a3◂ [ a23◂ [ ]] )
	mov rdi,QWORD [rsp-8+8*3]
	C_PUSH_REGS
	mov r8,rdi
	call LB_834
	C_POP_REGS
; .dlt.ptn 10'(= a8◂ [ a13◂ [ {| l |}]] )
	mov rdi,QWORD [rsp-8+8*4]
	C_PUSH_REGS
	mov r8,rdi
	call LB_668
	C_POP_REGS
; .dlt.ptn 9'(= {| l |} )
	mov rdi,QWORD [rsp-8+8*5]
	C_PUSH_REGS
	mov r8,rdi
	mov rdi,r8
	call free_s8
	C_POP_REGS
; .dlt.ptn 8'(= a35◂ [ *{ }] )
	mov rdi,QWORD [rsp-8+8*6]
	C_PUSH_REGS
	mov r8,rdi
	call LB_1701
	C_POP_REGS
; .mov_ptn2 0(<2)◂1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 2'(= a3◂ [ a35◂ [ a31◂ [ ]]] )
	mov r13,r8
; .mov_ptn 0(<2)◂1(<2)◂0'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 2'(= a3◂ [ a35◂ [ a31◂ [ ]]] )
	mov rax,r13
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],1
	mov QWORD [rax+8],rdi
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,48
	jmp LB_4388
LB_4391:
;; ?. 12'(= a35◂ [ a17◂ [ a9◂ [ ]{| l |}]] ) ⊢ 1(<2)◂3'(= a2◂ [ *{ rr{| l |}}] )
	mov QWORD [GBG_VCT+8*0],rdi
	mov r9,QWORD [rdi+8]
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_LN rdi
;; rsp=6 , %2401~3'(= a2◂ [ *{ rr{| l |}}] ) %2391~2'(= a2◂ [ *{ rr{| l |}}] ) %2390~1'(= r ) %2389~0'(= r ) %2386~11'(= a3◂ [ a23◂ [ ]] ) %2385~10'(= a8◂ [ a13◂ [ {| l |}]] ) %2384~9'(= {| l |} ) %2383~8'(= a35◂ [ *{ }] ) 
; #55 { 2'(= a2◂ [ *{ rr{| l |}}] ) 3'(= a2◂ [ *{ rr{| l |}}] ) } ⊢ 2'(= a2◂ [ *{ rr{| l |}}] )
	sub rsp,16
	mov QWORD [rsp+8*0],r13
	mov QWORD [rsp+8*1],r14
; .mov_ptn2 { 2'(= a2◂ [ *{ rr{| l |}}] ) 3'(= a2◂ [ *{ rr{| l |}}] ) } ⊢ { 0'(= a2◂ [ *{ rr{| l |}}] ) 1'(= a2◂ [ *{ rr{| l |}}] ) }
; .mov_ptn 3'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 1'(= a2◂ [ *{ rr{| l |}}] )
	mov rax,r9
	mov r14,rax
; .mov_ptn 2'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 0'(= a2◂ [ *{ rr{| l |}}] )
	mov rax,r8
	mov r13,rax
	call LB_1804
	mov r14,QWORD [rsp-8+8*2]
	mov r8,r13
	mov r13,QWORD [rsp-8+8*1]
	add rsp,32
;; rsp=4 , %2405~2'(= a2◂ [ *{ rr{| l |}}] ) %2390~1'(= r ) %2389~0'(= r ) %2386~11'(= a3◂ [ a23◂ [ ]] ) %2385~10'(= a8◂ [ a13◂ [ {| l |}]] ) %2384~9'(= {| l |} ) %2383~8'(= a35◂ [ *{ }] ) 
; #194 2'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] )
;; rsp=4 , %2406~1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] ) %2390~1'(= r ) %2389~0'(= r ) %2386~11'(= a3◂ [ a23◂ [ ]] ) %2385~10'(= a8◂ [ a13◂ [ {| l |}]] ) %2384~9'(= {| l |} ) %2383~8'(= a35◂ [ *{ }] ) 
; #24 1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 0(<2)◂1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] )
;; rsp=4 , %2407~0(<2)◂1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] ) %2390~1'(= r ) %2389~0'(= r ) %2386~11'(= a3◂ [ a23◂ [ ]] ) %2385~10'(= a8◂ [ a13◂ [ {| l |}]] ) %2384~9'(= {| l |} ) %2383~8'(= a35◂ [ *{ }] ) 
; ∎ 0(<2)◂1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] )
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 11'(= a3◂ [ a23◂ [ ]] )
	mov rdi,QWORD [rsp-8+8*1]
	C_PUSH_REGS
	mov r8,rdi
	call LB_834
	C_POP_REGS
; .dlt.ptn 10'(= a8◂ [ a13◂ [ {| l |}]] )
	mov rdi,QWORD [rsp-8+8*2]
	C_PUSH_REGS
	mov r8,rdi
	call LB_668
	C_POP_REGS
; .dlt.ptn 9'(= {| l |} )
	mov rdi,QWORD [rsp-8+8*3]
	C_PUSH_REGS
	mov r8,rdi
	mov rdi,r8
	call free_s8
	C_POP_REGS
; .dlt.ptn 8'(= a35◂ [ *{ }] )
	mov rdi,QWORD [rsp-8+8*4]
	C_PUSH_REGS
	mov r8,rdi
	call LB_1701
	C_POP_REGS
; .mov_ptn2 0(<2)◂1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 2'(= a3◂ [ a35◂ [ a31◂ [ ]]] )
	mov r13,r8
; .mov_ptn 0(<2)◂1(<2)◂0'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 2'(= a3◂ [ a35◂ [ a31◂ [ ]]] )
	mov rax,r13
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],1
	mov QWORD [rax+8],rdi
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,32
	jmp LB_4388
LB_4388:
	cmp BYTE [r8+6],0
	jnz LB_4317
	POP_GRM_SCC
	ret
LB_4317:
	RB_GRM
	jmp LB_4394
LB_4393:
	add r14,1 
LB_4394:
	cmp r14,r9
	jge LB_4395
	JZ_SPC BYTE [r13+8+r14], LB_4393
LB_4395
	call GRM_76
	cmp BYTE [r8+6],0
	jnz LB_4398
	jmp LB_4399
LB_4398:
	jmp LB_4396
LB_4399:
	sub rsp,8
; .mov_ptn2 2'(= {| l |} ) ⊢ 8'(= {| l |} )
; .mov_ptn 2'(= {| l |} ) ⊢ 8'(= {| l |} )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_4397
LB_4396:
	add rsp,0
	jmp LB_4392
LB_4397:
	jmp LB_4401
LB_4400:
	add r14,1 
LB_4401:
	cmp r14,r9
	jge LB_4402
	JZ_SPC BYTE [r13+8+r14], LB_4400
LB_4402
	call GRM_260
	cmp BYTE [r8+6],0
	jnz LB_4405
	jmp LB_4406
LB_4405:
	jmp LB_4403
LB_4406:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a35◂ [ a33◂ [ ]] ) ⊢ 9'(= a35◂ [ a33◂ [ ]] )
; .mov_ptn 2'(= a35◂ [ a33◂ [ ]] ) ⊢ 9'(= a35◂ [ a33◂ [ ]] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_4404
LB_4403:
	add rsp,8
	jmp LB_4392
LB_4404:
	mov QWORD [rsp+8*2],r14
	mov r13,QWORD [rsp+16+8*2]
	mov r14,QWORD [rsp+8*2]
	jmp LB_4407
LB_4407
;; rsp=2 , %2411~1'(= r ) %2410~0'(= r ) %2409~9'(= a35◂ [ a33◂ [ ]] ) %2408~8'(= {| l |} ) 
;; ? 9'(= a35◂ [ a33◂ [ ]] ) ⊢ 0(<2)◂2'(= a33◂ [ ] )
	mov rdi,QWORD [rsp-8+8*1]
	cmp BYTE [rdi+6],0
	jnz LB_4409
	mov QWORD [GBG_VCT+8*0],rdi
	mov r8,QWORD [rdi+8]
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_LN rdi
;; rsp=2 , %2413~2'(= a33◂ [ ] ) %2411~1'(= r ) %2410~0'(= r ) %2408~8'(= {| l |} ) 
; #176 { 8'(= {| l |} ) 2'(= a33◂ [ ] ) } ⊢ 2(<6)◂{ 8'(= {| l |} ) 2'(= a33◂ [ ] ) }
;; rsp=2 , %2414~2(<6)◂{ 8'(= {| l |} ) 2'(= a33◂ [ ] ) } %2411~1'(= r ) %2410~0'(= r ) 
; #195 2(<6)◂{ 8'(= {| l |} ) 2'(= a33◂ [ ] ) } ⊢ 0(<2)◂2(<6)◂{ 8'(= {| l |} ) 2'(= a33◂ [ ] ) }
;; rsp=2 , %2415~0(<2)◂2(<6)◂{ 8'(= {| l |} ) 2'(= a33◂ [ ] ) } %2411~1'(= r ) %2410~0'(= r ) 
; #24 0(<2)◂2(<6)◂{ 8'(= {| l |} ) 2'(= a33◂ [ ] ) } ⊢ 0(<2)◂0(<2)◂2(<6)◂{ 8'(= {| l |} ) 2'(= a33◂ [ ] ) }
;; rsp=2 , %2416~0(<2)◂0(<2)◂2(<6)◂{ 8'(= {| l |} ) 2'(= a33◂ [ ] ) } %2411~1'(= r ) %2410~0'(= r ) 
; ∎ 0(<2)◂0(<2)◂2(<6)◂{ 8'(= {| l |} ) 2'(= a33◂ [ ] ) }
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂0(<2)◂2(<6)◂{ 8'(= {| l |} ) 2'(= a33◂ [ ] ) } ⊢ 2'(= a3◂ [ a35◂ [ a31◂ [ ]]] )
	mov r13,r8
; .mov_ptn 0(<2)◂0(<2)◂2(<6)◂{ 8'(= {| l |} ) 0'(= a33◂ [ ] ) } ⊢ 2'(= a3◂ [ a35◂ [ a31◂ [ ]]] )
	ALC_RCD 2, rax
	mov r14,rax
	mov rax,QWORD [rsp-8+8*2]
	mov QWORD [r14+8+8*0],rax
	mov rax,r13
	mov QWORD [r14+8+8*1],rax
	mov rax,r14
	mov BYTE [rax+6],2
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,16
	jmp LB_4408
LB_4409:
;; ?. 9'(= a35◂ [ a33◂ [ ]] ) ⊢ 1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] )
	mov QWORD [GBG_VCT+8*0],rdi
	mov r8,QWORD [rdi+8]
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_LN rdi
;; rsp=2 , %2412~2'(= a2◂ [ *{ rr{| l |}}] ) %2411~1'(= r ) %2410~0'(= r ) %2408~8'(= {| l |} ) 
; #194 2'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] )
;; rsp=2 , %2417~1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] ) %2411~1'(= r ) %2410~0'(= r ) %2408~8'(= {| l |} ) 
; #24 1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 0(<2)◂1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] )
;; rsp=2 , %2418~0(<2)◂1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] ) %2411~1'(= r ) %2410~0'(= r ) %2408~8'(= {| l |} ) 
; ∎ 0(<2)◂1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] )
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 8'(= {| l |} )
	mov rdi,QWORD [rsp-8+8*2]
	C_PUSH_REGS
	mov r8,rdi
	mov rdi,r8
	call free_s8
	C_POP_REGS
; .mov_ptn2 0(<2)◂1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 2'(= a3◂ [ a35◂ [ a31◂ [ ]]] )
	mov r13,r8
; .mov_ptn 0(<2)◂1(<2)◂0'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 2'(= a3◂ [ a35◂ [ a31◂ [ ]]] )
	mov rax,r13
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],1
	mov QWORD [rax+8],rdi
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,16
	jmp LB_4408
LB_4408:
	cmp BYTE [r8+6],0
	jnz LB_4392
	POP_GRM_SCC
	ret
LB_4392:
	RB_GRM
	mov QWORD [rsp+8*0],r14
	mov r13,QWORD [rsp+16+8*0]
	mov r14,QWORD [rsp+8*0]
	jmp LB_4411
LB_4411
;; rsp=0 , %2420~1'(= r ) %2419~0'(= r ) 
; $ %[ "lc_etr_body 0" ] ⊢ %[ "lc_etr_body 0" ]
;; rsp=0 , %2421~%[ "lc_etr_body 0" ] %2420~1'(= r ) %2419~0'(= r ) 
; #10 %[ "lc_etr_body 0" ] ⊢ %[ "lc_etr_body 0" ]
	mov rdi,fmt_emt
	call emt_stg
	mov rdi,LB_4413
	call emt_stg 
	mov rdi,fmt_nl
	call emt_stg
	jmp LB_4414
LB_4414:
;; rsp=0 , %2422~%[ "lc_etr_body 0" ] %2420~1'(= r ) %2419~0'(= r ) 
; #25 { } ⊢ 1(<2)◂{ }
;; rsp=0 , %2423~1(<2)◂{ } %2422~%[ "lc_etr_body 0" ] %2420~1'(= r ) %2419~0'(= r ) 
; ∎ 1(<2)◂{ }
; .dlt.ptn %[ "lc_etr_body 0" ]
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 1(<2)◂{ } ⊢ 2'(= a3◂ [ a35◂ [ a31◂ [ ]]] )
; .mov_ptn 1(<2)◂{ } ⊢ 2'(= a3◂ [ a35◂ [ a31◂ [ ]]] )
	mov rax,unt 
	mov rax,unt_1
	mov r8,rax
	jmp LB_4412
LB_4412:
	cmp BYTE [r8+6],0
	jnz LB_4410
	POP_GRM_SCC
	ret
LB_4410:
	POP_GRM_FAIL 
	ret
ETR_258:
	mov r9,0x0000_ffff_ffff_ffff
	and r9,[r13]
	call GRM_258
	ret
GRM_258:
	PUSH_GRM
	jmp LB_4417
LB_4416:
	add r14,1 
LB_4417:
	cmp r14,r9
	jge LB_4418
	JZ_LINE_SPC BYTE [r13+8+r14], LB_4416
LB_4418
	call GRM_219
	cmp BYTE [r8+6],0
	jnz LB_4421
	jmp LB_4422
LB_4421:
	jmp LB_4419
LB_4422:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a35◂ [ *{ }] ) ⊢ 8'(= a35◂ [ *{ }] )
; .mov_ptn 2'(= a35◂ [ *{ }] ) ⊢ 8'(= a35◂ [ *{ }] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_4420
LB_4419:
	add rsp,0
	jmp LB_4415
LB_4420:
	jmp LB_4424
LB_4423:
	add r14,1 
LB_4424:
	cmp r14,r9
	jge LB_4425
	JZ_LINE_SPC BYTE [r13+8+r14], LB_4423
LB_4425
	lea rax,[r14+1]
	cmp rax,r9
	jg LB_4428
	jmp LB_4429
LB_4428:
	mov r8,unt_1
	jmp LB_4426
LB_4429:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],64
	jnz LB_4430
	jmp LB_4431
LB_4430:
	mov r8,unt_1
	jmp LB_4426
LB_4431:
	add r14,1
	jmp LB_4427
LB_4426:
	add rsp,8
	jmp LB_4415
LB_4427:
	jmp LB_4433
LB_4432:
	add r14,1 
LB_4433:
	cmp r14,r9
	jge LB_4434
	JZ_LINE_SPC BYTE [r13+8+r14], LB_4432
LB_4434
	lea rax,[r14+1]
	cmp rax,r9
	jg LB_4437
	jmp LB_4438
LB_4437:
	mov r8,unt_1
	jmp LB_4435
LB_4438:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],46
	jnz LB_4439
	jmp LB_4440
LB_4439:
	mov r8,unt_1
	jmp LB_4435
LB_4440:
	add r14,1
	jmp LB_4436
LB_4435:
	add rsp,8
	POP_GRM_FAIL
	ret
LB_4436:
	jmp LB_4442
LB_4441:
	add r14,1 
LB_4442:
	cmp r14,r9
	jge LB_4443
	JZ_LINE_SPC BYTE [r13+8+r14], LB_4441
LB_4443
	call GRM_76
	cmp BYTE [r8+6],0
	jnz LB_4446
	jmp LB_4447
LB_4446:
	jmp LB_4444
LB_4447:
	sub rsp,8
; .mov_ptn2 2'(= {| l |} ) ⊢ 9'(= {| l |} )
; .mov_ptn 2'(= {| l |} ) ⊢ 9'(= {| l |} )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_4445
LB_4444:
	add rsp,8
	POP_GRM_FAIL
	ret
LB_4445:
	jmp LB_4449
LB_4448:
	add r14,1 
LB_4449:
	cmp r14,r9
	jge LB_4450
	JZ_LINE_SPC BYTE [r13+8+r14], LB_4448
LB_4450
	call GRM_207
	cmp BYTE [r8+6],0
	jnz LB_4453
	jmp LB_4454
LB_4453:
	jmp LB_4451
LB_4454:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a8◂ [ a13◂ [ {| l |}]] ) ⊢ 10'(= a8◂ [ a13◂ [ {| l |}]] )
; .mov_ptn 2'(= a8◂ [ a13◂ [ {| l |}]] ) ⊢ 10'(= a8◂ [ a13◂ [ {| l |}]] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_4452
LB_4451:
	add rsp,16
	POP_GRM_FAIL
	ret
LB_4452:
	jmp LB_4456
LB_4455:
	add r14,1 
LB_4456:
	cmp r14,r9
	jge LB_4457
	JZ_LINE_SPC BYTE [r13+8+r14], LB_4455
LB_4457
	call GRM_259
	cmp BYTE [r8+6],0
	jnz LB_4460
	jmp LB_4461
LB_4460:
	jmp LB_4458
LB_4461:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a3◂ [ a23◂ [ ]] ) ⊢ 11'(= a3◂ [ a23◂ [ ]] )
; .mov_ptn 2'(= a3◂ [ a23◂ [ ]] ) ⊢ 11'(= a3◂ [ a23◂ [ ]] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_4459
LB_4458:
	add rsp,24
	POP_GRM_FAIL
	ret
LB_4459:
	jmp LB_4463
LB_4462:
	add r14,1 
LB_4463:
	cmp r14,r9
	jge LB_4464
	JZ_LINE_SPC BYTE [r13+8+r14], LB_4462
LB_4464
	lea rax,[r14+1]
	cmp rax,r9
	jg LB_4467
	jmp LB_4468
LB_4467:
	mov r8,unt_1
	jmp LB_4465
LB_4468:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],10
	jnz LB_4469
	jmp LB_4470
LB_4469:
	mov r8,unt_1
	jmp LB_4465
LB_4470:
	add r14,1
	jmp LB_4466
LB_4465:
	add rsp,32
	POP_GRM_FAIL
	ret
LB_4466:
	jmp LB_4472
LB_4471:
	add r14,1 
LB_4472:
	cmp r14,r9
	jge LB_4473
	JZ_LINE_SPC BYTE [r13+8+r14], LB_4471
LB_4473
	call GRM_236
	cmp BYTE [r8+6],0
	jnz LB_4476
	jmp LB_4477
LB_4476:
	jmp LB_4474
LB_4477:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a35◂ [ a17◂ [ a9◂ [ ]{| l |}]] ) ⊢ 12'(= a35◂ [ a17◂ [ a9◂ [ ]{| l |}]] )
; .mov_ptn 2'(= a35◂ [ a17◂ [ a9◂ [ ]{| l |}]] ) ⊢ 12'(= a35◂ [ a17◂ [ a9◂ [ ]{| l |}]] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_4475
LB_4474:
	add rsp,32
	POP_GRM_FAIL
	ret
LB_4475:
	jmp LB_4479
LB_4478:
	add r14,1 
LB_4479:
	cmp r14,r9
	jge LB_4480
	JZ_LINE_SPC BYTE [r13+8+r14], LB_4478
LB_4480
	call GRM_258
	cmp BYTE [r8+6],0
	jnz LB_4483
	jmp LB_4484
LB_4483:
	jmp LB_4481
LB_4484:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a35◂ [ a2◂ [ *{ {| l |}a8◂ [ a13◂ [ {| l |}]]a3◂ [ a23◂ [ ]]a17◂ [ a9◂ [ ]{| l |}]}]] ) ⊢ 13'(= a35◂ [ a2◂ [ *{ {| l |}a8◂ [ a13◂ [ {| l |}]]a3◂ [ a23◂ [ ]]a17◂ [ a9◂ [ ]{| l |}]}]] )
; .mov_ptn 2'(= a35◂ [ a2◂ [ *{ {| l |}a8◂ [ a13◂ [ {| l |}]]a3◂ [ a23◂ [ ]]a17◂ [ a9◂ [ ]{| l |}]}]] ) ⊢ 13'(= a35◂ [ a2◂ [ *{ {| l |}a8◂ [ a13◂ [ {| l |}]]a3◂ [ a23◂ [ ]]a17◂ [ a9◂ [ ]{| l |}]}]] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_4482
LB_4481:
	add rsp,40
	POP_GRM_FAIL
	ret
LB_4482:
	mov QWORD [rsp+8*6],r14
	mov r13,QWORD [rsp+16+8*6]
	mov r14,QWORD [rsp+8*6]
	jmp LB_4485
LB_4485
;; rsp=6 , %2431~1'(= r ) %2430~0'(= r ) %2429~13'(= a35◂ [ a2◂ [ *{ {| l |}a8◂ [ a13◂ [ {| l |}]]a3◂ [ a23◂ [ ]]a17◂ [ a9◂ [ ]{| l |}]}]] ) %2428~12'(= a35◂ [ a17◂ [ a9◂ [ ]{| l |}]] ) %2427~11'(= a3◂ [ a23◂ [ ]] ) %2426~10'(= a8◂ [ a13◂ [ {| l |}]] ) %2425~9'(= {| l |} ) %2424~8'(= a35◂ [ *{ }] ) 
; #196 { 13'(= a35◂ [ a2◂ [ *{ {| l |}a8◂ [ a13◂ [ {| l |}]]a3◂ [ a23◂ [ ]]a17◂ [ a9◂ [ ]{| l |}]}]] ) 12'(= a35◂ [ a17◂ [ a9◂ [ ]{| l |}]] ) } ⊢ 2'(= a35◂ [ *{ a2◂ [ *{ {| l |}a8◂ [ a13◂ [ {| l |}]]a3◂ [ a23◂ [ ]]a17◂ [ a9◂ [ ]{| l |}]}]a17◂ [ a9◂ [ ]{| l |}]}] )
	sub rsp,16
	mov QWORD [rsp+8*0],r13
	mov QWORD [rsp+8*1],r14
; .mov_ptn2 { 13'(= a35◂ [ a2◂ [ *{ {| l |}a8◂ [ a13◂ [ {| l |}]]a3◂ [ a23◂ [ ]]a17◂ [ a9◂ [ ]{| l |}]}]] ) 12'(= a35◂ [ a17◂ [ a9◂ [ ]{| l |}]] ) } ⊢ { 0'(= a35◂ [ a2◂ [ *{ {| l |}a8◂ [ a13◂ [ {| l |}]]a3◂ [ a23◂ [ ]]a17◂ [ a9◂ [ ]{| l |}]}]] ) 1'(= a35◂ [ a17◂ [ a9◂ [ ]{| l |}]] ) }
; .mov_ptn 12'(= a35◂ [ a17◂ [ a9◂ [ ]{| l |}]] ) ⊢ 1'(= a35◂ [ a17◂ [ a9◂ [ ]{| l |}]] )
	mov rax,QWORD [rsp-8+8*4]
	mov r14,rax
; .mov_ptn 13'(= a35◂ [ a2◂ [ *{ {| l |}a8◂ [ a13◂ [ {| l |}]]a3◂ [ a23◂ [ ]]a17◂ [ a9◂ [ ]{| l |}]}]] ) ⊢ 0'(= a35◂ [ a2◂ [ *{ {| l |}a8◂ [ a13◂ [ {| l |}]]a3◂ [ a23◂ [ ]]a17◂ [ a9◂ [ ]{| l |}]}]] )
	mov rax,QWORD [rsp-8+8*3]
	mov r13,rax
	call LB_4487
	mov r14,QWORD [rsp-8+8*2]
	mov r8,r13
	mov r13,QWORD [rsp-8+8*1]
	add rsp,32
;; rsp=4 , %2432~2'(= a35◂ [ *{ a2◂ [ *{ {| l |}a8◂ [ a13◂ [ {| l |}]]a3◂ [ a23◂ [ ]]a17◂ [ a9◂ [ ]{| l |}]}]a17◂ [ a9◂ [ ]{| l |}]}] ) %2431~1'(= r ) %2430~0'(= r ) %2427~11'(= a3◂ [ a23◂ [ ]] ) %2426~10'(= a8◂ [ a13◂ [ {| l |}]] ) %2425~9'(= {| l |} ) %2424~8'(= a35◂ [ *{ }] ) 
;; ? 2'(= a35◂ [ *{ a2◂ [ *{ {| l |}a8◂ [ a13◂ [ {| l |}]]a3◂ [ a23◂ [ ]]a17◂ [ a9◂ [ ]{| l |}]}]a17◂ [ a9◂ [ ]{| l |}]}] ) ⊢ 0(<2)◂{ 3'(= a2◂ [ *{ {| l |}a8◂ [ a13◂ [ {| l |}]]a3◂ [ a23◂ [ ]]a17◂ [ a9◂ [ ]{| l |}]}] ) 4'(= a17◂ [ a9◂ [ ]{| l |}] ) }
	mov rdi,r8
	cmp BYTE [rdi+6],0
	jnz LB_4491
	mov r9, QWORD [r8+8]
	mov r10, QWORD [r8+16]
	mov QWORD [GBG_VCT+8*0],r8
	mov rdi,QWORD [GBG_VCT+8*0]
	mov rax,[SS_RCD_2_TOP]
	mov QWORD [rdi],rax 
	mov QWORD [SS_RCD_2_TOP],rdi
;; rsp=4 , %2435~4'(= a17◂ [ a9◂ [ ]{| l |}] ) %2434~3'(= a2◂ [ *{ {| l |}a8◂ [ a13◂ [ {| l |}]]a3◂ [ a23◂ [ ]]a17◂ [ a9◂ [ ]{| l |}]}] ) %2431~1'(= r ) %2430~0'(= r ) %2427~11'(= a3◂ [ a23◂ [ ]] ) %2426~10'(= a8◂ [ a13◂ [ {| l |}]] ) %2425~9'(= {| l |} ) %2424~8'(= a35◂ [ *{ }] ) 
; #23 { { 9'(= {| l |} ) 10'(= a8◂ [ a13◂ [ {| l |}]] ) 11'(= a3◂ [ a23◂ [ ]] ) 4'(= a17◂ [ a9◂ [ ]{| l |}] ) } 3'(= a2◂ [ *{ {| l |}a8◂ [ a13◂ [ {| l |}]]a3◂ [ a23◂ [ ]]a17◂ [ a9◂ [ ]{| l |}]}] ) } ⊢ 0(<2)◂{ { 9'(= {| l |} ) 10'(= a8◂ [ a13◂ [ {| l |}]] ) 11'(= a3◂ [ a23◂ [ ]] ) 4'(= a17◂ [ a9◂ [ ]{| l |}] ) } 3'(= a2◂ [ *{ {| l |}a8◂ [ a13◂ [ {| l |}]]a3◂ [ a23◂ [ ]]a17◂ [ a9◂ [ ]{| l |}]}] ) }
;; rsp=4 , %2436~0(<2)◂{ { 9'(= {| l |} ) 10'(= a8◂ [ a13◂ [ {| l |}]] ) 11'(= a3◂ [ a23◂ [ ]] ) 4'(= a17◂ [ a9◂ [ ]{| l |}] ) } 3'(= a2◂ [ *{ {| l |}a8◂ [ a13◂ [ {| l |}]]a3◂ [ a23◂ [ ]]a17◂ [ a9◂ [ ]{| l |}]}] ) } %2431~1'(= r ) %2430~0'(= r ) %2424~8'(= a35◂ [ *{ }] ) 
; #195 0(<2)◂{ { 9'(= {| l |} ) 10'(= a8◂ [ a13◂ [ {| l |}]] ) 11'(= a3◂ [ a23◂ [ ]] ) 4'(= a17◂ [ a9◂ [ ]{| l |}] ) } 3'(= a2◂ [ *{ {| l |}a8◂ [ a13◂ [ {| l |}]]a3◂ [ a23◂ [ ]]a17◂ [ a9◂ [ ]{| l |}]}] ) } ⊢ 0(<2)◂0(<2)◂{ { 9'(= {| l |} ) 10'(= a8◂ [ a13◂ [ {| l |}]] ) 11'(= a3◂ [ a23◂ [ ]] ) 4'(= a17◂ [ a9◂ [ ]{| l |}] ) } 3'(= a2◂ [ *{ {| l |}a8◂ [ a13◂ [ {| l |}]]a3◂ [ a23◂ [ ]]a17◂ [ a9◂ [ ]{| l |}]}] ) }
;; rsp=4 , %2437~0(<2)◂0(<2)◂{ { 9'(= {| l |} ) 10'(= a8◂ [ a13◂ [ {| l |}]] ) 11'(= a3◂ [ a23◂ [ ]] ) 4'(= a17◂ [ a9◂ [ ]{| l |}] ) } 3'(= a2◂ [ *{ {| l |}a8◂ [ a13◂ [ {| l |}]]a3◂ [ a23◂ [ ]]a17◂ [ a9◂ [ ]{| l |}]}] ) } %2431~1'(= r ) %2430~0'(= r ) %2424~8'(= a35◂ [ *{ }] ) 
; #24 0(<2)◂0(<2)◂{ { 9'(= {| l |} ) 10'(= a8◂ [ a13◂ [ {| l |}]] ) 11'(= a3◂ [ a23◂ [ ]] ) 4'(= a17◂ [ a9◂ [ ]{| l |}] ) } 3'(= a2◂ [ *{ {| l |}a8◂ [ a13◂ [ {| l |}]]a3◂ [ a23◂ [ ]]a17◂ [ a9◂ [ ]{| l |}]}] ) } ⊢ 0(<2)◂0(<2)◂0(<2)◂{ { 9'(= {| l |} ) 10'(= a8◂ [ a13◂ [ {| l |}]] ) 11'(= a3◂ [ a23◂ [ ]] ) 4'(= a17◂ [ a9◂ [ ]{| l |}] ) } 3'(= a2◂ [ *{ {| l |}a8◂ [ a13◂ [ {| l |}]]a3◂ [ a23◂ [ ]]a17◂ [ a9◂ [ ]{| l |}]}] ) }
;; rsp=4 , %2438~0(<2)◂0(<2)◂0(<2)◂{ { 9'(= {| l |} ) 10'(= a8◂ [ a13◂ [ {| l |}]] ) 11'(= a3◂ [ a23◂ [ ]] ) 4'(= a17◂ [ a9◂ [ ]{| l |}] ) } 3'(= a2◂ [ *{ {| l |}a8◂ [ a13◂ [ {| l |}]]a3◂ [ a23◂ [ ]]a17◂ [ a9◂ [ ]{| l |}]}] ) } %2431~1'(= r ) %2430~0'(= r ) %2424~8'(= a35◂ [ *{ }] ) 
; ∎ 0(<2)◂0(<2)◂0(<2)◂{ { 9'(= {| l |} ) 10'(= a8◂ [ a13◂ [ {| l |}]] ) 11'(= a3◂ [ a23◂ [ ]] ) 4'(= a17◂ [ a9◂ [ ]{| l |}] ) } 3'(= a2◂ [ *{ {| l |}a8◂ [ a13◂ [ {| l |}]]a3◂ [ a23◂ [ ]]a17◂ [ a9◂ [ ]{| l |}]}] ) }
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 8'(= a35◂ [ *{ }] )
	mov rdi,QWORD [rsp-8+8*4]
	C_PUSH_REGS
	mov r8,rdi
	call LB_1701
	C_POP_REGS
; .mov_ptn2 0(<2)◂0(<2)◂0(<2)◂{ { 9'(= {| l |} ) 10'(= a8◂ [ a13◂ [ {| l |}]] ) 11'(= a3◂ [ a23◂ [ ]] ) 4'(= a17◂ [ a9◂ [ ]{| l |}] ) } 3'(= a2◂ [ *{ {| l |}a8◂ [ a13◂ [ {| l |}]]a3◂ [ a23◂ [ ]]a17◂ [ a9◂ [ ]{| l |}]}] ) } ⊢ 2'(= a3◂ [ a35◂ [ a2◂ [ *{ {| l |}a8◂ [ a13◂ [ {| l |}]]a3◂ [ a23◂ [ ]]a17◂ [ a9◂ [ ]{| l |}]}]]] )
; .mov_ptn 0(<2)◂0(<2)◂0(<2)◂{ { 9'(= {| l |} ) 10'(= a8◂ [ a13◂ [ {| l |}]] ) 11'(= a3◂ [ a23◂ [ ]] ) 4'(= a17◂ [ a9◂ [ ]{| l |}] ) } 3'(= a2◂ [ *{ {| l |}a8◂ [ a13◂ [ {| l |}]]a3◂ [ a23◂ [ ]]a17◂ [ a9◂ [ ]{| l |}]}] ) } ⊢ 2'(= a3◂ [ a35◂ [ a2◂ [ *{ {| l |}a8◂ [ a13◂ [ {| l |}]]a3◂ [ a23◂ [ ]]a17◂ [ a9◂ [ ]{| l |}]}]]] )
	ALC_RCD 2, rax
	mov r13,rax
	ALC_RCD 4, rax
	mov r14,rax
	mov rax,QWORD [rsp-8+8*3]
	mov QWORD [r14+8+8*0],rax
	mov rax,QWORD [rsp-8+8*2]
	mov QWORD [r14+8+8*1],rax
	mov rax,QWORD [rsp-8+8*1]
	mov QWORD [r14+8+8*2],rax
	mov rax,r10
	mov QWORD [r14+8+8*3],rax
	mov rax,r14
	mov QWORD [r13+8+8*0],rax
	mov rax,r9
	mov QWORD [r13+8+8*1],rax
	mov rax,r13
	mov BYTE [rax+6],0
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,32
	jmp LB_4486
LB_4491:
;; ?. 2'(= a35◂ [ *{ a2◂ [ *{ {| l |}a8◂ [ a13◂ [ {| l |}]]a3◂ [ a23◂ [ ]]a17◂ [ a9◂ [ ]{| l |}]}]a17◂ [ a9◂ [ ]{| l |}]}] ) ⊢ 1(<2)◂3'(= a2◂ [ *{ rr{| l |}}] )
	mov QWORD [GBG_VCT+8*0],rdi
	mov r9,QWORD [rdi+8]
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_LN rdi
;; rsp=4 , %2433~3'(= a2◂ [ *{ rr{| l |}}] ) %2431~1'(= r ) %2430~0'(= r ) %2427~11'(= a3◂ [ a23◂ [ ]] ) %2426~10'(= a8◂ [ a13◂ [ {| l |}]] ) %2425~9'(= {| l |} ) %2424~8'(= a35◂ [ *{ }] ) 
; #194 3'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 1(<2)◂3'(= a2◂ [ *{ rr{| l |}}] )
;; rsp=4 , %2439~1(<2)◂3'(= a2◂ [ *{ rr{| l |}}] ) %2431~1'(= r ) %2430~0'(= r ) %2427~11'(= a3◂ [ a23◂ [ ]] ) %2426~10'(= a8◂ [ a13◂ [ {| l |}]] ) %2425~9'(= {| l |} ) %2424~8'(= a35◂ [ *{ }] ) 
; #24 1(<2)◂3'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 0(<2)◂1(<2)◂3'(= a2◂ [ *{ rr{| l |}}] )
;; rsp=4 , %2440~0(<2)◂1(<2)◂3'(= a2◂ [ *{ rr{| l |}}] ) %2431~1'(= r ) %2430~0'(= r ) %2427~11'(= a3◂ [ a23◂ [ ]] ) %2426~10'(= a8◂ [ a13◂ [ {| l |}]] ) %2425~9'(= {| l |} ) %2424~8'(= a35◂ [ *{ }] ) 
; ∎ 0(<2)◂1(<2)◂3'(= a2◂ [ *{ rr{| l |}}] )
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 11'(= a3◂ [ a23◂ [ ]] )
	mov rdi,QWORD [rsp-8+8*1]
	C_PUSH_REGS
	mov r8,rdi
	call LB_834
	C_POP_REGS
; .dlt.ptn 10'(= a8◂ [ a13◂ [ {| l |}]] )
	mov rdi,QWORD [rsp-8+8*2]
	C_PUSH_REGS
	mov r8,rdi
	call LB_668
	C_POP_REGS
; .dlt.ptn 9'(= {| l |} )
	mov rdi,QWORD [rsp-8+8*3]
	C_PUSH_REGS
	mov r8,rdi
	mov rdi,r8
	call free_s8
	C_POP_REGS
; .dlt.ptn 8'(= a35◂ [ *{ }] )
	mov rdi,QWORD [rsp-8+8*4]
	C_PUSH_REGS
	mov r8,rdi
	call LB_1701
	C_POP_REGS
; .mov_ptn2 0(<2)◂1(<2)◂3'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 2'(= a3◂ [ a35◂ [ a2◂ [ *{ {| l |}a8◂ [ a13◂ [ {| l |}]]a3◂ [ a23◂ [ ]]a17◂ [ a9◂ [ ]{| l |}]}]]] )
; .mov_ptn 0(<2)◂1(<2)◂3'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 2'(= a3◂ [ a35◂ [ a2◂ [ *{ {| l |}a8◂ [ a13◂ [ {| l |}]]a3◂ [ a23◂ [ ]]a17◂ [ a9◂ [ ]{| l |}]}]]] )
	mov rax,r9
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],1
	mov QWORD [rax+8],rdi
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,32
	jmp LB_4486
LB_4486:
	cmp BYTE [r8+6],0
	jnz LB_4415
	POP_GRM_SCC
	ret
LB_4415:
	RB_GRM
	mov QWORD [rsp+8*0],r14
	mov r13,QWORD [rsp+16+8*0]
	mov r14,QWORD [rsp+8*0]
	jmp LB_4493
LB_4493
;; rsp=0 , %2442~1'(= r ) %2441~0'(= r ) 
; #22 { } ⊢ 1(<2)◂{ }
;; rsp=0 , %2443~1(<2)◂{ } %2442~1'(= r ) %2441~0'(= r ) 
; #195 1(<2)◂{ } ⊢ 0(<2)◂1(<2)◂{ }
;; rsp=0 , %2444~0(<2)◂1(<2)◂{ } %2442~1'(= r ) %2441~0'(= r ) 
; #24 0(<2)◂1(<2)◂{ } ⊢ 0(<2)◂0(<2)◂1(<2)◂{ }
;; rsp=0 , %2445~0(<2)◂0(<2)◂1(<2)◂{ } %2442~1'(= r ) %2441~0'(= r ) 
; ∎ 0(<2)◂0(<2)◂1(<2)◂{ }
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂0(<2)◂1(<2)◂{ } ⊢ 2'(= a3◂ [ a35◂ [ a2◂ [ *{ {| l |}a8◂ [ a13◂ [ {| l |}]]a3◂ [ a23◂ [ ]]a17◂ [ a9◂ [ ]{| l |}]}]]] )
; .mov_ptn 0(<2)◂0(<2)◂1(<2)◂{ } ⊢ 2'(= a3◂ [ a35◂ [ a2◂ [ *{ {| l |}a8◂ [ a13◂ [ {| l |}]]a3◂ [ a23◂ [ ]]a17◂ [ a9◂ [ ]{| l |}]}]]] )
	mov rax,unt 
	mov rax,unt_1
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	jmp LB_4494
LB_4494:
	cmp BYTE [r8+6],0
	jnz LB_4492
	POP_GRM_SCC
	ret
LB_4492:
	POP_GRM_FAIL 
	ret
ETR_259:
	mov r9,0x0000_ffff_ffff_ffff
	and r9,[r13]
	call GRM_259
	ret
GRM_259:
	PUSH_GRM
	jmp LB_4497
LB_4496:
	add r14,1 
LB_4497:
	cmp r14,r9
	jge LB_4498
	JZ_LINE_SPC BYTE [r13+8+r14], LB_4496
LB_4498
	lea rax,[r14+1]
	cmp rax,r9
	jg LB_4501
	jmp LB_4502
LB_4501:
	mov r8,unt_1
	jmp LB_4499
LB_4502:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],58
	jnz LB_4503
	jmp LB_4504
LB_4503:
	mov r8,unt_1
	jmp LB_4499
LB_4504:
	add r14,1
	jmp LB_4500
LB_4499:
	add rsp,0
	jmp LB_4495
LB_4500:
	jmp LB_4506
LB_4505:
	add r14,1 
LB_4506:
	cmp r14,r9
	jge LB_4507
	JZ_LINE_SPC BYTE [r13+8+r14], LB_4505
LB_4507
	call GRM_212
	cmp BYTE [r8+6],0
	jnz LB_4510
	jmp LB_4511
LB_4510:
	jmp LB_4508
LB_4511:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a23◂ [ ] ) ⊢ 8'(= a23◂ [ ] )
; .mov_ptn 2'(= a23◂ [ ] ) ⊢ 8'(= a23◂ [ ] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_4509
LB_4508:
	add rsp,0
	POP_GRM_FAIL
	ret
LB_4509:
	mov QWORD [rsp+8*1],r14
	mov r13,QWORD [rsp+16+8*1]
	mov r14,QWORD [rsp+8*1]
	jmp LB_4512
LB_4512
;; rsp=1 , %2448~1'(= r ) %2447~0'(= r ) %2446~8'(= a23◂ [ ] ) 
; #24 8'(= a23◂ [ ] ) ⊢ 0(<2)◂8'(= a23◂ [ ] )
;; rsp=1 , %2449~0(<2)◂8'(= a23◂ [ ] ) %2448~1'(= r ) %2447~0'(= r ) 
; #24 0(<2)◂8'(= a23◂ [ ] ) ⊢ 0(<2)◂0(<2)◂8'(= a23◂ [ ] )
;; rsp=1 , %2450~0(<2)◂0(<2)◂8'(= a23◂ [ ] ) %2448~1'(= r ) %2447~0'(= r ) 
; ∎ 0(<2)◂0(<2)◂8'(= a23◂ [ ] )
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂0(<2)◂8'(= a23◂ [ ] ) ⊢ 2'(= a3◂ [ a3◂ [ a23◂ [ ]]] )
; .mov_ptn 0(<2)◂0(<2)◂8'(= a23◂ [ ] ) ⊢ 2'(= a3◂ [ a3◂ [ a23◂ [ ]]] )
	mov rax,QWORD [rsp-8+8*1]
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,8
	jmp LB_4513
LB_4513:
	cmp BYTE [r8+6],0
	jnz LB_4495
	POP_GRM_SCC
	ret
LB_4495:
	RB_GRM
	mov QWORD [rsp+8*0],r14
	mov r13,QWORD [rsp+16+8*0]
	mov r14,QWORD [rsp+8*0]
	jmp LB_4515
LB_4515
;; rsp=0 , %2452~1'(= r ) %2451~0'(= r ) 
; #25 { } ⊢ 1(<2)◂{ }
;; rsp=0 , %2453~1(<2)◂{ } %2452~1'(= r ) %2451~0'(= r ) 
; #24 1(<2)◂{ } ⊢ 0(<2)◂1(<2)◂{ }
;; rsp=0 , %2454~0(<2)◂1(<2)◂{ } %2452~1'(= r ) %2451~0'(= r ) 
; ∎ 0(<2)◂1(<2)◂{ }
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂1(<2)◂{ } ⊢ 2'(= a3◂ [ a3◂ [ a23◂ [ ]]] )
; .mov_ptn 0(<2)◂1(<2)◂{ } ⊢ 2'(= a3◂ [ a3◂ [ a23◂ [ ]]] )
	mov rax,unt 
	mov rax,unt_1
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	jmp LB_4516
LB_4516:
	cmp BYTE [r8+6],0
	jnz LB_4514
	POP_GRM_SCC
	ret
LB_4514:
	POP_GRM_FAIL 
	ret
ETR_260:
	mov r9,0x0000_ffff_ffff_ffff
	and r9,[r13]
	call GRM_260
	ret
GRM_260:
	PUSH_GRM
	jmp LB_4519
LB_4518:
	add r14,1 
LB_4519:
	cmp r14,r9
	jge LB_4520
	JZ_LINE_SPC BYTE [r13+8+r14], LB_4518
LB_4520
	lea rax,[r14+1]
	cmp rax,r9
	jg LB_4523
	jmp LB_4524
LB_4523:
	mov r8,unt_1
	jmp LB_4521
LB_4524:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],61
	jnz LB_4525
	jmp LB_4526
LB_4525:
	mov r8,unt_1
	jmp LB_4521
LB_4526:
	add r14,1
	jmp LB_4522
LB_4521:
	add rsp,0
	jmp LB_4517
LB_4522:
	jmp LB_4528
LB_4527:
	add r14,1 
LB_4528:
	cmp r14,r9
	jge LB_4529
	JZ_LINE_SPC BYTE [r13+8+r14], LB_4527
LB_4529
	call GRM_192
	cmp BYTE [r8+6],0
	jnz LB_4532
	jmp LB_4533
LB_4532:
	jmp LB_4530
LB_4533:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a11◂ [ a9◂ [ ]] ) ⊢ 8'(= a11◂ [ a9◂ [ ]] )
; .mov_ptn 2'(= a11◂ [ a9◂ [ ]] ) ⊢ 8'(= a11◂ [ a9◂ [ ]] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_4531
LB_4530:
	add rsp,0
	POP_GRM_FAIL
	ret
LB_4531:
	jmp LB_4535
LB_4534:
	add r14,1 
LB_4535:
	cmp r14,r9
	jge LB_4536
	JZ_LINE_SPC BYTE [r13+8+r14], LB_4534
LB_4536
	lea rax,[r14+1]
	cmp rax,r9
	jg LB_4539
	jmp LB_4540
LB_4539:
	mov r8,unt_1
	jmp LB_4537
LB_4540:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],10
	jnz LB_4541
	jmp LB_4542
LB_4541:
	mov r8,unt_1
	jmp LB_4537
LB_4542:
	add r14,1
	jmp LB_4538
LB_4537:
	add rsp,8
	POP_GRM_FAIL
	ret
LB_4538:
	mov QWORD [rsp+8*1],r14
	mov r13,QWORD [rsp+16+8*1]
	mov r14,QWORD [rsp+8*1]
	jmp LB_4543
LB_4543
;; rsp=1 , %2457~1'(= r ) %2456~0'(= r ) %2455~8'(= a11◂ [ a9◂ [ ]] ) 
; #169 8'(= a11◂ [ a9◂ [ ]] ) ⊢ 1(<3)◂8'(= a11◂ [ a9◂ [ ]] )
;; rsp=1 , %2458~1(<3)◂8'(= a11◂ [ a9◂ [ ]] ) %2457~1'(= r ) %2456~0'(= r ) 
; #195 1(<3)◂8'(= a11◂ [ a9◂ [ ]] ) ⊢ 0(<2)◂1(<3)◂8'(= a11◂ [ a9◂ [ ]] )
;; rsp=1 , %2459~0(<2)◂1(<3)◂8'(= a11◂ [ a9◂ [ ]] ) %2457~1'(= r ) %2456~0'(= r ) 
; #24 0(<2)◂1(<3)◂8'(= a11◂ [ a9◂ [ ]] ) ⊢ 0(<2)◂0(<2)◂1(<3)◂8'(= a11◂ [ a9◂ [ ]] )
;; rsp=1 , %2460~0(<2)◂0(<2)◂1(<3)◂8'(= a11◂ [ a9◂ [ ]] ) %2457~1'(= r ) %2456~0'(= r ) 
; ∎ 0(<2)◂0(<2)◂1(<3)◂8'(= a11◂ [ a9◂ [ ]] )
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂0(<2)◂1(<3)◂8'(= a11◂ [ a9◂ [ ]] ) ⊢ 2'(= a3◂ [ a35◂ [ a33◂ [ ]]] )
; .mov_ptn 0(<2)◂0(<2)◂1(<3)◂8'(= a11◂ [ a9◂ [ ]] ) ⊢ 2'(= a3◂ [ a35◂ [ a33◂ [ ]]] )
	mov rax,QWORD [rsp-8+8*1]
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],1
	mov QWORD [rax+8],rdi
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,8
	jmp LB_4544
LB_4544:
	cmp BYTE [r8+6],0
	jnz LB_4517
	POP_GRM_SCC
	ret
LB_4517:
	RB_GRM
	jmp LB_4547
LB_4546:
	add r14,1 
LB_4547:
	cmp r14,r9
	jge LB_4548
	JZ_LINE_SPC BYTE [r13+8+r14], LB_4546
LB_4548
	lea rax,[r14+2]
	cmp rax,r9
	jg LB_4551
	jmp LB_4552
LB_4551:
	mov r8,unt_1
	jmp LB_4549
LB_4552:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],194
	jnz LB_4553
	cmp BYTE [rdi+1],171
	jnz LB_4553
	jmp LB_4554
LB_4553:
	mov r8,unt_1
	jmp LB_4549
LB_4554:
	add r14,2
	jmp LB_4550
LB_4549:
	add rsp,0
	jmp LB_4545
LB_4550:
	jmp LB_4556
LB_4555:
	add r14,1 
LB_4556:
	cmp r14,r9
	jge LB_4557
	JZ_LINE_SPC BYTE [r13+8+r14], LB_4555
LB_4557
	lea rax,[r14+1]
	cmp rax,r9
	jg LB_4560
	jmp LB_4561
LB_4560:
	mov r8,unt_1
	jmp LB_4558
LB_4561:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],10
	jnz LB_4562
	jmp LB_4563
LB_4562:
	mov r8,unt_1
	jmp LB_4558
LB_4563:
	add r14,1
	jmp LB_4559
LB_4558:
	add rsp,0
	POP_GRM_FAIL
	ret
LB_4559:
	jmp LB_4565
LB_4564:
	add r14,1 
LB_4565:
	cmp r14,r9
	jge LB_4566
	JZ_LINE_SPC BYTE [r13+8+r14], LB_4564
LB_4566
	call GRM_236
	cmp BYTE [r8+6],0
	jnz LB_4569
	jmp LB_4570
LB_4569:
	jmp LB_4567
LB_4570:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a35◂ [ a17◂ [ a9◂ [ ]{| l |}]] ) ⊢ 8'(= a35◂ [ a17◂ [ a9◂ [ ]{| l |}]] )
; .mov_ptn 2'(= a35◂ [ a17◂ [ a9◂ [ ]{| l |}]] ) ⊢ 8'(= a35◂ [ a17◂ [ a9◂ [ ]{| l |}]] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_4568
LB_4567:
	add rsp,0
	POP_GRM_FAIL
	ret
LB_4568:
	mov QWORD [rsp+8*1],r14
	mov r13,QWORD [rsp+16+8*1]
	mov r14,QWORD [rsp+8*1]
	jmp LB_4571
LB_4571
;; rsp=1 , %2463~1'(= r ) %2462~0'(= r ) %2461~8'(= a35◂ [ a17◂ [ a9◂ [ ]{| l |}]] ) 
;; ? 8'(= a35◂ [ a17◂ [ a9◂ [ ]{| l |}]] ) ⊢ 0(<2)◂2'(= a17◂ [ a9◂ [ ]{| l |}] )
	mov rdi,QWORD [rsp-8+8*1]
	cmp BYTE [rdi+6],0
	jnz LB_4573
	mov QWORD [GBG_VCT+8*0],rdi
	mov r8,QWORD [rdi+8]
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_LN rdi
;; rsp=1 , %2465~2'(= a17◂ [ a9◂ [ ]{| l |}] ) %2463~1'(= r ) %2462~0'(= r ) 
; #168 2'(= a17◂ [ a9◂ [ ]{| l |}] ) ⊢ 2(<3)◂2'(= a17◂ [ a9◂ [ ]{| l |}] )
;; rsp=1 , %2466~2(<3)◂2'(= a17◂ [ a9◂ [ ]{| l |}] ) %2463~1'(= r ) %2462~0'(= r ) 
; #195 2(<3)◂2'(= a17◂ [ a9◂ [ ]{| l |}] ) ⊢ 0(<2)◂2(<3)◂2'(= a17◂ [ a9◂ [ ]{| l |}] )
;; rsp=1 , %2467~0(<2)◂2(<3)◂2'(= a17◂ [ a9◂ [ ]{| l |}] ) %2463~1'(= r ) %2462~0'(= r ) 
; #24 0(<2)◂2(<3)◂2'(= a17◂ [ a9◂ [ ]{| l |}] ) ⊢ 0(<2)◂0(<2)◂2(<3)◂2'(= a17◂ [ a9◂ [ ]{| l |}] )
;; rsp=1 , %2468~0(<2)◂0(<2)◂2(<3)◂2'(= a17◂ [ a9◂ [ ]{| l |}] ) %2463~1'(= r ) %2462~0'(= r ) 
; ∎ 0(<2)◂0(<2)◂2(<3)◂2'(= a17◂ [ a9◂ [ ]{| l |}] )
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂0(<2)◂2(<3)◂2'(= a17◂ [ a9◂ [ ]{| l |}] ) ⊢ 2'(= a3◂ [ a35◂ [ a33◂ [ ]]] )
	mov r13,r8
; .mov_ptn 0(<2)◂0(<2)◂2(<3)◂0'(= a17◂ [ a9◂ [ ]{| l |}] ) ⊢ 2'(= a3◂ [ a35◂ [ a33◂ [ ]]] )
	mov rax,r13
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],2
	mov QWORD [rax+8],rdi
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,8
	jmp LB_4572
LB_4573:
;; ?. 8'(= a35◂ [ a17◂ [ a9◂ [ ]{| l |}]] ) ⊢ 1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] )
	mov QWORD [GBG_VCT+8*0],rdi
	mov r8,QWORD [rdi+8]
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_LN rdi
;; rsp=1 , %2464~2'(= a2◂ [ *{ rr{| l |}}] ) %2463~1'(= r ) %2462~0'(= r ) 
; #194 2'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] )
;; rsp=1 , %2469~1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] ) %2463~1'(= r ) %2462~0'(= r ) 
; #24 1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 0(<2)◂1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] )
;; rsp=1 , %2470~0(<2)◂1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] ) %2463~1'(= r ) %2462~0'(= r ) 
; ∎ 0(<2)◂1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] )
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 2'(= a3◂ [ a35◂ [ a33◂ [ ]]] )
	mov r13,r8
; .mov_ptn 0(<2)◂1(<2)◂0'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 2'(= a3◂ [ a35◂ [ a33◂ [ ]]] )
	mov rax,r13
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],1
	mov QWORD [rax+8],rdi
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,8
	jmp LB_4572
LB_4572:
	cmp BYTE [r8+6],0
	jnz LB_4545
	POP_GRM_SCC
	ret
LB_4545:
	RB_GRM
	jmp LB_4576
LB_4575:
	add r14,1 
LB_4576:
	cmp r14,r9
	jge LB_4577
	JZ_LINE_SPC BYTE [r13+8+r14], LB_4575
LB_4577
	call GRM_207
	cmp BYTE [r8+6],0
	jnz LB_4580
	jmp LB_4581
LB_4580:
	jmp LB_4578
LB_4581:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a8◂ [ a13◂ [ {| l |}]] ) ⊢ 8'(= a8◂ [ a13◂ [ {| l |}]] )
; .mov_ptn 2'(= a8◂ [ a13◂ [ {| l |}]] ) ⊢ 8'(= a8◂ [ a13◂ [ {| l |}]] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_4579
LB_4578:
	add rsp,0
	jmp LB_4574
LB_4579:
	jmp LB_4583
LB_4582:
	add r14,1 
LB_4583:
	cmp r14,r9
	jge LB_4584
	JZ_LINE_SPC BYTE [r13+8+r14], LB_4582
LB_4584
	call GRM_259
	cmp BYTE [r8+6],0
	jnz LB_4587
	jmp LB_4588
LB_4587:
	jmp LB_4585
LB_4588:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a3◂ [ a23◂ [ ]] ) ⊢ 9'(= a3◂ [ a23◂ [ ]] )
; .mov_ptn 2'(= a3◂ [ a23◂ [ ]] ) ⊢ 9'(= a3◂ [ a23◂ [ ]] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_4586
LB_4585:
	add rsp,8
	jmp LB_4574
LB_4586:
	jmp LB_4590
LB_4589:
	add r14,1 
LB_4590:
	cmp r14,r9
	jge LB_4591
	JZ_LINE_SPC BYTE [r13+8+r14], LB_4589
LB_4591
	lea rax,[r14+1]
	cmp rax,r9
	jg LB_4594
	jmp LB_4595
LB_4594:
	mov r8,unt_1
	jmp LB_4592
LB_4595:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],10
	jnz LB_4596
	jmp LB_4597
LB_4596:
	mov r8,unt_1
	jmp LB_4592
LB_4597:
	add r14,1
	jmp LB_4593
LB_4592:
	add rsp,16
	jmp LB_4574
LB_4593:
	jmp LB_4599
LB_4598:
	add r14,1 
LB_4599:
	cmp r14,r9
	jge LB_4600
	JZ_LINE_SPC BYTE [r13+8+r14], LB_4598
LB_4600
	call GRM_236
	cmp BYTE [r8+6],0
	jnz LB_4603
	jmp LB_4604
LB_4603:
	jmp LB_4601
LB_4604:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a35◂ [ a17◂ [ a9◂ [ ]{| l |}]] ) ⊢ 10'(= a35◂ [ a17◂ [ a9◂ [ ]{| l |}]] )
; .mov_ptn 2'(= a35◂ [ a17◂ [ a9◂ [ ]{| l |}]] ) ⊢ 10'(= a35◂ [ a17◂ [ a9◂ [ ]{| l |}]] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_4602
LB_4601:
	add rsp,16
	jmp LB_4574
LB_4602:
	mov QWORD [rsp+8*3],r14
	mov r13,QWORD [rsp+16+8*3]
	mov r14,QWORD [rsp+8*3]
	jmp LB_4605
LB_4605
;; rsp=3 , %2475~1'(= r ) %2474~0'(= r ) %2473~10'(= a35◂ [ a17◂ [ a9◂ [ ]{| l |}]] ) %2472~9'(= a3◂ [ a23◂ [ ]] ) %2471~8'(= a8◂ [ a13◂ [ {| l |}]] ) 
;; ? 10'(= a35◂ [ a17◂ [ a9◂ [ ]{| l |}]] ) ⊢ 0(<2)◂2'(= a17◂ [ a9◂ [ ]{| l |}] )
	mov rdi,QWORD [rsp-8+8*1]
	cmp BYTE [rdi+6],0
	jnz LB_4607
	mov QWORD [GBG_VCT+8*0],rdi
	mov r8,QWORD [rdi+8]
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_LN rdi
;; rsp=3 , %2477~2'(= a17◂ [ a9◂ [ ]{| l |}] ) %2475~1'(= r ) %2474~0'(= r ) %2472~9'(= a3◂ [ a23◂ [ ]] ) %2471~8'(= a8◂ [ a13◂ [ {| l |}]] ) 
; #170 { 8'(= a8◂ [ a13◂ [ {| l |}]] ) 9'(= a3◂ [ a23◂ [ ]] ) 2'(= a17◂ [ a9◂ [ ]{| l |}] ) } ⊢ 0(<3)◂{ 8'(= a8◂ [ a13◂ [ {| l |}]] ) 9'(= a3◂ [ a23◂ [ ]] ) 2'(= a17◂ [ a9◂ [ ]{| l |}] ) }
;; rsp=3 , %2478~0(<3)◂{ 8'(= a8◂ [ a13◂ [ {| l |}]] ) 9'(= a3◂ [ a23◂ [ ]] ) 2'(= a17◂ [ a9◂ [ ]{| l |}] ) } %2475~1'(= r ) %2474~0'(= r ) 
; #195 0(<3)◂{ 8'(= a8◂ [ a13◂ [ {| l |}]] ) 9'(= a3◂ [ a23◂ [ ]] ) 2'(= a17◂ [ a9◂ [ ]{| l |}] ) } ⊢ 0(<2)◂0(<3)◂{ 8'(= a8◂ [ a13◂ [ {| l |}]] ) 9'(= a3◂ [ a23◂ [ ]] ) 2'(= a17◂ [ a9◂ [ ]{| l |}] ) }
;; rsp=3 , %2479~0(<2)◂0(<3)◂{ 8'(= a8◂ [ a13◂ [ {| l |}]] ) 9'(= a3◂ [ a23◂ [ ]] ) 2'(= a17◂ [ a9◂ [ ]{| l |}] ) } %2475~1'(= r ) %2474~0'(= r ) 
; #24 0(<2)◂0(<3)◂{ 8'(= a8◂ [ a13◂ [ {| l |}]] ) 9'(= a3◂ [ a23◂ [ ]] ) 2'(= a17◂ [ a9◂ [ ]{| l |}] ) } ⊢ 0(<2)◂0(<2)◂0(<3)◂{ 8'(= a8◂ [ a13◂ [ {| l |}]] ) 9'(= a3◂ [ a23◂ [ ]] ) 2'(= a17◂ [ a9◂ [ ]{| l |}] ) }
;; rsp=3 , %2480~0(<2)◂0(<2)◂0(<3)◂{ 8'(= a8◂ [ a13◂ [ {| l |}]] ) 9'(= a3◂ [ a23◂ [ ]] ) 2'(= a17◂ [ a9◂ [ ]{| l |}] ) } %2475~1'(= r ) %2474~0'(= r ) 
; ∎ 0(<2)◂0(<2)◂0(<3)◂{ 8'(= a8◂ [ a13◂ [ {| l |}]] ) 9'(= a3◂ [ a23◂ [ ]] ) 2'(= a17◂ [ a9◂ [ ]{| l |}] ) }
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂0(<2)◂0(<3)◂{ 8'(= a8◂ [ a13◂ [ {| l |}]] ) 9'(= a3◂ [ a23◂ [ ]] ) 2'(= a17◂ [ a9◂ [ ]{| l |}] ) } ⊢ 2'(= a3◂ [ a35◂ [ a33◂ [ ]]] )
	mov r13,r8
; .mov_ptn 0(<2)◂0(<2)◂0(<3)◂{ 8'(= a8◂ [ a13◂ [ {| l |}]] ) 9'(= a3◂ [ a23◂ [ ]] ) 0'(= a17◂ [ a9◂ [ ]{| l |}] ) } ⊢ 2'(= a3◂ [ a35◂ [ a33◂ [ ]]] )
	ALC_RCD 3, rax
	mov r14,rax
	mov rax,QWORD [rsp-8+8*3]
	mov QWORD [r14+8+8*0],rax
	mov rax,QWORD [rsp-8+8*2]
	mov QWORD [r14+8+8*1],rax
	mov rax,r13
	mov QWORD [r14+8+8*2],rax
	mov rax,r14
	mov BYTE [rax+6],0
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,24
	jmp LB_4606
LB_4607:
;; ?. 10'(= a35◂ [ a17◂ [ a9◂ [ ]{| l |}]] ) ⊢ 1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] )
	mov QWORD [GBG_VCT+8*0],rdi
	mov r8,QWORD [rdi+8]
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_LN rdi
;; rsp=3 , %2476~2'(= a2◂ [ *{ rr{| l |}}] ) %2475~1'(= r ) %2474~0'(= r ) %2472~9'(= a3◂ [ a23◂ [ ]] ) %2471~8'(= a8◂ [ a13◂ [ {| l |}]] ) 
; #194 2'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] )
;; rsp=3 , %2481~1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] ) %2475~1'(= r ) %2474~0'(= r ) %2472~9'(= a3◂ [ a23◂ [ ]] ) %2471~8'(= a8◂ [ a13◂ [ {| l |}]] ) 
; #24 1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 0(<2)◂1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] )
;; rsp=3 , %2482~0(<2)◂1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] ) %2475~1'(= r ) %2474~0'(= r ) %2472~9'(= a3◂ [ a23◂ [ ]] ) %2471~8'(= a8◂ [ a13◂ [ {| l |}]] ) 
; ∎ 0(<2)◂1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] )
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 9'(= a3◂ [ a23◂ [ ]] )
	mov rdi,QWORD [rsp-8+8*2]
	C_PUSH_REGS
	mov r8,rdi
	call LB_834
	C_POP_REGS
; .dlt.ptn 8'(= a8◂ [ a13◂ [ {| l |}]] )
	mov rdi,QWORD [rsp-8+8*3]
	C_PUSH_REGS
	mov r8,rdi
	call LB_668
	C_POP_REGS
; .mov_ptn2 0(<2)◂1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 2'(= a3◂ [ a35◂ [ a33◂ [ ]]] )
	mov r13,r8
; .mov_ptn 0(<2)◂1(<2)◂0'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 2'(= a3◂ [ a35◂ [ a33◂ [ ]]] )
	mov rax,r13
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],1
	mov QWORD [rax+8],rdi
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,24
	jmp LB_4606
LB_4606:
	cmp BYTE [r8+6],0
	jnz LB_4574
	POP_GRM_SCC
	ret
LB_4574:
	POP_GRM_FAIL 
	ret
ETR_261:
	mov r9,0x0000_ffff_ffff_ffff
	and r9,[r13]
	call GRM_261
	ret
GRM_261:
	PUSH_GRM
	jmp LB_4610
LB_4609:
	add r14,1 
LB_4610:
	cmp r14,r9
	jge LB_4611
	JZ_SPC BYTE [r13+8+r14], LB_4609
LB_4611
	lea rax,[r14+1]
	cmp rax,r9
	jg LB_4614
	jmp LB_4615
LB_4614:
	mov r8,unt_1
	jmp LB_4612
LB_4615:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],64
	jnz LB_4616
	jmp LB_4617
LB_4616:
	mov r8,unt_1
	jmp LB_4612
LB_4617:
	add r14,1
	jmp LB_4613
LB_4612:
	add rsp,0
	jmp LB_4608
LB_4613:
	jmp LB_4619
LB_4618:
	add r14,1 
LB_4619:
	cmp r14,r9
	jge LB_4620
	JZ_SPC BYTE [r13+8+r14], LB_4618
LB_4620
	lea rax,[r14+1]
	cmp rax,r9
	jg LB_4623
	jmp LB_4624
LB_4623:
	mov r8,unt_1
	jmp LB_4621
LB_4624:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],46
	jnz LB_4625
	jmp LB_4626
LB_4625:
	mov r8,unt_1
	jmp LB_4621
LB_4626:
	add r14,1
	jmp LB_4622
LB_4621:
	add rsp,0
	jmp LB_4608
LB_4622:
	jmp LB_4628
LB_4627:
	add r14,1 
LB_4628:
	cmp r14,r9
	jge LB_4629
	JZ_SPC BYTE [r13+8+r14], LB_4627
LB_4629
	call GRM_76
	cmp BYTE [r8+6],0
	jnz LB_4632
	jmp LB_4633
LB_4632:
	jmp LB_4630
LB_4633:
	sub rsp,8
; .mov_ptn2 2'(= {| l |} ) ⊢ 8'(= {| l |} )
; .mov_ptn 2'(= {| l |} ) ⊢ 8'(= {| l |} )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_4631
LB_4630:
	add rsp,0
	jmp LB_4608
LB_4631:
	jmp LB_4635
LB_4634:
	add r14,1 
LB_4635:
	cmp r14,r9
	jge LB_4636
	JZ_SPC BYTE [r13+8+r14], LB_4634
LB_4636
	call GRM_263
	cmp BYTE [r8+6],0
	jnz LB_4639
	jmp LB_4640
LB_4639:
	jmp LB_4637
LB_4640:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a24◂ [ a9◂ [ ]{| l |}] ) ⊢ 9'(= a24◂ [ a9◂ [ ]{| l |}] )
; .mov_ptn 2'(= a24◂ [ a9◂ [ ]{| l |}] ) ⊢ 9'(= a24◂ [ a9◂ [ ]{| l |}] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_4638
LB_4637:
	add rsp,8
	jmp LB_4608
LB_4638:
	mov QWORD [rsp+8*2],r14
	mov r13,QWORD [rsp+16+8*2]
	mov r14,QWORD [rsp+8*2]
	jmp LB_4641
LB_4641
;; rsp=2 , %2486~1'(= r ) %2485~0'(= r ) %2484~9'(= a24◂ [ a9◂ [ ]{| l |}] ) %2483~8'(= {| l |} ) 
; #24 { 8'(= {| l |} ) 9'(= a24◂ [ a9◂ [ ]{| l |}] ) } ⊢ 0(<2)◂{ 8'(= {| l |} ) 9'(= a24◂ [ a9◂ [ ]{| l |}] ) }
;; rsp=2 , %2487~0(<2)◂{ 8'(= {| l |} ) 9'(= a24◂ [ a9◂ [ ]{| l |}] ) } %2486~1'(= r ) %2485~0'(= r ) 
; ∎ 0(<2)◂{ 8'(= {| l |} ) 9'(= a24◂ [ a9◂ [ ]{| l |}] ) }
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂{ 8'(= {| l |} ) 9'(= a24◂ [ a9◂ [ ]{| l |}] ) } ⊢ 2'(= a3◂ [ *{ {| l |}a24◂ [ a9◂ [ ]{| l |}]}] )
; .mov_ptn 0(<2)◂{ 8'(= {| l |} ) 9'(= a24◂ [ a9◂ [ ]{| l |}] ) } ⊢ 2'(= a3◂ [ *{ {| l |}a24◂ [ a9◂ [ ]{| l |}]}] )
	ALC_RCD 2, rax
	mov r13,rax
	mov rax,QWORD [rsp-8+8*2]
	mov QWORD [r13+8+8*0],rax
	mov rax,QWORD [rsp-8+8*1]
	mov QWORD [r13+8+8*1],rax
	mov rax,r13
	mov BYTE [rax+6],0
	mov r8,rax
	add rsp,16
	jmp LB_4642
LB_4642:
	cmp BYTE [r8+6],0
	jnz LB_4608
	POP_GRM_SCC
	ret
LB_4608:
	POP_GRM_FAIL 
	ret
ETR_262:
	mov r9,0x0000_ffff_ffff_ffff
	and r9,[r13]
	call GRM_262
	ret
GRM_262:
	PUSH_GRM
	jmp LB_4645
LB_4644:
	add r14,1 
LB_4645:
	cmp r14,r9
	jge LB_4646
	JZ_SPC BYTE [r13+8+r14], LB_4644
LB_4646
	call GRM_261
	cmp BYTE [r8+6],0
	jnz LB_4649
	jmp LB_4650
LB_4649:
	jmp LB_4647
LB_4650:
	sub rsp,16
; .mov_ptn2 2'(= *{ {| l |}a24◂ [ a9◂ [ ]{| l |}]} ) ⊢ { 8'(= {| l |} ) 9'(= a24◂ [ a9◂ [ ]{| l |}] ) }
; .mov_ptn 2'(= *{ {| l |}a24◂ [ a9◂ [ ]{| l |}]} ) ⊢ { 8'(= {| l |} ) 9'(= a24◂ [ a9◂ [ ]{| l |}] ) }
	mov r10, QWORD [r8+8]
	mov QWORD [rsp-8+8*2],r10
	mov r11, QWORD [r8+16]
	mov QWORD [rsp-8+8*1],r11
	jmp LB_4648
LB_4647:
	add rsp,0
	jmp LB_4643
LB_4648:
	jmp LB_4652
LB_4651:
	add r14,1 
LB_4652:
	cmp r14,r9
	jge LB_4653
	JZ_SPC BYTE [r13+8+r14], LB_4651
LB_4653
	call GRM_262
	cmp BYTE [r8+6],0
	jnz LB_4656
	jmp LB_4657
LB_4656:
	jmp LB_4654
LB_4657:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a2◂ [ *{ {| l |}a24◂ [ a9◂ [ ]{| l |}]}] ) ⊢ 10'(= a2◂ [ *{ {| l |}a24◂ [ a9◂ [ ]{| l |}]}] )
; .mov_ptn 2'(= a2◂ [ *{ {| l |}a24◂ [ a9◂ [ ]{| l |}]}] ) ⊢ 10'(= a2◂ [ *{ {| l |}a24◂ [ a9◂ [ ]{| l |}]}] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_4655
LB_4654:
	add rsp,16
	jmp LB_4643
LB_4655:
	mov QWORD [rsp+8*3],r14
	mov r13,QWORD [rsp+16+8*3]
	mov r14,QWORD [rsp+8*3]
	jmp LB_4658
LB_4658
;; rsp=3 , %2491~1'(= r ) %2490~0'(= r ) %2489~10'(= a2◂ [ *{ {| l |}a24◂ [ a9◂ [ ]{| l |}]}] ) %2488~{ 8'(= {| l |} ) 9'(= a24◂ [ a9◂ [ ]{| l |}] ) } 
; #23 { { 8'(= {| l |} ) 9'(= a24◂ [ a9◂ [ ]{| l |}] ) } 10'(= a2◂ [ *{ {| l |}a24◂ [ a9◂ [ ]{| l |}]}] ) } ⊢ 0(<2)◂{ { 8'(= {| l |} ) 9'(= a24◂ [ a9◂ [ ]{| l |}] ) } 10'(= a2◂ [ *{ {| l |}a24◂ [ a9◂ [ ]{| l |}]}] ) }
;; rsp=3 , %2492~0(<2)◂{ { 8'(= {| l |} ) 9'(= a24◂ [ a9◂ [ ]{| l |}] ) } 10'(= a2◂ [ *{ {| l |}a24◂ [ a9◂ [ ]{| l |}]}] ) } %2491~1'(= r ) %2490~0'(= r ) 
; #24 0(<2)◂{ { 8'(= {| l |} ) 9'(= a24◂ [ a9◂ [ ]{| l |}] ) } 10'(= a2◂ [ *{ {| l |}a24◂ [ a9◂ [ ]{| l |}]}] ) } ⊢ 0(<2)◂0(<2)◂{ { 8'(= {| l |} ) 9'(= a24◂ [ a9◂ [ ]{| l |}] ) } 10'(= a2◂ [ *{ {| l |}a24◂ [ a9◂ [ ]{| l |}]}] ) }
;; rsp=3 , %2493~0(<2)◂0(<2)◂{ { 8'(= {| l |} ) 9'(= a24◂ [ a9◂ [ ]{| l |}] ) } 10'(= a2◂ [ *{ {| l |}a24◂ [ a9◂ [ ]{| l |}]}] ) } %2491~1'(= r ) %2490~0'(= r ) 
; ∎ 0(<2)◂0(<2)◂{ { 8'(= {| l |} ) 9'(= a24◂ [ a9◂ [ ]{| l |}] ) } 10'(= a2◂ [ *{ {| l |}a24◂ [ a9◂ [ ]{| l |}]}] ) }
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂0(<2)◂{ { 8'(= {| l |} ) 9'(= a24◂ [ a9◂ [ ]{| l |}] ) } 10'(= a2◂ [ *{ {| l |}a24◂ [ a9◂ [ ]{| l |}]}] ) } ⊢ 2'(= a3◂ [ a2◂ [ *{ {| l |}a24◂ [ a9◂ [ ]{| l |}]}]] )
; .mov_ptn 0(<2)◂0(<2)◂{ { 8'(= {| l |} ) 9'(= a24◂ [ a9◂ [ ]{| l |}] ) } 10'(= a2◂ [ *{ {| l |}a24◂ [ a9◂ [ ]{| l |}]}] ) } ⊢ 2'(= a3◂ [ a2◂ [ *{ {| l |}a24◂ [ a9◂ [ ]{| l |}]}]] )
	ALC_RCD 2, rax
	mov r13,rax
	ALC_RCD 2, rax
	mov r14,rax
	mov rax,QWORD [rsp-8+8*3]
	mov QWORD [r14+8+8*0],rax
	mov rax,QWORD [rsp-8+8*2]
	mov QWORD [r14+8+8*1],rax
	mov rax,r14
	mov QWORD [r13+8+8*0],rax
	mov rax,QWORD [rsp-8+8*1]
	mov QWORD [r13+8+8*1],rax
	mov rax,r13
	mov BYTE [rax+6],0
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,24
	jmp LB_4659
LB_4659:
	cmp BYTE [r8+6],0
	jnz LB_4643
	POP_GRM_SCC
	ret
LB_4643:
	RB_GRM
	mov QWORD [rsp+8*0],r14
	mov r13,QWORD [rsp+16+8*0]
	mov r14,QWORD [rsp+8*0]
	jmp LB_4661
LB_4661
;; rsp=0 , %2495~1'(= r ) %2494~0'(= r ) 
; #22 { } ⊢ 1(<2)◂{ }
;; rsp=0 , %2496~1(<2)◂{ } %2495~1'(= r ) %2494~0'(= r ) 
; #24 1(<2)◂{ } ⊢ 0(<2)◂1(<2)◂{ }
;; rsp=0 , %2497~0(<2)◂1(<2)◂{ } %2495~1'(= r ) %2494~0'(= r ) 
; ∎ 0(<2)◂1(<2)◂{ }
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂1(<2)◂{ } ⊢ 2'(= a3◂ [ a2◂ [ *{ {| l |}a24◂ [ a9◂ [ ]{| l |}]}]] )
; .mov_ptn 0(<2)◂1(<2)◂{ } ⊢ 2'(= a3◂ [ a2◂ [ *{ {| l |}a24◂ [ a9◂ [ ]{| l |}]}]] )
	mov rax,unt 
	mov rax,unt_1
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	jmp LB_4662
LB_4662:
	cmp BYTE [r8+6],0
	jnz LB_4660
	POP_GRM_SCC
	ret
LB_4660:
	POP_GRM_FAIL 
	ret
ETR_263:
	mov r9,0x0000_ffff_ffff_ffff
	and r9,[r13]
	call GRM_263
	ret
GRM_263:
	PUSH_GRM
	jmp LB_4665
LB_4664:
	add r14,1 
LB_4665:
	cmp r14,r9
	jge LB_4666
	JZ_SPC BYTE [r13+8+r14], LB_4664
LB_4666
	call GRM_264
	cmp BYTE [r8+6],0
	jnz LB_4669
	jmp LB_4670
LB_4669:
	jmp LB_4667
LB_4670:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a26◂ [ a9◂ [ ]{| l |}] ) ⊢ 8'(= a26◂ [ a9◂ [ ]{| l |}] )
; .mov_ptn 2'(= a26◂ [ a9◂ [ ]{| l |}] ) ⊢ 8'(= a26◂ [ a9◂ [ ]{| l |}] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_4668
LB_4667:
	add rsp,0
	jmp LB_4663
LB_4668:
	mov QWORD [rsp+8*1],r14
	mov r13,QWORD [rsp+16+8*1]
	mov r14,QWORD [rsp+8*1]
	jmp LB_4671
LB_4671
;; rsp=1 , %2500~1'(= r ) %2499~0'(= r ) %2498~8'(= a26◂ [ a9◂ [ ]{| l |}] ) 
; #157 8'(= a26◂ [ a9◂ [ ]{| l |}] ) ⊢ 1(<2)◂8'(= a26◂ [ a9◂ [ ]{| l |}] )
;; rsp=1 , %2501~1(<2)◂8'(= a26◂ [ a9◂ [ ]{| l |}] ) %2500~1'(= r ) %2499~0'(= r ) 
; #24 1(<2)◂8'(= a26◂ [ a9◂ [ ]{| l |}] ) ⊢ 0(<2)◂1(<2)◂8'(= a26◂ [ a9◂ [ ]{| l |}] )
;; rsp=1 , %2502~0(<2)◂1(<2)◂8'(= a26◂ [ a9◂ [ ]{| l |}] ) %2500~1'(= r ) %2499~0'(= r ) 
; ∎ 0(<2)◂1(<2)◂8'(= a26◂ [ a9◂ [ ]{| l |}] )
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂1(<2)◂8'(= a26◂ [ a9◂ [ ]{| l |}] ) ⊢ 2'(= a3◂ [ a24◂ [ a9◂ [ ]{| l |}]] )
; .mov_ptn 0(<2)◂1(<2)◂8'(= a26◂ [ a9◂ [ ]{| l |}] ) ⊢ 2'(= a3◂ [ a24◂ [ a9◂ [ ]{| l |}]] )
	mov rax,QWORD [rsp-8+8*1]
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],1
	mov QWORD [rax+8],rdi
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,8
	jmp LB_4672
LB_4672:
	cmp BYTE [r8+6],0
	jnz LB_4663
	POP_GRM_SCC
	ret
LB_4663:
	RB_GRM
	jmp LB_4675
LB_4674:
	add r14,1 
LB_4675:
	cmp r14,r9
	jge LB_4676
	JZ_SPC BYTE [r13+8+r14], LB_4674
LB_4676
	call GRM_272
	cmp BYTE [r8+6],0
	jnz LB_4679
	jmp LB_4680
LB_4679:
	jmp LB_4677
LB_4680:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a25◂ [ a9◂ [ ]{| l |}] ) ⊢ 8'(= a25◂ [ a9◂ [ ]{| l |}] )
; .mov_ptn 2'(= a25◂ [ a9◂ [ ]{| l |}] ) ⊢ 8'(= a25◂ [ a9◂ [ ]{| l |}] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_4678
LB_4677:
	add rsp,0
	jmp LB_4673
LB_4678:
	mov QWORD [rsp+8*1],r14
	mov r13,QWORD [rsp+16+8*1]
	mov r14,QWORD [rsp+8*1]
	jmp LB_4681
LB_4681
;; rsp=1 , %2505~1'(= r ) %2504~0'(= r ) %2503~8'(= a25◂ [ a9◂ [ ]{| l |}] ) 
; #158 8'(= a25◂ [ a9◂ [ ]{| l |}] ) ⊢ 0(<2)◂8'(= a25◂ [ a9◂ [ ]{| l |}] )
;; rsp=1 , %2506~0(<2)◂8'(= a25◂ [ a9◂ [ ]{| l |}] ) %2505~1'(= r ) %2504~0'(= r ) 
; #24 0(<2)◂8'(= a25◂ [ a9◂ [ ]{| l |}] ) ⊢ 0(<2)◂0(<2)◂8'(= a25◂ [ a9◂ [ ]{| l |}] )
;; rsp=1 , %2507~0(<2)◂0(<2)◂8'(= a25◂ [ a9◂ [ ]{| l |}] ) %2505~1'(= r ) %2504~0'(= r ) 
; ∎ 0(<2)◂0(<2)◂8'(= a25◂ [ a9◂ [ ]{| l |}] )
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂0(<2)◂8'(= a25◂ [ a9◂ [ ]{| l |}] ) ⊢ 2'(= a3◂ [ a24◂ [ a9◂ [ ]{| l |}]] )
; .mov_ptn 0(<2)◂0(<2)◂8'(= a25◂ [ a9◂ [ ]{| l |}] ) ⊢ 2'(= a3◂ [ a24◂ [ a9◂ [ ]{| l |}]] )
	mov rax,QWORD [rsp-8+8*1]
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,8
	jmp LB_4682
LB_4682:
	cmp BYTE [r8+6],0
	jnz LB_4673
	POP_GRM_SCC
	ret
LB_4673:
	POP_GRM_FAIL 
	ret
ETR_264:
	mov r9,0x0000_ffff_ffff_ffff
	and r9,[r13]
	call GRM_264
	ret
GRM_264:
	PUSH_GRM
	jmp LB_4685
LB_4684:
	add r14,1 
LB_4685:
	cmp r14,r9
	jge LB_4686
	JZ_SPC BYTE [r13+8+r14], LB_4684
LB_4686
	call GRM_271
	cmp BYTE [r8+6],0
	jnz LB_4689
	jmp LB_4690
LB_4689:
	jmp LB_4687
LB_4690:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a27◂ [ ] ) ⊢ 8'(= a27◂ [ ] )
; .mov_ptn 2'(= a27◂ [ ] ) ⊢ 8'(= a27◂ [ ] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_4688
LB_4687:
	add rsp,0
	jmp LB_4683
LB_4688:
	jmp LB_4692
LB_4691:
	add r14,1 
LB_4692:
	cmp r14,r9
	jge LB_4693
	JZ_SPC BYTE [r13+8+r14], LB_4691
LB_4693
	call GRM_266
	cmp BYTE [r8+6],0
	jnz LB_4696
	jmp LB_4697
LB_4696:
	jmp LB_4694
LB_4697:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a28◂ [ a9◂ [ ]] ) ⊢ 9'(= a28◂ [ a9◂ [ ]] )
; .mov_ptn 2'(= a28◂ [ a9◂ [ ]] ) ⊢ 9'(= a28◂ [ a9◂ [ ]] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_4695
LB_4694:
	add rsp,8
	POP_GRM_FAIL
	ret
LB_4695:
	jmp LB_4699
LB_4698:
	add r14,1 
LB_4699:
	cmp r14,r9
	jge LB_4700
	JZ_SPC BYTE [r13+8+r14], LB_4698
LB_4700
	call GRM_265
	cmp BYTE [r8+6],0
	jnz LB_4703
	jmp LB_4704
LB_4703:
	jmp LB_4701
LB_4704:
	sub rsp,24
; .mov_ptn2 2'(= *{ a8◂ [ a13◂ [ {| l |}]]a17◂ [ a9◂ [ ]{| l |}]a3◂ [ *{ a8◂ [ a13◂ [ {| l |}]]a26◂ [ a9◂ [ ]{| l |}]}]} ) ⊢ { 10'(= a8◂ [ a13◂ [ {| l |}]] ) 11'(= a17◂ [ a9◂ [ ]{| l |}] ) 12'(= a3◂ [ *{ a8◂ [ a13◂ [ {| l |}]]a26◂ [ a9◂ [ ]{| l |}]}] ) }
; .mov_ptn 2'(= *{ a8◂ [ a13◂ [ {| l |}]]a17◂ [ a9◂ [ ]{| l |}]a3◂ [ *{ a8◂ [ a13◂ [ {| l |}]]a26◂ [ a9◂ [ ]{| l |}]}]} ) ⊢ { 10'(= a8◂ [ a13◂ [ {| l |}]] ) 11'(= a17◂ [ a9◂ [ ]{| l |}] ) 12'(= a3◂ [ *{ a8◂ [ a13◂ [ {| l |}]]a26◂ [ a9◂ [ ]{| l |}]}] ) }
	mov r10, QWORD [r8+8]
	mov QWORD [rsp-8+8*3],r10
	mov r11, QWORD [r8+16]
	mov QWORD [rsp-8+8*2],r11
	mov rcx, QWORD [r8+24]
	mov QWORD [rsp-8+8*1],rcx
	jmp LB_4702
LB_4701:
	add rsp,16
	POP_GRM_FAIL
	ret
LB_4702:
	mov QWORD [rsp+8*5],r14
	mov r13,QWORD [rsp+16+8*5]
	mov r14,QWORD [rsp+8*5]
	jmp LB_4705
LB_4705
;; rsp=5 , %2514~1'(= r ) %2513~0'(= r ) %2512~12'(= a3◂ [ *{ a8◂ [ a13◂ [ {| l |}]]a26◂ [ a9◂ [ ]{| l |}]}] ) %2511~11'(= a17◂ [ a9◂ [ ]{| l |}] ) %2510~10'(= a8◂ [ a13◂ [ {| l |}]] ) %2509~9'(= a28◂ [ a9◂ [ ]] ) %2508~8'(= a27◂ [ ] ) 
; #165 { } ⊢ 2'(= a2◂ [ a13◂ [ {| l |}]] )
	sub rsp,16
	mov QWORD [rsp+8*0],r13
	mov QWORD [rsp+8*1],r14
; .mov_ptn2 { } ⊢ { }
	call ETR_165
	mov r14,QWORD [rsp-8+8*2]
	mov r8,r13
	mov r13,QWORD [rsp-8+8*1]
	add rsp,16
;; rsp=5 , %2515~2'(= a2◂ [ a13◂ [ {| l |}]] ) %2514~1'(= r ) %2513~0'(= r ) %2512~12'(= a3◂ [ *{ a8◂ [ a13◂ [ {| l |}]]a26◂ [ a9◂ [ ]{| l |}]}] ) %2511~11'(= a17◂ [ a9◂ [ ]{| l |}] ) %2510~10'(= a8◂ [ a13◂ [ {| l |}]] ) %2509~9'(= a28◂ [ a9◂ [ ]] ) %2508~8'(= a27◂ [ ] ) 
; #153 { 2'(= a2◂ [ a13◂ [ {| l |}]] ) 10'(= a8◂ [ a13◂ [ {| l |}]] ) 11'(= a17◂ [ a9◂ [ ]{| l |}] ) 8'(= a27◂ [ ] ) 9'(= a28◂ [ a9◂ [ ]] ) 12'(= a3◂ [ *{ a8◂ [ a13◂ [ {| l |}]]a26◂ [ a9◂ [ ]{| l |}]}] ) } ⊢ 1(<2)◂{ 2'(= a2◂ [ a13◂ [ {| l |}]] ) 10'(= a8◂ [ a13◂ [ {| l |}]] ) 11'(= a17◂ [ a9◂ [ ]{| l |}] ) 8'(= a27◂ [ ] ) 9'(= a28◂ [ a9◂ [ ]] ) 12'(= a3◂ [ *{ a8◂ [ a13◂ [ {| l |}]]a26◂ [ a9◂ [ ]{| l |}]}] ) }
;; rsp=5 , %2516~1(<2)◂{ 2'(= a2◂ [ a13◂ [ {| l |}]] ) 10'(= a8◂ [ a13◂ [ {| l |}]] ) 11'(= a17◂ [ a9◂ [ ]{| l |}] ) 8'(= a27◂ [ ] ) 9'(= a28◂ [ a9◂ [ ]] ) 12'(= a3◂ [ *{ a8◂ [ a13◂ [ {| l |}]]a26◂ [ a9◂ [ ]{| l |}]}] ) } %2514~1'(= r ) %2513~0'(= r ) 
; #24 1(<2)◂{ 2'(= a2◂ [ a13◂ [ {| l |}]] ) 10'(= a8◂ [ a13◂ [ {| l |}]] ) 11'(= a17◂ [ a9◂ [ ]{| l |}] ) 8'(= a27◂ [ ] ) 9'(= a28◂ [ a9◂ [ ]] ) 12'(= a3◂ [ *{ a8◂ [ a13◂ [ {| l |}]]a26◂ [ a9◂ [ ]{| l |}]}] ) } ⊢ 0(<2)◂1(<2)◂{ 2'(= a2◂ [ a13◂ [ {| l |}]] ) 10'(= a8◂ [ a13◂ [ {| l |}]] ) 11'(= a17◂ [ a9◂ [ ]{| l |}] ) 8'(= a27◂ [ ] ) 9'(= a28◂ [ a9◂ [ ]] ) 12'(= a3◂ [ *{ a8◂ [ a13◂ [ {| l |}]]a26◂ [ a9◂ [ ]{| l |}]}] ) }
;; rsp=5 , %2517~0(<2)◂1(<2)◂{ 2'(= a2◂ [ a13◂ [ {| l |}]] ) 10'(= a8◂ [ a13◂ [ {| l |}]] ) 11'(= a17◂ [ a9◂ [ ]{| l |}] ) 8'(= a27◂ [ ] ) 9'(= a28◂ [ a9◂ [ ]] ) 12'(= a3◂ [ *{ a8◂ [ a13◂ [ {| l |}]]a26◂ [ a9◂ [ ]{| l |}]}] ) } %2514~1'(= r ) %2513~0'(= r ) 
; ∎ 0(<2)◂1(<2)◂{ 2'(= a2◂ [ a13◂ [ {| l |}]] ) 10'(= a8◂ [ a13◂ [ {| l |}]] ) 11'(= a17◂ [ a9◂ [ ]{| l |}] ) 8'(= a27◂ [ ] ) 9'(= a28◂ [ a9◂ [ ]] ) 12'(= a3◂ [ *{ a8◂ [ a13◂ [ {| l |}]]a26◂ [ a9◂ [ ]{| l |}]}] ) }
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂1(<2)◂{ 2'(= a2◂ [ a13◂ [ {| l |}]] ) 10'(= a8◂ [ a13◂ [ {| l |}]] ) 11'(= a17◂ [ a9◂ [ ]{| l |}] ) 8'(= a27◂ [ ] ) 9'(= a28◂ [ a9◂ [ ]] ) 12'(= a3◂ [ *{ a8◂ [ a13◂ [ {| l |}]]a26◂ [ a9◂ [ ]{| l |}]}] ) } ⊢ 2'(= a3◂ [ a26◂ [ a9◂ [ ]{| l |}]] )
	mov r13,r8
; .mov_ptn 0(<2)◂1(<2)◂{ 0'(= a2◂ [ a13◂ [ {| l |}]] ) 10'(= a8◂ [ a13◂ [ {| l |}]] ) 11'(= a17◂ [ a9◂ [ ]{| l |}] ) 8'(= a27◂ [ ] ) 9'(= a28◂ [ a9◂ [ ]] ) 12'(= a3◂ [ *{ a8◂ [ a13◂ [ {| l |}]]a26◂ [ a9◂ [ ]{| l |}]}] ) } ⊢ 2'(= a3◂ [ a26◂ [ a9◂ [ ]{| l |}]] )
	ALC_RCD 6, rax
	mov r14,rax
	mov rax,r13
	mov QWORD [r14+8+8*0],rax
	mov rax,QWORD [rsp-8+8*3]
	mov QWORD [r14+8+8*1],rax
	mov rax,QWORD [rsp-8+8*2]
	mov QWORD [r14+8+8*2],rax
	mov rax,QWORD [rsp-8+8*5]
	mov QWORD [r14+8+8*3],rax
	mov rax,QWORD [rsp-8+8*4]
	mov QWORD [r14+8+8*4],rax
	mov rax,QWORD [rsp-8+8*1]
	mov QWORD [r14+8+8*5],rax
	mov rax,r14
	mov BYTE [rax+6],1
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,40
	jmp LB_4706
LB_4706:
	cmp BYTE [r8+6],0
	jnz LB_4683
	POP_GRM_SCC
	ret
LB_4683:
	RB_GRM
	jmp LB_4709
LB_4708:
	add r14,1 
LB_4709:
	cmp r14,r9
	jge LB_4710
	JZ_SPC BYTE [r13+8+r14], LB_4708
LB_4710
	call GRM_270
	cmp BYTE [r8+6],0
	jnz LB_4713
	jmp LB_4714
LB_4713:
	jmp LB_4711
LB_4714:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a27◂ [ ] ) ⊢ 8'(= a27◂ [ ] )
; .mov_ptn 2'(= a27◂ [ ] ) ⊢ 8'(= a27◂ [ ] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_4712
LB_4711:
	add rsp,0
	jmp LB_4707
LB_4712:
	jmp LB_4716
LB_4715:
	add r14,1 
LB_4716:
	cmp r14,r9
	jge LB_4717
	JZ_SPC BYTE [r13+8+r14], LB_4715
LB_4717
	call GRM_266
	cmp BYTE [r8+6],0
	jnz LB_4720
	jmp LB_4721
LB_4720:
	jmp LB_4718
LB_4721:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a28◂ [ a9◂ [ ]] ) ⊢ 9'(= a28◂ [ a9◂ [ ]] )
; .mov_ptn 2'(= a28◂ [ a9◂ [ ]] ) ⊢ 9'(= a28◂ [ a9◂ [ ]] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_4719
LB_4718:
	add rsp,8
	jmp LB_4707
LB_4719:
	jmp LB_4723
LB_4722:
	add r14,1 
LB_4723:
	cmp r14,r9
	jge LB_4724
	JZ_SPC BYTE [r13+8+r14], LB_4722
LB_4724
	call GRM_265
	cmp BYTE [r8+6],0
	jnz LB_4727
	jmp LB_4728
LB_4727:
	jmp LB_4725
LB_4728:
	sub rsp,24
; .mov_ptn2 2'(= *{ a8◂ [ a13◂ [ {| l |}]]a17◂ [ a9◂ [ ]{| l |}]a3◂ [ *{ a8◂ [ a13◂ [ {| l |}]]a26◂ [ a9◂ [ ]{| l |}]}]} ) ⊢ { 10'(= a8◂ [ a13◂ [ {| l |}]] ) 11'(= a17◂ [ a9◂ [ ]{| l |}] ) 12'(= a3◂ [ *{ a8◂ [ a13◂ [ {| l |}]]a26◂ [ a9◂ [ ]{| l |}]}] ) }
; .mov_ptn 2'(= *{ a8◂ [ a13◂ [ {| l |}]]a17◂ [ a9◂ [ ]{| l |}]a3◂ [ *{ a8◂ [ a13◂ [ {| l |}]]a26◂ [ a9◂ [ ]{| l |}]}]} ) ⊢ { 10'(= a8◂ [ a13◂ [ {| l |}]] ) 11'(= a17◂ [ a9◂ [ ]{| l |}] ) 12'(= a3◂ [ *{ a8◂ [ a13◂ [ {| l |}]]a26◂ [ a9◂ [ ]{| l |}]}] ) }
	mov r10, QWORD [r8+8]
	mov QWORD [rsp-8+8*3],r10
	mov r11, QWORD [r8+16]
	mov QWORD [rsp-8+8*2],r11
	mov rcx, QWORD [r8+24]
	mov QWORD [rsp-8+8*1],rcx
	jmp LB_4726
LB_4725:
	add rsp,16
	jmp LB_4707
LB_4726:
	jmp LB_4730
LB_4729:
	add r14,1 
LB_4730:
	cmp r14,r9
	jge LB_4731
	JZ_SPC BYTE [r13+8+r14], LB_4729
LB_4731
	call GRM_264
	cmp BYTE [r8+6],0
	jnz LB_4734
	jmp LB_4735
LB_4734:
	jmp LB_4732
LB_4735:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a26◂ [ a9◂ [ ]{| l |}] ) ⊢ 13'(= a26◂ [ a9◂ [ ]{| l |}] )
; .mov_ptn 2'(= a26◂ [ a9◂ [ ]{| l |}] ) ⊢ 13'(= a26◂ [ a9◂ [ ]{| l |}] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_4733
LB_4732:
	add rsp,40
	jmp LB_4707
LB_4733:
	mov QWORD [rsp+8*6],r14
	mov r13,QWORD [rsp+16+8*6]
	mov r14,QWORD [rsp+8*6]
	jmp LB_4736
LB_4736
;; rsp=6 , %2525~1'(= r ) %2524~0'(= r ) %2523~13'(= a26◂ [ a9◂ [ ]{| l |}] ) %2522~12'(= a3◂ [ *{ a8◂ [ a13◂ [ {| l |}]]a26◂ [ a9◂ [ ]{| l |}]}] ) %2521~11'(= a17◂ [ a9◂ [ ]{| l |}] ) %2520~10'(= a8◂ [ a13◂ [ {| l |}]] ) %2519~9'(= a28◂ [ a9◂ [ ]] ) %2518~8'(= a27◂ [ ] ) 
; #165 { } ⊢ 2'(= a2◂ [ a13◂ [ {| l |}]] )
	sub rsp,16
	mov QWORD [rsp+8*0],r13
	mov QWORD [rsp+8*1],r14
; .mov_ptn2 { } ⊢ { }
	call ETR_165
	mov r14,QWORD [rsp-8+8*2]
	mov r8,r13
	mov r13,QWORD [rsp-8+8*1]
	add rsp,16
;; rsp=6 , %2526~2'(= a2◂ [ a13◂ [ {| l |}]] ) %2525~1'(= r ) %2524~0'(= r ) %2523~13'(= a26◂ [ a9◂ [ ]{| l |}] ) %2522~12'(= a3◂ [ *{ a8◂ [ a13◂ [ {| l |}]]a26◂ [ a9◂ [ ]{| l |}]}] ) %2521~11'(= a17◂ [ a9◂ [ ]{| l |}] ) %2520~10'(= a8◂ [ a13◂ [ {| l |}]] ) %2519~9'(= a28◂ [ a9◂ [ ]] ) %2518~8'(= a27◂ [ ] ) 
; #154 { 2'(= a2◂ [ a13◂ [ {| l |}]] ) 10'(= a8◂ [ a13◂ [ {| l |}]] ) 11'(= a17◂ [ a9◂ [ ]{| l |}] ) 8'(= a27◂ [ ] ) 9'(= a28◂ [ a9◂ [ ]] ) 12'(= a3◂ [ *{ a8◂ [ a13◂ [ {| l |}]]a26◂ [ a9◂ [ ]{| l |}]}] ) 13'(= a26◂ [ a9◂ [ ]{| l |}] ) } ⊢ 0(<2)◂{ 2'(= a2◂ [ a13◂ [ {| l |}]] ) 10'(= a8◂ [ a13◂ [ {| l |}]] ) 11'(= a17◂ [ a9◂ [ ]{| l |}] ) 8'(= a27◂ [ ] ) 9'(= a28◂ [ a9◂ [ ]] ) 12'(= a3◂ [ *{ a8◂ [ a13◂ [ {| l |}]]a26◂ [ a9◂ [ ]{| l |}]}] ) 13'(= a26◂ [ a9◂ [ ]{| l |}] ) }
;; rsp=6 , %2527~0(<2)◂{ 2'(= a2◂ [ a13◂ [ {| l |}]] ) 10'(= a8◂ [ a13◂ [ {| l |}]] ) 11'(= a17◂ [ a9◂ [ ]{| l |}] ) 8'(= a27◂ [ ] ) 9'(= a28◂ [ a9◂ [ ]] ) 12'(= a3◂ [ *{ a8◂ [ a13◂ [ {| l |}]]a26◂ [ a9◂ [ ]{| l |}]}] ) 13'(= a26◂ [ a9◂ [ ]{| l |}] ) } %2525~1'(= r ) %2524~0'(= r ) 
; #24 0(<2)◂{ 2'(= a2◂ [ a13◂ [ {| l |}]] ) 10'(= a8◂ [ a13◂ [ {| l |}]] ) 11'(= a17◂ [ a9◂ [ ]{| l |}] ) 8'(= a27◂ [ ] ) 9'(= a28◂ [ a9◂ [ ]] ) 12'(= a3◂ [ *{ a8◂ [ a13◂ [ {| l |}]]a26◂ [ a9◂ [ ]{| l |}]}] ) 13'(= a26◂ [ a9◂ [ ]{| l |}] ) } ⊢ 0(<2)◂0(<2)◂{ 2'(= a2◂ [ a13◂ [ {| l |}]] ) 10'(= a8◂ [ a13◂ [ {| l |}]] ) 11'(= a17◂ [ a9◂ [ ]{| l |}] ) 8'(= a27◂ [ ] ) 9'(= a28◂ [ a9◂ [ ]] ) 12'(= a3◂ [ *{ a8◂ [ a13◂ [ {| l |}]]a26◂ [ a9◂ [ ]{| l |}]}] ) 13'(= a26◂ [ a9◂ [ ]{| l |}] ) }
;; rsp=6 , %2528~0(<2)◂0(<2)◂{ 2'(= a2◂ [ a13◂ [ {| l |}]] ) 10'(= a8◂ [ a13◂ [ {| l |}]] ) 11'(= a17◂ [ a9◂ [ ]{| l |}] ) 8'(= a27◂ [ ] ) 9'(= a28◂ [ a9◂ [ ]] ) 12'(= a3◂ [ *{ a8◂ [ a13◂ [ {| l |}]]a26◂ [ a9◂ [ ]{| l |}]}] ) 13'(= a26◂ [ a9◂ [ ]{| l |}] ) } %2525~1'(= r ) %2524~0'(= r ) 
; ∎ 0(<2)◂0(<2)◂{ 2'(= a2◂ [ a13◂ [ {| l |}]] ) 10'(= a8◂ [ a13◂ [ {| l |}]] ) 11'(= a17◂ [ a9◂ [ ]{| l |}] ) 8'(= a27◂ [ ] ) 9'(= a28◂ [ a9◂ [ ]] ) 12'(= a3◂ [ *{ a8◂ [ a13◂ [ {| l |}]]a26◂ [ a9◂ [ ]{| l |}]}] ) 13'(= a26◂ [ a9◂ [ ]{| l |}] ) }
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂0(<2)◂{ 2'(= a2◂ [ a13◂ [ {| l |}]] ) 10'(= a8◂ [ a13◂ [ {| l |}]] ) 11'(= a17◂ [ a9◂ [ ]{| l |}] ) 8'(= a27◂ [ ] ) 9'(= a28◂ [ a9◂ [ ]] ) 12'(= a3◂ [ *{ a8◂ [ a13◂ [ {| l |}]]a26◂ [ a9◂ [ ]{| l |}]}] ) 13'(= a26◂ [ a9◂ [ ]{| l |}] ) } ⊢ 2'(= a3◂ [ a26◂ [ a9◂ [ ]{| l |}]] )
	mov r13,r8
; .mov_ptn 0(<2)◂0(<2)◂{ 0'(= a2◂ [ a13◂ [ {| l |}]] ) 10'(= a8◂ [ a13◂ [ {| l |}]] ) 11'(= a17◂ [ a9◂ [ ]{| l |}] ) 8'(= a27◂ [ ] ) 9'(= a28◂ [ a9◂ [ ]] ) 12'(= a3◂ [ *{ a8◂ [ a13◂ [ {| l |}]]a26◂ [ a9◂ [ ]{| l |}]}] ) 13'(= a26◂ [ a9◂ [ ]{| l |}] ) } ⊢ 2'(= a3◂ [ a26◂ [ a9◂ [ ]{| l |}]] )
	ALC_RCD 7, rax
	mov r14,rax
	mov rax,r13
	mov QWORD [r14+8+8*0],rax
	mov rax,QWORD [rsp-8+8*4]
	mov QWORD [r14+8+8*1],rax
	mov rax,QWORD [rsp-8+8*3]
	mov QWORD [r14+8+8*2],rax
	mov rax,QWORD [rsp-8+8*6]
	mov QWORD [r14+8+8*3],rax
	mov rax,QWORD [rsp-8+8*5]
	mov QWORD [r14+8+8*4],rax
	mov rax,QWORD [rsp-8+8*2]
	mov QWORD [r14+8+8*5],rax
	mov rax,QWORD [rsp-8+8*1]
	mov QWORD [r14+8+8*6],rax
	mov rax,r14
	mov BYTE [rax+6],0
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,48
	jmp LB_4737
LB_4737:
	cmp BYTE [r8+6],0
	jnz LB_4707
	POP_GRM_SCC
	ret
LB_4707:
	POP_GRM_FAIL 
	ret
ETR_265:
	mov r9,0x0000_ffff_ffff_ffff
	and r9,[r13]
	call GRM_265
	ret
GRM_265:
	PUSH_GRM
	jmp LB_4740
LB_4739:
	add r14,1 
LB_4740:
	cmp r14,r9
	jge LB_4741
	JZ_SPC BYTE [r13+8+r14], LB_4739
LB_4741
	lea rax,[r14+1]
	cmp rax,r9
	jg LB_4744
	jmp LB_4745
LB_4744:
	mov r8,unt_1
	jmp LB_4742
LB_4745:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],59
	jnz LB_4746
	jmp LB_4747
LB_4746:
	mov r8,unt_1
	jmp LB_4742
LB_4747:
	add r14,1
	jmp LB_4743
LB_4742:
	add rsp,0
	jmp LB_4738
LB_4743:
	jmp LB_4749
LB_4748:
	add r14,1 
LB_4749:
	cmp r14,r9
	jge LB_4750
	JZ_SPC BYTE [r13+8+r14], LB_4748
LB_4750
	lea rax,[r14+3]
	cmp rax,r9
	jg LB_4753
	jmp LB_4754
LB_4753:
	mov r8,unt_1
	jmp LB_4751
LB_4754:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],226
	jnz LB_4755
	cmp BYTE [rdi+1],138
	jnz LB_4755
	cmp BYTE [rdi+2],162
	jnz LB_4755
	jmp LB_4756
LB_4755:
	mov r8,unt_1
	jmp LB_4751
LB_4756:
	add r14,3
	jmp LB_4752
LB_4751:
	add rsp,0
	jmp LB_4738
LB_4752:
	jmp LB_4758
LB_4757:
	add r14,1 
LB_4758:
	cmp r14,r9
	jge LB_4759
	JZ_SPC BYTE [r13+8+r14], LB_4757
LB_4759
	call GRM_207
	cmp BYTE [r8+6],0
	jnz LB_4762
	jmp LB_4763
LB_4762:
	jmp LB_4760
LB_4763:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a8◂ [ a13◂ [ {| l |}]] ) ⊢ 8'(= a8◂ [ a13◂ [ {| l |}]] )
; .mov_ptn 2'(= a8◂ [ a13◂ [ {| l |}]] ) ⊢ 8'(= a8◂ [ a13◂ [ {| l |}]] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_4761
LB_4760:
	add rsp,0
	POP_GRM_FAIL
	ret
LB_4761:
	jmp LB_4765
LB_4764:
	add r14,1 
LB_4765:
	cmp r14,r9
	jge LB_4766
	JZ_SPC BYTE [r13+8+r14], LB_4764
LB_4766
	lea rax,[r14+1]
	cmp rax,r9
	jg LB_4769
	jmp LB_4770
LB_4769:
	mov r8,unt_1
	jmp LB_4767
LB_4770:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],44
	jnz LB_4771
	jmp LB_4772
LB_4771:
	mov r8,unt_1
	jmp LB_4767
LB_4772:
	add r14,1
	jmp LB_4768
LB_4767:
	add rsp,8
	POP_GRM_FAIL
	ret
LB_4768:
	jmp LB_4774
LB_4773:
	add r14,1 
LB_4774:
	cmp r14,r9
	jge LB_4775
	JZ_SPC BYTE [r13+8+r14], LB_4773
LB_4775
	call GRM_207
	cmp BYTE [r8+6],0
	jnz LB_4778
	jmp LB_4779
LB_4778:
	jmp LB_4776
LB_4779:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a8◂ [ a13◂ [ {| l |}]] ) ⊢ 9'(= a8◂ [ a13◂ [ {| l |}]] )
; .mov_ptn 2'(= a8◂ [ a13◂ [ {| l |}]] ) ⊢ 9'(= a8◂ [ a13◂ [ {| l |}]] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_4777
LB_4776:
	add rsp,8
	POP_GRM_FAIL
	ret
LB_4777:
	jmp LB_4781
LB_4780:
	add r14,1 
LB_4781:
	cmp r14,r9
	jge LB_4782
	JZ_SPC BYTE [r13+8+r14], LB_4780
LB_4782
	call GRM_236
	cmp BYTE [r8+6],0
	jnz LB_4785
	jmp LB_4786
LB_4785:
	jmp LB_4783
LB_4786:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a35◂ [ a17◂ [ a9◂ [ ]{| l |}]] ) ⊢ 10'(= a35◂ [ a17◂ [ a9◂ [ ]{| l |}]] )
; .mov_ptn 2'(= a35◂ [ a17◂ [ a9◂ [ ]{| l |}]] ) ⊢ 10'(= a35◂ [ a17◂ [ a9◂ [ ]{| l |}]] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_4784
LB_4783:
	add rsp,16
	POP_GRM_FAIL
	ret
LB_4784:
	jmp LB_4788
LB_4787:
	add r14,1 
LB_4788:
	cmp r14,r9
	jge LB_4789
	JZ_SPC BYTE [r13+8+r14], LB_4787
LB_4789
	call GRM_264
	cmp BYTE [r8+6],0
	jnz LB_4792
	jmp LB_4793
LB_4792:
	jmp LB_4790
LB_4793:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a26◂ [ a9◂ [ ]{| l |}] ) ⊢ 11'(= a26◂ [ a9◂ [ ]{| l |}] )
; .mov_ptn 2'(= a26◂ [ a9◂ [ ]{| l |}] ) ⊢ 11'(= a26◂ [ a9◂ [ ]{| l |}] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_4791
LB_4790:
	add rsp,24
	POP_GRM_FAIL
	ret
LB_4791:
	mov QWORD [rsp+8*4],r14
	mov r13,QWORD [rsp+16+8*4]
	mov r14,QWORD [rsp+8*4]
	jmp LB_4794
LB_4794
;; rsp=4 , %2534~1'(= r ) %2533~0'(= r ) %2532~11'(= a26◂ [ a9◂ [ ]{| l |}] ) %2531~10'(= a35◂ [ a17◂ [ a9◂ [ ]{| l |}]] ) %2530~9'(= a8◂ [ a13◂ [ {| l |}]] ) %2529~8'(= a8◂ [ a13◂ [ {| l |}]] ) 
;; ? 10'(= a35◂ [ a17◂ [ a9◂ [ ]{| l |}]] ) ⊢ 0(<2)◂2'(= a17◂ [ a9◂ [ ]{| l |}] )
	mov rdi,QWORD [rsp-8+8*2]
	cmp BYTE [rdi+6],0
	jnz LB_4796
	mov QWORD [GBG_VCT+8*0],rdi
	mov r8,QWORD [rdi+8]
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_LN rdi
;; rsp=4 , %2536~2'(= a17◂ [ a9◂ [ ]{| l |}] ) %2534~1'(= r ) %2533~0'(= r ) %2532~11'(= a26◂ [ a9◂ [ ]{| l |}] ) %2530~9'(= a8◂ [ a13◂ [ {| l |}]] ) %2529~8'(= a8◂ [ a13◂ [ {| l |}]] ) 
; #24 { 9'(= a8◂ [ a13◂ [ {| l |}]] ) 11'(= a26◂ [ a9◂ [ ]{| l |}] ) } ⊢ 0(<2)◂{ 9'(= a8◂ [ a13◂ [ {| l |}]] ) 11'(= a26◂ [ a9◂ [ ]{| l |}] ) }
;; rsp=4 , %2537~0(<2)◂{ 9'(= a8◂ [ a13◂ [ {| l |}]] ) 11'(= a26◂ [ a9◂ [ ]{| l |}] ) } %2536~2'(= a17◂ [ a9◂ [ ]{| l |}] ) %2534~1'(= r ) %2533~0'(= r ) %2529~8'(= a8◂ [ a13◂ [ {| l |}]] ) 
; #24 { 8'(= a8◂ [ a13◂ [ {| l |}]] ) 2'(= a17◂ [ a9◂ [ ]{| l |}] ) 0(<2)◂{ 9'(= a8◂ [ a13◂ [ {| l |}]] ) 11'(= a26◂ [ a9◂ [ ]{| l |}] ) } } ⊢ 0(<2)◂{ 8'(= a8◂ [ a13◂ [ {| l |}]] ) 2'(= a17◂ [ a9◂ [ ]{| l |}] ) 0(<2)◂{ 9'(= a8◂ [ a13◂ [ {| l |}]] ) 11'(= a26◂ [ a9◂ [ ]{| l |}] ) } }
;; rsp=4 , %2538~0(<2)◂{ 8'(= a8◂ [ a13◂ [ {| l |}]] ) 2'(= a17◂ [ a9◂ [ ]{| l |}] ) 0(<2)◂{ 9'(= a8◂ [ a13◂ [ {| l |}]] ) 11'(= a26◂ [ a9◂ [ ]{| l |}] ) } } %2534~1'(= r ) %2533~0'(= r ) 
; ∎ 0(<2)◂{ 8'(= a8◂ [ a13◂ [ {| l |}]] ) 2'(= a17◂ [ a9◂ [ ]{| l |}] ) 0(<2)◂{ 9'(= a8◂ [ a13◂ [ {| l |}]] ) 11'(= a26◂ [ a9◂ [ ]{| l |}] ) } }
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂{ 8'(= a8◂ [ a13◂ [ {| l |}]] ) 2'(= a17◂ [ a9◂ [ ]{| l |}] ) 0(<2)◂{ 9'(= a8◂ [ a13◂ [ {| l |}]] ) 11'(= a26◂ [ a9◂ [ ]{| l |}] ) } } ⊢ 2'(= a3◂ [ *{ a8◂ [ a13◂ [ {| l |}]]a17◂ [ a9◂ [ ]{| l |}]a3◂ [ *{ a8◂ [ a13◂ [ {| l |}]]a26◂ [ a9◂ [ ]{| l |}]}]}] )
	mov r13,r8
; .mov_ptn 0(<2)◂{ 8'(= a8◂ [ a13◂ [ {| l |}]] ) 0'(= a17◂ [ a9◂ [ ]{| l |}] ) 0(<2)◂{ 9'(= a8◂ [ a13◂ [ {| l |}]] ) 11'(= a26◂ [ a9◂ [ ]{| l |}] ) } } ⊢ 2'(= a3◂ [ *{ a8◂ [ a13◂ [ {| l |}]]a17◂ [ a9◂ [ ]{| l |}]a3◂ [ *{ a8◂ [ a13◂ [ {| l |}]]a26◂ [ a9◂ [ ]{| l |}]}]}] )
	ALC_RCD 3, rax
	mov r14,rax
	mov rax,QWORD [rsp-8+8*4]
	mov QWORD [r14+8+8*0],rax
	mov rax,r13
	mov QWORD [r14+8+8*1],rax
	ALC_RCD 2, rax
	mov r9,rax
	mov rax,QWORD [rsp-8+8*3]
	mov QWORD [r9+8+8*0],rax
	mov rax,QWORD [rsp-8+8*1]
	mov QWORD [r9+8+8*1],rax
	mov rax,r9
	mov BYTE [rax+6],0
	mov QWORD [r14+8+8*2],rax
	mov rax,r14
	mov BYTE [rax+6],0
	mov r8,rax
	add rsp,32
	jmp LB_4795
LB_4796:
;; ?. 10'(= a35◂ [ a17◂ [ a9◂ [ ]{| l |}]] ) ⊢ 1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] )
	mov QWORD [GBG_VCT+8*0],rdi
	mov r8,QWORD [rdi+8]
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_LN rdi
;; rsp=4 , %2535~2'(= a2◂ [ *{ rr{| l |}}] ) %2534~1'(= r ) %2533~0'(= r ) %2532~11'(= a26◂ [ a9◂ [ ]{| l |}] ) %2530~9'(= a8◂ [ a13◂ [ {| l |}]] ) %2529~8'(= a8◂ [ a13◂ [ {| l |}]] ) 
; $ %[ "grm_etr_act_act 0" ] ⊢ %[ "grm_etr_act_act 0" ]
;; rsp=4 , %2539~%[ "grm_etr_act_act 0" ] %2535~2'(= a2◂ [ *{ rr{| l |}}] ) %2534~1'(= r ) %2533~0'(= r ) %2532~11'(= a26◂ [ a9◂ [ ]{| l |}] ) %2530~9'(= a8◂ [ a13◂ [ {| l |}]] ) %2529~8'(= a8◂ [ a13◂ [ {| l |}]] ) 
; #10 %[ "grm_etr_act_act 0" ] ⊢ %[ "grm_etr_act_act 0" ]
	mov rdi,fmt_emt
	call emt_stg
	mov rdi,LB_4797
	call emt_stg 
	mov rdi,fmt_nl
	call emt_stg
	jmp LB_4798
LB_4798:
;; rsp=4 , %2540~%[ "grm_etr_act_act 0" ] %2535~2'(= a2◂ [ *{ rr{| l |}}] ) %2534~1'(= r ) %2533~0'(= r ) %2532~11'(= a26◂ [ a9◂ [ ]{| l |}] ) %2530~9'(= a8◂ [ a13◂ [ {| l |}]] ) %2529~8'(= a8◂ [ a13◂ [ {| l |}]] ) 
; #10 { 0'(= r ) 1'(= r ) } ⊢ { 0'(= r ) 1'(= r ) }
	mov rdi,fmt_emt
	call emt_stg
	mov rdi,fmt_rcd_l 
	call emt_stg 
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	mov rdi,r8 
	call emt_r64 
	C_POP_REGS
	mov rdi,fmt_spc 
	call emt_stg 
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	mov rdi,r8 
	call emt_r64 
	C_POP_REGS
	mov rdi,fmt_spc 
	call emt_stg 
	mov rdi,fmt_rcd_r 
	call emt_stg 
	mov rdi,fmt_nl
	call emt_stg
	jmp LB_4799
LB_4799:
;; rsp=4 , %2541~{ 0'(= r ) 1'(= r ) } %2540~%[ "grm_etr_act_act 0" ] %2535~2'(= a2◂ [ *{ rr{| l |}}] ) %2532~11'(= a26◂ [ a9◂ [ ]{| l |}] ) %2530~9'(= a8◂ [ a13◂ [ {| l |}]] ) %2529~8'(= a8◂ [ a13◂ [ {| l |}]] ) 
	mov rdi,LB_4800
	call emt_stg 
	jmp err
LB_4795:
	cmp BYTE [r8+6],0
	jnz LB_4738
	POP_GRM_SCC
	ret
LB_4738:
	RB_GRM
	jmp LB_4803
LB_4802:
	add r14,1 
LB_4803:
	cmp r14,r9
	jge LB_4804
	JZ_SPC BYTE [r13+8+r14], LB_4802
LB_4804
	lea rax,[r14+3]
	cmp rax,r9
	jg LB_4807
	jmp LB_4808
LB_4807:
	mov r8,unt_1
	jmp LB_4805
LB_4808:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],226
	jnz LB_4809
	cmp BYTE [rdi+1],138
	jnz LB_4809
	cmp BYTE [rdi+2],162
	jnz LB_4809
	jmp LB_4810
LB_4809:
	mov r8,unt_1
	jmp LB_4805
LB_4810:
	add r14,3
	jmp LB_4806
LB_4805:
	add rsp,0
	jmp LB_4801
LB_4806:
	jmp LB_4812
LB_4811:
	add r14,1 
LB_4812:
	cmp r14,r9
	jge LB_4813
	JZ_SPC BYTE [r13+8+r14], LB_4811
LB_4813
	call GRM_207
	cmp BYTE [r8+6],0
	jnz LB_4816
	jmp LB_4817
LB_4816:
	jmp LB_4814
LB_4817:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a8◂ [ a13◂ [ {| l |}]] ) ⊢ 8'(= a8◂ [ a13◂ [ {| l |}]] )
; .mov_ptn 2'(= a8◂ [ a13◂ [ {| l |}]] ) ⊢ 8'(= a8◂ [ a13◂ [ {| l |}]] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_4815
LB_4814:
	add rsp,0
	POP_GRM_FAIL
	ret
LB_4815:
	jmp LB_4819
LB_4818:
	add r14,1 
LB_4819:
	cmp r14,r9
	jge LB_4820
	JZ_SPC BYTE [r13+8+r14], LB_4818
LB_4820
	call GRM_236
	cmp BYTE [r8+6],0
	jnz LB_4823
	jmp LB_4824
LB_4823:
	jmp LB_4821
LB_4824:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a35◂ [ a17◂ [ a9◂ [ ]{| l |}]] ) ⊢ 9'(= a35◂ [ a17◂ [ a9◂ [ ]{| l |}]] )
; .mov_ptn 2'(= a35◂ [ a17◂ [ a9◂ [ ]{| l |}]] ) ⊢ 9'(= a35◂ [ a17◂ [ a9◂ [ ]{| l |}]] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_4822
LB_4821:
	add rsp,8
	POP_GRM_FAIL
	ret
LB_4822:
	mov QWORD [rsp+8*2],r14
	mov r13,QWORD [rsp+16+8*2]
	mov r14,QWORD [rsp+8*2]
	jmp LB_4825
LB_4825
;; rsp=2 , %2545~1'(= r ) %2544~0'(= r ) %2543~9'(= a35◂ [ a17◂ [ a9◂ [ ]{| l |}]] ) %2542~8'(= a8◂ [ a13◂ [ {| l |}]] ) 
;; ? 9'(= a35◂ [ a17◂ [ a9◂ [ ]{| l |}]] ) ⊢ 0(<2)◂2'(= a17◂ [ a9◂ [ ]{| l |}] )
	mov rdi,QWORD [rsp-8+8*1]
	cmp BYTE [rdi+6],0
	jnz LB_4827
	mov QWORD [GBG_VCT+8*0],rdi
	mov r8,QWORD [rdi+8]
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_LN rdi
;; rsp=2 , %2547~2'(= a17◂ [ a9◂ [ ]{| l |}] ) %2545~1'(= r ) %2544~0'(= r ) %2542~8'(= a8◂ [ a13◂ [ {| l |}]] ) 
; #25 { } ⊢ 1(<2)◂{ }
;; rsp=2 , %2548~1(<2)◂{ } %2547~2'(= a17◂ [ a9◂ [ ]{| l |}] ) %2545~1'(= r ) %2544~0'(= r ) %2542~8'(= a8◂ [ a13◂ [ {| l |}]] ) 
; #24 { 8'(= a8◂ [ a13◂ [ {| l |}]] ) 2'(= a17◂ [ a9◂ [ ]{| l |}] ) 1(<2)◂{ } } ⊢ 0(<2)◂{ 8'(= a8◂ [ a13◂ [ {| l |}]] ) 2'(= a17◂ [ a9◂ [ ]{| l |}] ) 1(<2)◂{ } }
;; rsp=2 , %2549~0(<2)◂{ 8'(= a8◂ [ a13◂ [ {| l |}]] ) 2'(= a17◂ [ a9◂ [ ]{| l |}] ) 1(<2)◂{ } } %2545~1'(= r ) %2544~0'(= r ) 
; ∎ 0(<2)◂{ 8'(= a8◂ [ a13◂ [ {| l |}]] ) 2'(= a17◂ [ a9◂ [ ]{| l |}] ) 1(<2)◂{ } }
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂{ 8'(= a8◂ [ a13◂ [ {| l |}]] ) 2'(= a17◂ [ a9◂ [ ]{| l |}] ) 1(<2)◂{ } } ⊢ 2'(= a3◂ [ *{ a8◂ [ a13◂ [ {| l |}]]a17◂ [ a9◂ [ ]{| l |}]a3◂ [ *{ a8◂ [ a13◂ [ {| l |}]]a26◂ [ a9◂ [ ]{| l |}]}]}] )
	mov r13,r8
; .mov_ptn 0(<2)◂{ 8'(= a8◂ [ a13◂ [ {| l |}]] ) 0'(= a17◂ [ a9◂ [ ]{| l |}] ) 1(<2)◂{ } } ⊢ 2'(= a3◂ [ *{ a8◂ [ a13◂ [ {| l |}]]a17◂ [ a9◂ [ ]{| l |}]a3◂ [ *{ a8◂ [ a13◂ [ {| l |}]]a26◂ [ a9◂ [ ]{| l |}]}]}] )
	ALC_RCD 3, rax
	mov r14,rax
	mov rax,QWORD [rsp-8+8*2]
	mov QWORD [r14+8+8*0],rax
	mov rax,r13
	mov QWORD [r14+8+8*1],rax
	mov rax,unt 
	mov rax,unt_1
	mov QWORD [r14+8+8*2],rax
	mov rax,r14
	mov BYTE [rax+6],0
	mov r8,rax
	add rsp,16
	jmp LB_4826
LB_4827:
;; ?. 9'(= a35◂ [ a17◂ [ a9◂ [ ]{| l |}]] ) ⊢ 1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] )
	mov QWORD [GBG_VCT+8*0],rdi
	mov r8,QWORD [rdi+8]
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_LN rdi
;; rsp=2 , %2546~2'(= a2◂ [ *{ rr{| l |}}] ) %2545~1'(= r ) %2544~0'(= r ) %2542~8'(= a8◂ [ a13◂ [ {| l |}]] ) 
; $ %[ "grm_etr_act_act 1" ] ⊢ %[ "grm_etr_act_act 1" ]
;; rsp=2 , %2550~%[ "grm_etr_act_act 1" ] %2546~2'(= a2◂ [ *{ rr{| l |}}] ) %2545~1'(= r ) %2544~0'(= r ) %2542~8'(= a8◂ [ a13◂ [ {| l |}]] ) 
; #10 %[ "grm_etr_act_act 1" ] ⊢ %[ "grm_etr_act_act 1" ]
	mov rdi,fmt_emt
	call emt_stg
	mov rdi,LB_4828
	call emt_stg 
	mov rdi,fmt_nl
	call emt_stg
	jmp LB_4829
LB_4829:
;; rsp=2 , %2551~%[ "grm_etr_act_act 1" ] %2546~2'(= a2◂ [ *{ rr{| l |}}] ) %2545~1'(= r ) %2544~0'(= r ) %2542~8'(= a8◂ [ a13◂ [ {| l |}]] ) 
; #10 { 0'(= r ) 1'(= r ) } ⊢ { 0'(= r ) 1'(= r ) }
	mov rdi,fmt_emt
	call emt_stg
	mov rdi,fmt_rcd_l 
	call emt_stg 
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	mov rdi,r8 
	call emt_r64 
	C_POP_REGS
	mov rdi,fmt_spc 
	call emt_stg 
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	mov rdi,r8 
	call emt_r64 
	C_POP_REGS
	mov rdi,fmt_spc 
	call emt_stg 
	mov rdi,fmt_rcd_r 
	call emt_stg 
	mov rdi,fmt_nl
	call emt_stg
	jmp LB_4830
LB_4830:
;; rsp=2 , %2552~{ 0'(= r ) 1'(= r ) } %2551~%[ "grm_etr_act_act 1" ] %2546~2'(= a2◂ [ *{ rr{| l |}}] ) %2542~8'(= a8◂ [ a13◂ [ {| l |}]] ) 
	mov rdi,LB_4831
	call emt_stg 
	jmp err
LB_4826:
	cmp BYTE [r8+6],0
	jnz LB_4801
	POP_GRM_SCC
	ret
LB_4801:
	POP_GRM_FAIL 
	ret
ETR_266:
	mov r9,0x0000_ffff_ffff_ffff
	and r9,[r13]
	call GRM_266
	ret
GRM_266:
	PUSH_GRM
	jmp LB_4834
LB_4833:
	add r14,1 
LB_4834:
	cmp r14,r9
	jge LB_4835
	JZ_SPC BYTE [r13+8+r14], LB_4833
LB_4835
	lea rax,[r14+2]
	cmp rax,r9
	jg LB_4838
	jmp LB_4839
LB_4838:
	mov r8,unt_1
	jmp LB_4836
LB_4839:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],33
	jnz LB_4840
	cmp BYTE [rdi+1],124
	jnz LB_4840
	jmp LB_4841
LB_4840:
	mov r8,unt_1
	jmp LB_4836
LB_4841:
	add r14,2
	jmp LB_4837
LB_4836:
	add rsp,0
	jmp LB_4832
LB_4837:
	jmp LB_4843
LB_4842:
	add r14,1 
LB_4843:
	cmp r14,r9
	jge LB_4844
	JZ_SPC BYTE [r13+8+r14], LB_4842
LB_4844
	call GRM_267
	cmp BYTE [r8+6],0
	jnz LB_4847
	jmp LB_4848
LB_4847:
	jmp LB_4845
LB_4848:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a2◂ [ a29◂ [ a9◂ [ ]]] ) ⊢ 8'(= a2◂ [ a29◂ [ a9◂ [ ]]] )
; .mov_ptn 2'(= a2◂ [ a29◂ [ a9◂ [ ]]] ) ⊢ 8'(= a2◂ [ a29◂ [ a9◂ [ ]]] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_4846
LB_4845:
	add rsp,0
	POP_GRM_FAIL
	ret
LB_4846:
	mov QWORD [rsp+8*1],r14
	mov r13,QWORD [rsp+16+8*1]
	mov r14,QWORD [rsp+8*1]
	jmp LB_4849
LB_4849
;; rsp=1 , %2555~1'(= r ) %2554~0'(= r ) %2553~8'(= a2◂ [ a29◂ [ a9◂ [ ]]] ) 
; #149 8'(= a2◂ [ a29◂ [ a9◂ [ ]]] ) ⊢ 0(<3)◂8'(= a2◂ [ a29◂ [ a9◂ [ ]]] )
;; rsp=1 , %2556~0(<3)◂8'(= a2◂ [ a29◂ [ a9◂ [ ]]] ) %2555~1'(= r ) %2554~0'(= r ) 
; #24 0(<3)◂8'(= a2◂ [ a29◂ [ a9◂ [ ]]] ) ⊢ 0(<2)◂0(<3)◂8'(= a2◂ [ a29◂ [ a9◂ [ ]]] )
;; rsp=1 , %2557~0(<2)◂0(<3)◂8'(= a2◂ [ a29◂ [ a9◂ [ ]]] ) %2555~1'(= r ) %2554~0'(= r ) 
; ∎ 0(<2)◂0(<3)◂8'(= a2◂ [ a29◂ [ a9◂ [ ]]] )
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂0(<3)◂8'(= a2◂ [ a29◂ [ a9◂ [ ]]] ) ⊢ 2'(= a3◂ [ a28◂ [ a9◂ [ ]]] )
; .mov_ptn 0(<2)◂0(<3)◂8'(= a2◂ [ a29◂ [ a9◂ [ ]]] ) ⊢ 2'(= a3◂ [ a28◂ [ a9◂ [ ]]] )
	mov rax,QWORD [rsp-8+8*1]
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,8
	jmp LB_4850
LB_4850:
	cmp BYTE [r8+6],0
	jnz LB_4832
	POP_GRM_SCC
	ret
LB_4832:
	RB_GRM
	jmp LB_4853
LB_4852:
	add r14,1 
LB_4853:
	cmp r14,r9
	jge LB_4854
	JZ_SPC BYTE [r13+8+r14], LB_4852
LB_4854
	call GRM_268
	cmp BYTE [r8+6],0
	jnz LB_4857
	jmp LB_4858
LB_4857:
	jmp LB_4855
LB_4858:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a29◂ [ a9◂ [ ]] ) ⊢ 8'(= a29◂ [ a9◂ [ ]] )
; .mov_ptn 2'(= a29◂ [ a9◂ [ ]] ) ⊢ 8'(= a29◂ [ a9◂ [ ]] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_4856
LB_4855:
	add rsp,0
	jmp LB_4851
LB_4856:
	jmp LB_4860
LB_4859:
	add r14,1 
LB_4860:
	cmp r14,r9
	jge LB_4861
	JZ_SPC BYTE [r13+8+r14], LB_4859
LB_4861
	call GRM_266
	cmp BYTE [r8+6],0
	jnz LB_4864
	jmp LB_4865
LB_4864:
	jmp LB_4862
LB_4865:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a28◂ [ a9◂ [ ]] ) ⊢ 9'(= a28◂ [ a9◂ [ ]] )
; .mov_ptn 2'(= a28◂ [ a9◂ [ ]] ) ⊢ 9'(= a28◂ [ a9◂ [ ]] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_4863
LB_4862:
	add rsp,8
	jmp LB_4851
LB_4863:
	mov QWORD [rsp+8*2],r14
	mov r13,QWORD [rsp+16+8*2]
	mov r14,QWORD [rsp+8*2]
	jmp LB_4866
LB_4866
;; rsp=2 , %2561~1'(= r ) %2560~0'(= r ) %2559~9'(= a28◂ [ a9◂ [ ]] ) %2558~8'(= a29◂ [ a9◂ [ ]] ) 
; #148 { 8'(= a29◂ [ a9◂ [ ]] ) 9'(= a28◂ [ a9◂ [ ]] ) } ⊢ 1(<3)◂{ 8'(= a29◂ [ a9◂ [ ]] ) 9'(= a28◂ [ a9◂ [ ]] ) }
;; rsp=2 , %2562~1(<3)◂{ 8'(= a29◂ [ a9◂ [ ]] ) 9'(= a28◂ [ a9◂ [ ]] ) } %2561~1'(= r ) %2560~0'(= r ) 
; #24 1(<3)◂{ 8'(= a29◂ [ a9◂ [ ]] ) 9'(= a28◂ [ a9◂ [ ]] ) } ⊢ 0(<2)◂1(<3)◂{ 8'(= a29◂ [ a9◂ [ ]] ) 9'(= a28◂ [ a9◂ [ ]] ) }
;; rsp=2 , %2563~0(<2)◂1(<3)◂{ 8'(= a29◂ [ a9◂ [ ]] ) 9'(= a28◂ [ a9◂ [ ]] ) } %2561~1'(= r ) %2560~0'(= r ) 
; ∎ 0(<2)◂1(<3)◂{ 8'(= a29◂ [ a9◂ [ ]] ) 9'(= a28◂ [ a9◂ [ ]] ) }
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂1(<3)◂{ 8'(= a29◂ [ a9◂ [ ]] ) 9'(= a28◂ [ a9◂ [ ]] ) } ⊢ 2'(= a3◂ [ a28◂ [ a9◂ [ ]]] )
; .mov_ptn 0(<2)◂1(<3)◂{ 8'(= a29◂ [ a9◂ [ ]] ) 9'(= a28◂ [ a9◂ [ ]] ) } ⊢ 2'(= a3◂ [ a28◂ [ a9◂ [ ]]] )
	ALC_RCD 2, rax
	mov r13,rax
	mov rax,QWORD [rsp-8+8*2]
	mov QWORD [r13+8+8*0],rax
	mov rax,QWORD [rsp-8+8*1]
	mov QWORD [r13+8+8*1],rax
	mov rax,r13
	mov BYTE [rax+6],1
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,16
	jmp LB_4867
LB_4867:
	cmp BYTE [r8+6],0
	jnz LB_4851
	POP_GRM_SCC
	ret
LB_4851:
	RB_GRM
	mov QWORD [rsp+8*0],r14
	mov r13,QWORD [rsp+16+8*0]
	mov r14,QWORD [rsp+8*0]
	jmp LB_4869
LB_4869
;; rsp=0 , %2565~1'(= r ) %2564~0'(= r ) 
; #147 { } ⊢ 2(<3)◂{ }
;; rsp=0 , %2566~2(<3)◂{ } %2565~1'(= r ) %2564~0'(= r ) 
; #24 2(<3)◂{ } ⊢ 0(<2)◂2(<3)◂{ }
;; rsp=0 , %2567~0(<2)◂2(<3)◂{ } %2565~1'(= r ) %2564~0'(= r ) 
; ∎ 0(<2)◂2(<3)◂{ }
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂2(<3)◂{ } ⊢ 2'(= a3◂ [ a28◂ [ a9◂ [ ]]] )
; .mov_ptn 0(<2)◂2(<3)◂{ } ⊢ 2'(= a3◂ [ a28◂ [ a9◂ [ ]]] )
	mov rax,unt 
	mov rax,unt_2
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	jmp LB_4870
LB_4870:
	cmp BYTE [r8+6],0
	jnz LB_4868
	POP_GRM_SCC
	ret
LB_4868:
	POP_GRM_FAIL 
	ret
ETR_267:
	mov r9,0x0000_ffff_ffff_ffff
	and r9,[r13]
	call GRM_267
	ret
GRM_267:
	PUSH_GRM
	jmp LB_4873
LB_4872:
	add r14,1 
LB_4873:
	cmp r14,r9
	jge LB_4874
	JZ_SPC BYTE [r13+8+r14], LB_4872
LB_4874
	call GRM_268
	cmp BYTE [r8+6],0
	jnz LB_4877
	jmp LB_4878
LB_4877:
	jmp LB_4875
LB_4878:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a29◂ [ a9◂ [ ]] ) ⊢ 8'(= a29◂ [ a9◂ [ ]] )
; .mov_ptn 2'(= a29◂ [ a9◂ [ ]] ) ⊢ 8'(= a29◂ [ a9◂ [ ]] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_4876
LB_4875:
	add rsp,0
	jmp LB_4871
LB_4876:
	jmp LB_4880
LB_4879:
	add r14,1 
LB_4880:
	cmp r14,r9
	jge LB_4881
	JZ_SPC BYTE [r13+8+r14], LB_4879
LB_4881
	call GRM_267
	cmp BYTE [r8+6],0
	jnz LB_4884
	jmp LB_4885
LB_4884:
	jmp LB_4882
LB_4885:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a2◂ [ a29◂ [ a9◂ [ ]]] ) ⊢ 9'(= a2◂ [ a29◂ [ a9◂ [ ]]] )
; .mov_ptn 2'(= a2◂ [ a29◂ [ a9◂ [ ]]] ) ⊢ 9'(= a2◂ [ a29◂ [ a9◂ [ ]]] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_4883
LB_4882:
	add rsp,8
	jmp LB_4871
LB_4883:
	mov QWORD [rsp+8*2],r14
	mov r13,QWORD [rsp+16+8*2]
	mov r14,QWORD [rsp+8*2]
	jmp LB_4886
LB_4886
;; rsp=2 , %2571~1'(= r ) %2570~0'(= r ) %2569~9'(= a2◂ [ a29◂ [ a9◂ [ ]]] ) %2568~8'(= a29◂ [ a9◂ [ ]] ) 
; #23 { 8'(= a29◂ [ a9◂ [ ]] ) 9'(= a2◂ [ a29◂ [ a9◂ [ ]]] ) } ⊢ 0(<2)◂{ 8'(= a29◂ [ a9◂ [ ]] ) 9'(= a2◂ [ a29◂ [ a9◂ [ ]]] ) }
;; rsp=2 , %2572~0(<2)◂{ 8'(= a29◂ [ a9◂ [ ]] ) 9'(= a2◂ [ a29◂ [ a9◂ [ ]]] ) } %2571~1'(= r ) %2570~0'(= r ) 
; #24 0(<2)◂{ 8'(= a29◂ [ a9◂ [ ]] ) 9'(= a2◂ [ a29◂ [ a9◂ [ ]]] ) } ⊢ 0(<2)◂0(<2)◂{ 8'(= a29◂ [ a9◂ [ ]] ) 9'(= a2◂ [ a29◂ [ a9◂ [ ]]] ) }
;; rsp=2 , %2573~0(<2)◂0(<2)◂{ 8'(= a29◂ [ a9◂ [ ]] ) 9'(= a2◂ [ a29◂ [ a9◂ [ ]]] ) } %2571~1'(= r ) %2570~0'(= r ) 
; ∎ 0(<2)◂0(<2)◂{ 8'(= a29◂ [ a9◂ [ ]] ) 9'(= a2◂ [ a29◂ [ a9◂ [ ]]] ) }
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂0(<2)◂{ 8'(= a29◂ [ a9◂ [ ]] ) 9'(= a2◂ [ a29◂ [ a9◂ [ ]]] ) } ⊢ 2'(= a3◂ [ a2◂ [ a29◂ [ a9◂ [ ]]]] )
; .mov_ptn 0(<2)◂0(<2)◂{ 8'(= a29◂ [ a9◂ [ ]] ) 9'(= a2◂ [ a29◂ [ a9◂ [ ]]] ) } ⊢ 2'(= a3◂ [ a2◂ [ a29◂ [ a9◂ [ ]]]] )
	ALC_RCD 2, rax
	mov r13,rax
	mov rax,QWORD [rsp-8+8*2]
	mov QWORD [r13+8+8*0],rax
	mov rax,QWORD [rsp-8+8*1]
	mov QWORD [r13+8+8*1],rax
	mov rax,r13
	mov BYTE [rax+6],0
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,16
	jmp LB_4887
LB_4887:
	cmp BYTE [r8+6],0
	jnz LB_4871
	POP_GRM_SCC
	ret
LB_4871:
	RB_GRM
	mov QWORD [rsp+8*0],r14
	mov r13,QWORD [rsp+16+8*0]
	mov r14,QWORD [rsp+8*0]
	jmp LB_4889
LB_4889
;; rsp=0 , %2575~1'(= r ) %2574~0'(= r ) 
; #22 { } ⊢ 1(<2)◂{ }
;; rsp=0 , %2576~1(<2)◂{ } %2575~1'(= r ) %2574~0'(= r ) 
; #24 1(<2)◂{ } ⊢ 0(<2)◂1(<2)◂{ }
;; rsp=0 , %2577~0(<2)◂1(<2)◂{ } %2575~1'(= r ) %2574~0'(= r ) 
; ∎ 0(<2)◂1(<2)◂{ }
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂1(<2)◂{ } ⊢ 2'(= a3◂ [ a2◂ [ a29◂ [ a9◂ [ ]]]] )
; .mov_ptn 0(<2)◂1(<2)◂{ } ⊢ 2'(= a3◂ [ a2◂ [ a29◂ [ a9◂ [ ]]]] )
	mov rax,unt 
	mov rax,unt_1
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	jmp LB_4890
LB_4890:
	cmp BYTE [r8+6],0
	jnz LB_4888
	POP_GRM_SCC
	ret
LB_4888:
	POP_GRM_FAIL 
	ret
ETR_268:
	mov r9,0x0000_ffff_ffff_ffff
	and r9,[r13]
	call GRM_268
	ret
GRM_268:
	PUSH_GRM
	jmp LB_4893
LB_4892:
	add r14,1 
LB_4893:
	cmp r14,r9
	jge LB_4894
	JZ_SPC BYTE [r13+8+r14], LB_4892
LB_4894
	lea rax,[r14+3]
	cmp rax,r9
	jg LB_4897
	jmp LB_4898
LB_4897:
	mov r8,unt_1
	jmp LB_4895
LB_4898:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],226
	jnz LB_4899
	cmp BYTE [rdi+1],159
	jnz LB_4899
	cmp BYTE [rdi+2],166
	jnz LB_4899
	jmp LB_4900
LB_4899:
	mov r8,unt_1
	jmp LB_4895
LB_4900:
	add r14,3
	jmp LB_4896
LB_4895:
	add rsp,0
	jmp LB_4891
LB_4896:
	jmp LB_4902
LB_4901:
	add r14,1 
LB_4902:
	cmp r14,r9
	jge LB_4903
	JZ_SPC BYTE [r13+8+r14], LB_4901
LB_4903
	call GRM_269
	cmp BYTE [r8+6],0
	jnz LB_4906
	jmp LB_4907
LB_4906:
	jmp LB_4904
LB_4907:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a30◂ [ a9◂ [ ]] ) ⊢ 8'(= a30◂ [ a9◂ [ ]] )
; .mov_ptn 2'(= a30◂ [ a9◂ [ ]] ) ⊢ 8'(= a30◂ [ a9◂ [ ]] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_4905
LB_4904:
	add rsp,0
	jmp LB_4891
LB_4905:
	jmp LB_4909
LB_4908:
	add r14,1 
LB_4909:
	cmp r14,r9
	jge LB_4910
	JZ_SPC BYTE [r13+8+r14], LB_4908
LB_4910
	lea rax,[r14+3]
	cmp rax,r9
	jg LB_4913
	jmp LB_4914
LB_4913:
	mov r8,unt_1
	jmp LB_4911
LB_4914:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],226
	jnz LB_4915
	cmp BYTE [rdi+1],159
	jnz LB_4915
	cmp BYTE [rdi+2],167
	jnz LB_4915
	jmp LB_4916
LB_4915:
	mov r8,unt_1
	jmp LB_4911
LB_4916:
	add r14,3
	jmp LB_4912
LB_4911:
	add rsp,8
	jmp LB_4891
LB_4912:
	mov QWORD [rsp+8*1],r14
	mov r13,QWORD [rsp+16+8*1]
	mov r14,QWORD [rsp+8*1]
	jmp LB_4917
LB_4917
;; rsp=1 , %2580~1'(= r ) %2579~0'(= r ) %2578~8'(= a30◂ [ a9◂ [ ]] ) 
; #146 8'(= a30◂ [ a9◂ [ ]] ) ⊢ 0(<2)◂8'(= a30◂ [ a9◂ [ ]] )
;; rsp=1 , %2581~0(<2)◂8'(= a30◂ [ a9◂ [ ]] ) %2580~1'(= r ) %2579~0'(= r ) 
; #24 0(<2)◂8'(= a30◂ [ a9◂ [ ]] ) ⊢ 0(<2)◂0(<2)◂8'(= a30◂ [ a9◂ [ ]] )
;; rsp=1 , %2582~0(<2)◂0(<2)◂8'(= a30◂ [ a9◂ [ ]] ) %2580~1'(= r ) %2579~0'(= r ) 
; ∎ 0(<2)◂0(<2)◂8'(= a30◂ [ a9◂ [ ]] )
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂0(<2)◂8'(= a30◂ [ a9◂ [ ]] ) ⊢ 2'(= a3◂ [ a29◂ [ a9◂ [ ]]] )
; .mov_ptn 0(<2)◂0(<2)◂8'(= a30◂ [ a9◂ [ ]] ) ⊢ 2'(= a3◂ [ a29◂ [ a9◂ [ ]]] )
	mov rax,QWORD [rsp-8+8*1]
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,8
	jmp LB_4918
LB_4918:
	cmp BYTE [r8+6],0
	jnz LB_4891
	POP_GRM_SCC
	ret
LB_4891:
	RB_GRM
	jmp LB_4921
LB_4920:
	add r14,1 
LB_4921:
	cmp r14,r9
	jge LB_4922
	JZ_SPC BYTE [r13+8+r14], LB_4920
LB_4922
	call GRM_269
	cmp BYTE [r8+6],0
	jnz LB_4925
	jmp LB_4926
LB_4925:
	jmp LB_4923
LB_4926:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a30◂ [ a9◂ [ ]] ) ⊢ 8'(= a30◂ [ a9◂ [ ]] )
; .mov_ptn 2'(= a30◂ [ a9◂ [ ]] ) ⊢ 8'(= a30◂ [ a9◂ [ ]] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_4924
LB_4923:
	add rsp,0
	jmp LB_4919
LB_4924:
	mov QWORD [rsp+8*1],r14
	mov r13,QWORD [rsp+16+8*1]
	mov r14,QWORD [rsp+8*1]
	jmp LB_4927
LB_4927
;; rsp=1 , %2585~1'(= r ) %2584~0'(= r ) %2583~8'(= a30◂ [ a9◂ [ ]] ) 
; #145 8'(= a30◂ [ a9◂ [ ]] ) ⊢ 1(<2)◂8'(= a30◂ [ a9◂ [ ]] )
;; rsp=1 , %2586~1(<2)◂8'(= a30◂ [ a9◂ [ ]] ) %2585~1'(= r ) %2584~0'(= r ) 
; #24 1(<2)◂8'(= a30◂ [ a9◂ [ ]] ) ⊢ 0(<2)◂1(<2)◂8'(= a30◂ [ a9◂ [ ]] )
;; rsp=1 , %2587~0(<2)◂1(<2)◂8'(= a30◂ [ a9◂ [ ]] ) %2585~1'(= r ) %2584~0'(= r ) 
; ∎ 0(<2)◂1(<2)◂8'(= a30◂ [ a9◂ [ ]] )
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂1(<2)◂8'(= a30◂ [ a9◂ [ ]] ) ⊢ 2'(= a3◂ [ a29◂ [ a9◂ [ ]]] )
; .mov_ptn 0(<2)◂1(<2)◂8'(= a30◂ [ a9◂ [ ]] ) ⊢ 2'(= a3◂ [ a29◂ [ a9◂ [ ]]] )
	mov rax,QWORD [rsp-8+8*1]
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],1
	mov QWORD [rax+8],rdi
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,8
	jmp LB_4928
LB_4928:
	cmp BYTE [r8+6],0
	jnz LB_4919
	POP_GRM_SCC
	ret
LB_4919:
	POP_GRM_FAIL 
	ret
ETR_269:
	mov r9,0x0000_ffff_ffff_ffff
	and r9,[r13]
	call GRM_269
	ret
GRM_269:
	PUSH_GRM
	jmp LB_4931
LB_4930:
	add r14,1 
LB_4931:
	cmp r14,r9
	jge LB_4932
	JZ_SPC BYTE [r13+8+r14], LB_4930
LB_4932
	call GRM_69
	cmp BYTE [r8+6],0
	jnz LB_4935
	jmp LB_4936
LB_4935:
	jmp LB_4933
LB_4936:
	sub rsp,8
; .mov_ptn2 2'(= {| l |} ) ⊢ 8'(= {| l |} )
; .mov_ptn 2'(= {| l |} ) ⊢ 8'(= {| l |} )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_4934
LB_4933:
	add rsp,0
	jmp LB_4929
LB_4934:
	mov QWORD [rsp+8*1],r14
	mov r13,QWORD [rsp+16+8*1]
	mov r14,QWORD [rsp+8*1]
	jmp LB_4937
LB_4937
;; rsp=1 , %2590~1'(= r ) %2589~0'(= r ) %2588~8'(= {| l |} ) 
; #143 8'(= {| l |} ) ⊢ 1(<2)◂8'(= {| l |} )
;; rsp=1 , %2591~1(<2)◂8'(= {| l |} ) %2590~1'(= r ) %2589~0'(= r ) 
; #24 1(<2)◂8'(= {| l |} ) ⊢ 0(<2)◂1(<2)◂8'(= {| l |} )
;; rsp=1 , %2592~0(<2)◂1(<2)◂8'(= {| l |} ) %2590~1'(= r ) %2589~0'(= r ) 
; ∎ 0(<2)◂1(<2)◂8'(= {| l |} )
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂1(<2)◂8'(= {| l |} ) ⊢ 2'(= a3◂ [ a30◂ [ a9◂ [ ]]] )
; .mov_ptn 0(<2)◂1(<2)◂8'(= {| l |} ) ⊢ 2'(= a3◂ [ a30◂ [ a9◂ [ ]]] )
	mov rax,QWORD [rsp-8+8*1]
	mov BYTE [rax+6],1
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,8
	jmp LB_4938
LB_4938:
	cmp BYTE [r8+6],0
	jnz LB_4929
	POP_GRM_SCC
	ret
LB_4929:
	RB_GRM
	jmp LB_4941
LB_4940:
	add r14,1 
LB_4941:
	cmp r14,r9
	jge LB_4942
	JZ_SPC BYTE [r13+8+r14], LB_4940
LB_4942
	call GRM_191
	cmp BYTE [r8+6],0
	jnz LB_4945
	jmp LB_4946
LB_4945:
	jmp LB_4943
LB_4946:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a9◂ [ ] ) ⊢ 8'(= a9◂ [ ] )
; .mov_ptn 2'(= a9◂ [ ] ) ⊢ 8'(= a9◂ [ ] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_4944
LB_4943:
	add rsp,0
	jmp LB_4939
LB_4944:
	mov QWORD [rsp+8*1],r14
	mov r13,QWORD [rsp+16+8*1]
	mov r14,QWORD [rsp+8*1]
	jmp LB_4947
LB_4947
;; rsp=1 , %2595~1'(= r ) %2594~0'(= r ) %2593~8'(= a9◂ [ ] ) 
; #144 8'(= a9◂ [ ] ) ⊢ 0(<2)◂8'(= a9◂ [ ] )
;; rsp=1 , %2596~0(<2)◂8'(= a9◂ [ ] ) %2595~1'(= r ) %2594~0'(= r ) 
; #24 0(<2)◂8'(= a9◂ [ ] ) ⊢ 0(<2)◂0(<2)◂8'(= a9◂ [ ] )
;; rsp=1 , %2597~0(<2)◂0(<2)◂8'(= a9◂ [ ] ) %2595~1'(= r ) %2594~0'(= r ) 
; ∎ 0(<2)◂0(<2)◂8'(= a9◂ [ ] )
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂0(<2)◂8'(= a9◂ [ ] ) ⊢ 2'(= a3◂ [ a30◂ [ a9◂ [ ]]] )
; .mov_ptn 0(<2)◂0(<2)◂8'(= a9◂ [ ] ) ⊢ 2'(= a3◂ [ a30◂ [ a9◂ [ ]]] )
	mov rax,QWORD [rsp-8+8*1]
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,8
	jmp LB_4948
LB_4948:
	cmp BYTE [r8+6],0
	jnz LB_4939
	POP_GRM_SCC
	ret
LB_4939:
	POP_GRM_FAIL 
	ret
ETR_270:
	mov r9,0x0000_ffff_ffff_ffff
	and r9,[r13]
	call GRM_270
	ret
GRM_270:
	PUSH_GRM
	jmp LB_4951
LB_4950:
	add r14,1 
LB_4951:
	cmp r14,r9
	jge LB_4952
	JZ_SPC BYTE [r13+8+r14], LB_4950
LB_4952
	lea rax,[r14+4]
	cmp rax,r9
	jg LB_4955
	jmp LB_4956
LB_4955:
	mov r8,unt_1
	jmp LB_4953
LB_4956:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],226
	jnz LB_4957
	cmp BYTE [rdi+1],136
	jnz LB_4957
	cmp BYTE [rdi+2],144
	jnz LB_4957
	cmp BYTE [rdi+3],42
	jnz LB_4957
	jmp LB_4958
LB_4957:
	mov r8,unt_1
	jmp LB_4953
LB_4958:
	add r14,4
	jmp LB_4954
LB_4953:
	add rsp,0
	jmp LB_4949
LB_4954:
	mov QWORD [rsp+8*0],r14
	mov r13,QWORD [rsp+16+8*0]
	mov r14,QWORD [rsp+8*0]
	jmp LB_4959
LB_4959
;; rsp=0 , %2599~1'(= r ) %2598~0'(= r ) 
; #151 { } ⊢ 1(<3)◂{ }
;; rsp=0 , %2600~1(<3)◂{ } %2599~1'(= r ) %2598~0'(= r ) 
; #24 1(<3)◂{ } ⊢ 0(<2)◂1(<3)◂{ }
;; rsp=0 , %2601~0(<2)◂1(<3)◂{ } %2599~1'(= r ) %2598~0'(= r ) 
; ∎ 0(<2)◂1(<3)◂{ }
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂1(<3)◂{ } ⊢ 2'(= a3◂ [ a27◂ [ ]] )
; .mov_ptn 0(<2)◂1(<3)◂{ } ⊢ 2'(= a3◂ [ a27◂ [ ]] )
	mov rax,unt 
	mov rax,unt_1
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	jmp LB_4960
LB_4960:
	cmp BYTE [r8+6],0
	jnz LB_4949
	POP_GRM_SCC
	ret
LB_4949:
	RB_GRM
	jmp LB_4963
LB_4962:
	add r14,1 
LB_4963:
	cmp r14,r9
	jge LB_4964
	JZ_SPC BYTE [r13+8+r14], LB_4962
LB_4964
	lea rax,[r14+4]
	cmp rax,r9
	jg LB_4967
	jmp LB_4968
LB_4967:
	mov r8,unt_1
	jmp LB_4965
LB_4968:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],226
	jnz LB_4969
	cmp BYTE [rdi+1],136
	jnz LB_4969
	cmp BYTE [rdi+2],144
	jnz LB_4969
	cmp BYTE [rdi+3],35
	jnz LB_4969
	jmp LB_4970
LB_4969:
	mov r8,unt_1
	jmp LB_4965
LB_4970:
	add r14,4
	jmp LB_4966
LB_4965:
	add rsp,0
	jmp LB_4961
LB_4966:
	mov QWORD [rsp+8*0],r14
	mov r13,QWORD [rsp+16+8*0]
	mov r14,QWORD [rsp+8*0]
	jmp LB_4971
LB_4971
;; rsp=0 , %2603~1'(= r ) %2602~0'(= r ) 
; #150 { } ⊢ 2(<3)◂{ }
;; rsp=0 , %2604~2(<3)◂{ } %2603~1'(= r ) %2602~0'(= r ) 
; #24 2(<3)◂{ } ⊢ 0(<2)◂2(<3)◂{ }
;; rsp=0 , %2605~0(<2)◂2(<3)◂{ } %2603~1'(= r ) %2602~0'(= r ) 
; ∎ 0(<2)◂2(<3)◂{ }
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂2(<3)◂{ } ⊢ 2'(= a3◂ [ a27◂ [ ]] )
; .mov_ptn 0(<2)◂2(<3)◂{ } ⊢ 2'(= a3◂ [ a27◂ [ ]] )
	mov rax,unt 
	mov rax,unt_2
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	jmp LB_4972
LB_4972:
	cmp BYTE [r8+6],0
	jnz LB_4961
	POP_GRM_SCC
	ret
LB_4961:
	RB_GRM
	jmp LB_4975
LB_4974:
	add r14,1 
LB_4975:
	cmp r14,r9
	jge LB_4976
	JZ_SPC BYTE [r13+8+r14], LB_4974
LB_4976
	lea rax,[r14+3]
	cmp rax,r9
	jg LB_4979
	jmp LB_4980
LB_4979:
	mov r8,unt_1
	jmp LB_4977
LB_4980:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],226
	jnz LB_4981
	cmp BYTE [rdi+1],136
	jnz LB_4981
	cmp BYTE [rdi+2],144
	jnz LB_4981
	jmp LB_4982
LB_4981:
	mov r8,unt_1
	jmp LB_4977
LB_4982:
	add r14,3
	jmp LB_4978
LB_4977:
	add rsp,0
	jmp LB_4973
LB_4978:
	mov QWORD [rsp+8*0],r14
	mov r13,QWORD [rsp+16+8*0]
	mov r14,QWORD [rsp+8*0]
	jmp LB_4983
LB_4983
;; rsp=0 , %2607~1'(= r ) %2606~0'(= r ) 
; #152 { } ⊢ 0(<3)◂{ }
;; rsp=0 , %2608~0(<3)◂{ } %2607~1'(= r ) %2606~0'(= r ) 
; #24 0(<3)◂{ } ⊢ 0(<2)◂0(<3)◂{ }
;; rsp=0 , %2609~0(<2)◂0(<3)◂{ } %2607~1'(= r ) %2606~0'(= r ) 
; ∎ 0(<2)◂0(<3)◂{ }
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂0(<3)◂{ } ⊢ 2'(= a3◂ [ a27◂ [ ]] )
; .mov_ptn 0(<2)◂0(<3)◂{ } ⊢ 2'(= a3◂ [ a27◂ [ ]] )
	mov rax,unt 
	mov rax,unt_0
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	jmp LB_4984
LB_4984:
	cmp BYTE [r8+6],0
	jnz LB_4973
	POP_GRM_SCC
	ret
LB_4973:
	POP_GRM_FAIL 
	ret
ETR_271:
	mov r9,0x0000_ffff_ffff_ffff
	and r9,[r13]
	call GRM_271
	ret
GRM_271:
	PUSH_GRM
	jmp LB_4987
LB_4986:
	add r14,1 
LB_4987:
	cmp r14,r9
	jge LB_4988
	JZ_SPC BYTE [r13+8+r14], LB_4986
LB_4988
	lea rax,[r14+5]
	cmp rax,r9
	jg LB_4991
	jmp LB_4992
LB_4991:
	mov r8,unt_1
	jmp LB_4989
LB_4992:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],226
	jnz LB_4993
	cmp BYTE [rdi+1],136
	jnz LB_4993
	cmp BYTE [rdi+2],144
	jnz LB_4993
	cmp BYTE [rdi+3],46
	jnz LB_4993
	cmp BYTE [rdi+4],42
	jnz LB_4993
	jmp LB_4994
LB_4993:
	mov r8,unt_1
	jmp LB_4989
LB_4994:
	add r14,5
	jmp LB_4990
LB_4989:
	add rsp,0
	jmp LB_4985
LB_4990:
	mov QWORD [rsp+8*0],r14
	mov r13,QWORD [rsp+16+8*0]
	mov r14,QWORD [rsp+8*0]
	jmp LB_4995
LB_4995
;; rsp=0 , %2611~1'(= r ) %2610~0'(= r ) 
; #151 { } ⊢ 1(<3)◂{ }
;; rsp=0 , %2612~1(<3)◂{ } %2611~1'(= r ) %2610~0'(= r ) 
; #24 1(<3)◂{ } ⊢ 0(<2)◂1(<3)◂{ }
;; rsp=0 , %2613~0(<2)◂1(<3)◂{ } %2611~1'(= r ) %2610~0'(= r ) 
; ∎ 0(<2)◂1(<3)◂{ }
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂1(<3)◂{ } ⊢ 2'(= a3◂ [ a27◂ [ ]] )
; .mov_ptn 0(<2)◂1(<3)◂{ } ⊢ 2'(= a3◂ [ a27◂ [ ]] )
	mov rax,unt 
	mov rax,unt_1
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	jmp LB_4996
LB_4996:
	cmp BYTE [r8+6],0
	jnz LB_4985
	POP_GRM_SCC
	ret
LB_4985:
	RB_GRM
	jmp LB_4999
LB_4998:
	add r14,1 
LB_4999:
	cmp r14,r9
	jge LB_5000
	JZ_SPC BYTE [r13+8+r14], LB_4998
LB_5000
	lea rax,[r14+5]
	cmp rax,r9
	jg LB_5003
	jmp LB_5004
LB_5003:
	mov r8,unt_1
	jmp LB_5001
LB_5004:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],226
	jnz LB_5005
	cmp BYTE [rdi+1],136
	jnz LB_5005
	cmp BYTE [rdi+2],144
	jnz LB_5005
	cmp BYTE [rdi+3],46
	jnz LB_5005
	cmp BYTE [rdi+4],35
	jnz LB_5005
	jmp LB_5006
LB_5005:
	mov r8,unt_1
	jmp LB_5001
LB_5006:
	add r14,5
	jmp LB_5002
LB_5001:
	add rsp,0
	jmp LB_4997
LB_5002:
	mov QWORD [rsp+8*0],r14
	mov r13,QWORD [rsp+16+8*0]
	mov r14,QWORD [rsp+8*0]
	jmp LB_5007
LB_5007
;; rsp=0 , %2615~1'(= r ) %2614~0'(= r ) 
; #150 { } ⊢ 2(<3)◂{ }
;; rsp=0 , %2616~2(<3)◂{ } %2615~1'(= r ) %2614~0'(= r ) 
; #24 2(<3)◂{ } ⊢ 0(<2)◂2(<3)◂{ }
;; rsp=0 , %2617~0(<2)◂2(<3)◂{ } %2615~1'(= r ) %2614~0'(= r ) 
; ∎ 0(<2)◂2(<3)◂{ }
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂2(<3)◂{ } ⊢ 2'(= a3◂ [ a27◂ [ ]] )
; .mov_ptn 0(<2)◂2(<3)◂{ } ⊢ 2'(= a3◂ [ a27◂ [ ]] )
	mov rax,unt 
	mov rax,unt_2
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	jmp LB_5008
LB_5008:
	cmp BYTE [r8+6],0
	jnz LB_4997
	POP_GRM_SCC
	ret
LB_4997:
	RB_GRM
	jmp LB_5011
LB_5010:
	add r14,1 
LB_5011:
	cmp r14,r9
	jge LB_5012
	JZ_SPC BYTE [r13+8+r14], LB_5010
LB_5012
	lea rax,[r14+4]
	cmp rax,r9
	jg LB_5015
	jmp LB_5016
LB_5015:
	mov r8,unt_1
	jmp LB_5013
LB_5016:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],226
	jnz LB_5017
	cmp BYTE [rdi+1],136
	jnz LB_5017
	cmp BYTE [rdi+2],144
	jnz LB_5017
	cmp BYTE [rdi+3],46
	jnz LB_5017
	jmp LB_5018
LB_5017:
	mov r8,unt_1
	jmp LB_5013
LB_5018:
	add r14,4
	jmp LB_5014
LB_5013:
	add rsp,0
	jmp LB_5009
LB_5014:
	mov QWORD [rsp+8*0],r14
	mov r13,QWORD [rsp+16+8*0]
	mov r14,QWORD [rsp+8*0]
	jmp LB_5019
LB_5019
;; rsp=0 , %2619~1'(= r ) %2618~0'(= r ) 
; #152 { } ⊢ 0(<3)◂{ }
;; rsp=0 , %2620~0(<3)◂{ } %2619~1'(= r ) %2618~0'(= r ) 
; #24 0(<3)◂{ } ⊢ 0(<2)◂0(<3)◂{ }
;; rsp=0 , %2621~0(<2)◂0(<3)◂{ } %2619~1'(= r ) %2618~0'(= r ) 
; ∎ 0(<2)◂0(<3)◂{ }
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂0(<3)◂{ } ⊢ 2'(= a3◂ [ a27◂ [ ]] )
; .mov_ptn 0(<2)◂0(<3)◂{ } ⊢ 2'(= a3◂ [ a27◂ [ ]] )
	mov rax,unt 
	mov rax,unt_0
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	jmp LB_5020
LB_5020:
	cmp BYTE [r8+6],0
	jnz LB_5009
	POP_GRM_SCC
	ret
LB_5009:
	POP_GRM_FAIL 
	ret
ETR_272:
	mov r9,0x0000_ffff_ffff_ffff
	and r9,[r13]
	call GRM_272
	ret
GRM_272:
	PUSH_GRM
	jmp LB_5023
LB_5022:
	add r14,1 
LB_5023:
	cmp r14,r9
	jge LB_5024
	JZ_SPC BYTE [r13+8+r14], LB_5022
LB_5024
	call GRM_271
	cmp BYTE [r8+6],0
	jnz LB_5027
	jmp LB_5028
LB_5027:
	jmp LB_5025
LB_5028:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a27◂ [ ] ) ⊢ 8'(= a27◂ [ ] )
; .mov_ptn 2'(= a27◂ [ ] ) ⊢ 8'(= a27◂ [ ] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_5026
LB_5025:
	add rsp,0
	jmp LB_5021
LB_5026:
	jmp LB_5030
LB_5029:
	add r14,1 
LB_5030:
	cmp r14,r9
	jge LB_5031
	JZ_SPC BYTE [r13+8+r14], LB_5029
LB_5031
	call GRM_274
	cmp BYTE [r8+6],0
	jnz LB_5034
	jmp LB_5035
LB_5034:
	jmp LB_5032
LB_5035:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a3◂ [ {| l |}] ) ⊢ 9'(= a3◂ [ {| l |}] )
; .mov_ptn 2'(= a3◂ [ {| l |}] ) ⊢ 9'(= a3◂ [ {| l |}] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_5033
LB_5032:
	add rsp,8
	POP_GRM_FAIL
	ret
LB_5033:
	jmp LB_5037
LB_5036:
	add r14,1 
LB_5037:
	cmp r14,r9
	jge LB_5038
	JZ_SPC BYTE [r13+8+r14], LB_5036
LB_5038
	call GRM_266
	cmp BYTE [r8+6],0
	jnz LB_5041
	jmp LB_5042
LB_5041:
	jmp LB_5039
LB_5042:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a28◂ [ a9◂ [ ]] ) ⊢ 10'(= a28◂ [ a9◂ [ ]] )
; .mov_ptn 2'(= a28◂ [ a9◂ [ ]] ) ⊢ 10'(= a28◂ [ a9◂ [ ]] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_5040
LB_5039:
	add rsp,16
	POP_GRM_FAIL
	ret
LB_5040:
	jmp LB_5044
LB_5043:
	add r14,1 
LB_5044:
	cmp r14,r9
	jge LB_5045
	JZ_SPC BYTE [r13+8+r14], LB_5043
LB_5045
	call GRM_273
	cmp BYTE [r8+6],0
	jnz LB_5048
	jmp LB_5049
LB_5048:
	jmp LB_5046
LB_5049:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a3◂ [ a25◂ [ a9◂ [ ]{| l |}]] ) ⊢ 11'(= a3◂ [ a25◂ [ a9◂ [ ]{| l |}]] )
; .mov_ptn 2'(= a3◂ [ a25◂ [ a9◂ [ ]{| l |}]] ) ⊢ 11'(= a3◂ [ a25◂ [ a9◂ [ ]{| l |}]] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_5047
LB_5046:
	add rsp,24
	POP_GRM_FAIL
	ret
LB_5047:
	mov QWORD [rsp+8*4],r14
	mov r13,QWORD [rsp+16+8*4]
	mov r14,QWORD [rsp+8*4]
	jmp LB_5050
LB_5050
;; rsp=4 , %2627~1'(= r ) %2626~0'(= r ) %2625~11'(= a3◂ [ a25◂ [ a9◂ [ ]{| l |}]] ) %2624~10'(= a28◂ [ a9◂ [ ]] ) %2623~9'(= a3◂ [ {| l |}] ) %2622~8'(= a27◂ [ ] ) 
; #155 { 9'(= a3◂ [ {| l |}] ) 8'(= a27◂ [ ] ) 10'(= a28◂ [ a9◂ [ ]] ) 11'(= a3◂ [ a25◂ [ a9◂ [ ]{| l |}]] ) } ⊢ 1(<2)◂{ 9'(= a3◂ [ {| l |}] ) 8'(= a27◂ [ ] ) 10'(= a28◂ [ a9◂ [ ]] ) 11'(= a3◂ [ a25◂ [ a9◂ [ ]{| l |}]] ) }
;; rsp=4 , %2628~1(<2)◂{ 9'(= a3◂ [ {| l |}] ) 8'(= a27◂ [ ] ) 10'(= a28◂ [ a9◂ [ ]] ) 11'(= a3◂ [ a25◂ [ a9◂ [ ]{| l |}]] ) } %2627~1'(= r ) %2626~0'(= r ) 
; #24 1(<2)◂{ 9'(= a3◂ [ {| l |}] ) 8'(= a27◂ [ ] ) 10'(= a28◂ [ a9◂ [ ]] ) 11'(= a3◂ [ a25◂ [ a9◂ [ ]{| l |}]] ) } ⊢ 0(<2)◂1(<2)◂{ 9'(= a3◂ [ {| l |}] ) 8'(= a27◂ [ ] ) 10'(= a28◂ [ a9◂ [ ]] ) 11'(= a3◂ [ a25◂ [ a9◂ [ ]{| l |}]] ) }
;; rsp=4 , %2629~0(<2)◂1(<2)◂{ 9'(= a3◂ [ {| l |}] ) 8'(= a27◂ [ ] ) 10'(= a28◂ [ a9◂ [ ]] ) 11'(= a3◂ [ a25◂ [ a9◂ [ ]{| l |}]] ) } %2627~1'(= r ) %2626~0'(= r ) 
; ∎ 0(<2)◂1(<2)◂{ 9'(= a3◂ [ {| l |}] ) 8'(= a27◂ [ ] ) 10'(= a28◂ [ a9◂ [ ]] ) 11'(= a3◂ [ a25◂ [ a9◂ [ ]{| l |}]] ) }
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂1(<2)◂{ 9'(= a3◂ [ {| l |}] ) 8'(= a27◂ [ ] ) 10'(= a28◂ [ a9◂ [ ]] ) 11'(= a3◂ [ a25◂ [ a9◂ [ ]{| l |}]] ) } ⊢ 2'(= a3◂ [ a25◂ [ a9◂ [ ]{| l |}]] )
; .mov_ptn 0(<2)◂1(<2)◂{ 9'(= a3◂ [ {| l |}] ) 8'(= a27◂ [ ] ) 10'(= a28◂ [ a9◂ [ ]] ) 11'(= a3◂ [ a25◂ [ a9◂ [ ]{| l |}]] ) } ⊢ 2'(= a3◂ [ a25◂ [ a9◂ [ ]{| l |}]] )
	ALC_RCD 4, rax
	mov r13,rax
	mov rax,QWORD [rsp-8+8*3]
	mov QWORD [r13+8+8*0],rax
	mov rax,QWORD [rsp-8+8*4]
	mov QWORD [r13+8+8*1],rax
	mov rax,QWORD [rsp-8+8*2]
	mov QWORD [r13+8+8*2],rax
	mov rax,QWORD [rsp-8+8*1]
	mov QWORD [r13+8+8*3],rax
	mov rax,r13
	mov BYTE [rax+6],1
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,32
	jmp LB_5051
LB_5051:
	cmp BYTE [r8+6],0
	jnz LB_5021
	POP_GRM_SCC
	ret
LB_5021:
	RB_GRM
	jmp LB_5054
LB_5053:
	add r14,1 
LB_5054:
	cmp r14,r9
	jge LB_5055
	JZ_SPC BYTE [r13+8+r14], LB_5053
LB_5055
	call GRM_270
	cmp BYTE [r8+6],0
	jnz LB_5058
	jmp LB_5059
LB_5058:
	jmp LB_5056
LB_5059:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a27◂ [ ] ) ⊢ 8'(= a27◂ [ ] )
; .mov_ptn 2'(= a27◂ [ ] ) ⊢ 8'(= a27◂ [ ] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_5057
LB_5056:
	add rsp,0
	jmp LB_5052
LB_5057:
	jmp LB_5061
LB_5060:
	add r14,1 
LB_5061:
	cmp r14,r9
	jge LB_5062
	JZ_SPC BYTE [r13+8+r14], LB_5060
LB_5062
	call GRM_274
	cmp BYTE [r8+6],0
	jnz LB_5065
	jmp LB_5066
LB_5065:
	jmp LB_5063
LB_5066:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a3◂ [ {| l |}] ) ⊢ 9'(= a3◂ [ {| l |}] )
; .mov_ptn 2'(= a3◂ [ {| l |}] ) ⊢ 9'(= a3◂ [ {| l |}] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_5064
LB_5063:
	add rsp,8
	jmp LB_5052
LB_5064:
	jmp LB_5068
LB_5067:
	add r14,1 
LB_5068:
	cmp r14,r9
	jge LB_5069
	JZ_SPC BYTE [r13+8+r14], LB_5067
LB_5069
	call GRM_266
	cmp BYTE [r8+6],0
	jnz LB_5072
	jmp LB_5073
LB_5072:
	jmp LB_5070
LB_5073:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a28◂ [ a9◂ [ ]] ) ⊢ 10'(= a28◂ [ a9◂ [ ]] )
; .mov_ptn 2'(= a28◂ [ a9◂ [ ]] ) ⊢ 10'(= a28◂ [ a9◂ [ ]] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_5071
LB_5070:
	add rsp,16
	jmp LB_5052
LB_5071:
	jmp LB_5075
LB_5074:
	add r14,1 
LB_5075:
	cmp r14,r9
	jge LB_5076
	JZ_SPC BYTE [r13+8+r14], LB_5074
LB_5076
	call GRM_273
	cmp BYTE [r8+6],0
	jnz LB_5079
	jmp LB_5080
LB_5079:
	jmp LB_5077
LB_5080:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a3◂ [ a25◂ [ a9◂ [ ]{| l |}]] ) ⊢ 11'(= a3◂ [ a25◂ [ a9◂ [ ]{| l |}]] )
; .mov_ptn 2'(= a3◂ [ a25◂ [ a9◂ [ ]{| l |}]] ) ⊢ 11'(= a3◂ [ a25◂ [ a9◂ [ ]{| l |}]] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_5078
LB_5077:
	add rsp,24
	jmp LB_5052
LB_5078:
	jmp LB_5082
LB_5081:
	add r14,1 
LB_5082:
	cmp r14,r9
	jge LB_5083
	JZ_SPC BYTE [r13+8+r14], LB_5081
LB_5083
	call GRM_272
	cmp BYTE [r8+6],0
	jnz LB_5086
	jmp LB_5087
LB_5086:
	jmp LB_5084
LB_5087:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a25◂ [ a9◂ [ ]{| l |}] ) ⊢ 12'(= a25◂ [ a9◂ [ ]{| l |}] )
; .mov_ptn 2'(= a25◂ [ a9◂ [ ]{| l |}] ) ⊢ 12'(= a25◂ [ a9◂ [ ]{| l |}] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_5085
LB_5084:
	add rsp,32
	jmp LB_5052
LB_5085:
	mov QWORD [rsp+8*5],r14
	mov r13,QWORD [rsp+16+8*5]
	mov r14,QWORD [rsp+8*5]
	jmp LB_5088
LB_5088
;; rsp=5 , %2636~1'(= r ) %2635~0'(= r ) %2634~12'(= a25◂ [ a9◂ [ ]{| l |}] ) %2633~11'(= a3◂ [ a25◂ [ a9◂ [ ]{| l |}]] ) %2632~10'(= a28◂ [ a9◂ [ ]] ) %2631~9'(= a3◂ [ {| l |}] ) %2630~8'(= a27◂ [ ] ) 
; #156 { 9'(= a3◂ [ {| l |}] ) 8'(= a27◂ [ ] ) 10'(= a28◂ [ a9◂ [ ]] ) 11'(= a3◂ [ a25◂ [ a9◂ [ ]{| l |}]] ) 12'(= a25◂ [ a9◂ [ ]{| l |}] ) } ⊢ 0(<2)◂{ 9'(= a3◂ [ {| l |}] ) 8'(= a27◂ [ ] ) 10'(= a28◂ [ a9◂ [ ]] ) 11'(= a3◂ [ a25◂ [ a9◂ [ ]{| l |}]] ) 12'(= a25◂ [ a9◂ [ ]{| l |}] ) }
;; rsp=5 , %2637~0(<2)◂{ 9'(= a3◂ [ {| l |}] ) 8'(= a27◂ [ ] ) 10'(= a28◂ [ a9◂ [ ]] ) 11'(= a3◂ [ a25◂ [ a9◂ [ ]{| l |}]] ) 12'(= a25◂ [ a9◂ [ ]{| l |}] ) } %2636~1'(= r ) %2635~0'(= r ) 
; #24 0(<2)◂{ 9'(= a3◂ [ {| l |}] ) 8'(= a27◂ [ ] ) 10'(= a28◂ [ a9◂ [ ]] ) 11'(= a3◂ [ a25◂ [ a9◂ [ ]{| l |}]] ) 12'(= a25◂ [ a9◂ [ ]{| l |}] ) } ⊢ 0(<2)◂0(<2)◂{ 9'(= a3◂ [ {| l |}] ) 8'(= a27◂ [ ] ) 10'(= a28◂ [ a9◂ [ ]] ) 11'(= a3◂ [ a25◂ [ a9◂ [ ]{| l |}]] ) 12'(= a25◂ [ a9◂ [ ]{| l |}] ) }
;; rsp=5 , %2638~0(<2)◂0(<2)◂{ 9'(= a3◂ [ {| l |}] ) 8'(= a27◂ [ ] ) 10'(= a28◂ [ a9◂ [ ]] ) 11'(= a3◂ [ a25◂ [ a9◂ [ ]{| l |}]] ) 12'(= a25◂ [ a9◂ [ ]{| l |}] ) } %2636~1'(= r ) %2635~0'(= r ) 
; ∎ 0(<2)◂0(<2)◂{ 9'(= a3◂ [ {| l |}] ) 8'(= a27◂ [ ] ) 10'(= a28◂ [ a9◂ [ ]] ) 11'(= a3◂ [ a25◂ [ a9◂ [ ]{| l |}]] ) 12'(= a25◂ [ a9◂ [ ]{| l |}] ) }
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂0(<2)◂{ 9'(= a3◂ [ {| l |}] ) 8'(= a27◂ [ ] ) 10'(= a28◂ [ a9◂ [ ]] ) 11'(= a3◂ [ a25◂ [ a9◂ [ ]{| l |}]] ) 12'(= a25◂ [ a9◂ [ ]{| l |}] ) } ⊢ 2'(= a3◂ [ a25◂ [ a9◂ [ ]{| l |}]] )
; .mov_ptn 0(<2)◂0(<2)◂{ 9'(= a3◂ [ {| l |}] ) 8'(= a27◂ [ ] ) 10'(= a28◂ [ a9◂ [ ]] ) 11'(= a3◂ [ a25◂ [ a9◂ [ ]{| l |}]] ) 12'(= a25◂ [ a9◂ [ ]{| l |}] ) } ⊢ 2'(= a3◂ [ a25◂ [ a9◂ [ ]{| l |}]] )
	ALC_RCD 5, rax
	mov r13,rax
	mov rax,QWORD [rsp-8+8*4]
	mov QWORD [r13+8+8*0],rax
	mov rax,QWORD [rsp-8+8*5]
	mov QWORD [r13+8+8*1],rax
	mov rax,QWORD [rsp-8+8*3]
	mov QWORD [r13+8+8*2],rax
	mov rax,QWORD [rsp-8+8*2]
	mov QWORD [r13+8+8*3],rax
	mov rax,QWORD [rsp-8+8*1]
	mov QWORD [r13+8+8*4],rax
	mov rax,r13
	mov BYTE [rax+6],0
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,40
	jmp LB_5089
LB_5089:
	cmp BYTE [r8+6],0
	jnz LB_5052
	POP_GRM_SCC
	ret
LB_5052:
	POP_GRM_FAIL 
	ret
ETR_273:
	mov r9,0x0000_ffff_ffff_ffff
	and r9,[r13]
	call GRM_273
	ret
GRM_273:
	PUSH_GRM
	jmp LB_5092
LB_5091:
	add r14,1 
LB_5092:
	cmp r14,r9
	jge LB_5093
	JZ_SPC BYTE [r13+8+r14], LB_5091
LB_5093
	lea rax,[r14+1]
	cmp rax,r9
	jg LB_5096
	jmp LB_5097
LB_5096:
	mov r8,unt_1
	jmp LB_5094
LB_5097:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],59
	jnz LB_5098
	jmp LB_5099
LB_5098:
	mov r8,unt_1
	jmp LB_5094
LB_5099:
	add r14,1
	jmp LB_5095
LB_5094:
	add rsp,0
	jmp LB_5090
LB_5095:
	jmp LB_5101
LB_5100:
	add r14,1 
LB_5101:
	cmp r14,r9
	jge LB_5102
	JZ_SPC BYTE [r13+8+r14], LB_5100
LB_5102
	call GRM_272
	cmp BYTE [r8+6],0
	jnz LB_5105
	jmp LB_5106
LB_5105:
	jmp LB_5103
LB_5106:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a25◂ [ a9◂ [ ]{| l |}] ) ⊢ 8'(= a25◂ [ a9◂ [ ]{| l |}] )
; .mov_ptn 2'(= a25◂ [ a9◂ [ ]{| l |}] ) ⊢ 8'(= a25◂ [ a9◂ [ ]{| l |}] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_5104
LB_5103:
	add rsp,0
	jmp LB_5090
LB_5104:
	mov QWORD [rsp+8*1],r14
	mov r13,QWORD [rsp+16+8*1]
	mov r14,QWORD [rsp+8*1]
	jmp LB_5107
LB_5107
;; rsp=1 , %2641~1'(= r ) %2640~0'(= r ) %2639~8'(= a25◂ [ a9◂ [ ]{| l |}] ) 
; #24 8'(= a25◂ [ a9◂ [ ]{| l |}] ) ⊢ 0(<2)◂8'(= a25◂ [ a9◂ [ ]{| l |}] )
;; rsp=1 , %2642~0(<2)◂8'(= a25◂ [ a9◂ [ ]{| l |}] ) %2641~1'(= r ) %2640~0'(= r ) 
; #24 0(<2)◂8'(= a25◂ [ a9◂ [ ]{| l |}] ) ⊢ 0(<2)◂0(<2)◂8'(= a25◂ [ a9◂ [ ]{| l |}] )
;; rsp=1 , %2643~0(<2)◂0(<2)◂8'(= a25◂ [ a9◂ [ ]{| l |}] ) %2641~1'(= r ) %2640~0'(= r ) 
; ∎ 0(<2)◂0(<2)◂8'(= a25◂ [ a9◂ [ ]{| l |}] )
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂0(<2)◂8'(= a25◂ [ a9◂ [ ]{| l |}] ) ⊢ 2'(= a3◂ [ a3◂ [ a25◂ [ a9◂ [ ]{| l |}]]] )
; .mov_ptn 0(<2)◂0(<2)◂8'(= a25◂ [ a9◂ [ ]{| l |}] ) ⊢ 2'(= a3◂ [ a3◂ [ a25◂ [ a9◂ [ ]{| l |}]]] )
	mov rax,QWORD [rsp-8+8*1]
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,8
	jmp LB_5108
LB_5108:
	cmp BYTE [r8+6],0
	jnz LB_5090
	POP_GRM_SCC
	ret
LB_5090:
	RB_GRM
	mov QWORD [rsp+8*0],r14
	mov r13,QWORD [rsp+16+8*0]
	mov r14,QWORD [rsp+8*0]
	jmp LB_5110
LB_5110
;; rsp=0 , %2645~1'(= r ) %2644~0'(= r ) 
; #25 { } ⊢ 1(<2)◂{ }
;; rsp=0 , %2646~1(<2)◂{ } %2645~1'(= r ) %2644~0'(= r ) 
; #24 1(<2)◂{ } ⊢ 0(<2)◂1(<2)◂{ }
;; rsp=0 , %2647~0(<2)◂1(<2)◂{ } %2645~1'(= r ) %2644~0'(= r ) 
; ∎ 0(<2)◂1(<2)◂{ }
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂1(<2)◂{ } ⊢ 2'(= a3◂ [ a3◂ [ a25◂ [ a9◂ [ ]{| l |}]]] )
; .mov_ptn 0(<2)◂1(<2)◂{ } ⊢ 2'(= a3◂ [ a3◂ [ a25◂ [ a9◂ [ ]{| l |}]]] )
	mov rax,unt 
	mov rax,unt_1
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	jmp LB_5111
LB_5111:
	cmp BYTE [r8+6],0
	jnz LB_5109
	POP_GRM_SCC
	ret
LB_5109:
	POP_GRM_FAIL 
	ret
ETR_274:
	mov r9,0x0000_ffff_ffff_ffff
	and r9,[r13]
	call GRM_274
	ret
GRM_274:
	PUSH_GRM
	jmp LB_5114
LB_5113:
	add r14,1 
LB_5114:
	cmp r14,r9
	jge LB_5115
	JZ_SPC BYTE [r13+8+r14], LB_5113
LB_5115
	call GRM_76
	cmp BYTE [r8+6],0
	jnz LB_5118
	jmp LB_5119
LB_5118:
	jmp LB_5116
LB_5119:
	sub rsp,8
; .mov_ptn2 2'(= {| l |} ) ⊢ 8'(= {| l |} )
; .mov_ptn 2'(= {| l |} ) ⊢ 8'(= {| l |} )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_5117
LB_5116:
	add rsp,0
	jmp LB_5112
LB_5117:
	jmp LB_5121
LB_5120:
	add r14,1 
LB_5121:
	cmp r14,r9
	jge LB_5122
	JZ_SPC BYTE [r13+8+r14], LB_5120
LB_5122
	lea rax,[r14+1]
	cmp rax,r9
	jg LB_5125
	jmp LB_5126
LB_5125:
	mov r8,unt_1
	jmp LB_5123
LB_5126:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],58
	jnz LB_5127
	jmp LB_5128
LB_5127:
	mov r8,unt_1
	jmp LB_5123
LB_5128:
	add r14,1
	jmp LB_5124
LB_5123:
	add rsp,8
	jmp LB_5112
LB_5124:
	mov QWORD [rsp+8*1],r14
	mov r13,QWORD [rsp+16+8*1]
	mov r14,QWORD [rsp+8*1]
	jmp LB_5129
LB_5129
;; rsp=1 , %2650~1'(= r ) %2649~0'(= r ) %2648~8'(= {| l |} ) 
; #24 8'(= {| l |} ) ⊢ 0(<2)◂8'(= {| l |} )
;; rsp=1 , %2651~0(<2)◂8'(= {| l |} ) %2650~1'(= r ) %2649~0'(= r ) 
; #24 0(<2)◂8'(= {| l |} ) ⊢ 0(<2)◂0(<2)◂8'(= {| l |} )
;; rsp=1 , %2652~0(<2)◂0(<2)◂8'(= {| l |} ) %2650~1'(= r ) %2649~0'(= r ) 
; ∎ 0(<2)◂0(<2)◂8'(= {| l |} )
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂0(<2)◂8'(= {| l |} ) ⊢ 2'(= a3◂ [ a3◂ [ {| l |}]] )
; .mov_ptn 0(<2)◂0(<2)◂8'(= {| l |} ) ⊢ 2'(= a3◂ [ a3◂ [ {| l |}]] )
	mov rax,QWORD [rsp-8+8*1]
	mov BYTE [rax+6],0
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,8
	jmp LB_5130
LB_5130:
	cmp BYTE [r8+6],0
	jnz LB_5112
	POP_GRM_SCC
	ret
LB_5112:
	RB_GRM
	mov QWORD [rsp+8*0],r14
	mov r13,QWORD [rsp+16+8*0]
	mov r14,QWORD [rsp+8*0]
	jmp LB_5132
LB_5132
;; rsp=0 , %2654~1'(= r ) %2653~0'(= r ) 
; #25 { } ⊢ 1(<2)◂{ }
;; rsp=0 , %2655~1(<2)◂{ } %2654~1'(= r ) %2653~0'(= r ) 
; #24 1(<2)◂{ } ⊢ 0(<2)◂1(<2)◂{ }
;; rsp=0 , %2656~0(<2)◂1(<2)◂{ } %2654~1'(= r ) %2653~0'(= r ) 
; ∎ 0(<2)◂1(<2)◂{ }
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂1(<2)◂{ } ⊢ 2'(= a3◂ [ a3◂ [ {| l |}]] )
; .mov_ptn 0(<2)◂1(<2)◂{ } ⊢ 2'(= a3◂ [ a3◂ [ {| l |}]] )
	mov rax,unt 
	mov rax,unt_1
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	jmp LB_5133
LB_5133:
	cmp BYTE [r8+6],0
	jnz LB_5131
	POP_GRM_SCC
	ret
LB_5131:
	POP_GRM_FAIL 
	ret
LB_5137:
	movzx rax,BYTE [r8+6]
	jmp QWORD [LB_5141+8*rax]
LB_5141: dq LB_5139,LB_5140
LB_5139:
	mov rdi,LB_5143
	call emt_stg 
	mov r8,QWORD [r8+8]
	call LB_5144
	jmp LB_5142
LB_5140:
	mov rdi,LB_5145
	call emt_stg 
	mov rdi,fmt_rcd_box_l
	call emt_stg
	mov rdi,fmt_rcd_r
	call emt_stg
	jmp LB_5142
LB_5142:
	ret
LB_5144:
	movzx rax,BYTE [r8+6]
	jmp QWORD [LB_5148+8*rax]
LB_5148: dq LB_5146,LB_5147
LB_5146:
	mov rdi,LB_5150
	call emt_stg 
	mov r8,QWORD [r8+8]
	call LB_5151
	jmp LB_5149
LB_5147:
	mov rdi,LB_5152
	call emt_stg 
	mov r8,QWORD [r8+8]
	call LB_5153
	jmp LB_5149
LB_5149:
	ret
LB_5153:
	movzx rax,BYTE [r8+6]
	jmp QWORD [LB_5156+8*rax]
LB_5156: dq LB_5154,LB_5155
LB_5154:
	mov rdi,LB_5158
	call emt_stg 
	mov rdi,fmt_rcd_box_l
	call emt_stg
	push r8
	mov r8,QWORD [r8+8+8*0]
	mov rdi,fmt_rcd_box_l
	call emt_stg
	push r8
	mov r8,QWORD [r8+8+8*0]
	mov rdi,r8 
	call emt_r64 
	pop r8 
	mov rdi,fmt_spc 
	call emt_stg 
	push r8
	mov r8,QWORD [r8+8+8*1]
	mov rdi,r8 
	call emt_r64 
	pop r8 
	mov rdi,fmt_spc 
	call emt_stg 
	push r8
	mov r8,QWORD [r8+8+8*2]
	mov rdi,r8
	call emt_s8
	pop r8 
	mov rdi,fmt_spc 
	call emt_stg 
	mov rdi,fmt_rcd_r
	call emt_stg
	pop r8 
	mov rdi,fmt_spc 
	call emt_stg 
	push r8
	mov r8,QWORD [r8+8+8*1]
	call LB_5153
	pop r8 
	mov rdi,fmt_spc 
	call emt_stg 
	mov rdi,fmt_rcd_r
	call emt_stg
	jmp LB_5157
LB_5155:
	mov rdi,LB_5159
	call emt_stg 
	mov rdi,fmt_rcd_box_l
	call emt_stg
	mov rdi,fmt_rcd_r
	call emt_stg
	jmp LB_5157
LB_5157:
	ret
LB_5151:
	movzx rax,BYTE [r8+6]
	jmp QWORD [LB_5162+8*rax]
LB_5162: dq LB_5160,LB_5161
LB_5160:
	mov rdi,LB_5164
	call emt_stg 
	mov rdi,fmt_rcd_box_l
	call emt_stg
	push r8
	mov r8,QWORD [r8+8+8*0]
	call LB_5165
	pop r8 
	mov rdi,fmt_spc 
	call emt_stg 
	push r8
	mov r8,QWORD [r8+8+8*1]
	call LB_5151
	pop r8 
	mov rdi,fmt_spc 
	call emt_stg 
	mov rdi,fmt_rcd_r
	call emt_stg
	jmp LB_5163
LB_5161:
	mov rdi,LB_5166
	call emt_stg 
	mov rdi,fmt_rcd_box_l
	call emt_stg
	mov rdi,fmt_rcd_r
	call emt_stg
	jmp LB_5163
LB_5163:
	ret
LB_5165:
	movzx rax,BYTE [r8+6]
	jmp QWORD [LB_5173+8*rax]
LB_5173: dq LB_5167,LB_5168,LB_5169,LB_5170,LB_5171,LB_5172
LB_5167:
	mov rdi,LB_5175
	call emt_stg 
	mov rdi,fmt_rcd_box_l
	call emt_stg
	push r8
	mov r8,QWORD [r8+8+8*0]
	mov rdi,r8
	call emt_s8
	pop r8 
	mov rdi,fmt_spc 
	call emt_stg 
	push r8
	mov r8,QWORD [r8+8+8*1]
	call LB_5176
	pop r8 
	mov rdi,fmt_spc 
	call emt_stg 
	mov rdi,fmt_rcd_r
	call emt_stg
	jmp LB_5174
LB_5168:
	mov rdi,LB_5177
	call emt_stg 
	mov r8,QWORD [r8+8]
	call LB_5178
	jmp LB_5174
LB_5169:
	mov rdi,LB_5179
	call emt_stg 
	mov rdi,fmt_rcd_box_l
	call emt_stg
	push r8
	mov r8,QWORD [r8+8+8*0]
	mov rdi,r8
	call emt_s8
	pop r8 
	mov rdi,fmt_spc 
	call emt_stg 
	push r8
	mov r8,QWORD [r8+8+8*1]
	call LB_5180
	pop r8 
	mov rdi,fmt_spc 
	call emt_stg 
	mov rdi,fmt_rcd_r
	call emt_stg
	jmp LB_5174
LB_5170:
	mov rdi,LB_5181
	call emt_stg 
	mov r8,QWORD [r8+8]
	call LB_5182
	jmp LB_5174
LB_5171:
	mov rdi,LB_5183
	call emt_stg 
	mov rdi,fmt_rcd_box_l
	call emt_stg
	push r8
	mov r8,QWORD [r8+8+8*0]
	mov rdi,r8
	call emt_s8
	pop r8 
	mov rdi,fmt_spc 
	call emt_stg 
	push r8
	mov r8,QWORD [r8+8+8*1]
	call LB_5184
	pop r8 
	mov rdi,fmt_spc 
	call emt_stg 
	mov rdi,fmt_rcd_r
	call emt_stg
	jmp LB_5174
LB_5172:
	mov rdi,LB_5185
	call emt_stg 
	mov r8,QWORD [r8+8]
	call LB_5186
	jmp LB_5174
LB_5174:
	ret
LB_5186:
	movzx rax,BYTE [r8+6]
	jmp QWORD [LB_5189+8*rax]
LB_5189: dq LB_5187,LB_5188
LB_5187:
	mov rdi,LB_5191
	call emt_stg 
	mov rdi,fmt_rcd_box_l
	call emt_stg
	push r8
	mov r8,QWORD [r8+8+8*0]
	mov rdi,fmt_rcd_box_l
	call emt_stg
	push r8
	mov r8,QWORD [r8+8+8*0]
	mov rdi,r8
	call emt_s8
	pop r8 
	mov rdi,fmt_spc 
	call emt_stg 
	push r8
	mov r8,QWORD [r8+8+8*1]
	call LB_5184
	pop r8 
	mov rdi,fmt_spc 
	call emt_stg 
	mov rdi,fmt_rcd_r
	call emt_stg
	pop r8 
	mov rdi,fmt_spc 
	call emt_stg 
	push r8
	mov r8,QWORD [r8+8+8*1]
	call LB_5186
	pop r8 
	mov rdi,fmt_spc 
	call emt_stg 
	mov rdi,fmt_rcd_r
	call emt_stg
	jmp LB_5190
LB_5188:
	mov rdi,LB_5192
	call emt_stg 
	mov rdi,fmt_rcd_box_l
	call emt_stg
	mov rdi,fmt_rcd_r
	call emt_stg
	jmp LB_5190
LB_5190:
	ret
LB_5184:
	movzx rax,BYTE [r8+6]
	jmp QWORD [LB_5195+8*rax]
LB_5195: dq LB_5193,LB_5194
LB_5193:
	mov rdi,LB_5197
	call emt_stg 
	mov rdi,fmt_rcd_box_l
	call emt_stg
	push r8
	mov r8,QWORD [r8+8+8*0]
	call LB_5198
	pop r8 
	mov rdi,fmt_spc 
	call emt_stg 
	push r8
	mov r8,QWORD [r8+8+8*1]
	call LB_5199
	pop r8 
	mov rdi,fmt_spc 
	call emt_stg 
	mov rdi,fmt_rcd_r
	call emt_stg
	jmp LB_5196
LB_5194:
	mov rdi,LB_5200
	call emt_stg 
	mov rdi,fmt_rcd_box_l
	call emt_stg
	push r8
	mov r8,QWORD [r8+8+8*0]
	call LB_5198
	pop r8 
	mov rdi,fmt_spc 
	call emt_stg 
	push r8
	mov r8,QWORD [r8+8+8*1]
	call LB_5201
	pop r8 
	mov rdi,fmt_spc 
	call emt_stg 
	mov rdi,fmt_rcd_r
	call emt_stg
	jmp LB_5196
LB_5196:
	ret
LB_5201:
	movzx rax,BYTE [r8+6]
	jmp QWORD [LB_5207+8*rax]
LB_5207: dq LB_5202,LB_5203,LB_5204,LB_5205,LB_5206
LB_5202:
	mov rdi,LB_5209
	call emt_stg 
	mov r8,QWORD [r8+8]
	call LB_5210
	jmp LB_5208
LB_5203:
	mov rdi,LB_5211
	call emt_stg 
	mov rdi,fmt_rcd_box_l
	call emt_stg
	push r8
	mov r8,QWORD [r8+8+8*0]
	call LB_5201
	pop r8 
	mov rdi,fmt_spc 
	call emt_stg 
	push r8
	mov r8,QWORD [r8+8+8*1]
	call LB_5201
	pop r8 
	mov rdi,fmt_spc 
	call emt_stg 
	mov rdi,fmt_rcd_r
	call emt_stg
	jmp LB_5208
LB_5204:
	mov rdi,LB_5212
	call emt_stg 
	mov rdi,fmt_rcd_box_l
	call emt_stg
	push r8
	mov r8,QWORD [r8+8+8*0]
	call LB_5201
	pop r8 
	mov rdi,fmt_spc 
	call emt_stg 
	push r8
	mov r8,QWORD [r8+8+8*1]
	call LB_5201
	pop r8 
	mov rdi,fmt_spc 
	call emt_stg 
	mov rdi,fmt_rcd_r
	call emt_stg
	jmp LB_5208
LB_5205:
	mov rdi,LB_5213
	call emt_stg 
	mov r8,QWORD [r8+8]
	call LB_5214
	jmp LB_5208
LB_5206:
	mov rdi,LB_5215
	call emt_stg 
	mov rdi,r8
	call emt_s8
	jmp LB_5208
LB_5208:
	ret
LB_5214:
	movzx rax,BYTE [r8+6]
	jmp QWORD [LB_5218+8*rax]
LB_5218: dq LB_5216,LB_5217
LB_5216:
	mov rdi,LB_5220
	call emt_stg 
	mov rdi,fmt_rcd_box_l
	call emt_stg
	push r8
	mov r8,QWORD [r8+8+8*0]
	mov rdi,r8
	call emt_s8
	pop r8 
	mov rdi,fmt_spc 
	call emt_stg 
	push r8
	mov r8,QWORD [r8+8+8*1]
	call LB_5214
	pop r8 
	mov rdi,fmt_spc 
	call emt_stg 
	mov rdi,fmt_rcd_r
	call emt_stg
	jmp LB_5219
LB_5217:
	mov rdi,LB_5221
	call emt_stg 
	mov rdi,r8
	call emt_s8
	jmp LB_5219
LB_5219:
	ret
LB_5210:
	movzx rax,BYTE [r8+6]
	jmp QWORD [LB_5224+8*rax]
LB_5224: dq LB_5222,LB_5223
LB_5222:
	mov rdi,LB_5226
	call emt_stg 
	mov rdi,fmt_rcd_box_l
	call emt_stg
	push r8
	mov r8,QWORD [r8+8+8*0]
	call LB_5201
	pop r8 
	mov rdi,fmt_spc 
	call emt_stg 
	push r8
	mov r8,QWORD [r8+8+8*1]
	call LB_5210
	pop r8 
	mov rdi,fmt_spc 
	call emt_stg 
	mov rdi,fmt_rcd_r
	call emt_stg
	jmp LB_5225
LB_5223:
	mov rdi,LB_5227
	call emt_stg 
	mov rdi,fmt_rcd_box_l
	call emt_stg
	mov rdi,fmt_rcd_r
	call emt_stg
	jmp LB_5225
LB_5225:
	ret
LB_5199:
	movzx rax,BYTE [r8+6]
	jmp QWORD [LB_5230+8*rax]
LB_5230: dq LB_5228,LB_5229
LB_5228:
	mov rdi,LB_5232
	call emt_stg 
	mov rdi,fmt_rcd_box_l
	call emt_stg
	push r8
	mov r8,QWORD [r8+8+8*0]
	mov rdi,fmt_rcd_box_l
	call emt_stg
	push r8
	mov r8,QWORD [r8+8+8*0]
	mov rdi,r8
	call emt_s8
	pop r8 
	mov rdi,fmt_spc 
	call emt_stg 
	push r8
	mov r8,QWORD [r8+8+8*1]
	call LB_5201
	pop r8 
	mov rdi,fmt_spc 
	call emt_stg 
	mov rdi,fmt_rcd_r
	call emt_stg
	pop r8 
	mov rdi,fmt_spc 
	call emt_stg 
	push r8
	mov r8,QWORD [r8+8+8*1]
	call LB_5199
	pop r8 
	mov rdi,fmt_spc 
	call emt_stg 
	mov rdi,fmt_rcd_r
	call emt_stg
	jmp LB_5231
LB_5229:
	mov rdi,LB_5233
	call emt_stg 
	mov rdi,fmt_rcd_box_l
	call emt_stg
	mov rdi,fmt_rcd_r
	call emt_stg
	jmp LB_5231
LB_5231:
	ret
LB_5198:
	movzx rax,BYTE [r8+6]
	jmp QWORD [LB_5236+8*rax]
LB_5236: dq LB_5234,LB_5235
LB_5234:
	mov rdi,LB_5238
	call emt_stg 
	mov rdi,fmt_rcd_box_l
	call emt_stg
	push r8
	mov r8,QWORD [r8+8+8*0]
	mov rdi,r8
	call emt_s8
	pop r8 
	mov rdi,fmt_spc 
	call emt_stg 
	push r8
	mov r8,QWORD [r8+8+8*1]
	call LB_5198
	pop r8 
	mov rdi,fmt_spc 
	call emt_stg 
	mov rdi,fmt_rcd_r
	call emt_stg
	jmp LB_5237
LB_5235:
	mov rdi,LB_5239
	call emt_stg 
	mov rdi,fmt_rcd_box_l
	call emt_stg
	mov rdi,fmt_rcd_r
	call emt_stg
	jmp LB_5237
LB_5237:
	ret
LB_5182:
	movzx rax,BYTE [r8+6]
	jmp QWORD [LB_5242+8*rax]
LB_5242: dq LB_5240,LB_5241
LB_5240:
	mov rdi,LB_5244
	call emt_stg 
	mov rdi,fmt_rcd_box_l
	call emt_stg
	push r8
	mov r8,QWORD [r8+8+8*0]
	mov rdi,fmt_rcd_box_l
	call emt_stg
	push r8
	mov r8,QWORD [r8+8+8*0]
	mov rdi,r8
	call emt_s8
	pop r8 
	mov rdi,fmt_spc 
	call emt_stg 
	push r8
	mov r8,QWORD [r8+8+8*1]
	call LB_5245
	pop r8 
	mov rdi,fmt_spc 
	call emt_stg 
	push r8
	mov r8,QWORD [r8+8+8*2]
	call LB_5246
	pop r8 
	mov rdi,fmt_spc 
	call emt_stg 
	push r8
	mov r8,QWORD [r8+8+8*3]
	call LB_5247
	pop r8 
	mov rdi,fmt_spc 
	call emt_stg 
	mov rdi,fmt_rcd_r
	call emt_stg
	pop r8 
	mov rdi,fmt_spc 
	call emt_stg 
	push r8
	mov r8,QWORD [r8+8+8*1]
	call LB_5182
	pop r8 
	mov rdi,fmt_spc 
	call emt_stg 
	mov rdi,fmt_rcd_r
	call emt_stg
	jmp LB_5243
LB_5241:
	mov rdi,LB_5248
	call emt_stg 
	mov rdi,fmt_rcd_box_l
	call emt_stg
	mov rdi,fmt_rcd_r
	call emt_stg
	jmp LB_5243
LB_5243:
	ret
LB_5247:
	movzx rax,BYTE [r8+6]
	jmp QWORD [LB_5256+8*rax]
LB_5256: dq LB_5249,LB_5250,LB_5251,LB_5252,LB_5253,LB_5254,LB_5255
LB_5249:
	mov rdi,LB_5258
	call emt_stg 
	mov rdi,fmt_rcd_box_l
	call emt_stg
	push r8
	mov r8,QWORD [r8+8+8*0]
	call LB_5214
	pop r8 
	mov rdi,fmt_spc 
	call emt_stg 
	push r8
	mov r8,QWORD [r8+8+8*1]
	call LB_5259
	pop r8 
	mov rdi,fmt_spc 
	call emt_stg 
	mov rdi,fmt_rcd_r
	call emt_stg
	jmp LB_5257
LB_5250:
	mov rdi,LB_5260
	call emt_stg 
	mov rdi,fmt_rcd_box_l
	call emt_stg
	push r8
	mov r8,QWORD [r8+8+8*0]
	call LB_5261
	pop r8 
	mov rdi,fmt_spc 
	call emt_stg 
	push r8
	mov r8,QWORD [r8+8+8*1]
	call LB_5259
	pop r8 
	mov rdi,fmt_spc 
	call emt_stg 
	mov rdi,fmt_rcd_r
	call emt_stg
	jmp LB_5257
LB_5251:
	mov rdi,LB_5262
	call emt_stg 
	mov rdi,fmt_rcd_box_l
	call emt_stg
	push r8
	mov r8,QWORD [r8+8+8*0]
	call LB_5263
	pop r8 
	mov rdi,fmt_spc 
	call emt_stg 
	push r8
	mov r8,QWORD [r8+8+8*1]
	call LB_5247
	pop r8 
	mov rdi,fmt_spc 
	call emt_stg 
	mov rdi,fmt_rcd_r
	call emt_stg
	jmp LB_5257
LB_5252:
	mov rdi,LB_5264
	call emt_stg 
	mov r8,QWORD [r8+8]
	call LB_5265
	jmp LB_5257
LB_5253:
	mov rdi,LB_5266
	call emt_stg 
	mov rdi,fmt_rcd_box_l
	call emt_stg
	push r8
	mov r8,QWORD [r8+8+8*0]
	call LB_5259
	pop r8 
	mov rdi,fmt_spc 
	call emt_stg 
	push r8
	mov r8,QWORD [r8+8+8*1]
	call LB_5267
	pop r8 
	mov rdi,fmt_spc 
	call emt_stg 
	mov rdi,fmt_rcd_r
	call emt_stg
	jmp LB_5257
LB_5254:
	mov rdi,LB_5268
	call emt_stg 
	mov r8,QWORD [r8+8]
	call LB_5259
	jmp LB_5257
LB_5255:
	mov rdi,LB_5269
	call emt_stg 
	mov r8,QWORD [r8+8]
	mov rdi,r8 
	call emt_r64 
	jmp LB_5257
LB_5257:
	ret
LB_5267:
	movzx rax,BYTE [r8+6]
	jmp QWORD [LB_5272+8*rax]
LB_5272: dq LB_5270,LB_5271
LB_5270:
	mov rdi,LB_5274
	call emt_stg 
	mov r8,QWORD [r8+8]
	call LB_5275
	jmp LB_5273
LB_5271:
	mov rdi,LB_5276
	call emt_stg 
	mov rdi,fmt_rcd_box_l
	call emt_stg
	push r8
	mov r8,QWORD [r8+8+8*0]
	call LB_5277
	pop r8 
	mov rdi,fmt_spc 
	call emt_stg 
	push r8
	mov r8,QWORD [r8+8+8*1]
	call LB_5247
	pop r8 
	mov rdi,fmt_spc 
	call emt_stg 
	mov rdi,fmt_rcd_r
	call emt_stg
	jmp LB_5273
LB_5273:
	ret
LB_5277:
	movzx rax,BYTE [r8+6]
	jmp QWORD [LB_5280+8*rax]
LB_5280: dq LB_5278,LB_5279
LB_5278:
	mov rdi,LB_5282
	call emt_stg 
	mov rdi,fmt_rcd_box_l
	call emt_stg
	push r8
	mov r8,QWORD [r8+8+8*0]
	call LB_5245
	pop r8 
	mov rdi,fmt_spc 
	call emt_stg 
	push r8
	mov r8,QWORD [r8+8+8*1]
	call LB_5277
	pop r8 
	mov rdi,fmt_spc 
	call emt_stg 
	mov rdi,fmt_rcd_r
	call emt_stg
	jmp LB_5281
LB_5279:
	mov rdi,LB_5283
	call emt_stg 
	mov rdi,fmt_rcd_box_l
	call emt_stg
	mov rdi,fmt_rcd_r
	call emt_stg
	jmp LB_5281
LB_5281:
	ret
LB_5275:
	movzx rax,BYTE [r8+6]
	jmp QWORD [LB_5286+8*rax]
LB_5286: dq LB_5284,LB_5285
LB_5284:
	mov rdi,LB_5288
	call emt_stg 
	mov rdi,fmt_rcd_box_l
	call emt_stg
	push r8
	mov r8,QWORD [r8+8+8*0]
	mov rdi,fmt_rcd_box_l
	call emt_stg
	push r8
	mov r8,QWORD [r8+8+8*0]
	call LB_5289
	pop r8 
	mov rdi,fmt_spc 
	call emt_stg 
	push r8
	mov r8,QWORD [r8+8+8*1]
	call LB_5290
	pop r8 
	mov rdi,fmt_spc 
	call emt_stg 
	push r8
	mov r8,QWORD [r8+8+8*2]
	call LB_5291
	pop r8 
	mov rdi,fmt_spc 
	call emt_stg 
	mov rdi,fmt_rcd_r
	call emt_stg
	pop r8 
	mov rdi,fmt_spc 
	call emt_stg 
	push r8
	mov r8,QWORD [r8+8+8*1]
	call LB_5275
	pop r8 
	mov rdi,fmt_spc 
	call emt_stg 
	mov rdi,fmt_rcd_r
	call emt_stg
	jmp LB_5287
LB_5285:
	mov rdi,LB_5292
	call emt_stg 
	mov rdi,fmt_rcd_box_l
	call emt_stg
	push r8
	mov r8,QWORD [r8+8+8*0]
	call LB_5289
	pop r8 
	mov rdi,fmt_spc 
	call emt_stg 
	push r8
	mov r8,QWORD [r8+8+8*1]
	call LB_5290
	pop r8 
	mov rdi,fmt_spc 
	call emt_stg 
	push r8
	mov r8,QWORD [r8+8+8*2]
	call LB_5291
	pop r8 
	mov rdi,fmt_spc 
	call emt_stg 
	mov rdi,fmt_rcd_r
	call emt_stg
	jmp LB_5287
LB_5287:
	ret
LB_5291:
	movzx rax,BYTE [r8+6]
	jmp QWORD [LB_5296+8*rax]
LB_5296: dq LB_5293,LB_5294,LB_5295
LB_5293:
	mov rdi,LB_5298
	call emt_stg 
	mov r8,QWORD [r8+8]
	call LB_5265
	jmp LB_5297
LB_5294:
	mov rdi,LB_5299
	call emt_stg 
	mov rdi,fmt_rcd_box_l
	call emt_stg
	push r8
	mov r8,QWORD [r8+8+8*0]
	call LB_5259
	pop r8 
	mov rdi,fmt_spc 
	call emt_stg 
	push r8
	mov r8,QWORD [r8+8+8*1]
	call LB_5275
	pop r8 
	mov rdi,fmt_spc 
	call emt_stg 
	mov rdi,fmt_rcd_r
	call emt_stg
	jmp LB_5297
LB_5295:
	mov rdi,LB_5300
	call emt_stg 
	mov r8,QWORD [r8+8]
	call LB_5247
	jmp LB_5297
LB_5297:
	ret
LB_5290:
	movzx rax,BYTE [r8+6]
	jmp QWORD [LB_5303+8*rax]
LB_5303: dq LB_5301,LB_5302
LB_5301:
	mov rdi,LB_5305
	call emt_stg 
	mov rdi,fmt_rcd_box_l
	call emt_stg
	push r8
	mov r8,QWORD [r8+8+8*0]
	call LB_5306
	pop r8 
	mov rdi,fmt_spc 
	call emt_stg 
	push r8
	mov r8,QWORD [r8+8+8*1]
	call LB_5290
	pop r8 
	mov rdi,fmt_spc 
	call emt_stg 
	mov rdi,fmt_rcd_r
	call emt_stg
	jmp LB_5304
LB_5302:
	mov rdi,LB_5307
	call emt_stg 
	mov rdi,fmt_rcd_box_l
	call emt_stg
	mov rdi,fmt_rcd_r
	call emt_stg
	jmp LB_5304
LB_5304:
	ret
LB_5306:
	movzx rax,BYTE [r8+6]
	jmp QWORD [LB_5311+8*rax]
LB_5311: dq LB_5308,LB_5309,LB_5310
LB_5308:
	mov rdi,LB_5313
	call emt_stg 
	mov rdi,fmt_rcd_box_l
	call emt_stg
	push r8
	mov r8,QWORD [r8+8+8*0]
	call LB_5259
	pop r8 
	mov rdi,fmt_spc 
	call emt_stg 
	push r8
	mov r8,QWORD [r8+8+8*1]
	call LB_5289
	pop r8 
	mov rdi,fmt_spc 
	call emt_stg 
	mov rdi,fmt_rcd_r
	call emt_stg
	jmp LB_5312
LB_5309:
	mov rdi,LB_5314
	call emt_stg 
	mov rdi,fmt_rcd_box_l
	call emt_stg
	push r8
	mov r8,QWORD [r8+8+8*0]
	call LB_5315
	pop r8 
	mov rdi,fmt_spc 
	call emt_stg 
	push r8
	mov r8,QWORD [r8+8+8*1]
	call LB_5315
	pop r8 
	mov rdi,fmt_spc 
	call emt_stg 
	mov rdi,fmt_rcd_r
	call emt_stg
	jmp LB_5312
LB_5310:
	mov rdi,LB_5316
	call emt_stg 
	mov rdi,fmt_rcd_box_l
	call emt_stg
	push r8
	mov r8,QWORD [r8+8+8*0]
	call LB_5315
	pop r8 
	mov rdi,fmt_spc 
	call emt_stg 
	push r8
	mov r8,QWORD [r8+8+8*1]
	call LB_5315
	pop r8 
	mov rdi,fmt_spc 
	call emt_stg 
	mov rdi,fmt_rcd_r
	call emt_stg
	jmp LB_5312
LB_5312:
	ret
LB_5315:
	movzx rax,BYTE [r8+6]
	jmp QWORD [LB_5319+8*rax]
LB_5319: dq LB_5317,LB_5318
LB_5317:
	mov rdi,LB_5321
	call emt_stg 
	mov r8,QWORD [r8+8]
	call LB_5322
	jmp LB_5320
LB_5318:
	mov rdi,LB_5323
	call emt_stg 
	mov rdi,r8
	call emt_s8
	jmp LB_5320
LB_5320:
	ret
LB_5322:
	movzx rax,BYTE [r8+6]
	jmp QWORD [LB_5326+8*rax]
LB_5326: dq LB_5324,LB_5325
LB_5324:
	mov rdi,LB_5328
	call emt_stg 
	mov r8,QWORD [r8+8]
	call LB_5329
	jmp LB_5327
LB_5325:
	mov rdi,LB_5330
	call emt_stg 
	mov r8,QWORD [r8+8]
	call LB_5214
	jmp LB_5327
LB_5327:
	ret
LB_5329:
	movzx rax,BYTE [r8+6]
	jmp QWORD [LB_5333+8*rax]
LB_5333: dq LB_5331,LB_5332
LB_5331:
	mov rdi,LB_5335
	call emt_stg 
	mov r8,QWORD [r8+8]
	mov rdi,r8 
	call emt_r64 
	jmp LB_5334
LB_5332:
	mov rdi,LB_5336
	call emt_stg 
	mov rdi,r8
	call emt_s8
	jmp LB_5334
LB_5334:
	ret
LB_5289:
	movzx rax,BYTE [r8+6]
	jmp QWORD [LB_5339+8*rax]
LB_5339: dq LB_5337,LB_5338
LB_5337:
	mov rdi,LB_5341
	call emt_stg 
	mov r8,QWORD [r8+8]
	call LB_5342
	jmp LB_5340
LB_5338:
	mov rdi,LB_5343
	call emt_stg 
	mov r8,QWORD [r8+8]
	call LB_5344
	jmp LB_5340
LB_5340:
	ret
LB_5344:
	movzx rax,BYTE [r8+6]
	jmp QWORD [LB_5349+8*rax]
LB_5349: dq LB_5345,LB_5346,LB_5347,LB_5348
LB_5345:
	mov rdi,LB_5351
	call emt_stg 
	mov rdi,fmt_rcd_box_l
	call emt_stg
	push r8
	mov r8,QWORD [r8+8+8*0]
	call LB_5214
	pop r8 
	mov rdi,fmt_spc 
	call emt_stg 
	push r8
	mov r8,QWORD [r8+8+8*1]
	call LB_5289
	pop r8 
	mov rdi,fmt_spc 
	call emt_stg 
	mov rdi,fmt_rcd_r
	call emt_stg
	jmp LB_5350
LB_5346:
	mov rdi,LB_5352
	call emt_stg 
	mov r8,QWORD [r8+8]
	call LB_5322
	jmp LB_5350
LB_5347:
	mov rdi,LB_5353
	call emt_stg 
	mov r8,QWORD [r8+8]
	call LB_5354
	jmp LB_5350
LB_5348:
	mov rdi,LB_5355
	call emt_stg 
	mov rdi,r8
	call emt_s8
	jmp LB_5350
LB_5350:
	ret
LB_5354:
	movzx rax,BYTE [r8+6]
	jmp QWORD [LB_5358+8*rax]
LB_5358: dq LB_5356,LB_5357
LB_5356:
	mov rdi,LB_5360
	call emt_stg 
	mov rdi,r8
	call emt_s8
	jmp LB_5359
LB_5357:
	mov rdi,LB_5361
	call emt_stg 
	mov rdi,fmt_rcd_box_l
	call emt_stg
	mov rdi,fmt_rcd_r
	call emt_stg
	jmp LB_5359
LB_5359:
	ret
LB_5342:
	movzx rax,BYTE [r8+6]
	jmp QWORD [LB_5364+8*rax]
LB_5364: dq LB_5362,LB_5363
LB_5362:
	mov rdi,LB_5366
	call emt_stg 
	mov rdi,fmt_rcd_box_l
	call emt_stg
	push r8
	mov r8,QWORD [r8+8+8*0]
	call LB_5289
	pop r8 
	mov rdi,fmt_spc 
	call emt_stg 
	push r8
	mov r8,QWORD [r8+8+8*1]
	call LB_5342
	pop r8 
	mov rdi,fmt_spc 
	call emt_stg 
	mov rdi,fmt_rcd_r
	call emt_stg
	jmp LB_5365
LB_5363:
	mov rdi,LB_5367
	call emt_stg 
	mov rdi,fmt_rcd_box_l
	call emt_stg
	mov rdi,fmt_rcd_r
	call emt_stg
	jmp LB_5365
LB_5365:
	ret
LB_5265:
	movzx rax,BYTE [r8+6]
	jmp QWORD [LB_5370+8*rax]
LB_5370: dq LB_5368,LB_5369
LB_5368:
	mov rdi,LB_5372
	call emt_stg 
	mov rdi,fmt_rcd_box_l
	call emt_stg
	push r8
	mov r8,QWORD [r8+8+8*0]
	mov rdi,fmt_rcd_box_l
	call emt_stg
	push r8
	mov r8,QWORD [r8+8+8*0]
	call LB_5290
	pop r8 
	mov rdi,fmt_spc 
	call emt_stg 
	push r8
	mov r8,QWORD [r8+8+8*1]
	call LB_5291
	pop r8 
	mov rdi,fmt_spc 
	call emt_stg 
	mov rdi,fmt_rcd_r
	call emt_stg
	pop r8 
	mov rdi,fmt_spc 
	call emt_stg 
	push r8
	mov r8,QWORD [r8+8+8*1]
	call LB_5265
	pop r8 
	mov rdi,fmt_spc 
	call emt_stg 
	mov rdi,fmt_rcd_r
	call emt_stg
	jmp LB_5371
LB_5369:
	mov rdi,LB_5373
	call emt_stg 
	mov rdi,fmt_rcd_box_l
	call emt_stg
	push r8
	mov r8,QWORD [r8+8+8*0]
	call LB_5290
	pop r8 
	mov rdi,fmt_spc 
	call emt_stg 
	push r8
	mov r8,QWORD [r8+8+8*1]
	call LB_5291
	pop r8 
	mov rdi,fmt_spc 
	call emt_stg 
	mov rdi,fmt_rcd_r
	call emt_stg
	jmp LB_5371
LB_5371:
	ret
LB_5263:
	movzx rax,BYTE [r8+6]
	jmp QWORD [LB_5378+8*rax]
LB_5378: dq LB_5374,LB_5375,LB_5376,LB_5377
LB_5374:
	mov rdi,LB_5380
	call emt_stg 
	mov rdi,fmt_rcd_box_l
	call emt_stg
	push r8
	mov r8,QWORD [r8+8+8*0]
	call LB_5214
	pop r8 
	mov rdi,fmt_spc 
	call emt_stg 
	push r8
	mov r8,QWORD [r8+8+8*1]
	call LB_5259
	pop r8 
	mov rdi,fmt_spc 
	call emt_stg 
	push r8
	mov r8,QWORD [r8+8+8*2]
	call LB_5245
	pop r8 
	mov rdi,fmt_spc 
	call emt_stg 
	mov rdi,fmt_rcd_r
	call emt_stg
	jmp LB_5379
LB_5375:
	mov rdi,LB_5381
	call emt_stg 
	mov rdi,fmt_rcd_box_l
	call emt_stg
	push r8
	mov r8,QWORD [r8+8+8*0]
	call LB_5261
	pop r8 
	mov rdi,fmt_spc 
	call emt_stg 
	push r8
	mov r8,QWORD [r8+8+8*1]
	call LB_5259
	pop r8 
	mov rdi,fmt_spc 
	call emt_stg 
	push r8
	mov r8,QWORD [r8+8+8*2]
	call LB_5245
	pop r8 
	mov rdi,fmt_spc 
	call emt_stg 
	mov rdi,fmt_rcd_r
	call emt_stg
	jmp LB_5379
LB_5376:
	mov rdi,LB_5382
	call emt_stg 
	mov rdi,fmt_rcd_box_l
	call emt_stg
	push r8
	mov r8,QWORD [r8+8+8*0]
	call LB_5322
	pop r8 
	mov rdi,fmt_spc 
	call emt_stg 
	push r8
	mov r8,QWORD [r8+8+8*1]
	call LB_5259
	pop r8 
	mov rdi,fmt_spc 
	call emt_stg 
	push r8
	mov r8,QWORD [r8+8+8*2]
	call LB_5245
	pop r8 
	mov rdi,fmt_spc 
	call emt_stg 
	mov rdi,fmt_rcd_r
	call emt_stg
	jmp LB_5379
LB_5377:
	mov rdi,LB_5383
	call emt_stg 
	mov rdi,fmt_rcd_box_l
	call emt_stg
	push r8
	mov r8,QWORD [r8+8+8*0]
	call LB_5384
	pop r8 
	mov rdi,fmt_spc 
	call emt_stg 
	push r8
	mov r8,QWORD [r8+8+8*1]
	call LB_5385
	pop r8 
	mov rdi,fmt_spc 
	call emt_stg 
	push r8
	mov r8,QWORD [r8+8+8*2]
	call LB_5386
	pop r8 
	mov rdi,fmt_spc 
	call emt_stg 
	mov rdi,fmt_rcd_r
	call emt_stg
	jmp LB_5379
LB_5379:
	ret
LB_5386:
	movzx rax,BYTE [r8+6]
	jmp QWORD [LB_5389+8*rax]
LB_5389: dq LB_5387,LB_5388
LB_5387:
	mov rdi,LB_5391
	call emt_stg 
	mov rdi,fmt_rcd_box_l
	call emt_stg
	push r8
	mov r8,QWORD [r8+8+8*0]
	call LB_5392
	pop r8 
	mov rdi,fmt_spc 
	call emt_stg 
	push r8
	mov r8,QWORD [r8+8+8*1]
	call LB_5386
	pop r8 
	mov rdi,fmt_spc 
	call emt_stg 
	mov rdi,fmt_rcd_r
	call emt_stg
	jmp LB_5390
LB_5388:
	mov rdi,LB_5393
	call emt_stg 
	mov rdi,fmt_rcd_box_l
	call emt_stg
	mov rdi,fmt_rcd_r
	call emt_stg
	jmp LB_5390
LB_5390:
	ret
LB_5392:
	movzx rax,BYTE [r8+6]
	jmp QWORD [LB_5396+8*rax]
LB_5396: dq LB_5394,LB_5395
LB_5394:
	mov rdi,LB_5398
	call emt_stg 
	mov r8,QWORD [r8+8]
	call LB_5354
	jmp LB_5397
LB_5395:
	mov rdi,LB_5399
	call emt_stg 
	mov rdi,r8
	call emt_s8
	jmp LB_5397
LB_5397:
	ret
LB_5385:
	movzx rax,BYTE [r8+6]
	jmp QWORD [LB_5402+8*rax]
LB_5402: dq LB_5400,LB_5401
LB_5400:
	mov rdi,LB_5404
	call emt_stg 
	mov rdi,fmt_rcd_box_l
	call emt_stg
	push r8
	mov r8,QWORD [r8+8+8*0]
	call LB_5261
	pop r8 
	mov rdi,fmt_spc 
	call emt_stg 
	push r8
	mov r8,QWORD [r8+8+8*1]
	call LB_5385
	pop r8 
	mov rdi,fmt_spc 
	call emt_stg 
	mov rdi,fmt_rcd_r
	call emt_stg
	jmp LB_5403
LB_5401:
	mov rdi,LB_5405
	call emt_stg 
	mov rdi,fmt_rcd_box_l
	call emt_stg
	mov rdi,fmt_rcd_r
	call emt_stg
	jmp LB_5403
LB_5403:
	ret
LB_5384:
	movzx rax,BYTE [r8+6]
	jmp QWORD [LB_5408+8*rax]
LB_5408: dq LB_5406,LB_5407
LB_5406:
	mov rdi,LB_5410
	call emt_stg 
	mov rdi,fmt_rcd_box_l
	call emt_stg
	push r8
	mov r8,QWORD [r8+8+8*0]
	call LB_5411
	pop r8 
	mov rdi,fmt_spc 
	call emt_stg 
	push r8
	mov r8,QWORD [r8+8+8*1]
	call LB_5384
	pop r8 
	mov rdi,fmt_spc 
	call emt_stg 
	mov rdi,fmt_rcd_r
	call emt_stg
	jmp LB_5409
LB_5407:
	mov rdi,LB_5412
	call emt_stg 
	mov rdi,fmt_rcd_box_l
	call emt_stg
	mov rdi,fmt_rcd_r
	call emt_stg
	jmp LB_5409
LB_5409:
	ret
LB_5411:
	movzx rax,BYTE [r8+6]
	jmp QWORD [LB_5417+8*rax]
LB_5417: dq LB_5413,LB_5414,LB_5415,LB_5416
LB_5413:
	mov rdi,LB_5419
	call emt_stg 
	mov rdi,r8
	call emt_s8
	jmp LB_5418
LB_5414:
	mov rdi,LB_5420
	call emt_stg 
	mov r8,QWORD [r8+8]
	call LB_5322
	jmp LB_5418
LB_5415:
	mov rdi,LB_5421
	call emt_stg 
	mov rdi,fmt_rcd_box_l
	call emt_stg
	push r8
	mov r8,QWORD [r8+8+8*0]
	call LB_5422
	pop r8 
	mov rdi,fmt_spc 
	call emt_stg 
	push r8
	mov r8,QWORD [r8+8+8*1]
	mov rdi,r8 
	call emt_r64 
	pop r8 
	mov rdi,fmt_spc 
	call emt_stg 
	mov rdi,fmt_rcd_r
	call emt_stg
	jmp LB_5418
LB_5416:
	mov rdi,LB_5423
	call emt_stg 
	mov rdi,fmt_rcd_box_l
	call emt_stg
	push r8
	mov r8,QWORD [r8+8+8*0]
	mov rdi,r8 
	call emt_r64 
	pop r8 
	mov rdi,fmt_spc 
	call emt_stg 
	push r8
	mov r8,QWORD [r8+8+8*1]
	mov rdi,r8
	call emt_s8
	pop r8 
	mov rdi,fmt_spc 
	call emt_stg 
	mov rdi,fmt_rcd_r
	call emt_stg
	jmp LB_5418
LB_5418:
	ret
LB_5422:
	movzx rax,BYTE [r8+6]
	jmp QWORD [LB_5428+8*rax]
LB_5428: dq LB_5424,LB_5425,LB_5426,LB_5427
LB_5424:
	mov rdi,LB_5430
	call emt_stg 
	mov rdi,fmt_rcd_box_l
	call emt_stg
	mov rdi,fmt_rcd_r
	call emt_stg
	jmp LB_5429
LB_5425:
	mov rdi,LB_5431
	call emt_stg 
	mov rdi,fmt_rcd_box_l
	call emt_stg
	mov rdi,fmt_rcd_r
	call emt_stg
	jmp LB_5429
LB_5426:
	mov rdi,LB_5432
	call emt_stg 
	mov rdi,fmt_rcd_box_l
	call emt_stg
	mov rdi,fmt_rcd_r
	call emt_stg
	jmp LB_5429
LB_5427:
	mov rdi,LB_5433
	call emt_stg 
	mov rdi,fmt_rcd_box_l
	call emt_stg
	mov rdi,fmt_rcd_r
	call emt_stg
	jmp LB_5429
LB_5429:
	ret
LB_5261:
	movzx rax,BYTE [r8+6]
	jmp QWORD [LB_5436+8*rax]
LB_5436: dq LB_5434,LB_5435
LB_5434:
	mov rdi,LB_5438
	call emt_stg 
	mov r8,QWORD [r8+8]
	call LB_5322
	jmp LB_5437
LB_5435:
	mov rdi,LB_5439
	call emt_stg 
	mov rdi,r8
	call emt_s8
	jmp LB_5437
LB_5437:
	ret
LB_5259:
	movzx rax,BYTE [r8+6]
	jmp QWORD [LB_5442+8*rax]
LB_5442: dq LB_5440,LB_5441
LB_5440:
	mov rdi,LB_5444
	call emt_stg 
	mov r8,QWORD [r8+8]
	call LB_5445
	jmp LB_5443
LB_5441:
	mov rdi,LB_5446
	call emt_stg 
	mov r8,QWORD [r8+8]
	call LB_5261
	jmp LB_5443
LB_5443:
	ret
LB_5445:
	movzx rax,BYTE [r8+6]
	jmp QWORD [LB_5449+8*rax]
LB_5449: dq LB_5447,LB_5448
LB_5447:
	mov rdi,LB_5451
	call emt_stg 
	mov rdi,fmt_rcd_box_l
	call emt_stg
	push r8
	mov r8,QWORD [r8+8+8*0]
	call LB_5259
	pop r8 
	mov rdi,fmt_spc 
	call emt_stg 
	push r8
	mov r8,QWORD [r8+8+8*1]
	call LB_5445
	pop r8 
	mov rdi,fmt_spc 
	call emt_stg 
	mov rdi,fmt_rcd_r
	call emt_stg
	jmp LB_5450
LB_5448:
	mov rdi,LB_5452
	call emt_stg 
	mov rdi,fmt_rcd_box_l
	call emt_stg
	mov rdi,fmt_rcd_r
	call emt_stg
	jmp LB_5450
LB_5450:
	ret
LB_5246:
	movzx rax,BYTE [r8+6]
	jmp QWORD [LB_5455+8*rax]
LB_5455: dq LB_5453,LB_5454
LB_5453:
	mov rdi,LB_5457
	call emt_stg 
	mov r8,QWORD [r8+8]
	call LB_5201
	jmp LB_5456
LB_5454:
	mov rdi,LB_5458
	call emt_stg 
	mov rdi,fmt_rcd_box_l
	call emt_stg
	mov rdi,fmt_rcd_r
	call emt_stg
	jmp LB_5456
LB_5456:
	ret
LB_5245:
	movzx rax,BYTE [r8+6]
	jmp QWORD [LB_5461+8*rax]
LB_5461: dq LB_5459,LB_5460
LB_5459:
	mov rdi,LB_5463
	call emt_stg 
	mov r8,QWORD [r8+8]
	call LB_5277
	jmp LB_5462
LB_5460:
	mov rdi,LB_5464
	call emt_stg 
	mov r8,QWORD [r8+8]
	call LB_5392
	jmp LB_5462
LB_5462:
	ret
LB_5180:
	movzx rax,BYTE [r8+6]
	jmp QWORD [LB_5468+8*rax]
LB_5468: dq LB_5465,LB_5466,LB_5467
LB_5465:
	mov rdi,LB_5470
	call emt_stg 
	mov rdi,fmt_rcd_box_l
	call emt_stg
	push r8
	mov r8,QWORD [r8+8+8*0]
	call LB_5245
	pop r8 
	mov rdi,fmt_spc 
	call emt_stg 
	push r8
	mov r8,QWORD [r8+8+8*1]
	call LB_5246
	pop r8 
	mov rdi,fmt_spc 
	call emt_stg 
	push r8
	mov r8,QWORD [r8+8+8*2]
	call LB_5247
	pop r8 
	mov rdi,fmt_spc 
	call emt_stg 
	mov rdi,fmt_rcd_r
	call emt_stg
	jmp LB_5469
LB_5466:
	mov rdi,LB_5471
	call emt_stg 
	mov r8,QWORD [r8+8]
	call LB_5322
	jmp LB_5469
LB_5467:
	mov rdi,LB_5472
	call emt_stg 
	mov r8,QWORD [r8+8]
	call LB_5247
	jmp LB_5469
LB_5469:
	ret
LB_5178:
	movzx rax,BYTE [r8+6]
	jmp QWORD [LB_5475+8*rax]
LB_5475: dq LB_5473,LB_5474
LB_5473:
	mov rdi,LB_5477
	call emt_stg 
	mov rdi,fmt_rcd_box_l
	call emt_stg
	push r8
	mov r8,QWORD [r8+8+8*0]
	mov rdi,fmt_rcd_box_l
	call emt_stg
	push r8
	mov r8,QWORD [r8+8+8*0]
	mov rdi,r8
	call emt_s8
	pop r8 
	mov rdi,fmt_spc 
	call emt_stg 
	push r8
	mov r8,QWORD [r8+8+8*1]
	call LB_5478
	pop r8 
	mov rdi,fmt_spc 
	call emt_stg 
	mov rdi,fmt_rcd_r
	call emt_stg
	pop r8 
	mov rdi,fmt_spc 
	call emt_stg 
	push r8
	mov r8,QWORD [r8+8+8*1]
	call LB_5178
	pop r8 
	mov rdi,fmt_spc 
	call emt_stg 
	mov rdi,fmt_rcd_r
	call emt_stg
	jmp LB_5476
LB_5474:
	mov rdi,LB_5479
	call emt_stg 
	mov rdi,fmt_rcd_box_l
	call emt_stg
	mov rdi,fmt_rcd_r
	call emt_stg
	jmp LB_5476
LB_5476:
	ret
LB_5478:
	movzx rax,BYTE [r8+6]
	jmp QWORD [LB_5482+8*rax]
LB_5482: dq LB_5480,LB_5481
LB_5480:
	mov rdi,LB_5484
	call emt_stg 
	mov r8,QWORD [r8+8]
	call LB_5485
	jmp LB_5483
LB_5481:
	mov rdi,LB_5486
	call emt_stg 
	mov r8,QWORD [r8+8]
	call LB_5487
	jmp LB_5483
LB_5483:
	ret
LB_5487:
	movzx rax,BYTE [r8+6]
	jmp QWORD [LB_5490+8*rax]
LB_5490: dq LB_5488,LB_5489
LB_5488:
	mov rdi,LB_5492
	call emt_stg 
	mov rdi,fmt_rcd_box_l
	call emt_stg
	push r8
	mov r8,QWORD [r8+8+8*0]
	call LB_5386
	pop r8 
	mov rdi,fmt_spc 
	call emt_stg 
	push r8
	mov r8,QWORD [r8+8+8*1]
	call LB_5245
	pop r8 
	mov rdi,fmt_spc 
	call emt_stg 
	push r8
	mov r8,QWORD [r8+8+8*2]
	call LB_5247
	pop r8 
	mov rdi,fmt_spc 
	call emt_stg 
	push r8
	mov r8,QWORD [r8+8+8*3]
	call LB_5493
	pop r8 
	mov rdi,fmt_spc 
	call emt_stg 
	push r8
	mov r8,QWORD [r8+8+8*4]
	call LB_5494
	pop r8 
	mov rdi,fmt_spc 
	call emt_stg 
	push r8
	mov r8,QWORD [r8+8+8*5]
	call LB_5495
	pop r8 
	mov rdi,fmt_spc 
	call emt_stg 
	push r8
	mov r8,QWORD [r8+8+8*6]
	call LB_5487
	pop r8 
	mov rdi,fmt_spc 
	call emt_stg 
	mov rdi,fmt_rcd_r
	call emt_stg
	jmp LB_5491
LB_5489:
	mov rdi,LB_5496
	call emt_stg 
	mov rdi,fmt_rcd_box_l
	call emt_stg
	push r8
	mov r8,QWORD [r8+8+8*0]
	call LB_5386
	pop r8 
	mov rdi,fmt_spc 
	call emt_stg 
	push r8
	mov r8,QWORD [r8+8+8*1]
	call LB_5245
	pop r8 
	mov rdi,fmt_spc 
	call emt_stg 
	push r8
	mov r8,QWORD [r8+8+8*2]
	call LB_5247
	pop r8 
	mov rdi,fmt_spc 
	call emt_stg 
	push r8
	mov r8,QWORD [r8+8+8*3]
	call LB_5493
	pop r8 
	mov rdi,fmt_spc 
	call emt_stg 
	push r8
	mov r8,QWORD [r8+8+8*4]
	call LB_5494
	pop r8 
	mov rdi,fmt_spc 
	call emt_stg 
	push r8
	mov r8,QWORD [r8+8+8*5]
	call LB_5495
	pop r8 
	mov rdi,fmt_spc 
	call emt_stg 
	mov rdi,fmt_rcd_r
	call emt_stg
	jmp LB_5491
LB_5491:
	ret
LB_5495:
	movzx rax,BYTE [r8+6]
	jmp QWORD [LB_5499+8*rax]
LB_5499: dq LB_5497,LB_5498
LB_5497:
	mov rdi,LB_5501
	call emt_stg 
	mov rdi,fmt_rcd_box_l
	call emt_stg
	push r8
	mov r8,QWORD [r8+8+8*0]
	call LB_5245
	pop r8 
	mov rdi,fmt_spc 
	call emt_stg 
	push r8
	mov r8,QWORD [r8+8+8*1]
	call LB_5487
	pop r8 
	mov rdi,fmt_spc 
	call emt_stg 
	mov rdi,fmt_rcd_r
	call emt_stg
	jmp LB_5500
LB_5498:
	mov rdi,LB_5502
	call emt_stg 
	mov rdi,fmt_rcd_box_l
	call emt_stg
	mov rdi,fmt_rcd_r
	call emt_stg
	jmp LB_5500
LB_5500:
	ret
LB_5494:
	movzx rax,BYTE [r8+6]
	jmp QWORD [LB_5506+8*rax]
LB_5506: dq LB_5503,LB_5504,LB_5505
LB_5503:
	mov rdi,LB_5508
	call emt_stg 
	mov r8,QWORD [r8+8]
	call LB_5509
	jmp LB_5507
LB_5504:
	mov rdi,LB_5510
	call emt_stg 
	mov rdi,fmt_rcd_box_l
	call emt_stg
	push r8
	mov r8,QWORD [r8+8+8*0]
	call LB_5511
	pop r8 
	mov rdi,fmt_spc 
	call emt_stg 
	push r8
	mov r8,QWORD [r8+8+8*1]
	call LB_5494
	pop r8 
	mov rdi,fmt_spc 
	call emt_stg 
	mov rdi,fmt_rcd_r
	call emt_stg
	jmp LB_5507
LB_5505:
	mov rdi,LB_5512
	call emt_stg 
	mov rdi,fmt_rcd_box_l
	call emt_stg
	mov rdi,fmt_rcd_r
	call emt_stg
	jmp LB_5507
LB_5507:
	ret
LB_5511:
	movzx rax,BYTE [r8+6]
	jmp QWORD [LB_5515+8*rax]
LB_5515: dq LB_5513,LB_5514
LB_5513:
	mov rdi,LB_5517
	call emt_stg 
	mov r8,QWORD [r8+8]
	call LB_5518
	jmp LB_5516
LB_5514:
	mov rdi,LB_5519
	call emt_stg 
	mov r8,QWORD [r8+8]
	call LB_5518
	jmp LB_5516
LB_5516:
	ret
LB_5518:
	movzx rax,BYTE [r8+6]
	jmp QWORD [LB_5522+8*rax]
LB_5522: dq LB_5520,LB_5521
LB_5520:
	mov rdi,LB_5524
	call emt_stg 
	mov r8,QWORD [r8+8]
	call LB_5214
	jmp LB_5523
LB_5521:
	mov rdi,LB_5525
	call emt_stg 
	mov rdi,r8
	call emt_s8
	jmp LB_5523
LB_5523:
	ret
LB_5509:
	movzx rax,BYTE [r8+6]
	jmp QWORD [LB_5528+8*rax]
LB_5528: dq LB_5526,LB_5527
LB_5526:
	mov rdi,LB_5530
	call emt_stg 
	mov rdi,fmt_rcd_box_l
	call emt_stg
	push r8
	mov r8,QWORD [r8+8+8*0]
	call LB_5511
	pop r8 
	mov rdi,fmt_spc 
	call emt_stg 
	push r8
	mov r8,QWORD [r8+8+8*1]
	call LB_5509
	pop r8 
	mov rdi,fmt_spc 
	call emt_stg 
	mov rdi,fmt_rcd_r
	call emt_stg
	jmp LB_5529
LB_5527:
	mov rdi,LB_5531
	call emt_stg 
	mov rdi,fmt_rcd_box_l
	call emt_stg
	mov rdi,fmt_rcd_r
	call emt_stg
	jmp LB_5529
LB_5529:
	ret
LB_5493:
	movzx rax,BYTE [r8+6]
	jmp QWORD [LB_5535+8*rax]
LB_5535: dq LB_5532,LB_5533,LB_5534
LB_5532:
	mov rdi,LB_5537
	call emt_stg 
	mov rdi,fmt_rcd_box_l
	call emt_stg
	mov rdi,fmt_rcd_r
	call emt_stg
	jmp LB_5536
LB_5533:
	mov rdi,LB_5538
	call emt_stg 
	mov rdi,fmt_rcd_box_l
	call emt_stg
	mov rdi,fmt_rcd_r
	call emt_stg
	jmp LB_5536
LB_5534:
	mov rdi,LB_5539
	call emt_stg 
	mov rdi,fmt_rcd_box_l
	call emt_stg
	mov rdi,fmt_rcd_r
	call emt_stg
	jmp LB_5536
LB_5536:
	ret
LB_5485:
	movzx rax,BYTE [r8+6]
	jmp QWORD [LB_5542+8*rax]
LB_5542: dq LB_5540,LB_5541
LB_5540:
	mov rdi,LB_5544
	call emt_stg 
	mov rdi,fmt_rcd_box_l
	call emt_stg
	push r8
	mov r8,QWORD [r8+8+8*0]
	call LB_5354
	pop r8 
	mov rdi,fmt_spc 
	call emt_stg 
	push r8
	mov r8,QWORD [r8+8+8*1]
	call LB_5493
	pop r8 
	mov rdi,fmt_spc 
	call emt_stg 
	push r8
	mov r8,QWORD [r8+8+8*2]
	call LB_5494
	pop r8 
	mov rdi,fmt_spc 
	call emt_stg 
	push r8
	mov r8,QWORD [r8+8+8*3]
	call LB_5545
	pop r8 
	mov rdi,fmt_spc 
	call emt_stg 
	push r8
	mov r8,QWORD [r8+8+8*4]
	call LB_5485
	pop r8 
	mov rdi,fmt_spc 
	call emt_stg 
	mov rdi,fmt_rcd_r
	call emt_stg
	jmp LB_5543
LB_5541:
	mov rdi,LB_5546
	call emt_stg 
	mov rdi,fmt_rcd_box_l
	call emt_stg
	push r8
	mov r8,QWORD [r8+8+8*0]
	call LB_5354
	pop r8 
	mov rdi,fmt_spc 
	call emt_stg 
	push r8
	mov r8,QWORD [r8+8+8*1]
	call LB_5493
	pop r8 
	mov rdi,fmt_spc 
	call emt_stg 
	push r8
	mov r8,QWORD [r8+8+8*2]
	call LB_5494
	pop r8 
	mov rdi,fmt_spc 
	call emt_stg 
	push r8
	mov r8,QWORD [r8+8+8*3]
	call LB_5545
	pop r8 
	mov rdi,fmt_spc 
	call emt_stg 
	mov rdi,fmt_rcd_r
	call emt_stg
	jmp LB_5543
LB_5543:
	ret
LB_5545:
	movzx rax,BYTE [r8+6]
	jmp QWORD [LB_5549+8*rax]
LB_5549: dq LB_5547,LB_5548
LB_5547:
	mov rdi,LB_5551
	call emt_stg 
	mov r8,QWORD [r8+8]
	call LB_5485
	jmp LB_5550
LB_5548:
	mov rdi,LB_5552
	call emt_stg 
	mov rdi,fmt_rcd_box_l
	call emt_stg
	mov rdi,fmt_rcd_r
	call emt_stg
	jmp LB_5550
LB_5550:
	ret
LB_5176:
	movzx rax,BYTE [r8+6]
	jmp QWORD [LB_5555+8*rax]
LB_5555: dq LB_5553,LB_5554
LB_5553:
	mov rdi,LB_5557
	call emt_stg 
	mov r8,QWORD [r8+8]
	call LB_5151
	jmp LB_5556
LB_5554:
	mov rdi,LB_5558
	call emt_stg 
	mov r8,QWORD [r8+8]
	call LB_5214
	jmp LB_5556
LB_5556:
	ret
ETR_275: ;; E 0'(= {| l |} ) ⊢ { } : (_s8→{ })
;; rsp=0 , %2657~0'(= {| l |} ) 
; » _^ .. ⊢ ..
; .. //
	mov rdi,0
	add rdi,17
	push rdi 
	call mlc_s8
	pop rdi
	mov r14,rax
	lea rdi,[rax+7+rdi]
	std 
	mov QWORD [tmp],rcx 
	lea rsi,[LB_5134+17-1]
	mov rcx,17
	rep movsb
	mov rcx,QWORD [tmp] 
;; rsp=0 , %2658~1'(= {| l |} ) %2657~0'(= {| l |} ) 
; #10 1'(= {| l |} ) ⊢ 1'(= {| l |} )
	mov rdi,fmt_emt
	call emt_stg
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	mov rdi,r8
	call emt_s8
	C_POP_REGS
	mov rdi,fmt_nl
	call emt_stg
	jmp LB_5135
LB_5135:
;; rsp=0 , %2659~1'(= {| l |} ) %2657~0'(= {| l |} ) 
; #26 0'(= {| l |} ) ⊢ { 0'(= {| l |} ) 2'(= {| l |} ) }
	mov rdi,r13
	C_PUSH_REGS
	add rdi,8
	call in_fn
	C_POP_REGS
	mov r8,rax
; .dlt.ptn 0'(= {| l |} )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	mov rdi,r8
	call free_s8
	C_POP_REGS
;; rsp=0 , %2661~2'(= {| l |} ) %2659~1'(= {| l |} ) 
; #20 { } ⊢ { }
	call info
;; rsp=0 , %2661~2'(= {| l |} ) %2659~1'(= {| l |} ) 
; #245 { 2'(= {| l |} ) %[ 0r ] } ⊢ { 0'(= {| l |} ) 3'(= r ) 2'(= a3◂ [ a35◂ [ a2◂ [ a31◂ [ ]]]] ) }
	sub rsp,8
	mov QWORD [rsp+8*0],r14
; .mov_ptn2 { 2'(= {| l |} ) %[ 0r ] } ⊢ { 0'(= {| l |} ) 1'(= r ) }
; .mov_ptn %[ 0r ] ⊢ 1'(= r )
	mov rax,0
	mov r14,rax
; .mov_ptn 2'(= {| l |} ) ⊢ 0'(= {| l |} )
	mov rax,r8
	mov r13,rax
	call ETR_245
	mov r9,r14
	mov r14,QWORD [rsp-8+8*1]
	add rsp,8
;; rsp=0 , %2664~2'(= a3◂ [ a35◂ [ a2◂ [ a31◂ [ ]]]] ) %2663~3'(= r ) %2662~0'(= {| l |} ) %2659~1'(= {| l |} ) 
; #10 3'(= r ) ⊢ 3'(= r )
	mov rdi,fmt_emt
	call emt_stg
	mov rdi,r9
	C_PUSH_REGS
	mov r8,rdi
	mov rdi,r8 
	call emt_r64 
	C_POP_REGS
	mov rdi,fmt_nl
	call emt_stg
	jmp LB_5136
LB_5136:
; .dlt.ptn 3'(= r )
	mov rdi,r9
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
;; rsp=0 , %2664~2'(= a3◂ [ a35◂ [ a2◂ [ a31◂ [ ]]]] ) %2662~0'(= {| l |} ) %2659~1'(= {| l |} ) 
; #10 2'(= a3◂ [ a35◂ [ a2◂ [ a31◂ [ ]]]] ) ⊢ 2'(= a3◂ [ a35◂ [ a2◂ [ a31◂ [ ]]]] )
	mov rdi,fmt_emt
	call emt_stg
	mov rdi,r8
	C_PUSH_REGS
	mov r8,rdi
	call LB_5137
	C_POP_REGS
	mov rdi,fmt_nl
	call emt_stg
	jmp LB_5138
LB_5138:
;; rsp=0 , %2666~2'(= a3◂ [ a35◂ [ a2◂ [ a31◂ [ ]]]] ) %2662~0'(= {| l |} ) %2659~1'(= {| l |} ) 
;; ? 2'(= a3◂ [ a35◂ [ a2◂ [ a31◂ [ ]]]] ) ⊢ 0(<2)◂3'(= a35◂ [ a2◂ [ a31◂ [ ]]] )
	mov rdi,r8
	cmp BYTE [rdi+6],0
	jnz LB_5559
	mov QWORD [GBG_VCT+8*0],rdi
	mov r9,QWORD [rdi+8]
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_LN rdi
;; rsp=0 , %2667~3'(= a35◂ [ a2◂ [ a31◂ [ ]]] ) %2662~0'(= {| l |} ) %2659~1'(= {| l |} ) 
;; ? 3'(= a35◂ [ a2◂ [ a31◂ [ ]]] ) ⊢ 0(<2)◂2'(= a2◂ [ a31◂ [ ]] )
	mov rdi,r9
	cmp BYTE [rdi+6],0
	jnz LB_5560
	mov QWORD [GBG_VCT+8*0],rdi
	mov r8,QWORD [rdi+8]
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_LN rdi
;; rsp=0 , %2669~2'(= a2◂ [ a31◂ [ ]] ) %2662~0'(= {| l |} ) %2659~1'(= {| l |} ) 
; #10 %[ "D0" ] ⊢ %[ "D0" ]
	mov rdi,fmt_emt
	call emt_stg
	mov rdi,LB_5561
	call emt_stg 
	mov rdi,fmt_nl
	call emt_stg
	jmp LB_5562
LB_5562:
; .dlt.ptn %[ "D0" ]
;; rsp=0 , %2669~2'(= a2◂ [ a31◂ [ ]] ) %2662~0'(= {| l |} ) %2659~1'(= {| l |} ) 
; #179 { %[ 0r ] 2'(= a2◂ [ a31◂ [ ]] ) } ⊢ { 3'(= r ) 2'(= {| l |} ) }
	sub rsp,16
	mov QWORD [rsp+8*0],r13
	mov QWORD [rsp+8*1],r14
; .mov_ptn2 { %[ 0r ] 2'(= a2◂ [ a31◂ [ ]] ) } ⊢ { 0'(= r ) 1'(= a2◂ [ a31◂ [ ]] ) }
; .mov_ptn 2'(= a2◂ [ a31◂ [ ]] ) ⊢ 1'(= a2◂ [ a31◂ [ ]] )
	mov rax,r8
	mov r14,rax
; .mov_ptn %[ 0r ] ⊢ 0'(= r )
	mov rax,0
	mov r13,rax
	call ETR_179
	mov r8,r14
	mov r14,QWORD [rsp-8+8*2]
	mov r9,r13
	mov r13,QWORD [rsp-8+8*1]
	add rsp,16
;; rsp=0 , %2672~2'(= {| l |} ) %2671~3'(= r ) %2662~0'(= {| l |} ) %2659~1'(= {| l |} ) 
; #9 2'(= {| l |} ) ⊢ { 2'(= {| l |} ) 4'(= r ) }
	mov rdi,r8
	mov rsi,0x0000_ffff_ffff_ffff
	and rsi,[rdi] 
	mov r10,rsi
;; rsp=0 , %2674~4'(= r ) %2673~2'(= {| l |} ) %2671~3'(= r ) %2662~0'(= {| l |} ) %2659~1'(= {| l |} ) 
; #10 4'(= r ) ⊢ 4'(= r )
	mov rdi,fmt_emt
	call emt_stg
	mov rdi,r10
	C_PUSH_REGS
	mov r8,rdi
	mov rdi,r8 
	call emt_r64 
	C_POP_REGS
	mov rdi,fmt_nl
	call emt_stg
	jmp LB_5563
LB_5563:
; .dlt.ptn 4'(= r )
	mov rdi,r10
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
;; rsp=0 , %2673~2'(= {| l |} ) %2671~3'(= r ) %2662~0'(= {| l |} ) %2659~1'(= {| l |} ) 
; #10 3'(= r ) ⊢ 3'(= r )
	mov rdi,fmt_emt
	call emt_stg
	mov rdi,r9
	C_PUSH_REGS
	mov r8,rdi
	mov rdi,r8 
	call emt_r64 
	C_POP_REGS
	mov rdi,fmt_nl
	call emt_stg
	jmp LB_5564
LB_5564:
; .dlt.ptn 3'(= r )
	mov rdi,r9
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
;; rsp=0 , %2673~2'(= {| l |} ) %2662~0'(= {| l |} ) %2659~1'(= {| l |} ) 
; #10 2'(= {| l |} ) ⊢ 2'(= {| l |} )
	mov rdi,fmt_emt
	call emt_stg
	mov rdi,r8
	C_PUSH_REGS
	mov r8,rdi
	mov rdi,r8
	call emt_s8
	C_POP_REGS
	mov rdi,fmt_nl
	call emt_stg
	jmp LB_5565
LB_5565:
; .dlt.ptn 2'(= {| l |} )
	mov rdi,r8
	C_PUSH_REGS
	mov r8,rdi
	mov rdi,r8
	call free_s8
	C_POP_REGS
;; rsp=0 , %2662~0'(= {| l |} ) %2659~1'(= {| l |} ) 
; ∎ { }
; .dlt.ptn 0'(= {| l |} )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	mov rdi,r8
	call free_s8
	C_POP_REGS
; .dlt.ptn 1'(= {| l |} )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	mov rdi,r8
	call free_s8
	C_POP_REGS
; .mov_ptn2 { } ⊢ { }
	ret
LB_5560:
;; ?. 3'(= a35◂ [ a2◂ [ a31◂ [ ]]] ) ⊢ 1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] )
	mov QWORD [GBG_VCT+8*0],rdi
	mov r8,QWORD [rdi+8]
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_LN rdi
;; rsp=0 , %2668~2'(= a2◂ [ *{ rr{| l |}}] ) %2662~0'(= {| l |} ) %2659~1'(= {| l |} ) 
	mov rdi,LB_5566
	call emt_stg 
	jmp err
LB_5559:
;; ?. 2'(= a3◂ [ a35◂ [ a2◂ [ a31◂ [ ]]]] ) ⊢ 1(<2)◂{ }
;; rsp=0 , %2662~0'(= {| l |} ) %2659~1'(= {| l |} ) 
	mov rdi,LB_5567
	call emt_stg 
	jmp err
LB_5570:
	movzx rax,BYTE [r8+6]
	jmp QWORD [LB_5574+8*rax]
LB_5574: dq LB_5572,LB_5573
LB_5572:
	mov rdi,LB_5576
	call emt_stg 
	mov r8,QWORD [r8+8]
	call LB_5245
	jmp LB_5575
LB_5573:
	mov rdi,LB_5577
	call emt_stg 
	mov rdi,fmt_rcd_box_l
	call emt_stg
	mov rdi,fmt_rcd_r
	call emt_stg
	jmp LB_5575
LB_5575:
	ret
ETR_276: ;; E1 { } ⊢ { } : ({ }→{ })
;; rsp=0 , 
; » _^ .. ⊢ ..
; .. //
	mov rdi,0
	add rdi,3
	push rdi 
	call mlc_s8
	pop rdi
	mov r13,rax
	lea rdi,[rax+7+rdi]
	std 
	mov QWORD [tmp],rcx 
	lea rsi,[LB_5568+3-1]
	mov rcx,3
	rep movsb
	mov rcx,QWORD [tmp] 
;; rsp=0 , %2678~0'(= {| l |} ) 
; #207 { 0'(= {| l |} ) %[ 0r ] } ⊢ { 0'(= {| l |} ) 1'(= r ) 2'(= a3◂ [ a8◂ [ a13◂ [ {| l |}]]] ) }
; .mov_ptn2 { 0'(= {| l |} ) %[ 0r ] } ⊢ { 0'(= {| l |} ) 1'(= r ) }
; .mov_ptn %[ 0r ] ⊢ 1'(= r )
	mov rax,0
	mov r14,rax
	call ETR_207
;; rsp=0 , %2681~2'(= a3◂ [ a8◂ [ a13◂ [ {| l |}]]] ) %2680~1'(= r ) %2679~0'(= {| l |} ) 
; #10 1'(= r ) ⊢ 1'(= r )
	mov rdi,fmt_emt
	call emt_stg
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	mov rdi,r8 
	call emt_r64 
	C_POP_REGS
	mov rdi,fmt_nl
	call emt_stg
	jmp LB_5569
LB_5569:
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
;; rsp=0 , %2681~2'(= a3◂ [ a8◂ [ a13◂ [ {| l |}]]] ) %2679~0'(= {| l |} ) 
; #10 2'(= a3◂ [ a8◂ [ a13◂ [ {| l |}]]] ) ⊢ 2'(= a3◂ [ a8◂ [ a13◂ [ {| l |}]]] )
	mov rdi,fmt_emt
	call emt_stg
	mov rdi,r8
	C_PUSH_REGS
	mov r8,rdi
	call LB_5570
	C_POP_REGS
	mov rdi,fmt_nl
	call emt_stg
	jmp LB_5571
LB_5571:
;; rsp=0 , %2683~2'(= a3◂ [ a8◂ [ a13◂ [ {| l |}]]] ) %2679~0'(= {| l |} ) 
;; ? 2'(= a3◂ [ a8◂ [ a13◂ [ {| l |}]]] ) ⊢ 0(<2)◂1'(= a8◂ [ a13◂ [ {| l |}]] )
	mov rdi,r8
	cmp BYTE [rdi+6],0
	jnz LB_5578
	mov QWORD [GBG_VCT+8*0],rdi
	mov r14,QWORD [rdi+8]
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_LN rdi
;; rsp=0 , %2684~1'(= a8◂ [ a13◂ [ {| l |}]] ) %2679~0'(= {| l |} ) 
; #10 %[ "D0" ] ⊢ %[ "D0" ]
	mov rdi,fmt_emt
	call emt_stg
	mov rdi,LB_5579
	call emt_stg 
	mov rdi,fmt_nl
	call emt_stg
	jmp LB_5580
LB_5580:
; .dlt.ptn %[ "D0" ]
;; rsp=0 , %2684~1'(= a8◂ [ a13◂ [ {| l |}]] ) %2679~0'(= {| l |} ) 
; #101 1'(= a8◂ [ a13◂ [ {| l |}]] ) ⊢ 1'(= {| l |} )
	sub rsp,8
	mov QWORD [rsp+8*0],r13
; .mov_ptn2 1'(= a8◂ [ a13◂ [ {| l |}]] ) ⊢ 0'(= a8◂ [ a13◂ [ {| l |}]] )
; .mov_ptn 1'(= a8◂ [ a13◂ [ {| l |}]] ) ⊢ 0'(= a8◂ [ a13◂ [ {| l |}]] )
	mov rax,r14
	mov r13,rax
	call ETR_101
	mov r14,r13
	mov r13,QWORD [rsp-8+8*1]
	add rsp,8
;; rsp=0 , %2686~1'(= {| l |} ) %2679~0'(= {| l |} ) 
; #10 1'(= {| l |} ) ⊢ 1'(= {| l |} )
	mov rdi,fmt_emt
	call emt_stg
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	mov rdi,r8
	call emt_s8
	C_POP_REGS
	mov rdi,fmt_nl
	call emt_stg
	jmp LB_5581
LB_5581:
; .dlt.ptn 1'(= {| l |} )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	mov rdi,r8
	call free_s8
	C_POP_REGS
;; rsp=0 , %2679~0'(= {| l |} ) 
; ∎ { }
; .dlt.ptn 0'(= {| l |} )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	mov rdi,r8
	call free_s8
	C_POP_REGS
; .mov_ptn2 { } ⊢ { }
	ret
LB_5578:
;; ?. 2'(= a3◂ [ a8◂ [ a13◂ [ {| l |}]]] ) ⊢ 1(<2)◂{ }
;; rsp=0 , %2679~0'(= {| l |} ) 
	mov rdi,LB_5582
	call emt_stg 
	jmp err
ETR_277: ;; f0 0'(= r ) ⊢ 0'(= a3◂ [ r] ) : (_r64→_opn◂_r64)
;; rsp=0 , %2688~0'(= r ) 
	mov rdi,97
	cmp r13,rdi
;;97 =< .. 
	jl LB_5583
	mov rdi,122
	cmp r13,rdi
;; .. =< 122
	jg LB_5583
;; rsp=0 , %2688~0'(= r ) 
; #24 0'(= r ) ⊢ 0(<2)◂0'(= r )
;; rsp=0 , %2689~0(<2)◂0'(= r ) 
; ∎ 0(<2)◂0'(= r )
; .mov_ptn2 0(<2)◂0'(= r ) ⊢ 0'(= a3◂ [ r] )
	mov r14,r13
; .mov_ptn 0(<2)◂1'(= r ) ⊢ 0'(= a3◂ [ r] )
	mov rax,r14
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r13,rax
	ret
LB_5583:
;; rsp=0 , %2688~0'(= r ) 
; #25 { } ⊢ 1(<2)◂{ }
;; rsp=0 , %2690~1(<2)◂{ } %2688~0'(= r ) 
; ∎ 1(<2)◂{ }
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 1(<2)◂{ } ⊢ 0'(= a3◂ [ r] )
; .mov_ptn 1(<2)◂{ } ⊢ 0'(= a3◂ [ r] )
	mov rax,unt 
	mov rax,unt_1
	mov r13,rax
	ret
LB_5586:
	movzx rax,BYTE [r8+6]
	jmp QWORD [LB_5589+8*rax]
LB_5589: dq LB_5587,LB_5588
LB_5587:
	FREE_LN r8 
	mov r8,QWORD [r8+8]
	call LB_5591
	jmp LB_5590
LB_5588:
	jmp LB_5590
LB_5590:
	ret
LB_5591:
	movzx rax,BYTE [r8+6]
	jmp QWORD [LB_5594+8*rax]
LB_5594: dq LB_5592,LB_5593
LB_5592:
	FREE_LN r8 
	mov r8,QWORD [r8+8]
	call LB_3581
	jmp LB_5595
LB_5593:
	FREE_LN r8 
	mov r8,QWORD [r8+8]
	call LB_1706
	jmp LB_5595
LB_5595:
	ret
RTM_0:
;; rsp=0 , %0~0'(= {| {| l |}|} ) 
; » _^ .. ⊢ ..
; .. //
	mov rdi,0
	add rdi,17
	push rdi 
	call mlc_s8
	pop rdi
	mov r14,rax
	lea rdi,[rax+7+rdi]
	std 
	mov QWORD [tmp],rcx 
	lea rsi,[LB_5584+17-1]
	mov rcx,17
	rep movsb
	mov rcx,QWORD [tmp] 
;; rsp=0 , %2691~1'(= {| l |} ) %0~0'(= {| {| l |}|} ) 
; #10 1'(= {| l |} ) ⊢ 1'(= {| l |} )
	mov rdi,fmt_emt
	call emt_stg
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	mov rdi,r8
	call emt_s8
	C_POP_REGS
	mov rdi,fmt_nl
	call emt_stg
	jmp LB_5585
LB_5585:
;; rsp=0 , %2692~1'(= {| l |} ) %0~0'(= {| {| l |}|} ) 
; #245 { 1'(= {| l |} ) %[ 0r ] } ⊢ { 3'(= {| l |} ) 1'(= r ) 2'(= a3◂ [ a35◂ [ a2◂ [ a31◂ [ ]]]] ) }
	sub rsp,8
	mov QWORD [rsp+8*0],r13
; .mov_ptn2 { 1'(= {| l |} ) %[ 0r ] } ⊢ { 0'(= {| l |} ) 1'(= r ) }
; .mov_ptn 1'(= {| l |} ) ⊢ 0'(= {| l |} )
	mov rax,r14
	mov r13,rax
; .mov_ptn %[ 0r ] ⊢ 1'(= r )
	mov rax,0
	mov r14,rax
	call ETR_245
	mov r9,r13
	mov r13,QWORD [rsp-8+8*1]
	add rsp,8
; .dlt.ptn { 3'(= {| l |} ) 1'(= r ) 2'(= a3◂ [ a35◂ [ a2◂ [ a31◂ [ ]]]] ) }
	mov rdi,r9
	C_PUSH_REGS
	mov r8,rdi
	mov rdi,r8
	call free_s8
	C_POP_REGS
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
	mov rdi,r8
	C_PUSH_REGS
	mov r8,rdi
	call LB_5586
	C_POP_REGS
;; rsp=0 , %0~0'(= {| {| l |}|} ) 
; ∎
	jmp RTM_1
LB_5597:
	movzx rax,BYTE [r8+6]
	jmp QWORD [LB_5601+8*rax]
LB_5601: dq LB_5599,LB_5600
LB_5599:
	mov rdi,LB_5603
	call emt_stg 
	mov r8,QWORD [r8+8]
	call LB_5604
	jmp LB_5602
LB_5600:
	mov rdi,LB_5605
	call emt_stg 
	mov rdi,fmt_rcd_box_l
	call emt_stg
	mov rdi,fmt_rcd_r
	call emt_stg
	jmp LB_5602
LB_5602:
	ret
LB_5604:
	movzx rax,BYTE [r8+6]
	jmp QWORD [LB_5608+8*rax]
LB_5608: dq LB_5606,LB_5607
LB_5606:
	mov rdi,LB_5610
	call emt_stg 
	mov r8,QWORD [r8+8]
	call LB_5247
	jmp LB_5609
LB_5607:
	mov rdi,LB_5611
	call emt_stg 
	mov r8,QWORD [r8+8]
	call LB_5153
	jmp LB_5609
LB_5609:
	ret
LB_5612:
	movzx rax,BYTE [r8+6]
	jmp QWORD [LB_5615+8*rax]
LB_5615: dq LB_5613,LB_5614
LB_5613:
	FREE_LN r8 
	mov r8,QWORD [r8+8]
	call LB_5617
	jmp LB_5616
LB_5614:
	jmp LB_5616
LB_5616:
	ret
LB_5617:
	movzx rax,BYTE [r8+6]
	jmp QWORD [LB_5620+8*rax]
LB_5620: dq LB_5618,LB_5619
LB_5618:
	FREE_LN r8 
	mov r8,QWORD [r8+8]
	call LB_674
	jmp LB_5621
LB_5619:
	FREE_LN r8 
	mov r8,QWORD [r8+8]
	call LB_1706
	jmp LB_5621
LB_5621:
	ret
RTM_1:
;; rsp=0 , %0~0'(= {| {| l |}|} ) 
; » _^ .. ⊢ ..
; .. //
	mov rdi,0
	add rdi,8
	push rdi 
	call mlc_s8
	pop rdi
	mov r14,rax
	lea rdi,[rax+7+rdi]
	std 
	mov QWORD [tmp],rcx 
	lea rsi,[LB_5596+8-1]
	mov rcx,8
	rep movsb
	mov rcx,QWORD [tmp] 
;; rsp=0 , %2694~1'(= {| l |} ) %0~0'(= {| {| l |}|} ) 
; #236 { 1'(= {| l |} ) %[ 0r ] } ⊢ { 3'(= {| l |} ) 1'(= r ) 2'(= a3◂ [ a35◂ [ a17◂ [ a9◂ [ ]{| l |}]]] ) }
	sub rsp,8
	mov QWORD [rsp+8*0],r13
; .mov_ptn2 { 1'(= {| l |} ) %[ 0r ] } ⊢ { 0'(= {| l |} ) 1'(= r ) }
; .mov_ptn 1'(= {| l |} ) ⊢ 0'(= {| l |} )
	mov rax,r14
	mov r13,rax
; .mov_ptn %[ 0r ] ⊢ 1'(= r )
	mov rax,0
	mov r14,rax
	call ETR_236
	mov r9,r13
	mov r13,QWORD [rsp-8+8*1]
	add rsp,8
;; rsp=0 , %2697~2'(= a3◂ [ a35◂ [ a17◂ [ a9◂ [ ]{| l |}]]] ) %2696~1'(= r ) %2695~3'(= {| l |} ) %0~0'(= {| {| l |}|} ) 
; #10 { 3'(= {| l |} ) 1'(= r ) 2'(= a3◂ [ a35◂ [ a17◂ [ a9◂ [ ]{| l |}]]] ) } ⊢ { 3'(= {| l |} ) 1'(= r ) 2'(= a3◂ [ a35◂ [ a17◂ [ a9◂ [ ]{| l |}]]] ) }
	mov rdi,fmt_emt
	call emt_stg
	mov rdi,fmt_rcd_l 
	call emt_stg 
	mov rdi,r9
	C_PUSH_REGS
	mov r8,rdi
	mov rdi,r8
	call emt_s8
	C_POP_REGS
	mov rdi,fmt_spc 
	call emt_stg 
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	mov rdi,r8 
	call emt_r64 
	C_POP_REGS
	mov rdi,fmt_spc 
	call emt_stg 
	mov rdi,r8
	C_PUSH_REGS
	mov r8,rdi
	call LB_5597
	C_POP_REGS
	mov rdi,fmt_spc 
	call emt_stg 
	mov rdi,fmt_rcd_r 
	call emt_stg 
	mov rdi,fmt_nl
	call emt_stg
	jmp LB_5598
LB_5598:
; .dlt.ptn { 3'(= {| l |} ) 1'(= r ) 2'(= a3◂ [ a35◂ [ a17◂ [ a9◂ [ ]{| l |}]]] ) }
	mov rdi,r9
	C_PUSH_REGS
	mov r8,rdi
	mov rdi,r8
	call free_s8
	C_POP_REGS
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
	mov rdi,r8
	C_PUSH_REGS
	mov r8,rdi
	call LB_5612
	C_POP_REGS
;; rsp=0 , %0~0'(= {| {| l |}|} ) 
; #10 0'(= {| {| l |}|} ) ⊢ 0'(= {| {| l |}|} )
	mov rdi,fmt_emt
	call emt_stg
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	mov rdi,fmt_arr_l 
	call emt_stg 
	mov rsi,[r8]
	mov rax,0 
LB_5622:
	cmp rsi,rax 
	jz LB_5623
	push r8 
	push rsi 
	push rax 
	mov r8,QWORD [r8+8+8*rax]
	mov rdi,r8
	call emt_s8
	mov rdi,fmt_spc 
	call emt_stg 
	pop rax 
	pop rsi 
	pop r8 
	add rax,1 
	jmp LB_5622
LB_5623:
	mov rdi,fmt_arr_r 
	call emt_stg
	C_POP_REGS
	mov rdi,fmt_nl
	call emt_stg
	jmp LB_5624
LB_5624:
;; rsp=0 , %2699~0'(= {| {| l |}|} ) 
; #276 { } ⊢ { }
	sub rsp,8
	mov QWORD [rsp+8*0],r13
; .mov_ptn2 { } ⊢ { }
	call ETR_276
	mov r13,QWORD [rsp-8+8*1]
	add rsp,8
; .dlt.ptn { }
;; rsp=0 , %2699~0'(= {| {| l |}|} ) 
; #4 { 0'(= {| {| l |}|} ) %[ 1r ] } ⊢ { 0'(= {| {| l |}|} ) %[ 1r ] 2'(= {| l |} ) }
	mov rax,1
	mov rdi,r13
	mov rsi,0x0000_ffff_ffff_ffff 
	and rsi,QWORD [rdi]
	cmp rax,rsi 
	jge err 
	mov rdi,[rdi+8+8*rax]
	C_PUSH_REGS
	mov r8,rdi
	C_PUSH_REGS
	mov rdi,r8  
	call rpc_s8  
	C_POP_REGS
	C_POP_REGS
	mov r14,rax
; .mov_ptn2 1'(= {| l |} ) ⊢ 2'(= {| l |} )
	mov r9,r8
; .mov_ptn 1'(= {| l |} ) ⊢ 2'(= {| l |} )
	mov rax,r14
	mov r8,rax
; .dlt.ptn %[ 1r ]
;; rsp=0 , %2703~2'(= {| l |} ) %2701~0'(= {| {| l |}|} ) 
; #275 2'(= {| l |} ) ⊢ { }
	sub rsp,8
	mov QWORD [rsp+8*0],r13
; .mov_ptn2 2'(= {| l |} ) ⊢ 0'(= {| l |} )
; .mov_ptn 2'(= {| l |} ) ⊢ 0'(= {| l |} )
	mov rax,r8
	mov r13,rax
	call ETR_275
	mov r13,QWORD [rsp-8+8*1]
	add rsp,8
; .dlt.ptn { }
;; rsp=0 , %2701~0'(= {| {| l |}|} ) 
; ∎
	jmp RTM_2
RTM_2:
	mov rdi,0
	mov QWORD rdi,rsp
	and rsp,~0xf
	push rdi
	call exit
	pop rdi
	mov rsp,rdi

err: 
	mov rdi,fmt_err_line
	mov rsi,QWORD [err_n]
	xor rax,rax
	C_CALL printf
	mov rax,1
	mov rbx,0
	int 0x80
