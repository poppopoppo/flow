bits 64 
; macros 
%macro C_PUSH_REGS 0 
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
%endmacro

%macro C_POP_REGS 0 
	pop r11 
	pop r10 
	pop r9 
	pop r8 
	pop rcx 
	pop rdx 
%endmacro

%macro C_CALL_SF 1 
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call %1 
	mov rsp,QWORD [rsp_tmp]
	pop r11 
	pop r10 
	pop r9 
	pop r8 
	pop rcx 
	pop rdx 
%endmacro 

%macro C_CALL 1 
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call %1 
	mov rsp,QWORD [rsp_tmp]
%endmacro 

%macro JZ_SPC 2
	movzx MCR_REG,%1
	cmp MCR_REG,9 
	jz %2
	cmp MCR_REG,10 
	jz %2
	cmp MCR_REG,32 
	jz %2
%endmacro
 
%macro JZ_LINE_SPC 2
	movzx MCR_REG,%1 
	cmp MCR_REG,9 
	jz %2
	cmp MCR_REG,32 
	jz %2
%endmacro
 
%macro PUSH_GRM 0 
	sub rsp,32
	mov QWORD [rsp+24],r13
	mov QWORD [rsp+16],r14 
	mov QWORD [rsp+8],r9
%endmacro

%macro POP_GRM_SCC 0
	mov r9,QWORD [rsp+8]
	mov r14,QWORD [rsp]
	mov r13,QWORD [rsp+24]
	add rsp,32 
%endmacro 

%macro POP_GRM_FAIL 0
	mov r9,QWORD [rsp+8]
	mov r14,QWORD [rsp+16]
	mov r13,QWORD [rsp+24]
	add rsp,32 
%endmacro 

%macro RB_GRM 0
	mov r9,QWORD [rsp+8]
	mov r14,QWORD [rsp+16]
	mov r13,QWORD [rsp+24]
%endmacro 

%macro ALC_RCD 2 ; n,reg-name!=rbx 
	add QWORD [SS_RCD_C+8*%1],1
	add QWORD [SS_RCD_N+8*%1],1 
	mov %2,[SS_RCD_%1_TOP]
	mov MCR_REG,[%2]
	mov QWORD [SS_RCD_%1_TOP],MCR_REG
%endmacro 

%macro FREE_RCD 2 ; n,reg-name!=rbx 
	sub QWORD [SS_RCD_N+8*%1],1
	mov rbx,QWORD [SS_RCD_%1_TOP] 
	mov QWORD [%2],rbx
	mov QWORD [SS_RCD_%1_TOP],%2
%endmacro
				
%macro FREE_LN 1 
	sub SS_LN_N,1 
	mov QWORD [%1],SS_LN_REG
	mov SS_LN_REG,%1
%endmacro

%macro ALC_LN 1 
	add QWORD [SS_LN_C],1 
	add SS_LN_N,1 
	mov %1,SS_LN_REG 
	mov SS_LN_REG,QWORD [SS_LN_REG]
%endmacro

%macro GET_LEN 2 
	mov %1,0x0000_ffff_ffff_ffff
	and %1,QWORD [%2]
%endmacro

%macro MOV_RAX 2 
	mov rax,%2 
	mov %1,rax
	%endmacro

%macro MOV_RDI 2 
	mov rdi,%2 
	mov %1,rdi
%endmacro

%macro MOV_RBX 2 
	mov rbx,%2
	mov %1,rbx
%endmacro

%macro BSS_SS_RCD 2 
	SS_RCD_%1_TOP: resq 1 
	SS_RCD_%1_VCT: resq (%1+1)*(%2+4)
	SS_RCD_%1_BTM: resq 1
%endmacro 

%define KB 1024
%define MB KB*KB 
%define GB MB*MB
%define SIG_INT 2
%define SIG_SEGV 11
%define SS_MAX 4000
%define SS_LN_MAX 1<<16
%define RCD_N 16
%define SS_NULL 0xffff_ffff_ffff_0000
%define EMT_BUF_MAX (KB<<1)
%define SS_LN_REG r15
%define MCR_REG rbx
%define SS_LN_N rbp
extern exit 
extern printf 
extern sprintf
extern malloc 
extern calloc
extern free 
extern isspace 
extern strtoul
extern strlen
extern getchar
extern set_handler
section .bss
	tmp: resq 64
	ret_vct: resq 64
 rsp_tmp: resq 1

; emt buffer 
	EMT_BUF_OFS: resq 1 
 EMT_BUF: resb EMT_BUF_MAX 
	EMT_BUF_END: resb 1
 
; garbage vector 
	GBG_VCT: resq 252

; SS segments 
	SS_TOP: resq 1
	SS_VCT: resq 16*SS_MAX
	SS_BTM: resq 1 

	SS_LN_TOP: resq 1
	SS_LN_VCT: resq 2*SS_LN_MAX
	SS_LN_BTM: resq 1  

	SS_PT_TOP: resq 1
	SS_PT_VCT: resq 3*SS_MAX
	SS_PT_BTM: resq 1 

	SS_RCD_N: resq (RCD_N+1) 
	SS_RCD_C: resq (RCD_N+1)

stat: resb 144
struc STAT
	.st_dev         resq 1
	.st_ino         resq 1
	.st_mode        resd 1
	.st_nlink       resd 1
	.st_uid         resd 1
	.st_gid         resd 1
	.st_rdev        resq 1
	.pad1           resq 1
	.st_size        resq 1
	.st_blksize     resd 1
	.pad2 resd 1
	.st_blocks      resq 1
	.st_atime       resq 1
	.st_atime_nsec  resq 1
	.st_mtime       resq 1
	.st_mtime_nsec  resq 1
	.st_ctime       resq 1
	.st_ctime_nsec  resq 1
	.__unused4  resd 1
	.__unused5  resd 1
endstruc

%define SS_RCD_1_MAX 800
	BSS_SS_RCD 1,SS_RCD_1_MAX
%define SS_RCD_2_MAX (1<<16)
	BSS_SS_RCD 2,SS_RCD_2_MAX
%define SS_RCD_3_MAX (1<<14)
	BSS_SS_RCD 3,SS_RCD_3_MAX
%define SS_RCD_4_MAX 800
	BSS_SS_RCD 4,SS_RCD_4_MAX
%define SS_RCD_5_MAX 800
	BSS_SS_RCD 5,SS_RCD_5_MAX
%define SS_RCD_6_MAX 800
	BSS_SS_RCD 6,SS_RCD_6_MAX
%define SS_RCD_7_MAX 800
	BSS_SS_RCD 7,SS_RCD_7_MAX
%define SS_RCD_8_MAX 800
	BSS_SS_RCD 8,SS_RCD_8_MAX
%define SS_RCD_9_MAX 800
	BSS_SS_RCD 9,SS_RCD_9_MAX
%define SS_RCD_10_MAX 800
	BSS_SS_RCD 10,SS_RCD_10_MAX
%define SS_RCD_11_MAX 800
	BSS_SS_RCD 11,SS_RCD_11_MAX
%define SS_RCD_12_MAX 800
	BSS_SS_RCD 12,SS_RCD_12_MAX
%define SS_RCD_13_MAX 800
	BSS_SS_RCD 13,SS_RCD_13_MAX
%define SS_RCD_14_MAX 800
	BSS_SS_RCD 14,SS_RCD_14_MAX
%define SS_RCD_15_MAX 800
	BSS_SS_RCD 15,SS_RCD_15_MAX
section .data
	err_n: dq 0
 SS_LN_C: dq 0
	fmt_err_line: db "err:%x",10,0
	fmt_r64: db "%dr",0
	fmt_s8: db 34,"%s",34,0
	fmt_d: db "%d",0
	fmt_x: db "%x",0
	fmt_arr_l: db "{| ",0
	fmt_arr_r: db "|}",0
	fmt_rcd_l: db "{ ",0
	fmt_rcd_r: db "} ",0
	fmt_rcd_box_l: db "*{ "
	fmt_nl: db 10,0
	fmt_spc: db " ",0
	fmt_emt: db "_emt:",0
	fmt_getchar: db "_getchar:",0
	rt_err0: db "rt_err 0:",10,0 
 s8_e: dq 0,0

	fmt_info:
		db "info:",10
		db "SS_LN_C=%d",10
		db "SS_LN_N=%d",10
		db 0
	fmt_info_rcd:
		db "rcd %d",10
		db "SS_RCD_C=%d",10
		db "SS_RCD_N=%d",10
		db 0

fmt_sig_hdl:
	db "sig_hdl:",10
	db "signal number=%d",10
	db 0

	unt: dq 0x0

	unt_0: dq 0x0 
	unt_1: dq 0x00_01_0000_0000_0000 
	unt_2: dq 0x00_02_0000_0000_0000 
	unt_3: dq 0x00_03_0000_0000_0000 
	unt_4: dq 0x00_04_0000_0000_0000 
	unt_5: dq 0x00_05_0000_0000_0000 
	unt_6: dq 0x00_06_0000_0000_0000 
	unt_7: dq 0x00_07_0000_0000_0000 
	unt_8: dq 0x00_08_0000_0000_0000 

LB_91: db 34,101,115,99,95,115,116,103,95,108,116,114,34,0
LB_93: db 59,32,226,136,142,124,10,101,120,110,32,54,52,50,54,58,10,0
LB_297: db 95,0
LB_306: db 46,0
LB_308: db 114,0
LB_309: db 34,0
LB_310: db 34,0
LB_313: db 125,0
LB_314: db 123,32,0
LB_316: db 32,93,32,0
LB_317: db 37,91,32,0
LB_319: db 32,0
LB_321: db 125,0
LB_322: db 123,32,0
LB_330: db 32,0
LB_369: db 125,0
LB_370: db 123,32,0
LB_404: db 32,93,32,0
LB_405: db 37,91,32,0
LB_407: db 226,151,130,0
LB_409: db 37,0
LB_411: db 32,0
LB_413: db 32,226,138,162,124,10,0
LB_414: db 32,0
LB_415: db 9,0
LB_419: db 32,226,138,162,124,10,0
LB_420: db 44,0
LB_421: db 226,151,130,0
LB_422: db 9,0
LB_429: db 10,0
LB_430: db 32,226,138,162,32,0
LB_431: db 36,32,0
LB_432: db 9,0
LB_435: db 32,226,138,162,10,0
LB_436: db 36,32,0
LB_437: db 9,0
LB_441: db 226,136,142,32,46,46,10,0
LB_442: db 9,0
LB_465: db 226,136,142,124,10,0
LB_466: db 9,0
LB_470: db 10,0
LB_471: db 32,226,138,162,32,0
LB_472: db 32,0
LB_473: db 9,0
LB_477: db 10,0
LB_478: db 32,226,138,162,32,0
LB_479: db 44,0
LB_480: db 226,151,130,32,0
LB_481: db 9,0
LB_485: db 10,0
LB_486: db 32,226,138,162,32,0
LB_487: db 32,0
LB_488: db 194,187,32,0
LB_489: db 9,0
LB_492: db 194,187,32,95,94,32,46,46,32,226,138,162,32,46,46,10,32,46,46,32,47,47,10,0
LB_493: db 9,0
LB_532: db 226,136,144,32,46,46,32,59,10,0
LB_533: db 9,0
LB_553: db 226,138,162,32,10,0
LB_554: db 226,136,144,32,46,46,32,59,32,0
LB_555: db 9,0
LB_558: db 226,136,144,32,46,46,32,46,10,0
LB_559: db 9,0
LB_563: db 226,136,144,46,32,46,46,32,46,10,0
LB_564: db 9,0
LB_568: db 226,138,162,32,10,0
LB_569: db 226,136,144,32,46,46,32,59,32,0
LB_570: db 9,0
LB_573: db 226,136,144,46,32,46,46,32,46,10,0
LB_574: db 9,0
LB_579: db 46,46,32,59,10,0
LB_580: db 226,136,144,32,0
LB_581: db 9,0
LB_585: db 226,138,162,32,10,0
LB_586: db 226,136,144,32,46,46,32,59,32,0
LB_587: db 9,0
LB_590: db 226,136,144,32,46,46,32,46,10,0
LB_591: db 9,0
LB_595: db 226,136,144,46,32,46,46,32,59,10,0
LB_596: db 9,0
LB_600: db 226,138,162,32,10,0
LB_601: db 226,136,144,32,46,46,32,59,32,0
LB_602: db 9,0
LB_605: db 226,136,144,46,32,46,46,32,46,10,0
LB_606: db 9,0
LB_610: db 10,0
LB_611: db 64,46,0
LB_612: db 9,0
LB_617: db 226,136,144,32,46,46,10,0
LB_618: db 9,0
LB_658: db 226,136,144,46,32,46,46,32,10,0
LB_659: db 9,0
LB_663: db 10,0
LB_664: db 226,136,144,32,46,46,32,226,138,162,32,0
LB_665: db 9,0
LB_726: db 10,0
LB_727: db 226,136,144,46,32,46,46,32,226,138,162,32,0
LB_728: db 9,0
LB_734: db 9,226,136,142,226,136,142,10,0
LB_735: db 9,0
LB_738: db 10,0
LB_739: db 194,167,194,167,32,0
LB_740: db 9,0
LB_743: db 10,0
LB_744: db 32,61,32,0
LB_745: db 194,167,194,167,32,0
LB_746: db 9,0
LB_750: db 194,167,194,167,43,115,56,10,0
LB_751: db 9,0
LB_755: db 194,167,32,0
LB_756: db 9,0
LB_760: db 194,167,32,10,0
LB_761: db 9,0
LB_766: db 10,0
LB_767: db 194,182,32,0
LB_768: db 9,0
LB_776: db 32,61,32,46,46,32,10,0
LB_777: db 194,182,32,0
LB_778: db 9,0
LB_794: db 194,182,10,0
LB_795: db 9,0
LB_800: db 10,0
LB_801: db 64,46,0
LB_802: db 9,0
LB_805: db 32,61,32,46,46,32,10,0
LB_806: db 64,46,0
LB_807: db 9,0
LB_811: db 10,0
LB_812: db 10,0
LB_813: db 32,61,32,0
LB_815: db 10,0
LB_816: db 32,58,32,0
LB_817: db 226,136,144,32,0
LB_818: db 9,0
LB_822: db 125,0
LB_823: db 123,32,0
LB_825: db 32,226,134,146,32,0
LB_827: db 226,151,130,0
LB_829: db 39,0
LB_831: db 32,0
LB_834: db 10,0
LB_835: db 32,58,32,0
LB_836: db 32,0
LB_837: db 10,0
LB_838: db 32,0
LB_845: db 10,0
LB_846: db 32,61,32,0
LB_847: db 32,194,171,32,10,0
LB_850: db 10,0
LB_851: db 32,58,32,0
LB_852: db 32,0
LB_853: db 64,46,0
LB_854: db 9,0
LB_857: db 10,0
LB_858: db 32,0
LB_859: db 64,46,0
LB_860: db 9,0
LB_1030: db 10,0
LB_1031: db 58,0
LB_1032: db 45,0
LB_1033: db 112,114,115,95,101,114,114,32,0
LB_1813: db 59,32,226,136,142,124,10,101,120,110,32,51,52,49,50,54,58,10,0
LB_1817: db 58,10,0
LB_1818: db 45,0
LB_1819: db 110,108,115,95,101,114,114,32,0
LB_1821: db 59,32,226,136,142,124,10,101,120,110,32,51,52,50,55,53,58,10,0
LB_1868: db 59,32,226,136,142,124,10,101,120,110,32,51,52,54,56,53,58,10,0
LB_1968: db 34,108,105,110,101,95,114,101,115,95,99,32,48,34,0
LB_1970: db 59,32,226,136,142,124,10,101,120,110,32,51,53,53,52,51,58,10,0
LB_3651: db 34,102,105,108,101,32,101,110,100,34,0
LB_3656: db 34,102,105,108,101,32,101,110,100,32,110,108,34,0
LB_4118: db 34,100,116,95,101,116,114,32,48,34,0
LB_4484: db 34,108,99,95,101,116,114,95,98,111,100,121,32,48,34,0
LB_4868: db 34,103,114,109,95,101,116,114,95,97,99,116,95,97,99,116,32,48,34,0
LB_4871: db 59,32,226,136,142,124,10,101,120,110,32,53,56,50,51,48,58,10,0
LB_4899: db 34,103,114,109,95,101,116,114,95,97,99,116,95,97,99,116,32,49,34,0
LB_4902: db 59,32,226,136,142,124,10,101,120,110,32,53,56,52,57,57,58,10,0
LB_5242: db 34,99,102,32,48,34,0
LB_5244: db 59,32,226,136,142,124,10,101,120,110,32,54,55,54,49,55,58,10,0
LB_5246: db 125,0
LB_5247: db 123,32,0
LB_5249: db 32,41,0
LB_5250: db 39,40,61,32,0
LB_5252: db 32,93,0
LB_5253: db 37,91,32,0
LB_5255: db 101,39,32,93,0
LB_5256: db 37,91,32,0
LB_5258: db 39,32,62,93,0
LB_5259: db 39,32,44,32,0
LB_5260: db 91,60,32,0
LB_5261: db 41,226,151,130,0
LB_5262: db 40,60,0
LB_5264: db 93,0
LB_5265: db 226,151,130,32,91,32,0
LB_5266: db 97,0
LB_5268: db 114,0
LB_5271: db 125,0
LB_5272: db 42,123,32,0
LB_5274: db 124,125,0
LB_5275: db 123,124,32,0
LB_5277: db 62,125,0
LB_5278: db 123,60,32,0
LB_5280: db 113,0
LB_5283: db 32,0
LB_5354: db 93,0
LB_5355: db 81,87,79,82,68,32,91,71,66,71,95,86,67,84,43,56,42,0
LB_5358: db 10,9,70,82,69,69,95,76,78,32,114,100,105,10,0
LB_5359: db 9,109,111,118,32,114,100,105,44,0
LB_5360: db 44,114,100,105,10,0
LB_5361: db 10,9,70,82,69,69,95,82,67,68,32,0
LB_5362: db 9,109,111,118,32,114,100,105,44,0
LB_5367: db 115,101,99,116,105,111,110,32,46,100,97,116,97,10,9,101,114,114,95,110,58,32,100,113,32,48,10,32,83,83,95,76,78,95,67,58,32,100,113,32,48,10,9,102,109,116,95,101,114,114,95,108,105,110,101,58,32,100,98,32,34,101,114,114,58,37,120,34,44,49,48,44,48,10,9,102,109,116,95,114,54,52,58,32,100,98,32,34,37,100,114,34,44,48,10,9,102,109,116,95,115,56,58,32,100,98,32,51,52,44,34,37,115,34,44,51,52,44,48,10,9,102,109,116,95,100,58,32,100,98,32,34,37,100,34,44,48,10,9,102,109,116,95,120,58,32,100,98,32,34,37,120,34,44,48,10,9,102,109,116,95,97,114,114,95,108,58,32,100,98,32,34,123,124,32,34,44,48,10,9,102,109,116,95,97,114,114,95,114,58,32,100,98,32,34,124,125,34,44,48,10,9,102,109,116,95,114,99,100,95,108,58,32,100,98,32,34,123,32,34,44,48,10,9,102,109,116,95,114,99,100,95,114,58,32,100,98,32,34,125,32,34,44,48,10,9,102,109,116,95,114,99,100,95,98,111,120,95,108,58,32,100,98,32,34,42,123,32,34,10,9,102,109,116,95,110,108,58,32,100,98,32,49,48,44,48,10,9,102,109,116,95,115,112,99,58,32,100,98,32,34,32,34,44,48,10,9,102,109,116,95,101,109,116,58,32,100,98,32,34,95,101,109,116,58,34,44,48,10,9,102,109,116,95,103,101,116,99,104,97,114,58,32,100,98,32,34,95,103,101,116,99,104,97,114,58,34,44,48,10,9,114,116,95,101,114,114,48,58,32,100,98,32,34,114,116,95,101,114,114,32,48,58,34,44,49,48,44,48,32,10,32,115,56,95,101,58,32,100,113,32,48,44,48,10,10,9,102,109,116,95,105,110,102,111,58,10,9,9,100,98,32,34,105,110,102,111,58,34,44,49,48,10,9,9,100,98,32,34,83,83,95,76,78,95,67,61,37,100,34,44,49,48,10,9,9,100,98,32,34,83,83,95,76,78,95,78,61,37,100,34,44,49,48,10,9,9,100,98,32,48,10,9,102,109,116,95,105,110,102,111,95,114,99,100,58,10,9,9,100,98,32,34,114,99,100,32,37,100,34,44,49,48,10,9,9,100,98,32,34,83,83,95,82,67,68,95,67,61,37,100,34,44,49,48,10,9,9,100,98,32,34,83,83,95,82,67,68,95,78,61,37,100,34,44,49,48,10,9,9,100,98,32,48,10,10,102,109,116,95,115,105,103,95,104,100,108,58,10,9,100,98,32,34,115,105,103,95,104,100,108,58,34,44,49,48,10,9,100,98,32,34,115,105,103,110,97,108,32,110,117,109,98,101,114,61,37,100,34,44,49,48,10,9,100,98,32,48,10,10,9,117,110,116,58,32,100,113,32,48,120,48,10,10,9,117,110,116,95,48,58,32,100,113,32,48,120,48,32,10,9,117,110,116,95,49,58,32,100,113,32,48,120,48,48,95,48,49,95,48,48,48,48,95,48,48,48,48,95,48,48,48,48,32,10,9,117,110,116,95,50,58,32,100,113,32,48,120,48,48,95,48,50,95,48,48,48,48,95,48,48,48,48,95,48,48,48,48,32,10,9,117,110,116,95,51,58,32,100,113,32,48,120,48,48,95,48,51,95,48,48,48,48,95,48,48,48,48,95,48,48,48,48,32,10,9,117,110,116,95,52,58,32,100,113,32,48,120,48,48,95,48,52,95,48,48,48,48,95,48,48,48,48,95,48,48,48,48,32,10,9,117,110,116,95,53,58,32,100,113,32,48,120,48,48,95,48,53,95,48,48,48,48,95,48,48,48,48,95,48,48,48,48,32,10,9,117,110,116,95,54,58,32,100,113,32,48,120,48,48,95,48,54,95,48,48,48,48,95,48,48,48,48,95,48,48,48,48,32,10,9,117,110,116,95,55,58,32,100,113,32,48,120,48,48,95,48,55,95,48,48,48,48,95,48,48,48,48,95,48,48,48,48,32,10,9,117,110,116,95,56,58,32,100,113,32,48,120,48,48,95,48,56,95,48,48,48,48,95,48,48,48,48,95,48,48,48,48,32,10,10,0
LB_5368: db 115,101,99,116,105,111,110,32,46,116,101,120,116,10,103,108,111,98,97,108,32,95,115,116,97,114,116,10,10,105,110,102,111,58,10,9,67,95,80,85,83,72,95,82,69,71,83,10,9,109,111,118,32,114,100,105,44,102,109,116,95,105,110,102,111,32,10,9,109,111,118,32,114,115,105,44,81,87,79,82,68,32,91,83,83,95,76,78,95,67,93,10,9,109,111,118,32,114,100,120,44,83,83,95,76,78,95,78,32,10,9,120,111,114,32,114,97,120,44,114,97,120,32,10,9,67,95,67,65,76,76,32,112,114,105,110,116,102,10,9,109,111,118,32,114,97,120,44,48,10,105,110,102,111,95,114,99,100,58,10,9,112,117,115,104,32,114,97,120,32,10,9,109,111,118,32,114,100,105,44,102,109,116,95,105,110,102,111,95,114,99,100,10,9,109,111,118,32,114,115,105,44,114,97,120,32,10,9,109,111,118,32,114,100,120,44,81,87,79,82,68,32,91,83,83,95,82,67,68,95,67,43,56,42,114,97,120,93,10,9,109,111,118,32,114,99,120,44,81,87,79,82,68,32,91,83,83,95,82,67,68,95,78,43,56,42,114,97,120,93,10,9,120,111,114,32,114,97,120,44,114,97,120,10,9,67,95,67,65,76,76,32,112,114,105,110,116,102,32,10,9,112,111,112,32,114,97,120,32,10,9,99,109,112,32,114,97,120,44,82,67,68,95,78,32,10,9,106,122,32,105,110,102,111,95,114,99,100,95,101,110,100,32,10,9,97,100,100,32,114,97,120,44,49,32,10,9,106,109,112,32,105,110,102,111,95,114,99,100,32,10,105,110,102,111,95,114,99,100,95,101,110,100,58,10,9,67,95,80,79,80,95,82,69,71,83,32,10,9,114,101,116,10,59,103,101,116,99,104,97,114,58,10,59,9,120,111,114,32,114,97,120,44,114,97,120,32,10,59,9,67,95,67,65,76,76,95,83,70,32,103,101,116,99,104,97,114,32,10,59,9,114,101,116,10,10,115,105,103,95,104,100,108,58,32,59,32,114,100,105,61,115,105,103,95,110,32,114,115,105,61,115,105,103,105,110,102,111,95,116,42,32,114,100,120,61,118,111,105,100,42,10,9,112,117,115,104,32,114,100,105,32,10,9,112,117,115,104,32,114,115,105,32,10,9,112,117,115,104,32,114,100,120,32,10,9,120,111,114,32,114,97,120,44,114,97,120,32,10,9,109,111,118,32,114,115,105,44,114,100,105,32,10,9,109,111,118,32,114,100,105,44,102,109,116,95,115,105,103,95,104,100,108,10,9,67,95,67,65,76,76,32,112,114,105,110,116,102,32,10,9,99,97,108,108,32,105,110,102,111,32,10,9,99,97,108,108,32,101,120,105,116,32,10,9,106,109,112,32,101,114,114,10,10,101,113,95,115,56,58,32,59,114,100,105,44,114,115,105,10,9,112,117,115,104,32,114,100,120,10,9,109,111,118,32,114,97,120,44,48,120,48,48,48,48,95,102,102,102,102,95,102,102,102,102,95,102,102,102,102,32,10,9,97,110,100,32,114,97,120,44,81,87,79,82,68,32,91,114,100,105,93,10,9,109,111,118,32,114,100,120,44,48,120,48,48,48,48,95,102,102,102,102,95,102,102,102,102,95,102,102,102,102,10,9,97,110,100,32,114,100,120,44,81,87,79,82,68,32,91,114,115,105,93,10,9,99,109,112,32,114,97,120,44,114,100,120,10,9,106,110,122,32,101,113,95,115,56,95,102,32,10,101,113,95,115,56,95,108,112,58,10,9,99,109,112,32,114,97,120,44,48,10,9,106,122,32,101,113,95,115,56,95,116,10,9,109,111,118,122,120,32,114,100,120,44,66,89,84,69,32,91,114,100,105,43,55,43,114,97,120,93,10,9,99,109,112,32,66,89,84,69,32,91,114,115,105,43,55,43,114,97,120,93,44,100,108,32,10,9,106,110,122,32,101,113,95,115,56,95,102,32,10,9,115,117,98,32,114,97,120,44,49,32,10,9,106,109,112,32,101,113,95,115,56,95,108,112,32,10,101,113,95,115,56,95,102,58,10,9,112,111,112,32,114,100,120,32,10,9,109,111,118,32,114,97,120,44,48,32,10,9,115,116,122,10,9,114,101,116,32,10,101,113,95,115,56,95,116,58,10,9,112,111,112,32,114,100,120,32,10,9,109,111,118,32,114,97,120,44,49,32,10,9,114,101,116,10,10,114,112,99,95,115,56,58,32,59,32,114,100,105,32,226,138,162,32,114,97,120,10,9,112,117,115,104,32,114,100,105,32,10,9,109,111,118,32,114,115,105,44,48,120,48,48,48,48,95,102,102,102,102,95,102,102,102,102,95,102,102,102,102,10,9,97,110,100,32,114,115,105,44,81,87,79,82,68,32,91,114,100,105,93,32,32,10,9,112,117,115,104,32,114,115,105,10,9,109,111,118,32,114,100,105,44,114,115,105,32,10,9,99,97,108,108,32,109,108,99,95,115,56,10,9,112,111,112,32,114,99,120,32,10,9,112,111,112,32,114,115,105,32,10,9,97,100,100,32,114,115,105,44,56,10,9,108,101,97,32,114,100,105,44,91,114,97,120,43,56,93,10,9,99,108,100,32,10,9,114,101,112,32,109,111,118,115,98,10,9,114,101,116,10,32,32,32,32,32,10,101,115,99,95,115,56,58,32,59,32,114,100,105,32,226,138,162,32,114,97,120,32,10,9,109,111,118,32,114,115,105,44,48,120,48,48,48,48,95,102,102,102,102,95,102,102,102,102,95,102,102,102,102,10,9,97,110,100,32,114,115,105,44,81,87,79,82,68,32,91,114,100,105,93,32,10,9,109,111,118,32,114,97,120,44,114,115,105,32,10,9,115,104,108,32,114,97,120,44,49,32,10,9,115,117,98,32,114,115,112,44,114,97,120,32,10,101,115,99,95,115,56,95,108,112,48,58,32,10,10,97,114,114,95,111,102,95,108,115,116,58,32,10,9,109,111,118,32,114,115,105,44,48,32,10,97,114,114,95,111,102,95,108,115,116,95,114,58,10,9,99,109,112,32,66,89,84,69,32,91,114,100,105,43,54,93,44,49,10,9,106,122,32,97,114,114,95,111,102,95,108,115,116,95,101,110,100,32,10,9,112,117,115,104,32,81,87,79,82,68,32,91,114,100,105,43,56,93,32,10,9,109,111,118,32,114,100,105,44,81,87,79,82,68,32,91,114,100,105,43,49,54,93,10,9,97,100,100,32,114,115,105,44,49,32,10,9,99,97,108,108,32,97,114,114,95,111,102,95,108,115,116,95,114,10,9,115,117,98,32,114,115,105,44,49,32,10,9,112,111,112,32,81,87,79,82,68,32,91,114,97,120,43,56,43,56,42,114,115,105,93,10,9,114,101,116,32,10,97,114,114,95,111,102,95,108,115,116,95,101,110,100,58,32,10,9,112,117,115,104,32,114,115,105,32,10,9,120,111,114,32,114,97,120,44,114,97,120,10,9,109,111,118,32,114,100,105,44,56,10,9,97,100,100,32,114,115,105,44,49,32,10,9,67,95,67,65,76,76,32,99,97,108,108,111,99,10,9,112,111,112,32,114,115,105,32,10,9,109,111,118,32,81,87,79,82,68,32,91,114,97,120,93,44,114,115,105,10,9,114,101,116,32,10,10,115,99,102,95,100,58,32,59,32,114,100,105,61,115,114,99,32,226,138,162,32,114,97,120,61,102,108,103,32,114,100,105,61,100,115,116,32,114,115,105,61,110,10,9,112,117,115,104,32,114,100,105,10,9,109,111,118,122,120,32,114,100,105,44,66,89,84,69,32,91,114,100,105,93,10,9,67,95,67,65,76,76,32,105,115,115,112,97,99,101,10,9,99,109,112,32,114,97,120,44,48,10,9,106,110,122,32,115,99,102,95,100,95,101,114,114,48,32,10,9,106,109,112,32,115,99,102,95,100,95,115,99,102,32,10,115,99,102,95,100,95,101,114,114,48,58,32,10,9,97,100,100,32,114,115,112,44,56,10,9,109,111,118,32,114,97,120,44,48,10,9,114,101,116,10,9,115,99,102,95,100,95,115,99,102,58,10,9,109,111,118,32,114,100,105,44,81,87,79,82,68,32,91,114,115,112,93,10,9,115,117,98,32,114,115,112,44,56,10,9,109,111,118,32,114,115,105,44,114,115,112,10,9,109,111,118,32,114,100,120,44,49,48,10,9,109,111,118,32,114,97,120,44,48,10,9,67,95,67,65,76,76,32,115,116,114,116,111,117,108,10,9,112,111,112,32,114,115,105,10,9,112,111,112,32,114,100,105,10,9,115,117,98,32,114,115,105,44,114,100,105,10,9,106,122,32,115,99,102,95,100,95,101,114,114,49,10,32,109,111,118,32,114,100,105,44,114,97,120,10,9,109,111,118,32,114,97,120,44,49,32,10,9,114,101,116,10,115,99,102,95,100,95,101,114,114,49,58,10,9,109,111,118,32,114,97,120,44,48,32,10,9,114,101,116,10,10,115,99,102,95,120,58,32,59,32,114,100,105,61,115,114,99,32,226,138,162,32,114,97,120,61,102,108,103,32,114,100,105,61,100,115,116,32,114,115,105,61,110,10,9,112,117,115,104,32,114,100,105,10,9,109,111,118,122,120,32,114,100,105,44,66,89,84,69,32,91,114,100,105,93,10,9,67,95,67,65,76,76,32,105,115,115,112,97,99,101,10,9,99,109,112,32,114,97,120,44,48,10,9,106,110,122,32,115,99,102,95,120,95,101,114,114,48,32,10,9,106,109,112,32,115,99,102,95,120,95,115,99,102,32,10,115,99,102,95,120,95,101,114,114,48,58,32,10,9,97,100,100,32,114,115,112,44,56,10,9,109,111,118,32,114,97,120,44,48,10,9,114,101,116,10,9,115,99,102,95,120,95,115,99,102,58,10,9,109,111,118,32,114,100,105,44,81,87,79,82,68,32,91,114,115,112,93,10,9,115,117,98,32,114,115,112,44,56,10,9,109,111,118,32,114,115,105,44,114,115,112,10,9,109,111,118,32,114,100,120,44,49,54,10,9,109,111,118,32,114,97,120,44,48,10,9,67,95,67,65,76,76,32,115,116,114,116,111,117,108,10,9,112,111,112,32,114,115,105,10,9,112,111,112,32,114,100,105,10,9,115,117,98,32,114,115,105,44,114,100,105,10,9,106,122,32,115,99,102,95,120,95,101,114,114,49,10,32,109,111,118,32,114,100,105,44,114,97,120,10,9,109,111,118,32,114,97,120,44,49,32,10,9,114,101,116,10,115,99,102,95,120,95,101,114,114,49,58,10,9,109,111,118,32,114,97,120,44,48,32,10,9,114,101,116,10,10,109,108,99,95,115,56,58,32,59,32,114,100,105,61,108,101,110,32,32,10,9,112,117,115,104,32,114,100,105,32,10,9,97,110,100,32,114,100,105,44,126,49,49,49,98,10,9,108,101,97,32,114,100,105,44,91,114,100,105,43,49,54,93,32,10,9,109,111,118,32,114,115,105,44,49,32,10,9,120,111,114,32,114,97,120,44,114,97,120,32,10,9,67,95,67,65,76,76,95,83,70,32,99,97,108,108,111,99,10,9,112,111,112,32,81,87,79,82,68,32,91,114,97,120,93,32,10,9,114,101,116,10,10,115,56,95,111,102,95,99,95,115,116,103,58,32,10,9,112,117,115,104,32,114,100,105,10,9,120,111,114,32,114,97,120,44,114,97,120,10,9,67,95,67,65,76,76,32,115,116,114,108,101,110,10,9,112,117,115,104,32,114,97,120,10,9,109,111,118,32,114,100,105,44,114,97,120,10,9,99,97,108,108,32,109,108,99,95,115,56,10,9,112,111,112,32,114,99,120,10,9,112,111,112,32,114,115,105,10,9,109,111,118,32,114,100,105,44,114,97,120,10,9,97,100,100,32,114,100,105,44,56,10,9,99,108,100,10,9,114,101,112,32,109,111,118,115,98,10,9,114,101,116,10,10,102,114,101,101,95,115,56,58,32,59,114,100,105,61,112,116,114,10,9,67,95,67,65,76,76,95,83,70,32,102,114,101,101,10,9,114,101,116,32,10,10,105,110,95,102,110,58,32,10,9,109,111,118,32,114,97,120,44,50,10,9,109,111,118,32,114,115,105,44,50,10,9,115,121,115,99,97,108,108,10,9,112,117,115,104,32,114,97,120,32,59,32,91,114,115,112,93,61,102,100,10,9,109,111,118,32,114,100,105,44,114,97,120,10,9,109,111,118,32,114,97,120,44,53,10,9,109,111,118,32,114,115,105,44,115,116,97,116,10,9,115,121,115,99,97,108,108,10,9,109,111,118,32,114,100,105,44,91,115,116,97,116,32,43,32,83,84,65,84,46,115,116,95,115,105,122,101,93,10,9,99,97,108,108,32,109,108,99,95,115,56,10,9,109,111,118,32,114,100,105,44,81,87,79,82,68,32,91,114,115,112,93,10,9,112,117,115,104,32,114,97,120,32,59,32,91,114,115,112,93,61,98,117,102,10,9,109,111,118,32,114,115,105,44,114,97,120,10,9,97,100,100,32,114,115,105,44,56,10,9,109,111,118,32,114,97,120,44,48,10,9,109,111,118,32,114,100,120,44,91,115,116,97,116,43,83,84,65,84,46,115,116,95,115,105,122,101,93,10,9,115,121,115,99,97,108,108,10,9,109,111,118,32,114,97,120,44,51,10,9,109,111,118,32,114,100,105,44,81,87,79,82,68,32,91,114,115,112,43,56,93,10,9,115,121,115,99,97,108,108,10,9,109,111,118,32,114,97,120,44,81,87,79,82,68,32,91,114,115,112,93,9,10,9,97,100,100,32,114,115,112,44,49,54,10,9,114,101,116,32,10,10,111,117,116,95,102,110,58,32,59,32,114,100,105,61,102,110,44,114,115,105,61,115,114,99,10,9,112,117,115,104,32,114,115,105,32,10,9,109,111,118,32,114,97,120,44,50,10,9,109,111,118,32,114,115,105,44,48,120,52,50,10,9,115,121,115,99,97,108,108,10,9,112,111,112,32,114,115,105,32,10,9,112,117,115,104,32,114,97,120,10,9,109,111,118,32,114,100,105,44,114,97,120,10,9,109,111,118,32,114,100,120,44,81,87,79,82,68,32,91,114,115,105,93,10,9,109,111,118,32,114,97,120,44,48,120,48,48,48,48,95,102,102,102,102,95,102,102,102,102,95,102,102,102,102,10,9,97,110,100,32,114,100,120,44,114,97,120,10,9,97,100,100,32,114,115,105,44,56,10,9,109,111,118,32,114,97,120,44,49,10,9,115,121,115,99,97,108,108,10,9,112,111,112,32,114,100,105,10,9,109,111,118,32,114,97,120,44,51,10,9,115,121,115,99,97,108,108,10,9,114,101,116,10,10,101,109,116,95,115,116,103,58,32,59,32,114,100,105,61,115,116,103,32,10,9,120,111,114,32,114,97,120,44,114,97,120,32,10,9,67,95,67,65,76,76,95,83,70,32,112,114,105,110,116,102,10,9,114,101,116,10,10,101,109,116,95,114,54,52,58,32,59,114,100,105,61,114,54,52,10,9,120,111,114,32,114,97,120,44,114,97,120,32,10,9,109,111,118,32,114,115,105,44,114,100,105,10,9,109,111,118,32,114,100,105,44,102,109,116,95,114,54,52,10,9,67,95,67,65,76,76,95,83,70,32,112,114,105,110,116,102,10,9,114,101,116,10,10,101,109,116,95,115,56,58,32,59,114,100,105,61,115,56,10,9,120,111,114,32,114,97,120,44,114,97,120,32,10,9,108,101,97,32,114,115,105,44,91,114,100,105,43,56,93,10,9,109,111,118,32,114,100,105,44,102,109,116,95,115,56,10,9,67,95,67,65,76,76,95,83,70,32,112,114,105,110,116,102,10,9,114,101,116,10,10,101,109,116,95,97,100,100,58,32,59,32,114,100,105,61,108,101,110,32,114,115,105,61,115,116,103,10,9,99,108,100,32,10,9,112,117,115,104,32,114,99,120,32,10,9,109,111,118,32,114,99,120,44,114,100,105,32,10,9,109,111,118,32,114,97,120,44,81,87,79,82,68,32,91,69,77,84,95,66,85,70,95,79,70,83,93,10,9,97,100,100,32,114,100,105,44,114,97,120,10,9,99,109,112,32,114,100,105,44,69,77,84,95,66,85,70,95,77,65,88,32,10,9,106,103,101,32,101,109,116,95,97,100,100,95,98,117,102,32,10,9,109,111,118,32,66,89,84,69,32,91,69,77,84,95,66,85,70,43,114,100,105,93,44,48,10,9,109,111,118,32,81,87,79,82,68,32,91,69,77,84,95,66,85,70,95,79,70,83,93,44,114,100,105,10,9,108,101,97,32,114,100,105,44,91,69,77,84,95,66,85,70,43,114,97,120,93,10,9,106,109,112,32,101,109,116,95,97,100,100,95,101,110,100,32,10,101,109,116,95,97,100,100,95,98,117,102,58,10,9,112,117,115,104,32,114,115,105,32,10,9,99,97,108,108,32,101,109,116,95,98,117,102,32,10,9,112,111,112,32,114,115,105,32,10,9,99,109,112,32,114,99,120,44,69,77,84,95,66,85,70,95,77,65,88,10,9,106,103,101,32,101,109,116,95,97,100,100,95,115,116,103,32,10,9,109,111,118,32,66,89,84,69,32,91,69,77,84,95,66,85,70,43,114,99,120,93,44,48,10,9,109,111,118,32,81,87,79,82,68,32,91,69,77,84,95,66,85,70,95,79,70,83,93,44,114,99,120,32,10,9,109,111,118,32,114,100,105,44,69,77,84,95,66,85,70,10,101,109,116,95,97,100,100,95,101,110,100,58,10,9,114,101,112,32,109,111,118,115,98,32,10,9,112,111,112,32,114,99,120,32,10,9,114,101,116,32,10,101,109,116,95,97,100,100,95,115,116,103,32,10,9,109,111,118,32,81,87,79,82,68,32,91,69,77,84,95,66,85,70,93,44,48,10,9,109,111,118,32,81,87,79,82,68,32,91,69,77,84,95,66,85,70,95,79,70,83,93,44,48,10,9,109,111,118,32,114,100,105,44,114,115,105,32,10,9,99,97,108,108,32,101,109,116,95,115,116,103,32,10,9,112,111,112,32,114,99,120,32,10,9,114,101,116,32,10,10,101,109,116,95,98,117,102,58,10,9,120,111,114,32,114,97,120,44,114,97,120,32,10,9,109,111,118,32,114,100,105,44,69,77,84,95,66,85,70,32,10,9,67,95,67,65,76,76,32,112,114,105,110,116,102,32,10,9,109,111,118,32,81,87,79,82,68,32,91,69,77,84,95,66,85,70,95,79,70,83,93,44,48,10,9,109,111,118,32,66,89,84,69,32,91,69,77,84,95,66,85,70,93,44,48,10,9,114,101,116,32,10,9,32,10,95,115,116,97,114,116,58,10,59,32,115,101,116,32,115,105,103,110,97,108,32,104,97,110,100,108,101,114,32,10,9,109,111,118,32,114,100,105,44,83,73,71,95,83,69,71,86,32,10,9,109,111,118,32,114,115,105,44,115,105,103,95,104,100,108,32,10,9,67,95,67,65,76,76,32,115,101,116,95,104,97,110,100,108,101,114,32,10,10,83,83,95,105,110,105,116,58,10,9,109,111,118,32,81,87,79,82,68,32,91,83,83,95,84,79,80,93,44,83,83,95,86,67,84,10,9,109,111,118,32,114,100,105,44,48,32,10,9,109,111,118,32,114,97,120,44,83,83,95,86,67,84,32,10,83,83,95,108,112,58,32,10,9,99,109,112,32,114,100,105,44,83,83,95,77,65,88,32,10,9,106,122,32,83,83,95,101,110,100,32,10,9,97,100,100,32,114,100,105,44,49,32,10,9,108,101,97,32,114,115,105,44,91,114,97,120,43,56,42,49,54,93,32,10,9,109,111,118,32,81,87,79,82,68,32,91,114,97,120,93,44,114,115,105,32,10,9,109,111,118,32,114,97,120,44,114,115,105,32,10,9,106,109,112,32,83,83,95,108,112,32,10,83,83,95,101,110,100,58,10,9,109,111,118,32,114,115,105,44,83,83,95,78,85,76,76,32,10,9,109,111,118,32,91,114,97,120,93,44,114,115,105,10,10,83,83,95,76,78,95,105,110,105,116,58,10,9,109,111,118,32,83,83,95,76,78,95,78,44,48,10,9,109,111,118,32,81,87,79,82,68,32,91,83,83,95,76,78,95,84,79,80,93,44,83,83,95,76,78,95,86,67,84,10,9,109,111,118,32,114,49,53,44,83,83,95,76,78,95,86,67,84,32,10,9,109,111,118,32,114,100,105,44,48,32,10,9,109,111,118,32,114,97,120,44,83,83,95,76,78,95,86,67,84,32,10,83,83,95,76,78,95,108,112,58,32,10,9,99,109,112,32,114,100,105,44,83,83,95,76,78,95,77,65,88,32,10,9,106,122,32,83,83,95,76,78,95,101,110,100,32,10,9,97,100,100,32,114,100,105,44,49,32,10,9,108,101,97,32,114,115,105,44,91,114,97,120,43,56,42,50,93,32,10,9,109,111,118,32,81,87,79,82,68,32,91,114,97,120,93,44,114,115,105,32,10,9,109,111,118,32,114,97,120,44,114,115,105,32,10,9,106,109,112,32,83,83,95,76,78,95,108,112,32,10,83,83,95,76,78,95,101,110,100,58,10,9,109,111,118,32,114,115,105,44,48,120,102,102,102,102,95,102,102,102,102,95,102,102,102,102,95,48,49,48,48,32,10,9,109,111,118,32,91,114,97,120,93,44,114,115,105,10,10,83,83,95,80,84,95,105,110,105,116,58,10,9,109,111,118,32,81,87,79,82,68,32,91,83,83,95,80,84,95,84,79,80,93,44,83,83,95,80,84,95,86,67,84,10,9,109,111,118,32,114,100,105,44,48,32,10,9,109,111,118,32,114,97,120,44,83,83,95,80,84,95,86,67,84,32,10,83,83,95,80,84,95,108,112,58,32,10,9,99,109,112,32,114,100,105,44,83,83,95,77,65,88,32,10,9,106,122,32,83,83,95,80,84,95,101,110,100,32,10,9,97,100,100,32,114,100,105,44,49,32,10,9,108,101,97,32,114,115,105,44,91,114,97,120,43,56,42,51,93,32,10,9,109,111,118,32,81,87,79,82,68,32,91,114,97,120,93,44,114,115,105,32,10,9,109,111,118,32,114,97,120,44,114,115,105,32,10,9,106,109,112,32,83,83,95,80,84,95,108,112,32,10,83,83,95,80,84,95,101,110,100,58,10,9,109,111,118,32,114,115,105,44,48,120,102,102,102,102,95,102,102,102,102,95,102,102,102,102,95,48,50,48,48,32,10,9,109,111,118,32,91,114,97,120,93,44,114,115,105,10,10,9,109,111,118,32,114,100,105,44,48,10,9,109,111,118,32,81,87,79,82,68,32,91,69,77,84,95,66,85,70,93,44,48,10,9,109,111,118,32,81,87,79,82,68,32,91,69,77,84,95,66,85,70,95,79,70,83,93,44,48,10,10,59,32,95,97,114,103,115,32,10,9,109,111,118,32,114,100,105,44,81,87,79,82,68,32,91,114,115,112,93,10,32,108,101,97,32,114,100,105,44,91,114,100,105,43,49,93,10,9,109,111,118,32,114,115,105,44,56,32,10,9,120,111,114,32,114,97,120,44,114,97,120,32,10,9,67,95,67,65,76,76,32,99,97,108,108,111,99,10,9,112,111,112,32,114,49,51,10,9,109,111,118,32,81,87,79,82,68,32,91,114,97,120,93,44,114,49,51,10,9,120,111,114,32,114,49,52,44,114,49,52,10,9,109,111,118,32,114,98,120,44,114,97,120,10,97,114,103,115,95,108,112,58,10,9,99,109,112,32,114,49,52,44,114,49,51,10,9,106,122,32,97,114,103,115,95,108,112,95,101,110,100,10,9,112,111,112,32,114,100,105,10,9,99,97,108,108,32,115,56,95,111,102,95,99,95,115,116,103,32,10,9,109,111,118,32,81,87,79,82,68,32,91,114,98,120,43,56,43,56,42,114,49,52,93,44,114,97,120,10,9,97,100,100,32,114,49,52,44,49,32,10,9,106,109,112,32,97,114,103,115,95,108,112,32,10,97,114,103,115,95,108,112,95,101,110,100,58,10,9,109,111,118,32,114,49,51,44,114,98,120,10,9,10,0
LB_5373: db 10,0
LB_5374: db 194,167,194,167,32,0
LB_5375: db 9,0
LB_5398: db 226,136,142,226,136,142,10,0
LB_5399: db 9,0
LB_5403: db 59,32,226,136,142,124,10,101,120,110,32,55,53,53,53,49,58,10,0
LB_5404: db 10,0
LB_5405: db 32,61,32,0
LB_5406: db 194,167,194,167,32,0
LB_5407: db 9,0
LB_5433: db 34,115,108,118,95,110,115,95,109,32,48,58,110,111,116,32,102,111,117,110,100,34,0
LB_5436: db 59,32,226,136,142,124,10,101,120,110,32,55,51,52,57,51,58,10,0
LB_5439: db 34,115,108,118,95,110,115,95,109,32,49,58,110,111,116,32,102,111,117,110,100,34,0
LB_5442: db 59,32,226,136,142,124,10,101,120,110,32,55,52,48,52,48,58,10,0
LB_5443: db 59,32,226,136,142,124,10,101,120,110,32,55,54,48,57,53,58,10,0
LB_5445: db 59,32,226,136,142,124,10,101,120,110,32,55,54,51,51,48,58,10,0
LB_5448: db 59,32,226,136,142,124,10,101,120,110,32,55,55,49,52,55,58,10,0
LB_5450: db 59,32,226,136,142,124,10,101,120,110,32,56,48,57,56,48,58,10,0
LB_5451: db 59,32,226,136,142,124,10,101,120,110,32,56,49,57,50,55,58,10,0
LB_5453: db 59,32,226,136,142,124,10,101,120,110,32,56,51,51,50,57,58,10,0
LB_5455: db 59,32,226,136,142,124,10,101,120,110,32,56,51,55,49,55,58,10,0
LB_5456: db 59,32,226,136,142,124,10,101,120,110,32,56,53,53,48,55,58,10,0
LB_5458: db 194,167,194,167,32,77,48,10,9,226,136,142,226,136,142,32,10,0
LB_5467: db 39,48,226,151,130,0
LB_5469: db 39,49,226,151,130,0
LB_5474: db 39,48,226,151,130,0
LB_5476: db 39,49,226,151,130,0
LB_5482: db 39,48,226,151,130,0
LB_5483: db 39,49,226,151,130,0
LB_5488: db 39,48,226,151,130,0
LB_5490: db 39,49,226,151,130,0
LB_5499: db 39,48,226,151,130,0
LB_5501: db 39,49,226,151,130,0
LB_5503: db 39,50,226,151,130,0
LB_5505: db 39,51,226,151,130,0
LB_5507: db 39,52,226,151,130,0
LB_5509: db 39,53,226,151,130,0
LB_5515: db 39,48,226,151,130,0
LB_5516: db 39,49,226,151,130,0
LB_5521: db 39,48,226,151,130,0
LB_5524: db 39,49,226,151,130,0
LB_5533: db 39,48,226,151,130,0
LB_5535: db 39,49,226,151,130,0
LB_5536: db 39,50,226,151,130,0
LB_5537: db 39,51,226,151,130,0
LB_5539: db 39,52,226,151,130,0
LB_5544: db 39,48,226,151,130,0
LB_5545: db 39,49,226,151,130,0
LB_5550: db 39,48,226,151,130,0
LB_5551: db 39,49,226,151,130,0
LB_5556: db 39,48,226,151,130,0
LB_5557: db 39,49,226,151,130,0
LB_5562: db 39,48,226,151,130,0
LB_5563: db 39,49,226,151,130,0
LB_5568: db 39,48,226,151,130,0
LB_5572: db 39,49,226,151,130,0
LB_5582: db 39,48,226,151,130,0
LB_5584: db 39,49,226,151,130,0
LB_5586: db 39,50,226,151,130,0
LB_5588: db 39,51,226,151,130,0
LB_5590: db 39,52,226,151,130,0
LB_5592: db 39,53,226,151,130,0
LB_5594: db 39,54,226,151,130,0
LB_5599: db 39,48,226,151,130,0
LB_5600: db 39,49,226,151,130,0
LB_5605: db 39,48,226,151,130,0
LB_5607: db 39,49,226,151,130,0
LB_5613: db 39,48,226,151,130,0
LB_5614: db 39,49,226,151,130,0
LB_5619: db 39,48,226,151,130,0
LB_5623: db 39,49,226,151,130,0
LB_5629: db 39,48,226,151,130,0
LB_5630: db 39,49,226,151,130,0
LB_5631: db 39,50,226,151,130,0
LB_5636: db 39,48,226,151,130,0
LB_5638: db 39,49,226,151,130,0
LB_5644: db 39,48,226,151,130,0
LB_5645: db 39,49,226,151,130,0
LB_5647: db 39,50,226,151,130,0
LB_5652: db 39,48,226,151,130,0
LB_5654: db 39,49,226,151,130,0
LB_5659: db 39,48,226,151,130,0
LB_5661: db 39,49,226,151,130,0
LB_5666: db 39,48,226,151,130,0
LB_5667: db 39,49,226,151,130,0
LB_5672: db 39,48,226,151,130,0
LB_5674: db 39,49,226,151,130,0
LB_5682: db 39,48,226,151,130,0
LB_5683: db 39,49,226,151,130,0
LB_5684: db 39,50,226,151,130,0
LB_5686: db 39,51,226,151,130,0
LB_5691: db 39,48,226,151,130,0
LB_5692: db 39,49,226,151,130,0
LB_5697: db 39,48,226,151,130,0
LB_5698: db 39,49,226,151,130,0
LB_5703: db 39,48,226,151,130,0
LB_5704: db 39,49,226,151,130,0
LB_5711: db 39,48,226,151,130,0
LB_5712: db 39,49,226,151,130,0
LB_5713: db 39,50,226,151,130,0
LB_5714: db 39,51,226,151,130,0
LB_5722: db 39,48,226,151,130,0
LB_5724: db 39,49,226,151,130,0
LB_5729: db 39,48,226,151,130,0
LB_5730: db 39,49,226,151,130,0
LB_5735: db 39,48,226,151,130,0
LB_5736: db 39,49,226,151,130,0
LB_5741: db 39,48,226,151,130,0
LB_5743: db 39,49,226,151,130,0
LB_5750: db 39,48,226,151,130,0
LB_5751: db 39,49,226,151,130,0
LB_5752: db 39,50,226,151,130,0
LB_5754: db 39,51,226,151,130,0
LB_5761: db 39,48,226,151,130,0
LB_5762: db 39,49,226,151,130,0
LB_5763: db 39,50,226,151,130,0
LB_5764: db 39,51,226,151,130,0
LB_5769: db 39,48,226,151,130,0
LB_5770: db 39,49,226,151,130,0
LB_5775: db 39,48,226,151,130,0
LB_5777: db 39,49,226,151,130,0
LB_5782: db 39,48,226,151,130,0
LB_5783: db 39,49,226,151,130,0
LB_5788: db 39,48,226,151,130,0
LB_5789: db 39,49,226,151,130,0
LB_5794: db 39,48,226,151,130,0
LB_5795: db 39,49,226,151,130,0
LB_5801: db 39,48,226,151,130,0
LB_5802: db 39,49,226,151,130,0
LB_5803: db 39,50,226,151,130,0
LB_5808: db 39,48,226,151,130,0
LB_5810: db 39,49,226,151,130,0
LB_5815: db 39,48,226,151,130,0
LB_5817: db 39,49,226,151,130,0
LB_5823: db 39,48,226,151,130,0
LB_5827: db 39,49,226,151,130,0
LB_5832: db 39,48,226,151,130,0
LB_5833: db 39,49,226,151,130,0
LB_5839: db 39,48,226,151,130,0
LB_5841: db 39,49,226,151,130,0
LB_5843: db 39,50,226,151,130,0
LB_5848: db 39,48,226,151,130,0
LB_5850: db 39,49,226,151,130,0
LB_5855: db 39,48,226,151,130,0
LB_5856: db 39,49,226,151,130,0
LB_5861: db 39,48,226,151,130,0
LB_5862: db 39,49,226,151,130,0
LB_5868: db 39,48,226,151,130,0
LB_5869: db 39,49,226,151,130,0
LB_5870: db 39,50,226,151,130,0
LB_5875: db 39,48,226,151,130,0
LB_5877: db 39,49,226,151,130,0
LB_5882: db 39,48,226,151,130,0
LB_5883: db 39,49,226,151,130,0
LB_5888: db 39,48,226,151,130,0
LB_5889: db 39,49,226,151,130,0
LB_5892: db 34,68,48,34,0
LB_5895: db 59,32,226,136,142,124,10,101,120,110,32,49,50,48,48,50,54,58,10,0
LB_5896: db 59,32,226,136,142,124,10,101,120,110,32,49,50,48,48,53,51,58,10,0
LB_5897: db 120,121,48,0
LB_5905: db 39,48,226,151,130,0
LB_5906: db 39,49,226,151,130,0
LB_5908: db 34,68,48,34,0
LB_5911: db 59,32,226,136,142,124,10,101,120,110,32,49,50,48,51,51,50,58,10,0
LB_5913: db 194,167,194,167,32,77,48,10,9,226,136,142,226,136,142,32,10,0
LB_5925: db 9,226,136,142,32,120,32,10,0
LB_5932: db 39,48,226,151,130,0
LB_5934: db 39,49,226,151,130,0
LB_5939: db 39,48,226,151,130,0
LB_5940: db 39,49,226,151,130,0
section .text
global _start

info:
	C_PUSH_REGS
	mov rdi,fmt_info 
	mov rsi,QWORD [SS_LN_C]
	mov rdx,SS_LN_N 
	xor rax,rax 
	C_CALL printf
	mov rax,0
info_rcd:
	push rax 
	mov rdi,fmt_info_rcd
	mov rsi,rax 
	mov rdx,QWORD [SS_RCD_C+8*rax]
	mov rcx,QWORD [SS_RCD_N+8*rax]
	xor rax,rax
	C_CALL printf 
	pop rax 
	cmp rax,RCD_N 
	jz info_rcd_end 
	add rax,1 
	jmp info_rcd 
info_rcd_end:
	C_POP_REGS 
	ret
;getchar:
;	xor rax,rax 
;	C_CALL_SF getchar 
;	ret

sig_hdl: ; rdi=sig_n rsi=siginfo_t* rdx=void*
	push rdi 
	push rsi 
	push rdx 
	xor rax,rax 
	mov rsi,rdi 
	mov rdi,fmt_sig_hdl
	C_CALL printf 
	call info 
	call exit 
	jmp err

eq_s8: ;rdi,rsi
	push rdx
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,QWORD [rdi]
	mov rdx,0x0000_ffff_ffff_ffff
	and rdx,QWORD [rsi]
	cmp rax,rdx
	jnz eq_s8_f 
eq_s8_lp:
	cmp rax,0
	jz eq_s8_t
	movzx rdx,BYTE [rdi+7+rax]
	cmp BYTE [rsi+7+rax],dl 
	jnz eq_s8_f 
	sub rax,1 
	jmp eq_s8_lp 
eq_s8_f:
	pop rdx 
	mov rax,0 
	stz
	ret 
eq_s8_t:
	pop rdx 
	mov rax,1 
	ret

rpc_s8: ; rdi ⊢ rax
	push rdi 
	mov rsi,0x0000_ffff_ffff_ffff
	and rsi,QWORD [rdi]  
	push rsi
	mov rdi,rsi 
	call mlc_s8
	pop rcx 
	pop rsi 
	add rsi,8
	lea rdi,[rax+8]
	cld 
	rep movsb
	ret
     
esc_s8: ; rdi ⊢ rax 
	mov rsi,0x0000_ffff_ffff_ffff
	and rsi,QWORD [rdi] 
	mov rax,rsi 
	shl rax,1 
	sub rsp,rax 
esc_s8_lp0: 

arr_of_lst: 
	mov rsi,0 
arr_of_lst_r:
	cmp BYTE [rdi+6],1
	jz arr_of_lst_end 
	push QWORD [rdi+8] 
	mov rdi,QWORD [rdi+16]
	add rsi,1 
	call arr_of_lst_r
	sub rsi,1 
	pop QWORD [rax+8+8*rsi]
	ret 
arr_of_lst_end: 
	push rsi 
	xor rax,rax
	mov rdi,8
	add rsi,1 
	C_CALL calloc
	pop rsi 
	mov QWORD [rax],rsi
	ret 

scf_d: ; rdi=src ⊢ rax=flg rdi=dst rsi=n
	push rdi
	movzx rdi,BYTE [rdi]
	C_CALL isspace
	cmp rax,0
	jnz scf_d_err0 
	jmp scf_d_scf 
scf_d_err0: 
	add rsp,8
	mov rax,0
	ret
	scf_d_scf:
	mov rdi,QWORD [rsp]
	sub rsp,8
	mov rsi,rsp
	mov rdx,10
	mov rax,0
	C_CALL strtoul
	pop rsi
	pop rdi
	sub rsi,rdi
	jz scf_d_err1
 mov rdi,rax
	mov rax,1 
	ret
scf_d_err1:
	mov rax,0 
	ret

scf_x: ; rdi=src ⊢ rax=flg rdi=dst rsi=n
	push rdi
	movzx rdi,BYTE [rdi]
	C_CALL isspace
	cmp rax,0
	jnz scf_x_err0 
	jmp scf_x_scf 
scf_x_err0: 
	add rsp,8
	mov rax,0
	ret
	scf_x_scf:
	mov rdi,QWORD [rsp]
	sub rsp,8
	mov rsi,rsp
	mov rdx,16
	mov rax,0
	C_CALL strtoul
	pop rsi
	pop rdi
	sub rsi,rdi
	jz scf_x_err1
 mov rdi,rax
	mov rax,1 
	ret
scf_x_err1:
	mov rax,0 
	ret

mlc_s8: ; rdi=len  
	push rdi 
	and rdi,~111b
	lea rdi,[rdi+16] 
	mov rsi,1 
	xor rax,rax 
	C_CALL_SF calloc
	pop QWORD [rax] 
	ret

s8_of_c_stg: 
	push rdi
	xor rax,rax
	C_CALL strlen
	push rax
	mov rdi,rax
	call mlc_s8
	pop rcx
	pop rsi
	mov rdi,rax
	add rdi,8
	cld
	rep movsb
	ret

free_s8: ;rdi=ptr
	C_CALL_SF free
	ret 

in_fn: 
	mov rax,2
	mov rsi,2
	syscall
	push rax ; [rsp]=fd
	mov rdi,rax
	mov rax,5
	mov rsi,stat
	syscall
	mov rdi,[stat + STAT.st_size]
	call mlc_s8
	mov rdi,QWORD [rsp]
	push rax ; [rsp]=buf
	mov rsi,rax
	add rsi,8
	mov rax,0
	mov rdx,[stat+STAT.st_size]
	syscall
	mov rax,3
	mov rdi,QWORD [rsp+8]
	syscall
	mov rax,QWORD [rsp]	
	add rsp,16
	ret 

out_fn: ; rdi=fn,rsi=src
	push rsi 
	mov rax,2
	mov rsi,0x42
	syscall
	pop rsi 
	push rax
	mov rdi,rax
	mov rdx,QWORD [rsi]
	mov rax,0x0000_ffff_ffff_ffff
	and rdx,rax
	add rsi,8
	mov rax,1
	syscall
	pop rdi
	mov rax,3
	syscall
	ret

emt_stg: ; rdi=stg 
	xor rax,rax 
	C_CALL_SF printf
	ret

emt_r64: ;rdi=r64
	xor rax,rax 
	mov rsi,rdi
	mov rdi,fmt_r64
	C_CALL_SF printf
	ret

emt_s8: ;rdi=s8
	xor rax,rax 
	lea rsi,[rdi+8]
	mov rdi,fmt_s8
	C_CALL_SF printf
	ret

emt_add: ; rdi=len rsi=stg
	cld 
	push rcx 
	mov rcx,rdi 
	mov rax,QWORD [EMT_BUF_OFS]
	add rdi,rax
	cmp rdi,EMT_BUF_MAX 
	jge emt_add_buf 
	mov BYTE [EMT_BUF+rdi],0
	mov QWORD [EMT_BUF_OFS],rdi
	lea rdi,[EMT_BUF+rax]
	jmp emt_add_end 
emt_add_buf:
	push rsi 
	call emt_buf 
	pop rsi 
	cmp rcx,EMT_BUF_MAX
	jge emt_add_stg 
	mov BYTE [EMT_BUF+rcx],0
	mov QWORD [EMT_BUF_OFS],rcx 
	mov rdi,EMT_BUF
emt_add_end:
	rep movsb 
	pop rcx 
	ret 
emt_add_stg 
	mov QWORD [EMT_BUF],0
	mov QWORD [EMT_BUF_OFS],0
	mov rdi,rsi 
	call emt_stg 
	pop rcx 
	ret 

emt_buf:
	xor rax,rax 
	mov rdi,EMT_BUF 
	C_CALL printf 
	mov QWORD [EMT_BUF_OFS],0
	mov BYTE [EMT_BUF],0
	ret 
	 
_start:
; set signal handler 
	mov rdi,SIG_SEGV 
	mov rsi,sig_hdl 
	C_CALL set_handler 

SS_init:
	mov QWORD [SS_TOP],SS_VCT
	mov rdi,0 
	mov rax,SS_VCT 
SS_lp: 
	cmp rdi,SS_MAX 
	jz SS_end 
	add rdi,1 
	lea rsi,[rax+8*16] 
	mov QWORD [rax],rsi 
	mov rax,rsi 
	jmp SS_lp 
SS_end:
	mov rsi,SS_NULL 
	mov [rax],rsi

SS_LN_init:
	mov SS_LN_N,0
	mov QWORD [SS_LN_TOP],SS_LN_VCT
	mov r15,SS_LN_VCT 
	mov rdi,0 
	mov rax,SS_LN_VCT 
SS_LN_lp: 
	cmp rdi,SS_LN_MAX 
	jz SS_LN_end 
	add rdi,1 
	lea rsi,[rax+8*2] 
	mov QWORD [rax],rsi 
	mov rax,rsi 
	jmp SS_LN_lp 
SS_LN_end:
	mov rsi,0xffff_ffff_ffff_0100 
	mov [rax],rsi

SS_PT_init:
	mov QWORD [SS_PT_TOP],SS_PT_VCT
	mov rdi,0 
	mov rax,SS_PT_VCT 
SS_PT_lp: 
	cmp rdi,SS_MAX 
	jz SS_PT_end 
	add rdi,1 
	lea rsi,[rax+8*3] 
	mov QWORD [rax],rsi 
	mov rax,rsi 
	jmp SS_PT_lp 
SS_PT_end:
	mov rsi,0xffff_ffff_ffff_0200 
	mov [rax],rsi

	mov rdi,0
	mov QWORD [EMT_BUF],0
	mov QWORD [EMT_BUF_OFS],0

; _args 
	mov rdi,QWORD [rsp]
 lea rdi,[rdi+1]
	mov rsi,8 
	xor rax,rax 
	C_CALL calloc
	pop r13
	mov QWORD [rax],r13
	xor r14,r14
	mov rbx,rax
args_lp:
	cmp r14,r13
	jz args_lp_end
	pop rdi
	call s8_of_c_stg 
	mov QWORD [rbx+8+8*r14],rax
	add r14,1 
	jmp args_lp 
args_lp_end:
	mov r13,rbx
	

init_ss_rcd_1:
	mov QWORD [SS_RCD_N+8*1],0
	mov QWORD [SS_RCD_C+8*1],0
	mov QWORD [SS_RCD_1_TOP],SS_RCD_1_VCT
	mov rdi,0 
	mov rax,SS_RCD_1_VCT
ss_lp_rcd_1:
	cmp rdi,SS_RCD_1_MAX
	jz ss_end_rcd_1
	add rdi,1 
	lea rsi,[rax+8*2]
	mov QWORD [rax],rsi 
	mov rax,rsi 
	jmp ss_lp_rcd_1
ss_end_rcd_1:
	mov rsi,-65535
	mov [rax],rsi 

init_ss_rcd_2:
	mov QWORD [SS_RCD_N+8*2],0
	mov QWORD [SS_RCD_C+8*2],0
	mov QWORD [SS_RCD_2_TOP],SS_RCD_2_VCT
	mov rdi,0 
	mov rax,SS_RCD_2_VCT
ss_lp_rcd_2:
	cmp rdi,SS_RCD_2_MAX
	jz ss_end_rcd_2
	add rdi,1 
	lea rsi,[rax+8*3]
	mov QWORD [rax],rsi 
	mov rax,rsi 
	jmp ss_lp_rcd_2
ss_end_rcd_2:
	mov rsi,-65534
	mov [rax],rsi 

init_ss_rcd_3:
	mov QWORD [SS_RCD_N+8*3],0
	mov QWORD [SS_RCD_C+8*3],0
	mov QWORD [SS_RCD_3_TOP],SS_RCD_3_VCT
	mov rdi,0 
	mov rax,SS_RCD_3_VCT
ss_lp_rcd_3:
	cmp rdi,SS_RCD_3_MAX
	jz ss_end_rcd_3
	add rdi,1 
	lea rsi,[rax+8*4]
	mov QWORD [rax],rsi 
	mov rax,rsi 
	jmp ss_lp_rcd_3
ss_end_rcd_3:
	mov rsi,-65533
	mov [rax],rsi 

init_ss_rcd_4:
	mov QWORD [SS_RCD_N+8*4],0
	mov QWORD [SS_RCD_C+8*4],0
	mov QWORD [SS_RCD_4_TOP],SS_RCD_4_VCT
	mov rdi,0 
	mov rax,SS_RCD_4_VCT
ss_lp_rcd_4:
	cmp rdi,SS_RCD_4_MAX
	jz ss_end_rcd_4
	add rdi,1 
	lea rsi,[rax+8*5]
	mov QWORD [rax],rsi 
	mov rax,rsi 
	jmp ss_lp_rcd_4
ss_end_rcd_4:
	mov rsi,-65532
	mov [rax],rsi 

init_ss_rcd_5:
	mov QWORD [SS_RCD_N+8*5],0
	mov QWORD [SS_RCD_C+8*5],0
	mov QWORD [SS_RCD_5_TOP],SS_RCD_5_VCT
	mov rdi,0 
	mov rax,SS_RCD_5_VCT
ss_lp_rcd_5:
	cmp rdi,SS_RCD_5_MAX
	jz ss_end_rcd_5
	add rdi,1 
	lea rsi,[rax+8*6]
	mov QWORD [rax],rsi 
	mov rax,rsi 
	jmp ss_lp_rcd_5
ss_end_rcd_5:
	mov rsi,-65531
	mov [rax],rsi 

init_ss_rcd_6:
	mov QWORD [SS_RCD_N+8*6],0
	mov QWORD [SS_RCD_C+8*6],0
	mov QWORD [SS_RCD_6_TOP],SS_RCD_6_VCT
	mov rdi,0 
	mov rax,SS_RCD_6_VCT
ss_lp_rcd_6:
	cmp rdi,SS_RCD_6_MAX
	jz ss_end_rcd_6
	add rdi,1 
	lea rsi,[rax+8*7]
	mov QWORD [rax],rsi 
	mov rax,rsi 
	jmp ss_lp_rcd_6
ss_end_rcd_6:
	mov rsi,-65530
	mov [rax],rsi 

init_ss_rcd_7:
	mov QWORD [SS_RCD_N+8*7],0
	mov QWORD [SS_RCD_C+8*7],0
	mov QWORD [SS_RCD_7_TOP],SS_RCD_7_VCT
	mov rdi,0 
	mov rax,SS_RCD_7_VCT
ss_lp_rcd_7:
	cmp rdi,SS_RCD_7_MAX
	jz ss_end_rcd_7
	add rdi,1 
	lea rsi,[rax+8*8]
	mov QWORD [rax],rsi 
	mov rax,rsi 
	jmp ss_lp_rcd_7
ss_end_rcd_7:
	mov rsi,-65529
	mov [rax],rsi 

init_ss_rcd_8:
	mov QWORD [SS_RCD_N+8*8],0
	mov QWORD [SS_RCD_C+8*8],0
	mov QWORD [SS_RCD_8_TOP],SS_RCD_8_VCT
	mov rdi,0 
	mov rax,SS_RCD_8_VCT
ss_lp_rcd_8:
	cmp rdi,SS_RCD_8_MAX
	jz ss_end_rcd_8
	add rdi,1 
	lea rsi,[rax+8*9]
	mov QWORD [rax],rsi 
	mov rax,rsi 
	jmp ss_lp_rcd_8
ss_end_rcd_8:
	mov rsi,-65528
	mov [rax],rsi 

init_ss_rcd_9:
	mov QWORD [SS_RCD_N+8*9],0
	mov QWORD [SS_RCD_C+8*9],0
	mov QWORD [SS_RCD_9_TOP],SS_RCD_9_VCT
	mov rdi,0 
	mov rax,SS_RCD_9_VCT
ss_lp_rcd_9:
	cmp rdi,SS_RCD_9_MAX
	jz ss_end_rcd_9
	add rdi,1 
	lea rsi,[rax+8*10]
	mov QWORD [rax],rsi 
	mov rax,rsi 
	jmp ss_lp_rcd_9
ss_end_rcd_9:
	mov rsi,-65527
	mov [rax],rsi 

init_ss_rcd_10:
	mov QWORD [SS_RCD_N+8*10],0
	mov QWORD [SS_RCD_C+8*10],0
	mov QWORD [SS_RCD_10_TOP],SS_RCD_10_VCT
	mov rdi,0 
	mov rax,SS_RCD_10_VCT
ss_lp_rcd_10:
	cmp rdi,SS_RCD_10_MAX
	jz ss_end_rcd_10
	add rdi,1 
	lea rsi,[rax+8*11]
	mov QWORD [rax],rsi 
	mov rax,rsi 
	jmp ss_lp_rcd_10
ss_end_rcd_10:
	mov rsi,-65526
	mov [rax],rsi 

init_ss_rcd_11:
	mov QWORD [SS_RCD_N+8*11],0
	mov QWORD [SS_RCD_C+8*11],0
	mov QWORD [SS_RCD_11_TOP],SS_RCD_11_VCT
	mov rdi,0 
	mov rax,SS_RCD_11_VCT
ss_lp_rcd_11:
	cmp rdi,SS_RCD_11_MAX
	jz ss_end_rcd_11
	add rdi,1 
	lea rsi,[rax+8*12]
	mov QWORD [rax],rsi 
	mov rax,rsi 
	jmp ss_lp_rcd_11
ss_end_rcd_11:
	mov rsi,-65525
	mov [rax],rsi 

init_ss_rcd_12:
	mov QWORD [SS_RCD_N+8*12],0
	mov QWORD [SS_RCD_C+8*12],0
	mov QWORD [SS_RCD_12_TOP],SS_RCD_12_VCT
	mov rdi,0 
	mov rax,SS_RCD_12_VCT
ss_lp_rcd_12:
	cmp rdi,SS_RCD_12_MAX
	jz ss_end_rcd_12
	add rdi,1 
	lea rsi,[rax+8*13]
	mov QWORD [rax],rsi 
	mov rax,rsi 
	jmp ss_lp_rcd_12
ss_end_rcd_12:
	mov rsi,-65524
	mov [rax],rsi 

init_ss_rcd_13:
	mov QWORD [SS_RCD_N+8*13],0
	mov QWORD [SS_RCD_C+8*13],0
	mov QWORD [SS_RCD_13_TOP],SS_RCD_13_VCT
	mov rdi,0 
	mov rax,SS_RCD_13_VCT
ss_lp_rcd_13:
	cmp rdi,SS_RCD_13_MAX
	jz ss_end_rcd_13
	add rdi,1 
	lea rsi,[rax+8*14]
	mov QWORD [rax],rsi 
	mov rax,rsi 
	jmp ss_lp_rcd_13
ss_end_rcd_13:
	mov rsi,-65523
	mov [rax],rsi 

init_ss_rcd_14:
	mov QWORD [SS_RCD_N+8*14],0
	mov QWORD [SS_RCD_C+8*14],0
	mov QWORD [SS_RCD_14_TOP],SS_RCD_14_VCT
	mov rdi,0 
	mov rax,SS_RCD_14_VCT
ss_lp_rcd_14:
	cmp rdi,SS_RCD_14_MAX
	jz ss_end_rcd_14
	add rdi,1 
	lea rsi,[rax+8*15]
	mov QWORD [rax],rsi 
	mov rax,rsi 
	jmp ss_lp_rcd_14
ss_end_rcd_14:
	mov rsi,-65522
	mov [rax],rsi 

init_ss_rcd_15:
	mov QWORD [SS_RCD_N+8*15],0
	mov QWORD [SS_RCD_C+8*15],0
	mov QWORD [SS_RCD_15_TOP],SS_RCD_15_VCT
	mov rdi,0 
	mov rax,SS_RCD_15_VCT
ss_lp_rcd_15:
	cmp rdi,SS_RCD_15_MAX
	jz ss_end_rcd_15
	add rdi,1 
	lea rsi,[rax+8*16]
	mov QWORD [rax],rsi 
	mov rax,rsi 
	jmp ss_lp_rcd_15
ss_end_rcd_15:
	mov rsi,-65521
	mov [rax],rsi 
	jmp RTM_0
ETR_38: ;; of_s8 0'(= {| l |} ) ⊢ 0'(= a13◂ [ ] ) : (_s8→_t13)
; #36 0'(= {| l |} ) ⊢ 1(<4)◂0'(= {| l |} )
; ∎ 1(<4)◂0'(= {| l |} )
; .mov_ptn2 1(<4)◂0'(= {| l |} ) ⊢ 0'(= a13◂ [ ] )
	mov r14,r13
; .mov_ptn 1(<4)◂1'(= {| l |} ) ⊢ 0'(= a13◂ [ ] )
	mov rax,r14
	mov BYTE [rax+6],1
	mov r13,rax
	ret
ETR_39: ;; len 0'(= a13◂ [ ] ) ⊢ { 0'(= a13◂ [ ] ) 1'(= r ) } : (_t13→{ _t13 _r64 })
;; ? 0'(= a13◂ [ ] ) ⊢ 0(<4)◂{ 1'(= a13◂ [ ] ) 2'(= r ) 3'(= a13◂ [ ] ) }
	mov rdi,r13
	cmp BYTE [rdi+6],0
	jnz LB_0
	mov r14, QWORD [r13+8]
	mov r8, QWORD [r13+16]
	mov r9, QWORD [r13+24]
	mov QWORD [GBG_VCT+8*0],r13
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_RCD 3,rdi
; $ 2'(= r ) ⊢ 2'(= r ),0'(= r )
	mov rdi,r8
	C_PUSH_REGS
	mov r8,rdi
	mov rax,r8
	C_POP_REGS
	mov r13,rax
; #37 { 1'(= a13◂ [ ] ) 0'(= r ) 3'(= a13◂ [ ] ) } ⊢ 0(<4)◂{ 1'(= a13◂ [ ] ) 0'(= r ) 3'(= a13◂ [ ] ) }
; ∎ { 0(<4)◂{ 1'(= a13◂ [ ] ) 0'(= r ) 3'(= a13◂ [ ] ) } 2'(= r ) }
; .mov_ptn2 { 0(<4)◂{ 1'(= a13◂ [ ] ) 0'(= r ) 3'(= a13◂ [ ] ) } 2'(= r ) } ⊢ { 0'(= a13◂ [ ] ) 1'(= r ) }
	mov r10,r13
; .mov_ptn 0(<4)◂{ 1'(= a13◂ [ ] ) 4'(= r ) 3'(= a13◂ [ ] ) } ⊢ 0'(= a13◂ [ ] )
	ALC_RCD 3, rax
	mov r11,rax
	mov rax,r14
	mov QWORD [r11+8+8*0],rax
	mov rax,r10
	mov QWORD [r11+8+8*1],rax
	mov rax,r9
	mov QWORD [r11+8+8*2],rax
	mov rax,r11
	mov BYTE [rax+6],0
	mov r13,rax
; .mov_ptn 2'(= r ) ⊢ 1'(= r )
	mov rax,r8
	mov r14,rax
	ret
LB_0:
;; ? 0'(= a13◂ [ ] ) ⊢ 3(<4)◂1'(= r )
	mov rdi,r13
	cmp BYTE [rdi+6],3
	jnz LB_1
	mov QWORD [GBG_VCT+8*0],rdi
	mov r14,QWORD [rdi+8]
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_LN rdi
; $ %[ 1r ] ⊢ %[ 1r ]
; #34 1'(= r ) ⊢ 3(<4)◂1'(= r )
; ∎ { 3(<4)◂1'(= r ) %[ 1r ] }
; .mov_ptn2 { 3(<4)◂1'(= r ) %[ 1r ] } ⊢ { 0'(= a13◂ [ ] ) 1'(= r ) }
; .mov_ptn 3(<4)◂1'(= r ) ⊢ 0'(= a13◂ [ ] )
	mov rax,r14
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],3
	mov QWORD [rax+8],rdi
	mov r13,rax
; .mov_ptn %[ 1r ] ⊢ 1'(= r )
	mov rax,1
	mov r14,rax
	ret
LB_1:
;; ? 0'(= a13◂ [ ] ) ⊢ 2(<4)◂{ }
	mov rdi,r13
	cmp BYTE [rdi+6],2
	jnz LB_2
; #35 { } ⊢ 2(<4)◂{ }
; $ %[ 0r ] ⊢ %[ 0r ]
; ∎ { 2(<4)◂{ } %[ 0r ] }
; .mov_ptn2 { 2(<4)◂{ } %[ 0r ] } ⊢ { 0'(= a13◂ [ ] ) 1'(= r ) }
; .mov_ptn %[ 0r ] ⊢ 1'(= r )
	mov rax,0
	mov r14,rax
; .mov_ptn 2(<4)◂{ } ⊢ 0'(= a13◂ [ ] )
	mov rax,unt 
	mov rax,unt_2
	mov r13,rax
	ret
LB_2:
;; ?. 0'(= a13◂ [ ] ) ⊢ 1(<4)◂0'(= {| l |} )
; #9 0'(= {| l |} ) ⊢ { 0'(= {| l |} ) 1'(= r ) }
	mov rdi,r13
	mov rsi,0x0000_ffff_ffff_ffff
	and rsi,[rdi] 
	mov r14,rsi
; #36 0'(= {| l |} ) ⊢ 1(<4)◂0'(= {| l |} )
; ∎ { 1(<4)◂0'(= {| l |} ) 1'(= r ) }
; .mov_ptn2 { 1(<4)◂0'(= {| l |} ) 1'(= r ) } ⊢ { 0'(= a13◂ [ ] ) 1'(= r ) }
	mov r8,r13
; .mov_ptn 1(<4)◂2'(= {| l |} ) ⊢ 0'(= a13◂ [ ] )
	mov rax,r8
	mov BYTE [rax+6],1
	mov r13,rax
	ret
ETR_40: ;; add_s8 { 0'(= a13◂ [ ] ) 1'(= {| l |} ) } ⊢ 0'(= a13◂ [ ] ) : ({ _t13 _s8 }→_t13)
; #9 1'(= {| l |} ) ⊢ { 1'(= {| l |} ) 2'(= r ) }
	mov rdi,r14
	mov rsi,0x0000_ffff_ffff_ffff
	and rsi,[rdi] 
	mov r8,rsi
; #39 0'(= a13◂ [ ] ) ⊢ { 0'(= a13◂ [ ] ) 3'(= r ) }
	sub rsp,16
	mov QWORD [rsp+8*0],r14
	mov QWORD [rsp+8*1],r8
; .mov_ptn2 0'(= a13◂ [ ] ) ⊢ 0'(= a13◂ [ ] )
	call ETR_39
	mov r8,QWORD [rsp-8+8*2]
	mov r9,r14
	mov r14,QWORD [rsp-8+8*1]
	add rsp,16
; #13 { 2'(= r ) 3'(= r ) } ⊢ { 2'(= r ) 3'(= r ) }
	add r8,r9
; #36 1'(= {| l |} ) ⊢ 1(<4)◂1'(= {| l |} )
; #37 { 0'(= a13◂ [ ] ) 2'(= r ) 1(<4)◂1'(= {| l |} ) } ⊢ 0(<4)◂{ 0'(= a13◂ [ ] ) 2'(= r ) 1(<4)◂1'(= {| l |} ) }
; ∎ 0(<4)◂{ 0'(= a13◂ [ ] ) 2'(= r ) 1(<4)◂1'(= {| l |} ) }
; .dlt.ptn 3'(= r )
	mov rdi,r9
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<4)◂{ 0'(= a13◂ [ ] ) 2'(= r ) 1(<4)◂1'(= {| l |} ) } ⊢ 0'(= a13◂ [ ] )
	mov r9,r13
; .mov_ptn 0(<4)◂{ 3'(= a13◂ [ ] ) 2'(= r ) 1(<4)◂1'(= {| l |} ) } ⊢ 0'(= a13◂ [ ] )
	ALC_RCD 3, rax
	mov r10,rax
	mov rax,r9
	mov QWORD [r10+8+8*0],rax
	mov rax,r8
	mov QWORD [r10+8+8*1],rax
	mov rax,r14
	mov BYTE [rax+6],1
	mov QWORD [r10+8+8*2],rax
	mov rax,r10
	mov BYTE [rax+6],0
	mov r13,rax
	ret
ETR_41: ;; pfx_s8 { 0'(= {| l |} ) 1'(= a13◂ [ ] ) } ⊢ 0'(= a13◂ [ ] ) : ({ _s8 _t13 }→_t13)
; #9 0'(= {| l |} ) ⊢ { 0'(= {| l |} ) 2'(= r ) }
	mov rdi,r13
	mov rsi,0x0000_ffff_ffff_ffff
	and rsi,[rdi] 
	mov r8,rsi
; #39 1'(= a13◂ [ ] ) ⊢ { 3'(= a13◂ [ ] ) 1'(= r ) }
	sub rsp,16
	mov QWORD [rsp+8*0],r13
	mov QWORD [rsp+8*1],r8
; .mov_ptn2 1'(= a13◂ [ ] ) ⊢ 0'(= a13◂ [ ] )
; .mov_ptn 1'(= a13◂ [ ] ) ⊢ 0'(= a13◂ [ ] )
	mov rax,r14
	mov r13,rax
	call ETR_39
	mov r8,QWORD [rsp-8+8*2]
	mov r9,r13
	mov r13,QWORD [rsp-8+8*1]
	add rsp,16
; #13 { 2'(= r ) 1'(= r ) } ⊢ { 2'(= r ) 1'(= r ) }
	add r8,r14
; #36 0'(= {| l |} ) ⊢ 1(<4)◂0'(= {| l |} )
; #37 { 1(<4)◂0'(= {| l |} ) 2'(= r ) 3'(= a13◂ [ ] ) } ⊢ 0(<4)◂{ 1(<4)◂0'(= {| l |} ) 2'(= r ) 3'(= a13◂ [ ] ) }
; ∎ 0(<4)◂{ 1(<4)◂0'(= {| l |} ) 2'(= r ) 3'(= a13◂ [ ] ) }
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<4)◂{ 1(<4)◂0'(= {| l |} ) 2'(= r ) 3'(= a13◂ [ ] ) } ⊢ 0'(= a13◂ [ ] )
	mov r14,r13
; .mov_ptn 0(<4)◂{ 1(<4)◂1'(= {| l |} ) 2'(= r ) 3'(= a13◂ [ ] ) } ⊢ 0'(= a13◂ [ ] )
	ALC_RCD 3, rax
	mov r10,rax
	mov rax,r14
	mov BYTE [rax+6],1
	mov QWORD [r10+8+8*0],rax
	mov rax,r8
	mov QWORD [r10+8+8*1],rax
	mov rax,r9
	mov QWORD [r10+8+8*2],rax
	mov rax,r10
	mov BYTE [rax+6],0
	mov r13,rax
	ret
ETR_42: ;; add_chr { 0'(= a13◂ [ ] ) 1'(= r ) } ⊢ 0'(= a13◂ [ ] ) : ({ _t13 _r64 }→_t13)
; #39 0'(= a13◂ [ ] ) ⊢ { 0'(= a13◂ [ ] ) 2'(= r ) }
	sub rsp,8
	mov QWORD [rsp+8*0],r14
; .mov_ptn2 0'(= a13◂ [ ] ) ⊢ 0'(= a13◂ [ ] )
	call ETR_39
	mov r8,r14
	mov r14,QWORD [rsp-8+8*1]
	add rsp,8
; #11 2'(= r ) ⊢ 2'(= r )
	add r8,1
; #34 1'(= r ) ⊢ 3(<4)◂1'(= r )
; #37 { 0'(= a13◂ [ ] ) 2'(= r ) 3(<4)◂1'(= r ) } ⊢ 0(<4)◂{ 0'(= a13◂ [ ] ) 2'(= r ) 3(<4)◂1'(= r ) }
; ∎ 0(<4)◂{ 0'(= a13◂ [ ] ) 2'(= r ) 3(<4)◂1'(= r ) }
; .mov_ptn2 0(<4)◂{ 0'(= a13◂ [ ] ) 2'(= r ) 3(<4)◂1'(= r ) } ⊢ 0'(= a13◂ [ ] )
	mov r9,r13
; .mov_ptn 0(<4)◂{ 3'(= a13◂ [ ] ) 2'(= r ) 3(<4)◂1'(= r ) } ⊢ 0'(= a13◂ [ ] )
	ALC_RCD 3, rax
	mov r10,rax
	mov rax,r9
	mov QWORD [r10+8+8*0],rax
	mov rax,r8
	mov QWORD [r10+8+8*1],rax
	mov rax,r14
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],3
	mov QWORD [rax+8],rdi
	mov QWORD [r10+8+8*2],rax
	mov rax,r10
	mov BYTE [rax+6],0
	mov r13,rax
	ret
ETR_43: ;; pfx_chr { 0'(= r ) 1'(= a13◂ [ ] ) } ⊢ 0'(= a13◂ [ ] ) : ({ _r64 _t13 }→_t13)
; #39 1'(= a13◂ [ ] ) ⊢ { 2'(= a13◂ [ ] ) 1'(= r ) }
	sub rsp,8
	mov QWORD [rsp+8*0],r13
; .mov_ptn2 1'(= a13◂ [ ] ) ⊢ 0'(= a13◂ [ ] )
; .mov_ptn 1'(= a13◂ [ ] ) ⊢ 0'(= a13◂ [ ] )
	mov rax,r14
	mov r13,rax
	call ETR_39
	mov r8,r13
	mov r13,QWORD [rsp-8+8*1]
	add rsp,8
; #11 1'(= r ) ⊢ 1'(= r )
	add r14,1
; #34 0'(= r ) ⊢ 3(<4)◂0'(= r )
; #37 { 3(<4)◂0'(= r ) 1'(= r ) 2'(= a13◂ [ ] ) } ⊢ 0(<4)◂{ 3(<4)◂0'(= r ) 1'(= r ) 2'(= a13◂ [ ] ) }
; ∎ 0(<4)◂{ 3(<4)◂0'(= r ) 1'(= r ) 2'(= a13◂ [ ] ) }
; .mov_ptn2 0(<4)◂{ 3(<4)◂0'(= r ) 1'(= r ) 2'(= a13◂ [ ] ) } ⊢ 0'(= a13◂ [ ] )
	mov r9,r13
; .mov_ptn 0(<4)◂{ 3(<4)◂3'(= r ) 1'(= r ) 2'(= a13◂ [ ] ) } ⊢ 0'(= a13◂ [ ] )
	ALC_RCD 3, rax
	mov r10,rax
	mov rax,r9
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],3
	mov QWORD [rax+8],rdi
	mov QWORD [r10+8+8*0],rax
	mov rax,r14
	mov QWORD [r10+8+8*1],rax
	mov rax,r8
	mov QWORD [r10+8+8*2],rax
	mov rax,r10
	mov BYTE [rax+6],0
	mov r13,rax
	ret
ETR_44: ;; cct { 0'(= a13◂ [ ] ) 1'(= a13◂ [ ] ) } ⊢ 0'(= a13◂ [ ] ) : ({ _t13 _t13 }→_t13)
; #39 0'(= a13◂ [ ] ) ⊢ { 0'(= a13◂ [ ] ) 2'(= r ) }
	sub rsp,8
	mov QWORD [rsp+8*0],r14
; .mov_ptn2 0'(= a13◂ [ ] ) ⊢ 0'(= a13◂ [ ] )
	call ETR_39
	mov r8,r14
	mov r14,QWORD [rsp-8+8*1]
	add rsp,8
; #39 1'(= a13◂ [ ] ) ⊢ { 3'(= a13◂ [ ] ) 1'(= r ) }
	sub rsp,16
	mov QWORD [rsp+8*0],r13
	mov QWORD [rsp+8*1],r8
; .mov_ptn2 1'(= a13◂ [ ] ) ⊢ 0'(= a13◂ [ ] )
; .mov_ptn 1'(= a13◂ [ ] ) ⊢ 0'(= a13◂ [ ] )
	mov rax,r14
	mov r13,rax
	call ETR_39
	mov r8,QWORD [rsp-8+8*2]
	mov r9,r13
	mov r13,QWORD [rsp-8+8*1]
	add rsp,16
; #13 { 2'(= r ) 1'(= r ) } ⊢ { 2'(= r ) 1'(= r ) }
	add r8,r14
; #37 { 0'(= a13◂ [ ] ) 2'(= r ) 3'(= a13◂ [ ] ) } ⊢ 0(<4)◂{ 0'(= a13◂ [ ] ) 2'(= r ) 3'(= a13◂ [ ] ) }
; ∎ 0(<4)◂{ 0'(= a13◂ [ ] ) 2'(= r ) 3'(= a13◂ [ ] ) }
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<4)◂{ 0'(= a13◂ [ ] ) 2'(= r ) 3'(= a13◂ [ ] ) } ⊢ 0'(= a13◂ [ ] )
	mov r14,r13
; .mov_ptn 0(<4)◂{ 1'(= a13◂ [ ] ) 2'(= r ) 3'(= a13◂ [ ] ) } ⊢ 0'(= a13◂ [ ] )
	ALC_RCD 3, rax
	mov r10,rax
	mov rax,r14
	mov QWORD [r10+8+8*0],rax
	mov rax,r8
	mov QWORD [r10+8+8*1],rax
	mov rax,r9
	mov QWORD [r10+8+8*2],rax
	mov rax,r10
	mov BYTE [rax+6],0
	mov r13,rax
	ret
ETR_45: ;; mk_s8_i { 0'(= a13◂ [ ] ) 1'(= {| l |} ) 2'(= r ) } ⊢ { 0'(= a13◂ [ ] ) 1'(= {| l |} ) 2'(= r ) } : ({ _t13 _s8 _r64 }→{ _t13 _s8 _r64 })
;; ? 0'(= a13◂ [ ] ) ⊢ 0(<4)◂{ 3'(= a13◂ [ ] ) 4'(= r ) 5'(= a13◂ [ ] ) }
	mov rdi,r13
	cmp BYTE [rdi+6],0
	jnz LB_3
	mov r9, QWORD [r13+8]
	mov r10, QWORD [r13+16]
	mov r11, QWORD [r13+24]
	mov QWORD [GBG_VCT+8*0],r13
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_RCD 3,rdi
; #45 { 3'(= a13◂ [ ] ) 1'(= {| l |} ) 2'(= r ) } ⊢ { 0'(= a13◂ [ ] ) 1'(= {| l |} ) 2'(= r ) }
	sub rsp,16
	mov QWORD [rsp+8*0],r10
	mov QWORD [rsp+8*1],r11
; .mov_ptn2 { 3'(= a13◂ [ ] ) 1'(= {| l |} ) 2'(= r ) } ⊢ { 0'(= a13◂ [ ] ) 1'(= {| l |} ) 2'(= r ) }
; .mov_ptn 3'(= a13◂ [ ] ) ⊢ 0'(= a13◂ [ ] )
	mov rax,r9
	mov r13,rax
	call ETR_45
	mov r11,QWORD [rsp-8+8*2]
	mov r10,QWORD [rsp-8+8*1]
	add rsp,16
; #45 { 5'(= a13◂ [ ] ) 1'(= {| l |} ) 2'(= r ) } ⊢ { 3'(= a13◂ [ ] ) 1'(= {| l |} ) 2'(= r ) }
	sub rsp,16
	mov QWORD [rsp+8*0],r13
	mov QWORD [rsp+8*1],r10
; .mov_ptn2 { 5'(= a13◂ [ ] ) 1'(= {| l |} ) 2'(= r ) } ⊢ { 0'(= a13◂ [ ] ) 1'(= {| l |} ) 2'(= r ) }
; .mov_ptn 5'(= a13◂ [ ] ) ⊢ 0'(= a13◂ [ ] )
	mov rax,r11
	mov r13,rax
	call ETR_45
	mov r10,QWORD [rsp-8+8*2]
	mov r9,r13
	mov r13,QWORD [rsp-8+8*1]
	add rsp,16
; #37 { 0'(= a13◂ [ ] ) 4'(= r ) 3'(= a13◂ [ ] ) } ⊢ 0(<4)◂{ 0'(= a13◂ [ ] ) 4'(= r ) 3'(= a13◂ [ ] ) }
; ∎ { 0(<4)◂{ 0'(= a13◂ [ ] ) 4'(= r ) 3'(= a13◂ [ ] ) } 1'(= {| l |} ) 2'(= r ) }
; .mov_ptn2 { 0(<4)◂{ 0'(= a13◂ [ ] ) 4'(= r ) 3'(= a13◂ [ ] ) } 1'(= {| l |} ) 2'(= r ) } ⊢ { 0'(= a13◂ [ ] ) 1'(= {| l |} ) 2'(= r ) }
	mov r11,r13
; .mov_ptn 0(<4)◂{ 5'(= a13◂ [ ] ) 4'(= r ) 3'(= a13◂ [ ] ) } ⊢ 0'(= a13◂ [ ] )
	ALC_RCD 3, rax
	mov rcx,rax
	mov rax,r11
	mov QWORD [rcx+8+8*0],rax
	mov rax,r10
	mov QWORD [rcx+8+8*1],rax
	mov rax,r9
	mov QWORD [rcx+8+8*2],rax
	mov rax,rcx
	mov BYTE [rax+6],0
	mov r13,rax
	ret
LB_3:
;; ? 0'(= a13◂ [ ] ) ⊢ 2(<4)◂{ }
	mov rdi,r13
	cmp BYTE [rdi+6],2
	jnz LB_4
; #35 { } ⊢ 2(<4)◂{ }
; ∎ { 2(<4)◂{ } 1'(= {| l |} ) 2'(= r ) }
; .mov_ptn2 { 2(<4)◂{ } 1'(= {| l |} ) 2'(= r ) } ⊢ { 0'(= a13◂ [ ] ) 1'(= {| l |} ) 2'(= r ) }
; .mov_ptn 2(<4)◂{ } ⊢ 0'(= a13◂ [ ] )
	mov rax,unt 
	mov rax,unt_2
	mov r13,rax
	ret
LB_4:
;; ? 0'(= a13◂ [ ] ) ⊢ 3(<4)◂3'(= r )
	mov rdi,r13
	cmp BYTE [rdi+6],3
	jnz LB_5
	mov QWORD [GBG_VCT+8*0],rdi
	mov r9,QWORD [rdi+8]
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_LN rdi
; #16 { 1'(= {| l |} ) 2'(= r ) 3'(= r ) } ⊢ { 1'(= {| l |} ) 2'(= r ) 3'(= r ) }
; _sts { 1'(= {| l |} ) 2'(= r ) 3'(= r ) } ⊢ { 1'(= {| l |} ) 2'(= r ) 3'(= r ) }
	mov rax,r14
	mov rdi,0x0000_ffff_ffff_ffff
	and rdi,[rax]
	cmp rdi,r8
	jle err
	mov rsi,r8
	mov rdi,r9
	mov BYTE [rax+8+rsi],dil
; #11 2'(= r ) ⊢ 2'(= r )
	add r8,1
; #34 3'(= r ) ⊢ 3(<4)◂3'(= r )
; ∎ { 3(<4)◂3'(= r ) 1'(= {| l |} ) 2'(= r ) }
; .mov_ptn2 { 3(<4)◂3'(= r ) 1'(= {| l |} ) 2'(= r ) } ⊢ { 0'(= a13◂ [ ] ) 1'(= {| l |} ) 2'(= r ) }
; .mov_ptn 3(<4)◂3'(= r ) ⊢ 0'(= a13◂ [ ] )
	mov rax,r9
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],3
	mov QWORD [rax+8],rdi
	mov r13,rax
	ret
LB_5:
;; ?. 0'(= a13◂ [ ] ) ⊢ 1(<4)◂0'(= {| l |} )
; #9 0'(= {| l |} ) ⊢ { 0'(= {| l |} ) 3'(= r ) }
	mov rdi,r13
	mov rsi,0x0000_ffff_ffff_ffff
	and rsi,[rdi] 
	mov r9,rsi
; $ %[ 0r ] ⊢ %[ 0r ]
; #19 { 3'(= r ) 0'(= {| l |} ) %[ 0r ] 1'(= {| l |} ) 2'(= r ) } ⊢ { 3'(= r ) 0'(= {| l |} ) %[ 0r ] 1'(= {| l |} ) 2'(= r ) }
; _rep_movsb { 3'(= r ) 0'(= {| l |} ) %[ 0r ] 1'(= {| l |} ) 2'(= r ) } ⊢ { 3'(= r ) 0'(= {| l |} ) %[ 0r ] 1'(= {| l |} ) 2'(= r ) }
	mov rax,r9
	mov rsi,r13
	mov rdi,0x0000_ffff_ffff_ffff
	and rdi,[rsi]
	sub rdi,rax
	lea rsi,[rsi+8]
	cmp rdi,0
	jl err
	lea rsi,[rsi+0]
	push rsi 
	mov rsi,r14
	mov rdi,0x0000_ffff_ffff_ffff
	and rdi,[rsi]
	sub rdi,rax
	lea rsi,[rsi+8]
	cmp rdi,r8
	jl err
	add rsi,r8
	mov rdi,rsi 
	pop rsi 
	push rcx 
	mov rcx,rax 
	cld 
	rep movsb
	pop rcx 
; #36 0'(= {| l |} ) ⊢ 1(<4)◂0'(= {| l |} )
; ∎ { 1(<4)◂0'(= {| l |} ) 1'(= {| l |} ) 2'(= r ) }
; .dlt.ptn %[ 0r ]
; .dlt.ptn 3'(= r )
	mov rdi,r9
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 { 1(<4)◂0'(= {| l |} ) 1'(= {| l |} ) 2'(= r ) } ⊢ { 0'(= a13◂ [ ] ) 1'(= {| l |} ) 2'(= r ) }
	mov r9,r13
; .mov_ptn 1(<4)◂3'(= {| l |} ) ⊢ 0'(= a13◂ [ ] )
	mov rax,r9
	mov BYTE [rax+6],1
	mov r13,rax
	ret
ETR_46: ;; mk_s8 0'(= a13◂ [ ] ) ⊢ { 0'(= a13◂ [ ] ) 1'(= {| l |} ) } : (_t13→{ _t13 _s8 })
; #39 0'(= a13◂ [ ] ) ⊢ { 0'(= a13◂ [ ] ) 1'(= r ) }
; .mov_ptn2 0'(= a13◂ [ ] ) ⊢ 0'(= a13◂ [ ] )
	call ETR_39
; #8 1'(= r ) ⊢ { 1'(= r ) 2'(= {| l |} ) }
	mov rdi,r14
	call mlc_s8
	mov r8,rax
; $ %[ 0r ] ⊢ %[ 0r ]
; #45 { 0'(= a13◂ [ ] ) 2'(= {| l |} ) %[ 0r ] } ⊢ { 0'(= a13◂ [ ] ) 3'(= {| l |} ) 2'(= r ) }
	sub rsp,8
	mov QWORD [rsp+8*0],r14
; .mov_ptn2 { 0'(= a13◂ [ ] ) 2'(= {| l |} ) %[ 0r ] } ⊢ { 0'(= a13◂ [ ] ) 1'(= {| l |} ) 2'(= r ) }
	mov r9,r8
; .mov_ptn %[ 0r ] ⊢ 2'(= r )
	mov rax,0
	mov r8,rax
; .mov_ptn 3'(= {| l |} ) ⊢ 1'(= {| l |} )
	mov rax,r9
	mov r14,rax
	call ETR_45
	mov r9,r14
	mov r14,QWORD [rsp-8+8*1]
	add rsp,8
; ∎ { 0'(= a13◂ [ ] ) 3'(= {| l |} ) }
; .dlt.ptn 2'(= r )
	mov rdi,r8
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 { 0'(= a13◂ [ ] ) 3'(= {| l |} ) } ⊢ { 0'(= a13◂ [ ] ) 1'(= {| l |} ) }
; .mov_ptn 3'(= {| l |} ) ⊢ 1'(= {| l |} )
	mov rax,r9
	mov r14,rax
	ret
LB_7:
	movzx rax,BYTE [r8+6]
	jmp QWORD [LB_10+8*rax]
LB_10: dq LB_8,LB_9
LB_8:
	jmp LB_11
LB_9:
	jmp LB_11
LB_11:
	ret
ETR_49: ;; and { 0'(= a14◂ [ ] ) 1'(= a14◂ [ ] ) } ⊢ 0'(= a14◂ [ ] ) : ({ _t14 _t14 }→_t14)
;; ?; 0'(= a14◂ [ ] ) ⊢ 0(<2)◂{ }
	mov rdi,r13
	cmp BYTE [rdi+6],0
	jnz LB_6
;; ?; 1'(= a14◂ [ ] ) ⊢ 0(<2)◂{ }
	mov rdi,r14
	cmp BYTE [rdi+6],0
	jnz LB_6
; #48 { } ⊢ 0(<2)◂{ }
; ∎ 0(<2)◂{ }
; .mov_ptn2 0(<2)◂{ } ⊢ 0'(= a14◂ [ ] )
; .mov_ptn 0(<2)◂{ } ⊢ 0'(= a14◂ [ ] )
	mov rax,unt 
	mov rax,unt_0
	mov r13,rax
	ret
LB_6:
; #47 { } ⊢ 1(<2)◂{ }
; ∎ 1(<2)◂{ }
; .dlt.ptn 1'(= a14◂ [ ] )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	call LB_7
	C_POP_REGS
; .dlt.ptn 0'(= a14◂ [ ] )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	call LB_7
	C_POP_REGS
; .mov_ptn2 1(<2)◂{ } ⊢ 0'(= a14◂ [ ] )
; .mov_ptn 1(<2)◂{ } ⊢ 0'(= a14◂ [ ] )
	mov rax,unt 
	mov rax,unt_1
	mov r13,rax
	ret
ETR_50: ;; or { 0'(= a14◂ [ ] ) 1'(= a14◂ [ ] ) } ⊢ 0'(= a14◂ [ ] ) : ({ _t14 _t14 }→_t14)
;; ?; 0'(= a14◂ [ ] ) ⊢ 1(<2)◂{ }
	mov rdi,r13
	cmp BYTE [rdi+6],1
	jnz LB_12
;; ?; 1'(= a14◂ [ ] ) ⊢ 1(<2)◂{ }
	mov rdi,r14
	cmp BYTE [rdi+6],1
	jnz LB_12
; #47 { } ⊢ 1(<2)◂{ }
; ∎ 1(<2)◂{ }
; .mov_ptn2 1(<2)◂{ } ⊢ 0'(= a14◂ [ ] )
; .mov_ptn 1(<2)◂{ } ⊢ 0'(= a14◂ [ ] )
	mov rax,unt 
	mov rax,unt_1
	mov r13,rax
	ret
LB_12:
; #48 { } ⊢ 0(<2)◂{ }
; ∎ 0(<2)◂{ }
; .dlt.ptn 1'(= a14◂ [ ] )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	call LB_7
	C_POP_REGS
; .dlt.ptn 0'(= a14◂ [ ] )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	call LB_7
	C_POP_REGS
; .mov_ptn2 0(<2)◂{ } ⊢ 0'(= a14◂ [ ] )
; .mov_ptn 0(<2)◂{ } ⊢ 0'(= a14◂ [ ] )
	mov rax,unt 
	mov rax,unt_0
	mov r13,rax
	ret
ETR_51: ;; sub { 0'(= a14◂ [ ] ) 1'(= a14◂ [ ] ) } ⊢ 0'(= a14◂ [ ] ) : ({ _t14 _t14 }→_t14)
;; ?; 1'(= a14◂ [ ] ) ⊢ 1(<2)◂{ }
	mov rdi,r14
	cmp BYTE [rdi+6],1
	jnz LB_13
; ∎ 0'(= a14◂ [ ] )
; .mov_ptn2 0'(= a14◂ [ ] ) ⊢ 0'(= a14◂ [ ] )
	ret
LB_13:
;; ?; 1'(= a14◂ [ ] ) ⊢ 0(<2)◂{ }
; #47 { } ⊢ 1(<2)◂{ }
; ∎ 1(<2)◂{ }
; .dlt.ptn 0'(= a14◂ [ ] )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	call LB_7
	C_POP_REGS
; .mov_ptn2 1(<2)◂{ } ⊢ 0'(= a14◂ [ ] )
; .mov_ptn 1(<2)◂{ } ⊢ 0'(= a14◂ [ ] )
	mov rax,unt 
	mov rax,unt_1
	mov r13,rax
	ret
ETR_57: ;; s8_of_r64_lst_i { 0'(= r ) 1'(= a2◂ [ r] ) } ⊢ { 0'(= r ) 1'(= {| l |} ) } : ({ _r64 _lst◂_r64 }→{ _r64 _s8 })
;; ?; 1'(= a2◂ [ r] ) ⊢ 0(<2)◂{ 2'(= r ) 3'(= a2◂ [ r] ) }
	mov rdi,r14
	cmp BYTE [rdi+6],0
	jnz LB_14
	mov r8, QWORD [r14+8]
	mov r9, QWORD [r14+16]
	mov QWORD [GBG_VCT+8*0],r14
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_RCD 2,rdi
; #11 0'(= r ) ⊢ 0'(= r )
	add r13,1
; #57 { 0'(= r ) 3'(= a2◂ [ r] ) } ⊢ { 0'(= r ) 1'(= {| l |} ) }
	sub rsp,8
	mov QWORD [rsp+8*0],r8
; .mov_ptn2 { 0'(= r ) 3'(= a2◂ [ r] ) } ⊢ { 0'(= r ) 1'(= a2◂ [ r] ) }
; .mov_ptn 3'(= a2◂ [ r] ) ⊢ 1'(= a2◂ [ r] )
	mov rax,r9
	mov r14,rax
	call ETR_57
	mov r8,QWORD [rsp-8+8*1]
	add rsp,8
; #12 0'(= r ) ⊢ 0'(= r )
	sub r13,1
; #16 { 1'(= {| l |} ) 0'(= r ) 2'(= r ) } ⊢ { 1'(= {| l |} ) 0'(= r ) 2'(= r ) }
; _sts { 1'(= {| l |} ) 0'(= r ) 2'(= r ) } ⊢ { 1'(= {| l |} ) 0'(= r ) 2'(= r ) }
	mov rax,r14
	mov rdi,0x0000_ffff_ffff_ffff
	and rdi,[rax]
	cmp rdi,r13
	jle err
	mov rsi,r13
	mov rdi,r8
	mov BYTE [rax+8+rsi],dil
; ∎ { 0'(= r ) 1'(= {| l |} ) }
; .dlt.ptn 2'(= r )
	mov rdi,r8
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 { 0'(= r ) 1'(= {| l |} ) } ⊢ { 0'(= r ) 1'(= {| l |} ) }
	ret
LB_14:
;; ?; 1'(= a2◂ [ r] ) ⊢ 1(<2)◂{ }
; #8 0'(= r ) ⊢ { 0'(= r ) 1'(= {| l |} ) }
	mov rdi,r13
	call mlc_s8
	mov r14,rax
; ∎ { 0'(= r ) 1'(= {| l |} ) }
; .mov_ptn2 { 0'(= r ) 1'(= {| l |} ) } ⊢ { 0'(= r ) 1'(= {| l |} ) }
	ret
ETR_58: ;; s8_of_r64_lst 0'(= a2◂ [ r] ) ⊢ 0'(= {| l |} ) : (_lst◂_r64→_s8)
; $ %[ 0r ] ⊢ %[ 0r ]
; #57 { %[ 0r ] 0'(= a2◂ [ r] ) } ⊢ { 0'(= r ) 1'(= {| l |} ) }
; .mov_ptn2 { %[ 0r ] 0'(= a2◂ [ r] ) } ⊢ { 0'(= r ) 1'(= a2◂ [ r] ) }
; .mov_ptn 0'(= a2◂ [ r] ) ⊢ 1'(= a2◂ [ r] )
	mov rax,r13
	mov r14,rax
; .mov_ptn %[ 0r ] ⊢ 0'(= r )
	mov rax,0
	mov r13,rax
	call ETR_57
; ∎ 1'(= {| l |} )
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 1'(= {| l |} ) ⊢ 0'(= {| l |} )
; .mov_ptn 1'(= {| l |} ) ⊢ 0'(= {| l |} )
	mov rax,r14
	mov r13,rax
	ret
ETR_59: ;; s8_of_s8_lst_i { 0'(= r ) 1'(= a2◂ [ {| l |}] ) } ⊢ { 0'(= {| l |} ) 1'(= r ) } : ({ _r64 _lst◂_s8 }→{ _s8 _r64 })
;; ? 1'(= a2◂ [ {| l |}] ) ⊢ 0(<2)◂{ 2'(= {| l |} ) 3'(= a2◂ [ {| l |}] ) }
	mov rdi,r14
	cmp BYTE [rdi+6],0
	jnz LB_15
	mov r8, QWORD [r14+8]
	mov r9, QWORD [r14+16]
	mov QWORD [GBG_VCT+8*0],r14
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_RCD 2,rdi
; #9 2'(= {| l |} ) ⊢ { 2'(= {| l |} ) 1'(= r ) }
	mov rdi,r8
	mov rsi,0x0000_ffff_ffff_ffff
	and rsi,[rdi] 
	mov r14,rsi
; #13 { 0'(= r ) 1'(= r ) } ⊢ { 0'(= r ) 1'(= r ) }
	add r13,r14
; #59 { 0'(= r ) 3'(= a2◂ [ {| l |}] ) } ⊢ { 0'(= {| l |} ) 3'(= r ) }
	sub rsp,16
	mov QWORD [rsp+8*0],r14
	mov QWORD [rsp+8*1],r8
; .mov_ptn2 { 0'(= r ) 3'(= a2◂ [ {| l |}] ) } ⊢ { 0'(= r ) 1'(= a2◂ [ {| l |}] ) }
; .mov_ptn 3'(= a2◂ [ {| l |}] ) ⊢ 1'(= a2◂ [ {| l |}] )
	mov rax,r9
	mov r14,rax
	call ETR_59
	mov r8,QWORD [rsp-8+8*2]
	mov r9,r14
	mov r14,QWORD [rsp-8+8*1]
	add rsp,16
; $ %[ 0r ] ⊢ %[ 0r ]
; $ 1'(= r ) ⊢ 1'(= r ),4'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	mov rax,r8
	C_POP_REGS
	mov r10,rax
; #19 { 1'(= r ) 2'(= {| l |} ) %[ 0r ] 0'(= {| l |} ) 3'(= r ) } ⊢ { 1'(= r ) 2'(= {| l |} ) %[ 0r ] 0'(= {| l |} ) 3'(= r ) }
; _rep_movsb { 1'(= r ) 2'(= {| l |} ) %[ 0r ] 0'(= {| l |} ) 3'(= r ) } ⊢ { 1'(= r ) 2'(= {| l |} ) %[ 0r ] 0'(= {| l |} ) 3'(= r ) }
	mov rax,r14
	mov rsi,r8
	mov rdi,0x0000_ffff_ffff_ffff
	and rdi,[rsi]
	sub rdi,rax
	lea rsi,[rsi+8]
	cmp rdi,0
	jl err
	lea rsi,[rsi+0]
	push rsi 
	mov rsi,r13
	mov rdi,0x0000_ffff_ffff_ffff
	and rdi,[rsi]
	sub rdi,rax
	lea rsi,[rsi+8]
	cmp rdi,r9
	jl err
	add rsi,r9
	mov rdi,rsi 
	pop rsi 
	push rcx 
	mov rcx,rax 
	cld 
	rep movsb
	pop rcx 
; ∎ { 0'(= {| l |} ) 3'(= r ) }
; .dlt.ptn %[ 0r ]
; .dlt.ptn 2'(= {| l |} )
	mov rdi,r8
	C_PUSH_REGS
	mov r8,rdi
	mov rdi,r8
	call free_s8
	C_POP_REGS
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 4'(= r )
	mov rdi,r10
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 { 0'(= {| l |} ) 3'(= r ) } ⊢ { 0'(= {| l |} ) 1'(= r ) }
; .mov_ptn 3'(= r ) ⊢ 1'(= r )
	mov rax,r9
	mov r14,rax
	ret
LB_15:
;; ?. 1'(= a2◂ [ {| l |}] ) ⊢ 1(<2)◂{ }
; #8 0'(= r ) ⊢ { 0'(= r ) 1'(= {| l |} ) }
	mov rdi,r13
	call mlc_s8
	mov r14,rax
; $ %[ 0r ] ⊢ %[ 0r ]
; ∎ { 1'(= {| l |} ) %[ 0r ] }
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 { 1'(= {| l |} ) %[ 0r ] } ⊢ { 0'(= {| l |} ) 1'(= r ) }
; .mov_ptn 1'(= {| l |} ) ⊢ 0'(= {| l |} )
	mov rax,r14
	mov r13,rax
; .mov_ptn %[ 0r ] ⊢ 1'(= r )
	mov rax,0
	mov r14,rax
	ret
ETR_60: ;; s8_of_s8_lst 0'(= a2◂ [ {| l |}] ) ⊢ 0'(= {| l |} ) : (_lst◂_s8→_s8)
; $ %[ 0r ] ⊢ %[ 0r ]
; #59 { %[ 0r ] 0'(= a2◂ [ {| l |}] ) } ⊢ { 0'(= {| l |} ) 1'(= r ) }
; .mov_ptn2 { %[ 0r ] 0'(= a2◂ [ {| l |}] ) } ⊢ { 0'(= r ) 1'(= a2◂ [ {| l |}] ) }
; .mov_ptn 0'(= a2◂ [ {| l |}] ) ⊢ 1'(= a2◂ [ {| l |}] )
	mov rax,r13
	mov r14,rax
; .mov_ptn %[ 0r ] ⊢ 0'(= r )
	mov rax,0
	mov r13,rax
	call ETR_59
; ∎ 0'(= {| l |} )
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0'(= {| l |} ) ⊢ 0'(= {| l |} )
	ret
ETR_68:
	mov r9,0x0000_ffff_ffff_ffff
	and r9,[r13]
	call GRM_68
	ret
GRM_68:
	PUSH_GRM
	lea rax,[r14+1]
	cmp rax,r9
	jg LB_19
	jmp LB_20
LB_19:
	mov r8,unt_1
	jmp LB_17
LB_20:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],10
	jnz LB_21
	jmp LB_22
LB_21:
	mov r8,unt_1
	jmp LB_17
LB_22:
	add r14,1
	jmp LB_18
LB_17:
	add rsp,0
	jmp LB_16
LB_18:
	call GRM_68
	cmp BYTE [r8+6],0
	jnz LB_25
	jmp LB_26
LB_25:
	jmp LB_23
LB_26:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a13◂ [ ] ) ⊢ 8'(= a13◂ [ ] )
; .mov_ptn 2'(= a13◂ [ ] ) ⊢ 8'(= a13◂ [ ] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_24
LB_23:
	add rsp,0
	jmp LB_16
LB_24:
	mov QWORD [rsp+8*1],r14
	mov r13,QWORD [rsp+16+8*1]
	mov r14,QWORD [rsp+8*1]
	jmp LB_27
LB_27
; $ %[ "\\n" ] ⊢ %[ "\\n" ]
; #41 { %[ "\\n" ] 8'(= a13◂ [ ] ) } ⊢ 2'(= a13◂ [ ] )
	sub rsp,16
	mov QWORD [rsp+8*0],r13
	mov QWORD [rsp+8*1],r14
; .mov_ptn2 { %[ "\\n" ] 8'(= a13◂ [ ] ) } ⊢ { 0'(= {| l |} ) 1'(= a13◂ [ ] ) }
; .mov_ptn 8'(= a13◂ [ ] ) ⊢ 1'(= a13◂ [ ] )
	mov rax,QWORD [rsp-8+8*3]
	mov r14,rax
; .mov_ptn %[ "\\n" ] ⊢ 0'(= {| l |} )
	mov rsi,1  
	mov rdi,16
	xor rax,rax 
	C_CALL_SF calloc
	mov QWORD [rax],2
	mov BYTE [rax+8+0],92
	mov BYTE [rax+8+1],110
	mov r13,rax
	call ETR_41
	mov r14,QWORD [rsp-8+8*2]
	mov r8,r13
	mov r13,QWORD [rsp-8+8*1]
	add rsp,24
; #24 2'(= a13◂ [ ] ) ⊢ 0(<2)◂2'(= a13◂ [ ] )
; ∎ 0(<2)◂2'(= a13◂ [ ] )
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂2'(= a13◂ [ ] ) ⊢ 2'(= a3◂ [ a13◂ [ ]] )
	mov r13,r8
; .mov_ptn 0(<2)◂0'(= a13◂ [ ] ) ⊢ 2'(= a3◂ [ a13◂ [ ]] )
	mov rax,r13
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	jmp LB_28
LB_28:
	cmp BYTE [r8+6],0
	jnz LB_16
	POP_GRM_SCC
	ret
LB_16:
	RB_GRM
	lea rax,[r14+1]
	cmp rax,r9
	jg LB_32
	jmp LB_33
LB_32:
	mov r8,unt_1
	jmp LB_30
LB_33:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],9
	jnz LB_34
	jmp LB_35
LB_34:
	mov r8,unt_1
	jmp LB_30
LB_35:
	add r14,1
	jmp LB_31
LB_30:
	add rsp,0
	jmp LB_29
LB_31:
	call GRM_68
	cmp BYTE [r8+6],0
	jnz LB_38
	jmp LB_39
LB_38:
	jmp LB_36
LB_39:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a13◂ [ ] ) ⊢ 8'(= a13◂ [ ] )
; .mov_ptn 2'(= a13◂ [ ] ) ⊢ 8'(= a13◂ [ ] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_37
LB_36:
	add rsp,0
	jmp LB_29
LB_37:
	mov QWORD [rsp+8*1],r14
	mov r13,QWORD [rsp+16+8*1]
	mov r14,QWORD [rsp+8*1]
	jmp LB_40
LB_40
; $ %[ "\\t" ] ⊢ %[ "\\t" ]
; #41 { %[ "\\t" ] 8'(= a13◂ [ ] ) } ⊢ 2'(= a13◂ [ ] )
	sub rsp,16
	mov QWORD [rsp+8*0],r13
	mov QWORD [rsp+8*1],r14
; .mov_ptn2 { %[ "\\t" ] 8'(= a13◂ [ ] ) } ⊢ { 0'(= {| l |} ) 1'(= a13◂ [ ] ) }
; .mov_ptn 8'(= a13◂ [ ] ) ⊢ 1'(= a13◂ [ ] )
	mov rax,QWORD [rsp-8+8*3]
	mov r14,rax
; .mov_ptn %[ "\\t" ] ⊢ 0'(= {| l |} )
	mov rsi,1  
	mov rdi,16
	xor rax,rax 
	C_CALL_SF calloc
	mov QWORD [rax],2
	mov BYTE [rax+8+0],92
	mov BYTE [rax+8+1],116
	mov r13,rax
	call ETR_41
	mov r14,QWORD [rsp-8+8*2]
	mov r8,r13
	mov r13,QWORD [rsp-8+8*1]
	add rsp,24
; #24 2'(= a13◂ [ ] ) ⊢ 0(<2)◂2'(= a13◂ [ ] )
; ∎ 0(<2)◂2'(= a13◂ [ ] )
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂2'(= a13◂ [ ] ) ⊢ 2'(= a3◂ [ a13◂ [ ]] )
	mov r13,r8
; .mov_ptn 0(<2)◂0'(= a13◂ [ ] ) ⊢ 2'(= a3◂ [ a13◂ [ ]] )
	mov rax,r13
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	jmp LB_41
LB_41:
	cmp BYTE [r8+6],0
	jnz LB_29
	POP_GRM_SCC
	ret
LB_29:
	RB_GRM
	lea rax,[r14+1]
	cmp rax,r9
	jg LB_45
	jmp LB_46
LB_45:
	mov r8,unt_1
	jmp LB_43
LB_46:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],92
	jnz LB_47
	jmp LB_48
LB_47:
	mov r8,unt_1
	jmp LB_43
LB_48:
	add r14,1
	jmp LB_44
LB_43:
	add rsp,0
	jmp LB_42
LB_44:
	call GRM_68
	cmp BYTE [r8+6],0
	jnz LB_51
	jmp LB_52
LB_51:
	jmp LB_49
LB_52:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a13◂ [ ] ) ⊢ 8'(= a13◂ [ ] )
; .mov_ptn 2'(= a13◂ [ ] ) ⊢ 8'(= a13◂ [ ] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_50
LB_49:
	add rsp,0
	jmp LB_42
LB_50:
	mov QWORD [rsp+8*1],r14
	mov r13,QWORD [rsp+16+8*1]
	mov r14,QWORD [rsp+8*1]
	jmp LB_53
LB_53
; $ %[ "\\\\" ] ⊢ %[ "\\\\" ]
; #41 { %[ "\\\\" ] 8'(= a13◂ [ ] ) } ⊢ 2'(= a13◂ [ ] )
	sub rsp,16
	mov QWORD [rsp+8*0],r13
	mov QWORD [rsp+8*1],r14
; .mov_ptn2 { %[ "\\\\" ] 8'(= a13◂ [ ] ) } ⊢ { 0'(= {| l |} ) 1'(= a13◂ [ ] ) }
; .mov_ptn 8'(= a13◂ [ ] ) ⊢ 1'(= a13◂ [ ] )
	mov rax,QWORD [rsp-8+8*3]
	mov r14,rax
; .mov_ptn %[ "\\\\" ] ⊢ 0'(= {| l |} )
	mov rsi,1  
	mov rdi,16
	xor rax,rax 
	C_CALL_SF calloc
	mov QWORD [rax],2
	mov BYTE [rax+8+0],92
	mov BYTE [rax+8+1],92
	mov r13,rax
	call ETR_41
	mov r14,QWORD [rsp-8+8*2]
	mov r8,r13
	mov r13,QWORD [rsp-8+8*1]
	add rsp,24
; #24 2'(= a13◂ [ ] ) ⊢ 0(<2)◂2'(= a13◂ [ ] )
; ∎ 0(<2)◂2'(= a13◂ [ ] )
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂2'(= a13◂ [ ] ) ⊢ 2'(= a3◂ [ a13◂ [ ]] )
	mov r13,r8
; .mov_ptn 0(<2)◂0'(= a13◂ [ ] ) ⊢ 2'(= a3◂ [ a13◂ [ ]] )
	mov rax,r13
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	jmp LB_54
LB_54:
	cmp BYTE [r8+6],0
	jnz LB_42
	POP_GRM_SCC
	ret
LB_42:
	RB_GRM
	lea rax,[r14+1]
	cmp rax,r9
	jg LB_58
	jmp LB_59
LB_58:
	mov r8,unt_1
	jmp LB_56
LB_59:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],34
	jnz LB_60
	jmp LB_61
LB_60:
	mov r8,unt_1
	jmp LB_56
LB_61:
	add r14,1
	jmp LB_57
LB_56:
	add rsp,0
	jmp LB_55
LB_57:
	call GRM_68
	cmp BYTE [r8+6],0
	jnz LB_64
	jmp LB_65
LB_64:
	jmp LB_62
LB_65:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a13◂ [ ] ) ⊢ 8'(= a13◂ [ ] )
; .mov_ptn 2'(= a13◂ [ ] ) ⊢ 8'(= a13◂ [ ] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_63
LB_62:
	add rsp,0
	jmp LB_55
LB_63:
	mov QWORD [rsp+8*1],r14
	mov r13,QWORD [rsp+16+8*1]
	mov r14,QWORD [rsp+8*1]
	jmp LB_66
LB_66
; $ %[ "\\\"" ] ⊢ %[ "\\\"" ]
; #41 { %[ "\\\"" ] 8'(= a13◂ [ ] ) } ⊢ 2'(= a13◂ [ ] )
	sub rsp,16
	mov QWORD [rsp+8*0],r13
	mov QWORD [rsp+8*1],r14
; .mov_ptn2 { %[ "\\\"" ] 8'(= a13◂ [ ] ) } ⊢ { 0'(= {| l |} ) 1'(= a13◂ [ ] ) }
; .mov_ptn 8'(= a13◂ [ ] ) ⊢ 1'(= a13◂ [ ] )
	mov rax,QWORD [rsp-8+8*3]
	mov r14,rax
; .mov_ptn %[ "\\\"" ] ⊢ 0'(= {| l |} )
	mov rsi,1  
	mov rdi,16
	xor rax,rax 
	C_CALL_SF calloc
	mov QWORD [rax],2
	mov BYTE [rax+8+0],92
	mov BYTE [rax+8+1],34
	mov r13,rax
	call ETR_41
	mov r14,QWORD [rsp-8+8*2]
	mov r8,r13
	mov r13,QWORD [rsp-8+8*1]
	add rsp,24
; #24 2'(= a13◂ [ ] ) ⊢ 0(<2)◂2'(= a13◂ [ ] )
; ∎ 0(<2)◂2'(= a13◂ [ ] )
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂2'(= a13◂ [ ] ) ⊢ 2'(= a3◂ [ a13◂ [ ]] )
	mov r13,r8
; .mov_ptn 0(<2)◂0'(= a13◂ [ ] ) ⊢ 2'(= a3◂ [ a13◂ [ ]] )
	mov rax,r13
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	jmp LB_67
LB_67:
	cmp BYTE [r8+6],0
	jnz LB_55
	POP_GRM_SCC
	ret
LB_55:
	RB_GRM
	cmp r14,r9
	jge LB_71
	jmp LB_72
LB_71:
	mov r8,unt_1 
	jmp LB_69
LB_72:
	movzx rdi,BYTE [r13+8+r14]
	push rdi 
	add r14,1 
	jmp LB_70
LB_69:
	add rsp,0
	jmp LB_68
LB_70:
	call GRM_68
	cmp BYTE [r8+6],0
	jnz LB_75
	jmp LB_76
LB_75:
	jmp LB_73
LB_76:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a13◂ [ ] ) ⊢ 9'(= a13◂ [ ] )
; .mov_ptn 2'(= a13◂ [ ] ) ⊢ 9'(= a13◂ [ ] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_74
LB_73:
	add rsp,8
	jmp LB_68
LB_74:
	mov QWORD [rsp+8*2],r14
	mov r13,QWORD [rsp+16+8*2]
	mov r14,QWORD [rsp+8*2]
	jmp LB_77
LB_77
	mov rdi,0
	cmp QWORD [rsp-8+8*2],rdi
	jnz LB_79
; $ %[ "\\0" ] ⊢ %[ "\\0" ]
; #41 { %[ "\\0" ] 9'(= a13◂ [ ] ) } ⊢ 2'(= a13◂ [ ] )
	sub rsp,16
	mov QWORD [rsp+8*0],r13
	mov QWORD [rsp+8*1],r14
; .mov_ptn2 { %[ "\\0" ] 9'(= a13◂ [ ] ) } ⊢ { 0'(= {| l |} ) 1'(= a13◂ [ ] ) }
; .mov_ptn 9'(= a13◂ [ ] ) ⊢ 1'(= a13◂ [ ] )
	mov rax,QWORD [rsp-8+8*3]
	mov r14,rax
; .mov_ptn %[ "\\0" ] ⊢ 0'(= {| l |} )
	mov rsi,1  
	mov rdi,16
	xor rax,rax 
	C_CALL_SF calloc
	mov QWORD [rax],2
	mov BYTE [rax+8+0],92
	mov BYTE [rax+8+1],48
	mov r13,rax
	call ETR_41
	mov r14,QWORD [rsp-8+8*2]
	mov r8,r13
	mov r13,QWORD [rsp-8+8*1]
	add rsp,24
; #24 2'(= a13◂ [ ] ) ⊢ 0(<2)◂2'(= a13◂ [ ] )
; ∎ 0(<2)◂2'(= a13◂ [ ] )
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 8'(= r )
	mov rdi,QWORD [rsp-8+8*1]
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂2'(= a13◂ [ ] ) ⊢ 2'(= a3◂ [ a13◂ [ ]] )
	mov r13,r8
; .mov_ptn 0(<2)◂0'(= a13◂ [ ] ) ⊢ 2'(= a3◂ [ a13◂ [ ]] )
	mov rax,r13
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,8
	jmp LB_78
LB_79:
; #43 { 8'(= r ) 9'(= a13◂ [ ] ) } ⊢ 2'(= a13◂ [ ] )
	sub rsp,16
	mov QWORD [rsp+8*0],r13
	mov QWORD [rsp+8*1],r14
; .mov_ptn2 { 8'(= r ) 9'(= a13◂ [ ] ) } ⊢ { 0'(= r ) 1'(= a13◂ [ ] ) }
; .mov_ptn 9'(= a13◂ [ ] ) ⊢ 1'(= a13◂ [ ] )
	mov rax,QWORD [rsp-8+8*3]
	mov r14,rax
; .mov_ptn 8'(= r ) ⊢ 0'(= r )
	mov rax,QWORD [rsp-8+8*4]
	mov r13,rax
	call ETR_43
	mov r14,QWORD [rsp-8+8*2]
	mov r8,r13
	mov r13,QWORD [rsp-8+8*1]
	add rsp,32
; #24 2'(= a13◂ [ ] ) ⊢ 0(<2)◂2'(= a13◂ [ ] )
; ∎ 0(<2)◂2'(= a13◂ [ ] )
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂2'(= a13◂ [ ] ) ⊢ 2'(= a3◂ [ a13◂ [ ]] )
	mov r13,r8
; .mov_ptn 0(<2)◂0'(= a13◂ [ ] ) ⊢ 2'(= a3◂ [ a13◂ [ ]] )
	mov rax,r13
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	jmp LB_78
LB_78:
	cmp BYTE [r8+6],0
	jnz LB_68
	POP_GRM_SCC
	ret
LB_68:
	RB_GRM
	mov QWORD [rsp+8*0],r14
	mov r13,QWORD [rsp+16+8*0]
	mov r14,QWORD [rsp+8*0]
	jmp LB_81
LB_81
; #35 { } ⊢ 2(<4)◂{ }
; #24 2(<4)◂{ } ⊢ 0(<2)◂2(<4)◂{ }
; ∎ 0(<2)◂2(<4)◂{ }
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂2(<4)◂{ } ⊢ 2'(= a3◂ [ a13◂ [ ]] )
; .mov_ptn 0(<2)◂2(<4)◂{ } ⊢ 2'(= a3◂ [ a13◂ [ ]] )
	mov rax,unt 
	mov rax,unt_2
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	jmp LB_82
LB_82:
	cmp BYTE [r8+6],0
	jnz LB_80
	POP_GRM_SCC
	ret
LB_80:
	POP_GRM_FAIL 
	ret
LB_84:
	movzx rax,BYTE [r8+6]
	jmp QWORD [LB_89+8*rax]
LB_89: dq LB_85,LB_86,LB_87,LB_88
LB_85:
	push r8
	mov r8,QWORD [r8+8+8*0]
	call LB_84
	pop r8 
	push r8
	mov r8,QWORD [r8+8+8*1]
	pop r8 
	push r8
	mov r8,QWORD [r8+8+8*2]
	call LB_84
	pop r8 
	FREE_RCD 3, r8
	jmp LB_90
LB_86:
	mov rdi,r8
	call free_s8
	jmp LB_90
LB_87:
	jmp LB_90
LB_88:
	FREE_LN r8 
	mov r8,QWORD [r8+8]
	jmp LB_90
LB_90:
	ret
ETR_69: ;; mk_esc_s8 0'(= {| l |} ) ⊢ { 0'(= {| l |} ) 1'(= {| l |} ) } : (_s8→{ _s8 _s8 })
; $ %[ 0r ] ⊢ %[ 0r ]
; #68 { 0'(= {| l |} ) %[ 0r ] } ⊢ { 0'(= {| l |} ) 1'(= r ) 2'(= a3◂ [ a13◂ [ ]] ) }
; .mov_ptn2 { 0'(= {| l |} ) %[ 0r ] } ⊢ { 0'(= {| l |} ) 1'(= r ) }
; .mov_ptn %[ 0r ] ⊢ 1'(= r )
	mov rax,0
	mov r14,rax
	call ETR_68
;; ?; 2'(= a3◂ [ a13◂ [ ]] ) ⊢ 0(<2)◂3'(= a13◂ [ ] )
	mov rdi,r8
	cmp BYTE [rdi+6],0
	jnz LB_83
	mov QWORD [GBG_VCT+8*0],rdi
	mov r9,QWORD [rdi+8]
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_LN rdi
; #46 3'(= a13◂ [ ] ) ⊢ { 3'(= a13◂ [ ] ) 2'(= {| l |} ) }
	sub rsp,16
	mov QWORD [rsp+8*0],r13
	mov QWORD [rsp+8*1],r14
; .mov_ptn2 3'(= a13◂ [ ] ) ⊢ 0'(= a13◂ [ ] )
; .mov_ptn 3'(= a13◂ [ ] ) ⊢ 0'(= a13◂ [ ] )
	mov rax,r9
	mov r13,rax
	call ETR_46
	mov r8,r14
	mov r14,QWORD [rsp-8+8*2]
	mov r9,r13
	mov r13,QWORD [rsp-8+8*1]
	add rsp,16
; ∎ { 0'(= {| l |} ) 2'(= {| l |} ) }
; .dlt.ptn 3'(= a13◂ [ ] )
	mov rdi,r9
	C_PUSH_REGS
	mov r8,rdi
	call LB_84
	C_POP_REGS
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 { 0'(= {| l |} ) 2'(= {| l |} ) } ⊢ { 0'(= {| l |} ) 1'(= {| l |} ) }
; .mov_ptn 2'(= {| l |} ) ⊢ 1'(= {| l |} )
	mov rax,r8
	mov r14,rax
	ret
LB_83:
; $ %[ "esc_stg_ltr" ] ⊢ %[ "esc_stg_ltr" ]
; #10 %[ "esc_stg_ltr" ] ⊢ %[ "esc_stg_ltr" ]
	mov rdi,fmt_emt
	call emt_stg
	mov rdi,LB_91
	call emt_stg 
	mov rdi,fmt_nl
	call emt_stg
	jmp LB_92
LB_92:
	mov rdi,LB_93
	call emt_stg 
	jmp err
ETR_70:
	mov r9,0x0000_ffff_ffff_ffff
	and r9,[r13]
	call GRM_70
	ret
GRM_70:
	PUSH_GRM
	lea rax,[r14+1]
	cmp rax,r9
	jg LB_97
	jmp LB_98
LB_97:
	mov r8,unt_1
	jmp LB_95
LB_98:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],34
	jnz LB_99
	jmp LB_100
LB_99:
	mov r8,unt_1
	jmp LB_95
LB_100:
	add r14,1
	jmp LB_96
LB_95:
	add rsp,0
	jmp LB_94
LB_96:
	call GRM_71
	cmp BYTE [r8+6],0
	jnz LB_103
	jmp LB_104
LB_103:
	jmp LB_101
LB_104:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a13◂ [ ] ) ⊢ 8'(= a13◂ [ ] )
; .mov_ptn 2'(= a13◂ [ ] ) ⊢ 8'(= a13◂ [ ] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_102
LB_101:
	add rsp,0
	jmp LB_94
LB_102:
	mov QWORD [rsp+8*1],r14
	mov r13,QWORD [rsp+16+8*1]
	mov r14,QWORD [rsp+8*1]
	jmp LB_105
LB_105
; #46 8'(= a13◂ [ ] ) ⊢ { 3'(= a13◂ [ ] ) 2'(= {| l |} ) }
	sub rsp,16
	mov QWORD [rsp+8*0],r13
	mov QWORD [rsp+8*1],r14
; .mov_ptn2 8'(= a13◂ [ ] ) ⊢ 0'(= a13◂ [ ] )
; .mov_ptn 8'(= a13◂ [ ] ) ⊢ 0'(= a13◂ [ ] )
	mov rax,QWORD [rsp-8+8*3]
	mov r13,rax
	call ETR_46
	mov r8,r14
	mov r14,QWORD [rsp-8+8*2]
	mov r9,r13
	mov r13,QWORD [rsp-8+8*1]
	add rsp,24
; #24 2'(= {| l |} ) ⊢ 0(<2)◂2'(= {| l |} )
; ∎ 0(<2)◂2'(= {| l |} )
; .dlt.ptn 3'(= a13◂ [ ] )
	mov rdi,r9
	C_PUSH_REGS
	mov r8,rdi
	call LB_84
	C_POP_REGS
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂2'(= {| l |} ) ⊢ 2'(= a3◂ [ {| l |}] )
	mov r13,r8
; .mov_ptn 0(<2)◂0'(= {| l |} ) ⊢ 2'(= a3◂ [ {| l |}] )
	mov rax,r13
	mov BYTE [rax+6],0
	mov r8,rax
	jmp LB_106
LB_106:
	cmp BYTE [r8+6],0
	jnz LB_94
	POP_GRM_SCC
	ret
LB_94:
	POP_GRM_FAIL 
	ret
ETR_71:
	mov r9,0x0000_ffff_ffff_ffff
	and r9,[r13]
	call GRM_71
	ret
GRM_71:
	PUSH_GRM
	lea rax,[r14+1]
	cmp rax,r9
	jg LB_110
	jmp LB_111
LB_110:
	mov r8,unt_1
	jmp LB_108
LB_111:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],10
	jnz LB_112
	jmp LB_113
LB_112:
	mov r8,unt_1
	jmp LB_108
LB_113:
	add r14,1
	jmp LB_109
LB_108:
	add rsp,0
	jmp LB_107
LB_109:
	mov QWORD [rsp+8*0],r14
	mov r13,QWORD [rsp+16+8*0]
	mov r14,QWORD [rsp+8*0]
	jmp LB_114
LB_114
; #25 { } ⊢ 1(<2)◂{ }
; ∎ 1(<2)◂{ }
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn { }
; .mov_ptn2 1(<2)◂{ } ⊢ 2'(= a3◂ [ a13◂ [ ]] )
; .mov_ptn 1(<2)◂{ } ⊢ 2'(= a3◂ [ a13◂ [ ]] )
	mov rax,unt 
	mov rax,unt_1
	mov r8,rax
	jmp LB_115
LB_115:
	cmp BYTE [r8+6],0
	jnz LB_107
	POP_GRM_SCC
	ret
LB_107:
	RB_GRM
	lea rax,[r14+1]
	cmp rax,r9
	jg LB_119
	jmp LB_120
LB_119:
	mov r8,unt_1
	jmp LB_117
LB_120:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],92
	jnz LB_121
	jmp LB_122
LB_121:
	mov r8,unt_1
	jmp LB_117
LB_122:
	add r14,1
	jmp LB_118
LB_117:
	add rsp,0
	jmp LB_116
LB_118:
	call GRM_72
	cmp BYTE [r8+6],0
	jnz LB_125
	jmp LB_126
LB_125:
	jmp LB_123
LB_126:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= r ) ⊢ 8'(= r )
; .mov_ptn 2'(= r ) ⊢ 8'(= r )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_124
LB_123:
	add rsp,0
	jmp LB_116
LB_124:
	call GRM_71
	cmp BYTE [r8+6],0
	jnz LB_129
	jmp LB_130
LB_129:
	jmp LB_127
LB_130:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a13◂ [ ] ) ⊢ 9'(= a13◂ [ ] )
; .mov_ptn 2'(= a13◂ [ ] ) ⊢ 9'(= a13◂ [ ] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_128
LB_127:
	add rsp,8
	jmp LB_116
LB_128:
	mov QWORD [rsp+8*2],r14
	mov r13,QWORD [rsp+16+8*2]
	mov r14,QWORD [rsp+8*2]
	jmp LB_131
LB_131
; #43 { 8'(= r ) 9'(= a13◂ [ ] ) } ⊢ 2'(= a13◂ [ ] )
	sub rsp,16
	mov QWORD [rsp+8*0],r13
	mov QWORD [rsp+8*1],r14
; .mov_ptn2 { 8'(= r ) 9'(= a13◂ [ ] ) } ⊢ { 0'(= r ) 1'(= a13◂ [ ] ) }
; .mov_ptn 9'(= a13◂ [ ] ) ⊢ 1'(= a13◂ [ ] )
	mov rax,QWORD [rsp-8+8*3]
	mov r14,rax
; .mov_ptn 8'(= r ) ⊢ 0'(= r )
	mov rax,QWORD [rsp-8+8*4]
	mov r13,rax
	call ETR_43
	mov r14,QWORD [rsp-8+8*2]
	mov r8,r13
	mov r13,QWORD [rsp-8+8*1]
	add rsp,32
; #24 2'(= a13◂ [ ] ) ⊢ 0(<2)◂2'(= a13◂ [ ] )
; ∎ 0(<2)◂2'(= a13◂ [ ] )
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂2'(= a13◂ [ ] ) ⊢ 2'(= a3◂ [ a13◂ [ ]] )
	mov r13,r8
; .mov_ptn 0(<2)◂0'(= a13◂ [ ] ) ⊢ 2'(= a3◂ [ a13◂ [ ]] )
	mov rax,r13
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	jmp LB_132
LB_132:
	cmp BYTE [r8+6],0
	jnz LB_116
	POP_GRM_SCC
	ret
LB_116:
	RB_GRM
	lea rax,[r14+1]
	cmp rax,r9
	jg LB_136
	jmp LB_137
LB_136:
	mov r8,unt_1
	jmp LB_134
LB_137:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],34
	jnz LB_138
	jmp LB_139
LB_138:
	mov r8,unt_1
	jmp LB_134
LB_139:
	add r14,1
	jmp LB_135
LB_134:
	add rsp,0
	jmp LB_133
LB_135:
	mov QWORD [rsp+8*0],r14
	mov r13,QWORD [rsp+16+8*0]
	mov r14,QWORD [rsp+8*0]
	jmp LB_140
LB_140
; #35 { } ⊢ 2(<4)◂{ }
; #24 2(<4)◂{ } ⊢ 0(<2)◂2(<4)◂{ }
; ∎ 0(<2)◂2(<4)◂{ }
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂2(<4)◂{ } ⊢ 2'(= a3◂ [ a13◂ [ ]] )
; .mov_ptn 0(<2)◂2(<4)◂{ } ⊢ 2'(= a3◂ [ a13◂ [ ]] )
	mov rax,unt 
	mov rax,unt_2
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	jmp LB_141
LB_141:
	cmp BYTE [r8+6],0
	jnz LB_133
	POP_GRM_SCC
	ret
LB_133:
	RB_GRM
	cmp r14,r9
	jge LB_145
	jmp LB_146
LB_145:
	mov r8,unt_1 
	jmp LB_143
LB_146:
	movzx rdi,BYTE [r13+8+r14]
	push rdi 
	add r14,1 
	jmp LB_144
LB_143:
	add rsp,0
	jmp LB_142
LB_144:
	call GRM_71
	cmp BYTE [r8+6],0
	jnz LB_149
	jmp LB_150
LB_149:
	jmp LB_147
LB_150:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a13◂ [ ] ) ⊢ 9'(= a13◂ [ ] )
; .mov_ptn 2'(= a13◂ [ ] ) ⊢ 9'(= a13◂ [ ] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_148
LB_147:
	add rsp,8
	jmp LB_142
LB_148:
	mov QWORD [rsp+8*2],r14
	mov r13,QWORD [rsp+16+8*2]
	mov r14,QWORD [rsp+8*2]
	jmp LB_151
LB_151
; #43 { 8'(= r ) 9'(= a13◂ [ ] ) } ⊢ 2'(= a13◂ [ ] )
	sub rsp,16
	mov QWORD [rsp+8*0],r13
	mov QWORD [rsp+8*1],r14
; .mov_ptn2 { 8'(= r ) 9'(= a13◂ [ ] ) } ⊢ { 0'(= r ) 1'(= a13◂ [ ] ) }
; .mov_ptn 9'(= a13◂ [ ] ) ⊢ 1'(= a13◂ [ ] )
	mov rax,QWORD [rsp-8+8*3]
	mov r14,rax
; .mov_ptn 8'(= r ) ⊢ 0'(= r )
	mov rax,QWORD [rsp-8+8*4]
	mov r13,rax
	call ETR_43
	mov r14,QWORD [rsp-8+8*2]
	mov r8,r13
	mov r13,QWORD [rsp-8+8*1]
	add rsp,32
; #24 2'(= a13◂ [ ] ) ⊢ 0(<2)◂2'(= a13◂ [ ] )
; ∎ 0(<2)◂2'(= a13◂ [ ] )
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂2'(= a13◂ [ ] ) ⊢ 2'(= a3◂ [ a13◂ [ ]] )
	mov r13,r8
; .mov_ptn 0(<2)◂0'(= a13◂ [ ] ) ⊢ 2'(= a3◂ [ a13◂ [ ]] )
	mov rax,r13
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	jmp LB_152
LB_152:
	cmp BYTE [r8+6],0
	jnz LB_142
	POP_GRM_SCC
	ret
LB_142:
	POP_GRM_FAIL 
	ret
ETR_72:
	mov r9,0x0000_ffff_ffff_ffff
	and r9,[r13]
	call GRM_72
	ret
GRM_72:
	PUSH_GRM
	lea rax,[r14+1]
	cmp rax,r9
	jg LB_156
	jmp LB_157
LB_156:
	mov r8,unt_1
	jmp LB_154
LB_157:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],92
	jnz LB_158
	jmp LB_159
LB_158:
	mov r8,unt_1
	jmp LB_154
LB_159:
	add r14,1
	jmp LB_155
LB_154:
	add rsp,0
	jmp LB_153
LB_155:
	mov QWORD [rsp+8*0],r14
	mov r13,QWORD [rsp+16+8*0]
	mov r14,QWORD [rsp+8*0]
	jmp LB_160
LB_160
; $ %[ 92r ] ⊢ %[ 92r ]
; #24 %[ 92r ] ⊢ 0(<2)◂%[ 92r ]
; ∎ 0(<2)◂%[ 92r ]
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂%[ 92r ] ⊢ 2'(= a3◂ [ r] )
; .mov_ptn 0(<2)◂%[ 92r ] ⊢ 2'(= a3◂ [ r] )
	mov rax,92
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	jmp LB_161
LB_161:
	cmp BYTE [r8+6],0
	jnz LB_153
	POP_GRM_SCC
	ret
LB_153:
	RB_GRM
	lea rax,[r14+1]
	cmp rax,r9
	jg LB_165
	jmp LB_166
LB_165:
	mov r8,unt_1
	jmp LB_163
LB_166:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],34
	jnz LB_167
	jmp LB_168
LB_167:
	mov r8,unt_1
	jmp LB_163
LB_168:
	add r14,1
	jmp LB_164
LB_163:
	add rsp,0
	jmp LB_162
LB_164:
	mov QWORD [rsp+8*0],r14
	mov r13,QWORD [rsp+16+8*0]
	mov r14,QWORD [rsp+8*0]
	jmp LB_169
LB_169
; $ %[ 34r ] ⊢ %[ 34r ]
; #24 %[ 34r ] ⊢ 0(<2)◂%[ 34r ]
; ∎ 0(<2)◂%[ 34r ]
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂%[ 34r ] ⊢ 2'(= a3◂ [ r] )
; .mov_ptn 0(<2)◂%[ 34r ] ⊢ 2'(= a3◂ [ r] )
	mov rax,34
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	jmp LB_170
LB_170:
	cmp BYTE [r8+6],0
	jnz LB_162
	POP_GRM_SCC
	ret
LB_162:
	RB_GRM
	lea rax,[r14+1]
	cmp rax,r9
	jg LB_174
	jmp LB_175
LB_174:
	mov r8,unt_1
	jmp LB_172
LB_175:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],110
	jnz LB_176
	jmp LB_177
LB_176:
	mov r8,unt_1
	jmp LB_172
LB_177:
	add r14,1
	jmp LB_173
LB_172:
	add rsp,0
	jmp LB_171
LB_173:
	mov QWORD [rsp+8*0],r14
	mov r13,QWORD [rsp+16+8*0]
	mov r14,QWORD [rsp+8*0]
	jmp LB_178
LB_178
; $ %[ 10r ] ⊢ %[ 10r ]
; #24 %[ 10r ] ⊢ 0(<2)◂%[ 10r ]
; ∎ 0(<2)◂%[ 10r ]
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂%[ 10r ] ⊢ 2'(= a3◂ [ r] )
; .mov_ptn 0(<2)◂%[ 10r ] ⊢ 2'(= a3◂ [ r] )
	mov rax,10
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	jmp LB_179
LB_179:
	cmp BYTE [r8+6],0
	jnz LB_171
	POP_GRM_SCC
	ret
LB_171:
	RB_GRM
	lea rax,[r14+1]
	cmp rax,r9
	jg LB_183
	jmp LB_184
LB_183:
	mov r8,unt_1
	jmp LB_181
LB_184:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],116
	jnz LB_185
	jmp LB_186
LB_185:
	mov r8,unt_1
	jmp LB_181
LB_186:
	add r14,1
	jmp LB_182
LB_181:
	add rsp,0
	jmp LB_180
LB_182:
	mov QWORD [rsp+8*0],r14
	mov r13,QWORD [rsp+16+8*0]
	mov r14,QWORD [rsp+8*0]
	jmp LB_187
LB_187
; $ %[ 9r ] ⊢ %[ 9r ]
; #24 %[ 9r ] ⊢ 0(<2)◂%[ 9r ]
; ∎ 0(<2)◂%[ 9r ]
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂%[ 9r ] ⊢ 2'(= a3◂ [ r] )
; .mov_ptn 0(<2)◂%[ 9r ] ⊢ 2'(= a3◂ [ r] )
	mov rax,9
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	jmp LB_188
LB_188:
	cmp BYTE [r8+6],0
	jnz LB_180
	POP_GRM_SCC
	ret
LB_180:
	RB_GRM
	lea rax,[r14+1]
	cmp rax,r9
	jg LB_192
	jmp LB_193
LB_192:
	mov r8,unt_1
	jmp LB_190
LB_193:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],48
	jnz LB_194
	jmp LB_195
LB_194:
	mov r8,unt_1
	jmp LB_190
LB_195:
	add r14,1
	jmp LB_191
LB_190:
	add rsp,0
	jmp LB_189
LB_191:
	mov QWORD [rsp+8*0],r14
	mov r13,QWORD [rsp+16+8*0]
	mov r14,QWORD [rsp+8*0]
	jmp LB_196
LB_196
; $ %[ 0r ] ⊢ %[ 0r ]
; #24 %[ 0r ] ⊢ 0(<2)◂%[ 0r ]
; ∎ 0(<2)◂%[ 0r ]
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂%[ 0r ] ⊢ 2'(= a3◂ [ r] )
; .mov_ptn 0(<2)◂%[ 0r ] ⊢ 2'(= a3◂ [ r] )
	mov rax,0
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	jmp LB_197
LB_197:
	cmp BYTE [r8+6],0
	jnz LB_189
	POP_GRM_SCC
	ret
LB_189:
	POP_GRM_FAIL 
	ret
ETR_73:
	mov r9,0x0000_ffff_ffff_ffff
	and r9,[r13]
	call GRM_73
	ret
GRM_73:
	PUSH_GRM
	cmp r14,r9
	jge LB_201
	jmp LB_202
LB_201:
	mov r8,unt_1 
	jmp LB_199
LB_202:
	movzx rdi,BYTE [r13+8+r14]
	push rdi 
	add r14,1 
	jmp LB_200
LB_199:
	add rsp,0
	jmp LB_198
LB_200:
	mov QWORD [rsp+8*1],r14
	mov r13,QWORD [rsp+16+8*1]
	mov r14,QWORD [rsp+8*1]
	jmp LB_203
LB_203
	mov rdi,48
	cmp QWORD [rsp-8+8*1],rdi
;;48 =< .. 
	jl LB_205
	mov rdi,57
	cmp QWORD [rsp-8+8*1],rdi
;; .. =< 57
	jg LB_205
; #24 8'(= r ) ⊢ 0(<2)◂8'(= r )
; ∎ 0(<2)◂8'(= r )
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂8'(= r ) ⊢ 2'(= a3◂ [ r] )
; .mov_ptn 0(<2)◂8'(= r ) ⊢ 2'(= a3◂ [ r] )
	mov rax,QWORD [rsp-8+8*1]
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,8
	jmp LB_204
LB_205:
; #25 { } ⊢ 1(<2)◂{ }
; ∎ 1(<2)◂{ }
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 8'(= r )
	mov rdi,QWORD [rsp-8+8*1]
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 1(<2)◂{ } ⊢ 2'(= a3◂ [ r] )
; .mov_ptn 1(<2)◂{ } ⊢ 2'(= a3◂ [ r] )
	mov rax,unt 
	mov rax,unt_1
	mov r8,rax
	add rsp,8
	jmp LB_204
LB_204:
	cmp BYTE [r8+6],0
	jnz LB_198
	POP_GRM_SCC
	ret
LB_198:
	POP_GRM_FAIL 
	ret
ETR_74:
	mov r9,0x0000_ffff_ffff_ffff
	and r9,[r13]
	call GRM_74
	ret
GRM_74:
	PUSH_GRM
	cmp r14,r9
	jge LB_209
	jmp LB_210
LB_209:
	mov r8,unt_1 
	jmp LB_207
LB_210:
	movzx rdi,BYTE [r13+8+r14]
	push rdi 
	add r14,1 
	jmp LB_208
LB_207:
	add rsp,0
	jmp LB_206
LB_208:
	mov QWORD [rsp+8*1],r14
	mov r13,QWORD [rsp+16+8*1]
	mov r14,QWORD [rsp+8*1]
	jmp LB_211
LB_211
	mov rdi,97
	cmp QWORD [rsp-8+8*1],rdi
;;97 =< .. 
	jl LB_213
	mov rdi,122
	cmp QWORD [rsp-8+8*1],rdi
;; .. =< 122
	jg LB_213
; #24 8'(= r ) ⊢ 0(<2)◂8'(= r )
; ∎ 0(<2)◂8'(= r )
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂8'(= r ) ⊢ 2'(= a3◂ [ r] )
; .mov_ptn 0(<2)◂8'(= r ) ⊢ 2'(= a3◂ [ r] )
	mov rax,QWORD [rsp-8+8*1]
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,8
	jmp LB_212
LB_213:
; #25 { } ⊢ 1(<2)◂{ }
; ∎ 1(<2)◂{ }
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 8'(= r )
	mov rdi,QWORD [rsp-8+8*1]
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 1(<2)◂{ } ⊢ 2'(= a3◂ [ r] )
; .mov_ptn 1(<2)◂{ } ⊢ 2'(= a3◂ [ r] )
	mov rax,unt 
	mov rax,unt_1
	mov r8,rax
	add rsp,8
	jmp LB_212
LB_212:
	cmp BYTE [r8+6],0
	jnz LB_206
	POP_GRM_SCC
	ret
LB_206:
	POP_GRM_FAIL 
	ret
ETR_75:
	mov r9,0x0000_ffff_ffff_ffff
	and r9,[r13]
	call GRM_75
	ret
GRM_75:
	PUSH_GRM
	cmp r14,r9
	jge LB_217
	jmp LB_218
LB_217:
	mov r8,unt_1 
	jmp LB_215
LB_218:
	movzx rdi,BYTE [r13+8+r14]
	push rdi 
	add r14,1 
	jmp LB_216
LB_215:
	add rsp,0
	jmp LB_214
LB_216:
	mov QWORD [rsp+8*1],r14
	mov r13,QWORD [rsp+16+8*1]
	mov r14,QWORD [rsp+8*1]
	jmp LB_219
LB_219
	mov rdi,65
	cmp QWORD [rsp-8+8*1],rdi
;;65 =< .. 
	jl LB_221
	mov rdi,90
	cmp QWORD [rsp-8+8*1],rdi
;; .. =< 90
	jg LB_221
; #24 8'(= r ) ⊢ 0(<2)◂8'(= r )
; ∎ 0(<2)◂8'(= r )
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂8'(= r ) ⊢ 2'(= a3◂ [ r] )
; .mov_ptn 0(<2)◂8'(= r ) ⊢ 2'(= a3◂ [ r] )
	mov rax,QWORD [rsp-8+8*1]
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,8
	jmp LB_220
LB_221:
; #25 { } ⊢ 1(<2)◂{ }
; ∎ 1(<2)◂{ }
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 8'(= r )
	mov rdi,QWORD [rsp-8+8*1]
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 1(<2)◂{ } ⊢ 2'(= a3◂ [ r] )
; .mov_ptn 1(<2)◂{ } ⊢ 2'(= a3◂ [ r] )
	mov rax,unt 
	mov rax,unt_1
	mov r8,rax
	add rsp,8
	jmp LB_220
LB_220:
	cmp BYTE [r8+6],0
	jnz LB_214
	POP_GRM_SCC
	ret
LB_214:
	POP_GRM_FAIL 
	ret
ETR_76:
	mov r9,0x0000_ffff_ffff_ffff
	and r9,[r13]
	call GRM_76
	ret
GRM_76:
	PUSH_GRM
	call GRM_75
	cmp BYTE [r8+6],0
	jnz LB_225
	jmp LB_226
LB_225:
	jmp LB_223
LB_226:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= r ) ⊢ 8'(= r )
; .mov_ptn 2'(= r ) ⊢ 8'(= r )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_224
LB_223:
	add rsp,0
	jmp LB_222
LB_224:
	mov QWORD [rsp+8*1],r14
	mov r13,QWORD [rsp+16+8*1]
	mov r14,QWORD [rsp+8*1]
	jmp LB_227
LB_227
; #24 8'(= r ) ⊢ 0(<2)◂8'(= r )
; ∎ 0(<2)◂8'(= r )
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂8'(= r ) ⊢ 2'(= a3◂ [ r] )
; .mov_ptn 0(<2)◂8'(= r ) ⊢ 2'(= a3◂ [ r] )
	mov rax,QWORD [rsp-8+8*1]
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,8
	jmp LB_228
LB_228:
	cmp BYTE [r8+6],0
	jnz LB_222
	POP_GRM_SCC
	ret
LB_222:
	RB_GRM
	call GRM_74
	cmp BYTE [r8+6],0
	jnz LB_232
	jmp LB_233
LB_232:
	jmp LB_230
LB_233:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= r ) ⊢ 8'(= r )
; .mov_ptn 2'(= r ) ⊢ 8'(= r )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_231
LB_230:
	add rsp,0
	jmp LB_229
LB_231:
	mov QWORD [rsp+8*1],r14
	mov r13,QWORD [rsp+16+8*1]
	mov r14,QWORD [rsp+8*1]
	jmp LB_234
LB_234
; #24 8'(= r ) ⊢ 0(<2)◂8'(= r )
; ∎ 0(<2)◂8'(= r )
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂8'(= r ) ⊢ 2'(= a3◂ [ r] )
; .mov_ptn 0(<2)◂8'(= r ) ⊢ 2'(= a3◂ [ r] )
	mov rax,QWORD [rsp-8+8*1]
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,8
	jmp LB_235
LB_235:
	cmp BYTE [r8+6],0
	jnz LB_229
	POP_GRM_SCC
	ret
LB_229:
	POP_GRM_FAIL 
	ret
ETR_77:
	mov r9,0x0000_ffff_ffff_ffff
	and r9,[r13]
	call GRM_77
	ret
GRM_77:
	PUSH_GRM
	call GRM_76
	cmp BYTE [r8+6],0
	jnz LB_239
	jmp LB_240
LB_239:
	jmp LB_237
LB_240:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= r ) ⊢ 8'(= r )
; .mov_ptn 2'(= r ) ⊢ 8'(= r )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_238
LB_237:
	add rsp,0
	jmp LB_236
LB_238:
	call GRM_78
	cmp BYTE [r8+6],0
	jnz LB_243
	jmp LB_244
LB_243:
	jmp LB_241
LB_244:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a13◂ [ ] ) ⊢ 9'(= a13◂ [ ] )
; .mov_ptn 2'(= a13◂ [ ] ) ⊢ 9'(= a13◂ [ ] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_242
LB_241:
	add rsp,8
	jmp LB_236
LB_242:
	mov QWORD [rsp+8*2],r14
	mov r13,QWORD [rsp+16+8*2]
	mov r14,QWORD [rsp+8*2]
	jmp LB_245
LB_245
; #43 { 8'(= r ) 9'(= a13◂ [ ] ) } ⊢ 2'(= a13◂ [ ] )
	sub rsp,16
	mov QWORD [rsp+8*0],r13
	mov QWORD [rsp+8*1],r14
; .mov_ptn2 { 8'(= r ) 9'(= a13◂ [ ] ) } ⊢ { 0'(= r ) 1'(= a13◂ [ ] ) }
; .mov_ptn 9'(= a13◂ [ ] ) ⊢ 1'(= a13◂ [ ] )
	mov rax,QWORD [rsp-8+8*3]
	mov r14,rax
; .mov_ptn 8'(= r ) ⊢ 0'(= r )
	mov rax,QWORD [rsp-8+8*4]
	mov r13,rax
	call ETR_43
	mov r14,QWORD [rsp-8+8*2]
	mov r8,r13
	mov r13,QWORD [rsp-8+8*1]
	add rsp,32
; #46 2'(= a13◂ [ ] ) ⊢ { 3'(= a13◂ [ ] ) 2'(= {| l |} ) }
	sub rsp,16
	mov QWORD [rsp+8*0],r13
	mov QWORD [rsp+8*1],r14
; .mov_ptn2 2'(= a13◂ [ ] ) ⊢ 0'(= a13◂ [ ] )
; .mov_ptn 2'(= a13◂ [ ] ) ⊢ 0'(= a13◂ [ ] )
	mov rax,r8
	mov r13,rax
	call ETR_46
	mov r8,r14
	mov r14,QWORD [rsp-8+8*2]
	mov r9,r13
	mov r13,QWORD [rsp-8+8*1]
	add rsp,16
; #24 2'(= {| l |} ) ⊢ 0(<2)◂2'(= {| l |} )
; ∎ 0(<2)◂2'(= {| l |} )
; .dlt.ptn 3'(= a13◂ [ ] )
	mov rdi,r9
	C_PUSH_REGS
	mov r8,rdi
	call LB_84
	C_POP_REGS
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂2'(= {| l |} ) ⊢ 2'(= a3◂ [ {| l |}] )
	mov r13,r8
; .mov_ptn 0(<2)◂0'(= {| l |} ) ⊢ 2'(= a3◂ [ {| l |}] )
	mov rax,r13
	mov BYTE [rax+6],0
	mov r8,rax
	jmp LB_246
LB_246:
	cmp BYTE [r8+6],0
	jnz LB_236
	POP_GRM_SCC
	ret
LB_236:
	POP_GRM_FAIL 
	ret
ETR_78:
	mov r9,0x0000_ffff_ffff_ffff
	and r9,[r13]
	call GRM_78
	ret
GRM_78:
	PUSH_GRM
	call GRM_79
	cmp BYTE [r8+6],0
	jnz LB_250
	jmp LB_251
LB_250:
	jmp LB_248
LB_251:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= r ) ⊢ 8'(= r )
; .mov_ptn 2'(= r ) ⊢ 8'(= r )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_249
LB_248:
	add rsp,0
	jmp LB_247
LB_249:
	call GRM_78
	cmp BYTE [r8+6],0
	jnz LB_254
	jmp LB_255
LB_254:
	jmp LB_252
LB_255:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a13◂ [ ] ) ⊢ 9'(= a13◂ [ ] )
; .mov_ptn 2'(= a13◂ [ ] ) ⊢ 9'(= a13◂ [ ] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_253
LB_252:
	add rsp,8
	jmp LB_247
LB_253:
	mov QWORD [rsp+8*2],r14
	mov r13,QWORD [rsp+16+8*2]
	mov r14,QWORD [rsp+8*2]
	jmp LB_256
LB_256
; #43 { 8'(= r ) 9'(= a13◂ [ ] ) } ⊢ 2'(= a13◂ [ ] )
	sub rsp,16
	mov QWORD [rsp+8*0],r13
	mov QWORD [rsp+8*1],r14
; .mov_ptn2 { 8'(= r ) 9'(= a13◂ [ ] ) } ⊢ { 0'(= r ) 1'(= a13◂ [ ] ) }
; .mov_ptn 9'(= a13◂ [ ] ) ⊢ 1'(= a13◂ [ ] )
	mov rax,QWORD [rsp-8+8*3]
	mov r14,rax
; .mov_ptn 8'(= r ) ⊢ 0'(= r )
	mov rax,QWORD [rsp-8+8*4]
	mov r13,rax
	call ETR_43
	mov r14,QWORD [rsp-8+8*2]
	mov r8,r13
	mov r13,QWORD [rsp-8+8*1]
	add rsp,32
; #24 2'(= a13◂ [ ] ) ⊢ 0(<2)◂2'(= a13◂ [ ] )
; ∎ 0(<2)◂2'(= a13◂ [ ] )
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂2'(= a13◂ [ ] ) ⊢ 2'(= a3◂ [ a13◂ [ ]] )
	mov r13,r8
; .mov_ptn 0(<2)◂0'(= a13◂ [ ] ) ⊢ 2'(= a3◂ [ a13◂ [ ]] )
	mov rax,r13
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	jmp LB_257
LB_257:
	cmp BYTE [r8+6],0
	jnz LB_247
	POP_GRM_SCC
	ret
LB_247:
	RB_GRM
	mov QWORD [rsp+8*0],r14
	mov r13,QWORD [rsp+16+8*0]
	mov r14,QWORD [rsp+8*0]
	jmp LB_259
LB_259
; #35 { } ⊢ 2(<4)◂{ }
; #24 2(<4)◂{ } ⊢ 0(<2)◂2(<4)◂{ }
; ∎ 0(<2)◂2(<4)◂{ }
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂2(<4)◂{ } ⊢ 2'(= a3◂ [ a13◂ [ ]] )
; .mov_ptn 0(<2)◂2(<4)◂{ } ⊢ 2'(= a3◂ [ a13◂ [ ]] )
	mov rax,unt 
	mov rax,unt_2
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	jmp LB_260
LB_260:
	cmp BYTE [r8+6],0
	jnz LB_258
	POP_GRM_SCC
	ret
LB_258:
	POP_GRM_FAIL 
	ret
ETR_79:
	mov r9,0x0000_ffff_ffff_ffff
	and r9,[r13]
	call GRM_79
	ret
GRM_79:
	PUSH_GRM
	call GRM_76
	cmp BYTE [r8+6],0
	jnz LB_264
	jmp LB_265
LB_264:
	jmp LB_262
LB_265:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= r ) ⊢ 8'(= r )
; .mov_ptn 2'(= r ) ⊢ 8'(= r )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_263
LB_262:
	add rsp,0
	jmp LB_261
LB_263:
	mov QWORD [rsp+8*1],r14
	mov r13,QWORD [rsp+16+8*1]
	mov r14,QWORD [rsp+8*1]
	jmp LB_266
LB_266
; #24 8'(= r ) ⊢ 0(<2)◂8'(= r )
; ∎ 0(<2)◂8'(= r )
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂8'(= r ) ⊢ 2'(= a3◂ [ r] )
; .mov_ptn 0(<2)◂8'(= r ) ⊢ 2'(= a3◂ [ r] )
	mov rax,QWORD [rsp-8+8*1]
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,8
	jmp LB_267
LB_267:
	cmp BYTE [r8+6],0
	jnz LB_261
	POP_GRM_SCC
	ret
LB_261:
	RB_GRM
	call GRM_73
	cmp BYTE [r8+6],0
	jnz LB_271
	jmp LB_272
LB_271:
	jmp LB_269
LB_272:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= r ) ⊢ 8'(= r )
; .mov_ptn 2'(= r ) ⊢ 8'(= r )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_270
LB_269:
	add rsp,0
	jmp LB_268
LB_270:
	mov QWORD [rsp+8*1],r14
	mov r13,QWORD [rsp+16+8*1]
	mov r14,QWORD [rsp+8*1]
	jmp LB_273
LB_273
; #24 8'(= r ) ⊢ 0(<2)◂8'(= r )
; ∎ 0(<2)◂8'(= r )
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂8'(= r ) ⊢ 2'(= a3◂ [ r] )
; .mov_ptn 0(<2)◂8'(= r ) ⊢ 2'(= a3◂ [ r] )
	mov rax,QWORD [rsp-8+8*1]
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,8
	jmp LB_274
LB_274:
	cmp BYTE [r8+6],0
	jnz LB_268
	POP_GRM_SCC
	ret
LB_268:
	RB_GRM
	lea rax,[r14+1]
	cmp rax,r9
	jg LB_278
	jmp LB_279
LB_278:
	mov r8,unt_1
	jmp LB_276
LB_279:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],95
	jnz LB_280
	jmp LB_281
LB_280:
	mov r8,unt_1
	jmp LB_276
LB_281:
	add r14,1
	jmp LB_277
LB_276:
	add rsp,0
	jmp LB_275
LB_277:
	mov QWORD [rsp+8*0],r14
	mov r13,QWORD [rsp+16+8*0]
	mov r14,QWORD [rsp+8*0]
	jmp LB_282
LB_282
; $ %[ 95r ] ⊢ %[ 95r ]
; #24 %[ 95r ] ⊢ 0(<2)◂%[ 95r ]
; ∎ 0(<2)◂%[ 95r ]
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂%[ 95r ] ⊢ 2'(= a3◂ [ r] )
; .mov_ptn 0(<2)◂%[ 95r ] ⊢ 2'(= a3◂ [ r] )
	mov rax,95
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	jmp LB_283
LB_283:
	cmp BYTE [r8+6],0
	jnz LB_275
	POP_GRM_SCC
	ret
LB_275:
	POP_GRM_FAIL 
	ret
ETR_80:
	mov r9,0x0000_ffff_ffff_ffff
	and r9,[r13]
	call GRM_80
	ret
GRM_80:
	PUSH_GRM
	lea rax,[r14+1]
	cmp rax,r9
	jg LB_287
	jmp LB_288
LB_287:
	mov r8,unt_1
	jmp LB_285
LB_288:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],95
	jnz LB_289
	jmp LB_290
LB_289:
	mov r8,unt_1
	jmp LB_285
LB_290:
	add r14,1
	jmp LB_286
LB_285:
	add rsp,0
	jmp LB_284
LB_286:
	call GRM_78
	cmp BYTE [r8+6],0
	jnz LB_293
	jmp LB_294
LB_293:
	jmp LB_291
LB_294:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a13◂ [ ] ) ⊢ 8'(= a13◂ [ ] )
; .mov_ptn 2'(= a13◂ [ ] ) ⊢ 8'(= a13◂ [ ] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_292
LB_291:
	add rsp,0
	jmp LB_284
LB_292:
	mov QWORD [rsp+8*1],r14
	mov r13,QWORD [rsp+16+8*1]
	mov r14,QWORD [rsp+8*1]
	jmp LB_295
LB_295
; #46 8'(= a13◂ [ ] ) ⊢ { 3'(= a13◂ [ ] ) 2'(= {| l |} ) }
	sub rsp,16
	mov QWORD [rsp+8*0],r13
	mov QWORD [rsp+8*1],r14
; .mov_ptn2 8'(= a13◂ [ ] ) ⊢ 0'(= a13◂ [ ] )
; .mov_ptn 8'(= a13◂ [ ] ) ⊢ 0'(= a13◂ [ ] )
	mov rax,QWORD [rsp-8+8*3]
	mov r13,rax
	call ETR_46
	mov r8,r14
	mov r14,QWORD [rsp-8+8*2]
	mov r9,r13
	mov r13,QWORD [rsp-8+8*1]
	add rsp,24
; » _^ .. ⊢ ..
; .. //
	mov rdi,0
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[r8]
	add rdi,rax 
	push rax
	add rdi,1
	push rdi 
	call mlc_s8
	pop rdi
	mov r10,rax
	lea rdi,[rax+7+rdi]
	std 
	mov QWORD [tmp],rcx 
	pop rcx
	lea rsi,[r8+7+rcx]
	rep movsb
	lea rsi,[LB_297+1-1]
	mov rcx,1
	rep movsb
	mov rcx,QWORD [tmp] 
; #24 4'(= {| l |} ) ⊢ 0(<2)◂4'(= {| l |} )
; ∎ 0(<2)◂4'(= {| l |} )
; .dlt.ptn 2'(= {| l |} )
	mov rdi,r8
	C_PUSH_REGS
	mov r8,rdi
	mov rdi,r8
	call free_s8
	C_POP_REGS
; .dlt.ptn 3'(= a13◂ [ ] )
	mov rdi,r9
	C_PUSH_REGS
	mov r8,rdi
	call LB_84
	C_POP_REGS
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂4'(= {| l |} ) ⊢ 2'(= a3◂ [ {| l |}] )
; .mov_ptn 0(<2)◂4'(= {| l |} ) ⊢ 2'(= a3◂ [ {| l |}] )
	mov rax,r10
	mov BYTE [rax+6],0
	mov r8,rax
	jmp LB_296
LB_296:
	cmp BYTE [r8+6],0
	jnz LB_284
	POP_GRM_SCC
	ret
LB_284:
	RB_GRM
	call GRM_77
	cmp BYTE [r8+6],0
	jnz LB_301
	jmp LB_302
LB_301:
	jmp LB_299
LB_302:
	sub rsp,8
; .mov_ptn2 2'(= {| l |} ) ⊢ 8'(= {| l |} )
; .mov_ptn 2'(= {| l |} ) ⊢ 8'(= {| l |} )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_300
LB_299:
	add rsp,0
	jmp LB_298
LB_300:
	mov QWORD [rsp+8*1],r14
	mov r13,QWORD [rsp+16+8*1]
	mov r14,QWORD [rsp+8*1]
	jmp LB_303
LB_303
; #24 8'(= {| l |} ) ⊢ 0(<2)◂8'(= {| l |} )
; ∎ 0(<2)◂8'(= {| l |} )
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂8'(= {| l |} ) ⊢ 2'(= a3◂ [ {| l |}] )
; .mov_ptn 0(<2)◂8'(= {| l |} ) ⊢ 2'(= a3◂ [ {| l |}] )
	mov rax,QWORD [rsp-8+8*1]
	mov BYTE [rax+6],0
	mov r8,rax
	add rsp,8
	jmp LB_304
LB_304:
	cmp BYTE [r8+6],0
	jnz LB_298
	POP_GRM_SCC
	ret
LB_298:
	POP_GRM_FAIL 
	ret
ETR_85: ;; pnt_name 0'(= a17◂ [ ] ) ⊢ 0'(= {| l |} ) : (_t17→_s8)
;; ?; 0'(= a17◂ [ ] ) ⊢ 0(<2)◂{ 1'(= {| l |} ) 2'(= a17◂ [ ] ) }
	mov rdi,r13
	cmp BYTE [rdi+6],0
	jnz LB_305
	mov r14, QWORD [r13+8]
	mov r8, QWORD [r13+16]
	mov QWORD [GBG_VCT+8*0],r13
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_RCD 2,rdi
; #85 2'(= a17◂ [ ] ) ⊢ 0'(= {| l |} )
	sub rsp,8
	mov QWORD [rsp+8*0],r14
; .mov_ptn2 2'(= a17◂ [ ] ) ⊢ 0'(= a17◂ [ ] )
; .mov_ptn 2'(= a17◂ [ ] ) ⊢ 0'(= a17◂ [ ] )
	mov rax,r8
	mov r13,rax
	call ETR_85
	mov r14,QWORD [rsp-8+8*1]
	add rsp,8
; » _^ .. ⊢ ..
; .. //
	mov rdi,0
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[r14]
	add rdi,rax 
	push rax
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[r13]
	add rdi,rax 
	push rax
	add rdi,1
	push rdi 
	call mlc_s8
	pop rdi
	mov r8,rax
	lea rdi,[rax+7+rdi]
	std 
	mov QWORD [tmp],rcx 
	pop rcx
	lea rsi,[r13+7+rcx]
	rep movsb
	lea rsi,[LB_306+1-1]
	mov rcx,1
	rep movsb
	pop rcx
	lea rsi,[r14+7+rcx]
	rep movsb
	mov rcx,QWORD [tmp] 
; ∎ 2'(= {| l |} )
; .dlt.ptn 0'(= {| l |} )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	mov rdi,r8
	call free_s8
	C_POP_REGS
; .dlt.ptn 1'(= {| l |} )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	mov rdi,r8
	call free_s8
	C_POP_REGS
; .mov_ptn2 2'(= {| l |} ) ⊢ 0'(= {| l |} )
; .mov_ptn 2'(= {| l |} ) ⊢ 0'(= {| l |} )
	mov rax,r8
	mov r13,rax
	ret
LB_305:
;; ?; 0'(= a17◂ [ ] ) ⊢ 1(<2)◂0'(= {| l |} )
; ∎ 0'(= {| l |} )
; .mov_ptn2 0'(= {| l |} ) ⊢ 0'(= {| l |} )
	ret
ETR_90: ;; pnt_cst_v 0'(= a18◂ [ ] ) ⊢ 0'(= {| l |} ) : (_t18→_s8)
;; ? 0'(= a18◂ [ ] ) ⊢ 0(<2)◂1'(= r )
	mov rdi,r13
	cmp BYTE [rdi+6],0
	jnz LB_307
	mov QWORD [GBG_VCT+8*0],rdi
	mov r14,QWORD [rdi+8]
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_LN rdi
; » _^ .. ⊢ ..
; .. //
	mov rdi,0
	sub rsp,128
	push rdi 
	lea rdi,[rsp+8]
	mov rdx,r14
	mov rsi,fmt_d
 xor rax,rax
	C_CALL_SF sprintf
	pop rdi
	add rdi,rax 
	push rax 
	add rdi,1
	push rdi 
	call mlc_s8
	pop rdi
	mov r13,rax
	lea rdi,[rax+7+rdi]
	std 
	mov QWORD [tmp],rcx 
	lea rsi,[LB_308+1-1]
	mov rcx,1
	rep movsb
	pop rcx
	lea rsi,[rsp+rcx-1]
	rep movsb
	add rsp,128
	mov rcx,QWORD [tmp] 
; ∎ 0'(= {| l |} )
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0'(= {| l |} ) ⊢ 0'(= {| l |} )
	ret
LB_307:
;; ?. 0'(= a18◂ [ ] ) ⊢ 1(<2)◂0'(= {| l |} )
; #69 0'(= {| l |} ) ⊢ { 0'(= {| l |} ) 1'(= {| l |} ) }
; .mov_ptn2 0'(= {| l |} ) ⊢ 0'(= {| l |} )
	call ETR_69
; » _^ .. ⊢ ..
; .. //
	mov rdi,0
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[r14]
	add rdi,rax 
	push rax
	add rdi,2
	push rdi 
	call mlc_s8
	pop rdi
	mov r8,rax
	lea rdi,[rax+7+rdi]
	std 
	mov QWORD [tmp],rcx 
	lea rsi,[LB_309+1-1]
	mov rcx,1
	rep movsb
	pop rcx
	lea rsi,[r14+7+rcx]
	rep movsb
	lea rsi,[LB_310+1-1]
	mov rcx,1
	rep movsb
	mov rcx,QWORD [tmp] 
; ∎ 2'(= {| l |} )
; .dlt.ptn 1'(= {| l |} )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	mov rdi,r8
	call free_s8
	C_POP_REGS
; .dlt.ptn 0'(= {| l |} )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	mov rdi,r8
	call free_s8
	C_POP_REGS
; .mov_ptn2 2'(= {| l |} ) ⊢ 0'(= {| l |} )
; .mov_ptn 2'(= {| l |} ) ⊢ 0'(= {| l |} )
	mov rax,r8
	mov r13,rax
	ret
ETR_91: ;; pnt_cst 0'(= a19◂ [ a17◂ [ ]] ) ⊢ 0'(= {| l |} ) : (_t19◂_t17→_s8)
;; ? 0'(= a19◂ [ a17◂ [ ]] ) ⊢ 0(<2)◂1'(= a18◂ [ ] )
	mov rdi,r13
	cmp BYTE [rdi+6],0
	jnz LB_311
	mov QWORD [GBG_VCT+8*0],rdi
	mov r14,QWORD [rdi+8]
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_LN rdi
; #90 1'(= a18◂ [ ] ) ⊢ 0'(= {| l |} )
; .mov_ptn2 1'(= a18◂ [ ] ) ⊢ 0'(= a18◂ [ ] )
; .mov_ptn 1'(= a18◂ [ ] ) ⊢ 0'(= a18◂ [ ] )
	mov rax,r14
	mov r13,rax
	call ETR_90
; ∎ 0'(= {| l |} )
; .mov_ptn2 0'(= {| l |} ) ⊢ 0'(= {| l |} )
	ret
LB_311:
;; ?. 0'(= a19◂ [ a17◂ [ ]] ) ⊢ 1(<2)◂1'(= a17◂ [ ] )
	mov QWORD [GBG_VCT+8*0],rdi
	mov r14,QWORD [rdi+8]
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_LN rdi
; #85 1'(= a17◂ [ ] ) ⊢ 0'(= {| l |} )
; .mov_ptn2 1'(= a17◂ [ ] ) ⊢ 0'(= a17◂ [ ] )
; .mov_ptn 1'(= a17◂ [ ] ) ⊢ 0'(= a17◂ [ ] )
	mov rax,r14
	mov r13,rax
	call ETR_85
; ∎ 0'(= {| l |} )
; .mov_ptn2 0'(= {| l |} ) ⊢ 0'(= {| l |} )
	ret
LB_324:
	movzx rax,BYTE [r8+6]
	jmp QWORD [LB_327+8*rax]
LB_327: dq LB_325,LB_326
LB_325:
	mov rdi,r8
	call free_s8
	jmp LB_328
LB_326:
	jmp LB_328
LB_328:
	ret
ETR_100: ;; pnt_src_ptn 0'(= a16◂ [ a20◂ [ a17◂ [ ]{| l |}]] ) ⊢ 0'(= {| l |} ) : (_t16◂_t20◂_s8◂_t17→_s8)
;; ?; 0'(= a16◂ [ a20◂ [ a17◂ [ ]{| l |}]] ) ⊢ 0(<2)◂1'(= a2◂ [ a16◂ [ a20◂ [ a17◂ [ ]{| l |}]]] )
	mov rdi,r13
	cmp BYTE [rdi+6],0
	jnz LB_312
	mov QWORD [GBG_VCT+8*0],rdi
	mov r14,QWORD [rdi+8]
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_LN rdi
; #101 1'(= a2◂ [ a16◂ [ a20◂ [ a17◂ [ ]{| l |}]]] ) ⊢ 0'(= {| l |} )
; .mov_ptn2 1'(= a2◂ [ a16◂ [ a20◂ [ a17◂ [ ]{| l |}]]] ) ⊢ 0'(= a2◂ [ a16◂ [ a20◂ [ a17◂ [ ]{| l |}]]] )
; .mov_ptn 1'(= a2◂ [ a16◂ [ a20◂ [ a17◂ [ ]{| l |}]]] ) ⊢ 0'(= a2◂ [ a16◂ [ a20◂ [ a17◂ [ ]{| l |}]]] )
	mov rax,r14
	mov r13,rax
	call ETR_101
; » _^ .. ⊢ ..
; .. //
	mov rdi,0
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[r13]
	add rdi,rax 
	push rax
	add rdi,3
	push rdi 
	call mlc_s8
	pop rdi
	mov r14,rax
	lea rdi,[rax+7+rdi]
	std 
	mov QWORD [tmp],rcx 
	lea rsi,[LB_313+1-1]
	mov rcx,1
	rep movsb
	pop rcx
	lea rsi,[r13+7+rcx]
	rep movsb
	lea rsi,[LB_314+2-1]
	mov rcx,2
	rep movsb
	mov rcx,QWORD [tmp] 
; ∎ 1'(= {| l |} )
; .dlt.ptn 0'(= {| l |} )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	mov rdi,r8
	call free_s8
	C_POP_REGS
; .mov_ptn2 1'(= {| l |} ) ⊢ 0'(= {| l |} )
; .mov_ptn 1'(= {| l |} ) ⊢ 0'(= {| l |} )
	mov rax,r14
	mov r13,rax
	ret
LB_312:
;; ?; 0'(= a16◂ [ a20◂ [ a17◂ [ ]{| l |}]] ) ⊢ 1(<2)◂1'(= a20◂ [ a17◂ [ ]{| l |}] )
	mov QWORD [GBG_VCT+8*0],rdi
	mov r14,QWORD [rdi+8]
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_LN rdi
;; ?; 1'(= a20◂ [ a17◂ [ ]{| l |}] ) ⊢ 0(<2)◂0'(= a19◂ [ a17◂ [ ]] )
	mov rdi,r14
	cmp BYTE [rdi+6],0
	jnz LB_315
	mov QWORD [GBG_VCT+8*0],rdi
	mov r13,QWORD [rdi+8]
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_LN rdi
; #91 0'(= a19◂ [ a17◂ [ ]] ) ⊢ 0'(= {| l |} )
; .mov_ptn2 0'(= a19◂ [ a17◂ [ ]] ) ⊢ 0'(= a19◂ [ a17◂ [ ]] )
	call ETR_91
; » _^ .. ⊢ ..
; .. //
	mov rdi,0
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[r13]
	add rdi,rax 
	push rax
	add rdi,6
	push rdi 
	call mlc_s8
	pop rdi
	mov r14,rax
	lea rdi,[rax+7+rdi]
	std 
	mov QWORD [tmp],rcx 
	lea rsi,[LB_316+3-1]
	mov rcx,3
	rep movsb
	pop rcx
	lea rsi,[r13+7+rcx]
	rep movsb
	lea rsi,[LB_317+3-1]
	mov rcx,3
	rep movsb
	mov rcx,QWORD [tmp] 
; ∎ 1'(= {| l |} )
; .dlt.ptn 0'(= {| l |} )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	mov rdi,r8
	call free_s8
	C_POP_REGS
; .mov_ptn2 1'(= {| l |} ) ⊢ 0'(= {| l |} )
; .mov_ptn 1'(= {| l |} ) ⊢ 0'(= {| l |} )
	mov rax,r14
	mov r13,rax
	ret
LB_315:
;; ?; 1'(= a20◂ [ a17◂ [ ]{| l |}] ) ⊢ 1(<2)◂1'(= {| l |} )
; ∎ 1'(= {| l |} )
; .mov_ptn2 1'(= {| l |} ) ⊢ 0'(= {| l |} )
; .mov_ptn 1'(= {| l |} ) ⊢ 0'(= {| l |} )
	mov rax,r14
	mov r13,rax
	ret
ETR_101: ;; pnt_src_ptn_lst 0'(= a2◂ [ a16◂ [ a20◂ [ a17◂ [ ]{| l |}]]] ) ⊢ 0'(= {| l |} ) : (_lst◂_t16◂_t20◂_s8◂_t17→_s8)
;; ?; 0'(= a2◂ [ a16◂ [ a20◂ [ a17◂ [ ]{| l |}]]] ) ⊢ 0(<2)◂{ 1'(= a16◂ [ a20◂ [ a17◂ [ ]{| l |}]] ) 2'(= a2◂ [ a16◂ [ a20◂ [ a17◂ [ ]{| l |}]]] ) }
	mov rdi,r13
	cmp BYTE [rdi+6],0
	jnz LB_318
	mov r14, QWORD [r13+8]
	mov r8, QWORD [r13+16]
	mov QWORD [GBG_VCT+8*0],r13
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_RCD 2,rdi
; #100 1'(= a16◂ [ a20◂ [ a17◂ [ ]{| l |}]] ) ⊢ 0'(= {| l |} )
	sub rsp,8
	mov QWORD [rsp+8*0],r8
; .mov_ptn2 1'(= a16◂ [ a20◂ [ a17◂ [ ]{| l |}]] ) ⊢ 0'(= a16◂ [ a20◂ [ a17◂ [ ]{| l |}]] )
; .mov_ptn 1'(= a16◂ [ a20◂ [ a17◂ [ ]{| l |}]] ) ⊢ 0'(= a16◂ [ a20◂ [ a17◂ [ ]{| l |}]] )
	mov rax,r14
	mov r13,rax
	call ETR_100
	mov r8,QWORD [rsp-8+8*1]
	add rsp,8
; #101 2'(= a2◂ [ a16◂ [ a20◂ [ a17◂ [ ]{| l |}]]] ) ⊢ 1'(= {| l |} )
	sub rsp,8
	mov QWORD [rsp+8*0],r13
; .mov_ptn2 2'(= a2◂ [ a16◂ [ a20◂ [ a17◂ [ ]{| l |}]]] ) ⊢ 0'(= a2◂ [ a16◂ [ a20◂ [ a17◂ [ ]{| l |}]]] )
; .mov_ptn 2'(= a2◂ [ a16◂ [ a20◂ [ a17◂ [ ]{| l |}]]] ) ⊢ 0'(= a2◂ [ a16◂ [ a20◂ [ a17◂ [ ]{| l |}]]] )
	mov rax,r8
	mov r13,rax
	call ETR_101
	mov r14,r13
	mov r13,QWORD [rsp-8+8*1]
	add rsp,8
; » _^ .. ⊢ ..
; .. //
	mov rdi,0
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[r13]
	add rdi,rax 
	push rax
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[r14]
	add rdi,rax 
	push rax
	add rdi,1
	push rdi 
	call mlc_s8
	pop rdi
	mov r8,rax
	lea rdi,[rax+7+rdi]
	std 
	mov QWORD [tmp],rcx 
	pop rcx
	lea rsi,[r14+7+rcx]
	rep movsb
	lea rsi,[LB_319+1-1]
	mov rcx,1
	rep movsb
	pop rcx
	lea rsi,[r13+7+rcx]
	rep movsb
	mov rcx,QWORD [tmp] 
; ∎ 2'(= {| l |} )
; .dlt.ptn 1'(= {| l |} )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	mov rdi,r8
	call free_s8
	C_POP_REGS
; .dlt.ptn 0'(= {| l |} )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	mov rdi,r8
	call free_s8
	C_POP_REGS
; .mov_ptn2 2'(= {| l |} ) ⊢ 0'(= {| l |} )
; .mov_ptn 2'(= {| l |} ) ⊢ 0'(= {| l |} )
	mov rax,r8
	mov r13,rax
	ret
LB_318:
;; ?; 0'(= a2◂ [ a16◂ [ a20◂ [ a17◂ [ ]{| l |}]]] ) ⊢ 1(<2)◂{ }
; $ %[ "" ] ⊢ %[ "" ]
; ∎ %[ "" ]
; .mov_ptn2 %[ "" ] ⊢ 0'(= {| l |} )
; .mov_ptn %[ "" ] ⊢ 0'(= {| l |} )
	mov rsi,1  
	mov rdi,16
	xor rax,rax 
	C_CALL_SF calloc
	mov QWORD [rax],0
	mov r13,rax
	ret
ETR_102: ;; pnt_dst_ptn 0'(= a16◂ [ a21◂ [ {| l |}]] ) ⊢ 0'(= {| l |} ) : (_t16◂_t21◂_s8→_s8)
;; ?; 0'(= a16◂ [ a21◂ [ {| l |}]] ) ⊢ 0(<2)◂1'(= a2◂ [ a16◂ [ a21◂ [ {| l |}]]] )
	mov rdi,r13
	cmp BYTE [rdi+6],0
	jnz LB_320
	mov QWORD [GBG_VCT+8*0],rdi
	mov r14,QWORD [rdi+8]
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_LN rdi
; #103 1'(= a2◂ [ a16◂ [ a21◂ [ {| l |}]]] ) ⊢ 0'(= {| l |} )
; .mov_ptn2 1'(= a2◂ [ a16◂ [ a21◂ [ {| l |}]]] ) ⊢ 0'(= a2◂ [ a16◂ [ a21◂ [ {| l |}]]] )
; .mov_ptn 1'(= a2◂ [ a16◂ [ a21◂ [ {| l |}]]] ) ⊢ 0'(= a2◂ [ a16◂ [ a21◂ [ {| l |}]]] )
	mov rax,r14
	mov r13,rax
	call ETR_103
; » _^ .. ⊢ ..
; .. //
	mov rdi,0
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[r13]
	add rdi,rax 
	push rax
	add rdi,3
	push rdi 
	call mlc_s8
	pop rdi
	mov r14,rax
	lea rdi,[rax+7+rdi]
	std 
	mov QWORD [tmp],rcx 
	lea rsi,[LB_321+1-1]
	mov rcx,1
	rep movsb
	pop rcx
	lea rsi,[r13+7+rcx]
	rep movsb
	lea rsi,[LB_322+2-1]
	mov rcx,2
	rep movsb
	mov rcx,QWORD [tmp] 
; ∎ 1'(= {| l |} )
; .dlt.ptn 0'(= {| l |} )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	mov rdi,r8
	call free_s8
	C_POP_REGS
; .mov_ptn2 1'(= {| l |} ) ⊢ 0'(= {| l |} )
; .mov_ptn 1'(= {| l |} ) ⊢ 0'(= {| l |} )
	mov rax,r14
	mov r13,rax
	ret
LB_320:
;; ?; 0'(= a16◂ [ a21◂ [ {| l |}]] ) ⊢ 1(<2)◂1'(= a21◂ [ {| l |}] )
	mov QWORD [GBG_VCT+8*0],rdi
	mov r14,QWORD [rdi+8]
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_LN rdi
;; ?; 1'(= a21◂ [ {| l |}] ) ⊢ 0(<2)◂0'(= a3◂ [ {| l |}] )
	mov rdi,r14
	cmp BYTE [rdi+6],0
	jnz LB_323
	mov QWORD [GBG_VCT+8*0],rdi
	mov r13,QWORD [rdi+8]
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_LN rdi
; $ %[ "_ " ] ⊢ %[ "_ " ]
; ∎ %[ "_ " ]
; .dlt.ptn 0'(= a3◂ [ {| l |}] )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	call LB_324
	C_POP_REGS
; .mov_ptn2 %[ "_ " ] ⊢ 0'(= {| l |} )
; .mov_ptn %[ "_ " ] ⊢ 0'(= {| l |} )
	mov rsi,1  
	mov rdi,16
	xor rax,rax 
	C_CALL_SF calloc
	mov QWORD [rax],2
	mov BYTE [rax+8+0],95
	mov BYTE [rax+8+1],32
	mov r13,rax
	ret
LB_323:
;; ?; 1'(= a21◂ [ {| l |}] ) ⊢ 1(<2)◂1'(= {| l |} )
; ∎ 1'(= {| l |} )
; .mov_ptn2 1'(= {| l |} ) ⊢ 0'(= {| l |} )
; .mov_ptn 1'(= {| l |} ) ⊢ 0'(= {| l |} )
	mov rax,r14
	mov r13,rax
	ret
ETR_103: ;; pnt_dst_ptn_lst 0'(= a2◂ [ a16◂ [ a21◂ [ {| l |}]]] ) ⊢ 0'(= {| l |} ) : (_lst◂_t16◂_t21◂_s8→_s8)
;; ?; 0'(= a2◂ [ a16◂ [ a21◂ [ {| l |}]]] ) ⊢ 0(<2)◂{ 1'(= a16◂ [ a21◂ [ {| l |}]] ) 2'(= a2◂ [ a16◂ [ a21◂ [ {| l |}]]] ) }
	mov rdi,r13
	cmp BYTE [rdi+6],0
	jnz LB_329
	mov r14, QWORD [r13+8]
	mov r8, QWORD [r13+16]
	mov QWORD [GBG_VCT+8*0],r13
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_RCD 2,rdi
; #102 1'(= a16◂ [ a21◂ [ {| l |}]] ) ⊢ 0'(= {| l |} )
	sub rsp,8
	mov QWORD [rsp+8*0],r8
; .mov_ptn2 1'(= a16◂ [ a21◂ [ {| l |}]] ) ⊢ 0'(= a16◂ [ a21◂ [ {| l |}]] )
; .mov_ptn 1'(= a16◂ [ a21◂ [ {| l |}]] ) ⊢ 0'(= a16◂ [ a21◂ [ {| l |}]] )
	mov rax,r14
	mov r13,rax
	call ETR_102
	mov r8,QWORD [rsp-8+8*1]
	add rsp,8
; #103 2'(= a2◂ [ a16◂ [ a21◂ [ {| l |}]]] ) ⊢ 1'(= {| l |} )
	sub rsp,8
	mov QWORD [rsp+8*0],r13
; .mov_ptn2 2'(= a2◂ [ a16◂ [ a21◂ [ {| l |}]]] ) ⊢ 0'(= a2◂ [ a16◂ [ a21◂ [ {| l |}]]] )
; .mov_ptn 2'(= a2◂ [ a16◂ [ a21◂ [ {| l |}]]] ) ⊢ 0'(= a2◂ [ a16◂ [ a21◂ [ {| l |}]]] )
	mov rax,r8
	mov r13,rax
	call ETR_103
	mov r14,r13
	mov r13,QWORD [rsp-8+8*1]
	add rsp,8
; » _^ .. ⊢ ..
; .. //
	mov rdi,0
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[r13]
	add rdi,rax 
	push rax
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[r14]
	add rdi,rax 
	push rax
	add rdi,1
	push rdi 
	call mlc_s8
	pop rdi
	mov r8,rax
	lea rdi,[rax+7+rdi]
	std 
	mov QWORD [tmp],rcx 
	pop rcx
	lea rsi,[r14+7+rcx]
	rep movsb
	lea rsi,[LB_330+1-1]
	mov rcx,1
	rep movsb
	pop rcx
	lea rsi,[r13+7+rcx]
	rep movsb
	mov rcx,QWORD [tmp] 
; ∎ 2'(= {| l |} )
; .dlt.ptn 1'(= {| l |} )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	mov rdi,r8
	call free_s8
	C_POP_REGS
; .dlt.ptn 0'(= {| l |} )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	mov rdi,r8
	call free_s8
	C_POP_REGS
; .mov_ptn2 2'(= {| l |} ) ⊢ 0'(= {| l |} )
; .mov_ptn 2'(= {| l |} ) ⊢ 0'(= {| l |} )
	mov rax,r8
	mov r13,rax
	ret
LB_329:
;; ?; 0'(= a2◂ [ a16◂ [ a21◂ [ {| l |}]]] ) ⊢ 1(<2)◂{ }
; $ %[ "" ] ⊢ %[ "" ]
; ∎ %[ "" ]
; .mov_ptn2 %[ "" ] ⊢ 0'(= {| l |} )
; .mov_ptn %[ "" ] ⊢ 0'(= {| l |} )
	mov rsi,1  
	mov rdi,16
	xor rax,rax 
	C_CALL_SF calloc
	mov QWORD [rax],0
	mov r13,rax
	ret
LB_332:
	movzx rax,BYTE [r8+6]
	jmp QWORD [LB_335+8*rax]
LB_335: dq LB_333,LB_334
LB_333:
	ALC_RCD 2,r9
	push r8
	push r9
	mov r8,QWORD [r8+8+8*0]
	call LB_337
	pop r9  
	pop r8 
	mov QWORD [r9+8+8*0],rax
	push r8
	push r9
	mov r8,QWORD [r8+8+8*1]
	call LB_332
	pop r9  
	pop r8 
	mov QWORD [r9+8+8*1],rax
	mov rax,r9 
	mov BYTE [rax+6],0
	jmp LB_336
LB_334:
	mov rax,unt
	mov BYTE [rax+6],1
	jmp LB_336
LB_336:
	ret
LB_337:
	movzx rax,BYTE [r8+6]
	jmp QWORD [LB_340+8*rax]
LB_340: dq LB_338,LB_339
LB_338:
	mov r8,QWORD [r8+8]
	call LB_332
	ALC_LN rsi 
	mov BYTE [rsi+6],0
	mov QWORD [rsi+8],rax
	mov rax,rsi
	jmp LB_341
LB_339:
	mov r8,QWORD [r8+8]
	call LB_342
	ALC_LN rsi 
	mov BYTE [rsi+6],1
	mov QWORD [rsi+8],rax
	mov rax,rsi
	jmp LB_341
LB_341:
	ret
LB_342:
	movzx rax,BYTE [r8+6]
	jmp QWORD [LB_347+8*rax]
LB_347: dq LB_343,LB_344,LB_345,LB_346
LB_343:
	ALC_RCD 2,r9
	push r8
	push r9
	mov r8,QWORD [r8+8+8*0]
	call LB_349
	pop r9  
	pop r8 
	mov QWORD [r9+8+8*0],rax
	push r8
	push r9
	mov r8,QWORD [r8+8+8*1]
	call LB_337
	pop r9  
	pop r8 
	mov QWORD [r9+8+8*1],rax
	mov rax,r9 
	mov BYTE [rax+6],0
	jmp LB_348
LB_344:
	mov r8,QWORD [r8+8]
	call LB_350
	ALC_LN rsi 
	mov BYTE [rsi+6],1
	mov QWORD [rsi+8],rax
	mov rax,rsi
	jmp LB_348
LB_345:
	mov r8,QWORD [r8+8]
	call LB_351
	ALC_LN rsi 
	mov BYTE [rsi+6],2
	mov QWORD [rsi+8],rax
	mov rax,rsi
	jmp LB_348
LB_346:
	C_PUSH_REGS
	mov rdi,r8  
	call rpc_s8  
	C_POP_REGS
	mov BYTE [rax+6],3
	jmp LB_348
LB_348:
	ret
LB_351:
	movzx rax,BYTE [r8+6]
	jmp QWORD [LB_354+8*rax]
LB_354: dq LB_352,LB_353
LB_352:
	C_PUSH_REGS
	mov rdi,r8  
	call rpc_s8  
	C_POP_REGS
	mov BYTE [rax+6],0
	jmp LB_355
LB_353:
	mov rax,unt
	mov BYTE [rax+6],1
	jmp LB_355
LB_355:
	ret
LB_350:
	movzx rax,BYTE [r8+6]
	jmp QWORD [LB_358+8*rax]
LB_358: dq LB_356,LB_357
LB_356:
	mov r8,QWORD [r8+8]
	call LB_360
	ALC_LN rsi 
	mov BYTE [rsi+6],0
	mov QWORD [rsi+8],rax
	mov rax,rsi
	jmp LB_359
LB_357:
	mov r8,QWORD [r8+8]
	call LB_349
	ALC_LN rsi 
	mov BYTE [rsi+6],1
	mov QWORD [rsi+8],rax
	mov rax,rsi
	jmp LB_359
LB_359:
	ret
LB_360:
	movzx rax,BYTE [r8+6]
	jmp QWORD [LB_363+8*rax]
LB_363: dq LB_361,LB_362
LB_361:
	mov r8,QWORD [r8+8]
	mov rax,r8
	ALC_LN rsi 
	mov BYTE [rsi+6],0
	mov QWORD [rsi+8],rax
	mov rax,rsi
	jmp LB_364
LB_362:
	C_PUSH_REGS
	mov rdi,r8  
	call rpc_s8  
	C_POP_REGS
	mov BYTE [rax+6],1
	jmp LB_364
LB_364:
	ret
LB_349:
	movzx rax,BYTE [r8+6]
	jmp QWORD [LB_367+8*rax]
LB_367: dq LB_365,LB_366
LB_365:
	ALC_RCD 2,r9
	push r8
	push r9
	mov r8,QWORD [r8+8+8*0]
	C_PUSH_REGS
	mov rdi,r8  
	call rpc_s8  
	C_POP_REGS
	pop r9  
	pop r8 
	mov QWORD [r9+8+8*0],rax
	push r8
	push r9
	mov r8,QWORD [r8+8+8*1]
	call LB_349
	pop r9  
	pop r8 
	mov QWORD [r9+8+8*1],rax
	mov rax,r9 
	mov BYTE [rax+6],0
	jmp LB_368
LB_366:
	C_PUSH_REGS
	mov rdi,r8  
	call rpc_s8  
	C_POP_REGS
	mov BYTE [rax+6],1
	jmp LB_368
LB_368:
	ret
LB_371:
	movzx rax,BYTE [r8+6]
	jmp QWORD [LB_374+8*rax]
LB_374: dq LB_372,LB_373
LB_372:
	push r8
	mov r8,QWORD [r8+8+8*0]
	call LB_376
	pop r8 
	push r8
	mov r8,QWORD [r8+8+8*1]
	call LB_371
	pop r8 
	FREE_RCD 2, r8
	jmp LB_375
LB_373:
	jmp LB_375
LB_375:
	ret
LB_376:
	movzx rax,BYTE [r8+6]
	jmp QWORD [LB_379+8*rax]
LB_379: dq LB_377,LB_378
LB_377:
	FREE_LN r8 
	mov r8,QWORD [r8+8]
	call LB_371
	jmp LB_380
LB_378:
	FREE_LN r8 
	mov r8,QWORD [r8+8]
	call LB_381
	jmp LB_380
LB_380:
	ret
LB_381:
	movzx rax,BYTE [r8+6]
	jmp QWORD [LB_386+8*rax]
LB_386: dq LB_382,LB_383,LB_384,LB_385
LB_382:
	push r8
	mov r8,QWORD [r8+8+8*0]
	call LB_388
	pop r8 
	push r8
	mov r8,QWORD [r8+8+8*1]
	call LB_376
	pop r8 
	FREE_RCD 2, r8
	jmp LB_387
LB_383:
	FREE_LN r8 
	mov r8,QWORD [r8+8]
	call LB_389
	jmp LB_387
LB_384:
	FREE_LN r8 
	mov r8,QWORD [r8+8]
	call LB_324
	jmp LB_387
LB_385:
	mov rdi,r8
	call free_s8
	jmp LB_387
LB_387:
	ret
LB_389:
	movzx rax,BYTE [r8+6]
	jmp QWORD [LB_392+8*rax]
LB_392: dq LB_390,LB_391
LB_390:
	FREE_LN r8 
	mov r8,QWORD [r8+8]
	call LB_394
	jmp LB_393
LB_391:
	FREE_LN r8 
	mov r8,QWORD [r8+8]
	call LB_388
	jmp LB_393
LB_393:
	ret
LB_394:
	movzx rax,BYTE [r8+6]
	jmp QWORD [LB_397+8*rax]
LB_397: dq LB_395,LB_396
LB_395:
	FREE_LN r8 
	mov r8,QWORD [r8+8]
	jmp LB_398
LB_396:
	mov rdi,r8
	call free_s8
	jmp LB_398
LB_398:
	ret
LB_388:
	movzx rax,BYTE [r8+6]
	jmp QWORD [LB_401+8*rax]
LB_401: dq LB_399,LB_400
LB_399:
	push r8
	mov r8,QWORD [r8+8+8*0]
	mov rdi,r8
	call free_s8
	pop r8 
	push r8
	mov r8,QWORD [r8+8+8*1]
	call LB_388
	pop r8 
	FREE_RCD 2, r8
	jmp LB_402
LB_400:
	mov rdi,r8
	call free_s8
	jmp LB_402
LB_402:
	ret
ETR_104: ;; pnt_mtc_ptn 0'(= a16◂ [ a22◂ [ a17◂ [ ]{| l |}]] ) ⊢ 0'(= {| l |} ) : (_t16◂_t22◂_s8◂_t17→_s8)
;; ? 0'(= a16◂ [ a22◂ [ a17◂ [ ]{| l |}]] ) ⊢ 0(<2)◂1'(= a2◂ [ a16◂ [ a22◂ [ a17◂ [ ]{| l |}]]] )
	mov rdi,r13
	cmp BYTE [rdi+6],0
	jnz LB_331
	mov QWORD [GBG_VCT+8*0],rdi
	mov r14,QWORD [rdi+8]
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_LN rdi
; $ 1'(= a2◂ [ a16◂ [ a22◂ [ a17◂ [ ]{| l |}]]] ) ⊢ 1'(= a2◂ [ a16◂ [ a22◂ [ a17◂ [ ]{| l |}]]] ),0'(= a2◂ [ a16◂ [ a22◂ [ a17◂ [ ]{| l |}]]] )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	call LB_332
	C_POP_REGS
	mov r13,rax
; #82 0'(= a2◂ [ a16◂ [ a22◂ [ a17◂ [ ]{| l |}]]] ) ⊢ 0(<2)◂0'(= a2◂ [ a16◂ [ a22◂ [ a17◂ [ ]{| l |}]]] )
; #105 1'(= a2◂ [ a16◂ [ a22◂ [ a17◂ [ ]{| l |}]]] ) ⊢ 1'(= {| l |} )
	sub rsp,8
	mov QWORD [rsp+8*0],r13
; .mov_ptn2 1'(= a2◂ [ a16◂ [ a22◂ [ a17◂ [ ]{| l |}]]] ) ⊢ 0'(= a2◂ [ a16◂ [ a22◂ [ a17◂ [ ]{| l |}]]] )
; .mov_ptn 1'(= a2◂ [ a16◂ [ a22◂ [ a17◂ [ ]{| l |}]]] ) ⊢ 0'(= a2◂ [ a16◂ [ a22◂ [ a17◂ [ ]{| l |}]]] )
	mov rax,r14
	mov r13,rax
	call ETR_105
	mov r14,r13
	mov r13,QWORD [rsp-8+8*1]
	add rsp,8
; » _^ .. ⊢ ..
; .. //
	mov rdi,0
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[r14]
	add rdi,rax 
	push rax
	add rdi,3
	push rdi 
	call mlc_s8
	pop rdi
	mov r8,rax
	lea rdi,[rax+7+rdi]
	std 
	mov QWORD [tmp],rcx 
	lea rsi,[LB_369+1-1]
	mov rcx,1
	rep movsb
	pop rcx
	lea rsi,[r14+7+rcx]
	rep movsb
	lea rsi,[LB_370+2-1]
	mov rcx,2
	rep movsb
	mov rcx,QWORD [tmp] 
; ∎ 2'(= {| l |} )
; .dlt.ptn 1'(= {| l |} )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	mov rdi,r8
	call free_s8
	C_POP_REGS
; .dlt.ptn 0(<2)◂0'(= a2◂ [ a16◂ [ a22◂ [ a17◂ [ ]{| l |}]]] )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	call LB_371
	C_POP_REGS
; .mov_ptn2 2'(= {| l |} ) ⊢ 0'(= {| l |} )
; .mov_ptn 2'(= {| l |} ) ⊢ 0'(= {| l |} )
	mov rax,r8
	mov r13,rax
	ret
LB_331:
;; ?. 0'(= a16◂ [ a22◂ [ a17◂ [ ]{| l |}]] ) ⊢ 1(<2)◂1'(= a22◂ [ a17◂ [ ]{| l |}] )
	mov QWORD [GBG_VCT+8*0],rdi
	mov r14,QWORD [rdi+8]
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_LN rdi
;; ? 1'(= a22◂ [ a17◂ [ ]{| l |}] ) ⊢ 1(<4)◂0'(= a19◂ [ a17◂ [ ]] )
	mov rdi,r14
	cmp BYTE [rdi+6],1
	jnz LB_403
	mov QWORD [GBG_VCT+8*0],rdi
	mov r13,QWORD [rdi+8]
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_LN rdi
; #91 0'(= a19◂ [ a17◂ [ ]] ) ⊢ 0'(= {| l |} )
; .mov_ptn2 0'(= a19◂ [ a17◂ [ ]] ) ⊢ 0'(= a19◂ [ a17◂ [ ]] )
	call ETR_91
; » _^ .. ⊢ ..
; .. //
	mov rdi,0
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[r13]
	add rdi,rax 
	push rax
	add rdi,6
	push rdi 
	call mlc_s8
	pop rdi
	mov r14,rax
	lea rdi,[rax+7+rdi]
	std 
	mov QWORD [tmp],rcx 
	lea rsi,[LB_404+3-1]
	mov rcx,3
	rep movsb
	pop rcx
	lea rsi,[r13+7+rcx]
	rep movsb
	lea rsi,[LB_405+3-1]
	mov rcx,3
	rep movsb
	mov rcx,QWORD [tmp] 
; ∎ 1'(= {| l |} )
; .dlt.ptn 0'(= {| l |} )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	mov rdi,r8
	call free_s8
	C_POP_REGS
; .mov_ptn2 1'(= {| l |} ) ⊢ 0'(= {| l |} )
; .mov_ptn 1'(= {| l |} ) ⊢ 0'(= {| l |} )
	mov rax,r14
	mov r13,rax
	ret
LB_403:
;; ? 1'(= a22◂ [ a17◂ [ ]{| l |}] ) ⊢ 0(<4)◂{ 0'(= a17◂ [ ] ) 2'(= a16◂ [ a22◂ [ a17◂ [ ]{| l |}]] ) }
	mov rdi,r14
	cmp BYTE [rdi+6],0
	jnz LB_406
	mov r13, QWORD [r14+8]
	mov r8, QWORD [r14+16]
	mov QWORD [GBG_VCT+8*0],r14
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_RCD 2,rdi
; #104 2'(= a16◂ [ a22◂ [ a17◂ [ ]{| l |}]] ) ⊢ 1'(= {| l |} )
	sub rsp,8
	mov QWORD [rsp+8*0],r13
; .mov_ptn2 2'(= a16◂ [ a22◂ [ a17◂ [ ]{| l |}]] ) ⊢ 0'(= a16◂ [ a22◂ [ a17◂ [ ]{| l |}]] )
; .mov_ptn 2'(= a16◂ [ a22◂ [ a17◂ [ ]{| l |}]] ) ⊢ 0'(= a16◂ [ a22◂ [ a17◂ [ ]{| l |}]] )
	mov rax,r8
	mov r13,rax
	call ETR_104
	mov r14,r13
	mov r13,QWORD [rsp-8+8*1]
	add rsp,8
; #85 0'(= a17◂ [ ] ) ⊢ 0'(= {| l |} )
	sub rsp,8
	mov QWORD [rsp+8*0],r14
; .mov_ptn2 0'(= a17◂ [ ] ) ⊢ 0'(= a17◂ [ ] )
	call ETR_85
	mov r14,QWORD [rsp-8+8*1]
	add rsp,8
; » _^ .. ⊢ ..
; .. //
	mov rdi,0
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[r13]
	add rdi,rax 
	push rax
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[r14]
	add rdi,rax 
	push rax
	add rdi,3
	push rdi 
	call mlc_s8
	pop rdi
	mov r8,rax
	lea rdi,[rax+7+rdi]
	std 
	mov QWORD [tmp],rcx 
	pop rcx
	lea rsi,[r14+7+rcx]
	rep movsb
	lea rsi,[LB_407+3-1]
	mov rcx,3
	rep movsb
	pop rcx
	lea rsi,[r13+7+rcx]
	rep movsb
	mov rcx,QWORD [tmp] 
; ∎ 2'(= {| l |} )
; .dlt.ptn 1'(= {| l |} )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	mov rdi,r8
	call free_s8
	C_POP_REGS
; .dlt.ptn 0'(= {| l |} )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	mov rdi,r8
	call free_s8
	C_POP_REGS
; .mov_ptn2 2'(= {| l |} ) ⊢ 0'(= {| l |} )
; .mov_ptn 2'(= {| l |} ) ⊢ 0'(= {| l |} )
	mov rax,r8
	mov r13,rax
	ret
LB_406:
;; ? 1'(= a22◂ [ a17◂ [ ]{| l |}] ) ⊢ 3(<4)◂1'(= {| l |} )
	mov rdi,r14
	cmp BYTE [rdi+6],3
	jnz LB_408
; » _^ .. ⊢ ..
; .. //
	mov rdi,0
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[r14]
	add rdi,rax 
	push rax
	add rdi,1
	push rdi 
	call mlc_s8
	pop rdi
	mov r13,rax
	lea rdi,[rax+7+rdi]
	std 
	mov QWORD [tmp],rcx 
	pop rcx
	lea rsi,[r14+7+rcx]
	rep movsb
	lea rsi,[LB_409+1-1]
	mov rcx,1
	rep movsb
	mov rcx,QWORD [tmp] 
; ∎ 0'(= {| l |} )
; .dlt.ptn 1'(= {| l |} )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	mov rdi,r8
	call free_s8
	C_POP_REGS
; .mov_ptn2 0'(= {| l |} ) ⊢ 0'(= {| l |} )
	ret
LB_408:
;; ?. 1'(= a22◂ [ a17◂ [ ]{| l |}] ) ⊢ 2(<4)◂0'(= a3◂ [ {| l |}] )
	mov QWORD [GBG_VCT+8*0],rdi
	mov r13,QWORD [rdi+8]
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_LN rdi
; $ %[ "_" ] ⊢ %[ "_" ]
; ∎ %[ "_" ]
; .dlt.ptn 0'(= a3◂ [ {| l |}] )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	call LB_324
	C_POP_REGS
; .mov_ptn2 %[ "_" ] ⊢ 0'(= {| l |} )
; .mov_ptn %[ "_" ] ⊢ 0'(= {| l |} )
	mov rsi,1  
	mov rdi,16
	xor rax,rax 
	C_CALL_SF calloc
	mov QWORD [rax],1
	mov BYTE [rax+8+0],95
	mov r13,rax
	ret
ETR_105: ;; pnt_mtc_ptn_lst 0'(= a2◂ [ a16◂ [ a22◂ [ a17◂ [ ]{| l |}]]] ) ⊢ 0'(= {| l |} ) : (_lst◂_t16◂_t22◂_s8◂_t17→_s8)
;; ? 0'(= a2◂ [ a16◂ [ a22◂ [ a17◂ [ ]{| l |}]]] ) ⊢ 0(<2)◂{ 1'(= a16◂ [ a22◂ [ a17◂ [ ]{| l |}]] ) 2'(= a2◂ [ a16◂ [ a22◂ [ a17◂ [ ]{| l |}]]] ) }
	mov rdi,r13
	cmp BYTE [rdi+6],0
	jnz LB_410
	mov r14, QWORD [r13+8]
	mov r8, QWORD [r13+16]
	mov QWORD [GBG_VCT+8*0],r13
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_RCD 2,rdi
; #104 1'(= a16◂ [ a22◂ [ a17◂ [ ]{| l |}]] ) ⊢ 0'(= {| l |} )
	sub rsp,8
	mov QWORD [rsp+8*0],r8
; .mov_ptn2 1'(= a16◂ [ a22◂ [ a17◂ [ ]{| l |}]] ) ⊢ 0'(= a16◂ [ a22◂ [ a17◂ [ ]{| l |}]] )
; .mov_ptn 1'(= a16◂ [ a22◂ [ a17◂ [ ]{| l |}]] ) ⊢ 0'(= a16◂ [ a22◂ [ a17◂ [ ]{| l |}]] )
	mov rax,r14
	mov r13,rax
	call ETR_104
	mov r8,QWORD [rsp-8+8*1]
	add rsp,8
; #105 2'(= a2◂ [ a16◂ [ a22◂ [ a17◂ [ ]{| l |}]]] ) ⊢ 1'(= {| l |} )
	sub rsp,8
	mov QWORD [rsp+8*0],r13
; .mov_ptn2 2'(= a2◂ [ a16◂ [ a22◂ [ a17◂ [ ]{| l |}]]] ) ⊢ 0'(= a2◂ [ a16◂ [ a22◂ [ a17◂ [ ]{| l |}]]] )
; .mov_ptn 2'(= a2◂ [ a16◂ [ a22◂ [ a17◂ [ ]{| l |}]]] ) ⊢ 0'(= a2◂ [ a16◂ [ a22◂ [ a17◂ [ ]{| l |}]]] )
	mov rax,r8
	mov r13,rax
	call ETR_105
	mov r14,r13
	mov r13,QWORD [rsp-8+8*1]
	add rsp,8
; » _^ .. ⊢ ..
; .. //
	mov rdi,0
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[r13]
	add rdi,rax 
	push rax
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[r14]
	add rdi,rax 
	push rax
	add rdi,1
	push rdi 
	call mlc_s8
	pop rdi
	mov r8,rax
	lea rdi,[rax+7+rdi]
	std 
	mov QWORD [tmp],rcx 
	pop rcx
	lea rsi,[r14+7+rcx]
	rep movsb
	lea rsi,[LB_411+1-1]
	mov rcx,1
	rep movsb
	pop rcx
	lea rsi,[r13+7+rcx]
	rep movsb
	mov rcx,QWORD [tmp] 
; ∎ 2'(= {| l |} )
; .dlt.ptn 1'(= {| l |} )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	mov rdi,r8
	call free_s8
	C_POP_REGS
; .dlt.ptn 0'(= {| l |} )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	mov rdi,r8
	call free_s8
	C_POP_REGS
; .mov_ptn2 2'(= {| l |} ) ⊢ 0'(= {| l |} )
; .mov_ptn 2'(= {| l |} ) ⊢ 0'(= {| l |} )
	mov rax,r8
	mov r13,rax
	ret
LB_410:
;; ?. 0'(= a2◂ [ a16◂ [ a22◂ [ a17◂ [ ]{| l |}]]] ) ⊢ 1(<2)◂{ }
; $ %[ "" ] ⊢ %[ "" ]
; ∎ %[ "" ]
; .mov_ptn2 %[ "" ] ⊢ 0'(= {| l |} )
; .mov_ptn %[ "" ] ⊢ 0'(= {| l |} )
	mov rsi,1  
	mov rdi,16
	xor rax,rax 
	C_CALL_SF calloc
	mov QWORD [rax],0
	mov r13,rax
	ret
LB_445:
	movzx rax,BYTE [r8+6]
	jmp QWORD [LB_448+8*rax]
LB_448: dq LB_446,LB_447
LB_446:
	FREE_LN r8 
	mov r8,QWORD [r8+8]
	call LB_450
	jmp LB_449
LB_447:
	jmp LB_449
LB_449:
	ret
LB_450:
	movzx rax,BYTE [r8+6]
	jmp QWORD [LB_453+8*rax]
LB_453: dq LB_451,LB_452
LB_451:
	FREE_LN r8 
	mov r8,QWORD [r8+8]
	call LB_455
	jmp LB_454
LB_452:
	FREE_LN r8 
	mov r8,QWORD [r8+8]
	call LB_456
	jmp LB_454
LB_454:
	ret
LB_456:
	movzx rax,BYTE [r8+6]
	jmp QWORD [LB_459+8*rax]
LB_459: dq LB_457,LB_458
LB_457:
	FREE_LN r8 
	mov r8,QWORD [r8+8]
	call LB_389
	jmp LB_460
LB_458:
	mov rdi,r8
	call free_s8
	jmp LB_460
LB_460:
	ret
LB_455:
	movzx rax,BYTE [r8+6]
	jmp QWORD [LB_463+8*rax]
LB_463: dq LB_461,LB_462
LB_461:
	push r8
	mov r8,QWORD [r8+8+8*0]
	call LB_450
	pop r8 
	push r8
	mov r8,QWORD [r8+8+8*1]
	call LB_455
	pop r8 
	FREE_RCD 2, r8
	jmp LB_464
LB_462:
	jmp LB_464
LB_464:
	ret
LB_498:
	movzx rax,BYTE [r8+6]
	jmp QWORD [LB_501+8*rax]
LB_501: dq LB_499,LB_500
LB_499:
	push r8
	mov r8,QWORD [r8+8+8*0]
	call LB_503
	pop r8 
	push r8
	mov r8,QWORD [r8+8+8*1]
	call LB_498
	pop r8 
	FREE_RCD 2, r8
	jmp LB_502
LB_500:
	jmp LB_502
LB_502:
	ret
LB_503:
	movzx rax,BYTE [r8+6]
	jmp QWORD [LB_508+8*rax]
LB_508: dq LB_504,LB_505,LB_506,LB_507
LB_504:
	mov rdi,r8
	call free_s8
	jmp LB_509
LB_505:
	FREE_LN r8 
	mov r8,QWORD [r8+8]
	call LB_389
	jmp LB_509
LB_506:
	push r8
	mov r8,QWORD [r8+8+8*0]
	call LB_510
	pop r8 
	push r8
	mov r8,QWORD [r8+8+8*1]
	pop r8 
	FREE_RCD 2, r8
	jmp LB_509
LB_507:
	push r8
	mov r8,QWORD [r8+8+8*0]
	pop r8 
	push r8
	mov r8,QWORD [r8+8+8*1]
	mov rdi,r8
	call free_s8
	pop r8 
	FREE_RCD 2, r8
	jmp LB_509
LB_509:
	ret
LB_510:
	movzx rax,BYTE [r8+6]
	jmp QWORD [LB_515+8*rax]
LB_515: dq LB_511,LB_512,LB_513,LB_514
LB_511:
	jmp LB_516
LB_512:
	jmp LB_516
LB_513:
	jmp LB_516
LB_514:
	jmp LB_516
LB_516:
	ret
LB_497:
	movzx rax,BYTE [r8+6]
	jmp QWORD [LB_519+8*rax]
LB_519: dq LB_517,LB_518
LB_517:
	push r8
	mov r8,QWORD [r8+8+8*0]
	call LB_456
	pop r8 
	push r8
	mov r8,QWORD [r8+8+8*1]
	call LB_497
	pop r8 
	FREE_RCD 2, r8
	jmp LB_520
LB_518:
	jmp LB_520
LB_520:
	ret
LB_496:
	movzx rax,BYTE [r8+6]
	jmp QWORD [LB_523+8*rax]
LB_523: dq LB_521,LB_522
LB_521:
	push r8
	mov r8,QWORD [r8+8+8*0]
	call LB_525
	pop r8 
	push r8
	mov r8,QWORD [r8+8+8*1]
	call LB_496
	pop r8 
	FREE_RCD 2, r8
	jmp LB_524
LB_522:
	jmp LB_524
LB_524:
	ret
LB_525:
	movzx rax,BYTE [r8+6]
	jmp QWORD [LB_528+8*rax]
LB_528: dq LB_526,LB_527
LB_526:
	FREE_LN r8 
	mov r8,QWORD [r8+8]
	call LB_324
	jmp LB_529
LB_527:
	mov rdi,r8
	call free_s8
	jmp LB_529
LB_529:
	ret
LB_536:
	movzx rax,BYTE [r8+6]
	jmp QWORD [LB_539+8*rax]
LB_539: dq LB_537,LB_538
LB_537:
	push r8
	mov r8,QWORD [r8+8+8*0]
	call LB_541
	pop r8 
	push r8
	mov r8,QWORD [r8+8+8*1]
	call LB_536
	pop r8 
	FREE_RCD 2, r8
	jmp LB_540
LB_538:
	jmp LB_540
LB_540:
	ret
LB_541:
	movzx rax,BYTE [r8+6]
	jmp QWORD [LB_545+8*rax]
LB_545: dq LB_542,LB_543,LB_544
LB_542:
	push r8
	mov r8,QWORD [r8+8+8*0]
	call LB_450
	pop r8 
	push r8
	mov r8,QWORD [r8+8+8*1]
	call LB_376
	pop r8 
	FREE_RCD 2, r8
	jmp LB_546
LB_543:
	push r8
	mov r8,QWORD [r8+8+8*0]
	call LB_547
	pop r8 
	push r8
	mov r8,QWORD [r8+8+8*1]
	call LB_547
	pop r8 
	FREE_RCD 2, r8
	jmp LB_546
LB_544:
	push r8
	mov r8,QWORD [r8+8+8*0]
	call LB_547
	pop r8 
	push r8
	mov r8,QWORD [r8+8+8*1]
	call LB_547
	pop r8 
	FREE_RCD 2, r8
	jmp LB_546
LB_546:
	ret
LB_547:
	movzx rax,BYTE [r8+6]
	jmp QWORD [LB_550+8*rax]
LB_550: dq LB_548,LB_549
LB_548:
	FREE_LN r8 
	mov r8,QWORD [r8+8]
	call LB_389
	jmp LB_551
LB_549:
	mov rdi,r8
	call free_s8
	jmp LB_551
LB_551:
	ret
ETR_135: ;; pnt_lc_code { 0'(= r ) 1'(= a25◂ [ a17◂ [ ]{| l |}] ) } ⊢ { 0'(= r ) 1'(= {| l |} ) } : ({ _r64 _t25◂_s8◂_t17 }→{ _r64 _s8 })
;; ? 1'(= a25◂ [ a17◂ [ ]{| l |}] ) ⊢ 0(<7)◂{ 2'(= a17◂ [ ] ) 3'(= a16◂ [ a20◂ [ a17◂ [ ]{| l |}]] ) }
	mov rdi,r14
	cmp BYTE [rdi+6],0
	jnz LB_412
	mov r8, QWORD [r14+8]
	mov r9, QWORD [r14+16]
	mov QWORD [GBG_VCT+8*0],r14
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_RCD 2,rdi
; #85 2'(= a17◂ [ ] ) ⊢ 1'(= {| l |} )
	sub rsp,16
	mov QWORD [rsp+8*0],r13
	mov QWORD [rsp+8*1],r9
; .mov_ptn2 2'(= a17◂ [ ] ) ⊢ 0'(= a17◂ [ ] )
; .mov_ptn 2'(= a17◂ [ ] ) ⊢ 0'(= a17◂ [ ] )
	mov rax,r8
	mov r13,rax
	call ETR_85
	mov r9,QWORD [rsp-8+8*2]
	mov r14,r13
	mov r13,QWORD [rsp-8+8*1]
	add rsp,16
; #100 3'(= a16◂ [ a20◂ [ a17◂ [ ]{| l |}]] ) ⊢ 2'(= {| l |} )
	sub rsp,16
	mov QWORD [rsp+8*0],r13
	mov QWORD [rsp+8*1],r14
; .mov_ptn2 3'(= a16◂ [ a20◂ [ a17◂ [ ]{| l |}]] ) ⊢ 0'(= a16◂ [ a20◂ [ a17◂ [ ]{| l |}]] )
; .mov_ptn 3'(= a16◂ [ a20◂ [ a17◂ [ ]{| l |}]] ) ⊢ 0'(= a16◂ [ a20◂ [ a17◂ [ ]{| l |}]] )
	mov rax,r9
	mov r13,rax
	call ETR_100
	mov r14,QWORD [rsp-8+8*2]
	mov r8,r13
	mov r13,QWORD [rsp-8+8*1]
	add rsp,16
; » _^ .. ⊢ ..
; .. //
	mov rdi,0
	mov rsi,r13
	imul rsi,1
	add rdi,rsi 
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[r14]
	add rdi,rax 
	push rax
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[r8]
	add rdi,rax 
	push rax
	add rdi,7
	push rdi 
	call mlc_s8
	pop rdi
	mov r9,rax
	lea rdi,[rax+7+rdi]
	std 
	mov QWORD [tmp],rcx 
	lea rsi,[LB_413+6-1]
	mov rcx,6
	rep movsb
	pop rcx
	lea rsi,[r8+7+rcx]
	rep movsb
	lea rsi,[LB_414+1-1]
	mov rcx,1
	rep movsb
	pop rcx
	lea rsi,[r14+7+rcx]
	rep movsb
	mov rax,r13
LB_416:
	cmp rax,0
	jz LB_417
	sub rax,1
	lea rsi,[LB_415+1-1]
	mov rcx,1
	rep movsb 
	jmp LB_416
LB_417:
	mov rcx,QWORD [tmp] 
; ∎ { 0'(= r ) 3'(= {| l |} ) }
; .dlt.ptn 2'(= {| l |} )
	mov rdi,r8
	C_PUSH_REGS
	mov r8,rdi
	mov rdi,r8
	call free_s8
	C_POP_REGS
; .dlt.ptn 1'(= {| l |} )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	mov rdi,r8
	call free_s8
	C_POP_REGS
; .mov_ptn2 { 0'(= r ) 3'(= {| l |} ) } ⊢ { 0'(= r ) 1'(= {| l |} ) }
; .mov_ptn 3'(= {| l |} ) ⊢ 1'(= {| l |} )
	mov rax,r9
	mov r14,rax
	ret
LB_412:
;; ? 1'(= a25◂ [ a17◂ [ ]{| l |}] ) ⊢ 1(<7)◂{ 2'(= a20◂ [ a17◂ [ ]{| l |}] ) 3'(= a16◂ [ a20◂ [ a17◂ [ ]{| l |}]] ) }
	mov rdi,r14
	cmp BYTE [rdi+6],1
	jnz LB_418
	mov r8, QWORD [r14+8]
	mov r9, QWORD [r14+16]
	mov QWORD [GBG_VCT+8*0],r14
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_RCD 2,rdi
; #81 2'(= a20◂ [ a17◂ [ ]{| l |}] ) ⊢ 1(<2)◂2'(= a20◂ [ a17◂ [ ]{| l |}] )
; #100 1(<2)◂2'(= a20◂ [ a17◂ [ ]{| l |}] ) ⊢ 1'(= {| l |} )
	sub rsp,16
	mov QWORD [rsp+8*0],r13
	mov QWORD [rsp+8*1],r9
; .mov_ptn2 1(<2)◂2'(= a20◂ [ a17◂ [ ]{| l |}] ) ⊢ 0'(= a16◂ [ a20◂ [ a17◂ [ ]{| l |}]] )
; .mov_ptn 1(<2)◂2'(= a20◂ [ a17◂ [ ]{| l |}] ) ⊢ 0'(= a16◂ [ a20◂ [ a17◂ [ ]{| l |}]] )
	mov rax,r8
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],1
	mov QWORD [rax+8],rdi
	mov r13,rax
	call ETR_100
	mov r9,QWORD [rsp-8+8*2]
	mov r14,r13
	mov r13,QWORD [rsp-8+8*1]
	add rsp,16
; #100 3'(= a16◂ [ a20◂ [ a17◂ [ ]{| l |}]] ) ⊢ 2'(= {| l |} )
	sub rsp,16
	mov QWORD [rsp+8*0],r13
	mov QWORD [rsp+8*1],r14
; .mov_ptn2 3'(= a16◂ [ a20◂ [ a17◂ [ ]{| l |}]] ) ⊢ 0'(= a16◂ [ a20◂ [ a17◂ [ ]{| l |}]] )
; .mov_ptn 3'(= a16◂ [ a20◂ [ a17◂ [ ]{| l |}]] ) ⊢ 0'(= a16◂ [ a20◂ [ a17◂ [ ]{| l |}]] )
	mov rax,r9
	mov r13,rax
	call ETR_100
	mov r14,QWORD [rsp-8+8*2]
	mov r8,r13
	mov r13,QWORD [rsp-8+8*1]
	add rsp,16
; » _^ .. ⊢ ..
; .. //
	mov rdi,0
	mov rsi,r13
	imul rsi,1
	add rdi,rsi 
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[r14]
	add rdi,rax 
	push rax
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[r8]
	add rdi,rax 
	push rax
	add rdi,10
	push rdi 
	call mlc_s8
	pop rdi
	mov r9,rax
	lea rdi,[rax+7+rdi]
	std 
	mov QWORD [tmp],rcx 
	lea rsi,[LB_419+6-1]
	mov rcx,6
	rep movsb
	pop rcx
	lea rsi,[r8+7+rcx]
	rep movsb
	lea rsi,[LB_420+1-1]
	mov rcx,1
	rep movsb
	pop rcx
	lea rsi,[r14+7+rcx]
	rep movsb
	lea rsi,[LB_421+3-1]
	mov rcx,3
	rep movsb
	mov rax,r13
LB_423:
	cmp rax,0
	jz LB_424
	sub rax,1
	lea rsi,[LB_422+1-1]
	mov rcx,1
	rep movsb 
	jmp LB_423
LB_424:
	mov rcx,QWORD [tmp] 
; ∎ { 0'(= r ) 3'(= {| l |} ) }
; .dlt.ptn 2'(= {| l |} )
	mov rdi,r8
	C_PUSH_REGS
	mov r8,rdi
	mov rdi,r8
	call free_s8
	C_POP_REGS
; .dlt.ptn 1'(= {| l |} )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	mov rdi,r8
	call free_s8
	C_POP_REGS
; .mov_ptn2 { 0'(= r ) 3'(= {| l |} ) } ⊢ { 0'(= r ) 1'(= {| l |} ) }
; .mov_ptn 3'(= {| l |} ) ⊢ 1'(= {| l |} )
	mov rax,r9
	mov r14,rax
	ret
LB_418:
;; ? 1'(= a25◂ [ a17◂ [ ]{| l |}] ) ⊢ 2(<7)◂{ 2'(= a27◂ [ a17◂ [ ]{| l |}] ) 3'(= a25◂ [ a17◂ [ ]{| l |}] ) }
	mov rdi,r14
	cmp BYTE [rdi+6],2
	jnz LB_425
	mov r8, QWORD [r14+8]
	mov r9, QWORD [r14+16]
	mov QWORD [GBG_VCT+8*0],r14
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_RCD 2,rdi
; #136 { 0'(= r ) 2'(= a27◂ [ a17◂ [ ]{| l |}] ) } ⊢ { 0'(= r ) 1'(= {| l |} ) }
	sub rsp,8
	mov QWORD [rsp+8*0],r9
; .mov_ptn2 { 0'(= r ) 2'(= a27◂ [ a17◂ [ ]{| l |}] ) } ⊢ { 0'(= r ) 1'(= a27◂ [ a17◂ [ ]{| l |}] ) }
; .mov_ptn 2'(= a27◂ [ a17◂ [ ]{| l |}] ) ⊢ 1'(= a27◂ [ a17◂ [ ]{| l |}] )
	mov rax,r8
	mov r14,rax
	call ETR_136
	mov r9,QWORD [rsp-8+8*1]
	add rsp,8
; #135 { 0'(= r ) 3'(= a25◂ [ a17◂ [ ]{| l |}] ) } ⊢ { 0'(= r ) 2'(= {| l |} ) }
	sub rsp,8
	mov QWORD [rsp+8*0],r14
; .mov_ptn2 { 0'(= r ) 3'(= a25◂ [ a17◂ [ ]{| l |}] ) } ⊢ { 0'(= r ) 1'(= a25◂ [ a17◂ [ ]{| l |}] ) }
; .mov_ptn 3'(= a25◂ [ a17◂ [ ]{| l |}] ) ⊢ 1'(= a25◂ [ a17◂ [ ]{| l |}] )
	mov rax,r9
	mov r14,rax
	call ETR_135
	mov r8,r14
	mov r14,QWORD [rsp-8+8*1]
	add rsp,8
; » _^ .. ⊢ ..
; .. //
	mov rdi,0
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[r14]
	add rdi,rax 
	push rax
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[r8]
	add rdi,rax 
	push rax
	add rdi,0
	push rdi 
	call mlc_s8
	pop rdi
	mov r9,rax
	lea rdi,[rax+7+rdi]
	std 
	mov QWORD [tmp],rcx 
	pop rcx
	lea rsi,[r8+7+rcx]
	rep movsb
	pop rcx
	lea rsi,[r14+7+rcx]
	rep movsb
	mov rcx,QWORD [tmp] 
; ∎ { 0'(= r ) 3'(= {| l |} ) }
; .dlt.ptn 2'(= {| l |} )
	mov rdi,r8
	C_PUSH_REGS
	mov r8,rdi
	mov rdi,r8
	call free_s8
	C_POP_REGS
; .dlt.ptn 1'(= {| l |} )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	mov rdi,r8
	call free_s8
	C_POP_REGS
; .mov_ptn2 { 0'(= r ) 3'(= {| l |} ) } ⊢ { 0'(= r ) 1'(= {| l |} ) }
; .mov_ptn 3'(= {| l |} ) ⊢ 1'(= {| l |} )
	mov rax,r9
	mov r14,rax
	ret
LB_425:
;; ? 1'(= a25◂ [ a17◂ [ ]{| l |}] ) ⊢ 3(<7)◂2'(= a15◂ [ *{ a2◂ [ a29◂ [ a17◂ [ ]{| l |}]]a28◂ [ a17◂ [ ]{| l |}]}] )
	mov rdi,r14
	cmp BYTE [rdi+6],3
	jnz LB_426
	mov QWORD [GBG_VCT+8*0],rdi
	mov r8,QWORD [rdi+8]
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_LN rdi
; #137 { 0'(= r ) 2'(= a15◂ [ *{ a2◂ [ a29◂ [ a17◂ [ ]{| l |}]]a28◂ [ a17◂ [ ]{| l |}]}] ) } ⊢ { 0'(= r ) 1'(= {| l |} ) }
; .mov_ptn2 { 0'(= r ) 2'(= a15◂ [ *{ a2◂ [ a29◂ [ a17◂ [ ]{| l |}]]a28◂ [ a17◂ [ ]{| l |}]}] ) } ⊢ { 0'(= r ) 1'(= a15◂ [ *{ a2◂ [ a29◂ [ a17◂ [ ]{| l |}]]a28◂ [ a17◂ [ ]{| l |}]}] ) }
; .mov_ptn 2'(= a15◂ [ *{ a2◂ [ a29◂ [ a17◂ [ ]{| l |}]]a28◂ [ a17◂ [ ]{| l |}]}] ) ⊢ 1'(= a15◂ [ *{ a2◂ [ a29◂ [ a17◂ [ ]{| l |}]]a28◂ [ a17◂ [ ]{| l |}]}] )
	mov rax,r8
	mov r14,rax
	call ETR_137
; ∎ { 0'(= r ) 1'(= {| l |} ) }
; .mov_ptn2 { 0'(= r ) 1'(= {| l |} ) } ⊢ { 0'(= r ) 1'(= {| l |} ) }
	ret
LB_426:
;; ? 1'(= a25◂ [ a17◂ [ ]{| l |}] ) ⊢ 4(<7)◂{ 2'(= a16◂ [ a20◂ [ a17◂ [ ]{| l |}]] ) 3'(= a26◂ [ a17◂ [ ]{| l |}] ) }
	mov rdi,r14
	cmp BYTE [rdi+6],4
	jnz LB_427
	mov r8, QWORD [r14+8]
	mov r9, QWORD [r14+16]
	mov QWORD [GBG_VCT+8*0],r14
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_RCD 2,rdi
; #100 2'(= a16◂ [ a20◂ [ a17◂ [ ]{| l |}]] ) ⊢ 1'(= {| l |} )
	sub rsp,16
	mov QWORD [rsp+8*0],r13
	mov QWORD [rsp+8*1],r9
; .mov_ptn2 2'(= a16◂ [ a20◂ [ a17◂ [ ]{| l |}]] ) ⊢ 0'(= a16◂ [ a20◂ [ a17◂ [ ]{| l |}]] )
; .mov_ptn 2'(= a16◂ [ a20◂ [ a17◂ [ ]{| l |}]] ) ⊢ 0'(= a16◂ [ a20◂ [ a17◂ [ ]{| l |}]] )
	mov rax,r8
	mov r13,rax
	call ETR_100
	mov r9,QWORD [rsp-8+8*2]
	mov r14,r13
	mov r13,QWORD [rsp-8+8*1]
	add rsp,16
;; ? 3'(= a26◂ [ a17◂ [ ]{| l |}] ) ⊢ 1(<2)◂{ 2'(= a2◂ [ a16◂ [ a21◂ [ {| l |}]]] ) 4'(= a25◂ [ a17◂ [ ]{| l |}] ) }
	mov rdi,r9
	cmp BYTE [rdi+6],1
	jnz LB_428
	mov r8, QWORD [r9+8]
	mov r10, QWORD [r9+16]
	mov QWORD [GBG_VCT+8*0],r9
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_RCD 2,rdi
; #103 2'(= a2◂ [ a16◂ [ a21◂ [ {| l |}]]] ) ⊢ 2'(= {| l |} )
	sub rsp,24
	mov QWORD [rsp+8*0],r13
	mov QWORD [rsp+8*1],r14
	mov QWORD [rsp+8*2],r10
; .mov_ptn2 2'(= a2◂ [ a16◂ [ a21◂ [ {| l |}]]] ) ⊢ 0'(= a2◂ [ a16◂ [ a21◂ [ {| l |}]]] )
; .mov_ptn 2'(= a2◂ [ a16◂ [ a21◂ [ {| l |}]]] ) ⊢ 0'(= a2◂ [ a16◂ [ a21◂ [ {| l |}]]] )
	mov rax,r8
	mov r13,rax
	call ETR_103
	mov r10,QWORD [rsp-8+8*3]
	mov r14,QWORD [rsp-8+8*2]
	mov r8,r13
	mov r13,QWORD [rsp-8+8*1]
	add rsp,24
; #135 { 0'(= r ) 4'(= a25◂ [ a17◂ [ ]{| l |}] ) } ⊢ { 0'(= r ) 3'(= {| l |} ) }
	sub rsp,16
	mov QWORD [rsp+8*0],r14
	mov QWORD [rsp+8*1],r8
; .mov_ptn2 { 0'(= r ) 4'(= a25◂ [ a17◂ [ ]{| l |}] ) } ⊢ { 0'(= r ) 1'(= a25◂ [ a17◂ [ ]{| l |}] ) }
; .mov_ptn 4'(= a25◂ [ a17◂ [ ]{| l |}] ) ⊢ 1'(= a25◂ [ a17◂ [ ]{| l |}] )
	mov rax,r10
	mov r14,rax
	call ETR_135
	mov r8,QWORD [rsp-8+8*2]
	mov r9,r14
	mov r14,QWORD [rsp-8+8*1]
	add rsp,16
; » _^ .. ⊢ ..
; .. //
	mov rdi,0
	mov rsi,r13
	imul rsi,1
	add rdi,rsi 
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[r14]
	add rdi,rax 
	push rax
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[r8]
	add rdi,rax 
	push rax
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[r9]
	add rdi,rax 
	push rax
	add rdi,8
	push rdi 
	call mlc_s8
	pop rdi
	mov r10,rax
	lea rdi,[rax+7+rdi]
	std 
	mov QWORD [tmp],rcx 
	pop rcx
	lea rsi,[r9+7+rcx]
	rep movsb
	lea rsi,[LB_429+1-1]
	mov rcx,1
	rep movsb
	pop rcx
	lea rsi,[r8+7+rcx]
	rep movsb
	lea rsi,[LB_430+5-1]
	mov rcx,5
	rep movsb
	pop rcx
	lea rsi,[r14+7+rcx]
	rep movsb
	lea rsi,[LB_431+2-1]
	mov rcx,2
	rep movsb
	mov rax,r13
LB_433:
	cmp rax,0
	jz LB_434
	sub rax,1
	lea rsi,[LB_432+1-1]
	mov rcx,1
	rep movsb 
	jmp LB_433
LB_434:
	mov rcx,QWORD [tmp] 
; ∎ { 0'(= r ) 4'(= {| l |} ) }
; .dlt.ptn 3'(= {| l |} )
	mov rdi,r9
	C_PUSH_REGS
	mov r8,rdi
	mov rdi,r8
	call free_s8
	C_POP_REGS
; .dlt.ptn 2'(= {| l |} )
	mov rdi,r8
	C_PUSH_REGS
	mov r8,rdi
	mov rdi,r8
	call free_s8
	C_POP_REGS
; .dlt.ptn 1'(= {| l |} )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	mov rdi,r8
	call free_s8
	C_POP_REGS
; .mov_ptn2 { 0'(= r ) 4'(= {| l |} ) } ⊢ { 0'(= r ) 1'(= {| l |} ) }
; .mov_ptn 4'(= {| l |} ) ⊢ 1'(= {| l |} )
	mov rax,r10
	mov r14,rax
	ret
LB_428:
;; ?. 3'(= a26◂ [ a17◂ [ ]{| l |}] ) ⊢ 0(<2)◂2'(= a15◂ [ *{ a16◂ [ a22◂ [ a17◂ [ ]{| l |}]]a2◂ [ a29◂ [ a17◂ [ ]{| l |}]]a28◂ [ a17◂ [ ]{| l |}]}] )
	mov QWORD [GBG_VCT+8*0],rdi
	mov r8,QWORD [rdi+8]
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_LN rdi
; #138 { 0'(= r ) 2'(= a15◂ [ *{ a16◂ [ a22◂ [ a17◂ [ ]{| l |}]]a2◂ [ a29◂ [ a17◂ [ ]{| l |}]]a28◂ [ a17◂ [ ]{| l |}]}] ) } ⊢ { 0'(= r ) 2'(= {| l |} ) }
	sub rsp,8
	mov QWORD [rsp+8*0],r14
; .mov_ptn2 { 0'(= r ) 2'(= a15◂ [ *{ a16◂ [ a22◂ [ a17◂ [ ]{| l |}]]a2◂ [ a29◂ [ a17◂ [ ]{| l |}]]a28◂ [ a17◂ [ ]{| l |}]}] ) } ⊢ { 0'(= r ) 1'(= a15◂ [ *{ a16◂ [ a22◂ [ a17◂ [ ]{| l |}]]a2◂ [ a29◂ [ a17◂ [ ]{| l |}]]a28◂ [ a17◂ [ ]{| l |}]}] ) }
; .mov_ptn 2'(= a15◂ [ *{ a16◂ [ a22◂ [ a17◂ [ ]{| l |}]]a2◂ [ a29◂ [ a17◂ [ ]{| l |}]]a28◂ [ a17◂ [ ]{| l |}]}] ) ⊢ 1'(= a15◂ [ *{ a16◂ [ a22◂ [ a17◂ [ ]{| l |}]]a2◂ [ a29◂ [ a17◂ [ ]{| l |}]]a28◂ [ a17◂ [ ]{| l |}]}] )
	mov rax,r8
	mov r14,rax
	call ETR_138
	mov r8,r14
	mov r14,QWORD [rsp-8+8*1]
	add rsp,8
; » _^ .. ⊢ ..
; .. //
	mov rdi,0
	mov rsi,r13
	imul rsi,1
	add rdi,rsi 
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[r14]
	add rdi,rax 
	push rax
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[r8]
	add rdi,rax 
	push rax
	add rdi,7
	push rdi 
	call mlc_s8
	pop rdi
	mov r9,rax
	lea rdi,[rax+7+rdi]
	std 
	mov QWORD [tmp],rcx 
	pop rcx
	lea rsi,[r8+7+rcx]
	rep movsb
	lea rsi,[LB_435+5-1]
	mov rcx,5
	rep movsb
	pop rcx
	lea rsi,[r14+7+rcx]
	rep movsb
	lea rsi,[LB_436+2-1]
	mov rcx,2
	rep movsb
	mov rax,r13
LB_438:
	cmp rax,0
	jz LB_439
	sub rax,1
	lea rsi,[LB_437+1-1]
	mov rcx,1
	rep movsb 
	jmp LB_438
LB_439:
	mov rcx,QWORD [tmp] 
; ∎ { 0'(= r ) 3'(= {| l |} ) }
; .dlt.ptn 2'(= {| l |} )
	mov rdi,r8
	C_PUSH_REGS
	mov r8,rdi
	mov rdi,r8
	call free_s8
	C_POP_REGS
; .dlt.ptn 1'(= {| l |} )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	mov rdi,r8
	call free_s8
	C_POP_REGS
; .mov_ptn2 { 0'(= r ) 3'(= {| l |} ) } ⊢ { 0'(= r ) 1'(= {| l |} ) }
; .mov_ptn 3'(= {| l |} ) ⊢ 1'(= {| l |} )
	mov rax,r9
	mov r14,rax
	ret
LB_427:
;; ? 1'(= a25◂ [ a17◂ [ ]{| l |}] ) ⊢ 5(<7)◂2'(= a3◂ [ a16◂ [ a20◂ [ a17◂ [ ]{| l |}]]] )
	mov rdi,r14
	cmp BYTE [rdi+6],5
	jnz LB_440
	mov QWORD [GBG_VCT+8*0],rdi
	mov r8,QWORD [rdi+8]
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_LN rdi
; » _^ .. ⊢ ..
; .. //
	mov rdi,0
	mov rsi,r13
	imul rsi,1
	add rdi,rsi 
	add rdi,7
	push rdi 
	call mlc_s8
	pop rdi
	mov r14,rax
	lea rdi,[rax+7+rdi]
	std 
	mov QWORD [tmp],rcx 
	lea rsi,[LB_441+7-1]
	mov rcx,7
	rep movsb
	mov rax,r13
LB_443:
	cmp rax,0
	jz LB_444
	sub rax,1
	lea rsi,[LB_442+1-1]
	mov rcx,1
	rep movsb 
	jmp LB_443
LB_444:
	mov rcx,QWORD [tmp] 
; ∎ { 0'(= r ) 1'(= {| l |} ) }
; .dlt.ptn 2'(= a3◂ [ a16◂ [ a20◂ [ a17◂ [ ]{| l |}]]] )
	mov rdi,r8
	C_PUSH_REGS
	mov r8,rdi
	call LB_445
	C_POP_REGS
; .mov_ptn2 { 0'(= r ) 1'(= {| l |} ) } ⊢ { 0'(= r ) 1'(= {| l |} ) }
	ret
LB_440:
;; ?. 1'(= a25◂ [ a17◂ [ ]{| l |}] ) ⊢ 6(<7)◂2'(= r )
	mov QWORD [GBG_VCT+8*0],rdi
	mov r8,QWORD [rdi+8]
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_LN rdi
; » _^ .. ⊢ ..
; .. //
	mov rdi,0
	mov rsi,r13
	imul rsi,1
	add rdi,rsi 
	add rdi,5
	push rdi 
	call mlc_s8
	pop rdi
	mov r14,rax
	lea rdi,[rax+7+rdi]
	std 
	mov QWORD [tmp],rcx 
	lea rsi,[LB_465+5-1]
	mov rcx,5
	rep movsb
	mov rax,r13
LB_467:
	cmp rax,0
	jz LB_468
	sub rax,1
	lea rsi,[LB_466+1-1]
	mov rcx,1
	rep movsb 
	jmp LB_467
LB_468:
	mov rcx,QWORD [tmp] 
; ∎ { 0'(= r ) 1'(= {| l |} ) }
; .dlt.ptn 2'(= r )
	mov rdi,r8
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 { 0'(= r ) 1'(= {| l |} ) } ⊢ { 0'(= r ) 1'(= {| l |} ) }
	ret
ETR_136: ;; pnt_lc_line { 0'(= r ) 1'(= a27◂ [ a17◂ [ ]{| l |}] ) } ⊢ { 0'(= r ) 1'(= {| l |} ) } : ({ _r64 _t27◂_s8◂_t17 }→{ _r64 _s8 })
;; ?; 1'(= a27◂ [ a17◂ [ ]{| l |}] ) ⊢ 0(<4)◂{ 2'(= a17◂ [ ] ) 3'(= a16◂ [ a20◂ [ a17◂ [ ]{| l |}]] ) 4'(= a16◂ [ a21◂ [ {| l |}]] ) }
	mov rdi,r14
	cmp BYTE [rdi+6],0
	jnz LB_469
	mov r8, QWORD [r14+8]
	mov r9, QWORD [r14+16]
	mov r10, QWORD [r14+24]
	mov QWORD [GBG_VCT+8*0],r14
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_RCD 3,rdi
; #100 3'(= a16◂ [ a20◂ [ a17◂ [ ]{| l |}]] ) ⊢ 1'(= {| l |} )
	sub rsp,24
	mov QWORD [rsp+8*0],r13
	mov QWORD [rsp+8*1],r8
	mov QWORD [rsp+8*2],r10
; .mov_ptn2 3'(= a16◂ [ a20◂ [ a17◂ [ ]{| l |}]] ) ⊢ 0'(= a16◂ [ a20◂ [ a17◂ [ ]{| l |}]] )
; .mov_ptn 3'(= a16◂ [ a20◂ [ a17◂ [ ]{| l |}]] ) ⊢ 0'(= a16◂ [ a20◂ [ a17◂ [ ]{| l |}]] )
	mov rax,r9
	mov r13,rax
	call ETR_100
	mov r10,QWORD [rsp-8+8*3]
	mov r8,QWORD [rsp-8+8*2]
	mov r14,r13
	mov r13,QWORD [rsp-8+8*1]
	add rsp,24
; #102 4'(= a16◂ [ a21◂ [ {| l |}]] ) ⊢ 3'(= {| l |} )
	sub rsp,24
	mov QWORD [rsp+8*0],r13
	mov QWORD [rsp+8*1],r14
	mov QWORD [rsp+8*2],r8
; .mov_ptn2 4'(= a16◂ [ a21◂ [ {| l |}]] ) ⊢ 0'(= a16◂ [ a21◂ [ {| l |}]] )
; .mov_ptn 4'(= a16◂ [ a21◂ [ {| l |}]] ) ⊢ 0'(= a16◂ [ a21◂ [ {| l |}]] )
	mov rax,r10
	mov r13,rax
	call ETR_102
	mov r8,QWORD [rsp-8+8*3]
	mov r14,QWORD [rsp-8+8*2]
	mov r9,r13
	mov r13,QWORD [rsp-8+8*1]
	add rsp,24
; #85 2'(= a17◂ [ ] ) ⊢ 2'(= {| l |} )
	sub rsp,24
	mov QWORD [rsp+8*0],r13
	mov QWORD [rsp+8*1],r14
	mov QWORD [rsp+8*2],r9
; .mov_ptn2 2'(= a17◂ [ ] ) ⊢ 0'(= a17◂ [ ] )
; .mov_ptn 2'(= a17◂ [ ] ) ⊢ 0'(= a17◂ [ ] )
	mov rax,r8
	mov r13,rax
	call ETR_85
	mov r9,QWORD [rsp-8+8*3]
	mov r14,QWORD [rsp-8+8*2]
	mov r8,r13
	mov r13,QWORD [rsp-8+8*1]
	add rsp,24
; » _^ .. ⊢ ..
; .. //
	mov rdi,0
	mov rsi,r13
	imul rsi,1
	add rdi,rsi 
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[r8]
	add rdi,rax 
	push rax
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[r14]
	add rdi,rax 
	push rax
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[r9]
	add rdi,rax 
	push rax
	add rdi,7
	push rdi 
	call mlc_s8
	pop rdi
	mov r10,rax
	lea rdi,[rax+7+rdi]
	std 
	mov QWORD [tmp],rcx 
	lea rsi,[LB_470+1-1]
	mov rcx,1
	rep movsb
	pop rcx
	lea rsi,[r9+7+rcx]
	rep movsb
	lea rsi,[LB_471+5-1]
	mov rcx,5
	rep movsb
	pop rcx
	lea rsi,[r14+7+rcx]
	rep movsb
	lea rsi,[LB_472+1-1]
	mov rcx,1
	rep movsb
	pop rcx
	lea rsi,[r8+7+rcx]
	rep movsb
	mov rax,r13
LB_474:
	cmp rax,0
	jz LB_475
	sub rax,1
	lea rsi,[LB_473+1-1]
	mov rcx,1
	rep movsb 
	jmp LB_474
LB_475:
	mov rcx,QWORD [tmp] 
; ∎ { 0'(= r ) 4'(= {| l |} ) }
; .dlt.ptn 3'(= {| l |} )
	mov rdi,r9
	C_PUSH_REGS
	mov r8,rdi
	mov rdi,r8
	call free_s8
	C_POP_REGS
; .dlt.ptn 1'(= {| l |} )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	mov rdi,r8
	call free_s8
	C_POP_REGS
; .dlt.ptn 2'(= {| l |} )
	mov rdi,r8
	C_PUSH_REGS
	mov r8,rdi
	mov rdi,r8
	call free_s8
	C_POP_REGS
; .mov_ptn2 { 0'(= r ) 4'(= {| l |} ) } ⊢ { 0'(= r ) 1'(= {| l |} ) }
; .mov_ptn 4'(= {| l |} ) ⊢ 1'(= {| l |} )
	mov rax,r10
	mov r14,rax
	ret
LB_469:
;; ?; 1'(= a27◂ [ a17◂ [ ]{| l |}] ) ⊢ 1(<4)◂{ 2'(= a20◂ [ a17◂ [ ]{| l |}] ) 3'(= a16◂ [ a20◂ [ a17◂ [ ]{| l |}]] ) 4'(= a16◂ [ a21◂ [ {| l |}]] ) }
	mov rdi,r14
	cmp BYTE [rdi+6],1
	jnz LB_476
	mov r8, QWORD [r14+8]
	mov r9, QWORD [r14+16]
	mov r10, QWORD [r14+24]
	mov QWORD [GBG_VCT+8*0],r14
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_RCD 3,rdi
; #81 2'(= a20◂ [ a17◂ [ ]{| l |}] ) ⊢ 1(<2)◂2'(= a20◂ [ a17◂ [ ]{| l |}] )
; #100 1(<2)◂2'(= a20◂ [ a17◂ [ ]{| l |}] ) ⊢ 1'(= {| l |} )
	sub rsp,24
	mov QWORD [rsp+8*0],r13
	mov QWORD [rsp+8*1],r9
	mov QWORD [rsp+8*2],r10
; .mov_ptn2 1(<2)◂2'(= a20◂ [ a17◂ [ ]{| l |}] ) ⊢ 0'(= a16◂ [ a20◂ [ a17◂ [ ]{| l |}]] )
; .mov_ptn 1(<2)◂2'(= a20◂ [ a17◂ [ ]{| l |}] ) ⊢ 0'(= a16◂ [ a20◂ [ a17◂ [ ]{| l |}]] )
	mov rax,r8
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],1
	mov QWORD [rax+8],rdi
	mov r13,rax
	call ETR_100
	mov r10,QWORD [rsp-8+8*3]
	mov r9,QWORD [rsp-8+8*2]
	mov r14,r13
	mov r13,QWORD [rsp-8+8*1]
	add rsp,24
; #100 3'(= a16◂ [ a20◂ [ a17◂ [ ]{| l |}]] ) ⊢ 2'(= {| l |} )
	sub rsp,24
	mov QWORD [rsp+8*0],r13
	mov QWORD [rsp+8*1],r14
	mov QWORD [rsp+8*2],r10
; .mov_ptn2 3'(= a16◂ [ a20◂ [ a17◂ [ ]{| l |}]] ) ⊢ 0'(= a16◂ [ a20◂ [ a17◂ [ ]{| l |}]] )
; .mov_ptn 3'(= a16◂ [ a20◂ [ a17◂ [ ]{| l |}]] ) ⊢ 0'(= a16◂ [ a20◂ [ a17◂ [ ]{| l |}]] )
	mov rax,r9
	mov r13,rax
	call ETR_100
	mov r10,QWORD [rsp-8+8*3]
	mov r14,QWORD [rsp-8+8*2]
	mov r8,r13
	mov r13,QWORD [rsp-8+8*1]
	add rsp,24
; #102 4'(= a16◂ [ a21◂ [ {| l |}]] ) ⊢ 3'(= {| l |} )
	sub rsp,24
	mov QWORD [rsp+8*0],r13
	mov QWORD [rsp+8*1],r14
	mov QWORD [rsp+8*2],r8
; .mov_ptn2 4'(= a16◂ [ a21◂ [ {| l |}]] ) ⊢ 0'(= a16◂ [ a21◂ [ {| l |}]] )
; .mov_ptn 4'(= a16◂ [ a21◂ [ {| l |}]] ) ⊢ 0'(= a16◂ [ a21◂ [ {| l |}]] )
	mov rax,r10
	mov r13,rax
	call ETR_102
	mov r8,QWORD [rsp-8+8*3]
	mov r14,QWORD [rsp-8+8*2]
	mov r9,r13
	mov r13,QWORD [rsp-8+8*1]
	add rsp,24
; » _^ .. ⊢ ..
; .. //
	mov rdi,0
	mov rsi,r13
	imul rsi,1
	add rdi,rsi 
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[r14]
	add rdi,rax 
	push rax
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[r8]
	add rdi,rax 
	push rax
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[r9]
	add rdi,rax 
	push rax
	add rdi,11
	push rdi 
	call mlc_s8
	pop rdi
	mov r10,rax
	lea rdi,[rax+7+rdi]
	std 
	mov QWORD [tmp],rcx 
	lea rsi,[LB_477+1-1]
	mov rcx,1
	rep movsb
	pop rcx
	lea rsi,[r9+7+rcx]
	rep movsb
	lea rsi,[LB_478+5-1]
	mov rcx,5
	rep movsb
	pop rcx
	lea rsi,[r8+7+rcx]
	rep movsb
	lea rsi,[LB_479+1-1]
	mov rcx,1
	rep movsb
	pop rcx
	lea rsi,[r14+7+rcx]
	rep movsb
	lea rsi,[LB_480+4-1]
	mov rcx,4
	rep movsb
	mov rax,r13
LB_482:
	cmp rax,0
	jz LB_483
	sub rax,1
	lea rsi,[LB_481+1-1]
	mov rcx,1
	rep movsb 
	jmp LB_482
LB_483:
	mov rcx,QWORD [tmp] 
; ∎ { 0'(= r ) 4'(= {| l |} ) }
; .dlt.ptn 3'(= {| l |} )
	mov rdi,r9
	C_PUSH_REGS
	mov r8,rdi
	mov rdi,r8
	call free_s8
	C_POP_REGS
; .dlt.ptn 2'(= {| l |} )
	mov rdi,r8
	C_PUSH_REGS
	mov r8,rdi
	mov rdi,r8
	call free_s8
	C_POP_REGS
; .dlt.ptn 1'(= {| l |} )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	mov rdi,r8
	call free_s8
	C_POP_REGS
; .mov_ptn2 { 0'(= r ) 4'(= {| l |} ) } ⊢ { 0'(= r ) 1'(= {| l |} ) }
; .mov_ptn 4'(= {| l |} ) ⊢ 1'(= {| l |} )
	mov rax,r10
	mov r14,rax
	ret
LB_476:
;; ?; 1'(= a27◂ [ a17◂ [ ]{| l |}] ) ⊢ 2(<4)◂{ 2'(= a19◂ [ a17◂ [ ]] ) 3'(= a16◂ [ a20◂ [ a17◂ [ ]{| l |}]] ) 4'(= a16◂ [ a21◂ [ {| l |}]] ) }
	mov rdi,r14
	cmp BYTE [rdi+6],2
	jnz LB_484
	mov r8, QWORD [r14+8]
	mov r9, QWORD [r14+16]
	mov r10, QWORD [r14+24]
	mov QWORD [GBG_VCT+8*0],r14
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_RCD 3,rdi
; #100 3'(= a16◂ [ a20◂ [ a17◂ [ ]{| l |}]] ) ⊢ 1'(= {| l |} )
	sub rsp,24
	mov QWORD [rsp+8*0],r13
	mov QWORD [rsp+8*1],r8
	mov QWORD [rsp+8*2],r10
; .mov_ptn2 3'(= a16◂ [ a20◂ [ a17◂ [ ]{| l |}]] ) ⊢ 0'(= a16◂ [ a20◂ [ a17◂ [ ]{| l |}]] )
; .mov_ptn 3'(= a16◂ [ a20◂ [ a17◂ [ ]{| l |}]] ) ⊢ 0'(= a16◂ [ a20◂ [ a17◂ [ ]{| l |}]] )
	mov rax,r9
	mov r13,rax
	call ETR_100
	mov r10,QWORD [rsp-8+8*3]
	mov r8,QWORD [rsp-8+8*2]
	mov r14,r13
	mov r13,QWORD [rsp-8+8*1]
	add rsp,24
; #102 4'(= a16◂ [ a21◂ [ {| l |}]] ) ⊢ 3'(= {| l |} )
	sub rsp,24
	mov QWORD [rsp+8*0],r13
	mov QWORD [rsp+8*1],r14
	mov QWORD [rsp+8*2],r8
; .mov_ptn2 4'(= a16◂ [ a21◂ [ {| l |}]] ) ⊢ 0'(= a16◂ [ a21◂ [ {| l |}]] )
; .mov_ptn 4'(= a16◂ [ a21◂ [ {| l |}]] ) ⊢ 0'(= a16◂ [ a21◂ [ {| l |}]] )
	mov rax,r10
	mov r13,rax
	call ETR_102
	mov r8,QWORD [rsp-8+8*3]
	mov r14,QWORD [rsp-8+8*2]
	mov r9,r13
	mov r13,QWORD [rsp-8+8*1]
	add rsp,24
; #91 2'(= a19◂ [ a17◂ [ ]] ) ⊢ 2'(= {| l |} )
	sub rsp,24
	mov QWORD [rsp+8*0],r13
	mov QWORD [rsp+8*1],r14
	mov QWORD [rsp+8*2],r9
; .mov_ptn2 2'(= a19◂ [ a17◂ [ ]] ) ⊢ 0'(= a19◂ [ a17◂ [ ]] )
; .mov_ptn 2'(= a19◂ [ a17◂ [ ]] ) ⊢ 0'(= a19◂ [ a17◂ [ ]] )
	mov rax,r8
	mov r13,rax
	call ETR_91
	mov r9,QWORD [rsp-8+8*3]
	mov r14,QWORD [rsp-8+8*2]
	mov r8,r13
	mov r13,QWORD [rsp-8+8*1]
	add rsp,24
; » _^ .. ⊢ ..
; .. //
	mov rdi,0
	mov rsi,r13
	imul rsi,1
	add rdi,rsi 
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[r8]
	add rdi,rax 
	push rax
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[r14]
	add rdi,rax 
	push rax
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[r9]
	add rdi,rax 
	push rax
	add rdi,10
	push rdi 
	call mlc_s8
	pop rdi
	mov r10,rax
	lea rdi,[rax+7+rdi]
	std 
	mov QWORD [tmp],rcx 
	lea rsi,[LB_485+1-1]
	mov rcx,1
	rep movsb
	pop rcx
	lea rsi,[r9+7+rcx]
	rep movsb
	lea rsi,[LB_486+5-1]
	mov rcx,5
	rep movsb
	pop rcx
	lea rsi,[r14+7+rcx]
	rep movsb
	lea rsi,[LB_487+1-1]
	mov rcx,1
	rep movsb
	pop rcx
	lea rsi,[r8+7+rcx]
	rep movsb
	lea rsi,[LB_488+3-1]
	mov rcx,3
	rep movsb
	mov rax,r13
LB_490:
	cmp rax,0
	jz LB_491
	sub rax,1
	lea rsi,[LB_489+1-1]
	mov rcx,1
	rep movsb 
	jmp LB_490
LB_491:
	mov rcx,QWORD [tmp] 
; ∎ { 0'(= r ) 4'(= {| l |} ) }
; .dlt.ptn 3'(= {| l |} )
	mov rdi,r9
	C_PUSH_REGS
	mov r8,rdi
	mov rdi,r8
	call free_s8
	C_POP_REGS
; .dlt.ptn 1'(= {| l |} )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	mov rdi,r8
	call free_s8
	C_POP_REGS
; .dlt.ptn 2'(= {| l |} )
	mov rdi,r8
	C_PUSH_REGS
	mov r8,rdi
	mov rdi,r8
	call free_s8
	C_POP_REGS
; .mov_ptn2 { 0'(= r ) 4'(= {| l |} ) } ⊢ { 0'(= r ) 1'(= {| l |} ) }
; .mov_ptn 4'(= {| l |} ) ⊢ 1'(= {| l |} )
	mov rax,r10
	mov r14,rax
	ret
LB_484:
;; ?; 1'(= a27◂ [ a17◂ [ ]{| l |}] ) ⊢ 3(<4)◂{ 2'(= a2◂ [ a24◂ [ a17◂ [ ]]] ) 3'(= a2◂ [ a20◂ [ a17◂ [ ]{| l |}]] ) 4'(= a2◂ [ a21◂ [ {| l |}]] ) }
	mov r8, QWORD [r14+8]
	mov r9, QWORD [r14+16]
	mov r10, QWORD [r14+24]
	mov QWORD [GBG_VCT+8*0],r14
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_RCD 3,rdi
; » _^ .. ⊢ ..
; .. //
	mov rdi,0
	mov rsi,r13
	imul rsi,1
	add rdi,rsi 
	add rdi,23
	push rdi 
	call mlc_s8
	pop rdi
	mov r14,rax
	lea rdi,[rax+7+rdi]
	std 
	mov QWORD [tmp],rcx 
	lea rsi,[LB_492+23-1]
	mov rcx,23
	rep movsb
	mov rax,r13
LB_494:
	cmp rax,0
	jz LB_495
	sub rax,1
	lea rsi,[LB_493+1-1]
	mov rcx,1
	rep movsb 
	jmp LB_494
LB_495:
	mov rcx,QWORD [tmp] 
; ∎ { 0'(= r ) 1'(= {| l |} ) }
; .dlt.ptn 4'(= a2◂ [ a21◂ [ {| l |}]] )
	mov rdi,r10
	C_PUSH_REGS
	mov r8,rdi
	call LB_496
	C_POP_REGS
; .dlt.ptn 3'(= a2◂ [ a20◂ [ a17◂ [ ]{| l |}]] )
	mov rdi,r9
	C_PUSH_REGS
	mov r8,rdi
	call LB_497
	C_POP_REGS
; .dlt.ptn 2'(= a2◂ [ a24◂ [ a17◂ [ ]]] )
	mov rdi,r8
	C_PUSH_REGS
	mov r8,rdi
	call LB_498
	C_POP_REGS
; .mov_ptn2 { 0'(= r ) 1'(= {| l |} ) } ⊢ { 0'(= r ) 1'(= {| l |} ) }
	ret
ETR_137: ;; pnt_lc_mtc { 0'(= r ) 1'(= a15◂ [ *{ a2◂ [ a29◂ [ a17◂ [ ]{| l |}]]a28◂ [ a17◂ [ ]{| l |}]}] ) } ⊢ { 0'(= r ) 1'(= {| l |} ) } : ({ _r64 _t15◂{ _lst◂_t29◂_s8◂_t17 _t28◂_s8◂_t17 } }→{ _r64 _s8 })
;; ?; 1'(= a15◂ [ *{ a2◂ [ a29◂ [ a17◂ [ ]{| l |}]]a28◂ [ a17◂ [ ]{| l |}]}] ) ⊢ 0(<2)◂{ { 3'(= a2◂ [ a29◂ [ a17◂ [ ]{| l |}]] ) 4'(= a28◂ [ a17◂ [ ]{| l |}] ) } 5'(= a15◂ [ *{ a2◂ [ a29◂ [ a17◂ [ ]{| l |}]]a28◂ [ a17◂ [ ]{| l |}]}] ) }
	mov rdi,r14
	cmp BYTE [rdi+6],0
	jnz LB_530
	mov r8, QWORD [r14+8]
	mov r9, QWORD [r8+8]
	mov r10, QWORD [r8+16]
	mov QWORD [GBG_VCT+8*0],r8
	mov r11, QWORD [r14+16]
	mov QWORD [GBG_VCT+8*1],r14
	mov rdi,QWORD [GBG_VCT+8*1]
	FREE_RCD 2,rdi
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_RCD 2,rdi
; #137 { 0'(= r ) 5'(= a15◂ [ *{ a2◂ [ a29◂ [ a17◂ [ ]{| l |}]]a28◂ [ a17◂ [ ]{| l |}]}] ) } ⊢ { 0'(= r ) 1'(= {| l |} ) }
	sub rsp,16
	mov QWORD [rsp+8*0],r9
	mov QWORD [rsp+8*1],r10
; .mov_ptn2 { 0'(= r ) 5'(= a15◂ [ *{ a2◂ [ a29◂ [ a17◂ [ ]{| l |}]]a28◂ [ a17◂ [ ]{| l |}]}] ) } ⊢ { 0'(= r ) 1'(= a15◂ [ *{ a2◂ [ a29◂ [ a17◂ [ ]{| l |}]]a28◂ [ a17◂ [ ]{| l |}]}] ) }
; .mov_ptn 5'(= a15◂ [ *{ a2◂ [ a29◂ [ a17◂ [ ]{| l |}]]a28◂ [ a17◂ [ ]{| l |}]}] ) ⊢ 1'(= a15◂ [ *{ a2◂ [ a29◂ [ a17◂ [ ]{| l |}]]a28◂ [ a17◂ [ ]{| l |}]}] )
	mov rax,r11
	mov r14,rax
	call ETR_137
	mov r10,QWORD [rsp-8+8*2]
	mov r9,QWORD [rsp-8+8*1]
	add rsp,16
;; ? 4'(= a28◂ [ a17◂ [ ]{| l |}] ) ⊢ 0(<3)◂2'(= a15◂ [ *{ a2◂ [ a29◂ [ a17◂ [ ]{| l |}]]a28◂ [ a17◂ [ ]{| l |}]}] )
	mov rdi,r10
	cmp BYTE [rdi+6],0
	jnz LB_531
	mov QWORD [GBG_VCT+8*0],rdi
	mov r8,QWORD [rdi+8]
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_LN rdi
; #137 { 0'(= r ) 2'(= a15◂ [ *{ a2◂ [ a29◂ [ a17◂ [ ]{| l |}]]a28◂ [ a17◂ [ ]{| l |}]}] ) } ⊢ { 0'(= r ) 2'(= {| l |} ) }
	sub rsp,16
	mov QWORD [rsp+8*0],r14
	mov QWORD [rsp+8*1],r9
; .mov_ptn2 { 0'(= r ) 2'(= a15◂ [ *{ a2◂ [ a29◂ [ a17◂ [ ]{| l |}]]a28◂ [ a17◂ [ ]{| l |}]}] ) } ⊢ { 0'(= r ) 1'(= a15◂ [ *{ a2◂ [ a29◂ [ a17◂ [ ]{| l |}]]a28◂ [ a17◂ [ ]{| l |}]}] ) }
; .mov_ptn 2'(= a15◂ [ *{ a2◂ [ a29◂ [ a17◂ [ ]{| l |}]]a28◂ [ a17◂ [ ]{| l |}]}] ) ⊢ 1'(= a15◂ [ *{ a2◂ [ a29◂ [ a17◂ [ ]{| l |}]]a28◂ [ a17◂ [ ]{| l |}]}] )
	mov rax,r8
	mov r14,rax
	call ETR_137
	mov r9,QWORD [rsp-8+8*2]
	mov r8,r14
	mov r14,QWORD [rsp-8+8*1]
	add rsp,16
; » _^ .. ⊢ ..
; .. //
	mov rdi,0
	mov rsi,r13
	imul rsi,1
	add rdi,rsi 
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[r8]
	add rdi,rax 
	push rax
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[r14]
	add rdi,rax 
	push rax
	add rdi,9
	push rdi 
	call mlc_s8
	pop rdi
	mov r10,rax
	lea rdi,[rax+7+rdi]
	std 
	mov QWORD [tmp],rcx 
	pop rcx
	lea rsi,[r14+7+rcx]
	rep movsb
	pop rcx
	lea rsi,[r8+7+rcx]
	rep movsb
	lea rsi,[LB_532+9-1]
	mov rcx,9
	rep movsb
	mov rax,r13
LB_534:
	cmp rax,0
	jz LB_535
	sub rax,1
	lea rsi,[LB_533+1-1]
	mov rcx,1
	rep movsb 
	jmp LB_534
LB_535:
	mov rcx,QWORD [tmp] 
; ∎ { 0'(= r ) 4'(= {| l |} ) }
; .dlt.ptn 2'(= {| l |} )
	mov rdi,r8
	C_PUSH_REGS
	mov r8,rdi
	mov rdi,r8
	call free_s8
	C_POP_REGS
; .dlt.ptn 1'(= {| l |} )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	mov rdi,r8
	call free_s8
	C_POP_REGS
; .dlt.ptn 3'(= a2◂ [ a29◂ [ a17◂ [ ]{| l |}]] )
	mov rdi,r9
	C_PUSH_REGS
	mov r8,rdi
	call LB_536
	C_POP_REGS
; .mov_ptn2 { 0'(= r ) 4'(= {| l |} ) } ⊢ { 0'(= r ) 1'(= {| l |} ) }
; .mov_ptn 4'(= {| l |} ) ⊢ 1'(= {| l |} )
	mov rax,r10
	mov r14,rax
	ret
LB_531:
;; ? 4'(= a28◂ [ a17◂ [ ]{| l |}] ) ⊢ 1(<3)◂{ 2'(= a16◂ [ a20◂ [ a17◂ [ ]{| l |}]] ) 5'(= a15◂ [ *{ a16◂ [ a22◂ [ a17◂ [ ]{| l |}]]a2◂ [ a29◂ [ a17◂ [ ]{| l |}]]a28◂ [ a17◂ [ ]{| l |}]}] ) }
	mov rdi,r10
	cmp BYTE [rdi+6],1
	jnz LB_552
	mov r8, QWORD [r10+8]
	mov r11, QWORD [r10+16]
	mov QWORD [GBG_VCT+8*0],r10
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_RCD 2,rdi
; #100 2'(= a16◂ [ a20◂ [ a17◂ [ ]{| l |}]] ) ⊢ 2'(= {| l |} )
	sub rsp,32
	mov QWORD [rsp+8*0],r13
	mov QWORD [rsp+8*1],r14
	mov QWORD [rsp+8*2],r9
	mov QWORD [rsp+8*3],r11
; .mov_ptn2 2'(= a16◂ [ a20◂ [ a17◂ [ ]{| l |}]] ) ⊢ 0'(= a16◂ [ a20◂ [ a17◂ [ ]{| l |}]] )
; .mov_ptn 2'(= a16◂ [ a20◂ [ a17◂ [ ]{| l |}]] ) ⊢ 0'(= a16◂ [ a20◂ [ a17◂ [ ]{| l |}]] )
	mov rax,r8
	mov r13,rax
	call ETR_100
	mov r11,QWORD [rsp-8+8*4]
	mov r9,QWORD [rsp-8+8*3]
	mov r14,QWORD [rsp-8+8*2]
	mov r8,r13
	mov r13,QWORD [rsp-8+8*1]
	add rsp,32
; #138 { 0'(= r ) 5'(= a15◂ [ *{ a16◂ [ a22◂ [ a17◂ [ ]{| l |}]]a2◂ [ a29◂ [ a17◂ [ ]{| l |}]]a28◂ [ a17◂ [ ]{| l |}]}] ) } ⊢ { 0'(= r ) 4'(= {| l |} ) }
	sub rsp,24
	mov QWORD [rsp+8*0],r14
	mov QWORD [rsp+8*1],r8
	mov QWORD [rsp+8*2],r9
; .mov_ptn2 { 0'(= r ) 5'(= a15◂ [ *{ a16◂ [ a22◂ [ a17◂ [ ]{| l |}]]a2◂ [ a29◂ [ a17◂ [ ]{| l |}]]a28◂ [ a17◂ [ ]{| l |}]}] ) } ⊢ { 0'(= r ) 1'(= a15◂ [ *{ a16◂ [ a22◂ [ a17◂ [ ]{| l |}]]a2◂ [ a29◂ [ a17◂ [ ]{| l |}]]a28◂ [ a17◂ [ ]{| l |}]}] ) }
; .mov_ptn 5'(= a15◂ [ *{ a16◂ [ a22◂ [ a17◂ [ ]{| l |}]]a2◂ [ a29◂ [ a17◂ [ ]{| l |}]]a28◂ [ a17◂ [ ]{| l |}]}] ) ⊢ 1'(= a15◂ [ *{ a16◂ [ a22◂ [ a17◂ [ ]{| l |}]]a2◂ [ a29◂ [ a17◂ [ ]{| l |}]]a28◂ [ a17◂ [ ]{| l |}]}] )
	mov rax,r11
	mov r14,rax
	call ETR_138
	mov r9,QWORD [rsp-8+8*3]
	mov r8,QWORD [rsp-8+8*2]
	mov r10,r14
	mov r14,QWORD [rsp-8+8*1]
	add rsp,24
; » _^ .. ⊢ ..
; .. //
	mov rdi,0
	mov rsi,r13
	imul rsi,1
	add rdi,rsi 
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[r8]
	add rdi,rax 
	push rax
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[r10]
	add rdi,rax 
	push rax
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[r14]
	add rdi,rax 
	push rax
	add rdi,14
	push rdi 
	call mlc_s8
	pop rdi
	mov r11,rax
	lea rdi,[rax+7+rdi]
	std 
	mov QWORD [tmp],rcx 
	pop rcx
	lea rsi,[r14+7+rcx]
	rep movsb
	pop rcx
	lea rsi,[r10+7+rcx]
	rep movsb
	lea rsi,[LB_553+5-1]
	mov rcx,5
	rep movsb
	pop rcx
	lea rsi,[r8+7+rcx]
	rep movsb
	lea rsi,[LB_554+9-1]
	mov rcx,9
	rep movsb
	mov rax,r13
LB_556:
	cmp rax,0
	jz LB_557
	sub rax,1
	lea rsi,[LB_555+1-1]
	mov rcx,1
	rep movsb 
	jmp LB_556
LB_557:
	mov rcx,QWORD [tmp] 
; ∎ { 0'(= r ) 5'(= {| l |} ) }
; .dlt.ptn 4'(= {| l |} )
	mov rdi,r10
	C_PUSH_REGS
	mov r8,rdi
	mov rdi,r8
	call free_s8
	C_POP_REGS
; .dlt.ptn 1'(= {| l |} )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	mov rdi,r8
	call free_s8
	C_POP_REGS
; .dlt.ptn 2'(= {| l |} )
	mov rdi,r8
	C_PUSH_REGS
	mov r8,rdi
	mov rdi,r8
	call free_s8
	C_POP_REGS
; .dlt.ptn 3'(= a2◂ [ a29◂ [ a17◂ [ ]{| l |}]] )
	mov rdi,r9
	C_PUSH_REGS
	mov r8,rdi
	call LB_536
	C_POP_REGS
; .mov_ptn2 { 0'(= r ) 5'(= {| l |} ) } ⊢ { 0'(= r ) 1'(= {| l |} ) }
; .mov_ptn 5'(= {| l |} ) ⊢ 1'(= {| l |} )
	mov rax,r11
	mov r14,rax
	ret
LB_552:
;; ?. 4'(= a28◂ [ a17◂ [ ]{| l |}] ) ⊢ 2(<3)◂2'(= a25◂ [ a17◂ [ ]{| l |}] )
	mov QWORD [GBG_VCT+8*0],rdi
	mov r8,QWORD [rdi+8]
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_LN rdi
; #11 0'(= r ) ⊢ 0'(= r )
	add r13,1
; #135 { 0'(= r ) 2'(= a25◂ [ a17◂ [ ]{| l |}] ) } ⊢ { 0'(= r ) 2'(= {| l |} ) }
	sub rsp,16
	mov QWORD [rsp+8*0],r14
	mov QWORD [rsp+8*1],r9
; .mov_ptn2 { 0'(= r ) 2'(= a25◂ [ a17◂ [ ]{| l |}] ) } ⊢ { 0'(= r ) 1'(= a25◂ [ a17◂ [ ]{| l |}] ) }
; .mov_ptn 2'(= a25◂ [ a17◂ [ ]{| l |}] ) ⊢ 1'(= a25◂ [ a17◂ [ ]{| l |}] )
	mov rax,r8
	mov r14,rax
	call ETR_135
	mov r9,QWORD [rsp-8+8*2]
	mov r8,r14
	mov r14,QWORD [rsp-8+8*1]
	add rsp,16
; #12 0'(= r ) ⊢ 0'(= r )
	sub r13,1
; » _^ .. ⊢ ..
; .. //
	mov rdi,0
	mov rsi,r13
	imul rsi,1
	add rdi,rsi 
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[r8]
	add rdi,rax 
	push rax
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[r14]
	add rdi,rax 
	push rax
	add rdi,9
	push rdi 
	call mlc_s8
	pop rdi
	mov r10,rax
	lea rdi,[rax+7+rdi]
	std 
	mov QWORD [tmp],rcx 
	pop rcx
	lea rsi,[r14+7+rcx]
	rep movsb
	pop rcx
	lea rsi,[r8+7+rcx]
	rep movsb
	lea rsi,[LB_558+9-1]
	mov rcx,9
	rep movsb
	mov rax,r13
LB_560:
	cmp rax,0
	jz LB_561
	sub rax,1
	lea rsi,[LB_559+1-1]
	mov rcx,1
	rep movsb 
	jmp LB_560
LB_561:
	mov rcx,QWORD [tmp] 
; ∎ { 0'(= r ) 4'(= {| l |} ) }
; .dlt.ptn 2'(= {| l |} )
	mov rdi,r8
	C_PUSH_REGS
	mov r8,rdi
	mov rdi,r8
	call free_s8
	C_POP_REGS
; .dlt.ptn 1'(= {| l |} )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	mov rdi,r8
	call free_s8
	C_POP_REGS
; .dlt.ptn 3'(= a2◂ [ a29◂ [ a17◂ [ ]{| l |}]] )
	mov rdi,r9
	C_PUSH_REGS
	mov r8,rdi
	call LB_536
	C_POP_REGS
; .mov_ptn2 { 0'(= r ) 4'(= {| l |} ) } ⊢ { 0'(= r ) 1'(= {| l |} ) }
; .mov_ptn 4'(= {| l |} ) ⊢ 1'(= {| l |} )
	mov rax,r10
	mov r14,rax
	ret
LB_530:
;; ?; 1'(= a15◂ [ *{ a2◂ [ a29◂ [ a17◂ [ ]{| l |}]]a28◂ [ a17◂ [ ]{| l |}]}] ) ⊢ 1(<2)◂{ 2'(= a2◂ [ a29◂ [ a17◂ [ ]{| l |}]] ) 3'(= a28◂ [ a17◂ [ ]{| l |}] ) }
	mov r8, QWORD [r14+8]
	mov r9, QWORD [r14+16]
	mov QWORD [GBG_VCT+8*0],r14
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_RCD 2,rdi
;; ?; 3'(= a28◂ [ a17◂ [ ]{| l |}] ) ⊢ 0(<3)◂1'(= a15◂ [ *{ a2◂ [ a29◂ [ a17◂ [ ]{| l |}]]a28◂ [ a17◂ [ ]{| l |}]}] )
	mov rdi,r9
	cmp BYTE [rdi+6],0
	jnz LB_562
	mov QWORD [GBG_VCT+8*0],rdi
	mov r14,QWORD [rdi+8]
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_LN rdi
; #137 { 0'(= r ) 1'(= a15◂ [ *{ a2◂ [ a29◂ [ a17◂ [ ]{| l |}]]a28◂ [ a17◂ [ ]{| l |}]}] ) } ⊢ { 0'(= r ) 1'(= {| l |} ) }
	sub rsp,8
	mov QWORD [rsp+8*0],r8
; .mov_ptn2 { 0'(= r ) 1'(= a15◂ [ *{ a2◂ [ a29◂ [ a17◂ [ ]{| l |}]]a28◂ [ a17◂ [ ]{| l |}]}] ) } ⊢ { 0'(= r ) 1'(= a15◂ [ *{ a2◂ [ a29◂ [ a17◂ [ ]{| l |}]]a28◂ [ a17◂ [ ]{| l |}]}] ) }
	call ETR_137
	mov r8,QWORD [rsp-8+8*1]
	add rsp,8
; » _^ .. ⊢ ..
; .. //
	mov rdi,0
	mov rsi,r13
	imul rsi,1
	add rdi,rsi 
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[r14]
	add rdi,rax 
	push rax
	add rdi,10
	push rdi 
	call mlc_s8
	pop rdi
	mov r9,rax
	lea rdi,[rax+7+rdi]
	std 
	mov QWORD [tmp],rcx 
	pop rcx
	lea rsi,[r14+7+rcx]
	rep movsb
	lea rsi,[LB_563+10-1]
	mov rcx,10
	rep movsb
	mov rax,r13
LB_565:
	cmp rax,0
	jz LB_566
	sub rax,1
	lea rsi,[LB_564+1-1]
	mov rcx,1
	rep movsb 
	jmp LB_565
LB_566:
	mov rcx,QWORD [tmp] 
; ∎ { 0'(= r ) 3'(= {| l |} ) }
; .dlt.ptn 1'(= {| l |} )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	mov rdi,r8
	call free_s8
	C_POP_REGS
; .dlt.ptn 2'(= a2◂ [ a29◂ [ a17◂ [ ]{| l |}]] )
	mov rdi,r8
	C_PUSH_REGS
	mov r8,rdi
	call LB_536
	C_POP_REGS
; .mov_ptn2 { 0'(= r ) 3'(= {| l |} ) } ⊢ { 0'(= r ) 1'(= {| l |} ) }
; .mov_ptn 3'(= {| l |} ) ⊢ 1'(= {| l |} )
	mov rax,r9
	mov r14,rax
	ret
LB_562:
;; ?; 3'(= a28◂ [ a17◂ [ ]{| l |}] ) ⊢ 1(<3)◂{ 1'(= a16◂ [ a20◂ [ a17◂ [ ]{| l |}]] ) 4'(= a15◂ [ *{ a16◂ [ a22◂ [ a17◂ [ ]{| l |}]]a2◂ [ a29◂ [ a17◂ [ ]{| l |}]]a28◂ [ a17◂ [ ]{| l |}]}] ) }
	mov rdi,r9
	cmp BYTE [rdi+6],1
	jnz LB_567
	mov r14, QWORD [r9+8]
	mov r10, QWORD [r9+16]
	mov QWORD [GBG_VCT+8*0],r9
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_RCD 2,rdi
; #100 1'(= a16◂ [ a20◂ [ a17◂ [ ]{| l |}]] ) ⊢ 1'(= {| l |} )
	sub rsp,24
	mov QWORD [rsp+8*0],r13
	mov QWORD [rsp+8*1],r8
	mov QWORD [rsp+8*2],r10
; .mov_ptn2 1'(= a16◂ [ a20◂ [ a17◂ [ ]{| l |}]] ) ⊢ 0'(= a16◂ [ a20◂ [ a17◂ [ ]{| l |}]] )
; .mov_ptn 1'(= a16◂ [ a20◂ [ a17◂ [ ]{| l |}]] ) ⊢ 0'(= a16◂ [ a20◂ [ a17◂ [ ]{| l |}]] )
	mov rax,r14
	mov r13,rax
	call ETR_100
	mov r10,QWORD [rsp-8+8*3]
	mov r8,QWORD [rsp-8+8*2]
	mov r14,r13
	mov r13,QWORD [rsp-8+8*1]
	add rsp,24
; #138 { 0'(= r ) 4'(= a15◂ [ *{ a16◂ [ a22◂ [ a17◂ [ ]{| l |}]]a2◂ [ a29◂ [ a17◂ [ ]{| l |}]]a28◂ [ a17◂ [ ]{| l |}]}] ) } ⊢ { 0'(= r ) 3'(= {| l |} ) }
	sub rsp,16
	mov QWORD [rsp+8*0],r14
	mov QWORD [rsp+8*1],r8
; .mov_ptn2 { 0'(= r ) 4'(= a15◂ [ *{ a16◂ [ a22◂ [ a17◂ [ ]{| l |}]]a2◂ [ a29◂ [ a17◂ [ ]{| l |}]]a28◂ [ a17◂ [ ]{| l |}]}] ) } ⊢ { 0'(= r ) 1'(= a15◂ [ *{ a16◂ [ a22◂ [ a17◂ [ ]{| l |}]]a2◂ [ a29◂ [ a17◂ [ ]{| l |}]]a28◂ [ a17◂ [ ]{| l |}]}] ) }
; .mov_ptn 4'(= a15◂ [ *{ a16◂ [ a22◂ [ a17◂ [ ]{| l |}]]a2◂ [ a29◂ [ a17◂ [ ]{| l |}]]a28◂ [ a17◂ [ ]{| l |}]}] ) ⊢ 1'(= a15◂ [ *{ a16◂ [ a22◂ [ a17◂ [ ]{| l |}]]a2◂ [ a29◂ [ a17◂ [ ]{| l |}]]a28◂ [ a17◂ [ ]{| l |}]}] )
	mov rax,r10
	mov r14,rax
	call ETR_138
	mov r8,QWORD [rsp-8+8*2]
	mov r9,r14
	mov r14,QWORD [rsp-8+8*1]
	add rsp,16
; » _^ .. ⊢ ..
; .. //
	mov rdi,0
	mov rsi,r13
	imul rsi,1
	add rdi,rsi 
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[r14]
	add rdi,rax 
	push rax
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[r9]
	add rdi,rax 
	push rax
	add rdi,14
	push rdi 
	call mlc_s8
	pop rdi
	mov r10,rax
	lea rdi,[rax+7+rdi]
	std 
	mov QWORD [tmp],rcx 
	pop rcx
	lea rsi,[r9+7+rcx]
	rep movsb
	lea rsi,[LB_568+5-1]
	mov rcx,5
	rep movsb
	pop rcx
	lea rsi,[r14+7+rcx]
	rep movsb
	lea rsi,[LB_569+9-1]
	mov rcx,9
	rep movsb
	mov rax,r13
LB_571:
	cmp rax,0
	jz LB_572
	sub rax,1
	lea rsi,[LB_570+1-1]
	mov rcx,1
	rep movsb 
	jmp LB_571
LB_572:
	mov rcx,QWORD [tmp] 
; ∎ { 0'(= r ) 4'(= {| l |} ) }
; .dlt.ptn 3'(= {| l |} )
	mov rdi,r9
	C_PUSH_REGS
	mov r8,rdi
	mov rdi,r8
	call free_s8
	C_POP_REGS
; .dlt.ptn 1'(= {| l |} )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	mov rdi,r8
	call free_s8
	C_POP_REGS
; .dlt.ptn 2'(= a2◂ [ a29◂ [ a17◂ [ ]{| l |}]] )
	mov rdi,r8
	C_PUSH_REGS
	mov r8,rdi
	call LB_536
	C_POP_REGS
; .mov_ptn2 { 0'(= r ) 4'(= {| l |} ) } ⊢ { 0'(= r ) 1'(= {| l |} ) }
; .mov_ptn 4'(= {| l |} ) ⊢ 1'(= {| l |} )
	mov rax,r10
	mov r14,rax
	ret
LB_567:
;; ?; 3'(= a28◂ [ a17◂ [ ]{| l |}] ) ⊢ 2(<3)◂1'(= a25◂ [ a17◂ [ ]{| l |}] )
	mov QWORD [GBG_VCT+8*0],rdi
	mov r14,QWORD [rdi+8]
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_LN rdi
; #11 0'(= r ) ⊢ 0'(= r )
	add r13,1
; #135 { 0'(= r ) 1'(= a25◂ [ a17◂ [ ]{| l |}] ) } ⊢ { 0'(= r ) 1'(= {| l |} ) }
	sub rsp,8
	mov QWORD [rsp+8*0],r8
; .mov_ptn2 { 0'(= r ) 1'(= a25◂ [ a17◂ [ ]{| l |}] ) } ⊢ { 0'(= r ) 1'(= a25◂ [ a17◂ [ ]{| l |}] ) }
	call ETR_135
	mov r8,QWORD [rsp-8+8*1]
	add rsp,8
; #12 0'(= r ) ⊢ 0'(= r )
	sub r13,1
; » _^ .. ⊢ ..
; .. //
	mov rdi,0
	mov rsi,r13
	imul rsi,1
	add rdi,rsi 
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[r14]
	add rdi,rax 
	push rax
	add rdi,10
	push rdi 
	call mlc_s8
	pop rdi
	mov r9,rax
	lea rdi,[rax+7+rdi]
	std 
	mov QWORD [tmp],rcx 
	pop rcx
	lea rsi,[r14+7+rcx]
	rep movsb
	lea rsi,[LB_573+10-1]
	mov rcx,10
	rep movsb
	mov rax,r13
LB_575:
	cmp rax,0
	jz LB_576
	sub rax,1
	lea rsi,[LB_574+1-1]
	mov rcx,1
	rep movsb 
	jmp LB_575
LB_576:
	mov rcx,QWORD [tmp] 
; ∎ { 0'(= r ) 3'(= {| l |} ) }
; .dlt.ptn 1'(= {| l |} )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	mov rdi,r8
	call free_s8
	C_POP_REGS
; .dlt.ptn 2'(= a2◂ [ a29◂ [ a17◂ [ ]{| l |}]] )
	mov rdi,r8
	C_PUSH_REGS
	mov r8,rdi
	call LB_536
	C_POP_REGS
; .mov_ptn2 { 0'(= r ) 3'(= {| l |} ) } ⊢ { 0'(= r ) 1'(= {| l |} ) }
; .mov_ptn 3'(= {| l |} ) ⊢ 1'(= {| l |} )
	mov rax,r9
	mov r14,rax
	ret
ETR_138: ;; pnt_lc_id_mtc { 0'(= r ) 1'(= a15◂ [ *{ a16◂ [ a22◂ [ a17◂ [ ]{| l |}]]a2◂ [ a29◂ [ a17◂ [ ]{| l |}]]a28◂ [ a17◂ [ ]{| l |}]}] ) } ⊢ { 0'(= r ) 1'(= {| l |} ) } : ({ _r64 _t15◂{ _t16◂_t22◂_s8◂_t17 _lst◂_t29◂_s8◂_t17 _t28◂_s8◂_t17 } }→{ _r64 _s8 })
;; ?; 1'(= a15◂ [ *{ a16◂ [ a22◂ [ a17◂ [ ]{| l |}]]a2◂ [ a29◂ [ a17◂ [ ]{| l |}]]a28◂ [ a17◂ [ ]{| l |}]}] ) ⊢ 0(<2)◂{ { 3'(= a16◂ [ a22◂ [ a17◂ [ ]{| l |}]] ) 4'(= a2◂ [ a29◂ [ a17◂ [ ]{| l |}]] ) 5'(= a28◂ [ a17◂ [ ]{| l |}] ) } 6'(= a15◂ [ *{ a16◂ [ a22◂ [ a17◂ [ ]{| l |}]]a2◂ [ a29◂ [ a17◂ [ ]{| l |}]]a28◂ [ a17◂ [ ]{| l |}]}] ) }
	mov rdi,r14
	cmp BYTE [rdi+6],0
	jnz LB_577
	mov r8, QWORD [r14+8]
	mov r9, QWORD [r8+8]
	mov r10, QWORD [r8+16]
	mov r11, QWORD [r8+24]
	mov QWORD [GBG_VCT+8*0],r8
	mov rcx, QWORD [r14+16]
	mov QWORD [GBG_VCT+8*1],r14
	mov rdi,QWORD [GBG_VCT+8*1]
	FREE_RCD 2,rdi
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_RCD 3,rdi
; #104 3'(= a16◂ [ a22◂ [ a17◂ [ ]{| l |}]] ) ⊢ 1'(= {| l |} )
	sub rsp,32
	mov QWORD [rsp+8*0],r13
	mov QWORD [rsp+8*1],r10
	mov QWORD [rsp+8*2],r11
	mov QWORD [rsp+8*3],rcx
; .mov_ptn2 3'(= a16◂ [ a22◂ [ a17◂ [ ]{| l |}]] ) ⊢ 0'(= a16◂ [ a22◂ [ a17◂ [ ]{| l |}]] )
; .mov_ptn 3'(= a16◂ [ a22◂ [ a17◂ [ ]{| l |}]] ) ⊢ 0'(= a16◂ [ a22◂ [ a17◂ [ ]{| l |}]] )
	mov rax,r9
	mov r13,rax
	call ETR_104
	mov rcx,QWORD [rsp-8+8*4]
	mov r11,QWORD [rsp-8+8*3]
	mov r10,QWORD [rsp-8+8*2]
	mov r14,r13
	mov r13,QWORD [rsp-8+8*1]
	add rsp,32
; #138 { 0'(= r ) 6'(= a15◂ [ *{ a16◂ [ a22◂ [ a17◂ [ ]{| l |}]]a2◂ [ a29◂ [ a17◂ [ ]{| l |}]]a28◂ [ a17◂ [ ]{| l |}]}] ) } ⊢ { 0'(= r ) 2'(= {| l |} ) }
	sub rsp,24
	mov QWORD [rsp+8*0],r14
	mov QWORD [rsp+8*1],r10
	mov QWORD [rsp+8*2],r11
; .mov_ptn2 { 0'(= r ) 6'(= a15◂ [ *{ a16◂ [ a22◂ [ a17◂ [ ]{| l |}]]a2◂ [ a29◂ [ a17◂ [ ]{| l |}]]a28◂ [ a17◂ [ ]{| l |}]}] ) } ⊢ { 0'(= r ) 1'(= a15◂ [ *{ a16◂ [ a22◂ [ a17◂ [ ]{| l |}]]a2◂ [ a29◂ [ a17◂ [ ]{| l |}]]a28◂ [ a17◂ [ ]{| l |}]}] ) }
; .mov_ptn 6'(= a15◂ [ *{ a16◂ [ a22◂ [ a17◂ [ ]{| l |}]]a2◂ [ a29◂ [ a17◂ [ ]{| l |}]]a28◂ [ a17◂ [ ]{| l |}]}] ) ⊢ 1'(= a15◂ [ *{ a16◂ [ a22◂ [ a17◂ [ ]{| l |}]]a2◂ [ a29◂ [ a17◂ [ ]{| l |}]]a28◂ [ a17◂ [ ]{| l |}]}] )
	mov rax,rcx
	mov r14,rax
	call ETR_138
	mov r11,QWORD [rsp-8+8*3]
	mov r10,QWORD [rsp-8+8*2]
	mov r8,r14
	mov r14,QWORD [rsp-8+8*1]
	add rsp,24
;; ? 5'(= a28◂ [ a17◂ [ ]{| l |}] ) ⊢ 0(<3)◂3'(= a15◂ [ *{ a2◂ [ a29◂ [ a17◂ [ ]{| l |}]]a28◂ [ a17◂ [ ]{| l |}]}] )
	mov rdi,r11
	cmp BYTE [rdi+6],0
	jnz LB_578
	mov QWORD [GBG_VCT+8*0],rdi
	mov r9,QWORD [rdi+8]
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_LN rdi
; #137 { 0'(= r ) 3'(= a15◂ [ *{ a2◂ [ a29◂ [ a17◂ [ ]{| l |}]]a28◂ [ a17◂ [ ]{| l |}]}] ) } ⊢ { 0'(= r ) 3'(= {| l |} ) }
	sub rsp,24
	mov QWORD [rsp+8*0],r14
	mov QWORD [rsp+8*1],r8
	mov QWORD [rsp+8*2],r10
; .mov_ptn2 { 0'(= r ) 3'(= a15◂ [ *{ a2◂ [ a29◂ [ a17◂ [ ]{| l |}]]a28◂ [ a17◂ [ ]{| l |}]}] ) } ⊢ { 0'(= r ) 1'(= a15◂ [ *{ a2◂ [ a29◂ [ a17◂ [ ]{| l |}]]a28◂ [ a17◂ [ ]{| l |}]}] ) }
; .mov_ptn 3'(= a15◂ [ *{ a2◂ [ a29◂ [ a17◂ [ ]{| l |}]]a28◂ [ a17◂ [ ]{| l |}]}] ) ⊢ 1'(= a15◂ [ *{ a2◂ [ a29◂ [ a17◂ [ ]{| l |}]]a28◂ [ a17◂ [ ]{| l |}]}] )
	mov rax,r9
	mov r14,rax
	call ETR_137
	mov r10,QWORD [rsp-8+8*3]
	mov r8,QWORD [rsp-8+8*2]
	mov r9,r14
	mov r14,QWORD [rsp-8+8*1]
	add rsp,24
; » _^ .. ⊢ ..
; .. //
	mov rdi,0
	mov rsi,r13
	imul rsi,1
	add rdi,rsi 
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[r14]
	add rdi,rax 
	push rax
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[r9]
	add rdi,rax 
	push rax
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[r8]
	add rdi,rax 
	push rax
	add rdi,9
	push rdi 
	call mlc_s8
	pop rdi
	mov r11,rax
	lea rdi,[rax+7+rdi]
	std 
	mov QWORD [tmp],rcx 
	pop rcx
	lea rsi,[r8+7+rcx]
	rep movsb
	pop rcx
	lea rsi,[r9+7+rcx]
	rep movsb
	lea rsi,[LB_579+5-1]
	mov rcx,5
	rep movsb
	pop rcx
	lea rsi,[r14+7+rcx]
	rep movsb
	lea rsi,[LB_580+4-1]
	mov rcx,4
	rep movsb
	mov rax,r13
LB_582:
	cmp rax,0
	jz LB_583
	sub rax,1
	lea rsi,[LB_581+1-1]
	mov rcx,1
	rep movsb 
	jmp LB_582
LB_583:
	mov rcx,QWORD [tmp] 
; ∎ { 0'(= r ) 5'(= {| l |} ) }
; .dlt.ptn 3'(= {| l |} )
	mov rdi,r9
	C_PUSH_REGS
	mov r8,rdi
	mov rdi,r8
	call free_s8
	C_POP_REGS
; .dlt.ptn 2'(= {| l |} )
	mov rdi,r8
	C_PUSH_REGS
	mov r8,rdi
	mov rdi,r8
	call free_s8
	C_POP_REGS
; .dlt.ptn 1'(= {| l |} )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	mov rdi,r8
	call free_s8
	C_POP_REGS
; .dlt.ptn 4'(= a2◂ [ a29◂ [ a17◂ [ ]{| l |}]] )
	mov rdi,r10
	C_PUSH_REGS
	mov r8,rdi
	call LB_536
	C_POP_REGS
; .mov_ptn2 { 0'(= r ) 5'(= {| l |} ) } ⊢ { 0'(= r ) 1'(= {| l |} ) }
; .mov_ptn 5'(= {| l |} ) ⊢ 1'(= {| l |} )
	mov rax,r11
	mov r14,rax
	ret
LB_578:
;; ? 5'(= a28◂ [ a17◂ [ ]{| l |}] ) ⊢ 1(<3)◂{ 3'(= a16◂ [ a20◂ [ a17◂ [ ]{| l |}]] ) 6'(= a15◂ [ *{ a16◂ [ a22◂ [ a17◂ [ ]{| l |}]]a2◂ [ a29◂ [ a17◂ [ ]{| l |}]]a28◂ [ a17◂ [ ]{| l |}]}] ) }
	mov rdi,r11
	cmp BYTE [rdi+6],1
	jnz LB_584
	mov r9, QWORD [r11+8]
	mov rcx, QWORD [r11+16]
	mov QWORD [GBG_VCT+8*0],r11
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_RCD 2,rdi
; #100 3'(= a16◂ [ a20◂ [ a17◂ [ ]{| l |}]] ) ⊢ 3'(= {| l |} )
	sub rsp,40
	mov QWORD [rsp+8*0],r13
	mov QWORD [rsp+8*1],r14
	mov QWORD [rsp+8*2],r8
	mov QWORD [rsp+8*3],r10
	mov QWORD [rsp+8*4],rcx
; .mov_ptn2 3'(= a16◂ [ a20◂ [ a17◂ [ ]{| l |}]] ) ⊢ 0'(= a16◂ [ a20◂ [ a17◂ [ ]{| l |}]] )
; .mov_ptn 3'(= a16◂ [ a20◂ [ a17◂ [ ]{| l |}]] ) ⊢ 0'(= a16◂ [ a20◂ [ a17◂ [ ]{| l |}]] )
	mov rax,r9
	mov r13,rax
	call ETR_100
	mov rcx,QWORD [rsp-8+8*5]
	mov r10,QWORD [rsp-8+8*4]
	mov r8,QWORD [rsp-8+8*3]
	mov r14,QWORD [rsp-8+8*2]
	mov r9,r13
	mov r13,QWORD [rsp-8+8*1]
	add rsp,40
; #138 { 0'(= r ) 6'(= a15◂ [ *{ a16◂ [ a22◂ [ a17◂ [ ]{| l |}]]a2◂ [ a29◂ [ a17◂ [ ]{| l |}]]a28◂ [ a17◂ [ ]{| l |}]}] ) } ⊢ { 0'(= r ) 5'(= {| l |} ) }
	sub rsp,32
	mov QWORD [rsp+8*0],r14
	mov QWORD [rsp+8*1],r8
	mov QWORD [rsp+8*2],r9
	mov QWORD [rsp+8*3],r10
; .mov_ptn2 { 0'(= r ) 6'(= a15◂ [ *{ a16◂ [ a22◂ [ a17◂ [ ]{| l |}]]a2◂ [ a29◂ [ a17◂ [ ]{| l |}]]a28◂ [ a17◂ [ ]{| l |}]}] ) } ⊢ { 0'(= r ) 1'(= a15◂ [ *{ a16◂ [ a22◂ [ a17◂ [ ]{| l |}]]a2◂ [ a29◂ [ a17◂ [ ]{| l |}]]a28◂ [ a17◂ [ ]{| l |}]}] ) }
; .mov_ptn 6'(= a15◂ [ *{ a16◂ [ a22◂ [ a17◂ [ ]{| l |}]]a2◂ [ a29◂ [ a17◂ [ ]{| l |}]]a28◂ [ a17◂ [ ]{| l |}]}] ) ⊢ 1'(= a15◂ [ *{ a16◂ [ a22◂ [ a17◂ [ ]{| l |}]]a2◂ [ a29◂ [ a17◂ [ ]{| l |}]]a28◂ [ a17◂ [ ]{| l |}]}] )
	mov rax,rcx
	mov r14,rax
	call ETR_138
	mov r10,QWORD [rsp-8+8*4]
	mov r9,QWORD [rsp-8+8*3]
	mov r8,QWORD [rsp-8+8*2]
	mov r11,r14
	mov r14,QWORD [rsp-8+8*1]
	add rsp,32
; » _^ .. ⊢ ..
; .. //
	mov rdi,0
	mov rsi,r13
	imul rsi,1
	add rdi,rsi 
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[r9]
	add rdi,rax 
	push rax
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[r11]
	add rdi,rax 
	push rax
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[r8]
	add rdi,rax 
	push rax
	add rdi,14
	push rdi 
	call mlc_s8
	pop rdi
	mov rcx,rax
	lea rdi,[rax+7+rdi]
	std 
	mov QWORD [tmp],rcx 
	pop rcx
	lea rsi,[r8+7+rcx]
	rep movsb
	pop rcx
	lea rsi,[r11+7+rcx]
	rep movsb
	lea rsi,[LB_585+5-1]
	mov rcx,5
	rep movsb
	pop rcx
	lea rsi,[r9+7+rcx]
	rep movsb
	lea rsi,[LB_586+9-1]
	mov rcx,9
	rep movsb
	mov rax,r13
LB_588:
	cmp rax,0
	jz LB_589
	sub rax,1
	lea rsi,[LB_587+1-1]
	mov rcx,1
	rep movsb 
	jmp LB_588
LB_589:
	mov rcx,QWORD [tmp] 
; ∎ { 0'(= r ) 6'(= {| l |} ) }
; .dlt.ptn 5'(= {| l |} )
	mov rdi,r11
	C_PUSH_REGS
	mov r8,rdi
	mov rdi,r8
	call free_s8
	C_POP_REGS
; .dlt.ptn 2'(= {| l |} )
	mov rdi,r8
	C_PUSH_REGS
	mov r8,rdi
	mov rdi,r8
	call free_s8
	C_POP_REGS
; .dlt.ptn 3'(= {| l |} )
	mov rdi,r9
	C_PUSH_REGS
	mov r8,rdi
	mov rdi,r8
	call free_s8
	C_POP_REGS
; .dlt.ptn 1'(= {| l |} )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	mov rdi,r8
	call free_s8
	C_POP_REGS
; .dlt.ptn 4'(= a2◂ [ a29◂ [ a17◂ [ ]{| l |}]] )
	mov rdi,r10
	C_PUSH_REGS
	mov r8,rdi
	call LB_536
	C_POP_REGS
; .mov_ptn2 { 0'(= r ) 6'(= {| l |} ) } ⊢ { 0'(= r ) 1'(= {| l |} ) }
; .mov_ptn 6'(= {| l |} ) ⊢ 1'(= {| l |} )
	mov rax,rcx
	mov r14,rax
	ret
LB_584:
;; ?. 5'(= a28◂ [ a17◂ [ ]{| l |}] ) ⊢ 2(<3)◂3'(= a25◂ [ a17◂ [ ]{| l |}] )
	mov QWORD [GBG_VCT+8*0],rdi
	mov r9,QWORD [rdi+8]
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_LN rdi
; #11 0'(= r ) ⊢ 0'(= r )
	add r13,1
; #135 { 0'(= r ) 3'(= a25◂ [ a17◂ [ ]{| l |}] ) } ⊢ { 0'(= r ) 3'(= {| l |} ) }
	sub rsp,24
	mov QWORD [rsp+8*0],r14
	mov QWORD [rsp+8*1],r8
	mov QWORD [rsp+8*2],r10
; .mov_ptn2 { 0'(= r ) 3'(= a25◂ [ a17◂ [ ]{| l |}] ) } ⊢ { 0'(= r ) 1'(= a25◂ [ a17◂ [ ]{| l |}] ) }
; .mov_ptn 3'(= a25◂ [ a17◂ [ ]{| l |}] ) ⊢ 1'(= a25◂ [ a17◂ [ ]{| l |}] )
	mov rax,r9
	mov r14,rax
	call ETR_135
	mov r10,QWORD [rsp-8+8*3]
	mov r8,QWORD [rsp-8+8*2]
	mov r9,r14
	mov r14,QWORD [rsp-8+8*1]
	add rsp,24
; #12 0'(= r ) ⊢ 0'(= r )
	sub r13,1
; » _^ .. ⊢ ..
; .. //
	mov rdi,0
	mov rsi,r13
	imul rsi,1
	add rdi,rsi 
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[r9]
	add rdi,rax 
	push rax
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[r8]
	add rdi,rax 
	push rax
	add rdi,9
	push rdi 
	call mlc_s8
	pop rdi
	mov r11,rax
	lea rdi,[rax+7+rdi]
	std 
	mov QWORD [tmp],rcx 
	pop rcx
	lea rsi,[r8+7+rcx]
	rep movsb
	pop rcx
	lea rsi,[r9+7+rcx]
	rep movsb
	lea rsi,[LB_590+9-1]
	mov rcx,9
	rep movsb
	mov rax,r13
LB_592:
	cmp rax,0
	jz LB_593
	sub rax,1
	lea rsi,[LB_591+1-1]
	mov rcx,1
	rep movsb 
	jmp LB_592
LB_593:
	mov rcx,QWORD [tmp] 
; ∎ { 0'(= r ) 5'(= {| l |} ) }
; .dlt.ptn 3'(= {| l |} )
	mov rdi,r9
	C_PUSH_REGS
	mov r8,rdi
	mov rdi,r8
	call free_s8
	C_POP_REGS
; .dlt.ptn 2'(= {| l |} )
	mov rdi,r8
	C_PUSH_REGS
	mov r8,rdi
	mov rdi,r8
	call free_s8
	C_POP_REGS
; .dlt.ptn 1'(= {| l |} )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	mov rdi,r8
	call free_s8
	C_POP_REGS
; .dlt.ptn 4'(= a2◂ [ a29◂ [ a17◂ [ ]{| l |}]] )
	mov rdi,r10
	C_PUSH_REGS
	mov r8,rdi
	call LB_536
	C_POP_REGS
; .mov_ptn2 { 0'(= r ) 5'(= {| l |} ) } ⊢ { 0'(= r ) 1'(= {| l |} ) }
; .mov_ptn 5'(= {| l |} ) ⊢ 1'(= {| l |} )
	mov rax,r11
	mov r14,rax
	ret
LB_577:
;; ?; 1'(= a15◂ [ *{ a16◂ [ a22◂ [ a17◂ [ ]{| l |}]]a2◂ [ a29◂ [ a17◂ [ ]{| l |}]]a28◂ [ a17◂ [ ]{| l |}]}] ) ⊢ 1(<2)◂{ 2'(= a16◂ [ a22◂ [ a17◂ [ ]{| l |}]] ) 3'(= a2◂ [ a29◂ [ a17◂ [ ]{| l |}]] ) 4'(= a28◂ [ a17◂ [ ]{| l |}] ) }
	mov r8, QWORD [r14+8]
	mov r9, QWORD [r14+16]
	mov r10, QWORD [r14+24]
	mov QWORD [GBG_VCT+8*0],r14
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_RCD 3,rdi
;; ?; 4'(= a28◂ [ a17◂ [ ]{| l |}] ) ⊢ 0(<3)◂1'(= a15◂ [ *{ a2◂ [ a29◂ [ a17◂ [ ]{| l |}]]a28◂ [ a17◂ [ ]{| l |}]}] )
	mov rdi,r10
	cmp BYTE [rdi+6],0
	jnz LB_594
	mov QWORD [GBG_VCT+8*0],rdi
	mov r14,QWORD [rdi+8]
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_LN rdi
; #104 2'(= a16◂ [ a22◂ [ a17◂ [ ]{| l |}]] ) ⊢ 2'(= {| l |} )
	sub rsp,24
	mov QWORD [rsp+8*0],r13
	mov QWORD [rsp+8*1],r14
	mov QWORD [rsp+8*2],r9
; .mov_ptn2 2'(= a16◂ [ a22◂ [ a17◂ [ ]{| l |}]] ) ⊢ 0'(= a16◂ [ a22◂ [ a17◂ [ ]{| l |}]] )
; .mov_ptn 2'(= a16◂ [ a22◂ [ a17◂ [ ]{| l |}]] ) ⊢ 0'(= a16◂ [ a22◂ [ a17◂ [ ]{| l |}]] )
	mov rax,r8
	mov r13,rax
	call ETR_104
	mov r9,QWORD [rsp-8+8*3]
	mov r14,QWORD [rsp-8+8*2]
	mov r8,r13
	mov r13,QWORD [rsp-8+8*1]
	add rsp,24
; #137 { 0'(= r ) 1'(= a15◂ [ *{ a2◂ [ a29◂ [ a17◂ [ ]{| l |}]]a28◂ [ a17◂ [ ]{| l |}]}] ) } ⊢ { 0'(= r ) 1'(= {| l |} ) }
	sub rsp,16
	mov QWORD [rsp+8*0],r8
	mov QWORD [rsp+8*1],r9
; .mov_ptn2 { 0'(= r ) 1'(= a15◂ [ *{ a2◂ [ a29◂ [ a17◂ [ ]{| l |}]]a28◂ [ a17◂ [ ]{| l |}]}] ) } ⊢ { 0'(= r ) 1'(= a15◂ [ *{ a2◂ [ a29◂ [ a17◂ [ ]{| l |}]]a28◂ [ a17◂ [ ]{| l |}]}] ) }
	call ETR_137
	mov r9,QWORD [rsp-8+8*2]
	mov r8,QWORD [rsp-8+8*1]
	add rsp,16
; » _^ .. ⊢ ..
; .. //
	mov rdi,0
	mov rsi,r13
	imul rsi,1
	add rdi,rsi 
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[r14]
	add rdi,rax 
	push rax
	add rdi,10
	push rdi 
	call mlc_s8
	pop rdi
	mov r10,rax
	lea rdi,[rax+7+rdi]
	std 
	mov QWORD [tmp],rcx 
	pop rcx
	lea rsi,[r14+7+rcx]
	rep movsb
	lea rsi,[LB_595+10-1]
	mov rcx,10
	rep movsb
	mov rax,r13
LB_597:
	cmp rax,0
	jz LB_598
	sub rax,1
	lea rsi,[LB_596+1-1]
	mov rcx,1
	rep movsb 
	jmp LB_597
LB_598:
	mov rcx,QWORD [tmp] 
; ∎ { 0'(= r ) 4'(= {| l |} ) }
; .dlt.ptn 1'(= {| l |} )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	mov rdi,r8
	call free_s8
	C_POP_REGS
; .dlt.ptn 2'(= {| l |} )
	mov rdi,r8
	C_PUSH_REGS
	mov r8,rdi
	mov rdi,r8
	call free_s8
	C_POP_REGS
; .dlt.ptn 3'(= a2◂ [ a29◂ [ a17◂ [ ]{| l |}]] )
	mov rdi,r9
	C_PUSH_REGS
	mov r8,rdi
	call LB_536
	C_POP_REGS
; .mov_ptn2 { 0'(= r ) 4'(= {| l |} ) } ⊢ { 0'(= r ) 1'(= {| l |} ) }
; .mov_ptn 4'(= {| l |} ) ⊢ 1'(= {| l |} )
	mov rax,r10
	mov r14,rax
	ret
LB_594:
;; ?; 4'(= a28◂ [ a17◂ [ ]{| l |}] ) ⊢ 1(<3)◂{ 1'(= a16◂ [ a20◂ [ a17◂ [ ]{| l |}]] ) 5'(= a15◂ [ *{ a16◂ [ a22◂ [ a17◂ [ ]{| l |}]]a2◂ [ a29◂ [ a17◂ [ ]{| l |}]]a28◂ [ a17◂ [ ]{| l |}]}] ) }
	mov rdi,r10
	cmp BYTE [rdi+6],1
	jnz LB_599
	mov r14, QWORD [r10+8]
	mov r11, QWORD [r10+16]
	mov QWORD [GBG_VCT+8*0],r10
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_RCD 2,rdi
; #100 1'(= a16◂ [ a20◂ [ a17◂ [ ]{| l |}]] ) ⊢ 1'(= {| l |} )
	sub rsp,32
	mov QWORD [rsp+8*0],r13
	mov QWORD [rsp+8*1],r8
	mov QWORD [rsp+8*2],r9
	mov QWORD [rsp+8*3],r11
; .mov_ptn2 1'(= a16◂ [ a20◂ [ a17◂ [ ]{| l |}]] ) ⊢ 0'(= a16◂ [ a20◂ [ a17◂ [ ]{| l |}]] )
; .mov_ptn 1'(= a16◂ [ a20◂ [ a17◂ [ ]{| l |}]] ) ⊢ 0'(= a16◂ [ a20◂ [ a17◂ [ ]{| l |}]] )
	mov rax,r14
	mov r13,rax
	call ETR_100
	mov r11,QWORD [rsp-8+8*4]
	mov r9,QWORD [rsp-8+8*3]
	mov r8,QWORD [rsp-8+8*2]
	mov r14,r13
	mov r13,QWORD [rsp-8+8*1]
	add rsp,32
; #138 { 0'(= r ) 5'(= a15◂ [ *{ a16◂ [ a22◂ [ a17◂ [ ]{| l |}]]a2◂ [ a29◂ [ a17◂ [ ]{| l |}]]a28◂ [ a17◂ [ ]{| l |}]}] ) } ⊢ { 0'(= r ) 4'(= {| l |} ) }
	sub rsp,24
	mov QWORD [rsp+8*0],r14
	mov QWORD [rsp+8*1],r8
	mov QWORD [rsp+8*2],r9
; .mov_ptn2 { 0'(= r ) 5'(= a15◂ [ *{ a16◂ [ a22◂ [ a17◂ [ ]{| l |}]]a2◂ [ a29◂ [ a17◂ [ ]{| l |}]]a28◂ [ a17◂ [ ]{| l |}]}] ) } ⊢ { 0'(= r ) 1'(= a15◂ [ *{ a16◂ [ a22◂ [ a17◂ [ ]{| l |}]]a2◂ [ a29◂ [ a17◂ [ ]{| l |}]]a28◂ [ a17◂ [ ]{| l |}]}] ) }
; .mov_ptn 5'(= a15◂ [ *{ a16◂ [ a22◂ [ a17◂ [ ]{| l |}]]a2◂ [ a29◂ [ a17◂ [ ]{| l |}]]a28◂ [ a17◂ [ ]{| l |}]}] ) ⊢ 1'(= a15◂ [ *{ a16◂ [ a22◂ [ a17◂ [ ]{| l |}]]a2◂ [ a29◂ [ a17◂ [ ]{| l |}]]a28◂ [ a17◂ [ ]{| l |}]}] )
	mov rax,r11
	mov r14,rax
	call ETR_138
	mov r9,QWORD [rsp-8+8*3]
	mov r8,QWORD [rsp-8+8*2]
	mov r10,r14
	mov r14,QWORD [rsp-8+8*1]
	add rsp,24
; » _^ .. ⊢ ..
; .. //
	mov rdi,0
	mov rsi,r13
	imul rsi,1
	add rdi,rsi 
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[r14]
	add rdi,rax 
	push rax
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[r10]
	add rdi,rax 
	push rax
	add rdi,14
	push rdi 
	call mlc_s8
	pop rdi
	mov r11,rax
	lea rdi,[rax+7+rdi]
	std 
	mov QWORD [tmp],rcx 
	pop rcx
	lea rsi,[r10+7+rcx]
	rep movsb
	lea rsi,[LB_600+5-1]
	mov rcx,5
	rep movsb
	pop rcx
	lea rsi,[r14+7+rcx]
	rep movsb
	lea rsi,[LB_601+9-1]
	mov rcx,9
	rep movsb
	mov rax,r13
LB_603:
	cmp rax,0
	jz LB_604
	sub rax,1
	lea rsi,[LB_602+1-1]
	mov rcx,1
	rep movsb 
	jmp LB_603
LB_604:
	mov rcx,QWORD [tmp] 
; ∎ { 0'(= r ) 5'(= {| l |} ) }
; .dlt.ptn 4'(= {| l |} )
	mov rdi,r10
	C_PUSH_REGS
	mov r8,rdi
	mov rdi,r8
	call free_s8
	C_POP_REGS
; .dlt.ptn 1'(= {| l |} )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	mov rdi,r8
	call free_s8
	C_POP_REGS
; .dlt.ptn 3'(= a2◂ [ a29◂ [ a17◂ [ ]{| l |}]] )
	mov rdi,r9
	C_PUSH_REGS
	mov r8,rdi
	call LB_536
	C_POP_REGS
; .dlt.ptn 2'(= a16◂ [ a22◂ [ a17◂ [ ]{| l |}]] )
	mov rdi,r8
	C_PUSH_REGS
	mov r8,rdi
	call LB_376
	C_POP_REGS
; .mov_ptn2 { 0'(= r ) 5'(= {| l |} ) } ⊢ { 0'(= r ) 1'(= {| l |} ) }
; .mov_ptn 5'(= {| l |} ) ⊢ 1'(= {| l |} )
	mov rax,r11
	mov r14,rax
	ret
LB_599:
;; ?; 4'(= a28◂ [ a17◂ [ ]{| l |}] ) ⊢ 2(<3)◂1'(= a25◂ [ a17◂ [ ]{| l |}] )
	mov QWORD [GBG_VCT+8*0],rdi
	mov r14,QWORD [rdi+8]
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_LN rdi
; #11 0'(= r ) ⊢ 0'(= r )
	add r13,1
; #135 { 0'(= r ) 1'(= a25◂ [ a17◂ [ ]{| l |}] ) } ⊢ { 0'(= r ) 1'(= {| l |} ) }
	sub rsp,16
	mov QWORD [rsp+8*0],r8
	mov QWORD [rsp+8*1],r9
; .mov_ptn2 { 0'(= r ) 1'(= a25◂ [ a17◂ [ ]{| l |}] ) } ⊢ { 0'(= r ) 1'(= a25◂ [ a17◂ [ ]{| l |}] ) }
	call ETR_135
	mov r9,QWORD [rsp-8+8*2]
	mov r8,QWORD [rsp-8+8*1]
	add rsp,16
; #12 0'(= r ) ⊢ 0'(= r )
	sub r13,1
; » _^ .. ⊢ ..
; .. //
	mov rdi,0
	mov rsi,r13
	imul rsi,1
	add rdi,rsi 
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[r14]
	add rdi,rax 
	push rax
	add rdi,10
	push rdi 
	call mlc_s8
	pop rdi
	mov r10,rax
	lea rdi,[rax+7+rdi]
	std 
	mov QWORD [tmp],rcx 
	pop rcx
	lea rsi,[r14+7+rcx]
	rep movsb
	lea rsi,[LB_605+10-1]
	mov rcx,10
	rep movsb
	mov rax,r13
LB_607:
	cmp rax,0
	jz LB_608
	sub rax,1
	lea rsi,[LB_606+1-1]
	mov rcx,1
	rep movsb 
	jmp LB_607
LB_608:
	mov rcx,QWORD [tmp] 
; ∎ { 0'(= r ) 4'(= {| l |} ) }
; .dlt.ptn 1'(= {| l |} )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	mov rdi,r8
	call free_s8
	C_POP_REGS
; .dlt.ptn 3'(= a2◂ [ a29◂ [ a17◂ [ ]{| l |}]] )
	mov rdi,r9
	C_PUSH_REGS
	mov r8,rdi
	call LB_536
	C_POP_REGS
; .dlt.ptn 2'(= a16◂ [ a22◂ [ a17◂ [ ]{| l |}]] )
	mov rdi,r8
	C_PUSH_REGS
	mov r8,rdi
	call LB_376
	C_POP_REGS
; .mov_ptn2 { 0'(= r ) 4'(= {| l |} ) } ⊢ { 0'(= r ) 1'(= {| l |} ) }
; .mov_ptn 4'(= {| l |} ) ⊢ 1'(= {| l |} )
	mov rax,r10
	mov r14,rax
	ret
LB_623:
	movzx rax,BYTE [r8+6]
	jmp QWORD [LB_627+8*rax]
LB_627: dq LB_624,LB_625,LB_626
LB_624:
	jmp LB_628
LB_625:
	jmp LB_628
LB_626:
	jmp LB_628
LB_628:
	ret
LB_622:
	movzx rax,BYTE [r8+6]
	jmp QWORD [LB_632+8*rax]
LB_632: dq LB_629,LB_630,LB_631
LB_629:
	FREE_LN r8 
	mov r8,QWORD [r8+8]
	call LB_634
	jmp LB_633
LB_630:
	push r8
	mov r8,QWORD [r8+8+8*0]
	call LB_635
	pop r8 
	push r8
	mov r8,QWORD [r8+8+8*1]
	call LB_622
	pop r8 
	FREE_RCD 2, r8
	jmp LB_633
LB_631:
	jmp LB_633
LB_633:
	ret
LB_635:
	movzx rax,BYTE [r8+6]
	jmp QWORD [LB_638+8*rax]
LB_638: dq LB_636,LB_637
LB_636:
	FREE_LN r8 
	mov r8,QWORD [r8+8]
	call LB_640
	jmp LB_639
LB_637:
	FREE_LN r8 
	mov r8,QWORD [r8+8]
	call LB_640
	jmp LB_639
LB_639:
	ret
LB_640:
	movzx rax,BYTE [r8+6]
	jmp QWORD [LB_643+8*rax]
LB_643: dq LB_641,LB_642
LB_641:
	FREE_LN r8 
	mov r8,QWORD [r8+8]
	call LB_388
	jmp LB_644
LB_642:
	mov rdi,r8
	call free_s8
	jmp LB_644
LB_644:
	ret
LB_634:
	movzx rax,BYTE [r8+6]
	jmp QWORD [LB_647+8*rax]
LB_647: dq LB_645,LB_646
LB_645:
	push r8
	mov r8,QWORD [r8+8+8*0]
	call LB_635
	pop r8 
	push r8
	mov r8,QWORD [r8+8+8*1]
	call LB_634
	pop r8 
	FREE_RCD 2, r8
	jmp LB_648
LB_646:
	jmp LB_648
LB_648:
	ret
LB_621:
	movzx rax,BYTE [r8+6]
	jmp QWORD [LB_651+8*rax]
LB_651: dq LB_649,LB_650
LB_649:
	FREE_LN r8 
	mov r8,QWORD [r8+8]
	call LB_653
	jmp LB_652
LB_650:
	jmp LB_652
LB_652:
	ret
LB_653:
	movzx rax,BYTE [r8+6]
	jmp QWORD [LB_656+8*rax]
LB_656: dq LB_654,LB_655
LB_654:
	push r8
	mov r8,QWORD [r8+8+8*0]
	call LB_324
	pop r8 
	push r8
	mov r8,QWORD [r8+8+8*1]
	call LB_623
	pop r8 
	push r8
	mov r8,QWORD [r8+8+8*2]
	call LB_622
	pop r8 
	push r8
	mov r8,QWORD [r8+8+8*3]
	call LB_621
	pop r8 
	push r8
	mov r8,QWORD [r8+8+8*4]
	call LB_653
	pop r8 
	FREE_RCD 5, r8
	jmp LB_657
LB_655:
	push r8
	mov r8,QWORD [r8+8+8*0]
	call LB_324
	pop r8 
	push r8
	mov r8,QWORD [r8+8+8*1]
	call LB_623
	pop r8 
	push r8
	mov r8,QWORD [r8+8+8*2]
	call LB_622
	pop r8 
	push r8
	mov r8,QWORD [r8+8+8*3]
	call LB_621
	pop r8 
	FREE_RCD 4, r8
	jmp LB_657
LB_657:
	ret
LB_668:
	movzx rax,BYTE [r8+6]
	jmp QWORD [LB_671+8*rax]
LB_671: dq LB_669,LB_670
LB_669:
	push r8
	mov r8,QWORD [r8+8+8*0]
	call LB_673
	pop r8 
	push r8
	mov r8,QWORD [r8+8+8*1]
	call LB_674
	pop r8 
	FREE_RCD 2, r8
	jmp LB_672
LB_670:
	jmp LB_672
LB_672:
	ret
LB_674:
	movzx rax,BYTE [r8+6]
	jmp QWORD [LB_677+8*rax]
LB_677: dq LB_675,LB_676
LB_675:
	push r8
	mov r8,QWORD [r8+8+8*0]
	call LB_496
	pop r8 
	push r8
	mov r8,QWORD [r8+8+8*1]
	call LB_673
	pop r8 
	push r8
	mov r8,QWORD [r8+8+8*2]
	call LB_679
	pop r8 
	push r8
	mov r8,QWORD [r8+8+8*3]
	call LB_623
	pop r8 
	push r8
	mov r8,QWORD [r8+8+8*4]
	call LB_622
	pop r8 
	push r8
	mov r8,QWORD [r8+8+8*5]
	call LB_668
	pop r8 
	push r8
	mov r8,QWORD [r8+8+8*6]
	call LB_674
	pop r8 
	FREE_RCD 7, r8
	jmp LB_678
LB_676:
	push r8
	mov r8,QWORD [r8+8+8*0]
	call LB_496
	pop r8 
	push r8
	mov r8,QWORD [r8+8+8*1]
	call LB_673
	pop r8 
	push r8
	mov r8,QWORD [r8+8+8*2]
	call LB_679
	pop r8 
	push r8
	mov r8,QWORD [r8+8+8*3]
	call LB_623
	pop r8 
	push r8
	mov r8,QWORD [r8+8+8*4]
	call LB_622
	pop r8 
	push r8
	mov r8,QWORD [r8+8+8*5]
	call LB_668
	pop r8 
	FREE_RCD 6, r8
	jmp LB_678
LB_678:
	ret
LB_679:
	movzx rax,BYTE [r8+6]
	jmp QWORD [LB_687+8*rax]
LB_687: dq LB_680,LB_681,LB_682,LB_683,LB_684,LB_685,LB_686
LB_680:
	push r8
	mov r8,QWORD [r8+8+8*0]
	call LB_388
	pop r8 
	push r8
	mov r8,QWORD [r8+8+8*1]
	call LB_450
	pop r8 
	FREE_RCD 2, r8
	jmp LB_688
LB_681:
	push r8
	mov r8,QWORD [r8+8+8*0]
	call LB_456
	pop r8 
	push r8
	mov r8,QWORD [r8+8+8*1]
	call LB_450
	pop r8 
	FREE_RCD 2, r8
	jmp LB_688
LB_682:
	push r8
	mov r8,QWORD [r8+8+8*0]
	call LB_689
	pop r8 
	push r8
	mov r8,QWORD [r8+8+8*1]
	call LB_679
	pop r8 
	FREE_RCD 2, r8
	jmp LB_688
LB_683:
	FREE_LN r8 
	mov r8,QWORD [r8+8]
	call LB_690
	jmp LB_688
LB_684:
	push r8
	mov r8,QWORD [r8+8+8*0]
	call LB_450
	pop r8 
	push r8
	mov r8,QWORD [r8+8+8*1]
	call LB_691
	pop r8 
	FREE_RCD 2, r8
	jmp LB_688
LB_685:
	FREE_LN r8 
	mov r8,QWORD [r8+8]
	call LB_445
	jmp LB_688
LB_686:
	FREE_LN r8 
	mov r8,QWORD [r8+8]
	jmp LB_688
LB_688:
	ret
LB_691:
	movzx rax,BYTE [r8+6]
	jmp QWORD [LB_694+8*rax]
LB_694: dq LB_692,LB_693
LB_692:
	FREE_LN r8 
	mov r8,QWORD [r8+8]
	call LB_696
	jmp LB_695
LB_693:
	push r8
	mov r8,QWORD [r8+8+8*0]
	call LB_697
	pop r8 
	push r8
	mov r8,QWORD [r8+8+8*1]
	call LB_679
	pop r8 
	FREE_RCD 2, r8
	jmp LB_695
LB_695:
	ret
LB_697:
	movzx rax,BYTE [r8+6]
	jmp QWORD [LB_700+8*rax]
LB_700: dq LB_698,LB_699
LB_698:
	push r8
	mov r8,QWORD [r8+8+8*0]
	call LB_673
	pop r8 
	push r8
	mov r8,QWORD [r8+8+8*1]
	call LB_697
	pop r8 
	FREE_RCD 2, r8
	jmp LB_701
LB_699:
	jmp LB_701
LB_701:
	ret
LB_696:
	movzx rax,BYTE [r8+6]
	jmp QWORD [LB_704+8*rax]
LB_704: dq LB_702,LB_703
LB_702:
	push r8
	mov r8,QWORD [r8+8+8*0]
	push r8
	mov r8,QWORD [r8+8+8*0]
	call LB_376
	pop r8 
	push r8
	mov r8,QWORD [r8+8+8*1]
	call LB_536
	pop r8 
	push r8
	mov r8,QWORD [r8+8+8*2]
	call LB_706
	pop r8 
	FREE_RCD 3, r8
	pop r8 
	push r8
	mov r8,QWORD [r8+8+8*1]
	call LB_696
	pop r8 
	FREE_RCD 2, r8
	jmp LB_705
LB_703:
	push r8
	mov r8,QWORD [r8+8+8*0]
	call LB_376
	pop r8 
	push r8
	mov r8,QWORD [r8+8+8*1]
	call LB_536
	pop r8 
	push r8
	mov r8,QWORD [r8+8+8*2]
	call LB_706
	pop r8 
	FREE_RCD 3, r8
	jmp LB_705
LB_705:
	ret
LB_706:
	movzx rax,BYTE [r8+6]
	jmp QWORD [LB_710+8*rax]
LB_710: dq LB_707,LB_708,LB_709
LB_707:
	FREE_LN r8 
	mov r8,QWORD [r8+8]
	call LB_690
	jmp LB_711
LB_708:
	push r8
	mov r8,QWORD [r8+8+8*0]
	call LB_450
	pop r8 
	push r8
	mov r8,QWORD [r8+8+8*1]
	call LB_696
	pop r8 
	FREE_RCD 2, r8
	jmp LB_711
LB_709:
	FREE_LN r8 
	mov r8,QWORD [r8+8]
	call LB_679
	jmp LB_711
LB_711:
	ret
LB_690:
	movzx rax,BYTE [r8+6]
	jmp QWORD [LB_714+8*rax]
LB_714: dq LB_712,LB_713
LB_712:
	push r8
	mov r8,QWORD [r8+8+8*0]
	push r8
	mov r8,QWORD [r8+8+8*0]
	call LB_536
	pop r8 
	push r8
	mov r8,QWORD [r8+8+8*1]
	call LB_706
	pop r8 
	FREE_RCD 2, r8
	pop r8 
	push r8
	mov r8,QWORD [r8+8+8*1]
	call LB_690
	pop r8 
	FREE_RCD 2, r8
	jmp LB_715
LB_713:
	push r8
	mov r8,QWORD [r8+8+8*0]
	call LB_536
	pop r8 
	push r8
	mov r8,QWORD [r8+8+8*1]
	call LB_706
	pop r8 
	FREE_RCD 2, r8
	jmp LB_715
LB_715:
	ret
LB_689:
	movzx rax,BYTE [r8+6]
	jmp QWORD [LB_720+8*rax]
LB_720: dq LB_716,LB_717,LB_718,LB_719
LB_716:
	push r8
	mov r8,QWORD [r8+8+8*0]
	call LB_388
	pop r8 
	push r8
	mov r8,QWORD [r8+8+8*1]
	call LB_450
	pop r8 
	push r8
	mov r8,QWORD [r8+8+8*2]
	call LB_673
	pop r8 
	FREE_RCD 3, r8
	jmp LB_721
LB_717:
	push r8
	mov r8,QWORD [r8+8+8*0]
	call LB_456
	pop r8 
	push r8
	mov r8,QWORD [r8+8+8*1]
	call LB_450
	pop r8 
	push r8
	mov r8,QWORD [r8+8+8*2]
	call LB_673
	pop r8 
	FREE_RCD 3, r8
	jmp LB_721
LB_718:
	push r8
	mov r8,QWORD [r8+8+8*0]
	call LB_389
	pop r8 
	push r8
	mov r8,QWORD [r8+8+8*1]
	call LB_450
	pop r8 
	push r8
	mov r8,QWORD [r8+8+8*2]
	call LB_673
	pop r8 
	FREE_RCD 3, r8
	jmp LB_721
LB_719:
	push r8
	mov r8,QWORD [r8+8+8*0]
	call LB_498
	pop r8 
	push r8
	mov r8,QWORD [r8+8+8*1]
	call LB_497
	pop r8 
	push r8
	mov r8,QWORD [r8+8+8*2]
	call LB_496
	pop r8 
	FREE_RCD 3, r8
	jmp LB_721
LB_721:
	ret
LB_673:
	movzx rax,BYTE [r8+6]
	jmp QWORD [LB_724+8*rax]
LB_724: dq LB_722,LB_723
LB_722:
	FREE_LN r8 
	mov r8,QWORD [r8+8]
	call LB_697
	jmp LB_725
LB_723:
	FREE_LN r8 
	mov r8,QWORD [r8+8]
	call LB_525
	jmp LB_725
LB_725:
	ret
ETR_160: ;; pnt { 0'(= r ) 1'(= a2◂ [ *{ {| l |}a32◂ [ a17◂ [ ]{| l |}]}] ) } ⊢ { 0'(= r ) 1'(= {| l |} ) } : ({ _r64 _lst◂{ _s8 _t32◂_s8◂_t17 } }→{ _r64 _s8 })
;; ?; 1'(= a2◂ [ *{ {| l |}a32◂ [ a17◂ [ ]{| l |}]}] ) ⊢ 0(<2)◂{ { 3'(= {| l |} ) 4'(= a32◂ [ a17◂ [ ]{| l |}] ) } 5'(= a2◂ [ *{ {| l |}a32◂ [ a17◂ [ ]{| l |}]}] ) }
	mov rdi,r14
	cmp BYTE [rdi+6],0
	jnz LB_609
	mov r8, QWORD [r14+8]
	mov r9, QWORD [r8+8]
	mov r10, QWORD [r8+16]
	mov QWORD [GBG_VCT+8*0],r8
	mov r11, QWORD [r14+16]
	mov QWORD [GBG_VCT+8*1],r14
	mov rdi,QWORD [GBG_VCT+8*1]
	FREE_RCD 2,rdi
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_RCD 2,rdi
; #11 0'(= r ) ⊢ 0'(= r )
	add r13,1
; #161 { 0'(= r ) 4'(= a32◂ [ a17◂ [ ]{| l |}] ) } ⊢ { 0'(= r ) 1'(= {| l |} ) }
	sub rsp,16
	mov QWORD [rsp+8*0],r9
	mov QWORD [rsp+8*1],r11
; .mov_ptn2 { 0'(= r ) 4'(= a32◂ [ a17◂ [ ]{| l |}] ) } ⊢ { 0'(= r ) 1'(= a32◂ [ a17◂ [ ]{| l |}] ) }
; .mov_ptn 4'(= a32◂ [ a17◂ [ ]{| l |}] ) ⊢ 1'(= a32◂ [ a17◂ [ ]{| l |}] )
	mov rax,r10
	mov r14,rax
	call ETR_161
	mov r11,QWORD [rsp-8+8*2]
	mov r9,QWORD [rsp-8+8*1]
	add rsp,16
; #12 0'(= r ) ⊢ 0'(= r )
	sub r13,1
; #160 { 0'(= r ) 5'(= a2◂ [ *{ {| l |}a32◂ [ a17◂ [ ]{| l |}]}] ) } ⊢ { 0'(= r ) 2'(= {| l |} ) }
	sub rsp,16
	mov QWORD [rsp+8*0],r14
	mov QWORD [rsp+8*1],r9
; .mov_ptn2 { 0'(= r ) 5'(= a2◂ [ *{ {| l |}a32◂ [ a17◂ [ ]{| l |}]}] ) } ⊢ { 0'(= r ) 1'(= a2◂ [ *{ {| l |}a32◂ [ a17◂ [ ]{| l |}]}] ) }
; .mov_ptn 5'(= a2◂ [ *{ {| l |}a32◂ [ a17◂ [ ]{| l |}]}] ) ⊢ 1'(= a2◂ [ *{ {| l |}a32◂ [ a17◂ [ ]{| l |}]}] )
	mov rax,r11
	mov r14,rax
	call ETR_160
	mov r9,QWORD [rsp-8+8*2]
	mov r8,r14
	mov r14,QWORD [rsp-8+8*1]
	add rsp,16
; » _^ .. ⊢ ..
; .. //
	mov rdi,0
	mov rsi,r13
	imul rsi,1
	add rdi,rsi 
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[r9]
	add rdi,rax 
	push rax
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[r14]
	add rdi,rax 
	push rax
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[r8]
	add rdi,rax 
	push rax
	add rdi,3
	push rdi 
	call mlc_s8
	pop rdi
	mov r10,rax
	lea rdi,[rax+7+rdi]
	std 
	mov QWORD [tmp],rcx 
	pop rcx
	lea rsi,[r8+7+rcx]
	rep movsb
	pop rcx
	lea rsi,[r14+7+rcx]
	rep movsb
	lea rsi,[LB_610+1-1]
	mov rcx,1
	rep movsb
	pop rcx
	lea rsi,[r9+7+rcx]
	rep movsb
	lea rsi,[LB_611+2-1]
	mov rcx,2
	rep movsb
	mov rax,r13
LB_613:
	cmp rax,0
	jz LB_614
	sub rax,1
	lea rsi,[LB_612+1-1]
	mov rcx,1
	rep movsb 
	jmp LB_613
LB_614:
	mov rcx,QWORD [tmp] 
; ∎ { 0'(= r ) 4'(= {| l |} ) }
; .dlt.ptn 2'(= {| l |} )
	mov rdi,r8
	C_PUSH_REGS
	mov r8,rdi
	mov rdi,r8
	call free_s8
	C_POP_REGS
; .dlt.ptn 1'(= {| l |} )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	mov rdi,r8
	call free_s8
	C_POP_REGS
; .dlt.ptn 3'(= {| l |} )
	mov rdi,r9
	C_PUSH_REGS
	mov r8,rdi
	mov rdi,r8
	call free_s8
	C_POP_REGS
; .mov_ptn2 { 0'(= r ) 4'(= {| l |} ) } ⊢ { 0'(= r ) 1'(= {| l |} ) }
; .mov_ptn 4'(= {| l |} ) ⊢ 1'(= {| l |} )
	mov rax,r10
	mov r14,rax
	ret
LB_609:
;; ?; 1'(= a2◂ [ *{ {| l |}a32◂ [ a17◂ [ ]{| l |}]}] ) ⊢ 1(<2)◂{ }
; $ %[ "" ] ⊢ %[ "" ]
; ∎ { 0'(= r ) %[ "" ] }
; .mov_ptn2 { 0'(= r ) %[ "" ] } ⊢ { 0'(= r ) 1'(= {| l |} ) }
; .mov_ptn %[ "" ] ⊢ 1'(= {| l |} )
	mov rsi,1  
	mov rdi,16
	xor rax,rax 
	C_CALL_SF calloc
	mov QWORD [rax],0
	mov r14,rax
	ret
ETR_161: ;; pnt_etr { 0'(= r ) 1'(= a32◂ [ a17◂ [ ]{| l |}] ) } ⊢ { 0'(= r ) 1'(= {| l |} ) } : ({ _r64 _t32◂_s8◂_t17 }→{ _r64 _s8 })
;; ?; 1'(= a32◂ [ a17◂ [ ]{| l |}] ) ⊢ 0(<2)◂2'(= a33◂ [ a17◂ [ ]{| l |}] )
	mov rdi,r14
	cmp BYTE [rdi+6],0
	jnz LB_615
	mov QWORD [GBG_VCT+8*0],rdi
	mov r8,QWORD [rdi+8]
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_LN rdi
; #162 { 0'(= r ) 2'(= a33◂ [ a17◂ [ ]{| l |}] ) } ⊢ { 0'(= r ) 1'(= {| l |} ) }
; .mov_ptn2 { 0'(= r ) 2'(= a33◂ [ a17◂ [ ]{| l |}] ) } ⊢ { 0'(= r ) 1'(= a33◂ [ a17◂ [ ]{| l |}] ) }
; .mov_ptn 2'(= a33◂ [ a17◂ [ ]{| l |}] ) ⊢ 1'(= a33◂ [ a17◂ [ ]{| l |}] )
	mov rax,r8
	mov r14,rax
	call ETR_162
; ∎ { 0'(= r ) 1'(= {| l |} ) }
; .mov_ptn2 { 0'(= r ) 1'(= {| l |} ) } ⊢ { 0'(= r ) 1'(= {| l |} ) }
	ret
LB_615:
;; ?; 1'(= a32◂ [ a17◂ [ ]{| l |}] ) ⊢ 1(<2)◂2'(= a34◂ [ a17◂ [ ]{| l |}] )
	mov QWORD [GBG_VCT+8*0],rdi
	mov r8,QWORD [rdi+8]
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_LN rdi
; #163 { 0'(= r ) 2'(= a34◂ [ a17◂ [ ]{| l |}] ) } ⊢ { 0'(= r ) 1'(= {| l |} ) }
; .mov_ptn2 { 0'(= r ) 2'(= a34◂ [ a17◂ [ ]{| l |}] ) } ⊢ { 0'(= r ) 1'(= a34◂ [ a17◂ [ ]{| l |}] ) }
; .mov_ptn 2'(= a34◂ [ a17◂ [ ]{| l |}] ) ⊢ 1'(= a34◂ [ a17◂ [ ]{| l |}] )
	mov rax,r8
	mov r14,rax
	call ETR_163
; ∎ { 0'(= r ) 1'(= {| l |} ) }
; .mov_ptn2 { 0'(= r ) 1'(= {| l |} ) } ⊢ { 0'(= r ) 1'(= {| l |} ) }
	ret
ETR_162: ;; pnt_cnc { 0'(= r ) 1'(= a33◂ [ a17◂ [ ]{| l |}] ) } ⊢ { 0'(= r ) 1'(= {| l |} ) } : ({ _r64 _t33◂_s8◂_t17 }→{ _r64 _s8 })
;; ?; 1'(= a33◂ [ a17◂ [ ]{| l |}] ) ⊢ 0(<2)◂{ 2'(= a3◂ [ {| l |}] ) 3'(= a35◂ [ ] ) 4'(= a36◂ [ a17◂ [ ]] ) 5'(= a3◂ [ a33◂ [ a17◂ [ ]{| l |}]] ) 6'(= a33◂ [ a17◂ [ ]{| l |}] ) }
	mov rdi,r14
	cmp BYTE [rdi+6],0
	jnz LB_616
	mov r8, QWORD [r14+8]
	mov r9, QWORD [r14+16]
	mov r10, QWORD [r14+24]
	mov r11, QWORD [r14+32]
	mov rcx, QWORD [r14+40]
	mov QWORD [GBG_VCT+8*0],r14
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_RCD 5,rdi
; #162 { 0'(= r ) 6'(= a33◂ [ a17◂ [ ]{| l |}] ) } ⊢ { 0'(= r ) 1'(= {| l |} ) }
	sub rsp,32
	mov QWORD [rsp+8*0],r8
	mov QWORD [rsp+8*1],r9
	mov QWORD [rsp+8*2],r10
	mov QWORD [rsp+8*3],r11
; .mov_ptn2 { 0'(= r ) 6'(= a33◂ [ a17◂ [ ]{| l |}] ) } ⊢ { 0'(= r ) 1'(= a33◂ [ a17◂ [ ]{| l |}] ) }
; .mov_ptn 6'(= a33◂ [ a17◂ [ ]{| l |}] ) ⊢ 1'(= a33◂ [ a17◂ [ ]{| l |}] )
	mov rax,rcx
	mov r14,rax
	call ETR_162
	mov r11,QWORD [rsp-8+8*4]
	mov r10,QWORD [rsp-8+8*3]
	mov r9,QWORD [rsp-8+8*2]
	mov r8,QWORD [rsp-8+8*1]
	add rsp,32
; » _^ .. ⊢ ..
; .. //
	mov rdi,0
	mov rsi,r13
	imul rsi,1
	add rdi,rsi 
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[r14]
	add rdi,rax 
	push rax
	add rdi,7
	push rdi 
	call mlc_s8
	pop rdi
	mov rcx,rax
	lea rdi,[rax+7+rdi]
	std 
	mov QWORD [tmp],rcx 
	pop rcx
	lea rsi,[r14+7+rcx]
	rep movsb
	lea rsi,[LB_617+7-1]
	mov rcx,7
	rep movsb
	mov rax,r13
LB_619:
	cmp rax,0
	jz LB_620
	sub rax,1
	lea rsi,[LB_618+1-1]
	mov rcx,1
	rep movsb 
	jmp LB_619
LB_620:
	mov rcx,QWORD [tmp] 
; ∎ { 0'(= r ) 6'(= {| l |} ) }
; .dlt.ptn 1'(= {| l |} )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	mov rdi,r8
	call free_s8
	C_POP_REGS
; .dlt.ptn 5'(= a3◂ [ a33◂ [ a17◂ [ ]{| l |}]] )
	mov rdi,r11
	C_PUSH_REGS
	mov r8,rdi
	call LB_621
	C_POP_REGS
; .dlt.ptn 4'(= a36◂ [ a17◂ [ ]] )
	mov rdi,r10
	C_PUSH_REGS
	mov r8,rdi
	call LB_622
	C_POP_REGS
; .dlt.ptn 3'(= a35◂ [ ] )
	mov rdi,r9
	C_PUSH_REGS
	mov r8,rdi
	call LB_623
	C_POP_REGS
; .dlt.ptn 2'(= a3◂ [ {| l |}] )
	mov rdi,r8
	C_PUSH_REGS
	mov r8,rdi
	call LB_324
	C_POP_REGS
; .mov_ptn2 { 0'(= r ) 6'(= {| l |} ) } ⊢ { 0'(= r ) 1'(= {| l |} ) }
; .mov_ptn 6'(= {| l |} ) ⊢ 1'(= {| l |} )
	mov rax,rcx
	mov r14,rax
	ret
LB_616:
;; ?; 1'(= a33◂ [ a17◂ [ ]{| l |}] ) ⊢ 1(<2)◂{ 2'(= a3◂ [ {| l |}] ) 3'(= a35◂ [ ] ) 4'(= a36◂ [ a17◂ [ ]] ) 5'(= a3◂ [ a33◂ [ a17◂ [ ]{| l |}]] ) }
	mov r8, QWORD [r14+8]
	mov r9, QWORD [r14+16]
	mov r10, QWORD [r14+24]
	mov r11, QWORD [r14+32]
	mov QWORD [GBG_VCT+8*0],r14
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_RCD 4,rdi
; » _^ .. ⊢ ..
; .. //
	mov rdi,0
	mov rsi,r13
	imul rsi,1
	add rdi,rsi 
	add rdi,9
	push rdi 
	call mlc_s8
	pop rdi
	mov r14,rax
	lea rdi,[rax+7+rdi]
	std 
	mov QWORD [tmp],rcx 
	lea rsi,[LB_658+9-1]
	mov rcx,9
	rep movsb
	mov rax,r13
LB_660:
	cmp rax,0
	jz LB_661
	sub rax,1
	lea rsi,[LB_659+1-1]
	mov rcx,1
	rep movsb 
	jmp LB_660
LB_661:
	mov rcx,QWORD [tmp] 
; ∎ { 0'(= r ) 1'(= {| l |} ) }
; .dlt.ptn 5'(= a3◂ [ a33◂ [ a17◂ [ ]{| l |}]] )
	mov rdi,r11
	C_PUSH_REGS
	mov r8,rdi
	call LB_621
	C_POP_REGS
; .dlt.ptn 4'(= a36◂ [ a17◂ [ ]] )
	mov rdi,r10
	C_PUSH_REGS
	mov r8,rdi
	call LB_622
	C_POP_REGS
; .dlt.ptn 3'(= a35◂ [ ] )
	mov rdi,r9
	C_PUSH_REGS
	mov r8,rdi
	call LB_623
	C_POP_REGS
; .dlt.ptn 2'(= a3◂ [ {| l |}] )
	mov rdi,r8
	C_PUSH_REGS
	mov r8,rdi
	call LB_324
	C_POP_REGS
; .mov_ptn2 { 0'(= r ) 1'(= {| l |} ) } ⊢ { 0'(= r ) 1'(= {| l |} ) }
	ret
ETR_163: ;; pnt_act { 0'(= r ) 1'(= a34◂ [ a17◂ [ ]{| l |}] ) } ⊢ { 0'(= r ) 1'(= {| l |} ) } : ({ _r64 _t34◂_s8◂_t17 }→{ _r64 _s8 })
;; ?; 1'(= a34◂ [ a17◂ [ ]{| l |}] ) ⊢ 0(<2)◂{ 2'(= a2◂ [ a21◂ [ {| l |}]] ) 3'(= a16◂ [ a21◂ [ {| l |}]] ) 4'(= a25◂ [ a17◂ [ ]{| l |}] ) 5'(= a35◂ [ ] ) 6'(= a36◂ [ a17◂ [ ]] ) 7'(= a3◂ [ *{ a16◂ [ a21◂ [ {| l |}]]a34◂ [ a17◂ [ ]{| l |}]}] ) 8'(= a34◂ [ a17◂ [ ]{| l |}] ) }
	mov rdi,r14
	cmp BYTE [rdi+6],0
	jnz LB_662
	mov r8, QWORD [r14+8]
	mov r9, QWORD [r14+16]
	mov r10, QWORD [r14+24]
	mov r11, QWORD [r14+32]
	mov rcx, QWORD [r14+40]
	mov rdx, QWORD [r14+48]
	sub rsp,8
	MOV_RDI QWORD [rsp-8+8*1], QWORD [r14+56]
	mov QWORD [GBG_VCT+8*0],r14
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_RCD 7,rdi
; #102 3'(= a16◂ [ a21◂ [ {| l |}]] ) ⊢ 1'(= {| l |} )
	sub rsp,48
	mov QWORD [rsp+8*0],r13
	mov QWORD [rsp+8*1],r8
	mov QWORD [rsp+8*2],r10
	mov QWORD [rsp+8*3],r11
	mov QWORD [rsp+8*4],rcx
	mov QWORD [rsp+8*5],rdx
; .mov_ptn2 3'(= a16◂ [ a21◂ [ {| l |}]] ) ⊢ 0'(= a16◂ [ a21◂ [ {| l |}]] )
; .mov_ptn 3'(= a16◂ [ a21◂ [ {| l |}]] ) ⊢ 0'(= a16◂ [ a21◂ [ {| l |}]] )
	mov rax,r9
	mov r13,rax
	call ETR_102
	mov rdx,QWORD [rsp-8+8*6]
	mov rcx,QWORD [rsp-8+8*5]
	mov r11,QWORD [rsp-8+8*4]
	mov r10,QWORD [rsp-8+8*3]
	mov r8,QWORD [rsp-8+8*2]
	mov r14,r13
	mov r13,QWORD [rsp-8+8*1]
	add rsp,48
; #11 0'(= r ) ⊢ 0'(= r )
	add r13,1
; #135 { 0'(= r ) 4'(= a25◂ [ a17◂ [ ]{| l |}] ) } ⊢ { 0'(= r ) 3'(= {| l |} ) }
	sub rsp,40
	mov QWORD [rsp+8*0],r14
	mov QWORD [rsp+8*1],r8
	mov QWORD [rsp+8*2],r11
	mov QWORD [rsp+8*3],rcx
	mov QWORD [rsp+8*4],rdx
; .mov_ptn2 { 0'(= r ) 4'(= a25◂ [ a17◂ [ ]{| l |}] ) } ⊢ { 0'(= r ) 1'(= a25◂ [ a17◂ [ ]{| l |}] ) }
; .mov_ptn 4'(= a25◂ [ a17◂ [ ]{| l |}] ) ⊢ 1'(= a25◂ [ a17◂ [ ]{| l |}] )
	mov rax,r10
	mov r14,rax
	call ETR_135
	mov rdx,QWORD [rsp-8+8*5]
	mov rcx,QWORD [rsp-8+8*4]
	mov r11,QWORD [rsp-8+8*3]
	mov r8,QWORD [rsp-8+8*2]
	mov r9,r14
	mov r14,QWORD [rsp-8+8*1]
	add rsp,40
; #12 0'(= r ) ⊢ 0'(= r )
	sub r13,1
; #163 { 0'(= r ) 8'(= a34◂ [ a17◂ [ ]{| l |}] ) } ⊢ { 0'(= r ) 4'(= {| l |} ) }
	sub rsp,48
	mov QWORD [rsp+8*0],r14
	mov QWORD [rsp+8*1],r8
	mov QWORD [rsp+8*2],r9
	mov QWORD [rsp+8*3],r11
	mov QWORD [rsp+8*4],rcx
	mov QWORD [rsp+8*5],rdx
; .mov_ptn2 { 0'(= r ) 8'(= a34◂ [ a17◂ [ ]{| l |}] ) } ⊢ { 0'(= r ) 1'(= a34◂ [ a17◂ [ ]{| l |}] ) }
; .mov_ptn 8'(= a34◂ [ a17◂ [ ]{| l |}] ) ⊢ 1'(= a34◂ [ a17◂ [ ]{| l |}] )
	mov rax,QWORD [rsp-8+8*7]
	mov r14,rax
	call ETR_163
	mov rdx,QWORD [rsp-8+8*6]
	mov rcx,QWORD [rsp-8+8*5]
	mov r11,QWORD [rsp-8+8*4]
	mov r9,QWORD [rsp-8+8*3]
	mov r8,QWORD [rsp-8+8*2]
	mov r10,r14
	mov r14,QWORD [rsp-8+8*1]
	add rsp,56
; » _^ .. ⊢ ..
; .. //
	sub rsp,8
	mov rdi,0
	mov rsi,r13
	imul rsi,1
	add rdi,rsi 
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[r14]
	add rdi,rax 
	push rax
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[r9]
	add rdi,rax 
	push rax
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[r10]
	add rdi,rax 
	push rax
	add rdi,12
	push rdi 
	call mlc_s8
	pop rdi
	mov QWORD [rsp-8+8*4],rax
	lea rdi,[rax+7+rdi]
	std 
	mov QWORD [tmp],rcx 
	pop rcx
	lea rsi,[r10+7+rcx]
	rep movsb
	pop rcx
	lea rsi,[r9+7+rcx]
	rep movsb
	lea rsi,[LB_663+1-1]
	mov rcx,1
	rep movsb
	pop rcx
	lea rsi,[r14+7+rcx]
	rep movsb
	lea rsi,[LB_664+11-1]
	mov rcx,11
	rep movsb
	mov rax,r13
LB_666:
	cmp rax,0
	jz LB_667
	sub rax,1
	lea rsi,[LB_665+1-1]
	mov rcx,1
	rep movsb 
	jmp LB_666
LB_667:
	mov rcx,QWORD [tmp] 
; ∎ { 0'(= r ) 8'(= {| l |} ) }
; .dlt.ptn 4'(= {| l |} )
	mov rdi,r10
	C_PUSH_REGS
	mov r8,rdi
	mov rdi,r8
	call free_s8
	C_POP_REGS
; .dlt.ptn 3'(= {| l |} )
	mov rdi,r9
	C_PUSH_REGS
	mov r8,rdi
	mov rdi,r8
	call free_s8
	C_POP_REGS
; .dlt.ptn 1'(= {| l |} )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	mov rdi,r8
	call free_s8
	C_POP_REGS
; .dlt.ptn 7'(= a3◂ [ *{ a16◂ [ a21◂ [ {| l |}]]a34◂ [ a17◂ [ ]{| l |}]}] )
	mov rdi,rdx
	C_PUSH_REGS
	mov r8,rdi
	call LB_668
	C_POP_REGS
; .dlt.ptn 6'(= a36◂ [ a17◂ [ ]] )
	mov rdi,rcx
	C_PUSH_REGS
	mov r8,rdi
	call LB_622
	C_POP_REGS
; .dlt.ptn 5'(= a35◂ [ ] )
	mov rdi,r11
	C_PUSH_REGS
	mov r8,rdi
	call LB_623
	C_POP_REGS
; .dlt.ptn 2'(= a2◂ [ a21◂ [ {| l |}]] )
	mov rdi,r8
	C_PUSH_REGS
	mov r8,rdi
	call LB_496
	C_POP_REGS
; .mov_ptn2 { 0'(= r ) 8'(= {| l |} ) } ⊢ { 0'(= r ) 1'(= {| l |} ) }
; .mov_ptn 8'(= {| l |} ) ⊢ 1'(= {| l |} )
	mov rax,QWORD [rsp-8+8*1]
	mov r14,rax
	add rsp,8
	ret
LB_662:
;; ?; 1'(= a34◂ [ a17◂ [ ]{| l |}] ) ⊢ 1(<2)◂{ 2'(= a2◂ [ a21◂ [ {| l |}]] ) 3'(= a16◂ [ a21◂ [ {| l |}]] ) 4'(= a25◂ [ a17◂ [ ]{| l |}] ) 5'(= a35◂ [ ] ) 6'(= a36◂ [ a17◂ [ ]] ) 7'(= a3◂ [ *{ a16◂ [ a21◂ [ {| l |}]]a34◂ [ a17◂ [ ]{| l |}]}] ) }
	mov r8, QWORD [r14+8]
	mov r9, QWORD [r14+16]
	mov r10, QWORD [r14+24]
	mov r11, QWORD [r14+32]
	mov rcx, QWORD [r14+40]
	mov rdx, QWORD [r14+48]
	mov QWORD [GBG_VCT+8*0],r14
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_RCD 6,rdi
; #102 3'(= a16◂ [ a21◂ [ {| l |}]] ) ⊢ 1'(= {| l |} )
	sub rsp,48
	mov QWORD [rsp+8*0],r13
	mov QWORD [rsp+8*1],r8
	mov QWORD [rsp+8*2],r10
	mov QWORD [rsp+8*3],r11
	mov QWORD [rsp+8*4],rcx
	mov QWORD [rsp+8*5],rdx
; .mov_ptn2 3'(= a16◂ [ a21◂ [ {| l |}]] ) ⊢ 0'(= a16◂ [ a21◂ [ {| l |}]] )
; .mov_ptn 3'(= a16◂ [ a21◂ [ {| l |}]] ) ⊢ 0'(= a16◂ [ a21◂ [ {| l |}]] )
	mov rax,r9
	mov r13,rax
	call ETR_102
	mov rdx,QWORD [rsp-8+8*6]
	mov rcx,QWORD [rsp-8+8*5]
	mov r11,QWORD [rsp-8+8*4]
	mov r10,QWORD [rsp-8+8*3]
	mov r8,QWORD [rsp-8+8*2]
	mov r14,r13
	mov r13,QWORD [rsp-8+8*1]
	add rsp,48
; #11 0'(= r ) ⊢ 0'(= r )
	add r13,1
; #135 { 0'(= r ) 4'(= a25◂ [ a17◂ [ ]{| l |}] ) } ⊢ { 0'(= r ) 3'(= {| l |} ) }
	sub rsp,40
	mov QWORD [rsp+8*0],r14
	mov QWORD [rsp+8*1],r8
	mov QWORD [rsp+8*2],r11
	mov QWORD [rsp+8*3],rcx
	mov QWORD [rsp+8*4],rdx
; .mov_ptn2 { 0'(= r ) 4'(= a25◂ [ a17◂ [ ]{| l |}] ) } ⊢ { 0'(= r ) 1'(= a25◂ [ a17◂ [ ]{| l |}] ) }
; .mov_ptn 4'(= a25◂ [ a17◂ [ ]{| l |}] ) ⊢ 1'(= a25◂ [ a17◂ [ ]{| l |}] )
	mov rax,r10
	mov r14,rax
	call ETR_135
	mov rdx,QWORD [rsp-8+8*5]
	mov rcx,QWORD [rsp-8+8*4]
	mov r11,QWORD [rsp-8+8*3]
	mov r8,QWORD [rsp-8+8*2]
	mov r9,r14
	mov r14,QWORD [rsp-8+8*1]
	add rsp,40
; #12 0'(= r ) ⊢ 0'(= r )
	sub r13,1
; » _^ .. ⊢ ..
; .. //
	mov rdi,0
	mov rsi,r13
	imul rsi,1
	add rdi,rsi 
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[r14]
	add rdi,rax 
	push rax
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[r9]
	add rdi,rax 
	push rax
	add rdi,13
	push rdi 
	call mlc_s8
	pop rdi
	mov r10,rax
	lea rdi,[rax+7+rdi]
	std 
	mov QWORD [tmp],rcx 
	pop rcx
	lea rsi,[r9+7+rcx]
	rep movsb
	lea rsi,[LB_726+1-1]
	mov rcx,1
	rep movsb
	pop rcx
	lea rsi,[r14+7+rcx]
	rep movsb
	lea rsi,[LB_727+12-1]
	mov rcx,12
	rep movsb
	mov rax,r13
LB_729:
	cmp rax,0
	jz LB_730
	sub rax,1
	lea rsi,[LB_728+1-1]
	mov rcx,1
	rep movsb 
	jmp LB_729
LB_730:
	mov rcx,QWORD [tmp] 
; ∎ { 0'(= r ) 4'(= {| l |} ) }
; .dlt.ptn 3'(= {| l |} )
	mov rdi,r9
	C_PUSH_REGS
	mov r8,rdi
	mov rdi,r8
	call free_s8
	C_POP_REGS
; .dlt.ptn 1'(= {| l |} )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	mov rdi,r8
	call free_s8
	C_POP_REGS
; .dlt.ptn 7'(= a3◂ [ *{ a16◂ [ a21◂ [ {| l |}]]a34◂ [ a17◂ [ ]{| l |}]}] )
	mov rdi,rdx
	C_PUSH_REGS
	mov r8,rdi
	call LB_668
	C_POP_REGS
; .dlt.ptn 6'(= a36◂ [ a17◂ [ ]] )
	mov rdi,rcx
	C_PUSH_REGS
	mov r8,rdi
	call LB_622
	C_POP_REGS
; .dlt.ptn 5'(= a35◂ [ ] )
	mov rdi,r11
	C_PUSH_REGS
	mov r8,rdi
	call LB_623
	C_POP_REGS
; .dlt.ptn 2'(= a2◂ [ a21◂ [ {| l |}]] )
	mov rdi,r8
	C_PUSH_REGS
	mov r8,rdi
	call LB_496
	C_POP_REGS
; .mov_ptn2 { 0'(= r ) 4'(= {| l |} ) } ⊢ { 0'(= r ) 1'(= {| l |} ) }
; .mov_ptn 4'(= {| l |} ) ⊢ 1'(= {| l |} )
	mov rax,r10
	mov r14,rax
	ret
ETR_166: ;; act_regs { } ⊢ 0'(= a2◂ [ a21◂ [ {| l |}]] ) : ({ }→_lst◂_t21◂_s8)
; $ %[ "_r" ] ⊢ %[ "_r" ]
; $ %[ "_n" ] ⊢ %[ "_n" ]
; #92 %[ "_r" ] ⊢ 1(<2)◂%[ "_r" ]
; #92 %[ "_n" ] ⊢ 1(<2)◂%[ "_n" ]
; #22 { } ⊢ 1(<2)◂{ }
; #23 { 1(<2)◂%[ "_r" ] 1(<2)◂{ } } ⊢ 0(<2)◂{ 1(<2)◂%[ "_r" ] 1(<2)◂{ } }
; #23 { 1(<2)◂%[ "_n" ] 0(<2)◂{ 1(<2)◂%[ "_r" ] 1(<2)◂{ } } } ⊢ 0(<2)◂{ 1(<2)◂%[ "_n" ] 0(<2)◂{ 1(<2)◂%[ "_r" ] 1(<2)◂{ } } }
; ∎ 0(<2)◂{ 1(<2)◂%[ "_n" ] 0(<2)◂{ 1(<2)◂%[ "_r" ] 1(<2)◂{ } } }
; .mov_ptn2 0(<2)◂{ 1(<2)◂%[ "_n" ] 0(<2)◂{ 1(<2)◂%[ "_r" ] 1(<2)◂{ } } } ⊢ 0'(= a2◂ [ a21◂ [ {| l |}]] )
; .mov_ptn 0(<2)◂{ 1(<2)◂%[ "_n" ] 0(<2)◂{ 1(<2)◂%[ "_r" ] 1(<2)◂{ } } } ⊢ 0'(= a2◂ [ a21◂ [ {| l |}]] )
	ALC_RCD 2, rax
	mov r14,rax
	mov rsi,1  
	mov rdi,16
	xor rax,rax 
	C_CALL_SF calloc
	mov QWORD [rax],2
	mov BYTE [rax+8+0],95
	mov BYTE [rax+8+1],110
	mov BYTE [rax+6],1
	mov QWORD [r14+8+8*0],rax
	ALC_RCD 2, rax
	mov r8,rax
	mov rsi,1  
	mov rdi,16
	xor rax,rax 
	C_CALL_SF calloc
	mov QWORD [rax],2
	mov BYTE [rax+8+0],95
	mov BYTE [rax+8+1],114
	mov BYTE [rax+6],1
	mov QWORD [r8+8+8*0],rax
	mov rax,unt 
	mov rax,unt_1
	mov QWORD [r8+8+8*1],rax
	mov rax,r8
	mov BYTE [rax+6],0
	mov QWORD [r14+8+8*1],rax
	mov rax,r14
	mov BYTE [rax+6],0
	mov r13,rax
	ret
LB_771:
	movzx rax,BYTE [r8+6]
	jmp QWORD [LB_774+8*rax]
LB_774: dq LB_772,LB_773
LB_772:
	push r8
	mov r8,QWORD [r8+8+8*0]
	mov rdi,r8
	call free_s8
	pop r8 
	push r8
	mov r8,QWORD [r8+8+8*1]
	call LB_771
	pop r8 
	FREE_RCD 2, r8
	jmp LB_775
LB_773:
	jmp LB_775
LB_775:
	ret
LB_781:
	movzx rax,BYTE [r8+6]
	jmp QWORD [LB_787+8*rax]
LB_787: dq LB_782,LB_783,LB_784,LB_785,LB_786
LB_782:
	FREE_LN r8 
	mov r8,QWORD [r8+8]
	call LB_789
	jmp LB_788
LB_783:
	push r8
	mov r8,QWORD [r8+8+8*0]
	call LB_781
	pop r8 
	push r8
	mov r8,QWORD [r8+8+8*1]
	call LB_781
	pop r8 
	FREE_RCD 2, r8
	jmp LB_788
LB_784:
	push r8
	mov r8,QWORD [r8+8+8*0]
	call LB_781
	pop r8 
	push r8
	mov r8,QWORD [r8+8+8*1]
	call LB_781
	pop r8 
	FREE_RCD 2, r8
	jmp LB_788
LB_785:
	FREE_LN r8 
	mov r8,QWORD [r8+8]
	call LB_388
	jmp LB_788
LB_786:
	mov rdi,r8
	call free_s8
	jmp LB_788
LB_788:
	ret
LB_789:
	movzx rax,BYTE [r8+6]
	jmp QWORD [LB_792+8*rax]
LB_792: dq LB_790,LB_791
LB_790:
	push r8
	mov r8,QWORD [r8+8+8*0]
	call LB_781
	pop r8 
	push r8
	mov r8,QWORD [r8+8+8*1]
	call LB_789
	pop r8 
	FREE_RCD 2, r8
	jmp LB_793
LB_791:
	jmp LB_793
LB_793:
	ret
LB_839:
	movzx rax,BYTE [r8+6]
	jmp QWORD [LB_842+8*rax]
LB_842: dq LB_840,LB_841
LB_840:
	FREE_LN r8 
	mov r8,QWORD [r8+8]
	call LB_781
	jmp LB_843
LB_841:
	jmp LB_843
LB_843:
	ret
ETR_180: ;; pnt { 0'(= r ) 1'(= a2◂ [ a39◂ [ ]] ) } ⊢ { 0'(= r ) 1'(= {| l |} ) } : ({ _r64 _lst◂_t39 }→{ _r64 _s8 })
;; ?; 1'(= a2◂ [ a39◂ [ ]] ) ⊢ 1(<2)◂{ }
	mov rdi,r14
	cmp BYTE [rdi+6],1
	jnz LB_731
; $ %[ "" ] ⊢ %[ "" ]
; ∎ { 0'(= r ) %[ "" ] }
; .mov_ptn2 { 0'(= r ) %[ "" ] } ⊢ { 0'(= r ) 1'(= {| l |} ) }
; .mov_ptn %[ "" ] ⊢ 1'(= {| l |} )
	mov rsi,1  
	mov rdi,16
	xor rax,rax 
	C_CALL_SF calloc
	mov QWORD [rax],0
	mov r14,rax
	ret
LB_731:
;; ?; 1'(= a2◂ [ a39◂ [ ]] ) ⊢ 0(<2)◂{ 2'(= a39◂ [ ] ) 3'(= a2◂ [ a39◂ [ ]] ) }
	mov r8, QWORD [r14+8]
	mov r9, QWORD [r14+16]
	mov QWORD [GBG_VCT+8*0],r14
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_RCD 2,rdi
; #181 { 0'(= r ) 2'(= a39◂ [ ] ) } ⊢ { 0'(= r ) 1'(= {| l |} ) }
	sub rsp,8
	mov QWORD [rsp+8*0],r9
; .mov_ptn2 { 0'(= r ) 2'(= a39◂ [ ] ) } ⊢ { 0'(= r ) 1'(= a39◂ [ ] ) }
; .mov_ptn 2'(= a39◂ [ ] ) ⊢ 1'(= a39◂ [ ] )
	mov rax,r8
	mov r14,rax
	call ETR_181
	mov r9,QWORD [rsp-8+8*1]
	add rsp,8
; #180 { 0'(= r ) 3'(= a2◂ [ a39◂ [ ]] ) } ⊢ { 0'(= r ) 2'(= {| l |} ) }
	sub rsp,8
	mov QWORD [rsp+8*0],r14
; .mov_ptn2 { 0'(= r ) 3'(= a2◂ [ a39◂ [ ]] ) } ⊢ { 0'(= r ) 1'(= a2◂ [ a39◂ [ ]] ) }
; .mov_ptn 3'(= a2◂ [ a39◂ [ ]] ) ⊢ 1'(= a2◂ [ a39◂ [ ]] )
	mov rax,r9
	mov r14,rax
	call ETR_180
	mov r8,r14
	mov r14,QWORD [rsp-8+8*1]
	add rsp,8
; » _^ .. ⊢ ..
; .. //
	mov rdi,0
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[r14]
	add rdi,rax 
	push rax
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[r8]
	add rdi,rax 
	push rax
	add rdi,0
	push rdi 
	call mlc_s8
	pop rdi
	mov r9,rax
	lea rdi,[rax+7+rdi]
	std 
	mov QWORD [tmp],rcx 
	pop rcx
	lea rsi,[r8+7+rcx]
	rep movsb
	pop rcx
	lea rsi,[r14+7+rcx]
	rep movsb
	mov rcx,QWORD [tmp] 
; ∎ { 0'(= r ) 3'(= {| l |} ) }
; .dlt.ptn 2'(= {| l |} )
	mov rdi,r8
	C_PUSH_REGS
	mov r8,rdi
	mov rdi,r8
	call free_s8
	C_POP_REGS
; .dlt.ptn 1'(= {| l |} )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	mov rdi,r8
	call free_s8
	C_POP_REGS
; .mov_ptn2 { 0'(= r ) 3'(= {| l |} ) } ⊢ { 0'(= r ) 1'(= {| l |} ) }
; .mov_ptn 3'(= {| l |} ) ⊢ 1'(= {| l |} )
	mov rax,r9
	mov r14,rax
	ret
ETR_181: ;; pnt_glb_etr { 0'(= r ) 1'(= a39◂ [ ] ) } ⊢ { 0'(= r ) 1'(= {| l |} ) } : ({ _r64 _t39 }→{ _r64 _s8 })
;; ?; 1'(= a39◂ [ ] ) ⊢ 0(<6)◂{ 2'(= {| l |} ) 3'(= a40◂ [ ] ) }
	mov rdi,r14
	cmp BYTE [rdi+6],0
	jnz LB_732
	mov r8, QWORD [r14+8]
	mov r9, QWORD [r14+16]
	mov QWORD [GBG_VCT+8*0],r14
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_RCD 2,rdi
;; ?; 3'(= a40◂ [ ] ) ⊢ 0(<2)◂1'(= a2◂ [ a39◂ [ ]] )
	mov rdi,r9
	cmp BYTE [rdi+6],0
	jnz LB_733
	mov QWORD [GBG_VCT+8*0],rdi
	mov r14,QWORD [rdi+8]
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_LN rdi
; #11 0'(= r ) ⊢ 0'(= r )
	add r13,1
; #180 { 0'(= r ) 1'(= a2◂ [ a39◂ [ ]] ) } ⊢ { 0'(= r ) 1'(= {| l |} ) }
	sub rsp,8
	mov QWORD [rsp+8*0],r8
; .mov_ptn2 { 0'(= r ) 1'(= a2◂ [ a39◂ [ ]] ) } ⊢ { 0'(= r ) 1'(= a2◂ [ a39◂ [ ]] ) }
	call ETR_180
	mov r8,QWORD [rsp-8+8*1]
	add rsp,8
; #12 0'(= r ) ⊢ 0'(= r )
	sub r13,1
; » _^ .. ⊢ ..
; .. //
	mov rdi,0
	mov rsi,r13
	imul rsi,1
	add rdi,rsi 
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[r8]
	add rdi,rax 
	push rax
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[r14]
	add rdi,rax 
	push rax
	mov rsi,r13
	imul rsi,1
	add rdi,rsi 
	add rdi,14
	push rdi 
	call mlc_s8
	pop rdi
	mov r9,rax
	lea rdi,[rax+7+rdi]
	std 
	mov QWORD [tmp],rcx 
	lea rsi,[LB_734+8-1]
	mov rcx,8
	rep movsb
	mov rax,r13
LB_736:
	cmp rax,0
	jz LB_737
	sub rax,1
	lea rsi,[LB_735+1-1]
	mov rcx,1
	rep movsb 
	jmp LB_736
LB_737:
	pop rcx
	lea rsi,[r14+7+rcx]
	rep movsb
	lea rsi,[LB_738+1-1]
	mov rcx,1
	rep movsb
	pop rcx
	lea rsi,[r8+7+rcx]
	rep movsb
	lea rsi,[LB_739+5-1]
	mov rcx,5
	rep movsb
	mov rax,r13
LB_741:
	cmp rax,0
	jz LB_742
	sub rax,1
	lea rsi,[LB_740+1-1]
	mov rcx,1
	rep movsb 
	jmp LB_741
LB_742:
	mov rcx,QWORD [tmp] 
; ∎ { 0'(= r ) 3'(= {| l |} ) }
; .dlt.ptn 1'(= {| l |} )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	mov rdi,r8
	call free_s8
	C_POP_REGS
; .dlt.ptn 2'(= {| l |} )
	mov rdi,r8
	C_PUSH_REGS
	mov r8,rdi
	mov rdi,r8
	call free_s8
	C_POP_REGS
; .mov_ptn2 { 0'(= r ) 3'(= {| l |} ) } ⊢ { 0'(= r ) 1'(= {| l |} ) }
; .mov_ptn 3'(= {| l |} ) ⊢ 1'(= {| l |} )
	mov rax,r9
	mov r14,rax
	ret
LB_733:
;; ?; 3'(= a40◂ [ ] ) ⊢ 1(<2)◂1'(= a17◂ [ ] )
	mov QWORD [GBG_VCT+8*0],rdi
	mov r14,QWORD [rdi+8]
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_LN rdi
; #85 1'(= a17◂ [ ] ) ⊢ 1'(= {| l |} )
	sub rsp,16
	mov QWORD [rsp+8*0],r13
	mov QWORD [rsp+8*1],r8
; .mov_ptn2 1'(= a17◂ [ ] ) ⊢ 0'(= a17◂ [ ] )
; .mov_ptn 1'(= a17◂ [ ] ) ⊢ 0'(= a17◂ [ ] )
	mov rax,r14
	mov r13,rax
	call ETR_85
	mov r8,QWORD [rsp-8+8*2]
	mov r14,r13
	mov r13,QWORD [rsp-8+8*1]
	add rsp,16
; » _^ .. ⊢ ..
; .. //
	mov rdi,0
	mov rsi,r13
	imul rsi,1
	add rdi,rsi 
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[r8]
	add rdi,rax 
	push rax
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[r14]
	add rdi,rax 
	push rax
	add rdi,9
	push rdi 
	call mlc_s8
	pop rdi
	mov r9,rax
	lea rdi,[rax+7+rdi]
	std 
	mov QWORD [tmp],rcx 
	lea rsi,[LB_743+1-1]
	mov rcx,1
	rep movsb
	pop rcx
	lea rsi,[r14+7+rcx]
	rep movsb
	lea rsi,[LB_744+3-1]
	mov rcx,3
	rep movsb
	pop rcx
	lea rsi,[r8+7+rcx]
	rep movsb
	lea rsi,[LB_745+5-1]
	mov rcx,5
	rep movsb
	mov rax,r13
LB_747:
	cmp rax,0
	jz LB_748
	sub rax,1
	lea rsi,[LB_746+1-1]
	mov rcx,1
	rep movsb 
	jmp LB_747
LB_748:
	mov rcx,QWORD [tmp] 
; ∎ { 0'(= r ) 3'(= {| l |} ) }
; .dlt.ptn 1'(= {| l |} )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	mov rdi,r8
	call free_s8
	C_POP_REGS
; .dlt.ptn 2'(= {| l |} )
	mov rdi,r8
	C_PUSH_REGS
	mov r8,rdi
	mov rdi,r8
	call free_s8
	C_POP_REGS
; .mov_ptn2 { 0'(= r ) 3'(= {| l |} ) } ⊢ { 0'(= r ) 1'(= {| l |} ) }
; .mov_ptn 3'(= {| l |} ) ⊢ 1'(= {| l |} )
	mov rax,r9
	mov r14,rax
	ret
LB_732:
;; ?; 1'(= a39◂ [ ] ) ⊢ 1(<6)◂2'(= a2◂ [ *{ {| l |}a32◂ [ a17◂ [ ]{| l |}]}] )
	mov rdi,r14
	cmp BYTE [rdi+6],1
	jnz LB_749
	mov QWORD [GBG_VCT+8*0],rdi
	mov r8,QWORD [rdi+8]
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_LN rdi
; #11 0'(= r ) ⊢ 0'(= r )
	add r13,1
; #160 { 0'(= r ) 2'(= a2◂ [ *{ {| l |}a32◂ [ a17◂ [ ]{| l |}]}] ) } ⊢ { 0'(= r ) 1'(= {| l |} ) }
; .mov_ptn2 { 0'(= r ) 2'(= a2◂ [ *{ {| l |}a32◂ [ a17◂ [ ]{| l |}]}] ) } ⊢ { 0'(= r ) 1'(= a2◂ [ *{ {| l |}a32◂ [ a17◂ [ ]{| l |}]}] ) }
; .mov_ptn 2'(= a2◂ [ *{ {| l |}a32◂ [ a17◂ [ ]{| l |}]}] ) ⊢ 1'(= a2◂ [ *{ {| l |}a32◂ [ a17◂ [ ]{| l |}]}] )
	mov rax,r8
	mov r14,rax
	call ETR_160
; #12 0'(= r ) ⊢ 0'(= r )
	sub r13,1
; » _^ .. ⊢ ..
; .. //
	mov rdi,0
	mov rsi,r13
	imul rsi,1
	add rdi,rsi 
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[r14]
	add rdi,rax 
	push rax
	add rdi,8
	push rdi 
	call mlc_s8
	pop rdi
	mov r8,rax
	lea rdi,[rax+7+rdi]
	std 
	mov QWORD [tmp],rcx 
	pop rcx
	lea rsi,[r14+7+rcx]
	rep movsb
	lea rsi,[LB_750+8-1]
	mov rcx,8
	rep movsb
	mov rax,r13
LB_752:
	cmp rax,0
	jz LB_753
	sub rax,1
	lea rsi,[LB_751+1-1]
	mov rcx,1
	rep movsb 
	jmp LB_752
LB_753:
	mov rcx,QWORD [tmp] 
; ∎ { 0'(= r ) 2'(= {| l |} ) }
; .dlt.ptn 1'(= {| l |} )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	mov rdi,r8
	call free_s8
	C_POP_REGS
; .mov_ptn2 { 0'(= r ) 2'(= {| l |} ) } ⊢ { 0'(= r ) 1'(= {| l |} ) }
; .mov_ptn 2'(= {| l |} ) ⊢ 1'(= {| l |} )
	mov rax,r8
	mov r14,rax
	ret
LB_749:
;; ?; 1'(= a39◂ [ ] ) ⊢ 2(<6)◂{ 2'(= {| l |} ) 3'(= a41◂ [ ] ) }
	mov rdi,r14
	cmp BYTE [rdi+6],2
	jnz LB_754
	mov r8, QWORD [r14+8]
	mov r9, QWORD [r14+16]
	mov QWORD [GBG_VCT+8*0],r14
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_RCD 2,rdi
; #11 0'(= r ) ⊢ 0'(= r )
	add r13,1
; #187 { 0'(= r ) 3'(= a41◂ [ ] ) } ⊢ { 0'(= r ) 1'(= {| l |} ) }
	sub rsp,8
	mov QWORD [rsp+8*0],r8
; .mov_ptn2 { 0'(= r ) 3'(= a41◂ [ ] ) } ⊢ { 0'(= r ) 1'(= a41◂ [ ] ) }
; .mov_ptn 3'(= a41◂ [ ] ) ⊢ 1'(= a41◂ [ ] )
	mov rax,r9
	mov r14,rax
	call ETR_187
	mov r8,QWORD [rsp-8+8*1]
	add rsp,8
; #12 0'(= r ) ⊢ 0'(= r )
	sub r13,1
; » _^ .. ⊢ ..
; .. //
	mov rdi,0
	mov rsi,r13
	imul rsi,1
	add rdi,rsi 
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[r8]
	add rdi,rax 
	push rax
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[r14]
	add rdi,rax 
	push rax
	add rdi,3
	push rdi 
	call mlc_s8
	pop rdi
	mov r9,rax
	lea rdi,[rax+7+rdi]
	std 
	mov QWORD [tmp],rcx 
	pop rcx
	lea rsi,[r14+7+rcx]
	rep movsb
	pop rcx
	lea rsi,[r8+7+rcx]
	rep movsb
	lea rsi,[LB_755+3-1]
	mov rcx,3
	rep movsb
	mov rax,r13
LB_757:
	cmp rax,0
	jz LB_758
	sub rax,1
	lea rsi,[LB_756+1-1]
	mov rcx,1
	rep movsb 
	jmp LB_757
LB_758:
	mov rcx,QWORD [tmp] 
; ∎ { 0'(= r ) 3'(= {| l |} ) }
; .dlt.ptn 1'(= {| l |} )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	mov rdi,r8
	call free_s8
	C_POP_REGS
; .dlt.ptn 2'(= {| l |} )
	mov rdi,r8
	C_PUSH_REGS
	mov r8,rdi
	mov rdi,r8
	call free_s8
	C_POP_REGS
; .mov_ptn2 { 0'(= r ) 3'(= {| l |} ) } ⊢ { 0'(= r ) 1'(= {| l |} ) }
; .mov_ptn 3'(= {| l |} ) ⊢ 1'(= {| l |} )
	mov rax,r9
	mov r14,rax
	ret
LB_754:
;; ?; 1'(= a39◂ [ ] ) ⊢ 3(<6)◂2'(= a2◂ [ *{ {| l |}a16◂ [ a21◂ [ {| l |}]]a3◂ [ a31◂ [ ]]a25◂ [ a17◂ [ ]{| l |}]}] )
	mov rdi,r14
	cmp BYTE [rdi+6],3
	jnz LB_759
	mov QWORD [GBG_VCT+8*0],rdi
	mov r8,QWORD [rdi+8]
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_LN rdi
; #11 0'(= r ) ⊢ 0'(= r )
	add r13,1
; #188 { 0'(= r ) 2'(= a2◂ [ *{ {| l |}a16◂ [ a21◂ [ {| l |}]]a3◂ [ a31◂ [ ]]a25◂ [ a17◂ [ ]{| l |}]}] ) } ⊢ { 0'(= r ) 1'(= {| l |} ) }
; .mov_ptn2 { 0'(= r ) 2'(= a2◂ [ *{ {| l |}a16◂ [ a21◂ [ {| l |}]]a3◂ [ a31◂ [ ]]a25◂ [ a17◂ [ ]{| l |}]}] ) } ⊢ { 0'(= r ) 1'(= a2◂ [ *{ {| l |}a16◂ [ a21◂ [ {| l |}]]a3◂ [ a31◂ [ ]]a25◂ [ a17◂ [ ]{| l |}]}] ) }
; .mov_ptn 2'(= a2◂ [ *{ {| l |}a16◂ [ a21◂ [ {| l |}]]a3◂ [ a31◂ [ ]]a25◂ [ a17◂ [ ]{| l |}]}] ) ⊢ 1'(= a2◂ [ *{ {| l |}a16◂ [ a21◂ [ {| l |}]]a3◂ [ a31◂ [ ]]a25◂ [ a17◂ [ ]{| l |}]}] )
	mov rax,r8
	mov r14,rax
	call ETR_188
; #12 0'(= r ) ⊢ 0'(= r )
	sub r13,1
; » _^ .. ⊢ ..
; .. //
	mov rdi,0
	mov rsi,r13
	imul rsi,1
	add rdi,rsi 
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[r14]
	add rdi,rax 
	push rax
	add rdi,4
	push rdi 
	call mlc_s8
	pop rdi
	mov r8,rax
	lea rdi,[rax+7+rdi]
	std 
	mov QWORD [tmp],rcx 
	pop rcx
	lea rsi,[r14+7+rcx]
	rep movsb
	lea rsi,[LB_760+4-1]
	mov rcx,4
	rep movsb
	mov rax,r13
LB_762:
	cmp rax,0
	jz LB_763
	sub rax,1
	lea rsi,[LB_761+1-1]
	mov rcx,1
	rep movsb 
	jmp LB_762
LB_763:
	mov rcx,QWORD [tmp] 
; ∎ { 0'(= r ) 2'(= {| l |} ) }
; .dlt.ptn 1'(= {| l |} )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	mov rdi,r8
	call free_s8
	C_POP_REGS
; .mov_ptn2 { 0'(= r ) 2'(= {| l |} ) } ⊢ { 0'(= r ) 1'(= {| l |} ) }
; .mov_ptn 2'(= {| l |} ) ⊢ 1'(= {| l |} )
	mov rax,r8
	mov r14,rax
	ret
LB_759:
;; ?; 1'(= a39◂ [ ] ) ⊢ 4(<6)◂{ 2'(= {| l |} ) 3'(= a42◂ [ ] ) }
	mov rdi,r14
	cmp BYTE [rdi+6],4
	jnz LB_764
	mov r8, QWORD [r14+8]
	mov r9, QWORD [r14+16]
	mov QWORD [GBG_VCT+8*0],r14
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_RCD 2,rdi
;; ?; 3'(= a42◂ [ ] ) ⊢ 0(<2)◂{ 1'(= a2◂ [ {| l |}] ) 4'(= a2◂ [ *{ {| l |}a31◂ [ ]}] ) }
	mov rdi,r9
	cmp BYTE [rdi+6],0
	jnz LB_765
	mov r14, QWORD [r9+8]
	mov r10, QWORD [r9+16]
	mov QWORD [GBG_VCT+8*0],r9
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_RCD 2,rdi
; #11 0'(= r ) ⊢ 0'(= r )
	add r13,1
; #184 { 0'(= r ) 4'(= a2◂ [ *{ {| l |}a31◂ [ ]}] ) } ⊢ { 0'(= r ) 3'(= {| l |} ) }
	sub rsp,16
	mov QWORD [rsp+8*0],r14
	mov QWORD [rsp+8*1],r8
; .mov_ptn2 { 0'(= r ) 4'(= a2◂ [ *{ {| l |}a31◂ [ ]}] ) } ⊢ { 0'(= r ) 1'(= a2◂ [ *{ {| l |}a31◂ [ ]}] ) }
; .mov_ptn 4'(= a2◂ [ *{ {| l |}a31◂ [ ]}] ) ⊢ 1'(= a2◂ [ *{ {| l |}a31◂ [ ]}] )
	mov rax,r10
	mov r14,rax
	call ETR_184
	mov r8,QWORD [rsp-8+8*2]
	mov r9,r14
	mov r14,QWORD [rsp-8+8*1]
	add rsp,16
; #12 0'(= r ) ⊢ 0'(= r )
	sub r13,1
; » _^ .. ⊢ ..
; .. //
	mov rdi,0
	mov rsi,r13
	imul rsi,1
	add rdi,rsi 
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[r8]
	add rdi,rax 
	push rax
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[r9]
	add rdi,rax 
	push rax
	add rdi,4
	push rdi 
	call mlc_s8
	pop rdi
	mov r10,rax
	lea rdi,[rax+7+rdi]
	std 
	mov QWORD [tmp],rcx 
	pop rcx
	lea rsi,[r9+7+rcx]
	rep movsb
	lea rsi,[LB_766+1-1]
	mov rcx,1
	rep movsb
	pop rcx
	lea rsi,[r8+7+rcx]
	rep movsb
	lea rsi,[LB_767+3-1]
	mov rcx,3
	rep movsb
	mov rax,r13
LB_769:
	cmp rax,0
	jz LB_770
	sub rax,1
	lea rsi,[LB_768+1-1]
	mov rcx,1
	rep movsb 
	jmp LB_769
LB_770:
	mov rcx,QWORD [tmp] 
; ∎ { 0'(= r ) 4'(= {| l |} ) }
; .dlt.ptn 3'(= {| l |} )
	mov rdi,r9
	C_PUSH_REGS
	mov r8,rdi
	mov rdi,r8
	call free_s8
	C_POP_REGS
; .dlt.ptn 2'(= {| l |} )
	mov rdi,r8
	C_PUSH_REGS
	mov r8,rdi
	mov rdi,r8
	call free_s8
	C_POP_REGS
; .dlt.ptn 1'(= a2◂ [ {| l |}] )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	call LB_771
	C_POP_REGS
; .mov_ptn2 { 0'(= r ) 4'(= {| l |} ) } ⊢ { 0'(= r ) 1'(= {| l |} ) }
; .mov_ptn 4'(= {| l |} ) ⊢ 1'(= {| l |} )
	mov rax,r10
	mov r14,rax
	ret
LB_765:
;; ?; 3'(= a42◂ [ ] ) ⊢ 1(<2)◂{ 1'(= a2◂ [ {| l |}] ) 4'(= a31◂ [ ] ) }
	mov r14, QWORD [r9+8]
	mov r10, QWORD [r9+16]
	mov QWORD [GBG_VCT+8*0],r9
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_RCD 2,rdi
; » _^ .. ⊢ ..
; .. //
	mov rdi,0
	mov rsi,r13
	imul rsi,1
	add rdi,rsi 
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[r8]
	add rdi,rax 
	push rax
	add rdi,10
	push rdi 
	call mlc_s8
	pop rdi
	mov r9,rax
	lea rdi,[rax+7+rdi]
	std 
	mov QWORD [tmp],rcx 
	lea rsi,[LB_776+7-1]
	mov rcx,7
	rep movsb
	pop rcx
	lea rsi,[r8+7+rcx]
	rep movsb
	lea rsi,[LB_777+3-1]
	mov rcx,3
	rep movsb
	mov rax,r13
LB_779:
	cmp rax,0
	jz LB_780
	sub rax,1
	lea rsi,[LB_778+1-1]
	mov rcx,1
	rep movsb 
	jmp LB_779
LB_780:
	mov rcx,QWORD [tmp] 
; ∎ { 0'(= r ) 3'(= {| l |} ) }
; .dlt.ptn 2'(= {| l |} )
	mov rdi,r8
	C_PUSH_REGS
	mov r8,rdi
	mov rdi,r8
	call free_s8
	C_POP_REGS
; .dlt.ptn 4'(= a31◂ [ ] )
	mov rdi,r10
	C_PUSH_REGS
	mov r8,rdi
	call LB_781
	C_POP_REGS
; .dlt.ptn 1'(= a2◂ [ {| l |}] )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	call LB_771
	C_POP_REGS
; .mov_ptn2 { 0'(= r ) 3'(= {| l |} ) } ⊢ { 0'(= r ) 1'(= {| l |} ) }
; .mov_ptn 3'(= {| l |} ) ⊢ 1'(= {| l |} )
	mov rax,r9
	mov r14,rax
	ret
LB_764:
;; ?; 1'(= a39◂ [ ] ) ⊢ 5(<6)◂2'(= a2◂ [ *{ {| l |}a42◂ [ ]}] )
	mov QWORD [GBG_VCT+8*0],rdi
	mov r8,QWORD [rdi+8]
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_LN rdi
; #11 0'(= r ) ⊢ 0'(= r )
	add r13,1
; #182 { 0'(= r ) 2'(= a2◂ [ *{ {| l |}a42◂ [ ]}] ) } ⊢ { 0'(= r ) 1'(= {| l |} ) }
; .mov_ptn2 { 0'(= r ) 2'(= a2◂ [ *{ {| l |}a42◂ [ ]}] ) } ⊢ { 0'(= r ) 1'(= a2◂ [ *{ {| l |}a42◂ [ ]}] ) }
; .mov_ptn 2'(= a2◂ [ *{ {| l |}a42◂ [ ]}] ) ⊢ 1'(= a2◂ [ *{ {| l |}a42◂ [ ]}] )
	mov rax,r8
	mov r14,rax
	call ETR_182
; #12 0'(= r ) ⊢ 0'(= r )
	sub r13,1
; » _^ .. ⊢ ..
; .. //
	mov rdi,0
	mov rsi,r13
	imul rsi,1
	add rdi,rsi 
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[r14]
	add rdi,rax 
	push rax
	add rdi,3
	push rdi 
	call mlc_s8
	pop rdi
	mov r8,rax
	lea rdi,[rax+7+rdi]
	std 
	mov QWORD [tmp],rcx 
	pop rcx
	lea rsi,[r14+7+rcx]
	rep movsb
	lea rsi,[LB_794+3-1]
	mov rcx,3
	rep movsb
	mov rax,r13
LB_796:
	cmp rax,0
	jz LB_797
	sub rax,1
	lea rsi,[LB_795+1-1]
	mov rcx,1
	rep movsb 
	jmp LB_796
LB_797:
	mov rcx,QWORD [tmp] 
; ∎ { 0'(= r ) 2'(= {| l |} ) }
; .dlt.ptn 1'(= {| l |} )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	mov rdi,r8
	call free_s8
	C_POP_REGS
; .mov_ptn2 { 0'(= r ) 2'(= {| l |} ) } ⊢ { 0'(= r ) 1'(= {| l |} ) }
; .mov_ptn 2'(= {| l |} ) ⊢ 1'(= {| l |} )
	mov rax,r8
	mov r14,rax
	ret
ETR_182: ;; pnt_dt_qlq_etr { 0'(= r ) 1'(= a2◂ [ *{ {| l |}a42◂ [ ]}] ) } ⊢ { 0'(= r ) 1'(= {| l |} ) } : ({ _r64 _lst◂{ _s8 _t42 } }→{ _r64 _s8 })
;; ?; 1'(= a2◂ [ *{ {| l |}a42◂ [ ]}] ) ⊢ 0(<2)◂{ { 3'(= {| l |} ) 4'(= a42◂ [ ] ) } 5'(= a2◂ [ *{ {| l |}a42◂ [ ]}] ) }
	mov rdi,r14
	cmp BYTE [rdi+6],0
	jnz LB_798
	mov r8, QWORD [r14+8]
	mov r9, QWORD [r8+8]
	mov r10, QWORD [r8+16]
	mov QWORD [GBG_VCT+8*0],r8
	mov r11, QWORD [r14+16]
	mov QWORD [GBG_VCT+8*1],r14
	mov rdi,QWORD [GBG_VCT+8*1]
	FREE_RCD 2,rdi
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_RCD 2,rdi
; #182 { 0'(= r ) 5'(= a2◂ [ *{ {| l |}a42◂ [ ]}] ) } ⊢ { 0'(= r ) 1'(= {| l |} ) }
	sub rsp,16
	mov QWORD [rsp+8*0],r9
	mov QWORD [rsp+8*1],r10
; .mov_ptn2 { 0'(= r ) 5'(= a2◂ [ *{ {| l |}a42◂ [ ]}] ) } ⊢ { 0'(= r ) 1'(= a2◂ [ *{ {| l |}a42◂ [ ]}] ) }
; .mov_ptn 5'(= a2◂ [ *{ {| l |}a42◂ [ ]}] ) ⊢ 1'(= a2◂ [ *{ {| l |}a42◂ [ ]}] )
	mov rax,r11
	mov r14,rax
	call ETR_182
	mov r10,QWORD [rsp-8+8*2]
	mov r9,QWORD [rsp-8+8*1]
	add rsp,16
;; ?; 4'(= a42◂ [ ] ) ⊢ 0(<2)◂{ 2'(= a2◂ [ {| l |}] ) 5'(= a2◂ [ *{ {| l |}a31◂ [ ]}] ) }
	mov rdi,r10
	cmp BYTE [rdi+6],0
	jnz LB_799
	mov r8, QWORD [r10+8]
	mov r11, QWORD [r10+16]
	mov QWORD [GBG_VCT+8*0],r10
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_RCD 2,rdi
; #11 0'(= r ) ⊢ 0'(= r )
	add r13,1
; #184 { 0'(= r ) 5'(= a2◂ [ *{ {| l |}a31◂ [ ]}] ) } ⊢ { 0'(= r ) 4'(= {| l |} ) }
	sub rsp,24
	mov QWORD [rsp+8*0],r14
	mov QWORD [rsp+8*1],r8
	mov QWORD [rsp+8*2],r9
; .mov_ptn2 { 0'(= r ) 5'(= a2◂ [ *{ {| l |}a31◂ [ ]}] ) } ⊢ { 0'(= r ) 1'(= a2◂ [ *{ {| l |}a31◂ [ ]}] ) }
; .mov_ptn 5'(= a2◂ [ *{ {| l |}a31◂ [ ]}] ) ⊢ 1'(= a2◂ [ *{ {| l |}a31◂ [ ]}] )
	mov rax,r11
	mov r14,rax
	call ETR_184
	mov r9,QWORD [rsp-8+8*3]
	mov r8,QWORD [rsp-8+8*2]
	mov r10,r14
	mov r14,QWORD [rsp-8+8*1]
	add rsp,24
; #12 0'(= r ) ⊢ 0'(= r )
	sub r13,1
; » _^ .. ⊢ ..
; .. //
	mov rdi,0
	mov rsi,r13
	imul rsi,1
	add rdi,rsi 
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[r9]
	add rdi,rax 
	push rax
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[r10]
	add rdi,rax 
	push rax
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[r14]
	add rdi,rax 
	push rax
	add rdi,3
	push rdi 
	call mlc_s8
	pop rdi
	mov r11,rax
	lea rdi,[rax+7+rdi]
	std 
	mov QWORD [tmp],rcx 
	pop rcx
	lea rsi,[r14+7+rcx]
	rep movsb
	pop rcx
	lea rsi,[r10+7+rcx]
	rep movsb
	lea rsi,[LB_800+1-1]
	mov rcx,1
	rep movsb
	pop rcx
	lea rsi,[r9+7+rcx]
	rep movsb
	lea rsi,[LB_801+2-1]
	mov rcx,2
	rep movsb
	mov rax,r13
LB_803:
	cmp rax,0
	jz LB_804
	sub rax,1
	lea rsi,[LB_802+1-1]
	mov rcx,1
	rep movsb 
	jmp LB_803
LB_804:
	mov rcx,QWORD [tmp] 
; ∎ { 0'(= r ) 5'(= {| l |} ) }
; .dlt.ptn 1'(= {| l |} )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	mov rdi,r8
	call free_s8
	C_POP_REGS
; .dlt.ptn 4'(= {| l |} )
	mov rdi,r10
	C_PUSH_REGS
	mov r8,rdi
	mov rdi,r8
	call free_s8
	C_POP_REGS
; .dlt.ptn 3'(= {| l |} )
	mov rdi,r9
	C_PUSH_REGS
	mov r8,rdi
	mov rdi,r8
	call free_s8
	C_POP_REGS
; .dlt.ptn 2'(= a2◂ [ {| l |}] )
	mov rdi,r8
	C_PUSH_REGS
	mov r8,rdi
	call LB_771
	C_POP_REGS
; .mov_ptn2 { 0'(= r ) 5'(= {| l |} ) } ⊢ { 0'(= r ) 1'(= {| l |} ) }
; .mov_ptn 5'(= {| l |} ) ⊢ 1'(= {| l |} )
	mov rax,r11
	mov r14,rax
	ret
LB_799:
;; ?; 4'(= a42◂ [ ] ) ⊢ 1(<2)◂{ 2'(= a2◂ [ {| l |}] ) 5'(= a31◂ [ ] ) }
	mov r8, QWORD [r10+8]
	mov r11, QWORD [r10+16]
	mov QWORD [GBG_VCT+8*0],r10
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_RCD 2,rdi
; » _^ .. ⊢ ..
; .. //
	mov rdi,0
	mov rsi,r13
	imul rsi,1
	add rdi,rsi 
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[r9]
	add rdi,rax 
	push rax
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[r14]
	add rdi,rax 
	push rax
	add rdi,9
	push rdi 
	call mlc_s8
	pop rdi
	mov r10,rax
	lea rdi,[rax+7+rdi]
	std 
	mov QWORD [tmp],rcx 
	pop rcx
	lea rsi,[r14+7+rcx]
	rep movsb
	lea rsi,[LB_805+7-1]
	mov rcx,7
	rep movsb
	pop rcx
	lea rsi,[r9+7+rcx]
	rep movsb
	lea rsi,[LB_806+2-1]
	mov rcx,2
	rep movsb
	mov rax,r13
LB_808:
	cmp rax,0
	jz LB_809
	sub rax,1
	lea rsi,[LB_807+1-1]
	mov rcx,1
	rep movsb 
	jmp LB_808
LB_809:
	mov rcx,QWORD [tmp] 
; ∎ { 0'(= r ) 4'(= {| l |} ) }
; .dlt.ptn 1'(= {| l |} )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	mov rdi,r8
	call free_s8
	C_POP_REGS
; .dlt.ptn 3'(= {| l |} )
	mov rdi,r9
	C_PUSH_REGS
	mov r8,rdi
	mov rdi,r8
	call free_s8
	C_POP_REGS
; .dlt.ptn 5'(= a31◂ [ ] )
	mov rdi,r11
	C_PUSH_REGS
	mov r8,rdi
	call LB_781
	C_POP_REGS
; .dlt.ptn 2'(= a2◂ [ {| l |}] )
	mov rdi,r8
	C_PUSH_REGS
	mov r8,rdi
	call LB_771
	C_POP_REGS
; .mov_ptn2 { 0'(= r ) 4'(= {| l |} ) } ⊢ { 0'(= r ) 1'(= {| l |} ) }
; .mov_ptn 4'(= {| l |} ) ⊢ 1'(= {| l |} )
	mov rax,r10
	mov r14,rax
	ret
LB_798:
;; ?; 1'(= a2◂ [ *{ {| l |}a42◂ [ ]}] ) ⊢ 1(<2)◂{ }
; $ %[ "" ] ⊢ %[ "" ]
; ∎ { 0'(= r ) %[ "" ] }
; .mov_ptn2 { 0'(= r ) %[ "" ] } ⊢ { 0'(= r ) 1'(= {| l |} ) }
; .mov_ptn %[ "" ] ⊢ 1'(= {| l |} )
	mov rsi,1  
	mov rdi,16
	xor rax,rax 
	C_CALL_SF calloc
	mov QWORD [rax],0
	mov r14,rax
	ret
ETR_183: ;; pnt_dt_etr { 0'(= r ) 1'(= a42◂ [ ] ) } ⊢ { 0'(= r ) 1'(= {| l |} ) } : ({ _r64 _t42 }→{ _r64 _s8 })
;; ?; 1'(= a42◂ [ ] ) ⊢ 0(<2)◂{ 2'(= a2◂ [ {| l |}] ) 3'(= a2◂ [ *{ {| l |}a31◂ [ ]}] ) }
	mov rdi,r14
	cmp BYTE [rdi+6],0
	jnz LB_810
	mov r8, QWORD [r14+8]
	mov r9, QWORD [r14+16]
	mov QWORD [GBG_VCT+8*0],r14
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_RCD 2,rdi
; #11 0'(= r ) ⊢ 0'(= r )
	add r13,1
; #184 { 0'(= r ) 3'(= a2◂ [ *{ {| l |}a31◂ [ ]}] ) } ⊢ { 0'(= r ) 1'(= {| l |} ) }
	sub rsp,8
	mov QWORD [rsp+8*0],r8
; .mov_ptn2 { 0'(= r ) 3'(= a2◂ [ *{ {| l |}a31◂ [ ]}] ) } ⊢ { 0'(= r ) 1'(= a2◂ [ *{ {| l |}a31◂ [ ]}] ) }
; .mov_ptn 3'(= a2◂ [ *{ {| l |}a31◂ [ ]}] ) ⊢ 1'(= a2◂ [ *{ {| l |}a31◂ [ ]}] )
	mov rax,r9
	mov r14,rax
	call ETR_184
	mov r8,QWORD [rsp-8+8*1]
	add rsp,8
; #12 0'(= r ) ⊢ 0'(= r )
	sub r13,1
; » _^ .. ⊢ ..
; .. //
	mov rdi,0
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[r14]
	add rdi,rax 
	push rax
	add rdi,1
	push rdi 
	call mlc_s8
	pop rdi
	mov r9,rax
	lea rdi,[rax+7+rdi]
	std 
	mov QWORD [tmp],rcx 
	pop rcx
	lea rsi,[r14+7+rcx]
	rep movsb
	lea rsi,[LB_811+1-1]
	mov rcx,1
	rep movsb
	mov rcx,QWORD [tmp] 
; ∎ { 0'(= r ) 1'(= {| l |} ) }
; .dlt.ptn 3'(= {| l |} )
	mov rdi,r9
	C_PUSH_REGS
	mov r8,rdi
	mov rdi,r8
	call free_s8
	C_POP_REGS
; .dlt.ptn 2'(= a2◂ [ {| l |}] )
	mov rdi,r8
	C_PUSH_REGS
	mov r8,rdi
	call LB_771
	C_POP_REGS
; .mov_ptn2 { 0'(= r ) 1'(= {| l |} ) } ⊢ { 0'(= r ) 1'(= {| l |} ) }
	ret
LB_810:
;; ?; 1'(= a42◂ [ ] ) ⊢ 1(<2)◂{ 2'(= a2◂ [ {| l |}] ) 3'(= a31◂ [ ] ) }
	mov r8, QWORD [r14+8]
	mov r9, QWORD [r14+16]
	mov QWORD [GBG_VCT+8*0],r14
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_RCD 2,rdi
; #185 3'(= a31◂ [ ] ) ⊢ 1'(= {| l |} )
	sub rsp,16
	mov QWORD [rsp+8*0],r13
	mov QWORD [rsp+8*1],r8
; .mov_ptn2 3'(= a31◂ [ ] ) ⊢ 0'(= a31◂ [ ] )
; .mov_ptn 3'(= a31◂ [ ] ) ⊢ 0'(= a31◂ [ ] )
	mov rax,r9
	mov r13,rax
	call ETR_185
	mov r8,QWORD [rsp-8+8*2]
	mov r14,r13
	mov r13,QWORD [rsp-8+8*1]
	add rsp,16
; » _^ .. ⊢ ..
; .. //
	mov rdi,0
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[r14]
	add rdi,rax 
	push rax
	add rdi,4
	push rdi 
	call mlc_s8
	pop rdi
	mov r9,rax
	lea rdi,[rax+7+rdi]
	std 
	mov QWORD [tmp],rcx 
	lea rsi,[LB_812+1-1]
	mov rcx,1
	rep movsb
	pop rcx
	lea rsi,[r14+7+rcx]
	rep movsb
	lea rsi,[LB_813+3-1]
	mov rcx,3
	rep movsb
	mov rcx,QWORD [tmp] 
; ∎ { 0'(= r ) 3'(= {| l |} ) }
; .dlt.ptn 1'(= {| l |} )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	mov rdi,r8
	call free_s8
	C_POP_REGS
; .dlt.ptn 2'(= a2◂ [ {| l |}] )
	mov rdi,r8
	C_PUSH_REGS
	mov r8,rdi
	call LB_771
	C_POP_REGS
; .mov_ptn2 { 0'(= r ) 3'(= {| l |} ) } ⊢ { 0'(= r ) 1'(= {| l |} ) }
; .mov_ptn 3'(= {| l |} ) ⊢ 1'(= {| l |} )
	mov rax,r9
	mov r14,rax
	ret
ETR_184: ;; pnt_dt_def { 0'(= r ) 1'(= a2◂ [ *{ {| l |}a31◂ [ ]}] ) } ⊢ { 0'(= r ) 1'(= {| l |} ) } : ({ _r64 _lst◂{ _s8 _t31 } }→{ _r64 _s8 })
;; ?; 1'(= a2◂ [ *{ {| l |}a31◂ [ ]}] ) ⊢ 0(<2)◂{ { 3'(= {| l |} ) 4'(= a31◂ [ ] ) } 5'(= a2◂ [ *{ {| l |}a31◂ [ ]}] ) }
	mov rdi,r14
	cmp BYTE [rdi+6],0
	jnz LB_814
	mov r8, QWORD [r14+8]
	mov r9, QWORD [r8+8]
	mov r10, QWORD [r8+16]
	mov QWORD [GBG_VCT+8*0],r8
	mov r11, QWORD [r14+16]
	mov QWORD [GBG_VCT+8*1],r14
	mov rdi,QWORD [GBG_VCT+8*1]
	FREE_RCD 2,rdi
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_RCD 2,rdi
; #184 { 0'(= r ) 5'(= a2◂ [ *{ {| l |}a31◂ [ ]}] ) } ⊢ { 0'(= r ) 1'(= {| l |} ) }
	sub rsp,16
	mov QWORD [rsp+8*0],r9
	mov QWORD [rsp+8*1],r10
; .mov_ptn2 { 0'(= r ) 5'(= a2◂ [ *{ {| l |}a31◂ [ ]}] ) } ⊢ { 0'(= r ) 1'(= a2◂ [ *{ {| l |}a31◂ [ ]}] ) }
; .mov_ptn 5'(= a2◂ [ *{ {| l |}a31◂ [ ]}] ) ⊢ 1'(= a2◂ [ *{ {| l |}a31◂ [ ]}] )
	mov rax,r11
	mov r14,rax
	call ETR_184
	mov r10,QWORD [rsp-8+8*2]
	mov r9,QWORD [rsp-8+8*1]
	add rsp,16
; #185 4'(= a31◂ [ ] ) ⊢ 2'(= {| l |} )
	sub rsp,24
	mov QWORD [rsp+8*0],r13
	mov QWORD [rsp+8*1],r14
	mov QWORD [rsp+8*2],r9
; .mov_ptn2 4'(= a31◂ [ ] ) ⊢ 0'(= a31◂ [ ] )
; .mov_ptn 4'(= a31◂ [ ] ) ⊢ 0'(= a31◂ [ ] )
	mov rax,r10
	mov r13,rax
	call ETR_185
	mov r9,QWORD [rsp-8+8*3]
	mov r14,QWORD [rsp-8+8*2]
	mov r8,r13
	mov r13,QWORD [rsp-8+8*1]
	add rsp,24
; » _^ .. ⊢ ..
; .. //
	mov rdi,0
	mov rsi,r13
	imul rsi,1
	add rdi,rsi 
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[r9]
	add rdi,rax 
	push rax
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[r8]
	add rdi,rax 
	push rax
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[r14]
	add rdi,rax 
	push rax
	add rdi,8
	push rdi 
	call mlc_s8
	pop rdi
	mov r10,rax
	lea rdi,[rax+7+rdi]
	std 
	mov QWORD [tmp],rcx 
	pop rcx
	lea rsi,[r14+7+rcx]
	rep movsb
	lea rsi,[LB_815+1-1]
	mov rcx,1
	rep movsb
	pop rcx
	lea rsi,[r8+7+rcx]
	rep movsb
	lea rsi,[LB_816+3-1]
	mov rcx,3
	rep movsb
	pop rcx
	lea rsi,[r9+7+rcx]
	rep movsb
	lea rsi,[LB_817+4-1]
	mov rcx,4
	rep movsb
	mov rax,r13
LB_819:
	cmp rax,0
	jz LB_820
	sub rax,1
	lea rsi,[LB_818+1-1]
	mov rcx,1
	rep movsb 
	jmp LB_819
LB_820:
	mov rcx,QWORD [tmp] 
; ∎ { 0'(= r ) 4'(= {| l |} ) }
; .dlt.ptn 1'(= {| l |} )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	mov rdi,r8
	call free_s8
	C_POP_REGS
; .dlt.ptn 2'(= {| l |} )
	mov rdi,r8
	C_PUSH_REGS
	mov r8,rdi
	mov rdi,r8
	call free_s8
	C_POP_REGS
; .dlt.ptn 3'(= {| l |} )
	mov rdi,r9
	C_PUSH_REGS
	mov r8,rdi
	mov rdi,r8
	call free_s8
	C_POP_REGS
; .mov_ptn2 { 0'(= r ) 4'(= {| l |} ) } ⊢ { 0'(= r ) 1'(= {| l |} ) }
; .mov_ptn 4'(= {| l |} ) ⊢ 1'(= {| l |} )
	mov rax,r10
	mov r14,rax
	ret
LB_814:
;; ?; 1'(= a2◂ [ *{ {| l |}a31◂ [ ]}] ) ⊢ 1(<2)◂{ }
; $ %[ "" ] ⊢ %[ "" ]
; ∎ { 0'(= r ) %[ "" ] }
; .mov_ptn2 { 0'(= r ) %[ "" ] } ⊢ { 0'(= r ) 1'(= {| l |} ) }
; .mov_ptn %[ "" ] ⊢ 1'(= {| l |} )
	mov rsi,1  
	mov rdi,16
	xor rax,rax 
	C_CALL_SF calloc
	mov QWORD [rax],0
	mov r14,rax
	ret
ETR_185: ;; pnt_type 0'(= a31◂ [ ] ) ⊢ 0'(= {| l |} ) : (_t31→_s8)
;; ?; 0'(= a31◂ [ ] ) ⊢ 0(<5)◂1'(= a2◂ [ a31◂ [ ]] )
	mov rdi,r13
	cmp BYTE [rdi+6],0
	jnz LB_821
	mov QWORD [GBG_VCT+8*0],rdi
	mov r14,QWORD [rdi+8]
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_LN rdi
; #186 1'(= a2◂ [ a31◂ [ ]] ) ⊢ 0'(= {| l |} )
; .mov_ptn2 1'(= a2◂ [ a31◂ [ ]] ) ⊢ 0'(= a2◂ [ a31◂ [ ]] )
; .mov_ptn 1'(= a2◂ [ a31◂ [ ]] ) ⊢ 0'(= a2◂ [ a31◂ [ ]] )
	mov rax,r14
	mov r13,rax
	call ETR_186
; » _^ .. ⊢ ..
; .. //
	mov rdi,0
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[r13]
	add rdi,rax 
	push rax
	add rdi,3
	push rdi 
	call mlc_s8
	pop rdi
	mov r14,rax
	lea rdi,[rax+7+rdi]
	std 
	mov QWORD [tmp],rcx 
	lea rsi,[LB_822+1-1]
	mov rcx,1
	rep movsb
	pop rcx
	lea rsi,[r13+7+rcx]
	rep movsb
	lea rsi,[LB_823+2-1]
	mov rcx,2
	rep movsb
	mov rcx,QWORD [tmp] 
; ∎ 1'(= {| l |} )
; .dlt.ptn 0'(= {| l |} )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	mov rdi,r8
	call free_s8
	C_POP_REGS
; .mov_ptn2 1'(= {| l |} ) ⊢ 0'(= {| l |} )
; .mov_ptn 1'(= {| l |} ) ⊢ 0'(= {| l |} )
	mov rax,r14
	mov r13,rax
	ret
LB_821:
;; ?; 0'(= a31◂ [ ] ) ⊢ 1(<5)◂{ 1'(= a31◂ [ ] ) 2'(= a31◂ [ ] ) }
	mov rdi,r13
	cmp BYTE [rdi+6],1
	jnz LB_824
	mov r14, QWORD [r13+8]
	mov r8, QWORD [r13+16]
	mov QWORD [GBG_VCT+8*0],r13
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_RCD 2,rdi
; #185 1'(= a31◂ [ ] ) ⊢ 0'(= {| l |} )
	sub rsp,8
	mov QWORD [rsp+8*0],r8
; .mov_ptn2 1'(= a31◂ [ ] ) ⊢ 0'(= a31◂ [ ] )
; .mov_ptn 1'(= a31◂ [ ] ) ⊢ 0'(= a31◂ [ ] )
	mov rax,r14
	mov r13,rax
	call ETR_185
	mov r8,QWORD [rsp-8+8*1]
	add rsp,8
; #185 2'(= a31◂ [ ] ) ⊢ 1'(= {| l |} )
	sub rsp,8
	mov QWORD [rsp+8*0],r13
; .mov_ptn2 2'(= a31◂ [ ] ) ⊢ 0'(= a31◂ [ ] )
; .mov_ptn 2'(= a31◂ [ ] ) ⊢ 0'(= a31◂ [ ] )
	mov rax,r8
	mov r13,rax
	call ETR_185
	mov r14,r13
	mov r13,QWORD [rsp-8+8*1]
	add rsp,8
; » _^ .. ⊢ ..
; .. //
	mov rdi,0
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[r13]
	add rdi,rax 
	push rax
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[r14]
	add rdi,rax 
	push rax
	add rdi,5
	push rdi 
	call mlc_s8
	pop rdi
	mov r8,rax
	lea rdi,[rax+7+rdi]
	std 
	mov QWORD [tmp],rcx 
	pop rcx
	lea rsi,[r14+7+rcx]
	rep movsb
	lea rsi,[LB_825+5-1]
	mov rcx,5
	rep movsb
	pop rcx
	lea rsi,[r13+7+rcx]
	rep movsb
	mov rcx,QWORD [tmp] 
; ∎ 2'(= {| l |} )
; .dlt.ptn 1'(= {| l |} )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	mov rdi,r8
	call free_s8
	C_POP_REGS
; .dlt.ptn 0'(= {| l |} )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	mov rdi,r8
	call free_s8
	C_POP_REGS
; .mov_ptn2 2'(= {| l |} ) ⊢ 0'(= {| l |} )
; .mov_ptn 2'(= {| l |} ) ⊢ 0'(= {| l |} )
	mov rax,r8
	mov r13,rax
	ret
LB_824:
;; ?; 0'(= a31◂ [ ] ) ⊢ 2(<5)◂{ 1'(= a31◂ [ ] ) 2'(= a31◂ [ ] ) }
	mov rdi,r13
	cmp BYTE [rdi+6],2
	jnz LB_826
	mov r14, QWORD [r13+8]
	mov r8, QWORD [r13+16]
	mov QWORD [GBG_VCT+8*0],r13
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_RCD 2,rdi
; #185 1'(= a31◂ [ ] ) ⊢ 0'(= {| l |} )
	sub rsp,8
	mov QWORD [rsp+8*0],r8
; .mov_ptn2 1'(= a31◂ [ ] ) ⊢ 0'(= a31◂ [ ] )
; .mov_ptn 1'(= a31◂ [ ] ) ⊢ 0'(= a31◂ [ ] )
	mov rax,r14
	mov r13,rax
	call ETR_185
	mov r8,QWORD [rsp-8+8*1]
	add rsp,8
; #185 2'(= a31◂ [ ] ) ⊢ 1'(= {| l |} )
	sub rsp,8
	mov QWORD [rsp+8*0],r13
; .mov_ptn2 2'(= a31◂ [ ] ) ⊢ 0'(= a31◂ [ ] )
; .mov_ptn 2'(= a31◂ [ ] ) ⊢ 0'(= a31◂ [ ] )
	mov rax,r8
	mov r13,rax
	call ETR_185
	mov r14,r13
	mov r13,QWORD [rsp-8+8*1]
	add rsp,8
; » _^ .. ⊢ ..
; .. //
	mov rdi,0
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[r13]
	add rdi,rax 
	push rax
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[r14]
	add rdi,rax 
	push rax
	add rdi,3
	push rdi 
	call mlc_s8
	pop rdi
	mov r8,rax
	lea rdi,[rax+7+rdi]
	std 
	mov QWORD [tmp],rcx 
	pop rcx
	lea rsi,[r14+7+rcx]
	rep movsb
	lea rsi,[LB_827+3-1]
	mov rcx,3
	rep movsb
	pop rcx
	lea rsi,[r13+7+rcx]
	rep movsb
	mov rcx,QWORD [tmp] 
; ∎ 2'(= {| l |} )
; .dlt.ptn 1'(= {| l |} )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	mov rdi,r8
	call free_s8
	C_POP_REGS
; .dlt.ptn 0'(= {| l |} )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	mov rdi,r8
	call free_s8
	C_POP_REGS
; .mov_ptn2 2'(= {| l |} ) ⊢ 0'(= {| l |} )
; .mov_ptn 2'(= {| l |} ) ⊢ 0'(= {| l |} )
	mov rax,r8
	mov r13,rax
	ret
LB_826:
;; ?; 0'(= a31◂ [ ] ) ⊢ 3(<5)◂1'(= a17◂ [ ] )
	mov rdi,r13
	cmp BYTE [rdi+6],3
	jnz LB_828
	mov QWORD [GBG_VCT+8*0],rdi
	mov r14,QWORD [rdi+8]
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_LN rdi
; #85 1'(= a17◂ [ ] ) ⊢ 0'(= {| l |} )
; .mov_ptn2 1'(= a17◂ [ ] ) ⊢ 0'(= a17◂ [ ] )
; .mov_ptn 1'(= a17◂ [ ] ) ⊢ 0'(= a17◂ [ ] )
	mov rax,r14
	mov r13,rax
	call ETR_85
; ∎ 0'(= {| l |} )
; .mov_ptn2 0'(= {| l |} ) ⊢ 0'(= {| l |} )
	ret
LB_828:
;; ?; 0'(= a31◂ [ ] ) ⊢ 4(<5)◂0'(= {| l |} )
; » _^ .. ⊢ ..
; .. //
	mov rdi,0
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[r13]
	add rdi,rax 
	push rax
	add rdi,1
	push rdi 
	call mlc_s8
	pop rdi
	mov r14,rax
	lea rdi,[rax+7+rdi]
	std 
	mov QWORD [tmp],rcx 
	lea rsi,[LB_829+1-1]
	mov rcx,1
	rep movsb
	pop rcx
	lea rsi,[r13+7+rcx]
	rep movsb
	mov rcx,QWORD [tmp] 
; ∎ 1'(= {| l |} )
; .dlt.ptn 0'(= {| l |} )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	mov rdi,r8
	call free_s8
	C_POP_REGS
; .mov_ptn2 1'(= {| l |} ) ⊢ 0'(= {| l |} )
; .mov_ptn 1'(= {| l |} ) ⊢ 0'(= {| l |} )
	mov rax,r14
	mov r13,rax
	ret
ETR_186: ;; pnt_type_rcd 0'(= a2◂ [ a31◂ [ ]] ) ⊢ 0'(= {| l |} ) : (_lst◂_t31→_s8)
;; ?; 0'(= a2◂ [ a31◂ [ ]] ) ⊢ 0(<2)◂{ 1'(= a31◂ [ ] ) 2'(= a2◂ [ a31◂ [ ]] ) }
	mov rdi,r13
	cmp BYTE [rdi+6],0
	jnz LB_830
	mov r14, QWORD [r13+8]
	mov r8, QWORD [r13+16]
	mov QWORD [GBG_VCT+8*0],r13
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_RCD 2,rdi
; #185 1'(= a31◂ [ ] ) ⊢ 0'(= {| l |} )
	sub rsp,8
	mov QWORD [rsp+8*0],r8
; .mov_ptn2 1'(= a31◂ [ ] ) ⊢ 0'(= a31◂ [ ] )
; .mov_ptn 1'(= a31◂ [ ] ) ⊢ 0'(= a31◂ [ ] )
	mov rax,r14
	mov r13,rax
	call ETR_185
	mov r8,QWORD [rsp-8+8*1]
	add rsp,8
; #186 2'(= a2◂ [ a31◂ [ ]] ) ⊢ 1'(= {| l |} )
	sub rsp,8
	mov QWORD [rsp+8*0],r13
; .mov_ptn2 2'(= a2◂ [ a31◂ [ ]] ) ⊢ 0'(= a2◂ [ a31◂ [ ]] )
; .mov_ptn 2'(= a2◂ [ a31◂ [ ]] ) ⊢ 0'(= a2◂ [ a31◂ [ ]] )
	mov rax,r8
	mov r13,rax
	call ETR_186
	mov r14,r13
	mov r13,QWORD [rsp-8+8*1]
	add rsp,8
; » _^ .. ⊢ ..
; .. //
	mov rdi,0
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[r13]
	add rdi,rax 
	push rax
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[r14]
	add rdi,rax 
	push rax
	add rdi,1
	push rdi 
	call mlc_s8
	pop rdi
	mov r8,rax
	lea rdi,[rax+7+rdi]
	std 
	mov QWORD [tmp],rcx 
	pop rcx
	lea rsi,[r14+7+rcx]
	rep movsb
	lea rsi,[LB_831+1-1]
	mov rcx,1
	rep movsb
	pop rcx
	lea rsi,[r13+7+rcx]
	rep movsb
	mov rcx,QWORD [tmp] 
; ∎ 2'(= {| l |} )
; .dlt.ptn 1'(= {| l |} )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	mov rdi,r8
	call free_s8
	C_POP_REGS
; .dlt.ptn 0'(= {| l |} )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	mov rdi,r8
	call free_s8
	C_POP_REGS
; .mov_ptn2 2'(= {| l |} ) ⊢ 0'(= {| l |} )
; .mov_ptn 2'(= {| l |} ) ⊢ 0'(= {| l |} )
	mov rax,r8
	mov r13,rax
	ret
LB_830:
;; ?; 0'(= a2◂ [ a31◂ [ ]] ) ⊢ 1(<2)◂{ }
; $ %[ "" ] ⊢ %[ "" ]
; ∎ %[ "" ]
; .mov_ptn2 %[ "" ] ⊢ 0'(= {| l |} )
; .mov_ptn %[ "" ] ⊢ 0'(= {| l |} )
	mov rsi,1  
	mov rdi,16
	xor rax,rax 
	C_CALL_SF calloc
	mov QWORD [rax],0
	mov r13,rax
	ret
ETR_187: ;; pnt_lc_etr { 0'(= r ) 1'(= a41◂ [ ] ) } ⊢ { 0'(= r ) 1'(= {| l |} ) } : ({ _r64 _t41 }→{ _r64 _s8 })
;; ?; 1'(= a41◂ [ ] ) ⊢ 0(<3)◂{ 2'(= a16◂ [ a21◂ [ {| l |}]] ) 3'(= a3◂ [ a31◂ [ ]] ) 4'(= a25◂ [ a17◂ [ ]{| l |}] ) }
	mov rdi,r14
	cmp BYTE [rdi+6],0
	jnz LB_832
	mov r8, QWORD [r14+8]
	mov r9, QWORD [r14+16]
	mov r10, QWORD [r14+24]
	mov QWORD [GBG_VCT+8*0],r14
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_RCD 3,rdi
;; ?; 3'(= a3◂ [ a31◂ [ ]] ) ⊢ 0(<2)◂1'(= a31◂ [ ] )
	mov rdi,r9
	cmp BYTE [rdi+6],0
	jnz LB_833
	mov QWORD [GBG_VCT+8*0],rdi
	mov r14,QWORD [rdi+8]
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_LN rdi
; #185 1'(= a31◂ [ ] ) ⊢ 1'(= {| l |} )
	sub rsp,24
	mov QWORD [rsp+8*0],r13
	mov QWORD [rsp+8*1],r8
	mov QWORD [rsp+8*2],r10
; .mov_ptn2 1'(= a31◂ [ ] ) ⊢ 0'(= a31◂ [ ] )
; .mov_ptn 1'(= a31◂ [ ] ) ⊢ 0'(= a31◂ [ ] )
	mov rax,r14
	mov r13,rax
	call ETR_185
	mov r10,QWORD [rsp-8+8*3]
	mov r8,QWORD [rsp-8+8*2]
	mov r14,r13
	mov r13,QWORD [rsp-8+8*1]
	add rsp,24
; #102 2'(= a16◂ [ a21◂ [ {| l |}]] ) ⊢ 2'(= {| l |} )
	sub rsp,24
	mov QWORD [rsp+8*0],r13
	mov QWORD [rsp+8*1],r14
	mov QWORD [rsp+8*2],r10
; .mov_ptn2 2'(= a16◂ [ a21◂ [ {| l |}]] ) ⊢ 0'(= a16◂ [ a21◂ [ {| l |}]] )
; .mov_ptn 2'(= a16◂ [ a21◂ [ {| l |}]] ) ⊢ 0'(= a16◂ [ a21◂ [ {| l |}]] )
	mov rax,r8
	mov r13,rax
	call ETR_102
	mov r10,QWORD [rsp-8+8*3]
	mov r14,QWORD [rsp-8+8*2]
	mov r8,r13
	mov r13,QWORD [rsp-8+8*1]
	add rsp,24
; #11 0'(= r ) ⊢ 0'(= r )
	add r13,1
; #135 { 0'(= r ) 4'(= a25◂ [ a17◂ [ ]{| l |}] ) } ⊢ { 0'(= r ) 3'(= {| l |} ) }
	sub rsp,16
	mov QWORD [rsp+8*0],r14
	mov QWORD [rsp+8*1],r8
; .mov_ptn2 { 0'(= r ) 4'(= a25◂ [ a17◂ [ ]{| l |}] ) } ⊢ { 0'(= r ) 1'(= a25◂ [ a17◂ [ ]{| l |}] ) }
; .mov_ptn 4'(= a25◂ [ a17◂ [ ]{| l |}] ) ⊢ 1'(= a25◂ [ a17◂ [ ]{| l |}] )
	mov rax,r10
	mov r14,rax
	call ETR_135
	mov r8,QWORD [rsp-8+8*2]
	mov r9,r14
	mov r14,QWORD [rsp-8+8*1]
	add rsp,16
; #12 0'(= r ) ⊢ 0'(= r )
	sub r13,1
; » _^ .. ⊢ ..
; .. //
	mov rdi,0
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[r8]
	add rdi,rax 
	push rax
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[r14]
	add rdi,rax 
	push rax
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[r9]
	add rdi,rax 
	push rax
	add rdi,5
	push rdi 
	call mlc_s8
	pop rdi
	mov r10,rax
	lea rdi,[rax+7+rdi]
	std 
	mov QWORD [tmp],rcx 
	pop rcx
	lea rsi,[r9+7+rcx]
	rep movsb
	lea rsi,[LB_834+1-1]
	mov rcx,1
	rep movsb
	pop rcx
	lea rsi,[r14+7+rcx]
	rep movsb
	lea rsi,[LB_835+3-1]
	mov rcx,3
	rep movsb
	pop rcx
	lea rsi,[r8+7+rcx]
	rep movsb
	lea rsi,[LB_836+1-1]
	mov rcx,1
	rep movsb
	mov rcx,QWORD [tmp] 
; ∎ { 0'(= r ) 4'(= {| l |} ) }
; .dlt.ptn 1'(= {| l |} )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	mov rdi,r8
	call free_s8
	C_POP_REGS
; .dlt.ptn 3'(= {| l |} )
	mov rdi,r9
	C_PUSH_REGS
	mov r8,rdi
	mov rdi,r8
	call free_s8
	C_POP_REGS
; .dlt.ptn 2'(= {| l |} )
	mov rdi,r8
	C_PUSH_REGS
	mov r8,rdi
	mov rdi,r8
	call free_s8
	C_POP_REGS
; .mov_ptn2 { 0'(= r ) 4'(= {| l |} ) } ⊢ { 0'(= r ) 1'(= {| l |} ) }
; .mov_ptn 4'(= {| l |} ) ⊢ 1'(= {| l |} )
	mov rax,r10
	mov r14,rax
	ret
LB_833:
; #102 2'(= a16◂ [ a21◂ [ {| l |}]] ) ⊢ 1'(= {| l |} )
	sub rsp,24
	mov QWORD [rsp+8*0],r13
	mov QWORD [rsp+8*1],r9
	mov QWORD [rsp+8*2],r10
; .mov_ptn2 2'(= a16◂ [ a21◂ [ {| l |}]] ) ⊢ 0'(= a16◂ [ a21◂ [ {| l |}]] )
; .mov_ptn 2'(= a16◂ [ a21◂ [ {| l |}]] ) ⊢ 0'(= a16◂ [ a21◂ [ {| l |}]] )
	mov rax,r8
	mov r13,rax
	call ETR_102
	mov r10,QWORD [rsp-8+8*3]
	mov r9,QWORD [rsp-8+8*2]
	mov r14,r13
	mov r13,QWORD [rsp-8+8*1]
	add rsp,24
; #11 0'(= r ) ⊢ 0'(= r )
	add r13,1
; #135 { 0'(= r ) 4'(= a25◂ [ a17◂ [ ]{| l |}] ) } ⊢ { 0'(= r ) 2'(= {| l |} ) }
	sub rsp,16
	mov QWORD [rsp+8*0],r14
	mov QWORD [rsp+8*1],r9
; .mov_ptn2 { 0'(= r ) 4'(= a25◂ [ a17◂ [ ]{| l |}] ) } ⊢ { 0'(= r ) 1'(= a25◂ [ a17◂ [ ]{| l |}] ) }
; .mov_ptn 4'(= a25◂ [ a17◂ [ ]{| l |}] ) ⊢ 1'(= a25◂ [ a17◂ [ ]{| l |}] )
	mov rax,r10
	mov r14,rax
	call ETR_135
	mov r9,QWORD [rsp-8+8*2]
	mov r8,r14
	mov r14,QWORD [rsp-8+8*1]
	add rsp,16
; #12 0'(= r ) ⊢ 0'(= r )
	sub r13,1
; » _^ .. ⊢ ..
; .. //
	mov rdi,0
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[r14]
	add rdi,rax 
	push rax
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[r8]
	add rdi,rax 
	push rax
	add rdi,2
	push rdi 
	call mlc_s8
	pop rdi
	mov r10,rax
	lea rdi,[rax+7+rdi]
	std 
	mov QWORD [tmp],rcx 
	pop rcx
	lea rsi,[r8+7+rcx]
	rep movsb
	lea rsi,[LB_837+1-1]
	mov rcx,1
	rep movsb
	pop rcx
	lea rsi,[r14+7+rcx]
	rep movsb
	lea rsi,[LB_838+1-1]
	mov rcx,1
	rep movsb
	mov rcx,QWORD [tmp] 
; ∎ { 0'(= r ) 4'(= {| l |} ) }
; .dlt.ptn 2'(= {| l |} )
	mov rdi,r8
	C_PUSH_REGS
	mov r8,rdi
	mov rdi,r8
	call free_s8
	C_POP_REGS
; .dlt.ptn 1'(= {| l |} )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	mov rdi,r8
	call free_s8
	C_POP_REGS
; .dlt.ptn 3'(= a3◂ [ a31◂ [ ]] )
	mov rdi,r9
	C_PUSH_REGS
	mov r8,rdi
	call LB_839
	C_POP_REGS
; .mov_ptn2 { 0'(= r ) 4'(= {| l |} ) } ⊢ { 0'(= r ) 1'(= {| l |} ) }
; .mov_ptn 4'(= {| l |} ) ⊢ 1'(= {| l |} )
	mov rax,r10
	mov r14,rax
	ret
LB_832:
;; ?; 1'(= a41◂ [ ] ) ⊢ 1(<3)◂2'(= a19◂ [ a17◂ [ ]] )
	mov rdi,r14
	cmp BYTE [rdi+6],1
	jnz LB_844
	mov QWORD [GBG_VCT+8*0],rdi
	mov r8,QWORD [rdi+8]
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_LN rdi
; #91 2'(= a19◂ [ a17◂ [ ]] ) ⊢ 1'(= {| l |} )
	sub rsp,8
	mov QWORD [rsp+8*0],r13
; .mov_ptn2 2'(= a19◂ [ a17◂ [ ]] ) ⊢ 0'(= a19◂ [ a17◂ [ ]] )
; .mov_ptn 2'(= a19◂ [ a17◂ [ ]] ) ⊢ 0'(= a19◂ [ a17◂ [ ]] )
	mov rax,r8
	mov r13,rax
	call ETR_91
	mov r14,r13
	mov r13,QWORD [rsp-8+8*1]
	add rsp,8
; » _^ .. ⊢ ..
; .. //
	mov rdi,0
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[r14]
	add rdi,rax 
	push rax
	add rdi,4
	push rdi 
	call mlc_s8
	pop rdi
	mov r8,rax
	lea rdi,[rax+7+rdi]
	std 
	mov QWORD [tmp],rcx 
	lea rsi,[LB_845+1-1]
	mov rcx,1
	rep movsb
	pop rcx
	lea rsi,[r14+7+rcx]
	rep movsb
	lea rsi,[LB_846+3-1]
	mov rcx,3
	rep movsb
	mov rcx,QWORD [tmp] 
; ∎ { 0'(= r ) 2'(= {| l |} ) }
; .dlt.ptn 1'(= {| l |} )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	mov rdi,r8
	call free_s8
	C_POP_REGS
; .mov_ptn2 { 0'(= r ) 2'(= {| l |} ) } ⊢ { 0'(= r ) 1'(= {| l |} ) }
; .mov_ptn 2'(= {| l |} ) ⊢ 1'(= {| l |} )
	mov rax,r8
	mov r14,rax
	ret
LB_844:
;; ?; 1'(= a41◂ [ ] ) ⊢ 2(<3)◂2'(= a25◂ [ a17◂ [ ]{| l |}] )
	mov QWORD [GBG_VCT+8*0],rdi
	mov r8,QWORD [rdi+8]
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_LN rdi
; #11 0'(= r ) ⊢ 0'(= r )
	add r13,1
; #135 { 0'(= r ) 2'(= a25◂ [ a17◂ [ ]{| l |}] ) } ⊢ { 0'(= r ) 1'(= {| l |} ) }
; .mov_ptn2 { 0'(= r ) 2'(= a25◂ [ a17◂ [ ]{| l |}] ) } ⊢ { 0'(= r ) 1'(= a25◂ [ a17◂ [ ]{| l |}] ) }
; .mov_ptn 2'(= a25◂ [ a17◂ [ ]{| l |}] ) ⊢ 1'(= a25◂ [ a17◂ [ ]{| l |}] )
	mov rax,r8
	mov r14,rax
	call ETR_135
; #12 0'(= r ) ⊢ 0'(= r )
	sub r13,1
; » _^ .. ⊢ ..
; .. //
	mov rdi,0
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[r14]
	add rdi,rax 
	push rax
	add rdi,5
	push rdi 
	call mlc_s8
	pop rdi
	mov r8,rax
	lea rdi,[rax+7+rdi]
	std 
	mov QWORD [tmp],rcx 
	pop rcx
	lea rsi,[r14+7+rcx]
	rep movsb
	lea rsi,[LB_847+5-1]
	mov rcx,5
	rep movsb
	mov rcx,QWORD [tmp] 
; ∎ { 0'(= r ) 2'(= {| l |} ) }
; .dlt.ptn 1'(= {| l |} )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	mov rdi,r8
	call free_s8
	C_POP_REGS
; .mov_ptn2 { 0'(= r ) 2'(= {| l |} ) } ⊢ { 0'(= r ) 1'(= {| l |} ) }
; .mov_ptn 2'(= {| l |} ) ⊢ 1'(= {| l |} )
	mov rax,r8
	mov r14,rax
	ret
ETR_188: ;; pnt_lc_qlq_etr { 0'(= r ) 1'(= a2◂ [ *{ {| l |}a16◂ [ a21◂ [ {| l |}]]a3◂ [ a31◂ [ ]]a25◂ [ a17◂ [ ]{| l |}]}] ) } ⊢ { 0'(= r ) 1'(= {| l |} ) } : ({ _r64 _lst◂{ _s8 _t16◂_t21◂_s8 _opn◂_t31 _t25◂_s8◂_t17 } }→{ _r64 _s8 })
;; ?; 1'(= a2◂ [ *{ {| l |}a16◂ [ a21◂ [ {| l |}]]a3◂ [ a31◂ [ ]]a25◂ [ a17◂ [ ]{| l |}]}] ) ⊢ 0(<2)◂{ { 3'(= {| l |} ) 4'(= a16◂ [ a21◂ [ {| l |}]] ) 5'(= a3◂ [ a31◂ [ ]] ) 6'(= a25◂ [ a17◂ [ ]{| l |}] ) } 7'(= a2◂ [ *{ {| l |}a16◂ [ a21◂ [ {| l |}]]a3◂ [ a31◂ [ ]]a25◂ [ a17◂ [ ]{| l |}]}] ) }
	mov rdi,r14
	cmp BYTE [rdi+6],0
	jnz LB_848
	mov r8, QWORD [r14+8]
	mov r9, QWORD [r8+8]
	mov r10, QWORD [r8+16]
	mov r11, QWORD [r8+24]
	mov rcx, QWORD [r8+32]
	mov QWORD [GBG_VCT+8*0],r8
	mov rdx, QWORD [r14+16]
	mov QWORD [GBG_VCT+8*1],r14
	mov rdi,QWORD [GBG_VCT+8*1]
	FREE_RCD 2,rdi
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_RCD 4,rdi
;; ?; 5'(= a3◂ [ a31◂ [ ]] ) ⊢ 0(<2)◂1'(= a31◂ [ ] )
	mov rdi,r11
	cmp BYTE [rdi+6],0
	jnz LB_849
	mov QWORD [GBG_VCT+8*0],rdi
	mov r14,QWORD [rdi+8]
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_LN rdi
; #185 1'(= a31◂ [ ] ) ⊢ 1'(= {| l |} )
	sub rsp,40
	mov QWORD [rsp+8*0],r13
	mov QWORD [rsp+8*1],r9
	mov QWORD [rsp+8*2],r10
	mov QWORD [rsp+8*3],rcx
	mov QWORD [rsp+8*4],rdx
; .mov_ptn2 1'(= a31◂ [ ] ) ⊢ 0'(= a31◂ [ ] )
; .mov_ptn 1'(= a31◂ [ ] ) ⊢ 0'(= a31◂ [ ] )
	mov rax,r14
	mov r13,rax
	call ETR_185
	mov rdx,QWORD [rsp-8+8*5]
	mov rcx,QWORD [rsp-8+8*4]
	mov r10,QWORD [rsp-8+8*3]
	mov r9,QWORD [rsp-8+8*2]
	mov r14,r13
	mov r13,QWORD [rsp-8+8*1]
	add rsp,40
; #102 4'(= a16◂ [ a21◂ [ {| l |}]] ) ⊢ 2'(= {| l |} )
	sub rsp,40
	mov QWORD [rsp+8*0],r13
	mov QWORD [rsp+8*1],r14
	mov QWORD [rsp+8*2],r9
	mov QWORD [rsp+8*3],rcx
	mov QWORD [rsp+8*4],rdx
; .mov_ptn2 4'(= a16◂ [ a21◂ [ {| l |}]] ) ⊢ 0'(= a16◂ [ a21◂ [ {| l |}]] )
; .mov_ptn 4'(= a16◂ [ a21◂ [ {| l |}]] ) ⊢ 0'(= a16◂ [ a21◂ [ {| l |}]] )
	mov rax,r10
	mov r13,rax
	call ETR_102
	mov rdx,QWORD [rsp-8+8*5]
	mov rcx,QWORD [rsp-8+8*4]
	mov r9,QWORD [rsp-8+8*3]
	mov r14,QWORD [rsp-8+8*2]
	mov r8,r13
	mov r13,QWORD [rsp-8+8*1]
	add rsp,40
; #188 { 0'(= r ) 7'(= a2◂ [ *{ {| l |}a16◂ [ a21◂ [ {| l |}]]a3◂ [ a31◂ [ ]]a25◂ [ a17◂ [ ]{| l |}]}] ) } ⊢ { 0'(= r ) 4'(= {| l |} ) }
	sub rsp,32
	mov QWORD [rsp+8*0],r14
	mov QWORD [rsp+8*1],r8
	mov QWORD [rsp+8*2],r9
	mov QWORD [rsp+8*3],rcx
; .mov_ptn2 { 0'(= r ) 7'(= a2◂ [ *{ {| l |}a16◂ [ a21◂ [ {| l |}]]a3◂ [ a31◂ [ ]]a25◂ [ a17◂ [ ]{| l |}]}] ) } ⊢ { 0'(= r ) 1'(= a2◂ [ *{ {| l |}a16◂ [ a21◂ [ {| l |}]]a3◂ [ a31◂ [ ]]a25◂ [ a17◂ [ ]{| l |}]}] ) }
; .mov_ptn 7'(= a2◂ [ *{ {| l |}a16◂ [ a21◂ [ {| l |}]]a3◂ [ a31◂ [ ]]a25◂ [ a17◂ [ ]{| l |}]}] ) ⊢ 1'(= a2◂ [ *{ {| l |}a16◂ [ a21◂ [ {| l |}]]a3◂ [ a31◂ [ ]]a25◂ [ a17◂ [ ]{| l |}]}] )
	mov rax,rdx
	mov r14,rax
	call ETR_188
	mov rcx,QWORD [rsp-8+8*4]
	mov r9,QWORD [rsp-8+8*3]
	mov r8,QWORD [rsp-8+8*2]
	mov r10,r14
	mov r14,QWORD [rsp-8+8*1]
	add rsp,32
; #11 0'(= r ) ⊢ 0'(= r )
	add r13,1
; #135 { 0'(= r ) 6'(= a25◂ [ a17◂ [ ]{| l |}] ) } ⊢ { 0'(= r ) 5'(= {| l |} ) }
	sub rsp,32
	mov QWORD [rsp+8*0],r14
	mov QWORD [rsp+8*1],r8
	mov QWORD [rsp+8*2],r9
	mov QWORD [rsp+8*3],r10
; .mov_ptn2 { 0'(= r ) 6'(= a25◂ [ a17◂ [ ]{| l |}] ) } ⊢ { 0'(= r ) 1'(= a25◂ [ a17◂ [ ]{| l |}] ) }
; .mov_ptn 6'(= a25◂ [ a17◂ [ ]{| l |}] ) ⊢ 1'(= a25◂ [ a17◂ [ ]{| l |}] )
	mov rax,rcx
	mov r14,rax
	call ETR_135
	mov r10,QWORD [rsp-8+8*4]
	mov r9,QWORD [rsp-8+8*3]
	mov r8,QWORD [rsp-8+8*2]
	mov r11,r14
	mov r14,QWORD [rsp-8+8*1]
	add rsp,32
; #12 0'(= r ) ⊢ 0'(= r )
	sub r13,1
; » _^ .. ⊢ ..
; .. //
	mov rdi,0
	mov rsi,r13
	imul rsi,1
	add rdi,rsi 
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[r9]
	add rdi,rax 
	push rax
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[r8]
	add rdi,rax 
	push rax
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[r14]
	add rdi,rax 
	push rax
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[r11]
	add rdi,rax 
	push rax
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[r10]
	add rdi,rax 
	push rax
	add rdi,7
	push rdi 
	call mlc_s8
	pop rdi
	mov rcx,rax
	lea rdi,[rax+7+rdi]
	std 
	mov QWORD [tmp],rcx 
	pop rcx
	lea rsi,[r10+7+rcx]
	rep movsb
	pop rcx
	lea rsi,[r11+7+rcx]
	rep movsb
	lea rsi,[LB_850+1-1]
	mov rcx,1
	rep movsb
	pop rcx
	lea rsi,[r14+7+rcx]
	rep movsb
	lea rsi,[LB_851+3-1]
	mov rcx,3
	rep movsb
	pop rcx
	lea rsi,[r8+7+rcx]
	rep movsb
	lea rsi,[LB_852+1-1]
	mov rcx,1
	rep movsb
	pop rcx
	lea rsi,[r9+7+rcx]
	rep movsb
	lea rsi,[LB_853+2-1]
	mov rcx,2
	rep movsb
	mov rax,r13
LB_855:
	cmp rax,0
	jz LB_856
	sub rax,1
	lea rsi,[LB_854+1-1]
	mov rcx,1
	rep movsb 
	jmp LB_855
LB_856:
	mov rcx,QWORD [tmp] 
; ∎ { 0'(= r ) 6'(= {| l |} ) }
; .dlt.ptn 1'(= {| l |} )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	mov rdi,r8
	call free_s8
	C_POP_REGS
; .dlt.ptn 4'(= {| l |} )
	mov rdi,r10
	C_PUSH_REGS
	mov r8,rdi
	mov rdi,r8
	call free_s8
	C_POP_REGS
; .dlt.ptn 5'(= {| l |} )
	mov rdi,r11
	C_PUSH_REGS
	mov r8,rdi
	mov rdi,r8
	call free_s8
	C_POP_REGS
; .dlt.ptn 2'(= {| l |} )
	mov rdi,r8
	C_PUSH_REGS
	mov r8,rdi
	mov rdi,r8
	call free_s8
	C_POP_REGS
; .dlt.ptn 3'(= {| l |} )
	mov rdi,r9
	C_PUSH_REGS
	mov r8,rdi
	mov rdi,r8
	call free_s8
	C_POP_REGS
; .mov_ptn2 { 0'(= r ) 6'(= {| l |} ) } ⊢ { 0'(= r ) 1'(= {| l |} ) }
; .mov_ptn 6'(= {| l |} ) ⊢ 1'(= {| l |} )
	mov rax,rcx
	mov r14,rax
	ret
LB_849:
; #102 4'(= a16◂ [ a21◂ [ {| l |}]] ) ⊢ 1'(= {| l |} )
	sub rsp,40
	mov QWORD [rsp+8*0],r13
	mov QWORD [rsp+8*1],r9
	mov QWORD [rsp+8*2],r11
	mov QWORD [rsp+8*3],rcx
	mov QWORD [rsp+8*4],rdx
; .mov_ptn2 4'(= a16◂ [ a21◂ [ {| l |}]] ) ⊢ 0'(= a16◂ [ a21◂ [ {| l |}]] )
; .mov_ptn 4'(= a16◂ [ a21◂ [ {| l |}]] ) ⊢ 0'(= a16◂ [ a21◂ [ {| l |}]] )
	mov rax,r10
	mov r13,rax
	call ETR_102
	mov rdx,QWORD [rsp-8+8*5]
	mov rcx,QWORD [rsp-8+8*4]
	mov r11,QWORD [rsp-8+8*3]
	mov r9,QWORD [rsp-8+8*2]
	mov r14,r13
	mov r13,QWORD [rsp-8+8*1]
	add rsp,40
; #188 { 0'(= r ) 7'(= a2◂ [ *{ {| l |}a16◂ [ a21◂ [ {| l |}]]a3◂ [ a31◂ [ ]]a25◂ [ a17◂ [ ]{| l |}]}] ) } ⊢ { 0'(= r ) 2'(= {| l |} ) }
	sub rsp,32
	mov QWORD [rsp+8*0],r14
	mov QWORD [rsp+8*1],r9
	mov QWORD [rsp+8*2],r11
	mov QWORD [rsp+8*3],rcx
; .mov_ptn2 { 0'(= r ) 7'(= a2◂ [ *{ {| l |}a16◂ [ a21◂ [ {| l |}]]a3◂ [ a31◂ [ ]]a25◂ [ a17◂ [ ]{| l |}]}] ) } ⊢ { 0'(= r ) 1'(= a2◂ [ *{ {| l |}a16◂ [ a21◂ [ {| l |}]]a3◂ [ a31◂ [ ]]a25◂ [ a17◂ [ ]{| l |}]}] ) }
; .mov_ptn 7'(= a2◂ [ *{ {| l |}a16◂ [ a21◂ [ {| l |}]]a3◂ [ a31◂ [ ]]a25◂ [ a17◂ [ ]{| l |}]}] ) ⊢ 1'(= a2◂ [ *{ {| l |}a16◂ [ a21◂ [ {| l |}]]a3◂ [ a31◂ [ ]]a25◂ [ a17◂ [ ]{| l |}]}] )
	mov rax,rdx
	mov r14,rax
	call ETR_188
	mov rcx,QWORD [rsp-8+8*4]
	mov r11,QWORD [rsp-8+8*3]
	mov r9,QWORD [rsp-8+8*2]
	mov r8,r14
	mov r14,QWORD [rsp-8+8*1]
	add rsp,32
; #11 0'(= r ) ⊢ 0'(= r )
	add r13,1
; #135 { 0'(= r ) 6'(= a25◂ [ a17◂ [ ]{| l |}] ) } ⊢ { 0'(= r ) 4'(= {| l |} ) }
	sub rsp,32
	mov QWORD [rsp+8*0],r14
	mov QWORD [rsp+8*1],r8
	mov QWORD [rsp+8*2],r9
	mov QWORD [rsp+8*3],r11
; .mov_ptn2 { 0'(= r ) 6'(= a25◂ [ a17◂ [ ]{| l |}] ) } ⊢ { 0'(= r ) 1'(= a25◂ [ a17◂ [ ]{| l |}] ) }
; .mov_ptn 6'(= a25◂ [ a17◂ [ ]{| l |}] ) ⊢ 1'(= a25◂ [ a17◂ [ ]{| l |}] )
	mov rax,rcx
	mov r14,rax
	call ETR_135
	mov r11,QWORD [rsp-8+8*4]
	mov r9,QWORD [rsp-8+8*3]
	mov r8,QWORD [rsp-8+8*2]
	mov r10,r14
	mov r14,QWORD [rsp-8+8*1]
	add rsp,32
; #12 0'(= r ) ⊢ 0'(= r )
	sub r13,1
; » _^ .. ⊢ ..
; .. //
	mov rdi,0
	mov rsi,r13
	imul rsi,1
	add rdi,rsi 
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[r9]
	add rdi,rax 
	push rax
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[r14]
	add rdi,rax 
	push rax
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[r10]
	add rdi,rax 
	push rax
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[r8]
	add rdi,rax 
	push rax
	add rdi,4
	push rdi 
	call mlc_s8
	pop rdi
	mov rcx,rax
	lea rdi,[rax+7+rdi]
	std 
	mov QWORD [tmp],rcx 
	pop rcx
	lea rsi,[r8+7+rcx]
	rep movsb
	pop rcx
	lea rsi,[r10+7+rcx]
	rep movsb
	lea rsi,[LB_857+1-1]
	mov rcx,1
	rep movsb
	pop rcx
	lea rsi,[r14+7+rcx]
	rep movsb
	lea rsi,[LB_858+1-1]
	mov rcx,1
	rep movsb
	pop rcx
	lea rsi,[r9+7+rcx]
	rep movsb
	lea rsi,[LB_859+2-1]
	mov rcx,2
	rep movsb
	mov rax,r13
LB_861:
	cmp rax,0
	jz LB_862
	sub rax,1
	lea rsi,[LB_860+1-1]
	mov rcx,1
	rep movsb 
	jmp LB_861
LB_862:
	mov rcx,QWORD [tmp] 
; ∎ { 0'(= r ) 6'(= {| l |} ) }
; .dlt.ptn 2'(= {| l |} )
	mov rdi,r8
	C_PUSH_REGS
	mov r8,rdi
	mov rdi,r8
	call free_s8
	C_POP_REGS
; .dlt.ptn 4'(= {| l |} )
	mov rdi,r10
	C_PUSH_REGS
	mov r8,rdi
	mov rdi,r8
	call free_s8
	C_POP_REGS
; .dlt.ptn 1'(= {| l |} )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	mov rdi,r8
	call free_s8
	C_POP_REGS
; .dlt.ptn 3'(= {| l |} )
	mov rdi,r9
	C_PUSH_REGS
	mov r8,rdi
	mov rdi,r8
	call free_s8
	C_POP_REGS
; .dlt.ptn 5'(= a3◂ [ a31◂ [ ]] )
	mov rdi,r11
	C_PUSH_REGS
	mov r8,rdi
	call LB_839
	C_POP_REGS
; .mov_ptn2 { 0'(= r ) 6'(= {| l |} ) } ⊢ { 0'(= r ) 1'(= {| l |} ) }
; .mov_ptn 6'(= {| l |} ) ⊢ 1'(= {| l |} )
	mov rax,rcx
	mov r14,rax
	ret
LB_848:
;; ?; 1'(= a2◂ [ *{ {| l |}a16◂ [ a21◂ [ {| l |}]]a3◂ [ a31◂ [ ]]a25◂ [ a17◂ [ ]{| l |}]}] ) ⊢ 1(<2)◂{ }
; $ %[ "" ] ⊢ %[ "" ]
; ∎ { 0'(= r ) %[ "" ] }
; .mov_ptn2 { 0'(= r ) %[ "" ] } ⊢ { 0'(= r ) 1'(= {| l |} ) }
; .mov_ptn %[ "" ] ⊢ 1'(= {| l |} )
	mov rsi,1  
	mov rdi,16
	xor rax,rax 
	C_CALL_SF calloc
	mov QWORD [rax],0
	mov r14,rax
	ret
ETR_189: ;; mk_app { 0'(= a31◂ [ ] ) 1'(= a2◂ [ a31◂ [ ]] ) } ⊢ 0'(= a31◂ [ ] ) : ({ _t31 _lst◂_t31 }→_t31)
;; ?; 1'(= a2◂ [ a31◂ [ ]] ) ⊢ 0(<2)◂{ 2'(= a31◂ [ ] ) 3'(= a2◂ [ a31◂ [ ]] ) }
	mov rdi,r14
	cmp BYTE [rdi+6],0
	jnz LB_863
	mov r8, QWORD [r14+8]
	mov r9, QWORD [r14+16]
	mov QWORD [GBG_VCT+8*0],r14
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_RCD 2,rdi
; #141 { 0'(= a31◂ [ ] ) 2'(= a31◂ [ ] ) } ⊢ 2(<5)◂{ 0'(= a31◂ [ ] ) 2'(= a31◂ [ ] ) }
; #189 { 2(<5)◂{ 0'(= a31◂ [ ] ) 2'(= a31◂ [ ] ) } 3'(= a2◂ [ a31◂ [ ]] ) } ⊢ 0'(= a31◂ [ ] )
; .mov_ptn2 { 2(<5)◂{ 0'(= a31◂ [ ] ) 2'(= a31◂ [ ] ) } 3'(= a2◂ [ a31◂ [ ]] ) } ⊢ { 0'(= a31◂ [ ] ) 1'(= a2◂ [ a31◂ [ ]] ) }
; .mov_ptn 3'(= a2◂ [ a31◂ [ ]] ) ⊢ 1'(= a2◂ [ a31◂ [ ]] )
	mov rax,r9
	mov r14,rax
	mov r10,r13
; .mov_ptn 2(<5)◂{ 4'(= a31◂ [ ] ) 2'(= a31◂ [ ] ) } ⊢ 0'(= a31◂ [ ] )
	ALC_RCD 2, rax
	mov r9,rax
	mov rax,r10
	mov QWORD [r9+8+8*0],rax
	mov rax,r8
	mov QWORD [r9+8+8*1],rax
	mov rax,r9
	mov BYTE [rax+6],2
	mov r13,rax
	call ETR_189
; ∎ 0'(= a31◂ [ ] )
; .mov_ptn2 0'(= a31◂ [ ] ) ⊢ 0'(= a31◂ [ ] )
	ret
LB_863:
;; ?; 1'(= a2◂ [ a31◂ [ ]] ) ⊢ 1(<2)◂{ }
; ∎ 0'(= a31◂ [ ] )
; .mov_ptn2 0'(= a31◂ [ ] ) ⊢ 0'(= a31◂ [ ] )
	ret
ETR_190:
	mov r9,0x0000_ffff_ffff_ffff
	and r9,[r13]
	call GRM_190
	ret
GRM_190:
	PUSH_GRM
	lea rax,[r14+1]
	cmp rax,r9
	jg LB_867
	jmp LB_868
LB_867:
	mov r8,unt_1
	jmp LB_865
LB_868:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],95
	jnz LB_869
	jmp LB_870
LB_869:
	mov r8,unt_1
	jmp LB_865
LB_870:
	add r14,1
	jmp LB_866
LB_865:
	add rsp,0
	jmp LB_864
LB_866:
	PUSH_GRM
	lea rax,[r14+1]
	cmp rax,r9
	jg LB_875
	jmp LB_876
LB_875:
	mov r8,unt_1
	jmp LB_873
LB_876:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],32
	jnz LB_877
	jmp LB_878
LB_877:
	mov r8,unt_1
	jmp LB_873
LB_878:
	add r14,1
	jmp LB_874
LB_873:
	add rsp,0
	jmp LB_872
LB_874:
	mov QWORD [rsp+8*0],r14
	mov r13,QWORD [rsp+16+8*0]
	mov r14,QWORD [rsp+8*0]
	jmp LB_879
LB_879
; #24 { } ⊢ 0(<2)◂{ }
; ∎ 0(<2)◂{ }
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂{ } ⊢ 2'(= a3◂ [ *{ }] )
; .mov_ptn 0(<2)◂{ } ⊢ 2'(= a3◂ [ *{ }] )
	mov rax,unt 
	mov rax,unt_0
	mov r8,rax
	jmp LB_880
LB_880:
	cmp BYTE [r8+6],0
	jnz LB_872
	POP_GRM_SCC
	jmp LB_871
LB_872:
	RB_GRM
	lea rax,[r14+1]
	cmp rax,r9
	jg LB_884
	jmp LB_885
LB_884:
	mov r8,unt_1
	jmp LB_882
LB_885:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],9
	jnz LB_886
	jmp LB_887
LB_886:
	mov r8,unt_1
	jmp LB_882
LB_887:
	add r14,1
	jmp LB_883
LB_882:
	add rsp,0
	jmp LB_881
LB_883:
	mov QWORD [rsp+8*0],r14
	mov r13,QWORD [rsp+16+8*0]
	mov r14,QWORD [rsp+8*0]
	jmp LB_888
LB_888
; #24 { } ⊢ 0(<2)◂{ }
; ∎ 0(<2)◂{ }
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂{ } ⊢ 2'(= a3◂ [ *{ }] )
; .mov_ptn 0(<2)◂{ } ⊢ 2'(= a3◂ [ *{ }] )
	mov rax,unt 
	mov rax,unt_0
	mov r8,rax
	jmp LB_889
LB_889:
	cmp BYTE [r8+6],0
	jnz LB_881
	POP_GRM_SCC
	jmp LB_871
LB_881:
	RB_GRM
	call GRM_191
	cmp BYTE [r8+6],0
	jnz LB_893
	jmp LB_894
LB_893:
	jmp LB_891
LB_894:
; .mov_ptn2 2'(= *{ } ) ⊢ { }
; .mov_ptn 2'(= *{ } ) ⊢ { }
	jmp LB_892
LB_891:
	add rsp,0
	jmp LB_890
LB_892:
	mov QWORD [rsp+8*0],r14
	mov r13,QWORD [rsp+16+8*0]
	mov r14,QWORD [rsp+8*0]
	jmp LB_895
LB_895
; #25 { } ⊢ 1(<2)◂{ }
; ∎ 1(<2)◂{ }
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn { }
; .mov_ptn2 1(<2)◂{ } ⊢ 2'(= a3◂ [ *{ }] )
; .mov_ptn 1(<2)◂{ } ⊢ 2'(= a3◂ [ *{ }] )
	mov rax,unt 
	mov rax,unt_1
	mov r8,rax
	jmp LB_896
LB_896:
	cmp BYTE [r8+6],0
	jnz LB_890
	POP_GRM_SCC
	jmp LB_871
LB_890:
	RB_GRM
	mov QWORD [rsp+8*0],r14
	mov r13,QWORD [rsp+16+8*0]
	mov r14,QWORD [rsp+8*0]
	jmp LB_898
LB_898
; #24 { } ⊢ 0(<2)◂{ }
; ∎ 0(<2)◂{ }
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂{ } ⊢ 2'(= a3◂ [ *{ }] )
; .mov_ptn 0(<2)◂{ } ⊢ 2'(= a3◂ [ *{ }] )
	mov rax,unt 
	mov rax,unt_0
	mov r8,rax
	jmp LB_899
LB_899:
	cmp BYTE [r8+6],0
	jnz LB_897
	POP_GRM_SCC
	jmp LB_871
LB_897:
	POP_GRM_FAIL 
	jmp LB_871
LB_871:
	cmp BYTE [r8+6],0
	jnz LB_900
	jmp LB_901
LB_900:
	add rsp,0
	POP_GRM_FAIL
	ret
LB_901:
	mov QWORD [rsp+8*0],r14
; .mov_ptn2 2'(= *{ } ) ⊢ { }
; .mov_ptn 2'(= *{ } ) ⊢ { }
	mov r13,QWORD [rsp+16+8*0]
	mov r14,QWORD [rsp+8*0]
	jmp LB_902
LB_902
; #24 { } ⊢ 0(<2)◂{ }
; ∎ 0(<2)◂{ }
; .dlt.ptn { }
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂{ } ⊢ 2'(= a3◂ [ *{ }] )
; .mov_ptn 0(<2)◂{ } ⊢ 2'(= a3◂ [ *{ }] )
	mov rax,unt 
	mov rax,unt_0
	mov r8,rax
	jmp LB_903
LB_903:
	cmp BYTE [r8+6],0
	jnz LB_864
	POP_GRM_SCC
	ret
LB_864:
	POP_GRM_FAIL 
	ret
ETR_191:
	mov r9,0x0000_ffff_ffff_ffff
	and r9,[r13]
	call GRM_191
	ret
GRM_191:
	PUSH_GRM
	lea rax,[r14+1]
	cmp rax,r9
	jg LB_907
	jmp LB_908
LB_907:
	mov r8,unt_1
	jmp LB_905
LB_908:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],44
	jnz LB_909
	jmp LB_910
LB_909:
	mov r8,unt_1
	jmp LB_905
LB_910:
	add r14,1
	jmp LB_906
LB_905:
	add rsp,0
	jmp LB_904
LB_906:
	mov QWORD [rsp+8*0],r14
	mov r13,QWORD [rsp+16+8*0]
	mov r14,QWORD [rsp+8*0]
	jmp LB_911
LB_911
; #25 { } ⊢ 1(<2)◂{ }
; ∎ 1(<2)◂{ }
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 1(<2)◂{ } ⊢ 2'(= a3◂ [ *{ }] )
; .mov_ptn 1(<2)◂{ } ⊢ 2'(= a3◂ [ *{ }] )
	mov rax,unt 
	mov rax,unt_1
	mov r8,rax
	jmp LB_912
LB_912:
	cmp BYTE [r8+6],0
	jnz LB_904
	POP_GRM_SCC
	ret
LB_904:
	RB_GRM
	mov QWORD [rsp+8*0],r14
	mov r13,QWORD [rsp+16+8*0]
	mov r14,QWORD [rsp+8*0]
	jmp LB_914
LB_914
; #24 { } ⊢ 0(<2)◂{ }
; ∎ 0(<2)◂{ }
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂{ } ⊢ 2'(= a3◂ [ *{ }] )
; .mov_ptn 0(<2)◂{ } ⊢ 2'(= a3◂ [ *{ }] )
	mov rax,unt 
	mov rax,unt_0
	mov r8,rax
	jmp LB_915
LB_915:
	cmp BYTE [r8+6],0
	jnz LB_913
	POP_GRM_SCC
	ret
LB_913:
	POP_GRM_FAIL 
	ret
ETR_192:
	mov r9,0x0000_ffff_ffff_ffff
	and r9,[r13]
	call GRM_192
	ret
GRM_192:
	PUSH_GRM
	jmp LB_918
LB_917:
	add r14,1 
LB_918:
	cmp r14,r9
	jge LB_919
	JZ_LINE_SPC BYTE [r13+8+r14], LB_917
LB_919
	call GRM_80
	cmp BYTE [r8+6],0
	jnz LB_922
	jmp LB_923
LB_922:
	jmp LB_920
LB_923:
	sub rsp,8
; .mov_ptn2 2'(= {| l |} ) ⊢ 8'(= {| l |} )
; .mov_ptn 2'(= {| l |} ) ⊢ 8'(= {| l |} )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_921
LB_920:
	add rsp,0
	jmp LB_916
LB_921:
	jmp LB_925
LB_924:
	add r14,1 
LB_925:
	cmp r14,r9
	jge LB_926
	JZ_LINE_SPC BYTE [r13+8+r14], LB_924
LB_926
	lea rax,[r14+1]
	cmp rax,r9
	jg LB_929
	jmp LB_930
LB_929:
	mov r8,unt_1
	jmp LB_927
LB_930:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],46
	jnz LB_931
	jmp LB_932
LB_931:
	mov r8,unt_1
	jmp LB_927
LB_932:
	add r14,1
	jmp LB_928
LB_927:
	add rsp,8
	jmp LB_916
LB_928:
	jmp LB_934
LB_933:
	add r14,1 
LB_934:
	cmp r14,r9
	jge LB_935
	JZ_LINE_SPC BYTE [r13+8+r14], LB_933
LB_935
	call GRM_192
	cmp BYTE [r8+6],0
	jnz LB_938
	jmp LB_939
LB_938:
	jmp LB_936
LB_939:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a17◂ [ ] ) ⊢ 9'(= a17◂ [ ] )
; .mov_ptn 2'(= a17◂ [ ] ) ⊢ 9'(= a17◂ [ ] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_937
LB_936:
	add rsp,8
	jmp LB_916
LB_937:
	mov QWORD [rsp+8*2],r14
	mov r13,QWORD [rsp+16+8*2]
	mov r14,QWORD [rsp+8*2]
	jmp LB_940
LB_940
; #84 { 8'(= {| l |} ) 9'(= a17◂ [ ] ) } ⊢ 0(<2)◂{ 8'(= {| l |} ) 9'(= a17◂ [ ] ) }
; #24 0(<2)◂{ 8'(= {| l |} ) 9'(= a17◂ [ ] ) } ⊢ 0(<2)◂0(<2)◂{ 8'(= {| l |} ) 9'(= a17◂ [ ] ) }
; ∎ 0(<2)◂0(<2)◂{ 8'(= {| l |} ) 9'(= a17◂ [ ] ) }
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂0(<2)◂{ 8'(= {| l |} ) 9'(= a17◂ [ ] ) } ⊢ 2'(= a3◂ [ a17◂ [ ]] )
; .mov_ptn 0(<2)◂0(<2)◂{ 8'(= {| l |} ) 9'(= a17◂ [ ] ) } ⊢ 2'(= a3◂ [ a17◂ [ ]] )
	ALC_RCD 2, rax
	mov r13,rax
	mov rax,QWORD [rsp-8+8*2]
	mov QWORD [r13+8+8*0],rax
	mov rax,QWORD [rsp-8+8*1]
	mov QWORD [r13+8+8*1],rax
	mov rax,r13
	mov BYTE [rax+6],0
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,16
	jmp LB_941
LB_941:
	cmp BYTE [r8+6],0
	jnz LB_916
	POP_GRM_SCC
	ret
LB_916:
	RB_GRM
	jmp LB_944
LB_943:
	add r14,1 
LB_944:
	cmp r14,r9
	jge LB_945
	JZ_LINE_SPC BYTE [r13+8+r14], LB_943
LB_945
	call GRM_80
	cmp BYTE [r8+6],0
	jnz LB_948
	jmp LB_949
LB_948:
	jmp LB_946
LB_949:
	sub rsp,8
; .mov_ptn2 2'(= {| l |} ) ⊢ 8'(= {| l |} )
; .mov_ptn 2'(= {| l |} ) ⊢ 8'(= {| l |} )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_947
LB_946:
	add rsp,0
	jmp LB_942
LB_947:
	mov QWORD [rsp+8*1],r14
	mov r13,QWORD [rsp+16+8*1]
	mov r14,QWORD [rsp+8*1]
	jmp LB_950
LB_950
; #83 8'(= {| l |} ) ⊢ 1(<2)◂8'(= {| l |} )
; #24 1(<2)◂8'(= {| l |} ) ⊢ 0(<2)◂1(<2)◂8'(= {| l |} )
; ∎ 0(<2)◂1(<2)◂8'(= {| l |} )
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂1(<2)◂8'(= {| l |} ) ⊢ 2'(= a3◂ [ a17◂ [ ]] )
; .mov_ptn 0(<2)◂1(<2)◂8'(= {| l |} ) ⊢ 2'(= a3◂ [ a17◂ [ ]] )
	mov rax,QWORD [rsp-8+8*1]
	mov BYTE [rax+6],1
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,8
	jmp LB_951
LB_951:
	cmp BYTE [r8+6],0
	jnz LB_942
	POP_GRM_SCC
	ret
LB_942:
	POP_GRM_FAIL 
	ret
ETR_193:
	mov r9,0x0000_ffff_ffff_ffff
	and r9,[r13]
	call GRM_193
	ret
GRM_193:
	PUSH_GRM
	cmp r14,r9
	jge LB_955
 lea rdi,[r13+8+r14] 
	C_PUSH_REGS
	call scf_d
	C_POP_REGS
	cmp rax,0 
	jz LB_955
	add r14,rsi
	push rdi
	jmp LB_956
LB_955:
	mov r8,unt_1
	jmp LB_953
LB_956:
	jmp LB_954
LB_953:
	add rsp,0
	jmp LB_952
LB_954:
	lea rax,[r14+1]
	cmp rax,r9
	jg LB_959
	jmp LB_960
LB_959:
	mov r8,unt_1
	jmp LB_957
LB_960:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],114
	jnz LB_961
	jmp LB_962
LB_961:
	mov r8,unt_1
	jmp LB_957
LB_962:
	add r14,1
	jmp LB_958
LB_957:
	add rsp,8
	jmp LB_952
LB_958:
	mov QWORD [rsp+8*1],r14
	mov r13,QWORD [rsp+16+8*1]
	mov r14,QWORD [rsp+8*1]
	jmp LB_963
LB_963
; #87 8'(= r ) ⊢ 0(<2)◂8'(= r )
; #89 0(<2)◂8'(= r ) ⊢ 0(<2)◂0(<2)◂8'(= r )
; #24 0(<2)◂0(<2)◂8'(= r ) ⊢ 0(<2)◂0(<2)◂0(<2)◂8'(= r )
; ∎ 0(<2)◂0(<2)◂0(<2)◂8'(= r )
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂0(<2)◂0(<2)◂8'(= r ) ⊢ 2'(= a3◂ [ a19◂ [ a17◂ [ ]]] )
; .mov_ptn 0(<2)◂0(<2)◂0(<2)◂8'(= r ) ⊢ 2'(= a3◂ [ a19◂ [ a17◂ [ ]]] )
	mov rax,QWORD [rsp-8+8*1]
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,8
	jmp LB_964
LB_964:
	cmp BYTE [r8+6],0
	jnz LB_952
	POP_GRM_SCC
	ret
LB_952:
	RB_GRM
	lea rax,[r14+2]
	cmp rax,r9
	jg LB_968
	jmp LB_969
LB_968:
	mov r8,unt_1
	jmp LB_966
LB_969:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],48
	jnz LB_970
	cmp BYTE [rdi+1],120
	jnz LB_970
	jmp LB_971
LB_970:
	mov r8,unt_1
	jmp LB_966
LB_971:
	add r14,2
	jmp LB_967
LB_966:
	add rsp,0
	jmp LB_965
LB_967:
	cmp r14,r9
	jge LB_974
 lea rdi,[r13+8+r14] 
	C_PUSH_REGS
	call scf_x
	C_POP_REGS
	cmp rax,0 
	jz LB_974
	add r14,rsi
	push rdi
	jmp LB_975
LB_974:
	mov r8,unt_1
	jmp LB_972
LB_975:
	jmp LB_973
LB_972:
	add rsp,0
	jmp LB_965
LB_973:
	lea rax,[r14+1]
	cmp rax,r9
	jg LB_978
	jmp LB_979
LB_978:
	mov r8,unt_1
	jmp LB_976
LB_979:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],114
	jnz LB_980
	jmp LB_981
LB_980:
	mov r8,unt_1
	jmp LB_976
LB_981:
	add r14,1
	jmp LB_977
LB_976:
	add rsp,8
	jmp LB_965
LB_977:
	mov QWORD [rsp+8*1],r14
	mov r13,QWORD [rsp+16+8*1]
	mov r14,QWORD [rsp+8*1]
	jmp LB_982
LB_982
; #87 8'(= r ) ⊢ 0(<2)◂8'(= r )
; #89 0(<2)◂8'(= r ) ⊢ 0(<2)◂0(<2)◂8'(= r )
; #24 0(<2)◂0(<2)◂8'(= r ) ⊢ 0(<2)◂0(<2)◂0(<2)◂8'(= r )
; ∎ 0(<2)◂0(<2)◂0(<2)◂8'(= r )
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂0(<2)◂0(<2)◂8'(= r ) ⊢ 2'(= a3◂ [ a19◂ [ a17◂ [ ]]] )
; .mov_ptn 0(<2)◂0(<2)◂0(<2)◂8'(= r ) ⊢ 2'(= a3◂ [ a19◂ [ a17◂ [ ]]] )
	mov rax,QWORD [rsp-8+8*1]
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,8
	jmp LB_983
LB_983:
	cmp BYTE [r8+6],0
	jnz LB_965
	POP_GRM_SCC
	ret
LB_965:
	RB_GRM
	call GRM_70
	cmp BYTE [r8+6],0
	jnz LB_987
	jmp LB_988
LB_987:
	jmp LB_985
LB_988:
	sub rsp,8
; .mov_ptn2 2'(= {| l |} ) ⊢ 8'(= {| l |} )
; .mov_ptn 2'(= {| l |} ) ⊢ 8'(= {| l |} )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_986
LB_985:
	add rsp,0
	jmp LB_984
LB_986:
	mov QWORD [rsp+8*1],r14
	mov r13,QWORD [rsp+16+8*1]
	mov r14,QWORD [rsp+8*1]
	jmp LB_989
LB_989
; #86 8'(= {| l |} ) ⊢ 1(<2)◂8'(= {| l |} )
; #89 1(<2)◂8'(= {| l |} ) ⊢ 0(<2)◂1(<2)◂8'(= {| l |} )
; #24 0(<2)◂1(<2)◂8'(= {| l |} ) ⊢ 0(<2)◂0(<2)◂1(<2)◂8'(= {| l |} )
; ∎ 0(<2)◂0(<2)◂1(<2)◂8'(= {| l |} )
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂0(<2)◂1(<2)◂8'(= {| l |} ) ⊢ 2'(= a3◂ [ a19◂ [ a17◂ [ ]]] )
; .mov_ptn 0(<2)◂0(<2)◂1(<2)◂8'(= {| l |} ) ⊢ 2'(= a3◂ [ a19◂ [ a17◂ [ ]]] )
	mov rax,QWORD [rsp-8+8*1]
	mov BYTE [rax+6],1
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,8
	jmp LB_990
LB_990:
	cmp BYTE [r8+6],0
	jnz LB_984
	POP_GRM_SCC
	ret
LB_984:
	RB_GRM
	call GRM_192
	cmp BYTE [r8+6],0
	jnz LB_994
	jmp LB_995
LB_994:
	jmp LB_992
LB_995:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a17◂ [ ] ) ⊢ 8'(= a17◂ [ ] )
; .mov_ptn 2'(= a17◂ [ ] ) ⊢ 8'(= a17◂ [ ] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_993
LB_992:
	add rsp,0
	jmp LB_991
LB_993:
	mov QWORD [rsp+8*1],r14
	mov r13,QWORD [rsp+16+8*1]
	mov r14,QWORD [rsp+8*1]
	jmp LB_996
LB_996
; #88 8'(= a17◂ [ ] ) ⊢ 1(<2)◂8'(= a17◂ [ ] )
; #24 1(<2)◂8'(= a17◂ [ ] ) ⊢ 0(<2)◂1(<2)◂8'(= a17◂ [ ] )
; ∎ 0(<2)◂1(<2)◂8'(= a17◂ [ ] )
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂1(<2)◂8'(= a17◂ [ ] ) ⊢ 2'(= a3◂ [ a19◂ [ a17◂ [ ]]] )
; .mov_ptn 0(<2)◂1(<2)◂8'(= a17◂ [ ] ) ⊢ 2'(= a3◂ [ a19◂ [ a17◂ [ ]]] )
	mov rax,QWORD [rsp-8+8*1]
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],1
	mov QWORD [rax+8],rdi
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,8
	jmp LB_997
LB_997:
	cmp BYTE [r8+6],0
	jnz LB_991
	POP_GRM_SCC
	ret
LB_991:
	POP_GRM_FAIL 
	ret
ETR_194:
	mov r9,0x0000_ffff_ffff_ffff
	and r9,[r13]
	call GRM_194
	ret
GRM_194:
	PUSH_GRM
	jmp LB_1000
LB_999:
	add r14,1 
LB_1000:
	cmp r14,r9
	jge LB_1001
	JZ_LINE_SPC BYTE [r13+8+r14], LB_999
LB_1001
	lea rax,[r14+1]
	cmp rax,r9
	jg LB_1004
	jmp LB_1005
LB_1004:
	mov r8,unt_1
	jmp LB_1002
LB_1005:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],10
	jnz LB_1006
	jmp LB_1007
LB_1006:
	mov r8,unt_1
	jmp LB_1002
LB_1007:
	add r14,1
	jmp LB_1003
LB_1002:
	add rsp,0
	jmp LB_998
LB_1003:
	jmp LB_1009
LB_1008:
	add r14,1 
LB_1009:
	cmp r14,r9
	jge LB_1010
	JZ_LINE_SPC BYTE [r13+8+r14], LB_1008
LB_1010
	call GRM_194
	cmp BYTE [r8+6],0
	jnz LB_1013
	jmp LB_1014
LB_1013:
	jmp LB_1011
LB_1014:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= r ) ⊢ 8'(= r )
; .mov_ptn 2'(= r ) ⊢ 8'(= r )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_1012
LB_1011:
	add rsp,0
	jmp LB_998
LB_1012:
	mov QWORD [rsp+8*1],r14
	mov r13,QWORD [rsp+16+8*1]
	mov r14,QWORD [rsp+8*1]
	jmp LB_1015
LB_1015
; #11 8'(= r ) ⊢ 8'(= r )
	add QWORD [rsp-8+8*1],1
; #24 8'(= r ) ⊢ 0(<2)◂8'(= r )
; ∎ 0(<2)◂8'(= r )
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂8'(= r ) ⊢ 2'(= a3◂ [ r] )
; .mov_ptn 0(<2)◂8'(= r ) ⊢ 2'(= a3◂ [ r] )
	mov rax,QWORD [rsp-8+8*1]
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,8
	jmp LB_1016
LB_1016:
	cmp BYTE [r8+6],0
	jnz LB_998
	POP_GRM_SCC
	ret
LB_998:
	RB_GRM
	jmp LB_1019
LB_1018:
	add r14,1 
LB_1019:
	cmp r14,r9
	jge LB_1020
	JZ_LINE_SPC BYTE [r13+8+r14], LB_1018
LB_1020
	lea rax,[r14+1]
	cmp rax,r9
	jg LB_1023
	jmp LB_1024
LB_1023:
	mov r8,unt_1
	jmp LB_1021
LB_1024:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],10
	jnz LB_1025
	jmp LB_1026
LB_1025:
	mov r8,unt_1
	jmp LB_1021
LB_1026:
	add r14,1
	jmp LB_1022
LB_1021:
	add rsp,0
	jmp LB_1017
LB_1022:
	mov QWORD [rsp+8*0],r14
	mov r13,QWORD [rsp+16+8*0]
	mov r14,QWORD [rsp+8*0]
	jmp LB_1027
LB_1027
; #24 %[ 1r ] ⊢ 0(<2)◂%[ 1r ]
; ∎ 0(<2)◂%[ 1r ]
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂%[ 1r ] ⊢ 2'(= a3◂ [ r] )
; .mov_ptn 0(<2)◂%[ 1r ] ⊢ 2'(= a3◂ [ r] )
	mov rax,1
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	jmp LB_1028
LB_1028:
	cmp BYTE [r8+6],0
	jnz LB_1017
	POP_GRM_SCC
	ret
LB_1017:
	POP_GRM_FAIL 
	ret
ETR_198: ;; mk_prs_err { 0'(= r ) 1'(= r ) 2'(= {| l |} ) } ⊢ 0'(= a43◂ [ q0] ) : ({ _r64 _r64 _s8 }→_t43◂2327'(1))
; #22 { } ⊢ 1(<2)◂{ }
; #23 { { 0'(= r ) 1'(= r ) 2'(= {| l |} ) } 1(<2)◂{ } } ⊢ 0(<2)◂{ { 0'(= r ) 1'(= r ) 2'(= {| l |} ) } 1(<2)◂{ } }
; #195 0(<2)◂{ { 0'(= r ) 1'(= r ) 2'(= {| l |} ) } 1(<2)◂{ } } ⊢ 1(<2)◂0(<2)◂{ { 0'(= r ) 1'(= r ) 2'(= {| l |} ) } 1(<2)◂{ } }
; ∎ 1(<2)◂0(<2)◂{ { 0'(= r ) 1'(= r ) 2'(= {| l |} ) } 1(<2)◂{ } }
; .mov_ptn2 1(<2)◂0(<2)◂{ { 0'(= r ) 1'(= r ) 2'(= {| l |} ) } 1(<2)◂{ } } ⊢ 0'(= a43◂ [ q0] )
	mov r9,r13
; .mov_ptn 1(<2)◂0(<2)◂{ { 3'(= r ) 1'(= r ) 2'(= {| l |} ) } 1(<2)◂{ } } ⊢ 0'(= a43◂ [ q0] )
	ALC_RCD 2, rax
	mov r10,rax
	ALC_RCD 3, rax
	mov r11,rax
	mov rax,r9
	mov QWORD [r11+8+8*0],rax
	mov rax,r14
	mov QWORD [r11+8+8*1],rax
	mov rax,r8
	mov QWORD [r11+8+8*2],rax
	mov rax,r11
	mov QWORD [r10+8+8*0],rax
	mov rax,unt 
	mov rax,unt_1
	mov QWORD [r10+8+8*1],rax
	mov rax,r10
	mov BYTE [rax+6],0
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],1
	mov QWORD [rax+8],rdi
	mov r13,rax
	ret
ETR_199: ;; pnt_prs_err 0'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 0'(= {| l |} ) : (_lst◂{ _r64 _r64 _s8 }→_s8)
;; ? 0'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 0(<2)◂{ { 2'(= r ) 3'(= r ) 4'(= {| l |} ) } 5'(= a2◂ [ *{ rr{| l |}}] ) }
	mov rdi,r13
	cmp BYTE [rdi+6],0
	jnz LB_1029
	mov r14, QWORD [r13+8]
	mov r8, QWORD [r14+8]
	mov r9, QWORD [r14+16]
	mov r10, QWORD [r14+24]
	mov QWORD [GBG_VCT+8*0],r14
	mov r11, QWORD [r13+16]
	mov QWORD [GBG_VCT+8*1],r13
	mov rdi,QWORD [GBG_VCT+8*1]
	FREE_RCD 2,rdi
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_RCD 3,rdi
; #199 5'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 0'(= {| l |} )
	sub rsp,24
	mov QWORD [rsp+8*0],r8
	mov QWORD [rsp+8*1],r9
	mov QWORD [rsp+8*2],r10
; .mov_ptn2 5'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 0'(= a2◂ [ *{ rr{| l |}}] )
; .mov_ptn 5'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 0'(= a2◂ [ *{ rr{| l |}}] )
	mov rax,r11
	mov r13,rax
	call ETR_199
	mov r10,QWORD [rsp-8+8*3]
	mov r9,QWORD [rsp-8+8*2]
	mov r8,QWORD [rsp-8+8*1]
	add rsp,24
; » _^ .. ⊢ ..
; .. //
	mov rdi,0
	sub rsp,128
	push rdi 
	lea rdi,[rsp+8]
	mov rdx,r8
	mov rsi,fmt_d
 xor rax,rax
	C_CALL_SF sprintf
	pop rdi
	add rdi,rax 
	push rax 
	sub rsp,128
	push rdi 
	lea rdi,[rsp+8]
	mov rdx,r9
	mov rsi,fmt_d
 xor rax,rax
	C_CALL_SF sprintf
	pop rdi
	add rdi,rax 
	push rax 
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[r10]
	add rdi,rax 
	push rax
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[r13]
	add rdi,rax 
	push rax
	add rdi,11
	push rdi 
	call mlc_s8
	pop rdi
	mov r14,rax
	lea rdi,[rax+7+rdi]
	std 
	mov QWORD [tmp],rcx 
	pop rcx
	lea rsi,[r13+7+rcx]
	rep movsb
	lea rsi,[LB_1030+1-1]
	mov rcx,1
	rep movsb
	pop rcx
	lea rsi,[r10+7+rcx]
	rep movsb
	lea rsi,[LB_1031+1-1]
	mov rcx,1
	rep movsb
	pop rcx
	lea rsi,[rsp+rcx-1]
	rep movsb
	add rsp,128
	lea rsi,[LB_1032+1-1]
	mov rcx,1
	rep movsb
	pop rcx
	lea rsi,[rsp+rcx-1]
	rep movsb
	add rsp,128
	lea rsi,[LB_1033+8-1]
	mov rcx,8
	rep movsb
	mov rcx,QWORD [tmp] 
; ∎ 1'(= {| l |} )
; .dlt.ptn 0'(= {| l |} )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	mov rdi,r8
	call free_s8
	C_POP_REGS
; .dlt.ptn 4'(= {| l |} )
	mov rdi,r10
	C_PUSH_REGS
	mov r8,rdi
	mov rdi,r8
	call free_s8
	C_POP_REGS
; .dlt.ptn 3'(= r )
	mov rdi,r9
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 2'(= r )
	mov rdi,r8
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 1'(= {| l |} ) ⊢ 0'(= {| l |} )
; .mov_ptn 1'(= {| l |} ) ⊢ 0'(= {| l |} )
	mov rax,r14
	mov r13,rax
	ret
LB_1029:
;; ?. 0'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 1(<2)◂{ }
; $ %[ "" ] ⊢ %[ "" ]
; ∎ %[ "" ]
; .mov_ptn2 %[ "" ] ⊢ 0'(= {| l |} )
; .mov_ptn %[ "" ] ⊢ 0'(= {| l |} )
	mov rsi,1  
	mov rdi,16
	xor rax,rax 
	C_CALL_SF calloc
	mov QWORD [rax],0
	mov r13,rax
	ret
ETR_200:
	mov r9,0x0000_ffff_ffff_ffff
	and r9,[r13]
	call GRM_200
	ret
GRM_200:
	PUSH_GRM
	jmp LB_1036
LB_1035:
	add r14,1 
LB_1036:
	cmp r14,r9
	jge LB_1037
	JZ_LINE_SPC BYTE [r13+8+r14], LB_1035
LB_1037
	lea rax,[r14+1]
	cmp rax,r9
	jg LB_1040
	jmp LB_1041
LB_1040:
	mov r8,unt_1
	jmp LB_1038
LB_1041:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],123
	jnz LB_1042
	jmp LB_1043
LB_1042:
	mov r8,unt_1
	jmp LB_1038
LB_1043:
	add r14,1
	jmp LB_1039
LB_1038:
	add rsp,0
	jmp LB_1034
LB_1039:
	jmp LB_1045
LB_1044:
	add r14,1 
LB_1045:
	cmp r14,r9
	jge LB_1046
	JZ_LINE_SPC BYTE [r13+8+r14], LB_1044
LB_1046
	call GRM_201
	cmp BYTE [r8+6],0
	jnz LB_1049
	jmp LB_1050
LB_1049:
	jmp LB_1047
LB_1050:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a2◂ [ a16◂ [ a22◂ [ a17◂ [ ]{| l |}]]] ) ⊢ 8'(= a2◂ [ a16◂ [ a22◂ [ a17◂ [ ]{| l |}]]] )
; .mov_ptn 2'(= a2◂ [ a16◂ [ a22◂ [ a17◂ [ ]{| l |}]]] ) ⊢ 8'(= a2◂ [ a16◂ [ a22◂ [ a17◂ [ ]{| l |}]]] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_1048
LB_1047:
	add rsp,0
	jmp LB_1034
LB_1048:
	jmp LB_1052
LB_1051:
	add r14,1 
LB_1052:
	cmp r14,r9
	jge LB_1053
	JZ_LINE_SPC BYTE [r13+8+r14], LB_1051
LB_1053
	lea rax,[r14+1]
	cmp rax,r9
	jg LB_1056
	jmp LB_1057
LB_1056:
	mov r8,unt_1
	jmp LB_1054
LB_1057:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],125
	jnz LB_1058
	jmp LB_1059
LB_1058:
	mov r8,unt_1
	jmp LB_1054
LB_1059:
	add r14,1
	jmp LB_1055
LB_1054:
	add rsp,8
	jmp LB_1034
LB_1055:
	mov QWORD [rsp+8*1],r14
	mov r13,QWORD [rsp+16+8*1]
	mov r14,QWORD [rsp+8*1]
	jmp LB_1060
LB_1060
; #82 8'(= a2◂ [ a16◂ [ a22◂ [ a17◂ [ ]{| l |}]]] ) ⊢ 0(<2)◂8'(= a2◂ [ a16◂ [ a22◂ [ a17◂ [ ]{| l |}]]] )
; #24 0(<2)◂8'(= a2◂ [ a16◂ [ a22◂ [ a17◂ [ ]{| l |}]]] ) ⊢ 0(<2)◂0(<2)◂8'(= a2◂ [ a16◂ [ a22◂ [ a17◂ [ ]{| l |}]]] )
; ∎ 0(<2)◂0(<2)◂8'(= a2◂ [ a16◂ [ a22◂ [ a17◂ [ ]{| l |}]]] )
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂0(<2)◂8'(= a2◂ [ a16◂ [ a22◂ [ a17◂ [ ]{| l |}]]] ) ⊢ 2'(= a3◂ [ a16◂ [ a22◂ [ a17◂ [ ]{| l |}]]] )
; .mov_ptn 0(<2)◂0(<2)◂8'(= a2◂ [ a16◂ [ a22◂ [ a17◂ [ ]{| l |}]]] ) ⊢ 2'(= a3◂ [ a16◂ [ a22◂ [ a17◂ [ ]{| l |}]]] )
	mov rax,QWORD [rsp-8+8*1]
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,8
	jmp LB_1061
LB_1061:
	cmp BYTE [r8+6],0
	jnz LB_1034
	POP_GRM_SCC
	ret
LB_1034:
	RB_GRM
	jmp LB_1064
LB_1063:
	add r14,1 
LB_1064:
	cmp r14,r9
	jge LB_1065
	JZ_LINE_SPC BYTE [r13+8+r14], LB_1063
LB_1065
	call GRM_203
	cmp BYTE [r8+6],0
	jnz LB_1068
	jmp LB_1069
LB_1068:
	jmp LB_1066
LB_1069:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a22◂ [ a17◂ [ ]{| l |}] ) ⊢ 8'(= a22◂ [ a17◂ [ ]{| l |}] )
; .mov_ptn 2'(= a22◂ [ a17◂ [ ]{| l |}] ) ⊢ 8'(= a22◂ [ a17◂ [ ]{| l |}] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_1067
LB_1066:
	add rsp,0
	jmp LB_1062
LB_1067:
	mov QWORD [rsp+8*1],r14
	mov r13,QWORD [rsp+16+8*1]
	mov r14,QWORD [rsp+8*1]
	jmp LB_1070
LB_1070
; #81 8'(= a22◂ [ a17◂ [ ]{| l |}] ) ⊢ 1(<2)◂8'(= a22◂ [ a17◂ [ ]{| l |}] )
; #24 1(<2)◂8'(= a22◂ [ a17◂ [ ]{| l |}] ) ⊢ 0(<2)◂1(<2)◂8'(= a22◂ [ a17◂ [ ]{| l |}] )
; ∎ 0(<2)◂1(<2)◂8'(= a22◂ [ a17◂ [ ]{| l |}] )
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂1(<2)◂8'(= a22◂ [ a17◂ [ ]{| l |}] ) ⊢ 2'(= a3◂ [ a16◂ [ a22◂ [ a17◂ [ ]{| l |}]]] )
; .mov_ptn 0(<2)◂1(<2)◂8'(= a22◂ [ a17◂ [ ]{| l |}] ) ⊢ 2'(= a3◂ [ a16◂ [ a22◂ [ a17◂ [ ]{| l |}]]] )
	mov rax,QWORD [rsp-8+8*1]
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],1
	mov QWORD [rax+8],rdi
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,8
	jmp LB_1071
LB_1071:
	cmp BYTE [r8+6],0
	jnz LB_1062
	POP_GRM_SCC
	ret
LB_1062:
	POP_GRM_FAIL 
	ret
ETR_201:
	mov r9,0x0000_ffff_ffff_ffff
	and r9,[r13]
	call GRM_201
	ret
GRM_201:
	PUSH_GRM
	jmp LB_1074
LB_1073:
	add r14,1 
LB_1074:
	cmp r14,r9
	jge LB_1075
	JZ_LINE_SPC BYTE [r13+8+r14], LB_1073
LB_1075
	call GRM_200
	cmp BYTE [r8+6],0
	jnz LB_1078
	jmp LB_1079
LB_1078:
	jmp LB_1076
LB_1079:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a16◂ [ a22◂ [ a17◂ [ ]{| l |}]] ) ⊢ 8'(= a16◂ [ a22◂ [ a17◂ [ ]{| l |}]] )
; .mov_ptn 2'(= a16◂ [ a22◂ [ a17◂ [ ]{| l |}]] ) ⊢ 8'(= a16◂ [ a22◂ [ a17◂ [ ]{| l |}]] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_1077
LB_1076:
	add rsp,0
	jmp LB_1072
LB_1077:
	jmp LB_1081
LB_1080:
	add r14,1 
LB_1081:
	cmp r14,r9
	jge LB_1082
	JZ_LINE_SPC BYTE [r13+8+r14], LB_1080
LB_1082
	call GRM_201
	cmp BYTE [r8+6],0
	jnz LB_1085
	jmp LB_1086
LB_1085:
	jmp LB_1083
LB_1086:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a2◂ [ a16◂ [ a22◂ [ a17◂ [ ]{| l |}]]] ) ⊢ 9'(= a2◂ [ a16◂ [ a22◂ [ a17◂ [ ]{| l |}]]] )
; .mov_ptn 2'(= a2◂ [ a16◂ [ a22◂ [ a17◂ [ ]{| l |}]]] ) ⊢ 9'(= a2◂ [ a16◂ [ a22◂ [ a17◂ [ ]{| l |}]]] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_1084
LB_1083:
	add rsp,8
	jmp LB_1072
LB_1084:
	mov QWORD [rsp+8*2],r14
	mov r13,QWORD [rsp+16+8*2]
	mov r14,QWORD [rsp+8*2]
	jmp LB_1087
LB_1087
; #23 { 8'(= a16◂ [ a22◂ [ a17◂ [ ]{| l |}]] ) 9'(= a2◂ [ a16◂ [ a22◂ [ a17◂ [ ]{| l |}]]] ) } ⊢ 0(<2)◂{ 8'(= a16◂ [ a22◂ [ a17◂ [ ]{| l |}]] ) 9'(= a2◂ [ a16◂ [ a22◂ [ a17◂ [ ]{| l |}]]] ) }
; #24 0(<2)◂{ 8'(= a16◂ [ a22◂ [ a17◂ [ ]{| l |}]] ) 9'(= a2◂ [ a16◂ [ a22◂ [ a17◂ [ ]{| l |}]]] ) } ⊢ 0(<2)◂0(<2)◂{ 8'(= a16◂ [ a22◂ [ a17◂ [ ]{| l |}]] ) 9'(= a2◂ [ a16◂ [ a22◂ [ a17◂ [ ]{| l |}]]] ) }
; ∎ 0(<2)◂0(<2)◂{ 8'(= a16◂ [ a22◂ [ a17◂ [ ]{| l |}]] ) 9'(= a2◂ [ a16◂ [ a22◂ [ a17◂ [ ]{| l |}]]] ) }
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂0(<2)◂{ 8'(= a16◂ [ a22◂ [ a17◂ [ ]{| l |}]] ) 9'(= a2◂ [ a16◂ [ a22◂ [ a17◂ [ ]{| l |}]]] ) } ⊢ 2'(= a3◂ [ a2◂ [ a16◂ [ a22◂ [ a17◂ [ ]{| l |}]]]] )
; .mov_ptn 0(<2)◂0(<2)◂{ 8'(= a16◂ [ a22◂ [ a17◂ [ ]{| l |}]] ) 9'(= a2◂ [ a16◂ [ a22◂ [ a17◂ [ ]{| l |}]]] ) } ⊢ 2'(= a3◂ [ a2◂ [ a16◂ [ a22◂ [ a17◂ [ ]{| l |}]]]] )
	ALC_RCD 2, rax
	mov r13,rax
	mov rax,QWORD [rsp-8+8*2]
	mov QWORD [r13+8+8*0],rax
	mov rax,QWORD [rsp-8+8*1]
	mov QWORD [r13+8+8*1],rax
	mov rax,r13
	mov BYTE [rax+6],0
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,16
	jmp LB_1088
LB_1088:
	cmp BYTE [r8+6],0
	jnz LB_1072
	POP_GRM_SCC
	ret
LB_1072:
	RB_GRM
	mov QWORD [rsp+8*0],r14
	mov r13,QWORD [rsp+16+8*0]
	mov r14,QWORD [rsp+8*0]
	jmp LB_1090
LB_1090
; #22 { } ⊢ 1(<2)◂{ }
; #24 1(<2)◂{ } ⊢ 0(<2)◂1(<2)◂{ }
; ∎ 0(<2)◂1(<2)◂{ }
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂1(<2)◂{ } ⊢ 2'(= a3◂ [ a2◂ [ a16◂ [ a22◂ [ a17◂ [ ]{| l |}]]]] )
; .mov_ptn 0(<2)◂1(<2)◂{ } ⊢ 2'(= a3◂ [ a2◂ [ a16◂ [ a22◂ [ a17◂ [ ]{| l |}]]]] )
	mov rax,unt 
	mov rax,unt_1
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	jmp LB_1091
LB_1091:
	cmp BYTE [r8+6],0
	jnz LB_1089
	POP_GRM_SCC
	ret
LB_1089:
	POP_GRM_FAIL 
	ret
ETR_202:
	mov r9,0x0000_ffff_ffff_ffff
	and r9,[r13]
	call GRM_202
	ret
GRM_202:
	PUSH_GRM
	jmp LB_1094
LB_1093:
	add r14,1 
LB_1094:
	cmp r14,r9
	jge LB_1095
	JZ_LINE_SPC BYTE [r13+8+r14], LB_1093
LB_1095
	lea rax,[r14+1]
	cmp rax,r9
	jg LB_1098
	jmp LB_1099
LB_1098:
	mov r8,unt_1
	jmp LB_1096
LB_1099:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],44
	jnz LB_1100
	jmp LB_1101
LB_1100:
	mov r8,unt_1
	jmp LB_1096
LB_1101:
	add r14,1
	jmp LB_1097
LB_1096:
	add rsp,0
	jmp LB_1092
LB_1097:
	jmp LB_1103
LB_1102:
	add r14,1 
LB_1103:
	cmp r14,r9
	jge LB_1104
	JZ_LINE_SPC BYTE [r13+8+r14], LB_1102
LB_1104
	call GRM_203
	cmp BYTE [r8+6],0
	jnz LB_1107
	jmp LB_1108
LB_1107:
	jmp LB_1105
LB_1108:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a22◂ [ a17◂ [ ]{| l |}] ) ⊢ 8'(= a22◂ [ a17◂ [ ]{| l |}] )
; .mov_ptn 2'(= a22◂ [ a17◂ [ ]{| l |}] ) ⊢ 8'(= a22◂ [ a17◂ [ ]{| l |}] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_1106
LB_1105:
	add rsp,0
	POP_GRM_FAIL
	ret
LB_1106:
	jmp LB_1110
LB_1109:
	add r14,1 
LB_1110:
	cmp r14,r9
	jge LB_1111
	JZ_LINE_SPC BYTE [r13+8+r14], LB_1109
LB_1111
	call GRM_202
	cmp BYTE [r8+6],0
	jnz LB_1114
	jmp LB_1115
LB_1114:
	jmp LB_1112
LB_1115:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a2◂ [ a22◂ [ a17◂ [ ]{| l |}]] ) ⊢ 9'(= a2◂ [ a22◂ [ a17◂ [ ]{| l |}]] )
; .mov_ptn 2'(= a2◂ [ a22◂ [ a17◂ [ ]{| l |}]] ) ⊢ 9'(= a2◂ [ a22◂ [ a17◂ [ ]{| l |}]] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_1113
LB_1112:
	add rsp,8
	POP_GRM_FAIL
	ret
LB_1113:
	mov QWORD [rsp+8*2],r14
	mov r13,QWORD [rsp+16+8*2]
	mov r14,QWORD [rsp+8*2]
	jmp LB_1116
LB_1116
; #23 { 8'(= a22◂ [ a17◂ [ ]{| l |}] ) 9'(= a2◂ [ a22◂ [ a17◂ [ ]{| l |}]] ) } ⊢ 0(<2)◂{ 8'(= a22◂ [ a17◂ [ ]{| l |}] ) 9'(= a2◂ [ a22◂ [ a17◂ [ ]{| l |}]] ) }
; #24 0(<2)◂{ 8'(= a22◂ [ a17◂ [ ]{| l |}] ) 9'(= a2◂ [ a22◂ [ a17◂ [ ]{| l |}]] ) } ⊢ 0(<2)◂0(<2)◂{ 8'(= a22◂ [ a17◂ [ ]{| l |}] ) 9'(= a2◂ [ a22◂ [ a17◂ [ ]{| l |}]] ) }
; ∎ 0(<2)◂0(<2)◂{ 8'(= a22◂ [ a17◂ [ ]{| l |}] ) 9'(= a2◂ [ a22◂ [ a17◂ [ ]{| l |}]] ) }
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂0(<2)◂{ 8'(= a22◂ [ a17◂ [ ]{| l |}] ) 9'(= a2◂ [ a22◂ [ a17◂ [ ]{| l |}]] ) } ⊢ 2'(= a3◂ [ a2◂ [ a22◂ [ a17◂ [ ]{| l |}]]] )
; .mov_ptn 0(<2)◂0(<2)◂{ 8'(= a22◂ [ a17◂ [ ]{| l |}] ) 9'(= a2◂ [ a22◂ [ a17◂ [ ]{| l |}]] ) } ⊢ 2'(= a3◂ [ a2◂ [ a22◂ [ a17◂ [ ]{| l |}]]] )
	ALC_RCD 2, rax
	mov r13,rax
	mov rax,QWORD [rsp-8+8*2]
	mov QWORD [r13+8+8*0],rax
	mov rax,QWORD [rsp-8+8*1]
	mov QWORD [r13+8+8*1],rax
	mov rax,r13
	mov BYTE [rax+6],0
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,16
	jmp LB_1117
LB_1117:
	cmp BYTE [r8+6],0
	jnz LB_1092
	POP_GRM_SCC
	ret
LB_1092:
	RB_GRM
	mov QWORD [rsp+8*0],r14
	mov r13,QWORD [rsp+16+8*0]
	mov r14,QWORD [rsp+8*0]
	jmp LB_1119
LB_1119
; #22 { } ⊢ 1(<2)◂{ }
; #24 1(<2)◂{ } ⊢ 0(<2)◂1(<2)◂{ }
; ∎ 0(<2)◂1(<2)◂{ }
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂1(<2)◂{ } ⊢ 2'(= a3◂ [ a2◂ [ a22◂ [ a17◂ [ ]{| l |}]]] )
; .mov_ptn 0(<2)◂1(<2)◂{ } ⊢ 2'(= a3◂ [ a2◂ [ a22◂ [ a17◂ [ ]{| l |}]]] )
	mov rax,unt 
	mov rax,unt_1
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	jmp LB_1120
LB_1120:
	cmp BYTE [r8+6],0
	jnz LB_1118
	POP_GRM_SCC
	ret
LB_1118:
	POP_GRM_FAIL 
	ret
ETR_203:
	mov r9,0x0000_ffff_ffff_ffff
	and r9,[r13]
	call GRM_203
	ret
GRM_203:
	PUSH_GRM
	jmp LB_1123
LB_1122:
	add r14,1 
LB_1123:
	cmp r14,r9
	jge LB_1124
	JZ_LINE_SPC BYTE [r13+8+r14], LB_1122
LB_1124
	call GRM_192
	cmp BYTE [r8+6],0
	jnz LB_1127
	jmp LB_1128
LB_1127:
	jmp LB_1125
LB_1128:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a17◂ [ ] ) ⊢ 8'(= a17◂ [ ] )
; .mov_ptn 2'(= a17◂ [ ] ) ⊢ 8'(= a17◂ [ ] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_1126
LB_1125:
	add rsp,0
	jmp LB_1121
LB_1126:
	jmp LB_1130
LB_1129:
	add r14,1 
LB_1130:
	cmp r14,r9
	jge LB_1131
	JZ_LINE_SPC BYTE [r13+8+r14], LB_1129
LB_1131
	lea rax,[r14+3]
	cmp rax,r9
	jg LB_1134
	jmp LB_1135
LB_1134:
	mov r8,unt_1
	jmp LB_1132
LB_1135:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],226
	jnz LB_1136
	cmp BYTE [rdi+1],151
	jnz LB_1136
	cmp BYTE [rdi+2],130
	jnz LB_1136
	jmp LB_1137
LB_1136:
	mov r8,unt_1
	jmp LB_1132
LB_1137:
	add r14,3
	jmp LB_1133
LB_1132:
	add rsp,8
	jmp LB_1121
LB_1133:
	jmp LB_1139
LB_1138:
	add r14,1 
LB_1139:
	cmp r14,r9
	jge LB_1140
	JZ_LINE_SPC BYTE [r13+8+r14], LB_1138
LB_1140
	call GRM_200
	cmp BYTE [r8+6],0
	jnz LB_1143
	jmp LB_1144
LB_1143:
	jmp LB_1141
LB_1144:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a16◂ [ a22◂ [ a17◂ [ ]{| l |}]] ) ⊢ 9'(= a16◂ [ a22◂ [ a17◂ [ ]{| l |}]] )
; .mov_ptn 2'(= a16◂ [ a22◂ [ a17◂ [ ]{| l |}]] ) ⊢ 9'(= a16◂ [ a22◂ [ a17◂ [ ]{| l |}]] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_1142
LB_1141:
	add rsp,8
	jmp LB_1121
LB_1142:
	mov QWORD [rsp+8*2],r14
	mov r13,QWORD [rsp+16+8*2]
	mov r14,QWORD [rsp+8*2]
	jmp LB_1145
LB_1145
; #99 { 8'(= a17◂ [ ] ) 9'(= a16◂ [ a22◂ [ a17◂ [ ]{| l |}]] ) } ⊢ 0(<4)◂{ 8'(= a17◂ [ ] ) 9'(= a16◂ [ a22◂ [ a17◂ [ ]{| l |}]] ) }
; #24 0(<4)◂{ 8'(= a17◂ [ ] ) 9'(= a16◂ [ a22◂ [ a17◂ [ ]{| l |}]] ) } ⊢ 0(<2)◂0(<4)◂{ 8'(= a17◂ [ ] ) 9'(= a16◂ [ a22◂ [ a17◂ [ ]{| l |}]] ) }
; ∎ 0(<2)◂0(<4)◂{ 8'(= a17◂ [ ] ) 9'(= a16◂ [ a22◂ [ a17◂ [ ]{| l |}]] ) }
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂0(<4)◂{ 8'(= a17◂ [ ] ) 9'(= a16◂ [ a22◂ [ a17◂ [ ]{| l |}]] ) } ⊢ 2'(= a3◂ [ a22◂ [ a17◂ [ ]{| l |}]] )
; .mov_ptn 0(<2)◂0(<4)◂{ 8'(= a17◂ [ ] ) 9'(= a16◂ [ a22◂ [ a17◂ [ ]{| l |}]] ) } ⊢ 2'(= a3◂ [ a22◂ [ a17◂ [ ]{| l |}]] )
	ALC_RCD 2, rax
	mov r13,rax
	mov rax,QWORD [rsp-8+8*2]
	mov QWORD [r13+8+8*0],rax
	mov rax,QWORD [rsp-8+8*1]
	mov QWORD [r13+8+8*1],rax
	mov rax,r13
	mov BYTE [rax+6],0
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,16
	jmp LB_1146
LB_1146:
	cmp BYTE [r8+6],0
	jnz LB_1121
	POP_GRM_SCC
	ret
LB_1121:
	RB_GRM
	jmp LB_1149
LB_1148:
	add r14,1 
LB_1149:
	cmp r14,r9
	jge LB_1150
	JZ_LINE_SPC BYTE [r13+8+r14], LB_1148
LB_1150
	lea rax,[r14+2]
	cmp rax,r9
	jg LB_1153
	jmp LB_1154
LB_1153:
	mov r8,unt_1
	jmp LB_1151
LB_1154:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],37
	jnz LB_1155
	cmp BYTE [rdi+1],91
	jnz LB_1155
	jmp LB_1156
LB_1155:
	mov r8,unt_1
	jmp LB_1151
LB_1156:
	add r14,2
	jmp LB_1152
LB_1151:
	add rsp,0
	jmp LB_1147
LB_1152:
	jmp LB_1158
LB_1157:
	add r14,1 
LB_1158:
	cmp r14,r9
	jge LB_1159
	JZ_LINE_SPC BYTE [r13+8+r14], LB_1157
LB_1159
	call GRM_193
	cmp BYTE [r8+6],0
	jnz LB_1162
	jmp LB_1163
LB_1162:
	jmp LB_1160
LB_1163:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a19◂ [ a17◂ [ ]] ) ⊢ 8'(= a19◂ [ a17◂ [ ]] )
; .mov_ptn 2'(= a19◂ [ a17◂ [ ]] ) ⊢ 8'(= a19◂ [ a17◂ [ ]] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_1161
LB_1160:
	add rsp,0
	POP_GRM_FAIL
	ret
LB_1161:
	jmp LB_1165
LB_1164:
	add r14,1 
LB_1165:
	cmp r14,r9
	jge LB_1166
	JZ_LINE_SPC BYTE [r13+8+r14], LB_1164
LB_1166
	lea rax,[r14+1]
	cmp rax,r9
	jg LB_1169
	jmp LB_1170
LB_1169:
	mov r8,unt_1
	jmp LB_1167
LB_1170:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],93
	jnz LB_1171
	jmp LB_1172
LB_1171:
	mov r8,unt_1
	jmp LB_1167
LB_1172:
	add r14,1
	jmp LB_1168
LB_1167:
	add rsp,8
	POP_GRM_FAIL
	ret
LB_1168:
	mov QWORD [rsp+8*1],r14
	mov r13,QWORD [rsp+16+8*1]
	mov r14,QWORD [rsp+8*1]
	jmp LB_1173
LB_1173
; #98 8'(= a19◂ [ a17◂ [ ]] ) ⊢ 1(<4)◂8'(= a19◂ [ a17◂ [ ]] )
; #24 1(<4)◂8'(= a19◂ [ a17◂ [ ]] ) ⊢ 0(<2)◂1(<4)◂8'(= a19◂ [ a17◂ [ ]] )
; ∎ 0(<2)◂1(<4)◂8'(= a19◂ [ a17◂ [ ]] )
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂1(<4)◂8'(= a19◂ [ a17◂ [ ]] ) ⊢ 2'(= a3◂ [ a22◂ [ a17◂ [ ]{| l |}]] )
; .mov_ptn 0(<2)◂1(<4)◂8'(= a19◂ [ a17◂ [ ]] ) ⊢ 2'(= a3◂ [ a22◂ [ a17◂ [ ]{| l |}]] )
	mov rax,QWORD [rsp-8+8*1]
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],1
	mov QWORD [rax+8],rdi
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,8
	jmp LB_1174
LB_1174:
	cmp BYTE [r8+6],0
	jnz LB_1147
	POP_GRM_SCC
	ret
LB_1147:
	RB_GRM
	jmp LB_1177
LB_1176:
	add r14,1 
LB_1177:
	cmp r14,r9
	jge LB_1178
	JZ_LINE_SPC BYTE [r13+8+r14], LB_1176
LB_1178
	lea rax,[r14+1]
	cmp rax,r9
	jg LB_1181
	jmp LB_1182
LB_1181:
	mov r8,unt_1
	jmp LB_1179
LB_1182:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],37
	jnz LB_1183
	jmp LB_1184
LB_1183:
	mov r8,unt_1
	jmp LB_1179
LB_1184:
	add r14,1
	jmp LB_1180
LB_1179:
	add rsp,0
	jmp LB_1175
LB_1180:
	jmp LB_1186
LB_1185:
	add r14,1 
LB_1186:
	cmp r14,r9
	jge LB_1187
	JZ_LINE_SPC BYTE [r13+8+r14], LB_1185
LB_1187
	call GRM_80
	cmp BYTE [r8+6],0
	jnz LB_1190
	jmp LB_1191
LB_1190:
	jmp LB_1188
LB_1191:
	sub rsp,8
; .mov_ptn2 2'(= {| l |} ) ⊢ 8'(= {| l |} )
; .mov_ptn 2'(= {| l |} ) ⊢ 8'(= {| l |} )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_1189
LB_1188:
	add rsp,0
	POP_GRM_FAIL
	ret
LB_1189:
	mov QWORD [rsp+8*1],r14
	mov r13,QWORD [rsp+16+8*1]
	mov r14,QWORD [rsp+8*1]
	jmp LB_1192
LB_1192
; #96 8'(= {| l |} ) ⊢ 3(<4)◂8'(= {| l |} )
; #24 3(<4)◂8'(= {| l |} ) ⊢ 0(<2)◂3(<4)◂8'(= {| l |} )
; ∎ 0(<2)◂3(<4)◂8'(= {| l |} )
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂3(<4)◂8'(= {| l |} ) ⊢ 2'(= a3◂ [ a22◂ [ a17◂ [ ]{| l |}]] )
; .mov_ptn 0(<2)◂3(<4)◂8'(= {| l |} ) ⊢ 2'(= a3◂ [ a22◂ [ a17◂ [ ]{| l |}]] )
	mov rax,QWORD [rsp-8+8*1]
	mov BYTE [rax+6],3
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,8
	jmp LB_1193
LB_1193:
	cmp BYTE [r8+6],0
	jnz LB_1175
	POP_GRM_SCC
	ret
LB_1175:
	RB_GRM
	jmp LB_1196
LB_1195:
	add r14,1 
LB_1196:
	cmp r14,r9
	jge LB_1197
	JZ_LINE_SPC BYTE [r13+8+r14], LB_1195
LB_1197
	call GRM_80
	cmp BYTE [r8+6],0
	jnz LB_1200
	jmp LB_1201
LB_1200:
	jmp LB_1198
LB_1201:
	sub rsp,8
; .mov_ptn2 2'(= {| l |} ) ⊢ 8'(= {| l |} )
; .mov_ptn 2'(= {| l |} ) ⊢ 8'(= {| l |} )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_1199
LB_1198:
	add rsp,0
	jmp LB_1194
LB_1199:
	mov QWORD [rsp+8*1],r14
	mov r13,QWORD [rsp+16+8*1]
	mov r14,QWORD [rsp+8*1]
	jmp LB_1202
LB_1202
; #96 8'(= {| l |} ) ⊢ 3(<4)◂8'(= {| l |} )
; #24 3(<4)◂8'(= {| l |} ) ⊢ 0(<2)◂3(<4)◂8'(= {| l |} )
; ∎ 0(<2)◂3(<4)◂8'(= {| l |} )
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂3(<4)◂8'(= {| l |} ) ⊢ 2'(= a3◂ [ a22◂ [ a17◂ [ ]{| l |}]] )
; .mov_ptn 0(<2)◂3(<4)◂8'(= {| l |} ) ⊢ 2'(= a3◂ [ a22◂ [ a17◂ [ ]{| l |}]] )
	mov rax,QWORD [rsp-8+8*1]
	mov BYTE [rax+6],3
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,8
	jmp LB_1203
LB_1203:
	cmp BYTE [r8+6],0
	jnz LB_1194
	POP_GRM_SCC
	ret
LB_1194:
	RB_GRM
	jmp LB_1206
LB_1205:
	add r14,1 
LB_1206:
	cmp r14,r9
	jge LB_1207
	JZ_LINE_SPC BYTE [r13+8+r14], LB_1205
LB_1207
	lea rax,[r14+1]
	cmp rax,r9
	jg LB_1210
	jmp LB_1211
LB_1210:
	mov r8,unt_1
	jmp LB_1208
LB_1211:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],95
	jnz LB_1212
	jmp LB_1213
LB_1212:
	mov r8,unt_1
	jmp LB_1208
LB_1213:
	add r14,1
	jmp LB_1209
LB_1208:
	add rsp,0
	jmp LB_1204
LB_1209:
	mov QWORD [rsp+8*0],r14
	mov r13,QWORD [rsp+16+8*0]
	mov r14,QWORD [rsp+8*0]
	jmp LB_1214
LB_1214
; #25 { } ⊢ 1(<2)◂{ }
; #97 1(<2)◂{ } ⊢ 2(<4)◂1(<2)◂{ }
; #24 2(<4)◂1(<2)◂{ } ⊢ 0(<2)◂2(<4)◂1(<2)◂{ }
; ∎ 0(<2)◂2(<4)◂1(<2)◂{ }
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂2(<4)◂1(<2)◂{ } ⊢ 2'(= a3◂ [ a22◂ [ a17◂ [ ]{| l |}]] )
; .mov_ptn 0(<2)◂2(<4)◂1(<2)◂{ } ⊢ 2'(= a3◂ [ a22◂ [ a17◂ [ ]{| l |}]] )
	mov rax,unt 
	mov rax,unt_1
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],2
	mov QWORD [rax+8],rdi
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	jmp LB_1215
LB_1215:
	cmp BYTE [r8+6],0
	jnz LB_1204
	POP_GRM_SCC
	ret
LB_1204:
	POP_GRM_FAIL 
	ret
ETR_204:
	mov r9,0x0000_ffff_ffff_ffff
	and r9,[r13]
	call GRM_204
	ret
GRM_204:
	PUSH_GRM
	jmp LB_1218
LB_1217:
	add r14,1 
LB_1218:
	cmp r14,r9
	jge LB_1219
	JZ_LINE_SPC BYTE [r13+8+r14], LB_1217
LB_1219
	lea rax,[r14+1]
	cmp rax,r9
	jg LB_1222
	jmp LB_1223
LB_1222:
	mov r8,unt_1
	jmp LB_1220
LB_1223:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],123
	jnz LB_1224
	jmp LB_1225
LB_1224:
	mov r8,unt_1
	jmp LB_1220
LB_1225:
	add r14,1
	jmp LB_1221
LB_1220:
	add rsp,0
	jmp LB_1216
LB_1221:
	jmp LB_1227
LB_1226:
	add r14,1 
LB_1227:
	cmp r14,r9
	jge LB_1228
	JZ_LINE_SPC BYTE [r13+8+r14], LB_1226
LB_1228
	call GRM_205
	cmp BYTE [r8+6],0
	jnz LB_1231
	jmp LB_1232
LB_1231:
	jmp LB_1229
LB_1232:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a2◂ [ a16◂ [ a20◂ [ a17◂ [ ]{| l |}]]] ) ⊢ 8'(= a2◂ [ a16◂ [ a20◂ [ a17◂ [ ]{| l |}]]] )
; .mov_ptn 2'(= a2◂ [ a16◂ [ a20◂ [ a17◂ [ ]{| l |}]]] ) ⊢ 8'(= a2◂ [ a16◂ [ a20◂ [ a17◂ [ ]{| l |}]]] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_1230
LB_1229:
	add rsp,0
	jmp LB_1216
LB_1230:
	jmp LB_1234
LB_1233:
	add r14,1 
LB_1234:
	cmp r14,r9
	jge LB_1235
	JZ_LINE_SPC BYTE [r13+8+r14], LB_1233
LB_1235
	lea rax,[r14+1]
	cmp rax,r9
	jg LB_1238
	jmp LB_1239
LB_1238:
	mov r8,unt_1
	jmp LB_1236
LB_1239:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],125
	jnz LB_1240
	jmp LB_1241
LB_1240:
	mov r8,unt_1
	jmp LB_1236
LB_1241:
	add r14,1
	jmp LB_1237
LB_1236:
	add rsp,8
	jmp LB_1216
LB_1237:
	mov QWORD [rsp+8*1],r14
	mov r13,QWORD [rsp+16+8*1]
	mov r14,QWORD [rsp+8*1]
	jmp LB_1242
LB_1242
; #82 8'(= a2◂ [ a16◂ [ a20◂ [ a17◂ [ ]{| l |}]]] ) ⊢ 0(<2)◂8'(= a2◂ [ a16◂ [ a20◂ [ a17◂ [ ]{| l |}]]] )
; #24 0(<2)◂8'(= a2◂ [ a16◂ [ a20◂ [ a17◂ [ ]{| l |}]]] ) ⊢ 0(<2)◂0(<2)◂8'(= a2◂ [ a16◂ [ a20◂ [ a17◂ [ ]{| l |}]]] )
; ∎ 0(<2)◂0(<2)◂8'(= a2◂ [ a16◂ [ a20◂ [ a17◂ [ ]{| l |}]]] )
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂0(<2)◂8'(= a2◂ [ a16◂ [ a20◂ [ a17◂ [ ]{| l |}]]] ) ⊢ 2'(= a3◂ [ a16◂ [ a20◂ [ a17◂ [ ]{| l |}]]] )
; .mov_ptn 0(<2)◂0(<2)◂8'(= a2◂ [ a16◂ [ a20◂ [ a17◂ [ ]{| l |}]]] ) ⊢ 2'(= a3◂ [ a16◂ [ a20◂ [ a17◂ [ ]{| l |}]]] )
	mov rax,QWORD [rsp-8+8*1]
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,8
	jmp LB_1243
LB_1243:
	cmp BYTE [r8+6],0
	jnz LB_1216
	POP_GRM_SCC
	ret
LB_1216:
	RB_GRM
	jmp LB_1246
LB_1245:
	add r14,1 
LB_1246:
	cmp r14,r9
	jge LB_1247
	JZ_LINE_SPC BYTE [r13+8+r14], LB_1245
LB_1247
	call GRM_207
	cmp BYTE [r8+6],0
	jnz LB_1250
	jmp LB_1251
LB_1250:
	jmp LB_1248
LB_1251:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a20◂ [ a17◂ [ ]{| l |}] ) ⊢ 8'(= a20◂ [ a17◂ [ ]{| l |}] )
; .mov_ptn 2'(= a20◂ [ a17◂ [ ]{| l |}] ) ⊢ 8'(= a20◂ [ a17◂ [ ]{| l |}] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_1249
LB_1248:
	add rsp,0
	jmp LB_1244
LB_1249:
	mov QWORD [rsp+8*1],r14
	mov r13,QWORD [rsp+16+8*1]
	mov r14,QWORD [rsp+8*1]
	jmp LB_1252
LB_1252
; #81 8'(= a20◂ [ a17◂ [ ]{| l |}] ) ⊢ 1(<2)◂8'(= a20◂ [ a17◂ [ ]{| l |}] )
; #24 1(<2)◂8'(= a20◂ [ a17◂ [ ]{| l |}] ) ⊢ 0(<2)◂1(<2)◂8'(= a20◂ [ a17◂ [ ]{| l |}] )
; ∎ 0(<2)◂1(<2)◂8'(= a20◂ [ a17◂ [ ]{| l |}] )
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂1(<2)◂8'(= a20◂ [ a17◂ [ ]{| l |}] ) ⊢ 2'(= a3◂ [ a16◂ [ a20◂ [ a17◂ [ ]{| l |}]]] )
; .mov_ptn 0(<2)◂1(<2)◂8'(= a20◂ [ a17◂ [ ]{| l |}] ) ⊢ 2'(= a3◂ [ a16◂ [ a20◂ [ a17◂ [ ]{| l |}]]] )
	mov rax,QWORD [rsp-8+8*1]
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],1
	mov QWORD [rax+8],rdi
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,8
	jmp LB_1253
LB_1253:
	cmp BYTE [r8+6],0
	jnz LB_1244
	POP_GRM_SCC
	ret
LB_1244:
	POP_GRM_FAIL 
	ret
ETR_205:
	mov r9,0x0000_ffff_ffff_ffff
	and r9,[r13]
	call GRM_205
	ret
GRM_205:
	PUSH_GRM
	jmp LB_1256
LB_1255:
	add r14,1 
LB_1256:
	cmp r14,r9
	jge LB_1257
	JZ_LINE_SPC BYTE [r13+8+r14], LB_1255
LB_1257
	call GRM_204
	cmp BYTE [r8+6],0
	jnz LB_1260
	jmp LB_1261
LB_1260:
	jmp LB_1258
LB_1261:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a16◂ [ a20◂ [ a17◂ [ ]{| l |}]] ) ⊢ 8'(= a16◂ [ a20◂ [ a17◂ [ ]{| l |}]] )
; .mov_ptn 2'(= a16◂ [ a20◂ [ a17◂ [ ]{| l |}]] ) ⊢ 8'(= a16◂ [ a20◂ [ a17◂ [ ]{| l |}]] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_1259
LB_1258:
	add rsp,0
	jmp LB_1254
LB_1259:
	jmp LB_1263
LB_1262:
	add r14,1 
LB_1263:
	cmp r14,r9
	jge LB_1264
	JZ_LINE_SPC BYTE [r13+8+r14], LB_1262
LB_1264
	call GRM_205
	cmp BYTE [r8+6],0
	jnz LB_1267
	jmp LB_1268
LB_1267:
	jmp LB_1265
LB_1268:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a2◂ [ a16◂ [ a20◂ [ a17◂ [ ]{| l |}]]] ) ⊢ 9'(= a2◂ [ a16◂ [ a20◂ [ a17◂ [ ]{| l |}]]] )
; .mov_ptn 2'(= a2◂ [ a16◂ [ a20◂ [ a17◂ [ ]{| l |}]]] ) ⊢ 9'(= a2◂ [ a16◂ [ a20◂ [ a17◂ [ ]{| l |}]]] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_1266
LB_1265:
	add rsp,8
	jmp LB_1254
LB_1266:
	mov QWORD [rsp+8*2],r14
	mov r13,QWORD [rsp+16+8*2]
	mov r14,QWORD [rsp+8*2]
	jmp LB_1269
LB_1269
; #23 { 8'(= a16◂ [ a20◂ [ a17◂ [ ]{| l |}]] ) 9'(= a2◂ [ a16◂ [ a20◂ [ a17◂ [ ]{| l |}]]] ) } ⊢ 0(<2)◂{ 8'(= a16◂ [ a20◂ [ a17◂ [ ]{| l |}]] ) 9'(= a2◂ [ a16◂ [ a20◂ [ a17◂ [ ]{| l |}]]] ) }
; #24 0(<2)◂{ 8'(= a16◂ [ a20◂ [ a17◂ [ ]{| l |}]] ) 9'(= a2◂ [ a16◂ [ a20◂ [ a17◂ [ ]{| l |}]]] ) } ⊢ 0(<2)◂0(<2)◂{ 8'(= a16◂ [ a20◂ [ a17◂ [ ]{| l |}]] ) 9'(= a2◂ [ a16◂ [ a20◂ [ a17◂ [ ]{| l |}]]] ) }
; ∎ 0(<2)◂0(<2)◂{ 8'(= a16◂ [ a20◂ [ a17◂ [ ]{| l |}]] ) 9'(= a2◂ [ a16◂ [ a20◂ [ a17◂ [ ]{| l |}]]] ) }
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂0(<2)◂{ 8'(= a16◂ [ a20◂ [ a17◂ [ ]{| l |}]] ) 9'(= a2◂ [ a16◂ [ a20◂ [ a17◂ [ ]{| l |}]]] ) } ⊢ 2'(= a3◂ [ a2◂ [ a16◂ [ a20◂ [ a17◂ [ ]{| l |}]]]] )
; .mov_ptn 0(<2)◂0(<2)◂{ 8'(= a16◂ [ a20◂ [ a17◂ [ ]{| l |}]] ) 9'(= a2◂ [ a16◂ [ a20◂ [ a17◂ [ ]{| l |}]]] ) } ⊢ 2'(= a3◂ [ a2◂ [ a16◂ [ a20◂ [ a17◂ [ ]{| l |}]]]] )
	ALC_RCD 2, rax
	mov r13,rax
	mov rax,QWORD [rsp-8+8*2]
	mov QWORD [r13+8+8*0],rax
	mov rax,QWORD [rsp-8+8*1]
	mov QWORD [r13+8+8*1],rax
	mov rax,r13
	mov BYTE [rax+6],0
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,16
	jmp LB_1270
LB_1270:
	cmp BYTE [r8+6],0
	jnz LB_1254
	POP_GRM_SCC
	ret
LB_1254:
	RB_GRM
	mov QWORD [rsp+8*0],r14
	mov r13,QWORD [rsp+16+8*0]
	mov r14,QWORD [rsp+8*0]
	jmp LB_1272
LB_1272
; #22 { } ⊢ 1(<2)◂{ }
; #24 1(<2)◂{ } ⊢ 0(<2)◂1(<2)◂{ }
; ∎ 0(<2)◂1(<2)◂{ }
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂1(<2)◂{ } ⊢ 2'(= a3◂ [ a2◂ [ a16◂ [ a20◂ [ a17◂ [ ]{| l |}]]]] )
; .mov_ptn 0(<2)◂1(<2)◂{ } ⊢ 2'(= a3◂ [ a2◂ [ a16◂ [ a20◂ [ a17◂ [ ]{| l |}]]]] )
	mov rax,unt 
	mov rax,unt_1
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	jmp LB_1273
LB_1273:
	cmp BYTE [r8+6],0
	jnz LB_1271
	POP_GRM_SCC
	ret
LB_1271:
	POP_GRM_FAIL 
	ret
ETR_206:
	mov r9,0x0000_ffff_ffff_ffff
	and r9,[r13]
	call GRM_206
	ret
GRM_206:
	PUSH_GRM
	jmp LB_1276
LB_1275:
	add r14,1 
LB_1276:
	cmp r14,r9
	jge LB_1277
	JZ_LINE_SPC BYTE [r13+8+r14], LB_1275
LB_1277
	lea rax,[r14+1]
	cmp rax,r9
	jg LB_1280
	jmp LB_1281
LB_1280:
	mov r8,unt_1
	jmp LB_1278
LB_1281:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],44
	jnz LB_1282
	jmp LB_1283
LB_1282:
	mov r8,unt_1
	jmp LB_1278
LB_1283:
	add r14,1
	jmp LB_1279
LB_1278:
	add rsp,0
	jmp LB_1274
LB_1279:
	jmp LB_1285
LB_1284:
	add r14,1 
LB_1285:
	cmp r14,r9
	jge LB_1286
	JZ_LINE_SPC BYTE [r13+8+r14], LB_1284
LB_1286
	call GRM_207
	cmp BYTE [r8+6],0
	jnz LB_1289
	jmp LB_1290
LB_1289:
	jmp LB_1287
LB_1290:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a20◂ [ a17◂ [ ]{| l |}] ) ⊢ 8'(= a20◂ [ a17◂ [ ]{| l |}] )
; .mov_ptn 2'(= a20◂ [ a17◂ [ ]{| l |}] ) ⊢ 8'(= a20◂ [ a17◂ [ ]{| l |}] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_1288
LB_1287:
	add rsp,0
	POP_GRM_FAIL
	ret
LB_1288:
	jmp LB_1292
LB_1291:
	add r14,1 
LB_1292:
	cmp r14,r9
	jge LB_1293
	JZ_LINE_SPC BYTE [r13+8+r14], LB_1291
LB_1293
	call GRM_206
	cmp BYTE [r8+6],0
	jnz LB_1296
	jmp LB_1297
LB_1296:
	jmp LB_1294
LB_1297:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a2◂ [ a20◂ [ a17◂ [ ]{| l |}]] ) ⊢ 9'(= a2◂ [ a20◂ [ a17◂ [ ]{| l |}]] )
; .mov_ptn 2'(= a2◂ [ a20◂ [ a17◂ [ ]{| l |}]] ) ⊢ 9'(= a2◂ [ a20◂ [ a17◂ [ ]{| l |}]] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_1295
LB_1294:
	add rsp,8
	POP_GRM_FAIL
	ret
LB_1295:
	mov QWORD [rsp+8*2],r14
	mov r13,QWORD [rsp+16+8*2]
	mov r14,QWORD [rsp+8*2]
	jmp LB_1298
LB_1298
; #23 { 8'(= a20◂ [ a17◂ [ ]{| l |}] ) 9'(= a2◂ [ a20◂ [ a17◂ [ ]{| l |}]] ) } ⊢ 0(<2)◂{ 8'(= a20◂ [ a17◂ [ ]{| l |}] ) 9'(= a2◂ [ a20◂ [ a17◂ [ ]{| l |}]] ) }
; #24 0(<2)◂{ 8'(= a20◂ [ a17◂ [ ]{| l |}] ) 9'(= a2◂ [ a20◂ [ a17◂ [ ]{| l |}]] ) } ⊢ 0(<2)◂0(<2)◂{ 8'(= a20◂ [ a17◂ [ ]{| l |}] ) 9'(= a2◂ [ a20◂ [ a17◂ [ ]{| l |}]] ) }
; ∎ 0(<2)◂0(<2)◂{ 8'(= a20◂ [ a17◂ [ ]{| l |}] ) 9'(= a2◂ [ a20◂ [ a17◂ [ ]{| l |}]] ) }
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂0(<2)◂{ 8'(= a20◂ [ a17◂ [ ]{| l |}] ) 9'(= a2◂ [ a20◂ [ a17◂ [ ]{| l |}]] ) } ⊢ 2'(= a3◂ [ a2◂ [ a20◂ [ a17◂ [ ]{| l |}]]] )
; .mov_ptn 0(<2)◂0(<2)◂{ 8'(= a20◂ [ a17◂ [ ]{| l |}] ) 9'(= a2◂ [ a20◂ [ a17◂ [ ]{| l |}]] ) } ⊢ 2'(= a3◂ [ a2◂ [ a20◂ [ a17◂ [ ]{| l |}]]] )
	ALC_RCD 2, rax
	mov r13,rax
	mov rax,QWORD [rsp-8+8*2]
	mov QWORD [r13+8+8*0],rax
	mov rax,QWORD [rsp-8+8*1]
	mov QWORD [r13+8+8*1],rax
	mov rax,r13
	mov BYTE [rax+6],0
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,16
	jmp LB_1299
LB_1299:
	cmp BYTE [r8+6],0
	jnz LB_1274
	POP_GRM_SCC
	ret
LB_1274:
	RB_GRM
	mov QWORD [rsp+8*0],r14
	mov r13,QWORD [rsp+16+8*0]
	mov r14,QWORD [rsp+8*0]
	jmp LB_1301
LB_1301
; #22 { } ⊢ 1(<2)◂{ }
; #24 1(<2)◂{ } ⊢ 0(<2)◂1(<2)◂{ }
; ∎ 0(<2)◂1(<2)◂{ }
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂1(<2)◂{ } ⊢ 2'(= a3◂ [ a2◂ [ a20◂ [ a17◂ [ ]{| l |}]]] )
; .mov_ptn 0(<2)◂1(<2)◂{ } ⊢ 2'(= a3◂ [ a2◂ [ a20◂ [ a17◂ [ ]{| l |}]]] )
	mov rax,unt 
	mov rax,unt_1
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	jmp LB_1302
LB_1302:
	cmp BYTE [r8+6],0
	jnz LB_1300
	POP_GRM_SCC
	ret
LB_1300:
	POP_GRM_FAIL 
	ret
ETR_207:
	mov r9,0x0000_ffff_ffff_ffff
	and r9,[r13]
	call GRM_207
	ret
GRM_207:
	PUSH_GRM
	jmp LB_1305
LB_1304:
	add r14,1 
LB_1305:
	cmp r14,r9
	jge LB_1306
	JZ_LINE_SPC BYTE [r13+8+r14], LB_1304
LB_1306
	lea rax,[r14+2]
	cmp rax,r9
	jg LB_1309
	jmp LB_1310
LB_1309:
	mov r8,unt_1
	jmp LB_1307
LB_1310:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],37
	jnz LB_1311
	cmp BYTE [rdi+1],91
	jnz LB_1311
	jmp LB_1312
LB_1311:
	mov r8,unt_1
	jmp LB_1307
LB_1312:
	add r14,2
	jmp LB_1308
LB_1307:
	add rsp,0
	jmp LB_1303
LB_1308:
	jmp LB_1314
LB_1313:
	add r14,1 
LB_1314:
	cmp r14,r9
	jge LB_1315
	JZ_LINE_SPC BYTE [r13+8+r14], LB_1313
LB_1315
	call GRM_193
	cmp BYTE [r8+6],0
	jnz LB_1318
	jmp LB_1319
LB_1318:
	jmp LB_1316
LB_1319:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a19◂ [ a17◂ [ ]] ) ⊢ 8'(= a19◂ [ a17◂ [ ]] )
; .mov_ptn 2'(= a19◂ [ a17◂ [ ]] ) ⊢ 8'(= a19◂ [ a17◂ [ ]] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_1317
LB_1316:
	add rsp,0
	jmp LB_1303
LB_1317:
	jmp LB_1321
LB_1320:
	add r14,1 
LB_1321:
	cmp r14,r9
	jge LB_1322
	JZ_LINE_SPC BYTE [r13+8+r14], LB_1320
LB_1322
	lea rax,[r14+1]
	cmp rax,r9
	jg LB_1325
	jmp LB_1326
LB_1325:
	mov r8,unt_1
	jmp LB_1323
LB_1326:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],93
	jnz LB_1327
	jmp LB_1328
LB_1327:
	mov r8,unt_1
	jmp LB_1323
LB_1328:
	add r14,1
	jmp LB_1324
LB_1323:
	add rsp,8
	jmp LB_1303
LB_1324:
	mov QWORD [rsp+8*1],r14
	mov r13,QWORD [rsp+16+8*1]
	mov r14,QWORD [rsp+8*1]
	jmp LB_1329
LB_1329
; #95 8'(= a19◂ [ a17◂ [ ]] ) ⊢ 0(<2)◂8'(= a19◂ [ a17◂ [ ]] )
; #24 0(<2)◂8'(= a19◂ [ a17◂ [ ]] ) ⊢ 0(<2)◂0(<2)◂8'(= a19◂ [ a17◂ [ ]] )
; ∎ 0(<2)◂0(<2)◂8'(= a19◂ [ a17◂ [ ]] )
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂0(<2)◂8'(= a19◂ [ a17◂ [ ]] ) ⊢ 2'(= a3◂ [ a20◂ [ a17◂ [ ]{| l |}]] )
; .mov_ptn 0(<2)◂0(<2)◂8'(= a19◂ [ a17◂ [ ]] ) ⊢ 2'(= a3◂ [ a20◂ [ a17◂ [ ]{| l |}]] )
	mov rax,QWORD [rsp-8+8*1]
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,8
	jmp LB_1330
LB_1330:
	cmp BYTE [r8+6],0
	jnz LB_1303
	POP_GRM_SCC
	ret
LB_1303:
	RB_GRM
	lea rax,[r14+1]
	cmp rax,r9
	jg LB_1334
	jmp LB_1335
LB_1334:
	mov r8,unt_1
	jmp LB_1332
LB_1335:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],37
	jnz LB_1336
	jmp LB_1337
LB_1336:
	mov r8,unt_1
	jmp LB_1332
LB_1337:
	add r14,1
	jmp LB_1333
LB_1332:
	add rsp,0
	jmp LB_1331
LB_1333:
	call GRM_80
	cmp BYTE [r8+6],0
	jnz LB_1340
	jmp LB_1341
LB_1340:
	jmp LB_1338
LB_1341:
	sub rsp,8
; .mov_ptn2 2'(= {| l |} ) ⊢ 8'(= {| l |} )
; .mov_ptn 2'(= {| l |} ) ⊢ 8'(= {| l |} )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_1339
LB_1338:
	add rsp,0
	POP_GRM_FAIL
	ret
LB_1339:
	mov QWORD [rsp+8*1],r14
	mov r13,QWORD [rsp+16+8*1]
	mov r14,QWORD [rsp+8*1]
	jmp LB_1342
LB_1342
; #94 8'(= {| l |} ) ⊢ 1(<2)◂8'(= {| l |} )
; #24 1(<2)◂8'(= {| l |} ) ⊢ 0(<2)◂1(<2)◂8'(= {| l |} )
; ∎ 0(<2)◂1(<2)◂8'(= {| l |} )
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂1(<2)◂8'(= {| l |} ) ⊢ 2'(= a3◂ [ a20◂ [ a17◂ [ ]{| l |}]] )
; .mov_ptn 0(<2)◂1(<2)◂8'(= {| l |} ) ⊢ 2'(= a3◂ [ a20◂ [ a17◂ [ ]{| l |}]] )
	mov rax,QWORD [rsp-8+8*1]
	mov BYTE [rax+6],1
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,8
	jmp LB_1343
LB_1343:
	cmp BYTE [r8+6],0
	jnz LB_1331
	POP_GRM_SCC
	ret
LB_1331:
	RB_GRM
	jmp LB_1346
LB_1345:
	add r14,1 
LB_1346:
	cmp r14,r9
	jge LB_1347
	JZ_LINE_SPC BYTE [r13+8+r14], LB_1345
LB_1347
	call GRM_80
	cmp BYTE [r8+6],0
	jnz LB_1350
	jmp LB_1351
LB_1350:
	jmp LB_1348
LB_1351:
	sub rsp,8
; .mov_ptn2 2'(= {| l |} ) ⊢ 8'(= {| l |} )
; .mov_ptn 2'(= {| l |} ) ⊢ 8'(= {| l |} )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_1349
LB_1348:
	add rsp,0
	jmp LB_1344
LB_1349:
	mov QWORD [rsp+8*1],r14
	mov r13,QWORD [rsp+16+8*1]
	mov r14,QWORD [rsp+8*1]
	jmp LB_1352
LB_1352
; #94 8'(= {| l |} ) ⊢ 1(<2)◂8'(= {| l |} )
; #24 1(<2)◂8'(= {| l |} ) ⊢ 0(<2)◂1(<2)◂8'(= {| l |} )
; ∎ 0(<2)◂1(<2)◂8'(= {| l |} )
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂1(<2)◂8'(= {| l |} ) ⊢ 2'(= a3◂ [ a20◂ [ a17◂ [ ]{| l |}]] )
; .mov_ptn 0(<2)◂1(<2)◂8'(= {| l |} ) ⊢ 2'(= a3◂ [ a20◂ [ a17◂ [ ]{| l |}]] )
	mov rax,QWORD [rsp-8+8*1]
	mov BYTE [rax+6],1
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,8
	jmp LB_1353
LB_1353:
	cmp BYTE [r8+6],0
	jnz LB_1344
	POP_GRM_SCC
	ret
LB_1344:
	POP_GRM_FAIL 
	ret
ETR_208:
	mov r9,0x0000_ffff_ffff_ffff
	and r9,[r13]
	call GRM_208
	ret
GRM_208:
	PUSH_GRM
	jmp LB_1356
LB_1355:
	add r14,1 
LB_1356:
	cmp r14,r9
	jge LB_1357
	JZ_LINE_SPC BYTE [r13+8+r14], LB_1355
LB_1357
	lea rax,[r14+1]
	cmp rax,r9
	jg LB_1360
	jmp LB_1361
LB_1360:
	mov r8,unt_1
	jmp LB_1358
LB_1361:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],123
	jnz LB_1362
	jmp LB_1363
LB_1362:
	mov r8,unt_1
	jmp LB_1358
LB_1363:
	add r14,1
	jmp LB_1359
LB_1358:
	add rsp,0
	jmp LB_1354
LB_1359:
	jmp LB_1365
LB_1364:
	add r14,1 
LB_1365:
	cmp r14,r9
	jge LB_1366
	JZ_LINE_SPC BYTE [r13+8+r14], LB_1364
LB_1366
	call GRM_209
	cmp BYTE [r8+6],0
	jnz LB_1369
	jmp LB_1370
LB_1369:
	jmp LB_1367
LB_1370:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a2◂ [ a16◂ [ a21◂ [ {| l |}]]] ) ⊢ 8'(= a2◂ [ a16◂ [ a21◂ [ {| l |}]]] )
; .mov_ptn 2'(= a2◂ [ a16◂ [ a21◂ [ {| l |}]]] ) ⊢ 8'(= a2◂ [ a16◂ [ a21◂ [ {| l |}]]] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_1368
LB_1367:
	add rsp,0
	jmp LB_1354
LB_1368:
	jmp LB_1372
LB_1371:
	add r14,1 
LB_1372:
	cmp r14,r9
	jge LB_1373
	JZ_LINE_SPC BYTE [r13+8+r14], LB_1371
LB_1373
	lea rax,[r14+1]
	cmp rax,r9
	jg LB_1376
	jmp LB_1377
LB_1376:
	mov r8,unt_1
	jmp LB_1374
LB_1377:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],125
	jnz LB_1378
	jmp LB_1379
LB_1378:
	mov r8,unt_1
	jmp LB_1374
LB_1379:
	add r14,1
	jmp LB_1375
LB_1374:
	add rsp,8
	jmp LB_1354
LB_1375:
	mov QWORD [rsp+8*1],r14
	mov r13,QWORD [rsp+16+8*1]
	mov r14,QWORD [rsp+8*1]
	jmp LB_1380
LB_1380
; #82 8'(= a2◂ [ a16◂ [ a21◂ [ {| l |}]]] ) ⊢ 0(<2)◂8'(= a2◂ [ a16◂ [ a21◂ [ {| l |}]]] )
; #24 0(<2)◂8'(= a2◂ [ a16◂ [ a21◂ [ {| l |}]]] ) ⊢ 0(<2)◂0(<2)◂8'(= a2◂ [ a16◂ [ a21◂ [ {| l |}]]] )
; ∎ 0(<2)◂0(<2)◂8'(= a2◂ [ a16◂ [ a21◂ [ {| l |}]]] )
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂0(<2)◂8'(= a2◂ [ a16◂ [ a21◂ [ {| l |}]]] ) ⊢ 2'(= a3◂ [ a16◂ [ a21◂ [ {| l |}]]] )
; .mov_ptn 0(<2)◂0(<2)◂8'(= a2◂ [ a16◂ [ a21◂ [ {| l |}]]] ) ⊢ 2'(= a3◂ [ a16◂ [ a21◂ [ {| l |}]]] )
	mov rax,QWORD [rsp-8+8*1]
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,8
	jmp LB_1381
LB_1381:
	cmp BYTE [r8+6],0
	jnz LB_1354
	POP_GRM_SCC
	ret
LB_1354:
	RB_GRM
	jmp LB_1384
LB_1383:
	add r14,1 
LB_1384:
	cmp r14,r9
	jge LB_1385
	JZ_LINE_SPC BYTE [r13+8+r14], LB_1383
LB_1385
	call GRM_212
	cmp BYTE [r8+6],0
	jnz LB_1388
	jmp LB_1389
LB_1388:
	jmp LB_1386
LB_1389:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a21◂ [ {| l |}] ) ⊢ 8'(= a21◂ [ {| l |}] )
; .mov_ptn 2'(= a21◂ [ {| l |}] ) ⊢ 8'(= a21◂ [ {| l |}] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_1387
LB_1386:
	add rsp,0
	jmp LB_1382
LB_1387:
	mov QWORD [rsp+8*1],r14
	mov r13,QWORD [rsp+16+8*1]
	mov r14,QWORD [rsp+8*1]
	jmp LB_1390
LB_1390
; #81 8'(= a21◂ [ {| l |}] ) ⊢ 1(<2)◂8'(= a21◂ [ {| l |}] )
; #24 1(<2)◂8'(= a21◂ [ {| l |}] ) ⊢ 0(<2)◂1(<2)◂8'(= a21◂ [ {| l |}] )
; ∎ 0(<2)◂1(<2)◂8'(= a21◂ [ {| l |}] )
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂1(<2)◂8'(= a21◂ [ {| l |}] ) ⊢ 2'(= a3◂ [ a16◂ [ a21◂ [ {| l |}]]] )
; .mov_ptn 0(<2)◂1(<2)◂8'(= a21◂ [ {| l |}] ) ⊢ 2'(= a3◂ [ a16◂ [ a21◂ [ {| l |}]]] )
	mov rax,QWORD [rsp-8+8*1]
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],1
	mov QWORD [rax+8],rdi
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,8
	jmp LB_1391
LB_1391:
	cmp BYTE [r8+6],0
	jnz LB_1382
	POP_GRM_SCC
	ret
LB_1382:
	POP_GRM_FAIL 
	ret
ETR_209:
	mov r9,0x0000_ffff_ffff_ffff
	and r9,[r13]
	call GRM_209
	ret
GRM_209:
	PUSH_GRM
	jmp LB_1394
LB_1393:
	add r14,1 
LB_1394:
	cmp r14,r9
	jge LB_1395
	JZ_LINE_SPC BYTE [r13+8+r14], LB_1393
LB_1395
	call GRM_208
	cmp BYTE [r8+6],0
	jnz LB_1398
	jmp LB_1399
LB_1398:
	jmp LB_1396
LB_1399:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a16◂ [ a21◂ [ {| l |}]] ) ⊢ 8'(= a16◂ [ a21◂ [ {| l |}]] )
; .mov_ptn 2'(= a16◂ [ a21◂ [ {| l |}]] ) ⊢ 8'(= a16◂ [ a21◂ [ {| l |}]] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_1397
LB_1396:
	add rsp,0
	jmp LB_1392
LB_1397:
	jmp LB_1401
LB_1400:
	add r14,1 
LB_1401:
	cmp r14,r9
	jge LB_1402
	JZ_LINE_SPC BYTE [r13+8+r14], LB_1400
LB_1402
	call GRM_209
	cmp BYTE [r8+6],0
	jnz LB_1405
	jmp LB_1406
LB_1405:
	jmp LB_1403
LB_1406:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a2◂ [ a16◂ [ a21◂ [ {| l |}]]] ) ⊢ 9'(= a2◂ [ a16◂ [ a21◂ [ {| l |}]]] )
; .mov_ptn 2'(= a2◂ [ a16◂ [ a21◂ [ {| l |}]]] ) ⊢ 9'(= a2◂ [ a16◂ [ a21◂ [ {| l |}]]] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_1404
LB_1403:
	add rsp,8
	jmp LB_1392
LB_1404:
	mov QWORD [rsp+8*2],r14
	mov r13,QWORD [rsp+16+8*2]
	mov r14,QWORD [rsp+8*2]
	jmp LB_1407
LB_1407
; #23 { 8'(= a16◂ [ a21◂ [ {| l |}]] ) 9'(= a2◂ [ a16◂ [ a21◂ [ {| l |}]]] ) } ⊢ 0(<2)◂{ 8'(= a16◂ [ a21◂ [ {| l |}]] ) 9'(= a2◂ [ a16◂ [ a21◂ [ {| l |}]]] ) }
; #24 0(<2)◂{ 8'(= a16◂ [ a21◂ [ {| l |}]] ) 9'(= a2◂ [ a16◂ [ a21◂ [ {| l |}]]] ) } ⊢ 0(<2)◂0(<2)◂{ 8'(= a16◂ [ a21◂ [ {| l |}]] ) 9'(= a2◂ [ a16◂ [ a21◂ [ {| l |}]]] ) }
; ∎ 0(<2)◂0(<2)◂{ 8'(= a16◂ [ a21◂ [ {| l |}]] ) 9'(= a2◂ [ a16◂ [ a21◂ [ {| l |}]]] ) }
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂0(<2)◂{ 8'(= a16◂ [ a21◂ [ {| l |}]] ) 9'(= a2◂ [ a16◂ [ a21◂ [ {| l |}]]] ) } ⊢ 2'(= a3◂ [ a2◂ [ a16◂ [ a21◂ [ {| l |}]]]] )
; .mov_ptn 0(<2)◂0(<2)◂{ 8'(= a16◂ [ a21◂ [ {| l |}]] ) 9'(= a2◂ [ a16◂ [ a21◂ [ {| l |}]]] ) } ⊢ 2'(= a3◂ [ a2◂ [ a16◂ [ a21◂ [ {| l |}]]]] )
	ALC_RCD 2, rax
	mov r13,rax
	mov rax,QWORD [rsp-8+8*2]
	mov QWORD [r13+8+8*0],rax
	mov rax,QWORD [rsp-8+8*1]
	mov QWORD [r13+8+8*1],rax
	mov rax,r13
	mov BYTE [rax+6],0
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,16
	jmp LB_1408
LB_1408:
	cmp BYTE [r8+6],0
	jnz LB_1392
	POP_GRM_SCC
	ret
LB_1392:
	RB_GRM
	mov QWORD [rsp+8*0],r14
	mov r13,QWORD [rsp+16+8*0]
	mov r14,QWORD [rsp+8*0]
	jmp LB_1410
LB_1410
; #22 { } ⊢ 1(<2)◂{ }
; #24 1(<2)◂{ } ⊢ 0(<2)◂1(<2)◂{ }
; ∎ 0(<2)◂1(<2)◂{ }
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂1(<2)◂{ } ⊢ 2'(= a3◂ [ a2◂ [ a16◂ [ a21◂ [ {| l |}]]]] )
; .mov_ptn 0(<2)◂1(<2)◂{ } ⊢ 2'(= a3◂ [ a2◂ [ a16◂ [ a21◂ [ {| l |}]]]] )
	mov rax,unt 
	mov rax,unt_1
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	jmp LB_1411
LB_1411:
	cmp BYTE [r8+6],0
	jnz LB_1409
	POP_GRM_SCC
	ret
LB_1409:
	POP_GRM_FAIL 
	ret
ETR_210:
	mov r9,0x0000_ffff_ffff_ffff
	and r9,[r13]
	call GRM_210
	ret
GRM_210:
	PUSH_GRM
	jmp LB_1414
LB_1413:
	add r14,1 
LB_1414:
	cmp r14,r9
	jge LB_1415
	JZ_LINE_SPC BYTE [r13+8+r14], LB_1413
LB_1415
	lea rax,[r14+1]
	cmp rax,r9
	jg LB_1418
	jmp LB_1419
LB_1418:
	mov r8,unt_1
	jmp LB_1416
LB_1419:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],44
	jnz LB_1420
	jmp LB_1421
LB_1420:
	mov r8,unt_1
	jmp LB_1416
LB_1421:
	add r14,1
	jmp LB_1417
LB_1416:
	add rsp,0
	jmp LB_1412
LB_1417:
	jmp LB_1423
LB_1422:
	add r14,1 
LB_1423:
	cmp r14,r9
	jge LB_1424
	JZ_LINE_SPC BYTE [r13+8+r14], LB_1422
LB_1424
	call GRM_208
	cmp BYTE [r8+6],0
	jnz LB_1427
	jmp LB_1428
LB_1427:
	jmp LB_1425
LB_1428:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a16◂ [ a21◂ [ {| l |}]] ) ⊢ 8'(= a16◂ [ a21◂ [ {| l |}]] )
; .mov_ptn 2'(= a16◂ [ a21◂ [ {| l |}]] ) ⊢ 8'(= a16◂ [ a21◂ [ {| l |}]] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_1426
LB_1425:
	add rsp,0
	POP_GRM_FAIL
	ret
LB_1426:
	jmp LB_1430
LB_1429:
	add r14,1 
LB_1430:
	cmp r14,r9
	jge LB_1431
	JZ_LINE_SPC BYTE [r13+8+r14], LB_1429
LB_1431
	call GRM_210
	cmp BYTE [r8+6],0
	jnz LB_1434
	jmp LB_1435
LB_1434:
	jmp LB_1432
LB_1435:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a2◂ [ a16◂ [ a21◂ [ {| l |}]]] ) ⊢ 9'(= a2◂ [ a16◂ [ a21◂ [ {| l |}]]] )
; .mov_ptn 2'(= a2◂ [ a16◂ [ a21◂ [ {| l |}]]] ) ⊢ 9'(= a2◂ [ a16◂ [ a21◂ [ {| l |}]]] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_1433
LB_1432:
	add rsp,8
	POP_GRM_FAIL
	ret
LB_1433:
	mov QWORD [rsp+8*2],r14
	mov r13,QWORD [rsp+16+8*2]
	mov r14,QWORD [rsp+8*2]
	jmp LB_1436
LB_1436
; #23 { 8'(= a16◂ [ a21◂ [ {| l |}]] ) 9'(= a2◂ [ a16◂ [ a21◂ [ {| l |}]]] ) } ⊢ 0(<2)◂{ 8'(= a16◂ [ a21◂ [ {| l |}]] ) 9'(= a2◂ [ a16◂ [ a21◂ [ {| l |}]]] ) }
; #24 0(<2)◂{ 8'(= a16◂ [ a21◂ [ {| l |}]] ) 9'(= a2◂ [ a16◂ [ a21◂ [ {| l |}]]] ) } ⊢ 0(<2)◂0(<2)◂{ 8'(= a16◂ [ a21◂ [ {| l |}]] ) 9'(= a2◂ [ a16◂ [ a21◂ [ {| l |}]]] ) }
; ∎ 0(<2)◂0(<2)◂{ 8'(= a16◂ [ a21◂ [ {| l |}]] ) 9'(= a2◂ [ a16◂ [ a21◂ [ {| l |}]]] ) }
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂0(<2)◂{ 8'(= a16◂ [ a21◂ [ {| l |}]] ) 9'(= a2◂ [ a16◂ [ a21◂ [ {| l |}]]] ) } ⊢ 2'(= a3◂ [ a2◂ [ a16◂ [ a21◂ [ {| l |}]]]] )
; .mov_ptn 0(<2)◂0(<2)◂{ 8'(= a16◂ [ a21◂ [ {| l |}]] ) 9'(= a2◂ [ a16◂ [ a21◂ [ {| l |}]]] ) } ⊢ 2'(= a3◂ [ a2◂ [ a16◂ [ a21◂ [ {| l |}]]]] )
	ALC_RCD 2, rax
	mov r13,rax
	mov rax,QWORD [rsp-8+8*2]
	mov QWORD [r13+8+8*0],rax
	mov rax,QWORD [rsp-8+8*1]
	mov QWORD [r13+8+8*1],rax
	mov rax,r13
	mov BYTE [rax+6],0
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,16
	jmp LB_1437
LB_1437:
	cmp BYTE [r8+6],0
	jnz LB_1412
	POP_GRM_SCC
	ret
LB_1412:
	RB_GRM
	mov QWORD [rsp+8*0],r14
	mov r13,QWORD [rsp+16+8*0]
	mov r14,QWORD [rsp+8*0]
	jmp LB_1439
LB_1439
; #22 { } ⊢ 1(<2)◂{ }
; #24 1(<2)◂{ } ⊢ 0(<2)◂1(<2)◂{ }
; ∎ 0(<2)◂1(<2)◂{ }
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂1(<2)◂{ } ⊢ 2'(= a3◂ [ a2◂ [ a16◂ [ a21◂ [ {| l |}]]]] )
; .mov_ptn 0(<2)◂1(<2)◂{ } ⊢ 2'(= a3◂ [ a2◂ [ a16◂ [ a21◂ [ {| l |}]]]] )
	mov rax,unt 
	mov rax,unt_1
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	jmp LB_1440
LB_1440:
	cmp BYTE [r8+6],0
	jnz LB_1438
	POP_GRM_SCC
	ret
LB_1438:
	POP_GRM_FAIL 
	ret
ETR_211:
	mov r9,0x0000_ffff_ffff_ffff
	and r9,[r13]
	call GRM_211
	ret
GRM_211:
	PUSH_GRM
	jmp LB_1443
LB_1442:
	add r14,1 
LB_1443:
	cmp r14,r9
	jge LB_1444
	JZ_LINE_SPC BYTE [r13+8+r14], LB_1442
LB_1444
	lea rax,[r14+1]
	cmp rax,r9
	jg LB_1447
	jmp LB_1448
LB_1447:
	mov r8,unt_1
	jmp LB_1445
LB_1448:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],44
	jnz LB_1449
	jmp LB_1450
LB_1449:
	mov r8,unt_1
	jmp LB_1445
LB_1450:
	add r14,1
	jmp LB_1446
LB_1445:
	add rsp,0
	jmp LB_1441
LB_1446:
	jmp LB_1452
LB_1451:
	add r14,1 
LB_1452:
	cmp r14,r9
	jge LB_1453
	JZ_LINE_SPC BYTE [r13+8+r14], LB_1451
LB_1453
	call GRM_212
	cmp BYTE [r8+6],0
	jnz LB_1456
	jmp LB_1457
LB_1456:
	jmp LB_1454
LB_1457:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a21◂ [ {| l |}] ) ⊢ 8'(= a21◂ [ {| l |}] )
; .mov_ptn 2'(= a21◂ [ {| l |}] ) ⊢ 8'(= a21◂ [ {| l |}] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_1455
LB_1454:
	add rsp,0
	POP_GRM_FAIL
	ret
LB_1455:
	jmp LB_1459
LB_1458:
	add r14,1 
LB_1459:
	cmp r14,r9
	jge LB_1460
	JZ_LINE_SPC BYTE [r13+8+r14], LB_1458
LB_1460
	call GRM_211
	cmp BYTE [r8+6],0
	jnz LB_1463
	jmp LB_1464
LB_1463:
	jmp LB_1461
LB_1464:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a2◂ [ a21◂ [ {| l |}]] ) ⊢ 9'(= a2◂ [ a21◂ [ {| l |}]] )
; .mov_ptn 2'(= a2◂ [ a21◂ [ {| l |}]] ) ⊢ 9'(= a2◂ [ a21◂ [ {| l |}]] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_1462
LB_1461:
	add rsp,8
	POP_GRM_FAIL
	ret
LB_1462:
	mov QWORD [rsp+8*2],r14
	mov r13,QWORD [rsp+16+8*2]
	mov r14,QWORD [rsp+8*2]
	jmp LB_1465
LB_1465
; #23 { 8'(= a21◂ [ {| l |}] ) 9'(= a2◂ [ a21◂ [ {| l |}]] ) } ⊢ 0(<2)◂{ 8'(= a21◂ [ {| l |}] ) 9'(= a2◂ [ a21◂ [ {| l |}]] ) }
; #24 0(<2)◂{ 8'(= a21◂ [ {| l |}] ) 9'(= a2◂ [ a21◂ [ {| l |}]] ) } ⊢ 0(<2)◂0(<2)◂{ 8'(= a21◂ [ {| l |}] ) 9'(= a2◂ [ a21◂ [ {| l |}]] ) }
; ∎ 0(<2)◂0(<2)◂{ 8'(= a21◂ [ {| l |}] ) 9'(= a2◂ [ a21◂ [ {| l |}]] ) }
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂0(<2)◂{ 8'(= a21◂ [ {| l |}] ) 9'(= a2◂ [ a21◂ [ {| l |}]] ) } ⊢ 2'(= a3◂ [ a2◂ [ a21◂ [ {| l |}]]] )
; .mov_ptn 0(<2)◂0(<2)◂{ 8'(= a21◂ [ {| l |}] ) 9'(= a2◂ [ a21◂ [ {| l |}]] ) } ⊢ 2'(= a3◂ [ a2◂ [ a21◂ [ {| l |}]]] )
	ALC_RCD 2, rax
	mov r13,rax
	mov rax,QWORD [rsp-8+8*2]
	mov QWORD [r13+8+8*0],rax
	mov rax,QWORD [rsp-8+8*1]
	mov QWORD [r13+8+8*1],rax
	mov rax,r13
	mov BYTE [rax+6],0
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,16
	jmp LB_1466
LB_1466:
	cmp BYTE [r8+6],0
	jnz LB_1441
	POP_GRM_SCC
	ret
LB_1441:
	RB_GRM
	mov QWORD [rsp+8*0],r14
	mov r13,QWORD [rsp+16+8*0]
	mov r14,QWORD [rsp+8*0]
	jmp LB_1468
LB_1468
; #22 { } ⊢ 1(<2)◂{ }
; #24 1(<2)◂{ } ⊢ 0(<2)◂1(<2)◂{ }
; ∎ 0(<2)◂1(<2)◂{ }
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂1(<2)◂{ } ⊢ 2'(= a3◂ [ a2◂ [ a21◂ [ {| l |}]]] )
; .mov_ptn 0(<2)◂1(<2)◂{ } ⊢ 2'(= a3◂ [ a2◂ [ a21◂ [ {| l |}]]] )
	mov rax,unt 
	mov rax,unt_1
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	jmp LB_1469
LB_1469:
	cmp BYTE [r8+6],0
	jnz LB_1467
	POP_GRM_SCC
	ret
LB_1467:
	POP_GRM_FAIL 
	ret
ETR_212:
	mov r9,0x0000_ffff_ffff_ffff
	and r9,[r13]
	call GRM_212
	ret
GRM_212:
	PUSH_GRM
	lea rax,[r14+1]
	cmp rax,r9
	jg LB_1473
	jmp LB_1474
LB_1473:
	mov r8,unt_1
	jmp LB_1471
LB_1474:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],37
	jnz LB_1475
	jmp LB_1476
LB_1475:
	mov r8,unt_1
	jmp LB_1471
LB_1476:
	add r14,1
	jmp LB_1472
LB_1471:
	add rsp,0
	jmp LB_1470
LB_1472:
	call GRM_77
	cmp BYTE [r8+6],0
	jnz LB_1479
	jmp LB_1480
LB_1479:
	jmp LB_1477
LB_1480:
	sub rsp,8
; .mov_ptn2 2'(= {| l |} ) ⊢ 8'(= {| l |} )
; .mov_ptn 2'(= {| l |} ) ⊢ 8'(= {| l |} )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_1478
LB_1477:
	add rsp,0
	POP_GRM_FAIL
	ret
LB_1478:
	mov QWORD [rsp+8*1],r14
	mov r13,QWORD [rsp+16+8*1]
	mov r14,QWORD [rsp+8*1]
	jmp LB_1481
LB_1481
; #92 8'(= {| l |} ) ⊢ 1(<2)◂8'(= {| l |} )
; #24 1(<2)◂8'(= {| l |} ) ⊢ 0(<2)◂1(<2)◂8'(= {| l |} )
; ∎ 0(<2)◂1(<2)◂8'(= {| l |} )
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂1(<2)◂8'(= {| l |} ) ⊢ 2'(= a3◂ [ a21◂ [ {| l |}]] )
; .mov_ptn 0(<2)◂1(<2)◂8'(= {| l |} ) ⊢ 2'(= a3◂ [ a21◂ [ {| l |}]] )
	mov rax,QWORD [rsp-8+8*1]
	mov BYTE [rax+6],1
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,8
	jmp LB_1482
LB_1482:
	cmp BYTE [r8+6],0
	jnz LB_1470
	POP_GRM_SCC
	ret
LB_1470:
	RB_GRM
	call GRM_77
	cmp BYTE [r8+6],0
	jnz LB_1486
	jmp LB_1487
LB_1486:
	jmp LB_1484
LB_1487:
	sub rsp,8
; .mov_ptn2 2'(= {| l |} ) ⊢ 8'(= {| l |} )
; .mov_ptn 2'(= {| l |} ) ⊢ 8'(= {| l |} )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_1485
LB_1484:
	add rsp,0
	jmp LB_1483
LB_1485:
	mov QWORD [rsp+8*1],r14
	mov r13,QWORD [rsp+16+8*1]
	mov r14,QWORD [rsp+8*1]
	jmp LB_1488
LB_1488
; #92 8'(= {| l |} ) ⊢ 1(<2)◂8'(= {| l |} )
; #24 1(<2)◂8'(= {| l |} ) ⊢ 0(<2)◂1(<2)◂8'(= {| l |} )
; ∎ 0(<2)◂1(<2)◂8'(= {| l |} )
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂1(<2)◂8'(= {| l |} ) ⊢ 2'(= a3◂ [ a21◂ [ {| l |}]] )
; .mov_ptn 0(<2)◂1(<2)◂8'(= {| l |} ) ⊢ 2'(= a3◂ [ a21◂ [ {| l |}]] )
	mov rax,QWORD [rsp-8+8*1]
	mov BYTE [rax+6],1
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,8
	jmp LB_1489
LB_1489:
	cmp BYTE [r8+6],0
	jnz LB_1483
	POP_GRM_SCC
	ret
LB_1483:
	RB_GRM
	lea rax,[r14+1]
	cmp rax,r9
	jg LB_1493
	jmp LB_1494
LB_1493:
	mov r8,unt_1
	jmp LB_1491
LB_1494:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],95
	jnz LB_1495
	jmp LB_1496
LB_1495:
	mov r8,unt_1
	jmp LB_1491
LB_1496:
	add r14,1
	jmp LB_1492
LB_1491:
	add rsp,0
	jmp LB_1490
LB_1492:
	mov QWORD [rsp+8*0],r14
	mov r13,QWORD [rsp+16+8*0]
	mov r14,QWORD [rsp+8*0]
	jmp LB_1497
LB_1497
; #25 { } ⊢ 1(<2)◂{ }
; #93 1(<2)◂{ } ⊢ 0(<2)◂1(<2)◂{ }
; #24 0(<2)◂1(<2)◂{ } ⊢ 0(<2)◂0(<2)◂1(<2)◂{ }
; ∎ 0(<2)◂0(<2)◂1(<2)◂{ }
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂0(<2)◂1(<2)◂{ } ⊢ 2'(= a3◂ [ a21◂ [ {| l |}]] )
; .mov_ptn 0(<2)◂0(<2)◂1(<2)◂{ } ⊢ 2'(= a3◂ [ a21◂ [ {| l |}]] )
	mov rax,unt 
	mov rax,unt_1
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	jmp LB_1498
LB_1498:
	cmp BYTE [r8+6],0
	jnz LB_1490
	POP_GRM_SCC
	ret
LB_1490:
	POP_GRM_FAIL 
	ret
LB_1624: ;; #54 { 0'(= a2◂ [ a31◂ [ ]] ) 1'(= a2◂ [ a31◂ [ ]] ) } ⊢ 0'(= a2◂ [ a31◂ [ ]] ) : ({ _lst◂2971'(=2972'(=_t31)) _lst◂_t31 }→_lst◂_t31)
;; ?; 1'(= a2◂ [ a31◂ [ ]] ) ⊢ 1(<2)◂{ }
	mov rdi,r14
	cmp BYTE [rdi+6],1
	jnz LB_1625
; ∎ 0'(= a2◂ [ a31◂ [ ]] )
; .mov_ptn2 0'(= a2◂ [ a31◂ [ ]] ) ⊢ 0'(= a2◂ [ a31◂ [ ]] )
	ret
LB_1625:
;; ?; 1'(= a2◂ [ a31◂ [ ]] ) ⊢ 0(<2)◂{ 2'(= a31◂ [ ] ) 3'(= a2◂ [ a31◂ [ ]] ) }
	mov r8, QWORD [r14+8]
	mov r9, QWORD [r14+16]
	mov QWORD [GBG_VCT+8*0],r14
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_RCD 2,rdi
; #23 { 2'(= a31◂ [ ] ) 0'(= a2◂ [ a31◂ [ ]] ) } ⊢ 0(<2)◂{ 2'(= a31◂ [ ] ) 0'(= a2◂ [ a31◂ [ ]] ) }
; #54 { 0(<2)◂{ 2'(= a31◂ [ ] ) 0'(= a2◂ [ a31◂ [ ]] ) } 3'(= a2◂ [ a31◂ [ ]] ) } ⊢ 0'(= a2◂ [ a31◂ [ ]] )
; .mov_ptn2 { 0(<2)◂{ 2'(= a31◂ [ ] ) 0'(= a2◂ [ a31◂ [ ]] ) } 3'(= a2◂ [ a31◂ [ ]] ) } ⊢ { 0'(= a2◂ [ a31◂ [ ]] ) 1'(= a2◂ [ a31◂ [ ]] ) }
; .mov_ptn 3'(= a2◂ [ a31◂ [ ]] ) ⊢ 1'(= a2◂ [ a31◂ [ ]] )
	mov rax,r9
	mov r14,rax
	mov r10,r13
; .mov_ptn 0(<2)◂{ 2'(= a31◂ [ ] ) 4'(= a2◂ [ a31◂ [ ]] ) } ⊢ 0'(= a2◂ [ a31◂ [ ]] )
	ALC_RCD 2, rax
	mov r9,rax
	mov rax,r8
	mov QWORD [r9+8+8*0],rax
	mov rax,r10
	mov QWORD [r9+8+8*1],rax
	mov rax,r9
	mov BYTE [rax+6],0
	mov r13,rax
	call LB_1624
; ∎ 0'(= a2◂ [ a31◂ [ ]] )
; .mov_ptn2 0'(= a2◂ [ a31◂ [ ]] ) ⊢ 0'(= a2◂ [ a31◂ [ ]] )
	ret
LB_1623: ;; #55 0'(= a2◂ [ a31◂ [ ]] ) ⊢ 0'(= a2◂ [ a31◂ [ ]] ) : (_lst◂_t31→_lst◂_t31)
; #22 { } ⊢ 1(<2)◂{ }
; #54 { 1(<2)◂{ } 0'(= a2◂ [ a31◂ [ ]] ) } ⊢ 0'(= a2◂ [ a31◂ [ ]] )
; .mov_ptn2 { 1(<2)◂{ } 0'(= a2◂ [ a31◂ [ ]] ) } ⊢ { 0'(= a2◂ [ a31◂ [ ]] ) 1'(= a2◂ [ a31◂ [ ]] ) }
; .mov_ptn 0'(= a2◂ [ a31◂ [ ]] ) ⊢ 1'(= a2◂ [ a31◂ [ ]] )
	mov rax,r13
	mov r14,rax
; .mov_ptn 1(<2)◂{ } ⊢ 0'(= a2◂ [ a31◂ [ ]] )
	mov rax,unt 
	mov rax,unt_1
	mov r13,rax
	call LB_1624
; ∎ 0'(= a2◂ [ a31◂ [ ]] )
; .mov_ptn2 0'(= a2◂ [ a31◂ [ ]] ) ⊢ 0'(= a2◂ [ a31◂ [ ]] )
	ret
ETR_213:
	mov r9,0x0000_ffff_ffff_ffff
	and r9,[r13]
	call GRM_213
	ret
GRM_213:
	PUSH_GRM
	jmp LB_1501
LB_1500:
	add r14,1 
LB_1501:
	cmp r14,r9
	jge LB_1502
	JZ_LINE_SPC BYTE [r13+8+r14], LB_1500
LB_1502
	call GRM_217
	cmp BYTE [r8+6],0
	jnz LB_1505
	jmp LB_1506
LB_1505:
	jmp LB_1503
LB_1506:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a31◂ [ ] ) ⊢ 8'(= a31◂ [ ] )
; .mov_ptn 2'(= a31◂ [ ] ) ⊢ 8'(= a31◂ [ ] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_1504
LB_1503:
	add rsp,0
	jmp LB_1499
LB_1504:
	jmp LB_1508
LB_1507:
	add r14,1 
LB_1508:
	cmp r14,r9
	jge LB_1509
	JZ_LINE_SPC BYTE [r13+8+r14], LB_1507
LB_1509
	call GRM_216
	cmp BYTE [r8+6],0
	jnz LB_1512
	jmp LB_1513
LB_1512:
	jmp LB_1510
LB_1513:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a2◂ [ a31◂ [ ]] ) ⊢ 9'(= a2◂ [ a31◂ [ ]] )
; .mov_ptn 2'(= a2◂ [ a31◂ [ ]] ) ⊢ 9'(= a2◂ [ a31◂ [ ]] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_1511
LB_1510:
	add rsp,8
	jmp LB_1499
LB_1511:
	jmp LB_1515
LB_1514:
	add r14,1 
LB_1515:
	cmp r14,r9
	jge LB_1516
	JZ_LINE_SPC BYTE [r13+8+r14], LB_1514
LB_1516
	call GRM_215
	cmp BYTE [r8+6],0
	jnz LB_1519
	jmp LB_1520
LB_1519:
	jmp LB_1517
LB_1520:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a3◂ [ a31◂ [ ]] ) ⊢ 10'(= a3◂ [ a31◂ [ ]] )
; .mov_ptn 2'(= a3◂ [ a31◂ [ ]] ) ⊢ 10'(= a3◂ [ a31◂ [ ]] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_1518
LB_1517:
	add rsp,16
	jmp LB_1499
LB_1518:
	mov QWORD [rsp+8*3],r14
	mov r13,QWORD [rsp+16+8*3]
	mov r14,QWORD [rsp+8*3]
	jmp LB_1521
LB_1521
; #189 { 8'(= a31◂ [ ] ) 9'(= a2◂ [ a31◂ [ ]] ) } ⊢ 2'(= a31◂ [ ] )
	sub rsp,16
	mov QWORD [rsp+8*0],r13
	mov QWORD [rsp+8*1],r14
; .mov_ptn2 { 8'(= a31◂ [ ] ) 9'(= a2◂ [ a31◂ [ ]] ) } ⊢ { 0'(= a31◂ [ ] ) 1'(= a2◂ [ a31◂ [ ]] ) }
; .mov_ptn 9'(= a2◂ [ a31◂ [ ]] ) ⊢ 1'(= a2◂ [ a31◂ [ ]] )
	mov rax,QWORD [rsp-8+8*4]
	mov r14,rax
; .mov_ptn 8'(= a31◂ [ ] ) ⊢ 0'(= a31◂ [ ] )
	mov rax,QWORD [rsp-8+8*5]
	mov r13,rax
	call ETR_189
	mov r14,QWORD [rsp-8+8*2]
	mov r8,r13
	mov r13,QWORD [rsp-8+8*1]
	add rsp,16
;; ?; 10'(= a3◂ [ a31◂ [ ]] ) ⊢ 0(<2)◂3'(= a31◂ [ ] )
	mov rdi,QWORD [rsp-8+8*1]
	cmp BYTE [rdi+6],0
	jnz LB_1523
	mov QWORD [GBG_VCT+8*0],rdi
	mov r9,QWORD [rdi+8]
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_LN rdi
; #142 { 2'(= a31◂ [ ] ) 3'(= a31◂ [ ] ) } ⊢ 1(<5)◂{ 2'(= a31◂ [ ] ) 3'(= a31◂ [ ] ) }
; #24 1(<5)◂{ 2'(= a31◂ [ ] ) 3'(= a31◂ [ ] ) } ⊢ 0(<2)◂1(<5)◂{ 2'(= a31◂ [ ] ) 3'(= a31◂ [ ] ) }
; ∎ 0(<2)◂1(<5)◂{ 2'(= a31◂ [ ] ) 3'(= a31◂ [ ] ) }
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂1(<5)◂{ 2'(= a31◂ [ ] ) 3'(= a31◂ [ ] ) } ⊢ 2'(= a3◂ [ a31◂ [ ]] )
	mov r13,r8
; .mov_ptn 0(<2)◂1(<5)◂{ 0'(= a31◂ [ ] ) 3'(= a31◂ [ ] ) } ⊢ 2'(= a3◂ [ a31◂ [ ]] )
	ALC_RCD 2, rax
	mov r14,rax
	mov rax,r13
	mov QWORD [r14+8+8*0],rax
	mov rax,r9
	mov QWORD [r14+8+8*1],rax
	mov rax,r14
	mov BYTE [rax+6],1
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,24
	jmp LB_1522
LB_1523:
;; ?; 10'(= a3◂ [ a31◂ [ ]] ) ⊢ 1(<2)◂{ }
; #24 2'(= a31◂ [ ] ) ⊢ 0(<2)◂2'(= a31◂ [ ] )
; ∎ 0(<2)◂2'(= a31◂ [ ] )
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂2'(= a31◂ [ ] ) ⊢ 2'(= a3◂ [ a31◂ [ ]] )
	mov r13,r8
; .mov_ptn 0(<2)◂0'(= a31◂ [ ] ) ⊢ 2'(= a3◂ [ a31◂ [ ]] )
	mov rax,r13
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,24
	jmp LB_1522
LB_1522:
	cmp BYTE [r8+6],0
	jnz LB_1499
	POP_GRM_SCC
	ret
LB_1499:
	POP_GRM_FAIL 
	ret
ETR_214:
	mov r9,0x0000_ffff_ffff_ffff
	and r9,[r13]
	call GRM_214
	ret
GRM_214:
	PUSH_GRM
	jmp LB_1526
LB_1525:
	add r14,1 
LB_1526:
	cmp r14,r9
	jge LB_1527
	JZ_LINE_SPC BYTE [r13+8+r14], LB_1525
LB_1527
	call GRM_213
	cmp BYTE [r8+6],0
	jnz LB_1530
	jmp LB_1531
LB_1530:
	jmp LB_1528
LB_1531:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a31◂ [ ] ) ⊢ 8'(= a31◂ [ ] )
; .mov_ptn 2'(= a31◂ [ ] ) ⊢ 8'(= a31◂ [ ] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_1529
LB_1528:
	add rsp,0
	jmp LB_1524
LB_1529:
	jmp LB_1533
LB_1532:
	add r14,1 
LB_1533:
	cmp r14,r9
	jge LB_1534
	JZ_LINE_SPC BYTE [r13+8+r14], LB_1532
LB_1534
	call GRM_214
	cmp BYTE [r8+6],0
	jnz LB_1537
	jmp LB_1538
LB_1537:
	jmp LB_1535
LB_1538:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a2◂ [ a31◂ [ ]] ) ⊢ 9'(= a2◂ [ a31◂ [ ]] )
; .mov_ptn 2'(= a2◂ [ a31◂ [ ]] ) ⊢ 9'(= a2◂ [ a31◂ [ ]] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_1536
LB_1535:
	add rsp,8
	jmp LB_1524
LB_1536:
	mov QWORD [rsp+8*2],r14
	mov r13,QWORD [rsp+16+8*2]
	mov r14,QWORD [rsp+8*2]
	jmp LB_1539
LB_1539
; #23 { 8'(= a31◂ [ ] ) 9'(= a2◂ [ a31◂ [ ]] ) } ⊢ 0(<2)◂{ 8'(= a31◂ [ ] ) 9'(= a2◂ [ a31◂ [ ]] ) }
; #24 0(<2)◂{ 8'(= a31◂ [ ] ) 9'(= a2◂ [ a31◂ [ ]] ) } ⊢ 0(<2)◂0(<2)◂{ 8'(= a31◂ [ ] ) 9'(= a2◂ [ a31◂ [ ]] ) }
; ∎ 0(<2)◂0(<2)◂{ 8'(= a31◂ [ ] ) 9'(= a2◂ [ a31◂ [ ]] ) }
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂0(<2)◂{ 8'(= a31◂ [ ] ) 9'(= a2◂ [ a31◂ [ ]] ) } ⊢ 2'(= a3◂ [ a2◂ [ a31◂ [ ]]] )
; .mov_ptn 0(<2)◂0(<2)◂{ 8'(= a31◂ [ ] ) 9'(= a2◂ [ a31◂ [ ]] ) } ⊢ 2'(= a3◂ [ a2◂ [ a31◂ [ ]]] )
	ALC_RCD 2, rax
	mov r13,rax
	mov rax,QWORD [rsp-8+8*2]
	mov QWORD [r13+8+8*0],rax
	mov rax,QWORD [rsp-8+8*1]
	mov QWORD [r13+8+8*1],rax
	mov rax,r13
	mov BYTE [rax+6],0
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,16
	jmp LB_1540
LB_1540:
	cmp BYTE [r8+6],0
	jnz LB_1524
	POP_GRM_SCC
	ret
LB_1524:
	RB_GRM
	mov QWORD [rsp+8*0],r14
	mov r13,QWORD [rsp+16+8*0]
	mov r14,QWORD [rsp+8*0]
	jmp LB_1542
LB_1542
; #22 { } ⊢ 1(<2)◂{ }
; #24 1(<2)◂{ } ⊢ 0(<2)◂1(<2)◂{ }
; ∎ 0(<2)◂1(<2)◂{ }
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂1(<2)◂{ } ⊢ 2'(= a3◂ [ a2◂ [ a31◂ [ ]]] )
; .mov_ptn 0(<2)◂1(<2)◂{ } ⊢ 2'(= a3◂ [ a2◂ [ a31◂ [ ]]] )
	mov rax,unt 
	mov rax,unt_1
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	jmp LB_1543
LB_1543:
	cmp BYTE [r8+6],0
	jnz LB_1541
	POP_GRM_SCC
	ret
LB_1541:
	POP_GRM_FAIL 
	ret
ETR_215:
	mov r9,0x0000_ffff_ffff_ffff
	and r9,[r13]
	call GRM_215
	ret
GRM_215:
	PUSH_GRM
	jmp LB_1546
LB_1545:
	add r14,1 
LB_1546:
	cmp r14,r9
	jge LB_1547
	JZ_LINE_SPC BYTE [r13+8+r14], LB_1545
LB_1547
	lea rax,[r14+3]
	cmp rax,r9
	jg LB_1550
	jmp LB_1551
LB_1550:
	mov r8,unt_1
	jmp LB_1548
LB_1551:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],226
	jnz LB_1552
	cmp BYTE [rdi+1],134
	jnz LB_1552
	cmp BYTE [rdi+2],146
	jnz LB_1552
	jmp LB_1553
LB_1552:
	mov r8,unt_1
	jmp LB_1548
LB_1553:
	add r14,3
	jmp LB_1549
LB_1548:
	add rsp,0
	jmp LB_1544
LB_1549:
	jmp LB_1555
LB_1554:
	add r14,1 
LB_1555:
	cmp r14,r9
	jge LB_1556
	JZ_LINE_SPC BYTE [r13+8+r14], LB_1554
LB_1556
	call GRM_213
	cmp BYTE [r8+6],0
	jnz LB_1559
	jmp LB_1560
LB_1559:
	jmp LB_1557
LB_1560:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a31◂ [ ] ) ⊢ 8'(= a31◂ [ ] )
; .mov_ptn 2'(= a31◂ [ ] ) ⊢ 8'(= a31◂ [ ] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_1558
LB_1557:
	add rsp,0
	jmp LB_1544
LB_1558:
	mov QWORD [rsp+8*1],r14
	mov r13,QWORD [rsp+16+8*1]
	mov r14,QWORD [rsp+8*1]
	jmp LB_1561
LB_1561
; #24 8'(= a31◂ [ ] ) ⊢ 0(<2)◂8'(= a31◂ [ ] )
; #24 0(<2)◂8'(= a31◂ [ ] ) ⊢ 0(<2)◂0(<2)◂8'(= a31◂ [ ] )
; ∎ 0(<2)◂0(<2)◂8'(= a31◂ [ ] )
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂0(<2)◂8'(= a31◂ [ ] ) ⊢ 2'(= a3◂ [ a3◂ [ a31◂ [ ]]] )
; .mov_ptn 0(<2)◂0(<2)◂8'(= a31◂ [ ] ) ⊢ 2'(= a3◂ [ a3◂ [ a31◂ [ ]]] )
	mov rax,QWORD [rsp-8+8*1]
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,8
	jmp LB_1562
LB_1562:
	cmp BYTE [r8+6],0
	jnz LB_1544
	POP_GRM_SCC
	ret
LB_1544:
	RB_GRM
	mov QWORD [rsp+8*0],r14
	mov r13,QWORD [rsp+16+8*0]
	mov r14,QWORD [rsp+8*0]
	jmp LB_1564
LB_1564
; #25 { } ⊢ 1(<2)◂{ }
; #24 1(<2)◂{ } ⊢ 0(<2)◂1(<2)◂{ }
; ∎ 0(<2)◂1(<2)◂{ }
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂1(<2)◂{ } ⊢ 2'(= a3◂ [ a3◂ [ a31◂ [ ]]] )
; .mov_ptn 0(<2)◂1(<2)◂{ } ⊢ 2'(= a3◂ [ a3◂ [ a31◂ [ ]]] )
	mov rax,unt 
	mov rax,unt_1
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	jmp LB_1565
LB_1565:
	cmp BYTE [r8+6],0
	jnz LB_1563
	POP_GRM_SCC
	ret
LB_1563:
	POP_GRM_FAIL 
	ret
ETR_216:
	mov r9,0x0000_ffff_ffff_ffff
	and r9,[r13]
	call GRM_216
	ret
GRM_216:
	PUSH_GRM
	jmp LB_1568
LB_1567:
	add r14,1 
LB_1568:
	cmp r14,r9
	jge LB_1569
	JZ_LINE_SPC BYTE [r13+8+r14], LB_1567
LB_1569
	lea rax,[r14+3]
	cmp rax,r9
	jg LB_1572
	jmp LB_1573
LB_1572:
	mov r8,unt_1
	jmp LB_1570
LB_1573:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],226
	jnz LB_1574
	cmp BYTE [rdi+1],151
	jnz LB_1574
	cmp BYTE [rdi+2],130
	jnz LB_1574
	jmp LB_1575
LB_1574:
	mov r8,unt_1
	jmp LB_1570
LB_1575:
	add r14,3
	jmp LB_1571
LB_1570:
	add rsp,0
	jmp LB_1566
LB_1571:
	jmp LB_1577
LB_1576:
	add r14,1 
LB_1577:
	cmp r14,r9
	jge LB_1578
	JZ_LINE_SPC BYTE [r13+8+r14], LB_1576
LB_1578
	call GRM_217
	cmp BYTE [r8+6],0
	jnz LB_1581
	jmp LB_1582
LB_1581:
	jmp LB_1579
LB_1582:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a31◂ [ ] ) ⊢ 8'(= a31◂ [ ] )
; .mov_ptn 2'(= a31◂ [ ] ) ⊢ 8'(= a31◂ [ ] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_1580
LB_1579:
	add rsp,0
	jmp LB_1566
LB_1580:
	jmp LB_1584
LB_1583:
	add r14,1 
LB_1584:
	cmp r14,r9
	jge LB_1585
	JZ_LINE_SPC BYTE [r13+8+r14], LB_1583
LB_1585
	call GRM_216
	cmp BYTE [r8+6],0
	jnz LB_1588
	jmp LB_1589
LB_1588:
	jmp LB_1586
LB_1589:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a2◂ [ a31◂ [ ]] ) ⊢ 9'(= a2◂ [ a31◂ [ ]] )
; .mov_ptn 2'(= a2◂ [ a31◂ [ ]] ) ⊢ 9'(= a2◂ [ a31◂ [ ]] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_1587
LB_1586:
	add rsp,8
	jmp LB_1566
LB_1587:
	mov QWORD [rsp+8*2],r14
	mov r13,QWORD [rsp+16+8*2]
	mov r14,QWORD [rsp+8*2]
	jmp LB_1590
LB_1590
; #23 { 8'(= a31◂ [ ] ) 9'(= a2◂ [ a31◂ [ ]] ) } ⊢ 0(<2)◂{ 8'(= a31◂ [ ] ) 9'(= a2◂ [ a31◂ [ ]] ) }
; #24 0(<2)◂{ 8'(= a31◂ [ ] ) 9'(= a2◂ [ a31◂ [ ]] ) } ⊢ 0(<2)◂0(<2)◂{ 8'(= a31◂ [ ] ) 9'(= a2◂ [ a31◂ [ ]] ) }
; ∎ 0(<2)◂0(<2)◂{ 8'(= a31◂ [ ] ) 9'(= a2◂ [ a31◂ [ ]] ) }
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂0(<2)◂{ 8'(= a31◂ [ ] ) 9'(= a2◂ [ a31◂ [ ]] ) } ⊢ 2'(= a3◂ [ a2◂ [ a31◂ [ ]]] )
; .mov_ptn 0(<2)◂0(<2)◂{ 8'(= a31◂ [ ] ) 9'(= a2◂ [ a31◂ [ ]] ) } ⊢ 2'(= a3◂ [ a2◂ [ a31◂ [ ]]] )
	ALC_RCD 2, rax
	mov r13,rax
	mov rax,QWORD [rsp-8+8*2]
	mov QWORD [r13+8+8*0],rax
	mov rax,QWORD [rsp-8+8*1]
	mov QWORD [r13+8+8*1],rax
	mov rax,r13
	mov BYTE [rax+6],0
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,16
	jmp LB_1591
LB_1591:
	cmp BYTE [r8+6],0
	jnz LB_1566
	POP_GRM_SCC
	ret
LB_1566:
	RB_GRM
	mov QWORD [rsp+8*0],r14
	mov r13,QWORD [rsp+16+8*0]
	mov r14,QWORD [rsp+8*0]
	jmp LB_1593
LB_1593
; #22 { } ⊢ 1(<2)◂{ }
; #24 1(<2)◂{ } ⊢ 0(<2)◂1(<2)◂{ }
; ∎ 0(<2)◂1(<2)◂{ }
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂1(<2)◂{ } ⊢ 2'(= a3◂ [ a2◂ [ a31◂ [ ]]] )
; .mov_ptn 0(<2)◂1(<2)◂{ } ⊢ 2'(= a3◂ [ a2◂ [ a31◂ [ ]]] )
	mov rax,unt 
	mov rax,unt_1
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	jmp LB_1594
LB_1594:
	cmp BYTE [r8+6],0
	jnz LB_1592
	POP_GRM_SCC
	ret
LB_1592:
	POP_GRM_FAIL 
	ret
ETR_217:
	mov r9,0x0000_ffff_ffff_ffff
	and r9,[r13]
	call GRM_217
	ret
GRM_217:
	PUSH_GRM
	jmp LB_1597
LB_1596:
	add r14,1 
LB_1597:
	cmp r14,r9
	jge LB_1598
	JZ_LINE_SPC BYTE [r13+8+r14], LB_1596
LB_1598
	lea rax,[r14+1]
	cmp rax,r9
	jg LB_1601
	jmp LB_1602
LB_1601:
	mov r8,unt_1
	jmp LB_1599
LB_1602:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],123
	jnz LB_1603
	jmp LB_1604
LB_1603:
	mov r8,unt_1
	jmp LB_1599
LB_1604:
	add r14,1
	jmp LB_1600
LB_1599:
	add rsp,0
	jmp LB_1595
LB_1600:
	jmp LB_1606
LB_1605:
	add r14,1 
LB_1606:
	cmp r14,r9
	jge LB_1607
	JZ_LINE_SPC BYTE [r13+8+r14], LB_1605
LB_1607
	call GRM_214
	cmp BYTE [r8+6],0
	jnz LB_1610
	jmp LB_1611
LB_1610:
	jmp LB_1608
LB_1611:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a2◂ [ a31◂ [ ]] ) ⊢ 8'(= a2◂ [ a31◂ [ ]] )
; .mov_ptn 2'(= a2◂ [ a31◂ [ ]] ) ⊢ 8'(= a2◂ [ a31◂ [ ]] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_1609
LB_1608:
	add rsp,0
	jmp LB_1595
LB_1609:
	jmp LB_1613
LB_1612:
	add r14,1 
LB_1613:
	cmp r14,r9
	jge LB_1614
	JZ_LINE_SPC BYTE [r13+8+r14], LB_1612
LB_1614
	lea rax,[r14+1]
	cmp rax,r9
	jg LB_1617
	jmp LB_1618
LB_1617:
	mov r8,unt_1
	jmp LB_1615
LB_1618:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],125
	jnz LB_1619
	jmp LB_1620
LB_1619:
	mov r8,unt_1
	jmp LB_1615
LB_1620:
	add r14,1
	jmp LB_1616
LB_1615:
	add rsp,8
	jmp LB_1595
LB_1616:
	mov QWORD [rsp+8*1],r14
	mov r13,QWORD [rsp+16+8*1]
	mov r14,QWORD [rsp+8*1]
	jmp LB_1621
LB_1621
; #55 8'(= a2◂ [ a31◂ [ ]] ) ⊢ 2'(= a2◂ [ a31◂ [ ]] )
	sub rsp,16
	mov QWORD [rsp+8*0],r13
	mov QWORD [rsp+8*1],r14
; .mov_ptn2 8'(= a2◂ [ a31◂ [ ]] ) ⊢ 0'(= a2◂ [ a31◂ [ ]] )
; .mov_ptn 8'(= a2◂ [ a31◂ [ ]] ) ⊢ 0'(= a2◂ [ a31◂ [ ]] )
	mov rax,QWORD [rsp-8+8*3]
	mov r13,rax
	call LB_1623
	mov r14,QWORD [rsp-8+8*2]
	mov r8,r13
	mov r13,QWORD [rsp-8+8*1]
	add rsp,24
; #143 2'(= a2◂ [ a31◂ [ ]] ) ⊢ 0(<5)◂2'(= a2◂ [ a31◂ [ ]] )
; #24 0(<5)◂2'(= a2◂ [ a31◂ [ ]] ) ⊢ 0(<2)◂0(<5)◂2'(= a2◂ [ a31◂ [ ]] )
; ∎ 0(<2)◂0(<5)◂2'(= a2◂ [ a31◂ [ ]] )
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂0(<5)◂2'(= a2◂ [ a31◂ [ ]] ) ⊢ 2'(= a3◂ [ a31◂ [ ]] )
	mov r13,r8
; .mov_ptn 0(<2)◂0(<5)◂0'(= a2◂ [ a31◂ [ ]] ) ⊢ 2'(= a3◂ [ a31◂ [ ]] )
	mov rax,r13
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	jmp LB_1622
LB_1622:
	cmp BYTE [r8+6],0
	jnz LB_1595
	POP_GRM_SCC
	ret
LB_1595:
	RB_GRM
	jmp LB_1628
LB_1627:
	add r14,1 
LB_1628:
	cmp r14,r9
	jge LB_1629
	JZ_LINE_SPC BYTE [r13+8+r14], LB_1627
LB_1629
	lea rax,[r14+1]
	cmp rax,r9
	jg LB_1632
	jmp LB_1633
LB_1632:
	mov r8,unt_1
	jmp LB_1630
LB_1633:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],40
	jnz LB_1634
	jmp LB_1635
LB_1634:
	mov r8,unt_1
	jmp LB_1630
LB_1635:
	add r14,1
	jmp LB_1631
LB_1630:
	add rsp,0
	jmp LB_1626
LB_1631:
	jmp LB_1637
LB_1636:
	add r14,1 
LB_1637:
	cmp r14,r9
	jge LB_1638
	JZ_LINE_SPC BYTE [r13+8+r14], LB_1636
LB_1638
	call GRM_213
	cmp BYTE [r8+6],0
	jnz LB_1641
	jmp LB_1642
LB_1641:
	jmp LB_1639
LB_1642:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a31◂ [ ] ) ⊢ 8'(= a31◂ [ ] )
; .mov_ptn 2'(= a31◂ [ ] ) ⊢ 8'(= a31◂ [ ] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_1640
LB_1639:
	add rsp,0
	jmp LB_1626
LB_1640:
	jmp LB_1644
LB_1643:
	add r14,1 
LB_1644:
	cmp r14,r9
	jge LB_1645
	JZ_LINE_SPC BYTE [r13+8+r14], LB_1643
LB_1645
	lea rax,[r14+1]
	cmp rax,r9
	jg LB_1648
	jmp LB_1649
LB_1648:
	mov r8,unt_1
	jmp LB_1646
LB_1649:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],41
	jnz LB_1650
	jmp LB_1651
LB_1650:
	mov r8,unt_1
	jmp LB_1646
LB_1651:
	add r14,1
	jmp LB_1647
LB_1646:
	add rsp,8
	jmp LB_1626
LB_1647:
	mov QWORD [rsp+8*1],r14
	mov r13,QWORD [rsp+16+8*1]
	mov r14,QWORD [rsp+8*1]
	jmp LB_1652
LB_1652
; #24 8'(= a31◂ [ ] ) ⊢ 0(<2)◂8'(= a31◂ [ ] )
; ∎ 0(<2)◂8'(= a31◂ [ ] )
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂8'(= a31◂ [ ] ) ⊢ 2'(= a3◂ [ a31◂ [ ]] )
; .mov_ptn 0(<2)◂8'(= a31◂ [ ] ) ⊢ 2'(= a3◂ [ a31◂ [ ]] )
	mov rax,QWORD [rsp-8+8*1]
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,8
	jmp LB_1653
LB_1653:
	cmp BYTE [r8+6],0
	jnz LB_1626
	POP_GRM_SCC
	ret
LB_1626:
	RB_GRM
	jmp LB_1656
LB_1655:
	add r14,1 
LB_1656:
	cmp r14,r9
	jge LB_1657
	JZ_LINE_SPC BYTE [r13+8+r14], LB_1655
LB_1657
	call GRM_218
	cmp BYTE [r8+6],0
	jnz LB_1660
	jmp LB_1661
LB_1660:
	jmp LB_1658
LB_1661:
	sub rsp,8
; .mov_ptn2 2'(= {| l |} ) ⊢ 8'(= {| l |} )
; .mov_ptn 2'(= {| l |} ) ⊢ 8'(= {| l |} )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_1659
LB_1658:
	add rsp,0
	jmp LB_1654
LB_1659:
	mov QWORD [rsp+8*1],r14
	mov r13,QWORD [rsp+16+8*1]
	mov r14,QWORD [rsp+8*1]
	jmp LB_1662
LB_1662
; #139 8'(= {| l |} ) ⊢ 4(<5)◂8'(= {| l |} )
; #24 4(<5)◂8'(= {| l |} ) ⊢ 0(<2)◂4(<5)◂8'(= {| l |} )
; ∎ 0(<2)◂4(<5)◂8'(= {| l |} )
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂4(<5)◂8'(= {| l |} ) ⊢ 2'(= a3◂ [ a31◂ [ ]] )
; .mov_ptn 0(<2)◂4(<5)◂8'(= {| l |} ) ⊢ 2'(= a3◂ [ a31◂ [ ]] )
	mov rax,QWORD [rsp-8+8*1]
	mov BYTE [rax+6],4
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,8
	jmp LB_1663
LB_1663:
	cmp BYTE [r8+6],0
	jnz LB_1654
	POP_GRM_SCC
	ret
LB_1654:
	RB_GRM
	jmp LB_1666
LB_1665:
	add r14,1 
LB_1666:
	cmp r14,r9
	jge LB_1667
	JZ_LINE_SPC BYTE [r13+8+r14], LB_1665
LB_1667
	call GRM_192
	cmp BYTE [r8+6],0
	jnz LB_1670
	jmp LB_1671
LB_1670:
	jmp LB_1668
LB_1671:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a17◂ [ ] ) ⊢ 8'(= a17◂ [ ] )
; .mov_ptn 2'(= a17◂ [ ] ) ⊢ 8'(= a17◂ [ ] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_1669
LB_1668:
	add rsp,0
	jmp LB_1664
LB_1669:
	mov QWORD [rsp+8*1],r14
	mov r13,QWORD [rsp+16+8*1]
	mov r14,QWORD [rsp+8*1]
	jmp LB_1672
LB_1672
; #140 8'(= a17◂ [ ] ) ⊢ 3(<5)◂8'(= a17◂ [ ] )
; #24 3(<5)◂8'(= a17◂ [ ] ) ⊢ 0(<2)◂3(<5)◂8'(= a17◂ [ ] )
; ∎ 0(<2)◂3(<5)◂8'(= a17◂ [ ] )
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂3(<5)◂8'(= a17◂ [ ] ) ⊢ 2'(= a3◂ [ a31◂ [ ]] )
; .mov_ptn 0(<2)◂3(<5)◂8'(= a17◂ [ ] ) ⊢ 2'(= a3◂ [ a31◂ [ ]] )
	mov rax,QWORD [rsp-8+8*1]
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],3
	mov QWORD [rax+8],rdi
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,8
	jmp LB_1673
LB_1673:
	cmp BYTE [r8+6],0
	jnz LB_1664
	POP_GRM_SCC
	ret
LB_1664:
	POP_GRM_FAIL 
	ret
ETR_218:
	mov r9,0x0000_ffff_ffff_ffff
	and r9,[r13]
	call GRM_218
	ret
GRM_218:
	PUSH_GRM
	call GRM_77
	cmp BYTE [r8+6],0
	jnz LB_1677
	jmp LB_1678
LB_1677:
	jmp LB_1675
LB_1678:
	sub rsp,8
; .mov_ptn2 2'(= {| l |} ) ⊢ 8'(= {| l |} )
; .mov_ptn 2'(= {| l |} ) ⊢ 8'(= {| l |} )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_1676
LB_1675:
	add rsp,0
	jmp LB_1674
LB_1676:
	lea rax,[r14+1]
	cmp rax,r9
	jg LB_1681
	jmp LB_1682
LB_1681:
	mov r8,unt_1
	jmp LB_1679
LB_1682:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],39
	jnz LB_1683
	jmp LB_1684
LB_1683:
	mov r8,unt_1
	jmp LB_1679
LB_1684:
	add r14,1
	jmp LB_1680
LB_1679:
	add rsp,8
	jmp LB_1674
LB_1680:
	mov QWORD [rsp+8*1],r14
	mov r13,QWORD [rsp+16+8*1]
	mov r14,QWORD [rsp+8*1]
	jmp LB_1685
LB_1685
; #24 8'(= {| l |} ) ⊢ 0(<2)◂8'(= {| l |} )
; ∎ 0(<2)◂8'(= {| l |} )
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂8'(= {| l |} ) ⊢ 2'(= a3◂ [ {| l |}] )
; .mov_ptn 0(<2)◂8'(= {| l |} ) ⊢ 2'(= a3◂ [ {| l |}] )
	mov rax,QWORD [rsp-8+8*1]
	mov BYTE [rax+6],0
	mov r8,rax
	add rsp,8
	jmp LB_1686
LB_1686:
	cmp BYTE [r8+6],0
	jnz LB_1674
	POP_GRM_SCC
	ret
LB_1674:
	POP_GRM_FAIL 
	ret
LB_1706:
	movzx rax,BYTE [r8+6]
	jmp QWORD [LB_1709+8*rax]
LB_1709: dq LB_1707,LB_1708
LB_1707:
	jmp LB_1710
LB_1708:
	FREE_LN r8 
	mov r8,QWORD [r8+8]
	call LB_1711
	jmp LB_1710
LB_1710:
	ret
LB_1711:
	movzx rax,BYTE [r8+6]
	jmp QWORD [LB_1714+8*rax]
LB_1714: dq LB_1712,LB_1713
LB_1712:
	push r8
	mov r8,QWORD [r8+8+8*0]
	push r8
	mov r8,QWORD [r8+8+8*0]
	pop r8 
	push r8
	mov r8,QWORD [r8+8+8*1]
	pop r8 
	push r8
	mov r8,QWORD [r8+8+8*2]
	mov rdi,r8
	call free_s8
	pop r8 
	FREE_RCD 3, r8
	pop r8 
	push r8
	mov r8,QWORD [r8+8+8*1]
	call LB_1711
	pop r8 
	FREE_RCD 2, r8
	jmp LB_1715
LB_1713:
	jmp LB_1715
LB_1715:
	ret
LB_1809: ;; #56 { 0'(= a2◂ [ *{ rr{| l |}}] ) 1'(= a2◂ [ *{ rr{| l |}}] ) } ⊢ 0'(= a2◂ [ *{ rr{| l |}}] ) : ({ _lst◂{ _r64 _r64 _s8 } _lst◂{ _r64 _r64 _s8 } }→_lst◂{ _r64 _r64 _s8 })
;; ? 0'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 0(<2)◂{ 2'(= *{ rr{| l |}} ) 3'(= a2◂ [ *{ rr{| l |}}] ) }
	mov rdi,r13
	cmp BYTE [rdi+6],0
	jnz LB_1810
	mov r8, QWORD [r13+8]
	mov r9, QWORD [r13+16]
	mov QWORD [GBG_VCT+8*0],r13
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_RCD 2,rdi
; #56 { 3'(= a2◂ [ *{ rr{| l |}}] ) 1'(= a2◂ [ *{ rr{| l |}}] ) } ⊢ 0'(= a2◂ [ *{ rr{| l |}}] )
	sub rsp,8
	mov QWORD [rsp+8*0],r8
; .mov_ptn2 { 3'(= a2◂ [ *{ rr{| l |}}] ) 1'(= a2◂ [ *{ rr{| l |}}] ) } ⊢ { 0'(= a2◂ [ *{ rr{| l |}}] ) 1'(= a2◂ [ *{ rr{| l |}}] ) }
; .mov_ptn 3'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 0'(= a2◂ [ *{ rr{| l |}}] )
	mov rax,r9
	mov r13,rax
	call LB_1809
	mov r8,QWORD [rsp-8+8*1]
	add rsp,8
; #23 { 2'(= *{ rr{| l |}} ) 0'(= a2◂ [ *{ rr{| l |}}] ) } ⊢ 0(<2)◂{ 2'(= *{ rr{| l |}} ) 0'(= a2◂ [ *{ rr{| l |}}] ) }
; ∎ 0(<2)◂{ 2'(= *{ rr{| l |}} ) 0'(= a2◂ [ *{ rr{| l |}}] ) }
; .mov_ptn2 0(<2)◂{ 2'(= *{ rr{| l |}} ) 0'(= a2◂ [ *{ rr{| l |}}] ) } ⊢ 0'(= a2◂ [ *{ rr{| l |}}] )
	mov r14,r13
; .mov_ptn 0(<2)◂{ 2'(= *{ rr{| l |}} ) 1'(= a2◂ [ *{ rr{| l |}}] ) } ⊢ 0'(= a2◂ [ *{ rr{| l |}}] )
	ALC_RCD 2, rax
	mov r9,rax
	mov rax,r8
	mov QWORD [r9+8+8*0],rax
	mov rax,r14
	mov QWORD [r9+8+8*1],rax
	mov rax,r9
	mov BYTE [rax+6],0
	mov r13,rax
	ret
LB_1810:
;; ?. 0'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 1(<2)◂{ }
; ∎ 1'(= a2◂ [ *{ rr{| l |}}] )
; .mov_ptn2 1'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 0'(= a2◂ [ *{ rr{| l |}}] )
; .mov_ptn 1'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 0'(= a2◂ [ *{ rr{| l |}}] )
	mov rax,r14
	mov r13,rax
	ret
LB_1805: ;; #197 { 0'(= a43◂ [ *{ }] ) 1'(= a43◂ [ *{ }] ) } ⊢ 0'(= a43◂ [ *{ *{ }*{ }}] ) : ({ _t43◂{ } _t43◂{ } }→_t43◂{ { } { } })
;; ? 0'(= a43◂ [ *{ }] ) ⊢ 0(<2)◂0'(= *{ } )
	mov rdi,r13
	cmp BYTE [rdi+6],0
	jnz LB_1806
;; ? 1'(= a43◂ [ *{ }] ) ⊢ 0(<2)◂1'(= *{ } )
	mov rdi,r14
	cmp BYTE [rdi+6],0
	jnz LB_1807
; #196 { 0'(= *{ } ) 1'(= *{ } ) } ⊢ 0(<2)◂{ 0'(= *{ } ) 1'(= *{ } ) }
; ∎ 0(<2)◂{ 0'(= *{ } ) 1'(= *{ } ) }
; .mov_ptn2 0(<2)◂{ 0'(= *{ } ) 1'(= *{ } ) } ⊢ 0'(= a43◂ [ *{ *{ }*{ }}] )
	mov r8,r13
; .mov_ptn 0(<2)◂{ 2'(= *{ } ) 1'(= *{ } ) } ⊢ 0'(= a43◂ [ *{ *{ }*{ }}] )
	ALC_RCD 2, rax
	mov r9,rax
	mov rax,r8
	mov QWORD [r9+8+8*0],rax
	mov rax,r14
	mov QWORD [r9+8+8*1],rax
	mov rax,r9
	mov BYTE [rax+6],0
	mov r13,rax
	ret
LB_1807:
;; ?. 1'(= a43◂ [ *{ }] ) ⊢ 1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] )
	mov QWORD [GBG_VCT+8*0],rdi
	mov r8,QWORD [rdi+8]
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_LN rdi
; #195 2'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] )
; ∎ 1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] )
; .dlt.ptn 0'(= *{ } )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 0'(= a43◂ [ *{ *{ }*{ }}] )
; .mov_ptn 1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 0'(= a43◂ [ *{ *{ }*{ }}] )
	mov rax,r8
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],1
	mov QWORD [rax+8],rdi
	mov r13,rax
	ret
LB_1806:
;; ?. 0'(= a43◂ [ *{ }] ) ⊢ 1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] )
	mov QWORD [GBG_VCT+8*0],rdi
	mov r8,QWORD [rdi+8]
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_LN rdi
;; ? 1'(= a43◂ [ *{ }] ) ⊢ 0(<2)◂1'(= *{ } )
	mov rdi,r14
	cmp BYTE [rdi+6],0
	jnz LB_1808
; #195 2'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] )
; ∎ 1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] )
; .dlt.ptn 1'(= *{ } )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 0'(= a43◂ [ *{ *{ }*{ }}] )
; .mov_ptn 1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 0'(= a43◂ [ *{ *{ }*{ }}] )
	mov rax,r8
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],1
	mov QWORD [rax+8],rdi
	mov r13,rax
	ret
LB_1808:
;; ?. 1'(= a43◂ [ *{ }] ) ⊢ 1(<2)◂0'(= a2◂ [ *{ rr{| l |}}] )
	mov QWORD [GBG_VCT+8*0],rdi
	mov r13,QWORD [rdi+8]
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_LN rdi
; #56 { 2'(= a2◂ [ *{ rr{| l |}}] ) 0'(= a2◂ [ *{ rr{| l |}}] ) } ⊢ 0'(= a2◂ [ *{ rr{| l |}}] )
; .mov_ptn2 { 2'(= a2◂ [ *{ rr{| l |}}] ) 0'(= a2◂ [ *{ rr{| l |}}] ) } ⊢ { 0'(= a2◂ [ *{ rr{| l |}}] ) 1'(= a2◂ [ *{ rr{| l |}}] ) }
; .mov_ptn 0'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 1'(= a2◂ [ *{ rr{| l |}}] )
	mov rax,r13
	mov r14,rax
; .mov_ptn 2'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 0'(= a2◂ [ *{ rr{| l |}}] )
	mov rax,r8
	mov r13,rax
	call LB_1809
; #195 0'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 1(<2)◂0'(= a2◂ [ *{ rr{| l |}}] )
; ∎ 1(<2)◂0'(= a2◂ [ *{ rr{| l |}}] )
; .mov_ptn2 1(<2)◂0'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 0'(= a43◂ [ *{ *{ }*{ }}] )
	mov r14,r13
; .mov_ptn 1(<2)◂1'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 0'(= a43◂ [ *{ *{ }*{ }}] )
	mov rax,r14
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],1
	mov QWORD [rax+8],rdi
	mov r13,rax
	ret
ETR_219:
	mov r9,0x0000_ffff_ffff_ffff
	and r9,[r13]
	call GRM_219
	ret
GRM_219:
	PUSH_GRM
	jmp LB_1689
LB_1688:
	add r14,1 
LB_1689:
	cmp r14,r9
	jge LB_1690
	JZ_LINE_SPC BYTE [r13+8+r14], LB_1688
LB_1690
	lea rax,[r14+1]
	cmp rax,r9
	jg LB_1693
	jmp LB_1694
LB_1693:
	mov r8,unt_1
	jmp LB_1691
LB_1694:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],10
	jnz LB_1695
	jmp LB_1696
LB_1695:
	mov r8,unt_1
	jmp LB_1691
LB_1696:
	add r14,1
	jmp LB_1692
LB_1691:
	add rsp,0
	jmp LB_1687
LB_1692:
	jmp LB_1698
LB_1697:
	add r14,1 
LB_1698:
	cmp r14,r9
	jge LB_1699
	JZ_LINE_SPC BYTE [r13+8+r14], LB_1697
LB_1699
	call GRM_219
	cmp BYTE [r8+6],0
	jnz LB_1702
	jmp LB_1703
LB_1702:
	jmp LB_1700
LB_1703:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a43◂ [ *{ }] ) ⊢ 8'(= a43◂ [ *{ }] )
; .mov_ptn 2'(= a43◂ [ *{ }] ) ⊢ 8'(= a43◂ [ *{ }] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_1701
LB_1700:
	add rsp,0
	POP_GRM_FAIL
	ret
LB_1701:
	mov QWORD [rsp+8*1],r14
	mov r13,QWORD [rsp+16+8*1]
	mov r14,QWORD [rsp+8*1]
	jmp LB_1704
LB_1704
; #196 { } ⊢ 0(<2)◂{ }
; #24 0(<2)◂{ } ⊢ 0(<2)◂0(<2)◂{ }
; ∎ 0(<2)◂0(<2)◂{ }
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 8'(= a43◂ [ *{ }] )
	mov rdi,QWORD [rsp-8+8*1]
	C_PUSH_REGS
	mov r8,rdi
	call LB_1706
	C_POP_REGS
; .mov_ptn2 0(<2)◂0(<2)◂{ } ⊢ 2'(= a3◂ [ a43◂ [ *{ }]] )
; .mov_ptn 0(<2)◂0(<2)◂{ } ⊢ 2'(= a3◂ [ a43◂ [ *{ }]] )
	mov rax,unt 
	mov rax,unt_0
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,8
	jmp LB_1705
LB_1705:
	cmp BYTE [r8+6],0
	jnz LB_1687
	POP_GRM_SCC
	ret
LB_1687:
	RB_GRM
	jmp LB_1718
LB_1717:
	add r14,1 
LB_1718:
	cmp r14,r9
	jge LB_1719
	JZ_LINE_SPC BYTE [r13+8+r14], LB_1717
LB_1719
	lea rax,[r14+2]
	cmp rax,r9
	jg LB_1722
	jmp LB_1723
LB_1722:
	mov r8,unt_1
	jmp LB_1720
LB_1723:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],35
	jnz LB_1724
	cmp BYTE [rdi+1],35
	jnz LB_1724
	jmp LB_1725
LB_1724:
	mov r8,unt_1
	jmp LB_1720
LB_1725:
	add r14,2
	jmp LB_1721
LB_1720:
	add rsp,0
	jmp LB_1716
LB_1721:
	jmp LB_1727
LB_1726:
	add r14,1 
LB_1727:
	cmp r14,r9
	jge LB_1728
	JZ_LINE_SPC BYTE [r13+8+r14], LB_1726
LB_1728
	call GRM_222
	cmp BYTE [r8+6],0
	jnz LB_1731
	jmp LB_1732
LB_1731:
	jmp LB_1729
LB_1732:
	sub rsp,16
; .mov_ptn2 2'(= *{ rr} ) ⊢ { 8'(= r ) 9'(= r ) }
; .mov_ptn 2'(= *{ rr} ) ⊢ { 8'(= r ) 9'(= r ) }
	mov r10, QWORD [r8+8]
	mov QWORD [rsp-8+8*2],r10
	mov r11, QWORD [r8+16]
	mov QWORD [rsp-8+8*1],r11
	mov rdi,r8
	FREE_RCD 2,rdi
	jmp LB_1730
LB_1729:
	add rsp,0
	POP_GRM_FAIL
	ret
LB_1730:
	jmp LB_1734
LB_1733:
	add r14,1 
LB_1734:
	cmp r14,r9
	jge LB_1735
	JZ_LINE_SPC BYTE [r13+8+r14], LB_1733
LB_1735
	call GRM_219
	cmp BYTE [r8+6],0
	jnz LB_1738
	jmp LB_1739
LB_1738:
	jmp LB_1736
LB_1739:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a43◂ [ *{ }] ) ⊢ 10'(= a43◂ [ *{ }] )
; .mov_ptn 2'(= a43◂ [ *{ }] ) ⊢ 10'(= a43◂ [ *{ }] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_1737
LB_1736:
	add rsp,16
	POP_GRM_FAIL
	ret
LB_1737:
	mov QWORD [rsp+8*3],r14
	mov r13,QWORD [rsp+16+8*3]
	mov r14,QWORD [rsp+8*3]
	jmp LB_1740
LB_1740
; #196 { } ⊢ 0(<2)◂{ }
; #24 0(<2)◂{ } ⊢ 0(<2)◂0(<2)◂{ }
; ∎ 0(<2)◂0(<2)◂{ }
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 10'(= a43◂ [ *{ }] )
	mov rdi,QWORD [rsp-8+8*1]
	C_PUSH_REGS
	mov r8,rdi
	call LB_1706
	C_POP_REGS
; .dlt.ptn { 8'(= r ) 9'(= r ) }
	mov rdi,QWORD [rsp-8+8*3]
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
	mov rdi,QWORD [rsp-8+8*2]
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂0(<2)◂{ } ⊢ 2'(= a3◂ [ a43◂ [ *{ }]] )
; .mov_ptn 0(<2)◂0(<2)◂{ } ⊢ 2'(= a3◂ [ a43◂ [ *{ }]] )
	mov rax,unt 
	mov rax,unt_0
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,24
	jmp LB_1741
LB_1741:
	cmp BYTE [r8+6],0
	jnz LB_1716
	POP_GRM_SCC
	ret
LB_1716:
	RB_GRM
	jmp LB_1744
LB_1743:
	add r14,1 
LB_1744:
	cmp r14,r9
	jge LB_1745
	JZ_LINE_SPC BYTE [r13+8+r14], LB_1743
LB_1745
	lea rax,[r14+2]
	cmp rax,r9
	jg LB_1748
	jmp LB_1749
LB_1748:
	mov r8,unt_1
	jmp LB_1746
LB_1749:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],92
	jnz LB_1750
	cmp BYTE [rdi+1],92
	jnz LB_1750
	jmp LB_1751
LB_1750:
	mov r8,unt_1
	jmp LB_1746
LB_1751:
	add r14,2
	jmp LB_1747
LB_1746:
	add rsp,0
	jmp LB_1742
LB_1747:
	jmp LB_1753
LB_1752:
	add r14,1 
LB_1753:
	cmp r14,r9
	jge LB_1754
	JZ_LINE_SPC BYTE [r13+8+r14], LB_1752
LB_1754
	call GRM_222
	cmp BYTE [r8+6],0
	jnz LB_1757
	jmp LB_1758
LB_1757:
	jmp LB_1755
LB_1758:
	sub rsp,16
; .mov_ptn2 2'(= *{ rr} ) ⊢ { 8'(= r ) 9'(= r ) }
; .mov_ptn 2'(= *{ rr} ) ⊢ { 8'(= r ) 9'(= r ) }
	mov r10, QWORD [r8+8]
	mov QWORD [rsp-8+8*2],r10
	mov r11, QWORD [r8+16]
	mov QWORD [rsp-8+8*1],r11
	mov rdi,r8
	FREE_RCD 2,rdi
	jmp LB_1756
LB_1755:
	add rsp,0
	POP_GRM_FAIL
	ret
LB_1756:
	jmp LB_1760
LB_1759:
	add r14,1 
LB_1760:
	cmp r14,r9
	jge LB_1761
	JZ_LINE_SPC BYTE [r13+8+r14], LB_1759
LB_1761
	call GRM_219
	cmp BYTE [r8+6],0
	jnz LB_1764
	jmp LB_1765
LB_1764:
	jmp LB_1762
LB_1765:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a43◂ [ *{ }] ) ⊢ 10'(= a43◂ [ *{ }] )
; .mov_ptn 2'(= a43◂ [ *{ }] ) ⊢ 10'(= a43◂ [ *{ }] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_1763
LB_1762:
	add rsp,16
	POP_GRM_FAIL
	ret
LB_1763:
	mov QWORD [rsp+8*3],r14
	mov r13,QWORD [rsp+16+8*3]
	mov r14,QWORD [rsp+8*3]
	jmp LB_1766
LB_1766
; #196 { } ⊢ 0(<2)◂{ }
; #24 0(<2)◂{ } ⊢ 0(<2)◂0(<2)◂{ }
; ∎ 0(<2)◂0(<2)◂{ }
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 10'(= a43◂ [ *{ }] )
	mov rdi,QWORD [rsp-8+8*1]
	C_PUSH_REGS
	mov r8,rdi
	call LB_1706
	C_POP_REGS
; .dlt.ptn { 8'(= r ) 9'(= r ) }
	mov rdi,QWORD [rsp-8+8*3]
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
	mov rdi,QWORD [rsp-8+8*2]
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂0(<2)◂{ } ⊢ 2'(= a3◂ [ a43◂ [ *{ }]] )
; .mov_ptn 0(<2)◂0(<2)◂{ } ⊢ 2'(= a3◂ [ a43◂ [ *{ }]] )
	mov rax,unt 
	mov rax,unt_0
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,24
	jmp LB_1767
LB_1767:
	cmp BYTE [r8+6],0
	jnz LB_1742
	POP_GRM_SCC
	ret
LB_1742:
	RB_GRM
	jmp LB_1770
LB_1769:
	add r14,1 
LB_1770:
	cmp r14,r9
	jge LB_1771
	JZ_LINE_SPC BYTE [r13+8+r14], LB_1769
LB_1771
	lea rax,[r14+2]
	cmp rax,r9
	jg LB_1774
	jmp LB_1775
LB_1774:
	mov r8,unt_1
	jmp LB_1772
LB_1775:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],92
	jnz LB_1776
	cmp BYTE [rdi+1],91
	jnz LB_1776
	jmp LB_1777
LB_1776:
	mov r8,unt_1
	jmp LB_1772
LB_1777:
	add r14,2
	jmp LB_1773
LB_1772:
	add rsp,0
	jmp LB_1768
LB_1773:
	PUSH_GRM
	jmp LB_1781
LB_1780:
	add r14,1 
LB_1781:
	cmp r14,r9
	jge LB_1782
	JZ_LINE_SPC BYTE [r13+8+r14], LB_1780
LB_1782
	lea rax,[r14+1]
	cmp rax,r9
	jg LB_1785
	jmp LB_1786
LB_1785:
	mov r8,unt_1
	jmp LB_1783
LB_1786:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],10
	jnz LB_1787
	jmp LB_1788
LB_1787:
	mov r8,unt_1
	jmp LB_1783
LB_1788:
	add r14,1
	jmp LB_1784
LB_1783:
	add rsp,0
	jmp LB_1779
LB_1784:
	jmp LB_1790
LB_1789:
	add r14,1 
LB_1790:
	cmp r14,r9
	jge LB_1791
	JZ_LINE_SPC BYTE [r13+8+r14], LB_1789
LB_1791
	call GRM_220
	cmp BYTE [r8+6],0
	jnz LB_1794
	jmp LB_1795
LB_1794:
	jmp LB_1792
LB_1795:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a43◂ [ *{ }] ) ⊢ 8'(= a43◂ [ *{ }] )
; .mov_ptn 2'(= a43◂ [ *{ }] ) ⊢ 8'(= a43◂ [ *{ }] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_1793
LB_1792:
	add rsp,0
	jmp LB_1779
LB_1793:
	jmp LB_1797
LB_1796:
	add r14,1 
LB_1797:
	cmp r14,r9
	jge LB_1798
	JZ_LINE_SPC BYTE [r13+8+r14], LB_1796
LB_1798
	call GRM_219
	cmp BYTE [r8+6],0
	jnz LB_1801
	jmp LB_1802
LB_1801:
	jmp LB_1799
LB_1802:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a43◂ [ *{ }] ) ⊢ 9'(= a43◂ [ *{ }] )
; .mov_ptn 2'(= a43◂ [ *{ }] ) ⊢ 9'(= a43◂ [ *{ }] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_1800
LB_1799:
	add rsp,8
	jmp LB_1779
LB_1800:
	mov QWORD [rsp+8*2],r14
	mov r13,QWORD [rsp+16+8*2]
	mov r14,QWORD [rsp+8*2]
	jmp LB_1803
LB_1803
; #197 { 8'(= a43◂ [ *{ }] ) 9'(= a43◂ [ *{ }] ) } ⊢ 2'(= a43◂ [ *{ *{ }*{ }}] )
	sub rsp,16
	mov QWORD [rsp+8*0],r13
	mov QWORD [rsp+8*1],r14
; .mov_ptn2 { 8'(= a43◂ [ *{ }] ) 9'(= a43◂ [ *{ }] ) } ⊢ { 0'(= a43◂ [ *{ }] ) 1'(= a43◂ [ *{ }] ) }
; .mov_ptn 9'(= a43◂ [ *{ }] ) ⊢ 1'(= a43◂ [ *{ }] )
	mov rax,QWORD [rsp-8+8*3]
	mov r14,rax
; .mov_ptn 8'(= a43◂ [ *{ }] ) ⊢ 0'(= a43◂ [ *{ }] )
	mov rax,QWORD [rsp-8+8*4]
	mov r13,rax
	call LB_1805
	mov r14,QWORD [rsp-8+8*2]
	mov r8,r13
	mov r13,QWORD [rsp-8+8*1]
	add rsp,32
;; ? 2'(= a43◂ [ *{ *{ }*{ }}] ) ⊢ 0(<2)◂{ 3'(= *{ } ) 4'(= *{ } ) }
	mov rdi,r8
	cmp BYTE [rdi+6],0
	jnz LB_1811
	mov r9, QWORD [r8+8]
	mov r10, QWORD [r8+16]
	mov QWORD [GBG_VCT+8*0],r8
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_RCD 2,rdi
; #196 { } ⊢ 0(<2)◂{ }
; #24 0(<2)◂{ } ⊢ 0(<2)◂0(<2)◂{ }
; ∎ 0(<2)◂0(<2)◂{ }
; .dlt.ptn 4'(= *{ } )
	mov rdi,r10
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 3'(= *{ } )
	mov rdi,r9
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂0(<2)◂{ } ⊢ 2'(= a3◂ [ a43◂ [ *{ }]] )
; .mov_ptn 0(<2)◂0(<2)◂{ } ⊢ 2'(= a3◂ [ a43◂ [ *{ }]] )
	mov rax,unt 
	mov rax,unt_0
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	jmp LB_1804
LB_1811:
;; ?. 2'(= a43◂ [ *{ *{ }*{ }}] ) ⊢ 1(<2)◂3'(= a2◂ [ *{ rr{| l |}}] )
	mov QWORD [GBG_VCT+8*0],rdi
	mov r9,QWORD [rdi+8]
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_LN rdi
; #199 3'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 2'(= {| l |} )
	sub rsp,16
	mov QWORD [rsp+8*0],r13
	mov QWORD [rsp+8*1],r14
; .mov_ptn2 3'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 0'(= a2◂ [ *{ rr{| l |}}] )
; .mov_ptn 3'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 0'(= a2◂ [ *{ rr{| l |}}] )
	mov rax,r9
	mov r13,rax
	call ETR_199
	mov r14,QWORD [rsp-8+8*2]
	mov r8,r13
	mov r13,QWORD [rsp-8+8*1]
	add rsp,16
; #10 2'(= {| l |} ) ⊢ 2'(= {| l |} )
	mov rdi,fmt_emt
	call emt_stg
	mov rdi,r8
	C_PUSH_REGS
	mov r8,rdi
	mov rdi,r8
	call emt_s8
	C_POP_REGS
	mov rdi,fmt_nl
	call emt_stg
	jmp LB_1812
LB_1812:
	mov rdi,LB_1813
	call emt_stg 
	jmp err
LB_1804:
	cmp BYTE [r8+6],0
	jnz LB_1779
	POP_GRM_SCC
	jmp LB_1778
LB_1779:
	RB_GRM
	mov QWORD [rsp+8*0],r14
	mov r13,QWORD [rsp+16+8*0]
	mov r14,QWORD [rsp+8*0]
	jmp LB_1815
LB_1815
; » _^ .. ⊢ ..
; .. //
	mov rdi,0
	sub rsp,128
	push rdi 
	lea rdi,[rsp+8]
	mov rdx,r13
	mov rsi,fmt_d
 xor rax,rax
	C_CALL_SF sprintf
	pop rdi
	add rdi,rax 
	push rax 
	sub rsp,128
	push rdi 
	lea rdi,[rsp+8]
	mov rdx,r14
	mov rsi,fmt_d
 xor rax,rax
	C_CALL_SF sprintf
	pop rdi
	add rdi,rax 
	push rax 
	add rdi,11
	push rdi 
	call mlc_s8
	pop rdi
	mov r8,rax
	lea rdi,[rax+7+rdi]
	std 
	mov QWORD [tmp],rcx 
	lea rsi,[LB_1817+2-1]
	mov rcx,2
	rep movsb
	pop rcx
	lea rsi,[rsp+rcx-1]
	rep movsb
	add rsp,128
	lea rsi,[LB_1818+1-1]
	mov rcx,1
	rep movsb
	pop rcx
	lea rsi,[rsp+rcx-1]
	rep movsb
	add rsp,128
	lea rsi,[LB_1819+8-1]
	mov rcx,8
	rep movsb
	mov rcx,QWORD [tmp] 
; #10 2'(= {| l |} ) ⊢ 2'(= {| l |} )
	mov rdi,fmt_emt
	call emt_stg
	mov rdi,r8
	C_PUSH_REGS
	mov r8,rdi
	mov rdi,r8
	call emt_s8
	C_POP_REGS
	mov rdi,fmt_nl
	call emt_stg
	jmp LB_1820
LB_1820:
	mov rdi,LB_1821
	call emt_stg 
	jmp err
LB_1816:
	cmp BYTE [r8+6],0
	jnz LB_1814
	POP_GRM_SCC
	jmp LB_1778
LB_1814:
	POP_GRM_FAIL 
	jmp LB_1778
LB_1778:
	cmp BYTE [r8+6],0
	jnz LB_1822
	jmp LB_1823
LB_1822:
	add rsp,0
	POP_GRM_FAIL
	ret
LB_1823:
	mov QWORD [rsp+8*0],r14
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi 
; .mov_ptn2 2'(= a43◂ [ *{ }] ) ⊢ 3'(= a43◂ [ *{ }] )
	mov r10,r9
; .mov_ptn 2'(= a43◂ [ *{ }] ) ⊢ 3'(= a43◂ [ *{ }] )
	mov rax,r8
	mov r9,rax
	mov r13,QWORD [rsp+16+8*0]
	mov r14,QWORD [rsp+8*0]
	jmp LB_1824
LB_1824
; #24 3'(= a43◂ [ *{ }] ) ⊢ 0(<2)◂3'(= a43◂ [ *{ }] )
; ∎ 0(<2)◂3'(= a43◂ [ *{ }] )
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂3'(= a43◂ [ *{ }] ) ⊢ 2'(= a3◂ [ a43◂ [ *{ }]] )
; .mov_ptn 0(<2)◂3'(= a43◂ [ *{ }] ) ⊢ 2'(= a3◂ [ a43◂ [ *{ }]] )
	mov rax,r9
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	jmp LB_1825
LB_1825:
	cmp BYTE [r8+6],0
	jnz LB_1768
	POP_GRM_SCC
	ret
LB_1768:
	RB_GRM
	mov QWORD [rsp+8*0],r14
	mov r13,QWORD [rsp+16+8*0]
	mov r14,QWORD [rsp+8*0]
	jmp LB_1827
LB_1827
; #196 { } ⊢ 0(<2)◂{ }
; #24 0(<2)◂{ } ⊢ 0(<2)◂0(<2)◂{ }
; ∎ 0(<2)◂0(<2)◂{ }
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂0(<2)◂{ } ⊢ 2'(= a3◂ [ a43◂ [ *{ }]] )
; .mov_ptn 0(<2)◂0(<2)◂{ } ⊢ 2'(= a3◂ [ a43◂ [ *{ }]] )
	mov rax,unt 
	mov rax,unt_0
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	jmp LB_1828
LB_1828:
	cmp BYTE [r8+6],0
	jnz LB_1826
	POP_GRM_SCC
	ret
LB_1826:
	POP_GRM_FAIL 
	ret
ETR_220:
	mov r9,0x0000_ffff_ffff_ffff
	and r9,[r13]
	call GRM_220
	ret
GRM_220:
	PUSH_GRM
	jmp LB_1831
LB_1830:
	add r14,1 
LB_1831:
	cmp r14,r9
	jge LB_1832
	JZ_LINE_SPC BYTE [r13+8+r14], LB_1830
LB_1832
	lea rax,[r14+2]
	cmp rax,r9
	jg LB_1835
	jmp LB_1836
LB_1835:
	mov r8,unt_1
	jmp LB_1833
LB_1836:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],92
	jnz LB_1837
	cmp BYTE [rdi+1],91
	jnz LB_1837
	jmp LB_1838
LB_1837:
	mov r8,unt_1
	jmp LB_1833
LB_1838:
	add r14,2
	jmp LB_1834
LB_1833:
	add rsp,0
	jmp LB_1829
LB_1834:
	PUSH_GRM
	jmp LB_1842
LB_1841:
	add r14,1 
LB_1842:
	cmp r14,r9
	jge LB_1843
	JZ_LINE_SPC BYTE [r13+8+r14], LB_1841
LB_1843
	lea rax,[r14+1]
	cmp rax,r9
	jg LB_1846
	jmp LB_1847
LB_1846:
	mov r8,unt_1
	jmp LB_1844
LB_1847:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],10
	jnz LB_1848
	jmp LB_1849
LB_1848:
	mov r8,unt_1
	jmp LB_1844
LB_1849:
	add r14,1
	jmp LB_1845
LB_1844:
	add rsp,0
	jmp LB_1840
LB_1845:
	jmp LB_1851
LB_1850:
	add r14,1 
LB_1851:
	cmp r14,r9
	jge LB_1852
	JZ_LINE_SPC BYTE [r13+8+r14], LB_1850
LB_1852
	call GRM_220
	cmp BYTE [r8+6],0
	jnz LB_1855
	jmp LB_1856
LB_1855:
	jmp LB_1853
LB_1856:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a43◂ [ *{ }] ) ⊢ 8'(= a43◂ [ *{ }] )
; .mov_ptn 2'(= a43◂ [ *{ }] ) ⊢ 8'(= a43◂ [ *{ }] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_1854
LB_1853:
	add rsp,0
	jmp LB_1840
LB_1854:
	jmp LB_1858
LB_1857:
	add r14,1 
LB_1858:
	cmp r14,r9
	jge LB_1859
	JZ_LINE_SPC BYTE [r13+8+r14], LB_1857
LB_1859
	call GRM_220
	cmp BYTE [r8+6],0
	jnz LB_1862
	jmp LB_1863
LB_1862:
	jmp LB_1860
LB_1863:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a43◂ [ *{ }] ) ⊢ 9'(= a43◂ [ *{ }] )
; .mov_ptn 2'(= a43◂ [ *{ }] ) ⊢ 9'(= a43◂ [ *{ }] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_1861
LB_1860:
	add rsp,8
	jmp LB_1840
LB_1861:
	mov QWORD [rsp+8*2],r14
	mov r13,QWORD [rsp+16+8*2]
	mov r14,QWORD [rsp+8*2]
	jmp LB_1864
LB_1864
; #197 { 8'(= a43◂ [ *{ }] ) 9'(= a43◂ [ *{ }] ) } ⊢ 2'(= a43◂ [ *{ *{ }*{ }}] )
	sub rsp,16
	mov QWORD [rsp+8*0],r13
	mov QWORD [rsp+8*1],r14
; .mov_ptn2 { 8'(= a43◂ [ *{ }] ) 9'(= a43◂ [ *{ }] ) } ⊢ { 0'(= a43◂ [ *{ }] ) 1'(= a43◂ [ *{ }] ) }
; .mov_ptn 9'(= a43◂ [ *{ }] ) ⊢ 1'(= a43◂ [ *{ }] )
	mov rax,QWORD [rsp-8+8*3]
	mov r14,rax
; .mov_ptn 8'(= a43◂ [ *{ }] ) ⊢ 0'(= a43◂ [ *{ }] )
	mov rax,QWORD [rsp-8+8*4]
	mov r13,rax
	call LB_1805
	mov r14,QWORD [rsp-8+8*2]
	mov r8,r13
	mov r13,QWORD [rsp-8+8*1]
	add rsp,32
;; ? 2'(= a43◂ [ *{ *{ }*{ }}] ) ⊢ 0(<2)◂{ 3'(= *{ } ) 4'(= *{ } ) }
	mov rdi,r8
	cmp BYTE [rdi+6],0
	jnz LB_1866
	mov r9, QWORD [r8+8]
	mov r10, QWORD [r8+16]
	mov QWORD [GBG_VCT+8*0],r8
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_RCD 2,rdi
; #196 { } ⊢ 0(<2)◂{ }
; #24 0(<2)◂{ } ⊢ 0(<2)◂0(<2)◂{ }
; ∎ 0(<2)◂0(<2)◂{ }
; .dlt.ptn 4'(= *{ } )
	mov rdi,r10
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 3'(= *{ } )
	mov rdi,r9
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂0(<2)◂{ } ⊢ 2'(= a3◂ [ a43◂ [ *{ }]] )
; .mov_ptn 0(<2)◂0(<2)◂{ } ⊢ 2'(= a3◂ [ a43◂ [ *{ }]] )
	mov rax,unt 
	mov rax,unt_0
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	jmp LB_1865
LB_1866:
;; ?. 2'(= a43◂ [ *{ *{ }*{ }}] ) ⊢ 1(<2)◂3'(= a2◂ [ *{ rr{| l |}}] )
	mov QWORD [GBG_VCT+8*0],rdi
	mov r9,QWORD [rdi+8]
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_LN rdi
; #199 3'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 2'(= {| l |} )
	sub rsp,16
	mov QWORD [rsp+8*0],r13
	mov QWORD [rsp+8*1],r14
; .mov_ptn2 3'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 0'(= a2◂ [ *{ rr{| l |}}] )
; .mov_ptn 3'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 0'(= a2◂ [ *{ rr{| l |}}] )
	mov rax,r9
	mov r13,rax
	call ETR_199
	mov r14,QWORD [rsp-8+8*2]
	mov r8,r13
	mov r13,QWORD [rsp-8+8*1]
	add rsp,16
; #10 2'(= {| l |} ) ⊢ 2'(= {| l |} )
	mov rdi,fmt_emt
	call emt_stg
	mov rdi,r8
	C_PUSH_REGS
	mov r8,rdi
	mov rdi,r8
	call emt_s8
	C_POP_REGS
	mov rdi,fmt_nl
	call emt_stg
	jmp LB_1867
LB_1867:
	mov rdi,LB_1868
	call emt_stg 
	jmp err
LB_1865:
	cmp BYTE [r8+6],0
	jnz LB_1840
	POP_GRM_SCC
	jmp LB_1839
LB_1840:
	RB_GRM
	mov QWORD [rsp+8*0],r14
	mov r13,QWORD [rsp+16+8*0]
	mov r14,QWORD [rsp+8*0]
	jmp LB_1870
LB_1870
; #22 { } ⊢ 1(<2)◂{ }
; $ %[ "blk_cmt 0" ] ⊢ %[ "blk_cmt 0" ]
; #23 { { 0'(= r ) 1'(= r ) %[ "blk_cmt 0" ] } 1(<2)◂{ } } ⊢ 0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "blk_cmt 0" ] } 1(<2)◂{ } }
; #195 0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "blk_cmt 0" ] } 1(<2)◂{ } } ⊢ 1(<2)◂0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "blk_cmt 0" ] } 1(<2)◂{ } }
; #24 1(<2)◂0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "blk_cmt 0" ] } 1(<2)◂{ } } ⊢ 0(<2)◂1(<2)◂0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "blk_cmt 0" ] } 1(<2)◂{ } }
; ∎ 0(<2)◂1(<2)◂0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "blk_cmt 0" ] } 1(<2)◂{ } }
; .mov_ptn2 0(<2)◂1(<2)◂0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "blk_cmt 0" ] } 1(<2)◂{ } } ⊢ 2'(= a3◂ [ a43◂ [ *{ }]] )
; .mov_ptn 0(<2)◂1(<2)◂0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "blk_cmt 0" ] } 1(<2)◂{ } } ⊢ 2'(= a3◂ [ a43◂ [ *{ }]] )
	ALC_RCD 2, rax
	mov r9,rax
	ALC_RCD 3, rax
	mov r10,rax
	mov rax,r13
	mov QWORD [r10+8+8*0],rax
	mov rax,r14
	mov QWORD [r10+8+8*1],rax
	mov rsi,1  
	mov rdi,24
	xor rax,rax 
	C_CALL_SF calloc
	mov QWORD [rax],9
	mov BYTE [rax+8+0],98
	mov BYTE [rax+8+1],108
	mov BYTE [rax+8+2],107
	mov BYTE [rax+8+3],95
	mov BYTE [rax+8+4],99
	mov BYTE [rax+8+5],109
	mov BYTE [rax+8+6],116
	mov BYTE [rax+8+7],32
	mov BYTE [rax+8+8],48
	mov QWORD [r10+8+8*2],rax
	mov rax,r10
	mov QWORD [r9+8+8*0],rax
	mov rax,unt 
	mov rax,unt_1
	mov QWORD [r9+8+8*1],rax
	mov rax,r9
	mov BYTE [rax+6],0
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],1
	mov QWORD [rax+8],rdi
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	jmp LB_1871
LB_1871:
	cmp BYTE [r8+6],0
	jnz LB_1869
	POP_GRM_SCC
	jmp LB_1839
LB_1869:
	POP_GRM_FAIL 
	jmp LB_1839
LB_1839:
	cmp BYTE [r8+6],0
	jnz LB_1872
	jmp LB_1873
LB_1872:
	add rsp,0
	POP_GRM_FAIL
	ret
LB_1873:
	mov QWORD [rsp+8*0],r14
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi 
; .mov_ptn2 2'(= a43◂ [ *{ }] ) ⊢ 3'(= a43◂ [ *{ }] )
	mov r10,r9
; .mov_ptn 2'(= a43◂ [ *{ }] ) ⊢ 3'(= a43◂ [ *{ }] )
	mov rax,r8
	mov r9,rax
	mov r13,QWORD [rsp+16+8*0]
	mov r14,QWORD [rsp+8*0]
	jmp LB_1874
LB_1874
; #24 3'(= a43◂ [ *{ }] ) ⊢ 0(<2)◂3'(= a43◂ [ *{ }] )
; ∎ 0(<2)◂3'(= a43◂ [ *{ }] )
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂3'(= a43◂ [ *{ }] ) ⊢ 2'(= a3◂ [ a43◂ [ *{ }]] )
; .mov_ptn 0(<2)◂3'(= a43◂ [ *{ }] ) ⊢ 2'(= a3◂ [ a43◂ [ *{ }]] )
	mov rax,r9
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	jmp LB_1875
LB_1875:
	cmp BYTE [r8+6],0
	jnz LB_1829
	POP_GRM_SCC
	ret
LB_1829:
	RB_GRM
	jmp LB_1878
LB_1877:
	add r14,1 
LB_1878:
	cmp r14,r9
	jge LB_1879
	JZ_LINE_SPC BYTE [r13+8+r14], LB_1877
LB_1879
	lea rax,[r14+2]
	cmp rax,r9
	jg LB_1882
	jmp LB_1883
LB_1882:
	mov r8,unt_1
	jmp LB_1880
LB_1883:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],92
	jnz LB_1884
	cmp BYTE [rdi+1],93
	jnz LB_1884
	jmp LB_1885
LB_1884:
	mov r8,unt_1
	jmp LB_1880
LB_1885:
	add r14,2
	jmp LB_1881
LB_1880:
	add rsp,0
	jmp LB_1876
LB_1881:
	PUSH_GRM
	jmp LB_1889
LB_1888:
	add r14,1 
LB_1889:
	cmp r14,r9
	jge LB_1890
	JZ_LINE_SPC BYTE [r13+8+r14], LB_1888
LB_1890
	lea rax,[r14+1]
	cmp rax,r9
	jg LB_1893
	jmp LB_1894
LB_1893:
	mov r8,unt_1
	jmp LB_1891
LB_1894:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],10
	jnz LB_1895
	jmp LB_1896
LB_1895:
	mov r8,unt_1
	jmp LB_1891
LB_1896:
	add r14,1
	jmp LB_1892
LB_1891:
	add rsp,0
	jmp LB_1887
LB_1892:
	mov QWORD [rsp+8*0],r14
	mov r13,QWORD [rsp+16+8*0]
	mov r14,QWORD [rsp+8*0]
	jmp LB_1897
LB_1897
; #24 { } ⊢ 0(<2)◂{ }
; ∎ 0(<2)◂{ }
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂{ } ⊢ 2'(= a3◂ [ *{ }] )
; .mov_ptn 0(<2)◂{ } ⊢ 2'(= a3◂ [ *{ }] )
	mov rax,unt 
	mov rax,unt_0
	mov r8,rax
	jmp LB_1898
LB_1898:
	cmp BYTE [r8+6],0
	jnz LB_1887
	POP_GRM_SCC
	jmp LB_1886
LB_1887:
	RB_GRM
	jmp LB_1901
LB_1900:
	add r14,1 
LB_1901:
	cmp r14,r9
	jge LB_1902
	JZ_LINE_SPC BYTE [r13+8+r14], LB_1900
LB_1902
	cmp r14,r9
	jge LB_1905
	jmp LB_1906
LB_1905:
	mov r8,unt_1 
	jmp LB_1903
LB_1906:
	movzx rdi,BYTE [r13+8+r14]
	push rdi 
	add r14,1 
	jmp LB_1904
LB_1903:
	add rsp,0
	POP_GRM_FAIL
	jmp LB_1886
LB_1904:
	mov QWORD [rsp+8*1],r14
	mov r13,QWORD [rsp+16+8*1]
	mov r14,QWORD [rsp+8*1]
	jmp LB_1907
LB_1907
; #25 { } ⊢ 1(<2)◂{ }
; ∎ 1(<2)◂{ }
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 8'(= r )
	mov rdi,QWORD [rsp-8+8*1]
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 1(<2)◂{ } ⊢ 2'(= a3◂ [ *{ }] )
; .mov_ptn 1(<2)◂{ } ⊢ 2'(= a3◂ [ *{ }] )
	mov rax,unt 
	mov rax,unt_1
	mov r8,rax
	add rsp,8
	jmp LB_1908
LB_1908:
	cmp BYTE [r8+6],0
	jnz LB_1899
	POP_GRM_SCC
	jmp LB_1886
LB_1899:
	RB_GRM
	mov QWORD [rsp+8*0],r14
	mov r13,QWORD [rsp+16+8*0]
	mov r14,QWORD [rsp+8*0]
	jmp LB_1910
LB_1910
; #24 { } ⊢ 0(<2)◂{ }
; ∎ 0(<2)◂{ }
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂{ } ⊢ 2'(= a3◂ [ *{ }] )
; .mov_ptn 0(<2)◂{ } ⊢ 2'(= a3◂ [ *{ }] )
	mov rax,unt 
	mov rax,unt_0
	mov r8,rax
	jmp LB_1911
LB_1911:
	cmp BYTE [r8+6],0
	jnz LB_1909
	POP_GRM_SCC
	jmp LB_1886
LB_1909:
	POP_GRM_FAIL 
	jmp LB_1886
LB_1886:
	cmp BYTE [r8+6],0
	jnz LB_1912
	jmp LB_1913
LB_1912:
	add rsp,0
	POP_GRM_FAIL
	ret
LB_1913:
	mov QWORD [rsp+8*0],r14
; .mov_ptn2 2'(= *{ } ) ⊢ { }
; .mov_ptn 2'(= *{ } ) ⊢ { }
	mov r13,QWORD [rsp+16+8*0]
	mov r14,QWORD [rsp+8*0]
	jmp LB_1914
LB_1914
; #196 { } ⊢ 0(<2)◂{ }
; #24 0(<2)◂{ } ⊢ 0(<2)◂0(<2)◂{ }
; ∎ 0(<2)◂0(<2)◂{ }
; .dlt.ptn { }
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂0(<2)◂{ } ⊢ 2'(= a3◂ [ a43◂ [ *{ }]] )
; .mov_ptn 0(<2)◂0(<2)◂{ } ⊢ 2'(= a3◂ [ a43◂ [ *{ }]] )
	mov rax,unt 
	mov rax,unt_0
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	jmp LB_1915
LB_1915:
	cmp BYTE [r8+6],0
	jnz LB_1876
	POP_GRM_SCC
	ret
LB_1876:
	RB_GRM
	jmp LB_1918
LB_1917:
	add r14,1 
LB_1918:
	cmp r14,r9
	jge LB_1919
	JZ_LINE_SPC BYTE [r13+8+r14], LB_1917
LB_1919
	call GRM_221
	cmp BYTE [r8+6],0
	jnz LB_1922
	jmp LB_1923
LB_1922:
	jmp LB_1920
LB_1923:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a43◂ [ *{ }] ) ⊢ 8'(= a43◂ [ *{ }] )
; .mov_ptn 2'(= a43◂ [ *{ }] ) ⊢ 8'(= a43◂ [ *{ }] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_1921
LB_1920:
	add rsp,0
	jmp LB_1916
LB_1921:
	mov QWORD [rsp+8*1],r14
	mov r13,QWORD [rsp+16+8*1]
	mov r14,QWORD [rsp+8*1]
	jmp LB_1924
LB_1924
; #24 8'(= a43◂ [ *{ }] ) ⊢ 0(<2)◂8'(= a43◂ [ *{ }] )
; ∎ 0(<2)◂8'(= a43◂ [ *{ }] )
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂8'(= a43◂ [ *{ }] ) ⊢ 2'(= a3◂ [ a43◂ [ *{ }]] )
; .mov_ptn 0(<2)◂8'(= a43◂ [ *{ }] ) ⊢ 2'(= a3◂ [ a43◂ [ *{ }]] )
	mov rax,QWORD [rsp-8+8*1]
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,8
	jmp LB_1925
LB_1925:
	cmp BYTE [r8+6],0
	jnz LB_1916
	POP_GRM_SCC
	ret
LB_1916:
	RB_GRM
	mov QWORD [rsp+8*0],r14
	mov r13,QWORD [rsp+16+8*0]
	mov r14,QWORD [rsp+8*0]
	jmp LB_1927
LB_1927
; #22 { } ⊢ 1(<2)◂{ }
; $ %[ "blk_cmt 1" ] ⊢ %[ "blk_cmt 1" ]
; #23 { { 0'(= r ) 1'(= r ) %[ "blk_cmt 1" ] } 1(<2)◂{ } } ⊢ 0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "blk_cmt 1" ] } 1(<2)◂{ } }
; #195 0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "blk_cmt 1" ] } 1(<2)◂{ } } ⊢ 1(<2)◂0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "blk_cmt 1" ] } 1(<2)◂{ } }
; #24 1(<2)◂0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "blk_cmt 1" ] } 1(<2)◂{ } } ⊢ 0(<2)◂1(<2)◂0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "blk_cmt 1" ] } 1(<2)◂{ } }
; ∎ 0(<2)◂1(<2)◂0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "blk_cmt 1" ] } 1(<2)◂{ } }
; .mov_ptn2 0(<2)◂1(<2)◂0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "blk_cmt 1" ] } 1(<2)◂{ } } ⊢ 2'(= a3◂ [ a43◂ [ *{ }]] )
; .mov_ptn 0(<2)◂1(<2)◂0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "blk_cmt 1" ] } 1(<2)◂{ } } ⊢ 2'(= a3◂ [ a43◂ [ *{ }]] )
	ALC_RCD 2, rax
	mov r9,rax
	ALC_RCD 3, rax
	mov r10,rax
	mov rax,r13
	mov QWORD [r10+8+8*0],rax
	mov rax,r14
	mov QWORD [r10+8+8*1],rax
	mov rsi,1  
	mov rdi,24
	xor rax,rax 
	C_CALL_SF calloc
	mov QWORD [rax],9
	mov BYTE [rax+8+0],98
	mov BYTE [rax+8+1],108
	mov BYTE [rax+8+2],107
	mov BYTE [rax+8+3],95
	mov BYTE [rax+8+4],99
	mov BYTE [rax+8+5],109
	mov BYTE [rax+8+6],116
	mov BYTE [rax+8+7],32
	mov BYTE [rax+8+8],49
	mov QWORD [r10+8+8*2],rax
	mov rax,r10
	mov QWORD [r9+8+8*0],rax
	mov rax,unt 
	mov rax,unt_1
	mov QWORD [r9+8+8*1],rax
	mov rax,r9
	mov BYTE [rax+6],0
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],1
	mov QWORD [rax+8],rdi
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	jmp LB_1928
LB_1928:
	cmp BYTE [r8+6],0
	jnz LB_1926
	POP_GRM_SCC
	ret
LB_1926:
	POP_GRM_FAIL 
	ret
ETR_221:
	mov r9,0x0000_ffff_ffff_ffff
	and r9,[r13]
	call GRM_221
	ret
GRM_221:
	PUSH_GRM
	jmp LB_1931
LB_1930:
	add r14,1 
LB_1931:
	cmp r14,r9
	jge LB_1932
	JZ_LINE_SPC BYTE [r13+8+r14], LB_1930
LB_1932
	lea rax,[r14+1]
	cmp rax,r9
	jg LB_1935
	jmp LB_1936
LB_1935:
	mov r8,unt_1
	jmp LB_1933
LB_1936:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],10
	jnz LB_1937
	jmp LB_1938
LB_1937:
	mov r8,unt_1
	jmp LB_1933
LB_1938:
	add r14,1
	jmp LB_1934
LB_1933:
	add rsp,0
	jmp LB_1929
LB_1934:
	jmp LB_1940
LB_1939:
	add r14,1 
LB_1940:
	cmp r14,r9
	jge LB_1941
	JZ_LINE_SPC BYTE [r13+8+r14], LB_1939
LB_1941
	call GRM_220
	cmp BYTE [r8+6],0
	jnz LB_1944
	jmp LB_1945
LB_1944:
	jmp LB_1942
LB_1945:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a43◂ [ *{ }] ) ⊢ 8'(= a43◂ [ *{ }] )
; .mov_ptn 2'(= a43◂ [ *{ }] ) ⊢ 8'(= a43◂ [ *{ }] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_1943
LB_1942:
	add rsp,0
	jmp LB_1929
LB_1943:
	mov QWORD [rsp+8*1],r14
	mov r13,QWORD [rsp+16+8*1]
	mov r14,QWORD [rsp+8*1]
	jmp LB_1946
LB_1946
; #24 8'(= a43◂ [ *{ }] ) ⊢ 0(<2)◂8'(= a43◂ [ *{ }] )
; ∎ 0(<2)◂8'(= a43◂ [ *{ }] )
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂8'(= a43◂ [ *{ }] ) ⊢ 2'(= a3◂ [ a43◂ [ *{ }]] )
; .mov_ptn 0(<2)◂8'(= a43◂ [ *{ }] ) ⊢ 2'(= a3◂ [ a43◂ [ *{ }]] )
	mov rax,QWORD [rsp-8+8*1]
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,8
	jmp LB_1947
LB_1947:
	cmp BYTE [r8+6],0
	jnz LB_1929
	POP_GRM_SCC
	ret
LB_1929:
	RB_GRM
	jmp LB_1950
LB_1949:
	add r14,1 
LB_1950:
	cmp r14,r9
	jge LB_1951
	JZ_LINE_SPC BYTE [r13+8+r14], LB_1949
LB_1951
	cmp r14,r9
	jge LB_1954
	jmp LB_1955
LB_1954:
	mov r8,unt_1 
	jmp LB_1952
LB_1955:
	movzx rdi,BYTE [r13+8+r14]
	push rdi 
	add r14,1 
	jmp LB_1953
LB_1952:
	add rsp,0
	jmp LB_1948
LB_1953:
	jmp LB_1957
LB_1956:
	add r14,1 
LB_1957:
	cmp r14,r9
	jge LB_1958
	JZ_LINE_SPC BYTE [r13+8+r14], LB_1956
LB_1958
	call GRM_221
	cmp BYTE [r8+6],0
	jnz LB_1961
	jmp LB_1962
LB_1961:
	jmp LB_1959
LB_1962:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a43◂ [ *{ }] ) ⊢ 9'(= a43◂ [ *{ }] )
; .mov_ptn 2'(= a43◂ [ *{ }] ) ⊢ 9'(= a43◂ [ *{ }] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_1960
LB_1959:
	add rsp,8
	jmp LB_1948
LB_1960:
	mov QWORD [rsp+8*2],r14
	mov r13,QWORD [rsp+16+8*2]
	mov r14,QWORD [rsp+8*2]
	jmp LB_1963
LB_1963
; #24 9'(= a43◂ [ *{ }] ) ⊢ 0(<2)◂9'(= a43◂ [ *{ }] )
; ∎ 0(<2)◂9'(= a43◂ [ *{ }] )
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 8'(= r )
	mov rdi,QWORD [rsp-8+8*2]
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂9'(= a43◂ [ *{ }] ) ⊢ 2'(= a3◂ [ a43◂ [ *{ }]] )
; .mov_ptn 0(<2)◂9'(= a43◂ [ *{ }] ) ⊢ 2'(= a3◂ [ a43◂ [ *{ }]] )
	mov rax,QWORD [rsp-8+8*1]
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,16
	jmp LB_1964
LB_1964:
	cmp BYTE [r8+6],0
	jnz LB_1948
	POP_GRM_SCC
	ret
LB_1948:
	RB_GRM
	mov QWORD [rsp+8*0],r14
	mov r13,QWORD [rsp+16+8*0]
	mov r14,QWORD [rsp+8*0]
	jmp LB_1966
LB_1966
; $ %[ "line_res_c 0" ] ⊢ %[ "line_res_c 0" ]
; #10 %[ "line_res_c 0" ] ⊢ %[ "line_res_c 0" ]
	mov rdi,fmt_emt
	call emt_stg
	mov rdi,LB_1968
	call emt_stg 
	mov rdi,fmt_nl
	call emt_stg
	jmp LB_1969
LB_1969:
	mov rdi,LB_1970
	call emt_stg 
	jmp err
LB_1967:
	cmp BYTE [r8+6],0
	jnz LB_1965
	POP_GRM_SCC
	ret
LB_1965:
	POP_GRM_FAIL 
	ret
ETR_222:
	mov r9,0x0000_ffff_ffff_ffff
	and r9,[r13]
	call GRM_222
	ret
GRM_222:
	PUSH_GRM
	jmp LB_1973
LB_1972:
	add r14,1 
LB_1973:
	cmp r14,r9
	jge LB_1974
	JZ_LINE_SPC BYTE [r13+8+r14], LB_1972
LB_1974
	lea rax,[r14+1]
	cmp rax,r9
	jg LB_1977
	jmp LB_1978
LB_1977:
	mov r8,unt_1
	jmp LB_1975
LB_1978:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],10
	jnz LB_1979
	jmp LB_1980
LB_1979:
	mov r8,unt_1
	jmp LB_1975
LB_1980:
	add r14,1
	jmp LB_1976
LB_1975:
	add rsp,0
	jmp LB_1971
LB_1976:
	mov QWORD [rsp+8*0],r14
	mov r13,QWORD [rsp+16+8*0]
	mov r14,QWORD [rsp+8*0]
	jmp LB_1981
LB_1981
; #24 { 0'(= r ) 1'(= r ) } ⊢ 0(<2)◂{ 0'(= r ) 1'(= r ) }
; ∎ 0(<2)◂{ 0'(= r ) 1'(= r ) }
; .mov_ptn2 0(<2)◂{ 0'(= r ) 1'(= r ) } ⊢ 2'(= a3◂ [ *{ rr}] )
; .mov_ptn 0(<2)◂{ 0'(= r ) 1'(= r ) } ⊢ 2'(= a3◂ [ *{ rr}] )
	ALC_RCD 2, rax
	mov r9,rax
	mov rax,r13
	mov QWORD [r9+8+8*0],rax
	mov rax,r14
	mov QWORD [r9+8+8*1],rax
	mov rax,r9
	mov BYTE [rax+6],0
	mov r8,rax
	jmp LB_1982
LB_1982:
	cmp BYTE [r8+6],0
	jnz LB_1971
	POP_GRM_SCC
	ret
LB_1971:
	RB_GRM
	jmp LB_1985
LB_1984:
	add r14,1 
LB_1985:
	cmp r14,r9
	jge LB_1986
	JZ_LINE_SPC BYTE [r13+8+r14], LB_1984
LB_1986
	cmp r14,r9
	jge LB_1989
	jmp LB_1990
LB_1989:
	mov r8,unt_1 
	jmp LB_1987
LB_1990:
	movzx rdi,BYTE [r13+8+r14]
	push rdi 
	add r14,1 
	jmp LB_1988
LB_1987:
	add rsp,0
	jmp LB_1983
LB_1988:
	jmp LB_1992
LB_1991:
	add r14,1 
LB_1992:
	cmp r14,r9
	jge LB_1993
	JZ_LINE_SPC BYTE [r13+8+r14], LB_1991
LB_1993
	call GRM_222
	cmp BYTE [r8+6],0
	jnz LB_1996
	jmp LB_1997
LB_1996:
	jmp LB_1994
LB_1997:
	sub rsp,16
; .mov_ptn2 2'(= *{ rr} ) ⊢ { 9'(= r ) 10'(= r ) }
; .mov_ptn 2'(= *{ rr} ) ⊢ { 9'(= r ) 10'(= r ) }
	mov r10, QWORD [r8+8]
	mov QWORD [rsp-8+8*2],r10
	mov r11, QWORD [r8+16]
	mov QWORD [rsp-8+8*1],r11
	mov rdi,r8
	FREE_RCD 2,rdi
	jmp LB_1995
LB_1994:
	add rsp,8
	jmp LB_1983
LB_1995:
	mov QWORD [rsp+8*3],r14
	mov r13,QWORD [rsp+16+8*3]
	mov r14,QWORD [rsp+8*3]
	jmp LB_1998
LB_1998
; #24 { 0'(= r ) 10'(= r ) } ⊢ 0(<2)◂{ 0'(= r ) 10'(= r ) }
; ∎ 0(<2)◂{ 0'(= r ) 10'(= r ) }
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 9'(= r )
	mov rdi,QWORD [rsp-8+8*2]
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 8'(= r )
	mov rdi,QWORD [rsp-8+8*3]
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂{ 0'(= r ) 10'(= r ) } ⊢ 2'(= a3◂ [ *{ rr}] )
; .mov_ptn 0(<2)◂{ 0'(= r ) 10'(= r ) } ⊢ 2'(= a3◂ [ *{ rr}] )
	ALC_RCD 2, rax
	mov r14,rax
	mov rax,r13
	mov QWORD [r14+8+8*0],rax
	mov rax,QWORD [rsp-8+8*1]
	mov QWORD [r14+8+8*1],rax
	mov rax,r14
	mov BYTE [rax+6],0
	mov r8,rax
	add rsp,24
	jmp LB_1999
LB_1999:
	cmp BYTE [r8+6],0
	jnz LB_1983
	POP_GRM_SCC
	ret
LB_1983:
	RB_GRM
	mov QWORD [rsp+8*0],r14
	mov r13,QWORD [rsp+16+8*0]
	mov r14,QWORD [rsp+8*0]
	jmp LB_2001
LB_2001
; #24 { 0'(= r ) 1'(= r ) } ⊢ 0(<2)◂{ 0'(= r ) 1'(= r ) }
; ∎ 0(<2)◂{ 0'(= r ) 1'(= r ) }
; .mov_ptn2 0(<2)◂{ 0'(= r ) 1'(= r ) } ⊢ 2'(= a3◂ [ *{ rr}] )
; .mov_ptn 0(<2)◂{ 0'(= r ) 1'(= r ) } ⊢ 2'(= a3◂ [ *{ rr}] )
	ALC_RCD 2, rax
	mov r9,rax
	mov rax,r13
	mov QWORD [r9+8+8*0],rax
	mov rax,r14
	mov QWORD [r9+8+8*1],rax
	mov rax,r9
	mov BYTE [rax+6],0
	mov r8,rax
	jmp LB_2002
LB_2002:
	cmp BYTE [r8+6],0
	jnz LB_2000
	POP_GRM_SCC
	ret
LB_2000:
	POP_GRM_FAIL 
	ret
ETR_223:
	mov r9,0x0000_ffff_ffff_ffff
	and r9,[r13]
	call GRM_223
	ret
GRM_223:
	PUSH_GRM
	jmp LB_2005
LB_2004:
	add r14,1 
LB_2005:
	cmp r14,r9
	jge LB_2006
	JZ_SPC BYTE [r13+8+r14], LB_2004
LB_2006
	lea rax,[r14+7]
	cmp rax,r9
	jg LB_2009
	jmp LB_2010
LB_2009:
	mov r8,unt_1
	jmp LB_2007
LB_2010:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],194
	jnz LB_2011
	cmp BYTE [rdi+1],167
	jnz LB_2011
	cmp BYTE [rdi+2],194
	jnz LB_2011
	cmp BYTE [rdi+3],167
	jnz LB_2011
	cmp BYTE [rdi+4],43
	jnz LB_2011
	cmp BYTE [rdi+5],115
	jnz LB_2011
	cmp BYTE [rdi+6],56
	jnz LB_2011
	jmp LB_2012
LB_2011:
	mov r8,unt_1
	jmp LB_2007
LB_2012:
	add r14,7
	jmp LB_2008
LB_2007:
	add rsp,0
	jmp LB_2003
LB_2008:
	mov QWORD [rsp+8*0],r14
	mov r13,QWORD [rsp+16+8*0]
	mov r14,QWORD [rsp+8*0]
	jmp LB_2013
LB_2013
; #24 { } ⊢ 0(<2)◂{ }
; ∎ 0(<2)◂{ }
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂{ } ⊢ 2'(= a3◂ [ *{ }] )
; .mov_ptn 0(<2)◂{ } ⊢ 2'(= a3◂ [ *{ }] )
	mov rax,unt 
	mov rax,unt_0
	mov r8,rax
	jmp LB_2014
LB_2014:
	cmp BYTE [r8+6],0
	jnz LB_2003
	POP_GRM_SCC
	ret
LB_2003:
	RB_GRM
	jmp LB_2017
LB_2016:
	add r14,1 
LB_2017:
	cmp r14,r9
	jge LB_2018
	JZ_SPC BYTE [r13+8+r14], LB_2016
LB_2018
	lea rax,[r14+4]
	cmp rax,r9
	jg LB_2021
	jmp LB_2022
LB_2021:
	mov r8,unt_1
	jmp LB_2019
LB_2022:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],194
	jnz LB_2023
	cmp BYTE [rdi+1],167
	jnz LB_2023
	cmp BYTE [rdi+2],194
	jnz LB_2023
	cmp BYTE [rdi+3],167
	jnz LB_2023
	jmp LB_2024
LB_2023:
	mov r8,unt_1
	jmp LB_2019
LB_2024:
	add r14,4
	jmp LB_2020
LB_2019:
	add rsp,0
	jmp LB_2015
LB_2020:
	mov QWORD [rsp+8*0],r14
	mov r13,QWORD [rsp+16+8*0]
	mov r14,QWORD [rsp+8*0]
	jmp LB_2025
LB_2025
; #24 { } ⊢ 0(<2)◂{ }
; ∎ 0(<2)◂{ }
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂{ } ⊢ 2'(= a3◂ [ *{ }] )
; .mov_ptn 0(<2)◂{ } ⊢ 2'(= a3◂ [ *{ }] )
	mov rax,unt 
	mov rax,unt_0
	mov r8,rax
	jmp LB_2026
LB_2026:
	cmp BYTE [r8+6],0
	jnz LB_2015
	POP_GRM_SCC
	ret
LB_2015:
	RB_GRM
	jmp LB_2029
LB_2028:
	add r14,1 
LB_2029:
	cmp r14,r9
	jge LB_2030
	JZ_SPC BYTE [r13+8+r14], LB_2028
LB_2030
	lea rax,[r14+2]
	cmp rax,r9
	jg LB_2033
	jmp LB_2034
LB_2033:
	mov r8,unt_1
	jmp LB_2031
LB_2034:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],194
	jnz LB_2035
	cmp BYTE [rdi+1],167
	jnz LB_2035
	jmp LB_2036
LB_2035:
	mov r8,unt_1
	jmp LB_2031
LB_2036:
	add r14,2
	jmp LB_2032
LB_2031:
	add rsp,0
	jmp LB_2027
LB_2032:
	mov QWORD [rsp+8*0],r14
	mov r13,QWORD [rsp+16+8*0]
	mov r14,QWORD [rsp+8*0]
	jmp LB_2037
LB_2037
; #24 { } ⊢ 0(<2)◂{ }
; ∎ 0(<2)◂{ }
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂{ } ⊢ 2'(= a3◂ [ *{ }] )
; .mov_ptn 0(<2)◂{ } ⊢ 2'(= a3◂ [ *{ }] )
	mov rax,unt 
	mov rax,unt_0
	mov r8,rax
	jmp LB_2038
LB_2038:
	cmp BYTE [r8+6],0
	jnz LB_2027
	POP_GRM_SCC
	ret
LB_2027:
	RB_GRM
	jmp LB_2041
LB_2040:
	add r14,1 
LB_2041:
	cmp r14,r9
	jge LB_2042
	JZ_SPC BYTE [r13+8+r14], LB_2040
LB_2042
	lea rax,[r14+2]
	cmp rax,r9
	jg LB_2045
	jmp LB_2046
LB_2045:
	mov r8,unt_1
	jmp LB_2043
LB_2046:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],194
	jnz LB_2047
	cmp BYTE [rdi+1],182
	jnz LB_2047
	jmp LB_2048
LB_2047:
	mov r8,unt_1
	jmp LB_2043
LB_2048:
	add r14,2
	jmp LB_2044
LB_2043:
	add rsp,0
	jmp LB_2039
LB_2044:
	mov QWORD [rsp+8*0],r14
	mov r13,QWORD [rsp+16+8*0]
	mov r14,QWORD [rsp+8*0]
	jmp LB_2049
LB_2049
; #24 { } ⊢ 0(<2)◂{ }
; ∎ 0(<2)◂{ }
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂{ } ⊢ 2'(= a3◂ [ *{ }] )
; .mov_ptn 0(<2)◂{ } ⊢ 2'(= a3◂ [ *{ }] )
	mov rax,unt 
	mov rax,unt_0
	mov r8,rax
	jmp LB_2050
LB_2050:
	cmp BYTE [r8+6],0
	jnz LB_2039
	POP_GRM_SCC
	ret
LB_2039:
	RB_GRM
	jmp LB_2053
LB_2052:
	add r14,1 
LB_2053:
	cmp r14,r9
	jge LB_2054
	JZ_SPC BYTE [r13+8+r14], LB_2052
LB_2054
	lea rax,[r14+6]
	cmp rax,r9
	jg LB_2057
	jmp LB_2058
LB_2057:
	mov r8,unt_1
	jmp LB_2055
LB_2058:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],226
	jnz LB_2059
	cmp BYTE [rdi+1],136
	jnz LB_2059
	cmp BYTE [rdi+2],142
	jnz LB_2059
	cmp BYTE [rdi+3],226
	jnz LB_2059
	cmp BYTE [rdi+4],136
	jnz LB_2059
	cmp BYTE [rdi+5],142
	jnz LB_2059
	jmp LB_2060
LB_2059:
	mov r8,unt_1
	jmp LB_2055
LB_2060:
	add r14,6
	jmp LB_2056
LB_2055:
	add rsp,0
	jmp LB_2051
LB_2056:
	mov QWORD [rsp+8*0],r14
	mov r13,QWORD [rsp+16+8*0]
	mov r14,QWORD [rsp+8*0]
	jmp LB_2061
LB_2061
; #24 { } ⊢ 0(<2)◂{ }
; ∎ 0(<2)◂{ }
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂{ } ⊢ 2'(= a3◂ [ *{ }] )
; .mov_ptn 0(<2)◂{ } ⊢ 2'(= a3◂ [ *{ }] )
	mov rax,unt 
	mov rax,unt_0
	mov r8,rax
	jmp LB_2062
LB_2062:
	cmp BYTE [r8+6],0
	jnz LB_2051
	POP_GRM_SCC
	ret
LB_2051:
	POP_GRM_FAIL 
	ret
ETR_224:
	mov r9,0x0000_ffff_ffff_ffff
	and r9,[r13]
	call GRM_224
	ret
GRM_224:
	PUSH_GRM
	jmp LB_2065
LB_2064:
	add r14,1 
LB_2065:
	cmp r14,r9
	jge LB_2066
	JZ_SPC BYTE [r13+8+r14], LB_2064
LB_2066
	call GRM_223
	cmp BYTE [r8+6],0
	jnz LB_2069
	jmp LB_2070
LB_2069:
	jmp LB_2067
LB_2070:
; .mov_ptn2 2'(= *{ } ) ⊢ { }
; .mov_ptn 2'(= *{ } ) ⊢ { }
	jmp LB_2068
LB_2067:
	add rsp,0
	jmp LB_2063
LB_2068:
	mov QWORD [rsp+8*0],r14
	mov r13,QWORD [rsp+16+8*0]
	mov r14,QWORD [rsp+8*0]
	jmp LB_2071
LB_2071
; #25 { } ⊢ 1(<2)◂{ }
; ∎ 1(<2)◂{ }
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn { }
; .mov_ptn2 1(<2)◂{ } ⊢ 2'(= a3◂ [ *{ }] )
; .mov_ptn 1(<2)◂{ } ⊢ 2'(= a3◂ [ *{ }] )
	mov rax,unt 
	mov rax,unt_1
	mov r8,rax
	jmp LB_2072
LB_2072:
	cmp BYTE [r8+6],0
	jnz LB_2063
	POP_GRM_SCC
	ret
LB_2063:
	RB_GRM
	jmp LB_2075
LB_2074:
	add r14,1 
LB_2075:
	cmp r14,r9
	jge LB_2076
	JZ_SPC BYTE [r13+8+r14], LB_2074
LB_2076
	cmp r14,r9
	jge LB_2079
	jmp LB_2080
LB_2079:
	mov r8,unt_1 
	jmp LB_2077
LB_2080:
	movzx rdi,BYTE [r13+8+r14]
	push rdi 
	add r14,1 
	jmp LB_2078
LB_2077:
	add rsp,0
	jmp LB_2073
LB_2078:
	mov QWORD [rsp+8*1],r14
	mov r13,QWORD [rsp+16+8*1]
	mov r14,QWORD [rsp+8*1]
	jmp LB_2081
LB_2081
; #24 { } ⊢ 0(<2)◂{ }
; ∎ 0(<2)◂{ }
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 8'(= r )
	mov rdi,QWORD [rsp-8+8*1]
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂{ } ⊢ 2'(= a3◂ [ *{ }] )
; .mov_ptn 0(<2)◂{ } ⊢ 2'(= a3◂ [ *{ }] )
	mov rax,unt 
	mov rax,unt_0
	mov r8,rax
	add rsp,8
	jmp LB_2082
LB_2082:
	cmp BYTE [r8+6],0
	jnz LB_2073
	POP_GRM_SCC
	ret
LB_2073:
	POP_GRM_FAIL 
	ret
ETR_225:
	mov r9,0x0000_ffff_ffff_ffff
	and r9,[r13]
	call GRM_225
	ret
GRM_225:
	PUSH_GRM
	jmp LB_2085
LB_2084:
	add r14,1 
LB_2085:
	cmp r14,r9
	jge LB_2086
	JZ_SPC BYTE [r13+8+r14], LB_2084
LB_2086
	lea rax,[r14+1]
	cmp rax,r9
	jg LB_2089
	jmp LB_2090
LB_2089:
	mov r8,unt_1
	jmp LB_2087
LB_2090:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],64
	jnz LB_2091
	jmp LB_2092
LB_2091:
	mov r8,unt_1
	jmp LB_2087
LB_2092:
	add r14,1
	jmp LB_2088
LB_2087:
	add rsp,0
	jmp LB_2083
LB_2088:
	mov QWORD [rsp+8*0],r14
	mov r13,QWORD [rsp+16+8*0]
	mov r14,QWORD [rsp+8*0]
	jmp LB_2093
LB_2093
; #25 { } ⊢ 1(<2)◂{ }
; ∎ 1(<2)◂{ }
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn { }
; .mov_ptn2 1(<2)◂{ } ⊢ 2'(= a3◂ [ *{ }] )
; .mov_ptn 1(<2)◂{ } ⊢ 2'(= a3◂ [ *{ }] )
	mov rax,unt 
	mov rax,unt_1
	mov r8,rax
	jmp LB_2094
LB_2094:
	cmp BYTE [r8+6],0
	jnz LB_2083
	POP_GRM_SCC
	ret
LB_2083:
	RB_GRM
	jmp LB_2097
LB_2096:
	add r14,1 
LB_2097:
	cmp r14,r9
	jge LB_2098
	JZ_SPC BYTE [r13+8+r14], LB_2096
LB_2098
	call GRM_223
	cmp BYTE [r8+6],0
	jnz LB_2101
	jmp LB_2102
LB_2101:
	jmp LB_2099
LB_2102:
; .mov_ptn2 2'(= *{ } ) ⊢ { }
; .mov_ptn 2'(= *{ } ) ⊢ { }
	jmp LB_2100
LB_2099:
	add rsp,0
	jmp LB_2095
LB_2100:
	mov QWORD [rsp+8*0],r14
	mov r13,QWORD [rsp+16+8*0]
	mov r14,QWORD [rsp+8*0]
	jmp LB_2103
LB_2103
; #25 { } ⊢ 1(<2)◂{ }
; ∎ 1(<2)◂{ }
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn { }
; .mov_ptn2 1(<2)◂{ } ⊢ 2'(= a3◂ [ *{ }] )
; .mov_ptn 1(<2)◂{ } ⊢ 2'(= a3◂ [ *{ }] )
	mov rax,unt 
	mov rax,unt_1
	mov r8,rax
	jmp LB_2104
LB_2104:
	cmp BYTE [r8+6],0
	jnz LB_2095
	POP_GRM_SCC
	ret
LB_2095:
	RB_GRM
	jmp LB_2107
LB_2106:
	add r14,1 
LB_2107:
	cmp r14,r9
	jge LB_2108
	JZ_SPC BYTE [r13+8+r14], LB_2106
LB_2108
	cmp r14,r9
	jge LB_2111
	jmp LB_2112
LB_2111:
	mov r8,unt_1 
	jmp LB_2109
LB_2112:
	movzx rdi,BYTE [r13+8+r14]
	push rdi 
	add r14,1 
	jmp LB_2110
LB_2109:
	add rsp,0
	jmp LB_2105
LB_2110:
	mov QWORD [rsp+8*1],r14
	mov r13,QWORD [rsp+16+8*1]
	mov r14,QWORD [rsp+8*1]
	jmp LB_2113
LB_2113
; #24 { } ⊢ 0(<2)◂{ }
; ∎ 0(<2)◂{ }
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 8'(= r )
	mov rdi,QWORD [rsp-8+8*1]
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂{ } ⊢ 2'(= a3◂ [ *{ }] )
; .mov_ptn 0(<2)◂{ } ⊢ 2'(= a3◂ [ *{ }] )
	mov rax,unt 
	mov rax,unt_0
	mov r8,rax
	add rsp,8
	jmp LB_2114
LB_2114:
	cmp BYTE [r8+6],0
	jnz LB_2105
	POP_GRM_SCC
	ret
LB_2105:
	POP_GRM_FAIL 
	ret
ETR_226:
	mov r9,0x0000_ffff_ffff_ffff
	and r9,[r13]
	call GRM_226
	ret
GRM_226:
	PUSH_GRM
	jmp LB_2117
LB_2116:
	add r14,1 
LB_2117:
	cmp r14,r9
	jge LB_2118
	JZ_SPC BYTE [r13+8+r14], LB_2116
LB_2118
	call GRM_225
	cmp BYTE [r8+6],0
	jnz LB_2121
	jmp LB_2122
LB_2121:
	jmp LB_2119
LB_2122:
; .mov_ptn2 2'(= *{ } ) ⊢ { }
; .mov_ptn 2'(= *{ } ) ⊢ { }
	jmp LB_2120
LB_2119:
	add rsp,0
	jmp LB_2115
LB_2120:
	jmp LB_2124
LB_2123:
	add r14,1 
LB_2124:
	cmp r14,r9
	jge LB_2125
	JZ_SPC BYTE [r13+8+r14], LB_2123
LB_2125
	call GRM_226
	cmp BYTE [r8+6],0
	jnz LB_2128
	jmp LB_2129
LB_2128:
	jmp LB_2126
LB_2129:
; .mov_ptn2 2'(= *{ } ) ⊢ { }
; .mov_ptn 2'(= *{ } ) ⊢ { }
	jmp LB_2127
LB_2126:
	add rsp,0
	jmp LB_2115
LB_2127:
	mov QWORD [rsp+8*0],r14
	mov r13,QWORD [rsp+16+8*0]
	mov r14,QWORD [rsp+8*0]
	jmp LB_2130
LB_2130
; #24 { } ⊢ 0(<2)◂{ }
; ∎ 0(<2)◂{ }
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn { }
; .dlt.ptn { }
; .mov_ptn2 0(<2)◂{ } ⊢ 2'(= a3◂ [ *{ }] )
; .mov_ptn 0(<2)◂{ } ⊢ 2'(= a3◂ [ *{ }] )
	mov rax,unt 
	mov rax,unt_0
	mov r8,rax
	jmp LB_2131
LB_2131:
	cmp BYTE [r8+6],0
	jnz LB_2115
	POP_GRM_SCC
	ret
LB_2115:
	RB_GRM
	mov QWORD [rsp+8*0],r14
	mov r13,QWORD [rsp+16+8*0]
	mov r14,QWORD [rsp+8*0]
	jmp LB_2133
LB_2133
; #24 { } ⊢ 0(<2)◂{ }
; ∎ 0(<2)◂{ }
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂{ } ⊢ 2'(= a3◂ [ *{ }] )
; .mov_ptn 0(<2)◂{ } ⊢ 2'(= a3◂ [ *{ }] )
	mov rax,unt 
	mov rax,unt_0
	mov r8,rax
	jmp LB_2134
LB_2134:
	cmp BYTE [r8+6],0
	jnz LB_2132
	POP_GRM_SCC
	ret
LB_2132:
	POP_GRM_FAIL 
	ret
ETR_227:
	mov r9,0x0000_ffff_ffff_ffff
	and r9,[r13]
	call GRM_227
	ret
GRM_227:
	PUSH_GRM
	jmp LB_2137
LB_2136:
	add r14,1 
LB_2137:
	cmp r14,r9
	jge LB_2138
	JZ_LINE_SPC BYTE [r13+8+r14], LB_2136
LB_2138
	lea rax,[r14+1]
	cmp rax,r9
	jg LB_2141
	jmp LB_2142
LB_2141:
	mov r8,unt_1
	jmp LB_2139
LB_2142:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],10
	jnz LB_2143
	jmp LB_2144
LB_2143:
	mov r8,unt_1
	jmp LB_2139
LB_2144:
	add r14,1
	jmp LB_2140
LB_2139:
	add rsp,0
	jmp LB_2135
LB_2140:
	mov QWORD [rsp+8*0],r14
	mov r13,QWORD [rsp+16+8*0]
	mov r14,QWORD [rsp+8*0]
	jmp LB_2145
LB_2145
; #24 { } ⊢ 0(<2)◂{ }
; ∎ 0(<2)◂{ }
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn { }
; .mov_ptn2 0(<2)◂{ } ⊢ 2'(= a3◂ [ *{ }] )
; .mov_ptn 0(<2)◂{ } ⊢ 2'(= a3◂ [ *{ }] )
	mov rax,unt 
	mov rax,unt_0
	mov r8,rax
	jmp LB_2146
LB_2146:
	cmp BYTE [r8+6],0
	jnz LB_2135
	POP_GRM_SCC
	ret
LB_2135:
	RB_GRM
	jmp LB_2149
LB_2148:
	add r14,1 
LB_2149:
	cmp r14,r9
	jge LB_2150
	JZ_LINE_SPC BYTE [r13+8+r14], LB_2148
LB_2150
	call GRM_223
	cmp BYTE [r8+6],0
	jnz LB_2153
	jmp LB_2154
LB_2153:
	jmp LB_2151
LB_2154:
; .mov_ptn2 2'(= *{ } ) ⊢ { }
; .mov_ptn 2'(= *{ } ) ⊢ { }
	jmp LB_2152
LB_2151:
	add rsp,0
	jmp LB_2147
LB_2152:
	mov QWORD [rsp+8*0],r14
	mov r13,QWORD [rsp+16+8*0]
	mov r14,QWORD [rsp+8*0]
	jmp LB_2155
LB_2155
; #25 { } ⊢ 1(<2)◂{ }
; ∎ 1(<2)◂{ }
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn { }
; .mov_ptn2 1(<2)◂{ } ⊢ 2'(= a3◂ [ *{ }] )
; .mov_ptn 1(<2)◂{ } ⊢ 2'(= a3◂ [ *{ }] )
	mov rax,unt 
	mov rax,unt_1
	mov r8,rax
	jmp LB_2156
LB_2156:
	cmp BYTE [r8+6],0
	jnz LB_2147
	POP_GRM_SCC
	ret
LB_2147:
	RB_GRM
	jmp LB_2159
LB_2158:
	add r14,1 
LB_2159:
	cmp r14,r9
	jge LB_2160
	JZ_LINE_SPC BYTE [r13+8+r14], LB_2158
LB_2160
	lea rax,[r14+1]
	cmp rax,r9
	jg LB_2163
	jmp LB_2164
LB_2163:
	mov r8,unt_1
	jmp LB_2161
LB_2164:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],64
	jnz LB_2165
	jmp LB_2166
LB_2165:
	mov r8,unt_1
	jmp LB_2161
LB_2166:
	add r14,1
	jmp LB_2162
LB_2161:
	add rsp,0
	jmp LB_2157
LB_2162:
	mov QWORD [rsp+8*0],r14
	mov r13,QWORD [rsp+16+8*0]
	mov r14,QWORD [rsp+8*0]
	jmp LB_2167
LB_2167
; #25 { } ⊢ 1(<2)◂{ }
; ∎ 1(<2)◂{ }
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn { }
; .mov_ptn2 1(<2)◂{ } ⊢ 2'(= a3◂ [ *{ }] )
; .mov_ptn 1(<2)◂{ } ⊢ 2'(= a3◂ [ *{ }] )
	mov rax,unt 
	mov rax,unt_1
	mov r8,rax
	jmp LB_2168
LB_2168:
	cmp BYTE [r8+6],0
	jnz LB_2157
	POP_GRM_SCC
	ret
LB_2157:
	RB_GRM
	jmp LB_2171
LB_2170:
	add r14,1 
LB_2171:
	cmp r14,r9
	jge LB_2172
	JZ_LINE_SPC BYTE [r13+8+r14], LB_2170
LB_2172
	cmp r14,r9
	jge LB_2175
	jmp LB_2176
LB_2175:
	mov r8,unt_1 
	jmp LB_2173
LB_2176:
	movzx rdi,BYTE [r13+8+r14]
	push rdi 
	add r14,1 
	jmp LB_2174
LB_2173:
	add rsp,0
	jmp LB_2169
LB_2174:
	jmp LB_2178
LB_2177:
	add r14,1 
LB_2178:
	cmp r14,r9
	jge LB_2179
	JZ_LINE_SPC BYTE [r13+8+r14], LB_2177
LB_2179
	call GRM_227
	cmp BYTE [r8+6],0
	jnz LB_2182
	jmp LB_2183
LB_2182:
	jmp LB_2180
LB_2183:
; .mov_ptn2 2'(= *{ } ) ⊢ { }
; .mov_ptn 2'(= *{ } ) ⊢ { }
	jmp LB_2181
LB_2180:
	add rsp,8
	jmp LB_2169
LB_2181:
	mov QWORD [rsp+8*1],r14
	mov r13,QWORD [rsp+16+8*1]
	mov r14,QWORD [rsp+8*1]
	jmp LB_2184
LB_2184
; #24 { } ⊢ 0(<2)◂{ }
; ∎ 0(<2)◂{ }
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn { }
; .dlt.ptn 8'(= r )
	mov rdi,QWORD [rsp-8+8*1]
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂{ } ⊢ 2'(= a3◂ [ *{ }] )
; .mov_ptn 0(<2)◂{ } ⊢ 2'(= a3◂ [ *{ }] )
	mov rax,unt 
	mov rax,unt_0
	mov r8,rax
	add rsp,8
	jmp LB_2185
LB_2185:
	cmp BYTE [r8+6],0
	jnz LB_2169
	POP_GRM_SCC
	ret
LB_2169:
	RB_GRM
	jmp LB_2188
LB_2187:
	add r14,1 
LB_2188:
	cmp r14,r9
	jge LB_2189
	JZ_LINE_SPC BYTE [r13+8+r14], LB_2187
LB_2189
	cmp r14,r9
	jge LB_2192
	jmp LB_2193
LB_2192:
	mov r8,unt_1 
	jmp LB_2190
LB_2193:
	movzx rdi,BYTE [r13+8+r14]
	push rdi 
	add r14,1 
	jmp LB_2191
LB_2190:
	add rsp,0
	jmp LB_2186
LB_2191:
	mov QWORD [rsp+8*1],r14
	mov r13,QWORD [rsp+16+8*1]
	mov r14,QWORD [rsp+8*1]
	jmp LB_2194
LB_2194
; #24 { } ⊢ 0(<2)◂{ }
; ∎ 0(<2)◂{ }
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 8'(= r )
	mov rdi,QWORD [rsp-8+8*1]
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂{ } ⊢ 2'(= a3◂ [ *{ }] )
; .mov_ptn 0(<2)◂{ } ⊢ 2'(= a3◂ [ *{ }] )
	mov rax,unt 
	mov rax,unt_0
	mov r8,rax
	add rsp,8
	jmp LB_2195
LB_2195:
	cmp BYTE [r8+6],0
	jnz LB_2186
	POP_GRM_SCC
	ret
LB_2186:
	RB_GRM
	mov QWORD [rsp+8*0],r14
	mov r13,QWORD [rsp+16+8*0]
	mov r14,QWORD [rsp+8*0]
	jmp LB_2197
LB_2197
; #24 { } ⊢ 0(<2)◂{ }
; ∎ 0(<2)◂{ }
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂{ } ⊢ 2'(= a3◂ [ *{ }] )
; .mov_ptn 0(<2)◂{ } ⊢ 2'(= a3◂ [ *{ }] )
	mov rax,unt 
	mov rax,unt_0
	mov r8,rax
	jmp LB_2198
LB_2198:
	cmp BYTE [r8+6],0
	jnz LB_2196
	POP_GRM_SCC
	ret
LB_2196:
	POP_GRM_FAIL 
	ret
ETR_228:
	mov r9,0x0000_ffff_ffff_ffff
	and r9,[r13]
	call GRM_228
	ret
GRM_228:
	PUSH_GRM
	lea rax,[r14+3]
	cmp rax,r9
	jg LB_2202
	jmp LB_2203
LB_2202:
	mov r8,unt_1
	jmp LB_2200
LB_2203:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],194
	jnz LB_2204
	cmp BYTE [rdi+1],167
	jnz LB_2204
	cmp BYTE [rdi+2],126
	jnz LB_2204
	jmp LB_2205
LB_2204:
	mov r8,unt_1
	jmp LB_2200
LB_2205:
	add r14,3
	jmp LB_2201
LB_2200:
	add rsp,0
	jmp LB_2199
LB_2201:
	mov QWORD [rsp+8*0],r14
	mov r13,QWORD [rsp+16+8*0]
	mov r14,QWORD [rsp+8*0]
	jmp LB_2206
LB_2206
; #24 { } ⊢ 0(<2)◂{ }
; ∎ 0(<2)◂{ }
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂{ } ⊢ 2'(= a3◂ [ *{ }] )
; .mov_ptn 0(<2)◂{ } ⊢ 2'(= a3◂ [ *{ }] )
	mov rax,unt 
	mov rax,unt_0
	mov r8,rax
	jmp LB_2207
LB_2207:
	cmp BYTE [r8+6],0
	jnz LB_2199
	POP_GRM_SCC
	ret
LB_2199:
	RB_GRM
	lea rax,[r14+3]
	cmp rax,r9
	jg LB_2211
	jmp LB_2212
LB_2211:
	mov r8,unt_1
	jmp LB_2209
LB_2212:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],194
	jnz LB_2213
	cmp BYTE [rdi+1],167
	jnz LB_2213
	cmp BYTE [rdi+2],37
	jnz LB_2213
	jmp LB_2214
LB_2213:
	mov r8,unt_1
	jmp LB_2209
LB_2214:
	add r14,3
	jmp LB_2210
LB_2209:
	add rsp,0
	jmp LB_2208
LB_2210:
	mov QWORD [rsp+8*0],r14
	mov r13,QWORD [rsp+16+8*0]
	mov r14,QWORD [rsp+8*0]
	jmp LB_2215
LB_2215
; #24 { } ⊢ 0(<2)◂{ }
; ∎ 0(<2)◂{ }
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂{ } ⊢ 2'(= a3◂ [ *{ }] )
; .mov_ptn 0(<2)◂{ } ⊢ 2'(= a3◂ [ *{ }] )
	mov rax,unt 
	mov rax,unt_0
	mov r8,rax
	jmp LB_2216
LB_2216:
	cmp BYTE [r8+6],0
	jnz LB_2208
	POP_GRM_SCC
	ret
LB_2208:
	POP_GRM_FAIL 
	ret
ETR_229:
	mov r9,0x0000_ffff_ffff_ffff
	and r9,[r13]
	call GRM_229
	ret
GRM_229:
	PUSH_GRM
	jmp LB_2219
LB_2218:
	add r14,1 
LB_2219:
	cmp r14,r9
	jge LB_2220
	JZ_SPC BYTE [r13+8+r14], LB_2218
LB_2220
	call GRM_230
	cmp BYTE [r8+6],0
	jnz LB_2223
	jmp LB_2224
LB_2223:
	jmp LB_2221
LB_2224:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= r ) ⊢ 8'(= r )
; .mov_ptn 2'(= r ) ⊢ 8'(= r )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_2222
LB_2221:
	add rsp,0
	jmp LB_2217
LB_2222:
	jmp LB_2226
LB_2225:
	add r14,1 
LB_2226:
	cmp r14,r9
	jge LB_2227
	JZ_SPC BYTE [r13+8+r14], LB_2225
LB_2227
	lea rax,[r14+1]
	cmp rax,r9
	jg LB_2230
	jmp LB_2231
LB_2230:
	mov r8,unt_1
	jmp LB_2228
LB_2231:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],42
	jnz LB_2232
	jmp LB_2233
LB_2232:
	mov r8,unt_1
	jmp LB_2228
LB_2233:
	add r14,1
	jmp LB_2229
LB_2228:
	add rsp,8
	jmp LB_2217
LB_2229:
	jmp LB_2235
LB_2234:
	add r14,1 
LB_2235:
	cmp r14,r9
	jge LB_2236
	JZ_SPC BYTE [r13+8+r14], LB_2234
LB_2236
	call GRM_70
	cmp BYTE [r8+6],0
	jnz LB_2239
	jmp LB_2240
LB_2239:
	jmp LB_2237
LB_2240:
	sub rsp,8
; .mov_ptn2 2'(= {| l |} ) ⊢ 9'(= {| l |} )
; .mov_ptn 2'(= {| l |} ) ⊢ 9'(= {| l |} )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_2238
LB_2237:
	add rsp,8
	POP_GRM_FAIL
	ret
LB_2238:
	mov QWORD [rsp+8*2],r14
	mov r13,QWORD [rsp+16+8*2]
	mov r14,QWORD [rsp+8*2]
	jmp LB_2241
LB_2241
; #110 { 8'(= r ) 9'(= {| l |} ) } ⊢ 3(<4)◂{ 8'(= r ) 9'(= {| l |} ) }
; #24 3(<4)◂{ 8'(= r ) 9'(= {| l |} ) } ⊢ 0(<2)◂3(<4)◂{ 8'(= r ) 9'(= {| l |} ) }
; ∎ 0(<2)◂3(<4)◂{ 8'(= r ) 9'(= {| l |} ) }
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂3(<4)◂{ 8'(= r ) 9'(= {| l |} ) } ⊢ 2'(= a3◂ [ a24◂ [ a17◂ [ ]]] )
; .mov_ptn 0(<2)◂3(<4)◂{ 8'(= r ) 9'(= {| l |} ) } ⊢ 2'(= a3◂ [ a24◂ [ a17◂ [ ]]] )
	ALC_RCD 2, rax
	mov r13,rax
	mov rax,QWORD [rsp-8+8*2]
	mov QWORD [r13+8+8*0],rax
	mov rax,QWORD [rsp-8+8*1]
	mov QWORD [r13+8+8*1],rax
	mov rax,r13
	mov BYTE [rax+6],3
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,16
	jmp LB_2242
LB_2242:
	cmp BYTE [r8+6],0
	jnz LB_2217
	POP_GRM_SCC
	ret
LB_2217:
	RB_GRM
	jmp LB_2245
LB_2244:
	add r14,1 
LB_2245:
	cmp r14,r9
	jge LB_2246
	JZ_SPC BYTE [r13+8+r14], LB_2244
LB_2246
	call GRM_232
	cmp BYTE [r8+6],0
	jnz LB_2249
	jmp LB_2250
LB_2249:
	jmp LB_2247
LB_2250:
	sub rsp,8
; .mov_ptn2 2'(= {| l |} ) ⊢ 8'(= {| l |} )
; .mov_ptn 2'(= {| l |} ) ⊢ 8'(= {| l |} )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_2248
LB_2247:
	add rsp,0
	jmp LB_2243
LB_2248:
	mov QWORD [rsp+8*1],r14
	mov r13,QWORD [rsp+16+8*1]
	mov r14,QWORD [rsp+8*1]
	jmp LB_2251
LB_2251
; #113 8'(= {| l |} ) ⊢ 0(<4)◂8'(= {| l |} )
; #24 0(<4)◂8'(= {| l |} ) ⊢ 0(<2)◂0(<4)◂8'(= {| l |} )
; ∎ 0(<2)◂0(<4)◂8'(= {| l |} )
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂0(<4)◂8'(= {| l |} ) ⊢ 2'(= a3◂ [ a24◂ [ a17◂ [ ]]] )
; .mov_ptn 0(<2)◂0(<4)◂8'(= {| l |} ) ⊢ 2'(= a3◂ [ a24◂ [ a17◂ [ ]]] )
	mov rax,QWORD [rsp-8+8*1]
	mov BYTE [rax+6],0
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,8
	jmp LB_2252
LB_2252:
	cmp BYTE [r8+6],0
	jnz LB_2243
	POP_GRM_SCC
	ret
LB_2243:
	RB_GRM
	jmp LB_2255
LB_2254:
	add r14,1 
LB_2255:
	cmp r14,r9
	jge LB_2256
	JZ_SPC BYTE [r13+8+r14], LB_2254
LB_2256
	call GRM_70
	cmp BYTE [r8+6],0
	jnz LB_2259
	jmp LB_2260
LB_2259:
	jmp LB_2257
LB_2260:
	sub rsp,8
; .mov_ptn2 2'(= {| l |} ) ⊢ 8'(= {| l |} )
; .mov_ptn 2'(= {| l |} ) ⊢ 8'(= {| l |} )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_2258
LB_2257:
	add rsp,0
	jmp LB_2253
LB_2258:
	mov QWORD [rsp+8*1],r14
	mov r13,QWORD [rsp+16+8*1]
	mov r14,QWORD [rsp+8*1]
	jmp LB_2261
LB_2261
; #113 8'(= {| l |} ) ⊢ 0(<4)◂8'(= {| l |} )
; #24 0(<4)◂8'(= {| l |} ) ⊢ 0(<2)◂0(<4)◂8'(= {| l |} )
; ∎ 0(<2)◂0(<4)◂8'(= {| l |} )
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂0(<4)◂8'(= {| l |} ) ⊢ 2'(= a3◂ [ a24◂ [ a17◂ [ ]]] )
; .mov_ptn 0(<2)◂0(<4)◂8'(= {| l |} ) ⊢ 2'(= a3◂ [ a24◂ [ a17◂ [ ]]] )
	mov rax,QWORD [rsp-8+8*1]
	mov BYTE [rax+6],0
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,8
	jmp LB_2262
LB_2262:
	cmp BYTE [r8+6],0
	jnz LB_2253
	POP_GRM_SCC
	ret
LB_2253:
	RB_GRM
	jmp LB_2265
LB_2264:
	add r14,1 
LB_2265:
	cmp r14,r9
	jge LB_2266
	JZ_SPC BYTE [r13+8+r14], LB_2264
LB_2266
	call GRM_192
	cmp BYTE [r8+6],0
	jnz LB_2269
	jmp LB_2270
LB_2269:
	jmp LB_2267
LB_2270:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a17◂ [ ] ) ⊢ 8'(= a17◂ [ ] )
; .mov_ptn 2'(= a17◂ [ ] ) ⊢ 8'(= a17◂ [ ] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_2268
LB_2267:
	add rsp,0
	jmp LB_2263
LB_2268:
	mov QWORD [rsp+8*1],r14
	mov r13,QWORD [rsp+16+8*1]
	mov r14,QWORD [rsp+8*1]
	jmp LB_2271
LB_2271
; #88 8'(= a17◂ [ ] ) ⊢ 1(<2)◂8'(= a17◂ [ ] )
; #112 1(<2)◂8'(= a17◂ [ ] ) ⊢ 1(<4)◂1(<2)◂8'(= a17◂ [ ] )
; #24 1(<4)◂1(<2)◂8'(= a17◂ [ ] ) ⊢ 0(<2)◂1(<4)◂1(<2)◂8'(= a17◂ [ ] )
; ∎ 0(<2)◂1(<4)◂1(<2)◂8'(= a17◂ [ ] )
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂1(<4)◂1(<2)◂8'(= a17◂ [ ] ) ⊢ 2'(= a3◂ [ a24◂ [ a17◂ [ ]]] )
; .mov_ptn 0(<2)◂1(<4)◂1(<2)◂8'(= a17◂ [ ] ) ⊢ 2'(= a3◂ [ a24◂ [ a17◂ [ ]]] )
	mov rax,QWORD [rsp-8+8*1]
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],1
	mov QWORD [rax+8],rdi
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],1
	mov QWORD [rax+8],rdi
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,8
	jmp LB_2272
LB_2272:
	cmp BYTE [r8+6],0
	jnz LB_2263
	POP_GRM_SCC
	ret
LB_2263:
	RB_GRM
	jmp LB_2275
LB_2274:
	add r14,1 
LB_2275:
	cmp r14,r9
	jge LB_2276
	JZ_SPC BYTE [r13+8+r14], LB_2274
LB_2276
	call GRM_231
	cmp BYTE [r8+6],0
	jnz LB_2279
	jmp LB_2280
LB_2279:
	jmp LB_2277
LB_2280:
	sub rsp,16
; .mov_ptn2 2'(= *{ a23◂ [ ]r} ) ⊢ { 8'(= a23◂ [ ] ) 9'(= r ) }
; .mov_ptn 2'(= *{ a23◂ [ ]r} ) ⊢ { 8'(= a23◂ [ ] ) 9'(= r ) }
	mov r10, QWORD [r8+8]
	mov QWORD [rsp-8+8*2],r10
	mov r11, QWORD [r8+16]
	mov QWORD [rsp-8+8*1],r11
	mov rdi,r8
	FREE_RCD 2,rdi
	jmp LB_2278
LB_2277:
	add rsp,0
	jmp LB_2273
LB_2278:
	mov QWORD [rsp+8*2],r14
	mov r13,QWORD [rsp+16+8*2]
	mov r14,QWORD [rsp+8*2]
	jmp LB_2281
LB_2281
; #111 { 8'(= a23◂ [ ] ) 9'(= r ) } ⊢ 2(<4)◂{ 8'(= a23◂ [ ] ) 9'(= r ) }
; #24 2(<4)◂{ 8'(= a23◂ [ ] ) 9'(= r ) } ⊢ 0(<2)◂2(<4)◂{ 8'(= a23◂ [ ] ) 9'(= r ) }
; ∎ 0(<2)◂2(<4)◂{ 8'(= a23◂ [ ] ) 9'(= r ) }
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂2(<4)◂{ 8'(= a23◂ [ ] ) 9'(= r ) } ⊢ 2'(= a3◂ [ a24◂ [ a17◂ [ ]]] )
; .mov_ptn 0(<2)◂2(<4)◂{ 8'(= a23◂ [ ] ) 9'(= r ) } ⊢ 2'(= a3◂ [ a24◂ [ a17◂ [ ]]] )
	ALC_RCD 2, rax
	mov r13,rax
	mov rax,QWORD [rsp-8+8*2]
	mov QWORD [r13+8+8*0],rax
	mov rax,QWORD [rsp-8+8*1]
	mov QWORD [r13+8+8*1],rax
	mov rax,r13
	mov BYTE [rax+6],2
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,16
	jmp LB_2282
LB_2282:
	cmp BYTE [r8+6],0
	jnz LB_2273
	POP_GRM_SCC
	ret
LB_2273:
	POP_GRM_FAIL 
	ret
ETR_230:
	mov r9,0x0000_ffff_ffff_ffff
	and r9,[r13]
	call GRM_230
	ret
GRM_230:
	PUSH_GRM
	cmp r14,r9
	jge LB_2286
 lea rdi,[r13+8+r14] 
	C_PUSH_REGS
	call scf_d
	C_POP_REGS
	cmp rax,0 
	jz LB_2286
	add r14,rsi
	push rdi
	jmp LB_2287
LB_2286:
	mov r8,unt_1
	jmp LB_2284
LB_2287:
	jmp LB_2285
LB_2284:
	add rsp,0
	jmp LB_2283
LB_2285:
	lea rax,[r14+1]
	cmp rax,r9
	jg LB_2290
	jmp LB_2291
LB_2290:
	mov r8,unt_1
	jmp LB_2288
LB_2291:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],39
	jnz LB_2292
	jmp LB_2293
LB_2292:
	mov r8,unt_1
	jmp LB_2288
LB_2293:
	add r14,1
	jmp LB_2289
LB_2288:
	add rsp,8
	jmp LB_2283
LB_2289:
	mov QWORD [rsp+8*1],r14
	mov r13,QWORD [rsp+16+8*1]
	mov r14,QWORD [rsp+8*1]
	jmp LB_2294
LB_2294
; #24 8'(= r ) ⊢ 0(<2)◂8'(= r )
; ∎ 0(<2)◂8'(= r )
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂8'(= r ) ⊢ 2'(= a3◂ [ r] )
; .mov_ptn 0(<2)◂8'(= r ) ⊢ 2'(= a3◂ [ r] )
	mov rax,QWORD [rsp-8+8*1]
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,8
	jmp LB_2295
LB_2295:
	cmp BYTE [r8+6],0
	jnz LB_2283
	POP_GRM_SCC
	ret
LB_2283:
	POP_GRM_FAIL 
	ret
ETR_231:
	mov r9,0x0000_ffff_ffff_ffff
	and r9,[r13]
	call GRM_231
	ret
GRM_231:
	PUSH_GRM
	cmp r14,r9
	jge LB_2299
 lea rdi,[r13+8+r14] 
	C_PUSH_REGS
	call scf_d
	C_POP_REGS
	cmp rax,0 
	jz LB_2299
	add r14,rsi
	push rdi
	jmp LB_2300
LB_2299:
	mov r8,unt_1
	jmp LB_2297
LB_2300:
	jmp LB_2298
LB_2297:
	add rsp,0
	jmp LB_2296
LB_2298:
	lea rax,[r14+2]
	cmp rax,r9
	jg LB_2303
	jmp LB_2304
LB_2303:
	mov r8,unt_1
	jmp LB_2301
LB_2304:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],100
	jnz LB_2305
	cmp BYTE [rdi+1],39
	jnz LB_2305
	jmp LB_2306
LB_2305:
	mov r8,unt_1
	jmp LB_2301
LB_2306:
	add r14,2
	jmp LB_2302
LB_2301:
	add rsp,8
	jmp LB_2296
LB_2302:
	mov QWORD [rsp+8*1],r14
	mov r13,QWORD [rsp+16+8*1]
	mov r14,QWORD [rsp+8*1]
	jmp LB_2307
LB_2307
; #108 { } ⊢ 1(<4)◂{ }
; #24 { 1(<4)◂{ } 8'(= r ) } ⊢ 0(<2)◂{ 1(<4)◂{ } 8'(= r ) }
; ∎ 0(<2)◂{ 1(<4)◂{ } 8'(= r ) }
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂{ 1(<4)◂{ } 8'(= r ) } ⊢ 2'(= a3◂ [ *{ a23◂ [ ]r}] )
; .mov_ptn 0(<2)◂{ 1(<4)◂{ } 8'(= r ) } ⊢ 2'(= a3◂ [ *{ a23◂ [ ]r}] )
	ALC_RCD 2, rax
	mov r13,rax
	mov rax,unt 
	mov rax,unt_1
	mov QWORD [r13+8+8*0],rax
	mov rax,QWORD [rsp-8+8*1]
	mov QWORD [r13+8+8*1],rax
	mov rax,r13
	mov BYTE [rax+6],0
	mov r8,rax
	add rsp,8
	jmp LB_2308
LB_2308:
	cmp BYTE [r8+6],0
	jnz LB_2296
	POP_GRM_SCC
	ret
LB_2296:
	RB_GRM
	cmp r14,r9
	jge LB_2312
 lea rdi,[r13+8+r14] 
	C_PUSH_REGS
	call scf_d
	C_POP_REGS
	cmp rax,0 
	jz LB_2312
	add r14,rsi
	push rdi
	jmp LB_2313
LB_2312:
	mov r8,unt_1
	jmp LB_2310
LB_2313:
	jmp LB_2311
LB_2310:
	add rsp,0
	jmp LB_2309
LB_2311:
	lea rax,[r14+2]
	cmp rax,r9
	jg LB_2316
	jmp LB_2317
LB_2316:
	mov r8,unt_1
	jmp LB_2314
LB_2317:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],120
	jnz LB_2318
	cmp BYTE [rdi+1],39
	jnz LB_2318
	jmp LB_2319
LB_2318:
	mov r8,unt_1
	jmp LB_2314
LB_2319:
	add r14,2
	jmp LB_2315
LB_2314:
	add rsp,8
	jmp LB_2309
LB_2315:
	mov QWORD [rsp+8*1],r14
	mov r13,QWORD [rsp+16+8*1]
	mov r14,QWORD [rsp+8*1]
	jmp LB_2320
LB_2320
; #107 { } ⊢ 2(<4)◂{ }
; #24 { 2(<4)◂{ } 8'(= r ) } ⊢ 0(<2)◂{ 2(<4)◂{ } 8'(= r ) }
; ∎ 0(<2)◂{ 2(<4)◂{ } 8'(= r ) }
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂{ 2(<4)◂{ } 8'(= r ) } ⊢ 2'(= a3◂ [ *{ a23◂ [ ]r}] )
; .mov_ptn 0(<2)◂{ 2(<4)◂{ } 8'(= r ) } ⊢ 2'(= a3◂ [ *{ a23◂ [ ]r}] )
	ALC_RCD 2, rax
	mov r13,rax
	mov rax,unt 
	mov rax,unt_2
	mov QWORD [r13+8+8*0],rax
	mov rax,QWORD [rsp-8+8*1]
	mov QWORD [r13+8+8*1],rax
	mov rax,r13
	mov BYTE [rax+6],0
	mov r8,rax
	add rsp,8
	jmp LB_2321
LB_2321:
	cmp BYTE [r8+6],0
	jnz LB_2309
	POP_GRM_SCC
	ret
LB_2309:
	RB_GRM
	cmp r14,r9
	jge LB_2325
 lea rdi,[r13+8+r14] 
	C_PUSH_REGS
	call scf_d
	C_POP_REGS
	cmp rax,0 
	jz LB_2325
	add r14,rsi
	push rdi
	jmp LB_2326
LB_2325:
	mov r8,unt_1
	jmp LB_2323
LB_2326:
	jmp LB_2324
LB_2323:
	add rsp,0
	jmp LB_2322
LB_2324:
	lea rax,[r14+1]
	cmp rax,r9
	jg LB_2329
	jmp LB_2330
LB_2329:
	mov r8,unt_1
	jmp LB_2327
LB_2330:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],39
	jnz LB_2331
	jmp LB_2332
LB_2331:
	mov r8,unt_1
	jmp LB_2327
LB_2332:
	add r14,1
	jmp LB_2328
LB_2327:
	add rsp,8
	jmp LB_2322
LB_2328:
	mov QWORD [rsp+8*1],r14
	mov r13,QWORD [rsp+16+8*1]
	mov r14,QWORD [rsp+8*1]
	jmp LB_2333
LB_2333
; #109 { } ⊢ 0(<4)◂{ }
; #24 { 0(<4)◂{ } 8'(= r ) } ⊢ 0(<2)◂{ 0(<4)◂{ } 8'(= r ) }
; ∎ 0(<2)◂{ 0(<4)◂{ } 8'(= r ) }
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂{ 0(<4)◂{ } 8'(= r ) } ⊢ 2'(= a3◂ [ *{ a23◂ [ ]r}] )
; .mov_ptn 0(<2)◂{ 0(<4)◂{ } 8'(= r ) } ⊢ 2'(= a3◂ [ *{ a23◂ [ ]r}] )
	ALC_RCD 2, rax
	mov r13,rax
	mov rax,unt 
	mov rax,unt_0
	mov QWORD [r13+8+8*0],rax
	mov rax,QWORD [rsp-8+8*1]
	mov QWORD [r13+8+8*1],rax
	mov rax,r13
	mov BYTE [rax+6],0
	mov r8,rax
	add rsp,8
	jmp LB_2334
LB_2334:
	cmp BYTE [r8+6],0
	jnz LB_2322
	POP_GRM_SCC
	ret
LB_2322:
	POP_GRM_FAIL 
	ret
ETR_232:
	mov r9,0x0000_ffff_ffff_ffff
	and r9,[r13]
	call GRM_232
	ret
GRM_232:
	PUSH_GRM
	lea rax,[r14+1]
	cmp rax,r9
	jg LB_2338
	jmp LB_2339
LB_2338:
	mov r8,unt_1
	jmp LB_2336
LB_2339:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],96
	jnz LB_2340
	jmp LB_2341
LB_2340:
	mov r8,unt_1
	jmp LB_2336
LB_2341:
	add r14,1
	jmp LB_2337
LB_2336:
	add rsp,0
	jmp LB_2335
LB_2337:
	call GRM_233
	cmp BYTE [r8+6],0
	jnz LB_2344
	jmp LB_2345
LB_2344:
	jmp LB_2342
LB_2345:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a13◂ [ ] ) ⊢ 8'(= a13◂ [ ] )
; .mov_ptn 2'(= a13◂ [ ] ) ⊢ 8'(= a13◂ [ ] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_2343
LB_2342:
	add rsp,0
	jmp LB_2335
LB_2343:
	mov QWORD [rsp+8*1],r14
	mov r13,QWORD [rsp+16+8*1]
	mov r14,QWORD [rsp+8*1]
	jmp LB_2346
LB_2346
; #46 8'(= a13◂ [ ] ) ⊢ { 3'(= a13◂ [ ] ) 2'(= {| l |} ) }
	sub rsp,16
	mov QWORD [rsp+8*0],r13
	mov QWORD [rsp+8*1],r14
; .mov_ptn2 8'(= a13◂ [ ] ) ⊢ 0'(= a13◂ [ ] )
; .mov_ptn 8'(= a13◂ [ ] ) ⊢ 0'(= a13◂ [ ] )
	mov rax,QWORD [rsp-8+8*3]
	mov r13,rax
	call ETR_46
	mov r8,r14
	mov r14,QWORD [rsp-8+8*2]
	mov r9,r13
	mov r13,QWORD [rsp-8+8*1]
	add rsp,24
; #24 2'(= {| l |} ) ⊢ 0(<2)◂2'(= {| l |} )
; ∎ 0(<2)◂2'(= {| l |} )
; .dlt.ptn 3'(= a13◂ [ ] )
	mov rdi,r9
	C_PUSH_REGS
	mov r8,rdi
	call LB_84
	C_POP_REGS
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂2'(= {| l |} ) ⊢ 2'(= a3◂ [ {| l |}] )
	mov r13,r8
; .mov_ptn 0(<2)◂0'(= {| l |} ) ⊢ 2'(= a3◂ [ {| l |}] )
	mov rax,r13
	mov BYTE [rax+6],0
	mov r8,rax
	jmp LB_2347
LB_2347:
	cmp BYTE [r8+6],0
	jnz LB_2335
	POP_GRM_SCC
	ret
LB_2335:
	POP_GRM_FAIL 
	ret
ETR_233:
	mov r9,0x0000_ffff_ffff_ffff
	and r9,[r13]
	call GRM_233
	ret
GRM_233:
	PUSH_GRM
	lea rax,[r14+1]
	cmp rax,r9
	jg LB_2351
	jmp LB_2352
LB_2351:
	mov r8,unt_1
	jmp LB_2349
LB_2352:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],10
	jnz LB_2353
	jmp LB_2354
LB_2353:
	mov r8,unt_1
	jmp LB_2349
LB_2354:
	add r14,1
	jmp LB_2350
LB_2349:
	add rsp,0
	jmp LB_2348
LB_2350:
	mov QWORD [rsp+8*0],r14
	mov r13,QWORD [rsp+16+8*0]
	mov r14,QWORD [rsp+8*0]
	jmp LB_2355
LB_2355
; $ %[ 10r ] ⊢ %[ 10r ]
; #35 { } ⊢ 2(<4)◂{ }
; #43 { %[ 10r ] 2(<4)◂{ } } ⊢ 2'(= a13◂ [ ] )
	sub rsp,16
	mov QWORD [rsp+8*0],r13
	mov QWORD [rsp+8*1],r14
; .mov_ptn2 { %[ 10r ] 2(<4)◂{ } } ⊢ { 0'(= r ) 1'(= a13◂ [ ] ) }
; .mov_ptn 2(<4)◂{ } ⊢ 1'(= a13◂ [ ] )
	mov rax,unt 
	mov rax,unt_2
	mov r14,rax
; .mov_ptn %[ 10r ] ⊢ 0'(= r )
	mov rax,10
	mov r13,rax
	call ETR_43
	mov r14,QWORD [rsp-8+8*2]
	mov r8,r13
	mov r13,QWORD [rsp-8+8*1]
	add rsp,16
; #24 2'(= a13◂ [ ] ) ⊢ 0(<2)◂2'(= a13◂ [ ] )
; ∎ 0(<2)◂2'(= a13◂ [ ] )
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂2'(= a13◂ [ ] ) ⊢ 2'(= a3◂ [ a13◂ [ ]] )
	mov r13,r8
; .mov_ptn 0(<2)◂0'(= a13◂ [ ] ) ⊢ 2'(= a3◂ [ a13◂ [ ]] )
	mov rax,r13
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	jmp LB_2356
LB_2356:
	cmp BYTE [r8+6],0
	jnz LB_2348
	POP_GRM_SCC
	ret
LB_2348:
	RB_GRM
	cmp r14,r9
	jge LB_2360
	jmp LB_2361
LB_2360:
	mov r8,unt_1 
	jmp LB_2358
LB_2361:
	movzx rdi,BYTE [r13+8+r14]
	push rdi 
	add r14,1 
	jmp LB_2359
LB_2358:
	add rsp,0
	jmp LB_2357
LB_2359:
	call GRM_233
	cmp BYTE [r8+6],0
	jnz LB_2364
	jmp LB_2365
LB_2364:
	jmp LB_2362
LB_2365:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a13◂ [ ] ) ⊢ 9'(= a13◂ [ ] )
; .mov_ptn 2'(= a13◂ [ ] ) ⊢ 9'(= a13◂ [ ] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_2363
LB_2362:
	add rsp,8
	jmp LB_2357
LB_2363:
	mov QWORD [rsp+8*2],r14
	mov r13,QWORD [rsp+16+8*2]
	mov r14,QWORD [rsp+8*2]
	jmp LB_2366
LB_2366
; #43 { 8'(= r ) 9'(= a13◂ [ ] ) } ⊢ 2'(= a13◂ [ ] )
	sub rsp,16
	mov QWORD [rsp+8*0],r13
	mov QWORD [rsp+8*1],r14
; .mov_ptn2 { 8'(= r ) 9'(= a13◂ [ ] ) } ⊢ { 0'(= r ) 1'(= a13◂ [ ] ) }
; .mov_ptn 9'(= a13◂ [ ] ) ⊢ 1'(= a13◂ [ ] )
	mov rax,QWORD [rsp-8+8*3]
	mov r14,rax
; .mov_ptn 8'(= r ) ⊢ 0'(= r )
	mov rax,QWORD [rsp-8+8*4]
	mov r13,rax
	call ETR_43
	mov r14,QWORD [rsp-8+8*2]
	mov r8,r13
	mov r13,QWORD [rsp-8+8*1]
	add rsp,32
; #24 2'(= a13◂ [ ] ) ⊢ 0(<2)◂2'(= a13◂ [ ] )
; ∎ 0(<2)◂2'(= a13◂ [ ] )
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂2'(= a13◂ [ ] ) ⊢ 2'(= a3◂ [ a13◂ [ ]] )
	mov r13,r8
; .mov_ptn 0(<2)◂0'(= a13◂ [ ] ) ⊢ 2'(= a3◂ [ a13◂ [ ]] )
	mov rax,r13
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	jmp LB_2367
LB_2367:
	cmp BYTE [r8+6],0
	jnz LB_2357
	POP_GRM_SCC
	ret
LB_2357:
	POP_GRM_FAIL 
	ret
ETR_234:
	mov r9,0x0000_ffff_ffff_ffff
	and r9,[r13]
	call GRM_234
	ret
GRM_234:
	PUSH_GRM
	jmp LB_2370
LB_2369:
	add r14,1 
LB_2370:
	cmp r14,r9
	jge LB_2371
	JZ_LINE_SPC BYTE [r13+8+r14], LB_2369
LB_2371
	call GRM_219
	cmp BYTE [r8+6],0
	jnz LB_2374
	jmp LB_2375
LB_2374:
	jmp LB_2372
LB_2375:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a43◂ [ *{ }] ) ⊢ 8'(= a43◂ [ *{ }] )
; .mov_ptn 2'(= a43◂ [ *{ }] ) ⊢ 8'(= a43◂ [ *{ }] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_2373
LB_2372:
	add rsp,0
	jmp LB_2368
LB_2373:
	jmp LB_2377
LB_2376:
	add r14,1 
LB_2377:
	cmp r14,r9
	jge LB_2378
	JZ_LINE_SPC BYTE [r13+8+r14], LB_2376
LB_2378
	lea rax,[r14+2]
	cmp rax,r9
	jg LB_2381
	jmp LB_2382
LB_2381:
	mov r8,unt_1
	jmp LB_2379
LB_2382:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],47
	jnz LB_2383
	cmp BYTE [rdi+1],47
	jnz LB_2383
	jmp LB_2384
LB_2383:
	mov r8,unt_1
	jmp LB_2379
LB_2384:
	add r14,2
	jmp LB_2380
LB_2379:
	add rsp,8
	jmp LB_2368
LB_2380:
	mov QWORD [rsp+8*1],r14
	mov r13,QWORD [rsp+16+8*1]
	mov r14,QWORD [rsp+8*1]
	jmp LB_2385
LB_2385
; #22 { } ⊢ 1(<2)◂{ }
; #24 1(<2)◂{ } ⊢ 0(<2)◂1(<2)◂{ }
; ∎ 0(<2)◂1(<2)◂{ }
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 8'(= a43◂ [ *{ }] )
	mov rdi,QWORD [rsp-8+8*1]
	C_PUSH_REGS
	mov r8,rdi
	call LB_1706
	C_POP_REGS
; .mov_ptn2 0(<2)◂1(<2)◂{ } ⊢ 2'(= a3◂ [ a2◂ [ a24◂ [ a17◂ [ ]]]] )
; .mov_ptn 0(<2)◂1(<2)◂{ } ⊢ 2'(= a3◂ [ a2◂ [ a24◂ [ a17◂ [ ]]]] )
	mov rax,unt 
	mov rax,unt_1
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,8
	jmp LB_2386
LB_2386:
	cmp BYTE [r8+6],0
	jnz LB_2368
	POP_GRM_SCC
	ret
LB_2368:
	RB_GRM
	jmp LB_2389
LB_2388:
	add r14,1 
LB_2389:
	cmp r14,r9
	jge LB_2390
	JZ_LINE_SPC BYTE [r13+8+r14], LB_2388
LB_2390
	call GRM_219
	cmp BYTE [r8+6],0
	jnz LB_2393
	jmp LB_2394
LB_2393:
	jmp LB_2391
LB_2394:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a43◂ [ *{ }] ) ⊢ 8'(= a43◂ [ *{ }] )
; .mov_ptn 2'(= a43◂ [ *{ }] ) ⊢ 8'(= a43◂ [ *{ }] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_2392
LB_2391:
	add rsp,0
	jmp LB_2387
LB_2392:
	jmp LB_2396
LB_2395:
	add r14,1 
LB_2396:
	cmp r14,r9
	jge LB_2397
	JZ_LINE_SPC BYTE [r13+8+r14], LB_2395
LB_2397
	call GRM_229
	cmp BYTE [r8+6],0
	jnz LB_2400
	jmp LB_2401
LB_2400:
	jmp LB_2398
LB_2401:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a24◂ [ a17◂ [ ]] ) ⊢ 9'(= a24◂ [ a17◂ [ ]] )
; .mov_ptn 2'(= a24◂ [ a17◂ [ ]] ) ⊢ 9'(= a24◂ [ a17◂ [ ]] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_2399
LB_2398:
	add rsp,8
	jmp LB_2387
LB_2399:
	jmp LB_2403
LB_2402:
	add r14,1 
LB_2403:
	cmp r14,r9
	jge LB_2404
	JZ_LINE_SPC BYTE [r13+8+r14], LB_2402
LB_2404
	call GRM_234
	cmp BYTE [r8+6],0
	jnz LB_2407
	jmp LB_2408
LB_2407:
	jmp LB_2405
LB_2408:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a2◂ [ a24◂ [ a17◂ [ ]]] ) ⊢ 10'(= a2◂ [ a24◂ [ a17◂ [ ]]] )
; .mov_ptn 2'(= a2◂ [ a24◂ [ a17◂ [ ]]] ) ⊢ 10'(= a2◂ [ a24◂ [ a17◂ [ ]]] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_2406
LB_2405:
	add rsp,16
	jmp LB_2387
LB_2406:
	mov QWORD [rsp+8*3],r14
	mov r13,QWORD [rsp+16+8*3]
	mov r14,QWORD [rsp+8*3]
	jmp LB_2409
LB_2409
; #23 { 9'(= a24◂ [ a17◂ [ ]] ) 10'(= a2◂ [ a24◂ [ a17◂ [ ]]] ) } ⊢ 0(<2)◂{ 9'(= a24◂ [ a17◂ [ ]] ) 10'(= a2◂ [ a24◂ [ a17◂ [ ]]] ) }
; #24 0(<2)◂{ 9'(= a24◂ [ a17◂ [ ]] ) 10'(= a2◂ [ a24◂ [ a17◂ [ ]]] ) } ⊢ 0(<2)◂0(<2)◂{ 9'(= a24◂ [ a17◂ [ ]] ) 10'(= a2◂ [ a24◂ [ a17◂ [ ]]] ) }
; ∎ 0(<2)◂0(<2)◂{ 9'(= a24◂ [ a17◂ [ ]] ) 10'(= a2◂ [ a24◂ [ a17◂ [ ]]] ) }
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 8'(= a43◂ [ *{ }] )
	mov rdi,QWORD [rsp-8+8*3]
	C_PUSH_REGS
	mov r8,rdi
	call LB_1706
	C_POP_REGS
; .mov_ptn2 0(<2)◂0(<2)◂{ 9'(= a24◂ [ a17◂ [ ]] ) 10'(= a2◂ [ a24◂ [ a17◂ [ ]]] ) } ⊢ 2'(= a3◂ [ a2◂ [ a24◂ [ a17◂ [ ]]]] )
; .mov_ptn 0(<2)◂0(<2)◂{ 9'(= a24◂ [ a17◂ [ ]] ) 10'(= a2◂ [ a24◂ [ a17◂ [ ]]] ) } ⊢ 2'(= a3◂ [ a2◂ [ a24◂ [ a17◂ [ ]]]] )
	ALC_RCD 2, rax
	mov r13,rax
	mov rax,QWORD [rsp-8+8*2]
	mov QWORD [r13+8+8*0],rax
	mov rax,QWORD [rsp-8+8*1]
	mov QWORD [r13+8+8*1],rax
	mov rax,r13
	mov BYTE [rax+6],0
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,24
	jmp LB_2410
LB_2410:
	cmp BYTE [r8+6],0
	jnz LB_2387
	POP_GRM_SCC
	ret
LB_2387:
	POP_GRM_FAIL 
	ret
LB_2670: ;; #54 { 0'(= a2◂ [ a24◂ [ a17◂ [ ]]] ) 1'(= a2◂ [ a24◂ [ a17◂ [ ]]] ) } ⊢ 0'(= a2◂ [ a24◂ [ a17◂ [ ]]] ) : ({ _lst◂4684'(=4685'(=_t24◂_t17)) _lst◂_t24◂_t17 }→_lst◂_t24◂_t17)
;; ?; 1'(= a2◂ [ a24◂ [ a17◂ [ ]]] ) ⊢ 1(<2)◂{ }
	mov rdi,r14
	cmp BYTE [rdi+6],1
	jnz LB_2671
; ∎ 0'(= a2◂ [ a24◂ [ a17◂ [ ]]] )
; .mov_ptn2 0'(= a2◂ [ a24◂ [ a17◂ [ ]]] ) ⊢ 0'(= a2◂ [ a24◂ [ a17◂ [ ]]] )
	ret
LB_2671:
;; ?; 1'(= a2◂ [ a24◂ [ a17◂ [ ]]] ) ⊢ 0(<2)◂{ 2'(= a24◂ [ a17◂ [ ]] ) 3'(= a2◂ [ a24◂ [ a17◂ [ ]]] ) }
	mov r8, QWORD [r14+8]
	mov r9, QWORD [r14+16]
	mov QWORD [GBG_VCT+8*0],r14
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_RCD 2,rdi
; #23 { 2'(= a24◂ [ a17◂ [ ]] ) 0'(= a2◂ [ a24◂ [ a17◂ [ ]]] ) } ⊢ 0(<2)◂{ 2'(= a24◂ [ a17◂ [ ]] ) 0'(= a2◂ [ a24◂ [ a17◂ [ ]]] ) }
; #54 { 0(<2)◂{ 2'(= a24◂ [ a17◂ [ ]] ) 0'(= a2◂ [ a24◂ [ a17◂ [ ]]] ) } 3'(= a2◂ [ a24◂ [ a17◂ [ ]]] ) } ⊢ 0'(= a2◂ [ a24◂ [ a17◂ [ ]]] )
; .mov_ptn2 { 0(<2)◂{ 2'(= a24◂ [ a17◂ [ ]] ) 0'(= a2◂ [ a24◂ [ a17◂ [ ]]] ) } 3'(= a2◂ [ a24◂ [ a17◂ [ ]]] ) } ⊢ { 0'(= a2◂ [ a24◂ [ a17◂ [ ]]] ) 1'(= a2◂ [ a24◂ [ a17◂ [ ]]] ) }
; .mov_ptn 3'(= a2◂ [ a24◂ [ a17◂ [ ]]] ) ⊢ 1'(= a2◂ [ a24◂ [ a17◂ [ ]]] )
	mov rax,r9
	mov r14,rax
	mov r10,r13
; .mov_ptn 0(<2)◂{ 2'(= a24◂ [ a17◂ [ ]] ) 4'(= a2◂ [ a24◂ [ a17◂ [ ]]] ) } ⊢ 0'(= a2◂ [ a24◂ [ a17◂ [ ]]] )
	ALC_RCD 2, rax
	mov r9,rax
	mov rax,r8
	mov QWORD [r9+8+8*0],rax
	mov rax,r10
	mov QWORD [r9+8+8*1],rax
	mov rax,r9
	mov BYTE [rax+6],0
	mov r13,rax
	call LB_2670
; ∎ 0'(= a2◂ [ a24◂ [ a17◂ [ ]]] )
; .mov_ptn2 0'(= a2◂ [ a24◂ [ a17◂ [ ]]] ) ⊢ 0'(= a2◂ [ a24◂ [ a17◂ [ ]]] )
	ret
LB_2669: ;; #55 0'(= a2◂ [ a24◂ [ a17◂ [ ]]] ) ⊢ 0'(= a2◂ [ a24◂ [ a17◂ [ ]]] ) : (_lst◂_t24◂_t17→_lst◂_t24◂_t17)
; #22 { } ⊢ 1(<2)◂{ }
; #54 { 1(<2)◂{ } 0'(= a2◂ [ a24◂ [ a17◂ [ ]]] ) } ⊢ 0'(= a2◂ [ a24◂ [ a17◂ [ ]]] )
; .mov_ptn2 { 1(<2)◂{ } 0'(= a2◂ [ a24◂ [ a17◂ [ ]]] ) } ⊢ { 0'(= a2◂ [ a24◂ [ a17◂ [ ]]] ) 1'(= a2◂ [ a24◂ [ a17◂ [ ]]] ) }
; .mov_ptn 0'(= a2◂ [ a24◂ [ a17◂ [ ]]] ) ⊢ 1'(= a2◂ [ a24◂ [ a17◂ [ ]]] )
	mov rax,r13
	mov r14,rax
; .mov_ptn 1(<2)◂{ } ⊢ 0'(= a2◂ [ a24◂ [ a17◂ [ ]]] )
	mov rax,unt 
	mov rax,unt_1
	mov r13,rax
	call LB_2670
; ∎ 0'(= a2◂ [ a24◂ [ a17◂ [ ]]] )
; .mov_ptn2 0'(= a2◂ [ a24◂ [ a17◂ [ ]]] ) ⊢ 0'(= a2◂ [ a24◂ [ a17◂ [ ]]] )
	ret
LB_3139: ;; #197 { 0'(= a43◂ [ a2◂ [ a29◂ [ a17◂ [ ]{| l |}]]] ) 1'(= a43◂ [ a25◂ [ a17◂ [ ]{| l |}]] ) } ⊢ 0'(= a43◂ [ *{ a2◂ [ a29◂ [ a17◂ [ ]{| l |}]]a25◂ [ a17◂ [ ]{| l |}]}] ) : ({ _t43◂_lst◂_t29◂_s8◂_t17 _t43◂_t25◂_s8◂_t17 }→_t43◂{ _lst◂_t29◂_s8◂_t17 _t25◂_s8◂_t17 })
;; ? 0'(= a43◂ [ a2◂ [ a29◂ [ a17◂ [ ]{| l |}]]] ) ⊢ 0(<2)◂2'(= a2◂ [ a29◂ [ a17◂ [ ]{| l |}]] )
	mov rdi,r13
	cmp BYTE [rdi+6],0
	jnz LB_3140
	mov QWORD [GBG_VCT+8*0],rdi
	mov r8,QWORD [rdi+8]
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_LN rdi
;; ? 1'(= a43◂ [ a25◂ [ a17◂ [ ]{| l |}]] ) ⊢ 0(<2)◂0'(= a25◂ [ a17◂ [ ]{| l |}] )
	mov rdi,r14
	cmp BYTE [rdi+6],0
	jnz LB_3141
	mov QWORD [GBG_VCT+8*0],rdi
	mov r13,QWORD [rdi+8]
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_LN rdi
; #196 { 2'(= a2◂ [ a29◂ [ a17◂ [ ]{| l |}]] ) 0'(= a25◂ [ a17◂ [ ]{| l |}] ) } ⊢ 0(<2)◂{ 2'(= a2◂ [ a29◂ [ a17◂ [ ]{| l |}]] ) 0'(= a25◂ [ a17◂ [ ]{| l |}] ) }
; ∎ 0(<2)◂{ 2'(= a2◂ [ a29◂ [ a17◂ [ ]{| l |}]] ) 0'(= a25◂ [ a17◂ [ ]{| l |}] ) }
; .mov_ptn2 0(<2)◂{ 2'(= a2◂ [ a29◂ [ a17◂ [ ]{| l |}]] ) 0'(= a25◂ [ a17◂ [ ]{| l |}] ) } ⊢ 0'(= a43◂ [ *{ a2◂ [ a29◂ [ a17◂ [ ]{| l |}]]a25◂ [ a17◂ [ ]{| l |}]}] )
	mov r14,r13
; .mov_ptn 0(<2)◂{ 2'(= a2◂ [ a29◂ [ a17◂ [ ]{| l |}]] ) 1'(= a25◂ [ a17◂ [ ]{| l |}] ) } ⊢ 0'(= a43◂ [ *{ a2◂ [ a29◂ [ a17◂ [ ]{| l |}]]a25◂ [ a17◂ [ ]{| l |}]}] )
	ALC_RCD 2, rax
	mov r9,rax
	mov rax,r8
	mov QWORD [r9+8+8*0],rax
	mov rax,r14
	mov QWORD [r9+8+8*1],rax
	mov rax,r9
	mov BYTE [rax+6],0
	mov r13,rax
	ret
LB_3141:
;; ?. 1'(= a43◂ [ a25◂ [ a17◂ [ ]{| l |}]] ) ⊢ 1(<2)◂0'(= a2◂ [ *{ rr{| l |}}] )
	mov QWORD [GBG_VCT+8*0],rdi
	mov r13,QWORD [rdi+8]
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_LN rdi
; #195 0'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 1(<2)◂0'(= a2◂ [ *{ rr{| l |}}] )
; ∎ 1(<2)◂0'(= a2◂ [ *{ rr{| l |}}] )
; .dlt.ptn 2'(= a2◂ [ a29◂ [ a17◂ [ ]{| l |}]] )
	mov rdi,r8
	C_PUSH_REGS
	mov r8,rdi
	call LB_536
	C_POP_REGS
; .mov_ptn2 1(<2)◂0'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 0'(= a43◂ [ *{ a2◂ [ a29◂ [ a17◂ [ ]{| l |}]]a25◂ [ a17◂ [ ]{| l |}]}] )
	mov r14,r13
; .mov_ptn 1(<2)◂1'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 0'(= a43◂ [ *{ a2◂ [ a29◂ [ a17◂ [ ]{| l |}]]a25◂ [ a17◂ [ ]{| l |}]}] )
	mov rax,r14
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],1
	mov QWORD [rax+8],rdi
	mov r13,rax
	ret
LB_3140:
;; ?. 0'(= a43◂ [ a2◂ [ a29◂ [ a17◂ [ ]{| l |}]]] ) ⊢ 1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] )
	mov QWORD [GBG_VCT+8*0],rdi
	mov r8,QWORD [rdi+8]
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_LN rdi
;; ? 1'(= a43◂ [ a25◂ [ a17◂ [ ]{| l |}]] ) ⊢ 0(<2)◂0'(= a25◂ [ a17◂ [ ]{| l |}] )
	mov rdi,r14
	cmp BYTE [rdi+6],0
	jnz LB_3142
	mov QWORD [GBG_VCT+8*0],rdi
	mov r13,QWORD [rdi+8]
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_LN rdi
; #195 2'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] )
; ∎ 1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] )
; .dlt.ptn 0'(= a25◂ [ a17◂ [ ]{| l |}] )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	call LB_679
	C_POP_REGS
; .mov_ptn2 1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 0'(= a43◂ [ *{ a2◂ [ a29◂ [ a17◂ [ ]{| l |}]]a25◂ [ a17◂ [ ]{| l |}]}] )
; .mov_ptn 1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 0'(= a43◂ [ *{ a2◂ [ a29◂ [ a17◂ [ ]{| l |}]]a25◂ [ a17◂ [ ]{| l |}]}] )
	mov rax,r8
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],1
	mov QWORD [rax+8],rdi
	mov r13,rax
	ret
LB_3142:
;; ?. 1'(= a43◂ [ a25◂ [ a17◂ [ ]{| l |}]] ) ⊢ 1(<2)◂0'(= a2◂ [ *{ rr{| l |}}] )
	mov QWORD [GBG_VCT+8*0],rdi
	mov r13,QWORD [rdi+8]
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_LN rdi
; #56 { 2'(= a2◂ [ *{ rr{| l |}}] ) 0'(= a2◂ [ *{ rr{| l |}}] ) } ⊢ 0'(= a2◂ [ *{ rr{| l |}}] )
; .mov_ptn2 { 2'(= a2◂ [ *{ rr{| l |}}] ) 0'(= a2◂ [ *{ rr{| l |}}] ) } ⊢ { 0'(= a2◂ [ *{ rr{| l |}}] ) 1'(= a2◂ [ *{ rr{| l |}}] ) }
; .mov_ptn 0'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 1'(= a2◂ [ *{ rr{| l |}}] )
	mov rax,r13
	mov r14,rax
; .mov_ptn 2'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 0'(= a2◂ [ *{ rr{| l |}}] )
	mov rax,r8
	mov r13,rax
	call LB_1809
; #195 0'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 1(<2)◂0'(= a2◂ [ *{ rr{| l |}}] )
; ∎ 1(<2)◂0'(= a2◂ [ *{ rr{| l |}}] )
; .mov_ptn2 1(<2)◂0'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 0'(= a43◂ [ *{ a2◂ [ a29◂ [ a17◂ [ ]{| l |}]]a25◂ [ a17◂ [ ]{| l |}]}] )
	mov r14,r13
; .mov_ptn 1(<2)◂1'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 0'(= a43◂ [ *{ a2◂ [ a29◂ [ a17◂ [ ]{| l |}]]a25◂ [ a17◂ [ ]{| l |}]}] )
	mov rax,r14
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],1
	mov QWORD [rax+8],rdi
	mov r13,rax
	ret
LB_3184: ;; #197 { 0'(= a43◂ [ *{ a2◂ [ a29◂ [ a17◂ [ ]{| l |}]]a25◂ [ a17◂ [ ]{| l |}]}] ) 1'(= a43◂ [ a15◂ [ *{ a2◂ [ a29◂ [ a17◂ [ ]{| l |}]]a28◂ [ a17◂ [ ]{| l |}]}]] ) } ⊢ 0'(= a43◂ [ *{ *{ a2◂ [ a29◂ [ a17◂ [ ]{| l |}]]a25◂ [ a17◂ [ ]{| l |}]}a15◂ [ *{ a2◂ [ a29◂ [ a17◂ [ ]{| l |}]]a28◂ [ a17◂ [ ]{| l |}]}]}] ) : ({ _t43◂{ _lst◂_t29◂_s8◂_t17 _t25◂_s8◂_t17 } _t43◂_t15◂{ _lst◂_t29◂_s8◂_t17 _t28◂_s8◂_t17 } }→_t43◂{ { _lst◂_t29◂_s8◂_t17 _t25◂_s8◂_t17 } _t15◂{ _lst◂_t29◂_s8◂_t17 _t28◂_s8◂_t17 } })
;; ? 0'(= a43◂ [ *{ a2◂ [ a29◂ [ a17◂ [ ]{| l |}]]a25◂ [ a17◂ [ ]{| l |}]}] ) ⊢ 0(<2)◂0'(= *{ a2◂ [ a29◂ [ a17◂ [ ]{| l |}]]a25◂ [ a17◂ [ ]{| l |}]} )
	mov rdi,r13
	cmp BYTE [rdi+6],0
	jnz LB_3185
;; ? 1'(= a43◂ [ a15◂ [ *{ a2◂ [ a29◂ [ a17◂ [ ]{| l |}]]a28◂ [ a17◂ [ ]{| l |}]}]] ) ⊢ 0(<2)◂2'(= a15◂ [ *{ a2◂ [ a29◂ [ a17◂ [ ]{| l |}]]a28◂ [ a17◂ [ ]{| l |}]}] )
	mov rdi,r14
	cmp BYTE [rdi+6],0
	jnz LB_3186
	mov QWORD [GBG_VCT+8*0],rdi
	mov r8,QWORD [rdi+8]
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_LN rdi
; #196 { 0'(= *{ a2◂ [ a29◂ [ a17◂ [ ]{| l |}]]a25◂ [ a17◂ [ ]{| l |}]} ) 2'(= a15◂ [ *{ a2◂ [ a29◂ [ a17◂ [ ]{| l |}]]a28◂ [ a17◂ [ ]{| l |}]}] ) } ⊢ 0(<2)◂{ 0'(= *{ a2◂ [ a29◂ [ a17◂ [ ]{| l |}]]a25◂ [ a17◂ [ ]{| l |}]} ) 2'(= a15◂ [ *{ a2◂ [ a29◂ [ a17◂ [ ]{| l |}]]a28◂ [ a17◂ [ ]{| l |}]}] ) }
; ∎ 0(<2)◂{ 0'(= *{ a2◂ [ a29◂ [ a17◂ [ ]{| l |}]]a25◂ [ a17◂ [ ]{| l |}]} ) 2'(= a15◂ [ *{ a2◂ [ a29◂ [ a17◂ [ ]{| l |}]]a28◂ [ a17◂ [ ]{| l |}]}] ) }
; .mov_ptn2 0(<2)◂{ 0'(= *{ a2◂ [ a29◂ [ a17◂ [ ]{| l |}]]a25◂ [ a17◂ [ ]{| l |}]} ) 2'(= a15◂ [ *{ a2◂ [ a29◂ [ a17◂ [ ]{| l |}]]a28◂ [ a17◂ [ ]{| l |}]}] ) } ⊢ 0'(= a43◂ [ *{ *{ a2◂ [ a29◂ [ a17◂ [ ]{| l |}]]a25◂ [ a17◂ [ ]{| l |}]}a15◂ [ *{ a2◂ [ a29◂ [ a17◂ [ ]{| l |}]]a28◂ [ a17◂ [ ]{| l |}]}]}] )
	mov r14,r13
; .mov_ptn 0(<2)◂{ 1'(= *{ a2◂ [ a29◂ [ a17◂ [ ]{| l |}]]a25◂ [ a17◂ [ ]{| l |}]} ) 2'(= a15◂ [ *{ a2◂ [ a29◂ [ a17◂ [ ]{| l |}]]a28◂ [ a17◂ [ ]{| l |}]}] ) } ⊢ 0'(= a43◂ [ *{ *{ a2◂ [ a29◂ [ a17◂ [ ]{| l |}]]a25◂ [ a17◂ [ ]{| l |}]}a15◂ [ *{ a2◂ [ a29◂ [ a17◂ [ ]{| l |}]]a28◂ [ a17◂ [ ]{| l |}]}]}] )
	ALC_RCD 2, rax
	mov r9,rax
	mov rax,r14
	mov QWORD [r9+8+8*0],rax
	mov rax,r8
	mov QWORD [r9+8+8*1],rax
	mov rax,r9
	mov BYTE [rax+6],0
	mov r13,rax
	ret
LB_3186:
;; ?. 1'(= a43◂ [ a15◂ [ *{ a2◂ [ a29◂ [ a17◂ [ ]{| l |}]]a28◂ [ a17◂ [ ]{| l |}]}]] ) ⊢ 1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] )
	mov QWORD [GBG_VCT+8*0],rdi
	mov r8,QWORD [rdi+8]
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_LN rdi
; #195 2'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] )
; ∎ 1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] )
; .dlt.ptn 0'(= *{ a2◂ [ a29◂ [ a17◂ [ ]{| l |}]]a25◂ [ a17◂ [ ]{| l |}]} )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	push r8
	mov r8,QWORD [r8+8+8*0]
	call LB_536
	pop r8 
	push r8
	mov r8,QWORD [r8+8+8*1]
	call LB_679
	pop r8 
	FREE_RCD 2, r8
	C_POP_REGS
; .mov_ptn2 1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 0'(= a43◂ [ *{ *{ a2◂ [ a29◂ [ a17◂ [ ]{| l |}]]a25◂ [ a17◂ [ ]{| l |}]}a15◂ [ *{ a2◂ [ a29◂ [ a17◂ [ ]{| l |}]]a28◂ [ a17◂ [ ]{| l |}]}]}] )
; .mov_ptn 1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 0'(= a43◂ [ *{ *{ a2◂ [ a29◂ [ a17◂ [ ]{| l |}]]a25◂ [ a17◂ [ ]{| l |}]}a15◂ [ *{ a2◂ [ a29◂ [ a17◂ [ ]{| l |}]]a28◂ [ a17◂ [ ]{| l |}]}]}] )
	mov rax,r8
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],1
	mov QWORD [rax+8],rdi
	mov r13,rax
	ret
LB_3185:
;; ?. 0'(= a43◂ [ *{ a2◂ [ a29◂ [ a17◂ [ ]{| l |}]]a25◂ [ a17◂ [ ]{| l |}]}] ) ⊢ 1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] )
	mov QWORD [GBG_VCT+8*0],rdi
	mov r8,QWORD [rdi+8]
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_LN rdi
;; ? 1'(= a43◂ [ a15◂ [ *{ a2◂ [ a29◂ [ a17◂ [ ]{| l |}]]a28◂ [ a17◂ [ ]{| l |}]}]] ) ⊢ 0(<2)◂0'(= a15◂ [ *{ a2◂ [ a29◂ [ a17◂ [ ]{| l |}]]a28◂ [ a17◂ [ ]{| l |}]}] )
	mov rdi,r14
	cmp BYTE [rdi+6],0
	jnz LB_3187
	mov QWORD [GBG_VCT+8*0],rdi
	mov r13,QWORD [rdi+8]
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_LN rdi
; #195 2'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] )
; ∎ 1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] )
; .dlt.ptn 0'(= a15◂ [ *{ a2◂ [ a29◂ [ a17◂ [ ]{| l |}]]a28◂ [ a17◂ [ ]{| l |}]}] )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	call LB_690
	C_POP_REGS
; .mov_ptn2 1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 0'(= a43◂ [ *{ *{ a2◂ [ a29◂ [ a17◂ [ ]{| l |}]]a25◂ [ a17◂ [ ]{| l |}]}a15◂ [ *{ a2◂ [ a29◂ [ a17◂ [ ]{| l |}]]a28◂ [ a17◂ [ ]{| l |}]}]}] )
; .mov_ptn 1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 0'(= a43◂ [ *{ *{ a2◂ [ a29◂ [ a17◂ [ ]{| l |}]]a25◂ [ a17◂ [ ]{| l |}]}a15◂ [ *{ a2◂ [ a29◂ [ a17◂ [ ]{| l |}]]a28◂ [ a17◂ [ ]{| l |}]}]}] )
	mov rax,r8
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],1
	mov QWORD [rax+8],rdi
	mov r13,rax
	ret
LB_3187:
;; ?. 1'(= a43◂ [ a15◂ [ *{ a2◂ [ a29◂ [ a17◂ [ ]{| l |}]]a28◂ [ a17◂ [ ]{| l |}]}]] ) ⊢ 1(<2)◂0'(= a2◂ [ *{ rr{| l |}}] )
	mov QWORD [GBG_VCT+8*0],rdi
	mov r13,QWORD [rdi+8]
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_LN rdi
; #56 { 2'(= a2◂ [ *{ rr{| l |}}] ) 0'(= a2◂ [ *{ rr{| l |}}] ) } ⊢ 0'(= a2◂ [ *{ rr{| l |}}] )
; .mov_ptn2 { 2'(= a2◂ [ *{ rr{| l |}}] ) 0'(= a2◂ [ *{ rr{| l |}}] ) } ⊢ { 0'(= a2◂ [ *{ rr{| l |}}] ) 1'(= a2◂ [ *{ rr{| l |}}] ) }
; .mov_ptn 0'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 1'(= a2◂ [ *{ rr{| l |}}] )
	mov rax,r13
	mov r14,rax
; .mov_ptn 2'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 0'(= a2◂ [ *{ rr{| l |}}] )
	mov rax,r8
	mov r13,rax
	call LB_1809
; #195 0'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 1(<2)◂0'(= a2◂ [ *{ rr{| l |}}] )
; ∎ 1(<2)◂0'(= a2◂ [ *{ rr{| l |}}] )
; .mov_ptn2 1(<2)◂0'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 0'(= a43◂ [ *{ *{ a2◂ [ a29◂ [ a17◂ [ ]{| l |}]]a25◂ [ a17◂ [ ]{| l |}]}a15◂ [ *{ a2◂ [ a29◂ [ a17◂ [ ]{| l |}]]a28◂ [ a17◂ [ ]{| l |}]}]}] )
	mov r14,r13
; .mov_ptn 1(<2)◂1'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 0'(= a43◂ [ *{ *{ a2◂ [ a29◂ [ a17◂ [ ]{| l |}]]a25◂ [ a17◂ [ ]{| l |}]}a15◂ [ *{ a2◂ [ a29◂ [ a17◂ [ ]{| l |}]]a28◂ [ a17◂ [ ]{| l |}]}]}] )
	mov rax,r14
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],1
	mov QWORD [rax+8],rdi
	mov r13,rax
	ret
LB_3277: ;; #197 { 0'(= a43◂ [ *{ a2◂ [ a29◂ [ a17◂ [ ]{| l |}]]a25◂ [ a17◂ [ ]{| l |}]}] ) 1'(= a43◂ [ a15◂ [ *{ a16◂ [ a22◂ [ a17◂ [ ]{| l |}]]a2◂ [ a29◂ [ a17◂ [ ]{| l |}]]a28◂ [ a17◂ [ ]{| l |}]}]] ) } ⊢ 0'(= a43◂ [ *{ *{ a2◂ [ a29◂ [ a17◂ [ ]{| l |}]]a25◂ [ a17◂ [ ]{| l |}]}a15◂ [ *{ a16◂ [ a22◂ [ a17◂ [ ]{| l |}]]a2◂ [ a29◂ [ a17◂ [ ]{| l |}]]a28◂ [ a17◂ [ ]{| l |}]}]}] ) : ({ _t43◂{ _lst◂_t29◂_s8◂_t17 _t25◂_s8◂_t17 } _t43◂_t15◂{ _t16◂_t22◂_s8◂_t17 _lst◂_t29◂_s8◂_t17 _t28◂_s8◂_t17 } }→_t43◂{ { _lst◂_t29◂_s8◂_t17 _t25◂_s8◂_t17 } _t15◂{ _t16◂_t22◂_s8◂_t17 _lst◂_t29◂_s8◂_t17 _t28◂_s8◂_t17 } })
;; ? 0'(= a43◂ [ *{ a2◂ [ a29◂ [ a17◂ [ ]{| l |}]]a25◂ [ a17◂ [ ]{| l |}]}] ) ⊢ 0(<2)◂0'(= *{ a2◂ [ a29◂ [ a17◂ [ ]{| l |}]]a25◂ [ a17◂ [ ]{| l |}]} )
	mov rdi,r13
	cmp BYTE [rdi+6],0
	jnz LB_3278
;; ? 1'(= a43◂ [ a15◂ [ *{ a16◂ [ a22◂ [ a17◂ [ ]{| l |}]]a2◂ [ a29◂ [ a17◂ [ ]{| l |}]]a28◂ [ a17◂ [ ]{| l |}]}]] ) ⊢ 0(<2)◂2'(= a15◂ [ *{ a16◂ [ a22◂ [ a17◂ [ ]{| l |}]]a2◂ [ a29◂ [ a17◂ [ ]{| l |}]]a28◂ [ a17◂ [ ]{| l |}]}] )
	mov rdi,r14
	cmp BYTE [rdi+6],0
	jnz LB_3279
	mov QWORD [GBG_VCT+8*0],rdi
	mov r8,QWORD [rdi+8]
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_LN rdi
; #196 { 0'(= *{ a2◂ [ a29◂ [ a17◂ [ ]{| l |}]]a25◂ [ a17◂ [ ]{| l |}]} ) 2'(= a15◂ [ *{ a16◂ [ a22◂ [ a17◂ [ ]{| l |}]]a2◂ [ a29◂ [ a17◂ [ ]{| l |}]]a28◂ [ a17◂ [ ]{| l |}]}] ) } ⊢ 0(<2)◂{ 0'(= *{ a2◂ [ a29◂ [ a17◂ [ ]{| l |}]]a25◂ [ a17◂ [ ]{| l |}]} ) 2'(= a15◂ [ *{ a16◂ [ a22◂ [ a17◂ [ ]{| l |}]]a2◂ [ a29◂ [ a17◂ [ ]{| l |}]]a28◂ [ a17◂ [ ]{| l |}]}] ) }
; ∎ 0(<2)◂{ 0'(= *{ a2◂ [ a29◂ [ a17◂ [ ]{| l |}]]a25◂ [ a17◂ [ ]{| l |}]} ) 2'(= a15◂ [ *{ a16◂ [ a22◂ [ a17◂ [ ]{| l |}]]a2◂ [ a29◂ [ a17◂ [ ]{| l |}]]a28◂ [ a17◂ [ ]{| l |}]}] ) }
; .mov_ptn2 0(<2)◂{ 0'(= *{ a2◂ [ a29◂ [ a17◂ [ ]{| l |}]]a25◂ [ a17◂ [ ]{| l |}]} ) 2'(= a15◂ [ *{ a16◂ [ a22◂ [ a17◂ [ ]{| l |}]]a2◂ [ a29◂ [ a17◂ [ ]{| l |}]]a28◂ [ a17◂ [ ]{| l |}]}] ) } ⊢ 0'(= a43◂ [ *{ *{ a2◂ [ a29◂ [ a17◂ [ ]{| l |}]]a25◂ [ a17◂ [ ]{| l |}]}a15◂ [ *{ a16◂ [ a22◂ [ a17◂ [ ]{| l |}]]a2◂ [ a29◂ [ a17◂ [ ]{| l |}]]a28◂ [ a17◂ [ ]{| l |}]}]}] )
	mov r14,r13
; .mov_ptn 0(<2)◂{ 1'(= *{ a2◂ [ a29◂ [ a17◂ [ ]{| l |}]]a25◂ [ a17◂ [ ]{| l |}]} ) 2'(= a15◂ [ *{ a16◂ [ a22◂ [ a17◂ [ ]{| l |}]]a2◂ [ a29◂ [ a17◂ [ ]{| l |}]]a28◂ [ a17◂ [ ]{| l |}]}] ) } ⊢ 0'(= a43◂ [ *{ *{ a2◂ [ a29◂ [ a17◂ [ ]{| l |}]]a25◂ [ a17◂ [ ]{| l |}]}a15◂ [ *{ a16◂ [ a22◂ [ a17◂ [ ]{| l |}]]a2◂ [ a29◂ [ a17◂ [ ]{| l |}]]a28◂ [ a17◂ [ ]{| l |}]}]}] )
	ALC_RCD 2, rax
	mov r9,rax
	mov rax,r14
	mov QWORD [r9+8+8*0],rax
	mov rax,r8
	mov QWORD [r9+8+8*1],rax
	mov rax,r9
	mov BYTE [rax+6],0
	mov r13,rax
	ret
LB_3279:
;; ?. 1'(= a43◂ [ a15◂ [ *{ a16◂ [ a22◂ [ a17◂ [ ]{| l |}]]a2◂ [ a29◂ [ a17◂ [ ]{| l |}]]a28◂ [ a17◂ [ ]{| l |}]}]] ) ⊢ 1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] )
	mov QWORD [GBG_VCT+8*0],rdi
	mov r8,QWORD [rdi+8]
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_LN rdi
; #195 2'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] )
; ∎ 1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] )
; .dlt.ptn 0'(= *{ a2◂ [ a29◂ [ a17◂ [ ]{| l |}]]a25◂ [ a17◂ [ ]{| l |}]} )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	push r8
	mov r8,QWORD [r8+8+8*0]
	call LB_536
	pop r8 
	push r8
	mov r8,QWORD [r8+8+8*1]
	call LB_679
	pop r8 
	FREE_RCD 2, r8
	C_POP_REGS
; .mov_ptn2 1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 0'(= a43◂ [ *{ *{ a2◂ [ a29◂ [ a17◂ [ ]{| l |}]]a25◂ [ a17◂ [ ]{| l |}]}a15◂ [ *{ a16◂ [ a22◂ [ a17◂ [ ]{| l |}]]a2◂ [ a29◂ [ a17◂ [ ]{| l |}]]a28◂ [ a17◂ [ ]{| l |}]}]}] )
; .mov_ptn 1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 0'(= a43◂ [ *{ *{ a2◂ [ a29◂ [ a17◂ [ ]{| l |}]]a25◂ [ a17◂ [ ]{| l |}]}a15◂ [ *{ a16◂ [ a22◂ [ a17◂ [ ]{| l |}]]a2◂ [ a29◂ [ a17◂ [ ]{| l |}]]a28◂ [ a17◂ [ ]{| l |}]}]}] )
	mov rax,r8
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],1
	mov QWORD [rax+8],rdi
	mov r13,rax
	ret
LB_3278:
;; ?. 0'(= a43◂ [ *{ a2◂ [ a29◂ [ a17◂ [ ]{| l |}]]a25◂ [ a17◂ [ ]{| l |}]}] ) ⊢ 1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] )
	mov QWORD [GBG_VCT+8*0],rdi
	mov r8,QWORD [rdi+8]
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_LN rdi
;; ? 1'(= a43◂ [ a15◂ [ *{ a16◂ [ a22◂ [ a17◂ [ ]{| l |}]]a2◂ [ a29◂ [ a17◂ [ ]{| l |}]]a28◂ [ a17◂ [ ]{| l |}]}]] ) ⊢ 0(<2)◂0'(= a15◂ [ *{ a16◂ [ a22◂ [ a17◂ [ ]{| l |}]]a2◂ [ a29◂ [ a17◂ [ ]{| l |}]]a28◂ [ a17◂ [ ]{| l |}]}] )
	mov rdi,r14
	cmp BYTE [rdi+6],0
	jnz LB_3280
	mov QWORD [GBG_VCT+8*0],rdi
	mov r13,QWORD [rdi+8]
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_LN rdi
; #195 2'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] )
; ∎ 1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] )
; .dlt.ptn 0'(= a15◂ [ *{ a16◂ [ a22◂ [ a17◂ [ ]{| l |}]]a2◂ [ a29◂ [ a17◂ [ ]{| l |}]]a28◂ [ a17◂ [ ]{| l |}]}] )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	call LB_696
	C_POP_REGS
; .mov_ptn2 1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 0'(= a43◂ [ *{ *{ a2◂ [ a29◂ [ a17◂ [ ]{| l |}]]a25◂ [ a17◂ [ ]{| l |}]}a15◂ [ *{ a16◂ [ a22◂ [ a17◂ [ ]{| l |}]]a2◂ [ a29◂ [ a17◂ [ ]{| l |}]]a28◂ [ a17◂ [ ]{| l |}]}]}] )
; .mov_ptn 1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 0'(= a43◂ [ *{ *{ a2◂ [ a29◂ [ a17◂ [ ]{| l |}]]a25◂ [ a17◂ [ ]{| l |}]}a15◂ [ *{ a16◂ [ a22◂ [ a17◂ [ ]{| l |}]]a2◂ [ a29◂ [ a17◂ [ ]{| l |}]]a28◂ [ a17◂ [ ]{| l |}]}]}] )
	mov rax,r8
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],1
	mov QWORD [rax+8],rdi
	mov r13,rax
	ret
LB_3280:
;; ?. 1'(= a43◂ [ a15◂ [ *{ a16◂ [ a22◂ [ a17◂ [ ]{| l |}]]a2◂ [ a29◂ [ a17◂ [ ]{| l |}]]a28◂ [ a17◂ [ ]{| l |}]}]] ) ⊢ 1(<2)◂0'(= a2◂ [ *{ rr{| l |}}] )
	mov QWORD [GBG_VCT+8*0],rdi
	mov r13,QWORD [rdi+8]
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_LN rdi
; #56 { 2'(= a2◂ [ *{ rr{| l |}}] ) 0'(= a2◂ [ *{ rr{| l |}}] ) } ⊢ 0'(= a2◂ [ *{ rr{| l |}}] )
; .mov_ptn2 { 2'(= a2◂ [ *{ rr{| l |}}] ) 0'(= a2◂ [ *{ rr{| l |}}] ) } ⊢ { 0'(= a2◂ [ *{ rr{| l |}}] ) 1'(= a2◂ [ *{ rr{| l |}}] ) }
; .mov_ptn 0'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 1'(= a2◂ [ *{ rr{| l |}}] )
	mov rax,r13
	mov r14,rax
; .mov_ptn 2'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 0'(= a2◂ [ *{ rr{| l |}}] )
	mov rax,r8
	mov r13,rax
	call LB_1809
; #195 0'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 1(<2)◂0'(= a2◂ [ *{ rr{| l |}}] )
; ∎ 1(<2)◂0'(= a2◂ [ *{ rr{| l |}}] )
; .mov_ptn2 1(<2)◂0'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 0'(= a43◂ [ *{ *{ a2◂ [ a29◂ [ a17◂ [ ]{| l |}]]a25◂ [ a17◂ [ ]{| l |}]}a15◂ [ *{ a16◂ [ a22◂ [ a17◂ [ ]{| l |}]]a2◂ [ a29◂ [ a17◂ [ ]{| l |}]]a28◂ [ a17◂ [ ]{| l |}]}]}] )
	mov r14,r13
; .mov_ptn 1(<2)◂1'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 0'(= a43◂ [ *{ *{ a2◂ [ a29◂ [ a17◂ [ ]{| l |}]]a25◂ [ a17◂ [ ]{| l |}]}a15◂ [ *{ a16◂ [ a22◂ [ a17◂ [ ]{| l |}]]a2◂ [ a29◂ [ a17◂ [ ]{| l |}]]a28◂ [ a17◂ [ ]{| l |}]}]}] )
	mov rax,r14
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],1
	mov QWORD [rax+8],rdi
	mov r13,rax
	ret
ETR_235:
	mov r9,0x0000_ffff_ffff_ffff
	and r9,[r13]
	call GRM_235
	ret
GRM_235:
	PUSH_GRM
	jmp LB_2413
LB_2412:
	add r14,1 
LB_2413:
	cmp r14,r9
	jge LB_2414
	JZ_SPC BYTE [r13+8+r14], LB_2412
LB_2414
	lea rax,[r14+2]
	cmp rax,r9
	jg LB_2417
	jmp LB_2418
LB_2417:
	mov r8,unt_1
	jmp LB_2415
LB_2418:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],95
	jnz LB_2419
	cmp BYTE [rdi+1],94
	jnz LB_2419
	jmp LB_2420
LB_2419:
	mov r8,unt_1
	jmp LB_2415
LB_2420:
	add r14,2
	jmp LB_2416
LB_2415:
	add rsp,0
	jmp LB_2411
LB_2416:
	jmp LB_2422
LB_2421:
	add r14,1 
LB_2422:
	cmp r14,r9
	jge LB_2423
	JZ_SPC BYTE [r13+8+r14], LB_2421
LB_2423
	call GRM_236
	cmp BYTE [r8+6],0
	jnz LB_2426
	jmp LB_2427
LB_2426:
	jmp LB_2424
LB_2427:
	sub rsp,16
; .mov_ptn2 2'(= *{ a2◂ [ a20◂ [ a17◂ [ ]{| l |}]]a2◂ [ a21◂ [ {| l |}]]} ) ⊢ { 8'(= a2◂ [ a20◂ [ a17◂ [ ]{| l |}]] ) 9'(= a2◂ [ a21◂ [ {| l |}]] ) }
; .mov_ptn 2'(= *{ a2◂ [ a20◂ [ a17◂ [ ]{| l |}]]a2◂ [ a21◂ [ {| l |}]]} ) ⊢ { 8'(= a2◂ [ a20◂ [ a17◂ [ ]{| l |}]] ) 9'(= a2◂ [ a21◂ [ {| l |}]] ) }
	mov r10, QWORD [r8+8]
	mov QWORD [rsp-8+8*2],r10
	mov r11, QWORD [r8+16]
	mov QWORD [rsp-8+8*1],r11
	mov rdi,r8
	FREE_RCD 2,rdi
	jmp LB_2425
LB_2424:
	add rsp,0
	POP_GRM_FAIL
	ret
LB_2425:
	jmp LB_2429
LB_2428:
	add r14,1 
LB_2429:
	cmp r14,r9
	jge LB_2430
	JZ_SPC BYTE [r13+8+r14], LB_2428
LB_2430
	call GRM_234
	cmp BYTE [r8+6],0
	jnz LB_2433
	jmp LB_2434
LB_2433:
	jmp LB_2431
LB_2434:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a2◂ [ a24◂ [ a17◂ [ ]]] ) ⊢ 10'(= a2◂ [ a24◂ [ a17◂ [ ]]] )
; .mov_ptn 2'(= a2◂ [ a24◂ [ a17◂ [ ]]] ) ⊢ 10'(= a2◂ [ a24◂ [ a17◂ [ ]]] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_2432
LB_2431:
	add rsp,16
	POP_GRM_FAIL
	ret
LB_2432:
	mov QWORD [rsp+8*3],r14
	mov r13,QWORD [rsp+16+8*3]
	mov r14,QWORD [rsp+8*3]
	jmp LB_2435
LB_2435
; #122 { 10'(= a2◂ [ a24◂ [ a17◂ [ ]]] ) 8'(= a2◂ [ a20◂ [ a17◂ [ ]{| l |}]] ) 9'(= a2◂ [ a21◂ [ {| l |}]] ) } ⊢ 3(<4)◂{ 10'(= a2◂ [ a24◂ [ a17◂ [ ]]] ) 8'(= a2◂ [ a20◂ [ a17◂ [ ]{| l |}]] ) 9'(= a2◂ [ a21◂ [ {| l |}]] ) }
; #24 3(<4)◂{ 10'(= a2◂ [ a24◂ [ a17◂ [ ]]] ) 8'(= a2◂ [ a20◂ [ a17◂ [ ]{| l |}]] ) 9'(= a2◂ [ a21◂ [ {| l |}]] ) } ⊢ 0(<2)◂3(<4)◂{ 10'(= a2◂ [ a24◂ [ a17◂ [ ]]] ) 8'(= a2◂ [ a20◂ [ a17◂ [ ]{| l |}]] ) 9'(= a2◂ [ a21◂ [ {| l |}]] ) }
; ∎ 0(<2)◂3(<4)◂{ 10'(= a2◂ [ a24◂ [ a17◂ [ ]]] ) 8'(= a2◂ [ a20◂ [ a17◂ [ ]{| l |}]] ) 9'(= a2◂ [ a21◂ [ {| l |}]] ) }
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂3(<4)◂{ 10'(= a2◂ [ a24◂ [ a17◂ [ ]]] ) 8'(= a2◂ [ a20◂ [ a17◂ [ ]{| l |}]] ) 9'(= a2◂ [ a21◂ [ {| l |}]] ) } ⊢ 2'(= a3◂ [ a27◂ [ a17◂ [ ]{| l |}]] )
; .mov_ptn 0(<2)◂3(<4)◂{ 10'(= a2◂ [ a24◂ [ a17◂ [ ]]] ) 8'(= a2◂ [ a20◂ [ a17◂ [ ]{| l |}]] ) 9'(= a2◂ [ a21◂ [ {| l |}]] ) } ⊢ 2'(= a3◂ [ a27◂ [ a17◂ [ ]{| l |}]] )
	ALC_RCD 3, rax
	mov r13,rax
	mov rax,QWORD [rsp-8+8*1]
	mov QWORD [r13+8+8*0],rax
	mov rax,QWORD [rsp-8+8*3]
	mov QWORD [r13+8+8*1],rax
	mov rax,QWORD [rsp-8+8*2]
	mov QWORD [r13+8+8*2],rax
	mov rax,r13
	mov BYTE [rax+6],3
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,24
	jmp LB_2436
LB_2436:
	cmp BYTE [r8+6],0
	jnz LB_2411
	POP_GRM_SCC
	ret
LB_2411:
	RB_GRM
	jmp LB_2439
LB_2438:
	add r14,1 
LB_2439:
	cmp r14,r9
	jge LB_2440
	JZ_SPC BYTE [r13+8+r14], LB_2438
LB_2440
	call GRM_193
	cmp BYTE [r8+6],0
	jnz LB_2443
	jmp LB_2444
LB_2443:
	jmp LB_2441
LB_2444:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a19◂ [ a17◂ [ ]] ) ⊢ 8'(= a19◂ [ a17◂ [ ]] )
; .mov_ptn 2'(= a19◂ [ a17◂ [ ]] ) ⊢ 8'(= a19◂ [ a17◂ [ ]] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_2442
LB_2441:
	add rsp,0
	jmp LB_2437
LB_2442:
	jmp LB_2446
LB_2445:
	add r14,1 
LB_2446:
	cmp r14,r9
	jge LB_2447
	JZ_SPC BYTE [r13+8+r14], LB_2445
LB_2447
	lea rax,[r14+1]
	cmp rax,r9
	jg LB_2450
	jmp LB_2451
LB_2450:
	mov r8,unt_1
	jmp LB_2448
LB_2451:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],95
	jnz LB_2452
	jmp LB_2453
LB_2452:
	mov r8,unt_1
	jmp LB_2448
LB_2453:
	add r14,1
	jmp LB_2449
LB_2448:
	add rsp,8
	jmp LB_2437
LB_2449:
	jmp LB_2455
LB_2454:
	add r14,1 
LB_2455:
	cmp r14,r9
	jge LB_2456
	JZ_SPC BYTE [r13+8+r14], LB_2454
LB_2456
	lea rax,[r14+3]
	cmp rax,r9
	jg LB_2459
	jmp LB_2460
LB_2459:
	mov r8,unt_1
	jmp LB_2457
LB_2460:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],226
	jnz LB_2461
	cmp BYTE [rdi+1],138
	jnz LB_2461
	cmp BYTE [rdi+2],162
	jnz LB_2461
	jmp LB_2462
LB_2461:
	mov r8,unt_1
	jmp LB_2457
LB_2462:
	add r14,3
	jmp LB_2458
LB_2457:
	add rsp,8
	jmp LB_2437
LB_2458:
	jmp LB_2464
LB_2463:
	add r14,1 
LB_2464:
	cmp r14,r9
	jge LB_2465
	JZ_SPC BYTE [r13+8+r14], LB_2463
LB_2465
	call GRM_208
	cmp BYTE [r8+6],0
	jnz LB_2468
	jmp LB_2469
LB_2468:
	jmp LB_2466
LB_2469:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a16◂ [ a21◂ [ {| l |}]] ) ⊢ 9'(= a16◂ [ a21◂ [ {| l |}]] )
; .mov_ptn 2'(= a16◂ [ a21◂ [ {| l |}]] ) ⊢ 9'(= a16◂ [ a21◂ [ {| l |}]] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_2467
LB_2466:
	add rsp,8
	jmp LB_2437
LB_2467:
	mov QWORD [rsp+8*2],r14
	mov r13,QWORD [rsp+16+8*2]
	mov r14,QWORD [rsp+8*2]
	jmp LB_2470
LB_2470
; #22 { } ⊢ 1(<2)◂{ }
; #82 1(<2)◂{ } ⊢ 0(<2)◂1(<2)◂{ }
; #123 { 8'(= a19◂ [ a17◂ [ ]] ) 0(<2)◂1(<2)◂{ } 9'(= a16◂ [ a21◂ [ {| l |}]] ) } ⊢ 2(<4)◂{ 8'(= a19◂ [ a17◂ [ ]] ) 0(<2)◂1(<2)◂{ } 9'(= a16◂ [ a21◂ [ {| l |}]] ) }
; #24 2(<4)◂{ 8'(= a19◂ [ a17◂ [ ]] ) 0(<2)◂1(<2)◂{ } 9'(= a16◂ [ a21◂ [ {| l |}]] ) } ⊢ 0(<2)◂2(<4)◂{ 8'(= a19◂ [ a17◂ [ ]] ) 0(<2)◂1(<2)◂{ } 9'(= a16◂ [ a21◂ [ {| l |}]] ) }
; ∎ 0(<2)◂2(<4)◂{ 8'(= a19◂ [ a17◂ [ ]] ) 0(<2)◂1(<2)◂{ } 9'(= a16◂ [ a21◂ [ {| l |}]] ) }
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂2(<4)◂{ 8'(= a19◂ [ a17◂ [ ]] ) 0(<2)◂1(<2)◂{ } 9'(= a16◂ [ a21◂ [ {| l |}]] ) } ⊢ 2'(= a3◂ [ a27◂ [ a17◂ [ ]{| l |}]] )
; .mov_ptn 0(<2)◂2(<4)◂{ 8'(= a19◂ [ a17◂ [ ]] ) 0(<2)◂1(<2)◂{ } 9'(= a16◂ [ a21◂ [ {| l |}]] ) } ⊢ 2'(= a3◂ [ a27◂ [ a17◂ [ ]{| l |}]] )
	ALC_RCD 3, rax
	mov r13,rax
	mov rax,QWORD [rsp-8+8*2]
	mov QWORD [r13+8+8*0],rax
	mov rax,unt 
	mov rax,unt_1
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov QWORD [r13+8+8*1],rax
	mov rax,QWORD [rsp-8+8*1]
	mov QWORD [r13+8+8*2],rax
	mov rax,r13
	mov BYTE [rax+6],2
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,16
	jmp LB_2471
LB_2471:
	cmp BYTE [r8+6],0
	jnz LB_2437
	POP_GRM_SCC
	ret
LB_2437:
	POP_GRM_FAIL 
	ret
ETR_236:
	mov r9,0x0000_ffff_ffff_ffff
	and r9,[r13]
	call GRM_236
	ret
GRM_236:
	PUSH_GRM
	jmp LB_2474
LB_2473:
	add r14,1 
LB_2474:
	cmp r14,r9
	jge LB_2475
	JZ_SPC BYTE [r13+8+r14], LB_2473
LB_2475
	call GRM_190
	cmp BYTE [r8+6],0
	jnz LB_2478
	jmp LB_2479
LB_2478:
	jmp LB_2476
LB_2479:
; .mov_ptn2 2'(= *{ } ) ⊢ { }
; .mov_ptn 2'(= *{ } ) ⊢ { }
	jmp LB_2477
LB_2476:
	add rsp,0
	jmp LB_2472
LB_2477:
	jmp LB_2481
LB_2480:
	add r14,1 
LB_2481:
	cmp r14,r9
	jge LB_2482
	JZ_SPC BYTE [r13+8+r14], LB_2480
LB_2482
	lea rax,[r14+3]
	cmp rax,r9
	jg LB_2485
	jmp LB_2486
LB_2485:
	mov r8,unt_1
	jmp LB_2483
LB_2486:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],226
	jnz LB_2487
	cmp BYTE [rdi+1],138
	jnz LB_2487
	cmp BYTE [rdi+2],162
	jnz LB_2487
	jmp LB_2488
LB_2487:
	mov r8,unt_1
	jmp LB_2483
LB_2488:
	add r14,3
	jmp LB_2484
LB_2483:
	add rsp,0
	jmp LB_2472
LB_2484:
	jmp LB_2490
LB_2489:
	add r14,1 
LB_2490:
	cmp r14,r9
	jge LB_2491
	JZ_SPC BYTE [r13+8+r14], LB_2489
LB_2491
	call GRM_212
	cmp BYTE [r8+6],0
	jnz LB_2494
	jmp LB_2495
LB_2494:
	jmp LB_2492
LB_2495:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a21◂ [ {| l |}] ) ⊢ 8'(= a21◂ [ {| l |}] )
; .mov_ptn 2'(= a21◂ [ {| l |}] ) ⊢ 8'(= a21◂ [ {| l |}] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_2493
LB_2492:
	add rsp,0
	POP_GRM_FAIL
	ret
LB_2493:
	mov QWORD [rsp+8*1],r14
	mov r13,QWORD [rsp+16+8*1]
	mov r14,QWORD [rsp+8*1]
	jmp LB_2496
LB_2496
; #22 { } ⊢ 1(<2)◂{ }
; #22 { } ⊢ 1(<2)◂{ }
; #23 { 8'(= a21◂ [ {| l |}] ) 1(<2)◂{ } } ⊢ 0(<2)◂{ 8'(= a21◂ [ {| l |}] ) 1(<2)◂{ } }
; #24 { 1(<2)◂{ } 0(<2)◂{ 8'(= a21◂ [ {| l |}] ) 1(<2)◂{ } } } ⊢ 0(<2)◂{ 1(<2)◂{ } 0(<2)◂{ 8'(= a21◂ [ {| l |}] ) 1(<2)◂{ } } }
; ∎ 0(<2)◂{ 1(<2)◂{ } 0(<2)◂{ 8'(= a21◂ [ {| l |}] ) 1(<2)◂{ } } }
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn { }
; .mov_ptn2 0(<2)◂{ 1(<2)◂{ } 0(<2)◂{ 8'(= a21◂ [ {| l |}] ) 1(<2)◂{ } } } ⊢ 2'(= a3◂ [ *{ a2◂ [ a20◂ [ a17◂ [ ]{| l |}]]a2◂ [ a21◂ [ {| l |}]]}] )
; .mov_ptn 0(<2)◂{ 1(<2)◂{ } 0(<2)◂{ 8'(= a21◂ [ {| l |}] ) 1(<2)◂{ } } } ⊢ 2'(= a3◂ [ *{ a2◂ [ a20◂ [ a17◂ [ ]{| l |}]]a2◂ [ a21◂ [ {| l |}]]}] )
	ALC_RCD 2, rax
	mov r13,rax
	mov rax,unt 
	mov rax,unt_1
	mov QWORD [r13+8+8*0],rax
	ALC_RCD 2, rax
	mov r14,rax
	mov rax,QWORD [rsp-8+8*1]
	mov QWORD [r14+8+8*0],rax
	mov rax,unt 
	mov rax,unt_1
	mov QWORD [r14+8+8*1],rax
	mov rax,r14
	mov BYTE [rax+6],0
	mov QWORD [r13+8+8*1],rax
	mov rax,r13
	mov BYTE [rax+6],0
	mov r8,rax
	add rsp,8
	jmp LB_2497
LB_2497:
	cmp BYTE [r8+6],0
	jnz LB_2472
	POP_GRM_SCC
	ret
LB_2472:
	RB_GRM
	jmp LB_2500
LB_2499:
	add r14,1 
LB_2500:
	cmp r14,r9
	jge LB_2501
	JZ_SPC BYTE [r13+8+r14], LB_2499
LB_2501
	call GRM_207
	cmp BYTE [r8+6],0
	jnz LB_2504
	jmp LB_2505
LB_2504:
	jmp LB_2502
LB_2505:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a20◂ [ a17◂ [ ]{| l |}] ) ⊢ 8'(= a20◂ [ a17◂ [ ]{| l |}] )
; .mov_ptn 2'(= a20◂ [ a17◂ [ ]{| l |}] ) ⊢ 8'(= a20◂ [ a17◂ [ ]{| l |}] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_2503
LB_2502:
	add rsp,0
	jmp LB_2498
LB_2503:
	jmp LB_2507
LB_2506:
	add r14,1 
LB_2507:
	cmp r14,r9
	jge LB_2508
	JZ_SPC BYTE [r13+8+r14], LB_2506
LB_2508
	call GRM_206
	cmp BYTE [r8+6],0
	jnz LB_2511
	jmp LB_2512
LB_2511:
	jmp LB_2509
LB_2512:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a2◂ [ a20◂ [ a17◂ [ ]{| l |}]] ) ⊢ 9'(= a2◂ [ a20◂ [ a17◂ [ ]{| l |}]] )
; .mov_ptn 2'(= a2◂ [ a20◂ [ a17◂ [ ]{| l |}]] ) ⊢ 9'(= a2◂ [ a20◂ [ a17◂ [ ]{| l |}]] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_2510
LB_2509:
	add rsp,8
	jmp LB_2498
LB_2510:
	jmp LB_2514
LB_2513:
	add r14,1 
LB_2514:
	cmp r14,r9
	jge LB_2515
	JZ_SPC BYTE [r13+8+r14], LB_2513
LB_2515
	lea rax,[r14+3]
	cmp rax,r9
	jg LB_2518
	jmp LB_2519
LB_2518:
	mov r8,unt_1
	jmp LB_2516
LB_2519:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],226
	jnz LB_2520
	cmp BYTE [rdi+1],138
	jnz LB_2520
	cmp BYTE [rdi+2],162
	jnz LB_2520
	jmp LB_2521
LB_2520:
	mov r8,unt_1
	jmp LB_2516
LB_2521:
	add r14,3
	jmp LB_2517
LB_2516:
	add rsp,16
	jmp LB_2498
LB_2517:
	jmp LB_2523
LB_2522:
	add r14,1 
LB_2523:
	cmp r14,r9
	jge LB_2524
	JZ_SPC BYTE [r13+8+r14], LB_2522
LB_2524
	call GRM_212
	cmp BYTE [r8+6],0
	jnz LB_2527
	jmp LB_2528
LB_2527:
	jmp LB_2525
LB_2528:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a21◂ [ {| l |}] ) ⊢ 10'(= a21◂ [ {| l |}] )
; .mov_ptn 2'(= a21◂ [ {| l |}] ) ⊢ 10'(= a21◂ [ {| l |}] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_2526
LB_2525:
	add rsp,16
	jmp LB_2498
LB_2526:
	jmp LB_2530
LB_2529:
	add r14,1 
LB_2530:
	cmp r14,r9
	jge LB_2531
	JZ_SPC BYTE [r13+8+r14], LB_2529
LB_2531
	call GRM_211
	cmp BYTE [r8+6],0
	jnz LB_2534
	jmp LB_2535
LB_2534:
	jmp LB_2532
LB_2535:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a2◂ [ a21◂ [ {| l |}]] ) ⊢ 11'(= a2◂ [ a21◂ [ {| l |}]] )
; .mov_ptn 2'(= a2◂ [ a21◂ [ {| l |}]] ) ⊢ 11'(= a2◂ [ a21◂ [ {| l |}]] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_2533
LB_2532:
	add rsp,24
	jmp LB_2498
LB_2533:
	mov QWORD [rsp+8*4],r14
	mov r13,QWORD [rsp+16+8*4]
	mov r14,QWORD [rsp+8*4]
	jmp LB_2536
LB_2536
; #23 { 8'(= a20◂ [ a17◂ [ ]{| l |}] ) 9'(= a2◂ [ a20◂ [ a17◂ [ ]{| l |}]] ) } ⊢ 0(<2)◂{ 8'(= a20◂ [ a17◂ [ ]{| l |}] ) 9'(= a2◂ [ a20◂ [ a17◂ [ ]{| l |}]] ) }
; #23 { 10'(= a21◂ [ {| l |}] ) 11'(= a2◂ [ a21◂ [ {| l |}]] ) } ⊢ 0(<2)◂{ 10'(= a21◂ [ {| l |}] ) 11'(= a2◂ [ a21◂ [ {| l |}]] ) }
; #24 { 0(<2)◂{ 8'(= a20◂ [ a17◂ [ ]{| l |}] ) 9'(= a2◂ [ a20◂ [ a17◂ [ ]{| l |}]] ) } 0(<2)◂{ 10'(= a21◂ [ {| l |}] ) 11'(= a2◂ [ a21◂ [ {| l |}]] ) } } ⊢ 0(<2)◂{ 0(<2)◂{ 8'(= a20◂ [ a17◂ [ ]{| l |}] ) 9'(= a2◂ [ a20◂ [ a17◂ [ ]{| l |}]] ) } 0(<2)◂{ 10'(= a21◂ [ {| l |}] ) 11'(= a2◂ [ a21◂ [ {| l |}]] ) } }
; ∎ 0(<2)◂{ 0(<2)◂{ 8'(= a20◂ [ a17◂ [ ]{| l |}] ) 9'(= a2◂ [ a20◂ [ a17◂ [ ]{| l |}]] ) } 0(<2)◂{ 10'(= a21◂ [ {| l |}] ) 11'(= a2◂ [ a21◂ [ {| l |}]] ) } }
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂{ 0(<2)◂{ 8'(= a20◂ [ a17◂ [ ]{| l |}] ) 9'(= a2◂ [ a20◂ [ a17◂ [ ]{| l |}]] ) } 0(<2)◂{ 10'(= a21◂ [ {| l |}] ) 11'(= a2◂ [ a21◂ [ {| l |}]] ) } } ⊢ 2'(= a3◂ [ *{ a2◂ [ a20◂ [ a17◂ [ ]{| l |}]]a2◂ [ a21◂ [ {| l |}]]}] )
; .mov_ptn 0(<2)◂{ 0(<2)◂{ 8'(= a20◂ [ a17◂ [ ]{| l |}] ) 9'(= a2◂ [ a20◂ [ a17◂ [ ]{| l |}]] ) } 0(<2)◂{ 10'(= a21◂ [ {| l |}] ) 11'(= a2◂ [ a21◂ [ {| l |}]] ) } } ⊢ 2'(= a3◂ [ *{ a2◂ [ a20◂ [ a17◂ [ ]{| l |}]]a2◂ [ a21◂ [ {| l |}]]}] )
	ALC_RCD 2, rax
	mov r13,rax
	ALC_RCD 2, rax
	mov r14,rax
	mov rax,QWORD [rsp-8+8*4]
	mov QWORD [r14+8+8*0],rax
	mov rax,QWORD [rsp-8+8*3]
	mov QWORD [r14+8+8*1],rax
	mov rax,r14
	mov BYTE [rax+6],0
	mov QWORD [r13+8+8*0],rax
	ALC_RCD 2, rax
	mov r14,rax
	mov rax,QWORD [rsp-8+8*2]
	mov QWORD [r14+8+8*0],rax
	mov rax,QWORD [rsp-8+8*1]
	mov QWORD [r14+8+8*1],rax
	mov rax,r14
	mov BYTE [rax+6],0
	mov QWORD [r13+8+8*1],rax
	mov rax,r13
	mov BYTE [rax+6],0
	mov r8,rax
	add rsp,32
	jmp LB_2537
LB_2537:
	cmp BYTE [r8+6],0
	jnz LB_2498
	POP_GRM_SCC
	ret
LB_2498:
	POP_GRM_FAIL 
	ret
ETR_237:
	mov r9,0x0000_ffff_ffff_ffff
	and r9,[r13]
	call GRM_237
	ret
GRM_237:
	PUSH_GRM
	jmp LB_2540
LB_2539:
	add r14,1 
LB_2540:
	cmp r14,r9
	jge LB_2541
	JZ_SPC BYTE [r13+8+r14], LB_2539
LB_2541
	call GRM_219
	cmp BYTE [r8+6],0
	jnz LB_2544
	jmp LB_2545
LB_2544:
	jmp LB_2542
LB_2545:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a43◂ [ *{ }] ) ⊢ 8'(= a43◂ [ *{ }] )
; .mov_ptn 2'(= a43◂ [ *{ }] ) ⊢ 8'(= a43◂ [ *{ }] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_2543
LB_2542:
	add rsp,0
	jmp LB_2538
LB_2543:
	jmp LB_2547
LB_2546:
	add r14,1 
LB_2547:
	cmp r14,r9
	jge LB_2548
	JZ_SPC BYTE [r13+8+r14], LB_2546
LB_2548
	lea rax,[r14+4]
	cmp rax,r9
	jg LB_2551
	jmp LB_2552
LB_2551:
	mov r8,unt_1
	jmp LB_2549
LB_2552:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],226
	jnz LB_2553
	cmp BYTE [rdi+1],136
	jnz LB_2553
	cmp BYTE [rdi+2],142
	jnz LB_2553
	cmp BYTE [rdi+3],124
	jnz LB_2553
	jmp LB_2554
LB_2553:
	mov r8,unt_1
	jmp LB_2549
LB_2554:
	add r14,4
	jmp LB_2550
LB_2549:
	add rsp,8
	jmp LB_2538
LB_2550:
	mov QWORD [rsp+8*1],r14
	mov r13,QWORD [rsp+16+8*1]
	mov r14,QWORD [rsp+8*1]
	jmp LB_2555
LB_2555
; #128 0'(= r ) ⊢ 6(<7)◂0'(= r )
; #196 6(<7)◂0'(= r ) ⊢ 0(<2)◂6(<7)◂0'(= r )
; #24 0(<2)◂6(<7)◂0'(= r ) ⊢ 0(<2)◂0(<2)◂6(<7)◂0'(= r )
; ∎ 0(<2)◂0(<2)◂6(<7)◂0'(= r )
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 8'(= a43◂ [ *{ }] )
	mov rdi,QWORD [rsp-8+8*1]
	C_PUSH_REGS
	mov r8,rdi
	call LB_1706
	C_POP_REGS
; .mov_ptn2 0(<2)◂0(<2)◂6(<7)◂0'(= r ) ⊢ 2'(= a3◂ [ a43◂ [ a25◂ [ a17◂ [ ]{| l |}]]] )
; .mov_ptn 0(<2)◂0(<2)◂6(<7)◂0'(= r ) ⊢ 2'(= a3◂ [ a43◂ [ a25◂ [ a17◂ [ ]{| l |}]]] )
	mov rax,r13
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],6
	mov QWORD [rax+8],rdi
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,8
	jmp LB_2556
LB_2556:
	cmp BYTE [r8+6],0
	jnz LB_2538
	POP_GRM_SCC
	ret
LB_2538:
	RB_GRM
	jmp LB_2559
LB_2558:
	add r14,1 
LB_2559:
	cmp r14,r9
	jge LB_2560
	JZ_LINE_SPC BYTE [r13+8+r14], LB_2558
LB_2560
	call GRM_219
	cmp BYTE [r8+6],0
	jnz LB_2563
	jmp LB_2564
LB_2563:
	jmp LB_2561
LB_2564:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a43◂ [ *{ }] ) ⊢ 8'(= a43◂ [ *{ }] )
; .mov_ptn 2'(= a43◂ [ *{ }] ) ⊢ 8'(= a43◂ [ *{ }] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_2562
LB_2561:
	add rsp,0
	jmp LB_2557
LB_2562:
	jmp LB_2566
LB_2565:
	add r14,1 
LB_2566:
	cmp r14,r9
	jge LB_2567
	JZ_LINE_SPC BYTE [r13+8+r14], LB_2565
LB_2567
	lea rax,[r14+3]
	cmp rax,r9
	jg LB_2570
	jmp LB_2571
LB_2570:
	mov r8,unt_1
	jmp LB_2568
LB_2571:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],226
	jnz LB_2572
	cmp BYTE [rdi+1],136
	jnz LB_2572
	cmp BYTE [rdi+2],142
	jnz LB_2572
	jmp LB_2573
LB_2572:
	mov r8,unt_1
	jmp LB_2568
LB_2573:
	add r14,3
	jmp LB_2569
LB_2568:
	add rsp,8
	jmp LB_2557
LB_2569:
	PUSH_GRM
	jmp LB_2577
LB_2576:
	add r14,1 
LB_2577:
	cmp r14,r9
	jge LB_2578
	JZ_LINE_SPC BYTE [r13+8+r14], LB_2576
LB_2578
	lea rax,[r14+1]
	cmp rax,r9
	jg LB_2581
	jmp LB_2582
LB_2581:
	mov r8,unt_1
	jmp LB_2579
LB_2582:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],10
	jnz LB_2583
	jmp LB_2584
LB_2583:
	mov r8,unt_1
	jmp LB_2579
LB_2584:
	add r14,1
	jmp LB_2580
LB_2579:
	add rsp,0
	jmp LB_2575
LB_2580:
	mov QWORD [rsp+8*0],r14
	mov r13,QWORD [rsp+16+8*0]
	mov r14,QWORD [rsp+8*0]
	jmp LB_2585
LB_2585
; #25 { } ⊢ 1(<2)◂{ }
; #129 1(<2)◂{ } ⊢ 5(<7)◂1(<2)◂{ }
; #196 5(<7)◂1(<2)◂{ } ⊢ 0(<2)◂5(<7)◂1(<2)◂{ }
; #24 0(<2)◂5(<7)◂1(<2)◂{ } ⊢ 0(<2)◂0(<2)◂5(<7)◂1(<2)◂{ }
; ∎ 0(<2)◂0(<2)◂5(<7)◂1(<2)◂{ }
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂0(<2)◂5(<7)◂1(<2)◂{ } ⊢ 2'(= a3◂ [ a43◂ [ a25◂ [ a17◂ [ ]{| l |}]]] )
; .mov_ptn 0(<2)◂0(<2)◂5(<7)◂1(<2)◂{ } ⊢ 2'(= a3◂ [ a43◂ [ a25◂ [ a17◂ [ ]{| l |}]]] )
	mov rax,unt 
	mov rax,unt_1
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],5
	mov QWORD [rax+8],rdi
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	jmp LB_2586
LB_2586:
	cmp BYTE [r8+6],0
	jnz LB_2575
	POP_GRM_SCC
	jmp LB_2574
LB_2575:
	RB_GRM
	jmp LB_2589
LB_2588:
	add r14,1 
LB_2589:
	cmp r14,r9
	jge LB_2590
	JZ_LINE_SPC BYTE [r13+8+r14], LB_2588
LB_2590
	call GRM_204
	cmp BYTE [r8+6],0
	jnz LB_2593
	jmp LB_2594
LB_2593:
	jmp LB_2591
LB_2594:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a16◂ [ a20◂ [ a17◂ [ ]{| l |}]] ) ⊢ 8'(= a16◂ [ a20◂ [ a17◂ [ ]{| l |}]] )
; .mov_ptn 2'(= a16◂ [ a20◂ [ a17◂ [ ]{| l |}]] ) ⊢ 8'(= a16◂ [ a20◂ [ a17◂ [ ]{| l |}]] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_2592
LB_2591:
	add rsp,0
	jmp LB_2587
LB_2592:
	jmp LB_2596
LB_2595:
	add r14,1 
LB_2596:
	cmp r14,r9
	jge LB_2597
	JZ_LINE_SPC BYTE [r13+8+r14], LB_2595
LB_2597
	lea rax,[r14+1]
	cmp rax,r9
	jg LB_2600
	jmp LB_2601
LB_2600:
	mov r8,unt_1
	jmp LB_2598
LB_2601:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],10
	jnz LB_2602
	jmp LB_2603
LB_2602:
	mov r8,unt_1
	jmp LB_2598
LB_2603:
	add r14,1
	jmp LB_2599
LB_2598:
	add rsp,8
	jmp LB_2587
LB_2599:
	mov QWORD [rsp+8*1],r14
	mov r13,QWORD [rsp+16+8*1]
	mov r14,QWORD [rsp+8*1]
	jmp LB_2604
LB_2604
; #24 8'(= a16◂ [ a20◂ [ a17◂ [ ]{| l |}]] ) ⊢ 0(<2)◂8'(= a16◂ [ a20◂ [ a17◂ [ ]{| l |}]] )
; #129 0(<2)◂8'(= a16◂ [ a20◂ [ a17◂ [ ]{| l |}]] ) ⊢ 5(<7)◂0(<2)◂8'(= a16◂ [ a20◂ [ a17◂ [ ]{| l |}]] )
; #196 5(<7)◂0(<2)◂8'(= a16◂ [ a20◂ [ a17◂ [ ]{| l |}]] ) ⊢ 0(<2)◂5(<7)◂0(<2)◂8'(= a16◂ [ a20◂ [ a17◂ [ ]{| l |}]] )
; #24 0(<2)◂5(<7)◂0(<2)◂8'(= a16◂ [ a20◂ [ a17◂ [ ]{| l |}]] ) ⊢ 0(<2)◂0(<2)◂5(<7)◂0(<2)◂8'(= a16◂ [ a20◂ [ a17◂ [ ]{| l |}]] )
; ∎ 0(<2)◂0(<2)◂5(<7)◂0(<2)◂8'(= a16◂ [ a20◂ [ a17◂ [ ]{| l |}]] )
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂0(<2)◂5(<7)◂0(<2)◂8'(= a16◂ [ a20◂ [ a17◂ [ ]{| l |}]] ) ⊢ 2'(= a3◂ [ a43◂ [ a25◂ [ a17◂ [ ]{| l |}]]] )
; .mov_ptn 0(<2)◂0(<2)◂5(<7)◂0(<2)◂8'(= a16◂ [ a20◂ [ a17◂ [ ]{| l |}]] ) ⊢ 2'(= a3◂ [ a43◂ [ a25◂ [ a17◂ [ ]{| l |}]]] )
	mov rax,QWORD [rsp-8+8*1]
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],5
	mov QWORD [rax+8],rdi
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,8
	jmp LB_2605
LB_2605:
	cmp BYTE [r8+6],0
	jnz LB_2587
	POP_GRM_SCC
	jmp LB_2574
LB_2587:
	RB_GRM
	jmp LB_2608
LB_2607:
	add r14,1 
LB_2608:
	cmp r14,r9
	jge LB_2609
	JZ_LINE_SPC BYTE [r13+8+r14], LB_2607
LB_2609
	call GRM_222
	cmp BYTE [r8+6],0
	jnz LB_2612
	jmp LB_2613
LB_2612:
	jmp LB_2610
LB_2613:
	sub rsp,16
; .mov_ptn2 2'(= *{ rr} ) ⊢ { 8'(= r ) 9'(= r ) }
; .mov_ptn 2'(= *{ rr} ) ⊢ { 8'(= r ) 9'(= r ) }
	mov r10, QWORD [r8+8]
	mov QWORD [rsp-8+8*2],r10
	mov r11, QWORD [r8+16]
	mov QWORD [rsp-8+8*1],r11
	mov rdi,r8
	FREE_RCD 2,rdi
	jmp LB_2611
LB_2610:
	add rsp,0
	jmp LB_2606
LB_2611:
	mov QWORD [rsp+8*2],r14
	mov r13,QWORD [rsp+16+8*2]
	mov r14,QWORD [rsp+8*2]
	jmp LB_2614
LB_2614
; $ %[ "lc_code ∎ .. " ] ⊢ %[ "lc_code ∎ .. " ]
; #22 { } ⊢ 1(<2)◂{ }
; #23 { { 0'(= r ) 1'(= r ) %[ "lc_code ∎ .. " ] } 1(<2)◂{ } } ⊢ 0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "lc_code ∎ .. " ] } 1(<2)◂{ } }
; #195 0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "lc_code ∎ .. " ] } 1(<2)◂{ } } ⊢ 1(<2)◂0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "lc_code ∎ .. " ] } 1(<2)◂{ } }
; #24 1(<2)◂0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "lc_code ∎ .. " ] } 1(<2)◂{ } } ⊢ 0(<2)◂1(<2)◂0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "lc_code ∎ .. " ] } 1(<2)◂{ } }
; ∎ 0(<2)◂1(<2)◂0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "lc_code ∎ .. " ] } 1(<2)◂{ } }
; .dlt.ptn { 8'(= r ) 9'(= r ) }
	mov rdi,QWORD [rsp-8+8*2]
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
	mov rdi,QWORD [rsp-8+8*1]
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂1(<2)◂0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "lc_code ∎ .. " ] } 1(<2)◂{ } } ⊢ 2'(= a3◂ [ a43◂ [ a25◂ [ a17◂ [ ]{| l |}]]] )
; .mov_ptn 0(<2)◂1(<2)◂0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "lc_code ∎ .. " ] } 1(<2)◂{ } } ⊢ 2'(= a3◂ [ a43◂ [ a25◂ [ a17◂ [ ]{| l |}]]] )
	ALC_RCD 2, rax
	mov r9,rax
	ALC_RCD 3, rax
	mov r10,rax
	mov rax,r13
	mov QWORD [r10+8+8*0],rax
	mov rax,r14
	mov QWORD [r10+8+8*1],rax
	mov rsi,1  
	mov rdi,24
	xor rax,rax 
	C_CALL_SF calloc
	mov QWORD [rax],15
	mov BYTE [rax+8+0],108
	mov BYTE [rax+8+1],99
	mov BYTE [rax+8+2],95
	mov BYTE [rax+8+3],99
	mov BYTE [rax+8+4],111
	mov BYTE [rax+8+5],100
	mov BYTE [rax+8+6],101
	mov BYTE [rax+8+7],32
	mov BYTE [rax+8+8],226
	mov BYTE [rax+8+9],136
	mov BYTE [rax+8+10],142
	mov BYTE [rax+8+11],32
	mov BYTE [rax+8+12],46
	mov BYTE [rax+8+13],46
	mov BYTE [rax+8+14],32
	mov QWORD [r10+8+8*2],rax
	mov rax,r10
	mov QWORD [r9+8+8*0],rax
	mov rax,unt 
	mov rax,unt_1
	mov QWORD [r9+8+8*1],rax
	mov rax,r9
	mov BYTE [rax+6],0
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],1
	mov QWORD [rax+8],rdi
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,16
	jmp LB_2615
LB_2615:
	cmp BYTE [r8+6],0
	jnz LB_2606
	POP_GRM_SCC
	jmp LB_2574
LB_2606:
	POP_GRM_FAIL 
	jmp LB_2574
LB_2574:
	cmp BYTE [r8+6],0
	jnz LB_2616
	jmp LB_2617
LB_2616:
	add rsp,8
	POP_GRM_FAIL
	ret
LB_2617:
	mov QWORD [rsp+8*1],r14
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi 
; .mov_ptn2 2'(= a43◂ [ a25◂ [ a17◂ [ ]{| l |}]] ) ⊢ 3'(= a43◂ [ a25◂ [ a17◂ [ ]{| l |}]] )
	mov r10,r9
; .mov_ptn 2'(= a43◂ [ a25◂ [ a17◂ [ ]{| l |}]] ) ⊢ 3'(= a43◂ [ a25◂ [ a17◂ [ ]{| l |}]] )
	mov rax,r8
	mov r9,rax
	mov r13,QWORD [rsp+16+8*1]
	mov r14,QWORD [rsp+8*1]
	jmp LB_2618
LB_2618
; #24 3'(= a43◂ [ a25◂ [ a17◂ [ ]{| l |}]] ) ⊢ 0(<2)◂3'(= a43◂ [ a25◂ [ a17◂ [ ]{| l |}]] )
; ∎ 0(<2)◂3'(= a43◂ [ a25◂ [ a17◂ [ ]{| l |}]] )
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 8'(= a43◂ [ *{ }] )
	mov rdi,QWORD [rsp-8+8*1]
	C_PUSH_REGS
	mov r8,rdi
	call LB_1706
	C_POP_REGS
; .mov_ptn2 0(<2)◂3'(= a43◂ [ a25◂ [ a17◂ [ ]{| l |}]] ) ⊢ 2'(= a3◂ [ a43◂ [ a25◂ [ a17◂ [ ]{| l |}]]] )
; .mov_ptn 0(<2)◂3'(= a43◂ [ a25◂ [ a17◂ [ ]{| l |}]] ) ⊢ 2'(= a3◂ [ a43◂ [ a25◂ [ a17◂ [ ]{| l |}]]] )
	mov rax,r9
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,8
	jmp LB_2619
LB_2619:
	cmp BYTE [r8+6],0
	jnz LB_2557
	POP_GRM_SCC
	ret
LB_2557:
	RB_GRM
	jmp LB_2622
LB_2621:
	add r14,1 
LB_2622:
	cmp r14,r9
	jge LB_2623
	JZ_LINE_SPC BYTE [r13+8+r14], LB_2621
LB_2623
	call GRM_219
	cmp BYTE [r8+6],0
	jnz LB_2626
	jmp LB_2627
LB_2626:
	jmp LB_2624
LB_2627:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a43◂ [ *{ }] ) ⊢ 8'(= a43◂ [ *{ }] )
; .mov_ptn 2'(= a43◂ [ *{ }] ) ⊢ 8'(= a43◂ [ *{ }] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_2625
LB_2624:
	add rsp,0
	jmp LB_2620
LB_2625:
	jmp LB_2629
LB_2628:
	add r14,1 
LB_2629:
	cmp r14,r9
	jge LB_2630
	JZ_LINE_SPC BYTE [r13+8+r14], LB_2628
LB_2630
	lea rax,[r14+1]
	cmp rax,r9
	jg LB_2633
	jmp LB_2634
LB_2633:
	mov r8,unt_1
	jmp LB_2631
LB_2634:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],94
	jnz LB_2635
	jmp LB_2636
LB_2635:
	mov r8,unt_1
	jmp LB_2631
LB_2636:
	add r14,1
	jmp LB_2632
LB_2631:
	add rsp,8
	jmp LB_2620
LB_2632:
	jmp LB_2638
LB_2637:
	add r14,1 
LB_2638:
	cmp r14,r9
	jge LB_2639
	JZ_LINE_SPC BYTE [r13+8+r14], LB_2637
LB_2639
	call GRM_236
	cmp BYTE [r8+6],0
	jnz LB_2642
	jmp LB_2643
LB_2642:
	jmp LB_2640
LB_2643:
	sub rsp,16
; .mov_ptn2 2'(= *{ a2◂ [ a20◂ [ a17◂ [ ]{| l |}]]a2◂ [ a21◂ [ {| l |}]]} ) ⊢ { 9'(= a2◂ [ a20◂ [ a17◂ [ ]{| l |}]] ) 10'(= a2◂ [ a21◂ [ {| l |}]] ) }
; .mov_ptn 2'(= *{ a2◂ [ a20◂ [ a17◂ [ ]{| l |}]]a2◂ [ a21◂ [ {| l |}]]} ) ⊢ { 9'(= a2◂ [ a20◂ [ a17◂ [ ]{| l |}]] ) 10'(= a2◂ [ a21◂ [ {| l |}]] ) }
	mov r10, QWORD [r8+8]
	mov QWORD [rsp-8+8*2],r10
	mov r11, QWORD [r8+16]
	mov QWORD [rsp-8+8*1],r11
	mov rdi,r8
	FREE_RCD 2,rdi
	jmp LB_2641
LB_2640:
	add rsp,8
	POP_GRM_FAIL
	ret
LB_2641:
	jmp LB_2645
LB_2644:
	add r14,1 
LB_2645:
	cmp r14,r9
	jge LB_2646
	JZ_LINE_SPC BYTE [r13+8+r14], LB_2644
LB_2646
	lea rax,[r14+1]
	cmp rax,r9
	jg LB_2649
	jmp LB_2650
LB_2649:
	mov r8,unt_1
	jmp LB_2647
LB_2650:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],10
	jnz LB_2651
	jmp LB_2652
LB_2651:
	mov r8,unt_1
	jmp LB_2647
LB_2652:
	add r14,1
	jmp LB_2648
LB_2647:
	add rsp,24
	POP_GRM_FAIL
	ret
LB_2648:
	jmp LB_2654
LB_2653:
	add r14,1 
LB_2654:
	cmp r14,r9
	jge LB_2655
	JZ_LINE_SPC BYTE [r13+8+r14], LB_2653
LB_2655
	call GRM_234
	cmp BYTE [r8+6],0
	jnz LB_2658
	jmp LB_2659
LB_2658:
	jmp LB_2656
LB_2659:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a2◂ [ a24◂ [ a17◂ [ ]]] ) ⊢ 11'(= a2◂ [ a24◂ [ a17◂ [ ]]] )
; .mov_ptn 2'(= a2◂ [ a24◂ [ a17◂ [ ]]] ) ⊢ 11'(= a2◂ [ a24◂ [ a17◂ [ ]]] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_2657
LB_2656:
	add rsp,24
	POP_GRM_FAIL
	ret
LB_2657:
	jmp LB_2661
LB_2660:
	add r14,1 
LB_2661:
	cmp r14,r9
	jge LB_2662
	JZ_LINE_SPC BYTE [r13+8+r14], LB_2660
LB_2662
	call GRM_237
	cmp BYTE [r8+6],0
	jnz LB_2665
	jmp LB_2666
LB_2665:
	jmp LB_2663
LB_2666:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a43◂ [ a25◂ [ a17◂ [ ]{| l |}]] ) ⊢ 12'(= a43◂ [ a25◂ [ a17◂ [ ]{| l |}]] )
; .mov_ptn 2'(= a43◂ [ a25◂ [ a17◂ [ ]{| l |}]] ) ⊢ 12'(= a43◂ [ a25◂ [ a17◂ [ ]{| l |}]] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_2664
LB_2663:
	add rsp,32
	POP_GRM_FAIL
	ret
LB_2664:
	mov QWORD [rsp+8*5],r14
	mov r13,QWORD [rsp+16+8*5]
	mov r14,QWORD [rsp+8*5]
	jmp LB_2667
LB_2667
; #55 11'(= a2◂ [ a24◂ [ a17◂ [ ]]] ) ⊢ 2'(= a2◂ [ a24◂ [ a17◂ [ ]]] )
	sub rsp,16
	mov QWORD [rsp+8*0],r13
	mov QWORD [rsp+8*1],r14
; .mov_ptn2 11'(= a2◂ [ a24◂ [ a17◂ [ ]]] ) ⊢ 0'(= a2◂ [ a24◂ [ a17◂ [ ]]] )
; .mov_ptn 11'(= a2◂ [ a24◂ [ a17◂ [ ]]] ) ⊢ 0'(= a2◂ [ a24◂ [ a17◂ [ ]]] )
	mov rax,QWORD [rsp-8+8*4]
	mov r13,rax
	call LB_2669
	mov r14,QWORD [rsp-8+8*2]
	mov r8,r13
	mov r13,QWORD [rsp-8+8*1]
	add rsp,16
; #122 { 2'(= a2◂ [ a24◂ [ a17◂ [ ]]] ) 9'(= a2◂ [ a20◂ [ a17◂ [ ]{| l |}]] ) 10'(= a2◂ [ a21◂ [ {| l |}]] ) } ⊢ 3(<4)◂{ 2'(= a2◂ [ a24◂ [ a17◂ [ ]]] ) 9'(= a2◂ [ a20◂ [ a17◂ [ ]{| l |}]] ) 10'(= a2◂ [ a21◂ [ {| l |}]] ) }
;; ? 12'(= a43◂ [ a25◂ [ a17◂ [ ]{| l |}]] ) ⊢ 0(<2)◂3'(= a25◂ [ a17◂ [ ]{| l |}] )
	mov rdi,QWORD [rsp-8+8*1]
	cmp BYTE [rdi+6],0
	jnz LB_2672
	mov QWORD [GBG_VCT+8*0],rdi
	mov r9,QWORD [rdi+8]
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_LN rdi
; #132 { 3(<4)◂{ 2'(= a2◂ [ a24◂ [ a17◂ [ ]]] ) 9'(= a2◂ [ a20◂ [ a17◂ [ ]{| l |}]] ) 10'(= a2◂ [ a21◂ [ {| l |}]] ) } 3'(= a25◂ [ a17◂ [ ]{| l |}] ) } ⊢ 2(<7)◂{ 3(<4)◂{ 2'(= a2◂ [ a24◂ [ a17◂ [ ]]] ) 9'(= a2◂ [ a20◂ [ a17◂ [ ]{| l |}]] ) 10'(= a2◂ [ a21◂ [ {| l |}]] ) } 3'(= a25◂ [ a17◂ [ ]{| l |}] ) }
; #196 2(<7)◂{ 3(<4)◂{ 2'(= a2◂ [ a24◂ [ a17◂ [ ]]] ) 9'(= a2◂ [ a20◂ [ a17◂ [ ]{| l |}]] ) 10'(= a2◂ [ a21◂ [ {| l |}]] ) } 3'(= a25◂ [ a17◂ [ ]{| l |}] ) } ⊢ 0(<2)◂2(<7)◂{ 3(<4)◂{ 2'(= a2◂ [ a24◂ [ a17◂ [ ]]] ) 9'(= a2◂ [ a20◂ [ a17◂ [ ]{| l |}]] ) 10'(= a2◂ [ a21◂ [ {| l |}]] ) } 3'(= a25◂ [ a17◂ [ ]{| l |}] ) }
; #24 0(<2)◂2(<7)◂{ 3(<4)◂{ 2'(= a2◂ [ a24◂ [ a17◂ [ ]]] ) 9'(= a2◂ [ a20◂ [ a17◂ [ ]{| l |}]] ) 10'(= a2◂ [ a21◂ [ {| l |}]] ) } 3'(= a25◂ [ a17◂ [ ]{| l |}] ) } ⊢ 0(<2)◂0(<2)◂2(<7)◂{ 3(<4)◂{ 2'(= a2◂ [ a24◂ [ a17◂ [ ]]] ) 9'(= a2◂ [ a20◂ [ a17◂ [ ]{| l |}]] ) 10'(= a2◂ [ a21◂ [ {| l |}]] ) } 3'(= a25◂ [ a17◂ [ ]{| l |}] ) }
; ∎ 0(<2)◂0(<2)◂2(<7)◂{ 3(<4)◂{ 2'(= a2◂ [ a24◂ [ a17◂ [ ]]] ) 9'(= a2◂ [ a20◂ [ a17◂ [ ]{| l |}]] ) 10'(= a2◂ [ a21◂ [ {| l |}]] ) } 3'(= a25◂ [ a17◂ [ ]{| l |}] ) }
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 8'(= a43◂ [ *{ }] )
	mov rdi,QWORD [rsp-8+8*5]
	C_PUSH_REGS
	mov r8,rdi
	call LB_1706
	C_POP_REGS
; .mov_ptn2 0(<2)◂0(<2)◂2(<7)◂{ 3(<4)◂{ 2'(= a2◂ [ a24◂ [ a17◂ [ ]]] ) 9'(= a2◂ [ a20◂ [ a17◂ [ ]{| l |}]] ) 10'(= a2◂ [ a21◂ [ {| l |}]] ) } 3'(= a25◂ [ a17◂ [ ]{| l |}] ) } ⊢ 2'(= a3◂ [ a43◂ [ a25◂ [ a17◂ [ ]{| l |}]]] )
	mov r13,r8
; .mov_ptn 0(<2)◂0(<2)◂2(<7)◂{ 3(<4)◂{ 0'(= a2◂ [ a24◂ [ a17◂ [ ]]] ) 9'(= a2◂ [ a20◂ [ a17◂ [ ]{| l |}]] ) 10'(= a2◂ [ a21◂ [ {| l |}]] ) } 3'(= a25◂ [ a17◂ [ ]{| l |}] ) } ⊢ 2'(= a3◂ [ a43◂ [ a25◂ [ a17◂ [ ]{| l |}]]] )
	ALC_RCD 2, rax
	mov r14,rax
	ALC_RCD 3, rax
	mov r10,rax
	mov rax,r13
	mov QWORD [r10+8+8*0],rax
	mov rax,QWORD [rsp-8+8*4]
	mov QWORD [r10+8+8*1],rax
	mov rax,QWORD [rsp-8+8*3]
	mov QWORD [r10+8+8*2],rax
	mov rax,r10
	mov BYTE [rax+6],3
	mov QWORD [r14+8+8*0],rax
	mov rax,r9
	mov QWORD [r14+8+8*1],rax
	mov rax,r14
	mov BYTE [rax+6],2
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,40
	jmp LB_2668
LB_2672:
;; ?. 12'(= a43◂ [ a25◂ [ a17◂ [ ]{| l |}]] ) ⊢ 1(<2)◂3'(= a2◂ [ *{ rr{| l |}}] )
	mov QWORD [GBG_VCT+8*0],rdi
	mov r9,QWORD [rdi+8]
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_LN rdi
; #195 3'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 1(<2)◂3'(= a2◂ [ *{ rr{| l |}}] )
; #24 1(<2)◂3'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 0(<2)◂1(<2)◂3'(= a2◂ [ *{ rr{| l |}}] )
; ∎ 0(<2)◂1(<2)◂3'(= a2◂ [ *{ rr{| l |}}] )
; .dlt.ptn 3(<4)◂{ 2'(= a2◂ [ a24◂ [ a17◂ [ ]]] ) 9'(= a2◂ [ a20◂ [ a17◂ [ ]{| l |}]] ) 10'(= a2◂ [ a21◂ [ {| l |}]] ) }
	mov rdi,r8
	C_PUSH_REGS
	mov r8,rdi
	call LB_498
	C_POP_REGS
	mov rdi,QWORD [rsp-8+8*4]
	C_PUSH_REGS
	mov r8,rdi
	call LB_497
	C_POP_REGS
	mov rdi,QWORD [rsp-8+8*3]
	C_PUSH_REGS
	mov r8,rdi
	call LB_496
	C_POP_REGS
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 8'(= a43◂ [ *{ }] )
	mov rdi,QWORD [rsp-8+8*5]
	C_PUSH_REGS
	mov r8,rdi
	call LB_1706
	C_POP_REGS
; .mov_ptn2 0(<2)◂1(<2)◂3'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 2'(= a3◂ [ a43◂ [ a25◂ [ a17◂ [ ]{| l |}]]] )
; .mov_ptn 0(<2)◂1(<2)◂3'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 2'(= a3◂ [ a43◂ [ a25◂ [ a17◂ [ ]{| l |}]]] )
	mov rax,r9
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],1
	mov QWORD [rax+8],rdi
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,40
	jmp LB_2668
LB_2668:
	cmp BYTE [r8+6],0
	jnz LB_2620
	POP_GRM_SCC
	ret
LB_2620:
	RB_GRM
	jmp LB_2675
LB_2674:
	add r14,1 
LB_2675:
	cmp r14,r9
	jge LB_2676
	JZ_SPC BYTE [r13+8+r14], LB_2674
LB_2676
	call GRM_219
	cmp BYTE [r8+6],0
	jnz LB_2679
	jmp LB_2680
LB_2679:
	jmp LB_2677
LB_2680:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a43◂ [ *{ }] ) ⊢ 8'(= a43◂ [ *{ }] )
; .mov_ptn 2'(= a43◂ [ *{ }] ) ⊢ 8'(= a43◂ [ *{ }] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_2678
LB_2677:
	add rsp,0
	jmp LB_2673
LB_2678:
	jmp LB_2682
LB_2681:
	add r14,1 
LB_2682:
	cmp r14,r9
	jge LB_2683
	JZ_SPC BYTE [r13+8+r14], LB_2681
LB_2683
	lea rax,[r14+3]
	cmp rax,r9
	jg LB_2686
	jmp LB_2687
LB_2686:
	mov r8,unt_1
	jmp LB_2684
LB_2687:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],226
	jnz LB_2688
	cmp BYTE [rdi+1],151
	jnz LB_2688
	cmp BYTE [rdi+2],130
	jnz LB_2688
	jmp LB_2689
LB_2688:
	mov r8,unt_1
	jmp LB_2684
LB_2689:
	add r14,3
	jmp LB_2685
LB_2684:
	add rsp,8
	jmp LB_2673
LB_2685:
	jmp LB_2691
LB_2690:
	add r14,1 
LB_2691:
	cmp r14,r9
	jge LB_2692
	JZ_SPC BYTE [r13+8+r14], LB_2690
LB_2692
	call GRM_207
	cmp BYTE [r8+6],0
	jnz LB_2695
	jmp LB_2696
LB_2695:
	jmp LB_2693
LB_2696:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a20◂ [ a17◂ [ ]{| l |}] ) ⊢ 9'(= a20◂ [ a17◂ [ ]{| l |}] )
; .mov_ptn 2'(= a20◂ [ a17◂ [ ]{| l |}] ) ⊢ 9'(= a20◂ [ a17◂ [ ]{| l |}] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_2694
LB_2693:
	add rsp,8
	POP_GRM_FAIL
	ret
LB_2694:
	jmp LB_2698
LB_2697:
	add r14,1 
LB_2698:
	cmp r14,r9
	jge LB_2699
	JZ_SPC BYTE [r13+8+r14], LB_2697
LB_2699
	lea rax,[r14+1]
	cmp rax,r9
	jg LB_2702
	jmp LB_2703
LB_2702:
	mov r8,unt_1
	jmp LB_2700
LB_2703:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],44
	jnz LB_2704
	jmp LB_2705
LB_2704:
	mov r8,unt_1
	jmp LB_2700
LB_2705:
	add r14,1
	jmp LB_2701
LB_2700:
	add rsp,16
	POP_GRM_FAIL
	ret
LB_2701:
	jmp LB_2707
LB_2706:
	add r14,1 
LB_2707:
	cmp r14,r9
	jge LB_2708
	JZ_SPC BYTE [r13+8+r14], LB_2706
LB_2708
	call GRM_204
	cmp BYTE [r8+6],0
	jnz LB_2711
	jmp LB_2712
LB_2711:
	jmp LB_2709
LB_2712:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a16◂ [ a20◂ [ a17◂ [ ]{| l |}]] ) ⊢ 10'(= a16◂ [ a20◂ [ a17◂ [ ]{| l |}]] )
; .mov_ptn 2'(= a16◂ [ a20◂ [ a17◂ [ ]{| l |}]] ) ⊢ 10'(= a16◂ [ a20◂ [ a17◂ [ ]{| l |}]] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_2710
LB_2709:
	add rsp,16
	POP_GRM_FAIL
	ret
LB_2710:
	PUSH_GRM
	jmp LB_2716
LB_2715:
	add r14,1 
LB_2716:
	cmp r14,r9
	jge LB_2717
	JZ_SPC BYTE [r13+8+r14], LB_2715
LB_2717
	lea rax,[r14+4]
	cmp rax,r9
	jg LB_2720
	jmp LB_2721
LB_2720:
	mov r8,unt_1
	jmp LB_2718
LB_2721:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],226
	jnz LB_2722
	cmp BYTE [rdi+1],138
	jnz LB_2722
	cmp BYTE [rdi+2],162
	jnz LB_2722
	cmp BYTE [rdi+3],124
	jnz LB_2722
	jmp LB_2723
LB_2722:
	mov r8,unt_1
	jmp LB_2718
LB_2723:
	add r14,4
	jmp LB_2719
LB_2718:
	add rsp,0
	jmp LB_2714
LB_2719:
	mov QWORD [rsp+8*0],r14
	mov r13,QWORD [rsp+16+8*0]
	mov r14,QWORD [rsp+8*0]
	jmp LB_2724
LB_2724
; #25 { } ⊢ 1(<2)◂{ }
; #196 1(<2)◂{ } ⊢ 0(<2)◂1(<2)◂{ }
; #24 0(<2)◂1(<2)◂{ } ⊢ 0(<2)◂0(<2)◂1(<2)◂{ }
; ∎ 0(<2)◂0(<2)◂1(<2)◂{ }
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂0(<2)◂1(<2)◂{ } ⊢ 2'(= a3◂ [ a43◂ [ a3◂ [ *{ a16◂ [ a21◂ [ {| l |}]]a25◂ [ a17◂ [ ]{| l |}]}]]] )
; .mov_ptn 0(<2)◂0(<2)◂1(<2)◂{ } ⊢ 2'(= a3◂ [ a43◂ [ a3◂ [ *{ a16◂ [ a21◂ [ {| l |}]]a25◂ [ a17◂ [ ]{| l |}]}]]] )
	mov rax,unt 
	mov rax,unt_1
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	jmp LB_2725
LB_2725:
	cmp BYTE [r8+6],0
	jnz LB_2714
	POP_GRM_SCC
	jmp LB_2713
LB_2714:
	RB_GRM
	jmp LB_2728
LB_2727:
	add r14,1 
LB_2728:
	cmp r14,r9
	jge LB_2729
	JZ_SPC BYTE [r13+8+r14], LB_2727
LB_2729
	lea rax,[r14+3]
	cmp rax,r9
	jg LB_2732
	jmp LB_2733
LB_2732:
	mov r8,unt_1
	jmp LB_2730
LB_2733:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],226
	jnz LB_2734
	cmp BYTE [rdi+1],138
	jnz LB_2734
	cmp BYTE [rdi+2],162
	jnz LB_2734
	jmp LB_2735
LB_2734:
	mov r8,unt_1
	jmp LB_2730
LB_2735:
	add r14,3
	jmp LB_2731
LB_2730:
	add rsp,0
	jmp LB_2726
LB_2731:
	jmp LB_2737
LB_2736:
	add r14,1 
LB_2737:
	cmp r14,r9
	jge LB_2738
	JZ_SPC BYTE [r13+8+r14], LB_2736
LB_2738
	call GRM_208
	cmp BYTE [r8+6],0
	jnz LB_2741
	jmp LB_2742
LB_2741:
	jmp LB_2739
LB_2742:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a16◂ [ a21◂ [ {| l |}]] ) ⊢ 8'(= a16◂ [ a21◂ [ {| l |}]] )
; .mov_ptn 2'(= a16◂ [ a21◂ [ {| l |}]] ) ⊢ 8'(= a16◂ [ a21◂ [ {| l |}]] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_2740
LB_2739:
	add rsp,0
	jmp LB_2726
LB_2740:
	jmp LB_2744
LB_2743:
	add r14,1 
LB_2744:
	cmp r14,r9
	jge LB_2745
	JZ_SPC BYTE [r13+8+r14], LB_2743
LB_2745
	call GRM_237
	cmp BYTE [r8+6],0
	jnz LB_2748
	jmp LB_2749
LB_2748:
	jmp LB_2746
LB_2749:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a43◂ [ a25◂ [ a17◂ [ ]{| l |}]] ) ⊢ 9'(= a43◂ [ a25◂ [ a17◂ [ ]{| l |}]] )
; .mov_ptn 2'(= a43◂ [ a25◂ [ a17◂ [ ]{| l |}]] ) ⊢ 9'(= a43◂ [ a25◂ [ a17◂ [ ]{| l |}]] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_2747
LB_2746:
	add rsp,8
	jmp LB_2726
LB_2747:
	mov QWORD [rsp+8*2],r14
	mov r13,QWORD [rsp+16+8*2]
	mov r14,QWORD [rsp+8*2]
	jmp LB_2750
LB_2750
;; ? 9'(= a43◂ [ a25◂ [ a17◂ [ ]{| l |}]] ) ⊢ 0(<2)◂2'(= a25◂ [ a17◂ [ ]{| l |}] )
	mov rdi,QWORD [rsp-8+8*1]
	cmp BYTE [rdi+6],0
	jnz LB_2752
	mov QWORD [GBG_VCT+8*0],rdi
	mov r8,QWORD [rdi+8]
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_LN rdi
; #24 { 8'(= a16◂ [ a21◂ [ {| l |}]] ) 2'(= a25◂ [ a17◂ [ ]{| l |}] ) } ⊢ 0(<2)◂{ 8'(= a16◂ [ a21◂ [ {| l |}]] ) 2'(= a25◂ [ a17◂ [ ]{| l |}] ) }
; #196 0(<2)◂{ 8'(= a16◂ [ a21◂ [ {| l |}]] ) 2'(= a25◂ [ a17◂ [ ]{| l |}] ) } ⊢ 0(<2)◂0(<2)◂{ 8'(= a16◂ [ a21◂ [ {| l |}]] ) 2'(= a25◂ [ a17◂ [ ]{| l |}] ) }
; #24 0(<2)◂0(<2)◂{ 8'(= a16◂ [ a21◂ [ {| l |}]] ) 2'(= a25◂ [ a17◂ [ ]{| l |}] ) } ⊢ 0(<2)◂0(<2)◂0(<2)◂{ 8'(= a16◂ [ a21◂ [ {| l |}]] ) 2'(= a25◂ [ a17◂ [ ]{| l |}] ) }
; ∎ 0(<2)◂0(<2)◂0(<2)◂{ 8'(= a16◂ [ a21◂ [ {| l |}]] ) 2'(= a25◂ [ a17◂ [ ]{| l |}] ) }
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂0(<2)◂0(<2)◂{ 8'(= a16◂ [ a21◂ [ {| l |}]] ) 2'(= a25◂ [ a17◂ [ ]{| l |}] ) } ⊢ 2'(= a3◂ [ a43◂ [ a3◂ [ *{ a16◂ [ a21◂ [ {| l |}]]a25◂ [ a17◂ [ ]{| l |}]}]]] )
	mov r13,r8
; .mov_ptn 0(<2)◂0(<2)◂0(<2)◂{ 8'(= a16◂ [ a21◂ [ {| l |}]] ) 0'(= a25◂ [ a17◂ [ ]{| l |}] ) } ⊢ 2'(= a3◂ [ a43◂ [ a3◂ [ *{ a16◂ [ a21◂ [ {| l |}]]a25◂ [ a17◂ [ ]{| l |}]}]]] )
	ALC_RCD 2, rax
	mov r14,rax
	mov rax,QWORD [rsp-8+8*2]
	mov QWORD [r14+8+8*0],rax
	mov rax,r13
	mov QWORD [r14+8+8*1],rax
	mov rax,r14
	mov BYTE [rax+6],0
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,16
	jmp LB_2751
LB_2752:
;; ?. 9'(= a43◂ [ a25◂ [ a17◂ [ ]{| l |}]] ) ⊢ 1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] )
	mov QWORD [GBG_VCT+8*0],rdi
	mov r8,QWORD [rdi+8]
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_LN rdi
; #195 2'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] )
; #24 1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 0(<2)◂1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] )
; ∎ 0(<2)◂1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] )
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 8'(= a16◂ [ a21◂ [ {| l |}]] )
	mov rdi,QWORD [rsp-8+8*2]
	C_PUSH_REGS
	mov r8,rdi
	call LB_673
	C_POP_REGS
; .mov_ptn2 0(<2)◂1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 2'(= a3◂ [ a43◂ [ a3◂ [ *{ a16◂ [ a21◂ [ {| l |}]]a25◂ [ a17◂ [ ]{| l |}]}]]] )
	mov r13,r8
; .mov_ptn 0(<2)◂1(<2)◂0'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 2'(= a3◂ [ a43◂ [ a3◂ [ *{ a16◂ [ a21◂ [ {| l |}]]a25◂ [ a17◂ [ ]{| l |}]}]]] )
	mov rax,r13
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],1
	mov QWORD [rax+8],rdi
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,16
	jmp LB_2751
LB_2751:
	cmp BYTE [r8+6],0
	jnz LB_2726
	POP_GRM_SCC
	jmp LB_2713
LB_2726:
	POP_GRM_FAIL 
	jmp LB_2713
LB_2713:
	cmp BYTE [r8+6],0
	jnz LB_2753
	jmp LB_2754
LB_2753:
	add rsp,24
	POP_GRM_FAIL
	ret
LB_2754:
	mov QWORD [rsp+8*3],r14
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi 
; .mov_ptn2 2'(= a43◂ [ a3◂ [ *{ a16◂ [ a21◂ [ {| l |}]]a25◂ [ a17◂ [ ]{| l |}]}]] ) ⊢ 3'(= a43◂ [ a3◂ [ *{ a16◂ [ a21◂ [ {| l |}]]a25◂ [ a17◂ [ ]{| l |}]}]] )
	mov r10,r9
; .mov_ptn 2'(= a43◂ [ a3◂ [ *{ a16◂ [ a21◂ [ {| l |}]]a25◂ [ a17◂ [ ]{| l |}]}]] ) ⊢ 3'(= a43◂ [ a3◂ [ *{ a16◂ [ a21◂ [ {| l |}]]a25◂ [ a17◂ [ ]{| l |}]}]] )
	mov rax,r8
	mov r9,rax
	mov r13,QWORD [rsp+16+8*3]
	mov r14,QWORD [rsp+8*3]
	jmp LB_2755
LB_2755
;; ? 3'(= a43◂ [ a3◂ [ *{ a16◂ [ a21◂ [ {| l |}]]a25◂ [ a17◂ [ ]{| l |}]}]] ) ⊢ 0(<2)◂2'(= a3◂ [ *{ a16◂ [ a21◂ [ {| l |}]]a25◂ [ a17◂ [ ]{| l |}]}] )
	mov rdi,r9
	cmp BYTE [rdi+6],0
	jnz LB_2757
	mov QWORD [GBG_VCT+8*0],rdi
	mov r8,QWORD [rdi+8]
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_LN rdi
;; ? 2'(= a3◂ [ *{ a16◂ [ a21◂ [ {| l |}]]a25◂ [ a17◂ [ ]{| l |}]}] ) ⊢ 0(<2)◂{ 3'(= a16◂ [ a21◂ [ {| l |}]] ) 4'(= a25◂ [ a17◂ [ ]{| l |}] ) }
	mov rdi,r8
	cmp BYTE [rdi+6],0
	jnz LB_2758
	mov r9, QWORD [r8+8]
	mov r10, QWORD [r8+16]
	mov QWORD [GBG_VCT+8*0],r8
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_RCD 2,rdi
; #124 { 9'(= a20◂ [ a17◂ [ ]{| l |}] ) 10'(= a16◂ [ a20◂ [ a17◂ [ ]{| l |}]] ) 3'(= a16◂ [ a21◂ [ {| l |}]] ) } ⊢ 1(<4)◂{ 9'(= a20◂ [ a17◂ [ ]{| l |}] ) 10'(= a16◂ [ a20◂ [ a17◂ [ ]{| l |}]] ) 3'(= a16◂ [ a21◂ [ {| l |}]] ) }
; #132 { 1(<4)◂{ 9'(= a20◂ [ a17◂ [ ]{| l |}] ) 10'(= a16◂ [ a20◂ [ a17◂ [ ]{| l |}]] ) 3'(= a16◂ [ a21◂ [ {| l |}]] ) } 4'(= a25◂ [ a17◂ [ ]{| l |}] ) } ⊢ 2(<7)◂{ 1(<4)◂{ 9'(= a20◂ [ a17◂ [ ]{| l |}] ) 10'(= a16◂ [ a20◂ [ a17◂ [ ]{| l |}]] ) 3'(= a16◂ [ a21◂ [ {| l |}]] ) } 4'(= a25◂ [ a17◂ [ ]{| l |}] ) }
; #196 2(<7)◂{ 1(<4)◂{ 9'(= a20◂ [ a17◂ [ ]{| l |}] ) 10'(= a16◂ [ a20◂ [ a17◂ [ ]{| l |}]] ) 3'(= a16◂ [ a21◂ [ {| l |}]] ) } 4'(= a25◂ [ a17◂ [ ]{| l |}] ) } ⊢ 0(<2)◂2(<7)◂{ 1(<4)◂{ 9'(= a20◂ [ a17◂ [ ]{| l |}] ) 10'(= a16◂ [ a20◂ [ a17◂ [ ]{| l |}]] ) 3'(= a16◂ [ a21◂ [ {| l |}]] ) } 4'(= a25◂ [ a17◂ [ ]{| l |}] ) }
; #24 0(<2)◂2(<7)◂{ 1(<4)◂{ 9'(= a20◂ [ a17◂ [ ]{| l |}] ) 10'(= a16◂ [ a20◂ [ a17◂ [ ]{| l |}]] ) 3'(= a16◂ [ a21◂ [ {| l |}]] ) } 4'(= a25◂ [ a17◂ [ ]{| l |}] ) } ⊢ 0(<2)◂0(<2)◂2(<7)◂{ 1(<4)◂{ 9'(= a20◂ [ a17◂ [ ]{| l |}] ) 10'(= a16◂ [ a20◂ [ a17◂ [ ]{| l |}]] ) 3'(= a16◂ [ a21◂ [ {| l |}]] ) } 4'(= a25◂ [ a17◂ [ ]{| l |}] ) }
; ∎ 0(<2)◂0(<2)◂2(<7)◂{ 1(<4)◂{ 9'(= a20◂ [ a17◂ [ ]{| l |}] ) 10'(= a16◂ [ a20◂ [ a17◂ [ ]{| l |}]] ) 3'(= a16◂ [ a21◂ [ {| l |}]] ) } 4'(= a25◂ [ a17◂ [ ]{| l |}] ) }
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 8'(= a43◂ [ *{ }] )
	mov rdi,QWORD [rsp-8+8*3]
	C_PUSH_REGS
	mov r8,rdi
	call LB_1706
	C_POP_REGS
; .mov_ptn2 0(<2)◂0(<2)◂2(<7)◂{ 1(<4)◂{ 9'(= a20◂ [ a17◂ [ ]{| l |}] ) 10'(= a16◂ [ a20◂ [ a17◂ [ ]{| l |}]] ) 3'(= a16◂ [ a21◂ [ {| l |}]] ) } 4'(= a25◂ [ a17◂ [ ]{| l |}] ) } ⊢ 2'(= a3◂ [ a43◂ [ a25◂ [ a17◂ [ ]{| l |}]]] )
; .mov_ptn 0(<2)◂0(<2)◂2(<7)◂{ 1(<4)◂{ 9'(= a20◂ [ a17◂ [ ]{| l |}] ) 10'(= a16◂ [ a20◂ [ a17◂ [ ]{| l |}]] ) 3'(= a16◂ [ a21◂ [ {| l |}]] ) } 4'(= a25◂ [ a17◂ [ ]{| l |}] ) } ⊢ 2'(= a3◂ [ a43◂ [ a25◂ [ a17◂ [ ]{| l |}]]] )
	ALC_RCD 2, rax
	mov r13,rax
	ALC_RCD 3, rax
	mov r14,rax
	mov rax,QWORD [rsp-8+8*2]
	mov QWORD [r14+8+8*0],rax
	mov rax,QWORD [rsp-8+8*1]
	mov QWORD [r14+8+8*1],rax
	mov rax,r9
	mov QWORD [r14+8+8*2],rax
	mov rax,r14
	mov BYTE [rax+6],1
	mov QWORD [r13+8+8*0],rax
	mov rax,r10
	mov QWORD [r13+8+8*1],rax
	mov rax,r13
	mov BYTE [rax+6],2
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,24
	jmp LB_2756
LB_2758:
;; ?. 2'(= a3◂ [ *{ a16◂ [ a21◂ [ {| l |}]]a25◂ [ a17◂ [ ]{| l |}]}] ) ⊢ 1(<2)◂{ }
; #133 { 9'(= a20◂ [ a17◂ [ ]{| l |}] ) 10'(= a16◂ [ a20◂ [ a17◂ [ ]{| l |}]] ) } ⊢ 1(<7)◂{ 9'(= a20◂ [ a17◂ [ ]{| l |}] ) 10'(= a16◂ [ a20◂ [ a17◂ [ ]{| l |}]] ) }
; #196 1(<7)◂{ 9'(= a20◂ [ a17◂ [ ]{| l |}] ) 10'(= a16◂ [ a20◂ [ a17◂ [ ]{| l |}]] ) } ⊢ 0(<2)◂1(<7)◂{ 9'(= a20◂ [ a17◂ [ ]{| l |}] ) 10'(= a16◂ [ a20◂ [ a17◂ [ ]{| l |}]] ) }
; #24 0(<2)◂1(<7)◂{ 9'(= a20◂ [ a17◂ [ ]{| l |}] ) 10'(= a16◂ [ a20◂ [ a17◂ [ ]{| l |}]] ) } ⊢ 0(<2)◂0(<2)◂1(<7)◂{ 9'(= a20◂ [ a17◂ [ ]{| l |}] ) 10'(= a16◂ [ a20◂ [ a17◂ [ ]{| l |}]] ) }
; ∎ 0(<2)◂0(<2)◂1(<7)◂{ 9'(= a20◂ [ a17◂ [ ]{| l |}] ) 10'(= a16◂ [ a20◂ [ a17◂ [ ]{| l |}]] ) }
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 8'(= a43◂ [ *{ }] )
	mov rdi,QWORD [rsp-8+8*3]
	C_PUSH_REGS
	mov r8,rdi
	call LB_1706
	C_POP_REGS
; .mov_ptn2 0(<2)◂0(<2)◂1(<7)◂{ 9'(= a20◂ [ a17◂ [ ]{| l |}] ) 10'(= a16◂ [ a20◂ [ a17◂ [ ]{| l |}]] ) } ⊢ 2'(= a3◂ [ a43◂ [ a25◂ [ a17◂ [ ]{| l |}]]] )
; .mov_ptn 0(<2)◂0(<2)◂1(<7)◂{ 9'(= a20◂ [ a17◂ [ ]{| l |}] ) 10'(= a16◂ [ a20◂ [ a17◂ [ ]{| l |}]] ) } ⊢ 2'(= a3◂ [ a43◂ [ a25◂ [ a17◂ [ ]{| l |}]]] )
	ALC_RCD 2, rax
	mov r13,rax
	mov rax,QWORD [rsp-8+8*2]
	mov QWORD [r13+8+8*0],rax
	mov rax,QWORD [rsp-8+8*1]
	mov QWORD [r13+8+8*1],rax
	mov rax,r13
	mov BYTE [rax+6],1
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,24
	jmp LB_2756
LB_2757:
;; ?. 3'(= a43◂ [ a3◂ [ *{ a16◂ [ a21◂ [ {| l |}]]a25◂ [ a17◂ [ ]{| l |}]}]] ) ⊢ 1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] )
	mov QWORD [GBG_VCT+8*0],rdi
	mov r8,QWORD [rdi+8]
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_LN rdi
; #195 2'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] )
; #24 1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 0(<2)◂1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] )
; ∎ 0(<2)◂1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] )
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 10'(= a16◂ [ a20◂ [ a17◂ [ ]{| l |}]] )
	mov rdi,QWORD [rsp-8+8*1]
	C_PUSH_REGS
	mov r8,rdi
	call LB_450
	C_POP_REGS
; .dlt.ptn 9'(= a20◂ [ a17◂ [ ]{| l |}] )
	mov rdi,QWORD [rsp-8+8*2]
	C_PUSH_REGS
	mov r8,rdi
	call LB_456
	C_POP_REGS
; .dlt.ptn 8'(= a43◂ [ *{ }] )
	mov rdi,QWORD [rsp-8+8*3]
	C_PUSH_REGS
	mov r8,rdi
	call LB_1706
	C_POP_REGS
; .mov_ptn2 0(<2)◂1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 2'(= a3◂ [ a43◂ [ a25◂ [ a17◂ [ ]{| l |}]]] )
	mov r13,r8
; .mov_ptn 0(<2)◂1(<2)◂0'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 2'(= a3◂ [ a43◂ [ a25◂ [ a17◂ [ ]{| l |}]]] )
	mov rax,r13
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],1
	mov QWORD [rax+8],rdi
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,24
	jmp LB_2756
LB_2756:
	cmp BYTE [r8+6],0
	jnz LB_2673
	POP_GRM_SCC
	ret
LB_2673:
	RB_GRM
	jmp LB_2761
LB_2760:
	add r14,1 
LB_2761:
	cmp r14,r9
	jge LB_2762
	JZ_SPC BYTE [r13+8+r14], LB_2760
LB_2762
	call GRM_219
	cmp BYTE [r8+6],0
	jnz LB_2765
	jmp LB_2766
LB_2765:
	jmp LB_2763
LB_2766:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a43◂ [ *{ }] ) ⊢ 8'(= a43◂ [ *{ }] )
; .mov_ptn 2'(= a43◂ [ *{ }] ) ⊢ 8'(= a43◂ [ *{ }] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_2764
LB_2763:
	add rsp,0
	jmp LB_2759
LB_2764:
	jmp LB_2768
LB_2767:
	add r14,1 
LB_2768:
	cmp r14,r9
	jge LB_2769
	JZ_SPC BYTE [r13+8+r14], LB_2767
LB_2769
	lea rax,[r14+2]
	cmp rax,r9
	jg LB_2772
	jmp LB_2773
LB_2772:
	mov r8,unt_1
	jmp LB_2770
LB_2773:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],194
	jnz LB_2774
	cmp BYTE [rdi+1],187
	jnz LB_2774
	jmp LB_2775
LB_2774:
	mov r8,unt_1
	jmp LB_2770
LB_2775:
	add r14,2
	jmp LB_2771
LB_2770:
	add rsp,8
	jmp LB_2759
LB_2771:
	jmp LB_2777
LB_2776:
	add r14,1 
LB_2777:
	cmp r14,r9
	jge LB_2778
	JZ_SPC BYTE [r13+8+r14], LB_2776
LB_2778
	call GRM_235
	cmp BYTE [r8+6],0
	jnz LB_2781
	jmp LB_2782
LB_2781:
	jmp LB_2779
LB_2782:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a27◂ [ a17◂ [ ]{| l |}] ) ⊢ 9'(= a27◂ [ a17◂ [ ]{| l |}] )
; .mov_ptn 2'(= a27◂ [ a17◂ [ ]{| l |}] ) ⊢ 9'(= a27◂ [ a17◂ [ ]{| l |}] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_2780
LB_2779:
	add rsp,8
	POP_GRM_FAIL
	ret
LB_2780:
	jmp LB_2784
LB_2783:
	add r14,1 
LB_2784:
	cmp r14,r9
	jge LB_2785
	JZ_SPC BYTE [r13+8+r14], LB_2783
LB_2785
	call GRM_237
	cmp BYTE [r8+6],0
	jnz LB_2788
	jmp LB_2789
LB_2788:
	jmp LB_2786
LB_2789:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a43◂ [ a25◂ [ a17◂ [ ]{| l |}]] ) ⊢ 10'(= a43◂ [ a25◂ [ a17◂ [ ]{| l |}]] )
; .mov_ptn 2'(= a43◂ [ a25◂ [ a17◂ [ ]{| l |}]] ) ⊢ 10'(= a43◂ [ a25◂ [ a17◂ [ ]{| l |}]] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_2787
LB_2786:
	add rsp,16
	POP_GRM_FAIL
	ret
LB_2787:
	mov QWORD [rsp+8*3],r14
	mov r13,QWORD [rsp+16+8*3]
	mov r14,QWORD [rsp+8*3]
	jmp LB_2790
LB_2790
;; ? 10'(= a43◂ [ a25◂ [ a17◂ [ ]{| l |}]] ) ⊢ 0(<2)◂2'(= a25◂ [ a17◂ [ ]{| l |}] )
	mov rdi,QWORD [rsp-8+8*1]
	cmp BYTE [rdi+6],0
	jnz LB_2792
	mov QWORD [GBG_VCT+8*0],rdi
	mov r8,QWORD [rdi+8]
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_LN rdi
;; ?; 9'(= a27◂ [ a17◂ [ ]{| l |}] ) ⊢ 2(<4)◂{ 3'(= a19◂ [ a17◂ [ ]] ) 4'(= a16◂ [ a20◂ [ a17◂ [ ]{| l |}]] ) 5'(= a16◂ [ a21◂ [ {| l |}]] ) }
	mov rdi,QWORD [rsp-8+8*2]
	cmp BYTE [rdi+6],2
	jnz LB_2793
	mov rdi,QWORD [rsp-8+8*2]
	mov r9, QWORD [rdi+8]
	mov rdi,QWORD [rsp-8+8*2]
	mov r10, QWORD [rdi+16]
	mov rdi,QWORD [rsp-8+8*2]
	mov r11, QWORD [rdi+24]
	MOV_RAX QWORD [GBG_VCT+8*0],QWORD [rsp-8+8*2]
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_RCD 3,rdi
; #95 3'(= a19◂ [ a17◂ [ ]] ) ⊢ 0(<2)◂3'(= a19◂ [ a17◂ [ ]] )
; #81 0(<2)◂3'(= a19◂ [ a17◂ [ ]] ) ⊢ 1(<2)◂0(<2)◂3'(= a19◂ [ a17◂ [ ]] )
; #22 { } ⊢ 1(<2)◂{ }
; #23 { 5'(= a16◂ [ a21◂ [ {| l |}]] ) 1(<2)◂{ } } ⊢ 0(<2)◂{ 5'(= a16◂ [ a21◂ [ {| l |}]] ) 1(<2)◂{ } }
; #126 { 0(<2)◂{ 5'(= a16◂ [ a21◂ [ {| l |}]] ) 1(<2)◂{ } } 2'(= a25◂ [ a17◂ [ ]{| l |}] ) } ⊢ 1(<2)◂{ 0(<2)◂{ 5'(= a16◂ [ a21◂ [ {| l |}]] ) 1(<2)◂{ } } 2'(= a25◂ [ a17◂ [ ]{| l |}] ) }
; #130 { 1(<2)◂0(<2)◂3'(= a19◂ [ a17◂ [ ]] ) 1(<2)◂{ 0(<2)◂{ 5'(= a16◂ [ a21◂ [ {| l |}]] ) 1(<2)◂{ } } 2'(= a25◂ [ a17◂ [ ]{| l |}] ) } } ⊢ 4(<7)◂{ 1(<2)◂0(<2)◂3'(= a19◂ [ a17◂ [ ]] ) 1(<2)◂{ 0(<2)◂{ 5'(= a16◂ [ a21◂ [ {| l |}]] ) 1(<2)◂{ } } 2'(= a25◂ [ a17◂ [ ]{| l |}] ) } }
; #196 4(<7)◂{ 1(<2)◂0(<2)◂3'(= a19◂ [ a17◂ [ ]] ) 1(<2)◂{ 0(<2)◂{ 5'(= a16◂ [ a21◂ [ {| l |}]] ) 1(<2)◂{ } } 2'(= a25◂ [ a17◂ [ ]{| l |}] ) } } ⊢ 0(<2)◂4(<7)◂{ 1(<2)◂0(<2)◂3'(= a19◂ [ a17◂ [ ]] ) 1(<2)◂{ 0(<2)◂{ 5'(= a16◂ [ a21◂ [ {| l |}]] ) 1(<2)◂{ } } 2'(= a25◂ [ a17◂ [ ]{| l |}] ) } }
; #24 0(<2)◂4(<7)◂{ 1(<2)◂0(<2)◂3'(= a19◂ [ a17◂ [ ]] ) 1(<2)◂{ 0(<2)◂{ 5'(= a16◂ [ a21◂ [ {| l |}]] ) 1(<2)◂{ } } 2'(= a25◂ [ a17◂ [ ]{| l |}] ) } } ⊢ 0(<2)◂0(<2)◂4(<7)◂{ 1(<2)◂0(<2)◂3'(= a19◂ [ a17◂ [ ]] ) 1(<2)◂{ 0(<2)◂{ 5'(= a16◂ [ a21◂ [ {| l |}]] ) 1(<2)◂{ } } 2'(= a25◂ [ a17◂ [ ]{| l |}] ) } }
; ∎ 0(<2)◂0(<2)◂4(<7)◂{ 1(<2)◂0(<2)◂3'(= a19◂ [ a17◂ [ ]] ) 1(<2)◂{ 0(<2)◂{ 5'(= a16◂ [ a21◂ [ {| l |}]] ) 1(<2)◂{ } } 2'(= a25◂ [ a17◂ [ ]{| l |}] ) } }
; .dlt.ptn 4'(= a16◂ [ a20◂ [ a17◂ [ ]{| l |}]] )
	mov rdi,r10
	C_PUSH_REGS
	mov r8,rdi
	call LB_450
	C_POP_REGS
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 8'(= a43◂ [ *{ }] )
	mov rdi,QWORD [rsp-8+8*3]
	C_PUSH_REGS
	mov r8,rdi
	call LB_1706
	C_POP_REGS
; .mov_ptn2 0(<2)◂0(<2)◂4(<7)◂{ 1(<2)◂0(<2)◂3'(= a19◂ [ a17◂ [ ]] ) 1(<2)◂{ 0(<2)◂{ 5'(= a16◂ [ a21◂ [ {| l |}]] ) 1(<2)◂{ } } 2'(= a25◂ [ a17◂ [ ]{| l |}] ) } } ⊢ 2'(= a3◂ [ a43◂ [ a25◂ [ a17◂ [ ]{| l |}]]] )
	mov r13,r8
; .mov_ptn 0(<2)◂0(<2)◂4(<7)◂{ 1(<2)◂0(<2)◂3'(= a19◂ [ a17◂ [ ]] ) 1(<2)◂{ 0(<2)◂{ 5'(= a16◂ [ a21◂ [ {| l |}]] ) 1(<2)◂{ } } 0'(= a25◂ [ a17◂ [ ]{| l |}] ) } } ⊢ 2'(= a3◂ [ a43◂ [ a25◂ [ a17◂ [ ]{| l |}]]] )
	ALC_RCD 2, rax
	mov r14,rax
	mov rax,r9
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],1
	mov QWORD [rax+8],rdi
	mov QWORD [r14+8+8*0],rax
	ALC_RCD 2, rax
	mov r10,rax
	ALC_RCD 2, rax
	mov rcx,rax
	mov rax,r11
	mov QWORD [rcx+8+8*0],rax
	mov rax,unt 
	mov rax,unt_1
	mov QWORD [rcx+8+8*1],rax
	mov rax,rcx
	mov BYTE [rax+6],0
	mov QWORD [r10+8+8*0],rax
	mov rax,r13
	mov QWORD [r10+8+8*1],rax
	mov rax,r10
	mov BYTE [rax+6],1
	mov QWORD [r14+8+8*1],rax
	mov rax,r14
	mov BYTE [rax+6],4
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,24
	jmp LB_2791
LB_2793:
; #132 { 9'(= a27◂ [ a17◂ [ ]{| l |}] ) 2'(= a25◂ [ a17◂ [ ]{| l |}] ) } ⊢ 2(<7)◂{ 9'(= a27◂ [ a17◂ [ ]{| l |}] ) 2'(= a25◂ [ a17◂ [ ]{| l |}] ) }
; #196 2(<7)◂{ 9'(= a27◂ [ a17◂ [ ]{| l |}] ) 2'(= a25◂ [ a17◂ [ ]{| l |}] ) } ⊢ 0(<2)◂2(<7)◂{ 9'(= a27◂ [ a17◂ [ ]{| l |}] ) 2'(= a25◂ [ a17◂ [ ]{| l |}] ) }
; #24 0(<2)◂2(<7)◂{ 9'(= a27◂ [ a17◂ [ ]{| l |}] ) 2'(= a25◂ [ a17◂ [ ]{| l |}] ) } ⊢ 0(<2)◂0(<2)◂2(<7)◂{ 9'(= a27◂ [ a17◂ [ ]{| l |}] ) 2'(= a25◂ [ a17◂ [ ]{| l |}] ) }
; ∎ 0(<2)◂0(<2)◂2(<7)◂{ 9'(= a27◂ [ a17◂ [ ]{| l |}] ) 2'(= a25◂ [ a17◂ [ ]{| l |}] ) }
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 8'(= a43◂ [ *{ }] )
	mov rdi,QWORD [rsp-8+8*3]
	C_PUSH_REGS
	mov r8,rdi
	call LB_1706
	C_POP_REGS
; .mov_ptn2 0(<2)◂0(<2)◂2(<7)◂{ 9'(= a27◂ [ a17◂ [ ]{| l |}] ) 2'(= a25◂ [ a17◂ [ ]{| l |}] ) } ⊢ 2'(= a3◂ [ a43◂ [ a25◂ [ a17◂ [ ]{| l |}]]] )
	mov r13,r8
; .mov_ptn 0(<2)◂0(<2)◂2(<7)◂{ 9'(= a27◂ [ a17◂ [ ]{| l |}] ) 0'(= a25◂ [ a17◂ [ ]{| l |}] ) } ⊢ 2'(= a3◂ [ a43◂ [ a25◂ [ a17◂ [ ]{| l |}]]] )
	ALC_RCD 2, rax
	mov r14,rax
	mov rax,QWORD [rsp-8+8*2]
	mov QWORD [r14+8+8*0],rax
	mov rax,r13
	mov QWORD [r14+8+8*1],rax
	mov rax,r14
	mov BYTE [rax+6],2
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,24
	jmp LB_2791
LB_2792:
;; ?. 10'(= a43◂ [ a25◂ [ a17◂ [ ]{| l |}]] ) ⊢ 1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] )
	mov QWORD [GBG_VCT+8*0],rdi
	mov r8,QWORD [rdi+8]
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_LN rdi
; #195 2'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] )
; #24 1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 0(<2)◂1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] )
; ∎ 0(<2)◂1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] )
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 9'(= a27◂ [ a17◂ [ ]{| l |}] )
	mov rdi,QWORD [rsp-8+8*2]
	C_PUSH_REGS
	mov r8,rdi
	call LB_689
	C_POP_REGS
; .dlt.ptn 8'(= a43◂ [ *{ }] )
	mov rdi,QWORD [rsp-8+8*3]
	C_PUSH_REGS
	mov r8,rdi
	call LB_1706
	C_POP_REGS
; .mov_ptn2 0(<2)◂1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 2'(= a3◂ [ a43◂ [ a25◂ [ a17◂ [ ]{| l |}]]] )
	mov r13,r8
; .mov_ptn 0(<2)◂1(<2)◂0'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 2'(= a3◂ [ a43◂ [ a25◂ [ a17◂ [ ]{| l |}]]] )
	mov rax,r13
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],1
	mov QWORD [rax+8],rdi
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,24
	jmp LB_2791
LB_2791:
	cmp BYTE [r8+6],0
	jnz LB_2759
	POP_GRM_SCC
	ret
LB_2759:
	RB_GRM
	jmp LB_2796
LB_2795:
	add r14,1 
LB_2796:
	cmp r14,r9
	jge LB_2797
	JZ_LINE_SPC BYTE [r13+8+r14], LB_2795
LB_2797
	call GRM_219
	cmp BYTE [r8+6],0
	jnz LB_2800
	jmp LB_2801
LB_2800:
	jmp LB_2798
LB_2801:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a43◂ [ *{ }] ) ⊢ 8'(= a43◂ [ *{ }] )
; .mov_ptn 2'(= a43◂ [ *{ }] ) ⊢ 8'(= a43◂ [ *{ }] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_2799
LB_2798:
	add rsp,0
	jmp LB_2794
LB_2799:
	jmp LB_2803
LB_2802:
	add r14,1 
LB_2803:
	cmp r14,r9
	jge LB_2804
	JZ_LINE_SPC BYTE [r13+8+r14], LB_2802
LB_2804
	call GRM_192
	cmp BYTE [r8+6],0
	jnz LB_2807
	jmp LB_2808
LB_2807:
	jmp LB_2805
LB_2808:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a17◂ [ ] ) ⊢ 9'(= a17◂ [ ] )
; .mov_ptn 2'(= a17◂ [ ] ) ⊢ 9'(= a17◂ [ ] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_2806
LB_2805:
	add rsp,8
	jmp LB_2794
LB_2806:
	jmp LB_2810
LB_2809:
	add r14,1 
LB_2810:
	cmp r14,r9
	jge LB_2811
	JZ_LINE_SPC BYTE [r13+8+r14], LB_2809
LB_2811
	call GRM_204
	cmp BYTE [r8+6],0
	jnz LB_2814
	jmp LB_2815
LB_2814:
	jmp LB_2812
LB_2815:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a16◂ [ a20◂ [ a17◂ [ ]{| l |}]] ) ⊢ 10'(= a16◂ [ a20◂ [ a17◂ [ ]{| l |}]] )
; .mov_ptn 2'(= a16◂ [ a20◂ [ a17◂ [ ]{| l |}]] ) ⊢ 10'(= a16◂ [ a20◂ [ a17◂ [ ]{| l |}]] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_2813
LB_2812:
	add rsp,16
	jmp LB_2794
LB_2813:
	PUSH_GRM
	jmp LB_2819
LB_2818:
	add r14,1 
LB_2819:
	cmp r14,r9
	jge LB_2820
	JZ_SPC BYTE [r13+8+r14], LB_2818
LB_2820
	lea rax,[r14+4]
	cmp rax,r9
	jg LB_2823
	jmp LB_2824
LB_2823:
	mov r8,unt_1
	jmp LB_2821
LB_2824:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],226
	jnz LB_2825
	cmp BYTE [rdi+1],138
	jnz LB_2825
	cmp BYTE [rdi+2],162
	jnz LB_2825
	cmp BYTE [rdi+3],124
	jnz LB_2825
	jmp LB_2826
LB_2825:
	mov r8,unt_1
	jmp LB_2821
LB_2826:
	add r14,4
	jmp LB_2822
LB_2821:
	add rsp,0
	jmp LB_2817
LB_2822:
	mov QWORD [rsp+8*0],r14
	mov r13,QWORD [rsp+16+8*0]
	mov r14,QWORD [rsp+8*0]
	jmp LB_2827
LB_2827
; #25 { } ⊢ 1(<2)◂{ }
; #196 1(<2)◂{ } ⊢ 0(<2)◂1(<2)◂{ }
; #24 0(<2)◂1(<2)◂{ } ⊢ 0(<2)◂0(<2)◂1(<2)◂{ }
; ∎ 0(<2)◂0(<2)◂1(<2)◂{ }
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂0(<2)◂1(<2)◂{ } ⊢ 2'(= a3◂ [ a43◂ [ a3◂ [ *{ a16◂ [ a21◂ [ {| l |}]]a25◂ [ a17◂ [ ]{| l |}]}]]] )
; .mov_ptn 0(<2)◂0(<2)◂1(<2)◂{ } ⊢ 2'(= a3◂ [ a43◂ [ a3◂ [ *{ a16◂ [ a21◂ [ {| l |}]]a25◂ [ a17◂ [ ]{| l |}]}]]] )
	mov rax,unt 
	mov rax,unt_1
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	jmp LB_2828
LB_2828:
	cmp BYTE [r8+6],0
	jnz LB_2817
	POP_GRM_SCC
	jmp LB_2816
LB_2817:
	RB_GRM
	jmp LB_2831
LB_2830:
	add r14,1 
LB_2831:
	cmp r14,r9
	jge LB_2832
	JZ_LINE_SPC BYTE [r13+8+r14], LB_2830
LB_2832
	lea rax,[r14+3]
	cmp rax,r9
	jg LB_2835
	jmp LB_2836
LB_2835:
	mov r8,unt_1
	jmp LB_2833
LB_2836:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],226
	jnz LB_2837
	cmp BYTE [rdi+1],138
	jnz LB_2837
	cmp BYTE [rdi+2],162
	jnz LB_2837
	jmp LB_2838
LB_2837:
	mov r8,unt_1
	jmp LB_2833
LB_2838:
	add r14,3
	jmp LB_2834
LB_2833:
	add rsp,0
	jmp LB_2829
LB_2834:
	jmp LB_2840
LB_2839:
	add r14,1 
LB_2840:
	cmp r14,r9
	jge LB_2841
	JZ_LINE_SPC BYTE [r13+8+r14], LB_2839
LB_2841
	call GRM_208
	cmp BYTE [r8+6],0
	jnz LB_2844
	jmp LB_2845
LB_2844:
	jmp LB_2842
LB_2845:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a16◂ [ a21◂ [ {| l |}]] ) ⊢ 8'(= a16◂ [ a21◂ [ {| l |}]] )
; .mov_ptn 2'(= a16◂ [ a21◂ [ {| l |}]] ) ⊢ 8'(= a16◂ [ a21◂ [ {| l |}]] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_2843
LB_2842:
	add rsp,0
	jmp LB_2829
LB_2843:
	jmp LB_2847
LB_2846:
	add r14,1 
LB_2847:
	cmp r14,r9
	jge LB_2848
	JZ_LINE_SPC BYTE [r13+8+r14], LB_2846
LB_2848
	lea rax,[r14+1]
	cmp rax,r9
	jg LB_2851
	jmp LB_2852
LB_2851:
	mov r8,unt_1
	jmp LB_2849
LB_2852:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],10
	jnz LB_2853
	jmp LB_2854
LB_2853:
	mov r8,unt_1
	jmp LB_2849
LB_2854:
	add r14,1
	jmp LB_2850
LB_2849:
	add rsp,8
	jmp LB_2829
LB_2850:
	jmp LB_2856
LB_2855:
	add r14,1 
LB_2856:
	cmp r14,r9
	jge LB_2857
	JZ_LINE_SPC BYTE [r13+8+r14], LB_2855
LB_2857
	call GRM_237
	cmp BYTE [r8+6],0
	jnz LB_2860
	jmp LB_2861
LB_2860:
	jmp LB_2858
LB_2861:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a43◂ [ a25◂ [ a17◂ [ ]{| l |}]] ) ⊢ 9'(= a43◂ [ a25◂ [ a17◂ [ ]{| l |}]] )
; .mov_ptn 2'(= a43◂ [ a25◂ [ a17◂ [ ]{| l |}]] ) ⊢ 9'(= a43◂ [ a25◂ [ a17◂ [ ]{| l |}]] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_2859
LB_2858:
	add rsp,8
	POP_GRM_FAIL
	jmp LB_2816
LB_2859:
	mov QWORD [rsp+8*2],r14
	mov r13,QWORD [rsp+16+8*2]
	mov r14,QWORD [rsp+8*2]
	jmp LB_2862
LB_2862
;; ? 9'(= a43◂ [ a25◂ [ a17◂ [ ]{| l |}]] ) ⊢ 0(<2)◂2'(= a25◂ [ a17◂ [ ]{| l |}] )
	mov rdi,QWORD [rsp-8+8*1]
	cmp BYTE [rdi+6],0
	jnz LB_2864
	mov QWORD [GBG_VCT+8*0],rdi
	mov r8,QWORD [rdi+8]
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_LN rdi
; #24 { 8'(= a16◂ [ a21◂ [ {| l |}]] ) 2'(= a25◂ [ a17◂ [ ]{| l |}] ) } ⊢ 0(<2)◂{ 8'(= a16◂ [ a21◂ [ {| l |}]] ) 2'(= a25◂ [ a17◂ [ ]{| l |}] ) }
; #196 0(<2)◂{ 8'(= a16◂ [ a21◂ [ {| l |}]] ) 2'(= a25◂ [ a17◂ [ ]{| l |}] ) } ⊢ 0(<2)◂0(<2)◂{ 8'(= a16◂ [ a21◂ [ {| l |}]] ) 2'(= a25◂ [ a17◂ [ ]{| l |}] ) }
; #24 0(<2)◂0(<2)◂{ 8'(= a16◂ [ a21◂ [ {| l |}]] ) 2'(= a25◂ [ a17◂ [ ]{| l |}] ) } ⊢ 0(<2)◂0(<2)◂0(<2)◂{ 8'(= a16◂ [ a21◂ [ {| l |}]] ) 2'(= a25◂ [ a17◂ [ ]{| l |}] ) }
; ∎ 0(<2)◂0(<2)◂0(<2)◂{ 8'(= a16◂ [ a21◂ [ {| l |}]] ) 2'(= a25◂ [ a17◂ [ ]{| l |}] ) }
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂0(<2)◂0(<2)◂{ 8'(= a16◂ [ a21◂ [ {| l |}]] ) 2'(= a25◂ [ a17◂ [ ]{| l |}] ) } ⊢ 2'(= a3◂ [ a43◂ [ a3◂ [ *{ a16◂ [ a21◂ [ {| l |}]]a25◂ [ a17◂ [ ]{| l |}]}]]] )
	mov r13,r8
; .mov_ptn 0(<2)◂0(<2)◂0(<2)◂{ 8'(= a16◂ [ a21◂ [ {| l |}]] ) 0'(= a25◂ [ a17◂ [ ]{| l |}] ) } ⊢ 2'(= a3◂ [ a43◂ [ a3◂ [ *{ a16◂ [ a21◂ [ {| l |}]]a25◂ [ a17◂ [ ]{| l |}]}]]] )
	ALC_RCD 2, rax
	mov r14,rax
	mov rax,QWORD [rsp-8+8*2]
	mov QWORD [r14+8+8*0],rax
	mov rax,r13
	mov QWORD [r14+8+8*1],rax
	mov rax,r14
	mov BYTE [rax+6],0
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,16
	jmp LB_2863
LB_2864:
;; ?. 9'(= a43◂ [ a25◂ [ a17◂ [ ]{| l |}]] ) ⊢ 1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] )
	mov QWORD [GBG_VCT+8*0],rdi
	mov r8,QWORD [rdi+8]
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_LN rdi
; #195 2'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] )
; #24 1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 0(<2)◂1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] )
; ∎ 0(<2)◂1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] )
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 8'(= a16◂ [ a21◂ [ {| l |}]] )
	mov rdi,QWORD [rsp-8+8*2]
	C_PUSH_REGS
	mov r8,rdi
	call LB_673
	C_POP_REGS
; .mov_ptn2 0(<2)◂1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 2'(= a3◂ [ a43◂ [ a3◂ [ *{ a16◂ [ a21◂ [ {| l |}]]a25◂ [ a17◂ [ ]{| l |}]}]]] )
	mov r13,r8
; .mov_ptn 0(<2)◂1(<2)◂0'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 2'(= a3◂ [ a43◂ [ a3◂ [ *{ a16◂ [ a21◂ [ {| l |}]]a25◂ [ a17◂ [ ]{| l |}]}]]] )
	mov rax,r13
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],1
	mov QWORD [rax+8],rdi
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,16
	jmp LB_2863
LB_2863:
	cmp BYTE [r8+6],0
	jnz LB_2829
	POP_GRM_SCC
	jmp LB_2816
LB_2829:
	RB_GRM
	jmp LB_2867
LB_2866:
	add r14,1 
LB_2867:
	cmp r14,r9
	jge LB_2868
	JZ_LINE_SPC BYTE [r13+8+r14], LB_2866
LB_2868
	call GRM_222
	cmp BYTE [r8+6],0
	jnz LB_2871
	jmp LB_2872
LB_2871:
	jmp LB_2869
LB_2872:
	sub rsp,16
; .mov_ptn2 2'(= *{ rr} ) ⊢ { 8'(= r ) 9'(= r ) }
; .mov_ptn 2'(= *{ rr} ) ⊢ { 8'(= r ) 9'(= r ) }
	mov r10, QWORD [r8+8]
	mov QWORD [rsp-8+8*2],r10
	mov r11, QWORD [r8+16]
	mov QWORD [rsp-8+8*1],r11
	mov rdi,r8
	FREE_RCD 2,rdi
	jmp LB_2870
LB_2869:
	add rsp,0
	jmp LB_2865
LB_2870:
	jmp LB_2874
LB_2873:
	add r14,1 
LB_2874:
	cmp r14,r9
	jge LB_2875
	JZ_LINE_SPC BYTE [r13+8+r14], LB_2873
LB_2875
	call GRM_237
	cmp BYTE [r8+6],0
	jnz LB_2878
	jmp LB_2879
LB_2878:
	jmp LB_2876
LB_2879:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a43◂ [ a25◂ [ a17◂ [ ]{| l |}]] ) ⊢ 10'(= a43◂ [ a25◂ [ a17◂ [ ]{| l |}]] )
; .mov_ptn 2'(= a43◂ [ a25◂ [ a17◂ [ ]{| l |}]] ) ⊢ 10'(= a43◂ [ a25◂ [ a17◂ [ ]{| l |}]] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_2877
LB_2876:
	add rsp,16
	jmp LB_2865
LB_2877:
	mov QWORD [rsp+8*3],r14
	mov r13,QWORD [rsp+16+8*3]
	mov r14,QWORD [rsp+8*3]
	jmp LB_2880
LB_2880
;; ? 10'(= a43◂ [ a25◂ [ a17◂ [ ]{| l |}]] ) ⊢ 0(<2)◂2'(= a25◂ [ a17◂ [ ]{| l |}] )
	mov rdi,QWORD [rsp-8+8*1]
	cmp BYTE [rdi+6],0
	jnz LB_2882
	mov QWORD [GBG_VCT+8*0],rdi
	mov r8,QWORD [rdi+8]
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_LN rdi
; $ %[ "lc_code 20" ] ⊢ %[ "lc_code 20" ]
; #22 { } ⊢ 1(<2)◂{ }
; #23 { { 8'(= r ) 9'(= r ) %[ "lc_code 20" ] } 1(<2)◂{ } } ⊢ 0(<2)◂{ { 8'(= r ) 9'(= r ) %[ "lc_code 20" ] } 1(<2)◂{ } }
; #195 0(<2)◂{ { 8'(= r ) 9'(= r ) %[ "lc_code 20" ] } 1(<2)◂{ } } ⊢ 1(<2)◂0(<2)◂{ { 8'(= r ) 9'(= r ) %[ "lc_code 20" ] } 1(<2)◂{ } }
; #24 1(<2)◂0(<2)◂{ { 8'(= r ) 9'(= r ) %[ "lc_code 20" ] } 1(<2)◂{ } } ⊢ 0(<2)◂1(<2)◂0(<2)◂{ { 8'(= r ) 9'(= r ) %[ "lc_code 20" ] } 1(<2)◂{ } }
; ∎ 0(<2)◂1(<2)◂0(<2)◂{ { 8'(= r ) 9'(= r ) %[ "lc_code 20" ] } 1(<2)◂{ } }
; .dlt.ptn 2'(= a25◂ [ a17◂ [ ]{| l |}] )
	mov rdi,r8
	C_PUSH_REGS
	mov r8,rdi
	call LB_679
	C_POP_REGS
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂1(<2)◂0(<2)◂{ { 8'(= r ) 9'(= r ) %[ "lc_code 20" ] } 1(<2)◂{ } } ⊢ 2'(= a3◂ [ a43◂ [ a3◂ [ *{ a16◂ [ a21◂ [ {| l |}]]a25◂ [ a17◂ [ ]{| l |}]}]]] )
; .mov_ptn 0(<2)◂1(<2)◂0(<2)◂{ { 8'(= r ) 9'(= r ) %[ "lc_code 20" ] } 1(<2)◂{ } } ⊢ 2'(= a3◂ [ a43◂ [ a3◂ [ *{ a16◂ [ a21◂ [ {| l |}]]a25◂ [ a17◂ [ ]{| l |}]}]]] )
	ALC_RCD 2, rax
	mov r13,rax
	ALC_RCD 3, rax
	mov r14,rax
	mov rax,QWORD [rsp-8+8*3]
	mov QWORD [r14+8+8*0],rax
	mov rax,QWORD [rsp-8+8*2]
	mov QWORD [r14+8+8*1],rax
	mov rsi,1  
	mov rdi,24
	xor rax,rax 
	C_CALL_SF calloc
	mov QWORD [rax],10
	mov BYTE [rax+8+0],108
	mov BYTE [rax+8+1],99
	mov BYTE [rax+8+2],95
	mov BYTE [rax+8+3],99
	mov BYTE [rax+8+4],111
	mov BYTE [rax+8+5],100
	mov BYTE [rax+8+6],101
	mov BYTE [rax+8+7],32
	mov BYTE [rax+8+8],50
	mov BYTE [rax+8+9],48
	mov QWORD [r14+8+8*2],rax
	mov rax,r14
	mov QWORD [r13+8+8*0],rax
	mov rax,unt 
	mov rax,unt_1
	mov QWORD [r13+8+8*1],rax
	mov rax,r13
	mov BYTE [rax+6],0
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],1
	mov QWORD [rax+8],rdi
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,24
	jmp LB_2881
LB_2882:
;; ?. 10'(= a43◂ [ a25◂ [ a17◂ [ ]{| l |}]] ) ⊢ 1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] )
	mov QWORD [GBG_VCT+8*0],rdi
	mov r8,QWORD [rdi+8]
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_LN rdi
; $ %[ "lc_code 21" ] ⊢ %[ "lc_code 21" ]
; #23 { { 8'(= r ) 9'(= r ) %[ "lc_code 21" ] } 2'(= a2◂ [ *{ rr{| l |}}] ) } ⊢ 0(<2)◂{ { 8'(= r ) 9'(= r ) %[ "lc_code 21" ] } 2'(= a2◂ [ *{ rr{| l |}}] ) }
; #195 0(<2)◂{ { 8'(= r ) 9'(= r ) %[ "lc_code 21" ] } 2'(= a2◂ [ *{ rr{| l |}}] ) } ⊢ 1(<2)◂0(<2)◂{ { 8'(= r ) 9'(= r ) %[ "lc_code 21" ] } 2'(= a2◂ [ *{ rr{| l |}}] ) }
; #24 1(<2)◂0(<2)◂{ { 8'(= r ) 9'(= r ) %[ "lc_code 21" ] } 2'(= a2◂ [ *{ rr{| l |}}] ) } ⊢ 0(<2)◂1(<2)◂0(<2)◂{ { 8'(= r ) 9'(= r ) %[ "lc_code 21" ] } 2'(= a2◂ [ *{ rr{| l |}}] ) }
; ∎ 0(<2)◂1(<2)◂0(<2)◂{ { 8'(= r ) 9'(= r ) %[ "lc_code 21" ] } 2'(= a2◂ [ *{ rr{| l |}}] ) }
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂1(<2)◂0(<2)◂{ { 8'(= r ) 9'(= r ) %[ "lc_code 21" ] } 2'(= a2◂ [ *{ rr{| l |}}] ) } ⊢ 2'(= a3◂ [ a43◂ [ a3◂ [ *{ a16◂ [ a21◂ [ {| l |}]]a25◂ [ a17◂ [ ]{| l |}]}]]] )
	mov r13,r8
; .mov_ptn 0(<2)◂1(<2)◂0(<2)◂{ { 8'(= r ) 9'(= r ) %[ "lc_code 21" ] } 0'(= a2◂ [ *{ rr{| l |}}] ) } ⊢ 2'(= a3◂ [ a43◂ [ a3◂ [ *{ a16◂ [ a21◂ [ {| l |}]]a25◂ [ a17◂ [ ]{| l |}]}]]] )
	ALC_RCD 2, rax
	mov r14,rax
	ALC_RCD 3, rax
	mov r9,rax
	mov rax,QWORD [rsp-8+8*3]
	mov QWORD [r9+8+8*0],rax
	mov rax,QWORD [rsp-8+8*2]
	mov QWORD [r9+8+8*1],rax
	mov rsi,1  
	mov rdi,24
	xor rax,rax 
	C_CALL_SF calloc
	mov QWORD [rax],10
	mov BYTE [rax+8+0],108
	mov BYTE [rax+8+1],99
	mov BYTE [rax+8+2],95
	mov BYTE [rax+8+3],99
	mov BYTE [rax+8+4],111
	mov BYTE [rax+8+5],100
	mov BYTE [rax+8+6],101
	mov BYTE [rax+8+7],32
	mov BYTE [rax+8+8],50
	mov BYTE [rax+8+9],49
	mov QWORD [r9+8+8*2],rax
	mov rax,r9
	mov QWORD [r14+8+8*0],rax
	mov rax,r13
	mov QWORD [r14+8+8*1],rax
	mov rax,r14
	mov BYTE [rax+6],0
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],1
	mov QWORD [rax+8],rdi
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,24
	jmp LB_2881
LB_2881:
	cmp BYTE [r8+6],0
	jnz LB_2865
	POP_GRM_SCC
	jmp LB_2816
LB_2865:
	POP_GRM_FAIL 
	jmp LB_2816
LB_2816:
	cmp BYTE [r8+6],0
	jnz LB_2883
	jmp LB_2884
LB_2883:
	add rsp,24
	POP_GRM_FAIL
	ret
LB_2884:
	mov QWORD [rsp+8*3],r14
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi 
; .mov_ptn2 2'(= a43◂ [ a3◂ [ *{ a16◂ [ a21◂ [ {| l |}]]a25◂ [ a17◂ [ ]{| l |}]}]] ) ⊢ 3'(= a43◂ [ a3◂ [ *{ a16◂ [ a21◂ [ {| l |}]]a25◂ [ a17◂ [ ]{| l |}]}]] )
	mov r10,r9
; .mov_ptn 2'(= a43◂ [ a3◂ [ *{ a16◂ [ a21◂ [ {| l |}]]a25◂ [ a17◂ [ ]{| l |}]}]] ) ⊢ 3'(= a43◂ [ a3◂ [ *{ a16◂ [ a21◂ [ {| l |}]]a25◂ [ a17◂ [ ]{| l |}]}]] )
	mov rax,r8
	mov r9,rax
	mov r13,QWORD [rsp+16+8*3]
	mov r14,QWORD [rsp+8*3]
	jmp LB_2885
LB_2885
;; ? 3'(= a43◂ [ a3◂ [ *{ a16◂ [ a21◂ [ {| l |}]]a25◂ [ a17◂ [ ]{| l |}]}]] ) ⊢ 0(<2)◂2'(= a3◂ [ *{ a16◂ [ a21◂ [ {| l |}]]a25◂ [ a17◂ [ ]{| l |}]}] )
	mov rdi,r9
	cmp BYTE [rdi+6],0
	jnz LB_2887
	mov QWORD [GBG_VCT+8*0],rdi
	mov r8,QWORD [rdi+8]
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_LN rdi
;; ? 2'(= a3◂ [ *{ a16◂ [ a21◂ [ {| l |}]]a25◂ [ a17◂ [ ]{| l |}]}] ) ⊢ 0(<2)◂{ 3'(= a16◂ [ a21◂ [ {| l |}]] ) 4'(= a25◂ [ a17◂ [ ]{| l |}] ) }
	mov rdi,r8
	cmp BYTE [rdi+6],0
	jnz LB_2888
	mov r9, QWORD [r8+8]
	mov r10, QWORD [r8+16]
	mov QWORD [GBG_VCT+8*0],r8
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_RCD 2,rdi
; #125 { 9'(= a17◂ [ ] ) 10'(= a16◂ [ a20◂ [ a17◂ [ ]{| l |}]] ) 3'(= a16◂ [ a21◂ [ {| l |}]] ) } ⊢ 0(<4)◂{ 9'(= a17◂ [ ] ) 10'(= a16◂ [ a20◂ [ a17◂ [ ]{| l |}]] ) 3'(= a16◂ [ a21◂ [ {| l |}]] ) }
; #132 { 0(<4)◂{ 9'(= a17◂ [ ] ) 10'(= a16◂ [ a20◂ [ a17◂ [ ]{| l |}]] ) 3'(= a16◂ [ a21◂ [ {| l |}]] ) } 4'(= a25◂ [ a17◂ [ ]{| l |}] ) } ⊢ 2(<7)◂{ 0(<4)◂{ 9'(= a17◂ [ ] ) 10'(= a16◂ [ a20◂ [ a17◂ [ ]{| l |}]] ) 3'(= a16◂ [ a21◂ [ {| l |}]] ) } 4'(= a25◂ [ a17◂ [ ]{| l |}] ) }
; #196 2(<7)◂{ 0(<4)◂{ 9'(= a17◂ [ ] ) 10'(= a16◂ [ a20◂ [ a17◂ [ ]{| l |}]] ) 3'(= a16◂ [ a21◂ [ {| l |}]] ) } 4'(= a25◂ [ a17◂ [ ]{| l |}] ) } ⊢ 0(<2)◂2(<7)◂{ 0(<4)◂{ 9'(= a17◂ [ ] ) 10'(= a16◂ [ a20◂ [ a17◂ [ ]{| l |}]] ) 3'(= a16◂ [ a21◂ [ {| l |}]] ) } 4'(= a25◂ [ a17◂ [ ]{| l |}] ) }
; #24 0(<2)◂2(<7)◂{ 0(<4)◂{ 9'(= a17◂ [ ] ) 10'(= a16◂ [ a20◂ [ a17◂ [ ]{| l |}]] ) 3'(= a16◂ [ a21◂ [ {| l |}]] ) } 4'(= a25◂ [ a17◂ [ ]{| l |}] ) } ⊢ 0(<2)◂0(<2)◂2(<7)◂{ 0(<4)◂{ 9'(= a17◂ [ ] ) 10'(= a16◂ [ a20◂ [ a17◂ [ ]{| l |}]] ) 3'(= a16◂ [ a21◂ [ {| l |}]] ) } 4'(= a25◂ [ a17◂ [ ]{| l |}] ) }
; ∎ 0(<2)◂0(<2)◂2(<7)◂{ 0(<4)◂{ 9'(= a17◂ [ ] ) 10'(= a16◂ [ a20◂ [ a17◂ [ ]{| l |}]] ) 3'(= a16◂ [ a21◂ [ {| l |}]] ) } 4'(= a25◂ [ a17◂ [ ]{| l |}] ) }
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 8'(= a43◂ [ *{ }] )
	mov rdi,QWORD [rsp-8+8*3]
	C_PUSH_REGS
	mov r8,rdi
	call LB_1706
	C_POP_REGS
; .mov_ptn2 0(<2)◂0(<2)◂2(<7)◂{ 0(<4)◂{ 9'(= a17◂ [ ] ) 10'(= a16◂ [ a20◂ [ a17◂ [ ]{| l |}]] ) 3'(= a16◂ [ a21◂ [ {| l |}]] ) } 4'(= a25◂ [ a17◂ [ ]{| l |}] ) } ⊢ 2'(= a3◂ [ a43◂ [ a25◂ [ a17◂ [ ]{| l |}]]] )
; .mov_ptn 0(<2)◂0(<2)◂2(<7)◂{ 0(<4)◂{ 9'(= a17◂ [ ] ) 10'(= a16◂ [ a20◂ [ a17◂ [ ]{| l |}]] ) 3'(= a16◂ [ a21◂ [ {| l |}]] ) } 4'(= a25◂ [ a17◂ [ ]{| l |}] ) } ⊢ 2'(= a3◂ [ a43◂ [ a25◂ [ a17◂ [ ]{| l |}]]] )
	ALC_RCD 2, rax
	mov r13,rax
	ALC_RCD 3, rax
	mov r14,rax
	mov rax,QWORD [rsp-8+8*2]
	mov QWORD [r14+8+8*0],rax
	mov rax,QWORD [rsp-8+8*1]
	mov QWORD [r14+8+8*1],rax
	mov rax,r9
	mov QWORD [r14+8+8*2],rax
	mov rax,r14
	mov BYTE [rax+6],0
	mov QWORD [r13+8+8*0],rax
	mov rax,r10
	mov QWORD [r13+8+8*1],rax
	mov rax,r13
	mov BYTE [rax+6],2
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,24
	jmp LB_2886
LB_2888:
;; ?. 2'(= a3◂ [ *{ a16◂ [ a21◂ [ {| l |}]]a25◂ [ a17◂ [ ]{| l |}]}] ) ⊢ 1(<2)◂{ }
; #134 { 9'(= a17◂ [ ] ) 10'(= a16◂ [ a20◂ [ a17◂ [ ]{| l |}]] ) } ⊢ 0(<7)◂{ 9'(= a17◂ [ ] ) 10'(= a16◂ [ a20◂ [ a17◂ [ ]{| l |}]] ) }
; #196 0(<7)◂{ 9'(= a17◂ [ ] ) 10'(= a16◂ [ a20◂ [ a17◂ [ ]{| l |}]] ) } ⊢ 0(<2)◂0(<7)◂{ 9'(= a17◂ [ ] ) 10'(= a16◂ [ a20◂ [ a17◂ [ ]{| l |}]] ) }
; #24 0(<2)◂0(<7)◂{ 9'(= a17◂ [ ] ) 10'(= a16◂ [ a20◂ [ a17◂ [ ]{| l |}]] ) } ⊢ 0(<2)◂0(<2)◂0(<7)◂{ 9'(= a17◂ [ ] ) 10'(= a16◂ [ a20◂ [ a17◂ [ ]{| l |}]] ) }
; ∎ 0(<2)◂0(<2)◂0(<7)◂{ 9'(= a17◂ [ ] ) 10'(= a16◂ [ a20◂ [ a17◂ [ ]{| l |}]] ) }
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 8'(= a43◂ [ *{ }] )
	mov rdi,QWORD [rsp-8+8*3]
	C_PUSH_REGS
	mov r8,rdi
	call LB_1706
	C_POP_REGS
; .mov_ptn2 0(<2)◂0(<2)◂0(<7)◂{ 9'(= a17◂ [ ] ) 10'(= a16◂ [ a20◂ [ a17◂ [ ]{| l |}]] ) } ⊢ 2'(= a3◂ [ a43◂ [ a25◂ [ a17◂ [ ]{| l |}]]] )
; .mov_ptn 0(<2)◂0(<2)◂0(<7)◂{ 9'(= a17◂ [ ] ) 10'(= a16◂ [ a20◂ [ a17◂ [ ]{| l |}]] ) } ⊢ 2'(= a3◂ [ a43◂ [ a25◂ [ a17◂ [ ]{| l |}]]] )
	ALC_RCD 2, rax
	mov r13,rax
	mov rax,QWORD [rsp-8+8*2]
	mov QWORD [r13+8+8*0],rax
	mov rax,QWORD [rsp-8+8*1]
	mov QWORD [r13+8+8*1],rax
	mov rax,r13
	mov BYTE [rax+6],0
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,24
	jmp LB_2886
LB_2887:
;; ?. 3'(= a43◂ [ a3◂ [ *{ a16◂ [ a21◂ [ {| l |}]]a25◂ [ a17◂ [ ]{| l |}]}]] ) ⊢ 1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] )
	mov QWORD [GBG_VCT+8*0],rdi
	mov r8,QWORD [rdi+8]
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_LN rdi
; #195 2'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] )
; #24 1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 0(<2)◂1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] )
; ∎ 0(<2)◂1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] )
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 10'(= a16◂ [ a20◂ [ a17◂ [ ]{| l |}]] )
	mov rdi,QWORD [rsp-8+8*1]
	C_PUSH_REGS
	mov r8,rdi
	call LB_450
	C_POP_REGS
; .dlt.ptn 9'(= a17◂ [ ] )
	mov rdi,QWORD [rsp-8+8*2]
	C_PUSH_REGS
	mov r8,rdi
	call LB_388
	C_POP_REGS
; .dlt.ptn 8'(= a43◂ [ *{ }] )
	mov rdi,QWORD [rsp-8+8*3]
	C_PUSH_REGS
	mov r8,rdi
	call LB_1706
	C_POP_REGS
; .mov_ptn2 0(<2)◂1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 2'(= a3◂ [ a43◂ [ a25◂ [ a17◂ [ ]{| l |}]]] )
	mov r13,r8
; .mov_ptn 0(<2)◂1(<2)◂0'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 2'(= a3◂ [ a43◂ [ a25◂ [ a17◂ [ ]{| l |}]]] )
	mov rax,r13
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],1
	mov QWORD [rax+8],rdi
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,24
	jmp LB_2886
LB_2886:
	cmp BYTE [r8+6],0
	jnz LB_2794
	POP_GRM_SCC
	ret
LB_2794:
	RB_GRM
	jmp LB_2891
LB_2890:
	add r14,1 
LB_2891:
	cmp r14,r9
	jge LB_2892
	JZ_SPC BYTE [r13+8+r14], LB_2890
LB_2892
	call GRM_239
	cmp BYTE [r8+6],0
	jnz LB_2895
	jmp LB_2896
LB_2895:
	jmp LB_2893
LB_2896:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a43◂ [ a15◂ [ *{ a2◂ [ a29◂ [ a17◂ [ ]{| l |}]]a28◂ [ a17◂ [ ]{| l |}]}]] ) ⊢ 8'(= a43◂ [ a15◂ [ *{ a2◂ [ a29◂ [ a17◂ [ ]{| l |}]]a28◂ [ a17◂ [ ]{| l |}]}]] )
; .mov_ptn 2'(= a43◂ [ a15◂ [ *{ a2◂ [ a29◂ [ a17◂ [ ]{| l |}]]a28◂ [ a17◂ [ ]{| l |}]}]] ) ⊢ 8'(= a43◂ [ a15◂ [ *{ a2◂ [ a29◂ [ a17◂ [ ]{| l |}]]a28◂ [ a17◂ [ ]{| l |}]}]] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_2894
LB_2893:
	add rsp,0
	jmp LB_2889
LB_2894:
	mov QWORD [rsp+8*1],r14
	mov r13,QWORD [rsp+16+8*1]
	mov r14,QWORD [rsp+8*1]
	jmp LB_2897
LB_2897
;; ? 8'(= a43◂ [ a15◂ [ *{ a2◂ [ a29◂ [ a17◂ [ ]{| l |}]]a28◂ [ a17◂ [ ]{| l |}]}]] ) ⊢ 0(<2)◂2'(= a15◂ [ *{ a2◂ [ a29◂ [ a17◂ [ ]{| l |}]]a28◂ [ a17◂ [ ]{| l |}]}] )
	mov rdi,QWORD [rsp-8+8*1]
	cmp BYTE [rdi+6],0
	jnz LB_2899
	mov QWORD [GBG_VCT+8*0],rdi
	mov r8,QWORD [rdi+8]
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_LN rdi
; #131 2'(= a15◂ [ *{ a2◂ [ a29◂ [ a17◂ [ ]{| l |}]]a28◂ [ a17◂ [ ]{| l |}]}] ) ⊢ 3(<7)◂2'(= a15◂ [ *{ a2◂ [ a29◂ [ a17◂ [ ]{| l |}]]a28◂ [ a17◂ [ ]{| l |}]}] )
; #196 3(<7)◂2'(= a15◂ [ *{ a2◂ [ a29◂ [ a17◂ [ ]{| l |}]]a28◂ [ a17◂ [ ]{| l |}]}] ) ⊢ 0(<2)◂3(<7)◂2'(= a15◂ [ *{ a2◂ [ a29◂ [ a17◂ [ ]{| l |}]]a28◂ [ a17◂ [ ]{| l |}]}] )
; #24 0(<2)◂3(<7)◂2'(= a15◂ [ *{ a2◂ [ a29◂ [ a17◂ [ ]{| l |}]]a28◂ [ a17◂ [ ]{| l |}]}] ) ⊢ 0(<2)◂0(<2)◂3(<7)◂2'(= a15◂ [ *{ a2◂ [ a29◂ [ a17◂ [ ]{| l |}]]a28◂ [ a17◂ [ ]{| l |}]}] )
; ∎ 0(<2)◂0(<2)◂3(<7)◂2'(= a15◂ [ *{ a2◂ [ a29◂ [ a17◂ [ ]{| l |}]]a28◂ [ a17◂ [ ]{| l |}]}] )
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂0(<2)◂3(<7)◂2'(= a15◂ [ *{ a2◂ [ a29◂ [ a17◂ [ ]{| l |}]]a28◂ [ a17◂ [ ]{| l |}]}] ) ⊢ 2'(= a3◂ [ a43◂ [ a25◂ [ a17◂ [ ]{| l |}]]] )
	mov r13,r8
; .mov_ptn 0(<2)◂0(<2)◂3(<7)◂0'(= a15◂ [ *{ a2◂ [ a29◂ [ a17◂ [ ]{| l |}]]a28◂ [ a17◂ [ ]{| l |}]}] ) ⊢ 2'(= a3◂ [ a43◂ [ a25◂ [ a17◂ [ ]{| l |}]]] )
	mov rax,r13
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],3
	mov QWORD [rax+8],rdi
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,8
	jmp LB_2898
LB_2899:
;; ?. 8'(= a43◂ [ a15◂ [ *{ a2◂ [ a29◂ [ a17◂ [ ]{| l |}]]a28◂ [ a17◂ [ ]{| l |}]}]] ) ⊢ 1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] )
	mov QWORD [GBG_VCT+8*0],rdi
	mov r8,QWORD [rdi+8]
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_LN rdi
; #195 2'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] )
; #24 1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 0(<2)◂1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] )
; ∎ 0(<2)◂1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] )
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 2'(= a3◂ [ a43◂ [ a25◂ [ a17◂ [ ]{| l |}]]] )
	mov r13,r8
; .mov_ptn 0(<2)◂1(<2)◂0'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 2'(= a3◂ [ a43◂ [ a25◂ [ a17◂ [ ]{| l |}]]] )
	mov rax,r13
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],1
	mov QWORD [rax+8],rdi
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,8
	jmp LB_2898
LB_2898:
	cmp BYTE [r8+6],0
	jnz LB_2889
	POP_GRM_SCC
	ret
LB_2889:
	RB_GRM
	jmp LB_2902
LB_2901:
	add r14,1 
LB_2902:
	cmp r14,r9
	jge LB_2903
	JZ_LINE_SPC BYTE [r13+8+r14], LB_2901
LB_2903
	call GRM_219
	cmp BYTE [r8+6],0
	jnz LB_2906
	jmp LB_2907
LB_2906:
	jmp LB_2904
LB_2907:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a43◂ [ *{ }] ) ⊢ 8'(= a43◂ [ *{ }] )
; .mov_ptn 2'(= a43◂ [ *{ }] ) ⊢ 8'(= a43◂ [ *{ }] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_2905
LB_2904:
	add rsp,0
	jmp LB_2900
LB_2905:
	jmp LB_2909
LB_2908:
	add r14,1 
LB_2909:
	cmp r14,r9
	jge LB_2910
	JZ_LINE_SPC BYTE [r13+8+r14], LB_2908
LB_2910
	lea rax,[r14+1]
	cmp rax,r9
	jg LB_2913
	jmp LB_2914
LB_2913:
	mov r8,unt_1
	jmp LB_2911
LB_2914:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],36
	jnz LB_2915
	jmp LB_2916
LB_2915:
	mov r8,unt_1
	jmp LB_2911
LB_2916:
	add r14,1
	jmp LB_2912
LB_2911:
	add rsp,8
	jmp LB_2900
LB_2912:
	PUSH_GRM
	jmp LB_2920
LB_2919:
	add r14,1 
LB_2920:
	cmp r14,r9
	jge LB_2921
	JZ_LINE_SPC BYTE [r13+8+r14], LB_2919
LB_2921
	call GRM_204
	cmp BYTE [r8+6],0
	jnz LB_2924
	jmp LB_2925
LB_2924:
	jmp LB_2922
LB_2925:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a16◂ [ a20◂ [ a17◂ [ ]{| l |}]] ) ⊢ 8'(= a16◂ [ a20◂ [ a17◂ [ ]{| l |}]] )
; .mov_ptn 2'(= a16◂ [ a20◂ [ a17◂ [ ]{| l |}]] ) ⊢ 8'(= a16◂ [ a20◂ [ a17◂ [ ]{| l |}]] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_2923
LB_2922:
	add rsp,0
	jmp LB_2918
LB_2923:
	jmp LB_2927
LB_2926:
	add r14,1 
LB_2927:
	cmp r14,r9
	jge LB_2928
	JZ_LINE_SPC BYTE [r13+8+r14], LB_2926
LB_2928
	lea rax,[r14+3]
	cmp rax,r9
	jg LB_2931
	jmp LB_2932
LB_2931:
	mov r8,unt_1
	jmp LB_2929
LB_2932:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],226
	jnz LB_2933
	cmp BYTE [rdi+1],138
	jnz LB_2933
	cmp BYTE [rdi+2],162
	jnz LB_2933
	jmp LB_2934
LB_2933:
	mov r8,unt_1
	jmp LB_2929
LB_2934:
	add r14,3
	jmp LB_2930
LB_2929:
	add rsp,8
	jmp LB_2918
LB_2930:
	PUSH_GRM
	jmp LB_2938
LB_2937:
	add r14,1 
LB_2938:
	cmp r14,r9
	jge LB_2939
	JZ_LINE_SPC BYTE [r13+8+r14], LB_2937
LB_2939
	lea rax,[r14+1]
	cmp rax,r9
	jg LB_2942
	jmp LB_2943
LB_2942:
	mov r8,unt_1
	jmp LB_2940
LB_2943:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],10
	jnz LB_2944
	jmp LB_2945
LB_2944:
	mov r8,unt_1
	jmp LB_2940
LB_2945:
	add r14,1
	jmp LB_2941
LB_2940:
	add rsp,0
	jmp LB_2936
LB_2941:
	jmp LB_2947
LB_2946:
	add r14,1 
LB_2947:
	cmp r14,r9
	jge LB_2948
	JZ_LINE_SPC BYTE [r13+8+r14], LB_2946
LB_2948
	call GRM_240
	cmp BYTE [r8+6],0
	jnz LB_2951
	jmp LB_2952
LB_2951:
	jmp LB_2949
LB_2952:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a43◂ [ a15◂ [ *{ a16◂ [ a22◂ [ a17◂ [ ]{| l |}]]a2◂ [ a29◂ [ a17◂ [ ]{| l |}]]a28◂ [ a17◂ [ ]{| l |}]}]] ) ⊢ 8'(= a43◂ [ a15◂ [ *{ a16◂ [ a22◂ [ a17◂ [ ]{| l |}]]a2◂ [ a29◂ [ a17◂ [ ]{| l |}]]a28◂ [ a17◂ [ ]{| l |}]}]] )
; .mov_ptn 2'(= a43◂ [ a15◂ [ *{ a16◂ [ a22◂ [ a17◂ [ ]{| l |}]]a2◂ [ a29◂ [ a17◂ [ ]{| l |}]]a28◂ [ a17◂ [ ]{| l |}]}]] ) ⊢ 8'(= a43◂ [ a15◂ [ *{ a16◂ [ a22◂ [ a17◂ [ ]{| l |}]]a2◂ [ a29◂ [ a17◂ [ ]{| l |}]]a28◂ [ a17◂ [ ]{| l |}]}]] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_2950
LB_2949:
	add rsp,0
	jmp LB_2936
LB_2950:
	mov QWORD [rsp+8*1],r14
	mov r13,QWORD [rsp+16+8*1]
	mov r14,QWORD [rsp+8*1]
	jmp LB_2953
LB_2953
;; ? 8'(= a43◂ [ a15◂ [ *{ a16◂ [ a22◂ [ a17◂ [ ]{| l |}]]a2◂ [ a29◂ [ a17◂ [ ]{| l |}]]a28◂ [ a17◂ [ ]{| l |}]}]] ) ⊢ 0(<2)◂2'(= a15◂ [ *{ a16◂ [ a22◂ [ a17◂ [ ]{| l |}]]a2◂ [ a29◂ [ a17◂ [ ]{| l |}]]a28◂ [ a17◂ [ ]{| l |}]}] )
	mov rdi,QWORD [rsp-8+8*1]
	cmp BYTE [rdi+6],0
	jnz LB_2955
	mov QWORD [GBG_VCT+8*0],rdi
	mov r8,QWORD [rdi+8]
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_LN rdi
; #127 2'(= a15◂ [ *{ a16◂ [ a22◂ [ a17◂ [ ]{| l |}]]a2◂ [ a29◂ [ a17◂ [ ]{| l |}]]a28◂ [ a17◂ [ ]{| l |}]}] ) ⊢ 0(<2)◂2'(= a15◂ [ *{ a16◂ [ a22◂ [ a17◂ [ ]{| l |}]]a2◂ [ a29◂ [ a17◂ [ ]{| l |}]]a28◂ [ a17◂ [ ]{| l |}]}] )
; #196 0(<2)◂2'(= a15◂ [ *{ a16◂ [ a22◂ [ a17◂ [ ]{| l |}]]a2◂ [ a29◂ [ a17◂ [ ]{| l |}]]a28◂ [ a17◂ [ ]{| l |}]}] ) ⊢ 0(<2)◂0(<2)◂2'(= a15◂ [ *{ a16◂ [ a22◂ [ a17◂ [ ]{| l |}]]a2◂ [ a29◂ [ a17◂ [ ]{| l |}]]a28◂ [ a17◂ [ ]{| l |}]}] )
; #24 0(<2)◂0(<2)◂2'(= a15◂ [ *{ a16◂ [ a22◂ [ a17◂ [ ]{| l |}]]a2◂ [ a29◂ [ a17◂ [ ]{| l |}]]a28◂ [ a17◂ [ ]{| l |}]}] ) ⊢ 0(<2)◂0(<2)◂0(<2)◂2'(= a15◂ [ *{ a16◂ [ a22◂ [ a17◂ [ ]{| l |}]]a2◂ [ a29◂ [ a17◂ [ ]{| l |}]]a28◂ [ a17◂ [ ]{| l |}]}] )
; ∎ 0(<2)◂0(<2)◂0(<2)◂2'(= a15◂ [ *{ a16◂ [ a22◂ [ a17◂ [ ]{| l |}]]a2◂ [ a29◂ [ a17◂ [ ]{| l |}]]a28◂ [ a17◂ [ ]{| l |}]}] )
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂0(<2)◂0(<2)◂2'(= a15◂ [ *{ a16◂ [ a22◂ [ a17◂ [ ]{| l |}]]a2◂ [ a29◂ [ a17◂ [ ]{| l |}]]a28◂ [ a17◂ [ ]{| l |}]}] ) ⊢ 2'(= a3◂ [ a43◂ [ a26◂ [ a17◂ [ ]{| l |}]]] )
	mov r13,r8
; .mov_ptn 0(<2)◂0(<2)◂0(<2)◂0'(= a15◂ [ *{ a16◂ [ a22◂ [ a17◂ [ ]{| l |}]]a2◂ [ a29◂ [ a17◂ [ ]{| l |}]]a28◂ [ a17◂ [ ]{| l |}]}] ) ⊢ 2'(= a3◂ [ a43◂ [ a26◂ [ a17◂ [ ]{| l |}]]] )
	mov rax,r13
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,8
	jmp LB_2954
LB_2955:
;; ?. 8'(= a43◂ [ a15◂ [ *{ a16◂ [ a22◂ [ a17◂ [ ]{| l |}]]a2◂ [ a29◂ [ a17◂ [ ]{| l |}]]a28◂ [ a17◂ [ ]{| l |}]}]] ) ⊢ 1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] )
	mov QWORD [GBG_VCT+8*0],rdi
	mov r8,QWORD [rdi+8]
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_LN rdi
; #195 2'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] )
; #24 1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 0(<2)◂1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] )
; ∎ 0(<2)◂1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] )
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 2'(= a3◂ [ a43◂ [ a26◂ [ a17◂ [ ]{| l |}]]] )
	mov r13,r8
; .mov_ptn 0(<2)◂1(<2)◂0'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 2'(= a3◂ [ a43◂ [ a26◂ [ a17◂ [ ]{| l |}]]] )
	mov rax,r13
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],1
	mov QWORD [rax+8],rdi
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,8
	jmp LB_2954
LB_2954:
	cmp BYTE [r8+6],0
	jnz LB_2936
	POP_GRM_SCC
	jmp LB_2935
LB_2936:
	RB_GRM
	jmp LB_2958
LB_2957:
	add r14,1 
LB_2958:
	cmp r14,r9
	jge LB_2959
	JZ_LINE_SPC BYTE [r13+8+r14], LB_2957
LB_2959
	call GRM_208
	cmp BYTE [r8+6],0
	jnz LB_2962
	jmp LB_2963
LB_2962:
	jmp LB_2960
LB_2963:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a16◂ [ a21◂ [ {| l |}]] ) ⊢ 8'(= a16◂ [ a21◂ [ {| l |}]] )
; .mov_ptn 2'(= a16◂ [ a21◂ [ {| l |}]] ) ⊢ 8'(= a16◂ [ a21◂ [ {| l |}]] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_2961
LB_2960:
	add rsp,0
	jmp LB_2956
LB_2961:
	jmp LB_2965
LB_2964:
	add r14,1 
LB_2965:
	cmp r14,r9
	jge LB_2966
	JZ_LINE_SPC BYTE [r13+8+r14], LB_2964
LB_2966
	call GRM_210
	cmp BYTE [r8+6],0
	jnz LB_2969
	jmp LB_2970
LB_2969:
	jmp LB_2967
LB_2970:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a2◂ [ a16◂ [ a21◂ [ {| l |}]]] ) ⊢ 9'(= a2◂ [ a16◂ [ a21◂ [ {| l |}]]] )
; .mov_ptn 2'(= a2◂ [ a16◂ [ a21◂ [ {| l |}]]] ) ⊢ 9'(= a2◂ [ a16◂ [ a21◂ [ {| l |}]]] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_2968
LB_2967:
	add rsp,8
	jmp LB_2956
LB_2968:
	jmp LB_2972
LB_2971:
	add r14,1 
LB_2972:
	cmp r14,r9
	jge LB_2973
	JZ_LINE_SPC BYTE [r13+8+r14], LB_2971
LB_2973
	lea rax,[r14+1]
	cmp rax,r9
	jg LB_2976
	jmp LB_2977
LB_2976:
	mov r8,unt_1
	jmp LB_2974
LB_2977:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],10
	jnz LB_2978
	jmp LB_2979
LB_2978:
	mov r8,unt_1
	jmp LB_2974
LB_2979:
	add r14,1
	jmp LB_2975
LB_2974:
	add rsp,16
	jmp LB_2956
LB_2975:
	jmp LB_2981
LB_2980:
	add r14,1 
LB_2981:
	cmp r14,r9
	jge LB_2982
	JZ_LINE_SPC BYTE [r13+8+r14], LB_2980
LB_2982
	call GRM_237
	cmp BYTE [r8+6],0
	jnz LB_2985
	jmp LB_2986
LB_2985:
	jmp LB_2983
LB_2986:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a43◂ [ a25◂ [ a17◂ [ ]{| l |}]] ) ⊢ 10'(= a43◂ [ a25◂ [ a17◂ [ ]{| l |}]] )
; .mov_ptn 2'(= a43◂ [ a25◂ [ a17◂ [ ]{| l |}]] ) ⊢ 10'(= a43◂ [ a25◂ [ a17◂ [ ]{| l |}]] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_2984
LB_2983:
	add rsp,16
	jmp LB_2956
LB_2984:
	mov QWORD [rsp+8*3],r14
	mov r13,QWORD [rsp+16+8*3]
	mov r14,QWORD [rsp+8*3]
	jmp LB_2987
LB_2987
;; ? 10'(= a43◂ [ a25◂ [ a17◂ [ ]{| l |}]] ) ⊢ 0(<2)◂2'(= a25◂ [ a17◂ [ ]{| l |}] )
	mov rdi,QWORD [rsp-8+8*1]
	cmp BYTE [rdi+6],0
	jnz LB_2989
	mov QWORD [GBG_VCT+8*0],rdi
	mov r8,QWORD [rdi+8]
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_LN rdi
; #23 { 8'(= a16◂ [ a21◂ [ {| l |}]] ) 9'(= a2◂ [ a16◂ [ a21◂ [ {| l |}]]] ) } ⊢ 0(<2)◂{ 8'(= a16◂ [ a21◂ [ {| l |}]] ) 9'(= a2◂ [ a16◂ [ a21◂ [ {| l |}]]] ) }
; #126 { 0(<2)◂{ 8'(= a16◂ [ a21◂ [ {| l |}]] ) 9'(= a2◂ [ a16◂ [ a21◂ [ {| l |}]]] ) } 2'(= a25◂ [ a17◂ [ ]{| l |}] ) } ⊢ 1(<2)◂{ 0(<2)◂{ 8'(= a16◂ [ a21◂ [ {| l |}]] ) 9'(= a2◂ [ a16◂ [ a21◂ [ {| l |}]]] ) } 2'(= a25◂ [ a17◂ [ ]{| l |}] ) }
; #196 1(<2)◂{ 0(<2)◂{ 8'(= a16◂ [ a21◂ [ {| l |}]] ) 9'(= a2◂ [ a16◂ [ a21◂ [ {| l |}]]] ) } 2'(= a25◂ [ a17◂ [ ]{| l |}] ) } ⊢ 0(<2)◂1(<2)◂{ 0(<2)◂{ 8'(= a16◂ [ a21◂ [ {| l |}]] ) 9'(= a2◂ [ a16◂ [ a21◂ [ {| l |}]]] ) } 2'(= a25◂ [ a17◂ [ ]{| l |}] ) }
; #24 0(<2)◂1(<2)◂{ 0(<2)◂{ 8'(= a16◂ [ a21◂ [ {| l |}]] ) 9'(= a2◂ [ a16◂ [ a21◂ [ {| l |}]]] ) } 2'(= a25◂ [ a17◂ [ ]{| l |}] ) } ⊢ 0(<2)◂0(<2)◂1(<2)◂{ 0(<2)◂{ 8'(= a16◂ [ a21◂ [ {| l |}]] ) 9'(= a2◂ [ a16◂ [ a21◂ [ {| l |}]]] ) } 2'(= a25◂ [ a17◂ [ ]{| l |}] ) }
; ∎ 0(<2)◂0(<2)◂1(<2)◂{ 0(<2)◂{ 8'(= a16◂ [ a21◂ [ {| l |}]] ) 9'(= a2◂ [ a16◂ [ a21◂ [ {| l |}]]] ) } 2'(= a25◂ [ a17◂ [ ]{| l |}] ) }
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂0(<2)◂1(<2)◂{ 0(<2)◂{ 8'(= a16◂ [ a21◂ [ {| l |}]] ) 9'(= a2◂ [ a16◂ [ a21◂ [ {| l |}]]] ) } 2'(= a25◂ [ a17◂ [ ]{| l |}] ) } ⊢ 2'(= a3◂ [ a43◂ [ a26◂ [ a17◂ [ ]{| l |}]]] )
	mov r13,r8
; .mov_ptn 0(<2)◂0(<2)◂1(<2)◂{ 0(<2)◂{ 8'(= a16◂ [ a21◂ [ {| l |}]] ) 9'(= a2◂ [ a16◂ [ a21◂ [ {| l |}]]] ) } 0'(= a25◂ [ a17◂ [ ]{| l |}] ) } ⊢ 2'(= a3◂ [ a43◂ [ a26◂ [ a17◂ [ ]{| l |}]]] )
	ALC_RCD 2, rax
	mov r14,rax
	ALC_RCD 2, rax
	mov r9,rax
	mov rax,QWORD [rsp-8+8*3]
	mov QWORD [r9+8+8*0],rax
	mov rax,QWORD [rsp-8+8*2]
	mov QWORD [r9+8+8*1],rax
	mov rax,r9
	mov BYTE [rax+6],0
	mov QWORD [r14+8+8*0],rax
	mov rax,r13
	mov QWORD [r14+8+8*1],rax
	mov rax,r14
	mov BYTE [rax+6],1
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,24
	jmp LB_2988
LB_2989:
;; ?. 10'(= a43◂ [ a25◂ [ a17◂ [ ]{| l |}]] ) ⊢ 1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] )
	mov QWORD [GBG_VCT+8*0],rdi
	mov r8,QWORD [rdi+8]
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_LN rdi
; #195 2'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] )
; #24 1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 0(<2)◂1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] )
; ∎ 0(<2)◂1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] )
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 9'(= a2◂ [ a16◂ [ a21◂ [ {| l |}]]] )
	mov rdi,QWORD [rsp-8+8*2]
	C_PUSH_REGS
	mov r8,rdi
	call LB_697
	C_POP_REGS
; .dlt.ptn 8'(= a16◂ [ a21◂ [ {| l |}]] )
	mov rdi,QWORD [rsp-8+8*3]
	C_PUSH_REGS
	mov r8,rdi
	call LB_673
	C_POP_REGS
; .mov_ptn2 0(<2)◂1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 2'(= a3◂ [ a43◂ [ a26◂ [ a17◂ [ ]{| l |}]]] )
	mov r13,r8
; .mov_ptn 0(<2)◂1(<2)◂0'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 2'(= a3◂ [ a43◂ [ a26◂ [ a17◂ [ ]{| l |}]]] )
	mov rax,r13
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],1
	mov QWORD [rax+8],rdi
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,24
	jmp LB_2988
LB_2988:
	cmp BYTE [r8+6],0
	jnz LB_2956
	POP_GRM_SCC
	jmp LB_2935
LB_2956:
	POP_GRM_FAIL 
	jmp LB_2935
LB_2935:
	cmp BYTE [r8+6],0
	jnz LB_2990
	jmp LB_2991
LB_2990:
	add rsp,8
	POP_GRM_FAIL
	jmp LB_2917
LB_2991:
	mov QWORD [rsp+8*1],r14
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi 
; .mov_ptn2 2'(= a43◂ [ a26◂ [ a17◂ [ ]{| l |}]] ) ⊢ 3'(= a43◂ [ a26◂ [ a17◂ [ ]{| l |}]] )
	mov r10,r9
; .mov_ptn 2'(= a43◂ [ a26◂ [ a17◂ [ ]{| l |}]] ) ⊢ 3'(= a43◂ [ a26◂ [ a17◂ [ ]{| l |}]] )
	mov rax,r8
	mov r9,rax
	mov r13,QWORD [rsp+16+8*1]
	mov r14,QWORD [rsp+8*1]
	jmp LB_2992
LB_2992
; #196 { 8'(= a16◂ [ a20◂ [ a17◂ [ ]{| l |}]] ) 3'(= a43◂ [ a26◂ [ a17◂ [ ]{| l |}]] ) } ⊢ 0(<2)◂{ 8'(= a16◂ [ a20◂ [ a17◂ [ ]{| l |}]] ) 3'(= a43◂ [ a26◂ [ a17◂ [ ]{| l |}]] ) }
; #24 0(<2)◂{ 8'(= a16◂ [ a20◂ [ a17◂ [ ]{| l |}]] ) 3'(= a43◂ [ a26◂ [ a17◂ [ ]{| l |}]] ) } ⊢ 0(<2)◂0(<2)◂{ 8'(= a16◂ [ a20◂ [ a17◂ [ ]{| l |}]] ) 3'(= a43◂ [ a26◂ [ a17◂ [ ]{| l |}]] ) }
; ∎ 0(<2)◂0(<2)◂{ 8'(= a16◂ [ a20◂ [ a17◂ [ ]{| l |}]] ) 3'(= a43◂ [ a26◂ [ a17◂ [ ]{| l |}]] ) }
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂0(<2)◂{ 8'(= a16◂ [ a20◂ [ a17◂ [ ]{| l |}]] ) 3'(= a43◂ [ a26◂ [ a17◂ [ ]{| l |}]] ) } ⊢ 2'(= a3◂ [ a43◂ [ *{ a16◂ [ a20◂ [ a17◂ [ ]{| l |}]]a43◂ [ a26◂ [ a17◂ [ ]{| l |}]]}]] )
; .mov_ptn 0(<2)◂0(<2)◂{ 8'(= a16◂ [ a20◂ [ a17◂ [ ]{| l |}]] ) 3'(= a43◂ [ a26◂ [ a17◂ [ ]{| l |}]] ) } ⊢ 2'(= a3◂ [ a43◂ [ *{ a16◂ [ a20◂ [ a17◂ [ ]{| l |}]]a43◂ [ a26◂ [ a17◂ [ ]{| l |}]]}]] )
	ALC_RCD 2, rax
	mov r13,rax
	mov rax,QWORD [rsp-8+8*1]
	mov QWORD [r13+8+8*0],rax
	mov rax,r9
	mov QWORD [r13+8+8*1],rax
	mov rax,r13
	mov BYTE [rax+6],0
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,8
	jmp LB_2993
LB_2993:
	cmp BYTE [r8+6],0
	jnz LB_2918
	POP_GRM_SCC
	jmp LB_2917
LB_2918:
	RB_GRM
	jmp LB_2996
LB_2995:
	add r14,1 
LB_2996:
	cmp r14,r9
	jge LB_2997
	JZ_LINE_SPC BYTE [r13+8+r14], LB_2995
LB_2997
	call GRM_222
	cmp BYTE [r8+6],0
	jnz LB_3000
	jmp LB_3001
LB_3000:
	jmp LB_2998
LB_3001:
	sub rsp,16
; .mov_ptn2 2'(= *{ rr} ) ⊢ { 8'(= r ) 9'(= r ) }
; .mov_ptn 2'(= *{ rr} ) ⊢ { 8'(= r ) 9'(= r ) }
	mov r10, QWORD [r8+8]
	mov QWORD [rsp-8+8*2],r10
	mov r11, QWORD [r8+16]
	mov QWORD [rsp-8+8*1],r11
	mov rdi,r8
	FREE_RCD 2,rdi
	jmp LB_2999
LB_2998:
	add rsp,0
	jmp LB_2994
LB_2999:
	jmp LB_3003
LB_3002:
	add r14,1 
LB_3003:
	cmp r14,r9
	jge LB_3004
	JZ_LINE_SPC BYTE [r13+8+r14], LB_3002
LB_3004
	call GRM_240
	cmp BYTE [r8+6],0
	jnz LB_3007
	jmp LB_3008
LB_3007:
	jmp LB_3005
LB_3008:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a43◂ [ a15◂ [ *{ a16◂ [ a22◂ [ a17◂ [ ]{| l |}]]a2◂ [ a29◂ [ a17◂ [ ]{| l |}]]a28◂ [ a17◂ [ ]{| l |}]}]] ) ⊢ 10'(= a43◂ [ a15◂ [ *{ a16◂ [ a22◂ [ a17◂ [ ]{| l |}]]a2◂ [ a29◂ [ a17◂ [ ]{| l |}]]a28◂ [ a17◂ [ ]{| l |}]}]] )
; .mov_ptn 2'(= a43◂ [ a15◂ [ *{ a16◂ [ a22◂ [ a17◂ [ ]{| l |}]]a2◂ [ a29◂ [ a17◂ [ ]{| l |}]]a28◂ [ a17◂ [ ]{| l |}]}]] ) ⊢ 10'(= a43◂ [ a15◂ [ *{ a16◂ [ a22◂ [ a17◂ [ ]{| l |}]]a2◂ [ a29◂ [ a17◂ [ ]{| l |}]]a28◂ [ a17◂ [ ]{| l |}]}]] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_3006
LB_3005:
	add rsp,16
	jmp LB_2994
LB_3006:
	mov QWORD [rsp+8*3],r14
	mov r13,QWORD [rsp+16+8*3]
	mov r14,QWORD [rsp+8*3]
	jmp LB_3009
LB_3009
;; ? 10'(= a43◂ [ a15◂ [ *{ a16◂ [ a22◂ [ a17◂ [ ]{| l |}]]a2◂ [ a29◂ [ a17◂ [ ]{| l |}]]a28◂ [ a17◂ [ ]{| l |}]}]] ) ⊢ 0(<2)◂2'(= a15◂ [ *{ a16◂ [ a22◂ [ a17◂ [ ]{| l |}]]a2◂ [ a29◂ [ a17◂ [ ]{| l |}]]a28◂ [ a17◂ [ ]{| l |}]}] )
	mov rdi,QWORD [rsp-8+8*1]
	cmp BYTE [rdi+6],0
	jnz LB_3011
	mov QWORD [GBG_VCT+8*0],rdi
	mov r8,QWORD [rdi+8]
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_LN rdi
; #22 { } ⊢ 1(<2)◂{ }
; $ %[ "glb_etr id_line line_res 0" ] ⊢ %[ "glb_etr id_line line_res 0" ]
; #23 { { 8'(= r ) 9'(= r ) %[ "glb_etr id_line line_res 0" ] } 1(<2)◂{ } } ⊢ 0(<2)◂{ { 8'(= r ) 9'(= r ) %[ "glb_etr id_line line_res 0" ] } 1(<2)◂{ } }
; #195 0(<2)◂{ { 8'(= r ) 9'(= r ) %[ "glb_etr id_line line_res 0" ] } 1(<2)◂{ } } ⊢ 1(<2)◂0(<2)◂{ { 8'(= r ) 9'(= r ) %[ "glb_etr id_line line_res 0" ] } 1(<2)◂{ } }
; #24 1(<2)◂0(<2)◂{ { 8'(= r ) 9'(= r ) %[ "glb_etr id_line line_res 0" ] } 1(<2)◂{ } } ⊢ 0(<2)◂1(<2)◂0(<2)◂{ { 8'(= r ) 9'(= r ) %[ "glb_etr id_line line_res 0" ] } 1(<2)◂{ } }
; ∎ 0(<2)◂1(<2)◂0(<2)◂{ { 8'(= r ) 9'(= r ) %[ "glb_etr id_line line_res 0" ] } 1(<2)◂{ } }
; .dlt.ptn 2'(= a15◂ [ *{ a16◂ [ a22◂ [ a17◂ [ ]{| l |}]]a2◂ [ a29◂ [ a17◂ [ ]{| l |}]]a28◂ [ a17◂ [ ]{| l |}]}] )
	mov rdi,r8
	C_PUSH_REGS
	mov r8,rdi
	call LB_696
	C_POP_REGS
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂1(<2)◂0(<2)◂{ { 8'(= r ) 9'(= r ) %[ "glb_etr id_line line_res 0" ] } 1(<2)◂{ } } ⊢ 2'(= a3◂ [ a43◂ [ *{ a16◂ [ a20◂ [ a17◂ [ ]{| l |}]]a43◂ [ a26◂ [ a17◂ [ ]{| l |}]]}]] )
; .mov_ptn 0(<2)◂1(<2)◂0(<2)◂{ { 8'(= r ) 9'(= r ) %[ "glb_etr id_line line_res 0" ] } 1(<2)◂{ } } ⊢ 2'(= a3◂ [ a43◂ [ *{ a16◂ [ a20◂ [ a17◂ [ ]{| l |}]]a43◂ [ a26◂ [ a17◂ [ ]{| l |}]]}]] )
	ALC_RCD 2, rax
	mov r13,rax
	ALC_RCD 3, rax
	mov r14,rax
	mov rax,QWORD [rsp-8+8*3]
	mov QWORD [r14+8+8*0],rax
	mov rax,QWORD [rsp-8+8*2]
	mov QWORD [r14+8+8*1],rax
	mov rsi,1  
	mov rdi,40
	xor rax,rax 
	C_CALL_SF calloc
	mov QWORD [rax],26
	mov BYTE [rax+8+0],103
	mov BYTE [rax+8+1],108
	mov BYTE [rax+8+2],98
	mov BYTE [rax+8+3],95
	mov BYTE [rax+8+4],101
	mov BYTE [rax+8+5],116
	mov BYTE [rax+8+6],114
	mov BYTE [rax+8+7],32
	mov BYTE [rax+8+8],105
	mov BYTE [rax+8+9],100
	mov BYTE [rax+8+10],95
	mov BYTE [rax+8+11],108
	mov BYTE [rax+8+12],105
	mov BYTE [rax+8+13],110
	mov BYTE [rax+8+14],101
	mov BYTE [rax+8+15],32
	mov BYTE [rax+8+16],108
	mov BYTE [rax+8+17],105
	mov BYTE [rax+8+18],110
	mov BYTE [rax+8+19],101
	mov BYTE [rax+8+20],95
	mov BYTE [rax+8+21],114
	mov BYTE [rax+8+22],101
	mov BYTE [rax+8+23],115
	mov BYTE [rax+8+24],32
	mov BYTE [rax+8+25],48
	mov QWORD [r14+8+8*2],rax
	mov rax,r14
	mov QWORD [r13+8+8*0],rax
	mov rax,unt 
	mov rax,unt_1
	mov QWORD [r13+8+8*1],rax
	mov rax,r13
	mov BYTE [rax+6],0
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],1
	mov QWORD [rax+8],rdi
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,24
	jmp LB_3010
LB_3011:
;; ?. 10'(= a43◂ [ a15◂ [ *{ a16◂ [ a22◂ [ a17◂ [ ]{| l |}]]a2◂ [ a29◂ [ a17◂ [ ]{| l |}]]a28◂ [ a17◂ [ ]{| l |}]}]] ) ⊢ 1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] )
	mov QWORD [GBG_VCT+8*0],rdi
	mov r8,QWORD [rdi+8]
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_LN rdi
; $ %[ "glb_etr id_line line_res 1" ] ⊢ %[ "glb_etr id_line line_res 1" ]
; #23 { { 8'(= r ) 9'(= r ) %[ "glb_etr id_line line_res 1" ] } 2'(= a2◂ [ *{ rr{| l |}}] ) } ⊢ 0(<2)◂{ { 8'(= r ) 9'(= r ) %[ "glb_etr id_line line_res 1" ] } 2'(= a2◂ [ *{ rr{| l |}}] ) }
; #195 0(<2)◂{ { 8'(= r ) 9'(= r ) %[ "glb_etr id_line line_res 1" ] } 2'(= a2◂ [ *{ rr{| l |}}] ) } ⊢ 1(<2)◂0(<2)◂{ { 8'(= r ) 9'(= r ) %[ "glb_etr id_line line_res 1" ] } 2'(= a2◂ [ *{ rr{| l |}}] ) }
; #24 1(<2)◂0(<2)◂{ { 8'(= r ) 9'(= r ) %[ "glb_etr id_line line_res 1" ] } 2'(= a2◂ [ *{ rr{| l |}}] ) } ⊢ 0(<2)◂1(<2)◂0(<2)◂{ { 8'(= r ) 9'(= r ) %[ "glb_etr id_line line_res 1" ] } 2'(= a2◂ [ *{ rr{| l |}}] ) }
; ∎ 0(<2)◂1(<2)◂0(<2)◂{ { 8'(= r ) 9'(= r ) %[ "glb_etr id_line line_res 1" ] } 2'(= a2◂ [ *{ rr{| l |}}] ) }
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂1(<2)◂0(<2)◂{ { 8'(= r ) 9'(= r ) %[ "glb_etr id_line line_res 1" ] } 2'(= a2◂ [ *{ rr{| l |}}] ) } ⊢ 2'(= a3◂ [ a43◂ [ *{ a16◂ [ a20◂ [ a17◂ [ ]{| l |}]]a43◂ [ a26◂ [ a17◂ [ ]{| l |}]]}]] )
	mov r13,r8
; .mov_ptn 0(<2)◂1(<2)◂0(<2)◂{ { 8'(= r ) 9'(= r ) %[ "glb_etr id_line line_res 1" ] } 0'(= a2◂ [ *{ rr{| l |}}] ) } ⊢ 2'(= a3◂ [ a43◂ [ *{ a16◂ [ a20◂ [ a17◂ [ ]{| l |}]]a43◂ [ a26◂ [ a17◂ [ ]{| l |}]]}]] )
	ALC_RCD 2, rax
	mov r14,rax
	ALC_RCD 3, rax
	mov r9,rax
	mov rax,QWORD [rsp-8+8*3]
	mov QWORD [r9+8+8*0],rax
	mov rax,QWORD [rsp-8+8*2]
	mov QWORD [r9+8+8*1],rax
	mov rsi,1  
	mov rdi,40
	xor rax,rax 
	C_CALL_SF calloc
	mov QWORD [rax],26
	mov BYTE [rax+8+0],103
	mov BYTE [rax+8+1],108
	mov BYTE [rax+8+2],98
	mov BYTE [rax+8+3],95
	mov BYTE [rax+8+4],101
	mov BYTE [rax+8+5],116
	mov BYTE [rax+8+6],114
	mov BYTE [rax+8+7],32
	mov BYTE [rax+8+8],105
	mov BYTE [rax+8+9],100
	mov BYTE [rax+8+10],95
	mov BYTE [rax+8+11],108
	mov BYTE [rax+8+12],105
	mov BYTE [rax+8+13],110
	mov BYTE [rax+8+14],101
	mov BYTE [rax+8+15],32
	mov BYTE [rax+8+16],108
	mov BYTE [rax+8+17],105
	mov BYTE [rax+8+18],110
	mov BYTE [rax+8+19],101
	mov BYTE [rax+8+20],95
	mov BYTE [rax+8+21],114
	mov BYTE [rax+8+22],101
	mov BYTE [rax+8+23],115
	mov BYTE [rax+8+24],32
	mov BYTE [rax+8+25],49
	mov QWORD [r9+8+8*2],rax
	mov rax,r9
	mov QWORD [r14+8+8*0],rax
	mov rax,r13
	mov QWORD [r14+8+8*1],rax
	mov rax,r14
	mov BYTE [rax+6],0
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],1
	mov QWORD [rax+8],rdi
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,24
	jmp LB_3010
LB_3010:
	cmp BYTE [r8+6],0
	jnz LB_2994
	POP_GRM_SCC
	jmp LB_2917
LB_2994:
	RB_GRM
	jmp LB_3014
LB_3013:
	add r14,1 
LB_3014:
	cmp r14,r9
	jge LB_3015
	JZ_LINE_SPC BYTE [r13+8+r14], LB_3013
LB_3015
	call GRM_222
	cmp BYTE [r8+6],0
	jnz LB_3018
	jmp LB_3019
LB_3018:
	jmp LB_3016
LB_3019:
	sub rsp,16
; .mov_ptn2 2'(= *{ rr} ) ⊢ { 8'(= r ) 9'(= r ) }
; .mov_ptn 2'(= *{ rr} ) ⊢ { 8'(= r ) 9'(= r ) }
	mov r10, QWORD [r8+8]
	mov QWORD [rsp-8+8*2],r10
	mov r11, QWORD [r8+16]
	mov QWORD [rsp-8+8*1],r11
	mov rdi,r8
	FREE_RCD 2,rdi
	jmp LB_3017
LB_3016:
	add rsp,0
	jmp LB_3012
LB_3017:
	jmp LB_3021
LB_3020:
	add r14,1 
LB_3021:
	cmp r14,r9
	jge LB_3022
	JZ_LINE_SPC BYTE [r13+8+r14], LB_3020
LB_3022
	call GRM_237
	cmp BYTE [r8+6],0
	jnz LB_3025
	jmp LB_3026
LB_3025:
	jmp LB_3023
LB_3026:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a43◂ [ a25◂ [ a17◂ [ ]{| l |}]] ) ⊢ 10'(= a43◂ [ a25◂ [ a17◂ [ ]{| l |}]] )
; .mov_ptn 2'(= a43◂ [ a25◂ [ a17◂ [ ]{| l |}]] ) ⊢ 10'(= a43◂ [ a25◂ [ a17◂ [ ]{| l |}]] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_3024
LB_3023:
	add rsp,16
	jmp LB_3012
LB_3024:
	mov QWORD [rsp+8*3],r14
	mov r13,QWORD [rsp+16+8*3]
	mov r14,QWORD [rsp+8*3]
	jmp LB_3027
LB_3027
;; ? 10'(= a43◂ [ a25◂ [ a17◂ [ ]{| l |}]] ) ⊢ 0(<2)◂2'(= a25◂ [ a17◂ [ ]{| l |}] )
	mov rdi,QWORD [rsp-8+8*1]
	cmp BYTE [rdi+6],0
	jnz LB_3029
	mov QWORD [GBG_VCT+8*0],rdi
	mov r8,QWORD [rdi+8]
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_LN rdi
; #22 { } ⊢ 1(<2)◂{ }
; $ %[ "glb_etr id_line line_res 2" ] ⊢ %[ "glb_etr id_line line_res 2" ]
; #23 { { 8'(= r ) 9'(= r ) %[ "glb_etr id_line line_res 2" ] } 1(<2)◂{ } } ⊢ 0(<2)◂{ { 8'(= r ) 9'(= r ) %[ "glb_etr id_line line_res 2" ] } 1(<2)◂{ } }
; #195 0(<2)◂{ { 8'(= r ) 9'(= r ) %[ "glb_etr id_line line_res 2" ] } 1(<2)◂{ } } ⊢ 1(<2)◂0(<2)◂{ { 8'(= r ) 9'(= r ) %[ "glb_etr id_line line_res 2" ] } 1(<2)◂{ } }
; #24 1(<2)◂0(<2)◂{ { 8'(= r ) 9'(= r ) %[ "glb_etr id_line line_res 2" ] } 1(<2)◂{ } } ⊢ 0(<2)◂1(<2)◂0(<2)◂{ { 8'(= r ) 9'(= r ) %[ "glb_etr id_line line_res 2" ] } 1(<2)◂{ } }
; ∎ 0(<2)◂1(<2)◂0(<2)◂{ { 8'(= r ) 9'(= r ) %[ "glb_etr id_line line_res 2" ] } 1(<2)◂{ } }
; .dlt.ptn 2'(= a25◂ [ a17◂ [ ]{| l |}] )
	mov rdi,r8
	C_PUSH_REGS
	mov r8,rdi
	call LB_679
	C_POP_REGS
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂1(<2)◂0(<2)◂{ { 8'(= r ) 9'(= r ) %[ "glb_etr id_line line_res 2" ] } 1(<2)◂{ } } ⊢ 2'(= a3◂ [ a43◂ [ *{ a16◂ [ a20◂ [ a17◂ [ ]{| l |}]]a43◂ [ a26◂ [ a17◂ [ ]{| l |}]]}]] )
; .mov_ptn 0(<2)◂1(<2)◂0(<2)◂{ { 8'(= r ) 9'(= r ) %[ "glb_etr id_line line_res 2" ] } 1(<2)◂{ } } ⊢ 2'(= a3◂ [ a43◂ [ *{ a16◂ [ a20◂ [ a17◂ [ ]{| l |}]]a43◂ [ a26◂ [ a17◂ [ ]{| l |}]]}]] )
	ALC_RCD 2, rax
	mov r13,rax
	ALC_RCD 3, rax
	mov r14,rax
	mov rax,QWORD [rsp-8+8*3]
	mov QWORD [r14+8+8*0],rax
	mov rax,QWORD [rsp-8+8*2]
	mov QWORD [r14+8+8*1],rax
	mov rsi,1  
	mov rdi,40
	xor rax,rax 
	C_CALL_SF calloc
	mov QWORD [rax],26
	mov BYTE [rax+8+0],103
	mov BYTE [rax+8+1],108
	mov BYTE [rax+8+2],98
	mov BYTE [rax+8+3],95
	mov BYTE [rax+8+4],101
	mov BYTE [rax+8+5],116
	mov BYTE [rax+8+6],114
	mov BYTE [rax+8+7],32
	mov BYTE [rax+8+8],105
	mov BYTE [rax+8+9],100
	mov BYTE [rax+8+10],95
	mov BYTE [rax+8+11],108
	mov BYTE [rax+8+12],105
	mov BYTE [rax+8+13],110
	mov BYTE [rax+8+14],101
	mov BYTE [rax+8+15],32
	mov BYTE [rax+8+16],108
	mov BYTE [rax+8+17],105
	mov BYTE [rax+8+18],110
	mov BYTE [rax+8+19],101
	mov BYTE [rax+8+20],95
	mov BYTE [rax+8+21],114
	mov BYTE [rax+8+22],101
	mov BYTE [rax+8+23],115
	mov BYTE [rax+8+24],32
	mov BYTE [rax+8+25],50
	mov QWORD [r14+8+8*2],rax
	mov rax,r14
	mov QWORD [r13+8+8*0],rax
	mov rax,unt 
	mov rax,unt_1
	mov QWORD [r13+8+8*1],rax
	mov rax,r13
	mov BYTE [rax+6],0
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],1
	mov QWORD [rax+8],rdi
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,24
	jmp LB_3028
LB_3029:
;; ?. 10'(= a43◂ [ a25◂ [ a17◂ [ ]{| l |}]] ) ⊢ 1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] )
	mov QWORD [GBG_VCT+8*0],rdi
	mov r8,QWORD [rdi+8]
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_LN rdi
; $ %[ "glb_etr id_line line_res 3" ] ⊢ %[ "glb_etr id_line line_res 3" ]
; #23 { { 8'(= r ) 9'(= r ) %[ "glb_etr id_line line_res 3" ] } 2'(= a2◂ [ *{ rr{| l |}}] ) } ⊢ 0(<2)◂{ { 8'(= r ) 9'(= r ) %[ "glb_etr id_line line_res 3" ] } 2'(= a2◂ [ *{ rr{| l |}}] ) }
; #195 0(<2)◂{ { 8'(= r ) 9'(= r ) %[ "glb_etr id_line line_res 3" ] } 2'(= a2◂ [ *{ rr{| l |}}] ) } ⊢ 1(<2)◂0(<2)◂{ { 8'(= r ) 9'(= r ) %[ "glb_etr id_line line_res 3" ] } 2'(= a2◂ [ *{ rr{| l |}}] ) }
; #24 1(<2)◂0(<2)◂{ { 8'(= r ) 9'(= r ) %[ "glb_etr id_line line_res 3" ] } 2'(= a2◂ [ *{ rr{| l |}}] ) } ⊢ 0(<2)◂1(<2)◂0(<2)◂{ { 8'(= r ) 9'(= r ) %[ "glb_etr id_line line_res 3" ] } 2'(= a2◂ [ *{ rr{| l |}}] ) }
; ∎ 0(<2)◂1(<2)◂0(<2)◂{ { 8'(= r ) 9'(= r ) %[ "glb_etr id_line line_res 3" ] } 2'(= a2◂ [ *{ rr{| l |}}] ) }
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂1(<2)◂0(<2)◂{ { 8'(= r ) 9'(= r ) %[ "glb_etr id_line line_res 3" ] } 2'(= a2◂ [ *{ rr{| l |}}] ) } ⊢ 2'(= a3◂ [ a43◂ [ *{ a16◂ [ a20◂ [ a17◂ [ ]{| l |}]]a43◂ [ a26◂ [ a17◂ [ ]{| l |}]]}]] )
	mov r13,r8
; .mov_ptn 0(<2)◂1(<2)◂0(<2)◂{ { 8'(= r ) 9'(= r ) %[ "glb_etr id_line line_res 3" ] } 0'(= a2◂ [ *{ rr{| l |}}] ) } ⊢ 2'(= a3◂ [ a43◂ [ *{ a16◂ [ a20◂ [ a17◂ [ ]{| l |}]]a43◂ [ a26◂ [ a17◂ [ ]{| l |}]]}]] )
	ALC_RCD 2, rax
	mov r14,rax
	ALC_RCD 3, rax
	mov r9,rax
	mov rax,QWORD [rsp-8+8*3]
	mov QWORD [r9+8+8*0],rax
	mov rax,QWORD [rsp-8+8*2]
	mov QWORD [r9+8+8*1],rax
	mov rsi,1  
	mov rdi,40
	xor rax,rax 
	C_CALL_SF calloc
	mov QWORD [rax],26
	mov BYTE [rax+8+0],103
	mov BYTE [rax+8+1],108
	mov BYTE [rax+8+2],98
	mov BYTE [rax+8+3],95
	mov BYTE [rax+8+4],101
	mov BYTE [rax+8+5],116
	mov BYTE [rax+8+6],114
	mov BYTE [rax+8+7],32
	mov BYTE [rax+8+8],105
	mov BYTE [rax+8+9],100
	mov BYTE [rax+8+10],95
	mov BYTE [rax+8+11],108
	mov BYTE [rax+8+12],105
	mov BYTE [rax+8+13],110
	mov BYTE [rax+8+14],101
	mov BYTE [rax+8+15],32
	mov BYTE [rax+8+16],108
	mov BYTE [rax+8+17],105
	mov BYTE [rax+8+18],110
	mov BYTE [rax+8+19],101
	mov BYTE [rax+8+20],95
	mov BYTE [rax+8+21],114
	mov BYTE [rax+8+22],101
	mov BYTE [rax+8+23],115
	mov BYTE [rax+8+24],32
	mov BYTE [rax+8+25],51
	mov QWORD [r9+8+8*2],rax
	mov rax,r9
	mov QWORD [r14+8+8*0],rax
	mov rax,r13
	mov QWORD [r14+8+8*1],rax
	mov rax,r14
	mov BYTE [rax+6],0
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],1
	mov QWORD [rax+8],rdi
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,24
	jmp LB_3028
LB_3028:
	cmp BYTE [r8+6],0
	jnz LB_3012
	POP_GRM_SCC
	jmp LB_2917
LB_3012:
	POP_GRM_FAIL 
	jmp LB_2917
LB_2917:
	cmp BYTE [r8+6],0
	jnz LB_3030
	jmp LB_3031
LB_3030:
	add rsp,8
	POP_GRM_FAIL
	ret
LB_3031:
	mov QWORD [rsp+8*1],r14
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi 
; .mov_ptn2 2'(= a43◂ [ *{ a16◂ [ a20◂ [ a17◂ [ ]{| l |}]]a43◂ [ a26◂ [ a17◂ [ ]{| l |}]]}] ) ⊢ 3'(= a43◂ [ *{ a16◂ [ a20◂ [ a17◂ [ ]{| l |}]]a43◂ [ a26◂ [ a17◂ [ ]{| l |}]]}] )
	mov r10,r9
; .mov_ptn 2'(= a43◂ [ *{ a16◂ [ a20◂ [ a17◂ [ ]{| l |}]]a43◂ [ a26◂ [ a17◂ [ ]{| l |}]]}] ) ⊢ 3'(= a43◂ [ *{ a16◂ [ a20◂ [ a17◂ [ ]{| l |}]]a43◂ [ a26◂ [ a17◂ [ ]{| l |}]]}] )
	mov rax,r8
	mov r9,rax
	mov r13,QWORD [rsp+16+8*1]
	mov r14,QWORD [rsp+8*1]
	jmp LB_3032
LB_3032
;; ? 3'(= a43◂ [ *{ a16◂ [ a20◂ [ a17◂ [ ]{| l |}]]a43◂ [ a26◂ [ a17◂ [ ]{| l |}]]}] ) ⊢ 0(<2)◂{ 2'(= a16◂ [ a20◂ [ a17◂ [ ]{| l |}]] ) 4'(= a43◂ [ a26◂ [ a17◂ [ ]{| l |}]] ) }
	mov rdi,r9
	cmp BYTE [rdi+6],0
	jnz LB_3034
	mov r8, QWORD [r9+8]
	mov r10, QWORD [r9+16]
	mov QWORD [GBG_VCT+8*0],r9
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_RCD 2,rdi
;; ? 4'(= a43◂ [ a26◂ [ a17◂ [ ]{| l |}]] ) ⊢ 0(<2)◂3'(= a26◂ [ a17◂ [ ]{| l |}] )
	mov rdi,r10
	cmp BYTE [rdi+6],0
	jnz LB_3035
	mov QWORD [GBG_VCT+8*0],rdi
	mov r9,QWORD [rdi+8]
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_LN rdi
; #130 { 2'(= a16◂ [ a20◂ [ a17◂ [ ]{| l |}]] ) 3'(= a26◂ [ a17◂ [ ]{| l |}] ) } ⊢ 4(<7)◂{ 2'(= a16◂ [ a20◂ [ a17◂ [ ]{| l |}]] ) 3'(= a26◂ [ a17◂ [ ]{| l |}] ) }
; #196 4(<7)◂{ 2'(= a16◂ [ a20◂ [ a17◂ [ ]{| l |}]] ) 3'(= a26◂ [ a17◂ [ ]{| l |}] ) } ⊢ 0(<2)◂4(<7)◂{ 2'(= a16◂ [ a20◂ [ a17◂ [ ]{| l |}]] ) 3'(= a26◂ [ a17◂ [ ]{| l |}] ) }
; #24 0(<2)◂4(<7)◂{ 2'(= a16◂ [ a20◂ [ a17◂ [ ]{| l |}]] ) 3'(= a26◂ [ a17◂ [ ]{| l |}] ) } ⊢ 0(<2)◂0(<2)◂4(<7)◂{ 2'(= a16◂ [ a20◂ [ a17◂ [ ]{| l |}]] ) 3'(= a26◂ [ a17◂ [ ]{| l |}] ) }
; ∎ 0(<2)◂0(<2)◂4(<7)◂{ 2'(= a16◂ [ a20◂ [ a17◂ [ ]{| l |}]] ) 3'(= a26◂ [ a17◂ [ ]{| l |}] ) }
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 8'(= a43◂ [ *{ }] )
	mov rdi,QWORD [rsp-8+8*1]
	C_PUSH_REGS
	mov r8,rdi
	call LB_1706
	C_POP_REGS
; .mov_ptn2 0(<2)◂0(<2)◂4(<7)◂{ 2'(= a16◂ [ a20◂ [ a17◂ [ ]{| l |}]] ) 3'(= a26◂ [ a17◂ [ ]{| l |}] ) } ⊢ 2'(= a3◂ [ a43◂ [ a25◂ [ a17◂ [ ]{| l |}]]] )
	mov r13,r8
; .mov_ptn 0(<2)◂0(<2)◂4(<7)◂{ 0'(= a16◂ [ a20◂ [ a17◂ [ ]{| l |}]] ) 3'(= a26◂ [ a17◂ [ ]{| l |}] ) } ⊢ 2'(= a3◂ [ a43◂ [ a25◂ [ a17◂ [ ]{| l |}]]] )
	ALC_RCD 2, rax
	mov r14,rax
	mov rax,r13
	mov QWORD [r14+8+8*0],rax
	mov rax,r9
	mov QWORD [r14+8+8*1],rax
	mov rax,r14
	mov BYTE [rax+6],4
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,8
	jmp LB_3033
LB_3035:
;; ?. 4'(= a43◂ [ a26◂ [ a17◂ [ ]{| l |}]] ) ⊢ 1(<2)◂3'(= a2◂ [ *{ rr{| l |}}] )
	mov QWORD [GBG_VCT+8*0],rdi
	mov r9,QWORD [rdi+8]
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_LN rdi
; #195 3'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 1(<2)◂3'(= a2◂ [ *{ rr{| l |}}] )
; #24 1(<2)◂3'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 0(<2)◂1(<2)◂3'(= a2◂ [ *{ rr{| l |}}] )
; ∎ 0(<2)◂1(<2)◂3'(= a2◂ [ *{ rr{| l |}}] )
; .dlt.ptn 2'(= a16◂ [ a20◂ [ a17◂ [ ]{| l |}]] )
	mov rdi,r8
	C_PUSH_REGS
	mov r8,rdi
	call LB_450
	C_POP_REGS
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 8'(= a43◂ [ *{ }] )
	mov rdi,QWORD [rsp-8+8*1]
	C_PUSH_REGS
	mov r8,rdi
	call LB_1706
	C_POP_REGS
; .mov_ptn2 0(<2)◂1(<2)◂3'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 2'(= a3◂ [ a43◂ [ a25◂ [ a17◂ [ ]{| l |}]]] )
; .mov_ptn 0(<2)◂1(<2)◂3'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 2'(= a3◂ [ a43◂ [ a25◂ [ a17◂ [ ]{| l |}]]] )
	mov rax,r9
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],1
	mov QWORD [rax+8],rdi
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,8
	jmp LB_3033
LB_3034:
;; ?. 3'(= a43◂ [ *{ a16◂ [ a20◂ [ a17◂ [ ]{| l |}]]a43◂ [ a26◂ [ a17◂ [ ]{| l |}]]}] ) ⊢ 1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] )
	mov QWORD [GBG_VCT+8*0],rdi
	mov r8,QWORD [rdi+8]
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_LN rdi
; #195 2'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] )
; #24 1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 0(<2)◂1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] )
; ∎ 0(<2)◂1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] )
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 8'(= a43◂ [ *{ }] )
	mov rdi,QWORD [rsp-8+8*1]
	C_PUSH_REGS
	mov r8,rdi
	call LB_1706
	C_POP_REGS
; .mov_ptn2 0(<2)◂1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 2'(= a3◂ [ a43◂ [ a25◂ [ a17◂ [ ]{| l |}]]] )
	mov r13,r8
; .mov_ptn 0(<2)◂1(<2)◂0'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 2'(= a3◂ [ a43◂ [ a25◂ [ a17◂ [ ]{| l |}]]] )
	mov rax,r13
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],1
	mov QWORD [rax+8],rdi
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,8
	jmp LB_3033
LB_3033:
	cmp BYTE [r8+6],0
	jnz LB_2900
	POP_GRM_SCC
	ret
LB_2900:
	RB_GRM
	jmp LB_3038
LB_3037:
	add r14,1 
LB_3038:
	cmp r14,r9
	jge LB_3039
	JZ_SPC BYTE [r13+8+r14], LB_3037
LB_3039
	call GRM_227
	cmp BYTE [r8+6],0
	jnz LB_3042
	jmp LB_3043
LB_3042:
	jmp LB_3040
LB_3043:
; .mov_ptn2 2'(= *{ } ) ⊢ { }
; .mov_ptn 2'(= *{ } ) ⊢ { }
	jmp LB_3041
LB_3040:
	add rsp,0
	jmp LB_3036
LB_3041:
	PUSH_GRM
	jmp LB_3047
LB_3046:
	add r14,1 
LB_3047:
	cmp r14,r9
	jge LB_3048
	JZ_SPC BYTE [r13+8+r14], LB_3046
LB_3048
	call GRM_237
	cmp BYTE [r8+6],0
	jnz LB_3051
	jmp LB_3052
LB_3051:
	jmp LB_3049
LB_3052:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a43◂ [ a25◂ [ a17◂ [ ]{| l |}]] ) ⊢ 8'(= a43◂ [ a25◂ [ a17◂ [ ]{| l |}]] )
; .mov_ptn 2'(= a43◂ [ a25◂ [ a17◂ [ ]{| l |}]] ) ⊢ 8'(= a43◂ [ a25◂ [ a17◂ [ ]{| l |}]] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_3050
LB_3049:
	add rsp,0
	jmp LB_3045
LB_3050:
	mov QWORD [rsp+8*1],r14
	mov r13,QWORD [rsp+16+8*1]
	mov r14,QWORD [rsp+8*1]
	jmp LB_3053
LB_3053
; #24 8'(= a43◂ [ a25◂ [ a17◂ [ ]{| l |}]] ) ⊢ 0(<2)◂8'(= a43◂ [ a25◂ [ a17◂ [ ]{| l |}]] )
; ∎ 0(<2)◂8'(= a43◂ [ a25◂ [ a17◂ [ ]{| l |}]] )
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂8'(= a43◂ [ a25◂ [ a17◂ [ ]{| l |}]] ) ⊢ 2'(= a3◂ [ a43◂ [ a25◂ [ a17◂ [ ]{| l |}]]] )
; .mov_ptn 0(<2)◂8'(= a43◂ [ a25◂ [ a17◂ [ ]{| l |}]] ) ⊢ 2'(= a3◂ [ a43◂ [ a25◂ [ a17◂ [ ]{| l |}]]] )
	mov rax,QWORD [rsp-8+8*1]
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,8
	jmp LB_3054
LB_3054:
	cmp BYTE [r8+6],0
	jnz LB_3045
	POP_GRM_SCC
	jmp LB_3044
LB_3045:
	RB_GRM
	jmp LB_3057
LB_3056:
	add r14,1 
LB_3057:
	cmp r14,r9
	jge LB_3058
	JZ_SPC BYTE [r13+8+r14], LB_3056
LB_3058
	call GRM_226
	cmp BYTE [r8+6],0
	jnz LB_3061
	jmp LB_3062
LB_3061:
	jmp LB_3059
LB_3062:
; .mov_ptn2 2'(= *{ } ) ⊢ { }
; .mov_ptn 2'(= *{ } ) ⊢ { }
	jmp LB_3060
LB_3059:
	add rsp,0
	jmp LB_3055
LB_3060:
	mov QWORD [rsp+8*0],r14
	mov r13,QWORD [rsp+16+8*0]
	mov r14,QWORD [rsp+8*0]
	jmp LB_3063
LB_3063
; $ %[ "lc_code 11" ] ⊢ %[ "lc_code 11" ]
; #22 { } ⊢ 1(<2)◂{ }
; #23 { { 0'(= r ) 1'(= r ) %[ "lc_code 11" ] } 1(<2)◂{ } } ⊢ 0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "lc_code 11" ] } 1(<2)◂{ } }
; #195 0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "lc_code 11" ] } 1(<2)◂{ } } ⊢ 1(<2)◂0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "lc_code 11" ] } 1(<2)◂{ } }
; #24 1(<2)◂0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "lc_code 11" ] } 1(<2)◂{ } } ⊢ 0(<2)◂1(<2)◂0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "lc_code 11" ] } 1(<2)◂{ } }
; ∎ 0(<2)◂1(<2)◂0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "lc_code 11" ] } 1(<2)◂{ } }
; .dlt.ptn { }
; .mov_ptn2 0(<2)◂1(<2)◂0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "lc_code 11" ] } 1(<2)◂{ } } ⊢ 2'(= a3◂ [ a43◂ [ a25◂ [ a17◂ [ ]{| l |}]]] )
; .mov_ptn 0(<2)◂1(<2)◂0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "lc_code 11" ] } 1(<2)◂{ } } ⊢ 2'(= a3◂ [ a43◂ [ a25◂ [ a17◂ [ ]{| l |}]]] )
	ALC_RCD 2, rax
	mov r9,rax
	ALC_RCD 3, rax
	mov r10,rax
	mov rax,r13
	mov QWORD [r10+8+8*0],rax
	mov rax,r14
	mov QWORD [r10+8+8*1],rax
	mov rsi,1  
	mov rdi,24
	xor rax,rax 
	C_CALL_SF calloc
	mov QWORD [rax],10
	mov BYTE [rax+8+0],108
	mov BYTE [rax+8+1],99
	mov BYTE [rax+8+2],95
	mov BYTE [rax+8+3],99
	mov BYTE [rax+8+4],111
	mov BYTE [rax+8+5],100
	mov BYTE [rax+8+6],101
	mov BYTE [rax+8+7],32
	mov BYTE [rax+8+8],49
	mov BYTE [rax+8+9],49
	mov QWORD [r10+8+8*2],rax
	mov rax,r10
	mov QWORD [r9+8+8*0],rax
	mov rax,unt 
	mov rax,unt_1
	mov QWORD [r9+8+8*1],rax
	mov rax,r9
	mov BYTE [rax+6],0
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],1
	mov QWORD [rax+8],rdi
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	jmp LB_3064
LB_3064:
	cmp BYTE [r8+6],0
	jnz LB_3055
	POP_GRM_SCC
	jmp LB_3044
LB_3055:
	POP_GRM_FAIL 
	jmp LB_3044
LB_3044:
	cmp BYTE [r8+6],0
	jnz LB_3065
	jmp LB_3066
LB_3065:
	add rsp,0
	POP_GRM_FAIL
	ret
LB_3066:
	mov QWORD [rsp+8*0],r14
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi 
; .mov_ptn2 2'(= a43◂ [ a25◂ [ a17◂ [ ]{| l |}]] ) ⊢ 3'(= a43◂ [ a25◂ [ a17◂ [ ]{| l |}]] )
	mov r10,r9
; .mov_ptn 2'(= a43◂ [ a25◂ [ a17◂ [ ]{| l |}]] ) ⊢ 3'(= a43◂ [ a25◂ [ a17◂ [ ]{| l |}]] )
	mov rax,r8
	mov r9,rax
	mov r13,QWORD [rsp+16+8*0]
	mov r14,QWORD [rsp+8*0]
	jmp LB_3067
LB_3067
;; ? 3'(= a43◂ [ a25◂ [ a17◂ [ ]{| l |}]] ) ⊢ 0(<2)◂2'(= a25◂ [ a17◂ [ ]{| l |}] )
	mov rdi,r9
	cmp BYTE [rdi+6],0
	jnz LB_3069
	mov QWORD [GBG_VCT+8*0],rdi
	mov r8,QWORD [rdi+8]
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_LN rdi
; $ %[ "lc_code 9" ] ⊢ %[ "lc_code 9" ]
; #198 { 0'(= r ) 1'(= r ) %[ "lc_code 9" ] } ⊢ 0'(= a43◂ [ q0] )
	sub rsp,8
	mov QWORD [rsp+8*0],r8
; .mov_ptn2 { 0'(= r ) 1'(= r ) %[ "lc_code 9" ] } ⊢ { 0'(= r ) 1'(= r ) 2'(= {| l |} ) }
; .mov_ptn %[ "lc_code 9" ] ⊢ 2'(= {| l |} )
	mov rsi,1  
	mov rdi,24
	xor rax,rax 
	C_CALL_SF calloc
	mov QWORD [rax],9
	mov BYTE [rax+8+0],108
	mov BYTE [rax+8+1],99
	mov BYTE [rax+8+2],95
	mov BYTE [rax+8+3],99
	mov BYTE [rax+8+4],111
	mov BYTE [rax+8+5],100
	mov BYTE [rax+8+6],101
	mov BYTE [rax+8+7],32
	mov BYTE [rax+8+8],57
	mov r8,rax
	call ETR_198
	mov r8,QWORD [rsp-8+8*1]
	add rsp,8
; #24 0'(= a43◂ [ q0] ) ⊢ 0(<2)◂0'(= a43◂ [ q0] )
; ∎ 0(<2)◂0'(= a43◂ [ q0] )
; .dlt.ptn 2'(= a25◂ [ a17◂ [ ]{| l |}] )
	mov rdi,r8
	C_PUSH_REGS
	mov r8,rdi
	call LB_679
	C_POP_REGS
; .dlt.ptn { }
; .mov_ptn2 0(<2)◂0'(= a43◂ [ q0] ) ⊢ 2'(= a3◂ [ a43◂ [ a25◂ [ a17◂ [ ]{| l |}]]] )
; .mov_ptn 0(<2)◂0'(= a43◂ [ q0] ) ⊢ 2'(= a3◂ [ a43◂ [ a25◂ [ a17◂ [ ]{| l |}]]] )
	mov rax,r13
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	jmp LB_3068
LB_3069:
;; ?. 3'(= a43◂ [ a25◂ [ a17◂ [ ]{| l |}]] ) ⊢ 1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] )
	mov QWORD [GBG_VCT+8*0],rdi
	mov r8,QWORD [rdi+8]
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_LN rdi
; $ %[ "lc_code 10" ] ⊢ %[ "lc_code 10" ]
; #23 { { 0'(= r ) 1'(= r ) %[ "lc_code 10" ] } 2'(= a2◂ [ *{ rr{| l |}}] ) } ⊢ 0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "lc_code 10" ] } 2'(= a2◂ [ *{ rr{| l |}}] ) }
; #195 0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "lc_code 10" ] } 2'(= a2◂ [ *{ rr{| l |}}] ) } ⊢ 1(<2)◂0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "lc_code 10" ] } 2'(= a2◂ [ *{ rr{| l |}}] ) }
; #24 1(<2)◂0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "lc_code 10" ] } 2'(= a2◂ [ *{ rr{| l |}}] ) } ⊢ 0(<2)◂1(<2)◂0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "lc_code 10" ] } 2'(= a2◂ [ *{ rr{| l |}}] ) }
; ∎ 0(<2)◂1(<2)◂0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "lc_code 10" ] } 2'(= a2◂ [ *{ rr{| l |}}] ) }
; .dlt.ptn { }
; .mov_ptn2 0(<2)◂1(<2)◂0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "lc_code 10" ] } 2'(= a2◂ [ *{ rr{| l |}}] ) } ⊢ 2'(= a3◂ [ a43◂ [ a25◂ [ a17◂ [ ]{| l |}]]] )
	mov r9,r8
; .mov_ptn 0(<2)◂1(<2)◂0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "lc_code 10" ] } 3'(= a2◂ [ *{ rr{| l |}}] ) } ⊢ 2'(= a3◂ [ a43◂ [ a25◂ [ a17◂ [ ]{| l |}]]] )
	ALC_RCD 2, rax
	mov r10,rax
	ALC_RCD 3, rax
	mov r11,rax
	mov rax,r13
	mov QWORD [r11+8+8*0],rax
	mov rax,r14
	mov QWORD [r11+8+8*1],rax
	mov rsi,1  
	mov rdi,24
	xor rax,rax 
	C_CALL_SF calloc
	mov QWORD [rax],10
	mov BYTE [rax+8+0],108
	mov BYTE [rax+8+1],99
	mov BYTE [rax+8+2],95
	mov BYTE [rax+8+3],99
	mov BYTE [rax+8+4],111
	mov BYTE [rax+8+5],100
	mov BYTE [rax+8+6],101
	mov BYTE [rax+8+7],32
	mov BYTE [rax+8+8],49
	mov BYTE [rax+8+9],48
	mov QWORD [r11+8+8*2],rax
	mov rax,r11
	mov QWORD [r10+8+8*0],rax
	mov rax,r9
	mov QWORD [r10+8+8*1],rax
	mov rax,r10
	mov BYTE [rax+6],0
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],1
	mov QWORD [rax+8],rdi
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	jmp LB_3068
LB_3068:
	cmp BYTE [r8+6],0
	jnz LB_3036
	POP_GRM_SCC
	ret
LB_3036:
	POP_GRM_FAIL 
	ret
ETR_238:
	mov r9,0x0000_ffff_ffff_ffff
	and r9,[r13]
	call GRM_238
	ret
GRM_238:
	PUSH_GRM
	jmp LB_3072
LB_3071:
	add r14,1 
LB_3072:
	cmp r14,r9
	jge LB_3073
	JZ_SPC BYTE [r13+8+r14], LB_3071
LB_3073
	call GRM_240
	cmp BYTE [r8+6],0
	jnz LB_3076
	jmp LB_3077
LB_3076:
	jmp LB_3074
LB_3077:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a43◂ [ a15◂ [ *{ a16◂ [ a22◂ [ a17◂ [ ]{| l |}]]a2◂ [ a29◂ [ a17◂ [ ]{| l |}]]a28◂ [ a17◂ [ ]{| l |}]}]] ) ⊢ 8'(= a43◂ [ a15◂ [ *{ a16◂ [ a22◂ [ a17◂ [ ]{| l |}]]a2◂ [ a29◂ [ a17◂ [ ]{| l |}]]a28◂ [ a17◂ [ ]{| l |}]}]] )
; .mov_ptn 2'(= a43◂ [ a15◂ [ *{ a16◂ [ a22◂ [ a17◂ [ ]{| l |}]]a2◂ [ a29◂ [ a17◂ [ ]{| l |}]]a28◂ [ a17◂ [ ]{| l |}]}]] ) ⊢ 8'(= a43◂ [ a15◂ [ *{ a16◂ [ a22◂ [ a17◂ [ ]{| l |}]]a2◂ [ a29◂ [ a17◂ [ ]{| l |}]]a28◂ [ a17◂ [ ]{| l |}]}]] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_3075
LB_3074:
	add rsp,0
	jmp LB_3070
LB_3075:
	mov QWORD [rsp+8*1],r14
	mov r13,QWORD [rsp+16+8*1]
	mov r14,QWORD [rsp+8*1]
	jmp LB_3078
LB_3078
;; ? 8'(= a43◂ [ a15◂ [ *{ a16◂ [ a22◂ [ a17◂ [ ]{| l |}]]a2◂ [ a29◂ [ a17◂ [ ]{| l |}]]a28◂ [ a17◂ [ ]{| l |}]}]] ) ⊢ 0(<2)◂2'(= a15◂ [ *{ a16◂ [ a22◂ [ a17◂ [ ]{| l |}]]a2◂ [ a29◂ [ a17◂ [ ]{| l |}]]a28◂ [ a17◂ [ ]{| l |}]}] )
	mov rdi,QWORD [rsp-8+8*1]
	cmp BYTE [rdi+6],0
	jnz LB_3080
	mov QWORD [GBG_VCT+8*0],rdi
	mov r8,QWORD [rdi+8]
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_LN rdi
; #127 2'(= a15◂ [ *{ a16◂ [ a22◂ [ a17◂ [ ]{| l |}]]a2◂ [ a29◂ [ a17◂ [ ]{| l |}]]a28◂ [ a17◂ [ ]{| l |}]}] ) ⊢ 0(<2)◂2'(= a15◂ [ *{ a16◂ [ a22◂ [ a17◂ [ ]{| l |}]]a2◂ [ a29◂ [ a17◂ [ ]{| l |}]]a28◂ [ a17◂ [ ]{| l |}]}] )
; #196 0(<2)◂2'(= a15◂ [ *{ a16◂ [ a22◂ [ a17◂ [ ]{| l |}]]a2◂ [ a29◂ [ a17◂ [ ]{| l |}]]a28◂ [ a17◂ [ ]{| l |}]}] ) ⊢ 0(<2)◂0(<2)◂2'(= a15◂ [ *{ a16◂ [ a22◂ [ a17◂ [ ]{| l |}]]a2◂ [ a29◂ [ a17◂ [ ]{| l |}]]a28◂ [ a17◂ [ ]{| l |}]}] )
; #24 0(<2)◂0(<2)◂2'(= a15◂ [ *{ a16◂ [ a22◂ [ a17◂ [ ]{| l |}]]a2◂ [ a29◂ [ a17◂ [ ]{| l |}]]a28◂ [ a17◂ [ ]{| l |}]}] ) ⊢ 0(<2)◂0(<2)◂0(<2)◂2'(= a15◂ [ *{ a16◂ [ a22◂ [ a17◂ [ ]{| l |}]]a2◂ [ a29◂ [ a17◂ [ ]{| l |}]]a28◂ [ a17◂ [ ]{| l |}]}] )
; ∎ 0(<2)◂0(<2)◂0(<2)◂2'(= a15◂ [ *{ a16◂ [ a22◂ [ a17◂ [ ]{| l |}]]a2◂ [ a29◂ [ a17◂ [ ]{| l |}]]a28◂ [ a17◂ [ ]{| l |}]}] )
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂0(<2)◂0(<2)◂2'(= a15◂ [ *{ a16◂ [ a22◂ [ a17◂ [ ]{| l |}]]a2◂ [ a29◂ [ a17◂ [ ]{| l |}]]a28◂ [ a17◂ [ ]{| l |}]}] ) ⊢ 2'(= a3◂ [ a43◂ [ a26◂ [ a17◂ [ ]{| l |}]]] )
	mov r13,r8
; .mov_ptn 0(<2)◂0(<2)◂0(<2)◂0'(= a15◂ [ *{ a16◂ [ a22◂ [ a17◂ [ ]{| l |}]]a2◂ [ a29◂ [ a17◂ [ ]{| l |}]]a28◂ [ a17◂ [ ]{| l |}]}] ) ⊢ 2'(= a3◂ [ a43◂ [ a26◂ [ a17◂ [ ]{| l |}]]] )
	mov rax,r13
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,8
	jmp LB_3079
LB_3080:
;; ?. 8'(= a43◂ [ a15◂ [ *{ a16◂ [ a22◂ [ a17◂ [ ]{| l |}]]a2◂ [ a29◂ [ a17◂ [ ]{| l |}]]a28◂ [ a17◂ [ ]{| l |}]}]] ) ⊢ 1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] )
	mov QWORD [GBG_VCT+8*0],rdi
	mov r8,QWORD [rdi+8]
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_LN rdi
; #195 2'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] )
; #24 1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 0(<2)◂1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] )
; ∎ 0(<2)◂1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] )
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 2'(= a3◂ [ a43◂ [ a26◂ [ a17◂ [ ]{| l |}]]] )
	mov r13,r8
; .mov_ptn 0(<2)◂1(<2)◂0'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 2'(= a3◂ [ a43◂ [ a26◂ [ a17◂ [ ]{| l |}]]] )
	mov rax,r13
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],1
	mov QWORD [rax+8],rdi
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,8
	jmp LB_3079
LB_3079:
	cmp BYTE [r8+6],0
	jnz LB_3070
	POP_GRM_SCC
	ret
LB_3070:
	RB_GRM
	jmp LB_3083
LB_3082:
	add r14,1 
LB_3083:
	cmp r14,r9
	jge LB_3084
	JZ_SPC BYTE [r13+8+r14], LB_3082
LB_3084
	call GRM_208
	cmp BYTE [r8+6],0
	jnz LB_3087
	jmp LB_3088
LB_3087:
	jmp LB_3085
LB_3088:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a16◂ [ a21◂ [ {| l |}]] ) ⊢ 8'(= a16◂ [ a21◂ [ {| l |}]] )
; .mov_ptn 2'(= a16◂ [ a21◂ [ {| l |}]] ) ⊢ 8'(= a16◂ [ a21◂ [ {| l |}]] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_3086
LB_3085:
	add rsp,0
	jmp LB_3081
LB_3086:
	jmp LB_3090
LB_3089:
	add r14,1 
LB_3090:
	cmp r14,r9
	jge LB_3091
	JZ_SPC BYTE [r13+8+r14], LB_3089
LB_3091
	call GRM_210
	cmp BYTE [r8+6],0
	jnz LB_3094
	jmp LB_3095
LB_3094:
	jmp LB_3092
LB_3095:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a2◂ [ a16◂ [ a21◂ [ {| l |}]]] ) ⊢ 9'(= a2◂ [ a16◂ [ a21◂ [ {| l |}]]] )
; .mov_ptn 2'(= a2◂ [ a16◂ [ a21◂ [ {| l |}]]] ) ⊢ 9'(= a2◂ [ a16◂ [ a21◂ [ {| l |}]]] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_3093
LB_3092:
	add rsp,8
	jmp LB_3081
LB_3093:
	jmp LB_3097
LB_3096:
	add r14,1 
LB_3097:
	cmp r14,r9
	jge LB_3098
	JZ_SPC BYTE [r13+8+r14], LB_3096
LB_3098
	call GRM_237
	cmp BYTE [r8+6],0
	jnz LB_3101
	jmp LB_3102
LB_3101:
	jmp LB_3099
LB_3102:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a43◂ [ a25◂ [ a17◂ [ ]{| l |}]] ) ⊢ 10'(= a43◂ [ a25◂ [ a17◂ [ ]{| l |}]] )
; .mov_ptn 2'(= a43◂ [ a25◂ [ a17◂ [ ]{| l |}]] ) ⊢ 10'(= a43◂ [ a25◂ [ a17◂ [ ]{| l |}]] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_3100
LB_3099:
	add rsp,16
	jmp LB_3081
LB_3100:
	mov QWORD [rsp+8*3],r14
	mov r13,QWORD [rsp+16+8*3]
	mov r14,QWORD [rsp+8*3]
	jmp LB_3103
LB_3103
;; ? 10'(= a43◂ [ a25◂ [ a17◂ [ ]{| l |}]] ) ⊢ 0(<2)◂2'(= a25◂ [ a17◂ [ ]{| l |}] )
	mov rdi,QWORD [rsp-8+8*1]
	cmp BYTE [rdi+6],0
	jnz LB_3105
	mov QWORD [GBG_VCT+8*0],rdi
	mov r8,QWORD [rdi+8]
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_LN rdi
; #23 { 8'(= a16◂ [ a21◂ [ {| l |}]] ) 9'(= a2◂ [ a16◂ [ a21◂ [ {| l |}]]] ) } ⊢ 0(<2)◂{ 8'(= a16◂ [ a21◂ [ {| l |}]] ) 9'(= a2◂ [ a16◂ [ a21◂ [ {| l |}]]] ) }
; #126 { 0(<2)◂{ 8'(= a16◂ [ a21◂ [ {| l |}]] ) 9'(= a2◂ [ a16◂ [ a21◂ [ {| l |}]]] ) } 2'(= a25◂ [ a17◂ [ ]{| l |}] ) } ⊢ 1(<2)◂{ 0(<2)◂{ 8'(= a16◂ [ a21◂ [ {| l |}]] ) 9'(= a2◂ [ a16◂ [ a21◂ [ {| l |}]]] ) } 2'(= a25◂ [ a17◂ [ ]{| l |}] ) }
; #196 1(<2)◂{ 0(<2)◂{ 8'(= a16◂ [ a21◂ [ {| l |}]] ) 9'(= a2◂ [ a16◂ [ a21◂ [ {| l |}]]] ) } 2'(= a25◂ [ a17◂ [ ]{| l |}] ) } ⊢ 0(<2)◂1(<2)◂{ 0(<2)◂{ 8'(= a16◂ [ a21◂ [ {| l |}]] ) 9'(= a2◂ [ a16◂ [ a21◂ [ {| l |}]]] ) } 2'(= a25◂ [ a17◂ [ ]{| l |}] ) }
; #24 0(<2)◂1(<2)◂{ 0(<2)◂{ 8'(= a16◂ [ a21◂ [ {| l |}]] ) 9'(= a2◂ [ a16◂ [ a21◂ [ {| l |}]]] ) } 2'(= a25◂ [ a17◂ [ ]{| l |}] ) } ⊢ 0(<2)◂0(<2)◂1(<2)◂{ 0(<2)◂{ 8'(= a16◂ [ a21◂ [ {| l |}]] ) 9'(= a2◂ [ a16◂ [ a21◂ [ {| l |}]]] ) } 2'(= a25◂ [ a17◂ [ ]{| l |}] ) }
; ∎ 0(<2)◂0(<2)◂1(<2)◂{ 0(<2)◂{ 8'(= a16◂ [ a21◂ [ {| l |}]] ) 9'(= a2◂ [ a16◂ [ a21◂ [ {| l |}]]] ) } 2'(= a25◂ [ a17◂ [ ]{| l |}] ) }
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂0(<2)◂1(<2)◂{ 0(<2)◂{ 8'(= a16◂ [ a21◂ [ {| l |}]] ) 9'(= a2◂ [ a16◂ [ a21◂ [ {| l |}]]] ) } 2'(= a25◂ [ a17◂ [ ]{| l |}] ) } ⊢ 2'(= a3◂ [ a43◂ [ a26◂ [ a17◂ [ ]{| l |}]]] )
	mov r13,r8
; .mov_ptn 0(<2)◂0(<2)◂1(<2)◂{ 0(<2)◂{ 8'(= a16◂ [ a21◂ [ {| l |}]] ) 9'(= a2◂ [ a16◂ [ a21◂ [ {| l |}]]] ) } 0'(= a25◂ [ a17◂ [ ]{| l |}] ) } ⊢ 2'(= a3◂ [ a43◂ [ a26◂ [ a17◂ [ ]{| l |}]]] )
	ALC_RCD 2, rax
	mov r14,rax
	ALC_RCD 2, rax
	mov r9,rax
	mov rax,QWORD [rsp-8+8*3]
	mov QWORD [r9+8+8*0],rax
	mov rax,QWORD [rsp-8+8*2]
	mov QWORD [r9+8+8*1],rax
	mov rax,r9
	mov BYTE [rax+6],0
	mov QWORD [r14+8+8*0],rax
	mov rax,r13
	mov QWORD [r14+8+8*1],rax
	mov rax,r14
	mov BYTE [rax+6],1
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,24
	jmp LB_3104
LB_3105:
;; ?. 10'(= a43◂ [ a25◂ [ a17◂ [ ]{| l |}]] ) ⊢ 1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] )
	mov QWORD [GBG_VCT+8*0],rdi
	mov r8,QWORD [rdi+8]
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_LN rdi
; #195 2'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] )
; #24 1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 0(<2)◂1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] )
; ∎ 0(<2)◂1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] )
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 9'(= a2◂ [ a16◂ [ a21◂ [ {| l |}]]] )
	mov rdi,QWORD [rsp-8+8*2]
	C_PUSH_REGS
	mov r8,rdi
	call LB_697
	C_POP_REGS
; .dlt.ptn 8'(= a16◂ [ a21◂ [ {| l |}]] )
	mov rdi,QWORD [rsp-8+8*3]
	C_PUSH_REGS
	mov r8,rdi
	call LB_673
	C_POP_REGS
; .mov_ptn2 0(<2)◂1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 2'(= a3◂ [ a43◂ [ a26◂ [ a17◂ [ ]{| l |}]]] )
	mov r13,r8
; .mov_ptn 0(<2)◂1(<2)◂0'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 2'(= a3◂ [ a43◂ [ a26◂ [ a17◂ [ ]{| l |}]]] )
	mov rax,r13
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],1
	mov QWORD [rax+8],rdi
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,24
	jmp LB_3104
LB_3104:
	cmp BYTE [r8+6],0
	jnz LB_3081
	POP_GRM_SCC
	ret
LB_3081:
	POP_GRM_FAIL 
	ret
ETR_239:
	mov r9,0x0000_ffff_ffff_ffff
	and r9,[r13]
	call GRM_239
	ret
GRM_239:
	PUSH_GRM
	jmp LB_3108
LB_3107:
	add r14,1 
LB_3108:
	cmp r14,r9
	jge LB_3109
	JZ_SPC BYTE [r13+8+r14], LB_3107
LB_3109
	call GRM_219
	cmp BYTE [r8+6],0
	jnz LB_3112
	jmp LB_3113
LB_3112:
	jmp LB_3110
LB_3113:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a43◂ [ *{ }] ) ⊢ 8'(= a43◂ [ *{ }] )
; .mov_ptn 2'(= a43◂ [ *{ }] ) ⊢ 8'(= a43◂ [ *{ }] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_3111
LB_3110:
	add rsp,0
	jmp LB_3106
LB_3111:
	jmp LB_3115
LB_3114:
	add r14,1 
LB_3115:
	cmp r14,r9
	jge LB_3116
	JZ_SPC BYTE [r13+8+r14], LB_3114
LB_3116
	lea rax,[r14+4]
	cmp rax,r9
	jg LB_3119
	jmp LB_3120
LB_3119:
	mov r8,unt_1
	jmp LB_3117
LB_3120:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],226
	jnz LB_3121
	cmp BYTE [rdi+1],136
	jnz LB_3121
	cmp BYTE [rdi+2],144
	jnz LB_3121
	cmp BYTE [rdi+3],46
	jnz LB_3121
	jmp LB_3122
LB_3121:
	mov r8,unt_1
	jmp LB_3117
LB_3122:
	add r14,4
	jmp LB_3118
LB_3117:
	add rsp,8
	jmp LB_3106
LB_3118:
	jmp LB_3124
LB_3123:
	add r14,1 
LB_3124:
	cmp r14,r9
	jge LB_3125
	JZ_SPC BYTE [r13+8+r14], LB_3123
LB_3125
	call GRM_241
	cmp BYTE [r8+6],0
	jnz LB_3128
	jmp LB_3129
LB_3128:
	jmp LB_3126
LB_3129:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a43◂ [ a2◂ [ a29◂ [ a17◂ [ ]{| l |}]]] ) ⊢ 9'(= a43◂ [ a2◂ [ a29◂ [ a17◂ [ ]{| l |}]]] )
; .mov_ptn 2'(= a43◂ [ a2◂ [ a29◂ [ a17◂ [ ]{| l |}]]] ) ⊢ 9'(= a43◂ [ a2◂ [ a29◂ [ a17◂ [ ]{| l |}]]] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_3127
LB_3126:
	add rsp,8
	POP_GRM_FAIL
	ret
LB_3127:
	jmp LB_3131
LB_3130:
	add r14,1 
LB_3131:
	cmp r14,r9
	jge LB_3132
	JZ_SPC BYTE [r13+8+r14], LB_3130
LB_3132
	call GRM_237
	cmp BYTE [r8+6],0
	jnz LB_3135
	jmp LB_3136
LB_3135:
	jmp LB_3133
LB_3136:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a43◂ [ a25◂ [ a17◂ [ ]{| l |}]] ) ⊢ 10'(= a43◂ [ a25◂ [ a17◂ [ ]{| l |}]] )
; .mov_ptn 2'(= a43◂ [ a25◂ [ a17◂ [ ]{| l |}]] ) ⊢ 10'(= a43◂ [ a25◂ [ a17◂ [ ]{| l |}]] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_3134
LB_3133:
	add rsp,16
	POP_GRM_FAIL
	ret
LB_3134:
	mov QWORD [rsp+8*3],r14
	mov r13,QWORD [rsp+16+8*3]
	mov r14,QWORD [rsp+8*3]
	jmp LB_3137
LB_3137
; #197 { 9'(= a43◂ [ a2◂ [ a29◂ [ a17◂ [ ]{| l |}]]] ) 10'(= a43◂ [ a25◂ [ a17◂ [ ]{| l |}]] ) } ⊢ 2'(= a43◂ [ *{ a2◂ [ a29◂ [ a17◂ [ ]{| l |}]]a25◂ [ a17◂ [ ]{| l |}]}] )
	sub rsp,16
	mov QWORD [rsp+8*0],r13
	mov QWORD [rsp+8*1],r14
; .mov_ptn2 { 9'(= a43◂ [ a2◂ [ a29◂ [ a17◂ [ ]{| l |}]]] ) 10'(= a43◂ [ a25◂ [ a17◂ [ ]{| l |}]] ) } ⊢ { 0'(= a43◂ [ a2◂ [ a29◂ [ a17◂ [ ]{| l |}]]] ) 1'(= a43◂ [ a25◂ [ a17◂ [ ]{| l |}]] ) }
; .mov_ptn 10'(= a43◂ [ a25◂ [ a17◂ [ ]{| l |}]] ) ⊢ 1'(= a43◂ [ a25◂ [ a17◂ [ ]{| l |}]] )
	mov rax,QWORD [rsp-8+8*3]
	mov r14,rax
; .mov_ptn 9'(= a43◂ [ a2◂ [ a29◂ [ a17◂ [ ]{| l |}]]] ) ⊢ 0'(= a43◂ [ a2◂ [ a29◂ [ a17◂ [ ]{| l |}]]] )
	mov rax,QWORD [rsp-8+8*4]
	mov r13,rax
	call LB_3139
	mov r14,QWORD [rsp-8+8*2]
	mov r8,r13
	mov r13,QWORD [rsp-8+8*1]
	add rsp,32
;; ? 2'(= a43◂ [ *{ a2◂ [ a29◂ [ a17◂ [ ]{| l |}]]a25◂ [ a17◂ [ ]{| l |}]}] ) ⊢ 0(<2)◂{ 3'(= a2◂ [ a29◂ [ a17◂ [ ]{| l |}]] ) 4'(= a25◂ [ a17◂ [ ]{| l |}] ) }
	mov rdi,r8
	cmp BYTE [rdi+6],0
	jnz LB_3143
	mov r9, QWORD [r8+8]
	mov r10, QWORD [r8+16]
	mov QWORD [GBG_VCT+8*0],r8
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_RCD 2,rdi
; #119 4'(= a25◂ [ a17◂ [ ]{| l |}] ) ⊢ 2(<3)◂4'(= a25◂ [ a17◂ [ ]{| l |}] )
; #52 { 3'(= a2◂ [ a29◂ [ a17◂ [ ]{| l |}]] ) 2(<3)◂4'(= a25◂ [ a17◂ [ ]{| l |}] ) } ⊢ 1(<2)◂{ 3'(= a2◂ [ a29◂ [ a17◂ [ ]{| l |}]] ) 2(<3)◂4'(= a25◂ [ a17◂ [ ]{| l |}] ) }
; #196 1(<2)◂{ 3'(= a2◂ [ a29◂ [ a17◂ [ ]{| l |}]] ) 2(<3)◂4'(= a25◂ [ a17◂ [ ]{| l |}] ) } ⊢ 0(<2)◂1(<2)◂{ 3'(= a2◂ [ a29◂ [ a17◂ [ ]{| l |}]] ) 2(<3)◂4'(= a25◂ [ a17◂ [ ]{| l |}] ) }
; #24 0(<2)◂1(<2)◂{ 3'(= a2◂ [ a29◂ [ a17◂ [ ]{| l |}]] ) 2(<3)◂4'(= a25◂ [ a17◂ [ ]{| l |}] ) } ⊢ 0(<2)◂0(<2)◂1(<2)◂{ 3'(= a2◂ [ a29◂ [ a17◂ [ ]{| l |}]] ) 2(<3)◂4'(= a25◂ [ a17◂ [ ]{| l |}] ) }
; ∎ 0(<2)◂0(<2)◂1(<2)◂{ 3'(= a2◂ [ a29◂ [ a17◂ [ ]{| l |}]] ) 2(<3)◂4'(= a25◂ [ a17◂ [ ]{| l |}] ) }
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 8'(= a43◂ [ *{ }] )
	mov rdi,QWORD [rsp-8+8*1]
	C_PUSH_REGS
	mov r8,rdi
	call LB_1706
	C_POP_REGS
; .mov_ptn2 0(<2)◂0(<2)◂1(<2)◂{ 3'(= a2◂ [ a29◂ [ a17◂ [ ]{| l |}]] ) 2(<3)◂4'(= a25◂ [ a17◂ [ ]{| l |}] ) } ⊢ 2'(= a3◂ [ a43◂ [ a15◂ [ *{ a2◂ [ a29◂ [ a17◂ [ ]{| l |}]]a28◂ [ a17◂ [ ]{| l |}]}]]] )
; .mov_ptn 0(<2)◂0(<2)◂1(<2)◂{ 3'(= a2◂ [ a29◂ [ a17◂ [ ]{| l |}]] ) 2(<3)◂4'(= a25◂ [ a17◂ [ ]{| l |}] ) } ⊢ 2'(= a3◂ [ a43◂ [ a15◂ [ *{ a2◂ [ a29◂ [ a17◂ [ ]{| l |}]]a28◂ [ a17◂ [ ]{| l |}]}]]] )
	ALC_RCD 2, rax
	mov r13,rax
	mov rax,r9
	mov QWORD [r13+8+8*0],rax
	mov rax,r10
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],2
	mov QWORD [rax+8],rdi
	mov QWORD [r13+8+8*1],rax
	mov rax,r13
	mov BYTE [rax+6],1
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,8
	jmp LB_3138
LB_3143:
;; ?. 2'(= a43◂ [ *{ a2◂ [ a29◂ [ a17◂ [ ]{| l |}]]a25◂ [ a17◂ [ ]{| l |}]}] ) ⊢ 1(<2)◂3'(= a2◂ [ *{ rr{| l |}}] )
	mov QWORD [GBG_VCT+8*0],rdi
	mov r9,QWORD [rdi+8]
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_LN rdi
; #195 3'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 1(<2)◂3'(= a2◂ [ *{ rr{| l |}}] )
; #24 1(<2)◂3'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 0(<2)◂1(<2)◂3'(= a2◂ [ *{ rr{| l |}}] )
; ∎ 0(<2)◂1(<2)◂3'(= a2◂ [ *{ rr{| l |}}] )
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 8'(= a43◂ [ *{ }] )
	mov rdi,QWORD [rsp-8+8*1]
	C_PUSH_REGS
	mov r8,rdi
	call LB_1706
	C_POP_REGS
; .mov_ptn2 0(<2)◂1(<2)◂3'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 2'(= a3◂ [ a43◂ [ a15◂ [ *{ a2◂ [ a29◂ [ a17◂ [ ]{| l |}]]a28◂ [ a17◂ [ ]{| l |}]}]]] )
; .mov_ptn 0(<2)◂1(<2)◂3'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 2'(= a3◂ [ a43◂ [ a15◂ [ *{ a2◂ [ a29◂ [ a17◂ [ ]{| l |}]]a28◂ [ a17◂ [ ]{| l |}]}]]] )
	mov rax,r9
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],1
	mov QWORD [rax+8],rdi
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,8
	jmp LB_3138
LB_3138:
	cmp BYTE [r8+6],0
	jnz LB_3106
	POP_GRM_SCC
	ret
LB_3106:
	RB_GRM
	jmp LB_3146
LB_3145:
	add r14,1 
LB_3146:
	cmp r14,r9
	jge LB_3147
	JZ_SPC BYTE [r13+8+r14], LB_3145
LB_3147
	call GRM_219
	cmp BYTE [r8+6],0
	jnz LB_3150
	jmp LB_3151
LB_3150:
	jmp LB_3148
LB_3151:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a43◂ [ *{ }] ) ⊢ 8'(= a43◂ [ *{ }] )
; .mov_ptn 2'(= a43◂ [ *{ }] ) ⊢ 8'(= a43◂ [ *{ }] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_3149
LB_3148:
	add rsp,0
	jmp LB_3144
LB_3149:
	jmp LB_3153
LB_3152:
	add r14,1 
LB_3153:
	cmp r14,r9
	jge LB_3154
	JZ_SPC BYTE [r13+8+r14], LB_3152
LB_3154
	lea rax,[r14+3]
	cmp rax,r9
	jg LB_3157
	jmp LB_3158
LB_3157:
	mov r8,unt_1
	jmp LB_3155
LB_3158:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],226
	jnz LB_3159
	cmp BYTE [rdi+1],136
	jnz LB_3159
	cmp BYTE [rdi+2],144
	jnz LB_3159
	jmp LB_3160
LB_3159:
	mov r8,unt_1
	jmp LB_3155
LB_3160:
	add r14,3
	jmp LB_3156
LB_3155:
	add rsp,8
	jmp LB_3144
LB_3156:
	jmp LB_3162
LB_3161:
	add r14,1 
LB_3162:
	cmp r14,r9
	jge LB_3163
	JZ_SPC BYTE [r13+8+r14], LB_3161
LB_3163
	call GRM_241
	cmp BYTE [r8+6],0
	jnz LB_3166
	jmp LB_3167
LB_3166:
	jmp LB_3164
LB_3167:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a43◂ [ a2◂ [ a29◂ [ a17◂ [ ]{| l |}]]] ) ⊢ 9'(= a43◂ [ a2◂ [ a29◂ [ a17◂ [ ]{| l |}]]] )
; .mov_ptn 2'(= a43◂ [ a2◂ [ a29◂ [ a17◂ [ ]{| l |}]]] ) ⊢ 9'(= a43◂ [ a2◂ [ a29◂ [ a17◂ [ ]{| l |}]]] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_3165
LB_3164:
	add rsp,8
	jmp LB_3144
LB_3165:
	jmp LB_3169
LB_3168:
	add r14,1 
LB_3169:
	cmp r14,r9
	jge LB_3170
	JZ_SPC BYTE [r13+8+r14], LB_3168
LB_3170
	call GRM_237
	cmp BYTE [r8+6],0
	jnz LB_3173
	jmp LB_3174
LB_3173:
	jmp LB_3171
LB_3174:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a43◂ [ a25◂ [ a17◂ [ ]{| l |}]] ) ⊢ 10'(= a43◂ [ a25◂ [ a17◂ [ ]{| l |}]] )
; .mov_ptn 2'(= a43◂ [ a25◂ [ a17◂ [ ]{| l |}]] ) ⊢ 10'(= a43◂ [ a25◂ [ a17◂ [ ]{| l |}]] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_3172
LB_3171:
	add rsp,16
	jmp LB_3144
LB_3172:
	jmp LB_3176
LB_3175:
	add r14,1 
LB_3176:
	cmp r14,r9
	jge LB_3177
	JZ_SPC BYTE [r13+8+r14], LB_3175
LB_3177
	call GRM_239
	cmp BYTE [r8+6],0
	jnz LB_3180
	jmp LB_3181
LB_3180:
	jmp LB_3178
LB_3181:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a43◂ [ a15◂ [ *{ a2◂ [ a29◂ [ a17◂ [ ]{| l |}]]a28◂ [ a17◂ [ ]{| l |}]}]] ) ⊢ 11'(= a43◂ [ a15◂ [ *{ a2◂ [ a29◂ [ a17◂ [ ]{| l |}]]a28◂ [ a17◂ [ ]{| l |}]}]] )
; .mov_ptn 2'(= a43◂ [ a15◂ [ *{ a2◂ [ a29◂ [ a17◂ [ ]{| l |}]]a28◂ [ a17◂ [ ]{| l |}]}]] ) ⊢ 11'(= a43◂ [ a15◂ [ *{ a2◂ [ a29◂ [ a17◂ [ ]{| l |}]]a28◂ [ a17◂ [ ]{| l |}]}]] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_3179
LB_3178:
	add rsp,24
	jmp LB_3144
LB_3179:
	mov QWORD [rsp+8*4],r14
	mov r13,QWORD [rsp+16+8*4]
	mov r14,QWORD [rsp+8*4]
	jmp LB_3182
LB_3182
; #197 { 9'(= a43◂ [ a2◂ [ a29◂ [ a17◂ [ ]{| l |}]]] ) 10'(= a43◂ [ a25◂ [ a17◂ [ ]{| l |}]] ) } ⊢ 2'(= a43◂ [ *{ a2◂ [ a29◂ [ a17◂ [ ]{| l |}]]a25◂ [ a17◂ [ ]{| l |}]}] )
	sub rsp,16
	mov QWORD [rsp+8*0],r13
	mov QWORD [rsp+8*1],r14
; .mov_ptn2 { 9'(= a43◂ [ a2◂ [ a29◂ [ a17◂ [ ]{| l |}]]] ) 10'(= a43◂ [ a25◂ [ a17◂ [ ]{| l |}]] ) } ⊢ { 0'(= a43◂ [ a2◂ [ a29◂ [ a17◂ [ ]{| l |}]]] ) 1'(= a43◂ [ a25◂ [ a17◂ [ ]{| l |}]] ) }
; .mov_ptn 10'(= a43◂ [ a25◂ [ a17◂ [ ]{| l |}]] ) ⊢ 1'(= a43◂ [ a25◂ [ a17◂ [ ]{| l |}]] )
	mov rax,QWORD [rsp-8+8*4]
	mov r14,rax
; .mov_ptn 9'(= a43◂ [ a2◂ [ a29◂ [ a17◂ [ ]{| l |}]]] ) ⊢ 0'(= a43◂ [ a2◂ [ a29◂ [ a17◂ [ ]{| l |}]]] )
	mov rax,QWORD [rsp-8+8*5]
	mov r13,rax
	call LB_3139
	mov r14,QWORD [rsp-8+8*2]
	mov r8,r13
	mov r13,QWORD [rsp-8+8*1]
	add rsp,16
; #197 { 2'(= a43◂ [ *{ a2◂ [ a29◂ [ a17◂ [ ]{| l |}]]a25◂ [ a17◂ [ ]{| l |}]}] ) 11'(= a43◂ [ a15◂ [ *{ a2◂ [ a29◂ [ a17◂ [ ]{| l |}]]a28◂ [ a17◂ [ ]{| l |}]}]] ) } ⊢ 2'(= a43◂ [ *{ *{ a2◂ [ a29◂ [ a17◂ [ ]{| l |}]]a25◂ [ a17◂ [ ]{| l |}]}a15◂ [ *{ a2◂ [ a29◂ [ a17◂ [ ]{| l |}]]a28◂ [ a17◂ [ ]{| l |}]}]}] )
	sub rsp,16
	mov QWORD [rsp+8*0],r13
	mov QWORD [rsp+8*1],r14
; .mov_ptn2 { 2'(= a43◂ [ *{ a2◂ [ a29◂ [ a17◂ [ ]{| l |}]]a25◂ [ a17◂ [ ]{| l |}]}] ) 11'(= a43◂ [ a15◂ [ *{ a2◂ [ a29◂ [ a17◂ [ ]{| l |}]]a28◂ [ a17◂ [ ]{| l |}]}]] ) } ⊢ { 0'(= a43◂ [ *{ a2◂ [ a29◂ [ a17◂ [ ]{| l |}]]a25◂ [ a17◂ [ ]{| l |}]}] ) 1'(= a43◂ [ a15◂ [ *{ a2◂ [ a29◂ [ a17◂ [ ]{| l |}]]a28◂ [ a17◂ [ ]{| l |}]}]] ) }
; .mov_ptn 11'(= a43◂ [ a15◂ [ *{ a2◂ [ a29◂ [ a17◂ [ ]{| l |}]]a28◂ [ a17◂ [ ]{| l |}]}]] ) ⊢ 1'(= a43◂ [ a15◂ [ *{ a2◂ [ a29◂ [ a17◂ [ ]{| l |}]]a28◂ [ a17◂ [ ]{| l |}]}]] )
	mov rax,QWORD [rsp-8+8*3]
	mov r14,rax
; .mov_ptn 2'(= a43◂ [ *{ a2◂ [ a29◂ [ a17◂ [ ]{| l |}]]a25◂ [ a17◂ [ ]{| l |}]}] ) ⊢ 0'(= a43◂ [ *{ a2◂ [ a29◂ [ a17◂ [ ]{| l |}]]a25◂ [ a17◂ [ ]{| l |}]}] )
	mov rax,r8
	mov r13,rax
	call LB_3184
	mov r14,QWORD [rsp-8+8*2]
	mov r8,r13
	mov r13,QWORD [rsp-8+8*1]
	add rsp,40
;; ? 2'(= a43◂ [ *{ *{ a2◂ [ a29◂ [ a17◂ [ ]{| l |}]]a25◂ [ a17◂ [ ]{| l |}]}a15◂ [ *{ a2◂ [ a29◂ [ a17◂ [ ]{| l |}]]a28◂ [ a17◂ [ ]{| l |}]}]}] ) ⊢ 0(<2)◂{ { 4'(= a2◂ [ a29◂ [ a17◂ [ ]{| l |}]] ) 5'(= a25◂ [ a17◂ [ ]{| l |}] ) } 6'(= a15◂ [ *{ a2◂ [ a29◂ [ a17◂ [ ]{| l |}]]a28◂ [ a17◂ [ ]{| l |}]}] ) }
	mov rdi,r8
	cmp BYTE [rdi+6],0
	jnz LB_3188
	mov r9, QWORD [r8+8]
	mov r10, QWORD [r9+8]
	mov r11, QWORD [r9+16]
	mov QWORD [GBG_VCT+8*0],r9
	mov rcx, QWORD [r8+16]
	mov QWORD [GBG_VCT+8*1],r8
	mov rdi,QWORD [GBG_VCT+8*1]
	FREE_RCD 2,rdi
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_RCD 2,rdi
; #119 5'(= a25◂ [ a17◂ [ ]{| l |}] ) ⊢ 2(<3)◂5'(= a25◂ [ a17◂ [ ]{| l |}] )
; #53 { { 4'(= a2◂ [ a29◂ [ a17◂ [ ]{| l |}]] ) 2(<3)◂5'(= a25◂ [ a17◂ [ ]{| l |}] ) } 6'(= a15◂ [ *{ a2◂ [ a29◂ [ a17◂ [ ]{| l |}]]a28◂ [ a17◂ [ ]{| l |}]}] ) } ⊢ 0(<2)◂{ { 4'(= a2◂ [ a29◂ [ a17◂ [ ]{| l |}]] ) 2(<3)◂5'(= a25◂ [ a17◂ [ ]{| l |}] ) } 6'(= a15◂ [ *{ a2◂ [ a29◂ [ a17◂ [ ]{| l |}]]a28◂ [ a17◂ [ ]{| l |}]}] ) }
; #196 0(<2)◂{ { 4'(= a2◂ [ a29◂ [ a17◂ [ ]{| l |}]] ) 2(<3)◂5'(= a25◂ [ a17◂ [ ]{| l |}] ) } 6'(= a15◂ [ *{ a2◂ [ a29◂ [ a17◂ [ ]{| l |}]]a28◂ [ a17◂ [ ]{| l |}]}] ) } ⊢ 0(<2)◂0(<2)◂{ { 4'(= a2◂ [ a29◂ [ a17◂ [ ]{| l |}]] ) 2(<3)◂5'(= a25◂ [ a17◂ [ ]{| l |}] ) } 6'(= a15◂ [ *{ a2◂ [ a29◂ [ a17◂ [ ]{| l |}]]a28◂ [ a17◂ [ ]{| l |}]}] ) }
; #24 0(<2)◂0(<2)◂{ { 4'(= a2◂ [ a29◂ [ a17◂ [ ]{| l |}]] ) 2(<3)◂5'(= a25◂ [ a17◂ [ ]{| l |}] ) } 6'(= a15◂ [ *{ a2◂ [ a29◂ [ a17◂ [ ]{| l |}]]a28◂ [ a17◂ [ ]{| l |}]}] ) } ⊢ 0(<2)◂0(<2)◂0(<2)◂{ { 4'(= a2◂ [ a29◂ [ a17◂ [ ]{| l |}]] ) 2(<3)◂5'(= a25◂ [ a17◂ [ ]{| l |}] ) } 6'(= a15◂ [ *{ a2◂ [ a29◂ [ a17◂ [ ]{| l |}]]a28◂ [ a17◂ [ ]{| l |}]}] ) }
; ∎ 0(<2)◂0(<2)◂0(<2)◂{ { 4'(= a2◂ [ a29◂ [ a17◂ [ ]{| l |}]] ) 2(<3)◂5'(= a25◂ [ a17◂ [ ]{| l |}] ) } 6'(= a15◂ [ *{ a2◂ [ a29◂ [ a17◂ [ ]{| l |}]]a28◂ [ a17◂ [ ]{| l |}]}] ) }
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 8'(= a43◂ [ *{ }] )
	mov rdi,QWORD [rsp-8+8*1]
	C_PUSH_REGS
	mov r8,rdi
	call LB_1706
	C_POP_REGS
; .mov_ptn2 0(<2)◂0(<2)◂0(<2)◂{ { 4'(= a2◂ [ a29◂ [ a17◂ [ ]{| l |}]] ) 2(<3)◂5'(= a25◂ [ a17◂ [ ]{| l |}] ) } 6'(= a15◂ [ *{ a2◂ [ a29◂ [ a17◂ [ ]{| l |}]]a28◂ [ a17◂ [ ]{| l |}]}] ) } ⊢ 2'(= a3◂ [ a43◂ [ a15◂ [ *{ a2◂ [ a29◂ [ a17◂ [ ]{| l |}]]a28◂ [ a17◂ [ ]{| l |}]}]]] )
; .mov_ptn 0(<2)◂0(<2)◂0(<2)◂{ { 4'(= a2◂ [ a29◂ [ a17◂ [ ]{| l |}]] ) 2(<3)◂5'(= a25◂ [ a17◂ [ ]{| l |}] ) } 6'(= a15◂ [ *{ a2◂ [ a29◂ [ a17◂ [ ]{| l |}]]a28◂ [ a17◂ [ ]{| l |}]}] ) } ⊢ 2'(= a3◂ [ a43◂ [ a15◂ [ *{ a2◂ [ a29◂ [ a17◂ [ ]{| l |}]]a28◂ [ a17◂ [ ]{| l |}]}]]] )
	ALC_RCD 2, rax
	mov r13,rax
	ALC_RCD 2, rax
	mov r14,rax
	mov rax,r10
	mov QWORD [r14+8+8*0],rax
	mov rax,r11
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],2
	mov QWORD [rax+8],rdi
	mov QWORD [r14+8+8*1],rax
	mov rax,r14
	mov QWORD [r13+8+8*0],rax
	mov rax,rcx
	mov QWORD [r13+8+8*1],rax
	mov rax,r13
	mov BYTE [rax+6],0
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,8
	jmp LB_3183
LB_3188:
;; ?. 2'(= a43◂ [ *{ *{ a2◂ [ a29◂ [ a17◂ [ ]{| l |}]]a25◂ [ a17◂ [ ]{| l |}]}a15◂ [ *{ a2◂ [ a29◂ [ a17◂ [ ]{| l |}]]a28◂ [ a17◂ [ ]{| l |}]}]}] ) ⊢ 1(<2)◂3'(= a2◂ [ *{ rr{| l |}}] )
	mov QWORD [GBG_VCT+8*0],rdi
	mov r9,QWORD [rdi+8]
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_LN rdi
; #195 3'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 1(<2)◂3'(= a2◂ [ *{ rr{| l |}}] )
; #24 1(<2)◂3'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 0(<2)◂1(<2)◂3'(= a2◂ [ *{ rr{| l |}}] )
; ∎ 0(<2)◂1(<2)◂3'(= a2◂ [ *{ rr{| l |}}] )
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 8'(= a43◂ [ *{ }] )
	mov rdi,QWORD [rsp-8+8*1]
	C_PUSH_REGS
	mov r8,rdi
	call LB_1706
	C_POP_REGS
; .mov_ptn2 0(<2)◂1(<2)◂3'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 2'(= a3◂ [ a43◂ [ a15◂ [ *{ a2◂ [ a29◂ [ a17◂ [ ]{| l |}]]a28◂ [ a17◂ [ ]{| l |}]}]]] )
; .mov_ptn 0(<2)◂1(<2)◂3'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 2'(= a3◂ [ a43◂ [ a15◂ [ *{ a2◂ [ a29◂ [ a17◂ [ ]{| l |}]]a28◂ [ a17◂ [ ]{| l |}]}]]] )
	mov rax,r9
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],1
	mov QWORD [rax+8],rdi
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,8
	jmp LB_3183
LB_3183:
	cmp BYTE [r8+6],0
	jnz LB_3144
	POP_GRM_SCC
	ret
LB_3144:
	POP_GRM_FAIL 
	ret
ETR_240:
	mov r9,0x0000_ffff_ffff_ffff
	and r9,[r13]
	call GRM_240
	ret
GRM_240:
	PUSH_GRM
	jmp LB_3191
LB_3190:
	add r14,1 
LB_3191:
	cmp r14,r9
	jge LB_3192
	JZ_LINE_SPC BYTE [r13+8+r14], LB_3190
LB_3192
	call GRM_219
	cmp BYTE [r8+6],0
	jnz LB_3195
	jmp LB_3196
LB_3195:
	jmp LB_3193
LB_3196:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a43◂ [ *{ }] ) ⊢ 8'(= a43◂ [ *{ }] )
; .mov_ptn 2'(= a43◂ [ *{ }] ) ⊢ 8'(= a43◂ [ *{ }] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_3194
LB_3193:
	add rsp,0
	jmp LB_3189
LB_3194:
	jmp LB_3198
LB_3197:
	add r14,1 
LB_3198:
	cmp r14,r9
	jge LB_3199
	JZ_LINE_SPC BYTE [r13+8+r14], LB_3197
LB_3199
	lea rax,[r14+4]
	cmp rax,r9
	jg LB_3202
	jmp LB_3203
LB_3202:
	mov r8,unt_1
	jmp LB_3200
LB_3203:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],226
	jnz LB_3204
	cmp BYTE [rdi+1],136
	jnz LB_3204
	cmp BYTE [rdi+2],144
	jnz LB_3204
	cmp BYTE [rdi+3],46
	jnz LB_3204
	jmp LB_3205
LB_3204:
	mov r8,unt_1
	jmp LB_3200
LB_3205:
	add r14,4
	jmp LB_3201
LB_3200:
	add rsp,8
	jmp LB_3189
LB_3201:
	jmp LB_3207
LB_3206:
	add r14,1 
LB_3207:
	cmp r14,r9
	jge LB_3208
	JZ_LINE_SPC BYTE [r13+8+r14], LB_3206
LB_3208
	call GRM_200
	cmp BYTE [r8+6],0
	jnz LB_3211
	jmp LB_3212
LB_3211:
	jmp LB_3209
LB_3212:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a16◂ [ a22◂ [ a17◂ [ ]{| l |}]] ) ⊢ 9'(= a16◂ [ a22◂ [ a17◂ [ ]{| l |}]] )
; .mov_ptn 2'(= a16◂ [ a22◂ [ a17◂ [ ]{| l |}]] ) ⊢ 9'(= a16◂ [ a22◂ [ a17◂ [ ]{| l |}]] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_3210
LB_3209:
	add rsp,8
	POP_GRM_FAIL
	ret
LB_3210:
	jmp LB_3214
LB_3213:
	add r14,1 
LB_3214:
	cmp r14,r9
	jge LB_3215
	JZ_LINE_SPC BYTE [r13+8+r14], LB_3213
LB_3215
	call GRM_244
	cmp BYTE [r8+6],0
	jnz LB_3218
	jmp LB_3219
LB_3218:
	jmp LB_3216
LB_3219:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a43◂ [ a2◂ [ a29◂ [ a17◂ [ ]{| l |}]]] ) ⊢ 10'(= a43◂ [ a2◂ [ a29◂ [ a17◂ [ ]{| l |}]]] )
; .mov_ptn 2'(= a43◂ [ a2◂ [ a29◂ [ a17◂ [ ]{| l |}]]] ) ⊢ 10'(= a43◂ [ a2◂ [ a29◂ [ a17◂ [ ]{| l |}]]] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_3217
LB_3216:
	add rsp,16
	POP_GRM_FAIL
	ret
LB_3217:
	jmp LB_3221
LB_3220:
	add r14,1 
LB_3221:
	cmp r14,r9
	jge LB_3222
	JZ_LINE_SPC BYTE [r13+8+r14], LB_3220
LB_3222
	call GRM_237
	cmp BYTE [r8+6],0
	jnz LB_3225
	jmp LB_3226
LB_3225:
	jmp LB_3223
LB_3226:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a43◂ [ a25◂ [ a17◂ [ ]{| l |}]] ) ⊢ 11'(= a43◂ [ a25◂ [ a17◂ [ ]{| l |}]] )
; .mov_ptn 2'(= a43◂ [ a25◂ [ a17◂ [ ]{| l |}]] ) ⊢ 11'(= a43◂ [ a25◂ [ a17◂ [ ]{| l |}]] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_3224
LB_3223:
	add rsp,24
	POP_GRM_FAIL
	ret
LB_3224:
	mov QWORD [rsp+8*4],r14
	mov r13,QWORD [rsp+16+8*4]
	mov r14,QWORD [rsp+8*4]
	jmp LB_3227
LB_3227
; #197 { 10'(= a43◂ [ a2◂ [ a29◂ [ a17◂ [ ]{| l |}]]] ) 11'(= a43◂ [ a25◂ [ a17◂ [ ]{| l |}]] ) } ⊢ 2'(= a43◂ [ *{ a2◂ [ a29◂ [ a17◂ [ ]{| l |}]]a25◂ [ a17◂ [ ]{| l |}]}] )
	sub rsp,16
	mov QWORD [rsp+8*0],r13
	mov QWORD [rsp+8*1],r14
; .mov_ptn2 { 10'(= a43◂ [ a2◂ [ a29◂ [ a17◂ [ ]{| l |}]]] ) 11'(= a43◂ [ a25◂ [ a17◂ [ ]{| l |}]] ) } ⊢ { 0'(= a43◂ [ a2◂ [ a29◂ [ a17◂ [ ]{| l |}]]] ) 1'(= a43◂ [ a25◂ [ a17◂ [ ]{| l |}]] ) }
; .mov_ptn 11'(= a43◂ [ a25◂ [ a17◂ [ ]{| l |}]] ) ⊢ 1'(= a43◂ [ a25◂ [ a17◂ [ ]{| l |}]] )
	mov rax,QWORD [rsp-8+8*3]
	mov r14,rax
; .mov_ptn 10'(= a43◂ [ a2◂ [ a29◂ [ a17◂ [ ]{| l |}]]] ) ⊢ 0'(= a43◂ [ a2◂ [ a29◂ [ a17◂ [ ]{| l |}]]] )
	mov rax,QWORD [rsp-8+8*4]
	mov r13,rax
	call LB_3139
	mov r14,QWORD [rsp-8+8*2]
	mov r8,r13
	mov r13,QWORD [rsp-8+8*1]
	add rsp,32
;; ? 2'(= a43◂ [ *{ a2◂ [ a29◂ [ a17◂ [ ]{| l |}]]a25◂ [ a17◂ [ ]{| l |}]}] ) ⊢ 0(<2)◂{ 3'(= a2◂ [ a29◂ [ a17◂ [ ]{| l |}]] ) 4'(= a25◂ [ a17◂ [ ]{| l |}] ) }
	mov rdi,r8
	cmp BYTE [rdi+6],0
	jnz LB_3229
	mov r9, QWORD [r8+8]
	mov r10, QWORD [r8+16]
	mov QWORD [GBG_VCT+8*0],r8
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_RCD 2,rdi
; #119 4'(= a25◂ [ a17◂ [ ]{| l |}] ) ⊢ 2(<3)◂4'(= a25◂ [ a17◂ [ ]{| l |}] )
; #52 { 9'(= a16◂ [ a22◂ [ a17◂ [ ]{| l |}]] ) 3'(= a2◂ [ a29◂ [ a17◂ [ ]{| l |}]] ) 2(<3)◂4'(= a25◂ [ a17◂ [ ]{| l |}] ) } ⊢ 1(<2)◂{ 9'(= a16◂ [ a22◂ [ a17◂ [ ]{| l |}]] ) 3'(= a2◂ [ a29◂ [ a17◂ [ ]{| l |}]] ) 2(<3)◂4'(= a25◂ [ a17◂ [ ]{| l |}] ) }
; #196 1(<2)◂{ 9'(= a16◂ [ a22◂ [ a17◂ [ ]{| l |}]] ) 3'(= a2◂ [ a29◂ [ a17◂ [ ]{| l |}]] ) 2(<3)◂4'(= a25◂ [ a17◂ [ ]{| l |}] ) } ⊢ 0(<2)◂1(<2)◂{ 9'(= a16◂ [ a22◂ [ a17◂ [ ]{| l |}]] ) 3'(= a2◂ [ a29◂ [ a17◂ [ ]{| l |}]] ) 2(<3)◂4'(= a25◂ [ a17◂ [ ]{| l |}] ) }
; #24 0(<2)◂1(<2)◂{ 9'(= a16◂ [ a22◂ [ a17◂ [ ]{| l |}]] ) 3'(= a2◂ [ a29◂ [ a17◂ [ ]{| l |}]] ) 2(<3)◂4'(= a25◂ [ a17◂ [ ]{| l |}] ) } ⊢ 0(<2)◂0(<2)◂1(<2)◂{ 9'(= a16◂ [ a22◂ [ a17◂ [ ]{| l |}]] ) 3'(= a2◂ [ a29◂ [ a17◂ [ ]{| l |}]] ) 2(<3)◂4'(= a25◂ [ a17◂ [ ]{| l |}] ) }
; ∎ 0(<2)◂0(<2)◂1(<2)◂{ 9'(= a16◂ [ a22◂ [ a17◂ [ ]{| l |}]] ) 3'(= a2◂ [ a29◂ [ a17◂ [ ]{| l |}]] ) 2(<3)◂4'(= a25◂ [ a17◂ [ ]{| l |}] ) }
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 8'(= a43◂ [ *{ }] )
	mov rdi,QWORD [rsp-8+8*2]
	C_PUSH_REGS
	mov r8,rdi
	call LB_1706
	C_POP_REGS
; .mov_ptn2 0(<2)◂0(<2)◂1(<2)◂{ 9'(= a16◂ [ a22◂ [ a17◂ [ ]{| l |}]] ) 3'(= a2◂ [ a29◂ [ a17◂ [ ]{| l |}]] ) 2(<3)◂4'(= a25◂ [ a17◂ [ ]{| l |}] ) } ⊢ 2'(= a3◂ [ a43◂ [ a15◂ [ *{ a16◂ [ a22◂ [ a17◂ [ ]{| l |}]]a2◂ [ a29◂ [ a17◂ [ ]{| l |}]]a28◂ [ a17◂ [ ]{| l |}]}]]] )
; .mov_ptn 0(<2)◂0(<2)◂1(<2)◂{ 9'(= a16◂ [ a22◂ [ a17◂ [ ]{| l |}]] ) 3'(= a2◂ [ a29◂ [ a17◂ [ ]{| l |}]] ) 2(<3)◂4'(= a25◂ [ a17◂ [ ]{| l |}] ) } ⊢ 2'(= a3◂ [ a43◂ [ a15◂ [ *{ a16◂ [ a22◂ [ a17◂ [ ]{| l |}]]a2◂ [ a29◂ [ a17◂ [ ]{| l |}]]a28◂ [ a17◂ [ ]{| l |}]}]]] )
	ALC_RCD 3, rax
	mov r13,rax
	mov rax,QWORD [rsp-8+8*1]
	mov QWORD [r13+8+8*0],rax
	mov rax,r9
	mov QWORD [r13+8+8*1],rax
	mov rax,r10
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],2
	mov QWORD [rax+8],rdi
	mov QWORD [r13+8+8*2],rax
	mov rax,r13
	mov BYTE [rax+6],1
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,16
	jmp LB_3228
LB_3229:
;; ?. 2'(= a43◂ [ *{ a2◂ [ a29◂ [ a17◂ [ ]{| l |}]]a25◂ [ a17◂ [ ]{| l |}]}] ) ⊢ 1(<2)◂3'(= a2◂ [ *{ rr{| l |}}] )
	mov QWORD [GBG_VCT+8*0],rdi
	mov r9,QWORD [rdi+8]
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_LN rdi
; #195 3'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 1(<2)◂3'(= a2◂ [ *{ rr{| l |}}] )
; #24 1(<2)◂3'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 0(<2)◂1(<2)◂3'(= a2◂ [ *{ rr{| l |}}] )
; ∎ 0(<2)◂1(<2)◂3'(= a2◂ [ *{ rr{| l |}}] )
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 9'(= a16◂ [ a22◂ [ a17◂ [ ]{| l |}]] )
	mov rdi,QWORD [rsp-8+8*1]
	C_PUSH_REGS
	mov r8,rdi
	call LB_376
	C_POP_REGS
; .dlt.ptn 8'(= a43◂ [ *{ }] )
	mov rdi,QWORD [rsp-8+8*2]
	C_PUSH_REGS
	mov r8,rdi
	call LB_1706
	C_POP_REGS
; .mov_ptn2 0(<2)◂1(<2)◂3'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 2'(= a3◂ [ a43◂ [ a15◂ [ *{ a16◂ [ a22◂ [ a17◂ [ ]{| l |}]]a2◂ [ a29◂ [ a17◂ [ ]{| l |}]]a28◂ [ a17◂ [ ]{| l |}]}]]] )
; .mov_ptn 0(<2)◂1(<2)◂3'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 2'(= a3◂ [ a43◂ [ a15◂ [ *{ a16◂ [ a22◂ [ a17◂ [ ]{| l |}]]a2◂ [ a29◂ [ a17◂ [ ]{| l |}]]a28◂ [ a17◂ [ ]{| l |}]}]]] )
	mov rax,r9
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],1
	mov QWORD [rax+8],rdi
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,16
	jmp LB_3228
LB_3228:
	cmp BYTE [r8+6],0
	jnz LB_3189
	POP_GRM_SCC
	ret
LB_3189:
	RB_GRM
	jmp LB_3232
LB_3231:
	add r14,1 
LB_3232:
	cmp r14,r9
	jge LB_3233
	JZ_LINE_SPC BYTE [r13+8+r14], LB_3231
LB_3233
	call GRM_219
	cmp BYTE [r8+6],0
	jnz LB_3236
	jmp LB_3237
LB_3236:
	jmp LB_3234
LB_3237:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a43◂ [ *{ }] ) ⊢ 8'(= a43◂ [ *{ }] )
; .mov_ptn 2'(= a43◂ [ *{ }] ) ⊢ 8'(= a43◂ [ *{ }] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_3235
LB_3234:
	add rsp,0
	jmp LB_3230
LB_3235:
	jmp LB_3239
LB_3238:
	add r14,1 
LB_3239:
	cmp r14,r9
	jge LB_3240
	JZ_LINE_SPC BYTE [r13+8+r14], LB_3238
LB_3240
	lea rax,[r14+3]
	cmp rax,r9
	jg LB_3243
	jmp LB_3244
LB_3243:
	mov r8,unt_1
	jmp LB_3241
LB_3244:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],226
	jnz LB_3245
	cmp BYTE [rdi+1],136
	jnz LB_3245
	cmp BYTE [rdi+2],144
	jnz LB_3245
	jmp LB_3246
LB_3245:
	mov r8,unt_1
	jmp LB_3241
LB_3246:
	add r14,3
	jmp LB_3242
LB_3241:
	add rsp,8
	jmp LB_3230
LB_3242:
	jmp LB_3248
LB_3247:
	add r14,1 
LB_3248:
	cmp r14,r9
	jge LB_3249
	JZ_LINE_SPC BYTE [r13+8+r14], LB_3247
LB_3249
	call GRM_200
	cmp BYTE [r8+6],0
	jnz LB_3252
	jmp LB_3253
LB_3252:
	jmp LB_3250
LB_3253:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a16◂ [ a22◂ [ a17◂ [ ]{| l |}]] ) ⊢ 9'(= a16◂ [ a22◂ [ a17◂ [ ]{| l |}]] )
; .mov_ptn 2'(= a16◂ [ a22◂ [ a17◂ [ ]{| l |}]] ) ⊢ 9'(= a16◂ [ a22◂ [ a17◂ [ ]{| l |}]] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_3251
LB_3250:
	add rsp,8
	jmp LB_3230
LB_3251:
	jmp LB_3255
LB_3254:
	add r14,1 
LB_3255:
	cmp r14,r9
	jge LB_3256
	JZ_LINE_SPC BYTE [r13+8+r14], LB_3254
LB_3256
	call GRM_244
	cmp BYTE [r8+6],0
	jnz LB_3259
	jmp LB_3260
LB_3259:
	jmp LB_3257
LB_3260:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a43◂ [ a2◂ [ a29◂ [ a17◂ [ ]{| l |}]]] ) ⊢ 10'(= a43◂ [ a2◂ [ a29◂ [ a17◂ [ ]{| l |}]]] )
; .mov_ptn 2'(= a43◂ [ a2◂ [ a29◂ [ a17◂ [ ]{| l |}]]] ) ⊢ 10'(= a43◂ [ a2◂ [ a29◂ [ a17◂ [ ]{| l |}]]] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_3258
LB_3257:
	add rsp,16
	jmp LB_3230
LB_3258:
	jmp LB_3262
LB_3261:
	add r14,1 
LB_3262:
	cmp r14,r9
	jge LB_3263
	JZ_LINE_SPC BYTE [r13+8+r14], LB_3261
LB_3263
	call GRM_237
	cmp BYTE [r8+6],0
	jnz LB_3266
	jmp LB_3267
LB_3266:
	jmp LB_3264
LB_3267:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a43◂ [ a25◂ [ a17◂ [ ]{| l |}]] ) ⊢ 11'(= a43◂ [ a25◂ [ a17◂ [ ]{| l |}]] )
; .mov_ptn 2'(= a43◂ [ a25◂ [ a17◂ [ ]{| l |}]] ) ⊢ 11'(= a43◂ [ a25◂ [ a17◂ [ ]{| l |}]] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_3265
LB_3264:
	add rsp,24
	jmp LB_3230
LB_3265:
	jmp LB_3269
LB_3268:
	add r14,1 
LB_3269:
	cmp r14,r9
	jge LB_3270
	JZ_LINE_SPC BYTE [r13+8+r14], LB_3268
LB_3270
	call GRM_240
	cmp BYTE [r8+6],0
	jnz LB_3273
	jmp LB_3274
LB_3273:
	jmp LB_3271
LB_3274:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a43◂ [ a15◂ [ *{ a16◂ [ a22◂ [ a17◂ [ ]{| l |}]]a2◂ [ a29◂ [ a17◂ [ ]{| l |}]]a28◂ [ a17◂ [ ]{| l |}]}]] ) ⊢ 12'(= a43◂ [ a15◂ [ *{ a16◂ [ a22◂ [ a17◂ [ ]{| l |}]]a2◂ [ a29◂ [ a17◂ [ ]{| l |}]]a28◂ [ a17◂ [ ]{| l |}]}]] )
; .mov_ptn 2'(= a43◂ [ a15◂ [ *{ a16◂ [ a22◂ [ a17◂ [ ]{| l |}]]a2◂ [ a29◂ [ a17◂ [ ]{| l |}]]a28◂ [ a17◂ [ ]{| l |}]}]] ) ⊢ 12'(= a43◂ [ a15◂ [ *{ a16◂ [ a22◂ [ a17◂ [ ]{| l |}]]a2◂ [ a29◂ [ a17◂ [ ]{| l |}]]a28◂ [ a17◂ [ ]{| l |}]}]] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_3272
LB_3271:
	add rsp,32
	jmp LB_3230
LB_3272:
	mov QWORD [rsp+8*5],r14
	mov r13,QWORD [rsp+16+8*5]
	mov r14,QWORD [rsp+8*5]
	jmp LB_3275
LB_3275
; #197 { 10'(= a43◂ [ a2◂ [ a29◂ [ a17◂ [ ]{| l |}]]] ) 11'(= a43◂ [ a25◂ [ a17◂ [ ]{| l |}]] ) } ⊢ 2'(= a43◂ [ *{ a2◂ [ a29◂ [ a17◂ [ ]{| l |}]]a25◂ [ a17◂ [ ]{| l |}]}] )
	sub rsp,16
	mov QWORD [rsp+8*0],r13
	mov QWORD [rsp+8*1],r14
; .mov_ptn2 { 10'(= a43◂ [ a2◂ [ a29◂ [ a17◂ [ ]{| l |}]]] ) 11'(= a43◂ [ a25◂ [ a17◂ [ ]{| l |}]] ) } ⊢ { 0'(= a43◂ [ a2◂ [ a29◂ [ a17◂ [ ]{| l |}]]] ) 1'(= a43◂ [ a25◂ [ a17◂ [ ]{| l |}]] ) }
; .mov_ptn 11'(= a43◂ [ a25◂ [ a17◂ [ ]{| l |}]] ) ⊢ 1'(= a43◂ [ a25◂ [ a17◂ [ ]{| l |}]] )
	mov rax,QWORD [rsp-8+8*4]
	mov r14,rax
; .mov_ptn 10'(= a43◂ [ a2◂ [ a29◂ [ a17◂ [ ]{| l |}]]] ) ⊢ 0'(= a43◂ [ a2◂ [ a29◂ [ a17◂ [ ]{| l |}]]] )
	mov rax,QWORD [rsp-8+8*5]
	mov r13,rax
	call LB_3139
	mov r14,QWORD [rsp-8+8*2]
	mov r8,r13
	mov r13,QWORD [rsp-8+8*1]
	add rsp,16
; #197 { 2'(= a43◂ [ *{ a2◂ [ a29◂ [ a17◂ [ ]{| l |}]]a25◂ [ a17◂ [ ]{| l |}]}] ) 12'(= a43◂ [ a15◂ [ *{ a16◂ [ a22◂ [ a17◂ [ ]{| l |}]]a2◂ [ a29◂ [ a17◂ [ ]{| l |}]]a28◂ [ a17◂ [ ]{| l |}]}]] ) } ⊢ 2'(= a43◂ [ *{ *{ a2◂ [ a29◂ [ a17◂ [ ]{| l |}]]a25◂ [ a17◂ [ ]{| l |}]}a15◂ [ *{ a16◂ [ a22◂ [ a17◂ [ ]{| l |}]]a2◂ [ a29◂ [ a17◂ [ ]{| l |}]]a28◂ [ a17◂ [ ]{| l |}]}]}] )
	sub rsp,16
	mov QWORD [rsp+8*0],r13
	mov QWORD [rsp+8*1],r14
; .mov_ptn2 { 2'(= a43◂ [ *{ a2◂ [ a29◂ [ a17◂ [ ]{| l |}]]a25◂ [ a17◂ [ ]{| l |}]}] ) 12'(= a43◂ [ a15◂ [ *{ a16◂ [ a22◂ [ a17◂ [ ]{| l |}]]a2◂ [ a29◂ [ a17◂ [ ]{| l |}]]a28◂ [ a17◂ [ ]{| l |}]}]] ) } ⊢ { 0'(= a43◂ [ *{ a2◂ [ a29◂ [ a17◂ [ ]{| l |}]]a25◂ [ a17◂ [ ]{| l |}]}] ) 1'(= a43◂ [ a15◂ [ *{ a16◂ [ a22◂ [ a17◂ [ ]{| l |}]]a2◂ [ a29◂ [ a17◂ [ ]{| l |}]]a28◂ [ a17◂ [ ]{| l |}]}]] ) }
; .mov_ptn 12'(= a43◂ [ a15◂ [ *{ a16◂ [ a22◂ [ a17◂ [ ]{| l |}]]a2◂ [ a29◂ [ a17◂ [ ]{| l |}]]a28◂ [ a17◂ [ ]{| l |}]}]] ) ⊢ 1'(= a43◂ [ a15◂ [ *{ a16◂ [ a22◂ [ a17◂ [ ]{| l |}]]a2◂ [ a29◂ [ a17◂ [ ]{| l |}]]a28◂ [ a17◂ [ ]{| l |}]}]] )
	mov rax,QWORD [rsp-8+8*3]
	mov r14,rax
; .mov_ptn 2'(= a43◂ [ *{ a2◂ [ a29◂ [ a17◂ [ ]{| l |}]]a25◂ [ a17◂ [ ]{| l |}]}] ) ⊢ 0'(= a43◂ [ *{ a2◂ [ a29◂ [ a17◂ [ ]{| l |}]]a25◂ [ a17◂ [ ]{| l |}]}] )
	mov rax,r8
	mov r13,rax
	call LB_3277
	mov r14,QWORD [rsp-8+8*2]
	mov r8,r13
	mov r13,QWORD [rsp-8+8*1]
	add rsp,40
;; ? 2'(= a43◂ [ *{ *{ a2◂ [ a29◂ [ a17◂ [ ]{| l |}]]a25◂ [ a17◂ [ ]{| l |}]}a15◂ [ *{ a16◂ [ a22◂ [ a17◂ [ ]{| l |}]]a2◂ [ a29◂ [ a17◂ [ ]{| l |}]]a28◂ [ a17◂ [ ]{| l |}]}]}] ) ⊢ 0(<2)◂{ { 4'(= a2◂ [ a29◂ [ a17◂ [ ]{| l |}]] ) 5'(= a25◂ [ a17◂ [ ]{| l |}] ) } 6'(= a15◂ [ *{ a16◂ [ a22◂ [ a17◂ [ ]{| l |}]]a2◂ [ a29◂ [ a17◂ [ ]{| l |}]]a28◂ [ a17◂ [ ]{| l |}]}] ) }
	mov rdi,r8
	cmp BYTE [rdi+6],0
	jnz LB_3281
	mov r9, QWORD [r8+8]
	mov r10, QWORD [r9+8]
	mov r11, QWORD [r9+16]
	mov QWORD [GBG_VCT+8*0],r9
	mov rcx, QWORD [r8+16]
	mov QWORD [GBG_VCT+8*1],r8
	mov rdi,QWORD [GBG_VCT+8*1]
	FREE_RCD 2,rdi
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_RCD 2,rdi
; #119 5'(= a25◂ [ a17◂ [ ]{| l |}] ) ⊢ 2(<3)◂5'(= a25◂ [ a17◂ [ ]{| l |}] )
; #53 { { 9'(= a16◂ [ a22◂ [ a17◂ [ ]{| l |}]] ) 4'(= a2◂ [ a29◂ [ a17◂ [ ]{| l |}]] ) 2(<3)◂5'(= a25◂ [ a17◂ [ ]{| l |}] ) } 6'(= a15◂ [ *{ a16◂ [ a22◂ [ a17◂ [ ]{| l |}]]a2◂ [ a29◂ [ a17◂ [ ]{| l |}]]a28◂ [ a17◂ [ ]{| l |}]}] ) } ⊢ 0(<2)◂{ { 9'(= a16◂ [ a22◂ [ a17◂ [ ]{| l |}]] ) 4'(= a2◂ [ a29◂ [ a17◂ [ ]{| l |}]] ) 2(<3)◂5'(= a25◂ [ a17◂ [ ]{| l |}] ) } 6'(= a15◂ [ *{ a16◂ [ a22◂ [ a17◂ [ ]{| l |}]]a2◂ [ a29◂ [ a17◂ [ ]{| l |}]]a28◂ [ a17◂ [ ]{| l |}]}] ) }
; #196 0(<2)◂{ { 9'(= a16◂ [ a22◂ [ a17◂ [ ]{| l |}]] ) 4'(= a2◂ [ a29◂ [ a17◂ [ ]{| l |}]] ) 2(<3)◂5'(= a25◂ [ a17◂ [ ]{| l |}] ) } 6'(= a15◂ [ *{ a16◂ [ a22◂ [ a17◂ [ ]{| l |}]]a2◂ [ a29◂ [ a17◂ [ ]{| l |}]]a28◂ [ a17◂ [ ]{| l |}]}] ) } ⊢ 0(<2)◂0(<2)◂{ { 9'(= a16◂ [ a22◂ [ a17◂ [ ]{| l |}]] ) 4'(= a2◂ [ a29◂ [ a17◂ [ ]{| l |}]] ) 2(<3)◂5'(= a25◂ [ a17◂ [ ]{| l |}] ) } 6'(= a15◂ [ *{ a16◂ [ a22◂ [ a17◂ [ ]{| l |}]]a2◂ [ a29◂ [ a17◂ [ ]{| l |}]]a28◂ [ a17◂ [ ]{| l |}]}] ) }
; #24 0(<2)◂0(<2)◂{ { 9'(= a16◂ [ a22◂ [ a17◂ [ ]{| l |}]] ) 4'(= a2◂ [ a29◂ [ a17◂ [ ]{| l |}]] ) 2(<3)◂5'(= a25◂ [ a17◂ [ ]{| l |}] ) } 6'(= a15◂ [ *{ a16◂ [ a22◂ [ a17◂ [ ]{| l |}]]a2◂ [ a29◂ [ a17◂ [ ]{| l |}]]a28◂ [ a17◂ [ ]{| l |}]}] ) } ⊢ 0(<2)◂0(<2)◂0(<2)◂{ { 9'(= a16◂ [ a22◂ [ a17◂ [ ]{| l |}]] ) 4'(= a2◂ [ a29◂ [ a17◂ [ ]{| l |}]] ) 2(<3)◂5'(= a25◂ [ a17◂ [ ]{| l |}] ) } 6'(= a15◂ [ *{ a16◂ [ a22◂ [ a17◂ [ ]{| l |}]]a2◂ [ a29◂ [ a17◂ [ ]{| l |}]]a28◂ [ a17◂ [ ]{| l |}]}] ) }
; ∎ 0(<2)◂0(<2)◂0(<2)◂{ { 9'(= a16◂ [ a22◂ [ a17◂ [ ]{| l |}]] ) 4'(= a2◂ [ a29◂ [ a17◂ [ ]{| l |}]] ) 2(<3)◂5'(= a25◂ [ a17◂ [ ]{| l |}] ) } 6'(= a15◂ [ *{ a16◂ [ a22◂ [ a17◂ [ ]{| l |}]]a2◂ [ a29◂ [ a17◂ [ ]{| l |}]]a28◂ [ a17◂ [ ]{| l |}]}] ) }
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 8'(= a43◂ [ *{ }] )
	mov rdi,QWORD [rsp-8+8*2]
	C_PUSH_REGS
	mov r8,rdi
	call LB_1706
	C_POP_REGS
; .mov_ptn2 0(<2)◂0(<2)◂0(<2)◂{ { 9'(= a16◂ [ a22◂ [ a17◂ [ ]{| l |}]] ) 4'(= a2◂ [ a29◂ [ a17◂ [ ]{| l |}]] ) 2(<3)◂5'(= a25◂ [ a17◂ [ ]{| l |}] ) } 6'(= a15◂ [ *{ a16◂ [ a22◂ [ a17◂ [ ]{| l |}]]a2◂ [ a29◂ [ a17◂ [ ]{| l |}]]a28◂ [ a17◂ [ ]{| l |}]}] ) } ⊢ 2'(= a3◂ [ a43◂ [ a15◂ [ *{ a16◂ [ a22◂ [ a17◂ [ ]{| l |}]]a2◂ [ a29◂ [ a17◂ [ ]{| l |}]]a28◂ [ a17◂ [ ]{| l |}]}]]] )
; .mov_ptn 0(<2)◂0(<2)◂0(<2)◂{ { 9'(= a16◂ [ a22◂ [ a17◂ [ ]{| l |}]] ) 4'(= a2◂ [ a29◂ [ a17◂ [ ]{| l |}]] ) 2(<3)◂5'(= a25◂ [ a17◂ [ ]{| l |}] ) } 6'(= a15◂ [ *{ a16◂ [ a22◂ [ a17◂ [ ]{| l |}]]a2◂ [ a29◂ [ a17◂ [ ]{| l |}]]a28◂ [ a17◂ [ ]{| l |}]}] ) } ⊢ 2'(= a3◂ [ a43◂ [ a15◂ [ *{ a16◂ [ a22◂ [ a17◂ [ ]{| l |}]]a2◂ [ a29◂ [ a17◂ [ ]{| l |}]]a28◂ [ a17◂ [ ]{| l |}]}]]] )
	ALC_RCD 2, rax
	mov r13,rax
	ALC_RCD 3, rax
	mov r14,rax
	mov rax,QWORD [rsp-8+8*1]
	mov QWORD [r14+8+8*0],rax
	mov rax,r10
	mov QWORD [r14+8+8*1],rax
	mov rax,r11
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],2
	mov QWORD [rax+8],rdi
	mov QWORD [r14+8+8*2],rax
	mov rax,r14
	mov QWORD [r13+8+8*0],rax
	mov rax,rcx
	mov QWORD [r13+8+8*1],rax
	mov rax,r13
	mov BYTE [rax+6],0
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,16
	jmp LB_3276
LB_3281:
;; ?. 2'(= a43◂ [ *{ *{ a2◂ [ a29◂ [ a17◂ [ ]{| l |}]]a25◂ [ a17◂ [ ]{| l |}]}a15◂ [ *{ a16◂ [ a22◂ [ a17◂ [ ]{| l |}]]a2◂ [ a29◂ [ a17◂ [ ]{| l |}]]a28◂ [ a17◂ [ ]{| l |}]}]}] ) ⊢ 1(<2)◂3'(= a2◂ [ *{ rr{| l |}}] )
	mov QWORD [GBG_VCT+8*0],rdi
	mov r9,QWORD [rdi+8]
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_LN rdi
; #195 3'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 1(<2)◂3'(= a2◂ [ *{ rr{| l |}}] )
; #24 1(<2)◂3'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 0(<2)◂1(<2)◂3'(= a2◂ [ *{ rr{| l |}}] )
; ∎ 0(<2)◂1(<2)◂3'(= a2◂ [ *{ rr{| l |}}] )
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 9'(= a16◂ [ a22◂ [ a17◂ [ ]{| l |}]] )
	mov rdi,QWORD [rsp-8+8*1]
	C_PUSH_REGS
	mov r8,rdi
	call LB_376
	C_POP_REGS
; .dlt.ptn 8'(= a43◂ [ *{ }] )
	mov rdi,QWORD [rsp-8+8*2]
	C_PUSH_REGS
	mov r8,rdi
	call LB_1706
	C_POP_REGS
; .mov_ptn2 0(<2)◂1(<2)◂3'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 2'(= a3◂ [ a43◂ [ a15◂ [ *{ a16◂ [ a22◂ [ a17◂ [ ]{| l |}]]a2◂ [ a29◂ [ a17◂ [ ]{| l |}]]a28◂ [ a17◂ [ ]{| l |}]}]]] )
; .mov_ptn 0(<2)◂1(<2)◂3'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 2'(= a3◂ [ a43◂ [ a15◂ [ *{ a16◂ [ a22◂ [ a17◂ [ ]{| l |}]]a2◂ [ a29◂ [ a17◂ [ ]{| l |}]]a28◂ [ a17◂ [ ]{| l |}]}]]] )
	mov rax,r9
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],1
	mov QWORD [rax+8],rdi
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,16
	jmp LB_3276
LB_3276:
	cmp BYTE [r8+6],0
	jnz LB_3230
	POP_GRM_SCC
	ret
LB_3230:
	POP_GRM_FAIL 
	ret
ETR_241:
	mov r9,0x0000_ffff_ffff_ffff
	and r9,[r13]
	call GRM_241
	ret
GRM_241:
	PUSH_GRM
	jmp LB_3284
LB_3283:
	add r14,1 
LB_3284:
	cmp r14,r9
	jge LB_3285
	JZ_LINE_SPC BYTE [r13+8+r14], LB_3283
LB_3285
	call GRM_242
	cmp BYTE [r8+6],0
	jnz LB_3288
	jmp LB_3289
LB_3288:
	jmp LB_3286
LB_3289:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a29◂ [ a17◂ [ ]{| l |}] ) ⊢ 8'(= a29◂ [ a17◂ [ ]{| l |}] )
; .mov_ptn 2'(= a29◂ [ a17◂ [ ]{| l |}] ) ⊢ 8'(= a29◂ [ a17◂ [ ]{| l |}] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_3287
LB_3286:
	add rsp,0
	jmp LB_3282
LB_3287:
	jmp LB_3291
LB_3290:
	add r14,1 
LB_3291:
	cmp r14,r9
	jge LB_3292
	JZ_LINE_SPC BYTE [r13+8+r14], LB_3290
LB_3292
	call GRM_243
	cmp BYTE [r8+6],0
	jnz LB_3295
	jmp LB_3296
LB_3295:
	jmp LB_3293
LB_3296:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a2◂ [ a29◂ [ a17◂ [ ]{| l |}]] ) ⊢ 9'(= a2◂ [ a29◂ [ a17◂ [ ]{| l |}]] )
; .mov_ptn 2'(= a2◂ [ a29◂ [ a17◂ [ ]{| l |}]] ) ⊢ 9'(= a2◂ [ a29◂ [ a17◂ [ ]{| l |}]] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_3294
LB_3293:
	add rsp,8
	jmp LB_3282
LB_3294:
	mov QWORD [rsp+8*2],r14
	mov r13,QWORD [rsp+16+8*2]
	mov r14,QWORD [rsp+8*2]
	jmp LB_3297
LB_3297
; #23 { 8'(= a29◂ [ a17◂ [ ]{| l |}] ) 9'(= a2◂ [ a29◂ [ a17◂ [ ]{| l |}]] ) } ⊢ 0(<2)◂{ 8'(= a29◂ [ a17◂ [ ]{| l |}] ) 9'(= a2◂ [ a29◂ [ a17◂ [ ]{| l |}]] ) }
; #196 0(<2)◂{ 8'(= a29◂ [ a17◂ [ ]{| l |}] ) 9'(= a2◂ [ a29◂ [ a17◂ [ ]{| l |}]] ) } ⊢ 0(<2)◂0(<2)◂{ 8'(= a29◂ [ a17◂ [ ]{| l |}] ) 9'(= a2◂ [ a29◂ [ a17◂ [ ]{| l |}]] ) }
; #24 0(<2)◂0(<2)◂{ 8'(= a29◂ [ a17◂ [ ]{| l |}] ) 9'(= a2◂ [ a29◂ [ a17◂ [ ]{| l |}]] ) } ⊢ 0(<2)◂0(<2)◂0(<2)◂{ 8'(= a29◂ [ a17◂ [ ]{| l |}] ) 9'(= a2◂ [ a29◂ [ a17◂ [ ]{| l |}]] ) }
; ∎ 0(<2)◂0(<2)◂0(<2)◂{ 8'(= a29◂ [ a17◂ [ ]{| l |}] ) 9'(= a2◂ [ a29◂ [ a17◂ [ ]{| l |}]] ) }
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂0(<2)◂0(<2)◂{ 8'(= a29◂ [ a17◂ [ ]{| l |}] ) 9'(= a2◂ [ a29◂ [ a17◂ [ ]{| l |}]] ) } ⊢ 2'(= a3◂ [ a43◂ [ a2◂ [ a29◂ [ a17◂ [ ]{| l |}]]]] )
; .mov_ptn 0(<2)◂0(<2)◂0(<2)◂{ 8'(= a29◂ [ a17◂ [ ]{| l |}] ) 9'(= a2◂ [ a29◂ [ a17◂ [ ]{| l |}]] ) } ⊢ 2'(= a3◂ [ a43◂ [ a2◂ [ a29◂ [ a17◂ [ ]{| l |}]]]] )
	ALC_RCD 2, rax
	mov r13,rax
	mov rax,QWORD [rsp-8+8*2]
	mov QWORD [r13+8+8*0],rax
	mov rax,QWORD [rsp-8+8*1]
	mov QWORD [r13+8+8*1],rax
	mov rax,r13
	mov BYTE [rax+6],0
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,16
	jmp LB_3298
LB_3298:
	cmp BYTE [r8+6],0
	jnz LB_3282
	POP_GRM_SCC
	ret
LB_3282:
	RB_GRM
	jmp LB_3301
LB_3300:
	add r14,1 
LB_3301:
	cmp r14,r9
	jge LB_3302
	JZ_LINE_SPC BYTE [r13+8+r14], LB_3300
LB_3302
	lea rax,[r14+1]
	cmp rax,r9
	jg LB_3305
	jmp LB_3306
LB_3305:
	mov r8,unt_1
	jmp LB_3303
LB_3306:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],46
	jnz LB_3307
	jmp LB_3308
LB_3307:
	mov r8,unt_1
	jmp LB_3303
LB_3308:
	add r14,1
	jmp LB_3304
LB_3303:
	add rsp,0
	jmp LB_3299
LB_3304:
	jmp LB_3310
LB_3309:
	add r14,1 
LB_3310:
	cmp r14,r9
	jge LB_3311
	JZ_LINE_SPC BYTE [r13+8+r14], LB_3309
LB_3311
	lea rax,[r14+1]
	cmp rax,r9
	jg LB_3314
	jmp LB_3315
LB_3314:
	mov r8,unt_1
	jmp LB_3312
LB_3315:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],10
	jnz LB_3316
	jmp LB_3317
LB_3316:
	mov r8,unt_1
	jmp LB_3312
LB_3317:
	add r14,1
	jmp LB_3313
LB_3312:
	add rsp,0
	jmp LB_3299
LB_3313:
	mov QWORD [rsp+8*0],r14
	mov r13,QWORD [rsp+16+8*0]
	mov r14,QWORD [rsp+8*0]
	jmp LB_3318
LB_3318
; #22 { } ⊢ 1(<2)◂{ }
; #196 1(<2)◂{ } ⊢ 0(<2)◂1(<2)◂{ }
; #24 0(<2)◂1(<2)◂{ } ⊢ 0(<2)◂0(<2)◂1(<2)◂{ }
; ∎ 0(<2)◂0(<2)◂1(<2)◂{ }
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂0(<2)◂1(<2)◂{ } ⊢ 2'(= a3◂ [ a43◂ [ a2◂ [ a29◂ [ a17◂ [ ]{| l |}]]]] )
; .mov_ptn 0(<2)◂0(<2)◂1(<2)◂{ } ⊢ 2'(= a3◂ [ a43◂ [ a2◂ [ a29◂ [ a17◂ [ ]{| l |}]]]] )
	mov rax,unt 
	mov rax,unt_1
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	jmp LB_3319
LB_3319:
	cmp BYTE [r8+6],0
	jnz LB_3299
	POP_GRM_SCC
	ret
LB_3299:
	RB_GRM
	jmp LB_3322
LB_3321:
	add r14,1 
LB_3322:
	cmp r14,r9
	jge LB_3323
	JZ_LINE_SPC BYTE [r13+8+r14], LB_3321
LB_3323
	call GRM_222
	cmp BYTE [r8+6],0
	jnz LB_3326
	jmp LB_3327
LB_3326:
	jmp LB_3324
LB_3327:
	sub rsp,16
; .mov_ptn2 2'(= *{ rr} ) ⊢ { 8'(= r ) 9'(= r ) }
; .mov_ptn 2'(= *{ rr} ) ⊢ { 8'(= r ) 9'(= r ) }
	mov r10, QWORD [r8+8]
	mov QWORD [rsp-8+8*2],r10
	mov r11, QWORD [r8+16]
	mov QWORD [rsp-8+8*1],r11
	mov rdi,r8
	FREE_RCD 2,rdi
	jmp LB_3325
LB_3324:
	add rsp,0
	jmp LB_3320
LB_3325:
	mov QWORD [rsp+8*2],r14
	mov r13,QWORD [rsp+16+8*2]
	mov r14,QWORD [rsp+8*2]
	jmp LB_3328
LB_3328
; $ %[ "mtc_line 0" ] ⊢ %[ "mtc_line 0" ]
; #22 { } ⊢ 1(<2)◂{ }
; #23 { { 0'(= r ) 1'(= r ) %[ "mtc_line 0" ] } 1(<2)◂{ } } ⊢ 0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "mtc_line 0" ] } 1(<2)◂{ } }
; #195 0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "mtc_line 0" ] } 1(<2)◂{ } } ⊢ 1(<2)◂0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "mtc_line 0" ] } 1(<2)◂{ } }
; #24 1(<2)◂0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "mtc_line 0" ] } 1(<2)◂{ } } ⊢ 0(<2)◂1(<2)◂0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "mtc_line 0" ] } 1(<2)◂{ } }
; ∎ 0(<2)◂1(<2)◂0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "mtc_line 0" ] } 1(<2)◂{ } }
; .dlt.ptn { 8'(= r ) 9'(= r ) }
	mov rdi,QWORD [rsp-8+8*2]
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
	mov rdi,QWORD [rsp-8+8*1]
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂1(<2)◂0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "mtc_line 0" ] } 1(<2)◂{ } } ⊢ 2'(= a3◂ [ a43◂ [ a2◂ [ a29◂ [ a17◂ [ ]{| l |}]]]] )
; .mov_ptn 0(<2)◂1(<2)◂0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "mtc_line 0" ] } 1(<2)◂{ } } ⊢ 2'(= a3◂ [ a43◂ [ a2◂ [ a29◂ [ a17◂ [ ]{| l |}]]]] )
	ALC_RCD 2, rax
	mov r9,rax
	ALC_RCD 3, rax
	mov r10,rax
	mov rax,r13
	mov QWORD [r10+8+8*0],rax
	mov rax,r14
	mov QWORD [r10+8+8*1],rax
	mov rsi,1  
	mov rdi,24
	xor rax,rax 
	C_CALL_SF calloc
	mov QWORD [rax],10
	mov BYTE [rax+8+0],109
	mov BYTE [rax+8+1],116
	mov BYTE [rax+8+2],99
	mov BYTE [rax+8+3],95
	mov BYTE [rax+8+4],108
	mov BYTE [rax+8+5],105
	mov BYTE [rax+8+6],110
	mov BYTE [rax+8+7],101
	mov BYTE [rax+8+8],32
	mov BYTE [rax+8+9],48
	mov QWORD [r10+8+8*2],rax
	mov rax,r10
	mov QWORD [r9+8+8*0],rax
	mov rax,unt 
	mov rax,unt_1
	mov QWORD [r9+8+8*1],rax
	mov rax,r9
	mov BYTE [rax+6],0
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],1
	mov QWORD [rax+8],rdi
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,16
	jmp LB_3329
LB_3329:
	cmp BYTE [r8+6],0
	jnz LB_3320
	POP_GRM_SCC
	ret
LB_3320:
	POP_GRM_FAIL 
	ret
ETR_242:
	mov r9,0x0000_ffff_ffff_ffff
	and r9,[r13]
	call GRM_242
	ret
GRM_242:
	PUSH_GRM
	jmp LB_3332
LB_3331:
	add r14,1 
LB_3332:
	cmp r14,r9
	jge LB_3333
	JZ_LINE_SPC BYTE [r13+8+r14], LB_3331
LB_3333
	call GRM_204
	cmp BYTE [r8+6],0
	jnz LB_3336
	jmp LB_3337
LB_3336:
	jmp LB_3334
LB_3337:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a16◂ [ a20◂ [ a17◂ [ ]{| l |}]] ) ⊢ 8'(= a16◂ [ a20◂ [ a17◂ [ ]{| l |}]] )
; .mov_ptn 2'(= a16◂ [ a20◂ [ a17◂ [ ]{| l |}]] ) ⊢ 8'(= a16◂ [ a20◂ [ a17◂ [ ]{| l |}]] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_3335
LB_3334:
	add rsp,0
	jmp LB_3330
LB_3335:
	jmp LB_3339
LB_3338:
	add r14,1 
LB_3339:
	cmp r14,r9
	jge LB_3340
	JZ_LINE_SPC BYTE [r13+8+r14], LB_3338
LB_3340
	lea rax,[r14+3]
	cmp rax,r9
	jg LB_3343
	jmp LB_3344
LB_3343:
	mov r8,unt_1
	jmp LB_3341
LB_3344:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],226
	jnz LB_3345
	cmp BYTE [rdi+1],138
	jnz LB_3345
	cmp BYTE [rdi+2],162
	jnz LB_3345
	jmp LB_3346
LB_3345:
	mov r8,unt_1
	jmp LB_3341
LB_3346:
	add r14,3
	jmp LB_3342
LB_3341:
	add rsp,8
	jmp LB_3330
LB_3342:
	jmp LB_3348
LB_3347:
	add r14,1 
LB_3348:
	cmp r14,r9
	jge LB_3349
	JZ_LINE_SPC BYTE [r13+8+r14], LB_3347
LB_3349
	call GRM_192
	cmp BYTE [r8+6],0
	jnz LB_3352
	jmp LB_3353
LB_3352:
	jmp LB_3350
LB_3353:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a17◂ [ ] ) ⊢ 9'(= a17◂ [ ] )
; .mov_ptn 2'(= a17◂ [ ] ) ⊢ 9'(= a17◂ [ ] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_3351
LB_3350:
	add rsp,8
	POP_GRM_FAIL
	ret
LB_3351:
	jmp LB_3355
LB_3354:
	add r14,1 
LB_3355:
	cmp r14,r9
	jge LB_3356
	JZ_LINE_SPC BYTE [r13+8+r14], LB_3354
LB_3356
	lea rax,[r14+3]
	cmp rax,r9
	jg LB_3359
	jmp LB_3360
LB_3359:
	mov r8,unt_1
	jmp LB_3357
LB_3360:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],226
	jnz LB_3361
	cmp BYTE [rdi+1],151
	jnz LB_3361
	cmp BYTE [rdi+2],130
	jnz LB_3361
	jmp LB_3362
LB_3361:
	mov r8,unt_1
	jmp LB_3357
LB_3362:
	add r14,3
	jmp LB_3358
LB_3357:
	add rsp,16
	POP_GRM_FAIL
	ret
LB_3358:
	jmp LB_3364
LB_3363:
	add r14,1 
LB_3364:
	cmp r14,r9
	jge LB_3365
	JZ_LINE_SPC BYTE [r13+8+r14], LB_3363
LB_3365
	call GRM_200
	cmp BYTE [r8+6],0
	jnz LB_3368
	jmp LB_3369
LB_3368:
	jmp LB_3366
LB_3369:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a16◂ [ a22◂ [ a17◂ [ ]{| l |}]] ) ⊢ 10'(= a16◂ [ a22◂ [ a17◂ [ ]{| l |}]] )
; .mov_ptn 2'(= a16◂ [ a22◂ [ a17◂ [ ]{| l |}]] ) ⊢ 10'(= a16◂ [ a22◂ [ a17◂ [ ]{| l |}]] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_3367
LB_3366:
	add rsp,16
	POP_GRM_FAIL
	ret
LB_3367:
	mov QWORD [rsp+8*3],r14
	mov r13,QWORD [rsp+16+8*3]
	mov r14,QWORD [rsp+8*3]
	jmp LB_3370
LB_3370
; #99 { 9'(= a17◂ [ ] ) 10'(= a16◂ [ a22◂ [ a17◂ [ ]{| l |}]] ) } ⊢ 0(<4)◂{ 9'(= a17◂ [ ] ) 10'(= a16◂ [ a22◂ [ a17◂ [ ]{| l |}]] ) }
; #81 0(<4)◂{ 9'(= a17◂ [ ] ) 10'(= a16◂ [ a22◂ [ a17◂ [ ]{| l |}]] ) } ⊢ 1(<2)◂0(<4)◂{ 9'(= a17◂ [ ] ) 10'(= a16◂ [ a22◂ [ a17◂ [ ]{| l |}]] ) }
; #118 { 8'(= a16◂ [ a20◂ [ a17◂ [ ]{| l |}]] ) 1(<2)◂0(<4)◂{ 9'(= a17◂ [ ] ) 10'(= a16◂ [ a22◂ [ a17◂ [ ]{| l |}]] ) } } ⊢ 0(<3)◂{ 8'(= a16◂ [ a20◂ [ a17◂ [ ]{| l |}]] ) 1(<2)◂0(<4)◂{ 9'(= a17◂ [ ] ) 10'(= a16◂ [ a22◂ [ a17◂ [ ]{| l |}]] ) } }
; #24 0(<3)◂{ 8'(= a16◂ [ a20◂ [ a17◂ [ ]{| l |}]] ) 1(<2)◂0(<4)◂{ 9'(= a17◂ [ ] ) 10'(= a16◂ [ a22◂ [ a17◂ [ ]{| l |}]] ) } } ⊢ 0(<2)◂0(<3)◂{ 8'(= a16◂ [ a20◂ [ a17◂ [ ]{| l |}]] ) 1(<2)◂0(<4)◂{ 9'(= a17◂ [ ] ) 10'(= a16◂ [ a22◂ [ a17◂ [ ]{| l |}]] ) } }
; ∎ 0(<2)◂0(<3)◂{ 8'(= a16◂ [ a20◂ [ a17◂ [ ]{| l |}]] ) 1(<2)◂0(<4)◂{ 9'(= a17◂ [ ] ) 10'(= a16◂ [ a22◂ [ a17◂ [ ]{| l |}]] ) } }
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂0(<3)◂{ 8'(= a16◂ [ a20◂ [ a17◂ [ ]{| l |}]] ) 1(<2)◂0(<4)◂{ 9'(= a17◂ [ ] ) 10'(= a16◂ [ a22◂ [ a17◂ [ ]{| l |}]] ) } } ⊢ 2'(= a3◂ [ a29◂ [ a17◂ [ ]{| l |}]] )
; .mov_ptn 0(<2)◂0(<3)◂{ 8'(= a16◂ [ a20◂ [ a17◂ [ ]{| l |}]] ) 1(<2)◂0(<4)◂{ 9'(= a17◂ [ ] ) 10'(= a16◂ [ a22◂ [ a17◂ [ ]{| l |}]] ) } } ⊢ 2'(= a3◂ [ a29◂ [ a17◂ [ ]{| l |}]] )
	ALC_RCD 2, rax
	mov r13,rax
	mov rax,QWORD [rsp-8+8*3]
	mov QWORD [r13+8+8*0],rax
	ALC_RCD 2, rax
	mov r14,rax
	mov rax,QWORD [rsp-8+8*2]
	mov QWORD [r14+8+8*0],rax
	mov rax,QWORD [rsp-8+8*1]
	mov QWORD [r14+8+8*1],rax
	mov rax,r14
	mov BYTE [rax+6],0
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],1
	mov QWORD [rax+8],rdi
	mov QWORD [r13+8+8*1],rax
	mov rax,r13
	mov BYTE [rax+6],0
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,24
	jmp LB_3371
LB_3371:
	cmp BYTE [r8+6],0
	jnz LB_3330
	POP_GRM_SCC
	ret
LB_3330:
	RB_GRM
	jmp LB_3374
LB_3373:
	add r14,1 
LB_3374:
	cmp r14,r9
	jge LB_3375
	JZ_LINE_SPC BYTE [r13+8+r14], LB_3373
LB_3375
	call GRM_245
	cmp BYTE [r8+6],0
	jnz LB_3378
	jmp LB_3379
LB_3378:
	jmp LB_3376
LB_3379:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a30◂ [ a17◂ [ ]{| l |}] ) ⊢ 8'(= a30◂ [ a17◂ [ ]{| l |}] )
; .mov_ptn 2'(= a30◂ [ a17◂ [ ]{| l |}] ) ⊢ 8'(= a30◂ [ a17◂ [ ]{| l |}] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_3377
LB_3376:
	add rsp,0
	jmp LB_3372
LB_3377:
	jmp LB_3381
LB_3380:
	add r14,1 
LB_3381:
	cmp r14,r9
	jge LB_3382
	JZ_LINE_SPC BYTE [r13+8+r14], LB_3380
LB_3382
	lea rax,[r14+2]
	cmp rax,r9
	jg LB_3385
	jmp LB_3386
LB_3385:
	mov r8,unt_1
	jmp LB_3383
LB_3386:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],61
	jnz LB_3387
	cmp BYTE [rdi+1],60
	jnz LB_3387
	jmp LB_3388
LB_3387:
	mov r8,unt_1
	jmp LB_3383
LB_3388:
	add r14,2
	jmp LB_3384
LB_3383:
	add rsp,8
	jmp LB_3372
LB_3384:
	jmp LB_3390
LB_3389:
	add r14,1 
LB_3390:
	cmp r14,r9
	jge LB_3391
	JZ_LINE_SPC BYTE [r13+8+r14], LB_3389
LB_3391
	call GRM_245
	cmp BYTE [r8+6],0
	jnz LB_3394
	jmp LB_3395
LB_3394:
	jmp LB_3392
LB_3395:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a30◂ [ a17◂ [ ]{| l |}] ) ⊢ 9'(= a30◂ [ a17◂ [ ]{| l |}] )
; .mov_ptn 2'(= a30◂ [ a17◂ [ ]{| l |}] ) ⊢ 9'(= a30◂ [ a17◂ [ ]{| l |}] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_3393
LB_3392:
	add rsp,8
	jmp LB_3372
LB_3393:
	mov QWORD [rsp+8*2],r14
	mov r13,QWORD [rsp+16+8*2]
	mov r14,QWORD [rsp+8*2]
	jmp LB_3396
LB_3396
; #116 { 8'(= a30◂ [ a17◂ [ ]{| l |}] ) 9'(= a30◂ [ a17◂ [ ]{| l |}] ) } ⊢ 2(<3)◂{ 8'(= a30◂ [ a17◂ [ ]{| l |}] ) 9'(= a30◂ [ a17◂ [ ]{| l |}] ) }
; #24 2(<3)◂{ 8'(= a30◂ [ a17◂ [ ]{| l |}] ) 9'(= a30◂ [ a17◂ [ ]{| l |}] ) } ⊢ 0(<2)◂2(<3)◂{ 8'(= a30◂ [ a17◂ [ ]{| l |}] ) 9'(= a30◂ [ a17◂ [ ]{| l |}] ) }
; ∎ 0(<2)◂2(<3)◂{ 8'(= a30◂ [ a17◂ [ ]{| l |}] ) 9'(= a30◂ [ a17◂ [ ]{| l |}] ) }
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂2(<3)◂{ 8'(= a30◂ [ a17◂ [ ]{| l |}] ) 9'(= a30◂ [ a17◂ [ ]{| l |}] ) } ⊢ 2'(= a3◂ [ a29◂ [ a17◂ [ ]{| l |}]] )
; .mov_ptn 0(<2)◂2(<3)◂{ 8'(= a30◂ [ a17◂ [ ]{| l |}] ) 9'(= a30◂ [ a17◂ [ ]{| l |}] ) } ⊢ 2'(= a3◂ [ a29◂ [ a17◂ [ ]{| l |}]] )
	ALC_RCD 2, rax
	mov r13,rax
	mov rax,QWORD [rsp-8+8*2]
	mov QWORD [r13+8+8*0],rax
	mov rax,QWORD [rsp-8+8*1]
	mov QWORD [r13+8+8*1],rax
	mov rax,r13
	mov BYTE [rax+6],2
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,16
	jmp LB_3397
LB_3397:
	cmp BYTE [r8+6],0
	jnz LB_3372
	POP_GRM_SCC
	ret
LB_3372:
	RB_GRM
	jmp LB_3400
LB_3399:
	add r14,1 
LB_3400:
	cmp r14,r9
	jge LB_3401
	JZ_LINE_SPC BYTE [r13+8+r14], LB_3399
LB_3401
	call GRM_245
	cmp BYTE [r8+6],0
	jnz LB_3404
	jmp LB_3405
LB_3404:
	jmp LB_3402
LB_3405:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a30◂ [ a17◂ [ ]{| l |}] ) ⊢ 8'(= a30◂ [ a17◂ [ ]{| l |}] )
; .mov_ptn 2'(= a30◂ [ a17◂ [ ]{| l |}] ) ⊢ 8'(= a30◂ [ a17◂ [ ]{| l |}] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_3403
LB_3402:
	add rsp,0
	jmp LB_3398
LB_3403:
	jmp LB_3407
LB_3406:
	add r14,1 
LB_3407:
	cmp r14,r9
	jge LB_3408
	JZ_LINE_SPC BYTE [r13+8+r14], LB_3406
LB_3408
	lea rax,[r14+1]
	cmp rax,r9
	jg LB_3411
	jmp LB_3412
LB_3411:
	mov r8,unt_1
	jmp LB_3409
LB_3412:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],61
	jnz LB_3413
	jmp LB_3414
LB_3413:
	mov r8,unt_1
	jmp LB_3409
LB_3414:
	add r14,1
	jmp LB_3410
LB_3409:
	add rsp,8
	jmp LB_3398
LB_3410:
	jmp LB_3416
LB_3415:
	add r14,1 
LB_3416:
	cmp r14,r9
	jge LB_3417
	JZ_LINE_SPC BYTE [r13+8+r14], LB_3415
LB_3417
	call GRM_245
	cmp BYTE [r8+6],0
	jnz LB_3420
	jmp LB_3421
LB_3420:
	jmp LB_3418
LB_3421:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a30◂ [ a17◂ [ ]{| l |}] ) ⊢ 9'(= a30◂ [ a17◂ [ ]{| l |}] )
; .mov_ptn 2'(= a30◂ [ a17◂ [ ]{| l |}] ) ⊢ 9'(= a30◂ [ a17◂ [ ]{| l |}] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_3419
LB_3418:
	add rsp,8
	jmp LB_3398
LB_3419:
	mov QWORD [rsp+8*2],r14
	mov r13,QWORD [rsp+16+8*2]
	mov r14,QWORD [rsp+8*2]
	jmp LB_3422
LB_3422
; #117 { 8'(= a30◂ [ a17◂ [ ]{| l |}] ) 9'(= a30◂ [ a17◂ [ ]{| l |}] ) } ⊢ 1(<3)◂{ 8'(= a30◂ [ a17◂ [ ]{| l |}] ) 9'(= a30◂ [ a17◂ [ ]{| l |}] ) }
; #24 1(<3)◂{ 8'(= a30◂ [ a17◂ [ ]{| l |}] ) 9'(= a30◂ [ a17◂ [ ]{| l |}] ) } ⊢ 0(<2)◂1(<3)◂{ 8'(= a30◂ [ a17◂ [ ]{| l |}] ) 9'(= a30◂ [ a17◂ [ ]{| l |}] ) }
; ∎ 0(<2)◂1(<3)◂{ 8'(= a30◂ [ a17◂ [ ]{| l |}] ) 9'(= a30◂ [ a17◂ [ ]{| l |}] ) }
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂1(<3)◂{ 8'(= a30◂ [ a17◂ [ ]{| l |}] ) 9'(= a30◂ [ a17◂ [ ]{| l |}] ) } ⊢ 2'(= a3◂ [ a29◂ [ a17◂ [ ]{| l |}]] )
; .mov_ptn 0(<2)◂1(<3)◂{ 8'(= a30◂ [ a17◂ [ ]{| l |}] ) 9'(= a30◂ [ a17◂ [ ]{| l |}] ) } ⊢ 2'(= a3◂ [ a29◂ [ a17◂ [ ]{| l |}]] )
	ALC_RCD 2, rax
	mov r13,rax
	mov rax,QWORD [rsp-8+8*2]
	mov QWORD [r13+8+8*0],rax
	mov rax,QWORD [rsp-8+8*1]
	mov QWORD [r13+8+8*1],rax
	mov rax,r13
	mov BYTE [rax+6],1
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,16
	jmp LB_3423
LB_3423:
	cmp BYTE [r8+6],0
	jnz LB_3398
	POP_GRM_SCC
	ret
LB_3398:
	POP_GRM_FAIL 
	ret
ETR_243:
	mov r9,0x0000_ffff_ffff_ffff
	and r9,[r13]
	call GRM_243
	ret
GRM_243:
	PUSH_GRM
	jmp LB_3426
LB_3425:
	add r14,1 
LB_3426:
	cmp r14,r9
	jge LB_3427
	JZ_LINE_SPC BYTE [r13+8+r14], LB_3425
LB_3427
	lea rax,[r14+1]
	cmp rax,r9
	jg LB_3430
	jmp LB_3431
LB_3430:
	mov r8,unt_1
	jmp LB_3428
LB_3431:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],59
	jnz LB_3432
	jmp LB_3433
LB_3432:
	mov r8,unt_1
	jmp LB_3428
LB_3433:
	add r14,1
	jmp LB_3429
LB_3428:
	add rsp,0
	jmp LB_3424
LB_3429:
	jmp LB_3435
LB_3434:
	add r14,1 
LB_3435:
	cmp r14,r9
	jge LB_3436
	JZ_LINE_SPC BYTE [r13+8+r14], LB_3434
LB_3436
	call GRM_242
	cmp BYTE [r8+6],0
	jnz LB_3439
	jmp LB_3440
LB_3439:
	jmp LB_3437
LB_3440:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a29◂ [ a17◂ [ ]{| l |}] ) ⊢ 8'(= a29◂ [ a17◂ [ ]{| l |}] )
; .mov_ptn 2'(= a29◂ [ a17◂ [ ]{| l |}] ) ⊢ 8'(= a29◂ [ a17◂ [ ]{| l |}] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_3438
LB_3437:
	add rsp,0
	POP_GRM_FAIL
	ret
LB_3438:
	jmp LB_3442
LB_3441:
	add r14,1 
LB_3442:
	cmp r14,r9
	jge LB_3443
	JZ_LINE_SPC BYTE [r13+8+r14], LB_3441
LB_3443
	call GRM_243
	cmp BYTE [r8+6],0
	jnz LB_3446
	jmp LB_3447
LB_3446:
	jmp LB_3444
LB_3447:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a2◂ [ a29◂ [ a17◂ [ ]{| l |}]] ) ⊢ 9'(= a2◂ [ a29◂ [ a17◂ [ ]{| l |}]] )
; .mov_ptn 2'(= a2◂ [ a29◂ [ a17◂ [ ]{| l |}]] ) ⊢ 9'(= a2◂ [ a29◂ [ a17◂ [ ]{| l |}]] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_3445
LB_3444:
	add rsp,8
	POP_GRM_FAIL
	ret
LB_3445:
	mov QWORD [rsp+8*2],r14
	mov r13,QWORD [rsp+16+8*2]
	mov r14,QWORD [rsp+8*2]
	jmp LB_3448
LB_3448
; #23 { 8'(= a29◂ [ a17◂ [ ]{| l |}] ) 9'(= a2◂ [ a29◂ [ a17◂ [ ]{| l |}]] ) } ⊢ 0(<2)◂{ 8'(= a29◂ [ a17◂ [ ]{| l |}] ) 9'(= a2◂ [ a29◂ [ a17◂ [ ]{| l |}]] ) }
; #24 0(<2)◂{ 8'(= a29◂ [ a17◂ [ ]{| l |}] ) 9'(= a2◂ [ a29◂ [ a17◂ [ ]{| l |}]] ) } ⊢ 0(<2)◂0(<2)◂{ 8'(= a29◂ [ a17◂ [ ]{| l |}] ) 9'(= a2◂ [ a29◂ [ a17◂ [ ]{| l |}]] ) }
; ∎ 0(<2)◂0(<2)◂{ 8'(= a29◂ [ a17◂ [ ]{| l |}] ) 9'(= a2◂ [ a29◂ [ a17◂ [ ]{| l |}]] ) }
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂0(<2)◂{ 8'(= a29◂ [ a17◂ [ ]{| l |}] ) 9'(= a2◂ [ a29◂ [ a17◂ [ ]{| l |}]] ) } ⊢ 2'(= a3◂ [ a2◂ [ a29◂ [ a17◂ [ ]{| l |}]]] )
; .mov_ptn 0(<2)◂0(<2)◂{ 8'(= a29◂ [ a17◂ [ ]{| l |}] ) 9'(= a2◂ [ a29◂ [ a17◂ [ ]{| l |}]] ) } ⊢ 2'(= a3◂ [ a2◂ [ a29◂ [ a17◂ [ ]{| l |}]]] )
	ALC_RCD 2, rax
	mov r13,rax
	mov rax,QWORD [rsp-8+8*2]
	mov QWORD [r13+8+8*0],rax
	mov rax,QWORD [rsp-8+8*1]
	mov QWORD [r13+8+8*1],rax
	mov rax,r13
	mov BYTE [rax+6],0
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,16
	jmp LB_3449
LB_3449:
	cmp BYTE [r8+6],0
	jnz LB_3424
	POP_GRM_SCC
	ret
LB_3424:
	RB_GRM
	jmp LB_3452
LB_3451:
	add r14,1 
LB_3452:
	cmp r14,r9
	jge LB_3453
	JZ_LINE_SPC BYTE [r13+8+r14], LB_3451
LB_3453
	lea rax,[r14+1]
	cmp rax,r9
	jg LB_3456
	jmp LB_3457
LB_3456:
	mov r8,unt_1
	jmp LB_3454
LB_3457:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],46
	jnz LB_3458
	jmp LB_3459
LB_3458:
	mov r8,unt_1
	jmp LB_3454
LB_3459:
	add r14,1
	jmp LB_3455
LB_3454:
	add rsp,0
	jmp LB_3450
LB_3455:
	jmp LB_3461
LB_3460:
	add r14,1 
LB_3461:
	cmp r14,r9
	jge LB_3462
	JZ_LINE_SPC BYTE [r13+8+r14], LB_3460
LB_3462
	lea rax,[r14+1]
	cmp rax,r9
	jg LB_3465
	jmp LB_3466
LB_3465:
	mov r8,unt_1
	jmp LB_3463
LB_3466:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],10
	jnz LB_3467
	jmp LB_3468
LB_3467:
	mov r8,unt_1
	jmp LB_3463
LB_3468:
	add r14,1
	jmp LB_3464
LB_3463:
	add rsp,0
	jmp LB_3450
LB_3464:
	mov QWORD [rsp+8*0],r14
	mov r13,QWORD [rsp+16+8*0]
	mov r14,QWORD [rsp+8*0]
	jmp LB_3469
LB_3469
; #22 { } ⊢ 1(<2)◂{ }
; #24 1(<2)◂{ } ⊢ 0(<2)◂1(<2)◂{ }
; ∎ 0(<2)◂1(<2)◂{ }
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂1(<2)◂{ } ⊢ 2'(= a3◂ [ a2◂ [ a29◂ [ a17◂ [ ]{| l |}]]] )
; .mov_ptn 0(<2)◂1(<2)◂{ } ⊢ 2'(= a3◂ [ a2◂ [ a29◂ [ a17◂ [ ]{| l |}]]] )
	mov rax,unt 
	mov rax,unt_1
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	jmp LB_3470
LB_3470:
	cmp BYTE [r8+6],0
	jnz LB_3450
	POP_GRM_SCC
	ret
LB_3450:
	POP_GRM_FAIL 
	ret
ETR_244:
	mov r9,0x0000_ffff_ffff_ffff
	and r9,[r13]
	call GRM_244
	ret
GRM_244:
	PUSH_GRM
	jmp LB_3473
LB_3472:
	add r14,1 
LB_3473:
	cmp r14,r9
	jge LB_3474
	JZ_LINE_SPC BYTE [r13+8+r14], LB_3472
LB_3474
	lea rax,[r14+1]
	cmp rax,r9
	jg LB_3477
	jmp LB_3478
LB_3477:
	mov r8,unt_1
	jmp LB_3475
LB_3478:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],59
	jnz LB_3479
	jmp LB_3480
LB_3479:
	mov r8,unt_1
	jmp LB_3475
LB_3480:
	add r14,1
	jmp LB_3476
LB_3475:
	add rsp,0
	jmp LB_3471
LB_3476:
	jmp LB_3482
LB_3481:
	add r14,1 
LB_3482:
	cmp r14,r9
	jge LB_3483
	JZ_LINE_SPC BYTE [r13+8+r14], LB_3481
LB_3483
	call GRM_242
	cmp BYTE [r8+6],0
	jnz LB_3486
	jmp LB_3487
LB_3486:
	jmp LB_3484
LB_3487:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a29◂ [ a17◂ [ ]{| l |}] ) ⊢ 8'(= a29◂ [ a17◂ [ ]{| l |}] )
; .mov_ptn 2'(= a29◂ [ a17◂ [ ]{| l |}] ) ⊢ 8'(= a29◂ [ a17◂ [ ]{| l |}] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_3485
LB_3484:
	add rsp,0
	POP_GRM_FAIL
	ret
LB_3485:
	jmp LB_3489
LB_3488:
	add r14,1 
LB_3489:
	cmp r14,r9
	jge LB_3490
	JZ_LINE_SPC BYTE [r13+8+r14], LB_3488
LB_3490
	call GRM_243
	cmp BYTE [r8+6],0
	jnz LB_3493
	jmp LB_3494
LB_3493:
	jmp LB_3491
LB_3494:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a2◂ [ a29◂ [ a17◂ [ ]{| l |}]] ) ⊢ 9'(= a2◂ [ a29◂ [ a17◂ [ ]{| l |}]] )
; .mov_ptn 2'(= a2◂ [ a29◂ [ a17◂ [ ]{| l |}]] ) ⊢ 9'(= a2◂ [ a29◂ [ a17◂ [ ]{| l |}]] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_3492
LB_3491:
	add rsp,8
	POP_GRM_FAIL
	ret
LB_3492:
	mov QWORD [rsp+8*2],r14
	mov r13,QWORD [rsp+16+8*2]
	mov r14,QWORD [rsp+8*2]
	jmp LB_3495
LB_3495
; #23 { 8'(= a29◂ [ a17◂ [ ]{| l |}] ) 9'(= a2◂ [ a29◂ [ a17◂ [ ]{| l |}]] ) } ⊢ 0(<2)◂{ 8'(= a29◂ [ a17◂ [ ]{| l |}] ) 9'(= a2◂ [ a29◂ [ a17◂ [ ]{| l |}]] ) }
; #196 0(<2)◂{ 8'(= a29◂ [ a17◂ [ ]{| l |}] ) 9'(= a2◂ [ a29◂ [ a17◂ [ ]{| l |}]] ) } ⊢ 0(<2)◂0(<2)◂{ 8'(= a29◂ [ a17◂ [ ]{| l |}] ) 9'(= a2◂ [ a29◂ [ a17◂ [ ]{| l |}]] ) }
; #24 0(<2)◂0(<2)◂{ 8'(= a29◂ [ a17◂ [ ]{| l |}] ) 9'(= a2◂ [ a29◂ [ a17◂ [ ]{| l |}]] ) } ⊢ 0(<2)◂0(<2)◂0(<2)◂{ 8'(= a29◂ [ a17◂ [ ]{| l |}] ) 9'(= a2◂ [ a29◂ [ a17◂ [ ]{| l |}]] ) }
; ∎ 0(<2)◂0(<2)◂0(<2)◂{ 8'(= a29◂ [ a17◂ [ ]{| l |}] ) 9'(= a2◂ [ a29◂ [ a17◂ [ ]{| l |}]] ) }
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂0(<2)◂0(<2)◂{ 8'(= a29◂ [ a17◂ [ ]{| l |}] ) 9'(= a2◂ [ a29◂ [ a17◂ [ ]{| l |}]] ) } ⊢ 2'(= a3◂ [ a43◂ [ a2◂ [ a29◂ [ a17◂ [ ]{| l |}]]]] )
; .mov_ptn 0(<2)◂0(<2)◂0(<2)◂{ 8'(= a29◂ [ a17◂ [ ]{| l |}] ) 9'(= a2◂ [ a29◂ [ a17◂ [ ]{| l |}]] ) } ⊢ 2'(= a3◂ [ a43◂ [ a2◂ [ a29◂ [ a17◂ [ ]{| l |}]]]] )
	ALC_RCD 2, rax
	mov r13,rax
	mov rax,QWORD [rsp-8+8*2]
	mov QWORD [r13+8+8*0],rax
	mov rax,QWORD [rsp-8+8*1]
	mov QWORD [r13+8+8*1],rax
	mov rax,r13
	mov BYTE [rax+6],0
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,16
	jmp LB_3496
LB_3496:
	cmp BYTE [r8+6],0
	jnz LB_3471
	POP_GRM_SCC
	ret
LB_3471:
	RB_GRM
	jmp LB_3499
LB_3498:
	add r14,1 
LB_3499:
	cmp r14,r9
	jge LB_3500
	JZ_LINE_SPC BYTE [r13+8+r14], LB_3498
LB_3500
	lea rax,[r14+1]
	cmp rax,r9
	jg LB_3503
	jmp LB_3504
LB_3503:
	mov r8,unt_1
	jmp LB_3501
LB_3504:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],46
	jnz LB_3505
	jmp LB_3506
LB_3505:
	mov r8,unt_1
	jmp LB_3501
LB_3506:
	add r14,1
	jmp LB_3502
LB_3501:
	add rsp,0
	jmp LB_3497
LB_3502:
	jmp LB_3508
LB_3507:
	add r14,1 
LB_3508:
	cmp r14,r9
	jge LB_3509
	JZ_LINE_SPC BYTE [r13+8+r14], LB_3507
LB_3509
	lea rax,[r14+1]
	cmp rax,r9
	jg LB_3512
	jmp LB_3513
LB_3512:
	mov r8,unt_1
	jmp LB_3510
LB_3513:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],10
	jnz LB_3514
	jmp LB_3515
LB_3514:
	mov r8,unt_1
	jmp LB_3510
LB_3515:
	add r14,1
	jmp LB_3511
LB_3510:
	add rsp,0
	jmp LB_3497
LB_3511:
	mov QWORD [rsp+8*0],r14
	mov r13,QWORD [rsp+16+8*0]
	mov r14,QWORD [rsp+8*0]
	jmp LB_3516
LB_3516
; #22 { } ⊢ 1(<2)◂{ }
; #196 1(<2)◂{ } ⊢ 0(<2)◂1(<2)◂{ }
; #24 0(<2)◂1(<2)◂{ } ⊢ 0(<2)◂0(<2)◂1(<2)◂{ }
; ∎ 0(<2)◂0(<2)◂1(<2)◂{ }
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂0(<2)◂1(<2)◂{ } ⊢ 2'(= a3◂ [ a43◂ [ a2◂ [ a29◂ [ a17◂ [ ]{| l |}]]]] )
; .mov_ptn 0(<2)◂0(<2)◂1(<2)◂{ } ⊢ 2'(= a3◂ [ a43◂ [ a2◂ [ a29◂ [ a17◂ [ ]{| l |}]]]] )
	mov rax,unt 
	mov rax,unt_1
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	jmp LB_3517
LB_3517:
	cmp BYTE [r8+6],0
	jnz LB_3497
	POP_GRM_SCC
	ret
LB_3497:
	RB_GRM
	jmp LB_3520
LB_3519:
	add r14,1 
LB_3520:
	cmp r14,r9
	jge LB_3521
	JZ_LINE_SPC BYTE [r13+8+r14], LB_3519
LB_3521
	call GRM_222
	cmp BYTE [r8+6],0
	jnz LB_3524
	jmp LB_3525
LB_3524:
	jmp LB_3522
LB_3525:
	sub rsp,16
; .mov_ptn2 2'(= *{ rr} ) ⊢ { 8'(= r ) 9'(= r ) }
; .mov_ptn 2'(= *{ rr} ) ⊢ { 8'(= r ) 9'(= r ) }
	mov r10, QWORD [r8+8]
	mov QWORD [rsp-8+8*2],r10
	mov r11, QWORD [r8+16]
	mov QWORD [rsp-8+8*1],r11
	mov rdi,r8
	FREE_RCD 2,rdi
	jmp LB_3523
LB_3522:
	add rsp,0
	jmp LB_3518
LB_3523:
	mov QWORD [rsp+8*2],r14
	mov r13,QWORD [rsp+16+8*2]
	mov r14,QWORD [rsp+8*2]
	jmp LB_3526
LB_3526
; $ %[ "mtc_line_tl 0" ] ⊢ %[ "mtc_line_tl 0" ]
; #22 { } ⊢ 1(<2)◂{ }
; #23 { { 0'(= r ) 1'(= r ) %[ "mtc_line_tl 0" ] } 1(<2)◂{ } } ⊢ 0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "mtc_line_tl 0" ] } 1(<2)◂{ } }
; #195 0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "mtc_line_tl 0" ] } 1(<2)◂{ } } ⊢ 1(<2)◂0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "mtc_line_tl 0" ] } 1(<2)◂{ } }
; #24 1(<2)◂0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "mtc_line_tl 0" ] } 1(<2)◂{ } } ⊢ 0(<2)◂1(<2)◂0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "mtc_line_tl 0" ] } 1(<2)◂{ } }
; ∎ 0(<2)◂1(<2)◂0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "mtc_line_tl 0" ] } 1(<2)◂{ } }
; .dlt.ptn { 8'(= r ) 9'(= r ) }
	mov rdi,QWORD [rsp-8+8*2]
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
	mov rdi,QWORD [rsp-8+8*1]
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂1(<2)◂0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "mtc_line_tl 0" ] } 1(<2)◂{ } } ⊢ 2'(= a3◂ [ a43◂ [ a2◂ [ a29◂ [ a17◂ [ ]{| l |}]]]] )
; .mov_ptn 0(<2)◂1(<2)◂0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "mtc_line_tl 0" ] } 1(<2)◂{ } } ⊢ 2'(= a3◂ [ a43◂ [ a2◂ [ a29◂ [ a17◂ [ ]{| l |}]]]] )
	ALC_RCD 2, rax
	mov r9,rax
	ALC_RCD 3, rax
	mov r10,rax
	mov rax,r13
	mov QWORD [r10+8+8*0],rax
	mov rax,r14
	mov QWORD [r10+8+8*1],rax
	mov rsi,1  
	mov rdi,24
	xor rax,rax 
	C_CALL_SF calloc
	mov QWORD [rax],13
	mov BYTE [rax+8+0],109
	mov BYTE [rax+8+1],116
	mov BYTE [rax+8+2],99
	mov BYTE [rax+8+3],95
	mov BYTE [rax+8+4],108
	mov BYTE [rax+8+5],105
	mov BYTE [rax+8+6],110
	mov BYTE [rax+8+7],101
	mov BYTE [rax+8+8],95
	mov BYTE [rax+8+9],116
	mov BYTE [rax+8+10],108
	mov BYTE [rax+8+11],32
	mov BYTE [rax+8+12],48
	mov QWORD [r10+8+8*2],rax
	mov rax,r10
	mov QWORD [r9+8+8*0],rax
	mov rax,unt 
	mov rax,unt_1
	mov QWORD [r9+8+8*1],rax
	mov rax,r9
	mov BYTE [rax+6],0
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],1
	mov QWORD [rax+8],rdi
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,16
	jmp LB_3527
LB_3527:
	cmp BYTE [r8+6],0
	jnz LB_3518
	POP_GRM_SCC
	ret
LB_3518:
	POP_GRM_FAIL 
	ret
ETR_245:
	mov r9,0x0000_ffff_ffff_ffff
	and r9,[r13]
	call GRM_245
	ret
GRM_245:
	PUSH_GRM
	call GRM_77
	cmp BYTE [r8+6],0
	jnz LB_3531
	jmp LB_3532
LB_3531:
	jmp LB_3529
LB_3532:
	sub rsp,8
; .mov_ptn2 2'(= {| l |} ) ⊢ 8'(= {| l |} )
; .mov_ptn 2'(= {| l |} ) ⊢ 8'(= {| l |} )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_3530
LB_3529:
	add rsp,0
	jmp LB_3528
LB_3530:
	lea rax,[r14+1]
	cmp rax,r9
	jg LB_3535
	jmp LB_3536
LB_3535:
	mov r8,unt_1
	jmp LB_3533
LB_3536:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],39
	jnz LB_3537
	jmp LB_3538
LB_3537:
	mov r8,unt_1
	jmp LB_3533
LB_3538:
	add r14,1
	jmp LB_3534
LB_3533:
	add rsp,8
	jmp LB_3528
LB_3534:
	mov QWORD [rsp+8*1],r14
	mov r13,QWORD [rsp+16+8*1]
	mov r14,QWORD [rsp+8*1]
	jmp LB_3539
LB_3539
; #114 8'(= {| l |} ) ⊢ 1(<2)◂8'(= {| l |} )
; #24 1(<2)◂8'(= {| l |} ) ⊢ 0(<2)◂1(<2)◂8'(= {| l |} )
; ∎ 0(<2)◂1(<2)◂8'(= {| l |} )
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂1(<2)◂8'(= {| l |} ) ⊢ 2'(= a3◂ [ a30◂ [ a17◂ [ ]{| l |}]] )
; .mov_ptn 0(<2)◂1(<2)◂8'(= {| l |} ) ⊢ 2'(= a3◂ [ a30◂ [ a17◂ [ ]{| l |}]] )
	mov rax,QWORD [rsp-8+8*1]
	mov BYTE [rax+6],1
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,8
	jmp LB_3540
LB_3540:
	cmp BYTE [r8+6],0
	jnz LB_3528
	POP_GRM_SCC
	ret
LB_3528:
	RB_GRM
	call GRM_193
	cmp BYTE [r8+6],0
	jnz LB_3544
	jmp LB_3545
LB_3544:
	jmp LB_3542
LB_3545:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a19◂ [ a17◂ [ ]] ) ⊢ 8'(= a19◂ [ a17◂ [ ]] )
; .mov_ptn 2'(= a19◂ [ a17◂ [ ]] ) ⊢ 8'(= a19◂ [ a17◂ [ ]] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_3543
LB_3542:
	add rsp,0
	jmp LB_3541
LB_3543:
	mov QWORD [rsp+8*1],r14
	mov r13,QWORD [rsp+16+8*1]
	mov r14,QWORD [rsp+8*1]
	jmp LB_3546
LB_3546
; #115 8'(= a19◂ [ a17◂ [ ]] ) ⊢ 0(<2)◂8'(= a19◂ [ a17◂ [ ]] )
; #24 0(<2)◂8'(= a19◂ [ a17◂ [ ]] ) ⊢ 0(<2)◂0(<2)◂8'(= a19◂ [ a17◂ [ ]] )
; ∎ 0(<2)◂0(<2)◂8'(= a19◂ [ a17◂ [ ]] )
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂0(<2)◂8'(= a19◂ [ a17◂ [ ]] ) ⊢ 2'(= a3◂ [ a30◂ [ a17◂ [ ]{| l |}]] )
; .mov_ptn 0(<2)◂0(<2)◂8'(= a19◂ [ a17◂ [ ]] ) ⊢ 2'(= a3◂ [ a30◂ [ a17◂ [ ]{| l |}]] )
	mov rax,QWORD [rsp-8+8*1]
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,8
	jmp LB_3547
LB_3547:
	cmp BYTE [r8+6],0
	jnz LB_3541
	POP_GRM_SCC
	ret
LB_3541:
	POP_GRM_FAIL 
	ret
LB_3575:
	movzx rax,BYTE [r8+6]
	jmp QWORD [LB_3582+8*rax]
LB_3582: dq LB_3576,LB_3577,LB_3578,LB_3579,LB_3580,LB_3581
LB_3576:
	push r8
	mov r8,QWORD [r8+8+8*0]
	mov rdi,r8
	call free_s8
	pop r8 
	push r8
	mov r8,QWORD [r8+8+8*1]
	call LB_3584
	pop r8 
	FREE_RCD 2, r8
	jmp LB_3583
LB_3577:
	FREE_LN r8 
	mov r8,QWORD [r8+8]
	call LB_3585
	jmp LB_3583
LB_3578:
	push r8
	mov r8,QWORD [r8+8+8*0]
	mov rdi,r8
	call free_s8
	pop r8 
	push r8
	mov r8,QWORD [r8+8+8*1]
	call LB_3586
	pop r8 
	FREE_RCD 2, r8
	jmp LB_3583
LB_3579:
	FREE_LN r8 
	mov r8,QWORD [r8+8]
	call LB_3587
	jmp LB_3583
LB_3580:
	push r8
	mov r8,QWORD [r8+8+8*0]
	mov rdi,r8
	call free_s8
	pop r8 
	push r8
	mov r8,QWORD [r8+8+8*1]
	call LB_3588
	pop r8 
	FREE_RCD 2, r8
	jmp LB_3583
LB_3581:
	FREE_LN r8 
	mov r8,QWORD [r8+8]
	call LB_3589
	jmp LB_3583
LB_3583:
	ret
LB_3589:
	movzx rax,BYTE [r8+6]
	jmp QWORD [LB_3592+8*rax]
LB_3592: dq LB_3590,LB_3591
LB_3590:
	push r8
	mov r8,QWORD [r8+8+8*0]
	push r8
	mov r8,QWORD [r8+8+8*0]
	mov rdi,r8
	call free_s8
	pop r8 
	push r8
	mov r8,QWORD [r8+8+8*1]
	call LB_3588
	pop r8 
	FREE_RCD 2, r8
	pop r8 
	push r8
	mov r8,QWORD [r8+8+8*1]
	call LB_3589
	pop r8 
	FREE_RCD 2, r8
	jmp LB_3593
LB_3591:
	jmp LB_3593
LB_3593:
	ret
LB_3588:
	movzx rax,BYTE [r8+6]
	jmp QWORD [LB_3596+8*rax]
LB_3596: dq LB_3594,LB_3595
LB_3594:
	push r8
	mov r8,QWORD [r8+8+8*0]
	call LB_771
	pop r8 
	push r8
	mov r8,QWORD [r8+8+8*1]
	call LB_3598
	pop r8 
	FREE_RCD 2, r8
	jmp LB_3597
LB_3595:
	push r8
	mov r8,QWORD [r8+8+8*0]
	call LB_771
	pop r8 
	push r8
	mov r8,QWORD [r8+8+8*1]
	call LB_781
	pop r8 
	FREE_RCD 2, r8
	jmp LB_3597
LB_3597:
	ret
LB_3598:
	movzx rax,BYTE [r8+6]
	jmp QWORD [LB_3601+8*rax]
LB_3601: dq LB_3599,LB_3600
LB_3599:
	push r8
	mov r8,QWORD [r8+8+8*0]
	push r8
	mov r8,QWORD [r8+8+8*0]
	mov rdi,r8
	call free_s8
	pop r8 
	push r8
	mov r8,QWORD [r8+8+8*1]
	call LB_781
	pop r8 
	FREE_RCD 2, r8
	pop r8 
	push r8
	mov r8,QWORD [r8+8+8*1]
	call LB_3598
	pop r8 
	FREE_RCD 2, r8
	jmp LB_3602
LB_3600:
	jmp LB_3602
LB_3602:
	ret
LB_3587:
	movzx rax,BYTE [r8+6]
	jmp QWORD [LB_3605+8*rax]
LB_3605: dq LB_3603,LB_3604
LB_3603:
	push r8
	mov r8,QWORD [r8+8+8*0]
	push r8
	mov r8,QWORD [r8+8+8*0]
	mov rdi,r8
	call free_s8
	pop r8 
	push r8
	mov r8,QWORD [r8+8+8*1]
	call LB_673
	pop r8 
	push r8
	mov r8,QWORD [r8+8+8*2]
	call LB_839
	pop r8 
	push r8
	mov r8,QWORD [r8+8+8*3]
	call LB_679
	pop r8 
	FREE_RCD 4, r8
	pop r8 
	push r8
	mov r8,QWORD [r8+8+8*1]
	call LB_3587
	pop r8 
	FREE_RCD 2, r8
	jmp LB_3606
LB_3604:
	jmp LB_3606
LB_3606:
	ret
LB_3586:
	movzx rax,BYTE [r8+6]
	jmp QWORD [LB_3610+8*rax]
LB_3610: dq LB_3607,LB_3608,LB_3609
LB_3607:
	push r8
	mov r8,QWORD [r8+8+8*0]
	call LB_673
	pop r8 
	push r8
	mov r8,QWORD [r8+8+8*1]
	call LB_839
	pop r8 
	push r8
	mov r8,QWORD [r8+8+8*2]
	call LB_679
	pop r8 
	FREE_RCD 3, r8
	jmp LB_3611
LB_3608:
	FREE_LN r8 
	mov r8,QWORD [r8+8]
	call LB_389
	jmp LB_3611
LB_3609:
	FREE_LN r8 
	mov r8,QWORD [r8+8]
	call LB_679
	jmp LB_3611
LB_3611:
	ret
LB_3585:
	movzx rax,BYTE [r8+6]
	jmp QWORD [LB_3614+8*rax]
LB_3614: dq LB_3612,LB_3613
LB_3612:
	push r8
	mov r8,QWORD [r8+8+8*0]
	push r8
	mov r8,QWORD [r8+8+8*0]
	mov rdi,r8
	call free_s8
	pop r8 
	push r8
	mov r8,QWORD [r8+8+8*1]
	call LB_3616
	pop r8 
	FREE_RCD 2, r8
	pop r8 
	push r8
	mov r8,QWORD [r8+8+8*1]
	call LB_3585
	pop r8 
	FREE_RCD 2, r8
	jmp LB_3615
LB_3613:
	jmp LB_3615
LB_3615:
	ret
LB_3616:
	movzx rax,BYTE [r8+6]
	jmp QWORD [LB_3619+8*rax]
LB_3619: dq LB_3617,LB_3618
LB_3617:
	FREE_LN r8 
	mov r8,QWORD [r8+8]
	call LB_653
	jmp LB_3620
LB_3618:
	FREE_LN r8 
	mov r8,QWORD [r8+8]
	call LB_674
	jmp LB_3620
LB_3620:
	ret
LB_3584:
	movzx rax,BYTE [r8+6]
	jmp QWORD [LB_3623+8*rax]
LB_3623: dq LB_3621,LB_3622
LB_3621:
	FREE_LN r8 
	mov r8,QWORD [r8+8]
	call LB_3625
	jmp LB_3624
LB_3622:
	FREE_LN r8 
	mov r8,QWORD [r8+8]
	call LB_388
	jmp LB_3624
LB_3624:
	ret
LB_3625:
	movzx rax,BYTE [r8+6]
	jmp QWORD [LB_3628+8*rax]
LB_3628: dq LB_3626,LB_3627
LB_3626:
	push r8
	mov r8,QWORD [r8+8+8*0]
	call LB_3575
	pop r8 
	push r8
	mov r8,QWORD [r8+8+8*1]
	call LB_3625
	pop r8 
	FREE_RCD 2, r8
	jmp LB_3629
LB_3627:
	jmp LB_3629
LB_3629:
	ret
LB_3572: ;; #197 { 0'(= a43◂ [ a39◂ [ ]] ) 1'(= a43◂ [ a2◂ [ a39◂ [ ]]] ) } ⊢ 0'(= a43◂ [ *{ a39◂ [ ]a2◂ [ a39◂ [ ]]}] ) : ({ _t43◂_t39 _t43◂_lst◂_t39 }→_t43◂{ _t39 _lst◂_t39 })
;; ? 0'(= a43◂ [ a39◂ [ ]] ) ⊢ 0(<2)◂2'(= a39◂ [ ] )
	mov rdi,r13
	cmp BYTE [rdi+6],0
	jnz LB_3573
	mov QWORD [GBG_VCT+8*0],rdi
	mov r8,QWORD [rdi+8]
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_LN rdi
;; ? 1'(= a43◂ [ a2◂ [ a39◂ [ ]]] ) ⊢ 0(<2)◂0'(= a2◂ [ a39◂ [ ]] )
	mov rdi,r14
	cmp BYTE [rdi+6],0
	jnz LB_3574
	mov QWORD [GBG_VCT+8*0],rdi
	mov r13,QWORD [rdi+8]
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_LN rdi
; #196 { 2'(= a39◂ [ ] ) 0'(= a2◂ [ a39◂ [ ]] ) } ⊢ 0(<2)◂{ 2'(= a39◂ [ ] ) 0'(= a2◂ [ a39◂ [ ]] ) }
; ∎ 0(<2)◂{ 2'(= a39◂ [ ] ) 0'(= a2◂ [ a39◂ [ ]] ) }
; .mov_ptn2 0(<2)◂{ 2'(= a39◂ [ ] ) 0'(= a2◂ [ a39◂ [ ]] ) } ⊢ 0'(= a43◂ [ *{ a39◂ [ ]a2◂ [ a39◂ [ ]]}] )
	mov r14,r13
; .mov_ptn 0(<2)◂{ 2'(= a39◂ [ ] ) 1'(= a2◂ [ a39◂ [ ]] ) } ⊢ 0'(= a43◂ [ *{ a39◂ [ ]a2◂ [ a39◂ [ ]]}] )
	ALC_RCD 2, rax
	mov r9,rax
	mov rax,r8
	mov QWORD [r9+8+8*0],rax
	mov rax,r14
	mov QWORD [r9+8+8*1],rax
	mov rax,r9
	mov BYTE [rax+6],0
	mov r13,rax
	ret
LB_3574:
;; ?. 1'(= a43◂ [ a2◂ [ a39◂ [ ]]] ) ⊢ 1(<2)◂0'(= a2◂ [ *{ rr{| l |}}] )
	mov QWORD [GBG_VCT+8*0],rdi
	mov r13,QWORD [rdi+8]
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_LN rdi
; #195 0'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 1(<2)◂0'(= a2◂ [ *{ rr{| l |}}] )
; ∎ 1(<2)◂0'(= a2◂ [ *{ rr{| l |}}] )
; .dlt.ptn 2'(= a39◂ [ ] )
	mov rdi,r8
	C_PUSH_REGS
	mov r8,rdi
	call LB_3575
	C_POP_REGS
; .mov_ptn2 1(<2)◂0'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 0'(= a43◂ [ *{ a39◂ [ ]a2◂ [ a39◂ [ ]]}] )
	mov r14,r13
; .mov_ptn 1(<2)◂1'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 0'(= a43◂ [ *{ a39◂ [ ]a2◂ [ a39◂ [ ]]}] )
	mov rax,r14
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],1
	mov QWORD [rax+8],rdi
	mov r13,rax
	ret
LB_3573:
;; ?. 0'(= a43◂ [ a39◂ [ ]] ) ⊢ 1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] )
	mov QWORD [GBG_VCT+8*0],rdi
	mov r8,QWORD [rdi+8]
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_LN rdi
;; ? 1'(= a43◂ [ a2◂ [ a39◂ [ ]]] ) ⊢ 0(<2)◂0'(= a2◂ [ a39◂ [ ]] )
	mov rdi,r14
	cmp BYTE [rdi+6],0
	jnz LB_3630
	mov QWORD [GBG_VCT+8*0],rdi
	mov r13,QWORD [rdi+8]
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_LN rdi
; #195 2'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] )
; ∎ 1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] )
; .dlt.ptn 0'(= a2◂ [ a39◂ [ ]] )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	call LB_3625
	C_POP_REGS
; .mov_ptn2 1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 0'(= a43◂ [ *{ a39◂ [ ]a2◂ [ a39◂ [ ]]}] )
; .mov_ptn 1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 0'(= a43◂ [ *{ a39◂ [ ]a2◂ [ a39◂ [ ]]}] )
	mov rax,r8
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],1
	mov QWORD [rax+8],rdi
	mov r13,rax
	ret
LB_3630:
;; ?. 1'(= a43◂ [ a2◂ [ a39◂ [ ]]] ) ⊢ 1(<2)◂0'(= a2◂ [ *{ rr{| l |}}] )
	mov QWORD [GBG_VCT+8*0],rdi
	mov r13,QWORD [rdi+8]
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_LN rdi
; #56 { 2'(= a2◂ [ *{ rr{| l |}}] ) 0'(= a2◂ [ *{ rr{| l |}}] ) } ⊢ 0'(= a2◂ [ *{ rr{| l |}}] )
; .mov_ptn2 { 2'(= a2◂ [ *{ rr{| l |}}] ) 0'(= a2◂ [ *{ rr{| l |}}] ) } ⊢ { 0'(= a2◂ [ *{ rr{| l |}}] ) 1'(= a2◂ [ *{ rr{| l |}}] ) }
; .mov_ptn 0'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 1'(= a2◂ [ *{ rr{| l |}}] )
	mov rax,r13
	mov r14,rax
; .mov_ptn 2'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 0'(= a2◂ [ *{ rr{| l |}}] )
	mov rax,r8
	mov r13,rax
	call LB_1809
; #195 0'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 1(<2)◂0'(= a2◂ [ *{ rr{| l |}}] )
; ∎ 1(<2)◂0'(= a2◂ [ *{ rr{| l |}}] )
; .mov_ptn2 1(<2)◂0'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 0'(= a43◂ [ *{ a39◂ [ ]a2◂ [ a39◂ [ ]]}] )
	mov r14,r13
; .mov_ptn 1(<2)◂1'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 0'(= a43◂ [ *{ a39◂ [ ]a2◂ [ a39◂ [ ]]}] )
	mov rax,r14
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],1
	mov QWORD [rax+8],rdi
	mov r13,rax
	ret
LB_4558: ;; #197 { 0'(= a43◂ [ a2◂ [ *{ {| l |}a16◂ [ a21◂ [ {| l |}]]a3◂ [ a31◂ [ ]]a25◂ [ a17◂ [ ]{| l |}]}]] ) 1'(= a43◂ [ a25◂ [ a17◂ [ ]{| l |}]] ) } ⊢ 0'(= a43◂ [ *{ a2◂ [ *{ {| l |}a16◂ [ a21◂ [ {| l |}]]a3◂ [ a31◂ [ ]]a25◂ [ a17◂ [ ]{| l |}]}]a25◂ [ a17◂ [ ]{| l |}]}] ) : ({ _t43◂_lst◂{ _s8 _t16◂_t21◂_s8 _opn◂_t31 _t25◂_s8◂_t17 } _t43◂_t25◂_s8◂_t17 }→_t43◂{ _lst◂{ _s8 _t16◂_t21◂_s8 _opn◂_t31 _t25◂_s8◂_t17 } _t25◂_s8◂_t17 })
;; ? 0'(= a43◂ [ a2◂ [ *{ {| l |}a16◂ [ a21◂ [ {| l |}]]a3◂ [ a31◂ [ ]]a25◂ [ a17◂ [ ]{| l |}]}]] ) ⊢ 0(<2)◂2'(= a2◂ [ *{ {| l |}a16◂ [ a21◂ [ {| l |}]]a3◂ [ a31◂ [ ]]a25◂ [ a17◂ [ ]{| l |}]}] )
	mov rdi,r13
	cmp BYTE [rdi+6],0
	jnz LB_4559
	mov QWORD [GBG_VCT+8*0],rdi
	mov r8,QWORD [rdi+8]
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_LN rdi
;; ? 1'(= a43◂ [ a25◂ [ a17◂ [ ]{| l |}]] ) ⊢ 0(<2)◂0'(= a25◂ [ a17◂ [ ]{| l |}] )
	mov rdi,r14
	cmp BYTE [rdi+6],0
	jnz LB_4560
	mov QWORD [GBG_VCT+8*0],rdi
	mov r13,QWORD [rdi+8]
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_LN rdi
; #196 { 2'(= a2◂ [ *{ {| l |}a16◂ [ a21◂ [ {| l |}]]a3◂ [ a31◂ [ ]]a25◂ [ a17◂ [ ]{| l |}]}] ) 0'(= a25◂ [ a17◂ [ ]{| l |}] ) } ⊢ 0(<2)◂{ 2'(= a2◂ [ *{ {| l |}a16◂ [ a21◂ [ {| l |}]]a3◂ [ a31◂ [ ]]a25◂ [ a17◂ [ ]{| l |}]}] ) 0'(= a25◂ [ a17◂ [ ]{| l |}] ) }
; ∎ 0(<2)◂{ 2'(= a2◂ [ *{ {| l |}a16◂ [ a21◂ [ {| l |}]]a3◂ [ a31◂ [ ]]a25◂ [ a17◂ [ ]{| l |}]}] ) 0'(= a25◂ [ a17◂ [ ]{| l |}] ) }
; .mov_ptn2 0(<2)◂{ 2'(= a2◂ [ *{ {| l |}a16◂ [ a21◂ [ {| l |}]]a3◂ [ a31◂ [ ]]a25◂ [ a17◂ [ ]{| l |}]}] ) 0'(= a25◂ [ a17◂ [ ]{| l |}] ) } ⊢ 0'(= a43◂ [ *{ a2◂ [ *{ {| l |}a16◂ [ a21◂ [ {| l |}]]a3◂ [ a31◂ [ ]]a25◂ [ a17◂ [ ]{| l |}]}]a25◂ [ a17◂ [ ]{| l |}]}] )
	mov r14,r13
; .mov_ptn 0(<2)◂{ 2'(= a2◂ [ *{ {| l |}a16◂ [ a21◂ [ {| l |}]]a3◂ [ a31◂ [ ]]a25◂ [ a17◂ [ ]{| l |}]}] ) 1'(= a25◂ [ a17◂ [ ]{| l |}] ) } ⊢ 0'(= a43◂ [ *{ a2◂ [ *{ {| l |}a16◂ [ a21◂ [ {| l |}]]a3◂ [ a31◂ [ ]]a25◂ [ a17◂ [ ]{| l |}]}]a25◂ [ a17◂ [ ]{| l |}]}] )
	ALC_RCD 2, rax
	mov r9,rax
	mov rax,r8
	mov QWORD [r9+8+8*0],rax
	mov rax,r14
	mov QWORD [r9+8+8*1],rax
	mov rax,r9
	mov BYTE [rax+6],0
	mov r13,rax
	ret
LB_4560:
;; ?. 1'(= a43◂ [ a25◂ [ a17◂ [ ]{| l |}]] ) ⊢ 1(<2)◂0'(= a2◂ [ *{ rr{| l |}}] )
	mov QWORD [GBG_VCT+8*0],rdi
	mov r13,QWORD [rdi+8]
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_LN rdi
; #195 0'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 1(<2)◂0'(= a2◂ [ *{ rr{| l |}}] )
; ∎ 1(<2)◂0'(= a2◂ [ *{ rr{| l |}}] )
; .dlt.ptn 2'(= a2◂ [ *{ {| l |}a16◂ [ a21◂ [ {| l |}]]a3◂ [ a31◂ [ ]]a25◂ [ a17◂ [ ]{| l |}]}] )
	mov rdi,r8
	C_PUSH_REGS
	mov r8,rdi
	call LB_3587
	C_POP_REGS
; .mov_ptn2 1(<2)◂0'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 0'(= a43◂ [ *{ a2◂ [ *{ {| l |}a16◂ [ a21◂ [ {| l |}]]a3◂ [ a31◂ [ ]]a25◂ [ a17◂ [ ]{| l |}]}]a25◂ [ a17◂ [ ]{| l |}]}] )
	mov r14,r13
; .mov_ptn 1(<2)◂1'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 0'(= a43◂ [ *{ a2◂ [ *{ {| l |}a16◂ [ a21◂ [ {| l |}]]a3◂ [ a31◂ [ ]]a25◂ [ a17◂ [ ]{| l |}]}]a25◂ [ a17◂ [ ]{| l |}]}] )
	mov rax,r14
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],1
	mov QWORD [rax+8],rdi
	mov r13,rax
	ret
LB_4559:
;; ?. 0'(= a43◂ [ a2◂ [ *{ {| l |}a16◂ [ a21◂ [ {| l |}]]a3◂ [ a31◂ [ ]]a25◂ [ a17◂ [ ]{| l |}]}]] ) ⊢ 1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] )
	mov QWORD [GBG_VCT+8*0],rdi
	mov r8,QWORD [rdi+8]
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_LN rdi
;; ? 1'(= a43◂ [ a25◂ [ a17◂ [ ]{| l |}]] ) ⊢ 0(<2)◂0'(= a25◂ [ a17◂ [ ]{| l |}] )
	mov rdi,r14
	cmp BYTE [rdi+6],0
	jnz LB_4561
	mov QWORD [GBG_VCT+8*0],rdi
	mov r13,QWORD [rdi+8]
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_LN rdi
; #195 2'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] )
; ∎ 1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] )
; .dlt.ptn 0'(= a25◂ [ a17◂ [ ]{| l |}] )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	call LB_679
	C_POP_REGS
; .mov_ptn2 1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 0'(= a43◂ [ *{ a2◂ [ *{ {| l |}a16◂ [ a21◂ [ {| l |}]]a3◂ [ a31◂ [ ]]a25◂ [ a17◂ [ ]{| l |}]}]a25◂ [ a17◂ [ ]{| l |}]}] )
; .mov_ptn 1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 0'(= a43◂ [ *{ a2◂ [ *{ {| l |}a16◂ [ a21◂ [ {| l |}]]a3◂ [ a31◂ [ ]]a25◂ [ a17◂ [ ]{| l |}]}]a25◂ [ a17◂ [ ]{| l |}]}] )
	mov rax,r8
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],1
	mov QWORD [rax+8],rdi
	mov r13,rax
	ret
LB_4561:
;; ?. 1'(= a43◂ [ a25◂ [ a17◂ [ ]{| l |}]] ) ⊢ 1(<2)◂0'(= a2◂ [ *{ rr{| l |}}] )
	mov QWORD [GBG_VCT+8*0],rdi
	mov r13,QWORD [rdi+8]
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_LN rdi
; #56 { 2'(= a2◂ [ *{ rr{| l |}}] ) 0'(= a2◂ [ *{ rr{| l |}}] ) } ⊢ 0'(= a2◂ [ *{ rr{| l |}}] )
; .mov_ptn2 { 2'(= a2◂ [ *{ rr{| l |}}] ) 0'(= a2◂ [ *{ rr{| l |}}] ) } ⊢ { 0'(= a2◂ [ *{ rr{| l |}}] ) 1'(= a2◂ [ *{ rr{| l |}}] ) }
; .mov_ptn 0'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 1'(= a2◂ [ *{ rr{| l |}}] )
	mov rax,r13
	mov r14,rax
; .mov_ptn 2'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 0'(= a2◂ [ *{ rr{| l |}}] )
	mov rax,r8
	mov r13,rax
	call LB_1809
; #195 0'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 1(<2)◂0'(= a2◂ [ *{ rr{| l |}}] )
; ∎ 1(<2)◂0'(= a2◂ [ *{ rr{| l |}}] )
; .mov_ptn2 1(<2)◂0'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 0'(= a43◂ [ *{ a2◂ [ *{ {| l |}a16◂ [ a21◂ [ {| l |}]]a3◂ [ a31◂ [ ]]a25◂ [ a17◂ [ ]{| l |}]}]a25◂ [ a17◂ [ ]{| l |}]}] )
	mov r14,r13
; .mov_ptn 1(<2)◂1'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 0'(= a43◂ [ *{ a2◂ [ *{ {| l |}a16◂ [ a21◂ [ {| l |}]]a3◂ [ a31◂ [ ]]a25◂ [ a17◂ [ ]{| l |}]}]a25◂ [ a17◂ [ ]{| l |}]}] )
	mov rax,r14
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],1
	mov QWORD [rax+8],rdi
	mov r13,rax
	ret
ETR_246:
	mov r9,0x0000_ffff_ffff_ffff
	and r9,[r13]
	call GRM_246
	ret
GRM_246:
	PUSH_GRM
	jmp LB_3550
LB_3549:
	add r14,1 
LB_3550:
	cmp r14,r9
	jge LB_3551
	JZ_SPC BYTE [r13+8+r14], LB_3549
LB_3551
	call GRM_219
	cmp BYTE [r8+6],0
	jnz LB_3554
	jmp LB_3555
LB_3554:
	jmp LB_3552
LB_3555:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a43◂ [ *{ }] ) ⊢ 8'(= a43◂ [ *{ }] )
; .mov_ptn 2'(= a43◂ [ *{ }] ) ⊢ 8'(= a43◂ [ *{ }] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_3553
LB_3552:
	add rsp,0
	jmp LB_3548
LB_3553:
	jmp LB_3557
LB_3556:
	add r14,1 
LB_3557:
	cmp r14,r9
	jge LB_3558
	JZ_SPC BYTE [r13+8+r14], LB_3556
LB_3558
	call GRM_247
	cmp BYTE [r8+6],0
	jnz LB_3561
	jmp LB_3562
LB_3561:
	jmp LB_3559
LB_3562:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a43◂ [ a39◂ [ ]] ) ⊢ 9'(= a43◂ [ a39◂ [ ]] )
; .mov_ptn 2'(= a43◂ [ a39◂ [ ]] ) ⊢ 9'(= a43◂ [ a39◂ [ ]] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_3560
LB_3559:
	add rsp,8
	jmp LB_3548
LB_3560:
	jmp LB_3564
LB_3563:
	add r14,1 
LB_3564:
	cmp r14,r9
	jge LB_3565
	JZ_SPC BYTE [r13+8+r14], LB_3563
LB_3565
	call GRM_246
	cmp BYTE [r8+6],0
	jnz LB_3568
	jmp LB_3569
LB_3568:
	jmp LB_3566
LB_3569:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a43◂ [ a2◂ [ a39◂ [ ]]] ) ⊢ 10'(= a43◂ [ a2◂ [ a39◂ [ ]]] )
; .mov_ptn 2'(= a43◂ [ a2◂ [ a39◂ [ ]]] ) ⊢ 10'(= a43◂ [ a2◂ [ a39◂ [ ]]] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_3567
LB_3566:
	add rsp,16
	jmp LB_3548
LB_3567:
	mov QWORD [rsp+8*3],r14
	mov r13,QWORD [rsp+16+8*3]
	mov r14,QWORD [rsp+8*3]
	jmp LB_3570
LB_3570
; #197 { 9'(= a43◂ [ a39◂ [ ]] ) 10'(= a43◂ [ a2◂ [ a39◂ [ ]]] ) } ⊢ 2'(= a43◂ [ *{ a39◂ [ ]a2◂ [ a39◂ [ ]]}] )
	sub rsp,16
	mov QWORD [rsp+8*0],r13
	mov QWORD [rsp+8*1],r14
; .mov_ptn2 { 9'(= a43◂ [ a39◂ [ ]] ) 10'(= a43◂ [ a2◂ [ a39◂ [ ]]] ) } ⊢ { 0'(= a43◂ [ a39◂ [ ]] ) 1'(= a43◂ [ a2◂ [ a39◂ [ ]]] ) }
; .mov_ptn 10'(= a43◂ [ a2◂ [ a39◂ [ ]]] ) ⊢ 1'(= a43◂ [ a2◂ [ a39◂ [ ]]] )
	mov rax,QWORD [rsp-8+8*3]
	mov r14,rax
; .mov_ptn 9'(= a43◂ [ a39◂ [ ]] ) ⊢ 0'(= a43◂ [ a39◂ [ ]] )
	mov rax,QWORD [rsp-8+8*4]
	mov r13,rax
	call LB_3572
	mov r14,QWORD [rsp-8+8*2]
	mov r8,r13
	mov r13,QWORD [rsp-8+8*1]
	add rsp,32
;; ? 2'(= a43◂ [ *{ a39◂ [ ]a2◂ [ a39◂ [ ]]}] ) ⊢ 0(<2)◂{ 3'(= a39◂ [ ] ) 4'(= a2◂ [ a39◂ [ ]] ) }
	mov rdi,r8
	cmp BYTE [rdi+6],0
	jnz LB_3631
	mov r9, QWORD [r8+8]
	mov r10, QWORD [r8+16]
	mov QWORD [GBG_VCT+8*0],r8
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_RCD 2,rdi
; #23 { 3'(= a39◂ [ ] ) 4'(= a2◂ [ a39◂ [ ]] ) } ⊢ 0(<2)◂{ 3'(= a39◂ [ ] ) 4'(= a2◂ [ a39◂ [ ]] ) }
; #196 0(<2)◂{ 3'(= a39◂ [ ] ) 4'(= a2◂ [ a39◂ [ ]] ) } ⊢ 0(<2)◂0(<2)◂{ 3'(= a39◂ [ ] ) 4'(= a2◂ [ a39◂ [ ]] ) }
; #24 0(<2)◂0(<2)◂{ 3'(= a39◂ [ ] ) 4'(= a2◂ [ a39◂ [ ]] ) } ⊢ 0(<2)◂0(<2)◂0(<2)◂{ 3'(= a39◂ [ ] ) 4'(= a2◂ [ a39◂ [ ]] ) }
; ∎ 0(<2)◂0(<2)◂0(<2)◂{ 3'(= a39◂ [ ] ) 4'(= a2◂ [ a39◂ [ ]] ) }
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 8'(= a43◂ [ *{ }] )
	mov rdi,QWORD [rsp-8+8*1]
	C_PUSH_REGS
	mov r8,rdi
	call LB_1706
	C_POP_REGS
; .mov_ptn2 0(<2)◂0(<2)◂0(<2)◂{ 3'(= a39◂ [ ] ) 4'(= a2◂ [ a39◂ [ ]] ) } ⊢ 2'(= a3◂ [ a43◂ [ a2◂ [ a39◂ [ ]]]] )
; .mov_ptn 0(<2)◂0(<2)◂0(<2)◂{ 3'(= a39◂ [ ] ) 4'(= a2◂ [ a39◂ [ ]] ) } ⊢ 2'(= a3◂ [ a43◂ [ a2◂ [ a39◂ [ ]]]] )
	ALC_RCD 2, rax
	mov r13,rax
	mov rax,r9
	mov QWORD [r13+8+8*0],rax
	mov rax,r10
	mov QWORD [r13+8+8*1],rax
	mov rax,r13
	mov BYTE [rax+6],0
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,8
	jmp LB_3571
LB_3631:
;; ?. 2'(= a43◂ [ *{ a39◂ [ ]a2◂ [ a39◂ [ ]]}] ) ⊢ 1(<2)◂3'(= a2◂ [ *{ rr{| l |}}] )
	mov QWORD [GBG_VCT+8*0],rdi
	mov r9,QWORD [rdi+8]
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_LN rdi
; #195 3'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 1(<2)◂3'(= a2◂ [ *{ rr{| l |}}] )
; #24 1(<2)◂3'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 0(<2)◂1(<2)◂3'(= a2◂ [ *{ rr{| l |}}] )
; ∎ 0(<2)◂1(<2)◂3'(= a2◂ [ *{ rr{| l |}}] )
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 8'(= a43◂ [ *{ }] )
	mov rdi,QWORD [rsp-8+8*1]
	C_PUSH_REGS
	mov r8,rdi
	call LB_1706
	C_POP_REGS
; .mov_ptn2 0(<2)◂1(<2)◂3'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 2'(= a3◂ [ a43◂ [ a2◂ [ a39◂ [ ]]]] )
; .mov_ptn 0(<2)◂1(<2)◂3'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 2'(= a3◂ [ a43◂ [ a2◂ [ a39◂ [ ]]]] )
	mov rax,r9
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],1
	mov QWORD [rax+8],rdi
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,8
	jmp LB_3571
LB_3571:
	cmp BYTE [r8+6],0
	jnz LB_3548
	POP_GRM_SCC
	ret
LB_3548:
	RB_GRM
	jmp LB_3634
LB_3633:
	add r14,1 
LB_3634:
	cmp r14,r9
	jge LB_3635
	JZ_SPC BYTE [r13+8+r14], LB_3633
LB_3635
	call GRM_219
	cmp BYTE [r8+6],0
	jnz LB_3638
	jmp LB_3639
LB_3638:
	jmp LB_3636
LB_3639:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a43◂ [ *{ }] ) ⊢ 8'(= a43◂ [ *{ }] )
; .mov_ptn 2'(= a43◂ [ *{ }] ) ⊢ 8'(= a43◂ [ *{ }] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_3637
LB_3636:
	add rsp,0
	jmp LB_3632
LB_3637:
	PUSH_GRM
	jmp LB_3643
LB_3642:
	add r14,1 
LB_3643:
	cmp r14,r9
	jge LB_3644
	JZ_SPC BYTE [r13+8+r14], LB_3642
LB_3644
	cmp r14,r9
	jge LB_3647
	jmp LB_3648
LB_3647:
	mov r8,unt_1 
	jmp LB_3645
LB_3648:
	movzx rdi,BYTE [r13+8+r14]
	push rdi 
	add r14,1 
	jmp LB_3646
LB_3645:
	add rsp,0
	jmp LB_3641
LB_3646:
	mov QWORD [rsp+8*1],r14
	mov r13,QWORD [rsp+16+8*1]
	mov r14,QWORD [rsp+8*1]
	jmp LB_3649
LB_3649
; $ %[ "file end" ] ⊢ %[ "file end" ]
; #10 %[ "file end" ] ⊢ %[ "file end" ]
	mov rdi,fmt_emt
	call emt_stg
	mov rdi,LB_3651
	call emt_stg 
	mov rdi,fmt_nl
	call emt_stg
	jmp LB_3652
LB_3652:
; #25 { } ⊢ 1(<2)◂{ }
; ∎ 1(<2)◂{ }
; .dlt.ptn %[ "file end" ]
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 8'(= r )
	mov rdi,QWORD [rsp-8+8*1]
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 1(<2)◂{ } ⊢ 2'(= a3◂ [ *{ }] )
; .mov_ptn 1(<2)◂{ } ⊢ 2'(= a3◂ [ *{ }] )
	mov rax,unt 
	mov rax,unt_1
	mov r8,rax
	add rsp,8
	jmp LB_3650
LB_3650:
	cmp BYTE [r8+6],0
	jnz LB_3641
	POP_GRM_SCC
	jmp LB_3640
LB_3641:
	RB_GRM
	mov QWORD [rsp+8*0],r14
	mov r13,QWORD [rsp+16+8*0]
	mov r14,QWORD [rsp+8*0]
	jmp LB_3654
LB_3654
; $ %[ "file end nl" ] ⊢ %[ "file end nl" ]
; #10 %[ "file end nl" ] ⊢ %[ "file end nl" ]
	mov rdi,fmt_emt
	call emt_stg
	mov rdi,LB_3656
	call emt_stg 
	mov rdi,fmt_nl
	call emt_stg
	jmp LB_3657
LB_3657:
; #24 { } ⊢ 0(<2)◂{ }
; ∎ 0(<2)◂{ }
; .dlt.ptn %[ "file end nl" ]
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂{ } ⊢ 2'(= a3◂ [ *{ }] )
; .mov_ptn 0(<2)◂{ } ⊢ 2'(= a3◂ [ *{ }] )
	mov rax,unt 
	mov rax,unt_0
	mov r8,rax
	jmp LB_3655
LB_3655:
	cmp BYTE [r8+6],0
	jnz LB_3653
	POP_GRM_SCC
	jmp LB_3640
LB_3653:
	POP_GRM_FAIL 
	jmp LB_3640
LB_3640:
	cmp BYTE [r8+6],0
	jnz LB_3658
	jmp LB_3659
LB_3658:
	add rsp,8
	POP_GRM_FAIL
	ret
LB_3659:
	mov QWORD [rsp+8*1],r14
; .mov_ptn2 2'(= *{ } ) ⊢ { }
; .mov_ptn 2'(= *{ } ) ⊢ { }
	mov r13,QWORD [rsp+16+8*1]
	mov r14,QWORD [rsp+8*1]
	jmp LB_3660
LB_3660
; #22 { } ⊢ 1(<2)◂{ }
; #196 1(<2)◂{ } ⊢ 0(<2)◂1(<2)◂{ }
; #24 0(<2)◂1(<2)◂{ } ⊢ 0(<2)◂0(<2)◂1(<2)◂{ }
; ∎ 0(<2)◂0(<2)◂1(<2)◂{ }
; .dlt.ptn { }
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 8'(= a43◂ [ *{ }] )
	mov rdi,QWORD [rsp-8+8*1]
	C_PUSH_REGS
	mov r8,rdi
	call LB_1706
	C_POP_REGS
; .mov_ptn2 0(<2)◂0(<2)◂1(<2)◂{ } ⊢ 2'(= a3◂ [ a43◂ [ a2◂ [ a39◂ [ ]]]] )
; .mov_ptn 0(<2)◂0(<2)◂1(<2)◂{ } ⊢ 2'(= a3◂ [ a43◂ [ a2◂ [ a39◂ [ ]]]] )
	mov rax,unt 
	mov rax,unt_1
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,8
	jmp LB_3661
LB_3661:
	cmp BYTE [r8+6],0
	jnz LB_3632
	POP_GRM_SCC
	ret
LB_3632:
	POP_GRM_FAIL 
	ret
ETR_247:
	mov r9,0x0000_ffff_ffff_ffff
	and r9,[r13]
	call GRM_247
	ret
GRM_247:
	PUSH_GRM
	jmp LB_3664
LB_3663:
	add r14,1 
LB_3664:
	cmp r14,r9
	jge LB_3665
	JZ_SPC BYTE [r13+8+r14], LB_3663
LB_3665
	lea rax,[r14+7]
	cmp rax,r9
	jg LB_3668
	jmp LB_3669
LB_3668:
	mov r8,unt_1
	jmp LB_3666
LB_3669:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],194
	jnz LB_3670
	cmp BYTE [rdi+1],167
	jnz LB_3670
	cmp BYTE [rdi+2],194
	jnz LB_3670
	cmp BYTE [rdi+3],167
	jnz LB_3670
	cmp BYTE [rdi+4],43
	jnz LB_3670
	cmp BYTE [rdi+5],115
	jnz LB_3670
	cmp BYTE [rdi+6],56
	jnz LB_3670
	jmp LB_3671
LB_3670:
	mov r8,unt_1
	jmp LB_3666
LB_3671:
	add r14,7
	jmp LB_3667
LB_3666:
	add rsp,0
	jmp LB_3662
LB_3667:
	PUSH_GRM
	jmp LB_3675
LB_3674:
	add r14,1 
LB_3675:
	cmp r14,r9
	jge LB_3676
	JZ_SPC BYTE [r13+8+r14], LB_3674
LB_3676
	call GRM_262
	cmp BYTE [r8+6],0
	jnz LB_3679
	jmp LB_3680
LB_3679:
	jmp LB_3677
LB_3680:
	sub rsp,16
; .mov_ptn2 2'(= *{ {| l |}a32◂ [ a17◂ [ ]{| l |}]} ) ⊢ { 8'(= {| l |} ) 9'(= a32◂ [ a17◂ [ ]{| l |}] ) }
; .mov_ptn 2'(= *{ {| l |}a32◂ [ a17◂ [ ]{| l |}]} ) ⊢ { 8'(= {| l |} ) 9'(= a32◂ [ a17◂ [ ]{| l |}] ) }
	mov r10, QWORD [r8+8]
	mov QWORD [rsp-8+8*2],r10
	mov r11, QWORD [r8+16]
	mov QWORD [rsp-8+8*1],r11
	mov rdi,r8
	FREE_RCD 2,rdi
	jmp LB_3678
LB_3677:
	add rsp,0
	jmp LB_3673
LB_3678:
	jmp LB_3682
LB_3681:
	add r14,1 
LB_3682:
	cmp r14,r9
	jge LB_3683
	JZ_SPC BYTE [r13+8+r14], LB_3681
LB_3683
	call GRM_263
	cmp BYTE [r8+6],0
	jnz LB_3686
	jmp LB_3687
LB_3686:
	jmp LB_3684
LB_3687:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a2◂ [ *{ {| l |}a32◂ [ a17◂ [ ]{| l |}]}] ) ⊢ 10'(= a2◂ [ *{ {| l |}a32◂ [ a17◂ [ ]{| l |}]}] )
; .mov_ptn 2'(= a2◂ [ *{ {| l |}a32◂ [ a17◂ [ ]{| l |}]}] ) ⊢ 10'(= a2◂ [ *{ {| l |}a32◂ [ a17◂ [ ]{| l |}]}] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_3685
LB_3684:
	add rsp,16
	jmp LB_3673
LB_3685:
	mov QWORD [rsp+8*3],r14
	mov r13,QWORD [rsp+16+8*3]
	mov r14,QWORD [rsp+8*3]
	jmp LB_3688
LB_3688
; #23 { { 8'(= {| l |} ) 9'(= a32◂ [ a17◂ [ ]{| l |}] ) } 10'(= a2◂ [ *{ {| l |}a32◂ [ a17◂ [ ]{| l |}]}] ) } ⊢ 0(<2)◂{ { 8'(= {| l |} ) 9'(= a32◂ [ a17◂ [ ]{| l |}] ) } 10'(= a2◂ [ *{ {| l |}a32◂ [ a17◂ [ ]{| l |}]}] ) }
; #178 0(<2)◂{ { 8'(= {| l |} ) 9'(= a32◂ [ a17◂ [ ]{| l |}] ) } 10'(= a2◂ [ *{ {| l |}a32◂ [ a17◂ [ ]{| l |}]}] ) } ⊢ 1(<6)◂0(<2)◂{ { 8'(= {| l |} ) 9'(= a32◂ [ a17◂ [ ]{| l |}] ) } 10'(= a2◂ [ *{ {| l |}a32◂ [ a17◂ [ ]{| l |}]}] ) }
; #196 1(<6)◂0(<2)◂{ { 8'(= {| l |} ) 9'(= a32◂ [ a17◂ [ ]{| l |}] ) } 10'(= a2◂ [ *{ {| l |}a32◂ [ a17◂ [ ]{| l |}]}] ) } ⊢ 0(<2)◂1(<6)◂0(<2)◂{ { 8'(= {| l |} ) 9'(= a32◂ [ a17◂ [ ]{| l |}] ) } 10'(= a2◂ [ *{ {| l |}a32◂ [ a17◂ [ ]{| l |}]}] ) }
; #24 0(<2)◂1(<6)◂0(<2)◂{ { 8'(= {| l |} ) 9'(= a32◂ [ a17◂ [ ]{| l |}] ) } 10'(= a2◂ [ *{ {| l |}a32◂ [ a17◂ [ ]{| l |}]}] ) } ⊢ 0(<2)◂0(<2)◂1(<6)◂0(<2)◂{ { 8'(= {| l |} ) 9'(= a32◂ [ a17◂ [ ]{| l |}] ) } 10'(= a2◂ [ *{ {| l |}a32◂ [ a17◂ [ ]{| l |}]}] ) }
; ∎ 0(<2)◂0(<2)◂1(<6)◂0(<2)◂{ { 8'(= {| l |} ) 9'(= a32◂ [ a17◂ [ ]{| l |}] ) } 10'(= a2◂ [ *{ {| l |}a32◂ [ a17◂ [ ]{| l |}]}] ) }
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂0(<2)◂1(<6)◂0(<2)◂{ { 8'(= {| l |} ) 9'(= a32◂ [ a17◂ [ ]{| l |}] ) } 10'(= a2◂ [ *{ {| l |}a32◂ [ a17◂ [ ]{| l |}]}] ) } ⊢ 2'(= a3◂ [ a43◂ [ a39◂ [ ]]] )
; .mov_ptn 0(<2)◂0(<2)◂1(<6)◂0(<2)◂{ { 8'(= {| l |} ) 9'(= a32◂ [ a17◂ [ ]{| l |}] ) } 10'(= a2◂ [ *{ {| l |}a32◂ [ a17◂ [ ]{| l |}]}] ) } ⊢ 2'(= a3◂ [ a43◂ [ a39◂ [ ]]] )
	ALC_RCD 2, rax
	mov r13,rax
	ALC_RCD 2, rax
	mov r14,rax
	mov rax,QWORD [rsp-8+8*3]
	mov QWORD [r14+8+8*0],rax
	mov rax,QWORD [rsp-8+8*2]
	mov QWORD [r14+8+8*1],rax
	mov rax,r14
	mov QWORD [r13+8+8*0],rax
	mov rax,QWORD [rsp-8+8*1]
	mov QWORD [r13+8+8*1],rax
	mov rax,r13
	mov BYTE [rax+6],0
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],1
	mov QWORD [rax+8],rdi
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,24
	jmp LB_3689
LB_3689:
	cmp BYTE [r8+6],0
	jnz LB_3673
	POP_GRM_SCC
	jmp LB_3672
LB_3673:
	RB_GRM
	jmp LB_3692
LB_3691:
	add r14,1 
LB_3692:
	cmp r14,r9
	jge LB_3693
	JZ_SPC BYTE [r13+8+r14], LB_3691
LB_3693
	call GRM_248
	cmp BYTE [r8+6],0
	jnz LB_3696
	jmp LB_3697
LB_3696:
	jmp LB_3694
LB_3697:
; .mov_ptn2 2'(= *{ } ) ⊢ { }
; .mov_ptn 2'(= *{ } ) ⊢ { }
	jmp LB_3695
LB_3694:
	add rsp,0
	jmp LB_3690
LB_3695:
	mov QWORD [rsp+8*0],r14
	mov r13,QWORD [rsp+16+8*0]
	mov r14,QWORD [rsp+8*0]
	jmp LB_3698
LB_3698
; #22 { } ⊢ 1(<2)◂{ }
; $ %[ "grb_etr 1" ] ⊢ %[ "grb_etr 1" ]
; #23 { { 0'(= r ) 1'(= r ) %[ "grb_etr 1" ] } 1(<2)◂{ } } ⊢ 0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "grb_etr 1" ] } 1(<2)◂{ } }
; #195 0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "grb_etr 1" ] } 1(<2)◂{ } } ⊢ 1(<2)◂0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "grb_etr 1" ] } 1(<2)◂{ } }
; #24 1(<2)◂0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "grb_etr 1" ] } 1(<2)◂{ } } ⊢ 0(<2)◂1(<2)◂0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "grb_etr 1" ] } 1(<2)◂{ } }
; ∎ 0(<2)◂1(<2)◂0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "grb_etr 1" ] } 1(<2)◂{ } }
; .dlt.ptn { }
; .mov_ptn2 0(<2)◂1(<2)◂0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "grb_etr 1" ] } 1(<2)◂{ } } ⊢ 2'(= a3◂ [ a43◂ [ a39◂ [ ]]] )
; .mov_ptn 0(<2)◂1(<2)◂0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "grb_etr 1" ] } 1(<2)◂{ } } ⊢ 2'(= a3◂ [ a43◂ [ a39◂ [ ]]] )
	ALC_RCD 2, rax
	mov r9,rax
	ALC_RCD 3, rax
	mov r10,rax
	mov rax,r13
	mov QWORD [r10+8+8*0],rax
	mov rax,r14
	mov QWORD [r10+8+8*1],rax
	mov rsi,1  
	mov rdi,24
	xor rax,rax 
	C_CALL_SF calloc
	mov QWORD [rax],9
	mov BYTE [rax+8+0],103
	mov BYTE [rax+8+1],114
	mov BYTE [rax+8+2],98
	mov BYTE [rax+8+3],95
	mov BYTE [rax+8+4],101
	mov BYTE [rax+8+5],116
	mov BYTE [rax+8+6],114
	mov BYTE [rax+8+7],32
	mov BYTE [rax+8+8],49
	mov QWORD [r10+8+8*2],rax
	mov rax,r10
	mov QWORD [r9+8+8*0],rax
	mov rax,unt 
	mov rax,unt_1
	mov QWORD [r9+8+8*1],rax
	mov rax,r9
	mov BYTE [rax+6],0
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],1
	mov QWORD [rax+8],rdi
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	jmp LB_3699
LB_3699:
	cmp BYTE [r8+6],0
	jnz LB_3690
	POP_GRM_SCC
	jmp LB_3672
LB_3690:
	POP_GRM_FAIL 
	jmp LB_3672
LB_3672:
	cmp BYTE [r8+6],0
	jnz LB_3700
	jmp LB_3701
LB_3700:
	add rsp,0
	POP_GRM_FAIL
	ret
LB_3701:
	mov QWORD [rsp+8*0],r14
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi 
; .mov_ptn2 2'(= a43◂ [ a39◂ [ ]] ) ⊢ 3'(= a43◂ [ a39◂ [ ]] )
	mov r10,r9
; .mov_ptn 2'(= a43◂ [ a39◂ [ ]] ) ⊢ 3'(= a43◂ [ a39◂ [ ]] )
	mov rax,r8
	mov r9,rax
	mov r13,QWORD [rsp+16+8*0]
	mov r14,QWORD [rsp+8*0]
	jmp LB_3702
LB_3702
; #24 3'(= a43◂ [ a39◂ [ ]] ) ⊢ 0(<2)◂3'(= a43◂ [ a39◂ [ ]] )
; ∎ 0(<2)◂3'(= a43◂ [ a39◂ [ ]] )
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂3'(= a43◂ [ a39◂ [ ]] ) ⊢ 2'(= a3◂ [ a43◂ [ a39◂ [ ]]] )
; .mov_ptn 0(<2)◂3'(= a43◂ [ a39◂ [ ]] ) ⊢ 2'(= a3◂ [ a43◂ [ a39◂ [ ]]] )
	mov rax,r9
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	jmp LB_3703
LB_3703:
	cmp BYTE [r8+6],0
	jnz LB_3662
	POP_GRM_SCC
	ret
LB_3662:
	RB_GRM
	jmp LB_3706
LB_3705:
	add r14,1 
LB_3706:
	cmp r14,r9
	jge LB_3707
	JZ_SPC BYTE [r13+8+r14], LB_3705
LB_3707
	call GRM_219
	cmp BYTE [r8+6],0
	jnz LB_3710
	jmp LB_3711
LB_3710:
	jmp LB_3708
LB_3711:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a43◂ [ *{ }] ) ⊢ 8'(= a43◂ [ *{ }] )
; .mov_ptn 2'(= a43◂ [ *{ }] ) ⊢ 8'(= a43◂ [ *{ }] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_3709
LB_3708:
	add rsp,0
	jmp LB_3704
LB_3709:
	jmp LB_3713
LB_3712:
	add r14,1 
LB_3713:
	cmp r14,r9
	jge LB_3714
	JZ_SPC BYTE [r13+8+r14], LB_3712
LB_3714
	lea rax,[r14+4]
	cmp rax,r9
	jg LB_3717
	jmp LB_3718
LB_3717:
	mov r8,unt_1
	jmp LB_3715
LB_3718:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],194
	jnz LB_3719
	cmp BYTE [rdi+1],167
	jnz LB_3719
	cmp BYTE [rdi+2],194
	jnz LB_3719
	cmp BYTE [rdi+3],167
	jnz LB_3719
	jmp LB_3720
LB_3719:
	mov r8,unt_1
	jmp LB_3715
LB_3720:
	add r14,4
	jmp LB_3716
LB_3715:
	add rsp,8
	jmp LB_3704
LB_3716:
	PUSH_GRM
	jmp LB_3724
LB_3723:
	add r14,1 
LB_3724:
	cmp r14,r9
	jge LB_3725
	JZ_SPC BYTE [r13+8+r14], LB_3723
LB_3725
	call GRM_77
	cmp BYTE [r8+6],0
	jnz LB_3728
	jmp LB_3729
LB_3728:
	jmp LB_3726
LB_3729:
	sub rsp,8
; .mov_ptn2 2'(= {| l |} ) ⊢ 8'(= {| l |} )
; .mov_ptn 2'(= {| l |} ) ⊢ 8'(= {| l |} )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_3727
LB_3726:
	add rsp,0
	jmp LB_3722
LB_3727:
	jmp LB_3731
LB_3730:
	add r14,1 
LB_3731:
	cmp r14,r9
	jge LB_3732
	JZ_SPC BYTE [r13+8+r14], LB_3730
LB_3732
	call GRM_250
	cmp BYTE [r8+6],0
	jnz LB_3735
	jmp LB_3736
LB_3735:
	jmp LB_3733
LB_3736:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a43◂ [ a40◂ [ ]] ) ⊢ 9'(= a43◂ [ a40◂ [ ]] )
; .mov_ptn 2'(= a43◂ [ a40◂ [ ]] ) ⊢ 9'(= a43◂ [ a40◂ [ ]] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_3734
LB_3733:
	add rsp,8
	jmp LB_3722
LB_3734:
	mov QWORD [rsp+8*2],r14
	mov r13,QWORD [rsp+16+8*2]
	mov r14,QWORD [rsp+8*2]
	jmp LB_3737
LB_3737
;; ? 9'(= a43◂ [ a40◂ [ ]] ) ⊢ 0(<2)◂2'(= a40◂ [ ] )
	mov rdi,QWORD [rsp-8+8*1]
	cmp BYTE [rdi+6],0
	jnz LB_3739
	mov QWORD [GBG_VCT+8*0],rdi
	mov r8,QWORD [rdi+8]
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_LN rdi
; #179 { 8'(= {| l |} ) 2'(= a40◂ [ ] ) } ⊢ 0(<6)◂{ 8'(= {| l |} ) 2'(= a40◂ [ ] ) }
; #196 0(<6)◂{ 8'(= {| l |} ) 2'(= a40◂ [ ] ) } ⊢ 0(<2)◂0(<6)◂{ 8'(= {| l |} ) 2'(= a40◂ [ ] ) }
; #24 0(<2)◂0(<6)◂{ 8'(= {| l |} ) 2'(= a40◂ [ ] ) } ⊢ 0(<2)◂0(<2)◂0(<6)◂{ 8'(= {| l |} ) 2'(= a40◂ [ ] ) }
; ∎ 0(<2)◂0(<2)◂0(<6)◂{ 8'(= {| l |} ) 2'(= a40◂ [ ] ) }
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂0(<2)◂0(<6)◂{ 8'(= {| l |} ) 2'(= a40◂ [ ] ) } ⊢ 2'(= a3◂ [ a43◂ [ a39◂ [ ]]] )
	mov r13,r8
; .mov_ptn 0(<2)◂0(<2)◂0(<6)◂{ 8'(= {| l |} ) 0'(= a40◂ [ ] ) } ⊢ 2'(= a3◂ [ a43◂ [ a39◂ [ ]]] )
	ALC_RCD 2, rax
	mov r14,rax
	mov rax,QWORD [rsp-8+8*2]
	mov QWORD [r14+8+8*0],rax
	mov rax,r13
	mov QWORD [r14+8+8*1],rax
	mov rax,r14
	mov BYTE [rax+6],0
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,16
	jmp LB_3738
LB_3739:
;; ?. 9'(= a43◂ [ a40◂ [ ]] ) ⊢ 1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] )
	mov QWORD [GBG_VCT+8*0],rdi
	mov r8,QWORD [rdi+8]
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_LN rdi
; #195 2'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] )
; #24 1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 0(<2)◂1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] )
; ∎ 0(<2)◂1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] )
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 8'(= {| l |} )
	mov rdi,QWORD [rsp-8+8*2]
	C_PUSH_REGS
	mov r8,rdi
	mov rdi,r8
	call free_s8
	C_POP_REGS
; .mov_ptn2 0(<2)◂1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 2'(= a3◂ [ a43◂ [ a39◂ [ ]]] )
	mov r13,r8
; .mov_ptn 0(<2)◂1(<2)◂0'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 2'(= a3◂ [ a43◂ [ a39◂ [ ]]] )
	mov rax,r13
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],1
	mov QWORD [rax+8],rdi
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,16
	jmp LB_3738
LB_3738:
	cmp BYTE [r8+6],0
	jnz LB_3722
	POP_GRM_SCC
	jmp LB_3721
LB_3722:
	RB_GRM
	jmp LB_3742
LB_3741:
	add r14,1 
LB_3742:
	cmp r14,r9
	jge LB_3743
	JZ_SPC BYTE [r13+8+r14], LB_3741
LB_3743
	call GRM_249
	cmp BYTE [r8+6],0
	jnz LB_3746
	jmp LB_3747
LB_3746:
	jmp LB_3744
LB_3747:
; .mov_ptn2 2'(= *{ } ) ⊢ { }
; .mov_ptn 2'(= *{ } ) ⊢ { }
	jmp LB_3745
LB_3744:
	add rsp,0
	jmp LB_3740
LB_3745:
	mov QWORD [rsp+8*0],r14
	mov r13,QWORD [rsp+16+8*0]
	mov r14,QWORD [rsp+8*0]
	jmp LB_3748
LB_3748
; #22 { } ⊢ 1(<2)◂{ }
; $ %[ "glb_etr 0.1" ] ⊢ %[ "glb_etr 0.1" ]
; #23 { { 0'(= r ) 1'(= r ) %[ "glb_etr 0.1" ] } 1(<2)◂{ } } ⊢ 0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "glb_etr 0.1" ] } 1(<2)◂{ } }
; #195 0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "glb_etr 0.1" ] } 1(<2)◂{ } } ⊢ 1(<2)◂0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "glb_etr 0.1" ] } 1(<2)◂{ } }
; #24 1(<2)◂0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "glb_etr 0.1" ] } 1(<2)◂{ } } ⊢ 0(<2)◂1(<2)◂0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "glb_etr 0.1" ] } 1(<2)◂{ } }
; ∎ 0(<2)◂1(<2)◂0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "glb_etr 0.1" ] } 1(<2)◂{ } }
; .dlt.ptn { }
; .mov_ptn2 0(<2)◂1(<2)◂0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "glb_etr 0.1" ] } 1(<2)◂{ } } ⊢ 2'(= a3◂ [ a43◂ [ a39◂ [ ]]] )
; .mov_ptn 0(<2)◂1(<2)◂0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "glb_etr 0.1" ] } 1(<2)◂{ } } ⊢ 2'(= a3◂ [ a43◂ [ a39◂ [ ]]] )
	ALC_RCD 2, rax
	mov r9,rax
	ALC_RCD 3, rax
	mov r10,rax
	mov rax,r13
	mov QWORD [r10+8+8*0],rax
	mov rax,r14
	mov QWORD [r10+8+8*1],rax
	mov rsi,1  
	mov rdi,24
	xor rax,rax 
	C_CALL_SF calloc
	mov QWORD [rax],11
	mov BYTE [rax+8+0],103
	mov BYTE [rax+8+1],108
	mov BYTE [rax+8+2],98
	mov BYTE [rax+8+3],95
	mov BYTE [rax+8+4],101
	mov BYTE [rax+8+5],116
	mov BYTE [rax+8+6],114
	mov BYTE [rax+8+7],32
	mov BYTE [rax+8+8],48
	mov BYTE [rax+8+9],46
	mov BYTE [rax+8+10],49
	mov QWORD [r10+8+8*2],rax
	mov rax,r10
	mov QWORD [r9+8+8*0],rax
	mov rax,unt 
	mov rax,unt_1
	mov QWORD [r9+8+8*1],rax
	mov rax,r9
	mov BYTE [rax+6],0
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],1
	mov QWORD [rax+8],rdi
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	jmp LB_3749
LB_3749:
	cmp BYTE [r8+6],0
	jnz LB_3740
	POP_GRM_SCC
	jmp LB_3721
LB_3740:
	POP_GRM_FAIL 
	jmp LB_3721
LB_3721:
	cmp BYTE [r8+6],0
	jnz LB_3750
	jmp LB_3751
LB_3750:
	add rsp,8
	POP_GRM_FAIL
	ret
LB_3751:
	mov QWORD [rsp+8*1],r14
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi 
; .mov_ptn2 2'(= a43◂ [ a39◂ [ ]] ) ⊢ 3'(= a43◂ [ a39◂ [ ]] )
	mov r10,r9
; .mov_ptn 2'(= a43◂ [ a39◂ [ ]] ) ⊢ 3'(= a43◂ [ a39◂ [ ]] )
	mov rax,r8
	mov r9,rax
	mov r13,QWORD [rsp+16+8*1]
	mov r14,QWORD [rsp+8*1]
	jmp LB_3752
LB_3752
; #24 3'(= a43◂ [ a39◂ [ ]] ) ⊢ 0(<2)◂3'(= a43◂ [ a39◂ [ ]] )
; ∎ 0(<2)◂3'(= a43◂ [ a39◂ [ ]] )
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 8'(= a43◂ [ *{ }] )
	mov rdi,QWORD [rsp-8+8*1]
	C_PUSH_REGS
	mov r8,rdi
	call LB_1706
	C_POP_REGS
; .mov_ptn2 0(<2)◂3'(= a43◂ [ a39◂ [ ]] ) ⊢ 2'(= a3◂ [ a43◂ [ a39◂ [ ]]] )
; .mov_ptn 0(<2)◂3'(= a43◂ [ a39◂ [ ]] ) ⊢ 2'(= a3◂ [ a43◂ [ a39◂ [ ]]] )
	mov rax,r9
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,8
	jmp LB_3753
LB_3753:
	cmp BYTE [r8+6],0
	jnz LB_3704
	POP_GRM_SCC
	ret
LB_3704:
	RB_GRM
	jmp LB_3756
LB_3755:
	add r14,1 
LB_3756:
	cmp r14,r9
	jge LB_3757
	JZ_LINE_SPC BYTE [r13+8+r14], LB_3755
LB_3757
	call GRM_228
	cmp BYTE [r8+6],0
	jnz LB_3760
	jmp LB_3761
LB_3760:
	jmp LB_3758
LB_3761:
; .mov_ptn2 2'(= *{ } ) ⊢ { }
; .mov_ptn 2'(= *{ } ) ⊢ { }
	jmp LB_3759
LB_3758:
	add rsp,0
	jmp LB_3754
LB_3759:
	jmp LB_3763
LB_3762:
	add r14,1 
LB_3763:
	cmp r14,r9
	jge LB_3764
	JZ_LINE_SPC BYTE [r13+8+r14], LB_3762
LB_3764
	lea rax,[r14+1]
	cmp rax,r9
	jg LB_3767
	jmp LB_3768
LB_3767:
	mov r8,unt_1
	jmp LB_3765
LB_3768:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],10
	jnz LB_3769
	jmp LB_3770
LB_3769:
	mov r8,unt_1
	jmp LB_3765
LB_3770:
	add r14,1
	jmp LB_3766
LB_3765:
	add rsp,0
	jmp LB_3754
LB_3766:
	jmp LB_3772
LB_3771:
	add r14,1 
LB_3772:
	cmp r14,r9
	jge LB_3773
	JZ_LINE_SPC BYTE [r13+8+r14], LB_3771
LB_3773
	call GRM_237
	cmp BYTE [r8+6],0
	jnz LB_3776
	jmp LB_3777
LB_3776:
	jmp LB_3774
LB_3777:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a43◂ [ a25◂ [ a17◂ [ ]{| l |}]] ) ⊢ 8'(= a43◂ [ a25◂ [ a17◂ [ ]{| l |}]] )
; .mov_ptn 2'(= a43◂ [ a25◂ [ a17◂ [ ]{| l |}]] ) ⊢ 8'(= a43◂ [ a25◂ [ a17◂ [ ]{| l |}]] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_3775
LB_3774:
	add rsp,0
	jmp LB_3754
LB_3775:
	mov QWORD [rsp+8*1],r14
	mov r13,QWORD [rsp+16+8*1]
	mov r14,QWORD [rsp+8*1]
	jmp LB_3778
LB_3778
;; ? 8'(= a43◂ [ a25◂ [ a17◂ [ ]{| l |}]] ) ⊢ 0(<2)◂2'(= a25◂ [ a17◂ [ ]{| l |}] )
	mov rdi,QWORD [rsp-8+8*1]
	cmp BYTE [rdi+6],0
	jnz LB_3780
	mov QWORD [GBG_VCT+8*0],rdi
	mov r8,QWORD [rdi+8]
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_LN rdi
; #169 2'(= a25◂ [ a17◂ [ ]{| l |}] ) ⊢ 2(<3)◂2'(= a25◂ [ a17◂ [ ]{| l |}] )
; $ %[ "" ] ⊢ %[ "" ]
; #177 { %[ "" ] 2(<3)◂2'(= a25◂ [ a17◂ [ ]{| l |}] ) } ⊢ 2(<6)◂{ %[ "" ] 2(<3)◂2'(= a25◂ [ a17◂ [ ]{| l |}] ) }
; #196 2(<6)◂{ %[ "" ] 2(<3)◂2'(= a25◂ [ a17◂ [ ]{| l |}] ) } ⊢ 0(<2)◂2(<6)◂{ %[ "" ] 2(<3)◂2'(= a25◂ [ a17◂ [ ]{| l |}] ) }
; #24 0(<2)◂2(<6)◂{ %[ "" ] 2(<3)◂2'(= a25◂ [ a17◂ [ ]{| l |}] ) } ⊢ 0(<2)◂0(<2)◂2(<6)◂{ %[ "" ] 2(<3)◂2'(= a25◂ [ a17◂ [ ]{| l |}] ) }
; ∎ 0(<2)◂0(<2)◂2(<6)◂{ %[ "" ] 2(<3)◂2'(= a25◂ [ a17◂ [ ]{| l |}] ) }
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂0(<2)◂2(<6)◂{ %[ "" ] 2(<3)◂2'(= a25◂ [ a17◂ [ ]{| l |}] ) } ⊢ 2'(= a3◂ [ a43◂ [ a39◂ [ ]]] )
	mov r13,r8
; .mov_ptn 0(<2)◂0(<2)◂2(<6)◂{ %[ "" ] 2(<3)◂0'(= a25◂ [ a17◂ [ ]{| l |}] ) } ⊢ 2'(= a3◂ [ a43◂ [ a39◂ [ ]]] )
	ALC_RCD 2, rax
	mov r14,rax
	mov rsi,1  
	mov rdi,16
	xor rax,rax 
	C_CALL_SF calloc
	mov QWORD [rax],0
	mov QWORD [r14+8+8*0],rax
	mov rax,r13
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],2
	mov QWORD [rax+8],rdi
	mov QWORD [r14+8+8*1],rax
	mov rax,r14
	mov BYTE [rax+6],2
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,8
	jmp LB_3779
LB_3780:
;; ?. 8'(= a43◂ [ a25◂ [ a17◂ [ ]{| l |}]] ) ⊢ 1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] )
	mov QWORD [GBG_VCT+8*0],rdi
	mov r8,QWORD [rdi+8]
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_LN rdi
; #195 2'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] )
; #24 1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 0(<2)◂1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] )
; ∎ 0(<2)◂1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] )
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 2'(= a3◂ [ a43◂ [ a39◂ [ ]]] )
	mov r13,r8
; .mov_ptn 0(<2)◂1(<2)◂0'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 2'(= a3◂ [ a43◂ [ a39◂ [ ]]] )
	mov rax,r13
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],1
	mov QWORD [rax+8],rdi
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,8
	jmp LB_3779
LB_3779:
	cmp BYTE [r8+6],0
	jnz LB_3754
	POP_GRM_SCC
	ret
LB_3754:
	RB_GRM
	jmp LB_3783
LB_3782:
	add r14,1 
LB_3783:
	cmp r14,r9
	jge LB_3784
	JZ_SPC BYTE [r13+8+r14], LB_3782
LB_3784
	lea rax,[r14+2]
	cmp rax,r9
	jg LB_3787
	jmp LB_3788
LB_3787:
	mov r8,unt_1
	jmp LB_3785
LB_3788:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],194
	jnz LB_3789
	cmp BYTE [rdi+1],167
	jnz LB_3789
	jmp LB_3790
LB_3789:
	mov r8,unt_1
	jmp LB_3785
LB_3790:
	add r14,2
	jmp LB_3786
LB_3785:
	add rsp,0
	jmp LB_3781
LB_3786:
	PUSH_GRM
	jmp LB_3794
LB_3793:
	add r14,1 
LB_3794:
	cmp r14,r9
	jge LB_3795
	JZ_SPC BYTE [r13+8+r14], LB_3793
LB_3795
	call GRM_258
	cmp BYTE [r8+6],0
	jnz LB_3798
	jmp LB_3799
LB_3798:
	jmp LB_3796
LB_3799:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a43◂ [ a39◂ [ ]] ) ⊢ 8'(= a43◂ [ a39◂ [ ]] )
; .mov_ptn 2'(= a43◂ [ a39◂ [ ]] ) ⊢ 8'(= a43◂ [ a39◂ [ ]] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_3797
LB_3796:
	add rsp,0
	jmp LB_3792
LB_3797:
	mov QWORD [rsp+8*1],r14
	mov r13,QWORD [rsp+16+8*1]
	mov r14,QWORD [rsp+8*1]
	jmp LB_3800
LB_3800
; #24 8'(= a43◂ [ a39◂ [ ]] ) ⊢ 0(<2)◂8'(= a43◂ [ a39◂ [ ]] )
; ∎ 0(<2)◂8'(= a43◂ [ a39◂ [ ]] )
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂8'(= a43◂ [ a39◂ [ ]] ) ⊢ 2'(= a3◂ [ a43◂ [ a39◂ [ ]]] )
; .mov_ptn 0(<2)◂8'(= a43◂ [ a39◂ [ ]] ) ⊢ 2'(= a3◂ [ a43◂ [ a39◂ [ ]]] )
	mov rax,QWORD [rsp-8+8*1]
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,8
	jmp LB_3801
LB_3801:
	cmp BYTE [r8+6],0
	jnz LB_3792
	POP_GRM_SCC
	jmp LB_3791
LB_3792:
	RB_GRM
	jmp LB_3804
LB_3803:
	add r14,1 
LB_3804:
	cmp r14,r9
	jge LB_3805
	JZ_SPC BYTE [r13+8+r14], LB_3803
LB_3805
	call GRM_248
	cmp BYTE [r8+6],0
	jnz LB_3808
	jmp LB_3809
LB_3808:
	jmp LB_3806
LB_3809:
; .mov_ptn2 2'(= *{ } ) ⊢ { }
; .mov_ptn 2'(= *{ } ) ⊢ { }
	jmp LB_3807
LB_3806:
	add rsp,0
	jmp LB_3802
LB_3807:
	mov QWORD [rsp+8*0],r14
	mov r13,QWORD [rsp+16+8*0]
	mov r14,QWORD [rsp+8*0]
	jmp LB_3810
LB_3810
; #22 { } ⊢ 1(<2)◂{ }
; $ %[ "glb_etr 3" ] ⊢ %[ "glb_etr 3" ]
; #23 { { 0'(= r ) 1'(= r ) %[ "glb_etr 3" ] } 1(<2)◂{ } } ⊢ 0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "glb_etr 3" ] } 1(<2)◂{ } }
; #195 0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "glb_etr 3" ] } 1(<2)◂{ } } ⊢ 1(<2)◂0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "glb_etr 3" ] } 1(<2)◂{ } }
; #24 1(<2)◂0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "glb_etr 3" ] } 1(<2)◂{ } } ⊢ 0(<2)◂1(<2)◂0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "glb_etr 3" ] } 1(<2)◂{ } }
; ∎ 0(<2)◂1(<2)◂0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "glb_etr 3" ] } 1(<2)◂{ } }
; .dlt.ptn { }
; .mov_ptn2 0(<2)◂1(<2)◂0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "glb_etr 3" ] } 1(<2)◂{ } } ⊢ 2'(= a3◂ [ a43◂ [ a39◂ [ ]]] )
; .mov_ptn 0(<2)◂1(<2)◂0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "glb_etr 3" ] } 1(<2)◂{ } } ⊢ 2'(= a3◂ [ a43◂ [ a39◂ [ ]]] )
	ALC_RCD 2, rax
	mov r9,rax
	ALC_RCD 3, rax
	mov r10,rax
	mov rax,r13
	mov QWORD [r10+8+8*0],rax
	mov rax,r14
	mov QWORD [r10+8+8*1],rax
	mov rsi,1  
	mov rdi,24
	xor rax,rax 
	C_CALL_SF calloc
	mov QWORD [rax],9
	mov BYTE [rax+8+0],103
	mov BYTE [rax+8+1],108
	mov BYTE [rax+8+2],98
	mov BYTE [rax+8+3],95
	mov BYTE [rax+8+4],101
	mov BYTE [rax+8+5],116
	mov BYTE [rax+8+6],114
	mov BYTE [rax+8+7],32
	mov BYTE [rax+8+8],51
	mov QWORD [r10+8+8*2],rax
	mov rax,r10
	mov QWORD [r9+8+8*0],rax
	mov rax,unt 
	mov rax,unt_1
	mov QWORD [r9+8+8*1],rax
	mov rax,r9
	mov BYTE [rax+6],0
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],1
	mov QWORD [rax+8],rdi
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	jmp LB_3811
LB_3811:
	cmp BYTE [r8+6],0
	jnz LB_3802
	POP_GRM_SCC
	jmp LB_3791
LB_3802:
	POP_GRM_FAIL 
	jmp LB_3791
LB_3791:
	cmp BYTE [r8+6],0
	jnz LB_3812
	jmp LB_3813
LB_3812:
	add rsp,0
	POP_GRM_FAIL
	ret
LB_3813:
	mov QWORD [rsp+8*0],r14
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi 
; .mov_ptn2 2'(= a43◂ [ a39◂ [ ]] ) ⊢ 3'(= a43◂ [ a39◂ [ ]] )
	mov r10,r9
; .mov_ptn 2'(= a43◂ [ a39◂ [ ]] ) ⊢ 3'(= a43◂ [ a39◂ [ ]] )
	mov rax,r8
	mov r9,rax
	mov r13,QWORD [rsp+16+8*0]
	mov r14,QWORD [rsp+8*0]
	jmp LB_3814
LB_3814
; #24 3'(= a43◂ [ a39◂ [ ]] ) ⊢ 0(<2)◂3'(= a43◂ [ a39◂ [ ]] )
; ∎ 0(<2)◂3'(= a43◂ [ a39◂ [ ]] )
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂3'(= a43◂ [ a39◂ [ ]] ) ⊢ 2'(= a3◂ [ a43◂ [ a39◂ [ ]]] )
; .mov_ptn 0(<2)◂3'(= a43◂ [ a39◂ [ ]] ) ⊢ 2'(= a3◂ [ a43◂ [ a39◂ [ ]]] )
	mov rax,r9
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	jmp LB_3815
LB_3815:
	cmp BYTE [r8+6],0
	jnz LB_3781
	POP_GRM_SCC
	ret
LB_3781:
	RB_GRM
	jmp LB_3818
LB_3817:
	add r14,1 
LB_3818:
	cmp r14,r9
	jge LB_3819
	JZ_SPC BYTE [r13+8+r14], LB_3817
LB_3819
	lea rax,[r14+2]
	cmp rax,r9
	jg LB_3822
	jmp LB_3823
LB_3822:
	mov r8,unt_1
	jmp LB_3820
LB_3823:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],194
	jnz LB_3824
	cmp BYTE [rdi+1],182
	jnz LB_3824
	jmp LB_3825
LB_3824:
	mov r8,unt_1
	jmp LB_3820
LB_3825:
	add r14,2
	jmp LB_3821
LB_3820:
	add rsp,0
	jmp LB_3816
LB_3821:
	PUSH_GRM
	jmp LB_3829
LB_3828:
	add r14,1 
LB_3829:
	cmp r14,r9
	jge LB_3830
	JZ_SPC BYTE [r13+8+r14], LB_3828
LB_3830
	call GRM_252
	cmp BYTE [r8+6],0
	jnz LB_3833
	jmp LB_3834
LB_3833:
	jmp LB_3831
LB_3834:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a39◂ [ ] ) ⊢ 8'(= a39◂ [ ] )
; .mov_ptn 2'(= a39◂ [ ] ) ⊢ 8'(= a39◂ [ ] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_3832
LB_3831:
	add rsp,0
	jmp LB_3827
LB_3832:
	mov QWORD [rsp+8*1],r14
	mov r13,QWORD [rsp+16+8*1]
	mov r14,QWORD [rsp+8*1]
	jmp LB_3835
LB_3835
; #196 8'(= a39◂ [ ] ) ⊢ 0(<2)◂8'(= a39◂ [ ] )
; #24 0(<2)◂8'(= a39◂ [ ] ) ⊢ 0(<2)◂0(<2)◂8'(= a39◂ [ ] )
; ∎ 0(<2)◂0(<2)◂8'(= a39◂ [ ] )
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂0(<2)◂8'(= a39◂ [ ] ) ⊢ 2'(= a3◂ [ a43◂ [ a39◂ [ ]]] )
; .mov_ptn 0(<2)◂0(<2)◂8'(= a39◂ [ ] ) ⊢ 2'(= a3◂ [ a43◂ [ a39◂ [ ]]] )
	mov rax,QWORD [rsp-8+8*1]
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,8
	jmp LB_3836
LB_3836:
	cmp BYTE [r8+6],0
	jnz LB_3827
	POP_GRM_SCC
	jmp LB_3826
LB_3827:
	RB_GRM
	jmp LB_3839
LB_3838:
	add r14,1 
LB_3839:
	cmp r14,r9
	jge LB_3840
	JZ_SPC BYTE [r13+8+r14], LB_3838
LB_3840
	call GRM_248
	cmp BYTE [r8+6],0
	jnz LB_3843
	jmp LB_3844
LB_3843:
	jmp LB_3841
LB_3844:
; .mov_ptn2 2'(= *{ } ) ⊢ { }
; .mov_ptn 2'(= *{ } ) ⊢ { }
	jmp LB_3842
LB_3841:
	add rsp,0
	jmp LB_3837
LB_3842:
	mov QWORD [rsp+8*0],r14
	mov r13,QWORD [rsp+16+8*0]
	mov r14,QWORD [rsp+8*0]
	jmp LB_3845
LB_3845
; #22 { } ⊢ 1(<2)◂{ }
; $ %[ "glb_etr 4" ] ⊢ %[ "glb_etr 4" ]
; #23 { { 0'(= r ) 1'(= r ) %[ "glb_etr 4" ] } 1(<2)◂{ } } ⊢ 0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "glb_etr 4" ] } 1(<2)◂{ } }
; #195 0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "glb_etr 4" ] } 1(<2)◂{ } } ⊢ 1(<2)◂0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "glb_etr 4" ] } 1(<2)◂{ } }
; #24 1(<2)◂0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "glb_etr 4" ] } 1(<2)◂{ } } ⊢ 0(<2)◂1(<2)◂0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "glb_etr 4" ] } 1(<2)◂{ } }
; ∎ 0(<2)◂1(<2)◂0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "glb_etr 4" ] } 1(<2)◂{ } }
; .dlt.ptn { }
; .mov_ptn2 0(<2)◂1(<2)◂0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "glb_etr 4" ] } 1(<2)◂{ } } ⊢ 2'(= a3◂ [ a43◂ [ a39◂ [ ]]] )
; .mov_ptn 0(<2)◂1(<2)◂0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "glb_etr 4" ] } 1(<2)◂{ } } ⊢ 2'(= a3◂ [ a43◂ [ a39◂ [ ]]] )
	ALC_RCD 2, rax
	mov r9,rax
	ALC_RCD 3, rax
	mov r10,rax
	mov rax,r13
	mov QWORD [r10+8+8*0],rax
	mov rax,r14
	mov QWORD [r10+8+8*1],rax
	mov rsi,1  
	mov rdi,24
	xor rax,rax 
	C_CALL_SF calloc
	mov QWORD [rax],9
	mov BYTE [rax+8+0],103
	mov BYTE [rax+8+1],108
	mov BYTE [rax+8+2],98
	mov BYTE [rax+8+3],95
	mov BYTE [rax+8+4],101
	mov BYTE [rax+8+5],116
	mov BYTE [rax+8+6],114
	mov BYTE [rax+8+7],32
	mov BYTE [rax+8+8],52
	mov QWORD [r10+8+8*2],rax
	mov rax,r10
	mov QWORD [r9+8+8*0],rax
	mov rax,unt 
	mov rax,unt_1
	mov QWORD [r9+8+8*1],rax
	mov rax,r9
	mov BYTE [rax+6],0
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],1
	mov QWORD [rax+8],rdi
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	jmp LB_3846
LB_3846:
	cmp BYTE [r8+6],0
	jnz LB_3837
	POP_GRM_SCC
	jmp LB_3826
LB_3837:
	POP_GRM_FAIL 
	jmp LB_3826
LB_3826:
	cmp BYTE [r8+6],0
	jnz LB_3847
	jmp LB_3848
LB_3847:
	add rsp,0
	POP_GRM_FAIL
	ret
LB_3848:
	mov QWORD [rsp+8*0],r14
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi 
; .mov_ptn2 2'(= a43◂ [ a39◂ [ ]] ) ⊢ 3'(= a43◂ [ a39◂ [ ]] )
	mov r10,r9
; .mov_ptn 2'(= a43◂ [ a39◂ [ ]] ) ⊢ 3'(= a43◂ [ a39◂ [ ]] )
	mov rax,r8
	mov r9,rax
	mov r13,QWORD [rsp+16+8*0]
	mov r14,QWORD [rsp+8*0]
	jmp LB_3849
LB_3849
; #24 3'(= a43◂ [ a39◂ [ ]] ) ⊢ 0(<2)◂3'(= a43◂ [ a39◂ [ ]] )
; ∎ 0(<2)◂3'(= a43◂ [ a39◂ [ ]] )
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂3'(= a43◂ [ a39◂ [ ]] ) ⊢ 2'(= a3◂ [ a43◂ [ a39◂ [ ]]] )
; .mov_ptn 0(<2)◂3'(= a43◂ [ a39◂ [ ]] ) ⊢ 2'(= a3◂ [ a43◂ [ a39◂ [ ]]] )
	mov rax,r9
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	jmp LB_3850
LB_3850:
	cmp BYTE [r8+6],0
	jnz LB_3816
	POP_GRM_SCC
	ret
LB_3816:
	POP_GRM_FAIL 
	ret
ETR_248:
	mov r9,0x0000_ffff_ffff_ffff
	and r9,[r13]
	call GRM_248
	ret
GRM_248:
	PUSH_GRM
	jmp LB_3853
LB_3852:
	add r14,1 
LB_3853:
	cmp r14,r9
	jge LB_3854
	JZ_SPC BYTE [r13+8+r14], LB_3852
LB_3854
	call GRM_224
	cmp BYTE [r8+6],0
	jnz LB_3857
	jmp LB_3858
LB_3857:
	jmp LB_3855
LB_3858:
; .mov_ptn2 2'(= *{ } ) ⊢ { }
; .mov_ptn 2'(= *{ } ) ⊢ { }
	jmp LB_3856
LB_3855:
	add rsp,0
	jmp LB_3851
LB_3856:
	jmp LB_3860
LB_3859:
	add r14,1 
LB_3860:
	cmp r14,r9
	jge LB_3861
	JZ_SPC BYTE [r13+8+r14], LB_3859
LB_3861
	call GRM_248
	cmp BYTE [r8+6],0
	jnz LB_3864
	jmp LB_3865
LB_3864:
	jmp LB_3862
LB_3865:
; .mov_ptn2 2'(= *{ } ) ⊢ { }
; .mov_ptn 2'(= *{ } ) ⊢ { }
	jmp LB_3863
LB_3862:
	add rsp,0
	jmp LB_3851
LB_3863:
	mov QWORD [rsp+8*0],r14
	mov r13,QWORD [rsp+16+8*0]
	mov r14,QWORD [rsp+8*0]
	jmp LB_3866
LB_3866
; #24 { } ⊢ 0(<2)◂{ }
; ∎ 0(<2)◂{ }
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn { }
; .dlt.ptn { }
; .mov_ptn2 0(<2)◂{ } ⊢ 2'(= a3◂ [ *{ }] )
; .mov_ptn 0(<2)◂{ } ⊢ 2'(= a3◂ [ *{ }] )
	mov rax,unt 
	mov rax,unt_0
	mov r8,rax
	jmp LB_3867
LB_3867:
	cmp BYTE [r8+6],0
	jnz LB_3851
	POP_GRM_SCC
	ret
LB_3851:
	RB_GRM
	mov QWORD [rsp+8*0],r14
	mov r13,QWORD [rsp+16+8*0]
	mov r14,QWORD [rsp+8*0]
	jmp LB_3869
LB_3869
; #24 { } ⊢ 0(<2)◂{ }
; ∎ 0(<2)◂{ }
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂{ } ⊢ 2'(= a3◂ [ *{ }] )
; .mov_ptn 0(<2)◂{ } ⊢ 2'(= a3◂ [ *{ }] )
	mov rax,unt 
	mov rax,unt_0
	mov r8,rax
	jmp LB_3870
LB_3870:
	cmp BYTE [r8+6],0
	jnz LB_3868
	POP_GRM_SCC
	ret
LB_3868:
	POP_GRM_FAIL 
	ret
ETR_249:
	mov r9,0x0000_ffff_ffff_ffff
	and r9,[r13]
	call GRM_249
	ret
GRM_249:
	PUSH_GRM
	jmp LB_3873
LB_3872:
	add r14,1 
LB_3873:
	cmp r14,r9
	jge LB_3874
	JZ_SPC BYTE [r13+8+r14], LB_3872
LB_3874
	lea rax,[r14+6]
	cmp rax,r9
	jg LB_3877
	jmp LB_3878
LB_3877:
	mov r8,unt_1
	jmp LB_3875
LB_3878:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],226
	jnz LB_3879
	cmp BYTE [rdi+1],136
	jnz LB_3879
	cmp BYTE [rdi+2],142
	jnz LB_3879
	cmp BYTE [rdi+3],226
	jnz LB_3879
	cmp BYTE [rdi+4],136
	jnz LB_3879
	cmp BYTE [rdi+5],142
	jnz LB_3879
	jmp LB_3880
LB_3879:
	mov r8,unt_1
	jmp LB_3875
LB_3880:
	add r14,6
	jmp LB_3876
LB_3875:
	add rsp,0
	jmp LB_3871
LB_3876:
	mov QWORD [rsp+8*0],r14
	mov r13,QWORD [rsp+16+8*0]
	mov r14,QWORD [rsp+8*0]
	jmp LB_3881
LB_3881
; #24 { } ⊢ 0(<2)◂{ }
; ∎ 0(<2)◂{ }
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂{ } ⊢ 2'(= a3◂ [ *{ }] )
; .mov_ptn 0(<2)◂{ } ⊢ 2'(= a3◂ [ *{ }] )
	mov rax,unt 
	mov rax,unt_0
	mov r8,rax
	jmp LB_3882
LB_3882:
	cmp BYTE [r8+6],0
	jnz LB_3871
	POP_GRM_SCC
	ret
LB_3871:
	RB_GRM
	jmp LB_3885
LB_3884:
	add r14,1 
LB_3885:
	cmp r14,r9
	jge LB_3886
	JZ_SPC BYTE [r13+8+r14], LB_3884
LB_3886
	lea rax,[r14+4]
	cmp rax,r9
	jg LB_3889
	jmp LB_3890
LB_3889:
	mov r8,unt_1
	jmp LB_3887
LB_3890:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],194
	jnz LB_3891
	cmp BYTE [rdi+1],167
	jnz LB_3891
	cmp BYTE [rdi+2],194
	jnz LB_3891
	cmp BYTE [rdi+3],167
	jnz LB_3891
	jmp LB_3892
LB_3891:
	mov r8,unt_1
	jmp LB_3887
LB_3892:
	add r14,4
	jmp LB_3888
LB_3887:
	add rsp,0
	jmp LB_3883
LB_3888:
	PUSH_GRM
	jmp LB_3896
LB_3895:
	add r14,1 
LB_3896:
	cmp r14,r9
	jge LB_3897
	JZ_SPC BYTE [r13+8+r14], LB_3895
LB_3897
	call GRM_77
	cmp BYTE [r8+6],0
	jnz LB_3900
	jmp LB_3901
LB_3900:
	jmp LB_3898
LB_3901:
	sub rsp,8
; .mov_ptn2 2'(= {| l |} ) ⊢ 8'(= {| l |} )
; .mov_ptn 2'(= {| l |} ) ⊢ 8'(= {| l |} )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_3899
LB_3898:
	add rsp,0
	jmp LB_3894
LB_3899:
	jmp LB_3903
LB_3902:
	add r14,1 
LB_3903:
	cmp r14,r9
	jge LB_3904
	JZ_SPC BYTE [r13+8+r14], LB_3902
LB_3904
	lea rax,[r14+1]
	cmp rax,r9
	jg LB_3907
	jmp LB_3908
LB_3907:
	mov r8,unt_1
	jmp LB_3905
LB_3908:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],61
	jnz LB_3909
	jmp LB_3910
LB_3909:
	mov r8,unt_1
	jmp LB_3905
LB_3910:
	add r14,1
	jmp LB_3906
LB_3905:
	add rsp,8
	jmp LB_3894
LB_3906:
	jmp LB_3912
LB_3911:
	add r14,1 
LB_3912:
	cmp r14,r9
	jge LB_3913
	JZ_SPC BYTE [r13+8+r14], LB_3911
LB_3913
	call GRM_192
	cmp BYTE [r8+6],0
	jnz LB_3916
	jmp LB_3917
LB_3916:
	jmp LB_3914
LB_3917:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a17◂ [ ] ) ⊢ 9'(= a17◂ [ ] )
; .mov_ptn 2'(= a17◂ [ ] ) ⊢ 9'(= a17◂ [ ] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_3915
LB_3914:
	add rsp,8
	jmp LB_3894
LB_3915:
	jmp LB_3919
LB_3918:
	add r14,1 
LB_3919:
	cmp r14,r9
	jge LB_3920
	JZ_SPC BYTE [r13+8+r14], LB_3918
LB_3920
	call GRM_249
	cmp BYTE [r8+6],0
	jnz LB_3923
	jmp LB_3924
LB_3923:
	jmp LB_3921
LB_3924:
; .mov_ptn2 2'(= *{ } ) ⊢ { }
; .mov_ptn 2'(= *{ } ) ⊢ { }
	jmp LB_3922
LB_3921:
	add rsp,16
	jmp LB_3894
LB_3922:
	mov QWORD [rsp+8*2],r14
	mov r13,QWORD [rsp+16+8*2]
	mov r14,QWORD [rsp+8*2]
	jmp LB_3925
LB_3925
; #24 { } ⊢ 0(<2)◂{ }
; ∎ 0(<2)◂{ }
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn { }
; .dlt.ptn 9'(= a17◂ [ ] )
	mov rdi,QWORD [rsp-8+8*1]
	C_PUSH_REGS
	mov r8,rdi
	call LB_388
	C_POP_REGS
; .dlt.ptn 8'(= {| l |} )
	mov rdi,QWORD [rsp-8+8*2]
	C_PUSH_REGS
	mov r8,rdi
	mov rdi,r8
	call free_s8
	C_POP_REGS
; .mov_ptn2 0(<2)◂{ } ⊢ 2'(= a3◂ [ *{ }] )
; .mov_ptn 0(<2)◂{ } ⊢ 2'(= a3◂ [ *{ }] )
	mov rax,unt 
	mov rax,unt_0
	mov r8,rax
	add rsp,16
	jmp LB_3926
LB_3926:
	cmp BYTE [r8+6],0
	jnz LB_3894
	POP_GRM_SCC
	jmp LB_3893
LB_3894:
	RB_GRM
	jmp LB_3929
LB_3928:
	add r14,1 
LB_3929:
	cmp r14,r9
	jge LB_3930
	JZ_SPC BYTE [r13+8+r14], LB_3928
LB_3930
	call GRM_249
	cmp BYTE [r8+6],0
	jnz LB_3933
	jmp LB_3934
LB_3933:
	jmp LB_3931
LB_3934:
; .mov_ptn2 2'(= *{ } ) ⊢ { }
; .mov_ptn 2'(= *{ } ) ⊢ { }
	jmp LB_3932
LB_3931:
	add rsp,0
	jmp LB_3927
LB_3932:
	jmp LB_3936
LB_3935:
	add r14,1 
LB_3936:
	cmp r14,r9
	jge LB_3937
	JZ_SPC BYTE [r13+8+r14], LB_3935
LB_3937
	call GRM_249
	cmp BYTE [r8+6],0
	jnz LB_3940
	jmp LB_3941
LB_3940:
	jmp LB_3938
LB_3941:
; .mov_ptn2 2'(= *{ } ) ⊢ { }
; .mov_ptn 2'(= *{ } ) ⊢ { }
	jmp LB_3939
LB_3938:
	add rsp,0
	jmp LB_3927
LB_3939:
	mov QWORD [rsp+8*0],r14
	mov r13,QWORD [rsp+16+8*0]
	mov r14,QWORD [rsp+8*0]
	jmp LB_3942
LB_3942
; #24 { } ⊢ 0(<2)◂{ }
; ∎ 0(<2)◂{ }
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn { }
; .dlt.ptn { }
; .mov_ptn2 0(<2)◂{ } ⊢ 2'(= a3◂ [ *{ }] )
; .mov_ptn 0(<2)◂{ } ⊢ 2'(= a3◂ [ *{ }] )
	mov rax,unt 
	mov rax,unt_0
	mov r8,rax
	jmp LB_3943
LB_3943:
	cmp BYTE [r8+6],0
	jnz LB_3927
	POP_GRM_SCC
	jmp LB_3893
LB_3927:
	POP_GRM_FAIL 
	jmp LB_3893
LB_3893:
	cmp BYTE [r8+6],0
	jnz LB_3944
	jmp LB_3945
LB_3944:
	add rsp,0
	POP_GRM_FAIL
	ret
LB_3945:
	mov QWORD [rsp+8*0],r14
; .mov_ptn2 2'(= *{ } ) ⊢ { }
; .mov_ptn 2'(= *{ } ) ⊢ { }
	mov r13,QWORD [rsp+16+8*0]
	mov r14,QWORD [rsp+8*0]
	jmp LB_3946
LB_3946
; #24 { } ⊢ 0(<2)◂{ }
; ∎ 0(<2)◂{ }
; .dlt.ptn { }
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂{ } ⊢ 2'(= a3◂ [ *{ }] )
; .mov_ptn 0(<2)◂{ } ⊢ 2'(= a3◂ [ *{ }] )
	mov rax,unt 
	mov rax,unt_0
	mov r8,rax
	jmp LB_3947
LB_3947:
	cmp BYTE [r8+6],0
	jnz LB_3883
	POP_GRM_SCC
	ret
LB_3883:
	RB_GRM
	jmp LB_3950
LB_3949:
	add r14,1 
LB_3950:
	cmp r14,r9
	jge LB_3951
	JZ_SPC BYTE [r13+8+r14], LB_3949
LB_3951
	cmp r14,r9
	jge LB_3954
	jmp LB_3955
LB_3954:
	mov r8,unt_1 
	jmp LB_3952
LB_3955:
	movzx rdi,BYTE [r13+8+r14]
	push rdi 
	add r14,1 
	jmp LB_3953
LB_3952:
	add rsp,0
	jmp LB_3948
LB_3953:
	jmp LB_3957
LB_3956:
	add r14,1 
LB_3957:
	cmp r14,r9
	jge LB_3958
	JZ_SPC BYTE [r13+8+r14], LB_3956
LB_3958
	call GRM_249
	cmp BYTE [r8+6],0
	jnz LB_3961
	jmp LB_3962
LB_3961:
	jmp LB_3959
LB_3962:
; .mov_ptn2 2'(= *{ } ) ⊢ { }
; .mov_ptn 2'(= *{ } ) ⊢ { }
	jmp LB_3960
LB_3959:
	add rsp,8
	jmp LB_3948
LB_3960:
	mov QWORD [rsp+8*1],r14
	mov r13,QWORD [rsp+16+8*1]
	mov r14,QWORD [rsp+8*1]
	jmp LB_3963
LB_3963
; #24 { } ⊢ 0(<2)◂{ }
; ∎ 0(<2)◂{ }
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn { }
; .dlt.ptn 8'(= r )
	mov rdi,QWORD [rsp-8+8*1]
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂{ } ⊢ 2'(= a3◂ [ *{ }] )
; .mov_ptn 0(<2)◂{ } ⊢ 2'(= a3◂ [ *{ }] )
	mov rax,unt 
	mov rax,unt_0
	mov r8,rax
	add rsp,8
	jmp LB_3964
LB_3964:
	cmp BYTE [r8+6],0
	jnz LB_3948
	POP_GRM_SCC
	ret
LB_3948:
	RB_GRM
	mov QWORD [rsp+8*0],r14
	mov r13,QWORD [rsp+16+8*0]
	mov r14,QWORD [rsp+8*0]
	jmp LB_3966
LB_3966
; #24 { } ⊢ 0(<2)◂{ }
; ∎ 0(<2)◂{ }
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂{ } ⊢ 2'(= a3◂ [ *{ }] )
; .mov_ptn 0(<2)◂{ } ⊢ 2'(= a3◂ [ *{ }] )
	mov rax,unt 
	mov rax,unt_0
	mov r8,rax
	jmp LB_3967
LB_3967:
	cmp BYTE [r8+6],0
	jnz LB_3965
	POP_GRM_SCC
	ret
LB_3965:
	POP_GRM_FAIL 
	ret
ETR_250:
	mov r9,0x0000_ffff_ffff_ffff
	and r9,[r13]
	call GRM_250
	ret
GRM_250:
	PUSH_GRM
	jmp LB_3970
LB_3969:
	add r14,1 
LB_3970:
	cmp r14,r9
	jge LB_3971
	JZ_SPC BYTE [r13+8+r14], LB_3969
LB_3971
	lea rax,[r14+1]
	cmp rax,r9
	jg LB_3974
	jmp LB_3975
LB_3974:
	mov r8,unt_1
	jmp LB_3972
LB_3975:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],61
	jnz LB_3976
	jmp LB_3977
LB_3976:
	mov r8,unt_1
	jmp LB_3972
LB_3977:
	add r14,1
	jmp LB_3973
LB_3972:
	add rsp,0
	jmp LB_3968
LB_3973:
	jmp LB_3979
LB_3978:
	add r14,1 
LB_3979:
	cmp r14,r9
	jge LB_3980
	JZ_SPC BYTE [r13+8+r14], LB_3978
LB_3980
	call GRM_192
	cmp BYTE [r8+6],0
	jnz LB_3983
	jmp LB_3984
LB_3983:
	jmp LB_3981
LB_3984:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a17◂ [ ] ) ⊢ 8'(= a17◂ [ ] )
; .mov_ptn 2'(= a17◂ [ ] ) ⊢ 8'(= a17◂ [ ] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_3982
LB_3981:
	add rsp,0
	POP_GRM_FAIL
	ret
LB_3982:
	jmp LB_3986
LB_3985:
	add r14,1 
LB_3986:
	cmp r14,r9
	jge LB_3987
	JZ_SPC BYTE [r13+8+r14], LB_3985
LB_3987
	call GRM_219
	cmp BYTE [r8+6],0
	jnz LB_3990
	jmp LB_3991
LB_3990:
	jmp LB_3988
LB_3991:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a43◂ [ *{ }] ) ⊢ 9'(= a43◂ [ *{ }] )
; .mov_ptn 2'(= a43◂ [ *{ }] ) ⊢ 9'(= a43◂ [ *{ }] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_3989
LB_3988:
	add rsp,8
	POP_GRM_FAIL
	ret
LB_3989:
	mov QWORD [rsp+8*2],r14
	mov r13,QWORD [rsp+16+8*2]
	mov r14,QWORD [rsp+8*2]
	jmp LB_3992
LB_3992
; #172 8'(= a17◂ [ ] ) ⊢ 1(<2)◂8'(= a17◂ [ ] )
; #196 1(<2)◂8'(= a17◂ [ ] ) ⊢ 0(<2)◂1(<2)◂8'(= a17◂ [ ] )
; #24 0(<2)◂1(<2)◂8'(= a17◂ [ ] ) ⊢ 0(<2)◂0(<2)◂1(<2)◂8'(= a17◂ [ ] )
; ∎ 0(<2)◂0(<2)◂1(<2)◂8'(= a17◂ [ ] )
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 9'(= a43◂ [ *{ }] )
	mov rdi,QWORD [rsp-8+8*1]
	C_PUSH_REGS
	mov r8,rdi
	call LB_1706
	C_POP_REGS
; .mov_ptn2 0(<2)◂0(<2)◂1(<2)◂8'(= a17◂ [ ] ) ⊢ 2'(= a3◂ [ a43◂ [ a40◂ [ ]]] )
; .mov_ptn 0(<2)◂0(<2)◂1(<2)◂8'(= a17◂ [ ] ) ⊢ 2'(= a3◂ [ a43◂ [ a40◂ [ ]]] )
	mov rax,QWORD [rsp-8+8*2]
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],1
	mov QWORD [rax+8],rdi
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,16
	jmp LB_3993
LB_3993:
	cmp BYTE [r8+6],0
	jnz LB_3968
	POP_GRM_SCC
	ret
LB_3968:
	RB_GRM
	jmp LB_3996
LB_3995:
	add r14,1 
LB_3996:
	cmp r14,r9
	jge LB_3997
	JZ_SPC BYTE [r13+8+r14], LB_3995
LB_3997
	call GRM_219
	cmp BYTE [r8+6],0
	jnz LB_4000
	jmp LB_4001
LB_4000:
	jmp LB_3998
LB_4001:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a43◂ [ *{ }] ) ⊢ 8'(= a43◂ [ *{ }] )
; .mov_ptn 2'(= a43◂ [ *{ }] ) ⊢ 8'(= a43◂ [ *{ }] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_3999
LB_3998:
	add rsp,0
	jmp LB_3994
LB_3999:
	jmp LB_4003
LB_4002:
	add r14,1 
LB_4003:
	cmp r14,r9
	jge LB_4004
	JZ_SPC BYTE [r13+8+r14], LB_4002
LB_4004
	call GRM_251
	cmp BYTE [r8+6],0
	jnz LB_4007
	jmp LB_4008
LB_4007:
	jmp LB_4005
LB_4008:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a43◂ [ a2◂ [ a39◂ [ ]]] ) ⊢ 9'(= a43◂ [ a2◂ [ a39◂ [ ]]] )
; .mov_ptn 2'(= a43◂ [ a2◂ [ a39◂ [ ]]] ) ⊢ 9'(= a43◂ [ a2◂ [ a39◂ [ ]]] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_4006
LB_4005:
	add rsp,8
	jmp LB_3994
LB_4006:
	mov QWORD [rsp+8*2],r14
	mov r13,QWORD [rsp+16+8*2]
	mov r14,QWORD [rsp+8*2]
	jmp LB_4009
LB_4009
;; ? 9'(= a43◂ [ a2◂ [ a39◂ [ ]]] ) ⊢ 0(<2)◂2'(= a2◂ [ a39◂ [ ]] )
	mov rdi,QWORD [rsp-8+8*1]
	cmp BYTE [rdi+6],0
	jnz LB_4011
	mov QWORD [GBG_VCT+8*0],rdi
	mov r8,QWORD [rdi+8]
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_LN rdi
; #173 2'(= a2◂ [ a39◂ [ ]] ) ⊢ 0(<2)◂2'(= a2◂ [ a39◂ [ ]] )
; #196 0(<2)◂2'(= a2◂ [ a39◂ [ ]] ) ⊢ 0(<2)◂0(<2)◂2'(= a2◂ [ a39◂ [ ]] )
; #24 0(<2)◂0(<2)◂2'(= a2◂ [ a39◂ [ ]] ) ⊢ 0(<2)◂0(<2)◂0(<2)◂2'(= a2◂ [ a39◂ [ ]] )
; ∎ 0(<2)◂0(<2)◂0(<2)◂2'(= a2◂ [ a39◂ [ ]] )
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 8'(= a43◂ [ *{ }] )
	mov rdi,QWORD [rsp-8+8*2]
	C_PUSH_REGS
	mov r8,rdi
	call LB_1706
	C_POP_REGS
; .mov_ptn2 0(<2)◂0(<2)◂0(<2)◂2'(= a2◂ [ a39◂ [ ]] ) ⊢ 2'(= a3◂ [ a43◂ [ a40◂ [ ]]] )
	mov r13,r8
; .mov_ptn 0(<2)◂0(<2)◂0(<2)◂0'(= a2◂ [ a39◂ [ ]] ) ⊢ 2'(= a3◂ [ a43◂ [ a40◂ [ ]]] )
	mov rax,r13
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,16
	jmp LB_4010
LB_4011:
;; ?. 9'(= a43◂ [ a2◂ [ a39◂ [ ]]] ) ⊢ 1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] )
	mov QWORD [GBG_VCT+8*0],rdi
	mov r8,QWORD [rdi+8]
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_LN rdi
; #195 2'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] )
; #24 1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 0(<2)◂1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] )
; ∎ 0(<2)◂1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] )
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 8'(= a43◂ [ *{ }] )
	mov rdi,QWORD [rsp-8+8*2]
	C_PUSH_REGS
	mov r8,rdi
	call LB_1706
	C_POP_REGS
; .mov_ptn2 0(<2)◂1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 2'(= a3◂ [ a43◂ [ a40◂ [ ]]] )
	mov r13,r8
; .mov_ptn 0(<2)◂1(<2)◂0'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 2'(= a3◂ [ a43◂ [ a40◂ [ ]]] )
	mov rax,r13
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],1
	mov QWORD [rax+8],rdi
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,16
	jmp LB_4010
LB_4010:
	cmp BYTE [r8+6],0
	jnz LB_3994
	POP_GRM_SCC
	ret
LB_3994:
	POP_GRM_FAIL 
	ret
ETR_251:
	mov r9,0x0000_ffff_ffff_ffff
	and r9,[r13]
	call GRM_251
	ret
GRM_251:
	PUSH_GRM
	jmp LB_4014
LB_4013:
	add r14,1 
LB_4014:
	cmp r14,r9
	jge LB_4015
	JZ_SPC BYTE [r13+8+r14], LB_4013
LB_4015
	call GRM_219
	cmp BYTE [r8+6],0
	jnz LB_4018
	jmp LB_4019
LB_4018:
	jmp LB_4016
LB_4019:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a43◂ [ *{ }] ) ⊢ 8'(= a43◂ [ *{ }] )
; .mov_ptn 2'(= a43◂ [ *{ }] ) ⊢ 8'(= a43◂ [ *{ }] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_4017
LB_4016:
	add rsp,0
	jmp LB_4012
LB_4017:
	jmp LB_4021
LB_4020:
	add r14,1 
LB_4021:
	cmp r14,r9
	jge LB_4022
	JZ_SPC BYTE [r13+8+r14], LB_4020
LB_4022
	lea rax,[r14+6]
	cmp rax,r9
	jg LB_4025
	jmp LB_4026
LB_4025:
	mov r8,unt_1
	jmp LB_4023
LB_4026:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],226
	jnz LB_4027
	cmp BYTE [rdi+1],136
	jnz LB_4027
	cmp BYTE [rdi+2],142
	jnz LB_4027
	cmp BYTE [rdi+3],226
	jnz LB_4027
	cmp BYTE [rdi+4],136
	jnz LB_4027
	cmp BYTE [rdi+5],142
	jnz LB_4027
	jmp LB_4028
LB_4027:
	mov r8,unt_1
	jmp LB_4023
LB_4028:
	add r14,6
	jmp LB_4024
LB_4023:
	add rsp,8
	jmp LB_4012
LB_4024:
	jmp LB_4030
LB_4029:
	add r14,1 
LB_4030:
	cmp r14,r9
	jge LB_4031
	JZ_SPC BYTE [r13+8+r14], LB_4029
LB_4031
	call GRM_219
	cmp BYTE [r8+6],0
	jnz LB_4034
	jmp LB_4035
LB_4034:
	jmp LB_4032
LB_4035:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a43◂ [ *{ }] ) ⊢ 9'(= a43◂ [ *{ }] )
; .mov_ptn 2'(= a43◂ [ *{ }] ) ⊢ 9'(= a43◂ [ *{ }] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_4033
LB_4032:
	add rsp,8
	jmp LB_4012
LB_4033:
	mov QWORD [rsp+8*2],r14
	mov r13,QWORD [rsp+16+8*2]
	mov r14,QWORD [rsp+8*2]
	jmp LB_4036
LB_4036
; #22 { } ⊢ 1(<2)◂{ }
; #196 1(<2)◂{ } ⊢ 0(<2)◂1(<2)◂{ }
; #24 0(<2)◂1(<2)◂{ } ⊢ 0(<2)◂0(<2)◂1(<2)◂{ }
; ∎ 0(<2)◂0(<2)◂1(<2)◂{ }
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 9'(= a43◂ [ *{ }] )
	mov rdi,QWORD [rsp-8+8*1]
	C_PUSH_REGS
	mov r8,rdi
	call LB_1706
	C_POP_REGS
; .dlt.ptn 8'(= a43◂ [ *{ }] )
	mov rdi,QWORD [rsp-8+8*2]
	C_PUSH_REGS
	mov r8,rdi
	call LB_1706
	C_POP_REGS
; .mov_ptn2 0(<2)◂0(<2)◂1(<2)◂{ } ⊢ 2'(= a3◂ [ a43◂ [ a2◂ [ a39◂ [ ]]]] )
; .mov_ptn 0(<2)◂0(<2)◂1(<2)◂{ } ⊢ 2'(= a3◂ [ a43◂ [ a2◂ [ a39◂ [ ]]]] )
	mov rax,unt 
	mov rax,unt_1
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,16
	jmp LB_4037
LB_4037:
	cmp BYTE [r8+6],0
	jnz LB_4012
	POP_GRM_SCC
	ret
LB_4012:
	RB_GRM
	jmp LB_4040
LB_4039:
	add r14,1 
LB_4040:
	cmp r14,r9
	jge LB_4041
	JZ_SPC BYTE [r13+8+r14], LB_4039
LB_4041
	call GRM_219
	cmp BYTE [r8+6],0
	jnz LB_4044
	jmp LB_4045
LB_4044:
	jmp LB_4042
LB_4045:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a43◂ [ *{ }] ) ⊢ 8'(= a43◂ [ *{ }] )
; .mov_ptn 2'(= a43◂ [ *{ }] ) ⊢ 8'(= a43◂ [ *{ }] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_4043
LB_4042:
	add rsp,0
	jmp LB_4038
LB_4043:
	jmp LB_4047
LB_4046:
	add r14,1 
LB_4047:
	cmp r14,r9
	jge LB_4048
	JZ_SPC BYTE [r13+8+r14], LB_4046
LB_4048
	call GRM_247
	cmp BYTE [r8+6],0
	jnz LB_4051
	jmp LB_4052
LB_4051:
	jmp LB_4049
LB_4052:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a43◂ [ a39◂ [ ]] ) ⊢ 9'(= a43◂ [ a39◂ [ ]] )
; .mov_ptn 2'(= a43◂ [ a39◂ [ ]] ) ⊢ 9'(= a43◂ [ a39◂ [ ]] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_4050
LB_4049:
	add rsp,8
	jmp LB_4038
LB_4050:
	jmp LB_4054
LB_4053:
	add r14,1 
LB_4054:
	cmp r14,r9
	jge LB_4055
	JZ_SPC BYTE [r13+8+r14], LB_4053
LB_4055
	call GRM_251
	cmp BYTE [r8+6],0
	jnz LB_4058
	jmp LB_4059
LB_4058:
	jmp LB_4056
LB_4059:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a43◂ [ a2◂ [ a39◂ [ ]]] ) ⊢ 10'(= a43◂ [ a2◂ [ a39◂ [ ]]] )
; .mov_ptn 2'(= a43◂ [ a2◂ [ a39◂ [ ]]] ) ⊢ 10'(= a43◂ [ a2◂ [ a39◂ [ ]]] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_4057
LB_4056:
	add rsp,16
	jmp LB_4038
LB_4057:
	mov QWORD [rsp+8*3],r14
	mov r13,QWORD [rsp+16+8*3]
	mov r14,QWORD [rsp+8*3]
	jmp LB_4060
LB_4060
; #197 { 9'(= a43◂ [ a39◂ [ ]] ) 10'(= a43◂ [ a2◂ [ a39◂ [ ]]] ) } ⊢ 2'(= a43◂ [ *{ a39◂ [ ]a2◂ [ a39◂ [ ]]}] )
	sub rsp,16
	mov QWORD [rsp+8*0],r13
	mov QWORD [rsp+8*1],r14
; .mov_ptn2 { 9'(= a43◂ [ a39◂ [ ]] ) 10'(= a43◂ [ a2◂ [ a39◂ [ ]]] ) } ⊢ { 0'(= a43◂ [ a39◂ [ ]] ) 1'(= a43◂ [ a2◂ [ a39◂ [ ]]] ) }
; .mov_ptn 10'(= a43◂ [ a2◂ [ a39◂ [ ]]] ) ⊢ 1'(= a43◂ [ a2◂ [ a39◂ [ ]]] )
	mov rax,QWORD [rsp-8+8*3]
	mov r14,rax
; .mov_ptn 9'(= a43◂ [ a39◂ [ ]] ) ⊢ 0'(= a43◂ [ a39◂ [ ]] )
	mov rax,QWORD [rsp-8+8*4]
	mov r13,rax
	call LB_3572
	mov r14,QWORD [rsp-8+8*2]
	mov r8,r13
	mov r13,QWORD [rsp-8+8*1]
	add rsp,32
;; ? 2'(= a43◂ [ *{ a39◂ [ ]a2◂ [ a39◂ [ ]]}] ) ⊢ 0(<2)◂{ 3'(= a39◂ [ ] ) 4'(= a2◂ [ a39◂ [ ]] ) }
	mov rdi,r8
	cmp BYTE [rdi+6],0
	jnz LB_4062
	mov r9, QWORD [r8+8]
	mov r10, QWORD [r8+16]
	mov QWORD [GBG_VCT+8*0],r8
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_RCD 2,rdi
; #23 { 3'(= a39◂ [ ] ) 4'(= a2◂ [ a39◂ [ ]] ) } ⊢ 0(<2)◂{ 3'(= a39◂ [ ] ) 4'(= a2◂ [ a39◂ [ ]] ) }
; #196 0(<2)◂{ 3'(= a39◂ [ ] ) 4'(= a2◂ [ a39◂ [ ]] ) } ⊢ 0(<2)◂0(<2)◂{ 3'(= a39◂ [ ] ) 4'(= a2◂ [ a39◂ [ ]] ) }
; #24 0(<2)◂0(<2)◂{ 3'(= a39◂ [ ] ) 4'(= a2◂ [ a39◂ [ ]] ) } ⊢ 0(<2)◂0(<2)◂0(<2)◂{ 3'(= a39◂ [ ] ) 4'(= a2◂ [ a39◂ [ ]] ) }
; ∎ 0(<2)◂0(<2)◂0(<2)◂{ 3'(= a39◂ [ ] ) 4'(= a2◂ [ a39◂ [ ]] ) }
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 8'(= a43◂ [ *{ }] )
	mov rdi,QWORD [rsp-8+8*1]
	C_PUSH_REGS
	mov r8,rdi
	call LB_1706
	C_POP_REGS
; .mov_ptn2 0(<2)◂0(<2)◂0(<2)◂{ 3'(= a39◂ [ ] ) 4'(= a2◂ [ a39◂ [ ]] ) } ⊢ 2'(= a3◂ [ a43◂ [ a2◂ [ a39◂ [ ]]]] )
; .mov_ptn 0(<2)◂0(<2)◂0(<2)◂{ 3'(= a39◂ [ ] ) 4'(= a2◂ [ a39◂ [ ]] ) } ⊢ 2'(= a3◂ [ a43◂ [ a2◂ [ a39◂ [ ]]]] )
	ALC_RCD 2, rax
	mov r13,rax
	mov rax,r9
	mov QWORD [r13+8+8*0],rax
	mov rax,r10
	mov QWORD [r13+8+8*1],rax
	mov rax,r13
	mov BYTE [rax+6],0
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,8
	jmp LB_4061
LB_4062:
;; ?. 2'(= a43◂ [ *{ a39◂ [ ]a2◂ [ a39◂ [ ]]}] ) ⊢ 1(<2)◂3'(= a2◂ [ *{ rr{| l |}}] )
	mov QWORD [GBG_VCT+8*0],rdi
	mov r9,QWORD [rdi+8]
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_LN rdi
; #195 3'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 1(<2)◂3'(= a2◂ [ *{ rr{| l |}}] )
; #24 1(<2)◂3'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 0(<2)◂1(<2)◂3'(= a2◂ [ *{ rr{| l |}}] )
; ∎ 0(<2)◂1(<2)◂3'(= a2◂ [ *{ rr{| l |}}] )
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 8'(= a43◂ [ *{ }] )
	mov rdi,QWORD [rsp-8+8*1]
	C_PUSH_REGS
	mov r8,rdi
	call LB_1706
	C_POP_REGS
; .mov_ptn2 0(<2)◂1(<2)◂3'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 2'(= a3◂ [ a43◂ [ a2◂ [ a39◂ [ ]]]] )
; .mov_ptn 0(<2)◂1(<2)◂3'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 2'(= a3◂ [ a43◂ [ a2◂ [ a39◂ [ ]]]] )
	mov rax,r9
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],1
	mov QWORD [rax+8],rdi
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,8
	jmp LB_4061
LB_4061:
	cmp BYTE [r8+6],0
	jnz LB_4038
	POP_GRM_SCC
	ret
LB_4038:
	RB_GRM
	call GRM_249
	cmp BYTE [r8+6],0
	jnz LB_4066
	jmp LB_4067
LB_4066:
	jmp LB_4064
LB_4067:
; .mov_ptn2 2'(= *{ } ) ⊢ { }
; .mov_ptn 2'(= *{ } ) ⊢ { }
	jmp LB_4065
LB_4064:
	add rsp,0
	jmp LB_4063
LB_4065:
	mov QWORD [rsp+8*0],r14
	mov r13,QWORD [rsp+16+8*0]
	mov r14,QWORD [rsp+8*0]
	jmp LB_4068
LB_4068
; #22 { } ⊢ 1(<2)◂{ }
; $ %[ "glb_etr 7" ] ⊢ %[ "glb_etr 7" ]
; #23 { { 0'(= r ) 1'(= r ) %[ "glb_etr 7" ] } 1(<2)◂{ } } ⊢ 0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "glb_etr 7" ] } 1(<2)◂{ } }
; #195 0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "glb_etr 7" ] } 1(<2)◂{ } } ⊢ 1(<2)◂0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "glb_etr 7" ] } 1(<2)◂{ } }
; #24 1(<2)◂0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "glb_etr 7" ] } 1(<2)◂{ } } ⊢ 0(<2)◂1(<2)◂0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "glb_etr 7" ] } 1(<2)◂{ } }
; ∎ 0(<2)◂1(<2)◂0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "glb_etr 7" ] } 1(<2)◂{ } }
; .dlt.ptn { }
; .mov_ptn2 0(<2)◂1(<2)◂0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "glb_etr 7" ] } 1(<2)◂{ } } ⊢ 2'(= a3◂ [ a43◂ [ a2◂ [ a39◂ [ ]]]] )
; .mov_ptn 0(<2)◂1(<2)◂0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "glb_etr 7" ] } 1(<2)◂{ } } ⊢ 2'(= a3◂ [ a43◂ [ a2◂ [ a39◂ [ ]]]] )
	ALC_RCD 2, rax
	mov r9,rax
	ALC_RCD 3, rax
	mov r10,rax
	mov rax,r13
	mov QWORD [r10+8+8*0],rax
	mov rax,r14
	mov QWORD [r10+8+8*1],rax
	mov rsi,1  
	mov rdi,24
	xor rax,rax 
	C_CALL_SF calloc
	mov QWORD [rax],9
	mov BYTE [rax+8+0],103
	mov BYTE [rax+8+1],108
	mov BYTE [rax+8+2],98
	mov BYTE [rax+8+3],95
	mov BYTE [rax+8+4],101
	mov BYTE [rax+8+5],116
	mov BYTE [rax+8+6],114
	mov BYTE [rax+8+7],32
	mov BYTE [rax+8+8],55
	mov QWORD [r10+8+8*2],rax
	mov rax,r10
	mov QWORD [r9+8+8*0],rax
	mov rax,unt 
	mov rax,unt_1
	mov QWORD [r9+8+8*1],rax
	mov rax,r9
	mov BYTE [rax+6],0
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],1
	mov QWORD [rax+8],rdi
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	jmp LB_4069
LB_4069:
	cmp BYTE [r8+6],0
	jnz LB_4063
	POP_GRM_SCC
	ret
LB_4063:
	POP_GRM_FAIL 
	ret
ETR_252:
	mov r9,0x0000_ffff_ffff_ffff
	and r9,[r13]
	call GRM_252
	ret
GRM_252:
	PUSH_GRM
	jmp LB_4072
LB_4071:
	add r14,1 
LB_4072:
	cmp r14,r9
	jge LB_4073
	JZ_SPC BYTE [r13+8+r14], LB_4071
LB_4073
	lea rax,[r14+1]
	cmp rax,r9
	jg LB_4076
	jmp LB_4077
LB_4076:
	mov r8,unt_1
	jmp LB_4074
LB_4077:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],64
	jnz LB_4078
	jmp LB_4079
LB_4078:
	mov r8,unt_1
	jmp LB_4074
LB_4079:
	add r14,1
	jmp LB_4075
LB_4074:
	add rsp,0
	jmp LB_4070
LB_4075:
	jmp LB_4081
LB_4080:
	add r14,1 
LB_4081:
	cmp r14,r9
	jge LB_4082
	JZ_SPC BYTE [r13+8+r14], LB_4080
LB_4082
	lea rax,[r14+1]
	cmp rax,r9
	jg LB_4085
	jmp LB_4086
LB_4085:
	mov r8,unt_1
	jmp LB_4083
LB_4086:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],46
	jnz LB_4087
	jmp LB_4088
LB_4087:
	mov r8,unt_1
	jmp LB_4083
LB_4088:
	add r14,1
	jmp LB_4084
LB_4083:
	add rsp,0
	POP_GRM_FAIL
	ret
LB_4084:
	jmp LB_4090
LB_4089:
	add r14,1 
LB_4090:
	cmp r14,r9
	jge LB_4091
	JZ_SPC BYTE [r13+8+r14], LB_4089
LB_4091
	call GRM_253
	cmp BYTE [r8+6],0
	jnz LB_4094
	jmp LB_4095
LB_4094:
	jmp LB_4092
LB_4095:
	sub rsp,16
; .mov_ptn2 2'(= *{ {| l |}a42◂ [ ]} ) ⊢ { 8'(= {| l |} ) 9'(= a42◂ [ ] ) }
; .mov_ptn 2'(= *{ {| l |}a42◂ [ ]} ) ⊢ { 8'(= {| l |} ) 9'(= a42◂ [ ] ) }
	mov r10, QWORD [r8+8]
	mov QWORD [rsp-8+8*2],r10
	mov r11, QWORD [r8+16]
	mov QWORD [rsp-8+8*1],r11
	mov rdi,r8
	FREE_RCD 2,rdi
	jmp LB_4093
LB_4092:
	add rsp,0
	POP_GRM_FAIL
	ret
LB_4093:
	jmp LB_4097
LB_4096:
	add r14,1 
LB_4097:
	cmp r14,r9
	jge LB_4098
	JZ_SPC BYTE [r13+8+r14], LB_4096
LB_4098
	call GRM_256
	cmp BYTE [r8+6],0
	jnz LB_4101
	jmp LB_4102
LB_4101:
	jmp LB_4099
LB_4102:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a2◂ [ *{ {| l |}a42◂ [ ]}] ) ⊢ 10'(= a2◂ [ *{ {| l |}a42◂ [ ]}] )
; .mov_ptn 2'(= a2◂ [ *{ {| l |}a42◂ [ ]}] ) ⊢ 10'(= a2◂ [ *{ {| l |}a42◂ [ ]}] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_4100
LB_4099:
	add rsp,16
	POP_GRM_FAIL
	ret
LB_4100:
	mov QWORD [rsp+8*3],r14
	mov r13,QWORD [rsp+16+8*3]
	mov r14,QWORD [rsp+8*3]
	jmp LB_4103
LB_4103
; #23 { { 8'(= {| l |} ) 9'(= a42◂ [ ] ) } 10'(= a2◂ [ *{ {| l |}a42◂ [ ]}] ) } ⊢ 0(<2)◂{ { 8'(= {| l |} ) 9'(= a42◂ [ ] ) } 10'(= a2◂ [ *{ {| l |}a42◂ [ ]}] ) }
; #174 0(<2)◂{ { 8'(= {| l |} ) 9'(= a42◂ [ ] ) } 10'(= a2◂ [ *{ {| l |}a42◂ [ ]}] ) } ⊢ 5(<6)◂0(<2)◂{ { 8'(= {| l |} ) 9'(= a42◂ [ ] ) } 10'(= a2◂ [ *{ {| l |}a42◂ [ ]}] ) }
; #24 5(<6)◂0(<2)◂{ { 8'(= {| l |} ) 9'(= a42◂ [ ] ) } 10'(= a2◂ [ *{ {| l |}a42◂ [ ]}] ) } ⊢ 0(<2)◂5(<6)◂0(<2)◂{ { 8'(= {| l |} ) 9'(= a42◂ [ ] ) } 10'(= a2◂ [ *{ {| l |}a42◂ [ ]}] ) }
; ∎ 0(<2)◂5(<6)◂0(<2)◂{ { 8'(= {| l |} ) 9'(= a42◂ [ ] ) } 10'(= a2◂ [ *{ {| l |}a42◂ [ ]}] ) }
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂5(<6)◂0(<2)◂{ { 8'(= {| l |} ) 9'(= a42◂ [ ] ) } 10'(= a2◂ [ *{ {| l |}a42◂ [ ]}] ) } ⊢ 2'(= a3◂ [ a39◂ [ ]] )
; .mov_ptn 0(<2)◂5(<6)◂0(<2)◂{ { 8'(= {| l |} ) 9'(= a42◂ [ ] ) } 10'(= a2◂ [ *{ {| l |}a42◂ [ ]}] ) } ⊢ 2'(= a3◂ [ a39◂ [ ]] )
	ALC_RCD 2, rax
	mov r13,rax
	ALC_RCD 2, rax
	mov r14,rax
	mov rax,QWORD [rsp-8+8*3]
	mov QWORD [r14+8+8*0],rax
	mov rax,QWORD [rsp-8+8*2]
	mov QWORD [r14+8+8*1],rax
	mov rax,r14
	mov QWORD [r13+8+8*0],rax
	mov rax,QWORD [rsp-8+8*1]
	mov QWORD [r13+8+8*1],rax
	mov rax,r13
	mov BYTE [rax+6],0
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],5
	mov QWORD [rax+8],rdi
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,24
	jmp LB_4104
LB_4104:
	cmp BYTE [r8+6],0
	jnz LB_4070
	POP_GRM_SCC
	ret
LB_4070:
	RB_GRM
	jmp LB_4107
LB_4106:
	add r14,1 
LB_4107:
	cmp r14,r9
	jge LB_4108
	JZ_SPC BYTE [r13+8+r14], LB_4106
LB_4108
	call GRM_253
	cmp BYTE [r8+6],0
	jnz LB_4111
	jmp LB_4112
LB_4111:
	jmp LB_4109
LB_4112:
	sub rsp,16
; .mov_ptn2 2'(= *{ {| l |}a42◂ [ ]} ) ⊢ { 8'(= {| l |} ) 9'(= a42◂ [ ] ) }
; .mov_ptn 2'(= *{ {| l |}a42◂ [ ]} ) ⊢ { 8'(= {| l |} ) 9'(= a42◂ [ ] ) }
	mov r10, QWORD [r8+8]
	mov QWORD [rsp-8+8*2],r10
	mov r11, QWORD [r8+16]
	mov QWORD [rsp-8+8*1],r11
	mov rdi,r8
	FREE_RCD 2,rdi
	jmp LB_4110
LB_4109:
	add rsp,0
	jmp LB_4105
LB_4110:
	mov QWORD [rsp+8*2],r14
	mov r13,QWORD [rsp+16+8*2]
	mov r14,QWORD [rsp+8*2]
	jmp LB_4113
LB_4113
; #175 { 8'(= {| l |} ) 9'(= a42◂ [ ] ) } ⊢ 4(<6)◂{ 8'(= {| l |} ) 9'(= a42◂ [ ] ) }
; #24 4(<6)◂{ 8'(= {| l |} ) 9'(= a42◂ [ ] ) } ⊢ 0(<2)◂4(<6)◂{ 8'(= {| l |} ) 9'(= a42◂ [ ] ) }
; ∎ 0(<2)◂4(<6)◂{ 8'(= {| l |} ) 9'(= a42◂ [ ] ) }
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂4(<6)◂{ 8'(= {| l |} ) 9'(= a42◂ [ ] ) } ⊢ 2'(= a3◂ [ a39◂ [ ]] )
; .mov_ptn 0(<2)◂4(<6)◂{ 8'(= {| l |} ) 9'(= a42◂ [ ] ) } ⊢ 2'(= a3◂ [ a39◂ [ ]] )
	ALC_RCD 2, rax
	mov r13,rax
	mov rax,QWORD [rsp-8+8*2]
	mov QWORD [r13+8+8*0],rax
	mov rax,QWORD [rsp-8+8*1]
	mov QWORD [r13+8+8*1],rax
	mov rax,r13
	mov BYTE [rax+6],4
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,16
	jmp LB_4114
LB_4114:
	cmp BYTE [r8+6],0
	jnz LB_4105
	POP_GRM_SCC
	ret
LB_4105:
	RB_GRM
	mov QWORD [rsp+8*0],r14
	mov r13,QWORD [rsp+16+8*0]
	mov r14,QWORD [rsp+8*0]
	jmp LB_4116
LB_4116
; $ %[ "dt_etr 0" ] ⊢ %[ "dt_etr 0" ]
; #10 %[ "dt_etr 0" ] ⊢ %[ "dt_etr 0" ]
	mov rdi,fmt_emt
	call emt_stg
	mov rdi,LB_4118
	call emt_stg 
	mov rdi,fmt_nl
	call emt_stg
	jmp LB_4119
LB_4119:
; #25 { } ⊢ 1(<2)◂{ }
; ∎ 1(<2)◂{ }
; .dlt.ptn %[ "dt_etr 0" ]
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 1(<2)◂{ } ⊢ 2'(= a3◂ [ a39◂ [ ]] )
; .mov_ptn 1(<2)◂{ } ⊢ 2'(= a3◂ [ a39◂ [ ]] )
	mov rax,unt 
	mov rax,unt_1
	mov r8,rax
	jmp LB_4117
LB_4117:
	cmp BYTE [r8+6],0
	jnz LB_4115
	POP_GRM_SCC
	ret
LB_4115:
	POP_GRM_FAIL 
	ret
ETR_253:
	mov r9,0x0000_ffff_ffff_ffff
	and r9,[r13]
	call GRM_253
	ret
GRM_253:
	PUSH_GRM
	jmp LB_4122
LB_4121:
	add r14,1 
LB_4122:
	cmp r14,r9
	jge LB_4123
	JZ_SPC BYTE [r13+8+r14], LB_4121
LB_4123
	call GRM_77
	cmp BYTE [r8+6],0
	jnz LB_4126
	jmp LB_4127
LB_4126:
	jmp LB_4124
LB_4127:
	sub rsp,8
; .mov_ptn2 2'(= {| l |} ) ⊢ 8'(= {| l |} )
; .mov_ptn 2'(= {| l |} ) ⊢ 8'(= {| l |} )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_4125
LB_4124:
	add rsp,0
	jmp LB_4120
LB_4125:
	jmp LB_4129
LB_4128:
	add r14,1 
LB_4129:
	cmp r14,r9
	jge LB_4130
	JZ_SPC BYTE [r13+8+r14], LB_4128
LB_4130
	call GRM_254
	cmp BYTE [r8+6],0
	jnz LB_4133
	jmp LB_4134
LB_4133:
	jmp LB_4131
LB_4134:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a2◂ [ {| l |}] ) ⊢ 9'(= a2◂ [ {| l |}] )
; .mov_ptn 2'(= a2◂ [ {| l |}] ) ⊢ 9'(= a2◂ [ {| l |}] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_4132
LB_4131:
	add rsp,8
	jmp LB_4120
LB_4132:
	jmp LB_4136
LB_4135:
	add r14,1 
LB_4136:
	cmp r14,r9
	jge LB_4137
	JZ_SPC BYTE [r13+8+r14], LB_4135
LB_4137
	lea rax,[r14+1]
	cmp rax,r9
	jg LB_4140
	jmp LB_4141
LB_4140:
	mov r8,unt_1
	jmp LB_4138
LB_4141:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],61
	jnz LB_4142
	jmp LB_4143
LB_4142:
	mov r8,unt_1
	jmp LB_4138
LB_4143:
	add r14,1
	jmp LB_4139
LB_4138:
	add rsp,16
	jmp LB_4120
LB_4139:
	jmp LB_4145
LB_4144:
	add r14,1 
LB_4145:
	cmp r14,r9
	jge LB_4146
	JZ_SPC BYTE [r13+8+r14], LB_4144
LB_4146
	call GRM_213
	cmp BYTE [r8+6],0
	jnz LB_4149
	jmp LB_4150
LB_4149:
	jmp LB_4147
LB_4150:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a31◂ [ ] ) ⊢ 10'(= a31◂ [ ] )
; .mov_ptn 2'(= a31◂ [ ] ) ⊢ 10'(= a31◂ [ ] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_4148
LB_4147:
	add rsp,16
	POP_GRM_FAIL
	ret
LB_4148:
	mov QWORD [rsp+8*3],r14
	mov r13,QWORD [rsp+16+8*3]
	mov r14,QWORD [rsp+8*3]
	jmp LB_4151
LB_4151
; #167 { 9'(= a2◂ [ {| l |}] ) 10'(= a31◂ [ ] ) } ⊢ 1(<2)◂{ 9'(= a2◂ [ {| l |}] ) 10'(= a31◂ [ ] ) }
; #24 { 8'(= {| l |} ) 1(<2)◂{ 9'(= a2◂ [ {| l |}] ) 10'(= a31◂ [ ] ) } } ⊢ 0(<2)◂{ 8'(= {| l |} ) 1(<2)◂{ 9'(= a2◂ [ {| l |}] ) 10'(= a31◂ [ ] ) } }
; ∎ 0(<2)◂{ 8'(= {| l |} ) 1(<2)◂{ 9'(= a2◂ [ {| l |}] ) 10'(= a31◂ [ ] ) } }
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂{ 8'(= {| l |} ) 1(<2)◂{ 9'(= a2◂ [ {| l |}] ) 10'(= a31◂ [ ] ) } } ⊢ 2'(= a3◂ [ *{ {| l |}a42◂ [ ]}] )
; .mov_ptn 0(<2)◂{ 8'(= {| l |} ) 1(<2)◂{ 9'(= a2◂ [ {| l |}] ) 10'(= a31◂ [ ] ) } } ⊢ 2'(= a3◂ [ *{ {| l |}a42◂ [ ]}] )
	ALC_RCD 2, rax
	mov r13,rax
	mov rax,QWORD [rsp-8+8*3]
	mov QWORD [r13+8+8*0],rax
	ALC_RCD 2, rax
	mov r14,rax
	mov rax,QWORD [rsp-8+8*2]
	mov QWORD [r14+8+8*0],rax
	mov rax,QWORD [rsp-8+8*1]
	mov QWORD [r14+8+8*1],rax
	mov rax,r14
	mov BYTE [rax+6],1
	mov QWORD [r13+8+8*1],rax
	mov rax,r13
	mov BYTE [rax+6],0
	mov r8,rax
	add rsp,24
	jmp LB_4152
LB_4152:
	cmp BYTE [r8+6],0
	jnz LB_4120
	POP_GRM_SCC
	ret
LB_4120:
	RB_GRM
	jmp LB_4155
LB_4154:
	add r14,1 
LB_4155:
	cmp r14,r9
	jge LB_4156
	JZ_SPC BYTE [r13+8+r14], LB_4154
LB_4156
	call GRM_77
	cmp BYTE [r8+6],0
	jnz LB_4159
	jmp LB_4160
LB_4159:
	jmp LB_4157
LB_4160:
	sub rsp,8
; .mov_ptn2 2'(= {| l |} ) ⊢ 8'(= {| l |} )
; .mov_ptn 2'(= {| l |} ) ⊢ 8'(= {| l |} )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_4158
LB_4157:
	add rsp,0
	jmp LB_4153
LB_4158:
	jmp LB_4162
LB_4161:
	add r14,1 
LB_4162:
	cmp r14,r9
	jge LB_4163
	JZ_SPC BYTE [r13+8+r14], LB_4161
LB_4163
	call GRM_254
	cmp BYTE [r8+6],0
	jnz LB_4166
	jmp LB_4167
LB_4166:
	jmp LB_4164
LB_4167:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a2◂ [ {| l |}] ) ⊢ 9'(= a2◂ [ {| l |}] )
; .mov_ptn 2'(= a2◂ [ {| l |}] ) ⊢ 9'(= a2◂ [ {| l |}] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_4165
LB_4164:
	add rsp,8
	jmp LB_4153
LB_4165:
	jmp LB_4169
LB_4168:
	add r14,1 
LB_4169:
	cmp r14,r9
	jge LB_4170
	JZ_SPC BYTE [r13+8+r14], LB_4168
LB_4170
	call GRM_219
	cmp BYTE [r8+6],0
	jnz LB_4173
	jmp LB_4174
LB_4173:
	jmp LB_4171
LB_4174:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a43◂ [ *{ }] ) ⊢ 10'(= a43◂ [ *{ }] )
; .mov_ptn 2'(= a43◂ [ *{ }] ) ⊢ 10'(= a43◂ [ *{ }] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_4172
LB_4171:
	add rsp,16
	jmp LB_4153
LB_4172:
	jmp LB_4176
LB_4175:
	add r14,1 
LB_4176:
	cmp r14,r9
	jge LB_4177
	JZ_SPC BYTE [r13+8+r14], LB_4175
LB_4177
	lea rax,[r14+3]
	cmp rax,r9
	jg LB_4180
	jmp LB_4181
LB_4180:
	mov r8,unt_1
	jmp LB_4178
LB_4181:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],226
	jnz LB_4182
	cmp BYTE [rdi+1],136
	jnz LB_4182
	cmp BYTE [rdi+2],144
	jnz LB_4182
	jmp LB_4183
LB_4182:
	mov r8,unt_1
	jmp LB_4178
LB_4183:
	add r14,3
	jmp LB_4179
LB_4178:
	add rsp,24
	jmp LB_4153
LB_4179:
	jmp LB_4185
LB_4184:
	add r14,1 
LB_4185:
	cmp r14,r9
	jge LB_4186
	JZ_SPC BYTE [r13+8+r14], LB_4184
LB_4186
	call GRM_77
	cmp BYTE [r8+6],0
	jnz LB_4189
	jmp LB_4190
LB_4189:
	jmp LB_4187
LB_4190:
	sub rsp,8
; .mov_ptn2 2'(= {| l |} ) ⊢ 11'(= {| l |} )
; .mov_ptn 2'(= {| l |} ) ⊢ 11'(= {| l |} )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_4188
LB_4187:
	add rsp,24
	jmp LB_4153
LB_4188:
	jmp LB_4192
LB_4191:
	add r14,1 
LB_4192:
	cmp r14,r9
	jge LB_4193
	JZ_SPC BYTE [r13+8+r14], LB_4191
LB_4193
	lea rax,[r14+1]
	cmp rax,r9
	jg LB_4196
	jmp LB_4197
LB_4196:
	mov r8,unt_1
	jmp LB_4194
LB_4197:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],58
	jnz LB_4198
	jmp LB_4199
LB_4198:
	mov r8,unt_1
	jmp LB_4194
LB_4199:
	add r14,1
	jmp LB_4195
LB_4194:
	add rsp,32
	jmp LB_4153
LB_4195:
	jmp LB_4201
LB_4200:
	add r14,1 
LB_4201:
	cmp r14,r9
	jge LB_4202
	JZ_SPC BYTE [r13+8+r14], LB_4200
LB_4202
	call GRM_213
	cmp BYTE [r8+6],0
	jnz LB_4205
	jmp LB_4206
LB_4205:
	jmp LB_4203
LB_4206:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a31◂ [ ] ) ⊢ 12'(= a31◂ [ ] )
; .mov_ptn 2'(= a31◂ [ ] ) ⊢ 12'(= a31◂ [ ] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_4204
LB_4203:
	add rsp,32
	jmp LB_4153
LB_4204:
	jmp LB_4208
LB_4207:
	add r14,1 
LB_4208:
	cmp r14,r9
	jge LB_4209
	JZ_SPC BYTE [r13+8+r14], LB_4207
LB_4209
	call GRM_257
	cmp BYTE [r8+6],0
	jnz LB_4212
	jmp LB_4213
LB_4212:
	jmp LB_4210
LB_4213:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a2◂ [ *{ {| l |}a31◂ [ ]}] ) ⊢ 13'(= a2◂ [ *{ {| l |}a31◂ [ ]}] )
; .mov_ptn 2'(= a2◂ [ *{ {| l |}a31◂ [ ]}] ) ⊢ 13'(= a2◂ [ *{ {| l |}a31◂ [ ]}] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_4211
LB_4210:
	add rsp,40
	jmp LB_4153
LB_4211:
	mov QWORD [rsp+8*6],r14
	mov r13,QWORD [rsp+16+8*6]
	mov r14,QWORD [rsp+8*6]
	jmp LB_4214
LB_4214
; #23 { { 11'(= {| l |} ) 12'(= a31◂ [ ] ) } 13'(= a2◂ [ *{ {| l |}a31◂ [ ]}] ) } ⊢ 0(<2)◂{ { 11'(= {| l |} ) 12'(= a31◂ [ ] ) } 13'(= a2◂ [ *{ {| l |}a31◂ [ ]}] ) }
; #168 { 9'(= a2◂ [ {| l |}] ) 0(<2)◂{ { 11'(= {| l |} ) 12'(= a31◂ [ ] ) } 13'(= a2◂ [ *{ {| l |}a31◂ [ ]}] ) } } ⊢ 0(<2)◂{ 9'(= a2◂ [ {| l |}] ) 0(<2)◂{ { 11'(= {| l |} ) 12'(= a31◂ [ ] ) } 13'(= a2◂ [ *{ {| l |}a31◂ [ ]}] ) } }
; #24 { 8'(= {| l |} ) 0(<2)◂{ 9'(= a2◂ [ {| l |}] ) 0(<2)◂{ { 11'(= {| l |} ) 12'(= a31◂ [ ] ) } 13'(= a2◂ [ *{ {| l |}a31◂ [ ]}] ) } } } ⊢ 0(<2)◂{ 8'(= {| l |} ) 0(<2)◂{ 9'(= a2◂ [ {| l |}] ) 0(<2)◂{ { 11'(= {| l |} ) 12'(= a31◂ [ ] ) } 13'(= a2◂ [ *{ {| l |}a31◂ [ ]}] ) } } }
; ∎ 0(<2)◂{ 8'(= {| l |} ) 0(<2)◂{ 9'(= a2◂ [ {| l |}] ) 0(<2)◂{ { 11'(= {| l |} ) 12'(= a31◂ [ ] ) } 13'(= a2◂ [ *{ {| l |}a31◂ [ ]}] ) } } }
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 10'(= a43◂ [ *{ }] )
	mov rdi,QWORD [rsp-8+8*4]
	C_PUSH_REGS
	mov r8,rdi
	call LB_1706
	C_POP_REGS
; .mov_ptn2 0(<2)◂{ 8'(= {| l |} ) 0(<2)◂{ 9'(= a2◂ [ {| l |}] ) 0(<2)◂{ { 11'(= {| l |} ) 12'(= a31◂ [ ] ) } 13'(= a2◂ [ *{ {| l |}a31◂ [ ]}] ) } } } ⊢ 2'(= a3◂ [ *{ {| l |}a42◂ [ ]}] )
; .mov_ptn 0(<2)◂{ 8'(= {| l |} ) 0(<2)◂{ 9'(= a2◂ [ {| l |}] ) 0(<2)◂{ { 11'(= {| l |} ) 12'(= a31◂ [ ] ) } 13'(= a2◂ [ *{ {| l |}a31◂ [ ]}] ) } } } ⊢ 2'(= a3◂ [ *{ {| l |}a42◂ [ ]}] )
	ALC_RCD 2, rax
	mov r13,rax
	mov rax,QWORD [rsp-8+8*6]
	mov QWORD [r13+8+8*0],rax
	ALC_RCD 2, rax
	mov r14,rax
	mov rax,QWORD [rsp-8+8*5]
	mov QWORD [r14+8+8*0],rax
	ALC_RCD 2, rax
	mov r9,rax
	ALC_RCD 2, rax
	mov r10,rax
	mov rax,QWORD [rsp-8+8*3]
	mov QWORD [r10+8+8*0],rax
	mov rax,QWORD [rsp-8+8*2]
	mov QWORD [r10+8+8*1],rax
	mov rax,r10
	mov QWORD [r9+8+8*0],rax
	mov rax,QWORD [rsp-8+8*1]
	mov QWORD [r9+8+8*1],rax
	mov rax,r9
	mov BYTE [rax+6],0
	mov QWORD [r14+8+8*1],rax
	mov rax,r14
	mov BYTE [rax+6],0
	mov QWORD [r13+8+8*1],rax
	mov rax,r13
	mov BYTE [rax+6],0
	mov r8,rax
	add rsp,48
	jmp LB_4215
LB_4215:
	cmp BYTE [r8+6],0
	jnz LB_4153
	POP_GRM_SCC
	ret
LB_4153:
	POP_GRM_FAIL 
	ret
ETR_254:
	mov r9,0x0000_ffff_ffff_ffff
	and r9,[r13]
	call GRM_254
	ret
GRM_254:
	PUSH_GRM
	jmp LB_4218
LB_4217:
	add r14,1 
LB_4218:
	cmp r14,r9
	jge LB_4219
	JZ_SPC BYTE [r13+8+r14], LB_4217
LB_4219
	lea rax,[r14+3]
	cmp rax,r9
	jg LB_4222
	jmp LB_4223
LB_4222:
	mov r8,unt_1
	jmp LB_4220
LB_4223:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],226
	jnz LB_4224
	cmp BYTE [rdi+1],151
	jnz LB_4224
	cmp BYTE [rdi+2],130
	jnz LB_4224
	jmp LB_4225
LB_4224:
	mov r8,unt_1
	jmp LB_4220
LB_4225:
	add r14,3
	jmp LB_4221
LB_4220:
	add rsp,0
	jmp LB_4216
LB_4221:
	jmp LB_4227
LB_4226:
	add r14,1 
LB_4227:
	cmp r14,r9
	jge LB_4228
	JZ_SPC BYTE [r13+8+r14], LB_4226
LB_4228
	call GRM_218
	cmp BYTE [r8+6],0
	jnz LB_4231
	jmp LB_4232
LB_4231:
	jmp LB_4229
LB_4232:
	sub rsp,8
; .mov_ptn2 2'(= {| l |} ) ⊢ 8'(= {| l |} )
; .mov_ptn 2'(= {| l |} ) ⊢ 8'(= {| l |} )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_4230
LB_4229:
	add rsp,0
	POP_GRM_FAIL
	ret
LB_4230:
	jmp LB_4234
LB_4233:
	add r14,1 
LB_4234:
	cmp r14,r9
	jge LB_4235
	JZ_SPC BYTE [r13+8+r14], LB_4233
LB_4235
	call GRM_255
	cmp BYTE [r8+6],0
	jnz LB_4238
	jmp LB_4239
LB_4238:
	jmp LB_4236
LB_4239:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a2◂ [ {| l |}] ) ⊢ 9'(= a2◂ [ {| l |}] )
; .mov_ptn 2'(= a2◂ [ {| l |}] ) ⊢ 9'(= a2◂ [ {| l |}] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_4237
LB_4236:
	add rsp,8
	POP_GRM_FAIL
	ret
LB_4237:
	mov QWORD [rsp+8*2],r14
	mov r13,QWORD [rsp+16+8*2]
	mov r14,QWORD [rsp+8*2]
	jmp LB_4240
LB_4240
; #23 { 8'(= {| l |} ) 9'(= a2◂ [ {| l |}] ) } ⊢ 0(<2)◂{ 8'(= {| l |} ) 9'(= a2◂ [ {| l |}] ) }
; #24 0(<2)◂{ 8'(= {| l |} ) 9'(= a2◂ [ {| l |}] ) } ⊢ 0(<2)◂0(<2)◂{ 8'(= {| l |} ) 9'(= a2◂ [ {| l |}] ) }
; ∎ 0(<2)◂0(<2)◂{ 8'(= {| l |} ) 9'(= a2◂ [ {| l |}] ) }
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂0(<2)◂{ 8'(= {| l |} ) 9'(= a2◂ [ {| l |}] ) } ⊢ 2'(= a3◂ [ a2◂ [ {| l |}]] )
; .mov_ptn 0(<2)◂0(<2)◂{ 8'(= {| l |} ) 9'(= a2◂ [ {| l |}] ) } ⊢ 2'(= a3◂ [ a2◂ [ {| l |}]] )
	ALC_RCD 2, rax
	mov r13,rax
	mov rax,QWORD [rsp-8+8*2]
	mov QWORD [r13+8+8*0],rax
	mov rax,QWORD [rsp-8+8*1]
	mov QWORD [r13+8+8*1],rax
	mov rax,r13
	mov BYTE [rax+6],0
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,16
	jmp LB_4241
LB_4241:
	cmp BYTE [r8+6],0
	jnz LB_4216
	POP_GRM_SCC
	ret
LB_4216:
	RB_GRM
	jmp LB_4244
LB_4243:
	add r14,1 
LB_4244:
	cmp r14,r9
	jge LB_4245
	JZ_SPC BYTE [r13+8+r14], LB_4243
LB_4245
	call GRM_218
	cmp BYTE [r8+6],0
	jnz LB_4248
	jmp LB_4249
LB_4248:
	jmp LB_4246
LB_4249:
	sub rsp,8
; .mov_ptn2 2'(= {| l |} ) ⊢ 8'(= {| l |} )
; .mov_ptn 2'(= {| l |} ) ⊢ 8'(= {| l |} )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_4247
LB_4246:
	add rsp,0
	jmp LB_4242
LB_4247:
	jmp LB_4251
LB_4250:
	add r14,1 
LB_4251:
	cmp r14,r9
	jge LB_4252
	JZ_SPC BYTE [r13+8+r14], LB_4250
LB_4252
	call GRM_255
	cmp BYTE [r8+6],0
	jnz LB_4255
	jmp LB_4256
LB_4255:
	jmp LB_4253
LB_4256:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a2◂ [ {| l |}] ) ⊢ 9'(= a2◂ [ {| l |}] )
; .mov_ptn 2'(= a2◂ [ {| l |}] ) ⊢ 9'(= a2◂ [ {| l |}] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_4254
LB_4253:
	add rsp,8
	POP_GRM_FAIL
	ret
LB_4254:
	mov QWORD [rsp+8*2],r14
	mov r13,QWORD [rsp+16+8*2]
	mov r14,QWORD [rsp+8*2]
	jmp LB_4257
LB_4257
; #23 { 8'(= {| l |} ) 9'(= a2◂ [ {| l |}] ) } ⊢ 0(<2)◂{ 8'(= {| l |} ) 9'(= a2◂ [ {| l |}] ) }
; #24 0(<2)◂{ 8'(= {| l |} ) 9'(= a2◂ [ {| l |}] ) } ⊢ 0(<2)◂0(<2)◂{ 8'(= {| l |} ) 9'(= a2◂ [ {| l |}] ) }
; ∎ 0(<2)◂0(<2)◂{ 8'(= {| l |} ) 9'(= a2◂ [ {| l |}] ) }
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂0(<2)◂{ 8'(= {| l |} ) 9'(= a2◂ [ {| l |}] ) } ⊢ 2'(= a3◂ [ a2◂ [ {| l |}]] )
; .mov_ptn 0(<2)◂0(<2)◂{ 8'(= {| l |} ) 9'(= a2◂ [ {| l |}] ) } ⊢ 2'(= a3◂ [ a2◂ [ {| l |}]] )
	ALC_RCD 2, rax
	mov r13,rax
	mov rax,QWORD [rsp-8+8*2]
	mov QWORD [r13+8+8*0],rax
	mov rax,QWORD [rsp-8+8*1]
	mov QWORD [r13+8+8*1],rax
	mov rax,r13
	mov BYTE [rax+6],0
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,16
	jmp LB_4258
LB_4258:
	cmp BYTE [r8+6],0
	jnz LB_4242
	POP_GRM_SCC
	ret
LB_4242:
	RB_GRM
	mov QWORD [rsp+8*0],r14
	mov r13,QWORD [rsp+16+8*0]
	mov r14,QWORD [rsp+8*0]
	jmp LB_4260
LB_4260
; #22 { } ⊢ 1(<2)◂{ }
; #24 1(<2)◂{ } ⊢ 0(<2)◂1(<2)◂{ }
; ∎ 0(<2)◂1(<2)◂{ }
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂1(<2)◂{ } ⊢ 2'(= a3◂ [ a2◂ [ {| l |}]] )
; .mov_ptn 0(<2)◂1(<2)◂{ } ⊢ 2'(= a3◂ [ a2◂ [ {| l |}]] )
	mov rax,unt 
	mov rax,unt_1
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	jmp LB_4261
LB_4261:
	cmp BYTE [r8+6],0
	jnz LB_4259
	POP_GRM_SCC
	ret
LB_4259:
	POP_GRM_FAIL 
	ret
ETR_255:
	mov r9,0x0000_ffff_ffff_ffff
	and r9,[r13]
	call GRM_255
	ret
GRM_255:
	PUSH_GRM
	jmp LB_4264
LB_4263:
	add r14,1 
LB_4264:
	cmp r14,r9
	jge LB_4265
	JZ_SPC BYTE [r13+8+r14], LB_4263
LB_4265
	lea rax,[r14+1]
	cmp rax,r9
	jg LB_4268
	jmp LB_4269
LB_4268:
	mov r8,unt_1
	jmp LB_4266
LB_4269:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],44
	jnz LB_4270
	jmp LB_4271
LB_4270:
	mov r8,unt_1
	jmp LB_4266
LB_4271:
	add r14,1
	jmp LB_4267
LB_4266:
	add rsp,0
	jmp LB_4262
LB_4267:
	jmp LB_4273
LB_4272:
	add r14,1 
LB_4273:
	cmp r14,r9
	jge LB_4274
	JZ_SPC BYTE [r13+8+r14], LB_4272
LB_4274
	call GRM_218
	cmp BYTE [r8+6],0
	jnz LB_4277
	jmp LB_4278
LB_4277:
	jmp LB_4275
LB_4278:
	sub rsp,8
; .mov_ptn2 2'(= {| l |} ) ⊢ 8'(= {| l |} )
; .mov_ptn 2'(= {| l |} ) ⊢ 8'(= {| l |} )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_4276
LB_4275:
	add rsp,0
	POP_GRM_FAIL
	ret
LB_4276:
	jmp LB_4280
LB_4279:
	add r14,1 
LB_4280:
	cmp r14,r9
	jge LB_4281
	JZ_SPC BYTE [r13+8+r14], LB_4279
LB_4281
	call GRM_255
	cmp BYTE [r8+6],0
	jnz LB_4284
	jmp LB_4285
LB_4284:
	jmp LB_4282
LB_4285:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a2◂ [ {| l |}] ) ⊢ 9'(= a2◂ [ {| l |}] )
; .mov_ptn 2'(= a2◂ [ {| l |}] ) ⊢ 9'(= a2◂ [ {| l |}] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_4283
LB_4282:
	add rsp,8
	POP_GRM_FAIL
	ret
LB_4283:
	mov QWORD [rsp+8*2],r14
	mov r13,QWORD [rsp+16+8*2]
	mov r14,QWORD [rsp+8*2]
	jmp LB_4286
LB_4286
; #23 { 8'(= {| l |} ) 9'(= a2◂ [ {| l |}] ) } ⊢ 0(<2)◂{ 8'(= {| l |} ) 9'(= a2◂ [ {| l |}] ) }
; #24 0(<2)◂{ 8'(= {| l |} ) 9'(= a2◂ [ {| l |}] ) } ⊢ 0(<2)◂0(<2)◂{ 8'(= {| l |} ) 9'(= a2◂ [ {| l |}] ) }
; ∎ 0(<2)◂0(<2)◂{ 8'(= {| l |} ) 9'(= a2◂ [ {| l |}] ) }
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂0(<2)◂{ 8'(= {| l |} ) 9'(= a2◂ [ {| l |}] ) } ⊢ 2'(= a3◂ [ a2◂ [ {| l |}]] )
; .mov_ptn 0(<2)◂0(<2)◂{ 8'(= {| l |} ) 9'(= a2◂ [ {| l |}] ) } ⊢ 2'(= a3◂ [ a2◂ [ {| l |}]] )
	ALC_RCD 2, rax
	mov r13,rax
	mov rax,QWORD [rsp-8+8*2]
	mov QWORD [r13+8+8*0],rax
	mov rax,QWORD [rsp-8+8*1]
	mov QWORD [r13+8+8*1],rax
	mov rax,r13
	mov BYTE [rax+6],0
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,16
	jmp LB_4287
LB_4287:
	cmp BYTE [r8+6],0
	jnz LB_4262
	POP_GRM_SCC
	ret
LB_4262:
	RB_GRM
	mov QWORD [rsp+8*0],r14
	mov r13,QWORD [rsp+16+8*0]
	mov r14,QWORD [rsp+8*0]
	jmp LB_4289
LB_4289
; #22 { } ⊢ 1(<2)◂{ }
; #24 1(<2)◂{ } ⊢ 0(<2)◂1(<2)◂{ }
; ∎ 0(<2)◂1(<2)◂{ }
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂1(<2)◂{ } ⊢ 2'(= a3◂ [ a2◂ [ {| l |}]] )
; .mov_ptn 0(<2)◂1(<2)◂{ } ⊢ 2'(= a3◂ [ a2◂ [ {| l |}]] )
	mov rax,unt 
	mov rax,unt_1
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	jmp LB_4290
LB_4290:
	cmp BYTE [r8+6],0
	jnz LB_4288
	POP_GRM_SCC
	ret
LB_4288:
	POP_GRM_FAIL 
	ret
ETR_256:
	mov r9,0x0000_ffff_ffff_ffff
	and r9,[r13]
	call GRM_256
	ret
GRM_256:
	PUSH_GRM
	jmp LB_4293
LB_4292:
	add r14,1 
LB_4293:
	cmp r14,r9
	jge LB_4294
	JZ_SPC BYTE [r13+8+r14], LB_4292
LB_4294
	call GRM_219
	cmp BYTE [r8+6],0
	jnz LB_4297
	jmp LB_4298
LB_4297:
	jmp LB_4295
LB_4298:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a43◂ [ *{ }] ) ⊢ 8'(= a43◂ [ *{ }] )
; .mov_ptn 2'(= a43◂ [ *{ }] ) ⊢ 8'(= a43◂ [ *{ }] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_4296
LB_4295:
	add rsp,0
	jmp LB_4291
LB_4296:
	jmp LB_4300
LB_4299:
	add r14,1 
LB_4300:
	cmp r14,r9
	jge LB_4301
	JZ_SPC BYTE [r13+8+r14], LB_4299
LB_4301
	lea rax,[r14+1]
	cmp rax,r9
	jg LB_4304
	jmp LB_4305
LB_4304:
	mov r8,unt_1
	jmp LB_4302
LB_4305:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],64
	jnz LB_4306
	jmp LB_4307
LB_4306:
	mov r8,unt_1
	jmp LB_4302
LB_4307:
	add r14,1
	jmp LB_4303
LB_4302:
	add rsp,8
	jmp LB_4291
LB_4303:
	jmp LB_4309
LB_4308:
	add r14,1 
LB_4309:
	cmp r14,r9
	jge LB_4310
	JZ_SPC BYTE [r13+8+r14], LB_4308
LB_4310
	lea rax,[r14+1]
	cmp rax,r9
	jg LB_4313
	jmp LB_4314
LB_4313:
	mov r8,unt_1
	jmp LB_4311
LB_4314:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],46
	jnz LB_4315
	jmp LB_4316
LB_4315:
	mov r8,unt_1
	jmp LB_4311
LB_4316:
	add r14,1
	jmp LB_4312
LB_4311:
	add rsp,8
	POP_GRM_FAIL
	ret
LB_4312:
	jmp LB_4318
LB_4317:
	add r14,1 
LB_4318:
	cmp r14,r9
	jge LB_4319
	JZ_SPC BYTE [r13+8+r14], LB_4317
LB_4319
	call GRM_253
	cmp BYTE [r8+6],0
	jnz LB_4322
	jmp LB_4323
LB_4322:
	jmp LB_4320
LB_4323:
	sub rsp,16
; .mov_ptn2 2'(= *{ {| l |}a42◂ [ ]} ) ⊢ { 9'(= {| l |} ) 10'(= a42◂ [ ] ) }
; .mov_ptn 2'(= *{ {| l |}a42◂ [ ]} ) ⊢ { 9'(= {| l |} ) 10'(= a42◂ [ ] ) }
	mov r10, QWORD [r8+8]
	mov QWORD [rsp-8+8*2],r10
	mov r11, QWORD [r8+16]
	mov QWORD [rsp-8+8*1],r11
	mov rdi,r8
	FREE_RCD 2,rdi
	jmp LB_4321
LB_4320:
	add rsp,8
	POP_GRM_FAIL
	ret
LB_4321:
	jmp LB_4325
LB_4324:
	add r14,1 
LB_4325:
	cmp r14,r9
	jge LB_4326
	JZ_SPC BYTE [r13+8+r14], LB_4324
LB_4326
	call GRM_256
	cmp BYTE [r8+6],0
	jnz LB_4329
	jmp LB_4330
LB_4329:
	jmp LB_4327
LB_4330:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a2◂ [ *{ {| l |}a42◂ [ ]}] ) ⊢ 11'(= a2◂ [ *{ {| l |}a42◂ [ ]}] )
; .mov_ptn 2'(= a2◂ [ *{ {| l |}a42◂ [ ]}] ) ⊢ 11'(= a2◂ [ *{ {| l |}a42◂ [ ]}] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_4328
LB_4327:
	add rsp,24
	POP_GRM_FAIL
	ret
LB_4328:
	mov QWORD [rsp+8*4],r14
	mov r13,QWORD [rsp+16+8*4]
	mov r14,QWORD [rsp+8*4]
	jmp LB_4331
LB_4331
; #23 { { 9'(= {| l |} ) 10'(= a42◂ [ ] ) } 11'(= a2◂ [ *{ {| l |}a42◂ [ ]}] ) } ⊢ 0(<2)◂{ { 9'(= {| l |} ) 10'(= a42◂ [ ] ) } 11'(= a2◂ [ *{ {| l |}a42◂ [ ]}] ) }
; #24 0(<2)◂{ { 9'(= {| l |} ) 10'(= a42◂ [ ] ) } 11'(= a2◂ [ *{ {| l |}a42◂ [ ]}] ) } ⊢ 0(<2)◂0(<2)◂{ { 9'(= {| l |} ) 10'(= a42◂ [ ] ) } 11'(= a2◂ [ *{ {| l |}a42◂ [ ]}] ) }
; ∎ 0(<2)◂0(<2)◂{ { 9'(= {| l |} ) 10'(= a42◂ [ ] ) } 11'(= a2◂ [ *{ {| l |}a42◂ [ ]}] ) }
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 8'(= a43◂ [ *{ }] )
	mov rdi,QWORD [rsp-8+8*4]
	C_PUSH_REGS
	mov r8,rdi
	call LB_1706
	C_POP_REGS
; .mov_ptn2 0(<2)◂0(<2)◂{ { 9'(= {| l |} ) 10'(= a42◂ [ ] ) } 11'(= a2◂ [ *{ {| l |}a42◂ [ ]}] ) } ⊢ 2'(= a3◂ [ a2◂ [ *{ {| l |}a42◂ [ ]}]] )
; .mov_ptn 0(<2)◂0(<2)◂{ { 9'(= {| l |} ) 10'(= a42◂ [ ] ) } 11'(= a2◂ [ *{ {| l |}a42◂ [ ]}] ) } ⊢ 2'(= a3◂ [ a2◂ [ *{ {| l |}a42◂ [ ]}]] )
	ALC_RCD 2, rax
	mov r13,rax
	ALC_RCD 2, rax
	mov r14,rax
	mov rax,QWORD [rsp-8+8*3]
	mov QWORD [r14+8+8*0],rax
	mov rax,QWORD [rsp-8+8*2]
	mov QWORD [r14+8+8*1],rax
	mov rax,r14
	mov QWORD [r13+8+8*0],rax
	mov rax,QWORD [rsp-8+8*1]
	mov QWORD [r13+8+8*1],rax
	mov rax,r13
	mov BYTE [rax+6],0
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,32
	jmp LB_4332
LB_4332:
	cmp BYTE [r8+6],0
	jnz LB_4291
	POP_GRM_SCC
	ret
LB_4291:
	RB_GRM
	mov QWORD [rsp+8*0],r14
	mov r13,QWORD [rsp+16+8*0]
	mov r14,QWORD [rsp+8*0]
	jmp LB_4334
LB_4334
; #22 { } ⊢ 1(<2)◂{ }
; #24 1(<2)◂{ } ⊢ 0(<2)◂1(<2)◂{ }
; ∎ 0(<2)◂1(<2)◂{ }
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂1(<2)◂{ } ⊢ 2'(= a3◂ [ a2◂ [ *{ {| l |}a42◂ [ ]}]] )
; .mov_ptn 0(<2)◂1(<2)◂{ } ⊢ 2'(= a3◂ [ a2◂ [ *{ {| l |}a42◂ [ ]}]] )
	mov rax,unt 
	mov rax,unt_1
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	jmp LB_4335
LB_4335:
	cmp BYTE [r8+6],0
	jnz LB_4333
	POP_GRM_SCC
	ret
LB_4333:
	POP_GRM_FAIL 
	ret
ETR_257:
	mov r9,0x0000_ffff_ffff_ffff
	and r9,[r13]
	call GRM_257
	ret
GRM_257:
	PUSH_GRM
	jmp LB_4338
LB_4337:
	add r14,1 
LB_4338:
	cmp r14,r9
	jge LB_4339
	JZ_SPC BYTE [r13+8+r14], LB_4337
LB_4339
	call GRM_219
	cmp BYTE [r8+6],0
	jnz LB_4342
	jmp LB_4343
LB_4342:
	jmp LB_4340
LB_4343:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a43◂ [ *{ }] ) ⊢ 8'(= a43◂ [ *{ }] )
; .mov_ptn 2'(= a43◂ [ *{ }] ) ⊢ 8'(= a43◂ [ *{ }] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_4341
LB_4340:
	add rsp,0
	jmp LB_4336
LB_4341:
	jmp LB_4345
LB_4344:
	add r14,1 
LB_4345:
	cmp r14,r9
	jge LB_4346
	JZ_SPC BYTE [r13+8+r14], LB_4344
LB_4346
	lea rax,[r14+3]
	cmp rax,r9
	jg LB_4349
	jmp LB_4350
LB_4349:
	mov r8,unt_1
	jmp LB_4347
LB_4350:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],226
	jnz LB_4351
	cmp BYTE [rdi+1],136
	jnz LB_4351
	cmp BYTE [rdi+2],144
	jnz LB_4351
	jmp LB_4352
LB_4351:
	mov r8,unt_1
	jmp LB_4347
LB_4352:
	add r14,3
	jmp LB_4348
LB_4347:
	add rsp,8
	jmp LB_4336
LB_4348:
	jmp LB_4354
LB_4353:
	add r14,1 
LB_4354:
	cmp r14,r9
	jge LB_4355
	JZ_SPC BYTE [r13+8+r14], LB_4353
LB_4355
	call GRM_77
	cmp BYTE [r8+6],0
	jnz LB_4358
	jmp LB_4359
LB_4358:
	jmp LB_4356
LB_4359:
	sub rsp,8
; .mov_ptn2 2'(= {| l |} ) ⊢ 9'(= {| l |} )
; .mov_ptn 2'(= {| l |} ) ⊢ 9'(= {| l |} )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_4357
LB_4356:
	add rsp,8
	POP_GRM_FAIL
	ret
LB_4357:
	jmp LB_4361
LB_4360:
	add r14,1 
LB_4361:
	cmp r14,r9
	jge LB_4362
	JZ_SPC BYTE [r13+8+r14], LB_4360
LB_4362
	lea rax,[r14+1]
	cmp rax,r9
	jg LB_4365
	jmp LB_4366
LB_4365:
	mov r8,unt_1
	jmp LB_4363
LB_4366:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],58
	jnz LB_4367
	jmp LB_4368
LB_4367:
	mov r8,unt_1
	jmp LB_4363
LB_4368:
	add r14,1
	jmp LB_4364
LB_4363:
	add rsp,16
	POP_GRM_FAIL
	ret
LB_4364:
	jmp LB_4370
LB_4369:
	add r14,1 
LB_4370:
	cmp r14,r9
	jge LB_4371
	JZ_SPC BYTE [r13+8+r14], LB_4369
LB_4371
	call GRM_213
	cmp BYTE [r8+6],0
	jnz LB_4374
	jmp LB_4375
LB_4374:
	jmp LB_4372
LB_4375:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a31◂ [ ] ) ⊢ 10'(= a31◂ [ ] )
; .mov_ptn 2'(= a31◂ [ ] ) ⊢ 10'(= a31◂ [ ] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_4373
LB_4372:
	add rsp,16
	POP_GRM_FAIL
	ret
LB_4373:
	jmp LB_4377
LB_4376:
	add r14,1 
LB_4377:
	cmp r14,r9
	jge LB_4378
	JZ_SPC BYTE [r13+8+r14], LB_4376
LB_4378
	call GRM_257
	cmp BYTE [r8+6],0
	jnz LB_4381
	jmp LB_4382
LB_4381:
	jmp LB_4379
LB_4382:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a2◂ [ *{ {| l |}a31◂ [ ]}] ) ⊢ 11'(= a2◂ [ *{ {| l |}a31◂ [ ]}] )
; .mov_ptn 2'(= a2◂ [ *{ {| l |}a31◂ [ ]}] ) ⊢ 11'(= a2◂ [ *{ {| l |}a31◂ [ ]}] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_4380
LB_4379:
	add rsp,24
	POP_GRM_FAIL
	ret
LB_4380:
	mov QWORD [rsp+8*4],r14
	mov r13,QWORD [rsp+16+8*4]
	mov r14,QWORD [rsp+8*4]
	jmp LB_4383
LB_4383
; #23 { { 9'(= {| l |} ) 10'(= a31◂ [ ] ) } 11'(= a2◂ [ *{ {| l |}a31◂ [ ]}] ) } ⊢ 0(<2)◂{ { 9'(= {| l |} ) 10'(= a31◂ [ ] ) } 11'(= a2◂ [ *{ {| l |}a31◂ [ ]}] ) }
; #24 0(<2)◂{ { 9'(= {| l |} ) 10'(= a31◂ [ ] ) } 11'(= a2◂ [ *{ {| l |}a31◂ [ ]}] ) } ⊢ 0(<2)◂0(<2)◂{ { 9'(= {| l |} ) 10'(= a31◂ [ ] ) } 11'(= a2◂ [ *{ {| l |}a31◂ [ ]}] ) }
; ∎ 0(<2)◂0(<2)◂{ { 9'(= {| l |} ) 10'(= a31◂ [ ] ) } 11'(= a2◂ [ *{ {| l |}a31◂ [ ]}] ) }
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 8'(= a43◂ [ *{ }] )
	mov rdi,QWORD [rsp-8+8*4]
	C_PUSH_REGS
	mov r8,rdi
	call LB_1706
	C_POP_REGS
; .mov_ptn2 0(<2)◂0(<2)◂{ { 9'(= {| l |} ) 10'(= a31◂ [ ] ) } 11'(= a2◂ [ *{ {| l |}a31◂ [ ]}] ) } ⊢ 2'(= a3◂ [ a2◂ [ *{ {| l |}a31◂ [ ]}]] )
; .mov_ptn 0(<2)◂0(<2)◂{ { 9'(= {| l |} ) 10'(= a31◂ [ ] ) } 11'(= a2◂ [ *{ {| l |}a31◂ [ ]}] ) } ⊢ 2'(= a3◂ [ a2◂ [ *{ {| l |}a31◂ [ ]}]] )
	ALC_RCD 2, rax
	mov r13,rax
	ALC_RCD 2, rax
	mov r14,rax
	mov rax,QWORD [rsp-8+8*3]
	mov QWORD [r14+8+8*0],rax
	mov rax,QWORD [rsp-8+8*2]
	mov QWORD [r14+8+8*1],rax
	mov rax,r14
	mov QWORD [r13+8+8*0],rax
	mov rax,QWORD [rsp-8+8*1]
	mov QWORD [r13+8+8*1],rax
	mov rax,r13
	mov BYTE [rax+6],0
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,32
	jmp LB_4384
LB_4384:
	cmp BYTE [r8+6],0
	jnz LB_4336
	POP_GRM_SCC
	ret
LB_4336:
	RB_GRM
	mov QWORD [rsp+8*0],r14
	mov r13,QWORD [rsp+16+8*0]
	mov r14,QWORD [rsp+8*0]
	jmp LB_4386
LB_4386
; #22 { } ⊢ 1(<2)◂{ }
; #24 1(<2)◂{ } ⊢ 0(<2)◂1(<2)◂{ }
; ∎ 0(<2)◂1(<2)◂{ }
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂1(<2)◂{ } ⊢ 2'(= a3◂ [ a2◂ [ *{ {| l |}a31◂ [ ]}]] )
; .mov_ptn 0(<2)◂1(<2)◂{ } ⊢ 2'(= a3◂ [ a2◂ [ *{ {| l |}a31◂ [ ]}]] )
	mov rax,unt 
	mov rax,unt_1
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	jmp LB_4387
LB_4387:
	cmp BYTE [r8+6],0
	jnz LB_4385
	POP_GRM_SCC
	ret
LB_4385:
	POP_GRM_FAIL 
	ret
ETR_258:
	mov r9,0x0000_ffff_ffff_ffff
	and r9,[r13]
	call GRM_258
	ret
GRM_258:
	PUSH_GRM
	jmp LB_4390
LB_4389:
	add r14,1 
LB_4390:
	cmp r14,r9
	jge LB_4391
	JZ_LINE_SPC BYTE [r13+8+r14], LB_4389
LB_4391
	call GRM_219
	cmp BYTE [r8+6],0
	jnz LB_4394
	jmp LB_4395
LB_4394:
	jmp LB_4392
LB_4395:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a43◂ [ *{ }] ) ⊢ 8'(= a43◂ [ *{ }] )
; .mov_ptn 2'(= a43◂ [ *{ }] ) ⊢ 8'(= a43◂ [ *{ }] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_4393
LB_4392:
	add rsp,0
	jmp LB_4388
LB_4393:
	jmp LB_4397
LB_4396:
	add r14,1 
LB_4397:
	cmp r14,r9
	jge LB_4398
	JZ_LINE_SPC BYTE [r13+8+r14], LB_4396
LB_4398
	lea rax,[r14+1]
	cmp rax,r9
	jg LB_4401
	jmp LB_4402
LB_4401:
	mov r8,unt_1
	jmp LB_4399
LB_4402:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],64
	jnz LB_4403
	jmp LB_4404
LB_4403:
	mov r8,unt_1
	jmp LB_4399
LB_4404:
	add r14,1
	jmp LB_4400
LB_4399:
	add rsp,8
	jmp LB_4388
LB_4400:
	jmp LB_4406
LB_4405:
	add r14,1 
LB_4406:
	cmp r14,r9
	jge LB_4407
	JZ_LINE_SPC BYTE [r13+8+r14], LB_4405
LB_4407
	lea rax,[r14+1]
	cmp rax,r9
	jg LB_4410
	jmp LB_4411
LB_4410:
	mov r8,unt_1
	jmp LB_4408
LB_4411:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],46
	jnz LB_4412
	jmp LB_4413
LB_4412:
	mov r8,unt_1
	jmp LB_4408
LB_4413:
	add r14,1
	jmp LB_4409
LB_4408:
	add rsp,8
	POP_GRM_FAIL
	ret
LB_4409:
	jmp LB_4415
LB_4414:
	add r14,1 
LB_4415:
	cmp r14,r9
	jge LB_4416
	JZ_LINE_SPC BYTE [r13+8+r14], LB_4414
LB_4416
	call GRM_77
	cmp BYTE [r8+6],0
	jnz LB_4419
	jmp LB_4420
LB_4419:
	jmp LB_4417
LB_4420:
	sub rsp,8
; .mov_ptn2 2'(= {| l |} ) ⊢ 9'(= {| l |} )
; .mov_ptn 2'(= {| l |} ) ⊢ 9'(= {| l |} )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_4418
LB_4417:
	add rsp,8
	POP_GRM_FAIL
	ret
LB_4418:
	jmp LB_4422
LB_4421:
	add r14,1 
LB_4422:
	cmp r14,r9
	jge LB_4423
	JZ_LINE_SPC BYTE [r13+8+r14], LB_4421
LB_4423
	call GRM_208
	cmp BYTE [r8+6],0
	jnz LB_4426
	jmp LB_4427
LB_4426:
	jmp LB_4424
LB_4427:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a16◂ [ a21◂ [ {| l |}]] ) ⊢ 10'(= a16◂ [ a21◂ [ {| l |}]] )
; .mov_ptn 2'(= a16◂ [ a21◂ [ {| l |}]] ) ⊢ 10'(= a16◂ [ a21◂ [ {| l |}]] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_4425
LB_4424:
	add rsp,16
	POP_GRM_FAIL
	ret
LB_4425:
	jmp LB_4429
LB_4428:
	add r14,1 
LB_4429:
	cmp r14,r9
	jge LB_4430
	JZ_LINE_SPC BYTE [r13+8+r14], LB_4428
LB_4430
	call GRM_260
	cmp BYTE [r8+6],0
	jnz LB_4433
	jmp LB_4434
LB_4433:
	jmp LB_4431
LB_4434:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a3◂ [ a31◂ [ ]] ) ⊢ 11'(= a3◂ [ a31◂ [ ]] )
; .mov_ptn 2'(= a3◂ [ a31◂ [ ]] ) ⊢ 11'(= a3◂ [ a31◂ [ ]] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_4432
LB_4431:
	add rsp,24
	POP_GRM_FAIL
	ret
LB_4432:
	jmp LB_4436
LB_4435:
	add r14,1 
LB_4436:
	cmp r14,r9
	jge LB_4437
	JZ_LINE_SPC BYTE [r13+8+r14], LB_4435
LB_4437
	lea rax,[r14+1]
	cmp rax,r9
	jg LB_4440
	jmp LB_4441
LB_4440:
	mov r8,unt_1
	jmp LB_4438
LB_4441:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],10
	jnz LB_4442
	jmp LB_4443
LB_4442:
	mov r8,unt_1
	jmp LB_4438
LB_4443:
	add r14,1
	jmp LB_4439
LB_4438:
	add rsp,32
	POP_GRM_FAIL
	ret
LB_4439:
	jmp LB_4445
LB_4444:
	add r14,1 
LB_4445:
	cmp r14,r9
	jge LB_4446
	JZ_LINE_SPC BYTE [r13+8+r14], LB_4444
LB_4446
	call GRM_237
	cmp BYTE [r8+6],0
	jnz LB_4449
	jmp LB_4450
LB_4449:
	jmp LB_4447
LB_4450:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a43◂ [ a25◂ [ a17◂ [ ]{| l |}]] ) ⊢ 12'(= a43◂ [ a25◂ [ a17◂ [ ]{| l |}]] )
; .mov_ptn 2'(= a43◂ [ a25◂ [ a17◂ [ ]{| l |}]] ) ⊢ 12'(= a43◂ [ a25◂ [ a17◂ [ ]{| l |}]] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_4448
LB_4447:
	add rsp,32
	POP_GRM_FAIL
	ret
LB_4448:
	jmp LB_4452
LB_4451:
	add r14,1 
LB_4452:
	cmp r14,r9
	jge LB_4453
	JZ_LINE_SPC BYTE [r13+8+r14], LB_4451
LB_4453
	call GRM_259
	cmp BYTE [r8+6],0
	jnz LB_4456
	jmp LB_4457
LB_4456:
	jmp LB_4454
LB_4457:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a43◂ [ a2◂ [ *{ {| l |}a16◂ [ a21◂ [ {| l |}]]a3◂ [ a31◂ [ ]]a25◂ [ a17◂ [ ]{| l |}]}]] ) ⊢ 13'(= a43◂ [ a2◂ [ *{ {| l |}a16◂ [ a21◂ [ {| l |}]]a3◂ [ a31◂ [ ]]a25◂ [ a17◂ [ ]{| l |}]}]] )
; .mov_ptn 2'(= a43◂ [ a2◂ [ *{ {| l |}a16◂ [ a21◂ [ {| l |}]]a3◂ [ a31◂ [ ]]a25◂ [ a17◂ [ ]{| l |}]}]] ) ⊢ 13'(= a43◂ [ a2◂ [ *{ {| l |}a16◂ [ a21◂ [ {| l |}]]a3◂ [ a31◂ [ ]]a25◂ [ a17◂ [ ]{| l |}]}]] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_4455
LB_4454:
	add rsp,40
	POP_GRM_FAIL
	ret
LB_4455:
	mov QWORD [rsp+8*6],r14
	mov r13,QWORD [rsp+16+8*6]
	mov r14,QWORD [rsp+8*6]
	jmp LB_4458
LB_4458
;; ? 13'(= a43◂ [ a2◂ [ *{ {| l |}a16◂ [ a21◂ [ {| l |}]]a3◂ [ a31◂ [ ]]a25◂ [ a17◂ [ ]{| l |}]}]] ) ⊢ 0(<2)◂2'(= a2◂ [ *{ {| l |}a16◂ [ a21◂ [ {| l |}]]a3◂ [ a31◂ [ ]]a25◂ [ a17◂ [ ]{| l |}]}] )
	mov rdi,QWORD [rsp-8+8*1]
	cmp BYTE [rdi+6],0
	jnz LB_4460
	mov QWORD [GBG_VCT+8*0],rdi
	mov r8,QWORD [rdi+8]
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_LN rdi
;; ? 12'(= a43◂ [ a25◂ [ a17◂ [ ]{| l |}]] ) ⊢ 0(<2)◂3'(= a25◂ [ a17◂ [ ]{| l |}] )
	mov rdi,QWORD [rsp-8+8*2]
	cmp BYTE [rdi+6],0
	jnz LB_4461
	mov QWORD [GBG_VCT+8*0],rdi
	mov r9,QWORD [rdi+8]
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_LN rdi
; #23 { { 9'(= {| l |} ) 10'(= a16◂ [ a21◂ [ {| l |}]] ) 11'(= a3◂ [ a31◂ [ ]] ) 3'(= a25◂ [ a17◂ [ ]{| l |}] ) } 2'(= a2◂ [ *{ {| l |}a16◂ [ a21◂ [ {| l |}]]a3◂ [ a31◂ [ ]]a25◂ [ a17◂ [ ]{| l |}]}] ) } ⊢ 0(<2)◂{ { 9'(= {| l |} ) 10'(= a16◂ [ a21◂ [ {| l |}]] ) 11'(= a3◂ [ a31◂ [ ]] ) 3'(= a25◂ [ a17◂ [ ]{| l |}] ) } 2'(= a2◂ [ *{ {| l |}a16◂ [ a21◂ [ {| l |}]]a3◂ [ a31◂ [ ]]a25◂ [ a17◂ [ ]{| l |}]}] ) }
; #176 0(<2)◂{ { 9'(= {| l |} ) 10'(= a16◂ [ a21◂ [ {| l |}]] ) 11'(= a3◂ [ a31◂ [ ]] ) 3'(= a25◂ [ a17◂ [ ]{| l |}] ) } 2'(= a2◂ [ *{ {| l |}a16◂ [ a21◂ [ {| l |}]]a3◂ [ a31◂ [ ]]a25◂ [ a17◂ [ ]{| l |}]}] ) } ⊢ 3(<6)◂0(<2)◂{ { 9'(= {| l |} ) 10'(= a16◂ [ a21◂ [ {| l |}]] ) 11'(= a3◂ [ a31◂ [ ]] ) 3'(= a25◂ [ a17◂ [ ]{| l |}] ) } 2'(= a2◂ [ *{ {| l |}a16◂ [ a21◂ [ {| l |}]]a3◂ [ a31◂ [ ]]a25◂ [ a17◂ [ ]{| l |}]}] ) }
; #196 3(<6)◂0(<2)◂{ { 9'(= {| l |} ) 10'(= a16◂ [ a21◂ [ {| l |}]] ) 11'(= a3◂ [ a31◂ [ ]] ) 3'(= a25◂ [ a17◂ [ ]{| l |}] ) } 2'(= a2◂ [ *{ {| l |}a16◂ [ a21◂ [ {| l |}]]a3◂ [ a31◂ [ ]]a25◂ [ a17◂ [ ]{| l |}]}] ) } ⊢ 0(<2)◂3(<6)◂0(<2)◂{ { 9'(= {| l |} ) 10'(= a16◂ [ a21◂ [ {| l |}]] ) 11'(= a3◂ [ a31◂ [ ]] ) 3'(= a25◂ [ a17◂ [ ]{| l |}] ) } 2'(= a2◂ [ *{ {| l |}a16◂ [ a21◂ [ {| l |}]]a3◂ [ a31◂ [ ]]a25◂ [ a17◂ [ ]{| l |}]}] ) }
; #24 0(<2)◂3(<6)◂0(<2)◂{ { 9'(= {| l |} ) 10'(= a16◂ [ a21◂ [ {| l |}]] ) 11'(= a3◂ [ a31◂ [ ]] ) 3'(= a25◂ [ a17◂ [ ]{| l |}] ) } 2'(= a2◂ [ *{ {| l |}a16◂ [ a21◂ [ {| l |}]]a3◂ [ a31◂ [ ]]a25◂ [ a17◂ [ ]{| l |}]}] ) } ⊢ 0(<2)◂0(<2)◂3(<6)◂0(<2)◂{ { 9'(= {| l |} ) 10'(= a16◂ [ a21◂ [ {| l |}]] ) 11'(= a3◂ [ a31◂ [ ]] ) 3'(= a25◂ [ a17◂ [ ]{| l |}] ) } 2'(= a2◂ [ *{ {| l |}a16◂ [ a21◂ [ {| l |}]]a3◂ [ a31◂ [ ]]a25◂ [ a17◂ [ ]{| l |}]}] ) }
; ∎ 0(<2)◂0(<2)◂3(<6)◂0(<2)◂{ { 9'(= {| l |} ) 10'(= a16◂ [ a21◂ [ {| l |}]] ) 11'(= a3◂ [ a31◂ [ ]] ) 3'(= a25◂ [ a17◂ [ ]{| l |}] ) } 2'(= a2◂ [ *{ {| l |}a16◂ [ a21◂ [ {| l |}]]a3◂ [ a31◂ [ ]]a25◂ [ a17◂ [ ]{| l |}]}] ) }
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 8'(= a43◂ [ *{ }] )
	mov rdi,QWORD [rsp-8+8*6]
	C_PUSH_REGS
	mov r8,rdi
	call LB_1706
	C_POP_REGS
; .mov_ptn2 0(<2)◂0(<2)◂3(<6)◂0(<2)◂{ { 9'(= {| l |} ) 10'(= a16◂ [ a21◂ [ {| l |}]] ) 11'(= a3◂ [ a31◂ [ ]] ) 3'(= a25◂ [ a17◂ [ ]{| l |}] ) } 2'(= a2◂ [ *{ {| l |}a16◂ [ a21◂ [ {| l |}]]a3◂ [ a31◂ [ ]]a25◂ [ a17◂ [ ]{| l |}]}] ) } ⊢ 2'(= a3◂ [ a43◂ [ a39◂ [ ]]] )
	mov r13,r8
; .mov_ptn 0(<2)◂0(<2)◂3(<6)◂0(<2)◂{ { 9'(= {| l |} ) 10'(= a16◂ [ a21◂ [ {| l |}]] ) 11'(= a3◂ [ a31◂ [ ]] ) 3'(= a25◂ [ a17◂ [ ]{| l |}] ) } 0'(= a2◂ [ *{ {| l |}a16◂ [ a21◂ [ {| l |}]]a3◂ [ a31◂ [ ]]a25◂ [ a17◂ [ ]{| l |}]}] ) } ⊢ 2'(= a3◂ [ a43◂ [ a39◂ [ ]]] )
	ALC_RCD 2, rax
	mov r14,rax
	ALC_RCD 4, rax
	mov r10,rax
	mov rax,QWORD [rsp-8+8*5]
	mov QWORD [r10+8+8*0],rax
	mov rax,QWORD [rsp-8+8*4]
	mov QWORD [r10+8+8*1],rax
	mov rax,QWORD [rsp-8+8*3]
	mov QWORD [r10+8+8*2],rax
	mov rax,r9
	mov QWORD [r10+8+8*3],rax
	mov rax,r10
	mov QWORD [r14+8+8*0],rax
	mov rax,r13
	mov QWORD [r14+8+8*1],rax
	mov rax,r14
	mov BYTE [rax+6],0
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],3
	mov QWORD [rax+8],rdi
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,48
	jmp LB_4459
LB_4461:
;; ?. 12'(= a43◂ [ a25◂ [ a17◂ [ ]{| l |}]] ) ⊢ 1(<2)◂3'(= a2◂ [ *{ rr{| l |}}] )
	mov QWORD [GBG_VCT+8*0],rdi
	mov r9,QWORD [rdi+8]
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_LN rdi
; #195 3'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 1(<2)◂3'(= a2◂ [ *{ rr{| l |}}] )
; #24 1(<2)◂3'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 0(<2)◂1(<2)◂3'(= a2◂ [ *{ rr{| l |}}] )
; ∎ 0(<2)◂1(<2)◂3'(= a2◂ [ *{ rr{| l |}}] )
; .dlt.ptn 2'(= a2◂ [ *{ {| l |}a16◂ [ a21◂ [ {| l |}]]a3◂ [ a31◂ [ ]]a25◂ [ a17◂ [ ]{| l |}]}] )
	mov rdi,r8
	C_PUSH_REGS
	mov r8,rdi
	call LB_3587
	C_POP_REGS
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 11'(= a3◂ [ a31◂ [ ]] )
	mov rdi,QWORD [rsp-8+8*3]
	C_PUSH_REGS
	mov r8,rdi
	call LB_839
	C_POP_REGS
; .dlt.ptn 10'(= a16◂ [ a21◂ [ {| l |}]] )
	mov rdi,QWORD [rsp-8+8*4]
	C_PUSH_REGS
	mov r8,rdi
	call LB_673
	C_POP_REGS
; .dlt.ptn 9'(= {| l |} )
	mov rdi,QWORD [rsp-8+8*5]
	C_PUSH_REGS
	mov r8,rdi
	mov rdi,r8
	call free_s8
	C_POP_REGS
; .dlt.ptn 8'(= a43◂ [ *{ }] )
	mov rdi,QWORD [rsp-8+8*6]
	C_PUSH_REGS
	mov r8,rdi
	call LB_1706
	C_POP_REGS
; .mov_ptn2 0(<2)◂1(<2)◂3'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 2'(= a3◂ [ a43◂ [ a39◂ [ ]]] )
; .mov_ptn 0(<2)◂1(<2)◂3'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 2'(= a3◂ [ a43◂ [ a39◂ [ ]]] )
	mov rax,r9
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],1
	mov QWORD [rax+8],rdi
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,48
	jmp LB_4459
LB_4460:
;; ?. 13'(= a43◂ [ a2◂ [ *{ {| l |}a16◂ [ a21◂ [ {| l |}]]a3◂ [ a31◂ [ ]]a25◂ [ a17◂ [ ]{| l |}]}]] ) ⊢ 1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] )
	mov QWORD [GBG_VCT+8*0],rdi
	mov r8,QWORD [rdi+8]
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_LN rdi
;; ? 12'(= a43◂ [ a25◂ [ a17◂ [ ]{| l |}]] ) ⊢ 0(<2)◂3'(= a25◂ [ a17◂ [ ]{| l |}] )
	mov rdi,QWORD [rsp-8+8*2]
	cmp BYTE [rdi+6],0
	jnz LB_4462
	mov QWORD [GBG_VCT+8*0],rdi
	mov r9,QWORD [rdi+8]
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_LN rdi
; #195 2'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] )
; #24 1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 0(<2)◂1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] )
; ∎ 0(<2)◂1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] )
; .dlt.ptn 3'(= a25◂ [ a17◂ [ ]{| l |}] )
	mov rdi,r9
	C_PUSH_REGS
	mov r8,rdi
	call LB_679
	C_POP_REGS
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 11'(= a3◂ [ a31◂ [ ]] )
	mov rdi,QWORD [rsp-8+8*3]
	C_PUSH_REGS
	mov r8,rdi
	call LB_839
	C_POP_REGS
; .dlt.ptn 10'(= a16◂ [ a21◂ [ {| l |}]] )
	mov rdi,QWORD [rsp-8+8*4]
	C_PUSH_REGS
	mov r8,rdi
	call LB_673
	C_POP_REGS
; .dlt.ptn 9'(= {| l |} )
	mov rdi,QWORD [rsp-8+8*5]
	C_PUSH_REGS
	mov r8,rdi
	mov rdi,r8
	call free_s8
	C_POP_REGS
; .dlt.ptn 8'(= a43◂ [ *{ }] )
	mov rdi,QWORD [rsp-8+8*6]
	C_PUSH_REGS
	mov r8,rdi
	call LB_1706
	C_POP_REGS
; .mov_ptn2 0(<2)◂1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 2'(= a3◂ [ a43◂ [ a39◂ [ ]]] )
	mov r13,r8
; .mov_ptn 0(<2)◂1(<2)◂0'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 2'(= a3◂ [ a43◂ [ a39◂ [ ]]] )
	mov rax,r13
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],1
	mov QWORD [rax+8],rdi
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,48
	jmp LB_4459
LB_4462:
;; ?. 12'(= a43◂ [ a25◂ [ a17◂ [ ]{| l |}]] ) ⊢ 1(<2)◂3'(= a2◂ [ *{ rr{| l |}}] )
	mov QWORD [GBG_VCT+8*0],rdi
	mov r9,QWORD [rdi+8]
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_LN rdi
; #56 { 2'(= a2◂ [ *{ rr{| l |}}] ) 3'(= a2◂ [ *{ rr{| l |}}] ) } ⊢ 2'(= a2◂ [ *{ rr{| l |}}] )
	sub rsp,16
	mov QWORD [rsp+8*0],r13
	mov QWORD [rsp+8*1],r14
; .mov_ptn2 { 2'(= a2◂ [ *{ rr{| l |}}] ) 3'(= a2◂ [ *{ rr{| l |}}] ) } ⊢ { 0'(= a2◂ [ *{ rr{| l |}}] ) 1'(= a2◂ [ *{ rr{| l |}}] ) }
; .mov_ptn 3'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 1'(= a2◂ [ *{ rr{| l |}}] )
	mov rax,r9
	mov r14,rax
; .mov_ptn 2'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 0'(= a2◂ [ *{ rr{| l |}}] )
	mov rax,r8
	mov r13,rax
	call LB_1809
	mov r14,QWORD [rsp-8+8*2]
	mov r8,r13
	mov r13,QWORD [rsp-8+8*1]
	add rsp,32
; #195 2'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] )
; #24 1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 0(<2)◂1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] )
; ∎ 0(<2)◂1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] )
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 11'(= a3◂ [ a31◂ [ ]] )
	mov rdi,QWORD [rsp-8+8*1]
	C_PUSH_REGS
	mov r8,rdi
	call LB_839
	C_POP_REGS
; .dlt.ptn 10'(= a16◂ [ a21◂ [ {| l |}]] )
	mov rdi,QWORD [rsp-8+8*2]
	C_PUSH_REGS
	mov r8,rdi
	call LB_673
	C_POP_REGS
; .dlt.ptn 9'(= {| l |} )
	mov rdi,QWORD [rsp-8+8*3]
	C_PUSH_REGS
	mov r8,rdi
	mov rdi,r8
	call free_s8
	C_POP_REGS
; .dlt.ptn 8'(= a43◂ [ *{ }] )
	mov rdi,QWORD [rsp-8+8*4]
	C_PUSH_REGS
	mov r8,rdi
	call LB_1706
	C_POP_REGS
; .mov_ptn2 0(<2)◂1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 2'(= a3◂ [ a43◂ [ a39◂ [ ]]] )
	mov r13,r8
; .mov_ptn 0(<2)◂1(<2)◂0'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 2'(= a3◂ [ a43◂ [ a39◂ [ ]]] )
	mov rax,r13
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],1
	mov QWORD [rax+8],rdi
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,32
	jmp LB_4459
LB_4459:
	cmp BYTE [r8+6],0
	jnz LB_4388
	POP_GRM_SCC
	ret
LB_4388:
	RB_GRM
	jmp LB_4465
LB_4464:
	add r14,1 
LB_4465:
	cmp r14,r9
	jge LB_4466
	JZ_SPC BYTE [r13+8+r14], LB_4464
LB_4466
	call GRM_77
	cmp BYTE [r8+6],0
	jnz LB_4469
	jmp LB_4470
LB_4469:
	jmp LB_4467
LB_4470:
	sub rsp,8
; .mov_ptn2 2'(= {| l |} ) ⊢ 8'(= {| l |} )
; .mov_ptn 2'(= {| l |} ) ⊢ 8'(= {| l |} )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_4468
LB_4467:
	add rsp,0
	jmp LB_4463
LB_4468:
	jmp LB_4472
LB_4471:
	add r14,1 
LB_4472:
	cmp r14,r9
	jge LB_4473
	JZ_SPC BYTE [r13+8+r14], LB_4471
LB_4473
	call GRM_261
	cmp BYTE [r8+6],0
	jnz LB_4476
	jmp LB_4477
LB_4476:
	jmp LB_4474
LB_4477:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a43◂ [ a41◂ [ ]] ) ⊢ 9'(= a43◂ [ a41◂ [ ]] )
; .mov_ptn 2'(= a43◂ [ a41◂ [ ]] ) ⊢ 9'(= a43◂ [ a41◂ [ ]] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_4475
LB_4474:
	add rsp,8
	jmp LB_4463
LB_4475:
	mov QWORD [rsp+8*2],r14
	mov r13,QWORD [rsp+16+8*2]
	mov r14,QWORD [rsp+8*2]
	jmp LB_4478
LB_4478
;; ? 9'(= a43◂ [ a41◂ [ ]] ) ⊢ 0(<2)◂2'(= a41◂ [ ] )
	mov rdi,QWORD [rsp-8+8*1]
	cmp BYTE [rdi+6],0
	jnz LB_4480
	mov QWORD [GBG_VCT+8*0],rdi
	mov r8,QWORD [rdi+8]
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_LN rdi
; #177 { 8'(= {| l |} ) 2'(= a41◂ [ ] ) } ⊢ 2(<6)◂{ 8'(= {| l |} ) 2'(= a41◂ [ ] ) }
; #196 2(<6)◂{ 8'(= {| l |} ) 2'(= a41◂ [ ] ) } ⊢ 0(<2)◂2(<6)◂{ 8'(= {| l |} ) 2'(= a41◂ [ ] ) }
; #24 0(<2)◂2(<6)◂{ 8'(= {| l |} ) 2'(= a41◂ [ ] ) } ⊢ 0(<2)◂0(<2)◂2(<6)◂{ 8'(= {| l |} ) 2'(= a41◂ [ ] ) }
; ∎ 0(<2)◂0(<2)◂2(<6)◂{ 8'(= {| l |} ) 2'(= a41◂ [ ] ) }
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂0(<2)◂2(<6)◂{ 8'(= {| l |} ) 2'(= a41◂ [ ] ) } ⊢ 2'(= a3◂ [ a43◂ [ a39◂ [ ]]] )
	mov r13,r8
; .mov_ptn 0(<2)◂0(<2)◂2(<6)◂{ 8'(= {| l |} ) 0'(= a41◂ [ ] ) } ⊢ 2'(= a3◂ [ a43◂ [ a39◂ [ ]]] )
	ALC_RCD 2, rax
	mov r14,rax
	mov rax,QWORD [rsp-8+8*2]
	mov QWORD [r14+8+8*0],rax
	mov rax,r13
	mov QWORD [r14+8+8*1],rax
	mov rax,r14
	mov BYTE [rax+6],2
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,16
	jmp LB_4479
LB_4480:
;; ?. 9'(= a43◂ [ a41◂ [ ]] ) ⊢ 1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] )
	mov QWORD [GBG_VCT+8*0],rdi
	mov r8,QWORD [rdi+8]
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_LN rdi
; #195 2'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] )
; #24 1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 0(<2)◂1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] )
; ∎ 0(<2)◂1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] )
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 8'(= {| l |} )
	mov rdi,QWORD [rsp-8+8*2]
	C_PUSH_REGS
	mov r8,rdi
	mov rdi,r8
	call free_s8
	C_POP_REGS
; .mov_ptn2 0(<2)◂1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 2'(= a3◂ [ a43◂ [ a39◂ [ ]]] )
	mov r13,r8
; .mov_ptn 0(<2)◂1(<2)◂0'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 2'(= a3◂ [ a43◂ [ a39◂ [ ]]] )
	mov rax,r13
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],1
	mov QWORD [rax+8],rdi
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,16
	jmp LB_4479
LB_4479:
	cmp BYTE [r8+6],0
	jnz LB_4463
	POP_GRM_SCC
	ret
LB_4463:
	RB_GRM
	mov QWORD [rsp+8*0],r14
	mov r13,QWORD [rsp+16+8*0]
	mov r14,QWORD [rsp+8*0]
	jmp LB_4482
LB_4482
; $ %[ "lc_etr_body 0" ] ⊢ %[ "lc_etr_body 0" ]
; #10 %[ "lc_etr_body 0" ] ⊢ %[ "lc_etr_body 0" ]
	mov rdi,fmt_emt
	call emt_stg
	mov rdi,LB_4484
	call emt_stg 
	mov rdi,fmt_nl
	call emt_stg
	jmp LB_4485
LB_4485:
; #25 { } ⊢ 1(<2)◂{ }
; ∎ 1(<2)◂{ }
; .dlt.ptn %[ "lc_etr_body 0" ]
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 1(<2)◂{ } ⊢ 2'(= a3◂ [ a43◂ [ a39◂ [ ]]] )
; .mov_ptn 1(<2)◂{ } ⊢ 2'(= a3◂ [ a43◂ [ a39◂ [ ]]] )
	mov rax,unt 
	mov rax,unt_1
	mov r8,rax
	jmp LB_4483
LB_4483:
	cmp BYTE [r8+6],0
	jnz LB_4481
	POP_GRM_SCC
	ret
LB_4481:
	POP_GRM_FAIL 
	ret
ETR_259:
	mov r9,0x0000_ffff_ffff_ffff
	and r9,[r13]
	call GRM_259
	ret
GRM_259:
	PUSH_GRM
	jmp LB_4488
LB_4487:
	add r14,1 
LB_4488:
	cmp r14,r9
	jge LB_4489
	JZ_LINE_SPC BYTE [r13+8+r14], LB_4487
LB_4489
	call GRM_219
	cmp BYTE [r8+6],0
	jnz LB_4492
	jmp LB_4493
LB_4492:
	jmp LB_4490
LB_4493:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a43◂ [ *{ }] ) ⊢ 8'(= a43◂ [ *{ }] )
; .mov_ptn 2'(= a43◂ [ *{ }] ) ⊢ 8'(= a43◂ [ *{ }] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_4491
LB_4490:
	add rsp,0
	jmp LB_4486
LB_4491:
	jmp LB_4495
LB_4494:
	add r14,1 
LB_4495:
	cmp r14,r9
	jge LB_4496
	JZ_LINE_SPC BYTE [r13+8+r14], LB_4494
LB_4496
	lea rax,[r14+1]
	cmp rax,r9
	jg LB_4499
	jmp LB_4500
LB_4499:
	mov r8,unt_1
	jmp LB_4497
LB_4500:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],64
	jnz LB_4501
	jmp LB_4502
LB_4501:
	mov r8,unt_1
	jmp LB_4497
LB_4502:
	add r14,1
	jmp LB_4498
LB_4497:
	add rsp,8
	jmp LB_4486
LB_4498:
	jmp LB_4504
LB_4503:
	add r14,1 
LB_4504:
	cmp r14,r9
	jge LB_4505
	JZ_LINE_SPC BYTE [r13+8+r14], LB_4503
LB_4505
	lea rax,[r14+1]
	cmp rax,r9
	jg LB_4508
	jmp LB_4509
LB_4508:
	mov r8,unt_1
	jmp LB_4506
LB_4509:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],46
	jnz LB_4510
	jmp LB_4511
LB_4510:
	mov r8,unt_1
	jmp LB_4506
LB_4511:
	add r14,1
	jmp LB_4507
LB_4506:
	add rsp,8
	POP_GRM_FAIL
	ret
LB_4507:
	jmp LB_4513
LB_4512:
	add r14,1 
LB_4513:
	cmp r14,r9
	jge LB_4514
	JZ_LINE_SPC BYTE [r13+8+r14], LB_4512
LB_4514
	call GRM_77
	cmp BYTE [r8+6],0
	jnz LB_4517
	jmp LB_4518
LB_4517:
	jmp LB_4515
LB_4518:
	sub rsp,8
; .mov_ptn2 2'(= {| l |} ) ⊢ 9'(= {| l |} )
; .mov_ptn 2'(= {| l |} ) ⊢ 9'(= {| l |} )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_4516
LB_4515:
	add rsp,8
	POP_GRM_FAIL
	ret
LB_4516:
	jmp LB_4520
LB_4519:
	add r14,1 
LB_4520:
	cmp r14,r9
	jge LB_4521
	JZ_LINE_SPC BYTE [r13+8+r14], LB_4519
LB_4521
	call GRM_208
	cmp BYTE [r8+6],0
	jnz LB_4524
	jmp LB_4525
LB_4524:
	jmp LB_4522
LB_4525:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a16◂ [ a21◂ [ {| l |}]] ) ⊢ 10'(= a16◂ [ a21◂ [ {| l |}]] )
; .mov_ptn 2'(= a16◂ [ a21◂ [ {| l |}]] ) ⊢ 10'(= a16◂ [ a21◂ [ {| l |}]] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_4523
LB_4522:
	add rsp,16
	POP_GRM_FAIL
	ret
LB_4523:
	jmp LB_4527
LB_4526:
	add r14,1 
LB_4527:
	cmp r14,r9
	jge LB_4528
	JZ_LINE_SPC BYTE [r13+8+r14], LB_4526
LB_4528
	call GRM_260
	cmp BYTE [r8+6],0
	jnz LB_4531
	jmp LB_4532
LB_4531:
	jmp LB_4529
LB_4532:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a3◂ [ a31◂ [ ]] ) ⊢ 11'(= a3◂ [ a31◂ [ ]] )
; .mov_ptn 2'(= a3◂ [ a31◂ [ ]] ) ⊢ 11'(= a3◂ [ a31◂ [ ]] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_4530
LB_4529:
	add rsp,24
	POP_GRM_FAIL
	ret
LB_4530:
	jmp LB_4534
LB_4533:
	add r14,1 
LB_4534:
	cmp r14,r9
	jge LB_4535
	JZ_LINE_SPC BYTE [r13+8+r14], LB_4533
LB_4535
	lea rax,[r14+1]
	cmp rax,r9
	jg LB_4538
	jmp LB_4539
LB_4538:
	mov r8,unt_1
	jmp LB_4536
LB_4539:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],10
	jnz LB_4540
	jmp LB_4541
LB_4540:
	mov r8,unt_1
	jmp LB_4536
LB_4541:
	add r14,1
	jmp LB_4537
LB_4536:
	add rsp,32
	POP_GRM_FAIL
	ret
LB_4537:
	jmp LB_4543
LB_4542:
	add r14,1 
LB_4543:
	cmp r14,r9
	jge LB_4544
	JZ_LINE_SPC BYTE [r13+8+r14], LB_4542
LB_4544
	call GRM_237
	cmp BYTE [r8+6],0
	jnz LB_4547
	jmp LB_4548
LB_4547:
	jmp LB_4545
LB_4548:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a43◂ [ a25◂ [ a17◂ [ ]{| l |}]] ) ⊢ 12'(= a43◂ [ a25◂ [ a17◂ [ ]{| l |}]] )
; .mov_ptn 2'(= a43◂ [ a25◂ [ a17◂ [ ]{| l |}]] ) ⊢ 12'(= a43◂ [ a25◂ [ a17◂ [ ]{| l |}]] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_4546
LB_4545:
	add rsp,32
	POP_GRM_FAIL
	ret
LB_4546:
	jmp LB_4550
LB_4549:
	add r14,1 
LB_4550:
	cmp r14,r9
	jge LB_4551
	JZ_LINE_SPC BYTE [r13+8+r14], LB_4549
LB_4551
	call GRM_259
	cmp BYTE [r8+6],0
	jnz LB_4554
	jmp LB_4555
LB_4554:
	jmp LB_4552
LB_4555:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a43◂ [ a2◂ [ *{ {| l |}a16◂ [ a21◂ [ {| l |}]]a3◂ [ a31◂ [ ]]a25◂ [ a17◂ [ ]{| l |}]}]] ) ⊢ 13'(= a43◂ [ a2◂ [ *{ {| l |}a16◂ [ a21◂ [ {| l |}]]a3◂ [ a31◂ [ ]]a25◂ [ a17◂ [ ]{| l |}]}]] )
; .mov_ptn 2'(= a43◂ [ a2◂ [ *{ {| l |}a16◂ [ a21◂ [ {| l |}]]a3◂ [ a31◂ [ ]]a25◂ [ a17◂ [ ]{| l |}]}]] ) ⊢ 13'(= a43◂ [ a2◂ [ *{ {| l |}a16◂ [ a21◂ [ {| l |}]]a3◂ [ a31◂ [ ]]a25◂ [ a17◂ [ ]{| l |}]}]] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_4553
LB_4552:
	add rsp,40
	POP_GRM_FAIL
	ret
LB_4553:
	mov QWORD [rsp+8*6],r14
	mov r13,QWORD [rsp+16+8*6]
	mov r14,QWORD [rsp+8*6]
	jmp LB_4556
LB_4556
; #197 { 13'(= a43◂ [ a2◂ [ *{ {| l |}a16◂ [ a21◂ [ {| l |}]]a3◂ [ a31◂ [ ]]a25◂ [ a17◂ [ ]{| l |}]}]] ) 12'(= a43◂ [ a25◂ [ a17◂ [ ]{| l |}]] ) } ⊢ 2'(= a43◂ [ *{ a2◂ [ *{ {| l |}a16◂ [ a21◂ [ {| l |}]]a3◂ [ a31◂ [ ]]a25◂ [ a17◂ [ ]{| l |}]}]a25◂ [ a17◂ [ ]{| l |}]}] )
	sub rsp,16
	mov QWORD [rsp+8*0],r13
	mov QWORD [rsp+8*1],r14
; .mov_ptn2 { 13'(= a43◂ [ a2◂ [ *{ {| l |}a16◂ [ a21◂ [ {| l |}]]a3◂ [ a31◂ [ ]]a25◂ [ a17◂ [ ]{| l |}]}]] ) 12'(= a43◂ [ a25◂ [ a17◂ [ ]{| l |}]] ) } ⊢ { 0'(= a43◂ [ a2◂ [ *{ {| l |}a16◂ [ a21◂ [ {| l |}]]a3◂ [ a31◂ [ ]]a25◂ [ a17◂ [ ]{| l |}]}]] ) 1'(= a43◂ [ a25◂ [ a17◂ [ ]{| l |}]] ) }
; .mov_ptn 12'(= a43◂ [ a25◂ [ a17◂ [ ]{| l |}]] ) ⊢ 1'(= a43◂ [ a25◂ [ a17◂ [ ]{| l |}]] )
	mov rax,QWORD [rsp-8+8*4]
	mov r14,rax
; .mov_ptn 13'(= a43◂ [ a2◂ [ *{ {| l |}a16◂ [ a21◂ [ {| l |}]]a3◂ [ a31◂ [ ]]a25◂ [ a17◂ [ ]{| l |}]}]] ) ⊢ 0'(= a43◂ [ a2◂ [ *{ {| l |}a16◂ [ a21◂ [ {| l |}]]a3◂ [ a31◂ [ ]]a25◂ [ a17◂ [ ]{| l |}]}]] )
	mov rax,QWORD [rsp-8+8*3]
	mov r13,rax
	call LB_4558
	mov r14,QWORD [rsp-8+8*2]
	mov r8,r13
	mov r13,QWORD [rsp-8+8*1]
	add rsp,32
;; ? 2'(= a43◂ [ *{ a2◂ [ *{ {| l |}a16◂ [ a21◂ [ {| l |}]]a3◂ [ a31◂ [ ]]a25◂ [ a17◂ [ ]{| l |}]}]a25◂ [ a17◂ [ ]{| l |}]}] ) ⊢ 0(<2)◂{ 3'(= a2◂ [ *{ {| l |}a16◂ [ a21◂ [ {| l |}]]a3◂ [ a31◂ [ ]]a25◂ [ a17◂ [ ]{| l |}]}] ) 4'(= a25◂ [ a17◂ [ ]{| l |}] ) }
	mov rdi,r8
	cmp BYTE [rdi+6],0
	jnz LB_4562
	mov r9, QWORD [r8+8]
	mov r10, QWORD [r8+16]
	mov QWORD [GBG_VCT+8*0],r8
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_RCD 2,rdi
; #23 { { 9'(= {| l |} ) 10'(= a16◂ [ a21◂ [ {| l |}]] ) 11'(= a3◂ [ a31◂ [ ]] ) 4'(= a25◂ [ a17◂ [ ]{| l |}] ) } 3'(= a2◂ [ *{ {| l |}a16◂ [ a21◂ [ {| l |}]]a3◂ [ a31◂ [ ]]a25◂ [ a17◂ [ ]{| l |}]}] ) } ⊢ 0(<2)◂{ { 9'(= {| l |} ) 10'(= a16◂ [ a21◂ [ {| l |}]] ) 11'(= a3◂ [ a31◂ [ ]] ) 4'(= a25◂ [ a17◂ [ ]{| l |}] ) } 3'(= a2◂ [ *{ {| l |}a16◂ [ a21◂ [ {| l |}]]a3◂ [ a31◂ [ ]]a25◂ [ a17◂ [ ]{| l |}]}] ) }
; #196 0(<2)◂{ { 9'(= {| l |} ) 10'(= a16◂ [ a21◂ [ {| l |}]] ) 11'(= a3◂ [ a31◂ [ ]] ) 4'(= a25◂ [ a17◂ [ ]{| l |}] ) } 3'(= a2◂ [ *{ {| l |}a16◂ [ a21◂ [ {| l |}]]a3◂ [ a31◂ [ ]]a25◂ [ a17◂ [ ]{| l |}]}] ) } ⊢ 0(<2)◂0(<2)◂{ { 9'(= {| l |} ) 10'(= a16◂ [ a21◂ [ {| l |}]] ) 11'(= a3◂ [ a31◂ [ ]] ) 4'(= a25◂ [ a17◂ [ ]{| l |}] ) } 3'(= a2◂ [ *{ {| l |}a16◂ [ a21◂ [ {| l |}]]a3◂ [ a31◂ [ ]]a25◂ [ a17◂ [ ]{| l |}]}] ) }
; #24 0(<2)◂0(<2)◂{ { 9'(= {| l |} ) 10'(= a16◂ [ a21◂ [ {| l |}]] ) 11'(= a3◂ [ a31◂ [ ]] ) 4'(= a25◂ [ a17◂ [ ]{| l |}] ) } 3'(= a2◂ [ *{ {| l |}a16◂ [ a21◂ [ {| l |}]]a3◂ [ a31◂ [ ]]a25◂ [ a17◂ [ ]{| l |}]}] ) } ⊢ 0(<2)◂0(<2)◂0(<2)◂{ { 9'(= {| l |} ) 10'(= a16◂ [ a21◂ [ {| l |}]] ) 11'(= a3◂ [ a31◂ [ ]] ) 4'(= a25◂ [ a17◂ [ ]{| l |}] ) } 3'(= a2◂ [ *{ {| l |}a16◂ [ a21◂ [ {| l |}]]a3◂ [ a31◂ [ ]]a25◂ [ a17◂ [ ]{| l |}]}] ) }
; ∎ 0(<2)◂0(<2)◂0(<2)◂{ { 9'(= {| l |} ) 10'(= a16◂ [ a21◂ [ {| l |}]] ) 11'(= a3◂ [ a31◂ [ ]] ) 4'(= a25◂ [ a17◂ [ ]{| l |}] ) } 3'(= a2◂ [ *{ {| l |}a16◂ [ a21◂ [ {| l |}]]a3◂ [ a31◂ [ ]]a25◂ [ a17◂ [ ]{| l |}]}] ) }
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 8'(= a43◂ [ *{ }] )
	mov rdi,QWORD [rsp-8+8*4]
	C_PUSH_REGS
	mov r8,rdi
	call LB_1706
	C_POP_REGS
; .mov_ptn2 0(<2)◂0(<2)◂0(<2)◂{ { 9'(= {| l |} ) 10'(= a16◂ [ a21◂ [ {| l |}]] ) 11'(= a3◂ [ a31◂ [ ]] ) 4'(= a25◂ [ a17◂ [ ]{| l |}] ) } 3'(= a2◂ [ *{ {| l |}a16◂ [ a21◂ [ {| l |}]]a3◂ [ a31◂ [ ]]a25◂ [ a17◂ [ ]{| l |}]}] ) } ⊢ 2'(= a3◂ [ a43◂ [ a2◂ [ *{ {| l |}a16◂ [ a21◂ [ {| l |}]]a3◂ [ a31◂ [ ]]a25◂ [ a17◂ [ ]{| l |}]}]]] )
; .mov_ptn 0(<2)◂0(<2)◂0(<2)◂{ { 9'(= {| l |} ) 10'(= a16◂ [ a21◂ [ {| l |}]] ) 11'(= a3◂ [ a31◂ [ ]] ) 4'(= a25◂ [ a17◂ [ ]{| l |}] ) } 3'(= a2◂ [ *{ {| l |}a16◂ [ a21◂ [ {| l |}]]a3◂ [ a31◂ [ ]]a25◂ [ a17◂ [ ]{| l |}]}] ) } ⊢ 2'(= a3◂ [ a43◂ [ a2◂ [ *{ {| l |}a16◂ [ a21◂ [ {| l |}]]a3◂ [ a31◂ [ ]]a25◂ [ a17◂ [ ]{| l |}]}]]] )
	ALC_RCD 2, rax
	mov r13,rax
	ALC_RCD 4, rax
	mov r14,rax
	mov rax,QWORD [rsp-8+8*3]
	mov QWORD [r14+8+8*0],rax
	mov rax,QWORD [rsp-8+8*2]
	mov QWORD [r14+8+8*1],rax
	mov rax,QWORD [rsp-8+8*1]
	mov QWORD [r14+8+8*2],rax
	mov rax,r10
	mov QWORD [r14+8+8*3],rax
	mov rax,r14
	mov QWORD [r13+8+8*0],rax
	mov rax,r9
	mov QWORD [r13+8+8*1],rax
	mov rax,r13
	mov BYTE [rax+6],0
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,32
	jmp LB_4557
LB_4562:
;; ?. 2'(= a43◂ [ *{ a2◂ [ *{ {| l |}a16◂ [ a21◂ [ {| l |}]]a3◂ [ a31◂ [ ]]a25◂ [ a17◂ [ ]{| l |}]}]a25◂ [ a17◂ [ ]{| l |}]}] ) ⊢ 1(<2)◂3'(= a2◂ [ *{ rr{| l |}}] )
	mov QWORD [GBG_VCT+8*0],rdi
	mov r9,QWORD [rdi+8]
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_LN rdi
; #195 3'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 1(<2)◂3'(= a2◂ [ *{ rr{| l |}}] )
; #24 1(<2)◂3'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 0(<2)◂1(<2)◂3'(= a2◂ [ *{ rr{| l |}}] )
; ∎ 0(<2)◂1(<2)◂3'(= a2◂ [ *{ rr{| l |}}] )
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 11'(= a3◂ [ a31◂ [ ]] )
	mov rdi,QWORD [rsp-8+8*1]
	C_PUSH_REGS
	mov r8,rdi
	call LB_839
	C_POP_REGS
; .dlt.ptn 10'(= a16◂ [ a21◂ [ {| l |}]] )
	mov rdi,QWORD [rsp-8+8*2]
	C_PUSH_REGS
	mov r8,rdi
	call LB_673
	C_POP_REGS
; .dlt.ptn 9'(= {| l |} )
	mov rdi,QWORD [rsp-8+8*3]
	C_PUSH_REGS
	mov r8,rdi
	mov rdi,r8
	call free_s8
	C_POP_REGS
; .dlt.ptn 8'(= a43◂ [ *{ }] )
	mov rdi,QWORD [rsp-8+8*4]
	C_PUSH_REGS
	mov r8,rdi
	call LB_1706
	C_POP_REGS
; .mov_ptn2 0(<2)◂1(<2)◂3'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 2'(= a3◂ [ a43◂ [ a2◂ [ *{ {| l |}a16◂ [ a21◂ [ {| l |}]]a3◂ [ a31◂ [ ]]a25◂ [ a17◂ [ ]{| l |}]}]]] )
; .mov_ptn 0(<2)◂1(<2)◂3'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 2'(= a3◂ [ a43◂ [ a2◂ [ *{ {| l |}a16◂ [ a21◂ [ {| l |}]]a3◂ [ a31◂ [ ]]a25◂ [ a17◂ [ ]{| l |}]}]]] )
	mov rax,r9
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],1
	mov QWORD [rax+8],rdi
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,32
	jmp LB_4557
LB_4557:
	cmp BYTE [r8+6],0
	jnz LB_4486
	POP_GRM_SCC
	ret
LB_4486:
	RB_GRM
	mov QWORD [rsp+8*0],r14
	mov r13,QWORD [rsp+16+8*0]
	mov r14,QWORD [rsp+8*0]
	jmp LB_4564
LB_4564
; #22 { } ⊢ 1(<2)◂{ }
; #196 1(<2)◂{ } ⊢ 0(<2)◂1(<2)◂{ }
; #24 0(<2)◂1(<2)◂{ } ⊢ 0(<2)◂0(<2)◂1(<2)◂{ }
; ∎ 0(<2)◂0(<2)◂1(<2)◂{ }
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂0(<2)◂1(<2)◂{ } ⊢ 2'(= a3◂ [ a43◂ [ a2◂ [ *{ {| l |}a16◂ [ a21◂ [ {| l |}]]a3◂ [ a31◂ [ ]]a25◂ [ a17◂ [ ]{| l |}]}]]] )
; .mov_ptn 0(<2)◂0(<2)◂1(<2)◂{ } ⊢ 2'(= a3◂ [ a43◂ [ a2◂ [ *{ {| l |}a16◂ [ a21◂ [ {| l |}]]a3◂ [ a31◂ [ ]]a25◂ [ a17◂ [ ]{| l |}]}]]] )
	mov rax,unt 
	mov rax,unt_1
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	jmp LB_4565
LB_4565:
	cmp BYTE [r8+6],0
	jnz LB_4563
	POP_GRM_SCC
	ret
LB_4563:
	POP_GRM_FAIL 
	ret
ETR_260:
	mov r9,0x0000_ffff_ffff_ffff
	and r9,[r13]
	call GRM_260
	ret
GRM_260:
	PUSH_GRM
	jmp LB_4568
LB_4567:
	add r14,1 
LB_4568:
	cmp r14,r9
	jge LB_4569
	JZ_LINE_SPC BYTE [r13+8+r14], LB_4567
LB_4569
	lea rax,[r14+1]
	cmp rax,r9
	jg LB_4572
	jmp LB_4573
LB_4572:
	mov r8,unt_1
	jmp LB_4570
LB_4573:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],58
	jnz LB_4574
	jmp LB_4575
LB_4574:
	mov r8,unt_1
	jmp LB_4570
LB_4575:
	add r14,1
	jmp LB_4571
LB_4570:
	add rsp,0
	jmp LB_4566
LB_4571:
	jmp LB_4577
LB_4576:
	add r14,1 
LB_4577:
	cmp r14,r9
	jge LB_4578
	JZ_LINE_SPC BYTE [r13+8+r14], LB_4576
LB_4578
	call GRM_213
	cmp BYTE [r8+6],0
	jnz LB_4581
	jmp LB_4582
LB_4581:
	jmp LB_4579
LB_4582:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a31◂ [ ] ) ⊢ 8'(= a31◂ [ ] )
; .mov_ptn 2'(= a31◂ [ ] ) ⊢ 8'(= a31◂ [ ] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_4580
LB_4579:
	add rsp,0
	POP_GRM_FAIL
	ret
LB_4580:
	mov QWORD [rsp+8*1],r14
	mov r13,QWORD [rsp+16+8*1]
	mov r14,QWORD [rsp+8*1]
	jmp LB_4583
LB_4583
; #24 8'(= a31◂ [ ] ) ⊢ 0(<2)◂8'(= a31◂ [ ] )
; #24 0(<2)◂8'(= a31◂ [ ] ) ⊢ 0(<2)◂0(<2)◂8'(= a31◂ [ ] )
; ∎ 0(<2)◂0(<2)◂8'(= a31◂ [ ] )
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂0(<2)◂8'(= a31◂ [ ] ) ⊢ 2'(= a3◂ [ a3◂ [ a31◂ [ ]]] )
; .mov_ptn 0(<2)◂0(<2)◂8'(= a31◂ [ ] ) ⊢ 2'(= a3◂ [ a3◂ [ a31◂ [ ]]] )
	mov rax,QWORD [rsp-8+8*1]
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,8
	jmp LB_4584
LB_4584:
	cmp BYTE [r8+6],0
	jnz LB_4566
	POP_GRM_SCC
	ret
LB_4566:
	RB_GRM
	mov QWORD [rsp+8*0],r14
	mov r13,QWORD [rsp+16+8*0]
	mov r14,QWORD [rsp+8*0]
	jmp LB_4586
LB_4586
; #25 { } ⊢ 1(<2)◂{ }
; #24 1(<2)◂{ } ⊢ 0(<2)◂1(<2)◂{ }
; ∎ 0(<2)◂1(<2)◂{ }
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂1(<2)◂{ } ⊢ 2'(= a3◂ [ a3◂ [ a31◂ [ ]]] )
; .mov_ptn 0(<2)◂1(<2)◂{ } ⊢ 2'(= a3◂ [ a3◂ [ a31◂ [ ]]] )
	mov rax,unt 
	mov rax,unt_1
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	jmp LB_4587
LB_4587:
	cmp BYTE [r8+6],0
	jnz LB_4585
	POP_GRM_SCC
	ret
LB_4585:
	POP_GRM_FAIL 
	ret
ETR_261:
	mov r9,0x0000_ffff_ffff_ffff
	and r9,[r13]
	call GRM_261
	ret
GRM_261:
	PUSH_GRM
	jmp LB_4590
LB_4589:
	add r14,1 
LB_4590:
	cmp r14,r9
	jge LB_4591
	JZ_LINE_SPC BYTE [r13+8+r14], LB_4589
LB_4591
	lea rax,[r14+1]
	cmp rax,r9
	jg LB_4594
	jmp LB_4595
LB_4594:
	mov r8,unt_1
	jmp LB_4592
LB_4595:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],61
	jnz LB_4596
	jmp LB_4597
LB_4596:
	mov r8,unt_1
	jmp LB_4592
LB_4597:
	add r14,1
	jmp LB_4593
LB_4592:
	add rsp,0
	jmp LB_4588
LB_4593:
	jmp LB_4599
LB_4598:
	add r14,1 
LB_4599:
	cmp r14,r9
	jge LB_4600
	JZ_LINE_SPC BYTE [r13+8+r14], LB_4598
LB_4600
	call GRM_193
	cmp BYTE [r8+6],0
	jnz LB_4603
	jmp LB_4604
LB_4603:
	jmp LB_4601
LB_4604:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a19◂ [ a17◂ [ ]] ) ⊢ 8'(= a19◂ [ a17◂ [ ]] )
; .mov_ptn 2'(= a19◂ [ a17◂ [ ]] ) ⊢ 8'(= a19◂ [ a17◂ [ ]] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_4602
LB_4601:
	add rsp,0
	POP_GRM_FAIL
	ret
LB_4602:
	jmp LB_4606
LB_4605:
	add r14,1 
LB_4606:
	cmp r14,r9
	jge LB_4607
	JZ_LINE_SPC BYTE [r13+8+r14], LB_4605
LB_4607
	lea rax,[r14+1]
	cmp rax,r9
	jg LB_4610
	jmp LB_4611
LB_4610:
	mov r8,unt_1
	jmp LB_4608
LB_4611:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],10
	jnz LB_4612
	jmp LB_4613
LB_4612:
	mov r8,unt_1
	jmp LB_4608
LB_4613:
	add r14,1
	jmp LB_4609
LB_4608:
	add rsp,8
	POP_GRM_FAIL
	ret
LB_4609:
	mov QWORD [rsp+8*1],r14
	mov r13,QWORD [rsp+16+8*1]
	mov r14,QWORD [rsp+8*1]
	jmp LB_4614
LB_4614
; #170 8'(= a19◂ [ a17◂ [ ]] ) ⊢ 1(<3)◂8'(= a19◂ [ a17◂ [ ]] )
; #196 1(<3)◂8'(= a19◂ [ a17◂ [ ]] ) ⊢ 0(<2)◂1(<3)◂8'(= a19◂ [ a17◂ [ ]] )
; #24 0(<2)◂1(<3)◂8'(= a19◂ [ a17◂ [ ]] ) ⊢ 0(<2)◂0(<2)◂1(<3)◂8'(= a19◂ [ a17◂ [ ]] )
; ∎ 0(<2)◂0(<2)◂1(<3)◂8'(= a19◂ [ a17◂ [ ]] )
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂0(<2)◂1(<3)◂8'(= a19◂ [ a17◂ [ ]] ) ⊢ 2'(= a3◂ [ a43◂ [ a41◂ [ ]]] )
; .mov_ptn 0(<2)◂0(<2)◂1(<3)◂8'(= a19◂ [ a17◂ [ ]] ) ⊢ 2'(= a3◂ [ a43◂ [ a41◂ [ ]]] )
	mov rax,QWORD [rsp-8+8*1]
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],1
	mov QWORD [rax+8],rdi
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,8
	jmp LB_4615
LB_4615:
	cmp BYTE [r8+6],0
	jnz LB_4588
	POP_GRM_SCC
	ret
LB_4588:
	RB_GRM
	jmp LB_4618
LB_4617:
	add r14,1 
LB_4618:
	cmp r14,r9
	jge LB_4619
	JZ_LINE_SPC BYTE [r13+8+r14], LB_4617
LB_4619
	lea rax,[r14+2]
	cmp rax,r9
	jg LB_4622
	jmp LB_4623
LB_4622:
	mov r8,unt_1
	jmp LB_4620
LB_4623:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],194
	jnz LB_4624
	cmp BYTE [rdi+1],171
	jnz LB_4624
	jmp LB_4625
LB_4624:
	mov r8,unt_1
	jmp LB_4620
LB_4625:
	add r14,2
	jmp LB_4621
LB_4620:
	add rsp,0
	jmp LB_4616
LB_4621:
	jmp LB_4627
LB_4626:
	add r14,1 
LB_4627:
	cmp r14,r9
	jge LB_4628
	JZ_LINE_SPC BYTE [r13+8+r14], LB_4626
LB_4628
	lea rax,[r14+1]
	cmp rax,r9
	jg LB_4631
	jmp LB_4632
LB_4631:
	mov r8,unt_1
	jmp LB_4629
LB_4632:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],10
	jnz LB_4633
	jmp LB_4634
LB_4633:
	mov r8,unt_1
	jmp LB_4629
LB_4634:
	add r14,1
	jmp LB_4630
LB_4629:
	add rsp,0
	POP_GRM_FAIL
	ret
LB_4630:
	jmp LB_4636
LB_4635:
	add r14,1 
LB_4636:
	cmp r14,r9
	jge LB_4637
	JZ_LINE_SPC BYTE [r13+8+r14], LB_4635
LB_4637
	call GRM_237
	cmp BYTE [r8+6],0
	jnz LB_4640
	jmp LB_4641
LB_4640:
	jmp LB_4638
LB_4641:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a43◂ [ a25◂ [ a17◂ [ ]{| l |}]] ) ⊢ 8'(= a43◂ [ a25◂ [ a17◂ [ ]{| l |}]] )
; .mov_ptn 2'(= a43◂ [ a25◂ [ a17◂ [ ]{| l |}]] ) ⊢ 8'(= a43◂ [ a25◂ [ a17◂ [ ]{| l |}]] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_4639
LB_4638:
	add rsp,0
	POP_GRM_FAIL
	ret
LB_4639:
	mov QWORD [rsp+8*1],r14
	mov r13,QWORD [rsp+16+8*1]
	mov r14,QWORD [rsp+8*1]
	jmp LB_4642
LB_4642
;; ? 8'(= a43◂ [ a25◂ [ a17◂ [ ]{| l |}]] ) ⊢ 0(<2)◂2'(= a25◂ [ a17◂ [ ]{| l |}] )
	mov rdi,QWORD [rsp-8+8*1]
	cmp BYTE [rdi+6],0
	jnz LB_4644
	mov QWORD [GBG_VCT+8*0],rdi
	mov r8,QWORD [rdi+8]
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_LN rdi
; #169 2'(= a25◂ [ a17◂ [ ]{| l |}] ) ⊢ 2(<3)◂2'(= a25◂ [ a17◂ [ ]{| l |}] )
; #196 2(<3)◂2'(= a25◂ [ a17◂ [ ]{| l |}] ) ⊢ 0(<2)◂2(<3)◂2'(= a25◂ [ a17◂ [ ]{| l |}] )
; #24 0(<2)◂2(<3)◂2'(= a25◂ [ a17◂ [ ]{| l |}] ) ⊢ 0(<2)◂0(<2)◂2(<3)◂2'(= a25◂ [ a17◂ [ ]{| l |}] )
; ∎ 0(<2)◂0(<2)◂2(<3)◂2'(= a25◂ [ a17◂ [ ]{| l |}] )
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂0(<2)◂2(<3)◂2'(= a25◂ [ a17◂ [ ]{| l |}] ) ⊢ 2'(= a3◂ [ a43◂ [ a41◂ [ ]]] )
	mov r13,r8
; .mov_ptn 0(<2)◂0(<2)◂2(<3)◂0'(= a25◂ [ a17◂ [ ]{| l |}] ) ⊢ 2'(= a3◂ [ a43◂ [ a41◂ [ ]]] )
	mov rax,r13
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],2
	mov QWORD [rax+8],rdi
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,8
	jmp LB_4643
LB_4644:
;; ?. 8'(= a43◂ [ a25◂ [ a17◂ [ ]{| l |}]] ) ⊢ 1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] )
	mov QWORD [GBG_VCT+8*0],rdi
	mov r8,QWORD [rdi+8]
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_LN rdi
; #195 2'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] )
; #24 1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 0(<2)◂1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] )
; ∎ 0(<2)◂1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] )
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 2'(= a3◂ [ a43◂ [ a41◂ [ ]]] )
	mov r13,r8
; .mov_ptn 0(<2)◂1(<2)◂0'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 2'(= a3◂ [ a43◂ [ a41◂ [ ]]] )
	mov rax,r13
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],1
	mov QWORD [rax+8],rdi
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,8
	jmp LB_4643
LB_4643:
	cmp BYTE [r8+6],0
	jnz LB_4616
	POP_GRM_SCC
	ret
LB_4616:
	RB_GRM
	jmp LB_4647
LB_4646:
	add r14,1 
LB_4647:
	cmp r14,r9
	jge LB_4648
	JZ_LINE_SPC BYTE [r13+8+r14], LB_4646
LB_4648
	call GRM_208
	cmp BYTE [r8+6],0
	jnz LB_4651
	jmp LB_4652
LB_4651:
	jmp LB_4649
LB_4652:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a16◂ [ a21◂ [ {| l |}]] ) ⊢ 8'(= a16◂ [ a21◂ [ {| l |}]] )
; .mov_ptn 2'(= a16◂ [ a21◂ [ {| l |}]] ) ⊢ 8'(= a16◂ [ a21◂ [ {| l |}]] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_4650
LB_4649:
	add rsp,0
	jmp LB_4645
LB_4650:
	jmp LB_4654
LB_4653:
	add r14,1 
LB_4654:
	cmp r14,r9
	jge LB_4655
	JZ_LINE_SPC BYTE [r13+8+r14], LB_4653
LB_4655
	call GRM_260
	cmp BYTE [r8+6],0
	jnz LB_4658
	jmp LB_4659
LB_4658:
	jmp LB_4656
LB_4659:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a3◂ [ a31◂ [ ]] ) ⊢ 9'(= a3◂ [ a31◂ [ ]] )
; .mov_ptn 2'(= a3◂ [ a31◂ [ ]] ) ⊢ 9'(= a3◂ [ a31◂ [ ]] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_4657
LB_4656:
	add rsp,8
	jmp LB_4645
LB_4657:
	jmp LB_4661
LB_4660:
	add r14,1 
LB_4661:
	cmp r14,r9
	jge LB_4662
	JZ_LINE_SPC BYTE [r13+8+r14], LB_4660
LB_4662
	lea rax,[r14+1]
	cmp rax,r9
	jg LB_4665
	jmp LB_4666
LB_4665:
	mov r8,unt_1
	jmp LB_4663
LB_4666:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],10
	jnz LB_4667
	jmp LB_4668
LB_4667:
	mov r8,unt_1
	jmp LB_4663
LB_4668:
	add r14,1
	jmp LB_4664
LB_4663:
	add rsp,16
	jmp LB_4645
LB_4664:
	jmp LB_4670
LB_4669:
	add r14,1 
LB_4670:
	cmp r14,r9
	jge LB_4671
	JZ_LINE_SPC BYTE [r13+8+r14], LB_4669
LB_4671
	call GRM_237
	cmp BYTE [r8+6],0
	jnz LB_4674
	jmp LB_4675
LB_4674:
	jmp LB_4672
LB_4675:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a43◂ [ a25◂ [ a17◂ [ ]{| l |}]] ) ⊢ 10'(= a43◂ [ a25◂ [ a17◂ [ ]{| l |}]] )
; .mov_ptn 2'(= a43◂ [ a25◂ [ a17◂ [ ]{| l |}]] ) ⊢ 10'(= a43◂ [ a25◂ [ a17◂ [ ]{| l |}]] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_4673
LB_4672:
	add rsp,16
	jmp LB_4645
LB_4673:
	mov QWORD [rsp+8*3],r14
	mov r13,QWORD [rsp+16+8*3]
	mov r14,QWORD [rsp+8*3]
	jmp LB_4676
LB_4676
;; ? 10'(= a43◂ [ a25◂ [ a17◂ [ ]{| l |}]] ) ⊢ 0(<2)◂2'(= a25◂ [ a17◂ [ ]{| l |}] )
	mov rdi,QWORD [rsp-8+8*1]
	cmp BYTE [rdi+6],0
	jnz LB_4678
	mov QWORD [GBG_VCT+8*0],rdi
	mov r8,QWORD [rdi+8]
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_LN rdi
; #171 { 8'(= a16◂ [ a21◂ [ {| l |}]] ) 9'(= a3◂ [ a31◂ [ ]] ) 2'(= a25◂ [ a17◂ [ ]{| l |}] ) } ⊢ 0(<3)◂{ 8'(= a16◂ [ a21◂ [ {| l |}]] ) 9'(= a3◂ [ a31◂ [ ]] ) 2'(= a25◂ [ a17◂ [ ]{| l |}] ) }
; #196 0(<3)◂{ 8'(= a16◂ [ a21◂ [ {| l |}]] ) 9'(= a3◂ [ a31◂ [ ]] ) 2'(= a25◂ [ a17◂ [ ]{| l |}] ) } ⊢ 0(<2)◂0(<3)◂{ 8'(= a16◂ [ a21◂ [ {| l |}]] ) 9'(= a3◂ [ a31◂ [ ]] ) 2'(= a25◂ [ a17◂ [ ]{| l |}] ) }
; #24 0(<2)◂0(<3)◂{ 8'(= a16◂ [ a21◂ [ {| l |}]] ) 9'(= a3◂ [ a31◂ [ ]] ) 2'(= a25◂ [ a17◂ [ ]{| l |}] ) } ⊢ 0(<2)◂0(<2)◂0(<3)◂{ 8'(= a16◂ [ a21◂ [ {| l |}]] ) 9'(= a3◂ [ a31◂ [ ]] ) 2'(= a25◂ [ a17◂ [ ]{| l |}] ) }
; ∎ 0(<2)◂0(<2)◂0(<3)◂{ 8'(= a16◂ [ a21◂ [ {| l |}]] ) 9'(= a3◂ [ a31◂ [ ]] ) 2'(= a25◂ [ a17◂ [ ]{| l |}] ) }
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂0(<2)◂0(<3)◂{ 8'(= a16◂ [ a21◂ [ {| l |}]] ) 9'(= a3◂ [ a31◂ [ ]] ) 2'(= a25◂ [ a17◂ [ ]{| l |}] ) } ⊢ 2'(= a3◂ [ a43◂ [ a41◂ [ ]]] )
	mov r13,r8
; .mov_ptn 0(<2)◂0(<2)◂0(<3)◂{ 8'(= a16◂ [ a21◂ [ {| l |}]] ) 9'(= a3◂ [ a31◂ [ ]] ) 0'(= a25◂ [ a17◂ [ ]{| l |}] ) } ⊢ 2'(= a3◂ [ a43◂ [ a41◂ [ ]]] )
	ALC_RCD 3, rax
	mov r14,rax
	mov rax,QWORD [rsp-8+8*3]
	mov QWORD [r14+8+8*0],rax
	mov rax,QWORD [rsp-8+8*2]
	mov QWORD [r14+8+8*1],rax
	mov rax,r13
	mov QWORD [r14+8+8*2],rax
	mov rax,r14
	mov BYTE [rax+6],0
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,24
	jmp LB_4677
LB_4678:
;; ?. 10'(= a43◂ [ a25◂ [ a17◂ [ ]{| l |}]] ) ⊢ 1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] )
	mov QWORD [GBG_VCT+8*0],rdi
	mov r8,QWORD [rdi+8]
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_LN rdi
; #195 2'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] )
; #24 1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 0(<2)◂1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] )
; ∎ 0(<2)◂1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] )
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 9'(= a3◂ [ a31◂ [ ]] )
	mov rdi,QWORD [rsp-8+8*2]
	C_PUSH_REGS
	mov r8,rdi
	call LB_839
	C_POP_REGS
; .dlt.ptn 8'(= a16◂ [ a21◂ [ {| l |}]] )
	mov rdi,QWORD [rsp-8+8*3]
	C_PUSH_REGS
	mov r8,rdi
	call LB_673
	C_POP_REGS
; .mov_ptn2 0(<2)◂1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 2'(= a3◂ [ a43◂ [ a41◂ [ ]]] )
	mov r13,r8
; .mov_ptn 0(<2)◂1(<2)◂0'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 2'(= a3◂ [ a43◂ [ a41◂ [ ]]] )
	mov rax,r13
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],1
	mov QWORD [rax+8],rdi
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,24
	jmp LB_4677
LB_4677:
	cmp BYTE [r8+6],0
	jnz LB_4645
	POP_GRM_SCC
	ret
LB_4645:
	POP_GRM_FAIL 
	ret
ETR_262:
	mov r9,0x0000_ffff_ffff_ffff
	and r9,[r13]
	call GRM_262
	ret
GRM_262:
	PUSH_GRM
	jmp LB_4681
LB_4680:
	add r14,1 
LB_4681:
	cmp r14,r9
	jge LB_4682
	JZ_SPC BYTE [r13+8+r14], LB_4680
LB_4682
	lea rax,[r14+1]
	cmp rax,r9
	jg LB_4685
	jmp LB_4686
LB_4685:
	mov r8,unt_1
	jmp LB_4683
LB_4686:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],64
	jnz LB_4687
	jmp LB_4688
LB_4687:
	mov r8,unt_1
	jmp LB_4683
LB_4688:
	add r14,1
	jmp LB_4684
LB_4683:
	add rsp,0
	jmp LB_4679
LB_4684:
	jmp LB_4690
LB_4689:
	add r14,1 
LB_4690:
	cmp r14,r9
	jge LB_4691
	JZ_SPC BYTE [r13+8+r14], LB_4689
LB_4691
	lea rax,[r14+1]
	cmp rax,r9
	jg LB_4694
	jmp LB_4695
LB_4694:
	mov r8,unt_1
	jmp LB_4692
LB_4695:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],46
	jnz LB_4696
	jmp LB_4697
LB_4696:
	mov r8,unt_1
	jmp LB_4692
LB_4697:
	add r14,1
	jmp LB_4693
LB_4692:
	add rsp,0
	jmp LB_4679
LB_4693:
	jmp LB_4699
LB_4698:
	add r14,1 
LB_4699:
	cmp r14,r9
	jge LB_4700
	JZ_SPC BYTE [r13+8+r14], LB_4698
LB_4700
	call GRM_77
	cmp BYTE [r8+6],0
	jnz LB_4703
	jmp LB_4704
LB_4703:
	jmp LB_4701
LB_4704:
	sub rsp,8
; .mov_ptn2 2'(= {| l |} ) ⊢ 8'(= {| l |} )
; .mov_ptn 2'(= {| l |} ) ⊢ 8'(= {| l |} )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_4702
LB_4701:
	add rsp,0
	jmp LB_4679
LB_4702:
	jmp LB_4706
LB_4705:
	add r14,1 
LB_4706:
	cmp r14,r9
	jge LB_4707
	JZ_SPC BYTE [r13+8+r14], LB_4705
LB_4707
	call GRM_264
	cmp BYTE [r8+6],0
	jnz LB_4710
	jmp LB_4711
LB_4710:
	jmp LB_4708
LB_4711:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a32◂ [ a17◂ [ ]{| l |}] ) ⊢ 9'(= a32◂ [ a17◂ [ ]{| l |}] )
; .mov_ptn 2'(= a32◂ [ a17◂ [ ]{| l |}] ) ⊢ 9'(= a32◂ [ a17◂ [ ]{| l |}] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_4709
LB_4708:
	add rsp,8
	jmp LB_4679
LB_4709:
	mov QWORD [rsp+8*2],r14
	mov r13,QWORD [rsp+16+8*2]
	mov r14,QWORD [rsp+8*2]
	jmp LB_4712
LB_4712
; #24 { 8'(= {| l |} ) 9'(= a32◂ [ a17◂ [ ]{| l |}] ) } ⊢ 0(<2)◂{ 8'(= {| l |} ) 9'(= a32◂ [ a17◂ [ ]{| l |}] ) }
; ∎ 0(<2)◂{ 8'(= {| l |} ) 9'(= a32◂ [ a17◂ [ ]{| l |}] ) }
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂{ 8'(= {| l |} ) 9'(= a32◂ [ a17◂ [ ]{| l |}] ) } ⊢ 2'(= a3◂ [ *{ {| l |}a32◂ [ a17◂ [ ]{| l |}]}] )
; .mov_ptn 0(<2)◂{ 8'(= {| l |} ) 9'(= a32◂ [ a17◂ [ ]{| l |}] ) } ⊢ 2'(= a3◂ [ *{ {| l |}a32◂ [ a17◂ [ ]{| l |}]}] )
	ALC_RCD 2, rax
	mov r13,rax
	mov rax,QWORD [rsp-8+8*2]
	mov QWORD [r13+8+8*0],rax
	mov rax,QWORD [rsp-8+8*1]
	mov QWORD [r13+8+8*1],rax
	mov rax,r13
	mov BYTE [rax+6],0
	mov r8,rax
	add rsp,16
	jmp LB_4713
LB_4713:
	cmp BYTE [r8+6],0
	jnz LB_4679
	POP_GRM_SCC
	ret
LB_4679:
	POP_GRM_FAIL 
	ret
ETR_263:
	mov r9,0x0000_ffff_ffff_ffff
	and r9,[r13]
	call GRM_263
	ret
GRM_263:
	PUSH_GRM
	jmp LB_4716
LB_4715:
	add r14,1 
LB_4716:
	cmp r14,r9
	jge LB_4717
	JZ_SPC BYTE [r13+8+r14], LB_4715
LB_4717
	call GRM_262
	cmp BYTE [r8+6],0
	jnz LB_4720
	jmp LB_4721
LB_4720:
	jmp LB_4718
LB_4721:
	sub rsp,16
; .mov_ptn2 2'(= *{ {| l |}a32◂ [ a17◂ [ ]{| l |}]} ) ⊢ { 8'(= {| l |} ) 9'(= a32◂ [ a17◂ [ ]{| l |}] ) }
; .mov_ptn 2'(= *{ {| l |}a32◂ [ a17◂ [ ]{| l |}]} ) ⊢ { 8'(= {| l |} ) 9'(= a32◂ [ a17◂ [ ]{| l |}] ) }
	mov r10, QWORD [r8+8]
	mov QWORD [rsp-8+8*2],r10
	mov r11, QWORD [r8+16]
	mov QWORD [rsp-8+8*1],r11
	mov rdi,r8
	FREE_RCD 2,rdi
	jmp LB_4719
LB_4718:
	add rsp,0
	jmp LB_4714
LB_4719:
	jmp LB_4723
LB_4722:
	add r14,1 
LB_4723:
	cmp r14,r9
	jge LB_4724
	JZ_SPC BYTE [r13+8+r14], LB_4722
LB_4724
	call GRM_263
	cmp BYTE [r8+6],0
	jnz LB_4727
	jmp LB_4728
LB_4727:
	jmp LB_4725
LB_4728:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a2◂ [ *{ {| l |}a32◂ [ a17◂ [ ]{| l |}]}] ) ⊢ 10'(= a2◂ [ *{ {| l |}a32◂ [ a17◂ [ ]{| l |}]}] )
; .mov_ptn 2'(= a2◂ [ *{ {| l |}a32◂ [ a17◂ [ ]{| l |}]}] ) ⊢ 10'(= a2◂ [ *{ {| l |}a32◂ [ a17◂ [ ]{| l |}]}] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_4726
LB_4725:
	add rsp,16
	jmp LB_4714
LB_4726:
	mov QWORD [rsp+8*3],r14
	mov r13,QWORD [rsp+16+8*3]
	mov r14,QWORD [rsp+8*3]
	jmp LB_4729
LB_4729
; #23 { { 8'(= {| l |} ) 9'(= a32◂ [ a17◂ [ ]{| l |}] ) } 10'(= a2◂ [ *{ {| l |}a32◂ [ a17◂ [ ]{| l |}]}] ) } ⊢ 0(<2)◂{ { 8'(= {| l |} ) 9'(= a32◂ [ a17◂ [ ]{| l |}] ) } 10'(= a2◂ [ *{ {| l |}a32◂ [ a17◂ [ ]{| l |}]}] ) }
; #24 0(<2)◂{ { 8'(= {| l |} ) 9'(= a32◂ [ a17◂ [ ]{| l |}] ) } 10'(= a2◂ [ *{ {| l |}a32◂ [ a17◂ [ ]{| l |}]}] ) } ⊢ 0(<2)◂0(<2)◂{ { 8'(= {| l |} ) 9'(= a32◂ [ a17◂ [ ]{| l |}] ) } 10'(= a2◂ [ *{ {| l |}a32◂ [ a17◂ [ ]{| l |}]}] ) }
; ∎ 0(<2)◂0(<2)◂{ { 8'(= {| l |} ) 9'(= a32◂ [ a17◂ [ ]{| l |}] ) } 10'(= a2◂ [ *{ {| l |}a32◂ [ a17◂ [ ]{| l |}]}] ) }
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂0(<2)◂{ { 8'(= {| l |} ) 9'(= a32◂ [ a17◂ [ ]{| l |}] ) } 10'(= a2◂ [ *{ {| l |}a32◂ [ a17◂ [ ]{| l |}]}] ) } ⊢ 2'(= a3◂ [ a2◂ [ *{ {| l |}a32◂ [ a17◂ [ ]{| l |}]}]] )
; .mov_ptn 0(<2)◂0(<2)◂{ { 8'(= {| l |} ) 9'(= a32◂ [ a17◂ [ ]{| l |}] ) } 10'(= a2◂ [ *{ {| l |}a32◂ [ a17◂ [ ]{| l |}]}] ) } ⊢ 2'(= a3◂ [ a2◂ [ *{ {| l |}a32◂ [ a17◂ [ ]{| l |}]}]] )
	ALC_RCD 2, rax
	mov r13,rax
	ALC_RCD 2, rax
	mov r14,rax
	mov rax,QWORD [rsp-8+8*3]
	mov QWORD [r14+8+8*0],rax
	mov rax,QWORD [rsp-8+8*2]
	mov QWORD [r14+8+8*1],rax
	mov rax,r14
	mov QWORD [r13+8+8*0],rax
	mov rax,QWORD [rsp-8+8*1]
	mov QWORD [r13+8+8*1],rax
	mov rax,r13
	mov BYTE [rax+6],0
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,24
	jmp LB_4730
LB_4730:
	cmp BYTE [r8+6],0
	jnz LB_4714
	POP_GRM_SCC
	ret
LB_4714:
	RB_GRM
	mov QWORD [rsp+8*0],r14
	mov r13,QWORD [rsp+16+8*0]
	mov r14,QWORD [rsp+8*0]
	jmp LB_4732
LB_4732
; #22 { } ⊢ 1(<2)◂{ }
; #24 1(<2)◂{ } ⊢ 0(<2)◂1(<2)◂{ }
; ∎ 0(<2)◂1(<2)◂{ }
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂1(<2)◂{ } ⊢ 2'(= a3◂ [ a2◂ [ *{ {| l |}a32◂ [ a17◂ [ ]{| l |}]}]] )
; .mov_ptn 0(<2)◂1(<2)◂{ } ⊢ 2'(= a3◂ [ a2◂ [ *{ {| l |}a32◂ [ a17◂ [ ]{| l |}]}]] )
	mov rax,unt 
	mov rax,unt_1
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	jmp LB_4733
LB_4733:
	cmp BYTE [r8+6],0
	jnz LB_4731
	POP_GRM_SCC
	ret
LB_4731:
	POP_GRM_FAIL 
	ret
ETR_264:
	mov r9,0x0000_ffff_ffff_ffff
	and r9,[r13]
	call GRM_264
	ret
GRM_264:
	PUSH_GRM
	jmp LB_4736
LB_4735:
	add r14,1 
LB_4736:
	cmp r14,r9
	jge LB_4737
	JZ_SPC BYTE [r13+8+r14], LB_4735
LB_4737
	call GRM_265
	cmp BYTE [r8+6],0
	jnz LB_4740
	jmp LB_4741
LB_4740:
	jmp LB_4738
LB_4741:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a34◂ [ a17◂ [ ]{| l |}] ) ⊢ 8'(= a34◂ [ a17◂ [ ]{| l |}] )
; .mov_ptn 2'(= a34◂ [ a17◂ [ ]{| l |}] ) ⊢ 8'(= a34◂ [ a17◂ [ ]{| l |}] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_4739
LB_4738:
	add rsp,0
	jmp LB_4734
LB_4739:
	mov QWORD [rsp+8*1],r14
	mov r13,QWORD [rsp+16+8*1]
	mov r14,QWORD [rsp+8*1]
	jmp LB_4742
LB_4742
; #158 8'(= a34◂ [ a17◂ [ ]{| l |}] ) ⊢ 1(<2)◂8'(= a34◂ [ a17◂ [ ]{| l |}] )
; #24 1(<2)◂8'(= a34◂ [ a17◂ [ ]{| l |}] ) ⊢ 0(<2)◂1(<2)◂8'(= a34◂ [ a17◂ [ ]{| l |}] )
; ∎ 0(<2)◂1(<2)◂8'(= a34◂ [ a17◂ [ ]{| l |}] )
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂1(<2)◂8'(= a34◂ [ a17◂ [ ]{| l |}] ) ⊢ 2'(= a3◂ [ a32◂ [ a17◂ [ ]{| l |}]] )
; .mov_ptn 0(<2)◂1(<2)◂8'(= a34◂ [ a17◂ [ ]{| l |}] ) ⊢ 2'(= a3◂ [ a32◂ [ a17◂ [ ]{| l |}]] )
	mov rax,QWORD [rsp-8+8*1]
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],1
	mov QWORD [rax+8],rdi
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,8
	jmp LB_4743
LB_4743:
	cmp BYTE [r8+6],0
	jnz LB_4734
	POP_GRM_SCC
	ret
LB_4734:
	RB_GRM
	jmp LB_4746
LB_4745:
	add r14,1 
LB_4746:
	cmp r14,r9
	jge LB_4747
	JZ_SPC BYTE [r13+8+r14], LB_4745
LB_4747
	call GRM_273
	cmp BYTE [r8+6],0
	jnz LB_4750
	jmp LB_4751
LB_4750:
	jmp LB_4748
LB_4751:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a33◂ [ a17◂ [ ]{| l |}] ) ⊢ 8'(= a33◂ [ a17◂ [ ]{| l |}] )
; .mov_ptn 2'(= a33◂ [ a17◂ [ ]{| l |}] ) ⊢ 8'(= a33◂ [ a17◂ [ ]{| l |}] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_4749
LB_4748:
	add rsp,0
	jmp LB_4744
LB_4749:
	mov QWORD [rsp+8*1],r14
	mov r13,QWORD [rsp+16+8*1]
	mov r14,QWORD [rsp+8*1]
	jmp LB_4752
LB_4752
; #159 8'(= a33◂ [ a17◂ [ ]{| l |}] ) ⊢ 0(<2)◂8'(= a33◂ [ a17◂ [ ]{| l |}] )
; #24 0(<2)◂8'(= a33◂ [ a17◂ [ ]{| l |}] ) ⊢ 0(<2)◂0(<2)◂8'(= a33◂ [ a17◂ [ ]{| l |}] )
; ∎ 0(<2)◂0(<2)◂8'(= a33◂ [ a17◂ [ ]{| l |}] )
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂0(<2)◂8'(= a33◂ [ a17◂ [ ]{| l |}] ) ⊢ 2'(= a3◂ [ a32◂ [ a17◂ [ ]{| l |}]] )
; .mov_ptn 0(<2)◂0(<2)◂8'(= a33◂ [ a17◂ [ ]{| l |}] ) ⊢ 2'(= a3◂ [ a32◂ [ a17◂ [ ]{| l |}]] )
	mov rax,QWORD [rsp-8+8*1]
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,8
	jmp LB_4753
LB_4753:
	cmp BYTE [r8+6],0
	jnz LB_4744
	POP_GRM_SCC
	ret
LB_4744:
	POP_GRM_FAIL 
	ret
ETR_265:
	mov r9,0x0000_ffff_ffff_ffff
	and r9,[r13]
	call GRM_265
	ret
GRM_265:
	PUSH_GRM
	jmp LB_4756
LB_4755:
	add r14,1 
LB_4756:
	cmp r14,r9
	jge LB_4757
	JZ_SPC BYTE [r13+8+r14], LB_4755
LB_4757
	call GRM_272
	cmp BYTE [r8+6],0
	jnz LB_4760
	jmp LB_4761
LB_4760:
	jmp LB_4758
LB_4761:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a35◂ [ ] ) ⊢ 8'(= a35◂ [ ] )
; .mov_ptn 2'(= a35◂ [ ] ) ⊢ 8'(= a35◂ [ ] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_4759
LB_4758:
	add rsp,0
	jmp LB_4754
LB_4759:
	jmp LB_4763
LB_4762:
	add r14,1 
LB_4763:
	cmp r14,r9
	jge LB_4764
	JZ_SPC BYTE [r13+8+r14], LB_4762
LB_4764
	call GRM_267
	cmp BYTE [r8+6],0
	jnz LB_4767
	jmp LB_4768
LB_4767:
	jmp LB_4765
LB_4768:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a36◂ [ a17◂ [ ]] ) ⊢ 9'(= a36◂ [ a17◂ [ ]] )
; .mov_ptn 2'(= a36◂ [ a17◂ [ ]] ) ⊢ 9'(= a36◂ [ a17◂ [ ]] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_4766
LB_4765:
	add rsp,8
	POP_GRM_FAIL
	ret
LB_4766:
	jmp LB_4770
LB_4769:
	add r14,1 
LB_4770:
	cmp r14,r9
	jge LB_4771
	JZ_SPC BYTE [r13+8+r14], LB_4769
LB_4771
	call GRM_266
	cmp BYTE [r8+6],0
	jnz LB_4774
	jmp LB_4775
LB_4774:
	jmp LB_4772
LB_4775:
	sub rsp,24
; .mov_ptn2 2'(= *{ a16◂ [ a21◂ [ {| l |}]]a25◂ [ a17◂ [ ]{| l |}]a3◂ [ *{ a16◂ [ a21◂ [ {| l |}]]a34◂ [ a17◂ [ ]{| l |}]}]} ) ⊢ { 10'(= a16◂ [ a21◂ [ {| l |}]] ) 11'(= a25◂ [ a17◂ [ ]{| l |}] ) 12'(= a3◂ [ *{ a16◂ [ a21◂ [ {| l |}]]a34◂ [ a17◂ [ ]{| l |}]}] ) }
; .mov_ptn 2'(= *{ a16◂ [ a21◂ [ {| l |}]]a25◂ [ a17◂ [ ]{| l |}]a3◂ [ *{ a16◂ [ a21◂ [ {| l |}]]a34◂ [ a17◂ [ ]{| l |}]}]} ) ⊢ { 10'(= a16◂ [ a21◂ [ {| l |}]] ) 11'(= a25◂ [ a17◂ [ ]{| l |}] ) 12'(= a3◂ [ *{ a16◂ [ a21◂ [ {| l |}]]a34◂ [ a17◂ [ ]{| l |}]}] ) }
	mov r10, QWORD [r8+8]
	mov QWORD [rsp-8+8*3],r10
	mov r11, QWORD [r8+16]
	mov QWORD [rsp-8+8*2],r11
	mov rcx, QWORD [r8+24]
	mov QWORD [rsp-8+8*1],rcx
	mov rdi,r8
	FREE_RCD 3,rdi
	jmp LB_4773
LB_4772:
	add rsp,16
	POP_GRM_FAIL
	ret
LB_4773:
	mov QWORD [rsp+8*5],r14
	mov r13,QWORD [rsp+16+8*5]
	mov r14,QWORD [rsp+8*5]
	jmp LB_4776
LB_4776
; #166 { } ⊢ 2'(= a2◂ [ a21◂ [ {| l |}]] )
	sub rsp,16
	mov QWORD [rsp+8*0],r13
	mov QWORD [rsp+8*1],r14
; .mov_ptn2 { } ⊢ { }
	call ETR_166
	mov r14,QWORD [rsp-8+8*2]
	mov r8,r13
	mov r13,QWORD [rsp-8+8*1]
	add rsp,16
; #154 { 2'(= a2◂ [ a21◂ [ {| l |}]] ) 10'(= a16◂ [ a21◂ [ {| l |}]] ) 11'(= a25◂ [ a17◂ [ ]{| l |}] ) 8'(= a35◂ [ ] ) 9'(= a36◂ [ a17◂ [ ]] ) 12'(= a3◂ [ *{ a16◂ [ a21◂ [ {| l |}]]a34◂ [ a17◂ [ ]{| l |}]}] ) } ⊢ 1(<2)◂{ 2'(= a2◂ [ a21◂ [ {| l |}]] ) 10'(= a16◂ [ a21◂ [ {| l |}]] ) 11'(= a25◂ [ a17◂ [ ]{| l |}] ) 8'(= a35◂ [ ] ) 9'(= a36◂ [ a17◂ [ ]] ) 12'(= a3◂ [ *{ a16◂ [ a21◂ [ {| l |}]]a34◂ [ a17◂ [ ]{| l |}]}] ) }
; #24 1(<2)◂{ 2'(= a2◂ [ a21◂ [ {| l |}]] ) 10'(= a16◂ [ a21◂ [ {| l |}]] ) 11'(= a25◂ [ a17◂ [ ]{| l |}] ) 8'(= a35◂ [ ] ) 9'(= a36◂ [ a17◂ [ ]] ) 12'(= a3◂ [ *{ a16◂ [ a21◂ [ {| l |}]]a34◂ [ a17◂ [ ]{| l |}]}] ) } ⊢ 0(<2)◂1(<2)◂{ 2'(= a2◂ [ a21◂ [ {| l |}]] ) 10'(= a16◂ [ a21◂ [ {| l |}]] ) 11'(= a25◂ [ a17◂ [ ]{| l |}] ) 8'(= a35◂ [ ] ) 9'(= a36◂ [ a17◂ [ ]] ) 12'(= a3◂ [ *{ a16◂ [ a21◂ [ {| l |}]]a34◂ [ a17◂ [ ]{| l |}]}] ) }
; ∎ 0(<2)◂1(<2)◂{ 2'(= a2◂ [ a21◂ [ {| l |}]] ) 10'(= a16◂ [ a21◂ [ {| l |}]] ) 11'(= a25◂ [ a17◂ [ ]{| l |}] ) 8'(= a35◂ [ ] ) 9'(= a36◂ [ a17◂ [ ]] ) 12'(= a3◂ [ *{ a16◂ [ a21◂ [ {| l |}]]a34◂ [ a17◂ [ ]{| l |}]}] ) }
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂1(<2)◂{ 2'(= a2◂ [ a21◂ [ {| l |}]] ) 10'(= a16◂ [ a21◂ [ {| l |}]] ) 11'(= a25◂ [ a17◂ [ ]{| l |}] ) 8'(= a35◂ [ ] ) 9'(= a36◂ [ a17◂ [ ]] ) 12'(= a3◂ [ *{ a16◂ [ a21◂ [ {| l |}]]a34◂ [ a17◂ [ ]{| l |}]}] ) } ⊢ 2'(= a3◂ [ a34◂ [ a17◂ [ ]{| l |}]] )
	mov r13,r8
; .mov_ptn 0(<2)◂1(<2)◂{ 0'(= a2◂ [ a21◂ [ {| l |}]] ) 10'(= a16◂ [ a21◂ [ {| l |}]] ) 11'(= a25◂ [ a17◂ [ ]{| l |}] ) 8'(= a35◂ [ ] ) 9'(= a36◂ [ a17◂ [ ]] ) 12'(= a3◂ [ *{ a16◂ [ a21◂ [ {| l |}]]a34◂ [ a17◂ [ ]{| l |}]}] ) } ⊢ 2'(= a3◂ [ a34◂ [ a17◂ [ ]{| l |}]] )
	ALC_RCD 6, rax
	mov r14,rax
	mov rax,r13
	mov QWORD [r14+8+8*0],rax
	mov rax,QWORD [rsp-8+8*3]
	mov QWORD [r14+8+8*1],rax
	mov rax,QWORD [rsp-8+8*2]
	mov QWORD [r14+8+8*2],rax
	mov rax,QWORD [rsp-8+8*5]
	mov QWORD [r14+8+8*3],rax
	mov rax,QWORD [rsp-8+8*4]
	mov QWORD [r14+8+8*4],rax
	mov rax,QWORD [rsp-8+8*1]
	mov QWORD [r14+8+8*5],rax
	mov rax,r14
	mov BYTE [rax+6],1
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,40
	jmp LB_4777
LB_4777:
	cmp BYTE [r8+6],0
	jnz LB_4754
	POP_GRM_SCC
	ret
LB_4754:
	RB_GRM
	jmp LB_4780
LB_4779:
	add r14,1 
LB_4780:
	cmp r14,r9
	jge LB_4781
	JZ_SPC BYTE [r13+8+r14], LB_4779
LB_4781
	call GRM_271
	cmp BYTE [r8+6],0
	jnz LB_4784
	jmp LB_4785
LB_4784:
	jmp LB_4782
LB_4785:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a35◂ [ ] ) ⊢ 8'(= a35◂ [ ] )
; .mov_ptn 2'(= a35◂ [ ] ) ⊢ 8'(= a35◂ [ ] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_4783
LB_4782:
	add rsp,0
	jmp LB_4778
LB_4783:
	jmp LB_4787
LB_4786:
	add r14,1 
LB_4787:
	cmp r14,r9
	jge LB_4788
	JZ_SPC BYTE [r13+8+r14], LB_4786
LB_4788
	call GRM_267
	cmp BYTE [r8+6],0
	jnz LB_4791
	jmp LB_4792
LB_4791:
	jmp LB_4789
LB_4792:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a36◂ [ a17◂ [ ]] ) ⊢ 9'(= a36◂ [ a17◂ [ ]] )
; .mov_ptn 2'(= a36◂ [ a17◂ [ ]] ) ⊢ 9'(= a36◂ [ a17◂ [ ]] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_4790
LB_4789:
	add rsp,8
	jmp LB_4778
LB_4790:
	jmp LB_4794
LB_4793:
	add r14,1 
LB_4794:
	cmp r14,r9
	jge LB_4795
	JZ_SPC BYTE [r13+8+r14], LB_4793
LB_4795
	call GRM_266
	cmp BYTE [r8+6],0
	jnz LB_4798
	jmp LB_4799
LB_4798:
	jmp LB_4796
LB_4799:
	sub rsp,24
; .mov_ptn2 2'(= *{ a16◂ [ a21◂ [ {| l |}]]a25◂ [ a17◂ [ ]{| l |}]a3◂ [ *{ a16◂ [ a21◂ [ {| l |}]]a34◂ [ a17◂ [ ]{| l |}]}]} ) ⊢ { 10'(= a16◂ [ a21◂ [ {| l |}]] ) 11'(= a25◂ [ a17◂ [ ]{| l |}] ) 12'(= a3◂ [ *{ a16◂ [ a21◂ [ {| l |}]]a34◂ [ a17◂ [ ]{| l |}]}] ) }
; .mov_ptn 2'(= *{ a16◂ [ a21◂ [ {| l |}]]a25◂ [ a17◂ [ ]{| l |}]a3◂ [ *{ a16◂ [ a21◂ [ {| l |}]]a34◂ [ a17◂ [ ]{| l |}]}]} ) ⊢ { 10'(= a16◂ [ a21◂ [ {| l |}]] ) 11'(= a25◂ [ a17◂ [ ]{| l |}] ) 12'(= a3◂ [ *{ a16◂ [ a21◂ [ {| l |}]]a34◂ [ a17◂ [ ]{| l |}]}] ) }
	mov r10, QWORD [r8+8]
	mov QWORD [rsp-8+8*3],r10
	mov r11, QWORD [r8+16]
	mov QWORD [rsp-8+8*2],r11
	mov rcx, QWORD [r8+24]
	mov QWORD [rsp-8+8*1],rcx
	mov rdi,r8
	FREE_RCD 3,rdi
	jmp LB_4797
LB_4796:
	add rsp,16
	jmp LB_4778
LB_4797:
	jmp LB_4801
LB_4800:
	add r14,1 
LB_4801:
	cmp r14,r9
	jge LB_4802
	JZ_SPC BYTE [r13+8+r14], LB_4800
LB_4802
	call GRM_265
	cmp BYTE [r8+6],0
	jnz LB_4805
	jmp LB_4806
LB_4805:
	jmp LB_4803
LB_4806:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a34◂ [ a17◂ [ ]{| l |}] ) ⊢ 13'(= a34◂ [ a17◂ [ ]{| l |}] )
; .mov_ptn 2'(= a34◂ [ a17◂ [ ]{| l |}] ) ⊢ 13'(= a34◂ [ a17◂ [ ]{| l |}] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_4804
LB_4803:
	add rsp,40
	jmp LB_4778
LB_4804:
	mov QWORD [rsp+8*6],r14
	mov r13,QWORD [rsp+16+8*6]
	mov r14,QWORD [rsp+8*6]
	jmp LB_4807
LB_4807
; #166 { } ⊢ 2'(= a2◂ [ a21◂ [ {| l |}]] )
	sub rsp,16
	mov QWORD [rsp+8*0],r13
	mov QWORD [rsp+8*1],r14
; .mov_ptn2 { } ⊢ { }
	call ETR_166
	mov r14,QWORD [rsp-8+8*2]
	mov r8,r13
	mov r13,QWORD [rsp-8+8*1]
	add rsp,16
; #155 { 2'(= a2◂ [ a21◂ [ {| l |}]] ) 10'(= a16◂ [ a21◂ [ {| l |}]] ) 11'(= a25◂ [ a17◂ [ ]{| l |}] ) 8'(= a35◂ [ ] ) 9'(= a36◂ [ a17◂ [ ]] ) 12'(= a3◂ [ *{ a16◂ [ a21◂ [ {| l |}]]a34◂ [ a17◂ [ ]{| l |}]}] ) 13'(= a34◂ [ a17◂ [ ]{| l |}] ) } ⊢ 0(<2)◂{ 2'(= a2◂ [ a21◂ [ {| l |}]] ) 10'(= a16◂ [ a21◂ [ {| l |}]] ) 11'(= a25◂ [ a17◂ [ ]{| l |}] ) 8'(= a35◂ [ ] ) 9'(= a36◂ [ a17◂ [ ]] ) 12'(= a3◂ [ *{ a16◂ [ a21◂ [ {| l |}]]a34◂ [ a17◂ [ ]{| l |}]}] ) 13'(= a34◂ [ a17◂ [ ]{| l |}] ) }
; #24 0(<2)◂{ 2'(= a2◂ [ a21◂ [ {| l |}]] ) 10'(= a16◂ [ a21◂ [ {| l |}]] ) 11'(= a25◂ [ a17◂ [ ]{| l |}] ) 8'(= a35◂ [ ] ) 9'(= a36◂ [ a17◂ [ ]] ) 12'(= a3◂ [ *{ a16◂ [ a21◂ [ {| l |}]]a34◂ [ a17◂ [ ]{| l |}]}] ) 13'(= a34◂ [ a17◂ [ ]{| l |}] ) } ⊢ 0(<2)◂0(<2)◂{ 2'(= a2◂ [ a21◂ [ {| l |}]] ) 10'(= a16◂ [ a21◂ [ {| l |}]] ) 11'(= a25◂ [ a17◂ [ ]{| l |}] ) 8'(= a35◂ [ ] ) 9'(= a36◂ [ a17◂ [ ]] ) 12'(= a3◂ [ *{ a16◂ [ a21◂ [ {| l |}]]a34◂ [ a17◂ [ ]{| l |}]}] ) 13'(= a34◂ [ a17◂ [ ]{| l |}] ) }
; ∎ 0(<2)◂0(<2)◂{ 2'(= a2◂ [ a21◂ [ {| l |}]] ) 10'(= a16◂ [ a21◂ [ {| l |}]] ) 11'(= a25◂ [ a17◂ [ ]{| l |}] ) 8'(= a35◂ [ ] ) 9'(= a36◂ [ a17◂ [ ]] ) 12'(= a3◂ [ *{ a16◂ [ a21◂ [ {| l |}]]a34◂ [ a17◂ [ ]{| l |}]}] ) 13'(= a34◂ [ a17◂ [ ]{| l |}] ) }
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂0(<2)◂{ 2'(= a2◂ [ a21◂ [ {| l |}]] ) 10'(= a16◂ [ a21◂ [ {| l |}]] ) 11'(= a25◂ [ a17◂ [ ]{| l |}] ) 8'(= a35◂ [ ] ) 9'(= a36◂ [ a17◂ [ ]] ) 12'(= a3◂ [ *{ a16◂ [ a21◂ [ {| l |}]]a34◂ [ a17◂ [ ]{| l |}]}] ) 13'(= a34◂ [ a17◂ [ ]{| l |}] ) } ⊢ 2'(= a3◂ [ a34◂ [ a17◂ [ ]{| l |}]] )
	mov r13,r8
; .mov_ptn 0(<2)◂0(<2)◂{ 0'(= a2◂ [ a21◂ [ {| l |}]] ) 10'(= a16◂ [ a21◂ [ {| l |}]] ) 11'(= a25◂ [ a17◂ [ ]{| l |}] ) 8'(= a35◂ [ ] ) 9'(= a36◂ [ a17◂ [ ]] ) 12'(= a3◂ [ *{ a16◂ [ a21◂ [ {| l |}]]a34◂ [ a17◂ [ ]{| l |}]}] ) 13'(= a34◂ [ a17◂ [ ]{| l |}] ) } ⊢ 2'(= a3◂ [ a34◂ [ a17◂ [ ]{| l |}]] )
	ALC_RCD 7, rax
	mov r14,rax
	mov rax,r13
	mov QWORD [r14+8+8*0],rax
	mov rax,QWORD [rsp-8+8*4]
	mov QWORD [r14+8+8*1],rax
	mov rax,QWORD [rsp-8+8*3]
	mov QWORD [r14+8+8*2],rax
	mov rax,QWORD [rsp-8+8*6]
	mov QWORD [r14+8+8*3],rax
	mov rax,QWORD [rsp-8+8*5]
	mov QWORD [r14+8+8*4],rax
	mov rax,QWORD [rsp-8+8*2]
	mov QWORD [r14+8+8*5],rax
	mov rax,QWORD [rsp-8+8*1]
	mov QWORD [r14+8+8*6],rax
	mov rax,r14
	mov BYTE [rax+6],0
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,48
	jmp LB_4808
LB_4808:
	cmp BYTE [r8+6],0
	jnz LB_4778
	POP_GRM_SCC
	ret
LB_4778:
	POP_GRM_FAIL 
	ret
ETR_266:
	mov r9,0x0000_ffff_ffff_ffff
	and r9,[r13]
	call GRM_266
	ret
GRM_266:
	PUSH_GRM
	jmp LB_4811
LB_4810:
	add r14,1 
LB_4811:
	cmp r14,r9
	jge LB_4812
	JZ_SPC BYTE [r13+8+r14], LB_4810
LB_4812
	lea rax,[r14+1]
	cmp rax,r9
	jg LB_4815
	jmp LB_4816
LB_4815:
	mov r8,unt_1
	jmp LB_4813
LB_4816:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],59
	jnz LB_4817
	jmp LB_4818
LB_4817:
	mov r8,unt_1
	jmp LB_4813
LB_4818:
	add r14,1
	jmp LB_4814
LB_4813:
	add rsp,0
	jmp LB_4809
LB_4814:
	jmp LB_4820
LB_4819:
	add r14,1 
LB_4820:
	cmp r14,r9
	jge LB_4821
	JZ_SPC BYTE [r13+8+r14], LB_4819
LB_4821
	lea rax,[r14+3]
	cmp rax,r9
	jg LB_4824
	jmp LB_4825
LB_4824:
	mov r8,unt_1
	jmp LB_4822
LB_4825:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],226
	jnz LB_4826
	cmp BYTE [rdi+1],138
	jnz LB_4826
	cmp BYTE [rdi+2],162
	jnz LB_4826
	jmp LB_4827
LB_4826:
	mov r8,unt_1
	jmp LB_4822
LB_4827:
	add r14,3
	jmp LB_4823
LB_4822:
	add rsp,0
	jmp LB_4809
LB_4823:
	jmp LB_4829
LB_4828:
	add r14,1 
LB_4829:
	cmp r14,r9
	jge LB_4830
	JZ_SPC BYTE [r13+8+r14], LB_4828
LB_4830
	call GRM_208
	cmp BYTE [r8+6],0
	jnz LB_4833
	jmp LB_4834
LB_4833:
	jmp LB_4831
LB_4834:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a16◂ [ a21◂ [ {| l |}]] ) ⊢ 8'(= a16◂ [ a21◂ [ {| l |}]] )
; .mov_ptn 2'(= a16◂ [ a21◂ [ {| l |}]] ) ⊢ 8'(= a16◂ [ a21◂ [ {| l |}]] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_4832
LB_4831:
	add rsp,0
	POP_GRM_FAIL
	ret
LB_4832:
	jmp LB_4836
LB_4835:
	add r14,1 
LB_4836:
	cmp r14,r9
	jge LB_4837
	JZ_SPC BYTE [r13+8+r14], LB_4835
LB_4837
	lea rax,[r14+1]
	cmp rax,r9
	jg LB_4840
	jmp LB_4841
LB_4840:
	mov r8,unt_1
	jmp LB_4838
LB_4841:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],44
	jnz LB_4842
	jmp LB_4843
LB_4842:
	mov r8,unt_1
	jmp LB_4838
LB_4843:
	add r14,1
	jmp LB_4839
LB_4838:
	add rsp,8
	POP_GRM_FAIL
	ret
LB_4839:
	jmp LB_4845
LB_4844:
	add r14,1 
LB_4845:
	cmp r14,r9
	jge LB_4846
	JZ_SPC BYTE [r13+8+r14], LB_4844
LB_4846
	call GRM_208
	cmp BYTE [r8+6],0
	jnz LB_4849
	jmp LB_4850
LB_4849:
	jmp LB_4847
LB_4850:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a16◂ [ a21◂ [ {| l |}]] ) ⊢ 9'(= a16◂ [ a21◂ [ {| l |}]] )
; .mov_ptn 2'(= a16◂ [ a21◂ [ {| l |}]] ) ⊢ 9'(= a16◂ [ a21◂ [ {| l |}]] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_4848
LB_4847:
	add rsp,8
	POP_GRM_FAIL
	ret
LB_4848:
	jmp LB_4852
LB_4851:
	add r14,1 
LB_4852:
	cmp r14,r9
	jge LB_4853
	JZ_SPC BYTE [r13+8+r14], LB_4851
LB_4853
	call GRM_237
	cmp BYTE [r8+6],0
	jnz LB_4856
	jmp LB_4857
LB_4856:
	jmp LB_4854
LB_4857:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a43◂ [ a25◂ [ a17◂ [ ]{| l |}]] ) ⊢ 10'(= a43◂ [ a25◂ [ a17◂ [ ]{| l |}]] )
; .mov_ptn 2'(= a43◂ [ a25◂ [ a17◂ [ ]{| l |}]] ) ⊢ 10'(= a43◂ [ a25◂ [ a17◂ [ ]{| l |}]] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_4855
LB_4854:
	add rsp,16
	POP_GRM_FAIL
	ret
LB_4855:
	jmp LB_4859
LB_4858:
	add r14,1 
LB_4859:
	cmp r14,r9
	jge LB_4860
	JZ_SPC BYTE [r13+8+r14], LB_4858
LB_4860
	call GRM_265
	cmp BYTE [r8+6],0
	jnz LB_4863
	jmp LB_4864
LB_4863:
	jmp LB_4861
LB_4864:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a34◂ [ a17◂ [ ]{| l |}] ) ⊢ 11'(= a34◂ [ a17◂ [ ]{| l |}] )
; .mov_ptn 2'(= a34◂ [ a17◂ [ ]{| l |}] ) ⊢ 11'(= a34◂ [ a17◂ [ ]{| l |}] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_4862
LB_4861:
	add rsp,24
	POP_GRM_FAIL
	ret
LB_4862:
	mov QWORD [rsp+8*4],r14
	mov r13,QWORD [rsp+16+8*4]
	mov r14,QWORD [rsp+8*4]
	jmp LB_4865
LB_4865
;; ? 10'(= a43◂ [ a25◂ [ a17◂ [ ]{| l |}]] ) ⊢ 0(<2)◂2'(= a25◂ [ a17◂ [ ]{| l |}] )
	mov rdi,QWORD [rsp-8+8*2]
	cmp BYTE [rdi+6],0
	jnz LB_4867
	mov QWORD [GBG_VCT+8*0],rdi
	mov r8,QWORD [rdi+8]
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_LN rdi
; #24 { 9'(= a16◂ [ a21◂ [ {| l |}]] ) 11'(= a34◂ [ a17◂ [ ]{| l |}] ) } ⊢ 0(<2)◂{ 9'(= a16◂ [ a21◂ [ {| l |}]] ) 11'(= a34◂ [ a17◂ [ ]{| l |}] ) }
; #24 { 8'(= a16◂ [ a21◂ [ {| l |}]] ) 2'(= a25◂ [ a17◂ [ ]{| l |}] ) 0(<2)◂{ 9'(= a16◂ [ a21◂ [ {| l |}]] ) 11'(= a34◂ [ a17◂ [ ]{| l |}] ) } } ⊢ 0(<2)◂{ 8'(= a16◂ [ a21◂ [ {| l |}]] ) 2'(= a25◂ [ a17◂ [ ]{| l |}] ) 0(<2)◂{ 9'(= a16◂ [ a21◂ [ {| l |}]] ) 11'(= a34◂ [ a17◂ [ ]{| l |}] ) } }
; ∎ 0(<2)◂{ 8'(= a16◂ [ a21◂ [ {| l |}]] ) 2'(= a25◂ [ a17◂ [ ]{| l |}] ) 0(<2)◂{ 9'(= a16◂ [ a21◂ [ {| l |}]] ) 11'(= a34◂ [ a17◂ [ ]{| l |}] ) } }
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂{ 8'(= a16◂ [ a21◂ [ {| l |}]] ) 2'(= a25◂ [ a17◂ [ ]{| l |}] ) 0(<2)◂{ 9'(= a16◂ [ a21◂ [ {| l |}]] ) 11'(= a34◂ [ a17◂ [ ]{| l |}] ) } } ⊢ 2'(= a3◂ [ *{ a16◂ [ a21◂ [ {| l |}]]a25◂ [ a17◂ [ ]{| l |}]a3◂ [ *{ a16◂ [ a21◂ [ {| l |}]]a34◂ [ a17◂ [ ]{| l |}]}]}] )
	mov r13,r8
; .mov_ptn 0(<2)◂{ 8'(= a16◂ [ a21◂ [ {| l |}]] ) 0'(= a25◂ [ a17◂ [ ]{| l |}] ) 0(<2)◂{ 9'(= a16◂ [ a21◂ [ {| l |}]] ) 11'(= a34◂ [ a17◂ [ ]{| l |}] ) } } ⊢ 2'(= a3◂ [ *{ a16◂ [ a21◂ [ {| l |}]]a25◂ [ a17◂ [ ]{| l |}]a3◂ [ *{ a16◂ [ a21◂ [ {| l |}]]a34◂ [ a17◂ [ ]{| l |}]}]}] )
	ALC_RCD 3, rax
	mov r14,rax
	mov rax,QWORD [rsp-8+8*4]
	mov QWORD [r14+8+8*0],rax
	mov rax,r13
	mov QWORD [r14+8+8*1],rax
	ALC_RCD 2, rax
	mov r9,rax
	mov rax,QWORD [rsp-8+8*3]
	mov QWORD [r9+8+8*0],rax
	mov rax,QWORD [rsp-8+8*1]
	mov QWORD [r9+8+8*1],rax
	mov rax,r9
	mov BYTE [rax+6],0
	mov QWORD [r14+8+8*2],rax
	mov rax,r14
	mov BYTE [rax+6],0
	mov r8,rax
	add rsp,32
	jmp LB_4866
LB_4867:
;; ?. 10'(= a43◂ [ a25◂ [ a17◂ [ ]{| l |}]] ) ⊢ 1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] )
	mov QWORD [GBG_VCT+8*0],rdi
	mov r8,QWORD [rdi+8]
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_LN rdi
; $ %[ "grm_etr_act_act 0" ] ⊢ %[ "grm_etr_act_act 0" ]
; #10 %[ "grm_etr_act_act 0" ] ⊢ %[ "grm_etr_act_act 0" ]
	mov rdi,fmt_emt
	call emt_stg
	mov rdi,LB_4868
	call emt_stg 
	mov rdi,fmt_nl
	call emt_stg
	jmp LB_4869
LB_4869:
; #10 { 0'(= r ) 1'(= r ) } ⊢ { 0'(= r ) 1'(= r ) }
	mov rdi,fmt_emt
	call emt_stg
	mov rdi,fmt_rcd_l 
	call emt_stg 
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	mov rdi,r8 
	call emt_r64 
	C_POP_REGS
	mov rdi,fmt_spc 
	call emt_stg 
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	mov rdi,r8 
	call emt_r64 
	C_POP_REGS
	mov rdi,fmt_spc 
	call emt_stg 
	mov rdi,fmt_rcd_r 
	call emt_stg 
	mov rdi,fmt_nl
	call emt_stg
	jmp LB_4870
LB_4870:
	mov rdi,LB_4871
	call emt_stg 
	jmp err
LB_4866:
	cmp BYTE [r8+6],0
	jnz LB_4809
	POP_GRM_SCC
	ret
LB_4809:
	RB_GRM
	jmp LB_4874
LB_4873:
	add r14,1 
LB_4874:
	cmp r14,r9
	jge LB_4875
	JZ_SPC BYTE [r13+8+r14], LB_4873
LB_4875
	lea rax,[r14+3]
	cmp rax,r9
	jg LB_4878
	jmp LB_4879
LB_4878:
	mov r8,unt_1
	jmp LB_4876
LB_4879:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],226
	jnz LB_4880
	cmp BYTE [rdi+1],138
	jnz LB_4880
	cmp BYTE [rdi+2],162
	jnz LB_4880
	jmp LB_4881
LB_4880:
	mov r8,unt_1
	jmp LB_4876
LB_4881:
	add r14,3
	jmp LB_4877
LB_4876:
	add rsp,0
	jmp LB_4872
LB_4877:
	jmp LB_4883
LB_4882:
	add r14,1 
LB_4883:
	cmp r14,r9
	jge LB_4884
	JZ_SPC BYTE [r13+8+r14], LB_4882
LB_4884
	call GRM_208
	cmp BYTE [r8+6],0
	jnz LB_4887
	jmp LB_4888
LB_4887:
	jmp LB_4885
LB_4888:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a16◂ [ a21◂ [ {| l |}]] ) ⊢ 8'(= a16◂ [ a21◂ [ {| l |}]] )
; .mov_ptn 2'(= a16◂ [ a21◂ [ {| l |}]] ) ⊢ 8'(= a16◂ [ a21◂ [ {| l |}]] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_4886
LB_4885:
	add rsp,0
	POP_GRM_FAIL
	ret
LB_4886:
	jmp LB_4890
LB_4889:
	add r14,1 
LB_4890:
	cmp r14,r9
	jge LB_4891
	JZ_SPC BYTE [r13+8+r14], LB_4889
LB_4891
	call GRM_237
	cmp BYTE [r8+6],0
	jnz LB_4894
	jmp LB_4895
LB_4894:
	jmp LB_4892
LB_4895:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a43◂ [ a25◂ [ a17◂ [ ]{| l |}]] ) ⊢ 9'(= a43◂ [ a25◂ [ a17◂ [ ]{| l |}]] )
; .mov_ptn 2'(= a43◂ [ a25◂ [ a17◂ [ ]{| l |}]] ) ⊢ 9'(= a43◂ [ a25◂ [ a17◂ [ ]{| l |}]] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_4893
LB_4892:
	add rsp,8
	POP_GRM_FAIL
	ret
LB_4893:
	mov QWORD [rsp+8*2],r14
	mov r13,QWORD [rsp+16+8*2]
	mov r14,QWORD [rsp+8*2]
	jmp LB_4896
LB_4896
;; ? 9'(= a43◂ [ a25◂ [ a17◂ [ ]{| l |}]] ) ⊢ 0(<2)◂2'(= a25◂ [ a17◂ [ ]{| l |}] )
	mov rdi,QWORD [rsp-8+8*1]
	cmp BYTE [rdi+6],0
	jnz LB_4898
	mov QWORD [GBG_VCT+8*0],rdi
	mov r8,QWORD [rdi+8]
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_LN rdi
; #25 { } ⊢ 1(<2)◂{ }
; #24 { 8'(= a16◂ [ a21◂ [ {| l |}]] ) 2'(= a25◂ [ a17◂ [ ]{| l |}] ) 1(<2)◂{ } } ⊢ 0(<2)◂{ 8'(= a16◂ [ a21◂ [ {| l |}]] ) 2'(= a25◂ [ a17◂ [ ]{| l |}] ) 1(<2)◂{ } }
; ∎ 0(<2)◂{ 8'(= a16◂ [ a21◂ [ {| l |}]] ) 2'(= a25◂ [ a17◂ [ ]{| l |}] ) 1(<2)◂{ } }
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂{ 8'(= a16◂ [ a21◂ [ {| l |}]] ) 2'(= a25◂ [ a17◂ [ ]{| l |}] ) 1(<2)◂{ } } ⊢ 2'(= a3◂ [ *{ a16◂ [ a21◂ [ {| l |}]]a25◂ [ a17◂ [ ]{| l |}]a3◂ [ *{ a16◂ [ a21◂ [ {| l |}]]a34◂ [ a17◂ [ ]{| l |}]}]}] )
	mov r13,r8
; .mov_ptn 0(<2)◂{ 8'(= a16◂ [ a21◂ [ {| l |}]] ) 0'(= a25◂ [ a17◂ [ ]{| l |}] ) 1(<2)◂{ } } ⊢ 2'(= a3◂ [ *{ a16◂ [ a21◂ [ {| l |}]]a25◂ [ a17◂ [ ]{| l |}]a3◂ [ *{ a16◂ [ a21◂ [ {| l |}]]a34◂ [ a17◂ [ ]{| l |}]}]}] )
	ALC_RCD 3, rax
	mov r14,rax
	mov rax,QWORD [rsp-8+8*2]
	mov QWORD [r14+8+8*0],rax
	mov rax,r13
	mov QWORD [r14+8+8*1],rax
	mov rax,unt 
	mov rax,unt_1
	mov QWORD [r14+8+8*2],rax
	mov rax,r14
	mov BYTE [rax+6],0
	mov r8,rax
	add rsp,16
	jmp LB_4897
LB_4898:
;; ?. 9'(= a43◂ [ a25◂ [ a17◂ [ ]{| l |}]] ) ⊢ 1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] )
	mov QWORD [GBG_VCT+8*0],rdi
	mov r8,QWORD [rdi+8]
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_LN rdi
; $ %[ "grm_etr_act_act 1" ] ⊢ %[ "grm_etr_act_act 1" ]
; #10 %[ "grm_etr_act_act 1" ] ⊢ %[ "grm_etr_act_act 1" ]
	mov rdi,fmt_emt
	call emt_stg
	mov rdi,LB_4899
	call emt_stg 
	mov rdi,fmt_nl
	call emt_stg
	jmp LB_4900
LB_4900:
; #10 { 0'(= r ) 1'(= r ) } ⊢ { 0'(= r ) 1'(= r ) }
	mov rdi,fmt_emt
	call emt_stg
	mov rdi,fmt_rcd_l 
	call emt_stg 
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	mov rdi,r8 
	call emt_r64 
	C_POP_REGS
	mov rdi,fmt_spc 
	call emt_stg 
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	mov rdi,r8 
	call emt_r64 
	C_POP_REGS
	mov rdi,fmt_spc 
	call emt_stg 
	mov rdi,fmt_rcd_r 
	call emt_stg 
	mov rdi,fmt_nl
	call emt_stg
	jmp LB_4901
LB_4901:
	mov rdi,LB_4902
	call emt_stg 
	jmp err
LB_4897:
	cmp BYTE [r8+6],0
	jnz LB_4872
	POP_GRM_SCC
	ret
LB_4872:
	POP_GRM_FAIL 
	ret
ETR_267:
	mov r9,0x0000_ffff_ffff_ffff
	and r9,[r13]
	call GRM_267
	ret
GRM_267:
	PUSH_GRM
	jmp LB_4905
LB_4904:
	add r14,1 
LB_4905:
	cmp r14,r9
	jge LB_4906
	JZ_SPC BYTE [r13+8+r14], LB_4904
LB_4906
	lea rax,[r14+2]
	cmp rax,r9
	jg LB_4909
	jmp LB_4910
LB_4909:
	mov r8,unt_1
	jmp LB_4907
LB_4910:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],33
	jnz LB_4911
	cmp BYTE [rdi+1],124
	jnz LB_4911
	jmp LB_4912
LB_4911:
	mov r8,unt_1
	jmp LB_4907
LB_4912:
	add r14,2
	jmp LB_4908
LB_4907:
	add rsp,0
	jmp LB_4903
LB_4908:
	jmp LB_4914
LB_4913:
	add r14,1 
LB_4914:
	cmp r14,r9
	jge LB_4915
	JZ_SPC BYTE [r13+8+r14], LB_4913
LB_4915
	call GRM_268
	cmp BYTE [r8+6],0
	jnz LB_4918
	jmp LB_4919
LB_4918:
	jmp LB_4916
LB_4919:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a2◂ [ a37◂ [ a17◂ [ ]]] ) ⊢ 8'(= a2◂ [ a37◂ [ a17◂ [ ]]] )
; .mov_ptn 2'(= a2◂ [ a37◂ [ a17◂ [ ]]] ) ⊢ 8'(= a2◂ [ a37◂ [ a17◂ [ ]]] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_4917
LB_4916:
	add rsp,0
	POP_GRM_FAIL
	ret
LB_4917:
	mov QWORD [rsp+8*1],r14
	mov r13,QWORD [rsp+16+8*1]
	mov r14,QWORD [rsp+8*1]
	jmp LB_4920
LB_4920
; #150 8'(= a2◂ [ a37◂ [ a17◂ [ ]]] ) ⊢ 0(<3)◂8'(= a2◂ [ a37◂ [ a17◂ [ ]]] )
; #24 0(<3)◂8'(= a2◂ [ a37◂ [ a17◂ [ ]]] ) ⊢ 0(<2)◂0(<3)◂8'(= a2◂ [ a37◂ [ a17◂ [ ]]] )
; ∎ 0(<2)◂0(<3)◂8'(= a2◂ [ a37◂ [ a17◂ [ ]]] )
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂0(<3)◂8'(= a2◂ [ a37◂ [ a17◂ [ ]]] ) ⊢ 2'(= a3◂ [ a36◂ [ a17◂ [ ]]] )
; .mov_ptn 0(<2)◂0(<3)◂8'(= a2◂ [ a37◂ [ a17◂ [ ]]] ) ⊢ 2'(= a3◂ [ a36◂ [ a17◂ [ ]]] )
	mov rax,QWORD [rsp-8+8*1]
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,8
	jmp LB_4921
LB_4921:
	cmp BYTE [r8+6],0
	jnz LB_4903
	POP_GRM_SCC
	ret
LB_4903:
	RB_GRM
	jmp LB_4924
LB_4923:
	add r14,1 
LB_4924:
	cmp r14,r9
	jge LB_4925
	JZ_SPC BYTE [r13+8+r14], LB_4923
LB_4925
	call GRM_269
	cmp BYTE [r8+6],0
	jnz LB_4928
	jmp LB_4929
LB_4928:
	jmp LB_4926
LB_4929:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a37◂ [ a17◂ [ ]] ) ⊢ 8'(= a37◂ [ a17◂ [ ]] )
; .mov_ptn 2'(= a37◂ [ a17◂ [ ]] ) ⊢ 8'(= a37◂ [ a17◂ [ ]] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_4927
LB_4926:
	add rsp,0
	jmp LB_4922
LB_4927:
	jmp LB_4931
LB_4930:
	add r14,1 
LB_4931:
	cmp r14,r9
	jge LB_4932
	JZ_SPC BYTE [r13+8+r14], LB_4930
LB_4932
	call GRM_267
	cmp BYTE [r8+6],0
	jnz LB_4935
	jmp LB_4936
LB_4935:
	jmp LB_4933
LB_4936:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a36◂ [ a17◂ [ ]] ) ⊢ 9'(= a36◂ [ a17◂ [ ]] )
; .mov_ptn 2'(= a36◂ [ a17◂ [ ]] ) ⊢ 9'(= a36◂ [ a17◂ [ ]] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_4934
LB_4933:
	add rsp,8
	jmp LB_4922
LB_4934:
	mov QWORD [rsp+8*2],r14
	mov r13,QWORD [rsp+16+8*2]
	mov r14,QWORD [rsp+8*2]
	jmp LB_4937
LB_4937
; #149 { 8'(= a37◂ [ a17◂ [ ]] ) 9'(= a36◂ [ a17◂ [ ]] ) } ⊢ 1(<3)◂{ 8'(= a37◂ [ a17◂ [ ]] ) 9'(= a36◂ [ a17◂ [ ]] ) }
; #24 1(<3)◂{ 8'(= a37◂ [ a17◂ [ ]] ) 9'(= a36◂ [ a17◂ [ ]] ) } ⊢ 0(<2)◂1(<3)◂{ 8'(= a37◂ [ a17◂ [ ]] ) 9'(= a36◂ [ a17◂ [ ]] ) }
; ∎ 0(<2)◂1(<3)◂{ 8'(= a37◂ [ a17◂ [ ]] ) 9'(= a36◂ [ a17◂ [ ]] ) }
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂1(<3)◂{ 8'(= a37◂ [ a17◂ [ ]] ) 9'(= a36◂ [ a17◂ [ ]] ) } ⊢ 2'(= a3◂ [ a36◂ [ a17◂ [ ]]] )
; .mov_ptn 0(<2)◂1(<3)◂{ 8'(= a37◂ [ a17◂ [ ]] ) 9'(= a36◂ [ a17◂ [ ]] ) } ⊢ 2'(= a3◂ [ a36◂ [ a17◂ [ ]]] )
	ALC_RCD 2, rax
	mov r13,rax
	mov rax,QWORD [rsp-8+8*2]
	mov QWORD [r13+8+8*0],rax
	mov rax,QWORD [rsp-8+8*1]
	mov QWORD [r13+8+8*1],rax
	mov rax,r13
	mov BYTE [rax+6],1
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,16
	jmp LB_4938
LB_4938:
	cmp BYTE [r8+6],0
	jnz LB_4922
	POP_GRM_SCC
	ret
LB_4922:
	RB_GRM
	mov QWORD [rsp+8*0],r14
	mov r13,QWORD [rsp+16+8*0]
	mov r14,QWORD [rsp+8*0]
	jmp LB_4940
LB_4940
; #148 { } ⊢ 2(<3)◂{ }
; #24 2(<3)◂{ } ⊢ 0(<2)◂2(<3)◂{ }
; ∎ 0(<2)◂2(<3)◂{ }
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂2(<3)◂{ } ⊢ 2'(= a3◂ [ a36◂ [ a17◂ [ ]]] )
; .mov_ptn 0(<2)◂2(<3)◂{ } ⊢ 2'(= a3◂ [ a36◂ [ a17◂ [ ]]] )
	mov rax,unt 
	mov rax,unt_2
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	jmp LB_4941
LB_4941:
	cmp BYTE [r8+6],0
	jnz LB_4939
	POP_GRM_SCC
	ret
LB_4939:
	POP_GRM_FAIL 
	ret
ETR_268:
	mov r9,0x0000_ffff_ffff_ffff
	and r9,[r13]
	call GRM_268
	ret
GRM_268:
	PUSH_GRM
	jmp LB_4944
LB_4943:
	add r14,1 
LB_4944:
	cmp r14,r9
	jge LB_4945
	JZ_SPC BYTE [r13+8+r14], LB_4943
LB_4945
	call GRM_269
	cmp BYTE [r8+6],0
	jnz LB_4948
	jmp LB_4949
LB_4948:
	jmp LB_4946
LB_4949:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a37◂ [ a17◂ [ ]] ) ⊢ 8'(= a37◂ [ a17◂ [ ]] )
; .mov_ptn 2'(= a37◂ [ a17◂ [ ]] ) ⊢ 8'(= a37◂ [ a17◂ [ ]] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_4947
LB_4946:
	add rsp,0
	jmp LB_4942
LB_4947:
	jmp LB_4951
LB_4950:
	add r14,1 
LB_4951:
	cmp r14,r9
	jge LB_4952
	JZ_SPC BYTE [r13+8+r14], LB_4950
LB_4952
	call GRM_268
	cmp BYTE [r8+6],0
	jnz LB_4955
	jmp LB_4956
LB_4955:
	jmp LB_4953
LB_4956:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a2◂ [ a37◂ [ a17◂ [ ]]] ) ⊢ 9'(= a2◂ [ a37◂ [ a17◂ [ ]]] )
; .mov_ptn 2'(= a2◂ [ a37◂ [ a17◂ [ ]]] ) ⊢ 9'(= a2◂ [ a37◂ [ a17◂ [ ]]] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_4954
LB_4953:
	add rsp,8
	jmp LB_4942
LB_4954:
	mov QWORD [rsp+8*2],r14
	mov r13,QWORD [rsp+16+8*2]
	mov r14,QWORD [rsp+8*2]
	jmp LB_4957
LB_4957
; #23 { 8'(= a37◂ [ a17◂ [ ]] ) 9'(= a2◂ [ a37◂ [ a17◂ [ ]]] ) } ⊢ 0(<2)◂{ 8'(= a37◂ [ a17◂ [ ]] ) 9'(= a2◂ [ a37◂ [ a17◂ [ ]]] ) }
; #24 0(<2)◂{ 8'(= a37◂ [ a17◂ [ ]] ) 9'(= a2◂ [ a37◂ [ a17◂ [ ]]] ) } ⊢ 0(<2)◂0(<2)◂{ 8'(= a37◂ [ a17◂ [ ]] ) 9'(= a2◂ [ a37◂ [ a17◂ [ ]]] ) }
; ∎ 0(<2)◂0(<2)◂{ 8'(= a37◂ [ a17◂ [ ]] ) 9'(= a2◂ [ a37◂ [ a17◂ [ ]]] ) }
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂0(<2)◂{ 8'(= a37◂ [ a17◂ [ ]] ) 9'(= a2◂ [ a37◂ [ a17◂ [ ]]] ) } ⊢ 2'(= a3◂ [ a2◂ [ a37◂ [ a17◂ [ ]]]] )
; .mov_ptn 0(<2)◂0(<2)◂{ 8'(= a37◂ [ a17◂ [ ]] ) 9'(= a2◂ [ a37◂ [ a17◂ [ ]]] ) } ⊢ 2'(= a3◂ [ a2◂ [ a37◂ [ a17◂ [ ]]]] )
	ALC_RCD 2, rax
	mov r13,rax
	mov rax,QWORD [rsp-8+8*2]
	mov QWORD [r13+8+8*0],rax
	mov rax,QWORD [rsp-8+8*1]
	mov QWORD [r13+8+8*1],rax
	mov rax,r13
	mov BYTE [rax+6],0
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,16
	jmp LB_4958
LB_4958:
	cmp BYTE [r8+6],0
	jnz LB_4942
	POP_GRM_SCC
	ret
LB_4942:
	RB_GRM
	mov QWORD [rsp+8*0],r14
	mov r13,QWORD [rsp+16+8*0]
	mov r14,QWORD [rsp+8*0]
	jmp LB_4960
LB_4960
; #22 { } ⊢ 1(<2)◂{ }
; #24 1(<2)◂{ } ⊢ 0(<2)◂1(<2)◂{ }
; ∎ 0(<2)◂1(<2)◂{ }
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂1(<2)◂{ } ⊢ 2'(= a3◂ [ a2◂ [ a37◂ [ a17◂ [ ]]]] )
; .mov_ptn 0(<2)◂1(<2)◂{ } ⊢ 2'(= a3◂ [ a2◂ [ a37◂ [ a17◂ [ ]]]] )
	mov rax,unt 
	mov rax,unt_1
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	jmp LB_4961
LB_4961:
	cmp BYTE [r8+6],0
	jnz LB_4959
	POP_GRM_SCC
	ret
LB_4959:
	POP_GRM_FAIL 
	ret
ETR_269:
	mov r9,0x0000_ffff_ffff_ffff
	and r9,[r13]
	call GRM_269
	ret
GRM_269:
	PUSH_GRM
	jmp LB_4964
LB_4963:
	add r14,1 
LB_4964:
	cmp r14,r9
	jge LB_4965
	JZ_SPC BYTE [r13+8+r14], LB_4963
LB_4965
	lea rax,[r14+3]
	cmp rax,r9
	jg LB_4968
	jmp LB_4969
LB_4968:
	mov r8,unt_1
	jmp LB_4966
LB_4969:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],226
	jnz LB_4970
	cmp BYTE [rdi+1],159
	jnz LB_4970
	cmp BYTE [rdi+2],166
	jnz LB_4970
	jmp LB_4971
LB_4970:
	mov r8,unt_1
	jmp LB_4966
LB_4971:
	add r14,3
	jmp LB_4967
LB_4966:
	add rsp,0
	jmp LB_4962
LB_4967:
	jmp LB_4973
LB_4972:
	add r14,1 
LB_4973:
	cmp r14,r9
	jge LB_4974
	JZ_SPC BYTE [r13+8+r14], LB_4972
LB_4974
	call GRM_270
	cmp BYTE [r8+6],0
	jnz LB_4977
	jmp LB_4978
LB_4977:
	jmp LB_4975
LB_4978:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a38◂ [ a17◂ [ ]] ) ⊢ 8'(= a38◂ [ a17◂ [ ]] )
; .mov_ptn 2'(= a38◂ [ a17◂ [ ]] ) ⊢ 8'(= a38◂ [ a17◂ [ ]] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_4976
LB_4975:
	add rsp,0
	jmp LB_4962
LB_4976:
	jmp LB_4980
LB_4979:
	add r14,1 
LB_4980:
	cmp r14,r9
	jge LB_4981
	JZ_SPC BYTE [r13+8+r14], LB_4979
LB_4981
	lea rax,[r14+3]
	cmp rax,r9
	jg LB_4984
	jmp LB_4985
LB_4984:
	mov r8,unt_1
	jmp LB_4982
LB_4985:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],226
	jnz LB_4986
	cmp BYTE [rdi+1],159
	jnz LB_4986
	cmp BYTE [rdi+2],167
	jnz LB_4986
	jmp LB_4987
LB_4986:
	mov r8,unt_1
	jmp LB_4982
LB_4987:
	add r14,3
	jmp LB_4983
LB_4982:
	add rsp,8
	jmp LB_4962
LB_4983:
	mov QWORD [rsp+8*1],r14
	mov r13,QWORD [rsp+16+8*1]
	mov r14,QWORD [rsp+8*1]
	jmp LB_4988
LB_4988
; #147 8'(= a38◂ [ a17◂ [ ]] ) ⊢ 0(<2)◂8'(= a38◂ [ a17◂ [ ]] )
; #24 0(<2)◂8'(= a38◂ [ a17◂ [ ]] ) ⊢ 0(<2)◂0(<2)◂8'(= a38◂ [ a17◂ [ ]] )
; ∎ 0(<2)◂0(<2)◂8'(= a38◂ [ a17◂ [ ]] )
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂0(<2)◂8'(= a38◂ [ a17◂ [ ]] ) ⊢ 2'(= a3◂ [ a37◂ [ a17◂ [ ]]] )
; .mov_ptn 0(<2)◂0(<2)◂8'(= a38◂ [ a17◂ [ ]] ) ⊢ 2'(= a3◂ [ a37◂ [ a17◂ [ ]]] )
	mov rax,QWORD [rsp-8+8*1]
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,8
	jmp LB_4989
LB_4989:
	cmp BYTE [r8+6],0
	jnz LB_4962
	POP_GRM_SCC
	ret
LB_4962:
	RB_GRM
	jmp LB_4992
LB_4991:
	add r14,1 
LB_4992:
	cmp r14,r9
	jge LB_4993
	JZ_SPC BYTE [r13+8+r14], LB_4991
LB_4993
	call GRM_270
	cmp BYTE [r8+6],0
	jnz LB_4996
	jmp LB_4997
LB_4996:
	jmp LB_4994
LB_4997:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a38◂ [ a17◂ [ ]] ) ⊢ 8'(= a38◂ [ a17◂ [ ]] )
; .mov_ptn 2'(= a38◂ [ a17◂ [ ]] ) ⊢ 8'(= a38◂ [ a17◂ [ ]] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_4995
LB_4994:
	add rsp,0
	jmp LB_4990
LB_4995:
	mov QWORD [rsp+8*1],r14
	mov r13,QWORD [rsp+16+8*1]
	mov r14,QWORD [rsp+8*1]
	jmp LB_4998
LB_4998
; #146 8'(= a38◂ [ a17◂ [ ]] ) ⊢ 1(<2)◂8'(= a38◂ [ a17◂ [ ]] )
; #24 1(<2)◂8'(= a38◂ [ a17◂ [ ]] ) ⊢ 0(<2)◂1(<2)◂8'(= a38◂ [ a17◂ [ ]] )
; ∎ 0(<2)◂1(<2)◂8'(= a38◂ [ a17◂ [ ]] )
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂1(<2)◂8'(= a38◂ [ a17◂ [ ]] ) ⊢ 2'(= a3◂ [ a37◂ [ a17◂ [ ]]] )
; .mov_ptn 0(<2)◂1(<2)◂8'(= a38◂ [ a17◂ [ ]] ) ⊢ 2'(= a3◂ [ a37◂ [ a17◂ [ ]]] )
	mov rax,QWORD [rsp-8+8*1]
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],1
	mov QWORD [rax+8],rdi
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,8
	jmp LB_4999
LB_4999:
	cmp BYTE [r8+6],0
	jnz LB_4990
	POP_GRM_SCC
	ret
LB_4990:
	POP_GRM_FAIL 
	ret
ETR_270:
	mov r9,0x0000_ffff_ffff_ffff
	and r9,[r13]
	call GRM_270
	ret
GRM_270:
	PUSH_GRM
	jmp LB_5002
LB_5001:
	add r14,1 
LB_5002:
	cmp r14,r9
	jge LB_5003
	JZ_SPC BYTE [r13+8+r14], LB_5001
LB_5003
	call GRM_70
	cmp BYTE [r8+6],0
	jnz LB_5006
	jmp LB_5007
LB_5006:
	jmp LB_5004
LB_5007:
	sub rsp,8
; .mov_ptn2 2'(= {| l |} ) ⊢ 8'(= {| l |} )
; .mov_ptn 2'(= {| l |} ) ⊢ 8'(= {| l |} )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_5005
LB_5004:
	add rsp,0
	jmp LB_5000
LB_5005:
	mov QWORD [rsp+8*1],r14
	mov r13,QWORD [rsp+16+8*1]
	mov r14,QWORD [rsp+8*1]
	jmp LB_5008
LB_5008
; #144 8'(= {| l |} ) ⊢ 1(<2)◂8'(= {| l |} )
; #24 1(<2)◂8'(= {| l |} ) ⊢ 0(<2)◂1(<2)◂8'(= {| l |} )
; ∎ 0(<2)◂1(<2)◂8'(= {| l |} )
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂1(<2)◂8'(= {| l |} ) ⊢ 2'(= a3◂ [ a38◂ [ a17◂ [ ]]] )
; .mov_ptn 0(<2)◂1(<2)◂8'(= {| l |} ) ⊢ 2'(= a3◂ [ a38◂ [ a17◂ [ ]]] )
	mov rax,QWORD [rsp-8+8*1]
	mov BYTE [rax+6],1
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,8
	jmp LB_5009
LB_5009:
	cmp BYTE [r8+6],0
	jnz LB_5000
	POP_GRM_SCC
	ret
LB_5000:
	RB_GRM
	jmp LB_5012
LB_5011:
	add r14,1 
LB_5012:
	cmp r14,r9
	jge LB_5013
	JZ_SPC BYTE [r13+8+r14], LB_5011
LB_5013
	call GRM_192
	cmp BYTE [r8+6],0
	jnz LB_5016
	jmp LB_5017
LB_5016:
	jmp LB_5014
LB_5017:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a17◂ [ ] ) ⊢ 8'(= a17◂ [ ] )
; .mov_ptn 2'(= a17◂ [ ] ) ⊢ 8'(= a17◂ [ ] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_5015
LB_5014:
	add rsp,0
	jmp LB_5010
LB_5015:
	mov QWORD [rsp+8*1],r14
	mov r13,QWORD [rsp+16+8*1]
	mov r14,QWORD [rsp+8*1]
	jmp LB_5018
LB_5018
; #145 8'(= a17◂ [ ] ) ⊢ 0(<2)◂8'(= a17◂ [ ] )
; #24 0(<2)◂8'(= a17◂ [ ] ) ⊢ 0(<2)◂0(<2)◂8'(= a17◂ [ ] )
; ∎ 0(<2)◂0(<2)◂8'(= a17◂ [ ] )
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂0(<2)◂8'(= a17◂ [ ] ) ⊢ 2'(= a3◂ [ a38◂ [ a17◂ [ ]]] )
; .mov_ptn 0(<2)◂0(<2)◂8'(= a17◂ [ ] ) ⊢ 2'(= a3◂ [ a38◂ [ a17◂ [ ]]] )
	mov rax,QWORD [rsp-8+8*1]
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,8
	jmp LB_5019
LB_5019:
	cmp BYTE [r8+6],0
	jnz LB_5010
	POP_GRM_SCC
	ret
LB_5010:
	POP_GRM_FAIL 
	ret
ETR_271:
	mov r9,0x0000_ffff_ffff_ffff
	and r9,[r13]
	call GRM_271
	ret
GRM_271:
	PUSH_GRM
	jmp LB_5022
LB_5021:
	add r14,1 
LB_5022:
	cmp r14,r9
	jge LB_5023
	JZ_SPC BYTE [r13+8+r14], LB_5021
LB_5023
	lea rax,[r14+4]
	cmp rax,r9
	jg LB_5026
	jmp LB_5027
LB_5026:
	mov r8,unt_1
	jmp LB_5024
LB_5027:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],226
	jnz LB_5028
	cmp BYTE [rdi+1],136
	jnz LB_5028
	cmp BYTE [rdi+2],144
	jnz LB_5028
	cmp BYTE [rdi+3],42
	jnz LB_5028
	jmp LB_5029
LB_5028:
	mov r8,unt_1
	jmp LB_5024
LB_5029:
	add r14,4
	jmp LB_5025
LB_5024:
	add rsp,0
	jmp LB_5020
LB_5025:
	mov QWORD [rsp+8*0],r14
	mov r13,QWORD [rsp+16+8*0]
	mov r14,QWORD [rsp+8*0]
	jmp LB_5030
LB_5030
; #152 { } ⊢ 1(<3)◂{ }
; #24 1(<3)◂{ } ⊢ 0(<2)◂1(<3)◂{ }
; ∎ 0(<2)◂1(<3)◂{ }
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂1(<3)◂{ } ⊢ 2'(= a3◂ [ a35◂ [ ]] )
; .mov_ptn 0(<2)◂1(<3)◂{ } ⊢ 2'(= a3◂ [ a35◂ [ ]] )
	mov rax,unt 
	mov rax,unt_1
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	jmp LB_5031
LB_5031:
	cmp BYTE [r8+6],0
	jnz LB_5020
	POP_GRM_SCC
	ret
LB_5020:
	RB_GRM
	jmp LB_5034
LB_5033:
	add r14,1 
LB_5034:
	cmp r14,r9
	jge LB_5035
	JZ_SPC BYTE [r13+8+r14], LB_5033
LB_5035
	lea rax,[r14+4]
	cmp rax,r9
	jg LB_5038
	jmp LB_5039
LB_5038:
	mov r8,unt_1
	jmp LB_5036
LB_5039:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],226
	jnz LB_5040
	cmp BYTE [rdi+1],136
	jnz LB_5040
	cmp BYTE [rdi+2],144
	jnz LB_5040
	cmp BYTE [rdi+3],35
	jnz LB_5040
	jmp LB_5041
LB_5040:
	mov r8,unt_1
	jmp LB_5036
LB_5041:
	add r14,4
	jmp LB_5037
LB_5036:
	add rsp,0
	jmp LB_5032
LB_5037:
	mov QWORD [rsp+8*0],r14
	mov r13,QWORD [rsp+16+8*0]
	mov r14,QWORD [rsp+8*0]
	jmp LB_5042
LB_5042
; #151 { } ⊢ 2(<3)◂{ }
; #24 2(<3)◂{ } ⊢ 0(<2)◂2(<3)◂{ }
; ∎ 0(<2)◂2(<3)◂{ }
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂2(<3)◂{ } ⊢ 2'(= a3◂ [ a35◂ [ ]] )
; .mov_ptn 0(<2)◂2(<3)◂{ } ⊢ 2'(= a3◂ [ a35◂ [ ]] )
	mov rax,unt 
	mov rax,unt_2
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	jmp LB_5043
LB_5043:
	cmp BYTE [r8+6],0
	jnz LB_5032
	POP_GRM_SCC
	ret
LB_5032:
	RB_GRM
	jmp LB_5046
LB_5045:
	add r14,1 
LB_5046:
	cmp r14,r9
	jge LB_5047
	JZ_SPC BYTE [r13+8+r14], LB_5045
LB_5047
	lea rax,[r14+3]
	cmp rax,r9
	jg LB_5050
	jmp LB_5051
LB_5050:
	mov r8,unt_1
	jmp LB_5048
LB_5051:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],226
	jnz LB_5052
	cmp BYTE [rdi+1],136
	jnz LB_5052
	cmp BYTE [rdi+2],144
	jnz LB_5052
	jmp LB_5053
LB_5052:
	mov r8,unt_1
	jmp LB_5048
LB_5053:
	add r14,3
	jmp LB_5049
LB_5048:
	add rsp,0
	jmp LB_5044
LB_5049:
	mov QWORD [rsp+8*0],r14
	mov r13,QWORD [rsp+16+8*0]
	mov r14,QWORD [rsp+8*0]
	jmp LB_5054
LB_5054
; #153 { } ⊢ 0(<3)◂{ }
; #24 0(<3)◂{ } ⊢ 0(<2)◂0(<3)◂{ }
; ∎ 0(<2)◂0(<3)◂{ }
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂0(<3)◂{ } ⊢ 2'(= a3◂ [ a35◂ [ ]] )
; .mov_ptn 0(<2)◂0(<3)◂{ } ⊢ 2'(= a3◂ [ a35◂ [ ]] )
	mov rax,unt 
	mov rax,unt_0
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	jmp LB_5055
LB_5055:
	cmp BYTE [r8+6],0
	jnz LB_5044
	POP_GRM_SCC
	ret
LB_5044:
	POP_GRM_FAIL 
	ret
ETR_272:
	mov r9,0x0000_ffff_ffff_ffff
	and r9,[r13]
	call GRM_272
	ret
GRM_272:
	PUSH_GRM
	jmp LB_5058
LB_5057:
	add r14,1 
LB_5058:
	cmp r14,r9
	jge LB_5059
	JZ_SPC BYTE [r13+8+r14], LB_5057
LB_5059
	lea rax,[r14+5]
	cmp rax,r9
	jg LB_5062
	jmp LB_5063
LB_5062:
	mov r8,unt_1
	jmp LB_5060
LB_5063:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],226
	jnz LB_5064
	cmp BYTE [rdi+1],136
	jnz LB_5064
	cmp BYTE [rdi+2],144
	jnz LB_5064
	cmp BYTE [rdi+3],46
	jnz LB_5064
	cmp BYTE [rdi+4],42
	jnz LB_5064
	jmp LB_5065
LB_5064:
	mov r8,unt_1
	jmp LB_5060
LB_5065:
	add r14,5
	jmp LB_5061
LB_5060:
	add rsp,0
	jmp LB_5056
LB_5061:
	mov QWORD [rsp+8*0],r14
	mov r13,QWORD [rsp+16+8*0]
	mov r14,QWORD [rsp+8*0]
	jmp LB_5066
LB_5066
; #152 { } ⊢ 1(<3)◂{ }
; #24 1(<3)◂{ } ⊢ 0(<2)◂1(<3)◂{ }
; ∎ 0(<2)◂1(<3)◂{ }
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂1(<3)◂{ } ⊢ 2'(= a3◂ [ a35◂ [ ]] )
; .mov_ptn 0(<2)◂1(<3)◂{ } ⊢ 2'(= a3◂ [ a35◂ [ ]] )
	mov rax,unt 
	mov rax,unt_1
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	jmp LB_5067
LB_5067:
	cmp BYTE [r8+6],0
	jnz LB_5056
	POP_GRM_SCC
	ret
LB_5056:
	RB_GRM
	jmp LB_5070
LB_5069:
	add r14,1 
LB_5070:
	cmp r14,r9
	jge LB_5071
	JZ_SPC BYTE [r13+8+r14], LB_5069
LB_5071
	lea rax,[r14+5]
	cmp rax,r9
	jg LB_5074
	jmp LB_5075
LB_5074:
	mov r8,unt_1
	jmp LB_5072
LB_5075:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],226
	jnz LB_5076
	cmp BYTE [rdi+1],136
	jnz LB_5076
	cmp BYTE [rdi+2],144
	jnz LB_5076
	cmp BYTE [rdi+3],46
	jnz LB_5076
	cmp BYTE [rdi+4],35
	jnz LB_5076
	jmp LB_5077
LB_5076:
	mov r8,unt_1
	jmp LB_5072
LB_5077:
	add r14,5
	jmp LB_5073
LB_5072:
	add rsp,0
	jmp LB_5068
LB_5073:
	mov QWORD [rsp+8*0],r14
	mov r13,QWORD [rsp+16+8*0]
	mov r14,QWORD [rsp+8*0]
	jmp LB_5078
LB_5078
; #151 { } ⊢ 2(<3)◂{ }
; #24 2(<3)◂{ } ⊢ 0(<2)◂2(<3)◂{ }
; ∎ 0(<2)◂2(<3)◂{ }
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂2(<3)◂{ } ⊢ 2'(= a3◂ [ a35◂ [ ]] )
; .mov_ptn 0(<2)◂2(<3)◂{ } ⊢ 2'(= a3◂ [ a35◂ [ ]] )
	mov rax,unt 
	mov rax,unt_2
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	jmp LB_5079
LB_5079:
	cmp BYTE [r8+6],0
	jnz LB_5068
	POP_GRM_SCC
	ret
LB_5068:
	RB_GRM
	jmp LB_5082
LB_5081:
	add r14,1 
LB_5082:
	cmp r14,r9
	jge LB_5083
	JZ_SPC BYTE [r13+8+r14], LB_5081
LB_5083
	lea rax,[r14+4]
	cmp rax,r9
	jg LB_5086
	jmp LB_5087
LB_5086:
	mov r8,unt_1
	jmp LB_5084
LB_5087:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],226
	jnz LB_5088
	cmp BYTE [rdi+1],136
	jnz LB_5088
	cmp BYTE [rdi+2],144
	jnz LB_5088
	cmp BYTE [rdi+3],46
	jnz LB_5088
	jmp LB_5089
LB_5088:
	mov r8,unt_1
	jmp LB_5084
LB_5089:
	add r14,4
	jmp LB_5085
LB_5084:
	add rsp,0
	jmp LB_5080
LB_5085:
	mov QWORD [rsp+8*0],r14
	mov r13,QWORD [rsp+16+8*0]
	mov r14,QWORD [rsp+8*0]
	jmp LB_5090
LB_5090
; #153 { } ⊢ 0(<3)◂{ }
; #24 0(<3)◂{ } ⊢ 0(<2)◂0(<3)◂{ }
; ∎ 0(<2)◂0(<3)◂{ }
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂0(<3)◂{ } ⊢ 2'(= a3◂ [ a35◂ [ ]] )
; .mov_ptn 0(<2)◂0(<3)◂{ } ⊢ 2'(= a3◂ [ a35◂ [ ]] )
	mov rax,unt 
	mov rax,unt_0
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	jmp LB_5091
LB_5091:
	cmp BYTE [r8+6],0
	jnz LB_5080
	POP_GRM_SCC
	ret
LB_5080:
	POP_GRM_FAIL 
	ret
ETR_273:
	mov r9,0x0000_ffff_ffff_ffff
	and r9,[r13]
	call GRM_273
	ret
GRM_273:
	PUSH_GRM
	jmp LB_5094
LB_5093:
	add r14,1 
LB_5094:
	cmp r14,r9
	jge LB_5095
	JZ_SPC BYTE [r13+8+r14], LB_5093
LB_5095
	call GRM_272
	cmp BYTE [r8+6],0
	jnz LB_5098
	jmp LB_5099
LB_5098:
	jmp LB_5096
LB_5099:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a35◂ [ ] ) ⊢ 8'(= a35◂ [ ] )
; .mov_ptn 2'(= a35◂ [ ] ) ⊢ 8'(= a35◂ [ ] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_5097
LB_5096:
	add rsp,0
	jmp LB_5092
LB_5097:
	jmp LB_5101
LB_5100:
	add r14,1 
LB_5101:
	cmp r14,r9
	jge LB_5102
	JZ_SPC BYTE [r13+8+r14], LB_5100
LB_5102
	call GRM_275
	cmp BYTE [r8+6],0
	jnz LB_5105
	jmp LB_5106
LB_5105:
	jmp LB_5103
LB_5106:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a3◂ [ {| l |}] ) ⊢ 9'(= a3◂ [ {| l |}] )
; .mov_ptn 2'(= a3◂ [ {| l |}] ) ⊢ 9'(= a3◂ [ {| l |}] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_5104
LB_5103:
	add rsp,8
	POP_GRM_FAIL
	ret
LB_5104:
	jmp LB_5108
LB_5107:
	add r14,1 
LB_5108:
	cmp r14,r9
	jge LB_5109
	JZ_SPC BYTE [r13+8+r14], LB_5107
LB_5109
	call GRM_267
	cmp BYTE [r8+6],0
	jnz LB_5112
	jmp LB_5113
LB_5112:
	jmp LB_5110
LB_5113:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a36◂ [ a17◂ [ ]] ) ⊢ 10'(= a36◂ [ a17◂ [ ]] )
; .mov_ptn 2'(= a36◂ [ a17◂ [ ]] ) ⊢ 10'(= a36◂ [ a17◂ [ ]] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_5111
LB_5110:
	add rsp,16
	POP_GRM_FAIL
	ret
LB_5111:
	jmp LB_5115
LB_5114:
	add r14,1 
LB_5115:
	cmp r14,r9
	jge LB_5116
	JZ_SPC BYTE [r13+8+r14], LB_5114
LB_5116
	call GRM_274
	cmp BYTE [r8+6],0
	jnz LB_5119
	jmp LB_5120
LB_5119:
	jmp LB_5117
LB_5120:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a3◂ [ a33◂ [ a17◂ [ ]{| l |}]] ) ⊢ 11'(= a3◂ [ a33◂ [ a17◂ [ ]{| l |}]] )
; .mov_ptn 2'(= a3◂ [ a33◂ [ a17◂ [ ]{| l |}]] ) ⊢ 11'(= a3◂ [ a33◂ [ a17◂ [ ]{| l |}]] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_5118
LB_5117:
	add rsp,24
	POP_GRM_FAIL
	ret
LB_5118:
	mov QWORD [rsp+8*4],r14
	mov r13,QWORD [rsp+16+8*4]
	mov r14,QWORD [rsp+8*4]
	jmp LB_5121
LB_5121
; #156 { 9'(= a3◂ [ {| l |}] ) 8'(= a35◂ [ ] ) 10'(= a36◂ [ a17◂ [ ]] ) 11'(= a3◂ [ a33◂ [ a17◂ [ ]{| l |}]] ) } ⊢ 1(<2)◂{ 9'(= a3◂ [ {| l |}] ) 8'(= a35◂ [ ] ) 10'(= a36◂ [ a17◂ [ ]] ) 11'(= a3◂ [ a33◂ [ a17◂ [ ]{| l |}]] ) }
; #24 1(<2)◂{ 9'(= a3◂ [ {| l |}] ) 8'(= a35◂ [ ] ) 10'(= a36◂ [ a17◂ [ ]] ) 11'(= a3◂ [ a33◂ [ a17◂ [ ]{| l |}]] ) } ⊢ 0(<2)◂1(<2)◂{ 9'(= a3◂ [ {| l |}] ) 8'(= a35◂ [ ] ) 10'(= a36◂ [ a17◂ [ ]] ) 11'(= a3◂ [ a33◂ [ a17◂ [ ]{| l |}]] ) }
; ∎ 0(<2)◂1(<2)◂{ 9'(= a3◂ [ {| l |}] ) 8'(= a35◂ [ ] ) 10'(= a36◂ [ a17◂ [ ]] ) 11'(= a3◂ [ a33◂ [ a17◂ [ ]{| l |}]] ) }
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂1(<2)◂{ 9'(= a3◂ [ {| l |}] ) 8'(= a35◂ [ ] ) 10'(= a36◂ [ a17◂ [ ]] ) 11'(= a3◂ [ a33◂ [ a17◂ [ ]{| l |}]] ) } ⊢ 2'(= a3◂ [ a33◂ [ a17◂ [ ]{| l |}]] )
; .mov_ptn 0(<2)◂1(<2)◂{ 9'(= a3◂ [ {| l |}] ) 8'(= a35◂ [ ] ) 10'(= a36◂ [ a17◂ [ ]] ) 11'(= a3◂ [ a33◂ [ a17◂ [ ]{| l |}]] ) } ⊢ 2'(= a3◂ [ a33◂ [ a17◂ [ ]{| l |}]] )
	ALC_RCD 4, rax
	mov r13,rax
	mov rax,QWORD [rsp-8+8*3]
	mov QWORD [r13+8+8*0],rax
	mov rax,QWORD [rsp-8+8*4]
	mov QWORD [r13+8+8*1],rax
	mov rax,QWORD [rsp-8+8*2]
	mov QWORD [r13+8+8*2],rax
	mov rax,QWORD [rsp-8+8*1]
	mov QWORD [r13+8+8*3],rax
	mov rax,r13
	mov BYTE [rax+6],1
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,32
	jmp LB_5122
LB_5122:
	cmp BYTE [r8+6],0
	jnz LB_5092
	POP_GRM_SCC
	ret
LB_5092:
	RB_GRM
	jmp LB_5125
LB_5124:
	add r14,1 
LB_5125:
	cmp r14,r9
	jge LB_5126
	JZ_SPC BYTE [r13+8+r14], LB_5124
LB_5126
	call GRM_271
	cmp BYTE [r8+6],0
	jnz LB_5129
	jmp LB_5130
LB_5129:
	jmp LB_5127
LB_5130:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a35◂ [ ] ) ⊢ 8'(= a35◂ [ ] )
; .mov_ptn 2'(= a35◂ [ ] ) ⊢ 8'(= a35◂ [ ] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_5128
LB_5127:
	add rsp,0
	jmp LB_5123
LB_5128:
	jmp LB_5132
LB_5131:
	add r14,1 
LB_5132:
	cmp r14,r9
	jge LB_5133
	JZ_SPC BYTE [r13+8+r14], LB_5131
LB_5133
	call GRM_275
	cmp BYTE [r8+6],0
	jnz LB_5136
	jmp LB_5137
LB_5136:
	jmp LB_5134
LB_5137:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a3◂ [ {| l |}] ) ⊢ 9'(= a3◂ [ {| l |}] )
; .mov_ptn 2'(= a3◂ [ {| l |}] ) ⊢ 9'(= a3◂ [ {| l |}] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_5135
LB_5134:
	add rsp,8
	jmp LB_5123
LB_5135:
	jmp LB_5139
LB_5138:
	add r14,1 
LB_5139:
	cmp r14,r9
	jge LB_5140
	JZ_SPC BYTE [r13+8+r14], LB_5138
LB_5140
	call GRM_267
	cmp BYTE [r8+6],0
	jnz LB_5143
	jmp LB_5144
LB_5143:
	jmp LB_5141
LB_5144:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a36◂ [ a17◂ [ ]] ) ⊢ 10'(= a36◂ [ a17◂ [ ]] )
; .mov_ptn 2'(= a36◂ [ a17◂ [ ]] ) ⊢ 10'(= a36◂ [ a17◂ [ ]] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_5142
LB_5141:
	add rsp,16
	jmp LB_5123
LB_5142:
	jmp LB_5146
LB_5145:
	add r14,1 
LB_5146:
	cmp r14,r9
	jge LB_5147
	JZ_SPC BYTE [r13+8+r14], LB_5145
LB_5147
	call GRM_274
	cmp BYTE [r8+6],0
	jnz LB_5150
	jmp LB_5151
LB_5150:
	jmp LB_5148
LB_5151:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a3◂ [ a33◂ [ a17◂ [ ]{| l |}]] ) ⊢ 11'(= a3◂ [ a33◂ [ a17◂ [ ]{| l |}]] )
; .mov_ptn 2'(= a3◂ [ a33◂ [ a17◂ [ ]{| l |}]] ) ⊢ 11'(= a3◂ [ a33◂ [ a17◂ [ ]{| l |}]] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_5149
LB_5148:
	add rsp,24
	jmp LB_5123
LB_5149:
	jmp LB_5153
LB_5152:
	add r14,1 
LB_5153:
	cmp r14,r9
	jge LB_5154
	JZ_SPC BYTE [r13+8+r14], LB_5152
LB_5154
	call GRM_273
	cmp BYTE [r8+6],0
	jnz LB_5157
	jmp LB_5158
LB_5157:
	jmp LB_5155
LB_5158:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a33◂ [ a17◂ [ ]{| l |}] ) ⊢ 12'(= a33◂ [ a17◂ [ ]{| l |}] )
; .mov_ptn 2'(= a33◂ [ a17◂ [ ]{| l |}] ) ⊢ 12'(= a33◂ [ a17◂ [ ]{| l |}] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_5156
LB_5155:
	add rsp,32
	jmp LB_5123
LB_5156:
	mov QWORD [rsp+8*5],r14
	mov r13,QWORD [rsp+16+8*5]
	mov r14,QWORD [rsp+8*5]
	jmp LB_5159
LB_5159
; #157 { 9'(= a3◂ [ {| l |}] ) 8'(= a35◂ [ ] ) 10'(= a36◂ [ a17◂ [ ]] ) 11'(= a3◂ [ a33◂ [ a17◂ [ ]{| l |}]] ) 12'(= a33◂ [ a17◂ [ ]{| l |}] ) } ⊢ 0(<2)◂{ 9'(= a3◂ [ {| l |}] ) 8'(= a35◂ [ ] ) 10'(= a36◂ [ a17◂ [ ]] ) 11'(= a3◂ [ a33◂ [ a17◂ [ ]{| l |}]] ) 12'(= a33◂ [ a17◂ [ ]{| l |}] ) }
; #24 0(<2)◂{ 9'(= a3◂ [ {| l |}] ) 8'(= a35◂ [ ] ) 10'(= a36◂ [ a17◂ [ ]] ) 11'(= a3◂ [ a33◂ [ a17◂ [ ]{| l |}]] ) 12'(= a33◂ [ a17◂ [ ]{| l |}] ) } ⊢ 0(<2)◂0(<2)◂{ 9'(= a3◂ [ {| l |}] ) 8'(= a35◂ [ ] ) 10'(= a36◂ [ a17◂ [ ]] ) 11'(= a3◂ [ a33◂ [ a17◂ [ ]{| l |}]] ) 12'(= a33◂ [ a17◂ [ ]{| l |}] ) }
; ∎ 0(<2)◂0(<2)◂{ 9'(= a3◂ [ {| l |}] ) 8'(= a35◂ [ ] ) 10'(= a36◂ [ a17◂ [ ]] ) 11'(= a3◂ [ a33◂ [ a17◂ [ ]{| l |}]] ) 12'(= a33◂ [ a17◂ [ ]{| l |}] ) }
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂0(<2)◂{ 9'(= a3◂ [ {| l |}] ) 8'(= a35◂ [ ] ) 10'(= a36◂ [ a17◂ [ ]] ) 11'(= a3◂ [ a33◂ [ a17◂ [ ]{| l |}]] ) 12'(= a33◂ [ a17◂ [ ]{| l |}] ) } ⊢ 2'(= a3◂ [ a33◂ [ a17◂ [ ]{| l |}]] )
; .mov_ptn 0(<2)◂0(<2)◂{ 9'(= a3◂ [ {| l |}] ) 8'(= a35◂ [ ] ) 10'(= a36◂ [ a17◂ [ ]] ) 11'(= a3◂ [ a33◂ [ a17◂ [ ]{| l |}]] ) 12'(= a33◂ [ a17◂ [ ]{| l |}] ) } ⊢ 2'(= a3◂ [ a33◂ [ a17◂ [ ]{| l |}]] )
	ALC_RCD 5, rax
	mov r13,rax
	mov rax,QWORD [rsp-8+8*4]
	mov QWORD [r13+8+8*0],rax
	mov rax,QWORD [rsp-8+8*5]
	mov QWORD [r13+8+8*1],rax
	mov rax,QWORD [rsp-8+8*3]
	mov QWORD [r13+8+8*2],rax
	mov rax,QWORD [rsp-8+8*2]
	mov QWORD [r13+8+8*3],rax
	mov rax,QWORD [rsp-8+8*1]
	mov QWORD [r13+8+8*4],rax
	mov rax,r13
	mov BYTE [rax+6],0
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,40
	jmp LB_5160
LB_5160:
	cmp BYTE [r8+6],0
	jnz LB_5123
	POP_GRM_SCC
	ret
LB_5123:
	POP_GRM_FAIL 
	ret
ETR_274:
	mov r9,0x0000_ffff_ffff_ffff
	and r9,[r13]
	call GRM_274
	ret
GRM_274:
	PUSH_GRM
	jmp LB_5163
LB_5162:
	add r14,1 
LB_5163:
	cmp r14,r9
	jge LB_5164
	JZ_SPC BYTE [r13+8+r14], LB_5162
LB_5164
	lea rax,[r14+1]
	cmp rax,r9
	jg LB_5167
	jmp LB_5168
LB_5167:
	mov r8,unt_1
	jmp LB_5165
LB_5168:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],59
	jnz LB_5169
	jmp LB_5170
LB_5169:
	mov r8,unt_1
	jmp LB_5165
LB_5170:
	add r14,1
	jmp LB_5166
LB_5165:
	add rsp,0
	jmp LB_5161
LB_5166:
	jmp LB_5172
LB_5171:
	add r14,1 
LB_5172:
	cmp r14,r9
	jge LB_5173
	JZ_SPC BYTE [r13+8+r14], LB_5171
LB_5173
	call GRM_273
	cmp BYTE [r8+6],0
	jnz LB_5176
	jmp LB_5177
LB_5176:
	jmp LB_5174
LB_5177:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a33◂ [ a17◂ [ ]{| l |}] ) ⊢ 8'(= a33◂ [ a17◂ [ ]{| l |}] )
; .mov_ptn 2'(= a33◂ [ a17◂ [ ]{| l |}] ) ⊢ 8'(= a33◂ [ a17◂ [ ]{| l |}] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_5175
LB_5174:
	add rsp,0
	jmp LB_5161
LB_5175:
	mov QWORD [rsp+8*1],r14
	mov r13,QWORD [rsp+16+8*1]
	mov r14,QWORD [rsp+8*1]
	jmp LB_5178
LB_5178
; #24 8'(= a33◂ [ a17◂ [ ]{| l |}] ) ⊢ 0(<2)◂8'(= a33◂ [ a17◂ [ ]{| l |}] )
; #24 0(<2)◂8'(= a33◂ [ a17◂ [ ]{| l |}] ) ⊢ 0(<2)◂0(<2)◂8'(= a33◂ [ a17◂ [ ]{| l |}] )
; ∎ 0(<2)◂0(<2)◂8'(= a33◂ [ a17◂ [ ]{| l |}] )
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂0(<2)◂8'(= a33◂ [ a17◂ [ ]{| l |}] ) ⊢ 2'(= a3◂ [ a3◂ [ a33◂ [ a17◂ [ ]{| l |}]]] )
; .mov_ptn 0(<2)◂0(<2)◂8'(= a33◂ [ a17◂ [ ]{| l |}] ) ⊢ 2'(= a3◂ [ a3◂ [ a33◂ [ a17◂ [ ]{| l |}]]] )
	mov rax,QWORD [rsp-8+8*1]
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,8
	jmp LB_5179
LB_5179:
	cmp BYTE [r8+6],0
	jnz LB_5161
	POP_GRM_SCC
	ret
LB_5161:
	RB_GRM
	mov QWORD [rsp+8*0],r14
	mov r13,QWORD [rsp+16+8*0]
	mov r14,QWORD [rsp+8*0]
	jmp LB_5181
LB_5181
; #25 { } ⊢ 1(<2)◂{ }
; #24 1(<2)◂{ } ⊢ 0(<2)◂1(<2)◂{ }
; ∎ 0(<2)◂1(<2)◂{ }
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂1(<2)◂{ } ⊢ 2'(= a3◂ [ a3◂ [ a33◂ [ a17◂ [ ]{| l |}]]] )
; .mov_ptn 0(<2)◂1(<2)◂{ } ⊢ 2'(= a3◂ [ a3◂ [ a33◂ [ a17◂ [ ]{| l |}]]] )
	mov rax,unt 
	mov rax,unt_1
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	jmp LB_5182
LB_5182:
	cmp BYTE [r8+6],0
	jnz LB_5180
	POP_GRM_SCC
	ret
LB_5180:
	POP_GRM_FAIL 
	ret
ETR_275:
	mov r9,0x0000_ffff_ffff_ffff
	and r9,[r13]
	call GRM_275
	ret
GRM_275:
	PUSH_GRM
	jmp LB_5185
LB_5184:
	add r14,1 
LB_5185:
	cmp r14,r9
	jge LB_5186
	JZ_SPC BYTE [r13+8+r14], LB_5184
LB_5186
	call GRM_77
	cmp BYTE [r8+6],0
	jnz LB_5189
	jmp LB_5190
LB_5189:
	jmp LB_5187
LB_5190:
	sub rsp,8
; .mov_ptn2 2'(= {| l |} ) ⊢ 8'(= {| l |} )
; .mov_ptn 2'(= {| l |} ) ⊢ 8'(= {| l |} )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_5188
LB_5187:
	add rsp,0
	jmp LB_5183
LB_5188:
	jmp LB_5192
LB_5191:
	add r14,1 
LB_5192:
	cmp r14,r9
	jge LB_5193
	JZ_SPC BYTE [r13+8+r14], LB_5191
LB_5193
	lea rax,[r14+1]
	cmp rax,r9
	jg LB_5196
	jmp LB_5197
LB_5196:
	mov r8,unt_1
	jmp LB_5194
LB_5197:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],58
	jnz LB_5198
	jmp LB_5199
LB_5198:
	mov r8,unt_1
	jmp LB_5194
LB_5199:
	add r14,1
	jmp LB_5195
LB_5194:
	add rsp,8
	jmp LB_5183
LB_5195:
	mov QWORD [rsp+8*1],r14
	mov r13,QWORD [rsp+16+8*1]
	mov r14,QWORD [rsp+8*1]
	jmp LB_5200
LB_5200
; #24 8'(= {| l |} ) ⊢ 0(<2)◂8'(= {| l |} )
; #24 0(<2)◂8'(= {| l |} ) ⊢ 0(<2)◂0(<2)◂8'(= {| l |} )
; ∎ 0(<2)◂0(<2)◂8'(= {| l |} )
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂0(<2)◂8'(= {| l |} ) ⊢ 2'(= a3◂ [ a3◂ [ {| l |}]] )
; .mov_ptn 0(<2)◂0(<2)◂8'(= {| l |} ) ⊢ 2'(= a3◂ [ a3◂ [ {| l |}]] )
	mov rax,QWORD [rsp-8+8*1]
	mov BYTE [rax+6],0
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,8
	jmp LB_5201
LB_5201:
	cmp BYTE [r8+6],0
	jnz LB_5183
	POP_GRM_SCC
	ret
LB_5183:
	RB_GRM
	mov QWORD [rsp+8*0],r14
	mov r13,QWORD [rsp+16+8*0]
	mov r14,QWORD [rsp+8*0]
	jmp LB_5203
LB_5203
; #25 { } ⊢ 1(<2)◂{ }
; #24 1(<2)◂{ } ⊢ 0(<2)◂1(<2)◂{ }
; ∎ 0(<2)◂1(<2)◂{ }
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂1(<2)◂{ } ⊢ 2'(= a3◂ [ a3◂ [ {| l |}]] )
; .mov_ptn 0(<2)◂1(<2)◂{ } ⊢ 2'(= a3◂ [ a3◂ [ {| l |}]] )
	mov rax,unt 
	mov rax,unt_1
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	jmp LB_5204
LB_5204:
	cmp BYTE [r8+6],0
	jnz LB_5202
	POP_GRM_SCC
	ret
LB_5202:
	POP_GRM_FAIL 
	ret
ETR_276: ;; ini { } ⊢ 0'(= {| a14◂ [ ]|} ) : ({ }→_arr◂_t14)
; #47 { } ⊢ 1(<2)◂{ }
; #0 { %[ 64r ] 1(<2)◂{ } } ⊢ { %[ 64r ] 1(<2)◂{ } 0'(= {| a14◂ [ ]|} ) }
	mov rdi,64
	push rdi 
	lea rsi,[8+8*rdi]
	mov rdi,1 
 C_CALL_SF calloc
	pop rdi 
	mov r13,rax
	mov QWORD [rax],rdi 
LB_5205:
	cmp rdi,0 
	jz LB_5206
	sub rdi,1
	mov r8,rdi
; .mov_ptn2 1(<2)◂{ } ⊢ 1'(= {| a14◂ [ ]|} )
	mov r9,r14
; .mov_ptn 1(<2)◂{ } ⊢ 1'(= {| a14◂ [ ]|} )
	mov rdi,rt_err0 
	call emt_stg
	mov QWORD [err_n],0xffff_0001
	jmp err
	mov r14,rax
	mov rsi,r13
	mov rax,r14
	mov rdi,r8
	mov QWORD [rsi+8+8*rdi],rax 
	jmp LB_5205
LB_5206:
; .dlt.ptn 1(<2)◂{ }
; .dlt.ptn %[ 64r ]
; ∎ 0'(= {| a14◂ [ ]|} )
; .mov_ptn2 0'(= {| a14◂ [ ]|} ) ⊢ 0'(= {| a14◂ [ ]|} )
	ret
ETR_277: ;; set_t { 0'(= {| a14◂ [ ]|} ) 1'(= r ) } ⊢ { 0'(= {| a14◂ [ ]|} ) 1'(= r ) } : ({ _arr◂_t14 _r64 }→{ _arr◂_t14 _r64 })
; #48 { } ⊢ 0(<2)◂{ }
; #1 { 0'(= {| a14◂ [ ]|} ) 1'(= r ) 0(<2)◂{ } } ⊢ { 0'(= {| a14◂ [ ]|} ) 1'(= r ) 3'(= a14◂ [ ] ) }
; .mov_ptn2 0(<2)◂{ } ⊢ 2'(= a14◂ [ ] )
	mov r9,r8
; .mov_ptn 0(<2)◂{ } ⊢ 2'(= a14◂ [ ] )
	mov rax,unt 
	mov rax,unt_0
	mov r8,rax
	mov rax,r14
	mov rdi,r13
	mov rsi,0x0000_ffff_ffff_ffff 
	and rsi,QWORD [rdi]
	cmp rax,rsi 
	jge err
	lea rdi,[rdi+8+8*rax]
	mov rax,QWORD [rdi]
	mov rsi,r8
	mov QWORD [rdi],rsi 
	mov r8,rax
; .mov_ptn2 2'(= a14◂ [ ] ) ⊢ 3'(= a14◂ [ ] )
	mov r10,r9
; .mov_ptn 2'(= a14◂ [ ] ) ⊢ 3'(= a14◂ [ ] )
	mov rax,r8
	mov r9,rax
; .dlt.ptn 3'(= a14◂ [ ] )
	mov rdi,r9
	C_PUSH_REGS
	mov r8,rdi
	call LB_7
	C_POP_REGS
; ∎ { 0'(= {| a14◂ [ ]|} ) 1'(= r ) }
; .mov_ptn2 { 0'(= {| a14◂ [ ]|} ) 1'(= r ) } ⊢ { 0'(= {| a14◂ [ ]|} ) 1'(= r ) }
	ret
ETR_278: ;; set_f { 0'(= {| a14◂ [ ]|} ) 1'(= r ) } ⊢ { 0'(= {| a14◂ [ ]|} ) 1'(= r ) } : ({ _arr◂_t14 _r64 }→{ _arr◂_t14 _r64 })
; #47 { } ⊢ 1(<2)◂{ }
; #1 { 0'(= {| a14◂ [ ]|} ) 1'(= r ) 1(<2)◂{ } } ⊢ { 0'(= {| a14◂ [ ]|} ) 1'(= r ) 3'(= a14◂ [ ] ) }
; .mov_ptn2 1(<2)◂{ } ⊢ 2'(= a14◂ [ ] )
	mov r9,r8
; .mov_ptn 1(<2)◂{ } ⊢ 2'(= a14◂ [ ] )
	mov rax,unt 
	mov rax,unt_1
	mov r8,rax
	mov rax,r14
	mov rdi,r13
	mov rsi,0x0000_ffff_ffff_ffff 
	and rsi,QWORD [rdi]
	cmp rax,rsi 
	jge err
	lea rdi,[rdi+8+8*rax]
	mov rax,QWORD [rdi]
	mov rsi,r8
	mov QWORD [rdi],rsi 
	mov r8,rax
; .mov_ptn2 2'(= a14◂ [ ] ) ⊢ 3'(= a14◂ [ ] )
	mov r10,r9
; .mov_ptn 2'(= a14◂ [ ] ) ⊢ 3'(= a14◂ [ ] )
	mov rax,r8
	mov r9,rax
; .dlt.ptn 3'(= a14◂ [ ] )
	mov rdi,r9
	C_PUSH_REGS
	mov r8,rdi
	call LB_7
	C_POP_REGS
; ∎ { 0'(= {| a14◂ [ ]|} ) 1'(= r ) }
; .mov_ptn2 { 0'(= {| a14◂ [ ]|} ) 1'(= r ) } ⊢ { 0'(= {| a14◂ [ ]|} ) 1'(= r ) }
	ret
LB_5208:
	movzx rax,BYTE [r8+6]
	jmp QWORD [LB_5211+8*rax]
LB_5211: dq LB_5209,LB_5210
LB_5209:
	mov rax,unt
	mov BYTE [rax+6],0
	jmp LB_5212
LB_5210:
	mov rax,unt
	mov BYTE [rax+6],1
	jmp LB_5212
LB_5212:
	ret
ETR_279: ;; and_lp { 0'(= {| a14◂ [ ]|} ) 1'(= {| a14◂ [ ]|} ) 2'(= r ) } ⊢ { 0'(= {| a14◂ [ ]|} ) 1'(= {| a14◂ [ ]|} ) } : ({ _arr◂_t14 _arr◂_t14 _r64 }→{ _arr◂_t14 _arr◂_t14 })
	mov rdi,64
	cmp r8,rdi
	jnz LB_5207
; ∎ { 0'(= {| a14◂ [ ]|} ) 1'(= {| a14◂ [ ]|} ) }
; .dlt.ptn 2'(= r )
	mov rdi,r8
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 { 0'(= {| a14◂ [ ]|} ) 1'(= {| a14◂ [ ]|} ) } ⊢ { 0'(= {| a14◂ [ ]|} ) 1'(= {| a14◂ [ ]|} ) }
	ret
LB_5207:
; #4 { 0'(= {| a14◂ [ ]|} ) 2'(= r ) } ⊢ { 0'(= {| a14◂ [ ]|} ) 2'(= r ) 4'(= a14◂ [ ] ) }
	mov rax,r8
	mov rdi,r13
	mov rsi,0x0000_ffff_ffff_ffff 
	and rsi,QWORD [rdi]
	cmp rax,rsi 
	jge err 
	mov rdi,[rdi+8+8*rax]
	C_PUSH_REGS
	mov r8,rdi
	call LB_5208
	C_POP_REGS
	mov r9,rax
; .mov_ptn2 3'(= a14◂ [ ] ) ⊢ 4'(= a14◂ [ ] )
	mov r11,r10
; .mov_ptn 3'(= a14◂ [ ] ) ⊢ 4'(= a14◂ [ ] )
	mov rax,r9
	mov r10,rax
; #4 { 1'(= {| a14◂ [ ]|} ) 2'(= r ) } ⊢ { 1'(= {| a14◂ [ ]|} ) 2'(= r ) 5'(= a14◂ [ ] ) }
	mov rax,r8
	mov rdi,r14
	mov rsi,0x0000_ffff_ffff_ffff 
	and rsi,QWORD [rdi]
	cmp rax,rsi 
	jge err 
	mov rdi,[rdi+8+8*rax]
	C_PUSH_REGS
	mov r8,rdi
	call LB_5208
	C_POP_REGS
	mov r9,rax
; .mov_ptn2 3'(= a14◂ [ ] ) ⊢ 5'(= a14◂ [ ] )
	mov rcx,r11
; .mov_ptn 3'(= a14◂ [ ] ) ⊢ 5'(= a14◂ [ ] )
	mov rax,r9
	mov r11,rax
; #49 { 4'(= a14◂ [ ] ) 5'(= a14◂ [ ] ) } ⊢ 3'(= a14◂ [ ] )
	sub rsp,24
	mov QWORD [rsp+8*0],r13
	mov QWORD [rsp+8*1],r14
	mov QWORD [rsp+8*2],r8
; .mov_ptn2 { 4'(= a14◂ [ ] ) 5'(= a14◂ [ ] ) } ⊢ { 0'(= a14◂ [ ] ) 1'(= a14◂ [ ] ) }
; .mov_ptn 5'(= a14◂ [ ] ) ⊢ 1'(= a14◂ [ ] )
	mov rax,r11
	mov r14,rax
; .mov_ptn 4'(= a14◂ [ ] ) ⊢ 0'(= a14◂ [ ] )
	mov rax,r10
	mov r13,rax
	call ETR_49
	mov r8,QWORD [rsp-8+8*3]
	mov r14,QWORD [rsp-8+8*2]
	mov r9,r13
	mov r13,QWORD [rsp-8+8*1]
	add rsp,24
; #1 { 0'(= {| a14◂ [ ]|} ) 2'(= r ) 3'(= a14◂ [ ] ) } ⊢ { 0'(= {| a14◂ [ ]|} ) 2'(= r ) 5'(= a14◂ [ ] ) }
; .mov_ptn2 3'(= a14◂ [ ] ) ⊢ 4'(= a14◂ [ ] )
	mov r11,r10
; .mov_ptn 3'(= a14◂ [ ] ) ⊢ 4'(= a14◂ [ ] )
	mov rax,r9
	mov r10,rax
	mov rax,r8
	mov rdi,r13
	mov rsi,0x0000_ffff_ffff_ffff 
	and rsi,QWORD [rdi]
	cmp rax,rsi 
	jge err
	lea rdi,[rdi+8+8*rax]
	mov rax,QWORD [rdi]
	mov rsi,r10
	mov QWORD [rdi],rsi 
	mov r10,rax
; .mov_ptn2 4'(= a14◂ [ ] ) ⊢ 5'(= a14◂ [ ] )
	mov rcx,r11
; .mov_ptn 4'(= a14◂ [ ] ) ⊢ 5'(= a14◂ [ ] )
	mov rax,r10
	mov r11,rax
; .dlt.ptn 5'(= a14◂ [ ] )
	mov rdi,r11
	C_PUSH_REGS
	mov r8,rdi
	call LB_7
	C_POP_REGS
; #11 2'(= r ) ⊢ 2'(= r )
	add r8,1
; #279 { 0'(= {| a14◂ [ ]|} ) 1'(= {| a14◂ [ ]|} ) 2'(= r ) } ⊢|
; .mov_ptn2 { 0'(= {| a14◂ [ ]|} ) 1'(= {| a14◂ [ ]|} ) 2'(= r ) } ⊢ { 0'(= {| a14◂ [ ]|} ) 1'(= {| a14◂ [ ]|} ) 2'(= r ) }
	call ETR_279
; .mov_ptn2 { 0'(= {| a14◂ [ ]|} ) 1'(= {| a14◂ [ ]|} ) } ⊢ { 0'(= {| a14◂ [ ]|} ) 1'(= {| a14◂ [ ]|} ) }
	ret
ETR_280: ;; and { 0'(= {| a14◂ [ ]|} ) 1'(= {| a14◂ [ ]|} ) } ⊢ { 0'(= {| a14◂ [ ]|} ) 1'(= {| a14◂ [ ]|} ) } : ({ _arr◂_t14 _arr◂_t14 }→{ _arr◂_t14 _arr◂_t14 })
; #279 { 0'(= {| a14◂ [ ]|} ) 1'(= {| a14◂ [ ]|} ) %[ 0r ] } ⊢|
; .mov_ptn2 { 0'(= {| a14◂ [ ]|} ) 1'(= {| a14◂ [ ]|} ) %[ 0r ] } ⊢ { 0'(= {| a14◂ [ ]|} ) 1'(= {| a14◂ [ ]|} ) 2'(= r ) }
; .mov_ptn %[ 0r ] ⊢ 2'(= r )
	mov rax,0
	mov r8,rax
	call ETR_279
; .mov_ptn2 { 0'(= {| a14◂ [ ]|} ) 1'(= {| a14◂ [ ]|} ) } ⊢ { 0'(= {| a14◂ [ ]|} ) 1'(= {| a14◂ [ ]|} ) }
	ret
ETR_281: ;; or_lp { 0'(= {| a14◂ [ ]|} ) 1'(= {| a14◂ [ ]|} ) 2'(= r ) } ⊢ { 0'(= {| a14◂ [ ]|} ) 1'(= {| a14◂ [ ]|} ) } : ({ _arr◂_t14 _arr◂_t14 _r64 }→{ _arr◂_t14 _arr◂_t14 })
	mov rdi,64
	cmp r8,rdi
	jnz LB_5213
; ∎ { 0'(= {| a14◂ [ ]|} ) 1'(= {| a14◂ [ ]|} ) }
; .dlt.ptn 2'(= r )
	mov rdi,r8
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 { 0'(= {| a14◂ [ ]|} ) 1'(= {| a14◂ [ ]|} ) } ⊢ { 0'(= {| a14◂ [ ]|} ) 1'(= {| a14◂ [ ]|} ) }
	ret
LB_5213:
; #4 { 0'(= {| a14◂ [ ]|} ) 2'(= r ) } ⊢ { 0'(= {| a14◂ [ ]|} ) 2'(= r ) 4'(= a14◂ [ ] ) }
	mov rax,r8
	mov rdi,r13
	mov rsi,0x0000_ffff_ffff_ffff 
	and rsi,QWORD [rdi]
	cmp rax,rsi 
	jge err 
	mov rdi,[rdi+8+8*rax]
	C_PUSH_REGS
	mov r8,rdi
	call LB_5208
	C_POP_REGS
	mov r9,rax
; .mov_ptn2 3'(= a14◂ [ ] ) ⊢ 4'(= a14◂ [ ] )
	mov r11,r10
; .mov_ptn 3'(= a14◂ [ ] ) ⊢ 4'(= a14◂ [ ] )
	mov rax,r9
	mov r10,rax
; #4 { 1'(= {| a14◂ [ ]|} ) 2'(= r ) } ⊢ { 1'(= {| a14◂ [ ]|} ) 2'(= r ) 5'(= a14◂ [ ] ) }
	mov rax,r8
	mov rdi,r14
	mov rsi,0x0000_ffff_ffff_ffff 
	and rsi,QWORD [rdi]
	cmp rax,rsi 
	jge err 
	mov rdi,[rdi+8+8*rax]
	C_PUSH_REGS
	mov r8,rdi
	call LB_5208
	C_POP_REGS
	mov r9,rax
; .mov_ptn2 3'(= a14◂ [ ] ) ⊢ 5'(= a14◂ [ ] )
	mov rcx,r11
; .mov_ptn 3'(= a14◂ [ ] ) ⊢ 5'(= a14◂ [ ] )
	mov rax,r9
	mov r11,rax
; #50 { 4'(= a14◂ [ ] ) 5'(= a14◂ [ ] ) } ⊢ 3'(= a14◂ [ ] )
	sub rsp,24
	mov QWORD [rsp+8*0],r13
	mov QWORD [rsp+8*1],r14
	mov QWORD [rsp+8*2],r8
; .mov_ptn2 { 4'(= a14◂ [ ] ) 5'(= a14◂ [ ] ) } ⊢ { 0'(= a14◂ [ ] ) 1'(= a14◂ [ ] ) }
; .mov_ptn 5'(= a14◂ [ ] ) ⊢ 1'(= a14◂ [ ] )
	mov rax,r11
	mov r14,rax
; .mov_ptn 4'(= a14◂ [ ] ) ⊢ 0'(= a14◂ [ ] )
	mov rax,r10
	mov r13,rax
	call ETR_50
	mov r8,QWORD [rsp-8+8*3]
	mov r14,QWORD [rsp-8+8*2]
	mov r9,r13
	mov r13,QWORD [rsp-8+8*1]
	add rsp,24
; #1 { 0'(= {| a14◂ [ ]|} ) 2'(= r ) 3'(= a14◂ [ ] ) } ⊢ { 0'(= {| a14◂ [ ]|} ) 2'(= r ) 5'(= a14◂ [ ] ) }
; .mov_ptn2 3'(= a14◂ [ ] ) ⊢ 4'(= a14◂ [ ] )
	mov r11,r10
; .mov_ptn 3'(= a14◂ [ ] ) ⊢ 4'(= a14◂ [ ] )
	mov rax,r9
	mov r10,rax
	mov rax,r8
	mov rdi,r13
	mov rsi,0x0000_ffff_ffff_ffff 
	and rsi,QWORD [rdi]
	cmp rax,rsi 
	jge err
	lea rdi,[rdi+8+8*rax]
	mov rax,QWORD [rdi]
	mov rsi,r10
	mov QWORD [rdi],rsi 
	mov r10,rax
; .mov_ptn2 4'(= a14◂ [ ] ) ⊢ 5'(= a14◂ [ ] )
	mov rcx,r11
; .mov_ptn 4'(= a14◂ [ ] ) ⊢ 5'(= a14◂ [ ] )
	mov rax,r10
	mov r11,rax
; .dlt.ptn 5'(= a14◂ [ ] )
	mov rdi,r11
	C_PUSH_REGS
	mov r8,rdi
	call LB_7
	C_POP_REGS
; #11 2'(= r ) ⊢ 2'(= r )
	add r8,1
; #281 { 0'(= {| a14◂ [ ]|} ) 1'(= {| a14◂ [ ]|} ) 2'(= r ) } ⊢|
; .mov_ptn2 { 0'(= {| a14◂ [ ]|} ) 1'(= {| a14◂ [ ]|} ) 2'(= r ) } ⊢ { 0'(= {| a14◂ [ ]|} ) 1'(= {| a14◂ [ ]|} ) 2'(= r ) }
	call ETR_281
; .mov_ptn2 { 0'(= {| a14◂ [ ]|} ) 1'(= {| a14◂ [ ]|} ) } ⊢ { 0'(= {| a14◂ [ ]|} ) 1'(= {| a14◂ [ ]|} ) }
	ret
ETR_282: ;; or { 0'(= {| a14◂ [ ]|} ) 1'(= {| a14◂ [ ]|} ) } ⊢ { 0'(= {| a14◂ [ ]|} ) 1'(= {| a14◂ [ ]|} ) } : ({ _arr◂_t14 _arr◂_t14 }→{ _arr◂_t14 _arr◂_t14 })
; $ %[ 0r ] ⊢ %[ 0r ]
; #281 { 0'(= {| a14◂ [ ]|} ) 1'(= {| a14◂ [ ]|} ) %[ 0r ] } ⊢|
; .mov_ptn2 { 0'(= {| a14◂ [ ]|} ) 1'(= {| a14◂ [ ]|} ) %[ 0r ] } ⊢ { 0'(= {| a14◂ [ ]|} ) 1'(= {| a14◂ [ ]|} ) 2'(= r ) }
; .mov_ptn %[ 0r ] ⊢ 2'(= r )
	mov rax,0
	mov r8,rax
	call ETR_281
; .mov_ptn2 { 0'(= {| a14◂ [ ]|} ) 1'(= {| a14◂ [ ]|} ) } ⊢ { 0'(= {| a14◂ [ ]|} ) 1'(= {| a14◂ [ ]|} ) }
	ret
ETR_283: ;; sub_lp { 0'(= {| a14◂ [ ]|} ) 1'(= {| a14◂ [ ]|} ) 2'(= r ) } ⊢ { 0'(= {| a14◂ [ ]|} ) 1'(= {| a14◂ [ ]|} ) } : ({ _arr◂_t14 _arr◂_t14 _r64 }→{ _arr◂_t14 _arr◂_t14 })
	mov rdi,64
	cmp r8,rdi
	jnz LB_5214
; ∎ { 0'(= {| a14◂ [ ]|} ) 1'(= {| a14◂ [ ]|} ) }
; .dlt.ptn 2'(= r )
	mov rdi,r8
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 { 0'(= {| a14◂ [ ]|} ) 1'(= {| a14◂ [ ]|} ) } ⊢ { 0'(= {| a14◂ [ ]|} ) 1'(= {| a14◂ [ ]|} ) }
	ret
LB_5214:
; #4 { 0'(= {| a14◂ [ ]|} ) 2'(= r ) } ⊢ { 0'(= {| a14◂ [ ]|} ) 2'(= r ) 4'(= a14◂ [ ] ) }
	mov rax,r8
	mov rdi,r13
	mov rsi,0x0000_ffff_ffff_ffff 
	and rsi,QWORD [rdi]
	cmp rax,rsi 
	jge err 
	mov rdi,[rdi+8+8*rax]
	C_PUSH_REGS
	mov r8,rdi
	call LB_5208
	C_POP_REGS
	mov r9,rax
; .mov_ptn2 3'(= a14◂ [ ] ) ⊢ 4'(= a14◂ [ ] )
	mov r11,r10
; .mov_ptn 3'(= a14◂ [ ] ) ⊢ 4'(= a14◂ [ ] )
	mov rax,r9
	mov r10,rax
; #4 { 1'(= {| a14◂ [ ]|} ) 2'(= r ) } ⊢ { 1'(= {| a14◂ [ ]|} ) 2'(= r ) 5'(= a14◂ [ ] ) }
	mov rax,r8
	mov rdi,r14
	mov rsi,0x0000_ffff_ffff_ffff 
	and rsi,QWORD [rdi]
	cmp rax,rsi 
	jge err 
	mov rdi,[rdi+8+8*rax]
	C_PUSH_REGS
	mov r8,rdi
	call LB_5208
	C_POP_REGS
	mov r9,rax
; .mov_ptn2 3'(= a14◂ [ ] ) ⊢ 5'(= a14◂ [ ] )
	mov rcx,r11
; .mov_ptn 3'(= a14◂ [ ] ) ⊢ 5'(= a14◂ [ ] )
	mov rax,r9
	mov r11,rax
; #51 { 4'(= a14◂ [ ] ) 5'(= a14◂ [ ] ) } ⊢ 3'(= a14◂ [ ] )
	sub rsp,24
	mov QWORD [rsp+8*0],r13
	mov QWORD [rsp+8*1],r14
	mov QWORD [rsp+8*2],r8
; .mov_ptn2 { 4'(= a14◂ [ ] ) 5'(= a14◂ [ ] ) } ⊢ { 0'(= a14◂ [ ] ) 1'(= a14◂ [ ] ) }
; .mov_ptn 5'(= a14◂ [ ] ) ⊢ 1'(= a14◂ [ ] )
	mov rax,r11
	mov r14,rax
; .mov_ptn 4'(= a14◂ [ ] ) ⊢ 0'(= a14◂ [ ] )
	mov rax,r10
	mov r13,rax
	call ETR_51
	mov r8,QWORD [rsp-8+8*3]
	mov r14,QWORD [rsp-8+8*2]
	mov r9,r13
	mov r13,QWORD [rsp-8+8*1]
	add rsp,24
; #1 { 0'(= {| a14◂ [ ]|} ) 2'(= r ) 3'(= a14◂ [ ] ) } ⊢ { 0'(= {| a14◂ [ ]|} ) 2'(= r ) 5'(= a14◂ [ ] ) }
; .mov_ptn2 3'(= a14◂ [ ] ) ⊢ 4'(= a14◂ [ ] )
	mov r11,r10
; .mov_ptn 3'(= a14◂ [ ] ) ⊢ 4'(= a14◂ [ ] )
	mov rax,r9
	mov r10,rax
	mov rax,r8
	mov rdi,r13
	mov rsi,0x0000_ffff_ffff_ffff 
	and rsi,QWORD [rdi]
	cmp rax,rsi 
	jge err
	lea rdi,[rdi+8+8*rax]
	mov rax,QWORD [rdi]
	mov rsi,r10
	mov QWORD [rdi],rsi 
	mov r10,rax
; .mov_ptn2 4'(= a14◂ [ ] ) ⊢ 5'(= a14◂ [ ] )
	mov rcx,r11
; .mov_ptn 4'(= a14◂ [ ] ) ⊢ 5'(= a14◂ [ ] )
	mov rax,r10
	mov r11,rax
; .dlt.ptn 5'(= a14◂ [ ] )
	mov rdi,r11
	C_PUSH_REGS
	mov r8,rdi
	call LB_7
	C_POP_REGS
; #11 2'(= r ) ⊢ 2'(= r )
	add r8,1
; #283 { 0'(= {| a14◂ [ ]|} ) 1'(= {| a14◂ [ ]|} ) 2'(= r ) } ⊢|
; .mov_ptn2 { 0'(= {| a14◂ [ ]|} ) 1'(= {| a14◂ [ ]|} ) 2'(= r ) } ⊢ { 0'(= {| a14◂ [ ]|} ) 1'(= {| a14◂ [ ]|} ) 2'(= r ) }
	call ETR_283
; .mov_ptn2 { 0'(= {| a14◂ [ ]|} ) 1'(= {| a14◂ [ ]|} ) } ⊢ { 0'(= {| a14◂ [ ]|} ) 1'(= {| a14◂ [ ]|} ) }
	ret
ETR_284: ;; sub { 0'(= {| a14◂ [ ]|} ) 1'(= {| a14◂ [ ]|} ) } ⊢ { 0'(= {| a14◂ [ ]|} ) 1'(= {| a14◂ [ ]|} ) } : ({ _arr◂_t14 _arr◂_t14 }→{ _arr◂_t14 _arr◂_t14 })
; $ %[ 0r ] ⊢ %[ 0r ]
; #283 { 0'(= {| a14◂ [ ]|} ) 1'(= {| a14◂ [ ]|} ) %[ 0r ] } ⊢|
; .mov_ptn2 { 0'(= {| a14◂ [ ]|} ) 1'(= {| a14◂ [ ]|} ) %[ 0r ] } ⊢ { 0'(= {| a14◂ [ ]|} ) 1'(= {| a14◂ [ ]|} ) 2'(= r ) }
; .mov_ptn %[ 0r ] ⊢ 2'(= r )
	mov rax,0
	mov r8,rax
	call ETR_283
; .mov_ptn2 { 0'(= {| a14◂ [ ]|} ) 1'(= {| a14◂ [ ]|} ) } ⊢ { 0'(= {| a14◂ [ ]|} ) 1'(= {| a14◂ [ ]|} ) }
	ret
ETR_285: ;; min_f 0'(= {| a14◂ [ ]|} ) ⊢ { 0'(= {| a14◂ [ ]|} ) 1'(= r ) } : (_arr◂_t14→{ _arr◂_t14 _r64 })
; $ %[ 0r ] ⊢ %[ 0r ]
; #286 { 0'(= {| a14◂ [ ]|} ) %[ 0r ] } ⊢|
; .mov_ptn2 { 0'(= {| a14◂ [ ]|} ) %[ 0r ] } ⊢ { 0'(= {| a14◂ [ ]|} ) 1'(= r ) }
; .mov_ptn %[ 0r ] ⊢ 1'(= r )
	mov rax,0
	mov r14,rax
	call ETR_286
; .mov_ptn2 { 0'(= {| a14◂ [ ]|} ) 1'(= r ) } ⊢ { 0'(= {| a14◂ [ ]|} ) 1'(= r ) }
	ret
ETR_286: ;; min_f_lp { 0'(= {| a14◂ [ ]|} ) 1'(= r ) } ⊢ { 0'(= {| a14◂ [ ]|} ) 1'(= r ) } : ({ _arr◂_t14 _r64 }→{ _arr◂_t14 _r64 })
	mov rdi,64
	cmp r14,rdi
	jnz LB_5215
; ∎ { 0'(= {| a14◂ [ ]|} ) 1'(= r ) }
; .mov_ptn2 { 0'(= {| a14◂ [ ]|} ) 1'(= r ) } ⊢ { 0'(= {| a14◂ [ ]|} ) 1'(= r ) }
	ret
LB_5215:
; #4 { 0'(= {| a14◂ [ ]|} ) 1'(= r ) } ⊢ { 0'(= {| a14◂ [ ]|} ) 1'(= r ) 3'(= a14◂ [ ] ) }
	mov rax,r14
	mov rdi,r13
	mov rsi,0x0000_ffff_ffff_ffff 
	and rsi,QWORD [rdi]
	cmp rax,rsi 
	jge err 
	mov rdi,[rdi+8+8*rax]
	C_PUSH_REGS
	mov r8,rdi
	call LB_5208
	C_POP_REGS
	mov r8,rax
; .mov_ptn2 2'(= a14◂ [ ] ) ⊢ 3'(= a14◂ [ ] )
	mov r10,r9
; .mov_ptn 2'(= a14◂ [ ] ) ⊢ 3'(= a14◂ [ ] )
	mov rax,r8
	mov r9,rax
;; ? 3'(= a14◂ [ ] ) ⊢ 1(<2)◂{ }
	mov rdi,r9
	cmp BYTE [rdi+6],1
	jnz LB_5216
; ∎ { 0'(= {| a14◂ [ ]|} ) 1'(= r ) }
; .mov_ptn2 { 0'(= {| a14◂ [ ]|} ) 1'(= r ) } ⊢ { 0'(= {| a14◂ [ ]|} ) 1'(= r ) }
	ret
LB_5216:
;; ?. 3'(= a14◂ [ ] ) ⊢ 0(<2)◂{ }
; #11 1'(= r ) ⊢ 1'(= r )
	add r14,1
; #286 { 0'(= {| a14◂ [ ]|} ) 1'(= r ) } ⊢|
; .mov_ptn2 { 0'(= {| a14◂ [ ]|} ) 1'(= r ) } ⊢ { 0'(= {| a14◂ [ ]|} ) 1'(= r ) }
	call ETR_286
; .mov_ptn2 { 0'(= {| a14◂ [ ]|} ) 1'(= r ) } ⊢ { 0'(= {| a14◂ [ ]|} ) 1'(= r ) }
	ret
ETR_287: ;; min_t 0'(= {| a14◂ [ ]|} ) ⊢ { 0'(= {| a14◂ [ ]|} ) 1'(= r ) } : (_arr◂_t14→{ _arr◂_t14 _r64 })
; $ %[ 0r ] ⊢ %[ 0r ]
; #288 { 0'(= {| a14◂ [ ]|} ) %[ 0r ] } ⊢|
; .mov_ptn2 { 0'(= {| a14◂ [ ]|} ) %[ 0r ] } ⊢ { 0'(= {| a14◂ [ ]|} ) 1'(= r ) }
; .mov_ptn %[ 0r ] ⊢ 1'(= r )
	mov rax,0
	mov r14,rax
	call ETR_288
; .mov_ptn2 { 0'(= {| a14◂ [ ]|} ) 1'(= r ) } ⊢ { 0'(= {| a14◂ [ ]|} ) 1'(= r ) }
	ret
ETR_288: ;; min_t_lp { 0'(= {| a14◂ [ ]|} ) 1'(= r ) } ⊢ { 0'(= {| a14◂ [ ]|} ) 1'(= r ) } : ({ _arr◂_t14 _r64 }→{ _arr◂_t14 _r64 })
	mov rdi,64
	cmp r14,rdi
	jnz LB_5217
; ∎ { 0'(= {| a14◂ [ ]|} ) 1'(= r ) }
; .mov_ptn2 { 0'(= {| a14◂ [ ]|} ) 1'(= r ) } ⊢ { 0'(= {| a14◂ [ ]|} ) 1'(= r ) }
	ret
LB_5217:
; #4 { 0'(= {| a14◂ [ ]|} ) 1'(= r ) } ⊢ { 0'(= {| a14◂ [ ]|} ) 1'(= r ) 3'(= a14◂ [ ] ) }
	mov rax,r14
	mov rdi,r13
	mov rsi,0x0000_ffff_ffff_ffff 
	and rsi,QWORD [rdi]
	cmp rax,rsi 
	jge err 
	mov rdi,[rdi+8+8*rax]
	C_PUSH_REGS
	mov r8,rdi
	call LB_5208
	C_POP_REGS
	mov r8,rax
; .mov_ptn2 2'(= a14◂ [ ] ) ⊢ 3'(= a14◂ [ ] )
	mov r10,r9
; .mov_ptn 2'(= a14◂ [ ] ) ⊢ 3'(= a14◂ [ ] )
	mov rax,r8
	mov r9,rax
;; ? 3'(= a14◂ [ ] ) ⊢ 0(<2)◂{ }
	mov rdi,r9
	cmp BYTE [rdi+6],0
	jnz LB_5218
; ∎ { 0'(= {| a14◂ [ ]|} ) 1'(= r ) }
; .mov_ptn2 { 0'(= {| a14◂ [ ]|} ) 1'(= r ) } ⊢ { 0'(= {| a14◂ [ ]|} ) 1'(= r ) }
	ret
LB_5218:
;; ?. 3'(= a14◂ [ ] ) ⊢ 1(<2)◂{ }
; #11 1'(= r ) ⊢ 1'(= r )
	add r14,1
; #286 { 0'(= {| a14◂ [ ]|} ) 1'(= r ) } ⊢|
; .mov_ptn2 { 0'(= {| a14◂ [ ]|} ) 1'(= r ) } ⊢ { 0'(= {| a14◂ [ ]|} ) 1'(= r ) }
	call ETR_286
; .mov_ptn2 { 0'(= {| a14◂ [ ]|} ) 1'(= r ) } ⊢ { 0'(= {| a14◂ [ ]|} ) 1'(= r ) }
	ret
ETR_289: ;; max_t 0'(= {| a14◂ [ ]|} ) ⊢ { 0'(= {| a14◂ [ ]|} ) 1'(= r ) } : (_arr◂_t14→{ _arr◂_t14 _r64 })
; $ %[ 0r ] ⊢ %[ 0r ]
; $ %[ 0r ] ⊢ %[ 0r ]
; #290 { 0'(= {| a14◂ [ ]|} ) %[ 0r ] %[ 0r ] } ⊢|
; .mov_ptn2 { 0'(= {| a14◂ [ ]|} ) %[ 0r ] %[ 0r ] } ⊢ { 0'(= {| a14◂ [ ]|} ) 1'(= r ) 2'(= r ) }
; .mov_ptn %[ 0r ] ⊢ 2'(= r )
	mov rax,0
	mov r8,rax
; .mov_ptn %[ 0r ] ⊢ 1'(= r )
	mov rax,0
	mov r14,rax
	call ETR_290
; .mov_ptn2 { 0'(= {| a14◂ [ ]|} ) 1'(= r ) } ⊢ { 0'(= {| a14◂ [ ]|} ) 1'(= r ) }
	ret
ETR_290: ;; max_t_lp { 0'(= {| a14◂ [ ]|} ) 1'(= r ) 2'(= r ) } ⊢ { 0'(= {| a14◂ [ ]|} ) 1'(= r ) } : ({ _arr◂_t14 _r64 _r64 }→{ _arr◂_t14 _r64 })
	mov rdi,64
	cmp r14,rdi
	jnz LB_5219
; ∎ { 0'(= {| a14◂ [ ]|} ) 2'(= r ) }
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 { 0'(= {| a14◂ [ ]|} ) 2'(= r ) } ⊢ { 0'(= {| a14◂ [ ]|} ) 1'(= r ) }
; .mov_ptn 2'(= r ) ⊢ 1'(= r )
	mov rax,r8
	mov r14,rax
	ret
LB_5219:
; #4 { 0'(= {| a14◂ [ ]|} ) 1'(= r ) } ⊢ { 0'(= {| a14◂ [ ]|} ) 1'(= r ) 4'(= a14◂ [ ] ) }
	mov rax,r14
	mov rdi,r13
	mov rsi,0x0000_ffff_ffff_ffff 
	and rsi,QWORD [rdi]
	cmp rax,rsi 
	jge err 
	mov rdi,[rdi+8+8*rax]
	C_PUSH_REGS
	mov r8,rdi
	call LB_5208
	C_POP_REGS
	mov r9,rax
; .mov_ptn2 3'(= a14◂ [ ] ) ⊢ 4'(= a14◂ [ ] )
	mov r11,r10
; .mov_ptn 3'(= a14◂ [ ] ) ⊢ 4'(= a14◂ [ ] )
	mov rax,r9
	mov r10,rax
;; ? 4'(= a14◂ [ ] ) ⊢ 1(<2)◂{ }
	mov rdi,r10
	cmp BYTE [rdi+6],1
	jnz LB_5220
; #11 1'(= r ) ⊢ 1'(= r )
	add r14,1
; #290 { 0'(= {| a14◂ [ ]|} ) 1'(= r ) 2'(= r ) } ⊢|
; .mov_ptn2 { 0'(= {| a14◂ [ ]|} ) 1'(= r ) 2'(= r ) } ⊢ { 0'(= {| a14◂ [ ]|} ) 1'(= r ) 2'(= r ) }
	call ETR_290
; .mov_ptn2 { 0'(= {| a14◂ [ ]|} ) 1'(= r ) } ⊢ { 0'(= {| a14◂ [ ]|} ) 1'(= r ) }
	ret
LB_5220:
;; ?. 4'(= a14◂ [ ] ) ⊢ 0(<2)◂{ }
; $ 1'(= r ) ⊢ 1'(= r ),3'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	mov rax,r8
	C_POP_REGS
	mov r9,rax
; #11 1'(= r ) ⊢ 1'(= r )
	add r14,1
; #290 { 0'(= {| a14◂ [ ]|} ) 1'(= r ) 3'(= r ) } ⊢|
	sub rsp,8
	mov QWORD [rsp+8*0],r8
; .mov_ptn2 { 0'(= {| a14◂ [ ]|} ) 1'(= r ) 3'(= r ) } ⊢ { 0'(= {| a14◂ [ ]|} ) 1'(= r ) 2'(= r ) }
; .mov_ptn 3'(= r ) ⊢ 2'(= r )
	mov rax,r9
	mov r8,rax
	call ETR_290
	mov r8,QWORD [rsp-8+8*1]
	add rsp,8
; .mov_ptn2 { 0'(= {| a14◂ [ ]|} ) 1'(= r ) } ⊢ { 0'(= {| a14◂ [ ]|} ) 1'(= r ) }
	ret
ETR_291: ;; is_zero_lp { 0'(= {| a14◂ [ ]|} ) 1'(= r ) } ⊢ { 0'(= {| a14◂ [ ]|} ) 1'(= a14◂ [ ] ) } : ({ _arr◂_t14 _r64 }→{ _arr◂_t14 _t14 })
	mov rdi,64
	cmp r14,rdi
	jnz LB_5221
; #48 { } ⊢ 0(<2)◂{ }
; ∎ { 0'(= {| a14◂ [ ]|} ) 0(<2)◂{ } }
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 { 0'(= {| a14◂ [ ]|} ) 0(<2)◂{ } } ⊢ { 0'(= {| a14◂ [ ]|} ) 1'(= a14◂ [ ] ) }
; .mov_ptn 0(<2)◂{ } ⊢ 1'(= a14◂ [ ] )
	mov rax,unt 
	mov rax,unt_0
	mov r14,rax
	ret
LB_5221:
; #4 { 0'(= {| a14◂ [ ]|} ) 1'(= r ) } ⊢ { 0'(= {| a14◂ [ ]|} ) 1'(= r ) 3'(= a14◂ [ ] ) }
	mov rax,r14
	mov rdi,r13
	mov rsi,0x0000_ffff_ffff_ffff 
	and rsi,QWORD [rdi]
	cmp rax,rsi 
	jge err 
	mov rdi,[rdi+8+8*rax]
	C_PUSH_REGS
	mov r8,rdi
	call LB_5208
	C_POP_REGS
	mov r8,rax
; .mov_ptn2 2'(= a14◂ [ ] ) ⊢ 3'(= a14◂ [ ] )
	mov r10,r9
; .mov_ptn 2'(= a14◂ [ ] ) ⊢ 3'(= a14◂ [ ] )
	mov rax,r8
	mov r9,rax
;; ? 3'(= a14◂ [ ] ) ⊢ 0(<2)◂{ }
	mov rdi,r9
	cmp BYTE [rdi+6],0
	jnz LB_5222
; #47 { } ⊢ 1(<2)◂{ }
; ∎ { 0'(= {| a14◂ [ ]|} ) 1(<2)◂{ } }
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 { 0'(= {| a14◂ [ ]|} ) 1(<2)◂{ } } ⊢ { 0'(= {| a14◂ [ ]|} ) 1'(= a14◂ [ ] ) }
; .mov_ptn 1(<2)◂{ } ⊢ 1'(= a14◂ [ ] )
	mov rax,unt 
	mov rax,unt_1
	mov r14,rax
	ret
LB_5222:
;; ?. 3'(= a14◂ [ ] ) ⊢ 1(<2)◂{ }
; #11 1'(= r ) ⊢ 1'(= r )
	add r14,1
; #291 { 0'(= {| a14◂ [ ]|} ) 1'(= r ) } ⊢|
; .mov_ptn2 { 0'(= {| a14◂ [ ]|} ) 1'(= r ) } ⊢ { 0'(= {| a14◂ [ ]|} ) 1'(= r ) }
	call ETR_291
; .mov_ptn2 { 0'(= {| a14◂ [ ]|} ) 1'(= a14◂ [ ] ) } ⊢ { 0'(= {| a14◂ [ ]|} ) 1'(= a14◂ [ ] ) }
	ret
ETR_292: ;; is_zero 0'(= {| a14◂ [ ]|} ) ⊢ { 0'(= {| a14◂ [ ]|} ) 1'(= a14◂ [ ] ) } : (_arr◂_t14→{ _arr◂_t14 _t14 })
; $ %[ 0r ] ⊢ %[ 0r ]
; #291 { 0'(= {| a14◂ [ ]|} ) %[ 0r ] } ⊢ { 0'(= {| a14◂ [ ]|} ) 1'(= a14◂ [ ] ) }
; .mov_ptn2 { 0'(= {| a14◂ [ ]|} ) %[ 0r ] } ⊢ { 0'(= {| a14◂ [ ]|} ) 1'(= r ) }
; .mov_ptn %[ 0r ] ⊢ 1'(= r )
	mov rax,0
	mov r14,rax
	call ETR_291
; ∎ { 0'(= {| a14◂ [ ]|} ) 1'(= a14◂ [ ] ) }
; .mov_ptn2 { 0'(= {| a14◂ [ ]|} ) 1'(= a14◂ [ ] ) } ⊢ { 0'(= {| a14◂ [ ]|} ) 1'(= a14◂ [ ] ) }
	ret
ETR_293: ;; alc_vs 0'(= {| a14◂ [ ]|} ) ⊢ { 0'(= {| a14◂ [ ]|} ) 1'(= r ) } : (_arr◂_t14→{ _arr◂_t14 _r64 })
; #285 0'(= {| a14◂ [ ]|} ) ⊢ { 0'(= {| a14◂ [ ]|} ) 1'(= r ) }
; .mov_ptn2 0'(= {| a14◂ [ ]|} ) ⊢ 0'(= {| a14◂ [ ]|} )
	call ETR_285
; #48 { } ⊢ 0(<2)◂{ }
; #1 { 0'(= {| a14◂ [ ]|} ) 1'(= r ) 0(<2)◂{ } } ⊢ { 0'(= {| a14◂ [ ]|} ) 1'(= r ) 3'(= a14◂ [ ] ) }
; .mov_ptn2 0(<2)◂{ } ⊢ 2'(= a14◂ [ ] )
	mov r9,r8
; .mov_ptn 0(<2)◂{ } ⊢ 2'(= a14◂ [ ] )
	mov rax,unt 
	mov rax,unt_0
	mov r8,rax
	mov rax,r14
	mov rdi,r13
	mov rsi,0x0000_ffff_ffff_ffff 
	and rsi,QWORD [rdi]
	cmp rax,rsi 
	jge err
	lea rdi,[rdi+8+8*rax]
	mov rax,QWORD [rdi]
	mov rsi,r8
	mov QWORD [rdi],rsi 
	mov r8,rax
; .mov_ptn2 2'(= a14◂ [ ] ) ⊢ 3'(= a14◂ [ ] )
	mov r10,r9
; .mov_ptn 2'(= a14◂ [ ] ) ⊢ 3'(= a14◂ [ ] )
	mov rax,r8
	mov r9,rax
; ∎ { 0'(= {| a14◂ [ ]|} ) 1'(= r ) }
; .dlt.ptn 3'(= a14◂ [ ] )
	mov rdi,r9
	C_PUSH_REGS
	mov r8,rdi
	call LB_7
	C_POP_REGS
; .mov_ptn2 { 0'(= {| a14◂ [ ]|} ) 1'(= r ) } ⊢ { 0'(= {| a14◂ [ ]|} ) 1'(= r ) }
	ret
ETR_318: ;; ptn_of_hp { 0'(= {| a14◂ [ ]|} ) 1'(= a47◂ [ ] ) } ⊢ { 0'(= {| a14◂ [ ]|} ) 1'(= a16◂ [ a45◂ [ r]] ) } : ({ _arr◂_t14 _t47 }→{ _arr◂_t14 _t16◂_t45◂_r64 })
;; ?; 1'(= a47◂ [ ] ) ⊢ 0(<4)◂2'(= a48◂ [ ] )
	mov rdi,r14
	cmp BYTE [rdi+6],0
	jnz LB_5223
	mov QWORD [GBG_VCT+8*0],rdi
	mov r8,QWORD [rdi+8]
;; ?; 2'(= a48◂ [ ] ) ⊢ 4(<5)◂3'(= a2◂ [ a47◂ [ ]] )
	mov rdi,r8
	cmp BYTE [rdi+6],4
	jnz LB_5223
	mov QWORD [GBG_VCT+8*1],rdi
	mov r9,QWORD [rdi+8]
	mov rdi,QWORD [GBG_VCT+8*1]
	FREE_LN rdi
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_LN rdi
; #319 { 0'(= {| a14◂ [ ]|} ) 3'(= a2◂ [ a47◂ [ ]] ) } ⊢ { 0'(= {| a14◂ [ ]|} ) 1'(= a2◂ [ a16◂ [ a45◂ [ r]]] ) }
; .mov_ptn2 { 0'(= {| a14◂ [ ]|} ) 3'(= a2◂ [ a47◂ [ ]] ) } ⊢ { 0'(= {| a14◂ [ ]|} ) 1'(= a2◂ [ a47◂ [ ]] ) }
; .mov_ptn 3'(= a2◂ [ a47◂ [ ]] ) ⊢ 1'(= a2◂ [ a47◂ [ ]] )
	mov rax,r9
	mov r14,rax
	call ETR_319
; #82 1'(= a2◂ [ a16◂ [ a45◂ [ r]]] ) ⊢ 0(<2)◂1'(= a2◂ [ a16◂ [ a45◂ [ r]]] )
; ∎ { 0'(= {| a14◂ [ ]|} ) 0(<2)◂1'(= a2◂ [ a16◂ [ a45◂ [ r]]] ) }
; .mov_ptn2 { 0'(= {| a14◂ [ ]|} ) 0(<2)◂1'(= a2◂ [ a16◂ [ a45◂ [ r]]] ) } ⊢ { 0'(= {| a14◂ [ ]|} ) 1'(= a16◂ [ a45◂ [ r]] ) }
	mov r8,r14
; .mov_ptn 0(<2)◂2'(= a2◂ [ a16◂ [ a45◂ [ r]]] ) ⊢ 1'(= a16◂ [ a45◂ [ r]] )
	mov rax,r8
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r14,rax
	ret
LB_5223:
;; ?; 1'(= a47◂ [ ] ) ⊢ 0(<4)◂2'(= a48◂ [ ] )
	mov rdi,r14
	cmp BYTE [rdi+6],0
	jnz LB_5224
	mov QWORD [GBG_VCT+8*0],rdi
	mov r8,QWORD [rdi+8]
;; ?; 2'(= a48◂ [ ] ) ⊢ 3(<5)◂{ }
	mov rdi,r8
	cmp BYTE [rdi+6],3
	jnz LB_5224
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_LN rdi
; #293 0'(= {| a14◂ [ ]|} ) ⊢ { 0'(= {| a14◂ [ ]|} ) 1'(= r ) }
; .mov_ptn2 0'(= {| a14◂ [ ]|} ) ⊢ 0'(= {| a14◂ [ ]|} )
	call ETR_293
; #293 0'(= {| a14◂ [ ]|} ) ⊢ { 0'(= {| a14◂ [ ]|} ) 2'(= r ) }
	sub rsp,8
	mov QWORD [rsp+8*0],r14
; .mov_ptn2 0'(= {| a14◂ [ ]|} ) ⊢ 0'(= {| a14◂ [ ]|} )
	call ETR_293
	mov r8,r14
	mov r14,QWORD [rsp-8+8*1]
	add rsp,8
; #310 { 1'(= r ) 2'(= r ) } ⊢ 4(<5)◂{ 1'(= r ) 2'(= r ) }
; #81 4(<5)◂{ 1'(= r ) 2'(= r ) } ⊢ 1(<2)◂4(<5)◂{ 1'(= r ) 2'(= r ) }
; ∎ { 0'(= {| a14◂ [ ]|} ) 1(<2)◂4(<5)◂{ 1'(= r ) 2'(= r ) } }
; .mov_ptn2 { 0'(= {| a14◂ [ ]|} ) 1(<2)◂4(<5)◂{ 1'(= r ) 2'(= r ) } } ⊢ { 0'(= {| a14◂ [ ]|} ) 1'(= a16◂ [ a45◂ [ r]] ) }
	mov r9,r14
; .mov_ptn 1(<2)◂4(<5)◂{ 3'(= r ) 2'(= r ) } ⊢ 1'(= a16◂ [ a45◂ [ r]] )
	ALC_RCD 2, rax
	mov r10,rax
	mov rax,r9
	mov QWORD [r10+8+8*0],rax
	mov rax,r8
	mov QWORD [r10+8+8*1],rax
	mov rax,r10
	mov BYTE [rax+6],4
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],1
	mov QWORD [rax+8],rdi
	mov r14,rax
	ret
LB_5224:
; #293 0'(= {| a14◂ [ ]|} ) ⊢ { 0'(= {| a14◂ [ ]|} ) 2'(= r ) }
	sub rsp,8
	mov QWORD [rsp+8*0],r14
; .mov_ptn2 0'(= {| a14◂ [ ]|} ) ⊢ 0'(= {| a14◂ [ ]|} )
	call ETR_293
	mov r8,r14
	mov r14,QWORD [rsp-8+8*1]
	add rsp,8
; #314 { 2'(= r ) 1'(= a47◂ [ ] ) } ⊢ 0(<5)◂{ 2'(= r ) 1'(= a47◂ [ ] ) }
; #81 0(<5)◂{ 2'(= r ) 1'(= a47◂ [ ] ) } ⊢ 1(<2)◂0(<5)◂{ 2'(= r ) 1'(= a47◂ [ ] ) }
; ∎ { 0'(= {| a14◂ [ ]|} ) 1(<2)◂0(<5)◂{ 2'(= r ) 1'(= a47◂ [ ] ) } }
; .mov_ptn2 { 0'(= {| a14◂ [ ]|} ) 1(<2)◂0(<5)◂{ 2'(= r ) 1'(= a47◂ [ ] ) } } ⊢ { 0'(= {| a14◂ [ ]|} ) 1'(= a16◂ [ a45◂ [ r]] ) }
	mov r9,r14
; .mov_ptn 1(<2)◂0(<5)◂{ 2'(= r ) 3'(= a47◂ [ ] ) } ⊢ 1'(= a16◂ [ a45◂ [ r]] )
	ALC_RCD 2, rax
	mov r10,rax
	mov rax,r8
	mov QWORD [r10+8+8*0],rax
	mov rax,r9
	mov QWORD [r10+8+8*1],rax
	mov rax,r10
	mov BYTE [rax+6],0
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],1
	mov QWORD [rax+8],rdi
	mov r14,rax
	ret
ETR_319: ;; ptn_of_hp_lst { 0'(= {| a14◂ [ ]|} ) 1'(= a2◂ [ a47◂ [ ]] ) } ⊢ { 0'(= {| a14◂ [ ]|} ) 1'(= a2◂ [ a16◂ [ a45◂ [ r]]] ) } : ({ _arr◂_t14 _lst◂_t47 }→{ _arr◂_t14 _lst◂_t16◂_t45◂_r64 })
;; ? 1'(= a2◂ [ a47◂ [ ]] ) ⊢ 0(<2)◂{ 2'(= a47◂ [ ] ) 3'(= a2◂ [ a47◂ [ ]] ) }
	mov rdi,r14
	cmp BYTE [rdi+6],0
	jnz LB_5225
	mov r8, QWORD [r14+8]
	mov r9, QWORD [r14+16]
	mov QWORD [GBG_VCT+8*0],r14
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_RCD 2,rdi
; #318 { 0'(= {| a14◂ [ ]|} ) 2'(= a47◂ [ ] ) } ⊢ { 0'(= {| a14◂ [ ]|} ) 1'(= a16◂ [ a45◂ [ r]] ) }
	sub rsp,8
	mov QWORD [rsp+8*0],r9
; .mov_ptn2 { 0'(= {| a14◂ [ ]|} ) 2'(= a47◂ [ ] ) } ⊢ { 0'(= {| a14◂ [ ]|} ) 1'(= a47◂ [ ] ) }
; .mov_ptn 2'(= a47◂ [ ] ) ⊢ 1'(= a47◂ [ ] )
	mov rax,r8
	mov r14,rax
	call ETR_318
	mov r9,QWORD [rsp-8+8*1]
	add rsp,8
; #319 { 0'(= {| a14◂ [ ]|} ) 3'(= a2◂ [ a47◂ [ ]] ) } ⊢ { 0'(= {| a14◂ [ ]|} ) 2'(= a2◂ [ a16◂ [ a45◂ [ r]]] ) }
	sub rsp,8
	mov QWORD [rsp+8*0],r14
; .mov_ptn2 { 0'(= {| a14◂ [ ]|} ) 3'(= a2◂ [ a47◂ [ ]] ) } ⊢ { 0'(= {| a14◂ [ ]|} ) 1'(= a2◂ [ a47◂ [ ]] ) }
; .mov_ptn 3'(= a2◂ [ a47◂ [ ]] ) ⊢ 1'(= a2◂ [ a47◂ [ ]] )
	mov rax,r9
	mov r14,rax
	call ETR_319
	mov r8,r14
	mov r14,QWORD [rsp-8+8*1]
	add rsp,8
; #23 { 1'(= a16◂ [ a45◂ [ r]] ) 2'(= a2◂ [ a16◂ [ a45◂ [ r]]] ) } ⊢ 0(<2)◂{ 1'(= a16◂ [ a45◂ [ r]] ) 2'(= a2◂ [ a16◂ [ a45◂ [ r]]] ) }
; ∎ { 0'(= {| a14◂ [ ]|} ) 0(<2)◂{ 1'(= a16◂ [ a45◂ [ r]] ) 2'(= a2◂ [ a16◂ [ a45◂ [ r]]] ) } }
; .mov_ptn2 { 0'(= {| a14◂ [ ]|} ) 0(<2)◂{ 1'(= a16◂ [ a45◂ [ r]] ) 2'(= a2◂ [ a16◂ [ a45◂ [ r]]] ) } } ⊢ { 0'(= {| a14◂ [ ]|} ) 1'(= a2◂ [ a16◂ [ a45◂ [ r]]] ) }
	mov r9,r14
; .mov_ptn 0(<2)◂{ 3'(= a16◂ [ a45◂ [ r]] ) 2'(= a2◂ [ a16◂ [ a45◂ [ r]]] ) } ⊢ 1'(= a2◂ [ a16◂ [ a45◂ [ r]]] )
	ALC_RCD 2, rax
	mov r10,rax
	mov rax,r9
	mov QWORD [r10+8+8*0],rax
	mov rax,r8
	mov QWORD [r10+8+8*1],rax
	mov rax,r10
	mov BYTE [rax+6],0
	mov r14,rax
	ret
LB_5225:
;; ?. 1'(= a2◂ [ a47◂ [ ]] ) ⊢ 1(<2)◂{ }
; #22 { } ⊢ 1(<2)◂{ }
; ∎ { 0'(= {| a14◂ [ ]|} ) 1(<2)◂{ } }
; .mov_ptn2 { 0'(= {| a14◂ [ ]|} ) 1(<2)◂{ } } ⊢ { 0'(= {| a14◂ [ ]|} ) 1'(= a2◂ [ a16◂ [ a45◂ [ r]]] ) }
; .mov_ptn 1(<2)◂{ } ⊢ 1'(= a2◂ [ a16◂ [ a45◂ [ r]]] )
	mov rax,unt 
	mov rax,unt_1
	mov r14,rax
	ret
ETR_320: ;; eq_hp { 0'(= a47◂ [ ] ) 1'(= a47◂ [ ] ) } ⊢ { 0'(= a47◂ [ ] ) 1'(= a47◂ [ ] ) 2'(= a14◂ [ ] ) } : ({ _t47 _t47 }→{ _t47 _t47 _t14 })
;; ?; 0'(= a47◂ [ ] ) ⊢ 0(<4)◂2'(= a48◂ [ ] )
	mov rdi,r13
	cmp BYTE [rdi+6],0
	jnz LB_5226
	mov QWORD [GBG_VCT+8*0],rdi
	mov r8,QWORD [rdi+8]
;; ?; 1'(= a47◂ [ ] ) ⊢ 0(<4)◂3'(= a48◂ [ ] )
	mov rdi,r14
	cmp BYTE [rdi+6],0
	jnz LB_5226
	mov QWORD [GBG_VCT+8*1],rdi
	mov r9,QWORD [rdi+8]
	mov rdi,QWORD [GBG_VCT+8*1]
	FREE_LN rdi
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_LN rdi
;; ?; 2'(= a48◂ [ ] ) ⊢ 0(<5)◂{ }
	mov rdi,r8
	cmp BYTE [rdi+6],0
	jnz LB_5227
;; ?; 3'(= a48◂ [ ] ) ⊢ 0(<5)◂{ }
	mov rdi,r9
	cmp BYTE [rdi+6],0
	jnz LB_5227
; #303 { } ⊢ 0(<5)◂{ }
; #303 { } ⊢ 0(<5)◂{ }
; #307 0(<5)◂{ } ⊢ 0(<4)◂0(<5)◂{ }
; #307 0(<5)◂{ } ⊢ 0(<4)◂0(<5)◂{ }
; #48 { } ⊢ 0(<2)◂{ }
; ∎ { 0(<4)◂0(<5)◂{ } 0(<4)◂0(<5)◂{ } 0(<2)◂{ } }
; .mov_ptn2 { 0(<4)◂0(<5)◂{ } 0(<4)◂0(<5)◂{ } 0(<2)◂{ } } ⊢ { 0'(= a47◂ [ ] ) 1'(= a47◂ [ ] ) 2'(= a14◂ [ ] ) }
; .mov_ptn 0(<2)◂{ } ⊢ 2'(= a14◂ [ ] )
	mov rax,unt 
	mov rax,unt_0
	mov r8,rax
; .mov_ptn 0(<4)◂0(<5)◂{ } ⊢ 1'(= a47◂ [ ] )
	mov rax,unt 
	mov rax,unt_0
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r14,rax
; .mov_ptn 0(<4)◂0(<5)◂{ } ⊢ 0'(= a47◂ [ ] )
	mov rax,unt 
	mov rax,unt_0
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r13,rax
	ret
LB_5227:
;; ?; 2'(= a48◂ [ ] ) ⊢ 4(<5)◂0'(= a2◂ [ a47◂ [ ]] )
	mov rdi,r8
	cmp BYTE [rdi+6],4
	jnz LB_5228
	mov QWORD [GBG_VCT+8*0],rdi
	mov r13,QWORD [rdi+8]
;; ?; 3'(= a48◂ [ ] ) ⊢ 4(<5)◂1'(= a2◂ [ a47◂ [ ]] )
	mov rdi,r9
	cmp BYTE [rdi+6],4
	jnz LB_5228
	mov QWORD [GBG_VCT+8*1],rdi
	mov r14,QWORD [rdi+8]
	mov rdi,QWORD [GBG_VCT+8*1]
	FREE_LN rdi
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_LN rdi
; #321 { 0'(= a2◂ [ a47◂ [ ]] ) 1'(= a2◂ [ a47◂ [ ]] ) } ⊢ { 0'(= a2◂ [ a47◂ [ ]] ) 1'(= a2◂ [ a47◂ [ ]] ) 2'(= a14◂ [ ] ) }
; .mov_ptn2 { 0'(= a2◂ [ a47◂ [ ]] ) 1'(= a2◂ [ a47◂ [ ]] ) } ⊢ { 0'(= a2◂ [ a47◂ [ ]] ) 1'(= a2◂ [ a47◂ [ ]] ) }
	call ETR_321
; #299 0'(= a2◂ [ a47◂ [ ]] ) ⊢ 4(<5)◂0'(= a2◂ [ a47◂ [ ]] )
; #299 1'(= a2◂ [ a47◂ [ ]] ) ⊢ 4(<5)◂1'(= a2◂ [ a47◂ [ ]] )
; #307 4(<5)◂0'(= a2◂ [ a47◂ [ ]] ) ⊢ 0(<4)◂4(<5)◂0'(= a2◂ [ a47◂ [ ]] )
; #307 4(<5)◂1'(= a2◂ [ a47◂ [ ]] ) ⊢ 0(<4)◂4(<5)◂1'(= a2◂ [ a47◂ [ ]] )
; ∎ { 0(<4)◂4(<5)◂0'(= a2◂ [ a47◂ [ ]] ) 0(<4)◂4(<5)◂1'(= a2◂ [ a47◂ [ ]] ) 2'(= a14◂ [ ] ) }
; .mov_ptn2 { 0(<4)◂4(<5)◂0'(= a2◂ [ a47◂ [ ]] ) 0(<4)◂4(<5)◂1'(= a2◂ [ a47◂ [ ]] ) 2'(= a14◂ [ ] ) } ⊢ { 0'(= a47◂ [ ] ) 1'(= a47◂ [ ] ) 2'(= a14◂ [ ] ) }
	mov r9,r14
; .mov_ptn 0(<4)◂4(<5)◂3'(= a2◂ [ a47◂ [ ]] ) ⊢ 1'(= a47◂ [ ] )
	mov rax,r9
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],4
	mov QWORD [rax+8],rdi
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r14,rax
	mov r10,r13
; .mov_ptn 0(<4)◂4(<5)◂4'(= a2◂ [ a47◂ [ ]] ) ⊢ 0'(= a47◂ [ ] )
	mov rax,r10
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],4
	mov QWORD [rax+8],rdi
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r13,rax
	ret
LB_5228:
;; ?; 2'(= a48◂ [ ] ) ⊢ 1(<5)◂0'(= a47◂ [ ] )
	mov rdi,r8
	cmp BYTE [rdi+6],1
	jnz LB_5229
	mov QWORD [GBG_VCT+8*0],rdi
	mov r13,QWORD [rdi+8]
;; ?; 3'(= a48◂ [ ] ) ⊢ 1(<5)◂1'(= a47◂ [ ] )
	mov rdi,r9
	cmp BYTE [rdi+6],1
	jnz LB_5229
	mov QWORD [GBG_VCT+8*1],rdi
	mov r14,QWORD [rdi+8]
	mov rdi,QWORD [GBG_VCT+8*1]
	FREE_LN rdi
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_LN rdi
; #320 { 0'(= a47◂ [ ] ) 1'(= a47◂ [ ] ) } ⊢ { 0'(= a47◂ [ ] ) 1'(= a47◂ [ ] ) 2'(= a14◂ [ ] ) }
; .mov_ptn2 { 0'(= a47◂ [ ] ) 1'(= a47◂ [ ] ) } ⊢ { 0'(= a47◂ [ ] ) 1'(= a47◂ [ ] ) }
	call ETR_320
; #302 0'(= a47◂ [ ] ) ⊢ 1(<5)◂0'(= a47◂ [ ] )
; #302 1'(= a47◂ [ ] ) ⊢ 1(<5)◂1'(= a47◂ [ ] )
; #307 1(<5)◂0'(= a47◂ [ ] ) ⊢ 0(<4)◂1(<5)◂0'(= a47◂ [ ] )
; #307 1(<5)◂1'(= a47◂ [ ] ) ⊢ 0(<4)◂1(<5)◂1'(= a47◂ [ ] )
; ∎ { 0(<4)◂1(<5)◂0'(= a47◂ [ ] ) 0(<4)◂1(<5)◂1'(= a47◂ [ ] ) 2'(= a14◂ [ ] ) }
; .mov_ptn2 { 0(<4)◂1(<5)◂0'(= a47◂ [ ] ) 0(<4)◂1(<5)◂1'(= a47◂ [ ] ) 2'(= a14◂ [ ] ) } ⊢ { 0'(= a47◂ [ ] ) 1'(= a47◂ [ ] ) 2'(= a14◂ [ ] ) }
	mov r9,r14
; .mov_ptn 0(<4)◂1(<5)◂3'(= a47◂ [ ] ) ⊢ 1'(= a47◂ [ ] )
	mov rax,r9
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],1
	mov QWORD [rax+8],rdi
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r14,rax
	mov r10,r13
; .mov_ptn 0(<4)◂1(<5)◂4'(= a47◂ [ ] ) ⊢ 0'(= a47◂ [ ] )
	mov rax,r10
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],1
	mov QWORD [rax+8],rdi
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r13,rax
	ret
LB_5229:
;; ?; 2'(= a48◂ [ ] ) ⊢ 2(<5)◂0'(= a47◂ [ ] )
	mov rdi,r8
	cmp BYTE [rdi+6],2
	jnz LB_5230
	mov QWORD [GBG_VCT+8*0],rdi
	mov r13,QWORD [rdi+8]
;; ?; 3'(= a48◂ [ ] ) ⊢ 2(<5)◂1'(= a47◂ [ ] )
	mov rdi,r9
	cmp BYTE [rdi+6],2
	jnz LB_5230
	mov QWORD [GBG_VCT+8*1],rdi
	mov r14,QWORD [rdi+8]
	mov rdi,QWORD [GBG_VCT+8*1]
	FREE_LN rdi
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_LN rdi
; #320 { 0'(= a47◂ [ ] ) 1'(= a47◂ [ ] ) } ⊢ { 0'(= a47◂ [ ] ) 1'(= a47◂ [ ] ) 2'(= a14◂ [ ] ) }
; .mov_ptn2 { 0'(= a47◂ [ ] ) 1'(= a47◂ [ ] ) } ⊢ { 0'(= a47◂ [ ] ) 1'(= a47◂ [ ] ) }
	call ETR_320
; #301 0'(= a47◂ [ ] ) ⊢ 2(<5)◂0'(= a47◂ [ ] )
; #301 1'(= a47◂ [ ] ) ⊢ 2(<5)◂1'(= a47◂ [ ] )
; #307 2(<5)◂0'(= a47◂ [ ] ) ⊢ 0(<4)◂2(<5)◂0'(= a47◂ [ ] )
; #307 2(<5)◂1'(= a47◂ [ ] ) ⊢ 0(<4)◂2(<5)◂1'(= a47◂ [ ] )
; ∎ { 0(<4)◂2(<5)◂0'(= a47◂ [ ] ) 0(<4)◂2(<5)◂1'(= a47◂ [ ] ) 2'(= a14◂ [ ] ) }
; .mov_ptn2 { 0(<4)◂2(<5)◂0'(= a47◂ [ ] ) 0(<4)◂2(<5)◂1'(= a47◂ [ ] ) 2'(= a14◂ [ ] ) } ⊢ { 0'(= a47◂ [ ] ) 1'(= a47◂ [ ] ) 2'(= a14◂ [ ] ) }
	mov r9,r14
; .mov_ptn 0(<4)◂2(<5)◂3'(= a47◂ [ ] ) ⊢ 1'(= a47◂ [ ] )
	mov rax,r9
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],2
	mov QWORD [rax+8],rdi
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r14,rax
	mov r10,r13
; .mov_ptn 0(<4)◂2(<5)◂4'(= a47◂ [ ] ) ⊢ 0'(= a47◂ [ ] )
	mov rax,r10
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],2
	mov QWORD [rax+8],rdi
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r13,rax
	ret
LB_5230:
;; ?; 2'(= a48◂ [ ] ) ⊢ 3(<5)◂{ }
	mov rdi,r8
	cmp BYTE [rdi+6],3
	jnz LB_5231
;; ?; 3'(= a48◂ [ ] ) ⊢ 3(<5)◂{ }
	mov rdi,r9
	cmp BYTE [rdi+6],3
	jnz LB_5231
; #300 { } ⊢ 3(<5)◂{ }
; #300 { } ⊢ 3(<5)◂{ }
; #307 3(<5)◂{ } ⊢ 0(<4)◂3(<5)◂{ }
; #307 3(<5)◂{ } ⊢ 0(<4)◂3(<5)◂{ }
; #48 { } ⊢ 0(<2)◂{ }
; ∎ { 0(<4)◂3(<5)◂{ } 0(<4)◂3(<5)◂{ } 0(<2)◂{ } }
; .mov_ptn2 { 0(<4)◂3(<5)◂{ } 0(<4)◂3(<5)◂{ } 0(<2)◂{ } } ⊢ { 0'(= a47◂ [ ] ) 1'(= a47◂ [ ] ) 2'(= a14◂ [ ] ) }
; .mov_ptn 0(<2)◂{ } ⊢ 2'(= a14◂ [ ] )
	mov rax,unt 
	mov rax,unt_0
	mov r8,rax
; .mov_ptn 0(<4)◂3(<5)◂{ } ⊢ 1'(= a47◂ [ ] )
	mov rax,unt 
	mov rax,unt_3
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r14,rax
; .mov_ptn 0(<4)◂3(<5)◂{ } ⊢ 0'(= a47◂ [ ] )
	mov rax,unt 
	mov rax,unt_3
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r13,rax
	ret
LB_5231:
; #47 { } ⊢ 1(<2)◂{ }
; #307 2'(= a48◂ [ ] ) ⊢ 0(<4)◂2'(= a48◂ [ ] )
; #307 3'(= a48◂ [ ] ) ⊢ 0(<4)◂3'(= a48◂ [ ] )
; ∎ { 0(<4)◂2'(= a48◂ [ ] ) 0(<4)◂3'(= a48◂ [ ] ) 1(<2)◂{ } }
; .mov_ptn2 { 0(<4)◂2'(= a48◂ [ ] ) 0(<4)◂3'(= a48◂ [ ] ) 1(<2)◂{ } } ⊢ { 0'(= a47◂ [ ] ) 1'(= a47◂ [ ] ) 2'(= a14◂ [ ] ) }
	mov r10,r8
; .mov_ptn 1(<2)◂{ } ⊢ 2'(= a14◂ [ ] )
	mov rax,unt 
	mov rax,unt_1
	mov r8,rax
; .mov_ptn 0(<4)◂3'(= a48◂ [ ] ) ⊢ 1'(= a47◂ [ ] )
	mov rax,r9
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r14,rax
; .mov_ptn 0(<4)◂4'(= a48◂ [ ] ) ⊢ 0'(= a47◂ [ ] )
	mov rax,r10
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r13,rax
	ret
LB_5226:
;; ?; 0'(= a47◂ [ ] ) ⊢ 1(<4)◂{ }
	mov rdi,r13
	cmp BYTE [rdi+6],1
	jnz LB_5232
;; ?; 1'(= a47◂ [ ] ) ⊢ 1(<4)◂{ }
	mov rdi,r14
	cmp BYTE [rdi+6],1
	jnz LB_5232
; #306 { } ⊢ 1(<4)◂{ }
; #306 { } ⊢ 1(<4)◂{ }
; #48 { } ⊢ 0(<2)◂{ }
; ∎ { 1(<4)◂{ } 1(<4)◂{ } 0(<2)◂{ } }
; .mov_ptn2 { 1(<4)◂{ } 1(<4)◂{ } 0(<2)◂{ } } ⊢ { 0'(= a47◂ [ ] ) 1'(= a47◂ [ ] ) 2'(= a14◂ [ ] ) }
; .mov_ptn 0(<2)◂{ } ⊢ 2'(= a14◂ [ ] )
	mov rax,unt 
	mov rax,unt_0
	mov r8,rax
; .mov_ptn 1(<4)◂{ } ⊢ 1'(= a47◂ [ ] )
	mov rax,unt 
	mov rax,unt_1
	mov r14,rax
; .mov_ptn 1(<4)◂{ } ⊢ 0'(= a47◂ [ ] )
	mov rax,unt 
	mov rax,unt_1
	mov r13,rax
	ret
LB_5232:
;; ?; 0'(= a47◂ [ ] ) ⊢ 2(<4)◂2'(= r )
	mov rdi,r13
	cmp BYTE [rdi+6],2
	jnz LB_5233
	mov QWORD [GBG_VCT+8*0],rdi
	mov r8,QWORD [rdi+8]
;; ?; 1'(= a47◂ [ ] ) ⊢ 2(<4)◂3'(= r )
	mov rdi,r14
	cmp BYTE [rdi+6],2
	jnz LB_5233
	mov QWORD [GBG_VCT+8*1],rdi
	mov r9,QWORD [rdi+8]
	mov rdi,QWORD [GBG_VCT+8*1]
	FREE_LN rdi
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_LN rdi
	mov rdi,r9
	cmp r8,rdi
	jnz LB_5234
; #305 2'(= r ) ⊢ 2(<4)◂2'(= r )
; #305 3'(= r ) ⊢ 2(<4)◂3'(= r )
; #48 { } ⊢ 0(<2)◂{ }
; ∎ { 2(<4)◂2'(= r ) 2(<4)◂3'(= r ) 0(<2)◂{ } }
; .mov_ptn2 { 2(<4)◂2'(= r ) 2(<4)◂3'(= r ) 0(<2)◂{ } } ⊢ { 0'(= a47◂ [ ] ) 1'(= a47◂ [ ] ) 2'(= a14◂ [ ] ) }
	mov r10,r8
; .mov_ptn 0(<2)◂{ } ⊢ 2'(= a14◂ [ ] )
	mov rax,unt 
	mov rax,unt_0
	mov r8,rax
; .mov_ptn 2(<4)◂3'(= r ) ⊢ 1'(= a47◂ [ ] )
	mov rax,r9
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],2
	mov QWORD [rax+8],rdi
	mov r14,rax
; .mov_ptn 2(<4)◂4'(= r ) ⊢ 0'(= a47◂ [ ] )
	mov rax,r10
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],2
	mov QWORD [rax+8],rdi
	mov r13,rax
	ret
LB_5234:
; #305 2'(= r ) ⊢ 2(<4)◂2'(= r )
; #305 3'(= r ) ⊢ 2(<4)◂3'(= r )
; #47 { } ⊢ 1(<2)◂{ }
; ∎ { 2(<4)◂2'(= r ) 2(<4)◂3'(= r ) 1(<2)◂{ } }
; .mov_ptn2 { 2(<4)◂2'(= r ) 2(<4)◂3'(= r ) 1(<2)◂{ } } ⊢ { 0'(= a47◂ [ ] ) 1'(= a47◂ [ ] ) 2'(= a14◂ [ ] ) }
	mov r10,r8
; .mov_ptn 1(<2)◂{ } ⊢ 2'(= a14◂ [ ] )
	mov rax,unt 
	mov rax,unt_1
	mov r8,rax
; .mov_ptn 2(<4)◂3'(= r ) ⊢ 1'(= a47◂ [ ] )
	mov rax,r9
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],2
	mov QWORD [rax+8],rdi
	mov r14,rax
; .mov_ptn 2(<4)◂4'(= r ) ⊢ 0'(= a47◂ [ ] )
	mov rax,r10
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],2
	mov QWORD [rax+8],rdi
	mov r13,rax
	ret
LB_5233:
;; ?; 0'(= a47◂ [ ] ) ⊢ 3(<4)◂{ 2'(= r ) 3'(= a2◂ [ a47◂ [ ]] ) }
	mov rdi,r13
	cmp BYTE [rdi+6],3
	jnz LB_5235
	mov r8, QWORD [r13+8]
	mov r9, QWORD [r13+16]
	mov QWORD [GBG_VCT+8*0],r13
;; ?; 1'(= a47◂ [ ] ) ⊢ 3(<4)◂{ 4'(= r ) 5'(= a2◂ [ a47◂ [ ]] ) }
	mov rdi,r14
	cmp BYTE [rdi+6],3
	jnz LB_5235
	mov r10, QWORD [r14+8]
	mov r11, QWORD [r14+16]
	mov QWORD [GBG_VCT+8*1],r14
	mov rdi,QWORD [GBG_VCT+8*1]
	FREE_RCD 2,rdi
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_RCD 2,rdi
; #321 { 3'(= a2◂ [ a47◂ [ ]] ) 5'(= a2◂ [ a47◂ [ ]] ) } ⊢ { 0'(= a2◂ [ a47◂ [ ]] ) 1'(= a2◂ [ a47◂ [ ]] ) 3'(= a14◂ [ ] ) }
	sub rsp,16
	mov QWORD [rsp+8*0],r8
	mov QWORD [rsp+8*1],r10
; .mov_ptn2 { 3'(= a2◂ [ a47◂ [ ]] ) 5'(= a2◂ [ a47◂ [ ]] ) } ⊢ { 0'(= a2◂ [ a47◂ [ ]] ) 1'(= a2◂ [ a47◂ [ ]] ) }
; .mov_ptn 5'(= a2◂ [ a47◂ [ ]] ) ⊢ 1'(= a2◂ [ a47◂ [ ]] )
	mov rax,r11
	mov r14,rax
; .mov_ptn 3'(= a2◂ [ a47◂ [ ]] ) ⊢ 0'(= a2◂ [ a47◂ [ ]] )
	mov rax,r9
	mov r13,rax
	call ETR_321
	mov r10,QWORD [rsp-8+8*2]
	mov r9,r8
	mov r8,QWORD [rsp-8+8*1]
	add rsp,16
	mov rdi,r10
	cmp r8,rdi
	jnz LB_5236
;; ?; 3'(= a14◂ [ ] ) ⊢ 0(<2)◂{ }
	mov rdi,r9
	cmp BYTE [rdi+6],0
	jnz LB_5236
; #304 { 2'(= r ) 0'(= a2◂ [ a47◂ [ ]] ) } ⊢ 3(<4)◂{ 2'(= r ) 0'(= a2◂ [ a47◂ [ ]] ) }
; #304 { 4'(= r ) 1'(= a2◂ [ a47◂ [ ]] ) } ⊢ 3(<4)◂{ 4'(= r ) 1'(= a2◂ [ a47◂ [ ]] ) }
; #48 { } ⊢ 0(<2)◂{ }
; ∎ { 3(<4)◂{ 2'(= r ) 0'(= a2◂ [ a47◂ [ ]] ) } 3(<4)◂{ 4'(= r ) 1'(= a2◂ [ a47◂ [ ]] ) } 0(<2)◂{ } }
; .mov_ptn2 { 3(<4)◂{ 2'(= r ) 0'(= a2◂ [ a47◂ [ ]] ) } 3(<4)◂{ 4'(= r ) 1'(= a2◂ [ a47◂ [ ]] ) } 0(<2)◂{ } } ⊢ { 0'(= a47◂ [ ] ) 1'(= a47◂ [ ] ) 2'(= a14◂ [ ] ) }
	mov r9,r8
; .mov_ptn 0(<2)◂{ } ⊢ 2'(= a14◂ [ ] )
	mov rax,unt 
	mov rax,unt_0
	mov r8,rax
	mov r11,r14
; .mov_ptn 3(<4)◂{ 4'(= r ) 5'(= a2◂ [ a47◂ [ ]] ) } ⊢ 1'(= a47◂ [ ] )
	ALC_RCD 2, rax
	mov r9,rax
	mov rax,r10
	mov QWORD [r9+8+8*0],rax
	mov rax,r11
	mov QWORD [r9+8+8*1],rax
	mov rax,r9
	mov BYTE [rax+6],3
	mov r14,rax
	mov rcx,r13
; .mov_ptn 3(<4)◂{ 3'(= r ) 6'(= a2◂ [ a47◂ [ ]] ) } ⊢ 0'(= a47◂ [ ] )
	ALC_RCD 2, rax
	mov r10,rax
	mov rax,r9
	mov QWORD [r10+8+8*0],rax
	mov rax,rcx
	mov QWORD [r10+8+8*1],rax
	mov rax,r10
	mov BYTE [rax+6],3
	mov r13,rax
	ret
LB_5236:
; #304 { 2'(= r ) 0'(= a2◂ [ a47◂ [ ]] ) } ⊢ 3(<4)◂{ 2'(= r ) 0'(= a2◂ [ a47◂ [ ]] ) }
; #304 { 4'(= r ) 1'(= a2◂ [ a47◂ [ ]] ) } ⊢ 3(<4)◂{ 4'(= r ) 1'(= a2◂ [ a47◂ [ ]] ) }
; #47 { } ⊢ 1(<2)◂{ }
; ∎ { 3(<4)◂{ 2'(= r ) 0'(= a2◂ [ a47◂ [ ]] ) } 3(<4)◂{ 4'(= r ) 1'(= a2◂ [ a47◂ [ ]] ) } 1(<2)◂{ } }
; .dlt.ptn 3'(= a14◂ [ ] )
	mov rdi,r9
	C_PUSH_REGS
	mov r8,rdi
	call LB_7
	C_POP_REGS
; .mov_ptn2 { 3(<4)◂{ 2'(= r ) 0'(= a2◂ [ a47◂ [ ]] ) } 3(<4)◂{ 4'(= r ) 1'(= a2◂ [ a47◂ [ ]] ) } 1(<2)◂{ } } ⊢ { 0'(= a47◂ [ ] ) 1'(= a47◂ [ ] ) 2'(= a14◂ [ ] ) }
	mov r9,r8
; .mov_ptn 1(<2)◂{ } ⊢ 2'(= a14◂ [ ] )
	mov rax,unt 
	mov rax,unt_1
	mov r8,rax
	mov r11,r14
; .mov_ptn 3(<4)◂{ 4'(= r ) 5'(= a2◂ [ a47◂ [ ]] ) } ⊢ 1'(= a47◂ [ ] )
	ALC_RCD 2, rax
	mov r9,rax
	mov rax,r10
	mov QWORD [r9+8+8*0],rax
	mov rax,r11
	mov QWORD [r9+8+8*1],rax
	mov rax,r9
	mov BYTE [rax+6],3
	mov r14,rax
	mov rcx,r13
; .mov_ptn 3(<4)◂{ 3'(= r ) 6'(= a2◂ [ a47◂ [ ]] ) } ⊢ 0'(= a47◂ [ ] )
	ALC_RCD 2, rax
	mov r10,rax
	mov rax,r9
	mov QWORD [r10+8+8*0],rax
	mov rax,rcx
	mov QWORD [r10+8+8*1],rax
	mov rax,r10
	mov BYTE [rax+6],3
	mov r13,rax
	ret
LB_5235:
; #47 { } ⊢ 1(<2)◂{ }
; ∎ { 0'(= a47◂ [ ] ) 1'(= a47◂ [ ] ) 1(<2)◂{ } }
; .mov_ptn2 { 0'(= a47◂ [ ] ) 1'(= a47◂ [ ] ) 1(<2)◂{ } } ⊢ { 0'(= a47◂ [ ] ) 1'(= a47◂ [ ] ) 2'(= a14◂ [ ] ) }
; .mov_ptn 1(<2)◂{ } ⊢ 2'(= a14◂ [ ] )
	mov rax,unt 
	mov rax,unt_1
	mov r8,rax
	ret
ETR_321: ;; eq_hp_lst { 0'(= a2◂ [ a47◂ [ ]] ) 1'(= a2◂ [ a47◂ [ ]] ) } ⊢ { 0'(= a2◂ [ a47◂ [ ]] ) 1'(= a2◂ [ a47◂ [ ]] ) 2'(= a14◂ [ ] ) } : ({ _lst◂_t47 _lst◂_t47 }→{ _lst◂_t47 _lst◂_t47 _t14 })
;; ?; 0'(= a2◂ [ a47◂ [ ]] ) ⊢ 0(<2)◂{ 2'(= a47◂ [ ] ) 3'(= a2◂ [ a47◂ [ ]] ) }
	mov rdi,r13
	cmp BYTE [rdi+6],0
	jnz LB_5237
	mov r8, QWORD [r13+8]
	mov r9, QWORD [r13+16]
	mov QWORD [GBG_VCT+8*0],r13
;; ?; 1'(= a2◂ [ a47◂ [ ]] ) ⊢ 0(<2)◂{ 4'(= a47◂ [ ] ) 5'(= a2◂ [ a47◂ [ ]] ) }
	mov rdi,r14
	cmp BYTE [rdi+6],0
	jnz LB_5237
	mov r10, QWORD [r14+8]
	mov r11, QWORD [r14+16]
	mov QWORD [GBG_VCT+8*1],r14
	mov rdi,QWORD [GBG_VCT+8*1]
	FREE_RCD 2,rdi
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_RCD 2,rdi
; #320 { 2'(= a47◂ [ ] ) 4'(= a47◂ [ ] ) } ⊢ { 0'(= a47◂ [ ] ) 1'(= a47◂ [ ] ) 2'(= a14◂ [ ] ) }
	sub rsp,16
	mov QWORD [rsp+8*0],r9
	mov QWORD [rsp+8*1],r11
; .mov_ptn2 { 2'(= a47◂ [ ] ) 4'(= a47◂ [ ] ) } ⊢ { 0'(= a47◂ [ ] ) 1'(= a47◂ [ ] ) }
; .mov_ptn 4'(= a47◂ [ ] ) ⊢ 1'(= a47◂ [ ] )
	mov rax,r10
	mov r14,rax
; .mov_ptn 2'(= a47◂ [ ] ) ⊢ 0'(= a47◂ [ ] )
	mov rax,r8
	mov r13,rax
	call ETR_320
	mov r11,QWORD [rsp-8+8*2]
	mov r9,QWORD [rsp-8+8*1]
	add rsp,16
; #321 { 3'(= a2◂ [ a47◂ [ ]] ) 5'(= a2◂ [ a47◂ [ ]] ) } ⊢ { 5'(= a2◂ [ a47◂ [ ]] ) 4'(= a2◂ [ a47◂ [ ]] ) 3'(= a14◂ [ ] ) }
	sub rsp,24
	mov QWORD [rsp+8*0],r13
	mov QWORD [rsp+8*1],r14
	mov QWORD [rsp+8*2],r8
; .mov_ptn2 { 3'(= a2◂ [ a47◂ [ ]] ) 5'(= a2◂ [ a47◂ [ ]] ) } ⊢ { 0'(= a2◂ [ a47◂ [ ]] ) 1'(= a2◂ [ a47◂ [ ]] ) }
; .mov_ptn 5'(= a2◂ [ a47◂ [ ]] ) ⊢ 1'(= a2◂ [ a47◂ [ ]] )
	mov rax,r11
	mov r14,rax
; .mov_ptn 3'(= a2◂ [ a47◂ [ ]] ) ⊢ 0'(= a2◂ [ a47◂ [ ]] )
	mov rax,r9
	mov r13,rax
	call ETR_321
	mov r9,r8
	mov r8,QWORD [rsp-8+8*3]
	mov r10,r14
	mov r14,QWORD [rsp-8+8*2]
	mov r11,r13
	mov r13,QWORD [rsp-8+8*1]
	add rsp,24
; #49 { 2'(= a14◂ [ ] ) 3'(= a14◂ [ ] ) } ⊢ 2'(= a14◂ [ ] )
	sub rsp,32
	mov QWORD [rsp+8*0],r13
	mov QWORD [rsp+8*1],r14
	mov QWORD [rsp+8*2],r10
	mov QWORD [rsp+8*3],r11
; .mov_ptn2 { 2'(= a14◂ [ ] ) 3'(= a14◂ [ ] ) } ⊢ { 0'(= a14◂ [ ] ) 1'(= a14◂ [ ] ) }
; .mov_ptn 3'(= a14◂ [ ] ) ⊢ 1'(= a14◂ [ ] )
	mov rax,r9
	mov r14,rax
; .mov_ptn 2'(= a14◂ [ ] ) ⊢ 0'(= a14◂ [ ] )
	mov rax,r8
	mov r13,rax
	call ETR_49
	mov r11,QWORD [rsp-8+8*4]
	mov r10,QWORD [rsp-8+8*3]
	mov r14,QWORD [rsp-8+8*2]
	mov r8,r13
	mov r13,QWORD [rsp-8+8*1]
	add rsp,32
; #23 { 0'(= a47◂ [ ] ) 5'(= a2◂ [ a47◂ [ ]] ) } ⊢ 0(<2)◂{ 0'(= a47◂ [ ] ) 5'(= a2◂ [ a47◂ [ ]] ) }
; #23 { 1'(= a47◂ [ ] ) 4'(= a2◂ [ a47◂ [ ]] ) } ⊢ 0(<2)◂{ 1'(= a47◂ [ ] ) 4'(= a2◂ [ a47◂ [ ]] ) }
; ∎ { 0(<2)◂{ 0'(= a47◂ [ ] ) 5'(= a2◂ [ a47◂ [ ]] ) } 0(<2)◂{ 1'(= a47◂ [ ] ) 4'(= a2◂ [ a47◂ [ ]] ) } 2'(= a14◂ [ ] ) }
; .mov_ptn2 { 0(<2)◂{ 0'(= a47◂ [ ] ) 5'(= a2◂ [ a47◂ [ ]] ) } 0(<2)◂{ 1'(= a47◂ [ ] ) 4'(= a2◂ [ a47◂ [ ]] ) } 2'(= a14◂ [ ] ) } ⊢ { 0'(= a2◂ [ a47◂ [ ]] ) 1'(= a2◂ [ a47◂ [ ]] ) 2'(= a14◂ [ ] ) }
	mov r9,r14
; .mov_ptn 0(<2)◂{ 3'(= a47◂ [ ] ) 4'(= a2◂ [ a47◂ [ ]] ) } ⊢ 1'(= a2◂ [ a47◂ [ ]] )
	ALC_RCD 2, rax
	mov rcx,rax
	mov rax,r9
	mov QWORD [rcx+8+8*0],rax
	mov rax,r10
	mov QWORD [rcx+8+8*1],rax
	mov rax,rcx
	mov BYTE [rax+6],0
	mov r14,rax
	mov rcx,r13
; .mov_ptn 0(<2)◂{ 6'(= a47◂ [ ] ) 5'(= a2◂ [ a47◂ [ ]] ) } ⊢ 0'(= a2◂ [ a47◂ [ ]] )
	ALC_RCD 2, rax
	mov r9,rax
	mov rax,rcx
	mov QWORD [r9+8+8*0],rax
	mov rax,r11
	mov QWORD [r9+8+8*1],rax
	mov rax,r9
	mov BYTE [rax+6],0
	mov r13,rax
	ret
LB_5237:
;; ?; 0'(= a2◂ [ a47◂ [ ]] ) ⊢ 1(<2)◂{ }
	mov rdi,r13
	cmp BYTE [rdi+6],1
	jnz LB_5238
;; ?; 1'(= a2◂ [ a47◂ [ ]] ) ⊢ 1(<2)◂{ }
	mov rdi,r14
	cmp BYTE [rdi+6],1
	jnz LB_5238
; #48 { } ⊢ 0(<2)◂{ }
; #22 { } ⊢ 1(<2)◂{ }
; #22 { } ⊢ 1(<2)◂{ }
; ∎ { 1(<2)◂{ } 1(<2)◂{ } 0(<2)◂{ } }
; .mov_ptn2 { 1(<2)◂{ } 1(<2)◂{ } 0(<2)◂{ } } ⊢ { 0'(= a2◂ [ a47◂ [ ]] ) 1'(= a2◂ [ a47◂ [ ]] ) 2'(= a14◂ [ ] ) }
; .mov_ptn 0(<2)◂{ } ⊢ 2'(= a14◂ [ ] )
	mov rax,unt 
	mov rax,unt_0
	mov r8,rax
; .mov_ptn 1(<2)◂{ } ⊢ 1'(= a2◂ [ a47◂ [ ]] )
	mov rax,unt 
	mov rax,unt_1
	mov r14,rax
; .mov_ptn 1(<2)◂{ } ⊢ 0'(= a2◂ [ a47◂ [ ]] )
	mov rax,unt 
	mov rax,unt_1
	mov r13,rax
	ret
LB_5238:
; #47 { } ⊢ 1(<2)◂{ }
; ∎ { 0'(= a2◂ [ a47◂ [ ]] ) 1'(= a2◂ [ a47◂ [ ]] ) 1(<2)◂{ } }
; .mov_ptn2 { 0'(= a2◂ [ a47◂ [ ]] ) 1'(= a2◂ [ a47◂ [ ]] ) 1(<2)◂{ } } ⊢ { 0'(= a2◂ [ a47◂ [ ]] ) 1'(= a2◂ [ a47◂ [ ]] ) 2'(= a14◂ [ ] ) }
; .mov_ptn 1(<2)◂{ } ⊢ 2'(= a14◂ [ ] )
	mov rax,unt 
	mov rax,unt_1
	mov r8,rax
	ret
ETR_322: ;; cf 0'(= a47◂ [ ] ) ⊢ { 0'(= a47◂ [ ] ) 1'(= a50◂ [ ] ) } : (_t47→{ _t47 _t50 })
;; ?; 0'(= a47◂ [ ] ) ⊢ 0(<4)◂1'(= a48◂ [ ] )
	mov rdi,r13
	cmp BYTE [rdi+6],0
	jnz LB_5239
	mov QWORD [GBG_VCT+8*0],rdi
	mov r14,QWORD [rdi+8]
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_LN rdi
; #295 { } ⊢ 1(<3)◂{ }
; #307 1'(= a48◂ [ ] ) ⊢ 0(<4)◂1'(= a48◂ [ ] )
; ∎ { 0(<4)◂1'(= a48◂ [ ] ) 1(<3)◂{ } }
; .mov_ptn2 { 0(<4)◂1'(= a48◂ [ ] ) 1(<3)◂{ } } ⊢ { 0'(= a47◂ [ ] ) 1'(= a50◂ [ ] ) }
; .mov_ptn 0(<4)◂1'(= a48◂ [ ] ) ⊢ 0'(= a47◂ [ ] )
	mov rax,r14
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r13,rax
; .mov_ptn 1(<3)◂{ } ⊢ 1'(= a50◂ [ ] )
	mov rax,unt 
	mov rax,unt_1
	mov r14,rax
	ret
LB_5239:
;; ?; 0'(= a47◂ [ ] ) ⊢ 1(<4)◂{ }
	mov rdi,r13
	cmp BYTE [rdi+6],1
	jnz LB_5240
; #296 { } ⊢ 0(<3)◂{ }
; #306 { } ⊢ 1(<4)◂{ }
; ∎ { 1(<4)◂{ } 0(<3)◂{ } }
; .mov_ptn2 { 1(<4)◂{ } 0(<3)◂{ } } ⊢ { 0'(= a47◂ [ ] ) 1'(= a50◂ [ ] ) }
; .mov_ptn 0(<3)◂{ } ⊢ 1'(= a50◂ [ ] )
	mov rax,unt 
	mov rax,unt_0
	mov r14,rax
; .mov_ptn 1(<4)◂{ } ⊢ 0'(= a47◂ [ ] )
	mov rax,unt 
	mov rax,unt_1
	mov r13,rax
	ret
LB_5240:
;; ?; 0'(= a47◂ [ ] ) ⊢ 2(<4)◂1'(= r )
	mov rdi,r13
	cmp BYTE [rdi+6],2
	jnz LB_5241
	mov QWORD [GBG_VCT+8*0],rdi
	mov r14,QWORD [rdi+8]
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_LN rdi
; #294 { } ⊢ 2(<3)◂{ }
; #305 1'(= r ) ⊢ 2(<4)◂1'(= r )
; ∎ { 2(<4)◂1'(= r ) 2(<3)◂{ } }
; .mov_ptn2 { 2(<4)◂1'(= r ) 2(<3)◂{ } } ⊢ { 0'(= a47◂ [ ] ) 1'(= a50◂ [ ] ) }
; .mov_ptn 2(<4)◂1'(= r ) ⊢ 0'(= a47◂ [ ] )
	mov rax,r14
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],2
	mov QWORD [rax+8],rdi
	mov r13,rax
; .mov_ptn 2(<3)◂{ } ⊢ 1'(= a50◂ [ ] )
	mov rax,unt 
	mov rax,unt_2
	mov r14,rax
	ret
LB_5241:
; $ %[ "cf 0" ] ⊢ %[ "cf 0" ]
; #10 %[ "cf 0" ] ⊢ %[ "cf 0" ]
	mov rdi,fmt_emt
	call emt_stg
	mov rdi,LB_5242
	call emt_stg 
	mov rdi,fmt_nl
	call emt_stg
	jmp LB_5243
LB_5243:
	mov rdi,LB_5244
	call emt_stg 
	jmp err
ETR_323: ;; f 0'(= a16◂ [ a45◂ [ r]] ) ⊢ 0'(= {| l |} ) : (_t16◂_t45◂_r64→_s8)
;; ? 0'(= a16◂ [ a45◂ [ r]] ) ⊢ 0(<2)◂1'(= a2◂ [ a16◂ [ a45◂ [ r]]] )
	mov rdi,r13
	cmp BYTE [rdi+6],0
	jnz LB_5245
	mov QWORD [GBG_VCT+8*0],rdi
	mov r14,QWORD [rdi+8]
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_LN rdi
; #326 1'(= a2◂ [ a16◂ [ a45◂ [ r]]] ) ⊢ 0'(= {| l |} )
; .mov_ptn2 1'(= a2◂ [ a16◂ [ a45◂ [ r]]] ) ⊢ 0'(= a2◂ [ a16◂ [ a45◂ [ r]]] )
; .mov_ptn 1'(= a2◂ [ a16◂ [ a45◂ [ r]]] ) ⊢ 0'(= a2◂ [ a16◂ [ a45◂ [ r]]] )
	mov rax,r14
	mov r13,rax
	call ETR_326
; » _^ .. ⊢ ..
; .. //
	mov rdi,0
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[r13]
	add rdi,rax 
	push rax
	add rdi,3
	push rdi 
	call mlc_s8
	pop rdi
	mov r14,rax
	lea rdi,[rax+7+rdi]
	std 
	mov QWORD [tmp],rcx 
	lea rsi,[LB_5246+1-1]
	mov rcx,1
	rep movsb
	pop rcx
	lea rsi,[r13+7+rcx]
	rep movsb
	lea rsi,[LB_5247+2-1]
	mov rcx,2
	rep movsb
	mov rcx,QWORD [tmp] 
; ∎ 1'(= {| l |} )
; .dlt.ptn 0'(= {| l |} )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	mov rdi,r8
	call free_s8
	C_POP_REGS
; .mov_ptn2 1'(= {| l |} ) ⊢ 0'(= {| l |} )
; .mov_ptn 1'(= {| l |} ) ⊢ 0'(= {| l |} )
	mov rax,r14
	mov r13,rax
	ret
LB_5245:
;; ?. 0'(= a16◂ [ a45◂ [ r]] ) ⊢ 1(<2)◂1'(= a45◂ [ r] )
	mov QWORD [GBG_VCT+8*0],rdi
	mov r14,QWORD [rdi+8]
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_LN rdi
;; ? 1'(= a45◂ [ r] ) ⊢ 0(<5)◂{ 0'(= r ) 2'(= a47◂ [ ] ) }
	mov rdi,r14
	cmp BYTE [rdi+6],0
	jnz LB_5248
	mov r13, QWORD [r14+8]
	mov r8, QWORD [r14+16]
	mov QWORD [GBG_VCT+8*0],r14
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_RCD 2,rdi
; #324 2'(= a47◂ [ ] ) ⊢ 1'(= {| l |} )
	sub rsp,8
	mov QWORD [rsp+8*0],r13
; .mov_ptn2 2'(= a47◂ [ ] ) ⊢ 0'(= a47◂ [ ] )
; .mov_ptn 2'(= a47◂ [ ] ) ⊢ 0'(= a47◂ [ ] )
	mov rax,r8
	mov r13,rax
	call ETR_324
	mov r14,r13
	mov r13,QWORD [rsp-8+8*1]
	add rsp,8
; » _^ .. ⊢ ..
; .. //
	mov rdi,0
	sub rsp,128
	push rdi 
	lea rdi,[rsp+8]
	mov rdx,r13
	mov rsi,fmt_d
 xor rax,rax
	C_CALL_SF sprintf
	pop rdi
	add rdi,rax 
	push rax 
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[r14]
	add rdi,rax 
	push rax
	add rdi,6
	push rdi 
	call mlc_s8
	pop rdi
	mov r8,rax
	lea rdi,[rax+7+rdi]
	std 
	mov QWORD [tmp],rcx 
	lea rsi,[LB_5249+2-1]
	mov rcx,2
	rep movsb
	pop rcx
	lea rsi,[r14+7+rcx]
	rep movsb
	lea rsi,[LB_5250+4-1]
	mov rcx,4
	rep movsb
	pop rcx
	lea rsi,[rsp+rcx-1]
	rep movsb
	add rsp,128
	mov rcx,QWORD [tmp] 
; ∎ 2'(= {| l |} )
; .dlt.ptn 1'(= {| l |} )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	mov rdi,r8
	call free_s8
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 2'(= {| l |} ) ⊢ 0'(= {| l |} )
; .mov_ptn 2'(= {| l |} ) ⊢ 0'(= {| l |} )
	mov rax,r8
	mov r13,rax
	ret
LB_5248:
;; ? 1'(= a45◂ [ r] ) ⊢ 1(<5)◂0'(= a18◂ [ ] )
	mov rdi,r14
	cmp BYTE [rdi+6],1
	jnz LB_5251
	mov QWORD [GBG_VCT+8*0],rdi
	mov r13,QWORD [rdi+8]
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_LN rdi
; #90 0'(= a18◂ [ ] ) ⊢ 0'(= {| l |} )
; .mov_ptn2 0'(= a18◂ [ ] ) ⊢ 0'(= a18◂ [ ] )
	call ETR_90
; » _^ .. ⊢ ..
; .. //
	mov rdi,0
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[r13]
	add rdi,rax 
	push rax
	add rdi,5
	push rdi 
	call mlc_s8
	pop rdi
	mov r14,rax
	lea rdi,[rax+7+rdi]
	std 
	mov QWORD [tmp],rcx 
	lea rsi,[LB_5252+2-1]
	mov rcx,2
	rep movsb
	pop rcx
	lea rsi,[r13+7+rcx]
	rep movsb
	lea rsi,[LB_5253+3-1]
	mov rcx,3
	rep movsb
	mov rcx,QWORD [tmp] 
; ∎ 1'(= {| l |} )
; .dlt.ptn 0'(= {| l |} )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	mov rdi,r8
	call free_s8
	C_POP_REGS
; .mov_ptn2 1'(= {| l |} ) ⊢ 0'(= {| l |} )
; .mov_ptn 1'(= {| l |} ) ⊢ 0'(= {| l |} )
	mov rax,r14
	mov r13,rax
	ret
LB_5251:
;; ? 1'(= a45◂ [ r] ) ⊢ 2(<5)◂0'(= r )
	mov rdi,r14
	cmp BYTE [rdi+6],2
	jnz LB_5254
	mov QWORD [GBG_VCT+8*0],rdi
	mov r13,QWORD [rdi+8]
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_LN rdi
; » _^ .. ⊢ ..
; .. //
	mov rdi,0
	sub rsp,128
	push rdi 
	lea rdi,[rsp+8]
	mov rdx,r13
	mov rsi,fmt_d
 xor rax,rax
	C_CALL_SF sprintf
	pop rdi
	add rdi,rax 
	push rax 
	add rdi,7
	push rdi 
	call mlc_s8
	pop rdi
	mov r14,rax
	lea rdi,[rax+7+rdi]
	std 
	mov QWORD [tmp],rcx 
	lea rsi,[LB_5255+4-1]
	mov rcx,4
	rep movsb
	pop rcx
	lea rsi,[rsp+rcx-1]
	rep movsb
	add rsp,128
	lea rsi,[LB_5256+3-1]
	mov rcx,3
	rep movsb
	mov rcx,QWORD [tmp] 
; ∎ 1'(= {| l |} )
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 1'(= {| l |} ) ⊢ 0'(= {| l |} )
; .mov_ptn 1'(= {| l |} ) ⊢ 0'(= {| l |} )
	mov rax,r14
	mov r13,rax
	ret
LB_5254:
;; ? 1'(= a45◂ [ r] ) ⊢ 4(<5)◂{ 0'(= r ) 2'(= r ) }
	mov rdi,r14
	cmp BYTE [rdi+6],4
	jnz LB_5257
	mov r13, QWORD [r14+8]
	mov r8, QWORD [r14+16]
	mov QWORD [GBG_VCT+8*0],r14
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_RCD 2,rdi
; » _^ .. ⊢ ..
; .. //
	mov rdi,0
	sub rsp,128
	push rdi 
	lea rdi,[rsp+8]
	mov rdx,r13
	mov rsi,fmt_d
 xor rax,rax
	C_CALL_SF sprintf
	pop rdi
	add rdi,rax 
	push rax 
	sub rsp,128
	push rdi 
	lea rdi,[rsp+8]
	mov rdx,r8
	mov rsi,fmt_d
 xor rax,rax
	C_CALL_SF sprintf
	pop rdi
	add rdi,rax 
	push rax 
	add rdi,11
	push rdi 
	call mlc_s8
	pop rdi
	mov r14,rax
	lea rdi,[rax+7+rdi]
	std 
	mov QWORD [tmp],rcx 
	lea rsi,[LB_5258+4-1]
	mov rcx,4
	rep movsb
	pop rcx
	lea rsi,[rsp+rcx-1]
	rep movsb
	add rsp,128
	lea rsi,[LB_5259+4-1]
	mov rcx,4
	rep movsb
	pop rcx
	lea rsi,[rsp+rcx-1]
	rep movsb
	add rsp,128
	lea rsi,[LB_5260+3-1]
	mov rcx,3
	rep movsb
	mov rcx,QWORD [tmp] 
; ∎ 1'(= {| l |} )
; .dlt.ptn 2'(= r )
	mov rdi,r8
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 1'(= {| l |} ) ⊢ 0'(= {| l |} )
; .mov_ptn 1'(= {| l |} ) ⊢ 0'(= {| l |} )
	mov rax,r14
	mov r13,rax
	ret
LB_5257:
;; ?. 1'(= a45◂ [ r] ) ⊢ 3(<5)◂{ 0'(= r ) 2'(= r ) 3'(= a16◂ [ a45◂ [ r]] ) }
	mov r13, QWORD [r14+8]
	mov r8, QWORD [r14+16]
	mov r9, QWORD [r14+24]
	mov QWORD [GBG_VCT+8*0],r14
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_RCD 3,rdi
; #323 3'(= a16◂ [ a45◂ [ r]] ) ⊢ 1'(= {| l |} )
	sub rsp,16
	mov QWORD [rsp+8*0],r13
	mov QWORD [rsp+8*1],r8
; .mov_ptn2 3'(= a16◂ [ a45◂ [ r]] ) ⊢ 0'(= a16◂ [ a45◂ [ r]] )
; .mov_ptn 3'(= a16◂ [ a45◂ [ r]] ) ⊢ 0'(= a16◂ [ a45◂ [ r]] )
	mov rax,r9
	mov r13,rax
	call ETR_323
	mov r8,QWORD [rsp-8+8*2]
	mov r14,r13
	mov r13,QWORD [rsp-8+8*1]
	add rsp,16
; » _^ .. ⊢ ..
; .. //
	mov rdi,0
	sub rsp,128
	push rdi 
	lea rdi,[rsp+8]
	mov rdx,r13
	mov rsi,fmt_d
 xor rax,rax
	C_CALL_SF sprintf
	pop rdi
	add rdi,rax 
	push rax 
	sub rsp,128
	push rdi 
	lea rdi,[rsp+8]
	mov rdx,r8
	mov rsi,fmt_d
 xor rax,rax
	C_CALL_SF sprintf
	pop rdi
	add rdi,rax 
	push rax 
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[r14]
	add rdi,rax 
	push rax
	add rdi,6
	push rdi 
	call mlc_s8
	pop rdi
	mov r9,rax
	lea rdi,[rax+7+rdi]
	std 
	mov QWORD [tmp],rcx 
	pop rcx
	lea rsi,[r14+7+rcx]
	rep movsb
	lea rsi,[LB_5261+4-1]
	mov rcx,4
	rep movsb
	pop rcx
	lea rsi,[rsp+rcx-1]
	rep movsb
	add rsp,128
	lea rsi,[LB_5262+2-1]
	mov rcx,2
	rep movsb
	pop rcx
	lea rsi,[rsp+rcx-1]
	rep movsb
	add rsp,128
	mov rcx,QWORD [tmp] 
; ∎ 3'(= {| l |} )
; .dlt.ptn 1'(= {| l |} )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	mov rdi,r8
	call free_s8
	C_POP_REGS
; .dlt.ptn 2'(= r )
	mov rdi,r8
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 3'(= {| l |} ) ⊢ 0'(= {| l |} )
; .mov_ptn 3'(= {| l |} ) ⊢ 0'(= {| l |} )
	mov rax,r9
	mov r13,rax
	ret
ETR_324: ;; hp 0'(= a47◂ [ ] ) ⊢ 0'(= {| l |} ) : (_t47→_s8)
;; ? 0'(= a47◂ [ ] ) ⊢ 3(<4)◂{ 1'(= r ) 2'(= a2◂ [ a47◂ [ ]] ) }
	mov rdi,r13
	cmp BYTE [rdi+6],3
	jnz LB_5263
	mov r14, QWORD [r13+8]
	mov r8, QWORD [r13+16]
	mov QWORD [GBG_VCT+8*0],r13
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_RCD 2,rdi
; #325 2'(= a2◂ [ a47◂ [ ]] ) ⊢ 0'(= {| l |} )
	sub rsp,8
	mov QWORD [rsp+8*0],r14
; .mov_ptn2 2'(= a2◂ [ a47◂ [ ]] ) ⊢ 0'(= a2◂ [ a47◂ [ ]] )
; .mov_ptn 2'(= a2◂ [ a47◂ [ ]] ) ⊢ 0'(= a2◂ [ a47◂ [ ]] )
	mov rax,r8
	mov r13,rax
	call ETR_325
	mov r14,QWORD [rsp-8+8*1]
	add rsp,8
; » _^ .. ⊢ ..
; .. //
	mov rdi,0
	sub rsp,128
	push rdi 
	lea rdi,[rsp+8]
	mov rdx,r14
	mov rsi,fmt_d
 xor rax,rax
	C_CALL_SF sprintf
	pop rdi
	add rdi,rax 
	push rax 
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[r13]
	add rdi,rax 
	push rax
	add rdi,8
	push rdi 
	call mlc_s8
	pop rdi
	mov r8,rax
	lea rdi,[rax+7+rdi]
	std 
	mov QWORD [tmp],rcx 
	lea rsi,[LB_5264+1-1]
	mov rcx,1
	rep movsb
	pop rcx
	lea rsi,[r13+7+rcx]
	rep movsb
	lea rsi,[LB_5265+6-1]
	mov rcx,6
	rep movsb
	pop rcx
	lea rsi,[rsp+rcx-1]
	rep movsb
	add rsp,128
	lea rsi,[LB_5266+1-1]
	mov rcx,1
	rep movsb
	mov rcx,QWORD [tmp] 
; ∎ 2'(= {| l |} )
; .dlt.ptn 0'(= {| l |} )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	mov rdi,r8
	call free_s8
	C_POP_REGS
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 2'(= {| l |} ) ⊢ 0'(= {| l |} )
; .mov_ptn 2'(= {| l |} ) ⊢ 0'(= {| l |} )
	mov rax,r8
	mov r13,rax
	ret
LB_5263:
;; ? 0'(= a47◂ [ ] ) ⊢ 1(<4)◂{ }
	mov rdi,r13
	cmp BYTE [rdi+6],1
	jnz LB_5267
; » _^ .. ⊢ ..
; .. //
	mov rdi,0
	add rdi,1
	push rdi 
	call mlc_s8
	pop rdi
	mov r13,rax
	lea rdi,[rax+7+rdi]
	std 
	mov QWORD [tmp],rcx 
	lea rsi,[LB_5268+1-1]
	mov rcx,1
	rep movsb
	mov rcx,QWORD [tmp] 
; ∎ 0'(= {| l |} )
; .mov_ptn2 0'(= {| l |} ) ⊢ 0'(= {| l |} )
	ret
LB_5267:
;; ? 0'(= a47◂ [ ] ) ⊢ 0(<4)◂1'(= a48◂ [ ] )
	mov rdi,r13
	cmp BYTE [rdi+6],0
	jnz LB_5269
	mov QWORD [GBG_VCT+8*0],rdi
	mov r14,QWORD [rdi+8]
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_LN rdi
;; ? 1'(= a48◂ [ ] ) ⊢ 4(<5)◂0'(= a2◂ [ a47◂ [ ]] )
	mov rdi,r14
	cmp BYTE [rdi+6],4
	jnz LB_5270
	mov QWORD [GBG_VCT+8*0],rdi
	mov r13,QWORD [rdi+8]
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_LN rdi
; #325 0'(= a2◂ [ a47◂ [ ]] ) ⊢ 0'(= {| l |} )
; .mov_ptn2 0'(= a2◂ [ a47◂ [ ]] ) ⊢ 0'(= a2◂ [ a47◂ [ ]] )
	call ETR_325
; » _^ .. ⊢ ..
; .. //
	mov rdi,0
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[r13]
	add rdi,rax 
	push rax
	add rdi,4
	push rdi 
	call mlc_s8
	pop rdi
	mov r14,rax
	lea rdi,[rax+7+rdi]
	std 
	mov QWORD [tmp],rcx 
	lea rsi,[LB_5271+1-1]
	mov rcx,1
	rep movsb
	pop rcx
	lea rsi,[r13+7+rcx]
	rep movsb
	lea rsi,[LB_5272+3-1]
	mov rcx,3
	rep movsb
	mov rcx,QWORD [tmp] 
; ∎ 1'(= {| l |} )
; .dlt.ptn 0'(= {| l |} )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	mov rdi,r8
	call free_s8
	C_POP_REGS
; .mov_ptn2 1'(= {| l |} ) ⊢ 0'(= {| l |} )
; .mov_ptn 1'(= {| l |} ) ⊢ 0'(= {| l |} )
	mov rax,r14
	mov r13,rax
	ret
LB_5270:
;; ? 1'(= a48◂ [ ] ) ⊢ 1(<5)◂0'(= a47◂ [ ] )
	mov rdi,r14
	cmp BYTE [rdi+6],1
	jnz LB_5273
	mov QWORD [GBG_VCT+8*0],rdi
	mov r13,QWORD [rdi+8]
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_LN rdi
; #324 0'(= a47◂ [ ] ) ⊢ 0'(= {| l |} )
; .mov_ptn2 0'(= a47◂ [ ] ) ⊢ 0'(= a47◂ [ ] )
	call ETR_324
; » _^ .. ⊢ ..
; .. //
	mov rdi,0
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[r13]
	add rdi,rax 
	push rax
	add rdi,5
	push rdi 
	call mlc_s8
	pop rdi
	mov r14,rax
	lea rdi,[rax+7+rdi]
	std 
	mov QWORD [tmp],rcx 
	lea rsi,[LB_5274+2-1]
	mov rcx,2
	rep movsb
	pop rcx
	lea rsi,[r13+7+rcx]
	rep movsb
	lea rsi,[LB_5275+3-1]
	mov rcx,3
	rep movsb
	mov rcx,QWORD [tmp] 
; ∎ 1'(= {| l |} )
; .dlt.ptn 0'(= {| l |} )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	mov rdi,r8
	call free_s8
	C_POP_REGS
; .mov_ptn2 1'(= {| l |} ) ⊢ 0'(= {| l |} )
; .mov_ptn 1'(= {| l |} ) ⊢ 0'(= {| l |} )
	mov rax,r14
	mov r13,rax
	ret
LB_5273:
;; ? 1'(= a48◂ [ ] ) ⊢ 2(<5)◂0'(= a47◂ [ ] )
	mov rdi,r14
	cmp BYTE [rdi+6],2
	jnz LB_5276
	mov QWORD [GBG_VCT+8*0],rdi
	mov r13,QWORD [rdi+8]
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_LN rdi
; #324 0'(= a47◂ [ ] ) ⊢ 0'(= {| l |} )
; .mov_ptn2 0'(= a47◂ [ ] ) ⊢ 0'(= a47◂ [ ] )
	call ETR_324
; » _^ .. ⊢ ..
; .. //
	mov rdi,0
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[r13]
	add rdi,rax 
	push rax
	add rdi,5
	push rdi 
	call mlc_s8
	pop rdi
	mov r14,rax
	lea rdi,[rax+7+rdi]
	std 
	mov QWORD [tmp],rcx 
	lea rsi,[LB_5277+2-1]
	mov rcx,2
	rep movsb
	pop rcx
	lea rsi,[r13+7+rcx]
	rep movsb
	lea rsi,[LB_5278+3-1]
	mov rcx,3
	rep movsb
	mov rcx,QWORD [tmp] 
; ∎ 1'(= {| l |} )
; .dlt.ptn 0'(= {| l |} )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	mov rdi,r8
	call free_s8
	C_POP_REGS
; .mov_ptn2 1'(= {| l |} ) ⊢ 0'(= {| l |} )
; .mov_ptn 1'(= {| l |} ) ⊢ 0'(= {| l |} )
	mov rax,r14
	mov r13,rax
	ret
LB_5276:
;; ? 1'(= a48◂ [ ] ) ⊢ 3(<5)◂{ }
	mov rdi,r14
	cmp BYTE [rdi+6],3
	jnz LB_5279
; $ %[ "*[< _ >]" ] ⊢ %[ "*[< _ >]" ]
; ∎ %[ "*[< _ >]" ]
; .mov_ptn2 %[ "*[< _ >]" ] ⊢ 0'(= {| l |} )
; .mov_ptn %[ "*[< _ >]" ] ⊢ 0'(= {| l |} )
	mov rsi,1  
	mov rdi,24
	xor rax,rax 
	C_CALL_SF calloc
	mov QWORD [rax],8
	mov BYTE [rax+8+0],42
	mov BYTE [rax+8+1],91
	mov BYTE [rax+8+2],60
	mov BYTE [rax+8+3],32
	mov BYTE [rax+8+4],95
	mov BYTE [rax+8+5],32
	mov BYTE [rax+8+6],62
	mov BYTE [rax+8+7],93
	mov r13,rax
	ret
LB_5279:
;; ?. 1'(= a48◂ [ ] ) ⊢ 0(<5)◂{ }
; $ %[ "{| l |}" ] ⊢ %[ "{| l |}" ]
; ∎ %[ "{| l |}" ]
; .mov_ptn2 %[ "{| l |}" ] ⊢ 0'(= {| l |} )
; .mov_ptn %[ "{| l |}" ] ⊢ 0'(= {| l |} )
	mov rsi,1  
	mov rdi,16
	xor rax,rax 
	C_CALL_SF calloc
	mov QWORD [rax],7
	mov BYTE [rax+8+0],123
	mov BYTE [rax+8+1],124
	mov BYTE [rax+8+2],32
	mov BYTE [rax+8+3],108
	mov BYTE [rax+8+4],32
	mov BYTE [rax+8+5],124
	mov BYTE [rax+8+6],125
	mov r13,rax
	ret
LB_5269:
;; ?. 0'(= a47◂ [ ] ) ⊢ 2(<4)◂1'(= r )
	mov QWORD [GBG_VCT+8*0],rdi
	mov r14,QWORD [rdi+8]
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_LN rdi
; » _^ .. ⊢ ..
; .. //
	mov rdi,0
	sub rsp,128
	push rdi 
	lea rdi,[rsp+8]
	mov rdx,r14
	mov rsi,fmt_d
 xor rax,rax
	C_CALL_SF sprintf
	pop rdi
	add rdi,rax 
	push rax 
	add rdi,1
	push rdi 
	call mlc_s8
	pop rdi
	mov r13,rax
	lea rdi,[rax+7+rdi]
	std 
	mov QWORD [tmp],rcx 
	pop rcx
	lea rsi,[rsp+rcx-1]
	rep movsb
	add rsp,128
	lea rsi,[LB_5280+1-1]
	mov rcx,1
	rep movsb
	mov rcx,QWORD [tmp] 
; ∎ 0'(= {| l |} )
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0'(= {| l |} ) ⊢ 0'(= {| l |} )
	ret
ETR_325: ;; hp_lst 0'(= a2◂ [ a47◂ [ ]] ) ⊢ 0'(= {| l |} ) : (_lst◂_t47→_s8)
;; ? 0'(= a2◂ [ a47◂ [ ]] ) ⊢ 0(<2)◂{ 1'(= a47◂ [ ] ) 2'(= a2◂ [ a47◂ [ ]] ) }
	mov rdi,r13
	cmp BYTE [rdi+6],0
	jnz LB_5281
	mov r14, QWORD [r13+8]
	mov r8, QWORD [r13+16]
	mov QWORD [GBG_VCT+8*0],r13
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_RCD 2,rdi
; #324 1'(= a47◂ [ ] ) ⊢ 0'(= {| l |} )
	sub rsp,8
	mov QWORD [rsp+8*0],r8
; .mov_ptn2 1'(= a47◂ [ ] ) ⊢ 0'(= a47◂ [ ] )
; .mov_ptn 1'(= a47◂ [ ] ) ⊢ 0'(= a47◂ [ ] )
	mov rax,r14
	mov r13,rax
	call ETR_324
	mov r8,QWORD [rsp-8+8*1]
	add rsp,8
; #325 2'(= a2◂ [ a47◂ [ ]] ) ⊢ 1'(= {| l |} )
	sub rsp,8
	mov QWORD [rsp+8*0],r13
; .mov_ptn2 2'(= a2◂ [ a47◂ [ ]] ) ⊢ 0'(= a2◂ [ a47◂ [ ]] )
; .mov_ptn 2'(= a2◂ [ a47◂ [ ]] ) ⊢ 0'(= a2◂ [ a47◂ [ ]] )
	mov rax,r8
	mov r13,rax
	call ETR_325
	mov r14,r13
	mov r13,QWORD [rsp-8+8*1]
	add rsp,8
; » _^ .. ⊢ ..
; .. //
	mov rdi,0
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[r13]
	add rdi,rax 
	push rax
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[r14]
	add rdi,rax 
	push rax
	add rdi,0
	push rdi 
	call mlc_s8
	pop rdi
	mov r8,rax
	lea rdi,[rax+7+rdi]
	std 
	mov QWORD [tmp],rcx 
	pop rcx
	lea rsi,[r14+7+rcx]
	rep movsb
	pop rcx
	lea rsi,[r13+7+rcx]
	rep movsb
	mov rcx,QWORD [tmp] 
; ∎ 2'(= {| l |} )
; .dlt.ptn 1'(= {| l |} )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	mov rdi,r8
	call free_s8
	C_POP_REGS
; .dlt.ptn 0'(= {| l |} )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	mov rdi,r8
	call free_s8
	C_POP_REGS
; .mov_ptn2 2'(= {| l |} ) ⊢ 0'(= {| l |} )
; .mov_ptn 2'(= {| l |} ) ⊢ 0'(= {| l |} )
	mov rax,r8
	mov r13,rax
	ret
LB_5281:
;; ?. 0'(= a2◂ [ a47◂ [ ]] ) ⊢ 1(<2)◂{ }
; $ %[ "" ] ⊢ %[ "" ]
; ∎ %[ "" ]
; .mov_ptn2 %[ "" ] ⊢ 0'(= {| l |} )
; .mov_ptn %[ "" ] ⊢ 0'(= {| l |} )
	mov rsi,1  
	mov rdi,16
	xor rax,rax 
	C_CALL_SF calloc
	mov QWORD [rax],0
	mov r13,rax
	ret
ETR_326: ;; lst 0'(= a2◂ [ a16◂ [ a45◂ [ r]]] ) ⊢ 0'(= {| l |} ) : (_lst◂_t16◂_t45◂_r64→_s8)
;; ? 0'(= a2◂ [ a16◂ [ a45◂ [ r]]] ) ⊢ 0(<2)◂{ 1'(= a16◂ [ a45◂ [ r]] ) 2'(= a2◂ [ a16◂ [ a45◂ [ r]]] ) }
	mov rdi,r13
	cmp BYTE [rdi+6],0
	jnz LB_5282
	mov r14, QWORD [r13+8]
	mov r8, QWORD [r13+16]
	mov QWORD [GBG_VCT+8*0],r13
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_RCD 2,rdi
; #323 1'(= a16◂ [ a45◂ [ r]] ) ⊢ 0'(= {| l |} )
	sub rsp,8
	mov QWORD [rsp+8*0],r8
; .mov_ptn2 1'(= a16◂ [ a45◂ [ r]] ) ⊢ 0'(= a16◂ [ a45◂ [ r]] )
; .mov_ptn 1'(= a16◂ [ a45◂ [ r]] ) ⊢ 0'(= a16◂ [ a45◂ [ r]] )
	mov rax,r14
	mov r13,rax
	call ETR_323
	mov r8,QWORD [rsp-8+8*1]
	add rsp,8
; #326 2'(= a2◂ [ a16◂ [ a45◂ [ r]]] ) ⊢ 1'(= {| l |} )
	sub rsp,8
	mov QWORD [rsp+8*0],r13
; .mov_ptn2 2'(= a2◂ [ a16◂ [ a45◂ [ r]]] ) ⊢ 0'(= a2◂ [ a16◂ [ a45◂ [ r]]] )
; .mov_ptn 2'(= a2◂ [ a16◂ [ a45◂ [ r]]] ) ⊢ 0'(= a2◂ [ a16◂ [ a45◂ [ r]]] )
	mov rax,r8
	mov r13,rax
	call ETR_326
	mov r14,r13
	mov r13,QWORD [rsp-8+8*1]
	add rsp,8
; » _^ .. ⊢ ..
; .. //
	mov rdi,0
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[r13]
	add rdi,rax 
	push rax
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[r14]
	add rdi,rax 
	push rax
	add rdi,1
	push rdi 
	call mlc_s8
	pop rdi
	mov r8,rax
	lea rdi,[rax+7+rdi]
	std 
	mov QWORD [tmp],rcx 
	pop rcx
	lea rsi,[r14+7+rcx]
	rep movsb
	lea rsi,[LB_5283+1-1]
	mov rcx,1
	rep movsb
	pop rcx
	lea rsi,[r13+7+rcx]
	rep movsb
	mov rcx,QWORD [tmp] 
; ∎ 2'(= {| l |} )
; .dlt.ptn 1'(= {| l |} )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	mov rdi,r8
	call free_s8
	C_POP_REGS
; .dlt.ptn 0'(= {| l |} )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	mov rdi,r8
	call free_s8
	C_POP_REGS
; .mov_ptn2 2'(= {| l |} ) ⊢ 0'(= {| l |} )
; .mov_ptn 2'(= {| l |} ) ⊢ 0'(= {| l |} )
	mov rax,r8
	mov r13,rax
	ret
LB_5282:
;; ?. 0'(= a2◂ [ a16◂ [ a45◂ [ r]]] ) ⊢ 1(<2)◂{ }
; $ %[ "" ] ⊢ %[ "" ]
; ∎ %[ "" ]
; .mov_ptn2 %[ "" ] ⊢ 0'(= {| l |} )
; .mov_ptn %[ "" ] ⊢ 0'(= {| l |} )
	mov rsi,1  
	mov rdi,16
	xor rax,rax 
	C_CALL_SF calloc
	mov QWORD [rax],0
	mov r13,rax
	ret
LB_5286:
	movzx rax,BYTE [r8+6]
	jmp QWORD [LB_5291+8*rax]
LB_5291: dq LB_5287,LB_5288,LB_5289,LB_5290
LB_5287:
	FREE_LN r8 
	mov r8,QWORD [r8+8]
	call LB_5293
	jmp LB_5292
LB_5288:
	jmp LB_5292
LB_5289:
	FREE_LN r8 
	mov r8,QWORD [r8+8]
	jmp LB_5292
LB_5290:
	push r8
	mov r8,QWORD [r8+8+8*0]
	pop r8 
	push r8
	mov r8,QWORD [r8+8+8*1]
	call LB_5294
	pop r8 
	FREE_RCD 2, r8
	jmp LB_5292
LB_5292:
	ret
LB_5294:
	movzx rax,BYTE [r8+6]
	jmp QWORD [LB_5297+8*rax]
LB_5297: dq LB_5295,LB_5296
LB_5295:
	push r8
	mov r8,QWORD [r8+8+8*0]
	call LB_5286
	pop r8 
	push r8
	mov r8,QWORD [r8+8+8*1]
	call LB_5294
	pop r8 
	FREE_RCD 2, r8
	jmp LB_5298
LB_5296:
	jmp LB_5298
LB_5298:
	ret
LB_5293:
	movzx rax,BYTE [r8+6]
	jmp QWORD [LB_5304+8*rax]
LB_5304: dq LB_5299,LB_5300,LB_5301,LB_5302,LB_5303
LB_5299:
	jmp LB_5305
LB_5300:
	FREE_LN r8 
	mov r8,QWORD [r8+8]
	call LB_5286
	jmp LB_5305
LB_5301:
	FREE_LN r8 
	mov r8,QWORD [r8+8]
	call LB_5286
	jmp LB_5305
LB_5302:
	jmp LB_5305
LB_5303:
	FREE_LN r8 
	mov r8,QWORD [r8+8]
	call LB_5294
	jmp LB_5305
LB_5305:
	ret
LB_5311:
	movzx rax,BYTE [r8+6]
	jmp QWORD [LB_5314+8*rax]
LB_5314: dq LB_5312,LB_5313
LB_5312:
	mov r8,QWORD [r8+8]
	call LB_5316
	ALC_LN rsi 
	mov BYTE [rsi+6],0
	mov QWORD [rsi+8],rax
	mov rax,rsi
	jmp LB_5315
LB_5313:
	mov r8,QWORD [r8+8]
	call LB_5317
	ALC_LN rsi 
	mov BYTE [rsi+6],1
	mov QWORD [rsi+8],rax
	mov rax,rsi
	jmp LB_5315
LB_5315:
	ret
LB_5317:
	movzx rax,BYTE [r8+6]
	jmp QWORD [LB_5323+8*rax]
LB_5323: dq LB_5318,LB_5319,LB_5320,LB_5321,LB_5322
LB_5318:
	ALC_RCD 2,r9
	push r8
	push r9
	mov r8,QWORD [r8+8+8*0]
	mov rax,r8
	pop r9  
	pop r8 
	mov QWORD [r9+8+8*0],rax
	push r8
	push r9
	mov r8,QWORD [r8+8+8*1]
	call LB_5325
	pop r9  
	pop r8 
	mov QWORD [r9+8+8*1],rax
	mov rax,r9 
	mov BYTE [rax+6],0
	jmp LB_5324
LB_5319:
	mov r8,QWORD [r8+8]
	call LB_360
	ALC_LN rsi 
	mov BYTE [rsi+6],1
	mov QWORD [rsi+8],rax
	mov rax,rsi
	jmp LB_5324
LB_5320:
	mov r8,QWORD [r8+8]
	mov rax,r8
	ALC_LN rsi 
	mov BYTE [rsi+6],2
	mov QWORD [rsi+8],rax
	mov rax,rsi
	jmp LB_5324
LB_5321:
	ALC_RCD 3,r9
	push r8
	push r9
	mov r8,QWORD [r8+8+8*0]
	mov rax,r8
	pop r9  
	pop r8 
	mov QWORD [r9+8+8*0],rax
	push r8
	push r9
	mov r8,QWORD [r8+8+8*1]
	mov rax,r8
	pop r9  
	pop r8 
	mov QWORD [r9+8+8*1],rax
	push r8
	push r9
	mov r8,QWORD [r8+8+8*2]
	call LB_5311
	pop r9  
	pop r8 
	mov QWORD [r9+8+8*2],rax
	mov rax,r9 
	mov BYTE [rax+6],3
	jmp LB_5324
LB_5322:
	ALC_RCD 2,r9
	push r8
	push r9
	mov r8,QWORD [r8+8+8*0]
	mov rax,r8
	pop r9  
	pop r8 
	mov QWORD [r9+8+8*0],rax
	push r8
	push r9
	mov r8,QWORD [r8+8+8*1]
	mov rax,r8
	pop r9  
	pop r8 
	mov QWORD [r9+8+8*1],rax
	mov rax,r9 
	mov BYTE [rax+6],4
	jmp LB_5324
LB_5324:
	ret
LB_5325:
	movzx rax,BYTE [r8+6]
	jmp QWORD [LB_5330+8*rax]
LB_5330: dq LB_5326,LB_5327,LB_5328,LB_5329
LB_5326:
	mov r8,QWORD [r8+8]
	call LB_5332
	ALC_LN rsi 
	mov BYTE [rsi+6],0
	mov QWORD [rsi+8],rax
	mov rax,rsi
	jmp LB_5331
LB_5327:
	mov rax,unt
	mov BYTE [rax+6],1
	jmp LB_5331
LB_5328:
	mov r8,QWORD [r8+8]
	mov rax,r8
	ALC_LN rsi 
	mov BYTE [rsi+6],2
	mov QWORD [rsi+8],rax
	mov rax,rsi
	jmp LB_5331
LB_5329:
	ALC_RCD 2,r9
	push r8
	push r9
	mov r8,QWORD [r8+8+8*0]
	mov rax,r8
	pop r9  
	pop r8 
	mov QWORD [r9+8+8*0],rax
	push r8
	push r9
	mov r8,QWORD [r8+8+8*1]
	call LB_5333
	pop r9  
	pop r8 
	mov QWORD [r9+8+8*1],rax
	mov rax,r9 
	mov BYTE [rax+6],3
	jmp LB_5331
LB_5331:
	ret
LB_5333:
	movzx rax,BYTE [r8+6]
	jmp QWORD [LB_5336+8*rax]
LB_5336: dq LB_5334,LB_5335
LB_5334:
	ALC_RCD 2,r9
	push r8
	push r9
	mov r8,QWORD [r8+8+8*0]
	call LB_5325
	pop r9  
	pop r8 
	mov QWORD [r9+8+8*0],rax
	push r8
	push r9
	mov r8,QWORD [r8+8+8*1]
	call LB_5333
	pop r9  
	pop r8 
	mov QWORD [r9+8+8*1],rax
	mov rax,r9 
	mov BYTE [rax+6],0
	jmp LB_5337
LB_5335:
	mov rax,unt
	mov BYTE [rax+6],1
	jmp LB_5337
LB_5337:
	ret
LB_5332:
	movzx rax,BYTE [r8+6]
	jmp QWORD [LB_5343+8*rax]
LB_5343: dq LB_5338,LB_5339,LB_5340,LB_5341,LB_5342
LB_5338:
	mov rax,unt
	mov BYTE [rax+6],0
	jmp LB_5344
LB_5339:
	mov r8,QWORD [r8+8]
	call LB_5325
	ALC_LN rsi 
	mov BYTE [rsi+6],1
	mov QWORD [rsi+8],rax
	mov rax,rsi
	jmp LB_5344
LB_5340:
	mov r8,QWORD [r8+8]
	call LB_5325
	ALC_LN rsi 
	mov BYTE [rsi+6],2
	mov QWORD [rsi+8],rax
	mov rax,rsi
	jmp LB_5344
LB_5341:
	mov rax,unt
	mov BYTE [rax+6],3
	jmp LB_5344
LB_5342:
	mov r8,QWORD [r8+8]
	call LB_5333
	ALC_LN rsi 
	mov BYTE [rsi+6],4
	mov QWORD [rsi+8],rax
	mov rax,rsi
	jmp LB_5344
LB_5344:
	ret
LB_5316:
	movzx rax,BYTE [r8+6]
	jmp QWORD [LB_5347+8*rax]
LB_5347: dq LB_5345,LB_5346
LB_5345:
	ALC_RCD 2,r9
	push r8
	push r9
	mov r8,QWORD [r8+8+8*0]
	call LB_5311
	pop r9  
	pop r8 
	mov QWORD [r9+8+8*0],rax
	push r8
	push r9
	mov r8,QWORD [r8+8+8*1]
	call LB_5316
	pop r9  
	pop r8 
	mov QWORD [r9+8+8*1],rax
	mov rax,r9 
	mov BYTE [rax+6],0
	jmp LB_5348
LB_5346:
	mov rax,unt
	mov BYTE [rax+6],1
	jmp LB_5348
LB_5348:
	ret
ETR_327: ;; mk_rset { 0'(= a16◂ [ a45◂ [ r]] ) 1'(= {| a14◂ [ ]|} ) } ⊢ 0'(= {| a14◂ [ ]|} ) : ({ _t16◂_t45◂_r64 _arr◂_t14 }→_arr◂_t14)
;; ? 0'(= a16◂ [ a45◂ [ r]] ) ⊢ 0(<2)◂2'(= a2◂ [ a16◂ [ a45◂ [ r]]] )
	mov rdi,r13
	cmp BYTE [rdi+6],0
	jnz LB_5284
	mov QWORD [GBG_VCT+8*0],rdi
	mov r8,QWORD [rdi+8]
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_LN rdi
; #328 { 2'(= a2◂ [ a16◂ [ a45◂ [ r]]] ) 1'(= {| a14◂ [ ]|} ) } ⊢|
; .mov_ptn2 { 2'(= a2◂ [ a16◂ [ a45◂ [ r]]] ) 1'(= {| a14◂ [ ]|} ) } ⊢ { 0'(= a2◂ [ a16◂ [ a45◂ [ r]]] ) 1'(= {| a14◂ [ ]|} ) }
; .mov_ptn 2'(= a2◂ [ a16◂ [ a45◂ [ r]]] ) ⊢ 0'(= a2◂ [ a16◂ [ a45◂ [ r]]] )
	mov rax,r8
	mov r13,rax
	call ETR_328
; .mov_ptn2 0'(= {| a14◂ [ ]|} ) ⊢ 0'(= {| a14◂ [ ]|} )
	ret
LB_5284:
;; ?. 0'(= a16◂ [ a45◂ [ r]] ) ⊢ 1(<2)◂2'(= a45◂ [ r] )
	mov QWORD [GBG_VCT+8*0],rdi
	mov r8,QWORD [rdi+8]
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_LN rdi
;; ? 2'(= a45◂ [ r] ) ⊢ 0(<5)◂{ 0'(= r ) 3'(= a47◂ [ ] ) }
	mov rdi,r8
	cmp BYTE [rdi+6],0
	jnz LB_5285
	mov r13, QWORD [r8+8]
	mov r9, QWORD [r8+16]
	mov QWORD [GBG_VCT+8*0],r8
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_RCD 2,rdi
; #277 { 1'(= {| a14◂ [ ]|} ) 0'(= r ) } ⊢ { 0'(= {| a14◂ [ ]|} ) 1'(= r ) }
	sub rsp,8
	mov QWORD [rsp+8*0],r9
; .mov_ptn2 { 1'(= {| a14◂ [ ]|} ) 0'(= r ) } ⊢ { 0'(= {| a14◂ [ ]|} ) 1'(= r ) }
	mov r8,r13
; .mov_ptn 1'(= {| a14◂ [ ]|} ) ⊢ 0'(= {| a14◂ [ ]|} )
	mov rax,r14
	mov r13,rax
; .mov_ptn 2'(= r ) ⊢ 1'(= r )
	mov rax,r8
	mov r14,rax
	call ETR_277
	mov r9,QWORD [rsp-8+8*1]
	add rsp,8
; ∎ 0'(= {| a14◂ [ ]|} )
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 3'(= a47◂ [ ] )
	mov rdi,r9
	C_PUSH_REGS
	mov r8,rdi
	call LB_5286
	C_POP_REGS
; .mov_ptn2 0'(= {| a14◂ [ ]|} ) ⊢ 0'(= {| a14◂ [ ]|} )
	ret
LB_5285:
;; ? 2'(= a45◂ [ r] ) ⊢ 1(<5)◂0'(= a18◂ [ ] )
	mov rdi,r8
	cmp BYTE [rdi+6],1
	jnz LB_5306
	mov QWORD [GBG_VCT+8*0],rdi
	mov r13,QWORD [rdi+8]
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_LN rdi
; ∎ 1'(= {| a14◂ [ ]|} )
; .dlt.ptn 0'(= a18◂ [ ] )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	call LB_394
	C_POP_REGS
; .mov_ptn2 1'(= {| a14◂ [ ]|} ) ⊢ 0'(= {| a14◂ [ ]|} )
; .mov_ptn 1'(= {| a14◂ [ ]|} ) ⊢ 0'(= {| a14◂ [ ]|} )
	mov rax,r14
	mov r13,rax
	ret
LB_5306:
;; ? 2'(= a45◂ [ r] ) ⊢ 2(<5)◂0'(= r )
	mov rdi,r8
	cmp BYTE [rdi+6],2
	jnz LB_5307
	mov QWORD [GBG_VCT+8*0],rdi
	mov r13,QWORD [rdi+8]
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_LN rdi
; ∎ 1'(= {| a14◂ [ ]|} )
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 1'(= {| a14◂ [ ]|} ) ⊢ 0'(= {| a14◂ [ ]|} )
; .mov_ptn 1'(= {| a14◂ [ ]|} ) ⊢ 0'(= {| a14◂ [ ]|} )
	mov rax,r14
	mov r13,rax
	ret
LB_5307:
;; ? 2'(= a45◂ [ r] ) ⊢ 4(<5)◂{ 0'(= r ) 3'(= r ) }
	mov rdi,r8
	cmp BYTE [rdi+6],4
	jnz LB_5308
	mov r13, QWORD [r8+8]
	mov r9, QWORD [r8+16]
	mov QWORD [GBG_VCT+8*0],r8
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_RCD 2,rdi
; #277 { 1'(= {| a14◂ [ ]|} ) 0'(= r ) } ⊢ { 0'(= {| a14◂ [ ]|} ) 1'(= r ) }
	sub rsp,8
	mov QWORD [rsp+8*0],r9
; .mov_ptn2 { 1'(= {| a14◂ [ ]|} ) 0'(= r ) } ⊢ { 0'(= {| a14◂ [ ]|} ) 1'(= r ) }
	mov r8,r13
; .mov_ptn 1'(= {| a14◂ [ ]|} ) ⊢ 0'(= {| a14◂ [ ]|} )
	mov rax,r14
	mov r13,rax
; .mov_ptn 2'(= r ) ⊢ 1'(= r )
	mov rax,r8
	mov r14,rax
	call ETR_277
	mov r9,QWORD [rsp-8+8*1]
	add rsp,8
; #277 { 0'(= {| a14◂ [ ]|} ) 3'(= r ) } ⊢ { 0'(= {| a14◂ [ ]|} ) 2'(= r ) }
	sub rsp,8
	mov QWORD [rsp+8*0],r14
; .mov_ptn2 { 0'(= {| a14◂ [ ]|} ) 3'(= r ) } ⊢ { 0'(= {| a14◂ [ ]|} ) 1'(= r ) }
; .mov_ptn 3'(= r ) ⊢ 1'(= r )
	mov rax,r9
	mov r14,rax
	call ETR_277
	mov r8,r14
	mov r14,QWORD [rsp-8+8*1]
	add rsp,8
; ∎ 0'(= {| a14◂ [ ]|} )
; .dlt.ptn 2'(= r )
	mov rdi,r8
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0'(= {| a14◂ [ ]|} ) ⊢ 0'(= {| a14◂ [ ]|} )
	ret
LB_5308:
;; ?. 2'(= a45◂ [ r] ) ⊢ 3(<5)◂{ 0'(= r ) 3'(= r ) 4'(= a16◂ [ a45◂ [ r]] ) }
	mov r13, QWORD [r8+8]
	mov r9, QWORD [r8+16]
	mov r10, QWORD [r8+24]
	mov QWORD [GBG_VCT+8*0],r8
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_RCD 3,rdi
; #327 { 4'(= a16◂ [ a45◂ [ r]] ) 1'(= {| a14◂ [ ]|} ) } ⊢|
	sub rsp,16
	mov QWORD [rsp+8*0],r13
	mov QWORD [rsp+8*1],r9
; .mov_ptn2 { 4'(= a16◂ [ a45◂ [ r]] ) 1'(= {| a14◂ [ ]|} ) } ⊢ { 0'(= a16◂ [ a45◂ [ r]] ) 1'(= {| a14◂ [ ]|} ) }
; .mov_ptn 4'(= a16◂ [ a45◂ [ r]] ) ⊢ 0'(= a16◂ [ a45◂ [ r]] )
	mov rax,r10
	mov r13,rax
	call ETR_327
	mov r9,QWORD [rsp-8+8*2]
	mov r14,r13
	mov r13,QWORD [rsp-8+8*1]
	add rsp,16
; .mov_ptn2 1'(= {| a14◂ [ ]|} ) ⊢ 0'(= {| a14◂ [ ]|} )
; .mov_ptn 1'(= {| a14◂ [ ]|} ) ⊢ 0'(= {| a14◂ [ ]|} )
	mov rax,r14
	mov r13,rax
	ret
ETR_328: ;; mk_rset_lst { 0'(= a2◂ [ a16◂ [ a45◂ [ r]]] ) 1'(= {| a14◂ [ ]|} ) } ⊢ 0'(= {| a14◂ [ ]|} ) : ({ _lst◂_t16◂_t45◂_r64 _arr◂_t14 }→_arr◂_t14)
;; ? 0'(= a2◂ [ a16◂ [ a45◂ [ r]]] ) ⊢ 0(<2)◂{ 2'(= a16◂ [ a45◂ [ r]] ) 3'(= a2◂ [ a16◂ [ a45◂ [ r]]] ) }
	mov rdi,r13
	cmp BYTE [rdi+6],0
	jnz LB_5309
	mov r8, QWORD [r13+8]
	mov r9, QWORD [r13+16]
	mov QWORD [GBG_VCT+8*0],r13
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_RCD 2,rdi
; #327 { 2'(= a16◂ [ a45◂ [ r]] ) 1'(= {| a14◂ [ ]|} ) } ⊢ 0'(= {| a14◂ [ ]|} )
	sub rsp,8
	mov QWORD [rsp+8*0],r9
; .mov_ptn2 { 2'(= a16◂ [ a45◂ [ r]] ) 1'(= {| a14◂ [ ]|} ) } ⊢ { 0'(= a16◂ [ a45◂ [ r]] ) 1'(= {| a14◂ [ ]|} ) }
; .mov_ptn 2'(= a16◂ [ a45◂ [ r]] ) ⊢ 0'(= a16◂ [ a45◂ [ r]] )
	mov rax,r8
	mov r13,rax
	call ETR_327
	mov r9,QWORD [rsp-8+8*1]
	add rsp,8
; #328 { 3'(= a2◂ [ a16◂ [ a45◂ [ r]]] ) 0'(= {| a14◂ [ ]|} ) } ⊢ 0'(= {| a14◂ [ ]|} )
; .mov_ptn2 { 3'(= a2◂ [ a16◂ [ a45◂ [ r]]] ) 0'(= {| a14◂ [ ]|} ) } ⊢ { 0'(= a2◂ [ a16◂ [ a45◂ [ r]]] ) 1'(= {| a14◂ [ ]|} ) }
; .mov_ptn 0'(= {| a14◂ [ ]|} ) ⊢ 1'(= {| a14◂ [ ]|} )
	mov rax,r13
	mov r14,rax
; .mov_ptn 3'(= a2◂ [ a16◂ [ a45◂ [ r]]] ) ⊢ 0'(= a2◂ [ a16◂ [ a45◂ [ r]]] )
	mov rax,r9
	mov r13,rax
	call ETR_328
; ∎ 0'(= {| a14◂ [ ]|} )
; .mov_ptn2 0'(= {| a14◂ [ ]|} ) ⊢ 0'(= {| a14◂ [ ]|} )
	ret
LB_5309:
;; ?. 0'(= a2◂ [ a16◂ [ a45◂ [ r]]] ) ⊢ 1(<2)◂{ }
; ∎ 1'(= {| a14◂ [ ]|} )
; .mov_ptn2 1'(= {| a14◂ [ ]|} ) ⊢ 0'(= {| a14◂ [ ]|} )
; .mov_ptn 1'(= {| a14◂ [ ]|} ) ⊢ 0'(= {| a14◂ [ ]|} )
	mov rax,r14
	mov r13,rax
	ret
ETR_329: ;; mk_rset_env { 0'(= {| a16◂ [ a45◂ [ r]]|} ) 1'(= a2◂ [ r] ) 2'(= {| a14◂ [ ]|} ) } ⊢ { 0'(= {| a16◂ [ a45◂ [ r]]|} ) 1'(= {| a14◂ [ ]|} ) } : ({ _arr◂_t16◂_t45◂_r64 _lst◂_r64 _arr◂_t14 }→{ _arr◂_t16◂_t45◂_r64 _arr◂_t14 })
;; ? 1'(= a2◂ [ r] ) ⊢ 0(<2)◂{ 3'(= r ) 4'(= a2◂ [ r] ) }
	mov rdi,r14
	cmp BYTE [rdi+6],0
	jnz LB_5310
	mov r9, QWORD [r14+8]
	mov r10, QWORD [r14+16]
	mov QWORD [GBG_VCT+8*0],r14
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_RCD 2,rdi
; #4 { 0'(= {| a16◂ [ a45◂ [ r]]|} ) 3'(= r ) } ⊢ { 0'(= {| a16◂ [ a45◂ [ r]]|} ) 3'(= r ) 5'(= a16◂ [ a45◂ [ r]] ) }
	mov rax,r9
	mov rdi,r13
	mov rsi,0x0000_ffff_ffff_ffff 
	and rsi,QWORD [rdi]
	cmp rax,rsi 
	jge err 
	mov rdi,[rdi+8+8*rax]
	C_PUSH_REGS
	mov r8,rdi
	call LB_5311
	C_POP_REGS
	mov r14,rax
; .mov_ptn2 1'(= a16◂ [ a45◂ [ r]] ) ⊢ 5'(= a16◂ [ a45◂ [ r]] )
	mov rcx,r11
; .mov_ptn 1'(= a16◂ [ a45◂ [ r]] ) ⊢ 5'(= a16◂ [ a45◂ [ r]] )
	mov rax,r14
	mov r11,rax
; #327 { 5'(= a16◂ [ a45◂ [ r]] ) 2'(= {| a14◂ [ ]|} ) } ⊢ 1'(= {| a14◂ [ ]|} )
	sub rsp,24
	mov QWORD [rsp+8*0],r13
	mov QWORD [rsp+8*1],r9
	mov QWORD [rsp+8*2],r10
; .mov_ptn2 { 5'(= a16◂ [ a45◂ [ r]] ) 2'(= {| a14◂ [ ]|} ) } ⊢ { 0'(= a16◂ [ a45◂ [ r]] ) 1'(= {| a14◂ [ ]|} ) }
; .mov_ptn 2'(= {| a14◂ [ ]|} ) ⊢ 1'(= {| a14◂ [ ]|} )
	mov rax,r8
	mov r14,rax
; .mov_ptn 5'(= a16◂ [ a45◂ [ r]] ) ⊢ 0'(= a16◂ [ a45◂ [ r]] )
	mov rax,r11
	mov r13,rax
	call ETR_327
	mov r10,QWORD [rsp-8+8*3]
	mov r9,QWORD [rsp-8+8*2]
	mov r14,r13
	mov r13,QWORD [rsp-8+8*1]
	add rsp,24
; #329 { 0'(= {| a16◂ [ a45◂ [ r]]|} ) 4'(= a2◂ [ r] ) 1'(= {| a14◂ [ ]|} ) } ⊢|
	sub rsp,8
	mov QWORD [rsp+8*0],r9
; .mov_ptn2 { 0'(= {| a16◂ [ a45◂ [ r]]|} ) 4'(= a2◂ [ r] ) 1'(= {| a14◂ [ ]|} ) } ⊢ { 0'(= {| a16◂ [ a45◂ [ r]]|} ) 1'(= a2◂ [ r] ) 2'(= {| a14◂ [ ]|} ) }
; .mov_ptn 1'(= {| a14◂ [ ]|} ) ⊢ 2'(= {| a14◂ [ ]|} )
	mov rax,r14
	mov r8,rax
; .mov_ptn 4'(= a2◂ [ r] ) ⊢ 1'(= a2◂ [ r] )
	mov rax,r10
	mov r14,rax
	call ETR_329
	mov r9,QWORD [rsp-8+8*1]
	add rsp,8
; .mov_ptn2 { 0'(= {| a16◂ [ a45◂ [ r]]|} ) 1'(= {| a14◂ [ ]|} ) } ⊢ { 0'(= {| a16◂ [ a45◂ [ r]]|} ) 1'(= {| a14◂ [ ]|} ) }
	ret
LB_5310:
;; ?. 1'(= a2◂ [ r] ) ⊢ 1(<2)◂{ }
; ∎ { 0'(= {| a16◂ [ a45◂ [ r]]|} ) 2'(= {| a14◂ [ ]|} ) }
; .mov_ptn2 { 0'(= {| a16◂ [ a45◂ [ r]]|} ) 2'(= {| a14◂ [ ]|} ) } ⊢ { 0'(= {| a16◂ [ a45◂ [ r]]|} ) 1'(= {| a14◂ [ ]|} ) }
; .mov_ptn 2'(= {| a14◂ [ ]|} ) ⊢ 1'(= {| a14◂ [ ]|} )
	mov rax,r8
	mov r14,rax
	ret
LB_5349:
	movzx rax,BYTE [r8+6]
	jmp QWORD [LB_5352+8*rax]
LB_5352: dq LB_5350,LB_5351
LB_5350:
	ALC_RCD 2,r9
	push r8
	push r9
	mov r8,QWORD [r8+8+8*0]
	mov rax,r8
	pop r9  
	pop r8 
	mov QWORD [r9+8+8*0],rax
	push r8
	push r9
	mov r8,QWORD [r8+8+8*1]
	call LB_5349
	pop r9  
	pop r8 
	mov QWORD [r9+8+8*1],rax
	mov rax,r9 
	mov BYTE [rax+6],0
	jmp LB_5353
LB_5351:
	mov rax,unt
	mov BYTE [rax+6],1
	jmp LB_5353
LB_5353:
	ret
ETR_330: ;; mk_rset_env_x { 0'(= {| a16◂ [ a45◂ [ r]]|} ) 1'(= a2◂ [ r] ) } ⊢ { 0'(= {| a16◂ [ a45◂ [ r]]|} ) 1'(= a2◂ [ r] ) 2'(= {| a14◂ [ ]|} ) } : ({ _arr◂_t16◂_t45◂_r64 _lst◂_r64 }→{ _arr◂_t16◂_t45◂_r64 _lst◂_r64 _arr◂_t14 })
; #276 { } ⊢ 2'(= {| a14◂ [ ]|} )
	sub rsp,16
	mov QWORD [rsp+8*0],r13
	mov QWORD [rsp+8*1],r14
; .mov_ptn2 { } ⊢ { }
	call ETR_276
	mov r14,QWORD [rsp-8+8*2]
	mov r8,r13
	mov r13,QWORD [rsp-8+8*1]
	add rsp,16
; $ 1'(= a2◂ [ r] ) ⊢ 1'(= a2◂ [ r] ),3'(= a2◂ [ r] )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	call LB_5349
	C_POP_REGS
	mov r9,rax
; #329 { 0'(= {| a16◂ [ a45◂ [ r]]|} ) 3'(= a2◂ [ r] ) 2'(= {| a14◂ [ ]|} ) } ⊢ { 0'(= {| a16◂ [ a45◂ [ r]]|} ) 2'(= {| a14◂ [ ]|} ) }
	sub rsp,8
	mov QWORD [rsp+8*0],r14
; .mov_ptn2 { 0'(= {| a16◂ [ a45◂ [ r]]|} ) 3'(= a2◂ [ r] ) 2'(= {| a14◂ [ ]|} ) } ⊢ { 0'(= {| a16◂ [ a45◂ [ r]]|} ) 1'(= a2◂ [ r] ) 2'(= {| a14◂ [ ]|} ) }
; .mov_ptn 3'(= a2◂ [ r] ) ⊢ 1'(= a2◂ [ r] )
	mov rax,r9
	mov r14,rax
	call ETR_329
	mov r8,r14
	mov r14,QWORD [rsp-8+8*1]
	add rsp,8
; ∎ { 0'(= {| a16◂ [ a45◂ [ r]]|} ) 1'(= a2◂ [ r] ) 2'(= {| a14◂ [ ]|} ) }
; .mov_ptn2 { 0'(= {| a16◂ [ a45◂ [ r]]|} ) 1'(= a2◂ [ r] ) 2'(= {| a14◂ [ ]|} ) } ⊢ { 0'(= {| a16◂ [ a45◂ [ r]]|} ) 1'(= a2◂ [ r] ) 2'(= {| a14◂ [ ]|} ) }
	ret
ETR_331: ;; mk_rset_x 0'(= a16◂ [ a45◂ [ r]] ) ⊢ { 0'(= a16◂ [ a45◂ [ r]] ) 1'(= {| a14◂ [ ]|} ) } : (_t16◂_t45◂_r64→{ _t16◂_t45◂_r64 _arr◂_t14 })
; $ 0'(= a16◂ [ a45◂ [ r]] ) ⊢ 0'(= a16◂ [ a45◂ [ r]] ),1'(= a16◂ [ a45◂ [ r]] )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	call LB_5311
	C_POP_REGS
	mov r14,rax
; #276 { } ⊢ 2'(= {| a14◂ [ ]|} )
	sub rsp,16
	mov QWORD [rsp+8*0],r13
	mov QWORD [rsp+8*1],r14
; .mov_ptn2 { } ⊢ { }
	call ETR_276
	mov r14,QWORD [rsp-8+8*2]
	mov r8,r13
	mov r13,QWORD [rsp-8+8*1]
	add rsp,16
; #327 { 1'(= a16◂ [ a45◂ [ r]] ) 2'(= {| a14◂ [ ]|} ) } ⊢ 1'(= {| a14◂ [ ]|} )
	sub rsp,8
	mov QWORD [rsp+8*0],r13
; .mov_ptn2 { 1'(= a16◂ [ a45◂ [ r]] ) 2'(= {| a14◂ [ ]|} ) } ⊢ { 0'(= a16◂ [ a45◂ [ r]] ) 1'(= {| a14◂ [ ]|} ) }
; .mov_ptn 1'(= a16◂ [ a45◂ [ r]] ) ⊢ 0'(= a16◂ [ a45◂ [ r]] )
	mov rax,r14
	mov r13,rax
; .mov_ptn 2'(= {| a14◂ [ ]|} ) ⊢ 1'(= {| a14◂ [ ]|} )
	mov rax,r8
	mov r14,rax
	call ETR_327
	mov r14,r13
	mov r13,QWORD [rsp-8+8*1]
	add rsp,8
; ∎ { 0'(= a16◂ [ a45◂ [ r]] ) 1'(= {| a14◂ [ ]|} ) }
; .mov_ptn2 { 0'(= a16◂ [ a45◂ [ r]] ) 1'(= {| a14◂ [ ]|} ) } ⊢ { 0'(= a16◂ [ a45◂ [ r]] ) 1'(= {| a14◂ [ ]|} ) }
	ret
ETR_335: ;; r64_im 0'(= r ) ⊢ 0'(= a16◂ [ a45◂ [ q0]] ) : (_r64→_t16◂_t45◂7211'(1))
; #87 0'(= r ) ⊢ 0(<2)◂0'(= r )
; #313 0(<2)◂0'(= r ) ⊢ 1(<5)◂0(<2)◂0'(= r )
; #81 1(<5)◂0(<2)◂0'(= r ) ⊢ 1(<2)◂1(<5)◂0(<2)◂0'(= r )
; ∎ 1(<2)◂1(<5)◂0(<2)◂0'(= r )
; .mov_ptn2 1(<2)◂1(<5)◂0(<2)◂0'(= r ) ⊢ 0'(= a16◂ [ a45◂ [ q0]] )
	mov r14,r13
; .mov_ptn 1(<2)◂1(<5)◂0(<2)◂1'(= r ) ⊢ 0'(= a16◂ [ a45◂ [ q0]] )
	mov rax,r14
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],1
	mov QWORD [rax+8],rdi
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],1
	mov QWORD [rax+8],rdi
	mov r13,rax
	ret
ETR_337: ;; s8_im 0'(= {| l |} ) ⊢ 0'(= a16◂ [ a45◂ [ q0]] ) : (_s8→_t16◂_t45◂7233'(1))
; #86 0'(= {| l |} ) ⊢ 1(<2)◂0'(= {| l |} )
; #313 1(<2)◂0'(= {| l |} ) ⊢ 1(<5)◂1(<2)◂0'(= {| l |} )
; #81 1(<5)◂1(<2)◂0'(= {| l |} ) ⊢ 1(<2)◂1(<5)◂1(<2)◂0'(= {| l |} )
; ∎ 1(<2)◂1(<5)◂1(<2)◂0'(= {| l |} )
; .mov_ptn2 1(<2)◂1(<5)◂1(<2)◂0'(= {| l |} ) ⊢ 0'(= a16◂ [ a45◂ [ q0]] )
	mov r14,r13
; .mov_ptn 1(<2)◂1(<5)◂1(<2)◂1'(= {| l |} ) ⊢ 0'(= a16◂ [ a45◂ [ q0]] )
	mov rax,r14
	mov BYTE [rax+6],1
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],1
	mov QWORD [rax+8],rdi
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],1
	mov QWORD [rax+8],rdi
	mov r13,rax
	ret
ETR_342: ;; pnt 0'(= r ) ⊢ { 0'(= r ) 1'(= {| l |} ) } : (_r64→{ _r64 _s8 })
; » _^ .. ⊢ ..
; .. //
	mov rdi,0
	sub rsp,128
	push rdi 
	lea rdi,[rsp+8]
	mov rdx,r13
	mov rsi,fmt_d
 xor rax,rax
	C_CALL_SF sprintf
	pop rdi
	add rdi,rax 
	push rax 
	add rdi,18
	push rdi 
	call mlc_s8
	pop rdi
	mov r14,rax
	lea rdi,[rax+7+rdi]
	std 
	mov QWORD [tmp],rcx 
	lea rsi,[LB_5354+1-1]
	mov rcx,1
	rep movsb
	pop rcx
	lea rsi,[rsp+rcx-1]
	rep movsb
	add rsp,128
	lea rsi,[LB_5355+17-1]
	mov rcx,17
	rep movsb
	mov rcx,QWORD [tmp] 
; ∎ { 0'(= r ) 1'(= {| l |} ) }
; .mov_ptn2 { 0'(= r ) 1'(= {| l |} ) } ⊢ { 0'(= r ) 1'(= {| l |} ) }
	ret
ETR_343: ;; ini { } ⊢ { 0'(= r ) 1'(= a2◂ [ q0] ) } : ({ }→{ _r64 _lst◂7282'(1) })
; $ %[ 0r ] ⊢ %[ 0r ]
; #22 { } ⊢ 1(<2)◂{ }
; ∎ { %[ 0r ] 1(<2)◂{ } }
; .mov_ptn2 { %[ 0r ] 1(<2)◂{ } } ⊢ { 0'(= r ) 1'(= a2◂ [ q0] ) }
; .mov_ptn 1(<2)◂{ } ⊢ 1'(= a2◂ [ q0] )
	mov rax,unt 
	mov rax,unt_1
	mov r14,rax
; .mov_ptn %[ 0r ] ⊢ 0'(= r )
	mov rax,0
	mov r13,rax
	ret
ETR_344: ;; dlt { 0'(= a2◂ [ *{ ra51◂ [ ]}] ) 1'(= a13◂ [ ] ) } ⊢ 0'(= a13◂ [ ] ) : ({ _lst◂{ _r64 _t51 } _t13 }→_t13)
;; ? 0'(= a2◂ [ *{ ra51◂ [ ]}] ) ⊢ 0(<2)◂{ { 3'(= r ) 4'(= a51◂ [ ] ) } 5'(= a2◂ [ *{ ra51◂ [ ]}] ) }
	mov rdi,r13
	cmp BYTE [rdi+6],0
	jnz LB_5356
	mov r8, QWORD [r13+8]
	mov r9, QWORD [r8+8]
	mov r10, QWORD [r8+16]
	mov QWORD [GBG_VCT+8*0],r8
	mov r11, QWORD [r13+16]
	mov QWORD [GBG_VCT+8*1],r13
	mov rdi,QWORD [GBG_VCT+8*1]
	FREE_RCD 2,rdi
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_RCD 2,rdi
;; ? 4'(= a51◂ [ ] ) ⊢ 0(<2)◂{ }
	mov rdi,r10
	cmp BYTE [rdi+6],0
	jnz LB_5357
; #342 3'(= r ) ⊢ { 0'(= r ) 2'(= {| l |} ) }
	sub rsp,16
	mov QWORD [rsp+8*0],r14
	mov QWORD [rsp+8*1],r11
; .mov_ptn2 3'(= r ) ⊢ 0'(= r )
; .mov_ptn 3'(= r ) ⊢ 0'(= r )
	mov rax,r9
	mov r13,rax
	call ETR_342
	mov r11,QWORD [rsp-8+8*2]
	mov r8,r14
	mov r14,QWORD [rsp-8+8*1]
	add rsp,16
; » _^ .. ⊢ ..
; .. //
	mov rdi,0
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[r8]
	add rdi,rax 
	push rax
	add rdi,23
	push rdi 
	call mlc_s8
	pop rdi
	mov r8,rax
	lea rdi,[rax+7+rdi]
	std 
	mov QWORD [tmp],rcx 
	lea rsi,[LB_5358+14-1]
	mov rcx,14
	rep movsb
	pop rcx
	lea rsi,[r8+7+rcx]
	rep movsb
	lea rsi,[LB_5359+9-1]
	mov rcx,9
	rep movsb
	mov rcx,QWORD [tmp] 
; #40 { 1'(= a13◂ [ ] ) 2'(= {| l |} ) } ⊢ 1'(= a13◂ [ ] )
	sub rsp,16
	mov QWORD [rsp+8*0],r13
	mov QWORD [rsp+8*1],r11
; .mov_ptn2 { 1'(= a13◂ [ ] ) 2'(= {| l |} ) } ⊢ { 0'(= a13◂ [ ] ) 1'(= {| l |} ) }
; .mov_ptn 1'(= a13◂ [ ] ) ⊢ 0'(= a13◂ [ ] )
	mov rax,r14
	mov r13,rax
; .mov_ptn 2'(= {| l |} ) ⊢ 1'(= {| l |} )
	mov rax,r8
	mov r14,rax
	call ETR_40
	mov r11,QWORD [rsp-8+8*2]
	mov r14,r13
	mov r13,QWORD [rsp-8+8*1]
	add rsp,16
; #344 { 5'(= a2◂ [ *{ ra51◂ [ ]}] ) 1'(= a13◂ [ ] ) } ⊢|
	sub rsp,8
	mov QWORD [rsp+8*0],r13
; .mov_ptn2 { 5'(= a2◂ [ *{ ra51◂ [ ]}] ) 1'(= a13◂ [ ] ) } ⊢ { 0'(= a2◂ [ *{ ra51◂ [ ]}] ) 1'(= a13◂ [ ] ) }
; .mov_ptn 5'(= a2◂ [ *{ ra51◂ [ ]}] ) ⊢ 0'(= a2◂ [ *{ ra51◂ [ ]}] )
	mov rax,r11
	mov r13,rax
	call ETR_344
	mov r14,r13
	mov r13,QWORD [rsp-8+8*1]
	add rsp,8
; .mov_ptn2 1'(= a13◂ [ ] ) ⊢ 0'(= a13◂ [ ] )
; .mov_ptn 1'(= a13◂ [ ] ) ⊢ 0'(= a13◂ [ ] )
	mov rax,r14
	mov r13,rax
	ret
LB_5357:
;; ?. 4'(= a51◂ [ ] ) ⊢ 1(<2)◂0'(= r )
	mov QWORD [GBG_VCT+8*0],rdi
	mov r13,QWORD [rdi+8]
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_LN rdi
; #342 3'(= r ) ⊢ { 3'(= r ) 2'(= {| l |} ) }
	sub rsp,24
	mov QWORD [rsp+8*0],r13
	mov QWORD [rsp+8*1],r14
	mov QWORD [rsp+8*2],r11
; .mov_ptn2 3'(= r ) ⊢ 0'(= r )
; .mov_ptn 3'(= r ) ⊢ 0'(= r )
	mov rax,r9
	mov r13,rax
	call ETR_342
	mov r11,QWORD [rsp-8+8*3]
	mov r8,r14
	mov r14,QWORD [rsp-8+8*2]
	mov r9,r13
	mov r13,QWORD [rsp-8+8*1]
	add rsp,24
; » _^ .. ⊢ ..
; .. //
	mov rdi,0
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[r8]
	add rdi,rax 
	push rax
	sub rsp,128
	push rdi 
	lea rdi,[rsp+8]
	mov rdx,r13
	mov rsi,fmt_d
 xor rax,rax
	C_CALL_SF sprintf
	pop rdi
	add rdi,rax 
	push rax 
	add rdi,25
	push rdi 
	call mlc_s8
	pop rdi
	mov r13,rax
	lea rdi,[rax+7+rdi]
	std 
	mov QWORD [tmp],rcx 
	lea rsi,[LB_5360+5-1]
	mov rcx,5
	rep movsb
	pop rcx
	lea rsi,[rsp+rcx-1]
	rep movsb
	add rsp,128
	lea rsi,[LB_5361+11-1]
	mov rcx,11
	rep movsb
	pop rcx
	lea rsi,[r8+7+rcx]
	rep movsb
	lea rsi,[LB_5362+9-1]
	mov rcx,9
	rep movsb
	mov rcx,QWORD [tmp] 
; #40 { 1'(= a13◂ [ ] ) 0'(= {| l |} ) } ⊢ 0'(= a13◂ [ ] )
	sub rsp,16
	mov QWORD [rsp+8*0],r9
	mov QWORD [rsp+8*1],r11
; .mov_ptn2 { 1'(= a13◂ [ ] ) 0'(= {| l |} ) } ⊢ { 0'(= a13◂ [ ] ) 1'(= {| l |} ) }
	mov r8,r13
; .mov_ptn 1'(= a13◂ [ ] ) ⊢ 0'(= a13◂ [ ] )
	mov rax,r14
	mov r13,rax
; .mov_ptn 2'(= {| l |} ) ⊢ 1'(= {| l |} )
	mov rax,r8
	mov r14,rax
	call ETR_40
	mov r11,QWORD [rsp-8+8*2]
	mov r9,QWORD [rsp-8+8*1]
	add rsp,16
; #344 { 5'(= a2◂ [ *{ ra51◂ [ ]}] ) 0'(= a13◂ [ ] ) } ⊢|
	sub rsp,8
	mov QWORD [rsp+8*0],r9
; .mov_ptn2 { 5'(= a2◂ [ *{ ra51◂ [ ]}] ) 0'(= a13◂ [ ] ) } ⊢ { 0'(= a2◂ [ *{ ra51◂ [ ]}] ) 1'(= a13◂ [ ] ) }
; .mov_ptn 0'(= a13◂ [ ] ) ⊢ 1'(= a13◂ [ ] )
	mov rax,r13
	mov r14,rax
; .mov_ptn 5'(= a2◂ [ *{ ra51◂ [ ]}] ) ⊢ 0'(= a2◂ [ *{ ra51◂ [ ]}] )
	mov rax,r11
	mov r13,rax
	call ETR_344
	mov r9,QWORD [rsp-8+8*1]
	add rsp,8
; .mov_ptn2 0'(= a13◂ [ ] ) ⊢ 0'(= a13◂ [ ] )
	ret
LB_5356:
;; ?. 0'(= a2◂ [ *{ ra51◂ [ ]}] ) ⊢ 1(<2)◂{ }
; ∎ 1'(= a13◂ [ ] )
; .mov_ptn2 1'(= a13◂ [ ] ) ⊢ 0'(= a13◂ [ ] )
; .mov_ptn 1'(= a13◂ [ ] ) ⊢ 0'(= a13◂ [ ] )
	mov rax,r14
	mov r13,rax
	ret
ETR_347: ;; mk_nil_arr 0'(= r ) ⊢ { 0'(= r ) 1'(= {| a2◂ [ q0]|} ) } : (_r64→{ _r64 _arr◂_lst◂7560'(1) })
; #22 { } ⊢ 1(<2)◂{ }
; #0 { 0'(= r ) 1(<2)◂{ } } ⊢ { 0'(= r ) 1(<2)◂{ } 1'(= {| a2◂ [ q0]|} ) }
	mov rdi,r13
	push rdi 
	lea rsi,[8+8*rdi]
	mov rdi,1 
 C_CALL_SF calloc
	pop rdi 
	mov r14,rax
	mov QWORD [rax],rdi 
LB_5363:
	cmp rdi,0 
	jz LB_5364
	sub rdi,1
	mov r9,rdi
; .mov_ptn2 1(<2)◂{ } ⊢ 2'(= {| a2◂ [ q0]|} )
	mov r10,r8
; .mov_ptn 1(<2)◂{ } ⊢ 2'(= {| a2◂ [ q0]|} )
	mov rdi,rt_err0 
	call emt_stg
	mov QWORD [err_n],0xffff_0001
	jmp err
	mov r8,rax
	mov rsi,r14
	mov rax,r8
	mov rdi,r9
	mov QWORD [rsi+8+8*rdi],rax 
	jmp LB_5363
LB_5364:
; .dlt.ptn 1(<2)◂{ }
; ∎ { 0'(= r ) 1'(= {| a2◂ [ q0]|} ) }
; .mov_ptn2 { 0'(= r ) 1'(= {| a2◂ [ q0]|} ) } ⊢ { 0'(= r ) 1'(= {| a2◂ [ q0]|} ) }
	ret
ETR_348: ;; mk_none_arr 0'(= r ) ⊢ { 0'(= r ) 1'(= {| a3◂ [ q0]|} ) } : (_r64→{ _r64 _arr◂_opn◂7575'(1) })
; #25 { } ⊢ 1(<2)◂{ }
; #0 { 0'(= r ) 1(<2)◂{ } } ⊢ { 0'(= r ) 1(<2)◂{ } 1'(= {| a3◂ [ q0]|} ) }
	mov rdi,r13
	push rdi 
	lea rsi,[8+8*rdi]
	mov rdi,1 
 C_CALL_SF calloc
	pop rdi 
	mov r14,rax
	mov QWORD [rax],rdi 
LB_5365:
	cmp rdi,0 
	jz LB_5366
	sub rdi,1
	mov r9,rdi
; .mov_ptn2 1(<2)◂{ } ⊢ 2'(= {| a3◂ [ q0]|} )
	mov r10,r8
; .mov_ptn 1(<2)◂{ } ⊢ 2'(= {| a3◂ [ q0]|} )
	mov rdi,rt_err0 
	call emt_stg
	mov QWORD [err_n],0xffff_0001
	jmp err
	mov r8,rax
	mov rsi,r14
	mov rax,r8
	mov rdi,r9
	mov QWORD [rsi+8+8*rdi],rax 
	jmp LB_5365
LB_5366:
; .dlt.ptn 1(<2)◂{ }
; ∎ { 0'(= r ) 1'(= {| a3◂ [ q0]|} ) }
; .mov_ptn2 { 0'(= r ) 1'(= {| a3◂ [ q0]|} ) } ⊢ { 0'(= r ) 1'(= {| a3◂ [ q0]|} ) }
	ret
LB_5378:
	movzx rax,BYTE [r8+6]
	jmp QWORD [LB_5381+8*rax]
LB_5381: dq LB_5379,LB_5380
LB_5379:
	push r8
	mov r8,QWORD [r8+8+8*0]
	push r8
	mov r8,QWORD [r8+8+8*0]
	mov rdi,r8
	call free_s8
	pop r8 
	push r8
	mov r8,QWORD [r8+8+8*1]
	call LB_5383
	pop r8 
	FREE_RCD 2, r8
	pop r8 
	push r8
	mov r8,QWORD [r8+8+8*1]
	call LB_5378
	pop r8 
	FREE_RCD 2, r8
	jmp LB_5382
LB_5380:
	jmp LB_5382
LB_5382:
	ret
LB_5383:
	movzx rax,BYTE [r8+6]
	jmp QWORD [LB_5386+8*rax]
LB_5386: dq LB_5384,LB_5385
LB_5384:
	FREE_LN r8 
	mov r8,QWORD [r8+8]
	jmp LB_5387
LB_5385:
	jmp LB_5387
LB_5387:
	ret
LB_5388:
	movzx rax,BYTE [r8+6]
	jmp QWORD [LB_5391+8*rax]
LB_5391: dq LB_5389,LB_5390
LB_5389:
	push r8
	mov r8,QWORD [r8+8+8*0]
	mov rdi,rt_err0 
	call emt_stg
	mov QWORD [err_n],0xffff_0002
	jmp err
	pop r8 
	push r8
	mov r8,QWORD [r8+8+8*1]
	call LB_5388
	pop r8 
	FREE_RCD 2, r8
	jmp LB_5392
LB_5390:
	jmp LB_5392
LB_5392:
	ret
LB_5393:
	movzx rax,BYTE [r8+6]
	jmp QWORD [LB_5396+8*rax]
LB_5396: dq LB_5394,LB_5395
LB_5394:
	push r8
	mov r8,QWORD [r8+8+8*0]
	mov rdi,rt_err0 
	call emt_stg
	mov QWORD [err_n],0xffff_0002
	jmp err
	pop r8 
	push r8
	mov r8,QWORD [r8+8+8*1]
	call LB_5393
	pop r8 
	FREE_RCD 2, r8
	jmp LB_5397
LB_5395:
	jmp LB_5397
LB_5397:
	ret
LB_5412: ;; #61 { 0'(= a2◂ [ *{ {| l |}a3◂ [ r]}] ) 1'(= {| l |} ) } ⊢ { 0'(= a2◂ [ *{ {| l |}a3◂ [ r]}] ) 1'(= {| l |} ) 2'(= a3◂ [ r] ) } : ({ _lst◂{ _s8 _opn◂_r64 } _s8 }→{ _lst◂{ _s8 _opn◂_r64 } _s8 _opn◂_r64 })
;; ?; 0'(= a2◂ [ *{ {| l |}a3◂ [ r]}] ) ⊢ 0(<2)◂{ { 3'(= {| l |} ) 4'(= a3◂ [ r] ) } 5'(= a2◂ [ *{ {| l |}a3◂ [ r]}] ) }
	mov rdi,r13
	cmp BYTE [rdi+6],0
	jnz LB_5413
	mov r8, QWORD [r13+8]
	mov r9, QWORD [r8+8]
	mov r10, QWORD [r8+16]
	mov QWORD [GBG_VCT+8*0],r8
	mov r11, QWORD [r13+16]
	mov QWORD [GBG_VCT+8*1],r13
	mov rdi,QWORD [GBG_VCT+8*1]
	FREE_RCD 2,rdi
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_RCD 2,rdi
	mov rdi,r9
	mov rsi,r14
	call eq_s8  
	cmp rax,1
	jnz LB_5414
;; ?; 4'(= a3◂ [ r] ) ⊢ 0(<2)◂0'(= r )
	mov rdi,r10
	cmp BYTE [rdi+6],0
	jnz LB_5415
	mov QWORD [GBG_VCT+8*0],rdi
	mov r13,QWORD [rdi+8]
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_LN rdi
; $ 0'(= r ) ⊢ 0'(= r ),2'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	mov rax,r8
	C_POP_REGS
	mov r8,rax
; #24 0'(= r ) ⊢ 0(<2)◂0'(= r )
; #23 { { 3'(= {| l |} ) 0(<2)◂0'(= r ) } 5'(= a2◂ [ *{ {| l |}a3◂ [ r]}] ) } ⊢ 0(<2)◂{ { 3'(= {| l |} ) 0(<2)◂0'(= r ) } 5'(= a2◂ [ *{ {| l |}a3◂ [ r]}] ) }
; #24 2'(= r ) ⊢ 0(<2)◂2'(= r )
; ∎ { 0(<2)◂{ { 3'(= {| l |} ) 0(<2)◂0'(= r ) } 5'(= a2◂ [ *{ {| l |}a3◂ [ r]}] ) } 1'(= {| l |} ) 0(<2)◂2'(= r ) }
; .mov_ptn2 { 0(<2)◂{ { 3'(= {| l |} ) 0(<2)◂0'(= r ) } 5'(= a2◂ [ *{ {| l |}a3◂ [ r]}] ) } 1'(= {| l |} ) 0(<2)◂2'(= r ) } ⊢ { 0'(= a2◂ [ *{ {| l |}a3◂ [ r]}] ) 1'(= {| l |} ) 2'(= a3◂ [ r] ) }
	mov r10,r8
; .mov_ptn 0(<2)◂4'(= r ) ⊢ 2'(= a3◂ [ r] )
	mov rax,r10
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	mov rcx,r13
; .mov_ptn 0(<2)◂{ { 3'(= {| l |} ) 0(<2)◂6'(= r ) } 5'(= a2◂ [ *{ {| l |}a3◂ [ r]}] ) } ⊢ 0'(= a2◂ [ *{ {| l |}a3◂ [ r]}] )
	ALC_RCD 2, rax
	mov r10,rax
	ALC_RCD 2, rax
	mov rdx,rax
	mov rax,r9
	mov QWORD [rdx+8+8*0],rax
	mov rax,rcx
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov QWORD [rdx+8+8*1],rax
	mov rax,rdx
	mov QWORD [r10+8+8*0],rax
	mov rax,r11
	mov QWORD [r10+8+8*1],rax
	mov rax,r10
	mov BYTE [rax+6],0
	mov r13,rax
	ret
LB_5415:
; #23 { { 3'(= {| l |} ) 4'(= a3◂ [ r] ) } 5'(= a2◂ [ *{ {| l |}a3◂ [ r]}] ) } ⊢ 0(<2)◂{ { 3'(= {| l |} ) 4'(= a3◂ [ r] ) } 5'(= a2◂ [ *{ {| l |}a3◂ [ r]}] ) }
; #25 { } ⊢ 1(<2)◂{ }
; ∎ { 0(<2)◂{ { 3'(= {| l |} ) 4'(= a3◂ [ r] ) } 5'(= a2◂ [ *{ {| l |}a3◂ [ r]}] ) } 1'(= {| l |} ) 1(<2)◂{ } }
; .mov_ptn2 { 0(<2)◂{ { 3'(= {| l |} ) 4'(= a3◂ [ r] ) } 5'(= a2◂ [ *{ {| l |}a3◂ [ r]}] ) } 1'(= {| l |} ) 1(<2)◂{ } } ⊢ { 0'(= a2◂ [ *{ {| l |}a3◂ [ r]}] ) 1'(= {| l |} ) 2'(= a3◂ [ r] ) }
; .mov_ptn 1(<2)◂{ } ⊢ 2'(= a3◂ [ r] )
	mov rax,unt 
	mov rax,unt_1
	mov r8,rax
; .mov_ptn 0(<2)◂{ { 3'(= {| l |} ) 4'(= a3◂ [ r] ) } 5'(= a2◂ [ *{ {| l |}a3◂ [ r]}] ) } ⊢ 0'(= a2◂ [ *{ {| l |}a3◂ [ r]}] )
	ALC_RCD 2, rax
	mov rcx,rax
	ALC_RCD 2, rax
	mov rdx,rax
	mov rax,r9
	mov QWORD [rdx+8+8*0],rax
	mov rax,r10
	mov QWORD [rdx+8+8*1],rax
	mov rax,rdx
	mov QWORD [rcx+8+8*0],rax
	mov rax,r11
	mov QWORD [rcx+8+8*1],rax
	mov rax,rcx
	mov BYTE [rax+6],0
	mov r13,rax
	ret
LB_5414:
; #61 { 5'(= a2◂ [ *{ {| l |}a3◂ [ r]}] ) 1'(= {| l |} ) } ⊢ { 0'(= a2◂ [ *{ {| l |}a3◂ [ r]}] ) 1'(= {| l |} ) 2'(= a3◂ [ r] ) }
	sub rsp,16
	mov QWORD [rsp+8*0],r9
	mov QWORD [rsp+8*1],r10
; .mov_ptn2 { 5'(= a2◂ [ *{ {| l |}a3◂ [ r]}] ) 1'(= {| l |} ) } ⊢ { 0'(= a2◂ [ *{ {| l |}a3◂ [ r]}] ) 1'(= {| l |} ) }
; .mov_ptn 5'(= a2◂ [ *{ {| l |}a3◂ [ r]}] ) ⊢ 0'(= a2◂ [ *{ {| l |}a3◂ [ r]}] )
	mov rax,r11
	mov r13,rax
	call LB_5412
	mov r10,QWORD [rsp-8+8*2]
	mov r9,QWORD [rsp-8+8*1]
	add rsp,16
; #23 { { 3'(= {| l |} ) 4'(= a3◂ [ r] ) } 0'(= a2◂ [ *{ {| l |}a3◂ [ r]}] ) } ⊢ 0(<2)◂{ { 3'(= {| l |} ) 4'(= a3◂ [ r] ) } 0'(= a2◂ [ *{ {| l |}a3◂ [ r]}] ) }
; ∎ { 0(<2)◂{ { 3'(= {| l |} ) 4'(= a3◂ [ r] ) } 0'(= a2◂ [ *{ {| l |}a3◂ [ r]}] ) } 1'(= {| l |} ) 2'(= a3◂ [ r] ) }
; .mov_ptn2 { 0(<2)◂{ { 3'(= {| l |} ) 4'(= a3◂ [ r] ) } 0'(= a2◂ [ *{ {| l |}a3◂ [ r]}] ) } 1'(= {| l |} ) 2'(= a3◂ [ r] ) } ⊢ { 0'(= a2◂ [ *{ {| l |}a3◂ [ r]}] ) 1'(= {| l |} ) 2'(= a3◂ [ r] ) }
	mov r11,r13
; .mov_ptn 0(<2)◂{ { 3'(= {| l |} ) 4'(= a3◂ [ r] ) } 5'(= a2◂ [ *{ {| l |}a3◂ [ r]}] ) } ⊢ 0'(= a2◂ [ *{ {| l |}a3◂ [ r]}] )
	ALC_RCD 2, rax
	mov rcx,rax
	ALC_RCD 2, rax
	mov rdx,rax
	mov rax,r9
	mov QWORD [rdx+8+8*0],rax
	mov rax,r10
	mov QWORD [rdx+8+8*1],rax
	mov rax,rdx
	mov QWORD [rcx+8+8*0],rax
	mov rax,r11
	mov QWORD [rcx+8+8*1],rax
	mov rax,rcx
	mov BYTE [rax+6],0
	mov r13,rax
	ret
LB_5413:
; #25 { } ⊢ 1(<2)◂{ }
; ∎ { 0'(= a2◂ [ *{ {| l |}a3◂ [ r]}] ) 1'(= {| l |} ) 1(<2)◂{ } }
; .mov_ptn2 { 0'(= a2◂ [ *{ {| l |}a3◂ [ r]}] ) 1'(= {| l |} ) 1(<2)◂{ } } ⊢ { 0'(= a2◂ [ *{ {| l |}a3◂ [ r]}] ) 1'(= {| l |} ) 2'(= a3◂ [ r] ) }
; .mov_ptn 1(<2)◂{ } ⊢ 2'(= a3◂ [ r] )
	mov rax,unt 
	mov rax,unt_1
	mov r8,rax
	ret
LB_5417:
	movzx rax,BYTE [r8+6]
	jmp QWORD [LB_5420+8*rax]
LB_5420: dq LB_5418,LB_5419
LB_5418:
	ALC_RCD 2,r9
	push r8
	push r9
	mov r8,QWORD [r8+8+8*0]
	ALC_RCD 2,r9
	push r8
	push r9
	mov r8,QWORD [r8+8+8*0]
	C_PUSH_REGS
	mov rdi,r8  
	call rpc_s8  
	C_POP_REGS
	pop r9  
	pop r8 
	mov QWORD [r9+8+8*0],rax
	push r8
	push r9
	mov r8,QWORD [r8+8+8*1]
	call LB_5422
	pop r9  
	pop r8 
	mov QWORD [r9+8+8*1],rax
	mov rax,r9 
	pop r9  
	pop r8 
	mov QWORD [r9+8+8*0],rax
	push r8
	push r9
	mov r8,QWORD [r8+8+8*1]
	call LB_5417
	pop r9  
	pop r8 
	mov QWORD [r9+8+8*1],rax
	mov rax,r9 
	mov BYTE [rax+6],0
	jmp LB_5421
LB_5419:
	mov rax,unt
	mov BYTE [rax+6],1
	jmp LB_5421
LB_5421:
	ret
LB_5422:
	movzx rax,BYTE [r8+6]
	jmp QWORD [LB_5425+8*rax]
LB_5425: dq LB_5423,LB_5424
LB_5423:
	mov r8,QWORD [r8+8]
	mov rax,r8
	ALC_LN rsi 
	mov BYTE [rsi+6],0
	mov QWORD [rsi+8],rax
	mov rax,rsi
	jmp LB_5426
LB_5424:
	mov rax,unt
	mov BYTE [rax+6],1
	jmp LB_5426
LB_5426:
	ret
LB_5427:
	movzx rax,BYTE [r8+6]
	jmp QWORD [LB_5430+8*rax]
LB_5430: dq LB_5428,LB_5429
LB_5428:
	push r8
	mov r8,QWORD [r8+8+8*0]
	push r8
	mov r8,QWORD [r8+8+8*0]
	mov rdi,rt_err0 
	call emt_stg
	mov QWORD [err_n],0xffff_0002
	jmp err
	pop r8 
	push r8
	mov r8,QWORD [r8+8+8*1]
	call LB_5378
	pop r8 
	push r8
	mov r8,QWORD [r8+8+8*2]
	mov rdi,rt_err0 
	call emt_stg
	mov QWORD [err_n],0xffff_0002
	jmp err
	pop r8 
	push r8
	mov r8,QWORD [r8+8+8*3]
	mov rdi,rt_err0 
	call emt_stg
	mov QWORD [err_n],0xffff_0002
	jmp err
	pop r8 
	FREE_RCD 4, r8
	pop r8 
	push r8
	mov r8,QWORD [r8+8+8*1]
	call LB_5427
	pop r8 
	FREE_RCD 2, r8
	jmp LB_5431
LB_5429:
	jmp LB_5431
LB_5431:
	ret
LB_5410: ;; #345 { 0'(= a17◂ [ ] ) 1'(= {| a2◂ [ *{ {| l |}a3◂ [ r]}]|} ) 2'(= a2◂ [ *{ {| l |}a3◂ [ r]}] ) 3'(= a2◂ [ *{ q0a2◂ [ *{ {| l |}a3◂ [ r]}]q1q2}] ) } ⊢ { 0'(= {| a2◂ [ *{ {| l |}a3◂ [ r]}]|} ) 1'(= a2◂ [ *{ {| l |}a3◂ [ r]}] ) 2'(= a2◂ [ *{ q0a2◂ [ *{ {| l |}a3◂ [ r]}]q1q2}] ) 3'(= r ) } : ({ _t17 _arr◂_lst◂{ _s8 _opn◂_r64 } _lst◂{ _s8 _opn◂_r64 } _lst◂{ 7748'(=7754'(1)) _lst◂{ _s8 _opn◂_r64 } 7749'(=7755'(1)) 7750'(=7756'(1)) } }→{ _arr◂_lst◂{ _s8 _opn◂_r64 } _lst◂{ _s8 _opn◂_r64 } _lst◂{ 7751'(=7754'(1)) _lst◂{ _s8 _opn◂_r64 } 7752'(=7755'(1)) 7753'(=7756'(1)) } _r64 })
;; ? 0'(= a17◂ [ ] ) ⊢ 0(<2)◂{ 4'(= {| l |} ) 5'(= a17◂ [ ] ) }
	mov rdi,r13
	cmp BYTE [rdi+6],0
	jnz LB_5411
	mov r10, QWORD [r13+8]
	mov r11, QWORD [r13+16]
	mov QWORD [GBG_VCT+8*0],r13
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_RCD 2,rdi
; #61 { 2'(= a2◂ [ *{ {| l |}a3◂ [ r]}] ) 4'(= {| l |} ) } ⊢ { 0'(= a2◂ [ *{ {| l |}a3◂ [ r]}] ) 4'(= {| l |} ) 2'(= a3◂ [ r] ) }
	sub rsp,24
	mov QWORD [rsp+8*0],r14
	mov QWORD [rsp+8*1],r9
	mov QWORD [rsp+8*2],r11
; .mov_ptn2 { 2'(= a2◂ [ *{ {| l |}a3◂ [ r]}] ) 4'(= {| l |} ) } ⊢ { 0'(= a2◂ [ *{ {| l |}a3◂ [ r]}] ) 1'(= {| l |} ) }
; .mov_ptn 4'(= {| l |} ) ⊢ 1'(= {| l |} )
	mov rax,r10
	mov r14,rax
; .mov_ptn 2'(= a2◂ [ *{ {| l |}a3◂ [ r]}] ) ⊢ 0'(= a2◂ [ *{ {| l |}a3◂ [ r]}] )
	mov rax,r8
	mov r13,rax
	call LB_5412
	mov r11,QWORD [rsp-8+8*3]
	mov r9,QWORD [rsp-8+8*2]
	mov r10,r14
	mov r14,QWORD [rsp-8+8*1]
	add rsp,24
;; ? 2'(= a3◂ [ r] ) ⊢ 0(<2)◂6'(= r )
	mov rdi,r8
	cmp BYTE [rdi+6],0
	jnz LB_5416
	mov QWORD [GBG_VCT+8*0],rdi
	mov rcx,QWORD [rdi+8]
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_LN rdi
; #4 { 1'(= {| a2◂ [ *{ {| l |}a3◂ [ r]}]|} ) 6'(= r ) } ⊢ { 1'(= {| a2◂ [ *{ {| l |}a3◂ [ r]}]|} ) 6'(= r ) 7'(= a2◂ [ *{ {| l |}a3◂ [ r]}] ) }
	mov rax,rcx
	mov rdi,r14
	mov rsi,0x0000_ffff_ffff_ffff 
	and rsi,QWORD [rdi]
	cmp rax,rsi 
	jge err 
	mov rdi,[rdi+8+8*rax]
	C_PUSH_REGS
	mov r8,rdi
	call LB_5417
	C_POP_REGS
	mov r8,rax
; .mov_ptn2 2'(= a2◂ [ *{ {| l |}a3◂ [ r]}] ) ⊢ 7'(= a2◂ [ *{ {| l |}a3◂ [ r]}] )
	sub rsp,8
	mov QWORD [rsp-8+8*1],rdx
; .mov_ptn 2'(= a2◂ [ *{ {| l |}a3◂ [ r]}] ) ⊢ 7'(= a2◂ [ *{ {| l |}a3◂ [ r]}] )
	mov rax,r8
	mov rdx,rax
; #22 { } ⊢ 1(<2)◂{ }
; #345 { 5'(= a17◂ [ ] ) 1'(= {| a2◂ [ *{ {| l |}a3◂ [ r]}]|} ) 7'(= a2◂ [ *{ {| l |}a3◂ [ r]}] ) 1(<2)◂{ } } ⊢ { 7'(= {| a2◂ [ *{ {| l |}a3◂ [ r]}]|} ) 1'(= a2◂ [ *{ {| l |}a3◂ [ r]}] ) 2'(= a2◂ [ *{ q0a2◂ [ *{ {| l |}a3◂ [ r]}]q1q2}] ) 5'(= r ) }
	sub rsp,32
	mov QWORD [rsp+8*0],r13
	mov QWORD [rsp+8*1],r9
	mov QWORD [rsp+8*2],r10
	mov QWORD [rsp+8*3],rcx
; .mov_ptn2 { 5'(= a17◂ [ ] ) 1'(= {| a2◂ [ *{ {| l |}a3◂ [ r]}]|} ) 7'(= a2◂ [ *{ {| l |}a3◂ [ r]}] ) 1(<2)◂{ } } ⊢ { 0'(= a17◂ [ ] ) 1'(= {| a2◂ [ *{ {| l |}a3◂ [ r]}]|} ) 2'(= a2◂ [ *{ {| l |}a3◂ [ r]}] ) 3'(= a2◂ [ *{ q0a2◂ [ *{ {| l |}a3◂ [ r]}]q1q2}] ) }
; .mov_ptn 1(<2)◂{ } ⊢ 3'(= a2◂ [ *{ q0a2◂ [ *{ {| l |}a3◂ [ r]}]q1q2}] )
	mov rax,unt 
	mov rax,unt_1
	mov r9,rax
; .mov_ptn 7'(= a2◂ [ *{ {| l |}a3◂ [ r]}] ) ⊢ 2'(= a2◂ [ *{ {| l |}a3◂ [ r]}] )
	mov rax,rdx
	mov r8,rax
; .mov_ptn 5'(= a17◂ [ ] ) ⊢ 0'(= a17◂ [ ] )
	mov rax,r11
	mov r13,rax
	call LB_5410
	mov rcx,QWORD [rsp-8+8*4]
	mov r10,QWORD [rsp-8+8*3]
	mov r11,r9
	mov r9,QWORD [rsp-8+8*2]
	mov rdx,r13
	mov r13,QWORD [rsp-8+8*1]
	add rsp,40
; ∎ { 7'(= {| a2◂ [ *{ {| l |}a3◂ [ r]}]|} ) 0'(= a2◂ [ *{ {| l |}a3◂ [ r]}] ) 3'(= a2◂ [ *{ q0a2◂ [ *{ {| l |}a3◂ [ r]}]q1q2}] ) 5'(= r ) }
; .dlt.ptn 2'(= a2◂ [ *{ q0a2◂ [ *{ {| l |}a3◂ [ r]}]q1q2}] )
	mov rdi,r8
	C_PUSH_REGS
	mov r8,rdi
	call LB_5427
	C_POP_REGS
; .dlt.ptn 1'(= a2◂ [ *{ {| l |}a3◂ [ r]}] )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	call LB_5378
	C_POP_REGS
; .dlt.ptn 6'(= r )
	mov rdi,rcx
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 4'(= {| l |} )
	mov rdi,r10
	C_PUSH_REGS
	mov r8,rdi
	mov rdi,r8
	call free_s8
	C_POP_REGS
; .mov_ptn2 { 7'(= {| a2◂ [ *{ {| l |}a3◂ [ r]}]|} ) 0'(= a2◂ [ *{ {| l |}a3◂ [ r]}] ) 3'(= a2◂ [ *{ q0a2◂ [ *{ {| l |}a3◂ [ r]}]q1q2}] ) 5'(= r ) } ⊢ { 0'(= {| a2◂ [ *{ {| l |}a3◂ [ r]}]|} ) 1'(= a2◂ [ *{ {| l |}a3◂ [ r]}] ) 2'(= a2◂ [ *{ q0a2◂ [ *{ {| l |}a3◂ [ r]}]q1q2}] ) 3'(= r ) }
	mov r10,r9
; .mov_ptn 5'(= r ) ⊢ 3'(= r )
	mov rax,r11
	mov r9,rax
; .mov_ptn 0'(= a2◂ [ *{ {| l |}a3◂ [ r]}] ) ⊢ 1'(= a2◂ [ *{ {| l |}a3◂ [ r]}] )
	mov rax,r13
	mov r14,rax
; .mov_ptn 4'(= a2◂ [ *{ q0a2◂ [ *{ {| l |}a3◂ [ r]}]q1q2}] ) ⊢ 2'(= a2◂ [ *{ q0a2◂ [ *{ {| l |}a3◂ [ r]}]q1q2}] )
	mov rax,r10
	mov r8,rax
; .mov_ptn 7'(= {| a2◂ [ *{ {| l |}a3◂ [ r]}]|} ) ⊢ 0'(= {| a2◂ [ *{ {| l |}a3◂ [ r]}]|} )
	mov rax,rdx
	mov r13,rax
	ret
LB_5416:
;; ?. 2'(= a3◂ [ r] ) ⊢ 1(<2)◂{ }
;; ? 3'(= a2◂ [ *{ q0a2◂ [ *{ {| l |}a3◂ [ r]}]q1q2}] ) ⊢ 0(<2)◂{ { 6'(= q0 ) 7'(= a2◂ [ *{ {| l |}a3◂ [ r]}] ) 8'(= q1 ) 9'(= q2 ) } 10'(= a2◂ [ *{ q0a2◂ [ *{ {| l |}a3◂ [ r]}]q1q2}] ) }
	mov rdi,r9
	cmp BYTE [rdi+6],0
	jnz LB_5432
	mov r8, QWORD [r9+8]
	mov rcx, QWORD [r8+8]
	mov rdx, QWORD [r8+16]
	sub rsp,8
	MOV_RDI QWORD [rsp-8+8*1], QWORD [r8+24]
	sub rsp,8
	MOV_RDI QWORD [rsp-8+8*1], QWORD [r8+32]
	mov QWORD [GBG_VCT+8*0],r8
	sub rsp,8
	MOV_RDI QWORD [rsp-8+8*1], QWORD [r9+16]
	mov QWORD [GBG_VCT+8*1],r9
	mov rdi,QWORD [GBG_VCT+8*1]
	FREE_RCD 2,rdi
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_RCD 4,rdi
; #84 { 4'(= {| l |} ) 5'(= a17◂ [ ] ) } ⊢ 0(<2)◂{ 4'(= {| l |} ) 5'(= a17◂ [ ] ) }
; #345 { 0(<2)◂{ 4'(= {| l |} ) 5'(= a17◂ [ ] ) } 1'(= {| a2◂ [ *{ {| l |}a3◂ [ r]}]|} ) 7'(= a2◂ [ *{ {| l |}a3◂ [ r]}] ) 10'(= a2◂ [ *{ q0a2◂ [ *{ {| l |}a3◂ [ r]}]q1q2}] ) } ⊢ { 4'(= {| a2◂ [ *{ {| l |}a3◂ [ r]}]|} ) 1'(= a2◂ [ *{ {| l |}a3◂ [ r]}] ) 2'(= a2◂ [ *{ q0a2◂ [ *{ {| l |}a3◂ [ r]}]q1q2}] ) 3'(= r ) }
	sub rsp,16
	mov QWORD [rsp+8*0],r13
	mov QWORD [rsp+8*1],rcx
; .mov_ptn2 { 0(<2)◂{ 4'(= {| l |} ) 5'(= a17◂ [ ] ) } 1'(= {| a2◂ [ *{ {| l |}a3◂ [ r]}]|} ) 7'(= a2◂ [ *{ {| l |}a3◂ [ r]}] ) 10'(= a2◂ [ *{ q0a2◂ [ *{ {| l |}a3◂ [ r]}]q1q2}] ) } ⊢ { 0'(= a17◂ [ ] ) 1'(= {| a2◂ [ *{ {| l |}a3◂ [ r]}]|} ) 2'(= a2◂ [ *{ {| l |}a3◂ [ r]}] ) 3'(= a2◂ [ *{ q0a2◂ [ *{ {| l |}a3◂ [ r]}]q1q2}] ) }
; .mov_ptn 10'(= a2◂ [ *{ q0a2◂ [ *{ {| l |}a3◂ [ r]}]q1q2}] ) ⊢ 3'(= a2◂ [ *{ q0a2◂ [ *{ {| l |}a3◂ [ r]}]q1q2}] )
	mov rax,QWORD [rsp-8+8*3]
	mov r9,rax
; .mov_ptn 7'(= a2◂ [ *{ {| l |}a3◂ [ r]}] ) ⊢ 2'(= a2◂ [ *{ {| l |}a3◂ [ r]}] )
	mov rax,rdx
	mov r8,rax
; .mov_ptn 0(<2)◂{ 4'(= {| l |} ) 5'(= a17◂ [ ] ) } ⊢ 0'(= a17◂ [ ] )
	ALC_RCD 2, rax
	mov rcx,rax
	mov rax,r10
	mov QWORD [rcx+8+8*0],rax
	mov rax,r11
	mov QWORD [rcx+8+8*1],rax
	mov rax,rcx
	mov BYTE [rax+6],0
	mov r13,rax
	call LB_5410
	mov rcx,QWORD [rsp-8+8*2]
	mov r10,r13
	mov r13,QWORD [rsp-8+8*1]
	add rsp,24
; #23 { { 6'(= q0 ) 1'(= a2◂ [ *{ {| l |}a3◂ [ r]}] ) 8'(= q1 ) 9'(= q2 ) } 2'(= a2◂ [ *{ q0a2◂ [ *{ {| l |}a3◂ [ r]}]q1q2}] ) } ⊢ 0(<2)◂{ { 6'(= q0 ) 1'(= a2◂ [ *{ {| l |}a3◂ [ r]}] ) 8'(= q1 ) 9'(= q2 ) } 2'(= a2◂ [ *{ q0a2◂ [ *{ {| l |}a3◂ [ r]}]q1q2}] ) }
; ∎ { 4'(= {| a2◂ [ *{ {| l |}a3◂ [ r]}]|} ) 0'(= a2◂ [ *{ {| l |}a3◂ [ r]}] ) 0(<2)◂{ { 6'(= q0 ) 1'(= a2◂ [ *{ {| l |}a3◂ [ r]}] ) 8'(= q1 ) 9'(= q2 ) } 2'(= a2◂ [ *{ q0a2◂ [ *{ {| l |}a3◂ [ r]}]q1q2}] ) } 3'(= r ) }
; .mov_ptn2 { 4'(= {| a2◂ [ *{ {| l |}a3◂ [ r]}]|} ) 0'(= a2◂ [ *{ {| l |}a3◂ [ r]}] ) 0(<2)◂{ { 6'(= q0 ) 1'(= a2◂ [ *{ {| l |}a3◂ [ r]}] ) 8'(= q1 ) 9'(= q2 ) } 2'(= a2◂ [ *{ q0a2◂ [ *{ {| l |}a3◂ [ r]}]q1q2}] ) } 3'(= r ) } ⊢ { 0'(= {| a2◂ [ *{ {| l |}a3◂ [ r]}]|} ) 1'(= a2◂ [ *{ {| l |}a3◂ [ r]}] ) 2'(= a2◂ [ *{ q0a2◂ [ *{ {| l |}a3◂ [ r]}]q1q2}] ) 3'(= r ) }
	mov r11,r8
; .mov_ptn 0(<2)◂{ { 6'(= q0 ) 1'(= a2◂ [ *{ {| l |}a3◂ [ r]}] ) 8'(= q1 ) 9'(= q2 ) } 5'(= a2◂ [ *{ q0a2◂ [ *{ {| l |}a3◂ [ r]}]q1q2}] ) } ⊢ 2'(= a2◂ [ *{ q0a2◂ [ *{ {| l |}a3◂ [ r]}]q1q2}] )
	ALC_RCD 2, rax
	mov rdx,rax
	sub rsp,8
	ALC_RCD 4, rax
	mov QWORD [rsp-8+8*1],rax
	mov rax,rcx
	mov rdi,QWORD [rsp-8+8*1]
	mov QWORD [rdi+8+8*0],rax
	mov rax,r14
	mov rdi,QWORD [rsp-8+8*1]
	mov QWORD [rdi+8+8*1],rax
	mov rax,QWORD [rsp-8+8*3]
	mov rdi,QWORD [rsp-8+8*1]
	mov QWORD [rdi+8+8*2],rax
	mov rax,QWORD [rsp-8+8*2]
	mov rdi,QWORD [rsp-8+8*1]
	mov QWORD [rdi+8+8*3],rax
	mov rax,QWORD [rsp-8+8*1]
	mov QWORD [rdx+8+8*0],rax
	mov rax,r11
	mov QWORD [rdx+8+8*1],rax
	mov rax,rdx
	mov BYTE [rax+6],0
	mov r8,rax
; .mov_ptn 0'(= a2◂ [ *{ {| l |}a3◂ [ r]}] ) ⊢ 1'(= a2◂ [ *{ {| l |}a3◂ [ r]}] )
	mov rax,r13
	mov r14,rax
; .mov_ptn 4'(= {| a2◂ [ *{ {| l |}a3◂ [ r]}]|} ) ⊢ 0'(= {| a2◂ [ *{ {| l |}a3◂ [ r]}]|} )
	mov rax,r10
	mov r13,rax
	add rsp,24
	ret
LB_5432:
;; ?. 3'(= a2◂ [ *{ q0a2◂ [ *{ {| l |}a3◂ [ r]}]q1q2}] ) ⊢ 1(<2)◂{ }
; #10 %[ "slv_ns_m 0:not found" ] ⊢ %[ "slv_ns_m 0:not found" ]
	mov rdi,fmt_emt
	call emt_stg
	mov rdi,LB_5433
	call emt_stg 
	mov rdi,fmt_nl
	call emt_stg
	jmp LB_5434
LB_5434:
; .dlt.ptn %[ "slv_ns_m 0:not found" ]
; #10 4'(= {| l |} ) ⊢ 4'(= {| l |} )
	mov rdi,fmt_emt
	call emt_stg
	mov rdi,r10
	C_PUSH_REGS
	mov r8,rdi
	mov rdi,r8
	call emt_s8
	C_POP_REGS
	mov rdi,fmt_nl
	call emt_stg
	jmp LB_5435
LB_5435:
; .dlt.ptn 4'(= {| l |} )
	mov rdi,r10
	C_PUSH_REGS
	mov r8,rdi
	mov rdi,r8
	call free_s8
	C_POP_REGS
	mov rdi,LB_5436
	call emt_stg 
	jmp err
LB_5411:
;; ?. 0'(= a17◂ [ ] ) ⊢ 1(<2)◂0'(= {| l |} )
; #61 { 2'(= a2◂ [ *{ {| l |}a3◂ [ r]}] ) 0'(= {| l |} ) } ⊢ { 0'(= a2◂ [ *{ {| l |}a3◂ [ r]}] ) 4'(= {| l |} ) 2'(= a3◂ [ r] ) }
	sub rsp,16
	mov QWORD [rsp+8*0],r14
	mov QWORD [rsp+8*1],r9
; .mov_ptn2 { 2'(= a2◂ [ *{ {| l |}a3◂ [ r]}] ) 0'(= {| l |} ) } ⊢ { 0'(= a2◂ [ *{ {| l |}a3◂ [ r]}] ) 1'(= {| l |} ) }
; .mov_ptn 0'(= {| l |} ) ⊢ 1'(= {| l |} )
	mov rax,r13
	mov r14,rax
; .mov_ptn 2'(= a2◂ [ *{ {| l |}a3◂ [ r]}] ) ⊢ 0'(= a2◂ [ *{ {| l |}a3◂ [ r]}] )
	mov rax,r8
	mov r13,rax
	call LB_5412
	mov r9,QWORD [rsp-8+8*2]
	mov r10,r14
	mov r14,QWORD [rsp-8+8*1]
	add rsp,16
;; ? 2'(= a3◂ [ r] ) ⊢ 0(<2)◂5'(= r )
	mov rdi,r8
	cmp BYTE [rdi+6],0
	jnz LB_5437
	mov QWORD [GBG_VCT+8*0],rdi
	mov r11,QWORD [rdi+8]
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_LN rdi
; ∎ { 1'(= {| a2◂ [ *{ {| l |}a3◂ [ r]}]|} ) 0'(= a2◂ [ *{ {| l |}a3◂ [ r]}] ) 3'(= a2◂ [ *{ q0a2◂ [ *{ {| l |}a3◂ [ r]}]q1q2}] ) 5'(= r ) }
; .dlt.ptn 4'(= {| l |} )
	mov rdi,r10
	C_PUSH_REGS
	mov r8,rdi
	mov rdi,r8
	call free_s8
	C_POP_REGS
; .mov_ptn2 { 1'(= {| a2◂ [ *{ {| l |}a3◂ [ r]}]|} ) 0'(= a2◂ [ *{ {| l |}a3◂ [ r]}] ) 3'(= a2◂ [ *{ q0a2◂ [ *{ {| l |}a3◂ [ r]}]q1q2}] ) 5'(= r ) } ⊢ { 0'(= {| a2◂ [ *{ {| l |}a3◂ [ r]}]|} ) 1'(= a2◂ [ *{ {| l |}a3◂ [ r]}] ) 2'(= a2◂ [ *{ q0a2◂ [ *{ {| l |}a3◂ [ r]}]q1q2}] ) 3'(= r ) }
	mov r10,r9
; .mov_ptn 5'(= r ) ⊢ 3'(= r )
	mov rax,r11
	mov r9,rax
	mov rcx,r14
; .mov_ptn 0'(= a2◂ [ *{ {| l |}a3◂ [ r]}] ) ⊢ 1'(= a2◂ [ *{ {| l |}a3◂ [ r]}] )
	mov rax,r13
	mov r14,rax
; .mov_ptn 4'(= a2◂ [ *{ q0a2◂ [ *{ {| l |}a3◂ [ r]}]q1q2}] ) ⊢ 2'(= a2◂ [ *{ q0a2◂ [ *{ {| l |}a3◂ [ r]}]q1q2}] )
	mov rax,r10
	mov r8,rax
; .mov_ptn 6'(= {| a2◂ [ *{ {| l |}a3◂ [ r]}]|} ) ⊢ 0'(= {| a2◂ [ *{ {| l |}a3◂ [ r]}]|} )
	mov rax,rcx
	mov r13,rax
	ret
LB_5437:
;; ?. 2'(= a3◂ [ r] ) ⊢ 1(<2)◂{ }
;; ? 3'(= a2◂ [ *{ q0a2◂ [ *{ {| l |}a3◂ [ r]}]q1q2}] ) ⊢ 0(<2)◂{ { 5'(= q0 ) 6'(= a2◂ [ *{ {| l |}a3◂ [ r]}] ) 7'(= q1 ) 8'(= q2 ) } 9'(= a2◂ [ *{ q0a2◂ [ *{ {| l |}a3◂ [ r]}]q1q2}] ) }
	mov rdi,r9
	cmp BYTE [rdi+6],0
	jnz LB_5438
	mov r8, QWORD [r9+8]
	mov r11, QWORD [r8+8]
	mov rcx, QWORD [r8+16]
	mov rdx, QWORD [r8+24]
	sub rsp,8
	MOV_RDI QWORD [rsp-8+8*1], QWORD [r8+32]
	mov QWORD [GBG_VCT+8*0],r8
	sub rsp,8
	MOV_RDI QWORD [rsp-8+8*1], QWORD [r9+16]
	mov QWORD [GBG_VCT+8*1],r9
	mov rdi,QWORD [GBG_VCT+8*1]
	FREE_RCD 2,rdi
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_RCD 4,rdi
; #83 4'(= {| l |} ) ⊢ 1(<2)◂4'(= {| l |} )
; #345 { 1(<2)◂4'(= {| l |} ) 1'(= {| a2◂ [ *{ {| l |}a3◂ [ r]}]|} ) 6'(= a2◂ [ *{ {| l |}a3◂ [ r]}] ) 9'(= a2◂ [ *{ q0a2◂ [ *{ {| l |}a3◂ [ r]}]q1q2}] ) } ⊢ { 4'(= {| a2◂ [ *{ {| l |}a3◂ [ r]}]|} ) 1'(= a2◂ [ *{ {| l |}a3◂ [ r]}] ) 2'(= a2◂ [ *{ q0a2◂ [ *{ {| l |}a3◂ [ r]}]q1q2}] ) 3'(= r ) }
	sub rsp,24
	mov QWORD [rsp+8*0],r13
	mov QWORD [rsp+8*1],r11
	mov QWORD [rsp+8*2],rdx
; .mov_ptn2 { 1(<2)◂4'(= {| l |} ) 1'(= {| a2◂ [ *{ {| l |}a3◂ [ r]}]|} ) 6'(= a2◂ [ *{ {| l |}a3◂ [ r]}] ) 9'(= a2◂ [ *{ q0a2◂ [ *{ {| l |}a3◂ [ r]}]q1q2}] ) } ⊢ { 0'(= a17◂ [ ] ) 1'(= {| a2◂ [ *{ {| l |}a3◂ [ r]}]|} ) 2'(= a2◂ [ *{ {| l |}a3◂ [ r]}] ) 3'(= a2◂ [ *{ q0a2◂ [ *{ {| l |}a3◂ [ r]}]q1q2}] ) }
; .mov_ptn 9'(= a2◂ [ *{ q0a2◂ [ *{ {| l |}a3◂ [ r]}]q1q2}] ) ⊢ 3'(= a2◂ [ *{ q0a2◂ [ *{ {| l |}a3◂ [ r]}]q1q2}] )
	mov rax,QWORD [rsp-8+8*4]
	mov r9,rax
; .mov_ptn 6'(= a2◂ [ *{ {| l |}a3◂ [ r]}] ) ⊢ 2'(= a2◂ [ *{ {| l |}a3◂ [ r]}] )
	mov rax,rcx
	mov r8,rax
; .mov_ptn 1(<2)◂4'(= {| l |} ) ⊢ 0'(= a17◂ [ ] )
	mov rax,r10
	mov BYTE [rax+6],1
	mov r13,rax
	call LB_5410
	mov rdx,QWORD [rsp-8+8*3]
	mov r11,QWORD [rsp-8+8*2]
	mov r10,r13
	mov r13,QWORD [rsp-8+8*1]
	add rsp,32
; #23 { { 5'(= q0 ) 1'(= a2◂ [ *{ {| l |}a3◂ [ r]}] ) 7'(= q1 ) 8'(= q2 ) } 2'(= a2◂ [ *{ q0a2◂ [ *{ {| l |}a3◂ [ r]}]q1q2}] ) } ⊢ 0(<2)◂{ { 5'(= q0 ) 1'(= a2◂ [ *{ {| l |}a3◂ [ r]}] ) 7'(= q1 ) 8'(= q2 ) } 2'(= a2◂ [ *{ q0a2◂ [ *{ {| l |}a3◂ [ r]}]q1q2}] ) }
; ∎ { 4'(= {| a2◂ [ *{ {| l |}a3◂ [ r]}]|} ) 0'(= a2◂ [ *{ {| l |}a3◂ [ r]}] ) 0(<2)◂{ { 5'(= q0 ) 1'(= a2◂ [ *{ {| l |}a3◂ [ r]}] ) 7'(= q1 ) 8'(= q2 ) } 2'(= a2◂ [ *{ q0a2◂ [ *{ {| l |}a3◂ [ r]}]q1q2}] ) } 3'(= r ) }
; .mov_ptn2 { 4'(= {| a2◂ [ *{ {| l |}a3◂ [ r]}]|} ) 0'(= a2◂ [ *{ {| l |}a3◂ [ r]}] ) 0(<2)◂{ { 5'(= q0 ) 1'(= a2◂ [ *{ {| l |}a3◂ [ r]}] ) 7'(= q1 ) 8'(= q2 ) } 2'(= a2◂ [ *{ q0a2◂ [ *{ {| l |}a3◂ [ r]}]q1q2}] ) } 3'(= r ) } ⊢ { 0'(= {| a2◂ [ *{ {| l |}a3◂ [ r]}]|} ) 1'(= a2◂ [ *{ {| l |}a3◂ [ r]}] ) 2'(= a2◂ [ *{ q0a2◂ [ *{ {| l |}a3◂ [ r]}]q1q2}] ) 3'(= r ) }
	mov rcx,r8
; .mov_ptn 0(<2)◂{ { 5'(= q0 ) 1'(= a2◂ [ *{ {| l |}a3◂ [ r]}] ) 7'(= q1 ) 8'(= q2 ) } 6'(= a2◂ [ *{ q0a2◂ [ *{ {| l |}a3◂ [ r]}]q1q2}] ) } ⊢ 2'(= a2◂ [ *{ q0a2◂ [ *{ {| l |}a3◂ [ r]}]q1q2}] )
	sub rsp,8
	ALC_RCD 2, rax
	mov QWORD [rsp-8+8*1],rax
	sub rsp,8
	ALC_RCD 4, rax
	mov QWORD [rsp-8+8*1],rax
	mov rax,r11
	mov rdi,QWORD [rsp-8+8*1]
	mov QWORD [rdi+8+8*0],rax
	mov rax,r14
	mov rdi,QWORD [rsp-8+8*1]
	mov QWORD [rdi+8+8*1],rax
	mov rax,rdx
	mov rdi,QWORD [rsp-8+8*1]
	mov QWORD [rdi+8+8*2],rax
	mov rax,QWORD [rsp-8+8*3]
	mov rdi,QWORD [rsp-8+8*1]
	mov QWORD [rdi+8+8*3],rax
	mov rax,QWORD [rsp-8+8*1]
	mov rdi,QWORD [rsp-8+8*2]
	mov QWORD [rdi+8+8*0],rax
	mov rax,rcx
	mov rdi,QWORD [rsp-8+8*2]
	mov QWORD [rdi+8+8*1],rax
	mov rax,QWORD [rsp-8+8*2]
	mov BYTE [rax+6],0
	mov r8,rax
; .mov_ptn 0'(= a2◂ [ *{ {| l |}a3◂ [ r]}] ) ⊢ 1'(= a2◂ [ *{ {| l |}a3◂ [ r]}] )
	mov rax,r13
	mov r14,rax
; .mov_ptn 4'(= {| a2◂ [ *{ {| l |}a3◂ [ r]}]|} ) ⊢ 0'(= {| a2◂ [ *{ {| l |}a3◂ [ r]}]|} )
	mov rax,r10
	mov r13,rax
	add rsp,24
	ret
LB_5438:
;; ?. 3'(= a2◂ [ *{ q0a2◂ [ *{ {| l |}a3◂ [ r]}]q1q2}] ) ⊢ 1(<2)◂{ }
; #10 %[ "slv_ns_m 1:not found" ] ⊢ %[ "slv_ns_m 1:not found" ]
	mov rdi,fmt_emt
	call emt_stg
	mov rdi,LB_5439
	call emt_stg 
	mov rdi,fmt_nl
	call emt_stg
	jmp LB_5440
LB_5440:
; .dlt.ptn %[ "slv_ns_m 1:not found" ]
; #10 4'(= {| l |} ) ⊢ 4'(= {| l |} )
	mov rdi,fmt_emt
	call emt_stg
	mov rdi,r10
	C_PUSH_REGS
	mov r8,rdi
	mov rdi,r8
	call emt_s8
	C_POP_REGS
	mov rdi,fmt_nl
	call emt_stg
	jmp LB_5441
LB_5441:
; .dlt.ptn 4'(= {| l |} )
	mov rdi,r10
	C_PUSH_REGS
	mov r8,rdi
	mov rdi,r8
	call free_s8
	C_POP_REGS
	mov rdi,LB_5442
	call emt_stg 
	jmp err
LB_5369: ;; #346 { { } 0'(= r ) 1'(= a2◂ [ *{ ra2◂ [ *{ {| l |}a3◂ [ r]}]a2◂ [ q0]a2◂ [ q1]}] ) { 2'(= {| a2◂ [ *{ {| l |}a3◂ [ r]}]|} ) 3'(= {| a2◂ [ q2]|} ) 4'(= {| a2◂ [ q3]|} ) 5'(= r ) } { } 6'(= r ) { 7'(= a2◂ [ *{ {| l |}a3◂ [ r]}] ) 8'(= a2◂ [ q0] ) 9'(= a2◂ [ q1] ) } 10'(= a2◂ [ a39◂ [ ]] ) 11'(= a2◂ [ q4] ) { 12'(= a13◂ [ ] ) 13'(= r ) 14'(= a2◂ [ {| l |}] ) 15'(= a13◂ [ ] ) 16'(= r ) 17'(= r ) } } ⊢ { { } 0'(= r ) 1'(= a2◂ [ *{ ra2◂ [ *{ {| l |}a3◂ [ r]}]a2◂ [ q5]a2◂ [ q6]}] ) { 2'(= {| a2◂ [ *{ {| l |}a3◂ [ r]}]|} ) 3'(= {| a2◂ [ q7]|} ) 4'(= {| a2◂ [ q8]|} ) 5'(= r ) } { } 6'(= r ) { 7'(= a2◂ [ *{ {| l |}a3◂ [ r]}] ) 8'(= a2◂ [ q5] ) 9'(= a2◂ [ q6] ) } 10'(= a2◂ [ q9] ) { 11'(= a13◂ [ ] ) 12'(= r ) 13'(= a2◂ [ {| l |}] ) 14'(= a13◂ [ ] ) 15'(= r ) 16'(= r ) } } : ({ { } _r64 _lst◂7670'(={ 7685'(=_r64) _lst◂{ _s8 _opn◂_r64 } 7686'(=_lst◂7675'(=7679'(1))) 7687'(=_lst◂7676'(=7680'(1))) }) { _arr◂_lst◂7671'(={ _s8 _opn◂_r64 }) _arr◂_lst◂7672'(=7688'(1)) _arr◂_lst◂7673'(=7689'(1)) _r64 } { } _r64 { _lst◂7674'(={ _s8 _opn◂_r64 }) _lst◂7675'(=7679'(1)) _lst◂7676'(=7680'(1)) } _lst◂_t39 _lst◂7677'(=7683'(1)) { _t13 _r64 _lst◂7678'(=_s8) _t13 _r64 _r64 } }→{ { } _r64 _lst◂{ _r64 _lst◂{ _s8 _opn◂_r64 } _lst◂7642'(1) _lst◂7643'(1) } { _arr◂_lst◂{ _s8 _opn◂_r64 } _arr◂_lst◂7628'(1) _arr◂_lst◂7629'(1) _r64 } { } _r64 { _lst◂{ _s8 _opn◂_r64 } _lst◂7642'(1) _lst◂7643'(1) } _lst◂7644'(1) { _t13 _r64 _lst◂_s8 _t13 _r64 _r64 } })
	add rsp,8
;; ? 10'(= a2◂ [ a39◂ [ ]] ) ⊢ 0(<2)◂{ 18'(= a39◂ [ ] ) 19'(= a2◂ [ a39◂ [ ]] ) }
	mov rdi,QWORD [rsp-8+8*8]
	cmp BYTE [rdi+6],0
	jnz LB_5370
	sub rsp,8
	mov rdi,QWORD [rsp-8+8*9]
	MOV_RDI QWORD [rsp-8+8*1], QWORD [rdi+8]
	sub rsp,8
	mov rdi,QWORD [rsp-8+8*10]
	MOV_RDI QWORD [rsp-8+8*1], QWORD [rdi+16]
	MOV_RAX QWORD [GBG_VCT+8*0],QWORD [rsp-8+8*10]
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_RCD 2,rdi
;; ? 18'(= a39◂ [ ] ) ⊢ 0(<6)◂{ 10'(= {| l |} ) 20'(= a40◂ [ ] ) }
	mov rdi,QWORD [rsp-8+8*2]
	cmp BYTE [rdi+6],0
	jnz LB_5371
	mov rdi,QWORD [rsp-8+8*2]
	MOV_RDI QWORD [rsp-8+8*10], QWORD [rdi+8]
	sub rsp,8
	mov rdi,QWORD [rsp-8+8*3]
	MOV_RDI QWORD [rsp-8+8*1], QWORD [rdi+16]
	MOV_RAX QWORD [GBG_VCT+8*0],QWORD [rsp-8+8*3]
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_RCD 2,rdi
;; ? 20'(= a40◂ [ ] ) ⊢ 0(<2)◂18'(= a2◂ [ a39◂ [ ]] )
	mov rdi,QWORD [rsp-8+8*1]
	cmp BYTE [rdi+6],0
	jnz LB_5372
	mov QWORD [GBG_VCT+8*0],rdi
	MOV_RAX QWORD [rsp-8+8*3],QWORD [rdi+8]
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_LN rdi
; » _^ .. ⊢ ..
; .. //
	mov rdi,0
	mov rsi,QWORD [rsp-8+8*8]
	imul rsi,1
	add rdi,rsi 
	mov rsi,QWORD [rsp-8+8*11]
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[rsi] 
	add rdi,rax 
	push rax
	add rdi,6
	push rdi 
	call mlc_s8
	pop rdi
	mov QWORD [rsp-8+8*2],rax
	lea rdi,[rax+7+rdi]
	std 
	mov QWORD [tmp],rcx 
	lea rsi,[LB_5373+1-1]
	mov rcx,1
	rep movsb
	mov rsi,QWORD [rsp-8+8*11]
	pop rcx
	lea rsi,[rsi+7+rcx]
	rep movsb
	lea rsi,[LB_5374+5-1]
	mov rcx,5
	rep movsb
	mov rax,QWORD [rsp-8+8*8]
LB_5376:
	cmp rax,0
	jz LB_5377
	sub rax,1
	lea rsi,[LB_5375+1-1]
	mov rcx,1
	rep movsb 
	jmp LB_5376
LB_5377:
	mov rcx,QWORD [tmp] 
; #23 { 20'(= {| l |} ) 14'(= a2◂ [ {| l |}] ) } ⊢ 0(<2)◂{ 20'(= {| l |} ) 14'(= a2◂ [ {| l |}] ) }
; #11 13'(= r ) ⊢ 13'(= r )
	add QWORD [rsp-8+8*8],1
; $ 5'(= r ) ⊢ 5'(= r ),21'(= r )
	sub rsp,8
	mov rdi,r11
	C_PUSH_REGS
	mov r8,rdi
	mov rax,r8
	C_POP_REGS
	mov QWORD [rsp-8+8*1],rax
; #11 5'(= r ) ⊢ 5'(= r )
	add r11,1
; #23 { { 0'(= r ) 7'(= a2◂ [ *{ {| l |}a3◂ [ r]}] ) 8'(= a2◂ [ q0] ) 9'(= a2◂ [ q1] ) } 1'(= a2◂ [ *{ ra2◂ [ *{ {| l |}a3◂ [ r]}]a2◂ [ q0]a2◂ [ q1]}] ) } ⊢ 0(<2)◂{ { 0'(= r ) 7'(= a2◂ [ *{ {| l |}a3◂ [ r]}] ) 8'(= a2◂ [ q0] ) 9'(= a2◂ [ q1] ) } 1'(= a2◂ [ *{ ra2◂ [ *{ {| l |}a3◂ [ r]}]a2◂ [ q0]a2◂ [ q1]}] ) }
; #22 { } ⊢ 1(<2)◂{ }
; #22 { } ⊢ 1(<2)◂{ }
; #22 { } ⊢ 1(<2)◂{ }
; #1 { 2'(= {| a2◂ [ *{ {| l |}a3◂ [ r]}]|} ) 21'(= r ) 1(<2)◂{ } } ⊢ { 2'(= {| a2◂ [ *{ {| l |}a3◂ [ r]}]|} ) 21'(= r ) 23'(= a2◂ [ *{ {| l |}a3◂ [ r]}] ) }
; .mov_ptn2 1(<2)◂{ } ⊢ 22'(= a2◂ [ *{ {| l |}a3◂ [ r]}] )
	sub rsp,16
	MOV_RAX QWORD [rsp-8+8*1],QWORD [rsp-8+8*2]
; .mov_ptn 1(<2)◂{ } ⊢ 22'(= a2◂ [ *{ {| l |}a3◂ [ r]}] )
	mov rax,unt 
	mov rax,unt_1
	mov QWORD [rsp-8+8*2],rax
	mov rax,QWORD [rsp-8+8*3]
	mov rdi,r8
	mov rsi,0x0000_ffff_ffff_ffff 
	and rsi,QWORD [rdi]
	cmp rax,rsi 
	jge err
	lea rdi,[rdi+8+8*rax]
	mov rax,QWORD [rdi]
	mov rsi,QWORD [rsp-8+8*2]
	mov QWORD [rdi],rsi 
	mov QWORD [rsp-8+8*2],rax
; .mov_ptn2 22'(= a2◂ [ *{ {| l |}a3◂ [ r]}] ) ⊢ 23'(= a2◂ [ *{ {| l |}a3◂ [ r]}] )
	sub rsp,8
	MOV_RAX QWORD [rsp-8+8*1],QWORD [rsp-8+8*2]
; .mov_ptn 22'(= a2◂ [ *{ {| l |}a3◂ [ r]}] ) ⊢ 23'(= a2◂ [ *{ {| l |}a3◂ [ r]}] )
	mov rax,QWORD [rsp-8+8*3]
	mov QWORD [rsp-8+8*2],rax
; .dlt.ptn 23'(= a2◂ [ *{ {| l |}a3◂ [ r]}] )
	mov rdi,QWORD [rsp-8+8*2]
	C_PUSH_REGS
	mov r8,rdi
	call LB_5378
	C_POP_REGS
; #1 { 3'(= {| a2◂ [ q2]|} ) 21'(= r ) 1(<2)◂{ } } ⊢ { 3'(= {| a2◂ [ q2]|} ) 21'(= r ) 23'(= a2◂ [ q2] ) }
; .mov_ptn2 1(<2)◂{ } ⊢ 22'(= a2◂ [ q2] )
	MOV_RAX QWORD [rsp-8+8*2],QWORD [rsp-8+8*3]
; .mov_ptn 1(<2)◂{ } ⊢ 22'(= a2◂ [ q2] )
	mov rax,unt 
	mov rax,unt_1
	mov QWORD [rsp-8+8*3],rax
	mov rax,QWORD [rsp-8+8*4]
	mov rdi,r9
	mov rsi,0x0000_ffff_ffff_ffff 
	and rsi,QWORD [rdi]
	cmp rax,rsi 
	jge err
	lea rdi,[rdi+8+8*rax]
	mov rax,QWORD [rdi]
	mov rsi,QWORD [rsp-8+8*3]
	mov QWORD [rdi],rsi 
	mov QWORD [rsp-8+8*3],rax
; .mov_ptn2 22'(= a2◂ [ q2] ) ⊢ 23'(= a2◂ [ q2] )
	MOV_RAX QWORD [rsp-8+8*1],QWORD [rsp-8+8*2]
; .mov_ptn 22'(= a2◂ [ q2] ) ⊢ 23'(= a2◂ [ q2] )
	mov rax,QWORD [rsp-8+8*3]
	mov QWORD [rsp-8+8*2],rax
; .dlt.ptn 23'(= a2◂ [ q2] )
	mov rdi,QWORD [rsp-8+8*2]
	C_PUSH_REGS
	mov r8,rdi
	call LB_5388
	C_POP_REGS
; #1 { 4'(= {| a2◂ [ q3]|} ) 21'(= r ) 1(<2)◂{ } } ⊢ { 4'(= {| a2◂ [ q3]|} ) 21'(= r ) 23'(= a2◂ [ q3] ) }
; .mov_ptn2 1(<2)◂{ } ⊢ 22'(= a2◂ [ q3] )
	MOV_RAX QWORD [rsp-8+8*2],QWORD [rsp-8+8*3]
; .mov_ptn 1(<2)◂{ } ⊢ 22'(= a2◂ [ q3] )
	mov rax,unt 
	mov rax,unt_1
	mov QWORD [rsp-8+8*3],rax
	mov rax,QWORD [rsp-8+8*4]
	mov rdi,r10
	mov rsi,0x0000_ffff_ffff_ffff 
	and rsi,QWORD [rdi]
	cmp rax,rsi 
	jge err
	lea rdi,[rdi+8+8*rax]
	mov rax,QWORD [rdi]
	mov rsi,QWORD [rsp-8+8*3]
	mov QWORD [rdi],rsi 
	mov QWORD [rsp-8+8*3],rax
; .mov_ptn2 22'(= a2◂ [ q3] ) ⊢ 23'(= a2◂ [ q3] )
	MOV_RAX QWORD [rsp-8+8*1],QWORD [rsp-8+8*2]
; .mov_ptn 22'(= a2◂ [ q3] ) ⊢ 23'(= a2◂ [ q3] )
	mov rax,QWORD [rsp-8+8*3]
	mov QWORD [rsp-8+8*2],rax
; .dlt.ptn 23'(= a2◂ [ q3] )
	mov rdi,QWORD [rsp-8+8*2]
	C_PUSH_REGS
	mov r8,rdi
	call LB_5393
	C_POP_REGS
; » _^ .. ⊢ ..
; .. //
	mov rdi,0
	mov rsi,QWORD [rsp-8+8*12]
	imul rsi,1
	add rdi,rsi 
	add rdi,7
	push rdi 
	call mlc_s8
	pop rdi
	mov QWORD [rsp-8+8*3],rax
	lea rdi,[rax+7+rdi]
	std 
	mov QWORD [tmp],rcx 
	lea rsi,[LB_5398+7-1]
	mov rcx,7
	rep movsb
	mov rax,QWORD [rsp-8+8*12]
LB_5400:
	cmp rax,0
	jz LB_5401
	sub rax,1
	lea rsi,[LB_5399+1-1]
	mov rcx,1
	rep movsb 
	jmp LB_5400
LB_5401:
	mov rcx,QWORD [tmp] 
; #23 { 22'(= {| l |} ) 0(<2)◂{ 20'(= {| l |} ) 14'(= a2◂ [ {| l |}] ) } } ⊢ 0(<2)◂{ 22'(= {| l |} ) 0(<2)◂{ 20'(= {| l |} ) 14'(= a2◂ [ {| l |}] ) } }
; #12 13'(= r ) ⊢ 13'(= r )
	sub QWORD [rsp-8+8*12],1
;; ? 0(<2)◂{ { 0'(= r ) 7'(= a2◂ [ *{ {| l |}a3◂ [ r]}] ) 8'(= a2◂ [ q0] ) 9'(= a2◂ [ q1] ) } 1'(= a2◂ [ *{ ra2◂ [ *{ {| l |}a3◂ [ r]}]a2◂ [ q0]a2◂ [ q1]}] ) } ⊢ 0(<2)◂{ { 0'(= r ) 7'(= a2◂ [ *{ {| l |}a3◂ [ r]}] ) 8'(= a2◂ [ q0] ) 9'(= a2◂ [ q1] ) } 1'(= a2◂ [ *{ ra2◂ [ *{ {| l |}a3◂ [ r]}]a2◂ [ q0]a2◂ [ q1]}] ) }
; #24 21'(= r ) ⊢ 0(<2)◂21'(= r )
; #23 { { 10'(= {| l |} ) 0(<2)◂21'(= r ) } 7'(= a2◂ [ *{ {| l |}a3◂ [ r]}] ) } ⊢ 0(<2)◂{ { 10'(= {| l |} ) 0(<2)◂21'(= r ) } 7'(= a2◂ [ *{ {| l |}a3◂ [ r]}] ) }
	mov rdi,LB_5403
	call emt_stg 
	jmp err
LB_5402:
	mov rdi,rt_err0 
 call emt_stg
	mov QWORD [err_n],0xffff_0008
	jmp err
LB_5372:
;; ?. 20'(= a40◂ [ ] ) ⊢ 1(<2)◂18'(= a17◂ [ ] )
	mov QWORD [GBG_VCT+8*0],rdi
	MOV_RAX QWORD [rsp-8+8*3],QWORD [rdi+8]
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_LN rdi
; $ 18'(= a17◂ [ ] ) ⊢ 18'(= a17◂ [ ] ),20'(= a17◂ [ ] )
	mov rdi,QWORD [rsp-8+8*3]
	C_PUSH_REGS
	mov r8,rdi
	call LB_349
	C_POP_REGS
	mov QWORD [rsp-8+8*1],rax
; #85 20'(= a17◂ [ ] ) ⊢ 20'(= {| l |} )
	sub rsp,64
	mov QWORD [rsp+8*0],r13
	mov QWORD [rsp+8*1],r14
	mov QWORD [rsp+8*2],r8
	mov QWORD [rsp+8*3],r9
	mov QWORD [rsp+8*4],r10
	mov QWORD [rsp+8*5],r11
	mov QWORD [rsp+8*6],rcx
	mov QWORD [rsp+8*7],rdx
; .mov_ptn2 20'(= a17◂ [ ] ) ⊢ 0'(= a17◂ [ ] )
; .mov_ptn 20'(= a17◂ [ ] ) ⊢ 0'(= a17◂ [ ] )
	mov rax,QWORD [rsp-8+8*9]
	mov r13,rax
	call ETR_85
	mov rdx,QWORD [rsp-8+8*8]
	mov rcx,QWORD [rsp-8+8*7]
	mov r11,QWORD [rsp-8+8*6]
	mov r10,QWORD [rsp-8+8*5]
	mov r9,QWORD [rsp-8+8*4]
	mov r8,QWORD [rsp-8+8*3]
	mov r14,QWORD [rsp-8+8*2]
	mov QWORD [rsp-8+8*9],r13
	mov r13,QWORD [rsp-8+8*1]
	add rsp,64
; » _^ .. ⊢ ..
; .. //
	sub rsp,8
	mov rdi,0
	mov rsi,QWORD [rsp-8+8*9]
	imul rsi,1
	add rdi,rsi 
	mov rsi,QWORD [rsp-8+8*12]
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[rsi] 
	add rdi,rax 
	push rax
	mov rsi,QWORD [rsp-8+8*3]
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[rsi] 
	add rdi,rax 
	push rax
	add rdi,9
	push rdi 
	call mlc_s8
	pop rdi
	mov QWORD [rsp-8+8*3],rax
	lea rdi,[rax+7+rdi]
	std 
	mov QWORD [tmp],rcx 
	lea rsi,[LB_5404+1-1]
	mov rcx,1
	rep movsb
	mov rsi,QWORD [rsp-8+8*3]
	pop rcx
	lea rsi,[rsi+7+rcx]
	rep movsb
	lea rsi,[LB_5405+3-1]
	mov rcx,3
	rep movsb
	mov rsi,QWORD [rsp-8+8*12]
	pop rcx
	lea rsi,[rsi+7+rcx]
	rep movsb
	lea rsi,[LB_5406+5-1]
	mov rcx,5
	rep movsb
	mov rax,QWORD [rsp-8+8*9]
LB_5408:
	cmp rax,0
	jz LB_5409
	sub rax,1
	lea rsi,[LB_5407+1-1]
	mov rcx,1
	rep movsb 
	jmp LB_5408
LB_5409:
	mov rcx,QWORD [tmp] 
; #23 { 21'(= {| l |} ) 14'(= a2◂ [ {| l |}] ) } ⊢ 0(<2)◂{ 21'(= {| l |} ) 14'(= a2◂ [ {| l |}] ) }
; #345 { 18'(= a17◂ [ ] ) 2'(= {| a2◂ [ *{ {| l |}a3◂ [ r]}]|} ) 7'(= a2◂ [ *{ {| l |}a3◂ [ r]}] ) 1'(= a2◂ [ *{ ra2◂ [ *{ {| l |}a3◂ [ r]}]a2◂ [ q0]a2◂ [ q1]}] ) } ⊢ { 18'(= {| a2◂ [ *{ {| l |}a3◂ [ r]}]|} ) 1'(= a2◂ [ *{ {| l |}a3◂ [ r]}] ) 2'(= a2◂ [ *{ q0a2◂ [ *{ {| l |}a3◂ [ r]}]q1q2}] ) 7'(= r ) }
	sub rsp,40
	mov QWORD [rsp+8*0],r13
	mov QWORD [rsp+8*1],r9
	mov QWORD [rsp+8*2],r10
	mov QWORD [rsp+8*3],r11
	mov QWORD [rsp+8*4],rcx
; .mov_ptn2 { 18'(= a17◂ [ ] ) 2'(= {| a2◂ [ *{ {| l |}a3◂ [ r]}]|} ) 7'(= a2◂ [ *{ {| l |}a3◂ [ r]}] ) 1'(= a2◂ [ *{ ra2◂ [ *{ {| l |}a3◂ [ r]}]a2◂ [ q0]a2◂ [ q1]}] ) } ⊢ { 0'(= a17◂ [ ] ) 1'(= {| a2◂ [ *{ {| l |}a3◂ [ r]}]|} ) 2'(= a2◂ [ *{ {| l |}a3◂ [ r]}] ) 3'(= a2◂ [ *{ q0a2◂ [ *{ {| l |}a3◂ [ r]}]q1q2}] ) }
; .mov_ptn 1'(= a2◂ [ *{ ra2◂ [ *{ {| l |}a3◂ [ r]}]a2◂ [ q0]a2◂ [ q1]}] ) ⊢ 3'(= a2◂ [ *{ q0a2◂ [ *{ {| l |}a3◂ [ r]}]q1q2}] )
	mov rax,r14
	mov r9,rax
	mov r10,r8
; .mov_ptn 7'(= a2◂ [ *{ {| l |}a3◂ [ r]}] ) ⊢ 2'(= a2◂ [ *{ {| l |}a3◂ [ r]}] )
	mov rax,rdx
	mov r8,rax
; .mov_ptn 18'(= a17◂ [ ] ) ⊢ 0'(= a17◂ [ ] )
	mov rax,QWORD [rsp-8+8*9]
	mov r13,rax
; .mov_ptn 4'(= {| a2◂ [ *{ {| l |}a3◂ [ r]}]|} ) ⊢ 1'(= {| a2◂ [ *{ {| l |}a3◂ [ r]}]|} )
	mov rax,r10
	mov r14,rax
	call LB_5410
	mov rcx,QWORD [rsp-8+8*5]
	mov r11,QWORD [rsp-8+8*4]
	mov r10,QWORD [rsp-8+8*3]
	mov rdx,r9
	mov r9,QWORD [rsp-8+8*2]
	mov QWORD [rsp-8+8*9],r13
	mov r13,QWORD [rsp-8+8*1]
	add rsp,40
	mov rdi,LB_5443
	call emt_stg 
	jmp err
LB_5371:
;; ? 18'(= a39◂ [ ] ) ⊢ 1(<6)◂10'(= a2◂ [ *{ {| l |}a32◂ [ a17◂ [ ]{| l |}]}] )
	mov rdi,QWORD [rsp-8+8*2]
	cmp BYTE [rdi+6],1
	jnz LB_5444
	mov QWORD [GBG_VCT+8*0],rdi
	MOV_RAX QWORD [rsp-8+8*10],QWORD [rdi+8]
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_LN rdi
	mov rdi,LB_5445
	call emt_stg 
	jmp err
LB_5444:
;; ? 18'(= a39◂ [ ] ) ⊢ 2(<6)◂{ 10'(= {| l |} ) 20'(= a41◂ [ ] ) }
	mov rdi,QWORD [rsp-8+8*2]
	cmp BYTE [rdi+6],2
	jnz LB_5446
	mov rdi,QWORD [rsp-8+8*2]
	MOV_RDI QWORD [rsp-8+8*10], QWORD [rdi+8]
	sub rsp,8
	mov rdi,QWORD [rsp-8+8*3]
	MOV_RDI QWORD [rsp-8+8*1], QWORD [rdi+16]
	MOV_RAX QWORD [GBG_VCT+8*0],QWORD [rsp-8+8*3]
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_RCD 2,rdi
;; ? 20'(= a41◂ [ ] ) ⊢ 0(<3)◂{ 18'(= a16◂ [ a21◂ [ {| l |}]] ) 21'(= a3◂ [ a31◂ [ ]] ) 22'(= a25◂ [ a17◂ [ ]{| l |}] ) }
	mov rdi,QWORD [rsp-8+8*1]
	cmp BYTE [rdi+6],0
	jnz LB_5447
	mov rdi,QWORD [rsp-8+8*1]
	MOV_RDI QWORD [rsp-8+8*3], QWORD [rdi+8]
	sub rsp,8
	mov rdi,QWORD [rsp-8+8*2]
	MOV_RDI QWORD [rsp-8+8*1], QWORD [rdi+16]
	sub rsp,8
	mov rdi,QWORD [rsp-8+8*3]
	MOV_RDI QWORD [rsp-8+8*1], QWORD [rdi+24]
	MOV_RAX QWORD [GBG_VCT+8*0],QWORD [rsp-8+8*3]
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_RCD 3,rdi
	mov rdi,LB_5448
	call emt_stg 
	jmp err
LB_5447:
;; ? 20'(= a41◂ [ ] ) ⊢ 1(<3)◂18'(= a19◂ [ a17◂ [ ]] )
	mov rdi,QWORD [rsp-8+8*1]
	cmp BYTE [rdi+6],1
	jnz LB_5449
	mov QWORD [GBG_VCT+8*0],rdi
	MOV_RAX QWORD [rsp-8+8*3],QWORD [rdi+8]
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_LN rdi
	mov rdi,LB_5450
	call emt_stg 
	jmp err
LB_5449:
;; ?. 20'(= a41◂ [ ] ) ⊢ 2(<3)◂18'(= a25◂ [ a17◂ [ ]{| l |}] )
	mov QWORD [GBG_VCT+8*0],rdi
	MOV_RAX QWORD [rsp-8+8*3],QWORD [rdi+8]
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_LN rdi
	mov rdi,LB_5451
	call emt_stg 
	jmp err
LB_5446:
;; ? 18'(= a39◂ [ ] ) ⊢ 3(<6)◂10'(= a2◂ [ *{ {| l |}a16◂ [ a21◂ [ {| l |}]]a3◂ [ a31◂ [ ]]a25◂ [ a17◂ [ ]{| l |}]}] )
	mov rdi,QWORD [rsp-8+8*2]
	cmp BYTE [rdi+6],3
	jnz LB_5452
	mov QWORD [GBG_VCT+8*0],rdi
	MOV_RAX QWORD [rsp-8+8*10],QWORD [rdi+8]
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_LN rdi
	mov rdi,LB_5453
	call emt_stg 
	jmp err
LB_5452:
;; ? 18'(= a39◂ [ ] ) ⊢ 4(<6)◂{ 10'(= {| l |} ) 20'(= a42◂ [ ] ) }
	mov rdi,QWORD [rsp-8+8*2]
	cmp BYTE [rdi+6],4
	jnz LB_5454
	mov rdi,QWORD [rsp-8+8*2]
	MOV_RDI QWORD [rsp-8+8*10], QWORD [rdi+8]
	sub rsp,8
	mov rdi,QWORD [rsp-8+8*3]
	MOV_RDI QWORD [rsp-8+8*1], QWORD [rdi+16]
	MOV_RAX QWORD [GBG_VCT+8*0],QWORD [rsp-8+8*3]
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_RCD 2,rdi
	mov rdi,LB_5455
	call emt_stg 
	jmp err
LB_5454:
;; ?. 18'(= a39◂ [ ] ) ⊢ 5(<6)◂10'(= a2◂ [ *{ {| l |}a42◂ [ ]}] )
	mov QWORD [GBG_VCT+8*0],rdi
	MOV_RAX QWORD [rsp-8+8*10],QWORD [rdi+8]
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_LN rdi
	mov rdi,LB_5456
	call emt_stg 
	jmp err
LB_5370:
;; ?. 10'(= a2◂ [ a39◂ [ ]] ) ⊢ 1(<2)◂{ }
; ∎ { { } 0'(= r ) 1'(= a2◂ [ *{ ra2◂ [ *{ {| l |}a3◂ [ r]}]a2◂ [ q0]a2◂ [ q1]}] ) { 2'(= {| a2◂ [ *{ {| l |}a3◂ [ r]}]|} ) 3'(= {| a2◂ [ q2]|} ) 4'(= {| a2◂ [ q3]|} ) 5'(= r ) } { } 6'(= r ) { 7'(= a2◂ [ *{ {| l |}a3◂ [ r]}] ) 8'(= a2◂ [ q0] ) 9'(= a2◂ [ q1] ) } 11'(= a2◂ [ q4] ) { 12'(= a13◂ [ ] ) 13'(= r ) 14'(= a2◂ [ {| l |}] ) 15'(= a13◂ [ ] ) 16'(= r ) 17'(= r ) } }
; .mov_ptn2 { { } 0'(= r ) 1'(= a2◂ [ *{ ra2◂ [ *{ {| l |}a3◂ [ r]}]a2◂ [ q0]a2◂ [ q1]}] ) { 2'(= {| a2◂ [ *{ {| l |}a3◂ [ r]}]|} ) 3'(= {| a2◂ [ q2]|} ) 4'(= {| a2◂ [ q3]|} ) 5'(= r ) } { } 6'(= r ) { 7'(= a2◂ [ *{ {| l |}a3◂ [ r]}] ) 8'(= a2◂ [ q0] ) 9'(= a2◂ [ q1] ) } 11'(= a2◂ [ q4] ) { 12'(= a13◂ [ ] ) 13'(= r ) 14'(= a2◂ [ {| l |}] ) 15'(= a13◂ [ ] ) 16'(= r ) 17'(= r ) } } ⊢ { { } 0'(= r ) 1'(= a2◂ [ *{ ra2◂ [ *{ {| l |}a3◂ [ r]}]a2◂ [ q5]a2◂ [ q6]}] ) { 2'(= {| a2◂ [ *{ {| l |}a3◂ [ r]}]|} ) 3'(= {| a2◂ [ q7]|} ) 4'(= {| a2◂ [ q8]|} ) 5'(= r ) } { } 6'(= r ) { 7'(= a2◂ [ *{ {| l |}a3◂ [ r]}] ) 8'(= a2◂ [ q5] ) 9'(= a2◂ [ q6] ) } 10'(= a2◂ [ q9] ) { 11'(= a13◂ [ ] ) 12'(= r ) 13'(= a2◂ [ {| l |}] ) 14'(= a13◂ [ ] ) 15'(= r ) 16'(= r ) } }
	sub rsp,8
	MOV_RAX QWORD [rsp-8+8*1],QWORD [rsp-8+8*3]
; .mov_ptn 17'(= r ) ⊢ 16'(= r )
	mov rax,QWORD [rsp-8+8*2]
	mov QWORD [rsp-8+8*3],rax
	sub rsp,8
	MOV_RAX QWORD [rsp-8+8*1],QWORD [rsp-8+8*6]
; .mov_ptn 15'(= a13◂ [ ] ) ⊢ 14'(= a13◂ [ ] )
	mov rax,QWORD [rsp-8+8*5]
	mov QWORD [rsp-8+8*6],rax
; .mov_ptn 18'(= r ) ⊢ 15'(= r )
	mov rax,QWORD [rsp-8+8*2]
	mov QWORD [rsp-8+8*5],rax
	sub rsp,8
	MOV_RAX QWORD [rsp-8+8*1],QWORD [rsp-8+8*8]
; .mov_ptn 19'(= a2◂ [ {| l |}] ) ⊢ 13'(= a2◂ [ {| l |}] )
	mov rax,QWORD [rsp-8+8*2]
	mov QWORD [rsp-8+8*8],rax
	sub rsp,8
	MOV_RAX QWORD [rsp-8+8*1],QWORD [rsp-8+8*11]
; .mov_ptn 12'(= a13◂ [ ] ) ⊢ 11'(= a13◂ [ ] )
	mov rax,QWORD [rsp-8+8*10]
	mov QWORD [rsp-8+8*11],rax
; .mov_ptn 20'(= r ) ⊢ 12'(= r )
	mov rax,QWORD [rsp-8+8*2]
	mov QWORD [rsp-8+8*10],rax
; .mov_ptn 21'(= a2◂ [ q4] ) ⊢ 10'(= a2◂ [ q9] )
	mov rax,QWORD [rsp-8+8*1]
	mov QWORD [rsp-8+8*12],rax
	add rsp,40
	push QWORD [rsp+8*9]
	ret
ETR_349: ;; slv_file 0'(= a2◂ [ a39◂ [ ]] ) ⊢ { { } 0'(= r ) 1'(= a2◂ [ *{ ra2◂ [ *{ {| l |}a3◂ [ r]}]a2◂ [ q0]a2◂ [ q1]}] ) { 2'(= {| a2◂ [ *{ {| l |}a3◂ [ r]}]|} ) 3'(= {| a2◂ [ q2]|} ) 4'(= {| a2◂ [ q3]|} ) 5'(= r ) } { } 6'(= r ) { 7'(= a2◂ [ *{ {| l |}a3◂ [ r]}] ) 8'(= a2◂ [ q0] ) 9'(= a2◂ [ q1] ) } 10'(= a2◂ [ q4] ) { 11'(= a13◂ [ ] ) 12'(= r ) 13'(= a2◂ [ {| l |}] ) 14'(= a13◂ [ ] ) 15'(= r ) 16'(= r ) } } : (_lst◂_t39→{ { } _r64 _lst◂{ _r64 _lst◂{ _s8 _opn◂_r64 } _lst◂7642'(1) _lst◂7643'(1) } { _arr◂_lst◂{ _s8 _opn◂_r64 } _arr◂_lst◂7628'(1) _arr◂_lst◂7629'(1) _r64 } { } _r64 { _lst◂{ _s8 _opn◂_r64 } _lst◂7642'(1) _lst◂7643'(1) } _lst◂7644'(1) { _t13 _r64 _lst◂_s8 _t13 _r64 _r64 } })
; $ %[ 0r ] ⊢ %[ 0r ]
; #22 { } ⊢ 1(<2)◂{ }
; #22 { } ⊢ 1(<2)◂{ }
; #22 { } ⊢ 1(<2)◂{ }
; #347 %[ 800r ] ⊢ { 2'(= r ) 1'(= {| a2◂ [ q0]|} ) }
	sub rsp,8
	mov QWORD [rsp+8*0],r13
; .mov_ptn2 %[ 800r ] ⊢ 0'(= r )
; .mov_ptn %[ 800r ] ⊢ 0'(= r )
	mov rax,800
	mov r13,rax
	call ETR_347
	mov r8,r13
	mov r13,QWORD [rsp-8+8*1]
	add rsp,8
; .dlt.ptn 2'(= r )
	mov rdi,r8
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; #347 %[ 800r ] ⊢ { 3'(= r ) 2'(= {| a2◂ [ q0]|} ) }
	sub rsp,16
	mov QWORD [rsp+8*0],r13
	mov QWORD [rsp+8*1],r14
; .mov_ptn2 %[ 800r ] ⊢ 0'(= r )
; .mov_ptn %[ 800r ] ⊢ 0'(= r )
	mov rax,800
	mov r13,rax
	call ETR_347
	mov r8,r14
	mov r14,QWORD [rsp-8+8*2]
	mov r9,r13
	mov r13,QWORD [rsp-8+8*1]
	add rsp,16
; .dlt.ptn 3'(= r )
	mov rdi,r9
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; #347 %[ 800r ] ⊢ { 4'(= r ) 3'(= {| a2◂ [ q0]|} ) }
	sub rsp,24
	mov QWORD [rsp+8*0],r13
	mov QWORD [rsp+8*1],r14
	mov QWORD [rsp+8*2],r8
; .mov_ptn2 %[ 800r ] ⊢ 0'(= r )
; .mov_ptn %[ 800r ] ⊢ 0'(= r )
	mov rax,800
	mov r13,rax
	call ETR_347
	mov r8,QWORD [rsp-8+8*3]
	mov r9,r14
	mov r14,QWORD [rsp-8+8*2]
	mov r10,r13
	mov r13,QWORD [rsp-8+8*1]
	add rsp,24
; .dlt.ptn 4'(= r )
	mov rdi,r10
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; $ %[ 1r ] ⊢ %[ 1r ]
; $ %[ 0r ] ⊢ %[ 0r ]
; $ %[ 0r ] ⊢ %[ 0r ]
; $ %[ 0r ] ⊢ %[ 0r ]
; $ %[ 0r ] ⊢ %[ 0r ]
; $ %[ 0r ] ⊢ %[ 0r ]
; #22 { } ⊢ 1(<2)◂{ }
; #35 { } ⊢ 2(<4)◂{ }
; $ %[ 0r ] ⊢ %[ 0r ]
; $ %[ 0r ] ⊢ %[ 0r ]
; » _^ .. ⊢ ..
; .. //
	mov rdi,0
	add rdi,941
	push rdi 
	call mlc_s8
	pop rdi
	mov r10,rax
	lea rdi,[rax+7+rdi]
	std 
	mov QWORD [tmp],rcx 
	lea rsi,[LB_5367+941-1]
	mov rcx,941
	rep movsb
	mov rcx,QWORD [tmp] 
; #38 4'(= {| l |} ) ⊢ 4'(= a13◂ [ ] )
	sub rsp,32
	mov QWORD [rsp+8*0],r13
	mov QWORD [rsp+8*1],r14
	mov QWORD [rsp+8*2],r8
	mov QWORD [rsp+8*3],r9
; .mov_ptn2 4'(= {| l |} ) ⊢ 0'(= {| l |} )
; .mov_ptn 4'(= {| l |} ) ⊢ 0'(= {| l |} )
	mov rax,r10
	mov r13,rax
	call ETR_38
	mov r9,QWORD [rsp-8+8*4]
	mov r8,QWORD [rsp-8+8*3]
	mov r14,QWORD [rsp-8+8*2]
	mov r10,r13
	mov r13,QWORD [rsp-8+8*1]
	add rsp,32
; » _^ .. ⊢ ..
; .. //
	mov rdi,0
	add rdi,5433
	push rdi 
	call mlc_s8
	pop rdi
	mov r11,rax
	lea rdi,[rax+7+rdi]
	std 
	mov QWORD [tmp],rcx 
	lea rsi,[LB_5368+5433-1]
	mov rcx,5433
	rep movsb
	mov rcx,QWORD [tmp] 
; #40 { 2(<4)◂{ } 5'(= {| l |} ) } ⊢ 5'(= a13◂ [ ] )
	sub rsp,40
	mov QWORD [rsp+8*0],r13
	mov QWORD [rsp+8*1],r14
	mov QWORD [rsp+8*2],r8
	mov QWORD [rsp+8*3],r9
	mov QWORD [rsp+8*4],r10
; .mov_ptn2 { 2(<4)◂{ } 5'(= {| l |} ) } ⊢ { 0'(= a13◂ [ ] ) 1'(= {| l |} ) }
; .mov_ptn 5'(= {| l |} ) ⊢ 1'(= {| l |} )
	mov rax,r11
	mov r14,rax
; .mov_ptn 2(<4)◂{ } ⊢ 0'(= a13◂ [ ] )
	mov rax,unt 
	mov rax,unt_2
	mov r13,rax
	call ETR_40
	mov r10,QWORD [rsp-8+8*5]
	mov r9,QWORD [rsp-8+8*4]
	mov r8,QWORD [rsp-8+8*3]
	mov r14,QWORD [rsp-8+8*2]
	mov r11,r13
	mov r13,QWORD [rsp-8+8*1]
	add rsp,40
; $ %[ 0r ] ⊢ %[ 0r ]
; #22 { } ⊢ 1(<2)◂{ }
; #22 { } ⊢ 1(<2)◂{ }
; #22 { } ⊢ 1(<2)◂{ }
; $ %[ 0r ] ⊢ %[ 0r ]
; #22 { } ⊢ 1(<2)◂{ }
; #346 { { } %[ 0r ] 1(<2)◂{ } { 1'(= {| a2◂ [ q0]|} ) 2'(= {| a2◂ [ q0]|} ) 3'(= {| a2◂ [ q0]|} ) %[ 1r ] } { } %[ 0r ] { 1(<2)◂{ } 1(<2)◂{ } 1(<2)◂{ } } 0'(= a2◂ [ a39◂ [ ]] ) 1(<2)◂{ } { 4'(= a13◂ [ ] ) %[ 0r ] 1(<2)◂{ } 5'(= a13◂ [ ] ) %[ 0r ] %[ 0r ] } } ⊢|
	push LB_5457
	sub rsp,80
; .mov_ptn2 { { } %[ 0r ] 1(<2)◂{ } { 1'(= {| a2◂ [ q0]|} ) 2'(= {| a2◂ [ q0]|} ) 3'(= {| a2◂ [ q0]|} ) %[ 1r ] } { } %[ 0r ] { 1(<2)◂{ } 1(<2)◂{ } 1(<2)◂{ } } 0'(= a2◂ [ a39◂ [ ]] ) 1(<2)◂{ } { 4'(= a13◂ [ ] ) %[ 0r ] 1(<2)◂{ } 5'(= a13◂ [ ] ) %[ 0r ] %[ 0r ] } } ⊢ { { } 0'(= r ) 1'(= a2◂ [ *{ ra2◂ [ *{ {| l |}a3◂ [ r]}]a2◂ [ q0]a2◂ [ q1]}] ) { 2'(= {| a2◂ [ *{ {| l |}a3◂ [ r]}]|} ) 3'(= {| a2◂ [ q2]|} ) 4'(= {| a2◂ [ q3]|} ) 5'(= r ) } { } 6'(= r ) { 7'(= a2◂ [ *{ {| l |}a3◂ [ r]}] ) 9'(= a2◂ [ q0] ) 10'(= a2◂ [ q1] ) } 11'(= a2◂ [ a39◂ [ ]] ) 12'(= a2◂ [ q4] ) { 13'(= a13◂ [ ] ) 14'(= r ) 15'(= a2◂ [ {| l |}] ) 16'(= a13◂ [ ] ) 17'(= r ) 18'(= r ) } }
; .mov_ptn %[ 0r ] ⊢ 18'(= r )
	mov rax,0
	mov QWORD [rsp-8+8*1],rax
; .mov_ptn %[ 0r ] ⊢ 17'(= r )
	mov rax,0
	mov QWORD [rsp-8+8*2],rax
; .mov_ptn 5'(= a13◂ [ ] ) ⊢ 16'(= a13◂ [ ] )
	mov rax,r11
	mov QWORD [rsp-8+8*3],rax
; .mov_ptn 1(<2)◂{ } ⊢ 15'(= a2◂ [ {| l |}] )
	mov rax,unt 
	mov rax,unt_1
	mov QWORD [rsp-8+8*4],rax
; .mov_ptn %[ 0r ] ⊢ 14'(= r )
	mov rax,0
	mov QWORD [rsp-8+8*5],rax
; .mov_ptn 4'(= a13◂ [ ] ) ⊢ 13'(= a13◂ [ ] )
	mov rax,r10
	mov QWORD [rsp-8+8*6],rax
; .mov_ptn 1(<2)◂{ } ⊢ 12'(= a2◂ [ q4] )
	mov rax,unt 
	mov rax,unt_1
	mov QWORD [rsp-8+8*7],rax
; .mov_ptn 0'(= a2◂ [ a39◂ [ ]] ) ⊢ 11'(= a2◂ [ a39◂ [ ]] )
	mov rax,r13
	mov QWORD [rsp-8+8*8],rax
; .mov_ptn 1(<2)◂{ } ⊢ 10'(= a2◂ [ q1] )
	mov rax,unt 
	mov rax,unt_1
	mov QWORD [rsp-8+8*9],rax
; .mov_ptn 1(<2)◂{ } ⊢ 9'(= a2◂ [ q0] )
	mov rax,unt 
	mov rax,unt_1
	mov QWORD [rsp-8+8*10],rax
; .mov_ptn 1(<2)◂{ } ⊢ 7'(= a2◂ [ *{ {| l |}a3◂ [ r]}] )
	mov rax,unt 
	mov rax,unt_1
	mov rdx,rax
; .mov_ptn %[ 0r ] ⊢ 6'(= r )
	mov rax,0
	mov rcx,rax
; .mov_ptn %[ 1r ] ⊢ 5'(= r )
	mov rax,1
	mov r11,rax
; .mov_ptn 3'(= {| a2◂ [ q0]|} ) ⊢ 4'(= {| a2◂ [ q3]|} )
	mov rax,r9
	mov r10,rax
; .mov_ptn 2'(= {| a2◂ [ q0]|} ) ⊢ 3'(= {| a2◂ [ q2]|} )
	mov rax,r8
	mov r9,rax
; .mov_ptn 1'(= {| a2◂ [ q0]|} ) ⊢ 2'(= {| a2◂ [ *{ {| l |}a3◂ [ r]}]|} )
	mov rax,r14
	mov r8,rax
; .mov_ptn 1(<2)◂{ } ⊢ 1'(= a2◂ [ *{ ra2◂ [ *{ {| l |}a3◂ [ r]}]a2◂ [ q0]a2◂ [ q1]}] )
	mov rax,unt 
	mov rax,unt_1
	mov r14,rax
; .mov_ptn %[ 0r ] ⊢ 0'(= r )
	mov rax,0
	mov r13,rax
	call LB_5369
LB_5457:
; .mov_ptn2 { { } 0'(= r ) 1'(= a2◂ [ *{ ra2◂ [ *{ {| l |}a3◂ [ r]}]a2◂ [ q5]a2◂ [ q6]}] ) { 2'(= {| a2◂ [ *{ {| l |}a3◂ [ r]}]|} ) 3'(= {| a2◂ [ q7]|} ) 4'(= {| a2◂ [ q8]|} ) 5'(= r ) } { } 6'(= r ) { 7'(= a2◂ [ *{ {| l |}a3◂ [ r]}] ) 9'(= a2◂ [ q5] ) 10'(= a2◂ [ q6] ) } 11'(= a2◂ [ q9] ) { 12'(= a13◂ [ ] ) 13'(= r ) 14'(= a2◂ [ {| l |}] ) 15'(= a13◂ [ ] ) 16'(= r ) 17'(= r ) } } ⊢ { { } 0'(= r ) 1'(= a2◂ [ *{ ra2◂ [ *{ {| l |}a3◂ [ r]}]a2◂ [ q0]a2◂ [ q1]}] ) { 2'(= {| a2◂ [ *{ {| l |}a3◂ [ r]}]|} ) 3'(= {| a2◂ [ q2]|} ) 4'(= {| a2◂ [ q3]|} ) 5'(= r ) } { } 6'(= r ) { 7'(= a2◂ [ *{ {| l |}a3◂ [ r]}] ) 8'(= a2◂ [ q0] ) 9'(= a2◂ [ q1] ) } 10'(= a2◂ [ q4] ) { 11'(= a13◂ [ ] ) 12'(= r ) 13'(= a2◂ [ {| l |}] ) 14'(= a13◂ [ ] ) 15'(= r ) 16'(= r ) } }
	sub rsp,8
	MOV_RAX QWORD [rsp-8+8*1],QWORD [rsp-8+8*3]
; .mov_ptn 17'(= r ) ⊢ 16'(= r )
	mov rax,QWORD [rsp-8+8*2]
	mov QWORD [rsp-8+8*3],rax
	sub rsp,8
	MOV_RAX QWORD [rsp-8+8*1],QWORD [rsp-8+8*6]
; .mov_ptn 15'(= a13◂ [ ] ) ⊢ 14'(= a13◂ [ ] )
	mov rax,QWORD [rsp-8+8*5]
	mov QWORD [rsp-8+8*6],rax
; .mov_ptn 18'(= r ) ⊢ 15'(= r )
	mov rax,QWORD [rsp-8+8*2]
	mov QWORD [rsp-8+8*5],rax
	sub rsp,8
	MOV_RAX QWORD [rsp-8+8*1],QWORD [rsp-8+8*8]
; .mov_ptn 19'(= a2◂ [ {| l |}] ) ⊢ 13'(= a2◂ [ {| l |}] )
	mov rax,QWORD [rsp-8+8*2]
	mov QWORD [rsp-8+8*8],rax
	sub rsp,8
	MOV_RAX QWORD [rsp-8+8*1],QWORD [rsp-8+8*11]
; .mov_ptn 12'(= a13◂ [ ] ) ⊢ 11'(= a13◂ [ ] )
	mov rax,QWORD [rsp-8+8*10]
	mov QWORD [rsp-8+8*11],rax
; .mov_ptn 20'(= r ) ⊢ 12'(= r )
	mov rax,QWORD [rsp-8+8*2]
	mov QWORD [rsp-8+8*10],rax
	sub rsp,8
	MOV_RAX QWORD [rsp-8+8*1],QWORD [rsp-8+8*13]
; .mov_ptn 21'(= a2◂ [ q9] ) ⊢ 10'(= a2◂ [ q4] )
	mov rax,QWORD [rsp-8+8*2]
	mov QWORD [rsp-8+8*13],rax
; .mov_ptn 9'(= a2◂ [ q5] ) ⊢ 8'(= a2◂ [ q0] )
	mov rax,QWORD [rsp-8+8*14]
	mov QWORD [rsp-8+8*15],rax
; .mov_ptn 22'(= a2◂ [ q6] ) ⊢ 9'(= a2◂ [ q1] )
	mov rax,QWORD [rsp-8+8*1]
	mov QWORD [rsp-8+8*14],rax
	add rsp,48
	push QWORD [rsp+8*9]
	ret
LB_5461:
	movzx rax,BYTE [r8+6]
	jmp QWORD [LB_5465+8*rax]
LB_5465: dq LB_5463,LB_5464
LB_5463:
	mov rdi,LB_5467
	call emt_stg 
	mov r8,QWORD [r8+8]
	call LB_5468
	jmp LB_5466
LB_5464:
	mov rdi,LB_5469
	call emt_stg 
	mov rdi,fmt_rcd_box_l
	call emt_stg
	mov rdi,fmt_rcd_r
	call emt_stg
	jmp LB_5466
LB_5466:
	ret
LB_5468:
	movzx rax,BYTE [r8+6]
	jmp QWORD [LB_5472+8*rax]
LB_5472: dq LB_5470,LB_5471
LB_5470:
	mov rdi,LB_5474
	call emt_stg 
	mov r8,QWORD [r8+8]
	call LB_5475
	jmp LB_5473
LB_5471:
	mov rdi,LB_5476
	call emt_stg 
	mov r8,QWORD [r8+8]
	call LB_5477
	jmp LB_5473
LB_5473:
	ret
LB_5477:
	movzx rax,BYTE [r8+6]
	jmp QWORD [LB_5480+8*rax]
LB_5480: dq LB_5478,LB_5479
LB_5478:
	mov rdi,LB_5482
	call emt_stg 
	mov rdi,fmt_rcd_box_l
	call emt_stg
	push r8
	mov r8,QWORD [r8+8+8*0]
	mov rdi,fmt_rcd_box_l
	call emt_stg
	push r8
	mov r8,QWORD [r8+8+8*0]
	mov rdi,r8 
	call emt_r64 
	pop r8 
	mov rdi,fmt_spc 
	call emt_stg 
	push r8
	mov r8,QWORD [r8+8+8*1]
	mov rdi,r8 
	call emt_r64 
	pop r8 
	mov rdi,fmt_spc 
	call emt_stg 
	push r8
	mov r8,QWORD [r8+8+8*2]
	mov rdi,r8
	call emt_s8
	pop r8 
	mov rdi,fmt_spc 
	call emt_stg 
	mov rdi,fmt_rcd_r
	call emt_stg
	pop r8 
	mov rdi,fmt_spc 
	call emt_stg 
	push r8
	mov r8,QWORD [r8+8+8*1]
	call LB_5477
	pop r8 
	mov rdi,fmt_spc 
	call emt_stg 
	mov rdi,fmt_rcd_r
	call emt_stg
	jmp LB_5481
LB_5479:
	mov rdi,LB_5483
	call emt_stg 
	mov rdi,fmt_rcd_box_l
	call emt_stg
	mov rdi,fmt_rcd_r
	call emt_stg
	jmp LB_5481
LB_5481:
	ret
LB_5475:
	movzx rax,BYTE [r8+6]
	jmp QWORD [LB_5486+8*rax]
LB_5486: dq LB_5484,LB_5485
LB_5484:
	mov rdi,LB_5488
	call emt_stg 
	mov rdi,fmt_rcd_box_l
	call emt_stg
	push r8
	mov r8,QWORD [r8+8+8*0]
	call LB_5489
	pop r8 
	mov rdi,fmt_spc 
	call emt_stg 
	push r8
	mov r8,QWORD [r8+8+8*1]
	call LB_5475
	pop r8 
	mov rdi,fmt_spc 
	call emt_stg 
	mov rdi,fmt_rcd_r
	call emt_stg
	jmp LB_5487
LB_5485:
	mov rdi,LB_5490
	call emt_stg 
	mov rdi,fmt_rcd_box_l
	call emt_stg
	mov rdi,fmt_rcd_r
	call emt_stg
	jmp LB_5487
LB_5487:
	ret
LB_5489:
	movzx rax,BYTE [r8+6]
	jmp QWORD [LB_5497+8*rax]
LB_5497: dq LB_5491,LB_5492,LB_5493,LB_5494,LB_5495,LB_5496
LB_5491:
	mov rdi,LB_5499
	call emt_stg 
	mov rdi,fmt_rcd_box_l
	call emt_stg
	push r8
	mov r8,QWORD [r8+8+8*0]
	mov rdi,r8
	call emt_s8
	pop r8 
	mov rdi,fmt_spc 
	call emt_stg 
	push r8
	mov r8,QWORD [r8+8+8*1]
	call LB_5500
	pop r8 
	mov rdi,fmt_spc 
	call emt_stg 
	mov rdi,fmt_rcd_r
	call emt_stg
	jmp LB_5498
LB_5492:
	mov rdi,LB_5501
	call emt_stg 
	mov r8,QWORD [r8+8]
	call LB_5502
	jmp LB_5498
LB_5493:
	mov rdi,LB_5503
	call emt_stg 
	mov rdi,fmt_rcd_box_l
	call emt_stg
	push r8
	mov r8,QWORD [r8+8+8*0]
	mov rdi,r8
	call emt_s8
	pop r8 
	mov rdi,fmt_spc 
	call emt_stg 
	push r8
	mov r8,QWORD [r8+8+8*1]
	call LB_5504
	pop r8 
	mov rdi,fmt_spc 
	call emt_stg 
	mov rdi,fmt_rcd_r
	call emt_stg
	jmp LB_5498
LB_5494:
	mov rdi,LB_5505
	call emt_stg 
	mov r8,QWORD [r8+8]
	call LB_5506
	jmp LB_5498
LB_5495:
	mov rdi,LB_5507
	call emt_stg 
	mov rdi,fmt_rcd_box_l
	call emt_stg
	push r8
	mov r8,QWORD [r8+8+8*0]
	mov rdi,r8
	call emt_s8
	pop r8 
	mov rdi,fmt_spc 
	call emt_stg 
	push r8
	mov r8,QWORD [r8+8+8*1]
	call LB_5508
	pop r8 
	mov rdi,fmt_spc 
	call emt_stg 
	mov rdi,fmt_rcd_r
	call emt_stg
	jmp LB_5498
LB_5496:
	mov rdi,LB_5509
	call emt_stg 
	mov r8,QWORD [r8+8]
	call LB_5510
	jmp LB_5498
LB_5498:
	ret
LB_5510:
	movzx rax,BYTE [r8+6]
	jmp QWORD [LB_5513+8*rax]
LB_5513: dq LB_5511,LB_5512
LB_5511:
	mov rdi,LB_5515
	call emt_stg 
	mov rdi,fmt_rcd_box_l
	call emt_stg
	push r8
	mov r8,QWORD [r8+8+8*0]
	mov rdi,fmt_rcd_box_l
	call emt_stg
	push r8
	mov r8,QWORD [r8+8+8*0]
	mov rdi,r8
	call emt_s8
	pop r8 
	mov rdi,fmt_spc 
	call emt_stg 
	push r8
	mov r8,QWORD [r8+8+8*1]
	call LB_5508
	pop r8 
	mov rdi,fmt_spc 
	call emt_stg 
	mov rdi,fmt_rcd_r
	call emt_stg
	pop r8 
	mov rdi,fmt_spc 
	call emt_stg 
	push r8
	mov r8,QWORD [r8+8+8*1]
	call LB_5510
	pop r8 
	mov rdi,fmt_spc 
	call emt_stg 
	mov rdi,fmt_rcd_r
	call emt_stg
	jmp LB_5514
LB_5512:
	mov rdi,LB_5516
	call emt_stg 
	mov rdi,fmt_rcd_box_l
	call emt_stg
	mov rdi,fmt_rcd_r
	call emt_stg
	jmp LB_5514
LB_5514:
	ret
LB_5508:
	movzx rax,BYTE [r8+6]
	jmp QWORD [LB_5519+8*rax]
LB_5519: dq LB_5517,LB_5518
LB_5517:
	mov rdi,LB_5521
	call emt_stg 
	mov rdi,fmt_rcd_box_l
	call emt_stg
	push r8
	mov r8,QWORD [r8+8+8*0]
	call LB_5522
	pop r8 
	mov rdi,fmt_spc 
	call emt_stg 
	push r8
	mov r8,QWORD [r8+8+8*1]
	call LB_5523
	pop r8 
	mov rdi,fmt_spc 
	call emt_stg 
	mov rdi,fmt_rcd_r
	call emt_stg
	jmp LB_5520
LB_5518:
	mov rdi,LB_5524
	call emt_stg 
	mov rdi,fmt_rcd_box_l
	call emt_stg
	push r8
	mov r8,QWORD [r8+8+8*0]
	call LB_5522
	pop r8 
	mov rdi,fmt_spc 
	call emt_stg 
	push r8
	mov r8,QWORD [r8+8+8*1]
	call LB_5525
	pop r8 
	mov rdi,fmt_spc 
	call emt_stg 
	mov rdi,fmt_rcd_r
	call emt_stg
	jmp LB_5520
LB_5520:
	ret
LB_5525:
	movzx rax,BYTE [r8+6]
	jmp QWORD [LB_5531+8*rax]
LB_5531: dq LB_5526,LB_5527,LB_5528,LB_5529,LB_5530
LB_5526:
	mov rdi,LB_5533
	call emt_stg 
	mov r8,QWORD [r8+8]
	call LB_5534
	jmp LB_5532
LB_5527:
	mov rdi,LB_5535
	call emt_stg 
	mov rdi,fmt_rcd_box_l
	call emt_stg
	push r8
	mov r8,QWORD [r8+8+8*0]
	call LB_5525
	pop r8 
	mov rdi,fmt_spc 
	call emt_stg 
	push r8
	mov r8,QWORD [r8+8+8*1]
	call LB_5525
	pop r8 
	mov rdi,fmt_spc 
	call emt_stg 
	mov rdi,fmt_rcd_r
	call emt_stg
	jmp LB_5532
LB_5528:
	mov rdi,LB_5536
	call emt_stg 
	mov rdi,fmt_rcd_box_l
	call emt_stg
	push r8
	mov r8,QWORD [r8+8+8*0]
	call LB_5525
	pop r8 
	mov rdi,fmt_spc 
	call emt_stg 
	push r8
	mov r8,QWORD [r8+8+8*1]
	call LB_5525
	pop r8 
	mov rdi,fmt_spc 
	call emt_stg 
	mov rdi,fmt_rcd_r
	call emt_stg
	jmp LB_5532
LB_5529:
	mov rdi,LB_5537
	call emt_stg 
	mov r8,QWORD [r8+8]
	call LB_5538
	jmp LB_5532
LB_5530:
	mov rdi,LB_5539
	call emt_stg 
	mov rdi,r8
	call emt_s8
	jmp LB_5532
LB_5532:
	ret
LB_5538:
	movzx rax,BYTE [r8+6]
	jmp QWORD [LB_5542+8*rax]
LB_5542: dq LB_5540,LB_5541
LB_5540:
	mov rdi,LB_5544
	call emt_stg 
	mov rdi,fmt_rcd_box_l
	call emt_stg
	push r8
	mov r8,QWORD [r8+8+8*0]
	mov rdi,r8
	call emt_s8
	pop r8 
	mov rdi,fmt_spc 
	call emt_stg 
	push r8
	mov r8,QWORD [r8+8+8*1]
	call LB_5538
	pop r8 
	mov rdi,fmt_spc 
	call emt_stg 
	mov rdi,fmt_rcd_r
	call emt_stg
	jmp LB_5543
LB_5541:
	mov rdi,LB_5545
	call emt_stg 
	mov rdi,r8
	call emt_s8
	jmp LB_5543
LB_5543:
	ret
LB_5534:
	movzx rax,BYTE [r8+6]
	jmp QWORD [LB_5548+8*rax]
LB_5548: dq LB_5546,LB_5547
LB_5546:
	mov rdi,LB_5550
	call emt_stg 
	mov rdi,fmt_rcd_box_l
	call emt_stg
	push r8
	mov r8,QWORD [r8+8+8*0]
	call LB_5525
	pop r8 
	mov rdi,fmt_spc 
	call emt_stg 
	push r8
	mov r8,QWORD [r8+8+8*1]
	call LB_5534
	pop r8 
	mov rdi,fmt_spc 
	call emt_stg 
	mov rdi,fmt_rcd_r
	call emt_stg
	jmp LB_5549
LB_5547:
	mov rdi,LB_5551
	call emt_stg 
	mov rdi,fmt_rcd_box_l
	call emt_stg
	mov rdi,fmt_rcd_r
	call emt_stg
	jmp LB_5549
LB_5549:
	ret
LB_5523:
	movzx rax,BYTE [r8+6]
	jmp QWORD [LB_5554+8*rax]
LB_5554: dq LB_5552,LB_5553
LB_5552:
	mov rdi,LB_5556
	call emt_stg 
	mov rdi,fmt_rcd_box_l
	call emt_stg
	push r8
	mov r8,QWORD [r8+8+8*0]
	mov rdi,fmt_rcd_box_l
	call emt_stg
	push r8
	mov r8,QWORD [r8+8+8*0]
	mov rdi,r8
	call emt_s8
	pop r8 
	mov rdi,fmt_spc 
	call emt_stg 
	push r8
	mov r8,QWORD [r8+8+8*1]
	call LB_5525
	pop r8 
	mov rdi,fmt_spc 
	call emt_stg 
	mov rdi,fmt_rcd_r
	call emt_stg
	pop r8 
	mov rdi,fmt_spc 
	call emt_stg 
	push r8
	mov r8,QWORD [r8+8+8*1]
	call LB_5523
	pop r8 
	mov rdi,fmt_spc 
	call emt_stg 
	mov rdi,fmt_rcd_r
	call emt_stg
	jmp LB_5555
LB_5553:
	mov rdi,LB_5557
	call emt_stg 
	mov rdi,fmt_rcd_box_l
	call emt_stg
	mov rdi,fmt_rcd_r
	call emt_stg
	jmp LB_5555
LB_5555:
	ret
LB_5522:
	movzx rax,BYTE [r8+6]
	jmp QWORD [LB_5560+8*rax]
LB_5560: dq LB_5558,LB_5559
LB_5558:
	mov rdi,LB_5562
	call emt_stg 
	mov rdi,fmt_rcd_box_l
	call emt_stg
	push r8
	mov r8,QWORD [r8+8+8*0]
	mov rdi,r8
	call emt_s8
	pop r8 
	mov rdi,fmt_spc 
	call emt_stg 
	push r8
	mov r8,QWORD [r8+8+8*1]
	call LB_5522
	pop r8 
	mov rdi,fmt_spc 
	call emt_stg 
	mov rdi,fmt_rcd_r
	call emt_stg
	jmp LB_5561
LB_5559:
	mov rdi,LB_5563
	call emt_stg 
	mov rdi,fmt_rcd_box_l
	call emt_stg
	mov rdi,fmt_rcd_r
	call emt_stg
	jmp LB_5561
LB_5561:
	ret
LB_5506:
	movzx rax,BYTE [r8+6]
	jmp QWORD [LB_5566+8*rax]
LB_5566: dq LB_5564,LB_5565
LB_5564:
	mov rdi,LB_5568
	call emt_stg 
	mov rdi,fmt_rcd_box_l
	call emt_stg
	push r8
	mov r8,QWORD [r8+8+8*0]
	mov rdi,fmt_rcd_box_l
	call emt_stg
	push r8
	mov r8,QWORD [r8+8+8*0]
	mov rdi,r8
	call emt_s8
	pop r8 
	mov rdi,fmt_spc 
	call emt_stg 
	push r8
	mov r8,QWORD [r8+8+8*1]
	call LB_5569
	pop r8 
	mov rdi,fmt_spc 
	call emt_stg 
	push r8
	mov r8,QWORD [r8+8+8*2]
	call LB_5570
	pop r8 
	mov rdi,fmt_spc 
	call emt_stg 
	push r8
	mov r8,QWORD [r8+8+8*3]
	call LB_5571
	pop r8 
	mov rdi,fmt_spc 
	call emt_stg 
	mov rdi,fmt_rcd_r
	call emt_stg
	pop r8 
	mov rdi,fmt_spc 
	call emt_stg 
	push r8
	mov r8,QWORD [r8+8+8*1]
	call LB_5506
	pop r8 
	mov rdi,fmt_spc 
	call emt_stg 
	mov rdi,fmt_rcd_r
	call emt_stg
	jmp LB_5567
LB_5565:
	mov rdi,LB_5572
	call emt_stg 
	mov rdi,fmt_rcd_box_l
	call emt_stg
	mov rdi,fmt_rcd_r
	call emt_stg
	jmp LB_5567
LB_5567:
	ret
LB_5571:
	movzx rax,BYTE [r8+6]
	jmp QWORD [LB_5580+8*rax]
LB_5580: dq LB_5573,LB_5574,LB_5575,LB_5576,LB_5577,LB_5578,LB_5579
LB_5573:
	mov rdi,LB_5582
	call emt_stg 
	mov rdi,fmt_rcd_box_l
	call emt_stg
	push r8
	mov r8,QWORD [r8+8+8*0]
	call LB_5538
	pop r8 
	mov rdi,fmt_spc 
	call emt_stg 
	push r8
	mov r8,QWORD [r8+8+8*1]
	call LB_5583
	pop r8 
	mov rdi,fmt_spc 
	call emt_stg 
	mov rdi,fmt_rcd_r
	call emt_stg
	jmp LB_5581
LB_5574:
	mov rdi,LB_5584
	call emt_stg 
	mov rdi,fmt_rcd_box_l
	call emt_stg
	push r8
	mov r8,QWORD [r8+8+8*0]
	call LB_5585
	pop r8 
	mov rdi,fmt_spc 
	call emt_stg 
	push r8
	mov r8,QWORD [r8+8+8*1]
	call LB_5583
	pop r8 
	mov rdi,fmt_spc 
	call emt_stg 
	mov rdi,fmt_rcd_r
	call emt_stg
	jmp LB_5581
LB_5575:
	mov rdi,LB_5586
	call emt_stg 
	mov rdi,fmt_rcd_box_l
	call emt_stg
	push r8
	mov r8,QWORD [r8+8+8*0]
	call LB_5587
	pop r8 
	mov rdi,fmt_spc 
	call emt_stg 
	push r8
	mov r8,QWORD [r8+8+8*1]
	call LB_5571
	pop r8 
	mov rdi,fmt_spc 
	call emt_stg 
	mov rdi,fmt_rcd_r
	call emt_stg
	jmp LB_5581
LB_5576:
	mov rdi,LB_5588
	call emt_stg 
	mov r8,QWORD [r8+8]
	call LB_5589
	jmp LB_5581
LB_5577:
	mov rdi,LB_5590
	call emt_stg 
	mov rdi,fmt_rcd_box_l
	call emt_stg
	push r8
	mov r8,QWORD [r8+8+8*0]
	call LB_5583
	pop r8 
	mov rdi,fmt_spc 
	call emt_stg 
	push r8
	mov r8,QWORD [r8+8+8*1]
	call LB_5591
	pop r8 
	mov rdi,fmt_spc 
	call emt_stg 
	mov rdi,fmt_rcd_r
	call emt_stg
	jmp LB_5581
LB_5578:
	mov rdi,LB_5592
	call emt_stg 
	mov r8,QWORD [r8+8]
	call LB_5593
	jmp LB_5581
LB_5579:
	mov rdi,LB_5594
	call emt_stg 
	mov r8,QWORD [r8+8]
	mov rdi,r8 
	call emt_r64 
	jmp LB_5581
LB_5581:
	ret
LB_5593:
	movzx rax,BYTE [r8+6]
	jmp QWORD [LB_5597+8*rax]
LB_5597: dq LB_5595,LB_5596
LB_5595:
	mov rdi,LB_5599
	call emt_stg 
	mov r8,QWORD [r8+8]
	call LB_5583
	jmp LB_5598
LB_5596:
	mov rdi,LB_5600
	call emt_stg 
	mov rdi,fmt_rcd_box_l
	call emt_stg
	mov rdi,fmt_rcd_r
	call emt_stg
	jmp LB_5598
LB_5598:
	ret
LB_5591:
	movzx rax,BYTE [r8+6]
	jmp QWORD [LB_5603+8*rax]
LB_5603: dq LB_5601,LB_5602
LB_5601:
	mov rdi,LB_5605
	call emt_stg 
	mov r8,QWORD [r8+8]
	call LB_5606
	jmp LB_5604
LB_5602:
	mov rdi,LB_5607
	call emt_stg 
	mov rdi,fmt_rcd_box_l
	call emt_stg
	push r8
	mov r8,QWORD [r8+8+8*0]
	call LB_5608
	pop r8 
	mov rdi,fmt_spc 
	call emt_stg 
	push r8
	mov r8,QWORD [r8+8+8*1]
	call LB_5571
	pop r8 
	mov rdi,fmt_spc 
	call emt_stg 
	mov rdi,fmt_rcd_r
	call emt_stg
	jmp LB_5604
LB_5604:
	ret
LB_5608:
	movzx rax,BYTE [r8+6]
	jmp QWORD [LB_5611+8*rax]
LB_5611: dq LB_5609,LB_5610
LB_5609:
	mov rdi,LB_5613
	call emt_stg 
	mov rdi,fmt_rcd_box_l
	call emt_stg
	push r8
	mov r8,QWORD [r8+8+8*0]
	call LB_5569
	pop r8 
	mov rdi,fmt_spc 
	call emt_stg 
	push r8
	mov r8,QWORD [r8+8+8*1]
	call LB_5608
	pop r8 
	mov rdi,fmt_spc 
	call emt_stg 
	mov rdi,fmt_rcd_r
	call emt_stg
	jmp LB_5612
LB_5610:
	mov rdi,LB_5614
	call emt_stg 
	mov rdi,fmt_rcd_box_l
	call emt_stg
	mov rdi,fmt_rcd_r
	call emt_stg
	jmp LB_5612
LB_5612:
	ret
LB_5606:
	movzx rax,BYTE [r8+6]
	jmp QWORD [LB_5617+8*rax]
LB_5617: dq LB_5615,LB_5616
LB_5615:
	mov rdi,LB_5619
	call emt_stg 
	mov rdi,fmt_rcd_box_l
	call emt_stg
	push r8
	mov r8,QWORD [r8+8+8*0]
	mov rdi,fmt_rcd_box_l
	call emt_stg
	push r8
	mov r8,QWORD [r8+8+8*0]
	call LB_5620
	pop r8 
	mov rdi,fmt_spc 
	call emt_stg 
	push r8
	mov r8,QWORD [r8+8+8*1]
	call LB_5621
	pop r8 
	mov rdi,fmt_spc 
	call emt_stg 
	push r8
	mov r8,QWORD [r8+8+8*2]
	call LB_5622
	pop r8 
	mov rdi,fmt_spc 
	call emt_stg 
	mov rdi,fmt_rcd_r
	call emt_stg
	pop r8 
	mov rdi,fmt_spc 
	call emt_stg 
	push r8
	mov r8,QWORD [r8+8+8*1]
	call LB_5606
	pop r8 
	mov rdi,fmt_spc 
	call emt_stg 
	mov rdi,fmt_rcd_r
	call emt_stg
	jmp LB_5618
LB_5616:
	mov rdi,LB_5623
	call emt_stg 
	mov rdi,fmt_rcd_box_l
	call emt_stg
	push r8
	mov r8,QWORD [r8+8+8*0]
	call LB_5620
	pop r8 
	mov rdi,fmt_spc 
	call emt_stg 
	push r8
	mov r8,QWORD [r8+8+8*1]
	call LB_5621
	pop r8 
	mov rdi,fmt_spc 
	call emt_stg 
	push r8
	mov r8,QWORD [r8+8+8*2]
	call LB_5622
	pop r8 
	mov rdi,fmt_spc 
	call emt_stg 
	mov rdi,fmt_rcd_r
	call emt_stg
	jmp LB_5618
LB_5618:
	ret
LB_5622:
	movzx rax,BYTE [r8+6]
	jmp QWORD [LB_5627+8*rax]
LB_5627: dq LB_5624,LB_5625,LB_5626
LB_5624:
	mov rdi,LB_5629
	call emt_stg 
	mov r8,QWORD [r8+8]
	call LB_5589
	jmp LB_5628
LB_5625:
	mov rdi,LB_5630
	call emt_stg 
	mov rdi,fmt_rcd_box_l
	call emt_stg
	push r8
	mov r8,QWORD [r8+8+8*0]
	call LB_5583
	pop r8 
	mov rdi,fmt_spc 
	call emt_stg 
	push r8
	mov r8,QWORD [r8+8+8*1]
	call LB_5606
	pop r8 
	mov rdi,fmt_spc 
	call emt_stg 
	mov rdi,fmt_rcd_r
	call emt_stg
	jmp LB_5628
LB_5626:
	mov rdi,LB_5631
	call emt_stg 
	mov r8,QWORD [r8+8]
	call LB_5571
	jmp LB_5628
LB_5628:
	ret
LB_5621:
	movzx rax,BYTE [r8+6]
	jmp QWORD [LB_5634+8*rax]
LB_5634: dq LB_5632,LB_5633
LB_5632:
	mov rdi,LB_5636
	call emt_stg 
	mov rdi,fmt_rcd_box_l
	call emt_stg
	push r8
	mov r8,QWORD [r8+8+8*0]
	call LB_5637
	pop r8 
	mov rdi,fmt_spc 
	call emt_stg 
	push r8
	mov r8,QWORD [r8+8+8*1]
	call LB_5621
	pop r8 
	mov rdi,fmt_spc 
	call emt_stg 
	mov rdi,fmt_rcd_r
	call emt_stg
	jmp LB_5635
LB_5633:
	mov rdi,LB_5638
	call emt_stg 
	mov rdi,fmt_rcd_box_l
	call emt_stg
	mov rdi,fmt_rcd_r
	call emt_stg
	jmp LB_5635
LB_5635:
	ret
LB_5637:
	movzx rax,BYTE [r8+6]
	jmp QWORD [LB_5642+8*rax]
LB_5642: dq LB_5639,LB_5640,LB_5641
LB_5639:
	mov rdi,LB_5644
	call emt_stg 
	mov rdi,fmt_rcd_box_l
	call emt_stg
	push r8
	mov r8,QWORD [r8+8+8*0]
	call LB_5583
	pop r8 
	mov rdi,fmt_spc 
	call emt_stg 
	push r8
	mov r8,QWORD [r8+8+8*1]
	call LB_5620
	pop r8 
	mov rdi,fmt_spc 
	call emt_stg 
	mov rdi,fmt_rcd_r
	call emt_stg
	jmp LB_5643
LB_5640:
	mov rdi,LB_5645
	call emt_stg 
	mov rdi,fmt_rcd_box_l
	call emt_stg
	push r8
	mov r8,QWORD [r8+8+8*0]
	call LB_5646
	pop r8 
	mov rdi,fmt_spc 
	call emt_stg 
	push r8
	mov r8,QWORD [r8+8+8*1]
	call LB_5646
	pop r8 
	mov rdi,fmt_spc 
	call emt_stg 
	mov rdi,fmt_rcd_r
	call emt_stg
	jmp LB_5643
LB_5641:
	mov rdi,LB_5647
	call emt_stg 
	mov rdi,fmt_rcd_box_l
	call emt_stg
	push r8
	mov r8,QWORD [r8+8+8*0]
	call LB_5646
	pop r8 
	mov rdi,fmt_spc 
	call emt_stg 
	push r8
	mov r8,QWORD [r8+8+8*1]
	call LB_5646
	pop r8 
	mov rdi,fmt_spc 
	call emt_stg 
	mov rdi,fmt_rcd_r
	call emt_stg
	jmp LB_5643
LB_5643:
	ret
LB_5646:
	movzx rax,BYTE [r8+6]
	jmp QWORD [LB_5650+8*rax]
LB_5650: dq LB_5648,LB_5649
LB_5648:
	mov rdi,LB_5652
	call emt_stg 
	mov r8,QWORD [r8+8]
	call LB_5653
	jmp LB_5651
LB_5649:
	mov rdi,LB_5654
	call emt_stg 
	mov rdi,r8
	call emt_s8
	jmp LB_5651
LB_5651:
	ret
LB_5653:
	movzx rax,BYTE [r8+6]
	jmp QWORD [LB_5657+8*rax]
LB_5657: dq LB_5655,LB_5656
LB_5655:
	mov rdi,LB_5659
	call emt_stg 
	mov r8,QWORD [r8+8]
	call LB_5660
	jmp LB_5658
LB_5656:
	mov rdi,LB_5661
	call emt_stg 
	mov r8,QWORD [r8+8]
	call LB_5538
	jmp LB_5658
LB_5658:
	ret
LB_5660:
	movzx rax,BYTE [r8+6]
	jmp QWORD [LB_5664+8*rax]
LB_5664: dq LB_5662,LB_5663
LB_5662:
	mov rdi,LB_5666
	call emt_stg 
	mov r8,QWORD [r8+8]
	mov rdi,r8 
	call emt_r64 
	jmp LB_5665
LB_5663:
	mov rdi,LB_5667
	call emt_stg 
	mov rdi,r8
	call emt_s8
	jmp LB_5665
LB_5665:
	ret
LB_5620:
	movzx rax,BYTE [r8+6]
	jmp QWORD [LB_5670+8*rax]
LB_5670: dq LB_5668,LB_5669
LB_5668:
	mov rdi,LB_5672
	call emt_stg 
	mov r8,QWORD [r8+8]
	call LB_5673
	jmp LB_5671
LB_5669:
	mov rdi,LB_5674
	call emt_stg 
	mov r8,QWORD [r8+8]
	call LB_5675
	jmp LB_5671
LB_5671:
	ret
LB_5675:
	movzx rax,BYTE [r8+6]
	jmp QWORD [LB_5680+8*rax]
LB_5680: dq LB_5676,LB_5677,LB_5678,LB_5679
LB_5676:
	mov rdi,LB_5682
	call emt_stg 
	mov rdi,fmt_rcd_box_l
	call emt_stg
	push r8
	mov r8,QWORD [r8+8+8*0]
	call LB_5538
	pop r8 
	mov rdi,fmt_spc 
	call emt_stg 
	push r8
	mov r8,QWORD [r8+8+8*1]
	call LB_5620
	pop r8 
	mov rdi,fmt_spc 
	call emt_stg 
	mov rdi,fmt_rcd_r
	call emt_stg
	jmp LB_5681
LB_5677:
	mov rdi,LB_5683
	call emt_stg 
	mov r8,QWORD [r8+8]
	call LB_5653
	jmp LB_5681
LB_5678:
	mov rdi,LB_5684
	call emt_stg 
	mov r8,QWORD [r8+8]
	call LB_5685
	jmp LB_5681
LB_5679:
	mov rdi,LB_5686
	call emt_stg 
	mov rdi,r8
	call emt_s8
	jmp LB_5681
LB_5681:
	ret
LB_5685:
	movzx rax,BYTE [r8+6]
	jmp QWORD [LB_5689+8*rax]
LB_5689: dq LB_5687,LB_5688
LB_5687:
	mov rdi,LB_5691
	call emt_stg 
	mov rdi,r8
	call emt_s8
	jmp LB_5690
LB_5688:
	mov rdi,LB_5692
	call emt_stg 
	mov rdi,fmt_rcd_box_l
	call emt_stg
	mov rdi,fmt_rcd_r
	call emt_stg
	jmp LB_5690
LB_5690:
	ret
LB_5673:
	movzx rax,BYTE [r8+6]
	jmp QWORD [LB_5695+8*rax]
LB_5695: dq LB_5693,LB_5694
LB_5693:
	mov rdi,LB_5697
	call emt_stg 
	mov rdi,fmt_rcd_box_l
	call emt_stg
	push r8
	mov r8,QWORD [r8+8+8*0]
	call LB_5620
	pop r8 
	mov rdi,fmt_spc 
	call emt_stg 
	push r8
	mov r8,QWORD [r8+8+8*1]
	call LB_5673
	pop r8 
	mov rdi,fmt_spc 
	call emt_stg 
	mov rdi,fmt_rcd_r
	call emt_stg
	jmp LB_5696
LB_5694:
	mov rdi,LB_5698
	call emt_stg 
	mov rdi,fmt_rcd_box_l
	call emt_stg
	mov rdi,fmt_rcd_r
	call emt_stg
	jmp LB_5696
LB_5696:
	ret
LB_5589:
	movzx rax,BYTE [r8+6]
	jmp QWORD [LB_5701+8*rax]
LB_5701: dq LB_5699,LB_5700
LB_5699:
	mov rdi,LB_5703
	call emt_stg 
	mov rdi,fmt_rcd_box_l
	call emt_stg
	push r8
	mov r8,QWORD [r8+8+8*0]
	mov rdi,fmt_rcd_box_l
	call emt_stg
	push r8
	mov r8,QWORD [r8+8+8*0]
	call LB_5621
	pop r8 
	mov rdi,fmt_spc 
	call emt_stg 
	push r8
	mov r8,QWORD [r8+8+8*1]
	call LB_5622
	pop r8 
	mov rdi,fmt_spc 
	call emt_stg 
	mov rdi,fmt_rcd_r
	call emt_stg
	pop r8 
	mov rdi,fmt_spc 
	call emt_stg 
	push r8
	mov r8,QWORD [r8+8+8*1]
	call LB_5589
	pop r8 
	mov rdi,fmt_spc 
	call emt_stg 
	mov rdi,fmt_rcd_r
	call emt_stg
	jmp LB_5702
LB_5700:
	mov rdi,LB_5704
	call emt_stg 
	mov rdi,fmt_rcd_box_l
	call emt_stg
	push r8
	mov r8,QWORD [r8+8+8*0]
	call LB_5621
	pop r8 
	mov rdi,fmt_spc 
	call emt_stg 
	push r8
	mov r8,QWORD [r8+8+8*1]
	call LB_5622
	pop r8 
	mov rdi,fmt_spc 
	call emt_stg 
	mov rdi,fmt_rcd_r
	call emt_stg
	jmp LB_5702
LB_5702:
	ret
LB_5587:
	movzx rax,BYTE [r8+6]
	jmp QWORD [LB_5709+8*rax]
LB_5709: dq LB_5705,LB_5706,LB_5707,LB_5708
LB_5705:
	mov rdi,LB_5711
	call emt_stg 
	mov rdi,fmt_rcd_box_l
	call emt_stg
	push r8
	mov r8,QWORD [r8+8+8*0]
	call LB_5538
	pop r8 
	mov rdi,fmt_spc 
	call emt_stg 
	push r8
	mov r8,QWORD [r8+8+8*1]
	call LB_5583
	pop r8 
	mov rdi,fmt_spc 
	call emt_stg 
	push r8
	mov r8,QWORD [r8+8+8*2]
	call LB_5569
	pop r8 
	mov rdi,fmt_spc 
	call emt_stg 
	mov rdi,fmt_rcd_r
	call emt_stg
	jmp LB_5710
LB_5706:
	mov rdi,LB_5712
	call emt_stg 
	mov rdi,fmt_rcd_box_l
	call emt_stg
	push r8
	mov r8,QWORD [r8+8+8*0]
	call LB_5585
	pop r8 
	mov rdi,fmt_spc 
	call emt_stg 
	push r8
	mov r8,QWORD [r8+8+8*1]
	call LB_5583
	pop r8 
	mov rdi,fmt_spc 
	call emt_stg 
	push r8
	mov r8,QWORD [r8+8+8*2]
	call LB_5569
	pop r8 
	mov rdi,fmt_spc 
	call emt_stg 
	mov rdi,fmt_rcd_r
	call emt_stg
	jmp LB_5710
LB_5707:
	mov rdi,LB_5713
	call emt_stg 
	mov rdi,fmt_rcd_box_l
	call emt_stg
	push r8
	mov r8,QWORD [r8+8+8*0]
	call LB_5653
	pop r8 
	mov rdi,fmt_spc 
	call emt_stg 
	push r8
	mov r8,QWORD [r8+8+8*1]
	call LB_5583
	pop r8 
	mov rdi,fmt_spc 
	call emt_stg 
	push r8
	mov r8,QWORD [r8+8+8*2]
	call LB_5569
	pop r8 
	mov rdi,fmt_spc 
	call emt_stg 
	mov rdi,fmt_rcd_r
	call emt_stg
	jmp LB_5710
LB_5708:
	mov rdi,LB_5714
	call emt_stg 
	mov rdi,fmt_rcd_box_l
	call emt_stg
	push r8
	mov r8,QWORD [r8+8+8*0]
	call LB_5715
	pop r8 
	mov rdi,fmt_spc 
	call emt_stg 
	push r8
	mov r8,QWORD [r8+8+8*1]
	call LB_5716
	pop r8 
	mov rdi,fmt_spc 
	call emt_stg 
	push r8
	mov r8,QWORD [r8+8+8*2]
	call LB_5717
	pop r8 
	mov rdi,fmt_spc 
	call emt_stg 
	mov rdi,fmt_rcd_r
	call emt_stg
	jmp LB_5710
LB_5710:
	ret
LB_5717:
	movzx rax,BYTE [r8+6]
	jmp QWORD [LB_5720+8*rax]
LB_5720: dq LB_5718,LB_5719
LB_5718:
	mov rdi,LB_5722
	call emt_stg 
	mov rdi,fmt_rcd_box_l
	call emt_stg
	push r8
	mov r8,QWORD [r8+8+8*0]
	call LB_5723
	pop r8 
	mov rdi,fmt_spc 
	call emt_stg 
	push r8
	mov r8,QWORD [r8+8+8*1]
	call LB_5717
	pop r8 
	mov rdi,fmt_spc 
	call emt_stg 
	mov rdi,fmt_rcd_r
	call emt_stg
	jmp LB_5721
LB_5719:
	mov rdi,LB_5724
	call emt_stg 
	mov rdi,fmt_rcd_box_l
	call emt_stg
	mov rdi,fmt_rcd_r
	call emt_stg
	jmp LB_5721
LB_5721:
	ret
LB_5723:
	movzx rax,BYTE [r8+6]
	jmp QWORD [LB_5727+8*rax]
LB_5727: dq LB_5725,LB_5726
LB_5725:
	mov rdi,LB_5729
	call emt_stg 
	mov r8,QWORD [r8+8]
	call LB_5685
	jmp LB_5728
LB_5726:
	mov rdi,LB_5730
	call emt_stg 
	mov rdi,r8
	call emt_s8
	jmp LB_5728
LB_5728:
	ret
LB_5716:
	movzx rax,BYTE [r8+6]
	jmp QWORD [LB_5733+8*rax]
LB_5733: dq LB_5731,LB_5732
LB_5731:
	mov rdi,LB_5735
	call emt_stg 
	mov rdi,fmt_rcd_box_l
	call emt_stg
	push r8
	mov r8,QWORD [r8+8+8*0]
	call LB_5585
	pop r8 
	mov rdi,fmt_spc 
	call emt_stg 
	push r8
	mov r8,QWORD [r8+8+8*1]
	call LB_5716
	pop r8 
	mov rdi,fmt_spc 
	call emt_stg 
	mov rdi,fmt_rcd_r
	call emt_stg
	jmp LB_5734
LB_5732:
	mov rdi,LB_5736
	call emt_stg 
	mov rdi,fmt_rcd_box_l
	call emt_stg
	mov rdi,fmt_rcd_r
	call emt_stg
	jmp LB_5734
LB_5734:
	ret
LB_5715:
	movzx rax,BYTE [r8+6]
	jmp QWORD [LB_5739+8*rax]
LB_5739: dq LB_5737,LB_5738
LB_5737:
	mov rdi,LB_5741
	call emt_stg 
	mov rdi,fmt_rcd_box_l
	call emt_stg
	push r8
	mov r8,QWORD [r8+8+8*0]
	call LB_5742
	pop r8 
	mov rdi,fmt_spc 
	call emt_stg 
	push r8
	mov r8,QWORD [r8+8+8*1]
	call LB_5715
	pop r8 
	mov rdi,fmt_spc 
	call emt_stg 
	mov rdi,fmt_rcd_r
	call emt_stg
	jmp LB_5740
LB_5738:
	mov rdi,LB_5743
	call emt_stg 
	mov rdi,fmt_rcd_box_l
	call emt_stg
	mov rdi,fmt_rcd_r
	call emt_stg
	jmp LB_5740
LB_5740:
	ret
LB_5742:
	movzx rax,BYTE [r8+6]
	jmp QWORD [LB_5748+8*rax]
LB_5748: dq LB_5744,LB_5745,LB_5746,LB_5747
LB_5744:
	mov rdi,LB_5750
	call emt_stg 
	mov rdi,r8
	call emt_s8
	jmp LB_5749
LB_5745:
	mov rdi,LB_5751
	call emt_stg 
	mov r8,QWORD [r8+8]
	call LB_5653
	jmp LB_5749
LB_5746:
	mov rdi,LB_5752
	call emt_stg 
	mov rdi,fmt_rcd_box_l
	call emt_stg
	push r8
	mov r8,QWORD [r8+8+8*0]
	call LB_5753
	pop r8 
	mov rdi,fmt_spc 
	call emt_stg 
	push r8
	mov r8,QWORD [r8+8+8*1]
	mov rdi,r8 
	call emt_r64 
	pop r8 
	mov rdi,fmt_spc 
	call emt_stg 
	mov rdi,fmt_rcd_r
	call emt_stg
	jmp LB_5749
LB_5747:
	mov rdi,LB_5754
	call emt_stg 
	mov rdi,fmt_rcd_box_l
	call emt_stg
	push r8
	mov r8,QWORD [r8+8+8*0]
	mov rdi,r8 
	call emt_r64 
	pop r8 
	mov rdi,fmt_spc 
	call emt_stg 
	push r8
	mov r8,QWORD [r8+8+8*1]
	mov rdi,r8
	call emt_s8
	pop r8 
	mov rdi,fmt_spc 
	call emt_stg 
	mov rdi,fmt_rcd_r
	call emt_stg
	jmp LB_5749
LB_5749:
	ret
LB_5753:
	movzx rax,BYTE [r8+6]
	jmp QWORD [LB_5759+8*rax]
LB_5759: dq LB_5755,LB_5756,LB_5757,LB_5758
LB_5755:
	mov rdi,LB_5761
	call emt_stg 
	mov rdi,fmt_rcd_box_l
	call emt_stg
	mov rdi,fmt_rcd_r
	call emt_stg
	jmp LB_5760
LB_5756:
	mov rdi,LB_5762
	call emt_stg 
	mov rdi,fmt_rcd_box_l
	call emt_stg
	mov rdi,fmt_rcd_r
	call emt_stg
	jmp LB_5760
LB_5757:
	mov rdi,LB_5763
	call emt_stg 
	mov rdi,fmt_rcd_box_l
	call emt_stg
	mov rdi,fmt_rcd_r
	call emt_stg
	jmp LB_5760
LB_5758:
	mov rdi,LB_5764
	call emt_stg 
	mov rdi,fmt_rcd_box_l
	call emt_stg
	mov rdi,fmt_rcd_r
	call emt_stg
	jmp LB_5760
LB_5760:
	ret
LB_5585:
	movzx rax,BYTE [r8+6]
	jmp QWORD [LB_5767+8*rax]
LB_5767: dq LB_5765,LB_5766
LB_5765:
	mov rdi,LB_5769
	call emt_stg 
	mov r8,QWORD [r8+8]
	call LB_5653
	jmp LB_5768
LB_5766:
	mov rdi,LB_5770
	call emt_stg 
	mov rdi,r8
	call emt_s8
	jmp LB_5768
LB_5768:
	ret
LB_5583:
	movzx rax,BYTE [r8+6]
	jmp QWORD [LB_5773+8*rax]
LB_5773: dq LB_5771,LB_5772
LB_5771:
	mov rdi,LB_5775
	call emt_stg 
	mov r8,QWORD [r8+8]
	call LB_5776
	jmp LB_5774
LB_5772:
	mov rdi,LB_5777
	call emt_stg 
	mov r8,QWORD [r8+8]
	call LB_5585
	jmp LB_5774
LB_5774:
	ret
LB_5776:
	movzx rax,BYTE [r8+6]
	jmp QWORD [LB_5780+8*rax]
LB_5780: dq LB_5778,LB_5779
LB_5778:
	mov rdi,LB_5782
	call emt_stg 
	mov rdi,fmt_rcd_box_l
	call emt_stg
	push r8
	mov r8,QWORD [r8+8+8*0]
	call LB_5583
	pop r8 
	mov rdi,fmt_spc 
	call emt_stg 
	push r8
	mov r8,QWORD [r8+8+8*1]
	call LB_5776
	pop r8 
	mov rdi,fmt_spc 
	call emt_stg 
	mov rdi,fmt_rcd_r
	call emt_stg
	jmp LB_5781
LB_5779:
	mov rdi,LB_5783
	call emt_stg 
	mov rdi,fmt_rcd_box_l
	call emt_stg
	mov rdi,fmt_rcd_r
	call emt_stg
	jmp LB_5781
LB_5781:
	ret
LB_5570:
	movzx rax,BYTE [r8+6]
	jmp QWORD [LB_5786+8*rax]
LB_5786: dq LB_5784,LB_5785
LB_5784:
	mov rdi,LB_5788
	call emt_stg 
	mov r8,QWORD [r8+8]
	call LB_5525
	jmp LB_5787
LB_5785:
	mov rdi,LB_5789
	call emt_stg 
	mov rdi,fmt_rcd_box_l
	call emt_stg
	mov rdi,fmt_rcd_r
	call emt_stg
	jmp LB_5787
LB_5787:
	ret
LB_5569:
	movzx rax,BYTE [r8+6]
	jmp QWORD [LB_5792+8*rax]
LB_5792: dq LB_5790,LB_5791
LB_5790:
	mov rdi,LB_5794
	call emt_stg 
	mov r8,QWORD [r8+8]
	call LB_5608
	jmp LB_5793
LB_5791:
	mov rdi,LB_5795
	call emt_stg 
	mov r8,QWORD [r8+8]
	call LB_5723
	jmp LB_5793
LB_5793:
	ret
LB_5504:
	movzx rax,BYTE [r8+6]
	jmp QWORD [LB_5799+8*rax]
LB_5799: dq LB_5796,LB_5797,LB_5798
LB_5796:
	mov rdi,LB_5801
	call emt_stg 
	mov rdi,fmt_rcd_box_l
	call emt_stg
	push r8
	mov r8,QWORD [r8+8+8*0]
	call LB_5569
	pop r8 
	mov rdi,fmt_spc 
	call emt_stg 
	push r8
	mov r8,QWORD [r8+8+8*1]
	call LB_5570
	pop r8 
	mov rdi,fmt_spc 
	call emt_stg 
	push r8
	mov r8,QWORD [r8+8+8*2]
	call LB_5571
	pop r8 
	mov rdi,fmt_spc 
	call emt_stg 
	mov rdi,fmt_rcd_r
	call emt_stg
	jmp LB_5800
LB_5797:
	mov rdi,LB_5802
	call emt_stg 
	mov r8,QWORD [r8+8]
	call LB_5653
	jmp LB_5800
LB_5798:
	mov rdi,LB_5803
	call emt_stg 
	mov r8,QWORD [r8+8]
	call LB_5571
	jmp LB_5800
LB_5800:
	ret
LB_5502:
	movzx rax,BYTE [r8+6]
	jmp QWORD [LB_5806+8*rax]
LB_5806: dq LB_5804,LB_5805
LB_5804:
	mov rdi,LB_5808
	call emt_stg 
	mov rdi,fmt_rcd_box_l
	call emt_stg
	push r8
	mov r8,QWORD [r8+8+8*0]
	mov rdi,fmt_rcd_box_l
	call emt_stg
	push r8
	mov r8,QWORD [r8+8+8*0]
	mov rdi,r8
	call emt_s8
	pop r8 
	mov rdi,fmt_spc 
	call emt_stg 
	push r8
	mov r8,QWORD [r8+8+8*1]
	call LB_5809
	pop r8 
	mov rdi,fmt_spc 
	call emt_stg 
	mov rdi,fmt_rcd_r
	call emt_stg
	pop r8 
	mov rdi,fmt_spc 
	call emt_stg 
	push r8
	mov r8,QWORD [r8+8+8*1]
	call LB_5502
	pop r8 
	mov rdi,fmt_spc 
	call emt_stg 
	mov rdi,fmt_rcd_r
	call emt_stg
	jmp LB_5807
LB_5805:
	mov rdi,LB_5810
	call emt_stg 
	mov rdi,fmt_rcd_box_l
	call emt_stg
	mov rdi,fmt_rcd_r
	call emt_stg
	jmp LB_5807
LB_5807:
	ret
LB_5809:
	movzx rax,BYTE [r8+6]
	jmp QWORD [LB_5813+8*rax]
LB_5813: dq LB_5811,LB_5812
LB_5811:
	mov rdi,LB_5815
	call emt_stg 
	mov r8,QWORD [r8+8]
	call LB_5816
	jmp LB_5814
LB_5812:
	mov rdi,LB_5817
	call emt_stg 
	mov r8,QWORD [r8+8]
	call LB_5818
	jmp LB_5814
LB_5814:
	ret
LB_5818:
	movzx rax,BYTE [r8+6]
	jmp QWORD [LB_5821+8*rax]
LB_5821: dq LB_5819,LB_5820
LB_5819:
	mov rdi,LB_5823
	call emt_stg 
	mov rdi,fmt_rcd_box_l
	call emt_stg
	push r8
	mov r8,QWORD [r8+8+8*0]
	call LB_5717
	pop r8 
	mov rdi,fmt_spc 
	call emt_stg 
	push r8
	mov r8,QWORD [r8+8+8*1]
	call LB_5569
	pop r8 
	mov rdi,fmt_spc 
	call emt_stg 
	push r8
	mov r8,QWORD [r8+8+8*2]
	call LB_5571
	pop r8 
	mov rdi,fmt_spc 
	call emt_stg 
	push r8
	mov r8,QWORD [r8+8+8*3]
	call LB_5824
	pop r8 
	mov rdi,fmt_spc 
	call emt_stg 
	push r8
	mov r8,QWORD [r8+8+8*4]
	call LB_5825
	pop r8 
	mov rdi,fmt_spc 
	call emt_stg 
	push r8
	mov r8,QWORD [r8+8+8*5]
	call LB_5826
	pop r8 
	mov rdi,fmt_spc 
	call emt_stg 
	push r8
	mov r8,QWORD [r8+8+8*6]
	call LB_5818
	pop r8 
	mov rdi,fmt_spc 
	call emt_stg 
	mov rdi,fmt_rcd_r
	call emt_stg
	jmp LB_5822
LB_5820:
	mov rdi,LB_5827
	call emt_stg 
	mov rdi,fmt_rcd_box_l
	call emt_stg
	push r8
	mov r8,QWORD [r8+8+8*0]
	call LB_5717
	pop r8 
	mov rdi,fmt_spc 
	call emt_stg 
	push r8
	mov r8,QWORD [r8+8+8*1]
	call LB_5569
	pop r8 
	mov rdi,fmt_spc 
	call emt_stg 
	push r8
	mov r8,QWORD [r8+8+8*2]
	call LB_5571
	pop r8 
	mov rdi,fmt_spc 
	call emt_stg 
	push r8
	mov r8,QWORD [r8+8+8*3]
	call LB_5824
	pop r8 
	mov rdi,fmt_spc 
	call emt_stg 
	push r8
	mov r8,QWORD [r8+8+8*4]
	call LB_5825
	pop r8 
	mov rdi,fmt_spc 
	call emt_stg 
	push r8
	mov r8,QWORD [r8+8+8*5]
	call LB_5826
	pop r8 
	mov rdi,fmt_spc 
	call emt_stg 
	mov rdi,fmt_rcd_r
	call emt_stg
	jmp LB_5822
LB_5822:
	ret
LB_5826:
	movzx rax,BYTE [r8+6]
	jmp QWORD [LB_5830+8*rax]
LB_5830: dq LB_5828,LB_5829
LB_5828:
	mov rdi,LB_5832
	call emt_stg 
	mov rdi,fmt_rcd_box_l
	call emt_stg
	push r8
	mov r8,QWORD [r8+8+8*0]
	call LB_5569
	pop r8 
	mov rdi,fmt_spc 
	call emt_stg 
	push r8
	mov r8,QWORD [r8+8+8*1]
	call LB_5818
	pop r8 
	mov rdi,fmt_spc 
	call emt_stg 
	mov rdi,fmt_rcd_r
	call emt_stg
	jmp LB_5831
LB_5829:
	mov rdi,LB_5833
	call emt_stg 
	mov rdi,fmt_rcd_box_l
	call emt_stg
	mov rdi,fmt_rcd_r
	call emt_stg
	jmp LB_5831
LB_5831:
	ret
LB_5825:
	movzx rax,BYTE [r8+6]
	jmp QWORD [LB_5837+8*rax]
LB_5837: dq LB_5834,LB_5835,LB_5836
LB_5834:
	mov rdi,LB_5839
	call emt_stg 
	mov r8,QWORD [r8+8]
	call LB_5840
	jmp LB_5838
LB_5835:
	mov rdi,LB_5841
	call emt_stg 
	mov rdi,fmt_rcd_box_l
	call emt_stg
	push r8
	mov r8,QWORD [r8+8+8*0]
	call LB_5842
	pop r8 
	mov rdi,fmt_spc 
	call emt_stg 
	push r8
	mov r8,QWORD [r8+8+8*1]
	call LB_5825
	pop r8 
	mov rdi,fmt_spc 
	call emt_stg 
	mov rdi,fmt_rcd_r
	call emt_stg
	jmp LB_5838
LB_5836:
	mov rdi,LB_5843
	call emt_stg 
	mov rdi,fmt_rcd_box_l
	call emt_stg
	mov rdi,fmt_rcd_r
	call emt_stg
	jmp LB_5838
LB_5838:
	ret
LB_5842:
	movzx rax,BYTE [r8+6]
	jmp QWORD [LB_5846+8*rax]
LB_5846: dq LB_5844,LB_5845
LB_5844:
	mov rdi,LB_5848
	call emt_stg 
	mov r8,QWORD [r8+8]
	call LB_5849
	jmp LB_5847
LB_5845:
	mov rdi,LB_5850
	call emt_stg 
	mov r8,QWORD [r8+8]
	call LB_5849
	jmp LB_5847
LB_5847:
	ret
LB_5849:
	movzx rax,BYTE [r8+6]
	jmp QWORD [LB_5853+8*rax]
LB_5853: dq LB_5851,LB_5852
LB_5851:
	mov rdi,LB_5855
	call emt_stg 
	mov r8,QWORD [r8+8]
	call LB_5538
	jmp LB_5854
LB_5852:
	mov rdi,LB_5856
	call emt_stg 
	mov rdi,r8
	call emt_s8
	jmp LB_5854
LB_5854:
	ret
LB_5840:
	movzx rax,BYTE [r8+6]
	jmp QWORD [LB_5859+8*rax]
LB_5859: dq LB_5857,LB_5858
LB_5857:
	mov rdi,LB_5861
	call emt_stg 
	mov rdi,fmt_rcd_box_l
	call emt_stg
	push r8
	mov r8,QWORD [r8+8+8*0]
	call LB_5842
	pop r8 
	mov rdi,fmt_spc 
	call emt_stg 
	push r8
	mov r8,QWORD [r8+8+8*1]
	call LB_5840
	pop r8 
	mov rdi,fmt_spc 
	call emt_stg 
	mov rdi,fmt_rcd_r
	call emt_stg
	jmp LB_5860
LB_5858:
	mov rdi,LB_5862
	call emt_stg 
	mov rdi,fmt_rcd_box_l
	call emt_stg
	mov rdi,fmt_rcd_r
	call emt_stg
	jmp LB_5860
LB_5860:
	ret
LB_5824:
	movzx rax,BYTE [r8+6]
	jmp QWORD [LB_5866+8*rax]
LB_5866: dq LB_5863,LB_5864,LB_5865
LB_5863:
	mov rdi,LB_5868
	call emt_stg 
	mov rdi,fmt_rcd_box_l
	call emt_stg
	mov rdi,fmt_rcd_r
	call emt_stg
	jmp LB_5867
LB_5864:
	mov rdi,LB_5869
	call emt_stg 
	mov rdi,fmt_rcd_box_l
	call emt_stg
	mov rdi,fmt_rcd_r
	call emt_stg
	jmp LB_5867
LB_5865:
	mov rdi,LB_5870
	call emt_stg 
	mov rdi,fmt_rcd_box_l
	call emt_stg
	mov rdi,fmt_rcd_r
	call emt_stg
	jmp LB_5867
LB_5867:
	ret
LB_5816:
	movzx rax,BYTE [r8+6]
	jmp QWORD [LB_5873+8*rax]
LB_5873: dq LB_5871,LB_5872
LB_5871:
	mov rdi,LB_5875
	call emt_stg 
	mov rdi,fmt_rcd_box_l
	call emt_stg
	push r8
	mov r8,QWORD [r8+8+8*0]
	call LB_5685
	pop r8 
	mov rdi,fmt_spc 
	call emt_stg 
	push r8
	mov r8,QWORD [r8+8+8*1]
	call LB_5824
	pop r8 
	mov rdi,fmt_spc 
	call emt_stg 
	push r8
	mov r8,QWORD [r8+8+8*2]
	call LB_5825
	pop r8 
	mov rdi,fmt_spc 
	call emt_stg 
	push r8
	mov r8,QWORD [r8+8+8*3]
	call LB_5876
	pop r8 
	mov rdi,fmt_spc 
	call emt_stg 
	push r8
	mov r8,QWORD [r8+8+8*4]
	call LB_5816
	pop r8 
	mov rdi,fmt_spc 
	call emt_stg 
	mov rdi,fmt_rcd_r
	call emt_stg
	jmp LB_5874
LB_5872:
	mov rdi,LB_5877
	call emt_stg 
	mov rdi,fmt_rcd_box_l
	call emt_stg
	push r8
	mov r8,QWORD [r8+8+8*0]
	call LB_5685
	pop r8 
	mov rdi,fmt_spc 
	call emt_stg 
	push r8
	mov r8,QWORD [r8+8+8*1]
	call LB_5824
	pop r8 
	mov rdi,fmt_spc 
	call emt_stg 
	push r8
	mov r8,QWORD [r8+8+8*2]
	call LB_5825
	pop r8 
	mov rdi,fmt_spc 
	call emt_stg 
	push r8
	mov r8,QWORD [r8+8+8*3]
	call LB_5876
	pop r8 
	mov rdi,fmt_spc 
	call emt_stg 
	mov rdi,fmt_rcd_r
	call emt_stg
	jmp LB_5874
LB_5874:
	ret
LB_5876:
	movzx rax,BYTE [r8+6]
	jmp QWORD [LB_5880+8*rax]
LB_5880: dq LB_5878,LB_5879
LB_5878:
	mov rdi,LB_5882
	call emt_stg 
	mov r8,QWORD [r8+8]
	call LB_5816
	jmp LB_5881
LB_5879:
	mov rdi,LB_5883
	call emt_stg 
	mov rdi,fmt_rcd_box_l
	call emt_stg
	mov rdi,fmt_rcd_r
	call emt_stg
	jmp LB_5881
LB_5881:
	ret
LB_5500:
	movzx rax,BYTE [r8+6]
	jmp QWORD [LB_5886+8*rax]
LB_5886: dq LB_5884,LB_5885
LB_5884:
	mov rdi,LB_5888
	call emt_stg 
	mov r8,QWORD [r8+8]
	call LB_5475
	jmp LB_5887
LB_5885:
	mov rdi,LB_5889
	call emt_stg 
	mov r8,QWORD [r8+8]
	call LB_5538
	jmp LB_5887
LB_5887:
	ret
ETR_350: ;; E 0'(= {| l |} ) ⊢ { } : (_s8→{ })
; » _^ .. ⊢ ..
; .. //
	mov rdi,0
	add rdi,17
	push rdi 
	call mlc_s8
	pop rdi
	mov r14,rax
	lea rdi,[rax+7+rdi]
	std 
	mov QWORD [tmp],rcx 
	lea rsi,[LB_5458+17-1]
	mov rcx,17
	rep movsb
	mov rcx,QWORD [tmp] 
; #10 1'(= {| l |} ) ⊢ 1'(= {| l |} )
	mov rdi,fmt_emt
	call emt_stg
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	mov rdi,r8
	call emt_s8
	C_POP_REGS
	mov rdi,fmt_nl
	call emt_stg
	jmp LB_5459
LB_5459:
; #26 0'(= {| l |} ) ⊢ { 0'(= {| l |} ) 2'(= {| l |} ) }
	mov rdi,r13
	C_PUSH_REGS
	add rdi,8
	call in_fn
	C_POP_REGS
	mov r8,rax
; .dlt.ptn 0'(= {| l |} )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	mov rdi,r8
	call free_s8
	C_POP_REGS
; #20 { } ⊢ { }
	call info
; #246 { 2'(= {| l |} ) %[ 0r ] } ⊢ { 0'(= {| l |} ) 3'(= r ) 2'(= a3◂ [ a43◂ [ a2◂ [ a39◂ [ ]]]] ) }
	sub rsp,8
	mov QWORD [rsp+8*0],r14
; .mov_ptn2 { 2'(= {| l |} ) %[ 0r ] } ⊢ { 0'(= {| l |} ) 1'(= r ) }
; .mov_ptn %[ 0r ] ⊢ 1'(= r )
	mov rax,0
	mov r14,rax
; .mov_ptn 2'(= {| l |} ) ⊢ 0'(= {| l |} )
	mov rax,r8
	mov r13,rax
	call ETR_246
	mov r9,r14
	mov r14,QWORD [rsp-8+8*1]
	add rsp,8
; #10 3'(= r ) ⊢ 3'(= r )
	mov rdi,fmt_emt
	call emt_stg
	mov rdi,r9
	C_PUSH_REGS
	mov r8,rdi
	mov rdi,r8 
	call emt_r64 
	C_POP_REGS
	mov rdi,fmt_nl
	call emt_stg
	jmp LB_5460
LB_5460:
; .dlt.ptn 3'(= r )
	mov rdi,r9
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; #10 2'(= a3◂ [ a43◂ [ a2◂ [ a39◂ [ ]]]] ) ⊢ 2'(= a3◂ [ a43◂ [ a2◂ [ a39◂ [ ]]]] )
	mov rdi,fmt_emt
	call emt_stg
	mov rdi,r8
	C_PUSH_REGS
	mov r8,rdi
	call LB_5461
	C_POP_REGS
	mov rdi,fmt_nl
	call emt_stg
	jmp LB_5462
LB_5462:
;; ? 2'(= a3◂ [ a43◂ [ a2◂ [ a39◂ [ ]]]] ) ⊢ 0(<2)◂3'(= a43◂ [ a2◂ [ a39◂ [ ]]] )
	mov rdi,r8
	cmp BYTE [rdi+6],0
	jnz LB_5890
	mov QWORD [GBG_VCT+8*0],rdi
	mov r9,QWORD [rdi+8]
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_LN rdi
;; ? 3'(= a43◂ [ a2◂ [ a39◂ [ ]]] ) ⊢ 0(<2)◂2'(= a2◂ [ a39◂ [ ]] )
	mov rdi,r9
	cmp BYTE [rdi+6],0
	jnz LB_5891
	mov QWORD [GBG_VCT+8*0],rdi
	mov r8,QWORD [rdi+8]
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_LN rdi
; #10 %[ "D0" ] ⊢ %[ "D0" ]
	mov rdi,fmt_emt
	call emt_stg
	mov rdi,LB_5892
	call emt_stg 
	mov rdi,fmt_nl
	call emt_stg
	jmp LB_5893
LB_5893:
; .dlt.ptn %[ "D0" ]
; #180 { %[ 0r ] 2'(= a2◂ [ a39◂ [ ]] ) } ⊢ { 3'(= r ) 2'(= {| l |} ) }
	sub rsp,16
	mov QWORD [rsp+8*0],r13
	mov QWORD [rsp+8*1],r14
; .mov_ptn2 { %[ 0r ] 2'(= a2◂ [ a39◂ [ ]] ) } ⊢ { 0'(= r ) 1'(= a2◂ [ a39◂ [ ]] ) }
; .mov_ptn 2'(= a2◂ [ a39◂ [ ]] ) ⊢ 1'(= a2◂ [ a39◂ [ ]] )
	mov rax,r8
	mov r14,rax
; .mov_ptn %[ 0r ] ⊢ 0'(= r )
	mov rax,0
	mov r13,rax
	call ETR_180
	mov r8,r14
	mov r14,QWORD [rsp-8+8*2]
	mov r9,r13
	mov r13,QWORD [rsp-8+8*1]
	add rsp,16
; #10 2'(= {| l |} ) ⊢ 2'(= {| l |} )
	mov rdi,fmt_emt
	call emt_stg
	mov rdi,r8
	C_PUSH_REGS
	mov r8,rdi
	mov rdi,r8
	call emt_s8
	C_POP_REGS
	mov rdi,fmt_nl
	call emt_stg
	jmp LB_5894
LB_5894:
; .dlt.ptn 2'(= {| l |} )
	mov rdi,r8
	C_PUSH_REGS
	mov r8,rdi
	mov rdi,r8
	call free_s8
	C_POP_REGS
; ∎ { }
; .dlt.ptn 3'(= r )
	mov rdi,r9
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= {| l |} )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	mov rdi,r8
	call free_s8
	C_POP_REGS
; .dlt.ptn 1'(= {| l |} )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	mov rdi,r8
	call free_s8
	C_POP_REGS
; .mov_ptn2 { } ⊢ { }
	ret
LB_5891:
;; ?. 3'(= a43◂ [ a2◂ [ a39◂ [ ]]] ) ⊢ 1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] )
	mov QWORD [GBG_VCT+8*0],rdi
	mov r8,QWORD [rdi+8]
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_LN rdi
	mov rdi,LB_5895
	call emt_stg 
	jmp err
LB_5890:
;; ?. 2'(= a3◂ [ a43◂ [ a2◂ [ a39◂ [ ]]]] ) ⊢ 1(<2)◂{ }
	mov rdi,LB_5896
	call emt_stg 
	jmp err
LB_5899:
	movzx rax,BYTE [r8+6]
	jmp QWORD [LB_5903+8*rax]
LB_5903: dq LB_5901,LB_5902
LB_5901:
	mov rdi,LB_5905
	call emt_stg 
	mov r8,QWORD [r8+8]
	call LB_5569
	jmp LB_5904
LB_5902:
	mov rdi,LB_5906
	call emt_stg 
	mov rdi,fmt_rcd_box_l
	call emt_stg
	mov rdi,fmt_rcd_r
	call emt_stg
	jmp LB_5904
LB_5904:
	ret
ETR_351: ;; E1 { } ⊢ { } : ({ }→{ })
; » _^ .. ⊢ ..
; .. //
	mov rdi,0
	add rdi,3
	push rdi 
	call mlc_s8
	pop rdi
	mov r13,rax
	lea rdi,[rax+7+rdi]
	std 
	mov QWORD [tmp],rcx 
	lea rsi,[LB_5897+3-1]
	mov rcx,3
	rep movsb
	mov rcx,QWORD [tmp] 
; #208 { 0'(= {| l |} ) %[ 0r ] } ⊢ { 0'(= {| l |} ) 1'(= r ) 2'(= a3◂ [ a16◂ [ a21◂ [ {| l |}]]] ) }
; .mov_ptn2 { 0'(= {| l |} ) %[ 0r ] } ⊢ { 0'(= {| l |} ) 1'(= r ) }
; .mov_ptn %[ 0r ] ⊢ 1'(= r )
	mov rax,0
	mov r14,rax
	call ETR_208
; #10 1'(= r ) ⊢ 1'(= r )
	mov rdi,fmt_emt
	call emt_stg
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	mov rdi,r8 
	call emt_r64 
	C_POP_REGS
	mov rdi,fmt_nl
	call emt_stg
	jmp LB_5898
LB_5898:
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; #10 2'(= a3◂ [ a16◂ [ a21◂ [ {| l |}]]] ) ⊢ 2'(= a3◂ [ a16◂ [ a21◂ [ {| l |}]]] )
	mov rdi,fmt_emt
	call emt_stg
	mov rdi,r8
	C_PUSH_REGS
	mov r8,rdi
	call LB_5899
	C_POP_REGS
	mov rdi,fmt_nl
	call emt_stg
	jmp LB_5900
LB_5900:
;; ? 2'(= a3◂ [ a16◂ [ a21◂ [ {| l |}]]] ) ⊢ 0(<2)◂1'(= a16◂ [ a21◂ [ {| l |}]] )
	mov rdi,r8
	cmp BYTE [rdi+6],0
	jnz LB_5907
	mov QWORD [GBG_VCT+8*0],rdi
	mov r14,QWORD [rdi+8]
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_LN rdi
; #10 %[ "D0" ] ⊢ %[ "D0" ]
	mov rdi,fmt_emt
	call emt_stg
	mov rdi,LB_5908
	call emt_stg 
	mov rdi,fmt_nl
	call emt_stg
	jmp LB_5909
LB_5909:
; .dlt.ptn %[ "D0" ]
; #102 1'(= a16◂ [ a21◂ [ {| l |}]] ) ⊢ 1'(= {| l |} )
	sub rsp,8
	mov QWORD [rsp+8*0],r13
; .mov_ptn2 1'(= a16◂ [ a21◂ [ {| l |}]] ) ⊢ 0'(= a16◂ [ a21◂ [ {| l |}]] )
; .mov_ptn 1'(= a16◂ [ a21◂ [ {| l |}]] ) ⊢ 0'(= a16◂ [ a21◂ [ {| l |}]] )
	mov rax,r14
	mov r13,rax
	call ETR_102
	mov r14,r13
	mov r13,QWORD [rsp-8+8*1]
	add rsp,8
; #10 1'(= {| l |} ) ⊢ 1'(= {| l |} )
	mov rdi,fmt_emt
	call emt_stg
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	mov rdi,r8
	call emt_s8
	C_POP_REGS
	mov rdi,fmt_nl
	call emt_stg
	jmp LB_5910
LB_5910:
; .dlt.ptn 1'(= {| l |} )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	mov rdi,r8
	call free_s8
	C_POP_REGS
; ∎ { }
; .dlt.ptn 0'(= {| l |} )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	mov rdi,r8
	call free_s8
	C_POP_REGS
; .mov_ptn2 { } ⊢ { }
	ret
LB_5907:
;; ?. 2'(= a3◂ [ a16◂ [ a21◂ [ {| l |}]]] ) ⊢ 1(<2)◂{ }
	mov rdi,LB_5911
	call emt_stg 
	jmp err
ETR_352: ;; f0 0'(= r ) ⊢ 0'(= a3◂ [ r] ) : (_r64→_opn◂_r64)
	mov rdi,97
	cmp r13,rdi
;;97 =< .. 
	jl LB_5912
	mov rdi,122
	cmp r13,rdi
;; .. =< 122
	jg LB_5912
; #24 0'(= r ) ⊢ 0(<2)◂0'(= r )
; ∎ 0(<2)◂0'(= r )
; .mov_ptn2 0(<2)◂0'(= r ) ⊢ 0'(= a3◂ [ r] )
	mov r14,r13
; .mov_ptn 0(<2)◂1'(= r ) ⊢ 0'(= a3◂ [ r] )
	mov rax,r14
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r13,rax
	ret
LB_5912:
; #25 { } ⊢ 1(<2)◂{ }
; ∎ 1(<2)◂{ }
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 1(<2)◂{ } ⊢ 0'(= a3◂ [ r] )
; .mov_ptn 1(<2)◂{ } ⊢ 0'(= a3◂ [ r] )
	mov rax,unt 
	mov rax,unt_1
	mov r13,rax
	ret
LB_5915:
	movzx rax,BYTE [r8+6]
	jmp QWORD [LB_5918+8*rax]
LB_5918: dq LB_5916,LB_5917
LB_5916:
	FREE_LN r8 
	mov r8,QWORD [r8+8]
	call LB_5920
	jmp LB_5919
LB_5917:
	jmp LB_5919
LB_5919:
	ret
LB_5920:
	movzx rax,BYTE [r8+6]
	jmp QWORD [LB_5923+8*rax]
LB_5923: dq LB_5921,LB_5922
LB_5921:
	FREE_LN r8 
	mov r8,QWORD [r8+8]
	call LB_3625
	jmp LB_5924
LB_5922:
	FREE_LN r8 
	mov r8,QWORD [r8+8]
	call LB_1711
	jmp LB_5924
LB_5924:
	ret
RTM_0:
; » _^ .. ⊢ ..
; .. //
	mov rdi,0
	add rdi,17
	push rdi 
	call mlc_s8
	pop rdi
	mov r14,rax
	lea rdi,[rax+7+rdi]
	std 
	mov QWORD [tmp],rcx 
	lea rsi,[LB_5913+17-1]
	mov rcx,17
	rep movsb
	mov rcx,QWORD [tmp] 
; #10 1'(= {| l |} ) ⊢ 1'(= {| l |} )
	mov rdi,fmt_emt
	call emt_stg
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	mov rdi,r8
	call emt_s8
	C_POP_REGS
	mov rdi,fmt_nl
	call emt_stg
	jmp LB_5914
LB_5914:
; #246 { 1'(= {| l |} ) %[ 0r ] } ⊢ { 3'(= {| l |} ) 1'(= r ) 2'(= a3◂ [ a43◂ [ a2◂ [ a39◂ [ ]]]] ) }
	sub rsp,8
	mov QWORD [rsp+8*0],r13
; .mov_ptn2 { 1'(= {| l |} ) %[ 0r ] } ⊢ { 0'(= {| l |} ) 1'(= r ) }
; .mov_ptn 1'(= {| l |} ) ⊢ 0'(= {| l |} )
	mov rax,r14
	mov r13,rax
; .mov_ptn %[ 0r ] ⊢ 1'(= r )
	mov rax,0
	mov r14,rax
	call ETR_246
	mov r9,r13
	mov r13,QWORD [rsp-8+8*1]
	add rsp,8
; .dlt.ptn { 3'(= {| l |} ) 1'(= r ) 2'(= a3◂ [ a43◂ [ a2◂ [ a39◂ [ ]]]] ) }
	mov rdi,r9
	C_PUSH_REGS
	mov r8,rdi
	mov rdi,r8
	call free_s8
	C_POP_REGS
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
	mov rdi,r8
	C_PUSH_REGS
	mov r8,rdi
	call LB_5915
	C_POP_REGS
; ∎
	jmp RTM_1
LB_5926:
	movzx rax,BYTE [r8+6]
	jmp QWORD [LB_5930+8*rax]
LB_5930: dq LB_5928,LB_5929
LB_5928:
	mov rdi,LB_5932
	call emt_stg 
	mov r8,QWORD [r8+8]
	call LB_5933
	jmp LB_5931
LB_5929:
	mov rdi,LB_5934
	call emt_stg 
	mov rdi,fmt_rcd_box_l
	call emt_stg
	mov rdi,fmt_rcd_r
	call emt_stg
	jmp LB_5931
LB_5931:
	ret
LB_5933:
	movzx rax,BYTE [r8+6]
	jmp QWORD [LB_5937+8*rax]
LB_5937: dq LB_5935,LB_5936
LB_5935:
	mov rdi,LB_5939
	call emt_stg 
	mov r8,QWORD [r8+8]
	call LB_5571
	jmp LB_5938
LB_5936:
	mov rdi,LB_5940
	call emt_stg 
	mov r8,QWORD [r8+8]
	call LB_5477
	jmp LB_5938
LB_5938:
	ret
LB_5941:
	movzx rax,BYTE [r8+6]
	jmp QWORD [LB_5944+8*rax]
LB_5944: dq LB_5942,LB_5943
LB_5942:
	FREE_LN r8 
	mov r8,QWORD [r8+8]
	call LB_5946
	jmp LB_5945
LB_5943:
	jmp LB_5945
LB_5945:
	ret
LB_5946:
	movzx rax,BYTE [r8+6]
	jmp QWORD [LB_5949+8*rax]
LB_5949: dq LB_5947,LB_5948
LB_5947:
	FREE_LN r8 
	mov r8,QWORD [r8+8]
	call LB_679
	jmp LB_5950
LB_5948:
	FREE_LN r8 
	mov r8,QWORD [r8+8]
	call LB_1711
	jmp LB_5950
LB_5950:
	ret
RTM_1:
; » _^ .. ⊢ ..
; .. //
	mov rdi,0
	add rdi,8
	push rdi 
	call mlc_s8
	pop rdi
	mov r14,rax
	lea rdi,[rax+7+rdi]
	std 
	mov QWORD [tmp],rcx 
	lea rsi,[LB_5925+8-1]
	mov rcx,8
	rep movsb
	mov rcx,QWORD [tmp] 
; #237 { 1'(= {| l |} ) %[ 0r ] } ⊢ { 3'(= {| l |} ) 1'(= r ) 2'(= a3◂ [ a43◂ [ a25◂ [ a17◂ [ ]{| l |}]]] ) }
	sub rsp,8
	mov QWORD [rsp+8*0],r13
; .mov_ptn2 { 1'(= {| l |} ) %[ 0r ] } ⊢ { 0'(= {| l |} ) 1'(= r ) }
; .mov_ptn 1'(= {| l |} ) ⊢ 0'(= {| l |} )
	mov rax,r14
	mov r13,rax
; .mov_ptn %[ 0r ] ⊢ 1'(= r )
	mov rax,0
	mov r14,rax
	call ETR_237
	mov r9,r13
	mov r13,QWORD [rsp-8+8*1]
	add rsp,8
; #10 { 3'(= {| l |} ) 1'(= r ) 2'(= a3◂ [ a43◂ [ a25◂ [ a17◂ [ ]{| l |}]]] ) } ⊢ { 3'(= {| l |} ) 1'(= r ) 2'(= a3◂ [ a43◂ [ a25◂ [ a17◂ [ ]{| l |}]]] ) }
	mov rdi,fmt_emt
	call emt_stg
	mov rdi,fmt_rcd_l 
	call emt_stg 
	mov rdi,r9
	C_PUSH_REGS
	mov r8,rdi
	mov rdi,r8
	call emt_s8
	C_POP_REGS
	mov rdi,fmt_spc 
	call emt_stg 
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	mov rdi,r8 
	call emt_r64 
	C_POP_REGS
	mov rdi,fmt_spc 
	call emt_stg 
	mov rdi,r8
	C_PUSH_REGS
	mov r8,rdi
	call LB_5926
	C_POP_REGS
	mov rdi,fmt_spc 
	call emt_stg 
	mov rdi,fmt_rcd_r 
	call emt_stg 
	mov rdi,fmt_nl
	call emt_stg
	jmp LB_5927
LB_5927:
; .dlt.ptn { 3'(= {| l |} ) 1'(= r ) 2'(= a3◂ [ a43◂ [ a25◂ [ a17◂ [ ]{| l |}]]] ) }
	mov rdi,r9
	C_PUSH_REGS
	mov r8,rdi
	mov rdi,r8
	call free_s8
	C_POP_REGS
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
	mov rdi,r8
	C_PUSH_REGS
	mov r8,rdi
	call LB_5941
	C_POP_REGS
; #10 0'(= {| {| l |}|} ) ⊢ 0'(= {| {| l |}|} )
	mov rdi,fmt_emt
	call emt_stg
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	mov rdi,fmt_arr_l 
	call emt_stg 
	mov rsi,[r8]
	mov rax,0 
LB_5951:
	cmp rsi,rax 
	jz LB_5952
	push r8 
	push rsi 
	push rax 
	mov r8,QWORD [r8+8+8*rax]
	mov rdi,r8
	call emt_s8
	mov rdi,fmt_spc 
	call emt_stg 
	pop rax 
	pop rsi 
	pop r8 
	add rax,1 
	jmp LB_5951
LB_5952:
	mov rdi,fmt_arr_r 
	call emt_stg
	C_POP_REGS
	mov rdi,fmt_nl
	call emt_stg
	jmp LB_5953
LB_5953:
; #4 { 0'(= {| {| l |}|} ) %[ 1r ] } ⊢ { 0'(= {| {| l |}|} ) %[ 1r ] 2'(= {| l |} ) }
	mov rax,1
	mov rdi,r13
	mov rsi,0x0000_ffff_ffff_ffff 
	and rsi,QWORD [rdi]
	cmp rax,rsi 
	jge err 
	mov rdi,[rdi+8+8*rax]
	C_PUSH_REGS
	mov r8,rdi
	C_PUSH_REGS
	mov rdi,r8  
	call rpc_s8  
	C_POP_REGS
	C_POP_REGS
	mov r14,rax
; .mov_ptn2 1'(= {| l |} ) ⊢ 2'(= {| l |} )
	mov r9,r8
; .mov_ptn 1'(= {| l |} ) ⊢ 2'(= {| l |} )
	mov rax,r14
	mov r8,rax
; .dlt.ptn %[ 1r ]
; .dlt.ptn 0'(= {| {| l |}|} )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	GET_LEN rsi,r8
	mov rax,0 
LB_5954:
	cmp rsi,rax 
	jz LB_5955
	push r8 
	push rsi 
	push rax 
	mov r8,QWORD [r8+8+8*rax]
	mov rdi,r8
	call free_s8
	pop rax 
	pop rsi 
	pop r8 
	add rax,1 
	jmp LB_5954
LB_5955:
	C_POP_REGS
; #350 2'(= {| l |} ) ⊢ { }
; .mov_ptn2 2'(= {| l |} ) ⊢ 0'(= {| l |} )
; .mov_ptn 2'(= {| l |} ) ⊢ 0'(= {| l |} )
	mov rax,r8
	mov r13,rax
	call ETR_350
; .dlt.ptn { }
; ∎
	jmp RTM_2
RTM_2:
	mov rdi,0
	mov QWORD rdi,rsp
	and rsp,~0xf
	push rdi
	call exit
	pop rdi
	mov rsp,rdi

err: 
	mov rdi,fmt_err_line
	mov rsi,QWORD [err_n]
	xor rax,rax
	C_CALL printf
	mov rax,1
	mov rbx,0
	int 0x80
