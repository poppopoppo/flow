bits 64 
; macros 
%macro C_PUSH_REGS 0 
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
%endmacro

%macro C_POP_REGS 0 
	pop r11 
	pop r10 
	pop r9 
	pop r8 
	pop rcx 
	pop rdx 
%endmacro

%macro C_CALL_SF 1 
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call %1 
	mov rsp,QWORD [rsp_tmp]
	pop r11 
	pop r10 
	pop r9 
	pop r8 
	pop rcx 
	pop rdx 
%endmacro 

%macro C_CALL 1 
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call %1 
	mov rsp,QWORD [rsp_tmp]
%endmacro 

%macro JZ_SPC 2
	movzx rax,%1
	cmp rax,9 
	jz %2
	cmp rax,10 
	jz %2
	cmp rax,32 
	jz %2
%endmacro
 
%macro JZ_LINE_SPC 2
	movzx rax,%1 
	cmp rax,9 
	jz %2
	cmp rax,32 
	jz %2
%endmacro
 
%define SS_MAX 2000
%define SS_NULL 0xffff_ffff_ffff_0000
%define EMT_BUF_MAX 2048
extern exit 
extern printf 
extern sprintf
extern malloc 
extern calloc
extern free 
extern isspace 
extern strtoul
extern strlen
section .bss
	tmp: resq 64
	ret_vct: resq 64
 rsp_tmp: resq 1

; emt buffer 
	EMT_BUF_OFS: resq 1 
 EMT_BUF: resb EMT_BUF_MAX 
	EMT_BUF_END: resb 1
 
; SS segments 
	SS_TOP: resq 1
	SS_VCT: resq 16*SS_MAX
	SS_BTM: resq 1 

	SS_LN_TOP: resq 1
	SS_LN_VCT: resq 2*SS_MAX
	SS_LN_BTM: resq 1  

	SS_PT_TOP: resq 1
	SS_PT_VCT: resq 3*SS_MAX
	SS_PT_BTM: resq 1 

stat: resb 144
struc STAT
	.st_dev         resq 1
	.st_ino         resq 1
	.st_mode        resd 1
	.st_nlink       resd 1
	.st_uid         resd 1
	.st_gid         resd 1
	.st_rdev        resq 1
	.pad1           resq 1
	.st_size        resq 1
	.st_blksize     resd 1
	.pad2 resd 1
	.st_blocks      resq 1
	.st_atime       resq 1
	.st_atime_nsec  resq 1
	.st_mtime       resq 1
	.st_mtime_nsec  resq 1
	.st_ctime       resq 1
	.st_ctime_nsec  resq 1
	.__unused4  resd 1
	.__unused5  resd 1
endstruc

	SS_RCD_1_TOP: resq 1
	SS_RCD_1_VCT: resq 2*SS_MAX
	SS_RCD_1_BTM: resq 1

	SS_RCD_2_TOP: resq 1
	SS_RCD_2_VCT: resq 3*SS_MAX
	SS_RCD_2_BTM: resq 1

	SS_RCD_3_TOP: resq 1
	SS_RCD_3_VCT: resq 4*SS_MAX
	SS_RCD_3_BTM: resq 1

	SS_RCD_4_TOP: resq 1
	SS_RCD_4_VCT: resq 5*SS_MAX
	SS_RCD_4_BTM: resq 1

	SS_RCD_5_TOP: resq 1
	SS_RCD_5_VCT: resq 6*SS_MAX
	SS_RCD_5_BTM: resq 1

	SS_RCD_6_TOP: resq 1
	SS_RCD_6_VCT: resq 7*SS_MAX
	SS_RCD_6_BTM: resq 1

	SS_RCD_7_TOP: resq 1
	SS_RCD_7_VCT: resq 8*SS_MAX
	SS_RCD_7_BTM: resq 1

	SS_RCD_8_TOP: resq 1
	SS_RCD_8_VCT: resq 9*SS_MAX
	SS_RCD_8_BTM: resq 1

	SS_RCD_9_TOP: resq 1
	SS_RCD_9_VCT: resq 10*SS_MAX
	SS_RCD_9_BTM: resq 1

	SS_RCD_10_TOP: resq 1
	SS_RCD_10_VCT: resq 11*SS_MAX
	SS_RCD_10_BTM: resq 1

	SS_RCD_11_TOP: resq 1
	SS_RCD_11_VCT: resq 12*SS_MAX
	SS_RCD_11_BTM: resq 1

	SS_RCD_12_TOP: resq 1
	SS_RCD_12_VCT: resq 13*SS_MAX
	SS_RCD_12_BTM: resq 1

	SS_RCD_13_TOP: resq 1
	SS_RCD_13_VCT: resq 14*SS_MAX
	SS_RCD_13_BTM: resq 1

	SS_RCD_14_TOP: resq 1
	SS_RCD_14_VCT: resq 15*SS_MAX
	SS_RCD_14_BTM: resq 1

	SS_RCD_15_TOP: resq 1
	SS_RCD_15_VCT: resq 16*SS_MAX
	SS_RCD_15_BTM: resq 1

section .data
	err_n: dq 0
	fmt_err_line: db "err:%x",10,0
	fmt_r64: db "%dr",0
	fmt_s8: db 34,"%s",34,0
	fmt_d: db "%d",0
	fmt_x: db "%x",0
	fmt_arr_l: db "{| ",0
	fmt_arr_r: db "|}",0
	fmt_rcd_l: db "{ ",0
	fmt_rcd_r: db "} ",0
	fmt_rcd_box_l: db "*{ "
	fmt_nl: db 10,0
	fmt_spc: db " ",0
	fmt_emt: db "_emt:",0
	rt_err0: db "rt_err 0:",10,0 
 s8_e: dq 0,0
	unt: dq 0x0

	unt_0: dq 0x0 
	unt_1: dq 0x00_01_0000_0000_0000 
	unt_2: dq 0x00_02_0000_0000_0000 
	unt_3: dq 0x00_03_0000_0000_0000 
	unt_4: dq 0x00_04_0000_0000_0000 
	unt_5: dq 0x00_05_0000_0000_0000 
	unt_6: dq 0x00_06_0000_0000_0000 
	unt_7: dq 0x00_07_0000_0000_0000 
	unt_8: dq 0x00_08_0000_0000_0000 

LB_96: db 34,101,115,99,95,115,116,103,95,108,116,114,34,0
LB_98: db 59,32,226,136,142,124,10,101,120,110,32,54,51,54,52,58,10,0
LB_308: db 95,0
LB_317: db 46,0
LB_319: db 114,0
LB_320: db 34,0
LB_321: db 34,0
LB_324: db 125,0
LB_325: db 123,32,0
LB_327: db 32,93,32,0
LB_328: db 37,91,32,0
LB_330: db 32,0
LB_333: db 125,0
LB_334: db 123,32,0
LB_338: db 32,0
LB_379: db 125,0
LB_380: db 123,32,0
LB_382: db 32,93,32,0
LB_383: db 37,91,32,0
LB_385: db 226,151,130,0
LB_387: db 37,0
LB_390: db 32,0
LB_393: db 32,226,138,162,124,10,0
LB_394: db 32,0
LB_395: db 9,0
LB_399: db 32,226,138,162,124,10,0
LB_400: db 44,0
LB_401: db 226,151,130,0
LB_402: db 9,0
LB_409: db 10,0
LB_410: db 32,226,138,162,32,0
LB_411: db 36,32,0
LB_412: db 9,0
LB_415: db 32,226,138,162,10,0
LB_416: db 36,32,0
LB_417: db 9,0
LB_421: db 226,136,142,32,46,46,10,0
LB_422: db 9,0
LB_425: db 226,136,142,124,10,0
LB_426: db 9,0
LB_430: db 10,0
LB_431: db 32,226,138,162,32,0
LB_432: db 32,0
LB_433: db 9,0
LB_437: db 10,0
LB_438: db 32,226,138,162,32,0
LB_439: db 44,0
LB_440: db 226,151,130,32,0
LB_441: db 9,0
LB_445: db 10,0
LB_446: db 32,226,138,162,32,0
LB_447: db 32,0
LB_448: db 194,187,32,0
LB_449: db 9,0
LB_452: db 32,46,46,32,47,47,10,0
LB_453: db 10,0
LB_454: db 32,226,138,162,32,46,46,0
LB_455: db 194,187,32,95,94,32,46,46,0
LB_456: db 9,0
LB_461: db 226,136,144,32,46,46,32,59,10,0
LB_462: db 9,0
LB_466: db 226,138,162,32,10,0
LB_467: db 226,136,144,32,46,46,32,59,32,0
LB_468: db 9,0
LB_471: db 226,136,144,32,46,46,32,46,10,0
LB_472: db 9,0
LB_476: db 226,136,144,46,32,46,46,32,46,10,0
LB_477: db 9,0
LB_481: db 226,138,162,32,10,0
LB_482: db 226,136,144,32,46,46,32,59,32,0
LB_483: db 9,0
LB_486: db 226,136,144,46,32,46,46,32,46,10,0
LB_487: db 9,0
LB_492: db 46,46,32,59,10,0
LB_493: db 226,136,144,32,0
LB_494: db 9,0
LB_498: db 226,138,162,32,10,0
LB_499: db 226,136,144,32,46,46,32,59,32,0
LB_500: db 9,0
LB_503: db 226,136,144,32,46,46,32,46,10,0
LB_504: db 9,0
LB_508: db 226,136,144,46,32,46,46,32,59,10,0
LB_509: db 9,0
LB_513: db 226,138,162,32,10,0
LB_514: db 226,136,144,32,46,46,32,59,32,0
LB_515: db 9,0
LB_518: db 226,136,144,46,32,46,46,32,46,10,0
LB_519: db 9,0
LB_523: db 10,0
LB_524: db 64,46,0
LB_525: db 9,0
LB_531: db 226,136,144,32,46,46,10,0
LB_532: db 9,0
LB_535: db 226,136,144,46,32,46,46,32,10,0
LB_536: db 9,0
LB_540: db 10,0
LB_541: db 226,136,144,32,46,46,32,226,138,162,32,0
LB_542: db 9,0
LB_545: db 10,0
LB_546: db 226,136,144,46,32,46,46,32,226,138,162,32,0
LB_547: db 9,0
LB_556: db 226,136,142,226,136,142,10,0
LB_557: db 9,0
LB_558: db 9,0
LB_561: db 10,0
LB_562: db 194,167,194,167,32,0
LB_563: db 9,0
LB_566: db 10,0
LB_567: db 32,61,32,0
LB_568: db 194,167,194,167,32,0
LB_569: db 9,0
LB_573: db 194,167,194,167,43,115,56,10,0
LB_574: db 9,0
LB_578: db 194,167,32,0
LB_579: db 9,0
LB_583: db 194,167,32,10,0
LB_584: db 9,0
LB_589: db 10,0
LB_590: db 194,182,32,0
LB_591: db 9,0
LB_594: db 32,61,32,46,46,32,10,0
LB_595: db 194,182,32,0
LB_596: db 9,0
LB_599: db 194,182,10,0
LB_600: db 9,0
LB_605: db 10,0
LB_606: db 64,46,0
LB_607: db 9,0
LB_610: db 32,61,32,46,46,32,10,0
LB_611: db 64,46,0
LB_612: db 9,0
LB_617: db 10,0
LB_618: db 10,0
LB_619: db 32,61,32,0
LB_621: db 10,0
LB_622: db 32,58,32,0
LB_623: db 226,136,144,32,0
LB_624: db 9,0
LB_629: db 125,0
LB_630: db 123,32,0
LB_632: db 32,226,134,146,32,0
LB_634: db 226,151,130,0
LB_636: db 39,0
LB_638: db 32,0
LB_642: db 10,0
LB_643: db 32,58,32,0
LB_644: db 32,0
LB_645: db 10,0
LB_646: db 32,0
LB_648: db 10,0
LB_649: db 32,61,32,0
LB_650: db 32,194,171,32,10,0
LB_653: db 10,0
LB_654: db 32,58,32,0
LB_655: db 32,0
LB_656: db 64,46,0
LB_657: db 9,0
LB_660: db 10,0
LB_661: db 32,0
LB_662: db 64,46,0
LB_663: db 9,0
LB_834: db 10,0
LB_835: db 58,0
LB_836: db 45,0
LB_837: db 112,114,115,95,101,114,114,32,0
LB_1608: db 59,32,226,136,142,124,10,101,120,110,32,51,52,48,56,55,58,10,0
LB_1612: db 58,10,0
LB_1613: db 45,0
LB_1614: db 110,108,115,95,101,114,114,32,0
LB_1616: db 59,32,226,136,142,124,10,101,120,110,32,51,52,50,51,54,58,10,0
LB_1663: db 59,32,226,136,142,124,10,101,120,110,32,51,52,54,52,54,58,10,0
LB_1766: db 34,108,105,110,101,95,114,101,115,95,99,32,48,34,0
LB_1768: db 59,32,226,136,142,124,10,101,120,110,32,51,53,53,48,52,58,10,0
LB_3369: db 34,102,105,108,101,32,101,110,100,34,0
LB_3375: db 34,102,105,108,101,32,101,110,100,32,110,108,34,0
LB_3816: db 34,100,116,95,101,116,114,32,48,34,0
LB_4183: db 34,108,99,95,101,116,114,95,98,111,100,121,32,48,34,0
LB_4568: db 34,103,114,109,95,101,116,114,95,97,99,116,95,97,99,116,32,48,34,0
LB_4571: db 59,32,226,136,142,124,10,101,120,110,32,53,55,54,50,52,58,10,0
LB_4600: db 34,103,114,109,95,101,116,114,95,97,99,116,95,97,99,116,32,49,34,0
LB_4603: db 59,32,226,136,142,124,10,101,120,110,32,53,55,56,57,51,58,10,0
LB_4906: db 9,226,136,142,226,136,142,32,10,0
LB_4907: db 194,167,194,167,32,77,48,10,0
LB_4917: db 39,48,226,151,130,0
LB_4919: db 39,49,226,151,130,0
LB_4924: db 39,48,226,151,130,0
LB_4926: db 39,49,226,151,130,0
LB_4932: db 39,48,226,151,130,0
LB_4933: db 39,49,226,151,130,0
LB_4938: db 39,48,226,151,130,0
LB_4940: db 39,49,226,151,130,0
LB_4949: db 39,48,226,151,130,0
LB_4951: db 39,49,226,151,130,0
LB_4953: db 39,50,226,151,130,0
LB_4955: db 39,51,226,151,130,0
LB_4957: db 39,52,226,151,130,0
LB_4959: db 39,53,226,151,130,0
LB_4965: db 39,48,226,151,130,0
LB_4966: db 39,49,226,151,130,0
LB_4971: db 39,48,226,151,130,0
LB_4974: db 39,49,226,151,130,0
LB_4983: db 39,48,226,151,130,0
LB_4985: db 39,49,226,151,130,0
LB_4986: db 39,50,226,151,130,0
LB_4987: db 39,51,226,151,130,0
LB_4989: db 39,52,226,151,130,0
LB_4994: db 39,48,226,151,130,0
LB_4995: db 39,49,226,151,130,0
LB_5000: db 39,48,226,151,130,0
LB_5001: db 39,49,226,151,130,0
LB_5006: db 39,48,226,151,130,0
LB_5007: db 39,49,226,151,130,0
LB_5012: db 39,48,226,151,130,0
LB_5013: db 39,49,226,151,130,0
LB_5018: db 39,48,226,151,130,0
LB_5022: db 39,49,226,151,130,0
LB_5032: db 39,48,226,151,130,0
LB_5034: db 39,49,226,151,130,0
LB_5036: db 39,50,226,151,130,0
LB_5038: db 39,51,226,151,130,0
LB_5040: db 39,52,226,151,130,0
LB_5042: db 39,53,226,151,130,0
LB_5043: db 39,54,226,151,130,0
LB_5048: db 39,48,226,151,130,0
LB_5050: db 39,49,226,151,130,0
LB_5056: db 39,48,226,151,130,0
LB_5057: db 39,49,226,151,130,0
LB_5062: db 39,48,226,151,130,0
LB_5066: db 39,49,226,151,130,0
LB_5072: db 39,48,226,151,130,0
LB_5073: db 39,49,226,151,130,0
LB_5074: db 39,50,226,151,130,0
LB_5079: db 39,48,226,151,130,0
LB_5081: db 39,49,226,151,130,0
LB_5087: db 39,48,226,151,130,0
LB_5088: db 39,49,226,151,130,0
LB_5090: db 39,50,226,151,130,0
LB_5095: db 39,48,226,151,130,0
LB_5097: db 39,49,226,151,130,0
LB_5102: db 39,48,226,151,130,0
LB_5104: db 39,49,226,151,130,0
LB_5109: db 39,48,226,151,130,0
LB_5110: db 39,49,226,151,130,0
LB_5115: db 39,48,226,151,130,0
LB_5117: db 39,49,226,151,130,0
LB_5125: db 39,48,226,151,130,0
LB_5126: db 39,49,226,151,130,0
LB_5127: db 39,50,226,151,130,0
LB_5129: db 39,51,226,151,130,0
LB_5134: db 39,48,226,151,130,0
LB_5135: db 39,49,226,151,130,0
LB_5140: db 39,48,226,151,130,0
LB_5141: db 39,49,226,151,130,0
LB_5146: db 39,48,226,151,130,0
LB_5147: db 39,49,226,151,130,0
LB_5154: db 39,48,226,151,130,0
LB_5155: db 39,49,226,151,130,0
LB_5156: db 39,50,226,151,130,0
LB_5157: db 39,51,226,151,130,0
LB_5165: db 39,48,226,151,130,0
LB_5167: db 39,49,226,151,130,0
LB_5172: db 39,48,226,151,130,0
LB_5173: db 39,49,226,151,130,0
LB_5178: db 39,48,226,151,130,0
LB_5179: db 39,49,226,151,130,0
LB_5184: db 39,48,226,151,130,0
LB_5186: db 39,49,226,151,130,0
LB_5193: db 39,48,226,151,130,0
LB_5194: db 39,49,226,151,130,0
LB_5195: db 39,50,226,151,130,0
LB_5197: db 39,51,226,151,130,0
LB_5204: db 39,48,226,151,130,0
LB_5205: db 39,49,226,151,130,0
LB_5206: db 39,50,226,151,130,0
LB_5207: db 39,51,226,151,130,0
LB_5212: db 39,48,226,151,130,0
LB_5213: db 39,49,226,151,130,0
LB_5218: db 39,48,226,151,130,0
LB_5220: db 39,49,226,151,130,0
LB_5225: db 39,48,226,151,130,0
LB_5226: db 39,49,226,151,130,0
LB_5231: db 39,48,226,151,130,0
LB_5232: db 39,49,226,151,130,0
LB_5237: db 39,48,226,151,130,0
LB_5238: db 39,49,226,151,130,0
LB_5244: db 39,48,226,151,130,0
LB_5245: db 39,49,226,151,130,0
LB_5246: db 39,50,226,151,130,0
LB_5251: db 39,48,226,151,130,0
LB_5253: db 39,49,226,151,130,0
LB_5258: db 39,48,226,151,130,0
LB_5260: db 39,49,226,151,130,0
LB_5266: db 39,48,226,151,130,0
LB_5270: db 39,49,226,151,130,0
LB_5275: db 39,48,226,151,130,0
LB_5276: db 39,49,226,151,130,0
LB_5282: db 39,48,226,151,130,0
LB_5284: db 39,49,226,151,130,0
LB_5286: db 39,50,226,151,130,0
LB_5291: db 39,48,226,151,130,0
LB_5293: db 39,49,226,151,130,0
LB_5298: db 39,48,226,151,130,0
LB_5299: db 39,49,226,151,130,0
LB_5304: db 39,48,226,151,130,0
LB_5305: db 39,49,226,151,130,0
LB_5311: db 39,48,226,151,130,0
LB_5312: db 39,49,226,151,130,0
LB_5313: db 39,50,226,151,130,0
LB_5318: db 39,48,226,151,130,0
LB_5320: db 39,49,226,151,130,0
LB_5325: db 39,48,226,151,130,0
LB_5326: db 39,49,226,151,130,0
LB_5331: db 39,48,226,151,130,0
LB_5332: db 39,49,226,151,130,0
LB_5335: db 34,68,48,34,0
LB_5340: db 59,32,226,136,142,124,10,101,120,110,32,54,48,52,54,49,58,10,0
LB_5341: db 59,32,226,136,142,124,10,101,120,110,32,54,48,52,56,56,58,10,0
LB_5342: db 120,121,48,0
LB_5350: db 39,48,226,151,130,0
LB_5351: db 39,49,226,151,130,0
LB_5353: db 34,68,48,34,0
LB_5356: db 59,32,226,136,142,124,10,101,120,110,32,54,48,55,54,55,58,10,0
LB_5361: db 9,226,136,142,32,120,32,10,0
LB_5368: db 39,48,226,151,130,0
LB_5370: db 39,49,226,151,130,0
LB_5375: db 39,48,226,151,130,0
LB_5376: db 39,49,226,151,130,0
section .text
global _start
rpc_s8: ; rdi ⊢ rax
	mov rsi,0x0000_ffff_ffff_ffff
	and rsi,QWORD [rdi]  
	push rdi 
	push rsi 
	and rsi,~111b
	lea rdi,[rsi+16]
	mov rsi,1 
	xor rax,rax 
	C_CALL calloc
	pop rcx 
	mov QWORD [rax],rcx
	pop rsi 
	add rsi,8
	lea rdi,[rax+8]
	cld 
	rep movsb
	ret
     
esc_s8: ; rdi ⊢ rax 
	mov rsi,0x0000_ffff_ffff_ffff
	and rsi,QWORD [rdi] 
	mov rax,rsi 
	shl rax,1 
	sub rsp,rax 
esc_s8_lp0: 

arr_of_lst: 
	mov rsi,0 
arr_of_lst_r:
	cmp BYTE [rdi+6],1
	jz arr_of_lst_end 
	push QWORD [rdi+8] 
	mov rdi,QWORD [rdi+16]
	add rsi,1 
	call arr_of_lst_r
	sub rsi,1 
	pop QWORD [rax+8+8*rsi]
	ret 
arr_of_lst_end: 
	push rsi 
	xor rax,rax
	mov rdi,8
	add rsi,1 
	C_CALL calloc
	pop rsi 
	mov QWORD [rax],rsi
	ret 

scf_d: ; rdi=src ⊢ rax=flg rdi=dst rsi=n
	push rdi
	movzx rdi,BYTE [rdi]
	C_CALL isspace
	cmp rax,0
	jnz scf_d_err0 
	jmp scf_d_scf 
scf_d_err0: 
	add rsp,8
	mov rax,0
	ret
	scf_d_scf:
	mov rdi,QWORD [rsp]
	sub rsp,8
	mov rsi,rsp
	mov rdx,10
	mov rax,0
	C_CALL strtoul
	pop rsi
	pop rdi
	sub rsi,rdi
	jz scf_d_err1
 mov rdi,rax
	mov rax,1 
	ret
scf_d_err1:
	mov rax,0 
	ret

scf_x: ; rdi=src ⊢ rax=flg rdi=dst rsi=n
	push rdi
	movzx rdi,BYTE [rdi]
	C_CALL isspace
	cmp rax,0
	jnz scf_x_err0 
	jmp scf_x_scf 
scf_x_err0: 
	add rsp,8
	mov rax,0
	ret
	scf_x_scf:
	mov rdi,QWORD [rsp]
	sub rsp,8
	mov rsi,rsp
	mov rdx,16
	mov rax,0
	C_CALL strtoul
	pop rsi
	pop rdi
	sub rsi,rdi
	jz scf_x_err1
 mov rdi,rax
	mov rax,1 
	ret
scf_x_err1:
	mov rax,0 
	ret

mlc_s8: ; rdi=len  
	push rdi 
	and rdi,~111b
	lea rdi,[rdi+16] 
	mov rsi,1 
	xor rax,rax 
	C_CALL_SF calloc
	pop QWORD [rax] 
	ret

s8_of_c_stg: 
	push rdi
	xor rax,rax
	C_CALL strlen
	push rax
	mov rdi,rax
	call mlc_s8
	pop rcx
	pop rsi
	mov rdi,rax
	add rdi,8
	cld
	rep movsb
	ret

free_s8: ;rdi=ptr
	C_CALL_SF free
	ret 

in_fn: 
	mov rax,2
	mov rsi,2
	syscall
	push rax ; [rsp]=fd
	mov rdi,rax
	mov rax,5
	mov rsi,stat
	syscall
	mov rdi,[stat + STAT.st_size]
	call mlc_s8
	mov rdi,QWORD [rsp]
	push rax ; [rsp]=buf
	mov rsi,rax
	add rsi,8
	mov rax,0
	mov rdx,[stat+STAT.st_size]
	syscall
	mov rax,3
	mov rdi,QWORD [rsp+8]
	syscall
	mov rax,QWORD [rsp]	
	add rsp,16
	ret 

out_fn: ; rdi=fn,rsi=src
	push rsi 
	mov rax,2
	mov rsi,0x42
	syscall
	pop rsi 
	push rax
	mov rdi,rax
	mov rdx,QWORD [rsi]
	mov rax,0x0000_ffff_ffff_ffff
	and rdx,rax
	add rsi,8
	mov rax,1
	syscall
	pop rdi
	mov rax,3
	syscall
	ret

emt_stg: ; rdi=stg 
	xor rax,rax 
	C_CALL_SF printf
	ret

emt_r64: ;rdi=r64
	xor rax,rax 
	mov rsi,rdi
	mov rdi,fmt_r64
	C_CALL_SF printf
	ret

emt_s8: ;rdi=s8
	xor rax,rax 
	lea rsi,[rdi+8]
	mov rdi,fmt_s8
	C_CALL_SF printf
	ret

emt_add: ; rdi=len rsi=stg
	cld 
	push rcx 
	mov rcx,rdi 
	mov rax,QWORD [EMT_BUF_OFS]
	add rdi,rax
	cmp rdi,EMT_BUF_MAX 
	jge emt_add_buf 
	mov BYTE [EMT_BUF+rdi],0
	mov QWORD [EMT_BUF_OFS],rdi
	lea rdi,[EMT_BUF+rax]
	jmp emt_add_end 
emt_add_buf:
	push rsi 
	call emt_buf 
	pop rsi 
	cmp rcx,EMT_BUF_MAX
	jge emt_add_stg 
	mov BYTE [EMT_BUF+rcx],0
	mov QWORD [EMT_BUF_OFS],rcx 
	mov rdi,EMT_BUF
emt_add_end:
	rep movsb 
	pop rcx 
	ret 
emt_add_stg 
	mov QWORD [EMT_BUF],0
	mov QWORD [EMT_BUF_OFS],0
	mov rdi,rsi 
	call emt_stg 
	pop rcx 
	ret 

emt_buf:
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	mov rdi,EMT_BUF 
	xor rax,rax 
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call printf 
	mov rsp,QWORD [rsp_tmp] 
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	mov QWORD [EMT_BUF_OFS],0
	mov BYTE [EMT_BUF],0
	ret 
	 
_start:
SS_init:
	mov QWORD [SS_TOP],SS_VCT
	mov rdi,0 
	mov rax,SS_VCT 
SS_lp: 
	cmp rdi,SS_MAX 
	jz SS_end 
	add rdi,1 
	lea rsi,[rax+8*16] 
	mov QWORD [rax],rsi 
	mov rax,rsi 
	jmp SS_lp 
SS_end:
	mov rsi,SS_NULL 
	mov [rax],rsi

SS_LN_init:
	mov QWORD [SS_LN_TOP],SS_LN_VCT
	mov r15,SS_LN_VCT 
	mov rdi,0 
	mov rax,SS_LN_VCT 
SS_LN_lp: 
	cmp rdi,SS_MAX 
	jz SS_LN_end 
	add rdi,1 
	lea rsi,[rax+8*2] 
	mov QWORD [rax],rsi 
	mov rax,rsi 
	jmp SS_LN_lp 
SS_LN_end:
	mov rsi,0xffff_ffff_ffff_0100 
	mov [rax],rsi

SS_PT_init:
	mov QWORD [SS_PT_TOP],SS_PT_VCT
	mov rdi,0 
	mov rax,SS_PT_VCT 
SS_PT_lp: 
	cmp rdi,SS_MAX 
	jz SS_PT_end 
	add rdi,1 
	lea rsi,[rax+8*3] 
	mov QWORD [rax],rsi 
	mov rax,rsi 
	jmp SS_PT_lp 
SS_PT_end:
	mov rsi,0xffff_ffff_ffff_0200 
	mov [rax],rsi

	mov rdi,0
	mov QWORD [EMT_BUF],0
	mov QWORD [EMT_BUF_OFS],0

; _args 
	mov rdi,QWORD [rsp]
 lea rdi,[rdi+1]
	mov rsi,8 
	xor rax,rax 
	C_CALL calloc
	pop r13
	mov QWORD [rax],r13
	xor r14,r14
	mov r8,rax
args_lp:
	cmp r14,r13
	jz args_lp_end
	pop rdi
	call s8_of_c_stg 
	mov QWORD [r8+8+8*r14],rax
	add r14,1 
	jmp args_lp 
args_lp_end:
	mov r13,r8
	

init_ss_rcd_1:
	mov QWORD [SS_RCD_1_TOP],SS_RCD_1_VCT
	mov rdi,0 
	mov rax,SS_RCD_1_VCT
ss_lp_rcd_1:
	cmp rdi,SS_MAX
	jz ss_end_rcd_1
	add rdi,1 
	lea rsi,[rax+8*2]
	mov QWORD [rax],rsi 
	mov rax,rsi 
	jmp ss_lp_rcd_1
ss_end_rcd_1:
	mov rsi,-65535
	mov [rax],rsi 

init_ss_rcd_2:
	mov QWORD [SS_RCD_2_TOP],SS_RCD_2_VCT
	mov rdi,0 
	mov rax,SS_RCD_2_VCT
ss_lp_rcd_2:
	cmp rdi,SS_MAX
	jz ss_end_rcd_2
	add rdi,1 
	lea rsi,[rax+8*3]
	mov QWORD [rax],rsi 
	mov rax,rsi 
	jmp ss_lp_rcd_2
ss_end_rcd_2:
	mov rsi,-65534
	mov [rax],rsi 

init_ss_rcd_3:
	mov QWORD [SS_RCD_3_TOP],SS_RCD_3_VCT
	mov rdi,0 
	mov rax,SS_RCD_3_VCT
ss_lp_rcd_3:
	cmp rdi,SS_MAX
	jz ss_end_rcd_3
	add rdi,1 
	lea rsi,[rax+8*4]
	mov QWORD [rax],rsi 
	mov rax,rsi 
	jmp ss_lp_rcd_3
ss_end_rcd_3:
	mov rsi,-65533
	mov [rax],rsi 

init_ss_rcd_4:
	mov QWORD [SS_RCD_4_TOP],SS_RCD_4_VCT
	mov rdi,0 
	mov rax,SS_RCD_4_VCT
ss_lp_rcd_4:
	cmp rdi,SS_MAX
	jz ss_end_rcd_4
	add rdi,1 
	lea rsi,[rax+8*5]
	mov QWORD [rax],rsi 
	mov rax,rsi 
	jmp ss_lp_rcd_4
ss_end_rcd_4:
	mov rsi,-65532
	mov [rax],rsi 

init_ss_rcd_5:
	mov QWORD [SS_RCD_5_TOP],SS_RCD_5_VCT
	mov rdi,0 
	mov rax,SS_RCD_5_VCT
ss_lp_rcd_5:
	cmp rdi,SS_MAX
	jz ss_end_rcd_5
	add rdi,1 
	lea rsi,[rax+8*6]
	mov QWORD [rax],rsi 
	mov rax,rsi 
	jmp ss_lp_rcd_5
ss_end_rcd_5:
	mov rsi,-65531
	mov [rax],rsi 

init_ss_rcd_6:
	mov QWORD [SS_RCD_6_TOP],SS_RCD_6_VCT
	mov rdi,0 
	mov rax,SS_RCD_6_VCT
ss_lp_rcd_6:
	cmp rdi,SS_MAX
	jz ss_end_rcd_6
	add rdi,1 
	lea rsi,[rax+8*7]
	mov QWORD [rax],rsi 
	mov rax,rsi 
	jmp ss_lp_rcd_6
ss_end_rcd_6:
	mov rsi,-65530
	mov [rax],rsi 

init_ss_rcd_7:
	mov QWORD [SS_RCD_7_TOP],SS_RCD_7_VCT
	mov rdi,0 
	mov rax,SS_RCD_7_VCT
ss_lp_rcd_7:
	cmp rdi,SS_MAX
	jz ss_end_rcd_7
	add rdi,1 
	lea rsi,[rax+8*8]
	mov QWORD [rax],rsi 
	mov rax,rsi 
	jmp ss_lp_rcd_7
ss_end_rcd_7:
	mov rsi,-65529
	mov [rax],rsi 

init_ss_rcd_8:
	mov QWORD [SS_RCD_8_TOP],SS_RCD_8_VCT
	mov rdi,0 
	mov rax,SS_RCD_8_VCT
ss_lp_rcd_8:
	cmp rdi,SS_MAX
	jz ss_end_rcd_8
	add rdi,1 
	lea rsi,[rax+8*9]
	mov QWORD [rax],rsi 
	mov rax,rsi 
	jmp ss_lp_rcd_8
ss_end_rcd_8:
	mov rsi,-65528
	mov [rax],rsi 

init_ss_rcd_9:
	mov QWORD [SS_RCD_9_TOP],SS_RCD_9_VCT
	mov rdi,0 
	mov rax,SS_RCD_9_VCT
ss_lp_rcd_9:
	cmp rdi,SS_MAX
	jz ss_end_rcd_9
	add rdi,1 
	lea rsi,[rax+8*10]
	mov QWORD [rax],rsi 
	mov rax,rsi 
	jmp ss_lp_rcd_9
ss_end_rcd_9:
	mov rsi,-65527
	mov [rax],rsi 

init_ss_rcd_10:
	mov QWORD [SS_RCD_10_TOP],SS_RCD_10_VCT
	mov rdi,0 
	mov rax,SS_RCD_10_VCT
ss_lp_rcd_10:
	cmp rdi,SS_MAX
	jz ss_end_rcd_10
	add rdi,1 
	lea rsi,[rax+8*11]
	mov QWORD [rax],rsi 
	mov rax,rsi 
	jmp ss_lp_rcd_10
ss_end_rcd_10:
	mov rsi,-65526
	mov [rax],rsi 

init_ss_rcd_11:
	mov QWORD [SS_RCD_11_TOP],SS_RCD_11_VCT
	mov rdi,0 
	mov rax,SS_RCD_11_VCT
ss_lp_rcd_11:
	cmp rdi,SS_MAX
	jz ss_end_rcd_11
	add rdi,1 
	lea rsi,[rax+8*12]
	mov QWORD [rax],rsi 
	mov rax,rsi 
	jmp ss_lp_rcd_11
ss_end_rcd_11:
	mov rsi,-65525
	mov [rax],rsi 

init_ss_rcd_12:
	mov QWORD [SS_RCD_12_TOP],SS_RCD_12_VCT
	mov rdi,0 
	mov rax,SS_RCD_12_VCT
ss_lp_rcd_12:
	cmp rdi,SS_MAX
	jz ss_end_rcd_12
	add rdi,1 
	lea rsi,[rax+8*13]
	mov QWORD [rax],rsi 
	mov rax,rsi 
	jmp ss_lp_rcd_12
ss_end_rcd_12:
	mov rsi,-65524
	mov [rax],rsi 

init_ss_rcd_13:
	mov QWORD [SS_RCD_13_TOP],SS_RCD_13_VCT
	mov rdi,0 
	mov rax,SS_RCD_13_VCT
ss_lp_rcd_13:
	cmp rdi,SS_MAX
	jz ss_end_rcd_13
	add rdi,1 
	lea rsi,[rax+8*14]
	mov QWORD [rax],rsi 
	mov rax,rsi 
	jmp ss_lp_rcd_13
ss_end_rcd_13:
	mov rsi,-65523
	mov [rax],rsi 

init_ss_rcd_14:
	mov QWORD [SS_RCD_14_TOP],SS_RCD_14_VCT
	mov rdi,0 
	mov rax,SS_RCD_14_VCT
ss_lp_rcd_14:
	cmp rdi,SS_MAX
	jz ss_end_rcd_14
	add rdi,1 
	lea rsi,[rax+8*15]
	mov QWORD [rax],rsi 
	mov rax,rsi 
	jmp ss_lp_rcd_14
ss_end_rcd_14:
	mov rsi,-65522
	mov [rax],rsi 

init_ss_rcd_15:
	mov QWORD [SS_RCD_15_TOP],SS_RCD_15_VCT
	mov rdi,0 
	mov rax,SS_RCD_15_VCT
ss_lp_rcd_15:
	cmp rdi,SS_MAX
	jz ss_end_rcd_15
	add rdi,1 
	lea rsi,[rax+8*16]
	mov QWORD [rax],rsi 
	mov rax,rsi 
	jmp ss_lp_rcd_15
ss_end_rcd_15:
	mov rsi,-65521
	mov [rax],rsi 
	jmp RTM_0
ETR_35: ; of_s8 0'(= {| l |} ) ⊢ 0'(= a5◂ [ ] ) : (_s8→_t5)
;; rsp=0 , %4~0'(= {| l |} ) 
; #33 0'(= {| l |} ) ⊢ 1(<4)◂0'(= {| l |} )
;; rsp=0 , %5~1(<4)◂0'(= {| l |} ) 
; ∎ 1(<4)◂0'(= {| l |} )
; .mov_ptn2 1(<4)◂0'(= {| l |} ) ⊢ 0'(= a5◂ [ ] )
	mov r14,r13
; .mov_ptn 1(<4)◂1'(= {| l |} ) ⊢ 0'(= a5◂ [ ] )
	mov rax,r14
	mov BYTE [rax+6],1
	mov r13,rax
	ret
ETR_36: ; len 0'(= a5◂ [ ] ) ⊢ { 0'(= a5◂ [ ] ) 1'(= r ) } : (_t5→{ _t5 _r64 })
;; rsp=0 , %6~0'(= a5◂ [ ] ) 
;; ? 0'(= a5◂ [ ] ) ⊢ 0(<4)◂{ 1'(= a5◂ [ ] ) 2'(= r ) 3'(= a5◂ [ ] ) }
	mov rdi,r13
	cmp BYTE [rdi+6],0
	jnz LB_0
	mov rdi,r13
	mov rdi,QWORD [rdi+8+8*0]
	mov r14,rdi
	mov rdi,r13
	mov rdi,QWORD [rdi+8+8*1]
	mov r8,rdi
	mov rdi,r13
	mov rdi,QWORD [rdi+8+8*2]
	mov r9,rdi
;; rsp=0 , %11~3'(= a5◂ [ ] ) %10~2'(= r ) %9~1'(= a5◂ [ ] ) 
	jmp LB_1
LB_1:
; $ 2'(= r ) ⊢ 2'(= r ),0'(= r )
	mov rdi,r8
	mov rax,rdi
	mov r13,rax
;; rsp=0 , %13~0'(= r ) %12~2'(= r ) %11~3'(= a5◂ [ ] ) %9~1'(= a5◂ [ ] ) 
; #34 { 1'(= a5◂ [ ] ) 0'(= r ) 3'(= a5◂ [ ] ) } ⊢ 0(<4)◂{ 1'(= a5◂ [ ] ) 0'(= r ) 3'(= a5◂ [ ] ) }
;; rsp=0 , %14~0(<4)◂{ 1'(= a5◂ [ ] ) 0'(= r ) 3'(= a5◂ [ ] ) } %12~2'(= r ) 
; ∎ { 0(<4)◂{ 1'(= a5◂ [ ] ) 0'(= r ) 3'(= a5◂ [ ] ) } 2'(= r ) }
; .mov_ptn2 { 0(<4)◂{ 1'(= a5◂ [ ] ) 0'(= r ) 3'(= a5◂ [ ] ) } 2'(= r ) } ⊢ { 0'(= a5◂ [ ] ) 1'(= r ) }
	mov r10,r13
; .mov_ptn 0(<4)◂{ 1'(= a5◂ [ ] ) 4'(= r ) 3'(= a5◂ [ ] ) } ⊢ 0'(= a5◂ [ ] )
	mov rax,[SS_RCD_3_TOP]
	mov rsi,[rax] 
	mov QWORD [SS_RCD_3_TOP],rsi
	mov QWORD [rax],0
	mov r11,rax
	mov rax,r14
	mov QWORD [r11+8+8*0],rax
	mov rax,r10
	mov QWORD [r11+8+8*1],rax
	mov rax,r9
	mov QWORD [r11+8+8*2],rax
	mov rax,r11
	mov BYTE [rax+6],0
	mov r13,rax
; .mov_ptn 2'(= r ) ⊢ 1'(= r )
	mov rax,r8
	mov r14,rax
	ret
LB_0:
;; ? 0'(= a5◂ [ ] ) ⊢ 3(<4)◂1'(= r )
	mov rdi,r13
	cmp BYTE [rdi+6],3
	jnz LB_2
	mov rax,QWORD [rdi+8]
	mov r14,rax
;; rsp=0 , %8~1'(= r ) 
	jmp LB_3
LB_3:
; $ %[ 1r ] ⊢ %[ 1r ]
;; rsp=0 , %15~%[ 1r ] %8~1'(= r ) 
; #31 1'(= r ) ⊢ 3(<4)◂1'(= r )
;; rsp=0 , %16~3(<4)◂1'(= r ) %15~%[ 1r ] 
; ∎ { 3(<4)◂1'(= r ) %[ 1r ] }
; .mov_ptn2 { 3(<4)◂1'(= r ) %[ 1r ] } ⊢ { 0'(= a5◂ [ ] ) 1'(= r ) }
; .mov_ptn 3(<4)◂1'(= r ) ⊢ 0'(= a5◂ [ ] )
	mov rax,r14
	mov rdi,rax
	mov rax,r15
	mov r15,QWORD [r15] 
	mov QWORD [rax],0
	mov BYTE [rax+6],3
	mov QWORD [rax+8],rdi
	mov r13,rax
; .mov_ptn %[ 1r ] ⊢ 1'(= r )
	mov rax,1
	mov r14,rax
	ret
LB_2:
;; ? 0'(= a5◂ [ ] ) ⊢ 2(<4)◂{ }
	mov rdi,r13
	cmp BYTE [rdi+6],2
	jnz LB_4
;; rsp=0 , 
; #32 { } ⊢ 2(<4)◂{ }
;; rsp=0 , %17~2(<4)◂{ } 
	jmp LB_5
LB_5:
; $ %[ 0r ] ⊢ %[ 0r ]
;; rsp=0 , %18~%[ 0r ] %17~2(<4)◂{ } 
; ∎ { 2(<4)◂{ } %[ 0r ] }
; .mov_ptn2 { 2(<4)◂{ } %[ 0r ] } ⊢ { 0'(= a5◂ [ ] ) 1'(= r ) }
; .mov_ptn %[ 0r ] ⊢ 1'(= r )
	mov rax,0
	mov r14,rax
; .mov_ptn 2(<4)◂{ } ⊢ 0'(= a5◂ [ ] )
	mov rax,unt 
	mov rax,unt_2
	mov r13,rax
	ret
LB_4:
;; ?. 0'(= a5◂ [ ] ) ⊢ 1(<4)◂0'(= {| l |} )
;; rsp=0 , %7~0'(= {| l |} ) 
; _#7 0'(= {| l |} ) ⊢ { 0'(= {| l |} ) 1'(= r ) }
	mov rdi,r13
	mov rdi,QWORD [rdi] 
	mov rsi,0x0000_ffff_ffff_ffff
	and rdi,rsi 
	mov r14,rdi
;; rsp=0 , %20~1'(= r ) %19~0'(= {| l |} ) 
; #33 0'(= {| l |} ) ⊢ 1(<4)◂0'(= {| l |} )
;; rsp=0 , %21~1(<4)◂0'(= {| l |} ) %20~1'(= r ) 
; ∎ { 1(<4)◂0'(= {| l |} ) 1'(= r ) }
; .mov_ptn2 { 1(<4)◂0'(= {| l |} ) 1'(= r ) } ⊢ { 0'(= a5◂ [ ] ) 1'(= r ) }
	mov r8,r13
; .mov_ptn 1(<4)◂2'(= {| l |} ) ⊢ 0'(= a5◂ [ ] )
	mov rax,r8
	mov BYTE [rax+6],1
	mov r13,rax
	ret
ETR_37: ; add_s8 { 0'(= a5◂ [ ] ) 1'(= {| l |} ) } ⊢ 0'(= a5◂ [ ] ) : ({ _t5 _s8 }→_t5)
;; rsp=0 , %23~1'(= {| l |} ) %22~0'(= a5◂ [ ] ) 
; _#7 1'(= {| l |} ) ⊢ { 1'(= {| l |} ) 2'(= r ) }
	mov rdi,r14
	mov rdi,QWORD [rdi] 
	mov rsi,0x0000_ffff_ffff_ffff
	and rdi,rsi 
	mov r8,rdi
;; rsp=0 , %25~2'(= r ) %24~1'(= {| l |} ) %22~0'(= a5◂ [ ] ) 
; rsp_d=0, #36 0'(= a5◂ [ ] ) ⊢ { 0'(= a5◂ [ ] ) 3'(= r ) }
	sub rsp,16
	mov QWORD [rsp+8*0],r14
	mov QWORD [rsp+8*1],r8
; .mov_ptn2 0'(= a5◂ [ ] ) ⊢ 0'(= a5◂ [ ] )
	call ETR_36

	mov r8,QWORD [rsp-8+8*2]
	mov rax,QWORD [rsp-8+8*1]
	mov r9,r14
	mov r14,rax
	add rsp,16
;; rsp=0 , %27~3'(= r ) %26~0'(= a5◂ [ ] ) %25~2'(= r ) %24~1'(= {| l |} ) 
; _#11 { 2'(= r ) 3'(= r ) } ⊢ { 2'(= r ) 3'(= r ) }
	add r8,r9
;; rsp=0 , %29~3'(= r ) %28~2'(= r ) %26~0'(= a5◂ [ ] ) %24~1'(= {| l |} ) 
; #33 1'(= {| l |} ) ⊢ 1(<4)◂1'(= {| l |} )
;; rsp=0 , %30~1(<4)◂1'(= {| l |} ) %29~3'(= r ) %28~2'(= r ) %26~0'(= a5◂ [ ] ) 
; #34 { 0'(= a5◂ [ ] ) 2'(= r ) 1(<4)◂1'(= {| l |} ) } ⊢ 0(<4)◂{ 0'(= a5◂ [ ] ) 2'(= r ) 1(<4)◂1'(= {| l |} ) }
;; rsp=0 , %31~0(<4)◂{ 0'(= a5◂ [ ] ) 2'(= r ) 1(<4)◂1'(= {| l |} ) } %29~3'(= r ) 
; ∎ 0(<4)◂{ 0'(= a5◂ [ ] ) 2'(= r ) 1(<4)◂1'(= {| l |} ) }
; .dlt.ptn 3'(= r )
; .mov_ptn2 0(<4)◂{ 0'(= a5◂ [ ] ) 2'(= r ) 1(<4)◂1'(= {| l |} ) } ⊢ 0'(= a5◂ [ ] )
	mov r9,r13
; .mov_ptn 0(<4)◂{ 3'(= a5◂ [ ] ) 2'(= r ) 1(<4)◂1'(= {| l |} ) } ⊢ 0'(= a5◂ [ ] )
	mov rax,[SS_RCD_3_TOP]
	mov rsi,[rax] 
	mov QWORD [SS_RCD_3_TOP],rsi
	mov QWORD [rax],0
	mov r10,rax
	mov rax,r9
	mov QWORD [r10+8+8*0],rax
	mov rax,r8
	mov QWORD [r10+8+8*1],rax
	mov rax,r14
	mov BYTE [rax+6],1
	mov QWORD [r10+8+8*2],rax
	mov rax,r10
	mov BYTE [rax+6],0
	mov r13,rax
	ret
ETR_38: ; pfx_s8 { 0'(= {| l |} ) 1'(= a5◂ [ ] ) } ⊢ 0'(= a5◂ [ ] ) : ({ _s8 _t5 }→_t5)
;; rsp=0 , %33~1'(= a5◂ [ ] ) %32~0'(= {| l |} ) 
; _#7 0'(= {| l |} ) ⊢ { 0'(= {| l |} ) 2'(= r ) }
	mov rdi,r13
	mov rdi,QWORD [rdi] 
	mov rsi,0x0000_ffff_ffff_ffff
	and rdi,rsi 
	mov r8,rdi
;; rsp=0 , %35~2'(= r ) %34~0'(= {| l |} ) %33~1'(= a5◂ [ ] ) 
; rsp_d=0, #36 1'(= a5◂ [ ] ) ⊢ { 3'(= a5◂ [ ] ) 1'(= r ) }
	sub rsp,16
	mov QWORD [rsp+8*0],r13
	mov QWORD [rsp+8*1],r8
; .mov_ptn2 1'(= a5◂ [ ] ) ⊢ 0'(= a5◂ [ ] )
; .mov_ptn 1'(= a5◂ [ ] ) ⊢ 0'(= a5◂ [ ] )
	mov rax,r14
	mov r13,rax
	call ETR_36

	mov r8,QWORD [rsp-8+8*2]
	mov rax,QWORD [rsp-8+8*1]
	mov r9,r13
	mov r13,rax
	add rsp,16
;; rsp=0 , %37~1'(= r ) %36~3'(= a5◂ [ ] ) %35~2'(= r ) %34~0'(= {| l |} ) 
; _#11 { 2'(= r ) 1'(= r ) } ⊢ { 2'(= r ) 1'(= r ) }
	add r8,r14
;; rsp=0 , %39~1'(= r ) %38~2'(= r ) %36~3'(= a5◂ [ ] ) %34~0'(= {| l |} ) 
; #33 0'(= {| l |} ) ⊢ 1(<4)◂0'(= {| l |} )
;; rsp=0 , %40~1(<4)◂0'(= {| l |} ) %39~1'(= r ) %38~2'(= r ) %36~3'(= a5◂ [ ] ) 
; #34 { 1(<4)◂0'(= {| l |} ) 2'(= r ) 3'(= a5◂ [ ] ) } ⊢ 0(<4)◂{ 1(<4)◂0'(= {| l |} ) 2'(= r ) 3'(= a5◂ [ ] ) }
;; rsp=0 , %41~0(<4)◂{ 1(<4)◂0'(= {| l |} ) 2'(= r ) 3'(= a5◂ [ ] ) } %39~1'(= r ) 
; ∎ 0(<4)◂{ 1(<4)◂0'(= {| l |} ) 2'(= r ) 3'(= a5◂ [ ] ) }
; .dlt.ptn 1'(= r )
; .mov_ptn2 0(<4)◂{ 1(<4)◂0'(= {| l |} ) 2'(= r ) 3'(= a5◂ [ ] ) } ⊢ 0'(= a5◂ [ ] )
	mov r14,r13
; .mov_ptn 0(<4)◂{ 1(<4)◂1'(= {| l |} ) 2'(= r ) 3'(= a5◂ [ ] ) } ⊢ 0'(= a5◂ [ ] )
	mov rax,[SS_RCD_3_TOP]
	mov rsi,[rax] 
	mov QWORD [SS_RCD_3_TOP],rsi
	mov QWORD [rax],0
	mov r10,rax
	mov rax,r14
	mov BYTE [rax+6],1
	mov QWORD [r10+8+8*0],rax
	mov rax,r8
	mov QWORD [r10+8+8*1],rax
	mov rax,r9
	mov QWORD [r10+8+8*2],rax
	mov rax,r10
	mov BYTE [rax+6],0
	mov r13,rax
	ret
ETR_39: ; add_chr { 0'(= a5◂ [ ] ) 1'(= r ) } ⊢ 0'(= a5◂ [ ] ) : ({ _t5 _r64 }→_t5)
;; rsp=0 , %43~1'(= r ) %42~0'(= a5◂ [ ] ) 
; rsp_d=0, #36 0'(= a5◂ [ ] ) ⊢ { 0'(= a5◂ [ ] ) 2'(= r ) }
	sub rsp,8
	mov QWORD [rsp+8*0],r14
; .mov_ptn2 0'(= a5◂ [ ] ) ⊢ 0'(= a5◂ [ ] )
	call ETR_36

	mov rax,QWORD [rsp-8+8*1]
	mov r8,r14
	mov r14,rax
	add rsp,8
;; rsp=0 , %45~2'(= r ) %44~0'(= a5◂ [ ] ) %43~1'(= r ) 
; _#9 2'(= r ) ⊢ 2'(= r )
	add r8,1
;; rsp=0 , %46~2'(= r ) %44~0'(= a5◂ [ ] ) %43~1'(= r ) 
; #31 1'(= r ) ⊢ 3(<4)◂1'(= r )
;; rsp=0 , %47~3(<4)◂1'(= r ) %46~2'(= r ) %44~0'(= a5◂ [ ] ) 
; #34 { 0'(= a5◂ [ ] ) 2'(= r ) 3(<4)◂1'(= r ) } ⊢ 0(<4)◂{ 0'(= a5◂ [ ] ) 2'(= r ) 3(<4)◂1'(= r ) }
;; rsp=0 , %48~0(<4)◂{ 0'(= a5◂ [ ] ) 2'(= r ) 3(<4)◂1'(= r ) } 
; ∎ 0(<4)◂{ 0'(= a5◂ [ ] ) 2'(= r ) 3(<4)◂1'(= r ) }
; .mov_ptn2 0(<4)◂{ 0'(= a5◂ [ ] ) 2'(= r ) 3(<4)◂1'(= r ) } ⊢ 0'(= a5◂ [ ] )
	mov r9,r13
; .mov_ptn 0(<4)◂{ 3'(= a5◂ [ ] ) 2'(= r ) 3(<4)◂1'(= r ) } ⊢ 0'(= a5◂ [ ] )
	mov rax,[SS_RCD_3_TOP]
	mov rsi,[rax] 
	mov QWORD [SS_RCD_3_TOP],rsi
	mov QWORD [rax],0
	mov r10,rax
	mov rax,r9
	mov QWORD [r10+8+8*0],rax
	mov rax,r8
	mov QWORD [r10+8+8*1],rax
	mov rax,r14
	mov rdi,rax
	mov rax,r15
	mov r15,QWORD [r15] 
	mov QWORD [rax],0
	mov BYTE [rax+6],3
	mov QWORD [rax+8],rdi
	mov QWORD [r10+8+8*2],rax
	mov rax,r10
	mov BYTE [rax+6],0
	mov r13,rax
	ret
ETR_40: ; pfx_chr { 0'(= r ) 1'(= a5◂ [ ] ) } ⊢ 0'(= a5◂ [ ] ) : ({ _r64 _t5 }→_t5)
;; rsp=0 , %50~1'(= a5◂ [ ] ) %49~0'(= r ) 
; rsp_d=0, #36 1'(= a5◂ [ ] ) ⊢ { 2'(= a5◂ [ ] ) 1'(= r ) }
	sub rsp,8
	mov QWORD [rsp+8*0],r13
; .mov_ptn2 1'(= a5◂ [ ] ) ⊢ 0'(= a5◂ [ ] )
; .mov_ptn 1'(= a5◂ [ ] ) ⊢ 0'(= a5◂ [ ] )
	mov rax,r14
	mov r13,rax
	call ETR_36

	mov rax,QWORD [rsp-8+8*1]
	mov r8,r13
	mov r13,rax
	add rsp,8
;; rsp=0 , %52~1'(= r ) %51~2'(= a5◂ [ ] ) %49~0'(= r ) 
; _#9 1'(= r ) ⊢ 1'(= r )
	add r14,1
;; rsp=0 , %53~1'(= r ) %51~2'(= a5◂ [ ] ) %49~0'(= r ) 
; #31 0'(= r ) ⊢ 3(<4)◂0'(= r )
;; rsp=0 , %54~3(<4)◂0'(= r ) %53~1'(= r ) %51~2'(= a5◂ [ ] ) 
; #34 { 3(<4)◂0'(= r ) 1'(= r ) 2'(= a5◂ [ ] ) } ⊢ 0(<4)◂{ 3(<4)◂0'(= r ) 1'(= r ) 2'(= a5◂ [ ] ) }
;; rsp=0 , %55~0(<4)◂{ 3(<4)◂0'(= r ) 1'(= r ) 2'(= a5◂ [ ] ) } 
; ∎ 0(<4)◂{ 3(<4)◂0'(= r ) 1'(= r ) 2'(= a5◂ [ ] ) }
; .mov_ptn2 0(<4)◂{ 3(<4)◂0'(= r ) 1'(= r ) 2'(= a5◂ [ ] ) } ⊢ 0'(= a5◂ [ ] )
	mov r9,r13
; .mov_ptn 0(<4)◂{ 3(<4)◂3'(= r ) 1'(= r ) 2'(= a5◂ [ ] ) } ⊢ 0'(= a5◂ [ ] )
	mov rax,[SS_RCD_3_TOP]
	mov rsi,[rax] 
	mov QWORD [SS_RCD_3_TOP],rsi
	mov QWORD [rax],0
	mov r10,rax
	mov rax,r9
	mov rdi,rax
	mov rax,r15
	mov r15,QWORD [r15] 
	mov QWORD [rax],0
	mov BYTE [rax+6],3
	mov QWORD [rax+8],rdi
	mov QWORD [r10+8+8*0],rax
	mov rax,r14
	mov QWORD [r10+8+8*1],rax
	mov rax,r8
	mov QWORD [r10+8+8*2],rax
	mov rax,r10
	mov BYTE [rax+6],0
	mov r13,rax
	ret
ETR_41: ; cct { 0'(= a5◂ [ ] ) 1'(= a5◂ [ ] ) } ⊢ 0'(= a5◂ [ ] ) : ({ _t5 _t5 }→_t5)
;; rsp=0 , %57~1'(= a5◂ [ ] ) %56~0'(= a5◂ [ ] ) 
; rsp_d=0, #36 0'(= a5◂ [ ] ) ⊢ { 0'(= a5◂ [ ] ) 2'(= r ) }
	sub rsp,8
	mov QWORD [rsp+8*0],r14
; .mov_ptn2 0'(= a5◂ [ ] ) ⊢ 0'(= a5◂ [ ] )
	call ETR_36

	mov rax,QWORD [rsp-8+8*1]
	mov r8,r14
	mov r14,rax
	add rsp,8
;; rsp=0 , %59~2'(= r ) %58~0'(= a5◂ [ ] ) %57~1'(= a5◂ [ ] ) 
; rsp_d=0, #36 1'(= a5◂ [ ] ) ⊢ { 3'(= a5◂ [ ] ) 1'(= r ) }
	sub rsp,16
	mov QWORD [rsp+8*0],r13
	mov QWORD [rsp+8*1],r8
; .mov_ptn2 1'(= a5◂ [ ] ) ⊢ 0'(= a5◂ [ ] )
; .mov_ptn 1'(= a5◂ [ ] ) ⊢ 0'(= a5◂ [ ] )
	mov rax,r14
	mov r13,rax
	call ETR_36

	mov r8,QWORD [rsp-8+8*2]
	mov rax,QWORD [rsp-8+8*1]
	mov r9,r13
	mov r13,rax
	add rsp,16
;; rsp=0 , %61~1'(= r ) %60~3'(= a5◂ [ ] ) %59~2'(= r ) %58~0'(= a5◂ [ ] ) 
; _#11 { 2'(= r ) 1'(= r ) } ⊢ { 2'(= r ) 1'(= r ) }
	add r8,r14
;; rsp=0 , %63~1'(= r ) %62~2'(= r ) %60~3'(= a5◂ [ ] ) %58~0'(= a5◂ [ ] ) 
; #34 { 0'(= a5◂ [ ] ) 2'(= r ) 3'(= a5◂ [ ] ) } ⊢ 0(<4)◂{ 0'(= a5◂ [ ] ) 2'(= r ) 3'(= a5◂ [ ] ) }
;; rsp=0 , %64~0(<4)◂{ 0'(= a5◂ [ ] ) 2'(= r ) 3'(= a5◂ [ ] ) } %63~1'(= r ) 
; ∎ 0(<4)◂{ 0'(= a5◂ [ ] ) 2'(= r ) 3'(= a5◂ [ ] ) }
; .dlt.ptn 1'(= r )
; .mov_ptn2 0(<4)◂{ 0'(= a5◂ [ ] ) 2'(= r ) 3'(= a5◂ [ ] ) } ⊢ 0'(= a5◂ [ ] )
	mov r14,r13
; .mov_ptn 0(<4)◂{ 1'(= a5◂ [ ] ) 2'(= r ) 3'(= a5◂ [ ] ) } ⊢ 0'(= a5◂ [ ] )
	mov rax,[SS_RCD_3_TOP]
	mov rsi,[rax] 
	mov QWORD [SS_RCD_3_TOP],rsi
	mov QWORD [rax],0
	mov r10,rax
	mov rax,r14
	mov QWORD [r10+8+8*0],rax
	mov rax,r8
	mov QWORD [r10+8+8*1],rax
	mov rax,r9
	mov QWORD [r10+8+8*2],rax
	mov rax,r10
	mov BYTE [rax+6],0
	mov r13,rax
	ret
ETR_42: ; mk_s8_i { 0'(= a5◂ [ ] ) 1'(= {| l |} ) 2'(= r ) } ⊢ { 0'(= a5◂ [ ] ) 1'(= {| l |} ) 2'(= r ) } : ({ _t5 _s8 _r64 }→{ _t5 _s8 _r64 })
;; rsp=0 , %67~2'(= r ) %66~1'(= {| l |} ) %65~0'(= a5◂ [ ] ) 
;; ? 0'(= a5◂ [ ] ) ⊢ 0(<4)◂{ 3'(= a5◂ [ ] ) 4'(= r ) 5'(= a5◂ [ ] ) }
	mov rdi,r13
	cmp BYTE [rdi+6],0
	jnz LB_6
	mov rdi,r13
	mov rdi,QWORD [rdi+8+8*0]
	mov r9,rdi
	mov rdi,r13
	mov rdi,QWORD [rdi+8+8*1]
	mov r10,rdi
	mov rdi,r13
	mov rdi,QWORD [rdi+8+8*2]
	mov r11,rdi
;; rsp=0 , %72~5'(= a5◂ [ ] ) %71~4'(= r ) %70~3'(= a5◂ [ ] ) %67~2'(= r ) %66~1'(= {| l |} ) 
; rsp_d=0, #42 { 3'(= a5◂ [ ] ) 1'(= {| l |} ) 2'(= r ) } ⊢ { 0'(= a5◂ [ ] ) 1'(= {| l |} ) 2'(= r ) }
	sub rsp,16
	mov QWORD [rsp+8*0],r10
	mov QWORD [rsp+8*1],r11
; .mov_ptn2 { 3'(= a5◂ [ ] ) 1'(= {| l |} ) 2'(= r ) } ⊢ { 0'(= a5◂ [ ] ) 1'(= {| l |} ) 2'(= r ) }
; .mov_ptn 3'(= a5◂ [ ] ) ⊢ 0'(= a5◂ [ ] )
	mov rax,r9
	mov r13,rax
	call ETR_42

	mov r11,QWORD [rsp-8+8*2]
	mov r10,QWORD [rsp-8+8*1]
	add rsp,16
;; rsp=0 , %75~2'(= r ) %74~1'(= {| l |} ) %73~0'(= a5◂ [ ] ) %72~5'(= a5◂ [ ] ) %71~4'(= r ) 
; rsp_d=0, #42 { 5'(= a5◂ [ ] ) 1'(= {| l |} ) 2'(= r ) } ⊢ { 3'(= a5◂ [ ] ) 1'(= {| l |} ) 2'(= r ) }
	sub rsp,16
	mov QWORD [rsp+8*0],r13
	mov QWORD [rsp+8*1],r10
; .mov_ptn2 { 5'(= a5◂ [ ] ) 1'(= {| l |} ) 2'(= r ) } ⊢ { 0'(= a5◂ [ ] ) 1'(= {| l |} ) 2'(= r ) }
; .mov_ptn 5'(= a5◂ [ ] ) ⊢ 0'(= a5◂ [ ] )
	mov rax,r11
	mov r13,rax
	call ETR_42

	mov r10,QWORD [rsp-8+8*2]
	mov rax,QWORD [rsp-8+8*1]
	mov r9,r13
	mov r13,rax
	add rsp,16
;; rsp=0 , %78~2'(= r ) %77~1'(= {| l |} ) %76~3'(= a5◂ [ ] ) %73~0'(= a5◂ [ ] ) %71~4'(= r ) 
; #34 { 0'(= a5◂ [ ] ) 4'(= r ) 3'(= a5◂ [ ] ) } ⊢ 0(<4)◂{ 0'(= a5◂ [ ] ) 4'(= r ) 3'(= a5◂ [ ] ) }
;; rsp=0 , %79~0(<4)◂{ 0'(= a5◂ [ ] ) 4'(= r ) 3'(= a5◂ [ ] ) } %78~2'(= r ) %77~1'(= {| l |} ) 
; ∎ { 0(<4)◂{ 0'(= a5◂ [ ] ) 4'(= r ) 3'(= a5◂ [ ] ) } 1'(= {| l |} ) 2'(= r ) }
; .mov_ptn2 { 0(<4)◂{ 0'(= a5◂ [ ] ) 4'(= r ) 3'(= a5◂ [ ] ) } 1'(= {| l |} ) 2'(= r ) } ⊢ { 0'(= a5◂ [ ] ) 1'(= {| l |} ) 2'(= r ) }
	mov r11,r13
; .mov_ptn 0(<4)◂{ 5'(= a5◂ [ ] ) 4'(= r ) 3'(= a5◂ [ ] ) } ⊢ 0'(= a5◂ [ ] )
	mov rax,[SS_RCD_3_TOP]
	mov rsi,[rax] 
	mov QWORD [SS_RCD_3_TOP],rsi
	mov QWORD [rax],0
	mov rcx,rax
	mov rax,r11
	mov QWORD [rcx+8+8*0],rax
	mov rax,r10
	mov QWORD [rcx+8+8*1],rax
	mov rax,r9
	mov QWORD [rcx+8+8*2],rax
	mov rax,rcx
	mov BYTE [rax+6],0
	mov r13,rax
	ret
LB_6:
;; ? 0'(= a5◂ [ ] ) ⊢ 2(<4)◂{ }
	mov rdi,r13
	cmp BYTE [rdi+6],2
	jnz LB_7
;; rsp=0 , %67~2'(= r ) %66~1'(= {| l |} ) 
; #32 { } ⊢ 2(<4)◂{ }
;; rsp=0 , %80~2(<4)◂{ } %67~2'(= r ) %66~1'(= {| l |} ) 
; ∎ { 2(<4)◂{ } 1'(= {| l |} ) 2'(= r ) }
; .mov_ptn2 { 2(<4)◂{ } 1'(= {| l |} ) 2'(= r ) } ⊢ { 0'(= a5◂ [ ] ) 1'(= {| l |} ) 2'(= r ) }
; .mov_ptn 2(<4)◂{ } ⊢ 0'(= a5◂ [ ] )
	mov rax,unt 
	mov rax,unt_2
	mov r13,rax
	ret
LB_7:
;; ? 0'(= a5◂ [ ] ) ⊢ 3(<4)◂3'(= r )
	mov rdi,r13
	cmp BYTE [rdi+6],3
	jnz LB_8
	mov rax,QWORD [rdi+8]
	mov r9,rax
;; rsp=0 , %69~3'(= r ) %67~2'(= r ) %66~1'(= {| l |} ) 
; _#14 { 1'(= {| l |} ) 2'(= r ) 3'(= r ) } ⊢ { 1'(= {| l |} ) 2'(= r ) 3'(= r ) }
; _sts { 1'(= {| l |} ) 2'(= r ) 3'(= r ) } ⊢ { 1'(= {| l |} ) 2'(= r ) 3'(= r ) }
	mov rax,r14
	mov rdi,0x0000_ffff_ffff_ffff
	and rdi,[rax]
	cmp rdi,r8
	jle err
	mov rsi,r8
	mov rdi,r9
	mov BYTE [rax+8+rsi],dil
;; rsp=0 , %83~3'(= r ) %82~2'(= r ) %81~1'(= {| l |} ) 
; _#9 2'(= r ) ⊢ 2'(= r )
	add r8,1
;; rsp=0 , %84~2'(= r ) %83~3'(= r ) %81~1'(= {| l |} ) 
; #31 3'(= r ) ⊢ 3(<4)◂3'(= r )
;; rsp=0 , %85~3(<4)◂3'(= r ) %84~2'(= r ) %81~1'(= {| l |} ) 
; ∎ { 3(<4)◂3'(= r ) 1'(= {| l |} ) 2'(= r ) }
; .mov_ptn2 { 3(<4)◂3'(= r ) 1'(= {| l |} ) 2'(= r ) } ⊢ { 0'(= a5◂ [ ] ) 1'(= {| l |} ) 2'(= r ) }
; .mov_ptn 3(<4)◂3'(= r ) ⊢ 0'(= a5◂ [ ] )
	mov rax,r9
	mov rdi,rax
	mov rax,r15
	mov r15,QWORD [r15] 
	mov QWORD [rax],0
	mov BYTE [rax+6],3
	mov QWORD [rax+8],rdi
	mov r13,rax
	ret
LB_8:
;; ?. 0'(= a5◂ [ ] ) ⊢ 1(<4)◂0'(= {| l |} )
;; rsp=0 , %68~0'(= {| l |} ) %67~2'(= r ) %66~1'(= {| l |} ) 
; _#7 0'(= {| l |} ) ⊢ { 0'(= {| l |} ) 3'(= r ) }
	mov rdi,r13
	mov rdi,QWORD [rdi] 
	mov rsi,0x0000_ffff_ffff_ffff
	and rdi,rsi 
	mov r9,rdi
;; rsp=0 , %87~3'(= r ) %86~0'(= {| l |} ) %67~2'(= r ) %66~1'(= {| l |} ) 
	jmp LB_9
LB_9:
; $ %[ 0r ] ⊢ %[ 0r ]
;; rsp=0 , %88~%[ 0r ] %87~3'(= r ) %86~0'(= {| l |} ) %67~2'(= r ) %66~1'(= {| l |} ) 
; _#17 { 3'(= r ) 0'(= {| l |} ) %[ 0r ] 1'(= {| l |} ) 2'(= r ) } ⊢ { 3'(= r ) 0'(= {| l |} ) %[ 0r ] 1'(= {| l |} ) 2'(= r ) }
; _rep_movsb { 3'(= r ) 0'(= {| l |} ) %[ 0r ] 1'(= {| l |} ) 2'(= r ) } ⊢ { 3'(= r ) 0'(= {| l |} ) %[ 0r ] 1'(= {| l |} ) 2'(= r ) }
	mov rax,r9
	mov rsi,r13
	mov rdi,0x0000_ffff_ffff_ffff
	and rdi,[rsi]
	sub rdi,rax
	lea rsi,[rsi+8]
	cmp rdi,0
	jl err
	lea rsi,[rsi+0]
	push rsi 
	mov rsi,r14
	mov rdi,0x0000_ffff_ffff_ffff
	and rdi,[rsi]
	sub rdi,rax
	lea rsi,[rsi+8]
	cmp rdi,r8
	jl err
	add rsi,r8
	mov rdi,rsi 
	pop rsi 
	push rcx 
	mov rcx,rax 
	cld 
	rep movsb
	pop rcx 
;; rsp=0 , %93~2'(= r ) %92~1'(= {| l |} ) %91~%[ 0r ] %90~0'(= {| l |} ) %89~3'(= r ) 
; #33 0'(= {| l |} ) ⊢ 1(<4)◂0'(= {| l |} )
;; rsp=0 , %94~1(<4)◂0'(= {| l |} ) %93~2'(= r ) %92~1'(= {| l |} ) %91~%[ 0r ] %89~3'(= r ) 
; ∎ { 1(<4)◂0'(= {| l |} ) 1'(= {| l |} ) 2'(= r ) }
; .dlt.ptn %[ 0r ]
; .dlt.ptn 3'(= r )
; .mov_ptn2 { 1(<4)◂0'(= {| l |} ) 1'(= {| l |} ) 2'(= r ) } ⊢ { 0'(= a5◂ [ ] ) 1'(= {| l |} ) 2'(= r ) }
	mov r9,r13
; .mov_ptn 1(<4)◂3'(= {| l |} ) ⊢ 0'(= a5◂ [ ] )
	mov rax,r9
	mov BYTE [rax+6],1
	mov r13,rax
	ret
ETR_43: ; mk_s8 0'(= a5◂ [ ] ) ⊢ { 0'(= a5◂ [ ] ) 1'(= {| l |} ) } : (_t5→{ _t5 _s8 })
;; rsp=0 , %95~0'(= a5◂ [ ] ) 
; rsp_d=0, #36 0'(= a5◂ [ ] ) ⊢ { 0'(= a5◂ [ ] ) 1'(= r ) }
; .mov_ptn2 0'(= a5◂ [ ] ) ⊢ 0'(= a5◂ [ ] )
	call ETR_36

;; rsp=0 , %97~1'(= r ) %96~0'(= a5◂ [ ] ) 
; _#6 1'(= r ) ⊢ { 1'(= r ) 2'(= {| l |} ) }
	mov rdi,r14
	call mlc_s8
	mov r8,rax
;; rsp=0 , %99~2'(= {| l |} ) %98~1'(= r ) %96~0'(= a5◂ [ ] ) 
	jmp LB_10
LB_10:
; $ %[ 0r ] ⊢ %[ 0r ]
;; rsp=0 , %100~%[ 0r ] %99~2'(= {| l |} ) %98~1'(= r ) %96~0'(= a5◂ [ ] ) 
; rsp_d=0, #42 { 0'(= a5◂ [ ] ) 2'(= {| l |} ) %[ 0r ] } ⊢ { 0'(= a5◂ [ ] ) 3'(= {| l |} ) 2'(= r ) }
	sub rsp,8
	mov QWORD [rsp+8*0],r14
; .mov_ptn2 { 0'(= a5◂ [ ] ) 2'(= {| l |} ) %[ 0r ] } ⊢ { 0'(= a5◂ [ ] ) 1'(= {| l |} ) 2'(= r ) }
	mov r9,r8
; .mov_ptn %[ 0r ] ⊢ 2'(= r )
	mov rax,0
	mov r8,rax
; .mov_ptn 3'(= {| l |} ) ⊢ 1'(= {| l |} )
	mov rax,r9
	mov r14,rax
	call ETR_42

	mov rax,QWORD [rsp-8+8*1]
	mov r9,r14
	mov r14,rax
	add rsp,8
;; rsp=0 , %103~2'(= r ) %102~3'(= {| l |} ) %101~0'(= a5◂ [ ] ) %98~1'(= r ) 
; ∎ { 0'(= a5◂ [ ] ) 3'(= {| l |} ) }
; .dlt.ptn 2'(= r )
; .dlt.ptn 1'(= r )
; .mov_ptn2 { 0'(= a5◂ [ ] ) 3'(= {| l |} ) } ⊢ { 0'(= a5◂ [ ] ) 1'(= {| l |} ) }
; .mov_ptn 3'(= {| l |} ) ⊢ 1'(= {| l |} )
	mov rax,r9
	mov r14,rax
	ret
ETR_46: ; and { 0'(= a6◂ [ ] ) 1'(= a6◂ [ ] ) } ⊢ 0'(= a6◂ [ ] ) : ({ _t6 _t6 }→_t6)
;; rsp=0 , %105~1'(= a6◂ [ ] ) %104~0'(= a6◂ [ ] ) 
;; ?; 0'(= a6◂ [ ] ) ⊢ 0(<2)◂{ }
	mov rdi,r13
	cmp BYTE [rdi+6],0
	jnz LB_11
;; ?; 1'(= a6◂ [ ] ) ⊢ 0(<2)◂{ }
	mov rdi,r14
	cmp BYTE [rdi+6],0
	jnz LB_11
;; rsp=0 , 
; #45 { } ⊢ 0(<2)◂{ }
;; rsp=0 , %106~0(<2)◂{ } 
; ∎ 0(<2)◂{ }
; .mov_ptn2 0(<2)◂{ } ⊢ 0'(= a6◂ [ ] )
; .mov_ptn 0(<2)◂{ } ⊢ 0'(= a6◂ [ ] )
	mov rax,unt 
	mov rax,unt_0
	mov r13,rax
	ret
LB_11:
;; rsp=0 , %105~1'(= a6◂ [ ] ) %104~0'(= a6◂ [ ] ) 
; #44 { } ⊢ 1(<2)◂{ }
;; rsp=0 , %107~1(<2)◂{ } %105~1'(= a6◂ [ ] ) %104~0'(= a6◂ [ ] ) 
; ∎ 1(<2)◂{ }
; .dlt.ptn 1'(= a6◂ [ ] )
;	.dlt adt ⊢ _  
; .dlt.ptn 0'(= a6◂ [ ] )
;	.dlt adt ⊢ _  
; .mov_ptn2 1(<2)◂{ } ⊢ 0'(= a6◂ [ ] )
; .mov_ptn 1(<2)◂{ } ⊢ 0'(= a6◂ [ ] )
	mov rax,unt 
	mov rax,unt_1
	mov r13,rax
	ret
ETR_47: ; or { 0'(= a6◂ [ ] ) 1'(= a6◂ [ ] ) } ⊢ 0'(= a6◂ [ ] ) : ({ _t6 _t6 }→_t6)
;; rsp=0 , %109~1'(= a6◂ [ ] ) %108~0'(= a6◂ [ ] ) 
;; ?; 0'(= a6◂ [ ] ) ⊢ 1(<2)◂{ }
	mov rdi,r13
	cmp BYTE [rdi+6],1
	jnz LB_12
;; ?; 1'(= a6◂ [ ] ) ⊢ 1(<2)◂{ }
	mov rdi,r14
	cmp BYTE [rdi+6],1
	jnz LB_12
;; rsp=0 , 
; #44 { } ⊢ 1(<2)◂{ }
;; rsp=0 , %110~1(<2)◂{ } 
; ∎ 1(<2)◂{ }
; .mov_ptn2 1(<2)◂{ } ⊢ 0'(= a6◂ [ ] )
; .mov_ptn 1(<2)◂{ } ⊢ 0'(= a6◂ [ ] )
	mov rax,unt 
	mov rax,unt_1
	mov r13,rax
	ret
LB_12:
;; rsp=0 , %109~1'(= a6◂ [ ] ) %108~0'(= a6◂ [ ] ) 
; #45 { } ⊢ 0(<2)◂{ }
;; rsp=0 , %111~0(<2)◂{ } %109~1'(= a6◂ [ ] ) %108~0'(= a6◂ [ ] ) 
; ∎ 0(<2)◂{ }
; .dlt.ptn 1'(= a6◂ [ ] )
;	.dlt adt ⊢ _  
; .dlt.ptn 0'(= a6◂ [ ] )
;	.dlt adt ⊢ _  
; .mov_ptn2 0(<2)◂{ } ⊢ 0'(= a6◂ [ ] )
; .mov_ptn 0(<2)◂{ } ⊢ 0'(= a6◂ [ ] )
	mov rax,unt 
	mov rax,unt_0
	mov r13,rax
	ret
ETR_48: ; sub { 0'(= a6◂ [ ] ) 1'(= a6◂ [ ] ) } ⊢ 0'(= a6◂ [ ] ) : ({ _t6 _t6 }→_t6)
;; rsp=0 , %113~1'(= a6◂ [ ] ) %112~0'(= a6◂ [ ] ) 
;; ?; 1'(= a6◂ [ ] ) ⊢ 1(<2)◂{ }
	mov rdi,r14
	cmp BYTE [rdi+6],1
	jnz LB_13
;; rsp=0 , %112~0'(= a6◂ [ ] ) 
; ∎ 0'(= a6◂ [ ] )
; .mov_ptn2 0'(= a6◂ [ ] ) ⊢ 0'(= a6◂ [ ] )
	ret
LB_13:
;; ?; 1'(= a6◂ [ ] ) ⊢ 0(<2)◂{ }
;; rsp=0 , %112~0'(= a6◂ [ ] ) 
; #44 { } ⊢ 1(<2)◂{ }
;; rsp=0 , %114~1(<2)◂{ } %112~0'(= a6◂ [ ] ) 
; ∎ 1(<2)◂{ }
; .dlt.ptn 0'(= a6◂ [ ] )
;	.dlt adt ⊢ _  
; .mov_ptn2 1(<2)◂{ } ⊢ 0'(= a6◂ [ ] )
; .mov_ptn 1(<2)◂{ } ⊢ 0'(= a6◂ [ ] )
	mov rax,unt 
	mov rax,unt_1
	mov r13,rax
	ret
ETR_54: ; s8_of_r64_lst_i { 0'(= r ) 1'(= a2◂ [ r] ) } ⊢ { 0'(= r ) 1'(= {| l |} ) } : ({ _r64 _lst◂_r64 }→{ _r64 _s8 })
;; rsp=0 , %131~1'(= a2◂ [ r] ) %130~0'(= r ) 
;; ?; 1'(= a2◂ [ r] ) ⊢ 0(<2)◂{ 2'(= r ) 3'(= a2◂ [ r] ) }
	mov rdi,r14
	cmp BYTE [rdi+6],0
	jnz LB_14
	mov rdi,r14
	mov rdi,QWORD [rdi+8+8*0]
	mov r8,rdi
	mov rdi,r14
	mov rdi,QWORD [rdi+8+8*1]
	mov r9,rdi
;; rsp=0 , %133~3'(= a2◂ [ r] ) %132~2'(= r ) %130~0'(= r ) 
; _#9 0'(= r ) ⊢ 0'(= r )
	add r13,1
;; rsp=0 , %134~0'(= r ) %133~3'(= a2◂ [ r] ) %132~2'(= r ) 
; rsp_d=0, #54 { 0'(= r ) 3'(= a2◂ [ r] ) } ⊢ { 0'(= r ) 1'(= {| l |} ) }
	sub rsp,8
	mov QWORD [rsp+8*0],r8
; .mov_ptn2 { 0'(= r ) 3'(= a2◂ [ r] ) } ⊢ { 0'(= r ) 1'(= a2◂ [ r] ) }
; .mov_ptn 3'(= a2◂ [ r] ) ⊢ 1'(= a2◂ [ r] )
	mov rax,r9
	mov r14,rax
	call ETR_54

	mov r8,QWORD [rsp-8+8*1]
	add rsp,8
;; rsp=0 , %136~1'(= {| l |} ) %135~0'(= r ) %132~2'(= r ) 
; _#10 0'(= r ) ⊢ 0'(= r )
	sub r13,1
;; rsp=0 , %137~0'(= r ) %136~1'(= {| l |} ) %132~2'(= r ) 
; _#14 { 1'(= {| l |} ) 0'(= r ) 2'(= r ) } ⊢ { 1'(= {| l |} ) 0'(= r ) 2'(= r ) }
; _sts { 1'(= {| l |} ) 0'(= r ) 2'(= r ) } ⊢ { 1'(= {| l |} ) 0'(= r ) 2'(= r ) }
	mov rax,r14
	mov rdi,0x0000_ffff_ffff_ffff
	and rdi,[rax]
	cmp rdi,r13
	jle err
	mov rsi,r13
	mov rdi,r8
	mov BYTE [rax+8+rsi],dil
;; rsp=0 , %140~2'(= r ) %139~0'(= r ) %138~1'(= {| l |} ) 
; ∎ { 0'(= r ) 1'(= {| l |} ) }
; .dlt.ptn 2'(= r )
; .mov_ptn2 { 0'(= r ) 1'(= {| l |} ) } ⊢ { 0'(= r ) 1'(= {| l |} ) }
	ret
LB_14:
;; ?; 1'(= a2◂ [ r] ) ⊢ 1(<2)◂{ }
;; rsp=0 , %130~0'(= r ) 
; _#6 0'(= r ) ⊢ { 0'(= r ) 1'(= {| l |} ) }
	mov rdi,r13
	call mlc_s8
	mov r14,rax
;; rsp=0 , %142~1'(= {| l |} ) %141~0'(= r ) 
; ∎ { 0'(= r ) 1'(= {| l |} ) }
; .mov_ptn2 { 0'(= r ) 1'(= {| l |} ) } ⊢ { 0'(= r ) 1'(= {| l |} ) }
	ret
ETR_55: ; s8_of_r64_lst 0'(= a2◂ [ r] ) ⊢ 0'(= {| l |} ) : (_lst◂_r64→_s8)
;; rsp=0 , %143~0'(= a2◂ [ r] ) 
	jmp LB_15
LB_15:
; $ %[ 0r ] ⊢ %[ 0r ]
;; rsp=0 , %144~%[ 0r ] %143~0'(= a2◂ [ r] ) 
; rsp_d=0, #54 { %[ 0r ] 0'(= a2◂ [ r] ) } ⊢ { 0'(= r ) 1'(= {| l |} ) }
; .mov_ptn2 { %[ 0r ] 0'(= a2◂ [ r] ) } ⊢ { 0'(= r ) 1'(= a2◂ [ r] ) }
; .mov_ptn 0'(= a2◂ [ r] ) ⊢ 1'(= a2◂ [ r] )
	mov rax,r13
	mov r14,rax
; .mov_ptn %[ 0r ] ⊢ 0'(= r )
	mov rax,0
	mov r13,rax
	call ETR_54

;; rsp=0 , %146~1'(= {| l |} ) %145~0'(= r ) 
; ∎ 1'(= {| l |} )
; .dlt.ptn 0'(= r )
; .mov_ptn2 1'(= {| l |} ) ⊢ 0'(= {| l |} )
; .mov_ptn 1'(= {| l |} ) ⊢ 0'(= {| l |} )
	mov rax,r14
	mov r13,rax
	ret
ETR_56: ; s8_of_s8_lst_i { 0'(= r ) 1'(= a2◂ [ {| l |}] ) } ⊢ { 0'(= {| l |} ) 1'(= r ) } : ({ _r64 _lst◂_s8 }→{ _s8 _r64 })
;; rsp=0 , %148~1'(= a2◂ [ {| l |}] ) %147~0'(= r ) 
;; ? 1'(= a2◂ [ {| l |}] ) ⊢ 0(<2)◂{ 2'(= {| l |} ) 3'(= a2◂ [ {| l |}] ) }
	mov rdi,r14
	cmp BYTE [rdi+6],0
	jnz LB_16
	mov rdi,r14
	mov rdi,QWORD [rdi+8+8*0]
	mov r8,rdi
	mov rdi,r14
	mov rdi,QWORD [rdi+8+8*1]
	mov r9,rdi
;; rsp=0 , %150~3'(= a2◂ [ {| l |}] ) %149~2'(= {| l |} ) %147~0'(= r ) 
; _#7 2'(= {| l |} ) ⊢ { 2'(= {| l |} ) 1'(= r ) }
	mov rdi,r8
	mov rdi,QWORD [rdi] 
	mov rsi,0x0000_ffff_ffff_ffff
	and rdi,rsi 
	mov r14,rdi
;; rsp=0 , %152~1'(= r ) %151~2'(= {| l |} ) %150~3'(= a2◂ [ {| l |}] ) %147~0'(= r ) 
; _#11 { 0'(= r ) 1'(= r ) } ⊢ { 0'(= r ) 1'(= r ) }
	add r13,r14
;; rsp=0 , %154~1'(= r ) %153~0'(= r ) %151~2'(= {| l |} ) %150~3'(= a2◂ [ {| l |}] ) 
; rsp_d=0, #56 { 0'(= r ) 3'(= a2◂ [ {| l |}] ) } ⊢ { 0'(= {| l |} ) 3'(= r ) }
	sub rsp,16
	mov QWORD [rsp+8*0],r14
	mov QWORD [rsp+8*1],r8
; .mov_ptn2 { 0'(= r ) 3'(= a2◂ [ {| l |}] ) } ⊢ { 0'(= r ) 1'(= a2◂ [ {| l |}] ) }
; .mov_ptn 3'(= a2◂ [ {| l |}] ) ⊢ 1'(= a2◂ [ {| l |}] )
	mov rax,r9
	mov r14,rax
	call ETR_56

	mov r8,QWORD [rsp-8+8*2]
	mov rax,QWORD [rsp-8+8*1]
	mov r9,r14
	mov r14,rax
	add rsp,16
;; rsp=0 , %156~3'(= r ) %155~0'(= {| l |} ) %154~1'(= r ) %151~2'(= {| l |} ) 
	jmp LB_17
LB_17:
; $ %[ 0r ] ⊢ %[ 0r ]
;; rsp=0 , %157~%[ 0r ] %156~3'(= r ) %155~0'(= {| l |} ) %154~1'(= r ) %151~2'(= {| l |} ) 
	jmp LB_18
LB_18:
; $ 1'(= r ) ⊢ 1'(= r ),4'(= r )
	mov rdi,r14
	mov rax,rdi
	mov r10,rax
;; rsp=0 , %159~4'(= r ) %158~1'(= r ) %157~%[ 0r ] %156~3'(= r ) %155~0'(= {| l |} ) %151~2'(= {| l |} ) 
; _#17 { 1'(= r ) 2'(= {| l |} ) %[ 0r ] 0'(= {| l |} ) 3'(= r ) } ⊢ { 1'(= r ) 2'(= {| l |} ) %[ 0r ] 0'(= {| l |} ) 3'(= r ) }
; _rep_movsb { 1'(= r ) 2'(= {| l |} ) %[ 0r ] 0'(= {| l |} ) 3'(= r ) } ⊢ { 1'(= r ) 2'(= {| l |} ) %[ 0r ] 0'(= {| l |} ) 3'(= r ) }
	mov rax,r14
	mov rsi,r8
	mov rdi,0x0000_ffff_ffff_ffff
	and rdi,[rsi]
	sub rdi,rax
	lea rsi,[rsi+8]
	cmp rdi,0
	jl err
	lea rsi,[rsi+0]
	push rsi 
	mov rsi,r13
	mov rdi,0x0000_ffff_ffff_ffff
	and rdi,[rsi]
	sub rdi,rax
	lea rsi,[rsi+8]
	cmp rdi,r9
	jl err
	add rsi,r9
	mov rdi,rsi 
	pop rsi 
	push rcx 
	mov rcx,rax 
	cld 
	rep movsb
	pop rcx 
;; rsp=0 , %164~3'(= r ) %163~0'(= {| l |} ) %162~%[ 0r ] %161~2'(= {| l |} ) %160~1'(= r ) %159~4'(= r ) 
; ∎ { 0'(= {| l |} ) 3'(= r ) }
; .dlt.ptn %[ 0r ]
; .dlt.ptn 2'(= {| l |} )
	mov rdi,r8
	call free_s8 
; .dlt.ptn 1'(= r )
; .dlt.ptn 4'(= r )
; .mov_ptn2 { 0'(= {| l |} ) 3'(= r ) } ⊢ { 0'(= {| l |} ) 1'(= r ) }
; .mov_ptn 3'(= r ) ⊢ 1'(= r )
	mov rax,r9
	mov r14,rax
	ret
LB_16:
;; ?. 1'(= a2◂ [ {| l |}] ) ⊢ 1(<2)◂{ }
;; rsp=0 , %147~0'(= r ) 
; _#6 0'(= r ) ⊢ { 0'(= r ) 1'(= {| l |} ) }
	mov rdi,r13
	call mlc_s8
	mov r14,rax
;; rsp=0 , %166~1'(= {| l |} ) %165~0'(= r ) 
	jmp LB_19
LB_19:
; $ %[ 0r ] ⊢ %[ 0r ]
;; rsp=0 , %167~%[ 0r ] %166~1'(= {| l |} ) %165~0'(= r ) 
; ∎ { 1'(= {| l |} ) %[ 0r ] }
; .dlt.ptn 0'(= r )
; .mov_ptn2 { 1'(= {| l |} ) %[ 0r ] } ⊢ { 0'(= {| l |} ) 1'(= r ) }
; .mov_ptn 1'(= {| l |} ) ⊢ 0'(= {| l |} )
	mov rax,r14
	mov r13,rax
; .mov_ptn %[ 0r ] ⊢ 1'(= r )
	mov rax,0
	mov r14,rax
	ret
ETR_57: ; s8_of_s8_lst 0'(= a2◂ [ {| l |}] ) ⊢ 0'(= {| l |} ) : (_lst◂_s8→_s8)
;; rsp=0 , %168~0'(= a2◂ [ {| l |}] ) 
	jmp LB_20
LB_20:
; $ %[ 0r ] ⊢ %[ 0r ]
;; rsp=0 , %169~%[ 0r ] %168~0'(= a2◂ [ {| l |}] ) 
; rsp_d=0, #56 { %[ 0r ] 0'(= a2◂ [ {| l |}] ) } ⊢ { 0'(= {| l |} ) 1'(= r ) }
; .mov_ptn2 { %[ 0r ] 0'(= a2◂ [ {| l |}] ) } ⊢ { 0'(= r ) 1'(= a2◂ [ {| l |}] ) }
; .mov_ptn 0'(= a2◂ [ {| l |}] ) ⊢ 1'(= a2◂ [ {| l |}] )
	mov rax,r13
	mov r14,rax
; .mov_ptn %[ 0r ] ⊢ 0'(= r )
	mov rax,0
	mov r13,rax
	call ETR_56

;; rsp=0 , %171~1'(= r ) %170~0'(= {| l |} ) 
; ∎ 0'(= {| l |} )
; .dlt.ptn 1'(= r )
; .mov_ptn2 0'(= {| l |} ) ⊢ 0'(= {| l |} )
	ret
ETR_65:
	mov r9,0x0000_ffff_ffff_ffff
	and r9,[r13]
	call GRM_65
	ret
GRM_65:
	sub rsp,32
	mov QWORD [rsp+24],r13
	mov QWORD [rsp+16],r14 
	mov QWORD [rsp+8],r9
	lea rax,[r14+1]
	cmp rax,r9
	jg LB_24
	jmp LB_25
LB_24:
	mov r8,unt_1
	jmp LB_22
LB_25:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],10
	jnz LB_26
	jmp LB_27
LB_26:
	mov r8,unt_1
	jmp LB_22
LB_27:
	add r14,1
	jmp LB_23
LB_22:
	add rsp,0
	jmp LB_21
LB_23:
	call GRM_65
	cmp BYTE [r8+6],0
	jnz LB_30
	jmp LB_31
LB_30:
	jmp LB_28
LB_31:
	sub rsp,8
	mov r8,[r8+8]
; .mov_ptn2 2'(= a5◂ [ ] ) ⊢ 8'(= a5◂ [ ] )
; .mov_ptn 2'(= a5◂ [ ] ) ⊢ 8'(= a5◂ [ ] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_29
LB_28:
	add rsp,0
	jmp LB_21
LB_29:
	mov QWORD [rsp+8*1],r14
	mov r13,QWORD [rsp+16+8*1]
	mov r14,QWORD [rsp+8*1]
	jmp LB_33
LB_33
;; rsp=1 , %244~1'(= r ) %243~0'(= r ) %242~8'(= a5◂ [ ] ) 
	jmp LB_34
LB_34:
; $ %[ "\\n" ] ⊢ %[ "\\n" ]
;; rsp=1 , %245~%[ "\\n" ] %244~1'(= r ) %243~0'(= r ) %242~8'(= a5◂ [ ] ) 
; rsp_d=0, #38 { %[ "\\n" ] 8'(= a5◂ [ ] ) } ⊢ 2'(= a5◂ [ ] )
	sub rsp,16
	mov QWORD [rsp+8*0],r13
	mov QWORD [rsp+8*1],r14
; .mov_ptn2 { %[ "\\n" ] 8'(= a5◂ [ ] ) } ⊢ { 0'(= {| l |} ) 1'(= a5◂ [ ] ) }
; .mov_ptn 8'(= a5◂ [ ] ) ⊢ 1'(= a5◂ [ ] )
	mov rax,QWORD [rsp-8+8*3]
	mov r14,rax
; .mov_ptn %[ "\\n" ] ⊢ 0'(= {| l |} )
	mov rsi,1  
	mov rdi,16
	xor rax,rax 
	C_CALL_SF calloc
	mov QWORD [rax],2
	mov BYTE [rax+8+0],92
	mov BYTE [rax+8+1],110
	mov r13,rax
	call ETR_38

	mov r14,QWORD [rsp-8+8*2]
	mov rax,QWORD [rsp-8+8*1]
	mov r8,r13
	mov r13,rax
	add rsp,24
;; rsp=0 , %246~2'(= a5◂ [ ] ) %244~1'(= r ) %243~0'(= r ) 
; #22 2'(= a5◂ [ ] ) ⊢ 0(<2)◂2'(= a5◂ [ ] )
;; rsp=0 , %247~0(<2)◂2'(= a5◂ [ ] ) %244~1'(= r ) %243~0'(= r ) 
; ∎ 0(<2)◂2'(= a5◂ [ ] )
; .dlt.ptn 1'(= r )
; .dlt.ptn 0'(= r )
; .mov_ptn2 0(<2)◂2'(= a5◂ [ ] ) ⊢ 2'(= a3◂ [ a5◂ [ ]] )
	mov r13,r8
; .mov_ptn 0(<2)◂0'(= a5◂ [ ] ) ⊢ 2'(= a3◂ [ a5◂ [ ]] )
	mov rax,r13
	mov rdi,rax
	mov rax,r15
	mov r15,QWORD [r15] 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	jmp LB_32
LB_32:
	cmp BYTE [r8+6],0
	jnz LB_21
	pop r14
	pop r9
	add rsp,8
	pop r13
	ret
LB_21:
	mov r9,QWORD [rsp+8]
	mov r14,QWORD [rsp+16]
	mov r13,QWORD [rsp+24]
	lea rax,[r14+1]
	cmp rax,r9
	jg LB_38
	jmp LB_39
LB_38:
	mov r8,unt_1
	jmp LB_36
LB_39:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],9
	jnz LB_40
	jmp LB_41
LB_40:
	mov r8,unt_1
	jmp LB_36
LB_41:
	add r14,1
	jmp LB_37
LB_36:
	add rsp,0
	jmp LB_35
LB_37:
	call GRM_65
	cmp BYTE [r8+6],0
	jnz LB_44
	jmp LB_45
LB_44:
	jmp LB_42
LB_45:
	sub rsp,8
	mov r8,[r8+8]
; .mov_ptn2 2'(= a5◂ [ ] ) ⊢ 8'(= a5◂ [ ] )
; .mov_ptn 2'(= a5◂ [ ] ) ⊢ 8'(= a5◂ [ ] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_43
LB_42:
	add rsp,0
	jmp LB_35
LB_43:
	mov QWORD [rsp+8*1],r14
	mov r13,QWORD [rsp+16+8*1]
	mov r14,QWORD [rsp+8*1]
	jmp LB_47
LB_47
;; rsp=1 , %250~1'(= r ) %249~0'(= r ) %248~8'(= a5◂ [ ] ) 
	jmp LB_48
LB_48:
; $ %[ "\\t" ] ⊢ %[ "\\t" ]
;; rsp=1 , %251~%[ "\\t" ] %250~1'(= r ) %249~0'(= r ) %248~8'(= a5◂ [ ] ) 
; rsp_d=0, #38 { %[ "\\t" ] 8'(= a5◂ [ ] ) } ⊢ 2'(= a5◂ [ ] )
	sub rsp,16
	mov QWORD [rsp+8*0],r13
	mov QWORD [rsp+8*1],r14
; .mov_ptn2 { %[ "\\t" ] 8'(= a5◂ [ ] ) } ⊢ { 0'(= {| l |} ) 1'(= a5◂ [ ] ) }
; .mov_ptn 8'(= a5◂ [ ] ) ⊢ 1'(= a5◂ [ ] )
	mov rax,QWORD [rsp-8+8*3]
	mov r14,rax
; .mov_ptn %[ "\\t" ] ⊢ 0'(= {| l |} )
	mov rsi,1  
	mov rdi,16
	xor rax,rax 
	C_CALL_SF calloc
	mov QWORD [rax],2
	mov BYTE [rax+8+0],92
	mov BYTE [rax+8+1],116
	mov r13,rax
	call ETR_38

	mov r14,QWORD [rsp-8+8*2]
	mov rax,QWORD [rsp-8+8*1]
	mov r8,r13
	mov r13,rax
	add rsp,24
;; rsp=0 , %252~2'(= a5◂ [ ] ) %250~1'(= r ) %249~0'(= r ) 
; #22 2'(= a5◂ [ ] ) ⊢ 0(<2)◂2'(= a5◂ [ ] )
;; rsp=0 , %253~0(<2)◂2'(= a5◂ [ ] ) %250~1'(= r ) %249~0'(= r ) 
; ∎ 0(<2)◂2'(= a5◂ [ ] )
; .dlt.ptn 1'(= r )
; .dlt.ptn 0'(= r )
; .mov_ptn2 0(<2)◂2'(= a5◂ [ ] ) ⊢ 2'(= a3◂ [ a5◂ [ ]] )
	mov r13,r8
; .mov_ptn 0(<2)◂0'(= a5◂ [ ] ) ⊢ 2'(= a3◂ [ a5◂ [ ]] )
	mov rax,r13
	mov rdi,rax
	mov rax,r15
	mov r15,QWORD [r15] 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	jmp LB_46
LB_46:
	cmp BYTE [r8+6],0
	jnz LB_35
	pop r14
	pop r9
	add rsp,8
	pop r13
	ret
LB_35:
	mov r9,QWORD [rsp+8]
	mov r14,QWORD [rsp+16]
	mov r13,QWORD [rsp+24]
	lea rax,[r14+1]
	cmp rax,r9
	jg LB_52
	jmp LB_53
LB_52:
	mov r8,unt_1
	jmp LB_50
LB_53:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],92
	jnz LB_54
	jmp LB_55
LB_54:
	mov r8,unt_1
	jmp LB_50
LB_55:
	add r14,1
	jmp LB_51
LB_50:
	add rsp,0
	jmp LB_49
LB_51:
	call GRM_65
	cmp BYTE [r8+6],0
	jnz LB_58
	jmp LB_59
LB_58:
	jmp LB_56
LB_59:
	sub rsp,8
	mov r8,[r8+8]
; .mov_ptn2 2'(= a5◂ [ ] ) ⊢ 8'(= a5◂ [ ] )
; .mov_ptn 2'(= a5◂ [ ] ) ⊢ 8'(= a5◂ [ ] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_57
LB_56:
	add rsp,0
	jmp LB_49
LB_57:
	mov QWORD [rsp+8*1],r14
	mov r13,QWORD [rsp+16+8*1]
	mov r14,QWORD [rsp+8*1]
	jmp LB_61
LB_61
;; rsp=1 , %256~1'(= r ) %255~0'(= r ) %254~8'(= a5◂ [ ] ) 
	jmp LB_62
LB_62:
; $ %[ "\\\\" ] ⊢ %[ "\\\\" ]
;; rsp=1 , %257~%[ "\\\\" ] %256~1'(= r ) %255~0'(= r ) %254~8'(= a5◂ [ ] ) 
; rsp_d=0, #38 { %[ "\\\\" ] 8'(= a5◂ [ ] ) } ⊢ 2'(= a5◂ [ ] )
	sub rsp,16
	mov QWORD [rsp+8*0],r13
	mov QWORD [rsp+8*1],r14
; .mov_ptn2 { %[ "\\\\" ] 8'(= a5◂ [ ] ) } ⊢ { 0'(= {| l |} ) 1'(= a5◂ [ ] ) }
; .mov_ptn 8'(= a5◂ [ ] ) ⊢ 1'(= a5◂ [ ] )
	mov rax,QWORD [rsp-8+8*3]
	mov r14,rax
; .mov_ptn %[ "\\\\" ] ⊢ 0'(= {| l |} )
	mov rsi,1  
	mov rdi,16
	xor rax,rax 
	C_CALL_SF calloc
	mov QWORD [rax],2
	mov BYTE [rax+8+0],92
	mov BYTE [rax+8+1],92
	mov r13,rax
	call ETR_38

	mov r14,QWORD [rsp-8+8*2]
	mov rax,QWORD [rsp-8+8*1]
	mov r8,r13
	mov r13,rax
	add rsp,24
;; rsp=0 , %258~2'(= a5◂ [ ] ) %256~1'(= r ) %255~0'(= r ) 
; #22 2'(= a5◂ [ ] ) ⊢ 0(<2)◂2'(= a5◂ [ ] )
;; rsp=0 , %259~0(<2)◂2'(= a5◂ [ ] ) %256~1'(= r ) %255~0'(= r ) 
; ∎ 0(<2)◂2'(= a5◂ [ ] )
; .dlt.ptn 1'(= r )
; .dlt.ptn 0'(= r )
; .mov_ptn2 0(<2)◂2'(= a5◂ [ ] ) ⊢ 2'(= a3◂ [ a5◂ [ ]] )
	mov r13,r8
; .mov_ptn 0(<2)◂0'(= a5◂ [ ] ) ⊢ 2'(= a3◂ [ a5◂ [ ]] )
	mov rax,r13
	mov rdi,rax
	mov rax,r15
	mov r15,QWORD [r15] 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	jmp LB_60
LB_60:
	cmp BYTE [r8+6],0
	jnz LB_49
	pop r14
	pop r9
	add rsp,8
	pop r13
	ret
LB_49:
	mov r9,QWORD [rsp+8]
	mov r14,QWORD [rsp+16]
	mov r13,QWORD [rsp+24]
	lea rax,[r14+1]
	cmp rax,r9
	jg LB_66
	jmp LB_67
LB_66:
	mov r8,unt_1
	jmp LB_64
LB_67:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],34
	jnz LB_68
	jmp LB_69
LB_68:
	mov r8,unt_1
	jmp LB_64
LB_69:
	add r14,1
	jmp LB_65
LB_64:
	add rsp,0
	jmp LB_63
LB_65:
	call GRM_65
	cmp BYTE [r8+6],0
	jnz LB_72
	jmp LB_73
LB_72:
	jmp LB_70
LB_73:
	sub rsp,8
	mov r8,[r8+8]
; .mov_ptn2 2'(= a5◂ [ ] ) ⊢ 8'(= a5◂ [ ] )
; .mov_ptn 2'(= a5◂ [ ] ) ⊢ 8'(= a5◂ [ ] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_71
LB_70:
	add rsp,0
	jmp LB_63
LB_71:
	mov QWORD [rsp+8*1],r14
	mov r13,QWORD [rsp+16+8*1]
	mov r14,QWORD [rsp+8*1]
	jmp LB_75
LB_75
;; rsp=1 , %262~1'(= r ) %261~0'(= r ) %260~8'(= a5◂ [ ] ) 
	jmp LB_76
LB_76:
; $ %[ "\\\"" ] ⊢ %[ "\\\"" ]
;; rsp=1 , %263~%[ "\\\"" ] %262~1'(= r ) %261~0'(= r ) %260~8'(= a5◂ [ ] ) 
; rsp_d=0, #38 { %[ "\\\"" ] 8'(= a5◂ [ ] ) } ⊢ 2'(= a5◂ [ ] )
	sub rsp,16
	mov QWORD [rsp+8*0],r13
	mov QWORD [rsp+8*1],r14
; .mov_ptn2 { %[ "\\\"" ] 8'(= a5◂ [ ] ) } ⊢ { 0'(= {| l |} ) 1'(= a5◂ [ ] ) }
; .mov_ptn 8'(= a5◂ [ ] ) ⊢ 1'(= a5◂ [ ] )
	mov rax,QWORD [rsp-8+8*3]
	mov r14,rax
; .mov_ptn %[ "\\\"" ] ⊢ 0'(= {| l |} )
	mov rsi,1  
	mov rdi,16
	xor rax,rax 
	C_CALL_SF calloc
	mov QWORD [rax],2
	mov BYTE [rax+8+0],92
	mov BYTE [rax+8+1],34
	mov r13,rax
	call ETR_38

	mov r14,QWORD [rsp-8+8*2]
	mov rax,QWORD [rsp-8+8*1]
	mov r8,r13
	mov r13,rax
	add rsp,24
;; rsp=0 , %264~2'(= a5◂ [ ] ) %262~1'(= r ) %261~0'(= r ) 
; #22 2'(= a5◂ [ ] ) ⊢ 0(<2)◂2'(= a5◂ [ ] )
;; rsp=0 , %265~0(<2)◂2'(= a5◂ [ ] ) %262~1'(= r ) %261~0'(= r ) 
; ∎ 0(<2)◂2'(= a5◂ [ ] )
; .dlt.ptn 1'(= r )
; .dlt.ptn 0'(= r )
; .mov_ptn2 0(<2)◂2'(= a5◂ [ ] ) ⊢ 2'(= a3◂ [ a5◂ [ ]] )
	mov r13,r8
; .mov_ptn 0(<2)◂0'(= a5◂ [ ] ) ⊢ 2'(= a3◂ [ a5◂ [ ]] )
	mov rax,r13
	mov rdi,rax
	mov rax,r15
	mov r15,QWORD [r15] 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	jmp LB_74
LB_74:
	cmp BYTE [r8+6],0
	jnz LB_63
	pop r14
	pop r9
	add rsp,8
	pop r13
	ret
LB_63:
	mov r9,QWORD [rsp+8]
	mov r14,QWORD [rsp+16]
	mov r13,QWORD [rsp+24]
	cmp r14,r9
	jge LB_80
	jmp LB_81
LB_80:
	mov r8,unt_1 
	jmp LB_78
LB_81:
	movzx rdi,BYTE [r13+8+r14]
	push rdi 
	add r14,1 
	jmp LB_79
LB_78:
	add rsp,0
	jmp LB_77
LB_79:
	call GRM_65
	cmp BYTE [r8+6],0
	jnz LB_84
	jmp LB_85
LB_84:
	jmp LB_82
LB_85:
	sub rsp,8
	mov r8,[r8+8]
; .mov_ptn2 2'(= a5◂ [ ] ) ⊢ 9'(= a5◂ [ ] )
; .mov_ptn 2'(= a5◂ [ ] ) ⊢ 9'(= a5◂ [ ] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_83
LB_82:
	add rsp,8
	jmp LB_77
LB_83:
	mov QWORD [rsp+8*2],r14
	mov r13,QWORD [rsp+16+8*2]
	mov r14,QWORD [rsp+8*2]
	jmp LB_87
LB_87
;; rsp=2 , %269~1'(= r ) %268~0'(= r ) %267~9'(= a5◂ [ ] ) %266~8'(= r ) 
	mov rdi,0
	cmp QWORD [rsp-8+8*2],rdi
	jnz LB_88
;; rsp=2 , %269~1'(= r ) %268~0'(= r ) %267~9'(= a5◂ [ ] ) %266~8'(= r ) 
	jmp LB_89
LB_89:
; $ %[ "\\0" ] ⊢ %[ "\\0" ]
;; rsp=2 , %270~%[ "\\0" ] %269~1'(= r ) %268~0'(= r ) %267~9'(= a5◂ [ ] ) %266~8'(= r ) 
; rsp_d=0, #38 { %[ "\\0" ] 9'(= a5◂ [ ] ) } ⊢ 2'(= a5◂ [ ] )
	sub rsp,16
	mov QWORD [rsp+8*0],r13
	mov QWORD [rsp+8*1],r14
; .mov_ptn2 { %[ "\\0" ] 9'(= a5◂ [ ] ) } ⊢ { 0'(= {| l |} ) 1'(= a5◂ [ ] ) }
; .mov_ptn 9'(= a5◂ [ ] ) ⊢ 1'(= a5◂ [ ] )
	mov rax,QWORD [rsp-8+8*3]
	mov r14,rax
; .mov_ptn %[ "\\0" ] ⊢ 0'(= {| l |} )
	mov rsi,1  
	mov rdi,16
	xor rax,rax 
	C_CALL_SF calloc
	mov QWORD [rax],2
	mov BYTE [rax+8+0],92
	mov BYTE [rax+8+1],48
	mov r13,rax
	call ETR_38

	mov r14,QWORD [rsp-8+8*2]
	mov rax,QWORD [rsp-8+8*1]
	mov r8,r13
	mov r13,rax
	add rsp,24
;; rsp=1 , %271~2'(= a5◂ [ ] ) %269~1'(= r ) %268~0'(= r ) %266~8'(= r ) 
; #22 2'(= a5◂ [ ] ) ⊢ 0(<2)◂2'(= a5◂ [ ] )
;; rsp=1 , %272~0(<2)◂2'(= a5◂ [ ] ) %269~1'(= r ) %268~0'(= r ) %266~8'(= r ) 
; ∎ 0(<2)◂2'(= a5◂ [ ] )
; .dlt.ptn 1'(= r )
; .dlt.ptn 0'(= r )
; .dlt.ptn 8'(= r )
; .mov_ptn2 0(<2)◂2'(= a5◂ [ ] ) ⊢ 2'(= a3◂ [ a5◂ [ ]] )
	mov r13,r8
; .mov_ptn 0(<2)◂0'(= a5◂ [ ] ) ⊢ 2'(= a3◂ [ a5◂ [ ]] )
	mov rax,r13
	mov rdi,rax
	mov rax,r15
	mov r15,QWORD [r15] 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,8
	jmp LB_86
LB_88:
;; rsp=2 , %269~1'(= r ) %268~0'(= r ) %267~9'(= a5◂ [ ] ) %266~8'(= r ) 
; rsp_d=0, #40 { 8'(= r ) 9'(= a5◂ [ ] ) } ⊢ 2'(= a5◂ [ ] )
	sub rsp,16
	mov QWORD [rsp+8*0],r13
	mov QWORD [rsp+8*1],r14
; .mov_ptn2 { 8'(= r ) 9'(= a5◂ [ ] ) } ⊢ { 0'(= r ) 1'(= a5◂ [ ] ) }
; .mov_ptn 9'(= a5◂ [ ] ) ⊢ 1'(= a5◂ [ ] )
	mov rax,QWORD [rsp-8+8*3]
	mov r14,rax
; .mov_ptn 8'(= r ) ⊢ 0'(= r )
	mov rax,QWORD [rsp-8+8*4]
	mov r13,rax
	call ETR_40

	mov r14,QWORD [rsp-8+8*2]
	mov rax,QWORD [rsp-8+8*1]
	mov r8,r13
	mov r13,rax
	add rsp,32
;; rsp=0 , %273~2'(= a5◂ [ ] ) %269~1'(= r ) %268~0'(= r ) 
; #22 2'(= a5◂ [ ] ) ⊢ 0(<2)◂2'(= a5◂ [ ] )
;; rsp=0 , %274~0(<2)◂2'(= a5◂ [ ] ) %269~1'(= r ) %268~0'(= r ) 
; ∎ 0(<2)◂2'(= a5◂ [ ] )
; .dlt.ptn 1'(= r )
; .dlt.ptn 0'(= r )
; .mov_ptn2 0(<2)◂2'(= a5◂ [ ] ) ⊢ 2'(= a3◂ [ a5◂ [ ]] )
	mov r13,r8
; .mov_ptn 0(<2)◂0'(= a5◂ [ ] ) ⊢ 2'(= a3◂ [ a5◂ [ ]] )
	mov rax,r13
	mov rdi,rax
	mov rax,r15
	mov r15,QWORD [r15] 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	jmp LB_86
LB_86:
	cmp BYTE [r8+6],0
	jnz LB_77
	pop r14
	pop r9
	add rsp,8
	pop r13
	ret
LB_77:
	mov r9,QWORD [rsp+8]
	mov r14,QWORD [rsp+16]
	mov r13,QWORD [rsp+24]
	mov QWORD [rsp+8*0],r14
	mov r13,QWORD [rsp+16+8*0]
	mov r14,QWORD [rsp+8*0]
	jmp LB_92
LB_92
;; rsp=0 , %276~1'(= r ) %275~0'(= r ) 
; #32 { } ⊢ 2(<4)◂{ }
;; rsp=0 , %277~2(<4)◂{ } %276~1'(= r ) %275~0'(= r ) 
; #22 2(<4)◂{ } ⊢ 0(<2)◂2(<4)◂{ }
;; rsp=0 , %278~0(<2)◂2(<4)◂{ } %276~1'(= r ) %275~0'(= r ) 
; ∎ 0(<2)◂2(<4)◂{ }
; .dlt.ptn 1'(= r )
; .dlt.ptn 0'(= r )
; .mov_ptn2 0(<2)◂2(<4)◂{ } ⊢ 2'(= a3◂ [ a5◂ [ ]] )
; .mov_ptn 0(<2)◂2(<4)◂{ } ⊢ 2'(= a3◂ [ a5◂ [ ]] )
	mov rax,unt 
	mov rax,unt_2
	mov rdi,rax
	mov rax,r15
	mov r15,QWORD [r15] 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	jmp LB_91
LB_91:
	cmp BYTE [r8+6],0
	jnz LB_90
	pop r14
	pop r9
	add rsp,8
	pop r13
	ret
LB_90:
	pop rdi
	pop r9 
	pop r14
	pop r13
	ret
ETR_66: ; mk_esc_s8 0'(= {| l |} ) ⊢ { 0'(= {| l |} ) 1'(= {| l |} ) } : (_s8→{ _s8 _s8 })
;; rsp=0 , %279~0'(= {| l |} ) 
	jmp LB_93
LB_93:
; $ %[ 0r ] ⊢ %[ 0r ]
;; rsp=0 , %280~%[ 0r ] %279~0'(= {| l |} ) 
; rsp_d=0, #65 { 0'(= {| l |} ) %[ 0r ] } ⊢ { 0'(= {| l |} ) 1'(= r ) 2'(= a3◂ [ a5◂ [ ]] ) }
; .mov_ptn2 { 0'(= {| l |} ) %[ 0r ] } ⊢ { 0'(= {| l |} ) 1'(= r ) }
; .mov_ptn %[ 0r ] ⊢ 1'(= r )
	mov rax,0
	mov r14,rax
	call ETR_65

;; rsp=0 , %283~2'(= a3◂ [ a5◂ [ ]] ) %282~1'(= r ) %281~0'(= {| l |} ) 
;; ?; 2'(= a3◂ [ a5◂ [ ]] ) ⊢ 0(<2)◂3'(= a5◂ [ ] )
	mov rdi,r8
	cmp BYTE [rdi+6],0
	jnz LB_94
	mov rax,QWORD [rdi+8]
	mov r9,rax
;; rsp=0 , %284~3'(= a5◂ [ ] ) %282~1'(= r ) %281~0'(= {| l |} ) 
; rsp_d=0, #43 3'(= a5◂ [ ] ) ⊢ { 3'(= a5◂ [ ] ) 2'(= {| l |} ) }
	sub rsp,16
	mov QWORD [rsp+8*0],r13
	mov QWORD [rsp+8*1],r14
; .mov_ptn2 3'(= a5◂ [ ] ) ⊢ 0'(= a5◂ [ ] )
; .mov_ptn 3'(= a5◂ [ ] ) ⊢ 0'(= a5◂ [ ] )
	mov rax,r9
	mov r13,rax
	call ETR_43

	mov rax,QWORD [rsp-8+8*2]
	mov r8,r14
	mov r14,rax
	mov rax,QWORD [rsp-8+8*1]
	mov r9,r13
	mov r13,rax
	add rsp,16
;; rsp=0 , %286~2'(= {| l |} ) %285~3'(= a5◂ [ ] ) %282~1'(= r ) %281~0'(= {| l |} ) 
; ∎ { 0'(= {| l |} ) 2'(= {| l |} ) }
; .dlt.ptn 3'(= a5◂ [ ] )
;	.dlt adt ⊢ _  
; .dlt.ptn 1'(= r )
; .mov_ptn2 { 0'(= {| l |} ) 2'(= {| l |} ) } ⊢ { 0'(= {| l |} ) 1'(= {| l |} ) }
; .mov_ptn 2'(= {| l |} ) ⊢ 1'(= {| l |} )
	mov rax,r8
	mov r14,rax
	ret
LB_94:
;; rsp=0 , %283~2'(= a3◂ [ a5◂ [ ]] ) %282~1'(= r ) %281~0'(= {| l |} ) 
	jmp LB_95
LB_95:
; $ %[ "esc_stg_ltr" ] ⊢ %[ "esc_stg_ltr" ]
;; rsp=0 , %287~%[ "esc_stg_ltr" ] %283~2'(= a3◂ [ a5◂ [ ]] ) %282~1'(= r ) %281~0'(= {| l |} ) 
; _#8 %[ "esc_stg_ltr" ] ⊢ %[ "esc_stg_ltr" ]
	mov rdi,fmt_emt
	call emt_stg
	mov rdi,LB_96
	call emt_stg 
	mov rdi,fmt_nl
	call emt_stg
	jmp LB_97
LB_97:
;; rsp=0 , %288~%[ "esc_stg_ltr" ] %283~2'(= a3◂ [ a5◂ [ ]] ) %282~1'(= r ) %281~0'(= {| l |} ) 
	mov rdi,LB_98
	call emt_stg 
	jmp err
ETR_67:
	mov r9,0x0000_ffff_ffff_ffff
	and r9,[r13]
	call GRM_67
	ret
GRM_67:
	sub rsp,32
	mov QWORD [rsp+24],r13
	mov QWORD [rsp+16],r14 
	mov QWORD [rsp+8],r9
	lea rax,[r14+1]
	cmp rax,r9
	jg LB_102
	jmp LB_103
LB_102:
	mov r8,unt_1
	jmp LB_100
LB_103:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],34
	jnz LB_104
	jmp LB_105
LB_104:
	mov r8,unt_1
	jmp LB_100
LB_105:
	add r14,1
	jmp LB_101
LB_100:
	add rsp,0
	jmp LB_99
LB_101:
	call GRM_68
	cmp BYTE [r8+6],0
	jnz LB_108
	jmp LB_109
LB_108:
	jmp LB_106
LB_109:
	sub rsp,8
	mov r8,[r8+8]
; .mov_ptn2 2'(= a5◂ [ ] ) ⊢ 8'(= a5◂ [ ] )
; .mov_ptn 2'(= a5◂ [ ] ) ⊢ 8'(= a5◂ [ ] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_107
LB_106:
	add rsp,0
	jmp LB_99
LB_107:
	mov QWORD [rsp+8*1],r14
	mov r13,QWORD [rsp+16+8*1]
	mov r14,QWORD [rsp+8*1]
	jmp LB_111
LB_111
;; rsp=1 , %291~1'(= r ) %290~0'(= r ) %289~8'(= a5◂ [ ] ) 
; rsp_d=0, #43 8'(= a5◂ [ ] ) ⊢ { 3'(= a5◂ [ ] ) 2'(= {| l |} ) }
	sub rsp,16
	mov QWORD [rsp+8*0],r13
	mov QWORD [rsp+8*1],r14
; .mov_ptn2 8'(= a5◂ [ ] ) ⊢ 0'(= a5◂ [ ] )
; .mov_ptn 8'(= a5◂ [ ] ) ⊢ 0'(= a5◂ [ ] )
	mov rax,QWORD [rsp-8+8*3]
	mov r13,rax
	call ETR_43

	mov rax,QWORD [rsp-8+8*2]
	mov r8,r14
	mov r14,rax
	mov rax,QWORD [rsp-8+8*1]
	mov r9,r13
	mov r13,rax
	add rsp,24
;; rsp=0 , %293~2'(= {| l |} ) %292~3'(= a5◂ [ ] ) %291~1'(= r ) %290~0'(= r ) 
; #22 2'(= {| l |} ) ⊢ 0(<2)◂2'(= {| l |} )
;; rsp=0 , %294~0(<2)◂2'(= {| l |} ) %292~3'(= a5◂ [ ] ) %291~1'(= r ) %290~0'(= r ) 
; ∎ 0(<2)◂2'(= {| l |} )
; .dlt.ptn 3'(= a5◂ [ ] )
;	.dlt adt ⊢ _  
; .dlt.ptn 1'(= r )
; .dlt.ptn 0'(= r )
; .mov_ptn2 0(<2)◂2'(= {| l |} ) ⊢ 2'(= a3◂ [ {| l |}] )
	mov r13,r8
; .mov_ptn 0(<2)◂0'(= {| l |} ) ⊢ 2'(= a3◂ [ {| l |}] )
	mov rax,r13
	mov BYTE [rax+6],0
	mov r8,rax
	jmp LB_110
LB_110:
	cmp BYTE [r8+6],0
	jnz LB_99
	pop r14
	pop r9
	add rsp,8
	pop r13
	ret
LB_99:
	pop rdi
	pop r9 
	pop r14
	pop r13
	ret
ETR_68:
	mov r9,0x0000_ffff_ffff_ffff
	and r9,[r13]
	call GRM_68
	ret
GRM_68:
	sub rsp,32
	mov QWORD [rsp+24],r13
	mov QWORD [rsp+16],r14 
	mov QWORD [rsp+8],r9
	lea rax,[r14+1]
	cmp rax,r9
	jg LB_115
	jmp LB_116
LB_115:
	mov r8,unt_1
	jmp LB_113
LB_116:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],10
	jnz LB_117
	jmp LB_118
LB_117:
	mov r8,unt_1
	jmp LB_113
LB_118:
	add r14,1
	jmp LB_114
LB_113:
	add rsp,0
	jmp LB_112
LB_114:
	mov QWORD [rsp+8*0],r14
	mov r13,QWORD [rsp+16+8*0]
	mov r14,QWORD [rsp+8*0]
	jmp LB_120
LB_120
;; rsp=0 , %297~1'(= r ) %296~0'(= r ) %295~{ } 
; #23 { } ⊢ 1(<2)◂{ }
;; rsp=0 , %298~1(<2)◂{ } %297~1'(= r ) %296~0'(= r ) %295~{ } 
; ∎ 1(<2)◂{ }
; .dlt.ptn 1'(= r )
; .dlt.ptn 0'(= r )
; .dlt.ptn { }
; .mov_ptn2 1(<2)◂{ } ⊢ 2'(= a3◂ [ a5◂ [ ]] )
; .mov_ptn 1(<2)◂{ } ⊢ 2'(= a3◂ [ a5◂ [ ]] )
	mov rax,unt 
	mov rax,unt_1
	mov r8,rax
	jmp LB_119
LB_119:
	cmp BYTE [r8+6],0
	jnz LB_112
	pop r14
	pop r9
	add rsp,8
	pop r13
	ret
LB_112:
	mov r9,QWORD [rsp+8]
	mov r14,QWORD [rsp+16]
	mov r13,QWORD [rsp+24]
	lea rax,[r14+1]
	cmp rax,r9
	jg LB_124
	jmp LB_125
LB_124:
	mov r8,unt_1
	jmp LB_122
LB_125:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],92
	jnz LB_126
	jmp LB_127
LB_126:
	mov r8,unt_1
	jmp LB_122
LB_127:
	add r14,1
	jmp LB_123
LB_122:
	add rsp,0
	jmp LB_121
LB_123:
	call GRM_69
	cmp BYTE [r8+6],0
	jnz LB_130
	jmp LB_131
LB_130:
	jmp LB_128
LB_131:
	sub rsp,8
	mov r8,[r8+8]
; .mov_ptn2 2'(= r ) ⊢ 8'(= r )
; .mov_ptn 2'(= r ) ⊢ 8'(= r )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_129
LB_128:
	add rsp,0
	jmp LB_121
LB_129:
	call GRM_68
	cmp BYTE [r8+6],0
	jnz LB_134
	jmp LB_135
LB_134:
	jmp LB_132
LB_135:
	sub rsp,8
	mov r8,[r8+8]
; .mov_ptn2 2'(= a5◂ [ ] ) ⊢ 9'(= a5◂ [ ] )
; .mov_ptn 2'(= a5◂ [ ] ) ⊢ 9'(= a5◂ [ ] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_133
LB_132:
	add rsp,8
	jmp LB_121
LB_133:
	mov QWORD [rsp+8*2],r14
	mov r13,QWORD [rsp+16+8*2]
	mov r14,QWORD [rsp+8*2]
	jmp LB_137
LB_137
;; rsp=2 , %302~1'(= r ) %301~0'(= r ) %300~9'(= a5◂ [ ] ) %299~8'(= r ) 
; rsp_d=0, #40 { 8'(= r ) 9'(= a5◂ [ ] ) } ⊢ 2'(= a5◂ [ ] )
	sub rsp,16
	mov QWORD [rsp+8*0],r13
	mov QWORD [rsp+8*1],r14
; .mov_ptn2 { 8'(= r ) 9'(= a5◂ [ ] ) } ⊢ { 0'(= r ) 1'(= a5◂ [ ] ) }
; .mov_ptn 9'(= a5◂ [ ] ) ⊢ 1'(= a5◂ [ ] )
	mov rax,QWORD [rsp-8+8*3]
	mov r14,rax
; .mov_ptn 8'(= r ) ⊢ 0'(= r )
	mov rax,QWORD [rsp-8+8*4]
	mov r13,rax
	call ETR_40

	mov r14,QWORD [rsp-8+8*2]
	mov rax,QWORD [rsp-8+8*1]
	mov r8,r13
	mov r13,rax
	add rsp,32
;; rsp=0 , %303~2'(= a5◂ [ ] ) %302~1'(= r ) %301~0'(= r ) 
; #22 2'(= a5◂ [ ] ) ⊢ 0(<2)◂2'(= a5◂ [ ] )
;; rsp=0 , %304~0(<2)◂2'(= a5◂ [ ] ) %302~1'(= r ) %301~0'(= r ) 
; ∎ 0(<2)◂2'(= a5◂ [ ] )
; .dlt.ptn 1'(= r )
; .dlt.ptn 0'(= r )
; .mov_ptn2 0(<2)◂2'(= a5◂ [ ] ) ⊢ 2'(= a3◂ [ a5◂ [ ]] )
	mov r13,r8
; .mov_ptn 0(<2)◂0'(= a5◂ [ ] ) ⊢ 2'(= a3◂ [ a5◂ [ ]] )
	mov rax,r13
	mov rdi,rax
	mov rax,r15
	mov r15,QWORD [r15] 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	jmp LB_136
LB_136:
	cmp BYTE [r8+6],0
	jnz LB_121
	pop r14
	pop r9
	add rsp,8
	pop r13
	ret
LB_121:
	mov r9,QWORD [rsp+8]
	mov r14,QWORD [rsp+16]
	mov r13,QWORD [rsp+24]
	lea rax,[r14+1]
	cmp rax,r9
	jg LB_141
	jmp LB_142
LB_141:
	mov r8,unt_1
	jmp LB_139
LB_142:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],34
	jnz LB_143
	jmp LB_144
LB_143:
	mov r8,unt_1
	jmp LB_139
LB_144:
	add r14,1
	jmp LB_140
LB_139:
	add rsp,0
	jmp LB_138
LB_140:
	mov QWORD [rsp+8*0],r14
	mov r13,QWORD [rsp+16+8*0]
	mov r14,QWORD [rsp+8*0]
	jmp LB_146
LB_146
;; rsp=0 , %306~1'(= r ) %305~0'(= r ) 
; #32 { } ⊢ 2(<4)◂{ }
;; rsp=0 , %307~2(<4)◂{ } %306~1'(= r ) %305~0'(= r ) 
; #22 2(<4)◂{ } ⊢ 0(<2)◂2(<4)◂{ }
;; rsp=0 , %308~0(<2)◂2(<4)◂{ } %306~1'(= r ) %305~0'(= r ) 
; ∎ 0(<2)◂2(<4)◂{ }
; .dlt.ptn 1'(= r )
; .dlt.ptn 0'(= r )
; .mov_ptn2 0(<2)◂2(<4)◂{ } ⊢ 2'(= a3◂ [ a5◂ [ ]] )
; .mov_ptn 0(<2)◂2(<4)◂{ } ⊢ 2'(= a3◂ [ a5◂ [ ]] )
	mov rax,unt 
	mov rax,unt_2
	mov rdi,rax
	mov rax,r15
	mov r15,QWORD [r15] 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	jmp LB_145
LB_145:
	cmp BYTE [r8+6],0
	jnz LB_138
	pop r14
	pop r9
	add rsp,8
	pop r13
	ret
LB_138:
	mov r9,QWORD [rsp+8]
	mov r14,QWORD [rsp+16]
	mov r13,QWORD [rsp+24]
	cmp r14,r9
	jge LB_150
	jmp LB_151
LB_150:
	mov r8,unt_1 
	jmp LB_148
LB_151:
	movzx rdi,BYTE [r13+8+r14]
	push rdi 
	add r14,1 
	jmp LB_149
LB_148:
	add rsp,0
	jmp LB_147
LB_149:
	call GRM_68
	cmp BYTE [r8+6],0
	jnz LB_154
	jmp LB_155
LB_154:
	jmp LB_152
LB_155:
	sub rsp,8
	mov r8,[r8+8]
; .mov_ptn2 2'(= a5◂ [ ] ) ⊢ 9'(= a5◂ [ ] )
; .mov_ptn 2'(= a5◂ [ ] ) ⊢ 9'(= a5◂ [ ] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_153
LB_152:
	add rsp,8
	jmp LB_147
LB_153:
	mov QWORD [rsp+8*2],r14
	mov r13,QWORD [rsp+16+8*2]
	mov r14,QWORD [rsp+8*2]
	jmp LB_157
LB_157
;; rsp=2 , %312~1'(= r ) %311~0'(= r ) %310~9'(= a5◂ [ ] ) %309~8'(= r ) 
; rsp_d=0, #40 { 8'(= r ) 9'(= a5◂ [ ] ) } ⊢ 2'(= a5◂ [ ] )
	sub rsp,16
	mov QWORD [rsp+8*0],r13
	mov QWORD [rsp+8*1],r14
; .mov_ptn2 { 8'(= r ) 9'(= a5◂ [ ] ) } ⊢ { 0'(= r ) 1'(= a5◂ [ ] ) }
; .mov_ptn 9'(= a5◂ [ ] ) ⊢ 1'(= a5◂ [ ] )
	mov rax,QWORD [rsp-8+8*3]
	mov r14,rax
; .mov_ptn 8'(= r ) ⊢ 0'(= r )
	mov rax,QWORD [rsp-8+8*4]
	mov r13,rax
	call ETR_40

	mov r14,QWORD [rsp-8+8*2]
	mov rax,QWORD [rsp-8+8*1]
	mov r8,r13
	mov r13,rax
	add rsp,32
;; rsp=0 , %313~2'(= a5◂ [ ] ) %312~1'(= r ) %311~0'(= r ) 
; #22 2'(= a5◂ [ ] ) ⊢ 0(<2)◂2'(= a5◂ [ ] )
;; rsp=0 , %314~0(<2)◂2'(= a5◂ [ ] ) %312~1'(= r ) %311~0'(= r ) 
; ∎ 0(<2)◂2'(= a5◂ [ ] )
; .dlt.ptn 1'(= r )
; .dlt.ptn 0'(= r )
; .mov_ptn2 0(<2)◂2'(= a5◂ [ ] ) ⊢ 2'(= a3◂ [ a5◂ [ ]] )
	mov r13,r8
; .mov_ptn 0(<2)◂0'(= a5◂ [ ] ) ⊢ 2'(= a3◂ [ a5◂ [ ]] )
	mov rax,r13
	mov rdi,rax
	mov rax,r15
	mov r15,QWORD [r15] 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	jmp LB_156
LB_156:
	cmp BYTE [r8+6],0
	jnz LB_147
	pop r14
	pop r9
	add rsp,8
	pop r13
	ret
LB_147:
	pop rdi
	pop r9 
	pop r14
	pop r13
	ret
ETR_69:
	mov r9,0x0000_ffff_ffff_ffff
	and r9,[r13]
	call GRM_69
	ret
GRM_69:
	sub rsp,32
	mov QWORD [rsp+24],r13
	mov QWORD [rsp+16],r14 
	mov QWORD [rsp+8],r9
	lea rax,[r14+1]
	cmp rax,r9
	jg LB_161
	jmp LB_162
LB_161:
	mov r8,unt_1
	jmp LB_159
LB_162:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],92
	jnz LB_163
	jmp LB_164
LB_163:
	mov r8,unt_1
	jmp LB_159
LB_164:
	add r14,1
	jmp LB_160
LB_159:
	add rsp,0
	jmp LB_158
LB_160:
	mov QWORD [rsp+8*0],r14
	mov r13,QWORD [rsp+16+8*0]
	mov r14,QWORD [rsp+8*0]
	jmp LB_166
LB_166
;; rsp=0 , %316~1'(= r ) %315~0'(= r ) 
	jmp LB_167
LB_167:
; $ %[ 92r ] ⊢ %[ 92r ]
;; rsp=0 , %317~%[ 92r ] %316~1'(= r ) %315~0'(= r ) 
; #22 %[ 92r ] ⊢ 0(<2)◂%[ 92r ]
;; rsp=0 , %318~0(<2)◂%[ 92r ] %316~1'(= r ) %315~0'(= r ) 
; ∎ 0(<2)◂%[ 92r ]
; .dlt.ptn 1'(= r )
; .dlt.ptn 0'(= r )
; .mov_ptn2 0(<2)◂%[ 92r ] ⊢ 2'(= a3◂ [ r] )
; .mov_ptn 0(<2)◂%[ 92r ] ⊢ 2'(= a3◂ [ r] )
	mov rax,92
	mov rdi,rax
	mov rax,r15
	mov r15,QWORD [r15] 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	jmp LB_165
LB_165:
	cmp BYTE [r8+6],0
	jnz LB_158
	pop r14
	pop r9
	add rsp,8
	pop r13
	ret
LB_158:
	mov r9,QWORD [rsp+8]
	mov r14,QWORD [rsp+16]
	mov r13,QWORD [rsp+24]
	lea rax,[r14+1]
	cmp rax,r9
	jg LB_171
	jmp LB_172
LB_171:
	mov r8,unt_1
	jmp LB_169
LB_172:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],34
	jnz LB_173
	jmp LB_174
LB_173:
	mov r8,unt_1
	jmp LB_169
LB_174:
	add r14,1
	jmp LB_170
LB_169:
	add rsp,0
	jmp LB_168
LB_170:
	mov QWORD [rsp+8*0],r14
	mov r13,QWORD [rsp+16+8*0]
	mov r14,QWORD [rsp+8*0]
	jmp LB_176
LB_176
;; rsp=0 , %320~1'(= r ) %319~0'(= r ) 
	jmp LB_177
LB_177:
; $ %[ 34r ] ⊢ %[ 34r ]
;; rsp=0 , %321~%[ 34r ] %320~1'(= r ) %319~0'(= r ) 
; #22 %[ 34r ] ⊢ 0(<2)◂%[ 34r ]
;; rsp=0 , %322~0(<2)◂%[ 34r ] %320~1'(= r ) %319~0'(= r ) 
; ∎ 0(<2)◂%[ 34r ]
; .dlt.ptn 1'(= r )
; .dlt.ptn 0'(= r )
; .mov_ptn2 0(<2)◂%[ 34r ] ⊢ 2'(= a3◂ [ r] )
; .mov_ptn 0(<2)◂%[ 34r ] ⊢ 2'(= a3◂ [ r] )
	mov rax,34
	mov rdi,rax
	mov rax,r15
	mov r15,QWORD [r15] 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	jmp LB_175
LB_175:
	cmp BYTE [r8+6],0
	jnz LB_168
	pop r14
	pop r9
	add rsp,8
	pop r13
	ret
LB_168:
	mov r9,QWORD [rsp+8]
	mov r14,QWORD [rsp+16]
	mov r13,QWORD [rsp+24]
	lea rax,[r14+1]
	cmp rax,r9
	jg LB_181
	jmp LB_182
LB_181:
	mov r8,unt_1
	jmp LB_179
LB_182:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],110
	jnz LB_183
	jmp LB_184
LB_183:
	mov r8,unt_1
	jmp LB_179
LB_184:
	add r14,1
	jmp LB_180
LB_179:
	add rsp,0
	jmp LB_178
LB_180:
	mov QWORD [rsp+8*0],r14
	mov r13,QWORD [rsp+16+8*0]
	mov r14,QWORD [rsp+8*0]
	jmp LB_186
LB_186
;; rsp=0 , %324~1'(= r ) %323~0'(= r ) 
	jmp LB_187
LB_187:
; $ %[ 10r ] ⊢ %[ 10r ]
;; rsp=0 , %325~%[ 10r ] %324~1'(= r ) %323~0'(= r ) 
; #22 %[ 10r ] ⊢ 0(<2)◂%[ 10r ]
;; rsp=0 , %326~0(<2)◂%[ 10r ] %324~1'(= r ) %323~0'(= r ) 
; ∎ 0(<2)◂%[ 10r ]
; .dlt.ptn 1'(= r )
; .dlt.ptn 0'(= r )
; .mov_ptn2 0(<2)◂%[ 10r ] ⊢ 2'(= a3◂ [ r] )
; .mov_ptn 0(<2)◂%[ 10r ] ⊢ 2'(= a3◂ [ r] )
	mov rax,10
	mov rdi,rax
	mov rax,r15
	mov r15,QWORD [r15] 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	jmp LB_185
LB_185:
	cmp BYTE [r8+6],0
	jnz LB_178
	pop r14
	pop r9
	add rsp,8
	pop r13
	ret
LB_178:
	mov r9,QWORD [rsp+8]
	mov r14,QWORD [rsp+16]
	mov r13,QWORD [rsp+24]
	lea rax,[r14+1]
	cmp rax,r9
	jg LB_191
	jmp LB_192
LB_191:
	mov r8,unt_1
	jmp LB_189
LB_192:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],116
	jnz LB_193
	jmp LB_194
LB_193:
	mov r8,unt_1
	jmp LB_189
LB_194:
	add r14,1
	jmp LB_190
LB_189:
	add rsp,0
	jmp LB_188
LB_190:
	mov QWORD [rsp+8*0],r14
	mov r13,QWORD [rsp+16+8*0]
	mov r14,QWORD [rsp+8*0]
	jmp LB_196
LB_196
;; rsp=0 , %328~1'(= r ) %327~0'(= r ) 
	jmp LB_197
LB_197:
; $ %[ 9r ] ⊢ %[ 9r ]
;; rsp=0 , %329~%[ 9r ] %328~1'(= r ) %327~0'(= r ) 
; #22 %[ 9r ] ⊢ 0(<2)◂%[ 9r ]
;; rsp=0 , %330~0(<2)◂%[ 9r ] %328~1'(= r ) %327~0'(= r ) 
; ∎ 0(<2)◂%[ 9r ]
; .dlt.ptn 1'(= r )
; .dlt.ptn 0'(= r )
; .mov_ptn2 0(<2)◂%[ 9r ] ⊢ 2'(= a3◂ [ r] )
; .mov_ptn 0(<2)◂%[ 9r ] ⊢ 2'(= a3◂ [ r] )
	mov rax,9
	mov rdi,rax
	mov rax,r15
	mov r15,QWORD [r15] 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	jmp LB_195
LB_195:
	cmp BYTE [r8+6],0
	jnz LB_188
	pop r14
	pop r9
	add rsp,8
	pop r13
	ret
LB_188:
	mov r9,QWORD [rsp+8]
	mov r14,QWORD [rsp+16]
	mov r13,QWORD [rsp+24]
	lea rax,[r14+1]
	cmp rax,r9
	jg LB_201
	jmp LB_202
LB_201:
	mov r8,unt_1
	jmp LB_199
LB_202:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],48
	jnz LB_203
	jmp LB_204
LB_203:
	mov r8,unt_1
	jmp LB_199
LB_204:
	add r14,1
	jmp LB_200
LB_199:
	add rsp,0
	jmp LB_198
LB_200:
	mov QWORD [rsp+8*0],r14
	mov r13,QWORD [rsp+16+8*0]
	mov r14,QWORD [rsp+8*0]
	jmp LB_206
LB_206
;; rsp=0 , %332~1'(= r ) %331~0'(= r ) 
	jmp LB_207
LB_207:
; $ %[ 0r ] ⊢ %[ 0r ]
;; rsp=0 , %333~%[ 0r ] %332~1'(= r ) %331~0'(= r ) 
; #22 %[ 0r ] ⊢ 0(<2)◂%[ 0r ]
;; rsp=0 , %334~0(<2)◂%[ 0r ] %332~1'(= r ) %331~0'(= r ) 
; ∎ 0(<2)◂%[ 0r ]
; .dlt.ptn 1'(= r )
; .dlt.ptn 0'(= r )
; .mov_ptn2 0(<2)◂%[ 0r ] ⊢ 2'(= a3◂ [ r] )
; .mov_ptn 0(<2)◂%[ 0r ] ⊢ 2'(= a3◂ [ r] )
	mov rax,0
	mov rdi,rax
	mov rax,r15
	mov r15,QWORD [r15] 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	jmp LB_205
LB_205:
	cmp BYTE [r8+6],0
	jnz LB_198
	pop r14
	pop r9
	add rsp,8
	pop r13
	ret
LB_198:
	pop rdi
	pop r9 
	pop r14
	pop r13
	ret
ETR_70:
	mov r9,0x0000_ffff_ffff_ffff
	and r9,[r13]
	call GRM_70
	ret
GRM_70:
	sub rsp,32
	mov QWORD [rsp+24],r13
	mov QWORD [rsp+16],r14 
	mov QWORD [rsp+8],r9
	cmp r14,r9
	jge LB_211
	jmp LB_212
LB_211:
	mov r8,unt_1 
	jmp LB_209
LB_212:
	movzx rdi,BYTE [r13+8+r14]
	push rdi 
	add r14,1 
	jmp LB_210
LB_209:
	add rsp,0
	jmp LB_208
LB_210:
	mov QWORD [rsp+8*1],r14
	mov r13,QWORD [rsp+16+8*1]
	mov r14,QWORD [rsp+8*1]
	jmp LB_214
LB_214
;; rsp=1 , %337~1'(= r ) %336~0'(= r ) %335~8'(= r ) 
	mov rdi,48
	cmp QWORD [rsp-8+8*1],rdi
;;48 =< .. 
	jl LB_215
	mov rdi,57
	cmp QWORD [rsp-8+8*1],rdi
;; .. =< 57
	jg LB_215
;; rsp=1 , %337~1'(= r ) %336~0'(= r ) %335~8'(= r ) 
; #22 8'(= r ) ⊢ 0(<2)◂8'(= r )
;; rsp=1 , %338~0(<2)◂8'(= r ) %337~1'(= r ) %336~0'(= r ) 
; ∎ 0(<2)◂8'(= r )
; .dlt.ptn 1'(= r )
; .dlt.ptn 0'(= r )
; .mov_ptn2 0(<2)◂8'(= r ) ⊢ 2'(= a3◂ [ r] )
; .mov_ptn 0(<2)◂8'(= r ) ⊢ 2'(= a3◂ [ r] )
	mov rax,QWORD [rsp-8+8*1]
	mov rdi,rax
	mov rax,r15
	mov r15,QWORD [r15] 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,8
	jmp LB_213
LB_215:
;; rsp=1 , %337~1'(= r ) %336~0'(= r ) %335~8'(= r ) 
; #23 { } ⊢ 1(<2)◂{ }
;; rsp=1 , %339~1(<2)◂{ } %337~1'(= r ) %336~0'(= r ) %335~8'(= r ) 
; ∎ 1(<2)◂{ }
; .dlt.ptn 1'(= r )
; .dlt.ptn 0'(= r )
; .dlt.ptn 8'(= r )
; .mov_ptn2 1(<2)◂{ } ⊢ 2'(= a3◂ [ r] )
; .mov_ptn 1(<2)◂{ } ⊢ 2'(= a3◂ [ r] )
	mov rax,unt 
	mov rax,unt_1
	mov r8,rax
	add rsp,8
	jmp LB_213
LB_213:
	cmp BYTE [r8+6],0
	jnz LB_208
	pop r14
	pop r9
	add rsp,8
	pop r13
	ret
LB_208:
	pop rdi
	pop r9 
	pop r14
	pop r13
	ret
ETR_71:
	mov r9,0x0000_ffff_ffff_ffff
	and r9,[r13]
	call GRM_71
	ret
GRM_71:
	sub rsp,32
	mov QWORD [rsp+24],r13
	mov QWORD [rsp+16],r14 
	mov QWORD [rsp+8],r9
	cmp r14,r9
	jge LB_219
	jmp LB_220
LB_219:
	mov r8,unt_1 
	jmp LB_217
LB_220:
	movzx rdi,BYTE [r13+8+r14]
	push rdi 
	add r14,1 
	jmp LB_218
LB_217:
	add rsp,0
	jmp LB_216
LB_218:
	mov QWORD [rsp+8*1],r14
	mov r13,QWORD [rsp+16+8*1]
	mov r14,QWORD [rsp+8*1]
	jmp LB_222
LB_222
;; rsp=1 , %342~1'(= r ) %341~0'(= r ) %340~8'(= r ) 
	mov rdi,97
	cmp QWORD [rsp-8+8*1],rdi
;;97 =< .. 
	jl LB_223
	mov rdi,122
	cmp QWORD [rsp-8+8*1],rdi
;; .. =< 122
	jg LB_223
;; rsp=1 , %342~1'(= r ) %341~0'(= r ) %340~8'(= r ) 
; #22 8'(= r ) ⊢ 0(<2)◂8'(= r )
;; rsp=1 , %343~0(<2)◂8'(= r ) %342~1'(= r ) %341~0'(= r ) 
; ∎ 0(<2)◂8'(= r )
; .dlt.ptn 1'(= r )
; .dlt.ptn 0'(= r )
; .mov_ptn2 0(<2)◂8'(= r ) ⊢ 2'(= a3◂ [ r] )
; .mov_ptn 0(<2)◂8'(= r ) ⊢ 2'(= a3◂ [ r] )
	mov rax,QWORD [rsp-8+8*1]
	mov rdi,rax
	mov rax,r15
	mov r15,QWORD [r15] 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,8
	jmp LB_221
LB_223:
;; rsp=1 , %342~1'(= r ) %341~0'(= r ) %340~8'(= r ) 
; #23 { } ⊢ 1(<2)◂{ }
;; rsp=1 , %344~1(<2)◂{ } %342~1'(= r ) %341~0'(= r ) %340~8'(= r ) 
; ∎ 1(<2)◂{ }
; .dlt.ptn 1'(= r )
; .dlt.ptn 0'(= r )
; .dlt.ptn 8'(= r )
; .mov_ptn2 1(<2)◂{ } ⊢ 2'(= a3◂ [ r] )
; .mov_ptn 1(<2)◂{ } ⊢ 2'(= a3◂ [ r] )
	mov rax,unt 
	mov rax,unt_1
	mov r8,rax
	add rsp,8
	jmp LB_221
LB_221:
	cmp BYTE [r8+6],0
	jnz LB_216
	pop r14
	pop r9
	add rsp,8
	pop r13
	ret
LB_216:
	pop rdi
	pop r9 
	pop r14
	pop r13
	ret
ETR_72:
	mov r9,0x0000_ffff_ffff_ffff
	and r9,[r13]
	call GRM_72
	ret
GRM_72:
	sub rsp,32
	mov QWORD [rsp+24],r13
	mov QWORD [rsp+16],r14 
	mov QWORD [rsp+8],r9
	cmp r14,r9
	jge LB_227
	jmp LB_228
LB_227:
	mov r8,unt_1 
	jmp LB_225
LB_228:
	movzx rdi,BYTE [r13+8+r14]
	push rdi 
	add r14,1 
	jmp LB_226
LB_225:
	add rsp,0
	jmp LB_224
LB_226:
	mov QWORD [rsp+8*1],r14
	mov r13,QWORD [rsp+16+8*1]
	mov r14,QWORD [rsp+8*1]
	jmp LB_230
LB_230
;; rsp=1 , %347~1'(= r ) %346~0'(= r ) %345~8'(= r ) 
	mov rdi,65
	cmp QWORD [rsp-8+8*1],rdi
;;65 =< .. 
	jl LB_231
	mov rdi,90
	cmp QWORD [rsp-8+8*1],rdi
;; .. =< 90
	jg LB_231
;; rsp=1 , %347~1'(= r ) %346~0'(= r ) %345~8'(= r ) 
; #22 8'(= r ) ⊢ 0(<2)◂8'(= r )
;; rsp=1 , %348~0(<2)◂8'(= r ) %347~1'(= r ) %346~0'(= r ) 
; ∎ 0(<2)◂8'(= r )
; .dlt.ptn 1'(= r )
; .dlt.ptn 0'(= r )
; .mov_ptn2 0(<2)◂8'(= r ) ⊢ 2'(= a3◂ [ r] )
; .mov_ptn 0(<2)◂8'(= r ) ⊢ 2'(= a3◂ [ r] )
	mov rax,QWORD [rsp-8+8*1]
	mov rdi,rax
	mov rax,r15
	mov r15,QWORD [r15] 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,8
	jmp LB_229
LB_231:
;; rsp=1 , %347~1'(= r ) %346~0'(= r ) %345~8'(= r ) 
; #23 { } ⊢ 1(<2)◂{ }
;; rsp=1 , %349~1(<2)◂{ } %347~1'(= r ) %346~0'(= r ) %345~8'(= r ) 
; ∎ 1(<2)◂{ }
; .dlt.ptn 1'(= r )
; .dlt.ptn 0'(= r )
; .dlt.ptn 8'(= r )
; .mov_ptn2 1(<2)◂{ } ⊢ 2'(= a3◂ [ r] )
; .mov_ptn 1(<2)◂{ } ⊢ 2'(= a3◂ [ r] )
	mov rax,unt 
	mov rax,unt_1
	mov r8,rax
	add rsp,8
	jmp LB_229
LB_229:
	cmp BYTE [r8+6],0
	jnz LB_224
	pop r14
	pop r9
	add rsp,8
	pop r13
	ret
LB_224:
	pop rdi
	pop r9 
	pop r14
	pop r13
	ret
ETR_73:
	mov r9,0x0000_ffff_ffff_ffff
	and r9,[r13]
	call GRM_73
	ret
GRM_73:
	sub rsp,32
	mov QWORD [rsp+24],r13
	mov QWORD [rsp+16],r14 
	mov QWORD [rsp+8],r9
	call GRM_72
	cmp BYTE [r8+6],0
	jnz LB_235
	jmp LB_236
LB_235:
	jmp LB_233
LB_236:
	sub rsp,8
	mov r8,[r8+8]
; .mov_ptn2 2'(= r ) ⊢ 8'(= r )
; .mov_ptn 2'(= r ) ⊢ 8'(= r )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_234
LB_233:
	add rsp,0
	jmp LB_232
LB_234:
	mov QWORD [rsp+8*1],r14
	mov r13,QWORD [rsp+16+8*1]
	mov r14,QWORD [rsp+8*1]
	jmp LB_238
LB_238
;; rsp=1 , %352~1'(= r ) %351~0'(= r ) %350~8'(= r ) 
; #22 8'(= r ) ⊢ 0(<2)◂8'(= r )
;; rsp=1 , %353~0(<2)◂8'(= r ) %352~1'(= r ) %351~0'(= r ) 
; ∎ 0(<2)◂8'(= r )
; .dlt.ptn 1'(= r )
; .dlt.ptn 0'(= r )
; .mov_ptn2 0(<2)◂8'(= r ) ⊢ 2'(= a3◂ [ r] )
; .mov_ptn 0(<2)◂8'(= r ) ⊢ 2'(= a3◂ [ r] )
	mov rax,QWORD [rsp-8+8*1]
	mov rdi,rax
	mov rax,r15
	mov r15,QWORD [r15] 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,8
	jmp LB_237
LB_237:
	cmp BYTE [r8+6],0
	jnz LB_232
	pop r14
	pop r9
	add rsp,8
	pop r13
	ret
LB_232:
	mov r9,QWORD [rsp+8]
	mov r14,QWORD [rsp+16]
	mov r13,QWORD [rsp+24]
	call GRM_71
	cmp BYTE [r8+6],0
	jnz LB_242
	jmp LB_243
LB_242:
	jmp LB_240
LB_243:
	sub rsp,8
	mov r8,[r8+8]
; .mov_ptn2 2'(= r ) ⊢ 8'(= r )
; .mov_ptn 2'(= r ) ⊢ 8'(= r )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_241
LB_240:
	add rsp,0
	jmp LB_239
LB_241:
	mov QWORD [rsp+8*1],r14
	mov r13,QWORD [rsp+16+8*1]
	mov r14,QWORD [rsp+8*1]
	jmp LB_245
LB_245
;; rsp=1 , %356~1'(= r ) %355~0'(= r ) %354~8'(= r ) 
; #22 8'(= r ) ⊢ 0(<2)◂8'(= r )
;; rsp=1 , %357~0(<2)◂8'(= r ) %356~1'(= r ) %355~0'(= r ) 
; ∎ 0(<2)◂8'(= r )
; .dlt.ptn 1'(= r )
; .dlt.ptn 0'(= r )
; .mov_ptn2 0(<2)◂8'(= r ) ⊢ 2'(= a3◂ [ r] )
; .mov_ptn 0(<2)◂8'(= r ) ⊢ 2'(= a3◂ [ r] )
	mov rax,QWORD [rsp-8+8*1]
	mov rdi,rax
	mov rax,r15
	mov r15,QWORD [r15] 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,8
	jmp LB_244
LB_244:
	cmp BYTE [r8+6],0
	jnz LB_239
	pop r14
	pop r9
	add rsp,8
	pop r13
	ret
LB_239:
	pop rdi
	pop r9 
	pop r14
	pop r13
	ret
ETR_74:
	mov r9,0x0000_ffff_ffff_ffff
	and r9,[r13]
	call GRM_74
	ret
GRM_74:
	sub rsp,32
	mov QWORD [rsp+24],r13
	mov QWORD [rsp+16],r14 
	mov QWORD [rsp+8],r9
	call GRM_73
	cmp BYTE [r8+6],0
	jnz LB_249
	jmp LB_250
LB_249:
	jmp LB_247
LB_250:
	sub rsp,8
	mov r8,[r8+8]
; .mov_ptn2 2'(= r ) ⊢ 8'(= r )
; .mov_ptn 2'(= r ) ⊢ 8'(= r )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_248
LB_247:
	add rsp,0
	jmp LB_246
LB_248:
	call GRM_75
	cmp BYTE [r8+6],0
	jnz LB_253
	jmp LB_254
LB_253:
	jmp LB_251
LB_254:
	sub rsp,8
	mov r8,[r8+8]
; .mov_ptn2 2'(= a5◂ [ ] ) ⊢ 9'(= a5◂ [ ] )
; .mov_ptn 2'(= a5◂ [ ] ) ⊢ 9'(= a5◂ [ ] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_252
LB_251:
	add rsp,8
	jmp LB_246
LB_252:
	mov QWORD [rsp+8*2],r14
	mov r13,QWORD [rsp+16+8*2]
	mov r14,QWORD [rsp+8*2]
	jmp LB_256
LB_256
;; rsp=2 , %361~1'(= r ) %360~0'(= r ) %359~9'(= a5◂ [ ] ) %358~8'(= r ) 
; rsp_d=0, #40 { 8'(= r ) 9'(= a5◂ [ ] ) } ⊢ 2'(= a5◂ [ ] )
	sub rsp,16
	mov QWORD [rsp+8*0],r13
	mov QWORD [rsp+8*1],r14
; .mov_ptn2 { 8'(= r ) 9'(= a5◂ [ ] ) } ⊢ { 0'(= r ) 1'(= a5◂ [ ] ) }
; .mov_ptn 9'(= a5◂ [ ] ) ⊢ 1'(= a5◂ [ ] )
	mov rax,QWORD [rsp-8+8*3]
	mov r14,rax
; .mov_ptn 8'(= r ) ⊢ 0'(= r )
	mov rax,QWORD [rsp-8+8*4]
	mov r13,rax
	call ETR_40

	mov r14,QWORD [rsp-8+8*2]
	mov rax,QWORD [rsp-8+8*1]
	mov r8,r13
	mov r13,rax
	add rsp,32
;; rsp=0 , %362~2'(= a5◂ [ ] ) %361~1'(= r ) %360~0'(= r ) 
; rsp_d=0, #43 2'(= a5◂ [ ] ) ⊢ { 3'(= a5◂ [ ] ) 2'(= {| l |} ) }
	sub rsp,16
	mov QWORD [rsp+8*0],r13
	mov QWORD [rsp+8*1],r14
; .mov_ptn2 2'(= a5◂ [ ] ) ⊢ 0'(= a5◂ [ ] )
; .mov_ptn 2'(= a5◂ [ ] ) ⊢ 0'(= a5◂ [ ] )
	mov rax,r8
	mov r13,rax
	call ETR_43

	mov rax,QWORD [rsp-8+8*2]
	mov r8,r14
	mov r14,rax
	mov rax,QWORD [rsp-8+8*1]
	mov r9,r13
	mov r13,rax
	add rsp,16
;; rsp=0 , %364~2'(= {| l |} ) %363~3'(= a5◂ [ ] ) %361~1'(= r ) %360~0'(= r ) 
; #22 2'(= {| l |} ) ⊢ 0(<2)◂2'(= {| l |} )
;; rsp=0 , %365~0(<2)◂2'(= {| l |} ) %363~3'(= a5◂ [ ] ) %361~1'(= r ) %360~0'(= r ) 
; ∎ 0(<2)◂2'(= {| l |} )
; .dlt.ptn 3'(= a5◂ [ ] )
;	.dlt adt ⊢ _  
; .dlt.ptn 1'(= r )
; .dlt.ptn 0'(= r )
; .mov_ptn2 0(<2)◂2'(= {| l |} ) ⊢ 2'(= a3◂ [ {| l |}] )
	mov r13,r8
; .mov_ptn 0(<2)◂0'(= {| l |} ) ⊢ 2'(= a3◂ [ {| l |}] )
	mov rax,r13
	mov BYTE [rax+6],0
	mov r8,rax
	jmp LB_255
LB_255:
	cmp BYTE [r8+6],0
	jnz LB_246
	pop r14
	pop r9
	add rsp,8
	pop r13
	ret
LB_246:
	pop rdi
	pop r9 
	pop r14
	pop r13
	ret
ETR_75:
	mov r9,0x0000_ffff_ffff_ffff
	and r9,[r13]
	call GRM_75
	ret
GRM_75:
	sub rsp,32
	mov QWORD [rsp+24],r13
	mov QWORD [rsp+16],r14 
	mov QWORD [rsp+8],r9
	call GRM_76
	cmp BYTE [r8+6],0
	jnz LB_260
	jmp LB_261
LB_260:
	jmp LB_258
LB_261:
	sub rsp,8
	mov r8,[r8+8]
; .mov_ptn2 2'(= r ) ⊢ 8'(= r )
; .mov_ptn 2'(= r ) ⊢ 8'(= r )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_259
LB_258:
	add rsp,0
	jmp LB_257
LB_259:
	call GRM_75
	cmp BYTE [r8+6],0
	jnz LB_264
	jmp LB_265
LB_264:
	jmp LB_262
LB_265:
	sub rsp,8
	mov r8,[r8+8]
; .mov_ptn2 2'(= a5◂ [ ] ) ⊢ 9'(= a5◂ [ ] )
; .mov_ptn 2'(= a5◂ [ ] ) ⊢ 9'(= a5◂ [ ] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_263
LB_262:
	add rsp,8
	jmp LB_257
LB_263:
	mov QWORD [rsp+8*2],r14
	mov r13,QWORD [rsp+16+8*2]
	mov r14,QWORD [rsp+8*2]
	jmp LB_267
LB_267
;; rsp=2 , %369~1'(= r ) %368~0'(= r ) %367~9'(= a5◂ [ ] ) %366~8'(= r ) 
; rsp_d=0, #40 { 8'(= r ) 9'(= a5◂ [ ] ) } ⊢ 2'(= a5◂ [ ] )
	sub rsp,16
	mov QWORD [rsp+8*0],r13
	mov QWORD [rsp+8*1],r14
; .mov_ptn2 { 8'(= r ) 9'(= a5◂ [ ] ) } ⊢ { 0'(= r ) 1'(= a5◂ [ ] ) }
; .mov_ptn 9'(= a5◂ [ ] ) ⊢ 1'(= a5◂ [ ] )
	mov rax,QWORD [rsp-8+8*3]
	mov r14,rax
; .mov_ptn 8'(= r ) ⊢ 0'(= r )
	mov rax,QWORD [rsp-8+8*4]
	mov r13,rax
	call ETR_40

	mov r14,QWORD [rsp-8+8*2]
	mov rax,QWORD [rsp-8+8*1]
	mov r8,r13
	mov r13,rax
	add rsp,32
;; rsp=0 , %370~2'(= a5◂ [ ] ) %369~1'(= r ) %368~0'(= r ) 
; #22 2'(= a5◂ [ ] ) ⊢ 0(<2)◂2'(= a5◂ [ ] )
;; rsp=0 , %371~0(<2)◂2'(= a5◂ [ ] ) %369~1'(= r ) %368~0'(= r ) 
; ∎ 0(<2)◂2'(= a5◂ [ ] )
; .dlt.ptn 1'(= r )
; .dlt.ptn 0'(= r )
; .mov_ptn2 0(<2)◂2'(= a5◂ [ ] ) ⊢ 2'(= a3◂ [ a5◂ [ ]] )
	mov r13,r8
; .mov_ptn 0(<2)◂0'(= a5◂ [ ] ) ⊢ 2'(= a3◂ [ a5◂ [ ]] )
	mov rax,r13
	mov rdi,rax
	mov rax,r15
	mov r15,QWORD [r15] 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	jmp LB_266
LB_266:
	cmp BYTE [r8+6],0
	jnz LB_257
	pop r14
	pop r9
	add rsp,8
	pop r13
	ret
LB_257:
	mov r9,QWORD [rsp+8]
	mov r14,QWORD [rsp+16]
	mov r13,QWORD [rsp+24]
	mov QWORD [rsp+8*0],r14
	mov r13,QWORD [rsp+16+8*0]
	mov r14,QWORD [rsp+8*0]
	jmp LB_270
LB_270
;; rsp=0 , %373~1'(= r ) %372~0'(= r ) 
; #32 { } ⊢ 2(<4)◂{ }
;; rsp=0 , %374~2(<4)◂{ } %373~1'(= r ) %372~0'(= r ) 
; #22 2(<4)◂{ } ⊢ 0(<2)◂2(<4)◂{ }
;; rsp=0 , %375~0(<2)◂2(<4)◂{ } %373~1'(= r ) %372~0'(= r ) 
; ∎ 0(<2)◂2(<4)◂{ }
; .dlt.ptn 1'(= r )
; .dlt.ptn 0'(= r )
; .mov_ptn2 0(<2)◂2(<4)◂{ } ⊢ 2'(= a3◂ [ a5◂ [ ]] )
; .mov_ptn 0(<2)◂2(<4)◂{ } ⊢ 2'(= a3◂ [ a5◂ [ ]] )
	mov rax,unt 
	mov rax,unt_2
	mov rdi,rax
	mov rax,r15
	mov r15,QWORD [r15] 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	jmp LB_269
LB_269:
	cmp BYTE [r8+6],0
	jnz LB_268
	pop r14
	pop r9
	add rsp,8
	pop r13
	ret
LB_268:
	pop rdi
	pop r9 
	pop r14
	pop r13
	ret
ETR_76:
	mov r9,0x0000_ffff_ffff_ffff
	and r9,[r13]
	call GRM_76
	ret
GRM_76:
	sub rsp,32
	mov QWORD [rsp+24],r13
	mov QWORD [rsp+16],r14 
	mov QWORD [rsp+8],r9
	call GRM_73
	cmp BYTE [r8+6],0
	jnz LB_274
	jmp LB_275
LB_274:
	jmp LB_272
LB_275:
	sub rsp,8
	mov r8,[r8+8]
; .mov_ptn2 2'(= r ) ⊢ 8'(= r )
; .mov_ptn 2'(= r ) ⊢ 8'(= r )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_273
LB_272:
	add rsp,0
	jmp LB_271
LB_273:
	mov QWORD [rsp+8*1],r14
	mov r13,QWORD [rsp+16+8*1]
	mov r14,QWORD [rsp+8*1]
	jmp LB_277
LB_277
;; rsp=1 , %378~1'(= r ) %377~0'(= r ) %376~8'(= r ) 
; #22 8'(= r ) ⊢ 0(<2)◂8'(= r )
;; rsp=1 , %379~0(<2)◂8'(= r ) %378~1'(= r ) %377~0'(= r ) 
; ∎ 0(<2)◂8'(= r )
; .dlt.ptn 1'(= r )
; .dlt.ptn 0'(= r )
; .mov_ptn2 0(<2)◂8'(= r ) ⊢ 2'(= a3◂ [ r] )
; .mov_ptn 0(<2)◂8'(= r ) ⊢ 2'(= a3◂ [ r] )
	mov rax,QWORD [rsp-8+8*1]
	mov rdi,rax
	mov rax,r15
	mov r15,QWORD [r15] 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,8
	jmp LB_276
LB_276:
	cmp BYTE [r8+6],0
	jnz LB_271
	pop r14
	pop r9
	add rsp,8
	pop r13
	ret
LB_271:
	mov r9,QWORD [rsp+8]
	mov r14,QWORD [rsp+16]
	mov r13,QWORD [rsp+24]
	call GRM_70
	cmp BYTE [r8+6],0
	jnz LB_281
	jmp LB_282
LB_281:
	jmp LB_279
LB_282:
	sub rsp,8
	mov r8,[r8+8]
; .mov_ptn2 2'(= r ) ⊢ 8'(= r )
; .mov_ptn 2'(= r ) ⊢ 8'(= r )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_280
LB_279:
	add rsp,0
	jmp LB_278
LB_280:
	mov QWORD [rsp+8*1],r14
	mov r13,QWORD [rsp+16+8*1]
	mov r14,QWORD [rsp+8*1]
	jmp LB_284
LB_284
;; rsp=1 , %382~1'(= r ) %381~0'(= r ) %380~8'(= r ) 
; #22 8'(= r ) ⊢ 0(<2)◂8'(= r )
;; rsp=1 , %383~0(<2)◂8'(= r ) %382~1'(= r ) %381~0'(= r ) 
; ∎ 0(<2)◂8'(= r )
; .dlt.ptn 1'(= r )
; .dlt.ptn 0'(= r )
; .mov_ptn2 0(<2)◂8'(= r ) ⊢ 2'(= a3◂ [ r] )
; .mov_ptn 0(<2)◂8'(= r ) ⊢ 2'(= a3◂ [ r] )
	mov rax,QWORD [rsp-8+8*1]
	mov rdi,rax
	mov rax,r15
	mov r15,QWORD [r15] 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,8
	jmp LB_283
LB_283:
	cmp BYTE [r8+6],0
	jnz LB_278
	pop r14
	pop r9
	add rsp,8
	pop r13
	ret
LB_278:
	mov r9,QWORD [rsp+8]
	mov r14,QWORD [rsp+16]
	mov r13,QWORD [rsp+24]
	lea rax,[r14+1]
	cmp rax,r9
	jg LB_288
	jmp LB_289
LB_288:
	mov r8,unt_1
	jmp LB_286
LB_289:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],95
	jnz LB_290
	jmp LB_291
LB_290:
	mov r8,unt_1
	jmp LB_286
LB_291:
	add r14,1
	jmp LB_287
LB_286:
	add rsp,0
	jmp LB_285
LB_287:
	mov QWORD [rsp+8*0],r14
	mov r13,QWORD [rsp+16+8*0]
	mov r14,QWORD [rsp+8*0]
	jmp LB_293
LB_293
;; rsp=0 , %385~1'(= r ) %384~0'(= r ) 
	jmp LB_294
LB_294:
; $ %[ 95r ] ⊢ %[ 95r ]
;; rsp=0 , %386~%[ 95r ] %385~1'(= r ) %384~0'(= r ) 
; #22 %[ 95r ] ⊢ 0(<2)◂%[ 95r ]
;; rsp=0 , %387~0(<2)◂%[ 95r ] %385~1'(= r ) %384~0'(= r ) 
; ∎ 0(<2)◂%[ 95r ]
; .dlt.ptn 1'(= r )
; .dlt.ptn 0'(= r )
; .mov_ptn2 0(<2)◂%[ 95r ] ⊢ 2'(= a3◂ [ r] )
; .mov_ptn 0(<2)◂%[ 95r ] ⊢ 2'(= a3◂ [ r] )
	mov rax,95
	mov rdi,rax
	mov rax,r15
	mov r15,QWORD [r15] 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	jmp LB_292
LB_292:
	cmp BYTE [r8+6],0
	jnz LB_285
	pop r14
	pop r9
	add rsp,8
	pop r13
	ret
LB_285:
	pop rdi
	pop r9 
	pop r14
	pop r13
	ret
ETR_77:
	mov r9,0x0000_ffff_ffff_ffff
	and r9,[r13]
	call GRM_77
	ret
GRM_77:
	sub rsp,32
	mov QWORD [rsp+24],r13
	mov QWORD [rsp+16],r14 
	mov QWORD [rsp+8],r9
	lea rax,[r14+1]
	cmp rax,r9
	jg LB_298
	jmp LB_299
LB_298:
	mov r8,unt_1
	jmp LB_296
LB_299:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],95
	jnz LB_300
	jmp LB_301
LB_300:
	mov r8,unt_1
	jmp LB_296
LB_301:
	add r14,1
	jmp LB_297
LB_296:
	add rsp,0
	jmp LB_295
LB_297:
	call GRM_75
	cmp BYTE [r8+6],0
	jnz LB_304
	jmp LB_305
LB_304:
	jmp LB_302
LB_305:
	sub rsp,8
	mov r8,[r8+8]
; .mov_ptn2 2'(= a5◂ [ ] ) ⊢ 8'(= a5◂ [ ] )
; .mov_ptn 2'(= a5◂ [ ] ) ⊢ 8'(= a5◂ [ ] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_303
LB_302:
	add rsp,0
	jmp LB_295
LB_303:
	mov QWORD [rsp+8*1],r14
	mov r13,QWORD [rsp+16+8*1]
	mov r14,QWORD [rsp+8*1]
	jmp LB_307
LB_307
;; rsp=1 , %390~1'(= r ) %389~0'(= r ) %388~8'(= a5◂ [ ] ) 
; rsp_d=0, #43 8'(= a5◂ [ ] ) ⊢ { 3'(= a5◂ [ ] ) 2'(= {| l |} ) }
	sub rsp,16
	mov QWORD [rsp+8*0],r13
	mov QWORD [rsp+8*1],r14
; .mov_ptn2 8'(= a5◂ [ ] ) ⊢ 0'(= a5◂ [ ] )
; .mov_ptn 8'(= a5◂ [ ] ) ⊢ 0'(= a5◂ [ ] )
	mov rax,QWORD [rsp-8+8*3]
	mov r13,rax
	call ETR_43

	mov rax,QWORD [rsp-8+8*2]
	mov r8,r14
	mov r14,rax
	mov rax,QWORD [rsp-8+8*1]
	mov r9,r13
	mov r13,rax
	add rsp,24
;; rsp=0 , %392~2'(= {| l |} ) %391~3'(= a5◂ [ ] ) %390~1'(= r ) %389~0'(= r ) 
; » _^ .. ⊢ ..
; .. //
	mov rdi,0
	mov rsi,r8
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[rsi] 
	add rdi,rax 
	push rax
	push rsi
	add rdi,1
	push rdi 
	call mlc_s8
	pop rdi
	mov r10,rax
	lea rdi,[rax+7+rdi]
	std 
	mov QWORD [tmp],rcx 
	pop rsi 
	pop rcx
	lea rsi,[rsi+7+rcx]
	rep movsb
	lea rsi,[LB_308+1-1]
	mov rcx,1
	rep movsb
	mov rcx,QWORD [tmp] 
;; rsp=0 , %394~4'(= {| l |} ) %393~2'(= {| l |} ) %391~3'(= a5◂ [ ] ) %390~1'(= r ) %389~0'(= r ) 
; #22 4'(= {| l |} ) ⊢ 0(<2)◂4'(= {| l |} )
;; rsp=0 , %395~0(<2)◂4'(= {| l |} ) %393~2'(= {| l |} ) %391~3'(= a5◂ [ ] ) %390~1'(= r ) %389~0'(= r ) 
; ∎ 0(<2)◂4'(= {| l |} )
; .dlt.ptn 2'(= {| l |} )
	mov rdi,r8
	call free_s8 
; .dlt.ptn 3'(= a5◂ [ ] )
;	.dlt adt ⊢ _  
; .dlt.ptn 1'(= r )
; .dlt.ptn 0'(= r )
; .mov_ptn2 0(<2)◂4'(= {| l |} ) ⊢ 2'(= a3◂ [ {| l |}] )
; .mov_ptn 0(<2)◂4'(= {| l |} ) ⊢ 2'(= a3◂ [ {| l |}] )
	mov rax,r10
	mov BYTE [rax+6],0
	mov r8,rax
	jmp LB_306
LB_306:
	cmp BYTE [r8+6],0
	jnz LB_295
	pop r14
	pop r9
	add rsp,8
	pop r13
	ret
LB_295:
	mov r9,QWORD [rsp+8]
	mov r14,QWORD [rsp+16]
	mov r13,QWORD [rsp+24]
	call GRM_74
	cmp BYTE [r8+6],0
	jnz LB_312
	jmp LB_313
LB_312:
	jmp LB_310
LB_313:
	sub rsp,8
; .mov_ptn2 2'(= {| l |} ) ⊢ 8'(= {| l |} )
; .mov_ptn 2'(= {| l |} ) ⊢ 8'(= {| l |} )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_311
LB_310:
	add rsp,0
	jmp LB_309
LB_311:
	mov QWORD [rsp+8*1],r14
	mov r13,QWORD [rsp+16+8*1]
	mov r14,QWORD [rsp+8*1]
	jmp LB_315
LB_315
;; rsp=1 , %398~1'(= r ) %397~0'(= r ) %396~8'(= {| l |} ) 
; #22 8'(= {| l |} ) ⊢ 0(<2)◂8'(= {| l |} )
;; rsp=1 , %399~0(<2)◂8'(= {| l |} ) %398~1'(= r ) %397~0'(= r ) 
; ∎ 0(<2)◂8'(= {| l |} )
; .dlt.ptn 1'(= r )
; .dlt.ptn 0'(= r )
; .mov_ptn2 0(<2)◂8'(= {| l |} ) ⊢ 2'(= a3◂ [ {| l |}] )
; .mov_ptn 0(<2)◂8'(= {| l |} ) ⊢ 2'(= a3◂ [ {| l |}] )
	mov rax,QWORD [rsp-8+8*1]
	mov BYTE [rax+6],0
	mov r8,rax
	add rsp,8
	jmp LB_314
LB_314:
	cmp BYTE [r8+6],0
	jnz LB_309
	pop r14
	pop r9
	add rsp,8
	pop r13
	ret
LB_309:
	pop rdi
	pop r9 
	pop r14
	pop r13
	ret
ETR_82: ; pnt_name 0'(= a9◂ [ ] ) ⊢ 0'(= {| l |} ) : (_t9→_s8)
;; rsp=0 , %400~0'(= a9◂ [ ] ) 
;; ?; 0'(= a9◂ [ ] ) ⊢ 0(<2)◂{ 1'(= {| l |} ) 2'(= a9◂ [ ] ) }
	mov rdi,r13
	cmp BYTE [rdi+6],0
	jnz LB_316
	mov rdi,r13
	mov rdi,QWORD [rdi+8+8*0]
	mov r14,rdi
	mov rdi,r13
	mov rdi,QWORD [rdi+8+8*1]
	mov r8,rdi
;; rsp=0 , %402~2'(= a9◂ [ ] ) %401~1'(= {| l |} ) 
; rsp_d=0, #82 2'(= a9◂ [ ] ) ⊢ 0'(= {| l |} )
	sub rsp,8
	mov QWORD [rsp+8*0],r14
; .mov_ptn2 2'(= a9◂ [ ] ) ⊢ 0'(= a9◂ [ ] )
; .mov_ptn 2'(= a9◂ [ ] ) ⊢ 0'(= a9◂ [ ] )
	mov rax,r8
	mov r13,rax
	call ETR_82

	mov r14,QWORD [rsp-8+8*1]
	add rsp,8
;; rsp=0 , %403~0'(= {| l |} ) %401~1'(= {| l |} ) 
; » _^ .. ⊢ ..
; .. //
	mov rdi,0
	mov rsi,r14
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[rsi] 
	add rdi,rax 
	push rax
	push rsi
	mov rsi,r13
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[rsi] 
	add rdi,rax 
	push rax
	push rsi
	add rdi,1
	push rdi 
	call mlc_s8
	pop rdi
	mov r8,rax
	lea rdi,[rax+7+rdi]
	std 
	mov QWORD [tmp],rcx 
	pop rsi 
	pop rcx
	lea rsi,[rsi+7+rcx]
	rep movsb
	lea rsi,[LB_317+1-1]
	mov rcx,1
	rep movsb
	pop rsi 
	pop rcx
	lea rsi,[rsi+7+rcx]
	rep movsb
	mov rcx,QWORD [tmp] 
;; rsp=0 , %406~2'(= {| l |} ) %405~0'(= {| l |} ) %404~1'(= {| l |} ) 
; ∎ 2'(= {| l |} )
; .dlt.ptn 0'(= {| l |} )
	mov rdi,r13
	call free_s8 
; .dlt.ptn 1'(= {| l |} )
	mov rdi,r14
	call free_s8 
; .mov_ptn2 2'(= {| l |} ) ⊢ 0'(= {| l |} )
; .mov_ptn 2'(= {| l |} ) ⊢ 0'(= {| l |} )
	mov rax,r8
	mov r13,rax
	ret
LB_316:
;; ?; 0'(= a9◂ [ ] ) ⊢ 1(<2)◂0'(= {| l |} )
;; rsp=0 , %407~0'(= {| l |} ) 
; ∎ 0'(= {| l |} )
; .mov_ptn2 0'(= {| l |} ) ⊢ 0'(= {| l |} )
	ret
ETR_87: ; pnt_cst_v 0'(= a10◂ [ ] ) ⊢ 0'(= {| l |} ) : (_t10→_s8)
;; rsp=0 , %408~0'(= a10◂ [ ] ) 
;; ? 0'(= a10◂ [ ] ) ⊢ 0(<2)◂1'(= r )
	mov rdi,r13
	cmp BYTE [rdi+6],0
	jnz LB_318
	mov rax,QWORD [rdi+8]
	mov r14,rax
;; rsp=0 , %410~1'(= r ) 
; » _^ .. ⊢ ..
; .. //
	mov rdi,0
	sub rsp,128
	mov rdi,rsp
	mov rsi,fmt_d
	mov rdx,r14
 xor rax,rax
	mov QWORD [tmp],rdi
	C_CALL_SF sprintf
	push rax 
	add rax,QWORD [tmp]
	mov rdi,rax
	add rdi,1
	push rdi 
	call mlc_s8
	pop rdi
	mov r13,rax
	lea rdi,[rax+7+rdi]
	std 
	mov QWORD [tmp],rcx 
	lea rsi,[LB_319+1-1]
	mov rcx,1
	rep movsb
	pop rcx
	lea rsi,[rsp+rcx-1]
	rep movsb
	add rsp,128
	mov rcx,QWORD [tmp] 
;; rsp=0 , %412~0'(= {| l |} ) %411~1'(= r ) 
; ∎ 0'(= {| l |} )
; .dlt.ptn 1'(= r )
; .mov_ptn2 0'(= {| l |} ) ⊢ 0'(= {| l |} )
	ret
LB_318:
;; ?. 0'(= a10◂ [ ] ) ⊢ 1(<2)◂0'(= {| l |} )
;; rsp=0 , %409~0'(= {| l |} ) 
; rsp_d=0, #66 0'(= {| l |} ) ⊢ { 0'(= {| l |} ) 1'(= {| l |} ) }
; .mov_ptn2 0'(= {| l |} ) ⊢ 0'(= {| l |} )
	call ETR_66

;; rsp=0 , %414~1'(= {| l |} ) %413~0'(= {| l |} ) 
; » _^ .. ⊢ ..
; .. //
	mov rdi,0
	mov rsi,r14
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[rsi] 
	add rdi,rax 
	push rax
	push rsi
	add rdi,2
	push rdi 
	call mlc_s8
	pop rdi
	mov r8,rax
	lea rdi,[rax+7+rdi]
	std 
	mov QWORD [tmp],rcx 
	lea rsi,[LB_320+1-1]
	mov rcx,1
	rep movsb
	pop rsi 
	pop rcx
	lea rsi,[rsi+7+rcx]
	rep movsb
	lea rsi,[LB_321+1-1]
	mov rcx,1
	rep movsb
	mov rcx,QWORD [tmp] 
;; rsp=0 , %416~2'(= {| l |} ) %415~1'(= {| l |} ) %413~0'(= {| l |} ) 
; ∎ 2'(= {| l |} )
; .dlt.ptn 1'(= {| l |} )
	mov rdi,r14
	call free_s8 
; .dlt.ptn 0'(= {| l |} )
	mov rdi,r13
	call free_s8 
; .mov_ptn2 2'(= {| l |} ) ⊢ 0'(= {| l |} )
; .mov_ptn 2'(= {| l |} ) ⊢ 0'(= {| l |} )
	mov rax,r8
	mov r13,rax
	ret
ETR_88: ; pnt_cst 0'(= a11◂ [ a9◂ [ ]] ) ⊢ 0'(= {| l |} ) : (_t11◂_t9→_s8)
;; rsp=0 , %417~0'(= a11◂ [ a9◂ [ ]] ) 
;; ? 0'(= a11◂ [ a9◂ [ ]] ) ⊢ 0(<2)◂1'(= a10◂ [ ] )
	mov rdi,r13
	cmp BYTE [rdi+6],0
	jnz LB_322
	mov rax,QWORD [rdi+8]
	mov r14,rax
;; rsp=0 , %419~1'(= a10◂ [ ] ) 
; #87 1'(= a10◂ [ ] ) ⊢|
; .mov_ptn2 1'(= a10◂ [ ] ) ⊢ 0'(= a10◂ [ ] )
; .mov_ptn 1'(= a10◂ [ ] ) ⊢ 0'(= a10◂ [ ] )
	mov rax,r14
	mov r13,rax
	call ETR_87
; .mov_ptn2 0'(= {| l |} ) ⊢ 0'(= {| l |} )
	ret
LB_322:
;; ?. 0'(= a11◂ [ a9◂ [ ]] ) ⊢ 1(<2)◂1'(= a9◂ [ ] )
	mov rax,QWORD [rdi+8]
	mov r14,rax
;; rsp=0 , %418~1'(= a9◂ [ ] ) 
; rsp_d=0, #82 1'(= a9◂ [ ] ) ⊢ 0'(= {| l |} )
; .mov_ptn2 1'(= a9◂ [ ] ) ⊢ 0'(= a9◂ [ ] )
; .mov_ptn 1'(= a9◂ [ ] ) ⊢ 0'(= a9◂ [ ] )
	mov rax,r14
	mov r13,rax
	call ETR_82

;; rsp=0 , %420~0'(= {| l |} ) 
; ∎ 0'(= {| l |} )
; .mov_ptn2 0'(= {| l |} ) ⊢ 0'(= {| l |} )
	ret
ETR_97: ; pnt_src_ptn 0'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) ⊢ 0'(= {| l |} ) : (_t8◂_t12◂_s8◂_t9→_s8)
;; rsp=0 , %421~0'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) 
;; ?; 0'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) ⊢ 0(<2)◂1'(= a2◂ [ a8◂ [ a12◂ [ a9◂ [ ]{| l |}]]] )
	mov rdi,r13
	cmp BYTE [rdi+6],0
	jnz LB_323
	mov rax,QWORD [rdi+8]
	mov r14,rax
;; rsp=0 , %422~1'(= a2◂ [ a8◂ [ a12◂ [ a9◂ [ ]{| l |}]]] ) 
; rsp_d=0, #98 1'(= a2◂ [ a8◂ [ a12◂ [ a9◂ [ ]{| l |}]]] ) ⊢ 0'(= {| l |} )
; .mov_ptn2 1'(= a2◂ [ a8◂ [ a12◂ [ a9◂ [ ]{| l |}]]] ) ⊢ 0'(= a2◂ [ a8◂ [ a12◂ [ a9◂ [ ]{| l |}]]] )
; .mov_ptn 1'(= a2◂ [ a8◂ [ a12◂ [ a9◂ [ ]{| l |}]]] ) ⊢ 0'(= a2◂ [ a8◂ [ a12◂ [ a9◂ [ ]{| l |}]]] )
	mov rax,r14
	mov r13,rax
	call ETR_98

;; rsp=0 , %423~0'(= {| l |} ) 
; » _^ .. ⊢ ..
; .. //
	mov rdi,0
	mov rsi,r13
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[rsi] 
	add rdi,rax 
	push rax
	push rsi
	add rdi,3
	push rdi 
	call mlc_s8
	pop rdi
	mov r14,rax
	lea rdi,[rax+7+rdi]
	std 
	mov QWORD [tmp],rcx 
	lea rsi,[LB_324+1-1]
	mov rcx,1
	rep movsb
	pop rsi 
	pop rcx
	lea rsi,[rsi+7+rcx]
	rep movsb
	lea rsi,[LB_325+2-1]
	mov rcx,2
	rep movsb
	mov rcx,QWORD [tmp] 
;; rsp=0 , %425~1'(= {| l |} ) %424~0'(= {| l |} ) 
; ∎ 1'(= {| l |} )
; .dlt.ptn 0'(= {| l |} )
	mov rdi,r13
	call free_s8 
; .mov_ptn2 1'(= {| l |} ) ⊢ 0'(= {| l |} )
; .mov_ptn 1'(= {| l |} ) ⊢ 0'(= {| l |} )
	mov rax,r14
	mov r13,rax
	ret
LB_323:
;; ?; 0'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) ⊢ 1(<2)◂1'(= a12◂ [ a9◂ [ ]{| l |}] )
	mov rax,QWORD [rdi+8]
	mov r14,rax
;; rsp=0 , %426~1'(= a12◂ [ a9◂ [ ]{| l |}] ) 
;; ?; 1'(= a12◂ [ a9◂ [ ]{| l |}] ) ⊢ 0(<2)◂0'(= a11◂ [ a9◂ [ ]] )
	mov rdi,r14
	cmp BYTE [rdi+6],0
	jnz LB_326
	mov rax,QWORD [rdi+8]
	mov r13,rax
;; rsp=0 , %427~0'(= a11◂ [ a9◂ [ ]] ) 
; rsp_d=0, #88 0'(= a11◂ [ a9◂ [ ]] ) ⊢ 0'(= {| l |} )
; .mov_ptn2 0'(= a11◂ [ a9◂ [ ]] ) ⊢ 0'(= a11◂ [ a9◂ [ ]] )
	call ETR_88

;; rsp=0 , %428~0'(= {| l |} ) 
; » _^ .. ⊢ ..
; .. //
	mov rdi,0
	mov rsi,r13
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[rsi] 
	add rdi,rax 
	push rax
	push rsi
	add rdi,6
	push rdi 
	call mlc_s8
	pop rdi
	mov r14,rax
	lea rdi,[rax+7+rdi]
	std 
	mov QWORD [tmp],rcx 
	lea rsi,[LB_327+3-1]
	mov rcx,3
	rep movsb
	pop rsi 
	pop rcx
	lea rsi,[rsi+7+rcx]
	rep movsb
	lea rsi,[LB_328+3-1]
	mov rcx,3
	rep movsb
	mov rcx,QWORD [tmp] 
;; rsp=0 , %430~1'(= {| l |} ) %429~0'(= {| l |} ) 
; ∎ 1'(= {| l |} )
; .dlt.ptn 0'(= {| l |} )
	mov rdi,r13
	call free_s8 
; .mov_ptn2 1'(= {| l |} ) ⊢ 0'(= {| l |} )
; .mov_ptn 1'(= {| l |} ) ⊢ 0'(= {| l |} )
	mov rax,r14
	mov r13,rax
	ret
LB_326:
;; ?; 1'(= a12◂ [ a9◂ [ ]{| l |}] ) ⊢ 1(<2)◂1'(= {| l |} )
;; rsp=0 , %431~1'(= {| l |} ) 
; ∎ 1'(= {| l |} )
; .mov_ptn2 1'(= {| l |} ) ⊢ 0'(= {| l |} )
; .mov_ptn 1'(= {| l |} ) ⊢ 0'(= {| l |} )
	mov rax,r14
	mov r13,rax
	ret
ETR_98: ; pnt_src_ptn_lst 0'(= a2◂ [ a8◂ [ a12◂ [ a9◂ [ ]{| l |}]]] ) ⊢ 0'(= {| l |} ) : (_lst◂_t8◂_t12◂_s8◂_t9→_s8)
;; rsp=0 , %432~0'(= a2◂ [ a8◂ [ a12◂ [ a9◂ [ ]{| l |}]]] ) 
;; ?; 0'(= a2◂ [ a8◂ [ a12◂ [ a9◂ [ ]{| l |}]]] ) ⊢ 0(<2)◂{ 1'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) 2'(= a2◂ [ a8◂ [ a12◂ [ a9◂ [ ]{| l |}]]] ) }
	mov rdi,r13
	cmp BYTE [rdi+6],0
	jnz LB_329
	mov rdi,r13
	mov rdi,QWORD [rdi+8+8*0]
	mov r14,rdi
	mov rdi,r13
	mov rdi,QWORD [rdi+8+8*1]
	mov r8,rdi
;; rsp=0 , %434~2'(= a2◂ [ a8◂ [ a12◂ [ a9◂ [ ]{| l |}]]] ) %433~1'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) 
; rsp_d=0, #97 1'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) ⊢ 0'(= {| l |} )
	sub rsp,8
	mov QWORD [rsp+8*0],r8
; .mov_ptn2 1'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) ⊢ 0'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] )
; .mov_ptn 1'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) ⊢ 0'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] )
	mov rax,r14
	mov r13,rax
	call ETR_97

	mov r8,QWORD [rsp-8+8*1]
	add rsp,8
;; rsp=0 , %435~0'(= {| l |} ) %434~2'(= a2◂ [ a8◂ [ a12◂ [ a9◂ [ ]{| l |}]]] ) 
; rsp_d=0, #98 2'(= a2◂ [ a8◂ [ a12◂ [ a9◂ [ ]{| l |}]]] ) ⊢ 1'(= {| l |} )
	sub rsp,8
	mov QWORD [rsp+8*0],r13
; .mov_ptn2 2'(= a2◂ [ a8◂ [ a12◂ [ a9◂ [ ]{| l |}]]] ) ⊢ 0'(= a2◂ [ a8◂ [ a12◂ [ a9◂ [ ]{| l |}]]] )
; .mov_ptn 2'(= a2◂ [ a8◂ [ a12◂ [ a9◂ [ ]{| l |}]]] ) ⊢ 0'(= a2◂ [ a8◂ [ a12◂ [ a9◂ [ ]{| l |}]]] )
	mov rax,r8
	mov r13,rax
	call ETR_98

	mov rax,QWORD [rsp-8+8*1]
	mov r14,r13
	mov r13,rax
	add rsp,8
;; rsp=0 , %436~1'(= {| l |} ) %435~0'(= {| l |} ) 
; » _^ .. ⊢ ..
; .. //
	mov rdi,0
	mov rsi,r13
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[rsi] 
	add rdi,rax 
	push rax
	push rsi
	mov rsi,r14
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[rsi] 
	add rdi,rax 
	push rax
	push rsi
	add rdi,1
	push rdi 
	call mlc_s8
	pop rdi
	mov r8,rax
	lea rdi,[rax+7+rdi]
	std 
	mov QWORD [tmp],rcx 
	pop rsi 
	pop rcx
	lea rsi,[rsi+7+rcx]
	rep movsb
	lea rsi,[LB_330+1-1]
	mov rcx,1
	rep movsb
	pop rsi 
	pop rcx
	lea rsi,[rsi+7+rcx]
	rep movsb
	mov rcx,QWORD [tmp] 
;; rsp=0 , %439~2'(= {| l |} ) %438~1'(= {| l |} ) %437~0'(= {| l |} ) 
; ∎ 2'(= {| l |} )
; .dlt.ptn 1'(= {| l |} )
	mov rdi,r14
	call free_s8 
; .dlt.ptn 0'(= {| l |} )
	mov rdi,r13
	call free_s8 
; .mov_ptn2 2'(= {| l |} ) ⊢ 0'(= {| l |} )
; .mov_ptn 2'(= {| l |} ) ⊢ 0'(= {| l |} )
	mov rax,r8
	mov r13,rax
	ret
LB_329:
;; ?; 0'(= a2◂ [ a8◂ [ a12◂ [ a9◂ [ ]{| l |}]]] ) ⊢ 1(<2)◂{ }
;; rsp=0 , 
	jmp LB_331
LB_331:
; $ %[ "" ] ⊢ %[ "" ]
;; rsp=0 , %440~%[ "" ] 
; ∎ %[ "" ]
; .mov_ptn2 %[ "" ] ⊢ 0'(= {| l |} )
; .mov_ptn %[ "" ] ⊢ 0'(= {| l |} )
	mov rsi,1  
	mov rdi,16
	xor rax,rax 
	C_CALL_SF calloc
	mov QWORD [rax],0
	mov r13,rax
	ret
ETR_99: ; pnt_dst_ptn 0'(= a8◂ [ a13◂ [ {| l |}]] ) ⊢ 0'(= {| l |} ) : (_t8◂_t13◂_s8→_s8)
;; rsp=0 , %441~0'(= a8◂ [ a13◂ [ {| l |}]] ) 
;; ?; 0'(= a8◂ [ a13◂ [ {| l |}]] ) ⊢ 0(<2)◂1'(= a2◂ [ a8◂ [ a13◂ [ {| l |}]]] )
	mov rdi,r13
	cmp BYTE [rdi+6],0
	jnz LB_332
	mov rax,QWORD [rdi+8]
	mov r14,rax
;; rsp=0 , %442~1'(= a2◂ [ a8◂ [ a13◂ [ {| l |}]]] ) 
; rsp_d=0, #100 1'(= a2◂ [ a8◂ [ a13◂ [ {| l |}]]] ) ⊢ 0'(= {| l |} )
; .mov_ptn2 1'(= a2◂ [ a8◂ [ a13◂ [ {| l |}]]] ) ⊢ 0'(= a2◂ [ a8◂ [ a13◂ [ {| l |}]]] )
; .mov_ptn 1'(= a2◂ [ a8◂ [ a13◂ [ {| l |}]]] ) ⊢ 0'(= a2◂ [ a8◂ [ a13◂ [ {| l |}]]] )
	mov rax,r14
	mov r13,rax
	call ETR_100

;; rsp=0 , %443~0'(= {| l |} ) 
; » _^ .. ⊢ ..
; .. //
	mov rdi,0
	mov rsi,r13
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[rsi] 
	add rdi,rax 
	push rax
	push rsi
	add rdi,3
	push rdi 
	call mlc_s8
	pop rdi
	mov r14,rax
	lea rdi,[rax+7+rdi]
	std 
	mov QWORD [tmp],rcx 
	lea rsi,[LB_333+1-1]
	mov rcx,1
	rep movsb
	pop rsi 
	pop rcx
	lea rsi,[rsi+7+rcx]
	rep movsb
	lea rsi,[LB_334+2-1]
	mov rcx,2
	rep movsb
	mov rcx,QWORD [tmp] 
;; rsp=0 , %445~1'(= {| l |} ) %444~0'(= {| l |} ) 
; ∎ 1'(= {| l |} )
; .dlt.ptn 0'(= {| l |} )
	mov rdi,r13
	call free_s8 
; .mov_ptn2 1'(= {| l |} ) ⊢ 0'(= {| l |} )
; .mov_ptn 1'(= {| l |} ) ⊢ 0'(= {| l |} )
	mov rax,r14
	mov r13,rax
	ret
LB_332:
;; ?; 0'(= a8◂ [ a13◂ [ {| l |}]] ) ⊢ 1(<2)◂1'(= a13◂ [ {| l |}] )
	mov rax,QWORD [rdi+8]
	mov r14,rax
;; rsp=0 , %446~1'(= a13◂ [ {| l |}] ) 
;; ?; 1'(= a13◂ [ {| l |}] ) ⊢ 0(<2)◂0'(= a3◂ [ {| l |}] )
	mov rdi,r14
	cmp BYTE [rdi+6],0
	jnz LB_335
	mov rax,QWORD [rdi+8]
	mov r13,rax
;; rsp=0 , %447~0'(= a3◂ [ {| l |}] ) 
	jmp LB_336
LB_336:
; $ %[ "_ " ] ⊢ %[ "_ " ]
;; rsp=0 , %448~%[ "_ " ] %447~0'(= a3◂ [ {| l |}] ) 
; ∎ %[ "_ " ]
; .dlt.ptn 0'(= a3◂ [ {| l |}] )
;	.dlt adt ⊢ _  
; .mov_ptn2 %[ "_ " ] ⊢ 0'(= {| l |} )
; .mov_ptn %[ "_ " ] ⊢ 0'(= {| l |} )
	mov rsi,1  
	mov rdi,16
	xor rax,rax 
	C_CALL_SF calloc
	mov QWORD [rax],2
	mov BYTE [rax+8+0],95
	mov BYTE [rax+8+1],32
	mov r13,rax
	ret
LB_335:
;; ?; 1'(= a13◂ [ {| l |}] ) ⊢ 1(<2)◂1'(= {| l |} )
;; rsp=0 , %449~1'(= {| l |} ) 
; ∎ 1'(= {| l |} )
; .mov_ptn2 1'(= {| l |} ) ⊢ 0'(= {| l |} )
; .mov_ptn 1'(= {| l |} ) ⊢ 0'(= {| l |} )
	mov rax,r14
	mov r13,rax
	ret
ETR_100: ; pnt_dst_ptn_lst 0'(= a2◂ [ a8◂ [ a13◂ [ {| l |}]]] ) ⊢ 0'(= {| l |} ) : (_lst◂_t8◂_t13◂_s8→_s8)
;; rsp=0 , %450~0'(= a2◂ [ a8◂ [ a13◂ [ {| l |}]]] ) 
;; ?; 0'(= a2◂ [ a8◂ [ a13◂ [ {| l |}]]] ) ⊢ 0(<2)◂{ 1'(= a8◂ [ a13◂ [ {| l |}]] ) 2'(= a2◂ [ a8◂ [ a13◂ [ {| l |}]]] ) }
	mov rdi,r13
	cmp BYTE [rdi+6],0
	jnz LB_337
	mov rdi,r13
	mov rdi,QWORD [rdi+8+8*0]
	mov r14,rdi
	mov rdi,r13
	mov rdi,QWORD [rdi+8+8*1]
	mov r8,rdi
;; rsp=0 , %452~2'(= a2◂ [ a8◂ [ a13◂ [ {| l |}]]] ) %451~1'(= a8◂ [ a13◂ [ {| l |}]] ) 
; rsp_d=0, #99 1'(= a8◂ [ a13◂ [ {| l |}]] ) ⊢ 0'(= {| l |} )
	sub rsp,8
	mov QWORD [rsp+8*0],r8
; .mov_ptn2 1'(= a8◂ [ a13◂ [ {| l |}]] ) ⊢ 0'(= a8◂ [ a13◂ [ {| l |}]] )
; .mov_ptn 1'(= a8◂ [ a13◂ [ {| l |}]] ) ⊢ 0'(= a8◂ [ a13◂ [ {| l |}]] )
	mov rax,r14
	mov r13,rax
	call ETR_99

	mov r8,QWORD [rsp-8+8*1]
	add rsp,8
;; rsp=0 , %453~0'(= {| l |} ) %452~2'(= a2◂ [ a8◂ [ a13◂ [ {| l |}]]] ) 
; rsp_d=0, #100 2'(= a2◂ [ a8◂ [ a13◂ [ {| l |}]]] ) ⊢ 1'(= {| l |} )
	sub rsp,8
	mov QWORD [rsp+8*0],r13
; .mov_ptn2 2'(= a2◂ [ a8◂ [ a13◂ [ {| l |}]]] ) ⊢ 0'(= a2◂ [ a8◂ [ a13◂ [ {| l |}]]] )
; .mov_ptn 2'(= a2◂ [ a8◂ [ a13◂ [ {| l |}]]] ) ⊢ 0'(= a2◂ [ a8◂ [ a13◂ [ {| l |}]]] )
	mov rax,r8
	mov r13,rax
	call ETR_100

	mov rax,QWORD [rsp-8+8*1]
	mov r14,r13
	mov r13,rax
	add rsp,8
;; rsp=0 , %454~1'(= {| l |} ) %453~0'(= {| l |} ) 
; » _^ .. ⊢ ..
; .. //
	mov rdi,0
	mov rsi,r13
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[rsi] 
	add rdi,rax 
	push rax
	push rsi
	mov rsi,r14
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[rsi] 
	add rdi,rax 
	push rax
	push rsi
	add rdi,1
	push rdi 
	call mlc_s8
	pop rdi
	mov r8,rax
	lea rdi,[rax+7+rdi]
	std 
	mov QWORD [tmp],rcx 
	pop rsi 
	pop rcx
	lea rsi,[rsi+7+rcx]
	rep movsb
	lea rsi,[LB_338+1-1]
	mov rcx,1
	rep movsb
	pop rsi 
	pop rcx
	lea rsi,[rsi+7+rcx]
	rep movsb
	mov rcx,QWORD [tmp] 
;; rsp=0 , %457~2'(= {| l |} ) %456~1'(= {| l |} ) %455~0'(= {| l |} ) 
; ∎ 2'(= {| l |} )
; .dlt.ptn 1'(= {| l |} )
	mov rdi,r14
	call free_s8 
; .dlt.ptn 0'(= {| l |} )
	mov rdi,r13
	call free_s8 
; .mov_ptn2 2'(= {| l |} ) ⊢ 0'(= {| l |} )
; .mov_ptn 2'(= {| l |} ) ⊢ 0'(= {| l |} )
	mov rax,r8
	mov r13,rax
	ret
LB_337:
;; ?; 0'(= a2◂ [ a8◂ [ a13◂ [ {| l |}]]] ) ⊢ 1(<2)◂{ }
;; rsp=0 , 
	jmp LB_339
LB_339:
; $ %[ "" ] ⊢ %[ "" ]
;; rsp=0 , %458~%[ "" ] 
; ∎ %[ "" ]
; .mov_ptn2 %[ "" ] ⊢ 0'(= {| l |} )
; .mov_ptn %[ "" ] ⊢ 0'(= {| l |} )
	mov rsi,1  
	mov rdi,16
	xor rax,rax 
	C_CALL_SF calloc
	mov QWORD [rax],0
	mov r13,rax
	ret
ETR_101: ; pnt_mtc_ptn 0'(= a8◂ [ a14◂ [ a9◂ [ ]{| l |}]] ) ⊢ 0'(= {| l |} ) : (_t8◂_t14◂_s8◂_t9→_s8)
;; rsp=0 , %459~0'(= a8◂ [ a14◂ [ a9◂ [ ]{| l |}]] ) 
;; ? 0'(= a8◂ [ a14◂ [ a9◂ [ ]{| l |}]] ) ⊢ 0(<2)◂1'(= a2◂ [ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]] )
	mov rdi,r13
	cmp BYTE [rdi+6],0
	jnz LB_340
	mov rax,QWORD [rdi+8]
	mov r14,rax
;; rsp=0 , %461~1'(= a2◂ [ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]] ) 
	jmp LB_341
LB_342:
	movzx rsi,BYTE [rdi+6]
	jmp QWORD [LB_345+8*rsi]
LB_345: dq LB_343,LB_344
LB_343:
	mov rsi,[SS_RCD_2_TOP]
	mov rax,[rsi] 
	mov QWORD [SS_RCD_2_TOP],rax
	mov QWORD [rsi],0
	push rdi
	push rsi
	mov rdi,QWORD [rdi+8+8*0]
	call LB_347
	pop rsi  
	pop rdi 
	mov QWORD [rsi+8+8*0],rax
	push rdi
	push rsi
	mov rdi,QWORD [rdi+8+8*1]
	call LB_342
	pop rsi  
	pop rdi 
	mov QWORD [rsi+8+8*1],rax
	mov rax,rsi 
	mov BYTE [rax+6],0
	jmp LB_346
LB_344:
	mov rax,unt
	mov BYTE [rax+6],1
	jmp LB_346
LB_346:
	ret
LB_347:
	movzx rsi,BYTE [rdi+6]
	jmp QWORD [LB_350+8*rsi]
LB_350: dq LB_348,LB_349
LB_348:
	mov rdi,QWORD [rdi+8]
	call LB_342
	mov rsi,r15 
	mov r15,QWORD [r15]
	mov QWORD [rsi+8],rax
	mov BYTE [rsi+6],0
	mov rax,rsi
	jmp LB_351
LB_349:
	mov rdi,QWORD [rdi+8]
	call LB_352
	mov rsi,r15 
	mov r15,QWORD [r15]
	mov QWORD [rsi+8],rax
	mov BYTE [rsi+6],1
	mov rax,rsi
	jmp LB_351
LB_351:
	ret
LB_352:
	movzx rsi,BYTE [rdi+6]
	jmp QWORD [LB_357+8*rsi]
LB_357: dq LB_353,LB_354,LB_355,LB_356
LB_353:
	mov rsi,[SS_RCD_2_TOP]
	mov rax,[rsi] 
	mov QWORD [SS_RCD_2_TOP],rax
	mov QWORD [rsi],0
	push rdi
	push rsi
	mov rdi,QWORD [rdi+8+8*0]
	call LB_359
	pop rsi  
	pop rdi 
	mov QWORD [rsi+8+8*0],rax
	push rdi
	push rsi
	mov rdi,QWORD [rdi+8+8*1]
	call LB_347
	pop rsi  
	pop rdi 
	mov QWORD [rsi+8+8*1],rax
	mov rax,rsi 
	mov BYTE [rax+6],0
	jmp LB_358
LB_354:
	mov rdi,QWORD [rdi+8]
	call LB_360
	mov rsi,r15 
	mov r15,QWORD [r15]
	mov QWORD [rsi+8],rax
	mov BYTE [rsi+6],1
	mov rax,rsi
	jmp LB_358
LB_355:
	mov rdi,QWORD [rdi+8]
	call LB_361
	mov rsi,r15 
	mov r15,QWORD [r15]
	mov QWORD [rsi+8],rax
	mov BYTE [rsi+6],2
	mov rax,rsi
	jmp LB_358
LB_356:
	C_PUSH_REGS
	call rpc_s8  
	C_POP_REGS
	mov BYTE [rax+6],3
	jmp LB_358
LB_358:
	ret
LB_361:
	movzx rsi,BYTE [rdi+6]
	jmp QWORD [LB_364+8*rsi]
LB_364: dq LB_362,LB_363
LB_362:
	C_PUSH_REGS
	call rpc_s8  
	C_POP_REGS
	mov BYTE [rax+6],0
	jmp LB_365
LB_363:
	mov rax,unt
	mov BYTE [rax+6],1
	jmp LB_365
LB_365:
	ret
LB_360:
	movzx rsi,BYTE [rdi+6]
	jmp QWORD [LB_368+8*rsi]
LB_368: dq LB_366,LB_367
LB_366:
	mov rdi,QWORD [rdi+8]
	call LB_370
	mov rsi,r15 
	mov r15,QWORD [r15]
	mov QWORD [rsi+8],rax
	mov BYTE [rsi+6],0
	mov rax,rsi
	jmp LB_369
LB_367:
	mov rdi,QWORD [rdi+8]
	call LB_359
	mov rsi,r15 
	mov r15,QWORD [r15]
	mov QWORD [rsi+8],rax
	mov BYTE [rsi+6],1
	mov rax,rsi
	jmp LB_369
LB_369:
	ret
LB_370:
	movzx rsi,BYTE [rdi+6]
	jmp QWORD [LB_373+8*rsi]
LB_373: dq LB_371,LB_372
LB_371:
	mov rdi,QWORD [rdi+8]
	mov rax,rdi
	mov rsi,r15 
	mov r15,QWORD [r15]
	mov QWORD [rsi+8],rax
	mov BYTE [rsi+6],0
	mov rax,rsi
	jmp LB_374
LB_372:
	C_PUSH_REGS
	call rpc_s8  
	C_POP_REGS
	mov BYTE [rax+6],1
	jmp LB_374
LB_374:
	ret
LB_359:
	movzx rsi,BYTE [rdi+6]
	jmp QWORD [LB_377+8*rsi]
LB_377: dq LB_375,LB_376
LB_375:
	mov rsi,[SS_RCD_2_TOP]
	mov rax,[rsi] 
	mov QWORD [SS_RCD_2_TOP],rax
	mov QWORD [rsi],0
	push rdi
	push rsi
	mov rdi,QWORD [rdi+8+8*0]
	C_PUSH_REGS
	call rpc_s8  
	C_POP_REGS
	pop rsi  
	pop rdi 
	mov QWORD [rsi+8+8*0],rax
	push rdi
	push rsi
	mov rdi,QWORD [rdi+8+8*1]
	call LB_359
	pop rsi  
	pop rdi 
	mov QWORD [rsi+8+8*1],rax
	mov rax,rsi 
	mov BYTE [rax+6],0
	jmp LB_378
LB_376:
	C_PUSH_REGS
	call rpc_s8  
	C_POP_REGS
	mov BYTE [rax+6],1
	jmp LB_378
LB_378:
	ret
LB_341:
; $ 1'(= a2◂ [ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]] ) ⊢ 1'(= a2◂ [ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]] ),0'(= a2◂ [ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]] )
	mov rdi,r14
	call LB_342
	mov r13,rax
;; rsp=0 , %463~0'(= a2◂ [ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]] ) %462~1'(= a2◂ [ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]] ) 
; #79 0'(= a2◂ [ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]] ) ⊢ 0(<2)◂0'(= a2◂ [ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]] )
;; rsp=0 , %464~0(<2)◂0'(= a2◂ [ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]] ) %462~1'(= a2◂ [ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]] ) 
; rsp_d=0, #102 1'(= a2◂ [ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]] ) ⊢ 1'(= {| l |} )
	sub rsp,8
	mov QWORD [rsp+8*0],r13
; .mov_ptn2 1'(= a2◂ [ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]] ) ⊢ 0'(= a2◂ [ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]] )
; .mov_ptn 1'(= a2◂ [ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]] ) ⊢ 0'(= a2◂ [ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]] )
	mov rax,r14
	mov r13,rax
	call ETR_102

	mov rax,QWORD [rsp-8+8*1]
	mov r14,r13
	mov r13,rax
	add rsp,8
;; rsp=0 , %465~1'(= {| l |} ) %464~0(<2)◂0'(= a2◂ [ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]] ) 
; » _^ .. ⊢ ..
; .. //
	mov rdi,0
	mov rsi,r14
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[rsi] 
	add rdi,rax 
	push rax
	push rsi
	add rdi,3
	push rdi 
	call mlc_s8
	pop rdi
	mov r8,rax
	lea rdi,[rax+7+rdi]
	std 
	mov QWORD [tmp],rcx 
	lea rsi,[LB_379+1-1]
	mov rcx,1
	rep movsb
	pop rsi 
	pop rcx
	lea rsi,[rsi+7+rcx]
	rep movsb
	lea rsi,[LB_380+2-1]
	mov rcx,2
	rep movsb
	mov rcx,QWORD [tmp] 
;; rsp=0 , %467~2'(= {| l |} ) %466~1'(= {| l |} ) %464~0(<2)◂0'(= a2◂ [ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]] ) 
; ∎ 2'(= {| l |} )
; .dlt.ptn 1'(= {| l |} )
	mov rdi,r14
	call free_s8 
; .dlt.ptn 0(<2)◂0'(= a2◂ [ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]] )
;	.dlt adt ⊢ _  
; .mov_ptn2 2'(= {| l |} ) ⊢ 0'(= {| l |} )
; .mov_ptn 2'(= {| l |} ) ⊢ 0'(= {| l |} )
	mov rax,r8
	mov r13,rax
	ret
LB_340:
;; ?. 0'(= a8◂ [ a14◂ [ a9◂ [ ]{| l |}]] ) ⊢ 1(<2)◂1'(= a14◂ [ a9◂ [ ]{| l |}] )
	mov rax,QWORD [rdi+8]
	mov r14,rax
;; rsp=0 , %460~1'(= a14◂ [ a9◂ [ ]{| l |}] ) 
;; ? 1'(= a14◂ [ a9◂ [ ]{| l |}] ) ⊢ 1(<4)◂0'(= a11◂ [ a9◂ [ ]] )
	mov rdi,r14
	cmp BYTE [rdi+6],1
	jnz LB_381
	mov rax,QWORD [rdi+8]
	mov r13,rax
;; rsp=0 , %472~0'(= a11◂ [ a9◂ [ ]] ) 
; rsp_d=0, #88 0'(= a11◂ [ a9◂ [ ]] ) ⊢ 0'(= {| l |} )
; .mov_ptn2 0'(= a11◂ [ a9◂ [ ]] ) ⊢ 0'(= a11◂ [ a9◂ [ ]] )
	call ETR_88

;; rsp=0 , %473~0'(= {| l |} ) 
; » _^ .. ⊢ ..
; .. //
	mov rdi,0
	mov rsi,r13
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[rsi] 
	add rdi,rax 
	push rax
	push rsi
	add rdi,6
	push rdi 
	call mlc_s8
	pop rdi
	mov r14,rax
	lea rdi,[rax+7+rdi]
	std 
	mov QWORD [tmp],rcx 
	lea rsi,[LB_382+3-1]
	mov rcx,3
	rep movsb
	pop rsi 
	pop rcx
	lea rsi,[rsi+7+rcx]
	rep movsb
	lea rsi,[LB_383+3-1]
	mov rcx,3
	rep movsb
	mov rcx,QWORD [tmp] 
;; rsp=0 , %475~1'(= {| l |} ) %474~0'(= {| l |} ) 
; ∎ 1'(= {| l |} )
; .dlt.ptn 0'(= {| l |} )
	mov rdi,r13
	call free_s8 
; .mov_ptn2 1'(= {| l |} ) ⊢ 0'(= {| l |} )
; .mov_ptn 1'(= {| l |} ) ⊢ 0'(= {| l |} )
	mov rax,r14
	mov r13,rax
	ret
LB_381:
;; ? 1'(= a14◂ [ a9◂ [ ]{| l |}] ) ⊢ 0(<4)◂{ 0'(= a9◂ [ ] ) 2'(= a8◂ [ a14◂ [ a9◂ [ ]{| l |}]] ) }
	mov rdi,r14
	cmp BYTE [rdi+6],0
	jnz LB_384
	mov rdi,r14
	mov rdi,QWORD [rdi+8+8*0]
	mov r13,rdi
	mov rdi,r14
	mov rdi,QWORD [rdi+8+8*1]
	mov r8,rdi
;; rsp=0 , %471~2'(= a8◂ [ a14◂ [ a9◂ [ ]{| l |}]] ) %470~0'(= a9◂ [ ] ) 
; rsp_d=0, #101 2'(= a8◂ [ a14◂ [ a9◂ [ ]{| l |}]] ) ⊢ 1'(= {| l |} )
	sub rsp,8
	mov QWORD [rsp+8*0],r13
; .mov_ptn2 2'(= a8◂ [ a14◂ [ a9◂ [ ]{| l |}]] ) ⊢ 0'(= a8◂ [ a14◂ [ a9◂ [ ]{| l |}]] )
; .mov_ptn 2'(= a8◂ [ a14◂ [ a9◂ [ ]{| l |}]] ) ⊢ 0'(= a8◂ [ a14◂ [ a9◂ [ ]{| l |}]] )
	mov rax,r8
	mov r13,rax
	call ETR_101

	mov rax,QWORD [rsp-8+8*1]
	mov r14,r13
	mov r13,rax
	add rsp,8
;; rsp=0 , %476~1'(= {| l |} ) %470~0'(= a9◂ [ ] ) 
; rsp_d=0, #82 0'(= a9◂ [ ] ) ⊢ 0'(= {| l |} )
	sub rsp,8
	mov QWORD [rsp+8*0],r14
; .mov_ptn2 0'(= a9◂ [ ] ) ⊢ 0'(= a9◂ [ ] )
	call ETR_82

	mov r14,QWORD [rsp-8+8*1]
	add rsp,8
;; rsp=0 , %477~0'(= {| l |} ) %476~1'(= {| l |} ) 
; » _^ .. ⊢ ..
; .. //
	mov rdi,0
	mov rsi,r13
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[rsi] 
	add rdi,rax 
	push rax
	push rsi
	mov rsi,r14
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[rsi] 
	add rdi,rax 
	push rax
	push rsi
	add rdi,3
	push rdi 
	call mlc_s8
	pop rdi
	mov r8,rax
	lea rdi,[rax+7+rdi]
	std 
	mov QWORD [tmp],rcx 
	pop rsi 
	pop rcx
	lea rsi,[rsi+7+rcx]
	rep movsb
	lea rsi,[LB_385+3-1]
	mov rcx,3
	rep movsb
	pop rsi 
	pop rcx
	lea rsi,[rsi+7+rcx]
	rep movsb
	mov rcx,QWORD [tmp] 
;; rsp=0 , %480~2'(= {| l |} ) %479~1'(= {| l |} ) %478~0'(= {| l |} ) 
; ∎ 2'(= {| l |} )
; .dlt.ptn 1'(= {| l |} )
	mov rdi,r14
	call free_s8 
; .dlt.ptn 0'(= {| l |} )
	mov rdi,r13
	call free_s8 
; .mov_ptn2 2'(= {| l |} ) ⊢ 0'(= {| l |} )
; .mov_ptn 2'(= {| l |} ) ⊢ 0'(= {| l |} )
	mov rax,r8
	mov r13,rax
	ret
LB_384:
;; ? 1'(= a14◂ [ a9◂ [ ]{| l |}] ) ⊢ 3(<4)◂1'(= {| l |} )
	mov rdi,r14
	cmp BYTE [rdi+6],3
	jnz LB_386
;; rsp=0 , %469~1'(= {| l |} ) 
; » _^ .. ⊢ ..
; .. //
	mov rdi,0
	mov rsi,r14
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[rsi] 
	add rdi,rax 
	push rax
	push rsi
	add rdi,1
	push rdi 
	call mlc_s8
	pop rdi
	mov r13,rax
	lea rdi,[rax+7+rdi]
	std 
	mov QWORD [tmp],rcx 
	pop rsi 
	pop rcx
	lea rsi,[rsi+7+rcx]
	rep movsb
	lea rsi,[LB_387+1-1]
	mov rcx,1
	rep movsb
	mov rcx,QWORD [tmp] 
;; rsp=0 , %482~0'(= {| l |} ) %481~1'(= {| l |} ) 
; ∎ 0'(= {| l |} )
; .dlt.ptn 1'(= {| l |} )
	mov rdi,r14
	call free_s8 
; .mov_ptn2 0'(= {| l |} ) ⊢ 0'(= {| l |} )
	ret
LB_386:
;; ?. 1'(= a14◂ [ a9◂ [ ]{| l |}] ) ⊢ 2(<4)◂0'(= a3◂ [ {| l |}] )
	mov rax,QWORD [rdi+8]
	mov r13,rax
;; rsp=0 , %468~0'(= a3◂ [ {| l |}] ) 
	jmp LB_388
LB_388:
; $ %[ "_" ] ⊢ %[ "_" ]
;; rsp=0 , %483~%[ "_" ] %468~0'(= a3◂ [ {| l |}] ) 
; ∎ %[ "_" ]
; .dlt.ptn 0'(= a3◂ [ {| l |}] )
;	.dlt adt ⊢ _  
; .mov_ptn2 %[ "_" ] ⊢ 0'(= {| l |} )
; .mov_ptn %[ "_" ] ⊢ 0'(= {| l |} )
	mov rsi,1  
	mov rdi,16
	xor rax,rax 
	C_CALL_SF calloc
	mov QWORD [rax],1
	mov BYTE [rax+8+0],95
	mov r13,rax
	ret
ETR_102: ; pnt_mtc_ptn_lst 0'(= a2◂ [ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]] ) ⊢ 0'(= {| l |} ) : (_lst◂_t8◂_t14◂_s8◂_t9→_s8)
;; rsp=0 , %484~0'(= a2◂ [ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]] ) 
;; ? 0'(= a2◂ [ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]] ) ⊢ 0(<2)◂{ 1'(= a8◂ [ a14◂ [ a9◂ [ ]{| l |}]] ) 2'(= a2◂ [ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]] ) }
	mov rdi,r13
	cmp BYTE [rdi+6],0
	jnz LB_389
	mov rdi,r13
	mov rdi,QWORD [rdi+8+8*0]
	mov r14,rdi
	mov rdi,r13
	mov rdi,QWORD [rdi+8+8*1]
	mov r8,rdi
;; rsp=0 , %486~2'(= a2◂ [ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]] ) %485~1'(= a8◂ [ a14◂ [ a9◂ [ ]{| l |}]] ) 
; rsp_d=0, #101 1'(= a8◂ [ a14◂ [ a9◂ [ ]{| l |}]] ) ⊢ 0'(= {| l |} )
	sub rsp,8
	mov QWORD [rsp+8*0],r8
; .mov_ptn2 1'(= a8◂ [ a14◂ [ a9◂ [ ]{| l |}]] ) ⊢ 0'(= a8◂ [ a14◂ [ a9◂ [ ]{| l |}]] )
; .mov_ptn 1'(= a8◂ [ a14◂ [ a9◂ [ ]{| l |}]] ) ⊢ 0'(= a8◂ [ a14◂ [ a9◂ [ ]{| l |}]] )
	mov rax,r14
	mov r13,rax
	call ETR_101

	mov r8,QWORD [rsp-8+8*1]
	add rsp,8
;; rsp=0 , %487~0'(= {| l |} ) %486~2'(= a2◂ [ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]] ) 
; rsp_d=0, #102 2'(= a2◂ [ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]] ) ⊢ 1'(= {| l |} )
	sub rsp,8
	mov QWORD [rsp+8*0],r13
; .mov_ptn2 2'(= a2◂ [ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]] ) ⊢ 0'(= a2◂ [ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]] )
; .mov_ptn 2'(= a2◂ [ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]] ) ⊢ 0'(= a2◂ [ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]] )
	mov rax,r8
	mov r13,rax
	call ETR_102

	mov rax,QWORD [rsp-8+8*1]
	mov r14,r13
	mov r13,rax
	add rsp,8
;; rsp=0 , %488~1'(= {| l |} ) %487~0'(= {| l |} ) 
; » _^ .. ⊢ ..
; .. //
	mov rdi,0
	mov rsi,r13
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[rsi] 
	add rdi,rax 
	push rax
	push rsi
	mov rsi,r14
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[rsi] 
	add rdi,rax 
	push rax
	push rsi
	add rdi,1
	push rdi 
	call mlc_s8
	pop rdi
	mov r8,rax
	lea rdi,[rax+7+rdi]
	std 
	mov QWORD [tmp],rcx 
	pop rsi 
	pop rcx
	lea rsi,[rsi+7+rcx]
	rep movsb
	lea rsi,[LB_390+1-1]
	mov rcx,1
	rep movsb
	pop rsi 
	pop rcx
	lea rsi,[rsi+7+rcx]
	rep movsb
	mov rcx,QWORD [tmp] 
;; rsp=0 , %491~2'(= {| l |} ) %490~1'(= {| l |} ) %489~0'(= {| l |} ) 
; ∎ 2'(= {| l |} )
; .dlt.ptn 1'(= {| l |} )
	mov rdi,r14
	call free_s8 
; .dlt.ptn 0'(= {| l |} )
	mov rdi,r13
	call free_s8 
; .mov_ptn2 2'(= {| l |} ) ⊢ 0'(= {| l |} )
; .mov_ptn 2'(= {| l |} ) ⊢ 0'(= {| l |} )
	mov rax,r8
	mov r13,rax
	ret
LB_389:
;; ?. 0'(= a2◂ [ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]] ) ⊢ 1(<2)◂{ }
;; rsp=0 , 
	jmp LB_391
LB_391:
; $ %[ "" ] ⊢ %[ "" ]
;; rsp=0 , %492~%[ "" ] 
; ∎ %[ "" ]
; .mov_ptn2 %[ "" ] ⊢ 0'(= {| l |} )
; .mov_ptn %[ "" ] ⊢ 0'(= {| l |} )
	mov rsi,1  
	mov rdi,16
	xor rax,rax 
	C_CALL_SF calloc
	mov QWORD [rax],0
	mov r13,rax
	ret
ETR_132: ; pnt_lc_code { 0'(= r ) 1'(= a17◂ [ a9◂ [ ]{| l |}] ) } ⊢ { 0'(= r ) 1'(= {| l |} ) } : ({ _r64 _t17◂_s8◂_t9 }→{ _r64 _s8 })
;; rsp=0 , %494~1'(= a17◂ [ a9◂ [ ]{| l |}] ) %493~0'(= r ) 
;; ? 1'(= a17◂ [ a9◂ [ ]{| l |}] ) ⊢ 0(<7)◂{ 2'(= a9◂ [ ] ) 3'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) }
	mov rdi,r14
	cmp BYTE [rdi+6],0
	jnz LB_392
	mov rdi,r14
	mov rdi,QWORD [rdi+8+8*0]
	mov r8,rdi
	mov rdi,r14
	mov rdi,QWORD [rdi+8+8*1]
	mov r9,rdi
;; rsp=0 , %505~3'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) %504~2'(= a9◂ [ ] ) %493~0'(= r ) 
; rsp_d=0, #82 2'(= a9◂ [ ] ) ⊢ 1'(= {| l |} )
	sub rsp,16
	mov QWORD [rsp+8*0],r13
	mov QWORD [rsp+8*1],r9
; .mov_ptn2 2'(= a9◂ [ ] ) ⊢ 0'(= a9◂ [ ] )
; .mov_ptn 2'(= a9◂ [ ] ) ⊢ 0'(= a9◂ [ ] )
	mov rax,r8
	mov r13,rax
	call ETR_82

	mov r9,QWORD [rsp-8+8*2]
	mov rax,QWORD [rsp-8+8*1]
	mov r14,r13
	mov r13,rax
	add rsp,16
;; rsp=0 , %506~1'(= {| l |} ) %505~3'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) %493~0'(= r ) 
; rsp_d=0, #97 3'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) ⊢ 2'(= {| l |} )
	sub rsp,16
	mov QWORD [rsp+8*0],r13
	mov QWORD [rsp+8*1],r14
; .mov_ptn2 3'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) ⊢ 0'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] )
; .mov_ptn 3'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) ⊢ 0'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] )
	mov rax,r9
	mov r13,rax
	call ETR_97

	mov r14,QWORD [rsp-8+8*2]
	mov rax,QWORD [rsp-8+8*1]
	mov r8,r13
	mov r13,rax
	add rsp,16
;; rsp=0 , %507~2'(= {| l |} ) %506~1'(= {| l |} ) %493~0'(= r ) 
; » _^ .. ⊢ ..
; .. //
	mov rdi,0
	mov rsi,r13
	push rsi
	imul rsi,1
	add rdi,rsi 
	mov rsi,r14
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[rsi] 
	add rdi,rax 
	push rax
	push rsi
	mov rsi,r8
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[rsi] 
	add rdi,rax 
	push rax
	push rsi
	add rdi,7
	push rdi 
	call mlc_s8
	pop rdi
	mov r9,rax
	lea rdi,[rax+7+rdi]
	std 
	mov QWORD [tmp],rcx 
	lea rsi,[LB_393+6-1]
	mov rcx,6
	rep movsb
	pop rsi 
	pop rcx
	lea rsi,[rsi+7+rcx]
	rep movsb
	lea rsi,[LB_394+1-1]
	mov rcx,1
	rep movsb
	pop rsi 
	pop rcx
	lea rsi,[rsi+7+rcx]
	rep movsb
	pop rax 
LB_396:
	cmp rax,0
	jz LB_397
	sub rax,1
	lea rsi,[LB_395+1-1]
	mov rcx,1
	rep movsb 
	jmp LB_396
LB_397:
	mov rcx,QWORD [tmp] 
;; rsp=0 , %511~3'(= {| l |} ) %510~2'(= {| l |} ) %509~1'(= {| l |} ) %508~0'(= r ) 
; ∎ { 0'(= r ) 3'(= {| l |} ) }
; .dlt.ptn 2'(= {| l |} )
	mov rdi,r8
	call free_s8 
; .dlt.ptn 1'(= {| l |} )
	mov rdi,r14
	call free_s8 
; .mov_ptn2 { 0'(= r ) 3'(= {| l |} ) } ⊢ { 0'(= r ) 1'(= {| l |} ) }
; .mov_ptn 3'(= {| l |} ) ⊢ 1'(= {| l |} )
	mov rax,r9
	mov r14,rax
	ret
LB_392:
;; ? 1'(= a17◂ [ a9◂ [ ]{| l |}] ) ⊢ 1(<7)◂{ 2'(= a12◂ [ a9◂ [ ]{| l |}] ) 3'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) }
	mov rdi,r14
	cmp BYTE [rdi+6],1
	jnz LB_398
	mov rdi,r14
	mov rdi,QWORD [rdi+8+8*0]
	mov r8,rdi
	mov rdi,r14
	mov rdi,QWORD [rdi+8+8*1]
	mov r9,rdi
;; rsp=0 , %503~3'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) %502~2'(= a12◂ [ a9◂ [ ]{| l |}] ) %493~0'(= r ) 
; #78 2'(= a12◂ [ a9◂ [ ]{| l |}] ) ⊢ 1(<2)◂2'(= a12◂ [ a9◂ [ ]{| l |}] )
;; rsp=0 , %512~1(<2)◂2'(= a12◂ [ a9◂ [ ]{| l |}] ) %503~3'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) %493~0'(= r ) 
; rsp_d=0, #97 1(<2)◂2'(= a12◂ [ a9◂ [ ]{| l |}] ) ⊢ 1'(= {| l |} )
	sub rsp,16
	mov QWORD [rsp+8*0],r13
	mov QWORD [rsp+8*1],r9
; .mov_ptn2 1(<2)◂2'(= a12◂ [ a9◂ [ ]{| l |}] ) ⊢ 0'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] )
; .mov_ptn 1(<2)◂2'(= a12◂ [ a9◂ [ ]{| l |}] ) ⊢ 0'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] )
	mov rax,r8
	mov rdi,rax
	mov rax,r15
	mov r15,QWORD [r15] 
	mov QWORD [rax],0
	mov BYTE [rax+6],1
	mov QWORD [rax+8],rdi
	mov r13,rax
	call ETR_97

	mov r9,QWORD [rsp-8+8*2]
	mov rax,QWORD [rsp-8+8*1]
	mov r14,r13
	mov r13,rax
	add rsp,16
;; rsp=0 , %513~1'(= {| l |} ) %503~3'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) %493~0'(= r ) 
; rsp_d=0, #97 3'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) ⊢ 2'(= {| l |} )
	sub rsp,16
	mov QWORD [rsp+8*0],r13
	mov QWORD [rsp+8*1],r14
; .mov_ptn2 3'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) ⊢ 0'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] )
; .mov_ptn 3'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) ⊢ 0'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] )
	mov rax,r9
	mov r13,rax
	call ETR_97

	mov r14,QWORD [rsp-8+8*2]
	mov rax,QWORD [rsp-8+8*1]
	mov r8,r13
	mov r13,rax
	add rsp,16
;; rsp=0 , %514~2'(= {| l |} ) %513~1'(= {| l |} ) %493~0'(= r ) 
; » _^ .. ⊢ ..
; .. //
	mov rdi,0
	mov rsi,r13
	push rsi
	imul rsi,1
	add rdi,rsi 
	mov rsi,r14
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[rsi] 
	add rdi,rax 
	push rax
	push rsi
	mov rsi,r8
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[rsi] 
	add rdi,rax 
	push rax
	push rsi
	add rdi,10
	push rdi 
	call mlc_s8
	pop rdi
	mov r9,rax
	lea rdi,[rax+7+rdi]
	std 
	mov QWORD [tmp],rcx 
	lea rsi,[LB_399+6-1]
	mov rcx,6
	rep movsb
	pop rsi 
	pop rcx
	lea rsi,[rsi+7+rcx]
	rep movsb
	lea rsi,[LB_400+1-1]
	mov rcx,1
	rep movsb
	pop rsi 
	pop rcx
	lea rsi,[rsi+7+rcx]
	rep movsb
	lea rsi,[LB_401+3-1]
	mov rcx,3
	rep movsb
	pop rax 
LB_403:
	cmp rax,0
	jz LB_404
	sub rax,1
	lea rsi,[LB_402+1-1]
	mov rcx,1
	rep movsb 
	jmp LB_403
LB_404:
	mov rcx,QWORD [tmp] 
;; rsp=0 , %518~3'(= {| l |} ) %517~2'(= {| l |} ) %516~1'(= {| l |} ) %515~0'(= r ) 
; ∎ { 0'(= r ) 3'(= {| l |} ) }
; .dlt.ptn 2'(= {| l |} )
	mov rdi,r8
	call free_s8 
; .dlt.ptn 1'(= {| l |} )
	mov rdi,r14
	call free_s8 
; .mov_ptn2 { 0'(= r ) 3'(= {| l |} ) } ⊢ { 0'(= r ) 1'(= {| l |} ) }
; .mov_ptn 3'(= {| l |} ) ⊢ 1'(= {| l |} )
	mov rax,r9
	mov r14,rax
	ret
LB_398:
;; ? 1'(= a17◂ [ a9◂ [ ]{| l |}] ) ⊢ 2(<7)◂{ 2'(= a19◂ [ a9◂ [ ]{| l |}] ) 3'(= a17◂ [ a9◂ [ ]{| l |}] ) }
	mov rdi,r14
	cmp BYTE [rdi+6],2
	jnz LB_405
	mov rdi,r14
	mov rdi,QWORD [rdi+8+8*0]
	mov r8,rdi
	mov rdi,r14
	mov rdi,QWORD [rdi+8+8*1]
	mov r9,rdi
;; rsp=0 , %501~3'(= a17◂ [ a9◂ [ ]{| l |}] ) %500~2'(= a19◂ [ a9◂ [ ]{| l |}] ) %493~0'(= r ) 
; rsp_d=0, #133 { 0'(= r ) 2'(= a19◂ [ a9◂ [ ]{| l |}] ) } ⊢ { 0'(= r ) 1'(= {| l |} ) }
	sub rsp,8
	mov QWORD [rsp+8*0],r9
; .mov_ptn2 { 0'(= r ) 2'(= a19◂ [ a9◂ [ ]{| l |}] ) } ⊢ { 0'(= r ) 1'(= a19◂ [ a9◂ [ ]{| l |}] ) }
; .mov_ptn 2'(= a19◂ [ a9◂ [ ]{| l |}] ) ⊢ 1'(= a19◂ [ a9◂ [ ]{| l |}] )
	mov rax,r8
	mov r14,rax
	call ETR_133

	mov r9,QWORD [rsp-8+8*1]
	add rsp,8
;; rsp=0 , %520~1'(= {| l |} ) %519~0'(= r ) %501~3'(= a17◂ [ a9◂ [ ]{| l |}] ) 
; rsp_d=0, #132 { 0'(= r ) 3'(= a17◂ [ a9◂ [ ]{| l |}] ) } ⊢ { 0'(= r ) 2'(= {| l |} ) }
	sub rsp,8
	mov QWORD [rsp+8*0],r14
; .mov_ptn2 { 0'(= r ) 3'(= a17◂ [ a9◂ [ ]{| l |}] ) } ⊢ { 0'(= r ) 1'(= a17◂ [ a9◂ [ ]{| l |}] ) }
; .mov_ptn 3'(= a17◂ [ a9◂ [ ]{| l |}] ) ⊢ 1'(= a17◂ [ a9◂ [ ]{| l |}] )
	mov rax,r9
	mov r14,rax
	call ETR_132

	mov rax,QWORD [rsp-8+8*1]
	mov r8,r14
	mov r14,rax
	add rsp,8
;; rsp=0 , %522~2'(= {| l |} ) %521~0'(= r ) %520~1'(= {| l |} ) 
; » _^ .. ⊢ ..
; .. //
	mov rdi,0
	mov rsi,r14
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[rsi] 
	add rdi,rax 
	push rax
	push rsi
	mov rsi,r8
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[rsi] 
	add rdi,rax 
	push rax
	push rsi
	add rdi,0
	push rdi 
	call mlc_s8
	pop rdi
	mov r9,rax
	lea rdi,[rax+7+rdi]
	std 
	mov QWORD [tmp],rcx 
	pop rsi 
	pop rcx
	lea rsi,[rsi+7+rcx]
	rep movsb
	pop rsi 
	pop rcx
	lea rsi,[rsi+7+rcx]
	rep movsb
	mov rcx,QWORD [tmp] 
;; rsp=0 , %525~3'(= {| l |} ) %524~2'(= {| l |} ) %523~1'(= {| l |} ) %521~0'(= r ) 
; ∎ { 0'(= r ) 3'(= {| l |} ) }
; .dlt.ptn 2'(= {| l |} )
	mov rdi,r8
	call free_s8 
; .dlt.ptn 1'(= {| l |} )
	mov rdi,r14
	call free_s8 
; .mov_ptn2 { 0'(= r ) 3'(= {| l |} ) } ⊢ { 0'(= r ) 1'(= {| l |} ) }
; .mov_ptn 3'(= {| l |} ) ⊢ 1'(= {| l |} )
	mov rax,r9
	mov r14,rax
	ret
LB_405:
;; ? 1'(= a17◂ [ a9◂ [ ]{| l |}] ) ⊢ 3(<7)◂2'(= a7◂ [ *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}] )
	mov rdi,r14
	cmp BYTE [rdi+6],3
	jnz LB_406
	mov rax,QWORD [rdi+8]
	mov r8,rax
;; rsp=0 , %499~2'(= a7◂ [ *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}] ) %493~0'(= r ) 
; rsp_d=0, #134 { 0'(= r ) 2'(= a7◂ [ *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}] ) } ⊢ { 0'(= r ) 1'(= {| l |} ) }
; .mov_ptn2 { 0'(= r ) 2'(= a7◂ [ *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}] ) } ⊢ { 0'(= r ) 1'(= a7◂ [ *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}] ) }
; .mov_ptn 2'(= a7◂ [ *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}] ) ⊢ 1'(= a7◂ [ *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}] )
	mov rax,r8
	mov r14,rax
	call ETR_134

;; rsp=0 , %527~1'(= {| l |} ) %526~0'(= r ) 
; ∎ { 0'(= r ) 1'(= {| l |} ) }
; .mov_ptn2 { 0'(= r ) 1'(= {| l |} ) } ⊢ { 0'(= r ) 1'(= {| l |} ) }
	ret
LB_406:
;; ? 1'(= a17◂ [ a9◂ [ ]{| l |}] ) ⊢ 4(<7)◂{ 2'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) 3'(= a18◂ [ a9◂ [ ]{| l |}] ) }
	mov rdi,r14
	cmp BYTE [rdi+6],4
	jnz LB_407
	mov rdi,r14
	mov rdi,QWORD [rdi+8+8*0]
	mov r8,rdi
	mov rdi,r14
	mov rdi,QWORD [rdi+8+8*1]
	mov r9,rdi
;; rsp=0 , %498~3'(= a18◂ [ a9◂ [ ]{| l |}] ) %497~2'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) %493~0'(= r ) 
; rsp_d=0, #97 2'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) ⊢ 1'(= {| l |} )
	sub rsp,16
	mov QWORD [rsp+8*0],r13
	mov QWORD [rsp+8*1],r9
; .mov_ptn2 2'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) ⊢ 0'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] )
; .mov_ptn 2'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) ⊢ 0'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] )
	mov rax,r8
	mov r13,rax
	call ETR_97

	mov r9,QWORD [rsp-8+8*2]
	mov rax,QWORD [rsp-8+8*1]
	mov r14,r13
	mov r13,rax
	add rsp,16
;; rsp=0 , %528~1'(= {| l |} ) %498~3'(= a18◂ [ a9◂ [ ]{| l |}] ) %493~0'(= r ) 
;; ? 3'(= a18◂ [ a9◂ [ ]{| l |}] ) ⊢ 1(<2)◂{ 2'(= a2◂ [ a8◂ [ a13◂ [ {| l |}]]] ) 4'(= a17◂ [ a9◂ [ ]{| l |}] ) }
	mov rdi,r9
	cmp BYTE [rdi+6],1
	jnz LB_408
	mov rdi,r9
	mov rdi,QWORD [rdi+8+8*0]
	mov r8,rdi
	mov rdi,r9
	mov rdi,QWORD [rdi+8+8*1]
	mov r10,rdi
;; rsp=0 , %531~4'(= a17◂ [ a9◂ [ ]{| l |}] ) %530~2'(= a2◂ [ a8◂ [ a13◂ [ {| l |}]]] ) %528~1'(= {| l |} ) %493~0'(= r ) 
; rsp_d=0, #100 2'(= a2◂ [ a8◂ [ a13◂ [ {| l |}]]] ) ⊢ 2'(= {| l |} )
	sub rsp,24
	mov QWORD [rsp+8*0],r13
	mov QWORD [rsp+8*1],r14
	mov QWORD [rsp+8*2],r10
; .mov_ptn2 2'(= a2◂ [ a8◂ [ a13◂ [ {| l |}]]] ) ⊢ 0'(= a2◂ [ a8◂ [ a13◂ [ {| l |}]]] )
; .mov_ptn 2'(= a2◂ [ a8◂ [ a13◂ [ {| l |}]]] ) ⊢ 0'(= a2◂ [ a8◂ [ a13◂ [ {| l |}]]] )
	mov rax,r8
	mov r13,rax
	call ETR_100

	mov r10,QWORD [rsp-8+8*3]
	mov r14,QWORD [rsp-8+8*2]
	mov rax,QWORD [rsp-8+8*1]
	mov r8,r13
	mov r13,rax
	add rsp,24
;; rsp=0 , %532~2'(= {| l |} ) %531~4'(= a17◂ [ a9◂ [ ]{| l |}] ) %528~1'(= {| l |} ) %493~0'(= r ) 
; rsp_d=0, #132 { 0'(= r ) 4'(= a17◂ [ a9◂ [ ]{| l |}] ) } ⊢ { 0'(= r ) 3'(= {| l |} ) }
	sub rsp,16
	mov QWORD [rsp+8*0],r14
	mov QWORD [rsp+8*1],r8
; .mov_ptn2 { 0'(= r ) 4'(= a17◂ [ a9◂ [ ]{| l |}] ) } ⊢ { 0'(= r ) 1'(= a17◂ [ a9◂ [ ]{| l |}] ) }
; .mov_ptn 4'(= a17◂ [ a9◂ [ ]{| l |}] ) ⊢ 1'(= a17◂ [ a9◂ [ ]{| l |}] )
	mov rax,r10
	mov r14,rax
	call ETR_132

	mov r8,QWORD [rsp-8+8*2]
	mov rax,QWORD [rsp-8+8*1]
	mov r9,r14
	mov r14,rax
	add rsp,16
;; rsp=0 , %534~3'(= {| l |} ) %533~0'(= r ) %532~2'(= {| l |} ) %528~1'(= {| l |} ) 
; » _^ .. ⊢ ..
; .. //
	mov rdi,0
	mov rsi,r13
	push rsi
	imul rsi,1
	add rdi,rsi 
	mov rsi,r14
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[rsi] 
	add rdi,rax 
	push rax
	push rsi
	mov rsi,r8
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[rsi] 
	add rdi,rax 
	push rax
	push rsi
	mov rsi,r9
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[rsi] 
	add rdi,rax 
	push rax
	push rsi
	add rdi,8
	push rdi 
	call mlc_s8
	pop rdi
	mov r10,rax
	lea rdi,[rax+7+rdi]
	std 
	mov QWORD [tmp],rcx 
	pop rsi 
	pop rcx
	lea rsi,[rsi+7+rcx]
	rep movsb
	lea rsi,[LB_409+1-1]
	mov rcx,1
	rep movsb
	pop rsi 
	pop rcx
	lea rsi,[rsi+7+rcx]
	rep movsb
	lea rsi,[LB_410+5-1]
	mov rcx,5
	rep movsb
	pop rsi 
	pop rcx
	lea rsi,[rsi+7+rcx]
	rep movsb
	lea rsi,[LB_411+2-1]
	mov rcx,2
	rep movsb
	pop rax 
LB_413:
	cmp rax,0
	jz LB_414
	sub rax,1
	lea rsi,[LB_412+1-1]
	mov rcx,1
	rep movsb 
	jmp LB_413
LB_414:
	mov rcx,QWORD [tmp] 
;; rsp=0 , %539~4'(= {| l |} ) %538~3'(= {| l |} ) %537~2'(= {| l |} ) %536~1'(= {| l |} ) %535~0'(= r ) 
; ∎ { 0'(= r ) 4'(= {| l |} ) }
; .dlt.ptn 3'(= {| l |} )
	mov rdi,r9
	call free_s8 
; .dlt.ptn 2'(= {| l |} )
	mov rdi,r8
	call free_s8 
; .dlt.ptn 1'(= {| l |} )
	mov rdi,r14
	call free_s8 
; .mov_ptn2 { 0'(= r ) 4'(= {| l |} ) } ⊢ { 0'(= r ) 1'(= {| l |} ) }
; .mov_ptn 4'(= {| l |} ) ⊢ 1'(= {| l |} )
	mov rax,r10
	mov r14,rax
	ret
LB_408:
;; ?. 3'(= a18◂ [ a9◂ [ ]{| l |}] ) ⊢ 0(<2)◂2'(= a7◂ [ *{ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}] )
	mov rax,QWORD [rdi+8]
	mov r8,rax
;; rsp=0 , %529~2'(= a7◂ [ *{ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}] ) %528~1'(= {| l |} ) %493~0'(= r ) 
; rsp_d=0, #135 { 0'(= r ) 2'(= a7◂ [ *{ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}] ) } ⊢ { 0'(= r ) 2'(= {| l |} ) }
	sub rsp,8
	mov QWORD [rsp+8*0],r14
; .mov_ptn2 { 0'(= r ) 2'(= a7◂ [ *{ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}] ) } ⊢ { 0'(= r ) 1'(= a7◂ [ *{ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}] ) }
; .mov_ptn 2'(= a7◂ [ *{ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}] ) ⊢ 1'(= a7◂ [ *{ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}] )
	mov rax,r8
	mov r14,rax
	call ETR_135

	mov rax,QWORD [rsp-8+8*1]
	mov r8,r14
	mov r14,rax
	add rsp,8
;; rsp=0 , %541~2'(= {| l |} ) %540~0'(= r ) %528~1'(= {| l |} ) 
; » _^ .. ⊢ ..
; .. //
	mov rdi,0
	mov rsi,r13
	push rsi
	imul rsi,1
	add rdi,rsi 
	mov rsi,r14
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[rsi] 
	add rdi,rax 
	push rax
	push rsi
	mov rsi,r8
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[rsi] 
	add rdi,rax 
	push rax
	push rsi
	add rdi,7
	push rdi 
	call mlc_s8
	pop rdi
	mov r9,rax
	lea rdi,[rax+7+rdi]
	std 
	mov QWORD [tmp],rcx 
	pop rsi 
	pop rcx
	lea rsi,[rsi+7+rcx]
	rep movsb
	lea rsi,[LB_415+5-1]
	mov rcx,5
	rep movsb
	pop rsi 
	pop rcx
	lea rsi,[rsi+7+rcx]
	rep movsb
	lea rsi,[LB_416+2-1]
	mov rcx,2
	rep movsb
	pop rax 
LB_418:
	cmp rax,0
	jz LB_419
	sub rax,1
	lea rsi,[LB_417+1-1]
	mov rcx,1
	rep movsb 
	jmp LB_418
LB_419:
	mov rcx,QWORD [tmp] 
;; rsp=0 , %545~3'(= {| l |} ) %544~2'(= {| l |} ) %543~1'(= {| l |} ) %542~0'(= r ) 
; ∎ { 0'(= r ) 3'(= {| l |} ) }
; .dlt.ptn 2'(= {| l |} )
	mov rdi,r8
	call free_s8 
; .dlt.ptn 1'(= {| l |} )
	mov rdi,r14
	call free_s8 
; .mov_ptn2 { 0'(= r ) 3'(= {| l |} ) } ⊢ { 0'(= r ) 1'(= {| l |} ) }
; .mov_ptn 3'(= {| l |} ) ⊢ 1'(= {| l |} )
	mov rax,r9
	mov r14,rax
	ret
LB_407:
;; ? 1'(= a17◂ [ a9◂ [ ]{| l |}] ) ⊢ 5(<7)◂2'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] )
	mov rdi,r14
	cmp BYTE [rdi+6],5
	jnz LB_420
	mov rax,QWORD [rdi+8]
	mov r8,rax
;; rsp=0 , %496~2'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) %493~0'(= r ) 
; » _^ .. ⊢ ..
; .. //
	mov rdi,0
	mov rsi,r13
	push rsi
	imul rsi,1
	add rdi,rsi 
	add rdi,7
	push rdi 
	call mlc_s8
	pop rdi
	mov r14,rax
	lea rdi,[rax+7+rdi]
	std 
	mov QWORD [tmp],rcx 
	lea rsi,[LB_421+7-1]
	mov rcx,7
	rep movsb
	pop rax 
LB_423:
	cmp rax,0
	jz LB_424
	sub rax,1
	lea rsi,[LB_422+1-1]
	mov rcx,1
	rep movsb 
	jmp LB_423
LB_424:
	mov rcx,QWORD [tmp] 
;; rsp=0 , %547~1'(= {| l |} ) %546~0'(= r ) %496~2'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) 
; ∎ { 0'(= r ) 1'(= {| l |} ) }
; .dlt.ptn 2'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] )
;	.dlt adt ⊢ _  
; .mov_ptn2 { 0'(= r ) 1'(= {| l |} ) } ⊢ { 0'(= r ) 1'(= {| l |} ) }
	ret
LB_420:
;; ?. 1'(= a17◂ [ a9◂ [ ]{| l |}] ) ⊢ 6(<7)◂2'(= r )
	mov rax,QWORD [rdi+8]
	mov r8,rax
;; rsp=0 , %495~2'(= r ) %493~0'(= r ) 
; » _^ .. ⊢ ..
; .. //
	mov rdi,0
	mov rsi,r13
	push rsi
	imul rsi,1
	add rdi,rsi 
	add rdi,5
	push rdi 
	call mlc_s8
	pop rdi
	mov r14,rax
	lea rdi,[rax+7+rdi]
	std 
	mov QWORD [tmp],rcx 
	lea rsi,[LB_425+5-1]
	mov rcx,5
	rep movsb
	pop rax 
LB_427:
	cmp rax,0
	jz LB_428
	sub rax,1
	lea rsi,[LB_426+1-1]
	mov rcx,1
	rep movsb 
	jmp LB_427
LB_428:
	mov rcx,QWORD [tmp] 
;; rsp=0 , %549~1'(= {| l |} ) %548~0'(= r ) %495~2'(= r ) 
; ∎ { 0'(= r ) 1'(= {| l |} ) }
; .dlt.ptn 2'(= r )
; .mov_ptn2 { 0'(= r ) 1'(= {| l |} ) } ⊢ { 0'(= r ) 1'(= {| l |} ) }
	ret
ETR_133: ; pnt_lc_line { 0'(= r ) 1'(= a19◂ [ a9◂ [ ]{| l |}] ) } ⊢ { 0'(= r ) 1'(= {| l |} ) } : ({ _r64 _t19◂_s8◂_t9 }→{ _r64 _s8 })
;; rsp=0 , %551~1'(= a19◂ [ a9◂ [ ]{| l |}] ) %550~0'(= r ) 
;; ?; 1'(= a19◂ [ a9◂ [ ]{| l |}] ) ⊢ 0(<4)◂{ 2'(= a9◂ [ ] ) 3'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) 4'(= a8◂ [ a13◂ [ {| l |}]] ) }
	mov rdi,r14
	cmp BYTE [rdi+6],0
	jnz LB_429
	mov rdi,r14
	mov rdi,QWORD [rdi+8+8*0]
	mov r8,rdi
	mov rdi,r14
	mov rdi,QWORD [rdi+8+8*1]
	mov r9,rdi
	mov rdi,r14
	mov rdi,QWORD [rdi+8+8*2]
	mov r10,rdi
;; rsp=0 , %554~4'(= a8◂ [ a13◂ [ {| l |}]] ) %553~3'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) %552~2'(= a9◂ [ ] ) %550~0'(= r ) 
; rsp_d=0, #97 3'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) ⊢ 1'(= {| l |} )
	sub rsp,24
	mov QWORD [rsp+8*0],r13
	mov QWORD [rsp+8*1],r8
	mov QWORD [rsp+8*2],r10
; .mov_ptn2 3'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) ⊢ 0'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] )
; .mov_ptn 3'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) ⊢ 0'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] )
	mov rax,r9
	mov r13,rax
	call ETR_97

	mov r10,QWORD [rsp-8+8*3]
	mov r8,QWORD [rsp-8+8*2]
	mov rax,QWORD [rsp-8+8*1]
	mov r14,r13
	mov r13,rax
	add rsp,24
;; rsp=0 , %555~1'(= {| l |} ) %554~4'(= a8◂ [ a13◂ [ {| l |}]] ) %552~2'(= a9◂ [ ] ) %550~0'(= r ) 
; rsp_d=0, #99 4'(= a8◂ [ a13◂ [ {| l |}]] ) ⊢ 3'(= {| l |} )
	sub rsp,24
	mov QWORD [rsp+8*0],r13
	mov QWORD [rsp+8*1],r14
	mov QWORD [rsp+8*2],r8
; .mov_ptn2 4'(= a8◂ [ a13◂ [ {| l |}]] ) ⊢ 0'(= a8◂ [ a13◂ [ {| l |}]] )
; .mov_ptn 4'(= a8◂ [ a13◂ [ {| l |}]] ) ⊢ 0'(= a8◂ [ a13◂ [ {| l |}]] )
	mov rax,r10
	mov r13,rax
	call ETR_99

	mov r8,QWORD [rsp-8+8*3]
	mov r14,QWORD [rsp-8+8*2]
	mov rax,QWORD [rsp-8+8*1]
	mov r9,r13
	mov r13,rax
	add rsp,24
;; rsp=0 , %556~3'(= {| l |} ) %555~1'(= {| l |} ) %552~2'(= a9◂ [ ] ) %550~0'(= r ) 
; rsp_d=0, #82 2'(= a9◂ [ ] ) ⊢ 2'(= {| l |} )
	sub rsp,24
	mov QWORD [rsp+8*0],r13
	mov QWORD [rsp+8*1],r14
	mov QWORD [rsp+8*2],r9
; .mov_ptn2 2'(= a9◂ [ ] ) ⊢ 0'(= a9◂ [ ] )
; .mov_ptn 2'(= a9◂ [ ] ) ⊢ 0'(= a9◂ [ ] )
	mov rax,r8
	mov r13,rax
	call ETR_82

	mov r9,QWORD [rsp-8+8*3]
	mov r14,QWORD [rsp-8+8*2]
	mov rax,QWORD [rsp-8+8*1]
	mov r8,r13
	mov r13,rax
	add rsp,24
;; rsp=0 , %557~2'(= {| l |} ) %556~3'(= {| l |} ) %555~1'(= {| l |} ) %550~0'(= r ) 
; » _^ .. ⊢ ..
; .. //
	mov rdi,0
	mov rsi,r13
	push rsi
	imul rsi,1
	add rdi,rsi 
	mov rsi,r8
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[rsi] 
	add rdi,rax 
	push rax
	push rsi
	mov rsi,r14
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[rsi] 
	add rdi,rax 
	push rax
	push rsi
	mov rsi,r9
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[rsi] 
	add rdi,rax 
	push rax
	push rsi
	add rdi,7
	push rdi 
	call mlc_s8
	pop rdi
	mov r10,rax
	lea rdi,[rax+7+rdi]
	std 
	mov QWORD [tmp],rcx 
	lea rsi,[LB_430+1-1]
	mov rcx,1
	rep movsb
	pop rsi 
	pop rcx
	lea rsi,[rsi+7+rcx]
	rep movsb
	lea rsi,[LB_431+5-1]
	mov rcx,5
	rep movsb
	pop rsi 
	pop rcx
	lea rsi,[rsi+7+rcx]
	rep movsb
	lea rsi,[LB_432+1-1]
	mov rcx,1
	rep movsb
	pop rsi 
	pop rcx
	lea rsi,[rsi+7+rcx]
	rep movsb
	pop rax 
LB_434:
	cmp rax,0
	jz LB_435
	sub rax,1
	lea rsi,[LB_433+1-1]
	mov rcx,1
	rep movsb 
	jmp LB_434
LB_435:
	mov rcx,QWORD [tmp] 
;; rsp=0 , %562~4'(= {| l |} ) %561~3'(= {| l |} ) %560~1'(= {| l |} ) %559~2'(= {| l |} ) %558~0'(= r ) 
; ∎ { 0'(= r ) 4'(= {| l |} ) }
; .dlt.ptn 3'(= {| l |} )
	mov rdi,r9
	call free_s8 
; .dlt.ptn 1'(= {| l |} )
	mov rdi,r14
	call free_s8 
; .dlt.ptn 2'(= {| l |} )
	mov rdi,r8
	call free_s8 
; .mov_ptn2 { 0'(= r ) 4'(= {| l |} ) } ⊢ { 0'(= r ) 1'(= {| l |} ) }
; .mov_ptn 4'(= {| l |} ) ⊢ 1'(= {| l |} )
	mov rax,r10
	mov r14,rax
	ret
LB_429:
;; ?; 1'(= a19◂ [ a9◂ [ ]{| l |}] ) ⊢ 1(<4)◂{ 2'(= a12◂ [ a9◂ [ ]{| l |}] ) 3'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) 4'(= a8◂ [ a13◂ [ {| l |}]] ) }
	mov rdi,r14
	cmp BYTE [rdi+6],1
	jnz LB_436
	mov rdi,r14
	mov rdi,QWORD [rdi+8+8*0]
	mov r8,rdi
	mov rdi,r14
	mov rdi,QWORD [rdi+8+8*1]
	mov r9,rdi
	mov rdi,r14
	mov rdi,QWORD [rdi+8+8*2]
	mov r10,rdi
;; rsp=0 , %565~4'(= a8◂ [ a13◂ [ {| l |}]] ) %564~3'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) %563~2'(= a12◂ [ a9◂ [ ]{| l |}] ) %550~0'(= r ) 
; #78 2'(= a12◂ [ a9◂ [ ]{| l |}] ) ⊢ 1(<2)◂2'(= a12◂ [ a9◂ [ ]{| l |}] )
;; rsp=0 , %566~1(<2)◂2'(= a12◂ [ a9◂ [ ]{| l |}] ) %565~4'(= a8◂ [ a13◂ [ {| l |}]] ) %564~3'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) %550~0'(= r ) 
; rsp_d=0, #97 1(<2)◂2'(= a12◂ [ a9◂ [ ]{| l |}] ) ⊢ 1'(= {| l |} )
	sub rsp,24
	mov QWORD [rsp+8*0],r13
	mov QWORD [rsp+8*1],r9
	mov QWORD [rsp+8*2],r10
; .mov_ptn2 1(<2)◂2'(= a12◂ [ a9◂ [ ]{| l |}] ) ⊢ 0'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] )
; .mov_ptn 1(<2)◂2'(= a12◂ [ a9◂ [ ]{| l |}] ) ⊢ 0'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] )
	mov rax,r8
	mov rdi,rax
	mov rax,r15
	mov r15,QWORD [r15] 
	mov QWORD [rax],0
	mov BYTE [rax+6],1
	mov QWORD [rax+8],rdi
	mov r13,rax
	call ETR_97

	mov r10,QWORD [rsp-8+8*3]
	mov r9,QWORD [rsp-8+8*2]
	mov rax,QWORD [rsp-8+8*1]
	mov r14,r13
	mov r13,rax
	add rsp,24
;; rsp=0 , %567~1'(= {| l |} ) %565~4'(= a8◂ [ a13◂ [ {| l |}]] ) %564~3'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) %550~0'(= r ) 
; rsp_d=0, #97 3'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) ⊢ 2'(= {| l |} )
	sub rsp,24
	mov QWORD [rsp+8*0],r13
	mov QWORD [rsp+8*1],r14
	mov QWORD [rsp+8*2],r10
; .mov_ptn2 3'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) ⊢ 0'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] )
; .mov_ptn 3'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) ⊢ 0'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] )
	mov rax,r9
	mov r13,rax
	call ETR_97

	mov r10,QWORD [rsp-8+8*3]
	mov r14,QWORD [rsp-8+8*2]
	mov rax,QWORD [rsp-8+8*1]
	mov r8,r13
	mov r13,rax
	add rsp,24
;; rsp=0 , %568~2'(= {| l |} ) %567~1'(= {| l |} ) %565~4'(= a8◂ [ a13◂ [ {| l |}]] ) %550~0'(= r ) 
; rsp_d=0, #99 4'(= a8◂ [ a13◂ [ {| l |}]] ) ⊢ 3'(= {| l |} )
	sub rsp,24
	mov QWORD [rsp+8*0],r13
	mov QWORD [rsp+8*1],r14
	mov QWORD [rsp+8*2],r8
; .mov_ptn2 4'(= a8◂ [ a13◂ [ {| l |}]] ) ⊢ 0'(= a8◂ [ a13◂ [ {| l |}]] )
; .mov_ptn 4'(= a8◂ [ a13◂ [ {| l |}]] ) ⊢ 0'(= a8◂ [ a13◂ [ {| l |}]] )
	mov rax,r10
	mov r13,rax
	call ETR_99

	mov r8,QWORD [rsp-8+8*3]
	mov r14,QWORD [rsp-8+8*2]
	mov rax,QWORD [rsp-8+8*1]
	mov r9,r13
	mov r13,rax
	add rsp,24
;; rsp=0 , %569~3'(= {| l |} ) %568~2'(= {| l |} ) %567~1'(= {| l |} ) %550~0'(= r ) 
; » _^ .. ⊢ ..
; .. //
	mov rdi,0
	mov rsi,r13
	push rsi
	imul rsi,1
	add rdi,rsi 
	mov rsi,r14
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[rsi] 
	add rdi,rax 
	push rax
	push rsi
	mov rsi,r8
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[rsi] 
	add rdi,rax 
	push rax
	push rsi
	mov rsi,r9
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[rsi] 
	add rdi,rax 
	push rax
	push rsi
	add rdi,11
	push rdi 
	call mlc_s8
	pop rdi
	mov r10,rax
	lea rdi,[rax+7+rdi]
	std 
	mov QWORD [tmp],rcx 
	lea rsi,[LB_437+1-1]
	mov rcx,1
	rep movsb
	pop rsi 
	pop rcx
	lea rsi,[rsi+7+rcx]
	rep movsb
	lea rsi,[LB_438+5-1]
	mov rcx,5
	rep movsb
	pop rsi 
	pop rcx
	lea rsi,[rsi+7+rcx]
	rep movsb
	lea rsi,[LB_439+1-1]
	mov rcx,1
	rep movsb
	pop rsi 
	pop rcx
	lea rsi,[rsi+7+rcx]
	rep movsb
	lea rsi,[LB_440+4-1]
	mov rcx,4
	rep movsb
	pop rax 
LB_442:
	cmp rax,0
	jz LB_443
	sub rax,1
	lea rsi,[LB_441+1-1]
	mov rcx,1
	rep movsb 
	jmp LB_442
LB_443:
	mov rcx,QWORD [tmp] 
;; rsp=0 , %574~4'(= {| l |} ) %573~3'(= {| l |} ) %572~2'(= {| l |} ) %571~1'(= {| l |} ) %570~0'(= r ) 
; ∎ { 0'(= r ) 4'(= {| l |} ) }
; .dlt.ptn 3'(= {| l |} )
	mov rdi,r9
	call free_s8 
; .dlt.ptn 2'(= {| l |} )
	mov rdi,r8
	call free_s8 
; .dlt.ptn 1'(= {| l |} )
	mov rdi,r14
	call free_s8 
; .mov_ptn2 { 0'(= r ) 4'(= {| l |} ) } ⊢ { 0'(= r ) 1'(= {| l |} ) }
; .mov_ptn 4'(= {| l |} ) ⊢ 1'(= {| l |} )
	mov rax,r10
	mov r14,rax
	ret
LB_436:
;; ?; 1'(= a19◂ [ a9◂ [ ]{| l |}] ) ⊢ 2(<4)◂{ 2'(= a11◂ [ a9◂ [ ]] ) 3'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) 4'(= a8◂ [ a13◂ [ {| l |}]] ) }
	mov rdi,r14
	cmp BYTE [rdi+6],2
	jnz LB_444
	mov rdi,r14
	mov rdi,QWORD [rdi+8+8*0]
	mov r8,rdi
	mov rdi,r14
	mov rdi,QWORD [rdi+8+8*1]
	mov r9,rdi
	mov rdi,r14
	mov rdi,QWORD [rdi+8+8*2]
	mov r10,rdi
;; rsp=0 , %577~4'(= a8◂ [ a13◂ [ {| l |}]] ) %576~3'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) %575~2'(= a11◂ [ a9◂ [ ]] ) %550~0'(= r ) 
; rsp_d=0, #97 3'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) ⊢ 1'(= {| l |} )
	sub rsp,24
	mov QWORD [rsp+8*0],r13
	mov QWORD [rsp+8*1],r8
	mov QWORD [rsp+8*2],r10
; .mov_ptn2 3'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) ⊢ 0'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] )
; .mov_ptn 3'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) ⊢ 0'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] )
	mov rax,r9
	mov r13,rax
	call ETR_97

	mov r10,QWORD [rsp-8+8*3]
	mov r8,QWORD [rsp-8+8*2]
	mov rax,QWORD [rsp-8+8*1]
	mov r14,r13
	mov r13,rax
	add rsp,24
;; rsp=0 , %578~1'(= {| l |} ) %577~4'(= a8◂ [ a13◂ [ {| l |}]] ) %575~2'(= a11◂ [ a9◂ [ ]] ) %550~0'(= r ) 
; rsp_d=0, #99 4'(= a8◂ [ a13◂ [ {| l |}]] ) ⊢ 3'(= {| l |} )
	sub rsp,24
	mov QWORD [rsp+8*0],r13
	mov QWORD [rsp+8*1],r14
	mov QWORD [rsp+8*2],r8
; .mov_ptn2 4'(= a8◂ [ a13◂ [ {| l |}]] ) ⊢ 0'(= a8◂ [ a13◂ [ {| l |}]] )
; .mov_ptn 4'(= a8◂ [ a13◂ [ {| l |}]] ) ⊢ 0'(= a8◂ [ a13◂ [ {| l |}]] )
	mov rax,r10
	mov r13,rax
	call ETR_99

	mov r8,QWORD [rsp-8+8*3]
	mov r14,QWORD [rsp-8+8*2]
	mov rax,QWORD [rsp-8+8*1]
	mov r9,r13
	mov r13,rax
	add rsp,24
;; rsp=0 , %579~3'(= {| l |} ) %578~1'(= {| l |} ) %575~2'(= a11◂ [ a9◂ [ ]] ) %550~0'(= r ) 
; rsp_d=0, #88 2'(= a11◂ [ a9◂ [ ]] ) ⊢ 2'(= {| l |} )
	sub rsp,24
	mov QWORD [rsp+8*0],r13
	mov QWORD [rsp+8*1],r14
	mov QWORD [rsp+8*2],r9
; .mov_ptn2 2'(= a11◂ [ a9◂ [ ]] ) ⊢ 0'(= a11◂ [ a9◂ [ ]] )
; .mov_ptn 2'(= a11◂ [ a9◂ [ ]] ) ⊢ 0'(= a11◂ [ a9◂ [ ]] )
	mov rax,r8
	mov r13,rax
	call ETR_88

	mov r9,QWORD [rsp-8+8*3]
	mov r14,QWORD [rsp-8+8*2]
	mov rax,QWORD [rsp-8+8*1]
	mov r8,r13
	mov r13,rax
	add rsp,24
;; rsp=0 , %580~2'(= {| l |} ) %579~3'(= {| l |} ) %578~1'(= {| l |} ) %550~0'(= r ) 
; » _^ .. ⊢ ..
; .. //
	mov rdi,0
	mov rsi,r13
	push rsi
	imul rsi,1
	add rdi,rsi 
	mov rsi,r8
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[rsi] 
	add rdi,rax 
	push rax
	push rsi
	mov rsi,r14
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[rsi] 
	add rdi,rax 
	push rax
	push rsi
	mov rsi,r9
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[rsi] 
	add rdi,rax 
	push rax
	push rsi
	add rdi,10
	push rdi 
	call mlc_s8
	pop rdi
	mov r10,rax
	lea rdi,[rax+7+rdi]
	std 
	mov QWORD [tmp],rcx 
	lea rsi,[LB_445+1-1]
	mov rcx,1
	rep movsb
	pop rsi 
	pop rcx
	lea rsi,[rsi+7+rcx]
	rep movsb
	lea rsi,[LB_446+5-1]
	mov rcx,5
	rep movsb
	pop rsi 
	pop rcx
	lea rsi,[rsi+7+rcx]
	rep movsb
	lea rsi,[LB_447+1-1]
	mov rcx,1
	rep movsb
	pop rsi 
	pop rcx
	lea rsi,[rsi+7+rcx]
	rep movsb
	lea rsi,[LB_448+3-1]
	mov rcx,3
	rep movsb
	pop rax 
LB_450:
	cmp rax,0
	jz LB_451
	sub rax,1
	lea rsi,[LB_449+1-1]
	mov rcx,1
	rep movsb 
	jmp LB_450
LB_451:
	mov rcx,QWORD [tmp] 
;; rsp=0 , %585~4'(= {| l |} ) %584~3'(= {| l |} ) %583~1'(= {| l |} ) %582~2'(= {| l |} ) %581~0'(= r ) 
; ∎ { 0'(= r ) 4'(= {| l |} ) }
; .dlt.ptn 3'(= {| l |} )
	mov rdi,r9
	call free_s8 
; .dlt.ptn 1'(= {| l |} )
	mov rdi,r14
	call free_s8 
; .dlt.ptn 2'(= {| l |} )
	mov rdi,r8
	call free_s8 
; .mov_ptn2 { 0'(= r ) 4'(= {| l |} ) } ⊢ { 0'(= r ) 1'(= {| l |} ) }
; .mov_ptn 4'(= {| l |} ) ⊢ 1'(= {| l |} )
	mov rax,r10
	mov r14,rax
	ret
LB_444:
;; ?; 1'(= a19◂ [ a9◂ [ ]{| l |}] ) ⊢ 3(<4)◂{ 2'(= a2◂ [ a16◂ [ a9◂ [ ]]] ) 3'(= a2◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) 4'(= a2◂ [ a13◂ [ {| l |}]] ) }
	mov rdi,r14
	mov rdi,QWORD [rdi+8+8*0]
	mov r8,rdi
	mov rdi,r14
	mov rdi,QWORD [rdi+8+8*1]
	mov r9,rdi
	mov rdi,r14
	mov rdi,QWORD [rdi+8+8*2]
	mov r10,rdi
;; rsp=0 , %588~4'(= a2◂ [ a13◂ [ {| l |}]] ) %587~3'(= a2◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) %586~2'(= a2◂ [ a16◂ [ a9◂ [ ]]] ) %550~0'(= r ) 
; » _^ .. ⊢ ..
; .. //
	mov rdi,0
	mov rsi,r13
	push rsi
	imul rsi,1
	add rdi,rsi 
	add rdi,23
	push rdi 
	call mlc_s8
	pop rdi
	mov r14,rax
	lea rdi,[rax+7+rdi]
	std 
	mov QWORD [tmp],rcx 
	lea rsi,[LB_452+7-1]
	mov rcx,7
	rep movsb
	lea rsi,[LB_453+1-1]
	mov rcx,1
	rep movsb
	lea rsi,[LB_454+7-1]
	mov rcx,7
	rep movsb
	lea rsi,[LB_455+8-1]
	mov rcx,8
	rep movsb
	pop rax 
LB_457:
	cmp rax,0
	jz LB_458
	sub rax,1
	lea rsi,[LB_456+1-1]
	mov rcx,1
	rep movsb 
	jmp LB_457
LB_458:
	mov rcx,QWORD [tmp] 
;; rsp=0 , %590~1'(= {| l |} ) %589~0'(= r ) %588~4'(= a2◂ [ a13◂ [ {| l |}]] ) %587~3'(= a2◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) %586~2'(= a2◂ [ a16◂ [ a9◂ [ ]]] ) 
; ∎ { 0'(= r ) 1'(= {| l |} ) }
; .dlt.ptn 4'(= a2◂ [ a13◂ [ {| l |}]] )
;	.dlt adt ⊢ _  
; .dlt.ptn 3'(= a2◂ [ a12◂ [ a9◂ [ ]{| l |}]] )
;	.dlt adt ⊢ _  
; .dlt.ptn 2'(= a2◂ [ a16◂ [ a9◂ [ ]]] )
;	.dlt adt ⊢ _  
; .mov_ptn2 { 0'(= r ) 1'(= {| l |} ) } ⊢ { 0'(= r ) 1'(= {| l |} ) }
	ret
ETR_134: ; pnt_lc_mtc { 0'(= r ) 1'(= a7◂ [ *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}] ) } ⊢ { 0'(= r ) 1'(= {| l |} ) } : ({ _r64 _t7◂{ _lst◂_t21◂_s8◂_t9 _t20◂_s8◂_t9 } }→{ _r64 _s8 })
;; rsp=0 , %592~1'(= a7◂ [ *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}] ) %591~0'(= r ) 
;; ?; 1'(= a7◂ [ *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}] ) ⊢ 0(<2)◂{ { 3'(= a2◂ [ a21◂ [ a9◂ [ ]{| l |}]] ) 4'(= a20◂ [ a9◂ [ ]{| l |}] ) } 5'(= a7◂ [ *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}] ) }
	mov rdi,r14
	cmp BYTE [rdi+6],0
	jnz LB_459
	mov rdi,r14
	mov rdi,QWORD [rdi+8+8*0]
	mov r8,rdi
	mov rdi,r8
	mov rdi,QWORD [rdi+8+8*0]
	mov r9,rdi
	mov rdi,r8
	mov rdi,QWORD [rdi+8+8*1]
	mov r10,rdi
	mov rdi,r14
	mov rdi,QWORD [rdi+8+8*1]
	mov r11,rdi
;; rsp=0 , %595~5'(= a7◂ [ *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}] ) %594~4'(= a20◂ [ a9◂ [ ]{| l |}] ) %593~3'(= a2◂ [ a21◂ [ a9◂ [ ]{| l |}]] ) %591~0'(= r ) 
; rsp_d=0, #134 { 0'(= r ) 5'(= a7◂ [ *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}] ) } ⊢ { 0'(= r ) 1'(= {| l |} ) }
	sub rsp,16
	mov QWORD [rsp+8*0],r9
	mov QWORD [rsp+8*1],r10
; .mov_ptn2 { 0'(= r ) 5'(= a7◂ [ *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}] ) } ⊢ { 0'(= r ) 1'(= a7◂ [ *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}] ) }
; .mov_ptn 5'(= a7◂ [ *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}] ) ⊢ 1'(= a7◂ [ *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}] )
	mov rax,r11
	mov r14,rax
	call ETR_134

	mov r10,QWORD [rsp-8+8*2]
	mov r9,QWORD [rsp-8+8*1]
	add rsp,16
;; rsp=0 , %597~1'(= {| l |} ) %596~0'(= r ) %594~4'(= a20◂ [ a9◂ [ ]{| l |}] ) %593~3'(= a2◂ [ a21◂ [ a9◂ [ ]{| l |}]] ) 
;; ? 4'(= a20◂ [ a9◂ [ ]{| l |}] ) ⊢ 0(<3)◂2'(= a7◂ [ *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}] )
	mov rdi,r10
	cmp BYTE [rdi+6],0
	jnz LB_460
	mov rax,QWORD [rdi+8]
	mov r8,rax
;; rsp=0 , %601~2'(= a7◂ [ *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}] ) %597~1'(= {| l |} ) %596~0'(= r ) %593~3'(= a2◂ [ a21◂ [ a9◂ [ ]{| l |}]] ) 
; rsp_d=0, #134 { 0'(= r ) 2'(= a7◂ [ *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}] ) } ⊢ { 0'(= r ) 2'(= {| l |} ) }
	sub rsp,16
	mov QWORD [rsp+8*0],r14
	mov QWORD [rsp+8*1],r9
; .mov_ptn2 { 0'(= r ) 2'(= a7◂ [ *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}] ) } ⊢ { 0'(= r ) 1'(= a7◂ [ *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}] ) }
; .mov_ptn 2'(= a7◂ [ *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}] ) ⊢ 1'(= a7◂ [ *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}] )
	mov rax,r8
	mov r14,rax
	call ETR_134

	mov r9,QWORD [rsp-8+8*2]
	mov rax,QWORD [rsp-8+8*1]
	mov r8,r14
	mov r14,rax
	add rsp,16
;; rsp=0 , %603~2'(= {| l |} ) %602~0'(= r ) %597~1'(= {| l |} ) %593~3'(= a2◂ [ a21◂ [ a9◂ [ ]{| l |}]] ) 
; » _^ .. ⊢ ..
; .. //
	mov rdi,0
	mov rsi,r13
	push rsi
	imul rsi,1
	add rdi,rsi 
	mov rsi,r8
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[rsi] 
	add rdi,rax 
	push rax
	push rsi
	mov rsi,r14
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[rsi] 
	add rdi,rax 
	push rax
	push rsi
	add rdi,9
	push rdi 
	call mlc_s8
	pop rdi
	mov r10,rax
	lea rdi,[rax+7+rdi]
	std 
	mov QWORD [tmp],rcx 
	pop rsi 
	pop rcx
	lea rsi,[rsi+7+rcx]
	rep movsb
	pop rsi 
	pop rcx
	lea rsi,[rsi+7+rcx]
	rep movsb
	lea rsi,[LB_461+9-1]
	mov rcx,9
	rep movsb
	pop rax 
LB_463:
	cmp rax,0
	jz LB_464
	sub rax,1
	lea rsi,[LB_462+1-1]
	mov rcx,1
	rep movsb 
	jmp LB_463
LB_464:
	mov rcx,QWORD [tmp] 
;; rsp=0 , %607~4'(= {| l |} ) %606~2'(= {| l |} ) %605~1'(= {| l |} ) %604~0'(= r ) %593~3'(= a2◂ [ a21◂ [ a9◂ [ ]{| l |}]] ) 
; ∎ { 0'(= r ) 4'(= {| l |} ) }
; .dlt.ptn 2'(= {| l |} )
	mov rdi,r8
	call free_s8 
; .dlt.ptn 1'(= {| l |} )
	mov rdi,r14
	call free_s8 
; .dlt.ptn 3'(= a2◂ [ a21◂ [ a9◂ [ ]{| l |}]] )
;	.dlt adt ⊢ _  
; .mov_ptn2 { 0'(= r ) 4'(= {| l |} ) } ⊢ { 0'(= r ) 1'(= {| l |} ) }
; .mov_ptn 4'(= {| l |} ) ⊢ 1'(= {| l |} )
	mov rax,r10
	mov r14,rax
	ret
LB_460:
;; ? 4'(= a20◂ [ a9◂ [ ]{| l |}] ) ⊢ 1(<3)◂{ 2'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) 5'(= a7◂ [ *{ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}] ) }
	mov rdi,r10
	cmp BYTE [rdi+6],1
	jnz LB_465
	mov rdi,r10
	mov rdi,QWORD [rdi+8+8*0]
	mov r8,rdi
	mov rdi,r10
	mov rdi,QWORD [rdi+8+8*1]
	mov r11,rdi
;; rsp=0 , %600~5'(= a7◂ [ *{ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}] ) %599~2'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) %597~1'(= {| l |} ) %596~0'(= r ) %593~3'(= a2◂ [ a21◂ [ a9◂ [ ]{| l |}]] ) 
; rsp_d=0, #97 2'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) ⊢ 2'(= {| l |} )
	sub rsp,32
	mov QWORD [rsp+8*0],r13
	mov QWORD [rsp+8*1],r14
	mov QWORD [rsp+8*2],r9
	mov QWORD [rsp+8*3],r11
; .mov_ptn2 2'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) ⊢ 0'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] )
; .mov_ptn 2'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) ⊢ 0'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] )
	mov rax,r8
	mov r13,rax
	call ETR_97

	mov r11,QWORD [rsp-8+8*4]
	mov r9,QWORD [rsp-8+8*3]
	mov r14,QWORD [rsp-8+8*2]
	mov rax,QWORD [rsp-8+8*1]
	mov r8,r13
	mov r13,rax
	add rsp,32
;; rsp=0 , %608~2'(= {| l |} ) %600~5'(= a7◂ [ *{ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}] ) %597~1'(= {| l |} ) %596~0'(= r ) %593~3'(= a2◂ [ a21◂ [ a9◂ [ ]{| l |}]] ) 
; rsp_d=0, #135 { 0'(= r ) 5'(= a7◂ [ *{ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}] ) } ⊢ { 0'(= r ) 4'(= {| l |} ) }
	sub rsp,24
	mov QWORD [rsp+8*0],r14
	mov QWORD [rsp+8*1],r8
	mov QWORD [rsp+8*2],r9
; .mov_ptn2 { 0'(= r ) 5'(= a7◂ [ *{ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}] ) } ⊢ { 0'(= r ) 1'(= a7◂ [ *{ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}] ) }
; .mov_ptn 5'(= a7◂ [ *{ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}] ) ⊢ 1'(= a7◂ [ *{ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}] )
	mov rax,r11
	mov r14,rax
	call ETR_135

	mov r9,QWORD [rsp-8+8*3]
	mov r8,QWORD [rsp-8+8*2]
	mov rax,QWORD [rsp-8+8*1]
	mov r10,r14
	mov r14,rax
	add rsp,24
;; rsp=0 , %610~4'(= {| l |} ) %609~0'(= r ) %608~2'(= {| l |} ) %597~1'(= {| l |} ) %593~3'(= a2◂ [ a21◂ [ a9◂ [ ]{| l |}]] ) 
; » _^ .. ⊢ ..
; .. //
	mov rdi,0
	mov rsi,r13
	push rsi
	imul rsi,1
	add rdi,rsi 
	mov rsi,r8
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[rsi] 
	add rdi,rax 
	push rax
	push rsi
	mov rsi,r10
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[rsi] 
	add rdi,rax 
	push rax
	push rsi
	mov rsi,r14
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[rsi] 
	add rdi,rax 
	push rax
	push rsi
	add rdi,14
	push rdi 
	call mlc_s8
	pop rdi
	mov r11,rax
	lea rdi,[rax+7+rdi]
	std 
	mov QWORD [tmp],rcx 
	pop rsi 
	pop rcx
	lea rsi,[rsi+7+rcx]
	rep movsb
	pop rsi 
	pop rcx
	lea rsi,[rsi+7+rcx]
	rep movsb
	lea rsi,[LB_466+5-1]
	mov rcx,5
	rep movsb
	pop rsi 
	pop rcx
	lea rsi,[rsi+7+rcx]
	rep movsb
	lea rsi,[LB_467+9-1]
	mov rcx,9
	rep movsb
	pop rax 
LB_469:
	cmp rax,0
	jz LB_470
	sub rax,1
	lea rsi,[LB_468+1-1]
	mov rcx,1
	rep movsb 
	jmp LB_469
LB_470:
	mov rcx,QWORD [tmp] 
;; rsp=0 , %615~5'(= {| l |} ) %614~4'(= {| l |} ) %613~1'(= {| l |} ) %612~2'(= {| l |} ) %611~0'(= r ) %593~3'(= a2◂ [ a21◂ [ a9◂ [ ]{| l |}]] ) 
; ∎ { 0'(= r ) 5'(= {| l |} ) }
; .dlt.ptn 4'(= {| l |} )
	mov rdi,r10
	call free_s8 
; .dlt.ptn 1'(= {| l |} )
	mov rdi,r14
	call free_s8 
; .dlt.ptn 2'(= {| l |} )
	mov rdi,r8
	call free_s8 
; .dlt.ptn 3'(= a2◂ [ a21◂ [ a9◂ [ ]{| l |}]] )
;	.dlt adt ⊢ _  
; .mov_ptn2 { 0'(= r ) 5'(= {| l |} ) } ⊢ { 0'(= r ) 1'(= {| l |} ) }
; .mov_ptn 5'(= {| l |} ) ⊢ 1'(= {| l |} )
	mov rax,r11
	mov r14,rax
	ret
LB_465:
;; ?. 4'(= a20◂ [ a9◂ [ ]{| l |}] ) ⊢ 2(<3)◂2'(= a17◂ [ a9◂ [ ]{| l |}] )
	mov rax,QWORD [rdi+8]
	mov r8,rax
;; rsp=0 , %598~2'(= a17◂ [ a9◂ [ ]{| l |}] ) %597~1'(= {| l |} ) %596~0'(= r ) %593~3'(= a2◂ [ a21◂ [ a9◂ [ ]{| l |}]] ) 
; _#9 0'(= r ) ⊢ 0'(= r )
	add r13,1
;; rsp=0 , %616~0'(= r ) %598~2'(= a17◂ [ a9◂ [ ]{| l |}] ) %597~1'(= {| l |} ) %593~3'(= a2◂ [ a21◂ [ a9◂ [ ]{| l |}]] ) 
; rsp_d=0, #132 { 0'(= r ) 2'(= a17◂ [ a9◂ [ ]{| l |}] ) } ⊢ { 0'(= r ) 2'(= {| l |} ) }
	sub rsp,16
	mov QWORD [rsp+8*0],r14
	mov QWORD [rsp+8*1],r9
; .mov_ptn2 { 0'(= r ) 2'(= a17◂ [ a9◂ [ ]{| l |}] ) } ⊢ { 0'(= r ) 1'(= a17◂ [ a9◂ [ ]{| l |}] ) }
; .mov_ptn 2'(= a17◂ [ a9◂ [ ]{| l |}] ) ⊢ 1'(= a17◂ [ a9◂ [ ]{| l |}] )
	mov rax,r8
	mov r14,rax
	call ETR_132

	mov r9,QWORD [rsp-8+8*2]
	mov rax,QWORD [rsp-8+8*1]
	mov r8,r14
	mov r14,rax
	add rsp,16
;; rsp=0 , %618~2'(= {| l |} ) %617~0'(= r ) %597~1'(= {| l |} ) %593~3'(= a2◂ [ a21◂ [ a9◂ [ ]{| l |}]] ) 
; _#10 0'(= r ) ⊢ 0'(= r )
	sub r13,1
;; rsp=0 , %619~0'(= r ) %618~2'(= {| l |} ) %597~1'(= {| l |} ) %593~3'(= a2◂ [ a21◂ [ a9◂ [ ]{| l |}]] ) 
; » _^ .. ⊢ ..
; .. //
	mov rdi,0
	mov rsi,r13
	push rsi
	imul rsi,1
	add rdi,rsi 
	mov rsi,r8
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[rsi] 
	add rdi,rax 
	push rax
	push rsi
	mov rsi,r14
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[rsi] 
	add rdi,rax 
	push rax
	push rsi
	add rdi,9
	push rdi 
	call mlc_s8
	pop rdi
	mov r10,rax
	lea rdi,[rax+7+rdi]
	std 
	mov QWORD [tmp],rcx 
	pop rsi 
	pop rcx
	lea rsi,[rsi+7+rcx]
	rep movsb
	pop rsi 
	pop rcx
	lea rsi,[rsi+7+rcx]
	rep movsb
	lea rsi,[LB_471+9-1]
	mov rcx,9
	rep movsb
	pop rax 
LB_473:
	cmp rax,0
	jz LB_474
	sub rax,1
	lea rsi,[LB_472+1-1]
	mov rcx,1
	rep movsb 
	jmp LB_473
LB_474:
	mov rcx,QWORD [tmp] 
;; rsp=0 , %623~4'(= {| l |} ) %622~2'(= {| l |} ) %621~1'(= {| l |} ) %620~0'(= r ) %593~3'(= a2◂ [ a21◂ [ a9◂ [ ]{| l |}]] ) 
; ∎ { 0'(= r ) 4'(= {| l |} ) }
; .dlt.ptn 2'(= {| l |} )
	mov rdi,r8
	call free_s8 
; .dlt.ptn 1'(= {| l |} )
	mov rdi,r14
	call free_s8 
; .dlt.ptn 3'(= a2◂ [ a21◂ [ a9◂ [ ]{| l |}]] )
;	.dlt adt ⊢ _  
; .mov_ptn2 { 0'(= r ) 4'(= {| l |} ) } ⊢ { 0'(= r ) 1'(= {| l |} ) }
; .mov_ptn 4'(= {| l |} ) ⊢ 1'(= {| l |} )
	mov rax,r10
	mov r14,rax
	ret
LB_459:
;; ?; 1'(= a7◂ [ *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}] ) ⊢ 1(<2)◂{ 2'(= a2◂ [ a21◂ [ a9◂ [ ]{| l |}]] ) 3'(= a20◂ [ a9◂ [ ]{| l |}] ) }
	mov rdi,r14
	mov rdi,QWORD [rdi+8+8*0]
	mov r8,rdi
	mov rdi,r14
	mov rdi,QWORD [rdi+8+8*1]
	mov r9,rdi
;; rsp=0 , %625~3'(= a20◂ [ a9◂ [ ]{| l |}] ) %624~2'(= a2◂ [ a21◂ [ a9◂ [ ]{| l |}]] ) %591~0'(= r ) 
;; ?; 3'(= a20◂ [ a9◂ [ ]{| l |}] ) ⊢ 0(<3)◂1'(= a7◂ [ *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}] )
	mov rdi,r9
	cmp BYTE [rdi+6],0
	jnz LB_475
	mov rax,QWORD [rdi+8]
	mov r14,rax
;; rsp=0 , %626~1'(= a7◂ [ *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}] ) %624~2'(= a2◂ [ a21◂ [ a9◂ [ ]{| l |}]] ) %591~0'(= r ) 
; rsp_d=0, #134 { 0'(= r ) 1'(= a7◂ [ *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}] ) } ⊢ { 0'(= r ) 1'(= {| l |} ) }
	sub rsp,8
	mov QWORD [rsp+8*0],r8
; .mov_ptn2 { 0'(= r ) 1'(= a7◂ [ *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}] ) } ⊢ { 0'(= r ) 1'(= a7◂ [ *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}] ) }
	call ETR_134

	mov r8,QWORD [rsp-8+8*1]
	add rsp,8
;; rsp=0 , %628~1'(= {| l |} ) %627~0'(= r ) %624~2'(= a2◂ [ a21◂ [ a9◂ [ ]{| l |}]] ) 
; » _^ .. ⊢ ..
; .. //
	mov rdi,0
	mov rsi,r13
	push rsi
	imul rsi,1
	add rdi,rsi 
	mov rsi,r14
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[rsi] 
	add rdi,rax 
	push rax
	push rsi
	add rdi,10
	push rdi 
	call mlc_s8
	pop rdi
	mov r9,rax
	lea rdi,[rax+7+rdi]
	std 
	mov QWORD [tmp],rcx 
	pop rsi 
	pop rcx
	lea rsi,[rsi+7+rcx]
	rep movsb
	lea rsi,[LB_476+10-1]
	mov rcx,10
	rep movsb
	pop rax 
LB_478:
	cmp rax,0
	jz LB_479
	sub rax,1
	lea rsi,[LB_477+1-1]
	mov rcx,1
	rep movsb 
	jmp LB_478
LB_479:
	mov rcx,QWORD [tmp] 
;; rsp=0 , %631~3'(= {| l |} ) %630~1'(= {| l |} ) %629~0'(= r ) %624~2'(= a2◂ [ a21◂ [ a9◂ [ ]{| l |}]] ) 
; ∎ { 0'(= r ) 3'(= {| l |} ) }
; .dlt.ptn 1'(= {| l |} )
	mov rdi,r14
	call free_s8 
; .dlt.ptn 2'(= a2◂ [ a21◂ [ a9◂ [ ]{| l |}]] )
;	.dlt adt ⊢ _  
; .mov_ptn2 { 0'(= r ) 3'(= {| l |} ) } ⊢ { 0'(= r ) 1'(= {| l |} ) }
; .mov_ptn 3'(= {| l |} ) ⊢ 1'(= {| l |} )
	mov rax,r9
	mov r14,rax
	ret
LB_475:
;; ?; 3'(= a20◂ [ a9◂ [ ]{| l |}] ) ⊢ 1(<3)◂{ 1'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) 4'(= a7◂ [ *{ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}] ) }
	mov rdi,r9
	cmp BYTE [rdi+6],1
	jnz LB_480
	mov rdi,r9
	mov rdi,QWORD [rdi+8+8*0]
	mov r14,rdi
	mov rdi,r9
	mov rdi,QWORD [rdi+8+8*1]
	mov r10,rdi
;; rsp=0 , %633~4'(= a7◂ [ *{ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}] ) %632~1'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) %624~2'(= a2◂ [ a21◂ [ a9◂ [ ]{| l |}]] ) %591~0'(= r ) 
; rsp_d=0, #97 1'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) ⊢ 1'(= {| l |} )
	sub rsp,24
	mov QWORD [rsp+8*0],r13
	mov QWORD [rsp+8*1],r8
	mov QWORD [rsp+8*2],r10
; .mov_ptn2 1'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) ⊢ 0'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] )
; .mov_ptn 1'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) ⊢ 0'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] )
	mov rax,r14
	mov r13,rax
	call ETR_97

	mov r10,QWORD [rsp-8+8*3]
	mov r8,QWORD [rsp-8+8*2]
	mov rax,QWORD [rsp-8+8*1]
	mov r14,r13
	mov r13,rax
	add rsp,24
;; rsp=0 , %634~1'(= {| l |} ) %633~4'(= a7◂ [ *{ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}] ) %624~2'(= a2◂ [ a21◂ [ a9◂ [ ]{| l |}]] ) %591~0'(= r ) 
; rsp_d=0, #135 { 0'(= r ) 4'(= a7◂ [ *{ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}] ) } ⊢ { 0'(= r ) 3'(= {| l |} ) }
	sub rsp,16
	mov QWORD [rsp+8*0],r14
	mov QWORD [rsp+8*1],r8
; .mov_ptn2 { 0'(= r ) 4'(= a7◂ [ *{ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}] ) } ⊢ { 0'(= r ) 1'(= a7◂ [ *{ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}] ) }
; .mov_ptn 4'(= a7◂ [ *{ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}] ) ⊢ 1'(= a7◂ [ *{ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}] )
	mov rax,r10
	mov r14,rax
	call ETR_135

	mov r8,QWORD [rsp-8+8*2]
	mov rax,QWORD [rsp-8+8*1]
	mov r9,r14
	mov r14,rax
	add rsp,16
;; rsp=0 , %636~3'(= {| l |} ) %635~0'(= r ) %634~1'(= {| l |} ) %624~2'(= a2◂ [ a21◂ [ a9◂ [ ]{| l |}]] ) 
; » _^ .. ⊢ ..
; .. //
	mov rdi,0
	mov rsi,r13
	push rsi
	imul rsi,1
	add rdi,rsi 
	mov rsi,r14
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[rsi] 
	add rdi,rax 
	push rax
	push rsi
	mov rsi,r9
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[rsi] 
	add rdi,rax 
	push rax
	push rsi
	add rdi,14
	push rdi 
	call mlc_s8
	pop rdi
	mov r10,rax
	lea rdi,[rax+7+rdi]
	std 
	mov QWORD [tmp],rcx 
	pop rsi 
	pop rcx
	lea rsi,[rsi+7+rcx]
	rep movsb
	lea rsi,[LB_481+5-1]
	mov rcx,5
	rep movsb
	pop rsi 
	pop rcx
	lea rsi,[rsi+7+rcx]
	rep movsb
	lea rsi,[LB_482+9-1]
	mov rcx,9
	rep movsb
	pop rax 
LB_484:
	cmp rax,0
	jz LB_485
	sub rax,1
	lea rsi,[LB_483+1-1]
	mov rcx,1
	rep movsb 
	jmp LB_484
LB_485:
	mov rcx,QWORD [tmp] 
;; rsp=0 , %640~4'(= {| l |} ) %639~3'(= {| l |} ) %638~1'(= {| l |} ) %637~0'(= r ) %624~2'(= a2◂ [ a21◂ [ a9◂ [ ]{| l |}]] ) 
; ∎ { 0'(= r ) 4'(= {| l |} ) }
; .dlt.ptn 3'(= {| l |} )
	mov rdi,r9
	call free_s8 
; .dlt.ptn 1'(= {| l |} )
	mov rdi,r14
	call free_s8 
; .dlt.ptn 2'(= a2◂ [ a21◂ [ a9◂ [ ]{| l |}]] )
;	.dlt adt ⊢ _  
; .mov_ptn2 { 0'(= r ) 4'(= {| l |} ) } ⊢ { 0'(= r ) 1'(= {| l |} ) }
; .mov_ptn 4'(= {| l |} ) ⊢ 1'(= {| l |} )
	mov rax,r10
	mov r14,rax
	ret
LB_480:
;; ?; 3'(= a20◂ [ a9◂ [ ]{| l |}] ) ⊢ 2(<3)◂1'(= a17◂ [ a9◂ [ ]{| l |}] )
	mov rax,QWORD [rdi+8]
	mov r14,rax
;; rsp=0 , %641~1'(= a17◂ [ a9◂ [ ]{| l |}] ) %624~2'(= a2◂ [ a21◂ [ a9◂ [ ]{| l |}]] ) %591~0'(= r ) 
; _#9 0'(= r ) ⊢ 0'(= r )
	add r13,1
;; rsp=0 , %642~0'(= r ) %641~1'(= a17◂ [ a9◂ [ ]{| l |}] ) %624~2'(= a2◂ [ a21◂ [ a9◂ [ ]{| l |}]] ) 
; rsp_d=0, #132 { 0'(= r ) 1'(= a17◂ [ a9◂ [ ]{| l |}] ) } ⊢ { 0'(= r ) 1'(= {| l |} ) }
	sub rsp,8
	mov QWORD [rsp+8*0],r8
; .mov_ptn2 { 0'(= r ) 1'(= a17◂ [ a9◂ [ ]{| l |}] ) } ⊢ { 0'(= r ) 1'(= a17◂ [ a9◂ [ ]{| l |}] ) }
	call ETR_132

	mov r8,QWORD [rsp-8+8*1]
	add rsp,8
;; rsp=0 , %644~1'(= {| l |} ) %643~0'(= r ) %624~2'(= a2◂ [ a21◂ [ a9◂ [ ]{| l |}]] ) 
; _#10 0'(= r ) ⊢ 0'(= r )
	sub r13,1
;; rsp=0 , %645~0'(= r ) %644~1'(= {| l |} ) %624~2'(= a2◂ [ a21◂ [ a9◂ [ ]{| l |}]] ) 
; » _^ .. ⊢ ..
; .. //
	mov rdi,0
	mov rsi,r13
	push rsi
	imul rsi,1
	add rdi,rsi 
	mov rsi,r14
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[rsi] 
	add rdi,rax 
	push rax
	push rsi
	add rdi,10
	push rdi 
	call mlc_s8
	pop rdi
	mov r9,rax
	lea rdi,[rax+7+rdi]
	std 
	mov QWORD [tmp],rcx 
	pop rsi 
	pop rcx
	lea rsi,[rsi+7+rcx]
	rep movsb
	lea rsi,[LB_486+10-1]
	mov rcx,10
	rep movsb
	pop rax 
LB_488:
	cmp rax,0
	jz LB_489
	sub rax,1
	lea rsi,[LB_487+1-1]
	mov rcx,1
	rep movsb 
	jmp LB_488
LB_489:
	mov rcx,QWORD [tmp] 
;; rsp=0 , %648~3'(= {| l |} ) %647~1'(= {| l |} ) %646~0'(= r ) %624~2'(= a2◂ [ a21◂ [ a9◂ [ ]{| l |}]] ) 
; ∎ { 0'(= r ) 3'(= {| l |} ) }
; .dlt.ptn 1'(= {| l |} )
	mov rdi,r14
	call free_s8 
; .dlt.ptn 2'(= a2◂ [ a21◂ [ a9◂ [ ]{| l |}]] )
;	.dlt adt ⊢ _  
; .mov_ptn2 { 0'(= r ) 3'(= {| l |} ) } ⊢ { 0'(= r ) 1'(= {| l |} ) }
; .mov_ptn 3'(= {| l |} ) ⊢ 1'(= {| l |} )
	mov rax,r9
	mov r14,rax
	ret
ETR_135: ; pnt_lc_id_mtc { 0'(= r ) 1'(= a7◂ [ *{ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}] ) } ⊢ { 0'(= r ) 1'(= {| l |} ) } : ({ _r64 _t7◂{ _t8◂_t14◂_s8◂_t9 _lst◂_t21◂_s8◂_t9 _t20◂_s8◂_t9 } }→{ _r64 _s8 })
;; rsp=0 , %650~1'(= a7◂ [ *{ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}] ) %649~0'(= r ) 
;; ?; 1'(= a7◂ [ *{ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}] ) ⊢ 0(<2)◂{ { 3'(= a8◂ [ a14◂ [ a9◂ [ ]{| l |}]] ) 4'(= a2◂ [ a21◂ [ a9◂ [ ]{| l |}]] ) 5'(= a20◂ [ a9◂ [ ]{| l |}] ) } 6'(= a7◂ [ *{ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}] ) }
	mov rdi,r14
	cmp BYTE [rdi+6],0
	jnz LB_490
	mov rdi,r14
	mov rdi,QWORD [rdi+8+8*0]
	mov r8,rdi
	mov rdi,r8
	mov rdi,QWORD [rdi+8+8*0]
	mov r9,rdi
	mov rdi,r8
	mov rdi,QWORD [rdi+8+8*1]
	mov r10,rdi
	mov rdi,r8
	mov rdi,QWORD [rdi+8+8*2]
	mov r11,rdi
	mov rdi,r14
	mov rdi,QWORD [rdi+8+8*1]
	mov rcx,rdi
;; rsp=0 , %654~6'(= a7◂ [ *{ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}] ) %653~5'(= a20◂ [ a9◂ [ ]{| l |}] ) %652~4'(= a2◂ [ a21◂ [ a9◂ [ ]{| l |}]] ) %651~3'(= a8◂ [ a14◂ [ a9◂ [ ]{| l |}]] ) %649~0'(= r ) 
; rsp_d=0, #101 3'(= a8◂ [ a14◂ [ a9◂ [ ]{| l |}]] ) ⊢ 1'(= {| l |} )
	sub rsp,32
	mov QWORD [rsp+8*0],r13
	mov QWORD [rsp+8*1],r10
	mov QWORD [rsp+8*2],r11
	mov QWORD [rsp+8*3],rcx
; .mov_ptn2 3'(= a8◂ [ a14◂ [ a9◂ [ ]{| l |}]] ) ⊢ 0'(= a8◂ [ a14◂ [ a9◂ [ ]{| l |}]] )
; .mov_ptn 3'(= a8◂ [ a14◂ [ a9◂ [ ]{| l |}]] ) ⊢ 0'(= a8◂ [ a14◂ [ a9◂ [ ]{| l |}]] )
	mov rax,r9
	mov r13,rax
	call ETR_101

	mov rcx,QWORD [rsp-8+8*4]
	mov r11,QWORD [rsp-8+8*3]
	mov r10,QWORD [rsp-8+8*2]
	mov rax,QWORD [rsp-8+8*1]
	mov r14,r13
	mov r13,rax
	add rsp,32
;; rsp=0 , %655~1'(= {| l |} ) %654~6'(= a7◂ [ *{ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}] ) %653~5'(= a20◂ [ a9◂ [ ]{| l |}] ) %652~4'(= a2◂ [ a21◂ [ a9◂ [ ]{| l |}]] ) %649~0'(= r ) 
; rsp_d=0, #135 { 0'(= r ) 6'(= a7◂ [ *{ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}] ) } ⊢ { 0'(= r ) 2'(= {| l |} ) }
	sub rsp,24
	mov QWORD [rsp+8*0],r14
	mov QWORD [rsp+8*1],r10
	mov QWORD [rsp+8*2],r11
; .mov_ptn2 { 0'(= r ) 6'(= a7◂ [ *{ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}] ) } ⊢ { 0'(= r ) 1'(= a7◂ [ *{ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}] ) }
; .mov_ptn 6'(= a7◂ [ *{ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}] ) ⊢ 1'(= a7◂ [ *{ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}] )
	mov rax,rcx
	mov r14,rax
	call ETR_135

	mov r11,QWORD [rsp-8+8*3]
	mov r10,QWORD [rsp-8+8*2]
	mov rax,QWORD [rsp-8+8*1]
	mov r8,r14
	mov r14,rax
	add rsp,24
;; rsp=0 , %657~2'(= {| l |} ) %656~0'(= r ) %655~1'(= {| l |} ) %653~5'(= a20◂ [ a9◂ [ ]{| l |}] ) %652~4'(= a2◂ [ a21◂ [ a9◂ [ ]{| l |}]] ) 
;; ? 5'(= a20◂ [ a9◂ [ ]{| l |}] ) ⊢ 0(<3)◂3'(= a7◂ [ *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}] )
	mov rdi,r11
	cmp BYTE [rdi+6],0
	jnz LB_491
	mov rax,QWORD [rdi+8]
	mov r9,rax
;; rsp=0 , %661~3'(= a7◂ [ *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}] ) %657~2'(= {| l |} ) %656~0'(= r ) %655~1'(= {| l |} ) %652~4'(= a2◂ [ a21◂ [ a9◂ [ ]{| l |}]] ) 
; rsp_d=0, #134 { 0'(= r ) 3'(= a7◂ [ *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}] ) } ⊢ { 0'(= r ) 3'(= {| l |} ) }
	sub rsp,24
	mov QWORD [rsp+8*0],r14
	mov QWORD [rsp+8*1],r8
	mov QWORD [rsp+8*2],r10
; .mov_ptn2 { 0'(= r ) 3'(= a7◂ [ *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}] ) } ⊢ { 0'(= r ) 1'(= a7◂ [ *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}] ) }
; .mov_ptn 3'(= a7◂ [ *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}] ) ⊢ 1'(= a7◂ [ *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}] )
	mov rax,r9
	mov r14,rax
	call ETR_134

	mov r10,QWORD [rsp-8+8*3]
	mov r8,QWORD [rsp-8+8*2]
	mov rax,QWORD [rsp-8+8*1]
	mov r9,r14
	mov r14,rax
	add rsp,24
;; rsp=0 , %663~3'(= {| l |} ) %662~0'(= r ) %657~2'(= {| l |} ) %655~1'(= {| l |} ) %652~4'(= a2◂ [ a21◂ [ a9◂ [ ]{| l |}]] ) 
; » _^ .. ⊢ ..
; .. //
	mov rdi,0
	mov rsi,r13
	push rsi
	imul rsi,1
	add rdi,rsi 
	mov rsi,r14
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[rsi] 
	add rdi,rax 
	push rax
	push rsi
	mov rsi,r9
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[rsi] 
	add rdi,rax 
	push rax
	push rsi
	mov rsi,r8
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[rsi] 
	add rdi,rax 
	push rax
	push rsi
	add rdi,9
	push rdi 
	call mlc_s8
	pop rdi
	mov r11,rax
	lea rdi,[rax+7+rdi]
	std 
	mov QWORD [tmp],rcx 
	pop rsi 
	pop rcx
	lea rsi,[rsi+7+rcx]
	rep movsb
	pop rsi 
	pop rcx
	lea rsi,[rsi+7+rcx]
	rep movsb
	lea rsi,[LB_492+5-1]
	mov rcx,5
	rep movsb
	pop rsi 
	pop rcx
	lea rsi,[rsi+7+rcx]
	rep movsb
	lea rsi,[LB_493+4-1]
	mov rcx,4
	rep movsb
	pop rax 
LB_495:
	cmp rax,0
	jz LB_496
	sub rax,1
	lea rsi,[LB_494+1-1]
	mov rcx,1
	rep movsb 
	jmp LB_495
LB_496:
	mov rcx,QWORD [tmp] 
;; rsp=0 , %668~5'(= {| l |} ) %667~3'(= {| l |} ) %666~2'(= {| l |} ) %665~1'(= {| l |} ) %664~0'(= r ) %652~4'(= a2◂ [ a21◂ [ a9◂ [ ]{| l |}]] ) 
; ∎ { 0'(= r ) 5'(= {| l |} ) }
; .dlt.ptn 3'(= {| l |} )
	mov rdi,r9
	call free_s8 
; .dlt.ptn 2'(= {| l |} )
	mov rdi,r8
	call free_s8 
; .dlt.ptn 1'(= {| l |} )
	mov rdi,r14
	call free_s8 
; .dlt.ptn 4'(= a2◂ [ a21◂ [ a9◂ [ ]{| l |}]] )
;	.dlt adt ⊢ _  
; .mov_ptn2 { 0'(= r ) 5'(= {| l |} ) } ⊢ { 0'(= r ) 1'(= {| l |} ) }
; .mov_ptn 5'(= {| l |} ) ⊢ 1'(= {| l |} )
	mov rax,r11
	mov r14,rax
	ret
LB_491:
;; ? 5'(= a20◂ [ a9◂ [ ]{| l |}] ) ⊢ 1(<3)◂{ 3'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) 6'(= a7◂ [ *{ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}] ) }
	mov rdi,r11
	cmp BYTE [rdi+6],1
	jnz LB_497
	mov rdi,r11
	mov rdi,QWORD [rdi+8+8*0]
	mov r9,rdi
	mov rdi,r11
	mov rdi,QWORD [rdi+8+8*1]
	mov rcx,rdi
;; rsp=0 , %660~6'(= a7◂ [ *{ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}] ) %659~3'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) %657~2'(= {| l |} ) %656~0'(= r ) %655~1'(= {| l |} ) %652~4'(= a2◂ [ a21◂ [ a9◂ [ ]{| l |}]] ) 
; rsp_d=0, #97 3'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) ⊢ 3'(= {| l |} )
	sub rsp,40
	mov QWORD [rsp+8*0],r13
	mov QWORD [rsp+8*1],r14
	mov QWORD [rsp+8*2],r8
	mov QWORD [rsp+8*3],r10
	mov QWORD [rsp+8*4],rcx
; .mov_ptn2 3'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) ⊢ 0'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] )
; .mov_ptn 3'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) ⊢ 0'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] )
	mov rax,r9
	mov r13,rax
	call ETR_97

	mov rcx,QWORD [rsp-8+8*5]
	mov r10,QWORD [rsp-8+8*4]
	mov r8,QWORD [rsp-8+8*3]
	mov r14,QWORD [rsp-8+8*2]
	mov rax,QWORD [rsp-8+8*1]
	mov r9,r13
	mov r13,rax
	add rsp,40
;; rsp=0 , %669~3'(= {| l |} ) %660~6'(= a7◂ [ *{ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}] ) %657~2'(= {| l |} ) %656~0'(= r ) %655~1'(= {| l |} ) %652~4'(= a2◂ [ a21◂ [ a9◂ [ ]{| l |}]] ) 
; rsp_d=0, #135 { 0'(= r ) 6'(= a7◂ [ *{ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}] ) } ⊢ { 0'(= r ) 5'(= {| l |} ) }
	sub rsp,32
	mov QWORD [rsp+8*0],r14
	mov QWORD [rsp+8*1],r8
	mov QWORD [rsp+8*2],r9
	mov QWORD [rsp+8*3],r10
; .mov_ptn2 { 0'(= r ) 6'(= a7◂ [ *{ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}] ) } ⊢ { 0'(= r ) 1'(= a7◂ [ *{ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}] ) }
; .mov_ptn 6'(= a7◂ [ *{ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}] ) ⊢ 1'(= a7◂ [ *{ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}] )
	mov rax,rcx
	mov r14,rax
	call ETR_135

	mov r10,QWORD [rsp-8+8*4]
	mov r9,QWORD [rsp-8+8*3]
	mov r8,QWORD [rsp-8+8*2]
	mov rax,QWORD [rsp-8+8*1]
	mov r11,r14
	mov r14,rax
	add rsp,32
;; rsp=0 , %671~5'(= {| l |} ) %670~0'(= r ) %669~3'(= {| l |} ) %657~2'(= {| l |} ) %655~1'(= {| l |} ) %652~4'(= a2◂ [ a21◂ [ a9◂ [ ]{| l |}]] ) 
; » _^ .. ⊢ ..
; .. //
	mov rdi,0
	mov rsi,r13
	push rsi
	imul rsi,1
	add rdi,rsi 
	mov rsi,r9
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[rsi] 
	add rdi,rax 
	push rax
	push rsi
	mov rsi,r11
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[rsi] 
	add rdi,rax 
	push rax
	push rsi
	mov rsi,r8
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[rsi] 
	add rdi,rax 
	push rax
	push rsi
	add rdi,14
	push rdi 
	call mlc_s8
	pop rdi
	mov rcx,rax
	lea rdi,[rax+7+rdi]
	std 
	mov QWORD [tmp],rcx 
	pop rsi 
	pop rcx
	lea rsi,[rsi+7+rcx]
	rep movsb
	pop rsi 
	pop rcx
	lea rsi,[rsi+7+rcx]
	rep movsb
	lea rsi,[LB_498+5-1]
	mov rcx,5
	rep movsb
	pop rsi 
	pop rcx
	lea rsi,[rsi+7+rcx]
	rep movsb
	lea rsi,[LB_499+9-1]
	mov rcx,9
	rep movsb
	pop rax 
LB_501:
	cmp rax,0
	jz LB_502
	sub rax,1
	lea rsi,[LB_500+1-1]
	mov rcx,1
	rep movsb 
	jmp LB_501
LB_502:
	mov rcx,QWORD [tmp] 
;; rsp=0 , %676~6'(= {| l |} ) %675~5'(= {| l |} ) %674~2'(= {| l |} ) %673~3'(= {| l |} ) %672~0'(= r ) %655~1'(= {| l |} ) %652~4'(= a2◂ [ a21◂ [ a9◂ [ ]{| l |}]] ) 
; ∎ { 0'(= r ) 6'(= {| l |} ) }
; .dlt.ptn 5'(= {| l |} )
	mov rdi,r11
	call free_s8 
; .dlt.ptn 2'(= {| l |} )
	mov rdi,r8
	call free_s8 
; .dlt.ptn 3'(= {| l |} )
	mov rdi,r9
	call free_s8 
; .dlt.ptn 1'(= {| l |} )
	mov rdi,r14
	call free_s8 
; .dlt.ptn 4'(= a2◂ [ a21◂ [ a9◂ [ ]{| l |}]] )
;	.dlt adt ⊢ _  
; .mov_ptn2 { 0'(= r ) 6'(= {| l |} ) } ⊢ { 0'(= r ) 1'(= {| l |} ) }
; .mov_ptn 6'(= {| l |} ) ⊢ 1'(= {| l |} )
	mov rax,rcx
	mov r14,rax
	ret
LB_497:
;; ?. 5'(= a20◂ [ a9◂ [ ]{| l |}] ) ⊢ 2(<3)◂3'(= a17◂ [ a9◂ [ ]{| l |}] )
	mov rax,QWORD [rdi+8]
	mov r9,rax
;; rsp=0 , %658~3'(= a17◂ [ a9◂ [ ]{| l |}] ) %657~2'(= {| l |} ) %656~0'(= r ) %655~1'(= {| l |} ) %652~4'(= a2◂ [ a21◂ [ a9◂ [ ]{| l |}]] ) 
; _#9 0'(= r ) ⊢ 0'(= r )
	add r13,1
;; rsp=0 , %677~0'(= r ) %658~3'(= a17◂ [ a9◂ [ ]{| l |}] ) %657~2'(= {| l |} ) %655~1'(= {| l |} ) %652~4'(= a2◂ [ a21◂ [ a9◂ [ ]{| l |}]] ) 
; rsp_d=0, #132 { 0'(= r ) 3'(= a17◂ [ a9◂ [ ]{| l |}] ) } ⊢ { 0'(= r ) 3'(= {| l |} ) }
	sub rsp,24
	mov QWORD [rsp+8*0],r14
	mov QWORD [rsp+8*1],r8
	mov QWORD [rsp+8*2],r10
; .mov_ptn2 { 0'(= r ) 3'(= a17◂ [ a9◂ [ ]{| l |}] ) } ⊢ { 0'(= r ) 1'(= a17◂ [ a9◂ [ ]{| l |}] ) }
; .mov_ptn 3'(= a17◂ [ a9◂ [ ]{| l |}] ) ⊢ 1'(= a17◂ [ a9◂ [ ]{| l |}] )
	mov rax,r9
	mov r14,rax
	call ETR_132

	mov r10,QWORD [rsp-8+8*3]
	mov r8,QWORD [rsp-8+8*2]
	mov rax,QWORD [rsp-8+8*1]
	mov r9,r14
	mov r14,rax
	add rsp,24
;; rsp=0 , %679~3'(= {| l |} ) %678~0'(= r ) %657~2'(= {| l |} ) %655~1'(= {| l |} ) %652~4'(= a2◂ [ a21◂ [ a9◂ [ ]{| l |}]] ) 
; _#10 0'(= r ) ⊢ 0'(= r )
	sub r13,1
;; rsp=0 , %680~0'(= r ) %679~3'(= {| l |} ) %657~2'(= {| l |} ) %655~1'(= {| l |} ) %652~4'(= a2◂ [ a21◂ [ a9◂ [ ]{| l |}]] ) 
; » _^ .. ⊢ ..
; .. //
	mov rdi,0
	mov rsi,r13
	push rsi
	imul rsi,1
	add rdi,rsi 
	mov rsi,r9
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[rsi] 
	add rdi,rax 
	push rax
	push rsi
	mov rsi,r8
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[rsi] 
	add rdi,rax 
	push rax
	push rsi
	add rdi,9
	push rdi 
	call mlc_s8
	pop rdi
	mov r11,rax
	lea rdi,[rax+7+rdi]
	std 
	mov QWORD [tmp],rcx 
	pop rsi 
	pop rcx
	lea rsi,[rsi+7+rcx]
	rep movsb
	pop rsi 
	pop rcx
	lea rsi,[rsi+7+rcx]
	rep movsb
	lea rsi,[LB_503+9-1]
	mov rcx,9
	rep movsb
	pop rax 
LB_505:
	cmp rax,0
	jz LB_506
	sub rax,1
	lea rsi,[LB_504+1-1]
	mov rcx,1
	rep movsb 
	jmp LB_505
LB_506:
	mov rcx,QWORD [tmp] 
;; rsp=0 , %684~5'(= {| l |} ) %683~3'(= {| l |} ) %682~2'(= {| l |} ) %681~0'(= r ) %655~1'(= {| l |} ) %652~4'(= a2◂ [ a21◂ [ a9◂ [ ]{| l |}]] ) 
; ∎ { 0'(= r ) 5'(= {| l |} ) }
; .dlt.ptn 3'(= {| l |} )
	mov rdi,r9
	call free_s8 
; .dlt.ptn 2'(= {| l |} )
	mov rdi,r8
	call free_s8 
; .dlt.ptn 1'(= {| l |} )
	mov rdi,r14
	call free_s8 
; .dlt.ptn 4'(= a2◂ [ a21◂ [ a9◂ [ ]{| l |}]] )
;	.dlt adt ⊢ _  
; .mov_ptn2 { 0'(= r ) 5'(= {| l |} ) } ⊢ { 0'(= r ) 1'(= {| l |} ) }
; .mov_ptn 5'(= {| l |} ) ⊢ 1'(= {| l |} )
	mov rax,r11
	mov r14,rax
	ret
LB_490:
;; ?; 1'(= a7◂ [ *{ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}] ) ⊢ 1(<2)◂{ 2'(= a8◂ [ a14◂ [ a9◂ [ ]{| l |}]] ) 3'(= a2◂ [ a21◂ [ a9◂ [ ]{| l |}]] ) 4'(= a20◂ [ a9◂ [ ]{| l |}] ) }
	mov rdi,r14
	mov rdi,QWORD [rdi+8+8*0]
	mov r8,rdi
	mov rdi,r14
	mov rdi,QWORD [rdi+8+8*1]
	mov r9,rdi
	mov rdi,r14
	mov rdi,QWORD [rdi+8+8*2]
	mov r10,rdi
;; rsp=0 , %687~4'(= a20◂ [ a9◂ [ ]{| l |}] ) %686~3'(= a2◂ [ a21◂ [ a9◂ [ ]{| l |}]] ) %685~2'(= a8◂ [ a14◂ [ a9◂ [ ]{| l |}]] ) %649~0'(= r ) 
;; ?; 4'(= a20◂ [ a9◂ [ ]{| l |}] ) ⊢ 0(<3)◂1'(= a7◂ [ *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}] )
	mov rdi,r10
	cmp BYTE [rdi+6],0
	jnz LB_507
	mov rax,QWORD [rdi+8]
	mov r14,rax
;; rsp=0 , %688~1'(= a7◂ [ *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}] ) %686~3'(= a2◂ [ a21◂ [ a9◂ [ ]{| l |}]] ) %685~2'(= a8◂ [ a14◂ [ a9◂ [ ]{| l |}]] ) %649~0'(= r ) 
; rsp_d=0, #101 2'(= a8◂ [ a14◂ [ a9◂ [ ]{| l |}]] ) ⊢ 2'(= {| l |} )
	sub rsp,24
	mov QWORD [rsp+8*0],r13
	mov QWORD [rsp+8*1],r14
	mov QWORD [rsp+8*2],r9
; .mov_ptn2 2'(= a8◂ [ a14◂ [ a9◂ [ ]{| l |}]] ) ⊢ 0'(= a8◂ [ a14◂ [ a9◂ [ ]{| l |}]] )
; .mov_ptn 2'(= a8◂ [ a14◂ [ a9◂ [ ]{| l |}]] ) ⊢ 0'(= a8◂ [ a14◂ [ a9◂ [ ]{| l |}]] )
	mov rax,r8
	mov r13,rax
	call ETR_101

	mov r9,QWORD [rsp-8+8*3]
	mov r14,QWORD [rsp-8+8*2]
	mov rax,QWORD [rsp-8+8*1]
	mov r8,r13
	mov r13,rax
	add rsp,24
;; rsp=0 , %689~2'(= {| l |} ) %688~1'(= a7◂ [ *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}] ) %686~3'(= a2◂ [ a21◂ [ a9◂ [ ]{| l |}]] ) %649~0'(= r ) 
; rsp_d=0, #134 { 0'(= r ) 1'(= a7◂ [ *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}] ) } ⊢ { 0'(= r ) 1'(= {| l |} ) }
	sub rsp,16
	mov QWORD [rsp+8*0],r8
	mov QWORD [rsp+8*1],r9
; .mov_ptn2 { 0'(= r ) 1'(= a7◂ [ *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}] ) } ⊢ { 0'(= r ) 1'(= a7◂ [ *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}] ) }
	call ETR_134

	mov r9,QWORD [rsp-8+8*2]
	mov r8,QWORD [rsp-8+8*1]
	add rsp,16
;; rsp=0 , %691~1'(= {| l |} ) %690~0'(= r ) %689~2'(= {| l |} ) %686~3'(= a2◂ [ a21◂ [ a9◂ [ ]{| l |}]] ) 
; » _^ .. ⊢ ..
; .. //
	mov rdi,0
	mov rsi,r13
	push rsi
	imul rsi,1
	add rdi,rsi 
	mov rsi,r14
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[rsi] 
	add rdi,rax 
	push rax
	push rsi
	add rdi,10
	push rdi 
	call mlc_s8
	pop rdi
	mov r10,rax
	lea rdi,[rax+7+rdi]
	std 
	mov QWORD [tmp],rcx 
	pop rsi 
	pop rcx
	lea rsi,[rsi+7+rcx]
	rep movsb
	lea rsi,[LB_508+10-1]
	mov rcx,10
	rep movsb
	pop rax 
LB_510:
	cmp rax,0
	jz LB_511
	sub rax,1
	lea rsi,[LB_509+1-1]
	mov rcx,1
	rep movsb 
	jmp LB_510
LB_511:
	mov rcx,QWORD [tmp] 
;; rsp=0 , %694~4'(= {| l |} ) %693~1'(= {| l |} ) %692~0'(= r ) %689~2'(= {| l |} ) %686~3'(= a2◂ [ a21◂ [ a9◂ [ ]{| l |}]] ) 
; ∎ { 0'(= r ) 4'(= {| l |} ) }
; .dlt.ptn 1'(= {| l |} )
	mov rdi,r14
	call free_s8 
; .dlt.ptn 2'(= {| l |} )
	mov rdi,r8
	call free_s8 
; .dlt.ptn 3'(= a2◂ [ a21◂ [ a9◂ [ ]{| l |}]] )
;	.dlt adt ⊢ _  
; .mov_ptn2 { 0'(= r ) 4'(= {| l |} ) } ⊢ { 0'(= r ) 1'(= {| l |} ) }
; .mov_ptn 4'(= {| l |} ) ⊢ 1'(= {| l |} )
	mov rax,r10
	mov r14,rax
	ret
LB_507:
;; ?; 4'(= a20◂ [ a9◂ [ ]{| l |}] ) ⊢ 1(<3)◂{ 1'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) 5'(= a7◂ [ *{ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}] ) }
	mov rdi,r10
	cmp BYTE [rdi+6],1
	jnz LB_512
	mov rdi,r10
	mov rdi,QWORD [rdi+8+8*0]
	mov r14,rdi
	mov rdi,r10
	mov rdi,QWORD [rdi+8+8*1]
	mov r11,rdi
;; rsp=0 , %696~5'(= a7◂ [ *{ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}] ) %695~1'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) %686~3'(= a2◂ [ a21◂ [ a9◂ [ ]{| l |}]] ) %685~2'(= a8◂ [ a14◂ [ a9◂ [ ]{| l |}]] ) %649~0'(= r ) 
; rsp_d=0, #97 1'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) ⊢ 1'(= {| l |} )
	sub rsp,32
	mov QWORD [rsp+8*0],r13
	mov QWORD [rsp+8*1],r8
	mov QWORD [rsp+8*2],r9
	mov QWORD [rsp+8*3],r11
; .mov_ptn2 1'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) ⊢ 0'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] )
; .mov_ptn 1'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) ⊢ 0'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] )
	mov rax,r14
	mov r13,rax
	call ETR_97

	mov r11,QWORD [rsp-8+8*4]
	mov r9,QWORD [rsp-8+8*3]
	mov r8,QWORD [rsp-8+8*2]
	mov rax,QWORD [rsp-8+8*1]
	mov r14,r13
	mov r13,rax
	add rsp,32
;; rsp=0 , %697~1'(= {| l |} ) %696~5'(= a7◂ [ *{ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}] ) %686~3'(= a2◂ [ a21◂ [ a9◂ [ ]{| l |}]] ) %685~2'(= a8◂ [ a14◂ [ a9◂ [ ]{| l |}]] ) %649~0'(= r ) 
; rsp_d=0, #135 { 0'(= r ) 5'(= a7◂ [ *{ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}] ) } ⊢ { 0'(= r ) 4'(= {| l |} ) }
	sub rsp,24
	mov QWORD [rsp+8*0],r14
	mov QWORD [rsp+8*1],r8
	mov QWORD [rsp+8*2],r9
; .mov_ptn2 { 0'(= r ) 5'(= a7◂ [ *{ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}] ) } ⊢ { 0'(= r ) 1'(= a7◂ [ *{ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}] ) }
; .mov_ptn 5'(= a7◂ [ *{ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}] ) ⊢ 1'(= a7◂ [ *{ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}] )
	mov rax,r11
	mov r14,rax
	call ETR_135

	mov r9,QWORD [rsp-8+8*3]
	mov r8,QWORD [rsp-8+8*2]
	mov rax,QWORD [rsp-8+8*1]
	mov r10,r14
	mov r14,rax
	add rsp,24
;; rsp=0 , %699~4'(= {| l |} ) %698~0'(= r ) %697~1'(= {| l |} ) %686~3'(= a2◂ [ a21◂ [ a9◂ [ ]{| l |}]] ) %685~2'(= a8◂ [ a14◂ [ a9◂ [ ]{| l |}]] ) 
; » _^ .. ⊢ ..
; .. //
	mov rdi,0
	mov rsi,r13
	push rsi
	imul rsi,1
	add rdi,rsi 
	mov rsi,r14
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[rsi] 
	add rdi,rax 
	push rax
	push rsi
	mov rsi,r10
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[rsi] 
	add rdi,rax 
	push rax
	push rsi
	add rdi,14
	push rdi 
	call mlc_s8
	pop rdi
	mov r11,rax
	lea rdi,[rax+7+rdi]
	std 
	mov QWORD [tmp],rcx 
	pop rsi 
	pop rcx
	lea rsi,[rsi+7+rcx]
	rep movsb
	lea rsi,[LB_513+5-1]
	mov rcx,5
	rep movsb
	pop rsi 
	pop rcx
	lea rsi,[rsi+7+rcx]
	rep movsb
	lea rsi,[LB_514+9-1]
	mov rcx,9
	rep movsb
	pop rax 
LB_516:
	cmp rax,0
	jz LB_517
	sub rax,1
	lea rsi,[LB_515+1-1]
	mov rcx,1
	rep movsb 
	jmp LB_516
LB_517:
	mov rcx,QWORD [tmp] 
;; rsp=0 , %703~5'(= {| l |} ) %702~4'(= {| l |} ) %701~1'(= {| l |} ) %700~0'(= r ) %686~3'(= a2◂ [ a21◂ [ a9◂ [ ]{| l |}]] ) %685~2'(= a8◂ [ a14◂ [ a9◂ [ ]{| l |}]] ) 
; ∎ { 0'(= r ) 5'(= {| l |} ) }
; .dlt.ptn 4'(= {| l |} )
	mov rdi,r10
	call free_s8 
; .dlt.ptn 1'(= {| l |} )
	mov rdi,r14
	call free_s8 
; .dlt.ptn 3'(= a2◂ [ a21◂ [ a9◂ [ ]{| l |}]] )
;	.dlt adt ⊢ _  
; .dlt.ptn 2'(= a8◂ [ a14◂ [ a9◂ [ ]{| l |}]] )
;	.dlt adt ⊢ _  
; .mov_ptn2 { 0'(= r ) 5'(= {| l |} ) } ⊢ { 0'(= r ) 1'(= {| l |} ) }
; .mov_ptn 5'(= {| l |} ) ⊢ 1'(= {| l |} )
	mov rax,r11
	mov r14,rax
	ret
LB_512:
;; ?; 4'(= a20◂ [ a9◂ [ ]{| l |}] ) ⊢ 2(<3)◂1'(= a17◂ [ a9◂ [ ]{| l |}] )
	mov rax,QWORD [rdi+8]
	mov r14,rax
;; rsp=0 , %704~1'(= a17◂ [ a9◂ [ ]{| l |}] ) %686~3'(= a2◂ [ a21◂ [ a9◂ [ ]{| l |}]] ) %685~2'(= a8◂ [ a14◂ [ a9◂ [ ]{| l |}]] ) %649~0'(= r ) 
; _#9 0'(= r ) ⊢ 0'(= r )
	add r13,1
;; rsp=0 , %705~0'(= r ) %704~1'(= a17◂ [ a9◂ [ ]{| l |}] ) %686~3'(= a2◂ [ a21◂ [ a9◂ [ ]{| l |}]] ) %685~2'(= a8◂ [ a14◂ [ a9◂ [ ]{| l |}]] ) 
; rsp_d=0, #132 { 0'(= r ) 1'(= a17◂ [ a9◂ [ ]{| l |}] ) } ⊢ { 0'(= r ) 1'(= {| l |} ) }
	sub rsp,16
	mov QWORD [rsp+8*0],r8
	mov QWORD [rsp+8*1],r9
; .mov_ptn2 { 0'(= r ) 1'(= a17◂ [ a9◂ [ ]{| l |}] ) } ⊢ { 0'(= r ) 1'(= a17◂ [ a9◂ [ ]{| l |}] ) }
	call ETR_132

	mov r9,QWORD [rsp-8+8*2]
	mov r8,QWORD [rsp-8+8*1]
	add rsp,16
;; rsp=0 , %707~1'(= {| l |} ) %706~0'(= r ) %686~3'(= a2◂ [ a21◂ [ a9◂ [ ]{| l |}]] ) %685~2'(= a8◂ [ a14◂ [ a9◂ [ ]{| l |}]] ) 
; _#10 0'(= r ) ⊢ 0'(= r )
	sub r13,1
;; rsp=0 , %708~0'(= r ) %707~1'(= {| l |} ) %686~3'(= a2◂ [ a21◂ [ a9◂ [ ]{| l |}]] ) %685~2'(= a8◂ [ a14◂ [ a9◂ [ ]{| l |}]] ) 
; » _^ .. ⊢ ..
; .. //
	mov rdi,0
	mov rsi,r13
	push rsi
	imul rsi,1
	add rdi,rsi 
	mov rsi,r14
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[rsi] 
	add rdi,rax 
	push rax
	push rsi
	add rdi,10
	push rdi 
	call mlc_s8
	pop rdi
	mov r10,rax
	lea rdi,[rax+7+rdi]
	std 
	mov QWORD [tmp],rcx 
	pop rsi 
	pop rcx
	lea rsi,[rsi+7+rcx]
	rep movsb
	lea rsi,[LB_518+10-1]
	mov rcx,10
	rep movsb
	pop rax 
LB_520:
	cmp rax,0
	jz LB_521
	sub rax,1
	lea rsi,[LB_519+1-1]
	mov rcx,1
	rep movsb 
	jmp LB_520
LB_521:
	mov rcx,QWORD [tmp] 
;; rsp=0 , %711~4'(= {| l |} ) %710~1'(= {| l |} ) %709~0'(= r ) %686~3'(= a2◂ [ a21◂ [ a9◂ [ ]{| l |}]] ) %685~2'(= a8◂ [ a14◂ [ a9◂ [ ]{| l |}]] ) 
; ∎ { 0'(= r ) 4'(= {| l |} ) }
; .dlt.ptn 1'(= {| l |} )
	mov rdi,r14
	call free_s8 
; .dlt.ptn 3'(= a2◂ [ a21◂ [ a9◂ [ ]{| l |}]] )
;	.dlt adt ⊢ _  
; .dlt.ptn 2'(= a8◂ [ a14◂ [ a9◂ [ ]{| l |}]] )
;	.dlt adt ⊢ _  
; .mov_ptn2 { 0'(= r ) 4'(= {| l |} ) } ⊢ { 0'(= r ) 1'(= {| l |} ) }
; .mov_ptn 4'(= {| l |} ) ⊢ 1'(= {| l |} )
	mov rax,r10
	mov r14,rax
	ret
ETR_157: ; pnt { 0'(= r ) 1'(= a2◂ [ *{ {| l |}a24◂ [ a9◂ [ ]{| l |}]}] ) } ⊢ { 0'(= r ) 1'(= {| l |} ) } : ({ _r64 _lst◂{ _s8 _t24◂_s8◂_t9 } }→{ _r64 _s8 })
;; rsp=0 , %713~1'(= a2◂ [ *{ {| l |}a24◂ [ a9◂ [ ]{| l |}]}] ) %712~0'(= r ) 
;; ?; 1'(= a2◂ [ *{ {| l |}a24◂ [ a9◂ [ ]{| l |}]}] ) ⊢ 0(<2)◂{ { 3'(= {| l |} ) 4'(= a24◂ [ a9◂ [ ]{| l |}] ) } 5'(= a2◂ [ *{ {| l |}a24◂ [ a9◂ [ ]{| l |}]}] ) }
	mov rdi,r14
	cmp BYTE [rdi+6],0
	jnz LB_522
	mov rdi,r14
	mov rdi,QWORD [rdi+8+8*0]
	mov r8,rdi
	mov rdi,r8
	mov rdi,QWORD [rdi+8+8*0]
	mov r9,rdi
	mov rdi,r8
	mov rdi,QWORD [rdi+8+8*1]
	mov r10,rdi
	mov rdi,r14
	mov rdi,QWORD [rdi+8+8*1]
	mov r11,rdi
;; rsp=0 , %716~5'(= a2◂ [ *{ {| l |}a24◂ [ a9◂ [ ]{| l |}]}] ) %715~4'(= a24◂ [ a9◂ [ ]{| l |}] ) %714~3'(= {| l |} ) %712~0'(= r ) 
; _#9 0'(= r ) ⊢ 0'(= r )
	add r13,1
;; rsp=0 , %717~0'(= r ) %716~5'(= a2◂ [ *{ {| l |}a24◂ [ a9◂ [ ]{| l |}]}] ) %715~4'(= a24◂ [ a9◂ [ ]{| l |}] ) %714~3'(= {| l |} ) 
; rsp_d=0, #158 { 0'(= r ) 4'(= a24◂ [ a9◂ [ ]{| l |}] ) } ⊢ { 0'(= r ) 1'(= {| l |} ) }
	sub rsp,16
	mov QWORD [rsp+8*0],r9
	mov QWORD [rsp+8*1],r11
; .mov_ptn2 { 0'(= r ) 4'(= a24◂ [ a9◂ [ ]{| l |}] ) } ⊢ { 0'(= r ) 1'(= a24◂ [ a9◂ [ ]{| l |}] ) }
; .mov_ptn 4'(= a24◂ [ a9◂ [ ]{| l |}] ) ⊢ 1'(= a24◂ [ a9◂ [ ]{| l |}] )
	mov rax,r10
	mov r14,rax
	call ETR_158

	mov r11,QWORD [rsp-8+8*2]
	mov r9,QWORD [rsp-8+8*1]
	add rsp,16
;; rsp=0 , %719~1'(= {| l |} ) %718~0'(= r ) %716~5'(= a2◂ [ *{ {| l |}a24◂ [ a9◂ [ ]{| l |}]}] ) %714~3'(= {| l |} ) 
; _#10 0'(= r ) ⊢ 0'(= r )
	sub r13,1
;; rsp=0 , %720~0'(= r ) %719~1'(= {| l |} ) %716~5'(= a2◂ [ *{ {| l |}a24◂ [ a9◂ [ ]{| l |}]}] ) %714~3'(= {| l |} ) 
; rsp_d=0, #157 { 0'(= r ) 5'(= a2◂ [ *{ {| l |}a24◂ [ a9◂ [ ]{| l |}]}] ) } ⊢ { 0'(= r ) 2'(= {| l |} ) }
	sub rsp,16
	mov QWORD [rsp+8*0],r14
	mov QWORD [rsp+8*1],r9
; .mov_ptn2 { 0'(= r ) 5'(= a2◂ [ *{ {| l |}a24◂ [ a9◂ [ ]{| l |}]}] ) } ⊢ { 0'(= r ) 1'(= a2◂ [ *{ {| l |}a24◂ [ a9◂ [ ]{| l |}]}] ) }
; .mov_ptn 5'(= a2◂ [ *{ {| l |}a24◂ [ a9◂ [ ]{| l |}]}] ) ⊢ 1'(= a2◂ [ *{ {| l |}a24◂ [ a9◂ [ ]{| l |}]}] )
	mov rax,r11
	mov r14,rax
	call ETR_157

	mov r9,QWORD [rsp-8+8*2]
	mov rax,QWORD [rsp-8+8*1]
	mov r8,r14
	mov r14,rax
	add rsp,16
;; rsp=0 , %722~2'(= {| l |} ) %721~0'(= r ) %719~1'(= {| l |} ) %714~3'(= {| l |} ) 
; » _^ .. ⊢ ..
; .. //
	mov rdi,0
	mov rsi,r13
	push rsi
	imul rsi,1
	add rdi,rsi 
	mov rsi,r9
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[rsi] 
	add rdi,rax 
	push rax
	push rsi
	mov rsi,r14
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[rsi] 
	add rdi,rax 
	push rax
	push rsi
	mov rsi,r8
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[rsi] 
	add rdi,rax 
	push rax
	push rsi
	add rdi,3
	push rdi 
	call mlc_s8
	pop rdi
	mov r10,rax
	lea rdi,[rax+7+rdi]
	std 
	mov QWORD [tmp],rcx 
	pop rsi 
	pop rcx
	lea rsi,[rsi+7+rcx]
	rep movsb
	pop rsi 
	pop rcx
	lea rsi,[rsi+7+rcx]
	rep movsb
	lea rsi,[LB_523+1-1]
	mov rcx,1
	rep movsb
	pop rsi 
	pop rcx
	lea rsi,[rsi+7+rcx]
	rep movsb
	lea rsi,[LB_524+2-1]
	mov rcx,2
	rep movsb
	pop rax 
LB_526:
	cmp rax,0
	jz LB_527
	sub rax,1
	lea rsi,[LB_525+1-1]
	mov rcx,1
	rep movsb 
	jmp LB_526
LB_527:
	mov rcx,QWORD [tmp] 
;; rsp=0 , %727~4'(= {| l |} ) %726~2'(= {| l |} ) %725~1'(= {| l |} ) %724~3'(= {| l |} ) %723~0'(= r ) 
; ∎ { 0'(= r ) 4'(= {| l |} ) }
; .dlt.ptn 2'(= {| l |} )
	mov rdi,r8
	call free_s8 
; .dlt.ptn 1'(= {| l |} )
	mov rdi,r14
	call free_s8 
; .dlt.ptn 3'(= {| l |} )
	mov rdi,r9
	call free_s8 
; .mov_ptn2 { 0'(= r ) 4'(= {| l |} ) } ⊢ { 0'(= r ) 1'(= {| l |} ) }
; .mov_ptn 4'(= {| l |} ) ⊢ 1'(= {| l |} )
	mov rax,r10
	mov r14,rax
	ret
LB_522:
;; ?; 1'(= a2◂ [ *{ {| l |}a24◂ [ a9◂ [ ]{| l |}]}] ) ⊢ 1(<2)◂{ }
;; rsp=0 , %712~0'(= r ) 
	jmp LB_528
LB_528:
; $ %[ "" ] ⊢ %[ "" ]
;; rsp=0 , %728~%[ "" ] %712~0'(= r ) 
; ∎ { 0'(= r ) %[ "" ] }
; .mov_ptn2 { 0'(= r ) %[ "" ] } ⊢ { 0'(= r ) 1'(= {| l |} ) }
; .mov_ptn %[ "" ] ⊢ 1'(= {| l |} )
	mov rsi,1  
	mov rdi,16
	xor rax,rax 
	C_CALL_SF calloc
	mov QWORD [rax],0
	mov r14,rax
	ret
ETR_158: ; pnt_etr { 0'(= r ) 1'(= a24◂ [ a9◂ [ ]{| l |}] ) } ⊢ { 0'(= r ) 1'(= {| l |} ) } : ({ _r64 _t24◂_s8◂_t9 }→{ _r64 _s8 })
;; rsp=0 , %730~1'(= a24◂ [ a9◂ [ ]{| l |}] ) %729~0'(= r ) 
;; ?; 1'(= a24◂ [ a9◂ [ ]{| l |}] ) ⊢ 0(<2)◂2'(= a25◂ [ a9◂ [ ]{| l |}] )
	mov rdi,r14
	cmp BYTE [rdi+6],0
	jnz LB_529
	mov rax,QWORD [rdi+8]
	mov r8,rax
;; rsp=0 , %731~2'(= a25◂ [ a9◂ [ ]{| l |}] ) %729~0'(= r ) 
; rsp_d=0, #159 { 0'(= r ) 2'(= a25◂ [ a9◂ [ ]{| l |}] ) } ⊢ { 0'(= r ) 1'(= {| l |} ) }
; .mov_ptn2 { 0'(= r ) 2'(= a25◂ [ a9◂ [ ]{| l |}] ) } ⊢ { 0'(= r ) 1'(= a25◂ [ a9◂ [ ]{| l |}] ) }
; .mov_ptn 2'(= a25◂ [ a9◂ [ ]{| l |}] ) ⊢ 1'(= a25◂ [ a9◂ [ ]{| l |}] )
	mov rax,r8
	mov r14,rax
	call ETR_159

;; rsp=0 , %733~1'(= {| l |} ) %732~0'(= r ) 
; ∎ { 0'(= r ) 1'(= {| l |} ) }
; .mov_ptn2 { 0'(= r ) 1'(= {| l |} ) } ⊢ { 0'(= r ) 1'(= {| l |} ) }
	ret
LB_529:
;; ?; 1'(= a24◂ [ a9◂ [ ]{| l |}] ) ⊢ 1(<2)◂2'(= a26◂ [ a9◂ [ ]{| l |}] )
	mov rax,QWORD [rdi+8]
	mov r8,rax
;; rsp=0 , %734~2'(= a26◂ [ a9◂ [ ]{| l |}] ) %729~0'(= r ) 
; rsp_d=0, #160 { 0'(= r ) 2'(= a26◂ [ a9◂ [ ]{| l |}] ) } ⊢ { 0'(= r ) 1'(= {| l |} ) }
; .mov_ptn2 { 0'(= r ) 2'(= a26◂ [ a9◂ [ ]{| l |}] ) } ⊢ { 0'(= r ) 1'(= a26◂ [ a9◂ [ ]{| l |}] ) }
; .mov_ptn 2'(= a26◂ [ a9◂ [ ]{| l |}] ) ⊢ 1'(= a26◂ [ a9◂ [ ]{| l |}] )
	mov rax,r8
	mov r14,rax
	call ETR_160

;; rsp=0 , %736~1'(= {| l |} ) %735~0'(= r ) 
; ∎ { 0'(= r ) 1'(= {| l |} ) }
; .mov_ptn2 { 0'(= r ) 1'(= {| l |} ) } ⊢ { 0'(= r ) 1'(= {| l |} ) }
	ret
ETR_159: ; pnt_cnc { 0'(= r ) 1'(= a25◂ [ a9◂ [ ]{| l |}] ) } ⊢ { 0'(= r ) 1'(= {| l |} ) } : ({ _r64 _t25◂_s8◂_t9 }→{ _r64 _s8 })
;; rsp=0 , %738~1'(= a25◂ [ a9◂ [ ]{| l |}] ) %737~0'(= r ) 
;; ?; 1'(= a25◂ [ a9◂ [ ]{| l |}] ) ⊢ 0(<2)◂{ 2'(= a3◂ [ {| l |}] ) 3'(= a27◂ [ ] ) 4'(= a28◂ [ a9◂ [ ]] ) 5'(= a3◂ [ a25◂ [ a9◂ [ ]{| l |}]] ) 6'(= a25◂ [ a9◂ [ ]{| l |}] ) }
	mov rdi,r14
	cmp BYTE [rdi+6],0
	jnz LB_530
	mov rdi,r14
	mov rdi,QWORD [rdi+8+8*0]
	mov r8,rdi
	mov rdi,r14
	mov rdi,QWORD [rdi+8+8*1]
	mov r9,rdi
	mov rdi,r14
	mov rdi,QWORD [rdi+8+8*2]
	mov r10,rdi
	mov rdi,r14
	mov rdi,QWORD [rdi+8+8*3]
	mov r11,rdi
	mov rdi,r14
	mov rdi,QWORD [rdi+8+8*4]
	mov rcx,rdi
;; rsp=0 , %743~6'(= a25◂ [ a9◂ [ ]{| l |}] ) %742~5'(= a3◂ [ a25◂ [ a9◂ [ ]{| l |}]] ) %741~4'(= a28◂ [ a9◂ [ ]] ) %740~3'(= a27◂ [ ] ) %739~2'(= a3◂ [ {| l |}] ) %737~0'(= r ) 
; rsp_d=0, #159 { 0'(= r ) 6'(= a25◂ [ a9◂ [ ]{| l |}] ) } ⊢ { 0'(= r ) 1'(= {| l |} ) }
	sub rsp,32
	mov QWORD [rsp+8*0],r8
	mov QWORD [rsp+8*1],r9
	mov QWORD [rsp+8*2],r10
	mov QWORD [rsp+8*3],r11
; .mov_ptn2 { 0'(= r ) 6'(= a25◂ [ a9◂ [ ]{| l |}] ) } ⊢ { 0'(= r ) 1'(= a25◂ [ a9◂ [ ]{| l |}] ) }
; .mov_ptn 6'(= a25◂ [ a9◂ [ ]{| l |}] ) ⊢ 1'(= a25◂ [ a9◂ [ ]{| l |}] )
	mov rax,rcx
	mov r14,rax
	call ETR_159

	mov r11,QWORD [rsp-8+8*4]
	mov r10,QWORD [rsp-8+8*3]
	mov r9,QWORD [rsp-8+8*2]
	mov r8,QWORD [rsp-8+8*1]
	add rsp,32
;; rsp=0 , %745~1'(= {| l |} ) %744~0'(= r ) %742~5'(= a3◂ [ a25◂ [ a9◂ [ ]{| l |}]] ) %741~4'(= a28◂ [ a9◂ [ ]] ) %740~3'(= a27◂ [ ] ) %739~2'(= a3◂ [ {| l |}] ) 
; » _^ .. ⊢ ..
; .. //
	mov rdi,0
	mov rsi,r13
	push rsi
	imul rsi,1
	add rdi,rsi 
	mov rsi,r14
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[rsi] 
	add rdi,rax 
	push rax
	push rsi
	add rdi,7
	push rdi 
	call mlc_s8
	pop rdi
	mov rcx,rax
	lea rdi,[rax+7+rdi]
	std 
	mov QWORD [tmp],rcx 
	pop rsi 
	pop rcx
	lea rsi,[rsi+7+rcx]
	rep movsb
	lea rsi,[LB_531+7-1]
	mov rcx,7
	rep movsb
	pop rax 
LB_533:
	cmp rax,0
	jz LB_534
	sub rax,1
	lea rsi,[LB_532+1-1]
	mov rcx,1
	rep movsb 
	jmp LB_533
LB_534:
	mov rcx,QWORD [tmp] 
;; rsp=0 , %748~6'(= {| l |} ) %747~1'(= {| l |} ) %746~0'(= r ) %742~5'(= a3◂ [ a25◂ [ a9◂ [ ]{| l |}]] ) %741~4'(= a28◂ [ a9◂ [ ]] ) %740~3'(= a27◂ [ ] ) %739~2'(= a3◂ [ {| l |}] ) 
; ∎ { 0'(= r ) 6'(= {| l |} ) }
; .dlt.ptn 1'(= {| l |} )
	mov rdi,r14
	call free_s8 
; .dlt.ptn 5'(= a3◂ [ a25◂ [ a9◂ [ ]{| l |}]] )
;	.dlt adt ⊢ _  
; .dlt.ptn 4'(= a28◂ [ a9◂ [ ]] )
;	.dlt adt ⊢ _  
; .dlt.ptn 3'(= a27◂ [ ] )
;	.dlt adt ⊢ _  
; .dlt.ptn 2'(= a3◂ [ {| l |}] )
;	.dlt adt ⊢ _  
; .mov_ptn2 { 0'(= r ) 6'(= {| l |} ) } ⊢ { 0'(= r ) 1'(= {| l |} ) }
; .mov_ptn 6'(= {| l |} ) ⊢ 1'(= {| l |} )
	mov rax,rcx
	mov r14,rax
	ret
LB_530:
;; ?; 1'(= a25◂ [ a9◂ [ ]{| l |}] ) ⊢ 1(<2)◂{ 2'(= a3◂ [ {| l |}] ) 3'(= a27◂ [ ] ) 4'(= a28◂ [ a9◂ [ ]] ) 5'(= a3◂ [ a25◂ [ a9◂ [ ]{| l |}]] ) }
	mov rdi,r14
	mov rdi,QWORD [rdi+8+8*0]
	mov r8,rdi
	mov rdi,r14
	mov rdi,QWORD [rdi+8+8*1]
	mov r9,rdi
	mov rdi,r14
	mov rdi,QWORD [rdi+8+8*2]
	mov r10,rdi
	mov rdi,r14
	mov rdi,QWORD [rdi+8+8*3]
	mov r11,rdi
;; rsp=0 , %752~5'(= a3◂ [ a25◂ [ a9◂ [ ]{| l |}]] ) %751~4'(= a28◂ [ a9◂ [ ]] ) %750~3'(= a27◂ [ ] ) %749~2'(= a3◂ [ {| l |}] ) %737~0'(= r ) 
; » _^ .. ⊢ ..
; .. //
	mov rdi,0
	mov rsi,r13
	push rsi
	imul rsi,1
	add rdi,rsi 
	add rdi,9
	push rdi 
	call mlc_s8
	pop rdi
	mov r14,rax
	lea rdi,[rax+7+rdi]
	std 
	mov QWORD [tmp],rcx 
	lea rsi,[LB_535+9-1]
	mov rcx,9
	rep movsb
	pop rax 
LB_537:
	cmp rax,0
	jz LB_538
	sub rax,1
	lea rsi,[LB_536+1-1]
	mov rcx,1
	rep movsb 
	jmp LB_537
LB_538:
	mov rcx,QWORD [tmp] 
;; rsp=0 , %754~1'(= {| l |} ) %753~0'(= r ) %752~5'(= a3◂ [ a25◂ [ a9◂ [ ]{| l |}]] ) %751~4'(= a28◂ [ a9◂ [ ]] ) %750~3'(= a27◂ [ ] ) %749~2'(= a3◂ [ {| l |}] ) 
; ∎ { 0'(= r ) 1'(= {| l |} ) }
; .dlt.ptn 5'(= a3◂ [ a25◂ [ a9◂ [ ]{| l |}]] )
;	.dlt adt ⊢ _  
; .dlt.ptn 4'(= a28◂ [ a9◂ [ ]] )
;	.dlt adt ⊢ _  
; .dlt.ptn 3'(= a27◂ [ ] )
;	.dlt adt ⊢ _  
; .dlt.ptn 2'(= a3◂ [ {| l |}] )
;	.dlt adt ⊢ _  
; .mov_ptn2 { 0'(= r ) 1'(= {| l |} ) } ⊢ { 0'(= r ) 1'(= {| l |} ) }
	ret
ETR_160: ; pnt_act { 0'(= r ) 1'(= a26◂ [ a9◂ [ ]{| l |}] ) } ⊢ { 0'(= r ) 1'(= {| l |} ) } : ({ _r64 _t26◂_s8◂_t9 }→{ _r64 _s8 })
;; rsp=0 , %756~1'(= a26◂ [ a9◂ [ ]{| l |}] ) %755~0'(= r ) 
;; ?; 1'(= a26◂ [ a9◂ [ ]{| l |}] ) ⊢ 0(<2)◂{ 2'(= a2◂ [ a13◂ [ {| l |}]] ) 3'(= a8◂ [ a13◂ [ {| l |}]] ) 4'(= a17◂ [ a9◂ [ ]{| l |}] ) 5'(= a27◂ [ ] ) 6'(= a28◂ [ a9◂ [ ]] ) 7'(= a3◂ [ *{ a8◂ [ a13◂ [ {| l |}]]a26◂ [ a9◂ [ ]{| l |}]}] ) 8'(= a26◂ [ a9◂ [ ]{| l |}] ) }
	mov rdi,r14
	cmp BYTE [rdi+6],0
	jnz LB_539
	mov rdi,r14
	mov rdi,QWORD [rdi+8+8*0]
	mov r8,rdi
	mov rdi,r14
	mov rdi,QWORD [rdi+8+8*1]
	mov r9,rdi
	mov rdi,r14
	mov rdi,QWORD [rdi+8+8*2]
	mov r10,rdi
	mov rdi,r14
	mov rdi,QWORD [rdi+8+8*3]
	mov r11,rdi
	mov rdi,r14
	mov rdi,QWORD [rdi+8+8*4]
	mov rcx,rdi
	mov rdi,r14
	mov rdi,QWORD [rdi+8+8*5]
	mov rdx,rdi
	sub rsp,8
	mov rdi,r14
	mov rdi,QWORD [rdi+8+8*6]
	mov QWORD [rsp-8+8*1],rdi
;; rsp=1 , %763~8'(= a26◂ [ a9◂ [ ]{| l |}] ) %762~7'(= a3◂ [ *{ a8◂ [ a13◂ [ {| l |}]]a26◂ [ a9◂ [ ]{| l |}]}] ) %761~6'(= a28◂ [ a9◂ [ ]] ) %760~5'(= a27◂ [ ] ) %759~4'(= a17◂ [ a9◂ [ ]{| l |}] ) %758~3'(= a8◂ [ a13◂ [ {| l |}]] ) %757~2'(= a2◂ [ a13◂ [ {| l |}]] ) %755~0'(= r ) 
; rsp_d=0, #99 3'(= a8◂ [ a13◂ [ {| l |}]] ) ⊢ 1'(= {| l |} )
	sub rsp,48
	mov QWORD [rsp+8*0],r13
	mov QWORD [rsp+8*1],r8
	mov QWORD [rsp+8*2],r10
	mov QWORD [rsp+8*3],r11
	mov QWORD [rsp+8*4],rcx
	mov QWORD [rsp+8*5],rdx
; .mov_ptn2 3'(= a8◂ [ a13◂ [ {| l |}]] ) ⊢ 0'(= a8◂ [ a13◂ [ {| l |}]] )
; .mov_ptn 3'(= a8◂ [ a13◂ [ {| l |}]] ) ⊢ 0'(= a8◂ [ a13◂ [ {| l |}]] )
	mov rax,r9
	mov r13,rax
	call ETR_99

	mov rdx,QWORD [rsp-8+8*6]
	mov rcx,QWORD [rsp-8+8*5]
	mov r11,QWORD [rsp-8+8*4]
	mov r10,QWORD [rsp-8+8*3]
	mov r8,QWORD [rsp-8+8*2]
	mov rax,QWORD [rsp-8+8*1]
	mov r14,r13
	mov r13,rax
	add rsp,48
;; rsp=1 , %764~1'(= {| l |} ) %763~8'(= a26◂ [ a9◂ [ ]{| l |}] ) %762~7'(= a3◂ [ *{ a8◂ [ a13◂ [ {| l |}]]a26◂ [ a9◂ [ ]{| l |}]}] ) %761~6'(= a28◂ [ a9◂ [ ]] ) %760~5'(= a27◂ [ ] ) %759~4'(= a17◂ [ a9◂ [ ]{| l |}] ) %757~2'(= a2◂ [ a13◂ [ {| l |}]] ) %755~0'(= r ) 
; _#9 0'(= r ) ⊢ 0'(= r )
	add r13,1
;; rsp=1 , %765~0'(= r ) %764~1'(= {| l |} ) %763~8'(= a26◂ [ a9◂ [ ]{| l |}] ) %762~7'(= a3◂ [ *{ a8◂ [ a13◂ [ {| l |}]]a26◂ [ a9◂ [ ]{| l |}]}] ) %761~6'(= a28◂ [ a9◂ [ ]] ) %760~5'(= a27◂ [ ] ) %759~4'(= a17◂ [ a9◂ [ ]{| l |}] ) %757~2'(= a2◂ [ a13◂ [ {| l |}]] ) 
; rsp_d=0, #132 { 0'(= r ) 4'(= a17◂ [ a9◂ [ ]{| l |}] ) } ⊢ { 0'(= r ) 3'(= {| l |} ) }
	sub rsp,40
	mov QWORD [rsp+8*0],r14
	mov QWORD [rsp+8*1],r8
	mov QWORD [rsp+8*2],r11
	mov QWORD [rsp+8*3],rcx
	mov QWORD [rsp+8*4],rdx
; .mov_ptn2 { 0'(= r ) 4'(= a17◂ [ a9◂ [ ]{| l |}] ) } ⊢ { 0'(= r ) 1'(= a17◂ [ a9◂ [ ]{| l |}] ) }
; .mov_ptn 4'(= a17◂ [ a9◂ [ ]{| l |}] ) ⊢ 1'(= a17◂ [ a9◂ [ ]{| l |}] )
	mov rax,r10
	mov r14,rax
	call ETR_132

	mov rdx,QWORD [rsp-8+8*5]
	mov rcx,QWORD [rsp-8+8*4]
	mov r11,QWORD [rsp-8+8*3]
	mov r8,QWORD [rsp-8+8*2]
	mov rax,QWORD [rsp-8+8*1]
	mov r9,r14
	mov r14,rax
	add rsp,40
;; rsp=1 , %767~3'(= {| l |} ) %766~0'(= r ) %764~1'(= {| l |} ) %763~8'(= a26◂ [ a9◂ [ ]{| l |}] ) %762~7'(= a3◂ [ *{ a8◂ [ a13◂ [ {| l |}]]a26◂ [ a9◂ [ ]{| l |}]}] ) %761~6'(= a28◂ [ a9◂ [ ]] ) %760~5'(= a27◂ [ ] ) %757~2'(= a2◂ [ a13◂ [ {| l |}]] ) 
; _#10 0'(= r ) ⊢ 0'(= r )
	sub r13,1
;; rsp=1 , %768~0'(= r ) %767~3'(= {| l |} ) %764~1'(= {| l |} ) %763~8'(= a26◂ [ a9◂ [ ]{| l |}] ) %762~7'(= a3◂ [ *{ a8◂ [ a13◂ [ {| l |}]]a26◂ [ a9◂ [ ]{| l |}]}] ) %761~6'(= a28◂ [ a9◂ [ ]] ) %760~5'(= a27◂ [ ] ) %757~2'(= a2◂ [ a13◂ [ {| l |}]] ) 
; rsp_d=0, #160 { 0'(= r ) 8'(= a26◂ [ a9◂ [ ]{| l |}] ) } ⊢ { 0'(= r ) 4'(= {| l |} ) }
	sub rsp,48
	mov QWORD [rsp+8*0],r14
	mov QWORD [rsp+8*1],r8
	mov QWORD [rsp+8*2],r9
	mov QWORD [rsp+8*3],r11
	mov QWORD [rsp+8*4],rcx
	mov QWORD [rsp+8*5],rdx
; .mov_ptn2 { 0'(= r ) 8'(= a26◂ [ a9◂ [ ]{| l |}] ) } ⊢ { 0'(= r ) 1'(= a26◂ [ a9◂ [ ]{| l |}] ) }
; .mov_ptn 8'(= a26◂ [ a9◂ [ ]{| l |}] ) ⊢ 1'(= a26◂ [ a9◂ [ ]{| l |}] )
	mov rax,QWORD [rsp-8+8*7]
	mov r14,rax
	call ETR_160

	mov rdx,QWORD [rsp-8+8*6]
	mov rcx,QWORD [rsp-8+8*5]
	mov r11,QWORD [rsp-8+8*4]
	mov r9,QWORD [rsp-8+8*3]
	mov r8,QWORD [rsp-8+8*2]
	mov rax,QWORD [rsp-8+8*1]
	mov r10,r14
	mov r14,rax
	add rsp,56
;; rsp=0 , %770~4'(= {| l |} ) %769~0'(= r ) %767~3'(= {| l |} ) %764~1'(= {| l |} ) %762~7'(= a3◂ [ *{ a8◂ [ a13◂ [ {| l |}]]a26◂ [ a9◂ [ ]{| l |}]}] ) %761~6'(= a28◂ [ a9◂ [ ]] ) %760~5'(= a27◂ [ ] ) %757~2'(= a2◂ [ a13◂ [ {| l |}]] ) 
; » _^ .. ⊢ ..
; .. //
	sub rsp,8
	mov rdi,0
	mov rsi,r13
	push rsi
	imul rsi,1
	add rdi,rsi 
	mov rsi,r14
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[rsi] 
	add rdi,rax 
	push rax
	push rsi
	mov rsi,r9
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[rsi] 
	add rdi,rax 
	push rax
	push rsi
	mov rsi,r10
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[rsi] 
	add rdi,rax 
	push rax
	push rsi
	add rdi,12
	push rdi 
	call mlc_s8
	pop rdi
	mov QWORD [rsp-8+8*8],rax
	lea rdi,[rax+7+rdi]
	std 
	mov QWORD [tmp],rcx 
	pop rsi 
	pop rcx
	lea rsi,[rsi+7+rcx]
	rep movsb
	pop rsi 
	pop rcx
	lea rsi,[rsi+7+rcx]
	rep movsb
	lea rsi,[LB_540+1-1]
	mov rcx,1
	rep movsb
	pop rsi 
	pop rcx
	lea rsi,[rsi+7+rcx]
	rep movsb
	lea rsi,[LB_541+11-1]
	mov rcx,11
	rep movsb
	pop rax 
LB_543:
	cmp rax,0
	jz LB_544
	sub rax,1
	lea rsi,[LB_542+1-1]
	mov rcx,1
	rep movsb 
	jmp LB_543
LB_544:
	mov rcx,QWORD [tmp] 
;; rsp=1 , %775~8'(= {| l |} ) %774~4'(= {| l |} ) %773~3'(= {| l |} ) %772~1'(= {| l |} ) %771~0'(= r ) %762~7'(= a3◂ [ *{ a8◂ [ a13◂ [ {| l |}]]a26◂ [ a9◂ [ ]{| l |}]}] ) %761~6'(= a28◂ [ a9◂ [ ]] ) %760~5'(= a27◂ [ ] ) %757~2'(= a2◂ [ a13◂ [ {| l |}]] ) 
; ∎ { 0'(= r ) 8'(= {| l |} ) }
; .dlt.ptn 4'(= {| l |} )
	mov rdi,r10
	call free_s8 
; .dlt.ptn 3'(= {| l |} )
	mov rdi,r9
	call free_s8 
; .dlt.ptn 1'(= {| l |} )
	mov rdi,r14
	call free_s8 
; .dlt.ptn 7'(= a3◂ [ *{ a8◂ [ a13◂ [ {| l |}]]a26◂ [ a9◂ [ ]{| l |}]}] )
;	.dlt adt ⊢ _  
; .dlt.ptn 6'(= a28◂ [ a9◂ [ ]] )
;	.dlt adt ⊢ _  
; .dlt.ptn 5'(= a27◂ [ ] )
;	.dlt adt ⊢ _  
; .dlt.ptn 2'(= a2◂ [ a13◂ [ {| l |}]] )
;	.dlt adt ⊢ _  
; .mov_ptn2 { 0'(= r ) 8'(= {| l |} ) } ⊢ { 0'(= r ) 1'(= {| l |} ) }
; .mov_ptn 8'(= {| l |} ) ⊢ 1'(= {| l |} )
	mov rax,QWORD [rsp-8+8*1]
	mov r14,rax
	add rsp,8
	ret
LB_539:
;; ?; 1'(= a26◂ [ a9◂ [ ]{| l |}] ) ⊢ 1(<2)◂{ 2'(= a2◂ [ a13◂ [ {| l |}]] ) 3'(= a8◂ [ a13◂ [ {| l |}]] ) 4'(= a17◂ [ a9◂ [ ]{| l |}] ) 5'(= a27◂ [ ] ) 6'(= a28◂ [ a9◂ [ ]] ) 7'(= a3◂ [ *{ a8◂ [ a13◂ [ {| l |}]]a26◂ [ a9◂ [ ]{| l |}]}] ) }
	mov rdi,r14
	mov rdi,QWORD [rdi+8+8*0]
	mov r8,rdi
	mov rdi,r14
	mov rdi,QWORD [rdi+8+8*1]
	mov r9,rdi
	mov rdi,r14
	mov rdi,QWORD [rdi+8+8*2]
	mov r10,rdi
	mov rdi,r14
	mov rdi,QWORD [rdi+8+8*3]
	mov r11,rdi
	mov rdi,r14
	mov rdi,QWORD [rdi+8+8*4]
	mov rcx,rdi
	mov rdi,r14
	mov rdi,QWORD [rdi+8+8*5]
	mov rdx,rdi
;; rsp=0 , %781~7'(= a3◂ [ *{ a8◂ [ a13◂ [ {| l |}]]a26◂ [ a9◂ [ ]{| l |}]}] ) %780~6'(= a28◂ [ a9◂ [ ]] ) %779~5'(= a27◂ [ ] ) %778~4'(= a17◂ [ a9◂ [ ]{| l |}] ) %777~3'(= a8◂ [ a13◂ [ {| l |}]] ) %776~2'(= a2◂ [ a13◂ [ {| l |}]] ) %755~0'(= r ) 
; rsp_d=0, #99 3'(= a8◂ [ a13◂ [ {| l |}]] ) ⊢ 1'(= {| l |} )
	sub rsp,48
	mov QWORD [rsp+8*0],r13
	mov QWORD [rsp+8*1],r8
	mov QWORD [rsp+8*2],r10
	mov QWORD [rsp+8*3],r11
	mov QWORD [rsp+8*4],rcx
	mov QWORD [rsp+8*5],rdx
; .mov_ptn2 3'(= a8◂ [ a13◂ [ {| l |}]] ) ⊢ 0'(= a8◂ [ a13◂ [ {| l |}]] )
; .mov_ptn 3'(= a8◂ [ a13◂ [ {| l |}]] ) ⊢ 0'(= a8◂ [ a13◂ [ {| l |}]] )
	mov rax,r9
	mov r13,rax
	call ETR_99

	mov rdx,QWORD [rsp-8+8*6]
	mov rcx,QWORD [rsp-8+8*5]
	mov r11,QWORD [rsp-8+8*4]
	mov r10,QWORD [rsp-8+8*3]
	mov r8,QWORD [rsp-8+8*2]
	mov rax,QWORD [rsp-8+8*1]
	mov r14,r13
	mov r13,rax
	add rsp,48
;; rsp=0 , %782~1'(= {| l |} ) %781~7'(= a3◂ [ *{ a8◂ [ a13◂ [ {| l |}]]a26◂ [ a9◂ [ ]{| l |}]}] ) %780~6'(= a28◂ [ a9◂ [ ]] ) %779~5'(= a27◂ [ ] ) %778~4'(= a17◂ [ a9◂ [ ]{| l |}] ) %776~2'(= a2◂ [ a13◂ [ {| l |}]] ) %755~0'(= r ) 
; _#9 0'(= r ) ⊢ 0'(= r )
	add r13,1
;; rsp=0 , %783~0'(= r ) %782~1'(= {| l |} ) %781~7'(= a3◂ [ *{ a8◂ [ a13◂ [ {| l |}]]a26◂ [ a9◂ [ ]{| l |}]}] ) %780~6'(= a28◂ [ a9◂ [ ]] ) %779~5'(= a27◂ [ ] ) %778~4'(= a17◂ [ a9◂ [ ]{| l |}] ) %776~2'(= a2◂ [ a13◂ [ {| l |}]] ) 
; rsp_d=0, #132 { 0'(= r ) 4'(= a17◂ [ a9◂ [ ]{| l |}] ) } ⊢ { 0'(= r ) 3'(= {| l |} ) }
	sub rsp,40
	mov QWORD [rsp+8*0],r14
	mov QWORD [rsp+8*1],r8
	mov QWORD [rsp+8*2],r11
	mov QWORD [rsp+8*3],rcx
	mov QWORD [rsp+8*4],rdx
; .mov_ptn2 { 0'(= r ) 4'(= a17◂ [ a9◂ [ ]{| l |}] ) } ⊢ { 0'(= r ) 1'(= a17◂ [ a9◂ [ ]{| l |}] ) }
; .mov_ptn 4'(= a17◂ [ a9◂ [ ]{| l |}] ) ⊢ 1'(= a17◂ [ a9◂ [ ]{| l |}] )
	mov rax,r10
	mov r14,rax
	call ETR_132

	mov rdx,QWORD [rsp-8+8*5]
	mov rcx,QWORD [rsp-8+8*4]
	mov r11,QWORD [rsp-8+8*3]
	mov r8,QWORD [rsp-8+8*2]
	mov rax,QWORD [rsp-8+8*1]
	mov r9,r14
	mov r14,rax
	add rsp,40
;; rsp=0 , %785~3'(= {| l |} ) %784~0'(= r ) %782~1'(= {| l |} ) %781~7'(= a3◂ [ *{ a8◂ [ a13◂ [ {| l |}]]a26◂ [ a9◂ [ ]{| l |}]}] ) %780~6'(= a28◂ [ a9◂ [ ]] ) %779~5'(= a27◂ [ ] ) %776~2'(= a2◂ [ a13◂ [ {| l |}]] ) 
; _#10 0'(= r ) ⊢ 0'(= r )
	sub r13,1
;; rsp=0 , %786~0'(= r ) %785~3'(= {| l |} ) %782~1'(= {| l |} ) %781~7'(= a3◂ [ *{ a8◂ [ a13◂ [ {| l |}]]a26◂ [ a9◂ [ ]{| l |}]}] ) %780~6'(= a28◂ [ a9◂ [ ]] ) %779~5'(= a27◂ [ ] ) %776~2'(= a2◂ [ a13◂ [ {| l |}]] ) 
; » _^ .. ⊢ ..
; .. //
	mov rdi,0
	mov rsi,r13
	push rsi
	imul rsi,1
	add rdi,rsi 
	mov rsi,r14
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[rsi] 
	add rdi,rax 
	push rax
	push rsi
	mov rsi,r9
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[rsi] 
	add rdi,rax 
	push rax
	push rsi
	add rdi,13
	push rdi 
	call mlc_s8
	pop rdi
	mov r10,rax
	lea rdi,[rax+7+rdi]
	std 
	mov QWORD [tmp],rcx 
	pop rsi 
	pop rcx
	lea rsi,[rsi+7+rcx]
	rep movsb
	lea rsi,[LB_545+1-1]
	mov rcx,1
	rep movsb
	pop rsi 
	pop rcx
	lea rsi,[rsi+7+rcx]
	rep movsb
	lea rsi,[LB_546+12-1]
	mov rcx,12
	rep movsb
	pop rax 
LB_548:
	cmp rax,0
	jz LB_549
	sub rax,1
	lea rsi,[LB_547+1-1]
	mov rcx,1
	rep movsb 
	jmp LB_548
LB_549:
	mov rcx,QWORD [tmp] 
;; rsp=0 , %790~4'(= {| l |} ) %789~3'(= {| l |} ) %788~1'(= {| l |} ) %787~0'(= r ) %781~7'(= a3◂ [ *{ a8◂ [ a13◂ [ {| l |}]]a26◂ [ a9◂ [ ]{| l |}]}] ) %780~6'(= a28◂ [ a9◂ [ ]] ) %779~5'(= a27◂ [ ] ) %776~2'(= a2◂ [ a13◂ [ {| l |}]] ) 
; ∎ { 0'(= r ) 4'(= {| l |} ) }
; .dlt.ptn 3'(= {| l |} )
	mov rdi,r9
	call free_s8 
; .dlt.ptn 1'(= {| l |} )
	mov rdi,r14
	call free_s8 
; .dlt.ptn 7'(= a3◂ [ *{ a8◂ [ a13◂ [ {| l |}]]a26◂ [ a9◂ [ ]{| l |}]}] )
;	.dlt adt ⊢ _  
; .dlt.ptn 6'(= a28◂ [ a9◂ [ ]] )
;	.dlt adt ⊢ _  
; .dlt.ptn 5'(= a27◂ [ ] )
;	.dlt adt ⊢ _  
; .dlt.ptn 2'(= a2◂ [ a13◂ [ {| l |}]] )
;	.dlt adt ⊢ _  
; .mov_ptn2 { 0'(= r ) 4'(= {| l |} ) } ⊢ { 0'(= r ) 1'(= {| l |} ) }
; .mov_ptn 4'(= {| l |} ) ⊢ 1'(= {| l |} )
	mov rax,r10
	mov r14,rax
	ret
ETR_163: ; act_regs { } ⊢ 0'(= a2◂ [ a13◂ [ {| l |}]] ) : ({ }→_lst◂_t13◂_s8)
;; rsp=0 , 
	jmp LB_550
LB_550:
; $ %[ "_r" ] ⊢ %[ "_r" ]
;; rsp=0 , %811~%[ "_r" ] 
	jmp LB_551
LB_551:
; $ %[ "_n" ] ⊢ %[ "_n" ]
;; rsp=0 , %812~%[ "_n" ] %811~%[ "_r" ] 
; #89 %[ "_r" ] ⊢ 1(<2)◂%[ "_r" ]
;; rsp=0 , %813~1(<2)◂%[ "_r" ] %812~%[ "_n" ] 
; #89 %[ "_n" ] ⊢ 1(<2)◂%[ "_n" ]
;; rsp=0 , %814~1(<2)◂%[ "_n" ] %813~1(<2)◂%[ "_r" ] 
; #20 { } ⊢ 1(<2)◂{ }
;; rsp=0 , %815~1(<2)◂{ } %814~1(<2)◂%[ "_n" ] %813~1(<2)◂%[ "_r" ] 
; #21 { 1(<2)◂%[ "_r" ] 1(<2)◂{ } } ⊢ 0(<2)◂{ 1(<2)◂%[ "_r" ] 1(<2)◂{ } }
;; rsp=0 , %816~0(<2)◂{ 1(<2)◂%[ "_r" ] 1(<2)◂{ } } %814~1(<2)◂%[ "_n" ] 
; #21 { 1(<2)◂%[ "_n" ] 0(<2)◂{ 1(<2)◂%[ "_r" ] 1(<2)◂{ } } } ⊢ 0(<2)◂{ 1(<2)◂%[ "_n" ] 0(<2)◂{ 1(<2)◂%[ "_r" ] 1(<2)◂{ } } }
;; rsp=0 , %817~0(<2)◂{ 1(<2)◂%[ "_n" ] 0(<2)◂{ 1(<2)◂%[ "_r" ] 1(<2)◂{ } } } 
; ∎ 0(<2)◂{ 1(<2)◂%[ "_n" ] 0(<2)◂{ 1(<2)◂%[ "_r" ] 1(<2)◂{ } } }
; .mov_ptn2 0(<2)◂{ 1(<2)◂%[ "_n" ] 0(<2)◂{ 1(<2)◂%[ "_r" ] 1(<2)◂{ } } } ⊢ 0'(= a2◂ [ a13◂ [ {| l |}]] )
; .mov_ptn 0(<2)◂{ 1(<2)◂%[ "_n" ] 0(<2)◂{ 1(<2)◂%[ "_r" ] 1(<2)◂{ } } } ⊢ 0'(= a2◂ [ a13◂ [ {| l |}]] )
	mov rax,[SS_RCD_2_TOP]
	mov rsi,[rax] 
	mov QWORD [SS_RCD_2_TOP],rsi
	mov QWORD [rax],0
	mov r14,rax
	mov rsi,1  
	mov rdi,16
	xor rax,rax 
	C_CALL_SF calloc
	mov QWORD [rax],2
	mov BYTE [rax+8+0],95
	mov BYTE [rax+8+1],110
	mov BYTE [rax+6],1
	mov QWORD [r14+8+8*0],rax
	mov rax,[SS_RCD_2_TOP]
	mov rsi,[rax] 
	mov QWORD [SS_RCD_2_TOP],rsi
	mov QWORD [rax],0
	mov r8,rax
	mov rsi,1  
	mov rdi,16
	xor rax,rax 
	C_CALL_SF calloc
	mov QWORD [rax],2
	mov BYTE [rax+8+0],95
	mov BYTE [rax+8+1],114
	mov BYTE [rax+6],1
	mov QWORD [r8+8+8*0],rax
	mov rax,unt 
	mov rax,unt_1
	mov QWORD [r8+8+8*1],rax
	mov rax,r8
	mov BYTE [rax+6],0
	mov QWORD [r14+8+8*1],rax
	mov rax,r14
	mov BYTE [rax+6],0
	mov r13,rax
	ret
ETR_177: ; pnt { 0'(= r ) 1'(= a2◂ [ a31◂ [ ]] ) } ⊢ { 0'(= r ) 1'(= {| l |} ) } : ({ _r64 _lst◂_t31 }→{ _r64 _s8 })
;; rsp=0 , %819~1'(= a2◂ [ a31◂ [ ]] ) %818~0'(= r ) 
;; ?; 1'(= a2◂ [ a31◂ [ ]] ) ⊢ 1(<2)◂{ }
	mov rdi,r14
	cmp BYTE [rdi+6],1
	jnz LB_552
;; rsp=0 , %818~0'(= r ) 
	jmp LB_553
LB_553:
; $ %[ "" ] ⊢ %[ "" ]
;; rsp=0 , %820~%[ "" ] %818~0'(= r ) 
; ∎ { 0'(= r ) %[ "" ] }
; .mov_ptn2 { 0'(= r ) %[ "" ] } ⊢ { 0'(= r ) 1'(= {| l |} ) }
; .mov_ptn %[ "" ] ⊢ 1'(= {| l |} )
	mov rsi,1  
	mov rdi,16
	xor rax,rax 
	C_CALL_SF calloc
	mov QWORD [rax],0
	mov r14,rax
	ret
LB_552:
;; ?; 1'(= a2◂ [ a31◂ [ ]] ) ⊢ 0(<2)◂{ 2'(= a31◂ [ ] ) 3'(= a2◂ [ a31◂ [ ]] ) }
	mov rdi,r14
	mov rdi,QWORD [rdi+8+8*0]
	mov r8,rdi
	mov rdi,r14
	mov rdi,QWORD [rdi+8+8*1]
	mov r9,rdi
;; rsp=0 , %822~3'(= a2◂ [ a31◂ [ ]] ) %821~2'(= a31◂ [ ] ) %818~0'(= r ) 
; rsp_d=0, #178 { 0'(= r ) 2'(= a31◂ [ ] ) } ⊢ { 0'(= r ) 1'(= {| l |} ) }
	sub rsp,8
	mov QWORD [rsp+8*0],r9
; .mov_ptn2 { 0'(= r ) 2'(= a31◂ [ ] ) } ⊢ { 0'(= r ) 1'(= a31◂ [ ] ) }
; .mov_ptn 2'(= a31◂ [ ] ) ⊢ 1'(= a31◂ [ ] )
	mov rax,r8
	mov r14,rax
	call ETR_178

	mov r9,QWORD [rsp-8+8*1]
	add rsp,8
;; rsp=0 , %824~1'(= {| l |} ) %823~0'(= r ) %822~3'(= a2◂ [ a31◂ [ ]] ) 
; rsp_d=0, #177 { 0'(= r ) 3'(= a2◂ [ a31◂ [ ]] ) } ⊢ { 0'(= r ) 2'(= {| l |} ) }
	sub rsp,8
	mov QWORD [rsp+8*0],r14
; .mov_ptn2 { 0'(= r ) 3'(= a2◂ [ a31◂ [ ]] ) } ⊢ { 0'(= r ) 1'(= a2◂ [ a31◂ [ ]] ) }
; .mov_ptn 3'(= a2◂ [ a31◂ [ ]] ) ⊢ 1'(= a2◂ [ a31◂ [ ]] )
	mov rax,r9
	mov r14,rax
	call ETR_177

	mov rax,QWORD [rsp-8+8*1]
	mov r8,r14
	mov r14,rax
	add rsp,8
;; rsp=0 , %826~2'(= {| l |} ) %825~0'(= r ) %824~1'(= {| l |} ) 
; » _^ .. ⊢ ..
; .. //
	mov rdi,0
	mov rsi,r14
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[rsi] 
	add rdi,rax 
	push rax
	push rsi
	mov rsi,r8
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[rsi] 
	add rdi,rax 
	push rax
	push rsi
	add rdi,0
	push rdi 
	call mlc_s8
	pop rdi
	mov r9,rax
	lea rdi,[rax+7+rdi]
	std 
	mov QWORD [tmp],rcx 
	pop rsi 
	pop rcx
	lea rsi,[rsi+7+rcx]
	rep movsb
	pop rsi 
	pop rcx
	lea rsi,[rsi+7+rcx]
	rep movsb
	mov rcx,QWORD [tmp] 
;; rsp=0 , %829~3'(= {| l |} ) %828~2'(= {| l |} ) %827~1'(= {| l |} ) %825~0'(= r ) 
; ∎ { 0'(= r ) 3'(= {| l |} ) }
; .dlt.ptn 2'(= {| l |} )
	mov rdi,r8
	call free_s8 
; .dlt.ptn 1'(= {| l |} )
	mov rdi,r14
	call free_s8 
; .mov_ptn2 { 0'(= r ) 3'(= {| l |} ) } ⊢ { 0'(= r ) 1'(= {| l |} ) }
; .mov_ptn 3'(= {| l |} ) ⊢ 1'(= {| l |} )
	mov rax,r9
	mov r14,rax
	ret
ETR_178: ; pnt_glb_etr { 0'(= r ) 1'(= a31◂ [ ] ) } ⊢ { 0'(= r ) 1'(= {| l |} ) } : ({ _r64 _t31 }→{ _r64 _s8 })
;; rsp=0 , %831~1'(= a31◂ [ ] ) %830~0'(= r ) 
;; ?; 1'(= a31◂ [ ] ) ⊢ 0(<6)◂{ 2'(= {| l |} ) 3'(= a32◂ [ ] ) }
	mov rdi,r14
	cmp BYTE [rdi+6],0
	jnz LB_554
	mov rdi,r14
	mov rdi,QWORD [rdi+8+8*0]
	mov r8,rdi
	mov rdi,r14
	mov rdi,QWORD [rdi+8+8*1]
	mov r9,rdi
;; rsp=0 , %833~3'(= a32◂ [ ] ) %832~2'(= {| l |} ) %830~0'(= r ) 
;; ?; 3'(= a32◂ [ ] ) ⊢ 0(<2)◂1'(= a2◂ [ a31◂ [ ]] )
	mov rdi,r9
	cmp BYTE [rdi+6],0
	jnz LB_555
	mov rax,QWORD [rdi+8]
	mov r14,rax
;; rsp=0 , %834~1'(= a2◂ [ a31◂ [ ]] ) %832~2'(= {| l |} ) %830~0'(= r ) 
; _#9 0'(= r ) ⊢ 0'(= r )
	add r13,1
;; rsp=0 , %835~0'(= r ) %834~1'(= a2◂ [ a31◂ [ ]] ) %832~2'(= {| l |} ) 
; rsp_d=0, #177 { 0'(= r ) 1'(= a2◂ [ a31◂ [ ]] ) } ⊢ { 0'(= r ) 1'(= {| l |} ) }
	sub rsp,8
	mov QWORD [rsp+8*0],r8
; .mov_ptn2 { 0'(= r ) 1'(= a2◂ [ a31◂ [ ]] ) } ⊢ { 0'(= r ) 1'(= a2◂ [ a31◂ [ ]] ) }
	call ETR_177

	mov r8,QWORD [rsp-8+8*1]
	add rsp,8
;; rsp=0 , %837~1'(= {| l |} ) %836~0'(= r ) %832~2'(= {| l |} ) 
; _#10 0'(= r ) ⊢ 0'(= r )
	sub r13,1
;; rsp=0 , %838~0'(= r ) %837~1'(= {| l |} ) %832~2'(= {| l |} ) 
; » _^ .. ⊢ ..
; .. //
	mov rdi,0
	mov rsi,r13
	push rsi
	imul rsi,1
	add rdi,rsi 
	mov rsi,r8
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[rsi] 
	add rdi,rax 
	push rax
	push rsi
	mov rsi,r14
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[rsi] 
	add rdi,rax 
	push rax
	push rsi
	mov rsi,r13
	push rsi
	imul rsi,1
	add rdi,rsi 
	add rdi,14
	push rdi 
	call mlc_s8
	pop rdi
	mov r9,rax
	lea rdi,[rax+7+rdi]
	std 
	mov QWORD [tmp],rcx 
	lea rsi,[LB_556+7-1]
	mov rcx,7
	rep movsb
	lea rsi,[LB_557+1-1]
	mov rcx,1
	rep movsb
	pop rax 
LB_559:
	cmp rax,0
	jz LB_560
	sub rax,1
	lea rsi,[LB_558+1-1]
	mov rcx,1
	rep movsb 
	jmp LB_559
LB_560:
	pop rsi 
	pop rcx
	lea rsi,[rsi+7+rcx]
	rep movsb
	lea rsi,[LB_561+1-1]
	mov rcx,1
	rep movsb
	pop rsi 
	pop rcx
	lea rsi,[rsi+7+rcx]
	rep movsb
	lea rsi,[LB_562+5-1]
	mov rcx,5
	rep movsb
	pop rax 
LB_564:
	cmp rax,0
	jz LB_565
	sub rax,1
	lea rsi,[LB_563+1-1]
	mov rcx,1
	rep movsb 
	jmp LB_564
LB_565:
	mov rcx,QWORD [tmp] 
;; rsp=0 , %842~3'(= {| l |} ) %841~1'(= {| l |} ) %840~2'(= {| l |} ) %839~0'(= r ) 
; ∎ { 0'(= r ) 3'(= {| l |} ) }
; .dlt.ptn 1'(= {| l |} )
	mov rdi,r14
	call free_s8 
; .dlt.ptn 2'(= {| l |} )
	mov rdi,r8
	call free_s8 
; .mov_ptn2 { 0'(= r ) 3'(= {| l |} ) } ⊢ { 0'(= r ) 1'(= {| l |} ) }
; .mov_ptn 3'(= {| l |} ) ⊢ 1'(= {| l |} )
	mov rax,r9
	mov r14,rax
	ret
LB_555:
;; ?; 3'(= a32◂ [ ] ) ⊢ 1(<2)◂1'(= a9◂ [ ] )
	mov rax,QWORD [rdi+8]
	mov r14,rax
;; rsp=0 , %843~1'(= a9◂ [ ] ) %832~2'(= {| l |} ) %830~0'(= r ) 
; rsp_d=0, #82 1'(= a9◂ [ ] ) ⊢ 1'(= {| l |} )
	sub rsp,16
	mov QWORD [rsp+8*0],r13
	mov QWORD [rsp+8*1],r8
; .mov_ptn2 1'(= a9◂ [ ] ) ⊢ 0'(= a9◂ [ ] )
; .mov_ptn 1'(= a9◂ [ ] ) ⊢ 0'(= a9◂ [ ] )
	mov rax,r14
	mov r13,rax
	call ETR_82

	mov r8,QWORD [rsp-8+8*2]
	mov rax,QWORD [rsp-8+8*1]
	mov r14,r13
	mov r13,rax
	add rsp,16
;; rsp=0 , %844~1'(= {| l |} ) %832~2'(= {| l |} ) %830~0'(= r ) 
; » _^ .. ⊢ ..
; .. //
	mov rdi,0
	mov rsi,r13
	push rsi
	imul rsi,1
	add rdi,rsi 
	mov rsi,r8
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[rsi] 
	add rdi,rax 
	push rax
	push rsi
	mov rsi,r14
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[rsi] 
	add rdi,rax 
	push rax
	push rsi
	add rdi,9
	push rdi 
	call mlc_s8
	pop rdi
	mov r9,rax
	lea rdi,[rax+7+rdi]
	std 
	mov QWORD [tmp],rcx 
	lea rsi,[LB_566+1-1]
	mov rcx,1
	rep movsb
	pop rsi 
	pop rcx
	lea rsi,[rsi+7+rcx]
	rep movsb
	lea rsi,[LB_567+3-1]
	mov rcx,3
	rep movsb
	pop rsi 
	pop rcx
	lea rsi,[rsi+7+rcx]
	rep movsb
	lea rsi,[LB_568+5-1]
	mov rcx,5
	rep movsb
	pop rax 
LB_570:
	cmp rax,0
	jz LB_571
	sub rax,1
	lea rsi,[LB_569+1-1]
	mov rcx,1
	rep movsb 
	jmp LB_570
LB_571:
	mov rcx,QWORD [tmp] 
;; rsp=0 , %848~3'(= {| l |} ) %847~1'(= {| l |} ) %846~2'(= {| l |} ) %845~0'(= r ) 
; ∎ { 0'(= r ) 3'(= {| l |} ) }
; .dlt.ptn 1'(= {| l |} )
	mov rdi,r14
	call free_s8 
; .dlt.ptn 2'(= {| l |} )
	mov rdi,r8
	call free_s8 
; .mov_ptn2 { 0'(= r ) 3'(= {| l |} ) } ⊢ { 0'(= r ) 1'(= {| l |} ) }
; .mov_ptn 3'(= {| l |} ) ⊢ 1'(= {| l |} )
	mov rax,r9
	mov r14,rax
	ret
LB_554:
;; ?; 1'(= a31◂ [ ] ) ⊢ 1(<6)◂2'(= a2◂ [ *{ {| l |}a24◂ [ a9◂ [ ]{| l |}]}] )
	mov rdi,r14
	cmp BYTE [rdi+6],1
	jnz LB_572
	mov rax,QWORD [rdi+8]
	mov r8,rax
;; rsp=0 , %849~2'(= a2◂ [ *{ {| l |}a24◂ [ a9◂ [ ]{| l |}]}] ) %830~0'(= r ) 
; _#9 0'(= r ) ⊢ 0'(= r )
	add r13,1
;; rsp=0 , %850~0'(= r ) %849~2'(= a2◂ [ *{ {| l |}a24◂ [ a9◂ [ ]{| l |}]}] ) 
; rsp_d=0, #157 { 0'(= r ) 2'(= a2◂ [ *{ {| l |}a24◂ [ a9◂ [ ]{| l |}]}] ) } ⊢ { 0'(= r ) 1'(= {| l |} ) }
; .mov_ptn2 { 0'(= r ) 2'(= a2◂ [ *{ {| l |}a24◂ [ a9◂ [ ]{| l |}]}] ) } ⊢ { 0'(= r ) 1'(= a2◂ [ *{ {| l |}a24◂ [ a9◂ [ ]{| l |}]}] ) }
; .mov_ptn 2'(= a2◂ [ *{ {| l |}a24◂ [ a9◂ [ ]{| l |}]}] ) ⊢ 1'(= a2◂ [ *{ {| l |}a24◂ [ a9◂ [ ]{| l |}]}] )
	mov rax,r8
	mov r14,rax
	call ETR_157

;; rsp=0 , %852~1'(= {| l |} ) %851~0'(= r ) 
; _#10 0'(= r ) ⊢ 0'(= r )
	sub r13,1
;; rsp=0 , %853~0'(= r ) %852~1'(= {| l |} ) 
; » _^ .. ⊢ ..
; .. //
	mov rdi,0
	mov rsi,r13
	push rsi
	imul rsi,1
	add rdi,rsi 
	mov rsi,r14
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[rsi] 
	add rdi,rax 
	push rax
	push rsi
	add rdi,8
	push rdi 
	call mlc_s8
	pop rdi
	mov r8,rax
	lea rdi,[rax+7+rdi]
	std 
	mov QWORD [tmp],rcx 
	pop rsi 
	pop rcx
	lea rsi,[rsi+7+rcx]
	rep movsb
	lea rsi,[LB_573+8-1]
	mov rcx,8
	rep movsb
	pop rax 
LB_575:
	cmp rax,0
	jz LB_576
	sub rax,1
	lea rsi,[LB_574+1-1]
	mov rcx,1
	rep movsb 
	jmp LB_575
LB_576:
	mov rcx,QWORD [tmp] 
;; rsp=0 , %856~2'(= {| l |} ) %855~1'(= {| l |} ) %854~0'(= r ) 
; ∎ { 0'(= r ) 2'(= {| l |} ) }
; .dlt.ptn 1'(= {| l |} )
	mov rdi,r14
	call free_s8 
; .mov_ptn2 { 0'(= r ) 2'(= {| l |} ) } ⊢ { 0'(= r ) 1'(= {| l |} ) }
; .mov_ptn 2'(= {| l |} ) ⊢ 1'(= {| l |} )
	mov rax,r8
	mov r14,rax
	ret
LB_572:
;; ?; 1'(= a31◂ [ ] ) ⊢ 2(<6)◂{ 2'(= {| l |} ) 3'(= a33◂ [ ] ) }
	mov rdi,r14
	cmp BYTE [rdi+6],2
	jnz LB_577
	mov rdi,r14
	mov rdi,QWORD [rdi+8+8*0]
	mov r8,rdi
	mov rdi,r14
	mov rdi,QWORD [rdi+8+8*1]
	mov r9,rdi
;; rsp=0 , %858~3'(= a33◂ [ ] ) %857~2'(= {| l |} ) %830~0'(= r ) 
; _#9 0'(= r ) ⊢ 0'(= r )
	add r13,1
;; rsp=0 , %859~0'(= r ) %858~3'(= a33◂ [ ] ) %857~2'(= {| l |} ) 
; rsp_d=0, #184 { 0'(= r ) 3'(= a33◂ [ ] ) } ⊢ { 0'(= r ) 1'(= {| l |} ) }
	sub rsp,8
	mov QWORD [rsp+8*0],r8
; .mov_ptn2 { 0'(= r ) 3'(= a33◂ [ ] ) } ⊢ { 0'(= r ) 1'(= a33◂ [ ] ) }
; .mov_ptn 3'(= a33◂ [ ] ) ⊢ 1'(= a33◂ [ ] )
	mov rax,r9
	mov r14,rax
	call ETR_184

	mov r8,QWORD [rsp-8+8*1]
	add rsp,8
;; rsp=0 , %861~1'(= {| l |} ) %860~0'(= r ) %857~2'(= {| l |} ) 
; _#10 0'(= r ) ⊢ 0'(= r )
	sub r13,1
;; rsp=0 , %862~0'(= r ) %861~1'(= {| l |} ) %857~2'(= {| l |} ) 
; » _^ .. ⊢ ..
; .. //
	mov rdi,0
	mov rsi,r13
	push rsi
	imul rsi,1
	add rdi,rsi 
	mov rsi,r8
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[rsi] 
	add rdi,rax 
	push rax
	push rsi
	mov rsi,r14
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[rsi] 
	add rdi,rax 
	push rax
	push rsi
	add rdi,3
	push rdi 
	call mlc_s8
	pop rdi
	mov r9,rax
	lea rdi,[rax+7+rdi]
	std 
	mov QWORD [tmp],rcx 
	pop rsi 
	pop rcx
	lea rsi,[rsi+7+rcx]
	rep movsb
	pop rsi 
	pop rcx
	lea rsi,[rsi+7+rcx]
	rep movsb
	lea rsi,[LB_578+3-1]
	mov rcx,3
	rep movsb
	pop rax 
LB_580:
	cmp rax,0
	jz LB_581
	sub rax,1
	lea rsi,[LB_579+1-1]
	mov rcx,1
	rep movsb 
	jmp LB_580
LB_581:
	mov rcx,QWORD [tmp] 
;; rsp=0 , %866~3'(= {| l |} ) %865~1'(= {| l |} ) %864~2'(= {| l |} ) %863~0'(= r ) 
; ∎ { 0'(= r ) 3'(= {| l |} ) }
; .dlt.ptn 1'(= {| l |} )
	mov rdi,r14
	call free_s8 
; .dlt.ptn 2'(= {| l |} )
	mov rdi,r8
	call free_s8 
; .mov_ptn2 { 0'(= r ) 3'(= {| l |} ) } ⊢ { 0'(= r ) 1'(= {| l |} ) }
; .mov_ptn 3'(= {| l |} ) ⊢ 1'(= {| l |} )
	mov rax,r9
	mov r14,rax
	ret
LB_577:
;; ?; 1'(= a31◂ [ ] ) ⊢ 3(<6)◂2'(= a2◂ [ *{ {| l |}a8◂ [ a13◂ [ {| l |}]]a3◂ [ a23◂ [ ]]a17◂ [ a9◂ [ ]{| l |}]}] )
	mov rdi,r14
	cmp BYTE [rdi+6],3
	jnz LB_582
	mov rax,QWORD [rdi+8]
	mov r8,rax
;; rsp=0 , %867~2'(= a2◂ [ *{ {| l |}a8◂ [ a13◂ [ {| l |}]]a3◂ [ a23◂ [ ]]a17◂ [ a9◂ [ ]{| l |}]}] ) %830~0'(= r ) 
; _#9 0'(= r ) ⊢ 0'(= r )
	add r13,1
;; rsp=0 , %868~0'(= r ) %867~2'(= a2◂ [ *{ {| l |}a8◂ [ a13◂ [ {| l |}]]a3◂ [ a23◂ [ ]]a17◂ [ a9◂ [ ]{| l |}]}] ) 
; rsp_d=0, #185 { 0'(= r ) 2'(= a2◂ [ *{ {| l |}a8◂ [ a13◂ [ {| l |}]]a3◂ [ a23◂ [ ]]a17◂ [ a9◂ [ ]{| l |}]}] ) } ⊢ { 0'(= r ) 1'(= {| l |} ) }
; .mov_ptn2 { 0'(= r ) 2'(= a2◂ [ *{ {| l |}a8◂ [ a13◂ [ {| l |}]]a3◂ [ a23◂ [ ]]a17◂ [ a9◂ [ ]{| l |}]}] ) } ⊢ { 0'(= r ) 1'(= a2◂ [ *{ {| l |}a8◂ [ a13◂ [ {| l |}]]a3◂ [ a23◂ [ ]]a17◂ [ a9◂ [ ]{| l |}]}] ) }
; .mov_ptn 2'(= a2◂ [ *{ {| l |}a8◂ [ a13◂ [ {| l |}]]a3◂ [ a23◂ [ ]]a17◂ [ a9◂ [ ]{| l |}]}] ) ⊢ 1'(= a2◂ [ *{ {| l |}a8◂ [ a13◂ [ {| l |}]]a3◂ [ a23◂ [ ]]a17◂ [ a9◂ [ ]{| l |}]}] )
	mov rax,r8
	mov r14,rax
	call ETR_185

;; rsp=0 , %870~1'(= {| l |} ) %869~0'(= r ) 
; _#10 0'(= r ) ⊢ 0'(= r )
	sub r13,1
;; rsp=0 , %871~0'(= r ) %870~1'(= {| l |} ) 
; » _^ .. ⊢ ..
; .. //
	mov rdi,0
	mov rsi,r13
	push rsi
	imul rsi,1
	add rdi,rsi 
	mov rsi,r14
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[rsi] 
	add rdi,rax 
	push rax
	push rsi
	add rdi,4
	push rdi 
	call mlc_s8
	pop rdi
	mov r8,rax
	lea rdi,[rax+7+rdi]
	std 
	mov QWORD [tmp],rcx 
	pop rsi 
	pop rcx
	lea rsi,[rsi+7+rcx]
	rep movsb
	lea rsi,[LB_583+4-1]
	mov rcx,4
	rep movsb
	pop rax 
LB_585:
	cmp rax,0
	jz LB_586
	sub rax,1
	lea rsi,[LB_584+1-1]
	mov rcx,1
	rep movsb 
	jmp LB_585
LB_586:
	mov rcx,QWORD [tmp] 
;; rsp=0 , %874~2'(= {| l |} ) %873~1'(= {| l |} ) %872~0'(= r ) 
; ∎ { 0'(= r ) 2'(= {| l |} ) }
; .dlt.ptn 1'(= {| l |} )
	mov rdi,r14
	call free_s8 
; .mov_ptn2 { 0'(= r ) 2'(= {| l |} ) } ⊢ { 0'(= r ) 1'(= {| l |} ) }
; .mov_ptn 2'(= {| l |} ) ⊢ 1'(= {| l |} )
	mov rax,r8
	mov r14,rax
	ret
LB_582:
;; ?; 1'(= a31◂ [ ] ) ⊢ 4(<6)◂{ 2'(= {| l |} ) 3'(= a34◂ [ ] ) }
	mov rdi,r14
	cmp BYTE [rdi+6],4
	jnz LB_587
	mov rdi,r14
	mov rdi,QWORD [rdi+8+8*0]
	mov r8,rdi
	mov rdi,r14
	mov rdi,QWORD [rdi+8+8*1]
	mov r9,rdi
;; rsp=0 , %876~3'(= a34◂ [ ] ) %875~2'(= {| l |} ) %830~0'(= r ) 
;; ?; 3'(= a34◂ [ ] ) ⊢ 0(<2)◂{ 1'(= a2◂ [ {| l |}] ) 4'(= a2◂ [ *{ {| l |}a23◂ [ ]}] ) }
	mov rdi,r9
	cmp BYTE [rdi+6],0
	jnz LB_588
	mov rdi,r9
	mov rdi,QWORD [rdi+8+8*0]
	mov r14,rdi
	mov rdi,r9
	mov rdi,QWORD [rdi+8+8*1]
	mov r10,rdi
;; rsp=0 , %878~4'(= a2◂ [ *{ {| l |}a23◂ [ ]}] ) %877~1'(= a2◂ [ {| l |}] ) %875~2'(= {| l |} ) %830~0'(= r ) 
; _#9 0'(= r ) ⊢ 0'(= r )
	add r13,1
;; rsp=0 , %879~0'(= r ) %878~4'(= a2◂ [ *{ {| l |}a23◂ [ ]}] ) %877~1'(= a2◂ [ {| l |}] ) %875~2'(= {| l |} ) 
; rsp_d=0, #181 { 0'(= r ) 4'(= a2◂ [ *{ {| l |}a23◂ [ ]}] ) } ⊢ { 0'(= r ) 3'(= {| l |} ) }
	sub rsp,16
	mov QWORD [rsp+8*0],r14
	mov QWORD [rsp+8*1],r8
; .mov_ptn2 { 0'(= r ) 4'(= a2◂ [ *{ {| l |}a23◂ [ ]}] ) } ⊢ { 0'(= r ) 1'(= a2◂ [ *{ {| l |}a23◂ [ ]}] ) }
; .mov_ptn 4'(= a2◂ [ *{ {| l |}a23◂ [ ]}] ) ⊢ 1'(= a2◂ [ *{ {| l |}a23◂ [ ]}] )
	mov rax,r10
	mov r14,rax
	call ETR_181

	mov r8,QWORD [rsp-8+8*2]
	mov rax,QWORD [rsp-8+8*1]
	mov r9,r14
	mov r14,rax
	add rsp,16
;; rsp=0 , %881~3'(= {| l |} ) %880~0'(= r ) %877~1'(= a2◂ [ {| l |}] ) %875~2'(= {| l |} ) 
; _#10 0'(= r ) ⊢ 0'(= r )
	sub r13,1
;; rsp=0 , %882~0'(= r ) %881~3'(= {| l |} ) %877~1'(= a2◂ [ {| l |}] ) %875~2'(= {| l |} ) 
; » _^ .. ⊢ ..
; .. //
	mov rdi,0
	mov rsi,r13
	push rsi
	imul rsi,1
	add rdi,rsi 
	mov rsi,r8
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[rsi] 
	add rdi,rax 
	push rax
	push rsi
	mov rsi,r9
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[rsi] 
	add rdi,rax 
	push rax
	push rsi
	add rdi,4
	push rdi 
	call mlc_s8
	pop rdi
	mov r10,rax
	lea rdi,[rax+7+rdi]
	std 
	mov QWORD [tmp],rcx 
	pop rsi 
	pop rcx
	lea rsi,[rsi+7+rcx]
	rep movsb
	lea rsi,[LB_589+1-1]
	mov rcx,1
	rep movsb
	pop rsi 
	pop rcx
	lea rsi,[rsi+7+rcx]
	rep movsb
	lea rsi,[LB_590+3-1]
	mov rcx,3
	rep movsb
	pop rax 
LB_592:
	cmp rax,0
	jz LB_593
	sub rax,1
	lea rsi,[LB_591+1-1]
	mov rcx,1
	rep movsb 
	jmp LB_592
LB_593:
	mov rcx,QWORD [tmp] 
;; rsp=0 , %886~4'(= {| l |} ) %885~3'(= {| l |} ) %884~2'(= {| l |} ) %883~0'(= r ) %877~1'(= a2◂ [ {| l |}] ) 
; ∎ { 0'(= r ) 4'(= {| l |} ) }
; .dlt.ptn 3'(= {| l |} )
	mov rdi,r9
	call free_s8 
; .dlt.ptn 2'(= {| l |} )
	mov rdi,r8
	call free_s8 
; .dlt.ptn 1'(= a2◂ [ {| l |}] )
;	.dlt adt ⊢ _  
; .mov_ptn2 { 0'(= r ) 4'(= {| l |} ) } ⊢ { 0'(= r ) 1'(= {| l |} ) }
; .mov_ptn 4'(= {| l |} ) ⊢ 1'(= {| l |} )
	mov rax,r10
	mov r14,rax
	ret
LB_588:
;; ?; 3'(= a34◂ [ ] ) ⊢ 1(<2)◂{ 1'(= a2◂ [ {| l |}] ) 4'(= a23◂ [ ] ) }
	mov rdi,r9
	mov rdi,QWORD [rdi+8+8*0]
	mov r14,rdi
	mov rdi,r9
	mov rdi,QWORD [rdi+8+8*1]
	mov r10,rdi
;; rsp=0 , %888~4'(= a23◂ [ ] ) %887~1'(= a2◂ [ {| l |}] ) %875~2'(= {| l |} ) %830~0'(= r ) 
; » _^ .. ⊢ ..
; .. //
	mov rdi,0
	mov rsi,r13
	push rsi
	imul rsi,1
	add rdi,rsi 
	mov rsi,r8
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[rsi] 
	add rdi,rax 
	push rax
	push rsi
	add rdi,10
	push rdi 
	call mlc_s8
	pop rdi
	mov r9,rax
	lea rdi,[rax+7+rdi]
	std 
	mov QWORD [tmp],rcx 
	lea rsi,[LB_594+7-1]
	mov rcx,7
	rep movsb
	pop rsi 
	pop rcx
	lea rsi,[rsi+7+rcx]
	rep movsb
	lea rsi,[LB_595+3-1]
	mov rcx,3
	rep movsb
	pop rax 
LB_597:
	cmp rax,0
	jz LB_598
	sub rax,1
	lea rsi,[LB_596+1-1]
	mov rcx,1
	rep movsb 
	jmp LB_597
LB_598:
	mov rcx,QWORD [tmp] 
;; rsp=0 , %891~3'(= {| l |} ) %890~2'(= {| l |} ) %889~0'(= r ) %888~4'(= a23◂ [ ] ) %887~1'(= a2◂ [ {| l |}] ) 
; ∎ { 0'(= r ) 3'(= {| l |} ) }
; .dlt.ptn 2'(= {| l |} )
	mov rdi,r8
	call free_s8 
; .dlt.ptn 4'(= a23◂ [ ] )
;	.dlt adt ⊢ _  
; .dlt.ptn 1'(= a2◂ [ {| l |}] )
;	.dlt adt ⊢ _  
; .mov_ptn2 { 0'(= r ) 3'(= {| l |} ) } ⊢ { 0'(= r ) 1'(= {| l |} ) }
; .mov_ptn 3'(= {| l |} ) ⊢ 1'(= {| l |} )
	mov rax,r9
	mov r14,rax
	ret
LB_587:
;; ?; 1'(= a31◂ [ ] ) ⊢ 5(<6)◂2'(= a2◂ [ *{ {| l |}a34◂ [ ]}] )
	mov rax,QWORD [rdi+8]
	mov r8,rax
;; rsp=0 , %892~2'(= a2◂ [ *{ {| l |}a34◂ [ ]}] ) %830~0'(= r ) 
; _#9 0'(= r ) ⊢ 0'(= r )
	add r13,1
;; rsp=0 , %893~0'(= r ) %892~2'(= a2◂ [ *{ {| l |}a34◂ [ ]}] ) 
; rsp_d=0, #179 { 0'(= r ) 2'(= a2◂ [ *{ {| l |}a34◂ [ ]}] ) } ⊢ { 0'(= r ) 1'(= {| l |} ) }
; .mov_ptn2 { 0'(= r ) 2'(= a2◂ [ *{ {| l |}a34◂ [ ]}] ) } ⊢ { 0'(= r ) 1'(= a2◂ [ *{ {| l |}a34◂ [ ]}] ) }
; .mov_ptn 2'(= a2◂ [ *{ {| l |}a34◂ [ ]}] ) ⊢ 1'(= a2◂ [ *{ {| l |}a34◂ [ ]}] )
	mov rax,r8
	mov r14,rax
	call ETR_179

;; rsp=0 , %895~1'(= {| l |} ) %894~0'(= r ) 
; _#10 0'(= r ) ⊢ 0'(= r )
	sub r13,1
;; rsp=0 , %896~0'(= r ) %895~1'(= {| l |} ) 
; » _^ .. ⊢ ..
; .. //
	mov rdi,0
	mov rsi,r13
	push rsi
	imul rsi,1
	add rdi,rsi 
	mov rsi,r14
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[rsi] 
	add rdi,rax 
	push rax
	push rsi
	add rdi,3
	push rdi 
	call mlc_s8
	pop rdi
	mov r8,rax
	lea rdi,[rax+7+rdi]
	std 
	mov QWORD [tmp],rcx 
	pop rsi 
	pop rcx
	lea rsi,[rsi+7+rcx]
	rep movsb
	lea rsi,[LB_599+3-1]
	mov rcx,3
	rep movsb
	pop rax 
LB_601:
	cmp rax,0
	jz LB_602
	sub rax,1
	lea rsi,[LB_600+1-1]
	mov rcx,1
	rep movsb 
	jmp LB_601
LB_602:
	mov rcx,QWORD [tmp] 
;; rsp=0 , %899~2'(= {| l |} ) %898~1'(= {| l |} ) %897~0'(= r ) 
; ∎ { 0'(= r ) 2'(= {| l |} ) }
; .dlt.ptn 1'(= {| l |} )
	mov rdi,r14
	call free_s8 
; .mov_ptn2 { 0'(= r ) 2'(= {| l |} ) } ⊢ { 0'(= r ) 1'(= {| l |} ) }
; .mov_ptn 2'(= {| l |} ) ⊢ 1'(= {| l |} )
	mov rax,r8
	mov r14,rax
	ret
ETR_179: ; pnt_dt_qlq_etr { 0'(= r ) 1'(= a2◂ [ *{ {| l |}a34◂ [ ]}] ) } ⊢ { 0'(= r ) 1'(= {| l |} ) } : ({ _r64 _lst◂{ _s8 _t34 } }→{ _r64 _s8 })
;; rsp=0 , %901~1'(= a2◂ [ *{ {| l |}a34◂ [ ]}] ) %900~0'(= r ) 
;; ?; 1'(= a2◂ [ *{ {| l |}a34◂ [ ]}] ) ⊢ 0(<2)◂{ { 3'(= {| l |} ) 4'(= a34◂ [ ] ) } 5'(= a2◂ [ *{ {| l |}a34◂ [ ]}] ) }
	mov rdi,r14
	cmp BYTE [rdi+6],0
	jnz LB_603
	mov rdi,r14
	mov rdi,QWORD [rdi+8+8*0]
	mov r8,rdi
	mov rdi,r8
	mov rdi,QWORD [rdi+8+8*0]
	mov r9,rdi
	mov rdi,r8
	mov rdi,QWORD [rdi+8+8*1]
	mov r10,rdi
	mov rdi,r14
	mov rdi,QWORD [rdi+8+8*1]
	mov r11,rdi
;; rsp=0 , %904~5'(= a2◂ [ *{ {| l |}a34◂ [ ]}] ) %903~4'(= a34◂ [ ] ) %902~3'(= {| l |} ) %900~0'(= r ) 
; rsp_d=0, #179 { 0'(= r ) 5'(= a2◂ [ *{ {| l |}a34◂ [ ]}] ) } ⊢ { 0'(= r ) 1'(= {| l |} ) }
	sub rsp,16
	mov QWORD [rsp+8*0],r9
	mov QWORD [rsp+8*1],r10
; .mov_ptn2 { 0'(= r ) 5'(= a2◂ [ *{ {| l |}a34◂ [ ]}] ) } ⊢ { 0'(= r ) 1'(= a2◂ [ *{ {| l |}a34◂ [ ]}] ) }
; .mov_ptn 5'(= a2◂ [ *{ {| l |}a34◂ [ ]}] ) ⊢ 1'(= a2◂ [ *{ {| l |}a34◂ [ ]}] )
	mov rax,r11
	mov r14,rax
	call ETR_179

	mov r10,QWORD [rsp-8+8*2]
	mov r9,QWORD [rsp-8+8*1]
	add rsp,16
;; rsp=0 , %906~1'(= {| l |} ) %905~0'(= r ) %903~4'(= a34◂ [ ] ) %902~3'(= {| l |} ) 
;; ?; 4'(= a34◂ [ ] ) ⊢ 0(<2)◂{ 2'(= a2◂ [ {| l |}] ) 5'(= a2◂ [ *{ {| l |}a23◂ [ ]}] ) }
	mov rdi,r10
	cmp BYTE [rdi+6],0
	jnz LB_604
	mov rdi,r10
	mov rdi,QWORD [rdi+8+8*0]
	mov r8,rdi
	mov rdi,r10
	mov rdi,QWORD [rdi+8+8*1]
	mov r11,rdi
;; rsp=0 , %908~5'(= a2◂ [ *{ {| l |}a23◂ [ ]}] ) %907~2'(= a2◂ [ {| l |}] ) %906~1'(= {| l |} ) %905~0'(= r ) %902~3'(= {| l |} ) 
; _#9 0'(= r ) ⊢ 0'(= r )
	add r13,1
;; rsp=0 , %909~0'(= r ) %908~5'(= a2◂ [ *{ {| l |}a23◂ [ ]}] ) %907~2'(= a2◂ [ {| l |}] ) %906~1'(= {| l |} ) %902~3'(= {| l |} ) 
; rsp_d=0, #181 { 0'(= r ) 5'(= a2◂ [ *{ {| l |}a23◂ [ ]}] ) } ⊢ { 0'(= r ) 4'(= {| l |} ) }
	sub rsp,24
	mov QWORD [rsp+8*0],r14
	mov QWORD [rsp+8*1],r8
	mov QWORD [rsp+8*2],r9
; .mov_ptn2 { 0'(= r ) 5'(= a2◂ [ *{ {| l |}a23◂ [ ]}] ) } ⊢ { 0'(= r ) 1'(= a2◂ [ *{ {| l |}a23◂ [ ]}] ) }
; .mov_ptn 5'(= a2◂ [ *{ {| l |}a23◂ [ ]}] ) ⊢ 1'(= a2◂ [ *{ {| l |}a23◂ [ ]}] )
	mov rax,r11
	mov r14,rax
	call ETR_181

	mov r9,QWORD [rsp-8+8*3]
	mov r8,QWORD [rsp-8+8*2]
	mov rax,QWORD [rsp-8+8*1]
	mov r10,r14
	mov r14,rax
	add rsp,24
;; rsp=0 , %911~4'(= {| l |} ) %910~0'(= r ) %907~2'(= a2◂ [ {| l |}] ) %906~1'(= {| l |} ) %902~3'(= {| l |} ) 
; _#10 0'(= r ) ⊢ 0'(= r )
	sub r13,1
;; rsp=0 , %912~0'(= r ) %911~4'(= {| l |} ) %907~2'(= a2◂ [ {| l |}] ) %906~1'(= {| l |} ) %902~3'(= {| l |} ) 
; » _^ .. ⊢ ..
; .. //
	mov rdi,0
	mov rsi,r13
	push rsi
	imul rsi,1
	add rdi,rsi 
	mov rsi,r9
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[rsi] 
	add rdi,rax 
	push rax
	push rsi
	mov rsi,r10
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[rsi] 
	add rdi,rax 
	push rax
	push rsi
	mov rsi,r14
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[rsi] 
	add rdi,rax 
	push rax
	push rsi
	add rdi,3
	push rdi 
	call mlc_s8
	pop rdi
	mov r11,rax
	lea rdi,[rax+7+rdi]
	std 
	mov QWORD [tmp],rcx 
	pop rsi 
	pop rcx
	lea rsi,[rsi+7+rcx]
	rep movsb
	pop rsi 
	pop rcx
	lea rsi,[rsi+7+rcx]
	rep movsb
	lea rsi,[LB_605+1-1]
	mov rcx,1
	rep movsb
	pop rsi 
	pop rcx
	lea rsi,[rsi+7+rcx]
	rep movsb
	lea rsi,[LB_606+2-1]
	mov rcx,2
	rep movsb
	pop rax 
LB_608:
	cmp rax,0
	jz LB_609
	sub rax,1
	lea rsi,[LB_607+1-1]
	mov rcx,1
	rep movsb 
	jmp LB_608
LB_609:
	mov rcx,QWORD [tmp] 
;; rsp=0 , %917~5'(= {| l |} ) %916~1'(= {| l |} ) %915~4'(= {| l |} ) %914~3'(= {| l |} ) %913~0'(= r ) %907~2'(= a2◂ [ {| l |}] ) 
; ∎ { 0'(= r ) 5'(= {| l |} ) }
; .dlt.ptn 1'(= {| l |} )
	mov rdi,r14
	call free_s8 
; .dlt.ptn 4'(= {| l |} )
	mov rdi,r10
	call free_s8 
; .dlt.ptn 3'(= {| l |} )
	mov rdi,r9
	call free_s8 
; .dlt.ptn 2'(= a2◂ [ {| l |}] )
;	.dlt adt ⊢ _  
; .mov_ptn2 { 0'(= r ) 5'(= {| l |} ) } ⊢ { 0'(= r ) 1'(= {| l |} ) }
; .mov_ptn 5'(= {| l |} ) ⊢ 1'(= {| l |} )
	mov rax,r11
	mov r14,rax
	ret
LB_604:
;; ?; 4'(= a34◂ [ ] ) ⊢ 1(<2)◂{ 2'(= a2◂ [ {| l |}] ) 5'(= a23◂ [ ] ) }
	mov rdi,r10
	mov rdi,QWORD [rdi+8+8*0]
	mov r8,rdi
	mov rdi,r10
	mov rdi,QWORD [rdi+8+8*1]
	mov r11,rdi
;; rsp=0 , %919~5'(= a23◂ [ ] ) %918~2'(= a2◂ [ {| l |}] ) %906~1'(= {| l |} ) %905~0'(= r ) %902~3'(= {| l |} ) 
; » _^ .. ⊢ ..
; .. //
	mov rdi,0
	mov rsi,r13
	push rsi
	imul rsi,1
	add rdi,rsi 
	mov rsi,r9
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[rsi] 
	add rdi,rax 
	push rax
	push rsi
	mov rsi,r14
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[rsi] 
	add rdi,rax 
	push rax
	push rsi
	add rdi,9
	push rdi 
	call mlc_s8
	pop rdi
	mov r10,rax
	lea rdi,[rax+7+rdi]
	std 
	mov QWORD [tmp],rcx 
	pop rsi 
	pop rcx
	lea rsi,[rsi+7+rcx]
	rep movsb
	lea rsi,[LB_610+7-1]
	mov rcx,7
	rep movsb
	pop rsi 
	pop rcx
	lea rsi,[rsi+7+rcx]
	rep movsb
	lea rsi,[LB_611+2-1]
	mov rcx,2
	rep movsb
	pop rax 
LB_613:
	cmp rax,0
	jz LB_614
	sub rax,1
	lea rsi,[LB_612+1-1]
	mov rcx,1
	rep movsb 
	jmp LB_613
LB_614:
	mov rcx,QWORD [tmp] 
;; rsp=0 , %923~4'(= {| l |} ) %922~1'(= {| l |} ) %921~3'(= {| l |} ) %920~0'(= r ) %919~5'(= a23◂ [ ] ) %918~2'(= a2◂ [ {| l |}] ) 
; ∎ { 0'(= r ) 4'(= {| l |} ) }
; .dlt.ptn 1'(= {| l |} )
	mov rdi,r14
	call free_s8 
; .dlt.ptn 3'(= {| l |} )
	mov rdi,r9
	call free_s8 
; .dlt.ptn 5'(= a23◂ [ ] )
;	.dlt adt ⊢ _  
; .dlt.ptn 2'(= a2◂ [ {| l |}] )
;	.dlt adt ⊢ _  
; .mov_ptn2 { 0'(= r ) 4'(= {| l |} ) } ⊢ { 0'(= r ) 1'(= {| l |} ) }
; .mov_ptn 4'(= {| l |} ) ⊢ 1'(= {| l |} )
	mov rax,r10
	mov r14,rax
	ret
LB_603:
;; ?; 1'(= a2◂ [ *{ {| l |}a34◂ [ ]}] ) ⊢ 1(<2)◂{ }
;; rsp=0 , %900~0'(= r ) 
	jmp LB_615
LB_615:
; $ %[ "" ] ⊢ %[ "" ]
;; rsp=0 , %924~%[ "" ] %900~0'(= r ) 
; ∎ { 0'(= r ) %[ "" ] }
; .mov_ptn2 { 0'(= r ) %[ "" ] } ⊢ { 0'(= r ) 1'(= {| l |} ) }
; .mov_ptn %[ "" ] ⊢ 1'(= {| l |} )
	mov rsi,1  
	mov rdi,16
	xor rax,rax 
	C_CALL_SF calloc
	mov QWORD [rax],0
	mov r14,rax
	ret
ETR_180: ; pnt_dt_etr { 0'(= r ) 1'(= a34◂ [ ] ) } ⊢ { 0'(= r ) 1'(= {| l |} ) } : ({ _r64 _t34 }→{ _r64 _s8 })
;; rsp=0 , %926~1'(= a34◂ [ ] ) %925~0'(= r ) 
;; ?; 1'(= a34◂ [ ] ) ⊢ 0(<2)◂{ 2'(= a2◂ [ {| l |}] ) 3'(= a2◂ [ *{ {| l |}a23◂ [ ]}] ) }
	mov rdi,r14
	cmp BYTE [rdi+6],0
	jnz LB_616
	mov rdi,r14
	mov rdi,QWORD [rdi+8+8*0]
	mov r8,rdi
	mov rdi,r14
	mov rdi,QWORD [rdi+8+8*1]
	mov r9,rdi
;; rsp=0 , %928~3'(= a2◂ [ *{ {| l |}a23◂ [ ]}] ) %927~2'(= a2◂ [ {| l |}] ) %925~0'(= r ) 
; _#9 0'(= r ) ⊢ 0'(= r )
	add r13,1
;; rsp=0 , %929~0'(= r ) %928~3'(= a2◂ [ *{ {| l |}a23◂ [ ]}] ) %927~2'(= a2◂ [ {| l |}] ) 
; rsp_d=0, #181 { 0'(= r ) 3'(= a2◂ [ *{ {| l |}a23◂ [ ]}] ) } ⊢ { 0'(= r ) 1'(= {| l |} ) }
	sub rsp,8
	mov QWORD [rsp+8*0],r8
; .mov_ptn2 { 0'(= r ) 3'(= a2◂ [ *{ {| l |}a23◂ [ ]}] ) } ⊢ { 0'(= r ) 1'(= a2◂ [ *{ {| l |}a23◂ [ ]}] ) }
; .mov_ptn 3'(= a2◂ [ *{ {| l |}a23◂ [ ]}] ) ⊢ 1'(= a2◂ [ *{ {| l |}a23◂ [ ]}] )
	mov rax,r9
	mov r14,rax
	call ETR_181

	mov r8,QWORD [rsp-8+8*1]
	add rsp,8
;; rsp=0 , %931~1'(= {| l |} ) %930~0'(= r ) %927~2'(= a2◂ [ {| l |}] ) 
; _#10 0'(= r ) ⊢ 0'(= r )
	sub r13,1
;; rsp=0 , %932~0'(= r ) %931~1'(= {| l |} ) %927~2'(= a2◂ [ {| l |}] ) 
; » _^ .. ⊢ ..
; .. //
	mov rdi,0
	mov rsi,r14
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[rsi] 
	add rdi,rax 
	push rax
	push rsi
	add rdi,1
	push rdi 
	call mlc_s8
	pop rdi
	mov r9,rax
	lea rdi,[rax+7+rdi]
	std 
	mov QWORD [tmp],rcx 
	pop rsi 
	pop rcx
	lea rsi,[rsi+7+rcx]
	rep movsb
	lea rsi,[LB_617+1-1]
	mov rcx,1
	rep movsb
	mov rcx,QWORD [tmp] 
;; rsp=0 , %934~3'(= {| l |} ) %933~1'(= {| l |} ) %932~0'(= r ) %927~2'(= a2◂ [ {| l |}] ) 
; ∎ { 0'(= r ) 1'(= {| l |} ) }
; .dlt.ptn 3'(= {| l |} )
	mov rdi,r9
	call free_s8 
; .dlt.ptn 2'(= a2◂ [ {| l |}] )
;	.dlt adt ⊢ _  
; .mov_ptn2 { 0'(= r ) 1'(= {| l |} ) } ⊢ { 0'(= r ) 1'(= {| l |} ) }
	ret
LB_616:
;; ?; 1'(= a34◂ [ ] ) ⊢ 1(<2)◂{ 2'(= a2◂ [ {| l |}] ) 3'(= a23◂ [ ] ) }
	mov rdi,r14
	mov rdi,QWORD [rdi+8+8*0]
	mov r8,rdi
	mov rdi,r14
	mov rdi,QWORD [rdi+8+8*1]
	mov r9,rdi
;; rsp=0 , %936~3'(= a23◂ [ ] ) %935~2'(= a2◂ [ {| l |}] ) %925~0'(= r ) 
; rsp_d=0, #182 3'(= a23◂ [ ] ) ⊢ 1'(= {| l |} )
	sub rsp,16
	mov QWORD [rsp+8*0],r13
	mov QWORD [rsp+8*1],r8
; .mov_ptn2 3'(= a23◂ [ ] ) ⊢ 0'(= a23◂ [ ] )
; .mov_ptn 3'(= a23◂ [ ] ) ⊢ 0'(= a23◂ [ ] )
	mov rax,r9
	mov r13,rax
	call ETR_182

	mov r8,QWORD [rsp-8+8*2]
	mov rax,QWORD [rsp-8+8*1]
	mov r14,r13
	mov r13,rax
	add rsp,16
;; rsp=0 , %937~1'(= {| l |} ) %935~2'(= a2◂ [ {| l |}] ) %925~0'(= r ) 
; » _^ .. ⊢ ..
; .. //
	mov rdi,0
	mov rsi,r14
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[rsi] 
	add rdi,rax 
	push rax
	push rsi
	add rdi,4
	push rdi 
	call mlc_s8
	pop rdi
	mov r9,rax
	lea rdi,[rax+7+rdi]
	std 
	mov QWORD [tmp],rcx 
	lea rsi,[LB_618+1-1]
	mov rcx,1
	rep movsb
	pop rsi 
	pop rcx
	lea rsi,[rsi+7+rcx]
	rep movsb
	lea rsi,[LB_619+3-1]
	mov rcx,3
	rep movsb
	mov rcx,QWORD [tmp] 
;; rsp=0 , %939~3'(= {| l |} ) %938~1'(= {| l |} ) %935~2'(= a2◂ [ {| l |}] ) %925~0'(= r ) 
; ∎ { 0'(= r ) 3'(= {| l |} ) }
; .dlt.ptn 1'(= {| l |} )
	mov rdi,r14
	call free_s8 
; .dlt.ptn 2'(= a2◂ [ {| l |}] )
;	.dlt adt ⊢ _  
; .mov_ptn2 { 0'(= r ) 3'(= {| l |} ) } ⊢ { 0'(= r ) 1'(= {| l |} ) }
; .mov_ptn 3'(= {| l |} ) ⊢ 1'(= {| l |} )
	mov rax,r9
	mov r14,rax
	ret
ETR_181: ; pnt_dt_def { 0'(= r ) 1'(= a2◂ [ *{ {| l |}a23◂ [ ]}] ) } ⊢ { 0'(= r ) 1'(= {| l |} ) } : ({ _r64 _lst◂{ _s8 _t23 } }→{ _r64 _s8 })
;; rsp=0 , %941~1'(= a2◂ [ *{ {| l |}a23◂ [ ]}] ) %940~0'(= r ) 
;; ?; 1'(= a2◂ [ *{ {| l |}a23◂ [ ]}] ) ⊢ 0(<2)◂{ { 3'(= {| l |} ) 4'(= a23◂ [ ] ) } 5'(= a2◂ [ *{ {| l |}a23◂ [ ]}] ) }
	mov rdi,r14
	cmp BYTE [rdi+6],0
	jnz LB_620
	mov rdi,r14
	mov rdi,QWORD [rdi+8+8*0]
	mov r8,rdi
	mov rdi,r8
	mov rdi,QWORD [rdi+8+8*0]
	mov r9,rdi
	mov rdi,r8
	mov rdi,QWORD [rdi+8+8*1]
	mov r10,rdi
	mov rdi,r14
	mov rdi,QWORD [rdi+8+8*1]
	mov r11,rdi
;; rsp=0 , %944~5'(= a2◂ [ *{ {| l |}a23◂ [ ]}] ) %943~4'(= a23◂ [ ] ) %942~3'(= {| l |} ) %940~0'(= r ) 
; rsp_d=0, #181 { 0'(= r ) 5'(= a2◂ [ *{ {| l |}a23◂ [ ]}] ) } ⊢ { 0'(= r ) 1'(= {| l |} ) }
	sub rsp,16
	mov QWORD [rsp+8*0],r9
	mov QWORD [rsp+8*1],r10
; .mov_ptn2 { 0'(= r ) 5'(= a2◂ [ *{ {| l |}a23◂ [ ]}] ) } ⊢ { 0'(= r ) 1'(= a2◂ [ *{ {| l |}a23◂ [ ]}] ) }
; .mov_ptn 5'(= a2◂ [ *{ {| l |}a23◂ [ ]}] ) ⊢ 1'(= a2◂ [ *{ {| l |}a23◂ [ ]}] )
	mov rax,r11
	mov r14,rax
	call ETR_181

	mov r10,QWORD [rsp-8+8*2]
	mov r9,QWORD [rsp-8+8*1]
	add rsp,16
;; rsp=0 , %946~1'(= {| l |} ) %945~0'(= r ) %943~4'(= a23◂ [ ] ) %942~3'(= {| l |} ) 
; rsp_d=0, #182 4'(= a23◂ [ ] ) ⊢ 2'(= {| l |} )
	sub rsp,24
	mov QWORD [rsp+8*0],r13
	mov QWORD [rsp+8*1],r14
	mov QWORD [rsp+8*2],r9
; .mov_ptn2 4'(= a23◂ [ ] ) ⊢ 0'(= a23◂ [ ] )
; .mov_ptn 4'(= a23◂ [ ] ) ⊢ 0'(= a23◂ [ ] )
	mov rax,r10
	mov r13,rax
	call ETR_182

	mov r9,QWORD [rsp-8+8*3]
	mov r14,QWORD [rsp-8+8*2]
	mov rax,QWORD [rsp-8+8*1]
	mov r8,r13
	mov r13,rax
	add rsp,24
;; rsp=0 , %947~2'(= {| l |} ) %946~1'(= {| l |} ) %945~0'(= r ) %942~3'(= {| l |} ) 
; » _^ .. ⊢ ..
; .. //
	mov rdi,0
	mov rsi,r13
	push rsi
	imul rsi,1
	add rdi,rsi 
	mov rsi,r9
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[rsi] 
	add rdi,rax 
	push rax
	push rsi
	mov rsi,r8
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[rsi] 
	add rdi,rax 
	push rax
	push rsi
	mov rsi,r14
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[rsi] 
	add rdi,rax 
	push rax
	push rsi
	add rdi,8
	push rdi 
	call mlc_s8
	pop rdi
	mov r10,rax
	lea rdi,[rax+7+rdi]
	std 
	mov QWORD [tmp],rcx 
	pop rsi 
	pop rcx
	lea rsi,[rsi+7+rcx]
	rep movsb
	lea rsi,[LB_621+1-1]
	mov rcx,1
	rep movsb
	pop rsi 
	pop rcx
	lea rsi,[rsi+7+rcx]
	rep movsb
	lea rsi,[LB_622+3-1]
	mov rcx,3
	rep movsb
	pop rsi 
	pop rcx
	lea rsi,[rsi+7+rcx]
	rep movsb
	lea rsi,[LB_623+4-1]
	mov rcx,4
	rep movsb
	pop rax 
LB_625:
	cmp rax,0
	jz LB_626
	sub rax,1
	lea rsi,[LB_624+1-1]
	mov rcx,1
	rep movsb 
	jmp LB_625
LB_626:
	mov rcx,QWORD [tmp] 
;; rsp=0 , %952~4'(= {| l |} ) %951~1'(= {| l |} ) %950~2'(= {| l |} ) %949~3'(= {| l |} ) %948~0'(= r ) 
; ∎ { 0'(= r ) 4'(= {| l |} ) }
; .dlt.ptn 1'(= {| l |} )
	mov rdi,r14
	call free_s8 
; .dlt.ptn 2'(= {| l |} )
	mov rdi,r8
	call free_s8 
; .dlt.ptn 3'(= {| l |} )
	mov rdi,r9
	call free_s8 
; .mov_ptn2 { 0'(= r ) 4'(= {| l |} ) } ⊢ { 0'(= r ) 1'(= {| l |} ) }
; .mov_ptn 4'(= {| l |} ) ⊢ 1'(= {| l |} )
	mov rax,r10
	mov r14,rax
	ret
LB_620:
;; ?; 1'(= a2◂ [ *{ {| l |}a23◂ [ ]}] ) ⊢ 1(<2)◂{ }
;; rsp=0 , %940~0'(= r ) 
	jmp LB_627
LB_627:
; $ %[ "" ] ⊢ %[ "" ]
;; rsp=0 , %953~%[ "" ] %940~0'(= r ) 
; ∎ { 0'(= r ) %[ "" ] }
; .mov_ptn2 { 0'(= r ) %[ "" ] } ⊢ { 0'(= r ) 1'(= {| l |} ) }
; .mov_ptn %[ "" ] ⊢ 1'(= {| l |} )
	mov rsi,1  
	mov rdi,16
	xor rax,rax 
	C_CALL_SF calloc
	mov QWORD [rax],0
	mov r14,rax
	ret
ETR_182: ; pnt_type 0'(= a23◂ [ ] ) ⊢ 0'(= {| l |} ) : (_t23→_s8)
;; rsp=0 , %954~0'(= a23◂ [ ] ) 
;; ?; 0'(= a23◂ [ ] ) ⊢ 0(<5)◂1'(= a2◂ [ a23◂ [ ]] )
	mov rdi,r13
	cmp BYTE [rdi+6],0
	jnz LB_628
	mov rax,QWORD [rdi+8]
	mov r14,rax
;; rsp=0 , %955~1'(= a2◂ [ a23◂ [ ]] ) 
; rsp_d=0, #183 1'(= a2◂ [ a23◂ [ ]] ) ⊢ 0'(= {| l |} )
; .mov_ptn2 1'(= a2◂ [ a23◂ [ ]] ) ⊢ 0'(= a2◂ [ a23◂ [ ]] )
; .mov_ptn 1'(= a2◂ [ a23◂ [ ]] ) ⊢ 0'(= a2◂ [ a23◂ [ ]] )
	mov rax,r14
	mov r13,rax
	call ETR_183

;; rsp=0 , %956~0'(= {| l |} ) 
; » _^ .. ⊢ ..
; .. //
	mov rdi,0
	mov rsi,r13
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[rsi] 
	add rdi,rax 
	push rax
	push rsi
	add rdi,3
	push rdi 
	call mlc_s8
	pop rdi
	mov r14,rax
	lea rdi,[rax+7+rdi]
	std 
	mov QWORD [tmp],rcx 
	lea rsi,[LB_629+1-1]
	mov rcx,1
	rep movsb
	pop rsi 
	pop rcx
	lea rsi,[rsi+7+rcx]
	rep movsb
	lea rsi,[LB_630+2-1]
	mov rcx,2
	rep movsb
	mov rcx,QWORD [tmp] 
;; rsp=0 , %958~1'(= {| l |} ) %957~0'(= {| l |} ) 
; ∎ 1'(= {| l |} )
; .dlt.ptn 0'(= {| l |} )
	mov rdi,r13
	call free_s8 
; .mov_ptn2 1'(= {| l |} ) ⊢ 0'(= {| l |} )
; .mov_ptn 1'(= {| l |} ) ⊢ 0'(= {| l |} )
	mov rax,r14
	mov r13,rax
	ret
LB_628:
;; ?; 0'(= a23◂ [ ] ) ⊢ 1(<5)◂{ 1'(= a23◂ [ ] ) 2'(= a23◂ [ ] ) }
	mov rdi,r13
	cmp BYTE [rdi+6],1
	jnz LB_631
	mov rdi,r13
	mov rdi,QWORD [rdi+8+8*0]
	mov r14,rdi
	mov rdi,r13
	mov rdi,QWORD [rdi+8+8*1]
	mov r8,rdi
;; rsp=0 , %960~2'(= a23◂ [ ] ) %959~1'(= a23◂ [ ] ) 
; rsp_d=0, #182 1'(= a23◂ [ ] ) ⊢ 0'(= {| l |} )
	sub rsp,8
	mov QWORD [rsp+8*0],r8
; .mov_ptn2 1'(= a23◂ [ ] ) ⊢ 0'(= a23◂ [ ] )
; .mov_ptn 1'(= a23◂ [ ] ) ⊢ 0'(= a23◂ [ ] )
	mov rax,r14
	mov r13,rax
	call ETR_182

	mov r8,QWORD [rsp-8+8*1]
	add rsp,8
;; rsp=0 , %961~0'(= {| l |} ) %960~2'(= a23◂ [ ] ) 
; rsp_d=0, #182 2'(= a23◂ [ ] ) ⊢ 1'(= {| l |} )
	sub rsp,8
	mov QWORD [rsp+8*0],r13
; .mov_ptn2 2'(= a23◂ [ ] ) ⊢ 0'(= a23◂ [ ] )
; .mov_ptn 2'(= a23◂ [ ] ) ⊢ 0'(= a23◂ [ ] )
	mov rax,r8
	mov r13,rax
	call ETR_182

	mov rax,QWORD [rsp-8+8*1]
	mov r14,r13
	mov r13,rax
	add rsp,8
;; rsp=0 , %962~1'(= {| l |} ) %961~0'(= {| l |} ) 
; » _^ .. ⊢ ..
; .. //
	mov rdi,0
	mov rsi,r13
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[rsi] 
	add rdi,rax 
	push rax
	push rsi
	mov rsi,r14
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[rsi] 
	add rdi,rax 
	push rax
	push rsi
	add rdi,5
	push rdi 
	call mlc_s8
	pop rdi
	mov r8,rax
	lea rdi,[rax+7+rdi]
	std 
	mov QWORD [tmp],rcx 
	pop rsi 
	pop rcx
	lea rsi,[rsi+7+rcx]
	rep movsb
	lea rsi,[LB_632+5-1]
	mov rcx,5
	rep movsb
	pop rsi 
	pop rcx
	lea rsi,[rsi+7+rcx]
	rep movsb
	mov rcx,QWORD [tmp] 
;; rsp=0 , %965~2'(= {| l |} ) %964~1'(= {| l |} ) %963~0'(= {| l |} ) 
; ∎ 2'(= {| l |} )
; .dlt.ptn 1'(= {| l |} )
	mov rdi,r14
	call free_s8 
; .dlt.ptn 0'(= {| l |} )
	mov rdi,r13
	call free_s8 
; .mov_ptn2 2'(= {| l |} ) ⊢ 0'(= {| l |} )
; .mov_ptn 2'(= {| l |} ) ⊢ 0'(= {| l |} )
	mov rax,r8
	mov r13,rax
	ret
LB_631:
;; ?; 0'(= a23◂ [ ] ) ⊢ 2(<5)◂{ 1'(= a23◂ [ ] ) 2'(= a23◂ [ ] ) }
	mov rdi,r13
	cmp BYTE [rdi+6],2
	jnz LB_633
	mov rdi,r13
	mov rdi,QWORD [rdi+8+8*0]
	mov r14,rdi
	mov rdi,r13
	mov rdi,QWORD [rdi+8+8*1]
	mov r8,rdi
;; rsp=0 , %967~2'(= a23◂ [ ] ) %966~1'(= a23◂ [ ] ) 
; rsp_d=0, #182 1'(= a23◂ [ ] ) ⊢ 0'(= {| l |} )
	sub rsp,8
	mov QWORD [rsp+8*0],r8
; .mov_ptn2 1'(= a23◂ [ ] ) ⊢ 0'(= a23◂ [ ] )
; .mov_ptn 1'(= a23◂ [ ] ) ⊢ 0'(= a23◂ [ ] )
	mov rax,r14
	mov r13,rax
	call ETR_182

	mov r8,QWORD [rsp-8+8*1]
	add rsp,8
;; rsp=0 , %968~0'(= {| l |} ) %967~2'(= a23◂ [ ] ) 
; rsp_d=0, #182 2'(= a23◂ [ ] ) ⊢ 1'(= {| l |} )
	sub rsp,8
	mov QWORD [rsp+8*0],r13
; .mov_ptn2 2'(= a23◂ [ ] ) ⊢ 0'(= a23◂ [ ] )
; .mov_ptn 2'(= a23◂ [ ] ) ⊢ 0'(= a23◂ [ ] )
	mov rax,r8
	mov r13,rax
	call ETR_182

	mov rax,QWORD [rsp-8+8*1]
	mov r14,r13
	mov r13,rax
	add rsp,8
;; rsp=0 , %969~1'(= {| l |} ) %968~0'(= {| l |} ) 
; » _^ .. ⊢ ..
; .. //
	mov rdi,0
	mov rsi,r13
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[rsi] 
	add rdi,rax 
	push rax
	push rsi
	mov rsi,r14
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[rsi] 
	add rdi,rax 
	push rax
	push rsi
	add rdi,3
	push rdi 
	call mlc_s8
	pop rdi
	mov r8,rax
	lea rdi,[rax+7+rdi]
	std 
	mov QWORD [tmp],rcx 
	pop rsi 
	pop rcx
	lea rsi,[rsi+7+rcx]
	rep movsb
	lea rsi,[LB_634+3-1]
	mov rcx,3
	rep movsb
	pop rsi 
	pop rcx
	lea rsi,[rsi+7+rcx]
	rep movsb
	mov rcx,QWORD [tmp] 
;; rsp=0 , %972~2'(= {| l |} ) %971~1'(= {| l |} ) %970~0'(= {| l |} ) 
; ∎ 2'(= {| l |} )
; .dlt.ptn 1'(= {| l |} )
	mov rdi,r14
	call free_s8 
; .dlt.ptn 0'(= {| l |} )
	mov rdi,r13
	call free_s8 
; .mov_ptn2 2'(= {| l |} ) ⊢ 0'(= {| l |} )
; .mov_ptn 2'(= {| l |} ) ⊢ 0'(= {| l |} )
	mov rax,r8
	mov r13,rax
	ret
LB_633:
;; ?; 0'(= a23◂ [ ] ) ⊢ 3(<5)◂1'(= a9◂ [ ] )
	mov rdi,r13
	cmp BYTE [rdi+6],3
	jnz LB_635
	mov rax,QWORD [rdi+8]
	mov r14,rax
;; rsp=0 , %973~1'(= a9◂ [ ] ) 
; rsp_d=0, #82 1'(= a9◂ [ ] ) ⊢ 0'(= {| l |} )
; .mov_ptn2 1'(= a9◂ [ ] ) ⊢ 0'(= a9◂ [ ] )
; .mov_ptn 1'(= a9◂ [ ] ) ⊢ 0'(= a9◂ [ ] )
	mov rax,r14
	mov r13,rax
	call ETR_82

;; rsp=0 , %974~0'(= {| l |} ) 
; ∎ 0'(= {| l |} )
; .mov_ptn2 0'(= {| l |} ) ⊢ 0'(= {| l |} )
	ret
LB_635:
;; ?; 0'(= a23◂ [ ] ) ⊢ 4(<5)◂0'(= {| l |} )
;; rsp=0 , %975~0'(= {| l |} ) 
; » _^ .. ⊢ ..
; .. //
	mov rdi,0
	mov rsi,r13
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[rsi] 
	add rdi,rax 
	push rax
	push rsi
	add rdi,1
	push rdi 
	call mlc_s8
	pop rdi
	mov r14,rax
	lea rdi,[rax+7+rdi]
	std 
	mov QWORD [tmp],rcx 
	lea rsi,[LB_636+1-1]
	mov rcx,1
	rep movsb
	pop rsi 
	pop rcx
	lea rsi,[rsi+7+rcx]
	rep movsb
	mov rcx,QWORD [tmp] 
;; rsp=0 , %977~1'(= {| l |} ) %976~0'(= {| l |} ) 
; ∎ 1'(= {| l |} )
; .dlt.ptn 0'(= {| l |} )
	mov rdi,r13
	call free_s8 
; .mov_ptn2 1'(= {| l |} ) ⊢ 0'(= {| l |} )
; .mov_ptn 1'(= {| l |} ) ⊢ 0'(= {| l |} )
	mov rax,r14
	mov r13,rax
	ret
ETR_183: ; pnt_type_rcd 0'(= a2◂ [ a23◂ [ ]] ) ⊢ 0'(= {| l |} ) : (_lst◂_t23→_s8)
;; rsp=0 , %978~0'(= a2◂ [ a23◂ [ ]] ) 
;; ?; 0'(= a2◂ [ a23◂ [ ]] ) ⊢ 0(<2)◂{ 1'(= a23◂ [ ] ) 2'(= a2◂ [ a23◂ [ ]] ) }
	mov rdi,r13
	cmp BYTE [rdi+6],0
	jnz LB_637
	mov rdi,r13
	mov rdi,QWORD [rdi+8+8*0]
	mov r14,rdi
	mov rdi,r13
	mov rdi,QWORD [rdi+8+8*1]
	mov r8,rdi
;; rsp=0 , %980~2'(= a2◂ [ a23◂ [ ]] ) %979~1'(= a23◂ [ ] ) 
; rsp_d=0, #182 1'(= a23◂ [ ] ) ⊢ 0'(= {| l |} )
	sub rsp,8
	mov QWORD [rsp+8*0],r8
; .mov_ptn2 1'(= a23◂ [ ] ) ⊢ 0'(= a23◂ [ ] )
; .mov_ptn 1'(= a23◂ [ ] ) ⊢ 0'(= a23◂ [ ] )
	mov rax,r14
	mov r13,rax
	call ETR_182

	mov r8,QWORD [rsp-8+8*1]
	add rsp,8
;; rsp=0 , %981~0'(= {| l |} ) %980~2'(= a2◂ [ a23◂ [ ]] ) 
; rsp_d=0, #183 2'(= a2◂ [ a23◂ [ ]] ) ⊢ 1'(= {| l |} )
	sub rsp,8
	mov QWORD [rsp+8*0],r13
; .mov_ptn2 2'(= a2◂ [ a23◂ [ ]] ) ⊢ 0'(= a2◂ [ a23◂ [ ]] )
; .mov_ptn 2'(= a2◂ [ a23◂ [ ]] ) ⊢ 0'(= a2◂ [ a23◂ [ ]] )
	mov rax,r8
	mov r13,rax
	call ETR_183

	mov rax,QWORD [rsp-8+8*1]
	mov r14,r13
	mov r13,rax
	add rsp,8
;; rsp=0 , %982~1'(= {| l |} ) %981~0'(= {| l |} ) 
; » _^ .. ⊢ ..
; .. //
	mov rdi,0
	mov rsi,r13
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[rsi] 
	add rdi,rax 
	push rax
	push rsi
	mov rsi,r14
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[rsi] 
	add rdi,rax 
	push rax
	push rsi
	add rdi,1
	push rdi 
	call mlc_s8
	pop rdi
	mov r8,rax
	lea rdi,[rax+7+rdi]
	std 
	mov QWORD [tmp],rcx 
	pop rsi 
	pop rcx
	lea rsi,[rsi+7+rcx]
	rep movsb
	lea rsi,[LB_638+1-1]
	mov rcx,1
	rep movsb
	pop rsi 
	pop rcx
	lea rsi,[rsi+7+rcx]
	rep movsb
	mov rcx,QWORD [tmp] 
;; rsp=0 , %985~2'(= {| l |} ) %984~1'(= {| l |} ) %983~0'(= {| l |} ) 
; ∎ 2'(= {| l |} )
; .dlt.ptn 1'(= {| l |} )
	mov rdi,r14
	call free_s8 
; .dlt.ptn 0'(= {| l |} )
	mov rdi,r13
	call free_s8 
; .mov_ptn2 2'(= {| l |} ) ⊢ 0'(= {| l |} )
; .mov_ptn 2'(= {| l |} ) ⊢ 0'(= {| l |} )
	mov rax,r8
	mov r13,rax
	ret
LB_637:
;; ?; 0'(= a2◂ [ a23◂ [ ]] ) ⊢ 1(<2)◂{ }
;; rsp=0 , 
	jmp LB_639
LB_639:
; $ %[ "" ] ⊢ %[ "" ]
;; rsp=0 , %986~%[ "" ] 
; ∎ %[ "" ]
; .mov_ptn2 %[ "" ] ⊢ 0'(= {| l |} )
; .mov_ptn %[ "" ] ⊢ 0'(= {| l |} )
	mov rsi,1  
	mov rdi,16
	xor rax,rax 
	C_CALL_SF calloc
	mov QWORD [rax],0
	mov r13,rax
	ret
ETR_184: ; pnt_lc_etr { 0'(= r ) 1'(= a33◂ [ ] ) } ⊢ { 0'(= r ) 1'(= {| l |} ) } : ({ _r64 _t33 }→{ _r64 _s8 })
;; rsp=0 , %988~1'(= a33◂ [ ] ) %987~0'(= r ) 
;; ?; 1'(= a33◂ [ ] ) ⊢ 0(<3)◂{ 2'(= a8◂ [ a13◂ [ {| l |}]] ) 3'(= a3◂ [ a23◂ [ ]] ) 4'(= a17◂ [ a9◂ [ ]{| l |}] ) }
	mov rdi,r14
	cmp BYTE [rdi+6],0
	jnz LB_640
	mov rdi,r14
	mov rdi,QWORD [rdi+8+8*0]
	mov r8,rdi
	mov rdi,r14
	mov rdi,QWORD [rdi+8+8*1]
	mov r9,rdi
	mov rdi,r14
	mov rdi,QWORD [rdi+8+8*2]
	mov r10,rdi
;; rsp=0 , %991~4'(= a17◂ [ a9◂ [ ]{| l |}] ) %990~3'(= a3◂ [ a23◂ [ ]] ) %989~2'(= a8◂ [ a13◂ [ {| l |}]] ) %987~0'(= r ) 
;; ?; 3'(= a3◂ [ a23◂ [ ]] ) ⊢ 0(<2)◂1'(= a23◂ [ ] )
	mov rdi,r9
	cmp BYTE [rdi+6],0
	jnz LB_641
	mov rax,QWORD [rdi+8]
	mov r14,rax
;; rsp=0 , %992~1'(= a23◂ [ ] ) %991~4'(= a17◂ [ a9◂ [ ]{| l |}] ) %989~2'(= a8◂ [ a13◂ [ {| l |}]] ) %987~0'(= r ) 
; rsp_d=0, #182 1'(= a23◂ [ ] ) ⊢ 1'(= {| l |} )
	sub rsp,24
	mov QWORD [rsp+8*0],r13
	mov QWORD [rsp+8*1],r8
	mov QWORD [rsp+8*2],r10
; .mov_ptn2 1'(= a23◂ [ ] ) ⊢ 0'(= a23◂ [ ] )
; .mov_ptn 1'(= a23◂ [ ] ) ⊢ 0'(= a23◂ [ ] )
	mov rax,r14
	mov r13,rax
	call ETR_182

	mov r10,QWORD [rsp-8+8*3]
	mov r8,QWORD [rsp-8+8*2]
	mov rax,QWORD [rsp-8+8*1]
	mov r14,r13
	mov r13,rax
	add rsp,24
;; rsp=0 , %993~1'(= {| l |} ) %991~4'(= a17◂ [ a9◂ [ ]{| l |}] ) %989~2'(= a8◂ [ a13◂ [ {| l |}]] ) %987~0'(= r ) 
; rsp_d=0, #99 2'(= a8◂ [ a13◂ [ {| l |}]] ) ⊢ 2'(= {| l |} )
	sub rsp,24
	mov QWORD [rsp+8*0],r13
	mov QWORD [rsp+8*1],r14
	mov QWORD [rsp+8*2],r10
; .mov_ptn2 2'(= a8◂ [ a13◂ [ {| l |}]] ) ⊢ 0'(= a8◂ [ a13◂ [ {| l |}]] )
; .mov_ptn 2'(= a8◂ [ a13◂ [ {| l |}]] ) ⊢ 0'(= a8◂ [ a13◂ [ {| l |}]] )
	mov rax,r8
	mov r13,rax
	call ETR_99

	mov r10,QWORD [rsp-8+8*3]
	mov r14,QWORD [rsp-8+8*2]
	mov rax,QWORD [rsp-8+8*1]
	mov r8,r13
	mov r13,rax
	add rsp,24
;; rsp=0 , %994~2'(= {| l |} ) %993~1'(= {| l |} ) %991~4'(= a17◂ [ a9◂ [ ]{| l |}] ) %987~0'(= r ) 
; _#9 0'(= r ) ⊢ 0'(= r )
	add r13,1
;; rsp=0 , %995~0'(= r ) %994~2'(= {| l |} ) %993~1'(= {| l |} ) %991~4'(= a17◂ [ a9◂ [ ]{| l |}] ) 
; rsp_d=0, #132 { 0'(= r ) 4'(= a17◂ [ a9◂ [ ]{| l |}] ) } ⊢ { 0'(= r ) 3'(= {| l |} ) }
	sub rsp,16
	mov QWORD [rsp+8*0],r14
	mov QWORD [rsp+8*1],r8
; .mov_ptn2 { 0'(= r ) 4'(= a17◂ [ a9◂ [ ]{| l |}] ) } ⊢ { 0'(= r ) 1'(= a17◂ [ a9◂ [ ]{| l |}] ) }
; .mov_ptn 4'(= a17◂ [ a9◂ [ ]{| l |}] ) ⊢ 1'(= a17◂ [ a9◂ [ ]{| l |}] )
	mov rax,r10
	mov r14,rax
	call ETR_132

	mov r8,QWORD [rsp-8+8*2]
	mov rax,QWORD [rsp-8+8*1]
	mov r9,r14
	mov r14,rax
	add rsp,16
;; rsp=0 , %997~3'(= {| l |} ) %996~0'(= r ) %994~2'(= {| l |} ) %993~1'(= {| l |} ) 
; _#10 0'(= r ) ⊢ 0'(= r )
	sub r13,1
;; rsp=0 , %998~0'(= r ) %997~3'(= {| l |} ) %994~2'(= {| l |} ) %993~1'(= {| l |} ) 
; » _^ .. ⊢ ..
; .. //
	mov rdi,0
	mov rsi,r8
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[rsi] 
	add rdi,rax 
	push rax
	push rsi
	mov rsi,r14
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[rsi] 
	add rdi,rax 
	push rax
	push rsi
	mov rsi,r9
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[rsi] 
	add rdi,rax 
	push rax
	push rsi
	add rdi,5
	push rdi 
	call mlc_s8
	pop rdi
	mov r10,rax
	lea rdi,[rax+7+rdi]
	std 
	mov QWORD [tmp],rcx 
	pop rsi 
	pop rcx
	lea rsi,[rsi+7+rcx]
	rep movsb
	lea rsi,[LB_642+1-1]
	mov rcx,1
	rep movsb
	pop rsi 
	pop rcx
	lea rsi,[rsi+7+rcx]
	rep movsb
	lea rsi,[LB_643+3-1]
	mov rcx,3
	rep movsb
	pop rsi 
	pop rcx
	lea rsi,[rsi+7+rcx]
	rep movsb
	lea rsi,[LB_644+1-1]
	mov rcx,1
	rep movsb
	mov rcx,QWORD [tmp] 
;; rsp=0 , %1002~4'(= {| l |} ) %1001~1'(= {| l |} ) %1000~3'(= {| l |} ) %999~2'(= {| l |} ) %998~0'(= r ) 
; ∎ { 0'(= r ) 4'(= {| l |} ) }
; .dlt.ptn 1'(= {| l |} )
	mov rdi,r14
	call free_s8 
; .dlt.ptn 3'(= {| l |} )
	mov rdi,r9
	call free_s8 
; .dlt.ptn 2'(= {| l |} )
	mov rdi,r8
	call free_s8 
; .mov_ptn2 { 0'(= r ) 4'(= {| l |} ) } ⊢ { 0'(= r ) 1'(= {| l |} ) }
; .mov_ptn 4'(= {| l |} ) ⊢ 1'(= {| l |} )
	mov rax,r10
	mov r14,rax
	ret
LB_641:
;; rsp=0 , %991~4'(= a17◂ [ a9◂ [ ]{| l |}] ) %990~3'(= a3◂ [ a23◂ [ ]] ) %989~2'(= a8◂ [ a13◂ [ {| l |}]] ) %987~0'(= r ) 
; rsp_d=0, #99 2'(= a8◂ [ a13◂ [ {| l |}]] ) ⊢ 1'(= {| l |} )
	sub rsp,24
	mov QWORD [rsp+8*0],r13
	mov QWORD [rsp+8*1],r9
	mov QWORD [rsp+8*2],r10
; .mov_ptn2 2'(= a8◂ [ a13◂ [ {| l |}]] ) ⊢ 0'(= a8◂ [ a13◂ [ {| l |}]] )
; .mov_ptn 2'(= a8◂ [ a13◂ [ {| l |}]] ) ⊢ 0'(= a8◂ [ a13◂ [ {| l |}]] )
	mov rax,r8
	mov r13,rax
	call ETR_99

	mov r10,QWORD [rsp-8+8*3]
	mov r9,QWORD [rsp-8+8*2]
	mov rax,QWORD [rsp-8+8*1]
	mov r14,r13
	mov r13,rax
	add rsp,24
;; rsp=0 , %1003~1'(= {| l |} ) %991~4'(= a17◂ [ a9◂ [ ]{| l |}] ) %990~3'(= a3◂ [ a23◂ [ ]] ) %987~0'(= r ) 
; _#9 0'(= r ) ⊢ 0'(= r )
	add r13,1
;; rsp=0 , %1004~0'(= r ) %1003~1'(= {| l |} ) %991~4'(= a17◂ [ a9◂ [ ]{| l |}] ) %990~3'(= a3◂ [ a23◂ [ ]] ) 
; rsp_d=0, #132 { 0'(= r ) 4'(= a17◂ [ a9◂ [ ]{| l |}] ) } ⊢ { 0'(= r ) 2'(= {| l |} ) }
	sub rsp,16
	mov QWORD [rsp+8*0],r14
	mov QWORD [rsp+8*1],r9
; .mov_ptn2 { 0'(= r ) 4'(= a17◂ [ a9◂ [ ]{| l |}] ) } ⊢ { 0'(= r ) 1'(= a17◂ [ a9◂ [ ]{| l |}] ) }
; .mov_ptn 4'(= a17◂ [ a9◂ [ ]{| l |}] ) ⊢ 1'(= a17◂ [ a9◂ [ ]{| l |}] )
	mov rax,r10
	mov r14,rax
	call ETR_132

	mov r9,QWORD [rsp-8+8*2]
	mov rax,QWORD [rsp-8+8*1]
	mov r8,r14
	mov r14,rax
	add rsp,16
;; rsp=0 , %1006~2'(= {| l |} ) %1005~0'(= r ) %1003~1'(= {| l |} ) %990~3'(= a3◂ [ a23◂ [ ]] ) 
; _#10 0'(= r ) ⊢ 0'(= r )
	sub r13,1
;; rsp=0 , %1007~0'(= r ) %1006~2'(= {| l |} ) %1003~1'(= {| l |} ) %990~3'(= a3◂ [ a23◂ [ ]] ) 
; » _^ .. ⊢ ..
; .. //
	mov rdi,0
	mov rsi,r14
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[rsi] 
	add rdi,rax 
	push rax
	push rsi
	mov rsi,r8
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[rsi] 
	add rdi,rax 
	push rax
	push rsi
	add rdi,2
	push rdi 
	call mlc_s8
	pop rdi
	mov r10,rax
	lea rdi,[rax+7+rdi]
	std 
	mov QWORD [tmp],rcx 
	pop rsi 
	pop rcx
	lea rsi,[rsi+7+rcx]
	rep movsb
	lea rsi,[LB_645+1-1]
	mov rcx,1
	rep movsb
	pop rsi 
	pop rcx
	lea rsi,[rsi+7+rcx]
	rep movsb
	lea rsi,[LB_646+1-1]
	mov rcx,1
	rep movsb
	mov rcx,QWORD [tmp] 
;; rsp=0 , %1010~4'(= {| l |} ) %1009~2'(= {| l |} ) %1008~1'(= {| l |} ) %1007~0'(= r ) %990~3'(= a3◂ [ a23◂ [ ]] ) 
; ∎ { 0'(= r ) 4'(= {| l |} ) }
; .dlt.ptn 2'(= {| l |} )
	mov rdi,r8
	call free_s8 
; .dlt.ptn 1'(= {| l |} )
	mov rdi,r14
	call free_s8 
; .dlt.ptn 3'(= a3◂ [ a23◂ [ ]] )
;	.dlt adt ⊢ _  
; .mov_ptn2 { 0'(= r ) 4'(= {| l |} ) } ⊢ { 0'(= r ) 1'(= {| l |} ) }
; .mov_ptn 4'(= {| l |} ) ⊢ 1'(= {| l |} )
	mov rax,r10
	mov r14,rax
	ret
LB_640:
;; ?; 1'(= a33◂ [ ] ) ⊢ 1(<3)◂2'(= a11◂ [ a9◂ [ ]] )
	mov rdi,r14
	cmp BYTE [rdi+6],1
	jnz LB_647
	mov rax,QWORD [rdi+8]
	mov r8,rax
;; rsp=0 , %1011~2'(= a11◂ [ a9◂ [ ]] ) %987~0'(= r ) 
; rsp_d=0, #88 2'(= a11◂ [ a9◂ [ ]] ) ⊢ 1'(= {| l |} )
	sub rsp,8
	mov QWORD [rsp+8*0],r13
; .mov_ptn2 2'(= a11◂ [ a9◂ [ ]] ) ⊢ 0'(= a11◂ [ a9◂ [ ]] )
; .mov_ptn 2'(= a11◂ [ a9◂ [ ]] ) ⊢ 0'(= a11◂ [ a9◂ [ ]] )
	mov rax,r8
	mov r13,rax
	call ETR_88

	mov rax,QWORD [rsp-8+8*1]
	mov r14,r13
	mov r13,rax
	add rsp,8
;; rsp=0 , %1012~1'(= {| l |} ) %987~0'(= r ) 
; » _^ .. ⊢ ..
; .. //
	mov rdi,0
	mov rsi,r14
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[rsi] 
	add rdi,rax 
	push rax
	push rsi
	add rdi,4
	push rdi 
	call mlc_s8
	pop rdi
	mov r8,rax
	lea rdi,[rax+7+rdi]
	std 
	mov QWORD [tmp],rcx 
	lea rsi,[LB_648+1-1]
	mov rcx,1
	rep movsb
	pop rsi 
	pop rcx
	lea rsi,[rsi+7+rcx]
	rep movsb
	lea rsi,[LB_649+3-1]
	mov rcx,3
	rep movsb
	mov rcx,QWORD [tmp] 
;; rsp=0 , %1014~2'(= {| l |} ) %1013~1'(= {| l |} ) %987~0'(= r ) 
; ∎ { 0'(= r ) 2'(= {| l |} ) }
; .dlt.ptn 1'(= {| l |} )
	mov rdi,r14
	call free_s8 
; .mov_ptn2 { 0'(= r ) 2'(= {| l |} ) } ⊢ { 0'(= r ) 1'(= {| l |} ) }
; .mov_ptn 2'(= {| l |} ) ⊢ 1'(= {| l |} )
	mov rax,r8
	mov r14,rax
	ret
LB_647:
;; ?; 1'(= a33◂ [ ] ) ⊢ 2(<3)◂2'(= a17◂ [ a9◂ [ ]{| l |}] )
	mov rax,QWORD [rdi+8]
	mov r8,rax
;; rsp=0 , %1015~2'(= a17◂ [ a9◂ [ ]{| l |}] ) %987~0'(= r ) 
; _#9 0'(= r ) ⊢ 0'(= r )
	add r13,1
;; rsp=0 , %1016~0'(= r ) %1015~2'(= a17◂ [ a9◂ [ ]{| l |}] ) 
; rsp_d=0, #132 { 0'(= r ) 2'(= a17◂ [ a9◂ [ ]{| l |}] ) } ⊢ { 0'(= r ) 1'(= {| l |} ) }
; .mov_ptn2 { 0'(= r ) 2'(= a17◂ [ a9◂ [ ]{| l |}] ) } ⊢ { 0'(= r ) 1'(= a17◂ [ a9◂ [ ]{| l |}] ) }
; .mov_ptn 2'(= a17◂ [ a9◂ [ ]{| l |}] ) ⊢ 1'(= a17◂ [ a9◂ [ ]{| l |}] )
	mov rax,r8
	mov r14,rax
	call ETR_132

;; rsp=0 , %1018~1'(= {| l |} ) %1017~0'(= r ) 
; _#10 0'(= r ) ⊢ 0'(= r )
	sub r13,1
;; rsp=0 , %1019~0'(= r ) %1018~1'(= {| l |} ) 
; » _^ .. ⊢ ..
; .. //
	mov rdi,0
	mov rsi,r14
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[rsi] 
	add rdi,rax 
	push rax
	push rsi
	add rdi,5
	push rdi 
	call mlc_s8
	pop rdi
	mov r8,rax
	lea rdi,[rax+7+rdi]
	std 
	mov QWORD [tmp],rcx 
	pop rsi 
	pop rcx
	lea rsi,[rsi+7+rcx]
	rep movsb
	lea rsi,[LB_650+5-1]
	mov rcx,5
	rep movsb
	mov rcx,QWORD [tmp] 
;; rsp=0 , %1021~2'(= {| l |} ) %1020~1'(= {| l |} ) %1019~0'(= r ) 
; ∎ { 0'(= r ) 2'(= {| l |} ) }
; .dlt.ptn 1'(= {| l |} )
	mov rdi,r14
	call free_s8 
; .mov_ptn2 { 0'(= r ) 2'(= {| l |} ) } ⊢ { 0'(= r ) 1'(= {| l |} ) }
; .mov_ptn 2'(= {| l |} ) ⊢ 1'(= {| l |} )
	mov rax,r8
	mov r14,rax
	ret
ETR_185: ; pnt_lc_qlq_etr { 0'(= r ) 1'(= a2◂ [ *{ {| l |}a8◂ [ a13◂ [ {| l |}]]a3◂ [ a23◂ [ ]]a17◂ [ a9◂ [ ]{| l |}]}] ) } ⊢ { 0'(= r ) 1'(= {| l |} ) } : ({ _r64 _lst◂{ _s8 _t8◂_t13◂_s8 _opn◂_t23 _t17◂_s8◂_t9 } }→{ _r64 _s8 })
;; rsp=0 , %1023~1'(= a2◂ [ *{ {| l |}a8◂ [ a13◂ [ {| l |}]]a3◂ [ a23◂ [ ]]a17◂ [ a9◂ [ ]{| l |}]}] ) %1022~0'(= r ) 
;; ?; 1'(= a2◂ [ *{ {| l |}a8◂ [ a13◂ [ {| l |}]]a3◂ [ a23◂ [ ]]a17◂ [ a9◂ [ ]{| l |}]}] ) ⊢ 0(<2)◂{ { 3'(= {| l |} ) 4'(= a8◂ [ a13◂ [ {| l |}]] ) 5'(= a3◂ [ a23◂ [ ]] ) 6'(= a17◂ [ a9◂ [ ]{| l |}] ) } 7'(= a2◂ [ *{ {| l |}a8◂ [ a13◂ [ {| l |}]]a3◂ [ a23◂ [ ]]a17◂ [ a9◂ [ ]{| l |}]}] ) }
	mov rdi,r14
	cmp BYTE [rdi+6],0
	jnz LB_651
	mov rdi,r14
	mov rdi,QWORD [rdi+8+8*0]
	mov r8,rdi
	mov rdi,r8
	mov rdi,QWORD [rdi+8+8*0]
	mov r9,rdi
	mov rdi,r8
	mov rdi,QWORD [rdi+8+8*1]
	mov r10,rdi
	mov rdi,r8
	mov rdi,QWORD [rdi+8+8*2]
	mov r11,rdi
	mov rdi,r8
	mov rdi,QWORD [rdi+8+8*3]
	mov rcx,rdi
	mov rdi,r14
	mov rdi,QWORD [rdi+8+8*1]
	mov rdx,rdi
;; rsp=0 , %1028~7'(= a2◂ [ *{ {| l |}a8◂ [ a13◂ [ {| l |}]]a3◂ [ a23◂ [ ]]a17◂ [ a9◂ [ ]{| l |}]}] ) %1027~6'(= a17◂ [ a9◂ [ ]{| l |}] ) %1026~5'(= a3◂ [ a23◂ [ ]] ) %1025~4'(= a8◂ [ a13◂ [ {| l |}]] ) %1024~3'(= {| l |} ) %1022~0'(= r ) 
;; ?; 5'(= a3◂ [ a23◂ [ ]] ) ⊢ 0(<2)◂1'(= a23◂ [ ] )
	mov rdi,r11
	cmp BYTE [rdi+6],0
	jnz LB_652
	mov rax,QWORD [rdi+8]
	mov r14,rax
;; rsp=0 , %1029~1'(= a23◂ [ ] ) %1028~7'(= a2◂ [ *{ {| l |}a8◂ [ a13◂ [ {| l |}]]a3◂ [ a23◂ [ ]]a17◂ [ a9◂ [ ]{| l |}]}] ) %1027~6'(= a17◂ [ a9◂ [ ]{| l |}] ) %1025~4'(= a8◂ [ a13◂ [ {| l |}]] ) %1024~3'(= {| l |} ) %1022~0'(= r ) 
; rsp_d=0, #182 1'(= a23◂ [ ] ) ⊢ 1'(= {| l |} )
	sub rsp,40
	mov QWORD [rsp+8*0],r13
	mov QWORD [rsp+8*1],r9
	mov QWORD [rsp+8*2],r10
	mov QWORD [rsp+8*3],rcx
	mov QWORD [rsp+8*4],rdx
; .mov_ptn2 1'(= a23◂ [ ] ) ⊢ 0'(= a23◂ [ ] )
; .mov_ptn 1'(= a23◂ [ ] ) ⊢ 0'(= a23◂ [ ] )
	mov rax,r14
	mov r13,rax
	call ETR_182

	mov rdx,QWORD [rsp-8+8*5]
	mov rcx,QWORD [rsp-8+8*4]
	mov r10,QWORD [rsp-8+8*3]
	mov r9,QWORD [rsp-8+8*2]
	mov rax,QWORD [rsp-8+8*1]
	mov r14,r13
	mov r13,rax
	add rsp,40
;; rsp=0 , %1030~1'(= {| l |} ) %1028~7'(= a2◂ [ *{ {| l |}a8◂ [ a13◂ [ {| l |}]]a3◂ [ a23◂ [ ]]a17◂ [ a9◂ [ ]{| l |}]}] ) %1027~6'(= a17◂ [ a9◂ [ ]{| l |}] ) %1025~4'(= a8◂ [ a13◂ [ {| l |}]] ) %1024~3'(= {| l |} ) %1022~0'(= r ) 
; rsp_d=0, #99 4'(= a8◂ [ a13◂ [ {| l |}]] ) ⊢ 2'(= {| l |} )
	sub rsp,40
	mov QWORD [rsp+8*0],r13
	mov QWORD [rsp+8*1],r14
	mov QWORD [rsp+8*2],r9
	mov QWORD [rsp+8*3],rcx
	mov QWORD [rsp+8*4],rdx
; .mov_ptn2 4'(= a8◂ [ a13◂ [ {| l |}]] ) ⊢ 0'(= a8◂ [ a13◂ [ {| l |}]] )
; .mov_ptn 4'(= a8◂ [ a13◂ [ {| l |}]] ) ⊢ 0'(= a8◂ [ a13◂ [ {| l |}]] )
	mov rax,r10
	mov r13,rax
	call ETR_99

	mov rdx,QWORD [rsp-8+8*5]
	mov rcx,QWORD [rsp-8+8*4]
	mov r9,QWORD [rsp-8+8*3]
	mov r14,QWORD [rsp-8+8*2]
	mov rax,QWORD [rsp-8+8*1]
	mov r8,r13
	mov r13,rax
	add rsp,40
;; rsp=0 , %1031~2'(= {| l |} ) %1030~1'(= {| l |} ) %1028~7'(= a2◂ [ *{ {| l |}a8◂ [ a13◂ [ {| l |}]]a3◂ [ a23◂ [ ]]a17◂ [ a9◂ [ ]{| l |}]}] ) %1027~6'(= a17◂ [ a9◂ [ ]{| l |}] ) %1024~3'(= {| l |} ) %1022~0'(= r ) 
; rsp_d=0, #185 { 0'(= r ) 7'(= a2◂ [ *{ {| l |}a8◂ [ a13◂ [ {| l |}]]a3◂ [ a23◂ [ ]]a17◂ [ a9◂ [ ]{| l |}]}] ) } ⊢ { 0'(= r ) 4'(= {| l |} ) }
	sub rsp,32
	mov QWORD [rsp+8*0],r14
	mov QWORD [rsp+8*1],r8
	mov QWORD [rsp+8*2],r9
	mov QWORD [rsp+8*3],rcx
; .mov_ptn2 { 0'(= r ) 7'(= a2◂ [ *{ {| l |}a8◂ [ a13◂ [ {| l |}]]a3◂ [ a23◂ [ ]]a17◂ [ a9◂ [ ]{| l |}]}] ) } ⊢ { 0'(= r ) 1'(= a2◂ [ *{ {| l |}a8◂ [ a13◂ [ {| l |}]]a3◂ [ a23◂ [ ]]a17◂ [ a9◂ [ ]{| l |}]}] ) }
; .mov_ptn 7'(= a2◂ [ *{ {| l |}a8◂ [ a13◂ [ {| l |}]]a3◂ [ a23◂ [ ]]a17◂ [ a9◂ [ ]{| l |}]}] ) ⊢ 1'(= a2◂ [ *{ {| l |}a8◂ [ a13◂ [ {| l |}]]a3◂ [ a23◂ [ ]]a17◂ [ a9◂ [ ]{| l |}]}] )
	mov rax,rdx
	mov r14,rax
	call ETR_185

	mov rcx,QWORD [rsp-8+8*4]
	mov r9,QWORD [rsp-8+8*3]
	mov r8,QWORD [rsp-8+8*2]
	mov rax,QWORD [rsp-8+8*1]
	mov r10,r14
	mov r14,rax
	add rsp,32
;; rsp=0 , %1033~4'(= {| l |} ) %1032~0'(= r ) %1031~2'(= {| l |} ) %1030~1'(= {| l |} ) %1027~6'(= a17◂ [ a9◂ [ ]{| l |}] ) %1024~3'(= {| l |} ) 
; _#9 0'(= r ) ⊢ 0'(= r )
	add r13,1
;; rsp=0 , %1034~0'(= r ) %1033~4'(= {| l |} ) %1031~2'(= {| l |} ) %1030~1'(= {| l |} ) %1027~6'(= a17◂ [ a9◂ [ ]{| l |}] ) %1024~3'(= {| l |} ) 
; rsp_d=0, #132 { 0'(= r ) 6'(= a17◂ [ a9◂ [ ]{| l |}] ) } ⊢ { 0'(= r ) 5'(= {| l |} ) }
	sub rsp,32
	mov QWORD [rsp+8*0],r14
	mov QWORD [rsp+8*1],r8
	mov QWORD [rsp+8*2],r9
	mov QWORD [rsp+8*3],r10
; .mov_ptn2 { 0'(= r ) 6'(= a17◂ [ a9◂ [ ]{| l |}] ) } ⊢ { 0'(= r ) 1'(= a17◂ [ a9◂ [ ]{| l |}] ) }
; .mov_ptn 6'(= a17◂ [ a9◂ [ ]{| l |}] ) ⊢ 1'(= a17◂ [ a9◂ [ ]{| l |}] )
	mov rax,rcx
	mov r14,rax
	call ETR_132

	mov r10,QWORD [rsp-8+8*4]
	mov r9,QWORD [rsp-8+8*3]
	mov r8,QWORD [rsp-8+8*2]
	mov rax,QWORD [rsp-8+8*1]
	mov r11,r14
	mov r14,rax
	add rsp,32
;; rsp=0 , %1036~5'(= {| l |} ) %1035~0'(= r ) %1033~4'(= {| l |} ) %1031~2'(= {| l |} ) %1030~1'(= {| l |} ) %1024~3'(= {| l |} ) 
; _#10 0'(= r ) ⊢ 0'(= r )
	sub r13,1
;; rsp=0 , %1037~0'(= r ) %1036~5'(= {| l |} ) %1033~4'(= {| l |} ) %1031~2'(= {| l |} ) %1030~1'(= {| l |} ) %1024~3'(= {| l |} ) 
; » _^ .. ⊢ ..
; .. //
	mov rdi,0
	mov rsi,r13
	push rsi
	imul rsi,1
	add rdi,rsi 
	mov rsi,r9
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[rsi] 
	add rdi,rax 
	push rax
	push rsi
	mov rsi,r8
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[rsi] 
	add rdi,rax 
	push rax
	push rsi
	mov rsi,r14
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[rsi] 
	add rdi,rax 
	push rax
	push rsi
	mov rsi,r11
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[rsi] 
	add rdi,rax 
	push rax
	push rsi
	mov rsi,r10
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[rsi] 
	add rdi,rax 
	push rax
	push rsi
	add rdi,7
	push rdi 
	call mlc_s8
	pop rdi
	mov rcx,rax
	lea rdi,[rax+7+rdi]
	std 
	mov QWORD [tmp],rcx 
	pop rsi 
	pop rcx
	lea rsi,[rsi+7+rcx]
	rep movsb
	pop rsi 
	pop rcx
	lea rsi,[rsi+7+rcx]
	rep movsb
	lea rsi,[LB_653+1-1]
	mov rcx,1
	rep movsb
	pop rsi 
	pop rcx
	lea rsi,[rsi+7+rcx]
	rep movsb
	lea rsi,[LB_654+3-1]
	mov rcx,3
	rep movsb
	pop rsi 
	pop rcx
	lea rsi,[rsi+7+rcx]
	rep movsb
	lea rsi,[LB_655+1-1]
	mov rcx,1
	rep movsb
	pop rsi 
	pop rcx
	lea rsi,[rsi+7+rcx]
	rep movsb
	lea rsi,[LB_656+2-1]
	mov rcx,2
	rep movsb
	pop rax 
LB_658:
	cmp rax,0
	jz LB_659
	sub rax,1
	lea rsi,[LB_657+1-1]
	mov rcx,1
	rep movsb 
	jmp LB_658
LB_659:
	mov rcx,QWORD [tmp] 
;; rsp=0 , %1044~6'(= {| l |} ) %1043~1'(= {| l |} ) %1042~4'(= {| l |} ) %1041~5'(= {| l |} ) %1040~2'(= {| l |} ) %1039~3'(= {| l |} ) %1038~0'(= r ) 
; ∎ { 0'(= r ) 6'(= {| l |} ) }
; .dlt.ptn 1'(= {| l |} )
	mov rdi,r14
	call free_s8 
; .dlt.ptn 4'(= {| l |} )
	mov rdi,r10
	call free_s8 
; .dlt.ptn 5'(= {| l |} )
	mov rdi,r11
	call free_s8 
; .dlt.ptn 2'(= {| l |} )
	mov rdi,r8
	call free_s8 
; .dlt.ptn 3'(= {| l |} )
	mov rdi,r9
	call free_s8 
; .mov_ptn2 { 0'(= r ) 6'(= {| l |} ) } ⊢ { 0'(= r ) 1'(= {| l |} ) }
; .mov_ptn 6'(= {| l |} ) ⊢ 1'(= {| l |} )
	mov rax,rcx
	mov r14,rax
	ret
LB_652:
;; rsp=0 , %1028~7'(= a2◂ [ *{ {| l |}a8◂ [ a13◂ [ {| l |}]]a3◂ [ a23◂ [ ]]a17◂ [ a9◂ [ ]{| l |}]}] ) %1027~6'(= a17◂ [ a9◂ [ ]{| l |}] ) %1026~5'(= a3◂ [ a23◂ [ ]] ) %1025~4'(= a8◂ [ a13◂ [ {| l |}]] ) %1024~3'(= {| l |} ) %1022~0'(= r ) 
; rsp_d=0, #99 4'(= a8◂ [ a13◂ [ {| l |}]] ) ⊢ 1'(= {| l |} )
	sub rsp,40
	mov QWORD [rsp+8*0],r13
	mov QWORD [rsp+8*1],r9
	mov QWORD [rsp+8*2],r11
	mov QWORD [rsp+8*3],rcx
	mov QWORD [rsp+8*4],rdx
; .mov_ptn2 4'(= a8◂ [ a13◂ [ {| l |}]] ) ⊢ 0'(= a8◂ [ a13◂ [ {| l |}]] )
; .mov_ptn 4'(= a8◂ [ a13◂ [ {| l |}]] ) ⊢ 0'(= a8◂ [ a13◂ [ {| l |}]] )
	mov rax,r10
	mov r13,rax
	call ETR_99

	mov rdx,QWORD [rsp-8+8*5]
	mov rcx,QWORD [rsp-8+8*4]
	mov r11,QWORD [rsp-8+8*3]
	mov r9,QWORD [rsp-8+8*2]
	mov rax,QWORD [rsp-8+8*1]
	mov r14,r13
	mov r13,rax
	add rsp,40
;; rsp=0 , %1045~1'(= {| l |} ) %1028~7'(= a2◂ [ *{ {| l |}a8◂ [ a13◂ [ {| l |}]]a3◂ [ a23◂ [ ]]a17◂ [ a9◂ [ ]{| l |}]}] ) %1027~6'(= a17◂ [ a9◂ [ ]{| l |}] ) %1026~5'(= a3◂ [ a23◂ [ ]] ) %1024~3'(= {| l |} ) %1022~0'(= r ) 
; rsp_d=0, #185 { 0'(= r ) 7'(= a2◂ [ *{ {| l |}a8◂ [ a13◂ [ {| l |}]]a3◂ [ a23◂ [ ]]a17◂ [ a9◂ [ ]{| l |}]}] ) } ⊢ { 0'(= r ) 2'(= {| l |} ) }
	sub rsp,32
	mov QWORD [rsp+8*0],r14
	mov QWORD [rsp+8*1],r9
	mov QWORD [rsp+8*2],r11
	mov QWORD [rsp+8*3],rcx
; .mov_ptn2 { 0'(= r ) 7'(= a2◂ [ *{ {| l |}a8◂ [ a13◂ [ {| l |}]]a3◂ [ a23◂ [ ]]a17◂ [ a9◂ [ ]{| l |}]}] ) } ⊢ { 0'(= r ) 1'(= a2◂ [ *{ {| l |}a8◂ [ a13◂ [ {| l |}]]a3◂ [ a23◂ [ ]]a17◂ [ a9◂ [ ]{| l |}]}] ) }
; .mov_ptn 7'(= a2◂ [ *{ {| l |}a8◂ [ a13◂ [ {| l |}]]a3◂ [ a23◂ [ ]]a17◂ [ a9◂ [ ]{| l |}]}] ) ⊢ 1'(= a2◂ [ *{ {| l |}a8◂ [ a13◂ [ {| l |}]]a3◂ [ a23◂ [ ]]a17◂ [ a9◂ [ ]{| l |}]}] )
	mov rax,rdx
	mov r14,rax
	call ETR_185

	mov rcx,QWORD [rsp-8+8*4]
	mov r11,QWORD [rsp-8+8*3]
	mov r9,QWORD [rsp-8+8*2]
	mov rax,QWORD [rsp-8+8*1]
	mov r8,r14
	mov r14,rax
	add rsp,32
;; rsp=0 , %1047~2'(= {| l |} ) %1046~0'(= r ) %1045~1'(= {| l |} ) %1027~6'(= a17◂ [ a9◂ [ ]{| l |}] ) %1026~5'(= a3◂ [ a23◂ [ ]] ) %1024~3'(= {| l |} ) 
; _#9 0'(= r ) ⊢ 0'(= r )
	add r13,1
;; rsp=0 , %1048~0'(= r ) %1047~2'(= {| l |} ) %1045~1'(= {| l |} ) %1027~6'(= a17◂ [ a9◂ [ ]{| l |}] ) %1026~5'(= a3◂ [ a23◂ [ ]] ) %1024~3'(= {| l |} ) 
; rsp_d=0, #132 { 0'(= r ) 6'(= a17◂ [ a9◂ [ ]{| l |}] ) } ⊢ { 0'(= r ) 4'(= {| l |} ) }
	sub rsp,32
	mov QWORD [rsp+8*0],r14
	mov QWORD [rsp+8*1],r8
	mov QWORD [rsp+8*2],r9
	mov QWORD [rsp+8*3],r11
; .mov_ptn2 { 0'(= r ) 6'(= a17◂ [ a9◂ [ ]{| l |}] ) } ⊢ { 0'(= r ) 1'(= a17◂ [ a9◂ [ ]{| l |}] ) }
; .mov_ptn 6'(= a17◂ [ a9◂ [ ]{| l |}] ) ⊢ 1'(= a17◂ [ a9◂ [ ]{| l |}] )
	mov rax,rcx
	mov r14,rax
	call ETR_132

	mov r11,QWORD [rsp-8+8*4]
	mov r9,QWORD [rsp-8+8*3]
	mov r8,QWORD [rsp-8+8*2]
	mov rax,QWORD [rsp-8+8*1]
	mov r10,r14
	mov r14,rax
	add rsp,32
;; rsp=0 , %1050~4'(= {| l |} ) %1049~0'(= r ) %1047~2'(= {| l |} ) %1045~1'(= {| l |} ) %1026~5'(= a3◂ [ a23◂ [ ]] ) %1024~3'(= {| l |} ) 
; _#10 0'(= r ) ⊢ 0'(= r )
	sub r13,1
;; rsp=0 , %1051~0'(= r ) %1050~4'(= {| l |} ) %1047~2'(= {| l |} ) %1045~1'(= {| l |} ) %1026~5'(= a3◂ [ a23◂ [ ]] ) %1024~3'(= {| l |} ) 
; » _^ .. ⊢ ..
; .. //
	mov rdi,0
	mov rsi,r13
	push rsi
	imul rsi,1
	add rdi,rsi 
	mov rsi,r9
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[rsi] 
	add rdi,rax 
	push rax
	push rsi
	mov rsi,r14
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[rsi] 
	add rdi,rax 
	push rax
	push rsi
	mov rsi,r10
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[rsi] 
	add rdi,rax 
	push rax
	push rsi
	mov rsi,r8
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[rsi] 
	add rdi,rax 
	push rax
	push rsi
	add rdi,4
	push rdi 
	call mlc_s8
	pop rdi
	mov rcx,rax
	lea rdi,[rax+7+rdi]
	std 
	mov QWORD [tmp],rcx 
	pop rsi 
	pop rcx
	lea rsi,[rsi+7+rcx]
	rep movsb
	pop rsi 
	pop rcx
	lea rsi,[rsi+7+rcx]
	rep movsb
	lea rsi,[LB_660+1-1]
	mov rcx,1
	rep movsb
	pop rsi 
	pop rcx
	lea rsi,[rsi+7+rcx]
	rep movsb
	lea rsi,[LB_661+1-1]
	mov rcx,1
	rep movsb
	pop rsi 
	pop rcx
	lea rsi,[rsi+7+rcx]
	rep movsb
	lea rsi,[LB_662+2-1]
	mov rcx,2
	rep movsb
	pop rax 
LB_664:
	cmp rax,0
	jz LB_665
	sub rax,1
	lea rsi,[LB_663+1-1]
	mov rcx,1
	rep movsb 
	jmp LB_664
LB_665:
	mov rcx,QWORD [tmp] 
;; rsp=0 , %1057~6'(= {| l |} ) %1056~2'(= {| l |} ) %1055~4'(= {| l |} ) %1054~1'(= {| l |} ) %1053~3'(= {| l |} ) %1052~0'(= r ) %1026~5'(= a3◂ [ a23◂ [ ]] ) 
; ∎ { 0'(= r ) 6'(= {| l |} ) }
; .dlt.ptn 2'(= {| l |} )
	mov rdi,r8
	call free_s8 
; .dlt.ptn 4'(= {| l |} )
	mov rdi,r10
	call free_s8 
; .dlt.ptn 1'(= {| l |} )
	mov rdi,r14
	call free_s8 
; .dlt.ptn 3'(= {| l |} )
	mov rdi,r9
	call free_s8 
; .dlt.ptn 5'(= a3◂ [ a23◂ [ ]] )
;	.dlt adt ⊢ _  
; .mov_ptn2 { 0'(= r ) 6'(= {| l |} ) } ⊢ { 0'(= r ) 1'(= {| l |} ) }
; .mov_ptn 6'(= {| l |} ) ⊢ 1'(= {| l |} )
	mov rax,rcx
	mov r14,rax
	ret
LB_651:
;; ?; 1'(= a2◂ [ *{ {| l |}a8◂ [ a13◂ [ {| l |}]]a3◂ [ a23◂ [ ]]a17◂ [ a9◂ [ ]{| l |}]}] ) ⊢ 1(<2)◂{ }
;; rsp=0 , %1022~0'(= r ) 
	jmp LB_666
LB_666:
; $ %[ "" ] ⊢ %[ "" ]
;; rsp=0 , %1058~%[ "" ] %1022~0'(= r ) 
; ∎ { 0'(= r ) %[ "" ] }
; .mov_ptn2 { 0'(= r ) %[ "" ] } ⊢ { 0'(= r ) 1'(= {| l |} ) }
; .mov_ptn %[ "" ] ⊢ 1'(= {| l |} )
	mov rsi,1  
	mov rdi,16
	xor rax,rax 
	C_CALL_SF calloc
	mov QWORD [rax],0
	mov r14,rax
	ret
ETR_186: ; mk_app { 0'(= a23◂ [ ] ) 1'(= a2◂ [ a23◂ [ ]] ) } ⊢ 0'(= a23◂ [ ] ) : ({ _t23 _lst◂_t23 }→_t23)
;; rsp=0 , %1060~1'(= a2◂ [ a23◂ [ ]] ) %1059~0'(= a23◂ [ ] ) 
;; ?; 1'(= a2◂ [ a23◂ [ ]] ) ⊢ 0(<2)◂{ 2'(= a23◂ [ ] ) 3'(= a2◂ [ a23◂ [ ]] ) }
	mov rdi,r14
	cmp BYTE [rdi+6],0
	jnz LB_667
	mov rdi,r14
	mov rdi,QWORD [rdi+8+8*0]
	mov r8,rdi
	mov rdi,r14
	mov rdi,QWORD [rdi+8+8*1]
	mov r9,rdi
;; rsp=0 , %1062~3'(= a2◂ [ a23◂ [ ]] ) %1061~2'(= a23◂ [ ] ) %1059~0'(= a23◂ [ ] ) 
; #138 { 0'(= a23◂ [ ] ) 2'(= a23◂ [ ] ) } ⊢ 2(<5)◂{ 0'(= a23◂ [ ] ) 2'(= a23◂ [ ] ) }
;; rsp=0 , %1063~2(<5)◂{ 0'(= a23◂ [ ] ) 2'(= a23◂ [ ] ) } %1062~3'(= a2◂ [ a23◂ [ ]] ) 
; rsp_d=0, #186 { 2(<5)◂{ 0'(= a23◂ [ ] ) 2'(= a23◂ [ ] ) } 3'(= a2◂ [ a23◂ [ ]] ) } ⊢ 0'(= a23◂ [ ] )
; .mov_ptn2 { 2(<5)◂{ 0'(= a23◂ [ ] ) 2'(= a23◂ [ ] ) } 3'(= a2◂ [ a23◂ [ ]] ) } ⊢ { 0'(= a23◂ [ ] ) 1'(= a2◂ [ a23◂ [ ]] ) }
; .mov_ptn 3'(= a2◂ [ a23◂ [ ]] ) ⊢ 1'(= a2◂ [ a23◂ [ ]] )
	mov rax,r9
	mov r14,rax
	mov r10,r13
; .mov_ptn 2(<5)◂{ 4'(= a23◂ [ ] ) 2'(= a23◂ [ ] ) } ⊢ 0'(= a23◂ [ ] )
	mov rax,[SS_RCD_2_TOP]
	mov rsi,[rax] 
	mov QWORD [SS_RCD_2_TOP],rsi
	mov QWORD [rax],0
	mov r9,rax
	mov rax,r10
	mov QWORD [r9+8+8*0],rax
	mov rax,r8
	mov QWORD [r9+8+8*1],rax
	mov rax,r9
	mov BYTE [rax+6],2
	mov r13,rax
	call ETR_186

;; rsp=0 , %1064~0'(= a23◂ [ ] ) 
; ∎ 0'(= a23◂ [ ] )
; .mov_ptn2 0'(= a23◂ [ ] ) ⊢ 0'(= a23◂ [ ] )
	ret
LB_667:
;; ?; 1'(= a2◂ [ a23◂ [ ]] ) ⊢ 1(<2)◂{ }
;; rsp=0 , %1059~0'(= a23◂ [ ] ) 
; ∎ 0'(= a23◂ [ ] )
; .mov_ptn2 0'(= a23◂ [ ] ) ⊢ 0'(= a23◂ [ ] )
	ret
ETR_187:
	mov r9,0x0000_ffff_ffff_ffff
	and r9,[r13]
	call GRM_187
	ret
GRM_187:
	sub rsp,32
	mov QWORD [rsp+24],r13
	mov QWORD [rsp+16],r14 
	mov QWORD [rsp+8],r9
	lea rax,[r14+1]
	cmp rax,r9
	jg LB_671
	jmp LB_672
LB_671:
	mov r8,unt_1
	jmp LB_669
LB_672:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],95
	jnz LB_673
	jmp LB_674
LB_673:
	mov r8,unt_1
	jmp LB_669
LB_674:
	add r14,1
	jmp LB_670
LB_669:
	add rsp,0
	jmp LB_668
LB_670:
	sub rsp,32
	mov QWORD [rsp+24],r13
	mov QWORD [rsp+16],r14 
	mov QWORD [rsp+8],r9
	lea rax,[r14+1]
	cmp rax,r9
	jg LB_679
	jmp LB_680
LB_679:
	mov r8,unt_1
	jmp LB_677
LB_680:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],32
	jnz LB_681
	jmp LB_682
LB_681:
	mov r8,unt_1
	jmp LB_677
LB_682:
	add r14,1
	jmp LB_678
LB_677:
	add rsp,0
	jmp LB_676
LB_678:
	mov QWORD [rsp+8*0],r14
	mov r13,QWORD [rsp+16+8*0]
	mov r14,QWORD [rsp+8*0]
	jmp LB_684
LB_684
;; rsp=0 , %1068~1'(= r ) %1067~0'(= r ) 
; #22 { } ⊢ 0(<2)◂{ }
;; rsp=0 , %1069~0(<2)◂{ } %1068~1'(= r ) %1067~0'(= r ) 
; ∎ 0(<2)◂{ }
; .dlt.ptn 1'(= r )
; .dlt.ptn 0'(= r )
; .mov_ptn2 0(<2)◂{ } ⊢ 2'(= a3◂ [ *{ }] )
; .mov_ptn 0(<2)◂{ } ⊢ 2'(= a3◂ [ *{ }] )
	mov rax,unt 
	mov rax,unt_0
	mov r8,rax
	jmp LB_683
LB_683:
	cmp BYTE [r8+6],0
	jnz LB_676
	pop r14
	pop r9
	add rsp,8
	pop r13
	jmp LB_675
LB_676:
	mov r9,QWORD [rsp+8]
	mov r14,QWORD [rsp+16]
	mov r13,QWORD [rsp+24]
	lea rax,[r14+1]
	cmp rax,r9
	jg LB_688
	jmp LB_689
LB_688:
	mov r8,unt_1
	jmp LB_686
LB_689:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],9
	jnz LB_690
	jmp LB_691
LB_690:
	mov r8,unt_1
	jmp LB_686
LB_691:
	add r14,1
	jmp LB_687
LB_686:
	add rsp,0
	jmp LB_685
LB_687:
	mov QWORD [rsp+8*0],r14
	mov r13,QWORD [rsp+16+8*0]
	mov r14,QWORD [rsp+8*0]
	jmp LB_693
LB_693
;; rsp=0 , %1071~1'(= r ) %1070~0'(= r ) 
; #22 { } ⊢ 0(<2)◂{ }
;; rsp=0 , %1072~0(<2)◂{ } %1071~1'(= r ) %1070~0'(= r ) 
; ∎ 0(<2)◂{ }
; .dlt.ptn 1'(= r )
; .dlt.ptn 0'(= r )
; .mov_ptn2 0(<2)◂{ } ⊢ 2'(= a3◂ [ *{ }] )
; .mov_ptn 0(<2)◂{ } ⊢ 2'(= a3◂ [ *{ }] )
	mov rax,unt 
	mov rax,unt_0
	mov r8,rax
	jmp LB_692
LB_692:
	cmp BYTE [r8+6],0
	jnz LB_685
	pop r14
	pop r9
	add rsp,8
	pop r13
	jmp LB_675
LB_685:
	mov r9,QWORD [rsp+8]
	mov r14,QWORD [rsp+16]
	mov r13,QWORD [rsp+24]
	call GRM_188
	cmp BYTE [r8+6],0
	jnz LB_697
	jmp LB_698
LB_697:
	jmp LB_695
LB_698:
; .mov_ptn2 2'(= *{ } ) ⊢ { }
; .mov_ptn 2'(= *{ } ) ⊢ { }
	jmp LB_696
LB_695:
	add rsp,0
	jmp LB_694
LB_696:
	mov QWORD [rsp+8*0],r14
	mov r13,QWORD [rsp+16+8*0]
	mov r14,QWORD [rsp+8*0]
	jmp LB_700
LB_700
;; rsp=0 , %1075~1'(= r ) %1074~0'(= r ) %1073~{ } 
; #23 { } ⊢ 1(<2)◂{ }
;; rsp=0 , %1076~1(<2)◂{ } %1075~1'(= r ) %1074~0'(= r ) %1073~{ } 
; ∎ 1(<2)◂{ }
; .dlt.ptn 1'(= r )
; .dlt.ptn 0'(= r )
; .dlt.ptn { }
; .mov_ptn2 1(<2)◂{ } ⊢ 2'(= a3◂ [ *{ }] )
; .mov_ptn 1(<2)◂{ } ⊢ 2'(= a3◂ [ *{ }] )
	mov rax,unt 
	mov rax,unt_1
	mov r8,rax
	jmp LB_699
LB_699:
	cmp BYTE [r8+6],0
	jnz LB_694
	pop r14
	pop r9
	add rsp,8
	pop r13
	jmp LB_675
LB_694:
	mov r9,QWORD [rsp+8]
	mov r14,QWORD [rsp+16]
	mov r13,QWORD [rsp+24]
	mov QWORD [rsp+8*0],r14
	mov r13,QWORD [rsp+16+8*0]
	mov r14,QWORD [rsp+8*0]
	jmp LB_703
LB_703
;; rsp=0 , %1078~1'(= r ) %1077~0'(= r ) 
; #22 { } ⊢ 0(<2)◂{ }
;; rsp=0 , %1079~0(<2)◂{ } %1078~1'(= r ) %1077~0'(= r ) 
; ∎ 0(<2)◂{ }
; .dlt.ptn 1'(= r )
; .dlt.ptn 0'(= r )
; .mov_ptn2 0(<2)◂{ } ⊢ 2'(= a3◂ [ *{ }] )
; .mov_ptn 0(<2)◂{ } ⊢ 2'(= a3◂ [ *{ }] )
	mov rax,unt 
	mov rax,unt_0
	mov r8,rax
	jmp LB_702
LB_702:
	cmp BYTE [r8+6],0
	jnz LB_701
	pop r14
	pop r9
	add rsp,8
	pop r13
	jmp LB_675
LB_701:
	pop rdi
	pop r9 
	pop r14
	pop r13
	jmp LB_675
LB_675:
	cmp BYTE [r8+6],0
	jnz LB_704
	jmp LB_705
LB_704:
	add rsp,0
	add rsp,8
	pop r9 
	pop r14 
	pop r13
	ret
LB_705:
	mov QWORD [rsp+8*0],r14
; .mov_ptn2 2'(= *{ } ) ⊢ { }
; .mov_ptn 2'(= *{ } ) ⊢ { }
	mov r13,QWORD [rsp+16+8*0]
	mov r14,QWORD [rsp+8*0]
	jmp LB_707
LB_707
;; rsp=0 , %1080~{ } %1066~1'(= r ) %1065~0'(= r ) 
; #22 { } ⊢ 0(<2)◂{ }
;; rsp=0 , %1081~0(<2)◂{ } %1080~{ } %1066~1'(= r ) %1065~0'(= r ) 
; ∎ 0(<2)◂{ }
; .dlt.ptn { }
; .dlt.ptn 1'(= r )
; .dlt.ptn 0'(= r )
; .mov_ptn2 0(<2)◂{ } ⊢ 2'(= a3◂ [ *{ }] )
; .mov_ptn 0(<2)◂{ } ⊢ 2'(= a3◂ [ *{ }] )
	mov rax,unt 
	mov rax,unt_0
	mov r8,rax
	jmp LB_706
LB_706:
	cmp BYTE [r8+6],0
	jnz LB_668
	pop r14
	pop r9
	add rsp,8
	pop r13
	ret
LB_668:
	pop rdi
	pop r9 
	pop r14
	pop r13
	ret
ETR_188:
	mov r9,0x0000_ffff_ffff_ffff
	and r9,[r13]
	call GRM_188
	ret
GRM_188:
	sub rsp,32
	mov QWORD [rsp+24],r13
	mov QWORD [rsp+16],r14 
	mov QWORD [rsp+8],r9
	lea rax,[r14+1]
	cmp rax,r9
	jg LB_711
	jmp LB_712
LB_711:
	mov r8,unt_1
	jmp LB_709
LB_712:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],44
	jnz LB_713
	jmp LB_714
LB_713:
	mov r8,unt_1
	jmp LB_709
LB_714:
	add r14,1
	jmp LB_710
LB_709:
	add rsp,0
	jmp LB_708
LB_710:
	mov QWORD [rsp+8*0],r14
	mov r13,QWORD [rsp+16+8*0]
	mov r14,QWORD [rsp+8*0]
	jmp LB_716
LB_716
;; rsp=0 , %1083~1'(= r ) %1082~0'(= r ) 
; #23 { } ⊢ 1(<2)◂{ }
;; rsp=0 , %1084~1(<2)◂{ } %1083~1'(= r ) %1082~0'(= r ) 
; ∎ 1(<2)◂{ }
; .dlt.ptn 1'(= r )
; .dlt.ptn 0'(= r )
; .mov_ptn2 1(<2)◂{ } ⊢ 2'(= a3◂ [ *{ }] )
; .mov_ptn 1(<2)◂{ } ⊢ 2'(= a3◂ [ *{ }] )
	mov rax,unt 
	mov rax,unt_1
	mov r8,rax
	jmp LB_715
LB_715:
	cmp BYTE [r8+6],0
	jnz LB_708
	pop r14
	pop r9
	add rsp,8
	pop r13
	ret
LB_708:
	mov r9,QWORD [rsp+8]
	mov r14,QWORD [rsp+16]
	mov r13,QWORD [rsp+24]
	mov QWORD [rsp+8*0],r14
	mov r13,QWORD [rsp+16+8*0]
	mov r14,QWORD [rsp+8*0]
	jmp LB_719
LB_719
;; rsp=0 , %1086~1'(= r ) %1085~0'(= r ) 
; #22 { } ⊢ 0(<2)◂{ }
;; rsp=0 , %1087~0(<2)◂{ } %1086~1'(= r ) %1085~0'(= r ) 
; ∎ 0(<2)◂{ }
; .dlt.ptn 1'(= r )
; .dlt.ptn 0'(= r )
; .mov_ptn2 0(<2)◂{ } ⊢ 2'(= a3◂ [ *{ }] )
; .mov_ptn 0(<2)◂{ } ⊢ 2'(= a3◂ [ *{ }] )
	mov rax,unt 
	mov rax,unt_0
	mov r8,rax
	jmp LB_718
LB_718:
	cmp BYTE [r8+6],0
	jnz LB_717
	pop r14
	pop r9
	add rsp,8
	pop r13
	ret
LB_717:
	pop rdi
	pop r9 
	pop r14
	pop r13
	ret
ETR_189:
	mov r9,0x0000_ffff_ffff_ffff
	and r9,[r13]
	call GRM_189
	ret
GRM_189:
	sub rsp,32
	mov QWORD [rsp+24],r13
	mov QWORD [rsp+16],r14 
	mov QWORD [rsp+8],r9
	jmp LB_722
LB_721:
	add r14,1 
LB_722:
	cmp r14,r9
	jge LB_723
	JZ_LINE_SPC BYTE [r13+8+r14], LB_721
LB_723
	call GRM_77
	cmp BYTE [r8+6],0
	jnz LB_726
	jmp LB_727
LB_726:
	jmp LB_724
LB_727:
	sub rsp,8
; .mov_ptn2 2'(= {| l |} ) ⊢ 8'(= {| l |} )
; .mov_ptn 2'(= {| l |} ) ⊢ 8'(= {| l |} )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_725
LB_724:
	add rsp,0
	jmp LB_720
LB_725:
	jmp LB_729
LB_728:
	add r14,1 
LB_729:
	cmp r14,r9
	jge LB_730
	JZ_LINE_SPC BYTE [r13+8+r14], LB_728
LB_730
	lea rax,[r14+1]
	cmp rax,r9
	jg LB_733
	jmp LB_734
LB_733:
	mov r8,unt_1
	jmp LB_731
LB_734:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],46
	jnz LB_735
	jmp LB_736
LB_735:
	mov r8,unt_1
	jmp LB_731
LB_736:
	add r14,1
	jmp LB_732
LB_731:
	add rsp,8
	jmp LB_720
LB_732:
	jmp LB_738
LB_737:
	add r14,1 
LB_738:
	cmp r14,r9
	jge LB_739
	JZ_LINE_SPC BYTE [r13+8+r14], LB_737
LB_739
	call GRM_189
	cmp BYTE [r8+6],0
	jnz LB_742
	jmp LB_743
LB_742:
	jmp LB_740
LB_743:
	sub rsp,8
	mov r8,[r8+8]
; .mov_ptn2 2'(= a9◂ [ ] ) ⊢ 9'(= a9◂ [ ] )
; .mov_ptn 2'(= a9◂ [ ] ) ⊢ 9'(= a9◂ [ ] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_741
LB_740:
	add rsp,8
	jmp LB_720
LB_741:
	mov QWORD [rsp+8*2],r14
	mov r13,QWORD [rsp+16+8*2]
	mov r14,QWORD [rsp+8*2]
	jmp LB_745
LB_745
;; rsp=2 , %1091~1'(= r ) %1090~0'(= r ) %1089~9'(= a9◂ [ ] ) %1088~8'(= {| l |} ) 
; #81 { 8'(= {| l |} ) 9'(= a9◂ [ ] ) } ⊢ 0(<2)◂{ 8'(= {| l |} ) 9'(= a9◂ [ ] ) }
;; rsp=2 , %1092~0(<2)◂{ 8'(= {| l |} ) 9'(= a9◂ [ ] ) } %1091~1'(= r ) %1090~0'(= r ) 
; #22 0(<2)◂{ 8'(= {| l |} ) 9'(= a9◂ [ ] ) } ⊢ 0(<2)◂0(<2)◂{ 8'(= {| l |} ) 9'(= a9◂ [ ] ) }
;; rsp=2 , %1093~0(<2)◂0(<2)◂{ 8'(= {| l |} ) 9'(= a9◂ [ ] ) } %1091~1'(= r ) %1090~0'(= r ) 
; ∎ 0(<2)◂0(<2)◂{ 8'(= {| l |} ) 9'(= a9◂ [ ] ) }
; .dlt.ptn 1'(= r )
; .dlt.ptn 0'(= r )
; .mov_ptn2 0(<2)◂0(<2)◂{ 8'(= {| l |} ) 9'(= a9◂ [ ] ) } ⊢ 2'(= a3◂ [ a9◂ [ ]] )
; .mov_ptn 0(<2)◂0(<2)◂{ 8'(= {| l |} ) 9'(= a9◂ [ ] ) } ⊢ 2'(= a3◂ [ a9◂ [ ]] )
	mov rax,[SS_RCD_2_TOP]
	mov rsi,[rax] 
	mov QWORD [SS_RCD_2_TOP],rsi
	mov QWORD [rax],0
	mov r13,rax
	mov rax,QWORD [rsp-8+8*2]
	mov QWORD [r13+8+8*0],rax
	mov rax,QWORD [rsp-8+8*1]
	mov QWORD [r13+8+8*1],rax
	mov rax,r13
	mov BYTE [rax+6],0
	mov rdi,rax
	mov rax,r15
	mov r15,QWORD [r15] 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,16
	jmp LB_744
LB_744:
	cmp BYTE [r8+6],0
	jnz LB_720
	pop r14
	pop r9
	add rsp,8
	pop r13
	ret
LB_720:
	mov r9,QWORD [rsp+8]
	mov r14,QWORD [rsp+16]
	mov r13,QWORD [rsp+24]
	jmp LB_748
LB_747:
	add r14,1 
LB_748:
	cmp r14,r9
	jge LB_749
	JZ_LINE_SPC BYTE [r13+8+r14], LB_747
LB_749
	call GRM_77
	cmp BYTE [r8+6],0
	jnz LB_752
	jmp LB_753
LB_752:
	jmp LB_750
LB_753:
	sub rsp,8
; .mov_ptn2 2'(= {| l |} ) ⊢ 8'(= {| l |} )
; .mov_ptn 2'(= {| l |} ) ⊢ 8'(= {| l |} )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_751
LB_750:
	add rsp,0
	jmp LB_746
LB_751:
	mov QWORD [rsp+8*1],r14
	mov r13,QWORD [rsp+16+8*1]
	mov r14,QWORD [rsp+8*1]
	jmp LB_755
LB_755
;; rsp=1 , %1096~1'(= r ) %1095~0'(= r ) %1094~8'(= {| l |} ) 
; #80 8'(= {| l |} ) ⊢ 1(<2)◂8'(= {| l |} )
;; rsp=1 , %1097~1(<2)◂8'(= {| l |} ) %1096~1'(= r ) %1095~0'(= r ) 
; #22 1(<2)◂8'(= {| l |} ) ⊢ 0(<2)◂1(<2)◂8'(= {| l |} )
;; rsp=1 , %1098~0(<2)◂1(<2)◂8'(= {| l |} ) %1096~1'(= r ) %1095~0'(= r ) 
; ∎ 0(<2)◂1(<2)◂8'(= {| l |} )
; .dlt.ptn 1'(= r )
; .dlt.ptn 0'(= r )
; .mov_ptn2 0(<2)◂1(<2)◂8'(= {| l |} ) ⊢ 2'(= a3◂ [ a9◂ [ ]] )
; .mov_ptn 0(<2)◂1(<2)◂8'(= {| l |} ) ⊢ 2'(= a3◂ [ a9◂ [ ]] )
	mov rax,QWORD [rsp-8+8*1]
	mov BYTE [rax+6],1
	mov rdi,rax
	mov rax,r15
	mov r15,QWORD [r15] 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,8
	jmp LB_754
LB_754:
	cmp BYTE [r8+6],0
	jnz LB_746
	pop r14
	pop r9
	add rsp,8
	pop r13
	ret
LB_746:
	pop rdi
	pop r9 
	pop r14
	pop r13
	ret
ETR_190:
	mov r9,0x0000_ffff_ffff_ffff
	and r9,[r13]
	call GRM_190
	ret
GRM_190:
	sub rsp,32
	mov QWORD [rsp+24],r13
	mov QWORD [rsp+16],r14 
	mov QWORD [rsp+8],r9
	cmp r14,r9
	jge LB_759
 lea rdi,[r13+8+r14] 
	C_PUSH_REGS
	call scf_d
	C_POP_REGS
	cmp rax,0 
	jz LB_759
	add r14,rsi
	push rdi
	jmp LB_760
LB_759:
	mov r8,unt_1
	jmp LB_757
LB_760:
	jmp LB_758
LB_757:
	add rsp,0
	jmp LB_756
LB_758:
	lea rax,[r14+1]
	cmp rax,r9
	jg LB_763
	jmp LB_764
LB_763:
	mov r8,unt_1
	jmp LB_761
LB_764:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],114
	jnz LB_765
	jmp LB_766
LB_765:
	mov r8,unt_1
	jmp LB_761
LB_766:
	add r14,1
	jmp LB_762
LB_761:
	add rsp,8
	jmp LB_756
LB_762:
	mov QWORD [rsp+8*1],r14
	mov r13,QWORD [rsp+16+8*1]
	mov r14,QWORD [rsp+8*1]
	jmp LB_768
LB_768
;; rsp=1 , %1101~1'(= r ) %1100~0'(= r ) %1099~8'(= r ) 
; #84 8'(= r ) ⊢ 0(<2)◂8'(= r )
;; rsp=1 , %1102~0(<2)◂8'(= r ) %1101~1'(= r ) %1100~0'(= r ) 
; #86 0(<2)◂8'(= r ) ⊢ 0(<2)◂0(<2)◂8'(= r )
;; rsp=1 , %1103~0(<2)◂0(<2)◂8'(= r ) %1101~1'(= r ) %1100~0'(= r ) 
; #22 0(<2)◂0(<2)◂8'(= r ) ⊢ 0(<2)◂0(<2)◂0(<2)◂8'(= r )
;; rsp=1 , %1104~0(<2)◂0(<2)◂0(<2)◂8'(= r ) %1101~1'(= r ) %1100~0'(= r ) 
; ∎ 0(<2)◂0(<2)◂0(<2)◂8'(= r )
; .dlt.ptn 1'(= r )
; .dlt.ptn 0'(= r )
; .mov_ptn2 0(<2)◂0(<2)◂0(<2)◂8'(= r ) ⊢ 2'(= a3◂ [ a11◂ [ a9◂ [ ]]] )
; .mov_ptn 0(<2)◂0(<2)◂0(<2)◂8'(= r ) ⊢ 2'(= a3◂ [ a11◂ [ a9◂ [ ]]] )
	mov rax,QWORD [rsp-8+8*1]
	mov rdi,rax
	mov rax,r15
	mov r15,QWORD [r15] 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov rdi,rax
	mov rax,r15
	mov r15,QWORD [r15] 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov rdi,rax
	mov rax,r15
	mov r15,QWORD [r15] 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,8
	jmp LB_767
LB_767:
	cmp BYTE [r8+6],0
	jnz LB_756
	pop r14
	pop r9
	add rsp,8
	pop r13
	ret
LB_756:
	mov r9,QWORD [rsp+8]
	mov r14,QWORD [rsp+16]
	mov r13,QWORD [rsp+24]
	lea rax,[r14+2]
	cmp rax,r9
	jg LB_772
	jmp LB_773
LB_772:
	mov r8,unt_1
	jmp LB_770
LB_773:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],48
	jnz LB_774
	cmp BYTE [rdi+1],120
	jnz LB_774
	jmp LB_775
LB_774:
	mov r8,unt_1
	jmp LB_770
LB_775:
	add r14,2
	jmp LB_771
LB_770:
	add rsp,0
	jmp LB_769
LB_771:
	cmp r14,r9
	jge LB_778
 lea rdi,[r13+8+r14] 
	C_PUSH_REGS
	call scf_x
	C_POP_REGS
	cmp rax,0 
	jz LB_778
	add r14,rsi
	push rdi
	jmp LB_779
LB_778:
	mov r8,unt_1
	jmp LB_776
LB_779:
	jmp LB_777
LB_776:
	add rsp,0
	jmp LB_769
LB_777:
	lea rax,[r14+1]
	cmp rax,r9
	jg LB_782
	jmp LB_783
LB_782:
	mov r8,unt_1
	jmp LB_780
LB_783:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],114
	jnz LB_784
	jmp LB_785
LB_784:
	mov r8,unt_1
	jmp LB_780
LB_785:
	add r14,1
	jmp LB_781
LB_780:
	add rsp,8
	jmp LB_769
LB_781:
	mov QWORD [rsp+8*1],r14
	mov r13,QWORD [rsp+16+8*1]
	mov r14,QWORD [rsp+8*1]
	jmp LB_787
LB_787
;; rsp=1 , %1107~1'(= r ) %1106~0'(= r ) %1105~8'(= r ) 
; #84 8'(= r ) ⊢ 0(<2)◂8'(= r )
;; rsp=1 , %1108~0(<2)◂8'(= r ) %1107~1'(= r ) %1106~0'(= r ) 
; #86 0(<2)◂8'(= r ) ⊢ 0(<2)◂0(<2)◂8'(= r )
;; rsp=1 , %1109~0(<2)◂0(<2)◂8'(= r ) %1107~1'(= r ) %1106~0'(= r ) 
; #22 0(<2)◂0(<2)◂8'(= r ) ⊢ 0(<2)◂0(<2)◂0(<2)◂8'(= r )
;; rsp=1 , %1110~0(<2)◂0(<2)◂0(<2)◂8'(= r ) %1107~1'(= r ) %1106~0'(= r ) 
; ∎ 0(<2)◂0(<2)◂0(<2)◂8'(= r )
; .dlt.ptn 1'(= r )
; .dlt.ptn 0'(= r )
; .mov_ptn2 0(<2)◂0(<2)◂0(<2)◂8'(= r ) ⊢ 2'(= a3◂ [ a11◂ [ a9◂ [ ]]] )
; .mov_ptn 0(<2)◂0(<2)◂0(<2)◂8'(= r ) ⊢ 2'(= a3◂ [ a11◂ [ a9◂ [ ]]] )
	mov rax,QWORD [rsp-8+8*1]
	mov rdi,rax
	mov rax,r15
	mov r15,QWORD [r15] 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov rdi,rax
	mov rax,r15
	mov r15,QWORD [r15] 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov rdi,rax
	mov rax,r15
	mov r15,QWORD [r15] 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,8
	jmp LB_786
LB_786:
	cmp BYTE [r8+6],0
	jnz LB_769
	pop r14
	pop r9
	add rsp,8
	pop r13
	ret
LB_769:
	mov r9,QWORD [rsp+8]
	mov r14,QWORD [rsp+16]
	mov r13,QWORD [rsp+24]
	call GRM_67
	cmp BYTE [r8+6],0
	jnz LB_791
	jmp LB_792
LB_791:
	jmp LB_789
LB_792:
	sub rsp,8
; .mov_ptn2 2'(= {| l |} ) ⊢ 8'(= {| l |} )
; .mov_ptn 2'(= {| l |} ) ⊢ 8'(= {| l |} )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_790
LB_789:
	add rsp,0
	jmp LB_788
LB_790:
	mov QWORD [rsp+8*1],r14
	mov r13,QWORD [rsp+16+8*1]
	mov r14,QWORD [rsp+8*1]
	jmp LB_794
LB_794
;; rsp=1 , %1113~1'(= r ) %1112~0'(= r ) %1111~8'(= {| l |} ) 
; #83 8'(= {| l |} ) ⊢ 1(<2)◂8'(= {| l |} )
;; rsp=1 , %1114~1(<2)◂8'(= {| l |} ) %1113~1'(= r ) %1112~0'(= r ) 
; #86 1(<2)◂8'(= {| l |} ) ⊢ 0(<2)◂1(<2)◂8'(= {| l |} )
;; rsp=1 , %1115~0(<2)◂1(<2)◂8'(= {| l |} ) %1113~1'(= r ) %1112~0'(= r ) 
; #22 0(<2)◂1(<2)◂8'(= {| l |} ) ⊢ 0(<2)◂0(<2)◂1(<2)◂8'(= {| l |} )
;; rsp=1 , %1116~0(<2)◂0(<2)◂1(<2)◂8'(= {| l |} ) %1113~1'(= r ) %1112~0'(= r ) 
; ∎ 0(<2)◂0(<2)◂1(<2)◂8'(= {| l |} )
; .dlt.ptn 1'(= r )
; .dlt.ptn 0'(= r )
; .mov_ptn2 0(<2)◂0(<2)◂1(<2)◂8'(= {| l |} ) ⊢ 2'(= a3◂ [ a11◂ [ a9◂ [ ]]] )
; .mov_ptn 0(<2)◂0(<2)◂1(<2)◂8'(= {| l |} ) ⊢ 2'(= a3◂ [ a11◂ [ a9◂ [ ]]] )
	mov rax,QWORD [rsp-8+8*1]
	mov BYTE [rax+6],1
	mov rdi,rax
	mov rax,r15
	mov r15,QWORD [r15] 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov rdi,rax
	mov rax,r15
	mov r15,QWORD [r15] 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,8
	jmp LB_793
LB_793:
	cmp BYTE [r8+6],0
	jnz LB_788
	pop r14
	pop r9
	add rsp,8
	pop r13
	ret
LB_788:
	mov r9,QWORD [rsp+8]
	mov r14,QWORD [rsp+16]
	mov r13,QWORD [rsp+24]
	call GRM_189
	cmp BYTE [r8+6],0
	jnz LB_798
	jmp LB_799
LB_798:
	jmp LB_796
LB_799:
	sub rsp,8
	mov r8,[r8+8]
; .mov_ptn2 2'(= a9◂ [ ] ) ⊢ 8'(= a9◂ [ ] )
; .mov_ptn 2'(= a9◂ [ ] ) ⊢ 8'(= a9◂ [ ] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_797
LB_796:
	add rsp,0
	jmp LB_795
LB_797:
	mov QWORD [rsp+8*1],r14
	mov r13,QWORD [rsp+16+8*1]
	mov r14,QWORD [rsp+8*1]
	jmp LB_801
LB_801
;; rsp=1 , %1119~1'(= r ) %1118~0'(= r ) %1117~8'(= a9◂ [ ] ) 
; #85 8'(= a9◂ [ ] ) ⊢ 1(<2)◂8'(= a9◂ [ ] )
;; rsp=1 , %1120~1(<2)◂8'(= a9◂ [ ] ) %1119~1'(= r ) %1118~0'(= r ) 
; #22 1(<2)◂8'(= a9◂ [ ] ) ⊢ 0(<2)◂1(<2)◂8'(= a9◂ [ ] )
;; rsp=1 , %1121~0(<2)◂1(<2)◂8'(= a9◂ [ ] ) %1119~1'(= r ) %1118~0'(= r ) 
; ∎ 0(<2)◂1(<2)◂8'(= a9◂ [ ] )
; .dlt.ptn 1'(= r )
; .dlt.ptn 0'(= r )
; .mov_ptn2 0(<2)◂1(<2)◂8'(= a9◂ [ ] ) ⊢ 2'(= a3◂ [ a11◂ [ a9◂ [ ]]] )
; .mov_ptn 0(<2)◂1(<2)◂8'(= a9◂ [ ] ) ⊢ 2'(= a3◂ [ a11◂ [ a9◂ [ ]]] )
	mov rax,QWORD [rsp-8+8*1]
	mov rdi,rax
	mov rax,r15
	mov r15,QWORD [r15] 
	mov QWORD [rax],0
	mov BYTE [rax+6],1
	mov QWORD [rax+8],rdi
	mov rdi,rax
	mov rax,r15
	mov r15,QWORD [r15] 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,8
	jmp LB_800
LB_800:
	cmp BYTE [r8+6],0
	jnz LB_795
	pop r14
	pop r9
	add rsp,8
	pop r13
	ret
LB_795:
	pop rdi
	pop r9 
	pop r14
	pop r13
	ret
ETR_191:
	mov r9,0x0000_ffff_ffff_ffff
	and r9,[r13]
	call GRM_191
	ret
GRM_191:
	sub rsp,32
	mov QWORD [rsp+24],r13
	mov QWORD [rsp+16],r14 
	mov QWORD [rsp+8],r9
	jmp LB_804
LB_803:
	add r14,1 
LB_804:
	cmp r14,r9
	jge LB_805
	JZ_LINE_SPC BYTE [r13+8+r14], LB_803
LB_805
	lea rax,[r14+1]
	cmp rax,r9
	jg LB_808
	jmp LB_809
LB_808:
	mov r8,unt_1
	jmp LB_806
LB_809:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],10
	jnz LB_810
	jmp LB_811
LB_810:
	mov r8,unt_1
	jmp LB_806
LB_811:
	add r14,1
	jmp LB_807
LB_806:
	add rsp,0
	jmp LB_802
LB_807:
	jmp LB_813
LB_812:
	add r14,1 
LB_813:
	cmp r14,r9
	jge LB_814
	JZ_LINE_SPC BYTE [r13+8+r14], LB_812
LB_814
	call GRM_191
	cmp BYTE [r8+6],0
	jnz LB_817
	jmp LB_818
LB_817:
	jmp LB_815
LB_818:
	sub rsp,8
	mov r8,[r8+8]
; .mov_ptn2 2'(= r ) ⊢ 8'(= r )
; .mov_ptn 2'(= r ) ⊢ 8'(= r )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_816
LB_815:
	add rsp,0
	jmp LB_802
LB_816:
	mov QWORD [rsp+8*1],r14
	mov r13,QWORD [rsp+16+8*1]
	mov r14,QWORD [rsp+8*1]
	jmp LB_820
LB_820
;; rsp=1 , %1124~1'(= r ) %1123~0'(= r ) %1122~8'(= r ) 
; _#9 8'(= r ) ⊢ 8'(= r )
	add QWORD [rsp-8+8*1],1
;; rsp=1 , %1125~8'(= r ) %1124~1'(= r ) %1123~0'(= r ) 
; #22 8'(= r ) ⊢ 0(<2)◂8'(= r )
;; rsp=1 , %1126~0(<2)◂8'(= r ) %1124~1'(= r ) %1123~0'(= r ) 
; ∎ 0(<2)◂8'(= r )
; .dlt.ptn 1'(= r )
; .dlt.ptn 0'(= r )
; .mov_ptn2 0(<2)◂8'(= r ) ⊢ 2'(= a3◂ [ r] )
; .mov_ptn 0(<2)◂8'(= r ) ⊢ 2'(= a3◂ [ r] )
	mov rax,QWORD [rsp-8+8*1]
	mov rdi,rax
	mov rax,r15
	mov r15,QWORD [r15] 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,8
	jmp LB_819
LB_819:
	cmp BYTE [r8+6],0
	jnz LB_802
	pop r14
	pop r9
	add rsp,8
	pop r13
	ret
LB_802:
	mov r9,QWORD [rsp+8]
	mov r14,QWORD [rsp+16]
	mov r13,QWORD [rsp+24]
	jmp LB_823
LB_822:
	add r14,1 
LB_823:
	cmp r14,r9
	jge LB_824
	JZ_LINE_SPC BYTE [r13+8+r14], LB_822
LB_824
	lea rax,[r14+1]
	cmp rax,r9
	jg LB_827
	jmp LB_828
LB_827:
	mov r8,unt_1
	jmp LB_825
LB_828:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],10
	jnz LB_829
	jmp LB_830
LB_829:
	mov r8,unt_1
	jmp LB_825
LB_830:
	add r14,1
	jmp LB_826
LB_825:
	add rsp,0
	jmp LB_821
LB_826:
	mov QWORD [rsp+8*0],r14
	mov r13,QWORD [rsp+16+8*0]
	mov r14,QWORD [rsp+8*0]
	jmp LB_832
LB_832
;; rsp=0 , %1128~1'(= r ) %1127~0'(= r ) 
; #22 %[ 1r ] ⊢ 0(<2)◂%[ 1r ]
;; rsp=0 , %1129~0(<2)◂%[ 1r ] %1128~1'(= r ) %1127~0'(= r ) 
; ∎ 0(<2)◂%[ 1r ]
; .dlt.ptn 1'(= r )
; .dlt.ptn 0'(= r )
; .mov_ptn2 0(<2)◂%[ 1r ] ⊢ 2'(= a3◂ [ r] )
; .mov_ptn 0(<2)◂%[ 1r ] ⊢ 2'(= a3◂ [ r] )
	mov rax,1
	mov rdi,rax
	mov rax,r15
	mov r15,QWORD [r15] 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	jmp LB_831
LB_831:
	cmp BYTE [r8+6],0
	jnz LB_821
	pop r14
	pop r9
	add rsp,8
	pop r13
	ret
LB_821:
	pop rdi
	pop r9 
	pop r14
	pop r13
	ret
ETR_195: ; mk_prs_err { 0'(= r ) 1'(= r ) 2'(= {| l |} ) } ⊢ 0'(= a35◂ [ q0] ) : ({ _r64 _r64 _s8 }→_t35◂2322'(1))
;; rsp=0 , %1145~2'(= {| l |} ) %1144~1'(= r ) %1143~0'(= r ) 
; #20 { } ⊢ 1(<2)◂{ }
;; rsp=0 , %1146~1(<2)◂{ } %1145~2'(= {| l |} ) %1144~1'(= r ) %1143~0'(= r ) 
; #21 { { 0'(= r ) 1'(= r ) 2'(= {| l |} ) } 1(<2)◂{ } } ⊢ 0(<2)◂{ { 0'(= r ) 1'(= r ) 2'(= {| l |} ) } 1(<2)◂{ } }
;; rsp=0 , %1147~0(<2)◂{ { 0'(= r ) 1'(= r ) 2'(= {| l |} ) } 1(<2)◂{ } } 
; #192 0(<2)◂{ { 0'(= r ) 1'(= r ) 2'(= {| l |} ) } 1(<2)◂{ } } ⊢ 1(<2)◂0(<2)◂{ { 0'(= r ) 1'(= r ) 2'(= {| l |} ) } 1(<2)◂{ } }
;; rsp=0 , %1148~1(<2)◂0(<2)◂{ { 0'(= r ) 1'(= r ) 2'(= {| l |} ) } 1(<2)◂{ } } 
; ∎ 1(<2)◂0(<2)◂{ { 0'(= r ) 1'(= r ) 2'(= {| l |} ) } 1(<2)◂{ } }
; .mov_ptn2 1(<2)◂0(<2)◂{ { 0'(= r ) 1'(= r ) 2'(= {| l |} ) } 1(<2)◂{ } } ⊢ 0'(= a35◂ [ q0] )
	mov r9,r13
; .mov_ptn 1(<2)◂0(<2)◂{ { 3'(= r ) 1'(= r ) 2'(= {| l |} ) } 1(<2)◂{ } } ⊢ 0'(= a35◂ [ q0] )
	mov rax,[SS_RCD_2_TOP]
	mov rsi,[rax] 
	mov QWORD [SS_RCD_2_TOP],rsi
	mov QWORD [rax],0
	mov r10,rax
	mov rax,[SS_RCD_3_TOP]
	mov rsi,[rax] 
	mov QWORD [SS_RCD_3_TOP],rsi
	mov QWORD [rax],0
	mov r11,rax
	mov rax,r9
	mov QWORD [r11+8+8*0],rax
	mov rax,r14
	mov QWORD [r11+8+8*1],rax
	mov rax,r8
	mov QWORD [r11+8+8*2],rax
	mov rax,r11
	mov QWORD [r10+8+8*0],rax
	mov rax,unt 
	mov rax,unt_1
	mov QWORD [r10+8+8*1],rax
	mov rax,r10
	mov BYTE [rax+6],0
	mov rdi,rax
	mov rax,r15
	mov r15,QWORD [r15] 
	mov QWORD [rax],0
	mov BYTE [rax+6],1
	mov QWORD [rax+8],rdi
	mov r13,rax
	ret
ETR_196: ; pnt_prs_err 0'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 0'(= {| l |} ) : (_lst◂{ _r64 _r64 _s8 }→_s8)
;; rsp=0 , %1149~0'(= a2◂ [ *{ rr{| l |}}] ) 
;; ? 0'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 0(<2)◂{ { 2'(= r ) 3'(= r ) 4'(= {| l |} ) } 5'(= a2◂ [ *{ rr{| l |}}] ) }
	mov rdi,r13
	cmp BYTE [rdi+6],0
	jnz LB_833
	mov rdi,r13
	mov rdi,QWORD [rdi+8+8*0]
	mov r14,rdi
	mov rdi,r14
	mov rdi,QWORD [rdi+8+8*0]
	mov r8,rdi
	mov rdi,r14
	mov rdi,QWORD [rdi+8+8*1]
	mov r9,rdi
	mov rdi,r14
	mov rdi,QWORD [rdi+8+8*2]
	mov r10,rdi
	mov rdi,r13
	mov rdi,QWORD [rdi+8+8*1]
	mov r11,rdi
;; rsp=0 , %1153~5'(= a2◂ [ *{ rr{| l |}}] ) %1152~4'(= {| l |} ) %1151~3'(= r ) %1150~2'(= r ) 
; rsp_d=0, #196 5'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 0'(= {| l |} )
	sub rsp,24
	mov QWORD [rsp+8*0],r8
	mov QWORD [rsp+8*1],r9
	mov QWORD [rsp+8*2],r10
; .mov_ptn2 5'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 0'(= a2◂ [ *{ rr{| l |}}] )
; .mov_ptn 5'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 0'(= a2◂ [ *{ rr{| l |}}] )
	mov rax,r11
	mov r13,rax
	call ETR_196

	mov r10,QWORD [rsp-8+8*3]
	mov r9,QWORD [rsp-8+8*2]
	mov r8,QWORD [rsp-8+8*1]
	add rsp,24
;; rsp=0 , %1154~0'(= {| l |} ) %1152~4'(= {| l |} ) %1151~3'(= r ) %1150~2'(= r ) 
; » _^ .. ⊢ ..
; .. //
	mov rdi,0
	sub rsp,128
	mov rdi,rsp
	mov rsi,fmt_d
	mov rdx,r8
 xor rax,rax
	mov QWORD [tmp],rdi
	C_CALL_SF sprintf
	push rax 
	add rax,QWORD [tmp]
	mov rdi,rax
	sub rsp,128
	mov rdi,rsp
	mov rsi,fmt_d
	mov rdx,r9
 xor rax,rax
	mov QWORD [tmp],rdi
	C_CALL_SF sprintf
	push rax 
	add rax,QWORD [tmp]
	mov rdi,rax
	mov rsi,r10
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[rsi] 
	add rdi,rax 
	push rax
	push rsi
	mov rsi,r13
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[rsi] 
	add rdi,rax 
	push rax
	push rsi
	add rdi,11
	push rdi 
	call mlc_s8
	pop rdi
	mov r14,rax
	lea rdi,[rax+7+rdi]
	std 
	mov QWORD [tmp],rcx 
	pop rsi 
	pop rcx
	lea rsi,[rsi+7+rcx]
	rep movsb
	lea rsi,[LB_834+1-1]
	mov rcx,1
	rep movsb
	pop rsi 
	pop rcx
	lea rsi,[rsi+7+rcx]
	rep movsb
	lea rsi,[LB_835+1-1]
	mov rcx,1
	rep movsb
	pop rcx
	lea rsi,[rsp+rcx-1]
	rep movsb
	add rsp,128
	lea rsi,[LB_836+1-1]
	mov rcx,1
	rep movsb
	pop rcx
	lea rsi,[rsp+rcx-1]
	rep movsb
	add rsp,128
	lea rsi,[LB_837+8-1]
	mov rcx,8
	rep movsb
	mov rcx,QWORD [tmp] 
;; rsp=0 , %1159~1'(= {| l |} ) %1158~0'(= {| l |} ) %1157~4'(= {| l |} ) %1156~3'(= r ) %1155~2'(= r ) 
; ∎ 1'(= {| l |} )
; .dlt.ptn 0'(= {| l |} )
	mov rdi,r13
	call free_s8 
; .dlt.ptn 4'(= {| l |} )
	mov rdi,r10
	call free_s8 
; .dlt.ptn 3'(= r )
; .dlt.ptn 2'(= r )
; .mov_ptn2 1'(= {| l |} ) ⊢ 0'(= {| l |} )
; .mov_ptn 1'(= {| l |} ) ⊢ 0'(= {| l |} )
	mov rax,r14
	mov r13,rax
	ret
LB_833:
;; ?. 0'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 1(<2)◂{ }
;; rsp=0 , 
	jmp LB_838
LB_838:
; $ %[ "" ] ⊢ %[ "" ]
;; rsp=0 , %1160~%[ "" ] 
; ∎ %[ "" ]
; .mov_ptn2 %[ "" ] ⊢ 0'(= {| l |} )
; .mov_ptn %[ "" ] ⊢ 0'(= {| l |} )
	mov rsi,1  
	mov rdi,16
	xor rax,rax 
	C_CALL_SF calloc
	mov QWORD [rax],0
	mov r13,rax
	ret
ETR_197:
	mov r9,0x0000_ffff_ffff_ffff
	and r9,[r13]
	call GRM_197
	ret
GRM_197:
	sub rsp,32
	mov QWORD [rsp+24],r13
	mov QWORD [rsp+16],r14 
	mov QWORD [rsp+8],r9
	jmp LB_841
LB_840:
	add r14,1 
LB_841:
	cmp r14,r9
	jge LB_842
	JZ_LINE_SPC BYTE [r13+8+r14], LB_840
LB_842
	lea rax,[r14+1]
	cmp rax,r9
	jg LB_845
	jmp LB_846
LB_845:
	mov r8,unt_1
	jmp LB_843
LB_846:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],123
	jnz LB_847
	jmp LB_848
LB_847:
	mov r8,unt_1
	jmp LB_843
LB_848:
	add r14,1
	jmp LB_844
LB_843:
	add rsp,0
	jmp LB_839
LB_844:
	jmp LB_850
LB_849:
	add r14,1 
LB_850:
	cmp r14,r9
	jge LB_851
	JZ_LINE_SPC BYTE [r13+8+r14], LB_849
LB_851
	call GRM_198
	cmp BYTE [r8+6],0
	jnz LB_854
	jmp LB_855
LB_854:
	jmp LB_852
LB_855:
	sub rsp,8
	mov r8,[r8+8]
; .mov_ptn2 2'(= a2◂ [ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]] ) ⊢ 8'(= a2◂ [ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]] )
; .mov_ptn 2'(= a2◂ [ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]] ) ⊢ 8'(= a2◂ [ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_853
LB_852:
	add rsp,0
	jmp LB_839
LB_853:
	jmp LB_857
LB_856:
	add r14,1 
LB_857:
	cmp r14,r9
	jge LB_858
	JZ_LINE_SPC BYTE [r13+8+r14], LB_856
LB_858
	lea rax,[r14+1]
	cmp rax,r9
	jg LB_861
	jmp LB_862
LB_861:
	mov r8,unt_1
	jmp LB_859
LB_862:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],125
	jnz LB_863
	jmp LB_864
LB_863:
	mov r8,unt_1
	jmp LB_859
LB_864:
	add r14,1
	jmp LB_860
LB_859:
	add rsp,8
	jmp LB_839
LB_860:
	mov QWORD [rsp+8*1],r14
	mov r13,QWORD [rsp+16+8*1]
	mov r14,QWORD [rsp+8*1]
	jmp LB_866
LB_866
;; rsp=1 , %1163~1'(= r ) %1162~0'(= r ) %1161~8'(= a2◂ [ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]] ) 
; #79 8'(= a2◂ [ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]] ) ⊢ 0(<2)◂8'(= a2◂ [ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]] )
;; rsp=1 , %1164~0(<2)◂8'(= a2◂ [ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]] ) %1163~1'(= r ) %1162~0'(= r ) 
; #22 0(<2)◂8'(= a2◂ [ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]] ) ⊢ 0(<2)◂0(<2)◂8'(= a2◂ [ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]] )
;; rsp=1 , %1165~0(<2)◂0(<2)◂8'(= a2◂ [ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]] ) %1163~1'(= r ) %1162~0'(= r ) 
; ∎ 0(<2)◂0(<2)◂8'(= a2◂ [ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]] )
; .dlt.ptn 1'(= r )
; .dlt.ptn 0'(= r )
; .mov_ptn2 0(<2)◂0(<2)◂8'(= a2◂ [ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]] ) ⊢ 2'(= a3◂ [ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]] )
; .mov_ptn 0(<2)◂0(<2)◂8'(= a2◂ [ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]] ) ⊢ 2'(= a3◂ [ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]] )
	mov rax,QWORD [rsp-8+8*1]
	mov rdi,rax
	mov rax,r15
	mov r15,QWORD [r15] 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov rdi,rax
	mov rax,r15
	mov r15,QWORD [r15] 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,8
	jmp LB_865
LB_865:
	cmp BYTE [r8+6],0
	jnz LB_839
	pop r14
	pop r9
	add rsp,8
	pop r13
	ret
LB_839:
	mov r9,QWORD [rsp+8]
	mov r14,QWORD [rsp+16]
	mov r13,QWORD [rsp+24]
	jmp LB_869
LB_868:
	add r14,1 
LB_869:
	cmp r14,r9
	jge LB_870
	JZ_LINE_SPC BYTE [r13+8+r14], LB_868
LB_870
	call GRM_200
	cmp BYTE [r8+6],0
	jnz LB_873
	jmp LB_874
LB_873:
	jmp LB_871
LB_874:
	sub rsp,8
	mov r8,[r8+8]
; .mov_ptn2 2'(= a14◂ [ a9◂ [ ]{| l |}] ) ⊢ 8'(= a14◂ [ a9◂ [ ]{| l |}] )
; .mov_ptn 2'(= a14◂ [ a9◂ [ ]{| l |}] ) ⊢ 8'(= a14◂ [ a9◂ [ ]{| l |}] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_872
LB_871:
	add rsp,0
	jmp LB_867
LB_872:
	mov QWORD [rsp+8*1],r14
	mov r13,QWORD [rsp+16+8*1]
	mov r14,QWORD [rsp+8*1]
	jmp LB_876
LB_876
;; rsp=1 , %1168~1'(= r ) %1167~0'(= r ) %1166~8'(= a14◂ [ a9◂ [ ]{| l |}] ) 
; #78 8'(= a14◂ [ a9◂ [ ]{| l |}] ) ⊢ 1(<2)◂8'(= a14◂ [ a9◂ [ ]{| l |}] )
;; rsp=1 , %1169~1(<2)◂8'(= a14◂ [ a9◂ [ ]{| l |}] ) %1168~1'(= r ) %1167~0'(= r ) 
; #22 1(<2)◂8'(= a14◂ [ a9◂ [ ]{| l |}] ) ⊢ 0(<2)◂1(<2)◂8'(= a14◂ [ a9◂ [ ]{| l |}] )
;; rsp=1 , %1170~0(<2)◂1(<2)◂8'(= a14◂ [ a9◂ [ ]{| l |}] ) %1168~1'(= r ) %1167~0'(= r ) 
; ∎ 0(<2)◂1(<2)◂8'(= a14◂ [ a9◂ [ ]{| l |}] )
; .dlt.ptn 1'(= r )
; .dlt.ptn 0'(= r )
; .mov_ptn2 0(<2)◂1(<2)◂8'(= a14◂ [ a9◂ [ ]{| l |}] ) ⊢ 2'(= a3◂ [ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]] )
; .mov_ptn 0(<2)◂1(<2)◂8'(= a14◂ [ a9◂ [ ]{| l |}] ) ⊢ 2'(= a3◂ [ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]] )
	mov rax,QWORD [rsp-8+8*1]
	mov rdi,rax
	mov rax,r15
	mov r15,QWORD [r15] 
	mov QWORD [rax],0
	mov BYTE [rax+6],1
	mov QWORD [rax+8],rdi
	mov rdi,rax
	mov rax,r15
	mov r15,QWORD [r15] 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,8
	jmp LB_875
LB_875:
	cmp BYTE [r8+6],0
	jnz LB_867
	pop r14
	pop r9
	add rsp,8
	pop r13
	ret
LB_867:
	pop rdi
	pop r9 
	pop r14
	pop r13
	ret
ETR_198:
	mov r9,0x0000_ffff_ffff_ffff
	and r9,[r13]
	call GRM_198
	ret
GRM_198:
	sub rsp,32
	mov QWORD [rsp+24],r13
	mov QWORD [rsp+16],r14 
	mov QWORD [rsp+8],r9
	jmp LB_879
LB_878:
	add r14,1 
LB_879:
	cmp r14,r9
	jge LB_880
	JZ_LINE_SPC BYTE [r13+8+r14], LB_878
LB_880
	call GRM_197
	cmp BYTE [r8+6],0
	jnz LB_883
	jmp LB_884
LB_883:
	jmp LB_881
LB_884:
	sub rsp,8
	mov r8,[r8+8]
; .mov_ptn2 2'(= a8◂ [ a14◂ [ a9◂ [ ]{| l |}]] ) ⊢ 8'(= a8◂ [ a14◂ [ a9◂ [ ]{| l |}]] )
; .mov_ptn 2'(= a8◂ [ a14◂ [ a9◂ [ ]{| l |}]] ) ⊢ 8'(= a8◂ [ a14◂ [ a9◂ [ ]{| l |}]] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_882
LB_881:
	add rsp,0
	jmp LB_877
LB_882:
	jmp LB_886
LB_885:
	add r14,1 
LB_886:
	cmp r14,r9
	jge LB_887
	JZ_LINE_SPC BYTE [r13+8+r14], LB_885
LB_887
	call GRM_198
	cmp BYTE [r8+6],0
	jnz LB_890
	jmp LB_891
LB_890:
	jmp LB_888
LB_891:
	sub rsp,8
	mov r8,[r8+8]
; .mov_ptn2 2'(= a2◂ [ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]] ) ⊢ 9'(= a2◂ [ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]] )
; .mov_ptn 2'(= a2◂ [ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]] ) ⊢ 9'(= a2◂ [ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_889
LB_888:
	add rsp,8
	jmp LB_877
LB_889:
	mov QWORD [rsp+8*2],r14
	mov r13,QWORD [rsp+16+8*2]
	mov r14,QWORD [rsp+8*2]
	jmp LB_893
LB_893
;; rsp=2 , %1174~1'(= r ) %1173~0'(= r ) %1172~9'(= a2◂ [ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]] ) %1171~8'(= a8◂ [ a14◂ [ a9◂ [ ]{| l |}]] ) 
; #21 { 8'(= a8◂ [ a14◂ [ a9◂ [ ]{| l |}]] ) 9'(= a2◂ [ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]] ) } ⊢ 0(<2)◂{ 8'(= a8◂ [ a14◂ [ a9◂ [ ]{| l |}]] ) 9'(= a2◂ [ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]] ) }
;; rsp=2 , %1175~0(<2)◂{ 8'(= a8◂ [ a14◂ [ a9◂ [ ]{| l |}]] ) 9'(= a2◂ [ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]] ) } %1174~1'(= r ) %1173~0'(= r ) 
; #22 0(<2)◂{ 8'(= a8◂ [ a14◂ [ a9◂ [ ]{| l |}]] ) 9'(= a2◂ [ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]] ) } ⊢ 0(<2)◂0(<2)◂{ 8'(= a8◂ [ a14◂ [ a9◂ [ ]{| l |}]] ) 9'(= a2◂ [ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]] ) }
;; rsp=2 , %1176~0(<2)◂0(<2)◂{ 8'(= a8◂ [ a14◂ [ a9◂ [ ]{| l |}]] ) 9'(= a2◂ [ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]] ) } %1174~1'(= r ) %1173~0'(= r ) 
; ∎ 0(<2)◂0(<2)◂{ 8'(= a8◂ [ a14◂ [ a9◂ [ ]{| l |}]] ) 9'(= a2◂ [ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]] ) }
; .dlt.ptn 1'(= r )
; .dlt.ptn 0'(= r )
; .mov_ptn2 0(<2)◂0(<2)◂{ 8'(= a8◂ [ a14◂ [ a9◂ [ ]{| l |}]] ) 9'(= a2◂ [ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]] ) } ⊢ 2'(= a3◂ [ a2◂ [ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]]] )
; .mov_ptn 0(<2)◂0(<2)◂{ 8'(= a8◂ [ a14◂ [ a9◂ [ ]{| l |}]] ) 9'(= a2◂ [ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]] ) } ⊢ 2'(= a3◂ [ a2◂ [ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]]] )
	mov rax,[SS_RCD_2_TOP]
	mov rsi,[rax] 
	mov QWORD [SS_RCD_2_TOP],rsi
	mov QWORD [rax],0
	mov r13,rax
	mov rax,QWORD [rsp-8+8*2]
	mov QWORD [r13+8+8*0],rax
	mov rax,QWORD [rsp-8+8*1]
	mov QWORD [r13+8+8*1],rax
	mov rax,r13
	mov BYTE [rax+6],0
	mov rdi,rax
	mov rax,r15
	mov r15,QWORD [r15] 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,16
	jmp LB_892
LB_892:
	cmp BYTE [r8+6],0
	jnz LB_877
	pop r14
	pop r9
	add rsp,8
	pop r13
	ret
LB_877:
	mov r9,QWORD [rsp+8]
	mov r14,QWORD [rsp+16]
	mov r13,QWORD [rsp+24]
	mov QWORD [rsp+8*0],r14
	mov r13,QWORD [rsp+16+8*0]
	mov r14,QWORD [rsp+8*0]
	jmp LB_896
LB_896
;; rsp=0 , %1178~1'(= r ) %1177~0'(= r ) 
; #20 { } ⊢ 1(<2)◂{ }
;; rsp=0 , %1179~1(<2)◂{ } %1178~1'(= r ) %1177~0'(= r ) 
; #22 1(<2)◂{ } ⊢ 0(<2)◂1(<2)◂{ }
;; rsp=0 , %1180~0(<2)◂1(<2)◂{ } %1178~1'(= r ) %1177~0'(= r ) 
; ∎ 0(<2)◂1(<2)◂{ }
; .dlt.ptn 1'(= r )
; .dlt.ptn 0'(= r )
; .mov_ptn2 0(<2)◂1(<2)◂{ } ⊢ 2'(= a3◂ [ a2◂ [ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]]] )
; .mov_ptn 0(<2)◂1(<2)◂{ } ⊢ 2'(= a3◂ [ a2◂ [ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]]] )
	mov rax,unt 
	mov rax,unt_1
	mov rdi,rax
	mov rax,r15
	mov r15,QWORD [r15] 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	jmp LB_895
LB_895:
	cmp BYTE [r8+6],0
	jnz LB_894
	pop r14
	pop r9
	add rsp,8
	pop r13
	ret
LB_894:
	pop rdi
	pop r9 
	pop r14
	pop r13
	ret
ETR_199:
	mov r9,0x0000_ffff_ffff_ffff
	and r9,[r13]
	call GRM_199
	ret
GRM_199:
	sub rsp,32
	mov QWORD [rsp+24],r13
	mov QWORD [rsp+16],r14 
	mov QWORD [rsp+8],r9
	jmp LB_899
LB_898:
	add r14,1 
LB_899:
	cmp r14,r9
	jge LB_900
	JZ_LINE_SPC BYTE [r13+8+r14], LB_898
LB_900
	lea rax,[r14+1]
	cmp rax,r9
	jg LB_903
	jmp LB_904
LB_903:
	mov r8,unt_1
	jmp LB_901
LB_904:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],44
	jnz LB_905
	jmp LB_906
LB_905:
	mov r8,unt_1
	jmp LB_901
LB_906:
	add r14,1
	jmp LB_902
LB_901:
	add rsp,0
	jmp LB_897
LB_902:
	jmp LB_908
LB_907:
	add r14,1 
LB_908:
	cmp r14,r9
	jge LB_909
	JZ_LINE_SPC BYTE [r13+8+r14], LB_907
LB_909
	call GRM_200
	cmp BYTE [r8+6],0
	jnz LB_912
	jmp LB_913
LB_912:
	jmp LB_910
LB_913:
	sub rsp,8
	mov r8,[r8+8]
; .mov_ptn2 2'(= a14◂ [ a9◂ [ ]{| l |}] ) ⊢ 8'(= a14◂ [ a9◂ [ ]{| l |}] )
; .mov_ptn 2'(= a14◂ [ a9◂ [ ]{| l |}] ) ⊢ 8'(= a14◂ [ a9◂ [ ]{| l |}] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_911
LB_910:
	add rsp,0
	pop rdi
	pop r9 
	pop r14
	pop r13
	ret
LB_911:
	jmp LB_915
LB_914:
	add r14,1 
LB_915:
	cmp r14,r9
	jge LB_916
	JZ_LINE_SPC BYTE [r13+8+r14], LB_914
LB_916
	call GRM_199
	cmp BYTE [r8+6],0
	jnz LB_919
	jmp LB_920
LB_919:
	jmp LB_917
LB_920:
	sub rsp,8
	mov r8,[r8+8]
; .mov_ptn2 2'(= a2◂ [ a14◂ [ a9◂ [ ]{| l |}]] ) ⊢ 9'(= a2◂ [ a14◂ [ a9◂ [ ]{| l |}]] )
; .mov_ptn 2'(= a2◂ [ a14◂ [ a9◂ [ ]{| l |}]] ) ⊢ 9'(= a2◂ [ a14◂ [ a9◂ [ ]{| l |}]] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_918
LB_917:
	add rsp,8
	pop rdi
	pop r9 
	pop r14
	pop r13
	ret
LB_918:
	mov QWORD [rsp+8*2],r14
	mov r13,QWORD [rsp+16+8*2]
	mov r14,QWORD [rsp+8*2]
	jmp LB_922
LB_922
;; rsp=2 , %1184~1'(= r ) %1183~0'(= r ) %1182~9'(= a2◂ [ a14◂ [ a9◂ [ ]{| l |}]] ) %1181~8'(= a14◂ [ a9◂ [ ]{| l |}] ) 
; #21 { 8'(= a14◂ [ a9◂ [ ]{| l |}] ) 9'(= a2◂ [ a14◂ [ a9◂ [ ]{| l |}]] ) } ⊢ 0(<2)◂{ 8'(= a14◂ [ a9◂ [ ]{| l |}] ) 9'(= a2◂ [ a14◂ [ a9◂ [ ]{| l |}]] ) }
;; rsp=2 , %1185~0(<2)◂{ 8'(= a14◂ [ a9◂ [ ]{| l |}] ) 9'(= a2◂ [ a14◂ [ a9◂ [ ]{| l |}]] ) } %1184~1'(= r ) %1183~0'(= r ) 
; #22 0(<2)◂{ 8'(= a14◂ [ a9◂ [ ]{| l |}] ) 9'(= a2◂ [ a14◂ [ a9◂ [ ]{| l |}]] ) } ⊢ 0(<2)◂0(<2)◂{ 8'(= a14◂ [ a9◂ [ ]{| l |}] ) 9'(= a2◂ [ a14◂ [ a9◂ [ ]{| l |}]] ) }
;; rsp=2 , %1186~0(<2)◂0(<2)◂{ 8'(= a14◂ [ a9◂ [ ]{| l |}] ) 9'(= a2◂ [ a14◂ [ a9◂ [ ]{| l |}]] ) } %1184~1'(= r ) %1183~0'(= r ) 
; ∎ 0(<2)◂0(<2)◂{ 8'(= a14◂ [ a9◂ [ ]{| l |}] ) 9'(= a2◂ [ a14◂ [ a9◂ [ ]{| l |}]] ) }
; .dlt.ptn 1'(= r )
; .dlt.ptn 0'(= r )
; .mov_ptn2 0(<2)◂0(<2)◂{ 8'(= a14◂ [ a9◂ [ ]{| l |}] ) 9'(= a2◂ [ a14◂ [ a9◂ [ ]{| l |}]] ) } ⊢ 2'(= a3◂ [ a2◂ [ a14◂ [ a9◂ [ ]{| l |}]]] )
; .mov_ptn 0(<2)◂0(<2)◂{ 8'(= a14◂ [ a9◂ [ ]{| l |}] ) 9'(= a2◂ [ a14◂ [ a9◂ [ ]{| l |}]] ) } ⊢ 2'(= a3◂ [ a2◂ [ a14◂ [ a9◂ [ ]{| l |}]]] )
	mov rax,[SS_RCD_2_TOP]
	mov rsi,[rax] 
	mov QWORD [SS_RCD_2_TOP],rsi
	mov QWORD [rax],0
	mov r13,rax
	mov rax,QWORD [rsp-8+8*2]
	mov QWORD [r13+8+8*0],rax
	mov rax,QWORD [rsp-8+8*1]
	mov QWORD [r13+8+8*1],rax
	mov rax,r13
	mov BYTE [rax+6],0
	mov rdi,rax
	mov rax,r15
	mov r15,QWORD [r15] 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,16
	jmp LB_921
LB_921:
	cmp BYTE [r8+6],0
	jnz LB_897
	pop r14
	pop r9
	add rsp,8
	pop r13
	ret
LB_897:
	mov r9,QWORD [rsp+8]
	mov r14,QWORD [rsp+16]
	mov r13,QWORD [rsp+24]
	mov QWORD [rsp+8*0],r14
	mov r13,QWORD [rsp+16+8*0]
	mov r14,QWORD [rsp+8*0]
	jmp LB_925
LB_925
;; rsp=0 , %1188~1'(= r ) %1187~0'(= r ) 
; #20 { } ⊢ 1(<2)◂{ }
;; rsp=0 , %1189~1(<2)◂{ } %1188~1'(= r ) %1187~0'(= r ) 
; #22 1(<2)◂{ } ⊢ 0(<2)◂1(<2)◂{ }
;; rsp=0 , %1190~0(<2)◂1(<2)◂{ } %1188~1'(= r ) %1187~0'(= r ) 
; ∎ 0(<2)◂1(<2)◂{ }
; .dlt.ptn 1'(= r )
; .dlt.ptn 0'(= r )
; .mov_ptn2 0(<2)◂1(<2)◂{ } ⊢ 2'(= a3◂ [ a2◂ [ a14◂ [ a9◂ [ ]{| l |}]]] )
; .mov_ptn 0(<2)◂1(<2)◂{ } ⊢ 2'(= a3◂ [ a2◂ [ a14◂ [ a9◂ [ ]{| l |}]]] )
	mov rax,unt 
	mov rax,unt_1
	mov rdi,rax
	mov rax,r15
	mov r15,QWORD [r15] 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	jmp LB_924
LB_924:
	cmp BYTE [r8+6],0
	jnz LB_923
	pop r14
	pop r9
	add rsp,8
	pop r13
	ret
LB_923:
	pop rdi
	pop r9 
	pop r14
	pop r13
	ret
ETR_200:
	mov r9,0x0000_ffff_ffff_ffff
	and r9,[r13]
	call GRM_200
	ret
GRM_200:
	sub rsp,32
	mov QWORD [rsp+24],r13
	mov QWORD [rsp+16],r14 
	mov QWORD [rsp+8],r9
	jmp LB_928
LB_927:
	add r14,1 
LB_928:
	cmp r14,r9
	jge LB_929
	JZ_LINE_SPC BYTE [r13+8+r14], LB_927
LB_929
	call GRM_189
	cmp BYTE [r8+6],0
	jnz LB_932
	jmp LB_933
LB_932:
	jmp LB_930
LB_933:
	sub rsp,8
	mov r8,[r8+8]
; .mov_ptn2 2'(= a9◂ [ ] ) ⊢ 8'(= a9◂ [ ] )
; .mov_ptn 2'(= a9◂ [ ] ) ⊢ 8'(= a9◂ [ ] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_931
LB_930:
	add rsp,0
	jmp LB_926
LB_931:
	jmp LB_935
LB_934:
	add r14,1 
LB_935:
	cmp r14,r9
	jge LB_936
	JZ_LINE_SPC BYTE [r13+8+r14], LB_934
LB_936
	lea rax,[r14+3]
	cmp rax,r9
	jg LB_939
	jmp LB_940
LB_939:
	mov r8,unt_1
	jmp LB_937
LB_940:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],226
	jnz LB_941
	cmp BYTE [rdi+1],151
	jnz LB_941
	cmp BYTE [rdi+2],130
	jnz LB_941
	jmp LB_942
LB_941:
	mov r8,unt_1
	jmp LB_937
LB_942:
	add r14,3
	jmp LB_938
LB_937:
	add rsp,8
	jmp LB_926
LB_938:
	jmp LB_944
LB_943:
	add r14,1 
LB_944:
	cmp r14,r9
	jge LB_945
	JZ_LINE_SPC BYTE [r13+8+r14], LB_943
LB_945
	call GRM_197
	cmp BYTE [r8+6],0
	jnz LB_948
	jmp LB_949
LB_948:
	jmp LB_946
LB_949:
	sub rsp,8
	mov r8,[r8+8]
; .mov_ptn2 2'(= a8◂ [ a14◂ [ a9◂ [ ]{| l |}]] ) ⊢ 9'(= a8◂ [ a14◂ [ a9◂ [ ]{| l |}]] )
; .mov_ptn 2'(= a8◂ [ a14◂ [ a9◂ [ ]{| l |}]] ) ⊢ 9'(= a8◂ [ a14◂ [ a9◂ [ ]{| l |}]] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_947
LB_946:
	add rsp,8
	jmp LB_926
LB_947:
	mov QWORD [rsp+8*2],r14
	mov r13,QWORD [rsp+16+8*2]
	mov r14,QWORD [rsp+8*2]
	jmp LB_951
LB_951
;; rsp=2 , %1194~1'(= r ) %1193~0'(= r ) %1192~9'(= a8◂ [ a14◂ [ a9◂ [ ]{| l |}]] ) %1191~8'(= a9◂ [ ] ) 
; #96 { 8'(= a9◂ [ ] ) 9'(= a8◂ [ a14◂ [ a9◂ [ ]{| l |}]] ) } ⊢ 0(<4)◂{ 8'(= a9◂ [ ] ) 9'(= a8◂ [ a14◂ [ a9◂ [ ]{| l |}]] ) }
;; rsp=2 , %1195~0(<4)◂{ 8'(= a9◂ [ ] ) 9'(= a8◂ [ a14◂ [ a9◂ [ ]{| l |}]] ) } %1194~1'(= r ) %1193~0'(= r ) 
; #22 0(<4)◂{ 8'(= a9◂ [ ] ) 9'(= a8◂ [ a14◂ [ a9◂ [ ]{| l |}]] ) } ⊢ 0(<2)◂0(<4)◂{ 8'(= a9◂ [ ] ) 9'(= a8◂ [ a14◂ [ a9◂ [ ]{| l |}]] ) }
;; rsp=2 , %1196~0(<2)◂0(<4)◂{ 8'(= a9◂ [ ] ) 9'(= a8◂ [ a14◂ [ a9◂ [ ]{| l |}]] ) } %1194~1'(= r ) %1193~0'(= r ) 
; ∎ 0(<2)◂0(<4)◂{ 8'(= a9◂ [ ] ) 9'(= a8◂ [ a14◂ [ a9◂ [ ]{| l |}]] ) }
; .dlt.ptn 1'(= r )
; .dlt.ptn 0'(= r )
; .mov_ptn2 0(<2)◂0(<4)◂{ 8'(= a9◂ [ ] ) 9'(= a8◂ [ a14◂ [ a9◂ [ ]{| l |}]] ) } ⊢ 2'(= a3◂ [ a14◂ [ a9◂ [ ]{| l |}]] )
; .mov_ptn 0(<2)◂0(<4)◂{ 8'(= a9◂ [ ] ) 9'(= a8◂ [ a14◂ [ a9◂ [ ]{| l |}]] ) } ⊢ 2'(= a3◂ [ a14◂ [ a9◂ [ ]{| l |}]] )
	mov rax,[SS_RCD_2_TOP]
	mov rsi,[rax] 
	mov QWORD [SS_RCD_2_TOP],rsi
	mov QWORD [rax],0
	mov r13,rax
	mov rax,QWORD [rsp-8+8*2]
	mov QWORD [r13+8+8*0],rax
	mov rax,QWORD [rsp-8+8*1]
	mov QWORD [r13+8+8*1],rax
	mov rax,r13
	mov BYTE [rax+6],0
	mov rdi,rax
	mov rax,r15
	mov r15,QWORD [r15] 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,16
	jmp LB_950
LB_950:
	cmp BYTE [r8+6],0
	jnz LB_926
	pop r14
	pop r9
	add rsp,8
	pop r13
	ret
LB_926:
	mov r9,QWORD [rsp+8]
	mov r14,QWORD [rsp+16]
	mov r13,QWORD [rsp+24]
	jmp LB_954
LB_953:
	add r14,1 
LB_954:
	cmp r14,r9
	jge LB_955
	JZ_LINE_SPC BYTE [r13+8+r14], LB_953
LB_955
	lea rax,[r14+2]
	cmp rax,r9
	jg LB_958
	jmp LB_959
LB_958:
	mov r8,unt_1
	jmp LB_956
LB_959:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],37
	jnz LB_960
	cmp BYTE [rdi+1],91
	jnz LB_960
	jmp LB_961
LB_960:
	mov r8,unt_1
	jmp LB_956
LB_961:
	add r14,2
	jmp LB_957
LB_956:
	add rsp,0
	jmp LB_952
LB_957:
	jmp LB_963
LB_962:
	add r14,1 
LB_963:
	cmp r14,r9
	jge LB_964
	JZ_LINE_SPC BYTE [r13+8+r14], LB_962
LB_964
	call GRM_190
	cmp BYTE [r8+6],0
	jnz LB_967
	jmp LB_968
LB_967:
	jmp LB_965
LB_968:
	sub rsp,8
	mov r8,[r8+8]
; .mov_ptn2 2'(= a11◂ [ a9◂ [ ]] ) ⊢ 8'(= a11◂ [ a9◂ [ ]] )
; .mov_ptn 2'(= a11◂ [ a9◂ [ ]] ) ⊢ 8'(= a11◂ [ a9◂ [ ]] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_966
LB_965:
	add rsp,0
	pop rdi
	pop r9 
	pop r14
	pop r13
	ret
LB_966:
	jmp LB_970
LB_969:
	add r14,1 
LB_970:
	cmp r14,r9
	jge LB_971
	JZ_LINE_SPC BYTE [r13+8+r14], LB_969
LB_971
	lea rax,[r14+1]
	cmp rax,r9
	jg LB_974
	jmp LB_975
LB_974:
	mov r8,unt_1
	jmp LB_972
LB_975:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],93
	jnz LB_976
	jmp LB_977
LB_976:
	mov r8,unt_1
	jmp LB_972
LB_977:
	add r14,1
	jmp LB_973
LB_972:
	add rsp,8
	pop rdi
	pop r9 
	pop r14
	pop r13
	ret
LB_973:
	mov QWORD [rsp+8*1],r14
	mov r13,QWORD [rsp+16+8*1]
	mov r14,QWORD [rsp+8*1]
	jmp LB_979
LB_979
;; rsp=1 , %1199~1'(= r ) %1198~0'(= r ) %1197~8'(= a11◂ [ a9◂ [ ]] ) 
; #95 8'(= a11◂ [ a9◂ [ ]] ) ⊢ 1(<4)◂8'(= a11◂ [ a9◂ [ ]] )
;; rsp=1 , %1200~1(<4)◂8'(= a11◂ [ a9◂ [ ]] ) %1199~1'(= r ) %1198~0'(= r ) 
; #22 1(<4)◂8'(= a11◂ [ a9◂ [ ]] ) ⊢ 0(<2)◂1(<4)◂8'(= a11◂ [ a9◂ [ ]] )
;; rsp=1 , %1201~0(<2)◂1(<4)◂8'(= a11◂ [ a9◂ [ ]] ) %1199~1'(= r ) %1198~0'(= r ) 
; ∎ 0(<2)◂1(<4)◂8'(= a11◂ [ a9◂ [ ]] )
; .dlt.ptn 1'(= r )
; .dlt.ptn 0'(= r )
; .mov_ptn2 0(<2)◂1(<4)◂8'(= a11◂ [ a9◂ [ ]] ) ⊢ 2'(= a3◂ [ a14◂ [ a9◂ [ ]{| l |}]] )
; .mov_ptn 0(<2)◂1(<4)◂8'(= a11◂ [ a9◂ [ ]] ) ⊢ 2'(= a3◂ [ a14◂ [ a9◂ [ ]{| l |}]] )
	mov rax,QWORD [rsp-8+8*1]
	mov rdi,rax
	mov rax,r15
	mov r15,QWORD [r15] 
	mov QWORD [rax],0
	mov BYTE [rax+6],1
	mov QWORD [rax+8],rdi
	mov rdi,rax
	mov rax,r15
	mov r15,QWORD [r15] 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,8
	jmp LB_978
LB_978:
	cmp BYTE [r8+6],0
	jnz LB_952
	pop r14
	pop r9
	add rsp,8
	pop r13
	ret
LB_952:
	mov r9,QWORD [rsp+8]
	mov r14,QWORD [rsp+16]
	mov r13,QWORD [rsp+24]
	jmp LB_982
LB_981:
	add r14,1 
LB_982:
	cmp r14,r9
	jge LB_983
	JZ_LINE_SPC BYTE [r13+8+r14], LB_981
LB_983
	lea rax,[r14+1]
	cmp rax,r9
	jg LB_986
	jmp LB_987
LB_986:
	mov r8,unt_1
	jmp LB_984
LB_987:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],37
	jnz LB_988
	jmp LB_989
LB_988:
	mov r8,unt_1
	jmp LB_984
LB_989:
	add r14,1
	jmp LB_985
LB_984:
	add rsp,0
	jmp LB_980
LB_985:
	jmp LB_991
LB_990:
	add r14,1 
LB_991:
	cmp r14,r9
	jge LB_992
	JZ_LINE_SPC BYTE [r13+8+r14], LB_990
LB_992
	call GRM_77
	cmp BYTE [r8+6],0
	jnz LB_995
	jmp LB_996
LB_995:
	jmp LB_993
LB_996:
	sub rsp,8
; .mov_ptn2 2'(= {| l |} ) ⊢ 8'(= {| l |} )
; .mov_ptn 2'(= {| l |} ) ⊢ 8'(= {| l |} )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_994
LB_993:
	add rsp,0
	pop rdi
	pop r9 
	pop r14
	pop r13
	ret
LB_994:
	mov QWORD [rsp+8*1],r14
	mov r13,QWORD [rsp+16+8*1]
	mov r14,QWORD [rsp+8*1]
	jmp LB_998
LB_998
;; rsp=1 , %1204~1'(= r ) %1203~0'(= r ) %1202~8'(= {| l |} ) 
; #93 8'(= {| l |} ) ⊢ 3(<4)◂8'(= {| l |} )
;; rsp=1 , %1205~3(<4)◂8'(= {| l |} ) %1204~1'(= r ) %1203~0'(= r ) 
; #22 3(<4)◂8'(= {| l |} ) ⊢ 0(<2)◂3(<4)◂8'(= {| l |} )
;; rsp=1 , %1206~0(<2)◂3(<4)◂8'(= {| l |} ) %1204~1'(= r ) %1203~0'(= r ) 
; ∎ 0(<2)◂3(<4)◂8'(= {| l |} )
; .dlt.ptn 1'(= r )
; .dlt.ptn 0'(= r )
; .mov_ptn2 0(<2)◂3(<4)◂8'(= {| l |} ) ⊢ 2'(= a3◂ [ a14◂ [ a9◂ [ ]{| l |}]] )
; .mov_ptn 0(<2)◂3(<4)◂8'(= {| l |} ) ⊢ 2'(= a3◂ [ a14◂ [ a9◂ [ ]{| l |}]] )
	mov rax,QWORD [rsp-8+8*1]
	mov BYTE [rax+6],3
	mov rdi,rax
	mov rax,r15
	mov r15,QWORD [r15] 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,8
	jmp LB_997
LB_997:
	cmp BYTE [r8+6],0
	jnz LB_980
	pop r14
	pop r9
	add rsp,8
	pop r13
	ret
LB_980:
	mov r9,QWORD [rsp+8]
	mov r14,QWORD [rsp+16]
	mov r13,QWORD [rsp+24]
	jmp LB_1001
LB_1000:
	add r14,1 
LB_1001:
	cmp r14,r9
	jge LB_1002
	JZ_LINE_SPC BYTE [r13+8+r14], LB_1000
LB_1002
	call GRM_77
	cmp BYTE [r8+6],0
	jnz LB_1005
	jmp LB_1006
LB_1005:
	jmp LB_1003
LB_1006:
	sub rsp,8
; .mov_ptn2 2'(= {| l |} ) ⊢ 8'(= {| l |} )
; .mov_ptn 2'(= {| l |} ) ⊢ 8'(= {| l |} )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_1004
LB_1003:
	add rsp,0
	jmp LB_999
LB_1004:
	mov QWORD [rsp+8*1],r14
	mov r13,QWORD [rsp+16+8*1]
	mov r14,QWORD [rsp+8*1]
	jmp LB_1008
LB_1008
;; rsp=1 , %1209~1'(= r ) %1208~0'(= r ) %1207~8'(= {| l |} ) 
; #93 8'(= {| l |} ) ⊢ 3(<4)◂8'(= {| l |} )
;; rsp=1 , %1210~3(<4)◂8'(= {| l |} ) %1209~1'(= r ) %1208~0'(= r ) 
; #22 3(<4)◂8'(= {| l |} ) ⊢ 0(<2)◂3(<4)◂8'(= {| l |} )
;; rsp=1 , %1211~0(<2)◂3(<4)◂8'(= {| l |} ) %1209~1'(= r ) %1208~0'(= r ) 
; ∎ 0(<2)◂3(<4)◂8'(= {| l |} )
; .dlt.ptn 1'(= r )
; .dlt.ptn 0'(= r )
; .mov_ptn2 0(<2)◂3(<4)◂8'(= {| l |} ) ⊢ 2'(= a3◂ [ a14◂ [ a9◂ [ ]{| l |}]] )
; .mov_ptn 0(<2)◂3(<4)◂8'(= {| l |} ) ⊢ 2'(= a3◂ [ a14◂ [ a9◂ [ ]{| l |}]] )
	mov rax,QWORD [rsp-8+8*1]
	mov BYTE [rax+6],3
	mov rdi,rax
	mov rax,r15
	mov r15,QWORD [r15] 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,8
	jmp LB_1007
LB_1007:
	cmp BYTE [r8+6],0
	jnz LB_999
	pop r14
	pop r9
	add rsp,8
	pop r13
	ret
LB_999:
	mov r9,QWORD [rsp+8]
	mov r14,QWORD [rsp+16]
	mov r13,QWORD [rsp+24]
	jmp LB_1011
LB_1010:
	add r14,1 
LB_1011:
	cmp r14,r9
	jge LB_1012
	JZ_LINE_SPC BYTE [r13+8+r14], LB_1010
LB_1012
	lea rax,[r14+1]
	cmp rax,r9
	jg LB_1015
	jmp LB_1016
LB_1015:
	mov r8,unt_1
	jmp LB_1013
LB_1016:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],95
	jnz LB_1017
	jmp LB_1018
LB_1017:
	mov r8,unt_1
	jmp LB_1013
LB_1018:
	add r14,1
	jmp LB_1014
LB_1013:
	add rsp,0
	jmp LB_1009
LB_1014:
	mov QWORD [rsp+8*0],r14
	mov r13,QWORD [rsp+16+8*0]
	mov r14,QWORD [rsp+8*0]
	jmp LB_1020
LB_1020
;; rsp=0 , %1213~1'(= r ) %1212~0'(= r ) 
; #23 { } ⊢ 1(<2)◂{ }
;; rsp=0 , %1214~1(<2)◂{ } %1213~1'(= r ) %1212~0'(= r ) 
; #94 1(<2)◂{ } ⊢ 2(<4)◂1(<2)◂{ }
;; rsp=0 , %1215~2(<4)◂1(<2)◂{ } %1213~1'(= r ) %1212~0'(= r ) 
; #22 2(<4)◂1(<2)◂{ } ⊢ 0(<2)◂2(<4)◂1(<2)◂{ }
;; rsp=0 , %1216~0(<2)◂2(<4)◂1(<2)◂{ } %1213~1'(= r ) %1212~0'(= r ) 
; ∎ 0(<2)◂2(<4)◂1(<2)◂{ }
; .dlt.ptn 1'(= r )
; .dlt.ptn 0'(= r )
; .mov_ptn2 0(<2)◂2(<4)◂1(<2)◂{ } ⊢ 2'(= a3◂ [ a14◂ [ a9◂ [ ]{| l |}]] )
; .mov_ptn 0(<2)◂2(<4)◂1(<2)◂{ } ⊢ 2'(= a3◂ [ a14◂ [ a9◂ [ ]{| l |}]] )
	mov rax,unt 
	mov rax,unt_1
	mov rdi,rax
	mov rax,r15
	mov r15,QWORD [r15] 
	mov QWORD [rax],0
	mov BYTE [rax+6],2
	mov QWORD [rax+8],rdi
	mov rdi,rax
	mov rax,r15
	mov r15,QWORD [r15] 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	jmp LB_1019
LB_1019:
	cmp BYTE [r8+6],0
	jnz LB_1009
	pop r14
	pop r9
	add rsp,8
	pop r13
	ret
LB_1009:
	pop rdi
	pop r9 
	pop r14
	pop r13
	ret
ETR_201:
	mov r9,0x0000_ffff_ffff_ffff
	and r9,[r13]
	call GRM_201
	ret
GRM_201:
	sub rsp,32
	mov QWORD [rsp+24],r13
	mov QWORD [rsp+16],r14 
	mov QWORD [rsp+8],r9
	jmp LB_1023
LB_1022:
	add r14,1 
LB_1023:
	cmp r14,r9
	jge LB_1024
	JZ_LINE_SPC BYTE [r13+8+r14], LB_1022
LB_1024
	lea rax,[r14+1]
	cmp rax,r9
	jg LB_1027
	jmp LB_1028
LB_1027:
	mov r8,unt_1
	jmp LB_1025
LB_1028:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],123
	jnz LB_1029
	jmp LB_1030
LB_1029:
	mov r8,unt_1
	jmp LB_1025
LB_1030:
	add r14,1
	jmp LB_1026
LB_1025:
	add rsp,0
	jmp LB_1021
LB_1026:
	jmp LB_1032
LB_1031:
	add r14,1 
LB_1032:
	cmp r14,r9
	jge LB_1033
	JZ_LINE_SPC BYTE [r13+8+r14], LB_1031
LB_1033
	call GRM_202
	cmp BYTE [r8+6],0
	jnz LB_1036
	jmp LB_1037
LB_1036:
	jmp LB_1034
LB_1037:
	sub rsp,8
	mov r8,[r8+8]
; .mov_ptn2 2'(= a2◂ [ a8◂ [ a12◂ [ a9◂ [ ]{| l |}]]] ) ⊢ 8'(= a2◂ [ a8◂ [ a12◂ [ a9◂ [ ]{| l |}]]] )
; .mov_ptn 2'(= a2◂ [ a8◂ [ a12◂ [ a9◂ [ ]{| l |}]]] ) ⊢ 8'(= a2◂ [ a8◂ [ a12◂ [ a9◂ [ ]{| l |}]]] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_1035
LB_1034:
	add rsp,0
	jmp LB_1021
LB_1035:
	jmp LB_1039
LB_1038:
	add r14,1 
LB_1039:
	cmp r14,r9
	jge LB_1040
	JZ_LINE_SPC BYTE [r13+8+r14], LB_1038
LB_1040
	lea rax,[r14+1]
	cmp rax,r9
	jg LB_1043
	jmp LB_1044
LB_1043:
	mov r8,unt_1
	jmp LB_1041
LB_1044:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],125
	jnz LB_1045
	jmp LB_1046
LB_1045:
	mov r8,unt_1
	jmp LB_1041
LB_1046:
	add r14,1
	jmp LB_1042
LB_1041:
	add rsp,8
	jmp LB_1021
LB_1042:
	mov QWORD [rsp+8*1],r14
	mov r13,QWORD [rsp+16+8*1]
	mov r14,QWORD [rsp+8*1]
	jmp LB_1048
LB_1048
;; rsp=1 , %1219~1'(= r ) %1218~0'(= r ) %1217~8'(= a2◂ [ a8◂ [ a12◂ [ a9◂ [ ]{| l |}]]] ) 
; #79 8'(= a2◂ [ a8◂ [ a12◂ [ a9◂ [ ]{| l |}]]] ) ⊢ 0(<2)◂8'(= a2◂ [ a8◂ [ a12◂ [ a9◂ [ ]{| l |}]]] )
;; rsp=1 , %1220~0(<2)◂8'(= a2◂ [ a8◂ [ a12◂ [ a9◂ [ ]{| l |}]]] ) %1219~1'(= r ) %1218~0'(= r ) 
; #22 0(<2)◂8'(= a2◂ [ a8◂ [ a12◂ [ a9◂ [ ]{| l |}]]] ) ⊢ 0(<2)◂0(<2)◂8'(= a2◂ [ a8◂ [ a12◂ [ a9◂ [ ]{| l |}]]] )
;; rsp=1 , %1221~0(<2)◂0(<2)◂8'(= a2◂ [ a8◂ [ a12◂ [ a9◂ [ ]{| l |}]]] ) %1219~1'(= r ) %1218~0'(= r ) 
; ∎ 0(<2)◂0(<2)◂8'(= a2◂ [ a8◂ [ a12◂ [ a9◂ [ ]{| l |}]]] )
; .dlt.ptn 1'(= r )
; .dlt.ptn 0'(= r )
; .mov_ptn2 0(<2)◂0(<2)◂8'(= a2◂ [ a8◂ [ a12◂ [ a9◂ [ ]{| l |}]]] ) ⊢ 2'(= a3◂ [ a8◂ [ a12◂ [ a9◂ [ ]{| l |}]]] )
; .mov_ptn 0(<2)◂0(<2)◂8'(= a2◂ [ a8◂ [ a12◂ [ a9◂ [ ]{| l |}]]] ) ⊢ 2'(= a3◂ [ a8◂ [ a12◂ [ a9◂ [ ]{| l |}]]] )
	mov rax,QWORD [rsp-8+8*1]
	mov rdi,rax
	mov rax,r15
	mov r15,QWORD [r15] 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov rdi,rax
	mov rax,r15
	mov r15,QWORD [r15] 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,8
	jmp LB_1047
LB_1047:
	cmp BYTE [r8+6],0
	jnz LB_1021
	pop r14
	pop r9
	add rsp,8
	pop r13
	ret
LB_1021:
	mov r9,QWORD [rsp+8]
	mov r14,QWORD [rsp+16]
	mov r13,QWORD [rsp+24]
	jmp LB_1051
LB_1050:
	add r14,1 
LB_1051:
	cmp r14,r9
	jge LB_1052
	JZ_LINE_SPC BYTE [r13+8+r14], LB_1050
LB_1052
	call GRM_204
	cmp BYTE [r8+6],0
	jnz LB_1055
	jmp LB_1056
LB_1055:
	jmp LB_1053
LB_1056:
	sub rsp,8
	mov r8,[r8+8]
; .mov_ptn2 2'(= a12◂ [ a9◂ [ ]{| l |}] ) ⊢ 8'(= a12◂ [ a9◂ [ ]{| l |}] )
; .mov_ptn 2'(= a12◂ [ a9◂ [ ]{| l |}] ) ⊢ 8'(= a12◂ [ a9◂ [ ]{| l |}] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_1054
LB_1053:
	add rsp,0
	jmp LB_1049
LB_1054:
	mov QWORD [rsp+8*1],r14
	mov r13,QWORD [rsp+16+8*1]
	mov r14,QWORD [rsp+8*1]
	jmp LB_1058
LB_1058
;; rsp=1 , %1224~1'(= r ) %1223~0'(= r ) %1222~8'(= a12◂ [ a9◂ [ ]{| l |}] ) 
; #78 8'(= a12◂ [ a9◂ [ ]{| l |}] ) ⊢ 1(<2)◂8'(= a12◂ [ a9◂ [ ]{| l |}] )
;; rsp=1 , %1225~1(<2)◂8'(= a12◂ [ a9◂ [ ]{| l |}] ) %1224~1'(= r ) %1223~0'(= r ) 
; #22 1(<2)◂8'(= a12◂ [ a9◂ [ ]{| l |}] ) ⊢ 0(<2)◂1(<2)◂8'(= a12◂ [ a9◂ [ ]{| l |}] )
;; rsp=1 , %1226~0(<2)◂1(<2)◂8'(= a12◂ [ a9◂ [ ]{| l |}] ) %1224~1'(= r ) %1223~0'(= r ) 
; ∎ 0(<2)◂1(<2)◂8'(= a12◂ [ a9◂ [ ]{| l |}] )
; .dlt.ptn 1'(= r )
; .dlt.ptn 0'(= r )
; .mov_ptn2 0(<2)◂1(<2)◂8'(= a12◂ [ a9◂ [ ]{| l |}] ) ⊢ 2'(= a3◂ [ a8◂ [ a12◂ [ a9◂ [ ]{| l |}]]] )
; .mov_ptn 0(<2)◂1(<2)◂8'(= a12◂ [ a9◂ [ ]{| l |}] ) ⊢ 2'(= a3◂ [ a8◂ [ a12◂ [ a9◂ [ ]{| l |}]]] )
	mov rax,QWORD [rsp-8+8*1]
	mov rdi,rax
	mov rax,r15
	mov r15,QWORD [r15] 
	mov QWORD [rax],0
	mov BYTE [rax+6],1
	mov QWORD [rax+8],rdi
	mov rdi,rax
	mov rax,r15
	mov r15,QWORD [r15] 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,8
	jmp LB_1057
LB_1057:
	cmp BYTE [r8+6],0
	jnz LB_1049
	pop r14
	pop r9
	add rsp,8
	pop r13
	ret
LB_1049:
	pop rdi
	pop r9 
	pop r14
	pop r13
	ret
ETR_202:
	mov r9,0x0000_ffff_ffff_ffff
	and r9,[r13]
	call GRM_202
	ret
GRM_202:
	sub rsp,32
	mov QWORD [rsp+24],r13
	mov QWORD [rsp+16],r14 
	mov QWORD [rsp+8],r9
	jmp LB_1061
LB_1060:
	add r14,1 
LB_1061:
	cmp r14,r9
	jge LB_1062
	JZ_LINE_SPC BYTE [r13+8+r14], LB_1060
LB_1062
	call GRM_201
	cmp BYTE [r8+6],0
	jnz LB_1065
	jmp LB_1066
LB_1065:
	jmp LB_1063
LB_1066:
	sub rsp,8
	mov r8,[r8+8]
; .mov_ptn2 2'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) ⊢ 8'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] )
; .mov_ptn 2'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) ⊢ 8'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_1064
LB_1063:
	add rsp,0
	jmp LB_1059
LB_1064:
	jmp LB_1068
LB_1067:
	add r14,1 
LB_1068:
	cmp r14,r9
	jge LB_1069
	JZ_LINE_SPC BYTE [r13+8+r14], LB_1067
LB_1069
	call GRM_202
	cmp BYTE [r8+6],0
	jnz LB_1072
	jmp LB_1073
LB_1072:
	jmp LB_1070
LB_1073:
	sub rsp,8
	mov r8,[r8+8]
; .mov_ptn2 2'(= a2◂ [ a8◂ [ a12◂ [ a9◂ [ ]{| l |}]]] ) ⊢ 9'(= a2◂ [ a8◂ [ a12◂ [ a9◂ [ ]{| l |}]]] )
; .mov_ptn 2'(= a2◂ [ a8◂ [ a12◂ [ a9◂ [ ]{| l |}]]] ) ⊢ 9'(= a2◂ [ a8◂ [ a12◂ [ a9◂ [ ]{| l |}]]] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_1071
LB_1070:
	add rsp,8
	jmp LB_1059
LB_1071:
	mov QWORD [rsp+8*2],r14
	mov r13,QWORD [rsp+16+8*2]
	mov r14,QWORD [rsp+8*2]
	jmp LB_1075
LB_1075
;; rsp=2 , %1230~1'(= r ) %1229~0'(= r ) %1228~9'(= a2◂ [ a8◂ [ a12◂ [ a9◂ [ ]{| l |}]]] ) %1227~8'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) 
; #21 { 8'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) 9'(= a2◂ [ a8◂ [ a12◂ [ a9◂ [ ]{| l |}]]] ) } ⊢ 0(<2)◂{ 8'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) 9'(= a2◂ [ a8◂ [ a12◂ [ a9◂ [ ]{| l |}]]] ) }
;; rsp=2 , %1231~0(<2)◂{ 8'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) 9'(= a2◂ [ a8◂ [ a12◂ [ a9◂ [ ]{| l |}]]] ) } %1230~1'(= r ) %1229~0'(= r ) 
; #22 0(<2)◂{ 8'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) 9'(= a2◂ [ a8◂ [ a12◂ [ a9◂ [ ]{| l |}]]] ) } ⊢ 0(<2)◂0(<2)◂{ 8'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) 9'(= a2◂ [ a8◂ [ a12◂ [ a9◂ [ ]{| l |}]]] ) }
;; rsp=2 , %1232~0(<2)◂0(<2)◂{ 8'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) 9'(= a2◂ [ a8◂ [ a12◂ [ a9◂ [ ]{| l |}]]] ) } %1230~1'(= r ) %1229~0'(= r ) 
; ∎ 0(<2)◂0(<2)◂{ 8'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) 9'(= a2◂ [ a8◂ [ a12◂ [ a9◂ [ ]{| l |}]]] ) }
; .dlt.ptn 1'(= r )
; .dlt.ptn 0'(= r )
; .mov_ptn2 0(<2)◂0(<2)◂{ 8'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) 9'(= a2◂ [ a8◂ [ a12◂ [ a9◂ [ ]{| l |}]]] ) } ⊢ 2'(= a3◂ [ a2◂ [ a8◂ [ a12◂ [ a9◂ [ ]{| l |}]]]] )
; .mov_ptn 0(<2)◂0(<2)◂{ 8'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) 9'(= a2◂ [ a8◂ [ a12◂ [ a9◂ [ ]{| l |}]]] ) } ⊢ 2'(= a3◂ [ a2◂ [ a8◂ [ a12◂ [ a9◂ [ ]{| l |}]]]] )
	mov rax,[SS_RCD_2_TOP]
	mov rsi,[rax] 
	mov QWORD [SS_RCD_2_TOP],rsi
	mov QWORD [rax],0
	mov r13,rax
	mov rax,QWORD [rsp-8+8*2]
	mov QWORD [r13+8+8*0],rax
	mov rax,QWORD [rsp-8+8*1]
	mov QWORD [r13+8+8*1],rax
	mov rax,r13
	mov BYTE [rax+6],0
	mov rdi,rax
	mov rax,r15
	mov r15,QWORD [r15] 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,16
	jmp LB_1074
LB_1074:
	cmp BYTE [r8+6],0
	jnz LB_1059
	pop r14
	pop r9
	add rsp,8
	pop r13
	ret
LB_1059:
	mov r9,QWORD [rsp+8]
	mov r14,QWORD [rsp+16]
	mov r13,QWORD [rsp+24]
	mov QWORD [rsp+8*0],r14
	mov r13,QWORD [rsp+16+8*0]
	mov r14,QWORD [rsp+8*0]
	jmp LB_1078
LB_1078
;; rsp=0 , %1234~1'(= r ) %1233~0'(= r ) 
; #20 { } ⊢ 1(<2)◂{ }
;; rsp=0 , %1235~1(<2)◂{ } %1234~1'(= r ) %1233~0'(= r ) 
; #22 1(<2)◂{ } ⊢ 0(<2)◂1(<2)◂{ }
;; rsp=0 , %1236~0(<2)◂1(<2)◂{ } %1234~1'(= r ) %1233~0'(= r ) 
; ∎ 0(<2)◂1(<2)◂{ }
; .dlt.ptn 1'(= r )
; .dlt.ptn 0'(= r )
; .mov_ptn2 0(<2)◂1(<2)◂{ } ⊢ 2'(= a3◂ [ a2◂ [ a8◂ [ a12◂ [ a9◂ [ ]{| l |}]]]] )
; .mov_ptn 0(<2)◂1(<2)◂{ } ⊢ 2'(= a3◂ [ a2◂ [ a8◂ [ a12◂ [ a9◂ [ ]{| l |}]]]] )
	mov rax,unt 
	mov rax,unt_1
	mov rdi,rax
	mov rax,r15
	mov r15,QWORD [r15] 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	jmp LB_1077
LB_1077:
	cmp BYTE [r8+6],0
	jnz LB_1076
	pop r14
	pop r9
	add rsp,8
	pop r13
	ret
LB_1076:
	pop rdi
	pop r9 
	pop r14
	pop r13
	ret
ETR_203:
	mov r9,0x0000_ffff_ffff_ffff
	and r9,[r13]
	call GRM_203
	ret
GRM_203:
	sub rsp,32
	mov QWORD [rsp+24],r13
	mov QWORD [rsp+16],r14 
	mov QWORD [rsp+8],r9
	jmp LB_1081
LB_1080:
	add r14,1 
LB_1081:
	cmp r14,r9
	jge LB_1082
	JZ_LINE_SPC BYTE [r13+8+r14], LB_1080
LB_1082
	lea rax,[r14+1]
	cmp rax,r9
	jg LB_1085
	jmp LB_1086
LB_1085:
	mov r8,unt_1
	jmp LB_1083
LB_1086:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],44
	jnz LB_1087
	jmp LB_1088
LB_1087:
	mov r8,unt_1
	jmp LB_1083
LB_1088:
	add r14,1
	jmp LB_1084
LB_1083:
	add rsp,0
	jmp LB_1079
LB_1084:
	jmp LB_1090
LB_1089:
	add r14,1 
LB_1090:
	cmp r14,r9
	jge LB_1091
	JZ_LINE_SPC BYTE [r13+8+r14], LB_1089
LB_1091
	call GRM_204
	cmp BYTE [r8+6],0
	jnz LB_1094
	jmp LB_1095
LB_1094:
	jmp LB_1092
LB_1095:
	sub rsp,8
	mov r8,[r8+8]
; .mov_ptn2 2'(= a12◂ [ a9◂ [ ]{| l |}] ) ⊢ 8'(= a12◂ [ a9◂ [ ]{| l |}] )
; .mov_ptn 2'(= a12◂ [ a9◂ [ ]{| l |}] ) ⊢ 8'(= a12◂ [ a9◂ [ ]{| l |}] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_1093
LB_1092:
	add rsp,0
	pop rdi
	pop r9 
	pop r14
	pop r13
	ret
LB_1093:
	jmp LB_1097
LB_1096:
	add r14,1 
LB_1097:
	cmp r14,r9
	jge LB_1098
	JZ_LINE_SPC BYTE [r13+8+r14], LB_1096
LB_1098
	call GRM_203
	cmp BYTE [r8+6],0
	jnz LB_1101
	jmp LB_1102
LB_1101:
	jmp LB_1099
LB_1102:
	sub rsp,8
	mov r8,[r8+8]
; .mov_ptn2 2'(= a2◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) ⊢ 9'(= a2◂ [ a12◂ [ a9◂ [ ]{| l |}]] )
; .mov_ptn 2'(= a2◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) ⊢ 9'(= a2◂ [ a12◂ [ a9◂ [ ]{| l |}]] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_1100
LB_1099:
	add rsp,8
	pop rdi
	pop r9 
	pop r14
	pop r13
	ret
LB_1100:
	mov QWORD [rsp+8*2],r14
	mov r13,QWORD [rsp+16+8*2]
	mov r14,QWORD [rsp+8*2]
	jmp LB_1104
LB_1104
;; rsp=2 , %1240~1'(= r ) %1239~0'(= r ) %1238~9'(= a2◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) %1237~8'(= a12◂ [ a9◂ [ ]{| l |}] ) 
; #21 { 8'(= a12◂ [ a9◂ [ ]{| l |}] ) 9'(= a2◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) } ⊢ 0(<2)◂{ 8'(= a12◂ [ a9◂ [ ]{| l |}] ) 9'(= a2◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) }
;; rsp=2 , %1241~0(<2)◂{ 8'(= a12◂ [ a9◂ [ ]{| l |}] ) 9'(= a2◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) } %1240~1'(= r ) %1239~0'(= r ) 
; #22 0(<2)◂{ 8'(= a12◂ [ a9◂ [ ]{| l |}] ) 9'(= a2◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) } ⊢ 0(<2)◂0(<2)◂{ 8'(= a12◂ [ a9◂ [ ]{| l |}] ) 9'(= a2◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) }
;; rsp=2 , %1242~0(<2)◂0(<2)◂{ 8'(= a12◂ [ a9◂ [ ]{| l |}] ) 9'(= a2◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) } %1240~1'(= r ) %1239~0'(= r ) 
; ∎ 0(<2)◂0(<2)◂{ 8'(= a12◂ [ a9◂ [ ]{| l |}] ) 9'(= a2◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) }
; .dlt.ptn 1'(= r )
; .dlt.ptn 0'(= r )
; .mov_ptn2 0(<2)◂0(<2)◂{ 8'(= a12◂ [ a9◂ [ ]{| l |}] ) 9'(= a2◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) } ⊢ 2'(= a3◂ [ a2◂ [ a12◂ [ a9◂ [ ]{| l |}]]] )
; .mov_ptn 0(<2)◂0(<2)◂{ 8'(= a12◂ [ a9◂ [ ]{| l |}] ) 9'(= a2◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) } ⊢ 2'(= a3◂ [ a2◂ [ a12◂ [ a9◂ [ ]{| l |}]]] )
	mov rax,[SS_RCD_2_TOP]
	mov rsi,[rax] 
	mov QWORD [SS_RCD_2_TOP],rsi
	mov QWORD [rax],0
	mov r13,rax
	mov rax,QWORD [rsp-8+8*2]
	mov QWORD [r13+8+8*0],rax
	mov rax,QWORD [rsp-8+8*1]
	mov QWORD [r13+8+8*1],rax
	mov rax,r13
	mov BYTE [rax+6],0
	mov rdi,rax
	mov rax,r15
	mov r15,QWORD [r15] 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,16
	jmp LB_1103
LB_1103:
	cmp BYTE [r8+6],0
	jnz LB_1079
	pop r14
	pop r9
	add rsp,8
	pop r13
	ret
LB_1079:
	mov r9,QWORD [rsp+8]
	mov r14,QWORD [rsp+16]
	mov r13,QWORD [rsp+24]
	mov QWORD [rsp+8*0],r14
	mov r13,QWORD [rsp+16+8*0]
	mov r14,QWORD [rsp+8*0]
	jmp LB_1107
LB_1107
;; rsp=0 , %1244~1'(= r ) %1243~0'(= r ) 
; #20 { } ⊢ 1(<2)◂{ }
;; rsp=0 , %1245~1(<2)◂{ } %1244~1'(= r ) %1243~0'(= r ) 
; #22 1(<2)◂{ } ⊢ 0(<2)◂1(<2)◂{ }
;; rsp=0 , %1246~0(<2)◂1(<2)◂{ } %1244~1'(= r ) %1243~0'(= r ) 
; ∎ 0(<2)◂1(<2)◂{ }
; .dlt.ptn 1'(= r )
; .dlt.ptn 0'(= r )
; .mov_ptn2 0(<2)◂1(<2)◂{ } ⊢ 2'(= a3◂ [ a2◂ [ a12◂ [ a9◂ [ ]{| l |}]]] )
; .mov_ptn 0(<2)◂1(<2)◂{ } ⊢ 2'(= a3◂ [ a2◂ [ a12◂ [ a9◂ [ ]{| l |}]]] )
	mov rax,unt 
	mov rax,unt_1
	mov rdi,rax
	mov rax,r15
	mov r15,QWORD [r15] 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	jmp LB_1106
LB_1106:
	cmp BYTE [r8+6],0
	jnz LB_1105
	pop r14
	pop r9
	add rsp,8
	pop r13
	ret
LB_1105:
	pop rdi
	pop r9 
	pop r14
	pop r13
	ret
ETR_204:
	mov r9,0x0000_ffff_ffff_ffff
	and r9,[r13]
	call GRM_204
	ret
GRM_204:
	sub rsp,32
	mov QWORD [rsp+24],r13
	mov QWORD [rsp+16],r14 
	mov QWORD [rsp+8],r9
	jmp LB_1110
LB_1109:
	add r14,1 
LB_1110:
	cmp r14,r9
	jge LB_1111
	JZ_LINE_SPC BYTE [r13+8+r14], LB_1109
LB_1111
	lea rax,[r14+2]
	cmp rax,r9
	jg LB_1114
	jmp LB_1115
LB_1114:
	mov r8,unt_1
	jmp LB_1112
LB_1115:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],37
	jnz LB_1116
	cmp BYTE [rdi+1],91
	jnz LB_1116
	jmp LB_1117
LB_1116:
	mov r8,unt_1
	jmp LB_1112
LB_1117:
	add r14,2
	jmp LB_1113
LB_1112:
	add rsp,0
	jmp LB_1108
LB_1113:
	jmp LB_1119
LB_1118:
	add r14,1 
LB_1119:
	cmp r14,r9
	jge LB_1120
	JZ_LINE_SPC BYTE [r13+8+r14], LB_1118
LB_1120
	call GRM_190
	cmp BYTE [r8+6],0
	jnz LB_1123
	jmp LB_1124
LB_1123:
	jmp LB_1121
LB_1124:
	sub rsp,8
	mov r8,[r8+8]
; .mov_ptn2 2'(= a11◂ [ a9◂ [ ]] ) ⊢ 8'(= a11◂ [ a9◂ [ ]] )
; .mov_ptn 2'(= a11◂ [ a9◂ [ ]] ) ⊢ 8'(= a11◂ [ a9◂ [ ]] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_1122
LB_1121:
	add rsp,0
	jmp LB_1108
LB_1122:
	jmp LB_1126
LB_1125:
	add r14,1 
LB_1126:
	cmp r14,r9
	jge LB_1127
	JZ_LINE_SPC BYTE [r13+8+r14], LB_1125
LB_1127
	lea rax,[r14+1]
	cmp rax,r9
	jg LB_1130
	jmp LB_1131
LB_1130:
	mov r8,unt_1
	jmp LB_1128
LB_1131:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],93
	jnz LB_1132
	jmp LB_1133
LB_1132:
	mov r8,unt_1
	jmp LB_1128
LB_1133:
	add r14,1
	jmp LB_1129
LB_1128:
	add rsp,8
	jmp LB_1108
LB_1129:
	mov QWORD [rsp+8*1],r14
	mov r13,QWORD [rsp+16+8*1]
	mov r14,QWORD [rsp+8*1]
	jmp LB_1135
LB_1135
;; rsp=1 , %1249~1'(= r ) %1248~0'(= r ) %1247~8'(= a11◂ [ a9◂ [ ]] ) 
; #92 8'(= a11◂ [ a9◂ [ ]] ) ⊢ 0(<2)◂8'(= a11◂ [ a9◂ [ ]] )
;; rsp=1 , %1250~0(<2)◂8'(= a11◂ [ a9◂ [ ]] ) %1249~1'(= r ) %1248~0'(= r ) 
; #22 0(<2)◂8'(= a11◂ [ a9◂ [ ]] ) ⊢ 0(<2)◂0(<2)◂8'(= a11◂ [ a9◂ [ ]] )
;; rsp=1 , %1251~0(<2)◂0(<2)◂8'(= a11◂ [ a9◂ [ ]] ) %1249~1'(= r ) %1248~0'(= r ) 
; ∎ 0(<2)◂0(<2)◂8'(= a11◂ [ a9◂ [ ]] )
; .dlt.ptn 1'(= r )
; .dlt.ptn 0'(= r )
; .mov_ptn2 0(<2)◂0(<2)◂8'(= a11◂ [ a9◂ [ ]] ) ⊢ 2'(= a3◂ [ a12◂ [ a9◂ [ ]{| l |}]] )
; .mov_ptn 0(<2)◂0(<2)◂8'(= a11◂ [ a9◂ [ ]] ) ⊢ 2'(= a3◂ [ a12◂ [ a9◂ [ ]{| l |}]] )
	mov rax,QWORD [rsp-8+8*1]
	mov rdi,rax
	mov rax,r15
	mov r15,QWORD [r15] 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov rdi,rax
	mov rax,r15
	mov r15,QWORD [r15] 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,8
	jmp LB_1134
LB_1134:
	cmp BYTE [r8+6],0
	jnz LB_1108
	pop r14
	pop r9
	add rsp,8
	pop r13
	ret
LB_1108:
	mov r9,QWORD [rsp+8]
	mov r14,QWORD [rsp+16]
	mov r13,QWORD [rsp+24]
	lea rax,[r14+1]
	cmp rax,r9
	jg LB_1139
	jmp LB_1140
LB_1139:
	mov r8,unt_1
	jmp LB_1137
LB_1140:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],37
	jnz LB_1141
	jmp LB_1142
LB_1141:
	mov r8,unt_1
	jmp LB_1137
LB_1142:
	add r14,1
	jmp LB_1138
LB_1137:
	add rsp,0
	jmp LB_1136
LB_1138:
	call GRM_77
	cmp BYTE [r8+6],0
	jnz LB_1145
	jmp LB_1146
LB_1145:
	jmp LB_1143
LB_1146:
	sub rsp,8
; .mov_ptn2 2'(= {| l |} ) ⊢ 8'(= {| l |} )
; .mov_ptn 2'(= {| l |} ) ⊢ 8'(= {| l |} )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_1144
LB_1143:
	add rsp,0
	pop rdi
	pop r9 
	pop r14
	pop r13
	ret
LB_1144:
	mov QWORD [rsp+8*1],r14
	mov r13,QWORD [rsp+16+8*1]
	mov r14,QWORD [rsp+8*1]
	jmp LB_1148
LB_1148
;; rsp=1 , %1254~1'(= r ) %1253~0'(= r ) %1252~8'(= {| l |} ) 
; #91 8'(= {| l |} ) ⊢ 1(<2)◂8'(= {| l |} )
;; rsp=1 , %1255~1(<2)◂8'(= {| l |} ) %1254~1'(= r ) %1253~0'(= r ) 
; #22 1(<2)◂8'(= {| l |} ) ⊢ 0(<2)◂1(<2)◂8'(= {| l |} )
;; rsp=1 , %1256~0(<2)◂1(<2)◂8'(= {| l |} ) %1254~1'(= r ) %1253~0'(= r ) 
; ∎ 0(<2)◂1(<2)◂8'(= {| l |} )
; .dlt.ptn 1'(= r )
; .dlt.ptn 0'(= r )
; .mov_ptn2 0(<2)◂1(<2)◂8'(= {| l |} ) ⊢ 2'(= a3◂ [ a12◂ [ a9◂ [ ]{| l |}]] )
; .mov_ptn 0(<2)◂1(<2)◂8'(= {| l |} ) ⊢ 2'(= a3◂ [ a12◂ [ a9◂ [ ]{| l |}]] )
	mov rax,QWORD [rsp-8+8*1]
	mov BYTE [rax+6],1
	mov rdi,rax
	mov rax,r15
	mov r15,QWORD [r15] 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,8
	jmp LB_1147
LB_1147:
	cmp BYTE [r8+6],0
	jnz LB_1136
	pop r14
	pop r9
	add rsp,8
	pop r13
	ret
LB_1136:
	mov r9,QWORD [rsp+8]
	mov r14,QWORD [rsp+16]
	mov r13,QWORD [rsp+24]
	jmp LB_1151
LB_1150:
	add r14,1 
LB_1151:
	cmp r14,r9
	jge LB_1152
	JZ_LINE_SPC BYTE [r13+8+r14], LB_1150
LB_1152
	call GRM_77
	cmp BYTE [r8+6],0
	jnz LB_1155
	jmp LB_1156
LB_1155:
	jmp LB_1153
LB_1156:
	sub rsp,8
; .mov_ptn2 2'(= {| l |} ) ⊢ 8'(= {| l |} )
; .mov_ptn 2'(= {| l |} ) ⊢ 8'(= {| l |} )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_1154
LB_1153:
	add rsp,0
	jmp LB_1149
LB_1154:
	mov QWORD [rsp+8*1],r14
	mov r13,QWORD [rsp+16+8*1]
	mov r14,QWORD [rsp+8*1]
	jmp LB_1158
LB_1158
;; rsp=1 , %1259~1'(= r ) %1258~0'(= r ) %1257~8'(= {| l |} ) 
; #91 8'(= {| l |} ) ⊢ 1(<2)◂8'(= {| l |} )
;; rsp=1 , %1260~1(<2)◂8'(= {| l |} ) %1259~1'(= r ) %1258~0'(= r ) 
; #22 1(<2)◂8'(= {| l |} ) ⊢ 0(<2)◂1(<2)◂8'(= {| l |} )
;; rsp=1 , %1261~0(<2)◂1(<2)◂8'(= {| l |} ) %1259~1'(= r ) %1258~0'(= r ) 
; ∎ 0(<2)◂1(<2)◂8'(= {| l |} )
; .dlt.ptn 1'(= r )
; .dlt.ptn 0'(= r )
; .mov_ptn2 0(<2)◂1(<2)◂8'(= {| l |} ) ⊢ 2'(= a3◂ [ a12◂ [ a9◂ [ ]{| l |}]] )
; .mov_ptn 0(<2)◂1(<2)◂8'(= {| l |} ) ⊢ 2'(= a3◂ [ a12◂ [ a9◂ [ ]{| l |}]] )
	mov rax,QWORD [rsp-8+8*1]
	mov BYTE [rax+6],1
	mov rdi,rax
	mov rax,r15
	mov r15,QWORD [r15] 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,8
	jmp LB_1157
LB_1157:
	cmp BYTE [r8+6],0
	jnz LB_1149
	pop r14
	pop r9
	add rsp,8
	pop r13
	ret
LB_1149:
	pop rdi
	pop r9 
	pop r14
	pop r13
	ret
ETR_205:
	mov r9,0x0000_ffff_ffff_ffff
	and r9,[r13]
	call GRM_205
	ret
GRM_205:
	sub rsp,32
	mov QWORD [rsp+24],r13
	mov QWORD [rsp+16],r14 
	mov QWORD [rsp+8],r9
	jmp LB_1161
LB_1160:
	add r14,1 
LB_1161:
	cmp r14,r9
	jge LB_1162
	JZ_LINE_SPC BYTE [r13+8+r14], LB_1160
LB_1162
	lea rax,[r14+1]
	cmp rax,r9
	jg LB_1165
	jmp LB_1166
LB_1165:
	mov r8,unt_1
	jmp LB_1163
LB_1166:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],123
	jnz LB_1167
	jmp LB_1168
LB_1167:
	mov r8,unt_1
	jmp LB_1163
LB_1168:
	add r14,1
	jmp LB_1164
LB_1163:
	add rsp,0
	jmp LB_1159
LB_1164:
	jmp LB_1170
LB_1169:
	add r14,1 
LB_1170:
	cmp r14,r9
	jge LB_1171
	JZ_LINE_SPC BYTE [r13+8+r14], LB_1169
LB_1171
	call GRM_206
	cmp BYTE [r8+6],0
	jnz LB_1174
	jmp LB_1175
LB_1174:
	jmp LB_1172
LB_1175:
	sub rsp,8
	mov r8,[r8+8]
; .mov_ptn2 2'(= a2◂ [ a8◂ [ a13◂ [ {| l |}]]] ) ⊢ 8'(= a2◂ [ a8◂ [ a13◂ [ {| l |}]]] )
; .mov_ptn 2'(= a2◂ [ a8◂ [ a13◂ [ {| l |}]]] ) ⊢ 8'(= a2◂ [ a8◂ [ a13◂ [ {| l |}]]] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_1173
LB_1172:
	add rsp,0
	jmp LB_1159
LB_1173:
	jmp LB_1177
LB_1176:
	add r14,1 
LB_1177:
	cmp r14,r9
	jge LB_1178
	JZ_LINE_SPC BYTE [r13+8+r14], LB_1176
LB_1178
	lea rax,[r14+1]
	cmp rax,r9
	jg LB_1181
	jmp LB_1182
LB_1181:
	mov r8,unt_1
	jmp LB_1179
LB_1182:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],125
	jnz LB_1183
	jmp LB_1184
LB_1183:
	mov r8,unt_1
	jmp LB_1179
LB_1184:
	add r14,1
	jmp LB_1180
LB_1179:
	add rsp,8
	jmp LB_1159
LB_1180:
	mov QWORD [rsp+8*1],r14
	mov r13,QWORD [rsp+16+8*1]
	mov r14,QWORD [rsp+8*1]
	jmp LB_1186
LB_1186
;; rsp=1 , %1264~1'(= r ) %1263~0'(= r ) %1262~8'(= a2◂ [ a8◂ [ a13◂ [ {| l |}]]] ) 
; #79 8'(= a2◂ [ a8◂ [ a13◂ [ {| l |}]]] ) ⊢ 0(<2)◂8'(= a2◂ [ a8◂ [ a13◂ [ {| l |}]]] )
;; rsp=1 , %1265~0(<2)◂8'(= a2◂ [ a8◂ [ a13◂ [ {| l |}]]] ) %1264~1'(= r ) %1263~0'(= r ) 
; #22 0(<2)◂8'(= a2◂ [ a8◂ [ a13◂ [ {| l |}]]] ) ⊢ 0(<2)◂0(<2)◂8'(= a2◂ [ a8◂ [ a13◂ [ {| l |}]]] )
;; rsp=1 , %1266~0(<2)◂0(<2)◂8'(= a2◂ [ a8◂ [ a13◂ [ {| l |}]]] ) %1264~1'(= r ) %1263~0'(= r ) 
; ∎ 0(<2)◂0(<2)◂8'(= a2◂ [ a8◂ [ a13◂ [ {| l |}]]] )
; .dlt.ptn 1'(= r )
; .dlt.ptn 0'(= r )
; .mov_ptn2 0(<2)◂0(<2)◂8'(= a2◂ [ a8◂ [ a13◂ [ {| l |}]]] ) ⊢ 2'(= a3◂ [ a8◂ [ a13◂ [ {| l |}]]] )
; .mov_ptn 0(<2)◂0(<2)◂8'(= a2◂ [ a8◂ [ a13◂ [ {| l |}]]] ) ⊢ 2'(= a3◂ [ a8◂ [ a13◂ [ {| l |}]]] )
	mov rax,QWORD [rsp-8+8*1]
	mov rdi,rax
	mov rax,r15
	mov r15,QWORD [r15] 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov rdi,rax
	mov rax,r15
	mov r15,QWORD [r15] 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,8
	jmp LB_1185
LB_1185:
	cmp BYTE [r8+6],0
	jnz LB_1159
	pop r14
	pop r9
	add rsp,8
	pop r13
	ret
LB_1159:
	mov r9,QWORD [rsp+8]
	mov r14,QWORD [rsp+16]
	mov r13,QWORD [rsp+24]
	jmp LB_1189
LB_1188:
	add r14,1 
LB_1189:
	cmp r14,r9
	jge LB_1190
	JZ_LINE_SPC BYTE [r13+8+r14], LB_1188
LB_1190
	call GRM_209
	cmp BYTE [r8+6],0
	jnz LB_1193
	jmp LB_1194
LB_1193:
	jmp LB_1191
LB_1194:
	sub rsp,8
	mov r8,[r8+8]
; .mov_ptn2 2'(= a13◂ [ {| l |}] ) ⊢ 8'(= a13◂ [ {| l |}] )
; .mov_ptn 2'(= a13◂ [ {| l |}] ) ⊢ 8'(= a13◂ [ {| l |}] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_1192
LB_1191:
	add rsp,0
	jmp LB_1187
LB_1192:
	mov QWORD [rsp+8*1],r14
	mov r13,QWORD [rsp+16+8*1]
	mov r14,QWORD [rsp+8*1]
	jmp LB_1196
LB_1196
;; rsp=1 , %1269~1'(= r ) %1268~0'(= r ) %1267~8'(= a13◂ [ {| l |}] ) 
; #78 8'(= a13◂ [ {| l |}] ) ⊢ 1(<2)◂8'(= a13◂ [ {| l |}] )
;; rsp=1 , %1270~1(<2)◂8'(= a13◂ [ {| l |}] ) %1269~1'(= r ) %1268~0'(= r ) 
; #22 1(<2)◂8'(= a13◂ [ {| l |}] ) ⊢ 0(<2)◂1(<2)◂8'(= a13◂ [ {| l |}] )
;; rsp=1 , %1271~0(<2)◂1(<2)◂8'(= a13◂ [ {| l |}] ) %1269~1'(= r ) %1268~0'(= r ) 
; ∎ 0(<2)◂1(<2)◂8'(= a13◂ [ {| l |}] )
; .dlt.ptn 1'(= r )
; .dlt.ptn 0'(= r )
; .mov_ptn2 0(<2)◂1(<2)◂8'(= a13◂ [ {| l |}] ) ⊢ 2'(= a3◂ [ a8◂ [ a13◂ [ {| l |}]]] )
; .mov_ptn 0(<2)◂1(<2)◂8'(= a13◂ [ {| l |}] ) ⊢ 2'(= a3◂ [ a8◂ [ a13◂ [ {| l |}]]] )
	mov rax,QWORD [rsp-8+8*1]
	mov rdi,rax
	mov rax,r15
	mov r15,QWORD [r15] 
	mov QWORD [rax],0
	mov BYTE [rax+6],1
	mov QWORD [rax+8],rdi
	mov rdi,rax
	mov rax,r15
	mov r15,QWORD [r15] 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,8
	jmp LB_1195
LB_1195:
	cmp BYTE [r8+6],0
	jnz LB_1187
	pop r14
	pop r9
	add rsp,8
	pop r13
	ret
LB_1187:
	pop rdi
	pop r9 
	pop r14
	pop r13
	ret
ETR_206:
	mov r9,0x0000_ffff_ffff_ffff
	and r9,[r13]
	call GRM_206
	ret
GRM_206:
	sub rsp,32
	mov QWORD [rsp+24],r13
	mov QWORD [rsp+16],r14 
	mov QWORD [rsp+8],r9
	jmp LB_1199
LB_1198:
	add r14,1 
LB_1199:
	cmp r14,r9
	jge LB_1200
	JZ_LINE_SPC BYTE [r13+8+r14], LB_1198
LB_1200
	call GRM_205
	cmp BYTE [r8+6],0
	jnz LB_1203
	jmp LB_1204
LB_1203:
	jmp LB_1201
LB_1204:
	sub rsp,8
	mov r8,[r8+8]
; .mov_ptn2 2'(= a8◂ [ a13◂ [ {| l |}]] ) ⊢ 8'(= a8◂ [ a13◂ [ {| l |}]] )
; .mov_ptn 2'(= a8◂ [ a13◂ [ {| l |}]] ) ⊢ 8'(= a8◂ [ a13◂ [ {| l |}]] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_1202
LB_1201:
	add rsp,0
	jmp LB_1197
LB_1202:
	jmp LB_1206
LB_1205:
	add r14,1 
LB_1206:
	cmp r14,r9
	jge LB_1207
	JZ_LINE_SPC BYTE [r13+8+r14], LB_1205
LB_1207
	call GRM_206
	cmp BYTE [r8+6],0
	jnz LB_1210
	jmp LB_1211
LB_1210:
	jmp LB_1208
LB_1211:
	sub rsp,8
	mov r8,[r8+8]
; .mov_ptn2 2'(= a2◂ [ a8◂ [ a13◂ [ {| l |}]]] ) ⊢ 9'(= a2◂ [ a8◂ [ a13◂ [ {| l |}]]] )
; .mov_ptn 2'(= a2◂ [ a8◂ [ a13◂ [ {| l |}]]] ) ⊢ 9'(= a2◂ [ a8◂ [ a13◂ [ {| l |}]]] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_1209
LB_1208:
	add rsp,8
	jmp LB_1197
LB_1209:
	mov QWORD [rsp+8*2],r14
	mov r13,QWORD [rsp+16+8*2]
	mov r14,QWORD [rsp+8*2]
	jmp LB_1213
LB_1213
;; rsp=2 , %1275~1'(= r ) %1274~0'(= r ) %1273~9'(= a2◂ [ a8◂ [ a13◂ [ {| l |}]]] ) %1272~8'(= a8◂ [ a13◂ [ {| l |}]] ) 
; #21 { 8'(= a8◂ [ a13◂ [ {| l |}]] ) 9'(= a2◂ [ a8◂ [ a13◂ [ {| l |}]]] ) } ⊢ 0(<2)◂{ 8'(= a8◂ [ a13◂ [ {| l |}]] ) 9'(= a2◂ [ a8◂ [ a13◂ [ {| l |}]]] ) }
;; rsp=2 , %1276~0(<2)◂{ 8'(= a8◂ [ a13◂ [ {| l |}]] ) 9'(= a2◂ [ a8◂ [ a13◂ [ {| l |}]]] ) } %1275~1'(= r ) %1274~0'(= r ) 
; #22 0(<2)◂{ 8'(= a8◂ [ a13◂ [ {| l |}]] ) 9'(= a2◂ [ a8◂ [ a13◂ [ {| l |}]]] ) } ⊢ 0(<2)◂0(<2)◂{ 8'(= a8◂ [ a13◂ [ {| l |}]] ) 9'(= a2◂ [ a8◂ [ a13◂ [ {| l |}]]] ) }
;; rsp=2 , %1277~0(<2)◂0(<2)◂{ 8'(= a8◂ [ a13◂ [ {| l |}]] ) 9'(= a2◂ [ a8◂ [ a13◂ [ {| l |}]]] ) } %1275~1'(= r ) %1274~0'(= r ) 
; ∎ 0(<2)◂0(<2)◂{ 8'(= a8◂ [ a13◂ [ {| l |}]] ) 9'(= a2◂ [ a8◂ [ a13◂ [ {| l |}]]] ) }
; .dlt.ptn 1'(= r )
; .dlt.ptn 0'(= r )
; .mov_ptn2 0(<2)◂0(<2)◂{ 8'(= a8◂ [ a13◂ [ {| l |}]] ) 9'(= a2◂ [ a8◂ [ a13◂ [ {| l |}]]] ) } ⊢ 2'(= a3◂ [ a2◂ [ a8◂ [ a13◂ [ {| l |}]]]] )
; .mov_ptn 0(<2)◂0(<2)◂{ 8'(= a8◂ [ a13◂ [ {| l |}]] ) 9'(= a2◂ [ a8◂ [ a13◂ [ {| l |}]]] ) } ⊢ 2'(= a3◂ [ a2◂ [ a8◂ [ a13◂ [ {| l |}]]]] )
	mov rax,[SS_RCD_2_TOP]
	mov rsi,[rax] 
	mov QWORD [SS_RCD_2_TOP],rsi
	mov QWORD [rax],0
	mov r13,rax
	mov rax,QWORD [rsp-8+8*2]
	mov QWORD [r13+8+8*0],rax
	mov rax,QWORD [rsp-8+8*1]
	mov QWORD [r13+8+8*1],rax
	mov rax,r13
	mov BYTE [rax+6],0
	mov rdi,rax
	mov rax,r15
	mov r15,QWORD [r15] 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,16
	jmp LB_1212
LB_1212:
	cmp BYTE [r8+6],0
	jnz LB_1197
	pop r14
	pop r9
	add rsp,8
	pop r13
	ret
LB_1197:
	mov r9,QWORD [rsp+8]
	mov r14,QWORD [rsp+16]
	mov r13,QWORD [rsp+24]
	mov QWORD [rsp+8*0],r14
	mov r13,QWORD [rsp+16+8*0]
	mov r14,QWORD [rsp+8*0]
	jmp LB_1216
LB_1216
;; rsp=0 , %1279~1'(= r ) %1278~0'(= r ) 
; #20 { } ⊢ 1(<2)◂{ }
;; rsp=0 , %1280~1(<2)◂{ } %1279~1'(= r ) %1278~0'(= r ) 
; #22 1(<2)◂{ } ⊢ 0(<2)◂1(<2)◂{ }
;; rsp=0 , %1281~0(<2)◂1(<2)◂{ } %1279~1'(= r ) %1278~0'(= r ) 
; ∎ 0(<2)◂1(<2)◂{ }
; .dlt.ptn 1'(= r )
; .dlt.ptn 0'(= r )
; .mov_ptn2 0(<2)◂1(<2)◂{ } ⊢ 2'(= a3◂ [ a2◂ [ a8◂ [ a13◂ [ {| l |}]]]] )
; .mov_ptn 0(<2)◂1(<2)◂{ } ⊢ 2'(= a3◂ [ a2◂ [ a8◂ [ a13◂ [ {| l |}]]]] )
	mov rax,unt 
	mov rax,unt_1
	mov rdi,rax
	mov rax,r15
	mov r15,QWORD [r15] 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	jmp LB_1215
LB_1215:
	cmp BYTE [r8+6],0
	jnz LB_1214
	pop r14
	pop r9
	add rsp,8
	pop r13
	ret
LB_1214:
	pop rdi
	pop r9 
	pop r14
	pop r13
	ret
ETR_207:
	mov r9,0x0000_ffff_ffff_ffff
	and r9,[r13]
	call GRM_207
	ret
GRM_207:
	sub rsp,32
	mov QWORD [rsp+24],r13
	mov QWORD [rsp+16],r14 
	mov QWORD [rsp+8],r9
	jmp LB_1219
LB_1218:
	add r14,1 
LB_1219:
	cmp r14,r9
	jge LB_1220
	JZ_LINE_SPC BYTE [r13+8+r14], LB_1218
LB_1220
	lea rax,[r14+1]
	cmp rax,r9
	jg LB_1223
	jmp LB_1224
LB_1223:
	mov r8,unt_1
	jmp LB_1221
LB_1224:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],44
	jnz LB_1225
	jmp LB_1226
LB_1225:
	mov r8,unt_1
	jmp LB_1221
LB_1226:
	add r14,1
	jmp LB_1222
LB_1221:
	add rsp,0
	jmp LB_1217
LB_1222:
	jmp LB_1228
LB_1227:
	add r14,1 
LB_1228:
	cmp r14,r9
	jge LB_1229
	JZ_LINE_SPC BYTE [r13+8+r14], LB_1227
LB_1229
	call GRM_205
	cmp BYTE [r8+6],0
	jnz LB_1232
	jmp LB_1233
LB_1232:
	jmp LB_1230
LB_1233:
	sub rsp,8
	mov r8,[r8+8]
; .mov_ptn2 2'(= a8◂ [ a13◂ [ {| l |}]] ) ⊢ 8'(= a8◂ [ a13◂ [ {| l |}]] )
; .mov_ptn 2'(= a8◂ [ a13◂ [ {| l |}]] ) ⊢ 8'(= a8◂ [ a13◂ [ {| l |}]] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_1231
LB_1230:
	add rsp,0
	pop rdi
	pop r9 
	pop r14
	pop r13
	ret
LB_1231:
	jmp LB_1235
LB_1234:
	add r14,1 
LB_1235:
	cmp r14,r9
	jge LB_1236
	JZ_LINE_SPC BYTE [r13+8+r14], LB_1234
LB_1236
	call GRM_207
	cmp BYTE [r8+6],0
	jnz LB_1239
	jmp LB_1240
LB_1239:
	jmp LB_1237
LB_1240:
	sub rsp,8
	mov r8,[r8+8]
; .mov_ptn2 2'(= a2◂ [ a8◂ [ a13◂ [ {| l |}]]] ) ⊢ 9'(= a2◂ [ a8◂ [ a13◂ [ {| l |}]]] )
; .mov_ptn 2'(= a2◂ [ a8◂ [ a13◂ [ {| l |}]]] ) ⊢ 9'(= a2◂ [ a8◂ [ a13◂ [ {| l |}]]] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_1238
LB_1237:
	add rsp,8
	pop rdi
	pop r9 
	pop r14
	pop r13
	ret
LB_1238:
	mov QWORD [rsp+8*2],r14
	mov r13,QWORD [rsp+16+8*2]
	mov r14,QWORD [rsp+8*2]
	jmp LB_1242
LB_1242
;; rsp=2 , %1285~1'(= r ) %1284~0'(= r ) %1283~9'(= a2◂ [ a8◂ [ a13◂ [ {| l |}]]] ) %1282~8'(= a8◂ [ a13◂ [ {| l |}]] ) 
; #21 { 8'(= a8◂ [ a13◂ [ {| l |}]] ) 9'(= a2◂ [ a8◂ [ a13◂ [ {| l |}]]] ) } ⊢ 0(<2)◂{ 8'(= a8◂ [ a13◂ [ {| l |}]] ) 9'(= a2◂ [ a8◂ [ a13◂ [ {| l |}]]] ) }
;; rsp=2 , %1286~0(<2)◂{ 8'(= a8◂ [ a13◂ [ {| l |}]] ) 9'(= a2◂ [ a8◂ [ a13◂ [ {| l |}]]] ) } %1285~1'(= r ) %1284~0'(= r ) 
; #22 0(<2)◂{ 8'(= a8◂ [ a13◂ [ {| l |}]] ) 9'(= a2◂ [ a8◂ [ a13◂ [ {| l |}]]] ) } ⊢ 0(<2)◂0(<2)◂{ 8'(= a8◂ [ a13◂ [ {| l |}]] ) 9'(= a2◂ [ a8◂ [ a13◂ [ {| l |}]]] ) }
;; rsp=2 , %1287~0(<2)◂0(<2)◂{ 8'(= a8◂ [ a13◂ [ {| l |}]] ) 9'(= a2◂ [ a8◂ [ a13◂ [ {| l |}]]] ) } %1285~1'(= r ) %1284~0'(= r ) 
; ∎ 0(<2)◂0(<2)◂{ 8'(= a8◂ [ a13◂ [ {| l |}]] ) 9'(= a2◂ [ a8◂ [ a13◂ [ {| l |}]]] ) }
; .dlt.ptn 1'(= r )
; .dlt.ptn 0'(= r )
; .mov_ptn2 0(<2)◂0(<2)◂{ 8'(= a8◂ [ a13◂ [ {| l |}]] ) 9'(= a2◂ [ a8◂ [ a13◂ [ {| l |}]]] ) } ⊢ 2'(= a3◂ [ a2◂ [ a8◂ [ a13◂ [ {| l |}]]]] )
; .mov_ptn 0(<2)◂0(<2)◂{ 8'(= a8◂ [ a13◂ [ {| l |}]] ) 9'(= a2◂ [ a8◂ [ a13◂ [ {| l |}]]] ) } ⊢ 2'(= a3◂ [ a2◂ [ a8◂ [ a13◂ [ {| l |}]]]] )
	mov rax,[SS_RCD_2_TOP]
	mov rsi,[rax] 
	mov QWORD [SS_RCD_2_TOP],rsi
	mov QWORD [rax],0
	mov r13,rax
	mov rax,QWORD [rsp-8+8*2]
	mov QWORD [r13+8+8*0],rax
	mov rax,QWORD [rsp-8+8*1]
	mov QWORD [r13+8+8*1],rax
	mov rax,r13
	mov BYTE [rax+6],0
	mov rdi,rax
	mov rax,r15
	mov r15,QWORD [r15] 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,16
	jmp LB_1241
LB_1241:
	cmp BYTE [r8+6],0
	jnz LB_1217
	pop r14
	pop r9
	add rsp,8
	pop r13
	ret
LB_1217:
	mov r9,QWORD [rsp+8]
	mov r14,QWORD [rsp+16]
	mov r13,QWORD [rsp+24]
	mov QWORD [rsp+8*0],r14
	mov r13,QWORD [rsp+16+8*0]
	mov r14,QWORD [rsp+8*0]
	jmp LB_1245
LB_1245
;; rsp=0 , %1289~1'(= r ) %1288~0'(= r ) 
; #20 { } ⊢ 1(<2)◂{ }
;; rsp=0 , %1290~1(<2)◂{ } %1289~1'(= r ) %1288~0'(= r ) 
; #22 1(<2)◂{ } ⊢ 0(<2)◂1(<2)◂{ }
;; rsp=0 , %1291~0(<2)◂1(<2)◂{ } %1289~1'(= r ) %1288~0'(= r ) 
; ∎ 0(<2)◂1(<2)◂{ }
; .dlt.ptn 1'(= r )
; .dlt.ptn 0'(= r )
; .mov_ptn2 0(<2)◂1(<2)◂{ } ⊢ 2'(= a3◂ [ a2◂ [ a8◂ [ a13◂ [ {| l |}]]]] )
; .mov_ptn 0(<2)◂1(<2)◂{ } ⊢ 2'(= a3◂ [ a2◂ [ a8◂ [ a13◂ [ {| l |}]]]] )
	mov rax,unt 
	mov rax,unt_1
	mov rdi,rax
	mov rax,r15
	mov r15,QWORD [r15] 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	jmp LB_1244
LB_1244:
	cmp BYTE [r8+6],0
	jnz LB_1243
	pop r14
	pop r9
	add rsp,8
	pop r13
	ret
LB_1243:
	pop rdi
	pop r9 
	pop r14
	pop r13
	ret
ETR_208:
	mov r9,0x0000_ffff_ffff_ffff
	and r9,[r13]
	call GRM_208
	ret
GRM_208:
	sub rsp,32
	mov QWORD [rsp+24],r13
	mov QWORD [rsp+16],r14 
	mov QWORD [rsp+8],r9
	jmp LB_1248
LB_1247:
	add r14,1 
LB_1248:
	cmp r14,r9
	jge LB_1249
	JZ_LINE_SPC BYTE [r13+8+r14], LB_1247
LB_1249
	lea rax,[r14+1]
	cmp rax,r9
	jg LB_1252
	jmp LB_1253
LB_1252:
	mov r8,unt_1
	jmp LB_1250
LB_1253:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],44
	jnz LB_1254
	jmp LB_1255
LB_1254:
	mov r8,unt_1
	jmp LB_1250
LB_1255:
	add r14,1
	jmp LB_1251
LB_1250:
	add rsp,0
	jmp LB_1246
LB_1251:
	jmp LB_1257
LB_1256:
	add r14,1 
LB_1257:
	cmp r14,r9
	jge LB_1258
	JZ_LINE_SPC BYTE [r13+8+r14], LB_1256
LB_1258
	call GRM_209
	cmp BYTE [r8+6],0
	jnz LB_1261
	jmp LB_1262
LB_1261:
	jmp LB_1259
LB_1262:
	sub rsp,8
	mov r8,[r8+8]
; .mov_ptn2 2'(= a13◂ [ {| l |}] ) ⊢ 8'(= a13◂ [ {| l |}] )
; .mov_ptn 2'(= a13◂ [ {| l |}] ) ⊢ 8'(= a13◂ [ {| l |}] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_1260
LB_1259:
	add rsp,0
	pop rdi
	pop r9 
	pop r14
	pop r13
	ret
LB_1260:
	jmp LB_1264
LB_1263:
	add r14,1 
LB_1264:
	cmp r14,r9
	jge LB_1265
	JZ_LINE_SPC BYTE [r13+8+r14], LB_1263
LB_1265
	call GRM_208
	cmp BYTE [r8+6],0
	jnz LB_1268
	jmp LB_1269
LB_1268:
	jmp LB_1266
LB_1269:
	sub rsp,8
	mov r8,[r8+8]
; .mov_ptn2 2'(= a2◂ [ a13◂ [ {| l |}]] ) ⊢ 9'(= a2◂ [ a13◂ [ {| l |}]] )
; .mov_ptn 2'(= a2◂ [ a13◂ [ {| l |}]] ) ⊢ 9'(= a2◂ [ a13◂ [ {| l |}]] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_1267
LB_1266:
	add rsp,8
	pop rdi
	pop r9 
	pop r14
	pop r13
	ret
LB_1267:
	mov QWORD [rsp+8*2],r14
	mov r13,QWORD [rsp+16+8*2]
	mov r14,QWORD [rsp+8*2]
	jmp LB_1271
LB_1271
;; rsp=2 , %1295~1'(= r ) %1294~0'(= r ) %1293~9'(= a2◂ [ a13◂ [ {| l |}]] ) %1292~8'(= a13◂ [ {| l |}] ) 
; #21 { 8'(= a13◂ [ {| l |}] ) 9'(= a2◂ [ a13◂ [ {| l |}]] ) } ⊢ 0(<2)◂{ 8'(= a13◂ [ {| l |}] ) 9'(= a2◂ [ a13◂ [ {| l |}]] ) }
;; rsp=2 , %1296~0(<2)◂{ 8'(= a13◂ [ {| l |}] ) 9'(= a2◂ [ a13◂ [ {| l |}]] ) } %1295~1'(= r ) %1294~0'(= r ) 
; #22 0(<2)◂{ 8'(= a13◂ [ {| l |}] ) 9'(= a2◂ [ a13◂ [ {| l |}]] ) } ⊢ 0(<2)◂0(<2)◂{ 8'(= a13◂ [ {| l |}] ) 9'(= a2◂ [ a13◂ [ {| l |}]] ) }
;; rsp=2 , %1297~0(<2)◂0(<2)◂{ 8'(= a13◂ [ {| l |}] ) 9'(= a2◂ [ a13◂ [ {| l |}]] ) } %1295~1'(= r ) %1294~0'(= r ) 
; ∎ 0(<2)◂0(<2)◂{ 8'(= a13◂ [ {| l |}] ) 9'(= a2◂ [ a13◂ [ {| l |}]] ) }
; .dlt.ptn 1'(= r )
; .dlt.ptn 0'(= r )
; .mov_ptn2 0(<2)◂0(<2)◂{ 8'(= a13◂ [ {| l |}] ) 9'(= a2◂ [ a13◂ [ {| l |}]] ) } ⊢ 2'(= a3◂ [ a2◂ [ a13◂ [ {| l |}]]] )
; .mov_ptn 0(<2)◂0(<2)◂{ 8'(= a13◂ [ {| l |}] ) 9'(= a2◂ [ a13◂ [ {| l |}]] ) } ⊢ 2'(= a3◂ [ a2◂ [ a13◂ [ {| l |}]]] )
	mov rax,[SS_RCD_2_TOP]
	mov rsi,[rax] 
	mov QWORD [SS_RCD_2_TOP],rsi
	mov QWORD [rax],0
	mov r13,rax
	mov rax,QWORD [rsp-8+8*2]
	mov QWORD [r13+8+8*0],rax
	mov rax,QWORD [rsp-8+8*1]
	mov QWORD [r13+8+8*1],rax
	mov rax,r13
	mov BYTE [rax+6],0
	mov rdi,rax
	mov rax,r15
	mov r15,QWORD [r15] 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,16
	jmp LB_1270
LB_1270:
	cmp BYTE [r8+6],0
	jnz LB_1246
	pop r14
	pop r9
	add rsp,8
	pop r13
	ret
LB_1246:
	mov r9,QWORD [rsp+8]
	mov r14,QWORD [rsp+16]
	mov r13,QWORD [rsp+24]
	mov QWORD [rsp+8*0],r14
	mov r13,QWORD [rsp+16+8*0]
	mov r14,QWORD [rsp+8*0]
	jmp LB_1274
LB_1274
;; rsp=0 , %1299~1'(= r ) %1298~0'(= r ) 
; #20 { } ⊢ 1(<2)◂{ }
;; rsp=0 , %1300~1(<2)◂{ } %1299~1'(= r ) %1298~0'(= r ) 
; #22 1(<2)◂{ } ⊢ 0(<2)◂1(<2)◂{ }
;; rsp=0 , %1301~0(<2)◂1(<2)◂{ } %1299~1'(= r ) %1298~0'(= r ) 
; ∎ 0(<2)◂1(<2)◂{ }
; .dlt.ptn 1'(= r )
; .dlt.ptn 0'(= r )
; .mov_ptn2 0(<2)◂1(<2)◂{ } ⊢ 2'(= a3◂ [ a2◂ [ a13◂ [ {| l |}]]] )
; .mov_ptn 0(<2)◂1(<2)◂{ } ⊢ 2'(= a3◂ [ a2◂ [ a13◂ [ {| l |}]]] )
	mov rax,unt 
	mov rax,unt_1
	mov rdi,rax
	mov rax,r15
	mov r15,QWORD [r15] 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	jmp LB_1273
LB_1273:
	cmp BYTE [r8+6],0
	jnz LB_1272
	pop r14
	pop r9
	add rsp,8
	pop r13
	ret
LB_1272:
	pop rdi
	pop r9 
	pop r14
	pop r13
	ret
ETR_209:
	mov r9,0x0000_ffff_ffff_ffff
	and r9,[r13]
	call GRM_209
	ret
GRM_209:
	sub rsp,32
	mov QWORD [rsp+24],r13
	mov QWORD [rsp+16],r14 
	mov QWORD [rsp+8],r9
	lea rax,[r14+1]
	cmp rax,r9
	jg LB_1278
	jmp LB_1279
LB_1278:
	mov r8,unt_1
	jmp LB_1276
LB_1279:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],37
	jnz LB_1280
	jmp LB_1281
LB_1280:
	mov r8,unt_1
	jmp LB_1276
LB_1281:
	add r14,1
	jmp LB_1277
LB_1276:
	add rsp,0
	jmp LB_1275
LB_1277:
	call GRM_74
	cmp BYTE [r8+6],0
	jnz LB_1284
	jmp LB_1285
LB_1284:
	jmp LB_1282
LB_1285:
	sub rsp,8
; .mov_ptn2 2'(= {| l |} ) ⊢ 8'(= {| l |} )
; .mov_ptn 2'(= {| l |} ) ⊢ 8'(= {| l |} )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_1283
LB_1282:
	add rsp,0
	pop rdi
	pop r9 
	pop r14
	pop r13
	ret
LB_1283:
	mov QWORD [rsp+8*1],r14
	mov r13,QWORD [rsp+16+8*1]
	mov r14,QWORD [rsp+8*1]
	jmp LB_1287
LB_1287
;; rsp=1 , %1304~1'(= r ) %1303~0'(= r ) %1302~8'(= {| l |} ) 
; #89 8'(= {| l |} ) ⊢ 1(<2)◂8'(= {| l |} )
;; rsp=1 , %1305~1(<2)◂8'(= {| l |} ) %1304~1'(= r ) %1303~0'(= r ) 
; #22 1(<2)◂8'(= {| l |} ) ⊢ 0(<2)◂1(<2)◂8'(= {| l |} )
;; rsp=1 , %1306~0(<2)◂1(<2)◂8'(= {| l |} ) %1304~1'(= r ) %1303~0'(= r ) 
; ∎ 0(<2)◂1(<2)◂8'(= {| l |} )
; .dlt.ptn 1'(= r )
; .dlt.ptn 0'(= r )
; .mov_ptn2 0(<2)◂1(<2)◂8'(= {| l |} ) ⊢ 2'(= a3◂ [ a13◂ [ {| l |}]] )
; .mov_ptn 0(<2)◂1(<2)◂8'(= {| l |} ) ⊢ 2'(= a3◂ [ a13◂ [ {| l |}]] )
	mov rax,QWORD [rsp-8+8*1]
	mov BYTE [rax+6],1
	mov rdi,rax
	mov rax,r15
	mov r15,QWORD [r15] 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,8
	jmp LB_1286
LB_1286:
	cmp BYTE [r8+6],0
	jnz LB_1275
	pop r14
	pop r9
	add rsp,8
	pop r13
	ret
LB_1275:
	mov r9,QWORD [rsp+8]
	mov r14,QWORD [rsp+16]
	mov r13,QWORD [rsp+24]
	call GRM_74
	cmp BYTE [r8+6],0
	jnz LB_1291
	jmp LB_1292
LB_1291:
	jmp LB_1289
LB_1292:
	sub rsp,8
; .mov_ptn2 2'(= {| l |} ) ⊢ 8'(= {| l |} )
; .mov_ptn 2'(= {| l |} ) ⊢ 8'(= {| l |} )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_1290
LB_1289:
	add rsp,0
	jmp LB_1288
LB_1290:
	mov QWORD [rsp+8*1],r14
	mov r13,QWORD [rsp+16+8*1]
	mov r14,QWORD [rsp+8*1]
	jmp LB_1294
LB_1294
;; rsp=1 , %1309~1'(= r ) %1308~0'(= r ) %1307~8'(= {| l |} ) 
; #89 8'(= {| l |} ) ⊢ 1(<2)◂8'(= {| l |} )
;; rsp=1 , %1310~1(<2)◂8'(= {| l |} ) %1309~1'(= r ) %1308~0'(= r ) 
; #22 1(<2)◂8'(= {| l |} ) ⊢ 0(<2)◂1(<2)◂8'(= {| l |} )
;; rsp=1 , %1311~0(<2)◂1(<2)◂8'(= {| l |} ) %1309~1'(= r ) %1308~0'(= r ) 
; ∎ 0(<2)◂1(<2)◂8'(= {| l |} )
; .dlt.ptn 1'(= r )
; .dlt.ptn 0'(= r )
; .mov_ptn2 0(<2)◂1(<2)◂8'(= {| l |} ) ⊢ 2'(= a3◂ [ a13◂ [ {| l |}]] )
; .mov_ptn 0(<2)◂1(<2)◂8'(= {| l |} ) ⊢ 2'(= a3◂ [ a13◂ [ {| l |}]] )
	mov rax,QWORD [rsp-8+8*1]
	mov BYTE [rax+6],1
	mov rdi,rax
	mov rax,r15
	mov r15,QWORD [r15] 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,8
	jmp LB_1293
LB_1293:
	cmp BYTE [r8+6],0
	jnz LB_1288
	pop r14
	pop r9
	add rsp,8
	pop r13
	ret
LB_1288:
	mov r9,QWORD [rsp+8]
	mov r14,QWORD [rsp+16]
	mov r13,QWORD [rsp+24]
	lea rax,[r14+1]
	cmp rax,r9
	jg LB_1298
	jmp LB_1299
LB_1298:
	mov r8,unt_1
	jmp LB_1296
LB_1299:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],95
	jnz LB_1300
	jmp LB_1301
LB_1300:
	mov r8,unt_1
	jmp LB_1296
LB_1301:
	add r14,1
	jmp LB_1297
LB_1296:
	add rsp,0
	jmp LB_1295
LB_1297:
	mov QWORD [rsp+8*0],r14
	mov r13,QWORD [rsp+16+8*0]
	mov r14,QWORD [rsp+8*0]
	jmp LB_1303
LB_1303
;; rsp=0 , %1313~1'(= r ) %1312~0'(= r ) 
; #23 { } ⊢ 1(<2)◂{ }
;; rsp=0 , %1314~1(<2)◂{ } %1313~1'(= r ) %1312~0'(= r ) 
; #90 1(<2)◂{ } ⊢ 0(<2)◂1(<2)◂{ }
;; rsp=0 , %1315~0(<2)◂1(<2)◂{ } %1313~1'(= r ) %1312~0'(= r ) 
; #22 0(<2)◂1(<2)◂{ } ⊢ 0(<2)◂0(<2)◂1(<2)◂{ }
;; rsp=0 , %1316~0(<2)◂0(<2)◂1(<2)◂{ } %1313~1'(= r ) %1312~0'(= r ) 
; ∎ 0(<2)◂0(<2)◂1(<2)◂{ }
; .dlt.ptn 1'(= r )
; .dlt.ptn 0'(= r )
; .mov_ptn2 0(<2)◂0(<2)◂1(<2)◂{ } ⊢ 2'(= a3◂ [ a13◂ [ {| l |}]] )
; .mov_ptn 0(<2)◂0(<2)◂1(<2)◂{ } ⊢ 2'(= a3◂ [ a13◂ [ {| l |}]] )
	mov rax,unt 
	mov rax,unt_1
	mov rdi,rax
	mov rax,r15
	mov r15,QWORD [r15] 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov rdi,rax
	mov rax,r15
	mov r15,QWORD [r15] 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	jmp LB_1302
LB_1302:
	cmp BYTE [r8+6],0
	jnz LB_1295
	pop r14
	pop r9
	add rsp,8
	pop r13
	ret
LB_1295:
	pop rdi
	pop r9 
	pop r14
	pop r13
	ret
ETR_210:
	mov r9,0x0000_ffff_ffff_ffff
	and r9,[r13]
	call GRM_210
	ret
GRM_210:
	sub rsp,32
	mov QWORD [rsp+24],r13
	mov QWORD [rsp+16],r14 
	mov QWORD [rsp+8],r9
	jmp LB_1306
LB_1305:
	add r14,1 
LB_1306:
	cmp r14,r9
	jge LB_1307
	JZ_LINE_SPC BYTE [r13+8+r14], LB_1305
LB_1307
	call GRM_214
	cmp BYTE [r8+6],0
	jnz LB_1310
	jmp LB_1311
LB_1310:
	jmp LB_1308
LB_1311:
	sub rsp,8
	mov r8,[r8+8]
; .mov_ptn2 2'(= a23◂ [ ] ) ⊢ 8'(= a23◂ [ ] )
; .mov_ptn 2'(= a23◂ [ ] ) ⊢ 8'(= a23◂ [ ] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_1309
LB_1308:
	add rsp,0
	jmp LB_1304
LB_1309:
	jmp LB_1313
LB_1312:
	add r14,1 
LB_1313:
	cmp r14,r9
	jge LB_1314
	JZ_LINE_SPC BYTE [r13+8+r14], LB_1312
LB_1314
	call GRM_213
	cmp BYTE [r8+6],0
	jnz LB_1317
	jmp LB_1318
LB_1317:
	jmp LB_1315
LB_1318:
	sub rsp,8
	mov r8,[r8+8]
; .mov_ptn2 2'(= a2◂ [ a23◂ [ ]] ) ⊢ 9'(= a2◂ [ a23◂ [ ]] )
; .mov_ptn 2'(= a2◂ [ a23◂ [ ]] ) ⊢ 9'(= a2◂ [ a23◂ [ ]] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_1316
LB_1315:
	add rsp,8
	jmp LB_1304
LB_1316:
	jmp LB_1320
LB_1319:
	add r14,1 
LB_1320:
	cmp r14,r9
	jge LB_1321
	JZ_LINE_SPC BYTE [r13+8+r14], LB_1319
LB_1321
	call GRM_212
	cmp BYTE [r8+6],0
	jnz LB_1324
	jmp LB_1325
LB_1324:
	jmp LB_1322
LB_1325:
	sub rsp,8
	mov r8,[r8+8]
; .mov_ptn2 2'(= a3◂ [ a23◂ [ ]] ) ⊢ 10'(= a3◂ [ a23◂ [ ]] )
; .mov_ptn 2'(= a3◂ [ a23◂ [ ]] ) ⊢ 10'(= a3◂ [ a23◂ [ ]] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_1323
LB_1322:
	add rsp,16
	jmp LB_1304
LB_1323:
	mov QWORD [rsp+8*3],r14
	mov r13,QWORD [rsp+16+8*3]
	mov r14,QWORD [rsp+8*3]
	jmp LB_1327
LB_1327
;; rsp=3 , %1321~1'(= r ) %1320~0'(= r ) %1319~10'(= a3◂ [ a23◂ [ ]] ) %1318~9'(= a2◂ [ a23◂ [ ]] ) %1317~8'(= a23◂ [ ] ) 
; rsp_d=0, #186 { 8'(= a23◂ [ ] ) 9'(= a2◂ [ a23◂ [ ]] ) } ⊢ 2'(= a23◂ [ ] )
	sub rsp,16
	mov QWORD [rsp+8*0],r13
	mov QWORD [rsp+8*1],r14
; .mov_ptn2 { 8'(= a23◂ [ ] ) 9'(= a2◂ [ a23◂ [ ]] ) } ⊢ { 0'(= a23◂ [ ] ) 1'(= a2◂ [ a23◂ [ ]] ) }
; .mov_ptn 9'(= a2◂ [ a23◂ [ ]] ) ⊢ 1'(= a2◂ [ a23◂ [ ]] )
	mov rax,QWORD [rsp-8+8*4]
	mov r14,rax
; .mov_ptn 8'(= a23◂ [ ] ) ⊢ 0'(= a23◂ [ ] )
	mov rax,QWORD [rsp-8+8*5]
	mov r13,rax
	call ETR_186

	mov r14,QWORD [rsp-8+8*2]
	mov rax,QWORD [rsp-8+8*1]
	mov r8,r13
	mov r13,rax
	add rsp,16
;; rsp=3 , %1322~2'(= a23◂ [ ] ) %1321~1'(= r ) %1320~0'(= r ) %1319~10'(= a3◂ [ a23◂ [ ]] ) 
;; ?; 10'(= a3◂ [ a23◂ [ ]] ) ⊢ 0(<2)◂3'(= a23◂ [ ] )
	mov rdi,QWORD [rsp-8+8*1]
	cmp BYTE [rdi+6],0
	jnz LB_1328
	mov rax,QWORD [rdi+8]
	mov r9,rax
;; rsp=3 , %1323~3'(= a23◂ [ ] ) %1322~2'(= a23◂ [ ] ) %1321~1'(= r ) %1320~0'(= r ) 
; #139 { 2'(= a23◂ [ ] ) 3'(= a23◂ [ ] ) } ⊢ 1(<5)◂{ 2'(= a23◂ [ ] ) 3'(= a23◂ [ ] ) }
;; rsp=3 , %1324~1(<5)◂{ 2'(= a23◂ [ ] ) 3'(= a23◂ [ ] ) } %1321~1'(= r ) %1320~0'(= r ) 
; #22 1(<5)◂{ 2'(= a23◂ [ ] ) 3'(= a23◂ [ ] ) } ⊢ 0(<2)◂1(<5)◂{ 2'(= a23◂ [ ] ) 3'(= a23◂ [ ] ) }
;; rsp=3 , %1325~0(<2)◂1(<5)◂{ 2'(= a23◂ [ ] ) 3'(= a23◂ [ ] ) } %1321~1'(= r ) %1320~0'(= r ) 
; ∎ 0(<2)◂1(<5)◂{ 2'(= a23◂ [ ] ) 3'(= a23◂ [ ] ) }
; .dlt.ptn 1'(= r )
; .dlt.ptn 0'(= r )
; .mov_ptn2 0(<2)◂1(<5)◂{ 2'(= a23◂ [ ] ) 3'(= a23◂ [ ] ) } ⊢ 2'(= a3◂ [ a23◂ [ ]] )
	mov r13,r8
; .mov_ptn 0(<2)◂1(<5)◂{ 0'(= a23◂ [ ] ) 3'(= a23◂ [ ] ) } ⊢ 2'(= a3◂ [ a23◂ [ ]] )
	mov rax,[SS_RCD_2_TOP]
	mov rsi,[rax] 
	mov QWORD [SS_RCD_2_TOP],rsi
	mov QWORD [rax],0
	mov r14,rax
	mov rax,r13
	mov QWORD [r14+8+8*0],rax
	mov rax,r9
	mov QWORD [r14+8+8*1],rax
	mov rax,r14
	mov BYTE [rax+6],1
	mov rdi,rax
	mov rax,r15
	mov r15,QWORD [r15] 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,24
	jmp LB_1326
LB_1328:
;; ?; 10'(= a3◂ [ a23◂ [ ]] ) ⊢ 1(<2)◂{ }
;; rsp=3 , %1322~2'(= a23◂ [ ] ) %1321~1'(= r ) %1320~0'(= r ) 
; #22 2'(= a23◂ [ ] ) ⊢ 0(<2)◂2'(= a23◂ [ ] )
;; rsp=3 , %1326~0(<2)◂2'(= a23◂ [ ] ) %1321~1'(= r ) %1320~0'(= r ) 
; ∎ 0(<2)◂2'(= a23◂ [ ] )
; .dlt.ptn 1'(= r )
; .dlt.ptn 0'(= r )
; .mov_ptn2 0(<2)◂2'(= a23◂ [ ] ) ⊢ 2'(= a3◂ [ a23◂ [ ]] )
	mov r13,r8
; .mov_ptn 0(<2)◂0'(= a23◂ [ ] ) ⊢ 2'(= a3◂ [ a23◂ [ ]] )
	mov rax,r13
	mov rdi,rax
	mov rax,r15
	mov r15,QWORD [r15] 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,24
	jmp LB_1326
LB_1326:
	cmp BYTE [r8+6],0
	jnz LB_1304
	pop r14
	pop r9
	add rsp,8
	pop r13
	ret
LB_1304:
	pop rdi
	pop r9 
	pop r14
	pop r13
	ret
ETR_211:
	mov r9,0x0000_ffff_ffff_ffff
	and r9,[r13]
	call GRM_211
	ret
GRM_211:
	sub rsp,32
	mov QWORD [rsp+24],r13
	mov QWORD [rsp+16],r14 
	mov QWORD [rsp+8],r9
	jmp LB_1331
LB_1330:
	add r14,1 
LB_1331:
	cmp r14,r9
	jge LB_1332
	JZ_LINE_SPC BYTE [r13+8+r14], LB_1330
LB_1332
	call GRM_210
	cmp BYTE [r8+6],0
	jnz LB_1335
	jmp LB_1336
LB_1335:
	jmp LB_1333
LB_1336:
	sub rsp,8
	mov r8,[r8+8]
; .mov_ptn2 2'(= a23◂ [ ] ) ⊢ 8'(= a23◂ [ ] )
; .mov_ptn 2'(= a23◂ [ ] ) ⊢ 8'(= a23◂ [ ] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_1334
LB_1333:
	add rsp,0
	jmp LB_1329
LB_1334:
	jmp LB_1338
LB_1337:
	add r14,1 
LB_1338:
	cmp r14,r9
	jge LB_1339
	JZ_LINE_SPC BYTE [r13+8+r14], LB_1337
LB_1339
	call GRM_211
	cmp BYTE [r8+6],0
	jnz LB_1342
	jmp LB_1343
LB_1342:
	jmp LB_1340
LB_1343:
	sub rsp,8
	mov r8,[r8+8]
; .mov_ptn2 2'(= a2◂ [ a23◂ [ ]] ) ⊢ 9'(= a2◂ [ a23◂ [ ]] )
; .mov_ptn 2'(= a2◂ [ a23◂ [ ]] ) ⊢ 9'(= a2◂ [ a23◂ [ ]] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_1341
LB_1340:
	add rsp,8
	jmp LB_1329
LB_1341:
	mov QWORD [rsp+8*2],r14
	mov r13,QWORD [rsp+16+8*2]
	mov r14,QWORD [rsp+8*2]
	jmp LB_1345
LB_1345
;; rsp=2 , %1330~1'(= r ) %1329~0'(= r ) %1328~9'(= a2◂ [ a23◂ [ ]] ) %1327~8'(= a23◂ [ ] ) 
; #21 { 8'(= a23◂ [ ] ) 9'(= a2◂ [ a23◂ [ ]] ) } ⊢ 0(<2)◂{ 8'(= a23◂ [ ] ) 9'(= a2◂ [ a23◂ [ ]] ) }
;; rsp=2 , %1331~0(<2)◂{ 8'(= a23◂ [ ] ) 9'(= a2◂ [ a23◂ [ ]] ) } %1330~1'(= r ) %1329~0'(= r ) 
; #22 0(<2)◂{ 8'(= a23◂ [ ] ) 9'(= a2◂ [ a23◂ [ ]] ) } ⊢ 0(<2)◂0(<2)◂{ 8'(= a23◂ [ ] ) 9'(= a2◂ [ a23◂ [ ]] ) }
;; rsp=2 , %1332~0(<2)◂0(<2)◂{ 8'(= a23◂ [ ] ) 9'(= a2◂ [ a23◂ [ ]] ) } %1330~1'(= r ) %1329~0'(= r ) 
; ∎ 0(<2)◂0(<2)◂{ 8'(= a23◂ [ ] ) 9'(= a2◂ [ a23◂ [ ]] ) }
; .dlt.ptn 1'(= r )
; .dlt.ptn 0'(= r )
; .mov_ptn2 0(<2)◂0(<2)◂{ 8'(= a23◂ [ ] ) 9'(= a2◂ [ a23◂ [ ]] ) } ⊢ 2'(= a3◂ [ a2◂ [ a23◂ [ ]]] )
; .mov_ptn 0(<2)◂0(<2)◂{ 8'(= a23◂ [ ] ) 9'(= a2◂ [ a23◂ [ ]] ) } ⊢ 2'(= a3◂ [ a2◂ [ a23◂ [ ]]] )
	mov rax,[SS_RCD_2_TOP]
	mov rsi,[rax] 
	mov QWORD [SS_RCD_2_TOP],rsi
	mov QWORD [rax],0
	mov r13,rax
	mov rax,QWORD [rsp-8+8*2]
	mov QWORD [r13+8+8*0],rax
	mov rax,QWORD [rsp-8+8*1]
	mov QWORD [r13+8+8*1],rax
	mov rax,r13
	mov BYTE [rax+6],0
	mov rdi,rax
	mov rax,r15
	mov r15,QWORD [r15] 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,16
	jmp LB_1344
LB_1344:
	cmp BYTE [r8+6],0
	jnz LB_1329
	pop r14
	pop r9
	add rsp,8
	pop r13
	ret
LB_1329:
	mov r9,QWORD [rsp+8]
	mov r14,QWORD [rsp+16]
	mov r13,QWORD [rsp+24]
	mov QWORD [rsp+8*0],r14
	mov r13,QWORD [rsp+16+8*0]
	mov r14,QWORD [rsp+8*0]
	jmp LB_1348
LB_1348
;; rsp=0 , %1334~1'(= r ) %1333~0'(= r ) 
; #20 { } ⊢ 1(<2)◂{ }
;; rsp=0 , %1335~1(<2)◂{ } %1334~1'(= r ) %1333~0'(= r ) 
; #22 1(<2)◂{ } ⊢ 0(<2)◂1(<2)◂{ }
;; rsp=0 , %1336~0(<2)◂1(<2)◂{ } %1334~1'(= r ) %1333~0'(= r ) 
; ∎ 0(<2)◂1(<2)◂{ }
; .dlt.ptn 1'(= r )
; .dlt.ptn 0'(= r )
; .mov_ptn2 0(<2)◂1(<2)◂{ } ⊢ 2'(= a3◂ [ a2◂ [ a23◂ [ ]]] )
; .mov_ptn 0(<2)◂1(<2)◂{ } ⊢ 2'(= a3◂ [ a2◂ [ a23◂ [ ]]] )
	mov rax,unt 
	mov rax,unt_1
	mov rdi,rax
	mov rax,r15
	mov r15,QWORD [r15] 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	jmp LB_1347
LB_1347:
	cmp BYTE [r8+6],0
	jnz LB_1346
	pop r14
	pop r9
	add rsp,8
	pop r13
	ret
LB_1346:
	pop rdi
	pop r9 
	pop r14
	pop r13
	ret
ETR_212:
	mov r9,0x0000_ffff_ffff_ffff
	and r9,[r13]
	call GRM_212
	ret
GRM_212:
	sub rsp,32
	mov QWORD [rsp+24],r13
	mov QWORD [rsp+16],r14 
	mov QWORD [rsp+8],r9
	jmp LB_1351
LB_1350:
	add r14,1 
LB_1351:
	cmp r14,r9
	jge LB_1352
	JZ_LINE_SPC BYTE [r13+8+r14], LB_1350
LB_1352
	lea rax,[r14+3]
	cmp rax,r9
	jg LB_1355
	jmp LB_1356
LB_1355:
	mov r8,unt_1
	jmp LB_1353
LB_1356:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],226
	jnz LB_1357
	cmp BYTE [rdi+1],134
	jnz LB_1357
	cmp BYTE [rdi+2],146
	jnz LB_1357
	jmp LB_1358
LB_1357:
	mov r8,unt_1
	jmp LB_1353
LB_1358:
	add r14,3
	jmp LB_1354
LB_1353:
	add rsp,0
	jmp LB_1349
LB_1354:
	jmp LB_1360
LB_1359:
	add r14,1 
LB_1360:
	cmp r14,r9
	jge LB_1361
	JZ_LINE_SPC BYTE [r13+8+r14], LB_1359
LB_1361
	call GRM_210
	cmp BYTE [r8+6],0
	jnz LB_1364
	jmp LB_1365
LB_1364:
	jmp LB_1362
LB_1365:
	sub rsp,8
	mov r8,[r8+8]
; .mov_ptn2 2'(= a23◂ [ ] ) ⊢ 8'(= a23◂ [ ] )
; .mov_ptn 2'(= a23◂ [ ] ) ⊢ 8'(= a23◂ [ ] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_1363
LB_1362:
	add rsp,0
	jmp LB_1349
LB_1363:
	mov QWORD [rsp+8*1],r14
	mov r13,QWORD [rsp+16+8*1]
	mov r14,QWORD [rsp+8*1]
	jmp LB_1367
LB_1367
;; rsp=1 , %1339~1'(= r ) %1338~0'(= r ) %1337~8'(= a23◂ [ ] ) 
; #22 8'(= a23◂ [ ] ) ⊢ 0(<2)◂8'(= a23◂ [ ] )
;; rsp=1 , %1340~0(<2)◂8'(= a23◂ [ ] ) %1339~1'(= r ) %1338~0'(= r ) 
; #22 0(<2)◂8'(= a23◂ [ ] ) ⊢ 0(<2)◂0(<2)◂8'(= a23◂ [ ] )
;; rsp=1 , %1341~0(<2)◂0(<2)◂8'(= a23◂ [ ] ) %1339~1'(= r ) %1338~0'(= r ) 
; ∎ 0(<2)◂0(<2)◂8'(= a23◂ [ ] )
; .dlt.ptn 1'(= r )
; .dlt.ptn 0'(= r )
; .mov_ptn2 0(<2)◂0(<2)◂8'(= a23◂ [ ] ) ⊢ 2'(= a3◂ [ a3◂ [ a23◂ [ ]]] )
; .mov_ptn 0(<2)◂0(<2)◂8'(= a23◂ [ ] ) ⊢ 2'(= a3◂ [ a3◂ [ a23◂ [ ]]] )
	mov rax,QWORD [rsp-8+8*1]
	mov rdi,rax
	mov rax,r15
	mov r15,QWORD [r15] 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov rdi,rax
	mov rax,r15
	mov r15,QWORD [r15] 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,8
	jmp LB_1366
LB_1366:
	cmp BYTE [r8+6],0
	jnz LB_1349
	pop r14
	pop r9
	add rsp,8
	pop r13
	ret
LB_1349:
	mov r9,QWORD [rsp+8]
	mov r14,QWORD [rsp+16]
	mov r13,QWORD [rsp+24]
	mov QWORD [rsp+8*0],r14
	mov r13,QWORD [rsp+16+8*0]
	mov r14,QWORD [rsp+8*0]
	jmp LB_1370
LB_1370
;; rsp=0 , %1343~1'(= r ) %1342~0'(= r ) 
; #23 { } ⊢ 1(<2)◂{ }
;; rsp=0 , %1344~1(<2)◂{ } %1343~1'(= r ) %1342~0'(= r ) 
; #22 1(<2)◂{ } ⊢ 0(<2)◂1(<2)◂{ }
;; rsp=0 , %1345~0(<2)◂1(<2)◂{ } %1343~1'(= r ) %1342~0'(= r ) 
; ∎ 0(<2)◂1(<2)◂{ }
; .dlt.ptn 1'(= r )
; .dlt.ptn 0'(= r )
; .mov_ptn2 0(<2)◂1(<2)◂{ } ⊢ 2'(= a3◂ [ a3◂ [ a23◂ [ ]]] )
; .mov_ptn 0(<2)◂1(<2)◂{ } ⊢ 2'(= a3◂ [ a3◂ [ a23◂ [ ]]] )
	mov rax,unt 
	mov rax,unt_1
	mov rdi,rax
	mov rax,r15
	mov r15,QWORD [r15] 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	jmp LB_1369
LB_1369:
	cmp BYTE [r8+6],0
	jnz LB_1368
	pop r14
	pop r9
	add rsp,8
	pop r13
	ret
LB_1368:
	pop rdi
	pop r9 
	pop r14
	pop r13
	ret
ETR_213:
	mov r9,0x0000_ffff_ffff_ffff
	and r9,[r13]
	call GRM_213
	ret
GRM_213:
	sub rsp,32
	mov QWORD [rsp+24],r13
	mov QWORD [rsp+16],r14 
	mov QWORD [rsp+8],r9
	jmp LB_1373
LB_1372:
	add r14,1 
LB_1373:
	cmp r14,r9
	jge LB_1374
	JZ_LINE_SPC BYTE [r13+8+r14], LB_1372
LB_1374
	lea rax,[r14+3]
	cmp rax,r9
	jg LB_1377
	jmp LB_1378
LB_1377:
	mov r8,unt_1
	jmp LB_1375
LB_1378:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],226
	jnz LB_1379
	cmp BYTE [rdi+1],151
	jnz LB_1379
	cmp BYTE [rdi+2],130
	jnz LB_1379
	jmp LB_1380
LB_1379:
	mov r8,unt_1
	jmp LB_1375
LB_1380:
	add r14,3
	jmp LB_1376
LB_1375:
	add rsp,0
	jmp LB_1371
LB_1376:
	jmp LB_1382
LB_1381:
	add r14,1 
LB_1382:
	cmp r14,r9
	jge LB_1383
	JZ_LINE_SPC BYTE [r13+8+r14], LB_1381
LB_1383
	call GRM_214
	cmp BYTE [r8+6],0
	jnz LB_1386
	jmp LB_1387
LB_1386:
	jmp LB_1384
LB_1387:
	sub rsp,8
	mov r8,[r8+8]
; .mov_ptn2 2'(= a23◂ [ ] ) ⊢ 8'(= a23◂ [ ] )
; .mov_ptn 2'(= a23◂ [ ] ) ⊢ 8'(= a23◂ [ ] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_1385
LB_1384:
	add rsp,0
	jmp LB_1371
LB_1385:
	jmp LB_1389
LB_1388:
	add r14,1 
LB_1389:
	cmp r14,r9
	jge LB_1390
	JZ_LINE_SPC BYTE [r13+8+r14], LB_1388
LB_1390
	call GRM_213
	cmp BYTE [r8+6],0
	jnz LB_1393
	jmp LB_1394
LB_1393:
	jmp LB_1391
LB_1394:
	sub rsp,8
	mov r8,[r8+8]
; .mov_ptn2 2'(= a2◂ [ a23◂ [ ]] ) ⊢ 9'(= a2◂ [ a23◂ [ ]] )
; .mov_ptn 2'(= a2◂ [ a23◂ [ ]] ) ⊢ 9'(= a2◂ [ a23◂ [ ]] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_1392
LB_1391:
	add rsp,8
	jmp LB_1371
LB_1392:
	mov QWORD [rsp+8*2],r14
	mov r13,QWORD [rsp+16+8*2]
	mov r14,QWORD [rsp+8*2]
	jmp LB_1396
LB_1396
;; rsp=2 , %1349~1'(= r ) %1348~0'(= r ) %1347~9'(= a2◂ [ a23◂ [ ]] ) %1346~8'(= a23◂ [ ] ) 
; #21 { 8'(= a23◂ [ ] ) 9'(= a2◂ [ a23◂ [ ]] ) } ⊢ 0(<2)◂{ 8'(= a23◂ [ ] ) 9'(= a2◂ [ a23◂ [ ]] ) }
;; rsp=2 , %1350~0(<2)◂{ 8'(= a23◂ [ ] ) 9'(= a2◂ [ a23◂ [ ]] ) } %1349~1'(= r ) %1348~0'(= r ) 
; #22 0(<2)◂{ 8'(= a23◂ [ ] ) 9'(= a2◂ [ a23◂ [ ]] ) } ⊢ 0(<2)◂0(<2)◂{ 8'(= a23◂ [ ] ) 9'(= a2◂ [ a23◂ [ ]] ) }
;; rsp=2 , %1351~0(<2)◂0(<2)◂{ 8'(= a23◂ [ ] ) 9'(= a2◂ [ a23◂ [ ]] ) } %1349~1'(= r ) %1348~0'(= r ) 
; ∎ 0(<2)◂0(<2)◂{ 8'(= a23◂ [ ] ) 9'(= a2◂ [ a23◂ [ ]] ) }
; .dlt.ptn 1'(= r )
; .dlt.ptn 0'(= r )
; .mov_ptn2 0(<2)◂0(<2)◂{ 8'(= a23◂ [ ] ) 9'(= a2◂ [ a23◂ [ ]] ) } ⊢ 2'(= a3◂ [ a2◂ [ a23◂ [ ]]] )
; .mov_ptn 0(<2)◂0(<2)◂{ 8'(= a23◂ [ ] ) 9'(= a2◂ [ a23◂ [ ]] ) } ⊢ 2'(= a3◂ [ a2◂ [ a23◂ [ ]]] )
	mov rax,[SS_RCD_2_TOP]
	mov rsi,[rax] 
	mov QWORD [SS_RCD_2_TOP],rsi
	mov QWORD [rax],0
	mov r13,rax
	mov rax,QWORD [rsp-8+8*2]
	mov QWORD [r13+8+8*0],rax
	mov rax,QWORD [rsp-8+8*1]
	mov QWORD [r13+8+8*1],rax
	mov rax,r13
	mov BYTE [rax+6],0
	mov rdi,rax
	mov rax,r15
	mov r15,QWORD [r15] 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,16
	jmp LB_1395
LB_1395:
	cmp BYTE [r8+6],0
	jnz LB_1371
	pop r14
	pop r9
	add rsp,8
	pop r13
	ret
LB_1371:
	mov r9,QWORD [rsp+8]
	mov r14,QWORD [rsp+16]
	mov r13,QWORD [rsp+24]
	mov QWORD [rsp+8*0],r14
	mov r13,QWORD [rsp+16+8*0]
	mov r14,QWORD [rsp+8*0]
	jmp LB_1399
LB_1399
;; rsp=0 , %1353~1'(= r ) %1352~0'(= r ) 
; #20 { } ⊢ 1(<2)◂{ }
;; rsp=0 , %1354~1(<2)◂{ } %1353~1'(= r ) %1352~0'(= r ) 
; #22 1(<2)◂{ } ⊢ 0(<2)◂1(<2)◂{ }
;; rsp=0 , %1355~0(<2)◂1(<2)◂{ } %1353~1'(= r ) %1352~0'(= r ) 
; ∎ 0(<2)◂1(<2)◂{ }
; .dlt.ptn 1'(= r )
; .dlt.ptn 0'(= r )
; .mov_ptn2 0(<2)◂1(<2)◂{ } ⊢ 2'(= a3◂ [ a2◂ [ a23◂ [ ]]] )
; .mov_ptn 0(<2)◂1(<2)◂{ } ⊢ 2'(= a3◂ [ a2◂ [ a23◂ [ ]]] )
	mov rax,unt 
	mov rax,unt_1
	mov rdi,rax
	mov rax,r15
	mov r15,QWORD [r15] 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	jmp LB_1398
LB_1398:
	cmp BYTE [r8+6],0
	jnz LB_1397
	pop r14
	pop r9
	add rsp,8
	pop r13
	ret
LB_1397:
	pop rdi
	pop r9 
	pop r14
	pop r13
	ret
ETR_214:
	mov r9,0x0000_ffff_ffff_ffff
	and r9,[r13]
	call GRM_214
	ret
GRM_214:
	sub rsp,32
	mov QWORD [rsp+24],r13
	mov QWORD [rsp+16],r14 
	mov QWORD [rsp+8],r9
	jmp LB_1402
LB_1401:
	add r14,1 
LB_1402:
	cmp r14,r9
	jge LB_1403
	JZ_LINE_SPC BYTE [r13+8+r14], LB_1401
LB_1403
	lea rax,[r14+1]
	cmp rax,r9
	jg LB_1406
	jmp LB_1407
LB_1406:
	mov r8,unt_1
	jmp LB_1404
LB_1407:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],123
	jnz LB_1408
	jmp LB_1409
LB_1408:
	mov r8,unt_1
	jmp LB_1404
LB_1409:
	add r14,1
	jmp LB_1405
LB_1404:
	add rsp,0
	jmp LB_1400
LB_1405:
	jmp LB_1411
LB_1410:
	add r14,1 
LB_1411:
	cmp r14,r9
	jge LB_1412
	JZ_LINE_SPC BYTE [r13+8+r14], LB_1410
LB_1412
	call GRM_211
	cmp BYTE [r8+6],0
	jnz LB_1415
	jmp LB_1416
LB_1415:
	jmp LB_1413
LB_1416:
	sub rsp,8
	mov r8,[r8+8]
; .mov_ptn2 2'(= a2◂ [ a23◂ [ ]] ) ⊢ 8'(= a2◂ [ a23◂ [ ]] )
; .mov_ptn 2'(= a2◂ [ a23◂ [ ]] ) ⊢ 8'(= a2◂ [ a23◂ [ ]] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_1414
LB_1413:
	add rsp,0
	jmp LB_1400
LB_1414:
	jmp LB_1418
LB_1417:
	add r14,1 
LB_1418:
	cmp r14,r9
	jge LB_1419
	JZ_LINE_SPC BYTE [r13+8+r14], LB_1417
LB_1419
	lea rax,[r14+1]
	cmp rax,r9
	jg LB_1422
	jmp LB_1423
LB_1422:
	mov r8,unt_1
	jmp LB_1420
LB_1423:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],125
	jnz LB_1424
	jmp LB_1425
LB_1424:
	mov r8,unt_1
	jmp LB_1420
LB_1425:
	add r14,1
	jmp LB_1421
LB_1420:
	add rsp,8
	jmp LB_1400
LB_1421:
	mov QWORD [rsp+8*1],r14
	mov r13,QWORD [rsp+16+8*1]
	mov r14,QWORD [rsp+8*1]
	jmp LB_1427
LB_1429: ; 51 { 0'(= a2◂ [ a23◂ [ ]] ) 1'(= a2◂ [ a23◂ [ ]] ) } ⊢ 0'(= a2◂ [ a23◂ [ ]] ) : ({ _lst◂2966'(=2967'(=_t23)) _lst◂_t23 }→_lst◂_t23)
;; rsp=0 , %116~1'(= a2◂ [ a23◂ [ ]] ) %115~0'(= a2◂ [ a23◂ [ ]] ) 
;; ?; 1'(= a2◂ [ a23◂ [ ]] ) ⊢ 1(<2)◂{ }
	mov rdi,r14
	cmp BYTE [rdi+6],1
	jnz LB_1430
;; rsp=0 , %115~0'(= a2◂ [ a23◂ [ ]] ) 
; ∎ 0'(= a2◂ [ a23◂ [ ]] )
; .mov_ptn2 0'(= a2◂ [ a23◂ [ ]] ) ⊢ 0'(= a2◂ [ a23◂ [ ]] )
	ret
LB_1430:
;; ?; 1'(= a2◂ [ a23◂ [ ]] ) ⊢ 0(<2)◂{ 2'(= a23◂ [ ] ) 3'(= a2◂ [ a23◂ [ ]] ) }
	mov rdi,r14
	mov rdi,QWORD [rdi+8+8*0]
	mov r8,rdi
	mov rdi,r14
	mov rdi,QWORD [rdi+8+8*1]
	mov r9,rdi
;; rsp=0 , %118~3'(= a2◂ [ a23◂ [ ]] ) %117~2'(= a23◂ [ ] ) %115~0'(= a2◂ [ a23◂ [ ]] ) 
; #21 { 2'(= a23◂ [ ] ) 0'(= a2◂ [ a23◂ [ ]] ) } ⊢ 0(<2)◂{ 2'(= a23◂ [ ] ) 0'(= a2◂ [ a23◂ [ ]] ) }
;; rsp=0 , %119~0(<2)◂{ 2'(= a23◂ [ ] ) 0'(= a2◂ [ a23◂ [ ]] ) } %118~3'(= a2◂ [ a23◂ [ ]] ) 
; rsp_d=0, #51 { 0(<2)◂{ 2'(= a23◂ [ ] ) 0'(= a2◂ [ a23◂ [ ]] ) } 3'(= a2◂ [ a23◂ [ ]] ) } ⊢ 0'(= a2◂ [ a23◂ [ ]] )
; .mov_ptn2 { 0(<2)◂{ 2'(= a23◂ [ ] ) 0'(= a2◂ [ a23◂ [ ]] ) } 3'(= a2◂ [ a23◂ [ ]] ) } ⊢ { 0'(= a2◂ [ a23◂ [ ]] ) 1'(= a2◂ [ a23◂ [ ]] ) }
; .mov_ptn 3'(= a2◂ [ a23◂ [ ]] ) ⊢ 1'(= a2◂ [ a23◂ [ ]] )
	mov rax,r9
	mov r14,rax
	mov r10,r13
; .mov_ptn 0(<2)◂{ 2'(= a23◂ [ ] ) 4'(= a2◂ [ a23◂ [ ]] ) } ⊢ 0'(= a2◂ [ a23◂ [ ]] )
	mov rax,[SS_RCD_2_TOP]
	mov rsi,[rax] 
	mov QWORD [SS_RCD_2_TOP],rsi
	mov QWORD [rax],0
	mov r9,rax
	mov rax,r8
	mov QWORD [r9+8+8*0],rax
	mov rax,r10
	mov QWORD [r9+8+8*1],rax
	mov rax,r9
	mov BYTE [rax+6],0
	mov r13,rax
	call LB_1429

;; rsp=0 , %120~0'(= a2◂ [ a23◂ [ ]] ) 
; ∎ 0'(= a2◂ [ a23◂ [ ]] )
; .mov_ptn2 0'(= a2◂ [ a23◂ [ ]] ) ⊢ 0'(= a2◂ [ a23◂ [ ]] )
	ret
LB_1428: ; 52 0'(= a2◂ [ a23◂ [ ]] ) ⊢ 0'(= a2◂ [ a23◂ [ ]] ) : (_lst◂_t23→_lst◂_t23)
;; rsp=0 , %121~0'(= a2◂ [ a23◂ [ ]] ) 
; #20 { } ⊢ 1(<2)◂{ }
;; rsp=0 , %122~1(<2)◂{ } %121~0'(= a2◂ [ a23◂ [ ]] ) 
; rsp_d=0, #51 { 1(<2)◂{ } 0'(= a2◂ [ a23◂ [ ]] ) } ⊢ 0'(= a2◂ [ a23◂ [ ]] )
; .mov_ptn2 { 1(<2)◂{ } 0'(= a2◂ [ a23◂ [ ]] ) } ⊢ { 0'(= a2◂ [ a23◂ [ ]] ) 1'(= a2◂ [ a23◂ [ ]] ) }
; .mov_ptn 0'(= a2◂ [ a23◂ [ ]] ) ⊢ 1'(= a2◂ [ a23◂ [ ]] )
	mov rax,r13
	mov r14,rax
; .mov_ptn 1(<2)◂{ } ⊢ 0'(= a2◂ [ a23◂ [ ]] )
	mov rax,unt 
	mov rax,unt_1
	mov r13,rax
	call LB_1429

;; rsp=0 , %123~0'(= a2◂ [ a23◂ [ ]] ) 
; ∎ 0'(= a2◂ [ a23◂ [ ]] )
; .mov_ptn2 0'(= a2◂ [ a23◂ [ ]] ) ⊢ 0'(= a2◂ [ a23◂ [ ]] )
	ret
LB_1427
;; rsp=1 , %1358~1'(= r ) %1357~0'(= r ) %1356~8'(= a2◂ [ a23◂ [ ]] ) 
; rsp_d=0, #52 8'(= a2◂ [ a23◂ [ ]] ) ⊢ 2'(= a2◂ [ a23◂ [ ]] )
	sub rsp,16
	mov QWORD [rsp+8*0],r13
	mov QWORD [rsp+8*1],r14
; .mov_ptn2 8'(= a2◂ [ a23◂ [ ]] ) ⊢ 0'(= a2◂ [ a23◂ [ ]] )
; .mov_ptn 8'(= a2◂ [ a23◂ [ ]] ) ⊢ 0'(= a2◂ [ a23◂ [ ]] )
	mov rax,QWORD [rsp-8+8*3]
	mov r13,rax
	call LB_1428

	mov r14,QWORD [rsp-8+8*2]
	mov rax,QWORD [rsp-8+8*1]
	mov r8,r13
	mov r13,rax
	add rsp,24
;; rsp=0 , %1359~2'(= a2◂ [ a23◂ [ ]] ) %1358~1'(= r ) %1357~0'(= r ) 
; #140 2'(= a2◂ [ a23◂ [ ]] ) ⊢ 0(<5)◂2'(= a2◂ [ a23◂ [ ]] )
;; rsp=0 , %1360~0(<5)◂2'(= a2◂ [ a23◂ [ ]] ) %1358~1'(= r ) %1357~0'(= r ) 
; #22 0(<5)◂2'(= a2◂ [ a23◂ [ ]] ) ⊢ 0(<2)◂0(<5)◂2'(= a2◂ [ a23◂ [ ]] )
;; rsp=0 , %1361~0(<2)◂0(<5)◂2'(= a2◂ [ a23◂ [ ]] ) %1358~1'(= r ) %1357~0'(= r ) 
; ∎ 0(<2)◂0(<5)◂2'(= a2◂ [ a23◂ [ ]] )
; .dlt.ptn 1'(= r )
; .dlt.ptn 0'(= r )
; .mov_ptn2 0(<2)◂0(<5)◂2'(= a2◂ [ a23◂ [ ]] ) ⊢ 2'(= a3◂ [ a23◂ [ ]] )
	mov r13,r8
; .mov_ptn 0(<2)◂0(<5)◂0'(= a2◂ [ a23◂ [ ]] ) ⊢ 2'(= a3◂ [ a23◂ [ ]] )
	mov rax,r13
	mov rdi,rax
	mov rax,r15
	mov r15,QWORD [r15] 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov rdi,rax
	mov rax,r15
	mov r15,QWORD [r15] 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	jmp LB_1426
LB_1426:
	cmp BYTE [r8+6],0
	jnz LB_1400
	pop r14
	pop r9
	add rsp,8
	pop r13
	ret
LB_1400:
	mov r9,QWORD [rsp+8]
	mov r14,QWORD [rsp+16]
	mov r13,QWORD [rsp+24]
	jmp LB_1433
LB_1432:
	add r14,1 
LB_1433:
	cmp r14,r9
	jge LB_1434
	JZ_LINE_SPC BYTE [r13+8+r14], LB_1432
LB_1434
	lea rax,[r14+1]
	cmp rax,r9
	jg LB_1437
	jmp LB_1438
LB_1437:
	mov r8,unt_1
	jmp LB_1435
LB_1438:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],40
	jnz LB_1439
	jmp LB_1440
LB_1439:
	mov r8,unt_1
	jmp LB_1435
LB_1440:
	add r14,1
	jmp LB_1436
LB_1435:
	add rsp,0
	jmp LB_1431
LB_1436:
	jmp LB_1442
LB_1441:
	add r14,1 
LB_1442:
	cmp r14,r9
	jge LB_1443
	JZ_LINE_SPC BYTE [r13+8+r14], LB_1441
LB_1443
	call GRM_210
	cmp BYTE [r8+6],0
	jnz LB_1446
	jmp LB_1447
LB_1446:
	jmp LB_1444
LB_1447:
	sub rsp,8
	mov r8,[r8+8]
; .mov_ptn2 2'(= a23◂ [ ] ) ⊢ 8'(= a23◂ [ ] )
; .mov_ptn 2'(= a23◂ [ ] ) ⊢ 8'(= a23◂ [ ] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_1445
LB_1444:
	add rsp,0
	jmp LB_1431
LB_1445:
	jmp LB_1449
LB_1448:
	add r14,1 
LB_1449:
	cmp r14,r9
	jge LB_1450
	JZ_LINE_SPC BYTE [r13+8+r14], LB_1448
LB_1450
	lea rax,[r14+1]
	cmp rax,r9
	jg LB_1453
	jmp LB_1454
LB_1453:
	mov r8,unt_1
	jmp LB_1451
LB_1454:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],41
	jnz LB_1455
	jmp LB_1456
LB_1455:
	mov r8,unt_1
	jmp LB_1451
LB_1456:
	add r14,1
	jmp LB_1452
LB_1451:
	add rsp,8
	jmp LB_1431
LB_1452:
	mov QWORD [rsp+8*1],r14
	mov r13,QWORD [rsp+16+8*1]
	mov r14,QWORD [rsp+8*1]
	jmp LB_1458
LB_1458
;; rsp=1 , %1364~1'(= r ) %1363~0'(= r ) %1362~8'(= a23◂ [ ] ) 
; #22 8'(= a23◂ [ ] ) ⊢ 0(<2)◂8'(= a23◂ [ ] )
;; rsp=1 , %1365~0(<2)◂8'(= a23◂ [ ] ) %1364~1'(= r ) %1363~0'(= r ) 
; ∎ 0(<2)◂8'(= a23◂ [ ] )
; .dlt.ptn 1'(= r )
; .dlt.ptn 0'(= r )
; .mov_ptn2 0(<2)◂8'(= a23◂ [ ] ) ⊢ 2'(= a3◂ [ a23◂ [ ]] )
; .mov_ptn 0(<2)◂8'(= a23◂ [ ] ) ⊢ 2'(= a3◂ [ a23◂ [ ]] )
	mov rax,QWORD [rsp-8+8*1]
	mov rdi,rax
	mov rax,r15
	mov r15,QWORD [r15] 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,8
	jmp LB_1457
LB_1457:
	cmp BYTE [r8+6],0
	jnz LB_1431
	pop r14
	pop r9
	add rsp,8
	pop r13
	ret
LB_1431:
	mov r9,QWORD [rsp+8]
	mov r14,QWORD [rsp+16]
	mov r13,QWORD [rsp+24]
	jmp LB_1461
LB_1460:
	add r14,1 
LB_1461:
	cmp r14,r9
	jge LB_1462
	JZ_LINE_SPC BYTE [r13+8+r14], LB_1460
LB_1462
	call GRM_215
	cmp BYTE [r8+6],0
	jnz LB_1465
	jmp LB_1466
LB_1465:
	jmp LB_1463
LB_1466:
	sub rsp,8
; .mov_ptn2 2'(= {| l |} ) ⊢ 8'(= {| l |} )
; .mov_ptn 2'(= {| l |} ) ⊢ 8'(= {| l |} )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_1464
LB_1463:
	add rsp,0
	jmp LB_1459
LB_1464:
	mov QWORD [rsp+8*1],r14
	mov r13,QWORD [rsp+16+8*1]
	mov r14,QWORD [rsp+8*1]
	jmp LB_1468
LB_1468
;; rsp=1 , %1368~1'(= r ) %1367~0'(= r ) %1366~8'(= {| l |} ) 
; #136 8'(= {| l |} ) ⊢ 4(<5)◂8'(= {| l |} )
;; rsp=1 , %1369~4(<5)◂8'(= {| l |} ) %1368~1'(= r ) %1367~0'(= r ) 
; #22 4(<5)◂8'(= {| l |} ) ⊢ 0(<2)◂4(<5)◂8'(= {| l |} )
;; rsp=1 , %1370~0(<2)◂4(<5)◂8'(= {| l |} ) %1368~1'(= r ) %1367~0'(= r ) 
; ∎ 0(<2)◂4(<5)◂8'(= {| l |} )
; .dlt.ptn 1'(= r )
; .dlt.ptn 0'(= r )
; .mov_ptn2 0(<2)◂4(<5)◂8'(= {| l |} ) ⊢ 2'(= a3◂ [ a23◂ [ ]] )
; .mov_ptn 0(<2)◂4(<5)◂8'(= {| l |} ) ⊢ 2'(= a3◂ [ a23◂ [ ]] )
	mov rax,QWORD [rsp-8+8*1]
	mov BYTE [rax+6],4
	mov rdi,rax
	mov rax,r15
	mov r15,QWORD [r15] 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,8
	jmp LB_1467
LB_1467:
	cmp BYTE [r8+6],0
	jnz LB_1459
	pop r14
	pop r9
	add rsp,8
	pop r13
	ret
LB_1459:
	mov r9,QWORD [rsp+8]
	mov r14,QWORD [rsp+16]
	mov r13,QWORD [rsp+24]
	jmp LB_1471
LB_1470:
	add r14,1 
LB_1471:
	cmp r14,r9
	jge LB_1472
	JZ_LINE_SPC BYTE [r13+8+r14], LB_1470
LB_1472
	call GRM_189
	cmp BYTE [r8+6],0
	jnz LB_1475
	jmp LB_1476
LB_1475:
	jmp LB_1473
LB_1476:
	sub rsp,8
	mov r8,[r8+8]
; .mov_ptn2 2'(= a9◂ [ ] ) ⊢ 8'(= a9◂ [ ] )
; .mov_ptn 2'(= a9◂ [ ] ) ⊢ 8'(= a9◂ [ ] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_1474
LB_1473:
	add rsp,0
	jmp LB_1469
LB_1474:
	mov QWORD [rsp+8*1],r14
	mov r13,QWORD [rsp+16+8*1]
	mov r14,QWORD [rsp+8*1]
	jmp LB_1478
LB_1478
;; rsp=1 , %1373~1'(= r ) %1372~0'(= r ) %1371~8'(= a9◂ [ ] ) 
; #137 8'(= a9◂ [ ] ) ⊢ 3(<5)◂8'(= a9◂ [ ] )
;; rsp=1 , %1374~3(<5)◂8'(= a9◂ [ ] ) %1373~1'(= r ) %1372~0'(= r ) 
; #22 3(<5)◂8'(= a9◂ [ ] ) ⊢ 0(<2)◂3(<5)◂8'(= a9◂ [ ] )
;; rsp=1 , %1375~0(<2)◂3(<5)◂8'(= a9◂ [ ] ) %1373~1'(= r ) %1372~0'(= r ) 
; ∎ 0(<2)◂3(<5)◂8'(= a9◂ [ ] )
; .dlt.ptn 1'(= r )
; .dlt.ptn 0'(= r )
; .mov_ptn2 0(<2)◂3(<5)◂8'(= a9◂ [ ] ) ⊢ 2'(= a3◂ [ a23◂ [ ]] )
; .mov_ptn 0(<2)◂3(<5)◂8'(= a9◂ [ ] ) ⊢ 2'(= a3◂ [ a23◂ [ ]] )
	mov rax,QWORD [rsp-8+8*1]
	mov rdi,rax
	mov rax,r15
	mov r15,QWORD [r15] 
	mov QWORD [rax],0
	mov BYTE [rax+6],3
	mov QWORD [rax+8],rdi
	mov rdi,rax
	mov rax,r15
	mov r15,QWORD [r15] 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,8
	jmp LB_1477
LB_1477:
	cmp BYTE [r8+6],0
	jnz LB_1469
	pop r14
	pop r9
	add rsp,8
	pop r13
	ret
LB_1469:
	pop rdi
	pop r9 
	pop r14
	pop r13
	ret
ETR_215:
	mov r9,0x0000_ffff_ffff_ffff
	and r9,[r13]
	call GRM_215
	ret
GRM_215:
	sub rsp,32
	mov QWORD [rsp+24],r13
	mov QWORD [rsp+16],r14 
	mov QWORD [rsp+8],r9
	call GRM_74
	cmp BYTE [r8+6],0
	jnz LB_1482
	jmp LB_1483
LB_1482:
	jmp LB_1480
LB_1483:
	sub rsp,8
; .mov_ptn2 2'(= {| l |} ) ⊢ 8'(= {| l |} )
; .mov_ptn 2'(= {| l |} ) ⊢ 8'(= {| l |} )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_1481
LB_1480:
	add rsp,0
	jmp LB_1479
LB_1481:
	lea rax,[r14+1]
	cmp rax,r9
	jg LB_1486
	jmp LB_1487
LB_1486:
	mov r8,unt_1
	jmp LB_1484
LB_1487:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],39
	jnz LB_1488
	jmp LB_1489
LB_1488:
	mov r8,unt_1
	jmp LB_1484
LB_1489:
	add r14,1
	jmp LB_1485
LB_1484:
	add rsp,8
	jmp LB_1479
LB_1485:
	mov QWORD [rsp+8*1],r14
	mov r13,QWORD [rsp+16+8*1]
	mov r14,QWORD [rsp+8*1]
	jmp LB_1491
LB_1491
;; rsp=1 , %1378~1'(= r ) %1377~0'(= r ) %1376~8'(= {| l |} ) 
; #22 8'(= {| l |} ) ⊢ 0(<2)◂8'(= {| l |} )
;; rsp=1 , %1379~0(<2)◂8'(= {| l |} ) %1378~1'(= r ) %1377~0'(= r ) 
; ∎ 0(<2)◂8'(= {| l |} )
; .dlt.ptn 1'(= r )
; .dlt.ptn 0'(= r )
; .mov_ptn2 0(<2)◂8'(= {| l |} ) ⊢ 2'(= a3◂ [ {| l |}] )
; .mov_ptn 0(<2)◂8'(= {| l |} ) ⊢ 2'(= a3◂ [ {| l |}] )
	mov rax,QWORD [rsp-8+8*1]
	mov BYTE [rax+6],0
	mov r8,rax
	add rsp,8
	jmp LB_1490
LB_1490:
	cmp BYTE [r8+6],0
	jnz LB_1479
	pop r14
	pop r9
	add rsp,8
	pop r13
	ret
LB_1479:
	pop rdi
	pop r9 
	pop r14
	pop r13
	ret
ETR_217:
	mov r9,0x0000_ffff_ffff_ffff
	and r9,[r13]
	call GRM_217
	ret
GRM_217:
	sub rsp,32
	mov QWORD [rsp+24],r13
	mov QWORD [rsp+16],r14 
	mov QWORD [rsp+8],r9
	jmp LB_1494
LB_1493:
	add r14,1 
LB_1494:
	cmp r14,r9
	jge LB_1495
	JZ_LINE_SPC BYTE [r13+8+r14], LB_1493
LB_1495
	lea rax,[r14+1]
	cmp rax,r9
	jg LB_1498
	jmp LB_1499
LB_1498:
	mov r8,unt_1
	jmp LB_1496
LB_1499:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],10
	jnz LB_1500
	jmp LB_1501
LB_1500:
	mov r8,unt_1
	jmp LB_1496
LB_1501:
	add r14,1
	jmp LB_1497
LB_1496:
	add rsp,0
	jmp LB_1492
LB_1497:
	jmp LB_1503
LB_1502:
	add r14,1 
LB_1503:
	cmp r14,r9
	jge LB_1504
	JZ_LINE_SPC BYTE [r13+8+r14], LB_1502
LB_1504
	call GRM_217
	cmp BYTE [r8+6],0
	jnz LB_1507
	jmp LB_1508
LB_1507:
	jmp LB_1505
LB_1508:
	sub rsp,8
	mov r8,[r8+8]
; .mov_ptn2 2'(= a35◂ [ *{ }] ) ⊢ 8'(= a35◂ [ *{ }] )
; .mov_ptn 2'(= a35◂ [ *{ }] ) ⊢ 8'(= a35◂ [ *{ }] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_1506
LB_1505:
	add rsp,0
	pop rdi
	pop r9 
	pop r14
	pop r13
	ret
LB_1506:
	mov QWORD [rsp+8*1],r14
	mov r13,QWORD [rsp+16+8*1]
	mov r14,QWORD [rsp+8*1]
	jmp LB_1510
LB_1510
;; rsp=1 , %1382~1'(= r ) %1381~0'(= r ) %1380~8'(= a35◂ [ *{ }] ) 
; #193 { } ⊢ 0(<2)◂{ }
;; rsp=1 , %1383~0(<2)◂{ } %1382~1'(= r ) %1381~0'(= r ) %1380~8'(= a35◂ [ *{ }] ) 
; #22 0(<2)◂{ } ⊢ 0(<2)◂0(<2)◂{ }
;; rsp=1 , %1384~0(<2)◂0(<2)◂{ } %1382~1'(= r ) %1381~0'(= r ) %1380~8'(= a35◂ [ *{ }] ) 
; ∎ 0(<2)◂0(<2)◂{ }
; .dlt.ptn 1'(= r )
; .dlt.ptn 0'(= r )
; .dlt.ptn 8'(= a35◂ [ *{ }] )
;	.dlt adt ⊢ _  
; .mov_ptn2 0(<2)◂0(<2)◂{ } ⊢ 2'(= a3◂ [ a35◂ [ *{ }]] )
; .mov_ptn 0(<2)◂0(<2)◂{ } ⊢ 2'(= a3◂ [ a35◂ [ *{ }]] )
	mov rax,unt 
	mov rax,unt_0
	mov rdi,rax
	mov rax,r15
	mov r15,QWORD [r15] 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,8
	jmp LB_1509
LB_1509:
	cmp BYTE [r8+6],0
	jnz LB_1492
	pop r14
	pop r9
	add rsp,8
	pop r13
	ret
LB_1492:
	mov r9,QWORD [rsp+8]
	mov r14,QWORD [rsp+16]
	mov r13,QWORD [rsp+24]
	jmp LB_1513
LB_1512:
	add r14,1 
LB_1513:
	cmp r14,r9
	jge LB_1514
	JZ_LINE_SPC BYTE [r13+8+r14], LB_1512
LB_1514
	lea rax,[r14+2]
	cmp rax,r9
	jg LB_1517
	jmp LB_1518
LB_1517:
	mov r8,unt_1
	jmp LB_1515
LB_1518:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],35
	jnz LB_1519
	cmp BYTE [rdi+1],35
	jnz LB_1519
	jmp LB_1520
LB_1519:
	mov r8,unt_1
	jmp LB_1515
LB_1520:
	add r14,2
	jmp LB_1516
LB_1515:
	add rsp,0
	jmp LB_1511
LB_1516:
	jmp LB_1522
LB_1521:
	add r14,1 
LB_1522:
	cmp r14,r9
	jge LB_1523
	JZ_LINE_SPC BYTE [r13+8+r14], LB_1521
LB_1523
	call GRM_220
	cmp BYTE [r8+6],0
	jnz LB_1526
	jmp LB_1527
LB_1526:
	jmp LB_1524
LB_1527:
	sub rsp,16
; .mov_ptn2 2'(= *{ rr} ) ⊢ { 8'(= r ) 9'(= r ) }
; .mov_ptn 2'(= *{ rr} ) ⊢ { 8'(= r ) 9'(= r ) }
	mov rdi,r8
	mov rdi,QWORD [rdi+8+8*0]
	mov r10,rdi
	mov QWORD [rsp-8+8*2],r10
	mov rdi,r8
	mov rdi,QWORD [rdi+8+8*1]
	mov r11,rdi
	mov QWORD [rsp-8+8*1],r11
	jmp LB_1525
LB_1524:
	add rsp,0
	pop rdi
	pop r9 
	pop r14
	pop r13
	ret
LB_1525:
	jmp LB_1529
LB_1528:
	add r14,1 
LB_1529:
	cmp r14,r9
	jge LB_1530
	JZ_LINE_SPC BYTE [r13+8+r14], LB_1528
LB_1530
	call GRM_217
	cmp BYTE [r8+6],0
	jnz LB_1533
	jmp LB_1534
LB_1533:
	jmp LB_1531
LB_1534:
	sub rsp,8
	mov r8,[r8+8]
; .mov_ptn2 2'(= a35◂ [ *{ }] ) ⊢ 10'(= a35◂ [ *{ }] )
; .mov_ptn 2'(= a35◂ [ *{ }] ) ⊢ 10'(= a35◂ [ *{ }] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_1532
LB_1531:
	add rsp,16
	pop rdi
	pop r9 
	pop r14
	pop r13
	ret
LB_1532:
	mov QWORD [rsp+8*3],r14
	mov r13,QWORD [rsp+16+8*3]
	mov r14,QWORD [rsp+8*3]
	jmp LB_1536
LB_1536
;; rsp=3 , %1388~1'(= r ) %1387~0'(= r ) %1386~10'(= a35◂ [ *{ }] ) %1385~{ 8'(= r ) 9'(= r ) } 
; #193 { } ⊢ 0(<2)◂{ }
;; rsp=3 , %1389~0(<2)◂{ } %1388~1'(= r ) %1387~0'(= r ) %1386~10'(= a35◂ [ *{ }] ) %1385~{ 8'(= r ) 9'(= r ) } 
; #22 0(<2)◂{ } ⊢ 0(<2)◂0(<2)◂{ }
;; rsp=3 , %1390~0(<2)◂0(<2)◂{ } %1388~1'(= r ) %1387~0'(= r ) %1386~10'(= a35◂ [ *{ }] ) %1385~{ 8'(= r ) 9'(= r ) } 
; ∎ 0(<2)◂0(<2)◂{ }
; .dlt.ptn 1'(= r )
; .dlt.ptn 0'(= r )
; .dlt.ptn 10'(= a35◂ [ *{ }] )
;	.dlt adt ⊢ _  
; .dlt.ptn { 8'(= r ) 9'(= r ) }
; .mov_ptn2 0(<2)◂0(<2)◂{ } ⊢ 2'(= a3◂ [ a35◂ [ *{ }]] )
; .mov_ptn 0(<2)◂0(<2)◂{ } ⊢ 2'(= a3◂ [ a35◂ [ *{ }]] )
	mov rax,unt 
	mov rax,unt_0
	mov rdi,rax
	mov rax,r15
	mov r15,QWORD [r15] 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,24
	jmp LB_1535
LB_1535:
	cmp BYTE [r8+6],0
	jnz LB_1511
	pop r14
	pop r9
	add rsp,8
	pop r13
	ret
LB_1511:
	mov r9,QWORD [rsp+8]
	mov r14,QWORD [rsp+16]
	mov r13,QWORD [rsp+24]
	jmp LB_1539
LB_1538:
	add r14,1 
LB_1539:
	cmp r14,r9
	jge LB_1540
	JZ_LINE_SPC BYTE [r13+8+r14], LB_1538
LB_1540
	lea rax,[r14+2]
	cmp rax,r9
	jg LB_1543
	jmp LB_1544
LB_1543:
	mov r8,unt_1
	jmp LB_1541
LB_1544:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],92
	jnz LB_1545
	cmp BYTE [rdi+1],92
	jnz LB_1545
	jmp LB_1546
LB_1545:
	mov r8,unt_1
	jmp LB_1541
LB_1546:
	add r14,2
	jmp LB_1542
LB_1541:
	add rsp,0
	jmp LB_1537
LB_1542:
	jmp LB_1548
LB_1547:
	add r14,1 
LB_1548:
	cmp r14,r9
	jge LB_1549
	JZ_LINE_SPC BYTE [r13+8+r14], LB_1547
LB_1549
	call GRM_220
	cmp BYTE [r8+6],0
	jnz LB_1552
	jmp LB_1553
LB_1552:
	jmp LB_1550
LB_1553:
	sub rsp,16
; .mov_ptn2 2'(= *{ rr} ) ⊢ { 8'(= r ) 9'(= r ) }
; .mov_ptn 2'(= *{ rr} ) ⊢ { 8'(= r ) 9'(= r ) }
	mov rdi,r8
	mov rdi,QWORD [rdi+8+8*0]
	mov r10,rdi
	mov QWORD [rsp-8+8*2],r10
	mov rdi,r8
	mov rdi,QWORD [rdi+8+8*1]
	mov r11,rdi
	mov QWORD [rsp-8+8*1],r11
	jmp LB_1551
LB_1550:
	add rsp,0
	pop rdi
	pop r9 
	pop r14
	pop r13
	ret
LB_1551:
	jmp LB_1555
LB_1554:
	add r14,1 
LB_1555:
	cmp r14,r9
	jge LB_1556
	JZ_LINE_SPC BYTE [r13+8+r14], LB_1554
LB_1556
	call GRM_217
	cmp BYTE [r8+6],0
	jnz LB_1559
	jmp LB_1560
LB_1559:
	jmp LB_1557
LB_1560:
	sub rsp,8
	mov r8,[r8+8]
; .mov_ptn2 2'(= a35◂ [ *{ }] ) ⊢ 10'(= a35◂ [ *{ }] )
; .mov_ptn 2'(= a35◂ [ *{ }] ) ⊢ 10'(= a35◂ [ *{ }] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_1558
LB_1557:
	add rsp,16
	pop rdi
	pop r9 
	pop r14
	pop r13
	ret
LB_1558:
	mov QWORD [rsp+8*3],r14
	mov r13,QWORD [rsp+16+8*3]
	mov r14,QWORD [rsp+8*3]
	jmp LB_1562
LB_1562
;; rsp=3 , %1394~1'(= r ) %1393~0'(= r ) %1392~10'(= a35◂ [ *{ }] ) %1391~{ 8'(= r ) 9'(= r ) } 
; #193 { } ⊢ 0(<2)◂{ }
;; rsp=3 , %1395~0(<2)◂{ } %1394~1'(= r ) %1393~0'(= r ) %1392~10'(= a35◂ [ *{ }] ) %1391~{ 8'(= r ) 9'(= r ) } 
; #22 0(<2)◂{ } ⊢ 0(<2)◂0(<2)◂{ }
;; rsp=3 , %1396~0(<2)◂0(<2)◂{ } %1394~1'(= r ) %1393~0'(= r ) %1392~10'(= a35◂ [ *{ }] ) %1391~{ 8'(= r ) 9'(= r ) } 
; ∎ 0(<2)◂0(<2)◂{ }
; .dlt.ptn 1'(= r )
; .dlt.ptn 0'(= r )
; .dlt.ptn 10'(= a35◂ [ *{ }] )
;	.dlt adt ⊢ _  
; .dlt.ptn { 8'(= r ) 9'(= r ) }
; .mov_ptn2 0(<2)◂0(<2)◂{ } ⊢ 2'(= a3◂ [ a35◂ [ *{ }]] )
; .mov_ptn 0(<2)◂0(<2)◂{ } ⊢ 2'(= a3◂ [ a35◂ [ *{ }]] )
	mov rax,unt 
	mov rax,unt_0
	mov rdi,rax
	mov rax,r15
	mov r15,QWORD [r15] 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,24
	jmp LB_1561
LB_1561:
	cmp BYTE [r8+6],0
	jnz LB_1537
	pop r14
	pop r9
	add rsp,8
	pop r13
	ret
LB_1537:
	mov r9,QWORD [rsp+8]
	mov r14,QWORD [rsp+16]
	mov r13,QWORD [rsp+24]
	jmp LB_1565
LB_1564:
	add r14,1 
LB_1565:
	cmp r14,r9
	jge LB_1566
	JZ_LINE_SPC BYTE [r13+8+r14], LB_1564
LB_1566
	lea rax,[r14+2]
	cmp rax,r9
	jg LB_1569
	jmp LB_1570
LB_1569:
	mov r8,unt_1
	jmp LB_1567
LB_1570:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],92
	jnz LB_1571
	cmp BYTE [rdi+1],91
	jnz LB_1571
	jmp LB_1572
LB_1571:
	mov r8,unt_1
	jmp LB_1567
LB_1572:
	add r14,2
	jmp LB_1568
LB_1567:
	add rsp,0
	jmp LB_1563
LB_1568:
	sub rsp,32
	mov QWORD [rsp+24],r13
	mov QWORD [rsp+16],r14 
	mov QWORD [rsp+8],r9
	jmp LB_1576
LB_1575:
	add r14,1 
LB_1576:
	cmp r14,r9
	jge LB_1577
	JZ_LINE_SPC BYTE [r13+8+r14], LB_1575
LB_1577
	lea rax,[r14+1]
	cmp rax,r9
	jg LB_1580
	jmp LB_1581
LB_1580:
	mov r8,unt_1
	jmp LB_1578
LB_1581:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],10
	jnz LB_1582
	jmp LB_1583
LB_1582:
	mov r8,unt_1
	jmp LB_1578
LB_1583:
	add r14,1
	jmp LB_1579
LB_1578:
	add rsp,0
	jmp LB_1574
LB_1579:
	jmp LB_1585
LB_1584:
	add r14,1 
LB_1585:
	cmp r14,r9
	jge LB_1586
	JZ_LINE_SPC BYTE [r13+8+r14], LB_1584
LB_1586
	call GRM_218
	cmp BYTE [r8+6],0
	jnz LB_1589
	jmp LB_1590
LB_1589:
	jmp LB_1587
LB_1590:
	sub rsp,8
	mov r8,[r8+8]
; .mov_ptn2 2'(= a35◂ [ *{ }] ) ⊢ 8'(= a35◂ [ *{ }] )
; .mov_ptn 2'(= a35◂ [ *{ }] ) ⊢ 8'(= a35◂ [ *{ }] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_1588
LB_1587:
	add rsp,0
	jmp LB_1574
LB_1588:
	jmp LB_1592
LB_1591:
	add r14,1 
LB_1592:
	cmp r14,r9
	jge LB_1593
	JZ_LINE_SPC BYTE [r13+8+r14], LB_1591
LB_1593
	call GRM_217
	cmp BYTE [r8+6],0
	jnz LB_1596
	jmp LB_1597
LB_1596:
	jmp LB_1594
LB_1597:
	sub rsp,8
	mov r8,[r8+8]
; .mov_ptn2 2'(= a35◂ [ *{ }] ) ⊢ 9'(= a35◂ [ *{ }] )
; .mov_ptn 2'(= a35◂ [ *{ }] ) ⊢ 9'(= a35◂ [ *{ }] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_1595
LB_1594:
	add rsp,8
	jmp LB_1574
LB_1595:
	mov QWORD [rsp+8*2],r14
	mov r13,QWORD [rsp+16+8*2]
	mov r14,QWORD [rsp+8*2]
	jmp LB_1599
LB_1604: ; 53 { 0'(= a2◂ [ *{ rr{| l |}}] ) 1'(= a2◂ [ *{ rr{| l |}}] ) } ⊢ 0'(= a2◂ [ *{ rr{| l |}}] ) : ({ _lst◂{ _r64 _r64 _s8 } _lst◂{ _r64 _r64 _s8 } }→_lst◂{ _r64 _r64 _s8 })
;; rsp=0 , %125~1'(= a2◂ [ *{ rr{| l |}}] ) %124~0'(= a2◂ [ *{ rr{| l |}}] ) 
;; ? 0'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 0(<2)◂{ 2'(= *{ rr{| l |}} ) 3'(= a2◂ [ *{ rr{| l |}}] ) }
	mov rdi,r13
	cmp BYTE [rdi+6],0
	jnz LB_1605
	mov rdi,r13
	mov rdi,QWORD [rdi+8+8*0]
	mov r8,rdi
	mov rdi,r13
	mov rdi,QWORD [rdi+8+8*1]
	mov r9,rdi
;; rsp=0 , %127~3'(= a2◂ [ *{ rr{| l |}}] ) %126~2'(= *{ rr{| l |}} ) %125~1'(= a2◂ [ *{ rr{| l |}}] ) 
; rsp_d=0, #53 { 3'(= a2◂ [ *{ rr{| l |}}] ) 1'(= a2◂ [ *{ rr{| l |}}] ) } ⊢ 0'(= a2◂ [ *{ rr{| l |}}] )
	sub rsp,8
	mov QWORD [rsp+8*0],r8
; .mov_ptn2 { 3'(= a2◂ [ *{ rr{| l |}}] ) 1'(= a2◂ [ *{ rr{| l |}}] ) } ⊢ { 0'(= a2◂ [ *{ rr{| l |}}] ) 1'(= a2◂ [ *{ rr{| l |}}] ) }
; .mov_ptn 3'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 0'(= a2◂ [ *{ rr{| l |}}] )
	mov rax,r9
	mov r13,rax
	call LB_1604

	mov r8,QWORD [rsp-8+8*1]
	add rsp,8
;; rsp=0 , %128~0'(= a2◂ [ *{ rr{| l |}}] ) %126~2'(= *{ rr{| l |}} ) 
; #21 { 2'(= *{ rr{| l |}} ) 0'(= a2◂ [ *{ rr{| l |}}] ) } ⊢ 0(<2)◂{ 2'(= *{ rr{| l |}} ) 0'(= a2◂ [ *{ rr{| l |}}] ) }
;; rsp=0 , %129~0(<2)◂{ 2'(= *{ rr{| l |}} ) 0'(= a2◂ [ *{ rr{| l |}}] ) } 
; ∎ 0(<2)◂{ 2'(= *{ rr{| l |}} ) 0'(= a2◂ [ *{ rr{| l |}}] ) }
; .mov_ptn2 0(<2)◂{ 2'(= *{ rr{| l |}} ) 0'(= a2◂ [ *{ rr{| l |}}] ) } ⊢ 0'(= a2◂ [ *{ rr{| l |}}] )
	mov r14,r13
; .mov_ptn 0(<2)◂{ 2'(= *{ rr{| l |}} ) 1'(= a2◂ [ *{ rr{| l |}}] ) } ⊢ 0'(= a2◂ [ *{ rr{| l |}}] )
	mov rax,[SS_RCD_2_TOP]
	mov rsi,[rax] 
	mov QWORD [SS_RCD_2_TOP],rsi
	mov QWORD [rax],0
	mov r9,rax
	mov rax,r8
	mov QWORD [r9+8+8*0],rax
	mov rax,r14
	mov QWORD [r9+8+8*1],rax
	mov rax,r9
	mov BYTE [rax+6],0
	mov r13,rax
	ret
LB_1605:
;; ?. 0'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 1(<2)◂{ }
;; rsp=0 , %125~1'(= a2◂ [ *{ rr{| l |}}] ) 
; ∎ 1'(= a2◂ [ *{ rr{| l |}}] )
; .mov_ptn2 1'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 0'(= a2◂ [ *{ rr{| l |}}] )
; .mov_ptn 1'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 0'(= a2◂ [ *{ rr{| l |}}] )
	mov rax,r14
	mov r13,rax
	ret
LB_1600: ; 194 { 0'(= a35◂ [ *{ }] ) 1'(= a35◂ [ *{ }] ) } ⊢ 0'(= a35◂ [ *{ *{ }*{ }}] ) : ({ _t35◂{ } _t35◂{ } }→_t35◂{ { } { } })
;; rsp=0 , %1131~1'(= a35◂ [ *{ }] ) %1130~0'(= a35◂ [ *{ }] ) 
;; ? 0'(= a35◂ [ *{ }] ) ⊢ 0(<2)◂0'(= *{ } )
	mov rdi,r13
	cmp BYTE [rdi+6],0
	jnz LB_1601
;; rsp=0 , %1133~0'(= *{ } ) %1131~1'(= a35◂ [ *{ }] ) 
;; ? 1'(= a35◂ [ *{ }] ) ⊢ 0(<2)◂1'(= *{ } )
	mov rdi,r14
	cmp BYTE [rdi+6],0
	jnz LB_1602
;; rsp=0 , %1135~1'(= *{ } ) %1133~0'(= *{ } ) 
; #193 { 0'(= *{ } ) 1'(= *{ } ) } ⊢ 0(<2)◂{ 0'(= *{ } ) 1'(= *{ } ) }
;; rsp=0 , %1136~0(<2)◂{ 0'(= *{ } ) 1'(= *{ } ) } 
; ∎ 0(<2)◂{ 0'(= *{ } ) 1'(= *{ } ) }
; .mov_ptn2 0(<2)◂{ 0'(= *{ } ) 1'(= *{ } ) } ⊢ 0'(= a35◂ [ *{ *{ }*{ }}] )
	mov r8,r13
; .mov_ptn 0(<2)◂{ 2'(= *{ } ) 1'(= *{ } ) } ⊢ 0'(= a35◂ [ *{ *{ }*{ }}] )
	mov rax,[SS_RCD_2_TOP]
	mov rsi,[rax] 
	mov QWORD [SS_RCD_2_TOP],rsi
	mov QWORD [rax],0
	mov r9,rax
	mov rax,r8
	mov QWORD [r9+8+8*0],rax
	mov rax,r14
	mov QWORD [r9+8+8*1],rax
	mov rax,r9
	mov BYTE [rax+6],0
	mov r13,rax
	ret
LB_1602:
;; ?. 1'(= a35◂ [ *{ }] ) ⊢ 1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] )
	mov rax,QWORD [rdi+8]
	mov r8,rax
;; rsp=0 , %1134~2'(= a2◂ [ *{ rr{| l |}}] ) %1133~0'(= *{ } ) 
; #192 2'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] )
;; rsp=0 , %1137~1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] ) %1133~0'(= *{ } ) 
; ∎ 1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] )
; .dlt.ptn 0'(= *{ } )
; .dlt.hp rcd
; .mov_ptn2 1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 0'(= a35◂ [ *{ *{ }*{ }}] )
; .mov_ptn 1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 0'(= a35◂ [ *{ *{ }*{ }}] )
	mov rax,r8
	mov rdi,rax
	mov rax,r15
	mov r15,QWORD [r15] 
	mov QWORD [rax],0
	mov BYTE [rax+6],1
	mov QWORD [rax+8],rdi
	mov r13,rax
	ret
LB_1601:
;; ?. 0'(= a35◂ [ *{ }] ) ⊢ 1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] )
	mov rax,QWORD [rdi+8]
	mov r8,rax
;; rsp=0 , %1132~2'(= a2◂ [ *{ rr{| l |}}] ) %1131~1'(= a35◂ [ *{ }] ) 
;; ? 1'(= a35◂ [ *{ }] ) ⊢ 0(<2)◂1'(= *{ } )
	mov rdi,r14
	cmp BYTE [rdi+6],0
	jnz LB_1603
;; rsp=0 , %1139~1'(= *{ } ) %1132~2'(= a2◂ [ *{ rr{| l |}}] ) 
; #192 2'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] )
;; rsp=0 , %1140~1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] ) %1139~1'(= *{ } ) 
; ∎ 1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] )
; .dlt.ptn 1'(= *{ } )
; .dlt.hp rcd
; .mov_ptn2 1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 0'(= a35◂ [ *{ *{ }*{ }}] )
; .mov_ptn 1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 0'(= a35◂ [ *{ *{ }*{ }}] )
	mov rax,r8
	mov rdi,rax
	mov rax,r15
	mov r15,QWORD [r15] 
	mov QWORD [rax],0
	mov BYTE [rax+6],1
	mov QWORD [rax+8],rdi
	mov r13,rax
	ret
LB_1603:
;; ?. 1'(= a35◂ [ *{ }] ) ⊢ 1(<2)◂0'(= a2◂ [ *{ rr{| l |}}] )
	mov rax,QWORD [rdi+8]
	mov r13,rax
;; rsp=0 , %1138~0'(= a2◂ [ *{ rr{| l |}}] ) %1132~2'(= a2◂ [ *{ rr{| l |}}] ) 
; rsp_d=0, #53 { 2'(= a2◂ [ *{ rr{| l |}}] ) 0'(= a2◂ [ *{ rr{| l |}}] ) } ⊢ 0'(= a2◂ [ *{ rr{| l |}}] )
; .mov_ptn2 { 2'(= a2◂ [ *{ rr{| l |}}] ) 0'(= a2◂ [ *{ rr{| l |}}] ) } ⊢ { 0'(= a2◂ [ *{ rr{| l |}}] ) 1'(= a2◂ [ *{ rr{| l |}}] ) }
; .mov_ptn 0'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 1'(= a2◂ [ *{ rr{| l |}}] )
	mov rax,r13
	mov r14,rax
; .mov_ptn 2'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 0'(= a2◂ [ *{ rr{| l |}}] )
	mov rax,r8
	mov r13,rax
	call LB_1604

;; rsp=0 , %1141~0'(= a2◂ [ *{ rr{| l |}}] ) 
; #192 0'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 1(<2)◂0'(= a2◂ [ *{ rr{| l |}}] )
;; rsp=0 , %1142~1(<2)◂0'(= a2◂ [ *{ rr{| l |}}] ) 
; ∎ 1(<2)◂0'(= a2◂ [ *{ rr{| l |}}] )
; .mov_ptn2 1(<2)◂0'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 0'(= a35◂ [ *{ *{ }*{ }}] )
	mov r14,r13
; .mov_ptn 1(<2)◂1'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 0'(= a35◂ [ *{ *{ }*{ }}] )
	mov rax,r14
	mov rdi,rax
	mov rax,r15
	mov r15,QWORD [r15] 
	mov QWORD [rax],0
	mov BYTE [rax+6],1
	mov QWORD [rax+8],rdi
	mov r13,rax
	ret
LB_1599
;; rsp=2 , %1402~1'(= r ) %1401~0'(= r ) %1400~9'(= a35◂ [ *{ }] ) %1399~8'(= a35◂ [ *{ }] ) 
; rsp_d=0, #194 { 8'(= a35◂ [ *{ }] ) 9'(= a35◂ [ *{ }] ) } ⊢ 2'(= a35◂ [ *{ *{ }*{ }}] )
	sub rsp,16
	mov QWORD [rsp+8*0],r13
	mov QWORD [rsp+8*1],r14
; .mov_ptn2 { 8'(= a35◂ [ *{ }] ) 9'(= a35◂ [ *{ }] ) } ⊢ { 0'(= a35◂ [ *{ }] ) 1'(= a35◂ [ *{ }] ) }
; .mov_ptn 9'(= a35◂ [ *{ }] ) ⊢ 1'(= a35◂ [ *{ }] )
	mov rax,QWORD [rsp-8+8*3]
	mov r14,rax
; .mov_ptn 8'(= a35◂ [ *{ }] ) ⊢ 0'(= a35◂ [ *{ }] )
	mov rax,QWORD [rsp-8+8*4]
	mov r13,rax
	call LB_1600

	mov r14,QWORD [rsp-8+8*2]
	mov rax,QWORD [rsp-8+8*1]
	mov r8,r13
	mov r13,rax
	add rsp,32
;; rsp=0 , %1403~2'(= a35◂ [ *{ *{ }*{ }}] ) %1402~1'(= r ) %1401~0'(= r ) 
;; ? 2'(= a35◂ [ *{ *{ }*{ }}] ) ⊢ 0(<2)◂{ 3'(= *{ } ) 4'(= *{ } ) }
	mov rdi,r8
	cmp BYTE [rdi+6],0
	jnz LB_1606
	mov rdi,r8
	mov rdi,QWORD [rdi+8+8*0]
	mov r9,rdi
	mov rdi,r8
	mov rdi,QWORD [rdi+8+8*1]
	mov r10,rdi
;; rsp=0 , %1406~4'(= *{ } ) %1405~3'(= *{ } ) %1402~1'(= r ) %1401~0'(= r ) 
; #193 { } ⊢ 0(<2)◂{ }
;; rsp=0 , %1407~0(<2)◂{ } %1406~4'(= *{ } ) %1405~3'(= *{ } ) %1402~1'(= r ) %1401~0'(= r ) 
; #22 0(<2)◂{ } ⊢ 0(<2)◂0(<2)◂{ }
;; rsp=0 , %1408~0(<2)◂0(<2)◂{ } %1406~4'(= *{ } ) %1405~3'(= *{ } ) %1402~1'(= r ) %1401~0'(= r ) 
; ∎ 0(<2)◂0(<2)◂{ }
; .dlt.ptn 4'(= *{ } )
; .dlt.hp rcd
; .dlt.ptn 3'(= *{ } )
; .dlt.hp rcd
; .dlt.ptn 1'(= r )
; .dlt.ptn 0'(= r )
; .mov_ptn2 0(<2)◂0(<2)◂{ } ⊢ 2'(= a3◂ [ a35◂ [ *{ }]] )
; .mov_ptn 0(<2)◂0(<2)◂{ } ⊢ 2'(= a3◂ [ a35◂ [ *{ }]] )
	mov rax,unt 
	mov rax,unt_0
	mov rdi,rax
	mov rax,r15
	mov r15,QWORD [r15] 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	jmp LB_1598
LB_1606:
;; ?. 2'(= a35◂ [ *{ *{ }*{ }}] ) ⊢ 1(<2)◂3'(= a2◂ [ *{ rr{| l |}}] )
	mov rax,QWORD [rdi+8]
	mov r9,rax
;; rsp=0 , %1404~3'(= a2◂ [ *{ rr{| l |}}] ) %1402~1'(= r ) %1401~0'(= r ) 
; rsp_d=0, #196 3'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 2'(= {| l |} )
	sub rsp,16
	mov QWORD [rsp+8*0],r13
	mov QWORD [rsp+8*1],r14
; .mov_ptn2 3'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 0'(= a2◂ [ *{ rr{| l |}}] )
; .mov_ptn 3'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 0'(= a2◂ [ *{ rr{| l |}}] )
	mov rax,r9
	mov r13,rax
	call ETR_196

	mov r14,QWORD [rsp-8+8*2]
	mov rax,QWORD [rsp-8+8*1]
	mov r8,r13
	mov r13,rax
	add rsp,16
;; rsp=0 , %1409~2'(= {| l |} ) %1402~1'(= r ) %1401~0'(= r ) 
; _#8 2'(= {| l |} ) ⊢ 2'(= {| l |} )
	mov rdi,fmt_emt
	call emt_stg
	C_PUSH_REGS
	mov r8,r8
	mov rdi,r8
	call emt_s8
	C_POP_REGS
	mov rdi,fmt_nl
	call emt_stg
	jmp LB_1607
LB_1607:
;; rsp=0 , %1410~2'(= {| l |} ) %1402~1'(= r ) %1401~0'(= r ) 
	mov rdi,LB_1608
	call emt_stg 
	jmp err
LB_1598:
	cmp BYTE [r8+6],0
	jnz LB_1574
	pop r14
	pop r9
	add rsp,8
	pop r13
	jmp LB_1573
LB_1574:
	mov r9,QWORD [rsp+8]
	mov r14,QWORD [rsp+16]
	mov r13,QWORD [rsp+24]
	mov QWORD [rsp+8*0],r14
	mov r13,QWORD [rsp+16+8*0]
	mov r14,QWORD [rsp+8*0]
	jmp LB_1611
LB_1611
;; rsp=0 , %1412~1'(= r ) %1411~0'(= r ) 
; » _^ .. ⊢ ..
; .. //
	mov rdi,0
	sub rsp,128
	mov rdi,rsp
	mov rsi,fmt_d
	mov rdx,r13
 xor rax,rax
	mov QWORD [tmp],rdi
	C_CALL_SF sprintf
	push rax 
	add rax,QWORD [tmp]
	mov rdi,rax
	sub rsp,128
	mov rdi,rsp
	mov rsi,fmt_d
	mov rdx,r14
 xor rax,rax
	mov QWORD [tmp],rdi
	C_CALL_SF sprintf
	push rax 
	add rax,QWORD [tmp]
	mov rdi,rax
	add rdi,11
	push rdi 
	call mlc_s8
	pop rdi
	mov r8,rax
	lea rdi,[rax+7+rdi]
	std 
	mov QWORD [tmp],rcx 
	lea rsi,[LB_1612+2-1]
	mov rcx,2
	rep movsb
	pop rcx
	lea rsi,[rsp+rcx-1]
	rep movsb
	add rsp,128
	lea rsi,[LB_1613+1-1]
	mov rcx,1
	rep movsb
	pop rcx
	lea rsi,[rsp+rcx-1]
	rep movsb
	add rsp,128
	lea rsi,[LB_1614+8-1]
	mov rcx,8
	rep movsb
	mov rcx,QWORD [tmp] 
;; rsp=0 , %1415~2'(= {| l |} ) %1414~1'(= r ) %1413~0'(= r ) 
; _#8 2'(= {| l |} ) ⊢ 2'(= {| l |} )
	mov rdi,fmt_emt
	call emt_stg
	C_PUSH_REGS
	mov r8,r8
	mov rdi,r8
	call emt_s8
	C_POP_REGS
	mov rdi,fmt_nl
	call emt_stg
	jmp LB_1615
LB_1615:
;; rsp=0 , %1416~2'(= {| l |} ) %1414~1'(= r ) %1413~0'(= r ) 
	mov rdi,LB_1616
	call emt_stg 
	jmp err
LB_1610:
	cmp BYTE [r8+6],0
	jnz LB_1609
	pop r14
	pop r9
	add rsp,8
	pop r13
	jmp LB_1573
LB_1609:
	pop rdi
	pop r9 
	pop r14
	pop r13
	jmp LB_1573
LB_1573:
	cmp BYTE [r8+6],0
	jnz LB_1617
	jmp LB_1618
LB_1617:
	add rsp,0
	add rsp,8
	pop r9 
	pop r14 
	pop r13
	ret
LB_1618:
	mov QWORD [rsp+8*0],r14
	mov r8,[r8+8]
; .mov_ptn2 2'(= a35◂ [ *{ }] ) ⊢ 3'(= a35◂ [ *{ }] )
	mov r10,r9
; .mov_ptn 2'(= a35◂ [ *{ }] ) ⊢ 3'(= a35◂ [ *{ }] )
	mov rax,r8
	mov r9,rax
	mov r13,QWORD [rsp+16+8*0]
	mov r14,QWORD [rsp+8*0]
	jmp LB_1620
LB_1620
;; rsp=0 , %1417~3'(= a35◂ [ *{ }] ) %1398~1'(= r ) %1397~0'(= r ) 
; #22 3'(= a35◂ [ *{ }] ) ⊢ 0(<2)◂3'(= a35◂ [ *{ }] )
;; rsp=0 , %1418~0(<2)◂3'(= a35◂ [ *{ }] ) %1398~1'(= r ) %1397~0'(= r ) 
; ∎ 0(<2)◂3'(= a35◂ [ *{ }] )
; .dlt.ptn 1'(= r )
; .dlt.ptn 0'(= r )
; .mov_ptn2 0(<2)◂3'(= a35◂ [ *{ }] ) ⊢ 2'(= a3◂ [ a35◂ [ *{ }]] )
; .mov_ptn 0(<2)◂3'(= a35◂ [ *{ }] ) ⊢ 2'(= a3◂ [ a35◂ [ *{ }]] )
	mov rax,r9
	mov rdi,rax
	mov rax,r15
	mov r15,QWORD [r15] 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	jmp LB_1619
LB_1619:
	cmp BYTE [r8+6],0
	jnz LB_1563
	pop r14
	pop r9
	add rsp,8
	pop r13
	ret
LB_1563:
	mov r9,QWORD [rsp+8]
	mov r14,QWORD [rsp+16]
	mov r13,QWORD [rsp+24]
	mov QWORD [rsp+8*0],r14
	mov r13,QWORD [rsp+16+8*0]
	mov r14,QWORD [rsp+8*0]
	jmp LB_1623
LB_1623
;; rsp=0 , %1420~1'(= r ) %1419~0'(= r ) 
; #193 { } ⊢ 0(<2)◂{ }
;; rsp=0 , %1421~0(<2)◂{ } %1420~1'(= r ) %1419~0'(= r ) 
; #22 0(<2)◂{ } ⊢ 0(<2)◂0(<2)◂{ }
;; rsp=0 , %1422~0(<2)◂0(<2)◂{ } %1420~1'(= r ) %1419~0'(= r ) 
; ∎ 0(<2)◂0(<2)◂{ }
; .dlt.ptn 1'(= r )
; .dlt.ptn 0'(= r )
; .mov_ptn2 0(<2)◂0(<2)◂{ } ⊢ 2'(= a3◂ [ a35◂ [ *{ }]] )
; .mov_ptn 0(<2)◂0(<2)◂{ } ⊢ 2'(= a3◂ [ a35◂ [ *{ }]] )
	mov rax,unt 
	mov rax,unt_0
	mov rdi,rax
	mov rax,r15
	mov r15,QWORD [r15] 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	jmp LB_1622
LB_1622:
	cmp BYTE [r8+6],0
	jnz LB_1621
	pop r14
	pop r9
	add rsp,8
	pop r13
	ret
LB_1621:
	pop rdi
	pop r9 
	pop r14
	pop r13
	ret
ETR_218:
	mov r9,0x0000_ffff_ffff_ffff
	and r9,[r13]
	call GRM_218
	ret
GRM_218:
	sub rsp,32
	mov QWORD [rsp+24],r13
	mov QWORD [rsp+16],r14 
	mov QWORD [rsp+8],r9
	jmp LB_1626
LB_1625:
	add r14,1 
LB_1626:
	cmp r14,r9
	jge LB_1627
	JZ_LINE_SPC BYTE [r13+8+r14], LB_1625
LB_1627
	lea rax,[r14+2]
	cmp rax,r9
	jg LB_1630
	jmp LB_1631
LB_1630:
	mov r8,unt_1
	jmp LB_1628
LB_1631:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],92
	jnz LB_1632
	cmp BYTE [rdi+1],91
	jnz LB_1632
	jmp LB_1633
LB_1632:
	mov r8,unt_1
	jmp LB_1628
LB_1633:
	add r14,2
	jmp LB_1629
LB_1628:
	add rsp,0
	jmp LB_1624
LB_1629:
	sub rsp,32
	mov QWORD [rsp+24],r13
	mov QWORD [rsp+16],r14 
	mov QWORD [rsp+8],r9
	jmp LB_1637
LB_1636:
	add r14,1 
LB_1637:
	cmp r14,r9
	jge LB_1638
	JZ_LINE_SPC BYTE [r13+8+r14], LB_1636
LB_1638
	lea rax,[r14+1]
	cmp rax,r9
	jg LB_1641
	jmp LB_1642
LB_1641:
	mov r8,unt_1
	jmp LB_1639
LB_1642:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],10
	jnz LB_1643
	jmp LB_1644
LB_1643:
	mov r8,unt_1
	jmp LB_1639
LB_1644:
	add r14,1
	jmp LB_1640
LB_1639:
	add rsp,0
	jmp LB_1635
LB_1640:
	jmp LB_1646
LB_1645:
	add r14,1 
LB_1646:
	cmp r14,r9
	jge LB_1647
	JZ_LINE_SPC BYTE [r13+8+r14], LB_1645
LB_1647
	call GRM_218
	cmp BYTE [r8+6],0
	jnz LB_1650
	jmp LB_1651
LB_1650:
	jmp LB_1648
LB_1651:
	sub rsp,8
	mov r8,[r8+8]
; .mov_ptn2 2'(= a35◂ [ *{ }] ) ⊢ 8'(= a35◂ [ *{ }] )
; .mov_ptn 2'(= a35◂ [ *{ }] ) ⊢ 8'(= a35◂ [ *{ }] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_1649
LB_1648:
	add rsp,0
	jmp LB_1635
LB_1649:
	jmp LB_1653
LB_1652:
	add r14,1 
LB_1653:
	cmp r14,r9
	jge LB_1654
	JZ_LINE_SPC BYTE [r13+8+r14], LB_1652
LB_1654
	call GRM_218
	cmp BYTE [r8+6],0
	jnz LB_1657
	jmp LB_1658
LB_1657:
	jmp LB_1655
LB_1658:
	sub rsp,8
	mov r8,[r8+8]
; .mov_ptn2 2'(= a35◂ [ *{ }] ) ⊢ 9'(= a35◂ [ *{ }] )
; .mov_ptn 2'(= a35◂ [ *{ }] ) ⊢ 9'(= a35◂ [ *{ }] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_1656
LB_1655:
	add rsp,8
	jmp LB_1635
LB_1656:
	mov QWORD [rsp+8*2],r14
	mov r13,QWORD [rsp+16+8*2]
	mov r14,QWORD [rsp+8*2]
	jmp LB_1660
LB_1660
;; rsp=2 , %1428~1'(= r ) %1427~0'(= r ) %1426~9'(= a35◂ [ *{ }] ) %1425~8'(= a35◂ [ *{ }] ) 
; rsp_d=0, #194 { 8'(= a35◂ [ *{ }] ) 9'(= a35◂ [ *{ }] ) } ⊢ 2'(= a35◂ [ *{ *{ }*{ }}] )
	sub rsp,16
	mov QWORD [rsp+8*0],r13
	mov QWORD [rsp+8*1],r14
; .mov_ptn2 { 8'(= a35◂ [ *{ }] ) 9'(= a35◂ [ *{ }] ) } ⊢ { 0'(= a35◂ [ *{ }] ) 1'(= a35◂ [ *{ }] ) }
; .mov_ptn 9'(= a35◂ [ *{ }] ) ⊢ 1'(= a35◂ [ *{ }] )
	mov rax,QWORD [rsp-8+8*3]
	mov r14,rax
; .mov_ptn 8'(= a35◂ [ *{ }] ) ⊢ 0'(= a35◂ [ *{ }] )
	mov rax,QWORD [rsp-8+8*4]
	mov r13,rax
	call LB_1600

	mov r14,QWORD [rsp-8+8*2]
	mov rax,QWORD [rsp-8+8*1]
	mov r8,r13
	mov r13,rax
	add rsp,32
;; rsp=0 , %1429~2'(= a35◂ [ *{ *{ }*{ }}] ) %1428~1'(= r ) %1427~0'(= r ) 
;; ? 2'(= a35◂ [ *{ *{ }*{ }}] ) ⊢ 0(<2)◂{ 3'(= *{ } ) 4'(= *{ } ) }
	mov rdi,r8
	cmp BYTE [rdi+6],0
	jnz LB_1661
	mov rdi,r8
	mov rdi,QWORD [rdi+8+8*0]
	mov r9,rdi
	mov rdi,r8
	mov rdi,QWORD [rdi+8+8*1]
	mov r10,rdi
;; rsp=0 , %1432~4'(= *{ } ) %1431~3'(= *{ } ) %1428~1'(= r ) %1427~0'(= r ) 
; #193 { } ⊢ 0(<2)◂{ }
;; rsp=0 , %1433~0(<2)◂{ } %1432~4'(= *{ } ) %1431~3'(= *{ } ) %1428~1'(= r ) %1427~0'(= r ) 
; #22 0(<2)◂{ } ⊢ 0(<2)◂0(<2)◂{ }
;; rsp=0 , %1434~0(<2)◂0(<2)◂{ } %1432~4'(= *{ } ) %1431~3'(= *{ } ) %1428~1'(= r ) %1427~0'(= r ) 
; ∎ 0(<2)◂0(<2)◂{ }
; .dlt.ptn 4'(= *{ } )
; .dlt.hp rcd
; .dlt.ptn 3'(= *{ } )
; .dlt.hp rcd
; .dlt.ptn 1'(= r )
; .dlt.ptn 0'(= r )
; .mov_ptn2 0(<2)◂0(<2)◂{ } ⊢ 2'(= a3◂ [ a35◂ [ *{ }]] )
; .mov_ptn 0(<2)◂0(<2)◂{ } ⊢ 2'(= a3◂ [ a35◂ [ *{ }]] )
	mov rax,unt 
	mov rax,unt_0
	mov rdi,rax
	mov rax,r15
	mov r15,QWORD [r15] 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	jmp LB_1659
LB_1661:
;; ?. 2'(= a35◂ [ *{ *{ }*{ }}] ) ⊢ 1(<2)◂3'(= a2◂ [ *{ rr{| l |}}] )
	mov rax,QWORD [rdi+8]
	mov r9,rax
;; rsp=0 , %1430~3'(= a2◂ [ *{ rr{| l |}}] ) %1428~1'(= r ) %1427~0'(= r ) 
; rsp_d=0, #196 3'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 2'(= {| l |} )
	sub rsp,16
	mov QWORD [rsp+8*0],r13
	mov QWORD [rsp+8*1],r14
; .mov_ptn2 3'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 0'(= a2◂ [ *{ rr{| l |}}] )
; .mov_ptn 3'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 0'(= a2◂ [ *{ rr{| l |}}] )
	mov rax,r9
	mov r13,rax
	call ETR_196

	mov r14,QWORD [rsp-8+8*2]
	mov rax,QWORD [rsp-8+8*1]
	mov r8,r13
	mov r13,rax
	add rsp,16
;; rsp=0 , %1435~2'(= {| l |} ) %1428~1'(= r ) %1427~0'(= r ) 
; _#8 2'(= {| l |} ) ⊢ 2'(= {| l |} )
	mov rdi,fmt_emt
	call emt_stg
	C_PUSH_REGS
	mov r8,r8
	mov rdi,r8
	call emt_s8
	C_POP_REGS
	mov rdi,fmt_nl
	call emt_stg
	jmp LB_1662
LB_1662:
;; rsp=0 , %1436~2'(= {| l |} ) %1428~1'(= r ) %1427~0'(= r ) 
	mov rdi,LB_1663
	call emt_stg 
	jmp err
LB_1659:
	cmp BYTE [r8+6],0
	jnz LB_1635
	pop r14
	pop r9
	add rsp,8
	pop r13
	jmp LB_1634
LB_1635:
	mov r9,QWORD [rsp+8]
	mov r14,QWORD [rsp+16]
	mov r13,QWORD [rsp+24]
	mov QWORD [rsp+8*0],r14
	mov r13,QWORD [rsp+16+8*0]
	mov r14,QWORD [rsp+8*0]
	jmp LB_1666
LB_1666
;; rsp=0 , %1438~1'(= r ) %1437~0'(= r ) 
; #20 { } ⊢ 1(<2)◂{ }
;; rsp=0 , %1439~1(<2)◂{ } %1438~1'(= r ) %1437~0'(= r ) 
	jmp LB_1667
LB_1667:
; $ %[ "blk_cmt 0" ] ⊢ %[ "blk_cmt 0" ]
;; rsp=0 , %1440~%[ "blk_cmt 0" ] %1439~1(<2)◂{ } %1438~1'(= r ) %1437~0'(= r ) 
; #21 { { 0'(= r ) 1'(= r ) %[ "blk_cmt 0" ] } 1(<2)◂{ } } ⊢ 0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "blk_cmt 0" ] } 1(<2)◂{ } }
;; rsp=0 , %1441~0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "blk_cmt 0" ] } 1(<2)◂{ } } 
; #192 0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "blk_cmt 0" ] } 1(<2)◂{ } } ⊢ 1(<2)◂0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "blk_cmt 0" ] } 1(<2)◂{ } }
;; rsp=0 , %1442~1(<2)◂0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "blk_cmt 0" ] } 1(<2)◂{ } } 
; #22 1(<2)◂0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "blk_cmt 0" ] } 1(<2)◂{ } } ⊢ 0(<2)◂1(<2)◂0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "blk_cmt 0" ] } 1(<2)◂{ } }
;; rsp=0 , %1443~0(<2)◂1(<2)◂0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "blk_cmt 0" ] } 1(<2)◂{ } } 
; ∎ 0(<2)◂1(<2)◂0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "blk_cmt 0" ] } 1(<2)◂{ } }
; .mov_ptn2 0(<2)◂1(<2)◂0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "blk_cmt 0" ] } 1(<2)◂{ } } ⊢ 2'(= a3◂ [ a35◂ [ *{ }]] )
; .mov_ptn 0(<2)◂1(<2)◂0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "blk_cmt 0" ] } 1(<2)◂{ } } ⊢ 2'(= a3◂ [ a35◂ [ *{ }]] )
	mov rax,[SS_RCD_2_TOP]
	mov rsi,[rax] 
	mov QWORD [SS_RCD_2_TOP],rsi
	mov QWORD [rax],0
	mov r9,rax
	mov rax,[SS_RCD_3_TOP]
	mov rsi,[rax] 
	mov QWORD [SS_RCD_3_TOP],rsi
	mov QWORD [rax],0
	mov r10,rax
	mov rax,r13
	mov QWORD [r10+8+8*0],rax
	mov rax,r14
	mov QWORD [r10+8+8*1],rax
	mov rsi,1  
	mov rdi,24
	xor rax,rax 
	C_CALL_SF calloc
	mov QWORD [rax],9
	mov BYTE [rax+8+0],98
	mov BYTE [rax+8+1],108
	mov BYTE [rax+8+2],107
	mov BYTE [rax+8+3],95
	mov BYTE [rax+8+4],99
	mov BYTE [rax+8+5],109
	mov BYTE [rax+8+6],116
	mov BYTE [rax+8+7],32
	mov BYTE [rax+8+8],48
	mov QWORD [r10+8+8*2],rax
	mov rax,r10
	mov QWORD [r9+8+8*0],rax
	mov rax,unt 
	mov rax,unt_1
	mov QWORD [r9+8+8*1],rax
	mov rax,r9
	mov BYTE [rax+6],0
	mov rdi,rax
	mov rax,r15
	mov r15,QWORD [r15] 
	mov QWORD [rax],0
	mov BYTE [rax+6],1
	mov QWORD [rax+8],rdi
	mov rdi,rax
	mov rax,r15
	mov r15,QWORD [r15] 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	jmp LB_1665
LB_1665:
	cmp BYTE [r8+6],0
	jnz LB_1664
	pop r14
	pop r9
	add rsp,8
	pop r13
	jmp LB_1634
LB_1664:
	pop rdi
	pop r9 
	pop r14
	pop r13
	jmp LB_1634
LB_1634:
	cmp BYTE [r8+6],0
	jnz LB_1668
	jmp LB_1669
LB_1668:
	add rsp,0
	add rsp,8
	pop r9 
	pop r14 
	pop r13
	ret
LB_1669:
	mov QWORD [rsp+8*0],r14
	mov r8,[r8+8]
; .mov_ptn2 2'(= a35◂ [ *{ }] ) ⊢ 3'(= a35◂ [ *{ }] )
	mov r10,r9
; .mov_ptn 2'(= a35◂ [ *{ }] ) ⊢ 3'(= a35◂ [ *{ }] )
	mov rax,r8
	mov r9,rax
	mov r13,QWORD [rsp+16+8*0]
	mov r14,QWORD [rsp+8*0]
	jmp LB_1671
LB_1671
;; rsp=0 , %1444~3'(= a35◂ [ *{ }] ) %1424~1'(= r ) %1423~0'(= r ) 
; #22 3'(= a35◂ [ *{ }] ) ⊢ 0(<2)◂3'(= a35◂ [ *{ }] )
;; rsp=0 , %1445~0(<2)◂3'(= a35◂ [ *{ }] ) %1424~1'(= r ) %1423~0'(= r ) 
; ∎ 0(<2)◂3'(= a35◂ [ *{ }] )
; .dlt.ptn 1'(= r )
; .dlt.ptn 0'(= r )
; .mov_ptn2 0(<2)◂3'(= a35◂ [ *{ }] ) ⊢ 2'(= a3◂ [ a35◂ [ *{ }]] )
; .mov_ptn 0(<2)◂3'(= a35◂ [ *{ }] ) ⊢ 2'(= a3◂ [ a35◂ [ *{ }]] )
	mov rax,r9
	mov rdi,rax
	mov rax,r15
	mov r15,QWORD [r15] 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	jmp LB_1670
LB_1670:
	cmp BYTE [r8+6],0
	jnz LB_1624
	pop r14
	pop r9
	add rsp,8
	pop r13
	ret
LB_1624:
	mov r9,QWORD [rsp+8]
	mov r14,QWORD [rsp+16]
	mov r13,QWORD [rsp+24]
	jmp LB_1674
LB_1673:
	add r14,1 
LB_1674:
	cmp r14,r9
	jge LB_1675
	JZ_LINE_SPC BYTE [r13+8+r14], LB_1673
LB_1675
	lea rax,[r14+2]
	cmp rax,r9
	jg LB_1678
	jmp LB_1679
LB_1678:
	mov r8,unt_1
	jmp LB_1676
LB_1679:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],92
	jnz LB_1680
	cmp BYTE [rdi+1],93
	jnz LB_1680
	jmp LB_1681
LB_1680:
	mov r8,unt_1
	jmp LB_1676
LB_1681:
	add r14,2
	jmp LB_1677
LB_1676:
	add rsp,0
	jmp LB_1672
LB_1677:
	sub rsp,32
	mov QWORD [rsp+24],r13
	mov QWORD [rsp+16],r14 
	mov QWORD [rsp+8],r9
	jmp LB_1685
LB_1684:
	add r14,1 
LB_1685:
	cmp r14,r9
	jge LB_1686
	JZ_LINE_SPC BYTE [r13+8+r14], LB_1684
LB_1686
	lea rax,[r14+1]
	cmp rax,r9
	jg LB_1689
	jmp LB_1690
LB_1689:
	mov r8,unt_1
	jmp LB_1687
LB_1690:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],10
	jnz LB_1691
	jmp LB_1692
LB_1691:
	mov r8,unt_1
	jmp LB_1687
LB_1692:
	add r14,1
	jmp LB_1688
LB_1687:
	add rsp,0
	jmp LB_1683
LB_1688:
	mov QWORD [rsp+8*0],r14
	mov r13,QWORD [rsp+16+8*0]
	mov r14,QWORD [rsp+8*0]
	jmp LB_1694
LB_1694
;; rsp=0 , %1449~1'(= r ) %1448~0'(= r ) 
; #22 { } ⊢ 0(<2)◂{ }
;; rsp=0 , %1450~0(<2)◂{ } %1449~1'(= r ) %1448~0'(= r ) 
; ∎ 0(<2)◂{ }
; .dlt.ptn 1'(= r )
; .dlt.ptn 0'(= r )
; .mov_ptn2 0(<2)◂{ } ⊢ 2'(= a3◂ [ *{ }] )
; .mov_ptn 0(<2)◂{ } ⊢ 2'(= a3◂ [ *{ }] )
	mov rax,unt 
	mov rax,unt_0
	mov r8,rax
	jmp LB_1693
LB_1693:
	cmp BYTE [r8+6],0
	jnz LB_1683
	pop r14
	pop r9
	add rsp,8
	pop r13
	jmp LB_1682
LB_1683:
	mov r9,QWORD [rsp+8]
	mov r14,QWORD [rsp+16]
	mov r13,QWORD [rsp+24]
	jmp LB_1697
LB_1696:
	add r14,1 
LB_1697:
	cmp r14,r9
	jge LB_1698
	JZ_LINE_SPC BYTE [r13+8+r14], LB_1696
LB_1698
	cmp r14,r9
	jge LB_1701
	jmp LB_1702
LB_1701:
	mov r8,unt_1 
	jmp LB_1699
LB_1702:
	movzx rdi,BYTE [r13+8+r14]
	push rdi 
	add r14,1 
	jmp LB_1700
LB_1699:
	add rsp,0
	pop rdi
	pop r9 
	pop r14
	pop r13
	jmp LB_1682
LB_1700:
	mov QWORD [rsp+8*1],r14
	mov r13,QWORD [rsp+16+8*1]
	mov r14,QWORD [rsp+8*1]
	jmp LB_1704
LB_1704
;; rsp=1 , %1453~1'(= r ) %1452~0'(= r ) %1451~8'(= r ) 
; #23 { } ⊢ 1(<2)◂{ }
;; rsp=1 , %1454~1(<2)◂{ } %1453~1'(= r ) %1452~0'(= r ) %1451~8'(= r ) 
; ∎ 1(<2)◂{ }
; .dlt.ptn 1'(= r )
; .dlt.ptn 0'(= r )
; .dlt.ptn 8'(= r )
; .mov_ptn2 1(<2)◂{ } ⊢ 2'(= a3◂ [ *{ }] )
; .mov_ptn 1(<2)◂{ } ⊢ 2'(= a3◂ [ *{ }] )
	mov rax,unt 
	mov rax,unt_1
	mov r8,rax
	add rsp,8
	jmp LB_1703
LB_1703:
	cmp BYTE [r8+6],0
	jnz LB_1695
	pop r14
	pop r9
	add rsp,8
	pop r13
	jmp LB_1682
LB_1695:
	mov r9,QWORD [rsp+8]
	mov r14,QWORD [rsp+16]
	mov r13,QWORD [rsp+24]
	mov QWORD [rsp+8*0],r14
	mov r13,QWORD [rsp+16+8*0]
	mov r14,QWORD [rsp+8*0]
	jmp LB_1707
LB_1707
;; rsp=0 , %1456~1'(= r ) %1455~0'(= r ) 
; #22 { } ⊢ 0(<2)◂{ }
;; rsp=0 , %1457~0(<2)◂{ } %1456~1'(= r ) %1455~0'(= r ) 
; ∎ 0(<2)◂{ }
; .dlt.ptn 1'(= r )
; .dlt.ptn 0'(= r )
; .mov_ptn2 0(<2)◂{ } ⊢ 2'(= a3◂ [ *{ }] )
; .mov_ptn 0(<2)◂{ } ⊢ 2'(= a3◂ [ *{ }] )
	mov rax,unt 
	mov rax,unt_0
	mov r8,rax
	jmp LB_1706
LB_1706:
	cmp BYTE [r8+6],0
	jnz LB_1705
	pop r14
	pop r9
	add rsp,8
	pop r13
	jmp LB_1682
LB_1705:
	pop rdi
	pop r9 
	pop r14
	pop r13
	jmp LB_1682
LB_1682:
	cmp BYTE [r8+6],0
	jnz LB_1708
	jmp LB_1709
LB_1708:
	add rsp,0
	add rsp,8
	pop r9 
	pop r14 
	pop r13
	ret
LB_1709:
	mov QWORD [rsp+8*0],r14
; .mov_ptn2 2'(= *{ } ) ⊢ { }
; .mov_ptn 2'(= *{ } ) ⊢ { }
	mov r13,QWORD [rsp+16+8*0]
	mov r14,QWORD [rsp+8*0]
	jmp LB_1711
LB_1711
;; rsp=0 , %1458~{ } %1447~1'(= r ) %1446~0'(= r ) 
; #193 { } ⊢ 0(<2)◂{ }
;; rsp=0 , %1459~0(<2)◂{ } %1458~{ } %1447~1'(= r ) %1446~0'(= r ) 
; #22 0(<2)◂{ } ⊢ 0(<2)◂0(<2)◂{ }
;; rsp=0 , %1460~0(<2)◂0(<2)◂{ } %1458~{ } %1447~1'(= r ) %1446~0'(= r ) 
; ∎ 0(<2)◂0(<2)◂{ }
; .dlt.ptn { }
; .dlt.ptn 1'(= r )
; .dlt.ptn 0'(= r )
; .mov_ptn2 0(<2)◂0(<2)◂{ } ⊢ 2'(= a3◂ [ a35◂ [ *{ }]] )
; .mov_ptn 0(<2)◂0(<2)◂{ } ⊢ 2'(= a3◂ [ a35◂ [ *{ }]] )
	mov rax,unt 
	mov rax,unt_0
	mov rdi,rax
	mov rax,r15
	mov r15,QWORD [r15] 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	jmp LB_1710
LB_1710:
	cmp BYTE [r8+6],0
	jnz LB_1672
	pop r14
	pop r9
	add rsp,8
	pop r13
	ret
LB_1672:
	mov r9,QWORD [rsp+8]
	mov r14,QWORD [rsp+16]
	mov r13,QWORD [rsp+24]
	jmp LB_1714
LB_1713:
	add r14,1 
LB_1714:
	cmp r14,r9
	jge LB_1715
	JZ_LINE_SPC BYTE [r13+8+r14], LB_1713
LB_1715
	call GRM_219
	cmp BYTE [r8+6],0
	jnz LB_1718
	jmp LB_1719
LB_1718:
	jmp LB_1716
LB_1719:
	sub rsp,8
	mov r8,[r8+8]
; .mov_ptn2 2'(= a35◂ [ *{ }] ) ⊢ 8'(= a35◂ [ *{ }] )
; .mov_ptn 2'(= a35◂ [ *{ }] ) ⊢ 8'(= a35◂ [ *{ }] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_1717
LB_1716:
	add rsp,0
	jmp LB_1712
LB_1717:
	mov QWORD [rsp+8*1],r14
	mov r13,QWORD [rsp+16+8*1]
	mov r14,QWORD [rsp+8*1]
	jmp LB_1721
LB_1721
;; rsp=1 , %1463~1'(= r ) %1462~0'(= r ) %1461~8'(= a35◂ [ *{ }] ) 
; #22 8'(= a35◂ [ *{ }] ) ⊢ 0(<2)◂8'(= a35◂ [ *{ }] )
;; rsp=1 , %1464~0(<2)◂8'(= a35◂ [ *{ }] ) %1463~1'(= r ) %1462~0'(= r ) 
; ∎ 0(<2)◂8'(= a35◂ [ *{ }] )
; .dlt.ptn 1'(= r )
; .dlt.ptn 0'(= r )
; .mov_ptn2 0(<2)◂8'(= a35◂ [ *{ }] ) ⊢ 2'(= a3◂ [ a35◂ [ *{ }]] )
; .mov_ptn 0(<2)◂8'(= a35◂ [ *{ }] ) ⊢ 2'(= a3◂ [ a35◂ [ *{ }]] )
	mov rax,QWORD [rsp-8+8*1]
	mov rdi,rax
	mov rax,r15
	mov r15,QWORD [r15] 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,8
	jmp LB_1720
LB_1720:
	cmp BYTE [r8+6],0
	jnz LB_1712
	pop r14
	pop r9
	add rsp,8
	pop r13
	ret
LB_1712:
	mov r9,QWORD [rsp+8]
	mov r14,QWORD [rsp+16]
	mov r13,QWORD [rsp+24]
	mov QWORD [rsp+8*0],r14
	mov r13,QWORD [rsp+16+8*0]
	mov r14,QWORD [rsp+8*0]
	jmp LB_1724
LB_1724
;; rsp=0 , %1466~1'(= r ) %1465~0'(= r ) 
; #20 { } ⊢ 1(<2)◂{ }
;; rsp=0 , %1467~1(<2)◂{ } %1466~1'(= r ) %1465~0'(= r ) 
	jmp LB_1725
LB_1725:
; $ %[ "blk_cmt 1" ] ⊢ %[ "blk_cmt 1" ]
;; rsp=0 , %1468~%[ "blk_cmt 1" ] %1467~1(<2)◂{ } %1466~1'(= r ) %1465~0'(= r ) 
; #21 { { 0'(= r ) 1'(= r ) %[ "blk_cmt 1" ] } 1(<2)◂{ } } ⊢ 0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "blk_cmt 1" ] } 1(<2)◂{ } }
;; rsp=0 , %1469~0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "blk_cmt 1" ] } 1(<2)◂{ } } 
; #192 0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "blk_cmt 1" ] } 1(<2)◂{ } } ⊢ 1(<2)◂0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "blk_cmt 1" ] } 1(<2)◂{ } }
;; rsp=0 , %1470~1(<2)◂0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "blk_cmt 1" ] } 1(<2)◂{ } } 
; #22 1(<2)◂0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "blk_cmt 1" ] } 1(<2)◂{ } } ⊢ 0(<2)◂1(<2)◂0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "blk_cmt 1" ] } 1(<2)◂{ } }
;; rsp=0 , %1471~0(<2)◂1(<2)◂0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "blk_cmt 1" ] } 1(<2)◂{ } } 
; ∎ 0(<2)◂1(<2)◂0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "blk_cmt 1" ] } 1(<2)◂{ } }
; .mov_ptn2 0(<2)◂1(<2)◂0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "blk_cmt 1" ] } 1(<2)◂{ } } ⊢ 2'(= a3◂ [ a35◂ [ *{ }]] )
; .mov_ptn 0(<2)◂1(<2)◂0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "blk_cmt 1" ] } 1(<2)◂{ } } ⊢ 2'(= a3◂ [ a35◂ [ *{ }]] )
	mov rax,[SS_RCD_2_TOP]
	mov rsi,[rax] 
	mov QWORD [SS_RCD_2_TOP],rsi
	mov QWORD [rax],0
	mov r9,rax
	mov rax,[SS_RCD_3_TOP]
	mov rsi,[rax] 
	mov QWORD [SS_RCD_3_TOP],rsi
	mov QWORD [rax],0
	mov r10,rax
	mov rax,r13
	mov QWORD [r10+8+8*0],rax
	mov rax,r14
	mov QWORD [r10+8+8*1],rax
	mov rsi,1  
	mov rdi,24
	xor rax,rax 
	C_CALL_SF calloc
	mov QWORD [rax],9
	mov BYTE [rax+8+0],98
	mov BYTE [rax+8+1],108
	mov BYTE [rax+8+2],107
	mov BYTE [rax+8+3],95
	mov BYTE [rax+8+4],99
	mov BYTE [rax+8+5],109
	mov BYTE [rax+8+6],116
	mov BYTE [rax+8+7],32
	mov BYTE [rax+8+8],49
	mov QWORD [r10+8+8*2],rax
	mov rax,r10
	mov QWORD [r9+8+8*0],rax
	mov rax,unt 
	mov rax,unt_1
	mov QWORD [r9+8+8*1],rax
	mov rax,r9
	mov BYTE [rax+6],0
	mov rdi,rax
	mov rax,r15
	mov r15,QWORD [r15] 
	mov QWORD [rax],0
	mov BYTE [rax+6],1
	mov QWORD [rax+8],rdi
	mov rdi,rax
	mov rax,r15
	mov r15,QWORD [r15] 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	jmp LB_1723
LB_1723:
	cmp BYTE [r8+6],0
	jnz LB_1722
	pop r14
	pop r9
	add rsp,8
	pop r13
	ret
LB_1722:
	pop rdi
	pop r9 
	pop r14
	pop r13
	ret
ETR_219:
	mov r9,0x0000_ffff_ffff_ffff
	and r9,[r13]
	call GRM_219
	ret
GRM_219:
	sub rsp,32
	mov QWORD [rsp+24],r13
	mov QWORD [rsp+16],r14 
	mov QWORD [rsp+8],r9
	jmp LB_1728
LB_1727:
	add r14,1 
LB_1728:
	cmp r14,r9
	jge LB_1729
	JZ_LINE_SPC BYTE [r13+8+r14], LB_1727
LB_1729
	lea rax,[r14+1]
	cmp rax,r9
	jg LB_1732
	jmp LB_1733
LB_1732:
	mov r8,unt_1
	jmp LB_1730
LB_1733:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],10
	jnz LB_1734
	jmp LB_1735
LB_1734:
	mov r8,unt_1
	jmp LB_1730
LB_1735:
	add r14,1
	jmp LB_1731
LB_1730:
	add rsp,0
	jmp LB_1726
LB_1731:
	jmp LB_1737
LB_1736:
	add r14,1 
LB_1737:
	cmp r14,r9
	jge LB_1738
	JZ_LINE_SPC BYTE [r13+8+r14], LB_1736
LB_1738
	call GRM_218
	cmp BYTE [r8+6],0
	jnz LB_1741
	jmp LB_1742
LB_1741:
	jmp LB_1739
LB_1742:
	sub rsp,8
	mov r8,[r8+8]
; .mov_ptn2 2'(= a35◂ [ *{ }] ) ⊢ 8'(= a35◂ [ *{ }] )
; .mov_ptn 2'(= a35◂ [ *{ }] ) ⊢ 8'(= a35◂ [ *{ }] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_1740
LB_1739:
	add rsp,0
	jmp LB_1726
LB_1740:
	mov QWORD [rsp+8*1],r14
	mov r13,QWORD [rsp+16+8*1]
	mov r14,QWORD [rsp+8*1]
	jmp LB_1744
LB_1744
;; rsp=1 , %1474~1'(= r ) %1473~0'(= r ) %1472~8'(= a35◂ [ *{ }] ) 
; #22 8'(= a35◂ [ *{ }] ) ⊢ 0(<2)◂8'(= a35◂ [ *{ }] )
;; rsp=1 , %1475~0(<2)◂8'(= a35◂ [ *{ }] ) %1474~1'(= r ) %1473~0'(= r ) 
; ∎ 0(<2)◂8'(= a35◂ [ *{ }] )
; .dlt.ptn 1'(= r )
; .dlt.ptn 0'(= r )
; .mov_ptn2 0(<2)◂8'(= a35◂ [ *{ }] ) ⊢ 2'(= a3◂ [ a35◂ [ *{ }]] )
; .mov_ptn 0(<2)◂8'(= a35◂ [ *{ }] ) ⊢ 2'(= a3◂ [ a35◂ [ *{ }]] )
	mov rax,QWORD [rsp-8+8*1]
	mov rdi,rax
	mov rax,r15
	mov r15,QWORD [r15] 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,8
	jmp LB_1743
LB_1743:
	cmp BYTE [r8+6],0
	jnz LB_1726
	pop r14
	pop r9
	add rsp,8
	pop r13
	ret
LB_1726:
	mov r9,QWORD [rsp+8]
	mov r14,QWORD [rsp+16]
	mov r13,QWORD [rsp+24]
	jmp LB_1747
LB_1746:
	add r14,1 
LB_1747:
	cmp r14,r9
	jge LB_1748
	JZ_LINE_SPC BYTE [r13+8+r14], LB_1746
LB_1748
	cmp r14,r9
	jge LB_1751
	jmp LB_1752
LB_1751:
	mov r8,unt_1 
	jmp LB_1749
LB_1752:
	movzx rdi,BYTE [r13+8+r14]
	push rdi 
	add r14,1 
	jmp LB_1750
LB_1749:
	add rsp,0
	jmp LB_1745
LB_1750:
	jmp LB_1754
LB_1753:
	add r14,1 
LB_1754:
	cmp r14,r9
	jge LB_1755
	JZ_LINE_SPC BYTE [r13+8+r14], LB_1753
LB_1755
	call GRM_219
	cmp BYTE [r8+6],0
	jnz LB_1758
	jmp LB_1759
LB_1758:
	jmp LB_1756
LB_1759:
	sub rsp,8
	mov r8,[r8+8]
; .mov_ptn2 2'(= a35◂ [ *{ }] ) ⊢ 9'(= a35◂ [ *{ }] )
; .mov_ptn 2'(= a35◂ [ *{ }] ) ⊢ 9'(= a35◂ [ *{ }] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_1757
LB_1756:
	add rsp,8
	jmp LB_1745
LB_1757:
	mov QWORD [rsp+8*2],r14
	mov r13,QWORD [rsp+16+8*2]
	mov r14,QWORD [rsp+8*2]
	jmp LB_1761
LB_1761
;; rsp=2 , %1479~1'(= r ) %1478~0'(= r ) %1477~9'(= a35◂ [ *{ }] ) %1476~8'(= r ) 
; #22 9'(= a35◂ [ *{ }] ) ⊢ 0(<2)◂9'(= a35◂ [ *{ }] )
;; rsp=2 , %1480~0(<2)◂9'(= a35◂ [ *{ }] ) %1479~1'(= r ) %1478~0'(= r ) %1476~8'(= r ) 
; ∎ 0(<2)◂9'(= a35◂ [ *{ }] )
; .dlt.ptn 1'(= r )
; .dlt.ptn 0'(= r )
; .dlt.ptn 8'(= r )
; .mov_ptn2 0(<2)◂9'(= a35◂ [ *{ }] ) ⊢ 2'(= a3◂ [ a35◂ [ *{ }]] )
; .mov_ptn 0(<2)◂9'(= a35◂ [ *{ }] ) ⊢ 2'(= a3◂ [ a35◂ [ *{ }]] )
	mov rax,QWORD [rsp-8+8*1]
	mov rdi,rax
	mov rax,r15
	mov r15,QWORD [r15] 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,16
	jmp LB_1760
LB_1760:
	cmp BYTE [r8+6],0
	jnz LB_1745
	pop r14
	pop r9
	add rsp,8
	pop r13
	ret
LB_1745:
	mov r9,QWORD [rsp+8]
	mov r14,QWORD [rsp+16]
	mov r13,QWORD [rsp+24]
	mov QWORD [rsp+8*0],r14
	mov r13,QWORD [rsp+16+8*0]
	mov r14,QWORD [rsp+8*0]
	jmp LB_1764
LB_1764
;; rsp=0 , %1482~1'(= r ) %1481~0'(= r ) 
	jmp LB_1765
LB_1765:
; $ %[ "line_res_c 0" ] ⊢ %[ "line_res_c 0" ]
;; rsp=0 , %1483~%[ "line_res_c 0" ] %1482~1'(= r ) %1481~0'(= r ) 
; _#8 %[ "line_res_c 0" ] ⊢ %[ "line_res_c 0" ]
	mov rdi,fmt_emt
	call emt_stg
	mov rdi,LB_1766
	call emt_stg 
	mov rdi,fmt_nl
	call emt_stg
	jmp LB_1767
LB_1767:
;; rsp=0 , %1484~%[ "line_res_c 0" ] %1482~1'(= r ) %1481~0'(= r ) 
	mov rdi,LB_1768
	call emt_stg 
	jmp err
LB_1763:
	cmp BYTE [r8+6],0
	jnz LB_1762
	pop r14
	pop r9
	add rsp,8
	pop r13
	ret
LB_1762:
	pop rdi
	pop r9 
	pop r14
	pop r13
	ret
ETR_220:
	mov r9,0x0000_ffff_ffff_ffff
	and r9,[r13]
	call GRM_220
	ret
GRM_220:
	sub rsp,32
	mov QWORD [rsp+24],r13
	mov QWORD [rsp+16],r14 
	mov QWORD [rsp+8],r9
	jmp LB_1771
LB_1770:
	add r14,1 
LB_1771:
	cmp r14,r9
	jge LB_1772
	JZ_LINE_SPC BYTE [r13+8+r14], LB_1770
LB_1772
	lea rax,[r14+1]
	cmp rax,r9
	jg LB_1775
	jmp LB_1776
LB_1775:
	mov r8,unt_1
	jmp LB_1773
LB_1776:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],10
	jnz LB_1777
	jmp LB_1778
LB_1777:
	mov r8,unt_1
	jmp LB_1773
LB_1778:
	add r14,1
	jmp LB_1774
LB_1773:
	add rsp,0
	jmp LB_1769
LB_1774:
	mov QWORD [rsp+8*0],r14
	mov r13,QWORD [rsp+16+8*0]
	mov r14,QWORD [rsp+8*0]
	jmp LB_1780
LB_1780
;; rsp=0 , %1486~1'(= r ) %1485~0'(= r ) 
; #22 { 0'(= r ) 1'(= r ) } ⊢ 0(<2)◂{ 0'(= r ) 1'(= r ) }
;; rsp=0 , %1487~0(<2)◂{ 0'(= r ) 1'(= r ) } 
; ∎ 0(<2)◂{ 0'(= r ) 1'(= r ) }
; .mov_ptn2 0(<2)◂{ 0'(= r ) 1'(= r ) } ⊢ 2'(= a3◂ [ *{ rr}] )
; .mov_ptn 0(<2)◂{ 0'(= r ) 1'(= r ) } ⊢ 2'(= a3◂ [ *{ rr}] )
	mov rax,[SS_RCD_2_TOP]
	mov rsi,[rax] 
	mov QWORD [SS_RCD_2_TOP],rsi
	mov QWORD [rax],0
	mov r9,rax
	mov rax,r13
	mov QWORD [r9+8+8*0],rax
	mov rax,r14
	mov QWORD [r9+8+8*1],rax
	mov rax,r9
	mov BYTE [rax+6],0
	mov r8,rax
	jmp LB_1779
LB_1779:
	cmp BYTE [r8+6],0
	jnz LB_1769
	pop r14
	pop r9
	add rsp,8
	pop r13
	ret
LB_1769:
	mov r9,QWORD [rsp+8]
	mov r14,QWORD [rsp+16]
	mov r13,QWORD [rsp+24]
	jmp LB_1783
LB_1782:
	add r14,1 
LB_1783:
	cmp r14,r9
	jge LB_1784
	JZ_LINE_SPC BYTE [r13+8+r14], LB_1782
LB_1784
	cmp r14,r9
	jge LB_1787
	jmp LB_1788
LB_1787:
	mov r8,unt_1 
	jmp LB_1785
LB_1788:
	movzx rdi,BYTE [r13+8+r14]
	push rdi 
	add r14,1 
	jmp LB_1786
LB_1785:
	add rsp,0
	jmp LB_1781
LB_1786:
	jmp LB_1790
LB_1789:
	add r14,1 
LB_1790:
	cmp r14,r9
	jge LB_1791
	JZ_LINE_SPC BYTE [r13+8+r14], LB_1789
LB_1791
	call GRM_220
	cmp BYTE [r8+6],0
	jnz LB_1794
	jmp LB_1795
LB_1794:
	jmp LB_1792
LB_1795:
	sub rsp,16
; .mov_ptn2 2'(= *{ rr} ) ⊢ { 9'(= r ) 10'(= r ) }
; .mov_ptn 2'(= *{ rr} ) ⊢ { 9'(= r ) 10'(= r ) }
	mov rdi,r8
	mov rdi,QWORD [rdi+8+8*0]
	mov r10,rdi
	mov QWORD [rsp-8+8*2],r10
	mov rdi,r8
	mov rdi,QWORD [rdi+8+8*1]
	mov r11,rdi
	mov QWORD [rsp-8+8*1],r11
	jmp LB_1793
LB_1792:
	add rsp,8
	jmp LB_1781
LB_1793:
	mov QWORD [rsp+8*3],r14
	mov r13,QWORD [rsp+16+8*3]
	mov r14,QWORD [rsp+8*3]
	jmp LB_1797
LB_1797
;; rsp=3 , %1492~1'(= r ) %1491~0'(= r ) %1490~10'(= r ) %1489~9'(= r ) %1488~8'(= r ) 
; #22 { 0'(= r ) 10'(= r ) } ⊢ 0(<2)◂{ 0'(= r ) 10'(= r ) }
;; rsp=3 , %1493~0(<2)◂{ 0'(= r ) 10'(= r ) } %1492~1'(= r ) %1489~9'(= r ) %1488~8'(= r ) 
; ∎ 0(<2)◂{ 0'(= r ) 10'(= r ) }
; .dlt.ptn 1'(= r )
; .dlt.ptn 9'(= r )
; .dlt.ptn 8'(= r )
; .mov_ptn2 0(<2)◂{ 0'(= r ) 10'(= r ) } ⊢ 2'(= a3◂ [ *{ rr}] )
; .mov_ptn 0(<2)◂{ 0'(= r ) 10'(= r ) } ⊢ 2'(= a3◂ [ *{ rr}] )
	mov rax,[SS_RCD_2_TOP]
	mov rsi,[rax] 
	mov QWORD [SS_RCD_2_TOP],rsi
	mov QWORD [rax],0
	mov r14,rax
	mov rax,r13
	mov QWORD [r14+8+8*0],rax
	mov rax,QWORD [rsp-8+8*1]
	mov QWORD [r14+8+8*1],rax
	mov rax,r14
	mov BYTE [rax+6],0
	mov r8,rax
	add rsp,24
	jmp LB_1796
LB_1796:
	cmp BYTE [r8+6],0
	jnz LB_1781
	pop r14
	pop r9
	add rsp,8
	pop r13
	ret
LB_1781:
	mov r9,QWORD [rsp+8]
	mov r14,QWORD [rsp+16]
	mov r13,QWORD [rsp+24]
	mov QWORD [rsp+8*0],r14
	mov r13,QWORD [rsp+16+8*0]
	mov r14,QWORD [rsp+8*0]
	jmp LB_1800
LB_1800
;; rsp=0 , %1495~1'(= r ) %1494~0'(= r ) 
; #22 { 0'(= r ) 1'(= r ) } ⊢ 0(<2)◂{ 0'(= r ) 1'(= r ) }
;; rsp=0 , %1496~0(<2)◂{ 0'(= r ) 1'(= r ) } 
; ∎ 0(<2)◂{ 0'(= r ) 1'(= r ) }
; .mov_ptn2 0(<2)◂{ 0'(= r ) 1'(= r ) } ⊢ 2'(= a3◂ [ *{ rr}] )
; .mov_ptn 0(<2)◂{ 0'(= r ) 1'(= r ) } ⊢ 2'(= a3◂ [ *{ rr}] )
	mov rax,[SS_RCD_2_TOP]
	mov rsi,[rax] 
	mov QWORD [SS_RCD_2_TOP],rsi
	mov QWORD [rax],0
	mov r9,rax
	mov rax,r13
	mov QWORD [r9+8+8*0],rax
	mov rax,r14
	mov QWORD [r9+8+8*1],rax
	mov rax,r9
	mov BYTE [rax+6],0
	mov r8,rax
	jmp LB_1799
LB_1799:
	cmp BYTE [r8+6],0
	jnz LB_1798
	pop r14
	pop r9
	add rsp,8
	pop r13
	ret
LB_1798:
	pop rdi
	pop r9 
	pop r14
	pop r13
	ret
ETR_221:
	mov r9,0x0000_ffff_ffff_ffff
	and r9,[r13]
	call GRM_221
	ret
GRM_221:
	sub rsp,32
	mov QWORD [rsp+24],r13
	mov QWORD [rsp+16],r14 
	mov QWORD [rsp+8],r9
	jmp LB_1803
LB_1802:
	add r14,1 
LB_1803:
	cmp r14,r9
	jge LB_1804
	JZ_SPC BYTE [r13+8+r14], LB_1802
LB_1804
	lea rax,[r14+7]
	cmp rax,r9
	jg LB_1807
	jmp LB_1808
LB_1807:
	mov r8,unt_1
	jmp LB_1805
LB_1808:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],194
	jnz LB_1809
	cmp BYTE [rdi+1],167
	jnz LB_1809
	cmp BYTE [rdi+2],194
	jnz LB_1809
	cmp BYTE [rdi+3],167
	jnz LB_1809
	cmp BYTE [rdi+4],43
	jnz LB_1809
	cmp BYTE [rdi+5],115
	jnz LB_1809
	cmp BYTE [rdi+6],56
	jnz LB_1809
	jmp LB_1810
LB_1809:
	mov r8,unt_1
	jmp LB_1805
LB_1810:
	add r14,7
	jmp LB_1806
LB_1805:
	add rsp,0
	jmp LB_1801
LB_1806:
	mov QWORD [rsp+8*0],r14
	mov r13,QWORD [rsp+16+8*0]
	mov r14,QWORD [rsp+8*0]
	jmp LB_1812
LB_1812
;; rsp=0 , %1498~1'(= r ) %1497~0'(= r ) 
; #22 { } ⊢ 0(<2)◂{ }
;; rsp=0 , %1499~0(<2)◂{ } %1498~1'(= r ) %1497~0'(= r ) 
; ∎ 0(<2)◂{ }
; .dlt.ptn 1'(= r )
; .dlt.ptn 0'(= r )
; .mov_ptn2 0(<2)◂{ } ⊢ 2'(= a3◂ [ *{ }] )
; .mov_ptn 0(<2)◂{ } ⊢ 2'(= a3◂ [ *{ }] )
	mov rax,unt 
	mov rax,unt_0
	mov r8,rax
	jmp LB_1811
LB_1811:
	cmp BYTE [r8+6],0
	jnz LB_1801
	pop r14
	pop r9
	add rsp,8
	pop r13
	ret
LB_1801:
	mov r9,QWORD [rsp+8]
	mov r14,QWORD [rsp+16]
	mov r13,QWORD [rsp+24]
	jmp LB_1815
LB_1814:
	add r14,1 
LB_1815:
	cmp r14,r9
	jge LB_1816
	JZ_SPC BYTE [r13+8+r14], LB_1814
LB_1816
	lea rax,[r14+4]
	cmp rax,r9
	jg LB_1819
	jmp LB_1820
LB_1819:
	mov r8,unt_1
	jmp LB_1817
LB_1820:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],194
	jnz LB_1821
	cmp BYTE [rdi+1],167
	jnz LB_1821
	cmp BYTE [rdi+2],194
	jnz LB_1821
	cmp BYTE [rdi+3],167
	jnz LB_1821
	jmp LB_1822
LB_1821:
	mov r8,unt_1
	jmp LB_1817
LB_1822:
	add r14,4
	jmp LB_1818
LB_1817:
	add rsp,0
	jmp LB_1813
LB_1818:
	mov QWORD [rsp+8*0],r14
	mov r13,QWORD [rsp+16+8*0]
	mov r14,QWORD [rsp+8*0]
	jmp LB_1824
LB_1824
;; rsp=0 , %1501~1'(= r ) %1500~0'(= r ) 
; #22 { } ⊢ 0(<2)◂{ }
;; rsp=0 , %1502~0(<2)◂{ } %1501~1'(= r ) %1500~0'(= r ) 
; ∎ 0(<2)◂{ }
; .dlt.ptn 1'(= r )
; .dlt.ptn 0'(= r )
; .mov_ptn2 0(<2)◂{ } ⊢ 2'(= a3◂ [ *{ }] )
; .mov_ptn 0(<2)◂{ } ⊢ 2'(= a3◂ [ *{ }] )
	mov rax,unt 
	mov rax,unt_0
	mov r8,rax
	jmp LB_1823
LB_1823:
	cmp BYTE [r8+6],0
	jnz LB_1813
	pop r14
	pop r9
	add rsp,8
	pop r13
	ret
LB_1813:
	mov r9,QWORD [rsp+8]
	mov r14,QWORD [rsp+16]
	mov r13,QWORD [rsp+24]
	jmp LB_1827
LB_1826:
	add r14,1 
LB_1827:
	cmp r14,r9
	jge LB_1828
	JZ_SPC BYTE [r13+8+r14], LB_1826
LB_1828
	lea rax,[r14+2]
	cmp rax,r9
	jg LB_1831
	jmp LB_1832
LB_1831:
	mov r8,unt_1
	jmp LB_1829
LB_1832:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],194
	jnz LB_1833
	cmp BYTE [rdi+1],167
	jnz LB_1833
	jmp LB_1834
LB_1833:
	mov r8,unt_1
	jmp LB_1829
LB_1834:
	add r14,2
	jmp LB_1830
LB_1829:
	add rsp,0
	jmp LB_1825
LB_1830:
	mov QWORD [rsp+8*0],r14
	mov r13,QWORD [rsp+16+8*0]
	mov r14,QWORD [rsp+8*0]
	jmp LB_1836
LB_1836
;; rsp=0 , %1504~1'(= r ) %1503~0'(= r ) 
; #22 { } ⊢ 0(<2)◂{ }
;; rsp=0 , %1505~0(<2)◂{ } %1504~1'(= r ) %1503~0'(= r ) 
; ∎ 0(<2)◂{ }
; .dlt.ptn 1'(= r )
; .dlt.ptn 0'(= r )
; .mov_ptn2 0(<2)◂{ } ⊢ 2'(= a3◂ [ *{ }] )
; .mov_ptn 0(<2)◂{ } ⊢ 2'(= a3◂ [ *{ }] )
	mov rax,unt 
	mov rax,unt_0
	mov r8,rax
	jmp LB_1835
LB_1835:
	cmp BYTE [r8+6],0
	jnz LB_1825
	pop r14
	pop r9
	add rsp,8
	pop r13
	ret
LB_1825:
	mov r9,QWORD [rsp+8]
	mov r14,QWORD [rsp+16]
	mov r13,QWORD [rsp+24]
	jmp LB_1839
LB_1838:
	add r14,1 
LB_1839:
	cmp r14,r9
	jge LB_1840
	JZ_SPC BYTE [r13+8+r14], LB_1838
LB_1840
	lea rax,[r14+2]
	cmp rax,r9
	jg LB_1843
	jmp LB_1844
LB_1843:
	mov r8,unt_1
	jmp LB_1841
LB_1844:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],194
	jnz LB_1845
	cmp BYTE [rdi+1],182
	jnz LB_1845
	jmp LB_1846
LB_1845:
	mov r8,unt_1
	jmp LB_1841
LB_1846:
	add r14,2
	jmp LB_1842
LB_1841:
	add rsp,0
	jmp LB_1837
LB_1842:
	mov QWORD [rsp+8*0],r14
	mov r13,QWORD [rsp+16+8*0]
	mov r14,QWORD [rsp+8*0]
	jmp LB_1848
LB_1848
;; rsp=0 , %1507~1'(= r ) %1506~0'(= r ) 
; #22 { } ⊢ 0(<2)◂{ }
;; rsp=0 , %1508~0(<2)◂{ } %1507~1'(= r ) %1506~0'(= r ) 
; ∎ 0(<2)◂{ }
; .dlt.ptn 1'(= r )
; .dlt.ptn 0'(= r )
; .mov_ptn2 0(<2)◂{ } ⊢ 2'(= a3◂ [ *{ }] )
; .mov_ptn 0(<2)◂{ } ⊢ 2'(= a3◂ [ *{ }] )
	mov rax,unt 
	mov rax,unt_0
	mov r8,rax
	jmp LB_1847
LB_1847:
	cmp BYTE [r8+6],0
	jnz LB_1837
	pop r14
	pop r9
	add rsp,8
	pop r13
	ret
LB_1837:
	mov r9,QWORD [rsp+8]
	mov r14,QWORD [rsp+16]
	mov r13,QWORD [rsp+24]
	jmp LB_1851
LB_1850:
	add r14,1 
LB_1851:
	cmp r14,r9
	jge LB_1852
	JZ_SPC BYTE [r13+8+r14], LB_1850
LB_1852
	lea rax,[r14+6]
	cmp rax,r9
	jg LB_1855
	jmp LB_1856
LB_1855:
	mov r8,unt_1
	jmp LB_1853
LB_1856:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],226
	jnz LB_1857
	cmp BYTE [rdi+1],136
	jnz LB_1857
	cmp BYTE [rdi+2],142
	jnz LB_1857
	cmp BYTE [rdi+3],226
	jnz LB_1857
	cmp BYTE [rdi+4],136
	jnz LB_1857
	cmp BYTE [rdi+5],142
	jnz LB_1857
	jmp LB_1858
LB_1857:
	mov r8,unt_1
	jmp LB_1853
LB_1858:
	add r14,6
	jmp LB_1854
LB_1853:
	add rsp,0
	jmp LB_1849
LB_1854:
	mov QWORD [rsp+8*0],r14
	mov r13,QWORD [rsp+16+8*0]
	mov r14,QWORD [rsp+8*0]
	jmp LB_1860
LB_1860
;; rsp=0 , %1510~1'(= r ) %1509~0'(= r ) 
; #22 { } ⊢ 0(<2)◂{ }
;; rsp=0 , %1511~0(<2)◂{ } %1510~1'(= r ) %1509~0'(= r ) 
; ∎ 0(<2)◂{ }
; .dlt.ptn 1'(= r )
; .dlt.ptn 0'(= r )
; .mov_ptn2 0(<2)◂{ } ⊢ 2'(= a3◂ [ *{ }] )
; .mov_ptn 0(<2)◂{ } ⊢ 2'(= a3◂ [ *{ }] )
	mov rax,unt 
	mov rax,unt_0
	mov r8,rax
	jmp LB_1859
LB_1859:
	cmp BYTE [r8+6],0
	jnz LB_1849
	pop r14
	pop r9
	add rsp,8
	pop r13
	ret
LB_1849:
	pop rdi
	pop r9 
	pop r14
	pop r13
	ret
ETR_222:
	mov r9,0x0000_ffff_ffff_ffff
	and r9,[r13]
	call GRM_222
	ret
GRM_222:
	sub rsp,32
	mov QWORD [rsp+24],r13
	mov QWORD [rsp+16],r14 
	mov QWORD [rsp+8],r9
	jmp LB_1863
LB_1862:
	add r14,1 
LB_1863:
	cmp r14,r9
	jge LB_1864
	JZ_SPC BYTE [r13+8+r14], LB_1862
LB_1864
	call GRM_221
	cmp BYTE [r8+6],0
	jnz LB_1867
	jmp LB_1868
LB_1867:
	jmp LB_1865
LB_1868:
; .mov_ptn2 2'(= *{ } ) ⊢ { }
; .mov_ptn 2'(= *{ } ) ⊢ { }
	jmp LB_1866
LB_1865:
	add rsp,0
	jmp LB_1861
LB_1866:
	mov QWORD [rsp+8*0],r14
	mov r13,QWORD [rsp+16+8*0]
	mov r14,QWORD [rsp+8*0]
	jmp LB_1870
LB_1870
;; rsp=0 , %1514~1'(= r ) %1513~0'(= r ) %1512~{ } 
; #23 { } ⊢ 1(<2)◂{ }
;; rsp=0 , %1515~1(<2)◂{ } %1514~1'(= r ) %1513~0'(= r ) %1512~{ } 
; ∎ 1(<2)◂{ }
; .dlt.ptn 1'(= r )
; .dlt.ptn 0'(= r )
; .dlt.ptn { }
; .mov_ptn2 1(<2)◂{ } ⊢ 2'(= a3◂ [ *{ }] )
; .mov_ptn 1(<2)◂{ } ⊢ 2'(= a3◂ [ *{ }] )
	mov rax,unt 
	mov rax,unt_1
	mov r8,rax
	jmp LB_1869
LB_1869:
	cmp BYTE [r8+6],0
	jnz LB_1861
	pop r14
	pop r9
	add rsp,8
	pop r13
	ret
LB_1861:
	mov r9,QWORD [rsp+8]
	mov r14,QWORD [rsp+16]
	mov r13,QWORD [rsp+24]
	jmp LB_1873
LB_1872:
	add r14,1 
LB_1873:
	cmp r14,r9
	jge LB_1874
	JZ_SPC BYTE [r13+8+r14], LB_1872
LB_1874
	cmp r14,r9
	jge LB_1877
	jmp LB_1878
LB_1877:
	mov r8,unt_1 
	jmp LB_1875
LB_1878:
	movzx rdi,BYTE [r13+8+r14]
	push rdi 
	add r14,1 
	jmp LB_1876
LB_1875:
	add rsp,0
	jmp LB_1871
LB_1876:
	mov QWORD [rsp+8*1],r14
	mov r13,QWORD [rsp+16+8*1]
	mov r14,QWORD [rsp+8*1]
	jmp LB_1880
LB_1880
;; rsp=1 , %1518~1'(= r ) %1517~0'(= r ) %1516~8'(= r ) 
; #22 { } ⊢ 0(<2)◂{ }
;; rsp=1 , %1519~0(<2)◂{ } %1518~1'(= r ) %1517~0'(= r ) %1516~8'(= r ) 
; ∎ 0(<2)◂{ }
; .dlt.ptn 1'(= r )
; .dlt.ptn 0'(= r )
; .dlt.ptn 8'(= r )
; .mov_ptn2 0(<2)◂{ } ⊢ 2'(= a3◂ [ *{ }] )
; .mov_ptn 0(<2)◂{ } ⊢ 2'(= a3◂ [ *{ }] )
	mov rax,unt 
	mov rax,unt_0
	mov r8,rax
	add rsp,8
	jmp LB_1879
LB_1879:
	cmp BYTE [r8+6],0
	jnz LB_1871
	pop r14
	pop r9
	add rsp,8
	pop r13
	ret
LB_1871:
	pop rdi
	pop r9 
	pop r14
	pop r13
	ret
ETR_223:
	mov r9,0x0000_ffff_ffff_ffff
	and r9,[r13]
	call GRM_223
	ret
GRM_223:
	sub rsp,32
	mov QWORD [rsp+24],r13
	mov QWORD [rsp+16],r14 
	mov QWORD [rsp+8],r9
	jmp LB_1883
LB_1882:
	add r14,1 
LB_1883:
	cmp r14,r9
	jge LB_1884
	JZ_SPC BYTE [r13+8+r14], LB_1882
LB_1884
	lea rax,[r14+1]
	cmp rax,r9
	jg LB_1887
	jmp LB_1888
LB_1887:
	mov r8,unt_1
	jmp LB_1885
LB_1888:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],64
	jnz LB_1889
	jmp LB_1890
LB_1889:
	mov r8,unt_1
	jmp LB_1885
LB_1890:
	add r14,1
	jmp LB_1886
LB_1885:
	add rsp,0
	jmp LB_1881
LB_1886:
	mov QWORD [rsp+8*0],r14
	mov r13,QWORD [rsp+16+8*0]
	mov r14,QWORD [rsp+8*0]
	jmp LB_1892
LB_1892
;; rsp=0 , %1522~1'(= r ) %1521~0'(= r ) %1520~{ } 
; #23 { } ⊢ 1(<2)◂{ }
;; rsp=0 , %1523~1(<2)◂{ } %1522~1'(= r ) %1521~0'(= r ) %1520~{ } 
; ∎ 1(<2)◂{ }
; .dlt.ptn 1'(= r )
; .dlt.ptn 0'(= r )
; .dlt.ptn { }
; .mov_ptn2 1(<2)◂{ } ⊢ 2'(= a3◂ [ *{ }] )
; .mov_ptn 1(<2)◂{ } ⊢ 2'(= a3◂ [ *{ }] )
	mov rax,unt 
	mov rax,unt_1
	mov r8,rax
	jmp LB_1891
LB_1891:
	cmp BYTE [r8+6],0
	jnz LB_1881
	pop r14
	pop r9
	add rsp,8
	pop r13
	ret
LB_1881:
	mov r9,QWORD [rsp+8]
	mov r14,QWORD [rsp+16]
	mov r13,QWORD [rsp+24]
	jmp LB_1895
LB_1894:
	add r14,1 
LB_1895:
	cmp r14,r9
	jge LB_1896
	JZ_SPC BYTE [r13+8+r14], LB_1894
LB_1896
	call GRM_221
	cmp BYTE [r8+6],0
	jnz LB_1899
	jmp LB_1900
LB_1899:
	jmp LB_1897
LB_1900:
; .mov_ptn2 2'(= *{ } ) ⊢ { }
; .mov_ptn 2'(= *{ } ) ⊢ { }
	jmp LB_1898
LB_1897:
	add rsp,0
	jmp LB_1893
LB_1898:
	mov QWORD [rsp+8*0],r14
	mov r13,QWORD [rsp+16+8*0]
	mov r14,QWORD [rsp+8*0]
	jmp LB_1902
LB_1902
;; rsp=0 , %1526~1'(= r ) %1525~0'(= r ) %1524~{ } 
; #23 { } ⊢ 1(<2)◂{ }
;; rsp=0 , %1527~1(<2)◂{ } %1526~1'(= r ) %1525~0'(= r ) %1524~{ } 
; ∎ 1(<2)◂{ }
; .dlt.ptn 1'(= r )
; .dlt.ptn 0'(= r )
; .dlt.ptn { }
; .mov_ptn2 1(<2)◂{ } ⊢ 2'(= a3◂ [ *{ }] )
; .mov_ptn 1(<2)◂{ } ⊢ 2'(= a3◂ [ *{ }] )
	mov rax,unt 
	mov rax,unt_1
	mov r8,rax
	jmp LB_1901
LB_1901:
	cmp BYTE [r8+6],0
	jnz LB_1893
	pop r14
	pop r9
	add rsp,8
	pop r13
	ret
LB_1893:
	mov r9,QWORD [rsp+8]
	mov r14,QWORD [rsp+16]
	mov r13,QWORD [rsp+24]
	jmp LB_1905
LB_1904:
	add r14,1 
LB_1905:
	cmp r14,r9
	jge LB_1906
	JZ_SPC BYTE [r13+8+r14], LB_1904
LB_1906
	cmp r14,r9
	jge LB_1909
	jmp LB_1910
LB_1909:
	mov r8,unt_1 
	jmp LB_1907
LB_1910:
	movzx rdi,BYTE [r13+8+r14]
	push rdi 
	add r14,1 
	jmp LB_1908
LB_1907:
	add rsp,0
	jmp LB_1903
LB_1908:
	mov QWORD [rsp+8*1],r14
	mov r13,QWORD [rsp+16+8*1]
	mov r14,QWORD [rsp+8*1]
	jmp LB_1912
LB_1912
;; rsp=1 , %1530~1'(= r ) %1529~0'(= r ) %1528~8'(= r ) 
; #22 { } ⊢ 0(<2)◂{ }
;; rsp=1 , %1531~0(<2)◂{ } %1530~1'(= r ) %1529~0'(= r ) %1528~8'(= r ) 
; ∎ 0(<2)◂{ }
; .dlt.ptn 1'(= r )
; .dlt.ptn 0'(= r )
; .dlt.ptn 8'(= r )
; .mov_ptn2 0(<2)◂{ } ⊢ 2'(= a3◂ [ *{ }] )
; .mov_ptn 0(<2)◂{ } ⊢ 2'(= a3◂ [ *{ }] )
	mov rax,unt 
	mov rax,unt_0
	mov r8,rax
	add rsp,8
	jmp LB_1911
LB_1911:
	cmp BYTE [r8+6],0
	jnz LB_1903
	pop r14
	pop r9
	add rsp,8
	pop r13
	ret
LB_1903:
	pop rdi
	pop r9 
	pop r14
	pop r13
	ret
ETR_224:
	mov r9,0x0000_ffff_ffff_ffff
	and r9,[r13]
	call GRM_224
	ret
GRM_224:
	sub rsp,32
	mov QWORD [rsp+24],r13
	mov QWORD [rsp+16],r14 
	mov QWORD [rsp+8],r9
	jmp LB_1915
LB_1914:
	add r14,1 
LB_1915:
	cmp r14,r9
	jge LB_1916
	JZ_SPC BYTE [r13+8+r14], LB_1914
LB_1916
	call GRM_223
	cmp BYTE [r8+6],0
	jnz LB_1919
	jmp LB_1920
LB_1919:
	jmp LB_1917
LB_1920:
; .mov_ptn2 2'(= *{ } ) ⊢ { }
; .mov_ptn 2'(= *{ } ) ⊢ { }
	jmp LB_1918
LB_1917:
	add rsp,0
	jmp LB_1913
LB_1918:
	jmp LB_1922
LB_1921:
	add r14,1 
LB_1922:
	cmp r14,r9
	jge LB_1923
	JZ_SPC BYTE [r13+8+r14], LB_1921
LB_1923
	call GRM_224
	cmp BYTE [r8+6],0
	jnz LB_1926
	jmp LB_1927
LB_1926:
	jmp LB_1924
LB_1927:
; .mov_ptn2 2'(= *{ } ) ⊢ { }
; .mov_ptn 2'(= *{ } ) ⊢ { }
	jmp LB_1925
LB_1924:
	add rsp,0
	jmp LB_1913
LB_1925:
	mov QWORD [rsp+8*0],r14
	mov r13,QWORD [rsp+16+8*0]
	mov r14,QWORD [rsp+8*0]
	jmp LB_1929
LB_1929
;; rsp=0 , %1535~1'(= r ) %1534~0'(= r ) %1533~{ } %1532~{ } 
; #22 { } ⊢ 0(<2)◂{ }
;; rsp=0 , %1536~0(<2)◂{ } %1535~1'(= r ) %1534~0'(= r ) %1533~{ } %1532~{ } 
; ∎ 0(<2)◂{ }
; .dlt.ptn 1'(= r )
; .dlt.ptn 0'(= r )
; .dlt.ptn { }
; .dlt.ptn { }
; .mov_ptn2 0(<2)◂{ } ⊢ 2'(= a3◂ [ *{ }] )
; .mov_ptn 0(<2)◂{ } ⊢ 2'(= a3◂ [ *{ }] )
	mov rax,unt 
	mov rax,unt_0
	mov r8,rax
	jmp LB_1928
LB_1928:
	cmp BYTE [r8+6],0
	jnz LB_1913
	pop r14
	pop r9
	add rsp,8
	pop r13
	ret
LB_1913:
	mov r9,QWORD [rsp+8]
	mov r14,QWORD [rsp+16]
	mov r13,QWORD [rsp+24]
	mov QWORD [rsp+8*0],r14
	mov r13,QWORD [rsp+16+8*0]
	mov r14,QWORD [rsp+8*0]
	jmp LB_1932
LB_1932
;; rsp=0 , %1538~1'(= r ) %1537~0'(= r ) 
; #22 { } ⊢ 0(<2)◂{ }
;; rsp=0 , %1539~0(<2)◂{ } %1538~1'(= r ) %1537~0'(= r ) 
; ∎ 0(<2)◂{ }
; .dlt.ptn 1'(= r )
; .dlt.ptn 0'(= r )
; .mov_ptn2 0(<2)◂{ } ⊢ 2'(= a3◂ [ *{ }] )
; .mov_ptn 0(<2)◂{ } ⊢ 2'(= a3◂ [ *{ }] )
	mov rax,unt 
	mov rax,unt_0
	mov r8,rax
	jmp LB_1931
LB_1931:
	cmp BYTE [r8+6],0
	jnz LB_1930
	pop r14
	pop r9
	add rsp,8
	pop r13
	ret
LB_1930:
	pop rdi
	pop r9 
	pop r14
	pop r13
	ret
ETR_225:
	mov r9,0x0000_ffff_ffff_ffff
	and r9,[r13]
	call GRM_225
	ret
GRM_225:
	sub rsp,32
	mov QWORD [rsp+24],r13
	mov QWORD [rsp+16],r14 
	mov QWORD [rsp+8],r9
	jmp LB_1935
LB_1934:
	add r14,1 
LB_1935:
	cmp r14,r9
	jge LB_1936
	JZ_LINE_SPC BYTE [r13+8+r14], LB_1934
LB_1936
	lea rax,[r14+1]
	cmp rax,r9
	jg LB_1939
	jmp LB_1940
LB_1939:
	mov r8,unt_1
	jmp LB_1937
LB_1940:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],10
	jnz LB_1941
	jmp LB_1942
LB_1941:
	mov r8,unt_1
	jmp LB_1937
LB_1942:
	add r14,1
	jmp LB_1938
LB_1937:
	add rsp,0
	jmp LB_1933
LB_1938:
	mov QWORD [rsp+8*0],r14
	mov r13,QWORD [rsp+16+8*0]
	mov r14,QWORD [rsp+8*0]
	jmp LB_1944
LB_1944
;; rsp=0 , %1542~1'(= r ) %1541~0'(= r ) %1540~{ } 
; #22 { } ⊢ 0(<2)◂{ }
;; rsp=0 , %1543~0(<2)◂{ } %1542~1'(= r ) %1541~0'(= r ) %1540~{ } 
; ∎ 0(<2)◂{ }
; .dlt.ptn 1'(= r )
; .dlt.ptn 0'(= r )
; .dlt.ptn { }
; .mov_ptn2 0(<2)◂{ } ⊢ 2'(= a3◂ [ *{ }] )
; .mov_ptn 0(<2)◂{ } ⊢ 2'(= a3◂ [ *{ }] )
	mov rax,unt 
	mov rax,unt_0
	mov r8,rax
	jmp LB_1943
LB_1943:
	cmp BYTE [r8+6],0
	jnz LB_1933
	pop r14
	pop r9
	add rsp,8
	pop r13
	ret
LB_1933:
	mov r9,QWORD [rsp+8]
	mov r14,QWORD [rsp+16]
	mov r13,QWORD [rsp+24]
	jmp LB_1947
LB_1946:
	add r14,1 
LB_1947:
	cmp r14,r9
	jge LB_1948
	JZ_LINE_SPC BYTE [r13+8+r14], LB_1946
LB_1948
	call GRM_221
	cmp BYTE [r8+6],0
	jnz LB_1951
	jmp LB_1952
LB_1951:
	jmp LB_1949
LB_1952:
; .mov_ptn2 2'(= *{ } ) ⊢ { }
; .mov_ptn 2'(= *{ } ) ⊢ { }
	jmp LB_1950
LB_1949:
	add rsp,0
	jmp LB_1945
LB_1950:
	mov QWORD [rsp+8*0],r14
	mov r13,QWORD [rsp+16+8*0]
	mov r14,QWORD [rsp+8*0]
	jmp LB_1954
LB_1954
;; rsp=0 , %1546~1'(= r ) %1545~0'(= r ) %1544~{ } 
; #23 { } ⊢ 1(<2)◂{ }
;; rsp=0 , %1547~1(<2)◂{ } %1546~1'(= r ) %1545~0'(= r ) %1544~{ } 
; ∎ 1(<2)◂{ }
; .dlt.ptn 1'(= r )
; .dlt.ptn 0'(= r )
; .dlt.ptn { }
; .mov_ptn2 1(<2)◂{ } ⊢ 2'(= a3◂ [ *{ }] )
; .mov_ptn 1(<2)◂{ } ⊢ 2'(= a3◂ [ *{ }] )
	mov rax,unt 
	mov rax,unt_1
	mov r8,rax
	jmp LB_1953
LB_1953:
	cmp BYTE [r8+6],0
	jnz LB_1945
	pop r14
	pop r9
	add rsp,8
	pop r13
	ret
LB_1945:
	mov r9,QWORD [rsp+8]
	mov r14,QWORD [rsp+16]
	mov r13,QWORD [rsp+24]
	jmp LB_1957
LB_1956:
	add r14,1 
LB_1957:
	cmp r14,r9
	jge LB_1958
	JZ_LINE_SPC BYTE [r13+8+r14], LB_1956
LB_1958
	lea rax,[r14+1]
	cmp rax,r9
	jg LB_1961
	jmp LB_1962
LB_1961:
	mov r8,unt_1
	jmp LB_1959
LB_1962:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],64
	jnz LB_1963
	jmp LB_1964
LB_1963:
	mov r8,unt_1
	jmp LB_1959
LB_1964:
	add r14,1
	jmp LB_1960
LB_1959:
	add rsp,0
	jmp LB_1955
LB_1960:
	mov QWORD [rsp+8*0],r14
	mov r13,QWORD [rsp+16+8*0]
	mov r14,QWORD [rsp+8*0]
	jmp LB_1966
LB_1966
;; rsp=0 , %1550~1'(= r ) %1549~0'(= r ) %1548~{ } 
; #23 { } ⊢ 1(<2)◂{ }
;; rsp=0 , %1551~1(<2)◂{ } %1550~1'(= r ) %1549~0'(= r ) %1548~{ } 
; ∎ 1(<2)◂{ }
; .dlt.ptn 1'(= r )
; .dlt.ptn 0'(= r )
; .dlt.ptn { }
; .mov_ptn2 1(<2)◂{ } ⊢ 2'(= a3◂ [ *{ }] )
; .mov_ptn 1(<2)◂{ } ⊢ 2'(= a3◂ [ *{ }] )
	mov rax,unt 
	mov rax,unt_1
	mov r8,rax
	jmp LB_1965
LB_1965:
	cmp BYTE [r8+6],0
	jnz LB_1955
	pop r14
	pop r9
	add rsp,8
	pop r13
	ret
LB_1955:
	mov r9,QWORD [rsp+8]
	mov r14,QWORD [rsp+16]
	mov r13,QWORD [rsp+24]
	jmp LB_1969
LB_1968:
	add r14,1 
LB_1969:
	cmp r14,r9
	jge LB_1970
	JZ_LINE_SPC BYTE [r13+8+r14], LB_1968
LB_1970
	cmp r14,r9
	jge LB_1973
	jmp LB_1974
LB_1973:
	mov r8,unt_1 
	jmp LB_1971
LB_1974:
	movzx rdi,BYTE [r13+8+r14]
	push rdi 
	add r14,1 
	jmp LB_1972
LB_1971:
	add rsp,0
	jmp LB_1967
LB_1972:
	jmp LB_1976
LB_1975:
	add r14,1 
LB_1976:
	cmp r14,r9
	jge LB_1977
	JZ_LINE_SPC BYTE [r13+8+r14], LB_1975
LB_1977
	call GRM_225
	cmp BYTE [r8+6],0
	jnz LB_1980
	jmp LB_1981
LB_1980:
	jmp LB_1978
LB_1981:
; .mov_ptn2 2'(= *{ } ) ⊢ { }
; .mov_ptn 2'(= *{ } ) ⊢ { }
	jmp LB_1979
LB_1978:
	add rsp,8
	jmp LB_1967
LB_1979:
	mov QWORD [rsp+8*1],r14
	mov r13,QWORD [rsp+16+8*1]
	mov r14,QWORD [rsp+8*1]
	jmp LB_1983
LB_1983
;; rsp=1 , %1555~1'(= r ) %1554~0'(= r ) %1553~{ } %1552~8'(= r ) 
; #22 { } ⊢ 0(<2)◂{ }
;; rsp=1 , %1556~0(<2)◂{ } %1555~1'(= r ) %1554~0'(= r ) %1553~{ } %1552~8'(= r ) 
; ∎ 0(<2)◂{ }
; .dlt.ptn 1'(= r )
; .dlt.ptn 0'(= r )
; .dlt.ptn { }
; .dlt.ptn 8'(= r )
; .mov_ptn2 0(<2)◂{ } ⊢ 2'(= a3◂ [ *{ }] )
; .mov_ptn 0(<2)◂{ } ⊢ 2'(= a3◂ [ *{ }] )
	mov rax,unt 
	mov rax,unt_0
	mov r8,rax
	add rsp,8
	jmp LB_1982
LB_1982:
	cmp BYTE [r8+6],0
	jnz LB_1967
	pop r14
	pop r9
	add rsp,8
	pop r13
	ret
LB_1967:
	mov r9,QWORD [rsp+8]
	mov r14,QWORD [rsp+16]
	mov r13,QWORD [rsp+24]
	jmp LB_1986
LB_1985:
	add r14,1 
LB_1986:
	cmp r14,r9
	jge LB_1987
	JZ_LINE_SPC BYTE [r13+8+r14], LB_1985
LB_1987
	cmp r14,r9
	jge LB_1990
	jmp LB_1991
LB_1990:
	mov r8,unt_1 
	jmp LB_1988
LB_1991:
	movzx rdi,BYTE [r13+8+r14]
	push rdi 
	add r14,1 
	jmp LB_1989
LB_1988:
	add rsp,0
	jmp LB_1984
LB_1989:
	mov QWORD [rsp+8*1],r14
	mov r13,QWORD [rsp+16+8*1]
	mov r14,QWORD [rsp+8*1]
	jmp LB_1993
LB_1993
;; rsp=1 , %1559~1'(= r ) %1558~0'(= r ) %1557~8'(= r ) 
; #22 { } ⊢ 0(<2)◂{ }
;; rsp=1 , %1560~0(<2)◂{ } %1559~1'(= r ) %1558~0'(= r ) %1557~8'(= r ) 
; ∎ 0(<2)◂{ }
; .dlt.ptn 1'(= r )
; .dlt.ptn 0'(= r )
; .dlt.ptn 8'(= r )
; .mov_ptn2 0(<2)◂{ } ⊢ 2'(= a3◂ [ *{ }] )
; .mov_ptn 0(<2)◂{ } ⊢ 2'(= a3◂ [ *{ }] )
	mov rax,unt 
	mov rax,unt_0
	mov r8,rax
	add rsp,8
	jmp LB_1992
LB_1992:
	cmp BYTE [r8+6],0
	jnz LB_1984
	pop r14
	pop r9
	add rsp,8
	pop r13
	ret
LB_1984:
	mov r9,QWORD [rsp+8]
	mov r14,QWORD [rsp+16]
	mov r13,QWORD [rsp+24]
	mov QWORD [rsp+8*0],r14
	mov r13,QWORD [rsp+16+8*0]
	mov r14,QWORD [rsp+8*0]
	jmp LB_1996
LB_1996
;; rsp=0 , %1562~1'(= r ) %1561~0'(= r ) 
; #22 { } ⊢ 0(<2)◂{ }
;; rsp=0 , %1563~0(<2)◂{ } %1562~1'(= r ) %1561~0'(= r ) 
; ∎ 0(<2)◂{ }
; .dlt.ptn 1'(= r )
; .dlt.ptn 0'(= r )
; .mov_ptn2 0(<2)◂{ } ⊢ 2'(= a3◂ [ *{ }] )
; .mov_ptn 0(<2)◂{ } ⊢ 2'(= a3◂ [ *{ }] )
	mov rax,unt 
	mov rax,unt_0
	mov r8,rax
	jmp LB_1995
LB_1995:
	cmp BYTE [r8+6],0
	jnz LB_1994
	pop r14
	pop r9
	add rsp,8
	pop r13
	ret
LB_1994:
	pop rdi
	pop r9 
	pop r14
	pop r13
	ret
ETR_226:
	mov r9,0x0000_ffff_ffff_ffff
	and r9,[r13]
	call GRM_226
	ret
GRM_226:
	sub rsp,32
	mov QWORD [rsp+24],r13
	mov QWORD [rsp+16],r14 
	mov QWORD [rsp+8],r9
	jmp LB_1999
LB_1998:
	add r14,1 
LB_1999:
	cmp r14,r9
	jge LB_2000
	JZ_SPC BYTE [r13+8+r14], LB_1998
LB_2000
	call GRM_227
	cmp BYTE [r8+6],0
	jnz LB_2003
	jmp LB_2004
LB_2003:
	jmp LB_2001
LB_2004:
	sub rsp,8
	mov r8,[r8+8]
; .mov_ptn2 2'(= r ) ⊢ 8'(= r )
; .mov_ptn 2'(= r ) ⊢ 8'(= r )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_2002
LB_2001:
	add rsp,0
	jmp LB_1997
LB_2002:
	jmp LB_2006
LB_2005:
	add r14,1 
LB_2006:
	cmp r14,r9
	jge LB_2007
	JZ_SPC BYTE [r13+8+r14], LB_2005
LB_2007
	lea rax,[r14+1]
	cmp rax,r9
	jg LB_2010
	jmp LB_2011
LB_2010:
	mov r8,unt_1
	jmp LB_2008
LB_2011:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],42
	jnz LB_2012
	jmp LB_2013
LB_2012:
	mov r8,unt_1
	jmp LB_2008
LB_2013:
	add r14,1
	jmp LB_2009
LB_2008:
	add rsp,8
	jmp LB_1997
LB_2009:
	jmp LB_2015
LB_2014:
	add r14,1 
LB_2015:
	cmp r14,r9
	jge LB_2016
	JZ_SPC BYTE [r13+8+r14], LB_2014
LB_2016
	call GRM_67
	cmp BYTE [r8+6],0
	jnz LB_2019
	jmp LB_2020
LB_2019:
	jmp LB_2017
LB_2020:
	sub rsp,8
; .mov_ptn2 2'(= {| l |} ) ⊢ 9'(= {| l |} )
; .mov_ptn 2'(= {| l |} ) ⊢ 9'(= {| l |} )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_2018
LB_2017:
	add rsp,8
	pop rdi
	pop r9 
	pop r14
	pop r13
	ret
LB_2018:
	mov QWORD [rsp+8*2],r14
	mov r13,QWORD [rsp+16+8*2]
	mov r14,QWORD [rsp+8*2]
	jmp LB_2022
LB_2022
;; rsp=2 , %1567~1'(= r ) %1566~0'(= r ) %1565~9'(= {| l |} ) %1564~8'(= r ) 
; #107 { 8'(= r ) 9'(= {| l |} ) } ⊢ 3(<4)◂{ 8'(= r ) 9'(= {| l |} ) }
;; rsp=2 , %1568~3(<4)◂{ 8'(= r ) 9'(= {| l |} ) } %1567~1'(= r ) %1566~0'(= r ) 
; #22 3(<4)◂{ 8'(= r ) 9'(= {| l |} ) } ⊢ 0(<2)◂3(<4)◂{ 8'(= r ) 9'(= {| l |} ) }
;; rsp=2 , %1569~0(<2)◂3(<4)◂{ 8'(= r ) 9'(= {| l |} ) } %1567~1'(= r ) %1566~0'(= r ) 
; ∎ 0(<2)◂3(<4)◂{ 8'(= r ) 9'(= {| l |} ) }
; .dlt.ptn 1'(= r )
; .dlt.ptn 0'(= r )
; .mov_ptn2 0(<2)◂3(<4)◂{ 8'(= r ) 9'(= {| l |} ) } ⊢ 2'(= a3◂ [ a16◂ [ a9◂ [ ]]] )
; .mov_ptn 0(<2)◂3(<4)◂{ 8'(= r ) 9'(= {| l |} ) } ⊢ 2'(= a3◂ [ a16◂ [ a9◂ [ ]]] )
	mov rax,[SS_RCD_2_TOP]
	mov rsi,[rax] 
	mov QWORD [SS_RCD_2_TOP],rsi
	mov QWORD [rax],0
	mov r13,rax
	mov rax,QWORD [rsp-8+8*2]
	mov QWORD [r13+8+8*0],rax
	mov rax,QWORD [rsp-8+8*1]
	mov QWORD [r13+8+8*1],rax
	mov rax,r13
	mov BYTE [rax+6],3
	mov rdi,rax
	mov rax,r15
	mov r15,QWORD [r15] 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,16
	jmp LB_2021
LB_2021:
	cmp BYTE [r8+6],0
	jnz LB_1997
	pop r14
	pop r9
	add rsp,8
	pop r13
	ret
LB_1997:
	mov r9,QWORD [rsp+8]
	mov r14,QWORD [rsp+16]
	mov r13,QWORD [rsp+24]
	jmp LB_2025
LB_2024:
	add r14,1 
LB_2025:
	cmp r14,r9
	jge LB_2026
	JZ_SPC BYTE [r13+8+r14], LB_2024
LB_2026
	call GRM_229
	cmp BYTE [r8+6],0
	jnz LB_2029
	jmp LB_2030
LB_2029:
	jmp LB_2027
LB_2030:
	sub rsp,8
; .mov_ptn2 2'(= {| l |} ) ⊢ 8'(= {| l |} )
; .mov_ptn 2'(= {| l |} ) ⊢ 8'(= {| l |} )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_2028
LB_2027:
	add rsp,0
	jmp LB_2023
LB_2028:
	mov QWORD [rsp+8*1],r14
	mov r13,QWORD [rsp+16+8*1]
	mov r14,QWORD [rsp+8*1]
	jmp LB_2032
LB_2032
;; rsp=1 , %1572~1'(= r ) %1571~0'(= r ) %1570~8'(= {| l |} ) 
; #110 8'(= {| l |} ) ⊢ 0(<4)◂8'(= {| l |} )
;; rsp=1 , %1573~0(<4)◂8'(= {| l |} ) %1572~1'(= r ) %1571~0'(= r ) 
; #22 0(<4)◂8'(= {| l |} ) ⊢ 0(<2)◂0(<4)◂8'(= {| l |} )
;; rsp=1 , %1574~0(<2)◂0(<4)◂8'(= {| l |} ) %1572~1'(= r ) %1571~0'(= r ) 
; ∎ 0(<2)◂0(<4)◂8'(= {| l |} )
; .dlt.ptn 1'(= r )
; .dlt.ptn 0'(= r )
; .mov_ptn2 0(<2)◂0(<4)◂8'(= {| l |} ) ⊢ 2'(= a3◂ [ a16◂ [ a9◂ [ ]]] )
; .mov_ptn 0(<2)◂0(<4)◂8'(= {| l |} ) ⊢ 2'(= a3◂ [ a16◂ [ a9◂ [ ]]] )
	mov rax,QWORD [rsp-8+8*1]
	mov BYTE [rax+6],0
	mov rdi,rax
	mov rax,r15
	mov r15,QWORD [r15] 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,8
	jmp LB_2031
LB_2031:
	cmp BYTE [r8+6],0
	jnz LB_2023
	pop r14
	pop r9
	add rsp,8
	pop r13
	ret
LB_2023:
	mov r9,QWORD [rsp+8]
	mov r14,QWORD [rsp+16]
	mov r13,QWORD [rsp+24]
	jmp LB_2035
LB_2034:
	add r14,1 
LB_2035:
	cmp r14,r9
	jge LB_2036
	JZ_SPC BYTE [r13+8+r14], LB_2034
LB_2036
	call GRM_67
	cmp BYTE [r8+6],0
	jnz LB_2039
	jmp LB_2040
LB_2039:
	jmp LB_2037
LB_2040:
	sub rsp,8
; .mov_ptn2 2'(= {| l |} ) ⊢ 8'(= {| l |} )
; .mov_ptn 2'(= {| l |} ) ⊢ 8'(= {| l |} )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_2038
LB_2037:
	add rsp,0
	jmp LB_2033
LB_2038:
	mov QWORD [rsp+8*1],r14
	mov r13,QWORD [rsp+16+8*1]
	mov r14,QWORD [rsp+8*1]
	jmp LB_2042
LB_2042
;; rsp=1 , %1577~1'(= r ) %1576~0'(= r ) %1575~8'(= {| l |} ) 
; #110 8'(= {| l |} ) ⊢ 0(<4)◂8'(= {| l |} )
;; rsp=1 , %1578~0(<4)◂8'(= {| l |} ) %1577~1'(= r ) %1576~0'(= r ) 
; #22 0(<4)◂8'(= {| l |} ) ⊢ 0(<2)◂0(<4)◂8'(= {| l |} )
;; rsp=1 , %1579~0(<2)◂0(<4)◂8'(= {| l |} ) %1577~1'(= r ) %1576~0'(= r ) 
; ∎ 0(<2)◂0(<4)◂8'(= {| l |} )
; .dlt.ptn 1'(= r )
; .dlt.ptn 0'(= r )
; .mov_ptn2 0(<2)◂0(<4)◂8'(= {| l |} ) ⊢ 2'(= a3◂ [ a16◂ [ a9◂ [ ]]] )
; .mov_ptn 0(<2)◂0(<4)◂8'(= {| l |} ) ⊢ 2'(= a3◂ [ a16◂ [ a9◂ [ ]]] )
	mov rax,QWORD [rsp-8+8*1]
	mov BYTE [rax+6],0
	mov rdi,rax
	mov rax,r15
	mov r15,QWORD [r15] 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,8
	jmp LB_2041
LB_2041:
	cmp BYTE [r8+6],0
	jnz LB_2033
	pop r14
	pop r9
	add rsp,8
	pop r13
	ret
LB_2033:
	mov r9,QWORD [rsp+8]
	mov r14,QWORD [rsp+16]
	mov r13,QWORD [rsp+24]
	jmp LB_2045
LB_2044:
	add r14,1 
LB_2045:
	cmp r14,r9
	jge LB_2046
	JZ_SPC BYTE [r13+8+r14], LB_2044
LB_2046
	call GRM_189
	cmp BYTE [r8+6],0
	jnz LB_2049
	jmp LB_2050
LB_2049:
	jmp LB_2047
LB_2050:
	sub rsp,8
	mov r8,[r8+8]
; .mov_ptn2 2'(= a9◂ [ ] ) ⊢ 8'(= a9◂ [ ] )
; .mov_ptn 2'(= a9◂ [ ] ) ⊢ 8'(= a9◂ [ ] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_2048
LB_2047:
	add rsp,0
	jmp LB_2043
LB_2048:
	mov QWORD [rsp+8*1],r14
	mov r13,QWORD [rsp+16+8*1]
	mov r14,QWORD [rsp+8*1]
	jmp LB_2052
LB_2052
;; rsp=1 , %1582~1'(= r ) %1581~0'(= r ) %1580~8'(= a9◂ [ ] ) 
; #85 8'(= a9◂ [ ] ) ⊢ 1(<2)◂8'(= a9◂ [ ] )
;; rsp=1 , %1583~1(<2)◂8'(= a9◂ [ ] ) %1582~1'(= r ) %1581~0'(= r ) 
; #109 1(<2)◂8'(= a9◂ [ ] ) ⊢ 1(<4)◂1(<2)◂8'(= a9◂ [ ] )
;; rsp=1 , %1584~1(<4)◂1(<2)◂8'(= a9◂ [ ] ) %1582~1'(= r ) %1581~0'(= r ) 
; #22 1(<4)◂1(<2)◂8'(= a9◂ [ ] ) ⊢ 0(<2)◂1(<4)◂1(<2)◂8'(= a9◂ [ ] )
;; rsp=1 , %1585~0(<2)◂1(<4)◂1(<2)◂8'(= a9◂ [ ] ) %1582~1'(= r ) %1581~0'(= r ) 
; ∎ 0(<2)◂1(<4)◂1(<2)◂8'(= a9◂ [ ] )
; .dlt.ptn 1'(= r )
; .dlt.ptn 0'(= r )
; .mov_ptn2 0(<2)◂1(<4)◂1(<2)◂8'(= a9◂ [ ] ) ⊢ 2'(= a3◂ [ a16◂ [ a9◂ [ ]]] )
; .mov_ptn 0(<2)◂1(<4)◂1(<2)◂8'(= a9◂ [ ] ) ⊢ 2'(= a3◂ [ a16◂ [ a9◂ [ ]]] )
	mov rax,QWORD [rsp-8+8*1]
	mov rdi,rax
	mov rax,r15
	mov r15,QWORD [r15] 
	mov QWORD [rax],0
	mov BYTE [rax+6],1
	mov QWORD [rax+8],rdi
	mov rdi,rax
	mov rax,r15
	mov r15,QWORD [r15] 
	mov QWORD [rax],0
	mov BYTE [rax+6],1
	mov QWORD [rax+8],rdi
	mov rdi,rax
	mov rax,r15
	mov r15,QWORD [r15] 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,8
	jmp LB_2051
LB_2051:
	cmp BYTE [r8+6],0
	jnz LB_2043
	pop r14
	pop r9
	add rsp,8
	pop r13
	ret
LB_2043:
	mov r9,QWORD [rsp+8]
	mov r14,QWORD [rsp+16]
	mov r13,QWORD [rsp+24]
	jmp LB_2055
LB_2054:
	add r14,1 
LB_2055:
	cmp r14,r9
	jge LB_2056
	JZ_SPC BYTE [r13+8+r14], LB_2054
LB_2056
	call GRM_228
	cmp BYTE [r8+6],0
	jnz LB_2059
	jmp LB_2060
LB_2059:
	jmp LB_2057
LB_2060:
	sub rsp,16
; .mov_ptn2 2'(= *{ a15◂ [ ]r} ) ⊢ { 8'(= a15◂ [ ] ) 9'(= r ) }
; .mov_ptn 2'(= *{ a15◂ [ ]r} ) ⊢ { 8'(= a15◂ [ ] ) 9'(= r ) }
	mov rdi,r8
	mov rdi,QWORD [rdi+8+8*0]
	mov r10,rdi
	mov QWORD [rsp-8+8*2],r10
	mov rdi,r8
	mov rdi,QWORD [rdi+8+8*1]
	mov r11,rdi
	mov QWORD [rsp-8+8*1],r11
	jmp LB_2058
LB_2057:
	add rsp,0
	jmp LB_2053
LB_2058:
	mov QWORD [rsp+8*2],r14
	mov r13,QWORD [rsp+16+8*2]
	mov r14,QWORD [rsp+8*2]
	jmp LB_2062
LB_2062
;; rsp=2 , %1588~1'(= r ) %1587~0'(= r ) %1586~{ 8'(= a15◂ [ ] ) 9'(= r ) } 
; #108 { 8'(= a15◂ [ ] ) 9'(= r ) } ⊢ 2(<4)◂{ 8'(= a15◂ [ ] ) 9'(= r ) }
;; rsp=2 , %1589~2(<4)◂{ 8'(= a15◂ [ ] ) 9'(= r ) } %1588~1'(= r ) %1587~0'(= r ) 
; #22 2(<4)◂{ 8'(= a15◂ [ ] ) 9'(= r ) } ⊢ 0(<2)◂2(<4)◂{ 8'(= a15◂ [ ] ) 9'(= r ) }
;; rsp=2 , %1590~0(<2)◂2(<4)◂{ 8'(= a15◂ [ ] ) 9'(= r ) } %1588~1'(= r ) %1587~0'(= r ) 
; ∎ 0(<2)◂2(<4)◂{ 8'(= a15◂ [ ] ) 9'(= r ) }
; .dlt.ptn 1'(= r )
; .dlt.ptn 0'(= r )
; .mov_ptn2 0(<2)◂2(<4)◂{ 8'(= a15◂ [ ] ) 9'(= r ) } ⊢ 2'(= a3◂ [ a16◂ [ a9◂ [ ]]] )
; .mov_ptn 0(<2)◂2(<4)◂{ 8'(= a15◂ [ ] ) 9'(= r ) } ⊢ 2'(= a3◂ [ a16◂ [ a9◂ [ ]]] )
	mov rax,[SS_RCD_2_TOP]
	mov rsi,[rax] 
	mov QWORD [SS_RCD_2_TOP],rsi
	mov QWORD [rax],0
	mov r13,rax
	mov rax,QWORD [rsp-8+8*2]
	mov QWORD [r13+8+8*0],rax
	mov rax,QWORD [rsp-8+8*1]
	mov QWORD [r13+8+8*1],rax
	mov rax,r13
	mov BYTE [rax+6],2
	mov rdi,rax
	mov rax,r15
	mov r15,QWORD [r15] 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,16
	jmp LB_2061
LB_2061:
	cmp BYTE [r8+6],0
	jnz LB_2053
	pop r14
	pop r9
	add rsp,8
	pop r13
	ret
LB_2053:
	pop rdi
	pop r9 
	pop r14
	pop r13
	ret
ETR_227:
	mov r9,0x0000_ffff_ffff_ffff
	and r9,[r13]
	call GRM_227
	ret
GRM_227:
	sub rsp,32
	mov QWORD [rsp+24],r13
	mov QWORD [rsp+16],r14 
	mov QWORD [rsp+8],r9
	cmp r14,r9
	jge LB_2066
 lea rdi,[r13+8+r14] 
	C_PUSH_REGS
	call scf_d
	C_POP_REGS
	cmp rax,0 
	jz LB_2066
	add r14,rsi
	push rdi
	jmp LB_2067
LB_2066:
	mov r8,unt_1
	jmp LB_2064
LB_2067:
	jmp LB_2065
LB_2064:
	add rsp,0
	jmp LB_2063
LB_2065:
	lea rax,[r14+1]
	cmp rax,r9
	jg LB_2070
	jmp LB_2071
LB_2070:
	mov r8,unt_1
	jmp LB_2068
LB_2071:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],39
	jnz LB_2072
	jmp LB_2073
LB_2072:
	mov r8,unt_1
	jmp LB_2068
LB_2073:
	add r14,1
	jmp LB_2069
LB_2068:
	add rsp,8
	jmp LB_2063
LB_2069:
	mov QWORD [rsp+8*1],r14
	mov r13,QWORD [rsp+16+8*1]
	mov r14,QWORD [rsp+8*1]
	jmp LB_2075
LB_2075
;; rsp=1 , %1593~1'(= r ) %1592~0'(= r ) %1591~8'(= r ) 
; #22 8'(= r ) ⊢ 0(<2)◂8'(= r )
;; rsp=1 , %1594~0(<2)◂8'(= r ) %1593~1'(= r ) %1592~0'(= r ) 
; ∎ 0(<2)◂8'(= r )
; .dlt.ptn 1'(= r )
; .dlt.ptn 0'(= r )
; .mov_ptn2 0(<2)◂8'(= r ) ⊢ 2'(= a3◂ [ r] )
; .mov_ptn 0(<2)◂8'(= r ) ⊢ 2'(= a3◂ [ r] )
	mov rax,QWORD [rsp-8+8*1]
	mov rdi,rax
	mov rax,r15
	mov r15,QWORD [r15] 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,8
	jmp LB_2074
LB_2074:
	cmp BYTE [r8+6],0
	jnz LB_2063
	pop r14
	pop r9
	add rsp,8
	pop r13
	ret
LB_2063:
	pop rdi
	pop r9 
	pop r14
	pop r13
	ret
ETR_228:
	mov r9,0x0000_ffff_ffff_ffff
	and r9,[r13]
	call GRM_228
	ret
GRM_228:
	sub rsp,32
	mov QWORD [rsp+24],r13
	mov QWORD [rsp+16],r14 
	mov QWORD [rsp+8],r9
	cmp r14,r9
	jge LB_2079
 lea rdi,[r13+8+r14] 
	C_PUSH_REGS
	call scf_d
	C_POP_REGS
	cmp rax,0 
	jz LB_2079
	add r14,rsi
	push rdi
	jmp LB_2080
LB_2079:
	mov r8,unt_1
	jmp LB_2077
LB_2080:
	jmp LB_2078
LB_2077:
	add rsp,0
	jmp LB_2076
LB_2078:
	lea rax,[r14+2]
	cmp rax,r9
	jg LB_2083
	jmp LB_2084
LB_2083:
	mov r8,unt_1
	jmp LB_2081
LB_2084:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],100
	jnz LB_2085
	cmp BYTE [rdi+1],39
	jnz LB_2085
	jmp LB_2086
LB_2085:
	mov r8,unt_1
	jmp LB_2081
LB_2086:
	add r14,2
	jmp LB_2082
LB_2081:
	add rsp,8
	jmp LB_2076
LB_2082:
	mov QWORD [rsp+8*1],r14
	mov r13,QWORD [rsp+16+8*1]
	mov r14,QWORD [rsp+8*1]
	jmp LB_2088
LB_2088
;; rsp=1 , %1597~1'(= r ) %1596~0'(= r ) %1595~8'(= r ) 
; #105 { } ⊢ 1(<4)◂{ }
;; rsp=1 , %1598~1(<4)◂{ } %1597~1'(= r ) %1596~0'(= r ) %1595~8'(= r ) 
; #22 { 1(<4)◂{ } 8'(= r ) } ⊢ 0(<2)◂{ 1(<4)◂{ } 8'(= r ) }
;; rsp=1 , %1599~0(<2)◂{ 1(<4)◂{ } 8'(= r ) } %1597~1'(= r ) %1596~0'(= r ) 
; ∎ 0(<2)◂{ 1(<4)◂{ } 8'(= r ) }
; .dlt.ptn 1'(= r )
; .dlt.ptn 0'(= r )
; .mov_ptn2 0(<2)◂{ 1(<4)◂{ } 8'(= r ) } ⊢ 2'(= a3◂ [ *{ a15◂ [ ]r}] )
; .mov_ptn 0(<2)◂{ 1(<4)◂{ } 8'(= r ) } ⊢ 2'(= a3◂ [ *{ a15◂ [ ]r}] )
	mov rax,[SS_RCD_2_TOP]
	mov rsi,[rax] 
	mov QWORD [SS_RCD_2_TOP],rsi
	mov QWORD [rax],0
	mov r13,rax
	mov rax,unt 
	mov rax,unt_1
	mov QWORD [r13+8+8*0],rax
	mov rax,QWORD [rsp-8+8*1]
	mov QWORD [r13+8+8*1],rax
	mov rax,r13
	mov BYTE [rax+6],0
	mov r8,rax
	add rsp,8
	jmp LB_2087
LB_2087:
	cmp BYTE [r8+6],0
	jnz LB_2076
	pop r14
	pop r9
	add rsp,8
	pop r13
	ret
LB_2076:
	mov r9,QWORD [rsp+8]
	mov r14,QWORD [rsp+16]
	mov r13,QWORD [rsp+24]
	cmp r14,r9
	jge LB_2092
 lea rdi,[r13+8+r14] 
	C_PUSH_REGS
	call scf_d
	C_POP_REGS
	cmp rax,0 
	jz LB_2092
	add r14,rsi
	push rdi
	jmp LB_2093
LB_2092:
	mov r8,unt_1
	jmp LB_2090
LB_2093:
	jmp LB_2091
LB_2090:
	add rsp,0
	jmp LB_2089
LB_2091:
	lea rax,[r14+2]
	cmp rax,r9
	jg LB_2096
	jmp LB_2097
LB_2096:
	mov r8,unt_1
	jmp LB_2094
LB_2097:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],120
	jnz LB_2098
	cmp BYTE [rdi+1],39
	jnz LB_2098
	jmp LB_2099
LB_2098:
	mov r8,unt_1
	jmp LB_2094
LB_2099:
	add r14,2
	jmp LB_2095
LB_2094:
	add rsp,8
	jmp LB_2089
LB_2095:
	mov QWORD [rsp+8*1],r14
	mov r13,QWORD [rsp+16+8*1]
	mov r14,QWORD [rsp+8*1]
	jmp LB_2101
LB_2101
;; rsp=1 , %1602~1'(= r ) %1601~0'(= r ) %1600~8'(= r ) 
; #104 { } ⊢ 2(<4)◂{ }
;; rsp=1 , %1603~2(<4)◂{ } %1602~1'(= r ) %1601~0'(= r ) %1600~8'(= r ) 
; #22 { 2(<4)◂{ } 8'(= r ) } ⊢ 0(<2)◂{ 2(<4)◂{ } 8'(= r ) }
;; rsp=1 , %1604~0(<2)◂{ 2(<4)◂{ } 8'(= r ) } %1602~1'(= r ) %1601~0'(= r ) 
; ∎ 0(<2)◂{ 2(<4)◂{ } 8'(= r ) }
; .dlt.ptn 1'(= r )
; .dlt.ptn 0'(= r )
; .mov_ptn2 0(<2)◂{ 2(<4)◂{ } 8'(= r ) } ⊢ 2'(= a3◂ [ *{ a15◂ [ ]r}] )
; .mov_ptn 0(<2)◂{ 2(<4)◂{ } 8'(= r ) } ⊢ 2'(= a3◂ [ *{ a15◂ [ ]r}] )
	mov rax,[SS_RCD_2_TOP]
	mov rsi,[rax] 
	mov QWORD [SS_RCD_2_TOP],rsi
	mov QWORD [rax],0
	mov r13,rax
	mov rax,unt 
	mov rax,unt_2
	mov QWORD [r13+8+8*0],rax
	mov rax,QWORD [rsp-8+8*1]
	mov QWORD [r13+8+8*1],rax
	mov rax,r13
	mov BYTE [rax+6],0
	mov r8,rax
	add rsp,8
	jmp LB_2100
LB_2100:
	cmp BYTE [r8+6],0
	jnz LB_2089
	pop r14
	pop r9
	add rsp,8
	pop r13
	ret
LB_2089:
	mov r9,QWORD [rsp+8]
	mov r14,QWORD [rsp+16]
	mov r13,QWORD [rsp+24]
	cmp r14,r9
	jge LB_2105
 lea rdi,[r13+8+r14] 
	C_PUSH_REGS
	call scf_d
	C_POP_REGS
	cmp rax,0 
	jz LB_2105
	add r14,rsi
	push rdi
	jmp LB_2106
LB_2105:
	mov r8,unt_1
	jmp LB_2103
LB_2106:
	jmp LB_2104
LB_2103:
	add rsp,0
	jmp LB_2102
LB_2104:
	lea rax,[r14+1]
	cmp rax,r9
	jg LB_2109
	jmp LB_2110
LB_2109:
	mov r8,unt_1
	jmp LB_2107
LB_2110:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],39
	jnz LB_2111
	jmp LB_2112
LB_2111:
	mov r8,unt_1
	jmp LB_2107
LB_2112:
	add r14,1
	jmp LB_2108
LB_2107:
	add rsp,8
	jmp LB_2102
LB_2108:
	mov QWORD [rsp+8*1],r14
	mov r13,QWORD [rsp+16+8*1]
	mov r14,QWORD [rsp+8*1]
	jmp LB_2114
LB_2114
;; rsp=1 , %1607~1'(= r ) %1606~0'(= r ) %1605~8'(= r ) 
; #106 { } ⊢ 0(<4)◂{ }
;; rsp=1 , %1608~0(<4)◂{ } %1607~1'(= r ) %1606~0'(= r ) %1605~8'(= r ) 
; #22 { 0(<4)◂{ } 8'(= r ) } ⊢ 0(<2)◂{ 0(<4)◂{ } 8'(= r ) }
;; rsp=1 , %1609~0(<2)◂{ 0(<4)◂{ } 8'(= r ) } %1607~1'(= r ) %1606~0'(= r ) 
; ∎ 0(<2)◂{ 0(<4)◂{ } 8'(= r ) }
; .dlt.ptn 1'(= r )
; .dlt.ptn 0'(= r )
; .mov_ptn2 0(<2)◂{ 0(<4)◂{ } 8'(= r ) } ⊢ 2'(= a3◂ [ *{ a15◂ [ ]r}] )
; .mov_ptn 0(<2)◂{ 0(<4)◂{ } 8'(= r ) } ⊢ 2'(= a3◂ [ *{ a15◂ [ ]r}] )
	mov rax,[SS_RCD_2_TOP]
	mov rsi,[rax] 
	mov QWORD [SS_RCD_2_TOP],rsi
	mov QWORD [rax],0
	mov r13,rax
	mov rax,unt 
	mov rax,unt_0
	mov QWORD [r13+8+8*0],rax
	mov rax,QWORD [rsp-8+8*1]
	mov QWORD [r13+8+8*1],rax
	mov rax,r13
	mov BYTE [rax+6],0
	mov r8,rax
	add rsp,8
	jmp LB_2113
LB_2113:
	cmp BYTE [r8+6],0
	jnz LB_2102
	pop r14
	pop r9
	add rsp,8
	pop r13
	ret
LB_2102:
	pop rdi
	pop r9 
	pop r14
	pop r13
	ret
ETR_229:
	mov r9,0x0000_ffff_ffff_ffff
	and r9,[r13]
	call GRM_229
	ret
GRM_229:
	sub rsp,32
	mov QWORD [rsp+24],r13
	mov QWORD [rsp+16],r14 
	mov QWORD [rsp+8],r9
	lea rax,[r14+1]
	cmp rax,r9
	jg LB_2118
	jmp LB_2119
LB_2118:
	mov r8,unt_1
	jmp LB_2116
LB_2119:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],96
	jnz LB_2120
	jmp LB_2121
LB_2120:
	mov r8,unt_1
	jmp LB_2116
LB_2121:
	add r14,1
	jmp LB_2117
LB_2116:
	add rsp,0
	jmp LB_2115
LB_2117:
	call GRM_230
	cmp BYTE [r8+6],0
	jnz LB_2124
	jmp LB_2125
LB_2124:
	jmp LB_2122
LB_2125:
	sub rsp,8
	mov r8,[r8+8]
; .mov_ptn2 2'(= a5◂ [ ] ) ⊢ 8'(= a5◂ [ ] )
; .mov_ptn 2'(= a5◂ [ ] ) ⊢ 8'(= a5◂ [ ] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_2123
LB_2122:
	add rsp,0
	jmp LB_2115
LB_2123:
	mov QWORD [rsp+8*1],r14
	mov r13,QWORD [rsp+16+8*1]
	mov r14,QWORD [rsp+8*1]
	jmp LB_2127
LB_2127
;; rsp=1 , %1612~1'(= r ) %1611~0'(= r ) %1610~8'(= a5◂ [ ] ) 
; rsp_d=0, #43 8'(= a5◂ [ ] ) ⊢ { 3'(= a5◂ [ ] ) 2'(= {| l |} ) }
	sub rsp,16
	mov QWORD [rsp+8*0],r13
	mov QWORD [rsp+8*1],r14
; .mov_ptn2 8'(= a5◂ [ ] ) ⊢ 0'(= a5◂ [ ] )
; .mov_ptn 8'(= a5◂ [ ] ) ⊢ 0'(= a5◂ [ ] )
	mov rax,QWORD [rsp-8+8*3]
	mov r13,rax
	call ETR_43

	mov rax,QWORD [rsp-8+8*2]
	mov r8,r14
	mov r14,rax
	mov rax,QWORD [rsp-8+8*1]
	mov r9,r13
	mov r13,rax
	add rsp,24
;; rsp=0 , %1614~2'(= {| l |} ) %1613~3'(= a5◂ [ ] ) %1612~1'(= r ) %1611~0'(= r ) 
; #22 2'(= {| l |} ) ⊢ 0(<2)◂2'(= {| l |} )
;; rsp=0 , %1615~0(<2)◂2'(= {| l |} ) %1613~3'(= a5◂ [ ] ) %1612~1'(= r ) %1611~0'(= r ) 
; ∎ 0(<2)◂2'(= {| l |} )
; .dlt.ptn 3'(= a5◂ [ ] )
;	.dlt adt ⊢ _  
; .dlt.ptn 1'(= r )
; .dlt.ptn 0'(= r )
; .mov_ptn2 0(<2)◂2'(= {| l |} ) ⊢ 2'(= a3◂ [ {| l |}] )
	mov r13,r8
; .mov_ptn 0(<2)◂0'(= {| l |} ) ⊢ 2'(= a3◂ [ {| l |}] )
	mov rax,r13
	mov BYTE [rax+6],0
	mov r8,rax
	jmp LB_2126
LB_2126:
	cmp BYTE [r8+6],0
	jnz LB_2115
	pop r14
	pop r9
	add rsp,8
	pop r13
	ret
LB_2115:
	pop rdi
	pop r9 
	pop r14
	pop r13
	ret
ETR_230:
	mov r9,0x0000_ffff_ffff_ffff
	and r9,[r13]
	call GRM_230
	ret
GRM_230:
	sub rsp,32
	mov QWORD [rsp+24],r13
	mov QWORD [rsp+16],r14 
	mov QWORD [rsp+8],r9
	lea rax,[r14+1]
	cmp rax,r9
	jg LB_2131
	jmp LB_2132
LB_2131:
	mov r8,unt_1
	jmp LB_2129
LB_2132:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],10
	jnz LB_2133
	jmp LB_2134
LB_2133:
	mov r8,unt_1
	jmp LB_2129
LB_2134:
	add r14,1
	jmp LB_2130
LB_2129:
	add rsp,0
	jmp LB_2128
LB_2130:
	mov QWORD [rsp+8*0],r14
	mov r13,QWORD [rsp+16+8*0]
	mov r14,QWORD [rsp+8*0]
	jmp LB_2136
LB_2136
;; rsp=0 , %1617~1'(= r ) %1616~0'(= r ) 
	jmp LB_2137
LB_2137:
; $ %[ 10r ] ⊢ %[ 10r ]
;; rsp=0 , %1618~%[ 10r ] %1617~1'(= r ) %1616~0'(= r ) 
; #32 { } ⊢ 2(<4)◂{ }
;; rsp=0 , %1619~2(<4)◂{ } %1618~%[ 10r ] %1617~1'(= r ) %1616~0'(= r ) 
; rsp_d=0, #40 { %[ 10r ] 2(<4)◂{ } } ⊢ 2'(= a5◂ [ ] )
	sub rsp,16
	mov QWORD [rsp+8*0],r13
	mov QWORD [rsp+8*1],r14
; .mov_ptn2 { %[ 10r ] 2(<4)◂{ } } ⊢ { 0'(= r ) 1'(= a5◂ [ ] ) }
; .mov_ptn 2(<4)◂{ } ⊢ 1'(= a5◂ [ ] )
	mov rax,unt 
	mov rax,unt_2
	mov r14,rax
; .mov_ptn %[ 10r ] ⊢ 0'(= r )
	mov rax,10
	mov r13,rax
	call ETR_40

	mov r14,QWORD [rsp-8+8*2]
	mov rax,QWORD [rsp-8+8*1]
	mov r8,r13
	mov r13,rax
	add rsp,16
;; rsp=0 , %1620~2'(= a5◂ [ ] ) %1617~1'(= r ) %1616~0'(= r ) 
; #22 2'(= a5◂ [ ] ) ⊢ 0(<2)◂2'(= a5◂ [ ] )
;; rsp=0 , %1621~0(<2)◂2'(= a5◂ [ ] ) %1617~1'(= r ) %1616~0'(= r ) 
; ∎ 0(<2)◂2'(= a5◂ [ ] )
; .dlt.ptn 1'(= r )
; .dlt.ptn 0'(= r )
; .mov_ptn2 0(<2)◂2'(= a5◂ [ ] ) ⊢ 2'(= a3◂ [ a5◂ [ ]] )
	mov r13,r8
; .mov_ptn 0(<2)◂0'(= a5◂ [ ] ) ⊢ 2'(= a3◂ [ a5◂ [ ]] )
	mov rax,r13
	mov rdi,rax
	mov rax,r15
	mov r15,QWORD [r15] 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	jmp LB_2135
LB_2135:
	cmp BYTE [r8+6],0
	jnz LB_2128
	pop r14
	pop r9
	add rsp,8
	pop r13
	ret
LB_2128:
	mov r9,QWORD [rsp+8]
	mov r14,QWORD [rsp+16]
	mov r13,QWORD [rsp+24]
	cmp r14,r9
	jge LB_2141
	jmp LB_2142
LB_2141:
	mov r8,unt_1 
	jmp LB_2139
LB_2142:
	movzx rdi,BYTE [r13+8+r14]
	push rdi 
	add r14,1 
	jmp LB_2140
LB_2139:
	add rsp,0
	jmp LB_2138
LB_2140:
	call GRM_230
	cmp BYTE [r8+6],0
	jnz LB_2145
	jmp LB_2146
LB_2145:
	jmp LB_2143
LB_2146:
	sub rsp,8
	mov r8,[r8+8]
; .mov_ptn2 2'(= a5◂ [ ] ) ⊢ 9'(= a5◂ [ ] )
; .mov_ptn 2'(= a5◂ [ ] ) ⊢ 9'(= a5◂ [ ] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_2144
LB_2143:
	add rsp,8
	jmp LB_2138
LB_2144:
	mov QWORD [rsp+8*2],r14
	mov r13,QWORD [rsp+16+8*2]
	mov r14,QWORD [rsp+8*2]
	jmp LB_2148
LB_2148
;; rsp=2 , %1625~1'(= r ) %1624~0'(= r ) %1623~9'(= a5◂ [ ] ) %1622~8'(= r ) 
; rsp_d=0, #40 { 8'(= r ) 9'(= a5◂ [ ] ) } ⊢ 2'(= a5◂ [ ] )
	sub rsp,16
	mov QWORD [rsp+8*0],r13
	mov QWORD [rsp+8*1],r14
; .mov_ptn2 { 8'(= r ) 9'(= a5◂ [ ] ) } ⊢ { 0'(= r ) 1'(= a5◂ [ ] ) }
; .mov_ptn 9'(= a5◂ [ ] ) ⊢ 1'(= a5◂ [ ] )
	mov rax,QWORD [rsp-8+8*3]
	mov r14,rax
; .mov_ptn 8'(= r ) ⊢ 0'(= r )
	mov rax,QWORD [rsp-8+8*4]
	mov r13,rax
	call ETR_40

	mov r14,QWORD [rsp-8+8*2]
	mov rax,QWORD [rsp-8+8*1]
	mov r8,r13
	mov r13,rax
	add rsp,32
;; rsp=0 , %1626~2'(= a5◂ [ ] ) %1625~1'(= r ) %1624~0'(= r ) 
; #22 2'(= a5◂ [ ] ) ⊢ 0(<2)◂2'(= a5◂ [ ] )
;; rsp=0 , %1627~0(<2)◂2'(= a5◂ [ ] ) %1625~1'(= r ) %1624~0'(= r ) 
; ∎ 0(<2)◂2'(= a5◂ [ ] )
; .dlt.ptn 1'(= r )
; .dlt.ptn 0'(= r )
; .mov_ptn2 0(<2)◂2'(= a5◂ [ ] ) ⊢ 2'(= a3◂ [ a5◂ [ ]] )
	mov r13,r8
; .mov_ptn 0(<2)◂0'(= a5◂ [ ] ) ⊢ 2'(= a3◂ [ a5◂ [ ]] )
	mov rax,r13
	mov rdi,rax
	mov rax,r15
	mov r15,QWORD [r15] 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	jmp LB_2147
LB_2147:
	cmp BYTE [r8+6],0
	jnz LB_2138
	pop r14
	pop r9
	add rsp,8
	pop r13
	ret
LB_2138:
	pop rdi
	pop r9 
	pop r14
	pop r13
	ret
ETR_231:
	mov r9,0x0000_ffff_ffff_ffff
	and r9,[r13]
	call GRM_231
	ret
GRM_231:
	sub rsp,32
	mov QWORD [rsp+24],r13
	mov QWORD [rsp+16],r14 
	mov QWORD [rsp+8],r9
	jmp LB_2151
LB_2150:
	add r14,1 
LB_2151:
	cmp r14,r9
	jge LB_2152
	JZ_LINE_SPC BYTE [r13+8+r14], LB_2150
LB_2152
	call GRM_217
	cmp BYTE [r8+6],0
	jnz LB_2155
	jmp LB_2156
LB_2155:
	jmp LB_2153
LB_2156:
	sub rsp,8
	mov r8,[r8+8]
; .mov_ptn2 2'(= a35◂ [ *{ }] ) ⊢ 8'(= a35◂ [ *{ }] )
; .mov_ptn 2'(= a35◂ [ *{ }] ) ⊢ 8'(= a35◂ [ *{ }] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_2154
LB_2153:
	add rsp,0
	jmp LB_2149
LB_2154:
	jmp LB_2158
LB_2157:
	add r14,1 
LB_2158:
	cmp r14,r9
	jge LB_2159
	JZ_LINE_SPC BYTE [r13+8+r14], LB_2157
LB_2159
	lea rax,[r14+2]
	cmp rax,r9
	jg LB_2162
	jmp LB_2163
LB_2162:
	mov r8,unt_1
	jmp LB_2160
LB_2163:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],47
	jnz LB_2164
	cmp BYTE [rdi+1],47
	jnz LB_2164
	jmp LB_2165
LB_2164:
	mov r8,unt_1
	jmp LB_2160
LB_2165:
	add r14,2
	jmp LB_2161
LB_2160:
	add rsp,8
	jmp LB_2149
LB_2161:
	mov QWORD [rsp+8*1],r14
	mov r13,QWORD [rsp+16+8*1]
	mov r14,QWORD [rsp+8*1]
	jmp LB_2167
LB_2167
;; rsp=1 , %1630~1'(= r ) %1629~0'(= r ) %1628~8'(= a35◂ [ *{ }] ) 
; #20 { } ⊢ 1(<2)◂{ }
;; rsp=1 , %1631~1(<2)◂{ } %1630~1'(= r ) %1629~0'(= r ) %1628~8'(= a35◂ [ *{ }] ) 
; #22 1(<2)◂{ } ⊢ 0(<2)◂1(<2)◂{ }
;; rsp=1 , %1632~0(<2)◂1(<2)◂{ } %1630~1'(= r ) %1629~0'(= r ) %1628~8'(= a35◂ [ *{ }] ) 
; ∎ 0(<2)◂1(<2)◂{ }
; .dlt.ptn 1'(= r )
; .dlt.ptn 0'(= r )
; .dlt.ptn 8'(= a35◂ [ *{ }] )
;	.dlt adt ⊢ _  
; .mov_ptn2 0(<2)◂1(<2)◂{ } ⊢ 2'(= a3◂ [ a2◂ [ a16◂ [ a9◂ [ ]]]] )
; .mov_ptn 0(<2)◂1(<2)◂{ } ⊢ 2'(= a3◂ [ a2◂ [ a16◂ [ a9◂ [ ]]]] )
	mov rax,unt 
	mov rax,unt_1
	mov rdi,rax
	mov rax,r15
	mov r15,QWORD [r15] 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,8
	jmp LB_2166
LB_2166:
	cmp BYTE [r8+6],0
	jnz LB_2149
	pop r14
	pop r9
	add rsp,8
	pop r13
	ret
LB_2149:
	mov r9,QWORD [rsp+8]
	mov r14,QWORD [rsp+16]
	mov r13,QWORD [rsp+24]
	jmp LB_2170
LB_2169:
	add r14,1 
LB_2170:
	cmp r14,r9
	jge LB_2171
	JZ_LINE_SPC BYTE [r13+8+r14], LB_2169
LB_2171
	call GRM_217
	cmp BYTE [r8+6],0
	jnz LB_2174
	jmp LB_2175
LB_2174:
	jmp LB_2172
LB_2175:
	sub rsp,8
	mov r8,[r8+8]
; .mov_ptn2 2'(= a35◂ [ *{ }] ) ⊢ 8'(= a35◂ [ *{ }] )
; .mov_ptn 2'(= a35◂ [ *{ }] ) ⊢ 8'(= a35◂ [ *{ }] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_2173
LB_2172:
	add rsp,0
	jmp LB_2168
LB_2173:
	jmp LB_2177
LB_2176:
	add r14,1 
LB_2177:
	cmp r14,r9
	jge LB_2178
	JZ_LINE_SPC BYTE [r13+8+r14], LB_2176
LB_2178
	call GRM_226
	cmp BYTE [r8+6],0
	jnz LB_2181
	jmp LB_2182
LB_2181:
	jmp LB_2179
LB_2182:
	sub rsp,8
	mov r8,[r8+8]
; .mov_ptn2 2'(= a16◂ [ a9◂ [ ]] ) ⊢ 9'(= a16◂ [ a9◂ [ ]] )
; .mov_ptn 2'(= a16◂ [ a9◂ [ ]] ) ⊢ 9'(= a16◂ [ a9◂ [ ]] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_2180
LB_2179:
	add rsp,8
	jmp LB_2168
LB_2180:
	jmp LB_2184
LB_2183:
	add r14,1 
LB_2184:
	cmp r14,r9
	jge LB_2185
	JZ_LINE_SPC BYTE [r13+8+r14], LB_2183
LB_2185
	call GRM_231
	cmp BYTE [r8+6],0
	jnz LB_2188
	jmp LB_2189
LB_2188:
	jmp LB_2186
LB_2189:
	sub rsp,8
	mov r8,[r8+8]
; .mov_ptn2 2'(= a2◂ [ a16◂ [ a9◂ [ ]]] ) ⊢ 10'(= a2◂ [ a16◂ [ a9◂ [ ]]] )
; .mov_ptn 2'(= a2◂ [ a16◂ [ a9◂ [ ]]] ) ⊢ 10'(= a2◂ [ a16◂ [ a9◂ [ ]]] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_2187
LB_2186:
	add rsp,16
	jmp LB_2168
LB_2187:
	mov QWORD [rsp+8*3],r14
	mov r13,QWORD [rsp+16+8*3]
	mov r14,QWORD [rsp+8*3]
	jmp LB_2191
LB_2191
;; rsp=3 , %1637~1'(= r ) %1636~0'(= r ) %1635~10'(= a2◂ [ a16◂ [ a9◂ [ ]]] ) %1634~9'(= a16◂ [ a9◂ [ ]] ) %1633~8'(= a35◂ [ *{ }] ) 
; #21 { 9'(= a16◂ [ a9◂ [ ]] ) 10'(= a2◂ [ a16◂ [ a9◂ [ ]]] ) } ⊢ 0(<2)◂{ 9'(= a16◂ [ a9◂ [ ]] ) 10'(= a2◂ [ a16◂ [ a9◂ [ ]]] ) }
;; rsp=3 , %1638~0(<2)◂{ 9'(= a16◂ [ a9◂ [ ]] ) 10'(= a2◂ [ a16◂ [ a9◂ [ ]]] ) } %1637~1'(= r ) %1636~0'(= r ) %1633~8'(= a35◂ [ *{ }] ) 
; #22 0(<2)◂{ 9'(= a16◂ [ a9◂ [ ]] ) 10'(= a2◂ [ a16◂ [ a9◂ [ ]]] ) } ⊢ 0(<2)◂0(<2)◂{ 9'(= a16◂ [ a9◂ [ ]] ) 10'(= a2◂ [ a16◂ [ a9◂ [ ]]] ) }
;; rsp=3 , %1639~0(<2)◂0(<2)◂{ 9'(= a16◂ [ a9◂ [ ]] ) 10'(= a2◂ [ a16◂ [ a9◂ [ ]]] ) } %1637~1'(= r ) %1636~0'(= r ) %1633~8'(= a35◂ [ *{ }] ) 
; ∎ 0(<2)◂0(<2)◂{ 9'(= a16◂ [ a9◂ [ ]] ) 10'(= a2◂ [ a16◂ [ a9◂ [ ]]] ) }
; .dlt.ptn 1'(= r )
; .dlt.ptn 0'(= r )
; .dlt.ptn 8'(= a35◂ [ *{ }] )
;	.dlt adt ⊢ _  
; .mov_ptn2 0(<2)◂0(<2)◂{ 9'(= a16◂ [ a9◂ [ ]] ) 10'(= a2◂ [ a16◂ [ a9◂ [ ]]] ) } ⊢ 2'(= a3◂ [ a2◂ [ a16◂ [ a9◂ [ ]]]] )
; .mov_ptn 0(<2)◂0(<2)◂{ 9'(= a16◂ [ a9◂ [ ]] ) 10'(= a2◂ [ a16◂ [ a9◂ [ ]]] ) } ⊢ 2'(= a3◂ [ a2◂ [ a16◂ [ a9◂ [ ]]]] )
	mov rax,[SS_RCD_2_TOP]
	mov rsi,[rax] 
	mov QWORD [SS_RCD_2_TOP],rsi
	mov QWORD [rax],0
	mov r13,rax
	mov rax,QWORD [rsp-8+8*2]
	mov QWORD [r13+8+8*0],rax
	mov rax,QWORD [rsp-8+8*1]
	mov QWORD [r13+8+8*1],rax
	mov rax,r13
	mov BYTE [rax+6],0
	mov rdi,rax
	mov rax,r15
	mov r15,QWORD [r15] 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,24
	jmp LB_2190
LB_2190:
	cmp BYTE [r8+6],0
	jnz LB_2168
	pop r14
	pop r9
	add rsp,8
	pop r13
	ret
LB_2168:
	pop rdi
	pop r9 
	pop r14
	pop r13
	ret
ETR_232:
	mov r9,0x0000_ffff_ffff_ffff
	and r9,[r13]
	call GRM_232
	ret
GRM_232:
	sub rsp,32
	mov QWORD [rsp+24],r13
	mov QWORD [rsp+16],r14 
	mov QWORD [rsp+8],r9
	jmp LB_2194
LB_2193:
	add r14,1 
LB_2194:
	cmp r14,r9
	jge LB_2195
	JZ_SPC BYTE [r13+8+r14], LB_2193
LB_2195
	lea rax,[r14+2]
	cmp rax,r9
	jg LB_2198
	jmp LB_2199
LB_2198:
	mov r8,unt_1
	jmp LB_2196
LB_2199:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],95
	jnz LB_2200
	cmp BYTE [rdi+1],94
	jnz LB_2200
	jmp LB_2201
LB_2200:
	mov r8,unt_1
	jmp LB_2196
LB_2201:
	add r14,2
	jmp LB_2197
LB_2196:
	add rsp,0
	jmp LB_2192
LB_2197:
	jmp LB_2203
LB_2202:
	add r14,1 
LB_2203:
	cmp r14,r9
	jge LB_2204
	JZ_SPC BYTE [r13+8+r14], LB_2202
LB_2204
	call GRM_233
	cmp BYTE [r8+6],0
	jnz LB_2207
	jmp LB_2208
LB_2207:
	jmp LB_2205
LB_2208:
	sub rsp,16
; .mov_ptn2 2'(= *{ a2◂ [ a12◂ [ a9◂ [ ]{| l |}]]a2◂ [ a13◂ [ {| l |}]]} ) ⊢ { 8'(= a2◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) 9'(= a2◂ [ a13◂ [ {| l |}]] ) }
; .mov_ptn 2'(= *{ a2◂ [ a12◂ [ a9◂ [ ]{| l |}]]a2◂ [ a13◂ [ {| l |}]]} ) ⊢ { 8'(= a2◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) 9'(= a2◂ [ a13◂ [ {| l |}]] ) }
	mov rdi,r8
	mov rdi,QWORD [rdi+8+8*0]
	mov r10,rdi
	mov QWORD [rsp-8+8*2],r10
	mov rdi,r8
	mov rdi,QWORD [rdi+8+8*1]
	mov r11,rdi
	mov QWORD [rsp-8+8*1],r11
	jmp LB_2206
LB_2205:
	add rsp,0
	pop rdi
	pop r9 
	pop r14
	pop r13
	ret
LB_2206:
	jmp LB_2210
LB_2209:
	add r14,1 
LB_2210:
	cmp r14,r9
	jge LB_2211
	JZ_SPC BYTE [r13+8+r14], LB_2209
LB_2211
	call GRM_231
	cmp BYTE [r8+6],0
	jnz LB_2214
	jmp LB_2215
LB_2214:
	jmp LB_2212
LB_2215:
	sub rsp,8
	mov r8,[r8+8]
; .mov_ptn2 2'(= a2◂ [ a16◂ [ a9◂ [ ]]] ) ⊢ 10'(= a2◂ [ a16◂ [ a9◂ [ ]]] )
; .mov_ptn 2'(= a2◂ [ a16◂ [ a9◂ [ ]]] ) ⊢ 10'(= a2◂ [ a16◂ [ a9◂ [ ]]] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_2213
LB_2212:
	add rsp,16
	pop rdi
	pop r9 
	pop r14
	pop r13
	ret
LB_2213:
	mov QWORD [rsp+8*3],r14
	mov r13,QWORD [rsp+16+8*3]
	mov r14,QWORD [rsp+8*3]
	jmp LB_2217
LB_2217
;; rsp=3 , %1644~1'(= r ) %1643~0'(= r ) %1642~10'(= a2◂ [ a16◂ [ a9◂ [ ]]] ) %1641~9'(= a2◂ [ a13◂ [ {| l |}]] ) %1640~8'(= a2◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) 
; #119 { 10'(= a2◂ [ a16◂ [ a9◂ [ ]]] ) 8'(= a2◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) 9'(= a2◂ [ a13◂ [ {| l |}]] ) } ⊢ 3(<4)◂{ 10'(= a2◂ [ a16◂ [ a9◂ [ ]]] ) 8'(= a2◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) 9'(= a2◂ [ a13◂ [ {| l |}]] ) }
;; rsp=3 , %1645~3(<4)◂{ 10'(= a2◂ [ a16◂ [ a9◂ [ ]]] ) 8'(= a2◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) 9'(= a2◂ [ a13◂ [ {| l |}]] ) } %1644~1'(= r ) %1643~0'(= r ) 
; #22 3(<4)◂{ 10'(= a2◂ [ a16◂ [ a9◂ [ ]]] ) 8'(= a2◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) 9'(= a2◂ [ a13◂ [ {| l |}]] ) } ⊢ 0(<2)◂3(<4)◂{ 10'(= a2◂ [ a16◂ [ a9◂ [ ]]] ) 8'(= a2◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) 9'(= a2◂ [ a13◂ [ {| l |}]] ) }
;; rsp=3 , %1646~0(<2)◂3(<4)◂{ 10'(= a2◂ [ a16◂ [ a9◂ [ ]]] ) 8'(= a2◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) 9'(= a2◂ [ a13◂ [ {| l |}]] ) } %1644~1'(= r ) %1643~0'(= r ) 
; ∎ 0(<2)◂3(<4)◂{ 10'(= a2◂ [ a16◂ [ a9◂ [ ]]] ) 8'(= a2◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) 9'(= a2◂ [ a13◂ [ {| l |}]] ) }
; .dlt.ptn 1'(= r )
; .dlt.ptn 0'(= r )
; .mov_ptn2 0(<2)◂3(<4)◂{ 10'(= a2◂ [ a16◂ [ a9◂ [ ]]] ) 8'(= a2◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) 9'(= a2◂ [ a13◂ [ {| l |}]] ) } ⊢ 2'(= a3◂ [ a19◂ [ a9◂ [ ]{| l |}]] )
; .mov_ptn 0(<2)◂3(<4)◂{ 10'(= a2◂ [ a16◂ [ a9◂ [ ]]] ) 8'(= a2◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) 9'(= a2◂ [ a13◂ [ {| l |}]] ) } ⊢ 2'(= a3◂ [ a19◂ [ a9◂ [ ]{| l |}]] )
	mov rax,[SS_RCD_3_TOP]
	mov rsi,[rax] 
	mov QWORD [SS_RCD_3_TOP],rsi
	mov QWORD [rax],0
	mov r13,rax
	mov rax,QWORD [rsp-8+8*1]
	mov QWORD [r13+8+8*0],rax
	mov rax,QWORD [rsp-8+8*3]
	mov QWORD [r13+8+8*1],rax
	mov rax,QWORD [rsp-8+8*2]
	mov QWORD [r13+8+8*2],rax
	mov rax,r13
	mov BYTE [rax+6],3
	mov rdi,rax
	mov rax,r15
	mov r15,QWORD [r15] 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,24
	jmp LB_2216
LB_2216:
	cmp BYTE [r8+6],0
	jnz LB_2192
	pop r14
	pop r9
	add rsp,8
	pop r13
	ret
LB_2192:
	mov r9,QWORD [rsp+8]
	mov r14,QWORD [rsp+16]
	mov r13,QWORD [rsp+24]
	jmp LB_2220
LB_2219:
	add r14,1 
LB_2220:
	cmp r14,r9
	jge LB_2221
	JZ_SPC BYTE [r13+8+r14], LB_2219
LB_2221
	call GRM_190
	cmp BYTE [r8+6],0
	jnz LB_2224
	jmp LB_2225
LB_2224:
	jmp LB_2222
LB_2225:
	sub rsp,8
	mov r8,[r8+8]
; .mov_ptn2 2'(= a11◂ [ a9◂ [ ]] ) ⊢ 8'(= a11◂ [ a9◂ [ ]] )
; .mov_ptn 2'(= a11◂ [ a9◂ [ ]] ) ⊢ 8'(= a11◂ [ a9◂ [ ]] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_2223
LB_2222:
	add rsp,0
	jmp LB_2218
LB_2223:
	jmp LB_2227
LB_2226:
	add r14,1 
LB_2227:
	cmp r14,r9
	jge LB_2228
	JZ_SPC BYTE [r13+8+r14], LB_2226
LB_2228
	lea rax,[r14+1]
	cmp rax,r9
	jg LB_2231
	jmp LB_2232
LB_2231:
	mov r8,unt_1
	jmp LB_2229
LB_2232:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],95
	jnz LB_2233
	jmp LB_2234
LB_2233:
	mov r8,unt_1
	jmp LB_2229
LB_2234:
	add r14,1
	jmp LB_2230
LB_2229:
	add rsp,8
	jmp LB_2218
LB_2230:
	jmp LB_2236
LB_2235:
	add r14,1 
LB_2236:
	cmp r14,r9
	jge LB_2237
	JZ_SPC BYTE [r13+8+r14], LB_2235
LB_2237
	lea rax,[r14+3]
	cmp rax,r9
	jg LB_2240
	jmp LB_2241
LB_2240:
	mov r8,unt_1
	jmp LB_2238
LB_2241:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],226
	jnz LB_2242
	cmp BYTE [rdi+1],138
	jnz LB_2242
	cmp BYTE [rdi+2],162
	jnz LB_2242
	jmp LB_2243
LB_2242:
	mov r8,unt_1
	jmp LB_2238
LB_2243:
	add r14,3
	jmp LB_2239
LB_2238:
	add rsp,8
	jmp LB_2218
LB_2239:
	jmp LB_2245
LB_2244:
	add r14,1 
LB_2245:
	cmp r14,r9
	jge LB_2246
	JZ_SPC BYTE [r13+8+r14], LB_2244
LB_2246
	call GRM_205
	cmp BYTE [r8+6],0
	jnz LB_2249
	jmp LB_2250
LB_2249:
	jmp LB_2247
LB_2250:
	sub rsp,8
	mov r8,[r8+8]
; .mov_ptn2 2'(= a8◂ [ a13◂ [ {| l |}]] ) ⊢ 9'(= a8◂ [ a13◂ [ {| l |}]] )
; .mov_ptn 2'(= a8◂ [ a13◂ [ {| l |}]] ) ⊢ 9'(= a8◂ [ a13◂ [ {| l |}]] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_2248
LB_2247:
	add rsp,8
	jmp LB_2218
LB_2248:
	mov QWORD [rsp+8*2],r14
	mov r13,QWORD [rsp+16+8*2]
	mov r14,QWORD [rsp+8*2]
	jmp LB_2252
LB_2252
;; rsp=2 , %1650~1'(= r ) %1649~0'(= r ) %1648~9'(= a8◂ [ a13◂ [ {| l |}]] ) %1647~8'(= a11◂ [ a9◂ [ ]] ) 
; #20 { } ⊢ 1(<2)◂{ }
;; rsp=2 , %1651~1(<2)◂{ } %1650~1'(= r ) %1649~0'(= r ) %1648~9'(= a8◂ [ a13◂ [ {| l |}]] ) %1647~8'(= a11◂ [ a9◂ [ ]] ) 
; #79 1(<2)◂{ } ⊢ 0(<2)◂1(<2)◂{ }
;; rsp=2 , %1652~0(<2)◂1(<2)◂{ } %1650~1'(= r ) %1649~0'(= r ) %1648~9'(= a8◂ [ a13◂ [ {| l |}]] ) %1647~8'(= a11◂ [ a9◂ [ ]] ) 
; #120 { 8'(= a11◂ [ a9◂ [ ]] ) 0(<2)◂1(<2)◂{ } 9'(= a8◂ [ a13◂ [ {| l |}]] ) } ⊢ 2(<4)◂{ 8'(= a11◂ [ a9◂ [ ]] ) 0(<2)◂1(<2)◂{ } 9'(= a8◂ [ a13◂ [ {| l |}]] ) }
;; rsp=2 , %1653~2(<4)◂{ 8'(= a11◂ [ a9◂ [ ]] ) 0(<2)◂1(<2)◂{ } 9'(= a8◂ [ a13◂ [ {| l |}]] ) } %1650~1'(= r ) %1649~0'(= r ) 
; #22 2(<4)◂{ 8'(= a11◂ [ a9◂ [ ]] ) 0(<2)◂1(<2)◂{ } 9'(= a8◂ [ a13◂ [ {| l |}]] ) } ⊢ 0(<2)◂2(<4)◂{ 8'(= a11◂ [ a9◂ [ ]] ) 0(<2)◂1(<2)◂{ } 9'(= a8◂ [ a13◂ [ {| l |}]] ) }
;; rsp=2 , %1654~0(<2)◂2(<4)◂{ 8'(= a11◂ [ a9◂ [ ]] ) 0(<2)◂1(<2)◂{ } 9'(= a8◂ [ a13◂ [ {| l |}]] ) } %1650~1'(= r ) %1649~0'(= r ) 
; ∎ 0(<2)◂2(<4)◂{ 8'(= a11◂ [ a9◂ [ ]] ) 0(<2)◂1(<2)◂{ } 9'(= a8◂ [ a13◂ [ {| l |}]] ) }
; .dlt.ptn 1'(= r )
; .dlt.ptn 0'(= r )
; .mov_ptn2 0(<2)◂2(<4)◂{ 8'(= a11◂ [ a9◂ [ ]] ) 0(<2)◂1(<2)◂{ } 9'(= a8◂ [ a13◂ [ {| l |}]] ) } ⊢ 2'(= a3◂ [ a19◂ [ a9◂ [ ]{| l |}]] )
; .mov_ptn 0(<2)◂2(<4)◂{ 8'(= a11◂ [ a9◂ [ ]] ) 0(<2)◂1(<2)◂{ } 9'(= a8◂ [ a13◂ [ {| l |}]] ) } ⊢ 2'(= a3◂ [ a19◂ [ a9◂ [ ]{| l |}]] )
	mov rax,[SS_RCD_3_TOP]
	mov rsi,[rax] 
	mov QWORD [SS_RCD_3_TOP],rsi
	mov QWORD [rax],0
	mov r13,rax
	mov rax,QWORD [rsp-8+8*2]
	mov QWORD [r13+8+8*0],rax
	mov rax,unt 
	mov rax,unt_1
	mov rdi,rax
	mov rax,r15
	mov r15,QWORD [r15] 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov QWORD [r13+8+8*1],rax
	mov rax,QWORD [rsp-8+8*1]
	mov QWORD [r13+8+8*2],rax
	mov rax,r13
	mov BYTE [rax+6],2
	mov rdi,rax
	mov rax,r15
	mov r15,QWORD [r15] 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,16
	jmp LB_2251
LB_2251:
	cmp BYTE [r8+6],0
	jnz LB_2218
	pop r14
	pop r9
	add rsp,8
	pop r13
	ret
LB_2218:
	pop rdi
	pop r9 
	pop r14
	pop r13
	ret
ETR_233:
	mov r9,0x0000_ffff_ffff_ffff
	and r9,[r13]
	call GRM_233
	ret
GRM_233:
	sub rsp,32
	mov QWORD [rsp+24],r13
	mov QWORD [rsp+16],r14 
	mov QWORD [rsp+8],r9
	jmp LB_2255
LB_2254:
	add r14,1 
LB_2255:
	cmp r14,r9
	jge LB_2256
	JZ_SPC BYTE [r13+8+r14], LB_2254
LB_2256
	call GRM_187
	cmp BYTE [r8+6],0
	jnz LB_2259
	jmp LB_2260
LB_2259:
	jmp LB_2257
LB_2260:
; .mov_ptn2 2'(= *{ } ) ⊢ { }
; .mov_ptn 2'(= *{ } ) ⊢ { }
	jmp LB_2258
LB_2257:
	add rsp,0
	jmp LB_2253
LB_2258:
	jmp LB_2262
LB_2261:
	add r14,1 
LB_2262:
	cmp r14,r9
	jge LB_2263
	JZ_SPC BYTE [r13+8+r14], LB_2261
LB_2263
	lea rax,[r14+3]
	cmp rax,r9
	jg LB_2266
	jmp LB_2267
LB_2266:
	mov r8,unt_1
	jmp LB_2264
LB_2267:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],226
	jnz LB_2268
	cmp BYTE [rdi+1],138
	jnz LB_2268
	cmp BYTE [rdi+2],162
	jnz LB_2268
	jmp LB_2269
LB_2268:
	mov r8,unt_1
	jmp LB_2264
LB_2269:
	add r14,3
	jmp LB_2265
LB_2264:
	add rsp,0
	pop rdi
	pop r9 
	pop r14
	pop r13
	ret
LB_2265:
	jmp LB_2271
LB_2270:
	add r14,1 
LB_2271:
	cmp r14,r9
	jge LB_2272
	JZ_SPC BYTE [r13+8+r14], LB_2270
LB_2272
	call GRM_209
	cmp BYTE [r8+6],0
	jnz LB_2275
	jmp LB_2276
LB_2275:
	jmp LB_2273
LB_2276:
	sub rsp,8
	mov r8,[r8+8]
; .mov_ptn2 2'(= a13◂ [ {| l |}] ) ⊢ 8'(= a13◂ [ {| l |}] )
; .mov_ptn 2'(= a13◂ [ {| l |}] ) ⊢ 8'(= a13◂ [ {| l |}] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_2274
LB_2273:
	add rsp,0
	pop rdi
	pop r9 
	pop r14
	pop r13
	ret
LB_2274:
	mov QWORD [rsp+8*1],r14
	mov r13,QWORD [rsp+16+8*1]
	mov r14,QWORD [rsp+8*1]
	jmp LB_2278
LB_2278
;; rsp=1 , %1658~1'(= r ) %1657~0'(= r ) %1656~8'(= a13◂ [ {| l |}] ) %1655~{ } 
; #20 { } ⊢ 1(<2)◂{ }
;; rsp=1 , %1659~1(<2)◂{ } %1658~1'(= r ) %1657~0'(= r ) %1656~8'(= a13◂ [ {| l |}] ) %1655~{ } 
; #20 { } ⊢ 1(<2)◂{ }
;; rsp=1 , %1660~1(<2)◂{ } %1659~1(<2)◂{ } %1658~1'(= r ) %1657~0'(= r ) %1656~8'(= a13◂ [ {| l |}] ) %1655~{ } 
; #21 { 8'(= a13◂ [ {| l |}] ) 1(<2)◂{ } } ⊢ 0(<2)◂{ 8'(= a13◂ [ {| l |}] ) 1(<2)◂{ } }
;; rsp=1 , %1661~0(<2)◂{ 8'(= a13◂ [ {| l |}] ) 1(<2)◂{ } } %1659~1(<2)◂{ } %1658~1'(= r ) %1657~0'(= r ) %1655~{ } 
; #22 { 1(<2)◂{ } 0(<2)◂{ 8'(= a13◂ [ {| l |}] ) 1(<2)◂{ } } } ⊢ 0(<2)◂{ 1(<2)◂{ } 0(<2)◂{ 8'(= a13◂ [ {| l |}] ) 1(<2)◂{ } } }
;; rsp=1 , %1662~0(<2)◂{ 1(<2)◂{ } 0(<2)◂{ 8'(= a13◂ [ {| l |}] ) 1(<2)◂{ } } } %1658~1'(= r ) %1657~0'(= r ) %1655~{ } 
; ∎ 0(<2)◂{ 1(<2)◂{ } 0(<2)◂{ 8'(= a13◂ [ {| l |}] ) 1(<2)◂{ } } }
; .dlt.ptn 1'(= r )
; .dlt.ptn 0'(= r )
; .dlt.ptn { }
; .mov_ptn2 0(<2)◂{ 1(<2)◂{ } 0(<2)◂{ 8'(= a13◂ [ {| l |}] ) 1(<2)◂{ } } } ⊢ 2'(= a3◂ [ *{ a2◂ [ a12◂ [ a9◂ [ ]{| l |}]]a2◂ [ a13◂ [ {| l |}]]}] )
; .mov_ptn 0(<2)◂{ 1(<2)◂{ } 0(<2)◂{ 8'(= a13◂ [ {| l |}] ) 1(<2)◂{ } } } ⊢ 2'(= a3◂ [ *{ a2◂ [ a12◂ [ a9◂ [ ]{| l |}]]a2◂ [ a13◂ [ {| l |}]]}] )
	mov rax,[SS_RCD_2_TOP]
	mov rsi,[rax] 
	mov QWORD [SS_RCD_2_TOP],rsi
	mov QWORD [rax],0
	mov r13,rax
	mov rax,unt 
	mov rax,unt_1
	mov QWORD [r13+8+8*0],rax
	mov rax,[SS_RCD_2_TOP]
	mov rsi,[rax] 
	mov QWORD [SS_RCD_2_TOP],rsi
	mov QWORD [rax],0
	mov r14,rax
	mov rax,QWORD [rsp-8+8*1]
	mov QWORD [r14+8+8*0],rax
	mov rax,unt 
	mov rax,unt_1
	mov QWORD [r14+8+8*1],rax
	mov rax,r14
	mov BYTE [rax+6],0
	mov QWORD [r13+8+8*1],rax
	mov rax,r13
	mov BYTE [rax+6],0
	mov r8,rax
	add rsp,8
	jmp LB_2277
LB_2277:
	cmp BYTE [r8+6],0
	jnz LB_2253
	pop r14
	pop r9
	add rsp,8
	pop r13
	ret
LB_2253:
	mov r9,QWORD [rsp+8]
	mov r14,QWORD [rsp+16]
	mov r13,QWORD [rsp+24]
	jmp LB_2281
LB_2280:
	add r14,1 
LB_2281:
	cmp r14,r9
	jge LB_2282
	JZ_SPC BYTE [r13+8+r14], LB_2280
LB_2282
	call GRM_204
	cmp BYTE [r8+6],0
	jnz LB_2285
	jmp LB_2286
LB_2285:
	jmp LB_2283
LB_2286:
	sub rsp,8
	mov r8,[r8+8]
; .mov_ptn2 2'(= a12◂ [ a9◂ [ ]{| l |}] ) ⊢ 8'(= a12◂ [ a9◂ [ ]{| l |}] )
; .mov_ptn 2'(= a12◂ [ a9◂ [ ]{| l |}] ) ⊢ 8'(= a12◂ [ a9◂ [ ]{| l |}] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_2284
LB_2283:
	add rsp,0
	jmp LB_2279
LB_2284:
	jmp LB_2288
LB_2287:
	add r14,1 
LB_2288:
	cmp r14,r9
	jge LB_2289
	JZ_SPC BYTE [r13+8+r14], LB_2287
LB_2289
	call GRM_203
	cmp BYTE [r8+6],0
	jnz LB_2292
	jmp LB_2293
LB_2292:
	jmp LB_2290
LB_2293:
	sub rsp,8
	mov r8,[r8+8]
; .mov_ptn2 2'(= a2◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) ⊢ 9'(= a2◂ [ a12◂ [ a9◂ [ ]{| l |}]] )
; .mov_ptn 2'(= a2◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) ⊢ 9'(= a2◂ [ a12◂ [ a9◂ [ ]{| l |}]] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_2291
LB_2290:
	add rsp,8
	jmp LB_2279
LB_2291:
	jmp LB_2295
LB_2294:
	add r14,1 
LB_2295:
	cmp r14,r9
	jge LB_2296
	JZ_SPC BYTE [r13+8+r14], LB_2294
LB_2296
	lea rax,[r14+3]
	cmp rax,r9
	jg LB_2299
	jmp LB_2300
LB_2299:
	mov r8,unt_1
	jmp LB_2297
LB_2300:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],226
	jnz LB_2301
	cmp BYTE [rdi+1],138
	jnz LB_2301
	cmp BYTE [rdi+2],162
	jnz LB_2301
	jmp LB_2302
LB_2301:
	mov r8,unt_1
	jmp LB_2297
LB_2302:
	add r14,3
	jmp LB_2298
LB_2297:
	add rsp,16
	jmp LB_2279
LB_2298:
	jmp LB_2304
LB_2303:
	add r14,1 
LB_2304:
	cmp r14,r9
	jge LB_2305
	JZ_SPC BYTE [r13+8+r14], LB_2303
LB_2305
	call GRM_209
	cmp BYTE [r8+6],0
	jnz LB_2308
	jmp LB_2309
LB_2308:
	jmp LB_2306
LB_2309:
	sub rsp,8
	mov r8,[r8+8]
; .mov_ptn2 2'(= a13◂ [ {| l |}] ) ⊢ 10'(= a13◂ [ {| l |}] )
; .mov_ptn 2'(= a13◂ [ {| l |}] ) ⊢ 10'(= a13◂ [ {| l |}] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_2307
LB_2306:
	add rsp,16
	jmp LB_2279
LB_2307:
	jmp LB_2311
LB_2310:
	add r14,1 
LB_2311:
	cmp r14,r9
	jge LB_2312
	JZ_SPC BYTE [r13+8+r14], LB_2310
LB_2312
	call GRM_208
	cmp BYTE [r8+6],0
	jnz LB_2315
	jmp LB_2316
LB_2315:
	jmp LB_2313
LB_2316:
	sub rsp,8
	mov r8,[r8+8]
; .mov_ptn2 2'(= a2◂ [ a13◂ [ {| l |}]] ) ⊢ 11'(= a2◂ [ a13◂ [ {| l |}]] )
; .mov_ptn 2'(= a2◂ [ a13◂ [ {| l |}]] ) ⊢ 11'(= a2◂ [ a13◂ [ {| l |}]] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_2314
LB_2313:
	add rsp,24
	jmp LB_2279
LB_2314:
	mov QWORD [rsp+8*4],r14
	mov r13,QWORD [rsp+16+8*4]
	mov r14,QWORD [rsp+8*4]
	jmp LB_2318
LB_2318
;; rsp=4 , %1668~1'(= r ) %1667~0'(= r ) %1666~11'(= a2◂ [ a13◂ [ {| l |}]] ) %1665~10'(= a13◂ [ {| l |}] ) %1664~9'(= a2◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) %1663~8'(= a12◂ [ a9◂ [ ]{| l |}] ) 
; #21 { 8'(= a12◂ [ a9◂ [ ]{| l |}] ) 9'(= a2◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) } ⊢ 0(<2)◂{ 8'(= a12◂ [ a9◂ [ ]{| l |}] ) 9'(= a2◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) }
;; rsp=4 , %1669~0(<2)◂{ 8'(= a12◂ [ a9◂ [ ]{| l |}] ) 9'(= a2◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) } %1668~1'(= r ) %1667~0'(= r ) %1666~11'(= a2◂ [ a13◂ [ {| l |}]] ) %1665~10'(= a13◂ [ {| l |}] ) 
; #21 { 10'(= a13◂ [ {| l |}] ) 11'(= a2◂ [ a13◂ [ {| l |}]] ) } ⊢ 0(<2)◂{ 10'(= a13◂ [ {| l |}] ) 11'(= a2◂ [ a13◂ [ {| l |}]] ) }
;; rsp=4 , %1670~0(<2)◂{ 10'(= a13◂ [ {| l |}] ) 11'(= a2◂ [ a13◂ [ {| l |}]] ) } %1669~0(<2)◂{ 8'(= a12◂ [ a9◂ [ ]{| l |}] ) 9'(= a2◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) } %1668~1'(= r ) %1667~0'(= r ) 
; #22 { 0(<2)◂{ 8'(= a12◂ [ a9◂ [ ]{| l |}] ) 9'(= a2◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) } 0(<2)◂{ 10'(= a13◂ [ {| l |}] ) 11'(= a2◂ [ a13◂ [ {| l |}]] ) } } ⊢ 0(<2)◂{ 0(<2)◂{ 8'(= a12◂ [ a9◂ [ ]{| l |}] ) 9'(= a2◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) } 0(<2)◂{ 10'(= a13◂ [ {| l |}] ) 11'(= a2◂ [ a13◂ [ {| l |}]] ) } }
;; rsp=4 , %1671~0(<2)◂{ 0(<2)◂{ 8'(= a12◂ [ a9◂ [ ]{| l |}] ) 9'(= a2◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) } 0(<2)◂{ 10'(= a13◂ [ {| l |}] ) 11'(= a2◂ [ a13◂ [ {| l |}]] ) } } %1668~1'(= r ) %1667~0'(= r ) 
; ∎ 0(<2)◂{ 0(<2)◂{ 8'(= a12◂ [ a9◂ [ ]{| l |}] ) 9'(= a2◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) } 0(<2)◂{ 10'(= a13◂ [ {| l |}] ) 11'(= a2◂ [ a13◂ [ {| l |}]] ) } }
; .dlt.ptn 1'(= r )
; .dlt.ptn 0'(= r )
; .mov_ptn2 0(<2)◂{ 0(<2)◂{ 8'(= a12◂ [ a9◂ [ ]{| l |}] ) 9'(= a2◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) } 0(<2)◂{ 10'(= a13◂ [ {| l |}] ) 11'(= a2◂ [ a13◂ [ {| l |}]] ) } } ⊢ 2'(= a3◂ [ *{ a2◂ [ a12◂ [ a9◂ [ ]{| l |}]]a2◂ [ a13◂ [ {| l |}]]}] )
; .mov_ptn 0(<2)◂{ 0(<2)◂{ 8'(= a12◂ [ a9◂ [ ]{| l |}] ) 9'(= a2◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) } 0(<2)◂{ 10'(= a13◂ [ {| l |}] ) 11'(= a2◂ [ a13◂ [ {| l |}]] ) } } ⊢ 2'(= a3◂ [ *{ a2◂ [ a12◂ [ a9◂ [ ]{| l |}]]a2◂ [ a13◂ [ {| l |}]]}] )
	mov rax,[SS_RCD_2_TOP]
	mov rsi,[rax] 
	mov QWORD [SS_RCD_2_TOP],rsi
	mov QWORD [rax],0
	mov r13,rax
	mov rax,[SS_RCD_2_TOP]
	mov rsi,[rax] 
	mov QWORD [SS_RCD_2_TOP],rsi
	mov QWORD [rax],0
	mov r14,rax
	mov rax,QWORD [rsp-8+8*4]
	mov QWORD [r14+8+8*0],rax
	mov rax,QWORD [rsp-8+8*3]
	mov QWORD [r14+8+8*1],rax
	mov rax,r14
	mov BYTE [rax+6],0
	mov QWORD [r13+8+8*0],rax
	mov rax,[SS_RCD_2_TOP]
	mov rsi,[rax] 
	mov QWORD [SS_RCD_2_TOP],rsi
	mov QWORD [rax],0
	mov r14,rax
	mov rax,QWORD [rsp-8+8*2]
	mov QWORD [r14+8+8*0],rax
	mov rax,QWORD [rsp-8+8*1]
	mov QWORD [r14+8+8*1],rax
	mov rax,r14
	mov BYTE [rax+6],0
	mov QWORD [r13+8+8*1],rax
	mov rax,r13
	mov BYTE [rax+6],0
	mov r8,rax
	add rsp,32
	jmp LB_2317
LB_2317:
	cmp BYTE [r8+6],0
	jnz LB_2279
	pop r14
	pop r9
	add rsp,8
	pop r13
	ret
LB_2279:
	pop rdi
	pop r9 
	pop r14
	pop r13
	ret
ETR_234:
	mov r9,0x0000_ffff_ffff_ffff
	and r9,[r13]
	call GRM_234
	ret
GRM_234:
	sub rsp,32
	mov QWORD [rsp+24],r13
	mov QWORD [rsp+16],r14 
	mov QWORD [rsp+8],r9
	jmp LB_2321
LB_2320:
	add r14,1 
LB_2321:
	cmp r14,r9
	jge LB_2322
	JZ_SPC BYTE [r13+8+r14], LB_2320
LB_2322
	call GRM_217
	cmp BYTE [r8+6],0
	jnz LB_2325
	jmp LB_2326
LB_2325:
	jmp LB_2323
LB_2326:
	sub rsp,8
	mov r8,[r8+8]
; .mov_ptn2 2'(= a35◂ [ *{ }] ) ⊢ 8'(= a35◂ [ *{ }] )
; .mov_ptn 2'(= a35◂ [ *{ }] ) ⊢ 8'(= a35◂ [ *{ }] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_2324
LB_2323:
	add rsp,0
	jmp LB_2319
LB_2324:
	jmp LB_2328
LB_2327:
	add r14,1 
LB_2328:
	cmp r14,r9
	jge LB_2329
	JZ_SPC BYTE [r13+8+r14], LB_2327
LB_2329
	lea rax,[r14+4]
	cmp rax,r9
	jg LB_2332
	jmp LB_2333
LB_2332:
	mov r8,unt_1
	jmp LB_2330
LB_2333:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],226
	jnz LB_2334
	cmp BYTE [rdi+1],136
	jnz LB_2334
	cmp BYTE [rdi+2],142
	jnz LB_2334
	cmp BYTE [rdi+3],124
	jnz LB_2334
	jmp LB_2335
LB_2334:
	mov r8,unt_1
	jmp LB_2330
LB_2335:
	add r14,4
	jmp LB_2331
LB_2330:
	add rsp,8
	jmp LB_2319
LB_2331:
	mov QWORD [rsp+8*1],r14
	mov r13,QWORD [rsp+16+8*1]
	mov r14,QWORD [rsp+8*1]
	jmp LB_2337
LB_2337
;; rsp=1 , %1674~1'(= r ) %1673~0'(= r ) %1672~8'(= a35◂ [ *{ }] ) 
; #125 0'(= r ) ⊢ 6(<7)◂0'(= r )
;; rsp=1 , %1675~6(<7)◂0'(= r ) %1674~1'(= r ) %1672~8'(= a35◂ [ *{ }] ) 
; #193 6(<7)◂0'(= r ) ⊢ 0(<2)◂6(<7)◂0'(= r )
;; rsp=1 , %1676~0(<2)◂6(<7)◂0'(= r ) %1674~1'(= r ) %1672~8'(= a35◂ [ *{ }] ) 
; #22 0(<2)◂6(<7)◂0'(= r ) ⊢ 0(<2)◂0(<2)◂6(<7)◂0'(= r )
;; rsp=1 , %1677~0(<2)◂0(<2)◂6(<7)◂0'(= r ) %1674~1'(= r ) %1672~8'(= a35◂ [ *{ }] ) 
; ∎ 0(<2)◂0(<2)◂6(<7)◂0'(= r )
; .dlt.ptn 1'(= r )
; .dlt.ptn 8'(= a35◂ [ *{ }] )
;	.dlt adt ⊢ _  
; .mov_ptn2 0(<2)◂0(<2)◂6(<7)◂0'(= r ) ⊢ 2'(= a3◂ [ a35◂ [ a17◂ [ a9◂ [ ]{| l |}]]] )
; .mov_ptn 0(<2)◂0(<2)◂6(<7)◂0'(= r ) ⊢ 2'(= a3◂ [ a35◂ [ a17◂ [ a9◂ [ ]{| l |}]]] )
	mov rax,r13
	mov rdi,rax
	mov rax,r15
	mov r15,QWORD [r15] 
	mov QWORD [rax],0
	mov BYTE [rax+6],6
	mov QWORD [rax+8],rdi
	mov rdi,rax
	mov rax,r15
	mov r15,QWORD [r15] 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov rdi,rax
	mov rax,r15
	mov r15,QWORD [r15] 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,8
	jmp LB_2336
LB_2336:
	cmp BYTE [r8+6],0
	jnz LB_2319
	pop r14
	pop r9
	add rsp,8
	pop r13
	ret
LB_2319:
	mov r9,QWORD [rsp+8]
	mov r14,QWORD [rsp+16]
	mov r13,QWORD [rsp+24]
	jmp LB_2340
LB_2339:
	add r14,1 
LB_2340:
	cmp r14,r9
	jge LB_2341
	JZ_SPC BYTE [r13+8+r14], LB_2339
LB_2341
	call GRM_217
	cmp BYTE [r8+6],0
	jnz LB_2344
	jmp LB_2345
LB_2344:
	jmp LB_2342
LB_2345:
	sub rsp,8
	mov r8,[r8+8]
; .mov_ptn2 2'(= a35◂ [ *{ }] ) ⊢ 8'(= a35◂ [ *{ }] )
; .mov_ptn 2'(= a35◂ [ *{ }] ) ⊢ 8'(= a35◂ [ *{ }] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_2343
LB_2342:
	add rsp,0
	jmp LB_2338
LB_2343:
	jmp LB_2347
LB_2346:
	add r14,1 
LB_2347:
	cmp r14,r9
	jge LB_2348
	JZ_SPC BYTE [r13+8+r14], LB_2346
LB_2348
	lea rax,[r14+3]
	cmp rax,r9
	jg LB_2351
	jmp LB_2352
LB_2351:
	mov r8,unt_1
	jmp LB_2349
LB_2352:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],226
	jnz LB_2353
	cmp BYTE [rdi+1],136
	jnz LB_2353
	cmp BYTE [rdi+2],142
	jnz LB_2353
	jmp LB_2354
LB_2353:
	mov r8,unt_1
	jmp LB_2349
LB_2354:
	add r14,3
	jmp LB_2350
LB_2349:
	add rsp,8
	jmp LB_2338
LB_2350:
	sub rsp,32
	mov QWORD [rsp+24],r13
	mov QWORD [rsp+16],r14 
	mov QWORD [rsp+8],r9
	jmp LB_2358
LB_2357:
	add r14,1 
LB_2358:
	cmp r14,r9
	jge LB_2359
	JZ_SPC BYTE [r13+8+r14], LB_2357
LB_2359
	call GRM_201
	cmp BYTE [r8+6],0
	jnz LB_2362
	jmp LB_2363
LB_2362:
	jmp LB_2360
LB_2363:
	sub rsp,8
	mov r8,[r8+8]
; .mov_ptn2 2'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) ⊢ 8'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] )
; .mov_ptn 2'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) ⊢ 8'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_2361
LB_2360:
	add rsp,0
	jmp LB_2356
LB_2361:
	mov QWORD [rsp+8*1],r14
	mov r13,QWORD [rsp+16+8*1]
	mov r14,QWORD [rsp+8*1]
	jmp LB_2365
LB_2365
;; rsp=1 , %1683~1'(= r ) %1682~0'(= r ) %1681~8'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) 
; #126 8'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) ⊢ 5(<7)◂8'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] )
;; rsp=1 , %1684~5(<7)◂8'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) %1683~1'(= r ) %1682~0'(= r ) 
; #193 5(<7)◂8'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) ⊢ 0(<2)◂5(<7)◂8'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] )
;; rsp=1 , %1685~0(<2)◂5(<7)◂8'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) %1683~1'(= r ) %1682~0'(= r ) 
; #22 0(<2)◂5(<7)◂8'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) ⊢ 0(<2)◂0(<2)◂5(<7)◂8'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] )
;; rsp=1 , %1686~0(<2)◂0(<2)◂5(<7)◂8'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) %1683~1'(= r ) %1682~0'(= r ) 
; ∎ 0(<2)◂0(<2)◂5(<7)◂8'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] )
; .dlt.ptn 1'(= r )
; .dlt.ptn 0'(= r )
; .mov_ptn2 0(<2)◂0(<2)◂5(<7)◂8'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) ⊢ 2'(= a3◂ [ a35◂ [ a17◂ [ a9◂ [ ]{| l |}]]] )
; .mov_ptn 0(<2)◂0(<2)◂5(<7)◂8'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) ⊢ 2'(= a3◂ [ a35◂ [ a17◂ [ a9◂ [ ]{| l |}]]] )
	mov rax,QWORD [rsp-8+8*1]
	mov rdi,rax
	mov rax,r15
	mov r15,QWORD [r15] 
	mov QWORD [rax],0
	mov BYTE [rax+6],5
	mov QWORD [rax+8],rdi
	mov rdi,rax
	mov rax,r15
	mov r15,QWORD [r15] 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov rdi,rax
	mov rax,r15
	mov r15,QWORD [r15] 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,8
	jmp LB_2364
LB_2364:
	cmp BYTE [r8+6],0
	jnz LB_2356
	pop r14
	pop r9
	add rsp,8
	pop r13
	jmp LB_2355
LB_2356:
	mov r9,QWORD [rsp+8]
	mov r14,QWORD [rsp+16]
	mov r13,QWORD [rsp+24]
	jmp LB_2368
LB_2367:
	add r14,1 
LB_2368:
	cmp r14,r9
	jge LB_2369
	JZ_SPC BYTE [r13+8+r14], LB_2367
LB_2369
	call GRM_220
	cmp BYTE [r8+6],0
	jnz LB_2372
	jmp LB_2373
LB_2372:
	jmp LB_2370
LB_2373:
	sub rsp,16
; .mov_ptn2 2'(= *{ rr} ) ⊢ { 8'(= r ) 9'(= r ) }
; .mov_ptn 2'(= *{ rr} ) ⊢ { 8'(= r ) 9'(= r ) }
	mov rdi,r8
	mov rdi,QWORD [rdi+8+8*0]
	mov r10,rdi
	mov QWORD [rsp-8+8*2],r10
	mov rdi,r8
	mov rdi,QWORD [rdi+8+8*1]
	mov r11,rdi
	mov QWORD [rsp-8+8*1],r11
	jmp LB_2371
LB_2370:
	add rsp,0
	jmp LB_2366
LB_2371:
	mov QWORD [rsp+8*2],r14
	mov r13,QWORD [rsp+16+8*2]
	mov r14,QWORD [rsp+8*2]
	jmp LB_2375
LB_2375
;; rsp=2 , %1689~1'(= r ) %1688~0'(= r ) %1687~{ 8'(= r ) 9'(= r ) } 
	jmp LB_2376
LB_2376:
; $ %[ "lc_code ∎ .. " ] ⊢ %[ "lc_code ∎ .. " ]
;; rsp=2 , %1690~%[ "lc_code ∎ .. " ] %1689~1'(= r ) %1688~0'(= r ) %1687~{ 8'(= r ) 9'(= r ) } 
; #20 { } ⊢ 1(<2)◂{ }
;; rsp=2 , %1691~1(<2)◂{ } %1690~%[ "lc_code ∎ .. " ] %1689~1'(= r ) %1688~0'(= r ) %1687~{ 8'(= r ) 9'(= r ) } 
; #21 { { 0'(= r ) 1'(= r ) %[ "lc_code ∎ .. " ] } 1(<2)◂{ } } ⊢ 0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "lc_code ∎ .. " ] } 1(<2)◂{ } }
;; rsp=2 , %1692~0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "lc_code ∎ .. " ] } 1(<2)◂{ } } %1687~{ 8'(= r ) 9'(= r ) } 
; #192 0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "lc_code ∎ .. " ] } 1(<2)◂{ } } ⊢ 1(<2)◂0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "lc_code ∎ .. " ] } 1(<2)◂{ } }
;; rsp=2 , %1693~1(<2)◂0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "lc_code ∎ .. " ] } 1(<2)◂{ } } %1687~{ 8'(= r ) 9'(= r ) } 
; #22 1(<2)◂0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "lc_code ∎ .. " ] } 1(<2)◂{ } } ⊢ 0(<2)◂1(<2)◂0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "lc_code ∎ .. " ] } 1(<2)◂{ } }
;; rsp=2 , %1694~0(<2)◂1(<2)◂0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "lc_code ∎ .. " ] } 1(<2)◂{ } } %1687~{ 8'(= r ) 9'(= r ) } 
; ∎ 0(<2)◂1(<2)◂0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "lc_code ∎ .. " ] } 1(<2)◂{ } }
; .dlt.ptn { 8'(= r ) 9'(= r ) }
; .mov_ptn2 0(<2)◂1(<2)◂0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "lc_code ∎ .. " ] } 1(<2)◂{ } } ⊢ 2'(= a3◂ [ a35◂ [ a17◂ [ a9◂ [ ]{| l |}]]] )
; .mov_ptn 0(<2)◂1(<2)◂0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "lc_code ∎ .. " ] } 1(<2)◂{ } } ⊢ 2'(= a3◂ [ a35◂ [ a17◂ [ a9◂ [ ]{| l |}]]] )
	mov rax,[SS_RCD_2_TOP]
	mov rsi,[rax] 
	mov QWORD [SS_RCD_2_TOP],rsi
	mov QWORD [rax],0
	mov r9,rax
	mov rax,[SS_RCD_3_TOP]
	mov rsi,[rax] 
	mov QWORD [SS_RCD_3_TOP],rsi
	mov QWORD [rax],0
	mov r10,rax
	mov rax,r13
	mov QWORD [r10+8+8*0],rax
	mov rax,r14
	mov QWORD [r10+8+8*1],rax
	mov rsi,1  
	mov rdi,24
	xor rax,rax 
	C_CALL_SF calloc
	mov QWORD [rax],15
	mov BYTE [rax+8+0],108
	mov BYTE [rax+8+1],99
	mov BYTE [rax+8+2],95
	mov BYTE [rax+8+3],99
	mov BYTE [rax+8+4],111
	mov BYTE [rax+8+5],100
	mov BYTE [rax+8+6],101
	mov BYTE [rax+8+7],32
	mov BYTE [rax+8+8],226
	mov BYTE [rax+8+9],136
	mov BYTE [rax+8+10],142
	mov BYTE [rax+8+11],32
	mov BYTE [rax+8+12],46
	mov BYTE [rax+8+13],46
	mov BYTE [rax+8+14],32
	mov QWORD [r10+8+8*2],rax
	mov rax,r10
	mov QWORD [r9+8+8*0],rax
	mov rax,unt 
	mov rax,unt_1
	mov QWORD [r9+8+8*1],rax
	mov rax,r9
	mov BYTE [rax+6],0
	mov rdi,rax
	mov rax,r15
	mov r15,QWORD [r15] 
	mov QWORD [rax],0
	mov BYTE [rax+6],1
	mov QWORD [rax+8],rdi
	mov rdi,rax
	mov rax,r15
	mov r15,QWORD [r15] 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,16
	jmp LB_2374
LB_2374:
	cmp BYTE [r8+6],0
	jnz LB_2366
	pop r14
	pop r9
	add rsp,8
	pop r13
	jmp LB_2355
LB_2366:
	pop rdi
	pop r9 
	pop r14
	pop r13
	jmp LB_2355
LB_2355:
	cmp BYTE [r8+6],0
	jnz LB_2377
	jmp LB_2378
LB_2377:
	add rsp,8
	add rsp,8
	pop r9 
	pop r14 
	pop r13
	ret
LB_2378:
	mov QWORD [rsp+8*1],r14
	mov r8,[r8+8]
; .mov_ptn2 2'(= a35◂ [ a17◂ [ a9◂ [ ]{| l |}]] ) ⊢ 3'(= a35◂ [ a17◂ [ a9◂ [ ]{| l |}]] )
	mov r10,r9
; .mov_ptn 2'(= a35◂ [ a17◂ [ a9◂ [ ]{| l |}]] ) ⊢ 3'(= a35◂ [ a17◂ [ a9◂ [ ]{| l |}]] )
	mov rax,r8
	mov r9,rax
	mov r13,QWORD [rsp+16+8*1]
	mov r14,QWORD [rsp+8*1]
	jmp LB_2380
LB_2380
;; rsp=1 , %1695~3'(= a35◂ [ a17◂ [ a9◂ [ ]{| l |}]] ) %1680~1'(= r ) %1679~0'(= r ) %1678~8'(= a35◂ [ *{ }] ) 
; #22 3'(= a35◂ [ a17◂ [ a9◂ [ ]{| l |}]] ) ⊢ 0(<2)◂3'(= a35◂ [ a17◂ [ a9◂ [ ]{| l |}]] )
;; rsp=1 , %1696~0(<2)◂3'(= a35◂ [ a17◂ [ a9◂ [ ]{| l |}]] ) %1680~1'(= r ) %1679~0'(= r ) %1678~8'(= a35◂ [ *{ }] ) 
; ∎ 0(<2)◂3'(= a35◂ [ a17◂ [ a9◂ [ ]{| l |}]] )
; .dlt.ptn 1'(= r )
; .dlt.ptn 0'(= r )
; .dlt.ptn 8'(= a35◂ [ *{ }] )
;	.dlt adt ⊢ _  
; .mov_ptn2 0(<2)◂3'(= a35◂ [ a17◂ [ a9◂ [ ]{| l |}]] ) ⊢ 2'(= a3◂ [ a35◂ [ a17◂ [ a9◂ [ ]{| l |}]]] )
; .mov_ptn 0(<2)◂3'(= a35◂ [ a17◂ [ a9◂ [ ]{| l |}]] ) ⊢ 2'(= a3◂ [ a35◂ [ a17◂ [ a9◂ [ ]{| l |}]]] )
	mov rax,r9
	mov rdi,rax
	mov rax,r15
	mov r15,QWORD [r15] 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,8
	jmp LB_2379
LB_2379:
	cmp BYTE [r8+6],0
	jnz LB_2338
	pop r14
	pop r9
	add rsp,8
	pop r13
	ret
LB_2338:
	mov r9,QWORD [rsp+8]
	mov r14,QWORD [rsp+16]
	mov r13,QWORD [rsp+24]
	jmp LB_2383
LB_2382:
	add r14,1 
LB_2383:
	cmp r14,r9
	jge LB_2384
	JZ_LINE_SPC BYTE [r13+8+r14], LB_2382
LB_2384
	call GRM_217
	cmp BYTE [r8+6],0
	jnz LB_2387
	jmp LB_2388
LB_2387:
	jmp LB_2385
LB_2388:
	sub rsp,8
	mov r8,[r8+8]
; .mov_ptn2 2'(= a35◂ [ *{ }] ) ⊢ 8'(= a35◂ [ *{ }] )
; .mov_ptn 2'(= a35◂ [ *{ }] ) ⊢ 8'(= a35◂ [ *{ }] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_2386
LB_2385:
	add rsp,0
	jmp LB_2381
LB_2386:
	jmp LB_2390
LB_2389:
	add r14,1 
LB_2390:
	cmp r14,r9
	jge LB_2391
	JZ_LINE_SPC BYTE [r13+8+r14], LB_2389
LB_2391
	lea rax,[r14+1]
	cmp rax,r9
	jg LB_2394
	jmp LB_2395
LB_2394:
	mov r8,unt_1
	jmp LB_2392
LB_2395:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],94
	jnz LB_2396
	jmp LB_2397
LB_2396:
	mov r8,unt_1
	jmp LB_2392
LB_2397:
	add r14,1
	jmp LB_2393
LB_2392:
	add rsp,8
	jmp LB_2381
LB_2393:
	jmp LB_2399
LB_2398:
	add r14,1 
LB_2399:
	cmp r14,r9
	jge LB_2400
	JZ_LINE_SPC BYTE [r13+8+r14], LB_2398
LB_2400
	call GRM_233
	cmp BYTE [r8+6],0
	jnz LB_2403
	jmp LB_2404
LB_2403:
	jmp LB_2401
LB_2404:
	sub rsp,16
; .mov_ptn2 2'(= *{ a2◂ [ a12◂ [ a9◂ [ ]{| l |}]]a2◂ [ a13◂ [ {| l |}]]} ) ⊢ { 9'(= a2◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) 10'(= a2◂ [ a13◂ [ {| l |}]] ) }
; .mov_ptn 2'(= *{ a2◂ [ a12◂ [ a9◂ [ ]{| l |}]]a2◂ [ a13◂ [ {| l |}]]} ) ⊢ { 9'(= a2◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) 10'(= a2◂ [ a13◂ [ {| l |}]] ) }
	mov rdi,r8
	mov rdi,QWORD [rdi+8+8*0]
	mov r10,rdi
	mov QWORD [rsp-8+8*2],r10
	mov rdi,r8
	mov rdi,QWORD [rdi+8+8*1]
	mov r11,rdi
	mov QWORD [rsp-8+8*1],r11
	jmp LB_2402
LB_2401:
	add rsp,8
	pop rdi
	pop r9 
	pop r14
	pop r13
	ret
LB_2402:
	jmp LB_2406
LB_2405:
	add r14,1 
LB_2406:
	cmp r14,r9
	jge LB_2407
	JZ_LINE_SPC BYTE [r13+8+r14], LB_2405
LB_2407
	lea rax,[r14+1]
	cmp rax,r9
	jg LB_2410
	jmp LB_2411
LB_2410:
	mov r8,unt_1
	jmp LB_2408
LB_2411:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],10
	jnz LB_2412
	jmp LB_2413
LB_2412:
	mov r8,unt_1
	jmp LB_2408
LB_2413:
	add r14,1
	jmp LB_2409
LB_2408:
	add rsp,24
	pop rdi
	pop r9 
	pop r14
	pop r13
	ret
LB_2409:
	jmp LB_2415
LB_2414:
	add r14,1 
LB_2415:
	cmp r14,r9
	jge LB_2416
	JZ_LINE_SPC BYTE [r13+8+r14], LB_2414
LB_2416
	call GRM_231
	cmp BYTE [r8+6],0
	jnz LB_2419
	jmp LB_2420
LB_2419:
	jmp LB_2417
LB_2420:
	sub rsp,8
	mov r8,[r8+8]
; .mov_ptn2 2'(= a2◂ [ a16◂ [ a9◂ [ ]]] ) ⊢ 11'(= a2◂ [ a16◂ [ a9◂ [ ]]] )
; .mov_ptn 2'(= a2◂ [ a16◂ [ a9◂ [ ]]] ) ⊢ 11'(= a2◂ [ a16◂ [ a9◂ [ ]]] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_2418
LB_2417:
	add rsp,24
	pop rdi
	pop r9 
	pop r14
	pop r13
	ret
LB_2418:
	jmp LB_2422
LB_2421:
	add r14,1 
LB_2422:
	cmp r14,r9
	jge LB_2423
	JZ_LINE_SPC BYTE [r13+8+r14], LB_2421
LB_2423
	call GRM_234
	cmp BYTE [r8+6],0
	jnz LB_2426
	jmp LB_2427
LB_2426:
	jmp LB_2424
LB_2427:
	sub rsp,8
	mov r8,[r8+8]
; .mov_ptn2 2'(= a35◂ [ a17◂ [ a9◂ [ ]{| l |}]] ) ⊢ 12'(= a35◂ [ a17◂ [ a9◂ [ ]{| l |}]] )
; .mov_ptn 2'(= a35◂ [ a17◂ [ a9◂ [ ]{| l |}]] ) ⊢ 12'(= a35◂ [ a17◂ [ a9◂ [ ]{| l |}]] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_2425
LB_2424:
	add rsp,32
	pop rdi
	pop r9 
	pop r14
	pop r13
	ret
LB_2425:
	mov QWORD [rsp+8*5],r14
	mov r13,QWORD [rsp+16+8*5]
	mov r14,QWORD [rsp+8*5]
	jmp LB_2429
LB_2431: ; 51 { 0'(= a2◂ [ a16◂ [ a9◂ [ ]]] ) 1'(= a2◂ [ a16◂ [ a9◂ [ ]]] ) } ⊢ 0'(= a2◂ [ a16◂ [ a9◂ [ ]]] ) : ({ _lst◂4627'(=4628'(=_t16◂_t9)) _lst◂_t16◂_t9 }→_lst◂_t16◂_t9)
;; rsp=0 , %116~1'(= a2◂ [ a16◂ [ a9◂ [ ]]] ) %115~0'(= a2◂ [ a16◂ [ a9◂ [ ]]] ) 
;; ?; 1'(= a2◂ [ a16◂ [ a9◂ [ ]]] ) ⊢ 1(<2)◂{ }
	mov rdi,r14
	cmp BYTE [rdi+6],1
	jnz LB_2432
;; rsp=0 , %115~0'(= a2◂ [ a16◂ [ a9◂ [ ]]] ) 
; ∎ 0'(= a2◂ [ a16◂ [ a9◂ [ ]]] )
; .mov_ptn2 0'(= a2◂ [ a16◂ [ a9◂ [ ]]] ) ⊢ 0'(= a2◂ [ a16◂ [ a9◂ [ ]]] )
	ret
LB_2432:
;; ?; 1'(= a2◂ [ a16◂ [ a9◂ [ ]]] ) ⊢ 0(<2)◂{ 2'(= a16◂ [ a9◂ [ ]] ) 3'(= a2◂ [ a16◂ [ a9◂ [ ]]] ) }
	mov rdi,r14
	mov rdi,QWORD [rdi+8+8*0]
	mov r8,rdi
	mov rdi,r14
	mov rdi,QWORD [rdi+8+8*1]
	mov r9,rdi
;; rsp=0 , %118~3'(= a2◂ [ a16◂ [ a9◂ [ ]]] ) %117~2'(= a16◂ [ a9◂ [ ]] ) %115~0'(= a2◂ [ a16◂ [ a9◂ [ ]]] ) 
; #21 { 2'(= a16◂ [ a9◂ [ ]] ) 0'(= a2◂ [ a16◂ [ a9◂ [ ]]] ) } ⊢ 0(<2)◂{ 2'(= a16◂ [ a9◂ [ ]] ) 0'(= a2◂ [ a16◂ [ a9◂ [ ]]] ) }
;; rsp=0 , %119~0(<2)◂{ 2'(= a16◂ [ a9◂ [ ]] ) 0'(= a2◂ [ a16◂ [ a9◂ [ ]]] ) } %118~3'(= a2◂ [ a16◂ [ a9◂ [ ]]] ) 
; rsp_d=0, #51 { 0(<2)◂{ 2'(= a16◂ [ a9◂ [ ]] ) 0'(= a2◂ [ a16◂ [ a9◂ [ ]]] ) } 3'(= a2◂ [ a16◂ [ a9◂ [ ]]] ) } ⊢ 0'(= a2◂ [ a16◂ [ a9◂ [ ]]] )
; .mov_ptn2 { 0(<2)◂{ 2'(= a16◂ [ a9◂ [ ]] ) 0'(= a2◂ [ a16◂ [ a9◂ [ ]]] ) } 3'(= a2◂ [ a16◂ [ a9◂ [ ]]] ) } ⊢ { 0'(= a2◂ [ a16◂ [ a9◂ [ ]]] ) 1'(= a2◂ [ a16◂ [ a9◂ [ ]]] ) }
; .mov_ptn 3'(= a2◂ [ a16◂ [ a9◂ [ ]]] ) ⊢ 1'(= a2◂ [ a16◂ [ a9◂ [ ]]] )
	mov rax,r9
	mov r14,rax
	mov r10,r13
; .mov_ptn 0(<2)◂{ 2'(= a16◂ [ a9◂ [ ]] ) 4'(= a2◂ [ a16◂ [ a9◂ [ ]]] ) } ⊢ 0'(= a2◂ [ a16◂ [ a9◂ [ ]]] )
	mov rax,[SS_RCD_2_TOP]
	mov rsi,[rax] 
	mov QWORD [SS_RCD_2_TOP],rsi
	mov QWORD [rax],0
	mov r9,rax
	mov rax,r8
	mov QWORD [r9+8+8*0],rax
	mov rax,r10
	mov QWORD [r9+8+8*1],rax
	mov rax,r9
	mov BYTE [rax+6],0
	mov r13,rax
	call LB_2431

;; rsp=0 , %120~0'(= a2◂ [ a16◂ [ a9◂ [ ]]] ) 
; ∎ 0'(= a2◂ [ a16◂ [ a9◂ [ ]]] )
; .mov_ptn2 0'(= a2◂ [ a16◂ [ a9◂ [ ]]] ) ⊢ 0'(= a2◂ [ a16◂ [ a9◂ [ ]]] )
	ret
LB_2430: ; 52 0'(= a2◂ [ a16◂ [ a9◂ [ ]]] ) ⊢ 0'(= a2◂ [ a16◂ [ a9◂ [ ]]] ) : (_lst◂_t16◂_t9→_lst◂_t16◂_t9)
;; rsp=0 , %121~0'(= a2◂ [ a16◂ [ a9◂ [ ]]] ) 
; #20 { } ⊢ 1(<2)◂{ }
;; rsp=0 , %122~1(<2)◂{ } %121~0'(= a2◂ [ a16◂ [ a9◂ [ ]]] ) 
; rsp_d=0, #51 { 1(<2)◂{ } 0'(= a2◂ [ a16◂ [ a9◂ [ ]]] ) } ⊢ 0'(= a2◂ [ a16◂ [ a9◂ [ ]]] )
; .mov_ptn2 { 1(<2)◂{ } 0'(= a2◂ [ a16◂ [ a9◂ [ ]]] ) } ⊢ { 0'(= a2◂ [ a16◂ [ a9◂ [ ]]] ) 1'(= a2◂ [ a16◂ [ a9◂ [ ]]] ) }
; .mov_ptn 0'(= a2◂ [ a16◂ [ a9◂ [ ]]] ) ⊢ 1'(= a2◂ [ a16◂ [ a9◂ [ ]]] )
	mov rax,r13
	mov r14,rax
; .mov_ptn 1(<2)◂{ } ⊢ 0'(= a2◂ [ a16◂ [ a9◂ [ ]]] )
	mov rax,unt 
	mov rax,unt_1
	mov r13,rax
	call LB_2431

;; rsp=0 , %123~0'(= a2◂ [ a16◂ [ a9◂ [ ]]] ) 
; ∎ 0'(= a2◂ [ a16◂ [ a9◂ [ ]]] )
; .mov_ptn2 0'(= a2◂ [ a16◂ [ a9◂ [ ]]] ) ⊢ 0'(= a2◂ [ a16◂ [ a9◂ [ ]]] )
	ret
LB_2429
;; rsp=5 , %1703~1'(= r ) %1702~0'(= r ) %1701~12'(= a35◂ [ a17◂ [ a9◂ [ ]{| l |}]] ) %1700~11'(= a2◂ [ a16◂ [ a9◂ [ ]]] ) %1699~10'(= a2◂ [ a13◂ [ {| l |}]] ) %1698~9'(= a2◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) %1697~8'(= a35◂ [ *{ }] ) 
; rsp_d=0, #52 11'(= a2◂ [ a16◂ [ a9◂ [ ]]] ) ⊢ 2'(= a2◂ [ a16◂ [ a9◂ [ ]]] )
	sub rsp,16
	mov QWORD [rsp+8*0],r13
	mov QWORD [rsp+8*1],r14
; .mov_ptn2 11'(= a2◂ [ a16◂ [ a9◂ [ ]]] ) ⊢ 0'(= a2◂ [ a16◂ [ a9◂ [ ]]] )
; .mov_ptn 11'(= a2◂ [ a16◂ [ a9◂ [ ]]] ) ⊢ 0'(= a2◂ [ a16◂ [ a9◂ [ ]]] )
	mov rax,QWORD [rsp-8+8*4]
	mov r13,rax
	call LB_2430

	mov r14,QWORD [rsp-8+8*2]
	mov rax,QWORD [rsp-8+8*1]
	mov r8,r13
	mov r13,rax
	add rsp,16
;; rsp=5 , %1704~2'(= a2◂ [ a16◂ [ a9◂ [ ]]] ) %1703~1'(= r ) %1702~0'(= r ) %1701~12'(= a35◂ [ a17◂ [ a9◂ [ ]{| l |}]] ) %1699~10'(= a2◂ [ a13◂ [ {| l |}]] ) %1698~9'(= a2◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) %1697~8'(= a35◂ [ *{ }] ) 
; #119 { 2'(= a2◂ [ a16◂ [ a9◂ [ ]]] ) 9'(= a2◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) 10'(= a2◂ [ a13◂ [ {| l |}]] ) } ⊢ 3(<4)◂{ 2'(= a2◂ [ a16◂ [ a9◂ [ ]]] ) 9'(= a2◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) 10'(= a2◂ [ a13◂ [ {| l |}]] ) }
;; rsp=5 , %1705~3(<4)◂{ 2'(= a2◂ [ a16◂ [ a9◂ [ ]]] ) 9'(= a2◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) 10'(= a2◂ [ a13◂ [ {| l |}]] ) } %1703~1'(= r ) %1702~0'(= r ) %1701~12'(= a35◂ [ a17◂ [ a9◂ [ ]{| l |}]] ) %1697~8'(= a35◂ [ *{ }] ) 
;; ? 12'(= a35◂ [ a17◂ [ a9◂ [ ]{| l |}]] ) ⊢ 0(<2)◂3'(= a17◂ [ a9◂ [ ]{| l |}] )
	mov rdi,QWORD [rsp-8+8*1]
	cmp BYTE [rdi+6],0
	jnz LB_2433
	mov rax,QWORD [rdi+8]
	mov r9,rax
;; rsp=5 , %1707~3'(= a17◂ [ a9◂ [ ]{| l |}] ) %1705~3(<4)◂{ 2'(= a2◂ [ a16◂ [ a9◂ [ ]]] ) 9'(= a2◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) 10'(= a2◂ [ a13◂ [ {| l |}]] ) } %1703~1'(= r ) %1702~0'(= r ) %1697~8'(= a35◂ [ *{ }] ) 
; #129 { 3(<4)◂{ 2'(= a2◂ [ a16◂ [ a9◂ [ ]]] ) 9'(= a2◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) 10'(= a2◂ [ a13◂ [ {| l |}]] ) } 3'(= a17◂ [ a9◂ [ ]{| l |}] ) } ⊢ 2(<7)◂{ 3(<4)◂{ 2'(= a2◂ [ a16◂ [ a9◂ [ ]]] ) 9'(= a2◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) 10'(= a2◂ [ a13◂ [ {| l |}]] ) } 3'(= a17◂ [ a9◂ [ ]{| l |}] ) }
;; rsp=5 , %1708~2(<7)◂{ 3(<4)◂{ 2'(= a2◂ [ a16◂ [ a9◂ [ ]]] ) 9'(= a2◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) 10'(= a2◂ [ a13◂ [ {| l |}]] ) } 3'(= a17◂ [ a9◂ [ ]{| l |}] ) } %1703~1'(= r ) %1702~0'(= r ) %1697~8'(= a35◂ [ *{ }] ) 
; #193 2(<7)◂{ 3(<4)◂{ 2'(= a2◂ [ a16◂ [ a9◂ [ ]]] ) 9'(= a2◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) 10'(= a2◂ [ a13◂ [ {| l |}]] ) } 3'(= a17◂ [ a9◂ [ ]{| l |}] ) } ⊢ 0(<2)◂2(<7)◂{ 3(<4)◂{ 2'(= a2◂ [ a16◂ [ a9◂ [ ]]] ) 9'(= a2◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) 10'(= a2◂ [ a13◂ [ {| l |}]] ) } 3'(= a17◂ [ a9◂ [ ]{| l |}] ) }
;; rsp=5 , %1709~0(<2)◂2(<7)◂{ 3(<4)◂{ 2'(= a2◂ [ a16◂ [ a9◂ [ ]]] ) 9'(= a2◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) 10'(= a2◂ [ a13◂ [ {| l |}]] ) } 3'(= a17◂ [ a9◂ [ ]{| l |}] ) } %1703~1'(= r ) %1702~0'(= r ) %1697~8'(= a35◂ [ *{ }] ) 
; #22 0(<2)◂2(<7)◂{ 3(<4)◂{ 2'(= a2◂ [ a16◂ [ a9◂ [ ]]] ) 9'(= a2◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) 10'(= a2◂ [ a13◂ [ {| l |}]] ) } 3'(= a17◂ [ a9◂ [ ]{| l |}] ) } ⊢ 0(<2)◂0(<2)◂2(<7)◂{ 3(<4)◂{ 2'(= a2◂ [ a16◂ [ a9◂ [ ]]] ) 9'(= a2◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) 10'(= a2◂ [ a13◂ [ {| l |}]] ) } 3'(= a17◂ [ a9◂ [ ]{| l |}] ) }
;; rsp=5 , %1710~0(<2)◂0(<2)◂2(<7)◂{ 3(<4)◂{ 2'(= a2◂ [ a16◂ [ a9◂ [ ]]] ) 9'(= a2◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) 10'(= a2◂ [ a13◂ [ {| l |}]] ) } 3'(= a17◂ [ a9◂ [ ]{| l |}] ) } %1703~1'(= r ) %1702~0'(= r ) %1697~8'(= a35◂ [ *{ }] ) 
; ∎ 0(<2)◂0(<2)◂2(<7)◂{ 3(<4)◂{ 2'(= a2◂ [ a16◂ [ a9◂ [ ]]] ) 9'(= a2◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) 10'(= a2◂ [ a13◂ [ {| l |}]] ) } 3'(= a17◂ [ a9◂ [ ]{| l |}] ) }
; .dlt.ptn 1'(= r )
; .dlt.ptn 0'(= r )
; .dlt.ptn 8'(= a35◂ [ *{ }] )
;	.dlt adt ⊢ _  
; .mov_ptn2 0(<2)◂0(<2)◂2(<7)◂{ 3(<4)◂{ 2'(= a2◂ [ a16◂ [ a9◂ [ ]]] ) 9'(= a2◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) 10'(= a2◂ [ a13◂ [ {| l |}]] ) } 3'(= a17◂ [ a9◂ [ ]{| l |}] ) } ⊢ 2'(= a3◂ [ a35◂ [ a17◂ [ a9◂ [ ]{| l |}]]] )
	mov r13,r8
; .mov_ptn 0(<2)◂0(<2)◂2(<7)◂{ 3(<4)◂{ 0'(= a2◂ [ a16◂ [ a9◂ [ ]]] ) 9'(= a2◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) 10'(= a2◂ [ a13◂ [ {| l |}]] ) } 3'(= a17◂ [ a9◂ [ ]{| l |}] ) } ⊢ 2'(= a3◂ [ a35◂ [ a17◂ [ a9◂ [ ]{| l |}]]] )
	mov rax,[SS_RCD_2_TOP]
	mov rsi,[rax] 
	mov QWORD [SS_RCD_2_TOP],rsi
	mov QWORD [rax],0
	mov r14,rax
	mov rax,[SS_RCD_3_TOP]
	mov rsi,[rax] 
	mov QWORD [SS_RCD_3_TOP],rsi
	mov QWORD [rax],0
	mov r10,rax
	mov rax,r13
	mov QWORD [r10+8+8*0],rax
	mov rax,QWORD [rsp-8+8*4]
	mov QWORD [r10+8+8*1],rax
	mov rax,QWORD [rsp-8+8*3]
	mov QWORD [r10+8+8*2],rax
	mov rax,r10
	mov BYTE [rax+6],3
	mov QWORD [r14+8+8*0],rax
	mov rax,r9
	mov QWORD [r14+8+8*1],rax
	mov rax,r14
	mov BYTE [rax+6],2
	mov rdi,rax
	mov rax,r15
	mov r15,QWORD [r15] 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov rdi,rax
	mov rax,r15
	mov r15,QWORD [r15] 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,40
	jmp LB_2428
LB_2433:
;; ?. 12'(= a35◂ [ a17◂ [ a9◂ [ ]{| l |}]] ) ⊢ 1(<2)◂3'(= a2◂ [ *{ rr{| l |}}] )
	mov rax,QWORD [rdi+8]
	mov r9,rax
;; rsp=5 , %1706~3'(= a2◂ [ *{ rr{| l |}}] ) %1705~3(<4)◂{ 2'(= a2◂ [ a16◂ [ a9◂ [ ]]] ) 9'(= a2◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) 10'(= a2◂ [ a13◂ [ {| l |}]] ) } %1703~1'(= r ) %1702~0'(= r ) %1697~8'(= a35◂ [ *{ }] ) 
; #192 3'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 1(<2)◂3'(= a2◂ [ *{ rr{| l |}}] )
;; rsp=5 , %1711~1(<2)◂3'(= a2◂ [ *{ rr{| l |}}] ) %1705~3(<4)◂{ 2'(= a2◂ [ a16◂ [ a9◂ [ ]]] ) 9'(= a2◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) 10'(= a2◂ [ a13◂ [ {| l |}]] ) } %1703~1'(= r ) %1702~0'(= r ) %1697~8'(= a35◂ [ *{ }] ) 
; #22 1(<2)◂3'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 0(<2)◂1(<2)◂3'(= a2◂ [ *{ rr{| l |}}] )
;; rsp=5 , %1712~0(<2)◂1(<2)◂3'(= a2◂ [ *{ rr{| l |}}] ) %1705~3(<4)◂{ 2'(= a2◂ [ a16◂ [ a9◂ [ ]]] ) 9'(= a2◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) 10'(= a2◂ [ a13◂ [ {| l |}]] ) } %1703~1'(= r ) %1702~0'(= r ) %1697~8'(= a35◂ [ *{ }] ) 
; ∎ 0(<2)◂1(<2)◂3'(= a2◂ [ *{ rr{| l |}}] )
; .dlt.ptn 3(<4)◂{ 2'(= a2◂ [ a16◂ [ a9◂ [ ]]] ) 9'(= a2◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) 10'(= a2◂ [ a13◂ [ {| l |}]] ) }
;	.dlt adt ⊢ _  
;	.dlt adt ⊢ _  
;	.dlt adt ⊢ _  
; .dlt.ptn 1'(= r )
; .dlt.ptn 0'(= r )
; .dlt.ptn 8'(= a35◂ [ *{ }] )
;	.dlt adt ⊢ _  
; .mov_ptn2 0(<2)◂1(<2)◂3'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 2'(= a3◂ [ a35◂ [ a17◂ [ a9◂ [ ]{| l |}]]] )
; .mov_ptn 0(<2)◂1(<2)◂3'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 2'(= a3◂ [ a35◂ [ a17◂ [ a9◂ [ ]{| l |}]]] )
	mov rax,r9
	mov rdi,rax
	mov rax,r15
	mov r15,QWORD [r15] 
	mov QWORD [rax],0
	mov BYTE [rax+6],1
	mov QWORD [rax+8],rdi
	mov rdi,rax
	mov rax,r15
	mov r15,QWORD [r15] 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,40
	jmp LB_2428
LB_2428:
	cmp BYTE [r8+6],0
	jnz LB_2381
	pop r14
	pop r9
	add rsp,8
	pop r13
	ret
LB_2381:
	mov r9,QWORD [rsp+8]
	mov r14,QWORD [rsp+16]
	mov r13,QWORD [rsp+24]
	jmp LB_2436
LB_2435:
	add r14,1 
LB_2436:
	cmp r14,r9
	jge LB_2437
	JZ_SPC BYTE [r13+8+r14], LB_2435
LB_2437
	call GRM_217
	cmp BYTE [r8+6],0
	jnz LB_2440
	jmp LB_2441
LB_2440:
	jmp LB_2438
LB_2441:
	sub rsp,8
	mov r8,[r8+8]
; .mov_ptn2 2'(= a35◂ [ *{ }] ) ⊢ 8'(= a35◂ [ *{ }] )
; .mov_ptn 2'(= a35◂ [ *{ }] ) ⊢ 8'(= a35◂ [ *{ }] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_2439
LB_2438:
	add rsp,0
	jmp LB_2434
LB_2439:
	jmp LB_2443
LB_2442:
	add r14,1 
LB_2443:
	cmp r14,r9
	jge LB_2444
	JZ_SPC BYTE [r13+8+r14], LB_2442
LB_2444
	lea rax,[r14+3]
	cmp rax,r9
	jg LB_2447
	jmp LB_2448
LB_2447:
	mov r8,unt_1
	jmp LB_2445
LB_2448:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],226
	jnz LB_2449
	cmp BYTE [rdi+1],151
	jnz LB_2449
	cmp BYTE [rdi+2],130
	jnz LB_2449
	jmp LB_2450
LB_2449:
	mov r8,unt_1
	jmp LB_2445
LB_2450:
	add r14,3
	jmp LB_2446
LB_2445:
	add rsp,8
	jmp LB_2434
LB_2446:
	jmp LB_2452
LB_2451:
	add r14,1 
LB_2452:
	cmp r14,r9
	jge LB_2453
	JZ_SPC BYTE [r13+8+r14], LB_2451
LB_2453
	call GRM_204
	cmp BYTE [r8+6],0
	jnz LB_2456
	jmp LB_2457
LB_2456:
	jmp LB_2454
LB_2457:
	sub rsp,8
	mov r8,[r8+8]
; .mov_ptn2 2'(= a12◂ [ a9◂ [ ]{| l |}] ) ⊢ 9'(= a12◂ [ a9◂ [ ]{| l |}] )
; .mov_ptn 2'(= a12◂ [ a9◂ [ ]{| l |}] ) ⊢ 9'(= a12◂ [ a9◂ [ ]{| l |}] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_2455
LB_2454:
	add rsp,8
	pop rdi
	pop r9 
	pop r14
	pop r13
	ret
LB_2455:
	jmp LB_2459
LB_2458:
	add r14,1 
LB_2459:
	cmp r14,r9
	jge LB_2460
	JZ_SPC BYTE [r13+8+r14], LB_2458
LB_2460
	lea rax,[r14+1]
	cmp rax,r9
	jg LB_2463
	jmp LB_2464
LB_2463:
	mov r8,unt_1
	jmp LB_2461
LB_2464:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],44
	jnz LB_2465
	jmp LB_2466
LB_2465:
	mov r8,unt_1
	jmp LB_2461
LB_2466:
	add r14,1
	jmp LB_2462
LB_2461:
	add rsp,16
	pop rdi
	pop r9 
	pop r14
	pop r13
	ret
LB_2462:
	jmp LB_2468
LB_2467:
	add r14,1 
LB_2468:
	cmp r14,r9
	jge LB_2469
	JZ_SPC BYTE [r13+8+r14], LB_2467
LB_2469
	call GRM_201
	cmp BYTE [r8+6],0
	jnz LB_2472
	jmp LB_2473
LB_2472:
	jmp LB_2470
LB_2473:
	sub rsp,8
	mov r8,[r8+8]
; .mov_ptn2 2'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) ⊢ 10'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] )
; .mov_ptn 2'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) ⊢ 10'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_2471
LB_2470:
	add rsp,16
	pop rdi
	pop r9 
	pop r14
	pop r13
	ret
LB_2471:
	sub rsp,32
	mov QWORD [rsp+24],r13
	mov QWORD [rsp+16],r14 
	mov QWORD [rsp+8],r9
	jmp LB_2477
LB_2476:
	add r14,1 
LB_2477:
	cmp r14,r9
	jge LB_2478
	JZ_SPC BYTE [r13+8+r14], LB_2476
LB_2478
	lea rax,[r14+4]
	cmp rax,r9
	jg LB_2481
	jmp LB_2482
LB_2481:
	mov r8,unt_1
	jmp LB_2479
LB_2482:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],226
	jnz LB_2483
	cmp BYTE [rdi+1],138
	jnz LB_2483
	cmp BYTE [rdi+2],162
	jnz LB_2483
	cmp BYTE [rdi+3],124
	jnz LB_2483
	jmp LB_2484
LB_2483:
	mov r8,unt_1
	jmp LB_2479
LB_2484:
	add r14,4
	jmp LB_2480
LB_2479:
	add rsp,0
	jmp LB_2475
LB_2480:
	mov QWORD [rsp+8*0],r14
	mov r13,QWORD [rsp+16+8*0]
	mov r14,QWORD [rsp+8*0]
	jmp LB_2486
LB_2486
;; rsp=0 , %1719~1'(= r ) %1718~0'(= r ) 
; #23 { } ⊢ 1(<2)◂{ }
;; rsp=0 , %1720~1(<2)◂{ } %1719~1'(= r ) %1718~0'(= r ) 
; #193 1(<2)◂{ } ⊢ 0(<2)◂1(<2)◂{ }
;; rsp=0 , %1721~0(<2)◂1(<2)◂{ } %1719~1'(= r ) %1718~0'(= r ) 
; #22 0(<2)◂1(<2)◂{ } ⊢ 0(<2)◂0(<2)◂1(<2)◂{ }
;; rsp=0 , %1722~0(<2)◂0(<2)◂1(<2)◂{ } %1719~1'(= r ) %1718~0'(= r ) 
; ∎ 0(<2)◂0(<2)◂1(<2)◂{ }
; .dlt.ptn 1'(= r )
; .dlt.ptn 0'(= r )
; .mov_ptn2 0(<2)◂0(<2)◂1(<2)◂{ } ⊢ 2'(= a3◂ [ a35◂ [ a3◂ [ *{ a8◂ [ a13◂ [ {| l |}]]a17◂ [ a9◂ [ ]{| l |}]}]]] )
; .mov_ptn 0(<2)◂0(<2)◂1(<2)◂{ } ⊢ 2'(= a3◂ [ a35◂ [ a3◂ [ *{ a8◂ [ a13◂ [ {| l |}]]a17◂ [ a9◂ [ ]{| l |}]}]]] )
	mov rax,unt 
	mov rax,unt_1
	mov rdi,rax
	mov rax,r15
	mov r15,QWORD [r15] 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov rdi,rax
	mov rax,r15
	mov r15,QWORD [r15] 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	jmp LB_2485
LB_2485:
	cmp BYTE [r8+6],0
	jnz LB_2475
	pop r14
	pop r9
	add rsp,8
	pop r13
	jmp LB_2474
LB_2475:
	mov r9,QWORD [rsp+8]
	mov r14,QWORD [rsp+16]
	mov r13,QWORD [rsp+24]
	jmp LB_2489
LB_2488:
	add r14,1 
LB_2489:
	cmp r14,r9
	jge LB_2490
	JZ_SPC BYTE [r13+8+r14], LB_2488
LB_2490
	lea rax,[r14+3]
	cmp rax,r9
	jg LB_2493
	jmp LB_2494
LB_2493:
	mov r8,unt_1
	jmp LB_2491
LB_2494:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],226
	jnz LB_2495
	cmp BYTE [rdi+1],138
	jnz LB_2495
	cmp BYTE [rdi+2],162
	jnz LB_2495
	jmp LB_2496
LB_2495:
	mov r8,unt_1
	jmp LB_2491
LB_2496:
	add r14,3
	jmp LB_2492
LB_2491:
	add rsp,0
	jmp LB_2487
LB_2492:
	jmp LB_2498
LB_2497:
	add r14,1 
LB_2498:
	cmp r14,r9
	jge LB_2499
	JZ_SPC BYTE [r13+8+r14], LB_2497
LB_2499
	call GRM_205
	cmp BYTE [r8+6],0
	jnz LB_2502
	jmp LB_2503
LB_2502:
	jmp LB_2500
LB_2503:
	sub rsp,8
	mov r8,[r8+8]
; .mov_ptn2 2'(= a8◂ [ a13◂ [ {| l |}]] ) ⊢ 8'(= a8◂ [ a13◂ [ {| l |}]] )
; .mov_ptn 2'(= a8◂ [ a13◂ [ {| l |}]] ) ⊢ 8'(= a8◂ [ a13◂ [ {| l |}]] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_2501
LB_2500:
	add rsp,0
	jmp LB_2487
LB_2501:
	jmp LB_2505
LB_2504:
	add r14,1 
LB_2505:
	cmp r14,r9
	jge LB_2506
	JZ_SPC BYTE [r13+8+r14], LB_2504
LB_2506
	call GRM_234
	cmp BYTE [r8+6],0
	jnz LB_2509
	jmp LB_2510
LB_2509:
	jmp LB_2507
LB_2510:
	sub rsp,8
	mov r8,[r8+8]
; .mov_ptn2 2'(= a35◂ [ a17◂ [ a9◂ [ ]{| l |}]] ) ⊢ 9'(= a35◂ [ a17◂ [ a9◂ [ ]{| l |}]] )
; .mov_ptn 2'(= a35◂ [ a17◂ [ a9◂ [ ]{| l |}]] ) ⊢ 9'(= a35◂ [ a17◂ [ a9◂ [ ]{| l |}]] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_2508
LB_2507:
	add rsp,8
	jmp LB_2487
LB_2508:
	mov QWORD [rsp+8*2],r14
	mov r13,QWORD [rsp+16+8*2]
	mov r14,QWORD [rsp+8*2]
	jmp LB_2512
LB_2512
;; rsp=2 , %1726~1'(= r ) %1725~0'(= r ) %1724~9'(= a35◂ [ a17◂ [ a9◂ [ ]{| l |}]] ) %1723~8'(= a8◂ [ a13◂ [ {| l |}]] ) 
;; ? 9'(= a35◂ [ a17◂ [ a9◂ [ ]{| l |}]] ) ⊢ 0(<2)◂2'(= a17◂ [ a9◂ [ ]{| l |}] )
	mov rdi,QWORD [rsp-8+8*1]
	cmp BYTE [rdi+6],0
	jnz LB_2513
	mov rax,QWORD [rdi+8]
	mov r8,rax
;; rsp=2 , %1728~2'(= a17◂ [ a9◂ [ ]{| l |}] ) %1726~1'(= r ) %1725~0'(= r ) %1723~8'(= a8◂ [ a13◂ [ {| l |}]] ) 
; #22 { 8'(= a8◂ [ a13◂ [ {| l |}]] ) 2'(= a17◂ [ a9◂ [ ]{| l |}] ) } ⊢ 0(<2)◂{ 8'(= a8◂ [ a13◂ [ {| l |}]] ) 2'(= a17◂ [ a9◂ [ ]{| l |}] ) }
;; rsp=2 , %1729~0(<2)◂{ 8'(= a8◂ [ a13◂ [ {| l |}]] ) 2'(= a17◂ [ a9◂ [ ]{| l |}] ) } %1726~1'(= r ) %1725~0'(= r ) 
; #193 0(<2)◂{ 8'(= a8◂ [ a13◂ [ {| l |}]] ) 2'(= a17◂ [ a9◂ [ ]{| l |}] ) } ⊢ 0(<2)◂0(<2)◂{ 8'(= a8◂ [ a13◂ [ {| l |}]] ) 2'(= a17◂ [ a9◂ [ ]{| l |}] ) }
;; rsp=2 , %1730~0(<2)◂0(<2)◂{ 8'(= a8◂ [ a13◂ [ {| l |}]] ) 2'(= a17◂ [ a9◂ [ ]{| l |}] ) } %1726~1'(= r ) %1725~0'(= r ) 
; #22 0(<2)◂0(<2)◂{ 8'(= a8◂ [ a13◂ [ {| l |}]] ) 2'(= a17◂ [ a9◂ [ ]{| l |}] ) } ⊢ 0(<2)◂0(<2)◂0(<2)◂{ 8'(= a8◂ [ a13◂ [ {| l |}]] ) 2'(= a17◂ [ a9◂ [ ]{| l |}] ) }
;; rsp=2 , %1731~0(<2)◂0(<2)◂0(<2)◂{ 8'(= a8◂ [ a13◂ [ {| l |}]] ) 2'(= a17◂ [ a9◂ [ ]{| l |}] ) } %1726~1'(= r ) %1725~0'(= r ) 
; ∎ 0(<2)◂0(<2)◂0(<2)◂{ 8'(= a8◂ [ a13◂ [ {| l |}]] ) 2'(= a17◂ [ a9◂ [ ]{| l |}] ) }
; .dlt.ptn 1'(= r )
; .dlt.ptn 0'(= r )
; .mov_ptn2 0(<2)◂0(<2)◂0(<2)◂{ 8'(= a8◂ [ a13◂ [ {| l |}]] ) 2'(= a17◂ [ a9◂ [ ]{| l |}] ) } ⊢ 2'(= a3◂ [ a35◂ [ a3◂ [ *{ a8◂ [ a13◂ [ {| l |}]]a17◂ [ a9◂ [ ]{| l |}]}]]] )
	mov r13,r8
; .mov_ptn 0(<2)◂0(<2)◂0(<2)◂{ 8'(= a8◂ [ a13◂ [ {| l |}]] ) 0'(= a17◂ [ a9◂ [ ]{| l |}] ) } ⊢ 2'(= a3◂ [ a35◂ [ a3◂ [ *{ a8◂ [ a13◂ [ {| l |}]]a17◂ [ a9◂ [ ]{| l |}]}]]] )
	mov rax,[SS_RCD_2_TOP]
	mov rsi,[rax] 
	mov QWORD [SS_RCD_2_TOP],rsi
	mov QWORD [rax],0
	mov r14,rax
	mov rax,QWORD [rsp-8+8*2]
	mov QWORD [r14+8+8*0],rax
	mov rax,r13
	mov QWORD [r14+8+8*1],rax
	mov rax,r14
	mov BYTE [rax+6],0
	mov rdi,rax
	mov rax,r15
	mov r15,QWORD [r15] 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov rdi,rax
	mov rax,r15
	mov r15,QWORD [r15] 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,16
	jmp LB_2511
LB_2513:
;; ?. 9'(= a35◂ [ a17◂ [ a9◂ [ ]{| l |}]] ) ⊢ 1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] )
	mov rax,QWORD [rdi+8]
	mov r8,rax
;; rsp=2 , %1727~2'(= a2◂ [ *{ rr{| l |}}] ) %1726~1'(= r ) %1725~0'(= r ) %1723~8'(= a8◂ [ a13◂ [ {| l |}]] ) 
; #192 2'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] )
;; rsp=2 , %1732~1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] ) %1726~1'(= r ) %1725~0'(= r ) %1723~8'(= a8◂ [ a13◂ [ {| l |}]] ) 
; #22 1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 0(<2)◂1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] )
;; rsp=2 , %1733~0(<2)◂1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] ) %1726~1'(= r ) %1725~0'(= r ) %1723~8'(= a8◂ [ a13◂ [ {| l |}]] ) 
; ∎ 0(<2)◂1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] )
; .dlt.ptn 1'(= r )
; .dlt.ptn 0'(= r )
; .dlt.ptn 8'(= a8◂ [ a13◂ [ {| l |}]] )
;	.dlt adt ⊢ _  
; .mov_ptn2 0(<2)◂1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 2'(= a3◂ [ a35◂ [ a3◂ [ *{ a8◂ [ a13◂ [ {| l |}]]a17◂ [ a9◂ [ ]{| l |}]}]]] )
	mov r13,r8
; .mov_ptn 0(<2)◂1(<2)◂0'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 2'(= a3◂ [ a35◂ [ a3◂ [ *{ a8◂ [ a13◂ [ {| l |}]]a17◂ [ a9◂ [ ]{| l |}]}]]] )
	mov rax,r13
	mov rdi,rax
	mov rax,r15
	mov r15,QWORD [r15] 
	mov QWORD [rax],0
	mov BYTE [rax+6],1
	mov QWORD [rax+8],rdi
	mov rdi,rax
	mov rax,r15
	mov r15,QWORD [r15] 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,16
	jmp LB_2511
LB_2511:
	cmp BYTE [r8+6],0
	jnz LB_2487
	pop r14
	pop r9
	add rsp,8
	pop r13
	jmp LB_2474
LB_2487:
	pop rdi
	pop r9 
	pop r14
	pop r13
	jmp LB_2474
LB_2474:
	cmp BYTE [r8+6],0
	jnz LB_2514
	jmp LB_2515
LB_2514:
	add rsp,24
	add rsp,8
	pop r9 
	pop r14 
	pop r13
	ret
LB_2515:
	mov QWORD [rsp+8*3],r14
	mov r8,[r8+8]
; .mov_ptn2 2'(= a35◂ [ a3◂ [ *{ a8◂ [ a13◂ [ {| l |}]]a17◂ [ a9◂ [ ]{| l |}]}]] ) ⊢ 3'(= a35◂ [ a3◂ [ *{ a8◂ [ a13◂ [ {| l |}]]a17◂ [ a9◂ [ ]{| l |}]}]] )
	mov r10,r9
; .mov_ptn 2'(= a35◂ [ a3◂ [ *{ a8◂ [ a13◂ [ {| l |}]]a17◂ [ a9◂ [ ]{| l |}]}]] ) ⊢ 3'(= a35◂ [ a3◂ [ *{ a8◂ [ a13◂ [ {| l |}]]a17◂ [ a9◂ [ ]{| l |}]}]] )
	mov rax,r8
	mov r9,rax
	mov r13,QWORD [rsp+16+8*3]
	mov r14,QWORD [rsp+8*3]
	jmp LB_2517
LB_2517
;; rsp=3 , %1734~3'(= a35◂ [ a3◂ [ *{ a8◂ [ a13◂ [ {| l |}]]a17◂ [ a9◂ [ ]{| l |}]}]] ) %1717~1'(= r ) %1716~0'(= r ) %1715~10'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) %1714~9'(= a12◂ [ a9◂ [ ]{| l |}] ) %1713~8'(= a35◂ [ *{ }] ) 
;; ? 3'(= a35◂ [ a3◂ [ *{ a8◂ [ a13◂ [ {| l |}]]a17◂ [ a9◂ [ ]{| l |}]}]] ) ⊢ 0(<2)◂2'(= a3◂ [ *{ a8◂ [ a13◂ [ {| l |}]]a17◂ [ a9◂ [ ]{| l |}]}] )
	mov rdi,r9
	cmp BYTE [rdi+6],0
	jnz LB_2518
	mov rax,QWORD [rdi+8]
	mov r8,rax
;; rsp=3 , %1736~2'(= a3◂ [ *{ a8◂ [ a13◂ [ {| l |}]]a17◂ [ a9◂ [ ]{| l |}]}] ) %1717~1'(= r ) %1716~0'(= r ) %1715~10'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) %1714~9'(= a12◂ [ a9◂ [ ]{| l |}] ) %1713~8'(= a35◂ [ *{ }] ) 
;; ? 2'(= a3◂ [ *{ a8◂ [ a13◂ [ {| l |}]]a17◂ [ a9◂ [ ]{| l |}]}] ) ⊢ 0(<2)◂{ 3'(= a8◂ [ a13◂ [ {| l |}]] ) 4'(= a17◂ [ a9◂ [ ]{| l |}] ) }
	mov rdi,r8
	cmp BYTE [rdi+6],0
	jnz LB_2519
	mov rdi,r8
	mov rdi,QWORD [rdi+8+8*0]
	mov r9,rdi
	mov rdi,r8
	mov rdi,QWORD [rdi+8+8*1]
	mov r10,rdi
;; rsp=3 , %1738~4'(= a17◂ [ a9◂ [ ]{| l |}] ) %1737~3'(= a8◂ [ a13◂ [ {| l |}]] ) %1717~1'(= r ) %1716~0'(= r ) %1715~10'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) %1714~9'(= a12◂ [ a9◂ [ ]{| l |}] ) %1713~8'(= a35◂ [ *{ }] ) 
; #121 { 9'(= a12◂ [ a9◂ [ ]{| l |}] ) 10'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) 3'(= a8◂ [ a13◂ [ {| l |}]] ) } ⊢ 1(<4)◂{ 9'(= a12◂ [ a9◂ [ ]{| l |}] ) 10'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) 3'(= a8◂ [ a13◂ [ {| l |}]] ) }
;; rsp=3 , %1739~1(<4)◂{ 9'(= a12◂ [ a9◂ [ ]{| l |}] ) 10'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) 3'(= a8◂ [ a13◂ [ {| l |}]] ) } %1738~4'(= a17◂ [ a9◂ [ ]{| l |}] ) %1717~1'(= r ) %1716~0'(= r ) %1713~8'(= a35◂ [ *{ }] ) 
; #129 { 1(<4)◂{ 9'(= a12◂ [ a9◂ [ ]{| l |}] ) 10'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) 3'(= a8◂ [ a13◂ [ {| l |}]] ) } 4'(= a17◂ [ a9◂ [ ]{| l |}] ) } ⊢ 2(<7)◂{ 1(<4)◂{ 9'(= a12◂ [ a9◂ [ ]{| l |}] ) 10'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) 3'(= a8◂ [ a13◂ [ {| l |}]] ) } 4'(= a17◂ [ a9◂ [ ]{| l |}] ) }
;; rsp=3 , %1740~2(<7)◂{ 1(<4)◂{ 9'(= a12◂ [ a9◂ [ ]{| l |}] ) 10'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) 3'(= a8◂ [ a13◂ [ {| l |}]] ) } 4'(= a17◂ [ a9◂ [ ]{| l |}] ) } %1717~1'(= r ) %1716~0'(= r ) %1713~8'(= a35◂ [ *{ }] ) 
; #193 2(<7)◂{ 1(<4)◂{ 9'(= a12◂ [ a9◂ [ ]{| l |}] ) 10'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) 3'(= a8◂ [ a13◂ [ {| l |}]] ) } 4'(= a17◂ [ a9◂ [ ]{| l |}] ) } ⊢ 0(<2)◂2(<7)◂{ 1(<4)◂{ 9'(= a12◂ [ a9◂ [ ]{| l |}] ) 10'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) 3'(= a8◂ [ a13◂ [ {| l |}]] ) } 4'(= a17◂ [ a9◂ [ ]{| l |}] ) }
;; rsp=3 , %1741~0(<2)◂2(<7)◂{ 1(<4)◂{ 9'(= a12◂ [ a9◂ [ ]{| l |}] ) 10'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) 3'(= a8◂ [ a13◂ [ {| l |}]] ) } 4'(= a17◂ [ a9◂ [ ]{| l |}] ) } %1717~1'(= r ) %1716~0'(= r ) %1713~8'(= a35◂ [ *{ }] ) 
; #22 0(<2)◂2(<7)◂{ 1(<4)◂{ 9'(= a12◂ [ a9◂ [ ]{| l |}] ) 10'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) 3'(= a8◂ [ a13◂ [ {| l |}]] ) } 4'(= a17◂ [ a9◂ [ ]{| l |}] ) } ⊢ 0(<2)◂0(<2)◂2(<7)◂{ 1(<4)◂{ 9'(= a12◂ [ a9◂ [ ]{| l |}] ) 10'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) 3'(= a8◂ [ a13◂ [ {| l |}]] ) } 4'(= a17◂ [ a9◂ [ ]{| l |}] ) }
;; rsp=3 , %1742~0(<2)◂0(<2)◂2(<7)◂{ 1(<4)◂{ 9'(= a12◂ [ a9◂ [ ]{| l |}] ) 10'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) 3'(= a8◂ [ a13◂ [ {| l |}]] ) } 4'(= a17◂ [ a9◂ [ ]{| l |}] ) } %1717~1'(= r ) %1716~0'(= r ) %1713~8'(= a35◂ [ *{ }] ) 
; ∎ 0(<2)◂0(<2)◂2(<7)◂{ 1(<4)◂{ 9'(= a12◂ [ a9◂ [ ]{| l |}] ) 10'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) 3'(= a8◂ [ a13◂ [ {| l |}]] ) } 4'(= a17◂ [ a9◂ [ ]{| l |}] ) }
; .dlt.ptn 1'(= r )
; .dlt.ptn 0'(= r )
; .dlt.ptn 8'(= a35◂ [ *{ }] )
;	.dlt adt ⊢ _  
; .mov_ptn2 0(<2)◂0(<2)◂2(<7)◂{ 1(<4)◂{ 9'(= a12◂ [ a9◂ [ ]{| l |}] ) 10'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) 3'(= a8◂ [ a13◂ [ {| l |}]] ) } 4'(= a17◂ [ a9◂ [ ]{| l |}] ) } ⊢ 2'(= a3◂ [ a35◂ [ a17◂ [ a9◂ [ ]{| l |}]]] )
; .mov_ptn 0(<2)◂0(<2)◂2(<7)◂{ 1(<4)◂{ 9'(= a12◂ [ a9◂ [ ]{| l |}] ) 10'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) 3'(= a8◂ [ a13◂ [ {| l |}]] ) } 4'(= a17◂ [ a9◂ [ ]{| l |}] ) } ⊢ 2'(= a3◂ [ a35◂ [ a17◂ [ a9◂ [ ]{| l |}]]] )
	mov rax,[SS_RCD_2_TOP]
	mov rsi,[rax] 
	mov QWORD [SS_RCD_2_TOP],rsi
	mov QWORD [rax],0
	mov r13,rax
	mov rax,[SS_RCD_3_TOP]
	mov rsi,[rax] 
	mov QWORD [SS_RCD_3_TOP],rsi
	mov QWORD [rax],0
	mov r14,rax
	mov rax,QWORD [rsp-8+8*2]
	mov QWORD [r14+8+8*0],rax
	mov rax,QWORD [rsp-8+8*1]
	mov QWORD [r14+8+8*1],rax
	mov rax,r9
	mov QWORD [r14+8+8*2],rax
	mov rax,r14
	mov BYTE [rax+6],1
	mov QWORD [r13+8+8*0],rax
	mov rax,r10
	mov QWORD [r13+8+8*1],rax
	mov rax,r13
	mov BYTE [rax+6],2
	mov rdi,rax
	mov rax,r15
	mov r15,QWORD [r15] 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov rdi,rax
	mov rax,r15
	mov r15,QWORD [r15] 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,24
	jmp LB_2516
LB_2519:
;; ?. 2'(= a3◂ [ *{ a8◂ [ a13◂ [ {| l |}]]a17◂ [ a9◂ [ ]{| l |}]}] ) ⊢ 1(<2)◂{ }
;; rsp=3 , %1717~1'(= r ) %1716~0'(= r ) %1715~10'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) %1714~9'(= a12◂ [ a9◂ [ ]{| l |}] ) %1713~8'(= a35◂ [ *{ }] ) 
; #130 { 9'(= a12◂ [ a9◂ [ ]{| l |}] ) 10'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) } ⊢ 1(<7)◂{ 9'(= a12◂ [ a9◂ [ ]{| l |}] ) 10'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) }
;; rsp=3 , %1743~1(<7)◂{ 9'(= a12◂ [ a9◂ [ ]{| l |}] ) 10'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) } %1717~1'(= r ) %1716~0'(= r ) %1713~8'(= a35◂ [ *{ }] ) 
; #193 1(<7)◂{ 9'(= a12◂ [ a9◂ [ ]{| l |}] ) 10'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) } ⊢ 0(<2)◂1(<7)◂{ 9'(= a12◂ [ a9◂ [ ]{| l |}] ) 10'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) }
;; rsp=3 , %1744~0(<2)◂1(<7)◂{ 9'(= a12◂ [ a9◂ [ ]{| l |}] ) 10'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) } %1717~1'(= r ) %1716~0'(= r ) %1713~8'(= a35◂ [ *{ }] ) 
; #22 0(<2)◂1(<7)◂{ 9'(= a12◂ [ a9◂ [ ]{| l |}] ) 10'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) } ⊢ 0(<2)◂0(<2)◂1(<7)◂{ 9'(= a12◂ [ a9◂ [ ]{| l |}] ) 10'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) }
;; rsp=3 , %1745~0(<2)◂0(<2)◂1(<7)◂{ 9'(= a12◂ [ a9◂ [ ]{| l |}] ) 10'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) } %1717~1'(= r ) %1716~0'(= r ) %1713~8'(= a35◂ [ *{ }] ) 
; ∎ 0(<2)◂0(<2)◂1(<7)◂{ 9'(= a12◂ [ a9◂ [ ]{| l |}] ) 10'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) }
; .dlt.ptn 1'(= r )
; .dlt.ptn 0'(= r )
; .dlt.ptn 8'(= a35◂ [ *{ }] )
;	.dlt adt ⊢ _  
; .mov_ptn2 0(<2)◂0(<2)◂1(<7)◂{ 9'(= a12◂ [ a9◂ [ ]{| l |}] ) 10'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) } ⊢ 2'(= a3◂ [ a35◂ [ a17◂ [ a9◂ [ ]{| l |}]]] )
; .mov_ptn 0(<2)◂0(<2)◂1(<7)◂{ 9'(= a12◂ [ a9◂ [ ]{| l |}] ) 10'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) } ⊢ 2'(= a3◂ [ a35◂ [ a17◂ [ a9◂ [ ]{| l |}]]] )
	mov rax,[SS_RCD_2_TOP]
	mov rsi,[rax] 
	mov QWORD [SS_RCD_2_TOP],rsi
	mov QWORD [rax],0
	mov r13,rax
	mov rax,QWORD [rsp-8+8*2]
	mov QWORD [r13+8+8*0],rax
	mov rax,QWORD [rsp-8+8*1]
	mov QWORD [r13+8+8*1],rax
	mov rax,r13
	mov BYTE [rax+6],1
	mov rdi,rax
	mov rax,r15
	mov r15,QWORD [r15] 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov rdi,rax
	mov rax,r15
	mov r15,QWORD [r15] 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,24
	jmp LB_2516
LB_2518:
;; ?. 3'(= a35◂ [ a3◂ [ *{ a8◂ [ a13◂ [ {| l |}]]a17◂ [ a9◂ [ ]{| l |}]}]] ) ⊢ 1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] )
	mov rax,QWORD [rdi+8]
	mov r8,rax
;; rsp=3 , %1735~2'(= a2◂ [ *{ rr{| l |}}] ) %1717~1'(= r ) %1716~0'(= r ) %1715~10'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) %1714~9'(= a12◂ [ a9◂ [ ]{| l |}] ) %1713~8'(= a35◂ [ *{ }] ) 
; #192 2'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] )
;; rsp=3 , %1746~1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] ) %1717~1'(= r ) %1716~0'(= r ) %1715~10'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) %1714~9'(= a12◂ [ a9◂ [ ]{| l |}] ) %1713~8'(= a35◂ [ *{ }] ) 
; #22 1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 0(<2)◂1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] )
;; rsp=3 , %1747~0(<2)◂1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] ) %1717~1'(= r ) %1716~0'(= r ) %1715~10'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) %1714~9'(= a12◂ [ a9◂ [ ]{| l |}] ) %1713~8'(= a35◂ [ *{ }] ) 
; ∎ 0(<2)◂1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] )
; .dlt.ptn 1'(= r )
; .dlt.ptn 0'(= r )
; .dlt.ptn 10'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] )
;	.dlt adt ⊢ _  
; .dlt.ptn 9'(= a12◂ [ a9◂ [ ]{| l |}] )
;	.dlt adt ⊢ _  
; .dlt.ptn 8'(= a35◂ [ *{ }] )
;	.dlt adt ⊢ _  
; .mov_ptn2 0(<2)◂1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 2'(= a3◂ [ a35◂ [ a17◂ [ a9◂ [ ]{| l |}]]] )
	mov r13,r8
; .mov_ptn 0(<2)◂1(<2)◂0'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 2'(= a3◂ [ a35◂ [ a17◂ [ a9◂ [ ]{| l |}]]] )
	mov rax,r13
	mov rdi,rax
	mov rax,r15
	mov r15,QWORD [r15] 
	mov QWORD [rax],0
	mov BYTE [rax+6],1
	mov QWORD [rax+8],rdi
	mov rdi,rax
	mov rax,r15
	mov r15,QWORD [r15] 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,24
	jmp LB_2516
LB_2516:
	cmp BYTE [r8+6],0
	jnz LB_2434
	pop r14
	pop r9
	add rsp,8
	pop r13
	ret
LB_2434:
	mov r9,QWORD [rsp+8]
	mov r14,QWORD [rsp+16]
	mov r13,QWORD [rsp+24]
	jmp LB_2522
LB_2521:
	add r14,1 
LB_2522:
	cmp r14,r9
	jge LB_2523
	JZ_SPC BYTE [r13+8+r14], LB_2521
LB_2523
	call GRM_217
	cmp BYTE [r8+6],0
	jnz LB_2526
	jmp LB_2527
LB_2526:
	jmp LB_2524
LB_2527:
	sub rsp,8
	mov r8,[r8+8]
; .mov_ptn2 2'(= a35◂ [ *{ }] ) ⊢ 8'(= a35◂ [ *{ }] )
; .mov_ptn 2'(= a35◂ [ *{ }] ) ⊢ 8'(= a35◂ [ *{ }] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_2525
LB_2524:
	add rsp,0
	jmp LB_2520
LB_2525:
	jmp LB_2529
LB_2528:
	add r14,1 
LB_2529:
	cmp r14,r9
	jge LB_2530
	JZ_SPC BYTE [r13+8+r14], LB_2528
LB_2530
	lea rax,[r14+2]
	cmp rax,r9
	jg LB_2533
	jmp LB_2534
LB_2533:
	mov r8,unt_1
	jmp LB_2531
LB_2534:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],194
	jnz LB_2535
	cmp BYTE [rdi+1],187
	jnz LB_2535
	jmp LB_2536
LB_2535:
	mov r8,unt_1
	jmp LB_2531
LB_2536:
	add r14,2
	jmp LB_2532
LB_2531:
	add rsp,8
	jmp LB_2520
LB_2532:
	jmp LB_2538
LB_2537:
	add r14,1 
LB_2538:
	cmp r14,r9
	jge LB_2539
	JZ_SPC BYTE [r13+8+r14], LB_2537
LB_2539
	call GRM_232
	cmp BYTE [r8+6],0
	jnz LB_2542
	jmp LB_2543
LB_2542:
	jmp LB_2540
LB_2543:
	sub rsp,8
	mov r8,[r8+8]
; .mov_ptn2 2'(= a19◂ [ a9◂ [ ]{| l |}] ) ⊢ 9'(= a19◂ [ a9◂ [ ]{| l |}] )
; .mov_ptn 2'(= a19◂ [ a9◂ [ ]{| l |}] ) ⊢ 9'(= a19◂ [ a9◂ [ ]{| l |}] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_2541
LB_2540:
	add rsp,8
	pop rdi
	pop r9 
	pop r14
	pop r13
	ret
LB_2541:
	jmp LB_2545
LB_2544:
	add r14,1 
LB_2545:
	cmp r14,r9
	jge LB_2546
	JZ_SPC BYTE [r13+8+r14], LB_2544
LB_2546
	call GRM_234
	cmp BYTE [r8+6],0
	jnz LB_2549
	jmp LB_2550
LB_2549:
	jmp LB_2547
LB_2550:
	sub rsp,8
	mov r8,[r8+8]
; .mov_ptn2 2'(= a35◂ [ a17◂ [ a9◂ [ ]{| l |}]] ) ⊢ 10'(= a35◂ [ a17◂ [ a9◂ [ ]{| l |}]] )
; .mov_ptn 2'(= a35◂ [ a17◂ [ a9◂ [ ]{| l |}]] ) ⊢ 10'(= a35◂ [ a17◂ [ a9◂ [ ]{| l |}]] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_2548
LB_2547:
	add rsp,16
	pop rdi
	pop r9 
	pop r14
	pop r13
	ret
LB_2548:
	mov QWORD [rsp+8*3],r14
	mov r13,QWORD [rsp+16+8*3]
	mov r14,QWORD [rsp+8*3]
	jmp LB_2552
LB_2552
;; rsp=3 , %1752~1'(= r ) %1751~0'(= r ) %1750~10'(= a35◂ [ a17◂ [ a9◂ [ ]{| l |}]] ) %1749~9'(= a19◂ [ a9◂ [ ]{| l |}] ) %1748~8'(= a35◂ [ *{ }] ) 
;; ? 10'(= a35◂ [ a17◂ [ a9◂ [ ]{| l |}]] ) ⊢ 0(<2)◂2'(= a17◂ [ a9◂ [ ]{| l |}] )
	mov rdi,QWORD [rsp-8+8*1]
	cmp BYTE [rdi+6],0
	jnz LB_2553
	mov rax,QWORD [rdi+8]
	mov r8,rax
;; rsp=3 , %1754~2'(= a17◂ [ a9◂ [ ]{| l |}] ) %1752~1'(= r ) %1751~0'(= r ) %1749~9'(= a19◂ [ a9◂ [ ]{| l |}] ) %1748~8'(= a35◂ [ *{ }] ) 
;; ?; 9'(= a19◂ [ a9◂ [ ]{| l |}] ) ⊢ 2(<4)◂{ 3'(= a11◂ [ a9◂ [ ]] ) 4'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) 5'(= a8◂ [ a13◂ [ {| l |}]] ) }
	mov rdi,QWORD [rsp-8+8*2]
	cmp BYTE [rdi+6],2
	jnz LB_2554
	mov rdi,QWORD [rsp-8+8*2]
	mov rdi,QWORD [rdi+8+8*0]
	mov r9,rdi
	mov rdi,QWORD [rsp-8+8*2]
	mov rdi,QWORD [rdi+8+8*1]
	mov r10,rdi
	mov rdi,QWORD [rsp-8+8*2]
	mov rdi,QWORD [rdi+8+8*2]
	mov r11,rdi
;; rsp=3 , %1757~5'(= a8◂ [ a13◂ [ {| l |}]] ) %1756~4'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) %1755~3'(= a11◂ [ a9◂ [ ]] ) %1754~2'(= a17◂ [ a9◂ [ ]{| l |}] ) %1752~1'(= r ) %1751~0'(= r ) %1748~8'(= a35◂ [ *{ }] ) 
; #92 3'(= a11◂ [ a9◂ [ ]] ) ⊢ 0(<2)◂3'(= a11◂ [ a9◂ [ ]] )
;; rsp=3 , %1758~0(<2)◂3'(= a11◂ [ a9◂ [ ]] ) %1757~5'(= a8◂ [ a13◂ [ {| l |}]] ) %1756~4'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) %1754~2'(= a17◂ [ a9◂ [ ]{| l |}] ) %1752~1'(= r ) %1751~0'(= r ) %1748~8'(= a35◂ [ *{ }] ) 
; #78 0(<2)◂3'(= a11◂ [ a9◂ [ ]] ) ⊢ 1(<2)◂0(<2)◂3'(= a11◂ [ a9◂ [ ]] )
;; rsp=3 , %1759~1(<2)◂0(<2)◂3'(= a11◂ [ a9◂ [ ]] ) %1757~5'(= a8◂ [ a13◂ [ {| l |}]] ) %1756~4'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) %1754~2'(= a17◂ [ a9◂ [ ]{| l |}] ) %1752~1'(= r ) %1751~0'(= r ) %1748~8'(= a35◂ [ *{ }] ) 
; #20 { } ⊢ 1(<2)◂{ }
;; rsp=3 , %1760~1(<2)◂{ } %1759~1(<2)◂0(<2)◂3'(= a11◂ [ a9◂ [ ]] ) %1757~5'(= a8◂ [ a13◂ [ {| l |}]] ) %1756~4'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) %1754~2'(= a17◂ [ a9◂ [ ]{| l |}] ) %1752~1'(= r ) %1751~0'(= r ) %1748~8'(= a35◂ [ *{ }] ) 
; #21 { 5'(= a8◂ [ a13◂ [ {| l |}]] ) 1(<2)◂{ } } ⊢ 0(<2)◂{ 5'(= a8◂ [ a13◂ [ {| l |}]] ) 1(<2)◂{ } }
;; rsp=3 , %1761~0(<2)◂{ 5'(= a8◂ [ a13◂ [ {| l |}]] ) 1(<2)◂{ } } %1759~1(<2)◂0(<2)◂3'(= a11◂ [ a9◂ [ ]] ) %1756~4'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) %1754~2'(= a17◂ [ a9◂ [ ]{| l |}] ) %1752~1'(= r ) %1751~0'(= r ) %1748~8'(= a35◂ [ *{ }] ) 
; #123 { 0(<2)◂{ 5'(= a8◂ [ a13◂ [ {| l |}]] ) 1(<2)◂{ } } 2'(= a17◂ [ a9◂ [ ]{| l |}] ) } ⊢ 1(<2)◂{ 0(<2)◂{ 5'(= a8◂ [ a13◂ [ {| l |}]] ) 1(<2)◂{ } } 2'(= a17◂ [ a9◂ [ ]{| l |}] ) }
;; rsp=3 , %1762~1(<2)◂{ 0(<2)◂{ 5'(= a8◂ [ a13◂ [ {| l |}]] ) 1(<2)◂{ } } 2'(= a17◂ [ a9◂ [ ]{| l |}] ) } %1759~1(<2)◂0(<2)◂3'(= a11◂ [ a9◂ [ ]] ) %1756~4'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) %1752~1'(= r ) %1751~0'(= r ) %1748~8'(= a35◂ [ *{ }] ) 
; #127 { 1(<2)◂0(<2)◂3'(= a11◂ [ a9◂ [ ]] ) 1(<2)◂{ 0(<2)◂{ 5'(= a8◂ [ a13◂ [ {| l |}]] ) 1(<2)◂{ } } 2'(= a17◂ [ a9◂ [ ]{| l |}] ) } } ⊢ 4(<7)◂{ 1(<2)◂0(<2)◂3'(= a11◂ [ a9◂ [ ]] ) 1(<2)◂{ 0(<2)◂{ 5'(= a8◂ [ a13◂ [ {| l |}]] ) 1(<2)◂{ } } 2'(= a17◂ [ a9◂ [ ]{| l |}] ) } }
;; rsp=3 , %1763~4(<7)◂{ 1(<2)◂0(<2)◂3'(= a11◂ [ a9◂ [ ]] ) 1(<2)◂{ 0(<2)◂{ 5'(= a8◂ [ a13◂ [ {| l |}]] ) 1(<2)◂{ } } 2'(= a17◂ [ a9◂ [ ]{| l |}] ) } } %1756~4'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) %1752~1'(= r ) %1751~0'(= r ) %1748~8'(= a35◂ [ *{ }] ) 
; #193 4(<7)◂{ 1(<2)◂0(<2)◂3'(= a11◂ [ a9◂ [ ]] ) 1(<2)◂{ 0(<2)◂{ 5'(= a8◂ [ a13◂ [ {| l |}]] ) 1(<2)◂{ } } 2'(= a17◂ [ a9◂ [ ]{| l |}] ) } } ⊢ 0(<2)◂4(<7)◂{ 1(<2)◂0(<2)◂3'(= a11◂ [ a9◂ [ ]] ) 1(<2)◂{ 0(<2)◂{ 5'(= a8◂ [ a13◂ [ {| l |}]] ) 1(<2)◂{ } } 2'(= a17◂ [ a9◂ [ ]{| l |}] ) } }
;; rsp=3 , %1764~0(<2)◂4(<7)◂{ 1(<2)◂0(<2)◂3'(= a11◂ [ a9◂ [ ]] ) 1(<2)◂{ 0(<2)◂{ 5'(= a8◂ [ a13◂ [ {| l |}]] ) 1(<2)◂{ } } 2'(= a17◂ [ a9◂ [ ]{| l |}] ) } } %1756~4'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) %1752~1'(= r ) %1751~0'(= r ) %1748~8'(= a35◂ [ *{ }] ) 
; #22 0(<2)◂4(<7)◂{ 1(<2)◂0(<2)◂3'(= a11◂ [ a9◂ [ ]] ) 1(<2)◂{ 0(<2)◂{ 5'(= a8◂ [ a13◂ [ {| l |}]] ) 1(<2)◂{ } } 2'(= a17◂ [ a9◂ [ ]{| l |}] ) } } ⊢ 0(<2)◂0(<2)◂4(<7)◂{ 1(<2)◂0(<2)◂3'(= a11◂ [ a9◂ [ ]] ) 1(<2)◂{ 0(<2)◂{ 5'(= a8◂ [ a13◂ [ {| l |}]] ) 1(<2)◂{ } } 2'(= a17◂ [ a9◂ [ ]{| l |}] ) } }
;; rsp=3 , %1765~0(<2)◂0(<2)◂4(<7)◂{ 1(<2)◂0(<2)◂3'(= a11◂ [ a9◂ [ ]] ) 1(<2)◂{ 0(<2)◂{ 5'(= a8◂ [ a13◂ [ {| l |}]] ) 1(<2)◂{ } } 2'(= a17◂ [ a9◂ [ ]{| l |}] ) } } %1756~4'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) %1752~1'(= r ) %1751~0'(= r ) %1748~8'(= a35◂ [ *{ }] ) 
; ∎ 0(<2)◂0(<2)◂4(<7)◂{ 1(<2)◂0(<2)◂3'(= a11◂ [ a9◂ [ ]] ) 1(<2)◂{ 0(<2)◂{ 5'(= a8◂ [ a13◂ [ {| l |}]] ) 1(<2)◂{ } } 2'(= a17◂ [ a9◂ [ ]{| l |}] ) } }
; .dlt.ptn 4'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] )
;	.dlt adt ⊢ _  
; .dlt.ptn 1'(= r )
; .dlt.ptn 0'(= r )
; .dlt.ptn 8'(= a35◂ [ *{ }] )
;	.dlt adt ⊢ _  
; .mov_ptn2 0(<2)◂0(<2)◂4(<7)◂{ 1(<2)◂0(<2)◂3'(= a11◂ [ a9◂ [ ]] ) 1(<2)◂{ 0(<2)◂{ 5'(= a8◂ [ a13◂ [ {| l |}]] ) 1(<2)◂{ } } 2'(= a17◂ [ a9◂ [ ]{| l |}] ) } } ⊢ 2'(= a3◂ [ a35◂ [ a17◂ [ a9◂ [ ]{| l |}]]] )
	mov r13,r8
; .mov_ptn 0(<2)◂0(<2)◂4(<7)◂{ 1(<2)◂0(<2)◂3'(= a11◂ [ a9◂ [ ]] ) 1(<2)◂{ 0(<2)◂{ 5'(= a8◂ [ a13◂ [ {| l |}]] ) 1(<2)◂{ } } 0'(= a17◂ [ a9◂ [ ]{| l |}] ) } } ⊢ 2'(= a3◂ [ a35◂ [ a17◂ [ a9◂ [ ]{| l |}]]] )
	mov rax,[SS_RCD_2_TOP]
	mov rsi,[rax] 
	mov QWORD [SS_RCD_2_TOP],rsi
	mov QWORD [rax],0
	mov r14,rax
	mov rax,r9
	mov rdi,rax
	mov rax,r15
	mov r15,QWORD [r15] 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov rdi,rax
	mov rax,r15
	mov r15,QWORD [r15] 
	mov QWORD [rax],0
	mov BYTE [rax+6],1
	mov QWORD [rax+8],rdi
	mov QWORD [r14+8+8*0],rax
	mov rax,[SS_RCD_2_TOP]
	mov rsi,[rax] 
	mov QWORD [SS_RCD_2_TOP],rsi
	mov QWORD [rax],0
	mov r10,rax
	mov rax,[SS_RCD_2_TOP]
	mov rsi,[rax] 
	mov QWORD [SS_RCD_2_TOP],rsi
	mov QWORD [rax],0
	mov rcx,rax
	mov rax,r11
	mov QWORD [rcx+8+8*0],rax
	mov rax,unt 
	mov rax,unt_1
	mov QWORD [rcx+8+8*1],rax
	mov rax,rcx
	mov BYTE [rax+6],0
	mov QWORD [r10+8+8*0],rax
	mov rax,r13
	mov QWORD [r10+8+8*1],rax
	mov rax,r10
	mov BYTE [rax+6],1
	mov QWORD [r14+8+8*1],rax
	mov rax,r14
	mov BYTE [rax+6],4
	mov rdi,rax
	mov rax,r15
	mov r15,QWORD [r15] 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov rdi,rax
	mov rax,r15
	mov r15,QWORD [r15] 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,24
	jmp LB_2551
LB_2554:
;; rsp=3 , %1754~2'(= a17◂ [ a9◂ [ ]{| l |}] ) %1752~1'(= r ) %1751~0'(= r ) %1749~9'(= a19◂ [ a9◂ [ ]{| l |}] ) %1748~8'(= a35◂ [ *{ }] ) 
; #129 { 9'(= a19◂ [ a9◂ [ ]{| l |}] ) 2'(= a17◂ [ a9◂ [ ]{| l |}] ) } ⊢ 2(<7)◂{ 9'(= a19◂ [ a9◂ [ ]{| l |}] ) 2'(= a17◂ [ a9◂ [ ]{| l |}] ) }
;; rsp=3 , %1766~2(<7)◂{ 9'(= a19◂ [ a9◂ [ ]{| l |}] ) 2'(= a17◂ [ a9◂ [ ]{| l |}] ) } %1752~1'(= r ) %1751~0'(= r ) %1748~8'(= a35◂ [ *{ }] ) 
; #193 2(<7)◂{ 9'(= a19◂ [ a9◂ [ ]{| l |}] ) 2'(= a17◂ [ a9◂ [ ]{| l |}] ) } ⊢ 0(<2)◂2(<7)◂{ 9'(= a19◂ [ a9◂ [ ]{| l |}] ) 2'(= a17◂ [ a9◂ [ ]{| l |}] ) }
;; rsp=3 , %1767~0(<2)◂2(<7)◂{ 9'(= a19◂ [ a9◂ [ ]{| l |}] ) 2'(= a17◂ [ a9◂ [ ]{| l |}] ) } %1752~1'(= r ) %1751~0'(= r ) %1748~8'(= a35◂ [ *{ }] ) 
; #22 0(<2)◂2(<7)◂{ 9'(= a19◂ [ a9◂ [ ]{| l |}] ) 2'(= a17◂ [ a9◂ [ ]{| l |}] ) } ⊢ 0(<2)◂0(<2)◂2(<7)◂{ 9'(= a19◂ [ a9◂ [ ]{| l |}] ) 2'(= a17◂ [ a9◂ [ ]{| l |}] ) }
;; rsp=3 , %1768~0(<2)◂0(<2)◂2(<7)◂{ 9'(= a19◂ [ a9◂ [ ]{| l |}] ) 2'(= a17◂ [ a9◂ [ ]{| l |}] ) } %1752~1'(= r ) %1751~0'(= r ) %1748~8'(= a35◂ [ *{ }] ) 
; ∎ 0(<2)◂0(<2)◂2(<7)◂{ 9'(= a19◂ [ a9◂ [ ]{| l |}] ) 2'(= a17◂ [ a9◂ [ ]{| l |}] ) }
; .dlt.ptn 1'(= r )
; .dlt.ptn 0'(= r )
; .dlt.ptn 8'(= a35◂ [ *{ }] )
;	.dlt adt ⊢ _  
; .mov_ptn2 0(<2)◂0(<2)◂2(<7)◂{ 9'(= a19◂ [ a9◂ [ ]{| l |}] ) 2'(= a17◂ [ a9◂ [ ]{| l |}] ) } ⊢ 2'(= a3◂ [ a35◂ [ a17◂ [ a9◂ [ ]{| l |}]]] )
	mov r13,r8
; .mov_ptn 0(<2)◂0(<2)◂2(<7)◂{ 9'(= a19◂ [ a9◂ [ ]{| l |}] ) 0'(= a17◂ [ a9◂ [ ]{| l |}] ) } ⊢ 2'(= a3◂ [ a35◂ [ a17◂ [ a9◂ [ ]{| l |}]]] )
	mov rax,[SS_RCD_2_TOP]
	mov rsi,[rax] 
	mov QWORD [SS_RCD_2_TOP],rsi
	mov QWORD [rax],0
	mov r14,rax
	mov rax,QWORD [rsp-8+8*2]
	mov QWORD [r14+8+8*0],rax
	mov rax,r13
	mov QWORD [r14+8+8*1],rax
	mov rax,r14
	mov BYTE [rax+6],2
	mov rdi,rax
	mov rax,r15
	mov r15,QWORD [r15] 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov rdi,rax
	mov rax,r15
	mov r15,QWORD [r15] 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,24
	jmp LB_2551
LB_2553:
;; ?. 10'(= a35◂ [ a17◂ [ a9◂ [ ]{| l |}]] ) ⊢ 1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] )
	mov rax,QWORD [rdi+8]
	mov r8,rax
;; rsp=3 , %1753~2'(= a2◂ [ *{ rr{| l |}}] ) %1752~1'(= r ) %1751~0'(= r ) %1749~9'(= a19◂ [ a9◂ [ ]{| l |}] ) %1748~8'(= a35◂ [ *{ }] ) 
; #192 2'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] )
;; rsp=3 , %1769~1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] ) %1752~1'(= r ) %1751~0'(= r ) %1749~9'(= a19◂ [ a9◂ [ ]{| l |}] ) %1748~8'(= a35◂ [ *{ }] ) 
; #22 1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 0(<2)◂1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] )
;; rsp=3 , %1770~0(<2)◂1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] ) %1752~1'(= r ) %1751~0'(= r ) %1749~9'(= a19◂ [ a9◂ [ ]{| l |}] ) %1748~8'(= a35◂ [ *{ }] ) 
; ∎ 0(<2)◂1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] )
; .dlt.ptn 1'(= r )
; .dlt.ptn 0'(= r )
; .dlt.ptn 9'(= a19◂ [ a9◂ [ ]{| l |}] )
;	.dlt adt ⊢ _  
; .dlt.ptn 8'(= a35◂ [ *{ }] )
;	.dlt adt ⊢ _  
; .mov_ptn2 0(<2)◂1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 2'(= a3◂ [ a35◂ [ a17◂ [ a9◂ [ ]{| l |}]]] )
	mov r13,r8
; .mov_ptn 0(<2)◂1(<2)◂0'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 2'(= a3◂ [ a35◂ [ a17◂ [ a9◂ [ ]{| l |}]]] )
	mov rax,r13
	mov rdi,rax
	mov rax,r15
	mov r15,QWORD [r15] 
	mov QWORD [rax],0
	mov BYTE [rax+6],1
	mov QWORD [rax+8],rdi
	mov rdi,rax
	mov rax,r15
	mov r15,QWORD [r15] 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,24
	jmp LB_2551
LB_2551:
	cmp BYTE [r8+6],0
	jnz LB_2520
	pop r14
	pop r9
	add rsp,8
	pop r13
	ret
LB_2520:
	mov r9,QWORD [rsp+8]
	mov r14,QWORD [rsp+16]
	mov r13,QWORD [rsp+24]
	jmp LB_2557
LB_2556:
	add r14,1 
LB_2557:
	cmp r14,r9
	jge LB_2558
	JZ_LINE_SPC BYTE [r13+8+r14], LB_2556
LB_2558
	call GRM_217
	cmp BYTE [r8+6],0
	jnz LB_2561
	jmp LB_2562
LB_2561:
	jmp LB_2559
LB_2562:
	sub rsp,8
	mov r8,[r8+8]
; .mov_ptn2 2'(= a35◂ [ *{ }] ) ⊢ 8'(= a35◂ [ *{ }] )
; .mov_ptn 2'(= a35◂ [ *{ }] ) ⊢ 8'(= a35◂ [ *{ }] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_2560
LB_2559:
	add rsp,0
	jmp LB_2555
LB_2560:
	jmp LB_2564
LB_2563:
	add r14,1 
LB_2564:
	cmp r14,r9
	jge LB_2565
	JZ_LINE_SPC BYTE [r13+8+r14], LB_2563
LB_2565
	call GRM_189
	cmp BYTE [r8+6],0
	jnz LB_2568
	jmp LB_2569
LB_2568:
	jmp LB_2566
LB_2569:
	sub rsp,8
	mov r8,[r8+8]
; .mov_ptn2 2'(= a9◂ [ ] ) ⊢ 9'(= a9◂ [ ] )
; .mov_ptn 2'(= a9◂ [ ] ) ⊢ 9'(= a9◂ [ ] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_2567
LB_2566:
	add rsp,8
	jmp LB_2555
LB_2567:
	jmp LB_2571
LB_2570:
	add r14,1 
LB_2571:
	cmp r14,r9
	jge LB_2572
	JZ_LINE_SPC BYTE [r13+8+r14], LB_2570
LB_2572
	call GRM_201
	cmp BYTE [r8+6],0
	jnz LB_2575
	jmp LB_2576
LB_2575:
	jmp LB_2573
LB_2576:
	sub rsp,8
	mov r8,[r8+8]
; .mov_ptn2 2'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) ⊢ 10'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] )
; .mov_ptn 2'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) ⊢ 10'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_2574
LB_2573:
	add rsp,16
	jmp LB_2555
LB_2574:
	sub rsp,32
	mov QWORD [rsp+24],r13
	mov QWORD [rsp+16],r14 
	mov QWORD [rsp+8],r9
	jmp LB_2580
LB_2579:
	add r14,1 
LB_2580:
	cmp r14,r9
	jge LB_2581
	JZ_SPC BYTE [r13+8+r14], LB_2579
LB_2581
	lea rax,[r14+4]
	cmp rax,r9
	jg LB_2584
	jmp LB_2585
LB_2584:
	mov r8,unt_1
	jmp LB_2582
LB_2585:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],226
	jnz LB_2586
	cmp BYTE [rdi+1],138
	jnz LB_2586
	cmp BYTE [rdi+2],162
	jnz LB_2586
	cmp BYTE [rdi+3],124
	jnz LB_2586
	jmp LB_2587
LB_2586:
	mov r8,unt_1
	jmp LB_2582
LB_2587:
	add r14,4
	jmp LB_2583
LB_2582:
	add rsp,0
	jmp LB_2578
LB_2583:
	mov QWORD [rsp+8*0],r14
	mov r13,QWORD [rsp+16+8*0]
	mov r14,QWORD [rsp+8*0]
	jmp LB_2589
LB_2589
;; rsp=0 , %1777~1'(= r ) %1776~0'(= r ) 
; #23 { } ⊢ 1(<2)◂{ }
;; rsp=0 , %1778~1(<2)◂{ } %1777~1'(= r ) %1776~0'(= r ) 
; #193 1(<2)◂{ } ⊢ 0(<2)◂1(<2)◂{ }
;; rsp=0 , %1779~0(<2)◂1(<2)◂{ } %1777~1'(= r ) %1776~0'(= r ) 
; #22 0(<2)◂1(<2)◂{ } ⊢ 0(<2)◂0(<2)◂1(<2)◂{ }
;; rsp=0 , %1780~0(<2)◂0(<2)◂1(<2)◂{ } %1777~1'(= r ) %1776~0'(= r ) 
; ∎ 0(<2)◂0(<2)◂1(<2)◂{ }
; .dlt.ptn 1'(= r )
; .dlt.ptn 0'(= r )
; .mov_ptn2 0(<2)◂0(<2)◂1(<2)◂{ } ⊢ 2'(= a3◂ [ a35◂ [ a3◂ [ *{ a8◂ [ a13◂ [ {| l |}]]a17◂ [ a9◂ [ ]{| l |}]}]]] )
; .mov_ptn 0(<2)◂0(<2)◂1(<2)◂{ } ⊢ 2'(= a3◂ [ a35◂ [ a3◂ [ *{ a8◂ [ a13◂ [ {| l |}]]a17◂ [ a9◂ [ ]{| l |}]}]]] )
	mov rax,unt 
	mov rax,unt_1
	mov rdi,rax
	mov rax,r15
	mov r15,QWORD [r15] 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov rdi,rax
	mov rax,r15
	mov r15,QWORD [r15] 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	jmp LB_2588
LB_2588:
	cmp BYTE [r8+6],0
	jnz LB_2578
	pop r14
	pop r9
	add rsp,8
	pop r13
	jmp LB_2577
LB_2578:
	mov r9,QWORD [rsp+8]
	mov r14,QWORD [rsp+16]
	mov r13,QWORD [rsp+24]
	jmp LB_2592
LB_2591:
	add r14,1 
LB_2592:
	cmp r14,r9
	jge LB_2593
	JZ_LINE_SPC BYTE [r13+8+r14], LB_2591
LB_2593
	lea rax,[r14+3]
	cmp rax,r9
	jg LB_2596
	jmp LB_2597
LB_2596:
	mov r8,unt_1
	jmp LB_2594
LB_2597:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],226
	jnz LB_2598
	cmp BYTE [rdi+1],138
	jnz LB_2598
	cmp BYTE [rdi+2],162
	jnz LB_2598
	jmp LB_2599
LB_2598:
	mov r8,unt_1
	jmp LB_2594
LB_2599:
	add r14,3
	jmp LB_2595
LB_2594:
	add rsp,0
	jmp LB_2590
LB_2595:
	jmp LB_2601
LB_2600:
	add r14,1 
LB_2601:
	cmp r14,r9
	jge LB_2602
	JZ_LINE_SPC BYTE [r13+8+r14], LB_2600
LB_2602
	call GRM_205
	cmp BYTE [r8+6],0
	jnz LB_2605
	jmp LB_2606
LB_2605:
	jmp LB_2603
LB_2606:
	sub rsp,8
	mov r8,[r8+8]
; .mov_ptn2 2'(= a8◂ [ a13◂ [ {| l |}]] ) ⊢ 8'(= a8◂ [ a13◂ [ {| l |}]] )
; .mov_ptn 2'(= a8◂ [ a13◂ [ {| l |}]] ) ⊢ 8'(= a8◂ [ a13◂ [ {| l |}]] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_2604
LB_2603:
	add rsp,0
	pop rdi
	pop r9 
	pop r14
	pop r13
	jmp LB_2577
LB_2604:
	jmp LB_2608
LB_2607:
	add r14,1 
LB_2608:
	cmp r14,r9
	jge LB_2609
	JZ_LINE_SPC BYTE [r13+8+r14], LB_2607
LB_2609
	lea rax,[r14+1]
	cmp rax,r9
	jg LB_2612
	jmp LB_2613
LB_2612:
	mov r8,unt_1
	jmp LB_2610
LB_2613:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],10
	jnz LB_2614
	jmp LB_2615
LB_2614:
	mov r8,unt_1
	jmp LB_2610
LB_2615:
	add r14,1
	jmp LB_2611
LB_2610:
	add rsp,8
	pop rdi
	pop r9 
	pop r14
	pop r13
	jmp LB_2577
LB_2611:
	jmp LB_2617
LB_2616:
	add r14,1 
LB_2617:
	cmp r14,r9
	jge LB_2618
	JZ_LINE_SPC BYTE [r13+8+r14], LB_2616
LB_2618
	call GRM_234
	cmp BYTE [r8+6],0
	jnz LB_2621
	jmp LB_2622
LB_2621:
	jmp LB_2619
LB_2622:
	sub rsp,8
	mov r8,[r8+8]
; .mov_ptn2 2'(= a35◂ [ a17◂ [ a9◂ [ ]{| l |}]] ) ⊢ 9'(= a35◂ [ a17◂ [ a9◂ [ ]{| l |}]] )
; .mov_ptn 2'(= a35◂ [ a17◂ [ a9◂ [ ]{| l |}]] ) ⊢ 9'(= a35◂ [ a17◂ [ a9◂ [ ]{| l |}]] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_2620
LB_2619:
	add rsp,8
	pop rdi
	pop r9 
	pop r14
	pop r13
	jmp LB_2577
LB_2620:
	mov QWORD [rsp+8*2],r14
	mov r13,QWORD [rsp+16+8*2]
	mov r14,QWORD [rsp+8*2]
	jmp LB_2624
LB_2624
;; rsp=2 , %1784~1'(= r ) %1783~0'(= r ) %1782~9'(= a35◂ [ a17◂ [ a9◂ [ ]{| l |}]] ) %1781~8'(= a8◂ [ a13◂ [ {| l |}]] ) 
;; ? 9'(= a35◂ [ a17◂ [ a9◂ [ ]{| l |}]] ) ⊢ 0(<2)◂2'(= a17◂ [ a9◂ [ ]{| l |}] )
	mov rdi,QWORD [rsp-8+8*1]
	cmp BYTE [rdi+6],0
	jnz LB_2625
	mov rax,QWORD [rdi+8]
	mov r8,rax
;; rsp=2 , %1786~2'(= a17◂ [ a9◂ [ ]{| l |}] ) %1784~1'(= r ) %1783~0'(= r ) %1781~8'(= a8◂ [ a13◂ [ {| l |}]] ) 
; #22 { 8'(= a8◂ [ a13◂ [ {| l |}]] ) 2'(= a17◂ [ a9◂ [ ]{| l |}] ) } ⊢ 0(<2)◂{ 8'(= a8◂ [ a13◂ [ {| l |}]] ) 2'(= a17◂ [ a9◂ [ ]{| l |}] ) }
;; rsp=2 , %1787~0(<2)◂{ 8'(= a8◂ [ a13◂ [ {| l |}]] ) 2'(= a17◂ [ a9◂ [ ]{| l |}] ) } %1784~1'(= r ) %1783~0'(= r ) 
; #193 0(<2)◂{ 8'(= a8◂ [ a13◂ [ {| l |}]] ) 2'(= a17◂ [ a9◂ [ ]{| l |}] ) } ⊢ 0(<2)◂0(<2)◂{ 8'(= a8◂ [ a13◂ [ {| l |}]] ) 2'(= a17◂ [ a9◂ [ ]{| l |}] ) }
;; rsp=2 , %1788~0(<2)◂0(<2)◂{ 8'(= a8◂ [ a13◂ [ {| l |}]] ) 2'(= a17◂ [ a9◂ [ ]{| l |}] ) } %1784~1'(= r ) %1783~0'(= r ) 
; #22 0(<2)◂0(<2)◂{ 8'(= a8◂ [ a13◂ [ {| l |}]] ) 2'(= a17◂ [ a9◂ [ ]{| l |}] ) } ⊢ 0(<2)◂0(<2)◂0(<2)◂{ 8'(= a8◂ [ a13◂ [ {| l |}]] ) 2'(= a17◂ [ a9◂ [ ]{| l |}] ) }
;; rsp=2 , %1789~0(<2)◂0(<2)◂0(<2)◂{ 8'(= a8◂ [ a13◂ [ {| l |}]] ) 2'(= a17◂ [ a9◂ [ ]{| l |}] ) } %1784~1'(= r ) %1783~0'(= r ) 
; ∎ 0(<2)◂0(<2)◂0(<2)◂{ 8'(= a8◂ [ a13◂ [ {| l |}]] ) 2'(= a17◂ [ a9◂ [ ]{| l |}] ) }
; .dlt.ptn 1'(= r )
; .dlt.ptn 0'(= r )
; .mov_ptn2 0(<2)◂0(<2)◂0(<2)◂{ 8'(= a8◂ [ a13◂ [ {| l |}]] ) 2'(= a17◂ [ a9◂ [ ]{| l |}] ) } ⊢ 2'(= a3◂ [ a35◂ [ a3◂ [ *{ a8◂ [ a13◂ [ {| l |}]]a17◂ [ a9◂ [ ]{| l |}]}]]] )
	mov r13,r8
; .mov_ptn 0(<2)◂0(<2)◂0(<2)◂{ 8'(= a8◂ [ a13◂ [ {| l |}]] ) 0'(= a17◂ [ a9◂ [ ]{| l |}] ) } ⊢ 2'(= a3◂ [ a35◂ [ a3◂ [ *{ a8◂ [ a13◂ [ {| l |}]]a17◂ [ a9◂ [ ]{| l |}]}]]] )
	mov rax,[SS_RCD_2_TOP]
	mov rsi,[rax] 
	mov QWORD [SS_RCD_2_TOP],rsi
	mov QWORD [rax],0
	mov r14,rax
	mov rax,QWORD [rsp-8+8*2]
	mov QWORD [r14+8+8*0],rax
	mov rax,r13
	mov QWORD [r14+8+8*1],rax
	mov rax,r14
	mov BYTE [rax+6],0
	mov rdi,rax
	mov rax,r15
	mov r15,QWORD [r15] 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov rdi,rax
	mov rax,r15
	mov r15,QWORD [r15] 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,16
	jmp LB_2623
LB_2625:
;; ?. 9'(= a35◂ [ a17◂ [ a9◂ [ ]{| l |}]] ) ⊢ 1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] )
	mov rax,QWORD [rdi+8]
	mov r8,rax
;; rsp=2 , %1785~2'(= a2◂ [ *{ rr{| l |}}] ) %1784~1'(= r ) %1783~0'(= r ) %1781~8'(= a8◂ [ a13◂ [ {| l |}]] ) 
; #192 2'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] )
;; rsp=2 , %1790~1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] ) %1784~1'(= r ) %1783~0'(= r ) %1781~8'(= a8◂ [ a13◂ [ {| l |}]] ) 
; #22 1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 0(<2)◂1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] )
;; rsp=2 , %1791~0(<2)◂1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] ) %1784~1'(= r ) %1783~0'(= r ) %1781~8'(= a8◂ [ a13◂ [ {| l |}]] ) 
; ∎ 0(<2)◂1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] )
; .dlt.ptn 1'(= r )
; .dlt.ptn 0'(= r )
; .dlt.ptn 8'(= a8◂ [ a13◂ [ {| l |}]] )
;	.dlt adt ⊢ _  
; .mov_ptn2 0(<2)◂1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 2'(= a3◂ [ a35◂ [ a3◂ [ *{ a8◂ [ a13◂ [ {| l |}]]a17◂ [ a9◂ [ ]{| l |}]}]]] )
	mov r13,r8
; .mov_ptn 0(<2)◂1(<2)◂0'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 2'(= a3◂ [ a35◂ [ a3◂ [ *{ a8◂ [ a13◂ [ {| l |}]]a17◂ [ a9◂ [ ]{| l |}]}]]] )
	mov rax,r13
	mov rdi,rax
	mov rax,r15
	mov r15,QWORD [r15] 
	mov QWORD [rax],0
	mov BYTE [rax+6],1
	mov QWORD [rax+8],rdi
	mov rdi,rax
	mov rax,r15
	mov r15,QWORD [r15] 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,16
	jmp LB_2623
LB_2623:
	cmp BYTE [r8+6],0
	jnz LB_2590
	pop r14
	pop r9
	add rsp,8
	pop r13
	jmp LB_2577
LB_2590:
	mov r9,QWORD [rsp+8]
	mov r14,QWORD [rsp+16]
	mov r13,QWORD [rsp+24]
	jmp LB_2628
LB_2627:
	add r14,1 
LB_2628:
	cmp r14,r9
	jge LB_2629
	JZ_LINE_SPC BYTE [r13+8+r14], LB_2627
LB_2629
	call GRM_220
	cmp BYTE [r8+6],0
	jnz LB_2632
	jmp LB_2633
LB_2632:
	jmp LB_2630
LB_2633:
	sub rsp,16
; .mov_ptn2 2'(= *{ rr} ) ⊢ { 8'(= r ) 9'(= r ) }
; .mov_ptn 2'(= *{ rr} ) ⊢ { 8'(= r ) 9'(= r ) }
	mov rdi,r8
	mov rdi,QWORD [rdi+8+8*0]
	mov r10,rdi
	mov QWORD [rsp-8+8*2],r10
	mov rdi,r8
	mov rdi,QWORD [rdi+8+8*1]
	mov r11,rdi
	mov QWORD [rsp-8+8*1],r11
	jmp LB_2631
LB_2630:
	add rsp,0
	jmp LB_2626
LB_2631:
	jmp LB_2635
LB_2634:
	add r14,1 
LB_2635:
	cmp r14,r9
	jge LB_2636
	JZ_LINE_SPC BYTE [r13+8+r14], LB_2634
LB_2636
	call GRM_234
	cmp BYTE [r8+6],0
	jnz LB_2639
	jmp LB_2640
LB_2639:
	jmp LB_2637
LB_2640:
	sub rsp,8
	mov r8,[r8+8]
; .mov_ptn2 2'(= a35◂ [ a17◂ [ a9◂ [ ]{| l |}]] ) ⊢ 10'(= a35◂ [ a17◂ [ a9◂ [ ]{| l |}]] )
; .mov_ptn 2'(= a35◂ [ a17◂ [ a9◂ [ ]{| l |}]] ) ⊢ 10'(= a35◂ [ a17◂ [ a9◂ [ ]{| l |}]] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_2638
LB_2637:
	add rsp,16
	jmp LB_2626
LB_2638:
	mov QWORD [rsp+8*3],r14
	mov r13,QWORD [rsp+16+8*3]
	mov r14,QWORD [rsp+8*3]
	jmp LB_2642
LB_2642
;; rsp=3 , %1796~1'(= r ) %1795~0'(= r ) %1794~10'(= a35◂ [ a17◂ [ a9◂ [ ]{| l |}]] ) %1793~9'(= r ) %1792~8'(= r ) 
;; ? 10'(= a35◂ [ a17◂ [ a9◂ [ ]{| l |}]] ) ⊢ 0(<2)◂2'(= a17◂ [ a9◂ [ ]{| l |}] )
	mov rdi,QWORD [rsp-8+8*1]
	cmp BYTE [rdi+6],0
	jnz LB_2643
	mov rax,QWORD [rdi+8]
	mov r8,rax
;; rsp=3 , %1798~2'(= a17◂ [ a9◂ [ ]{| l |}] ) %1796~1'(= r ) %1795~0'(= r ) %1793~9'(= r ) %1792~8'(= r ) 
	jmp LB_2644
LB_2644:
; $ %[ "lc_code 20" ] ⊢ %[ "lc_code 20" ]
;; rsp=3 , %1799~%[ "lc_code 20" ] %1798~2'(= a17◂ [ a9◂ [ ]{| l |}] ) %1796~1'(= r ) %1795~0'(= r ) %1793~9'(= r ) %1792~8'(= r ) 
; #20 { } ⊢ 1(<2)◂{ }
;; rsp=3 , %1800~1(<2)◂{ } %1799~%[ "lc_code 20" ] %1798~2'(= a17◂ [ a9◂ [ ]{| l |}] ) %1796~1'(= r ) %1795~0'(= r ) %1793~9'(= r ) %1792~8'(= r ) 
; #21 { { 8'(= r ) 9'(= r ) %[ "lc_code 20" ] } 1(<2)◂{ } } ⊢ 0(<2)◂{ { 8'(= r ) 9'(= r ) %[ "lc_code 20" ] } 1(<2)◂{ } }
;; rsp=3 , %1801~0(<2)◂{ { 8'(= r ) 9'(= r ) %[ "lc_code 20" ] } 1(<2)◂{ } } %1798~2'(= a17◂ [ a9◂ [ ]{| l |}] ) %1796~1'(= r ) %1795~0'(= r ) 
; #192 0(<2)◂{ { 8'(= r ) 9'(= r ) %[ "lc_code 20" ] } 1(<2)◂{ } } ⊢ 1(<2)◂0(<2)◂{ { 8'(= r ) 9'(= r ) %[ "lc_code 20" ] } 1(<2)◂{ } }
;; rsp=3 , %1802~1(<2)◂0(<2)◂{ { 8'(= r ) 9'(= r ) %[ "lc_code 20" ] } 1(<2)◂{ } } %1798~2'(= a17◂ [ a9◂ [ ]{| l |}] ) %1796~1'(= r ) %1795~0'(= r ) 
; #22 1(<2)◂0(<2)◂{ { 8'(= r ) 9'(= r ) %[ "lc_code 20" ] } 1(<2)◂{ } } ⊢ 0(<2)◂1(<2)◂0(<2)◂{ { 8'(= r ) 9'(= r ) %[ "lc_code 20" ] } 1(<2)◂{ } }
;; rsp=3 , %1803~0(<2)◂1(<2)◂0(<2)◂{ { 8'(= r ) 9'(= r ) %[ "lc_code 20" ] } 1(<2)◂{ } } %1798~2'(= a17◂ [ a9◂ [ ]{| l |}] ) %1796~1'(= r ) %1795~0'(= r ) 
; ∎ 0(<2)◂1(<2)◂0(<2)◂{ { 8'(= r ) 9'(= r ) %[ "lc_code 20" ] } 1(<2)◂{ } }
; .dlt.ptn 2'(= a17◂ [ a9◂ [ ]{| l |}] )
;	.dlt adt ⊢ _  
; .dlt.ptn 1'(= r )
; .dlt.ptn 0'(= r )
; .mov_ptn2 0(<2)◂1(<2)◂0(<2)◂{ { 8'(= r ) 9'(= r ) %[ "lc_code 20" ] } 1(<2)◂{ } } ⊢ 2'(= a3◂ [ a35◂ [ a3◂ [ *{ a8◂ [ a13◂ [ {| l |}]]a17◂ [ a9◂ [ ]{| l |}]}]]] )
; .mov_ptn 0(<2)◂1(<2)◂0(<2)◂{ { 8'(= r ) 9'(= r ) %[ "lc_code 20" ] } 1(<2)◂{ } } ⊢ 2'(= a3◂ [ a35◂ [ a3◂ [ *{ a8◂ [ a13◂ [ {| l |}]]a17◂ [ a9◂ [ ]{| l |}]}]]] )
	mov rax,[SS_RCD_2_TOP]
	mov rsi,[rax] 
	mov QWORD [SS_RCD_2_TOP],rsi
	mov QWORD [rax],0
	mov r13,rax
	mov rax,[SS_RCD_3_TOP]
	mov rsi,[rax] 
	mov QWORD [SS_RCD_3_TOP],rsi
	mov QWORD [rax],0
	mov r14,rax
	mov rax,QWORD [rsp-8+8*3]
	mov QWORD [r14+8+8*0],rax
	mov rax,QWORD [rsp-8+8*2]
	mov QWORD [r14+8+8*1],rax
	mov rsi,1  
	mov rdi,24
	xor rax,rax 
	C_CALL_SF calloc
	mov QWORD [rax],10
	mov BYTE [rax+8+0],108
	mov BYTE [rax+8+1],99
	mov BYTE [rax+8+2],95
	mov BYTE [rax+8+3],99
	mov BYTE [rax+8+4],111
	mov BYTE [rax+8+5],100
	mov BYTE [rax+8+6],101
	mov BYTE [rax+8+7],32
	mov BYTE [rax+8+8],50
	mov BYTE [rax+8+9],48
	mov QWORD [r14+8+8*2],rax
	mov rax,r14
	mov QWORD [r13+8+8*0],rax
	mov rax,unt 
	mov rax,unt_1
	mov QWORD [r13+8+8*1],rax
	mov rax,r13
	mov BYTE [rax+6],0
	mov rdi,rax
	mov rax,r15
	mov r15,QWORD [r15] 
	mov QWORD [rax],0
	mov BYTE [rax+6],1
	mov QWORD [rax+8],rdi
	mov rdi,rax
	mov rax,r15
	mov r15,QWORD [r15] 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,24
	jmp LB_2641
LB_2643:
;; ?. 10'(= a35◂ [ a17◂ [ a9◂ [ ]{| l |}]] ) ⊢ 1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] )
	mov rax,QWORD [rdi+8]
	mov r8,rax
;; rsp=3 , %1797~2'(= a2◂ [ *{ rr{| l |}}] ) %1796~1'(= r ) %1795~0'(= r ) %1793~9'(= r ) %1792~8'(= r ) 
	jmp LB_2645
LB_2645:
; $ %[ "lc_code 21" ] ⊢ %[ "lc_code 21" ]
;; rsp=3 , %1804~%[ "lc_code 21" ] %1797~2'(= a2◂ [ *{ rr{| l |}}] ) %1796~1'(= r ) %1795~0'(= r ) %1793~9'(= r ) %1792~8'(= r ) 
; #21 { { 8'(= r ) 9'(= r ) %[ "lc_code 21" ] } 2'(= a2◂ [ *{ rr{| l |}}] ) } ⊢ 0(<2)◂{ { 8'(= r ) 9'(= r ) %[ "lc_code 21" ] } 2'(= a2◂ [ *{ rr{| l |}}] ) }
;; rsp=3 , %1805~0(<2)◂{ { 8'(= r ) 9'(= r ) %[ "lc_code 21" ] } 2'(= a2◂ [ *{ rr{| l |}}] ) } %1796~1'(= r ) %1795~0'(= r ) 
; #192 0(<2)◂{ { 8'(= r ) 9'(= r ) %[ "lc_code 21" ] } 2'(= a2◂ [ *{ rr{| l |}}] ) } ⊢ 1(<2)◂0(<2)◂{ { 8'(= r ) 9'(= r ) %[ "lc_code 21" ] } 2'(= a2◂ [ *{ rr{| l |}}] ) }
;; rsp=3 , %1806~1(<2)◂0(<2)◂{ { 8'(= r ) 9'(= r ) %[ "lc_code 21" ] } 2'(= a2◂ [ *{ rr{| l |}}] ) } %1796~1'(= r ) %1795~0'(= r ) 
; #22 1(<2)◂0(<2)◂{ { 8'(= r ) 9'(= r ) %[ "lc_code 21" ] } 2'(= a2◂ [ *{ rr{| l |}}] ) } ⊢ 0(<2)◂1(<2)◂0(<2)◂{ { 8'(= r ) 9'(= r ) %[ "lc_code 21" ] } 2'(= a2◂ [ *{ rr{| l |}}] ) }
;; rsp=3 , %1807~0(<2)◂1(<2)◂0(<2)◂{ { 8'(= r ) 9'(= r ) %[ "lc_code 21" ] } 2'(= a2◂ [ *{ rr{| l |}}] ) } %1796~1'(= r ) %1795~0'(= r ) 
; ∎ 0(<2)◂1(<2)◂0(<2)◂{ { 8'(= r ) 9'(= r ) %[ "lc_code 21" ] } 2'(= a2◂ [ *{ rr{| l |}}] ) }
; .dlt.ptn 1'(= r )
; .dlt.ptn 0'(= r )
; .mov_ptn2 0(<2)◂1(<2)◂0(<2)◂{ { 8'(= r ) 9'(= r ) %[ "lc_code 21" ] } 2'(= a2◂ [ *{ rr{| l |}}] ) } ⊢ 2'(= a3◂ [ a35◂ [ a3◂ [ *{ a8◂ [ a13◂ [ {| l |}]]a17◂ [ a9◂ [ ]{| l |}]}]]] )
	mov r13,r8
; .mov_ptn 0(<2)◂1(<2)◂0(<2)◂{ { 8'(= r ) 9'(= r ) %[ "lc_code 21" ] } 0'(= a2◂ [ *{ rr{| l |}}] ) } ⊢ 2'(= a3◂ [ a35◂ [ a3◂ [ *{ a8◂ [ a13◂ [ {| l |}]]a17◂ [ a9◂ [ ]{| l |}]}]]] )
	mov rax,[SS_RCD_2_TOP]
	mov rsi,[rax] 
	mov QWORD [SS_RCD_2_TOP],rsi
	mov QWORD [rax],0
	mov r14,rax
	mov rax,[SS_RCD_3_TOP]
	mov rsi,[rax] 
	mov QWORD [SS_RCD_3_TOP],rsi
	mov QWORD [rax],0
	mov r9,rax
	mov rax,QWORD [rsp-8+8*3]
	mov QWORD [r9+8+8*0],rax
	mov rax,QWORD [rsp-8+8*2]
	mov QWORD [r9+8+8*1],rax
	mov rsi,1  
	mov rdi,24
	xor rax,rax 
	C_CALL_SF calloc
	mov QWORD [rax],10
	mov BYTE [rax+8+0],108
	mov BYTE [rax+8+1],99
	mov BYTE [rax+8+2],95
	mov BYTE [rax+8+3],99
	mov BYTE [rax+8+4],111
	mov BYTE [rax+8+5],100
	mov BYTE [rax+8+6],101
	mov BYTE [rax+8+7],32
	mov BYTE [rax+8+8],50
	mov BYTE [rax+8+9],49
	mov QWORD [r9+8+8*2],rax
	mov rax,r9
	mov QWORD [r14+8+8*0],rax
	mov rax,r13
	mov QWORD [r14+8+8*1],rax
	mov rax,r14
	mov BYTE [rax+6],0
	mov rdi,rax
	mov rax,r15
	mov r15,QWORD [r15] 
	mov QWORD [rax],0
	mov BYTE [rax+6],1
	mov QWORD [rax+8],rdi
	mov rdi,rax
	mov rax,r15
	mov r15,QWORD [r15] 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,24
	jmp LB_2641
LB_2641:
	cmp BYTE [r8+6],0
	jnz LB_2626
	pop r14
	pop r9
	add rsp,8
	pop r13
	jmp LB_2577
LB_2626:
	pop rdi
	pop r9 
	pop r14
	pop r13
	jmp LB_2577
LB_2577:
	cmp BYTE [r8+6],0
	jnz LB_2646
	jmp LB_2647
LB_2646:
	add rsp,24
	add rsp,8
	pop r9 
	pop r14 
	pop r13
	ret
LB_2647:
	mov QWORD [rsp+8*3],r14
	mov r8,[r8+8]
; .mov_ptn2 2'(= a35◂ [ a3◂ [ *{ a8◂ [ a13◂ [ {| l |}]]a17◂ [ a9◂ [ ]{| l |}]}]] ) ⊢ 3'(= a35◂ [ a3◂ [ *{ a8◂ [ a13◂ [ {| l |}]]a17◂ [ a9◂ [ ]{| l |}]}]] )
	mov r10,r9
; .mov_ptn 2'(= a35◂ [ a3◂ [ *{ a8◂ [ a13◂ [ {| l |}]]a17◂ [ a9◂ [ ]{| l |}]}]] ) ⊢ 3'(= a35◂ [ a3◂ [ *{ a8◂ [ a13◂ [ {| l |}]]a17◂ [ a9◂ [ ]{| l |}]}]] )
	mov rax,r8
	mov r9,rax
	mov r13,QWORD [rsp+16+8*3]
	mov r14,QWORD [rsp+8*3]
	jmp LB_2649
LB_2649
;; rsp=3 , %1808~3'(= a35◂ [ a3◂ [ *{ a8◂ [ a13◂ [ {| l |}]]a17◂ [ a9◂ [ ]{| l |}]}]] ) %1775~1'(= r ) %1774~0'(= r ) %1773~10'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) %1772~9'(= a9◂ [ ] ) %1771~8'(= a35◂ [ *{ }] ) 
;; ? 3'(= a35◂ [ a3◂ [ *{ a8◂ [ a13◂ [ {| l |}]]a17◂ [ a9◂ [ ]{| l |}]}]] ) ⊢ 0(<2)◂2'(= a3◂ [ *{ a8◂ [ a13◂ [ {| l |}]]a17◂ [ a9◂ [ ]{| l |}]}] )
	mov rdi,r9
	cmp BYTE [rdi+6],0
	jnz LB_2650
	mov rax,QWORD [rdi+8]
	mov r8,rax
;; rsp=3 , %1810~2'(= a3◂ [ *{ a8◂ [ a13◂ [ {| l |}]]a17◂ [ a9◂ [ ]{| l |}]}] ) %1775~1'(= r ) %1774~0'(= r ) %1773~10'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) %1772~9'(= a9◂ [ ] ) %1771~8'(= a35◂ [ *{ }] ) 
;; ? 2'(= a3◂ [ *{ a8◂ [ a13◂ [ {| l |}]]a17◂ [ a9◂ [ ]{| l |}]}] ) ⊢ 0(<2)◂{ 3'(= a8◂ [ a13◂ [ {| l |}]] ) 4'(= a17◂ [ a9◂ [ ]{| l |}] ) }
	mov rdi,r8
	cmp BYTE [rdi+6],0
	jnz LB_2651
	mov rdi,r8
	mov rdi,QWORD [rdi+8+8*0]
	mov r9,rdi
	mov rdi,r8
	mov rdi,QWORD [rdi+8+8*1]
	mov r10,rdi
;; rsp=3 , %1812~4'(= a17◂ [ a9◂ [ ]{| l |}] ) %1811~3'(= a8◂ [ a13◂ [ {| l |}]] ) %1775~1'(= r ) %1774~0'(= r ) %1773~10'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) %1772~9'(= a9◂ [ ] ) %1771~8'(= a35◂ [ *{ }] ) 
; #122 { 9'(= a9◂ [ ] ) 10'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) 3'(= a8◂ [ a13◂ [ {| l |}]] ) } ⊢ 0(<4)◂{ 9'(= a9◂ [ ] ) 10'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) 3'(= a8◂ [ a13◂ [ {| l |}]] ) }
;; rsp=3 , %1813~0(<4)◂{ 9'(= a9◂ [ ] ) 10'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) 3'(= a8◂ [ a13◂ [ {| l |}]] ) } %1812~4'(= a17◂ [ a9◂ [ ]{| l |}] ) %1775~1'(= r ) %1774~0'(= r ) %1771~8'(= a35◂ [ *{ }] ) 
; #129 { 0(<4)◂{ 9'(= a9◂ [ ] ) 10'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) 3'(= a8◂ [ a13◂ [ {| l |}]] ) } 4'(= a17◂ [ a9◂ [ ]{| l |}] ) } ⊢ 2(<7)◂{ 0(<4)◂{ 9'(= a9◂ [ ] ) 10'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) 3'(= a8◂ [ a13◂ [ {| l |}]] ) } 4'(= a17◂ [ a9◂ [ ]{| l |}] ) }
;; rsp=3 , %1814~2(<7)◂{ 0(<4)◂{ 9'(= a9◂ [ ] ) 10'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) 3'(= a8◂ [ a13◂ [ {| l |}]] ) } 4'(= a17◂ [ a9◂ [ ]{| l |}] ) } %1775~1'(= r ) %1774~0'(= r ) %1771~8'(= a35◂ [ *{ }] ) 
; #193 2(<7)◂{ 0(<4)◂{ 9'(= a9◂ [ ] ) 10'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) 3'(= a8◂ [ a13◂ [ {| l |}]] ) } 4'(= a17◂ [ a9◂ [ ]{| l |}] ) } ⊢ 0(<2)◂2(<7)◂{ 0(<4)◂{ 9'(= a9◂ [ ] ) 10'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) 3'(= a8◂ [ a13◂ [ {| l |}]] ) } 4'(= a17◂ [ a9◂ [ ]{| l |}] ) }
;; rsp=3 , %1815~0(<2)◂2(<7)◂{ 0(<4)◂{ 9'(= a9◂ [ ] ) 10'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) 3'(= a8◂ [ a13◂ [ {| l |}]] ) } 4'(= a17◂ [ a9◂ [ ]{| l |}] ) } %1775~1'(= r ) %1774~0'(= r ) %1771~8'(= a35◂ [ *{ }] ) 
; #22 0(<2)◂2(<7)◂{ 0(<4)◂{ 9'(= a9◂ [ ] ) 10'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) 3'(= a8◂ [ a13◂ [ {| l |}]] ) } 4'(= a17◂ [ a9◂ [ ]{| l |}] ) } ⊢ 0(<2)◂0(<2)◂2(<7)◂{ 0(<4)◂{ 9'(= a9◂ [ ] ) 10'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) 3'(= a8◂ [ a13◂ [ {| l |}]] ) } 4'(= a17◂ [ a9◂ [ ]{| l |}] ) }
;; rsp=3 , %1816~0(<2)◂0(<2)◂2(<7)◂{ 0(<4)◂{ 9'(= a9◂ [ ] ) 10'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) 3'(= a8◂ [ a13◂ [ {| l |}]] ) } 4'(= a17◂ [ a9◂ [ ]{| l |}] ) } %1775~1'(= r ) %1774~0'(= r ) %1771~8'(= a35◂ [ *{ }] ) 
; ∎ 0(<2)◂0(<2)◂2(<7)◂{ 0(<4)◂{ 9'(= a9◂ [ ] ) 10'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) 3'(= a8◂ [ a13◂ [ {| l |}]] ) } 4'(= a17◂ [ a9◂ [ ]{| l |}] ) }
; .dlt.ptn 1'(= r )
; .dlt.ptn 0'(= r )
; .dlt.ptn 8'(= a35◂ [ *{ }] )
;	.dlt adt ⊢ _  
; .mov_ptn2 0(<2)◂0(<2)◂2(<7)◂{ 0(<4)◂{ 9'(= a9◂ [ ] ) 10'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) 3'(= a8◂ [ a13◂ [ {| l |}]] ) } 4'(= a17◂ [ a9◂ [ ]{| l |}] ) } ⊢ 2'(= a3◂ [ a35◂ [ a17◂ [ a9◂ [ ]{| l |}]]] )
; .mov_ptn 0(<2)◂0(<2)◂2(<7)◂{ 0(<4)◂{ 9'(= a9◂ [ ] ) 10'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) 3'(= a8◂ [ a13◂ [ {| l |}]] ) } 4'(= a17◂ [ a9◂ [ ]{| l |}] ) } ⊢ 2'(= a3◂ [ a35◂ [ a17◂ [ a9◂ [ ]{| l |}]]] )
	mov rax,[SS_RCD_2_TOP]
	mov rsi,[rax] 
	mov QWORD [SS_RCD_2_TOP],rsi
	mov QWORD [rax],0
	mov r13,rax
	mov rax,[SS_RCD_3_TOP]
	mov rsi,[rax] 
	mov QWORD [SS_RCD_3_TOP],rsi
	mov QWORD [rax],0
	mov r14,rax
	mov rax,QWORD [rsp-8+8*2]
	mov QWORD [r14+8+8*0],rax
	mov rax,QWORD [rsp-8+8*1]
	mov QWORD [r14+8+8*1],rax
	mov rax,r9
	mov QWORD [r14+8+8*2],rax
	mov rax,r14
	mov BYTE [rax+6],0
	mov QWORD [r13+8+8*0],rax
	mov rax,r10
	mov QWORD [r13+8+8*1],rax
	mov rax,r13
	mov BYTE [rax+6],2
	mov rdi,rax
	mov rax,r15
	mov r15,QWORD [r15] 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov rdi,rax
	mov rax,r15
	mov r15,QWORD [r15] 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,24
	jmp LB_2648
LB_2651:
;; ?. 2'(= a3◂ [ *{ a8◂ [ a13◂ [ {| l |}]]a17◂ [ a9◂ [ ]{| l |}]}] ) ⊢ 1(<2)◂{ }
;; rsp=3 , %1775~1'(= r ) %1774~0'(= r ) %1773~10'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) %1772~9'(= a9◂ [ ] ) %1771~8'(= a35◂ [ *{ }] ) 
; #131 { 9'(= a9◂ [ ] ) 10'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) } ⊢ 0(<7)◂{ 9'(= a9◂ [ ] ) 10'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) }
;; rsp=3 , %1817~0(<7)◂{ 9'(= a9◂ [ ] ) 10'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) } %1775~1'(= r ) %1774~0'(= r ) %1771~8'(= a35◂ [ *{ }] ) 
; #193 0(<7)◂{ 9'(= a9◂ [ ] ) 10'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) } ⊢ 0(<2)◂0(<7)◂{ 9'(= a9◂ [ ] ) 10'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) }
;; rsp=3 , %1818~0(<2)◂0(<7)◂{ 9'(= a9◂ [ ] ) 10'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) } %1775~1'(= r ) %1774~0'(= r ) %1771~8'(= a35◂ [ *{ }] ) 
; #22 0(<2)◂0(<7)◂{ 9'(= a9◂ [ ] ) 10'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) } ⊢ 0(<2)◂0(<2)◂0(<7)◂{ 9'(= a9◂ [ ] ) 10'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) }
;; rsp=3 , %1819~0(<2)◂0(<2)◂0(<7)◂{ 9'(= a9◂ [ ] ) 10'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) } %1775~1'(= r ) %1774~0'(= r ) %1771~8'(= a35◂ [ *{ }] ) 
; ∎ 0(<2)◂0(<2)◂0(<7)◂{ 9'(= a9◂ [ ] ) 10'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) }
; .dlt.ptn 1'(= r )
; .dlt.ptn 0'(= r )
; .dlt.ptn 8'(= a35◂ [ *{ }] )
;	.dlt adt ⊢ _  
; .mov_ptn2 0(<2)◂0(<2)◂0(<7)◂{ 9'(= a9◂ [ ] ) 10'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) } ⊢ 2'(= a3◂ [ a35◂ [ a17◂ [ a9◂ [ ]{| l |}]]] )
; .mov_ptn 0(<2)◂0(<2)◂0(<7)◂{ 9'(= a9◂ [ ] ) 10'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) } ⊢ 2'(= a3◂ [ a35◂ [ a17◂ [ a9◂ [ ]{| l |}]]] )
	mov rax,[SS_RCD_2_TOP]
	mov rsi,[rax] 
	mov QWORD [SS_RCD_2_TOP],rsi
	mov QWORD [rax],0
	mov r13,rax
	mov rax,QWORD [rsp-8+8*2]
	mov QWORD [r13+8+8*0],rax
	mov rax,QWORD [rsp-8+8*1]
	mov QWORD [r13+8+8*1],rax
	mov rax,r13
	mov BYTE [rax+6],0
	mov rdi,rax
	mov rax,r15
	mov r15,QWORD [r15] 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov rdi,rax
	mov rax,r15
	mov r15,QWORD [r15] 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,24
	jmp LB_2648
LB_2650:
;; ?. 3'(= a35◂ [ a3◂ [ *{ a8◂ [ a13◂ [ {| l |}]]a17◂ [ a9◂ [ ]{| l |}]}]] ) ⊢ 1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] )
	mov rax,QWORD [rdi+8]
	mov r8,rax
;; rsp=3 , %1809~2'(= a2◂ [ *{ rr{| l |}}] ) %1775~1'(= r ) %1774~0'(= r ) %1773~10'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) %1772~9'(= a9◂ [ ] ) %1771~8'(= a35◂ [ *{ }] ) 
; #192 2'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] )
;; rsp=3 , %1820~1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] ) %1775~1'(= r ) %1774~0'(= r ) %1773~10'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) %1772~9'(= a9◂ [ ] ) %1771~8'(= a35◂ [ *{ }] ) 
; #22 1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 0(<2)◂1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] )
;; rsp=3 , %1821~0(<2)◂1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] ) %1775~1'(= r ) %1774~0'(= r ) %1773~10'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) %1772~9'(= a9◂ [ ] ) %1771~8'(= a35◂ [ *{ }] ) 
; ∎ 0(<2)◂1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] )
; .dlt.ptn 1'(= r )
; .dlt.ptn 0'(= r )
; .dlt.ptn 10'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] )
;	.dlt adt ⊢ _  
; .dlt.ptn 9'(= a9◂ [ ] )
;	.dlt adt ⊢ _  
; .dlt.ptn 8'(= a35◂ [ *{ }] )
;	.dlt adt ⊢ _  
; .mov_ptn2 0(<2)◂1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 2'(= a3◂ [ a35◂ [ a17◂ [ a9◂ [ ]{| l |}]]] )
	mov r13,r8
; .mov_ptn 0(<2)◂1(<2)◂0'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 2'(= a3◂ [ a35◂ [ a17◂ [ a9◂ [ ]{| l |}]]] )
	mov rax,r13
	mov rdi,rax
	mov rax,r15
	mov r15,QWORD [r15] 
	mov QWORD [rax],0
	mov BYTE [rax+6],1
	mov QWORD [rax+8],rdi
	mov rdi,rax
	mov rax,r15
	mov r15,QWORD [r15] 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,24
	jmp LB_2648
LB_2648:
	cmp BYTE [r8+6],0
	jnz LB_2555
	pop r14
	pop r9
	add rsp,8
	pop r13
	ret
LB_2555:
	mov r9,QWORD [rsp+8]
	mov r14,QWORD [rsp+16]
	mov r13,QWORD [rsp+24]
	jmp LB_2654
LB_2653:
	add r14,1 
LB_2654:
	cmp r14,r9
	jge LB_2655
	JZ_SPC BYTE [r13+8+r14], LB_2653
LB_2655
	call GRM_236
	cmp BYTE [r8+6],0
	jnz LB_2658
	jmp LB_2659
LB_2658:
	jmp LB_2656
LB_2659:
	sub rsp,8
	mov r8,[r8+8]
; .mov_ptn2 2'(= a35◂ [ a7◂ [ *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}]] ) ⊢ 8'(= a35◂ [ a7◂ [ *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}]] )
; .mov_ptn 2'(= a35◂ [ a7◂ [ *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}]] ) ⊢ 8'(= a35◂ [ a7◂ [ *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}]] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_2657
LB_2656:
	add rsp,0
	jmp LB_2652
LB_2657:
	mov QWORD [rsp+8*1],r14
	mov r13,QWORD [rsp+16+8*1]
	mov r14,QWORD [rsp+8*1]
	jmp LB_2661
LB_2661
;; rsp=1 , %1824~1'(= r ) %1823~0'(= r ) %1822~8'(= a35◂ [ a7◂ [ *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}]] ) 
;; ? 8'(= a35◂ [ a7◂ [ *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}]] ) ⊢ 0(<2)◂2'(= a7◂ [ *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}] )
	mov rdi,QWORD [rsp-8+8*1]
	cmp BYTE [rdi+6],0
	jnz LB_2662
	mov rax,QWORD [rdi+8]
	mov r8,rax
;; rsp=1 , %1826~2'(= a7◂ [ *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}] ) %1824~1'(= r ) %1823~0'(= r ) 
; #128 2'(= a7◂ [ *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}] ) ⊢ 3(<7)◂2'(= a7◂ [ *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}] )
;; rsp=1 , %1827~3(<7)◂2'(= a7◂ [ *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}] ) %1824~1'(= r ) %1823~0'(= r ) 
; #193 3(<7)◂2'(= a7◂ [ *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}] ) ⊢ 0(<2)◂3(<7)◂2'(= a7◂ [ *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}] )
;; rsp=1 , %1828~0(<2)◂3(<7)◂2'(= a7◂ [ *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}] ) %1824~1'(= r ) %1823~0'(= r ) 
; #22 0(<2)◂3(<7)◂2'(= a7◂ [ *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}] ) ⊢ 0(<2)◂0(<2)◂3(<7)◂2'(= a7◂ [ *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}] )
;; rsp=1 , %1829~0(<2)◂0(<2)◂3(<7)◂2'(= a7◂ [ *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}] ) %1824~1'(= r ) %1823~0'(= r ) 
; ∎ 0(<2)◂0(<2)◂3(<7)◂2'(= a7◂ [ *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}] )
; .dlt.ptn 1'(= r )
; .dlt.ptn 0'(= r )
; .mov_ptn2 0(<2)◂0(<2)◂3(<7)◂2'(= a7◂ [ *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}] ) ⊢ 2'(= a3◂ [ a35◂ [ a17◂ [ a9◂ [ ]{| l |}]]] )
	mov r13,r8
; .mov_ptn 0(<2)◂0(<2)◂3(<7)◂0'(= a7◂ [ *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}] ) ⊢ 2'(= a3◂ [ a35◂ [ a17◂ [ a9◂ [ ]{| l |}]]] )
	mov rax,r13
	mov rdi,rax
	mov rax,r15
	mov r15,QWORD [r15] 
	mov QWORD [rax],0
	mov BYTE [rax+6],3
	mov QWORD [rax+8],rdi
	mov rdi,rax
	mov rax,r15
	mov r15,QWORD [r15] 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov rdi,rax
	mov rax,r15
	mov r15,QWORD [r15] 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,8
	jmp LB_2660
LB_2662:
;; ?. 8'(= a35◂ [ a7◂ [ *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}]] ) ⊢ 1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] )
	mov rax,QWORD [rdi+8]
	mov r8,rax
;; rsp=1 , %1825~2'(= a2◂ [ *{ rr{| l |}}] ) %1824~1'(= r ) %1823~0'(= r ) 
; #192 2'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] )
;; rsp=1 , %1830~1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] ) %1824~1'(= r ) %1823~0'(= r ) 
; #22 1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 0(<2)◂1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] )
;; rsp=1 , %1831~0(<2)◂1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] ) %1824~1'(= r ) %1823~0'(= r ) 
; ∎ 0(<2)◂1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] )
; .dlt.ptn 1'(= r )
; .dlt.ptn 0'(= r )
; .mov_ptn2 0(<2)◂1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 2'(= a3◂ [ a35◂ [ a17◂ [ a9◂ [ ]{| l |}]]] )
	mov r13,r8
; .mov_ptn 0(<2)◂1(<2)◂0'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 2'(= a3◂ [ a35◂ [ a17◂ [ a9◂ [ ]{| l |}]]] )
	mov rax,r13
	mov rdi,rax
	mov rax,r15
	mov r15,QWORD [r15] 
	mov QWORD [rax],0
	mov BYTE [rax+6],1
	mov QWORD [rax+8],rdi
	mov rdi,rax
	mov rax,r15
	mov r15,QWORD [r15] 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,8
	jmp LB_2660
LB_2660:
	cmp BYTE [r8+6],0
	jnz LB_2652
	pop r14
	pop r9
	add rsp,8
	pop r13
	ret
LB_2652:
	mov r9,QWORD [rsp+8]
	mov r14,QWORD [rsp+16]
	mov r13,QWORD [rsp+24]
	jmp LB_2665
LB_2664:
	add r14,1 
LB_2665:
	cmp r14,r9
	jge LB_2666
	JZ_LINE_SPC BYTE [r13+8+r14], LB_2664
LB_2666
	call GRM_217
	cmp BYTE [r8+6],0
	jnz LB_2669
	jmp LB_2670
LB_2669:
	jmp LB_2667
LB_2670:
	sub rsp,8
	mov r8,[r8+8]
; .mov_ptn2 2'(= a35◂ [ *{ }] ) ⊢ 8'(= a35◂ [ *{ }] )
; .mov_ptn 2'(= a35◂ [ *{ }] ) ⊢ 8'(= a35◂ [ *{ }] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_2668
LB_2667:
	add rsp,0
	jmp LB_2663
LB_2668:
	jmp LB_2672
LB_2671:
	add r14,1 
LB_2672:
	cmp r14,r9
	jge LB_2673
	JZ_LINE_SPC BYTE [r13+8+r14], LB_2671
LB_2673
	lea rax,[r14+1]
	cmp rax,r9
	jg LB_2676
	jmp LB_2677
LB_2676:
	mov r8,unt_1
	jmp LB_2674
LB_2677:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],36
	jnz LB_2678
	jmp LB_2679
LB_2678:
	mov r8,unt_1
	jmp LB_2674
LB_2679:
	add r14,1
	jmp LB_2675
LB_2674:
	add rsp,8
	jmp LB_2663
LB_2675:
	sub rsp,32
	mov QWORD [rsp+24],r13
	mov QWORD [rsp+16],r14 
	mov QWORD [rsp+8],r9
	jmp LB_2683
LB_2682:
	add r14,1 
LB_2683:
	cmp r14,r9
	jge LB_2684
	JZ_LINE_SPC BYTE [r13+8+r14], LB_2682
LB_2684
	call GRM_201
	cmp BYTE [r8+6],0
	jnz LB_2687
	jmp LB_2688
LB_2687:
	jmp LB_2685
LB_2688:
	sub rsp,8
	mov r8,[r8+8]
; .mov_ptn2 2'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) ⊢ 8'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] )
; .mov_ptn 2'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) ⊢ 8'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_2686
LB_2685:
	add rsp,0
	jmp LB_2681
LB_2686:
	jmp LB_2690
LB_2689:
	add r14,1 
LB_2690:
	cmp r14,r9
	jge LB_2691
	JZ_LINE_SPC BYTE [r13+8+r14], LB_2689
LB_2691
	lea rax,[r14+3]
	cmp rax,r9
	jg LB_2694
	jmp LB_2695
LB_2694:
	mov r8,unt_1
	jmp LB_2692
LB_2695:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],226
	jnz LB_2696
	cmp BYTE [rdi+1],138
	jnz LB_2696
	cmp BYTE [rdi+2],162
	jnz LB_2696
	jmp LB_2697
LB_2696:
	mov r8,unt_1
	jmp LB_2692
LB_2697:
	add r14,3
	jmp LB_2693
LB_2692:
	add rsp,8
	jmp LB_2681
LB_2693:
	sub rsp,32
	mov QWORD [rsp+24],r13
	mov QWORD [rsp+16],r14 
	mov QWORD [rsp+8],r9
	jmp LB_2701
LB_2700:
	add r14,1 
LB_2701:
	cmp r14,r9
	jge LB_2702
	JZ_LINE_SPC BYTE [r13+8+r14], LB_2700
LB_2702
	lea rax,[r14+1]
	cmp rax,r9
	jg LB_2705
	jmp LB_2706
LB_2705:
	mov r8,unt_1
	jmp LB_2703
LB_2706:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],10
	jnz LB_2707
	jmp LB_2708
LB_2707:
	mov r8,unt_1
	jmp LB_2703
LB_2708:
	add r14,1
	jmp LB_2704
LB_2703:
	add rsp,0
	jmp LB_2699
LB_2704:
	jmp LB_2710
LB_2709:
	add r14,1 
LB_2710:
	cmp r14,r9
	jge LB_2711
	JZ_LINE_SPC BYTE [r13+8+r14], LB_2709
LB_2711
	call GRM_237
	cmp BYTE [r8+6],0
	jnz LB_2714
	jmp LB_2715
LB_2714:
	jmp LB_2712
LB_2715:
	sub rsp,8
	mov r8,[r8+8]
; .mov_ptn2 2'(= a35◂ [ a7◂ [ *{ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}]] ) ⊢ 8'(= a35◂ [ a7◂ [ *{ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}]] )
; .mov_ptn 2'(= a35◂ [ a7◂ [ *{ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}]] ) ⊢ 8'(= a35◂ [ a7◂ [ *{ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}]] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_2713
LB_2712:
	add rsp,0
	jmp LB_2699
LB_2713:
	mov QWORD [rsp+8*1],r14
	mov r13,QWORD [rsp+16+8*1]
	mov r14,QWORD [rsp+8*1]
	jmp LB_2717
LB_2717
;; rsp=1 , %1840~1'(= r ) %1839~0'(= r ) %1838~8'(= a35◂ [ a7◂ [ *{ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}]] ) 
;; ? 8'(= a35◂ [ a7◂ [ *{ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}]] ) ⊢ 0(<2)◂2'(= a7◂ [ *{ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}] )
	mov rdi,QWORD [rsp-8+8*1]
	cmp BYTE [rdi+6],0
	jnz LB_2718
	mov rax,QWORD [rdi+8]
	mov r8,rax
;; rsp=1 , %1842~2'(= a7◂ [ *{ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}] ) %1840~1'(= r ) %1839~0'(= r ) 
; #124 2'(= a7◂ [ *{ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}] ) ⊢ 0(<2)◂2'(= a7◂ [ *{ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}] )
;; rsp=1 , %1843~0(<2)◂2'(= a7◂ [ *{ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}] ) %1840~1'(= r ) %1839~0'(= r ) 
; #193 0(<2)◂2'(= a7◂ [ *{ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}] ) ⊢ 0(<2)◂0(<2)◂2'(= a7◂ [ *{ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}] )
;; rsp=1 , %1844~0(<2)◂0(<2)◂2'(= a7◂ [ *{ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}] ) %1840~1'(= r ) %1839~0'(= r ) 
; #22 0(<2)◂0(<2)◂2'(= a7◂ [ *{ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}] ) ⊢ 0(<2)◂0(<2)◂0(<2)◂2'(= a7◂ [ *{ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}] )
;; rsp=1 , %1845~0(<2)◂0(<2)◂0(<2)◂2'(= a7◂ [ *{ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}] ) %1840~1'(= r ) %1839~0'(= r ) 
; ∎ 0(<2)◂0(<2)◂0(<2)◂2'(= a7◂ [ *{ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}] )
; .dlt.ptn 1'(= r )
; .dlt.ptn 0'(= r )
; .mov_ptn2 0(<2)◂0(<2)◂0(<2)◂2'(= a7◂ [ *{ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}] ) ⊢ 2'(= a3◂ [ a35◂ [ a18◂ [ a9◂ [ ]{| l |}]]] )
	mov r13,r8
; .mov_ptn 0(<2)◂0(<2)◂0(<2)◂0'(= a7◂ [ *{ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}] ) ⊢ 2'(= a3◂ [ a35◂ [ a18◂ [ a9◂ [ ]{| l |}]]] )
	mov rax,r13
	mov rdi,rax
	mov rax,r15
	mov r15,QWORD [r15] 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov rdi,rax
	mov rax,r15
	mov r15,QWORD [r15] 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov rdi,rax
	mov rax,r15
	mov r15,QWORD [r15] 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,8
	jmp LB_2716
LB_2718:
;; ?. 8'(= a35◂ [ a7◂ [ *{ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}]] ) ⊢ 1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] )
	mov rax,QWORD [rdi+8]
	mov r8,rax
;; rsp=1 , %1841~2'(= a2◂ [ *{ rr{| l |}}] ) %1840~1'(= r ) %1839~0'(= r ) 
; #192 2'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] )
;; rsp=1 , %1846~1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] ) %1840~1'(= r ) %1839~0'(= r ) 
; #22 1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 0(<2)◂1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] )
;; rsp=1 , %1847~0(<2)◂1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] ) %1840~1'(= r ) %1839~0'(= r ) 
; ∎ 0(<2)◂1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] )
; .dlt.ptn 1'(= r )
; .dlt.ptn 0'(= r )
; .mov_ptn2 0(<2)◂1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 2'(= a3◂ [ a35◂ [ a18◂ [ a9◂ [ ]{| l |}]]] )
	mov r13,r8
; .mov_ptn 0(<2)◂1(<2)◂0'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 2'(= a3◂ [ a35◂ [ a18◂ [ a9◂ [ ]{| l |}]]] )
	mov rax,r13
	mov rdi,rax
	mov rax,r15
	mov r15,QWORD [r15] 
	mov QWORD [rax],0
	mov BYTE [rax+6],1
	mov QWORD [rax+8],rdi
	mov rdi,rax
	mov rax,r15
	mov r15,QWORD [r15] 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,8
	jmp LB_2716
LB_2716:
	cmp BYTE [r8+6],0
	jnz LB_2699
	pop r14
	pop r9
	add rsp,8
	pop r13
	jmp LB_2698
LB_2699:
	mov r9,QWORD [rsp+8]
	mov r14,QWORD [rsp+16]
	mov r13,QWORD [rsp+24]
	jmp LB_2721
LB_2720:
	add r14,1 
LB_2721:
	cmp r14,r9
	jge LB_2722
	JZ_LINE_SPC BYTE [r13+8+r14], LB_2720
LB_2722
	call GRM_205
	cmp BYTE [r8+6],0
	jnz LB_2725
	jmp LB_2726
LB_2725:
	jmp LB_2723
LB_2726:
	sub rsp,8
	mov r8,[r8+8]
; .mov_ptn2 2'(= a8◂ [ a13◂ [ {| l |}]] ) ⊢ 8'(= a8◂ [ a13◂ [ {| l |}]] )
; .mov_ptn 2'(= a8◂ [ a13◂ [ {| l |}]] ) ⊢ 8'(= a8◂ [ a13◂ [ {| l |}]] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_2724
LB_2723:
	add rsp,0
	jmp LB_2719
LB_2724:
	jmp LB_2728
LB_2727:
	add r14,1 
LB_2728:
	cmp r14,r9
	jge LB_2729
	JZ_LINE_SPC BYTE [r13+8+r14], LB_2727
LB_2729
	call GRM_207
	cmp BYTE [r8+6],0
	jnz LB_2732
	jmp LB_2733
LB_2732:
	jmp LB_2730
LB_2733:
	sub rsp,8
	mov r8,[r8+8]
; .mov_ptn2 2'(= a2◂ [ a8◂ [ a13◂ [ {| l |}]]] ) ⊢ 9'(= a2◂ [ a8◂ [ a13◂ [ {| l |}]]] )
; .mov_ptn 2'(= a2◂ [ a8◂ [ a13◂ [ {| l |}]]] ) ⊢ 9'(= a2◂ [ a8◂ [ a13◂ [ {| l |}]]] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_2731
LB_2730:
	add rsp,8
	jmp LB_2719
LB_2731:
	jmp LB_2735
LB_2734:
	add r14,1 
LB_2735:
	cmp r14,r9
	jge LB_2736
	JZ_LINE_SPC BYTE [r13+8+r14], LB_2734
LB_2736
	lea rax,[r14+1]
	cmp rax,r9
	jg LB_2739
	jmp LB_2740
LB_2739:
	mov r8,unt_1
	jmp LB_2737
LB_2740:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],10
	jnz LB_2741
	jmp LB_2742
LB_2741:
	mov r8,unt_1
	jmp LB_2737
LB_2742:
	add r14,1
	jmp LB_2738
LB_2737:
	add rsp,16
	jmp LB_2719
LB_2738:
	jmp LB_2744
LB_2743:
	add r14,1 
LB_2744:
	cmp r14,r9
	jge LB_2745
	JZ_LINE_SPC BYTE [r13+8+r14], LB_2743
LB_2745
	call GRM_234
	cmp BYTE [r8+6],0
	jnz LB_2748
	jmp LB_2749
LB_2748:
	jmp LB_2746
LB_2749:
	sub rsp,8
	mov r8,[r8+8]
; .mov_ptn2 2'(= a35◂ [ a17◂ [ a9◂ [ ]{| l |}]] ) ⊢ 10'(= a35◂ [ a17◂ [ a9◂ [ ]{| l |}]] )
; .mov_ptn 2'(= a35◂ [ a17◂ [ a9◂ [ ]{| l |}]] ) ⊢ 10'(= a35◂ [ a17◂ [ a9◂ [ ]{| l |}]] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_2747
LB_2746:
	add rsp,16
	jmp LB_2719
LB_2747:
	mov QWORD [rsp+8*3],r14
	mov r13,QWORD [rsp+16+8*3]
	mov r14,QWORD [rsp+8*3]
	jmp LB_2751
LB_2751
;; rsp=3 , %1852~1'(= r ) %1851~0'(= r ) %1850~10'(= a35◂ [ a17◂ [ a9◂ [ ]{| l |}]] ) %1849~9'(= a2◂ [ a8◂ [ a13◂ [ {| l |}]]] ) %1848~8'(= a8◂ [ a13◂ [ {| l |}]] ) 
;; ? 10'(= a35◂ [ a17◂ [ a9◂ [ ]{| l |}]] ) ⊢ 0(<2)◂2'(= a17◂ [ a9◂ [ ]{| l |}] )
	mov rdi,QWORD [rsp-8+8*1]
	cmp BYTE [rdi+6],0
	jnz LB_2752
	mov rax,QWORD [rdi+8]
	mov r8,rax
;; rsp=3 , %1854~2'(= a17◂ [ a9◂ [ ]{| l |}] ) %1852~1'(= r ) %1851~0'(= r ) %1849~9'(= a2◂ [ a8◂ [ a13◂ [ {| l |}]]] ) %1848~8'(= a8◂ [ a13◂ [ {| l |}]] ) 
; #21 { 8'(= a8◂ [ a13◂ [ {| l |}]] ) 9'(= a2◂ [ a8◂ [ a13◂ [ {| l |}]]] ) } ⊢ 0(<2)◂{ 8'(= a8◂ [ a13◂ [ {| l |}]] ) 9'(= a2◂ [ a8◂ [ a13◂ [ {| l |}]]] ) }
;; rsp=3 , %1855~0(<2)◂{ 8'(= a8◂ [ a13◂ [ {| l |}]] ) 9'(= a2◂ [ a8◂ [ a13◂ [ {| l |}]]] ) } %1854~2'(= a17◂ [ a9◂ [ ]{| l |}] ) %1852~1'(= r ) %1851~0'(= r ) 
; #123 { 0(<2)◂{ 8'(= a8◂ [ a13◂ [ {| l |}]] ) 9'(= a2◂ [ a8◂ [ a13◂ [ {| l |}]]] ) } 2'(= a17◂ [ a9◂ [ ]{| l |}] ) } ⊢ 1(<2)◂{ 0(<2)◂{ 8'(= a8◂ [ a13◂ [ {| l |}]] ) 9'(= a2◂ [ a8◂ [ a13◂ [ {| l |}]]] ) } 2'(= a17◂ [ a9◂ [ ]{| l |}] ) }
;; rsp=3 , %1856~1(<2)◂{ 0(<2)◂{ 8'(= a8◂ [ a13◂ [ {| l |}]] ) 9'(= a2◂ [ a8◂ [ a13◂ [ {| l |}]]] ) } 2'(= a17◂ [ a9◂ [ ]{| l |}] ) } %1852~1'(= r ) %1851~0'(= r ) 
; #193 1(<2)◂{ 0(<2)◂{ 8'(= a8◂ [ a13◂ [ {| l |}]] ) 9'(= a2◂ [ a8◂ [ a13◂ [ {| l |}]]] ) } 2'(= a17◂ [ a9◂ [ ]{| l |}] ) } ⊢ 0(<2)◂1(<2)◂{ 0(<2)◂{ 8'(= a8◂ [ a13◂ [ {| l |}]] ) 9'(= a2◂ [ a8◂ [ a13◂ [ {| l |}]]] ) } 2'(= a17◂ [ a9◂ [ ]{| l |}] ) }
;; rsp=3 , %1857~0(<2)◂1(<2)◂{ 0(<2)◂{ 8'(= a8◂ [ a13◂ [ {| l |}]] ) 9'(= a2◂ [ a8◂ [ a13◂ [ {| l |}]]] ) } 2'(= a17◂ [ a9◂ [ ]{| l |}] ) } %1852~1'(= r ) %1851~0'(= r ) 
; #22 0(<2)◂1(<2)◂{ 0(<2)◂{ 8'(= a8◂ [ a13◂ [ {| l |}]] ) 9'(= a2◂ [ a8◂ [ a13◂ [ {| l |}]]] ) } 2'(= a17◂ [ a9◂ [ ]{| l |}] ) } ⊢ 0(<2)◂0(<2)◂1(<2)◂{ 0(<2)◂{ 8'(= a8◂ [ a13◂ [ {| l |}]] ) 9'(= a2◂ [ a8◂ [ a13◂ [ {| l |}]]] ) } 2'(= a17◂ [ a9◂ [ ]{| l |}] ) }
;; rsp=3 , %1858~0(<2)◂0(<2)◂1(<2)◂{ 0(<2)◂{ 8'(= a8◂ [ a13◂ [ {| l |}]] ) 9'(= a2◂ [ a8◂ [ a13◂ [ {| l |}]]] ) } 2'(= a17◂ [ a9◂ [ ]{| l |}] ) } %1852~1'(= r ) %1851~0'(= r ) 
; ∎ 0(<2)◂0(<2)◂1(<2)◂{ 0(<2)◂{ 8'(= a8◂ [ a13◂ [ {| l |}]] ) 9'(= a2◂ [ a8◂ [ a13◂ [ {| l |}]]] ) } 2'(= a17◂ [ a9◂ [ ]{| l |}] ) }
; .dlt.ptn 1'(= r )
; .dlt.ptn 0'(= r )
; .mov_ptn2 0(<2)◂0(<2)◂1(<2)◂{ 0(<2)◂{ 8'(= a8◂ [ a13◂ [ {| l |}]] ) 9'(= a2◂ [ a8◂ [ a13◂ [ {| l |}]]] ) } 2'(= a17◂ [ a9◂ [ ]{| l |}] ) } ⊢ 2'(= a3◂ [ a35◂ [ a18◂ [ a9◂ [ ]{| l |}]]] )
	mov r13,r8
; .mov_ptn 0(<2)◂0(<2)◂1(<2)◂{ 0(<2)◂{ 8'(= a8◂ [ a13◂ [ {| l |}]] ) 9'(= a2◂ [ a8◂ [ a13◂ [ {| l |}]]] ) } 0'(= a17◂ [ a9◂ [ ]{| l |}] ) } ⊢ 2'(= a3◂ [ a35◂ [ a18◂ [ a9◂ [ ]{| l |}]]] )
	mov rax,[SS_RCD_2_TOP]
	mov rsi,[rax] 
	mov QWORD [SS_RCD_2_TOP],rsi
	mov QWORD [rax],0
	mov r14,rax
	mov rax,[SS_RCD_2_TOP]
	mov rsi,[rax] 
	mov QWORD [SS_RCD_2_TOP],rsi
	mov QWORD [rax],0
	mov r9,rax
	mov rax,QWORD [rsp-8+8*3]
	mov QWORD [r9+8+8*0],rax
	mov rax,QWORD [rsp-8+8*2]
	mov QWORD [r9+8+8*1],rax
	mov rax,r9
	mov BYTE [rax+6],0
	mov QWORD [r14+8+8*0],rax
	mov rax,r13
	mov QWORD [r14+8+8*1],rax
	mov rax,r14
	mov BYTE [rax+6],1
	mov rdi,rax
	mov rax,r15
	mov r15,QWORD [r15] 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov rdi,rax
	mov rax,r15
	mov r15,QWORD [r15] 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,24
	jmp LB_2750
LB_2752:
;; ?. 10'(= a35◂ [ a17◂ [ a9◂ [ ]{| l |}]] ) ⊢ 1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] )
	mov rax,QWORD [rdi+8]
	mov r8,rax
;; rsp=3 , %1853~2'(= a2◂ [ *{ rr{| l |}}] ) %1852~1'(= r ) %1851~0'(= r ) %1849~9'(= a2◂ [ a8◂ [ a13◂ [ {| l |}]]] ) %1848~8'(= a8◂ [ a13◂ [ {| l |}]] ) 
; #192 2'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] )
;; rsp=3 , %1859~1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] ) %1852~1'(= r ) %1851~0'(= r ) %1849~9'(= a2◂ [ a8◂ [ a13◂ [ {| l |}]]] ) %1848~8'(= a8◂ [ a13◂ [ {| l |}]] ) 
; #22 1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 0(<2)◂1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] )
;; rsp=3 , %1860~0(<2)◂1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] ) %1852~1'(= r ) %1851~0'(= r ) %1849~9'(= a2◂ [ a8◂ [ a13◂ [ {| l |}]]] ) %1848~8'(= a8◂ [ a13◂ [ {| l |}]] ) 
; ∎ 0(<2)◂1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] )
; .dlt.ptn 1'(= r )
; .dlt.ptn 0'(= r )
; .dlt.ptn 9'(= a2◂ [ a8◂ [ a13◂ [ {| l |}]]] )
;	.dlt adt ⊢ _  
; .dlt.ptn 8'(= a8◂ [ a13◂ [ {| l |}]] )
;	.dlt adt ⊢ _  
; .mov_ptn2 0(<2)◂1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 2'(= a3◂ [ a35◂ [ a18◂ [ a9◂ [ ]{| l |}]]] )
	mov r13,r8
; .mov_ptn 0(<2)◂1(<2)◂0'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 2'(= a3◂ [ a35◂ [ a18◂ [ a9◂ [ ]{| l |}]]] )
	mov rax,r13
	mov rdi,rax
	mov rax,r15
	mov r15,QWORD [r15] 
	mov QWORD [rax],0
	mov BYTE [rax+6],1
	mov QWORD [rax+8],rdi
	mov rdi,rax
	mov rax,r15
	mov r15,QWORD [r15] 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,24
	jmp LB_2750
LB_2750:
	cmp BYTE [r8+6],0
	jnz LB_2719
	pop r14
	pop r9
	add rsp,8
	pop r13
	jmp LB_2698
LB_2719:
	pop rdi
	pop r9 
	pop r14
	pop r13
	jmp LB_2698
LB_2698:
	cmp BYTE [r8+6],0
	jnz LB_2753
	jmp LB_2754
LB_2753:
	add rsp,8
	add rsp,8
	pop r9 
	pop r14 
	pop r13
	jmp LB_2680
LB_2754:
	mov QWORD [rsp+8*1],r14
	mov r8,[r8+8]
; .mov_ptn2 2'(= a35◂ [ a18◂ [ a9◂ [ ]{| l |}]] ) ⊢ 3'(= a35◂ [ a18◂ [ a9◂ [ ]{| l |}]] )
	mov r10,r9
; .mov_ptn 2'(= a35◂ [ a18◂ [ a9◂ [ ]{| l |}]] ) ⊢ 3'(= a35◂ [ a18◂ [ a9◂ [ ]{| l |}]] )
	mov rax,r8
	mov r9,rax
	mov r13,QWORD [rsp+16+8*1]
	mov r14,QWORD [rsp+8*1]
	jmp LB_2756
LB_2756
;; rsp=1 , %1861~3'(= a35◂ [ a18◂ [ a9◂ [ ]{| l |}]] ) %1837~1'(= r ) %1836~0'(= r ) %1835~8'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) 
; #193 { 8'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) 3'(= a35◂ [ a18◂ [ a9◂ [ ]{| l |}]] ) } ⊢ 0(<2)◂{ 8'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) 3'(= a35◂ [ a18◂ [ a9◂ [ ]{| l |}]] ) }
;; rsp=1 , %1862~0(<2)◂{ 8'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) 3'(= a35◂ [ a18◂ [ a9◂ [ ]{| l |}]] ) } %1837~1'(= r ) %1836~0'(= r ) 
; #22 0(<2)◂{ 8'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) 3'(= a35◂ [ a18◂ [ a9◂ [ ]{| l |}]] ) } ⊢ 0(<2)◂0(<2)◂{ 8'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) 3'(= a35◂ [ a18◂ [ a9◂ [ ]{| l |}]] ) }
;; rsp=1 , %1863~0(<2)◂0(<2)◂{ 8'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) 3'(= a35◂ [ a18◂ [ a9◂ [ ]{| l |}]] ) } %1837~1'(= r ) %1836~0'(= r ) 
; ∎ 0(<2)◂0(<2)◂{ 8'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) 3'(= a35◂ [ a18◂ [ a9◂ [ ]{| l |}]] ) }
; .dlt.ptn 1'(= r )
; .dlt.ptn 0'(= r )
; .mov_ptn2 0(<2)◂0(<2)◂{ 8'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) 3'(= a35◂ [ a18◂ [ a9◂ [ ]{| l |}]] ) } ⊢ 2'(= a3◂ [ a35◂ [ *{ a8◂ [ a12◂ [ a9◂ [ ]{| l |}]]a35◂ [ a18◂ [ a9◂ [ ]{| l |}]]}]] )
; .mov_ptn 0(<2)◂0(<2)◂{ 8'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) 3'(= a35◂ [ a18◂ [ a9◂ [ ]{| l |}]] ) } ⊢ 2'(= a3◂ [ a35◂ [ *{ a8◂ [ a12◂ [ a9◂ [ ]{| l |}]]a35◂ [ a18◂ [ a9◂ [ ]{| l |}]]}]] )
	mov rax,[SS_RCD_2_TOP]
	mov rsi,[rax] 
	mov QWORD [SS_RCD_2_TOP],rsi
	mov QWORD [rax],0
	mov r13,rax
	mov rax,QWORD [rsp-8+8*1]
	mov QWORD [r13+8+8*0],rax
	mov rax,r9
	mov QWORD [r13+8+8*1],rax
	mov rax,r13
	mov BYTE [rax+6],0
	mov rdi,rax
	mov rax,r15
	mov r15,QWORD [r15] 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,8
	jmp LB_2755
LB_2755:
	cmp BYTE [r8+6],0
	jnz LB_2681
	pop r14
	pop r9
	add rsp,8
	pop r13
	jmp LB_2680
LB_2681:
	mov r9,QWORD [rsp+8]
	mov r14,QWORD [rsp+16]
	mov r13,QWORD [rsp+24]
	jmp LB_2759
LB_2758:
	add r14,1 
LB_2759:
	cmp r14,r9
	jge LB_2760
	JZ_LINE_SPC BYTE [r13+8+r14], LB_2758
LB_2760
	call GRM_220
	cmp BYTE [r8+6],0
	jnz LB_2763
	jmp LB_2764
LB_2763:
	jmp LB_2761
LB_2764:
	sub rsp,16
; .mov_ptn2 2'(= *{ rr} ) ⊢ { 8'(= r ) 9'(= r ) }
; .mov_ptn 2'(= *{ rr} ) ⊢ { 8'(= r ) 9'(= r ) }
	mov rdi,r8
	mov rdi,QWORD [rdi+8+8*0]
	mov r10,rdi
	mov QWORD [rsp-8+8*2],r10
	mov rdi,r8
	mov rdi,QWORD [rdi+8+8*1]
	mov r11,rdi
	mov QWORD [rsp-8+8*1],r11
	jmp LB_2762
LB_2761:
	add rsp,0
	jmp LB_2757
LB_2762:
	jmp LB_2766
LB_2765:
	add r14,1 
LB_2766:
	cmp r14,r9
	jge LB_2767
	JZ_LINE_SPC BYTE [r13+8+r14], LB_2765
LB_2767
	call GRM_237
	cmp BYTE [r8+6],0
	jnz LB_2770
	jmp LB_2771
LB_2770:
	jmp LB_2768
LB_2771:
	sub rsp,8
	mov r8,[r8+8]
; .mov_ptn2 2'(= a35◂ [ a7◂ [ *{ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}]] ) ⊢ 10'(= a35◂ [ a7◂ [ *{ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}]] )
; .mov_ptn 2'(= a35◂ [ a7◂ [ *{ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}]] ) ⊢ 10'(= a35◂ [ a7◂ [ *{ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}]] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_2769
LB_2768:
	add rsp,16
	jmp LB_2757
LB_2769:
	mov QWORD [rsp+8*3],r14
	mov r13,QWORD [rsp+16+8*3]
	mov r14,QWORD [rsp+8*3]
	jmp LB_2773
LB_2773
;; rsp=3 , %1868~1'(= r ) %1867~0'(= r ) %1866~10'(= a35◂ [ a7◂ [ *{ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}]] ) %1865~9'(= r ) %1864~8'(= r ) 
;; ? 10'(= a35◂ [ a7◂ [ *{ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}]] ) ⊢ 0(<2)◂2'(= a7◂ [ *{ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}] )
	mov rdi,QWORD [rsp-8+8*1]
	cmp BYTE [rdi+6],0
	jnz LB_2774
	mov rax,QWORD [rdi+8]
	mov r8,rax
;; rsp=3 , %1870~2'(= a7◂ [ *{ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}] ) %1868~1'(= r ) %1867~0'(= r ) %1865~9'(= r ) %1864~8'(= r ) 
; #20 { } ⊢ 1(<2)◂{ }
;; rsp=3 , %1871~1(<2)◂{ } %1870~2'(= a7◂ [ *{ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}] ) %1868~1'(= r ) %1867~0'(= r ) %1865~9'(= r ) %1864~8'(= r ) 
	jmp LB_2775
LB_2775:
; $ %[ "glb_etr id_line line_res 0" ] ⊢ %[ "glb_etr id_line line_res 0" ]
;; rsp=3 , %1872~%[ "glb_etr id_line line_res 0" ] %1871~1(<2)◂{ } %1870~2'(= a7◂ [ *{ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}] ) %1868~1'(= r ) %1867~0'(= r ) %1865~9'(= r ) %1864~8'(= r ) 
; #21 { { 8'(= r ) 9'(= r ) %[ "glb_etr id_line line_res 0" ] } 1(<2)◂{ } } ⊢ 0(<2)◂{ { 8'(= r ) 9'(= r ) %[ "glb_etr id_line line_res 0" ] } 1(<2)◂{ } }
;; rsp=3 , %1873~0(<2)◂{ { 8'(= r ) 9'(= r ) %[ "glb_etr id_line line_res 0" ] } 1(<2)◂{ } } %1870~2'(= a7◂ [ *{ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}] ) %1868~1'(= r ) %1867~0'(= r ) 
; #192 0(<2)◂{ { 8'(= r ) 9'(= r ) %[ "glb_etr id_line line_res 0" ] } 1(<2)◂{ } } ⊢ 1(<2)◂0(<2)◂{ { 8'(= r ) 9'(= r ) %[ "glb_etr id_line line_res 0" ] } 1(<2)◂{ } }
;; rsp=3 , %1874~1(<2)◂0(<2)◂{ { 8'(= r ) 9'(= r ) %[ "glb_etr id_line line_res 0" ] } 1(<2)◂{ } } %1870~2'(= a7◂ [ *{ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}] ) %1868~1'(= r ) %1867~0'(= r ) 
; #22 1(<2)◂0(<2)◂{ { 8'(= r ) 9'(= r ) %[ "glb_etr id_line line_res 0" ] } 1(<2)◂{ } } ⊢ 0(<2)◂1(<2)◂0(<2)◂{ { 8'(= r ) 9'(= r ) %[ "glb_etr id_line line_res 0" ] } 1(<2)◂{ } }
;; rsp=3 , %1875~0(<2)◂1(<2)◂0(<2)◂{ { 8'(= r ) 9'(= r ) %[ "glb_etr id_line line_res 0" ] } 1(<2)◂{ } } %1870~2'(= a7◂ [ *{ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}] ) %1868~1'(= r ) %1867~0'(= r ) 
; ∎ 0(<2)◂1(<2)◂0(<2)◂{ { 8'(= r ) 9'(= r ) %[ "glb_etr id_line line_res 0" ] } 1(<2)◂{ } }
; .dlt.ptn 2'(= a7◂ [ *{ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}] )
;	.dlt adt ⊢ _  
; .dlt.ptn 1'(= r )
; .dlt.ptn 0'(= r )
; .mov_ptn2 0(<2)◂1(<2)◂0(<2)◂{ { 8'(= r ) 9'(= r ) %[ "glb_etr id_line line_res 0" ] } 1(<2)◂{ } } ⊢ 2'(= a3◂ [ a35◂ [ *{ a8◂ [ a12◂ [ a9◂ [ ]{| l |}]]a35◂ [ a18◂ [ a9◂ [ ]{| l |}]]}]] )
; .mov_ptn 0(<2)◂1(<2)◂0(<2)◂{ { 8'(= r ) 9'(= r ) %[ "glb_etr id_line line_res 0" ] } 1(<2)◂{ } } ⊢ 2'(= a3◂ [ a35◂ [ *{ a8◂ [ a12◂ [ a9◂ [ ]{| l |}]]a35◂ [ a18◂ [ a9◂ [ ]{| l |}]]}]] )
	mov rax,[SS_RCD_2_TOP]
	mov rsi,[rax] 
	mov QWORD [SS_RCD_2_TOP],rsi
	mov QWORD [rax],0
	mov r13,rax
	mov rax,[SS_RCD_3_TOP]
	mov rsi,[rax] 
	mov QWORD [SS_RCD_3_TOP],rsi
	mov QWORD [rax],0
	mov r14,rax
	mov rax,QWORD [rsp-8+8*3]
	mov QWORD [r14+8+8*0],rax
	mov rax,QWORD [rsp-8+8*2]
	mov QWORD [r14+8+8*1],rax
	mov rsi,1  
	mov rdi,40
	xor rax,rax 
	C_CALL_SF calloc
	mov QWORD [rax],26
	mov BYTE [rax+8+0],103
	mov BYTE [rax+8+1],108
	mov BYTE [rax+8+2],98
	mov BYTE [rax+8+3],95
	mov BYTE [rax+8+4],101
	mov BYTE [rax+8+5],116
	mov BYTE [rax+8+6],114
	mov BYTE [rax+8+7],32
	mov BYTE [rax+8+8],105
	mov BYTE [rax+8+9],100
	mov BYTE [rax+8+10],95
	mov BYTE [rax+8+11],108
	mov BYTE [rax+8+12],105
	mov BYTE [rax+8+13],110
	mov BYTE [rax+8+14],101
	mov BYTE [rax+8+15],32
	mov BYTE [rax+8+16],108
	mov BYTE [rax+8+17],105
	mov BYTE [rax+8+18],110
	mov BYTE [rax+8+19],101
	mov BYTE [rax+8+20],95
	mov BYTE [rax+8+21],114
	mov BYTE [rax+8+22],101
	mov BYTE [rax+8+23],115
	mov BYTE [rax+8+24],32
	mov BYTE [rax+8+25],48
	mov QWORD [r14+8+8*2],rax
	mov rax,r14
	mov QWORD [r13+8+8*0],rax
	mov rax,unt 
	mov rax,unt_1
	mov QWORD [r13+8+8*1],rax
	mov rax,r13
	mov BYTE [rax+6],0
	mov rdi,rax
	mov rax,r15
	mov r15,QWORD [r15] 
	mov QWORD [rax],0
	mov BYTE [rax+6],1
	mov QWORD [rax+8],rdi
	mov rdi,rax
	mov rax,r15
	mov r15,QWORD [r15] 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,24
	jmp LB_2772
LB_2774:
;; ?. 10'(= a35◂ [ a7◂ [ *{ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}]] ) ⊢ 1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] )
	mov rax,QWORD [rdi+8]
	mov r8,rax
;; rsp=3 , %1869~2'(= a2◂ [ *{ rr{| l |}}] ) %1868~1'(= r ) %1867~0'(= r ) %1865~9'(= r ) %1864~8'(= r ) 
	jmp LB_2776
LB_2776:
; $ %[ "glb_etr id_line line_res 1" ] ⊢ %[ "glb_etr id_line line_res 1" ]
;; rsp=3 , %1876~%[ "glb_etr id_line line_res 1" ] %1869~2'(= a2◂ [ *{ rr{| l |}}] ) %1868~1'(= r ) %1867~0'(= r ) %1865~9'(= r ) %1864~8'(= r ) 
; #21 { { 8'(= r ) 9'(= r ) %[ "glb_etr id_line line_res 1" ] } 2'(= a2◂ [ *{ rr{| l |}}] ) } ⊢ 0(<2)◂{ { 8'(= r ) 9'(= r ) %[ "glb_etr id_line line_res 1" ] } 2'(= a2◂ [ *{ rr{| l |}}] ) }
;; rsp=3 , %1877~0(<2)◂{ { 8'(= r ) 9'(= r ) %[ "glb_etr id_line line_res 1" ] } 2'(= a2◂ [ *{ rr{| l |}}] ) } %1868~1'(= r ) %1867~0'(= r ) 
; #192 0(<2)◂{ { 8'(= r ) 9'(= r ) %[ "glb_etr id_line line_res 1" ] } 2'(= a2◂ [ *{ rr{| l |}}] ) } ⊢ 1(<2)◂0(<2)◂{ { 8'(= r ) 9'(= r ) %[ "glb_etr id_line line_res 1" ] } 2'(= a2◂ [ *{ rr{| l |}}] ) }
;; rsp=3 , %1878~1(<2)◂0(<2)◂{ { 8'(= r ) 9'(= r ) %[ "glb_etr id_line line_res 1" ] } 2'(= a2◂ [ *{ rr{| l |}}] ) } %1868~1'(= r ) %1867~0'(= r ) 
; #22 1(<2)◂0(<2)◂{ { 8'(= r ) 9'(= r ) %[ "glb_etr id_line line_res 1" ] } 2'(= a2◂ [ *{ rr{| l |}}] ) } ⊢ 0(<2)◂1(<2)◂0(<2)◂{ { 8'(= r ) 9'(= r ) %[ "glb_etr id_line line_res 1" ] } 2'(= a2◂ [ *{ rr{| l |}}] ) }
;; rsp=3 , %1879~0(<2)◂1(<2)◂0(<2)◂{ { 8'(= r ) 9'(= r ) %[ "glb_etr id_line line_res 1" ] } 2'(= a2◂ [ *{ rr{| l |}}] ) } %1868~1'(= r ) %1867~0'(= r ) 
; ∎ 0(<2)◂1(<2)◂0(<2)◂{ { 8'(= r ) 9'(= r ) %[ "glb_etr id_line line_res 1" ] } 2'(= a2◂ [ *{ rr{| l |}}] ) }
; .dlt.ptn 1'(= r )
; .dlt.ptn 0'(= r )
; .mov_ptn2 0(<2)◂1(<2)◂0(<2)◂{ { 8'(= r ) 9'(= r ) %[ "glb_etr id_line line_res 1" ] } 2'(= a2◂ [ *{ rr{| l |}}] ) } ⊢ 2'(= a3◂ [ a35◂ [ *{ a8◂ [ a12◂ [ a9◂ [ ]{| l |}]]a35◂ [ a18◂ [ a9◂ [ ]{| l |}]]}]] )
	mov r13,r8
; .mov_ptn 0(<2)◂1(<2)◂0(<2)◂{ { 8'(= r ) 9'(= r ) %[ "glb_etr id_line line_res 1" ] } 0'(= a2◂ [ *{ rr{| l |}}] ) } ⊢ 2'(= a3◂ [ a35◂ [ *{ a8◂ [ a12◂ [ a9◂ [ ]{| l |}]]a35◂ [ a18◂ [ a9◂ [ ]{| l |}]]}]] )
	mov rax,[SS_RCD_2_TOP]
	mov rsi,[rax] 
	mov QWORD [SS_RCD_2_TOP],rsi
	mov QWORD [rax],0
	mov r14,rax
	mov rax,[SS_RCD_3_TOP]
	mov rsi,[rax] 
	mov QWORD [SS_RCD_3_TOP],rsi
	mov QWORD [rax],0
	mov r9,rax
	mov rax,QWORD [rsp-8+8*3]
	mov QWORD [r9+8+8*0],rax
	mov rax,QWORD [rsp-8+8*2]
	mov QWORD [r9+8+8*1],rax
	mov rsi,1  
	mov rdi,40
	xor rax,rax 
	C_CALL_SF calloc
	mov QWORD [rax],26
	mov BYTE [rax+8+0],103
	mov BYTE [rax+8+1],108
	mov BYTE [rax+8+2],98
	mov BYTE [rax+8+3],95
	mov BYTE [rax+8+4],101
	mov BYTE [rax+8+5],116
	mov BYTE [rax+8+6],114
	mov BYTE [rax+8+7],32
	mov BYTE [rax+8+8],105
	mov BYTE [rax+8+9],100
	mov BYTE [rax+8+10],95
	mov BYTE [rax+8+11],108
	mov BYTE [rax+8+12],105
	mov BYTE [rax+8+13],110
	mov BYTE [rax+8+14],101
	mov BYTE [rax+8+15],32
	mov BYTE [rax+8+16],108
	mov BYTE [rax+8+17],105
	mov BYTE [rax+8+18],110
	mov BYTE [rax+8+19],101
	mov BYTE [rax+8+20],95
	mov BYTE [rax+8+21],114
	mov BYTE [rax+8+22],101
	mov BYTE [rax+8+23],115
	mov BYTE [rax+8+24],32
	mov BYTE [rax+8+25],49
	mov QWORD [r9+8+8*2],rax
	mov rax,r9
	mov QWORD [r14+8+8*0],rax
	mov rax,r13
	mov QWORD [r14+8+8*1],rax
	mov rax,r14
	mov BYTE [rax+6],0
	mov rdi,rax
	mov rax,r15
	mov r15,QWORD [r15] 
	mov QWORD [rax],0
	mov BYTE [rax+6],1
	mov QWORD [rax+8],rdi
	mov rdi,rax
	mov rax,r15
	mov r15,QWORD [r15] 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,24
	jmp LB_2772
LB_2772:
	cmp BYTE [r8+6],0
	jnz LB_2757
	pop r14
	pop r9
	add rsp,8
	pop r13
	jmp LB_2680
LB_2757:
	mov r9,QWORD [rsp+8]
	mov r14,QWORD [rsp+16]
	mov r13,QWORD [rsp+24]
	jmp LB_2779
LB_2778:
	add r14,1 
LB_2779:
	cmp r14,r9
	jge LB_2780
	JZ_LINE_SPC BYTE [r13+8+r14], LB_2778
LB_2780
	call GRM_220
	cmp BYTE [r8+6],0
	jnz LB_2783
	jmp LB_2784
LB_2783:
	jmp LB_2781
LB_2784:
	sub rsp,16
; .mov_ptn2 2'(= *{ rr} ) ⊢ { 8'(= r ) 9'(= r ) }
; .mov_ptn 2'(= *{ rr} ) ⊢ { 8'(= r ) 9'(= r ) }
	mov rdi,r8
	mov rdi,QWORD [rdi+8+8*0]
	mov r10,rdi
	mov QWORD [rsp-8+8*2],r10
	mov rdi,r8
	mov rdi,QWORD [rdi+8+8*1]
	mov r11,rdi
	mov QWORD [rsp-8+8*1],r11
	jmp LB_2782
LB_2781:
	add rsp,0
	jmp LB_2777
LB_2782:
	jmp LB_2786
LB_2785:
	add r14,1 
LB_2786:
	cmp r14,r9
	jge LB_2787
	JZ_LINE_SPC BYTE [r13+8+r14], LB_2785
LB_2787
	call GRM_234
	cmp BYTE [r8+6],0
	jnz LB_2790
	jmp LB_2791
LB_2790:
	jmp LB_2788
LB_2791:
	sub rsp,8
	mov r8,[r8+8]
; .mov_ptn2 2'(= a35◂ [ a17◂ [ a9◂ [ ]{| l |}]] ) ⊢ 10'(= a35◂ [ a17◂ [ a9◂ [ ]{| l |}]] )
; .mov_ptn 2'(= a35◂ [ a17◂ [ a9◂ [ ]{| l |}]] ) ⊢ 10'(= a35◂ [ a17◂ [ a9◂ [ ]{| l |}]] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_2789
LB_2788:
	add rsp,16
	jmp LB_2777
LB_2789:
	mov QWORD [rsp+8*3],r14
	mov r13,QWORD [rsp+16+8*3]
	mov r14,QWORD [rsp+8*3]
	jmp LB_2793
LB_2793
;; rsp=3 , %1884~1'(= r ) %1883~0'(= r ) %1882~10'(= a35◂ [ a17◂ [ a9◂ [ ]{| l |}]] ) %1881~9'(= r ) %1880~8'(= r ) 
;; ? 10'(= a35◂ [ a17◂ [ a9◂ [ ]{| l |}]] ) ⊢ 0(<2)◂2'(= a17◂ [ a9◂ [ ]{| l |}] )
	mov rdi,QWORD [rsp-8+8*1]
	cmp BYTE [rdi+6],0
	jnz LB_2794
	mov rax,QWORD [rdi+8]
	mov r8,rax
;; rsp=3 , %1886~2'(= a17◂ [ a9◂ [ ]{| l |}] ) %1884~1'(= r ) %1883~0'(= r ) %1881~9'(= r ) %1880~8'(= r ) 
; #20 { } ⊢ 1(<2)◂{ }
;; rsp=3 , %1887~1(<2)◂{ } %1886~2'(= a17◂ [ a9◂ [ ]{| l |}] ) %1884~1'(= r ) %1883~0'(= r ) %1881~9'(= r ) %1880~8'(= r ) 
	jmp LB_2795
LB_2795:
; $ %[ "glb_etr id_line line_res 2" ] ⊢ %[ "glb_etr id_line line_res 2" ]
;; rsp=3 , %1888~%[ "glb_etr id_line line_res 2" ] %1887~1(<2)◂{ } %1886~2'(= a17◂ [ a9◂ [ ]{| l |}] ) %1884~1'(= r ) %1883~0'(= r ) %1881~9'(= r ) %1880~8'(= r ) 
; #21 { { 8'(= r ) 9'(= r ) %[ "glb_etr id_line line_res 2" ] } 1(<2)◂{ } } ⊢ 0(<2)◂{ { 8'(= r ) 9'(= r ) %[ "glb_etr id_line line_res 2" ] } 1(<2)◂{ } }
;; rsp=3 , %1889~0(<2)◂{ { 8'(= r ) 9'(= r ) %[ "glb_etr id_line line_res 2" ] } 1(<2)◂{ } } %1886~2'(= a17◂ [ a9◂ [ ]{| l |}] ) %1884~1'(= r ) %1883~0'(= r ) 
; #192 0(<2)◂{ { 8'(= r ) 9'(= r ) %[ "glb_etr id_line line_res 2" ] } 1(<2)◂{ } } ⊢ 1(<2)◂0(<2)◂{ { 8'(= r ) 9'(= r ) %[ "glb_etr id_line line_res 2" ] } 1(<2)◂{ } }
;; rsp=3 , %1890~1(<2)◂0(<2)◂{ { 8'(= r ) 9'(= r ) %[ "glb_etr id_line line_res 2" ] } 1(<2)◂{ } } %1886~2'(= a17◂ [ a9◂ [ ]{| l |}] ) %1884~1'(= r ) %1883~0'(= r ) 
; #22 1(<2)◂0(<2)◂{ { 8'(= r ) 9'(= r ) %[ "glb_etr id_line line_res 2" ] } 1(<2)◂{ } } ⊢ 0(<2)◂1(<2)◂0(<2)◂{ { 8'(= r ) 9'(= r ) %[ "glb_etr id_line line_res 2" ] } 1(<2)◂{ } }
;; rsp=3 , %1891~0(<2)◂1(<2)◂0(<2)◂{ { 8'(= r ) 9'(= r ) %[ "glb_etr id_line line_res 2" ] } 1(<2)◂{ } } %1886~2'(= a17◂ [ a9◂ [ ]{| l |}] ) %1884~1'(= r ) %1883~0'(= r ) 
; ∎ 0(<2)◂1(<2)◂0(<2)◂{ { 8'(= r ) 9'(= r ) %[ "glb_etr id_line line_res 2" ] } 1(<2)◂{ } }
; .dlt.ptn 2'(= a17◂ [ a9◂ [ ]{| l |}] )
;	.dlt adt ⊢ _  
; .dlt.ptn 1'(= r )
; .dlt.ptn 0'(= r )
; .mov_ptn2 0(<2)◂1(<2)◂0(<2)◂{ { 8'(= r ) 9'(= r ) %[ "glb_etr id_line line_res 2" ] } 1(<2)◂{ } } ⊢ 2'(= a3◂ [ a35◂ [ *{ a8◂ [ a12◂ [ a9◂ [ ]{| l |}]]a35◂ [ a18◂ [ a9◂ [ ]{| l |}]]}]] )
; .mov_ptn 0(<2)◂1(<2)◂0(<2)◂{ { 8'(= r ) 9'(= r ) %[ "glb_etr id_line line_res 2" ] } 1(<2)◂{ } } ⊢ 2'(= a3◂ [ a35◂ [ *{ a8◂ [ a12◂ [ a9◂ [ ]{| l |}]]a35◂ [ a18◂ [ a9◂ [ ]{| l |}]]}]] )
	mov rax,[SS_RCD_2_TOP]
	mov rsi,[rax] 
	mov QWORD [SS_RCD_2_TOP],rsi
	mov QWORD [rax],0
	mov r13,rax
	mov rax,[SS_RCD_3_TOP]
	mov rsi,[rax] 
	mov QWORD [SS_RCD_3_TOP],rsi
	mov QWORD [rax],0
	mov r14,rax
	mov rax,QWORD [rsp-8+8*3]
	mov QWORD [r14+8+8*0],rax
	mov rax,QWORD [rsp-8+8*2]
	mov QWORD [r14+8+8*1],rax
	mov rsi,1  
	mov rdi,40
	xor rax,rax 
	C_CALL_SF calloc
	mov QWORD [rax],26
	mov BYTE [rax+8+0],103
	mov BYTE [rax+8+1],108
	mov BYTE [rax+8+2],98
	mov BYTE [rax+8+3],95
	mov BYTE [rax+8+4],101
	mov BYTE [rax+8+5],116
	mov BYTE [rax+8+6],114
	mov BYTE [rax+8+7],32
	mov BYTE [rax+8+8],105
	mov BYTE [rax+8+9],100
	mov BYTE [rax+8+10],95
	mov BYTE [rax+8+11],108
	mov BYTE [rax+8+12],105
	mov BYTE [rax+8+13],110
	mov BYTE [rax+8+14],101
	mov BYTE [rax+8+15],32
	mov BYTE [rax+8+16],108
	mov BYTE [rax+8+17],105
	mov BYTE [rax+8+18],110
	mov BYTE [rax+8+19],101
	mov BYTE [rax+8+20],95
	mov BYTE [rax+8+21],114
	mov BYTE [rax+8+22],101
	mov BYTE [rax+8+23],115
	mov BYTE [rax+8+24],32
	mov BYTE [rax+8+25],50
	mov QWORD [r14+8+8*2],rax
	mov rax,r14
	mov QWORD [r13+8+8*0],rax
	mov rax,unt 
	mov rax,unt_1
	mov QWORD [r13+8+8*1],rax
	mov rax,r13
	mov BYTE [rax+6],0
	mov rdi,rax
	mov rax,r15
	mov r15,QWORD [r15] 
	mov QWORD [rax],0
	mov BYTE [rax+6],1
	mov QWORD [rax+8],rdi
	mov rdi,rax
	mov rax,r15
	mov r15,QWORD [r15] 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,24
	jmp LB_2792
LB_2794:
;; ?. 10'(= a35◂ [ a17◂ [ a9◂ [ ]{| l |}]] ) ⊢ 1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] )
	mov rax,QWORD [rdi+8]
	mov r8,rax
;; rsp=3 , %1885~2'(= a2◂ [ *{ rr{| l |}}] ) %1884~1'(= r ) %1883~0'(= r ) %1881~9'(= r ) %1880~8'(= r ) 
	jmp LB_2796
LB_2796:
; $ %[ "glb_etr id_line line_res 3" ] ⊢ %[ "glb_etr id_line line_res 3" ]
;; rsp=3 , %1892~%[ "glb_etr id_line line_res 3" ] %1885~2'(= a2◂ [ *{ rr{| l |}}] ) %1884~1'(= r ) %1883~0'(= r ) %1881~9'(= r ) %1880~8'(= r ) 
; #21 { { 8'(= r ) 9'(= r ) %[ "glb_etr id_line line_res 3" ] } 2'(= a2◂ [ *{ rr{| l |}}] ) } ⊢ 0(<2)◂{ { 8'(= r ) 9'(= r ) %[ "glb_etr id_line line_res 3" ] } 2'(= a2◂ [ *{ rr{| l |}}] ) }
;; rsp=3 , %1893~0(<2)◂{ { 8'(= r ) 9'(= r ) %[ "glb_etr id_line line_res 3" ] } 2'(= a2◂ [ *{ rr{| l |}}] ) } %1884~1'(= r ) %1883~0'(= r ) 
; #192 0(<2)◂{ { 8'(= r ) 9'(= r ) %[ "glb_etr id_line line_res 3" ] } 2'(= a2◂ [ *{ rr{| l |}}] ) } ⊢ 1(<2)◂0(<2)◂{ { 8'(= r ) 9'(= r ) %[ "glb_etr id_line line_res 3" ] } 2'(= a2◂ [ *{ rr{| l |}}] ) }
;; rsp=3 , %1894~1(<2)◂0(<2)◂{ { 8'(= r ) 9'(= r ) %[ "glb_etr id_line line_res 3" ] } 2'(= a2◂ [ *{ rr{| l |}}] ) } %1884~1'(= r ) %1883~0'(= r ) 
; #22 1(<2)◂0(<2)◂{ { 8'(= r ) 9'(= r ) %[ "glb_etr id_line line_res 3" ] } 2'(= a2◂ [ *{ rr{| l |}}] ) } ⊢ 0(<2)◂1(<2)◂0(<2)◂{ { 8'(= r ) 9'(= r ) %[ "glb_etr id_line line_res 3" ] } 2'(= a2◂ [ *{ rr{| l |}}] ) }
;; rsp=3 , %1895~0(<2)◂1(<2)◂0(<2)◂{ { 8'(= r ) 9'(= r ) %[ "glb_etr id_line line_res 3" ] } 2'(= a2◂ [ *{ rr{| l |}}] ) } %1884~1'(= r ) %1883~0'(= r ) 
; ∎ 0(<2)◂1(<2)◂0(<2)◂{ { 8'(= r ) 9'(= r ) %[ "glb_etr id_line line_res 3" ] } 2'(= a2◂ [ *{ rr{| l |}}] ) }
; .dlt.ptn 1'(= r )
; .dlt.ptn 0'(= r )
; .mov_ptn2 0(<2)◂1(<2)◂0(<2)◂{ { 8'(= r ) 9'(= r ) %[ "glb_etr id_line line_res 3" ] } 2'(= a2◂ [ *{ rr{| l |}}] ) } ⊢ 2'(= a3◂ [ a35◂ [ *{ a8◂ [ a12◂ [ a9◂ [ ]{| l |}]]a35◂ [ a18◂ [ a9◂ [ ]{| l |}]]}]] )
	mov r13,r8
; .mov_ptn 0(<2)◂1(<2)◂0(<2)◂{ { 8'(= r ) 9'(= r ) %[ "glb_etr id_line line_res 3" ] } 0'(= a2◂ [ *{ rr{| l |}}] ) } ⊢ 2'(= a3◂ [ a35◂ [ *{ a8◂ [ a12◂ [ a9◂ [ ]{| l |}]]a35◂ [ a18◂ [ a9◂ [ ]{| l |}]]}]] )
	mov rax,[SS_RCD_2_TOP]
	mov rsi,[rax] 
	mov QWORD [SS_RCD_2_TOP],rsi
	mov QWORD [rax],0
	mov r14,rax
	mov rax,[SS_RCD_3_TOP]
	mov rsi,[rax] 
	mov QWORD [SS_RCD_3_TOP],rsi
	mov QWORD [rax],0
	mov r9,rax
	mov rax,QWORD [rsp-8+8*3]
	mov QWORD [r9+8+8*0],rax
	mov rax,QWORD [rsp-8+8*2]
	mov QWORD [r9+8+8*1],rax
	mov rsi,1  
	mov rdi,40
	xor rax,rax 
	C_CALL_SF calloc
	mov QWORD [rax],26
	mov BYTE [rax+8+0],103
	mov BYTE [rax+8+1],108
	mov BYTE [rax+8+2],98
	mov BYTE [rax+8+3],95
	mov BYTE [rax+8+4],101
	mov BYTE [rax+8+5],116
	mov BYTE [rax+8+6],114
	mov BYTE [rax+8+7],32
	mov BYTE [rax+8+8],105
	mov BYTE [rax+8+9],100
	mov BYTE [rax+8+10],95
	mov BYTE [rax+8+11],108
	mov BYTE [rax+8+12],105
	mov BYTE [rax+8+13],110
	mov BYTE [rax+8+14],101
	mov BYTE [rax+8+15],32
	mov BYTE [rax+8+16],108
	mov BYTE [rax+8+17],105
	mov BYTE [rax+8+18],110
	mov BYTE [rax+8+19],101
	mov BYTE [rax+8+20],95
	mov BYTE [rax+8+21],114
	mov BYTE [rax+8+22],101
	mov BYTE [rax+8+23],115
	mov BYTE [rax+8+24],32
	mov BYTE [rax+8+25],51
	mov QWORD [r9+8+8*2],rax
	mov rax,r9
	mov QWORD [r14+8+8*0],rax
	mov rax,r13
	mov QWORD [r14+8+8*1],rax
	mov rax,r14
	mov BYTE [rax+6],0
	mov rdi,rax
	mov rax,r15
	mov r15,QWORD [r15] 
	mov QWORD [rax],0
	mov BYTE [rax+6],1
	mov QWORD [rax+8],rdi
	mov rdi,rax
	mov rax,r15
	mov r15,QWORD [r15] 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,24
	jmp LB_2792
LB_2792:
	cmp BYTE [r8+6],0
	jnz LB_2777
	pop r14
	pop r9
	add rsp,8
	pop r13
	jmp LB_2680
LB_2777:
	pop rdi
	pop r9 
	pop r14
	pop r13
	jmp LB_2680
LB_2680:
	cmp BYTE [r8+6],0
	jnz LB_2797
	jmp LB_2798
LB_2797:
	add rsp,8
	add rsp,8
	pop r9 
	pop r14 
	pop r13
	ret
LB_2798:
	mov QWORD [rsp+8*1],r14
	mov r8,[r8+8]
; .mov_ptn2 2'(= a35◂ [ *{ a8◂ [ a12◂ [ a9◂ [ ]{| l |}]]a35◂ [ a18◂ [ a9◂ [ ]{| l |}]]}] ) ⊢ 3'(= a35◂ [ *{ a8◂ [ a12◂ [ a9◂ [ ]{| l |}]]a35◂ [ a18◂ [ a9◂ [ ]{| l |}]]}] )
	mov r10,r9
; .mov_ptn 2'(= a35◂ [ *{ a8◂ [ a12◂ [ a9◂ [ ]{| l |}]]a35◂ [ a18◂ [ a9◂ [ ]{| l |}]]}] ) ⊢ 3'(= a35◂ [ *{ a8◂ [ a12◂ [ a9◂ [ ]{| l |}]]a35◂ [ a18◂ [ a9◂ [ ]{| l |}]]}] )
	mov rax,r8
	mov r9,rax
	mov r13,QWORD [rsp+16+8*1]
	mov r14,QWORD [rsp+8*1]
	jmp LB_2800
LB_2800
;; rsp=1 , %1896~3'(= a35◂ [ *{ a8◂ [ a12◂ [ a9◂ [ ]{| l |}]]a35◂ [ a18◂ [ a9◂ [ ]{| l |}]]}] ) %1834~1'(= r ) %1833~0'(= r ) %1832~8'(= a35◂ [ *{ }] ) 
;; ? 3'(= a35◂ [ *{ a8◂ [ a12◂ [ a9◂ [ ]{| l |}]]a35◂ [ a18◂ [ a9◂ [ ]{| l |}]]}] ) ⊢ 0(<2)◂{ 2'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) 4'(= a35◂ [ a18◂ [ a9◂ [ ]{| l |}]] ) }
	mov rdi,r9
	cmp BYTE [rdi+6],0
	jnz LB_2801
	mov rdi,r9
	mov rdi,QWORD [rdi+8+8*0]
	mov r8,rdi
	mov rdi,r9
	mov rdi,QWORD [rdi+8+8*1]
	mov r10,rdi
;; rsp=1 , %1899~4'(= a35◂ [ a18◂ [ a9◂ [ ]{| l |}]] ) %1898~2'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) %1834~1'(= r ) %1833~0'(= r ) %1832~8'(= a35◂ [ *{ }] ) 
;; ? 4'(= a35◂ [ a18◂ [ a9◂ [ ]{| l |}]] ) ⊢ 0(<2)◂3'(= a18◂ [ a9◂ [ ]{| l |}] )
	mov rdi,r10
	cmp BYTE [rdi+6],0
	jnz LB_2802
	mov rax,QWORD [rdi+8]
	mov r9,rax
;; rsp=1 , %1901~3'(= a18◂ [ a9◂ [ ]{| l |}] ) %1898~2'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) %1834~1'(= r ) %1833~0'(= r ) %1832~8'(= a35◂ [ *{ }] ) 
; #127 { 2'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) 3'(= a18◂ [ a9◂ [ ]{| l |}] ) } ⊢ 4(<7)◂{ 2'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) 3'(= a18◂ [ a9◂ [ ]{| l |}] ) }
;; rsp=1 , %1902~4(<7)◂{ 2'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) 3'(= a18◂ [ a9◂ [ ]{| l |}] ) } %1834~1'(= r ) %1833~0'(= r ) %1832~8'(= a35◂ [ *{ }] ) 
; #193 4(<7)◂{ 2'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) 3'(= a18◂ [ a9◂ [ ]{| l |}] ) } ⊢ 0(<2)◂4(<7)◂{ 2'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) 3'(= a18◂ [ a9◂ [ ]{| l |}] ) }
;; rsp=1 , %1903~0(<2)◂4(<7)◂{ 2'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) 3'(= a18◂ [ a9◂ [ ]{| l |}] ) } %1834~1'(= r ) %1833~0'(= r ) %1832~8'(= a35◂ [ *{ }] ) 
; #22 0(<2)◂4(<7)◂{ 2'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) 3'(= a18◂ [ a9◂ [ ]{| l |}] ) } ⊢ 0(<2)◂0(<2)◂4(<7)◂{ 2'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) 3'(= a18◂ [ a9◂ [ ]{| l |}] ) }
;; rsp=1 , %1904~0(<2)◂0(<2)◂4(<7)◂{ 2'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) 3'(= a18◂ [ a9◂ [ ]{| l |}] ) } %1834~1'(= r ) %1833~0'(= r ) %1832~8'(= a35◂ [ *{ }] ) 
; ∎ 0(<2)◂0(<2)◂4(<7)◂{ 2'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) 3'(= a18◂ [ a9◂ [ ]{| l |}] ) }
; .dlt.ptn 1'(= r )
; .dlt.ptn 0'(= r )
; .dlt.ptn 8'(= a35◂ [ *{ }] )
;	.dlt adt ⊢ _  
; .mov_ptn2 0(<2)◂0(<2)◂4(<7)◂{ 2'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) 3'(= a18◂ [ a9◂ [ ]{| l |}] ) } ⊢ 2'(= a3◂ [ a35◂ [ a17◂ [ a9◂ [ ]{| l |}]]] )
	mov r13,r8
; .mov_ptn 0(<2)◂0(<2)◂4(<7)◂{ 0'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) 3'(= a18◂ [ a9◂ [ ]{| l |}] ) } ⊢ 2'(= a3◂ [ a35◂ [ a17◂ [ a9◂ [ ]{| l |}]]] )
	mov rax,[SS_RCD_2_TOP]
	mov rsi,[rax] 
	mov QWORD [SS_RCD_2_TOP],rsi
	mov QWORD [rax],0
	mov r14,rax
	mov rax,r13
	mov QWORD [r14+8+8*0],rax
	mov rax,r9
	mov QWORD [r14+8+8*1],rax
	mov rax,r14
	mov BYTE [rax+6],4
	mov rdi,rax
	mov rax,r15
	mov r15,QWORD [r15] 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov rdi,rax
	mov rax,r15
	mov r15,QWORD [r15] 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,8
	jmp LB_2799
LB_2802:
;; ?. 4'(= a35◂ [ a18◂ [ a9◂ [ ]{| l |}]] ) ⊢ 1(<2)◂3'(= a2◂ [ *{ rr{| l |}}] )
	mov rax,QWORD [rdi+8]
	mov r9,rax
;; rsp=1 , %1900~3'(= a2◂ [ *{ rr{| l |}}] ) %1898~2'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) %1834~1'(= r ) %1833~0'(= r ) %1832~8'(= a35◂ [ *{ }] ) 
; #192 3'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 1(<2)◂3'(= a2◂ [ *{ rr{| l |}}] )
;; rsp=1 , %1905~1(<2)◂3'(= a2◂ [ *{ rr{| l |}}] ) %1898~2'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) %1834~1'(= r ) %1833~0'(= r ) %1832~8'(= a35◂ [ *{ }] ) 
; #22 1(<2)◂3'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 0(<2)◂1(<2)◂3'(= a2◂ [ *{ rr{| l |}}] )
;; rsp=1 , %1906~0(<2)◂1(<2)◂3'(= a2◂ [ *{ rr{| l |}}] ) %1898~2'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) %1834~1'(= r ) %1833~0'(= r ) %1832~8'(= a35◂ [ *{ }] ) 
; ∎ 0(<2)◂1(<2)◂3'(= a2◂ [ *{ rr{| l |}}] )
; .dlt.ptn 2'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] )
;	.dlt adt ⊢ _  
; .dlt.ptn 1'(= r )
; .dlt.ptn 0'(= r )
; .dlt.ptn 8'(= a35◂ [ *{ }] )
;	.dlt adt ⊢ _  
; .mov_ptn2 0(<2)◂1(<2)◂3'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 2'(= a3◂ [ a35◂ [ a17◂ [ a9◂ [ ]{| l |}]]] )
; .mov_ptn 0(<2)◂1(<2)◂3'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 2'(= a3◂ [ a35◂ [ a17◂ [ a9◂ [ ]{| l |}]]] )
	mov rax,r9
	mov rdi,rax
	mov rax,r15
	mov r15,QWORD [r15] 
	mov QWORD [rax],0
	mov BYTE [rax+6],1
	mov QWORD [rax+8],rdi
	mov rdi,rax
	mov rax,r15
	mov r15,QWORD [r15] 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,8
	jmp LB_2799
LB_2801:
;; ?. 3'(= a35◂ [ *{ a8◂ [ a12◂ [ a9◂ [ ]{| l |}]]a35◂ [ a18◂ [ a9◂ [ ]{| l |}]]}] ) ⊢ 1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] )
	mov rax,QWORD [rdi+8]
	mov r8,rax
;; rsp=1 , %1897~2'(= a2◂ [ *{ rr{| l |}}] ) %1834~1'(= r ) %1833~0'(= r ) %1832~8'(= a35◂ [ *{ }] ) 
; #192 2'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] )
;; rsp=1 , %1907~1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] ) %1834~1'(= r ) %1833~0'(= r ) %1832~8'(= a35◂ [ *{ }] ) 
; #22 1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 0(<2)◂1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] )
;; rsp=1 , %1908~0(<2)◂1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] ) %1834~1'(= r ) %1833~0'(= r ) %1832~8'(= a35◂ [ *{ }] ) 
; ∎ 0(<2)◂1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] )
; .dlt.ptn 1'(= r )
; .dlt.ptn 0'(= r )
; .dlt.ptn 8'(= a35◂ [ *{ }] )
;	.dlt adt ⊢ _  
; .mov_ptn2 0(<2)◂1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 2'(= a3◂ [ a35◂ [ a17◂ [ a9◂ [ ]{| l |}]]] )
	mov r13,r8
; .mov_ptn 0(<2)◂1(<2)◂0'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 2'(= a3◂ [ a35◂ [ a17◂ [ a9◂ [ ]{| l |}]]] )
	mov rax,r13
	mov rdi,rax
	mov rax,r15
	mov r15,QWORD [r15] 
	mov QWORD [rax],0
	mov BYTE [rax+6],1
	mov QWORD [rax+8],rdi
	mov rdi,rax
	mov rax,r15
	mov r15,QWORD [r15] 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,8
	jmp LB_2799
LB_2799:
	cmp BYTE [r8+6],0
	jnz LB_2663
	pop r14
	pop r9
	add rsp,8
	pop r13
	ret
LB_2663:
	mov r9,QWORD [rsp+8]
	mov r14,QWORD [rsp+16]
	mov r13,QWORD [rsp+24]
	jmp LB_2805
LB_2804:
	add r14,1 
LB_2805:
	cmp r14,r9
	jge LB_2806
	JZ_SPC BYTE [r13+8+r14], LB_2804
LB_2806
	call GRM_225
	cmp BYTE [r8+6],0
	jnz LB_2809
	jmp LB_2810
LB_2809:
	jmp LB_2807
LB_2810:
; .mov_ptn2 2'(= *{ } ) ⊢ { }
; .mov_ptn 2'(= *{ } ) ⊢ { }
	jmp LB_2808
LB_2807:
	add rsp,0
	jmp LB_2803
LB_2808:
	sub rsp,32
	mov QWORD [rsp+24],r13
	mov QWORD [rsp+16],r14 
	mov QWORD [rsp+8],r9
	jmp LB_2814
LB_2813:
	add r14,1 
LB_2814:
	cmp r14,r9
	jge LB_2815
	JZ_SPC BYTE [r13+8+r14], LB_2813
LB_2815
	call GRM_234
	cmp BYTE [r8+6],0
	jnz LB_2818
	jmp LB_2819
LB_2818:
	jmp LB_2816
LB_2819:
	sub rsp,8
	mov r8,[r8+8]
; .mov_ptn2 2'(= a35◂ [ a17◂ [ a9◂ [ ]{| l |}]] ) ⊢ 8'(= a35◂ [ a17◂ [ a9◂ [ ]{| l |}]] )
; .mov_ptn 2'(= a35◂ [ a17◂ [ a9◂ [ ]{| l |}]] ) ⊢ 8'(= a35◂ [ a17◂ [ a9◂ [ ]{| l |}]] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_2817
LB_2816:
	add rsp,0
	jmp LB_2812
LB_2817:
	mov QWORD [rsp+8*1],r14
	mov r13,QWORD [rsp+16+8*1]
	mov r14,QWORD [rsp+8*1]
	jmp LB_2821
LB_2821
;; rsp=1 , %1914~1'(= r ) %1913~0'(= r ) %1912~8'(= a35◂ [ a17◂ [ a9◂ [ ]{| l |}]] ) 
; #22 8'(= a35◂ [ a17◂ [ a9◂ [ ]{| l |}]] ) ⊢ 0(<2)◂8'(= a35◂ [ a17◂ [ a9◂ [ ]{| l |}]] )
;; rsp=1 , %1915~0(<2)◂8'(= a35◂ [ a17◂ [ a9◂ [ ]{| l |}]] ) %1914~1'(= r ) %1913~0'(= r ) 
; ∎ 0(<2)◂8'(= a35◂ [ a17◂ [ a9◂ [ ]{| l |}]] )
; .dlt.ptn 1'(= r )
; .dlt.ptn 0'(= r )
; .mov_ptn2 0(<2)◂8'(= a35◂ [ a17◂ [ a9◂ [ ]{| l |}]] ) ⊢ 2'(= a3◂ [ a35◂ [ a17◂ [ a9◂ [ ]{| l |}]]] )
; .mov_ptn 0(<2)◂8'(= a35◂ [ a17◂ [ a9◂ [ ]{| l |}]] ) ⊢ 2'(= a3◂ [ a35◂ [ a17◂ [ a9◂ [ ]{| l |}]]] )
	mov rax,QWORD [rsp-8+8*1]
	mov rdi,rax
	mov rax,r15
	mov r15,QWORD [r15] 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,8
	jmp LB_2820
LB_2820:
	cmp BYTE [r8+6],0
	jnz LB_2812
	pop r14
	pop r9
	add rsp,8
	pop r13
	jmp LB_2811
LB_2812:
	mov r9,QWORD [rsp+8]
	mov r14,QWORD [rsp+16]
	mov r13,QWORD [rsp+24]
	jmp LB_2824
LB_2823:
	add r14,1 
LB_2824:
	cmp r14,r9
	jge LB_2825
	JZ_SPC BYTE [r13+8+r14], LB_2823
LB_2825
	call GRM_224
	cmp BYTE [r8+6],0
	jnz LB_2828
	jmp LB_2829
LB_2828:
	jmp LB_2826
LB_2829:
; .mov_ptn2 2'(= *{ } ) ⊢ { }
; .mov_ptn 2'(= *{ } ) ⊢ { }
	jmp LB_2827
LB_2826:
	add rsp,0
	jmp LB_2822
LB_2827:
	mov QWORD [rsp+8*0],r14
	mov r13,QWORD [rsp+16+8*0]
	mov r14,QWORD [rsp+8*0]
	jmp LB_2831
LB_2831
;; rsp=0 , %1918~1'(= r ) %1917~0'(= r ) %1916~{ } 
	jmp LB_2832
LB_2832:
; $ %[ "lc_code 11" ] ⊢ %[ "lc_code 11" ]
;; rsp=0 , %1919~%[ "lc_code 11" ] %1918~1'(= r ) %1917~0'(= r ) %1916~{ } 
; #20 { } ⊢ 1(<2)◂{ }
;; rsp=0 , %1920~1(<2)◂{ } %1919~%[ "lc_code 11" ] %1918~1'(= r ) %1917~0'(= r ) %1916~{ } 
; #21 { { 0'(= r ) 1'(= r ) %[ "lc_code 11" ] } 1(<2)◂{ } } ⊢ 0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "lc_code 11" ] } 1(<2)◂{ } }
;; rsp=0 , %1921~0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "lc_code 11" ] } 1(<2)◂{ } } %1916~{ } 
; #192 0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "lc_code 11" ] } 1(<2)◂{ } } ⊢ 1(<2)◂0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "lc_code 11" ] } 1(<2)◂{ } }
;; rsp=0 , %1922~1(<2)◂0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "lc_code 11" ] } 1(<2)◂{ } } %1916~{ } 
; #22 1(<2)◂0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "lc_code 11" ] } 1(<2)◂{ } } ⊢ 0(<2)◂1(<2)◂0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "lc_code 11" ] } 1(<2)◂{ } }
;; rsp=0 , %1923~0(<2)◂1(<2)◂0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "lc_code 11" ] } 1(<2)◂{ } } %1916~{ } 
; ∎ 0(<2)◂1(<2)◂0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "lc_code 11" ] } 1(<2)◂{ } }
; .dlt.ptn { }
; .mov_ptn2 0(<2)◂1(<2)◂0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "lc_code 11" ] } 1(<2)◂{ } } ⊢ 2'(= a3◂ [ a35◂ [ a17◂ [ a9◂ [ ]{| l |}]]] )
; .mov_ptn 0(<2)◂1(<2)◂0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "lc_code 11" ] } 1(<2)◂{ } } ⊢ 2'(= a3◂ [ a35◂ [ a17◂ [ a9◂ [ ]{| l |}]]] )
	mov rax,[SS_RCD_2_TOP]
	mov rsi,[rax] 
	mov QWORD [SS_RCD_2_TOP],rsi
	mov QWORD [rax],0
	mov r9,rax
	mov rax,[SS_RCD_3_TOP]
	mov rsi,[rax] 
	mov QWORD [SS_RCD_3_TOP],rsi
	mov QWORD [rax],0
	mov r10,rax
	mov rax,r13
	mov QWORD [r10+8+8*0],rax
	mov rax,r14
	mov QWORD [r10+8+8*1],rax
	mov rsi,1  
	mov rdi,24
	xor rax,rax 
	C_CALL_SF calloc
	mov QWORD [rax],10
	mov BYTE [rax+8+0],108
	mov BYTE [rax+8+1],99
	mov BYTE [rax+8+2],95
	mov BYTE [rax+8+3],99
	mov BYTE [rax+8+4],111
	mov BYTE [rax+8+5],100
	mov BYTE [rax+8+6],101
	mov BYTE [rax+8+7],32
	mov BYTE [rax+8+8],49
	mov BYTE [rax+8+9],49
	mov QWORD [r10+8+8*2],rax
	mov rax,r10
	mov QWORD [r9+8+8*0],rax
	mov rax,unt 
	mov rax,unt_1
	mov QWORD [r9+8+8*1],rax
	mov rax,r9
	mov BYTE [rax+6],0
	mov rdi,rax
	mov rax,r15
	mov r15,QWORD [r15] 
	mov QWORD [rax],0
	mov BYTE [rax+6],1
	mov QWORD [rax+8],rdi
	mov rdi,rax
	mov rax,r15
	mov r15,QWORD [r15] 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	jmp LB_2830
LB_2830:
	cmp BYTE [r8+6],0
	jnz LB_2822
	pop r14
	pop r9
	add rsp,8
	pop r13
	jmp LB_2811
LB_2822:
	pop rdi
	pop r9 
	pop r14
	pop r13
	jmp LB_2811
LB_2811:
	cmp BYTE [r8+6],0
	jnz LB_2833
	jmp LB_2834
LB_2833:
	add rsp,0
	add rsp,8
	pop r9 
	pop r14 
	pop r13
	ret
LB_2834:
	mov QWORD [rsp+8*0],r14
	mov r8,[r8+8]
; .mov_ptn2 2'(= a35◂ [ a17◂ [ a9◂ [ ]{| l |}]] ) ⊢ 3'(= a35◂ [ a17◂ [ a9◂ [ ]{| l |}]] )
	mov r10,r9
; .mov_ptn 2'(= a35◂ [ a17◂ [ a9◂ [ ]{| l |}]] ) ⊢ 3'(= a35◂ [ a17◂ [ a9◂ [ ]{| l |}]] )
	mov rax,r8
	mov r9,rax
	mov r13,QWORD [rsp+16+8*0]
	mov r14,QWORD [rsp+8*0]
	jmp LB_2836
LB_2836
;; rsp=0 , %1924~3'(= a35◂ [ a17◂ [ a9◂ [ ]{| l |}]] ) %1911~1'(= r ) %1910~0'(= r ) %1909~{ } 
;; ? 3'(= a35◂ [ a17◂ [ a9◂ [ ]{| l |}]] ) ⊢ 0(<2)◂2'(= a17◂ [ a9◂ [ ]{| l |}] )
	mov rdi,r9
	cmp BYTE [rdi+6],0
	jnz LB_2837
	mov rax,QWORD [rdi+8]
	mov r8,rax
;; rsp=0 , %1926~2'(= a17◂ [ a9◂ [ ]{| l |}] ) %1911~1'(= r ) %1910~0'(= r ) %1909~{ } 
	jmp LB_2838
LB_2838:
; $ %[ "lc_code 9" ] ⊢ %[ "lc_code 9" ]
;; rsp=0 , %1927~%[ "lc_code 9" ] %1926~2'(= a17◂ [ a9◂ [ ]{| l |}] ) %1911~1'(= r ) %1910~0'(= r ) %1909~{ } 
; rsp_d=0, #195 { 0'(= r ) 1'(= r ) %[ "lc_code 9" ] } ⊢ 0'(= a35◂ [ q0] )
	sub rsp,8
	mov QWORD [rsp+8*0],r8
; .mov_ptn2 { 0'(= r ) 1'(= r ) %[ "lc_code 9" ] } ⊢ { 0'(= r ) 1'(= r ) 2'(= {| l |} ) }
; .mov_ptn %[ "lc_code 9" ] ⊢ 2'(= {| l |} )
	mov rsi,1  
	mov rdi,24
	xor rax,rax 
	C_CALL_SF calloc
	mov QWORD [rax],9
	mov BYTE [rax+8+0],108
	mov BYTE [rax+8+1],99
	mov BYTE [rax+8+2],95
	mov BYTE [rax+8+3],99
	mov BYTE [rax+8+4],111
	mov BYTE [rax+8+5],100
	mov BYTE [rax+8+6],101
	mov BYTE [rax+8+7],32
	mov BYTE [rax+8+8],57
	mov r8,rax
	call ETR_195

	mov r8,QWORD [rsp-8+8*1]
	add rsp,8
;; rsp=0 , %1928~0'(= a35◂ [ q0] ) %1926~2'(= a17◂ [ a9◂ [ ]{| l |}] ) %1909~{ } 
; #22 0'(= a35◂ [ q0] ) ⊢ 0(<2)◂0'(= a35◂ [ q0] )
;; rsp=0 , %1929~0(<2)◂0'(= a35◂ [ q0] ) %1926~2'(= a17◂ [ a9◂ [ ]{| l |}] ) %1909~{ } 
; ∎ 0(<2)◂0'(= a35◂ [ q0] )
; .dlt.ptn 2'(= a17◂ [ a9◂ [ ]{| l |}] )
;	.dlt adt ⊢ _  
; .dlt.ptn { }
; .mov_ptn2 0(<2)◂0'(= a35◂ [ q0] ) ⊢ 2'(= a3◂ [ a35◂ [ a17◂ [ a9◂ [ ]{| l |}]]] )
; .mov_ptn 0(<2)◂0'(= a35◂ [ q0] ) ⊢ 2'(= a3◂ [ a35◂ [ a17◂ [ a9◂ [ ]{| l |}]]] )
	mov rax,r13
	mov rdi,rax
	mov rax,r15
	mov r15,QWORD [r15] 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	jmp LB_2835
LB_2837:
;; ?. 3'(= a35◂ [ a17◂ [ a9◂ [ ]{| l |}]] ) ⊢ 1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] )
	mov rax,QWORD [rdi+8]
	mov r8,rax
;; rsp=0 , %1925~2'(= a2◂ [ *{ rr{| l |}}] ) %1911~1'(= r ) %1910~0'(= r ) %1909~{ } 
	jmp LB_2839
LB_2839:
; $ %[ "lc_code 10" ] ⊢ %[ "lc_code 10" ]
;; rsp=0 , %1930~%[ "lc_code 10" ] %1925~2'(= a2◂ [ *{ rr{| l |}}] ) %1911~1'(= r ) %1910~0'(= r ) %1909~{ } 
; #21 { { 0'(= r ) 1'(= r ) %[ "lc_code 10" ] } 2'(= a2◂ [ *{ rr{| l |}}] ) } ⊢ 0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "lc_code 10" ] } 2'(= a2◂ [ *{ rr{| l |}}] ) }
;; rsp=0 , %1931~0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "lc_code 10" ] } 2'(= a2◂ [ *{ rr{| l |}}] ) } %1909~{ } 
; #192 0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "lc_code 10" ] } 2'(= a2◂ [ *{ rr{| l |}}] ) } ⊢ 1(<2)◂0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "lc_code 10" ] } 2'(= a2◂ [ *{ rr{| l |}}] ) }
;; rsp=0 , %1932~1(<2)◂0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "lc_code 10" ] } 2'(= a2◂ [ *{ rr{| l |}}] ) } %1909~{ } 
; #22 1(<2)◂0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "lc_code 10" ] } 2'(= a2◂ [ *{ rr{| l |}}] ) } ⊢ 0(<2)◂1(<2)◂0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "lc_code 10" ] } 2'(= a2◂ [ *{ rr{| l |}}] ) }
;; rsp=0 , %1933~0(<2)◂1(<2)◂0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "lc_code 10" ] } 2'(= a2◂ [ *{ rr{| l |}}] ) } %1909~{ } 
; ∎ 0(<2)◂1(<2)◂0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "lc_code 10" ] } 2'(= a2◂ [ *{ rr{| l |}}] ) }
; .dlt.ptn { }
; .mov_ptn2 0(<2)◂1(<2)◂0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "lc_code 10" ] } 2'(= a2◂ [ *{ rr{| l |}}] ) } ⊢ 2'(= a3◂ [ a35◂ [ a17◂ [ a9◂ [ ]{| l |}]]] )
	mov r9,r8
; .mov_ptn 0(<2)◂1(<2)◂0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "lc_code 10" ] } 3'(= a2◂ [ *{ rr{| l |}}] ) } ⊢ 2'(= a3◂ [ a35◂ [ a17◂ [ a9◂ [ ]{| l |}]]] )
	mov rax,[SS_RCD_2_TOP]
	mov rsi,[rax] 
	mov QWORD [SS_RCD_2_TOP],rsi
	mov QWORD [rax],0
	mov r10,rax
	mov rax,[SS_RCD_3_TOP]
	mov rsi,[rax] 
	mov QWORD [SS_RCD_3_TOP],rsi
	mov QWORD [rax],0
	mov r11,rax
	mov rax,r13
	mov QWORD [r11+8+8*0],rax
	mov rax,r14
	mov QWORD [r11+8+8*1],rax
	mov rsi,1  
	mov rdi,24
	xor rax,rax 
	C_CALL_SF calloc
	mov QWORD [rax],10
	mov BYTE [rax+8+0],108
	mov BYTE [rax+8+1],99
	mov BYTE [rax+8+2],95
	mov BYTE [rax+8+3],99
	mov BYTE [rax+8+4],111
	mov BYTE [rax+8+5],100
	mov BYTE [rax+8+6],101
	mov BYTE [rax+8+7],32
	mov BYTE [rax+8+8],49
	mov BYTE [rax+8+9],48
	mov QWORD [r11+8+8*2],rax
	mov rax,r11
	mov QWORD [r10+8+8*0],rax
	mov rax,r9
	mov QWORD [r10+8+8*1],rax
	mov rax,r10
	mov BYTE [rax+6],0
	mov rdi,rax
	mov rax,r15
	mov r15,QWORD [r15] 
	mov QWORD [rax],0
	mov BYTE [rax+6],1
	mov QWORD [rax+8],rdi
	mov rdi,rax
	mov rax,r15
	mov r15,QWORD [r15] 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	jmp LB_2835
LB_2835:
	cmp BYTE [r8+6],0
	jnz LB_2803
	pop r14
	pop r9
	add rsp,8
	pop r13
	ret
LB_2803:
	pop rdi
	pop r9 
	pop r14
	pop r13
	ret
ETR_235:
	mov r9,0x0000_ffff_ffff_ffff
	and r9,[r13]
	call GRM_235
	ret
GRM_235:
	sub rsp,32
	mov QWORD [rsp+24],r13
	mov QWORD [rsp+16],r14 
	mov QWORD [rsp+8],r9
	jmp LB_2842
LB_2841:
	add r14,1 
LB_2842:
	cmp r14,r9
	jge LB_2843
	JZ_SPC BYTE [r13+8+r14], LB_2841
LB_2843
	call GRM_237
	cmp BYTE [r8+6],0
	jnz LB_2846
	jmp LB_2847
LB_2846:
	jmp LB_2844
LB_2847:
	sub rsp,8
	mov r8,[r8+8]
; .mov_ptn2 2'(= a35◂ [ a7◂ [ *{ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}]] ) ⊢ 8'(= a35◂ [ a7◂ [ *{ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}]] )
; .mov_ptn 2'(= a35◂ [ a7◂ [ *{ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}]] ) ⊢ 8'(= a35◂ [ a7◂ [ *{ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}]] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_2845
LB_2844:
	add rsp,0
	jmp LB_2840
LB_2845:
	mov QWORD [rsp+8*1],r14
	mov r13,QWORD [rsp+16+8*1]
	mov r14,QWORD [rsp+8*1]
	jmp LB_2849
LB_2849
;; rsp=1 , %1936~1'(= r ) %1935~0'(= r ) %1934~8'(= a35◂ [ a7◂ [ *{ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}]] ) 
;; ? 8'(= a35◂ [ a7◂ [ *{ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}]] ) ⊢ 0(<2)◂2'(= a7◂ [ *{ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}] )
	mov rdi,QWORD [rsp-8+8*1]
	cmp BYTE [rdi+6],0
	jnz LB_2850
	mov rax,QWORD [rdi+8]
	mov r8,rax
;; rsp=1 , %1938~2'(= a7◂ [ *{ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}] ) %1936~1'(= r ) %1935~0'(= r ) 
; #124 2'(= a7◂ [ *{ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}] ) ⊢ 0(<2)◂2'(= a7◂ [ *{ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}] )
;; rsp=1 , %1939~0(<2)◂2'(= a7◂ [ *{ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}] ) %1936~1'(= r ) %1935~0'(= r ) 
; #193 0(<2)◂2'(= a7◂ [ *{ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}] ) ⊢ 0(<2)◂0(<2)◂2'(= a7◂ [ *{ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}] )
;; rsp=1 , %1940~0(<2)◂0(<2)◂2'(= a7◂ [ *{ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}] ) %1936~1'(= r ) %1935~0'(= r ) 
; #22 0(<2)◂0(<2)◂2'(= a7◂ [ *{ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}] ) ⊢ 0(<2)◂0(<2)◂0(<2)◂2'(= a7◂ [ *{ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}] )
;; rsp=1 , %1941~0(<2)◂0(<2)◂0(<2)◂2'(= a7◂ [ *{ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}] ) %1936~1'(= r ) %1935~0'(= r ) 
; ∎ 0(<2)◂0(<2)◂0(<2)◂2'(= a7◂ [ *{ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}] )
; .dlt.ptn 1'(= r )
; .dlt.ptn 0'(= r )
; .mov_ptn2 0(<2)◂0(<2)◂0(<2)◂2'(= a7◂ [ *{ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}] ) ⊢ 2'(= a3◂ [ a35◂ [ a18◂ [ a9◂ [ ]{| l |}]]] )
	mov r13,r8
; .mov_ptn 0(<2)◂0(<2)◂0(<2)◂0'(= a7◂ [ *{ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}] ) ⊢ 2'(= a3◂ [ a35◂ [ a18◂ [ a9◂ [ ]{| l |}]]] )
	mov rax,r13
	mov rdi,rax
	mov rax,r15
	mov r15,QWORD [r15] 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov rdi,rax
	mov rax,r15
	mov r15,QWORD [r15] 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov rdi,rax
	mov rax,r15
	mov r15,QWORD [r15] 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,8
	jmp LB_2848
LB_2850:
;; ?. 8'(= a35◂ [ a7◂ [ *{ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}]] ) ⊢ 1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] )
	mov rax,QWORD [rdi+8]
	mov r8,rax
;; rsp=1 , %1937~2'(= a2◂ [ *{ rr{| l |}}] ) %1936~1'(= r ) %1935~0'(= r ) 
; #192 2'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] )
;; rsp=1 , %1942~1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] ) %1936~1'(= r ) %1935~0'(= r ) 
; #22 1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 0(<2)◂1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] )
;; rsp=1 , %1943~0(<2)◂1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] ) %1936~1'(= r ) %1935~0'(= r ) 
; ∎ 0(<2)◂1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] )
; .dlt.ptn 1'(= r )
; .dlt.ptn 0'(= r )
; .mov_ptn2 0(<2)◂1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 2'(= a3◂ [ a35◂ [ a18◂ [ a9◂ [ ]{| l |}]]] )
	mov r13,r8
; .mov_ptn 0(<2)◂1(<2)◂0'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 2'(= a3◂ [ a35◂ [ a18◂ [ a9◂ [ ]{| l |}]]] )
	mov rax,r13
	mov rdi,rax
	mov rax,r15
	mov r15,QWORD [r15] 
	mov QWORD [rax],0
	mov BYTE [rax+6],1
	mov QWORD [rax+8],rdi
	mov rdi,rax
	mov rax,r15
	mov r15,QWORD [r15] 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,8
	jmp LB_2848
LB_2848:
	cmp BYTE [r8+6],0
	jnz LB_2840
	pop r14
	pop r9
	add rsp,8
	pop r13
	ret
LB_2840:
	mov r9,QWORD [rsp+8]
	mov r14,QWORD [rsp+16]
	mov r13,QWORD [rsp+24]
	jmp LB_2853
LB_2852:
	add r14,1 
LB_2853:
	cmp r14,r9
	jge LB_2854
	JZ_SPC BYTE [r13+8+r14], LB_2852
LB_2854
	call GRM_205
	cmp BYTE [r8+6],0
	jnz LB_2857
	jmp LB_2858
LB_2857:
	jmp LB_2855
LB_2858:
	sub rsp,8
	mov r8,[r8+8]
; .mov_ptn2 2'(= a8◂ [ a13◂ [ {| l |}]] ) ⊢ 8'(= a8◂ [ a13◂ [ {| l |}]] )
; .mov_ptn 2'(= a8◂ [ a13◂ [ {| l |}]] ) ⊢ 8'(= a8◂ [ a13◂ [ {| l |}]] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_2856
LB_2855:
	add rsp,0
	jmp LB_2851
LB_2856:
	jmp LB_2860
LB_2859:
	add r14,1 
LB_2860:
	cmp r14,r9
	jge LB_2861
	JZ_SPC BYTE [r13+8+r14], LB_2859
LB_2861
	call GRM_207
	cmp BYTE [r8+6],0
	jnz LB_2864
	jmp LB_2865
LB_2864:
	jmp LB_2862
LB_2865:
	sub rsp,8
	mov r8,[r8+8]
; .mov_ptn2 2'(= a2◂ [ a8◂ [ a13◂ [ {| l |}]]] ) ⊢ 9'(= a2◂ [ a8◂ [ a13◂ [ {| l |}]]] )
; .mov_ptn 2'(= a2◂ [ a8◂ [ a13◂ [ {| l |}]]] ) ⊢ 9'(= a2◂ [ a8◂ [ a13◂ [ {| l |}]]] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_2863
LB_2862:
	add rsp,8
	jmp LB_2851
LB_2863:
	jmp LB_2867
LB_2866:
	add r14,1 
LB_2867:
	cmp r14,r9
	jge LB_2868
	JZ_SPC BYTE [r13+8+r14], LB_2866
LB_2868
	call GRM_234
	cmp BYTE [r8+6],0
	jnz LB_2871
	jmp LB_2872
LB_2871:
	jmp LB_2869
LB_2872:
	sub rsp,8
	mov r8,[r8+8]
; .mov_ptn2 2'(= a35◂ [ a17◂ [ a9◂ [ ]{| l |}]] ) ⊢ 10'(= a35◂ [ a17◂ [ a9◂ [ ]{| l |}]] )
; .mov_ptn 2'(= a35◂ [ a17◂ [ a9◂ [ ]{| l |}]] ) ⊢ 10'(= a35◂ [ a17◂ [ a9◂ [ ]{| l |}]] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_2870
LB_2869:
	add rsp,16
	jmp LB_2851
LB_2870:
	mov QWORD [rsp+8*3],r14
	mov r13,QWORD [rsp+16+8*3]
	mov r14,QWORD [rsp+8*3]
	jmp LB_2874
LB_2874
;; rsp=3 , %1948~1'(= r ) %1947~0'(= r ) %1946~10'(= a35◂ [ a17◂ [ a9◂ [ ]{| l |}]] ) %1945~9'(= a2◂ [ a8◂ [ a13◂ [ {| l |}]]] ) %1944~8'(= a8◂ [ a13◂ [ {| l |}]] ) 
;; ? 10'(= a35◂ [ a17◂ [ a9◂ [ ]{| l |}]] ) ⊢ 0(<2)◂2'(= a17◂ [ a9◂ [ ]{| l |}] )
	mov rdi,QWORD [rsp-8+8*1]
	cmp BYTE [rdi+6],0
	jnz LB_2875
	mov rax,QWORD [rdi+8]
	mov r8,rax
;; rsp=3 , %1950~2'(= a17◂ [ a9◂ [ ]{| l |}] ) %1948~1'(= r ) %1947~0'(= r ) %1945~9'(= a2◂ [ a8◂ [ a13◂ [ {| l |}]]] ) %1944~8'(= a8◂ [ a13◂ [ {| l |}]] ) 
; #21 { 8'(= a8◂ [ a13◂ [ {| l |}]] ) 9'(= a2◂ [ a8◂ [ a13◂ [ {| l |}]]] ) } ⊢ 0(<2)◂{ 8'(= a8◂ [ a13◂ [ {| l |}]] ) 9'(= a2◂ [ a8◂ [ a13◂ [ {| l |}]]] ) }
;; rsp=3 , %1951~0(<2)◂{ 8'(= a8◂ [ a13◂ [ {| l |}]] ) 9'(= a2◂ [ a8◂ [ a13◂ [ {| l |}]]] ) } %1950~2'(= a17◂ [ a9◂ [ ]{| l |}] ) %1948~1'(= r ) %1947~0'(= r ) 
; #123 { 0(<2)◂{ 8'(= a8◂ [ a13◂ [ {| l |}]] ) 9'(= a2◂ [ a8◂ [ a13◂ [ {| l |}]]] ) } 2'(= a17◂ [ a9◂ [ ]{| l |}] ) } ⊢ 1(<2)◂{ 0(<2)◂{ 8'(= a8◂ [ a13◂ [ {| l |}]] ) 9'(= a2◂ [ a8◂ [ a13◂ [ {| l |}]]] ) } 2'(= a17◂ [ a9◂ [ ]{| l |}] ) }
;; rsp=3 , %1952~1(<2)◂{ 0(<2)◂{ 8'(= a8◂ [ a13◂ [ {| l |}]] ) 9'(= a2◂ [ a8◂ [ a13◂ [ {| l |}]]] ) } 2'(= a17◂ [ a9◂ [ ]{| l |}] ) } %1948~1'(= r ) %1947~0'(= r ) 
; #193 1(<2)◂{ 0(<2)◂{ 8'(= a8◂ [ a13◂ [ {| l |}]] ) 9'(= a2◂ [ a8◂ [ a13◂ [ {| l |}]]] ) } 2'(= a17◂ [ a9◂ [ ]{| l |}] ) } ⊢ 0(<2)◂1(<2)◂{ 0(<2)◂{ 8'(= a8◂ [ a13◂ [ {| l |}]] ) 9'(= a2◂ [ a8◂ [ a13◂ [ {| l |}]]] ) } 2'(= a17◂ [ a9◂ [ ]{| l |}] ) }
;; rsp=3 , %1953~0(<2)◂1(<2)◂{ 0(<2)◂{ 8'(= a8◂ [ a13◂ [ {| l |}]] ) 9'(= a2◂ [ a8◂ [ a13◂ [ {| l |}]]] ) } 2'(= a17◂ [ a9◂ [ ]{| l |}] ) } %1948~1'(= r ) %1947~0'(= r ) 
; #22 0(<2)◂1(<2)◂{ 0(<2)◂{ 8'(= a8◂ [ a13◂ [ {| l |}]] ) 9'(= a2◂ [ a8◂ [ a13◂ [ {| l |}]]] ) } 2'(= a17◂ [ a9◂ [ ]{| l |}] ) } ⊢ 0(<2)◂0(<2)◂1(<2)◂{ 0(<2)◂{ 8'(= a8◂ [ a13◂ [ {| l |}]] ) 9'(= a2◂ [ a8◂ [ a13◂ [ {| l |}]]] ) } 2'(= a17◂ [ a9◂ [ ]{| l |}] ) }
;; rsp=3 , %1954~0(<2)◂0(<2)◂1(<2)◂{ 0(<2)◂{ 8'(= a8◂ [ a13◂ [ {| l |}]] ) 9'(= a2◂ [ a8◂ [ a13◂ [ {| l |}]]] ) } 2'(= a17◂ [ a9◂ [ ]{| l |}] ) } %1948~1'(= r ) %1947~0'(= r ) 
; ∎ 0(<2)◂0(<2)◂1(<2)◂{ 0(<2)◂{ 8'(= a8◂ [ a13◂ [ {| l |}]] ) 9'(= a2◂ [ a8◂ [ a13◂ [ {| l |}]]] ) } 2'(= a17◂ [ a9◂ [ ]{| l |}] ) }
; .dlt.ptn 1'(= r )
; .dlt.ptn 0'(= r )
; .mov_ptn2 0(<2)◂0(<2)◂1(<2)◂{ 0(<2)◂{ 8'(= a8◂ [ a13◂ [ {| l |}]] ) 9'(= a2◂ [ a8◂ [ a13◂ [ {| l |}]]] ) } 2'(= a17◂ [ a9◂ [ ]{| l |}] ) } ⊢ 2'(= a3◂ [ a35◂ [ a18◂ [ a9◂ [ ]{| l |}]]] )
	mov r13,r8
; .mov_ptn 0(<2)◂0(<2)◂1(<2)◂{ 0(<2)◂{ 8'(= a8◂ [ a13◂ [ {| l |}]] ) 9'(= a2◂ [ a8◂ [ a13◂ [ {| l |}]]] ) } 0'(= a17◂ [ a9◂ [ ]{| l |}] ) } ⊢ 2'(= a3◂ [ a35◂ [ a18◂ [ a9◂ [ ]{| l |}]]] )
	mov rax,[SS_RCD_2_TOP]
	mov rsi,[rax] 
	mov QWORD [SS_RCD_2_TOP],rsi
	mov QWORD [rax],0
	mov r14,rax
	mov rax,[SS_RCD_2_TOP]
	mov rsi,[rax] 
	mov QWORD [SS_RCD_2_TOP],rsi
	mov QWORD [rax],0
	mov r9,rax
	mov rax,QWORD [rsp-8+8*3]
	mov QWORD [r9+8+8*0],rax
	mov rax,QWORD [rsp-8+8*2]
	mov QWORD [r9+8+8*1],rax
	mov rax,r9
	mov BYTE [rax+6],0
	mov QWORD [r14+8+8*0],rax
	mov rax,r13
	mov QWORD [r14+8+8*1],rax
	mov rax,r14
	mov BYTE [rax+6],1
	mov rdi,rax
	mov rax,r15
	mov r15,QWORD [r15] 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov rdi,rax
	mov rax,r15
	mov r15,QWORD [r15] 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,24
	jmp LB_2873
LB_2875:
;; ?. 10'(= a35◂ [ a17◂ [ a9◂ [ ]{| l |}]] ) ⊢ 1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] )
	mov rax,QWORD [rdi+8]
	mov r8,rax
;; rsp=3 , %1949~2'(= a2◂ [ *{ rr{| l |}}] ) %1948~1'(= r ) %1947~0'(= r ) %1945~9'(= a2◂ [ a8◂ [ a13◂ [ {| l |}]]] ) %1944~8'(= a8◂ [ a13◂ [ {| l |}]] ) 
; #192 2'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] )
;; rsp=3 , %1955~1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] ) %1948~1'(= r ) %1947~0'(= r ) %1945~9'(= a2◂ [ a8◂ [ a13◂ [ {| l |}]]] ) %1944~8'(= a8◂ [ a13◂ [ {| l |}]] ) 
; #22 1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 0(<2)◂1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] )
;; rsp=3 , %1956~0(<2)◂1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] ) %1948~1'(= r ) %1947~0'(= r ) %1945~9'(= a2◂ [ a8◂ [ a13◂ [ {| l |}]]] ) %1944~8'(= a8◂ [ a13◂ [ {| l |}]] ) 
; ∎ 0(<2)◂1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] )
; .dlt.ptn 1'(= r )
; .dlt.ptn 0'(= r )
; .dlt.ptn 9'(= a2◂ [ a8◂ [ a13◂ [ {| l |}]]] )
;	.dlt adt ⊢ _  
; .dlt.ptn 8'(= a8◂ [ a13◂ [ {| l |}]] )
;	.dlt adt ⊢ _  
; .mov_ptn2 0(<2)◂1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 2'(= a3◂ [ a35◂ [ a18◂ [ a9◂ [ ]{| l |}]]] )
	mov r13,r8
; .mov_ptn 0(<2)◂1(<2)◂0'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 2'(= a3◂ [ a35◂ [ a18◂ [ a9◂ [ ]{| l |}]]] )
	mov rax,r13
	mov rdi,rax
	mov rax,r15
	mov r15,QWORD [r15] 
	mov QWORD [rax],0
	mov BYTE [rax+6],1
	mov QWORD [rax+8],rdi
	mov rdi,rax
	mov rax,r15
	mov r15,QWORD [r15] 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,24
	jmp LB_2873
LB_2873:
	cmp BYTE [r8+6],0
	jnz LB_2851
	pop r14
	pop r9
	add rsp,8
	pop r13
	ret
LB_2851:
	pop rdi
	pop r9 
	pop r14
	pop r13
	ret
ETR_236:
	mov r9,0x0000_ffff_ffff_ffff
	and r9,[r13]
	call GRM_236
	ret
GRM_236:
	sub rsp,32
	mov QWORD [rsp+24],r13
	mov QWORD [rsp+16],r14 
	mov QWORD [rsp+8],r9
	jmp LB_2878
LB_2877:
	add r14,1 
LB_2878:
	cmp r14,r9
	jge LB_2879
	JZ_SPC BYTE [r13+8+r14], LB_2877
LB_2879
	call GRM_217
	cmp BYTE [r8+6],0
	jnz LB_2882
	jmp LB_2883
LB_2882:
	jmp LB_2880
LB_2883:
	sub rsp,8
	mov r8,[r8+8]
; .mov_ptn2 2'(= a35◂ [ *{ }] ) ⊢ 8'(= a35◂ [ *{ }] )
; .mov_ptn 2'(= a35◂ [ *{ }] ) ⊢ 8'(= a35◂ [ *{ }] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_2881
LB_2880:
	add rsp,0
	jmp LB_2876
LB_2881:
	jmp LB_2885
LB_2884:
	add r14,1 
LB_2885:
	cmp r14,r9
	jge LB_2886
	JZ_SPC BYTE [r13+8+r14], LB_2884
LB_2886
	lea rax,[r14+4]
	cmp rax,r9
	jg LB_2889
	jmp LB_2890
LB_2889:
	mov r8,unt_1
	jmp LB_2887
LB_2890:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],226
	jnz LB_2891
	cmp BYTE [rdi+1],136
	jnz LB_2891
	cmp BYTE [rdi+2],144
	jnz LB_2891
	cmp BYTE [rdi+3],46
	jnz LB_2891
	jmp LB_2892
LB_2891:
	mov r8,unt_1
	jmp LB_2887
LB_2892:
	add r14,4
	jmp LB_2888
LB_2887:
	add rsp,8
	jmp LB_2876
LB_2888:
	jmp LB_2894
LB_2893:
	add r14,1 
LB_2894:
	cmp r14,r9
	jge LB_2895
	JZ_SPC BYTE [r13+8+r14], LB_2893
LB_2895
	call GRM_238
	cmp BYTE [r8+6],0
	jnz LB_2898
	jmp LB_2899
LB_2898:
	jmp LB_2896
LB_2899:
	sub rsp,8
	mov r8,[r8+8]
; .mov_ptn2 2'(= a35◂ [ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]] ) ⊢ 9'(= a35◂ [ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]] )
; .mov_ptn 2'(= a35◂ [ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]] ) ⊢ 9'(= a35◂ [ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_2897
LB_2896:
	add rsp,8
	pop rdi
	pop r9 
	pop r14
	pop r13
	ret
LB_2897:
	jmp LB_2901
LB_2900:
	add r14,1 
LB_2901:
	cmp r14,r9
	jge LB_2902
	JZ_SPC BYTE [r13+8+r14], LB_2900
LB_2902
	call GRM_234
	cmp BYTE [r8+6],0
	jnz LB_2905
	jmp LB_2906
LB_2905:
	jmp LB_2903
LB_2906:
	sub rsp,8
	mov r8,[r8+8]
; .mov_ptn2 2'(= a35◂ [ a17◂ [ a9◂ [ ]{| l |}]] ) ⊢ 10'(= a35◂ [ a17◂ [ a9◂ [ ]{| l |}]] )
; .mov_ptn 2'(= a35◂ [ a17◂ [ a9◂ [ ]{| l |}]] ) ⊢ 10'(= a35◂ [ a17◂ [ a9◂ [ ]{| l |}]] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_2904
LB_2903:
	add rsp,16
	pop rdi
	pop r9 
	pop r14
	pop r13
	ret
LB_2904:
	mov QWORD [rsp+8*3],r14
	mov r13,QWORD [rsp+16+8*3]
	mov r14,QWORD [rsp+8*3]
	jmp LB_2908
LB_2909: ; 194 { 0'(= a35◂ [ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]] ) 1'(= a35◂ [ a17◂ [ a9◂ [ ]{| l |}]] ) } ⊢ 0'(= a35◂ [ *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a17◂ [ a9◂ [ ]{| l |}]}] ) : ({ _t35◂_lst◂_t21◂_s8◂_t9 _t35◂_t17◂_s8◂_t9 }→_t35◂{ _lst◂_t21◂_s8◂_t9 _t17◂_s8◂_t9 })
;; rsp=0 , %1131~1'(= a35◂ [ a17◂ [ a9◂ [ ]{| l |}]] ) %1130~0'(= a35◂ [ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]] ) 
;; ? 0'(= a35◂ [ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]] ) ⊢ 0(<2)◂2'(= a2◂ [ a21◂ [ a9◂ [ ]{| l |}]] )
	mov rdi,r13
	cmp BYTE [rdi+6],0
	jnz LB_2910
	mov rax,QWORD [rdi+8]
	mov r8,rax
;; rsp=0 , %1133~2'(= a2◂ [ a21◂ [ a9◂ [ ]{| l |}]] ) %1131~1'(= a35◂ [ a17◂ [ a9◂ [ ]{| l |}]] ) 
;; ? 1'(= a35◂ [ a17◂ [ a9◂ [ ]{| l |}]] ) ⊢ 0(<2)◂0'(= a17◂ [ a9◂ [ ]{| l |}] )
	mov rdi,r14
	cmp BYTE [rdi+6],0
	jnz LB_2911
	mov rax,QWORD [rdi+8]
	mov r13,rax
;; rsp=0 , %1135~0'(= a17◂ [ a9◂ [ ]{| l |}] ) %1133~2'(= a2◂ [ a21◂ [ a9◂ [ ]{| l |}]] ) 
; #193 { 2'(= a2◂ [ a21◂ [ a9◂ [ ]{| l |}]] ) 0'(= a17◂ [ a9◂ [ ]{| l |}] ) } ⊢ 0(<2)◂{ 2'(= a2◂ [ a21◂ [ a9◂ [ ]{| l |}]] ) 0'(= a17◂ [ a9◂ [ ]{| l |}] ) }
;; rsp=0 , %1136~0(<2)◂{ 2'(= a2◂ [ a21◂ [ a9◂ [ ]{| l |}]] ) 0'(= a17◂ [ a9◂ [ ]{| l |}] ) } 
; ∎ 0(<2)◂{ 2'(= a2◂ [ a21◂ [ a9◂ [ ]{| l |}]] ) 0'(= a17◂ [ a9◂ [ ]{| l |}] ) }
; .mov_ptn2 0(<2)◂{ 2'(= a2◂ [ a21◂ [ a9◂ [ ]{| l |}]] ) 0'(= a17◂ [ a9◂ [ ]{| l |}] ) } ⊢ 0'(= a35◂ [ *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a17◂ [ a9◂ [ ]{| l |}]}] )
	mov r14,r13
; .mov_ptn 0(<2)◂{ 2'(= a2◂ [ a21◂ [ a9◂ [ ]{| l |}]] ) 1'(= a17◂ [ a9◂ [ ]{| l |}] ) } ⊢ 0'(= a35◂ [ *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a17◂ [ a9◂ [ ]{| l |}]}] )
	mov rax,[SS_RCD_2_TOP]
	mov rsi,[rax] 
	mov QWORD [SS_RCD_2_TOP],rsi
	mov QWORD [rax],0
	mov r9,rax
	mov rax,r8
	mov QWORD [r9+8+8*0],rax
	mov rax,r14
	mov QWORD [r9+8+8*1],rax
	mov rax,r9
	mov BYTE [rax+6],0
	mov r13,rax
	ret
LB_2911:
;; ?. 1'(= a35◂ [ a17◂ [ a9◂ [ ]{| l |}]] ) ⊢ 1(<2)◂0'(= a2◂ [ *{ rr{| l |}}] )
	mov rax,QWORD [rdi+8]
	mov r13,rax
;; rsp=0 , %1134~0'(= a2◂ [ *{ rr{| l |}}] ) %1133~2'(= a2◂ [ a21◂ [ a9◂ [ ]{| l |}]] ) 
; #192 0'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 1(<2)◂0'(= a2◂ [ *{ rr{| l |}}] )
;; rsp=0 , %1137~1(<2)◂0'(= a2◂ [ *{ rr{| l |}}] ) %1133~2'(= a2◂ [ a21◂ [ a9◂ [ ]{| l |}]] ) 
; ∎ 1(<2)◂0'(= a2◂ [ *{ rr{| l |}}] )
; .dlt.ptn 2'(= a2◂ [ a21◂ [ a9◂ [ ]{| l |}]] )
;	.dlt adt ⊢ _  
; .mov_ptn2 1(<2)◂0'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 0'(= a35◂ [ *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a17◂ [ a9◂ [ ]{| l |}]}] )
	mov r14,r13
; .mov_ptn 1(<2)◂1'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 0'(= a35◂ [ *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a17◂ [ a9◂ [ ]{| l |}]}] )
	mov rax,r14
	mov rdi,rax
	mov rax,r15
	mov r15,QWORD [r15] 
	mov QWORD [rax],0
	mov BYTE [rax+6],1
	mov QWORD [rax+8],rdi
	mov r13,rax
	ret
LB_2910:
;; ?. 0'(= a35◂ [ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]] ) ⊢ 1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] )
	mov rax,QWORD [rdi+8]
	mov r8,rax
;; rsp=0 , %1132~2'(= a2◂ [ *{ rr{| l |}}] ) %1131~1'(= a35◂ [ a17◂ [ a9◂ [ ]{| l |}]] ) 
;; ? 1'(= a35◂ [ a17◂ [ a9◂ [ ]{| l |}]] ) ⊢ 0(<2)◂0'(= a17◂ [ a9◂ [ ]{| l |}] )
	mov rdi,r14
	cmp BYTE [rdi+6],0
	jnz LB_2912
	mov rax,QWORD [rdi+8]
	mov r13,rax
;; rsp=0 , %1139~0'(= a17◂ [ a9◂ [ ]{| l |}] ) %1132~2'(= a2◂ [ *{ rr{| l |}}] ) 
; #192 2'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] )
;; rsp=0 , %1140~1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] ) %1139~0'(= a17◂ [ a9◂ [ ]{| l |}] ) 
; ∎ 1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] )
; .dlt.ptn 0'(= a17◂ [ a9◂ [ ]{| l |}] )
;	.dlt adt ⊢ _  
; .mov_ptn2 1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 0'(= a35◂ [ *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a17◂ [ a9◂ [ ]{| l |}]}] )
; .mov_ptn 1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 0'(= a35◂ [ *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a17◂ [ a9◂ [ ]{| l |}]}] )
	mov rax,r8
	mov rdi,rax
	mov rax,r15
	mov r15,QWORD [r15] 
	mov QWORD [rax],0
	mov BYTE [rax+6],1
	mov QWORD [rax+8],rdi
	mov r13,rax
	ret
LB_2912:
;; ?. 1'(= a35◂ [ a17◂ [ a9◂ [ ]{| l |}]] ) ⊢ 1(<2)◂0'(= a2◂ [ *{ rr{| l |}}] )
	mov rax,QWORD [rdi+8]
	mov r13,rax
;; rsp=0 , %1138~0'(= a2◂ [ *{ rr{| l |}}] ) %1132~2'(= a2◂ [ *{ rr{| l |}}] ) 
; rsp_d=0, #53 { 2'(= a2◂ [ *{ rr{| l |}}] ) 0'(= a2◂ [ *{ rr{| l |}}] ) } ⊢ 0'(= a2◂ [ *{ rr{| l |}}] )
; .mov_ptn2 { 2'(= a2◂ [ *{ rr{| l |}}] ) 0'(= a2◂ [ *{ rr{| l |}}] ) } ⊢ { 0'(= a2◂ [ *{ rr{| l |}}] ) 1'(= a2◂ [ *{ rr{| l |}}] ) }
; .mov_ptn 0'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 1'(= a2◂ [ *{ rr{| l |}}] )
	mov rax,r13
	mov r14,rax
; .mov_ptn 2'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 0'(= a2◂ [ *{ rr{| l |}}] )
	mov rax,r8
	mov r13,rax
	call LB_1604

;; rsp=0 , %1141~0'(= a2◂ [ *{ rr{| l |}}] ) 
; #192 0'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 1(<2)◂0'(= a2◂ [ *{ rr{| l |}}] )
;; rsp=0 , %1142~1(<2)◂0'(= a2◂ [ *{ rr{| l |}}] ) 
; ∎ 1(<2)◂0'(= a2◂ [ *{ rr{| l |}}] )
; .mov_ptn2 1(<2)◂0'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 0'(= a35◂ [ *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a17◂ [ a9◂ [ ]{| l |}]}] )
	mov r14,r13
; .mov_ptn 1(<2)◂1'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 0'(= a35◂ [ *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a17◂ [ a9◂ [ ]{| l |}]}] )
	mov rax,r14
	mov rdi,rax
	mov rax,r15
	mov r15,QWORD [r15] 
	mov QWORD [rax],0
	mov BYTE [rax+6],1
	mov QWORD [rax+8],rdi
	mov r13,rax
	ret
LB_2908
;; rsp=3 , %1961~1'(= r ) %1960~0'(= r ) %1959~10'(= a35◂ [ a17◂ [ a9◂ [ ]{| l |}]] ) %1958~9'(= a35◂ [ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]] ) %1957~8'(= a35◂ [ *{ }] ) 
; rsp_d=0, #194 { 9'(= a35◂ [ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]] ) 10'(= a35◂ [ a17◂ [ a9◂ [ ]{| l |}]] ) } ⊢ 2'(= a35◂ [ *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a17◂ [ a9◂ [ ]{| l |}]}] )
	sub rsp,16
	mov QWORD [rsp+8*0],r13
	mov QWORD [rsp+8*1],r14
; .mov_ptn2 { 9'(= a35◂ [ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]] ) 10'(= a35◂ [ a17◂ [ a9◂ [ ]{| l |}]] ) } ⊢ { 0'(= a35◂ [ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]] ) 1'(= a35◂ [ a17◂ [ a9◂ [ ]{| l |}]] ) }
; .mov_ptn 10'(= a35◂ [ a17◂ [ a9◂ [ ]{| l |}]] ) ⊢ 1'(= a35◂ [ a17◂ [ a9◂ [ ]{| l |}]] )
	mov rax,QWORD [rsp-8+8*3]
	mov r14,rax
; .mov_ptn 9'(= a35◂ [ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]] ) ⊢ 0'(= a35◂ [ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]] )
	mov rax,QWORD [rsp-8+8*4]
	mov r13,rax
	call LB_2909

	mov r14,QWORD [rsp-8+8*2]
	mov rax,QWORD [rsp-8+8*1]
	mov r8,r13
	mov r13,rax
	add rsp,32
;; rsp=1 , %1962~2'(= a35◂ [ *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a17◂ [ a9◂ [ ]{| l |}]}] ) %1961~1'(= r ) %1960~0'(= r ) %1957~8'(= a35◂ [ *{ }] ) 
;; ? 2'(= a35◂ [ *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a17◂ [ a9◂ [ ]{| l |}]}] ) ⊢ 0(<2)◂{ 3'(= a2◂ [ a21◂ [ a9◂ [ ]{| l |}]] ) 4'(= a17◂ [ a9◂ [ ]{| l |}] ) }
	mov rdi,r8
	cmp BYTE [rdi+6],0
	jnz LB_2913
	mov rdi,r8
	mov rdi,QWORD [rdi+8+8*0]
	mov r9,rdi
	mov rdi,r8
	mov rdi,QWORD [rdi+8+8*1]
	mov r10,rdi
;; rsp=1 , %1965~4'(= a17◂ [ a9◂ [ ]{| l |}] ) %1964~3'(= a2◂ [ a21◂ [ a9◂ [ ]{| l |}]] ) %1961~1'(= r ) %1960~0'(= r ) %1957~8'(= a35◂ [ *{ }] ) 
; #116 4'(= a17◂ [ a9◂ [ ]{| l |}] ) ⊢ 2(<3)◂4'(= a17◂ [ a9◂ [ ]{| l |}] )
;; rsp=1 , %1966~2(<3)◂4'(= a17◂ [ a9◂ [ ]{| l |}] ) %1964~3'(= a2◂ [ a21◂ [ a9◂ [ ]{| l |}]] ) %1961~1'(= r ) %1960~0'(= r ) %1957~8'(= a35◂ [ *{ }] ) 
; #49 { 3'(= a2◂ [ a21◂ [ a9◂ [ ]{| l |}]] ) 2(<3)◂4'(= a17◂ [ a9◂ [ ]{| l |}] ) } ⊢ 1(<2)◂{ 3'(= a2◂ [ a21◂ [ a9◂ [ ]{| l |}]] ) 2(<3)◂4'(= a17◂ [ a9◂ [ ]{| l |}] ) }
;; rsp=1 , %1967~1(<2)◂{ 3'(= a2◂ [ a21◂ [ a9◂ [ ]{| l |}]] ) 2(<3)◂4'(= a17◂ [ a9◂ [ ]{| l |}] ) } %1961~1'(= r ) %1960~0'(= r ) %1957~8'(= a35◂ [ *{ }] ) 
; #193 1(<2)◂{ 3'(= a2◂ [ a21◂ [ a9◂ [ ]{| l |}]] ) 2(<3)◂4'(= a17◂ [ a9◂ [ ]{| l |}] ) } ⊢ 0(<2)◂1(<2)◂{ 3'(= a2◂ [ a21◂ [ a9◂ [ ]{| l |}]] ) 2(<3)◂4'(= a17◂ [ a9◂ [ ]{| l |}] ) }
;; rsp=1 , %1968~0(<2)◂1(<2)◂{ 3'(= a2◂ [ a21◂ [ a9◂ [ ]{| l |}]] ) 2(<3)◂4'(= a17◂ [ a9◂ [ ]{| l |}] ) } %1961~1'(= r ) %1960~0'(= r ) %1957~8'(= a35◂ [ *{ }] ) 
; #22 0(<2)◂1(<2)◂{ 3'(= a2◂ [ a21◂ [ a9◂ [ ]{| l |}]] ) 2(<3)◂4'(= a17◂ [ a9◂ [ ]{| l |}] ) } ⊢ 0(<2)◂0(<2)◂1(<2)◂{ 3'(= a2◂ [ a21◂ [ a9◂ [ ]{| l |}]] ) 2(<3)◂4'(= a17◂ [ a9◂ [ ]{| l |}] ) }
;; rsp=1 , %1969~0(<2)◂0(<2)◂1(<2)◂{ 3'(= a2◂ [ a21◂ [ a9◂ [ ]{| l |}]] ) 2(<3)◂4'(= a17◂ [ a9◂ [ ]{| l |}] ) } %1961~1'(= r ) %1960~0'(= r ) %1957~8'(= a35◂ [ *{ }] ) 
; ∎ 0(<2)◂0(<2)◂1(<2)◂{ 3'(= a2◂ [ a21◂ [ a9◂ [ ]{| l |}]] ) 2(<3)◂4'(= a17◂ [ a9◂ [ ]{| l |}] ) }
; .dlt.ptn 1'(= r )
; .dlt.ptn 0'(= r )
; .dlt.ptn 8'(= a35◂ [ *{ }] )
;	.dlt adt ⊢ _  
; .mov_ptn2 0(<2)◂0(<2)◂1(<2)◂{ 3'(= a2◂ [ a21◂ [ a9◂ [ ]{| l |}]] ) 2(<3)◂4'(= a17◂ [ a9◂ [ ]{| l |}] ) } ⊢ 2'(= a3◂ [ a35◂ [ a7◂ [ *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}]]] )
; .mov_ptn 0(<2)◂0(<2)◂1(<2)◂{ 3'(= a2◂ [ a21◂ [ a9◂ [ ]{| l |}]] ) 2(<3)◂4'(= a17◂ [ a9◂ [ ]{| l |}] ) } ⊢ 2'(= a3◂ [ a35◂ [ a7◂ [ *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}]]] )
	mov rax,[SS_RCD_2_TOP]
	mov rsi,[rax] 
	mov QWORD [SS_RCD_2_TOP],rsi
	mov QWORD [rax],0
	mov r13,rax
	mov rax,r9
	mov QWORD [r13+8+8*0],rax
	mov rax,r10
	mov rdi,rax
	mov rax,r15
	mov r15,QWORD [r15] 
	mov QWORD [rax],0
	mov BYTE [rax+6],2
	mov QWORD [rax+8],rdi
	mov QWORD [r13+8+8*1],rax
	mov rax,r13
	mov BYTE [rax+6],1
	mov rdi,rax
	mov rax,r15
	mov r15,QWORD [r15] 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov rdi,rax
	mov rax,r15
	mov r15,QWORD [r15] 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,8
	jmp LB_2907
LB_2913:
;; ?. 2'(= a35◂ [ *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a17◂ [ a9◂ [ ]{| l |}]}] ) ⊢ 1(<2)◂3'(= a2◂ [ *{ rr{| l |}}] )
	mov rax,QWORD [rdi+8]
	mov r9,rax
;; rsp=1 , %1963~3'(= a2◂ [ *{ rr{| l |}}] ) %1961~1'(= r ) %1960~0'(= r ) %1957~8'(= a35◂ [ *{ }] ) 
; #192 3'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 1(<2)◂3'(= a2◂ [ *{ rr{| l |}}] )
;; rsp=1 , %1970~1(<2)◂3'(= a2◂ [ *{ rr{| l |}}] ) %1961~1'(= r ) %1960~0'(= r ) %1957~8'(= a35◂ [ *{ }] ) 
; #22 1(<2)◂3'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 0(<2)◂1(<2)◂3'(= a2◂ [ *{ rr{| l |}}] )
;; rsp=1 , %1971~0(<2)◂1(<2)◂3'(= a2◂ [ *{ rr{| l |}}] ) %1961~1'(= r ) %1960~0'(= r ) %1957~8'(= a35◂ [ *{ }] ) 
; ∎ 0(<2)◂1(<2)◂3'(= a2◂ [ *{ rr{| l |}}] )
; .dlt.ptn 1'(= r )
; .dlt.ptn 0'(= r )
; .dlt.ptn 8'(= a35◂ [ *{ }] )
;	.dlt adt ⊢ _  
; .mov_ptn2 0(<2)◂1(<2)◂3'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 2'(= a3◂ [ a35◂ [ a7◂ [ *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}]]] )
; .mov_ptn 0(<2)◂1(<2)◂3'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 2'(= a3◂ [ a35◂ [ a7◂ [ *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}]]] )
	mov rax,r9
	mov rdi,rax
	mov rax,r15
	mov r15,QWORD [r15] 
	mov QWORD [rax],0
	mov BYTE [rax+6],1
	mov QWORD [rax+8],rdi
	mov rdi,rax
	mov rax,r15
	mov r15,QWORD [r15] 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,8
	jmp LB_2907
LB_2907:
	cmp BYTE [r8+6],0
	jnz LB_2876
	pop r14
	pop r9
	add rsp,8
	pop r13
	ret
LB_2876:
	mov r9,QWORD [rsp+8]
	mov r14,QWORD [rsp+16]
	mov r13,QWORD [rsp+24]
	jmp LB_2916
LB_2915:
	add r14,1 
LB_2916:
	cmp r14,r9
	jge LB_2917
	JZ_SPC BYTE [r13+8+r14], LB_2915
LB_2917
	call GRM_217
	cmp BYTE [r8+6],0
	jnz LB_2920
	jmp LB_2921
LB_2920:
	jmp LB_2918
LB_2921:
	sub rsp,8
	mov r8,[r8+8]
; .mov_ptn2 2'(= a35◂ [ *{ }] ) ⊢ 8'(= a35◂ [ *{ }] )
; .mov_ptn 2'(= a35◂ [ *{ }] ) ⊢ 8'(= a35◂ [ *{ }] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_2919
LB_2918:
	add rsp,0
	jmp LB_2914
LB_2919:
	jmp LB_2923
LB_2922:
	add r14,1 
LB_2923:
	cmp r14,r9
	jge LB_2924
	JZ_SPC BYTE [r13+8+r14], LB_2922
LB_2924
	lea rax,[r14+3]
	cmp rax,r9
	jg LB_2927
	jmp LB_2928
LB_2927:
	mov r8,unt_1
	jmp LB_2925
LB_2928:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],226
	jnz LB_2929
	cmp BYTE [rdi+1],136
	jnz LB_2929
	cmp BYTE [rdi+2],144
	jnz LB_2929
	jmp LB_2930
LB_2929:
	mov r8,unt_1
	jmp LB_2925
LB_2930:
	add r14,3
	jmp LB_2926
LB_2925:
	add rsp,8
	jmp LB_2914
LB_2926:
	jmp LB_2932
LB_2931:
	add r14,1 
LB_2932:
	cmp r14,r9
	jge LB_2933
	JZ_SPC BYTE [r13+8+r14], LB_2931
LB_2933
	call GRM_238
	cmp BYTE [r8+6],0
	jnz LB_2936
	jmp LB_2937
LB_2936:
	jmp LB_2934
LB_2937:
	sub rsp,8
	mov r8,[r8+8]
; .mov_ptn2 2'(= a35◂ [ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]] ) ⊢ 9'(= a35◂ [ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]] )
; .mov_ptn 2'(= a35◂ [ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]] ) ⊢ 9'(= a35◂ [ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_2935
LB_2934:
	add rsp,8
	jmp LB_2914
LB_2935:
	jmp LB_2939
LB_2938:
	add r14,1 
LB_2939:
	cmp r14,r9
	jge LB_2940
	JZ_SPC BYTE [r13+8+r14], LB_2938
LB_2940
	call GRM_234
	cmp BYTE [r8+6],0
	jnz LB_2943
	jmp LB_2944
LB_2943:
	jmp LB_2941
LB_2944:
	sub rsp,8
	mov r8,[r8+8]
; .mov_ptn2 2'(= a35◂ [ a17◂ [ a9◂ [ ]{| l |}]] ) ⊢ 10'(= a35◂ [ a17◂ [ a9◂ [ ]{| l |}]] )
; .mov_ptn 2'(= a35◂ [ a17◂ [ a9◂ [ ]{| l |}]] ) ⊢ 10'(= a35◂ [ a17◂ [ a9◂ [ ]{| l |}]] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_2942
LB_2941:
	add rsp,16
	jmp LB_2914
LB_2942:
	jmp LB_2946
LB_2945:
	add r14,1 
LB_2946:
	cmp r14,r9
	jge LB_2947
	JZ_SPC BYTE [r13+8+r14], LB_2945
LB_2947
	call GRM_236
	cmp BYTE [r8+6],0
	jnz LB_2950
	jmp LB_2951
LB_2950:
	jmp LB_2948
LB_2951:
	sub rsp,8
	mov r8,[r8+8]
; .mov_ptn2 2'(= a35◂ [ a7◂ [ *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}]] ) ⊢ 11'(= a35◂ [ a7◂ [ *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}]] )
; .mov_ptn 2'(= a35◂ [ a7◂ [ *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}]] ) ⊢ 11'(= a35◂ [ a7◂ [ *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}]] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_2949
LB_2948:
	add rsp,24
	jmp LB_2914
LB_2949:
	mov QWORD [rsp+8*4],r14
	mov r13,QWORD [rsp+16+8*4]
	mov r14,QWORD [rsp+8*4]
	jmp LB_2953
LB_2954: ; 194 { 0'(= a35◂ [ *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a17◂ [ a9◂ [ ]{| l |}]}] ) 1'(= a35◂ [ a7◂ [ *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}]] ) } ⊢ 0'(= a35◂ [ *{ *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a17◂ [ a9◂ [ ]{| l |}]}a7◂ [ *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}]}] ) : ({ _t35◂{ _lst◂_t21◂_s8◂_t9 _t17◂_s8◂_t9 } _t35◂_t7◂{ _lst◂_t21◂_s8◂_t9 _t20◂_s8◂_t9 } }→_t35◂{ { _lst◂_t21◂_s8◂_t9 _t17◂_s8◂_t9 } _t7◂{ _lst◂_t21◂_s8◂_t9 _t20◂_s8◂_t9 } })
;; rsp=0 , %1131~1'(= a35◂ [ a7◂ [ *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}]] ) %1130~0'(= a35◂ [ *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a17◂ [ a9◂ [ ]{| l |}]}] ) 
;; ? 0'(= a35◂ [ *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a17◂ [ a9◂ [ ]{| l |}]}] ) ⊢ 0(<2)◂0'(= *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a17◂ [ a9◂ [ ]{| l |}]} )
	mov rdi,r13
	cmp BYTE [rdi+6],0
	jnz LB_2955
;; rsp=0 , %1133~0'(= *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a17◂ [ a9◂ [ ]{| l |}]} ) %1131~1'(= a35◂ [ a7◂ [ *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}]] ) 
;; ? 1'(= a35◂ [ a7◂ [ *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}]] ) ⊢ 0(<2)◂2'(= a7◂ [ *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}] )
	mov rdi,r14
	cmp BYTE [rdi+6],0
	jnz LB_2956
	mov rax,QWORD [rdi+8]
	mov r8,rax
;; rsp=0 , %1135~2'(= a7◂ [ *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}] ) %1133~0'(= *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a17◂ [ a9◂ [ ]{| l |}]} ) 
; #193 { 0'(= *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a17◂ [ a9◂ [ ]{| l |}]} ) 2'(= a7◂ [ *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}] ) } ⊢ 0(<2)◂{ 0'(= *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a17◂ [ a9◂ [ ]{| l |}]} ) 2'(= a7◂ [ *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}] ) }
;; rsp=0 , %1136~0(<2)◂{ 0'(= *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a17◂ [ a9◂ [ ]{| l |}]} ) 2'(= a7◂ [ *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}] ) } 
; ∎ 0(<2)◂{ 0'(= *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a17◂ [ a9◂ [ ]{| l |}]} ) 2'(= a7◂ [ *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}] ) }
; .mov_ptn2 0(<2)◂{ 0'(= *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a17◂ [ a9◂ [ ]{| l |}]} ) 2'(= a7◂ [ *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}] ) } ⊢ 0'(= a35◂ [ *{ *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a17◂ [ a9◂ [ ]{| l |}]}a7◂ [ *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}]}] )
	mov r14,r13
; .mov_ptn 0(<2)◂{ 1'(= *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a17◂ [ a9◂ [ ]{| l |}]} ) 2'(= a7◂ [ *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}] ) } ⊢ 0'(= a35◂ [ *{ *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a17◂ [ a9◂ [ ]{| l |}]}a7◂ [ *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}]}] )
	mov rax,[SS_RCD_2_TOP]
	mov rsi,[rax] 
	mov QWORD [SS_RCD_2_TOP],rsi
	mov QWORD [rax],0
	mov r9,rax
	mov rax,r14
	mov QWORD [r9+8+8*0],rax
	mov rax,r8
	mov QWORD [r9+8+8*1],rax
	mov rax,r9
	mov BYTE [rax+6],0
	mov r13,rax
	ret
LB_2956:
;; ?. 1'(= a35◂ [ a7◂ [ *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}]] ) ⊢ 1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] )
	mov rax,QWORD [rdi+8]
	mov r8,rax
;; rsp=0 , %1134~2'(= a2◂ [ *{ rr{| l |}}] ) %1133~0'(= *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a17◂ [ a9◂ [ ]{| l |}]} ) 
; #192 2'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] )
;; rsp=0 , %1137~1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] ) %1133~0'(= *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a17◂ [ a9◂ [ ]{| l |}]} ) 
; ∎ 1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] )
; .dlt.ptn 0'(= *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a17◂ [ a9◂ [ ]{| l |}]} )
; .dlt.hp rcd
; .mov_ptn2 1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 0'(= a35◂ [ *{ *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a17◂ [ a9◂ [ ]{| l |}]}a7◂ [ *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}]}] )
; .mov_ptn 1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 0'(= a35◂ [ *{ *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a17◂ [ a9◂ [ ]{| l |}]}a7◂ [ *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}]}] )
	mov rax,r8
	mov rdi,rax
	mov rax,r15
	mov r15,QWORD [r15] 
	mov QWORD [rax],0
	mov BYTE [rax+6],1
	mov QWORD [rax+8],rdi
	mov r13,rax
	ret
LB_2955:
;; ?. 0'(= a35◂ [ *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a17◂ [ a9◂ [ ]{| l |}]}] ) ⊢ 1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] )
	mov rax,QWORD [rdi+8]
	mov r8,rax
;; rsp=0 , %1132~2'(= a2◂ [ *{ rr{| l |}}] ) %1131~1'(= a35◂ [ a7◂ [ *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}]] ) 
;; ? 1'(= a35◂ [ a7◂ [ *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}]] ) ⊢ 0(<2)◂0'(= a7◂ [ *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}] )
	mov rdi,r14
	cmp BYTE [rdi+6],0
	jnz LB_2957
	mov rax,QWORD [rdi+8]
	mov r13,rax
;; rsp=0 , %1139~0'(= a7◂ [ *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}] ) %1132~2'(= a2◂ [ *{ rr{| l |}}] ) 
; #192 2'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] )
;; rsp=0 , %1140~1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] ) %1139~0'(= a7◂ [ *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}] ) 
; ∎ 1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] )
; .dlt.ptn 0'(= a7◂ [ *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}] )
;	.dlt adt ⊢ _  
; .mov_ptn2 1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 0'(= a35◂ [ *{ *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a17◂ [ a9◂ [ ]{| l |}]}a7◂ [ *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}]}] )
; .mov_ptn 1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 0'(= a35◂ [ *{ *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a17◂ [ a9◂ [ ]{| l |}]}a7◂ [ *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}]}] )
	mov rax,r8
	mov rdi,rax
	mov rax,r15
	mov r15,QWORD [r15] 
	mov QWORD [rax],0
	mov BYTE [rax+6],1
	mov QWORD [rax+8],rdi
	mov r13,rax
	ret
LB_2957:
;; ?. 1'(= a35◂ [ a7◂ [ *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}]] ) ⊢ 1(<2)◂0'(= a2◂ [ *{ rr{| l |}}] )
	mov rax,QWORD [rdi+8]
	mov r13,rax
;; rsp=0 , %1138~0'(= a2◂ [ *{ rr{| l |}}] ) %1132~2'(= a2◂ [ *{ rr{| l |}}] ) 
; rsp_d=0, #53 { 2'(= a2◂ [ *{ rr{| l |}}] ) 0'(= a2◂ [ *{ rr{| l |}}] ) } ⊢ 0'(= a2◂ [ *{ rr{| l |}}] )
; .mov_ptn2 { 2'(= a2◂ [ *{ rr{| l |}}] ) 0'(= a2◂ [ *{ rr{| l |}}] ) } ⊢ { 0'(= a2◂ [ *{ rr{| l |}}] ) 1'(= a2◂ [ *{ rr{| l |}}] ) }
; .mov_ptn 0'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 1'(= a2◂ [ *{ rr{| l |}}] )
	mov rax,r13
	mov r14,rax
; .mov_ptn 2'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 0'(= a2◂ [ *{ rr{| l |}}] )
	mov rax,r8
	mov r13,rax
	call LB_1604

;; rsp=0 , %1141~0'(= a2◂ [ *{ rr{| l |}}] ) 
; #192 0'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 1(<2)◂0'(= a2◂ [ *{ rr{| l |}}] )
;; rsp=0 , %1142~1(<2)◂0'(= a2◂ [ *{ rr{| l |}}] ) 
; ∎ 1(<2)◂0'(= a2◂ [ *{ rr{| l |}}] )
; .mov_ptn2 1(<2)◂0'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 0'(= a35◂ [ *{ *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a17◂ [ a9◂ [ ]{| l |}]}a7◂ [ *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}]}] )
	mov r14,r13
; .mov_ptn 1(<2)◂1'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 0'(= a35◂ [ *{ *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a17◂ [ a9◂ [ ]{| l |}]}a7◂ [ *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}]}] )
	mov rax,r14
	mov rdi,rax
	mov rax,r15
	mov r15,QWORD [r15] 
	mov QWORD [rax],0
	mov BYTE [rax+6],1
	mov QWORD [rax+8],rdi
	mov r13,rax
	ret
LB_2953
;; rsp=4 , %1977~1'(= r ) %1976~0'(= r ) %1975~11'(= a35◂ [ a7◂ [ *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}]] ) %1974~10'(= a35◂ [ a17◂ [ a9◂ [ ]{| l |}]] ) %1973~9'(= a35◂ [ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]] ) %1972~8'(= a35◂ [ *{ }] ) 
; rsp_d=0, #194 { 9'(= a35◂ [ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]] ) 10'(= a35◂ [ a17◂ [ a9◂ [ ]{| l |}]] ) } ⊢ 2'(= a35◂ [ *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a17◂ [ a9◂ [ ]{| l |}]}] )
	sub rsp,16
	mov QWORD [rsp+8*0],r13
	mov QWORD [rsp+8*1],r14
; .mov_ptn2 { 9'(= a35◂ [ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]] ) 10'(= a35◂ [ a17◂ [ a9◂ [ ]{| l |}]] ) } ⊢ { 0'(= a35◂ [ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]] ) 1'(= a35◂ [ a17◂ [ a9◂ [ ]{| l |}]] ) }
; .mov_ptn 10'(= a35◂ [ a17◂ [ a9◂ [ ]{| l |}]] ) ⊢ 1'(= a35◂ [ a17◂ [ a9◂ [ ]{| l |}]] )
	mov rax,QWORD [rsp-8+8*4]
	mov r14,rax
; .mov_ptn 9'(= a35◂ [ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]] ) ⊢ 0'(= a35◂ [ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]] )
	mov rax,QWORD [rsp-8+8*5]
	mov r13,rax
	call LB_2909

	mov r14,QWORD [rsp-8+8*2]
	mov rax,QWORD [rsp-8+8*1]
	mov r8,r13
	mov r13,rax
	add rsp,16
;; rsp=4 , %1978~2'(= a35◂ [ *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a17◂ [ a9◂ [ ]{| l |}]}] ) %1977~1'(= r ) %1976~0'(= r ) %1975~11'(= a35◂ [ a7◂ [ *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}]] ) %1972~8'(= a35◂ [ *{ }] ) 
; rsp_d=0, #194 { 2'(= a35◂ [ *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a17◂ [ a9◂ [ ]{| l |}]}] ) 11'(= a35◂ [ a7◂ [ *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}]] ) } ⊢ 2'(= a35◂ [ *{ *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a17◂ [ a9◂ [ ]{| l |}]}a7◂ [ *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}]}] )
	sub rsp,16
	mov QWORD [rsp+8*0],r13
	mov QWORD [rsp+8*1],r14
; .mov_ptn2 { 2'(= a35◂ [ *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a17◂ [ a9◂ [ ]{| l |}]}] ) 11'(= a35◂ [ a7◂ [ *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}]] ) } ⊢ { 0'(= a35◂ [ *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a17◂ [ a9◂ [ ]{| l |}]}] ) 1'(= a35◂ [ a7◂ [ *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}]] ) }
; .mov_ptn 11'(= a35◂ [ a7◂ [ *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}]] ) ⊢ 1'(= a35◂ [ a7◂ [ *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}]] )
	mov rax,QWORD [rsp-8+8*3]
	mov r14,rax
; .mov_ptn 2'(= a35◂ [ *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a17◂ [ a9◂ [ ]{| l |}]}] ) ⊢ 0'(= a35◂ [ *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a17◂ [ a9◂ [ ]{| l |}]}] )
	mov rax,r8
	mov r13,rax
	call LB_2954

	mov r14,QWORD [rsp-8+8*2]
	mov rax,QWORD [rsp-8+8*1]
	mov r8,r13
	mov r13,rax
	add rsp,40
;; rsp=1 , %1979~2'(= a35◂ [ *{ *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a17◂ [ a9◂ [ ]{| l |}]}a7◂ [ *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}]}] ) %1977~1'(= r ) %1976~0'(= r ) %1972~8'(= a35◂ [ *{ }] ) 
;; ? 2'(= a35◂ [ *{ *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a17◂ [ a9◂ [ ]{| l |}]}a7◂ [ *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}]}] ) ⊢ 0(<2)◂{ { 4'(= a2◂ [ a21◂ [ a9◂ [ ]{| l |}]] ) 5'(= a17◂ [ a9◂ [ ]{| l |}] ) } 6'(= a7◂ [ *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}] ) }
	mov rdi,r8
	cmp BYTE [rdi+6],0
	jnz LB_2958
	mov rdi,r8
	mov rdi,QWORD [rdi+8+8*0]
	mov r9,rdi
	mov rdi,r9
	mov rdi,QWORD [rdi+8+8*0]
	mov r10,rdi
	mov rdi,r9
	mov rdi,QWORD [rdi+8+8*1]
	mov r11,rdi
	mov rdi,r8
	mov rdi,QWORD [rdi+8+8*1]
	mov rcx,rdi
;; rsp=1 , %1983~6'(= a7◂ [ *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}] ) %1982~5'(= a17◂ [ a9◂ [ ]{| l |}] ) %1981~4'(= a2◂ [ a21◂ [ a9◂ [ ]{| l |}]] ) %1977~1'(= r ) %1976~0'(= r ) %1972~8'(= a35◂ [ *{ }] ) 
; #116 5'(= a17◂ [ a9◂ [ ]{| l |}] ) ⊢ 2(<3)◂5'(= a17◂ [ a9◂ [ ]{| l |}] )
;; rsp=1 , %1984~2(<3)◂5'(= a17◂ [ a9◂ [ ]{| l |}] ) %1983~6'(= a7◂ [ *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}] ) %1981~4'(= a2◂ [ a21◂ [ a9◂ [ ]{| l |}]] ) %1977~1'(= r ) %1976~0'(= r ) %1972~8'(= a35◂ [ *{ }] ) 
; #50 { { 4'(= a2◂ [ a21◂ [ a9◂ [ ]{| l |}]] ) 2(<3)◂5'(= a17◂ [ a9◂ [ ]{| l |}] ) } 6'(= a7◂ [ *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}] ) } ⊢ 0(<2)◂{ { 4'(= a2◂ [ a21◂ [ a9◂ [ ]{| l |}]] ) 2(<3)◂5'(= a17◂ [ a9◂ [ ]{| l |}] ) } 6'(= a7◂ [ *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}] ) }
;; rsp=1 , %1985~0(<2)◂{ { 4'(= a2◂ [ a21◂ [ a9◂ [ ]{| l |}]] ) 2(<3)◂5'(= a17◂ [ a9◂ [ ]{| l |}] ) } 6'(= a7◂ [ *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}] ) } %1977~1'(= r ) %1976~0'(= r ) %1972~8'(= a35◂ [ *{ }] ) 
; #193 0(<2)◂{ { 4'(= a2◂ [ a21◂ [ a9◂ [ ]{| l |}]] ) 2(<3)◂5'(= a17◂ [ a9◂ [ ]{| l |}] ) } 6'(= a7◂ [ *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}] ) } ⊢ 0(<2)◂0(<2)◂{ { 4'(= a2◂ [ a21◂ [ a9◂ [ ]{| l |}]] ) 2(<3)◂5'(= a17◂ [ a9◂ [ ]{| l |}] ) } 6'(= a7◂ [ *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}] ) }
;; rsp=1 , %1986~0(<2)◂0(<2)◂{ { 4'(= a2◂ [ a21◂ [ a9◂ [ ]{| l |}]] ) 2(<3)◂5'(= a17◂ [ a9◂ [ ]{| l |}] ) } 6'(= a7◂ [ *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}] ) } %1977~1'(= r ) %1976~0'(= r ) %1972~8'(= a35◂ [ *{ }] ) 
; #22 0(<2)◂0(<2)◂{ { 4'(= a2◂ [ a21◂ [ a9◂ [ ]{| l |}]] ) 2(<3)◂5'(= a17◂ [ a9◂ [ ]{| l |}] ) } 6'(= a7◂ [ *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}] ) } ⊢ 0(<2)◂0(<2)◂0(<2)◂{ { 4'(= a2◂ [ a21◂ [ a9◂ [ ]{| l |}]] ) 2(<3)◂5'(= a17◂ [ a9◂ [ ]{| l |}] ) } 6'(= a7◂ [ *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}] ) }
;; rsp=1 , %1987~0(<2)◂0(<2)◂0(<2)◂{ { 4'(= a2◂ [ a21◂ [ a9◂ [ ]{| l |}]] ) 2(<3)◂5'(= a17◂ [ a9◂ [ ]{| l |}] ) } 6'(= a7◂ [ *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}] ) } %1977~1'(= r ) %1976~0'(= r ) %1972~8'(= a35◂ [ *{ }] ) 
; ∎ 0(<2)◂0(<2)◂0(<2)◂{ { 4'(= a2◂ [ a21◂ [ a9◂ [ ]{| l |}]] ) 2(<3)◂5'(= a17◂ [ a9◂ [ ]{| l |}] ) } 6'(= a7◂ [ *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}] ) }
; .dlt.ptn 1'(= r )
; .dlt.ptn 0'(= r )
; .dlt.ptn 8'(= a35◂ [ *{ }] )
;	.dlt adt ⊢ _  
; .mov_ptn2 0(<2)◂0(<2)◂0(<2)◂{ { 4'(= a2◂ [ a21◂ [ a9◂ [ ]{| l |}]] ) 2(<3)◂5'(= a17◂ [ a9◂ [ ]{| l |}] ) } 6'(= a7◂ [ *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}] ) } ⊢ 2'(= a3◂ [ a35◂ [ a7◂ [ *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}]]] )
; .mov_ptn 0(<2)◂0(<2)◂0(<2)◂{ { 4'(= a2◂ [ a21◂ [ a9◂ [ ]{| l |}]] ) 2(<3)◂5'(= a17◂ [ a9◂ [ ]{| l |}] ) } 6'(= a7◂ [ *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}] ) } ⊢ 2'(= a3◂ [ a35◂ [ a7◂ [ *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}]]] )
	mov rax,[SS_RCD_2_TOP]
	mov rsi,[rax] 
	mov QWORD [SS_RCD_2_TOP],rsi
	mov QWORD [rax],0
	mov r13,rax
	mov rax,[SS_RCD_2_TOP]
	mov rsi,[rax] 
	mov QWORD [SS_RCD_2_TOP],rsi
	mov QWORD [rax],0
	mov r14,rax
	mov rax,r10
	mov QWORD [r14+8+8*0],rax
	mov rax,r11
	mov rdi,rax
	mov rax,r15
	mov r15,QWORD [r15] 
	mov QWORD [rax],0
	mov BYTE [rax+6],2
	mov QWORD [rax+8],rdi
	mov QWORD [r14+8+8*1],rax
	mov rax,r14
	mov QWORD [r13+8+8*0],rax
	mov rax,rcx
	mov QWORD [r13+8+8*1],rax
	mov rax,r13
	mov BYTE [rax+6],0
	mov rdi,rax
	mov rax,r15
	mov r15,QWORD [r15] 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov rdi,rax
	mov rax,r15
	mov r15,QWORD [r15] 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,8
	jmp LB_2952
LB_2958:
;; ?. 2'(= a35◂ [ *{ *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a17◂ [ a9◂ [ ]{| l |}]}a7◂ [ *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}]}] ) ⊢ 1(<2)◂3'(= a2◂ [ *{ rr{| l |}}] )
	mov rax,QWORD [rdi+8]
	mov r9,rax
;; rsp=1 , %1980~3'(= a2◂ [ *{ rr{| l |}}] ) %1977~1'(= r ) %1976~0'(= r ) %1972~8'(= a35◂ [ *{ }] ) 
; #192 3'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 1(<2)◂3'(= a2◂ [ *{ rr{| l |}}] )
;; rsp=1 , %1988~1(<2)◂3'(= a2◂ [ *{ rr{| l |}}] ) %1977~1'(= r ) %1976~0'(= r ) %1972~8'(= a35◂ [ *{ }] ) 
; #22 1(<2)◂3'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 0(<2)◂1(<2)◂3'(= a2◂ [ *{ rr{| l |}}] )
;; rsp=1 , %1989~0(<2)◂1(<2)◂3'(= a2◂ [ *{ rr{| l |}}] ) %1977~1'(= r ) %1976~0'(= r ) %1972~8'(= a35◂ [ *{ }] ) 
; ∎ 0(<2)◂1(<2)◂3'(= a2◂ [ *{ rr{| l |}}] )
; .dlt.ptn 1'(= r )
; .dlt.ptn 0'(= r )
; .dlt.ptn 8'(= a35◂ [ *{ }] )
;	.dlt adt ⊢ _  
; .mov_ptn2 0(<2)◂1(<2)◂3'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 2'(= a3◂ [ a35◂ [ a7◂ [ *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}]]] )
; .mov_ptn 0(<2)◂1(<2)◂3'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 2'(= a3◂ [ a35◂ [ a7◂ [ *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}]]] )
	mov rax,r9
	mov rdi,rax
	mov rax,r15
	mov r15,QWORD [r15] 
	mov QWORD [rax],0
	mov BYTE [rax+6],1
	mov QWORD [rax+8],rdi
	mov rdi,rax
	mov rax,r15
	mov r15,QWORD [r15] 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,8
	jmp LB_2952
LB_2952:
	cmp BYTE [r8+6],0
	jnz LB_2914
	pop r14
	pop r9
	add rsp,8
	pop r13
	ret
LB_2914:
	pop rdi
	pop r9 
	pop r14
	pop r13
	ret
ETR_237:
	mov r9,0x0000_ffff_ffff_ffff
	and r9,[r13]
	call GRM_237
	ret
GRM_237:
	sub rsp,32
	mov QWORD [rsp+24],r13
	mov QWORD [rsp+16],r14 
	mov QWORD [rsp+8],r9
	jmp LB_2961
LB_2960:
	add r14,1 
LB_2961:
	cmp r14,r9
	jge LB_2962
	JZ_LINE_SPC BYTE [r13+8+r14], LB_2960
LB_2962
	call GRM_217
	cmp BYTE [r8+6],0
	jnz LB_2965
	jmp LB_2966
LB_2965:
	jmp LB_2963
LB_2966:
	sub rsp,8
	mov r8,[r8+8]
; .mov_ptn2 2'(= a35◂ [ *{ }] ) ⊢ 8'(= a35◂ [ *{ }] )
; .mov_ptn 2'(= a35◂ [ *{ }] ) ⊢ 8'(= a35◂ [ *{ }] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_2964
LB_2963:
	add rsp,0
	jmp LB_2959
LB_2964:
	jmp LB_2968
LB_2967:
	add r14,1 
LB_2968:
	cmp r14,r9
	jge LB_2969
	JZ_LINE_SPC BYTE [r13+8+r14], LB_2967
LB_2969
	lea rax,[r14+4]
	cmp rax,r9
	jg LB_2972
	jmp LB_2973
LB_2972:
	mov r8,unt_1
	jmp LB_2970
LB_2973:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],226
	jnz LB_2974
	cmp BYTE [rdi+1],136
	jnz LB_2974
	cmp BYTE [rdi+2],144
	jnz LB_2974
	cmp BYTE [rdi+3],46
	jnz LB_2974
	jmp LB_2975
LB_2974:
	mov r8,unt_1
	jmp LB_2970
LB_2975:
	add r14,4
	jmp LB_2971
LB_2970:
	add rsp,8
	jmp LB_2959
LB_2971:
	jmp LB_2977
LB_2976:
	add r14,1 
LB_2977:
	cmp r14,r9
	jge LB_2978
	JZ_LINE_SPC BYTE [r13+8+r14], LB_2976
LB_2978
	call GRM_197
	cmp BYTE [r8+6],0
	jnz LB_2981
	jmp LB_2982
LB_2981:
	jmp LB_2979
LB_2982:
	sub rsp,8
	mov r8,[r8+8]
; .mov_ptn2 2'(= a8◂ [ a14◂ [ a9◂ [ ]{| l |}]] ) ⊢ 9'(= a8◂ [ a14◂ [ a9◂ [ ]{| l |}]] )
; .mov_ptn 2'(= a8◂ [ a14◂ [ a9◂ [ ]{| l |}]] ) ⊢ 9'(= a8◂ [ a14◂ [ a9◂ [ ]{| l |}]] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_2980
LB_2979:
	add rsp,8
	pop rdi
	pop r9 
	pop r14
	pop r13
	ret
LB_2980:
	jmp LB_2984
LB_2983:
	add r14,1 
LB_2984:
	cmp r14,r9
	jge LB_2985
	JZ_LINE_SPC BYTE [r13+8+r14], LB_2983
LB_2985
	call GRM_241
	cmp BYTE [r8+6],0
	jnz LB_2988
	jmp LB_2989
LB_2988:
	jmp LB_2986
LB_2989:
	sub rsp,8
	mov r8,[r8+8]
; .mov_ptn2 2'(= a35◂ [ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]] ) ⊢ 10'(= a35◂ [ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]] )
; .mov_ptn 2'(= a35◂ [ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]] ) ⊢ 10'(= a35◂ [ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_2987
LB_2986:
	add rsp,16
	pop rdi
	pop r9 
	pop r14
	pop r13
	ret
LB_2987:
	jmp LB_2991
LB_2990:
	add r14,1 
LB_2991:
	cmp r14,r9
	jge LB_2992
	JZ_LINE_SPC BYTE [r13+8+r14], LB_2990
LB_2992
	call GRM_234
	cmp BYTE [r8+6],0
	jnz LB_2995
	jmp LB_2996
LB_2995:
	jmp LB_2993
LB_2996:
	sub rsp,8
	mov r8,[r8+8]
; .mov_ptn2 2'(= a35◂ [ a17◂ [ a9◂ [ ]{| l |}]] ) ⊢ 11'(= a35◂ [ a17◂ [ a9◂ [ ]{| l |}]] )
; .mov_ptn 2'(= a35◂ [ a17◂ [ a9◂ [ ]{| l |}]] ) ⊢ 11'(= a35◂ [ a17◂ [ a9◂ [ ]{| l |}]] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_2994
LB_2993:
	add rsp,24
	pop rdi
	pop r9 
	pop r14
	pop r13
	ret
LB_2994:
	mov QWORD [rsp+8*4],r14
	mov r13,QWORD [rsp+16+8*4]
	mov r14,QWORD [rsp+8*4]
	jmp LB_2998
LB_2998
;; rsp=4 , %1995~1'(= r ) %1994~0'(= r ) %1993~11'(= a35◂ [ a17◂ [ a9◂ [ ]{| l |}]] ) %1992~10'(= a35◂ [ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]] ) %1991~9'(= a8◂ [ a14◂ [ a9◂ [ ]{| l |}]] ) %1990~8'(= a35◂ [ *{ }] ) 
; rsp_d=0, #194 { 10'(= a35◂ [ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]] ) 11'(= a35◂ [ a17◂ [ a9◂ [ ]{| l |}]] ) } ⊢ 2'(= a35◂ [ *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a17◂ [ a9◂ [ ]{| l |}]}] )
	sub rsp,16
	mov QWORD [rsp+8*0],r13
	mov QWORD [rsp+8*1],r14
; .mov_ptn2 { 10'(= a35◂ [ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]] ) 11'(= a35◂ [ a17◂ [ a9◂ [ ]{| l |}]] ) } ⊢ { 0'(= a35◂ [ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]] ) 1'(= a35◂ [ a17◂ [ a9◂ [ ]{| l |}]] ) }
; .mov_ptn 11'(= a35◂ [ a17◂ [ a9◂ [ ]{| l |}]] ) ⊢ 1'(= a35◂ [ a17◂ [ a9◂ [ ]{| l |}]] )
	mov rax,QWORD [rsp-8+8*3]
	mov r14,rax
; .mov_ptn 10'(= a35◂ [ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]] ) ⊢ 0'(= a35◂ [ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]] )
	mov rax,QWORD [rsp-8+8*4]
	mov r13,rax
	call LB_2909

	mov r14,QWORD [rsp-8+8*2]
	mov rax,QWORD [rsp-8+8*1]
	mov r8,r13
	mov r13,rax
	add rsp,32
;; rsp=2 , %1996~2'(= a35◂ [ *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a17◂ [ a9◂ [ ]{| l |}]}] ) %1995~1'(= r ) %1994~0'(= r ) %1991~9'(= a8◂ [ a14◂ [ a9◂ [ ]{| l |}]] ) %1990~8'(= a35◂ [ *{ }] ) 
;; ? 2'(= a35◂ [ *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a17◂ [ a9◂ [ ]{| l |}]}] ) ⊢ 0(<2)◂{ 3'(= a2◂ [ a21◂ [ a9◂ [ ]{| l |}]] ) 4'(= a17◂ [ a9◂ [ ]{| l |}] ) }
	mov rdi,r8
	cmp BYTE [rdi+6],0
	jnz LB_2999
	mov rdi,r8
	mov rdi,QWORD [rdi+8+8*0]
	mov r9,rdi
	mov rdi,r8
	mov rdi,QWORD [rdi+8+8*1]
	mov r10,rdi
;; rsp=2 , %1999~4'(= a17◂ [ a9◂ [ ]{| l |}] ) %1998~3'(= a2◂ [ a21◂ [ a9◂ [ ]{| l |}]] ) %1995~1'(= r ) %1994~0'(= r ) %1991~9'(= a8◂ [ a14◂ [ a9◂ [ ]{| l |}]] ) %1990~8'(= a35◂ [ *{ }] ) 
; #116 4'(= a17◂ [ a9◂ [ ]{| l |}] ) ⊢ 2(<3)◂4'(= a17◂ [ a9◂ [ ]{| l |}] )
;; rsp=2 , %2000~2(<3)◂4'(= a17◂ [ a9◂ [ ]{| l |}] ) %1998~3'(= a2◂ [ a21◂ [ a9◂ [ ]{| l |}]] ) %1995~1'(= r ) %1994~0'(= r ) %1991~9'(= a8◂ [ a14◂ [ a9◂ [ ]{| l |}]] ) %1990~8'(= a35◂ [ *{ }] ) 
; #49 { 9'(= a8◂ [ a14◂ [ a9◂ [ ]{| l |}]] ) 3'(= a2◂ [ a21◂ [ a9◂ [ ]{| l |}]] ) 2(<3)◂4'(= a17◂ [ a9◂ [ ]{| l |}] ) } ⊢ 1(<2)◂{ 9'(= a8◂ [ a14◂ [ a9◂ [ ]{| l |}]] ) 3'(= a2◂ [ a21◂ [ a9◂ [ ]{| l |}]] ) 2(<3)◂4'(= a17◂ [ a9◂ [ ]{| l |}] ) }
;; rsp=2 , %2001~1(<2)◂{ 9'(= a8◂ [ a14◂ [ a9◂ [ ]{| l |}]] ) 3'(= a2◂ [ a21◂ [ a9◂ [ ]{| l |}]] ) 2(<3)◂4'(= a17◂ [ a9◂ [ ]{| l |}] ) } %1995~1'(= r ) %1994~0'(= r ) %1990~8'(= a35◂ [ *{ }] ) 
; #193 1(<2)◂{ 9'(= a8◂ [ a14◂ [ a9◂ [ ]{| l |}]] ) 3'(= a2◂ [ a21◂ [ a9◂ [ ]{| l |}]] ) 2(<3)◂4'(= a17◂ [ a9◂ [ ]{| l |}] ) } ⊢ 0(<2)◂1(<2)◂{ 9'(= a8◂ [ a14◂ [ a9◂ [ ]{| l |}]] ) 3'(= a2◂ [ a21◂ [ a9◂ [ ]{| l |}]] ) 2(<3)◂4'(= a17◂ [ a9◂ [ ]{| l |}] ) }
;; rsp=2 , %2002~0(<2)◂1(<2)◂{ 9'(= a8◂ [ a14◂ [ a9◂ [ ]{| l |}]] ) 3'(= a2◂ [ a21◂ [ a9◂ [ ]{| l |}]] ) 2(<3)◂4'(= a17◂ [ a9◂ [ ]{| l |}] ) } %1995~1'(= r ) %1994~0'(= r ) %1990~8'(= a35◂ [ *{ }] ) 
; #22 0(<2)◂1(<2)◂{ 9'(= a8◂ [ a14◂ [ a9◂ [ ]{| l |}]] ) 3'(= a2◂ [ a21◂ [ a9◂ [ ]{| l |}]] ) 2(<3)◂4'(= a17◂ [ a9◂ [ ]{| l |}] ) } ⊢ 0(<2)◂0(<2)◂1(<2)◂{ 9'(= a8◂ [ a14◂ [ a9◂ [ ]{| l |}]] ) 3'(= a2◂ [ a21◂ [ a9◂ [ ]{| l |}]] ) 2(<3)◂4'(= a17◂ [ a9◂ [ ]{| l |}] ) }
;; rsp=2 , %2003~0(<2)◂0(<2)◂1(<2)◂{ 9'(= a8◂ [ a14◂ [ a9◂ [ ]{| l |}]] ) 3'(= a2◂ [ a21◂ [ a9◂ [ ]{| l |}]] ) 2(<3)◂4'(= a17◂ [ a9◂ [ ]{| l |}] ) } %1995~1'(= r ) %1994~0'(= r ) %1990~8'(= a35◂ [ *{ }] ) 
; ∎ 0(<2)◂0(<2)◂1(<2)◂{ 9'(= a8◂ [ a14◂ [ a9◂ [ ]{| l |}]] ) 3'(= a2◂ [ a21◂ [ a9◂ [ ]{| l |}]] ) 2(<3)◂4'(= a17◂ [ a9◂ [ ]{| l |}] ) }
; .dlt.ptn 1'(= r )
; .dlt.ptn 0'(= r )
; .dlt.ptn 8'(= a35◂ [ *{ }] )
;	.dlt adt ⊢ _  
; .mov_ptn2 0(<2)◂0(<2)◂1(<2)◂{ 9'(= a8◂ [ a14◂ [ a9◂ [ ]{| l |}]] ) 3'(= a2◂ [ a21◂ [ a9◂ [ ]{| l |}]] ) 2(<3)◂4'(= a17◂ [ a9◂ [ ]{| l |}] ) } ⊢ 2'(= a3◂ [ a35◂ [ a7◂ [ *{ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}]]] )
; .mov_ptn 0(<2)◂0(<2)◂1(<2)◂{ 9'(= a8◂ [ a14◂ [ a9◂ [ ]{| l |}]] ) 3'(= a2◂ [ a21◂ [ a9◂ [ ]{| l |}]] ) 2(<3)◂4'(= a17◂ [ a9◂ [ ]{| l |}] ) } ⊢ 2'(= a3◂ [ a35◂ [ a7◂ [ *{ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}]]] )
	mov rax,[SS_RCD_3_TOP]
	mov rsi,[rax] 
	mov QWORD [SS_RCD_3_TOP],rsi
	mov QWORD [rax],0
	mov r13,rax
	mov rax,QWORD [rsp-8+8*1]
	mov QWORD [r13+8+8*0],rax
	mov rax,r9
	mov QWORD [r13+8+8*1],rax
	mov rax,r10
	mov rdi,rax
	mov rax,r15
	mov r15,QWORD [r15] 
	mov QWORD [rax],0
	mov BYTE [rax+6],2
	mov QWORD [rax+8],rdi
	mov QWORD [r13+8+8*2],rax
	mov rax,r13
	mov BYTE [rax+6],1
	mov rdi,rax
	mov rax,r15
	mov r15,QWORD [r15] 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov rdi,rax
	mov rax,r15
	mov r15,QWORD [r15] 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,16
	jmp LB_2997
LB_2999:
;; ?. 2'(= a35◂ [ *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a17◂ [ a9◂ [ ]{| l |}]}] ) ⊢ 1(<2)◂3'(= a2◂ [ *{ rr{| l |}}] )
	mov rax,QWORD [rdi+8]
	mov r9,rax
;; rsp=2 , %1997~3'(= a2◂ [ *{ rr{| l |}}] ) %1995~1'(= r ) %1994~0'(= r ) %1991~9'(= a8◂ [ a14◂ [ a9◂ [ ]{| l |}]] ) %1990~8'(= a35◂ [ *{ }] ) 
; #192 3'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 1(<2)◂3'(= a2◂ [ *{ rr{| l |}}] )
;; rsp=2 , %2004~1(<2)◂3'(= a2◂ [ *{ rr{| l |}}] ) %1995~1'(= r ) %1994~0'(= r ) %1991~9'(= a8◂ [ a14◂ [ a9◂ [ ]{| l |}]] ) %1990~8'(= a35◂ [ *{ }] ) 
; #22 1(<2)◂3'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 0(<2)◂1(<2)◂3'(= a2◂ [ *{ rr{| l |}}] )
;; rsp=2 , %2005~0(<2)◂1(<2)◂3'(= a2◂ [ *{ rr{| l |}}] ) %1995~1'(= r ) %1994~0'(= r ) %1991~9'(= a8◂ [ a14◂ [ a9◂ [ ]{| l |}]] ) %1990~8'(= a35◂ [ *{ }] ) 
; ∎ 0(<2)◂1(<2)◂3'(= a2◂ [ *{ rr{| l |}}] )
; .dlt.ptn 1'(= r )
; .dlt.ptn 0'(= r )
; .dlt.ptn 9'(= a8◂ [ a14◂ [ a9◂ [ ]{| l |}]] )
;	.dlt adt ⊢ _  
; .dlt.ptn 8'(= a35◂ [ *{ }] )
;	.dlt adt ⊢ _  
; .mov_ptn2 0(<2)◂1(<2)◂3'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 2'(= a3◂ [ a35◂ [ a7◂ [ *{ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}]]] )
; .mov_ptn 0(<2)◂1(<2)◂3'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 2'(= a3◂ [ a35◂ [ a7◂ [ *{ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}]]] )
	mov rax,r9
	mov rdi,rax
	mov rax,r15
	mov r15,QWORD [r15] 
	mov QWORD [rax],0
	mov BYTE [rax+6],1
	mov QWORD [rax+8],rdi
	mov rdi,rax
	mov rax,r15
	mov r15,QWORD [r15] 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,16
	jmp LB_2997
LB_2997:
	cmp BYTE [r8+6],0
	jnz LB_2959
	pop r14
	pop r9
	add rsp,8
	pop r13
	ret
LB_2959:
	mov r9,QWORD [rsp+8]
	mov r14,QWORD [rsp+16]
	mov r13,QWORD [rsp+24]
	jmp LB_3002
LB_3001:
	add r14,1 
LB_3002:
	cmp r14,r9
	jge LB_3003
	JZ_LINE_SPC BYTE [r13+8+r14], LB_3001
LB_3003
	call GRM_217
	cmp BYTE [r8+6],0
	jnz LB_3006
	jmp LB_3007
LB_3006:
	jmp LB_3004
LB_3007:
	sub rsp,8
	mov r8,[r8+8]
; .mov_ptn2 2'(= a35◂ [ *{ }] ) ⊢ 8'(= a35◂ [ *{ }] )
; .mov_ptn 2'(= a35◂ [ *{ }] ) ⊢ 8'(= a35◂ [ *{ }] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_3005
LB_3004:
	add rsp,0
	jmp LB_3000
LB_3005:
	jmp LB_3009
LB_3008:
	add r14,1 
LB_3009:
	cmp r14,r9
	jge LB_3010
	JZ_LINE_SPC BYTE [r13+8+r14], LB_3008
LB_3010
	lea rax,[r14+3]
	cmp rax,r9
	jg LB_3013
	jmp LB_3014
LB_3013:
	mov r8,unt_1
	jmp LB_3011
LB_3014:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],226
	jnz LB_3015
	cmp BYTE [rdi+1],136
	jnz LB_3015
	cmp BYTE [rdi+2],144
	jnz LB_3015
	jmp LB_3016
LB_3015:
	mov r8,unt_1
	jmp LB_3011
LB_3016:
	add r14,3
	jmp LB_3012
LB_3011:
	add rsp,8
	jmp LB_3000
LB_3012:
	jmp LB_3018
LB_3017:
	add r14,1 
LB_3018:
	cmp r14,r9
	jge LB_3019
	JZ_LINE_SPC BYTE [r13+8+r14], LB_3017
LB_3019
	call GRM_197
	cmp BYTE [r8+6],0
	jnz LB_3022
	jmp LB_3023
LB_3022:
	jmp LB_3020
LB_3023:
	sub rsp,8
	mov r8,[r8+8]
; .mov_ptn2 2'(= a8◂ [ a14◂ [ a9◂ [ ]{| l |}]] ) ⊢ 9'(= a8◂ [ a14◂ [ a9◂ [ ]{| l |}]] )
; .mov_ptn 2'(= a8◂ [ a14◂ [ a9◂ [ ]{| l |}]] ) ⊢ 9'(= a8◂ [ a14◂ [ a9◂ [ ]{| l |}]] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_3021
LB_3020:
	add rsp,8
	jmp LB_3000
LB_3021:
	jmp LB_3025
LB_3024:
	add r14,1 
LB_3025:
	cmp r14,r9
	jge LB_3026
	JZ_LINE_SPC BYTE [r13+8+r14], LB_3024
LB_3026
	call GRM_241
	cmp BYTE [r8+6],0
	jnz LB_3029
	jmp LB_3030
LB_3029:
	jmp LB_3027
LB_3030:
	sub rsp,8
	mov r8,[r8+8]
; .mov_ptn2 2'(= a35◂ [ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]] ) ⊢ 10'(= a35◂ [ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]] )
; .mov_ptn 2'(= a35◂ [ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]] ) ⊢ 10'(= a35◂ [ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_3028
LB_3027:
	add rsp,16
	jmp LB_3000
LB_3028:
	jmp LB_3032
LB_3031:
	add r14,1 
LB_3032:
	cmp r14,r9
	jge LB_3033
	JZ_LINE_SPC BYTE [r13+8+r14], LB_3031
LB_3033
	call GRM_234
	cmp BYTE [r8+6],0
	jnz LB_3036
	jmp LB_3037
LB_3036:
	jmp LB_3034
LB_3037:
	sub rsp,8
	mov r8,[r8+8]
; .mov_ptn2 2'(= a35◂ [ a17◂ [ a9◂ [ ]{| l |}]] ) ⊢ 11'(= a35◂ [ a17◂ [ a9◂ [ ]{| l |}]] )
; .mov_ptn 2'(= a35◂ [ a17◂ [ a9◂ [ ]{| l |}]] ) ⊢ 11'(= a35◂ [ a17◂ [ a9◂ [ ]{| l |}]] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_3035
LB_3034:
	add rsp,24
	jmp LB_3000
LB_3035:
	jmp LB_3039
LB_3038:
	add r14,1 
LB_3039:
	cmp r14,r9
	jge LB_3040
	JZ_LINE_SPC BYTE [r13+8+r14], LB_3038
LB_3040
	call GRM_237
	cmp BYTE [r8+6],0
	jnz LB_3043
	jmp LB_3044
LB_3043:
	jmp LB_3041
LB_3044:
	sub rsp,8
	mov r8,[r8+8]
; .mov_ptn2 2'(= a35◂ [ a7◂ [ *{ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}]] ) ⊢ 12'(= a35◂ [ a7◂ [ *{ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}]] )
; .mov_ptn 2'(= a35◂ [ a7◂ [ *{ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}]] ) ⊢ 12'(= a35◂ [ a7◂ [ *{ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}]] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_3042
LB_3041:
	add rsp,32
	jmp LB_3000
LB_3042:
	mov QWORD [rsp+8*5],r14
	mov r13,QWORD [rsp+16+8*5]
	mov r14,QWORD [rsp+8*5]
	jmp LB_3046
LB_3047: ; 194 { 0'(= a35◂ [ *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a17◂ [ a9◂ [ ]{| l |}]}] ) 1'(= a35◂ [ a7◂ [ *{ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}]] ) } ⊢ 0'(= a35◂ [ *{ *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a17◂ [ a9◂ [ ]{| l |}]}a7◂ [ *{ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}]}] ) : ({ _t35◂{ _lst◂_t21◂_s8◂_t9 _t17◂_s8◂_t9 } _t35◂_t7◂{ _t8◂_t14◂_s8◂_t9 _lst◂_t21◂_s8◂_t9 _t20◂_s8◂_t9 } }→_t35◂{ { _lst◂_t21◂_s8◂_t9 _t17◂_s8◂_t9 } _t7◂{ _t8◂_t14◂_s8◂_t9 _lst◂_t21◂_s8◂_t9 _t20◂_s8◂_t9 } })
;; rsp=0 , %1131~1'(= a35◂ [ a7◂ [ *{ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}]] ) %1130~0'(= a35◂ [ *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a17◂ [ a9◂ [ ]{| l |}]}] ) 
;; ? 0'(= a35◂ [ *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a17◂ [ a9◂ [ ]{| l |}]}] ) ⊢ 0(<2)◂0'(= *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a17◂ [ a9◂ [ ]{| l |}]} )
	mov rdi,r13
	cmp BYTE [rdi+6],0
	jnz LB_3048
;; rsp=0 , %1133~0'(= *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a17◂ [ a9◂ [ ]{| l |}]} ) %1131~1'(= a35◂ [ a7◂ [ *{ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}]] ) 
;; ? 1'(= a35◂ [ a7◂ [ *{ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}]] ) ⊢ 0(<2)◂2'(= a7◂ [ *{ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}] )
	mov rdi,r14
	cmp BYTE [rdi+6],0
	jnz LB_3049
	mov rax,QWORD [rdi+8]
	mov r8,rax
;; rsp=0 , %1135~2'(= a7◂ [ *{ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}] ) %1133~0'(= *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a17◂ [ a9◂ [ ]{| l |}]} ) 
; #193 { 0'(= *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a17◂ [ a9◂ [ ]{| l |}]} ) 2'(= a7◂ [ *{ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}] ) } ⊢ 0(<2)◂{ 0'(= *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a17◂ [ a9◂ [ ]{| l |}]} ) 2'(= a7◂ [ *{ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}] ) }
;; rsp=0 , %1136~0(<2)◂{ 0'(= *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a17◂ [ a9◂ [ ]{| l |}]} ) 2'(= a7◂ [ *{ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}] ) } 
; ∎ 0(<2)◂{ 0'(= *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a17◂ [ a9◂ [ ]{| l |}]} ) 2'(= a7◂ [ *{ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}] ) }
; .mov_ptn2 0(<2)◂{ 0'(= *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a17◂ [ a9◂ [ ]{| l |}]} ) 2'(= a7◂ [ *{ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}] ) } ⊢ 0'(= a35◂ [ *{ *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a17◂ [ a9◂ [ ]{| l |}]}a7◂ [ *{ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}]}] )
	mov r14,r13
; .mov_ptn 0(<2)◂{ 1'(= *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a17◂ [ a9◂ [ ]{| l |}]} ) 2'(= a7◂ [ *{ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}] ) } ⊢ 0'(= a35◂ [ *{ *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a17◂ [ a9◂ [ ]{| l |}]}a7◂ [ *{ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}]}] )
	mov rax,[SS_RCD_2_TOP]
	mov rsi,[rax] 
	mov QWORD [SS_RCD_2_TOP],rsi
	mov QWORD [rax],0
	mov r9,rax
	mov rax,r14
	mov QWORD [r9+8+8*0],rax
	mov rax,r8
	mov QWORD [r9+8+8*1],rax
	mov rax,r9
	mov BYTE [rax+6],0
	mov r13,rax
	ret
LB_3049:
;; ?. 1'(= a35◂ [ a7◂ [ *{ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}]] ) ⊢ 1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] )
	mov rax,QWORD [rdi+8]
	mov r8,rax
;; rsp=0 , %1134~2'(= a2◂ [ *{ rr{| l |}}] ) %1133~0'(= *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a17◂ [ a9◂ [ ]{| l |}]} ) 
; #192 2'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] )
;; rsp=0 , %1137~1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] ) %1133~0'(= *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a17◂ [ a9◂ [ ]{| l |}]} ) 
; ∎ 1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] )
; .dlt.ptn 0'(= *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a17◂ [ a9◂ [ ]{| l |}]} )
; .dlt.hp rcd
; .mov_ptn2 1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 0'(= a35◂ [ *{ *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a17◂ [ a9◂ [ ]{| l |}]}a7◂ [ *{ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}]}] )
; .mov_ptn 1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 0'(= a35◂ [ *{ *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a17◂ [ a9◂ [ ]{| l |}]}a7◂ [ *{ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}]}] )
	mov rax,r8
	mov rdi,rax
	mov rax,r15
	mov r15,QWORD [r15] 
	mov QWORD [rax],0
	mov BYTE [rax+6],1
	mov QWORD [rax+8],rdi
	mov r13,rax
	ret
LB_3048:
;; ?. 0'(= a35◂ [ *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a17◂ [ a9◂ [ ]{| l |}]}] ) ⊢ 1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] )
	mov rax,QWORD [rdi+8]
	mov r8,rax
;; rsp=0 , %1132~2'(= a2◂ [ *{ rr{| l |}}] ) %1131~1'(= a35◂ [ a7◂ [ *{ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}]] ) 
;; ? 1'(= a35◂ [ a7◂ [ *{ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}]] ) ⊢ 0(<2)◂0'(= a7◂ [ *{ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}] )
	mov rdi,r14
	cmp BYTE [rdi+6],0
	jnz LB_3050
	mov rax,QWORD [rdi+8]
	mov r13,rax
;; rsp=0 , %1139~0'(= a7◂ [ *{ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}] ) %1132~2'(= a2◂ [ *{ rr{| l |}}] ) 
; #192 2'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] )
;; rsp=0 , %1140~1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] ) %1139~0'(= a7◂ [ *{ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}] ) 
; ∎ 1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] )
; .dlt.ptn 0'(= a7◂ [ *{ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}] )
;	.dlt adt ⊢ _  
; .mov_ptn2 1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 0'(= a35◂ [ *{ *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a17◂ [ a9◂ [ ]{| l |}]}a7◂ [ *{ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}]}] )
; .mov_ptn 1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 0'(= a35◂ [ *{ *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a17◂ [ a9◂ [ ]{| l |}]}a7◂ [ *{ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}]}] )
	mov rax,r8
	mov rdi,rax
	mov rax,r15
	mov r15,QWORD [r15] 
	mov QWORD [rax],0
	mov BYTE [rax+6],1
	mov QWORD [rax+8],rdi
	mov r13,rax
	ret
LB_3050:
;; ?. 1'(= a35◂ [ a7◂ [ *{ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}]] ) ⊢ 1(<2)◂0'(= a2◂ [ *{ rr{| l |}}] )
	mov rax,QWORD [rdi+8]
	mov r13,rax
;; rsp=0 , %1138~0'(= a2◂ [ *{ rr{| l |}}] ) %1132~2'(= a2◂ [ *{ rr{| l |}}] ) 
; rsp_d=0, #53 { 2'(= a2◂ [ *{ rr{| l |}}] ) 0'(= a2◂ [ *{ rr{| l |}}] ) } ⊢ 0'(= a2◂ [ *{ rr{| l |}}] )
; .mov_ptn2 { 2'(= a2◂ [ *{ rr{| l |}}] ) 0'(= a2◂ [ *{ rr{| l |}}] ) } ⊢ { 0'(= a2◂ [ *{ rr{| l |}}] ) 1'(= a2◂ [ *{ rr{| l |}}] ) }
; .mov_ptn 0'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 1'(= a2◂ [ *{ rr{| l |}}] )
	mov rax,r13
	mov r14,rax
; .mov_ptn 2'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 0'(= a2◂ [ *{ rr{| l |}}] )
	mov rax,r8
	mov r13,rax
	call LB_1604

;; rsp=0 , %1141~0'(= a2◂ [ *{ rr{| l |}}] ) 
; #192 0'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 1(<2)◂0'(= a2◂ [ *{ rr{| l |}}] )
;; rsp=0 , %1142~1(<2)◂0'(= a2◂ [ *{ rr{| l |}}] ) 
; ∎ 1(<2)◂0'(= a2◂ [ *{ rr{| l |}}] )
; .mov_ptn2 1(<2)◂0'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 0'(= a35◂ [ *{ *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a17◂ [ a9◂ [ ]{| l |}]}a7◂ [ *{ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}]}] )
	mov r14,r13
; .mov_ptn 1(<2)◂1'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 0'(= a35◂ [ *{ *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a17◂ [ a9◂ [ ]{| l |}]}a7◂ [ *{ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}]}] )
	mov rax,r14
	mov rdi,rax
	mov rax,r15
	mov r15,QWORD [r15] 
	mov QWORD [rax],0
	mov BYTE [rax+6],1
	mov QWORD [rax+8],rdi
	mov r13,rax
	ret
LB_3046
;; rsp=5 , %2012~1'(= r ) %2011~0'(= r ) %2010~12'(= a35◂ [ a7◂ [ *{ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}]] ) %2009~11'(= a35◂ [ a17◂ [ a9◂ [ ]{| l |}]] ) %2008~10'(= a35◂ [ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]] ) %2007~9'(= a8◂ [ a14◂ [ a9◂ [ ]{| l |}]] ) %2006~8'(= a35◂ [ *{ }] ) 
; rsp_d=0, #194 { 10'(= a35◂ [ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]] ) 11'(= a35◂ [ a17◂ [ a9◂ [ ]{| l |}]] ) } ⊢ 2'(= a35◂ [ *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a17◂ [ a9◂ [ ]{| l |}]}] )
	sub rsp,16
	mov QWORD [rsp+8*0],r13
	mov QWORD [rsp+8*1],r14
; .mov_ptn2 { 10'(= a35◂ [ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]] ) 11'(= a35◂ [ a17◂ [ a9◂ [ ]{| l |}]] ) } ⊢ { 0'(= a35◂ [ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]] ) 1'(= a35◂ [ a17◂ [ a9◂ [ ]{| l |}]] ) }
; .mov_ptn 11'(= a35◂ [ a17◂ [ a9◂ [ ]{| l |}]] ) ⊢ 1'(= a35◂ [ a17◂ [ a9◂ [ ]{| l |}]] )
	mov rax,QWORD [rsp-8+8*4]
	mov r14,rax
; .mov_ptn 10'(= a35◂ [ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]] ) ⊢ 0'(= a35◂ [ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]] )
	mov rax,QWORD [rsp-8+8*5]
	mov r13,rax
	call LB_2909

	mov r14,QWORD [rsp-8+8*2]
	mov rax,QWORD [rsp-8+8*1]
	mov r8,r13
	mov r13,rax
	add rsp,16
;; rsp=5 , %2013~2'(= a35◂ [ *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a17◂ [ a9◂ [ ]{| l |}]}] ) %2012~1'(= r ) %2011~0'(= r ) %2010~12'(= a35◂ [ a7◂ [ *{ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}]] ) %2007~9'(= a8◂ [ a14◂ [ a9◂ [ ]{| l |}]] ) %2006~8'(= a35◂ [ *{ }] ) 
; rsp_d=0, #194 { 2'(= a35◂ [ *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a17◂ [ a9◂ [ ]{| l |}]}] ) 12'(= a35◂ [ a7◂ [ *{ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}]] ) } ⊢ 2'(= a35◂ [ *{ *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a17◂ [ a9◂ [ ]{| l |}]}a7◂ [ *{ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}]}] )
	sub rsp,16
	mov QWORD [rsp+8*0],r13
	mov QWORD [rsp+8*1],r14
; .mov_ptn2 { 2'(= a35◂ [ *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a17◂ [ a9◂ [ ]{| l |}]}] ) 12'(= a35◂ [ a7◂ [ *{ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}]] ) } ⊢ { 0'(= a35◂ [ *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a17◂ [ a9◂ [ ]{| l |}]}] ) 1'(= a35◂ [ a7◂ [ *{ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}]] ) }
; .mov_ptn 12'(= a35◂ [ a7◂ [ *{ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}]] ) ⊢ 1'(= a35◂ [ a7◂ [ *{ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}]] )
	mov rax,QWORD [rsp-8+8*3]
	mov r14,rax
; .mov_ptn 2'(= a35◂ [ *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a17◂ [ a9◂ [ ]{| l |}]}] ) ⊢ 0'(= a35◂ [ *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a17◂ [ a9◂ [ ]{| l |}]}] )
	mov rax,r8
	mov r13,rax
	call LB_3047

	mov r14,QWORD [rsp-8+8*2]
	mov rax,QWORD [rsp-8+8*1]
	mov r8,r13
	mov r13,rax
	add rsp,40
;; rsp=2 , %2014~2'(= a35◂ [ *{ *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a17◂ [ a9◂ [ ]{| l |}]}a7◂ [ *{ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}]}] ) %2012~1'(= r ) %2011~0'(= r ) %2007~9'(= a8◂ [ a14◂ [ a9◂ [ ]{| l |}]] ) %2006~8'(= a35◂ [ *{ }] ) 
;; ? 2'(= a35◂ [ *{ *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a17◂ [ a9◂ [ ]{| l |}]}a7◂ [ *{ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}]}] ) ⊢ 0(<2)◂{ { 4'(= a2◂ [ a21◂ [ a9◂ [ ]{| l |}]] ) 5'(= a17◂ [ a9◂ [ ]{| l |}] ) } 6'(= a7◂ [ *{ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}] ) }
	mov rdi,r8
	cmp BYTE [rdi+6],0
	jnz LB_3051
	mov rdi,r8
	mov rdi,QWORD [rdi+8+8*0]
	mov r9,rdi
	mov rdi,r9
	mov rdi,QWORD [rdi+8+8*0]
	mov r10,rdi
	mov rdi,r9
	mov rdi,QWORD [rdi+8+8*1]
	mov r11,rdi
	mov rdi,r8
	mov rdi,QWORD [rdi+8+8*1]
	mov rcx,rdi
;; rsp=2 , %2018~6'(= a7◂ [ *{ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}] ) %2017~5'(= a17◂ [ a9◂ [ ]{| l |}] ) %2016~4'(= a2◂ [ a21◂ [ a9◂ [ ]{| l |}]] ) %2012~1'(= r ) %2011~0'(= r ) %2007~9'(= a8◂ [ a14◂ [ a9◂ [ ]{| l |}]] ) %2006~8'(= a35◂ [ *{ }] ) 
; #116 5'(= a17◂ [ a9◂ [ ]{| l |}] ) ⊢ 2(<3)◂5'(= a17◂ [ a9◂ [ ]{| l |}] )
;; rsp=2 , %2019~2(<3)◂5'(= a17◂ [ a9◂ [ ]{| l |}] ) %2018~6'(= a7◂ [ *{ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}] ) %2016~4'(= a2◂ [ a21◂ [ a9◂ [ ]{| l |}]] ) %2012~1'(= r ) %2011~0'(= r ) %2007~9'(= a8◂ [ a14◂ [ a9◂ [ ]{| l |}]] ) %2006~8'(= a35◂ [ *{ }] ) 
; #50 { { 9'(= a8◂ [ a14◂ [ a9◂ [ ]{| l |}]] ) 4'(= a2◂ [ a21◂ [ a9◂ [ ]{| l |}]] ) 2(<3)◂5'(= a17◂ [ a9◂ [ ]{| l |}] ) } 6'(= a7◂ [ *{ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}] ) } ⊢ 0(<2)◂{ { 9'(= a8◂ [ a14◂ [ a9◂ [ ]{| l |}]] ) 4'(= a2◂ [ a21◂ [ a9◂ [ ]{| l |}]] ) 2(<3)◂5'(= a17◂ [ a9◂ [ ]{| l |}] ) } 6'(= a7◂ [ *{ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}] ) }
;; rsp=2 , %2020~0(<2)◂{ { 9'(= a8◂ [ a14◂ [ a9◂ [ ]{| l |}]] ) 4'(= a2◂ [ a21◂ [ a9◂ [ ]{| l |}]] ) 2(<3)◂5'(= a17◂ [ a9◂ [ ]{| l |}] ) } 6'(= a7◂ [ *{ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}] ) } %2012~1'(= r ) %2011~0'(= r ) %2006~8'(= a35◂ [ *{ }] ) 
; #193 0(<2)◂{ { 9'(= a8◂ [ a14◂ [ a9◂ [ ]{| l |}]] ) 4'(= a2◂ [ a21◂ [ a9◂ [ ]{| l |}]] ) 2(<3)◂5'(= a17◂ [ a9◂ [ ]{| l |}] ) } 6'(= a7◂ [ *{ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}] ) } ⊢ 0(<2)◂0(<2)◂{ { 9'(= a8◂ [ a14◂ [ a9◂ [ ]{| l |}]] ) 4'(= a2◂ [ a21◂ [ a9◂ [ ]{| l |}]] ) 2(<3)◂5'(= a17◂ [ a9◂ [ ]{| l |}] ) } 6'(= a7◂ [ *{ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}] ) }
;; rsp=2 , %2021~0(<2)◂0(<2)◂{ { 9'(= a8◂ [ a14◂ [ a9◂ [ ]{| l |}]] ) 4'(= a2◂ [ a21◂ [ a9◂ [ ]{| l |}]] ) 2(<3)◂5'(= a17◂ [ a9◂ [ ]{| l |}] ) } 6'(= a7◂ [ *{ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}] ) } %2012~1'(= r ) %2011~0'(= r ) %2006~8'(= a35◂ [ *{ }] ) 
; #22 0(<2)◂0(<2)◂{ { 9'(= a8◂ [ a14◂ [ a9◂ [ ]{| l |}]] ) 4'(= a2◂ [ a21◂ [ a9◂ [ ]{| l |}]] ) 2(<3)◂5'(= a17◂ [ a9◂ [ ]{| l |}] ) } 6'(= a7◂ [ *{ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}] ) } ⊢ 0(<2)◂0(<2)◂0(<2)◂{ { 9'(= a8◂ [ a14◂ [ a9◂ [ ]{| l |}]] ) 4'(= a2◂ [ a21◂ [ a9◂ [ ]{| l |}]] ) 2(<3)◂5'(= a17◂ [ a9◂ [ ]{| l |}] ) } 6'(= a7◂ [ *{ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}] ) }
;; rsp=2 , %2022~0(<2)◂0(<2)◂0(<2)◂{ { 9'(= a8◂ [ a14◂ [ a9◂ [ ]{| l |}]] ) 4'(= a2◂ [ a21◂ [ a9◂ [ ]{| l |}]] ) 2(<3)◂5'(= a17◂ [ a9◂ [ ]{| l |}] ) } 6'(= a7◂ [ *{ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}] ) } %2012~1'(= r ) %2011~0'(= r ) %2006~8'(= a35◂ [ *{ }] ) 
; ∎ 0(<2)◂0(<2)◂0(<2)◂{ { 9'(= a8◂ [ a14◂ [ a9◂ [ ]{| l |}]] ) 4'(= a2◂ [ a21◂ [ a9◂ [ ]{| l |}]] ) 2(<3)◂5'(= a17◂ [ a9◂ [ ]{| l |}] ) } 6'(= a7◂ [ *{ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}] ) }
; .dlt.ptn 1'(= r )
; .dlt.ptn 0'(= r )
; .dlt.ptn 8'(= a35◂ [ *{ }] )
;	.dlt adt ⊢ _  
; .mov_ptn2 0(<2)◂0(<2)◂0(<2)◂{ { 9'(= a8◂ [ a14◂ [ a9◂ [ ]{| l |}]] ) 4'(= a2◂ [ a21◂ [ a9◂ [ ]{| l |}]] ) 2(<3)◂5'(= a17◂ [ a9◂ [ ]{| l |}] ) } 6'(= a7◂ [ *{ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}] ) } ⊢ 2'(= a3◂ [ a35◂ [ a7◂ [ *{ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}]]] )
; .mov_ptn 0(<2)◂0(<2)◂0(<2)◂{ { 9'(= a8◂ [ a14◂ [ a9◂ [ ]{| l |}]] ) 4'(= a2◂ [ a21◂ [ a9◂ [ ]{| l |}]] ) 2(<3)◂5'(= a17◂ [ a9◂ [ ]{| l |}] ) } 6'(= a7◂ [ *{ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}] ) } ⊢ 2'(= a3◂ [ a35◂ [ a7◂ [ *{ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}]]] )
	mov rax,[SS_RCD_2_TOP]
	mov rsi,[rax] 
	mov QWORD [SS_RCD_2_TOP],rsi
	mov QWORD [rax],0
	mov r13,rax
	mov rax,[SS_RCD_3_TOP]
	mov rsi,[rax] 
	mov QWORD [SS_RCD_3_TOP],rsi
	mov QWORD [rax],0
	mov r14,rax
	mov rax,QWORD [rsp-8+8*1]
	mov QWORD [r14+8+8*0],rax
	mov rax,r10
	mov QWORD [r14+8+8*1],rax
	mov rax,r11
	mov rdi,rax
	mov rax,r15
	mov r15,QWORD [r15] 
	mov QWORD [rax],0
	mov BYTE [rax+6],2
	mov QWORD [rax+8],rdi
	mov QWORD [r14+8+8*2],rax
	mov rax,r14
	mov QWORD [r13+8+8*0],rax
	mov rax,rcx
	mov QWORD [r13+8+8*1],rax
	mov rax,r13
	mov BYTE [rax+6],0
	mov rdi,rax
	mov rax,r15
	mov r15,QWORD [r15] 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov rdi,rax
	mov rax,r15
	mov r15,QWORD [r15] 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,16
	jmp LB_3045
LB_3051:
;; ?. 2'(= a35◂ [ *{ *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a17◂ [ a9◂ [ ]{| l |}]}a7◂ [ *{ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}]}] ) ⊢ 1(<2)◂3'(= a2◂ [ *{ rr{| l |}}] )
	mov rax,QWORD [rdi+8]
	mov r9,rax
;; rsp=2 , %2015~3'(= a2◂ [ *{ rr{| l |}}] ) %2012~1'(= r ) %2011~0'(= r ) %2007~9'(= a8◂ [ a14◂ [ a9◂ [ ]{| l |}]] ) %2006~8'(= a35◂ [ *{ }] ) 
; #192 3'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 1(<2)◂3'(= a2◂ [ *{ rr{| l |}}] )
;; rsp=2 , %2023~1(<2)◂3'(= a2◂ [ *{ rr{| l |}}] ) %2012~1'(= r ) %2011~0'(= r ) %2007~9'(= a8◂ [ a14◂ [ a9◂ [ ]{| l |}]] ) %2006~8'(= a35◂ [ *{ }] ) 
; #22 1(<2)◂3'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 0(<2)◂1(<2)◂3'(= a2◂ [ *{ rr{| l |}}] )
;; rsp=2 , %2024~0(<2)◂1(<2)◂3'(= a2◂ [ *{ rr{| l |}}] ) %2012~1'(= r ) %2011~0'(= r ) %2007~9'(= a8◂ [ a14◂ [ a9◂ [ ]{| l |}]] ) %2006~8'(= a35◂ [ *{ }] ) 
; ∎ 0(<2)◂1(<2)◂3'(= a2◂ [ *{ rr{| l |}}] )
; .dlt.ptn 1'(= r )
; .dlt.ptn 0'(= r )
; .dlt.ptn 9'(= a8◂ [ a14◂ [ a9◂ [ ]{| l |}]] )
;	.dlt adt ⊢ _  
; .dlt.ptn 8'(= a35◂ [ *{ }] )
;	.dlt adt ⊢ _  
; .mov_ptn2 0(<2)◂1(<2)◂3'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 2'(= a3◂ [ a35◂ [ a7◂ [ *{ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}]]] )
; .mov_ptn 0(<2)◂1(<2)◂3'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 2'(= a3◂ [ a35◂ [ a7◂ [ *{ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}]]] )
	mov rax,r9
	mov rdi,rax
	mov rax,r15
	mov r15,QWORD [r15] 
	mov QWORD [rax],0
	mov BYTE [rax+6],1
	mov QWORD [rax+8],rdi
	mov rdi,rax
	mov rax,r15
	mov r15,QWORD [r15] 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,16
	jmp LB_3045
LB_3045:
	cmp BYTE [r8+6],0
	jnz LB_3000
	pop r14
	pop r9
	add rsp,8
	pop r13
	ret
LB_3000:
	pop rdi
	pop r9 
	pop r14
	pop r13
	ret
ETR_238:
	mov r9,0x0000_ffff_ffff_ffff
	and r9,[r13]
	call GRM_238
	ret
GRM_238:
	sub rsp,32
	mov QWORD [rsp+24],r13
	mov QWORD [rsp+16],r14 
	mov QWORD [rsp+8],r9
	jmp LB_3054
LB_3053:
	add r14,1 
LB_3054:
	cmp r14,r9
	jge LB_3055
	JZ_LINE_SPC BYTE [r13+8+r14], LB_3053
LB_3055
	call GRM_239
	cmp BYTE [r8+6],0
	jnz LB_3058
	jmp LB_3059
LB_3058:
	jmp LB_3056
LB_3059:
	sub rsp,8
	mov r8,[r8+8]
; .mov_ptn2 2'(= a21◂ [ a9◂ [ ]{| l |}] ) ⊢ 8'(= a21◂ [ a9◂ [ ]{| l |}] )
; .mov_ptn 2'(= a21◂ [ a9◂ [ ]{| l |}] ) ⊢ 8'(= a21◂ [ a9◂ [ ]{| l |}] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_3057
LB_3056:
	add rsp,0
	jmp LB_3052
LB_3057:
	jmp LB_3061
LB_3060:
	add r14,1 
LB_3061:
	cmp r14,r9
	jge LB_3062
	JZ_LINE_SPC BYTE [r13+8+r14], LB_3060
LB_3062
	call GRM_240
	cmp BYTE [r8+6],0
	jnz LB_3065
	jmp LB_3066
LB_3065:
	jmp LB_3063
LB_3066:
	sub rsp,8
	mov r8,[r8+8]
; .mov_ptn2 2'(= a2◂ [ a21◂ [ a9◂ [ ]{| l |}]] ) ⊢ 9'(= a2◂ [ a21◂ [ a9◂ [ ]{| l |}]] )
; .mov_ptn 2'(= a2◂ [ a21◂ [ a9◂ [ ]{| l |}]] ) ⊢ 9'(= a2◂ [ a21◂ [ a9◂ [ ]{| l |}]] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_3064
LB_3063:
	add rsp,8
	jmp LB_3052
LB_3064:
	mov QWORD [rsp+8*2],r14
	mov r13,QWORD [rsp+16+8*2]
	mov r14,QWORD [rsp+8*2]
	jmp LB_3068
LB_3068
;; rsp=2 , %2028~1'(= r ) %2027~0'(= r ) %2026~9'(= a2◂ [ a21◂ [ a9◂ [ ]{| l |}]] ) %2025~8'(= a21◂ [ a9◂ [ ]{| l |}] ) 
; #21 { 8'(= a21◂ [ a9◂ [ ]{| l |}] ) 9'(= a2◂ [ a21◂ [ a9◂ [ ]{| l |}]] ) } ⊢ 0(<2)◂{ 8'(= a21◂ [ a9◂ [ ]{| l |}] ) 9'(= a2◂ [ a21◂ [ a9◂ [ ]{| l |}]] ) }
;; rsp=2 , %2029~0(<2)◂{ 8'(= a21◂ [ a9◂ [ ]{| l |}] ) 9'(= a2◂ [ a21◂ [ a9◂ [ ]{| l |}]] ) } %2028~1'(= r ) %2027~0'(= r ) 
; #193 0(<2)◂{ 8'(= a21◂ [ a9◂ [ ]{| l |}] ) 9'(= a2◂ [ a21◂ [ a9◂ [ ]{| l |}]] ) } ⊢ 0(<2)◂0(<2)◂{ 8'(= a21◂ [ a9◂ [ ]{| l |}] ) 9'(= a2◂ [ a21◂ [ a9◂ [ ]{| l |}]] ) }
;; rsp=2 , %2030~0(<2)◂0(<2)◂{ 8'(= a21◂ [ a9◂ [ ]{| l |}] ) 9'(= a2◂ [ a21◂ [ a9◂ [ ]{| l |}]] ) } %2028~1'(= r ) %2027~0'(= r ) 
; #22 0(<2)◂0(<2)◂{ 8'(= a21◂ [ a9◂ [ ]{| l |}] ) 9'(= a2◂ [ a21◂ [ a9◂ [ ]{| l |}]] ) } ⊢ 0(<2)◂0(<2)◂0(<2)◂{ 8'(= a21◂ [ a9◂ [ ]{| l |}] ) 9'(= a2◂ [ a21◂ [ a9◂ [ ]{| l |}]] ) }
;; rsp=2 , %2031~0(<2)◂0(<2)◂0(<2)◂{ 8'(= a21◂ [ a9◂ [ ]{| l |}] ) 9'(= a2◂ [ a21◂ [ a9◂ [ ]{| l |}]] ) } %2028~1'(= r ) %2027~0'(= r ) 
; ∎ 0(<2)◂0(<2)◂0(<2)◂{ 8'(= a21◂ [ a9◂ [ ]{| l |}] ) 9'(= a2◂ [ a21◂ [ a9◂ [ ]{| l |}]] ) }
; .dlt.ptn 1'(= r )
; .dlt.ptn 0'(= r )
; .mov_ptn2 0(<2)◂0(<2)◂0(<2)◂{ 8'(= a21◂ [ a9◂ [ ]{| l |}] ) 9'(= a2◂ [ a21◂ [ a9◂ [ ]{| l |}]] ) } ⊢ 2'(= a3◂ [ a35◂ [ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]]] )
; .mov_ptn 0(<2)◂0(<2)◂0(<2)◂{ 8'(= a21◂ [ a9◂ [ ]{| l |}] ) 9'(= a2◂ [ a21◂ [ a9◂ [ ]{| l |}]] ) } ⊢ 2'(= a3◂ [ a35◂ [ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]]] )
	mov rax,[SS_RCD_2_TOP]
	mov rsi,[rax] 
	mov QWORD [SS_RCD_2_TOP],rsi
	mov QWORD [rax],0
	mov r13,rax
	mov rax,QWORD [rsp-8+8*2]
	mov QWORD [r13+8+8*0],rax
	mov rax,QWORD [rsp-8+8*1]
	mov QWORD [r13+8+8*1],rax
	mov rax,r13
	mov BYTE [rax+6],0
	mov rdi,rax
	mov rax,r15
	mov r15,QWORD [r15] 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov rdi,rax
	mov rax,r15
	mov r15,QWORD [r15] 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,16
	jmp LB_3067
LB_3067:
	cmp BYTE [r8+6],0
	jnz LB_3052
	pop r14
	pop r9
	add rsp,8
	pop r13
	ret
LB_3052:
	mov r9,QWORD [rsp+8]
	mov r14,QWORD [rsp+16]
	mov r13,QWORD [rsp+24]
	jmp LB_3071
LB_3070:
	add r14,1 
LB_3071:
	cmp r14,r9
	jge LB_3072
	JZ_LINE_SPC BYTE [r13+8+r14], LB_3070
LB_3072
	lea rax,[r14+1]
	cmp rax,r9
	jg LB_3075
	jmp LB_3076
LB_3075:
	mov r8,unt_1
	jmp LB_3073
LB_3076:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],46
	jnz LB_3077
	jmp LB_3078
LB_3077:
	mov r8,unt_1
	jmp LB_3073
LB_3078:
	add r14,1
	jmp LB_3074
LB_3073:
	add rsp,0
	jmp LB_3069
LB_3074:
	jmp LB_3080
LB_3079:
	add r14,1 
LB_3080:
	cmp r14,r9
	jge LB_3081
	JZ_LINE_SPC BYTE [r13+8+r14], LB_3079
LB_3081
	lea rax,[r14+1]
	cmp rax,r9
	jg LB_3084
	jmp LB_3085
LB_3084:
	mov r8,unt_1
	jmp LB_3082
LB_3085:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],10
	jnz LB_3086
	jmp LB_3087
LB_3086:
	mov r8,unt_1
	jmp LB_3082
LB_3087:
	add r14,1
	jmp LB_3083
LB_3082:
	add rsp,0
	jmp LB_3069
LB_3083:
	mov QWORD [rsp+8*0],r14
	mov r13,QWORD [rsp+16+8*0]
	mov r14,QWORD [rsp+8*0]
	jmp LB_3089
LB_3089
;; rsp=0 , %2033~1'(= r ) %2032~0'(= r ) 
; #20 { } ⊢ 1(<2)◂{ }
;; rsp=0 , %2034~1(<2)◂{ } %2033~1'(= r ) %2032~0'(= r ) 
; #193 1(<2)◂{ } ⊢ 0(<2)◂1(<2)◂{ }
;; rsp=0 , %2035~0(<2)◂1(<2)◂{ } %2033~1'(= r ) %2032~0'(= r ) 
; #22 0(<2)◂1(<2)◂{ } ⊢ 0(<2)◂0(<2)◂1(<2)◂{ }
;; rsp=0 , %2036~0(<2)◂0(<2)◂1(<2)◂{ } %2033~1'(= r ) %2032~0'(= r ) 
; ∎ 0(<2)◂0(<2)◂1(<2)◂{ }
; .dlt.ptn 1'(= r )
; .dlt.ptn 0'(= r )
; .mov_ptn2 0(<2)◂0(<2)◂1(<2)◂{ } ⊢ 2'(= a3◂ [ a35◂ [ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]]] )
; .mov_ptn 0(<2)◂0(<2)◂1(<2)◂{ } ⊢ 2'(= a3◂ [ a35◂ [ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]]] )
	mov rax,unt 
	mov rax,unt_1
	mov rdi,rax
	mov rax,r15
	mov r15,QWORD [r15] 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov rdi,rax
	mov rax,r15
	mov r15,QWORD [r15] 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	jmp LB_3088
LB_3088:
	cmp BYTE [r8+6],0
	jnz LB_3069
	pop r14
	pop r9
	add rsp,8
	pop r13
	ret
LB_3069:
	mov r9,QWORD [rsp+8]
	mov r14,QWORD [rsp+16]
	mov r13,QWORD [rsp+24]
	jmp LB_3092
LB_3091:
	add r14,1 
LB_3092:
	cmp r14,r9
	jge LB_3093
	JZ_LINE_SPC BYTE [r13+8+r14], LB_3091
LB_3093
	call GRM_220
	cmp BYTE [r8+6],0
	jnz LB_3096
	jmp LB_3097
LB_3096:
	jmp LB_3094
LB_3097:
	sub rsp,16
; .mov_ptn2 2'(= *{ rr} ) ⊢ { 8'(= r ) 9'(= r ) }
; .mov_ptn 2'(= *{ rr} ) ⊢ { 8'(= r ) 9'(= r ) }
	mov rdi,r8
	mov rdi,QWORD [rdi+8+8*0]
	mov r10,rdi
	mov QWORD [rsp-8+8*2],r10
	mov rdi,r8
	mov rdi,QWORD [rdi+8+8*1]
	mov r11,rdi
	mov QWORD [rsp-8+8*1],r11
	jmp LB_3095
LB_3094:
	add rsp,0
	jmp LB_3090
LB_3095:
	mov QWORD [rsp+8*2],r14
	mov r13,QWORD [rsp+16+8*2]
	mov r14,QWORD [rsp+8*2]
	jmp LB_3099
LB_3099
;; rsp=2 , %2039~1'(= r ) %2038~0'(= r ) %2037~{ 8'(= r ) 9'(= r ) } 
	jmp LB_3100
LB_3100:
; $ %[ "mtc_line 0" ] ⊢ %[ "mtc_line 0" ]
;; rsp=2 , %2040~%[ "mtc_line 0" ] %2039~1'(= r ) %2038~0'(= r ) %2037~{ 8'(= r ) 9'(= r ) } 
; #20 { } ⊢ 1(<2)◂{ }
;; rsp=2 , %2041~1(<2)◂{ } %2040~%[ "mtc_line 0" ] %2039~1'(= r ) %2038~0'(= r ) %2037~{ 8'(= r ) 9'(= r ) } 
; #21 { { 0'(= r ) 1'(= r ) %[ "mtc_line 0" ] } 1(<2)◂{ } } ⊢ 0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "mtc_line 0" ] } 1(<2)◂{ } }
;; rsp=2 , %2042~0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "mtc_line 0" ] } 1(<2)◂{ } } %2037~{ 8'(= r ) 9'(= r ) } 
; #192 0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "mtc_line 0" ] } 1(<2)◂{ } } ⊢ 1(<2)◂0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "mtc_line 0" ] } 1(<2)◂{ } }
;; rsp=2 , %2043~1(<2)◂0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "mtc_line 0" ] } 1(<2)◂{ } } %2037~{ 8'(= r ) 9'(= r ) } 
; #22 1(<2)◂0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "mtc_line 0" ] } 1(<2)◂{ } } ⊢ 0(<2)◂1(<2)◂0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "mtc_line 0" ] } 1(<2)◂{ } }
;; rsp=2 , %2044~0(<2)◂1(<2)◂0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "mtc_line 0" ] } 1(<2)◂{ } } %2037~{ 8'(= r ) 9'(= r ) } 
; ∎ 0(<2)◂1(<2)◂0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "mtc_line 0" ] } 1(<2)◂{ } }
; .dlt.ptn { 8'(= r ) 9'(= r ) }
; .mov_ptn2 0(<2)◂1(<2)◂0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "mtc_line 0" ] } 1(<2)◂{ } } ⊢ 2'(= a3◂ [ a35◂ [ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]]] )
; .mov_ptn 0(<2)◂1(<2)◂0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "mtc_line 0" ] } 1(<2)◂{ } } ⊢ 2'(= a3◂ [ a35◂ [ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]]] )
	mov rax,[SS_RCD_2_TOP]
	mov rsi,[rax] 
	mov QWORD [SS_RCD_2_TOP],rsi
	mov QWORD [rax],0
	mov r9,rax
	mov rax,[SS_RCD_3_TOP]
	mov rsi,[rax] 
	mov QWORD [SS_RCD_3_TOP],rsi
	mov QWORD [rax],0
	mov r10,rax
	mov rax,r13
	mov QWORD [r10+8+8*0],rax
	mov rax,r14
	mov QWORD [r10+8+8*1],rax
	mov rsi,1  
	mov rdi,24
	xor rax,rax 
	C_CALL_SF calloc
	mov QWORD [rax],10
	mov BYTE [rax+8+0],109
	mov BYTE [rax+8+1],116
	mov BYTE [rax+8+2],99
	mov BYTE [rax+8+3],95
	mov BYTE [rax+8+4],108
	mov BYTE [rax+8+5],105
	mov BYTE [rax+8+6],110
	mov BYTE [rax+8+7],101
	mov BYTE [rax+8+8],32
	mov BYTE [rax+8+9],48
	mov QWORD [r10+8+8*2],rax
	mov rax,r10
	mov QWORD [r9+8+8*0],rax
	mov rax,unt 
	mov rax,unt_1
	mov QWORD [r9+8+8*1],rax
	mov rax,r9
	mov BYTE [rax+6],0
	mov rdi,rax
	mov rax,r15
	mov r15,QWORD [r15] 
	mov QWORD [rax],0
	mov BYTE [rax+6],1
	mov QWORD [rax+8],rdi
	mov rdi,rax
	mov rax,r15
	mov r15,QWORD [r15] 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,16
	jmp LB_3098
LB_3098:
	cmp BYTE [r8+6],0
	jnz LB_3090
	pop r14
	pop r9
	add rsp,8
	pop r13
	ret
LB_3090:
	pop rdi
	pop r9 
	pop r14
	pop r13
	ret
ETR_239:
	mov r9,0x0000_ffff_ffff_ffff
	and r9,[r13]
	call GRM_239
	ret
GRM_239:
	sub rsp,32
	mov QWORD [rsp+24],r13
	mov QWORD [rsp+16],r14 
	mov QWORD [rsp+8],r9
	jmp LB_3103
LB_3102:
	add r14,1 
LB_3103:
	cmp r14,r9
	jge LB_3104
	JZ_LINE_SPC BYTE [r13+8+r14], LB_3102
LB_3104
	call GRM_201
	cmp BYTE [r8+6],0
	jnz LB_3107
	jmp LB_3108
LB_3107:
	jmp LB_3105
LB_3108:
	sub rsp,8
	mov r8,[r8+8]
; .mov_ptn2 2'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) ⊢ 8'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] )
; .mov_ptn 2'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) ⊢ 8'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_3106
LB_3105:
	add rsp,0
	jmp LB_3101
LB_3106:
	jmp LB_3110
LB_3109:
	add r14,1 
LB_3110:
	cmp r14,r9
	jge LB_3111
	JZ_LINE_SPC BYTE [r13+8+r14], LB_3109
LB_3111
	lea rax,[r14+3]
	cmp rax,r9
	jg LB_3114
	jmp LB_3115
LB_3114:
	mov r8,unt_1
	jmp LB_3112
LB_3115:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],226
	jnz LB_3116
	cmp BYTE [rdi+1],138
	jnz LB_3116
	cmp BYTE [rdi+2],162
	jnz LB_3116
	jmp LB_3117
LB_3116:
	mov r8,unt_1
	jmp LB_3112
LB_3117:
	add r14,3
	jmp LB_3113
LB_3112:
	add rsp,8
	jmp LB_3101
LB_3113:
	jmp LB_3119
LB_3118:
	add r14,1 
LB_3119:
	cmp r14,r9
	jge LB_3120
	JZ_LINE_SPC BYTE [r13+8+r14], LB_3118
LB_3120
	call GRM_189
	cmp BYTE [r8+6],0
	jnz LB_3123
	jmp LB_3124
LB_3123:
	jmp LB_3121
LB_3124:
	sub rsp,8
	mov r8,[r8+8]
; .mov_ptn2 2'(= a9◂ [ ] ) ⊢ 9'(= a9◂ [ ] )
; .mov_ptn 2'(= a9◂ [ ] ) ⊢ 9'(= a9◂ [ ] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_3122
LB_3121:
	add rsp,8
	pop rdi
	pop r9 
	pop r14
	pop r13
	ret
LB_3122:
	jmp LB_3126
LB_3125:
	add r14,1 
LB_3126:
	cmp r14,r9
	jge LB_3127
	JZ_LINE_SPC BYTE [r13+8+r14], LB_3125
LB_3127
	lea rax,[r14+3]
	cmp rax,r9
	jg LB_3130
	jmp LB_3131
LB_3130:
	mov r8,unt_1
	jmp LB_3128
LB_3131:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],226
	jnz LB_3132
	cmp BYTE [rdi+1],151
	jnz LB_3132
	cmp BYTE [rdi+2],130
	jnz LB_3132
	jmp LB_3133
LB_3132:
	mov r8,unt_1
	jmp LB_3128
LB_3133:
	add r14,3
	jmp LB_3129
LB_3128:
	add rsp,16
	pop rdi
	pop r9 
	pop r14
	pop r13
	ret
LB_3129:
	jmp LB_3135
LB_3134:
	add r14,1 
LB_3135:
	cmp r14,r9
	jge LB_3136
	JZ_LINE_SPC BYTE [r13+8+r14], LB_3134
LB_3136
	call GRM_197
	cmp BYTE [r8+6],0
	jnz LB_3139
	jmp LB_3140
LB_3139:
	jmp LB_3137
LB_3140:
	sub rsp,8
	mov r8,[r8+8]
; .mov_ptn2 2'(= a8◂ [ a14◂ [ a9◂ [ ]{| l |}]] ) ⊢ 10'(= a8◂ [ a14◂ [ a9◂ [ ]{| l |}]] )
; .mov_ptn 2'(= a8◂ [ a14◂ [ a9◂ [ ]{| l |}]] ) ⊢ 10'(= a8◂ [ a14◂ [ a9◂ [ ]{| l |}]] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_3138
LB_3137:
	add rsp,16
	pop rdi
	pop r9 
	pop r14
	pop r13
	ret
LB_3138:
	mov QWORD [rsp+8*3],r14
	mov r13,QWORD [rsp+16+8*3]
	mov r14,QWORD [rsp+8*3]
	jmp LB_3142
LB_3142
;; rsp=3 , %2049~1'(= r ) %2048~0'(= r ) %2047~10'(= a8◂ [ a14◂ [ a9◂ [ ]{| l |}]] ) %2046~9'(= a9◂ [ ] ) %2045~8'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) 
; #96 { 9'(= a9◂ [ ] ) 10'(= a8◂ [ a14◂ [ a9◂ [ ]{| l |}]] ) } ⊢ 0(<4)◂{ 9'(= a9◂ [ ] ) 10'(= a8◂ [ a14◂ [ a9◂ [ ]{| l |}]] ) }
;; rsp=3 , %2050~0(<4)◂{ 9'(= a9◂ [ ] ) 10'(= a8◂ [ a14◂ [ a9◂ [ ]{| l |}]] ) } %2049~1'(= r ) %2048~0'(= r ) %2045~8'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) 
; #78 0(<4)◂{ 9'(= a9◂ [ ] ) 10'(= a8◂ [ a14◂ [ a9◂ [ ]{| l |}]] ) } ⊢ 1(<2)◂0(<4)◂{ 9'(= a9◂ [ ] ) 10'(= a8◂ [ a14◂ [ a9◂ [ ]{| l |}]] ) }
;; rsp=3 , %2051~1(<2)◂0(<4)◂{ 9'(= a9◂ [ ] ) 10'(= a8◂ [ a14◂ [ a9◂ [ ]{| l |}]] ) } %2049~1'(= r ) %2048~0'(= r ) %2045~8'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) 
; #115 { 8'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) 1(<2)◂0(<4)◂{ 9'(= a9◂ [ ] ) 10'(= a8◂ [ a14◂ [ a9◂ [ ]{| l |}]] ) } } ⊢ 0(<3)◂{ 8'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) 1(<2)◂0(<4)◂{ 9'(= a9◂ [ ] ) 10'(= a8◂ [ a14◂ [ a9◂ [ ]{| l |}]] ) } }
;; rsp=3 , %2052~0(<3)◂{ 8'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) 1(<2)◂0(<4)◂{ 9'(= a9◂ [ ] ) 10'(= a8◂ [ a14◂ [ a9◂ [ ]{| l |}]] ) } } %2049~1'(= r ) %2048~0'(= r ) 
; #22 0(<3)◂{ 8'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) 1(<2)◂0(<4)◂{ 9'(= a9◂ [ ] ) 10'(= a8◂ [ a14◂ [ a9◂ [ ]{| l |}]] ) } } ⊢ 0(<2)◂0(<3)◂{ 8'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) 1(<2)◂0(<4)◂{ 9'(= a9◂ [ ] ) 10'(= a8◂ [ a14◂ [ a9◂ [ ]{| l |}]] ) } }
;; rsp=3 , %2053~0(<2)◂0(<3)◂{ 8'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) 1(<2)◂0(<4)◂{ 9'(= a9◂ [ ] ) 10'(= a8◂ [ a14◂ [ a9◂ [ ]{| l |}]] ) } } %2049~1'(= r ) %2048~0'(= r ) 
; ∎ 0(<2)◂0(<3)◂{ 8'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) 1(<2)◂0(<4)◂{ 9'(= a9◂ [ ] ) 10'(= a8◂ [ a14◂ [ a9◂ [ ]{| l |}]] ) } }
; .dlt.ptn 1'(= r )
; .dlt.ptn 0'(= r )
; .mov_ptn2 0(<2)◂0(<3)◂{ 8'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) 1(<2)◂0(<4)◂{ 9'(= a9◂ [ ] ) 10'(= a8◂ [ a14◂ [ a9◂ [ ]{| l |}]] ) } } ⊢ 2'(= a3◂ [ a21◂ [ a9◂ [ ]{| l |}]] )
; .mov_ptn 0(<2)◂0(<3)◂{ 8'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) 1(<2)◂0(<4)◂{ 9'(= a9◂ [ ] ) 10'(= a8◂ [ a14◂ [ a9◂ [ ]{| l |}]] ) } } ⊢ 2'(= a3◂ [ a21◂ [ a9◂ [ ]{| l |}]] )
	mov rax,[SS_RCD_2_TOP]
	mov rsi,[rax] 
	mov QWORD [SS_RCD_2_TOP],rsi
	mov QWORD [rax],0
	mov r13,rax
	mov rax,QWORD [rsp-8+8*3]
	mov QWORD [r13+8+8*0],rax
	mov rax,[SS_RCD_2_TOP]
	mov rsi,[rax] 
	mov QWORD [SS_RCD_2_TOP],rsi
	mov QWORD [rax],0
	mov r14,rax
	mov rax,QWORD [rsp-8+8*2]
	mov QWORD [r14+8+8*0],rax
	mov rax,QWORD [rsp-8+8*1]
	mov QWORD [r14+8+8*1],rax
	mov rax,r14
	mov BYTE [rax+6],0
	mov rdi,rax
	mov rax,r15
	mov r15,QWORD [r15] 
	mov QWORD [rax],0
	mov BYTE [rax+6],1
	mov QWORD [rax+8],rdi
	mov QWORD [r13+8+8*1],rax
	mov rax,r13
	mov BYTE [rax+6],0
	mov rdi,rax
	mov rax,r15
	mov r15,QWORD [r15] 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,24
	jmp LB_3141
LB_3141:
	cmp BYTE [r8+6],0
	jnz LB_3101
	pop r14
	pop r9
	add rsp,8
	pop r13
	ret
LB_3101:
	mov r9,QWORD [rsp+8]
	mov r14,QWORD [rsp+16]
	mov r13,QWORD [rsp+24]
	jmp LB_3145
LB_3144:
	add r14,1 
LB_3145:
	cmp r14,r9
	jge LB_3146
	JZ_LINE_SPC BYTE [r13+8+r14], LB_3144
LB_3146
	call GRM_242
	cmp BYTE [r8+6],0
	jnz LB_3149
	jmp LB_3150
LB_3149:
	jmp LB_3147
LB_3150:
	sub rsp,8
	mov r8,[r8+8]
; .mov_ptn2 2'(= a22◂ [ a9◂ [ ]{| l |}] ) ⊢ 8'(= a22◂ [ a9◂ [ ]{| l |}] )
; .mov_ptn 2'(= a22◂ [ a9◂ [ ]{| l |}] ) ⊢ 8'(= a22◂ [ a9◂ [ ]{| l |}] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_3148
LB_3147:
	add rsp,0
	jmp LB_3143
LB_3148:
	jmp LB_3152
LB_3151:
	add r14,1 
LB_3152:
	cmp r14,r9
	jge LB_3153
	JZ_LINE_SPC BYTE [r13+8+r14], LB_3151
LB_3153
	lea rax,[r14+2]
	cmp rax,r9
	jg LB_3156
	jmp LB_3157
LB_3156:
	mov r8,unt_1
	jmp LB_3154
LB_3157:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],61
	jnz LB_3158
	cmp BYTE [rdi+1],60
	jnz LB_3158
	jmp LB_3159
LB_3158:
	mov r8,unt_1
	jmp LB_3154
LB_3159:
	add r14,2
	jmp LB_3155
LB_3154:
	add rsp,8
	jmp LB_3143
LB_3155:
	jmp LB_3161
LB_3160:
	add r14,1 
LB_3161:
	cmp r14,r9
	jge LB_3162
	JZ_LINE_SPC BYTE [r13+8+r14], LB_3160
LB_3162
	call GRM_242
	cmp BYTE [r8+6],0
	jnz LB_3165
	jmp LB_3166
LB_3165:
	jmp LB_3163
LB_3166:
	sub rsp,8
	mov r8,[r8+8]
; .mov_ptn2 2'(= a22◂ [ a9◂ [ ]{| l |}] ) ⊢ 9'(= a22◂ [ a9◂ [ ]{| l |}] )
; .mov_ptn 2'(= a22◂ [ a9◂ [ ]{| l |}] ) ⊢ 9'(= a22◂ [ a9◂ [ ]{| l |}] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_3164
LB_3163:
	add rsp,8
	jmp LB_3143
LB_3164:
	mov QWORD [rsp+8*2],r14
	mov r13,QWORD [rsp+16+8*2]
	mov r14,QWORD [rsp+8*2]
	jmp LB_3168
LB_3168
;; rsp=2 , %2057~1'(= r ) %2056~0'(= r ) %2055~9'(= a22◂ [ a9◂ [ ]{| l |}] ) %2054~8'(= a22◂ [ a9◂ [ ]{| l |}] ) 
; #113 { 8'(= a22◂ [ a9◂ [ ]{| l |}] ) 9'(= a22◂ [ a9◂ [ ]{| l |}] ) } ⊢ 2(<3)◂{ 8'(= a22◂ [ a9◂ [ ]{| l |}] ) 9'(= a22◂ [ a9◂ [ ]{| l |}] ) }
;; rsp=2 , %2058~2(<3)◂{ 8'(= a22◂ [ a9◂ [ ]{| l |}] ) 9'(= a22◂ [ a9◂ [ ]{| l |}] ) } %2057~1'(= r ) %2056~0'(= r ) 
; #22 2(<3)◂{ 8'(= a22◂ [ a9◂ [ ]{| l |}] ) 9'(= a22◂ [ a9◂ [ ]{| l |}] ) } ⊢ 0(<2)◂2(<3)◂{ 8'(= a22◂ [ a9◂ [ ]{| l |}] ) 9'(= a22◂ [ a9◂ [ ]{| l |}] ) }
;; rsp=2 , %2059~0(<2)◂2(<3)◂{ 8'(= a22◂ [ a9◂ [ ]{| l |}] ) 9'(= a22◂ [ a9◂ [ ]{| l |}] ) } %2057~1'(= r ) %2056~0'(= r ) 
; ∎ 0(<2)◂2(<3)◂{ 8'(= a22◂ [ a9◂ [ ]{| l |}] ) 9'(= a22◂ [ a9◂ [ ]{| l |}] ) }
; .dlt.ptn 1'(= r )
; .dlt.ptn 0'(= r )
; .mov_ptn2 0(<2)◂2(<3)◂{ 8'(= a22◂ [ a9◂ [ ]{| l |}] ) 9'(= a22◂ [ a9◂ [ ]{| l |}] ) } ⊢ 2'(= a3◂ [ a21◂ [ a9◂ [ ]{| l |}]] )
; .mov_ptn 0(<2)◂2(<3)◂{ 8'(= a22◂ [ a9◂ [ ]{| l |}] ) 9'(= a22◂ [ a9◂ [ ]{| l |}] ) } ⊢ 2'(= a3◂ [ a21◂ [ a9◂ [ ]{| l |}]] )
	mov rax,[SS_RCD_2_TOP]
	mov rsi,[rax] 
	mov QWORD [SS_RCD_2_TOP],rsi
	mov QWORD [rax],0
	mov r13,rax
	mov rax,QWORD [rsp-8+8*2]
	mov QWORD [r13+8+8*0],rax
	mov rax,QWORD [rsp-8+8*1]
	mov QWORD [r13+8+8*1],rax
	mov rax,r13
	mov BYTE [rax+6],2
	mov rdi,rax
	mov rax,r15
	mov r15,QWORD [r15] 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,16
	jmp LB_3167
LB_3167:
	cmp BYTE [r8+6],0
	jnz LB_3143
	pop r14
	pop r9
	add rsp,8
	pop r13
	ret
LB_3143:
	mov r9,QWORD [rsp+8]
	mov r14,QWORD [rsp+16]
	mov r13,QWORD [rsp+24]
	jmp LB_3171
LB_3170:
	add r14,1 
LB_3171:
	cmp r14,r9
	jge LB_3172
	JZ_LINE_SPC BYTE [r13+8+r14], LB_3170
LB_3172
	call GRM_242
	cmp BYTE [r8+6],0
	jnz LB_3175
	jmp LB_3176
LB_3175:
	jmp LB_3173
LB_3176:
	sub rsp,8
	mov r8,[r8+8]
; .mov_ptn2 2'(= a22◂ [ a9◂ [ ]{| l |}] ) ⊢ 8'(= a22◂ [ a9◂ [ ]{| l |}] )
; .mov_ptn 2'(= a22◂ [ a9◂ [ ]{| l |}] ) ⊢ 8'(= a22◂ [ a9◂ [ ]{| l |}] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_3174
LB_3173:
	add rsp,0
	jmp LB_3169
LB_3174:
	jmp LB_3178
LB_3177:
	add r14,1 
LB_3178:
	cmp r14,r9
	jge LB_3179
	JZ_LINE_SPC BYTE [r13+8+r14], LB_3177
LB_3179
	lea rax,[r14+1]
	cmp rax,r9
	jg LB_3182
	jmp LB_3183
LB_3182:
	mov r8,unt_1
	jmp LB_3180
LB_3183:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],61
	jnz LB_3184
	jmp LB_3185
LB_3184:
	mov r8,unt_1
	jmp LB_3180
LB_3185:
	add r14,1
	jmp LB_3181
LB_3180:
	add rsp,8
	jmp LB_3169
LB_3181:
	jmp LB_3187
LB_3186:
	add r14,1 
LB_3187:
	cmp r14,r9
	jge LB_3188
	JZ_LINE_SPC BYTE [r13+8+r14], LB_3186
LB_3188
	call GRM_242
	cmp BYTE [r8+6],0
	jnz LB_3191
	jmp LB_3192
LB_3191:
	jmp LB_3189
LB_3192:
	sub rsp,8
	mov r8,[r8+8]
; .mov_ptn2 2'(= a22◂ [ a9◂ [ ]{| l |}] ) ⊢ 9'(= a22◂ [ a9◂ [ ]{| l |}] )
; .mov_ptn 2'(= a22◂ [ a9◂ [ ]{| l |}] ) ⊢ 9'(= a22◂ [ a9◂ [ ]{| l |}] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_3190
LB_3189:
	add rsp,8
	jmp LB_3169
LB_3190:
	mov QWORD [rsp+8*2],r14
	mov r13,QWORD [rsp+16+8*2]
	mov r14,QWORD [rsp+8*2]
	jmp LB_3194
LB_3194
;; rsp=2 , %2063~1'(= r ) %2062~0'(= r ) %2061~9'(= a22◂ [ a9◂ [ ]{| l |}] ) %2060~8'(= a22◂ [ a9◂ [ ]{| l |}] ) 
; #114 { 8'(= a22◂ [ a9◂ [ ]{| l |}] ) 9'(= a22◂ [ a9◂ [ ]{| l |}] ) } ⊢ 1(<3)◂{ 8'(= a22◂ [ a9◂ [ ]{| l |}] ) 9'(= a22◂ [ a9◂ [ ]{| l |}] ) }
;; rsp=2 , %2064~1(<3)◂{ 8'(= a22◂ [ a9◂ [ ]{| l |}] ) 9'(= a22◂ [ a9◂ [ ]{| l |}] ) } %2063~1'(= r ) %2062~0'(= r ) 
; #22 1(<3)◂{ 8'(= a22◂ [ a9◂ [ ]{| l |}] ) 9'(= a22◂ [ a9◂ [ ]{| l |}] ) } ⊢ 0(<2)◂1(<3)◂{ 8'(= a22◂ [ a9◂ [ ]{| l |}] ) 9'(= a22◂ [ a9◂ [ ]{| l |}] ) }
;; rsp=2 , %2065~0(<2)◂1(<3)◂{ 8'(= a22◂ [ a9◂ [ ]{| l |}] ) 9'(= a22◂ [ a9◂ [ ]{| l |}] ) } %2063~1'(= r ) %2062~0'(= r ) 
; ∎ 0(<2)◂1(<3)◂{ 8'(= a22◂ [ a9◂ [ ]{| l |}] ) 9'(= a22◂ [ a9◂ [ ]{| l |}] ) }
; .dlt.ptn 1'(= r )
; .dlt.ptn 0'(= r )
; .mov_ptn2 0(<2)◂1(<3)◂{ 8'(= a22◂ [ a9◂ [ ]{| l |}] ) 9'(= a22◂ [ a9◂ [ ]{| l |}] ) } ⊢ 2'(= a3◂ [ a21◂ [ a9◂ [ ]{| l |}]] )
; .mov_ptn 0(<2)◂1(<3)◂{ 8'(= a22◂ [ a9◂ [ ]{| l |}] ) 9'(= a22◂ [ a9◂ [ ]{| l |}] ) } ⊢ 2'(= a3◂ [ a21◂ [ a9◂ [ ]{| l |}]] )
	mov rax,[SS_RCD_2_TOP]
	mov rsi,[rax] 
	mov QWORD [SS_RCD_2_TOP],rsi
	mov QWORD [rax],0
	mov r13,rax
	mov rax,QWORD [rsp-8+8*2]
	mov QWORD [r13+8+8*0],rax
	mov rax,QWORD [rsp-8+8*1]
	mov QWORD [r13+8+8*1],rax
	mov rax,r13
	mov BYTE [rax+6],1
	mov rdi,rax
	mov rax,r15
	mov r15,QWORD [r15] 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,16
	jmp LB_3193
LB_3193:
	cmp BYTE [r8+6],0
	jnz LB_3169
	pop r14
	pop r9
	add rsp,8
	pop r13
	ret
LB_3169:
	pop rdi
	pop r9 
	pop r14
	pop r13
	ret
ETR_240:
	mov r9,0x0000_ffff_ffff_ffff
	and r9,[r13]
	call GRM_240
	ret
GRM_240:
	sub rsp,32
	mov QWORD [rsp+24],r13
	mov QWORD [rsp+16],r14 
	mov QWORD [rsp+8],r9
	jmp LB_3197
LB_3196:
	add r14,1 
LB_3197:
	cmp r14,r9
	jge LB_3198
	JZ_LINE_SPC BYTE [r13+8+r14], LB_3196
LB_3198
	lea rax,[r14+1]
	cmp rax,r9
	jg LB_3201
	jmp LB_3202
LB_3201:
	mov r8,unt_1
	jmp LB_3199
LB_3202:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],59
	jnz LB_3203
	jmp LB_3204
LB_3203:
	mov r8,unt_1
	jmp LB_3199
LB_3204:
	add r14,1
	jmp LB_3200
LB_3199:
	add rsp,0
	jmp LB_3195
LB_3200:
	jmp LB_3206
LB_3205:
	add r14,1 
LB_3206:
	cmp r14,r9
	jge LB_3207
	JZ_LINE_SPC BYTE [r13+8+r14], LB_3205
LB_3207
	call GRM_239
	cmp BYTE [r8+6],0
	jnz LB_3210
	jmp LB_3211
LB_3210:
	jmp LB_3208
LB_3211:
	sub rsp,8
	mov r8,[r8+8]
; .mov_ptn2 2'(= a21◂ [ a9◂ [ ]{| l |}] ) ⊢ 8'(= a21◂ [ a9◂ [ ]{| l |}] )
; .mov_ptn 2'(= a21◂ [ a9◂ [ ]{| l |}] ) ⊢ 8'(= a21◂ [ a9◂ [ ]{| l |}] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_3209
LB_3208:
	add rsp,0
	pop rdi
	pop r9 
	pop r14
	pop r13
	ret
LB_3209:
	jmp LB_3213
LB_3212:
	add r14,1 
LB_3213:
	cmp r14,r9
	jge LB_3214
	JZ_LINE_SPC BYTE [r13+8+r14], LB_3212
LB_3214
	call GRM_240
	cmp BYTE [r8+6],0
	jnz LB_3217
	jmp LB_3218
LB_3217:
	jmp LB_3215
LB_3218:
	sub rsp,8
	mov r8,[r8+8]
; .mov_ptn2 2'(= a2◂ [ a21◂ [ a9◂ [ ]{| l |}]] ) ⊢ 9'(= a2◂ [ a21◂ [ a9◂ [ ]{| l |}]] )
; .mov_ptn 2'(= a2◂ [ a21◂ [ a9◂ [ ]{| l |}]] ) ⊢ 9'(= a2◂ [ a21◂ [ a9◂ [ ]{| l |}]] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_3216
LB_3215:
	add rsp,8
	pop rdi
	pop r9 
	pop r14
	pop r13
	ret
LB_3216:
	mov QWORD [rsp+8*2],r14
	mov r13,QWORD [rsp+16+8*2]
	mov r14,QWORD [rsp+8*2]
	jmp LB_3220
LB_3220
;; rsp=2 , %2069~1'(= r ) %2068~0'(= r ) %2067~9'(= a2◂ [ a21◂ [ a9◂ [ ]{| l |}]] ) %2066~8'(= a21◂ [ a9◂ [ ]{| l |}] ) 
; #21 { 8'(= a21◂ [ a9◂ [ ]{| l |}] ) 9'(= a2◂ [ a21◂ [ a9◂ [ ]{| l |}]] ) } ⊢ 0(<2)◂{ 8'(= a21◂ [ a9◂ [ ]{| l |}] ) 9'(= a2◂ [ a21◂ [ a9◂ [ ]{| l |}]] ) }
;; rsp=2 , %2070~0(<2)◂{ 8'(= a21◂ [ a9◂ [ ]{| l |}] ) 9'(= a2◂ [ a21◂ [ a9◂ [ ]{| l |}]] ) } %2069~1'(= r ) %2068~0'(= r ) 
; #22 0(<2)◂{ 8'(= a21◂ [ a9◂ [ ]{| l |}] ) 9'(= a2◂ [ a21◂ [ a9◂ [ ]{| l |}]] ) } ⊢ 0(<2)◂0(<2)◂{ 8'(= a21◂ [ a9◂ [ ]{| l |}] ) 9'(= a2◂ [ a21◂ [ a9◂ [ ]{| l |}]] ) }
;; rsp=2 , %2071~0(<2)◂0(<2)◂{ 8'(= a21◂ [ a9◂ [ ]{| l |}] ) 9'(= a2◂ [ a21◂ [ a9◂ [ ]{| l |}]] ) } %2069~1'(= r ) %2068~0'(= r ) 
; ∎ 0(<2)◂0(<2)◂{ 8'(= a21◂ [ a9◂ [ ]{| l |}] ) 9'(= a2◂ [ a21◂ [ a9◂ [ ]{| l |}]] ) }
; .dlt.ptn 1'(= r )
; .dlt.ptn 0'(= r )
; .mov_ptn2 0(<2)◂0(<2)◂{ 8'(= a21◂ [ a9◂ [ ]{| l |}] ) 9'(= a2◂ [ a21◂ [ a9◂ [ ]{| l |}]] ) } ⊢ 2'(= a3◂ [ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]] )
; .mov_ptn 0(<2)◂0(<2)◂{ 8'(= a21◂ [ a9◂ [ ]{| l |}] ) 9'(= a2◂ [ a21◂ [ a9◂ [ ]{| l |}]] ) } ⊢ 2'(= a3◂ [ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]] )
	mov rax,[SS_RCD_2_TOP]
	mov rsi,[rax] 
	mov QWORD [SS_RCD_2_TOP],rsi
	mov QWORD [rax],0
	mov r13,rax
	mov rax,QWORD [rsp-8+8*2]
	mov QWORD [r13+8+8*0],rax
	mov rax,QWORD [rsp-8+8*1]
	mov QWORD [r13+8+8*1],rax
	mov rax,r13
	mov BYTE [rax+6],0
	mov rdi,rax
	mov rax,r15
	mov r15,QWORD [r15] 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,16
	jmp LB_3219
LB_3219:
	cmp BYTE [r8+6],0
	jnz LB_3195
	pop r14
	pop r9
	add rsp,8
	pop r13
	ret
LB_3195:
	mov r9,QWORD [rsp+8]
	mov r14,QWORD [rsp+16]
	mov r13,QWORD [rsp+24]
	jmp LB_3223
LB_3222:
	add r14,1 
LB_3223:
	cmp r14,r9
	jge LB_3224
	JZ_LINE_SPC BYTE [r13+8+r14], LB_3222
LB_3224
	lea rax,[r14+1]
	cmp rax,r9
	jg LB_3227
	jmp LB_3228
LB_3227:
	mov r8,unt_1
	jmp LB_3225
LB_3228:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],46
	jnz LB_3229
	jmp LB_3230
LB_3229:
	mov r8,unt_1
	jmp LB_3225
LB_3230:
	add r14,1
	jmp LB_3226
LB_3225:
	add rsp,0
	jmp LB_3221
LB_3226:
	jmp LB_3232
LB_3231:
	add r14,1 
LB_3232:
	cmp r14,r9
	jge LB_3233
	JZ_LINE_SPC BYTE [r13+8+r14], LB_3231
LB_3233
	lea rax,[r14+1]
	cmp rax,r9
	jg LB_3236
	jmp LB_3237
LB_3236:
	mov r8,unt_1
	jmp LB_3234
LB_3237:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],10
	jnz LB_3238
	jmp LB_3239
LB_3238:
	mov r8,unt_1
	jmp LB_3234
LB_3239:
	add r14,1
	jmp LB_3235
LB_3234:
	add rsp,0
	jmp LB_3221
LB_3235:
	mov QWORD [rsp+8*0],r14
	mov r13,QWORD [rsp+16+8*0]
	mov r14,QWORD [rsp+8*0]
	jmp LB_3241
LB_3241
;; rsp=0 , %2073~1'(= r ) %2072~0'(= r ) 
; #20 { } ⊢ 1(<2)◂{ }
;; rsp=0 , %2074~1(<2)◂{ } %2073~1'(= r ) %2072~0'(= r ) 
; #22 1(<2)◂{ } ⊢ 0(<2)◂1(<2)◂{ }
;; rsp=0 , %2075~0(<2)◂1(<2)◂{ } %2073~1'(= r ) %2072~0'(= r ) 
; ∎ 0(<2)◂1(<2)◂{ }
; .dlt.ptn 1'(= r )
; .dlt.ptn 0'(= r )
; .mov_ptn2 0(<2)◂1(<2)◂{ } ⊢ 2'(= a3◂ [ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]] )
; .mov_ptn 0(<2)◂1(<2)◂{ } ⊢ 2'(= a3◂ [ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]] )
	mov rax,unt 
	mov rax,unt_1
	mov rdi,rax
	mov rax,r15
	mov r15,QWORD [r15] 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	jmp LB_3240
LB_3240:
	cmp BYTE [r8+6],0
	jnz LB_3221
	pop r14
	pop r9
	add rsp,8
	pop r13
	ret
LB_3221:
	pop rdi
	pop r9 
	pop r14
	pop r13
	ret
ETR_241:
	mov r9,0x0000_ffff_ffff_ffff
	and r9,[r13]
	call GRM_241
	ret
GRM_241:
	sub rsp,32
	mov QWORD [rsp+24],r13
	mov QWORD [rsp+16],r14 
	mov QWORD [rsp+8],r9
	jmp LB_3244
LB_3243:
	add r14,1 
LB_3244:
	cmp r14,r9
	jge LB_3245
	JZ_LINE_SPC BYTE [r13+8+r14], LB_3243
LB_3245
	lea rax,[r14+1]
	cmp rax,r9
	jg LB_3248
	jmp LB_3249
LB_3248:
	mov r8,unt_1
	jmp LB_3246
LB_3249:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],59
	jnz LB_3250
	jmp LB_3251
LB_3250:
	mov r8,unt_1
	jmp LB_3246
LB_3251:
	add r14,1
	jmp LB_3247
LB_3246:
	add rsp,0
	jmp LB_3242
LB_3247:
	jmp LB_3253
LB_3252:
	add r14,1 
LB_3253:
	cmp r14,r9
	jge LB_3254
	JZ_LINE_SPC BYTE [r13+8+r14], LB_3252
LB_3254
	call GRM_239
	cmp BYTE [r8+6],0
	jnz LB_3257
	jmp LB_3258
LB_3257:
	jmp LB_3255
LB_3258:
	sub rsp,8
	mov r8,[r8+8]
; .mov_ptn2 2'(= a21◂ [ a9◂ [ ]{| l |}] ) ⊢ 8'(= a21◂ [ a9◂ [ ]{| l |}] )
; .mov_ptn 2'(= a21◂ [ a9◂ [ ]{| l |}] ) ⊢ 8'(= a21◂ [ a9◂ [ ]{| l |}] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_3256
LB_3255:
	add rsp,0
	pop rdi
	pop r9 
	pop r14
	pop r13
	ret
LB_3256:
	jmp LB_3260
LB_3259:
	add r14,1 
LB_3260:
	cmp r14,r9
	jge LB_3261
	JZ_LINE_SPC BYTE [r13+8+r14], LB_3259
LB_3261
	call GRM_240
	cmp BYTE [r8+6],0
	jnz LB_3264
	jmp LB_3265
LB_3264:
	jmp LB_3262
LB_3265:
	sub rsp,8
	mov r8,[r8+8]
; .mov_ptn2 2'(= a2◂ [ a21◂ [ a9◂ [ ]{| l |}]] ) ⊢ 9'(= a2◂ [ a21◂ [ a9◂ [ ]{| l |}]] )
; .mov_ptn 2'(= a2◂ [ a21◂ [ a9◂ [ ]{| l |}]] ) ⊢ 9'(= a2◂ [ a21◂ [ a9◂ [ ]{| l |}]] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_3263
LB_3262:
	add rsp,8
	pop rdi
	pop r9 
	pop r14
	pop r13
	ret
LB_3263:
	mov QWORD [rsp+8*2],r14
	mov r13,QWORD [rsp+16+8*2]
	mov r14,QWORD [rsp+8*2]
	jmp LB_3267
LB_3267
;; rsp=2 , %2079~1'(= r ) %2078~0'(= r ) %2077~9'(= a2◂ [ a21◂ [ a9◂ [ ]{| l |}]] ) %2076~8'(= a21◂ [ a9◂ [ ]{| l |}] ) 
; #21 { 8'(= a21◂ [ a9◂ [ ]{| l |}] ) 9'(= a2◂ [ a21◂ [ a9◂ [ ]{| l |}]] ) } ⊢ 0(<2)◂{ 8'(= a21◂ [ a9◂ [ ]{| l |}] ) 9'(= a2◂ [ a21◂ [ a9◂ [ ]{| l |}]] ) }
;; rsp=2 , %2080~0(<2)◂{ 8'(= a21◂ [ a9◂ [ ]{| l |}] ) 9'(= a2◂ [ a21◂ [ a9◂ [ ]{| l |}]] ) } %2079~1'(= r ) %2078~0'(= r ) 
; #193 0(<2)◂{ 8'(= a21◂ [ a9◂ [ ]{| l |}] ) 9'(= a2◂ [ a21◂ [ a9◂ [ ]{| l |}]] ) } ⊢ 0(<2)◂0(<2)◂{ 8'(= a21◂ [ a9◂ [ ]{| l |}] ) 9'(= a2◂ [ a21◂ [ a9◂ [ ]{| l |}]] ) }
;; rsp=2 , %2081~0(<2)◂0(<2)◂{ 8'(= a21◂ [ a9◂ [ ]{| l |}] ) 9'(= a2◂ [ a21◂ [ a9◂ [ ]{| l |}]] ) } %2079~1'(= r ) %2078~0'(= r ) 
; #22 0(<2)◂0(<2)◂{ 8'(= a21◂ [ a9◂ [ ]{| l |}] ) 9'(= a2◂ [ a21◂ [ a9◂ [ ]{| l |}]] ) } ⊢ 0(<2)◂0(<2)◂0(<2)◂{ 8'(= a21◂ [ a9◂ [ ]{| l |}] ) 9'(= a2◂ [ a21◂ [ a9◂ [ ]{| l |}]] ) }
;; rsp=2 , %2082~0(<2)◂0(<2)◂0(<2)◂{ 8'(= a21◂ [ a9◂ [ ]{| l |}] ) 9'(= a2◂ [ a21◂ [ a9◂ [ ]{| l |}]] ) } %2079~1'(= r ) %2078~0'(= r ) 
; ∎ 0(<2)◂0(<2)◂0(<2)◂{ 8'(= a21◂ [ a9◂ [ ]{| l |}] ) 9'(= a2◂ [ a21◂ [ a9◂ [ ]{| l |}]] ) }
; .dlt.ptn 1'(= r )
; .dlt.ptn 0'(= r )
; .mov_ptn2 0(<2)◂0(<2)◂0(<2)◂{ 8'(= a21◂ [ a9◂ [ ]{| l |}] ) 9'(= a2◂ [ a21◂ [ a9◂ [ ]{| l |}]] ) } ⊢ 2'(= a3◂ [ a35◂ [ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]]] )
; .mov_ptn 0(<2)◂0(<2)◂0(<2)◂{ 8'(= a21◂ [ a9◂ [ ]{| l |}] ) 9'(= a2◂ [ a21◂ [ a9◂ [ ]{| l |}]] ) } ⊢ 2'(= a3◂ [ a35◂ [ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]]] )
	mov rax,[SS_RCD_2_TOP]
	mov rsi,[rax] 
	mov QWORD [SS_RCD_2_TOP],rsi
	mov QWORD [rax],0
	mov r13,rax
	mov rax,QWORD [rsp-8+8*2]
	mov QWORD [r13+8+8*0],rax
	mov rax,QWORD [rsp-8+8*1]
	mov QWORD [r13+8+8*1],rax
	mov rax,r13
	mov BYTE [rax+6],0
	mov rdi,rax
	mov rax,r15
	mov r15,QWORD [r15] 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov rdi,rax
	mov rax,r15
	mov r15,QWORD [r15] 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,16
	jmp LB_3266
LB_3266:
	cmp BYTE [r8+6],0
	jnz LB_3242
	pop r14
	pop r9
	add rsp,8
	pop r13
	ret
LB_3242:
	mov r9,QWORD [rsp+8]
	mov r14,QWORD [rsp+16]
	mov r13,QWORD [rsp+24]
	jmp LB_3270
LB_3269:
	add r14,1 
LB_3270:
	cmp r14,r9
	jge LB_3271
	JZ_LINE_SPC BYTE [r13+8+r14], LB_3269
LB_3271
	lea rax,[r14+1]
	cmp rax,r9
	jg LB_3274
	jmp LB_3275
LB_3274:
	mov r8,unt_1
	jmp LB_3272
LB_3275:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],46
	jnz LB_3276
	jmp LB_3277
LB_3276:
	mov r8,unt_1
	jmp LB_3272
LB_3277:
	add r14,1
	jmp LB_3273
LB_3272:
	add rsp,0
	jmp LB_3268
LB_3273:
	jmp LB_3279
LB_3278:
	add r14,1 
LB_3279:
	cmp r14,r9
	jge LB_3280
	JZ_LINE_SPC BYTE [r13+8+r14], LB_3278
LB_3280
	lea rax,[r14+1]
	cmp rax,r9
	jg LB_3283
	jmp LB_3284
LB_3283:
	mov r8,unt_1
	jmp LB_3281
LB_3284:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],10
	jnz LB_3285
	jmp LB_3286
LB_3285:
	mov r8,unt_1
	jmp LB_3281
LB_3286:
	add r14,1
	jmp LB_3282
LB_3281:
	add rsp,0
	jmp LB_3268
LB_3282:
	mov QWORD [rsp+8*0],r14
	mov r13,QWORD [rsp+16+8*0]
	mov r14,QWORD [rsp+8*0]
	jmp LB_3288
LB_3288
;; rsp=0 , %2084~1'(= r ) %2083~0'(= r ) 
; #20 { } ⊢ 1(<2)◂{ }
;; rsp=0 , %2085~1(<2)◂{ } %2084~1'(= r ) %2083~0'(= r ) 
; #193 1(<2)◂{ } ⊢ 0(<2)◂1(<2)◂{ }
;; rsp=0 , %2086~0(<2)◂1(<2)◂{ } %2084~1'(= r ) %2083~0'(= r ) 
; #22 0(<2)◂1(<2)◂{ } ⊢ 0(<2)◂0(<2)◂1(<2)◂{ }
;; rsp=0 , %2087~0(<2)◂0(<2)◂1(<2)◂{ } %2084~1'(= r ) %2083~0'(= r ) 
; ∎ 0(<2)◂0(<2)◂1(<2)◂{ }
; .dlt.ptn 1'(= r )
; .dlt.ptn 0'(= r )
; .mov_ptn2 0(<2)◂0(<2)◂1(<2)◂{ } ⊢ 2'(= a3◂ [ a35◂ [ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]]] )
; .mov_ptn 0(<2)◂0(<2)◂1(<2)◂{ } ⊢ 2'(= a3◂ [ a35◂ [ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]]] )
	mov rax,unt 
	mov rax,unt_1
	mov rdi,rax
	mov rax,r15
	mov r15,QWORD [r15] 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov rdi,rax
	mov rax,r15
	mov r15,QWORD [r15] 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	jmp LB_3287
LB_3287:
	cmp BYTE [r8+6],0
	jnz LB_3268
	pop r14
	pop r9
	add rsp,8
	pop r13
	ret
LB_3268:
	mov r9,QWORD [rsp+8]
	mov r14,QWORD [rsp+16]
	mov r13,QWORD [rsp+24]
	jmp LB_3291
LB_3290:
	add r14,1 
LB_3291:
	cmp r14,r9
	jge LB_3292
	JZ_LINE_SPC BYTE [r13+8+r14], LB_3290
LB_3292
	call GRM_220
	cmp BYTE [r8+6],0
	jnz LB_3295
	jmp LB_3296
LB_3295:
	jmp LB_3293
LB_3296:
	sub rsp,16
; .mov_ptn2 2'(= *{ rr} ) ⊢ { 8'(= r ) 9'(= r ) }
; .mov_ptn 2'(= *{ rr} ) ⊢ { 8'(= r ) 9'(= r ) }
	mov rdi,r8
	mov rdi,QWORD [rdi+8+8*0]
	mov r10,rdi
	mov QWORD [rsp-8+8*2],r10
	mov rdi,r8
	mov rdi,QWORD [rdi+8+8*1]
	mov r11,rdi
	mov QWORD [rsp-8+8*1],r11
	jmp LB_3294
LB_3293:
	add rsp,0
	jmp LB_3289
LB_3294:
	mov QWORD [rsp+8*2],r14
	mov r13,QWORD [rsp+16+8*2]
	mov r14,QWORD [rsp+8*2]
	jmp LB_3298
LB_3298
;; rsp=2 , %2090~1'(= r ) %2089~0'(= r ) %2088~{ 8'(= r ) 9'(= r ) } 
	jmp LB_3299
LB_3299:
; $ %[ "mtc_line_tl 0" ] ⊢ %[ "mtc_line_tl 0" ]
;; rsp=2 , %2091~%[ "mtc_line_tl 0" ] %2090~1'(= r ) %2089~0'(= r ) %2088~{ 8'(= r ) 9'(= r ) } 
; #20 { } ⊢ 1(<2)◂{ }
;; rsp=2 , %2092~1(<2)◂{ } %2091~%[ "mtc_line_tl 0" ] %2090~1'(= r ) %2089~0'(= r ) %2088~{ 8'(= r ) 9'(= r ) } 
; #21 { { 0'(= r ) 1'(= r ) %[ "mtc_line_tl 0" ] } 1(<2)◂{ } } ⊢ 0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "mtc_line_tl 0" ] } 1(<2)◂{ } }
;; rsp=2 , %2093~0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "mtc_line_tl 0" ] } 1(<2)◂{ } } %2088~{ 8'(= r ) 9'(= r ) } 
; #192 0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "mtc_line_tl 0" ] } 1(<2)◂{ } } ⊢ 1(<2)◂0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "mtc_line_tl 0" ] } 1(<2)◂{ } }
;; rsp=2 , %2094~1(<2)◂0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "mtc_line_tl 0" ] } 1(<2)◂{ } } %2088~{ 8'(= r ) 9'(= r ) } 
; #22 1(<2)◂0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "mtc_line_tl 0" ] } 1(<2)◂{ } } ⊢ 0(<2)◂1(<2)◂0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "mtc_line_tl 0" ] } 1(<2)◂{ } }
;; rsp=2 , %2095~0(<2)◂1(<2)◂0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "mtc_line_tl 0" ] } 1(<2)◂{ } } %2088~{ 8'(= r ) 9'(= r ) } 
; ∎ 0(<2)◂1(<2)◂0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "mtc_line_tl 0" ] } 1(<2)◂{ } }
; .dlt.ptn { 8'(= r ) 9'(= r ) }
; .mov_ptn2 0(<2)◂1(<2)◂0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "mtc_line_tl 0" ] } 1(<2)◂{ } } ⊢ 2'(= a3◂ [ a35◂ [ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]]] )
; .mov_ptn 0(<2)◂1(<2)◂0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "mtc_line_tl 0" ] } 1(<2)◂{ } } ⊢ 2'(= a3◂ [ a35◂ [ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]]] )
	mov rax,[SS_RCD_2_TOP]
	mov rsi,[rax] 
	mov QWORD [SS_RCD_2_TOP],rsi
	mov QWORD [rax],0
	mov r9,rax
	mov rax,[SS_RCD_3_TOP]
	mov rsi,[rax] 
	mov QWORD [SS_RCD_3_TOP],rsi
	mov QWORD [rax],0
	mov r10,rax
	mov rax,r13
	mov QWORD [r10+8+8*0],rax
	mov rax,r14
	mov QWORD [r10+8+8*1],rax
	mov rsi,1  
	mov rdi,24
	xor rax,rax 
	C_CALL_SF calloc
	mov QWORD [rax],13
	mov BYTE [rax+8+0],109
	mov BYTE [rax+8+1],116
	mov BYTE [rax+8+2],99
	mov BYTE [rax+8+3],95
	mov BYTE [rax+8+4],108
	mov BYTE [rax+8+5],105
	mov BYTE [rax+8+6],110
	mov BYTE [rax+8+7],101
	mov BYTE [rax+8+8],95
	mov BYTE [rax+8+9],116
	mov BYTE [rax+8+10],108
	mov BYTE [rax+8+11],32
	mov BYTE [rax+8+12],48
	mov QWORD [r10+8+8*2],rax
	mov rax,r10
	mov QWORD [r9+8+8*0],rax
	mov rax,unt 
	mov rax,unt_1
	mov QWORD [r9+8+8*1],rax
	mov rax,r9
	mov BYTE [rax+6],0
	mov rdi,rax
	mov rax,r15
	mov r15,QWORD [r15] 
	mov QWORD [rax],0
	mov BYTE [rax+6],1
	mov QWORD [rax+8],rdi
	mov rdi,rax
	mov rax,r15
	mov r15,QWORD [r15] 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,16
	jmp LB_3297
LB_3297:
	cmp BYTE [r8+6],0
	jnz LB_3289
	pop r14
	pop r9
	add rsp,8
	pop r13
	ret
LB_3289:
	pop rdi
	pop r9 
	pop r14
	pop r13
	ret
ETR_242:
	mov r9,0x0000_ffff_ffff_ffff
	and r9,[r13]
	call GRM_242
	ret
GRM_242:
	sub rsp,32
	mov QWORD [rsp+24],r13
	mov QWORD [rsp+16],r14 
	mov QWORD [rsp+8],r9
	call GRM_74
	cmp BYTE [r8+6],0
	jnz LB_3303
	jmp LB_3304
LB_3303:
	jmp LB_3301
LB_3304:
	sub rsp,8
; .mov_ptn2 2'(= {| l |} ) ⊢ 8'(= {| l |} )
; .mov_ptn 2'(= {| l |} ) ⊢ 8'(= {| l |} )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_3302
LB_3301:
	add rsp,0
	jmp LB_3300
LB_3302:
	lea rax,[r14+1]
	cmp rax,r9
	jg LB_3307
	jmp LB_3308
LB_3307:
	mov r8,unt_1
	jmp LB_3305
LB_3308:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],39
	jnz LB_3309
	jmp LB_3310
LB_3309:
	mov r8,unt_1
	jmp LB_3305
LB_3310:
	add r14,1
	jmp LB_3306
LB_3305:
	add rsp,8
	jmp LB_3300
LB_3306:
	mov QWORD [rsp+8*1],r14
	mov r13,QWORD [rsp+16+8*1]
	mov r14,QWORD [rsp+8*1]
	jmp LB_3312
LB_3312
;; rsp=1 , %2098~1'(= r ) %2097~0'(= r ) %2096~8'(= {| l |} ) 
; #111 8'(= {| l |} ) ⊢ 1(<2)◂8'(= {| l |} )
;; rsp=1 , %2099~1(<2)◂8'(= {| l |} ) %2098~1'(= r ) %2097~0'(= r ) 
; #22 1(<2)◂8'(= {| l |} ) ⊢ 0(<2)◂1(<2)◂8'(= {| l |} )
;; rsp=1 , %2100~0(<2)◂1(<2)◂8'(= {| l |} ) %2098~1'(= r ) %2097~0'(= r ) 
; ∎ 0(<2)◂1(<2)◂8'(= {| l |} )
; .dlt.ptn 1'(= r )
; .dlt.ptn 0'(= r )
; .mov_ptn2 0(<2)◂1(<2)◂8'(= {| l |} ) ⊢ 2'(= a3◂ [ a22◂ [ a9◂ [ ]{| l |}]] )
; .mov_ptn 0(<2)◂1(<2)◂8'(= {| l |} ) ⊢ 2'(= a3◂ [ a22◂ [ a9◂ [ ]{| l |}]] )
	mov rax,QWORD [rsp-8+8*1]
	mov BYTE [rax+6],1
	mov rdi,rax
	mov rax,r15
	mov r15,QWORD [r15] 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,8
	jmp LB_3311
LB_3311:
	cmp BYTE [r8+6],0
	jnz LB_3300
	pop r14
	pop r9
	add rsp,8
	pop r13
	ret
LB_3300:
	mov r9,QWORD [rsp+8]
	mov r14,QWORD [rsp+16]
	mov r13,QWORD [rsp+24]
	call GRM_190
	cmp BYTE [r8+6],0
	jnz LB_3316
	jmp LB_3317
LB_3316:
	jmp LB_3314
LB_3317:
	sub rsp,8
	mov r8,[r8+8]
; .mov_ptn2 2'(= a11◂ [ a9◂ [ ]] ) ⊢ 8'(= a11◂ [ a9◂ [ ]] )
; .mov_ptn 2'(= a11◂ [ a9◂ [ ]] ) ⊢ 8'(= a11◂ [ a9◂ [ ]] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_3315
LB_3314:
	add rsp,0
	jmp LB_3313
LB_3315:
	mov QWORD [rsp+8*1],r14
	mov r13,QWORD [rsp+16+8*1]
	mov r14,QWORD [rsp+8*1]
	jmp LB_3319
LB_3319
;; rsp=1 , %2103~1'(= r ) %2102~0'(= r ) %2101~8'(= a11◂ [ a9◂ [ ]] ) 
; #112 8'(= a11◂ [ a9◂ [ ]] ) ⊢ 0(<2)◂8'(= a11◂ [ a9◂ [ ]] )
;; rsp=1 , %2104~0(<2)◂8'(= a11◂ [ a9◂ [ ]] ) %2103~1'(= r ) %2102~0'(= r ) 
; #22 0(<2)◂8'(= a11◂ [ a9◂ [ ]] ) ⊢ 0(<2)◂0(<2)◂8'(= a11◂ [ a9◂ [ ]] )
;; rsp=1 , %2105~0(<2)◂0(<2)◂8'(= a11◂ [ a9◂ [ ]] ) %2103~1'(= r ) %2102~0'(= r ) 
; ∎ 0(<2)◂0(<2)◂8'(= a11◂ [ a9◂ [ ]] )
; .dlt.ptn 1'(= r )
; .dlt.ptn 0'(= r )
; .mov_ptn2 0(<2)◂0(<2)◂8'(= a11◂ [ a9◂ [ ]] ) ⊢ 2'(= a3◂ [ a22◂ [ a9◂ [ ]{| l |}]] )
; .mov_ptn 0(<2)◂0(<2)◂8'(= a11◂ [ a9◂ [ ]] ) ⊢ 2'(= a3◂ [ a22◂ [ a9◂ [ ]{| l |}]] )
	mov rax,QWORD [rsp-8+8*1]
	mov rdi,rax
	mov rax,r15
	mov r15,QWORD [r15] 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov rdi,rax
	mov rax,r15
	mov r15,QWORD [r15] 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,8
	jmp LB_3318
LB_3318:
	cmp BYTE [r8+6],0
	jnz LB_3313
	pop r14
	pop r9
	add rsp,8
	pop r13
	ret
LB_3313:
	pop rdi
	pop r9 
	pop r14
	pop r13
	ret
ETR_243:
	mov r9,0x0000_ffff_ffff_ffff
	and r9,[r13]
	call GRM_243
	ret
GRM_243:
	sub rsp,32
	mov QWORD [rsp+24],r13
	mov QWORD [rsp+16],r14 
	mov QWORD [rsp+8],r9
	jmp LB_3322
LB_3321:
	add r14,1 
LB_3322:
	cmp r14,r9
	jge LB_3323
	JZ_SPC BYTE [r13+8+r14], LB_3321
LB_3323
	call GRM_217
	cmp BYTE [r8+6],0
	jnz LB_3326
	jmp LB_3327
LB_3326:
	jmp LB_3324
LB_3327:
	sub rsp,8
	mov r8,[r8+8]
; .mov_ptn2 2'(= a35◂ [ *{ }] ) ⊢ 8'(= a35◂ [ *{ }] )
; .mov_ptn 2'(= a35◂ [ *{ }] ) ⊢ 8'(= a35◂ [ *{ }] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_3325
LB_3324:
	add rsp,0
	jmp LB_3320
LB_3325:
	jmp LB_3329
LB_3328:
	add r14,1 
LB_3329:
	cmp r14,r9
	jge LB_3330
	JZ_SPC BYTE [r13+8+r14], LB_3328
LB_3330
	call GRM_244
	cmp BYTE [r8+6],0
	jnz LB_3333
	jmp LB_3334
LB_3333:
	jmp LB_3331
LB_3334:
	sub rsp,8
	mov r8,[r8+8]
; .mov_ptn2 2'(= a35◂ [ a31◂ [ ]] ) ⊢ 9'(= a35◂ [ a31◂ [ ]] )
; .mov_ptn 2'(= a35◂ [ a31◂ [ ]] ) ⊢ 9'(= a35◂ [ a31◂ [ ]] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_3332
LB_3331:
	add rsp,8
	jmp LB_3320
LB_3332:
	jmp LB_3336
LB_3335:
	add r14,1 
LB_3336:
	cmp r14,r9
	jge LB_3337
	JZ_SPC BYTE [r13+8+r14], LB_3335
LB_3337
	call GRM_243
	cmp BYTE [r8+6],0
	jnz LB_3340
	jmp LB_3341
LB_3340:
	jmp LB_3338
LB_3341:
	sub rsp,8
	mov r8,[r8+8]
; .mov_ptn2 2'(= a35◂ [ a2◂ [ a31◂ [ ]]] ) ⊢ 10'(= a35◂ [ a2◂ [ a31◂ [ ]]] )
; .mov_ptn 2'(= a35◂ [ a2◂ [ a31◂ [ ]]] ) ⊢ 10'(= a35◂ [ a2◂ [ a31◂ [ ]]] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_3339
LB_3338:
	add rsp,16
	jmp LB_3320
LB_3339:
	mov QWORD [rsp+8*3],r14
	mov r13,QWORD [rsp+16+8*3]
	mov r14,QWORD [rsp+8*3]
	jmp LB_3343
LB_3344: ; 194 { 0'(= a35◂ [ a31◂ [ ]] ) 1'(= a35◂ [ a2◂ [ a31◂ [ ]]] ) } ⊢ 0'(= a35◂ [ *{ a31◂ [ ]a2◂ [ a31◂ [ ]]}] ) : ({ _t35◂_t31 _t35◂_lst◂_t31 }→_t35◂{ _t31 _lst◂_t31 })
;; rsp=0 , %1131~1'(= a35◂ [ a2◂ [ a31◂ [ ]]] ) %1130~0'(= a35◂ [ a31◂ [ ]] ) 
;; ? 0'(= a35◂ [ a31◂ [ ]] ) ⊢ 0(<2)◂2'(= a31◂ [ ] )
	mov rdi,r13
	cmp BYTE [rdi+6],0
	jnz LB_3345
	mov rax,QWORD [rdi+8]
	mov r8,rax
;; rsp=0 , %1133~2'(= a31◂ [ ] ) %1131~1'(= a35◂ [ a2◂ [ a31◂ [ ]]] ) 
;; ? 1'(= a35◂ [ a2◂ [ a31◂ [ ]]] ) ⊢ 0(<2)◂0'(= a2◂ [ a31◂ [ ]] )
	mov rdi,r14
	cmp BYTE [rdi+6],0
	jnz LB_3346
	mov rax,QWORD [rdi+8]
	mov r13,rax
;; rsp=0 , %1135~0'(= a2◂ [ a31◂ [ ]] ) %1133~2'(= a31◂ [ ] ) 
; #193 { 2'(= a31◂ [ ] ) 0'(= a2◂ [ a31◂ [ ]] ) } ⊢ 0(<2)◂{ 2'(= a31◂ [ ] ) 0'(= a2◂ [ a31◂ [ ]] ) }
;; rsp=0 , %1136~0(<2)◂{ 2'(= a31◂ [ ] ) 0'(= a2◂ [ a31◂ [ ]] ) } 
; ∎ 0(<2)◂{ 2'(= a31◂ [ ] ) 0'(= a2◂ [ a31◂ [ ]] ) }
; .mov_ptn2 0(<2)◂{ 2'(= a31◂ [ ] ) 0'(= a2◂ [ a31◂ [ ]] ) } ⊢ 0'(= a35◂ [ *{ a31◂ [ ]a2◂ [ a31◂ [ ]]}] )
	mov r14,r13
; .mov_ptn 0(<2)◂{ 2'(= a31◂ [ ] ) 1'(= a2◂ [ a31◂ [ ]] ) } ⊢ 0'(= a35◂ [ *{ a31◂ [ ]a2◂ [ a31◂ [ ]]}] )
	mov rax,[SS_RCD_2_TOP]
	mov rsi,[rax] 
	mov QWORD [SS_RCD_2_TOP],rsi
	mov QWORD [rax],0
	mov r9,rax
	mov rax,r8
	mov QWORD [r9+8+8*0],rax
	mov rax,r14
	mov QWORD [r9+8+8*1],rax
	mov rax,r9
	mov BYTE [rax+6],0
	mov r13,rax
	ret
LB_3346:
;; ?. 1'(= a35◂ [ a2◂ [ a31◂ [ ]]] ) ⊢ 1(<2)◂0'(= a2◂ [ *{ rr{| l |}}] )
	mov rax,QWORD [rdi+8]
	mov r13,rax
;; rsp=0 , %1134~0'(= a2◂ [ *{ rr{| l |}}] ) %1133~2'(= a31◂ [ ] ) 
; #192 0'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 1(<2)◂0'(= a2◂ [ *{ rr{| l |}}] )
;; rsp=0 , %1137~1(<2)◂0'(= a2◂ [ *{ rr{| l |}}] ) %1133~2'(= a31◂ [ ] ) 
; ∎ 1(<2)◂0'(= a2◂ [ *{ rr{| l |}}] )
; .dlt.ptn 2'(= a31◂ [ ] )
;	.dlt adt ⊢ _  
; .mov_ptn2 1(<2)◂0'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 0'(= a35◂ [ *{ a31◂ [ ]a2◂ [ a31◂ [ ]]}] )
	mov r14,r13
; .mov_ptn 1(<2)◂1'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 0'(= a35◂ [ *{ a31◂ [ ]a2◂ [ a31◂ [ ]]}] )
	mov rax,r14
	mov rdi,rax
	mov rax,r15
	mov r15,QWORD [r15] 
	mov QWORD [rax],0
	mov BYTE [rax+6],1
	mov QWORD [rax+8],rdi
	mov r13,rax
	ret
LB_3345:
;; ?. 0'(= a35◂ [ a31◂ [ ]] ) ⊢ 1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] )
	mov rax,QWORD [rdi+8]
	mov r8,rax
;; rsp=0 , %1132~2'(= a2◂ [ *{ rr{| l |}}] ) %1131~1'(= a35◂ [ a2◂ [ a31◂ [ ]]] ) 
;; ? 1'(= a35◂ [ a2◂ [ a31◂ [ ]]] ) ⊢ 0(<2)◂0'(= a2◂ [ a31◂ [ ]] )
	mov rdi,r14
	cmp BYTE [rdi+6],0
	jnz LB_3347
	mov rax,QWORD [rdi+8]
	mov r13,rax
;; rsp=0 , %1139~0'(= a2◂ [ a31◂ [ ]] ) %1132~2'(= a2◂ [ *{ rr{| l |}}] ) 
; #192 2'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] )
;; rsp=0 , %1140~1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] ) %1139~0'(= a2◂ [ a31◂ [ ]] ) 
; ∎ 1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] )
; .dlt.ptn 0'(= a2◂ [ a31◂ [ ]] )
;	.dlt adt ⊢ _  
; .mov_ptn2 1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 0'(= a35◂ [ *{ a31◂ [ ]a2◂ [ a31◂ [ ]]}] )
; .mov_ptn 1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 0'(= a35◂ [ *{ a31◂ [ ]a2◂ [ a31◂ [ ]]}] )
	mov rax,r8
	mov rdi,rax
	mov rax,r15
	mov r15,QWORD [r15] 
	mov QWORD [rax],0
	mov BYTE [rax+6],1
	mov QWORD [rax+8],rdi
	mov r13,rax
	ret
LB_3347:
;; ?. 1'(= a35◂ [ a2◂ [ a31◂ [ ]]] ) ⊢ 1(<2)◂0'(= a2◂ [ *{ rr{| l |}}] )
	mov rax,QWORD [rdi+8]
	mov r13,rax
;; rsp=0 , %1138~0'(= a2◂ [ *{ rr{| l |}}] ) %1132~2'(= a2◂ [ *{ rr{| l |}}] ) 
; rsp_d=0, #53 { 2'(= a2◂ [ *{ rr{| l |}}] ) 0'(= a2◂ [ *{ rr{| l |}}] ) } ⊢ 0'(= a2◂ [ *{ rr{| l |}}] )
; .mov_ptn2 { 2'(= a2◂ [ *{ rr{| l |}}] ) 0'(= a2◂ [ *{ rr{| l |}}] ) } ⊢ { 0'(= a2◂ [ *{ rr{| l |}}] ) 1'(= a2◂ [ *{ rr{| l |}}] ) }
; .mov_ptn 0'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 1'(= a2◂ [ *{ rr{| l |}}] )
	mov rax,r13
	mov r14,rax
; .mov_ptn 2'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 0'(= a2◂ [ *{ rr{| l |}}] )
	mov rax,r8
	mov r13,rax
	call LB_1604

;; rsp=0 , %1141~0'(= a2◂ [ *{ rr{| l |}}] ) 
; #192 0'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 1(<2)◂0'(= a2◂ [ *{ rr{| l |}}] )
;; rsp=0 , %1142~1(<2)◂0'(= a2◂ [ *{ rr{| l |}}] ) 
; ∎ 1(<2)◂0'(= a2◂ [ *{ rr{| l |}}] )
; .mov_ptn2 1(<2)◂0'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 0'(= a35◂ [ *{ a31◂ [ ]a2◂ [ a31◂ [ ]]}] )
	mov r14,r13
; .mov_ptn 1(<2)◂1'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 0'(= a35◂ [ *{ a31◂ [ ]a2◂ [ a31◂ [ ]]}] )
	mov rax,r14
	mov rdi,rax
	mov rax,r15
	mov r15,QWORD [r15] 
	mov QWORD [rax],0
	mov BYTE [rax+6],1
	mov QWORD [rax+8],rdi
	mov r13,rax
	ret
LB_3343
;; rsp=3 , %2110~1'(= r ) %2109~0'(= r ) %2108~10'(= a35◂ [ a2◂ [ a31◂ [ ]]] ) %2107~9'(= a35◂ [ a31◂ [ ]] ) %2106~8'(= a35◂ [ *{ }] ) 
; rsp_d=0, #194 { 9'(= a35◂ [ a31◂ [ ]] ) 10'(= a35◂ [ a2◂ [ a31◂ [ ]]] ) } ⊢ 2'(= a35◂ [ *{ a31◂ [ ]a2◂ [ a31◂ [ ]]}] )
	sub rsp,16
	mov QWORD [rsp+8*0],r13
	mov QWORD [rsp+8*1],r14
; .mov_ptn2 { 9'(= a35◂ [ a31◂ [ ]] ) 10'(= a35◂ [ a2◂ [ a31◂ [ ]]] ) } ⊢ { 0'(= a35◂ [ a31◂ [ ]] ) 1'(= a35◂ [ a2◂ [ a31◂ [ ]]] ) }
; .mov_ptn 10'(= a35◂ [ a2◂ [ a31◂ [ ]]] ) ⊢ 1'(= a35◂ [ a2◂ [ a31◂ [ ]]] )
	mov rax,QWORD [rsp-8+8*3]
	mov r14,rax
; .mov_ptn 9'(= a35◂ [ a31◂ [ ]] ) ⊢ 0'(= a35◂ [ a31◂ [ ]] )
	mov rax,QWORD [rsp-8+8*4]
	mov r13,rax
	call LB_3344

	mov r14,QWORD [rsp-8+8*2]
	mov rax,QWORD [rsp-8+8*1]
	mov r8,r13
	mov r13,rax
	add rsp,32
;; rsp=1 , %2111~2'(= a35◂ [ *{ a31◂ [ ]a2◂ [ a31◂ [ ]]}] ) %2110~1'(= r ) %2109~0'(= r ) %2106~8'(= a35◂ [ *{ }] ) 
;; ? 2'(= a35◂ [ *{ a31◂ [ ]a2◂ [ a31◂ [ ]]}] ) ⊢ 0(<2)◂{ 3'(= a31◂ [ ] ) 4'(= a2◂ [ a31◂ [ ]] ) }
	mov rdi,r8
	cmp BYTE [rdi+6],0
	jnz LB_3348
	mov rdi,r8
	mov rdi,QWORD [rdi+8+8*0]
	mov r9,rdi
	mov rdi,r8
	mov rdi,QWORD [rdi+8+8*1]
	mov r10,rdi
;; rsp=1 , %2114~4'(= a2◂ [ a31◂ [ ]] ) %2113~3'(= a31◂ [ ] ) %2110~1'(= r ) %2109~0'(= r ) %2106~8'(= a35◂ [ *{ }] ) 
; #21 { 3'(= a31◂ [ ] ) 4'(= a2◂ [ a31◂ [ ]] ) } ⊢ 0(<2)◂{ 3'(= a31◂ [ ] ) 4'(= a2◂ [ a31◂ [ ]] ) }
;; rsp=1 , %2115~0(<2)◂{ 3'(= a31◂ [ ] ) 4'(= a2◂ [ a31◂ [ ]] ) } %2110~1'(= r ) %2109~0'(= r ) %2106~8'(= a35◂ [ *{ }] ) 
; #193 0(<2)◂{ 3'(= a31◂ [ ] ) 4'(= a2◂ [ a31◂ [ ]] ) } ⊢ 0(<2)◂0(<2)◂{ 3'(= a31◂ [ ] ) 4'(= a2◂ [ a31◂ [ ]] ) }
;; rsp=1 , %2116~0(<2)◂0(<2)◂{ 3'(= a31◂ [ ] ) 4'(= a2◂ [ a31◂ [ ]] ) } %2110~1'(= r ) %2109~0'(= r ) %2106~8'(= a35◂ [ *{ }] ) 
; #22 0(<2)◂0(<2)◂{ 3'(= a31◂ [ ] ) 4'(= a2◂ [ a31◂ [ ]] ) } ⊢ 0(<2)◂0(<2)◂0(<2)◂{ 3'(= a31◂ [ ] ) 4'(= a2◂ [ a31◂ [ ]] ) }
;; rsp=1 , %2117~0(<2)◂0(<2)◂0(<2)◂{ 3'(= a31◂ [ ] ) 4'(= a2◂ [ a31◂ [ ]] ) } %2110~1'(= r ) %2109~0'(= r ) %2106~8'(= a35◂ [ *{ }] ) 
; ∎ 0(<2)◂0(<2)◂0(<2)◂{ 3'(= a31◂ [ ] ) 4'(= a2◂ [ a31◂ [ ]] ) }
; .dlt.ptn 1'(= r )
; .dlt.ptn 0'(= r )
; .dlt.ptn 8'(= a35◂ [ *{ }] )
;	.dlt adt ⊢ _  
; .mov_ptn2 0(<2)◂0(<2)◂0(<2)◂{ 3'(= a31◂ [ ] ) 4'(= a2◂ [ a31◂ [ ]] ) } ⊢ 2'(= a3◂ [ a35◂ [ a2◂ [ a31◂ [ ]]]] )
; .mov_ptn 0(<2)◂0(<2)◂0(<2)◂{ 3'(= a31◂ [ ] ) 4'(= a2◂ [ a31◂ [ ]] ) } ⊢ 2'(= a3◂ [ a35◂ [ a2◂ [ a31◂ [ ]]]] )
	mov rax,[SS_RCD_2_TOP]
	mov rsi,[rax] 
	mov QWORD [SS_RCD_2_TOP],rsi
	mov QWORD [rax],0
	mov r13,rax
	mov rax,r9
	mov QWORD [r13+8+8*0],rax
	mov rax,r10
	mov QWORD [r13+8+8*1],rax
	mov rax,r13
	mov BYTE [rax+6],0
	mov rdi,rax
	mov rax,r15
	mov r15,QWORD [r15] 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov rdi,rax
	mov rax,r15
	mov r15,QWORD [r15] 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,8
	jmp LB_3342
LB_3348:
;; ?. 2'(= a35◂ [ *{ a31◂ [ ]a2◂ [ a31◂ [ ]]}] ) ⊢ 1(<2)◂3'(= a2◂ [ *{ rr{| l |}}] )
	mov rax,QWORD [rdi+8]
	mov r9,rax
;; rsp=1 , %2112~3'(= a2◂ [ *{ rr{| l |}}] ) %2110~1'(= r ) %2109~0'(= r ) %2106~8'(= a35◂ [ *{ }] ) 
; #192 3'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 1(<2)◂3'(= a2◂ [ *{ rr{| l |}}] )
;; rsp=1 , %2118~1(<2)◂3'(= a2◂ [ *{ rr{| l |}}] ) %2110~1'(= r ) %2109~0'(= r ) %2106~8'(= a35◂ [ *{ }] ) 
; #22 1(<2)◂3'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 0(<2)◂1(<2)◂3'(= a2◂ [ *{ rr{| l |}}] )
;; rsp=1 , %2119~0(<2)◂1(<2)◂3'(= a2◂ [ *{ rr{| l |}}] ) %2110~1'(= r ) %2109~0'(= r ) %2106~8'(= a35◂ [ *{ }] ) 
; ∎ 0(<2)◂1(<2)◂3'(= a2◂ [ *{ rr{| l |}}] )
; .dlt.ptn 1'(= r )
; .dlt.ptn 0'(= r )
; .dlt.ptn 8'(= a35◂ [ *{ }] )
;	.dlt adt ⊢ _  
; .mov_ptn2 0(<2)◂1(<2)◂3'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 2'(= a3◂ [ a35◂ [ a2◂ [ a31◂ [ ]]]] )
; .mov_ptn 0(<2)◂1(<2)◂3'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 2'(= a3◂ [ a35◂ [ a2◂ [ a31◂ [ ]]]] )
	mov rax,r9
	mov rdi,rax
	mov rax,r15
	mov r15,QWORD [r15] 
	mov QWORD [rax],0
	mov BYTE [rax+6],1
	mov QWORD [rax+8],rdi
	mov rdi,rax
	mov rax,r15
	mov r15,QWORD [r15] 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,8
	jmp LB_3342
LB_3342:
	cmp BYTE [r8+6],0
	jnz LB_3320
	pop r14
	pop r9
	add rsp,8
	pop r13
	ret
LB_3320:
	mov r9,QWORD [rsp+8]
	mov r14,QWORD [rsp+16]
	mov r13,QWORD [rsp+24]
	jmp LB_3351
LB_3350:
	add r14,1 
LB_3351:
	cmp r14,r9
	jge LB_3352
	JZ_SPC BYTE [r13+8+r14], LB_3350
LB_3352
	call GRM_217
	cmp BYTE [r8+6],0
	jnz LB_3355
	jmp LB_3356
LB_3355:
	jmp LB_3353
LB_3356:
	sub rsp,8
	mov r8,[r8+8]
; .mov_ptn2 2'(= a35◂ [ *{ }] ) ⊢ 8'(= a35◂ [ *{ }] )
; .mov_ptn 2'(= a35◂ [ *{ }] ) ⊢ 8'(= a35◂ [ *{ }] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_3354
LB_3353:
	add rsp,0
	jmp LB_3349
LB_3354:
	sub rsp,32
	mov QWORD [rsp+24],r13
	mov QWORD [rsp+16],r14 
	mov QWORD [rsp+8],r9
	jmp LB_3360
LB_3359:
	add r14,1 
LB_3360:
	cmp r14,r9
	jge LB_3361
	JZ_SPC BYTE [r13+8+r14], LB_3359
LB_3361
	cmp r14,r9
	jge LB_3364
	jmp LB_3365
LB_3364:
	mov r8,unt_1 
	jmp LB_3362
LB_3365:
	movzx rdi,BYTE [r13+8+r14]
	push rdi 
	add r14,1 
	jmp LB_3363
LB_3362:
	add rsp,0
	jmp LB_3358
LB_3363:
	mov QWORD [rsp+8*1],r14
	mov r13,QWORD [rsp+16+8*1]
	mov r14,QWORD [rsp+8*1]
	jmp LB_3367
LB_3367
;; rsp=1 , %2125~1'(= r ) %2124~0'(= r ) %2123~8'(= r ) 
	jmp LB_3368
LB_3368:
; $ %[ "file end" ] ⊢ %[ "file end" ]
;; rsp=1 , %2126~%[ "file end" ] %2125~1'(= r ) %2124~0'(= r ) %2123~8'(= r ) 
; _#8 %[ "file end" ] ⊢ %[ "file end" ]
	mov rdi,fmt_emt
	call emt_stg
	mov rdi,LB_3369
	call emt_stg 
	mov rdi,fmt_nl
	call emt_stg
	jmp LB_3370
LB_3370:
;; rsp=1 , %2127~%[ "file end" ] %2125~1'(= r ) %2124~0'(= r ) %2123~8'(= r ) 
; #23 { } ⊢ 1(<2)◂{ }
;; rsp=1 , %2128~1(<2)◂{ } %2127~%[ "file end" ] %2125~1'(= r ) %2124~0'(= r ) %2123~8'(= r ) 
; ∎ 1(<2)◂{ }
; .dlt.ptn %[ "file end" ]
; .dlt.ptn 1'(= r )
; .dlt.ptn 0'(= r )
; .dlt.ptn 8'(= r )
; .mov_ptn2 1(<2)◂{ } ⊢ 2'(= a3◂ [ *{ }] )
; .mov_ptn 1(<2)◂{ } ⊢ 2'(= a3◂ [ *{ }] )
	mov rax,unt 
	mov rax,unt_1
	mov r8,rax
	add rsp,8
	jmp LB_3366
LB_3366:
	cmp BYTE [r8+6],0
	jnz LB_3358
	pop r14
	pop r9
	add rsp,8
	pop r13
	jmp LB_3357
LB_3358:
	mov r9,QWORD [rsp+8]
	mov r14,QWORD [rsp+16]
	mov r13,QWORD [rsp+24]
	mov QWORD [rsp+8*0],r14
	mov r13,QWORD [rsp+16+8*0]
	mov r14,QWORD [rsp+8*0]
	jmp LB_3373
LB_3373
;; rsp=0 , %2130~1'(= r ) %2129~0'(= r ) 
	jmp LB_3374
LB_3374:
; $ %[ "file end nl" ] ⊢ %[ "file end nl" ]
;; rsp=0 , %2131~%[ "file end nl" ] %2130~1'(= r ) %2129~0'(= r ) 
; _#8 %[ "file end nl" ] ⊢ %[ "file end nl" ]
	mov rdi,fmt_emt
	call emt_stg
	mov rdi,LB_3375
	call emt_stg 
	mov rdi,fmt_nl
	call emt_stg
	jmp LB_3376
LB_3376:
;; rsp=0 , %2132~%[ "file end nl" ] %2130~1'(= r ) %2129~0'(= r ) 
; #22 { } ⊢ 0(<2)◂{ }
;; rsp=0 , %2133~0(<2)◂{ } %2132~%[ "file end nl" ] %2130~1'(= r ) %2129~0'(= r ) 
; ∎ 0(<2)◂{ }
; .dlt.ptn %[ "file end nl" ]
; .dlt.ptn 1'(= r )
; .dlt.ptn 0'(= r )
; .mov_ptn2 0(<2)◂{ } ⊢ 2'(= a3◂ [ *{ }] )
; .mov_ptn 0(<2)◂{ } ⊢ 2'(= a3◂ [ *{ }] )
	mov rax,unt 
	mov rax,unt_0
	mov r8,rax
	jmp LB_3372
LB_3372:
	cmp BYTE [r8+6],0
	jnz LB_3371
	pop r14
	pop r9
	add rsp,8
	pop r13
	jmp LB_3357
LB_3371:
	pop rdi
	pop r9 
	pop r14
	pop r13
	jmp LB_3357
LB_3357:
	cmp BYTE [r8+6],0
	jnz LB_3377
	jmp LB_3378
LB_3377:
	add rsp,8
	add rsp,8
	pop r9 
	pop r14 
	pop r13
	ret
LB_3378:
	mov QWORD [rsp+8*1],r14
; .mov_ptn2 2'(= *{ } ) ⊢ { }
; .mov_ptn 2'(= *{ } ) ⊢ { }
	mov r13,QWORD [rsp+16+8*1]
	mov r14,QWORD [rsp+8*1]
	jmp LB_3380
LB_3380
;; rsp=1 , %2134~{ } %2122~1'(= r ) %2121~0'(= r ) %2120~8'(= a35◂ [ *{ }] ) 
; #20 { } ⊢ 1(<2)◂{ }
;; rsp=1 , %2135~1(<2)◂{ } %2134~{ } %2122~1'(= r ) %2121~0'(= r ) %2120~8'(= a35◂ [ *{ }] ) 
; #193 1(<2)◂{ } ⊢ 0(<2)◂1(<2)◂{ }
;; rsp=1 , %2136~0(<2)◂1(<2)◂{ } %2134~{ } %2122~1'(= r ) %2121~0'(= r ) %2120~8'(= a35◂ [ *{ }] ) 
; #22 0(<2)◂1(<2)◂{ } ⊢ 0(<2)◂0(<2)◂1(<2)◂{ }
;; rsp=1 , %2137~0(<2)◂0(<2)◂1(<2)◂{ } %2134~{ } %2122~1'(= r ) %2121~0'(= r ) %2120~8'(= a35◂ [ *{ }] ) 
; ∎ 0(<2)◂0(<2)◂1(<2)◂{ }
; .dlt.ptn { }
; .dlt.ptn 1'(= r )
; .dlt.ptn 0'(= r )
; .dlt.ptn 8'(= a35◂ [ *{ }] )
;	.dlt adt ⊢ _  
; .mov_ptn2 0(<2)◂0(<2)◂1(<2)◂{ } ⊢ 2'(= a3◂ [ a35◂ [ a2◂ [ a31◂ [ ]]]] )
; .mov_ptn 0(<2)◂0(<2)◂1(<2)◂{ } ⊢ 2'(= a3◂ [ a35◂ [ a2◂ [ a31◂ [ ]]]] )
	mov rax,unt 
	mov rax,unt_1
	mov rdi,rax
	mov rax,r15
	mov r15,QWORD [r15] 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov rdi,rax
	mov rax,r15
	mov r15,QWORD [r15] 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,8
	jmp LB_3379
LB_3379:
	cmp BYTE [r8+6],0
	jnz LB_3349
	pop r14
	pop r9
	add rsp,8
	pop r13
	ret
LB_3349:
	pop rdi
	pop r9 
	pop r14
	pop r13
	ret
ETR_244:
	mov r9,0x0000_ffff_ffff_ffff
	and r9,[r13]
	call GRM_244
	ret
GRM_244:
	sub rsp,32
	mov QWORD [rsp+24],r13
	mov QWORD [rsp+16],r14 
	mov QWORD [rsp+8],r9
	jmp LB_3383
LB_3382:
	add r14,1 
LB_3383:
	cmp r14,r9
	jge LB_3384
	JZ_SPC BYTE [r13+8+r14], LB_3382
LB_3384
	lea rax,[r14+7]
	cmp rax,r9
	jg LB_3387
	jmp LB_3388
LB_3387:
	mov r8,unt_1
	jmp LB_3385
LB_3388:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],194
	jnz LB_3389
	cmp BYTE [rdi+1],167
	jnz LB_3389
	cmp BYTE [rdi+2],194
	jnz LB_3389
	cmp BYTE [rdi+3],167
	jnz LB_3389
	cmp BYTE [rdi+4],43
	jnz LB_3389
	cmp BYTE [rdi+5],115
	jnz LB_3389
	cmp BYTE [rdi+6],56
	jnz LB_3389
	jmp LB_3390
LB_3389:
	mov r8,unt_1
	jmp LB_3385
LB_3390:
	add r14,7
	jmp LB_3386
LB_3385:
	add rsp,0
	jmp LB_3381
LB_3386:
	sub rsp,32
	mov QWORD [rsp+24],r13
	mov QWORD [rsp+16],r14 
	mov QWORD [rsp+8],r9
	jmp LB_3394
LB_3393:
	add r14,1 
LB_3394:
	cmp r14,r9
	jge LB_3395
	JZ_SPC BYTE [r13+8+r14], LB_3393
LB_3395
	call GRM_259
	cmp BYTE [r8+6],0
	jnz LB_3398
	jmp LB_3399
LB_3398:
	jmp LB_3396
LB_3399:
	sub rsp,16
; .mov_ptn2 2'(= *{ {| l |}a24◂ [ a9◂ [ ]{| l |}]} ) ⊢ { 8'(= {| l |} ) 9'(= a24◂ [ a9◂ [ ]{| l |}] ) }
; .mov_ptn 2'(= *{ {| l |}a24◂ [ a9◂ [ ]{| l |}]} ) ⊢ { 8'(= {| l |} ) 9'(= a24◂ [ a9◂ [ ]{| l |}] ) }
	mov rdi,r8
	mov rdi,QWORD [rdi+8+8*0]
	mov r10,rdi
	mov QWORD [rsp-8+8*2],r10
	mov rdi,r8
	mov rdi,QWORD [rdi+8+8*1]
	mov r11,rdi
	mov QWORD [rsp-8+8*1],r11
	jmp LB_3397
LB_3396:
	add rsp,0
	jmp LB_3392
LB_3397:
	jmp LB_3401
LB_3400:
	add r14,1 
LB_3401:
	cmp r14,r9
	jge LB_3402
	JZ_SPC BYTE [r13+8+r14], LB_3400
LB_3402
	call GRM_260
	cmp BYTE [r8+6],0
	jnz LB_3405
	jmp LB_3406
LB_3405:
	jmp LB_3403
LB_3406:
	sub rsp,8
	mov r8,[r8+8]
; .mov_ptn2 2'(= a2◂ [ *{ {| l |}a24◂ [ a9◂ [ ]{| l |}]}] ) ⊢ 10'(= a2◂ [ *{ {| l |}a24◂ [ a9◂ [ ]{| l |}]}] )
; .mov_ptn 2'(= a2◂ [ *{ {| l |}a24◂ [ a9◂ [ ]{| l |}]}] ) ⊢ 10'(= a2◂ [ *{ {| l |}a24◂ [ a9◂ [ ]{| l |}]}] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_3404
LB_3403:
	add rsp,16
	jmp LB_3392
LB_3404:
	mov QWORD [rsp+8*3],r14
	mov r13,QWORD [rsp+16+8*3]
	mov r14,QWORD [rsp+8*3]
	jmp LB_3408
LB_3408
;; rsp=3 , %2143~1'(= r ) %2142~0'(= r ) %2141~10'(= a2◂ [ *{ {| l |}a24◂ [ a9◂ [ ]{| l |}]}] ) %2140~{ 8'(= {| l |} ) 9'(= a24◂ [ a9◂ [ ]{| l |}] ) } 
; #21 { { 8'(= {| l |} ) 9'(= a24◂ [ a9◂ [ ]{| l |}] ) } 10'(= a2◂ [ *{ {| l |}a24◂ [ a9◂ [ ]{| l |}]}] ) } ⊢ 0(<2)◂{ { 8'(= {| l |} ) 9'(= a24◂ [ a9◂ [ ]{| l |}] ) } 10'(= a2◂ [ *{ {| l |}a24◂ [ a9◂ [ ]{| l |}]}] ) }
;; rsp=3 , %2144~0(<2)◂{ { 8'(= {| l |} ) 9'(= a24◂ [ a9◂ [ ]{| l |}] ) } 10'(= a2◂ [ *{ {| l |}a24◂ [ a9◂ [ ]{| l |}]}] ) } %2143~1'(= r ) %2142~0'(= r ) 
; #175 0(<2)◂{ { 8'(= {| l |} ) 9'(= a24◂ [ a9◂ [ ]{| l |}] ) } 10'(= a2◂ [ *{ {| l |}a24◂ [ a9◂ [ ]{| l |}]}] ) } ⊢ 1(<6)◂0(<2)◂{ { 8'(= {| l |} ) 9'(= a24◂ [ a9◂ [ ]{| l |}] ) } 10'(= a2◂ [ *{ {| l |}a24◂ [ a9◂ [ ]{| l |}]}] ) }
;; rsp=3 , %2145~1(<6)◂0(<2)◂{ { 8'(= {| l |} ) 9'(= a24◂ [ a9◂ [ ]{| l |}] ) } 10'(= a2◂ [ *{ {| l |}a24◂ [ a9◂ [ ]{| l |}]}] ) } %2143~1'(= r ) %2142~0'(= r ) 
; #193 1(<6)◂0(<2)◂{ { 8'(= {| l |} ) 9'(= a24◂ [ a9◂ [ ]{| l |}] ) } 10'(= a2◂ [ *{ {| l |}a24◂ [ a9◂ [ ]{| l |}]}] ) } ⊢ 0(<2)◂1(<6)◂0(<2)◂{ { 8'(= {| l |} ) 9'(= a24◂ [ a9◂ [ ]{| l |}] ) } 10'(= a2◂ [ *{ {| l |}a24◂ [ a9◂ [ ]{| l |}]}] ) }
;; rsp=3 , %2146~0(<2)◂1(<6)◂0(<2)◂{ { 8'(= {| l |} ) 9'(= a24◂ [ a9◂ [ ]{| l |}] ) } 10'(= a2◂ [ *{ {| l |}a24◂ [ a9◂ [ ]{| l |}]}] ) } %2143~1'(= r ) %2142~0'(= r ) 
; #22 0(<2)◂1(<6)◂0(<2)◂{ { 8'(= {| l |} ) 9'(= a24◂ [ a9◂ [ ]{| l |}] ) } 10'(= a2◂ [ *{ {| l |}a24◂ [ a9◂ [ ]{| l |}]}] ) } ⊢ 0(<2)◂0(<2)◂1(<6)◂0(<2)◂{ { 8'(= {| l |} ) 9'(= a24◂ [ a9◂ [ ]{| l |}] ) } 10'(= a2◂ [ *{ {| l |}a24◂ [ a9◂ [ ]{| l |}]}] ) }
;; rsp=3 , %2147~0(<2)◂0(<2)◂1(<6)◂0(<2)◂{ { 8'(= {| l |} ) 9'(= a24◂ [ a9◂ [ ]{| l |}] ) } 10'(= a2◂ [ *{ {| l |}a24◂ [ a9◂ [ ]{| l |}]}] ) } %2143~1'(= r ) %2142~0'(= r ) 
; ∎ 0(<2)◂0(<2)◂1(<6)◂0(<2)◂{ { 8'(= {| l |} ) 9'(= a24◂ [ a9◂ [ ]{| l |}] ) } 10'(= a2◂ [ *{ {| l |}a24◂ [ a9◂ [ ]{| l |}]}] ) }
; .dlt.ptn 1'(= r )
; .dlt.ptn 0'(= r )
; .mov_ptn2 0(<2)◂0(<2)◂1(<6)◂0(<2)◂{ { 8'(= {| l |} ) 9'(= a24◂ [ a9◂ [ ]{| l |}] ) } 10'(= a2◂ [ *{ {| l |}a24◂ [ a9◂ [ ]{| l |}]}] ) } ⊢ 2'(= a3◂ [ a35◂ [ a31◂ [ ]]] )
; .mov_ptn 0(<2)◂0(<2)◂1(<6)◂0(<2)◂{ { 8'(= {| l |} ) 9'(= a24◂ [ a9◂ [ ]{| l |}] ) } 10'(= a2◂ [ *{ {| l |}a24◂ [ a9◂ [ ]{| l |}]}] ) } ⊢ 2'(= a3◂ [ a35◂ [ a31◂ [ ]]] )
	mov rax,[SS_RCD_2_TOP]
	mov rsi,[rax] 
	mov QWORD [SS_RCD_2_TOP],rsi
	mov QWORD [rax],0
	mov r13,rax
	mov rax,[SS_RCD_2_TOP]
	mov rsi,[rax] 
	mov QWORD [SS_RCD_2_TOP],rsi
	mov QWORD [rax],0
	mov r14,rax
	mov rax,QWORD [rsp-8+8*3]
	mov QWORD [r14+8+8*0],rax
	mov rax,QWORD [rsp-8+8*2]
	mov QWORD [r14+8+8*1],rax
	mov rax,r14
	mov QWORD [r13+8+8*0],rax
	mov rax,QWORD [rsp-8+8*1]
	mov QWORD [r13+8+8*1],rax
	mov rax,r13
	mov BYTE [rax+6],0
	mov rdi,rax
	mov rax,r15
	mov r15,QWORD [r15] 
	mov QWORD [rax],0
	mov BYTE [rax+6],1
	mov QWORD [rax+8],rdi
	mov rdi,rax
	mov rax,r15
	mov r15,QWORD [r15] 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov rdi,rax
	mov rax,r15
	mov r15,QWORD [r15] 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,24
	jmp LB_3407
LB_3407:
	cmp BYTE [r8+6],0
	jnz LB_3392
	pop r14
	pop r9
	add rsp,8
	pop r13
	jmp LB_3391
LB_3392:
	mov r9,QWORD [rsp+8]
	mov r14,QWORD [rsp+16]
	mov r13,QWORD [rsp+24]
	jmp LB_3411
LB_3410:
	add r14,1 
LB_3411:
	cmp r14,r9
	jge LB_3412
	JZ_SPC BYTE [r13+8+r14], LB_3410
LB_3412
	call GRM_245
	cmp BYTE [r8+6],0
	jnz LB_3415
	jmp LB_3416
LB_3415:
	jmp LB_3413
LB_3416:
; .mov_ptn2 2'(= *{ } ) ⊢ { }
; .mov_ptn 2'(= *{ } ) ⊢ { }
	jmp LB_3414
LB_3413:
	add rsp,0
	jmp LB_3409
LB_3414:
	mov QWORD [rsp+8*0],r14
	mov r13,QWORD [rsp+16+8*0]
	mov r14,QWORD [rsp+8*0]
	jmp LB_3418
LB_3418
;; rsp=0 , %2150~1'(= r ) %2149~0'(= r ) %2148~{ } 
; #20 { } ⊢ 1(<2)◂{ }
;; rsp=0 , %2151~1(<2)◂{ } %2150~1'(= r ) %2149~0'(= r ) %2148~{ } 
	jmp LB_3419
LB_3419:
; $ %[ "grb_etr 1" ] ⊢ %[ "grb_etr 1" ]
;; rsp=0 , %2152~%[ "grb_etr 1" ] %2151~1(<2)◂{ } %2150~1'(= r ) %2149~0'(= r ) %2148~{ } 
; #21 { { 0'(= r ) 1'(= r ) %[ "grb_etr 1" ] } 1(<2)◂{ } } ⊢ 0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "grb_etr 1" ] } 1(<2)◂{ } }
;; rsp=0 , %2153~0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "grb_etr 1" ] } 1(<2)◂{ } } %2148~{ } 
; #192 0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "grb_etr 1" ] } 1(<2)◂{ } } ⊢ 1(<2)◂0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "grb_etr 1" ] } 1(<2)◂{ } }
;; rsp=0 , %2154~1(<2)◂0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "grb_etr 1" ] } 1(<2)◂{ } } %2148~{ } 
; #22 1(<2)◂0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "grb_etr 1" ] } 1(<2)◂{ } } ⊢ 0(<2)◂1(<2)◂0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "grb_etr 1" ] } 1(<2)◂{ } }
;; rsp=0 , %2155~0(<2)◂1(<2)◂0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "grb_etr 1" ] } 1(<2)◂{ } } %2148~{ } 
; ∎ 0(<2)◂1(<2)◂0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "grb_etr 1" ] } 1(<2)◂{ } }
; .dlt.ptn { }
; .mov_ptn2 0(<2)◂1(<2)◂0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "grb_etr 1" ] } 1(<2)◂{ } } ⊢ 2'(= a3◂ [ a35◂ [ a31◂ [ ]]] )
; .mov_ptn 0(<2)◂1(<2)◂0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "grb_etr 1" ] } 1(<2)◂{ } } ⊢ 2'(= a3◂ [ a35◂ [ a31◂ [ ]]] )
	mov rax,[SS_RCD_2_TOP]
	mov rsi,[rax] 
	mov QWORD [SS_RCD_2_TOP],rsi
	mov QWORD [rax],0
	mov r9,rax
	mov rax,[SS_RCD_3_TOP]
	mov rsi,[rax] 
	mov QWORD [SS_RCD_3_TOP],rsi
	mov QWORD [rax],0
	mov r10,rax
	mov rax,r13
	mov QWORD [r10+8+8*0],rax
	mov rax,r14
	mov QWORD [r10+8+8*1],rax
	mov rsi,1  
	mov rdi,24
	xor rax,rax 
	C_CALL_SF calloc
	mov QWORD [rax],9
	mov BYTE [rax+8+0],103
	mov BYTE [rax+8+1],114
	mov BYTE [rax+8+2],98
	mov BYTE [rax+8+3],95
	mov BYTE [rax+8+4],101
	mov BYTE [rax+8+5],116
	mov BYTE [rax+8+6],114
	mov BYTE [rax+8+7],32
	mov BYTE [rax+8+8],49
	mov QWORD [r10+8+8*2],rax
	mov rax,r10
	mov QWORD [r9+8+8*0],rax
	mov rax,unt 
	mov rax,unt_1
	mov QWORD [r9+8+8*1],rax
	mov rax,r9
	mov BYTE [rax+6],0
	mov rdi,rax
	mov rax,r15
	mov r15,QWORD [r15] 
	mov QWORD [rax],0
	mov BYTE [rax+6],1
	mov QWORD [rax+8],rdi
	mov rdi,rax
	mov rax,r15
	mov r15,QWORD [r15] 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	jmp LB_3417
LB_3417:
	cmp BYTE [r8+6],0
	jnz LB_3409
	pop r14
	pop r9
	add rsp,8
	pop r13
	jmp LB_3391
LB_3409:
	pop rdi
	pop r9 
	pop r14
	pop r13
	jmp LB_3391
LB_3391:
	cmp BYTE [r8+6],0
	jnz LB_3420
	jmp LB_3421
LB_3420:
	add rsp,0
	add rsp,8
	pop r9 
	pop r14 
	pop r13
	ret
LB_3421:
	mov QWORD [rsp+8*0],r14
	mov r8,[r8+8]
; .mov_ptn2 2'(= a35◂ [ a31◂ [ ]] ) ⊢ 3'(= a35◂ [ a31◂ [ ]] )
	mov r10,r9
; .mov_ptn 2'(= a35◂ [ a31◂ [ ]] ) ⊢ 3'(= a35◂ [ a31◂ [ ]] )
	mov rax,r8
	mov r9,rax
	mov r13,QWORD [rsp+16+8*0]
	mov r14,QWORD [rsp+8*0]
	jmp LB_3423
LB_3423
;; rsp=0 , %2156~3'(= a35◂ [ a31◂ [ ]] ) %2139~1'(= r ) %2138~0'(= r ) 
; #22 3'(= a35◂ [ a31◂ [ ]] ) ⊢ 0(<2)◂3'(= a35◂ [ a31◂ [ ]] )
;; rsp=0 , %2157~0(<2)◂3'(= a35◂ [ a31◂ [ ]] ) %2139~1'(= r ) %2138~0'(= r ) 
; ∎ 0(<2)◂3'(= a35◂ [ a31◂ [ ]] )
; .dlt.ptn 1'(= r )
; .dlt.ptn 0'(= r )
; .mov_ptn2 0(<2)◂3'(= a35◂ [ a31◂ [ ]] ) ⊢ 2'(= a3◂ [ a35◂ [ a31◂ [ ]]] )
; .mov_ptn 0(<2)◂3'(= a35◂ [ a31◂ [ ]] ) ⊢ 2'(= a3◂ [ a35◂ [ a31◂ [ ]]] )
	mov rax,r9
	mov rdi,rax
	mov rax,r15
	mov r15,QWORD [r15] 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	jmp LB_3422
LB_3422:
	cmp BYTE [r8+6],0
	jnz LB_3381
	pop r14
	pop r9
	add rsp,8
	pop r13
	ret
LB_3381:
	mov r9,QWORD [rsp+8]
	mov r14,QWORD [rsp+16]
	mov r13,QWORD [rsp+24]
	jmp LB_3426
LB_3425:
	add r14,1 
LB_3426:
	cmp r14,r9
	jge LB_3427
	JZ_SPC BYTE [r13+8+r14], LB_3425
LB_3427
	call GRM_217
	cmp BYTE [r8+6],0
	jnz LB_3430
	jmp LB_3431
LB_3430:
	jmp LB_3428
LB_3431:
	sub rsp,8
	mov r8,[r8+8]
; .mov_ptn2 2'(= a35◂ [ *{ }] ) ⊢ 8'(= a35◂ [ *{ }] )
; .mov_ptn 2'(= a35◂ [ *{ }] ) ⊢ 8'(= a35◂ [ *{ }] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_3429
LB_3428:
	add rsp,0
	jmp LB_3424
LB_3429:
	jmp LB_3433
LB_3432:
	add r14,1 
LB_3433:
	cmp r14,r9
	jge LB_3434
	JZ_SPC BYTE [r13+8+r14], LB_3432
LB_3434
	lea rax,[r14+4]
	cmp rax,r9
	jg LB_3437
	jmp LB_3438
LB_3437:
	mov r8,unt_1
	jmp LB_3435
LB_3438:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],194
	jnz LB_3439
	cmp BYTE [rdi+1],167
	jnz LB_3439
	cmp BYTE [rdi+2],194
	jnz LB_3439
	cmp BYTE [rdi+3],167
	jnz LB_3439
	jmp LB_3440
LB_3439:
	mov r8,unt_1
	jmp LB_3435
LB_3440:
	add r14,4
	jmp LB_3436
LB_3435:
	add rsp,8
	jmp LB_3424
LB_3436:
	sub rsp,32
	mov QWORD [rsp+24],r13
	mov QWORD [rsp+16],r14 
	mov QWORD [rsp+8],r9
	jmp LB_3444
LB_3443:
	add r14,1 
LB_3444:
	cmp r14,r9
	jge LB_3445
	JZ_SPC BYTE [r13+8+r14], LB_3443
LB_3445
	call GRM_74
	cmp BYTE [r8+6],0
	jnz LB_3448
	jmp LB_3449
LB_3448:
	jmp LB_3446
LB_3449:
	sub rsp,8
; .mov_ptn2 2'(= {| l |} ) ⊢ 8'(= {| l |} )
; .mov_ptn 2'(= {| l |} ) ⊢ 8'(= {| l |} )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_3447
LB_3446:
	add rsp,0
	jmp LB_3442
LB_3447:
	jmp LB_3451
LB_3450:
	add r14,1 
LB_3451:
	cmp r14,r9
	jge LB_3452
	JZ_SPC BYTE [r13+8+r14], LB_3450
LB_3452
	call GRM_247
	cmp BYTE [r8+6],0
	jnz LB_3455
	jmp LB_3456
LB_3455:
	jmp LB_3453
LB_3456:
	sub rsp,8
	mov r8,[r8+8]
; .mov_ptn2 2'(= a35◂ [ a32◂ [ ]] ) ⊢ 9'(= a35◂ [ a32◂ [ ]] )
; .mov_ptn 2'(= a35◂ [ a32◂ [ ]] ) ⊢ 9'(= a35◂ [ a32◂ [ ]] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_3454
LB_3453:
	add rsp,8
	jmp LB_3442
LB_3454:
	mov QWORD [rsp+8*2],r14
	mov r13,QWORD [rsp+16+8*2]
	mov r14,QWORD [rsp+8*2]
	jmp LB_3458
LB_3458
;; rsp=2 , %2164~1'(= r ) %2163~0'(= r ) %2162~9'(= a35◂ [ a32◂ [ ]] ) %2161~8'(= {| l |} ) 
;; ? 9'(= a35◂ [ a32◂ [ ]] ) ⊢ 0(<2)◂2'(= a32◂ [ ] )
	mov rdi,QWORD [rsp-8+8*1]
	cmp BYTE [rdi+6],0
	jnz LB_3459
	mov rax,QWORD [rdi+8]
	mov r8,rax
;; rsp=2 , %2166~2'(= a32◂ [ ] ) %2164~1'(= r ) %2163~0'(= r ) %2161~8'(= {| l |} ) 
; #176 { 8'(= {| l |} ) 2'(= a32◂ [ ] ) } ⊢ 0(<6)◂{ 8'(= {| l |} ) 2'(= a32◂ [ ] ) }
;; rsp=2 , %2167~0(<6)◂{ 8'(= {| l |} ) 2'(= a32◂ [ ] ) } %2164~1'(= r ) %2163~0'(= r ) 
; #193 0(<6)◂{ 8'(= {| l |} ) 2'(= a32◂ [ ] ) } ⊢ 0(<2)◂0(<6)◂{ 8'(= {| l |} ) 2'(= a32◂ [ ] ) }
;; rsp=2 , %2168~0(<2)◂0(<6)◂{ 8'(= {| l |} ) 2'(= a32◂ [ ] ) } %2164~1'(= r ) %2163~0'(= r ) 
; #22 0(<2)◂0(<6)◂{ 8'(= {| l |} ) 2'(= a32◂ [ ] ) } ⊢ 0(<2)◂0(<2)◂0(<6)◂{ 8'(= {| l |} ) 2'(= a32◂ [ ] ) }
;; rsp=2 , %2169~0(<2)◂0(<2)◂0(<6)◂{ 8'(= {| l |} ) 2'(= a32◂ [ ] ) } %2164~1'(= r ) %2163~0'(= r ) 
; ∎ 0(<2)◂0(<2)◂0(<6)◂{ 8'(= {| l |} ) 2'(= a32◂ [ ] ) }
; .dlt.ptn 1'(= r )
; .dlt.ptn 0'(= r )
; .mov_ptn2 0(<2)◂0(<2)◂0(<6)◂{ 8'(= {| l |} ) 2'(= a32◂ [ ] ) } ⊢ 2'(= a3◂ [ a35◂ [ a31◂ [ ]]] )
	mov r13,r8
; .mov_ptn 0(<2)◂0(<2)◂0(<6)◂{ 8'(= {| l |} ) 0'(= a32◂ [ ] ) } ⊢ 2'(= a3◂ [ a35◂ [ a31◂ [ ]]] )
	mov rax,[SS_RCD_2_TOP]
	mov rsi,[rax] 
	mov QWORD [SS_RCD_2_TOP],rsi
	mov QWORD [rax],0
	mov r14,rax
	mov rax,QWORD [rsp-8+8*2]
	mov QWORD [r14+8+8*0],rax
	mov rax,r13
	mov QWORD [r14+8+8*1],rax
	mov rax,r14
	mov BYTE [rax+6],0
	mov rdi,rax
	mov rax,r15
	mov r15,QWORD [r15] 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov rdi,rax
	mov rax,r15
	mov r15,QWORD [r15] 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,16
	jmp LB_3457
LB_3459:
;; ?. 9'(= a35◂ [ a32◂ [ ]] ) ⊢ 1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] )
	mov rax,QWORD [rdi+8]
	mov r8,rax
;; rsp=2 , %2165~2'(= a2◂ [ *{ rr{| l |}}] ) %2164~1'(= r ) %2163~0'(= r ) %2161~8'(= {| l |} ) 
; #192 2'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] )
;; rsp=2 , %2170~1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] ) %2164~1'(= r ) %2163~0'(= r ) %2161~8'(= {| l |} ) 
; #22 1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 0(<2)◂1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] )
;; rsp=2 , %2171~0(<2)◂1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] ) %2164~1'(= r ) %2163~0'(= r ) %2161~8'(= {| l |} ) 
; ∎ 0(<2)◂1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] )
; .dlt.ptn 1'(= r )
; .dlt.ptn 0'(= r )
; .dlt.ptn 8'(= {| l |} )
	mov rdi,QWORD [rsp-8+8*2]
	call free_s8 
; .mov_ptn2 0(<2)◂1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 2'(= a3◂ [ a35◂ [ a31◂ [ ]]] )
	mov r13,r8
; .mov_ptn 0(<2)◂1(<2)◂0'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 2'(= a3◂ [ a35◂ [ a31◂ [ ]]] )
	mov rax,r13
	mov rdi,rax
	mov rax,r15
	mov r15,QWORD [r15] 
	mov QWORD [rax],0
	mov BYTE [rax+6],1
	mov QWORD [rax+8],rdi
	mov rdi,rax
	mov rax,r15
	mov r15,QWORD [r15] 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,16
	jmp LB_3457
LB_3457:
	cmp BYTE [r8+6],0
	jnz LB_3442
	pop r14
	pop r9
	add rsp,8
	pop r13
	jmp LB_3441
LB_3442:
	mov r9,QWORD [rsp+8]
	mov r14,QWORD [rsp+16]
	mov r13,QWORD [rsp+24]
	jmp LB_3462
LB_3461:
	add r14,1 
LB_3462:
	cmp r14,r9
	jge LB_3463
	JZ_SPC BYTE [r13+8+r14], LB_3461
LB_3463
	call GRM_246
	cmp BYTE [r8+6],0
	jnz LB_3466
	jmp LB_3467
LB_3466:
	jmp LB_3464
LB_3467:
; .mov_ptn2 2'(= *{ } ) ⊢ { }
; .mov_ptn 2'(= *{ } ) ⊢ { }
	jmp LB_3465
LB_3464:
	add rsp,0
	jmp LB_3460
LB_3465:
	mov QWORD [rsp+8*0],r14
	mov r13,QWORD [rsp+16+8*0]
	mov r14,QWORD [rsp+8*0]
	jmp LB_3469
LB_3469
;; rsp=0 , %2174~1'(= r ) %2173~0'(= r ) %2172~{ } 
; #20 { } ⊢ 1(<2)◂{ }
;; rsp=0 , %2175~1(<2)◂{ } %2174~1'(= r ) %2173~0'(= r ) %2172~{ } 
	jmp LB_3470
LB_3470:
; $ %[ "glb_etr 0.1" ] ⊢ %[ "glb_etr 0.1" ]
;; rsp=0 , %2176~%[ "glb_etr 0.1" ] %2175~1(<2)◂{ } %2174~1'(= r ) %2173~0'(= r ) %2172~{ } 
; #21 { { 0'(= r ) 1'(= r ) %[ "glb_etr 0.1" ] } 1(<2)◂{ } } ⊢ 0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "glb_etr 0.1" ] } 1(<2)◂{ } }
;; rsp=0 , %2177~0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "glb_etr 0.1" ] } 1(<2)◂{ } } %2172~{ } 
; #192 0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "glb_etr 0.1" ] } 1(<2)◂{ } } ⊢ 1(<2)◂0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "glb_etr 0.1" ] } 1(<2)◂{ } }
;; rsp=0 , %2178~1(<2)◂0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "glb_etr 0.1" ] } 1(<2)◂{ } } %2172~{ } 
; #22 1(<2)◂0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "glb_etr 0.1" ] } 1(<2)◂{ } } ⊢ 0(<2)◂1(<2)◂0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "glb_etr 0.1" ] } 1(<2)◂{ } }
;; rsp=0 , %2179~0(<2)◂1(<2)◂0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "glb_etr 0.1" ] } 1(<2)◂{ } } %2172~{ } 
; ∎ 0(<2)◂1(<2)◂0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "glb_etr 0.1" ] } 1(<2)◂{ } }
; .dlt.ptn { }
; .mov_ptn2 0(<2)◂1(<2)◂0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "glb_etr 0.1" ] } 1(<2)◂{ } } ⊢ 2'(= a3◂ [ a35◂ [ a31◂ [ ]]] )
; .mov_ptn 0(<2)◂1(<2)◂0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "glb_etr 0.1" ] } 1(<2)◂{ } } ⊢ 2'(= a3◂ [ a35◂ [ a31◂ [ ]]] )
	mov rax,[SS_RCD_2_TOP]
	mov rsi,[rax] 
	mov QWORD [SS_RCD_2_TOP],rsi
	mov QWORD [rax],0
	mov r9,rax
	mov rax,[SS_RCD_3_TOP]
	mov rsi,[rax] 
	mov QWORD [SS_RCD_3_TOP],rsi
	mov QWORD [rax],0
	mov r10,rax
	mov rax,r13
	mov QWORD [r10+8+8*0],rax
	mov rax,r14
	mov QWORD [r10+8+8*1],rax
	mov rsi,1  
	mov rdi,24
	xor rax,rax 
	C_CALL_SF calloc
	mov QWORD [rax],11
	mov BYTE [rax+8+0],103
	mov BYTE [rax+8+1],108
	mov BYTE [rax+8+2],98
	mov BYTE [rax+8+3],95
	mov BYTE [rax+8+4],101
	mov BYTE [rax+8+5],116
	mov BYTE [rax+8+6],114
	mov BYTE [rax+8+7],32
	mov BYTE [rax+8+8],48
	mov BYTE [rax+8+9],46
	mov BYTE [rax+8+10],49
	mov QWORD [r10+8+8*2],rax
	mov rax,r10
	mov QWORD [r9+8+8*0],rax
	mov rax,unt 
	mov rax,unt_1
	mov QWORD [r9+8+8*1],rax
	mov rax,r9
	mov BYTE [rax+6],0
	mov rdi,rax
	mov rax,r15
	mov r15,QWORD [r15] 
	mov QWORD [rax],0
	mov BYTE [rax+6],1
	mov QWORD [rax+8],rdi
	mov rdi,rax
	mov rax,r15
	mov r15,QWORD [r15] 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	jmp LB_3468
LB_3468:
	cmp BYTE [r8+6],0
	jnz LB_3460
	pop r14
	pop r9
	add rsp,8
	pop r13
	jmp LB_3441
LB_3460:
	pop rdi
	pop r9 
	pop r14
	pop r13
	jmp LB_3441
LB_3441:
	cmp BYTE [r8+6],0
	jnz LB_3471
	jmp LB_3472
LB_3471:
	add rsp,8
	add rsp,8
	pop r9 
	pop r14 
	pop r13
	ret
LB_3472:
	mov QWORD [rsp+8*1],r14
	mov r8,[r8+8]
; .mov_ptn2 2'(= a35◂ [ a31◂ [ ]] ) ⊢ 3'(= a35◂ [ a31◂ [ ]] )
	mov r10,r9
; .mov_ptn 2'(= a35◂ [ a31◂ [ ]] ) ⊢ 3'(= a35◂ [ a31◂ [ ]] )
	mov rax,r8
	mov r9,rax
	mov r13,QWORD [rsp+16+8*1]
	mov r14,QWORD [rsp+8*1]
	jmp LB_3474
LB_3474
;; rsp=1 , %2180~3'(= a35◂ [ a31◂ [ ]] ) %2160~1'(= r ) %2159~0'(= r ) %2158~8'(= a35◂ [ *{ }] ) 
; #22 3'(= a35◂ [ a31◂ [ ]] ) ⊢ 0(<2)◂3'(= a35◂ [ a31◂ [ ]] )
;; rsp=1 , %2181~0(<2)◂3'(= a35◂ [ a31◂ [ ]] ) %2160~1'(= r ) %2159~0'(= r ) %2158~8'(= a35◂ [ *{ }] ) 
; ∎ 0(<2)◂3'(= a35◂ [ a31◂ [ ]] )
; .dlt.ptn 1'(= r )
; .dlt.ptn 0'(= r )
; .dlt.ptn 8'(= a35◂ [ *{ }] )
;	.dlt adt ⊢ _  
; .mov_ptn2 0(<2)◂3'(= a35◂ [ a31◂ [ ]] ) ⊢ 2'(= a3◂ [ a35◂ [ a31◂ [ ]]] )
; .mov_ptn 0(<2)◂3'(= a35◂ [ a31◂ [ ]] ) ⊢ 2'(= a3◂ [ a35◂ [ a31◂ [ ]]] )
	mov rax,r9
	mov rdi,rax
	mov rax,r15
	mov r15,QWORD [r15] 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,8
	jmp LB_3473
LB_3473:
	cmp BYTE [r8+6],0
	jnz LB_3424
	pop r14
	pop r9
	add rsp,8
	pop r13
	ret
LB_3424:
	mov r9,QWORD [rsp+8]
	mov r14,QWORD [rsp+16]
	mov r13,QWORD [rsp+24]
	jmp LB_3477
LB_3476:
	add r14,1 
LB_3477:
	cmp r14,r9
	jge LB_3478
	JZ_SPC BYTE [r13+8+r14], LB_3476
LB_3478
	lea rax,[r14+2]
	cmp rax,r9
	jg LB_3481
	jmp LB_3482
LB_3481:
	mov r8,unt_1
	jmp LB_3479
LB_3482:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],194
	jnz LB_3483
	cmp BYTE [rdi+1],167
	jnz LB_3483
	jmp LB_3484
LB_3483:
	mov r8,unt_1
	jmp LB_3479
LB_3484:
	add r14,2
	jmp LB_3480
LB_3479:
	add rsp,0
	jmp LB_3475
LB_3480:
	sub rsp,32
	mov QWORD [rsp+24],r13
	mov QWORD [rsp+16],r14 
	mov QWORD [rsp+8],r9
	jmp LB_3488
LB_3487:
	add r14,1 
LB_3488:
	cmp r14,r9
	jge LB_3489
	JZ_SPC BYTE [r13+8+r14], LB_3487
LB_3489
	call GRM_255
	cmp BYTE [r8+6],0
	jnz LB_3492
	jmp LB_3493
LB_3492:
	jmp LB_3490
LB_3493:
	sub rsp,8
	mov r8,[r8+8]
; .mov_ptn2 2'(= a35◂ [ a31◂ [ ]] ) ⊢ 8'(= a35◂ [ a31◂ [ ]] )
; .mov_ptn 2'(= a35◂ [ a31◂ [ ]] ) ⊢ 8'(= a35◂ [ a31◂ [ ]] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_3491
LB_3490:
	add rsp,0
	jmp LB_3486
LB_3491:
	mov QWORD [rsp+8*1],r14
	mov r13,QWORD [rsp+16+8*1]
	mov r14,QWORD [rsp+8*1]
	jmp LB_3495
LB_3495
;; rsp=1 , %2186~1'(= r ) %2185~0'(= r ) %2184~8'(= a35◂ [ a31◂ [ ]] ) 
; #22 8'(= a35◂ [ a31◂ [ ]] ) ⊢ 0(<2)◂8'(= a35◂ [ a31◂ [ ]] )
;; rsp=1 , %2187~0(<2)◂8'(= a35◂ [ a31◂ [ ]] ) %2186~1'(= r ) %2185~0'(= r ) 
; ∎ 0(<2)◂8'(= a35◂ [ a31◂ [ ]] )
; .dlt.ptn 1'(= r )
; .dlt.ptn 0'(= r )
; .mov_ptn2 0(<2)◂8'(= a35◂ [ a31◂ [ ]] ) ⊢ 2'(= a3◂ [ a35◂ [ a31◂ [ ]]] )
; .mov_ptn 0(<2)◂8'(= a35◂ [ a31◂ [ ]] ) ⊢ 2'(= a3◂ [ a35◂ [ a31◂ [ ]]] )
	mov rax,QWORD [rsp-8+8*1]
	mov rdi,rax
	mov rax,r15
	mov r15,QWORD [r15] 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,8
	jmp LB_3494
LB_3494:
	cmp BYTE [r8+6],0
	jnz LB_3486
	pop r14
	pop r9
	add rsp,8
	pop r13
	jmp LB_3485
LB_3486:
	mov r9,QWORD [rsp+8]
	mov r14,QWORD [rsp+16]
	mov r13,QWORD [rsp+24]
	jmp LB_3498
LB_3497:
	add r14,1 
LB_3498:
	cmp r14,r9
	jge LB_3499
	JZ_SPC BYTE [r13+8+r14], LB_3497
LB_3499
	call GRM_245
	cmp BYTE [r8+6],0
	jnz LB_3502
	jmp LB_3503
LB_3502:
	jmp LB_3500
LB_3503:
; .mov_ptn2 2'(= *{ } ) ⊢ { }
; .mov_ptn 2'(= *{ } ) ⊢ { }
	jmp LB_3501
LB_3500:
	add rsp,0
	jmp LB_3496
LB_3501:
	mov QWORD [rsp+8*0],r14
	mov r13,QWORD [rsp+16+8*0]
	mov r14,QWORD [rsp+8*0]
	jmp LB_3505
LB_3505
;; rsp=0 , %2190~1'(= r ) %2189~0'(= r ) %2188~{ } 
; #20 { } ⊢ 1(<2)◂{ }
;; rsp=0 , %2191~1(<2)◂{ } %2190~1'(= r ) %2189~0'(= r ) %2188~{ } 
	jmp LB_3506
LB_3506:
; $ %[ "glb_etr 3" ] ⊢ %[ "glb_etr 3" ]
;; rsp=0 , %2192~%[ "glb_etr 3" ] %2191~1(<2)◂{ } %2190~1'(= r ) %2189~0'(= r ) %2188~{ } 
; #21 { { 0'(= r ) 1'(= r ) %[ "glb_etr 3" ] } 1(<2)◂{ } } ⊢ 0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "glb_etr 3" ] } 1(<2)◂{ } }
;; rsp=0 , %2193~0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "glb_etr 3" ] } 1(<2)◂{ } } %2188~{ } 
; #192 0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "glb_etr 3" ] } 1(<2)◂{ } } ⊢ 1(<2)◂0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "glb_etr 3" ] } 1(<2)◂{ } }
;; rsp=0 , %2194~1(<2)◂0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "glb_etr 3" ] } 1(<2)◂{ } } %2188~{ } 
; #22 1(<2)◂0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "glb_etr 3" ] } 1(<2)◂{ } } ⊢ 0(<2)◂1(<2)◂0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "glb_etr 3" ] } 1(<2)◂{ } }
;; rsp=0 , %2195~0(<2)◂1(<2)◂0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "glb_etr 3" ] } 1(<2)◂{ } } %2188~{ } 
; ∎ 0(<2)◂1(<2)◂0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "glb_etr 3" ] } 1(<2)◂{ } }
; .dlt.ptn { }
; .mov_ptn2 0(<2)◂1(<2)◂0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "glb_etr 3" ] } 1(<2)◂{ } } ⊢ 2'(= a3◂ [ a35◂ [ a31◂ [ ]]] )
; .mov_ptn 0(<2)◂1(<2)◂0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "glb_etr 3" ] } 1(<2)◂{ } } ⊢ 2'(= a3◂ [ a35◂ [ a31◂ [ ]]] )
	mov rax,[SS_RCD_2_TOP]
	mov rsi,[rax] 
	mov QWORD [SS_RCD_2_TOP],rsi
	mov QWORD [rax],0
	mov r9,rax
	mov rax,[SS_RCD_3_TOP]
	mov rsi,[rax] 
	mov QWORD [SS_RCD_3_TOP],rsi
	mov QWORD [rax],0
	mov r10,rax
	mov rax,r13
	mov QWORD [r10+8+8*0],rax
	mov rax,r14
	mov QWORD [r10+8+8*1],rax
	mov rsi,1  
	mov rdi,24
	xor rax,rax 
	C_CALL_SF calloc
	mov QWORD [rax],9
	mov BYTE [rax+8+0],103
	mov BYTE [rax+8+1],108
	mov BYTE [rax+8+2],98
	mov BYTE [rax+8+3],95
	mov BYTE [rax+8+4],101
	mov BYTE [rax+8+5],116
	mov BYTE [rax+8+6],114
	mov BYTE [rax+8+7],32
	mov BYTE [rax+8+8],51
	mov QWORD [r10+8+8*2],rax
	mov rax,r10
	mov QWORD [r9+8+8*0],rax
	mov rax,unt 
	mov rax,unt_1
	mov QWORD [r9+8+8*1],rax
	mov rax,r9
	mov BYTE [rax+6],0
	mov rdi,rax
	mov rax,r15
	mov r15,QWORD [r15] 
	mov QWORD [rax],0
	mov BYTE [rax+6],1
	mov QWORD [rax+8],rdi
	mov rdi,rax
	mov rax,r15
	mov r15,QWORD [r15] 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	jmp LB_3504
LB_3504:
	cmp BYTE [r8+6],0
	jnz LB_3496
	pop r14
	pop r9
	add rsp,8
	pop r13
	jmp LB_3485
LB_3496:
	pop rdi
	pop r9 
	pop r14
	pop r13
	jmp LB_3485
LB_3485:
	cmp BYTE [r8+6],0
	jnz LB_3507
	jmp LB_3508
LB_3507:
	add rsp,0
	add rsp,8
	pop r9 
	pop r14 
	pop r13
	ret
LB_3508:
	mov QWORD [rsp+8*0],r14
	mov r8,[r8+8]
; .mov_ptn2 2'(= a35◂ [ a31◂ [ ]] ) ⊢ 3'(= a35◂ [ a31◂ [ ]] )
	mov r10,r9
; .mov_ptn 2'(= a35◂ [ a31◂ [ ]] ) ⊢ 3'(= a35◂ [ a31◂ [ ]] )
	mov rax,r8
	mov r9,rax
	mov r13,QWORD [rsp+16+8*0]
	mov r14,QWORD [rsp+8*0]
	jmp LB_3510
LB_3510
;; rsp=0 , %2196~3'(= a35◂ [ a31◂ [ ]] ) %2183~1'(= r ) %2182~0'(= r ) 
; #22 3'(= a35◂ [ a31◂ [ ]] ) ⊢ 0(<2)◂3'(= a35◂ [ a31◂ [ ]] )
;; rsp=0 , %2197~0(<2)◂3'(= a35◂ [ a31◂ [ ]] ) %2183~1'(= r ) %2182~0'(= r ) 
; ∎ 0(<2)◂3'(= a35◂ [ a31◂ [ ]] )
; .dlt.ptn 1'(= r )
; .dlt.ptn 0'(= r )
; .mov_ptn2 0(<2)◂3'(= a35◂ [ a31◂ [ ]] ) ⊢ 2'(= a3◂ [ a35◂ [ a31◂ [ ]]] )
; .mov_ptn 0(<2)◂3'(= a35◂ [ a31◂ [ ]] ) ⊢ 2'(= a3◂ [ a35◂ [ a31◂ [ ]]] )
	mov rax,r9
	mov rdi,rax
	mov rax,r15
	mov r15,QWORD [r15] 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	jmp LB_3509
LB_3509:
	cmp BYTE [r8+6],0
	jnz LB_3475
	pop r14
	pop r9
	add rsp,8
	pop r13
	ret
LB_3475:
	mov r9,QWORD [rsp+8]
	mov r14,QWORD [rsp+16]
	mov r13,QWORD [rsp+24]
	jmp LB_3513
LB_3512:
	add r14,1 
LB_3513:
	cmp r14,r9
	jge LB_3514
	JZ_SPC BYTE [r13+8+r14], LB_3512
LB_3514
	lea rax,[r14+2]
	cmp rax,r9
	jg LB_3517
	jmp LB_3518
LB_3517:
	mov r8,unt_1
	jmp LB_3515
LB_3518:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],194
	jnz LB_3519
	cmp BYTE [rdi+1],182
	jnz LB_3519
	jmp LB_3520
LB_3519:
	mov r8,unt_1
	jmp LB_3515
LB_3520:
	add r14,2
	jmp LB_3516
LB_3515:
	add rsp,0
	jmp LB_3511
LB_3516:
	sub rsp,32
	mov QWORD [rsp+24],r13
	mov QWORD [rsp+16],r14 
	mov QWORD [rsp+8],r9
	jmp LB_3524
LB_3523:
	add r14,1 
LB_3524:
	cmp r14,r9
	jge LB_3525
	JZ_SPC BYTE [r13+8+r14], LB_3523
LB_3525
	call GRM_249
	cmp BYTE [r8+6],0
	jnz LB_3528
	jmp LB_3529
LB_3528:
	jmp LB_3526
LB_3529:
	sub rsp,8
	mov r8,[r8+8]
; .mov_ptn2 2'(= a31◂ [ ] ) ⊢ 8'(= a31◂ [ ] )
; .mov_ptn 2'(= a31◂ [ ] ) ⊢ 8'(= a31◂ [ ] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_3527
LB_3526:
	add rsp,0
	jmp LB_3522
LB_3527:
	mov QWORD [rsp+8*1],r14
	mov r13,QWORD [rsp+16+8*1]
	mov r14,QWORD [rsp+8*1]
	jmp LB_3531
LB_3531
;; rsp=1 , %2202~1'(= r ) %2201~0'(= r ) %2200~8'(= a31◂ [ ] ) 
; #193 8'(= a31◂ [ ] ) ⊢ 0(<2)◂8'(= a31◂ [ ] )
;; rsp=1 , %2203~0(<2)◂8'(= a31◂ [ ] ) %2202~1'(= r ) %2201~0'(= r ) 
; #22 0(<2)◂8'(= a31◂ [ ] ) ⊢ 0(<2)◂0(<2)◂8'(= a31◂ [ ] )
;; rsp=1 , %2204~0(<2)◂0(<2)◂8'(= a31◂ [ ] ) %2202~1'(= r ) %2201~0'(= r ) 
; ∎ 0(<2)◂0(<2)◂8'(= a31◂ [ ] )
; .dlt.ptn 1'(= r )
; .dlt.ptn 0'(= r )
; .mov_ptn2 0(<2)◂0(<2)◂8'(= a31◂ [ ] ) ⊢ 2'(= a3◂ [ a35◂ [ a31◂ [ ]]] )
; .mov_ptn 0(<2)◂0(<2)◂8'(= a31◂ [ ] ) ⊢ 2'(= a3◂ [ a35◂ [ a31◂ [ ]]] )
	mov rax,QWORD [rsp-8+8*1]
	mov rdi,rax
	mov rax,r15
	mov r15,QWORD [r15] 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov rdi,rax
	mov rax,r15
	mov r15,QWORD [r15] 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,8
	jmp LB_3530
LB_3530:
	cmp BYTE [r8+6],0
	jnz LB_3522
	pop r14
	pop r9
	add rsp,8
	pop r13
	jmp LB_3521
LB_3522:
	mov r9,QWORD [rsp+8]
	mov r14,QWORD [rsp+16]
	mov r13,QWORD [rsp+24]
	jmp LB_3534
LB_3533:
	add r14,1 
LB_3534:
	cmp r14,r9
	jge LB_3535
	JZ_SPC BYTE [r13+8+r14], LB_3533
LB_3535
	call GRM_245
	cmp BYTE [r8+6],0
	jnz LB_3538
	jmp LB_3539
LB_3538:
	jmp LB_3536
LB_3539:
; .mov_ptn2 2'(= *{ } ) ⊢ { }
; .mov_ptn 2'(= *{ } ) ⊢ { }
	jmp LB_3537
LB_3536:
	add rsp,0
	jmp LB_3532
LB_3537:
	mov QWORD [rsp+8*0],r14
	mov r13,QWORD [rsp+16+8*0]
	mov r14,QWORD [rsp+8*0]
	jmp LB_3541
LB_3541
;; rsp=0 , %2207~1'(= r ) %2206~0'(= r ) %2205~{ } 
; #20 { } ⊢ 1(<2)◂{ }
;; rsp=0 , %2208~1(<2)◂{ } %2207~1'(= r ) %2206~0'(= r ) %2205~{ } 
	jmp LB_3542
LB_3542:
; $ %[ "glb_etr 4" ] ⊢ %[ "glb_etr 4" ]
;; rsp=0 , %2209~%[ "glb_etr 4" ] %2208~1(<2)◂{ } %2207~1'(= r ) %2206~0'(= r ) %2205~{ } 
; #21 { { 0'(= r ) 1'(= r ) %[ "glb_etr 4" ] } 1(<2)◂{ } } ⊢ 0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "glb_etr 4" ] } 1(<2)◂{ } }
;; rsp=0 , %2210~0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "glb_etr 4" ] } 1(<2)◂{ } } %2205~{ } 
; #192 0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "glb_etr 4" ] } 1(<2)◂{ } } ⊢ 1(<2)◂0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "glb_etr 4" ] } 1(<2)◂{ } }
;; rsp=0 , %2211~1(<2)◂0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "glb_etr 4" ] } 1(<2)◂{ } } %2205~{ } 
; #22 1(<2)◂0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "glb_etr 4" ] } 1(<2)◂{ } } ⊢ 0(<2)◂1(<2)◂0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "glb_etr 4" ] } 1(<2)◂{ } }
;; rsp=0 , %2212~0(<2)◂1(<2)◂0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "glb_etr 4" ] } 1(<2)◂{ } } %2205~{ } 
; ∎ 0(<2)◂1(<2)◂0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "glb_etr 4" ] } 1(<2)◂{ } }
; .dlt.ptn { }
; .mov_ptn2 0(<2)◂1(<2)◂0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "glb_etr 4" ] } 1(<2)◂{ } } ⊢ 2'(= a3◂ [ a35◂ [ a31◂ [ ]]] )
; .mov_ptn 0(<2)◂1(<2)◂0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "glb_etr 4" ] } 1(<2)◂{ } } ⊢ 2'(= a3◂ [ a35◂ [ a31◂ [ ]]] )
	mov rax,[SS_RCD_2_TOP]
	mov rsi,[rax] 
	mov QWORD [SS_RCD_2_TOP],rsi
	mov QWORD [rax],0
	mov r9,rax
	mov rax,[SS_RCD_3_TOP]
	mov rsi,[rax] 
	mov QWORD [SS_RCD_3_TOP],rsi
	mov QWORD [rax],0
	mov r10,rax
	mov rax,r13
	mov QWORD [r10+8+8*0],rax
	mov rax,r14
	mov QWORD [r10+8+8*1],rax
	mov rsi,1  
	mov rdi,24
	xor rax,rax 
	C_CALL_SF calloc
	mov QWORD [rax],9
	mov BYTE [rax+8+0],103
	mov BYTE [rax+8+1],108
	mov BYTE [rax+8+2],98
	mov BYTE [rax+8+3],95
	mov BYTE [rax+8+4],101
	mov BYTE [rax+8+5],116
	mov BYTE [rax+8+6],114
	mov BYTE [rax+8+7],32
	mov BYTE [rax+8+8],52
	mov QWORD [r10+8+8*2],rax
	mov rax,r10
	mov QWORD [r9+8+8*0],rax
	mov rax,unt 
	mov rax,unt_1
	mov QWORD [r9+8+8*1],rax
	mov rax,r9
	mov BYTE [rax+6],0
	mov rdi,rax
	mov rax,r15
	mov r15,QWORD [r15] 
	mov QWORD [rax],0
	mov BYTE [rax+6],1
	mov QWORD [rax+8],rdi
	mov rdi,rax
	mov rax,r15
	mov r15,QWORD [r15] 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	jmp LB_3540
LB_3540:
	cmp BYTE [r8+6],0
	jnz LB_3532
	pop r14
	pop r9
	add rsp,8
	pop r13
	jmp LB_3521
LB_3532:
	pop rdi
	pop r9 
	pop r14
	pop r13
	jmp LB_3521
LB_3521:
	cmp BYTE [r8+6],0
	jnz LB_3543
	jmp LB_3544
LB_3543:
	add rsp,0
	add rsp,8
	pop r9 
	pop r14 
	pop r13
	ret
LB_3544:
	mov QWORD [rsp+8*0],r14
	mov r8,[r8+8]
; .mov_ptn2 2'(= a35◂ [ a31◂ [ ]] ) ⊢ 3'(= a35◂ [ a31◂ [ ]] )
	mov r10,r9
; .mov_ptn 2'(= a35◂ [ a31◂ [ ]] ) ⊢ 3'(= a35◂ [ a31◂ [ ]] )
	mov rax,r8
	mov r9,rax
	mov r13,QWORD [rsp+16+8*0]
	mov r14,QWORD [rsp+8*0]
	jmp LB_3546
LB_3546
;; rsp=0 , %2213~3'(= a35◂ [ a31◂ [ ]] ) %2199~1'(= r ) %2198~0'(= r ) 
; #22 3'(= a35◂ [ a31◂ [ ]] ) ⊢ 0(<2)◂3'(= a35◂ [ a31◂ [ ]] )
;; rsp=0 , %2214~0(<2)◂3'(= a35◂ [ a31◂ [ ]] ) %2199~1'(= r ) %2198~0'(= r ) 
; ∎ 0(<2)◂3'(= a35◂ [ a31◂ [ ]] )
; .dlt.ptn 1'(= r )
; .dlt.ptn 0'(= r )
; .mov_ptn2 0(<2)◂3'(= a35◂ [ a31◂ [ ]] ) ⊢ 2'(= a3◂ [ a35◂ [ a31◂ [ ]]] )
; .mov_ptn 0(<2)◂3'(= a35◂ [ a31◂ [ ]] ) ⊢ 2'(= a3◂ [ a35◂ [ a31◂ [ ]]] )
	mov rax,r9
	mov rdi,rax
	mov rax,r15
	mov r15,QWORD [r15] 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	jmp LB_3545
LB_3545:
	cmp BYTE [r8+6],0
	jnz LB_3511
	pop r14
	pop r9
	add rsp,8
	pop r13
	ret
LB_3511:
	pop rdi
	pop r9 
	pop r14
	pop r13
	ret
ETR_245:
	mov r9,0x0000_ffff_ffff_ffff
	and r9,[r13]
	call GRM_245
	ret
GRM_245:
	sub rsp,32
	mov QWORD [rsp+24],r13
	mov QWORD [rsp+16],r14 
	mov QWORD [rsp+8],r9
	jmp LB_3549
LB_3548:
	add r14,1 
LB_3549:
	cmp r14,r9
	jge LB_3550
	JZ_SPC BYTE [r13+8+r14], LB_3548
LB_3550
	call GRM_222
	cmp BYTE [r8+6],0
	jnz LB_3553
	jmp LB_3554
LB_3553:
	jmp LB_3551
LB_3554:
; .mov_ptn2 2'(= *{ } ) ⊢ { }
; .mov_ptn 2'(= *{ } ) ⊢ { }
	jmp LB_3552
LB_3551:
	add rsp,0
	jmp LB_3547
LB_3552:
	jmp LB_3556
LB_3555:
	add r14,1 
LB_3556:
	cmp r14,r9
	jge LB_3557
	JZ_SPC BYTE [r13+8+r14], LB_3555
LB_3557
	call GRM_245
	cmp BYTE [r8+6],0
	jnz LB_3560
	jmp LB_3561
LB_3560:
	jmp LB_3558
LB_3561:
; .mov_ptn2 2'(= *{ } ) ⊢ { }
; .mov_ptn 2'(= *{ } ) ⊢ { }
	jmp LB_3559
LB_3558:
	add rsp,0
	jmp LB_3547
LB_3559:
	mov QWORD [rsp+8*0],r14
	mov r13,QWORD [rsp+16+8*0]
	mov r14,QWORD [rsp+8*0]
	jmp LB_3563
LB_3563
;; rsp=0 , %2218~1'(= r ) %2217~0'(= r ) %2216~{ } %2215~{ } 
; #22 { } ⊢ 0(<2)◂{ }
;; rsp=0 , %2219~0(<2)◂{ } %2218~1'(= r ) %2217~0'(= r ) %2216~{ } %2215~{ } 
; ∎ 0(<2)◂{ }
; .dlt.ptn 1'(= r )
; .dlt.ptn 0'(= r )
; .dlt.ptn { }
; .dlt.ptn { }
; .mov_ptn2 0(<2)◂{ } ⊢ 2'(= a3◂ [ *{ }] )
; .mov_ptn 0(<2)◂{ } ⊢ 2'(= a3◂ [ *{ }] )
	mov rax,unt 
	mov rax,unt_0
	mov r8,rax
	jmp LB_3562
LB_3562:
	cmp BYTE [r8+6],0
	jnz LB_3547
	pop r14
	pop r9
	add rsp,8
	pop r13
	ret
LB_3547:
	mov r9,QWORD [rsp+8]
	mov r14,QWORD [rsp+16]
	mov r13,QWORD [rsp+24]
	mov QWORD [rsp+8*0],r14
	mov r13,QWORD [rsp+16+8*0]
	mov r14,QWORD [rsp+8*0]
	jmp LB_3566
LB_3566
;; rsp=0 , %2221~1'(= r ) %2220~0'(= r ) 
; #22 { } ⊢ 0(<2)◂{ }
;; rsp=0 , %2222~0(<2)◂{ } %2221~1'(= r ) %2220~0'(= r ) 
; ∎ 0(<2)◂{ }
; .dlt.ptn 1'(= r )
; .dlt.ptn 0'(= r )
; .mov_ptn2 0(<2)◂{ } ⊢ 2'(= a3◂ [ *{ }] )
; .mov_ptn 0(<2)◂{ } ⊢ 2'(= a3◂ [ *{ }] )
	mov rax,unt 
	mov rax,unt_0
	mov r8,rax
	jmp LB_3565
LB_3565:
	cmp BYTE [r8+6],0
	jnz LB_3564
	pop r14
	pop r9
	add rsp,8
	pop r13
	ret
LB_3564:
	pop rdi
	pop r9 
	pop r14
	pop r13
	ret
ETR_246:
	mov r9,0x0000_ffff_ffff_ffff
	and r9,[r13]
	call GRM_246
	ret
GRM_246:
	sub rsp,32
	mov QWORD [rsp+24],r13
	mov QWORD [rsp+16],r14 
	mov QWORD [rsp+8],r9
	jmp LB_3569
LB_3568:
	add r14,1 
LB_3569:
	cmp r14,r9
	jge LB_3570
	JZ_SPC BYTE [r13+8+r14], LB_3568
LB_3570
	lea rax,[r14+6]
	cmp rax,r9
	jg LB_3573
	jmp LB_3574
LB_3573:
	mov r8,unt_1
	jmp LB_3571
LB_3574:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],226
	jnz LB_3575
	cmp BYTE [rdi+1],136
	jnz LB_3575
	cmp BYTE [rdi+2],142
	jnz LB_3575
	cmp BYTE [rdi+3],226
	jnz LB_3575
	cmp BYTE [rdi+4],136
	jnz LB_3575
	cmp BYTE [rdi+5],142
	jnz LB_3575
	jmp LB_3576
LB_3575:
	mov r8,unt_1
	jmp LB_3571
LB_3576:
	add r14,6
	jmp LB_3572
LB_3571:
	add rsp,0
	jmp LB_3567
LB_3572:
	mov QWORD [rsp+8*0],r14
	mov r13,QWORD [rsp+16+8*0]
	mov r14,QWORD [rsp+8*0]
	jmp LB_3578
LB_3578
;; rsp=0 , %2224~1'(= r ) %2223~0'(= r ) 
; #22 { } ⊢ 0(<2)◂{ }
;; rsp=0 , %2225~0(<2)◂{ } %2224~1'(= r ) %2223~0'(= r ) 
; ∎ 0(<2)◂{ }
; .dlt.ptn 1'(= r )
; .dlt.ptn 0'(= r )
; .mov_ptn2 0(<2)◂{ } ⊢ 2'(= a3◂ [ *{ }] )
; .mov_ptn 0(<2)◂{ } ⊢ 2'(= a3◂ [ *{ }] )
	mov rax,unt 
	mov rax,unt_0
	mov r8,rax
	jmp LB_3577
LB_3577:
	cmp BYTE [r8+6],0
	jnz LB_3567
	pop r14
	pop r9
	add rsp,8
	pop r13
	ret
LB_3567:
	mov r9,QWORD [rsp+8]
	mov r14,QWORD [rsp+16]
	mov r13,QWORD [rsp+24]
	jmp LB_3581
LB_3580:
	add r14,1 
LB_3581:
	cmp r14,r9
	jge LB_3582
	JZ_SPC BYTE [r13+8+r14], LB_3580
LB_3582
	lea rax,[r14+4]
	cmp rax,r9
	jg LB_3585
	jmp LB_3586
LB_3585:
	mov r8,unt_1
	jmp LB_3583
LB_3586:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],194
	jnz LB_3587
	cmp BYTE [rdi+1],167
	jnz LB_3587
	cmp BYTE [rdi+2],194
	jnz LB_3587
	cmp BYTE [rdi+3],167
	jnz LB_3587
	jmp LB_3588
LB_3587:
	mov r8,unt_1
	jmp LB_3583
LB_3588:
	add r14,4
	jmp LB_3584
LB_3583:
	add rsp,0
	jmp LB_3579
LB_3584:
	sub rsp,32
	mov QWORD [rsp+24],r13
	mov QWORD [rsp+16],r14 
	mov QWORD [rsp+8],r9
	jmp LB_3592
LB_3591:
	add r14,1 
LB_3592:
	cmp r14,r9
	jge LB_3593
	JZ_SPC BYTE [r13+8+r14], LB_3591
LB_3593
	call GRM_74
	cmp BYTE [r8+6],0
	jnz LB_3596
	jmp LB_3597
LB_3596:
	jmp LB_3594
LB_3597:
	sub rsp,8
; .mov_ptn2 2'(= {| l |} ) ⊢ 8'(= {| l |} )
; .mov_ptn 2'(= {| l |} ) ⊢ 8'(= {| l |} )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_3595
LB_3594:
	add rsp,0
	jmp LB_3590
LB_3595:
	jmp LB_3599
LB_3598:
	add r14,1 
LB_3599:
	cmp r14,r9
	jge LB_3600
	JZ_SPC BYTE [r13+8+r14], LB_3598
LB_3600
	lea rax,[r14+1]
	cmp rax,r9
	jg LB_3603
	jmp LB_3604
LB_3603:
	mov r8,unt_1
	jmp LB_3601
LB_3604:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],61
	jnz LB_3605
	jmp LB_3606
LB_3605:
	mov r8,unt_1
	jmp LB_3601
LB_3606:
	add r14,1
	jmp LB_3602
LB_3601:
	add rsp,8
	jmp LB_3590
LB_3602:
	jmp LB_3608
LB_3607:
	add r14,1 
LB_3608:
	cmp r14,r9
	jge LB_3609
	JZ_SPC BYTE [r13+8+r14], LB_3607
LB_3609
	call GRM_189
	cmp BYTE [r8+6],0
	jnz LB_3612
	jmp LB_3613
LB_3612:
	jmp LB_3610
LB_3613:
	sub rsp,8
	mov r8,[r8+8]
; .mov_ptn2 2'(= a9◂ [ ] ) ⊢ 9'(= a9◂ [ ] )
; .mov_ptn 2'(= a9◂ [ ] ) ⊢ 9'(= a9◂ [ ] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_3611
LB_3610:
	add rsp,8
	jmp LB_3590
LB_3611:
	jmp LB_3615
LB_3614:
	add r14,1 
LB_3615:
	cmp r14,r9
	jge LB_3616
	JZ_SPC BYTE [r13+8+r14], LB_3614
LB_3616
	call GRM_246
	cmp BYTE [r8+6],0
	jnz LB_3619
	jmp LB_3620
LB_3619:
	jmp LB_3617
LB_3620:
; .mov_ptn2 2'(= *{ } ) ⊢ { }
; .mov_ptn 2'(= *{ } ) ⊢ { }
	jmp LB_3618
LB_3617:
	add rsp,16
	jmp LB_3590
LB_3618:
	mov QWORD [rsp+8*2],r14
	mov r13,QWORD [rsp+16+8*2]
	mov r14,QWORD [rsp+8*2]
	jmp LB_3622
LB_3622
;; rsp=2 , %2232~1'(= r ) %2231~0'(= r ) %2230~{ } %2229~9'(= a9◂ [ ] ) %2228~8'(= {| l |} ) 
; #22 { } ⊢ 0(<2)◂{ }
;; rsp=2 , %2233~0(<2)◂{ } %2232~1'(= r ) %2231~0'(= r ) %2230~{ } %2229~9'(= a9◂ [ ] ) %2228~8'(= {| l |} ) 
; ∎ 0(<2)◂{ }
; .dlt.ptn 1'(= r )
; .dlt.ptn 0'(= r )
; .dlt.ptn { }
; .dlt.ptn 9'(= a9◂ [ ] )
;	.dlt adt ⊢ _  
; .dlt.ptn 8'(= {| l |} )
	mov rdi,QWORD [rsp-8+8*2]
	call free_s8 
; .mov_ptn2 0(<2)◂{ } ⊢ 2'(= a3◂ [ *{ }] )
; .mov_ptn 0(<2)◂{ } ⊢ 2'(= a3◂ [ *{ }] )
	mov rax,unt 
	mov rax,unt_0
	mov r8,rax
	add rsp,16
	jmp LB_3621
LB_3621:
	cmp BYTE [r8+6],0
	jnz LB_3590
	pop r14
	pop r9
	add rsp,8
	pop r13
	jmp LB_3589
LB_3590:
	mov r9,QWORD [rsp+8]
	mov r14,QWORD [rsp+16]
	mov r13,QWORD [rsp+24]
	jmp LB_3625
LB_3624:
	add r14,1 
LB_3625:
	cmp r14,r9
	jge LB_3626
	JZ_SPC BYTE [r13+8+r14], LB_3624
LB_3626
	call GRM_246
	cmp BYTE [r8+6],0
	jnz LB_3629
	jmp LB_3630
LB_3629:
	jmp LB_3627
LB_3630:
; .mov_ptn2 2'(= *{ } ) ⊢ { }
; .mov_ptn 2'(= *{ } ) ⊢ { }
	jmp LB_3628
LB_3627:
	add rsp,0
	jmp LB_3623
LB_3628:
	jmp LB_3632
LB_3631:
	add r14,1 
LB_3632:
	cmp r14,r9
	jge LB_3633
	JZ_SPC BYTE [r13+8+r14], LB_3631
LB_3633
	call GRM_246
	cmp BYTE [r8+6],0
	jnz LB_3636
	jmp LB_3637
LB_3636:
	jmp LB_3634
LB_3637:
; .mov_ptn2 2'(= *{ } ) ⊢ { }
; .mov_ptn 2'(= *{ } ) ⊢ { }
	jmp LB_3635
LB_3634:
	add rsp,0
	jmp LB_3623
LB_3635:
	mov QWORD [rsp+8*0],r14
	mov r13,QWORD [rsp+16+8*0]
	mov r14,QWORD [rsp+8*0]
	jmp LB_3639
LB_3639
;; rsp=0 , %2237~1'(= r ) %2236~0'(= r ) %2235~{ } %2234~{ } 
; #22 { } ⊢ 0(<2)◂{ }
;; rsp=0 , %2238~0(<2)◂{ } %2237~1'(= r ) %2236~0'(= r ) %2235~{ } %2234~{ } 
; ∎ 0(<2)◂{ }
; .dlt.ptn 1'(= r )
; .dlt.ptn 0'(= r )
; .dlt.ptn { }
; .dlt.ptn { }
; .mov_ptn2 0(<2)◂{ } ⊢ 2'(= a3◂ [ *{ }] )
; .mov_ptn 0(<2)◂{ } ⊢ 2'(= a3◂ [ *{ }] )
	mov rax,unt 
	mov rax,unt_0
	mov r8,rax
	jmp LB_3638
LB_3638:
	cmp BYTE [r8+6],0
	jnz LB_3623
	pop r14
	pop r9
	add rsp,8
	pop r13
	jmp LB_3589
LB_3623:
	pop rdi
	pop r9 
	pop r14
	pop r13
	jmp LB_3589
LB_3589:
	cmp BYTE [r8+6],0
	jnz LB_3640
	jmp LB_3641
LB_3640:
	add rsp,0
	add rsp,8
	pop r9 
	pop r14 
	pop r13
	ret
LB_3641:
	mov QWORD [rsp+8*0],r14
; .mov_ptn2 2'(= *{ } ) ⊢ { }
; .mov_ptn 2'(= *{ } ) ⊢ { }
	mov r13,QWORD [rsp+16+8*0]
	mov r14,QWORD [rsp+8*0]
	jmp LB_3643
LB_3643
;; rsp=0 , %2239~{ } %2227~1'(= r ) %2226~0'(= r ) 
; #22 { } ⊢ 0(<2)◂{ }
;; rsp=0 , %2240~0(<2)◂{ } %2239~{ } %2227~1'(= r ) %2226~0'(= r ) 
; ∎ 0(<2)◂{ }
; .dlt.ptn { }
; .dlt.ptn 1'(= r )
; .dlt.ptn 0'(= r )
; .mov_ptn2 0(<2)◂{ } ⊢ 2'(= a3◂ [ *{ }] )
; .mov_ptn 0(<2)◂{ } ⊢ 2'(= a3◂ [ *{ }] )
	mov rax,unt 
	mov rax,unt_0
	mov r8,rax
	jmp LB_3642
LB_3642:
	cmp BYTE [r8+6],0
	jnz LB_3579
	pop r14
	pop r9
	add rsp,8
	pop r13
	ret
LB_3579:
	mov r9,QWORD [rsp+8]
	mov r14,QWORD [rsp+16]
	mov r13,QWORD [rsp+24]
	jmp LB_3646
LB_3645:
	add r14,1 
LB_3646:
	cmp r14,r9
	jge LB_3647
	JZ_SPC BYTE [r13+8+r14], LB_3645
LB_3647
	cmp r14,r9
	jge LB_3650
	jmp LB_3651
LB_3650:
	mov r8,unt_1 
	jmp LB_3648
LB_3651:
	movzx rdi,BYTE [r13+8+r14]
	push rdi 
	add r14,1 
	jmp LB_3649
LB_3648:
	add rsp,0
	jmp LB_3644
LB_3649:
	jmp LB_3653
LB_3652:
	add r14,1 
LB_3653:
	cmp r14,r9
	jge LB_3654
	JZ_SPC BYTE [r13+8+r14], LB_3652
LB_3654
	call GRM_246
	cmp BYTE [r8+6],0
	jnz LB_3657
	jmp LB_3658
LB_3657:
	jmp LB_3655
LB_3658:
; .mov_ptn2 2'(= *{ } ) ⊢ { }
; .mov_ptn 2'(= *{ } ) ⊢ { }
	jmp LB_3656
LB_3655:
	add rsp,8
	jmp LB_3644
LB_3656:
	mov QWORD [rsp+8*1],r14
	mov r13,QWORD [rsp+16+8*1]
	mov r14,QWORD [rsp+8*1]
	jmp LB_3660
LB_3660
;; rsp=1 , %2244~1'(= r ) %2243~0'(= r ) %2242~{ } %2241~8'(= r ) 
; #22 { } ⊢ 0(<2)◂{ }
;; rsp=1 , %2245~0(<2)◂{ } %2244~1'(= r ) %2243~0'(= r ) %2242~{ } %2241~8'(= r ) 
; ∎ 0(<2)◂{ }
; .dlt.ptn 1'(= r )
; .dlt.ptn 0'(= r )
; .dlt.ptn { }
; .dlt.ptn 8'(= r )
; .mov_ptn2 0(<2)◂{ } ⊢ 2'(= a3◂ [ *{ }] )
; .mov_ptn 0(<2)◂{ } ⊢ 2'(= a3◂ [ *{ }] )
	mov rax,unt 
	mov rax,unt_0
	mov r8,rax
	add rsp,8
	jmp LB_3659
LB_3659:
	cmp BYTE [r8+6],0
	jnz LB_3644
	pop r14
	pop r9
	add rsp,8
	pop r13
	ret
LB_3644:
	mov r9,QWORD [rsp+8]
	mov r14,QWORD [rsp+16]
	mov r13,QWORD [rsp+24]
	mov QWORD [rsp+8*0],r14
	mov r13,QWORD [rsp+16+8*0]
	mov r14,QWORD [rsp+8*0]
	jmp LB_3663
LB_3663
;; rsp=0 , %2247~1'(= r ) %2246~0'(= r ) 
; #22 { } ⊢ 0(<2)◂{ }
;; rsp=0 , %2248~0(<2)◂{ } %2247~1'(= r ) %2246~0'(= r ) 
; ∎ 0(<2)◂{ }
; .dlt.ptn 1'(= r )
; .dlt.ptn 0'(= r )
; .mov_ptn2 0(<2)◂{ } ⊢ 2'(= a3◂ [ *{ }] )
; .mov_ptn 0(<2)◂{ } ⊢ 2'(= a3◂ [ *{ }] )
	mov rax,unt 
	mov rax,unt_0
	mov r8,rax
	jmp LB_3662
LB_3662:
	cmp BYTE [r8+6],0
	jnz LB_3661
	pop r14
	pop r9
	add rsp,8
	pop r13
	ret
LB_3661:
	pop rdi
	pop r9 
	pop r14
	pop r13
	ret
ETR_247:
	mov r9,0x0000_ffff_ffff_ffff
	and r9,[r13]
	call GRM_247
	ret
GRM_247:
	sub rsp,32
	mov QWORD [rsp+24],r13
	mov QWORD [rsp+16],r14 
	mov QWORD [rsp+8],r9
	jmp LB_3666
LB_3665:
	add r14,1 
LB_3666:
	cmp r14,r9
	jge LB_3667
	JZ_SPC BYTE [r13+8+r14], LB_3665
LB_3667
	lea rax,[r14+1]
	cmp rax,r9
	jg LB_3670
	jmp LB_3671
LB_3670:
	mov r8,unt_1
	jmp LB_3668
LB_3671:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],61
	jnz LB_3672
	jmp LB_3673
LB_3672:
	mov r8,unt_1
	jmp LB_3668
LB_3673:
	add r14,1
	jmp LB_3669
LB_3668:
	add rsp,0
	jmp LB_3664
LB_3669:
	jmp LB_3675
LB_3674:
	add r14,1 
LB_3675:
	cmp r14,r9
	jge LB_3676
	JZ_SPC BYTE [r13+8+r14], LB_3674
LB_3676
	call GRM_189
	cmp BYTE [r8+6],0
	jnz LB_3679
	jmp LB_3680
LB_3679:
	jmp LB_3677
LB_3680:
	sub rsp,8
	mov r8,[r8+8]
; .mov_ptn2 2'(= a9◂ [ ] ) ⊢ 8'(= a9◂ [ ] )
; .mov_ptn 2'(= a9◂ [ ] ) ⊢ 8'(= a9◂ [ ] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_3678
LB_3677:
	add rsp,0
	pop rdi
	pop r9 
	pop r14
	pop r13
	ret
LB_3678:
	jmp LB_3682
LB_3681:
	add r14,1 
LB_3682:
	cmp r14,r9
	jge LB_3683
	JZ_SPC BYTE [r13+8+r14], LB_3681
LB_3683
	call GRM_217
	cmp BYTE [r8+6],0
	jnz LB_3686
	jmp LB_3687
LB_3686:
	jmp LB_3684
LB_3687:
	sub rsp,8
	mov r8,[r8+8]
; .mov_ptn2 2'(= a35◂ [ *{ }] ) ⊢ 9'(= a35◂ [ *{ }] )
; .mov_ptn 2'(= a35◂ [ *{ }] ) ⊢ 9'(= a35◂ [ *{ }] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_3685
LB_3684:
	add rsp,8
	pop rdi
	pop r9 
	pop r14
	pop r13
	ret
LB_3685:
	mov QWORD [rsp+8*2],r14
	mov r13,QWORD [rsp+16+8*2]
	mov r14,QWORD [rsp+8*2]
	jmp LB_3689
LB_3689
;; rsp=2 , %2252~1'(= r ) %2251~0'(= r ) %2250~9'(= a35◂ [ *{ }] ) %2249~8'(= a9◂ [ ] ) 
; #169 8'(= a9◂ [ ] ) ⊢ 1(<2)◂8'(= a9◂ [ ] )
;; rsp=2 , %2253~1(<2)◂8'(= a9◂ [ ] ) %2252~1'(= r ) %2251~0'(= r ) %2250~9'(= a35◂ [ *{ }] ) 
; #193 1(<2)◂8'(= a9◂ [ ] ) ⊢ 0(<2)◂1(<2)◂8'(= a9◂ [ ] )
;; rsp=2 , %2254~0(<2)◂1(<2)◂8'(= a9◂ [ ] ) %2252~1'(= r ) %2251~0'(= r ) %2250~9'(= a35◂ [ *{ }] ) 
; #22 0(<2)◂1(<2)◂8'(= a9◂ [ ] ) ⊢ 0(<2)◂0(<2)◂1(<2)◂8'(= a9◂ [ ] )
;; rsp=2 , %2255~0(<2)◂0(<2)◂1(<2)◂8'(= a9◂ [ ] ) %2252~1'(= r ) %2251~0'(= r ) %2250~9'(= a35◂ [ *{ }] ) 
; ∎ 0(<2)◂0(<2)◂1(<2)◂8'(= a9◂ [ ] )
; .dlt.ptn 1'(= r )
; .dlt.ptn 0'(= r )
; .dlt.ptn 9'(= a35◂ [ *{ }] )
;	.dlt adt ⊢ _  
; .mov_ptn2 0(<2)◂0(<2)◂1(<2)◂8'(= a9◂ [ ] ) ⊢ 2'(= a3◂ [ a35◂ [ a32◂ [ ]]] )
; .mov_ptn 0(<2)◂0(<2)◂1(<2)◂8'(= a9◂ [ ] ) ⊢ 2'(= a3◂ [ a35◂ [ a32◂ [ ]]] )
	mov rax,QWORD [rsp-8+8*2]
	mov rdi,rax
	mov rax,r15
	mov r15,QWORD [r15] 
	mov QWORD [rax],0
	mov BYTE [rax+6],1
	mov QWORD [rax+8],rdi
	mov rdi,rax
	mov rax,r15
	mov r15,QWORD [r15] 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov rdi,rax
	mov rax,r15
	mov r15,QWORD [r15] 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,16
	jmp LB_3688
LB_3688:
	cmp BYTE [r8+6],0
	jnz LB_3664
	pop r14
	pop r9
	add rsp,8
	pop r13
	ret
LB_3664:
	mov r9,QWORD [rsp+8]
	mov r14,QWORD [rsp+16]
	mov r13,QWORD [rsp+24]
	jmp LB_3692
LB_3691:
	add r14,1 
LB_3692:
	cmp r14,r9
	jge LB_3693
	JZ_SPC BYTE [r13+8+r14], LB_3691
LB_3693
	call GRM_217
	cmp BYTE [r8+6],0
	jnz LB_3696
	jmp LB_3697
LB_3696:
	jmp LB_3694
LB_3697:
	sub rsp,8
	mov r8,[r8+8]
; .mov_ptn2 2'(= a35◂ [ *{ }] ) ⊢ 8'(= a35◂ [ *{ }] )
; .mov_ptn 2'(= a35◂ [ *{ }] ) ⊢ 8'(= a35◂ [ *{ }] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_3695
LB_3694:
	add rsp,0
	jmp LB_3690
LB_3695:
	jmp LB_3699
LB_3698:
	add r14,1 
LB_3699:
	cmp r14,r9
	jge LB_3700
	JZ_SPC BYTE [r13+8+r14], LB_3698
LB_3700
	call GRM_248
	cmp BYTE [r8+6],0
	jnz LB_3703
	jmp LB_3704
LB_3703:
	jmp LB_3701
LB_3704:
	sub rsp,8
	mov r8,[r8+8]
; .mov_ptn2 2'(= a35◂ [ a2◂ [ a31◂ [ ]]] ) ⊢ 9'(= a35◂ [ a2◂ [ a31◂ [ ]]] )
; .mov_ptn 2'(= a35◂ [ a2◂ [ a31◂ [ ]]] ) ⊢ 9'(= a35◂ [ a2◂ [ a31◂ [ ]]] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_3702
LB_3701:
	add rsp,8
	jmp LB_3690
LB_3702:
	mov QWORD [rsp+8*2],r14
	mov r13,QWORD [rsp+16+8*2]
	mov r14,QWORD [rsp+8*2]
	jmp LB_3706
LB_3706
;; rsp=2 , %2259~1'(= r ) %2258~0'(= r ) %2257~9'(= a35◂ [ a2◂ [ a31◂ [ ]]] ) %2256~8'(= a35◂ [ *{ }] ) 
;; ? 9'(= a35◂ [ a2◂ [ a31◂ [ ]]] ) ⊢ 0(<2)◂2'(= a2◂ [ a31◂ [ ]] )
	mov rdi,QWORD [rsp-8+8*1]
	cmp BYTE [rdi+6],0
	jnz LB_3707
	mov rax,QWORD [rdi+8]
	mov r8,rax
;; rsp=2 , %2261~2'(= a2◂ [ a31◂ [ ]] ) %2259~1'(= r ) %2258~0'(= r ) %2256~8'(= a35◂ [ *{ }] ) 
; #170 2'(= a2◂ [ a31◂ [ ]] ) ⊢ 0(<2)◂2'(= a2◂ [ a31◂ [ ]] )
;; rsp=2 , %2262~0(<2)◂2'(= a2◂ [ a31◂ [ ]] ) %2259~1'(= r ) %2258~0'(= r ) %2256~8'(= a35◂ [ *{ }] ) 
; #193 0(<2)◂2'(= a2◂ [ a31◂ [ ]] ) ⊢ 0(<2)◂0(<2)◂2'(= a2◂ [ a31◂ [ ]] )
;; rsp=2 , %2263~0(<2)◂0(<2)◂2'(= a2◂ [ a31◂ [ ]] ) %2259~1'(= r ) %2258~0'(= r ) %2256~8'(= a35◂ [ *{ }] ) 
; #22 0(<2)◂0(<2)◂2'(= a2◂ [ a31◂ [ ]] ) ⊢ 0(<2)◂0(<2)◂0(<2)◂2'(= a2◂ [ a31◂ [ ]] )
;; rsp=2 , %2264~0(<2)◂0(<2)◂0(<2)◂2'(= a2◂ [ a31◂ [ ]] ) %2259~1'(= r ) %2258~0'(= r ) %2256~8'(= a35◂ [ *{ }] ) 
; ∎ 0(<2)◂0(<2)◂0(<2)◂2'(= a2◂ [ a31◂ [ ]] )
; .dlt.ptn 1'(= r )
; .dlt.ptn 0'(= r )
; .dlt.ptn 8'(= a35◂ [ *{ }] )
;	.dlt adt ⊢ _  
; .mov_ptn2 0(<2)◂0(<2)◂0(<2)◂2'(= a2◂ [ a31◂ [ ]] ) ⊢ 2'(= a3◂ [ a35◂ [ a32◂ [ ]]] )
	mov r13,r8
; .mov_ptn 0(<2)◂0(<2)◂0(<2)◂0'(= a2◂ [ a31◂ [ ]] ) ⊢ 2'(= a3◂ [ a35◂ [ a32◂ [ ]]] )
	mov rax,r13
	mov rdi,rax
	mov rax,r15
	mov r15,QWORD [r15] 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov rdi,rax
	mov rax,r15
	mov r15,QWORD [r15] 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov rdi,rax
	mov rax,r15
	mov r15,QWORD [r15] 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,16
	jmp LB_3705
LB_3707:
;; ?. 9'(= a35◂ [ a2◂ [ a31◂ [ ]]] ) ⊢ 1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] )
	mov rax,QWORD [rdi+8]
	mov r8,rax
;; rsp=2 , %2260~2'(= a2◂ [ *{ rr{| l |}}] ) %2259~1'(= r ) %2258~0'(= r ) %2256~8'(= a35◂ [ *{ }] ) 
; #192 2'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] )
;; rsp=2 , %2265~1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] ) %2259~1'(= r ) %2258~0'(= r ) %2256~8'(= a35◂ [ *{ }] ) 
; #22 1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 0(<2)◂1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] )
;; rsp=2 , %2266~0(<2)◂1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] ) %2259~1'(= r ) %2258~0'(= r ) %2256~8'(= a35◂ [ *{ }] ) 
; ∎ 0(<2)◂1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] )
; .dlt.ptn 1'(= r )
; .dlt.ptn 0'(= r )
; .dlt.ptn 8'(= a35◂ [ *{ }] )
;	.dlt adt ⊢ _  
; .mov_ptn2 0(<2)◂1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 2'(= a3◂ [ a35◂ [ a32◂ [ ]]] )
	mov r13,r8
; .mov_ptn 0(<2)◂1(<2)◂0'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 2'(= a3◂ [ a35◂ [ a32◂ [ ]]] )
	mov rax,r13
	mov rdi,rax
	mov rax,r15
	mov r15,QWORD [r15] 
	mov QWORD [rax],0
	mov BYTE [rax+6],1
	mov QWORD [rax+8],rdi
	mov rdi,rax
	mov rax,r15
	mov r15,QWORD [r15] 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,16
	jmp LB_3705
LB_3705:
	cmp BYTE [r8+6],0
	jnz LB_3690
	pop r14
	pop r9
	add rsp,8
	pop r13
	ret
LB_3690:
	pop rdi
	pop r9 
	pop r14
	pop r13
	ret
ETR_248:
	mov r9,0x0000_ffff_ffff_ffff
	and r9,[r13]
	call GRM_248
	ret
GRM_248:
	sub rsp,32
	mov QWORD [rsp+24],r13
	mov QWORD [rsp+16],r14 
	mov QWORD [rsp+8],r9
	jmp LB_3710
LB_3709:
	add r14,1 
LB_3710:
	cmp r14,r9
	jge LB_3711
	JZ_SPC BYTE [r13+8+r14], LB_3709
LB_3711
	call GRM_217
	cmp BYTE [r8+6],0
	jnz LB_3714
	jmp LB_3715
LB_3714:
	jmp LB_3712
LB_3715:
	sub rsp,8
	mov r8,[r8+8]
; .mov_ptn2 2'(= a35◂ [ *{ }] ) ⊢ 8'(= a35◂ [ *{ }] )
; .mov_ptn 2'(= a35◂ [ *{ }] ) ⊢ 8'(= a35◂ [ *{ }] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_3713
LB_3712:
	add rsp,0
	jmp LB_3708
LB_3713:
	jmp LB_3717
LB_3716:
	add r14,1 
LB_3717:
	cmp r14,r9
	jge LB_3718
	JZ_SPC BYTE [r13+8+r14], LB_3716
LB_3718
	lea rax,[r14+6]
	cmp rax,r9
	jg LB_3721
	jmp LB_3722
LB_3721:
	mov r8,unt_1
	jmp LB_3719
LB_3722:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],226
	jnz LB_3723
	cmp BYTE [rdi+1],136
	jnz LB_3723
	cmp BYTE [rdi+2],142
	jnz LB_3723
	cmp BYTE [rdi+3],226
	jnz LB_3723
	cmp BYTE [rdi+4],136
	jnz LB_3723
	cmp BYTE [rdi+5],142
	jnz LB_3723
	jmp LB_3724
LB_3723:
	mov r8,unt_1
	jmp LB_3719
LB_3724:
	add r14,6
	jmp LB_3720
LB_3719:
	add rsp,8
	jmp LB_3708
LB_3720:
	jmp LB_3726
LB_3725:
	add r14,1 
LB_3726:
	cmp r14,r9
	jge LB_3727
	JZ_SPC BYTE [r13+8+r14], LB_3725
LB_3727
	call GRM_217
	cmp BYTE [r8+6],0
	jnz LB_3730
	jmp LB_3731
LB_3730:
	jmp LB_3728
LB_3731:
	sub rsp,8
	mov r8,[r8+8]
; .mov_ptn2 2'(= a35◂ [ *{ }] ) ⊢ 9'(= a35◂ [ *{ }] )
; .mov_ptn 2'(= a35◂ [ *{ }] ) ⊢ 9'(= a35◂ [ *{ }] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_3729
LB_3728:
	add rsp,8
	jmp LB_3708
LB_3729:
	mov QWORD [rsp+8*2],r14
	mov r13,QWORD [rsp+16+8*2]
	mov r14,QWORD [rsp+8*2]
	jmp LB_3733
LB_3733
;; rsp=2 , %2270~1'(= r ) %2269~0'(= r ) %2268~9'(= a35◂ [ *{ }] ) %2267~8'(= a35◂ [ *{ }] ) 
; #20 { } ⊢ 1(<2)◂{ }
;; rsp=2 , %2271~1(<2)◂{ } %2270~1'(= r ) %2269~0'(= r ) %2268~9'(= a35◂ [ *{ }] ) %2267~8'(= a35◂ [ *{ }] ) 
; #193 1(<2)◂{ } ⊢ 0(<2)◂1(<2)◂{ }
;; rsp=2 , %2272~0(<2)◂1(<2)◂{ } %2270~1'(= r ) %2269~0'(= r ) %2268~9'(= a35◂ [ *{ }] ) %2267~8'(= a35◂ [ *{ }] ) 
; #22 0(<2)◂1(<2)◂{ } ⊢ 0(<2)◂0(<2)◂1(<2)◂{ }
;; rsp=2 , %2273~0(<2)◂0(<2)◂1(<2)◂{ } %2270~1'(= r ) %2269~0'(= r ) %2268~9'(= a35◂ [ *{ }] ) %2267~8'(= a35◂ [ *{ }] ) 
; ∎ 0(<2)◂0(<2)◂1(<2)◂{ }
; .dlt.ptn 1'(= r )
; .dlt.ptn 0'(= r )
; .dlt.ptn 9'(= a35◂ [ *{ }] )
;	.dlt adt ⊢ _  
; .dlt.ptn 8'(= a35◂ [ *{ }] )
;	.dlt adt ⊢ _  
; .mov_ptn2 0(<2)◂0(<2)◂1(<2)◂{ } ⊢ 2'(= a3◂ [ a35◂ [ a2◂ [ a31◂ [ ]]]] )
; .mov_ptn 0(<2)◂0(<2)◂1(<2)◂{ } ⊢ 2'(= a3◂ [ a35◂ [ a2◂ [ a31◂ [ ]]]] )
	mov rax,unt 
	mov rax,unt_1
	mov rdi,rax
	mov rax,r15
	mov r15,QWORD [r15] 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov rdi,rax
	mov rax,r15
	mov r15,QWORD [r15] 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,16
	jmp LB_3732
LB_3732:
	cmp BYTE [r8+6],0
	jnz LB_3708
	pop r14
	pop r9
	add rsp,8
	pop r13
	ret
LB_3708:
	mov r9,QWORD [rsp+8]
	mov r14,QWORD [rsp+16]
	mov r13,QWORD [rsp+24]
	jmp LB_3736
LB_3735:
	add r14,1 
LB_3736:
	cmp r14,r9
	jge LB_3737
	JZ_SPC BYTE [r13+8+r14], LB_3735
LB_3737
	call GRM_217
	cmp BYTE [r8+6],0
	jnz LB_3740
	jmp LB_3741
LB_3740:
	jmp LB_3738
LB_3741:
	sub rsp,8
	mov r8,[r8+8]
; .mov_ptn2 2'(= a35◂ [ *{ }] ) ⊢ 8'(= a35◂ [ *{ }] )
; .mov_ptn 2'(= a35◂ [ *{ }] ) ⊢ 8'(= a35◂ [ *{ }] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_3739
LB_3738:
	add rsp,0
	jmp LB_3734
LB_3739:
	jmp LB_3743
LB_3742:
	add r14,1 
LB_3743:
	cmp r14,r9
	jge LB_3744
	JZ_SPC BYTE [r13+8+r14], LB_3742
LB_3744
	call GRM_244
	cmp BYTE [r8+6],0
	jnz LB_3747
	jmp LB_3748
LB_3747:
	jmp LB_3745
LB_3748:
	sub rsp,8
	mov r8,[r8+8]
; .mov_ptn2 2'(= a35◂ [ a31◂ [ ]] ) ⊢ 9'(= a35◂ [ a31◂ [ ]] )
; .mov_ptn 2'(= a35◂ [ a31◂ [ ]] ) ⊢ 9'(= a35◂ [ a31◂ [ ]] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_3746
LB_3745:
	add rsp,8
	jmp LB_3734
LB_3746:
	jmp LB_3750
LB_3749:
	add r14,1 
LB_3750:
	cmp r14,r9
	jge LB_3751
	JZ_SPC BYTE [r13+8+r14], LB_3749
LB_3751
	call GRM_248
	cmp BYTE [r8+6],0
	jnz LB_3754
	jmp LB_3755
LB_3754:
	jmp LB_3752
LB_3755:
	sub rsp,8
	mov r8,[r8+8]
; .mov_ptn2 2'(= a35◂ [ a2◂ [ a31◂ [ ]]] ) ⊢ 10'(= a35◂ [ a2◂ [ a31◂ [ ]]] )
; .mov_ptn 2'(= a35◂ [ a2◂ [ a31◂ [ ]]] ) ⊢ 10'(= a35◂ [ a2◂ [ a31◂ [ ]]] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_3753
LB_3752:
	add rsp,16
	jmp LB_3734
LB_3753:
	mov QWORD [rsp+8*3],r14
	mov r13,QWORD [rsp+16+8*3]
	mov r14,QWORD [rsp+8*3]
	jmp LB_3757
LB_3757
;; rsp=3 , %2278~1'(= r ) %2277~0'(= r ) %2276~10'(= a35◂ [ a2◂ [ a31◂ [ ]]] ) %2275~9'(= a35◂ [ a31◂ [ ]] ) %2274~8'(= a35◂ [ *{ }] ) 
; rsp_d=0, #194 { 9'(= a35◂ [ a31◂ [ ]] ) 10'(= a35◂ [ a2◂ [ a31◂ [ ]]] ) } ⊢ 2'(= a35◂ [ *{ a31◂ [ ]a2◂ [ a31◂ [ ]]}] )
	sub rsp,16
	mov QWORD [rsp+8*0],r13
	mov QWORD [rsp+8*1],r14
; .mov_ptn2 { 9'(= a35◂ [ a31◂ [ ]] ) 10'(= a35◂ [ a2◂ [ a31◂ [ ]]] ) } ⊢ { 0'(= a35◂ [ a31◂ [ ]] ) 1'(= a35◂ [ a2◂ [ a31◂ [ ]]] ) }
; .mov_ptn 10'(= a35◂ [ a2◂ [ a31◂ [ ]]] ) ⊢ 1'(= a35◂ [ a2◂ [ a31◂ [ ]]] )
	mov rax,QWORD [rsp-8+8*3]
	mov r14,rax
; .mov_ptn 9'(= a35◂ [ a31◂ [ ]] ) ⊢ 0'(= a35◂ [ a31◂ [ ]] )
	mov rax,QWORD [rsp-8+8*4]
	mov r13,rax
	call LB_3344

	mov r14,QWORD [rsp-8+8*2]
	mov rax,QWORD [rsp-8+8*1]
	mov r8,r13
	mov r13,rax
	add rsp,32
;; rsp=1 , %2279~2'(= a35◂ [ *{ a31◂ [ ]a2◂ [ a31◂ [ ]]}] ) %2278~1'(= r ) %2277~0'(= r ) %2274~8'(= a35◂ [ *{ }] ) 
;; ? 2'(= a35◂ [ *{ a31◂ [ ]a2◂ [ a31◂ [ ]]}] ) ⊢ 0(<2)◂{ 3'(= a31◂ [ ] ) 4'(= a2◂ [ a31◂ [ ]] ) }
	mov rdi,r8
	cmp BYTE [rdi+6],0
	jnz LB_3758
	mov rdi,r8
	mov rdi,QWORD [rdi+8+8*0]
	mov r9,rdi
	mov rdi,r8
	mov rdi,QWORD [rdi+8+8*1]
	mov r10,rdi
;; rsp=1 , %2282~4'(= a2◂ [ a31◂ [ ]] ) %2281~3'(= a31◂ [ ] ) %2278~1'(= r ) %2277~0'(= r ) %2274~8'(= a35◂ [ *{ }] ) 
; #21 { 3'(= a31◂ [ ] ) 4'(= a2◂ [ a31◂ [ ]] ) } ⊢ 0(<2)◂{ 3'(= a31◂ [ ] ) 4'(= a2◂ [ a31◂ [ ]] ) }
;; rsp=1 , %2283~0(<2)◂{ 3'(= a31◂ [ ] ) 4'(= a2◂ [ a31◂ [ ]] ) } %2278~1'(= r ) %2277~0'(= r ) %2274~8'(= a35◂ [ *{ }] ) 
; #193 0(<2)◂{ 3'(= a31◂ [ ] ) 4'(= a2◂ [ a31◂ [ ]] ) } ⊢ 0(<2)◂0(<2)◂{ 3'(= a31◂ [ ] ) 4'(= a2◂ [ a31◂ [ ]] ) }
;; rsp=1 , %2284~0(<2)◂0(<2)◂{ 3'(= a31◂ [ ] ) 4'(= a2◂ [ a31◂ [ ]] ) } %2278~1'(= r ) %2277~0'(= r ) %2274~8'(= a35◂ [ *{ }] ) 
; #22 0(<2)◂0(<2)◂{ 3'(= a31◂ [ ] ) 4'(= a2◂ [ a31◂ [ ]] ) } ⊢ 0(<2)◂0(<2)◂0(<2)◂{ 3'(= a31◂ [ ] ) 4'(= a2◂ [ a31◂ [ ]] ) }
;; rsp=1 , %2285~0(<2)◂0(<2)◂0(<2)◂{ 3'(= a31◂ [ ] ) 4'(= a2◂ [ a31◂ [ ]] ) } %2278~1'(= r ) %2277~0'(= r ) %2274~8'(= a35◂ [ *{ }] ) 
; ∎ 0(<2)◂0(<2)◂0(<2)◂{ 3'(= a31◂ [ ] ) 4'(= a2◂ [ a31◂ [ ]] ) }
; .dlt.ptn 1'(= r )
; .dlt.ptn 0'(= r )
; .dlt.ptn 8'(= a35◂ [ *{ }] )
;	.dlt adt ⊢ _  
; .mov_ptn2 0(<2)◂0(<2)◂0(<2)◂{ 3'(= a31◂ [ ] ) 4'(= a2◂ [ a31◂ [ ]] ) } ⊢ 2'(= a3◂ [ a35◂ [ a2◂ [ a31◂ [ ]]]] )
; .mov_ptn 0(<2)◂0(<2)◂0(<2)◂{ 3'(= a31◂ [ ] ) 4'(= a2◂ [ a31◂ [ ]] ) } ⊢ 2'(= a3◂ [ a35◂ [ a2◂ [ a31◂ [ ]]]] )
	mov rax,[SS_RCD_2_TOP]
	mov rsi,[rax] 
	mov QWORD [SS_RCD_2_TOP],rsi
	mov QWORD [rax],0
	mov r13,rax
	mov rax,r9
	mov QWORD [r13+8+8*0],rax
	mov rax,r10
	mov QWORD [r13+8+8*1],rax
	mov rax,r13
	mov BYTE [rax+6],0
	mov rdi,rax
	mov rax,r15
	mov r15,QWORD [r15] 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov rdi,rax
	mov rax,r15
	mov r15,QWORD [r15] 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,8
	jmp LB_3756
LB_3758:
;; ?. 2'(= a35◂ [ *{ a31◂ [ ]a2◂ [ a31◂ [ ]]}] ) ⊢ 1(<2)◂3'(= a2◂ [ *{ rr{| l |}}] )
	mov rax,QWORD [rdi+8]
	mov r9,rax
;; rsp=1 , %2280~3'(= a2◂ [ *{ rr{| l |}}] ) %2278~1'(= r ) %2277~0'(= r ) %2274~8'(= a35◂ [ *{ }] ) 
; #192 3'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 1(<2)◂3'(= a2◂ [ *{ rr{| l |}}] )
;; rsp=1 , %2286~1(<2)◂3'(= a2◂ [ *{ rr{| l |}}] ) %2278~1'(= r ) %2277~0'(= r ) %2274~8'(= a35◂ [ *{ }] ) 
; #22 1(<2)◂3'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 0(<2)◂1(<2)◂3'(= a2◂ [ *{ rr{| l |}}] )
;; rsp=1 , %2287~0(<2)◂1(<2)◂3'(= a2◂ [ *{ rr{| l |}}] ) %2278~1'(= r ) %2277~0'(= r ) %2274~8'(= a35◂ [ *{ }] ) 
; ∎ 0(<2)◂1(<2)◂3'(= a2◂ [ *{ rr{| l |}}] )
; .dlt.ptn 1'(= r )
; .dlt.ptn 0'(= r )
; .dlt.ptn 8'(= a35◂ [ *{ }] )
;	.dlt adt ⊢ _  
; .mov_ptn2 0(<2)◂1(<2)◂3'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 2'(= a3◂ [ a35◂ [ a2◂ [ a31◂ [ ]]]] )
; .mov_ptn 0(<2)◂1(<2)◂3'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 2'(= a3◂ [ a35◂ [ a2◂ [ a31◂ [ ]]]] )
	mov rax,r9
	mov rdi,rax
	mov rax,r15
	mov r15,QWORD [r15] 
	mov QWORD [rax],0
	mov BYTE [rax+6],1
	mov QWORD [rax+8],rdi
	mov rdi,rax
	mov rax,r15
	mov r15,QWORD [r15] 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,8
	jmp LB_3756
LB_3756:
	cmp BYTE [r8+6],0
	jnz LB_3734
	pop r14
	pop r9
	add rsp,8
	pop r13
	ret
LB_3734:
	mov r9,QWORD [rsp+8]
	mov r14,QWORD [rsp+16]
	mov r13,QWORD [rsp+24]
	call GRM_246
	cmp BYTE [r8+6],0
	jnz LB_3762
	jmp LB_3763
LB_3762:
	jmp LB_3760
LB_3763:
; .mov_ptn2 2'(= *{ } ) ⊢ { }
; .mov_ptn 2'(= *{ } ) ⊢ { }
	jmp LB_3761
LB_3760:
	add rsp,0
	jmp LB_3759
LB_3761:
	mov QWORD [rsp+8*0],r14
	mov r13,QWORD [rsp+16+8*0]
	mov r14,QWORD [rsp+8*0]
	jmp LB_3765
LB_3765
;; rsp=0 , %2290~1'(= r ) %2289~0'(= r ) %2288~{ } 
; #20 { } ⊢ 1(<2)◂{ }
;; rsp=0 , %2291~1(<2)◂{ } %2290~1'(= r ) %2289~0'(= r ) %2288~{ } 
	jmp LB_3766
LB_3766:
; $ %[ "glb_etr 7" ] ⊢ %[ "glb_etr 7" ]
;; rsp=0 , %2292~%[ "glb_etr 7" ] %2291~1(<2)◂{ } %2290~1'(= r ) %2289~0'(= r ) %2288~{ } 
; #21 { { 0'(= r ) 1'(= r ) %[ "glb_etr 7" ] } 1(<2)◂{ } } ⊢ 0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "glb_etr 7" ] } 1(<2)◂{ } }
;; rsp=0 , %2293~0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "glb_etr 7" ] } 1(<2)◂{ } } %2288~{ } 
; #192 0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "glb_etr 7" ] } 1(<2)◂{ } } ⊢ 1(<2)◂0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "glb_etr 7" ] } 1(<2)◂{ } }
;; rsp=0 , %2294~1(<2)◂0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "glb_etr 7" ] } 1(<2)◂{ } } %2288~{ } 
; #22 1(<2)◂0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "glb_etr 7" ] } 1(<2)◂{ } } ⊢ 0(<2)◂1(<2)◂0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "glb_etr 7" ] } 1(<2)◂{ } }
;; rsp=0 , %2295~0(<2)◂1(<2)◂0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "glb_etr 7" ] } 1(<2)◂{ } } %2288~{ } 
; ∎ 0(<2)◂1(<2)◂0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "glb_etr 7" ] } 1(<2)◂{ } }
; .dlt.ptn { }
; .mov_ptn2 0(<2)◂1(<2)◂0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "glb_etr 7" ] } 1(<2)◂{ } } ⊢ 2'(= a3◂ [ a35◂ [ a2◂ [ a31◂ [ ]]]] )
; .mov_ptn 0(<2)◂1(<2)◂0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "glb_etr 7" ] } 1(<2)◂{ } } ⊢ 2'(= a3◂ [ a35◂ [ a2◂ [ a31◂ [ ]]]] )
	mov rax,[SS_RCD_2_TOP]
	mov rsi,[rax] 
	mov QWORD [SS_RCD_2_TOP],rsi
	mov QWORD [rax],0
	mov r9,rax
	mov rax,[SS_RCD_3_TOP]
	mov rsi,[rax] 
	mov QWORD [SS_RCD_3_TOP],rsi
	mov QWORD [rax],0
	mov r10,rax
	mov rax,r13
	mov QWORD [r10+8+8*0],rax
	mov rax,r14
	mov QWORD [r10+8+8*1],rax
	mov rsi,1  
	mov rdi,24
	xor rax,rax 
	C_CALL_SF calloc
	mov QWORD [rax],9
	mov BYTE [rax+8+0],103
	mov BYTE [rax+8+1],108
	mov BYTE [rax+8+2],98
	mov BYTE [rax+8+3],95
	mov BYTE [rax+8+4],101
	mov BYTE [rax+8+5],116
	mov BYTE [rax+8+6],114
	mov BYTE [rax+8+7],32
	mov BYTE [rax+8+8],55
	mov QWORD [r10+8+8*2],rax
	mov rax,r10
	mov QWORD [r9+8+8*0],rax
	mov rax,unt 
	mov rax,unt_1
	mov QWORD [r9+8+8*1],rax
	mov rax,r9
	mov BYTE [rax+6],0
	mov rdi,rax
	mov rax,r15
	mov r15,QWORD [r15] 
	mov QWORD [rax],0
	mov BYTE [rax+6],1
	mov QWORD [rax+8],rdi
	mov rdi,rax
	mov rax,r15
	mov r15,QWORD [r15] 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	jmp LB_3764
LB_3764:
	cmp BYTE [r8+6],0
	jnz LB_3759
	pop r14
	pop r9
	add rsp,8
	pop r13
	ret
LB_3759:
	pop rdi
	pop r9 
	pop r14
	pop r13
	ret
ETR_249:
	mov r9,0x0000_ffff_ffff_ffff
	and r9,[r13]
	call GRM_249
	ret
GRM_249:
	sub rsp,32
	mov QWORD [rsp+24],r13
	mov QWORD [rsp+16],r14 
	mov QWORD [rsp+8],r9
	jmp LB_3769
LB_3768:
	add r14,1 
LB_3769:
	cmp r14,r9
	jge LB_3770
	JZ_SPC BYTE [r13+8+r14], LB_3768
LB_3770
	lea rax,[r14+1]
	cmp rax,r9
	jg LB_3773
	jmp LB_3774
LB_3773:
	mov r8,unt_1
	jmp LB_3771
LB_3774:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],64
	jnz LB_3775
	jmp LB_3776
LB_3775:
	mov r8,unt_1
	jmp LB_3771
LB_3776:
	add r14,1
	jmp LB_3772
LB_3771:
	add rsp,0
	jmp LB_3767
LB_3772:
	jmp LB_3778
LB_3777:
	add r14,1 
LB_3778:
	cmp r14,r9
	jge LB_3779
	JZ_SPC BYTE [r13+8+r14], LB_3777
LB_3779
	lea rax,[r14+1]
	cmp rax,r9
	jg LB_3782
	jmp LB_3783
LB_3782:
	mov r8,unt_1
	jmp LB_3780
LB_3783:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],46
	jnz LB_3784
	jmp LB_3785
LB_3784:
	mov r8,unt_1
	jmp LB_3780
LB_3785:
	add r14,1
	jmp LB_3781
LB_3780:
	add rsp,0
	pop rdi
	pop r9 
	pop r14
	pop r13
	ret
LB_3781:
	jmp LB_3787
LB_3786:
	add r14,1 
LB_3787:
	cmp r14,r9
	jge LB_3788
	JZ_SPC BYTE [r13+8+r14], LB_3786
LB_3788
	call GRM_250
	cmp BYTE [r8+6],0
	jnz LB_3791
	jmp LB_3792
LB_3791:
	jmp LB_3789
LB_3792:
	sub rsp,16
; .mov_ptn2 2'(= *{ {| l |}a34◂ [ ]} ) ⊢ { 8'(= {| l |} ) 9'(= a34◂ [ ] ) }
; .mov_ptn 2'(= *{ {| l |}a34◂ [ ]} ) ⊢ { 8'(= {| l |} ) 9'(= a34◂ [ ] ) }
	mov rdi,r8
	mov rdi,QWORD [rdi+8+8*0]
	mov r10,rdi
	mov QWORD [rsp-8+8*2],r10
	mov rdi,r8
	mov rdi,QWORD [rdi+8+8*1]
	mov r11,rdi
	mov QWORD [rsp-8+8*1],r11
	jmp LB_3790
LB_3789:
	add rsp,0
	pop rdi
	pop r9 
	pop r14
	pop r13
	ret
LB_3790:
	jmp LB_3794
LB_3793:
	add r14,1 
LB_3794:
	cmp r14,r9
	jge LB_3795
	JZ_SPC BYTE [r13+8+r14], LB_3793
LB_3795
	call GRM_253
	cmp BYTE [r8+6],0
	jnz LB_3798
	jmp LB_3799
LB_3798:
	jmp LB_3796
LB_3799:
	sub rsp,8
	mov r8,[r8+8]
; .mov_ptn2 2'(= a2◂ [ *{ {| l |}a34◂ [ ]}] ) ⊢ 10'(= a2◂ [ *{ {| l |}a34◂ [ ]}] )
; .mov_ptn 2'(= a2◂ [ *{ {| l |}a34◂ [ ]}] ) ⊢ 10'(= a2◂ [ *{ {| l |}a34◂ [ ]}] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_3797
LB_3796:
	add rsp,16
	pop rdi
	pop r9 
	pop r14
	pop r13
	ret
LB_3797:
	mov QWORD [rsp+8*3],r14
	mov r13,QWORD [rsp+16+8*3]
	mov r14,QWORD [rsp+8*3]
	jmp LB_3801
LB_3801
;; rsp=3 , %2299~1'(= r ) %2298~0'(= r ) %2297~10'(= a2◂ [ *{ {| l |}a34◂ [ ]}] ) %2296~{ 8'(= {| l |} ) 9'(= a34◂ [ ] ) } 
; #21 { { 8'(= {| l |} ) 9'(= a34◂ [ ] ) } 10'(= a2◂ [ *{ {| l |}a34◂ [ ]}] ) } ⊢ 0(<2)◂{ { 8'(= {| l |} ) 9'(= a34◂ [ ] ) } 10'(= a2◂ [ *{ {| l |}a34◂ [ ]}] ) }
;; rsp=3 , %2300~0(<2)◂{ { 8'(= {| l |} ) 9'(= a34◂ [ ] ) } 10'(= a2◂ [ *{ {| l |}a34◂ [ ]}] ) } %2299~1'(= r ) %2298~0'(= r ) 
; #171 0(<2)◂{ { 8'(= {| l |} ) 9'(= a34◂ [ ] ) } 10'(= a2◂ [ *{ {| l |}a34◂ [ ]}] ) } ⊢ 5(<6)◂0(<2)◂{ { 8'(= {| l |} ) 9'(= a34◂ [ ] ) } 10'(= a2◂ [ *{ {| l |}a34◂ [ ]}] ) }
;; rsp=3 , %2301~5(<6)◂0(<2)◂{ { 8'(= {| l |} ) 9'(= a34◂ [ ] ) } 10'(= a2◂ [ *{ {| l |}a34◂ [ ]}] ) } %2299~1'(= r ) %2298~0'(= r ) 
; #22 5(<6)◂0(<2)◂{ { 8'(= {| l |} ) 9'(= a34◂ [ ] ) } 10'(= a2◂ [ *{ {| l |}a34◂ [ ]}] ) } ⊢ 0(<2)◂5(<6)◂0(<2)◂{ { 8'(= {| l |} ) 9'(= a34◂ [ ] ) } 10'(= a2◂ [ *{ {| l |}a34◂ [ ]}] ) }
;; rsp=3 , %2302~0(<2)◂5(<6)◂0(<2)◂{ { 8'(= {| l |} ) 9'(= a34◂ [ ] ) } 10'(= a2◂ [ *{ {| l |}a34◂ [ ]}] ) } %2299~1'(= r ) %2298~0'(= r ) 
; ∎ 0(<2)◂5(<6)◂0(<2)◂{ { 8'(= {| l |} ) 9'(= a34◂ [ ] ) } 10'(= a2◂ [ *{ {| l |}a34◂ [ ]}] ) }
; .dlt.ptn 1'(= r )
; .dlt.ptn 0'(= r )
; .mov_ptn2 0(<2)◂5(<6)◂0(<2)◂{ { 8'(= {| l |} ) 9'(= a34◂ [ ] ) } 10'(= a2◂ [ *{ {| l |}a34◂ [ ]}] ) } ⊢ 2'(= a3◂ [ a31◂ [ ]] )
; .mov_ptn 0(<2)◂5(<6)◂0(<2)◂{ { 8'(= {| l |} ) 9'(= a34◂ [ ] ) } 10'(= a2◂ [ *{ {| l |}a34◂ [ ]}] ) } ⊢ 2'(= a3◂ [ a31◂ [ ]] )
	mov rax,[SS_RCD_2_TOP]
	mov rsi,[rax] 
	mov QWORD [SS_RCD_2_TOP],rsi
	mov QWORD [rax],0
	mov r13,rax
	mov rax,[SS_RCD_2_TOP]
	mov rsi,[rax] 
	mov QWORD [SS_RCD_2_TOP],rsi
	mov QWORD [rax],0
	mov r14,rax
	mov rax,QWORD [rsp-8+8*3]
	mov QWORD [r14+8+8*0],rax
	mov rax,QWORD [rsp-8+8*2]
	mov QWORD [r14+8+8*1],rax
	mov rax,r14
	mov QWORD [r13+8+8*0],rax
	mov rax,QWORD [rsp-8+8*1]
	mov QWORD [r13+8+8*1],rax
	mov rax,r13
	mov BYTE [rax+6],0
	mov rdi,rax
	mov rax,r15
	mov r15,QWORD [r15] 
	mov QWORD [rax],0
	mov BYTE [rax+6],5
	mov QWORD [rax+8],rdi
	mov rdi,rax
	mov rax,r15
	mov r15,QWORD [r15] 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,24
	jmp LB_3800
LB_3800:
	cmp BYTE [r8+6],0
	jnz LB_3767
	pop r14
	pop r9
	add rsp,8
	pop r13
	ret
LB_3767:
	mov r9,QWORD [rsp+8]
	mov r14,QWORD [rsp+16]
	mov r13,QWORD [rsp+24]
	jmp LB_3804
LB_3803:
	add r14,1 
LB_3804:
	cmp r14,r9
	jge LB_3805
	JZ_SPC BYTE [r13+8+r14], LB_3803
LB_3805
	call GRM_250
	cmp BYTE [r8+6],0
	jnz LB_3808
	jmp LB_3809
LB_3808:
	jmp LB_3806
LB_3809:
	sub rsp,16
; .mov_ptn2 2'(= *{ {| l |}a34◂ [ ]} ) ⊢ { 8'(= {| l |} ) 9'(= a34◂ [ ] ) }
; .mov_ptn 2'(= *{ {| l |}a34◂ [ ]} ) ⊢ { 8'(= {| l |} ) 9'(= a34◂ [ ] ) }
	mov rdi,r8
	mov rdi,QWORD [rdi+8+8*0]
	mov r10,rdi
	mov QWORD [rsp-8+8*2],r10
	mov rdi,r8
	mov rdi,QWORD [rdi+8+8*1]
	mov r11,rdi
	mov QWORD [rsp-8+8*1],r11
	jmp LB_3807
LB_3806:
	add rsp,0
	jmp LB_3802
LB_3807:
	mov QWORD [rsp+8*2],r14
	mov r13,QWORD [rsp+16+8*2]
	mov r14,QWORD [rsp+8*2]
	jmp LB_3811
LB_3811
;; rsp=2 , %2305~1'(= r ) %2304~0'(= r ) %2303~{ 8'(= {| l |} ) 9'(= a34◂ [ ] ) } 
; #172 { 8'(= {| l |} ) 9'(= a34◂ [ ] ) } ⊢ 4(<6)◂{ 8'(= {| l |} ) 9'(= a34◂ [ ] ) }
;; rsp=2 , %2306~4(<6)◂{ 8'(= {| l |} ) 9'(= a34◂ [ ] ) } %2305~1'(= r ) %2304~0'(= r ) 
; #22 4(<6)◂{ 8'(= {| l |} ) 9'(= a34◂ [ ] ) } ⊢ 0(<2)◂4(<6)◂{ 8'(= {| l |} ) 9'(= a34◂ [ ] ) }
;; rsp=2 , %2307~0(<2)◂4(<6)◂{ 8'(= {| l |} ) 9'(= a34◂ [ ] ) } %2305~1'(= r ) %2304~0'(= r ) 
; ∎ 0(<2)◂4(<6)◂{ 8'(= {| l |} ) 9'(= a34◂ [ ] ) }
; .dlt.ptn 1'(= r )
; .dlt.ptn 0'(= r )
; .mov_ptn2 0(<2)◂4(<6)◂{ 8'(= {| l |} ) 9'(= a34◂ [ ] ) } ⊢ 2'(= a3◂ [ a31◂ [ ]] )
; .mov_ptn 0(<2)◂4(<6)◂{ 8'(= {| l |} ) 9'(= a34◂ [ ] ) } ⊢ 2'(= a3◂ [ a31◂ [ ]] )
	mov rax,[SS_RCD_2_TOP]
	mov rsi,[rax] 
	mov QWORD [SS_RCD_2_TOP],rsi
	mov QWORD [rax],0
	mov r13,rax
	mov rax,QWORD [rsp-8+8*2]
	mov QWORD [r13+8+8*0],rax
	mov rax,QWORD [rsp-8+8*1]
	mov QWORD [r13+8+8*1],rax
	mov rax,r13
	mov BYTE [rax+6],4
	mov rdi,rax
	mov rax,r15
	mov r15,QWORD [r15] 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,16
	jmp LB_3810
LB_3810:
	cmp BYTE [r8+6],0
	jnz LB_3802
	pop r14
	pop r9
	add rsp,8
	pop r13
	ret
LB_3802:
	mov r9,QWORD [rsp+8]
	mov r14,QWORD [rsp+16]
	mov r13,QWORD [rsp+24]
	mov QWORD [rsp+8*0],r14
	mov r13,QWORD [rsp+16+8*0]
	mov r14,QWORD [rsp+8*0]
	jmp LB_3814
LB_3814
;; rsp=0 , %2309~1'(= r ) %2308~0'(= r ) 
	jmp LB_3815
LB_3815:
; $ %[ "dt_etr 0" ] ⊢ %[ "dt_etr 0" ]
;; rsp=0 , %2310~%[ "dt_etr 0" ] %2309~1'(= r ) %2308~0'(= r ) 
; _#8 %[ "dt_etr 0" ] ⊢ %[ "dt_etr 0" ]
	mov rdi,fmt_emt
	call emt_stg
	mov rdi,LB_3816
	call emt_stg 
	mov rdi,fmt_nl
	call emt_stg
	jmp LB_3817
LB_3817:
;; rsp=0 , %2311~%[ "dt_etr 0" ] %2309~1'(= r ) %2308~0'(= r ) 
; #23 { } ⊢ 1(<2)◂{ }
;; rsp=0 , %2312~1(<2)◂{ } %2311~%[ "dt_etr 0" ] %2309~1'(= r ) %2308~0'(= r ) 
; ∎ 1(<2)◂{ }
; .dlt.ptn %[ "dt_etr 0" ]
; .dlt.ptn 1'(= r )
; .dlt.ptn 0'(= r )
; .mov_ptn2 1(<2)◂{ } ⊢ 2'(= a3◂ [ a31◂ [ ]] )
; .mov_ptn 1(<2)◂{ } ⊢ 2'(= a3◂ [ a31◂ [ ]] )
	mov rax,unt 
	mov rax,unt_1
	mov r8,rax
	jmp LB_3813
LB_3813:
	cmp BYTE [r8+6],0
	jnz LB_3812
	pop r14
	pop r9
	add rsp,8
	pop r13
	ret
LB_3812:
	pop rdi
	pop r9 
	pop r14
	pop r13
	ret
ETR_250:
	mov r9,0x0000_ffff_ffff_ffff
	and r9,[r13]
	call GRM_250
	ret
GRM_250:
	sub rsp,32
	mov QWORD [rsp+24],r13
	mov QWORD [rsp+16],r14 
	mov QWORD [rsp+8],r9
	jmp LB_3820
LB_3819:
	add r14,1 
LB_3820:
	cmp r14,r9
	jge LB_3821
	JZ_SPC BYTE [r13+8+r14], LB_3819
LB_3821
	call GRM_74
	cmp BYTE [r8+6],0
	jnz LB_3824
	jmp LB_3825
LB_3824:
	jmp LB_3822
LB_3825:
	sub rsp,8
; .mov_ptn2 2'(= {| l |} ) ⊢ 8'(= {| l |} )
; .mov_ptn 2'(= {| l |} ) ⊢ 8'(= {| l |} )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_3823
LB_3822:
	add rsp,0
	jmp LB_3818
LB_3823:
	jmp LB_3827
LB_3826:
	add r14,1 
LB_3827:
	cmp r14,r9
	jge LB_3828
	JZ_SPC BYTE [r13+8+r14], LB_3826
LB_3828
	call GRM_251
	cmp BYTE [r8+6],0
	jnz LB_3831
	jmp LB_3832
LB_3831:
	jmp LB_3829
LB_3832:
	sub rsp,8
	mov r8,[r8+8]
; .mov_ptn2 2'(= a2◂ [ {| l |}] ) ⊢ 9'(= a2◂ [ {| l |}] )
; .mov_ptn 2'(= a2◂ [ {| l |}] ) ⊢ 9'(= a2◂ [ {| l |}] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_3830
LB_3829:
	add rsp,8
	jmp LB_3818
LB_3830:
	jmp LB_3834
LB_3833:
	add r14,1 
LB_3834:
	cmp r14,r9
	jge LB_3835
	JZ_SPC BYTE [r13+8+r14], LB_3833
LB_3835
	lea rax,[r14+1]
	cmp rax,r9
	jg LB_3838
	jmp LB_3839
LB_3838:
	mov r8,unt_1
	jmp LB_3836
LB_3839:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],61
	jnz LB_3840
	jmp LB_3841
LB_3840:
	mov r8,unt_1
	jmp LB_3836
LB_3841:
	add r14,1
	jmp LB_3837
LB_3836:
	add rsp,16
	jmp LB_3818
LB_3837:
	jmp LB_3843
LB_3842:
	add r14,1 
LB_3843:
	cmp r14,r9
	jge LB_3844
	JZ_SPC BYTE [r13+8+r14], LB_3842
LB_3844
	call GRM_210
	cmp BYTE [r8+6],0
	jnz LB_3847
	jmp LB_3848
LB_3847:
	jmp LB_3845
LB_3848:
	sub rsp,8
	mov r8,[r8+8]
; .mov_ptn2 2'(= a23◂ [ ] ) ⊢ 10'(= a23◂ [ ] )
; .mov_ptn 2'(= a23◂ [ ] ) ⊢ 10'(= a23◂ [ ] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_3846
LB_3845:
	add rsp,16
	pop rdi
	pop r9 
	pop r14
	pop r13
	ret
LB_3846:
	mov QWORD [rsp+8*3],r14
	mov r13,QWORD [rsp+16+8*3]
	mov r14,QWORD [rsp+8*3]
	jmp LB_3850
LB_3850
;; rsp=3 , %2317~1'(= r ) %2316~0'(= r ) %2315~10'(= a23◂ [ ] ) %2314~9'(= a2◂ [ {| l |}] ) %2313~8'(= {| l |} ) 
; #164 { 9'(= a2◂ [ {| l |}] ) 10'(= a23◂ [ ] ) } ⊢ 1(<2)◂{ 9'(= a2◂ [ {| l |}] ) 10'(= a23◂ [ ] ) }
;; rsp=3 , %2318~1(<2)◂{ 9'(= a2◂ [ {| l |}] ) 10'(= a23◂ [ ] ) } %2317~1'(= r ) %2316~0'(= r ) %2313~8'(= {| l |} ) 
; #22 { 8'(= {| l |} ) 1(<2)◂{ 9'(= a2◂ [ {| l |}] ) 10'(= a23◂ [ ] ) } } ⊢ 0(<2)◂{ 8'(= {| l |} ) 1(<2)◂{ 9'(= a2◂ [ {| l |}] ) 10'(= a23◂ [ ] ) } }
;; rsp=3 , %2319~0(<2)◂{ 8'(= {| l |} ) 1(<2)◂{ 9'(= a2◂ [ {| l |}] ) 10'(= a23◂ [ ] ) } } %2317~1'(= r ) %2316~0'(= r ) 
; ∎ 0(<2)◂{ 8'(= {| l |} ) 1(<2)◂{ 9'(= a2◂ [ {| l |}] ) 10'(= a23◂ [ ] ) } }
; .dlt.ptn 1'(= r )
; .dlt.ptn 0'(= r )
; .mov_ptn2 0(<2)◂{ 8'(= {| l |} ) 1(<2)◂{ 9'(= a2◂ [ {| l |}] ) 10'(= a23◂ [ ] ) } } ⊢ 2'(= a3◂ [ *{ {| l |}a34◂ [ ]}] )
; .mov_ptn 0(<2)◂{ 8'(= {| l |} ) 1(<2)◂{ 9'(= a2◂ [ {| l |}] ) 10'(= a23◂ [ ] ) } } ⊢ 2'(= a3◂ [ *{ {| l |}a34◂ [ ]}] )
	mov rax,[SS_RCD_2_TOP]
	mov rsi,[rax] 
	mov QWORD [SS_RCD_2_TOP],rsi
	mov QWORD [rax],0
	mov r13,rax
	mov rax,QWORD [rsp-8+8*3]
	mov QWORD [r13+8+8*0],rax
	mov rax,[SS_RCD_2_TOP]
	mov rsi,[rax] 
	mov QWORD [SS_RCD_2_TOP],rsi
	mov QWORD [rax],0
	mov r14,rax
	mov rax,QWORD [rsp-8+8*2]
	mov QWORD [r14+8+8*0],rax
	mov rax,QWORD [rsp-8+8*1]
	mov QWORD [r14+8+8*1],rax
	mov rax,r14
	mov BYTE [rax+6],1
	mov QWORD [r13+8+8*1],rax
	mov rax,r13
	mov BYTE [rax+6],0
	mov r8,rax
	add rsp,24
	jmp LB_3849
LB_3849:
	cmp BYTE [r8+6],0
	jnz LB_3818
	pop r14
	pop r9
	add rsp,8
	pop r13
	ret
LB_3818:
	mov r9,QWORD [rsp+8]
	mov r14,QWORD [rsp+16]
	mov r13,QWORD [rsp+24]
	jmp LB_3853
LB_3852:
	add r14,1 
LB_3853:
	cmp r14,r9
	jge LB_3854
	JZ_SPC BYTE [r13+8+r14], LB_3852
LB_3854
	call GRM_74
	cmp BYTE [r8+6],0
	jnz LB_3857
	jmp LB_3858
LB_3857:
	jmp LB_3855
LB_3858:
	sub rsp,8
; .mov_ptn2 2'(= {| l |} ) ⊢ 8'(= {| l |} )
; .mov_ptn 2'(= {| l |} ) ⊢ 8'(= {| l |} )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_3856
LB_3855:
	add rsp,0
	jmp LB_3851
LB_3856:
	jmp LB_3860
LB_3859:
	add r14,1 
LB_3860:
	cmp r14,r9
	jge LB_3861
	JZ_SPC BYTE [r13+8+r14], LB_3859
LB_3861
	call GRM_251
	cmp BYTE [r8+6],0
	jnz LB_3864
	jmp LB_3865
LB_3864:
	jmp LB_3862
LB_3865:
	sub rsp,8
	mov r8,[r8+8]
; .mov_ptn2 2'(= a2◂ [ {| l |}] ) ⊢ 9'(= a2◂ [ {| l |}] )
; .mov_ptn 2'(= a2◂ [ {| l |}] ) ⊢ 9'(= a2◂ [ {| l |}] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_3863
LB_3862:
	add rsp,8
	jmp LB_3851
LB_3863:
	jmp LB_3867
LB_3866:
	add r14,1 
LB_3867:
	cmp r14,r9
	jge LB_3868
	JZ_SPC BYTE [r13+8+r14], LB_3866
LB_3868
	call GRM_217
	cmp BYTE [r8+6],0
	jnz LB_3871
	jmp LB_3872
LB_3871:
	jmp LB_3869
LB_3872:
	sub rsp,8
	mov r8,[r8+8]
; .mov_ptn2 2'(= a35◂ [ *{ }] ) ⊢ 10'(= a35◂ [ *{ }] )
; .mov_ptn 2'(= a35◂ [ *{ }] ) ⊢ 10'(= a35◂ [ *{ }] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_3870
LB_3869:
	add rsp,16
	jmp LB_3851
LB_3870:
	jmp LB_3874
LB_3873:
	add r14,1 
LB_3874:
	cmp r14,r9
	jge LB_3875
	JZ_SPC BYTE [r13+8+r14], LB_3873
LB_3875
	lea rax,[r14+3]
	cmp rax,r9
	jg LB_3878
	jmp LB_3879
LB_3878:
	mov r8,unt_1
	jmp LB_3876
LB_3879:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],226
	jnz LB_3880
	cmp BYTE [rdi+1],136
	jnz LB_3880
	cmp BYTE [rdi+2],144
	jnz LB_3880
	jmp LB_3881
LB_3880:
	mov r8,unt_1
	jmp LB_3876
LB_3881:
	add r14,3
	jmp LB_3877
LB_3876:
	add rsp,24
	jmp LB_3851
LB_3877:
	jmp LB_3883
LB_3882:
	add r14,1 
LB_3883:
	cmp r14,r9
	jge LB_3884
	JZ_SPC BYTE [r13+8+r14], LB_3882
LB_3884
	call GRM_74
	cmp BYTE [r8+6],0
	jnz LB_3887
	jmp LB_3888
LB_3887:
	jmp LB_3885
LB_3888:
	sub rsp,8
; .mov_ptn2 2'(= {| l |} ) ⊢ 11'(= {| l |} )
; .mov_ptn 2'(= {| l |} ) ⊢ 11'(= {| l |} )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_3886
LB_3885:
	add rsp,24
	jmp LB_3851
LB_3886:
	jmp LB_3890
LB_3889:
	add r14,1 
LB_3890:
	cmp r14,r9
	jge LB_3891
	JZ_SPC BYTE [r13+8+r14], LB_3889
LB_3891
	lea rax,[r14+1]
	cmp rax,r9
	jg LB_3894
	jmp LB_3895
LB_3894:
	mov r8,unt_1
	jmp LB_3892
LB_3895:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],58
	jnz LB_3896
	jmp LB_3897
LB_3896:
	mov r8,unt_1
	jmp LB_3892
LB_3897:
	add r14,1
	jmp LB_3893
LB_3892:
	add rsp,32
	jmp LB_3851
LB_3893:
	jmp LB_3899
LB_3898:
	add r14,1 
LB_3899:
	cmp r14,r9
	jge LB_3900
	JZ_SPC BYTE [r13+8+r14], LB_3898
LB_3900
	call GRM_210
	cmp BYTE [r8+6],0
	jnz LB_3903
	jmp LB_3904
LB_3903:
	jmp LB_3901
LB_3904:
	sub rsp,8
	mov r8,[r8+8]
; .mov_ptn2 2'(= a23◂ [ ] ) ⊢ 12'(= a23◂ [ ] )
; .mov_ptn 2'(= a23◂ [ ] ) ⊢ 12'(= a23◂ [ ] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_3902
LB_3901:
	add rsp,32
	jmp LB_3851
LB_3902:
	jmp LB_3906
LB_3905:
	add r14,1 
LB_3906:
	cmp r14,r9
	jge LB_3907
	JZ_SPC BYTE [r13+8+r14], LB_3905
LB_3907
	call GRM_254
	cmp BYTE [r8+6],0
	jnz LB_3910
	jmp LB_3911
LB_3910:
	jmp LB_3908
LB_3911:
	sub rsp,8
	mov r8,[r8+8]
; .mov_ptn2 2'(= a2◂ [ *{ {| l |}a23◂ [ ]}] ) ⊢ 13'(= a2◂ [ *{ {| l |}a23◂ [ ]}] )
; .mov_ptn 2'(= a2◂ [ *{ {| l |}a23◂ [ ]}] ) ⊢ 13'(= a2◂ [ *{ {| l |}a23◂ [ ]}] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_3909
LB_3908:
	add rsp,40
	jmp LB_3851
LB_3909:
	mov QWORD [rsp+8*6],r14
	mov r13,QWORD [rsp+16+8*6]
	mov r14,QWORD [rsp+8*6]
	jmp LB_3913
LB_3913
;; rsp=6 , %2327~1'(= r ) %2326~0'(= r ) %2325~13'(= a2◂ [ *{ {| l |}a23◂ [ ]}] ) %2324~12'(= a23◂ [ ] ) %2323~11'(= {| l |} ) %2322~10'(= a35◂ [ *{ }] ) %2321~9'(= a2◂ [ {| l |}] ) %2320~8'(= {| l |} ) 
; #21 { { 11'(= {| l |} ) 12'(= a23◂ [ ] ) } 13'(= a2◂ [ *{ {| l |}a23◂ [ ]}] ) } ⊢ 0(<2)◂{ { 11'(= {| l |} ) 12'(= a23◂ [ ] ) } 13'(= a2◂ [ *{ {| l |}a23◂ [ ]}] ) }
;; rsp=6 , %2328~0(<2)◂{ { 11'(= {| l |} ) 12'(= a23◂ [ ] ) } 13'(= a2◂ [ *{ {| l |}a23◂ [ ]}] ) } %2327~1'(= r ) %2326~0'(= r ) %2322~10'(= a35◂ [ *{ }] ) %2321~9'(= a2◂ [ {| l |}] ) %2320~8'(= {| l |} ) 
; #165 { 9'(= a2◂ [ {| l |}] ) 0(<2)◂{ { 11'(= {| l |} ) 12'(= a23◂ [ ] ) } 13'(= a2◂ [ *{ {| l |}a23◂ [ ]}] ) } } ⊢ 0(<2)◂{ 9'(= a2◂ [ {| l |}] ) 0(<2)◂{ { 11'(= {| l |} ) 12'(= a23◂ [ ] ) } 13'(= a2◂ [ *{ {| l |}a23◂ [ ]}] ) } }
;; rsp=6 , %2329~0(<2)◂{ 9'(= a2◂ [ {| l |}] ) 0(<2)◂{ { 11'(= {| l |} ) 12'(= a23◂ [ ] ) } 13'(= a2◂ [ *{ {| l |}a23◂ [ ]}] ) } } %2327~1'(= r ) %2326~0'(= r ) %2322~10'(= a35◂ [ *{ }] ) %2320~8'(= {| l |} ) 
; #22 { 8'(= {| l |} ) 0(<2)◂{ 9'(= a2◂ [ {| l |}] ) 0(<2)◂{ { 11'(= {| l |} ) 12'(= a23◂ [ ] ) } 13'(= a2◂ [ *{ {| l |}a23◂ [ ]}] ) } } } ⊢ 0(<2)◂{ 8'(= {| l |} ) 0(<2)◂{ 9'(= a2◂ [ {| l |}] ) 0(<2)◂{ { 11'(= {| l |} ) 12'(= a23◂ [ ] ) } 13'(= a2◂ [ *{ {| l |}a23◂ [ ]}] ) } } }
;; rsp=6 , %2330~0(<2)◂{ 8'(= {| l |} ) 0(<2)◂{ 9'(= a2◂ [ {| l |}] ) 0(<2)◂{ { 11'(= {| l |} ) 12'(= a23◂ [ ] ) } 13'(= a2◂ [ *{ {| l |}a23◂ [ ]}] ) } } } %2327~1'(= r ) %2326~0'(= r ) %2322~10'(= a35◂ [ *{ }] ) 
; ∎ 0(<2)◂{ 8'(= {| l |} ) 0(<2)◂{ 9'(= a2◂ [ {| l |}] ) 0(<2)◂{ { 11'(= {| l |} ) 12'(= a23◂ [ ] ) } 13'(= a2◂ [ *{ {| l |}a23◂ [ ]}] ) } } }
; .dlt.ptn 1'(= r )
; .dlt.ptn 0'(= r )
; .dlt.ptn 10'(= a35◂ [ *{ }] )
;	.dlt adt ⊢ _  
; .mov_ptn2 0(<2)◂{ 8'(= {| l |} ) 0(<2)◂{ 9'(= a2◂ [ {| l |}] ) 0(<2)◂{ { 11'(= {| l |} ) 12'(= a23◂ [ ] ) } 13'(= a2◂ [ *{ {| l |}a23◂ [ ]}] ) } } } ⊢ 2'(= a3◂ [ *{ {| l |}a34◂ [ ]}] )
; .mov_ptn 0(<2)◂{ 8'(= {| l |} ) 0(<2)◂{ 9'(= a2◂ [ {| l |}] ) 0(<2)◂{ { 11'(= {| l |} ) 12'(= a23◂ [ ] ) } 13'(= a2◂ [ *{ {| l |}a23◂ [ ]}] ) } } } ⊢ 2'(= a3◂ [ *{ {| l |}a34◂ [ ]}] )
	mov rax,[SS_RCD_2_TOP]
	mov rsi,[rax] 
	mov QWORD [SS_RCD_2_TOP],rsi
	mov QWORD [rax],0
	mov r13,rax
	mov rax,QWORD [rsp-8+8*6]
	mov QWORD [r13+8+8*0],rax
	mov rax,[SS_RCD_2_TOP]
	mov rsi,[rax] 
	mov QWORD [SS_RCD_2_TOP],rsi
	mov QWORD [rax],0
	mov r14,rax
	mov rax,QWORD [rsp-8+8*5]
	mov QWORD [r14+8+8*0],rax
	mov rax,[SS_RCD_2_TOP]
	mov rsi,[rax] 
	mov QWORD [SS_RCD_2_TOP],rsi
	mov QWORD [rax],0
	mov r9,rax
	mov rax,[SS_RCD_2_TOP]
	mov rsi,[rax] 
	mov QWORD [SS_RCD_2_TOP],rsi
	mov QWORD [rax],0
	mov r10,rax
	mov rax,QWORD [rsp-8+8*3]
	mov QWORD [r10+8+8*0],rax
	mov rax,QWORD [rsp-8+8*2]
	mov QWORD [r10+8+8*1],rax
	mov rax,r10
	mov QWORD [r9+8+8*0],rax
	mov rax,QWORD [rsp-8+8*1]
	mov QWORD [r9+8+8*1],rax
	mov rax,r9
	mov BYTE [rax+6],0
	mov QWORD [r14+8+8*1],rax
	mov rax,r14
	mov BYTE [rax+6],0
	mov QWORD [r13+8+8*1],rax
	mov rax,r13
	mov BYTE [rax+6],0
	mov r8,rax
	add rsp,48
	jmp LB_3912
LB_3912:
	cmp BYTE [r8+6],0
	jnz LB_3851
	pop r14
	pop r9
	add rsp,8
	pop r13
	ret
LB_3851:
	pop rdi
	pop r9 
	pop r14
	pop r13
	ret
ETR_251:
	mov r9,0x0000_ffff_ffff_ffff
	and r9,[r13]
	call GRM_251
	ret
GRM_251:
	sub rsp,32
	mov QWORD [rsp+24],r13
	mov QWORD [rsp+16],r14 
	mov QWORD [rsp+8],r9
	jmp LB_3916
LB_3915:
	add r14,1 
LB_3916:
	cmp r14,r9
	jge LB_3917
	JZ_SPC BYTE [r13+8+r14], LB_3915
LB_3917
	lea rax,[r14+3]
	cmp rax,r9
	jg LB_3920
	jmp LB_3921
LB_3920:
	mov r8,unt_1
	jmp LB_3918
LB_3921:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],226
	jnz LB_3922
	cmp BYTE [rdi+1],151
	jnz LB_3922
	cmp BYTE [rdi+2],130
	jnz LB_3922
	jmp LB_3923
LB_3922:
	mov r8,unt_1
	jmp LB_3918
LB_3923:
	add r14,3
	jmp LB_3919
LB_3918:
	add rsp,0
	jmp LB_3914
LB_3919:
	jmp LB_3925
LB_3924:
	add r14,1 
LB_3925:
	cmp r14,r9
	jge LB_3926
	JZ_SPC BYTE [r13+8+r14], LB_3924
LB_3926
	call GRM_215
	cmp BYTE [r8+6],0
	jnz LB_3929
	jmp LB_3930
LB_3929:
	jmp LB_3927
LB_3930:
	sub rsp,8
; .mov_ptn2 2'(= {| l |} ) ⊢ 8'(= {| l |} )
; .mov_ptn 2'(= {| l |} ) ⊢ 8'(= {| l |} )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_3928
LB_3927:
	add rsp,0
	pop rdi
	pop r9 
	pop r14
	pop r13
	ret
LB_3928:
	jmp LB_3932
LB_3931:
	add r14,1 
LB_3932:
	cmp r14,r9
	jge LB_3933
	JZ_SPC BYTE [r13+8+r14], LB_3931
LB_3933
	call GRM_252
	cmp BYTE [r8+6],0
	jnz LB_3936
	jmp LB_3937
LB_3936:
	jmp LB_3934
LB_3937:
	sub rsp,8
	mov r8,[r8+8]
; .mov_ptn2 2'(= a2◂ [ {| l |}] ) ⊢ 9'(= a2◂ [ {| l |}] )
; .mov_ptn 2'(= a2◂ [ {| l |}] ) ⊢ 9'(= a2◂ [ {| l |}] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_3935
LB_3934:
	add rsp,8
	pop rdi
	pop r9 
	pop r14
	pop r13
	ret
LB_3935:
	mov QWORD [rsp+8*2],r14
	mov r13,QWORD [rsp+16+8*2]
	mov r14,QWORD [rsp+8*2]
	jmp LB_3939
LB_3939
;; rsp=2 , %2334~1'(= r ) %2333~0'(= r ) %2332~9'(= a2◂ [ {| l |}] ) %2331~8'(= {| l |} ) 
; #21 { 8'(= {| l |} ) 9'(= a2◂ [ {| l |}] ) } ⊢ 0(<2)◂{ 8'(= {| l |} ) 9'(= a2◂ [ {| l |}] ) }
;; rsp=2 , %2335~0(<2)◂{ 8'(= {| l |} ) 9'(= a2◂ [ {| l |}] ) } %2334~1'(= r ) %2333~0'(= r ) 
; #22 0(<2)◂{ 8'(= {| l |} ) 9'(= a2◂ [ {| l |}] ) } ⊢ 0(<2)◂0(<2)◂{ 8'(= {| l |} ) 9'(= a2◂ [ {| l |}] ) }
;; rsp=2 , %2336~0(<2)◂0(<2)◂{ 8'(= {| l |} ) 9'(= a2◂ [ {| l |}] ) } %2334~1'(= r ) %2333~0'(= r ) 
; ∎ 0(<2)◂0(<2)◂{ 8'(= {| l |} ) 9'(= a2◂ [ {| l |}] ) }
; .dlt.ptn 1'(= r )
; .dlt.ptn 0'(= r )
; .mov_ptn2 0(<2)◂0(<2)◂{ 8'(= {| l |} ) 9'(= a2◂ [ {| l |}] ) } ⊢ 2'(= a3◂ [ a2◂ [ {| l |}]] )
; .mov_ptn 0(<2)◂0(<2)◂{ 8'(= {| l |} ) 9'(= a2◂ [ {| l |}] ) } ⊢ 2'(= a3◂ [ a2◂ [ {| l |}]] )
	mov rax,[SS_RCD_2_TOP]
	mov rsi,[rax] 
	mov QWORD [SS_RCD_2_TOP],rsi
	mov QWORD [rax],0
	mov r13,rax
	mov rax,QWORD [rsp-8+8*2]
	mov QWORD [r13+8+8*0],rax
	mov rax,QWORD [rsp-8+8*1]
	mov QWORD [r13+8+8*1],rax
	mov rax,r13
	mov BYTE [rax+6],0
	mov rdi,rax
	mov rax,r15
	mov r15,QWORD [r15] 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,16
	jmp LB_3938
LB_3938:
	cmp BYTE [r8+6],0
	jnz LB_3914
	pop r14
	pop r9
	add rsp,8
	pop r13
	ret
LB_3914:
	mov r9,QWORD [rsp+8]
	mov r14,QWORD [rsp+16]
	mov r13,QWORD [rsp+24]
	jmp LB_3942
LB_3941:
	add r14,1 
LB_3942:
	cmp r14,r9
	jge LB_3943
	JZ_SPC BYTE [r13+8+r14], LB_3941
LB_3943
	call GRM_215
	cmp BYTE [r8+6],0
	jnz LB_3946
	jmp LB_3947
LB_3946:
	jmp LB_3944
LB_3947:
	sub rsp,8
; .mov_ptn2 2'(= {| l |} ) ⊢ 8'(= {| l |} )
; .mov_ptn 2'(= {| l |} ) ⊢ 8'(= {| l |} )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_3945
LB_3944:
	add rsp,0
	jmp LB_3940
LB_3945:
	jmp LB_3949
LB_3948:
	add r14,1 
LB_3949:
	cmp r14,r9
	jge LB_3950
	JZ_SPC BYTE [r13+8+r14], LB_3948
LB_3950
	call GRM_252
	cmp BYTE [r8+6],0
	jnz LB_3953
	jmp LB_3954
LB_3953:
	jmp LB_3951
LB_3954:
	sub rsp,8
	mov r8,[r8+8]
; .mov_ptn2 2'(= a2◂ [ {| l |}] ) ⊢ 9'(= a2◂ [ {| l |}] )
; .mov_ptn 2'(= a2◂ [ {| l |}] ) ⊢ 9'(= a2◂ [ {| l |}] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_3952
LB_3951:
	add rsp,8
	pop rdi
	pop r9 
	pop r14
	pop r13
	ret
LB_3952:
	mov QWORD [rsp+8*2],r14
	mov r13,QWORD [rsp+16+8*2]
	mov r14,QWORD [rsp+8*2]
	jmp LB_3956
LB_3956
;; rsp=2 , %2340~1'(= r ) %2339~0'(= r ) %2338~9'(= a2◂ [ {| l |}] ) %2337~8'(= {| l |} ) 
; #21 { 8'(= {| l |} ) 9'(= a2◂ [ {| l |}] ) } ⊢ 0(<2)◂{ 8'(= {| l |} ) 9'(= a2◂ [ {| l |}] ) }
;; rsp=2 , %2341~0(<2)◂{ 8'(= {| l |} ) 9'(= a2◂ [ {| l |}] ) } %2340~1'(= r ) %2339~0'(= r ) 
; #22 0(<2)◂{ 8'(= {| l |} ) 9'(= a2◂ [ {| l |}] ) } ⊢ 0(<2)◂0(<2)◂{ 8'(= {| l |} ) 9'(= a2◂ [ {| l |}] ) }
;; rsp=2 , %2342~0(<2)◂0(<2)◂{ 8'(= {| l |} ) 9'(= a2◂ [ {| l |}] ) } %2340~1'(= r ) %2339~0'(= r ) 
; ∎ 0(<2)◂0(<2)◂{ 8'(= {| l |} ) 9'(= a2◂ [ {| l |}] ) }
; .dlt.ptn 1'(= r )
; .dlt.ptn 0'(= r )
; .mov_ptn2 0(<2)◂0(<2)◂{ 8'(= {| l |} ) 9'(= a2◂ [ {| l |}] ) } ⊢ 2'(= a3◂ [ a2◂ [ {| l |}]] )
; .mov_ptn 0(<2)◂0(<2)◂{ 8'(= {| l |} ) 9'(= a2◂ [ {| l |}] ) } ⊢ 2'(= a3◂ [ a2◂ [ {| l |}]] )
	mov rax,[SS_RCD_2_TOP]
	mov rsi,[rax] 
	mov QWORD [SS_RCD_2_TOP],rsi
	mov QWORD [rax],0
	mov r13,rax
	mov rax,QWORD [rsp-8+8*2]
	mov QWORD [r13+8+8*0],rax
	mov rax,QWORD [rsp-8+8*1]
	mov QWORD [r13+8+8*1],rax
	mov rax,r13
	mov BYTE [rax+6],0
	mov rdi,rax
	mov rax,r15
	mov r15,QWORD [r15] 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,16
	jmp LB_3955
LB_3955:
	cmp BYTE [r8+6],0
	jnz LB_3940
	pop r14
	pop r9
	add rsp,8
	pop r13
	ret
LB_3940:
	mov r9,QWORD [rsp+8]
	mov r14,QWORD [rsp+16]
	mov r13,QWORD [rsp+24]
	mov QWORD [rsp+8*0],r14
	mov r13,QWORD [rsp+16+8*0]
	mov r14,QWORD [rsp+8*0]
	jmp LB_3959
LB_3959
;; rsp=0 , %2344~1'(= r ) %2343~0'(= r ) 
; #20 { } ⊢ 1(<2)◂{ }
;; rsp=0 , %2345~1(<2)◂{ } %2344~1'(= r ) %2343~0'(= r ) 
; #22 1(<2)◂{ } ⊢ 0(<2)◂1(<2)◂{ }
;; rsp=0 , %2346~0(<2)◂1(<2)◂{ } %2344~1'(= r ) %2343~0'(= r ) 
; ∎ 0(<2)◂1(<2)◂{ }
; .dlt.ptn 1'(= r )
; .dlt.ptn 0'(= r )
; .mov_ptn2 0(<2)◂1(<2)◂{ } ⊢ 2'(= a3◂ [ a2◂ [ {| l |}]] )
; .mov_ptn 0(<2)◂1(<2)◂{ } ⊢ 2'(= a3◂ [ a2◂ [ {| l |}]] )
	mov rax,unt 
	mov rax,unt_1
	mov rdi,rax
	mov rax,r15
	mov r15,QWORD [r15] 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	jmp LB_3958
LB_3958:
	cmp BYTE [r8+6],0
	jnz LB_3957
	pop r14
	pop r9
	add rsp,8
	pop r13
	ret
LB_3957:
	pop rdi
	pop r9 
	pop r14
	pop r13
	ret
ETR_252:
	mov r9,0x0000_ffff_ffff_ffff
	and r9,[r13]
	call GRM_252
	ret
GRM_252:
	sub rsp,32
	mov QWORD [rsp+24],r13
	mov QWORD [rsp+16],r14 
	mov QWORD [rsp+8],r9
	jmp LB_3962
LB_3961:
	add r14,1 
LB_3962:
	cmp r14,r9
	jge LB_3963
	JZ_SPC BYTE [r13+8+r14], LB_3961
LB_3963
	lea rax,[r14+1]
	cmp rax,r9
	jg LB_3966
	jmp LB_3967
LB_3966:
	mov r8,unt_1
	jmp LB_3964
LB_3967:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],44
	jnz LB_3968
	jmp LB_3969
LB_3968:
	mov r8,unt_1
	jmp LB_3964
LB_3969:
	add r14,1
	jmp LB_3965
LB_3964:
	add rsp,0
	jmp LB_3960
LB_3965:
	jmp LB_3971
LB_3970:
	add r14,1 
LB_3971:
	cmp r14,r9
	jge LB_3972
	JZ_SPC BYTE [r13+8+r14], LB_3970
LB_3972
	call GRM_215
	cmp BYTE [r8+6],0
	jnz LB_3975
	jmp LB_3976
LB_3975:
	jmp LB_3973
LB_3976:
	sub rsp,8
; .mov_ptn2 2'(= {| l |} ) ⊢ 8'(= {| l |} )
; .mov_ptn 2'(= {| l |} ) ⊢ 8'(= {| l |} )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_3974
LB_3973:
	add rsp,0
	pop rdi
	pop r9 
	pop r14
	pop r13
	ret
LB_3974:
	jmp LB_3978
LB_3977:
	add r14,1 
LB_3978:
	cmp r14,r9
	jge LB_3979
	JZ_SPC BYTE [r13+8+r14], LB_3977
LB_3979
	call GRM_252
	cmp BYTE [r8+6],0
	jnz LB_3982
	jmp LB_3983
LB_3982:
	jmp LB_3980
LB_3983:
	sub rsp,8
	mov r8,[r8+8]
; .mov_ptn2 2'(= a2◂ [ {| l |}] ) ⊢ 9'(= a2◂ [ {| l |}] )
; .mov_ptn 2'(= a2◂ [ {| l |}] ) ⊢ 9'(= a2◂ [ {| l |}] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_3981
LB_3980:
	add rsp,8
	pop rdi
	pop r9 
	pop r14
	pop r13
	ret
LB_3981:
	mov QWORD [rsp+8*2],r14
	mov r13,QWORD [rsp+16+8*2]
	mov r14,QWORD [rsp+8*2]
	jmp LB_3985
LB_3985
;; rsp=2 , %2350~1'(= r ) %2349~0'(= r ) %2348~9'(= a2◂ [ {| l |}] ) %2347~8'(= {| l |} ) 
; #21 { 8'(= {| l |} ) 9'(= a2◂ [ {| l |}] ) } ⊢ 0(<2)◂{ 8'(= {| l |} ) 9'(= a2◂ [ {| l |}] ) }
;; rsp=2 , %2351~0(<2)◂{ 8'(= {| l |} ) 9'(= a2◂ [ {| l |}] ) } %2350~1'(= r ) %2349~0'(= r ) 
; #22 0(<2)◂{ 8'(= {| l |} ) 9'(= a2◂ [ {| l |}] ) } ⊢ 0(<2)◂0(<2)◂{ 8'(= {| l |} ) 9'(= a2◂ [ {| l |}] ) }
;; rsp=2 , %2352~0(<2)◂0(<2)◂{ 8'(= {| l |} ) 9'(= a2◂ [ {| l |}] ) } %2350~1'(= r ) %2349~0'(= r ) 
; ∎ 0(<2)◂0(<2)◂{ 8'(= {| l |} ) 9'(= a2◂ [ {| l |}] ) }
; .dlt.ptn 1'(= r )
; .dlt.ptn 0'(= r )
; .mov_ptn2 0(<2)◂0(<2)◂{ 8'(= {| l |} ) 9'(= a2◂ [ {| l |}] ) } ⊢ 2'(= a3◂ [ a2◂ [ {| l |}]] )
; .mov_ptn 0(<2)◂0(<2)◂{ 8'(= {| l |} ) 9'(= a2◂ [ {| l |}] ) } ⊢ 2'(= a3◂ [ a2◂ [ {| l |}]] )
	mov rax,[SS_RCD_2_TOP]
	mov rsi,[rax] 
	mov QWORD [SS_RCD_2_TOP],rsi
	mov QWORD [rax],0
	mov r13,rax
	mov rax,QWORD [rsp-8+8*2]
	mov QWORD [r13+8+8*0],rax
	mov rax,QWORD [rsp-8+8*1]
	mov QWORD [r13+8+8*1],rax
	mov rax,r13
	mov BYTE [rax+6],0
	mov rdi,rax
	mov rax,r15
	mov r15,QWORD [r15] 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,16
	jmp LB_3984
LB_3984:
	cmp BYTE [r8+6],0
	jnz LB_3960
	pop r14
	pop r9
	add rsp,8
	pop r13
	ret
LB_3960:
	mov r9,QWORD [rsp+8]
	mov r14,QWORD [rsp+16]
	mov r13,QWORD [rsp+24]
	mov QWORD [rsp+8*0],r14
	mov r13,QWORD [rsp+16+8*0]
	mov r14,QWORD [rsp+8*0]
	jmp LB_3988
LB_3988
;; rsp=0 , %2354~1'(= r ) %2353~0'(= r ) 
; #20 { } ⊢ 1(<2)◂{ }
;; rsp=0 , %2355~1(<2)◂{ } %2354~1'(= r ) %2353~0'(= r ) 
; #22 1(<2)◂{ } ⊢ 0(<2)◂1(<2)◂{ }
;; rsp=0 , %2356~0(<2)◂1(<2)◂{ } %2354~1'(= r ) %2353~0'(= r ) 
; ∎ 0(<2)◂1(<2)◂{ }
; .dlt.ptn 1'(= r )
; .dlt.ptn 0'(= r )
; .mov_ptn2 0(<2)◂1(<2)◂{ } ⊢ 2'(= a3◂ [ a2◂ [ {| l |}]] )
; .mov_ptn 0(<2)◂1(<2)◂{ } ⊢ 2'(= a3◂ [ a2◂ [ {| l |}]] )
	mov rax,unt 
	mov rax,unt_1
	mov rdi,rax
	mov rax,r15
	mov r15,QWORD [r15] 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	jmp LB_3987
LB_3987:
	cmp BYTE [r8+6],0
	jnz LB_3986
	pop r14
	pop r9
	add rsp,8
	pop r13
	ret
LB_3986:
	pop rdi
	pop r9 
	pop r14
	pop r13
	ret
ETR_253:
	mov r9,0x0000_ffff_ffff_ffff
	and r9,[r13]
	call GRM_253
	ret
GRM_253:
	sub rsp,32
	mov QWORD [rsp+24],r13
	mov QWORD [rsp+16],r14 
	mov QWORD [rsp+8],r9
	jmp LB_3991
LB_3990:
	add r14,1 
LB_3991:
	cmp r14,r9
	jge LB_3992
	JZ_SPC BYTE [r13+8+r14], LB_3990
LB_3992
	call GRM_217
	cmp BYTE [r8+6],0
	jnz LB_3995
	jmp LB_3996
LB_3995:
	jmp LB_3993
LB_3996:
	sub rsp,8
	mov r8,[r8+8]
; .mov_ptn2 2'(= a35◂ [ *{ }] ) ⊢ 8'(= a35◂ [ *{ }] )
; .mov_ptn 2'(= a35◂ [ *{ }] ) ⊢ 8'(= a35◂ [ *{ }] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_3994
LB_3993:
	add rsp,0
	jmp LB_3989
LB_3994:
	jmp LB_3998
LB_3997:
	add r14,1 
LB_3998:
	cmp r14,r9
	jge LB_3999
	JZ_SPC BYTE [r13+8+r14], LB_3997
LB_3999
	lea rax,[r14+1]
	cmp rax,r9
	jg LB_4002
	jmp LB_4003
LB_4002:
	mov r8,unt_1
	jmp LB_4000
LB_4003:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],64
	jnz LB_4004
	jmp LB_4005
LB_4004:
	mov r8,unt_1
	jmp LB_4000
LB_4005:
	add r14,1
	jmp LB_4001
LB_4000:
	add rsp,8
	jmp LB_3989
LB_4001:
	jmp LB_4007
LB_4006:
	add r14,1 
LB_4007:
	cmp r14,r9
	jge LB_4008
	JZ_SPC BYTE [r13+8+r14], LB_4006
LB_4008
	lea rax,[r14+1]
	cmp rax,r9
	jg LB_4011
	jmp LB_4012
LB_4011:
	mov r8,unt_1
	jmp LB_4009
LB_4012:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],46
	jnz LB_4013
	jmp LB_4014
LB_4013:
	mov r8,unt_1
	jmp LB_4009
LB_4014:
	add r14,1
	jmp LB_4010
LB_4009:
	add rsp,8
	pop rdi
	pop r9 
	pop r14
	pop r13
	ret
LB_4010:
	jmp LB_4016
LB_4015:
	add r14,1 
LB_4016:
	cmp r14,r9
	jge LB_4017
	JZ_SPC BYTE [r13+8+r14], LB_4015
LB_4017
	call GRM_250
	cmp BYTE [r8+6],0
	jnz LB_4020
	jmp LB_4021
LB_4020:
	jmp LB_4018
LB_4021:
	sub rsp,16
; .mov_ptn2 2'(= *{ {| l |}a34◂ [ ]} ) ⊢ { 9'(= {| l |} ) 10'(= a34◂ [ ] ) }
; .mov_ptn 2'(= *{ {| l |}a34◂ [ ]} ) ⊢ { 9'(= {| l |} ) 10'(= a34◂ [ ] ) }
	mov rdi,r8
	mov rdi,QWORD [rdi+8+8*0]
	mov r10,rdi
	mov QWORD [rsp-8+8*2],r10
	mov rdi,r8
	mov rdi,QWORD [rdi+8+8*1]
	mov r11,rdi
	mov QWORD [rsp-8+8*1],r11
	jmp LB_4019
LB_4018:
	add rsp,8
	pop rdi
	pop r9 
	pop r14
	pop r13
	ret
LB_4019:
	jmp LB_4023
LB_4022:
	add r14,1 
LB_4023:
	cmp r14,r9
	jge LB_4024
	JZ_SPC BYTE [r13+8+r14], LB_4022
LB_4024
	call GRM_253
	cmp BYTE [r8+6],0
	jnz LB_4027
	jmp LB_4028
LB_4027:
	jmp LB_4025
LB_4028:
	sub rsp,8
	mov r8,[r8+8]
; .mov_ptn2 2'(= a2◂ [ *{ {| l |}a34◂ [ ]}] ) ⊢ 11'(= a2◂ [ *{ {| l |}a34◂ [ ]}] )
; .mov_ptn 2'(= a2◂ [ *{ {| l |}a34◂ [ ]}] ) ⊢ 11'(= a2◂ [ *{ {| l |}a34◂ [ ]}] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_4026
LB_4025:
	add rsp,24
	pop rdi
	pop r9 
	pop r14
	pop r13
	ret
LB_4026:
	mov QWORD [rsp+8*4],r14
	mov r13,QWORD [rsp+16+8*4]
	mov r14,QWORD [rsp+8*4]
	jmp LB_4030
LB_4030
;; rsp=4 , %2361~1'(= r ) %2360~0'(= r ) %2359~11'(= a2◂ [ *{ {| l |}a34◂ [ ]}] ) %2358~{ 9'(= {| l |} ) 10'(= a34◂ [ ] ) } %2357~8'(= a35◂ [ *{ }] ) 
; #21 { { 9'(= {| l |} ) 10'(= a34◂ [ ] ) } 11'(= a2◂ [ *{ {| l |}a34◂ [ ]}] ) } ⊢ 0(<2)◂{ { 9'(= {| l |} ) 10'(= a34◂ [ ] ) } 11'(= a2◂ [ *{ {| l |}a34◂ [ ]}] ) }
;; rsp=4 , %2362~0(<2)◂{ { 9'(= {| l |} ) 10'(= a34◂ [ ] ) } 11'(= a2◂ [ *{ {| l |}a34◂ [ ]}] ) } %2361~1'(= r ) %2360~0'(= r ) %2357~8'(= a35◂ [ *{ }] ) 
; #22 0(<2)◂{ { 9'(= {| l |} ) 10'(= a34◂ [ ] ) } 11'(= a2◂ [ *{ {| l |}a34◂ [ ]}] ) } ⊢ 0(<2)◂0(<2)◂{ { 9'(= {| l |} ) 10'(= a34◂ [ ] ) } 11'(= a2◂ [ *{ {| l |}a34◂ [ ]}] ) }
;; rsp=4 , %2363~0(<2)◂0(<2)◂{ { 9'(= {| l |} ) 10'(= a34◂ [ ] ) } 11'(= a2◂ [ *{ {| l |}a34◂ [ ]}] ) } %2361~1'(= r ) %2360~0'(= r ) %2357~8'(= a35◂ [ *{ }] ) 
; ∎ 0(<2)◂0(<2)◂{ { 9'(= {| l |} ) 10'(= a34◂ [ ] ) } 11'(= a2◂ [ *{ {| l |}a34◂ [ ]}] ) }
; .dlt.ptn 1'(= r )
; .dlt.ptn 0'(= r )
; .dlt.ptn 8'(= a35◂ [ *{ }] )
;	.dlt adt ⊢ _  
; .mov_ptn2 0(<2)◂0(<2)◂{ { 9'(= {| l |} ) 10'(= a34◂ [ ] ) } 11'(= a2◂ [ *{ {| l |}a34◂ [ ]}] ) } ⊢ 2'(= a3◂ [ a2◂ [ *{ {| l |}a34◂ [ ]}]] )
; .mov_ptn 0(<2)◂0(<2)◂{ { 9'(= {| l |} ) 10'(= a34◂ [ ] ) } 11'(= a2◂ [ *{ {| l |}a34◂ [ ]}] ) } ⊢ 2'(= a3◂ [ a2◂ [ *{ {| l |}a34◂ [ ]}]] )
	mov rax,[SS_RCD_2_TOP]
	mov rsi,[rax] 
	mov QWORD [SS_RCD_2_TOP],rsi
	mov QWORD [rax],0
	mov r13,rax
	mov rax,[SS_RCD_2_TOP]
	mov rsi,[rax] 
	mov QWORD [SS_RCD_2_TOP],rsi
	mov QWORD [rax],0
	mov r14,rax
	mov rax,QWORD [rsp-8+8*3]
	mov QWORD [r14+8+8*0],rax
	mov rax,QWORD [rsp-8+8*2]
	mov QWORD [r14+8+8*1],rax
	mov rax,r14
	mov QWORD [r13+8+8*0],rax
	mov rax,QWORD [rsp-8+8*1]
	mov QWORD [r13+8+8*1],rax
	mov rax,r13
	mov BYTE [rax+6],0
	mov rdi,rax
	mov rax,r15
	mov r15,QWORD [r15] 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,32
	jmp LB_4029
LB_4029:
	cmp BYTE [r8+6],0
	jnz LB_3989
	pop r14
	pop r9
	add rsp,8
	pop r13
	ret
LB_3989:
	mov r9,QWORD [rsp+8]
	mov r14,QWORD [rsp+16]
	mov r13,QWORD [rsp+24]
	mov QWORD [rsp+8*0],r14
	mov r13,QWORD [rsp+16+8*0]
	mov r14,QWORD [rsp+8*0]
	jmp LB_4033
LB_4033
;; rsp=0 , %2365~1'(= r ) %2364~0'(= r ) 
; #20 { } ⊢ 1(<2)◂{ }
;; rsp=0 , %2366~1(<2)◂{ } %2365~1'(= r ) %2364~0'(= r ) 
; #22 1(<2)◂{ } ⊢ 0(<2)◂1(<2)◂{ }
;; rsp=0 , %2367~0(<2)◂1(<2)◂{ } %2365~1'(= r ) %2364~0'(= r ) 
; ∎ 0(<2)◂1(<2)◂{ }
; .dlt.ptn 1'(= r )
; .dlt.ptn 0'(= r )
; .mov_ptn2 0(<2)◂1(<2)◂{ } ⊢ 2'(= a3◂ [ a2◂ [ *{ {| l |}a34◂ [ ]}]] )
; .mov_ptn 0(<2)◂1(<2)◂{ } ⊢ 2'(= a3◂ [ a2◂ [ *{ {| l |}a34◂ [ ]}]] )
	mov rax,unt 
	mov rax,unt_1
	mov rdi,rax
	mov rax,r15
	mov r15,QWORD [r15] 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	jmp LB_4032
LB_4032:
	cmp BYTE [r8+6],0
	jnz LB_4031
	pop r14
	pop r9
	add rsp,8
	pop r13
	ret
LB_4031:
	pop rdi
	pop r9 
	pop r14
	pop r13
	ret
ETR_254:
	mov r9,0x0000_ffff_ffff_ffff
	and r9,[r13]
	call GRM_254
	ret
GRM_254:
	sub rsp,32
	mov QWORD [rsp+24],r13
	mov QWORD [rsp+16],r14 
	mov QWORD [rsp+8],r9
	jmp LB_4036
LB_4035:
	add r14,1 
LB_4036:
	cmp r14,r9
	jge LB_4037
	JZ_SPC BYTE [r13+8+r14], LB_4035
LB_4037
	call GRM_217
	cmp BYTE [r8+6],0
	jnz LB_4040
	jmp LB_4041
LB_4040:
	jmp LB_4038
LB_4041:
	sub rsp,8
	mov r8,[r8+8]
; .mov_ptn2 2'(= a35◂ [ *{ }] ) ⊢ 8'(= a35◂ [ *{ }] )
; .mov_ptn 2'(= a35◂ [ *{ }] ) ⊢ 8'(= a35◂ [ *{ }] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_4039
LB_4038:
	add rsp,0
	jmp LB_4034
LB_4039:
	jmp LB_4043
LB_4042:
	add r14,1 
LB_4043:
	cmp r14,r9
	jge LB_4044
	JZ_SPC BYTE [r13+8+r14], LB_4042
LB_4044
	lea rax,[r14+3]
	cmp rax,r9
	jg LB_4047
	jmp LB_4048
LB_4047:
	mov r8,unt_1
	jmp LB_4045
LB_4048:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],226
	jnz LB_4049
	cmp BYTE [rdi+1],136
	jnz LB_4049
	cmp BYTE [rdi+2],144
	jnz LB_4049
	jmp LB_4050
LB_4049:
	mov r8,unt_1
	jmp LB_4045
LB_4050:
	add r14,3
	jmp LB_4046
LB_4045:
	add rsp,8
	jmp LB_4034
LB_4046:
	jmp LB_4052
LB_4051:
	add r14,1 
LB_4052:
	cmp r14,r9
	jge LB_4053
	JZ_SPC BYTE [r13+8+r14], LB_4051
LB_4053
	call GRM_74
	cmp BYTE [r8+6],0
	jnz LB_4056
	jmp LB_4057
LB_4056:
	jmp LB_4054
LB_4057:
	sub rsp,8
; .mov_ptn2 2'(= {| l |} ) ⊢ 9'(= {| l |} )
; .mov_ptn 2'(= {| l |} ) ⊢ 9'(= {| l |} )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_4055
LB_4054:
	add rsp,8
	pop rdi
	pop r9 
	pop r14
	pop r13
	ret
LB_4055:
	jmp LB_4059
LB_4058:
	add r14,1 
LB_4059:
	cmp r14,r9
	jge LB_4060
	JZ_SPC BYTE [r13+8+r14], LB_4058
LB_4060
	lea rax,[r14+1]
	cmp rax,r9
	jg LB_4063
	jmp LB_4064
LB_4063:
	mov r8,unt_1
	jmp LB_4061
LB_4064:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],58
	jnz LB_4065
	jmp LB_4066
LB_4065:
	mov r8,unt_1
	jmp LB_4061
LB_4066:
	add r14,1
	jmp LB_4062
LB_4061:
	add rsp,16
	pop rdi
	pop r9 
	pop r14
	pop r13
	ret
LB_4062:
	jmp LB_4068
LB_4067:
	add r14,1 
LB_4068:
	cmp r14,r9
	jge LB_4069
	JZ_SPC BYTE [r13+8+r14], LB_4067
LB_4069
	call GRM_210
	cmp BYTE [r8+6],0
	jnz LB_4072
	jmp LB_4073
LB_4072:
	jmp LB_4070
LB_4073:
	sub rsp,8
	mov r8,[r8+8]
; .mov_ptn2 2'(= a23◂ [ ] ) ⊢ 10'(= a23◂ [ ] )
; .mov_ptn 2'(= a23◂ [ ] ) ⊢ 10'(= a23◂ [ ] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_4071
LB_4070:
	add rsp,16
	pop rdi
	pop r9 
	pop r14
	pop r13
	ret
LB_4071:
	jmp LB_4075
LB_4074:
	add r14,1 
LB_4075:
	cmp r14,r9
	jge LB_4076
	JZ_SPC BYTE [r13+8+r14], LB_4074
LB_4076
	call GRM_254
	cmp BYTE [r8+6],0
	jnz LB_4079
	jmp LB_4080
LB_4079:
	jmp LB_4077
LB_4080:
	sub rsp,8
	mov r8,[r8+8]
; .mov_ptn2 2'(= a2◂ [ *{ {| l |}a23◂ [ ]}] ) ⊢ 11'(= a2◂ [ *{ {| l |}a23◂ [ ]}] )
; .mov_ptn 2'(= a2◂ [ *{ {| l |}a23◂ [ ]}] ) ⊢ 11'(= a2◂ [ *{ {| l |}a23◂ [ ]}] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_4078
LB_4077:
	add rsp,24
	pop rdi
	pop r9 
	pop r14
	pop r13
	ret
LB_4078:
	mov QWORD [rsp+8*4],r14
	mov r13,QWORD [rsp+16+8*4]
	mov r14,QWORD [rsp+8*4]
	jmp LB_4082
LB_4082
;; rsp=4 , %2373~1'(= r ) %2372~0'(= r ) %2371~11'(= a2◂ [ *{ {| l |}a23◂ [ ]}] ) %2370~10'(= a23◂ [ ] ) %2369~9'(= {| l |} ) %2368~8'(= a35◂ [ *{ }] ) 
; #21 { { 9'(= {| l |} ) 10'(= a23◂ [ ] ) } 11'(= a2◂ [ *{ {| l |}a23◂ [ ]}] ) } ⊢ 0(<2)◂{ { 9'(= {| l |} ) 10'(= a23◂ [ ] ) } 11'(= a2◂ [ *{ {| l |}a23◂ [ ]}] ) }
;; rsp=4 , %2374~0(<2)◂{ { 9'(= {| l |} ) 10'(= a23◂ [ ] ) } 11'(= a2◂ [ *{ {| l |}a23◂ [ ]}] ) } %2373~1'(= r ) %2372~0'(= r ) %2368~8'(= a35◂ [ *{ }] ) 
; #22 0(<2)◂{ { 9'(= {| l |} ) 10'(= a23◂ [ ] ) } 11'(= a2◂ [ *{ {| l |}a23◂ [ ]}] ) } ⊢ 0(<2)◂0(<2)◂{ { 9'(= {| l |} ) 10'(= a23◂ [ ] ) } 11'(= a2◂ [ *{ {| l |}a23◂ [ ]}] ) }
;; rsp=4 , %2375~0(<2)◂0(<2)◂{ { 9'(= {| l |} ) 10'(= a23◂ [ ] ) } 11'(= a2◂ [ *{ {| l |}a23◂ [ ]}] ) } %2373~1'(= r ) %2372~0'(= r ) %2368~8'(= a35◂ [ *{ }] ) 
; ∎ 0(<2)◂0(<2)◂{ { 9'(= {| l |} ) 10'(= a23◂ [ ] ) } 11'(= a2◂ [ *{ {| l |}a23◂ [ ]}] ) }
; .dlt.ptn 1'(= r )
; .dlt.ptn 0'(= r )
; .dlt.ptn 8'(= a35◂ [ *{ }] )
;	.dlt adt ⊢ _  
; .mov_ptn2 0(<2)◂0(<2)◂{ { 9'(= {| l |} ) 10'(= a23◂ [ ] ) } 11'(= a2◂ [ *{ {| l |}a23◂ [ ]}] ) } ⊢ 2'(= a3◂ [ a2◂ [ *{ {| l |}a23◂ [ ]}]] )
; .mov_ptn 0(<2)◂0(<2)◂{ { 9'(= {| l |} ) 10'(= a23◂ [ ] ) } 11'(= a2◂ [ *{ {| l |}a23◂ [ ]}] ) } ⊢ 2'(= a3◂ [ a2◂ [ *{ {| l |}a23◂ [ ]}]] )
	mov rax,[SS_RCD_2_TOP]
	mov rsi,[rax] 
	mov QWORD [SS_RCD_2_TOP],rsi
	mov QWORD [rax],0
	mov r13,rax
	mov rax,[SS_RCD_2_TOP]
	mov rsi,[rax] 
	mov QWORD [SS_RCD_2_TOP],rsi
	mov QWORD [rax],0
	mov r14,rax
	mov rax,QWORD [rsp-8+8*3]
	mov QWORD [r14+8+8*0],rax
	mov rax,QWORD [rsp-8+8*2]
	mov QWORD [r14+8+8*1],rax
	mov rax,r14
	mov QWORD [r13+8+8*0],rax
	mov rax,QWORD [rsp-8+8*1]
	mov QWORD [r13+8+8*1],rax
	mov rax,r13
	mov BYTE [rax+6],0
	mov rdi,rax
	mov rax,r15
	mov r15,QWORD [r15] 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,32
	jmp LB_4081
LB_4081:
	cmp BYTE [r8+6],0
	jnz LB_4034
	pop r14
	pop r9
	add rsp,8
	pop r13
	ret
LB_4034:
	mov r9,QWORD [rsp+8]
	mov r14,QWORD [rsp+16]
	mov r13,QWORD [rsp+24]
	mov QWORD [rsp+8*0],r14
	mov r13,QWORD [rsp+16+8*0]
	mov r14,QWORD [rsp+8*0]
	jmp LB_4085
LB_4085
;; rsp=0 , %2377~1'(= r ) %2376~0'(= r ) 
; #20 { } ⊢ 1(<2)◂{ }
;; rsp=0 , %2378~1(<2)◂{ } %2377~1'(= r ) %2376~0'(= r ) 
; #22 1(<2)◂{ } ⊢ 0(<2)◂1(<2)◂{ }
;; rsp=0 , %2379~0(<2)◂1(<2)◂{ } %2377~1'(= r ) %2376~0'(= r ) 
; ∎ 0(<2)◂1(<2)◂{ }
; .dlt.ptn 1'(= r )
; .dlt.ptn 0'(= r )
; .mov_ptn2 0(<2)◂1(<2)◂{ } ⊢ 2'(= a3◂ [ a2◂ [ *{ {| l |}a23◂ [ ]}]] )
; .mov_ptn 0(<2)◂1(<2)◂{ } ⊢ 2'(= a3◂ [ a2◂ [ *{ {| l |}a23◂ [ ]}]] )
	mov rax,unt 
	mov rax,unt_1
	mov rdi,rax
	mov rax,r15
	mov r15,QWORD [r15] 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	jmp LB_4084
LB_4084:
	cmp BYTE [r8+6],0
	jnz LB_4083
	pop r14
	pop r9
	add rsp,8
	pop r13
	ret
LB_4083:
	pop rdi
	pop r9 
	pop r14
	pop r13
	ret
ETR_255:
	mov r9,0x0000_ffff_ffff_ffff
	and r9,[r13]
	call GRM_255
	ret
GRM_255:
	sub rsp,32
	mov QWORD [rsp+24],r13
	mov QWORD [rsp+16],r14 
	mov QWORD [rsp+8],r9
	jmp LB_4088
LB_4087:
	add r14,1 
LB_4088:
	cmp r14,r9
	jge LB_4089
	JZ_LINE_SPC BYTE [r13+8+r14], LB_4087
LB_4089
	call GRM_217
	cmp BYTE [r8+6],0
	jnz LB_4092
	jmp LB_4093
LB_4092:
	jmp LB_4090
LB_4093:
	sub rsp,8
	mov r8,[r8+8]
; .mov_ptn2 2'(= a35◂ [ *{ }] ) ⊢ 8'(= a35◂ [ *{ }] )
; .mov_ptn 2'(= a35◂ [ *{ }] ) ⊢ 8'(= a35◂ [ *{ }] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_4091
LB_4090:
	add rsp,0
	jmp LB_4086
LB_4091:
	jmp LB_4095
LB_4094:
	add r14,1 
LB_4095:
	cmp r14,r9
	jge LB_4096
	JZ_LINE_SPC BYTE [r13+8+r14], LB_4094
LB_4096
	lea rax,[r14+1]
	cmp rax,r9
	jg LB_4099
	jmp LB_4100
LB_4099:
	mov r8,unt_1
	jmp LB_4097
LB_4100:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],64
	jnz LB_4101
	jmp LB_4102
LB_4101:
	mov r8,unt_1
	jmp LB_4097
LB_4102:
	add r14,1
	jmp LB_4098
LB_4097:
	add rsp,8
	jmp LB_4086
LB_4098:
	jmp LB_4104
LB_4103:
	add r14,1 
LB_4104:
	cmp r14,r9
	jge LB_4105
	JZ_LINE_SPC BYTE [r13+8+r14], LB_4103
LB_4105
	lea rax,[r14+1]
	cmp rax,r9
	jg LB_4108
	jmp LB_4109
LB_4108:
	mov r8,unt_1
	jmp LB_4106
LB_4109:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],46
	jnz LB_4110
	jmp LB_4111
LB_4110:
	mov r8,unt_1
	jmp LB_4106
LB_4111:
	add r14,1
	jmp LB_4107
LB_4106:
	add rsp,8
	pop rdi
	pop r9 
	pop r14
	pop r13
	ret
LB_4107:
	jmp LB_4113
LB_4112:
	add r14,1 
LB_4113:
	cmp r14,r9
	jge LB_4114
	JZ_LINE_SPC BYTE [r13+8+r14], LB_4112
LB_4114
	call GRM_74
	cmp BYTE [r8+6],0
	jnz LB_4117
	jmp LB_4118
LB_4117:
	jmp LB_4115
LB_4118:
	sub rsp,8
; .mov_ptn2 2'(= {| l |} ) ⊢ 9'(= {| l |} )
; .mov_ptn 2'(= {| l |} ) ⊢ 9'(= {| l |} )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_4116
LB_4115:
	add rsp,8
	pop rdi
	pop r9 
	pop r14
	pop r13
	ret
LB_4116:
	jmp LB_4120
LB_4119:
	add r14,1 
LB_4120:
	cmp r14,r9
	jge LB_4121
	JZ_LINE_SPC BYTE [r13+8+r14], LB_4119
LB_4121
	call GRM_205
	cmp BYTE [r8+6],0
	jnz LB_4124
	jmp LB_4125
LB_4124:
	jmp LB_4122
LB_4125:
	sub rsp,8
	mov r8,[r8+8]
; .mov_ptn2 2'(= a8◂ [ a13◂ [ {| l |}]] ) ⊢ 10'(= a8◂ [ a13◂ [ {| l |}]] )
; .mov_ptn 2'(= a8◂ [ a13◂ [ {| l |}]] ) ⊢ 10'(= a8◂ [ a13◂ [ {| l |}]] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_4123
LB_4122:
	add rsp,16
	pop rdi
	pop r9 
	pop r14
	pop r13
	ret
LB_4123:
	jmp LB_4127
LB_4126:
	add r14,1 
LB_4127:
	cmp r14,r9
	jge LB_4128
	JZ_LINE_SPC BYTE [r13+8+r14], LB_4126
LB_4128
	call GRM_257
	cmp BYTE [r8+6],0
	jnz LB_4131
	jmp LB_4132
LB_4131:
	jmp LB_4129
LB_4132:
	sub rsp,8
	mov r8,[r8+8]
; .mov_ptn2 2'(= a3◂ [ a23◂ [ ]] ) ⊢ 11'(= a3◂ [ a23◂ [ ]] )
; .mov_ptn 2'(= a3◂ [ a23◂ [ ]] ) ⊢ 11'(= a3◂ [ a23◂ [ ]] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_4130
LB_4129:
	add rsp,24
	pop rdi
	pop r9 
	pop r14
	pop r13
	ret
LB_4130:
	jmp LB_4134
LB_4133:
	add r14,1 
LB_4134:
	cmp r14,r9
	jge LB_4135
	JZ_LINE_SPC BYTE [r13+8+r14], LB_4133
LB_4135
	lea rax,[r14+1]
	cmp rax,r9
	jg LB_4138
	jmp LB_4139
LB_4138:
	mov r8,unt_1
	jmp LB_4136
LB_4139:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],10
	jnz LB_4140
	jmp LB_4141
LB_4140:
	mov r8,unt_1
	jmp LB_4136
LB_4141:
	add r14,1
	jmp LB_4137
LB_4136:
	add rsp,32
	pop rdi
	pop r9 
	pop r14
	pop r13
	ret
LB_4137:
	jmp LB_4143
LB_4142:
	add r14,1 
LB_4143:
	cmp r14,r9
	jge LB_4144
	JZ_LINE_SPC BYTE [r13+8+r14], LB_4142
LB_4144
	call GRM_234
	cmp BYTE [r8+6],0
	jnz LB_4147
	jmp LB_4148
LB_4147:
	jmp LB_4145
LB_4148:
	sub rsp,8
	mov r8,[r8+8]
; .mov_ptn2 2'(= a35◂ [ a17◂ [ a9◂ [ ]{| l |}]] ) ⊢ 12'(= a35◂ [ a17◂ [ a9◂ [ ]{| l |}]] )
; .mov_ptn 2'(= a35◂ [ a17◂ [ a9◂ [ ]{| l |}]] ) ⊢ 12'(= a35◂ [ a17◂ [ a9◂ [ ]{| l |}]] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_4146
LB_4145:
	add rsp,32
	pop rdi
	pop r9 
	pop r14
	pop r13
	ret
LB_4146:
	jmp LB_4150
LB_4149:
	add r14,1 
LB_4150:
	cmp r14,r9
	jge LB_4151
	JZ_LINE_SPC BYTE [r13+8+r14], LB_4149
LB_4151
	call GRM_256
	cmp BYTE [r8+6],0
	jnz LB_4154
	jmp LB_4155
LB_4154:
	jmp LB_4152
LB_4155:
	sub rsp,8
	mov r8,[r8+8]
; .mov_ptn2 2'(= a35◂ [ a2◂ [ *{ {| l |}a8◂ [ a13◂ [ {| l |}]]a3◂ [ a23◂ [ ]]a17◂ [ a9◂ [ ]{| l |}]}]] ) ⊢ 13'(= a35◂ [ a2◂ [ *{ {| l |}a8◂ [ a13◂ [ {| l |}]]a3◂ [ a23◂ [ ]]a17◂ [ a9◂ [ ]{| l |}]}]] )
; .mov_ptn 2'(= a35◂ [ a2◂ [ *{ {| l |}a8◂ [ a13◂ [ {| l |}]]a3◂ [ a23◂ [ ]]a17◂ [ a9◂ [ ]{| l |}]}]] ) ⊢ 13'(= a35◂ [ a2◂ [ *{ {| l |}a8◂ [ a13◂ [ {| l |}]]a3◂ [ a23◂ [ ]]a17◂ [ a9◂ [ ]{| l |}]}]] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_4153
LB_4152:
	add rsp,40
	pop rdi
	pop r9 
	pop r14
	pop r13
	ret
LB_4153:
	mov QWORD [rsp+8*6],r14
	mov r13,QWORD [rsp+16+8*6]
	mov r14,QWORD [rsp+8*6]
	jmp LB_4157
LB_4157
;; rsp=6 , %2387~1'(= r ) %2386~0'(= r ) %2385~13'(= a35◂ [ a2◂ [ *{ {| l |}a8◂ [ a13◂ [ {| l |}]]a3◂ [ a23◂ [ ]]a17◂ [ a9◂ [ ]{| l |}]}]] ) %2384~12'(= a35◂ [ a17◂ [ a9◂ [ ]{| l |}]] ) %2383~11'(= a3◂ [ a23◂ [ ]] ) %2382~10'(= a8◂ [ a13◂ [ {| l |}]] ) %2381~9'(= {| l |} ) %2380~8'(= a35◂ [ *{ }] ) 
;; ? 13'(= a35◂ [ a2◂ [ *{ {| l |}a8◂ [ a13◂ [ {| l |}]]a3◂ [ a23◂ [ ]]a17◂ [ a9◂ [ ]{| l |}]}]] ) ⊢ 0(<2)◂2'(= a2◂ [ *{ {| l |}a8◂ [ a13◂ [ {| l |}]]a3◂ [ a23◂ [ ]]a17◂ [ a9◂ [ ]{| l |}]}] )
	mov rdi,QWORD [rsp-8+8*1]
	cmp BYTE [rdi+6],0
	jnz LB_4158
	mov rax,QWORD [rdi+8]
	mov r8,rax
;; rsp=6 , %2389~2'(= a2◂ [ *{ {| l |}a8◂ [ a13◂ [ {| l |}]]a3◂ [ a23◂ [ ]]a17◂ [ a9◂ [ ]{| l |}]}] ) %2387~1'(= r ) %2386~0'(= r ) %2384~12'(= a35◂ [ a17◂ [ a9◂ [ ]{| l |}]] ) %2383~11'(= a3◂ [ a23◂ [ ]] ) %2382~10'(= a8◂ [ a13◂ [ {| l |}]] ) %2381~9'(= {| l |} ) %2380~8'(= a35◂ [ *{ }] ) 
;; ? 12'(= a35◂ [ a17◂ [ a9◂ [ ]{| l |}]] ) ⊢ 0(<2)◂3'(= a17◂ [ a9◂ [ ]{| l |}] )
	mov rdi,QWORD [rsp-8+8*2]
	cmp BYTE [rdi+6],0
	jnz LB_4159
	mov rax,QWORD [rdi+8]
	mov r9,rax
;; rsp=6 , %2391~3'(= a17◂ [ a9◂ [ ]{| l |}] ) %2389~2'(= a2◂ [ *{ {| l |}a8◂ [ a13◂ [ {| l |}]]a3◂ [ a23◂ [ ]]a17◂ [ a9◂ [ ]{| l |}]}] ) %2387~1'(= r ) %2386~0'(= r ) %2383~11'(= a3◂ [ a23◂ [ ]] ) %2382~10'(= a8◂ [ a13◂ [ {| l |}]] ) %2381~9'(= {| l |} ) %2380~8'(= a35◂ [ *{ }] ) 
; #21 { { 9'(= {| l |} ) 10'(= a8◂ [ a13◂ [ {| l |}]] ) 11'(= a3◂ [ a23◂ [ ]] ) 3'(= a17◂ [ a9◂ [ ]{| l |}] ) } 2'(= a2◂ [ *{ {| l |}a8◂ [ a13◂ [ {| l |}]]a3◂ [ a23◂ [ ]]a17◂ [ a9◂ [ ]{| l |}]}] ) } ⊢ 0(<2)◂{ { 9'(= {| l |} ) 10'(= a8◂ [ a13◂ [ {| l |}]] ) 11'(= a3◂ [ a23◂ [ ]] ) 3'(= a17◂ [ a9◂ [ ]{| l |}] ) } 2'(= a2◂ [ *{ {| l |}a8◂ [ a13◂ [ {| l |}]]a3◂ [ a23◂ [ ]]a17◂ [ a9◂ [ ]{| l |}]}] ) }
;; rsp=6 , %2392~0(<2)◂{ { 9'(= {| l |} ) 10'(= a8◂ [ a13◂ [ {| l |}]] ) 11'(= a3◂ [ a23◂ [ ]] ) 3'(= a17◂ [ a9◂ [ ]{| l |}] ) } 2'(= a2◂ [ *{ {| l |}a8◂ [ a13◂ [ {| l |}]]a3◂ [ a23◂ [ ]]a17◂ [ a9◂ [ ]{| l |}]}] ) } %2387~1'(= r ) %2386~0'(= r ) %2380~8'(= a35◂ [ *{ }] ) 
; #173 0(<2)◂{ { 9'(= {| l |} ) 10'(= a8◂ [ a13◂ [ {| l |}]] ) 11'(= a3◂ [ a23◂ [ ]] ) 3'(= a17◂ [ a9◂ [ ]{| l |}] ) } 2'(= a2◂ [ *{ {| l |}a8◂ [ a13◂ [ {| l |}]]a3◂ [ a23◂ [ ]]a17◂ [ a9◂ [ ]{| l |}]}] ) } ⊢ 3(<6)◂0(<2)◂{ { 9'(= {| l |} ) 10'(= a8◂ [ a13◂ [ {| l |}]] ) 11'(= a3◂ [ a23◂ [ ]] ) 3'(= a17◂ [ a9◂ [ ]{| l |}] ) } 2'(= a2◂ [ *{ {| l |}a8◂ [ a13◂ [ {| l |}]]a3◂ [ a23◂ [ ]]a17◂ [ a9◂ [ ]{| l |}]}] ) }
;; rsp=6 , %2393~3(<6)◂0(<2)◂{ { 9'(= {| l |} ) 10'(= a8◂ [ a13◂ [ {| l |}]] ) 11'(= a3◂ [ a23◂ [ ]] ) 3'(= a17◂ [ a9◂ [ ]{| l |}] ) } 2'(= a2◂ [ *{ {| l |}a8◂ [ a13◂ [ {| l |}]]a3◂ [ a23◂ [ ]]a17◂ [ a9◂ [ ]{| l |}]}] ) } %2387~1'(= r ) %2386~0'(= r ) %2380~8'(= a35◂ [ *{ }] ) 
; #193 3(<6)◂0(<2)◂{ { 9'(= {| l |} ) 10'(= a8◂ [ a13◂ [ {| l |}]] ) 11'(= a3◂ [ a23◂ [ ]] ) 3'(= a17◂ [ a9◂ [ ]{| l |}] ) } 2'(= a2◂ [ *{ {| l |}a8◂ [ a13◂ [ {| l |}]]a3◂ [ a23◂ [ ]]a17◂ [ a9◂ [ ]{| l |}]}] ) } ⊢ 0(<2)◂3(<6)◂0(<2)◂{ { 9'(= {| l |} ) 10'(= a8◂ [ a13◂ [ {| l |}]] ) 11'(= a3◂ [ a23◂ [ ]] ) 3'(= a17◂ [ a9◂ [ ]{| l |}] ) } 2'(= a2◂ [ *{ {| l |}a8◂ [ a13◂ [ {| l |}]]a3◂ [ a23◂ [ ]]a17◂ [ a9◂ [ ]{| l |}]}] ) }
;; rsp=6 , %2394~0(<2)◂3(<6)◂0(<2)◂{ { 9'(= {| l |} ) 10'(= a8◂ [ a13◂ [ {| l |}]] ) 11'(= a3◂ [ a23◂ [ ]] ) 3'(= a17◂ [ a9◂ [ ]{| l |}] ) } 2'(= a2◂ [ *{ {| l |}a8◂ [ a13◂ [ {| l |}]]a3◂ [ a23◂ [ ]]a17◂ [ a9◂ [ ]{| l |}]}] ) } %2387~1'(= r ) %2386~0'(= r ) %2380~8'(= a35◂ [ *{ }] ) 
; #22 0(<2)◂3(<6)◂0(<2)◂{ { 9'(= {| l |} ) 10'(= a8◂ [ a13◂ [ {| l |}]] ) 11'(= a3◂ [ a23◂ [ ]] ) 3'(= a17◂ [ a9◂ [ ]{| l |}] ) } 2'(= a2◂ [ *{ {| l |}a8◂ [ a13◂ [ {| l |}]]a3◂ [ a23◂ [ ]]a17◂ [ a9◂ [ ]{| l |}]}] ) } ⊢ 0(<2)◂0(<2)◂3(<6)◂0(<2)◂{ { 9'(= {| l |} ) 10'(= a8◂ [ a13◂ [ {| l |}]] ) 11'(= a3◂ [ a23◂ [ ]] ) 3'(= a17◂ [ a9◂ [ ]{| l |}] ) } 2'(= a2◂ [ *{ {| l |}a8◂ [ a13◂ [ {| l |}]]a3◂ [ a23◂ [ ]]a17◂ [ a9◂ [ ]{| l |}]}] ) }
;; rsp=6 , %2395~0(<2)◂0(<2)◂3(<6)◂0(<2)◂{ { 9'(= {| l |} ) 10'(= a8◂ [ a13◂ [ {| l |}]] ) 11'(= a3◂ [ a23◂ [ ]] ) 3'(= a17◂ [ a9◂ [ ]{| l |}] ) } 2'(= a2◂ [ *{ {| l |}a8◂ [ a13◂ [ {| l |}]]a3◂ [ a23◂ [ ]]a17◂ [ a9◂ [ ]{| l |}]}] ) } %2387~1'(= r ) %2386~0'(= r ) %2380~8'(= a35◂ [ *{ }] ) 
; ∎ 0(<2)◂0(<2)◂3(<6)◂0(<2)◂{ { 9'(= {| l |} ) 10'(= a8◂ [ a13◂ [ {| l |}]] ) 11'(= a3◂ [ a23◂ [ ]] ) 3'(= a17◂ [ a9◂ [ ]{| l |}] ) } 2'(= a2◂ [ *{ {| l |}a8◂ [ a13◂ [ {| l |}]]a3◂ [ a23◂ [ ]]a17◂ [ a9◂ [ ]{| l |}]}] ) }
; .dlt.ptn 1'(= r )
; .dlt.ptn 0'(= r )
; .dlt.ptn 8'(= a35◂ [ *{ }] )
;	.dlt adt ⊢ _  
; .mov_ptn2 0(<2)◂0(<2)◂3(<6)◂0(<2)◂{ { 9'(= {| l |} ) 10'(= a8◂ [ a13◂ [ {| l |}]] ) 11'(= a3◂ [ a23◂ [ ]] ) 3'(= a17◂ [ a9◂ [ ]{| l |}] ) } 2'(= a2◂ [ *{ {| l |}a8◂ [ a13◂ [ {| l |}]]a3◂ [ a23◂ [ ]]a17◂ [ a9◂ [ ]{| l |}]}] ) } ⊢ 2'(= a3◂ [ a35◂ [ a31◂ [ ]]] )
	mov r13,r8
; .mov_ptn 0(<2)◂0(<2)◂3(<6)◂0(<2)◂{ { 9'(= {| l |} ) 10'(= a8◂ [ a13◂ [ {| l |}]] ) 11'(= a3◂ [ a23◂ [ ]] ) 3'(= a17◂ [ a9◂ [ ]{| l |}] ) } 0'(= a2◂ [ *{ {| l |}a8◂ [ a13◂ [ {| l |}]]a3◂ [ a23◂ [ ]]a17◂ [ a9◂ [ ]{| l |}]}] ) } ⊢ 2'(= a3◂ [ a35◂ [ a31◂ [ ]]] )
	mov rax,[SS_RCD_2_TOP]
	mov rsi,[rax] 
	mov QWORD [SS_RCD_2_TOP],rsi
	mov QWORD [rax],0
	mov r14,rax
	mov rax,[SS_RCD_4_TOP]
	mov rsi,[rax] 
	mov QWORD [SS_RCD_4_TOP],rsi
	mov QWORD [rax],0
	mov r10,rax
	mov rax,QWORD [rsp-8+8*5]
	mov QWORD [r10+8+8*0],rax
	mov rax,QWORD [rsp-8+8*4]
	mov QWORD [r10+8+8*1],rax
	mov rax,QWORD [rsp-8+8*3]
	mov QWORD [r10+8+8*2],rax
	mov rax,r9
	mov QWORD [r10+8+8*3],rax
	mov rax,r10
	mov QWORD [r14+8+8*0],rax
	mov rax,r13
	mov QWORD [r14+8+8*1],rax
	mov rax,r14
	mov BYTE [rax+6],0
	mov rdi,rax
	mov rax,r15
	mov r15,QWORD [r15] 
	mov QWORD [rax],0
	mov BYTE [rax+6],3
	mov QWORD [rax+8],rdi
	mov rdi,rax
	mov rax,r15
	mov r15,QWORD [r15] 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov rdi,rax
	mov rax,r15
	mov r15,QWORD [r15] 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,48
	jmp LB_4156
LB_4159:
;; ?. 12'(= a35◂ [ a17◂ [ a9◂ [ ]{| l |}]] ) ⊢ 1(<2)◂3'(= a2◂ [ *{ rr{| l |}}] )
	mov rax,QWORD [rdi+8]
	mov r9,rax
;; rsp=6 , %2390~3'(= a2◂ [ *{ rr{| l |}}] ) %2389~2'(= a2◂ [ *{ {| l |}a8◂ [ a13◂ [ {| l |}]]a3◂ [ a23◂ [ ]]a17◂ [ a9◂ [ ]{| l |}]}] ) %2387~1'(= r ) %2386~0'(= r ) %2383~11'(= a3◂ [ a23◂ [ ]] ) %2382~10'(= a8◂ [ a13◂ [ {| l |}]] ) %2381~9'(= {| l |} ) %2380~8'(= a35◂ [ *{ }] ) 
; #192 3'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 1(<2)◂3'(= a2◂ [ *{ rr{| l |}}] )
;; rsp=6 , %2396~1(<2)◂3'(= a2◂ [ *{ rr{| l |}}] ) %2389~2'(= a2◂ [ *{ {| l |}a8◂ [ a13◂ [ {| l |}]]a3◂ [ a23◂ [ ]]a17◂ [ a9◂ [ ]{| l |}]}] ) %2387~1'(= r ) %2386~0'(= r ) %2383~11'(= a3◂ [ a23◂ [ ]] ) %2382~10'(= a8◂ [ a13◂ [ {| l |}]] ) %2381~9'(= {| l |} ) %2380~8'(= a35◂ [ *{ }] ) 
; #22 1(<2)◂3'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 0(<2)◂1(<2)◂3'(= a2◂ [ *{ rr{| l |}}] )
;; rsp=6 , %2397~0(<2)◂1(<2)◂3'(= a2◂ [ *{ rr{| l |}}] ) %2389~2'(= a2◂ [ *{ {| l |}a8◂ [ a13◂ [ {| l |}]]a3◂ [ a23◂ [ ]]a17◂ [ a9◂ [ ]{| l |}]}] ) %2387~1'(= r ) %2386~0'(= r ) %2383~11'(= a3◂ [ a23◂ [ ]] ) %2382~10'(= a8◂ [ a13◂ [ {| l |}]] ) %2381~9'(= {| l |} ) %2380~8'(= a35◂ [ *{ }] ) 
; ∎ 0(<2)◂1(<2)◂3'(= a2◂ [ *{ rr{| l |}}] )
; .dlt.ptn 2'(= a2◂ [ *{ {| l |}a8◂ [ a13◂ [ {| l |}]]a3◂ [ a23◂ [ ]]a17◂ [ a9◂ [ ]{| l |}]}] )
;	.dlt adt ⊢ _  
; .dlt.ptn 1'(= r )
; .dlt.ptn 0'(= r )
; .dlt.ptn 11'(= a3◂ [ a23◂ [ ]] )
;	.dlt adt ⊢ _  
; .dlt.ptn 10'(= a8◂ [ a13◂ [ {| l |}]] )
;	.dlt adt ⊢ _  
; .dlt.ptn 9'(= {| l |} )
	mov rdi,QWORD [rsp-8+8*5]
	call free_s8 
; .dlt.ptn 8'(= a35◂ [ *{ }] )
;	.dlt adt ⊢ _  
; .mov_ptn2 0(<2)◂1(<2)◂3'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 2'(= a3◂ [ a35◂ [ a31◂ [ ]]] )
; .mov_ptn 0(<2)◂1(<2)◂3'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 2'(= a3◂ [ a35◂ [ a31◂ [ ]]] )
	mov rax,r9
	mov rdi,rax
	mov rax,r15
	mov r15,QWORD [r15] 
	mov QWORD [rax],0
	mov BYTE [rax+6],1
	mov QWORD [rax+8],rdi
	mov rdi,rax
	mov rax,r15
	mov r15,QWORD [r15] 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,48
	jmp LB_4156
LB_4158:
;; ?. 13'(= a35◂ [ a2◂ [ *{ {| l |}a8◂ [ a13◂ [ {| l |}]]a3◂ [ a23◂ [ ]]a17◂ [ a9◂ [ ]{| l |}]}]] ) ⊢ 1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] )
	mov rax,QWORD [rdi+8]
	mov r8,rax
;; rsp=6 , %2388~2'(= a2◂ [ *{ rr{| l |}}] ) %2387~1'(= r ) %2386~0'(= r ) %2384~12'(= a35◂ [ a17◂ [ a9◂ [ ]{| l |}]] ) %2383~11'(= a3◂ [ a23◂ [ ]] ) %2382~10'(= a8◂ [ a13◂ [ {| l |}]] ) %2381~9'(= {| l |} ) %2380~8'(= a35◂ [ *{ }] ) 
;; ? 12'(= a35◂ [ a17◂ [ a9◂ [ ]{| l |}]] ) ⊢ 0(<2)◂3'(= a17◂ [ a9◂ [ ]{| l |}] )
	mov rdi,QWORD [rsp-8+8*2]
	cmp BYTE [rdi+6],0
	jnz LB_4160
	mov rax,QWORD [rdi+8]
	mov r9,rax
;; rsp=6 , %2399~3'(= a17◂ [ a9◂ [ ]{| l |}] ) %2388~2'(= a2◂ [ *{ rr{| l |}}] ) %2387~1'(= r ) %2386~0'(= r ) %2383~11'(= a3◂ [ a23◂ [ ]] ) %2382~10'(= a8◂ [ a13◂ [ {| l |}]] ) %2381~9'(= {| l |} ) %2380~8'(= a35◂ [ *{ }] ) 
; #192 2'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] )
;; rsp=6 , %2400~1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] ) %2399~3'(= a17◂ [ a9◂ [ ]{| l |}] ) %2387~1'(= r ) %2386~0'(= r ) %2383~11'(= a3◂ [ a23◂ [ ]] ) %2382~10'(= a8◂ [ a13◂ [ {| l |}]] ) %2381~9'(= {| l |} ) %2380~8'(= a35◂ [ *{ }] ) 
; #22 1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 0(<2)◂1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] )
;; rsp=6 , %2401~0(<2)◂1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] ) %2399~3'(= a17◂ [ a9◂ [ ]{| l |}] ) %2387~1'(= r ) %2386~0'(= r ) %2383~11'(= a3◂ [ a23◂ [ ]] ) %2382~10'(= a8◂ [ a13◂ [ {| l |}]] ) %2381~9'(= {| l |} ) %2380~8'(= a35◂ [ *{ }] ) 
; ∎ 0(<2)◂1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] )
; .dlt.ptn 3'(= a17◂ [ a9◂ [ ]{| l |}] )
;	.dlt adt ⊢ _  
; .dlt.ptn 1'(= r )
; .dlt.ptn 0'(= r )
; .dlt.ptn 11'(= a3◂ [ a23◂ [ ]] )
;	.dlt adt ⊢ _  
; .dlt.ptn 10'(= a8◂ [ a13◂ [ {| l |}]] )
;	.dlt adt ⊢ _  
; .dlt.ptn 9'(= {| l |} )
	mov rdi,QWORD [rsp-8+8*5]
	call free_s8 
; .dlt.ptn 8'(= a35◂ [ *{ }] )
;	.dlt adt ⊢ _  
; .mov_ptn2 0(<2)◂1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 2'(= a3◂ [ a35◂ [ a31◂ [ ]]] )
	mov r13,r8
; .mov_ptn 0(<2)◂1(<2)◂0'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 2'(= a3◂ [ a35◂ [ a31◂ [ ]]] )
	mov rax,r13
	mov rdi,rax
	mov rax,r15
	mov r15,QWORD [r15] 
	mov QWORD [rax],0
	mov BYTE [rax+6],1
	mov QWORD [rax+8],rdi
	mov rdi,rax
	mov rax,r15
	mov r15,QWORD [r15] 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,48
	jmp LB_4156
LB_4160:
;; ?. 12'(= a35◂ [ a17◂ [ a9◂ [ ]{| l |}]] ) ⊢ 1(<2)◂3'(= a2◂ [ *{ rr{| l |}}] )
	mov rax,QWORD [rdi+8]
	mov r9,rax
;; rsp=6 , %2398~3'(= a2◂ [ *{ rr{| l |}}] ) %2388~2'(= a2◂ [ *{ rr{| l |}}] ) %2387~1'(= r ) %2386~0'(= r ) %2383~11'(= a3◂ [ a23◂ [ ]] ) %2382~10'(= a8◂ [ a13◂ [ {| l |}]] ) %2381~9'(= {| l |} ) %2380~8'(= a35◂ [ *{ }] ) 
; rsp_d=0, #53 { 2'(= a2◂ [ *{ rr{| l |}}] ) 3'(= a2◂ [ *{ rr{| l |}}] ) } ⊢ 2'(= a2◂ [ *{ rr{| l |}}] )
	sub rsp,16
	mov QWORD [rsp+8*0],r13
	mov QWORD [rsp+8*1],r14
; .mov_ptn2 { 2'(= a2◂ [ *{ rr{| l |}}] ) 3'(= a2◂ [ *{ rr{| l |}}] ) } ⊢ { 0'(= a2◂ [ *{ rr{| l |}}] ) 1'(= a2◂ [ *{ rr{| l |}}] ) }
; .mov_ptn 3'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 1'(= a2◂ [ *{ rr{| l |}}] )
	mov rax,r9
	mov r14,rax
; .mov_ptn 2'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 0'(= a2◂ [ *{ rr{| l |}}] )
	mov rax,r8
	mov r13,rax
	call LB_1604

	mov r14,QWORD [rsp-8+8*2]
	mov rax,QWORD [rsp-8+8*1]
	mov r8,r13
	mov r13,rax
	add rsp,32
;; rsp=4 , %2402~2'(= a2◂ [ *{ rr{| l |}}] ) %2387~1'(= r ) %2386~0'(= r ) %2383~11'(= a3◂ [ a23◂ [ ]] ) %2382~10'(= a8◂ [ a13◂ [ {| l |}]] ) %2381~9'(= {| l |} ) %2380~8'(= a35◂ [ *{ }] ) 
; #192 2'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] )
;; rsp=4 , %2403~1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] ) %2387~1'(= r ) %2386~0'(= r ) %2383~11'(= a3◂ [ a23◂ [ ]] ) %2382~10'(= a8◂ [ a13◂ [ {| l |}]] ) %2381~9'(= {| l |} ) %2380~8'(= a35◂ [ *{ }] ) 
; #22 1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 0(<2)◂1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] )
;; rsp=4 , %2404~0(<2)◂1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] ) %2387~1'(= r ) %2386~0'(= r ) %2383~11'(= a3◂ [ a23◂ [ ]] ) %2382~10'(= a8◂ [ a13◂ [ {| l |}]] ) %2381~9'(= {| l |} ) %2380~8'(= a35◂ [ *{ }] ) 
; ∎ 0(<2)◂1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] )
; .dlt.ptn 1'(= r )
; .dlt.ptn 0'(= r )
; .dlt.ptn 11'(= a3◂ [ a23◂ [ ]] )
;	.dlt adt ⊢ _  
; .dlt.ptn 10'(= a8◂ [ a13◂ [ {| l |}]] )
;	.dlt adt ⊢ _  
; .dlt.ptn 9'(= {| l |} )
	mov rdi,QWORD [rsp-8+8*3]
	call free_s8 
; .dlt.ptn 8'(= a35◂ [ *{ }] )
;	.dlt adt ⊢ _  
; .mov_ptn2 0(<2)◂1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 2'(= a3◂ [ a35◂ [ a31◂ [ ]]] )
	mov r13,r8
; .mov_ptn 0(<2)◂1(<2)◂0'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 2'(= a3◂ [ a35◂ [ a31◂ [ ]]] )
	mov rax,r13
	mov rdi,rax
	mov rax,r15
	mov r15,QWORD [r15] 
	mov QWORD [rax],0
	mov BYTE [rax+6],1
	mov QWORD [rax+8],rdi
	mov rdi,rax
	mov rax,r15
	mov r15,QWORD [r15] 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,32
	jmp LB_4156
LB_4156:
	cmp BYTE [r8+6],0
	jnz LB_4086
	pop r14
	pop r9
	add rsp,8
	pop r13
	ret
LB_4086:
	mov r9,QWORD [rsp+8]
	mov r14,QWORD [rsp+16]
	mov r13,QWORD [rsp+24]
	jmp LB_4163
LB_4162:
	add r14,1 
LB_4163:
	cmp r14,r9
	jge LB_4164
	JZ_SPC BYTE [r13+8+r14], LB_4162
LB_4164
	call GRM_74
	cmp BYTE [r8+6],0
	jnz LB_4167
	jmp LB_4168
LB_4167:
	jmp LB_4165
LB_4168:
	sub rsp,8
; .mov_ptn2 2'(= {| l |} ) ⊢ 8'(= {| l |} )
; .mov_ptn 2'(= {| l |} ) ⊢ 8'(= {| l |} )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_4166
LB_4165:
	add rsp,0
	jmp LB_4161
LB_4166:
	jmp LB_4170
LB_4169:
	add r14,1 
LB_4170:
	cmp r14,r9
	jge LB_4171
	JZ_SPC BYTE [r13+8+r14], LB_4169
LB_4171
	call GRM_258
	cmp BYTE [r8+6],0
	jnz LB_4174
	jmp LB_4175
LB_4174:
	jmp LB_4172
LB_4175:
	sub rsp,8
	mov r8,[r8+8]
; .mov_ptn2 2'(= a35◂ [ a33◂ [ ]] ) ⊢ 9'(= a35◂ [ a33◂ [ ]] )
; .mov_ptn 2'(= a35◂ [ a33◂ [ ]] ) ⊢ 9'(= a35◂ [ a33◂ [ ]] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_4173
LB_4172:
	add rsp,8
	jmp LB_4161
LB_4173:
	mov QWORD [rsp+8*2],r14
	mov r13,QWORD [rsp+16+8*2]
	mov r14,QWORD [rsp+8*2]
	jmp LB_4177
LB_4177
;; rsp=2 , %2408~1'(= r ) %2407~0'(= r ) %2406~9'(= a35◂ [ a33◂ [ ]] ) %2405~8'(= {| l |} ) 
;; ? 9'(= a35◂ [ a33◂ [ ]] ) ⊢ 0(<2)◂2'(= a33◂ [ ] )
	mov rdi,QWORD [rsp-8+8*1]
	cmp BYTE [rdi+6],0
	jnz LB_4178
	mov rax,QWORD [rdi+8]
	mov r8,rax
;; rsp=2 , %2410~2'(= a33◂ [ ] ) %2408~1'(= r ) %2407~0'(= r ) %2405~8'(= {| l |} ) 
; #174 { 8'(= {| l |} ) 2'(= a33◂ [ ] ) } ⊢ 2(<6)◂{ 8'(= {| l |} ) 2'(= a33◂ [ ] ) }
;; rsp=2 , %2411~2(<6)◂{ 8'(= {| l |} ) 2'(= a33◂ [ ] ) } %2408~1'(= r ) %2407~0'(= r ) 
; #193 2(<6)◂{ 8'(= {| l |} ) 2'(= a33◂ [ ] ) } ⊢ 0(<2)◂2(<6)◂{ 8'(= {| l |} ) 2'(= a33◂ [ ] ) }
;; rsp=2 , %2412~0(<2)◂2(<6)◂{ 8'(= {| l |} ) 2'(= a33◂ [ ] ) } %2408~1'(= r ) %2407~0'(= r ) 
; #22 0(<2)◂2(<6)◂{ 8'(= {| l |} ) 2'(= a33◂ [ ] ) } ⊢ 0(<2)◂0(<2)◂2(<6)◂{ 8'(= {| l |} ) 2'(= a33◂ [ ] ) }
;; rsp=2 , %2413~0(<2)◂0(<2)◂2(<6)◂{ 8'(= {| l |} ) 2'(= a33◂ [ ] ) } %2408~1'(= r ) %2407~0'(= r ) 
; ∎ 0(<2)◂0(<2)◂2(<6)◂{ 8'(= {| l |} ) 2'(= a33◂ [ ] ) }
; .dlt.ptn 1'(= r )
; .dlt.ptn 0'(= r )
; .mov_ptn2 0(<2)◂0(<2)◂2(<6)◂{ 8'(= {| l |} ) 2'(= a33◂ [ ] ) } ⊢ 2'(= a3◂ [ a35◂ [ a31◂ [ ]]] )
	mov r13,r8
; .mov_ptn 0(<2)◂0(<2)◂2(<6)◂{ 8'(= {| l |} ) 0'(= a33◂ [ ] ) } ⊢ 2'(= a3◂ [ a35◂ [ a31◂ [ ]]] )
	mov rax,[SS_RCD_2_TOP]
	mov rsi,[rax] 
	mov QWORD [SS_RCD_2_TOP],rsi
	mov QWORD [rax],0
	mov r14,rax
	mov rax,QWORD [rsp-8+8*2]
	mov QWORD [r14+8+8*0],rax
	mov rax,r13
	mov QWORD [r14+8+8*1],rax
	mov rax,r14
	mov BYTE [rax+6],2
	mov rdi,rax
	mov rax,r15
	mov r15,QWORD [r15] 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov rdi,rax
	mov rax,r15
	mov r15,QWORD [r15] 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,16
	jmp LB_4176
LB_4178:
;; ?. 9'(= a35◂ [ a33◂ [ ]] ) ⊢ 1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] )
	mov rax,QWORD [rdi+8]
	mov r8,rax
;; rsp=2 , %2409~2'(= a2◂ [ *{ rr{| l |}}] ) %2408~1'(= r ) %2407~0'(= r ) %2405~8'(= {| l |} ) 
; #192 2'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] )
;; rsp=2 , %2414~1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] ) %2408~1'(= r ) %2407~0'(= r ) %2405~8'(= {| l |} ) 
; #22 1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 0(<2)◂1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] )
;; rsp=2 , %2415~0(<2)◂1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] ) %2408~1'(= r ) %2407~0'(= r ) %2405~8'(= {| l |} ) 
; ∎ 0(<2)◂1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] )
; .dlt.ptn 1'(= r )
; .dlt.ptn 0'(= r )
; .dlt.ptn 8'(= {| l |} )
	mov rdi,QWORD [rsp-8+8*2]
	call free_s8 
; .mov_ptn2 0(<2)◂1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 2'(= a3◂ [ a35◂ [ a31◂ [ ]]] )
	mov r13,r8
; .mov_ptn 0(<2)◂1(<2)◂0'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 2'(= a3◂ [ a35◂ [ a31◂ [ ]]] )
	mov rax,r13
	mov rdi,rax
	mov rax,r15
	mov r15,QWORD [r15] 
	mov QWORD [rax],0
	mov BYTE [rax+6],1
	mov QWORD [rax+8],rdi
	mov rdi,rax
	mov rax,r15
	mov r15,QWORD [r15] 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,16
	jmp LB_4176
LB_4176:
	cmp BYTE [r8+6],0
	jnz LB_4161
	pop r14
	pop r9
	add rsp,8
	pop r13
	ret
LB_4161:
	mov r9,QWORD [rsp+8]
	mov r14,QWORD [rsp+16]
	mov r13,QWORD [rsp+24]
	mov QWORD [rsp+8*0],r14
	mov r13,QWORD [rsp+16+8*0]
	mov r14,QWORD [rsp+8*0]
	jmp LB_4181
LB_4181
;; rsp=0 , %2417~1'(= r ) %2416~0'(= r ) 
	jmp LB_4182
LB_4182:
; $ %[ "lc_etr_body 0" ] ⊢ %[ "lc_etr_body 0" ]
;; rsp=0 , %2418~%[ "lc_etr_body 0" ] %2417~1'(= r ) %2416~0'(= r ) 
; _#8 %[ "lc_etr_body 0" ] ⊢ %[ "lc_etr_body 0" ]
	mov rdi,fmt_emt
	call emt_stg
	mov rdi,LB_4183
	call emt_stg 
	mov rdi,fmt_nl
	call emt_stg
	jmp LB_4184
LB_4184:
;; rsp=0 , %2419~%[ "lc_etr_body 0" ] %2417~1'(= r ) %2416~0'(= r ) 
; #23 { } ⊢ 1(<2)◂{ }
;; rsp=0 , %2420~1(<2)◂{ } %2419~%[ "lc_etr_body 0" ] %2417~1'(= r ) %2416~0'(= r ) 
; ∎ 1(<2)◂{ }
; .dlt.ptn %[ "lc_etr_body 0" ]
; .dlt.ptn 1'(= r )
; .dlt.ptn 0'(= r )
; .mov_ptn2 1(<2)◂{ } ⊢ 2'(= a3◂ [ a35◂ [ a31◂ [ ]]] )
; .mov_ptn 1(<2)◂{ } ⊢ 2'(= a3◂ [ a35◂ [ a31◂ [ ]]] )
	mov rax,unt 
	mov rax,unt_1
	mov r8,rax
	jmp LB_4180
LB_4180:
	cmp BYTE [r8+6],0
	jnz LB_4179
	pop r14
	pop r9
	add rsp,8
	pop r13
	ret
LB_4179:
	pop rdi
	pop r9 
	pop r14
	pop r13
	ret
ETR_256:
	mov r9,0x0000_ffff_ffff_ffff
	and r9,[r13]
	call GRM_256
	ret
GRM_256:
	sub rsp,32
	mov QWORD [rsp+24],r13
	mov QWORD [rsp+16],r14 
	mov QWORD [rsp+8],r9
	jmp LB_4187
LB_4186:
	add r14,1 
LB_4187:
	cmp r14,r9
	jge LB_4188
	JZ_LINE_SPC BYTE [r13+8+r14], LB_4186
LB_4188
	call GRM_217
	cmp BYTE [r8+6],0
	jnz LB_4191
	jmp LB_4192
LB_4191:
	jmp LB_4189
LB_4192:
	sub rsp,8
	mov r8,[r8+8]
; .mov_ptn2 2'(= a35◂ [ *{ }] ) ⊢ 8'(= a35◂ [ *{ }] )
; .mov_ptn 2'(= a35◂ [ *{ }] ) ⊢ 8'(= a35◂ [ *{ }] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_4190
LB_4189:
	add rsp,0
	jmp LB_4185
LB_4190:
	jmp LB_4194
LB_4193:
	add r14,1 
LB_4194:
	cmp r14,r9
	jge LB_4195
	JZ_LINE_SPC BYTE [r13+8+r14], LB_4193
LB_4195
	lea rax,[r14+1]
	cmp rax,r9
	jg LB_4198
	jmp LB_4199
LB_4198:
	mov r8,unt_1
	jmp LB_4196
LB_4199:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],64
	jnz LB_4200
	jmp LB_4201
LB_4200:
	mov r8,unt_1
	jmp LB_4196
LB_4201:
	add r14,1
	jmp LB_4197
LB_4196:
	add rsp,8
	jmp LB_4185
LB_4197:
	jmp LB_4203
LB_4202:
	add r14,1 
LB_4203:
	cmp r14,r9
	jge LB_4204
	JZ_LINE_SPC BYTE [r13+8+r14], LB_4202
LB_4204
	lea rax,[r14+1]
	cmp rax,r9
	jg LB_4207
	jmp LB_4208
LB_4207:
	mov r8,unt_1
	jmp LB_4205
LB_4208:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],46
	jnz LB_4209
	jmp LB_4210
LB_4209:
	mov r8,unt_1
	jmp LB_4205
LB_4210:
	add r14,1
	jmp LB_4206
LB_4205:
	add rsp,8
	pop rdi
	pop r9 
	pop r14
	pop r13
	ret
LB_4206:
	jmp LB_4212
LB_4211:
	add r14,1 
LB_4212:
	cmp r14,r9
	jge LB_4213
	JZ_LINE_SPC BYTE [r13+8+r14], LB_4211
LB_4213
	call GRM_74
	cmp BYTE [r8+6],0
	jnz LB_4216
	jmp LB_4217
LB_4216:
	jmp LB_4214
LB_4217:
	sub rsp,8
; .mov_ptn2 2'(= {| l |} ) ⊢ 9'(= {| l |} )
; .mov_ptn 2'(= {| l |} ) ⊢ 9'(= {| l |} )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_4215
LB_4214:
	add rsp,8
	pop rdi
	pop r9 
	pop r14
	pop r13
	ret
LB_4215:
	jmp LB_4219
LB_4218:
	add r14,1 
LB_4219:
	cmp r14,r9
	jge LB_4220
	JZ_LINE_SPC BYTE [r13+8+r14], LB_4218
LB_4220
	call GRM_205
	cmp BYTE [r8+6],0
	jnz LB_4223
	jmp LB_4224
LB_4223:
	jmp LB_4221
LB_4224:
	sub rsp,8
	mov r8,[r8+8]
; .mov_ptn2 2'(= a8◂ [ a13◂ [ {| l |}]] ) ⊢ 10'(= a8◂ [ a13◂ [ {| l |}]] )
; .mov_ptn 2'(= a8◂ [ a13◂ [ {| l |}]] ) ⊢ 10'(= a8◂ [ a13◂ [ {| l |}]] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_4222
LB_4221:
	add rsp,16
	pop rdi
	pop r9 
	pop r14
	pop r13
	ret
LB_4222:
	jmp LB_4226
LB_4225:
	add r14,1 
LB_4226:
	cmp r14,r9
	jge LB_4227
	JZ_LINE_SPC BYTE [r13+8+r14], LB_4225
LB_4227
	call GRM_257
	cmp BYTE [r8+6],0
	jnz LB_4230
	jmp LB_4231
LB_4230:
	jmp LB_4228
LB_4231:
	sub rsp,8
	mov r8,[r8+8]
; .mov_ptn2 2'(= a3◂ [ a23◂ [ ]] ) ⊢ 11'(= a3◂ [ a23◂ [ ]] )
; .mov_ptn 2'(= a3◂ [ a23◂ [ ]] ) ⊢ 11'(= a3◂ [ a23◂ [ ]] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_4229
LB_4228:
	add rsp,24
	pop rdi
	pop r9 
	pop r14
	pop r13
	ret
LB_4229:
	jmp LB_4233
LB_4232:
	add r14,1 
LB_4233:
	cmp r14,r9
	jge LB_4234
	JZ_LINE_SPC BYTE [r13+8+r14], LB_4232
LB_4234
	lea rax,[r14+1]
	cmp rax,r9
	jg LB_4237
	jmp LB_4238
LB_4237:
	mov r8,unt_1
	jmp LB_4235
LB_4238:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],10
	jnz LB_4239
	jmp LB_4240
LB_4239:
	mov r8,unt_1
	jmp LB_4235
LB_4240:
	add r14,1
	jmp LB_4236
LB_4235:
	add rsp,32
	pop rdi
	pop r9 
	pop r14
	pop r13
	ret
LB_4236:
	jmp LB_4242
LB_4241:
	add r14,1 
LB_4242:
	cmp r14,r9
	jge LB_4243
	JZ_LINE_SPC BYTE [r13+8+r14], LB_4241
LB_4243
	call GRM_234
	cmp BYTE [r8+6],0
	jnz LB_4246
	jmp LB_4247
LB_4246:
	jmp LB_4244
LB_4247:
	sub rsp,8
	mov r8,[r8+8]
; .mov_ptn2 2'(= a35◂ [ a17◂ [ a9◂ [ ]{| l |}]] ) ⊢ 12'(= a35◂ [ a17◂ [ a9◂ [ ]{| l |}]] )
; .mov_ptn 2'(= a35◂ [ a17◂ [ a9◂ [ ]{| l |}]] ) ⊢ 12'(= a35◂ [ a17◂ [ a9◂ [ ]{| l |}]] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_4245
LB_4244:
	add rsp,32
	pop rdi
	pop r9 
	pop r14
	pop r13
	ret
LB_4245:
	jmp LB_4249
LB_4248:
	add r14,1 
LB_4249:
	cmp r14,r9
	jge LB_4250
	JZ_LINE_SPC BYTE [r13+8+r14], LB_4248
LB_4250
	call GRM_256
	cmp BYTE [r8+6],0
	jnz LB_4253
	jmp LB_4254
LB_4253:
	jmp LB_4251
LB_4254:
	sub rsp,8
	mov r8,[r8+8]
; .mov_ptn2 2'(= a35◂ [ a2◂ [ *{ {| l |}a8◂ [ a13◂ [ {| l |}]]a3◂ [ a23◂ [ ]]a17◂ [ a9◂ [ ]{| l |}]}]] ) ⊢ 13'(= a35◂ [ a2◂ [ *{ {| l |}a8◂ [ a13◂ [ {| l |}]]a3◂ [ a23◂ [ ]]a17◂ [ a9◂ [ ]{| l |}]}]] )
; .mov_ptn 2'(= a35◂ [ a2◂ [ *{ {| l |}a8◂ [ a13◂ [ {| l |}]]a3◂ [ a23◂ [ ]]a17◂ [ a9◂ [ ]{| l |}]}]] ) ⊢ 13'(= a35◂ [ a2◂ [ *{ {| l |}a8◂ [ a13◂ [ {| l |}]]a3◂ [ a23◂ [ ]]a17◂ [ a9◂ [ ]{| l |}]}]] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_4252
LB_4251:
	add rsp,40
	pop rdi
	pop r9 
	pop r14
	pop r13
	ret
LB_4252:
	mov QWORD [rsp+8*6],r14
	mov r13,QWORD [rsp+16+8*6]
	mov r14,QWORD [rsp+8*6]
	jmp LB_4256
LB_4257: ; 194 { 0'(= a35◂ [ a2◂ [ *{ {| l |}a8◂ [ a13◂ [ {| l |}]]a3◂ [ a23◂ [ ]]a17◂ [ a9◂ [ ]{| l |}]}]] ) 1'(= a35◂ [ a17◂ [ a9◂ [ ]{| l |}]] ) } ⊢ 0'(= a35◂ [ *{ a2◂ [ *{ {| l |}a8◂ [ a13◂ [ {| l |}]]a3◂ [ a23◂ [ ]]a17◂ [ a9◂ [ ]{| l |}]}]a17◂ [ a9◂ [ ]{| l |}]}] ) : ({ _t35◂_lst◂{ _s8 _t8◂_t13◂_s8 _opn◂_t23 _t17◂_s8◂_t9 } _t35◂_t17◂_s8◂_t9 }→_t35◂{ _lst◂{ _s8 _t8◂_t13◂_s8 _opn◂_t23 _t17◂_s8◂_t9 } _t17◂_s8◂_t9 })
;; rsp=0 , %1131~1'(= a35◂ [ a17◂ [ a9◂ [ ]{| l |}]] ) %1130~0'(= a35◂ [ a2◂ [ *{ {| l |}a8◂ [ a13◂ [ {| l |}]]a3◂ [ a23◂ [ ]]a17◂ [ a9◂ [ ]{| l |}]}]] ) 
;; ? 0'(= a35◂ [ a2◂ [ *{ {| l |}a8◂ [ a13◂ [ {| l |}]]a3◂ [ a23◂ [ ]]a17◂ [ a9◂ [ ]{| l |}]}]] ) ⊢ 0(<2)◂2'(= a2◂ [ *{ {| l |}a8◂ [ a13◂ [ {| l |}]]a3◂ [ a23◂ [ ]]a17◂ [ a9◂ [ ]{| l |}]}] )
	mov rdi,r13
	cmp BYTE [rdi+6],0
	jnz LB_4258
	mov rax,QWORD [rdi+8]
	mov r8,rax
;; rsp=0 , %1133~2'(= a2◂ [ *{ {| l |}a8◂ [ a13◂ [ {| l |}]]a3◂ [ a23◂ [ ]]a17◂ [ a9◂ [ ]{| l |}]}] ) %1131~1'(= a35◂ [ a17◂ [ a9◂ [ ]{| l |}]] ) 
;; ? 1'(= a35◂ [ a17◂ [ a9◂ [ ]{| l |}]] ) ⊢ 0(<2)◂0'(= a17◂ [ a9◂ [ ]{| l |}] )
	mov rdi,r14
	cmp BYTE [rdi+6],0
	jnz LB_4259
	mov rax,QWORD [rdi+8]
	mov r13,rax
;; rsp=0 , %1135~0'(= a17◂ [ a9◂ [ ]{| l |}] ) %1133~2'(= a2◂ [ *{ {| l |}a8◂ [ a13◂ [ {| l |}]]a3◂ [ a23◂ [ ]]a17◂ [ a9◂ [ ]{| l |}]}] ) 
; #193 { 2'(= a2◂ [ *{ {| l |}a8◂ [ a13◂ [ {| l |}]]a3◂ [ a23◂ [ ]]a17◂ [ a9◂ [ ]{| l |}]}] ) 0'(= a17◂ [ a9◂ [ ]{| l |}] ) } ⊢ 0(<2)◂{ 2'(= a2◂ [ *{ {| l |}a8◂ [ a13◂ [ {| l |}]]a3◂ [ a23◂ [ ]]a17◂ [ a9◂ [ ]{| l |}]}] ) 0'(= a17◂ [ a9◂ [ ]{| l |}] ) }
;; rsp=0 , %1136~0(<2)◂{ 2'(= a2◂ [ *{ {| l |}a8◂ [ a13◂ [ {| l |}]]a3◂ [ a23◂ [ ]]a17◂ [ a9◂ [ ]{| l |}]}] ) 0'(= a17◂ [ a9◂ [ ]{| l |}] ) } 
; ∎ 0(<2)◂{ 2'(= a2◂ [ *{ {| l |}a8◂ [ a13◂ [ {| l |}]]a3◂ [ a23◂ [ ]]a17◂ [ a9◂ [ ]{| l |}]}] ) 0'(= a17◂ [ a9◂ [ ]{| l |}] ) }
; .mov_ptn2 0(<2)◂{ 2'(= a2◂ [ *{ {| l |}a8◂ [ a13◂ [ {| l |}]]a3◂ [ a23◂ [ ]]a17◂ [ a9◂ [ ]{| l |}]}] ) 0'(= a17◂ [ a9◂ [ ]{| l |}] ) } ⊢ 0'(= a35◂ [ *{ a2◂ [ *{ {| l |}a8◂ [ a13◂ [ {| l |}]]a3◂ [ a23◂ [ ]]a17◂ [ a9◂ [ ]{| l |}]}]a17◂ [ a9◂ [ ]{| l |}]}] )
	mov r14,r13
; .mov_ptn 0(<2)◂{ 2'(= a2◂ [ *{ {| l |}a8◂ [ a13◂ [ {| l |}]]a3◂ [ a23◂ [ ]]a17◂ [ a9◂ [ ]{| l |}]}] ) 1'(= a17◂ [ a9◂ [ ]{| l |}] ) } ⊢ 0'(= a35◂ [ *{ a2◂ [ *{ {| l |}a8◂ [ a13◂ [ {| l |}]]a3◂ [ a23◂ [ ]]a17◂ [ a9◂ [ ]{| l |}]}]a17◂ [ a9◂ [ ]{| l |}]}] )
	mov rax,[SS_RCD_2_TOP]
	mov rsi,[rax] 
	mov QWORD [SS_RCD_2_TOP],rsi
	mov QWORD [rax],0
	mov r9,rax
	mov rax,r8
	mov QWORD [r9+8+8*0],rax
	mov rax,r14
	mov QWORD [r9+8+8*1],rax
	mov rax,r9
	mov BYTE [rax+6],0
	mov r13,rax
	ret
LB_4259:
;; ?. 1'(= a35◂ [ a17◂ [ a9◂ [ ]{| l |}]] ) ⊢ 1(<2)◂0'(= a2◂ [ *{ rr{| l |}}] )
	mov rax,QWORD [rdi+8]
	mov r13,rax
;; rsp=0 , %1134~0'(= a2◂ [ *{ rr{| l |}}] ) %1133~2'(= a2◂ [ *{ {| l |}a8◂ [ a13◂ [ {| l |}]]a3◂ [ a23◂ [ ]]a17◂ [ a9◂ [ ]{| l |}]}] ) 
; #192 0'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 1(<2)◂0'(= a2◂ [ *{ rr{| l |}}] )
;; rsp=0 , %1137~1(<2)◂0'(= a2◂ [ *{ rr{| l |}}] ) %1133~2'(= a2◂ [ *{ {| l |}a8◂ [ a13◂ [ {| l |}]]a3◂ [ a23◂ [ ]]a17◂ [ a9◂ [ ]{| l |}]}] ) 
; ∎ 1(<2)◂0'(= a2◂ [ *{ rr{| l |}}] )
; .dlt.ptn 2'(= a2◂ [ *{ {| l |}a8◂ [ a13◂ [ {| l |}]]a3◂ [ a23◂ [ ]]a17◂ [ a9◂ [ ]{| l |}]}] )
;	.dlt adt ⊢ _  
; .mov_ptn2 1(<2)◂0'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 0'(= a35◂ [ *{ a2◂ [ *{ {| l |}a8◂ [ a13◂ [ {| l |}]]a3◂ [ a23◂ [ ]]a17◂ [ a9◂ [ ]{| l |}]}]a17◂ [ a9◂ [ ]{| l |}]}] )
	mov r14,r13
; .mov_ptn 1(<2)◂1'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 0'(= a35◂ [ *{ a2◂ [ *{ {| l |}a8◂ [ a13◂ [ {| l |}]]a3◂ [ a23◂ [ ]]a17◂ [ a9◂ [ ]{| l |}]}]a17◂ [ a9◂ [ ]{| l |}]}] )
	mov rax,r14
	mov rdi,rax
	mov rax,r15
	mov r15,QWORD [r15] 
	mov QWORD [rax],0
	mov BYTE [rax+6],1
	mov QWORD [rax+8],rdi
	mov r13,rax
	ret
LB_4258:
;; ?. 0'(= a35◂ [ a2◂ [ *{ {| l |}a8◂ [ a13◂ [ {| l |}]]a3◂ [ a23◂ [ ]]a17◂ [ a9◂ [ ]{| l |}]}]] ) ⊢ 1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] )
	mov rax,QWORD [rdi+8]
	mov r8,rax
;; rsp=0 , %1132~2'(= a2◂ [ *{ rr{| l |}}] ) %1131~1'(= a35◂ [ a17◂ [ a9◂ [ ]{| l |}]] ) 
;; ? 1'(= a35◂ [ a17◂ [ a9◂ [ ]{| l |}]] ) ⊢ 0(<2)◂0'(= a17◂ [ a9◂ [ ]{| l |}] )
	mov rdi,r14
	cmp BYTE [rdi+6],0
	jnz LB_4260
	mov rax,QWORD [rdi+8]
	mov r13,rax
;; rsp=0 , %1139~0'(= a17◂ [ a9◂ [ ]{| l |}] ) %1132~2'(= a2◂ [ *{ rr{| l |}}] ) 
; #192 2'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] )
;; rsp=0 , %1140~1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] ) %1139~0'(= a17◂ [ a9◂ [ ]{| l |}] ) 
; ∎ 1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] )
; .dlt.ptn 0'(= a17◂ [ a9◂ [ ]{| l |}] )
;	.dlt adt ⊢ _  
; .mov_ptn2 1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 0'(= a35◂ [ *{ a2◂ [ *{ {| l |}a8◂ [ a13◂ [ {| l |}]]a3◂ [ a23◂ [ ]]a17◂ [ a9◂ [ ]{| l |}]}]a17◂ [ a9◂ [ ]{| l |}]}] )
; .mov_ptn 1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 0'(= a35◂ [ *{ a2◂ [ *{ {| l |}a8◂ [ a13◂ [ {| l |}]]a3◂ [ a23◂ [ ]]a17◂ [ a9◂ [ ]{| l |}]}]a17◂ [ a9◂ [ ]{| l |}]}] )
	mov rax,r8
	mov rdi,rax
	mov rax,r15
	mov r15,QWORD [r15] 
	mov QWORD [rax],0
	mov BYTE [rax+6],1
	mov QWORD [rax+8],rdi
	mov r13,rax
	ret
LB_4260:
;; ?. 1'(= a35◂ [ a17◂ [ a9◂ [ ]{| l |}]] ) ⊢ 1(<2)◂0'(= a2◂ [ *{ rr{| l |}}] )
	mov rax,QWORD [rdi+8]
	mov r13,rax
;; rsp=0 , %1138~0'(= a2◂ [ *{ rr{| l |}}] ) %1132~2'(= a2◂ [ *{ rr{| l |}}] ) 
; rsp_d=0, #53 { 2'(= a2◂ [ *{ rr{| l |}}] ) 0'(= a2◂ [ *{ rr{| l |}}] ) } ⊢ 0'(= a2◂ [ *{ rr{| l |}}] )
; .mov_ptn2 { 2'(= a2◂ [ *{ rr{| l |}}] ) 0'(= a2◂ [ *{ rr{| l |}}] ) } ⊢ { 0'(= a2◂ [ *{ rr{| l |}}] ) 1'(= a2◂ [ *{ rr{| l |}}] ) }
; .mov_ptn 0'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 1'(= a2◂ [ *{ rr{| l |}}] )
	mov rax,r13
	mov r14,rax
; .mov_ptn 2'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 0'(= a2◂ [ *{ rr{| l |}}] )
	mov rax,r8
	mov r13,rax
	call LB_1604

;; rsp=0 , %1141~0'(= a2◂ [ *{ rr{| l |}}] ) 
; #192 0'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 1(<2)◂0'(= a2◂ [ *{ rr{| l |}}] )
;; rsp=0 , %1142~1(<2)◂0'(= a2◂ [ *{ rr{| l |}}] ) 
; ∎ 1(<2)◂0'(= a2◂ [ *{ rr{| l |}}] )
; .mov_ptn2 1(<2)◂0'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 0'(= a35◂ [ *{ a2◂ [ *{ {| l |}a8◂ [ a13◂ [ {| l |}]]a3◂ [ a23◂ [ ]]a17◂ [ a9◂ [ ]{| l |}]}]a17◂ [ a9◂ [ ]{| l |}]}] )
	mov r14,r13
; .mov_ptn 1(<2)◂1'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 0'(= a35◂ [ *{ a2◂ [ *{ {| l |}a8◂ [ a13◂ [ {| l |}]]a3◂ [ a23◂ [ ]]a17◂ [ a9◂ [ ]{| l |}]}]a17◂ [ a9◂ [ ]{| l |}]}] )
	mov rax,r14
	mov rdi,rax
	mov rax,r15
	mov r15,QWORD [r15] 
	mov QWORD [rax],0
	mov BYTE [rax+6],1
	mov QWORD [rax+8],rdi
	mov r13,rax
	ret
LB_4256
;; rsp=6 , %2428~1'(= r ) %2427~0'(= r ) %2426~13'(= a35◂ [ a2◂ [ *{ {| l |}a8◂ [ a13◂ [ {| l |}]]a3◂ [ a23◂ [ ]]a17◂ [ a9◂ [ ]{| l |}]}]] ) %2425~12'(= a35◂ [ a17◂ [ a9◂ [ ]{| l |}]] ) %2424~11'(= a3◂ [ a23◂ [ ]] ) %2423~10'(= a8◂ [ a13◂ [ {| l |}]] ) %2422~9'(= {| l |} ) %2421~8'(= a35◂ [ *{ }] ) 
; rsp_d=0, #194 { 13'(= a35◂ [ a2◂ [ *{ {| l |}a8◂ [ a13◂ [ {| l |}]]a3◂ [ a23◂ [ ]]a17◂ [ a9◂ [ ]{| l |}]}]] ) 12'(= a35◂ [ a17◂ [ a9◂ [ ]{| l |}]] ) } ⊢ 2'(= a35◂ [ *{ a2◂ [ *{ {| l |}a8◂ [ a13◂ [ {| l |}]]a3◂ [ a23◂ [ ]]a17◂ [ a9◂ [ ]{| l |}]}]a17◂ [ a9◂ [ ]{| l |}]}] )
	sub rsp,16
	mov QWORD [rsp+8*0],r13
	mov QWORD [rsp+8*1],r14
; .mov_ptn2 { 13'(= a35◂ [ a2◂ [ *{ {| l |}a8◂ [ a13◂ [ {| l |}]]a3◂ [ a23◂ [ ]]a17◂ [ a9◂ [ ]{| l |}]}]] ) 12'(= a35◂ [ a17◂ [ a9◂ [ ]{| l |}]] ) } ⊢ { 0'(= a35◂ [ a2◂ [ *{ {| l |}a8◂ [ a13◂ [ {| l |}]]a3◂ [ a23◂ [ ]]a17◂ [ a9◂ [ ]{| l |}]}]] ) 1'(= a35◂ [ a17◂ [ a9◂ [ ]{| l |}]] ) }
; .mov_ptn 12'(= a35◂ [ a17◂ [ a9◂ [ ]{| l |}]] ) ⊢ 1'(= a35◂ [ a17◂ [ a9◂ [ ]{| l |}]] )
	mov rax,QWORD [rsp-8+8*4]
	mov r14,rax
; .mov_ptn 13'(= a35◂ [ a2◂ [ *{ {| l |}a8◂ [ a13◂ [ {| l |}]]a3◂ [ a23◂ [ ]]a17◂ [ a9◂ [ ]{| l |}]}]] ) ⊢ 0'(= a35◂ [ a2◂ [ *{ {| l |}a8◂ [ a13◂ [ {| l |}]]a3◂ [ a23◂ [ ]]a17◂ [ a9◂ [ ]{| l |}]}]] )
	mov rax,QWORD [rsp-8+8*3]
	mov r13,rax
	call LB_4257

	mov r14,QWORD [rsp-8+8*2]
	mov rax,QWORD [rsp-8+8*1]
	mov r8,r13
	mov r13,rax
	add rsp,32
;; rsp=4 , %2429~2'(= a35◂ [ *{ a2◂ [ *{ {| l |}a8◂ [ a13◂ [ {| l |}]]a3◂ [ a23◂ [ ]]a17◂ [ a9◂ [ ]{| l |}]}]a17◂ [ a9◂ [ ]{| l |}]}] ) %2428~1'(= r ) %2427~0'(= r ) %2424~11'(= a3◂ [ a23◂ [ ]] ) %2423~10'(= a8◂ [ a13◂ [ {| l |}]] ) %2422~9'(= {| l |} ) %2421~8'(= a35◂ [ *{ }] ) 
;; ? 2'(= a35◂ [ *{ a2◂ [ *{ {| l |}a8◂ [ a13◂ [ {| l |}]]a3◂ [ a23◂ [ ]]a17◂ [ a9◂ [ ]{| l |}]}]a17◂ [ a9◂ [ ]{| l |}]}] ) ⊢ 0(<2)◂{ 3'(= a2◂ [ *{ {| l |}a8◂ [ a13◂ [ {| l |}]]a3◂ [ a23◂ [ ]]a17◂ [ a9◂ [ ]{| l |}]}] ) 4'(= a17◂ [ a9◂ [ ]{| l |}] ) }
	mov rdi,r8
	cmp BYTE [rdi+6],0
	jnz LB_4261
	mov rdi,r8
	mov rdi,QWORD [rdi+8+8*0]
	mov r9,rdi
	mov rdi,r8
	mov rdi,QWORD [rdi+8+8*1]
	mov r10,rdi
;; rsp=4 , %2432~4'(= a17◂ [ a9◂ [ ]{| l |}] ) %2431~3'(= a2◂ [ *{ {| l |}a8◂ [ a13◂ [ {| l |}]]a3◂ [ a23◂ [ ]]a17◂ [ a9◂ [ ]{| l |}]}] ) %2428~1'(= r ) %2427~0'(= r ) %2424~11'(= a3◂ [ a23◂ [ ]] ) %2423~10'(= a8◂ [ a13◂ [ {| l |}]] ) %2422~9'(= {| l |} ) %2421~8'(= a35◂ [ *{ }] ) 
; #21 { { 9'(= {| l |} ) 10'(= a8◂ [ a13◂ [ {| l |}]] ) 11'(= a3◂ [ a23◂ [ ]] ) 4'(= a17◂ [ a9◂ [ ]{| l |}] ) } 3'(= a2◂ [ *{ {| l |}a8◂ [ a13◂ [ {| l |}]]a3◂ [ a23◂ [ ]]a17◂ [ a9◂ [ ]{| l |}]}] ) } ⊢ 0(<2)◂{ { 9'(= {| l |} ) 10'(= a8◂ [ a13◂ [ {| l |}]] ) 11'(= a3◂ [ a23◂ [ ]] ) 4'(= a17◂ [ a9◂ [ ]{| l |}] ) } 3'(= a2◂ [ *{ {| l |}a8◂ [ a13◂ [ {| l |}]]a3◂ [ a23◂ [ ]]a17◂ [ a9◂ [ ]{| l |}]}] ) }
;; rsp=4 , %2433~0(<2)◂{ { 9'(= {| l |} ) 10'(= a8◂ [ a13◂ [ {| l |}]] ) 11'(= a3◂ [ a23◂ [ ]] ) 4'(= a17◂ [ a9◂ [ ]{| l |}] ) } 3'(= a2◂ [ *{ {| l |}a8◂ [ a13◂ [ {| l |}]]a3◂ [ a23◂ [ ]]a17◂ [ a9◂ [ ]{| l |}]}] ) } %2428~1'(= r ) %2427~0'(= r ) %2421~8'(= a35◂ [ *{ }] ) 
; #193 0(<2)◂{ { 9'(= {| l |} ) 10'(= a8◂ [ a13◂ [ {| l |}]] ) 11'(= a3◂ [ a23◂ [ ]] ) 4'(= a17◂ [ a9◂ [ ]{| l |}] ) } 3'(= a2◂ [ *{ {| l |}a8◂ [ a13◂ [ {| l |}]]a3◂ [ a23◂ [ ]]a17◂ [ a9◂ [ ]{| l |}]}] ) } ⊢ 0(<2)◂0(<2)◂{ { 9'(= {| l |} ) 10'(= a8◂ [ a13◂ [ {| l |}]] ) 11'(= a3◂ [ a23◂ [ ]] ) 4'(= a17◂ [ a9◂ [ ]{| l |}] ) } 3'(= a2◂ [ *{ {| l |}a8◂ [ a13◂ [ {| l |}]]a3◂ [ a23◂ [ ]]a17◂ [ a9◂ [ ]{| l |}]}] ) }
;; rsp=4 , %2434~0(<2)◂0(<2)◂{ { 9'(= {| l |} ) 10'(= a8◂ [ a13◂ [ {| l |}]] ) 11'(= a3◂ [ a23◂ [ ]] ) 4'(= a17◂ [ a9◂ [ ]{| l |}] ) } 3'(= a2◂ [ *{ {| l |}a8◂ [ a13◂ [ {| l |}]]a3◂ [ a23◂ [ ]]a17◂ [ a9◂ [ ]{| l |}]}] ) } %2428~1'(= r ) %2427~0'(= r ) %2421~8'(= a35◂ [ *{ }] ) 
; #22 0(<2)◂0(<2)◂{ { 9'(= {| l |} ) 10'(= a8◂ [ a13◂ [ {| l |}]] ) 11'(= a3◂ [ a23◂ [ ]] ) 4'(= a17◂ [ a9◂ [ ]{| l |}] ) } 3'(= a2◂ [ *{ {| l |}a8◂ [ a13◂ [ {| l |}]]a3◂ [ a23◂ [ ]]a17◂ [ a9◂ [ ]{| l |}]}] ) } ⊢ 0(<2)◂0(<2)◂0(<2)◂{ { 9'(= {| l |} ) 10'(= a8◂ [ a13◂ [ {| l |}]] ) 11'(= a3◂ [ a23◂ [ ]] ) 4'(= a17◂ [ a9◂ [ ]{| l |}] ) } 3'(= a2◂ [ *{ {| l |}a8◂ [ a13◂ [ {| l |}]]a3◂ [ a23◂ [ ]]a17◂ [ a9◂ [ ]{| l |}]}] ) }
;; rsp=4 , %2435~0(<2)◂0(<2)◂0(<2)◂{ { 9'(= {| l |} ) 10'(= a8◂ [ a13◂ [ {| l |}]] ) 11'(= a3◂ [ a23◂ [ ]] ) 4'(= a17◂ [ a9◂ [ ]{| l |}] ) } 3'(= a2◂ [ *{ {| l |}a8◂ [ a13◂ [ {| l |}]]a3◂ [ a23◂ [ ]]a17◂ [ a9◂ [ ]{| l |}]}] ) } %2428~1'(= r ) %2427~0'(= r ) %2421~8'(= a35◂ [ *{ }] ) 
; ∎ 0(<2)◂0(<2)◂0(<2)◂{ { 9'(= {| l |} ) 10'(= a8◂ [ a13◂ [ {| l |}]] ) 11'(= a3◂ [ a23◂ [ ]] ) 4'(= a17◂ [ a9◂ [ ]{| l |}] ) } 3'(= a2◂ [ *{ {| l |}a8◂ [ a13◂ [ {| l |}]]a3◂ [ a23◂ [ ]]a17◂ [ a9◂ [ ]{| l |}]}] ) }
; .dlt.ptn 1'(= r )
; .dlt.ptn 0'(= r )
; .dlt.ptn 8'(= a35◂ [ *{ }] )
;	.dlt adt ⊢ _  
; .mov_ptn2 0(<2)◂0(<2)◂0(<2)◂{ { 9'(= {| l |} ) 10'(= a8◂ [ a13◂ [ {| l |}]] ) 11'(= a3◂ [ a23◂ [ ]] ) 4'(= a17◂ [ a9◂ [ ]{| l |}] ) } 3'(= a2◂ [ *{ {| l |}a8◂ [ a13◂ [ {| l |}]]a3◂ [ a23◂ [ ]]a17◂ [ a9◂ [ ]{| l |}]}] ) } ⊢ 2'(= a3◂ [ a35◂ [ a2◂ [ *{ {| l |}a8◂ [ a13◂ [ {| l |}]]a3◂ [ a23◂ [ ]]a17◂ [ a9◂ [ ]{| l |}]}]]] )
; .mov_ptn 0(<2)◂0(<2)◂0(<2)◂{ { 9'(= {| l |} ) 10'(= a8◂ [ a13◂ [ {| l |}]] ) 11'(= a3◂ [ a23◂ [ ]] ) 4'(= a17◂ [ a9◂ [ ]{| l |}] ) } 3'(= a2◂ [ *{ {| l |}a8◂ [ a13◂ [ {| l |}]]a3◂ [ a23◂ [ ]]a17◂ [ a9◂ [ ]{| l |}]}] ) } ⊢ 2'(= a3◂ [ a35◂ [ a2◂ [ *{ {| l |}a8◂ [ a13◂ [ {| l |}]]a3◂ [ a23◂ [ ]]a17◂ [ a9◂ [ ]{| l |}]}]]] )
	mov rax,[SS_RCD_2_TOP]
	mov rsi,[rax] 
	mov QWORD [SS_RCD_2_TOP],rsi
	mov QWORD [rax],0
	mov r13,rax
	mov rax,[SS_RCD_4_TOP]
	mov rsi,[rax] 
	mov QWORD [SS_RCD_4_TOP],rsi
	mov QWORD [rax],0
	mov r14,rax
	mov rax,QWORD [rsp-8+8*3]
	mov QWORD [r14+8+8*0],rax
	mov rax,QWORD [rsp-8+8*2]
	mov QWORD [r14+8+8*1],rax
	mov rax,QWORD [rsp-8+8*1]
	mov QWORD [r14+8+8*2],rax
	mov rax,r10
	mov QWORD [r14+8+8*3],rax
	mov rax,r14
	mov QWORD [r13+8+8*0],rax
	mov rax,r9
	mov QWORD [r13+8+8*1],rax
	mov rax,r13
	mov BYTE [rax+6],0
	mov rdi,rax
	mov rax,r15
	mov r15,QWORD [r15] 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov rdi,rax
	mov rax,r15
	mov r15,QWORD [r15] 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,32
	jmp LB_4255
LB_4261:
;; ?. 2'(= a35◂ [ *{ a2◂ [ *{ {| l |}a8◂ [ a13◂ [ {| l |}]]a3◂ [ a23◂ [ ]]a17◂ [ a9◂ [ ]{| l |}]}]a17◂ [ a9◂ [ ]{| l |}]}] ) ⊢ 1(<2)◂3'(= a2◂ [ *{ rr{| l |}}] )
	mov rax,QWORD [rdi+8]
	mov r9,rax
;; rsp=4 , %2430~3'(= a2◂ [ *{ rr{| l |}}] ) %2428~1'(= r ) %2427~0'(= r ) %2424~11'(= a3◂ [ a23◂ [ ]] ) %2423~10'(= a8◂ [ a13◂ [ {| l |}]] ) %2422~9'(= {| l |} ) %2421~8'(= a35◂ [ *{ }] ) 
; #192 3'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 1(<2)◂3'(= a2◂ [ *{ rr{| l |}}] )
;; rsp=4 , %2436~1(<2)◂3'(= a2◂ [ *{ rr{| l |}}] ) %2428~1'(= r ) %2427~0'(= r ) %2424~11'(= a3◂ [ a23◂ [ ]] ) %2423~10'(= a8◂ [ a13◂ [ {| l |}]] ) %2422~9'(= {| l |} ) %2421~8'(= a35◂ [ *{ }] ) 
; #22 1(<2)◂3'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 0(<2)◂1(<2)◂3'(= a2◂ [ *{ rr{| l |}}] )
;; rsp=4 , %2437~0(<2)◂1(<2)◂3'(= a2◂ [ *{ rr{| l |}}] ) %2428~1'(= r ) %2427~0'(= r ) %2424~11'(= a3◂ [ a23◂ [ ]] ) %2423~10'(= a8◂ [ a13◂ [ {| l |}]] ) %2422~9'(= {| l |} ) %2421~8'(= a35◂ [ *{ }] ) 
; ∎ 0(<2)◂1(<2)◂3'(= a2◂ [ *{ rr{| l |}}] )
; .dlt.ptn 1'(= r )
; .dlt.ptn 0'(= r )
; .dlt.ptn 11'(= a3◂ [ a23◂ [ ]] )
;	.dlt adt ⊢ _  
; .dlt.ptn 10'(= a8◂ [ a13◂ [ {| l |}]] )
;	.dlt adt ⊢ _  
; .dlt.ptn 9'(= {| l |} )
	mov rdi,QWORD [rsp-8+8*3]
	call free_s8 
; .dlt.ptn 8'(= a35◂ [ *{ }] )
;	.dlt adt ⊢ _  
; .mov_ptn2 0(<2)◂1(<2)◂3'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 2'(= a3◂ [ a35◂ [ a2◂ [ *{ {| l |}a8◂ [ a13◂ [ {| l |}]]a3◂ [ a23◂ [ ]]a17◂ [ a9◂ [ ]{| l |}]}]]] )
; .mov_ptn 0(<2)◂1(<2)◂3'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 2'(= a3◂ [ a35◂ [ a2◂ [ *{ {| l |}a8◂ [ a13◂ [ {| l |}]]a3◂ [ a23◂ [ ]]a17◂ [ a9◂ [ ]{| l |}]}]]] )
	mov rax,r9
	mov rdi,rax
	mov rax,r15
	mov r15,QWORD [r15] 
	mov QWORD [rax],0
	mov BYTE [rax+6],1
	mov QWORD [rax+8],rdi
	mov rdi,rax
	mov rax,r15
	mov r15,QWORD [r15] 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,32
	jmp LB_4255
LB_4255:
	cmp BYTE [r8+6],0
	jnz LB_4185
	pop r14
	pop r9
	add rsp,8
	pop r13
	ret
LB_4185:
	mov r9,QWORD [rsp+8]
	mov r14,QWORD [rsp+16]
	mov r13,QWORD [rsp+24]
	mov QWORD [rsp+8*0],r14
	mov r13,QWORD [rsp+16+8*0]
	mov r14,QWORD [rsp+8*0]
	jmp LB_4264
LB_4264
;; rsp=0 , %2439~1'(= r ) %2438~0'(= r ) 
; #20 { } ⊢ 1(<2)◂{ }
;; rsp=0 , %2440~1(<2)◂{ } %2439~1'(= r ) %2438~0'(= r ) 
; #193 1(<2)◂{ } ⊢ 0(<2)◂1(<2)◂{ }
;; rsp=0 , %2441~0(<2)◂1(<2)◂{ } %2439~1'(= r ) %2438~0'(= r ) 
; #22 0(<2)◂1(<2)◂{ } ⊢ 0(<2)◂0(<2)◂1(<2)◂{ }
;; rsp=0 , %2442~0(<2)◂0(<2)◂1(<2)◂{ } %2439~1'(= r ) %2438~0'(= r ) 
; ∎ 0(<2)◂0(<2)◂1(<2)◂{ }
; .dlt.ptn 1'(= r )
; .dlt.ptn 0'(= r )
; .mov_ptn2 0(<2)◂0(<2)◂1(<2)◂{ } ⊢ 2'(= a3◂ [ a35◂ [ a2◂ [ *{ {| l |}a8◂ [ a13◂ [ {| l |}]]a3◂ [ a23◂ [ ]]a17◂ [ a9◂ [ ]{| l |}]}]]] )
; .mov_ptn 0(<2)◂0(<2)◂1(<2)◂{ } ⊢ 2'(= a3◂ [ a35◂ [ a2◂ [ *{ {| l |}a8◂ [ a13◂ [ {| l |}]]a3◂ [ a23◂ [ ]]a17◂ [ a9◂ [ ]{| l |}]}]]] )
	mov rax,unt 
	mov rax,unt_1
	mov rdi,rax
	mov rax,r15
	mov r15,QWORD [r15] 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov rdi,rax
	mov rax,r15
	mov r15,QWORD [r15] 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	jmp LB_4263
LB_4263:
	cmp BYTE [r8+6],0
	jnz LB_4262
	pop r14
	pop r9
	add rsp,8
	pop r13
	ret
LB_4262:
	pop rdi
	pop r9 
	pop r14
	pop r13
	ret
ETR_257:
	mov r9,0x0000_ffff_ffff_ffff
	and r9,[r13]
	call GRM_257
	ret
GRM_257:
	sub rsp,32
	mov QWORD [rsp+24],r13
	mov QWORD [rsp+16],r14 
	mov QWORD [rsp+8],r9
	jmp LB_4267
LB_4266:
	add r14,1 
LB_4267:
	cmp r14,r9
	jge LB_4268
	JZ_LINE_SPC BYTE [r13+8+r14], LB_4266
LB_4268
	lea rax,[r14+1]
	cmp rax,r9
	jg LB_4271
	jmp LB_4272
LB_4271:
	mov r8,unt_1
	jmp LB_4269
LB_4272:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],58
	jnz LB_4273
	jmp LB_4274
LB_4273:
	mov r8,unt_1
	jmp LB_4269
LB_4274:
	add r14,1
	jmp LB_4270
LB_4269:
	add rsp,0
	jmp LB_4265
LB_4270:
	jmp LB_4276
LB_4275:
	add r14,1 
LB_4276:
	cmp r14,r9
	jge LB_4277
	JZ_LINE_SPC BYTE [r13+8+r14], LB_4275
LB_4277
	call GRM_210
	cmp BYTE [r8+6],0
	jnz LB_4280
	jmp LB_4281
LB_4280:
	jmp LB_4278
LB_4281:
	sub rsp,8
	mov r8,[r8+8]
; .mov_ptn2 2'(= a23◂ [ ] ) ⊢ 8'(= a23◂ [ ] )
; .mov_ptn 2'(= a23◂ [ ] ) ⊢ 8'(= a23◂ [ ] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_4279
LB_4278:
	add rsp,0
	pop rdi
	pop r9 
	pop r14
	pop r13
	ret
LB_4279:
	mov QWORD [rsp+8*1],r14
	mov r13,QWORD [rsp+16+8*1]
	mov r14,QWORD [rsp+8*1]
	jmp LB_4283
LB_4283
;; rsp=1 , %2445~1'(= r ) %2444~0'(= r ) %2443~8'(= a23◂ [ ] ) 
; #22 8'(= a23◂ [ ] ) ⊢ 0(<2)◂8'(= a23◂ [ ] )
;; rsp=1 , %2446~0(<2)◂8'(= a23◂ [ ] ) %2445~1'(= r ) %2444~0'(= r ) 
; #22 0(<2)◂8'(= a23◂ [ ] ) ⊢ 0(<2)◂0(<2)◂8'(= a23◂ [ ] )
;; rsp=1 , %2447~0(<2)◂0(<2)◂8'(= a23◂ [ ] ) %2445~1'(= r ) %2444~0'(= r ) 
; ∎ 0(<2)◂0(<2)◂8'(= a23◂ [ ] )
; .dlt.ptn 1'(= r )
; .dlt.ptn 0'(= r )
; .mov_ptn2 0(<2)◂0(<2)◂8'(= a23◂ [ ] ) ⊢ 2'(= a3◂ [ a3◂ [ a23◂ [ ]]] )
; .mov_ptn 0(<2)◂0(<2)◂8'(= a23◂ [ ] ) ⊢ 2'(= a3◂ [ a3◂ [ a23◂ [ ]]] )
	mov rax,QWORD [rsp-8+8*1]
	mov rdi,rax
	mov rax,r15
	mov r15,QWORD [r15] 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov rdi,rax
	mov rax,r15
	mov r15,QWORD [r15] 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,8
	jmp LB_4282
LB_4282:
	cmp BYTE [r8+6],0
	jnz LB_4265
	pop r14
	pop r9
	add rsp,8
	pop r13
	ret
LB_4265:
	mov r9,QWORD [rsp+8]
	mov r14,QWORD [rsp+16]
	mov r13,QWORD [rsp+24]
	mov QWORD [rsp+8*0],r14
	mov r13,QWORD [rsp+16+8*0]
	mov r14,QWORD [rsp+8*0]
	jmp LB_4286
LB_4286
;; rsp=0 , %2449~1'(= r ) %2448~0'(= r ) 
; #23 { } ⊢ 1(<2)◂{ }
;; rsp=0 , %2450~1(<2)◂{ } %2449~1'(= r ) %2448~0'(= r ) 
; #22 1(<2)◂{ } ⊢ 0(<2)◂1(<2)◂{ }
;; rsp=0 , %2451~0(<2)◂1(<2)◂{ } %2449~1'(= r ) %2448~0'(= r ) 
; ∎ 0(<2)◂1(<2)◂{ }
; .dlt.ptn 1'(= r )
; .dlt.ptn 0'(= r )
; .mov_ptn2 0(<2)◂1(<2)◂{ } ⊢ 2'(= a3◂ [ a3◂ [ a23◂ [ ]]] )
; .mov_ptn 0(<2)◂1(<2)◂{ } ⊢ 2'(= a3◂ [ a3◂ [ a23◂ [ ]]] )
	mov rax,unt 
	mov rax,unt_1
	mov rdi,rax
	mov rax,r15
	mov r15,QWORD [r15] 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	jmp LB_4285
LB_4285:
	cmp BYTE [r8+6],0
	jnz LB_4284
	pop r14
	pop r9
	add rsp,8
	pop r13
	ret
LB_4284:
	pop rdi
	pop r9 
	pop r14
	pop r13
	ret
ETR_258:
	mov r9,0x0000_ffff_ffff_ffff
	and r9,[r13]
	call GRM_258
	ret
GRM_258:
	sub rsp,32
	mov QWORD [rsp+24],r13
	mov QWORD [rsp+16],r14 
	mov QWORD [rsp+8],r9
	jmp LB_4289
LB_4288:
	add r14,1 
LB_4289:
	cmp r14,r9
	jge LB_4290
	JZ_LINE_SPC BYTE [r13+8+r14], LB_4288
LB_4290
	lea rax,[r14+1]
	cmp rax,r9
	jg LB_4293
	jmp LB_4294
LB_4293:
	mov r8,unt_1
	jmp LB_4291
LB_4294:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],61
	jnz LB_4295
	jmp LB_4296
LB_4295:
	mov r8,unt_1
	jmp LB_4291
LB_4296:
	add r14,1
	jmp LB_4292
LB_4291:
	add rsp,0
	jmp LB_4287
LB_4292:
	jmp LB_4298
LB_4297:
	add r14,1 
LB_4298:
	cmp r14,r9
	jge LB_4299
	JZ_LINE_SPC BYTE [r13+8+r14], LB_4297
LB_4299
	call GRM_190
	cmp BYTE [r8+6],0
	jnz LB_4302
	jmp LB_4303
LB_4302:
	jmp LB_4300
LB_4303:
	sub rsp,8
	mov r8,[r8+8]
; .mov_ptn2 2'(= a11◂ [ a9◂ [ ]] ) ⊢ 8'(= a11◂ [ a9◂ [ ]] )
; .mov_ptn 2'(= a11◂ [ a9◂ [ ]] ) ⊢ 8'(= a11◂ [ a9◂ [ ]] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_4301
LB_4300:
	add rsp,0
	pop rdi
	pop r9 
	pop r14
	pop r13
	ret
LB_4301:
	jmp LB_4305
LB_4304:
	add r14,1 
LB_4305:
	cmp r14,r9
	jge LB_4306
	JZ_LINE_SPC BYTE [r13+8+r14], LB_4304
LB_4306
	lea rax,[r14+1]
	cmp rax,r9
	jg LB_4309
	jmp LB_4310
LB_4309:
	mov r8,unt_1
	jmp LB_4307
LB_4310:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],10
	jnz LB_4311
	jmp LB_4312
LB_4311:
	mov r8,unt_1
	jmp LB_4307
LB_4312:
	add r14,1
	jmp LB_4308
LB_4307:
	add rsp,8
	pop rdi
	pop r9 
	pop r14
	pop r13
	ret
LB_4308:
	mov QWORD [rsp+8*1],r14
	mov r13,QWORD [rsp+16+8*1]
	mov r14,QWORD [rsp+8*1]
	jmp LB_4314
LB_4314
;; rsp=1 , %2454~1'(= r ) %2453~0'(= r ) %2452~8'(= a11◂ [ a9◂ [ ]] ) 
; #167 8'(= a11◂ [ a9◂ [ ]] ) ⊢ 1(<3)◂8'(= a11◂ [ a9◂ [ ]] )
;; rsp=1 , %2455~1(<3)◂8'(= a11◂ [ a9◂ [ ]] ) %2454~1'(= r ) %2453~0'(= r ) 
; #193 1(<3)◂8'(= a11◂ [ a9◂ [ ]] ) ⊢ 0(<2)◂1(<3)◂8'(= a11◂ [ a9◂ [ ]] )
;; rsp=1 , %2456~0(<2)◂1(<3)◂8'(= a11◂ [ a9◂ [ ]] ) %2454~1'(= r ) %2453~0'(= r ) 
; #22 0(<2)◂1(<3)◂8'(= a11◂ [ a9◂ [ ]] ) ⊢ 0(<2)◂0(<2)◂1(<3)◂8'(= a11◂ [ a9◂ [ ]] )
;; rsp=1 , %2457~0(<2)◂0(<2)◂1(<3)◂8'(= a11◂ [ a9◂ [ ]] ) %2454~1'(= r ) %2453~0'(= r ) 
; ∎ 0(<2)◂0(<2)◂1(<3)◂8'(= a11◂ [ a9◂ [ ]] )
; .dlt.ptn 1'(= r )
; .dlt.ptn 0'(= r )
; .mov_ptn2 0(<2)◂0(<2)◂1(<3)◂8'(= a11◂ [ a9◂ [ ]] ) ⊢ 2'(= a3◂ [ a35◂ [ a33◂ [ ]]] )
; .mov_ptn 0(<2)◂0(<2)◂1(<3)◂8'(= a11◂ [ a9◂ [ ]] ) ⊢ 2'(= a3◂ [ a35◂ [ a33◂ [ ]]] )
	mov rax,QWORD [rsp-8+8*1]
	mov rdi,rax
	mov rax,r15
	mov r15,QWORD [r15] 
	mov QWORD [rax],0
	mov BYTE [rax+6],1
	mov QWORD [rax+8],rdi
	mov rdi,rax
	mov rax,r15
	mov r15,QWORD [r15] 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov rdi,rax
	mov rax,r15
	mov r15,QWORD [r15] 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,8
	jmp LB_4313
LB_4313:
	cmp BYTE [r8+6],0
	jnz LB_4287
	pop r14
	pop r9
	add rsp,8
	pop r13
	ret
LB_4287:
	mov r9,QWORD [rsp+8]
	mov r14,QWORD [rsp+16]
	mov r13,QWORD [rsp+24]
	jmp LB_4317
LB_4316:
	add r14,1 
LB_4317:
	cmp r14,r9
	jge LB_4318
	JZ_LINE_SPC BYTE [r13+8+r14], LB_4316
LB_4318
	lea rax,[r14+2]
	cmp rax,r9
	jg LB_4321
	jmp LB_4322
LB_4321:
	mov r8,unt_1
	jmp LB_4319
LB_4322:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],194
	jnz LB_4323
	cmp BYTE [rdi+1],171
	jnz LB_4323
	jmp LB_4324
LB_4323:
	mov r8,unt_1
	jmp LB_4319
LB_4324:
	add r14,2
	jmp LB_4320
LB_4319:
	add rsp,0
	jmp LB_4315
LB_4320:
	jmp LB_4326
LB_4325:
	add r14,1 
LB_4326:
	cmp r14,r9
	jge LB_4327
	JZ_LINE_SPC BYTE [r13+8+r14], LB_4325
LB_4327
	lea rax,[r14+1]
	cmp rax,r9
	jg LB_4330
	jmp LB_4331
LB_4330:
	mov r8,unt_1
	jmp LB_4328
LB_4331:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],10
	jnz LB_4332
	jmp LB_4333
LB_4332:
	mov r8,unt_1
	jmp LB_4328
LB_4333:
	add r14,1
	jmp LB_4329
LB_4328:
	add rsp,0
	pop rdi
	pop r9 
	pop r14
	pop r13
	ret
LB_4329:
	jmp LB_4335
LB_4334:
	add r14,1 
LB_4335:
	cmp r14,r9
	jge LB_4336
	JZ_LINE_SPC BYTE [r13+8+r14], LB_4334
LB_4336
	call GRM_234
	cmp BYTE [r8+6],0
	jnz LB_4339
	jmp LB_4340
LB_4339:
	jmp LB_4337
LB_4340:
	sub rsp,8
	mov r8,[r8+8]
; .mov_ptn2 2'(= a35◂ [ a17◂ [ a9◂ [ ]{| l |}]] ) ⊢ 8'(= a35◂ [ a17◂ [ a9◂ [ ]{| l |}]] )
; .mov_ptn 2'(= a35◂ [ a17◂ [ a9◂ [ ]{| l |}]] ) ⊢ 8'(= a35◂ [ a17◂ [ a9◂ [ ]{| l |}]] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_4338
LB_4337:
	add rsp,0
	pop rdi
	pop r9 
	pop r14
	pop r13
	ret
LB_4338:
	mov QWORD [rsp+8*1],r14
	mov r13,QWORD [rsp+16+8*1]
	mov r14,QWORD [rsp+8*1]
	jmp LB_4342
LB_4342
;; rsp=1 , %2460~1'(= r ) %2459~0'(= r ) %2458~8'(= a35◂ [ a17◂ [ a9◂ [ ]{| l |}]] ) 
;; ? 8'(= a35◂ [ a17◂ [ a9◂ [ ]{| l |}]] ) ⊢ 0(<2)◂2'(= a17◂ [ a9◂ [ ]{| l |}] )
	mov rdi,QWORD [rsp-8+8*1]
	cmp BYTE [rdi+6],0
	jnz LB_4343
	mov rax,QWORD [rdi+8]
	mov r8,rax
;; rsp=1 , %2462~2'(= a17◂ [ a9◂ [ ]{| l |}] ) %2460~1'(= r ) %2459~0'(= r ) 
; #166 2'(= a17◂ [ a9◂ [ ]{| l |}] ) ⊢ 2(<3)◂2'(= a17◂ [ a9◂ [ ]{| l |}] )
;; rsp=1 , %2463~2(<3)◂2'(= a17◂ [ a9◂ [ ]{| l |}] ) %2460~1'(= r ) %2459~0'(= r ) 
; #193 2(<3)◂2'(= a17◂ [ a9◂ [ ]{| l |}] ) ⊢ 0(<2)◂2(<3)◂2'(= a17◂ [ a9◂ [ ]{| l |}] )
;; rsp=1 , %2464~0(<2)◂2(<3)◂2'(= a17◂ [ a9◂ [ ]{| l |}] ) %2460~1'(= r ) %2459~0'(= r ) 
; #22 0(<2)◂2(<3)◂2'(= a17◂ [ a9◂ [ ]{| l |}] ) ⊢ 0(<2)◂0(<2)◂2(<3)◂2'(= a17◂ [ a9◂ [ ]{| l |}] )
;; rsp=1 , %2465~0(<2)◂0(<2)◂2(<3)◂2'(= a17◂ [ a9◂ [ ]{| l |}] ) %2460~1'(= r ) %2459~0'(= r ) 
; ∎ 0(<2)◂0(<2)◂2(<3)◂2'(= a17◂ [ a9◂ [ ]{| l |}] )
; .dlt.ptn 1'(= r )
; .dlt.ptn 0'(= r )
; .mov_ptn2 0(<2)◂0(<2)◂2(<3)◂2'(= a17◂ [ a9◂ [ ]{| l |}] ) ⊢ 2'(= a3◂ [ a35◂ [ a33◂ [ ]]] )
	mov r13,r8
; .mov_ptn 0(<2)◂0(<2)◂2(<3)◂0'(= a17◂ [ a9◂ [ ]{| l |}] ) ⊢ 2'(= a3◂ [ a35◂ [ a33◂ [ ]]] )
	mov rax,r13
	mov rdi,rax
	mov rax,r15
	mov r15,QWORD [r15] 
	mov QWORD [rax],0
	mov BYTE [rax+6],2
	mov QWORD [rax+8],rdi
	mov rdi,rax
	mov rax,r15
	mov r15,QWORD [r15] 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov rdi,rax
	mov rax,r15
	mov r15,QWORD [r15] 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,8
	jmp LB_4341
LB_4343:
;; ?. 8'(= a35◂ [ a17◂ [ a9◂ [ ]{| l |}]] ) ⊢ 1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] )
	mov rax,QWORD [rdi+8]
	mov r8,rax
;; rsp=1 , %2461~2'(= a2◂ [ *{ rr{| l |}}] ) %2460~1'(= r ) %2459~0'(= r ) 
; #192 2'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] )
;; rsp=1 , %2466~1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] ) %2460~1'(= r ) %2459~0'(= r ) 
; #22 1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 0(<2)◂1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] )
;; rsp=1 , %2467~0(<2)◂1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] ) %2460~1'(= r ) %2459~0'(= r ) 
; ∎ 0(<2)◂1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] )
; .dlt.ptn 1'(= r )
; .dlt.ptn 0'(= r )
; .mov_ptn2 0(<2)◂1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 2'(= a3◂ [ a35◂ [ a33◂ [ ]]] )
	mov r13,r8
; .mov_ptn 0(<2)◂1(<2)◂0'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 2'(= a3◂ [ a35◂ [ a33◂ [ ]]] )
	mov rax,r13
	mov rdi,rax
	mov rax,r15
	mov r15,QWORD [r15] 
	mov QWORD [rax],0
	mov BYTE [rax+6],1
	mov QWORD [rax+8],rdi
	mov rdi,rax
	mov rax,r15
	mov r15,QWORD [r15] 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,8
	jmp LB_4341
LB_4341:
	cmp BYTE [r8+6],0
	jnz LB_4315
	pop r14
	pop r9
	add rsp,8
	pop r13
	ret
LB_4315:
	mov r9,QWORD [rsp+8]
	mov r14,QWORD [rsp+16]
	mov r13,QWORD [rsp+24]
	jmp LB_4346
LB_4345:
	add r14,1 
LB_4346:
	cmp r14,r9
	jge LB_4347
	JZ_LINE_SPC BYTE [r13+8+r14], LB_4345
LB_4347
	call GRM_205
	cmp BYTE [r8+6],0
	jnz LB_4350
	jmp LB_4351
LB_4350:
	jmp LB_4348
LB_4351:
	sub rsp,8
	mov r8,[r8+8]
; .mov_ptn2 2'(= a8◂ [ a13◂ [ {| l |}]] ) ⊢ 8'(= a8◂ [ a13◂ [ {| l |}]] )
; .mov_ptn 2'(= a8◂ [ a13◂ [ {| l |}]] ) ⊢ 8'(= a8◂ [ a13◂ [ {| l |}]] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_4349
LB_4348:
	add rsp,0
	jmp LB_4344
LB_4349:
	jmp LB_4353
LB_4352:
	add r14,1 
LB_4353:
	cmp r14,r9
	jge LB_4354
	JZ_LINE_SPC BYTE [r13+8+r14], LB_4352
LB_4354
	call GRM_257
	cmp BYTE [r8+6],0
	jnz LB_4357
	jmp LB_4358
LB_4357:
	jmp LB_4355
LB_4358:
	sub rsp,8
	mov r8,[r8+8]
; .mov_ptn2 2'(= a3◂ [ a23◂ [ ]] ) ⊢ 9'(= a3◂ [ a23◂ [ ]] )
; .mov_ptn 2'(= a3◂ [ a23◂ [ ]] ) ⊢ 9'(= a3◂ [ a23◂ [ ]] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_4356
LB_4355:
	add rsp,8
	jmp LB_4344
LB_4356:
	jmp LB_4360
LB_4359:
	add r14,1 
LB_4360:
	cmp r14,r9
	jge LB_4361
	JZ_LINE_SPC BYTE [r13+8+r14], LB_4359
LB_4361
	lea rax,[r14+1]
	cmp rax,r9
	jg LB_4364
	jmp LB_4365
LB_4364:
	mov r8,unt_1
	jmp LB_4362
LB_4365:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],10
	jnz LB_4366
	jmp LB_4367
LB_4366:
	mov r8,unt_1
	jmp LB_4362
LB_4367:
	add r14,1
	jmp LB_4363
LB_4362:
	add rsp,16
	jmp LB_4344
LB_4363:
	jmp LB_4369
LB_4368:
	add r14,1 
LB_4369:
	cmp r14,r9
	jge LB_4370
	JZ_LINE_SPC BYTE [r13+8+r14], LB_4368
LB_4370
	call GRM_234
	cmp BYTE [r8+6],0
	jnz LB_4373
	jmp LB_4374
LB_4373:
	jmp LB_4371
LB_4374:
	sub rsp,8
	mov r8,[r8+8]
; .mov_ptn2 2'(= a35◂ [ a17◂ [ a9◂ [ ]{| l |}]] ) ⊢ 10'(= a35◂ [ a17◂ [ a9◂ [ ]{| l |}]] )
; .mov_ptn 2'(= a35◂ [ a17◂ [ a9◂ [ ]{| l |}]] ) ⊢ 10'(= a35◂ [ a17◂ [ a9◂ [ ]{| l |}]] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_4372
LB_4371:
	add rsp,16
	jmp LB_4344
LB_4372:
	mov QWORD [rsp+8*3],r14
	mov r13,QWORD [rsp+16+8*3]
	mov r14,QWORD [rsp+8*3]
	jmp LB_4376
LB_4376
;; rsp=3 , %2472~1'(= r ) %2471~0'(= r ) %2470~10'(= a35◂ [ a17◂ [ a9◂ [ ]{| l |}]] ) %2469~9'(= a3◂ [ a23◂ [ ]] ) %2468~8'(= a8◂ [ a13◂ [ {| l |}]] ) 
;; ? 10'(= a35◂ [ a17◂ [ a9◂ [ ]{| l |}]] ) ⊢ 0(<2)◂2'(= a17◂ [ a9◂ [ ]{| l |}] )
	mov rdi,QWORD [rsp-8+8*1]
	cmp BYTE [rdi+6],0
	jnz LB_4377
	mov rax,QWORD [rdi+8]
	mov r8,rax
;; rsp=3 , %2474~2'(= a17◂ [ a9◂ [ ]{| l |}] ) %2472~1'(= r ) %2471~0'(= r ) %2469~9'(= a3◂ [ a23◂ [ ]] ) %2468~8'(= a8◂ [ a13◂ [ {| l |}]] ) 
; #168 { 8'(= a8◂ [ a13◂ [ {| l |}]] ) 9'(= a3◂ [ a23◂ [ ]] ) 2'(= a17◂ [ a9◂ [ ]{| l |}] ) } ⊢ 0(<3)◂{ 8'(= a8◂ [ a13◂ [ {| l |}]] ) 9'(= a3◂ [ a23◂ [ ]] ) 2'(= a17◂ [ a9◂ [ ]{| l |}] ) }
;; rsp=3 , %2475~0(<3)◂{ 8'(= a8◂ [ a13◂ [ {| l |}]] ) 9'(= a3◂ [ a23◂ [ ]] ) 2'(= a17◂ [ a9◂ [ ]{| l |}] ) } %2472~1'(= r ) %2471~0'(= r ) 
; #193 0(<3)◂{ 8'(= a8◂ [ a13◂ [ {| l |}]] ) 9'(= a3◂ [ a23◂ [ ]] ) 2'(= a17◂ [ a9◂ [ ]{| l |}] ) } ⊢ 0(<2)◂0(<3)◂{ 8'(= a8◂ [ a13◂ [ {| l |}]] ) 9'(= a3◂ [ a23◂ [ ]] ) 2'(= a17◂ [ a9◂ [ ]{| l |}] ) }
;; rsp=3 , %2476~0(<2)◂0(<3)◂{ 8'(= a8◂ [ a13◂ [ {| l |}]] ) 9'(= a3◂ [ a23◂ [ ]] ) 2'(= a17◂ [ a9◂ [ ]{| l |}] ) } %2472~1'(= r ) %2471~0'(= r ) 
; #22 0(<2)◂0(<3)◂{ 8'(= a8◂ [ a13◂ [ {| l |}]] ) 9'(= a3◂ [ a23◂ [ ]] ) 2'(= a17◂ [ a9◂ [ ]{| l |}] ) } ⊢ 0(<2)◂0(<2)◂0(<3)◂{ 8'(= a8◂ [ a13◂ [ {| l |}]] ) 9'(= a3◂ [ a23◂ [ ]] ) 2'(= a17◂ [ a9◂ [ ]{| l |}] ) }
;; rsp=3 , %2477~0(<2)◂0(<2)◂0(<3)◂{ 8'(= a8◂ [ a13◂ [ {| l |}]] ) 9'(= a3◂ [ a23◂ [ ]] ) 2'(= a17◂ [ a9◂ [ ]{| l |}] ) } %2472~1'(= r ) %2471~0'(= r ) 
; ∎ 0(<2)◂0(<2)◂0(<3)◂{ 8'(= a8◂ [ a13◂ [ {| l |}]] ) 9'(= a3◂ [ a23◂ [ ]] ) 2'(= a17◂ [ a9◂ [ ]{| l |}] ) }
; .dlt.ptn 1'(= r )
; .dlt.ptn 0'(= r )
; .mov_ptn2 0(<2)◂0(<2)◂0(<3)◂{ 8'(= a8◂ [ a13◂ [ {| l |}]] ) 9'(= a3◂ [ a23◂ [ ]] ) 2'(= a17◂ [ a9◂ [ ]{| l |}] ) } ⊢ 2'(= a3◂ [ a35◂ [ a33◂ [ ]]] )
	mov r13,r8
; .mov_ptn 0(<2)◂0(<2)◂0(<3)◂{ 8'(= a8◂ [ a13◂ [ {| l |}]] ) 9'(= a3◂ [ a23◂ [ ]] ) 0'(= a17◂ [ a9◂ [ ]{| l |}] ) } ⊢ 2'(= a3◂ [ a35◂ [ a33◂ [ ]]] )
	mov rax,[SS_RCD_3_TOP]
	mov rsi,[rax] 
	mov QWORD [SS_RCD_3_TOP],rsi
	mov QWORD [rax],0
	mov r14,rax
	mov rax,QWORD [rsp-8+8*3]
	mov QWORD [r14+8+8*0],rax
	mov rax,QWORD [rsp-8+8*2]
	mov QWORD [r14+8+8*1],rax
	mov rax,r13
	mov QWORD [r14+8+8*2],rax
	mov rax,r14
	mov BYTE [rax+6],0
	mov rdi,rax
	mov rax,r15
	mov r15,QWORD [r15] 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov rdi,rax
	mov rax,r15
	mov r15,QWORD [r15] 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,24
	jmp LB_4375
LB_4377:
;; ?. 10'(= a35◂ [ a17◂ [ a9◂ [ ]{| l |}]] ) ⊢ 1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] )
	mov rax,QWORD [rdi+8]
	mov r8,rax
;; rsp=3 , %2473~2'(= a2◂ [ *{ rr{| l |}}] ) %2472~1'(= r ) %2471~0'(= r ) %2469~9'(= a3◂ [ a23◂ [ ]] ) %2468~8'(= a8◂ [ a13◂ [ {| l |}]] ) 
; #192 2'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] )
;; rsp=3 , %2478~1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] ) %2472~1'(= r ) %2471~0'(= r ) %2469~9'(= a3◂ [ a23◂ [ ]] ) %2468~8'(= a8◂ [ a13◂ [ {| l |}]] ) 
; #22 1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 0(<2)◂1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] )
;; rsp=3 , %2479~0(<2)◂1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] ) %2472~1'(= r ) %2471~0'(= r ) %2469~9'(= a3◂ [ a23◂ [ ]] ) %2468~8'(= a8◂ [ a13◂ [ {| l |}]] ) 
; ∎ 0(<2)◂1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] )
; .dlt.ptn 1'(= r )
; .dlt.ptn 0'(= r )
; .dlt.ptn 9'(= a3◂ [ a23◂ [ ]] )
;	.dlt adt ⊢ _  
; .dlt.ptn 8'(= a8◂ [ a13◂ [ {| l |}]] )
;	.dlt adt ⊢ _  
; .mov_ptn2 0(<2)◂1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 2'(= a3◂ [ a35◂ [ a33◂ [ ]]] )
	mov r13,r8
; .mov_ptn 0(<2)◂1(<2)◂0'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 2'(= a3◂ [ a35◂ [ a33◂ [ ]]] )
	mov rax,r13
	mov rdi,rax
	mov rax,r15
	mov r15,QWORD [r15] 
	mov QWORD [rax],0
	mov BYTE [rax+6],1
	mov QWORD [rax+8],rdi
	mov rdi,rax
	mov rax,r15
	mov r15,QWORD [r15] 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,24
	jmp LB_4375
LB_4375:
	cmp BYTE [r8+6],0
	jnz LB_4344
	pop r14
	pop r9
	add rsp,8
	pop r13
	ret
LB_4344:
	pop rdi
	pop r9 
	pop r14
	pop r13
	ret
ETR_259:
	mov r9,0x0000_ffff_ffff_ffff
	and r9,[r13]
	call GRM_259
	ret
GRM_259:
	sub rsp,32
	mov QWORD [rsp+24],r13
	mov QWORD [rsp+16],r14 
	mov QWORD [rsp+8],r9
	jmp LB_4380
LB_4379:
	add r14,1 
LB_4380:
	cmp r14,r9
	jge LB_4381
	JZ_SPC BYTE [r13+8+r14], LB_4379
LB_4381
	lea rax,[r14+1]
	cmp rax,r9
	jg LB_4384
	jmp LB_4385
LB_4384:
	mov r8,unt_1
	jmp LB_4382
LB_4385:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],64
	jnz LB_4386
	jmp LB_4387
LB_4386:
	mov r8,unt_1
	jmp LB_4382
LB_4387:
	add r14,1
	jmp LB_4383
LB_4382:
	add rsp,0
	jmp LB_4378
LB_4383:
	jmp LB_4389
LB_4388:
	add r14,1 
LB_4389:
	cmp r14,r9
	jge LB_4390
	JZ_SPC BYTE [r13+8+r14], LB_4388
LB_4390
	lea rax,[r14+1]
	cmp rax,r9
	jg LB_4393
	jmp LB_4394
LB_4393:
	mov r8,unt_1
	jmp LB_4391
LB_4394:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],46
	jnz LB_4395
	jmp LB_4396
LB_4395:
	mov r8,unt_1
	jmp LB_4391
LB_4396:
	add r14,1
	jmp LB_4392
LB_4391:
	add rsp,0
	jmp LB_4378
LB_4392:
	jmp LB_4398
LB_4397:
	add r14,1 
LB_4398:
	cmp r14,r9
	jge LB_4399
	JZ_SPC BYTE [r13+8+r14], LB_4397
LB_4399
	call GRM_74
	cmp BYTE [r8+6],0
	jnz LB_4402
	jmp LB_4403
LB_4402:
	jmp LB_4400
LB_4403:
	sub rsp,8
; .mov_ptn2 2'(= {| l |} ) ⊢ 8'(= {| l |} )
; .mov_ptn 2'(= {| l |} ) ⊢ 8'(= {| l |} )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_4401
LB_4400:
	add rsp,0
	jmp LB_4378
LB_4401:
	jmp LB_4405
LB_4404:
	add r14,1 
LB_4405:
	cmp r14,r9
	jge LB_4406
	JZ_SPC BYTE [r13+8+r14], LB_4404
LB_4406
	call GRM_261
	cmp BYTE [r8+6],0
	jnz LB_4409
	jmp LB_4410
LB_4409:
	jmp LB_4407
LB_4410:
	sub rsp,8
	mov r8,[r8+8]
; .mov_ptn2 2'(= a24◂ [ a9◂ [ ]{| l |}] ) ⊢ 9'(= a24◂ [ a9◂ [ ]{| l |}] )
; .mov_ptn 2'(= a24◂ [ a9◂ [ ]{| l |}] ) ⊢ 9'(= a24◂ [ a9◂ [ ]{| l |}] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_4408
LB_4407:
	add rsp,8
	jmp LB_4378
LB_4408:
	mov QWORD [rsp+8*2],r14
	mov r13,QWORD [rsp+16+8*2]
	mov r14,QWORD [rsp+8*2]
	jmp LB_4412
LB_4412
;; rsp=2 , %2483~1'(= r ) %2482~0'(= r ) %2481~9'(= a24◂ [ a9◂ [ ]{| l |}] ) %2480~8'(= {| l |} ) 
; #22 { 8'(= {| l |} ) 9'(= a24◂ [ a9◂ [ ]{| l |}] ) } ⊢ 0(<2)◂{ 8'(= {| l |} ) 9'(= a24◂ [ a9◂ [ ]{| l |}] ) }
;; rsp=2 , %2484~0(<2)◂{ 8'(= {| l |} ) 9'(= a24◂ [ a9◂ [ ]{| l |}] ) } %2483~1'(= r ) %2482~0'(= r ) 
; ∎ 0(<2)◂{ 8'(= {| l |} ) 9'(= a24◂ [ a9◂ [ ]{| l |}] ) }
; .dlt.ptn 1'(= r )
; .dlt.ptn 0'(= r )
; .mov_ptn2 0(<2)◂{ 8'(= {| l |} ) 9'(= a24◂ [ a9◂ [ ]{| l |}] ) } ⊢ 2'(= a3◂ [ *{ {| l |}a24◂ [ a9◂ [ ]{| l |}]}] )
; .mov_ptn 0(<2)◂{ 8'(= {| l |} ) 9'(= a24◂ [ a9◂ [ ]{| l |}] ) } ⊢ 2'(= a3◂ [ *{ {| l |}a24◂ [ a9◂ [ ]{| l |}]}] )
	mov rax,[SS_RCD_2_TOP]
	mov rsi,[rax] 
	mov QWORD [SS_RCD_2_TOP],rsi
	mov QWORD [rax],0
	mov r13,rax
	mov rax,QWORD [rsp-8+8*2]
	mov QWORD [r13+8+8*0],rax
	mov rax,QWORD [rsp-8+8*1]
	mov QWORD [r13+8+8*1],rax
	mov rax,r13
	mov BYTE [rax+6],0
	mov r8,rax
	add rsp,16
	jmp LB_4411
LB_4411:
	cmp BYTE [r8+6],0
	jnz LB_4378
	pop r14
	pop r9
	add rsp,8
	pop r13
	ret
LB_4378:
	pop rdi
	pop r9 
	pop r14
	pop r13
	ret
ETR_260:
	mov r9,0x0000_ffff_ffff_ffff
	and r9,[r13]
	call GRM_260
	ret
GRM_260:
	sub rsp,32
	mov QWORD [rsp+24],r13
	mov QWORD [rsp+16],r14 
	mov QWORD [rsp+8],r9
	jmp LB_4415
LB_4414:
	add r14,1 
LB_4415:
	cmp r14,r9
	jge LB_4416
	JZ_SPC BYTE [r13+8+r14], LB_4414
LB_4416
	call GRM_259
	cmp BYTE [r8+6],0
	jnz LB_4419
	jmp LB_4420
LB_4419:
	jmp LB_4417
LB_4420:
	sub rsp,16
; .mov_ptn2 2'(= *{ {| l |}a24◂ [ a9◂ [ ]{| l |}]} ) ⊢ { 8'(= {| l |} ) 9'(= a24◂ [ a9◂ [ ]{| l |}] ) }
; .mov_ptn 2'(= *{ {| l |}a24◂ [ a9◂ [ ]{| l |}]} ) ⊢ { 8'(= {| l |} ) 9'(= a24◂ [ a9◂ [ ]{| l |}] ) }
	mov rdi,r8
	mov rdi,QWORD [rdi+8+8*0]
	mov r10,rdi
	mov QWORD [rsp-8+8*2],r10
	mov rdi,r8
	mov rdi,QWORD [rdi+8+8*1]
	mov r11,rdi
	mov QWORD [rsp-8+8*1],r11
	jmp LB_4418
LB_4417:
	add rsp,0
	jmp LB_4413
LB_4418:
	jmp LB_4422
LB_4421:
	add r14,1 
LB_4422:
	cmp r14,r9
	jge LB_4423
	JZ_SPC BYTE [r13+8+r14], LB_4421
LB_4423
	call GRM_260
	cmp BYTE [r8+6],0
	jnz LB_4426
	jmp LB_4427
LB_4426:
	jmp LB_4424
LB_4427:
	sub rsp,8
	mov r8,[r8+8]
; .mov_ptn2 2'(= a2◂ [ *{ {| l |}a24◂ [ a9◂ [ ]{| l |}]}] ) ⊢ 10'(= a2◂ [ *{ {| l |}a24◂ [ a9◂ [ ]{| l |}]}] )
; .mov_ptn 2'(= a2◂ [ *{ {| l |}a24◂ [ a9◂ [ ]{| l |}]}] ) ⊢ 10'(= a2◂ [ *{ {| l |}a24◂ [ a9◂ [ ]{| l |}]}] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_4425
LB_4424:
	add rsp,16
	jmp LB_4413
LB_4425:
	mov QWORD [rsp+8*3],r14
	mov r13,QWORD [rsp+16+8*3]
	mov r14,QWORD [rsp+8*3]
	jmp LB_4429
LB_4429
;; rsp=3 , %2488~1'(= r ) %2487~0'(= r ) %2486~10'(= a2◂ [ *{ {| l |}a24◂ [ a9◂ [ ]{| l |}]}] ) %2485~{ 8'(= {| l |} ) 9'(= a24◂ [ a9◂ [ ]{| l |}] ) } 
; #21 { { 8'(= {| l |} ) 9'(= a24◂ [ a9◂ [ ]{| l |}] ) } 10'(= a2◂ [ *{ {| l |}a24◂ [ a9◂ [ ]{| l |}]}] ) } ⊢ 0(<2)◂{ { 8'(= {| l |} ) 9'(= a24◂ [ a9◂ [ ]{| l |}] ) } 10'(= a2◂ [ *{ {| l |}a24◂ [ a9◂ [ ]{| l |}]}] ) }
;; rsp=3 , %2489~0(<2)◂{ { 8'(= {| l |} ) 9'(= a24◂ [ a9◂ [ ]{| l |}] ) } 10'(= a2◂ [ *{ {| l |}a24◂ [ a9◂ [ ]{| l |}]}] ) } %2488~1'(= r ) %2487~0'(= r ) 
; #22 0(<2)◂{ { 8'(= {| l |} ) 9'(= a24◂ [ a9◂ [ ]{| l |}] ) } 10'(= a2◂ [ *{ {| l |}a24◂ [ a9◂ [ ]{| l |}]}] ) } ⊢ 0(<2)◂0(<2)◂{ { 8'(= {| l |} ) 9'(= a24◂ [ a9◂ [ ]{| l |}] ) } 10'(= a2◂ [ *{ {| l |}a24◂ [ a9◂ [ ]{| l |}]}] ) }
;; rsp=3 , %2490~0(<2)◂0(<2)◂{ { 8'(= {| l |} ) 9'(= a24◂ [ a9◂ [ ]{| l |}] ) } 10'(= a2◂ [ *{ {| l |}a24◂ [ a9◂ [ ]{| l |}]}] ) } %2488~1'(= r ) %2487~0'(= r ) 
; ∎ 0(<2)◂0(<2)◂{ { 8'(= {| l |} ) 9'(= a24◂ [ a9◂ [ ]{| l |}] ) } 10'(= a2◂ [ *{ {| l |}a24◂ [ a9◂ [ ]{| l |}]}] ) }
; .dlt.ptn 1'(= r )
; .dlt.ptn 0'(= r )
; .mov_ptn2 0(<2)◂0(<2)◂{ { 8'(= {| l |} ) 9'(= a24◂ [ a9◂ [ ]{| l |}] ) } 10'(= a2◂ [ *{ {| l |}a24◂ [ a9◂ [ ]{| l |}]}] ) } ⊢ 2'(= a3◂ [ a2◂ [ *{ {| l |}a24◂ [ a9◂ [ ]{| l |}]}]] )
; .mov_ptn 0(<2)◂0(<2)◂{ { 8'(= {| l |} ) 9'(= a24◂ [ a9◂ [ ]{| l |}] ) } 10'(= a2◂ [ *{ {| l |}a24◂ [ a9◂ [ ]{| l |}]}] ) } ⊢ 2'(= a3◂ [ a2◂ [ *{ {| l |}a24◂ [ a9◂ [ ]{| l |}]}]] )
	mov rax,[SS_RCD_2_TOP]
	mov rsi,[rax] 
	mov QWORD [SS_RCD_2_TOP],rsi
	mov QWORD [rax],0
	mov r13,rax
	mov rax,[SS_RCD_2_TOP]
	mov rsi,[rax] 
	mov QWORD [SS_RCD_2_TOP],rsi
	mov QWORD [rax],0
	mov r14,rax
	mov rax,QWORD [rsp-8+8*3]
	mov QWORD [r14+8+8*0],rax
	mov rax,QWORD [rsp-8+8*2]
	mov QWORD [r14+8+8*1],rax
	mov rax,r14
	mov QWORD [r13+8+8*0],rax
	mov rax,QWORD [rsp-8+8*1]
	mov QWORD [r13+8+8*1],rax
	mov rax,r13
	mov BYTE [rax+6],0
	mov rdi,rax
	mov rax,r15
	mov r15,QWORD [r15] 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,24
	jmp LB_4428
LB_4428:
	cmp BYTE [r8+6],0
	jnz LB_4413
	pop r14
	pop r9
	add rsp,8
	pop r13
	ret
LB_4413:
	mov r9,QWORD [rsp+8]
	mov r14,QWORD [rsp+16]
	mov r13,QWORD [rsp+24]
	mov QWORD [rsp+8*0],r14
	mov r13,QWORD [rsp+16+8*0]
	mov r14,QWORD [rsp+8*0]
	jmp LB_4432
LB_4432
;; rsp=0 , %2492~1'(= r ) %2491~0'(= r ) 
; #20 { } ⊢ 1(<2)◂{ }
;; rsp=0 , %2493~1(<2)◂{ } %2492~1'(= r ) %2491~0'(= r ) 
; #22 1(<2)◂{ } ⊢ 0(<2)◂1(<2)◂{ }
;; rsp=0 , %2494~0(<2)◂1(<2)◂{ } %2492~1'(= r ) %2491~0'(= r ) 
; ∎ 0(<2)◂1(<2)◂{ }
; .dlt.ptn 1'(= r )
; .dlt.ptn 0'(= r )
; .mov_ptn2 0(<2)◂1(<2)◂{ } ⊢ 2'(= a3◂ [ a2◂ [ *{ {| l |}a24◂ [ a9◂ [ ]{| l |}]}]] )
; .mov_ptn 0(<2)◂1(<2)◂{ } ⊢ 2'(= a3◂ [ a2◂ [ *{ {| l |}a24◂ [ a9◂ [ ]{| l |}]}]] )
	mov rax,unt 
	mov rax,unt_1
	mov rdi,rax
	mov rax,r15
	mov r15,QWORD [r15] 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	jmp LB_4431
LB_4431:
	cmp BYTE [r8+6],0
	jnz LB_4430
	pop r14
	pop r9
	add rsp,8
	pop r13
	ret
LB_4430:
	pop rdi
	pop r9 
	pop r14
	pop r13
	ret
ETR_261:
	mov r9,0x0000_ffff_ffff_ffff
	and r9,[r13]
	call GRM_261
	ret
GRM_261:
	sub rsp,32
	mov QWORD [rsp+24],r13
	mov QWORD [rsp+16],r14 
	mov QWORD [rsp+8],r9
	jmp LB_4435
LB_4434:
	add r14,1 
LB_4435:
	cmp r14,r9
	jge LB_4436
	JZ_SPC BYTE [r13+8+r14], LB_4434
LB_4436
	call GRM_262
	cmp BYTE [r8+6],0
	jnz LB_4439
	jmp LB_4440
LB_4439:
	jmp LB_4437
LB_4440:
	sub rsp,8
	mov r8,[r8+8]
; .mov_ptn2 2'(= a26◂ [ a9◂ [ ]{| l |}] ) ⊢ 8'(= a26◂ [ a9◂ [ ]{| l |}] )
; .mov_ptn 2'(= a26◂ [ a9◂ [ ]{| l |}] ) ⊢ 8'(= a26◂ [ a9◂ [ ]{| l |}] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_4438
LB_4437:
	add rsp,0
	jmp LB_4433
LB_4438:
	mov QWORD [rsp+8*1],r14
	mov r13,QWORD [rsp+16+8*1]
	mov r14,QWORD [rsp+8*1]
	jmp LB_4442
LB_4442
;; rsp=1 , %2497~1'(= r ) %2496~0'(= r ) %2495~8'(= a26◂ [ a9◂ [ ]{| l |}] ) 
; #155 8'(= a26◂ [ a9◂ [ ]{| l |}] ) ⊢ 1(<2)◂8'(= a26◂ [ a9◂ [ ]{| l |}] )
;; rsp=1 , %2498~1(<2)◂8'(= a26◂ [ a9◂ [ ]{| l |}] ) %2497~1'(= r ) %2496~0'(= r ) 
; #22 1(<2)◂8'(= a26◂ [ a9◂ [ ]{| l |}] ) ⊢ 0(<2)◂1(<2)◂8'(= a26◂ [ a9◂ [ ]{| l |}] )
;; rsp=1 , %2499~0(<2)◂1(<2)◂8'(= a26◂ [ a9◂ [ ]{| l |}] ) %2497~1'(= r ) %2496~0'(= r ) 
; ∎ 0(<2)◂1(<2)◂8'(= a26◂ [ a9◂ [ ]{| l |}] )
; .dlt.ptn 1'(= r )
; .dlt.ptn 0'(= r )
; .mov_ptn2 0(<2)◂1(<2)◂8'(= a26◂ [ a9◂ [ ]{| l |}] ) ⊢ 2'(= a3◂ [ a24◂ [ a9◂ [ ]{| l |}]] )
; .mov_ptn 0(<2)◂1(<2)◂8'(= a26◂ [ a9◂ [ ]{| l |}] ) ⊢ 2'(= a3◂ [ a24◂ [ a9◂ [ ]{| l |}]] )
	mov rax,QWORD [rsp-8+8*1]
	mov rdi,rax
	mov rax,r15
	mov r15,QWORD [r15] 
	mov QWORD [rax],0
	mov BYTE [rax+6],1
	mov QWORD [rax+8],rdi
	mov rdi,rax
	mov rax,r15
	mov r15,QWORD [r15] 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,8
	jmp LB_4441
LB_4441:
	cmp BYTE [r8+6],0
	jnz LB_4433
	pop r14
	pop r9
	add rsp,8
	pop r13
	ret
LB_4433:
	mov r9,QWORD [rsp+8]
	mov r14,QWORD [rsp+16]
	mov r13,QWORD [rsp+24]
	jmp LB_4445
LB_4444:
	add r14,1 
LB_4445:
	cmp r14,r9
	jge LB_4446
	JZ_SPC BYTE [r13+8+r14], LB_4444
LB_4446
	call GRM_270
	cmp BYTE [r8+6],0
	jnz LB_4449
	jmp LB_4450
LB_4449:
	jmp LB_4447
LB_4450:
	sub rsp,8
	mov r8,[r8+8]
; .mov_ptn2 2'(= a25◂ [ a9◂ [ ]{| l |}] ) ⊢ 8'(= a25◂ [ a9◂ [ ]{| l |}] )
; .mov_ptn 2'(= a25◂ [ a9◂ [ ]{| l |}] ) ⊢ 8'(= a25◂ [ a9◂ [ ]{| l |}] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_4448
LB_4447:
	add rsp,0
	jmp LB_4443
LB_4448:
	mov QWORD [rsp+8*1],r14
	mov r13,QWORD [rsp+16+8*1]
	mov r14,QWORD [rsp+8*1]
	jmp LB_4452
LB_4452
;; rsp=1 , %2502~1'(= r ) %2501~0'(= r ) %2500~8'(= a25◂ [ a9◂ [ ]{| l |}] ) 
; #156 8'(= a25◂ [ a9◂ [ ]{| l |}] ) ⊢ 0(<2)◂8'(= a25◂ [ a9◂ [ ]{| l |}] )
;; rsp=1 , %2503~0(<2)◂8'(= a25◂ [ a9◂ [ ]{| l |}] ) %2502~1'(= r ) %2501~0'(= r ) 
; #22 0(<2)◂8'(= a25◂ [ a9◂ [ ]{| l |}] ) ⊢ 0(<2)◂0(<2)◂8'(= a25◂ [ a9◂ [ ]{| l |}] )
;; rsp=1 , %2504~0(<2)◂0(<2)◂8'(= a25◂ [ a9◂ [ ]{| l |}] ) %2502~1'(= r ) %2501~0'(= r ) 
; ∎ 0(<2)◂0(<2)◂8'(= a25◂ [ a9◂ [ ]{| l |}] )
; .dlt.ptn 1'(= r )
; .dlt.ptn 0'(= r )
; .mov_ptn2 0(<2)◂0(<2)◂8'(= a25◂ [ a9◂ [ ]{| l |}] ) ⊢ 2'(= a3◂ [ a24◂ [ a9◂ [ ]{| l |}]] )
; .mov_ptn 0(<2)◂0(<2)◂8'(= a25◂ [ a9◂ [ ]{| l |}] ) ⊢ 2'(= a3◂ [ a24◂ [ a9◂ [ ]{| l |}]] )
	mov rax,QWORD [rsp-8+8*1]
	mov rdi,rax
	mov rax,r15
	mov r15,QWORD [r15] 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov rdi,rax
	mov rax,r15
	mov r15,QWORD [r15] 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,8
	jmp LB_4451
LB_4451:
	cmp BYTE [r8+6],0
	jnz LB_4443
	pop r14
	pop r9
	add rsp,8
	pop r13
	ret
LB_4443:
	pop rdi
	pop r9 
	pop r14
	pop r13
	ret
ETR_262:
	mov r9,0x0000_ffff_ffff_ffff
	and r9,[r13]
	call GRM_262
	ret
GRM_262:
	sub rsp,32
	mov QWORD [rsp+24],r13
	mov QWORD [rsp+16],r14 
	mov QWORD [rsp+8],r9
	jmp LB_4455
LB_4454:
	add r14,1 
LB_4455:
	cmp r14,r9
	jge LB_4456
	JZ_SPC BYTE [r13+8+r14], LB_4454
LB_4456
	call GRM_269
	cmp BYTE [r8+6],0
	jnz LB_4459
	jmp LB_4460
LB_4459:
	jmp LB_4457
LB_4460:
	sub rsp,8
	mov r8,[r8+8]
; .mov_ptn2 2'(= a27◂ [ ] ) ⊢ 8'(= a27◂ [ ] )
; .mov_ptn 2'(= a27◂ [ ] ) ⊢ 8'(= a27◂ [ ] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_4458
LB_4457:
	add rsp,0
	jmp LB_4453
LB_4458:
	jmp LB_4462
LB_4461:
	add r14,1 
LB_4462:
	cmp r14,r9
	jge LB_4463
	JZ_SPC BYTE [r13+8+r14], LB_4461
LB_4463
	call GRM_264
	cmp BYTE [r8+6],0
	jnz LB_4466
	jmp LB_4467
LB_4466:
	jmp LB_4464
LB_4467:
	sub rsp,8
	mov r8,[r8+8]
; .mov_ptn2 2'(= a28◂ [ a9◂ [ ]] ) ⊢ 9'(= a28◂ [ a9◂ [ ]] )
; .mov_ptn 2'(= a28◂ [ a9◂ [ ]] ) ⊢ 9'(= a28◂ [ a9◂ [ ]] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_4465
LB_4464:
	add rsp,8
	pop rdi
	pop r9 
	pop r14
	pop r13
	ret
LB_4465:
	jmp LB_4469
LB_4468:
	add r14,1 
LB_4469:
	cmp r14,r9
	jge LB_4470
	JZ_SPC BYTE [r13+8+r14], LB_4468
LB_4470
	call GRM_263
	cmp BYTE [r8+6],0
	jnz LB_4473
	jmp LB_4474
LB_4473:
	jmp LB_4471
LB_4474:
	sub rsp,24
; .mov_ptn2 2'(= *{ a8◂ [ a13◂ [ {| l |}]]a17◂ [ a9◂ [ ]{| l |}]a3◂ [ *{ a8◂ [ a13◂ [ {| l |}]]a26◂ [ a9◂ [ ]{| l |}]}]} ) ⊢ { 10'(= a8◂ [ a13◂ [ {| l |}]] ) 11'(= a17◂ [ a9◂ [ ]{| l |}] ) 12'(= a3◂ [ *{ a8◂ [ a13◂ [ {| l |}]]a26◂ [ a9◂ [ ]{| l |}]}] ) }
; .mov_ptn 2'(= *{ a8◂ [ a13◂ [ {| l |}]]a17◂ [ a9◂ [ ]{| l |}]a3◂ [ *{ a8◂ [ a13◂ [ {| l |}]]a26◂ [ a9◂ [ ]{| l |}]}]} ) ⊢ { 10'(= a8◂ [ a13◂ [ {| l |}]] ) 11'(= a17◂ [ a9◂ [ ]{| l |}] ) 12'(= a3◂ [ *{ a8◂ [ a13◂ [ {| l |}]]a26◂ [ a9◂ [ ]{| l |}]}] ) }
	mov rdi,r8
	mov rdi,QWORD [rdi+8+8*0]
	mov r10,rdi
	mov QWORD [rsp-8+8*3],r10
	mov rdi,r8
	mov rdi,QWORD [rdi+8+8*1]
	mov r11,rdi
	mov QWORD [rsp-8+8*2],r11
	mov rdi,r8
	mov rdi,QWORD [rdi+8+8*2]
	mov rcx,rdi
	mov QWORD [rsp-8+8*1],rcx
	jmp LB_4472
LB_4471:
	add rsp,16
	pop rdi
	pop r9 
	pop r14
	pop r13
	ret
LB_4472:
	mov QWORD [rsp+8*5],r14
	mov r13,QWORD [rsp+16+8*5]
	mov r14,QWORD [rsp+8*5]
	jmp LB_4476
LB_4476
;; rsp=5 , %2511~1'(= r ) %2510~0'(= r ) %2509~12'(= a3◂ [ *{ a8◂ [ a13◂ [ {| l |}]]a26◂ [ a9◂ [ ]{| l |}]}] ) %2508~11'(= a17◂ [ a9◂ [ ]{| l |}] ) %2507~10'(= a8◂ [ a13◂ [ {| l |}]] ) %2506~9'(= a28◂ [ a9◂ [ ]] ) %2505~8'(= a27◂ [ ] ) 
; rsp_d=0, #163 { } ⊢ 2'(= a2◂ [ a13◂ [ {| l |}]] )
	sub rsp,16
	mov QWORD [rsp+8*0],r13
	mov QWORD [rsp+8*1],r14
; .mov_ptn2 { } ⊢ { }
	call ETR_163

	mov r14,QWORD [rsp-8+8*2]
	mov rax,QWORD [rsp-8+8*1]
	mov r8,r13
	mov r13,rax
	add rsp,16
;; rsp=5 , %2512~2'(= a2◂ [ a13◂ [ {| l |}]] ) %2511~1'(= r ) %2510~0'(= r ) %2509~12'(= a3◂ [ *{ a8◂ [ a13◂ [ {| l |}]]a26◂ [ a9◂ [ ]{| l |}]}] ) %2508~11'(= a17◂ [ a9◂ [ ]{| l |}] ) %2507~10'(= a8◂ [ a13◂ [ {| l |}]] ) %2506~9'(= a28◂ [ a9◂ [ ]] ) %2505~8'(= a27◂ [ ] ) 
; #151 { 2'(= a2◂ [ a13◂ [ {| l |}]] ) 10'(= a8◂ [ a13◂ [ {| l |}]] ) 11'(= a17◂ [ a9◂ [ ]{| l |}] ) 8'(= a27◂ [ ] ) 9'(= a28◂ [ a9◂ [ ]] ) 12'(= a3◂ [ *{ a8◂ [ a13◂ [ {| l |}]]a26◂ [ a9◂ [ ]{| l |}]}] ) } ⊢ 1(<2)◂{ 2'(= a2◂ [ a13◂ [ {| l |}]] ) 10'(= a8◂ [ a13◂ [ {| l |}]] ) 11'(= a17◂ [ a9◂ [ ]{| l |}] ) 8'(= a27◂ [ ] ) 9'(= a28◂ [ a9◂ [ ]] ) 12'(= a3◂ [ *{ a8◂ [ a13◂ [ {| l |}]]a26◂ [ a9◂ [ ]{| l |}]}] ) }
;; rsp=5 , %2513~1(<2)◂{ 2'(= a2◂ [ a13◂ [ {| l |}]] ) 10'(= a8◂ [ a13◂ [ {| l |}]] ) 11'(= a17◂ [ a9◂ [ ]{| l |}] ) 8'(= a27◂ [ ] ) 9'(= a28◂ [ a9◂ [ ]] ) 12'(= a3◂ [ *{ a8◂ [ a13◂ [ {| l |}]]a26◂ [ a9◂ [ ]{| l |}]}] ) } %2511~1'(= r ) %2510~0'(= r ) 
; #22 1(<2)◂{ 2'(= a2◂ [ a13◂ [ {| l |}]] ) 10'(= a8◂ [ a13◂ [ {| l |}]] ) 11'(= a17◂ [ a9◂ [ ]{| l |}] ) 8'(= a27◂ [ ] ) 9'(= a28◂ [ a9◂ [ ]] ) 12'(= a3◂ [ *{ a8◂ [ a13◂ [ {| l |}]]a26◂ [ a9◂ [ ]{| l |}]}] ) } ⊢ 0(<2)◂1(<2)◂{ 2'(= a2◂ [ a13◂ [ {| l |}]] ) 10'(= a8◂ [ a13◂ [ {| l |}]] ) 11'(= a17◂ [ a9◂ [ ]{| l |}] ) 8'(= a27◂ [ ] ) 9'(= a28◂ [ a9◂ [ ]] ) 12'(= a3◂ [ *{ a8◂ [ a13◂ [ {| l |}]]a26◂ [ a9◂ [ ]{| l |}]}] ) }
;; rsp=5 , %2514~0(<2)◂1(<2)◂{ 2'(= a2◂ [ a13◂ [ {| l |}]] ) 10'(= a8◂ [ a13◂ [ {| l |}]] ) 11'(= a17◂ [ a9◂ [ ]{| l |}] ) 8'(= a27◂ [ ] ) 9'(= a28◂ [ a9◂ [ ]] ) 12'(= a3◂ [ *{ a8◂ [ a13◂ [ {| l |}]]a26◂ [ a9◂ [ ]{| l |}]}] ) } %2511~1'(= r ) %2510~0'(= r ) 
; ∎ 0(<2)◂1(<2)◂{ 2'(= a2◂ [ a13◂ [ {| l |}]] ) 10'(= a8◂ [ a13◂ [ {| l |}]] ) 11'(= a17◂ [ a9◂ [ ]{| l |}] ) 8'(= a27◂ [ ] ) 9'(= a28◂ [ a9◂ [ ]] ) 12'(= a3◂ [ *{ a8◂ [ a13◂ [ {| l |}]]a26◂ [ a9◂ [ ]{| l |}]}] ) }
; .dlt.ptn 1'(= r )
; .dlt.ptn 0'(= r )
; .mov_ptn2 0(<2)◂1(<2)◂{ 2'(= a2◂ [ a13◂ [ {| l |}]] ) 10'(= a8◂ [ a13◂ [ {| l |}]] ) 11'(= a17◂ [ a9◂ [ ]{| l |}] ) 8'(= a27◂ [ ] ) 9'(= a28◂ [ a9◂ [ ]] ) 12'(= a3◂ [ *{ a8◂ [ a13◂ [ {| l |}]]a26◂ [ a9◂ [ ]{| l |}]}] ) } ⊢ 2'(= a3◂ [ a26◂ [ a9◂ [ ]{| l |}]] )
	mov r13,r8
; .mov_ptn 0(<2)◂1(<2)◂{ 0'(= a2◂ [ a13◂ [ {| l |}]] ) 10'(= a8◂ [ a13◂ [ {| l |}]] ) 11'(= a17◂ [ a9◂ [ ]{| l |}] ) 8'(= a27◂ [ ] ) 9'(= a28◂ [ a9◂ [ ]] ) 12'(= a3◂ [ *{ a8◂ [ a13◂ [ {| l |}]]a26◂ [ a9◂ [ ]{| l |}]}] ) } ⊢ 2'(= a3◂ [ a26◂ [ a9◂ [ ]{| l |}]] )
	mov rax,[SS_RCD_6_TOP]
	mov rsi,[rax] 
	mov QWORD [SS_RCD_6_TOP],rsi
	mov QWORD [rax],0
	mov r14,rax
	mov rax,r13
	mov QWORD [r14+8+8*0],rax
	mov rax,QWORD [rsp-8+8*3]
	mov QWORD [r14+8+8*1],rax
	mov rax,QWORD [rsp-8+8*2]
	mov QWORD [r14+8+8*2],rax
	mov rax,QWORD [rsp-8+8*5]
	mov QWORD [r14+8+8*3],rax
	mov rax,QWORD [rsp-8+8*4]
	mov QWORD [r14+8+8*4],rax
	mov rax,QWORD [rsp-8+8*1]
	mov QWORD [r14+8+8*5],rax
	mov rax,r14
	mov BYTE [rax+6],1
	mov rdi,rax
	mov rax,r15
	mov r15,QWORD [r15] 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,40
	jmp LB_4475
LB_4475:
	cmp BYTE [r8+6],0
	jnz LB_4453
	pop r14
	pop r9
	add rsp,8
	pop r13
	ret
LB_4453:
	mov r9,QWORD [rsp+8]
	mov r14,QWORD [rsp+16]
	mov r13,QWORD [rsp+24]
	jmp LB_4479
LB_4478:
	add r14,1 
LB_4479:
	cmp r14,r9
	jge LB_4480
	JZ_SPC BYTE [r13+8+r14], LB_4478
LB_4480
	call GRM_268
	cmp BYTE [r8+6],0
	jnz LB_4483
	jmp LB_4484
LB_4483:
	jmp LB_4481
LB_4484:
	sub rsp,8
	mov r8,[r8+8]
; .mov_ptn2 2'(= a27◂ [ ] ) ⊢ 8'(= a27◂ [ ] )
; .mov_ptn 2'(= a27◂ [ ] ) ⊢ 8'(= a27◂ [ ] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_4482
LB_4481:
	add rsp,0
	jmp LB_4477
LB_4482:
	jmp LB_4486
LB_4485:
	add r14,1 
LB_4486:
	cmp r14,r9
	jge LB_4487
	JZ_SPC BYTE [r13+8+r14], LB_4485
LB_4487
	call GRM_264
	cmp BYTE [r8+6],0
	jnz LB_4490
	jmp LB_4491
LB_4490:
	jmp LB_4488
LB_4491:
	sub rsp,8
	mov r8,[r8+8]
; .mov_ptn2 2'(= a28◂ [ a9◂ [ ]] ) ⊢ 9'(= a28◂ [ a9◂ [ ]] )
; .mov_ptn 2'(= a28◂ [ a9◂ [ ]] ) ⊢ 9'(= a28◂ [ a9◂ [ ]] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_4489
LB_4488:
	add rsp,8
	jmp LB_4477
LB_4489:
	jmp LB_4493
LB_4492:
	add r14,1 
LB_4493:
	cmp r14,r9
	jge LB_4494
	JZ_SPC BYTE [r13+8+r14], LB_4492
LB_4494
	call GRM_263
	cmp BYTE [r8+6],0
	jnz LB_4497
	jmp LB_4498
LB_4497:
	jmp LB_4495
LB_4498:
	sub rsp,24
; .mov_ptn2 2'(= *{ a8◂ [ a13◂ [ {| l |}]]a17◂ [ a9◂ [ ]{| l |}]a3◂ [ *{ a8◂ [ a13◂ [ {| l |}]]a26◂ [ a9◂ [ ]{| l |}]}]} ) ⊢ { 10'(= a8◂ [ a13◂ [ {| l |}]] ) 11'(= a17◂ [ a9◂ [ ]{| l |}] ) 12'(= a3◂ [ *{ a8◂ [ a13◂ [ {| l |}]]a26◂ [ a9◂ [ ]{| l |}]}] ) }
; .mov_ptn 2'(= *{ a8◂ [ a13◂ [ {| l |}]]a17◂ [ a9◂ [ ]{| l |}]a3◂ [ *{ a8◂ [ a13◂ [ {| l |}]]a26◂ [ a9◂ [ ]{| l |}]}]} ) ⊢ { 10'(= a8◂ [ a13◂ [ {| l |}]] ) 11'(= a17◂ [ a9◂ [ ]{| l |}] ) 12'(= a3◂ [ *{ a8◂ [ a13◂ [ {| l |}]]a26◂ [ a9◂ [ ]{| l |}]}] ) }
	mov rdi,r8
	mov rdi,QWORD [rdi+8+8*0]
	mov r10,rdi
	mov QWORD [rsp-8+8*3],r10
	mov rdi,r8
	mov rdi,QWORD [rdi+8+8*1]
	mov r11,rdi
	mov QWORD [rsp-8+8*2],r11
	mov rdi,r8
	mov rdi,QWORD [rdi+8+8*2]
	mov rcx,rdi
	mov QWORD [rsp-8+8*1],rcx
	jmp LB_4496
LB_4495:
	add rsp,16
	jmp LB_4477
LB_4496:
	jmp LB_4500
LB_4499:
	add r14,1 
LB_4500:
	cmp r14,r9
	jge LB_4501
	JZ_SPC BYTE [r13+8+r14], LB_4499
LB_4501
	call GRM_262
	cmp BYTE [r8+6],0
	jnz LB_4504
	jmp LB_4505
LB_4504:
	jmp LB_4502
LB_4505:
	sub rsp,8
	mov r8,[r8+8]
; .mov_ptn2 2'(= a26◂ [ a9◂ [ ]{| l |}] ) ⊢ 13'(= a26◂ [ a9◂ [ ]{| l |}] )
; .mov_ptn 2'(= a26◂ [ a9◂ [ ]{| l |}] ) ⊢ 13'(= a26◂ [ a9◂ [ ]{| l |}] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_4503
LB_4502:
	add rsp,40
	jmp LB_4477
LB_4503:
	mov QWORD [rsp+8*6],r14
	mov r13,QWORD [rsp+16+8*6]
	mov r14,QWORD [rsp+8*6]
	jmp LB_4507
LB_4507
;; rsp=6 , %2522~1'(= r ) %2521~0'(= r ) %2520~13'(= a26◂ [ a9◂ [ ]{| l |}] ) %2519~12'(= a3◂ [ *{ a8◂ [ a13◂ [ {| l |}]]a26◂ [ a9◂ [ ]{| l |}]}] ) %2518~11'(= a17◂ [ a9◂ [ ]{| l |}] ) %2517~10'(= a8◂ [ a13◂ [ {| l |}]] ) %2516~9'(= a28◂ [ a9◂ [ ]] ) %2515~8'(= a27◂ [ ] ) 
; rsp_d=0, #163 { } ⊢ 2'(= a2◂ [ a13◂ [ {| l |}]] )
	sub rsp,16
	mov QWORD [rsp+8*0],r13
	mov QWORD [rsp+8*1],r14
; .mov_ptn2 { } ⊢ { }
	call ETR_163

	mov r14,QWORD [rsp-8+8*2]
	mov rax,QWORD [rsp-8+8*1]
	mov r8,r13
	mov r13,rax
	add rsp,16
;; rsp=6 , %2523~2'(= a2◂ [ a13◂ [ {| l |}]] ) %2522~1'(= r ) %2521~0'(= r ) %2520~13'(= a26◂ [ a9◂ [ ]{| l |}] ) %2519~12'(= a3◂ [ *{ a8◂ [ a13◂ [ {| l |}]]a26◂ [ a9◂ [ ]{| l |}]}] ) %2518~11'(= a17◂ [ a9◂ [ ]{| l |}] ) %2517~10'(= a8◂ [ a13◂ [ {| l |}]] ) %2516~9'(= a28◂ [ a9◂ [ ]] ) %2515~8'(= a27◂ [ ] ) 
; #152 { 2'(= a2◂ [ a13◂ [ {| l |}]] ) 10'(= a8◂ [ a13◂ [ {| l |}]] ) 11'(= a17◂ [ a9◂ [ ]{| l |}] ) 8'(= a27◂ [ ] ) 9'(= a28◂ [ a9◂ [ ]] ) 12'(= a3◂ [ *{ a8◂ [ a13◂ [ {| l |}]]a26◂ [ a9◂ [ ]{| l |}]}] ) 13'(= a26◂ [ a9◂ [ ]{| l |}] ) } ⊢ 0(<2)◂{ 2'(= a2◂ [ a13◂ [ {| l |}]] ) 10'(= a8◂ [ a13◂ [ {| l |}]] ) 11'(= a17◂ [ a9◂ [ ]{| l |}] ) 8'(= a27◂ [ ] ) 9'(= a28◂ [ a9◂ [ ]] ) 12'(= a3◂ [ *{ a8◂ [ a13◂ [ {| l |}]]a26◂ [ a9◂ [ ]{| l |}]}] ) 13'(= a26◂ [ a9◂ [ ]{| l |}] ) }
;; rsp=6 , %2524~0(<2)◂{ 2'(= a2◂ [ a13◂ [ {| l |}]] ) 10'(= a8◂ [ a13◂ [ {| l |}]] ) 11'(= a17◂ [ a9◂ [ ]{| l |}] ) 8'(= a27◂ [ ] ) 9'(= a28◂ [ a9◂ [ ]] ) 12'(= a3◂ [ *{ a8◂ [ a13◂ [ {| l |}]]a26◂ [ a9◂ [ ]{| l |}]}] ) 13'(= a26◂ [ a9◂ [ ]{| l |}] ) } %2522~1'(= r ) %2521~0'(= r ) 
; #22 0(<2)◂{ 2'(= a2◂ [ a13◂ [ {| l |}]] ) 10'(= a8◂ [ a13◂ [ {| l |}]] ) 11'(= a17◂ [ a9◂ [ ]{| l |}] ) 8'(= a27◂ [ ] ) 9'(= a28◂ [ a9◂ [ ]] ) 12'(= a3◂ [ *{ a8◂ [ a13◂ [ {| l |}]]a26◂ [ a9◂ [ ]{| l |}]}] ) 13'(= a26◂ [ a9◂ [ ]{| l |}] ) } ⊢ 0(<2)◂0(<2)◂{ 2'(= a2◂ [ a13◂ [ {| l |}]] ) 10'(= a8◂ [ a13◂ [ {| l |}]] ) 11'(= a17◂ [ a9◂ [ ]{| l |}] ) 8'(= a27◂ [ ] ) 9'(= a28◂ [ a9◂ [ ]] ) 12'(= a3◂ [ *{ a8◂ [ a13◂ [ {| l |}]]a26◂ [ a9◂ [ ]{| l |}]}] ) 13'(= a26◂ [ a9◂ [ ]{| l |}] ) }
;; rsp=6 , %2525~0(<2)◂0(<2)◂{ 2'(= a2◂ [ a13◂ [ {| l |}]] ) 10'(= a8◂ [ a13◂ [ {| l |}]] ) 11'(= a17◂ [ a9◂ [ ]{| l |}] ) 8'(= a27◂ [ ] ) 9'(= a28◂ [ a9◂ [ ]] ) 12'(= a3◂ [ *{ a8◂ [ a13◂ [ {| l |}]]a26◂ [ a9◂ [ ]{| l |}]}] ) 13'(= a26◂ [ a9◂ [ ]{| l |}] ) } %2522~1'(= r ) %2521~0'(= r ) 
; ∎ 0(<2)◂0(<2)◂{ 2'(= a2◂ [ a13◂ [ {| l |}]] ) 10'(= a8◂ [ a13◂ [ {| l |}]] ) 11'(= a17◂ [ a9◂ [ ]{| l |}] ) 8'(= a27◂ [ ] ) 9'(= a28◂ [ a9◂ [ ]] ) 12'(= a3◂ [ *{ a8◂ [ a13◂ [ {| l |}]]a26◂ [ a9◂ [ ]{| l |}]}] ) 13'(= a26◂ [ a9◂ [ ]{| l |}] ) }
; .dlt.ptn 1'(= r )
; .dlt.ptn 0'(= r )
; .mov_ptn2 0(<2)◂0(<2)◂{ 2'(= a2◂ [ a13◂ [ {| l |}]] ) 10'(= a8◂ [ a13◂ [ {| l |}]] ) 11'(= a17◂ [ a9◂ [ ]{| l |}] ) 8'(= a27◂ [ ] ) 9'(= a28◂ [ a9◂ [ ]] ) 12'(= a3◂ [ *{ a8◂ [ a13◂ [ {| l |}]]a26◂ [ a9◂ [ ]{| l |}]}] ) 13'(= a26◂ [ a9◂ [ ]{| l |}] ) } ⊢ 2'(= a3◂ [ a26◂ [ a9◂ [ ]{| l |}]] )
	mov r13,r8
; .mov_ptn 0(<2)◂0(<2)◂{ 0'(= a2◂ [ a13◂ [ {| l |}]] ) 10'(= a8◂ [ a13◂ [ {| l |}]] ) 11'(= a17◂ [ a9◂ [ ]{| l |}] ) 8'(= a27◂ [ ] ) 9'(= a28◂ [ a9◂ [ ]] ) 12'(= a3◂ [ *{ a8◂ [ a13◂ [ {| l |}]]a26◂ [ a9◂ [ ]{| l |}]}] ) 13'(= a26◂ [ a9◂ [ ]{| l |}] ) } ⊢ 2'(= a3◂ [ a26◂ [ a9◂ [ ]{| l |}]] )
	mov rax,[SS_RCD_7_TOP]
	mov rsi,[rax] 
	mov QWORD [SS_RCD_7_TOP],rsi
	mov QWORD [rax],0
	mov r14,rax
	mov rax,r13
	mov QWORD [r14+8+8*0],rax
	mov rax,QWORD [rsp-8+8*4]
	mov QWORD [r14+8+8*1],rax
	mov rax,QWORD [rsp-8+8*3]
	mov QWORD [r14+8+8*2],rax
	mov rax,QWORD [rsp-8+8*6]
	mov QWORD [r14+8+8*3],rax
	mov rax,QWORD [rsp-8+8*5]
	mov QWORD [r14+8+8*4],rax
	mov rax,QWORD [rsp-8+8*2]
	mov QWORD [r14+8+8*5],rax
	mov rax,QWORD [rsp-8+8*1]
	mov QWORD [r14+8+8*6],rax
	mov rax,r14
	mov BYTE [rax+6],0
	mov rdi,rax
	mov rax,r15
	mov r15,QWORD [r15] 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,48
	jmp LB_4506
LB_4506:
	cmp BYTE [r8+6],0
	jnz LB_4477
	pop r14
	pop r9
	add rsp,8
	pop r13
	ret
LB_4477:
	pop rdi
	pop r9 
	pop r14
	pop r13
	ret
ETR_263:
	mov r9,0x0000_ffff_ffff_ffff
	and r9,[r13]
	call GRM_263
	ret
GRM_263:
	sub rsp,32
	mov QWORD [rsp+24],r13
	mov QWORD [rsp+16],r14 
	mov QWORD [rsp+8],r9
	jmp LB_4510
LB_4509:
	add r14,1 
LB_4510:
	cmp r14,r9
	jge LB_4511
	JZ_SPC BYTE [r13+8+r14], LB_4509
LB_4511
	lea rax,[r14+1]
	cmp rax,r9
	jg LB_4514
	jmp LB_4515
LB_4514:
	mov r8,unt_1
	jmp LB_4512
LB_4515:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],59
	jnz LB_4516
	jmp LB_4517
LB_4516:
	mov r8,unt_1
	jmp LB_4512
LB_4517:
	add r14,1
	jmp LB_4513
LB_4512:
	add rsp,0
	jmp LB_4508
LB_4513:
	jmp LB_4519
LB_4518:
	add r14,1 
LB_4519:
	cmp r14,r9
	jge LB_4520
	JZ_SPC BYTE [r13+8+r14], LB_4518
LB_4520
	lea rax,[r14+3]
	cmp rax,r9
	jg LB_4523
	jmp LB_4524
LB_4523:
	mov r8,unt_1
	jmp LB_4521
LB_4524:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],226
	jnz LB_4525
	cmp BYTE [rdi+1],138
	jnz LB_4525
	cmp BYTE [rdi+2],162
	jnz LB_4525
	jmp LB_4526
LB_4525:
	mov r8,unt_1
	jmp LB_4521
LB_4526:
	add r14,3
	jmp LB_4522
LB_4521:
	add rsp,0
	jmp LB_4508
LB_4522:
	jmp LB_4528
LB_4527:
	add r14,1 
LB_4528:
	cmp r14,r9
	jge LB_4529
	JZ_SPC BYTE [r13+8+r14], LB_4527
LB_4529
	call GRM_205
	cmp BYTE [r8+6],0
	jnz LB_4532
	jmp LB_4533
LB_4532:
	jmp LB_4530
LB_4533:
	sub rsp,8
	mov r8,[r8+8]
; .mov_ptn2 2'(= a8◂ [ a13◂ [ {| l |}]] ) ⊢ 8'(= a8◂ [ a13◂ [ {| l |}]] )
; .mov_ptn 2'(= a8◂ [ a13◂ [ {| l |}]] ) ⊢ 8'(= a8◂ [ a13◂ [ {| l |}]] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_4531
LB_4530:
	add rsp,0
	pop rdi
	pop r9 
	pop r14
	pop r13
	ret
LB_4531:
	jmp LB_4535
LB_4534:
	add r14,1 
LB_4535:
	cmp r14,r9
	jge LB_4536
	JZ_SPC BYTE [r13+8+r14], LB_4534
LB_4536
	lea rax,[r14+1]
	cmp rax,r9
	jg LB_4539
	jmp LB_4540
LB_4539:
	mov r8,unt_1
	jmp LB_4537
LB_4540:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],44
	jnz LB_4541
	jmp LB_4542
LB_4541:
	mov r8,unt_1
	jmp LB_4537
LB_4542:
	add r14,1
	jmp LB_4538
LB_4537:
	add rsp,8
	pop rdi
	pop r9 
	pop r14
	pop r13
	ret
LB_4538:
	jmp LB_4544
LB_4543:
	add r14,1 
LB_4544:
	cmp r14,r9
	jge LB_4545
	JZ_SPC BYTE [r13+8+r14], LB_4543
LB_4545
	call GRM_205
	cmp BYTE [r8+6],0
	jnz LB_4548
	jmp LB_4549
LB_4548:
	jmp LB_4546
LB_4549:
	sub rsp,8
	mov r8,[r8+8]
; .mov_ptn2 2'(= a8◂ [ a13◂ [ {| l |}]] ) ⊢ 9'(= a8◂ [ a13◂ [ {| l |}]] )
; .mov_ptn 2'(= a8◂ [ a13◂ [ {| l |}]] ) ⊢ 9'(= a8◂ [ a13◂ [ {| l |}]] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_4547
LB_4546:
	add rsp,8
	pop rdi
	pop r9 
	pop r14
	pop r13
	ret
LB_4547:
	jmp LB_4551
LB_4550:
	add r14,1 
LB_4551:
	cmp r14,r9
	jge LB_4552
	JZ_SPC BYTE [r13+8+r14], LB_4550
LB_4552
	call GRM_234
	cmp BYTE [r8+6],0
	jnz LB_4555
	jmp LB_4556
LB_4555:
	jmp LB_4553
LB_4556:
	sub rsp,8
	mov r8,[r8+8]
; .mov_ptn2 2'(= a35◂ [ a17◂ [ a9◂ [ ]{| l |}]] ) ⊢ 10'(= a35◂ [ a17◂ [ a9◂ [ ]{| l |}]] )
; .mov_ptn 2'(= a35◂ [ a17◂ [ a9◂ [ ]{| l |}]] ) ⊢ 10'(= a35◂ [ a17◂ [ a9◂ [ ]{| l |}]] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_4554
LB_4553:
	add rsp,16
	pop rdi
	pop r9 
	pop r14
	pop r13
	ret
LB_4554:
	jmp LB_4558
LB_4557:
	add r14,1 
LB_4558:
	cmp r14,r9
	jge LB_4559
	JZ_SPC BYTE [r13+8+r14], LB_4557
LB_4559
	call GRM_262
	cmp BYTE [r8+6],0
	jnz LB_4562
	jmp LB_4563
LB_4562:
	jmp LB_4560
LB_4563:
	sub rsp,8
	mov r8,[r8+8]
; .mov_ptn2 2'(= a26◂ [ a9◂ [ ]{| l |}] ) ⊢ 11'(= a26◂ [ a9◂ [ ]{| l |}] )
; .mov_ptn 2'(= a26◂ [ a9◂ [ ]{| l |}] ) ⊢ 11'(= a26◂ [ a9◂ [ ]{| l |}] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_4561
LB_4560:
	add rsp,24
	pop rdi
	pop r9 
	pop r14
	pop r13
	ret
LB_4561:
	mov QWORD [rsp+8*4],r14
	mov r13,QWORD [rsp+16+8*4]
	mov r14,QWORD [rsp+8*4]
	jmp LB_4565
LB_4565
;; rsp=4 , %2531~1'(= r ) %2530~0'(= r ) %2529~11'(= a26◂ [ a9◂ [ ]{| l |}] ) %2528~10'(= a35◂ [ a17◂ [ a9◂ [ ]{| l |}]] ) %2527~9'(= a8◂ [ a13◂ [ {| l |}]] ) %2526~8'(= a8◂ [ a13◂ [ {| l |}]] ) 
;; ? 10'(= a35◂ [ a17◂ [ a9◂ [ ]{| l |}]] ) ⊢ 0(<2)◂2'(= a17◂ [ a9◂ [ ]{| l |}] )
	mov rdi,QWORD [rsp-8+8*2]
	cmp BYTE [rdi+6],0
	jnz LB_4566
	mov rax,QWORD [rdi+8]
	mov r8,rax
;; rsp=4 , %2533~2'(= a17◂ [ a9◂ [ ]{| l |}] ) %2531~1'(= r ) %2530~0'(= r ) %2529~11'(= a26◂ [ a9◂ [ ]{| l |}] ) %2527~9'(= a8◂ [ a13◂ [ {| l |}]] ) %2526~8'(= a8◂ [ a13◂ [ {| l |}]] ) 
; #22 { 9'(= a8◂ [ a13◂ [ {| l |}]] ) 11'(= a26◂ [ a9◂ [ ]{| l |}] ) } ⊢ 0(<2)◂{ 9'(= a8◂ [ a13◂ [ {| l |}]] ) 11'(= a26◂ [ a9◂ [ ]{| l |}] ) }
;; rsp=4 , %2534~0(<2)◂{ 9'(= a8◂ [ a13◂ [ {| l |}]] ) 11'(= a26◂ [ a9◂ [ ]{| l |}] ) } %2533~2'(= a17◂ [ a9◂ [ ]{| l |}] ) %2531~1'(= r ) %2530~0'(= r ) %2526~8'(= a8◂ [ a13◂ [ {| l |}]] ) 
; #22 { 8'(= a8◂ [ a13◂ [ {| l |}]] ) 2'(= a17◂ [ a9◂ [ ]{| l |}] ) 0(<2)◂{ 9'(= a8◂ [ a13◂ [ {| l |}]] ) 11'(= a26◂ [ a9◂ [ ]{| l |}] ) } } ⊢ 0(<2)◂{ 8'(= a8◂ [ a13◂ [ {| l |}]] ) 2'(= a17◂ [ a9◂ [ ]{| l |}] ) 0(<2)◂{ 9'(= a8◂ [ a13◂ [ {| l |}]] ) 11'(= a26◂ [ a9◂ [ ]{| l |}] ) } }
;; rsp=4 , %2535~0(<2)◂{ 8'(= a8◂ [ a13◂ [ {| l |}]] ) 2'(= a17◂ [ a9◂ [ ]{| l |}] ) 0(<2)◂{ 9'(= a8◂ [ a13◂ [ {| l |}]] ) 11'(= a26◂ [ a9◂ [ ]{| l |}] ) } } %2531~1'(= r ) %2530~0'(= r ) 
; ∎ 0(<2)◂{ 8'(= a8◂ [ a13◂ [ {| l |}]] ) 2'(= a17◂ [ a9◂ [ ]{| l |}] ) 0(<2)◂{ 9'(= a8◂ [ a13◂ [ {| l |}]] ) 11'(= a26◂ [ a9◂ [ ]{| l |}] ) } }
; .dlt.ptn 1'(= r )
; .dlt.ptn 0'(= r )
; .mov_ptn2 0(<2)◂{ 8'(= a8◂ [ a13◂ [ {| l |}]] ) 2'(= a17◂ [ a9◂ [ ]{| l |}] ) 0(<2)◂{ 9'(= a8◂ [ a13◂ [ {| l |}]] ) 11'(= a26◂ [ a9◂ [ ]{| l |}] ) } } ⊢ 2'(= a3◂ [ *{ a8◂ [ a13◂ [ {| l |}]]a17◂ [ a9◂ [ ]{| l |}]a3◂ [ *{ a8◂ [ a13◂ [ {| l |}]]a26◂ [ a9◂ [ ]{| l |}]}]}] )
	mov r13,r8
; .mov_ptn 0(<2)◂{ 8'(= a8◂ [ a13◂ [ {| l |}]] ) 0'(= a17◂ [ a9◂ [ ]{| l |}] ) 0(<2)◂{ 9'(= a8◂ [ a13◂ [ {| l |}]] ) 11'(= a26◂ [ a9◂ [ ]{| l |}] ) } } ⊢ 2'(= a3◂ [ *{ a8◂ [ a13◂ [ {| l |}]]a17◂ [ a9◂ [ ]{| l |}]a3◂ [ *{ a8◂ [ a13◂ [ {| l |}]]a26◂ [ a9◂ [ ]{| l |}]}]}] )
	mov rax,[SS_RCD_3_TOP]
	mov rsi,[rax] 
	mov QWORD [SS_RCD_3_TOP],rsi
	mov QWORD [rax],0
	mov r14,rax
	mov rax,QWORD [rsp-8+8*4]
	mov QWORD [r14+8+8*0],rax
	mov rax,r13
	mov QWORD [r14+8+8*1],rax
	mov rax,[SS_RCD_2_TOP]
	mov rsi,[rax] 
	mov QWORD [SS_RCD_2_TOP],rsi
	mov QWORD [rax],0
	mov r9,rax
	mov rax,QWORD [rsp-8+8*3]
	mov QWORD [r9+8+8*0],rax
	mov rax,QWORD [rsp-8+8*1]
	mov QWORD [r9+8+8*1],rax
	mov rax,r9
	mov BYTE [rax+6],0
	mov QWORD [r14+8+8*2],rax
	mov rax,r14
	mov BYTE [rax+6],0
	mov r8,rax
	add rsp,32
	jmp LB_4564
LB_4566:
;; ?. 10'(= a35◂ [ a17◂ [ a9◂ [ ]{| l |}]] ) ⊢ 1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] )
	mov rax,QWORD [rdi+8]
	mov r8,rax
;; rsp=4 , %2532~2'(= a2◂ [ *{ rr{| l |}}] ) %2531~1'(= r ) %2530~0'(= r ) %2529~11'(= a26◂ [ a9◂ [ ]{| l |}] ) %2527~9'(= a8◂ [ a13◂ [ {| l |}]] ) %2526~8'(= a8◂ [ a13◂ [ {| l |}]] ) 
	jmp LB_4567
LB_4567:
; $ %[ "grm_etr_act_act 0" ] ⊢ %[ "grm_etr_act_act 0" ]
;; rsp=4 , %2536~%[ "grm_etr_act_act 0" ] %2532~2'(= a2◂ [ *{ rr{| l |}}] ) %2531~1'(= r ) %2530~0'(= r ) %2529~11'(= a26◂ [ a9◂ [ ]{| l |}] ) %2527~9'(= a8◂ [ a13◂ [ {| l |}]] ) %2526~8'(= a8◂ [ a13◂ [ {| l |}]] ) 
; _#8 %[ "grm_etr_act_act 0" ] ⊢ %[ "grm_etr_act_act 0" ]
	mov rdi,fmt_emt
	call emt_stg
	mov rdi,LB_4568
	call emt_stg 
	mov rdi,fmt_nl
	call emt_stg
	jmp LB_4569
LB_4569:
;; rsp=4 , %2537~%[ "grm_etr_act_act 0" ] %2532~2'(= a2◂ [ *{ rr{| l |}}] ) %2531~1'(= r ) %2530~0'(= r ) %2529~11'(= a26◂ [ a9◂ [ ]{| l |}] ) %2527~9'(= a8◂ [ a13◂ [ {| l |}]] ) %2526~8'(= a8◂ [ a13◂ [ {| l |}]] ) 
; _#8 { 0'(= r ) 1'(= r ) } ⊢ { 0'(= r ) 1'(= r ) }
	mov rdi,fmt_emt
	call emt_stg
	mov rdi,fmt_rcd_l 
	call emt_stg 
	C_PUSH_REGS
	mov r8,r13
	mov rdi,r8 
	call emt_r64 
	C_POP_REGS
	mov rdi,fmt_spc 
	call emt_stg 
	C_PUSH_REGS
	mov r8,r14
	mov rdi,r8 
	call emt_r64 
	C_POP_REGS
	mov rdi,fmt_spc 
	call emt_stg 
	mov rdi,fmt_rcd_r 
	call emt_stg 
	mov rdi,fmt_nl
	call emt_stg
	jmp LB_4570
LB_4570:
;; rsp=4 , %2538~{ 0'(= r ) 1'(= r ) } %2537~%[ "grm_etr_act_act 0" ] %2532~2'(= a2◂ [ *{ rr{| l |}}] ) %2529~11'(= a26◂ [ a9◂ [ ]{| l |}] ) %2527~9'(= a8◂ [ a13◂ [ {| l |}]] ) %2526~8'(= a8◂ [ a13◂ [ {| l |}]] ) 
	mov rdi,LB_4571
	call emt_stg 
	jmp err
LB_4564:
	cmp BYTE [r8+6],0
	jnz LB_4508
	pop r14
	pop r9
	add rsp,8
	pop r13
	ret
LB_4508:
	mov r9,QWORD [rsp+8]
	mov r14,QWORD [rsp+16]
	mov r13,QWORD [rsp+24]
	jmp LB_4574
LB_4573:
	add r14,1 
LB_4574:
	cmp r14,r9
	jge LB_4575
	JZ_SPC BYTE [r13+8+r14], LB_4573
LB_4575
	lea rax,[r14+3]
	cmp rax,r9
	jg LB_4578
	jmp LB_4579
LB_4578:
	mov r8,unt_1
	jmp LB_4576
LB_4579:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],226
	jnz LB_4580
	cmp BYTE [rdi+1],138
	jnz LB_4580
	cmp BYTE [rdi+2],162
	jnz LB_4580
	jmp LB_4581
LB_4580:
	mov r8,unt_1
	jmp LB_4576
LB_4581:
	add r14,3
	jmp LB_4577
LB_4576:
	add rsp,0
	jmp LB_4572
LB_4577:
	jmp LB_4583
LB_4582:
	add r14,1 
LB_4583:
	cmp r14,r9
	jge LB_4584
	JZ_SPC BYTE [r13+8+r14], LB_4582
LB_4584
	call GRM_205
	cmp BYTE [r8+6],0
	jnz LB_4587
	jmp LB_4588
LB_4587:
	jmp LB_4585
LB_4588:
	sub rsp,8
	mov r8,[r8+8]
; .mov_ptn2 2'(= a8◂ [ a13◂ [ {| l |}]] ) ⊢ 8'(= a8◂ [ a13◂ [ {| l |}]] )
; .mov_ptn 2'(= a8◂ [ a13◂ [ {| l |}]] ) ⊢ 8'(= a8◂ [ a13◂ [ {| l |}]] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_4586
LB_4585:
	add rsp,0
	pop rdi
	pop r9 
	pop r14
	pop r13
	ret
LB_4586:
	jmp LB_4590
LB_4589:
	add r14,1 
LB_4590:
	cmp r14,r9
	jge LB_4591
	JZ_SPC BYTE [r13+8+r14], LB_4589
LB_4591
	call GRM_234
	cmp BYTE [r8+6],0
	jnz LB_4594
	jmp LB_4595
LB_4594:
	jmp LB_4592
LB_4595:
	sub rsp,8
	mov r8,[r8+8]
; .mov_ptn2 2'(= a35◂ [ a17◂ [ a9◂ [ ]{| l |}]] ) ⊢ 9'(= a35◂ [ a17◂ [ a9◂ [ ]{| l |}]] )
; .mov_ptn 2'(= a35◂ [ a17◂ [ a9◂ [ ]{| l |}]] ) ⊢ 9'(= a35◂ [ a17◂ [ a9◂ [ ]{| l |}]] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_4593
LB_4592:
	add rsp,8
	pop rdi
	pop r9 
	pop r14
	pop r13
	ret
LB_4593:
	mov QWORD [rsp+8*2],r14
	mov r13,QWORD [rsp+16+8*2]
	mov r14,QWORD [rsp+8*2]
	jmp LB_4597
LB_4597
;; rsp=2 , %2542~1'(= r ) %2541~0'(= r ) %2540~9'(= a35◂ [ a17◂ [ a9◂ [ ]{| l |}]] ) %2539~8'(= a8◂ [ a13◂ [ {| l |}]] ) 
;; ? 9'(= a35◂ [ a17◂ [ a9◂ [ ]{| l |}]] ) ⊢ 0(<2)◂2'(= a17◂ [ a9◂ [ ]{| l |}] )
	mov rdi,QWORD [rsp-8+8*1]
	cmp BYTE [rdi+6],0
	jnz LB_4598
	mov rax,QWORD [rdi+8]
	mov r8,rax
;; rsp=2 , %2544~2'(= a17◂ [ a9◂ [ ]{| l |}] ) %2542~1'(= r ) %2541~0'(= r ) %2539~8'(= a8◂ [ a13◂ [ {| l |}]] ) 
; #23 { } ⊢ 1(<2)◂{ }
;; rsp=2 , %2545~1(<2)◂{ } %2544~2'(= a17◂ [ a9◂ [ ]{| l |}] ) %2542~1'(= r ) %2541~0'(= r ) %2539~8'(= a8◂ [ a13◂ [ {| l |}]] ) 
; #22 { 8'(= a8◂ [ a13◂ [ {| l |}]] ) 2'(= a17◂ [ a9◂ [ ]{| l |}] ) 1(<2)◂{ } } ⊢ 0(<2)◂{ 8'(= a8◂ [ a13◂ [ {| l |}]] ) 2'(= a17◂ [ a9◂ [ ]{| l |}] ) 1(<2)◂{ } }
;; rsp=2 , %2546~0(<2)◂{ 8'(= a8◂ [ a13◂ [ {| l |}]] ) 2'(= a17◂ [ a9◂ [ ]{| l |}] ) 1(<2)◂{ } } %2542~1'(= r ) %2541~0'(= r ) 
; ∎ 0(<2)◂{ 8'(= a8◂ [ a13◂ [ {| l |}]] ) 2'(= a17◂ [ a9◂ [ ]{| l |}] ) 1(<2)◂{ } }
; .dlt.ptn 1'(= r )
; .dlt.ptn 0'(= r )
; .mov_ptn2 0(<2)◂{ 8'(= a8◂ [ a13◂ [ {| l |}]] ) 2'(= a17◂ [ a9◂ [ ]{| l |}] ) 1(<2)◂{ } } ⊢ 2'(= a3◂ [ *{ a8◂ [ a13◂ [ {| l |}]]a17◂ [ a9◂ [ ]{| l |}]a3◂ [ *{ a8◂ [ a13◂ [ {| l |}]]a26◂ [ a9◂ [ ]{| l |}]}]}] )
	mov r13,r8
; .mov_ptn 0(<2)◂{ 8'(= a8◂ [ a13◂ [ {| l |}]] ) 0'(= a17◂ [ a9◂ [ ]{| l |}] ) 1(<2)◂{ } } ⊢ 2'(= a3◂ [ *{ a8◂ [ a13◂ [ {| l |}]]a17◂ [ a9◂ [ ]{| l |}]a3◂ [ *{ a8◂ [ a13◂ [ {| l |}]]a26◂ [ a9◂ [ ]{| l |}]}]}] )
	mov rax,[SS_RCD_3_TOP]
	mov rsi,[rax] 
	mov QWORD [SS_RCD_3_TOP],rsi
	mov QWORD [rax],0
	mov r14,rax
	mov rax,QWORD [rsp-8+8*2]
	mov QWORD [r14+8+8*0],rax
	mov rax,r13
	mov QWORD [r14+8+8*1],rax
	mov rax,unt 
	mov rax,unt_1
	mov QWORD [r14+8+8*2],rax
	mov rax,r14
	mov BYTE [rax+6],0
	mov r8,rax
	add rsp,16
	jmp LB_4596
LB_4598:
;; ?. 9'(= a35◂ [ a17◂ [ a9◂ [ ]{| l |}]] ) ⊢ 1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] )
	mov rax,QWORD [rdi+8]
	mov r8,rax
;; rsp=2 , %2543~2'(= a2◂ [ *{ rr{| l |}}] ) %2542~1'(= r ) %2541~0'(= r ) %2539~8'(= a8◂ [ a13◂ [ {| l |}]] ) 
	jmp LB_4599
LB_4599:
; $ %[ "grm_etr_act_act 1" ] ⊢ %[ "grm_etr_act_act 1" ]
;; rsp=2 , %2547~%[ "grm_etr_act_act 1" ] %2543~2'(= a2◂ [ *{ rr{| l |}}] ) %2542~1'(= r ) %2541~0'(= r ) %2539~8'(= a8◂ [ a13◂ [ {| l |}]] ) 
; _#8 %[ "grm_etr_act_act 1" ] ⊢ %[ "grm_etr_act_act 1" ]
	mov rdi,fmt_emt
	call emt_stg
	mov rdi,LB_4600
	call emt_stg 
	mov rdi,fmt_nl
	call emt_stg
	jmp LB_4601
LB_4601:
;; rsp=2 , %2548~%[ "grm_etr_act_act 1" ] %2543~2'(= a2◂ [ *{ rr{| l |}}] ) %2542~1'(= r ) %2541~0'(= r ) %2539~8'(= a8◂ [ a13◂ [ {| l |}]] ) 
; _#8 { 0'(= r ) 1'(= r ) } ⊢ { 0'(= r ) 1'(= r ) }
	mov rdi,fmt_emt
	call emt_stg
	mov rdi,fmt_rcd_l 
	call emt_stg 
	C_PUSH_REGS
	mov r8,r13
	mov rdi,r8 
	call emt_r64 
	C_POP_REGS
	mov rdi,fmt_spc 
	call emt_stg 
	C_PUSH_REGS
	mov r8,r14
	mov rdi,r8 
	call emt_r64 
	C_POP_REGS
	mov rdi,fmt_spc 
	call emt_stg 
	mov rdi,fmt_rcd_r 
	call emt_stg 
	mov rdi,fmt_nl
	call emt_stg
	jmp LB_4602
LB_4602:
;; rsp=2 , %2549~{ 0'(= r ) 1'(= r ) } %2548~%[ "grm_etr_act_act 1" ] %2543~2'(= a2◂ [ *{ rr{| l |}}] ) %2539~8'(= a8◂ [ a13◂ [ {| l |}]] ) 
	mov rdi,LB_4603
	call emt_stg 
	jmp err
LB_4596:
	cmp BYTE [r8+6],0
	jnz LB_4572
	pop r14
	pop r9
	add rsp,8
	pop r13
	ret
LB_4572:
	pop rdi
	pop r9 
	pop r14
	pop r13
	ret
ETR_264:
	mov r9,0x0000_ffff_ffff_ffff
	and r9,[r13]
	call GRM_264
	ret
GRM_264:
	sub rsp,32
	mov QWORD [rsp+24],r13
	mov QWORD [rsp+16],r14 
	mov QWORD [rsp+8],r9
	jmp LB_4606
LB_4605:
	add r14,1 
LB_4606:
	cmp r14,r9
	jge LB_4607
	JZ_SPC BYTE [r13+8+r14], LB_4605
LB_4607
	lea rax,[r14+2]
	cmp rax,r9
	jg LB_4610
	jmp LB_4611
LB_4610:
	mov r8,unt_1
	jmp LB_4608
LB_4611:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],33
	jnz LB_4612
	cmp BYTE [rdi+1],124
	jnz LB_4612
	jmp LB_4613
LB_4612:
	mov r8,unt_1
	jmp LB_4608
LB_4613:
	add r14,2
	jmp LB_4609
LB_4608:
	add rsp,0
	jmp LB_4604
LB_4609:
	jmp LB_4615
LB_4614:
	add r14,1 
LB_4615:
	cmp r14,r9
	jge LB_4616
	JZ_SPC BYTE [r13+8+r14], LB_4614
LB_4616
	call GRM_265
	cmp BYTE [r8+6],0
	jnz LB_4619
	jmp LB_4620
LB_4619:
	jmp LB_4617
LB_4620:
	sub rsp,8
	mov r8,[r8+8]
; .mov_ptn2 2'(= a2◂ [ a29◂ [ a9◂ [ ]]] ) ⊢ 8'(= a2◂ [ a29◂ [ a9◂ [ ]]] )
; .mov_ptn 2'(= a2◂ [ a29◂ [ a9◂ [ ]]] ) ⊢ 8'(= a2◂ [ a29◂ [ a9◂ [ ]]] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_4618
LB_4617:
	add rsp,0
	pop rdi
	pop r9 
	pop r14
	pop r13
	ret
LB_4618:
	mov QWORD [rsp+8*1],r14
	mov r13,QWORD [rsp+16+8*1]
	mov r14,QWORD [rsp+8*1]
	jmp LB_4622
LB_4622
;; rsp=1 , %2552~1'(= r ) %2551~0'(= r ) %2550~8'(= a2◂ [ a29◂ [ a9◂ [ ]]] ) 
; #147 8'(= a2◂ [ a29◂ [ a9◂ [ ]]] ) ⊢ 0(<3)◂8'(= a2◂ [ a29◂ [ a9◂ [ ]]] )
;; rsp=1 , %2553~0(<3)◂8'(= a2◂ [ a29◂ [ a9◂ [ ]]] ) %2552~1'(= r ) %2551~0'(= r ) 
; #22 0(<3)◂8'(= a2◂ [ a29◂ [ a9◂ [ ]]] ) ⊢ 0(<2)◂0(<3)◂8'(= a2◂ [ a29◂ [ a9◂ [ ]]] )
;; rsp=1 , %2554~0(<2)◂0(<3)◂8'(= a2◂ [ a29◂ [ a9◂ [ ]]] ) %2552~1'(= r ) %2551~0'(= r ) 
; ∎ 0(<2)◂0(<3)◂8'(= a2◂ [ a29◂ [ a9◂ [ ]]] )
; .dlt.ptn 1'(= r )
; .dlt.ptn 0'(= r )
; .mov_ptn2 0(<2)◂0(<3)◂8'(= a2◂ [ a29◂ [ a9◂ [ ]]] ) ⊢ 2'(= a3◂ [ a28◂ [ a9◂ [ ]]] )
; .mov_ptn 0(<2)◂0(<3)◂8'(= a2◂ [ a29◂ [ a9◂ [ ]]] ) ⊢ 2'(= a3◂ [ a28◂ [ a9◂ [ ]]] )
	mov rax,QWORD [rsp-8+8*1]
	mov rdi,rax
	mov rax,r15
	mov r15,QWORD [r15] 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov rdi,rax
	mov rax,r15
	mov r15,QWORD [r15] 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,8
	jmp LB_4621
LB_4621:
	cmp BYTE [r8+6],0
	jnz LB_4604
	pop r14
	pop r9
	add rsp,8
	pop r13
	ret
LB_4604:
	mov r9,QWORD [rsp+8]
	mov r14,QWORD [rsp+16]
	mov r13,QWORD [rsp+24]
	jmp LB_4625
LB_4624:
	add r14,1 
LB_4625:
	cmp r14,r9
	jge LB_4626
	JZ_SPC BYTE [r13+8+r14], LB_4624
LB_4626
	call GRM_266
	cmp BYTE [r8+6],0
	jnz LB_4629
	jmp LB_4630
LB_4629:
	jmp LB_4627
LB_4630:
	sub rsp,8
	mov r8,[r8+8]
; .mov_ptn2 2'(= a29◂ [ a9◂ [ ]] ) ⊢ 8'(= a29◂ [ a9◂ [ ]] )
; .mov_ptn 2'(= a29◂ [ a9◂ [ ]] ) ⊢ 8'(= a29◂ [ a9◂ [ ]] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_4628
LB_4627:
	add rsp,0
	jmp LB_4623
LB_4628:
	jmp LB_4632
LB_4631:
	add r14,1 
LB_4632:
	cmp r14,r9
	jge LB_4633
	JZ_SPC BYTE [r13+8+r14], LB_4631
LB_4633
	call GRM_264
	cmp BYTE [r8+6],0
	jnz LB_4636
	jmp LB_4637
LB_4636:
	jmp LB_4634
LB_4637:
	sub rsp,8
	mov r8,[r8+8]
; .mov_ptn2 2'(= a28◂ [ a9◂ [ ]] ) ⊢ 9'(= a28◂ [ a9◂ [ ]] )
; .mov_ptn 2'(= a28◂ [ a9◂ [ ]] ) ⊢ 9'(= a28◂ [ a9◂ [ ]] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_4635
LB_4634:
	add rsp,8
	jmp LB_4623
LB_4635:
	mov QWORD [rsp+8*2],r14
	mov r13,QWORD [rsp+16+8*2]
	mov r14,QWORD [rsp+8*2]
	jmp LB_4639
LB_4639
;; rsp=2 , %2558~1'(= r ) %2557~0'(= r ) %2556~9'(= a28◂ [ a9◂ [ ]] ) %2555~8'(= a29◂ [ a9◂ [ ]] ) 
; #146 { 8'(= a29◂ [ a9◂ [ ]] ) 9'(= a28◂ [ a9◂ [ ]] ) } ⊢ 1(<3)◂{ 8'(= a29◂ [ a9◂ [ ]] ) 9'(= a28◂ [ a9◂ [ ]] ) }
;; rsp=2 , %2559~1(<3)◂{ 8'(= a29◂ [ a9◂ [ ]] ) 9'(= a28◂ [ a9◂ [ ]] ) } %2558~1'(= r ) %2557~0'(= r ) 
; #22 1(<3)◂{ 8'(= a29◂ [ a9◂ [ ]] ) 9'(= a28◂ [ a9◂ [ ]] ) } ⊢ 0(<2)◂1(<3)◂{ 8'(= a29◂ [ a9◂ [ ]] ) 9'(= a28◂ [ a9◂ [ ]] ) }
;; rsp=2 , %2560~0(<2)◂1(<3)◂{ 8'(= a29◂ [ a9◂ [ ]] ) 9'(= a28◂ [ a9◂ [ ]] ) } %2558~1'(= r ) %2557~0'(= r ) 
; ∎ 0(<2)◂1(<3)◂{ 8'(= a29◂ [ a9◂ [ ]] ) 9'(= a28◂ [ a9◂ [ ]] ) }
; .dlt.ptn 1'(= r )
; .dlt.ptn 0'(= r )
; .mov_ptn2 0(<2)◂1(<3)◂{ 8'(= a29◂ [ a9◂ [ ]] ) 9'(= a28◂ [ a9◂ [ ]] ) } ⊢ 2'(= a3◂ [ a28◂ [ a9◂ [ ]]] )
; .mov_ptn 0(<2)◂1(<3)◂{ 8'(= a29◂ [ a9◂ [ ]] ) 9'(= a28◂ [ a9◂ [ ]] ) } ⊢ 2'(= a3◂ [ a28◂ [ a9◂ [ ]]] )
	mov rax,[SS_RCD_2_TOP]
	mov rsi,[rax] 
	mov QWORD [SS_RCD_2_TOP],rsi
	mov QWORD [rax],0
	mov r13,rax
	mov rax,QWORD [rsp-8+8*2]
	mov QWORD [r13+8+8*0],rax
	mov rax,QWORD [rsp-8+8*1]
	mov QWORD [r13+8+8*1],rax
	mov rax,r13
	mov BYTE [rax+6],1
	mov rdi,rax
	mov rax,r15
	mov r15,QWORD [r15] 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,16
	jmp LB_4638
LB_4638:
	cmp BYTE [r8+6],0
	jnz LB_4623
	pop r14
	pop r9
	add rsp,8
	pop r13
	ret
LB_4623:
	mov r9,QWORD [rsp+8]
	mov r14,QWORD [rsp+16]
	mov r13,QWORD [rsp+24]
	mov QWORD [rsp+8*0],r14
	mov r13,QWORD [rsp+16+8*0]
	mov r14,QWORD [rsp+8*0]
	jmp LB_4642
LB_4642
;; rsp=0 , %2562~1'(= r ) %2561~0'(= r ) 
; #145 { } ⊢ 2(<3)◂{ }
;; rsp=0 , %2563~2(<3)◂{ } %2562~1'(= r ) %2561~0'(= r ) 
; #22 2(<3)◂{ } ⊢ 0(<2)◂2(<3)◂{ }
;; rsp=0 , %2564~0(<2)◂2(<3)◂{ } %2562~1'(= r ) %2561~0'(= r ) 
; ∎ 0(<2)◂2(<3)◂{ }
; .dlt.ptn 1'(= r )
; .dlt.ptn 0'(= r )
; .mov_ptn2 0(<2)◂2(<3)◂{ } ⊢ 2'(= a3◂ [ a28◂ [ a9◂ [ ]]] )
; .mov_ptn 0(<2)◂2(<3)◂{ } ⊢ 2'(= a3◂ [ a28◂ [ a9◂ [ ]]] )
	mov rax,unt 
	mov rax,unt_2
	mov rdi,rax
	mov rax,r15
	mov r15,QWORD [r15] 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	jmp LB_4641
LB_4641:
	cmp BYTE [r8+6],0
	jnz LB_4640
	pop r14
	pop r9
	add rsp,8
	pop r13
	ret
LB_4640:
	pop rdi
	pop r9 
	pop r14
	pop r13
	ret
ETR_265:
	mov r9,0x0000_ffff_ffff_ffff
	and r9,[r13]
	call GRM_265
	ret
GRM_265:
	sub rsp,32
	mov QWORD [rsp+24],r13
	mov QWORD [rsp+16],r14 
	mov QWORD [rsp+8],r9
	jmp LB_4645
LB_4644:
	add r14,1 
LB_4645:
	cmp r14,r9
	jge LB_4646
	JZ_SPC BYTE [r13+8+r14], LB_4644
LB_4646
	call GRM_266
	cmp BYTE [r8+6],0
	jnz LB_4649
	jmp LB_4650
LB_4649:
	jmp LB_4647
LB_4650:
	sub rsp,8
	mov r8,[r8+8]
; .mov_ptn2 2'(= a29◂ [ a9◂ [ ]] ) ⊢ 8'(= a29◂ [ a9◂ [ ]] )
; .mov_ptn 2'(= a29◂ [ a9◂ [ ]] ) ⊢ 8'(= a29◂ [ a9◂ [ ]] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_4648
LB_4647:
	add rsp,0
	jmp LB_4643
LB_4648:
	jmp LB_4652
LB_4651:
	add r14,1 
LB_4652:
	cmp r14,r9
	jge LB_4653
	JZ_SPC BYTE [r13+8+r14], LB_4651
LB_4653
	call GRM_265
	cmp BYTE [r8+6],0
	jnz LB_4656
	jmp LB_4657
LB_4656:
	jmp LB_4654
LB_4657:
	sub rsp,8
	mov r8,[r8+8]
; .mov_ptn2 2'(= a2◂ [ a29◂ [ a9◂ [ ]]] ) ⊢ 9'(= a2◂ [ a29◂ [ a9◂ [ ]]] )
; .mov_ptn 2'(= a2◂ [ a29◂ [ a9◂ [ ]]] ) ⊢ 9'(= a2◂ [ a29◂ [ a9◂ [ ]]] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_4655
LB_4654:
	add rsp,8
	jmp LB_4643
LB_4655:
	mov QWORD [rsp+8*2],r14
	mov r13,QWORD [rsp+16+8*2]
	mov r14,QWORD [rsp+8*2]
	jmp LB_4659
LB_4659
;; rsp=2 , %2568~1'(= r ) %2567~0'(= r ) %2566~9'(= a2◂ [ a29◂ [ a9◂ [ ]]] ) %2565~8'(= a29◂ [ a9◂ [ ]] ) 
; #21 { 8'(= a29◂ [ a9◂ [ ]] ) 9'(= a2◂ [ a29◂ [ a9◂ [ ]]] ) } ⊢ 0(<2)◂{ 8'(= a29◂ [ a9◂ [ ]] ) 9'(= a2◂ [ a29◂ [ a9◂ [ ]]] ) }
;; rsp=2 , %2569~0(<2)◂{ 8'(= a29◂ [ a9◂ [ ]] ) 9'(= a2◂ [ a29◂ [ a9◂ [ ]]] ) } %2568~1'(= r ) %2567~0'(= r ) 
; #22 0(<2)◂{ 8'(= a29◂ [ a9◂ [ ]] ) 9'(= a2◂ [ a29◂ [ a9◂ [ ]]] ) } ⊢ 0(<2)◂0(<2)◂{ 8'(= a29◂ [ a9◂ [ ]] ) 9'(= a2◂ [ a29◂ [ a9◂ [ ]]] ) }
;; rsp=2 , %2570~0(<2)◂0(<2)◂{ 8'(= a29◂ [ a9◂ [ ]] ) 9'(= a2◂ [ a29◂ [ a9◂ [ ]]] ) } %2568~1'(= r ) %2567~0'(= r ) 
; ∎ 0(<2)◂0(<2)◂{ 8'(= a29◂ [ a9◂ [ ]] ) 9'(= a2◂ [ a29◂ [ a9◂ [ ]]] ) }
; .dlt.ptn 1'(= r )
; .dlt.ptn 0'(= r )
; .mov_ptn2 0(<2)◂0(<2)◂{ 8'(= a29◂ [ a9◂ [ ]] ) 9'(= a2◂ [ a29◂ [ a9◂ [ ]]] ) } ⊢ 2'(= a3◂ [ a2◂ [ a29◂ [ a9◂ [ ]]]] )
; .mov_ptn 0(<2)◂0(<2)◂{ 8'(= a29◂ [ a9◂ [ ]] ) 9'(= a2◂ [ a29◂ [ a9◂ [ ]]] ) } ⊢ 2'(= a3◂ [ a2◂ [ a29◂ [ a9◂ [ ]]]] )
	mov rax,[SS_RCD_2_TOP]
	mov rsi,[rax] 
	mov QWORD [SS_RCD_2_TOP],rsi
	mov QWORD [rax],0
	mov r13,rax
	mov rax,QWORD [rsp-8+8*2]
	mov QWORD [r13+8+8*0],rax
	mov rax,QWORD [rsp-8+8*1]
	mov QWORD [r13+8+8*1],rax
	mov rax,r13
	mov BYTE [rax+6],0
	mov rdi,rax
	mov rax,r15
	mov r15,QWORD [r15] 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,16
	jmp LB_4658
LB_4658:
	cmp BYTE [r8+6],0
	jnz LB_4643
	pop r14
	pop r9
	add rsp,8
	pop r13
	ret
LB_4643:
	mov r9,QWORD [rsp+8]
	mov r14,QWORD [rsp+16]
	mov r13,QWORD [rsp+24]
	mov QWORD [rsp+8*0],r14
	mov r13,QWORD [rsp+16+8*0]
	mov r14,QWORD [rsp+8*0]
	jmp LB_4662
LB_4662
;; rsp=0 , %2572~1'(= r ) %2571~0'(= r ) 
; #20 { } ⊢ 1(<2)◂{ }
;; rsp=0 , %2573~1(<2)◂{ } %2572~1'(= r ) %2571~0'(= r ) 
; #22 1(<2)◂{ } ⊢ 0(<2)◂1(<2)◂{ }
;; rsp=0 , %2574~0(<2)◂1(<2)◂{ } %2572~1'(= r ) %2571~0'(= r ) 
; ∎ 0(<2)◂1(<2)◂{ }
; .dlt.ptn 1'(= r )
; .dlt.ptn 0'(= r )
; .mov_ptn2 0(<2)◂1(<2)◂{ } ⊢ 2'(= a3◂ [ a2◂ [ a29◂ [ a9◂ [ ]]]] )
; .mov_ptn 0(<2)◂1(<2)◂{ } ⊢ 2'(= a3◂ [ a2◂ [ a29◂ [ a9◂ [ ]]]] )
	mov rax,unt 
	mov rax,unt_1
	mov rdi,rax
	mov rax,r15
	mov r15,QWORD [r15] 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	jmp LB_4661
LB_4661:
	cmp BYTE [r8+6],0
	jnz LB_4660
	pop r14
	pop r9
	add rsp,8
	pop r13
	ret
LB_4660:
	pop rdi
	pop r9 
	pop r14
	pop r13
	ret
ETR_266:
	mov r9,0x0000_ffff_ffff_ffff
	and r9,[r13]
	call GRM_266
	ret
GRM_266:
	sub rsp,32
	mov QWORD [rsp+24],r13
	mov QWORD [rsp+16],r14 
	mov QWORD [rsp+8],r9
	jmp LB_4665
LB_4664:
	add r14,1 
LB_4665:
	cmp r14,r9
	jge LB_4666
	JZ_SPC BYTE [r13+8+r14], LB_4664
LB_4666
	lea rax,[r14+3]
	cmp rax,r9
	jg LB_4669
	jmp LB_4670
LB_4669:
	mov r8,unt_1
	jmp LB_4667
LB_4670:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],226
	jnz LB_4671
	cmp BYTE [rdi+1],159
	jnz LB_4671
	cmp BYTE [rdi+2],166
	jnz LB_4671
	jmp LB_4672
LB_4671:
	mov r8,unt_1
	jmp LB_4667
LB_4672:
	add r14,3
	jmp LB_4668
LB_4667:
	add rsp,0
	jmp LB_4663
LB_4668:
	jmp LB_4674
LB_4673:
	add r14,1 
LB_4674:
	cmp r14,r9
	jge LB_4675
	JZ_SPC BYTE [r13+8+r14], LB_4673
LB_4675
	call GRM_267
	cmp BYTE [r8+6],0
	jnz LB_4678
	jmp LB_4679
LB_4678:
	jmp LB_4676
LB_4679:
	sub rsp,8
	mov r8,[r8+8]
; .mov_ptn2 2'(= a30◂ [ a9◂ [ ]] ) ⊢ 8'(= a30◂ [ a9◂ [ ]] )
; .mov_ptn 2'(= a30◂ [ a9◂ [ ]] ) ⊢ 8'(= a30◂ [ a9◂ [ ]] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_4677
LB_4676:
	add rsp,0
	jmp LB_4663
LB_4677:
	jmp LB_4681
LB_4680:
	add r14,1 
LB_4681:
	cmp r14,r9
	jge LB_4682
	JZ_SPC BYTE [r13+8+r14], LB_4680
LB_4682
	lea rax,[r14+3]
	cmp rax,r9
	jg LB_4685
	jmp LB_4686
LB_4685:
	mov r8,unt_1
	jmp LB_4683
LB_4686:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],226
	jnz LB_4687
	cmp BYTE [rdi+1],159
	jnz LB_4687
	cmp BYTE [rdi+2],167
	jnz LB_4687
	jmp LB_4688
LB_4687:
	mov r8,unt_1
	jmp LB_4683
LB_4688:
	add r14,3
	jmp LB_4684
LB_4683:
	add rsp,8
	jmp LB_4663
LB_4684:
	mov QWORD [rsp+8*1],r14
	mov r13,QWORD [rsp+16+8*1]
	mov r14,QWORD [rsp+8*1]
	jmp LB_4690
LB_4690
;; rsp=1 , %2577~1'(= r ) %2576~0'(= r ) %2575~8'(= a30◂ [ a9◂ [ ]] ) 
; #144 8'(= a30◂ [ a9◂ [ ]] ) ⊢ 0(<2)◂8'(= a30◂ [ a9◂ [ ]] )
;; rsp=1 , %2578~0(<2)◂8'(= a30◂ [ a9◂ [ ]] ) %2577~1'(= r ) %2576~0'(= r ) 
; #22 0(<2)◂8'(= a30◂ [ a9◂ [ ]] ) ⊢ 0(<2)◂0(<2)◂8'(= a30◂ [ a9◂ [ ]] )
;; rsp=1 , %2579~0(<2)◂0(<2)◂8'(= a30◂ [ a9◂ [ ]] ) %2577~1'(= r ) %2576~0'(= r ) 
; ∎ 0(<2)◂0(<2)◂8'(= a30◂ [ a9◂ [ ]] )
; .dlt.ptn 1'(= r )
; .dlt.ptn 0'(= r )
; .mov_ptn2 0(<2)◂0(<2)◂8'(= a30◂ [ a9◂ [ ]] ) ⊢ 2'(= a3◂ [ a29◂ [ a9◂ [ ]]] )
; .mov_ptn 0(<2)◂0(<2)◂8'(= a30◂ [ a9◂ [ ]] ) ⊢ 2'(= a3◂ [ a29◂ [ a9◂ [ ]]] )
	mov rax,QWORD [rsp-8+8*1]
	mov rdi,rax
	mov rax,r15
	mov r15,QWORD [r15] 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov rdi,rax
	mov rax,r15
	mov r15,QWORD [r15] 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,8
	jmp LB_4689
LB_4689:
	cmp BYTE [r8+6],0
	jnz LB_4663
	pop r14
	pop r9
	add rsp,8
	pop r13
	ret
LB_4663:
	mov r9,QWORD [rsp+8]
	mov r14,QWORD [rsp+16]
	mov r13,QWORD [rsp+24]
	jmp LB_4693
LB_4692:
	add r14,1 
LB_4693:
	cmp r14,r9
	jge LB_4694
	JZ_SPC BYTE [r13+8+r14], LB_4692
LB_4694
	call GRM_267
	cmp BYTE [r8+6],0
	jnz LB_4697
	jmp LB_4698
LB_4697:
	jmp LB_4695
LB_4698:
	sub rsp,8
	mov r8,[r8+8]
; .mov_ptn2 2'(= a30◂ [ a9◂ [ ]] ) ⊢ 8'(= a30◂ [ a9◂ [ ]] )
; .mov_ptn 2'(= a30◂ [ a9◂ [ ]] ) ⊢ 8'(= a30◂ [ a9◂ [ ]] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_4696
LB_4695:
	add rsp,0
	jmp LB_4691
LB_4696:
	mov QWORD [rsp+8*1],r14
	mov r13,QWORD [rsp+16+8*1]
	mov r14,QWORD [rsp+8*1]
	jmp LB_4700
LB_4700
;; rsp=1 , %2582~1'(= r ) %2581~0'(= r ) %2580~8'(= a30◂ [ a9◂ [ ]] ) 
; #143 8'(= a30◂ [ a9◂ [ ]] ) ⊢ 1(<2)◂8'(= a30◂ [ a9◂ [ ]] )
;; rsp=1 , %2583~1(<2)◂8'(= a30◂ [ a9◂ [ ]] ) %2582~1'(= r ) %2581~0'(= r ) 
; #22 1(<2)◂8'(= a30◂ [ a9◂ [ ]] ) ⊢ 0(<2)◂1(<2)◂8'(= a30◂ [ a9◂ [ ]] )
;; rsp=1 , %2584~0(<2)◂1(<2)◂8'(= a30◂ [ a9◂ [ ]] ) %2582~1'(= r ) %2581~0'(= r ) 
; ∎ 0(<2)◂1(<2)◂8'(= a30◂ [ a9◂ [ ]] )
; .dlt.ptn 1'(= r )
; .dlt.ptn 0'(= r )
; .mov_ptn2 0(<2)◂1(<2)◂8'(= a30◂ [ a9◂ [ ]] ) ⊢ 2'(= a3◂ [ a29◂ [ a9◂ [ ]]] )
; .mov_ptn 0(<2)◂1(<2)◂8'(= a30◂ [ a9◂ [ ]] ) ⊢ 2'(= a3◂ [ a29◂ [ a9◂ [ ]]] )
	mov rax,QWORD [rsp-8+8*1]
	mov rdi,rax
	mov rax,r15
	mov r15,QWORD [r15] 
	mov QWORD [rax],0
	mov BYTE [rax+6],1
	mov QWORD [rax+8],rdi
	mov rdi,rax
	mov rax,r15
	mov r15,QWORD [r15] 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,8
	jmp LB_4699
LB_4699:
	cmp BYTE [r8+6],0
	jnz LB_4691
	pop r14
	pop r9
	add rsp,8
	pop r13
	ret
LB_4691:
	pop rdi
	pop r9 
	pop r14
	pop r13
	ret
ETR_267:
	mov r9,0x0000_ffff_ffff_ffff
	and r9,[r13]
	call GRM_267
	ret
GRM_267:
	sub rsp,32
	mov QWORD [rsp+24],r13
	mov QWORD [rsp+16],r14 
	mov QWORD [rsp+8],r9
	jmp LB_4703
LB_4702:
	add r14,1 
LB_4703:
	cmp r14,r9
	jge LB_4704
	JZ_SPC BYTE [r13+8+r14], LB_4702
LB_4704
	call GRM_67
	cmp BYTE [r8+6],0
	jnz LB_4707
	jmp LB_4708
LB_4707:
	jmp LB_4705
LB_4708:
	sub rsp,8
; .mov_ptn2 2'(= {| l |} ) ⊢ 8'(= {| l |} )
; .mov_ptn 2'(= {| l |} ) ⊢ 8'(= {| l |} )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_4706
LB_4705:
	add rsp,0
	jmp LB_4701
LB_4706:
	mov QWORD [rsp+8*1],r14
	mov r13,QWORD [rsp+16+8*1]
	mov r14,QWORD [rsp+8*1]
	jmp LB_4710
LB_4710
;; rsp=1 , %2587~1'(= r ) %2586~0'(= r ) %2585~8'(= {| l |} ) 
; #141 8'(= {| l |} ) ⊢ 1(<2)◂8'(= {| l |} )
;; rsp=1 , %2588~1(<2)◂8'(= {| l |} ) %2587~1'(= r ) %2586~0'(= r ) 
; #22 1(<2)◂8'(= {| l |} ) ⊢ 0(<2)◂1(<2)◂8'(= {| l |} )
;; rsp=1 , %2589~0(<2)◂1(<2)◂8'(= {| l |} ) %2587~1'(= r ) %2586~0'(= r ) 
; ∎ 0(<2)◂1(<2)◂8'(= {| l |} )
; .dlt.ptn 1'(= r )
; .dlt.ptn 0'(= r )
; .mov_ptn2 0(<2)◂1(<2)◂8'(= {| l |} ) ⊢ 2'(= a3◂ [ a30◂ [ a9◂ [ ]]] )
; .mov_ptn 0(<2)◂1(<2)◂8'(= {| l |} ) ⊢ 2'(= a3◂ [ a30◂ [ a9◂ [ ]]] )
	mov rax,QWORD [rsp-8+8*1]
	mov BYTE [rax+6],1
	mov rdi,rax
	mov rax,r15
	mov r15,QWORD [r15] 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,8
	jmp LB_4709
LB_4709:
	cmp BYTE [r8+6],0
	jnz LB_4701
	pop r14
	pop r9
	add rsp,8
	pop r13
	ret
LB_4701:
	mov r9,QWORD [rsp+8]
	mov r14,QWORD [rsp+16]
	mov r13,QWORD [rsp+24]
	jmp LB_4713
LB_4712:
	add r14,1 
LB_4713:
	cmp r14,r9
	jge LB_4714
	JZ_SPC BYTE [r13+8+r14], LB_4712
LB_4714
	call GRM_189
	cmp BYTE [r8+6],0
	jnz LB_4717
	jmp LB_4718
LB_4717:
	jmp LB_4715
LB_4718:
	sub rsp,8
	mov r8,[r8+8]
; .mov_ptn2 2'(= a9◂ [ ] ) ⊢ 8'(= a9◂ [ ] )
; .mov_ptn 2'(= a9◂ [ ] ) ⊢ 8'(= a9◂ [ ] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_4716
LB_4715:
	add rsp,0
	jmp LB_4711
LB_4716:
	mov QWORD [rsp+8*1],r14
	mov r13,QWORD [rsp+16+8*1]
	mov r14,QWORD [rsp+8*1]
	jmp LB_4720
LB_4720
;; rsp=1 , %2592~1'(= r ) %2591~0'(= r ) %2590~8'(= a9◂ [ ] ) 
; #142 8'(= a9◂ [ ] ) ⊢ 0(<2)◂8'(= a9◂ [ ] )
;; rsp=1 , %2593~0(<2)◂8'(= a9◂ [ ] ) %2592~1'(= r ) %2591~0'(= r ) 
; #22 0(<2)◂8'(= a9◂ [ ] ) ⊢ 0(<2)◂0(<2)◂8'(= a9◂ [ ] )
;; rsp=1 , %2594~0(<2)◂0(<2)◂8'(= a9◂ [ ] ) %2592~1'(= r ) %2591~0'(= r ) 
; ∎ 0(<2)◂0(<2)◂8'(= a9◂ [ ] )
; .dlt.ptn 1'(= r )
; .dlt.ptn 0'(= r )
; .mov_ptn2 0(<2)◂0(<2)◂8'(= a9◂ [ ] ) ⊢ 2'(= a3◂ [ a30◂ [ a9◂ [ ]]] )
; .mov_ptn 0(<2)◂0(<2)◂8'(= a9◂ [ ] ) ⊢ 2'(= a3◂ [ a30◂ [ a9◂ [ ]]] )
	mov rax,QWORD [rsp-8+8*1]
	mov rdi,rax
	mov rax,r15
	mov r15,QWORD [r15] 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov rdi,rax
	mov rax,r15
	mov r15,QWORD [r15] 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,8
	jmp LB_4719
LB_4719:
	cmp BYTE [r8+6],0
	jnz LB_4711
	pop r14
	pop r9
	add rsp,8
	pop r13
	ret
LB_4711:
	pop rdi
	pop r9 
	pop r14
	pop r13
	ret
ETR_268:
	mov r9,0x0000_ffff_ffff_ffff
	and r9,[r13]
	call GRM_268
	ret
GRM_268:
	sub rsp,32
	mov QWORD [rsp+24],r13
	mov QWORD [rsp+16],r14 
	mov QWORD [rsp+8],r9
	jmp LB_4723
LB_4722:
	add r14,1 
LB_4723:
	cmp r14,r9
	jge LB_4724
	JZ_SPC BYTE [r13+8+r14], LB_4722
LB_4724
	lea rax,[r14+4]
	cmp rax,r9
	jg LB_4727
	jmp LB_4728
LB_4727:
	mov r8,unt_1
	jmp LB_4725
LB_4728:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],226
	jnz LB_4729
	cmp BYTE [rdi+1],136
	jnz LB_4729
	cmp BYTE [rdi+2],144
	jnz LB_4729
	cmp BYTE [rdi+3],42
	jnz LB_4729
	jmp LB_4730
LB_4729:
	mov r8,unt_1
	jmp LB_4725
LB_4730:
	add r14,4
	jmp LB_4726
LB_4725:
	add rsp,0
	jmp LB_4721
LB_4726:
	mov QWORD [rsp+8*0],r14
	mov r13,QWORD [rsp+16+8*0]
	mov r14,QWORD [rsp+8*0]
	jmp LB_4732
LB_4732
;; rsp=0 , %2596~1'(= r ) %2595~0'(= r ) 
; #149 { } ⊢ 1(<3)◂{ }
;; rsp=0 , %2597~1(<3)◂{ } %2596~1'(= r ) %2595~0'(= r ) 
; #22 1(<3)◂{ } ⊢ 0(<2)◂1(<3)◂{ }
;; rsp=0 , %2598~0(<2)◂1(<3)◂{ } %2596~1'(= r ) %2595~0'(= r ) 
; ∎ 0(<2)◂1(<3)◂{ }
; .dlt.ptn 1'(= r )
; .dlt.ptn 0'(= r )
; .mov_ptn2 0(<2)◂1(<3)◂{ } ⊢ 2'(= a3◂ [ a27◂ [ ]] )
; .mov_ptn 0(<2)◂1(<3)◂{ } ⊢ 2'(= a3◂ [ a27◂ [ ]] )
	mov rax,unt 
	mov rax,unt_1
	mov rdi,rax
	mov rax,r15
	mov r15,QWORD [r15] 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	jmp LB_4731
LB_4731:
	cmp BYTE [r8+6],0
	jnz LB_4721
	pop r14
	pop r9
	add rsp,8
	pop r13
	ret
LB_4721:
	mov r9,QWORD [rsp+8]
	mov r14,QWORD [rsp+16]
	mov r13,QWORD [rsp+24]
	jmp LB_4735
LB_4734:
	add r14,1 
LB_4735:
	cmp r14,r9
	jge LB_4736
	JZ_SPC BYTE [r13+8+r14], LB_4734
LB_4736
	lea rax,[r14+4]
	cmp rax,r9
	jg LB_4739
	jmp LB_4740
LB_4739:
	mov r8,unt_1
	jmp LB_4737
LB_4740:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],226
	jnz LB_4741
	cmp BYTE [rdi+1],136
	jnz LB_4741
	cmp BYTE [rdi+2],144
	jnz LB_4741
	cmp BYTE [rdi+3],35
	jnz LB_4741
	jmp LB_4742
LB_4741:
	mov r8,unt_1
	jmp LB_4737
LB_4742:
	add r14,4
	jmp LB_4738
LB_4737:
	add rsp,0
	jmp LB_4733
LB_4738:
	mov QWORD [rsp+8*0],r14
	mov r13,QWORD [rsp+16+8*0]
	mov r14,QWORD [rsp+8*0]
	jmp LB_4744
LB_4744
;; rsp=0 , %2600~1'(= r ) %2599~0'(= r ) 
; #148 { } ⊢ 2(<3)◂{ }
;; rsp=0 , %2601~2(<3)◂{ } %2600~1'(= r ) %2599~0'(= r ) 
; #22 2(<3)◂{ } ⊢ 0(<2)◂2(<3)◂{ }
;; rsp=0 , %2602~0(<2)◂2(<3)◂{ } %2600~1'(= r ) %2599~0'(= r ) 
; ∎ 0(<2)◂2(<3)◂{ }
; .dlt.ptn 1'(= r )
; .dlt.ptn 0'(= r )
; .mov_ptn2 0(<2)◂2(<3)◂{ } ⊢ 2'(= a3◂ [ a27◂ [ ]] )
; .mov_ptn 0(<2)◂2(<3)◂{ } ⊢ 2'(= a3◂ [ a27◂ [ ]] )
	mov rax,unt 
	mov rax,unt_2
	mov rdi,rax
	mov rax,r15
	mov r15,QWORD [r15] 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	jmp LB_4743
LB_4743:
	cmp BYTE [r8+6],0
	jnz LB_4733
	pop r14
	pop r9
	add rsp,8
	pop r13
	ret
LB_4733:
	mov r9,QWORD [rsp+8]
	mov r14,QWORD [rsp+16]
	mov r13,QWORD [rsp+24]
	jmp LB_4747
LB_4746:
	add r14,1 
LB_4747:
	cmp r14,r9
	jge LB_4748
	JZ_SPC BYTE [r13+8+r14], LB_4746
LB_4748
	lea rax,[r14+3]
	cmp rax,r9
	jg LB_4751
	jmp LB_4752
LB_4751:
	mov r8,unt_1
	jmp LB_4749
LB_4752:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],226
	jnz LB_4753
	cmp BYTE [rdi+1],136
	jnz LB_4753
	cmp BYTE [rdi+2],144
	jnz LB_4753
	jmp LB_4754
LB_4753:
	mov r8,unt_1
	jmp LB_4749
LB_4754:
	add r14,3
	jmp LB_4750
LB_4749:
	add rsp,0
	jmp LB_4745
LB_4750:
	mov QWORD [rsp+8*0],r14
	mov r13,QWORD [rsp+16+8*0]
	mov r14,QWORD [rsp+8*0]
	jmp LB_4756
LB_4756
;; rsp=0 , %2604~1'(= r ) %2603~0'(= r ) 
; #150 { } ⊢ 0(<3)◂{ }
;; rsp=0 , %2605~0(<3)◂{ } %2604~1'(= r ) %2603~0'(= r ) 
; #22 0(<3)◂{ } ⊢ 0(<2)◂0(<3)◂{ }
;; rsp=0 , %2606~0(<2)◂0(<3)◂{ } %2604~1'(= r ) %2603~0'(= r ) 
; ∎ 0(<2)◂0(<3)◂{ }
; .dlt.ptn 1'(= r )
; .dlt.ptn 0'(= r )
; .mov_ptn2 0(<2)◂0(<3)◂{ } ⊢ 2'(= a3◂ [ a27◂ [ ]] )
; .mov_ptn 0(<2)◂0(<3)◂{ } ⊢ 2'(= a3◂ [ a27◂ [ ]] )
	mov rax,unt 
	mov rax,unt_0
	mov rdi,rax
	mov rax,r15
	mov r15,QWORD [r15] 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	jmp LB_4755
LB_4755:
	cmp BYTE [r8+6],0
	jnz LB_4745
	pop r14
	pop r9
	add rsp,8
	pop r13
	ret
LB_4745:
	pop rdi
	pop r9 
	pop r14
	pop r13
	ret
ETR_269:
	mov r9,0x0000_ffff_ffff_ffff
	and r9,[r13]
	call GRM_269
	ret
GRM_269:
	sub rsp,32
	mov QWORD [rsp+24],r13
	mov QWORD [rsp+16],r14 
	mov QWORD [rsp+8],r9
	jmp LB_4759
LB_4758:
	add r14,1 
LB_4759:
	cmp r14,r9
	jge LB_4760
	JZ_SPC BYTE [r13+8+r14], LB_4758
LB_4760
	lea rax,[r14+5]
	cmp rax,r9
	jg LB_4763
	jmp LB_4764
LB_4763:
	mov r8,unt_1
	jmp LB_4761
LB_4764:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],226
	jnz LB_4765
	cmp BYTE [rdi+1],136
	jnz LB_4765
	cmp BYTE [rdi+2],144
	jnz LB_4765
	cmp BYTE [rdi+3],46
	jnz LB_4765
	cmp BYTE [rdi+4],42
	jnz LB_4765
	jmp LB_4766
LB_4765:
	mov r8,unt_1
	jmp LB_4761
LB_4766:
	add r14,5
	jmp LB_4762
LB_4761:
	add rsp,0
	jmp LB_4757
LB_4762:
	mov QWORD [rsp+8*0],r14
	mov r13,QWORD [rsp+16+8*0]
	mov r14,QWORD [rsp+8*0]
	jmp LB_4768
LB_4768
;; rsp=0 , %2608~1'(= r ) %2607~0'(= r ) 
; #149 { } ⊢ 1(<3)◂{ }
;; rsp=0 , %2609~1(<3)◂{ } %2608~1'(= r ) %2607~0'(= r ) 
; #22 1(<3)◂{ } ⊢ 0(<2)◂1(<3)◂{ }
;; rsp=0 , %2610~0(<2)◂1(<3)◂{ } %2608~1'(= r ) %2607~0'(= r ) 
; ∎ 0(<2)◂1(<3)◂{ }
; .dlt.ptn 1'(= r )
; .dlt.ptn 0'(= r )
; .mov_ptn2 0(<2)◂1(<3)◂{ } ⊢ 2'(= a3◂ [ a27◂ [ ]] )
; .mov_ptn 0(<2)◂1(<3)◂{ } ⊢ 2'(= a3◂ [ a27◂ [ ]] )
	mov rax,unt 
	mov rax,unt_1
	mov rdi,rax
	mov rax,r15
	mov r15,QWORD [r15] 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	jmp LB_4767
LB_4767:
	cmp BYTE [r8+6],0
	jnz LB_4757
	pop r14
	pop r9
	add rsp,8
	pop r13
	ret
LB_4757:
	mov r9,QWORD [rsp+8]
	mov r14,QWORD [rsp+16]
	mov r13,QWORD [rsp+24]
	jmp LB_4771
LB_4770:
	add r14,1 
LB_4771:
	cmp r14,r9
	jge LB_4772
	JZ_SPC BYTE [r13+8+r14], LB_4770
LB_4772
	lea rax,[r14+5]
	cmp rax,r9
	jg LB_4775
	jmp LB_4776
LB_4775:
	mov r8,unt_1
	jmp LB_4773
LB_4776:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],226
	jnz LB_4777
	cmp BYTE [rdi+1],136
	jnz LB_4777
	cmp BYTE [rdi+2],144
	jnz LB_4777
	cmp BYTE [rdi+3],46
	jnz LB_4777
	cmp BYTE [rdi+4],35
	jnz LB_4777
	jmp LB_4778
LB_4777:
	mov r8,unt_1
	jmp LB_4773
LB_4778:
	add r14,5
	jmp LB_4774
LB_4773:
	add rsp,0
	jmp LB_4769
LB_4774:
	mov QWORD [rsp+8*0],r14
	mov r13,QWORD [rsp+16+8*0]
	mov r14,QWORD [rsp+8*0]
	jmp LB_4780
LB_4780
;; rsp=0 , %2612~1'(= r ) %2611~0'(= r ) 
; #148 { } ⊢ 2(<3)◂{ }
;; rsp=0 , %2613~2(<3)◂{ } %2612~1'(= r ) %2611~0'(= r ) 
; #22 2(<3)◂{ } ⊢ 0(<2)◂2(<3)◂{ }
;; rsp=0 , %2614~0(<2)◂2(<3)◂{ } %2612~1'(= r ) %2611~0'(= r ) 
; ∎ 0(<2)◂2(<3)◂{ }
; .dlt.ptn 1'(= r )
; .dlt.ptn 0'(= r )
; .mov_ptn2 0(<2)◂2(<3)◂{ } ⊢ 2'(= a3◂ [ a27◂ [ ]] )
; .mov_ptn 0(<2)◂2(<3)◂{ } ⊢ 2'(= a3◂ [ a27◂ [ ]] )
	mov rax,unt 
	mov rax,unt_2
	mov rdi,rax
	mov rax,r15
	mov r15,QWORD [r15] 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	jmp LB_4779
LB_4779:
	cmp BYTE [r8+6],0
	jnz LB_4769
	pop r14
	pop r9
	add rsp,8
	pop r13
	ret
LB_4769:
	mov r9,QWORD [rsp+8]
	mov r14,QWORD [rsp+16]
	mov r13,QWORD [rsp+24]
	jmp LB_4783
LB_4782:
	add r14,1 
LB_4783:
	cmp r14,r9
	jge LB_4784
	JZ_SPC BYTE [r13+8+r14], LB_4782
LB_4784
	lea rax,[r14+4]
	cmp rax,r9
	jg LB_4787
	jmp LB_4788
LB_4787:
	mov r8,unt_1
	jmp LB_4785
LB_4788:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],226
	jnz LB_4789
	cmp BYTE [rdi+1],136
	jnz LB_4789
	cmp BYTE [rdi+2],144
	jnz LB_4789
	cmp BYTE [rdi+3],46
	jnz LB_4789
	jmp LB_4790
LB_4789:
	mov r8,unt_1
	jmp LB_4785
LB_4790:
	add r14,4
	jmp LB_4786
LB_4785:
	add rsp,0
	jmp LB_4781
LB_4786:
	mov QWORD [rsp+8*0],r14
	mov r13,QWORD [rsp+16+8*0]
	mov r14,QWORD [rsp+8*0]
	jmp LB_4792
LB_4792
;; rsp=0 , %2616~1'(= r ) %2615~0'(= r ) 
; #150 { } ⊢ 0(<3)◂{ }
;; rsp=0 , %2617~0(<3)◂{ } %2616~1'(= r ) %2615~0'(= r ) 
; #22 0(<3)◂{ } ⊢ 0(<2)◂0(<3)◂{ }
;; rsp=0 , %2618~0(<2)◂0(<3)◂{ } %2616~1'(= r ) %2615~0'(= r ) 
; ∎ 0(<2)◂0(<3)◂{ }
; .dlt.ptn 1'(= r )
; .dlt.ptn 0'(= r )
; .mov_ptn2 0(<2)◂0(<3)◂{ } ⊢ 2'(= a3◂ [ a27◂ [ ]] )
; .mov_ptn 0(<2)◂0(<3)◂{ } ⊢ 2'(= a3◂ [ a27◂ [ ]] )
	mov rax,unt 
	mov rax,unt_0
	mov rdi,rax
	mov rax,r15
	mov r15,QWORD [r15] 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	jmp LB_4791
LB_4791:
	cmp BYTE [r8+6],0
	jnz LB_4781
	pop r14
	pop r9
	add rsp,8
	pop r13
	ret
LB_4781:
	pop rdi
	pop r9 
	pop r14
	pop r13
	ret
ETR_270:
	mov r9,0x0000_ffff_ffff_ffff
	and r9,[r13]
	call GRM_270
	ret
GRM_270:
	sub rsp,32
	mov QWORD [rsp+24],r13
	mov QWORD [rsp+16],r14 
	mov QWORD [rsp+8],r9
	jmp LB_4795
LB_4794:
	add r14,1 
LB_4795:
	cmp r14,r9
	jge LB_4796
	JZ_SPC BYTE [r13+8+r14], LB_4794
LB_4796
	call GRM_269
	cmp BYTE [r8+6],0
	jnz LB_4799
	jmp LB_4800
LB_4799:
	jmp LB_4797
LB_4800:
	sub rsp,8
	mov r8,[r8+8]
; .mov_ptn2 2'(= a27◂ [ ] ) ⊢ 8'(= a27◂ [ ] )
; .mov_ptn 2'(= a27◂ [ ] ) ⊢ 8'(= a27◂ [ ] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_4798
LB_4797:
	add rsp,0
	jmp LB_4793
LB_4798:
	jmp LB_4802
LB_4801:
	add r14,1 
LB_4802:
	cmp r14,r9
	jge LB_4803
	JZ_SPC BYTE [r13+8+r14], LB_4801
LB_4803
	call GRM_272
	cmp BYTE [r8+6],0
	jnz LB_4806
	jmp LB_4807
LB_4806:
	jmp LB_4804
LB_4807:
	sub rsp,8
	mov r8,[r8+8]
; .mov_ptn2 2'(= a3◂ [ {| l |}] ) ⊢ 9'(= a3◂ [ {| l |}] )
; .mov_ptn 2'(= a3◂ [ {| l |}] ) ⊢ 9'(= a3◂ [ {| l |}] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_4805
LB_4804:
	add rsp,8
	pop rdi
	pop r9 
	pop r14
	pop r13
	ret
LB_4805:
	jmp LB_4809
LB_4808:
	add r14,1 
LB_4809:
	cmp r14,r9
	jge LB_4810
	JZ_SPC BYTE [r13+8+r14], LB_4808
LB_4810
	call GRM_264
	cmp BYTE [r8+6],0
	jnz LB_4813
	jmp LB_4814
LB_4813:
	jmp LB_4811
LB_4814:
	sub rsp,8
	mov r8,[r8+8]
; .mov_ptn2 2'(= a28◂ [ a9◂ [ ]] ) ⊢ 10'(= a28◂ [ a9◂ [ ]] )
; .mov_ptn 2'(= a28◂ [ a9◂ [ ]] ) ⊢ 10'(= a28◂ [ a9◂ [ ]] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_4812
LB_4811:
	add rsp,16
	pop rdi
	pop r9 
	pop r14
	pop r13
	ret
LB_4812:
	jmp LB_4816
LB_4815:
	add r14,1 
LB_4816:
	cmp r14,r9
	jge LB_4817
	JZ_SPC BYTE [r13+8+r14], LB_4815
LB_4817
	call GRM_271
	cmp BYTE [r8+6],0
	jnz LB_4820
	jmp LB_4821
LB_4820:
	jmp LB_4818
LB_4821:
	sub rsp,8
	mov r8,[r8+8]
; .mov_ptn2 2'(= a3◂ [ a25◂ [ a9◂ [ ]{| l |}]] ) ⊢ 11'(= a3◂ [ a25◂ [ a9◂ [ ]{| l |}]] )
; .mov_ptn 2'(= a3◂ [ a25◂ [ a9◂ [ ]{| l |}]] ) ⊢ 11'(= a3◂ [ a25◂ [ a9◂ [ ]{| l |}]] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_4819
LB_4818:
	add rsp,24
	pop rdi
	pop r9 
	pop r14
	pop r13
	ret
LB_4819:
	mov QWORD [rsp+8*4],r14
	mov r13,QWORD [rsp+16+8*4]
	mov r14,QWORD [rsp+8*4]
	jmp LB_4823
LB_4823
;; rsp=4 , %2624~1'(= r ) %2623~0'(= r ) %2622~11'(= a3◂ [ a25◂ [ a9◂ [ ]{| l |}]] ) %2621~10'(= a28◂ [ a9◂ [ ]] ) %2620~9'(= a3◂ [ {| l |}] ) %2619~8'(= a27◂ [ ] ) 
; #153 { 9'(= a3◂ [ {| l |}] ) 8'(= a27◂ [ ] ) 10'(= a28◂ [ a9◂ [ ]] ) 11'(= a3◂ [ a25◂ [ a9◂ [ ]{| l |}]] ) } ⊢ 1(<2)◂{ 9'(= a3◂ [ {| l |}] ) 8'(= a27◂ [ ] ) 10'(= a28◂ [ a9◂ [ ]] ) 11'(= a3◂ [ a25◂ [ a9◂ [ ]{| l |}]] ) }
;; rsp=4 , %2625~1(<2)◂{ 9'(= a3◂ [ {| l |}] ) 8'(= a27◂ [ ] ) 10'(= a28◂ [ a9◂ [ ]] ) 11'(= a3◂ [ a25◂ [ a9◂ [ ]{| l |}]] ) } %2624~1'(= r ) %2623~0'(= r ) 
; #22 1(<2)◂{ 9'(= a3◂ [ {| l |}] ) 8'(= a27◂ [ ] ) 10'(= a28◂ [ a9◂ [ ]] ) 11'(= a3◂ [ a25◂ [ a9◂ [ ]{| l |}]] ) } ⊢ 0(<2)◂1(<2)◂{ 9'(= a3◂ [ {| l |}] ) 8'(= a27◂ [ ] ) 10'(= a28◂ [ a9◂ [ ]] ) 11'(= a3◂ [ a25◂ [ a9◂ [ ]{| l |}]] ) }
;; rsp=4 , %2626~0(<2)◂1(<2)◂{ 9'(= a3◂ [ {| l |}] ) 8'(= a27◂ [ ] ) 10'(= a28◂ [ a9◂ [ ]] ) 11'(= a3◂ [ a25◂ [ a9◂ [ ]{| l |}]] ) } %2624~1'(= r ) %2623~0'(= r ) 
; ∎ 0(<2)◂1(<2)◂{ 9'(= a3◂ [ {| l |}] ) 8'(= a27◂ [ ] ) 10'(= a28◂ [ a9◂ [ ]] ) 11'(= a3◂ [ a25◂ [ a9◂ [ ]{| l |}]] ) }
; .dlt.ptn 1'(= r )
; .dlt.ptn 0'(= r )
; .mov_ptn2 0(<2)◂1(<2)◂{ 9'(= a3◂ [ {| l |}] ) 8'(= a27◂ [ ] ) 10'(= a28◂ [ a9◂ [ ]] ) 11'(= a3◂ [ a25◂ [ a9◂ [ ]{| l |}]] ) } ⊢ 2'(= a3◂ [ a25◂ [ a9◂ [ ]{| l |}]] )
; .mov_ptn 0(<2)◂1(<2)◂{ 9'(= a3◂ [ {| l |}] ) 8'(= a27◂ [ ] ) 10'(= a28◂ [ a9◂ [ ]] ) 11'(= a3◂ [ a25◂ [ a9◂ [ ]{| l |}]] ) } ⊢ 2'(= a3◂ [ a25◂ [ a9◂ [ ]{| l |}]] )
	mov rax,[SS_RCD_4_TOP]
	mov rsi,[rax] 
	mov QWORD [SS_RCD_4_TOP],rsi
	mov QWORD [rax],0
	mov r13,rax
	mov rax,QWORD [rsp-8+8*3]
	mov QWORD [r13+8+8*0],rax
	mov rax,QWORD [rsp-8+8*4]
	mov QWORD [r13+8+8*1],rax
	mov rax,QWORD [rsp-8+8*2]
	mov QWORD [r13+8+8*2],rax
	mov rax,QWORD [rsp-8+8*1]
	mov QWORD [r13+8+8*3],rax
	mov rax,r13
	mov BYTE [rax+6],1
	mov rdi,rax
	mov rax,r15
	mov r15,QWORD [r15] 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,32
	jmp LB_4822
LB_4822:
	cmp BYTE [r8+6],0
	jnz LB_4793
	pop r14
	pop r9
	add rsp,8
	pop r13
	ret
LB_4793:
	mov r9,QWORD [rsp+8]
	mov r14,QWORD [rsp+16]
	mov r13,QWORD [rsp+24]
	jmp LB_4826
LB_4825:
	add r14,1 
LB_4826:
	cmp r14,r9
	jge LB_4827
	JZ_SPC BYTE [r13+8+r14], LB_4825
LB_4827
	call GRM_268
	cmp BYTE [r8+6],0
	jnz LB_4830
	jmp LB_4831
LB_4830:
	jmp LB_4828
LB_4831:
	sub rsp,8
	mov r8,[r8+8]
; .mov_ptn2 2'(= a27◂ [ ] ) ⊢ 8'(= a27◂ [ ] )
; .mov_ptn 2'(= a27◂ [ ] ) ⊢ 8'(= a27◂ [ ] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_4829
LB_4828:
	add rsp,0
	jmp LB_4824
LB_4829:
	jmp LB_4833
LB_4832:
	add r14,1 
LB_4833:
	cmp r14,r9
	jge LB_4834
	JZ_SPC BYTE [r13+8+r14], LB_4832
LB_4834
	call GRM_272
	cmp BYTE [r8+6],0
	jnz LB_4837
	jmp LB_4838
LB_4837:
	jmp LB_4835
LB_4838:
	sub rsp,8
	mov r8,[r8+8]
; .mov_ptn2 2'(= a3◂ [ {| l |}] ) ⊢ 9'(= a3◂ [ {| l |}] )
; .mov_ptn 2'(= a3◂ [ {| l |}] ) ⊢ 9'(= a3◂ [ {| l |}] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_4836
LB_4835:
	add rsp,8
	jmp LB_4824
LB_4836:
	jmp LB_4840
LB_4839:
	add r14,1 
LB_4840:
	cmp r14,r9
	jge LB_4841
	JZ_SPC BYTE [r13+8+r14], LB_4839
LB_4841
	call GRM_264
	cmp BYTE [r8+6],0
	jnz LB_4844
	jmp LB_4845
LB_4844:
	jmp LB_4842
LB_4845:
	sub rsp,8
	mov r8,[r8+8]
; .mov_ptn2 2'(= a28◂ [ a9◂ [ ]] ) ⊢ 10'(= a28◂ [ a9◂ [ ]] )
; .mov_ptn 2'(= a28◂ [ a9◂ [ ]] ) ⊢ 10'(= a28◂ [ a9◂ [ ]] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_4843
LB_4842:
	add rsp,16
	jmp LB_4824
LB_4843:
	jmp LB_4847
LB_4846:
	add r14,1 
LB_4847:
	cmp r14,r9
	jge LB_4848
	JZ_SPC BYTE [r13+8+r14], LB_4846
LB_4848
	call GRM_271
	cmp BYTE [r8+6],0
	jnz LB_4851
	jmp LB_4852
LB_4851:
	jmp LB_4849
LB_4852:
	sub rsp,8
	mov r8,[r8+8]
; .mov_ptn2 2'(= a3◂ [ a25◂ [ a9◂ [ ]{| l |}]] ) ⊢ 11'(= a3◂ [ a25◂ [ a9◂ [ ]{| l |}]] )
; .mov_ptn 2'(= a3◂ [ a25◂ [ a9◂ [ ]{| l |}]] ) ⊢ 11'(= a3◂ [ a25◂ [ a9◂ [ ]{| l |}]] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_4850
LB_4849:
	add rsp,24
	jmp LB_4824
LB_4850:
	jmp LB_4854
LB_4853:
	add r14,1 
LB_4854:
	cmp r14,r9
	jge LB_4855
	JZ_SPC BYTE [r13+8+r14], LB_4853
LB_4855
	call GRM_270
	cmp BYTE [r8+6],0
	jnz LB_4858
	jmp LB_4859
LB_4858:
	jmp LB_4856
LB_4859:
	sub rsp,8
	mov r8,[r8+8]
; .mov_ptn2 2'(= a25◂ [ a9◂ [ ]{| l |}] ) ⊢ 12'(= a25◂ [ a9◂ [ ]{| l |}] )
; .mov_ptn 2'(= a25◂ [ a9◂ [ ]{| l |}] ) ⊢ 12'(= a25◂ [ a9◂ [ ]{| l |}] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_4857
LB_4856:
	add rsp,32
	jmp LB_4824
LB_4857:
	mov QWORD [rsp+8*5],r14
	mov r13,QWORD [rsp+16+8*5]
	mov r14,QWORD [rsp+8*5]
	jmp LB_4861
LB_4861
;; rsp=5 , %2633~1'(= r ) %2632~0'(= r ) %2631~12'(= a25◂ [ a9◂ [ ]{| l |}] ) %2630~11'(= a3◂ [ a25◂ [ a9◂ [ ]{| l |}]] ) %2629~10'(= a28◂ [ a9◂ [ ]] ) %2628~9'(= a3◂ [ {| l |}] ) %2627~8'(= a27◂ [ ] ) 
; #154 { 9'(= a3◂ [ {| l |}] ) 8'(= a27◂ [ ] ) 10'(= a28◂ [ a9◂ [ ]] ) 11'(= a3◂ [ a25◂ [ a9◂ [ ]{| l |}]] ) 12'(= a25◂ [ a9◂ [ ]{| l |}] ) } ⊢ 0(<2)◂{ 9'(= a3◂ [ {| l |}] ) 8'(= a27◂ [ ] ) 10'(= a28◂ [ a9◂ [ ]] ) 11'(= a3◂ [ a25◂ [ a9◂ [ ]{| l |}]] ) 12'(= a25◂ [ a9◂ [ ]{| l |}] ) }
;; rsp=5 , %2634~0(<2)◂{ 9'(= a3◂ [ {| l |}] ) 8'(= a27◂ [ ] ) 10'(= a28◂ [ a9◂ [ ]] ) 11'(= a3◂ [ a25◂ [ a9◂ [ ]{| l |}]] ) 12'(= a25◂ [ a9◂ [ ]{| l |}] ) } %2633~1'(= r ) %2632~0'(= r ) 
; #22 0(<2)◂{ 9'(= a3◂ [ {| l |}] ) 8'(= a27◂ [ ] ) 10'(= a28◂ [ a9◂ [ ]] ) 11'(= a3◂ [ a25◂ [ a9◂ [ ]{| l |}]] ) 12'(= a25◂ [ a9◂ [ ]{| l |}] ) } ⊢ 0(<2)◂0(<2)◂{ 9'(= a3◂ [ {| l |}] ) 8'(= a27◂ [ ] ) 10'(= a28◂ [ a9◂ [ ]] ) 11'(= a3◂ [ a25◂ [ a9◂ [ ]{| l |}]] ) 12'(= a25◂ [ a9◂ [ ]{| l |}] ) }
;; rsp=5 , %2635~0(<2)◂0(<2)◂{ 9'(= a3◂ [ {| l |}] ) 8'(= a27◂ [ ] ) 10'(= a28◂ [ a9◂ [ ]] ) 11'(= a3◂ [ a25◂ [ a9◂ [ ]{| l |}]] ) 12'(= a25◂ [ a9◂ [ ]{| l |}] ) } %2633~1'(= r ) %2632~0'(= r ) 
; ∎ 0(<2)◂0(<2)◂{ 9'(= a3◂ [ {| l |}] ) 8'(= a27◂ [ ] ) 10'(= a28◂ [ a9◂ [ ]] ) 11'(= a3◂ [ a25◂ [ a9◂ [ ]{| l |}]] ) 12'(= a25◂ [ a9◂ [ ]{| l |}] ) }
; .dlt.ptn 1'(= r )
; .dlt.ptn 0'(= r )
; .mov_ptn2 0(<2)◂0(<2)◂{ 9'(= a3◂ [ {| l |}] ) 8'(= a27◂ [ ] ) 10'(= a28◂ [ a9◂ [ ]] ) 11'(= a3◂ [ a25◂ [ a9◂ [ ]{| l |}]] ) 12'(= a25◂ [ a9◂ [ ]{| l |}] ) } ⊢ 2'(= a3◂ [ a25◂ [ a9◂ [ ]{| l |}]] )
; .mov_ptn 0(<2)◂0(<2)◂{ 9'(= a3◂ [ {| l |}] ) 8'(= a27◂ [ ] ) 10'(= a28◂ [ a9◂ [ ]] ) 11'(= a3◂ [ a25◂ [ a9◂ [ ]{| l |}]] ) 12'(= a25◂ [ a9◂ [ ]{| l |}] ) } ⊢ 2'(= a3◂ [ a25◂ [ a9◂ [ ]{| l |}]] )
	mov rax,[SS_RCD_5_TOP]
	mov rsi,[rax] 
	mov QWORD [SS_RCD_5_TOP],rsi
	mov QWORD [rax],0
	mov r13,rax
	mov rax,QWORD [rsp-8+8*4]
	mov QWORD [r13+8+8*0],rax
	mov rax,QWORD [rsp-8+8*5]
	mov QWORD [r13+8+8*1],rax
	mov rax,QWORD [rsp-8+8*3]
	mov QWORD [r13+8+8*2],rax
	mov rax,QWORD [rsp-8+8*2]
	mov QWORD [r13+8+8*3],rax
	mov rax,QWORD [rsp-8+8*1]
	mov QWORD [r13+8+8*4],rax
	mov rax,r13
	mov BYTE [rax+6],0
	mov rdi,rax
	mov rax,r15
	mov r15,QWORD [r15] 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,40
	jmp LB_4860
LB_4860:
	cmp BYTE [r8+6],0
	jnz LB_4824
	pop r14
	pop r9
	add rsp,8
	pop r13
	ret
LB_4824:
	pop rdi
	pop r9 
	pop r14
	pop r13
	ret
ETR_271:
	mov r9,0x0000_ffff_ffff_ffff
	and r9,[r13]
	call GRM_271
	ret
GRM_271:
	sub rsp,32
	mov QWORD [rsp+24],r13
	mov QWORD [rsp+16],r14 
	mov QWORD [rsp+8],r9
	jmp LB_4864
LB_4863:
	add r14,1 
LB_4864:
	cmp r14,r9
	jge LB_4865
	JZ_SPC BYTE [r13+8+r14], LB_4863
LB_4865
	lea rax,[r14+1]
	cmp rax,r9
	jg LB_4868
	jmp LB_4869
LB_4868:
	mov r8,unt_1
	jmp LB_4866
LB_4869:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],59
	jnz LB_4870
	jmp LB_4871
LB_4870:
	mov r8,unt_1
	jmp LB_4866
LB_4871:
	add r14,1
	jmp LB_4867
LB_4866:
	add rsp,0
	jmp LB_4862
LB_4867:
	jmp LB_4873
LB_4872:
	add r14,1 
LB_4873:
	cmp r14,r9
	jge LB_4874
	JZ_SPC BYTE [r13+8+r14], LB_4872
LB_4874
	call GRM_270
	cmp BYTE [r8+6],0
	jnz LB_4877
	jmp LB_4878
LB_4877:
	jmp LB_4875
LB_4878:
	sub rsp,8
	mov r8,[r8+8]
; .mov_ptn2 2'(= a25◂ [ a9◂ [ ]{| l |}] ) ⊢ 8'(= a25◂ [ a9◂ [ ]{| l |}] )
; .mov_ptn 2'(= a25◂ [ a9◂ [ ]{| l |}] ) ⊢ 8'(= a25◂ [ a9◂ [ ]{| l |}] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_4876
LB_4875:
	add rsp,0
	jmp LB_4862
LB_4876:
	mov QWORD [rsp+8*1],r14
	mov r13,QWORD [rsp+16+8*1]
	mov r14,QWORD [rsp+8*1]
	jmp LB_4880
LB_4880
;; rsp=1 , %2638~1'(= r ) %2637~0'(= r ) %2636~8'(= a25◂ [ a9◂ [ ]{| l |}] ) 
; #22 8'(= a25◂ [ a9◂ [ ]{| l |}] ) ⊢ 0(<2)◂8'(= a25◂ [ a9◂ [ ]{| l |}] )
;; rsp=1 , %2639~0(<2)◂8'(= a25◂ [ a9◂ [ ]{| l |}] ) %2638~1'(= r ) %2637~0'(= r ) 
; #22 0(<2)◂8'(= a25◂ [ a9◂ [ ]{| l |}] ) ⊢ 0(<2)◂0(<2)◂8'(= a25◂ [ a9◂ [ ]{| l |}] )
;; rsp=1 , %2640~0(<2)◂0(<2)◂8'(= a25◂ [ a9◂ [ ]{| l |}] ) %2638~1'(= r ) %2637~0'(= r ) 
; ∎ 0(<2)◂0(<2)◂8'(= a25◂ [ a9◂ [ ]{| l |}] )
; .dlt.ptn 1'(= r )
; .dlt.ptn 0'(= r )
; .mov_ptn2 0(<2)◂0(<2)◂8'(= a25◂ [ a9◂ [ ]{| l |}] ) ⊢ 2'(= a3◂ [ a3◂ [ a25◂ [ a9◂ [ ]{| l |}]]] )
; .mov_ptn 0(<2)◂0(<2)◂8'(= a25◂ [ a9◂ [ ]{| l |}] ) ⊢ 2'(= a3◂ [ a3◂ [ a25◂ [ a9◂ [ ]{| l |}]]] )
	mov rax,QWORD [rsp-8+8*1]
	mov rdi,rax
	mov rax,r15
	mov r15,QWORD [r15] 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov rdi,rax
	mov rax,r15
	mov r15,QWORD [r15] 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,8
	jmp LB_4879
LB_4879:
	cmp BYTE [r8+6],0
	jnz LB_4862
	pop r14
	pop r9
	add rsp,8
	pop r13
	ret
LB_4862:
	mov r9,QWORD [rsp+8]
	mov r14,QWORD [rsp+16]
	mov r13,QWORD [rsp+24]
	mov QWORD [rsp+8*0],r14
	mov r13,QWORD [rsp+16+8*0]
	mov r14,QWORD [rsp+8*0]
	jmp LB_4883
LB_4883
;; rsp=0 , %2642~1'(= r ) %2641~0'(= r ) 
; #23 { } ⊢ 1(<2)◂{ }
;; rsp=0 , %2643~1(<2)◂{ } %2642~1'(= r ) %2641~0'(= r ) 
; #22 1(<2)◂{ } ⊢ 0(<2)◂1(<2)◂{ }
;; rsp=0 , %2644~0(<2)◂1(<2)◂{ } %2642~1'(= r ) %2641~0'(= r ) 
; ∎ 0(<2)◂1(<2)◂{ }
; .dlt.ptn 1'(= r )
; .dlt.ptn 0'(= r )
; .mov_ptn2 0(<2)◂1(<2)◂{ } ⊢ 2'(= a3◂ [ a3◂ [ a25◂ [ a9◂ [ ]{| l |}]]] )
; .mov_ptn 0(<2)◂1(<2)◂{ } ⊢ 2'(= a3◂ [ a3◂ [ a25◂ [ a9◂ [ ]{| l |}]]] )
	mov rax,unt 
	mov rax,unt_1
	mov rdi,rax
	mov rax,r15
	mov r15,QWORD [r15] 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	jmp LB_4882
LB_4882:
	cmp BYTE [r8+6],0
	jnz LB_4881
	pop r14
	pop r9
	add rsp,8
	pop r13
	ret
LB_4881:
	pop rdi
	pop r9 
	pop r14
	pop r13
	ret
ETR_272:
	mov r9,0x0000_ffff_ffff_ffff
	and r9,[r13]
	call GRM_272
	ret
GRM_272:
	sub rsp,32
	mov QWORD [rsp+24],r13
	mov QWORD [rsp+16],r14 
	mov QWORD [rsp+8],r9
	jmp LB_4886
LB_4885:
	add r14,1 
LB_4886:
	cmp r14,r9
	jge LB_4887
	JZ_SPC BYTE [r13+8+r14], LB_4885
LB_4887
	call GRM_74
	cmp BYTE [r8+6],0
	jnz LB_4890
	jmp LB_4891
LB_4890:
	jmp LB_4888
LB_4891:
	sub rsp,8
; .mov_ptn2 2'(= {| l |} ) ⊢ 8'(= {| l |} )
; .mov_ptn 2'(= {| l |} ) ⊢ 8'(= {| l |} )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_4889
LB_4888:
	add rsp,0
	jmp LB_4884
LB_4889:
	jmp LB_4893
LB_4892:
	add r14,1 
LB_4893:
	cmp r14,r9
	jge LB_4894
	JZ_SPC BYTE [r13+8+r14], LB_4892
LB_4894
	lea rax,[r14+1]
	cmp rax,r9
	jg LB_4897
	jmp LB_4898
LB_4897:
	mov r8,unt_1
	jmp LB_4895
LB_4898:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],58
	jnz LB_4899
	jmp LB_4900
LB_4899:
	mov r8,unt_1
	jmp LB_4895
LB_4900:
	add r14,1
	jmp LB_4896
LB_4895:
	add rsp,8
	jmp LB_4884
LB_4896:
	mov QWORD [rsp+8*1],r14
	mov r13,QWORD [rsp+16+8*1]
	mov r14,QWORD [rsp+8*1]
	jmp LB_4902
LB_4902
;; rsp=1 , %2647~1'(= r ) %2646~0'(= r ) %2645~8'(= {| l |} ) 
; #22 8'(= {| l |} ) ⊢ 0(<2)◂8'(= {| l |} )
;; rsp=1 , %2648~0(<2)◂8'(= {| l |} ) %2647~1'(= r ) %2646~0'(= r ) 
; #22 0(<2)◂8'(= {| l |} ) ⊢ 0(<2)◂0(<2)◂8'(= {| l |} )
;; rsp=1 , %2649~0(<2)◂0(<2)◂8'(= {| l |} ) %2647~1'(= r ) %2646~0'(= r ) 
; ∎ 0(<2)◂0(<2)◂8'(= {| l |} )
; .dlt.ptn 1'(= r )
; .dlt.ptn 0'(= r )
; .mov_ptn2 0(<2)◂0(<2)◂8'(= {| l |} ) ⊢ 2'(= a3◂ [ a3◂ [ {| l |}]] )
; .mov_ptn 0(<2)◂0(<2)◂8'(= {| l |} ) ⊢ 2'(= a3◂ [ a3◂ [ {| l |}]] )
	mov rax,QWORD [rsp-8+8*1]
	mov BYTE [rax+6],0
	mov rdi,rax
	mov rax,r15
	mov r15,QWORD [r15] 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,8
	jmp LB_4901
LB_4901:
	cmp BYTE [r8+6],0
	jnz LB_4884
	pop r14
	pop r9
	add rsp,8
	pop r13
	ret
LB_4884:
	mov r9,QWORD [rsp+8]
	mov r14,QWORD [rsp+16]
	mov r13,QWORD [rsp+24]
	mov QWORD [rsp+8*0],r14
	mov r13,QWORD [rsp+16+8*0]
	mov r14,QWORD [rsp+8*0]
	jmp LB_4905
LB_4905
;; rsp=0 , %2651~1'(= r ) %2650~0'(= r ) 
; #23 { } ⊢ 1(<2)◂{ }
;; rsp=0 , %2652~1(<2)◂{ } %2651~1'(= r ) %2650~0'(= r ) 
; #22 1(<2)◂{ } ⊢ 0(<2)◂1(<2)◂{ }
;; rsp=0 , %2653~0(<2)◂1(<2)◂{ } %2651~1'(= r ) %2650~0'(= r ) 
; ∎ 0(<2)◂1(<2)◂{ }
; .dlt.ptn 1'(= r )
; .dlt.ptn 0'(= r )
; .mov_ptn2 0(<2)◂1(<2)◂{ } ⊢ 2'(= a3◂ [ a3◂ [ {| l |}]] )
; .mov_ptn 0(<2)◂1(<2)◂{ } ⊢ 2'(= a3◂ [ a3◂ [ {| l |}]] )
	mov rax,unt 
	mov rax,unt_1
	mov rdi,rax
	mov rax,r15
	mov r15,QWORD [r15] 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	jmp LB_4904
LB_4904:
	cmp BYTE [r8+6],0
	jnz LB_4903
	pop r14
	pop r9
	add rsp,8
	pop r13
	ret
LB_4903:
	pop rdi
	pop r9 
	pop r14
	pop r13
	ret
ETR_273: ; E 0'(= {| l |} ) ⊢ { } : (_s8→{ })
;; rsp=0 , %2654~0'(= {| l |} ) 
; » _^ .. ⊢ ..
; .. //
	mov rdi,0
	add rdi,17
	push rdi 
	call mlc_s8
	pop rdi
	mov r14,rax
	lea rdi,[rax+7+rdi]
	std 
	mov QWORD [tmp],rcx 
	lea rsi,[LB_4906+9-1]
	mov rcx,9
	rep movsb
	lea rsi,[LB_4907+8-1]
	mov rcx,8
	rep movsb
	mov rcx,QWORD [tmp] 
;; rsp=0 , %2655~1'(= {| l |} ) %2654~0'(= {| l |} ) 
; _#7 1'(= {| l |} ) ⊢ { 1'(= {| l |} ) 2'(= r ) }
	mov rdi,r14
	mov rdi,QWORD [rdi] 
	mov rsi,0x0000_ffff_ffff_ffff
	and rdi,rsi 
	mov r8,rdi
;; rsp=0 , %2657~2'(= r ) %2656~1'(= {| l |} ) %2654~0'(= {| l |} ) 
; _#8 2'(= r ) ⊢ 2'(= r )
	mov rdi,fmt_emt
	call emt_stg
	C_PUSH_REGS
	mov r8,r8
	mov rdi,r8 
	call emt_r64 
	C_POP_REGS
	mov rdi,fmt_nl
	call emt_stg
	jmp LB_4908
LB_4908:
; .dlt.ptn 2'(= r )
;; rsp=0 , %2656~1'(= {| l |} ) %2654~0'(= {| l |} ) 
; _#8 1'(= {| l |} ) ⊢ 1'(= {| l |} )
	mov rdi,fmt_emt
	call emt_stg
	C_PUSH_REGS
	mov r8,r14
	mov rdi,r8
	call emt_s8
	C_POP_REGS
	mov rdi,fmt_nl
	call emt_stg
	jmp LB_4909
LB_4909:
;; rsp=0 , %2659~1'(= {| l |} ) %2654~0'(= {| l |} ) 
; _#22 0'(= {| l |} ) ⊢ { 0'(= {| l |} ) 2'(= {| l |} ) }
	C_PUSH_REGS
	mov rdi,r13
	add rdi,8
	call in_fn
	C_POP_REGS
	mov r8,rax
; .dlt.ptn 0'(= {| l |} )
	mov rdi,r13
	call free_s8 
;; rsp=0 , %2661~2'(= {| l |} ) %2659~1'(= {| l |} ) 
; rsp_d=0, #243 { 2'(= {| l |} ) %[ 0r ] } ⊢ { 0'(= {| l |} ) 3'(= r ) 2'(= a3◂ [ a35◂ [ a2◂ [ a31◂ [ ]]]] ) }
	sub rsp,8
	mov QWORD [rsp+8*0],r14
; .mov_ptn2 { 2'(= {| l |} ) %[ 0r ] } ⊢ { 0'(= {| l |} ) 1'(= r ) }
; .mov_ptn %[ 0r ] ⊢ 1'(= r )
	mov rax,0
	mov r14,rax
; .mov_ptn 2'(= {| l |} ) ⊢ 0'(= {| l |} )
	mov rax,r8
	mov r13,rax
	call ETR_243

	mov rax,QWORD [rsp-8+8*1]
	mov r9,r14
	mov r14,rax
	add rsp,8
;; rsp=0 , %2664~2'(= a3◂ [ a35◂ [ a2◂ [ a31◂ [ ]]]] ) %2663~3'(= r ) %2662~0'(= {| l |} ) %2659~1'(= {| l |} ) 
; _#8 3'(= r ) ⊢ 3'(= r )
	mov rdi,fmt_emt
	call emt_stg
	C_PUSH_REGS
	mov r8,r9
	mov rdi,r8 
	call emt_r64 
	C_POP_REGS
	mov rdi,fmt_nl
	call emt_stg
	jmp LB_4910
LB_4910:
; .dlt.ptn 3'(= r )
;; rsp=0 , %2664~2'(= a3◂ [ a35◂ [ a2◂ [ a31◂ [ ]]]] ) %2662~0'(= {| l |} ) %2659~1'(= {| l |} ) 
; _#8 2'(= a3◂ [ a35◂ [ a2◂ [ a31◂ [ ]]]] ) ⊢ 2'(= a3◂ [ a35◂ [ a2◂ [ a31◂ [ ]]]] )
	mov rdi,fmt_emt
	call emt_stg
	C_PUSH_REGS
	mov r8,r8
	call LB_4911
	C_POP_REGS
	mov rdi,fmt_nl
	call emt_stg
	jmp LB_4912
LB_4911:
	movzx rax,BYTE [r8+6]
	jmp QWORD [LB_4915+8*rax]
LB_4915: dq LB_4913,LB_4914
LB_4913:
	mov rdi,LB_4917
	call emt_stg 
	mov r8,QWORD [r8+8]
	call LB_4918
	jmp LB_4916
LB_4914:
	mov rdi,LB_4919
	call emt_stg 
	mov rdi,fmt_rcd_box_l
	call emt_stg
	mov rdi,fmt_rcd_r
	call emt_stg
	jmp LB_4916
LB_4916:
	ret
LB_4918:
	movzx rax,BYTE [r8+6]
	jmp QWORD [LB_4922+8*rax]
LB_4922: dq LB_4920,LB_4921
LB_4920:
	mov rdi,LB_4924
	call emt_stg 
	mov r8,QWORD [r8+8]
	call LB_4925
	jmp LB_4923
LB_4921:
	mov rdi,LB_4926
	call emt_stg 
	mov r8,QWORD [r8+8]
	call LB_4927
	jmp LB_4923
LB_4923:
	ret
LB_4927:
	movzx rax,BYTE [r8+6]
	jmp QWORD [LB_4930+8*rax]
LB_4930: dq LB_4928,LB_4929
LB_4928:
	mov rdi,LB_4932
	call emt_stg 
	mov rdi,fmt_rcd_box_l
	call emt_stg
	push r8
	mov r8,QWORD [r8+8+8*0]
	mov rdi,fmt_rcd_box_l
	call emt_stg
	push r8
	mov r8,QWORD [r8+8+8*0]
	mov rdi,r8 
	call emt_r64 
	pop r8 
	mov rdi,fmt_spc 
	call emt_stg 
	push r8
	mov r8,QWORD [r8+8+8*1]
	mov rdi,r8 
	call emt_r64 
	pop r8 
	mov rdi,fmt_spc 
	call emt_stg 
	push r8
	mov r8,QWORD [r8+8+8*2]
	mov rdi,r8
	call emt_s8
	pop r8 
	mov rdi,fmt_spc 
	call emt_stg 
	mov rdi,fmt_rcd_r
	call emt_stg
	pop r8 
	mov rdi,fmt_spc 
	call emt_stg 
	push r8
	mov r8,QWORD [r8+8+8*1]
	call LB_4927
	pop r8 
	mov rdi,fmt_spc 
	call emt_stg 
	mov rdi,fmt_rcd_r
	call emt_stg
	jmp LB_4931
LB_4929:
	mov rdi,LB_4933
	call emt_stg 
	mov rdi,fmt_rcd_box_l
	call emt_stg
	mov rdi,fmt_rcd_r
	call emt_stg
	jmp LB_4931
LB_4931:
	ret
LB_4925:
	movzx rax,BYTE [r8+6]
	jmp QWORD [LB_4936+8*rax]
LB_4936: dq LB_4934,LB_4935
LB_4934:
	mov rdi,LB_4938
	call emt_stg 
	mov rdi,fmt_rcd_box_l
	call emt_stg
	push r8
	mov r8,QWORD [r8+8+8*0]
	call LB_4939
	pop r8 
	mov rdi,fmt_spc 
	call emt_stg 
	push r8
	mov r8,QWORD [r8+8+8*1]
	call LB_4925
	pop r8 
	mov rdi,fmt_spc 
	call emt_stg 
	mov rdi,fmt_rcd_r
	call emt_stg
	jmp LB_4937
LB_4935:
	mov rdi,LB_4940
	call emt_stg 
	mov rdi,fmt_rcd_box_l
	call emt_stg
	mov rdi,fmt_rcd_r
	call emt_stg
	jmp LB_4937
LB_4937:
	ret
LB_4939:
	movzx rax,BYTE [r8+6]
	jmp QWORD [LB_4947+8*rax]
LB_4947: dq LB_4941,LB_4942,LB_4943,LB_4944,LB_4945,LB_4946
LB_4941:
	mov rdi,LB_4949
	call emt_stg 
	mov rdi,fmt_rcd_box_l
	call emt_stg
	push r8
	mov r8,QWORD [r8+8+8*0]
	mov rdi,r8
	call emt_s8
	pop r8 
	mov rdi,fmt_spc 
	call emt_stg 
	push r8
	mov r8,QWORD [r8+8+8*1]
	call LB_4950
	pop r8 
	mov rdi,fmt_spc 
	call emt_stg 
	mov rdi,fmt_rcd_r
	call emt_stg
	jmp LB_4948
LB_4942:
	mov rdi,LB_4951
	call emt_stg 
	mov r8,QWORD [r8+8]
	call LB_4952
	jmp LB_4948
LB_4943:
	mov rdi,LB_4953
	call emt_stg 
	mov rdi,fmt_rcd_box_l
	call emt_stg
	push r8
	mov r8,QWORD [r8+8+8*0]
	mov rdi,r8
	call emt_s8
	pop r8 
	mov rdi,fmt_spc 
	call emt_stg 
	push r8
	mov r8,QWORD [r8+8+8*1]
	call LB_4954
	pop r8 
	mov rdi,fmt_spc 
	call emt_stg 
	mov rdi,fmt_rcd_r
	call emt_stg
	jmp LB_4948
LB_4944:
	mov rdi,LB_4955
	call emt_stg 
	mov r8,QWORD [r8+8]
	call LB_4956
	jmp LB_4948
LB_4945:
	mov rdi,LB_4957
	call emt_stg 
	mov rdi,fmt_rcd_box_l
	call emt_stg
	push r8
	mov r8,QWORD [r8+8+8*0]
	mov rdi,r8
	call emt_s8
	pop r8 
	mov rdi,fmt_spc 
	call emt_stg 
	push r8
	mov r8,QWORD [r8+8+8*1]
	call LB_4958
	pop r8 
	mov rdi,fmt_spc 
	call emt_stg 
	mov rdi,fmt_rcd_r
	call emt_stg
	jmp LB_4948
LB_4946:
	mov rdi,LB_4959
	call emt_stg 
	mov r8,QWORD [r8+8]
	call LB_4960
	jmp LB_4948
LB_4948:
	ret
LB_4960:
	movzx rax,BYTE [r8+6]
	jmp QWORD [LB_4963+8*rax]
LB_4963: dq LB_4961,LB_4962
LB_4961:
	mov rdi,LB_4965
	call emt_stg 
	mov rdi,fmt_rcd_box_l
	call emt_stg
	push r8
	mov r8,QWORD [r8+8+8*0]
	mov rdi,fmt_rcd_box_l
	call emt_stg
	push r8
	mov r8,QWORD [r8+8+8*0]
	mov rdi,r8
	call emt_s8
	pop r8 
	mov rdi,fmt_spc 
	call emt_stg 
	push r8
	mov r8,QWORD [r8+8+8*1]
	call LB_4958
	pop r8 
	mov rdi,fmt_spc 
	call emt_stg 
	mov rdi,fmt_rcd_r
	call emt_stg
	pop r8 
	mov rdi,fmt_spc 
	call emt_stg 
	push r8
	mov r8,QWORD [r8+8+8*1]
	call LB_4960
	pop r8 
	mov rdi,fmt_spc 
	call emt_stg 
	mov rdi,fmt_rcd_r
	call emt_stg
	jmp LB_4964
LB_4962:
	mov rdi,LB_4966
	call emt_stg 
	mov rdi,fmt_rcd_box_l
	call emt_stg
	mov rdi,fmt_rcd_r
	call emt_stg
	jmp LB_4964
LB_4964:
	ret
LB_4958:
	movzx rax,BYTE [r8+6]
	jmp QWORD [LB_4969+8*rax]
LB_4969: dq LB_4967,LB_4968
LB_4967:
	mov rdi,LB_4971
	call emt_stg 
	mov rdi,fmt_rcd_box_l
	call emt_stg
	push r8
	mov r8,QWORD [r8+8+8*0]
	call LB_4972
	pop r8 
	mov rdi,fmt_spc 
	call emt_stg 
	push r8
	mov r8,QWORD [r8+8+8*1]
	call LB_4973
	pop r8 
	mov rdi,fmt_spc 
	call emt_stg 
	mov rdi,fmt_rcd_r
	call emt_stg
	jmp LB_4970
LB_4968:
	mov rdi,LB_4974
	call emt_stg 
	mov rdi,fmt_rcd_box_l
	call emt_stg
	push r8
	mov r8,QWORD [r8+8+8*0]
	call LB_4972
	pop r8 
	mov rdi,fmt_spc 
	call emt_stg 
	push r8
	mov r8,QWORD [r8+8+8*1]
	call LB_4975
	pop r8 
	mov rdi,fmt_spc 
	call emt_stg 
	mov rdi,fmt_rcd_r
	call emt_stg
	jmp LB_4970
LB_4970:
	ret
LB_4975:
	movzx rax,BYTE [r8+6]
	jmp QWORD [LB_4981+8*rax]
LB_4981: dq LB_4976,LB_4977,LB_4978,LB_4979,LB_4980
LB_4976:
	mov rdi,LB_4983
	call emt_stg 
	mov r8,QWORD [r8+8]
	call LB_4984
	jmp LB_4982
LB_4977:
	mov rdi,LB_4985
	call emt_stg 
	mov rdi,fmt_rcd_box_l
	call emt_stg
	push r8
	mov r8,QWORD [r8+8+8*0]
	call LB_4975
	pop r8 
	mov rdi,fmt_spc 
	call emt_stg 
	push r8
	mov r8,QWORD [r8+8+8*1]
	call LB_4975
	pop r8 
	mov rdi,fmt_spc 
	call emt_stg 
	mov rdi,fmt_rcd_r
	call emt_stg
	jmp LB_4982
LB_4978:
	mov rdi,LB_4986
	call emt_stg 
	mov rdi,fmt_rcd_box_l
	call emt_stg
	push r8
	mov r8,QWORD [r8+8+8*0]
	call LB_4975
	pop r8 
	mov rdi,fmt_spc 
	call emt_stg 
	push r8
	mov r8,QWORD [r8+8+8*1]
	call LB_4975
	pop r8 
	mov rdi,fmt_spc 
	call emt_stg 
	mov rdi,fmt_rcd_r
	call emt_stg
	jmp LB_4982
LB_4979:
	mov rdi,LB_4987
	call emt_stg 
	mov r8,QWORD [r8+8]
	call LB_4988
	jmp LB_4982
LB_4980:
	mov rdi,LB_4989
	call emt_stg 
	mov rdi,r8
	call emt_s8
	jmp LB_4982
LB_4982:
	ret
LB_4988:
	movzx rax,BYTE [r8+6]
	jmp QWORD [LB_4992+8*rax]
LB_4992: dq LB_4990,LB_4991
LB_4990:
	mov rdi,LB_4994
	call emt_stg 
	mov rdi,fmt_rcd_box_l
	call emt_stg
	push r8
	mov r8,QWORD [r8+8+8*0]
	mov rdi,r8
	call emt_s8
	pop r8 
	mov rdi,fmt_spc 
	call emt_stg 
	push r8
	mov r8,QWORD [r8+8+8*1]
	call LB_4988
	pop r8 
	mov rdi,fmt_spc 
	call emt_stg 
	mov rdi,fmt_rcd_r
	call emt_stg
	jmp LB_4993
LB_4991:
	mov rdi,LB_4995
	call emt_stg 
	mov rdi,r8
	call emt_s8
	jmp LB_4993
LB_4993:
	ret
LB_4984:
	movzx rax,BYTE [r8+6]
	jmp QWORD [LB_4998+8*rax]
LB_4998: dq LB_4996,LB_4997
LB_4996:
	mov rdi,LB_5000
	call emt_stg 
	mov rdi,fmt_rcd_box_l
	call emt_stg
	push r8
	mov r8,QWORD [r8+8+8*0]
	call LB_4975
	pop r8 
	mov rdi,fmt_spc 
	call emt_stg 
	push r8
	mov r8,QWORD [r8+8+8*1]
	call LB_4984
	pop r8 
	mov rdi,fmt_spc 
	call emt_stg 
	mov rdi,fmt_rcd_r
	call emt_stg
	jmp LB_4999
LB_4997:
	mov rdi,LB_5001
	call emt_stg 
	mov rdi,fmt_rcd_box_l
	call emt_stg
	mov rdi,fmt_rcd_r
	call emt_stg
	jmp LB_4999
LB_4999:
	ret
LB_4973:
	movzx rax,BYTE [r8+6]
	jmp QWORD [LB_5004+8*rax]
LB_5004: dq LB_5002,LB_5003
LB_5002:
	mov rdi,LB_5006
	call emt_stg 
	mov rdi,fmt_rcd_box_l
	call emt_stg
	push r8
	mov r8,QWORD [r8+8+8*0]
	mov rdi,fmt_rcd_box_l
	call emt_stg
	push r8
	mov r8,QWORD [r8+8+8*0]
	mov rdi,r8
	call emt_s8
	pop r8 
	mov rdi,fmt_spc 
	call emt_stg 
	push r8
	mov r8,QWORD [r8+8+8*1]
	call LB_4975
	pop r8 
	mov rdi,fmt_spc 
	call emt_stg 
	mov rdi,fmt_rcd_r
	call emt_stg
	pop r8 
	mov rdi,fmt_spc 
	call emt_stg 
	push r8
	mov r8,QWORD [r8+8+8*1]
	call LB_4973
	pop r8 
	mov rdi,fmt_spc 
	call emt_stg 
	mov rdi,fmt_rcd_r
	call emt_stg
	jmp LB_5005
LB_5003:
	mov rdi,LB_5007
	call emt_stg 
	mov rdi,fmt_rcd_box_l
	call emt_stg
	mov rdi,fmt_rcd_r
	call emt_stg
	jmp LB_5005
LB_5005:
	ret
LB_4972:
	movzx rax,BYTE [r8+6]
	jmp QWORD [LB_5010+8*rax]
LB_5010: dq LB_5008,LB_5009
LB_5008:
	mov rdi,LB_5012
	call emt_stg 
	mov rdi,fmt_rcd_box_l
	call emt_stg
	push r8
	mov r8,QWORD [r8+8+8*0]
	mov rdi,r8
	call emt_s8
	pop r8 
	mov rdi,fmt_spc 
	call emt_stg 
	push r8
	mov r8,QWORD [r8+8+8*1]
	call LB_4972
	pop r8 
	mov rdi,fmt_spc 
	call emt_stg 
	mov rdi,fmt_rcd_r
	call emt_stg
	jmp LB_5011
LB_5009:
	mov rdi,LB_5013
	call emt_stg 
	mov rdi,fmt_rcd_box_l
	call emt_stg
	mov rdi,fmt_rcd_r
	call emt_stg
	jmp LB_5011
LB_5011:
	ret
LB_4956:
	movzx rax,BYTE [r8+6]
	jmp QWORD [LB_5016+8*rax]
LB_5016: dq LB_5014,LB_5015
LB_5014:
	mov rdi,LB_5018
	call emt_stg 
	mov rdi,fmt_rcd_box_l
	call emt_stg
	push r8
	mov r8,QWORD [r8+8+8*0]
	mov rdi,fmt_rcd_box_l
	call emt_stg
	push r8
	mov r8,QWORD [r8+8+8*0]
	mov rdi,r8
	call emt_s8
	pop r8 
	mov rdi,fmt_spc 
	call emt_stg 
	push r8
	mov r8,QWORD [r8+8+8*1]
	call LB_5019
	pop r8 
	mov rdi,fmt_spc 
	call emt_stg 
	push r8
	mov r8,QWORD [r8+8+8*2]
	call LB_5020
	pop r8 
	mov rdi,fmt_spc 
	call emt_stg 
	push r8
	mov r8,QWORD [r8+8+8*3]
	call LB_5021
	pop r8 
	mov rdi,fmt_spc 
	call emt_stg 
	mov rdi,fmt_rcd_r
	call emt_stg
	pop r8 
	mov rdi,fmt_spc 
	call emt_stg 
	push r8
	mov r8,QWORD [r8+8+8*1]
	call LB_4956
	pop r8 
	mov rdi,fmt_spc 
	call emt_stg 
	mov rdi,fmt_rcd_r
	call emt_stg
	jmp LB_5017
LB_5015:
	mov rdi,LB_5022
	call emt_stg 
	mov rdi,fmt_rcd_box_l
	call emt_stg
	mov rdi,fmt_rcd_r
	call emt_stg
	jmp LB_5017
LB_5017:
	ret
LB_5021:
	movzx rax,BYTE [r8+6]
	jmp QWORD [LB_5030+8*rax]
LB_5030: dq LB_5023,LB_5024,LB_5025,LB_5026,LB_5027,LB_5028,LB_5029
LB_5023:
	mov rdi,LB_5032
	call emt_stg 
	mov rdi,fmt_rcd_box_l
	call emt_stg
	push r8
	mov r8,QWORD [r8+8+8*0]
	call LB_4988
	pop r8 
	mov rdi,fmt_spc 
	call emt_stg 
	push r8
	mov r8,QWORD [r8+8+8*1]
	call LB_5033
	pop r8 
	mov rdi,fmt_spc 
	call emt_stg 
	mov rdi,fmt_rcd_r
	call emt_stg
	jmp LB_5031
LB_5024:
	mov rdi,LB_5034
	call emt_stg 
	mov rdi,fmt_rcd_box_l
	call emt_stg
	push r8
	mov r8,QWORD [r8+8+8*0]
	call LB_5035
	pop r8 
	mov rdi,fmt_spc 
	call emt_stg 
	push r8
	mov r8,QWORD [r8+8+8*1]
	call LB_5033
	pop r8 
	mov rdi,fmt_spc 
	call emt_stg 
	mov rdi,fmt_rcd_r
	call emt_stg
	jmp LB_5031
LB_5025:
	mov rdi,LB_5036
	call emt_stg 
	mov rdi,fmt_rcd_box_l
	call emt_stg
	push r8
	mov r8,QWORD [r8+8+8*0]
	call LB_5037
	pop r8 
	mov rdi,fmt_spc 
	call emt_stg 
	push r8
	mov r8,QWORD [r8+8+8*1]
	call LB_5021
	pop r8 
	mov rdi,fmt_spc 
	call emt_stg 
	mov rdi,fmt_rcd_r
	call emt_stg
	jmp LB_5031
LB_5026:
	mov rdi,LB_5038
	call emt_stg 
	mov r8,QWORD [r8+8]
	call LB_5039
	jmp LB_5031
LB_5027:
	mov rdi,LB_5040
	call emt_stg 
	mov rdi,fmt_rcd_box_l
	call emt_stg
	push r8
	mov r8,QWORD [r8+8+8*0]
	call LB_5033
	pop r8 
	mov rdi,fmt_spc 
	call emt_stg 
	push r8
	mov r8,QWORD [r8+8+8*1]
	call LB_5041
	pop r8 
	mov rdi,fmt_spc 
	call emt_stg 
	mov rdi,fmt_rcd_r
	call emt_stg
	jmp LB_5031
LB_5028:
	mov rdi,LB_5042
	call emt_stg 
	mov r8,QWORD [r8+8]
	call LB_5033
	jmp LB_5031
LB_5029:
	mov rdi,LB_5043
	call emt_stg 
	mov r8,QWORD [r8+8]
	mov rdi,r8 
	call emt_r64 
	jmp LB_5031
LB_5031:
	ret
LB_5041:
	movzx rax,BYTE [r8+6]
	jmp QWORD [LB_5046+8*rax]
LB_5046: dq LB_5044,LB_5045
LB_5044:
	mov rdi,LB_5048
	call emt_stg 
	mov r8,QWORD [r8+8]
	call LB_5049
	jmp LB_5047
LB_5045:
	mov rdi,LB_5050
	call emt_stg 
	mov rdi,fmt_rcd_box_l
	call emt_stg
	push r8
	mov r8,QWORD [r8+8+8*0]
	call LB_5051
	pop r8 
	mov rdi,fmt_spc 
	call emt_stg 
	push r8
	mov r8,QWORD [r8+8+8*1]
	call LB_5021
	pop r8 
	mov rdi,fmt_spc 
	call emt_stg 
	mov rdi,fmt_rcd_r
	call emt_stg
	jmp LB_5047
LB_5047:
	ret
LB_5051:
	movzx rax,BYTE [r8+6]
	jmp QWORD [LB_5054+8*rax]
LB_5054: dq LB_5052,LB_5053
LB_5052:
	mov rdi,LB_5056
	call emt_stg 
	mov rdi,fmt_rcd_box_l
	call emt_stg
	push r8
	mov r8,QWORD [r8+8+8*0]
	call LB_5019
	pop r8 
	mov rdi,fmt_spc 
	call emt_stg 
	push r8
	mov r8,QWORD [r8+8+8*1]
	call LB_5051
	pop r8 
	mov rdi,fmt_spc 
	call emt_stg 
	mov rdi,fmt_rcd_r
	call emt_stg
	jmp LB_5055
LB_5053:
	mov rdi,LB_5057
	call emt_stg 
	mov rdi,fmt_rcd_box_l
	call emt_stg
	mov rdi,fmt_rcd_r
	call emt_stg
	jmp LB_5055
LB_5055:
	ret
LB_5049:
	movzx rax,BYTE [r8+6]
	jmp QWORD [LB_5060+8*rax]
LB_5060: dq LB_5058,LB_5059
LB_5058:
	mov rdi,LB_5062
	call emt_stg 
	mov rdi,fmt_rcd_box_l
	call emt_stg
	push r8
	mov r8,QWORD [r8+8+8*0]
	mov rdi,fmt_rcd_box_l
	call emt_stg
	push r8
	mov r8,QWORD [r8+8+8*0]
	call LB_5063
	pop r8 
	mov rdi,fmt_spc 
	call emt_stg 
	push r8
	mov r8,QWORD [r8+8+8*1]
	call LB_5064
	pop r8 
	mov rdi,fmt_spc 
	call emt_stg 
	push r8
	mov r8,QWORD [r8+8+8*2]
	call LB_5065
	pop r8 
	mov rdi,fmt_spc 
	call emt_stg 
	mov rdi,fmt_rcd_r
	call emt_stg
	pop r8 
	mov rdi,fmt_spc 
	call emt_stg 
	push r8
	mov r8,QWORD [r8+8+8*1]
	call LB_5049
	pop r8 
	mov rdi,fmt_spc 
	call emt_stg 
	mov rdi,fmt_rcd_r
	call emt_stg
	jmp LB_5061
LB_5059:
	mov rdi,LB_5066
	call emt_stg 
	mov rdi,fmt_rcd_box_l
	call emt_stg
	push r8
	mov r8,QWORD [r8+8+8*0]
	call LB_5063
	pop r8 
	mov rdi,fmt_spc 
	call emt_stg 
	push r8
	mov r8,QWORD [r8+8+8*1]
	call LB_5064
	pop r8 
	mov rdi,fmt_spc 
	call emt_stg 
	push r8
	mov r8,QWORD [r8+8+8*2]
	call LB_5065
	pop r8 
	mov rdi,fmt_spc 
	call emt_stg 
	mov rdi,fmt_rcd_r
	call emt_stg
	jmp LB_5061
LB_5061:
	ret
LB_5065:
	movzx rax,BYTE [r8+6]
	jmp QWORD [LB_5070+8*rax]
LB_5070: dq LB_5067,LB_5068,LB_5069
LB_5067:
	mov rdi,LB_5072
	call emt_stg 
	mov r8,QWORD [r8+8]
	call LB_5039
	jmp LB_5071
LB_5068:
	mov rdi,LB_5073
	call emt_stg 
	mov rdi,fmt_rcd_box_l
	call emt_stg
	push r8
	mov r8,QWORD [r8+8+8*0]
	call LB_5033
	pop r8 
	mov rdi,fmt_spc 
	call emt_stg 
	push r8
	mov r8,QWORD [r8+8+8*1]
	call LB_5049
	pop r8 
	mov rdi,fmt_spc 
	call emt_stg 
	mov rdi,fmt_rcd_r
	call emt_stg
	jmp LB_5071
LB_5069:
	mov rdi,LB_5074
	call emt_stg 
	mov r8,QWORD [r8+8]
	call LB_5021
	jmp LB_5071
LB_5071:
	ret
LB_5064:
	movzx rax,BYTE [r8+6]
	jmp QWORD [LB_5077+8*rax]
LB_5077: dq LB_5075,LB_5076
LB_5075:
	mov rdi,LB_5079
	call emt_stg 
	mov rdi,fmt_rcd_box_l
	call emt_stg
	push r8
	mov r8,QWORD [r8+8+8*0]
	call LB_5080
	pop r8 
	mov rdi,fmt_spc 
	call emt_stg 
	push r8
	mov r8,QWORD [r8+8+8*1]
	call LB_5064
	pop r8 
	mov rdi,fmt_spc 
	call emt_stg 
	mov rdi,fmt_rcd_r
	call emt_stg
	jmp LB_5078
LB_5076:
	mov rdi,LB_5081
	call emt_stg 
	mov rdi,fmt_rcd_box_l
	call emt_stg
	mov rdi,fmt_rcd_r
	call emt_stg
	jmp LB_5078
LB_5078:
	ret
LB_5080:
	movzx rax,BYTE [r8+6]
	jmp QWORD [LB_5085+8*rax]
LB_5085: dq LB_5082,LB_5083,LB_5084
LB_5082:
	mov rdi,LB_5087
	call emt_stg 
	mov rdi,fmt_rcd_box_l
	call emt_stg
	push r8
	mov r8,QWORD [r8+8+8*0]
	call LB_5033
	pop r8 
	mov rdi,fmt_spc 
	call emt_stg 
	push r8
	mov r8,QWORD [r8+8+8*1]
	call LB_5063
	pop r8 
	mov rdi,fmt_spc 
	call emt_stg 
	mov rdi,fmt_rcd_r
	call emt_stg
	jmp LB_5086
LB_5083:
	mov rdi,LB_5088
	call emt_stg 
	mov rdi,fmt_rcd_box_l
	call emt_stg
	push r8
	mov r8,QWORD [r8+8+8*0]
	call LB_5089
	pop r8 
	mov rdi,fmt_spc 
	call emt_stg 
	push r8
	mov r8,QWORD [r8+8+8*1]
	call LB_5089
	pop r8 
	mov rdi,fmt_spc 
	call emt_stg 
	mov rdi,fmt_rcd_r
	call emt_stg
	jmp LB_5086
LB_5084:
	mov rdi,LB_5090
	call emt_stg 
	mov rdi,fmt_rcd_box_l
	call emt_stg
	push r8
	mov r8,QWORD [r8+8+8*0]
	call LB_5089
	pop r8 
	mov rdi,fmt_spc 
	call emt_stg 
	push r8
	mov r8,QWORD [r8+8+8*1]
	call LB_5089
	pop r8 
	mov rdi,fmt_spc 
	call emt_stg 
	mov rdi,fmt_rcd_r
	call emt_stg
	jmp LB_5086
LB_5086:
	ret
LB_5089:
	movzx rax,BYTE [r8+6]
	jmp QWORD [LB_5093+8*rax]
LB_5093: dq LB_5091,LB_5092
LB_5091:
	mov rdi,LB_5095
	call emt_stg 
	mov r8,QWORD [r8+8]
	call LB_5096
	jmp LB_5094
LB_5092:
	mov rdi,LB_5097
	call emt_stg 
	mov rdi,r8
	call emt_s8
	jmp LB_5094
LB_5094:
	ret
LB_5096:
	movzx rax,BYTE [r8+6]
	jmp QWORD [LB_5100+8*rax]
LB_5100: dq LB_5098,LB_5099
LB_5098:
	mov rdi,LB_5102
	call emt_stg 
	mov r8,QWORD [r8+8]
	call LB_5103
	jmp LB_5101
LB_5099:
	mov rdi,LB_5104
	call emt_stg 
	mov r8,QWORD [r8+8]
	call LB_4988
	jmp LB_5101
LB_5101:
	ret
LB_5103:
	movzx rax,BYTE [r8+6]
	jmp QWORD [LB_5107+8*rax]
LB_5107: dq LB_5105,LB_5106
LB_5105:
	mov rdi,LB_5109
	call emt_stg 
	mov r8,QWORD [r8+8]
	mov rdi,r8 
	call emt_r64 
	jmp LB_5108
LB_5106:
	mov rdi,LB_5110
	call emt_stg 
	mov rdi,r8
	call emt_s8
	jmp LB_5108
LB_5108:
	ret
LB_5063:
	movzx rax,BYTE [r8+6]
	jmp QWORD [LB_5113+8*rax]
LB_5113: dq LB_5111,LB_5112
LB_5111:
	mov rdi,LB_5115
	call emt_stg 
	mov r8,QWORD [r8+8]
	call LB_5116
	jmp LB_5114
LB_5112:
	mov rdi,LB_5117
	call emt_stg 
	mov r8,QWORD [r8+8]
	call LB_5118
	jmp LB_5114
LB_5114:
	ret
LB_5118:
	movzx rax,BYTE [r8+6]
	jmp QWORD [LB_5123+8*rax]
LB_5123: dq LB_5119,LB_5120,LB_5121,LB_5122
LB_5119:
	mov rdi,LB_5125
	call emt_stg 
	mov rdi,fmt_rcd_box_l
	call emt_stg
	push r8
	mov r8,QWORD [r8+8+8*0]
	call LB_4988
	pop r8 
	mov rdi,fmt_spc 
	call emt_stg 
	push r8
	mov r8,QWORD [r8+8+8*1]
	call LB_5063
	pop r8 
	mov rdi,fmt_spc 
	call emt_stg 
	mov rdi,fmt_rcd_r
	call emt_stg
	jmp LB_5124
LB_5120:
	mov rdi,LB_5126
	call emt_stg 
	mov r8,QWORD [r8+8]
	call LB_5096
	jmp LB_5124
LB_5121:
	mov rdi,LB_5127
	call emt_stg 
	mov r8,QWORD [r8+8]
	call LB_5128
	jmp LB_5124
LB_5122:
	mov rdi,LB_5129
	call emt_stg 
	mov rdi,r8
	call emt_s8
	jmp LB_5124
LB_5124:
	ret
LB_5128:
	movzx rax,BYTE [r8+6]
	jmp QWORD [LB_5132+8*rax]
LB_5132: dq LB_5130,LB_5131
LB_5130:
	mov rdi,LB_5134
	call emt_stg 
	mov rdi,r8
	call emt_s8
	jmp LB_5133
LB_5131:
	mov rdi,LB_5135
	call emt_stg 
	mov rdi,fmt_rcd_box_l
	call emt_stg
	mov rdi,fmt_rcd_r
	call emt_stg
	jmp LB_5133
LB_5133:
	ret
LB_5116:
	movzx rax,BYTE [r8+6]
	jmp QWORD [LB_5138+8*rax]
LB_5138: dq LB_5136,LB_5137
LB_5136:
	mov rdi,LB_5140
	call emt_stg 
	mov rdi,fmt_rcd_box_l
	call emt_stg
	push r8
	mov r8,QWORD [r8+8+8*0]
	call LB_5063
	pop r8 
	mov rdi,fmt_spc 
	call emt_stg 
	push r8
	mov r8,QWORD [r8+8+8*1]
	call LB_5116
	pop r8 
	mov rdi,fmt_spc 
	call emt_stg 
	mov rdi,fmt_rcd_r
	call emt_stg
	jmp LB_5139
LB_5137:
	mov rdi,LB_5141
	call emt_stg 
	mov rdi,fmt_rcd_box_l
	call emt_stg
	mov rdi,fmt_rcd_r
	call emt_stg
	jmp LB_5139
LB_5139:
	ret
LB_5039:
	movzx rax,BYTE [r8+6]
	jmp QWORD [LB_5144+8*rax]
LB_5144: dq LB_5142,LB_5143
LB_5142:
	mov rdi,LB_5146
	call emt_stg 
	mov rdi,fmt_rcd_box_l
	call emt_stg
	push r8
	mov r8,QWORD [r8+8+8*0]
	mov rdi,fmt_rcd_box_l
	call emt_stg
	push r8
	mov r8,QWORD [r8+8+8*0]
	call LB_5064
	pop r8 
	mov rdi,fmt_spc 
	call emt_stg 
	push r8
	mov r8,QWORD [r8+8+8*1]
	call LB_5065
	pop r8 
	mov rdi,fmt_spc 
	call emt_stg 
	mov rdi,fmt_rcd_r
	call emt_stg
	pop r8 
	mov rdi,fmt_spc 
	call emt_stg 
	push r8
	mov r8,QWORD [r8+8+8*1]
	call LB_5039
	pop r8 
	mov rdi,fmt_spc 
	call emt_stg 
	mov rdi,fmt_rcd_r
	call emt_stg
	jmp LB_5145
LB_5143:
	mov rdi,LB_5147
	call emt_stg 
	mov rdi,fmt_rcd_box_l
	call emt_stg
	push r8
	mov r8,QWORD [r8+8+8*0]
	call LB_5064
	pop r8 
	mov rdi,fmt_spc 
	call emt_stg 
	push r8
	mov r8,QWORD [r8+8+8*1]
	call LB_5065
	pop r8 
	mov rdi,fmt_spc 
	call emt_stg 
	mov rdi,fmt_rcd_r
	call emt_stg
	jmp LB_5145
LB_5145:
	ret
LB_5037:
	movzx rax,BYTE [r8+6]
	jmp QWORD [LB_5152+8*rax]
LB_5152: dq LB_5148,LB_5149,LB_5150,LB_5151
LB_5148:
	mov rdi,LB_5154
	call emt_stg 
	mov rdi,fmt_rcd_box_l
	call emt_stg
	push r8
	mov r8,QWORD [r8+8+8*0]
	call LB_4988
	pop r8 
	mov rdi,fmt_spc 
	call emt_stg 
	push r8
	mov r8,QWORD [r8+8+8*1]
	call LB_5033
	pop r8 
	mov rdi,fmt_spc 
	call emt_stg 
	push r8
	mov r8,QWORD [r8+8+8*2]
	call LB_5019
	pop r8 
	mov rdi,fmt_spc 
	call emt_stg 
	mov rdi,fmt_rcd_r
	call emt_stg
	jmp LB_5153
LB_5149:
	mov rdi,LB_5155
	call emt_stg 
	mov rdi,fmt_rcd_box_l
	call emt_stg
	push r8
	mov r8,QWORD [r8+8+8*0]
	call LB_5035
	pop r8 
	mov rdi,fmt_spc 
	call emt_stg 
	push r8
	mov r8,QWORD [r8+8+8*1]
	call LB_5033
	pop r8 
	mov rdi,fmt_spc 
	call emt_stg 
	push r8
	mov r8,QWORD [r8+8+8*2]
	call LB_5019
	pop r8 
	mov rdi,fmt_spc 
	call emt_stg 
	mov rdi,fmt_rcd_r
	call emt_stg
	jmp LB_5153
LB_5150:
	mov rdi,LB_5156
	call emt_stg 
	mov rdi,fmt_rcd_box_l
	call emt_stg
	push r8
	mov r8,QWORD [r8+8+8*0]
	call LB_5096
	pop r8 
	mov rdi,fmt_spc 
	call emt_stg 
	push r8
	mov r8,QWORD [r8+8+8*1]
	call LB_5033
	pop r8 
	mov rdi,fmt_spc 
	call emt_stg 
	push r8
	mov r8,QWORD [r8+8+8*2]
	call LB_5019
	pop r8 
	mov rdi,fmt_spc 
	call emt_stg 
	mov rdi,fmt_rcd_r
	call emt_stg
	jmp LB_5153
LB_5151:
	mov rdi,LB_5157
	call emt_stg 
	mov rdi,fmt_rcd_box_l
	call emt_stg
	push r8
	mov r8,QWORD [r8+8+8*0]
	call LB_5158
	pop r8 
	mov rdi,fmt_spc 
	call emt_stg 
	push r8
	mov r8,QWORD [r8+8+8*1]
	call LB_5159
	pop r8 
	mov rdi,fmt_spc 
	call emt_stg 
	push r8
	mov r8,QWORD [r8+8+8*2]
	call LB_5160
	pop r8 
	mov rdi,fmt_spc 
	call emt_stg 
	mov rdi,fmt_rcd_r
	call emt_stg
	jmp LB_5153
LB_5153:
	ret
LB_5160:
	movzx rax,BYTE [r8+6]
	jmp QWORD [LB_5163+8*rax]
LB_5163: dq LB_5161,LB_5162
LB_5161:
	mov rdi,LB_5165
	call emt_stg 
	mov rdi,fmt_rcd_box_l
	call emt_stg
	push r8
	mov r8,QWORD [r8+8+8*0]
	call LB_5166
	pop r8 
	mov rdi,fmt_spc 
	call emt_stg 
	push r8
	mov r8,QWORD [r8+8+8*1]
	call LB_5160
	pop r8 
	mov rdi,fmt_spc 
	call emt_stg 
	mov rdi,fmt_rcd_r
	call emt_stg
	jmp LB_5164
LB_5162:
	mov rdi,LB_5167
	call emt_stg 
	mov rdi,fmt_rcd_box_l
	call emt_stg
	mov rdi,fmt_rcd_r
	call emt_stg
	jmp LB_5164
LB_5164:
	ret
LB_5166:
	movzx rax,BYTE [r8+6]
	jmp QWORD [LB_5170+8*rax]
LB_5170: dq LB_5168,LB_5169
LB_5168:
	mov rdi,LB_5172
	call emt_stg 
	mov r8,QWORD [r8+8]
	call LB_5128
	jmp LB_5171
LB_5169:
	mov rdi,LB_5173
	call emt_stg 
	mov rdi,r8
	call emt_s8
	jmp LB_5171
LB_5171:
	ret
LB_5159:
	movzx rax,BYTE [r8+6]
	jmp QWORD [LB_5176+8*rax]
LB_5176: dq LB_5174,LB_5175
LB_5174:
	mov rdi,LB_5178
	call emt_stg 
	mov rdi,fmt_rcd_box_l
	call emt_stg
	push r8
	mov r8,QWORD [r8+8+8*0]
	call LB_5035
	pop r8 
	mov rdi,fmt_spc 
	call emt_stg 
	push r8
	mov r8,QWORD [r8+8+8*1]
	call LB_5159
	pop r8 
	mov rdi,fmt_spc 
	call emt_stg 
	mov rdi,fmt_rcd_r
	call emt_stg
	jmp LB_5177
LB_5175:
	mov rdi,LB_5179
	call emt_stg 
	mov rdi,fmt_rcd_box_l
	call emt_stg
	mov rdi,fmt_rcd_r
	call emt_stg
	jmp LB_5177
LB_5177:
	ret
LB_5158:
	movzx rax,BYTE [r8+6]
	jmp QWORD [LB_5182+8*rax]
LB_5182: dq LB_5180,LB_5181
LB_5180:
	mov rdi,LB_5184
	call emt_stg 
	mov rdi,fmt_rcd_box_l
	call emt_stg
	push r8
	mov r8,QWORD [r8+8+8*0]
	call LB_5185
	pop r8 
	mov rdi,fmt_spc 
	call emt_stg 
	push r8
	mov r8,QWORD [r8+8+8*1]
	call LB_5158
	pop r8 
	mov rdi,fmt_spc 
	call emt_stg 
	mov rdi,fmt_rcd_r
	call emt_stg
	jmp LB_5183
LB_5181:
	mov rdi,LB_5186
	call emt_stg 
	mov rdi,fmt_rcd_box_l
	call emt_stg
	mov rdi,fmt_rcd_r
	call emt_stg
	jmp LB_5183
LB_5183:
	ret
LB_5185:
	movzx rax,BYTE [r8+6]
	jmp QWORD [LB_5191+8*rax]
LB_5191: dq LB_5187,LB_5188,LB_5189,LB_5190
LB_5187:
	mov rdi,LB_5193
	call emt_stg 
	mov rdi,r8
	call emt_s8
	jmp LB_5192
LB_5188:
	mov rdi,LB_5194
	call emt_stg 
	mov r8,QWORD [r8+8]
	call LB_5096
	jmp LB_5192
LB_5189:
	mov rdi,LB_5195
	call emt_stg 
	mov rdi,fmt_rcd_box_l
	call emt_stg
	push r8
	mov r8,QWORD [r8+8+8*0]
	call LB_5196
	pop r8 
	mov rdi,fmt_spc 
	call emt_stg 
	push r8
	mov r8,QWORD [r8+8+8*1]
	mov rdi,r8 
	call emt_r64 
	pop r8 
	mov rdi,fmt_spc 
	call emt_stg 
	mov rdi,fmt_rcd_r
	call emt_stg
	jmp LB_5192
LB_5190:
	mov rdi,LB_5197
	call emt_stg 
	mov rdi,fmt_rcd_box_l
	call emt_stg
	push r8
	mov r8,QWORD [r8+8+8*0]
	mov rdi,r8 
	call emt_r64 
	pop r8 
	mov rdi,fmt_spc 
	call emt_stg 
	push r8
	mov r8,QWORD [r8+8+8*1]
	mov rdi,r8
	call emt_s8
	pop r8 
	mov rdi,fmt_spc 
	call emt_stg 
	mov rdi,fmt_rcd_r
	call emt_stg
	jmp LB_5192
LB_5192:
	ret
LB_5196:
	movzx rax,BYTE [r8+6]
	jmp QWORD [LB_5202+8*rax]
LB_5202: dq LB_5198,LB_5199,LB_5200,LB_5201
LB_5198:
	mov rdi,LB_5204
	call emt_stg 
	mov rdi,fmt_rcd_box_l
	call emt_stg
	mov rdi,fmt_rcd_r
	call emt_stg
	jmp LB_5203
LB_5199:
	mov rdi,LB_5205
	call emt_stg 
	mov rdi,fmt_rcd_box_l
	call emt_stg
	mov rdi,fmt_rcd_r
	call emt_stg
	jmp LB_5203
LB_5200:
	mov rdi,LB_5206
	call emt_stg 
	mov rdi,fmt_rcd_box_l
	call emt_stg
	mov rdi,fmt_rcd_r
	call emt_stg
	jmp LB_5203
LB_5201:
	mov rdi,LB_5207
	call emt_stg 
	mov rdi,fmt_rcd_box_l
	call emt_stg
	mov rdi,fmt_rcd_r
	call emt_stg
	jmp LB_5203
LB_5203:
	ret
LB_5035:
	movzx rax,BYTE [r8+6]
	jmp QWORD [LB_5210+8*rax]
LB_5210: dq LB_5208,LB_5209
LB_5208:
	mov rdi,LB_5212
	call emt_stg 
	mov r8,QWORD [r8+8]
	call LB_5096
	jmp LB_5211
LB_5209:
	mov rdi,LB_5213
	call emt_stg 
	mov rdi,r8
	call emt_s8
	jmp LB_5211
LB_5211:
	ret
LB_5033:
	movzx rax,BYTE [r8+6]
	jmp QWORD [LB_5216+8*rax]
LB_5216: dq LB_5214,LB_5215
LB_5214:
	mov rdi,LB_5218
	call emt_stg 
	mov r8,QWORD [r8+8]
	call LB_5219
	jmp LB_5217
LB_5215:
	mov rdi,LB_5220
	call emt_stg 
	mov r8,QWORD [r8+8]
	call LB_5035
	jmp LB_5217
LB_5217:
	ret
LB_5219:
	movzx rax,BYTE [r8+6]
	jmp QWORD [LB_5223+8*rax]
LB_5223: dq LB_5221,LB_5222
LB_5221:
	mov rdi,LB_5225
	call emt_stg 
	mov rdi,fmt_rcd_box_l
	call emt_stg
	push r8
	mov r8,QWORD [r8+8+8*0]
	call LB_5033
	pop r8 
	mov rdi,fmt_spc 
	call emt_stg 
	push r8
	mov r8,QWORD [r8+8+8*1]
	call LB_5219
	pop r8 
	mov rdi,fmt_spc 
	call emt_stg 
	mov rdi,fmt_rcd_r
	call emt_stg
	jmp LB_5224
LB_5222:
	mov rdi,LB_5226
	call emt_stg 
	mov rdi,fmt_rcd_box_l
	call emt_stg
	mov rdi,fmt_rcd_r
	call emt_stg
	jmp LB_5224
LB_5224:
	ret
LB_5020:
	movzx rax,BYTE [r8+6]
	jmp QWORD [LB_5229+8*rax]
LB_5229: dq LB_5227,LB_5228
LB_5227:
	mov rdi,LB_5231
	call emt_stg 
	mov r8,QWORD [r8+8]
	call LB_4975
	jmp LB_5230
LB_5228:
	mov rdi,LB_5232
	call emt_stg 
	mov rdi,fmt_rcd_box_l
	call emt_stg
	mov rdi,fmt_rcd_r
	call emt_stg
	jmp LB_5230
LB_5230:
	ret
LB_5019:
	movzx rax,BYTE [r8+6]
	jmp QWORD [LB_5235+8*rax]
LB_5235: dq LB_5233,LB_5234
LB_5233:
	mov rdi,LB_5237
	call emt_stg 
	mov r8,QWORD [r8+8]
	call LB_5051
	jmp LB_5236
LB_5234:
	mov rdi,LB_5238
	call emt_stg 
	mov r8,QWORD [r8+8]
	call LB_5166
	jmp LB_5236
LB_5236:
	ret
LB_4954:
	movzx rax,BYTE [r8+6]
	jmp QWORD [LB_5242+8*rax]
LB_5242: dq LB_5239,LB_5240,LB_5241
LB_5239:
	mov rdi,LB_5244
	call emt_stg 
	mov rdi,fmt_rcd_box_l
	call emt_stg
	push r8
	mov r8,QWORD [r8+8+8*0]
	call LB_5019
	pop r8 
	mov rdi,fmt_spc 
	call emt_stg 
	push r8
	mov r8,QWORD [r8+8+8*1]
	call LB_5020
	pop r8 
	mov rdi,fmt_spc 
	call emt_stg 
	push r8
	mov r8,QWORD [r8+8+8*2]
	call LB_5021
	pop r8 
	mov rdi,fmt_spc 
	call emt_stg 
	mov rdi,fmt_rcd_r
	call emt_stg
	jmp LB_5243
LB_5240:
	mov rdi,LB_5245
	call emt_stg 
	mov r8,QWORD [r8+8]
	call LB_5096
	jmp LB_5243
LB_5241:
	mov rdi,LB_5246
	call emt_stg 
	mov r8,QWORD [r8+8]
	call LB_5021
	jmp LB_5243
LB_5243:
	ret
LB_4952:
	movzx rax,BYTE [r8+6]
	jmp QWORD [LB_5249+8*rax]
LB_5249: dq LB_5247,LB_5248
LB_5247:
	mov rdi,LB_5251
	call emt_stg 
	mov rdi,fmt_rcd_box_l
	call emt_stg
	push r8
	mov r8,QWORD [r8+8+8*0]
	mov rdi,fmt_rcd_box_l
	call emt_stg
	push r8
	mov r8,QWORD [r8+8+8*0]
	mov rdi,r8
	call emt_s8
	pop r8 
	mov rdi,fmt_spc 
	call emt_stg 
	push r8
	mov r8,QWORD [r8+8+8*1]
	call LB_5252
	pop r8 
	mov rdi,fmt_spc 
	call emt_stg 
	mov rdi,fmt_rcd_r
	call emt_stg
	pop r8 
	mov rdi,fmt_spc 
	call emt_stg 
	push r8
	mov r8,QWORD [r8+8+8*1]
	call LB_4952
	pop r8 
	mov rdi,fmt_spc 
	call emt_stg 
	mov rdi,fmt_rcd_r
	call emt_stg
	jmp LB_5250
LB_5248:
	mov rdi,LB_5253
	call emt_stg 
	mov rdi,fmt_rcd_box_l
	call emt_stg
	mov rdi,fmt_rcd_r
	call emt_stg
	jmp LB_5250
LB_5250:
	ret
LB_5252:
	movzx rax,BYTE [r8+6]
	jmp QWORD [LB_5256+8*rax]
LB_5256: dq LB_5254,LB_5255
LB_5254:
	mov rdi,LB_5258
	call emt_stg 
	mov r8,QWORD [r8+8]
	call LB_5259
	jmp LB_5257
LB_5255:
	mov rdi,LB_5260
	call emt_stg 
	mov r8,QWORD [r8+8]
	call LB_5261
	jmp LB_5257
LB_5257:
	ret
LB_5261:
	movzx rax,BYTE [r8+6]
	jmp QWORD [LB_5264+8*rax]
LB_5264: dq LB_5262,LB_5263
LB_5262:
	mov rdi,LB_5266
	call emt_stg 
	mov rdi,fmt_rcd_box_l
	call emt_stg
	push r8
	mov r8,QWORD [r8+8+8*0]
	call LB_5160
	pop r8 
	mov rdi,fmt_spc 
	call emt_stg 
	push r8
	mov r8,QWORD [r8+8+8*1]
	call LB_5019
	pop r8 
	mov rdi,fmt_spc 
	call emt_stg 
	push r8
	mov r8,QWORD [r8+8+8*2]
	call LB_5021
	pop r8 
	mov rdi,fmt_spc 
	call emt_stg 
	push r8
	mov r8,QWORD [r8+8+8*3]
	call LB_5267
	pop r8 
	mov rdi,fmt_spc 
	call emt_stg 
	push r8
	mov r8,QWORD [r8+8+8*4]
	call LB_5268
	pop r8 
	mov rdi,fmt_spc 
	call emt_stg 
	push r8
	mov r8,QWORD [r8+8+8*5]
	call LB_5269
	pop r8 
	mov rdi,fmt_spc 
	call emt_stg 
	push r8
	mov r8,QWORD [r8+8+8*6]
	call LB_5261
	pop r8 
	mov rdi,fmt_spc 
	call emt_stg 
	mov rdi,fmt_rcd_r
	call emt_stg
	jmp LB_5265
LB_5263:
	mov rdi,LB_5270
	call emt_stg 
	mov rdi,fmt_rcd_box_l
	call emt_stg
	push r8
	mov r8,QWORD [r8+8+8*0]
	call LB_5160
	pop r8 
	mov rdi,fmt_spc 
	call emt_stg 
	push r8
	mov r8,QWORD [r8+8+8*1]
	call LB_5019
	pop r8 
	mov rdi,fmt_spc 
	call emt_stg 
	push r8
	mov r8,QWORD [r8+8+8*2]
	call LB_5021
	pop r8 
	mov rdi,fmt_spc 
	call emt_stg 
	push r8
	mov r8,QWORD [r8+8+8*3]
	call LB_5267
	pop r8 
	mov rdi,fmt_spc 
	call emt_stg 
	push r8
	mov r8,QWORD [r8+8+8*4]
	call LB_5268
	pop r8 
	mov rdi,fmt_spc 
	call emt_stg 
	push r8
	mov r8,QWORD [r8+8+8*5]
	call LB_5269
	pop r8 
	mov rdi,fmt_spc 
	call emt_stg 
	mov rdi,fmt_rcd_r
	call emt_stg
	jmp LB_5265
LB_5265:
	ret
LB_5269:
	movzx rax,BYTE [r8+6]
	jmp QWORD [LB_5273+8*rax]
LB_5273: dq LB_5271,LB_5272
LB_5271:
	mov rdi,LB_5275
	call emt_stg 
	mov rdi,fmt_rcd_box_l
	call emt_stg
	push r8
	mov r8,QWORD [r8+8+8*0]
	call LB_5019
	pop r8 
	mov rdi,fmt_spc 
	call emt_stg 
	push r8
	mov r8,QWORD [r8+8+8*1]
	call LB_5261
	pop r8 
	mov rdi,fmt_spc 
	call emt_stg 
	mov rdi,fmt_rcd_r
	call emt_stg
	jmp LB_5274
LB_5272:
	mov rdi,LB_5276
	call emt_stg 
	mov rdi,fmt_rcd_box_l
	call emt_stg
	mov rdi,fmt_rcd_r
	call emt_stg
	jmp LB_5274
LB_5274:
	ret
LB_5268:
	movzx rax,BYTE [r8+6]
	jmp QWORD [LB_5280+8*rax]
LB_5280: dq LB_5277,LB_5278,LB_5279
LB_5277:
	mov rdi,LB_5282
	call emt_stg 
	mov r8,QWORD [r8+8]
	call LB_5283
	jmp LB_5281
LB_5278:
	mov rdi,LB_5284
	call emt_stg 
	mov rdi,fmt_rcd_box_l
	call emt_stg
	push r8
	mov r8,QWORD [r8+8+8*0]
	call LB_5285
	pop r8 
	mov rdi,fmt_spc 
	call emt_stg 
	push r8
	mov r8,QWORD [r8+8+8*1]
	call LB_5268
	pop r8 
	mov rdi,fmt_spc 
	call emt_stg 
	mov rdi,fmt_rcd_r
	call emt_stg
	jmp LB_5281
LB_5279:
	mov rdi,LB_5286
	call emt_stg 
	mov rdi,fmt_rcd_box_l
	call emt_stg
	mov rdi,fmt_rcd_r
	call emt_stg
	jmp LB_5281
LB_5281:
	ret
LB_5285:
	movzx rax,BYTE [r8+6]
	jmp QWORD [LB_5289+8*rax]
LB_5289: dq LB_5287,LB_5288
LB_5287:
	mov rdi,LB_5291
	call emt_stg 
	mov r8,QWORD [r8+8]
	call LB_5292
	jmp LB_5290
LB_5288:
	mov rdi,LB_5293
	call emt_stg 
	mov r8,QWORD [r8+8]
	call LB_5292
	jmp LB_5290
LB_5290:
	ret
LB_5292:
	movzx rax,BYTE [r8+6]
	jmp QWORD [LB_5296+8*rax]
LB_5296: dq LB_5294,LB_5295
LB_5294:
	mov rdi,LB_5298
	call emt_stg 
	mov r8,QWORD [r8+8]
	call LB_4988
	jmp LB_5297
LB_5295:
	mov rdi,LB_5299
	call emt_stg 
	mov rdi,r8
	call emt_s8
	jmp LB_5297
LB_5297:
	ret
LB_5283:
	movzx rax,BYTE [r8+6]
	jmp QWORD [LB_5302+8*rax]
LB_5302: dq LB_5300,LB_5301
LB_5300:
	mov rdi,LB_5304
	call emt_stg 
	mov rdi,fmt_rcd_box_l
	call emt_stg
	push r8
	mov r8,QWORD [r8+8+8*0]
	call LB_5285
	pop r8 
	mov rdi,fmt_spc 
	call emt_stg 
	push r8
	mov r8,QWORD [r8+8+8*1]
	call LB_5283
	pop r8 
	mov rdi,fmt_spc 
	call emt_stg 
	mov rdi,fmt_rcd_r
	call emt_stg
	jmp LB_5303
LB_5301:
	mov rdi,LB_5305
	call emt_stg 
	mov rdi,fmt_rcd_box_l
	call emt_stg
	mov rdi,fmt_rcd_r
	call emt_stg
	jmp LB_5303
LB_5303:
	ret
LB_5267:
	movzx rax,BYTE [r8+6]
	jmp QWORD [LB_5309+8*rax]
LB_5309: dq LB_5306,LB_5307,LB_5308
LB_5306:
	mov rdi,LB_5311
	call emt_stg 
	mov rdi,fmt_rcd_box_l
	call emt_stg
	mov rdi,fmt_rcd_r
	call emt_stg
	jmp LB_5310
LB_5307:
	mov rdi,LB_5312
	call emt_stg 
	mov rdi,fmt_rcd_box_l
	call emt_stg
	mov rdi,fmt_rcd_r
	call emt_stg
	jmp LB_5310
LB_5308:
	mov rdi,LB_5313
	call emt_stg 
	mov rdi,fmt_rcd_box_l
	call emt_stg
	mov rdi,fmt_rcd_r
	call emt_stg
	jmp LB_5310
LB_5310:
	ret
LB_5259:
	movzx rax,BYTE [r8+6]
	jmp QWORD [LB_5316+8*rax]
LB_5316: dq LB_5314,LB_5315
LB_5314:
	mov rdi,LB_5318
	call emt_stg 
	mov rdi,fmt_rcd_box_l
	call emt_stg
	push r8
	mov r8,QWORD [r8+8+8*0]
	call LB_5128
	pop r8 
	mov rdi,fmt_spc 
	call emt_stg 
	push r8
	mov r8,QWORD [r8+8+8*1]
	call LB_5267
	pop r8 
	mov rdi,fmt_spc 
	call emt_stg 
	push r8
	mov r8,QWORD [r8+8+8*2]
	call LB_5268
	pop r8 
	mov rdi,fmt_spc 
	call emt_stg 
	push r8
	mov r8,QWORD [r8+8+8*3]
	call LB_5319
	pop r8 
	mov rdi,fmt_spc 
	call emt_stg 
	push r8
	mov r8,QWORD [r8+8+8*4]
	call LB_5259
	pop r8 
	mov rdi,fmt_spc 
	call emt_stg 
	mov rdi,fmt_rcd_r
	call emt_stg
	jmp LB_5317
LB_5315:
	mov rdi,LB_5320
	call emt_stg 
	mov rdi,fmt_rcd_box_l
	call emt_stg
	push r8
	mov r8,QWORD [r8+8+8*0]
	call LB_5128
	pop r8 
	mov rdi,fmt_spc 
	call emt_stg 
	push r8
	mov r8,QWORD [r8+8+8*1]
	call LB_5267
	pop r8 
	mov rdi,fmt_spc 
	call emt_stg 
	push r8
	mov r8,QWORD [r8+8+8*2]
	call LB_5268
	pop r8 
	mov rdi,fmt_spc 
	call emt_stg 
	push r8
	mov r8,QWORD [r8+8+8*3]
	call LB_5319
	pop r8 
	mov rdi,fmt_spc 
	call emt_stg 
	mov rdi,fmt_rcd_r
	call emt_stg
	jmp LB_5317
LB_5317:
	ret
LB_5319:
	movzx rax,BYTE [r8+6]
	jmp QWORD [LB_5323+8*rax]
LB_5323: dq LB_5321,LB_5322
LB_5321:
	mov rdi,LB_5325
	call emt_stg 
	mov r8,QWORD [r8+8]
	call LB_5259
	jmp LB_5324
LB_5322:
	mov rdi,LB_5326
	call emt_stg 
	mov rdi,fmt_rcd_box_l
	call emt_stg
	mov rdi,fmt_rcd_r
	call emt_stg
	jmp LB_5324
LB_5324:
	ret
LB_4950:
	movzx rax,BYTE [r8+6]
	jmp QWORD [LB_5329+8*rax]
LB_5329: dq LB_5327,LB_5328
LB_5327:
	mov rdi,LB_5331
	call emt_stg 
	mov r8,QWORD [r8+8]
	call LB_4925
	jmp LB_5330
LB_5328:
	mov rdi,LB_5332
	call emt_stg 
	mov r8,QWORD [r8+8]
	call LB_4988
	jmp LB_5330
LB_5330:
	ret
LB_4912:
;; rsp=0 , %2666~2'(= a3◂ [ a35◂ [ a2◂ [ a31◂ [ ]]]] ) %2662~0'(= {| l |} ) %2659~1'(= {| l |} ) 
;; ? 2'(= a3◂ [ a35◂ [ a2◂ [ a31◂ [ ]]]] ) ⊢ 0(<2)◂3'(= a35◂ [ a2◂ [ a31◂ [ ]]] )
	mov rdi,r8
	cmp BYTE [rdi+6],0
	jnz LB_5333
	mov rax,QWORD [rdi+8]
	mov r9,rax
;; rsp=0 , %2667~3'(= a35◂ [ a2◂ [ a31◂ [ ]]] ) %2662~0'(= {| l |} ) %2659~1'(= {| l |} ) 
;; ? 3'(= a35◂ [ a2◂ [ a31◂ [ ]]] ) ⊢ 0(<2)◂2'(= a2◂ [ a31◂ [ ]] )
	mov rdi,r9
	cmp BYTE [rdi+6],0
	jnz LB_5334
	mov rax,QWORD [rdi+8]
	mov r8,rax
;; rsp=0 , %2669~2'(= a2◂ [ a31◂ [ ]] ) %2662~0'(= {| l |} ) %2659~1'(= {| l |} ) 
; _#8 %[ "D0" ] ⊢ %[ "D0" ]
	mov rdi,fmt_emt
	call emt_stg
	mov rdi,LB_5335
	call emt_stg 
	mov rdi,fmt_nl
	call emt_stg
	jmp LB_5336
LB_5336:
; .dlt.ptn %[ "D0" ]
;; rsp=0 , %2669~2'(= a2◂ [ a31◂ [ ]] ) %2662~0'(= {| l |} ) %2659~1'(= {| l |} ) 
; rsp_d=0, #177 { %[ 0r ] 2'(= a2◂ [ a31◂ [ ]] ) } ⊢ { 3'(= r ) 2'(= {| l |} ) }
	sub rsp,16
	mov QWORD [rsp+8*0],r13
	mov QWORD [rsp+8*1],r14
; .mov_ptn2 { %[ 0r ] 2'(= a2◂ [ a31◂ [ ]] ) } ⊢ { 0'(= r ) 1'(= a2◂ [ a31◂ [ ]] ) }
; .mov_ptn 2'(= a2◂ [ a31◂ [ ]] ) ⊢ 1'(= a2◂ [ a31◂ [ ]] )
	mov rax,r8
	mov r14,rax
; .mov_ptn %[ 0r ] ⊢ 0'(= r )
	mov rax,0
	mov r13,rax
	call ETR_177

	mov rax,QWORD [rsp-8+8*2]
	mov r8,r14
	mov r14,rax
	mov rax,QWORD [rsp-8+8*1]
	mov r9,r13
	mov r13,rax
	add rsp,16
;; rsp=0 , %2672~2'(= {| l |} ) %2671~3'(= r ) %2662~0'(= {| l |} ) %2659~1'(= {| l |} ) 
; _#7 2'(= {| l |} ) ⊢ { 2'(= {| l |} ) 4'(= r ) }
	mov rdi,r8
	mov rdi,QWORD [rdi] 
	mov rsi,0x0000_ffff_ffff_ffff
	and rdi,rsi 
	mov r10,rdi
;; rsp=0 , %2674~4'(= r ) %2673~2'(= {| l |} ) %2671~3'(= r ) %2662~0'(= {| l |} ) %2659~1'(= {| l |} ) 
; _#8 4'(= r ) ⊢ 4'(= r )
	mov rdi,fmt_emt
	call emt_stg
	C_PUSH_REGS
	mov r8,r10
	mov rdi,r8 
	call emt_r64 
	C_POP_REGS
	mov rdi,fmt_nl
	call emt_stg
	jmp LB_5337
LB_5337:
; .dlt.ptn 4'(= r )
;; rsp=0 , %2673~2'(= {| l |} ) %2671~3'(= r ) %2662~0'(= {| l |} ) %2659~1'(= {| l |} ) 
; _#8 3'(= r ) ⊢ 3'(= r )
	mov rdi,fmt_emt
	call emt_stg
	C_PUSH_REGS
	mov r8,r9
	mov rdi,r8 
	call emt_r64 
	C_POP_REGS
	mov rdi,fmt_nl
	call emt_stg
	jmp LB_5338
LB_5338:
; .dlt.ptn 3'(= r )
;; rsp=0 , %2673~2'(= {| l |} ) %2662~0'(= {| l |} ) %2659~1'(= {| l |} ) 
; _#8 2'(= {| l |} ) ⊢ 2'(= {| l |} )
	mov rdi,fmt_emt
	call emt_stg
	C_PUSH_REGS
	mov r8,r8
	mov rdi,r8
	call emt_s8
	C_POP_REGS
	mov rdi,fmt_nl
	call emt_stg
	jmp LB_5339
LB_5339:
; .dlt.ptn 2'(= {| l |} )
	mov rdi,r8
	call free_s8 
;; rsp=0 , %2662~0'(= {| l |} ) %2659~1'(= {| l |} ) 
; ∎ { }
; .dlt.ptn 0'(= {| l |} )
	mov rdi,r13
	call free_s8 
; .dlt.ptn 1'(= {| l |} )
	mov rdi,r14
	call free_s8 
; .mov_ptn2 { } ⊢ { }
	ret
LB_5334:
;; ?. 3'(= a35◂ [ a2◂ [ a31◂ [ ]]] ) ⊢ 1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] )
	mov rax,QWORD [rdi+8]
	mov r8,rax
;; rsp=0 , %2668~2'(= a2◂ [ *{ rr{| l |}}] ) %2662~0'(= {| l |} ) %2659~1'(= {| l |} ) 
	mov rdi,LB_5340
	call emt_stg 
	jmp err
LB_5333:
;; ?. 2'(= a3◂ [ a35◂ [ a2◂ [ a31◂ [ ]]]] ) ⊢ 1(<2)◂{ }
;; rsp=0 , %2662~0'(= {| l |} ) %2659~1'(= {| l |} ) 
	mov rdi,LB_5341
	call emt_stg 
	jmp err
ETR_274: ; E1 { } ⊢ { } : ({ }→{ })
;; rsp=0 , 
; » _^ .. ⊢ ..
; .. //
	mov rdi,0
	add rdi,3
	push rdi 
	call mlc_s8
	pop rdi
	mov r13,rax
	lea rdi,[rax+7+rdi]
	std 
	mov QWORD [tmp],rcx 
	lea rsi,[LB_5342+3-1]
	mov rcx,3
	rep movsb
	mov rcx,QWORD [tmp] 
;; rsp=0 , %2678~0'(= {| l |} ) 
; rsp_d=0, #205 { 0'(= {| l |} ) %[ 0r ] } ⊢ { 0'(= {| l |} ) 1'(= r ) 2'(= a3◂ [ a8◂ [ a13◂ [ {| l |}]]] ) }
; .mov_ptn2 { 0'(= {| l |} ) %[ 0r ] } ⊢ { 0'(= {| l |} ) 1'(= r ) }
; .mov_ptn %[ 0r ] ⊢ 1'(= r )
	mov rax,0
	mov r14,rax
	call ETR_205

;; rsp=0 , %2681~2'(= a3◂ [ a8◂ [ a13◂ [ {| l |}]]] ) %2680~1'(= r ) %2679~0'(= {| l |} ) 
; _#8 1'(= r ) ⊢ 1'(= r )
	mov rdi,fmt_emt
	call emt_stg
	C_PUSH_REGS
	mov r8,r14
	mov rdi,r8 
	call emt_r64 
	C_POP_REGS
	mov rdi,fmt_nl
	call emt_stg
	jmp LB_5343
LB_5343:
; .dlt.ptn 1'(= r )
;; rsp=0 , %2681~2'(= a3◂ [ a8◂ [ a13◂ [ {| l |}]]] ) %2679~0'(= {| l |} ) 
; _#8 2'(= a3◂ [ a8◂ [ a13◂ [ {| l |}]]] ) ⊢ 2'(= a3◂ [ a8◂ [ a13◂ [ {| l |}]]] )
	mov rdi,fmt_emt
	call emt_stg
	C_PUSH_REGS
	mov r8,r8
	call LB_5344
	C_POP_REGS
	mov rdi,fmt_nl
	call emt_stg
	jmp LB_5345
LB_5344:
	movzx rax,BYTE [r8+6]
	jmp QWORD [LB_5348+8*rax]
LB_5348: dq LB_5346,LB_5347
LB_5346:
	mov rdi,LB_5350
	call emt_stg 
	mov r8,QWORD [r8+8]
	call LB_5019
	jmp LB_5349
LB_5347:
	mov rdi,LB_5351
	call emt_stg 
	mov rdi,fmt_rcd_box_l
	call emt_stg
	mov rdi,fmt_rcd_r
	call emt_stg
	jmp LB_5349
LB_5349:
	ret
LB_5345:
;; rsp=0 , %2683~2'(= a3◂ [ a8◂ [ a13◂ [ {| l |}]]] ) %2679~0'(= {| l |} ) 
;; ? 2'(= a3◂ [ a8◂ [ a13◂ [ {| l |}]]] ) ⊢ 0(<2)◂1'(= a8◂ [ a13◂ [ {| l |}]] )
	mov rdi,r8
	cmp BYTE [rdi+6],0
	jnz LB_5352
	mov rax,QWORD [rdi+8]
	mov r14,rax
;; rsp=0 , %2684~1'(= a8◂ [ a13◂ [ {| l |}]] ) %2679~0'(= {| l |} ) 
; _#8 %[ "D0" ] ⊢ %[ "D0" ]
	mov rdi,fmt_emt
	call emt_stg
	mov rdi,LB_5353
	call emt_stg 
	mov rdi,fmt_nl
	call emt_stg
	jmp LB_5354
LB_5354:
; .dlt.ptn %[ "D0" ]
;; rsp=0 , %2684~1'(= a8◂ [ a13◂ [ {| l |}]] ) %2679~0'(= {| l |} ) 
; rsp_d=0, #99 1'(= a8◂ [ a13◂ [ {| l |}]] ) ⊢ 1'(= {| l |} )
	sub rsp,8
	mov QWORD [rsp+8*0],r13
; .mov_ptn2 1'(= a8◂ [ a13◂ [ {| l |}]] ) ⊢ 0'(= a8◂ [ a13◂ [ {| l |}]] )
; .mov_ptn 1'(= a8◂ [ a13◂ [ {| l |}]] ) ⊢ 0'(= a8◂ [ a13◂ [ {| l |}]] )
	mov rax,r14
	mov r13,rax
	call ETR_99

	mov rax,QWORD [rsp-8+8*1]
	mov r14,r13
	mov r13,rax
	add rsp,8
;; rsp=0 , %2686~1'(= {| l |} ) %2679~0'(= {| l |} ) 
; _#8 1'(= {| l |} ) ⊢ 1'(= {| l |} )
	mov rdi,fmt_emt
	call emt_stg
	C_PUSH_REGS
	mov r8,r14
	mov rdi,r8
	call emt_s8
	C_POP_REGS
	mov rdi,fmt_nl
	call emt_stg
	jmp LB_5355
LB_5355:
; .dlt.ptn 1'(= {| l |} )
	mov rdi,r14
	call free_s8 
;; rsp=0 , %2679~0'(= {| l |} ) 
; ∎ { }
; .dlt.ptn 0'(= {| l |} )
	mov rdi,r13
	call free_s8 
; .mov_ptn2 { } ⊢ { }
	ret
LB_5352:
;; ?. 2'(= a3◂ [ a8◂ [ a13◂ [ {| l |}]]] ) ⊢ 1(<2)◂{ }
;; rsp=0 , %2679~0'(= {| l |} ) 
	mov rdi,LB_5356
	call emt_stg 
	jmp err
ETR_275: ; f0 0'(= r ) ⊢ 0'(= a3◂ [ r] ) : (_r64→_opn◂_r64)
;; rsp=0 , %2688~0'(= r ) 
	mov rdi,97
	cmp r13,rdi
;;97 =< .. 
	jl LB_5357
	mov rdi,122
	cmp r13,rdi
;; .. =< 122
	jg LB_5357
;; rsp=0 , %2688~0'(= r ) 
; #22 0'(= r ) ⊢ 0(<2)◂0'(= r )
;; rsp=0 , %2689~0(<2)◂0'(= r ) 
; ∎ 0(<2)◂0'(= r )
; .mov_ptn2 0(<2)◂0'(= r ) ⊢ 0'(= a3◂ [ r] )
	mov r14,r13
; .mov_ptn 0(<2)◂1'(= r ) ⊢ 0'(= a3◂ [ r] )
	mov rax,r14
	mov rdi,rax
	mov rax,r15
	mov r15,QWORD [r15] 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r13,rax
	ret
LB_5357:
;; rsp=0 , %2688~0'(= r ) 
; #23 { } ⊢ 1(<2)◂{ }
;; rsp=0 , %2690~1(<2)◂{ } %2688~0'(= r ) 
; ∎ 1(<2)◂{ }
; .dlt.ptn 0'(= r )
; .mov_ptn2 1(<2)◂{ } ⊢ 0'(= a3◂ [ r] )
; .mov_ptn 1(<2)◂{ } ⊢ 0'(= a3◂ [ r] )
	mov rax,unt 
	mov rax,unt_1
	mov r13,rax
	ret
RTM_0:
;; rsp=0 , %0~0'(= {| {| l |}|} ) 
; #89 %[ "xy0" ] ⊢ 1(<2)◂%[ "xy0" ]
;; rsp=0 , %2691~1(<2)◂%[ "xy0" ] %0~0'(= {| {| l |}|} ) 
; #78 1(<2)◂%[ "xy0" ] ⊢ 1(<2)◂1(<2)◂%[ "xy0" ]
;; rsp=0 , %2692~1(<2)◂1(<2)◂%[ "xy0" ] %0~0'(= {| {| l |}|} ) 
; rsp_d=0, #99 1(<2)◂1(<2)◂%[ "xy0" ] ⊢ 1'(= {| l |} )
	sub rsp,8
	mov QWORD [rsp+8*0],r13
; .mov_ptn2 1(<2)◂1(<2)◂%[ "xy0" ] ⊢ 0'(= a8◂ [ a13◂ [ {| l |}]] )
; .mov_ptn 1(<2)◂1(<2)◂%[ "xy0" ] ⊢ 0'(= a8◂ [ a13◂ [ {| l |}]] )
	mov rsi,1  
	mov rdi,16
	xor rax,rax 
	C_CALL_SF calloc
	mov QWORD [rax],3
	mov BYTE [rax+8+0],120
	mov BYTE [rax+8+1],121
	mov BYTE [rax+8+2],48
	mov BYTE [rax+6],1
	mov rdi,rax
	mov rax,r15
	mov r15,QWORD [r15] 
	mov QWORD [rax],0
	mov BYTE [rax+6],1
	mov QWORD [rax+8],rdi
	mov r13,rax
	call ETR_99

	mov rax,QWORD [rsp-8+8*1]
	mov r14,r13
	mov r13,rax
	add rsp,8
;; rsp=0 , %2693~1'(= {| l |} ) %0~0'(= {| {| l |}|} ) 
; _#8 1'(= {| l |} ) ⊢ 1'(= {| l |} )
	mov rdi,fmt_emt
	call emt_stg
	C_PUSH_REGS
	mov r8,r14
	mov rdi,r8
	call emt_s8
	C_POP_REGS
	mov rdi,fmt_nl
	call emt_stg
	jmp LB_5358
LB_5358:
; .dlt.ptn 1'(= {| l |} )
	mov rdi,r14
	call free_s8 
;; rsp=0 , %0~0'(= {| {| l |}|} ) 
	jmp LB_5359
LB_5359:
; $ %[ "xyz0" ] ⊢ %[ "xyz0" ]
;; rsp=0 , %2695~%[ "xyz0" ] %0~0'(= {| {| l |}|} ) 
; rsp_d=0, #77 { %[ "xyz0" ] %[ 0r ] } ⊢ { 3'(= {| l |} ) 1'(= r ) 2'(= a3◂ [ {| l |}] ) }
	sub rsp,8
	mov QWORD [rsp+8*0],r13
; .mov_ptn2 { %[ "xyz0" ] %[ 0r ] } ⊢ { 0'(= {| l |} ) 1'(= r ) }
; .mov_ptn %[ 0r ] ⊢ 1'(= r )
	mov rax,0
	mov r14,rax
; .mov_ptn %[ "xyz0" ] ⊢ 0'(= {| l |} )
	mov rsi,1  
	mov rdi,16
	xor rax,rax 
	C_CALL_SF calloc
	mov QWORD [rax],4
	mov BYTE [rax+8+0],120
	mov BYTE [rax+8+1],121
	mov BYTE [rax+8+2],122
	mov BYTE [rax+8+3],48
	mov r13,rax
	call ETR_77

	mov rax,QWORD [rsp-8+8*1]
	mov r9,r13
	mov r13,rax
	add rsp,8
;; rsp=0 , %2698~2'(= a3◂ [ {| l |}] ) %2697~1'(= r ) %2696~3'(= {| l |} ) %0~0'(= {| {| l |}|} ) 
; _#8 { 3'(= {| l |} ) 1'(= r ) 2'(= a3◂ [ {| l |}] ) } ⊢ { 3'(= {| l |} ) 1'(= r ) 2'(= a3◂ [ {| l |}] ) }
	mov rdi,fmt_emt
	call emt_stg
	mov rdi,fmt_rcd_l 
	call emt_stg 
	C_PUSH_REGS
	mov r8,r9
	mov rdi,r8
	call emt_s8
	C_POP_REGS
	mov rdi,fmt_spc 
	call emt_stg 
	C_PUSH_REGS
	mov r8,r14
	mov rdi,r8 
	call emt_r64 
	C_POP_REGS
	mov rdi,fmt_spc 
	call emt_stg 
	C_PUSH_REGS
	mov r8,r8
	call LB_5128
	C_POP_REGS
	mov rdi,fmt_spc 
	call emt_stg 
	mov rdi,fmt_rcd_r 
	call emt_stg 
	mov rdi,fmt_nl
	call emt_stg
	jmp LB_5360
LB_5360:
; .dlt.ptn { 3'(= {| l |} ) 1'(= r ) 2'(= a3◂ [ {| l |}] ) }
	mov rdi,r9
	call free_s8 
;	.dlt adt ⊢ _  
;; rsp=0 , %0~0'(= {| {| l |}|} ) 
; » _^ .. ⊢ ..
; .. //
	mov rdi,0
	add rdi,8
	push rdi 
	call mlc_s8
	pop rdi
	mov r14,rax
	lea rdi,[rax+7+rdi]
	std 
	mov QWORD [tmp],rcx 
	lea rsi,[LB_5361+8-1]
	mov rcx,8
	rep movsb
	mov rcx,QWORD [tmp] 
;; rsp=0 , %2700~1'(= {| l |} ) %0~0'(= {| {| l |}|} ) 
; rsp_d=0, #234 { 1'(= {| l |} ) %[ 0r ] } ⊢ { 3'(= {| l |} ) 1'(= r ) 2'(= a3◂ [ a35◂ [ a17◂ [ a9◂ [ ]{| l |}]]] ) }
	sub rsp,8
	mov QWORD [rsp+8*0],r13
; .mov_ptn2 { 1'(= {| l |} ) %[ 0r ] } ⊢ { 0'(= {| l |} ) 1'(= r ) }
; .mov_ptn 1'(= {| l |} ) ⊢ 0'(= {| l |} )
	mov rax,r14
	mov r13,rax
; .mov_ptn %[ 0r ] ⊢ 1'(= r )
	mov rax,0
	mov r14,rax
	call ETR_234

	mov rax,QWORD [rsp-8+8*1]
	mov r9,r13
	mov r13,rax
	add rsp,8
;; rsp=0 , %2703~2'(= a3◂ [ a35◂ [ a17◂ [ a9◂ [ ]{| l |}]]] ) %2702~1'(= r ) %2701~3'(= {| l |} ) %0~0'(= {| {| l |}|} ) 
; _#8 { 3'(= {| l |} ) 1'(= r ) 2'(= a3◂ [ a35◂ [ a17◂ [ a9◂ [ ]{| l |}]]] ) } ⊢ { 3'(= {| l |} ) 1'(= r ) 2'(= a3◂ [ a35◂ [ a17◂ [ a9◂ [ ]{| l |}]]] ) }
	mov rdi,fmt_emt
	call emt_stg
	mov rdi,fmt_rcd_l 
	call emt_stg 
	C_PUSH_REGS
	mov r8,r9
	mov rdi,r8
	call emt_s8
	C_POP_REGS
	mov rdi,fmt_spc 
	call emt_stg 
	C_PUSH_REGS
	mov r8,r14
	mov rdi,r8 
	call emt_r64 
	C_POP_REGS
	mov rdi,fmt_spc 
	call emt_stg 
	C_PUSH_REGS
	mov r8,r8
	call LB_5362
	C_POP_REGS
	mov rdi,fmt_spc 
	call emt_stg 
	mov rdi,fmt_rcd_r 
	call emt_stg 
	mov rdi,fmt_nl
	call emt_stg
	jmp LB_5363
LB_5362:
	movzx rax,BYTE [r8+6]
	jmp QWORD [LB_5366+8*rax]
LB_5366: dq LB_5364,LB_5365
LB_5364:
	mov rdi,LB_5368
	call emt_stg 
	mov r8,QWORD [r8+8]
	call LB_5369
	jmp LB_5367
LB_5365:
	mov rdi,LB_5370
	call emt_stg 
	mov rdi,fmt_rcd_box_l
	call emt_stg
	mov rdi,fmt_rcd_r
	call emt_stg
	jmp LB_5367
LB_5367:
	ret
LB_5369:
	movzx rax,BYTE [r8+6]
	jmp QWORD [LB_5373+8*rax]
LB_5373: dq LB_5371,LB_5372
LB_5371:
	mov rdi,LB_5375
	call emt_stg 
	mov r8,QWORD [r8+8]
	call LB_5021
	jmp LB_5374
LB_5372:
	mov rdi,LB_5376
	call emt_stg 
	mov r8,QWORD [r8+8]
	call LB_4927
	jmp LB_5374
LB_5374:
	ret
LB_5363:
; .dlt.ptn { 3'(= {| l |} ) 1'(= r ) 2'(= a3◂ [ a35◂ [ a17◂ [ a9◂ [ ]{| l |}]]] ) }
	mov rdi,r9
	call free_s8 
;	.dlt adt ⊢ _  
;; rsp=0 , %0~0'(= {| {| l |}|} ) 
; _#8 0'(= {| {| l |}|} ) ⊢ 0'(= {| {| l |}|} )
	mov rdi,fmt_emt
	call emt_stg
	C_PUSH_REGS
	mov r8,r13
	mov rdi,fmt_arr_l 
	call emt_stg 
	mov rsi,[r8]
	mov rax,0 
LB_5377:
	cmp rsi,rax 
	jz LB_5378
	push r8 
	push rsi 
	push rax 
	mov r8,QWORD [r8+8+8*rax]
	mov rdi,r8
	call emt_s8
	mov rdi,fmt_spc 
	call emt_stg 
	pop rax 
	pop rsi 
	pop r8 
	add rax,1 
	jmp LB_5377
LB_5378:
	mov rdi,fmt_arr_r 
	call emt_stg
	C_POP_REGS
	mov rdi,fmt_nl
	call emt_stg
	jmp LB_5379
LB_5379:
;; rsp=0 , %2705~0'(= {| {| l |}|} ) 
; rsp_d=0, #274 { } ⊢ { }
	sub rsp,8
	mov QWORD [rsp+8*0],r13
; .mov_ptn2 { } ⊢ { }
	call ETR_274

	mov r13,QWORD [rsp-8+8*1]
	add rsp,8
; .dlt.ptn { }
;; rsp=0 , %2705~0'(= {| {| l |}|} ) 
; _#4 { 0'(= {| {| l |}|} ) %[ 1r ] } ⊢ { 0'(= {| {| l |}|} ) %[ 1r ] 2'(= {| l |} ) }
	mov rax,1
	mov rdi,r13
	mov rdi,[rdi+8+8*rax]
	jmp LB_5380
LB_5380:
	C_PUSH_REGS
	call rpc_s8  
	C_POP_REGS
	mov r14,rax
; .mov_ptn2 1'(= {| l |} ) ⊢ 2'(= {| l |} )
	mov r9,r8
; .mov_ptn 1'(= {| l |} ) ⊢ 2'(= {| l |} )
	mov rax,r14
	mov r8,rax
; .dlt.ptn %[ 1r ]
;; rsp=0 , %2709~2'(= {| l |} ) %2707~0'(= {| {| l |}|} ) 
; rsp_d=0, #273 2'(= {| l |} ) ⊢ { }
	sub rsp,8
	mov QWORD [rsp+8*0],r13
; .mov_ptn2 2'(= {| l |} ) ⊢ 0'(= {| l |} )
; .mov_ptn 2'(= {| l |} ) ⊢ 0'(= {| l |} )
	mov rax,r8
	mov r13,rax
	call ETR_273

	mov r13,QWORD [rsp-8+8*1]
	add rsp,8
; .dlt.ptn { }
;; rsp=0 , %2707~0'(= {| {| l |}|} ) 
; ∎
	jmp RTM_1
RTM_1:
	mov rdi,0
	mov QWORD rdi,rsp
	and rsp,~0xf
	push rdi
	call exit
	pop rdi
	mov rsp,rdi

err: 
	mov rdi,fmt_err_line
	mov rsi,QWORD [err_n]
	xor rax,rax
	mov QWORD [rsp_tmp],rsp
	and rsp,~0xf
	call printf
	mov rsp,QWORD [rsp_tmp]
	mov rax,1
	mov rbx,0
	int 0x80
