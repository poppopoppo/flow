bits 64 
; macros 
%macro C_PUSH_REGS 0 
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
%endmacro

%macro C_POP_REGS 0 
	pop r11 
	pop r10 
	pop r9 
	pop r8 
	pop rcx 
	pop rdx 
%endmacro

%macro C_CALL_SF 1 
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call %1 
	mov rsp,QWORD [rsp_tmp]
	pop r11 
	pop r10 
	pop r9 
	pop r8 
	pop rcx 
	pop rdx 
%endmacro 

%macro C_CALL 1 
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call %1 
	mov rsp,QWORD [rsp_tmp]
%endmacro 

%macro JZ_SPC 2
	movzx MCR_REG,%1
	cmp MCR_REG,9 
	jz %2
	cmp MCR_REG,10 
	jz %2
	cmp MCR_REG,32 
	jz %2
%endmacro
 
%macro JZ_LINE_SPC 2
	movzx MCR_REG,%1 
	cmp MCR_REG,9 
	jz %2
	cmp MCR_REG,32 
	jz %2
%endmacro
 
%macro PUSH_GRM 0 
	sub rsp,32
	mov QWORD [rsp+24],r13
	mov QWORD [rsp+16],r14 
	mov QWORD [rsp+8],r9
%endmacro

%macro POP_GRM_SCC 0
	mov r9,QWORD [rsp+8]
	mov r14,QWORD [rsp]
	mov r13,QWORD [rsp+24]
	add rsp,32 
%endmacro 

%macro POP_GRM_FAIL 0
	mov r9,QWORD [rsp+8]
	mov r14,QWORD [rsp+16]
	mov r13,QWORD [rsp+24]
	add rsp,32 
%endmacro 

%macro RB_GRM 0
	mov r9,QWORD [rsp+8]
	mov r14,QWORD [rsp+16]
	mov r13,QWORD [rsp+24]
%endmacro 

%macro ALC_RCD 2 ; n,reg-name!=rbx 
	add QWORD [SS_RCD_C+8*%1],1
	add QWORD [SS_RCD_N+8*%1],1 
	mov %2,[SS_RCD_%1_TOP]
	mov MCR_REG,[%2]
	mov QWORD [SS_RCD_%1_TOP],MCR_REG
%endmacro 

%macro FREE_RCD 2 ; n,reg-name!=rbx 
	sub QWORD [SS_RCD_N+8*%1],1
	mov rbx,QWORD [SS_RCD_%1_TOP] 
	mov QWORD [%2],rbx
	mov QWORD [SS_RCD_%1_TOP],%2
%endmacro
				
%macro FREE_LN 1 
	sub SS_LN_N,1 
	mov QWORD [%1],SS_LN_REG
	mov SS_LN_REG,%1
%endmacro

%macro ALC_LN 1 
	add QWORD [SS_LN_C],1 
	add SS_LN_N,1 
	mov %1,SS_LN_REG 
	mov SS_LN_REG,QWORD [SS_LN_REG]
%endmacro

%macro GET_LEN 2 
	mov %1,0x0000_ffff_ffff_ffff
	and %1,QWORD [%2]
%endmacro

%macro MOV_RAX 2 
	mov rax,%2 
	mov %1,rax
	%endmacro

%macro MOV_RDI 2 
	mov rdi,%2 
	mov %1,rdi
%endmacro

%macro MOV_RBX 2 
	mov rbx,%2
	mov %1,rbx
%endmacro

%macro BSS_SS_RCD 2 
	SS_RCD_%1_TOP: resq 1 
	SS_RCD_%1_VCT: resq (%1+1)*(%2+4)
	SS_RCD_%1_BTM: resq 1
%endmacro 

%define KB 1024
%define MB KB*KB 
%define GB MB*MB
%define SIG_INT 2
%define SIG_SEGV 11
%define SS_MAX 4000
%define SS_LN_MAX 1<<16
%define RCD_N 32
%define SS_NULL 0xffff_ffff_ffff_0000
%define EMT_BUF_MAX (KB<<1)
%define SS_LN_REG r15
%define MCR_REG rbx
%define SS_LN_N rbp
extern exit 
extern printf 
extern sprintf
extern malloc 
extern calloc
extern free 
extern isspace 
extern strtoul
extern strlen
extern getchar
extern set_handler
section .bss
	tmp: resq 64
	ret_vct: resq 64
 rsp_tmp: resq 1
	RB: resq 1 

; emt buffer 
	EMT_BUF_OFS: resq 1 
 EMT_BUF: resb EMT_BUF_MAX 
	EMT_BUF_END: resb 1
 
; garbage vector 
	GBG_VCT: resq 252

; SS segments 
	SS_TOP: resq 1
	SS_VCT: resq 16*SS_MAX
	SS_BTM: resq 1 

	SS_LN_TOP: resq 1
	SS_LN_VCT: resq 2*SS_LN_MAX
	SS_LN_BTM: resq 1  

	SS_PT_TOP: resq 1
	SS_PT_VCT: resq 3*SS_MAX
	SS_PT_BTM: resq 1 

	SS_RCD_N: resq (RCD_N+1) 
	SS_RCD_C: resq (RCD_N+1)

stat: resb 144
struc STAT
	.st_dev         resq 1
	.st_ino         resq 1
	.st_mode        resd 1
	.st_nlink       resd 1
	.st_uid         resd 1
	.st_gid         resd 1
	.st_rdev        resq 1
	.pad1           resq 1
	.st_size        resq 1
	.st_blksize     resd 1
	.pad2 resd 1
	.st_blocks      resq 1
	.st_atime       resq 1
	.st_atime_nsec  resq 1
	.st_mtime       resq 1
	.st_mtime_nsec  resq 1
	.st_ctime       resq 1
	.st_ctime_nsec  resq 1
	.__unused4  resd 1
	.__unused5  resd 1
endstruc

%define SS_RCD_1_MAX 800
	BSS_SS_RCD 1,SS_RCD_1_MAX
%define SS_RCD_2_MAX (1<<16)
	BSS_SS_RCD 2,SS_RCD_2_MAX
%define SS_RCD_3_MAX (1<<14)
	BSS_SS_RCD 3,SS_RCD_3_MAX
%define SS_RCD_4_MAX 800
	BSS_SS_RCD 4,SS_RCD_4_MAX
%define SS_RCD_5_MAX 800
	BSS_SS_RCD 5,SS_RCD_5_MAX
%define SS_RCD_6_MAX 800
	BSS_SS_RCD 6,SS_RCD_6_MAX
%define SS_RCD_7_MAX 800
	BSS_SS_RCD 7,SS_RCD_7_MAX
%define SS_RCD_8_MAX 800
	BSS_SS_RCD 8,SS_RCD_8_MAX
%define SS_RCD_9_MAX 800
	BSS_SS_RCD 9,SS_RCD_9_MAX
%define SS_RCD_10_MAX 800
	BSS_SS_RCD 10,SS_RCD_10_MAX
%define SS_RCD_11_MAX 800
	BSS_SS_RCD 11,SS_RCD_11_MAX
%define SS_RCD_12_MAX 800
	BSS_SS_RCD 12,SS_RCD_12_MAX
%define SS_RCD_13_MAX 800
	BSS_SS_RCD 13,SS_RCD_13_MAX
%define SS_RCD_14_MAX 800
	BSS_SS_RCD 14,SS_RCD_14_MAX
%define SS_RCD_15_MAX 800
	BSS_SS_RCD 15,SS_RCD_15_MAX
%define SS_RCD_16_MAX 800
	BSS_SS_RCD 16,SS_RCD_16_MAX
%define SS_RCD_17_MAX 800
	BSS_SS_RCD 17,SS_RCD_17_MAX
%define SS_RCD_18_MAX 800
	BSS_SS_RCD 18,SS_RCD_18_MAX
%define SS_RCD_19_MAX 800
	BSS_SS_RCD 19,SS_RCD_19_MAX
%define SS_RCD_20_MAX 800
	BSS_SS_RCD 20,SS_RCD_20_MAX
%define SS_RCD_21_MAX 800
	BSS_SS_RCD 21,SS_RCD_21_MAX
%define SS_RCD_22_MAX 800
	BSS_SS_RCD 22,SS_RCD_22_MAX
%define SS_RCD_23_MAX 800
	BSS_SS_RCD 23,SS_RCD_23_MAX
%define SS_RCD_24_MAX 800
	BSS_SS_RCD 24,SS_RCD_24_MAX
%define SS_RCD_25_MAX 800
	BSS_SS_RCD 25,SS_RCD_25_MAX
%define SS_RCD_26_MAX 800
	BSS_SS_RCD 26,SS_RCD_26_MAX
%define SS_RCD_27_MAX 800
	BSS_SS_RCD 27,SS_RCD_27_MAX
%define SS_RCD_28_MAX 800
	BSS_SS_RCD 28,SS_RCD_28_MAX
%define SS_RCD_29_MAX 800
	BSS_SS_RCD 29,SS_RCD_29_MAX
%define SS_RCD_30_MAX 800
	BSS_SS_RCD 30,SS_RCD_30_MAX
%define SS_RCD_31_MAX 800
	BSS_SS_RCD 31,SS_RCD_31_MAX
section .data
	err_n: dq 0
 SS_LN_C: dq 0
	fmt_err_line: db "err:%x",10,0
	fmt_r64: db "%dr",0
	fmt_s8: db 34,"%s",34,0
	fmt_d: db "%d",0
	fmt_x: db "%x",0
	fmt_arr_l: db "{| ",0
	fmt_arr_r: db "|}",0
	fmt_rcd_l: db "{ ",0
	fmt_rcd_r: db "} ",0
	fmt_rcd_box_l: db "*{ "
	fmt_nl: db 10,0
	fmt_spc: db " ",0
	fmt_emt: db "_emt:",0
	fmt_getchar: db "_getchar:",0
	rt_err0: db "rt_err 0:",10,0 
 s8_e: dq 0,0

	fmt_info:
		db "info:",10
		db "SS_LN_C=%d",10
		db "SS_LN_N=%d",10
		db 0
	fmt_info_rcd:
		db "rcd %d",10
		db "SS_RCD_C=%d",10
		db "SS_RCD_N=%d",10
		db 0

fmt_sig_hdl:
	db "sig_hdl:",10
	db "signal number=%d",10
	db 0

	unt: dq 0x0

	unt_0: dq 0x0 
	unt_1: dq 0x00_01_0000_0000_0000 
	unt_2: dq 0x00_02_0000_0000_0000 
	unt_3: dq 0x00_03_0000_0000_0000 
	unt_4: dq 0x00_04_0000_0000_0000 
	unt_5: dq 0x00_05_0000_0000_0000 
	unt_6: dq 0x00_06_0000_0000_0000 
	unt_7: dq 0x00_07_0000_0000_0000 
	unt_8: dq 0x00_08_0000_0000_0000 
	unt_9: dq 0x00_08_0000_0000_0000 
	unt_10: dq 0x00_08_0000_0000_0000 
	unt_11: dq 0x00_08_0000_0000_0000 
	unt_12: dq 0x00_08_0000_0000_0000 

LB_121: db 34,101,115,99,95,115,116,103,95,108,116,114,34,0
LB_123: db 59,32,226,136,142,124,10,101,120,110,32,54,53,48,48,58,10,0
LB_339: db 95,0
LB_350: db 46,0
LB_354: db 114,0
LB_355: db 34,0
LB_356: db 34,0
LB_363: db 125,0
LB_364: db 123,32,0
LB_368: db 32,93,32,0
LB_369: db 37,91,32,0
LB_373: db 32,0
LB_377: db 125,0
LB_378: db 123,32,0
LB_390: db 32,0
LB_431: db 125,0
LB_432: db 123,32,0
LB_468: db 32,93,32,0
LB_469: db 37,91,32,0
LB_473: db 226,151,130,0
LB_477: db 37,0
LB_481: db 32,0
LB_485: db 32,226,138,162,124,10,0
LB_486: db 32,0
LB_487: db 9,0
LB_493: db 32,226,138,162,124,10,0
LB_494: db 44,0
LB_495: db 226,151,130,0
LB_496: db 9,0
LB_511: db 10,0
LB_512: db 32,226,138,162,32,0
LB_513: db 36,32,0
LB_514: db 9,0
LB_517: db 32,226,138,162,10,0
LB_518: db 36,32,0
LB_519: db 9,0
LB_525: db 226,136,142,32,46,46,10,0
LB_526: db 9,0
LB_549: db 226,136,142,124,10,0
LB_550: db 9,0
LB_556: db 10,0
LB_557: db 32,226,138,162,32,0
LB_558: db 32,0
LB_559: db 9,0
LB_565: db 10,0
LB_566: db 32,226,138,162,32,0
LB_567: db 44,0
LB_568: db 226,151,130,32,0
LB_569: db 9,0
LB_575: db 10,0
LB_576: db 32,226,138,162,32,0
LB_577: db 32,0
LB_578: db 194,187,32,0
LB_579: db 9,0
LB_582: db 194,187,32,95,94,32,46,46,32,226,138,162,32,46,46,10,32,46,46,32,47,47,10,0
LB_583: db 9,0
LB_626: db 226,136,144,32,46,46,32,59,10,0
LB_627: db 9,0
LB_649: db 226,138,162,32,10,0
LB_650: db 226,136,144,32,46,46,32,59,32,0
LB_651: db 9,0
LB_654: db 226,136,144,32,46,46,32,46,10,0
LB_655: db 9,0
LB_661: db 226,136,144,46,32,46,46,32,46,10,0
LB_662: db 9,0
LB_668: db 226,138,162,32,10,0
LB_669: db 226,136,144,32,46,46,32,59,32,0
LB_670: db 9,0
LB_673: db 226,136,144,46,32,46,46,32,46,10,0
LB_674: db 9,0
LB_683: db 46,46,32,59,10,0
LB_684: db 226,136,144,32,0
LB_685: db 9,0
LB_691: db 226,138,162,32,10,0
LB_692: db 226,136,144,32,46,46,32,59,32,0
LB_693: db 9,0
LB_696: db 226,136,144,32,46,46,32,46,10,0
LB_697: db 9,0
LB_703: db 226,136,144,46,32,46,46,32,59,10,0
LB_704: db 9,0
LB_710: db 226,138,162,32,10,0
LB_711: db 226,136,144,32,46,46,32,59,32,0
LB_712: db 9,0
LB_715: db 226,136,144,46,32,46,46,32,46,10,0
LB_716: db 9,0
LB_722: db 10,0
LB_723: db 64,46,0
LB_724: db 9,0
LB_733: db 226,136,144,32,46,46,10,0
LB_734: db 9,0
LB_774: db 226,136,144,46,32,46,46,32,10,0
LB_775: db 9,0
LB_781: db 10,0
LB_782: db 226,136,144,32,46,46,32,226,138,162,32,0
LB_783: db 9,0
LB_844: db 10,0
LB_845: db 226,136,144,46,32,46,46,32,226,138,162,32,0
LB_846: db 9,0
LB_858: db 9,226,136,142,226,136,142,10,0
LB_859: db 9,0
LB_862: db 10,0
LB_863: db 194,167,194,167,32,0
LB_864: db 9,0
LB_867: db 10,0
LB_868: db 32,61,32,0
LB_869: db 194,167,194,167,32,0
LB_870: db 9,0
LB_876: db 194,167,194,167,43,115,56,10,0
LB_877: db 9,0
LB_883: db 194,167,32,0
LB_884: db 9,0
LB_890: db 194,167,32,10,0
LB_891: db 9,0
LB_900: db 10,0
LB_901: db 194,182,32,0
LB_902: db 9,0
LB_910: db 32,61,32,46,46,32,10,0
LB_911: db 194,182,32,0
LB_912: db 9,0
LB_928: db 194,182,10,0
LB_929: db 9,0
LB_938: db 10,0
LB_939: db 64,46,0
LB_940: db 9,0
LB_943: db 32,61,32,46,46,32,10,0
LB_944: db 64,46,0
LB_945: db 9,0
LB_951: db 10,0
LB_952: db 10,0
LB_953: db 32,61,32,0
LB_957: db 10,0
LB_958: db 32,58,32,0
LB_959: db 226,136,144,32,0
LB_960: db 9,0
LB_966: db 125,0
LB_967: db 123,32,0
LB_971: db 32,226,134,146,32,0
LB_975: db 226,151,130,0
LB_979: db 39,0
LB_983: db 32,0
LB_990: db 10,0
LB_991: db 32,58,32,0
LB_992: db 32,0
LB_993: db 10,0
LB_994: db 32,0
LB_1003: db 10,0
LB_1004: db 32,61,32,0
LB_1005: db 32,194,171,32,10,0
LB_1012: db 10,0
LB_1013: db 32,58,32,0
LB_1014: db 32,0
LB_1015: db 64,46,0
LB_1016: db 9,0
LB_1019: db 10,0
LB_1020: db 32,0
LB_1021: db 64,46,0
LB_1022: db 9,0
LB_1196: db 10,0
LB_1197: db 58,0
LB_1198: db 45,0
LB_1199: db 112,114,115,95,101,114,114,32,0
LB_1993: db 59,32,226,136,142,124,10,101,120,110,32,51,52,50,48,48,58,10,0
LB_1997: db 58,10,0
LB_1998: db 45,0
LB_1999: db 110,108,115,95,101,114,114,32,0
LB_2001: db 59,32,226,136,142,124,10,101,120,110,32,51,52,51,52,57,58,10,0
LB_2050: db 59,32,226,136,142,124,10,101,120,110,32,51,52,55,53,57,58,10,0
LB_2150: db 34,108,105,110,101,95,114,101,115,95,99,32,48,34,0
LB_2152: db 59,32,226,136,142,124,10,101,120,110,32,51,53,54,49,55,58,10,0
LB_3909: db 34,102,105,108,101,32,101,110,100,34,0
LB_3914: db 34,102,105,108,101,32,101,110,100,32,110,108,34,0
LB_4384: db 34,100,116,95,101,116,114,32,48,34,0
LB_4758: db 34,108,99,95,101,116,114,95,98,111,100,121,32,48,34,0
LB_5156: db 34,103,114,109,95,101,116,114,95,97,99,116,95,97,99,116,32,48,34,0
LB_5159: db 59,32,226,136,142,124,10,101,120,110,32,53,56,51,48,52,58,10,0
LB_5189: db 34,103,114,109,95,101,116,114,95,97,99,116,95,97,99,116,32,49,34,0
LB_5192: db 59,32,226,136,142,124,10,101,120,110,32,53,56,53,55,51,58,10,0
LB_5620: db 34,99,102,32,48,34,0
LB_5622: db 59,32,226,136,142,124,10,101,120,110,32,54,55,54,57,49,58,10,0
LB_5626: db 125,0
LB_5627: db 123,32,0
LB_5631: db 32,41,0
LB_5632: db 39,40,61,32,0
LB_5636: db 32,93,0
LB_5637: db 37,91,32,0
LB_5641: db 101,39,32,93,0
LB_5642: db 37,91,32,0
LB_5646: db 39,32,62,93,0
LB_5647: db 39,32,44,32,0
LB_5648: db 91,60,32,0
LB_5649: db 41,226,151,130,0
LB_5650: db 40,60,0
LB_5654: db 93,0
LB_5655: db 226,151,130,32,91,32,0
LB_5656: db 97,0
LB_5660: db 114,0
LB_5667: db 125,0
LB_5668: db 42,123,32,0
LB_5672: db 124,125,0
LB_5673: db 123,124,32,0
LB_5677: db 62,125,0
LB_5678: db 123,60,32,0
LB_5682: db 113,0
LB_5689: db 32,0
LB_5774: db 93,0
LB_5775: db 81,87,79,82,68,32,91,71,66,71,95,86,67,84,43,56,42,0
LB_5782: db 10,9,70,82,69,69,95,76,78,32,114,100,105,10,0
LB_5783: db 9,109,111,118,32,114,100,105,44,0
LB_5784: db 44,114,100,105,10,0
LB_5785: db 10,9,70,82,69,69,95,82,67,68,32,0
LB_5786: db 9,109,111,118,32,114,100,105,44,0
LB_5791: db 115,101,99,116,105,111,110,32,46,100,97,116,97,10,9,101,114,114,95,110,58,32,100,113,32,48,10,32,83,83,95,76,78,95,67,58,32,100,113,32,48,10,9,102,109,116,95,101,114,114,95,108,105,110,101,58,32,100,98,32,34,101,114,114,58,37,120,34,44,49,48,44,48,10,9,102,109,116,95,114,54,52,58,32,100,98,32,34,37,100,114,34,44,48,10,9,102,109,116,95,115,56,58,32,100,98,32,51,52,44,34,37,115,34,44,51,52,44,48,10,9,102,109,116,95,100,58,32,100,98,32,34,37,100,34,44,48,10,9,102,109,116,95,120,58,32,100,98,32,34,37,120,34,44,48,10,9,102,109,116,95,97,114,114,95,108,58,32,100,98,32,34,123,124,32,34,44,48,10,9,102,109,116,95,97,114,114,95,114,58,32,100,98,32,34,124,125,34,44,48,10,9,102,109,116,95,114,99,100,95,108,58,32,100,98,32,34,123,32,34,44,48,10,9,102,109,116,95,114,99,100,95,114,58,32,100,98,32,34,125,32,34,44,48,10,9,102,109,116,95,114,99,100,95,98,111,120,95,108,58,32,100,98,32,34,42,123,32,34,10,9,102,109,116,95,110,108,58,32,100,98,32,49,48,44,48,10,9,102,109,116,95,115,112,99,58,32,100,98,32,34,32,34,44,48,10,9,102,109,116,95,101,109,116,58,32,100,98,32,34,95,101,109,116,58,34,44,48,10,9,102,109,116,95,103,101,116,99,104,97,114,58,32,100,98,32,34,95,103,101,116,99,104,97,114,58,34,44,48,10,9,114,116,95,101,114,114,48,58,32,100,98,32,34,114,116,95,101,114,114,32,48,58,34,44,49,48,44,48,32,10,32,115,56,95,101,58,32,100,113,32,48,44,48,10,10,9,102,109,116,95,105,110,102,111,58,10,9,9,100,98,32,34,105,110,102,111,58,34,44,49,48,10,9,9,100,98,32,34,83,83,95,76,78,95,67,61,37,100,34,44,49,48,10,9,9,100,98,32,34,83,83,95,76,78,95,78,61,37,100,34,44,49,48,10,9,9,100,98,32,48,10,9,102,109,116,95,105,110,102,111,95,114,99,100,58,10,9,9,100,98,32,34,114,99,100,32,37,100,34,44,49,48,10,9,9,100,98,32,34,83,83,95,82,67,68,95,67,61,37,100,34,44,49,48,10,9,9,100,98,32,34,83,83,95,82,67,68,95,78,61,37,100,34,44,49,48,10,9,9,100,98,32,48,10,10,102,109,116,95,115,105,103,95,104,100,108,58,10,9,100,98,32,34,115,105,103,95,104,100,108,58,34,44,49,48,10,9,100,98,32,34,115,105,103,110,97,108,32,110,117,109,98,101,114,61,37,100,34,44,49,48,10,9,100,98,32,48,10,10,9,117,110,116,58,32,100,113,32,48,120,48,10,10,9,117,110,116,95,48,58,32,100,113,32,48,120,48,32,10,9,117,110,116,95,49,58,32,100,113,32,48,120,48,48,95,48,49,95,48,48,48,48,95,48,48,48,48,95,48,48,48,48,32,10,9,117,110,116,95,50,58,32,100,113,32,48,120,48,48,95,48,50,95,48,48,48,48,95,48,48,48,48,95,48,48,48,48,32,10,9,117,110,116,95,51,58,32,100,113,32,48,120,48,48,95,48,51,95,48,48,48,48,95,48,48,48,48,95,48,48,48,48,32,10,9,117,110,116,95,52,58,32,100,113,32,48,120,48,48,95,48,52,95,48,48,48,48,95,48,48,48,48,95,48,48,48,48,32,10,9,117,110,116,95,53,58,32,100,113,32,48,120,48,48,95,48,53,95,48,48,48,48,95,48,48,48,48,95,48,48,48,48,32,10,9,117,110,116,95,54,58,32,100,113,32,48,120,48,48,95,48,54,95,48,48,48,48,95,48,48,48,48,95,48,48,48,48,32,10,9,117,110,116,95,55,58,32,100,113,32,48,120,48,48,95,48,55,95,48,48,48,48,95,48,48,48,48,95,48,48,48,48,32,10,9,117,110,116,95,56,58,32,100,113,32,48,120,48,48,95,48,56,95,48,48,48,48,95,48,48,48,48,95,48,48,48,48,32,10,10,0
LB_5792: db 115,101,99,116,105,111,110,32,46,116,101,120,116,10,103,108,111,98,97,108,32,95,115,116,97,114,116,10,10,105,110,102,111,58,10,9,67,95,80,85,83,72,95,82,69,71,83,10,9,109,111,118,32,114,100,105,44,102,109,116,95,105,110,102,111,32,10,9,109,111,118,32,114,115,105,44,81,87,79,82,68,32,91,83,83,95,76,78,95,67,93,10,9,109,111,118,32,114,100,120,44,83,83,95,76,78,95,78,32,10,9,120,111,114,32,114,97,120,44,114,97,120,32,10,9,67,95,67,65,76,76,32,112,114,105,110,116,102,10,9,109,111,118,32,114,97,120,44,48,10,105,110,102,111,95,114,99,100,58,10,9,112,117,115,104,32,114,97,120,32,10,9,109,111,118,32,114,100,105,44,102,109,116,95,105,110,102,111,95,114,99,100,10,9,109,111,118,32,114,115,105,44,114,97,120,32,10,9,109,111,118,32,114,100,120,44,81,87,79,82,68,32,91,83,83,95,82,67,68,95,67,43,56,42,114,97,120,93,10,9,109,111,118,32,114,99,120,44,81,87,79,82,68,32,91,83,83,95,82,67,68,95,78,43,56,42,114,97,120,93,10,9,120,111,114,32,114,97,120,44,114,97,120,10,9,67,95,67,65,76,76,32,112,114,105,110,116,102,32,10,9,112,111,112,32,114,97,120,32,10,9,99,109,112,32,114,97,120,44,82,67,68,95,78,32,10,9,106,122,32,105,110,102,111,95,114,99,100,95,101,110,100,32,10,9,97,100,100,32,114,97,120,44,49,32,10,9,106,109,112,32,105,110,102,111,95,114,99,100,32,10,105,110,102,111,95,114,99,100,95,101,110,100,58,10,9,67,95,80,79,80,95,82,69,71,83,32,10,9,114,101,116,10,59,103,101,116,99,104,97,114,58,10,59,9,120,111,114,32,114,97,120,44,114,97,120,32,10,59,9,67,95,67,65,76,76,95,83,70,32,103,101,116,99,104,97,114,32,10,59,9,114,101,116,10,10,115,105,103,95,104,100,108,58,32,59,32,114,100,105,61,115,105,103,95,110,32,114,115,105,61,115,105,103,105,110,102,111,95,116,42,32,114,100,120,61,118,111,105,100,42,10,9,112,117,115,104,32,114,100,105,32,10,9,112,117,115,104,32,114,115,105,32,10,9,112,117,115,104,32,114,100,120,32,10,9,120,111,114,32,114,97,120,44,114,97,120,32,10,9,109,111,118,32,114,115,105,44,114,100,105,32,10,9,109,111,118,32,114,100,105,44,102,109,116,95,115,105,103,95,104,100,108,10,9,67,95,67,65,76,76,32,112,114,105,110,116,102,32,10,9,99,97,108,108,32,105,110,102,111,32,10,9,99,97,108,108,32,101,120,105,116,32,10,9,106,109,112,32,101,114,114,10,10,101,113,95,115,56,58,32,59,114,100,105,44,114,115,105,10,9,112,117,115,104,32,114,100,120,10,9,109,111,118,32,114,97,120,44,48,120,48,48,48,48,95,102,102,102,102,95,102,102,102,102,95,102,102,102,102,32,10,9,97,110,100,32,114,97,120,44,81,87,79,82,68,32,91,114,100,105,93,10,9,109,111,118,32,114,100,120,44,48,120,48,48,48,48,95,102,102,102,102,95,102,102,102,102,95,102,102,102,102,10,9,97,110,100,32,114,100,120,44,81,87,79,82,68,32,91,114,115,105,93,10,9,99,109,112,32,114,97,120,44,114,100,120,10,9,106,110,122,32,101,113,95,115,56,95,102,32,10,101,113,95,115,56,95,108,112,58,10,9,99,109,112,32,114,97,120,44,48,10,9,106,122,32,101,113,95,115,56,95,116,10,9,109,111,118,122,120,32,114,100,120,44,66,89,84,69,32,91,114,100,105,43,55,43,114,97,120,93,10,9,99,109,112,32,66,89,84,69,32,91,114,115,105,43,55,43,114,97,120,93,44,100,108,32,10,9,106,110,122,32,101,113,95,115,56,95,102,32,10,9,115,117,98,32,114,97,120,44,49,32,10,9,106,109,112,32,101,113,95,115,56,95,108,112,32,10,101,113,95,115,56,95,102,58,10,9,112,111,112,32,114,100,120,32,10,9,109,111,118,32,114,97,120,44,48,32,10,9,115,116,122,10,9,114,101,116,32,10,101,113,95,115,56,95,116,58,10,9,112,111,112,32,114,100,120,32,10,9,109,111,118,32,114,97,120,44,49,32,10,9,114,101,116,10,10,114,112,99,95,115,56,58,32,59,32,114,100,105,32,226,138,162,32,114,97,120,10,9,112,117,115,104,32,114,100,105,32,10,9,109,111,118,32,114,115,105,44,48,120,48,48,48,48,95,102,102,102,102,95,102,102,102,102,95,102,102,102,102,10,9,97,110,100,32,114,115,105,44,81,87,79,82,68,32,91,114,100,105,93,32,32,10,9,112,117,115,104,32,114,115,105,10,9,109,111,118,32,114,100,105,44,114,115,105,32,10,9,99,97,108,108,32,109,108,99,95,115,56,10,9,112,111,112,32,114,99,120,32,10,9,112,111,112,32,114,115,105,32,10,9,97,100,100,32,114,115,105,44,56,10,9,108,101,97,32,114,100,105,44,91,114,97,120,43,56,93,10,9,99,108,100,32,10,9,114,101,112,32,109,111,118,115,98,10,9,114,101,116,10,32,32,32,32,32,10,101,115,99,95,115,56,58,32,59,32,114,100,105,32,226,138,162,32,114,97,120,32,10,9,109,111,118,32,114,115,105,44,48,120,48,48,48,48,95,102,102,102,102,95,102,102,102,102,95,102,102,102,102,10,9,97,110,100,32,114,115,105,44,81,87,79,82,68,32,91,114,100,105,93,32,10,9,109,111,118,32,114,97,120,44,114,115,105,32,10,9,115,104,108,32,114,97,120,44,49,32,10,9,115,117,98,32,114,115,112,44,114,97,120,32,10,101,115,99,95,115,56,95,108,112,48,58,32,10,10,97,114,114,95,111,102,95,108,115,116,58,32,10,9,109,111,118,32,114,115,105,44,48,32,10,97,114,114,95,111,102,95,108,115,116,95,114,58,10,9,99,109,112,32,66,89,84,69,32,91,114,100,105,43,54,93,44,49,10,9,106,122,32,97,114,114,95,111,102,95,108,115,116,95,101,110,100,32,10,9,112,117,115,104,32,81,87,79,82,68,32,91,114,100,105,43,56,93,32,10,9,109,111,118,32,114,100,105,44,81,87,79,82,68,32,91,114,100,105,43,49,54,93,10,9,97,100,100,32,114,115,105,44,49,32,10,9,99,97,108,108,32,97,114,114,95,111,102,95,108,115,116,95,114,10,9,115,117,98,32,114,115,105,44,49,32,10,9,112,111,112,32,81,87,79,82,68,32,91,114,97,120,43,56,43,56,42,114,115,105,93,10,9,114,101,116,32,10,97,114,114,95,111,102,95,108,115,116,95,101,110,100,58,32,10,9,112,117,115,104,32,114,115,105,32,10,9,120,111,114,32,114,97,120,44,114,97,120,10,9,109,111,118,32,114,100,105,44,56,10,9,97,100,100,32,114,115,105,44,49,32,10,9,67,95,67,65,76,76,32,99,97,108,108,111,99,10,9,112,111,112,32,114,115,105,32,10,9,109,111,118,32,81,87,79,82,68,32,91,114,97,120,93,44,114,115,105,10,9,114,101,116,32,10,10,115,99,102,95,100,58,32,59,32,114,100,105,61,115,114,99,32,226,138,162,32,114,97,120,61,102,108,103,32,114,100,105,61,100,115,116,32,114,115,105,61,110,10,9,112,117,115,104,32,114,100,105,10,9,109,111,118,122,120,32,114,100,105,44,66,89,84,69,32,91,114,100,105,93,10,9,67,95,67,65,76,76,32,105,115,115,112,97,99,101,10,9,99,109,112,32,114,97,120,44,48,10,9,106,110,122,32,115,99,102,95,100,95,101,114,114,48,32,10,9,106,109,112,32,115,99,102,95,100,95,115,99,102,32,10,115,99,102,95,100,95,101,114,114,48,58,32,10,9,97,100,100,32,114,115,112,44,56,10,9,109,111,118,32,114,97,120,44,48,10,9,114,101,116,10,9,115,99,102,95,100,95,115,99,102,58,10,9,109,111,118,32,114,100,105,44,81,87,79,82,68,32,91,114,115,112,93,10,9,115,117,98,32,114,115,112,44,56,10,9,109,111,118,32,114,115,105,44,114,115,112,10,9,109,111,118,32,114,100,120,44,49,48,10,9,109,111,118,32,114,97,120,44,48,10,9,67,95,67,65,76,76,32,115,116,114,116,111,117,108,10,9,112,111,112,32,114,115,105,10,9,112,111,112,32,114,100,105,10,9,115,117,98,32,114,115,105,44,114,100,105,10,9,106,122,32,115,99,102,95,100,95,101,114,114,49,10,32,109,111,118,32,114,100,105,44,114,97,120,10,9,109,111,118,32,114,97,120,44,49,32,10,9,114,101,116,10,115,99,102,95,100,95,101,114,114,49,58,10,9,109,111,118,32,114,97,120,44,48,32,10,9,114,101,116,10,10,115,99,102,95,120,58,32,59,32,114,100,105,61,115,114,99,32,226,138,162,32,114,97,120,61,102,108,103,32,114,100,105,61,100,115,116,32,114,115,105,61,110,10,9,112,117,115,104,32,114,100,105,10,9,109,111,118,122,120,32,114,100,105,44,66,89,84,69,32,91,114,100,105,93,10,9,67,95,67,65,76,76,32,105,115,115,112,97,99,101,10,9,99,109,112,32,114,97,120,44,48,10,9,106,110,122,32,115,99,102,95,120,95,101,114,114,48,32,10,9,106,109,112,32,115,99,102,95,120,95,115,99,102,32,10,115,99,102,95,120,95,101,114,114,48,58,32,10,9,97,100,100,32,114,115,112,44,56,10,9,109,111,118,32,114,97,120,44,48,10,9,114,101,116,10,9,115,99,102,95,120,95,115,99,102,58,10,9,109,111,118,32,114,100,105,44,81,87,79,82,68,32,91,114,115,112,93,10,9,115,117,98,32,114,115,112,44,56,10,9,109,111,118,32,114,115,105,44,114,115,112,10,9,109,111,118,32,114,100,120,44,49,54,10,9,109,111,118,32,114,97,120,44,48,10,9,67,95,67,65,76,76,32,115,116,114,116,111,117,108,10,9,112,111,112,32,114,115,105,10,9,112,111,112,32,114,100,105,10,9,115,117,98,32,114,115,105,44,114,100,105,10,9,106,122,32,115,99,102,95,120,95,101,114,114,49,10,32,109,111,118,32,114,100,105,44,114,97,120,10,9,109,111,118,32,114,97,120,44,49,32,10,9,114,101,116,10,115,99,102,95,120,95,101,114,114,49,58,10,9,109,111,118,32,114,97,120,44,48,32,10,9,114,101,116,10,10,109,108,99,95,115,56,58,32,59,32,114,100,105,61,108,101,110,32,32,10,9,112,117,115,104,32,114,100,105,32,10,9,97,110,100,32,114,100,105,44,126,49,49,49,98,10,9,108,101,97,32,114,100,105,44,91,114,100,105,43,49,54,93,32,10,9,109,111,118,32,114,115,105,44,49,32,10,9,120,111,114,32,114,97,120,44,114,97,120,32,10,9,67,95,67,65,76,76,95,83,70,32,99,97,108,108,111,99,10,9,112,111,112,32,81,87,79,82,68,32,91,114,97,120,93,32,10,9,114,101,116,10,10,115,56,95,111,102,95,99,95,115,116,103,58,32,10,9,112,117,115,104,32,114,100,105,10,9,120,111,114,32,114,97,120,44,114,97,120,10,9,67,95,67,65,76,76,32,115,116,114,108,101,110,10,9,112,117,115,104,32,114,97,120,10,9,109,111,118,32,114,100,105,44,114,97,120,10,9,99,97,108,108,32,109,108,99,95,115,56,10,9,112,111,112,32,114,99,120,10,9,112,111,112,32,114,115,105,10,9,109,111,118,32,114,100,105,44,114,97,120,10,9,97,100,100,32,114,100,105,44,56,10,9,99,108,100,10,9,114,101,112,32,109,111,118,115,98,10,9,114,101,116,10,10,102,114,101,101,95,115,56,58,32,59,114,100,105,61,112,116,114,10,9,67,95,67,65,76,76,95,83,70,32,102,114,101,101,10,9,114,101,116,32,10,10,105,110,95,102,110,58,32,10,9,109,111,118,32,114,97,120,44,50,10,9,109,111,118,32,114,115,105,44,50,10,9,115,121,115,99,97,108,108,10,9,112,117,115,104,32,114,97,120,32,59,32,91,114,115,112,93,61,102,100,10,9,109,111,118,32,114,100,105,44,114,97,120,10,9,109,111,118,32,114,97,120,44,53,10,9,109,111,118,32,114,115,105,44,115,116,97,116,10,9,115,121,115,99,97,108,108,10,9,109,111,118,32,114,100,105,44,91,115,116,97,116,32,43,32,83,84,65,84,46,115,116,95,115,105,122,101,93,10,9,99,97,108,108,32,109,108,99,95,115,56,10,9,109,111,118,32,114,100,105,44,81,87,79,82,68,32,91,114,115,112,93,10,9,112,117,115,104,32,114,97,120,32,59,32,91,114,115,112,93,61,98,117,102,10,9,109,111,118,32,114,115,105,44,114,97,120,10,9,97,100,100,32,114,115,105,44,56,10,9,109,111,118,32,114,97,120,44,48,10,9,109,111,118,32,114,100,120,44,91,115,116,97,116,43,83,84,65,84,46,115,116,95,115,105,122,101,93,10,9,115,121,115,99,97,108,108,10,9,109,111,118,32,114,97,120,44,51,10,9,109,111,118,32,114,100,105,44,81,87,79,82,68,32,91,114,115,112,43,56,93,10,9,115,121,115,99,97,108,108,10,9,109,111,118,32,114,97,120,44,81,87,79,82,68,32,91,114,115,112,93,9,10,9,97,100,100,32,114,115,112,44,49,54,10,9,114,101,116,32,10,10,111,117,116,95,102,110,58,32,59,32,114,100,105,61,102,110,44,114,115,105,61,115,114,99,10,9,112,117,115,104,32,114,115,105,32,10,9,109,111,118,32,114,97,120,44,50,10,9,109,111,118,32,114,115,105,44,48,120,52,50,10,9,115,121,115,99,97,108,108,10,9,112,111,112,32,114,115,105,32,10,9,112,117,115,104,32,114,97,120,10,9,109,111,118,32,114,100,105,44,114,97,120,10,9,109,111,118,32,114,100,120,44,81,87,79,82,68,32,91,114,115,105,93,10,9,109,111,118,32,114,97,120,44,48,120,48,48,48,48,95,102,102,102,102,95,102,102,102,102,95,102,102,102,102,10,9,97,110,100,32,114,100,120,44,114,97,120,10,9,97,100,100,32,114,115,105,44,56,10,9,109,111,118,32,114,97,120,44,49,10,9,115,121,115,99,97,108,108,10,9,112,111,112,32,114,100,105,10,9,109,111,118,32,114,97,120,44,51,10,9,115,121,115,99,97,108,108,10,9,114,101,116,10,10,101,109,116,95,115,116,103,58,32,59,32,114,100,105,61,115,116,103,32,10,9,120,111,114,32,114,97,120,44,114,97,120,32,10,9,67,95,67,65,76,76,95,83,70,32,112,114,105,110,116,102,10,9,114,101,116,10,10,101,109,116,95,114,54,52,58,32,59,114,100,105,61,114,54,52,10,9,120,111,114,32,114,97,120,44,114,97,120,32,10,9,109,111,118,32,114,115,105,44,114,100,105,10,9,109,111,118,32,114,100,105,44,102,109,116,95,114,54,52,10,9,67,95,67,65,76,76,95,83,70,32,112,114,105,110,116,102,10,9,114,101,116,10,10,101,109,116,95,115,56,58,32,59,114,100,105,61,115,56,10,9,120,111,114,32,114,97,120,44,114,97,120,32,10,9,108,101,97,32,114,115,105,44,91,114,100,105,43,56,93,10,9,109,111,118,32,114,100,105,44,102,109,116,95,115,56,10,9,67,95,67,65,76,76,95,83,70,32,112,114,105,110,116,102,10,9,114,101,116,10,10,101,109,116,95,97,100,100,58,32,59,32,114,100,105,61,108,101,110,32,114,115,105,61,115,116,103,10,9,99,108,100,32,10,9,112,117,115,104,32,114,99,120,32,10,9,109,111,118,32,114,99,120,44,114,100,105,32,10,9,109,111,118,32,114,97,120,44,81,87,79,82,68,32,91,69,77,84,95,66,85,70,95,79,70,83,93,10,9,97,100,100,32,114,100,105,44,114,97,120,10,9,99,109,112,32,114,100,105,44,69,77,84,95,66,85,70,95,77,65,88,32,10,9,106,103,101,32,101,109,116,95,97,100,100,95,98,117,102,32,10,9,109,111,118,32,66,89,84,69,32,91,69,77,84,95,66,85,70,43,114,100,105,93,44,48,10,9,109,111,118,32,81,87,79,82,68,32,91,69,77,84,95,66,85,70,95,79,70,83,93,44,114,100,105,10,9,108,101,97,32,114,100,105,44,91,69,77,84,95,66,85,70,43,114,97,120,93,10,9,106,109,112,32,101,109,116,95,97,100,100,95,101,110,100,32,10,101,109,116,95,97,100,100,95,98,117,102,58,10,9,112,117,115,104,32,114,115,105,32,10,9,99,97,108,108,32,101,109,116,95,98,117,102,32,10,9,112,111,112,32,114,115,105,32,10,9,99,109,112,32,114,99,120,44,69,77,84,95,66,85,70,95,77,65,88,10,9,106,103,101,32,101,109,116,95,97,100,100,95,115,116,103,32,10,9,109,111,118,32,66,89,84,69,32,91,69,77,84,95,66,85,70,43,114,99,120,93,44,48,10,9,109,111,118,32,81,87,79,82,68,32,91,69,77,84,95,66,85,70,95,79,70,83,93,44,114,99,120,32,10,9,109,111,118,32,114,100,105,44,69,77,84,95,66,85,70,10,101,109,116,95,97,100,100,95,101,110,100,58,10,9,114,101,112,32,109,111,118,115,98,32,10,9,112,111,112,32,114,99,120,32,10,9,114,101,116,32,10,101,109,116,95,97,100,100,95,115,116,103,32,10,9,109,111,118,32,81,87,79,82,68,32,91,69,77,84,95,66,85,70,93,44,48,10,9,109,111,118,32,81,87,79,82,68,32,91,69,77,84,95,66,85,70,95,79,70,83,93,44,48,10,9,109,111,118,32,114,100,105,44,114,115,105,32,10,9,99,97,108,108,32,101,109,116,95,115,116,103,32,10,9,112,111,112,32,114,99,120,32,10,9,114,101,116,32,10,10,101,109,116,95,98,117,102,58,10,9,120,111,114,32,114,97,120,44,114,97,120,32,10,9,109,111,118,32,114,100,105,44,69,77,84,95,66,85,70,32,10,9,67,95,67,65,76,76,32,112,114,105,110,116,102,32,10,9,109,111,118,32,81,87,79,82,68,32,91,69,77,84,95,66,85,70,95,79,70,83,93,44,48,10,9,109,111,118,32,66,89,84,69,32,91,69,77,84,95,66,85,70,93,44,48,10,9,114,101,116,32,10,9,32,10,95,115,116,97,114,116,58,10,59,32,115,101,116,32,115,105,103,110,97,108,32,104,97,110,100,108,101,114,32,10,9,109,111,118,32,114,100,105,44,83,73,71,95,83,69,71,86,32,10,9,109,111,118,32,114,115,105,44,115,105,103,95,104,100,108,32,10,9,67,95,67,65,76,76,32,115,101,116,95,104,97,110,100,108,101,114,32,10,10,83,83,95,105,110,105,116,58,10,9,109,111,118,32,81,87,79,82,68,32,91,83,83,95,84,79,80,93,44,83,83,95,86,67,84,10,9,109,111,118,32,114,100,105,44,48,32,10,9,109,111,118,32,114,97,120,44,83,83,95,86,67,84,32,10,83,83,95,108,112,58,32,10,9,99,109,112,32,114,100,105,44,83,83,95,77,65,88,32,10,9,106,122,32,83,83,95,101,110,100,32,10,9,97,100,100,32,114,100,105,44,49,32,10,9,108,101,97,32,114,115,105,44,91,114,97,120,43,56,42,49,54,93,32,10,9,109,111,118,32,81,87,79,82,68,32,91,114,97,120,93,44,114,115,105,32,10,9,109,111,118,32,114,97,120,44,114,115,105,32,10,9,106,109,112,32,83,83,95,108,112,32,10,83,83,95,101,110,100,58,10,9,109,111,118,32,114,115,105,44,83,83,95,78,85,76,76,32,10,9,109,111,118,32,91,114,97,120,93,44,114,115,105,10,10,83,83,95,76,78,95,105,110,105,116,58,10,9,109,111,118,32,83,83,95,76,78,95,78,44,48,10,9,109,111,118,32,81,87,79,82,68,32,91,83,83,95,76,78,95,84,79,80,93,44,83,83,95,76,78,95,86,67,84,10,9,109,111,118,32,114,49,53,44,83,83,95,76,78,95,86,67,84,32,10,9,109,111,118,32,114,100,105,44,48,32,10,9,109,111,118,32,114,97,120,44,83,83,95,76,78,95,86,67,84,32,10,83,83,95,76,78,95,108,112,58,32,10,9,99,109,112,32,114,100,105,44,83,83,95,76,78,95,77,65,88,32,10,9,106,122,32,83,83,95,76,78,95,101,110,100,32,10,9,97,100,100,32,114,100,105,44,49,32,10,9,108,101,97,32,114,115,105,44,91,114,97,120,43,56,42,50,93,32,10,9,109,111,118,32,81,87,79,82,68,32,91,114,97,120,93,44,114,115,105,32,10,9,109,111,118,32,114,97,120,44,114,115,105,32,10,9,106,109,112,32,83,83,95,76,78,95,108,112,32,10,83,83,95,76,78,95,101,110,100,58,10,9,109,111,118,32,114,115,105,44,48,120,102,102,102,102,95,102,102,102,102,95,102,102,102,102,95,48,49,48,48,32,10,9,109,111,118,32,91,114,97,120,93,44,114,115,105,10,10,83,83,95,80,84,95,105,110,105,116,58,10,9,109,111,118,32,81,87,79,82,68,32,91,83,83,95,80,84,95,84,79,80,93,44,83,83,95,80,84,95,86,67,84,10,9,109,111,118,32,114,100,105,44,48,32,10,9,109,111,118,32,114,97,120,44,83,83,95,80,84,95,86,67,84,32,10,83,83,95,80,84,95,108,112,58,32,10,9,99,109,112,32,114,100,105,44,83,83,95,77,65,88,32,10,9,106,122,32,83,83,95,80,84,95,101,110,100,32,10,9,97,100,100,32,114,100,105,44,49,32,10,9,108,101,97,32,114,115,105,44,91,114,97,120,43,56,42,51,93,32,10,9,109,111,118,32,81,87,79,82,68,32,91,114,97,120,93,44,114,115,105,32,10,9,109,111,118,32,114,97,120,44,114,115,105,32,10,9,106,109,112,32,83,83,95,80,84,95,108,112,32,10,83,83,95,80,84,95,101,110,100,58,10,9,109,111,118,32,114,115,105,44,48,120,102,102,102,102,95,102,102,102,102,95,102,102,102,102,95,48,50,48,48,32,10,9,109,111,118,32,91,114,97,120,93,44,114,115,105,10,10,9,109,111,118,32,114,100,105,44,48,10,9,109,111,118,32,81,87,79,82,68,32,91,69,77,84,95,66,85,70,93,44,48,10,9,109,111,118,32,81,87,79,82,68,32,91,69,77,84,95,66,85,70,95,79,70,83,93,44,48,10,10,59,32,95,97,114,103,115,32,10,9,109,111,118,32,114,100,105,44,81,87,79,82,68,32,91,114,115,112,93,10,32,108,101,97,32,114,100,105,44,91,114,100,105,43,49,93,10,9,109,111,118,32,114,115,105,44,56,32,10,9,120,111,114,32,114,97,120,44,114,97,120,32,10,9,67,95,67,65,76,76,32,99,97,108,108,111,99,10,9,112,111,112,32,114,49,51,10,9,109,111,118,32,81,87,79,82,68,32,91,114,97,120,93,44,114,49,51,10,9,120,111,114,32,114,49,52,44,114,49,52,10,9,109,111,118,32,114,98,120,44,114,97,120,10,97,114,103,115,95,108,112,58,10,9,99,109,112,32,114,49,52,44,114,49,51,10,9,106,122,32,97,114,103,115,95,108,112,95,101,110,100,10,9,112,111,112,32,114,100,105,10,9,99,97,108,108,32,115,56,95,111,102,95,99,95,115,116,103,32,10,9,109,111,118,32,81,87,79,82,68,32,91,114,98,120,43,56,43,56,42,114,49,52,93,44,114,97,120,10,9,97,100,100,32,114,49,52,44,49,32,10,9,106,109,112,32,97,114,103,115,95,108,112,32,10,97,114,103,115,95,108,112,95,101,110,100,58,10,9,109,111,118,32,114,49,51,44,114,98,120,10,9,10,0
LB_5800: db 39,48,226,151,130,0
LB_5802: db 39,49,226,151,130,0
LB_5811: db 39,48,226,151,130,0
LB_5813: db 39,49,226,151,130,0
LB_5815: db 39,50,226,151,130,0
LB_5817: db 39,51,226,151,130,0
LB_5819: db 39,52,226,151,130,0
LB_5821: db 39,53,226,151,130,0
LB_5827: db 39,48,226,151,130,0
LB_5828: db 39,49,226,151,130,0
LB_5833: db 39,48,226,151,130,0
LB_5836: db 39,49,226,151,130,0
LB_5845: db 39,48,226,151,130,0
LB_5847: db 39,49,226,151,130,0
LB_5848: db 39,50,226,151,130,0
LB_5849: db 39,51,226,151,130,0
LB_5851: db 39,52,226,151,130,0
LB_5856: db 39,48,226,151,130,0
LB_5857: db 39,49,226,151,130,0
LB_5862: db 39,48,226,151,130,0
LB_5863: db 39,49,226,151,130,0
LB_5868: db 39,48,226,151,130,0
LB_5869: db 39,49,226,151,130,0
LB_5874: db 39,48,226,151,130,0
LB_5875: db 39,49,226,151,130,0
LB_5880: db 39,48,226,151,130,0
LB_5884: db 39,49,226,151,130,0
LB_5894: db 39,48,226,151,130,0
LB_5896: db 39,49,226,151,130,0
LB_5898: db 39,50,226,151,130,0
LB_5900: db 39,51,226,151,130,0
LB_5902: db 39,52,226,151,130,0
LB_5904: db 39,53,226,151,130,0
LB_5906: db 39,54,226,151,130,0
LB_5911: db 39,48,226,151,130,0
LB_5912: db 39,49,226,151,130,0
LB_5917: db 39,48,226,151,130,0
LB_5919: db 39,49,226,151,130,0
LB_5925: db 39,48,226,151,130,0
LB_5926: db 39,49,226,151,130,0
LB_5931: db 39,48,226,151,130,0
LB_5935: db 39,49,226,151,130,0
LB_5941: db 39,48,226,151,130,0
LB_5942: db 39,49,226,151,130,0
LB_5943: db 39,50,226,151,130,0
LB_5948: db 39,48,226,151,130,0
LB_5950: db 39,49,226,151,130,0
LB_5956: db 39,48,226,151,130,0
LB_5957: db 39,49,226,151,130,0
LB_5959: db 39,50,226,151,130,0
LB_5964: db 39,48,226,151,130,0
LB_5966: db 39,49,226,151,130,0
LB_5971: db 39,48,226,151,130,0
LB_5973: db 39,49,226,151,130,0
LB_5978: db 39,48,226,151,130,0
LB_5979: db 39,49,226,151,130,0
LB_5984: db 39,48,226,151,130,0
LB_5986: db 39,49,226,151,130,0
LB_5994: db 39,48,226,151,130,0
LB_5995: db 39,49,226,151,130,0
LB_5996: db 39,50,226,151,130,0
LB_5998: db 39,51,226,151,130,0
LB_6003: db 39,48,226,151,130,0
LB_6004: db 39,49,226,151,130,0
LB_6009: db 39,48,226,151,130,0
LB_6010: db 39,49,226,151,130,0
LB_6015: db 39,48,226,151,130,0
LB_6016: db 39,49,226,151,130,0
LB_6023: db 39,48,226,151,130,0
LB_6024: db 39,49,226,151,130,0
LB_6025: db 39,50,226,151,130,0
LB_6026: db 39,51,226,151,130,0
LB_6034: db 39,48,226,151,130,0
LB_6036: db 39,49,226,151,130,0
LB_6041: db 39,48,226,151,130,0
LB_6042: db 39,49,226,151,130,0
LB_6047: db 39,48,226,151,130,0
LB_6048: db 39,49,226,151,130,0
LB_6053: db 39,48,226,151,130,0
LB_6055: db 39,49,226,151,130,0
LB_6062: db 39,48,226,151,130,0
LB_6063: db 39,49,226,151,130,0
LB_6064: db 39,50,226,151,130,0
LB_6066: db 39,51,226,151,130,0
LB_6073: db 39,48,226,151,130,0
LB_6074: db 39,49,226,151,130,0
LB_6075: db 39,50,226,151,130,0
LB_6076: db 39,51,226,151,130,0
LB_6081: db 39,48,226,151,130,0
LB_6082: db 39,49,226,151,130,0
LB_6087: db 39,48,226,151,130,0
LB_6089: db 39,49,226,151,130,0
LB_6094: db 39,48,226,151,130,0
LB_6095: db 39,49,226,151,130,0
LB_6100: db 39,48,226,151,130,0
LB_6101: db 39,49,226,151,130,0
LB_6106: db 39,48,226,151,130,0
LB_6107: db 39,49,226,151,130,0
LB_6113: db 39,48,226,151,130,0
LB_6114: db 39,49,226,151,130,0
LB_6115: db 39,50,226,151,130,0
LB_6120: db 39,48,226,151,130,0
LB_6122: db 39,49,226,151,130,0
LB_6127: db 39,48,226,151,130,0
LB_6129: db 39,49,226,151,130,0
LB_6135: db 39,48,226,151,130,0
LB_6139: db 39,49,226,151,130,0
LB_6144: db 39,48,226,151,130,0
LB_6145: db 39,49,226,151,130,0
LB_6151: db 39,48,226,151,130,0
LB_6153: db 39,49,226,151,130,0
LB_6155: db 39,50,226,151,130,0
LB_6160: db 39,48,226,151,130,0
LB_6162: db 39,49,226,151,130,0
LB_6167: db 39,48,226,151,130,0
LB_6168: db 39,49,226,151,130,0
LB_6173: db 39,48,226,151,130,0
LB_6174: db 39,49,226,151,130,0
LB_6180: db 39,48,226,151,130,0
LB_6181: db 39,49,226,151,130,0
LB_6182: db 39,50,226,151,130,0
LB_6187: db 39,48,226,151,130,0
LB_6189: db 39,49,226,151,130,0
LB_6194: db 39,48,226,151,130,0
LB_6195: db 39,49,226,151,130,0
LB_6200: db 39,48,226,151,130,0
LB_6201: db 39,49,226,151,130,0
LB_6236: db 34,115,108,118,95,102,105,108,101,95,108,112,32,48,34,0
LB_6238: db 59,32,226,136,142,124,10,101,120,110,32,55,53,55,53,54,58,10,0
LB_6274: db 34,115,108,118,95,110,115,95,109,32,48,58,110,111,116,32,102,111,117,110,100,34,0
LB_6277: db 59,32,226,136,142,124,10,101,120,110,32,55,51,53,54,55,58,10,0
LB_6284: db 34,115,108,118,95,110,115,95,109,32,49,58,110,111,116,32,102,111,117,110,100,34,0
LB_6287: db 59,32,226,136,142,124,10,101,120,110,32,55,52,49,49,52,58,10,0
LB_6306: db 194,167,194,167,32,77,48,10,9,226,136,142,226,136,142,32,10,0
LB_6315: db 39,48,226,151,130,0
LB_6317: db 39,49,226,151,130,0
LB_6322: db 39,48,226,151,130,0
LB_6323: db 39,49,226,151,130,0
LB_6329: db 39,48,226,151,130,0
LB_6330: db 39,49,226,151,130,0
LB_6337: db 34,68,48,34,0
LB_6368: db 59,32,226,136,142,124,10,101,120,110,32,49,51,49,53,56,56,58,10,0
LB_6369: db 59,32,226,136,142,124,10,101,120,110,32,49,51,49,54,49,53,58,10,0
LB_6370: db 120,121,48,0
LB_6378: db 39,48,226,151,130,0
LB_6379: db 39,49,226,151,130,0
LB_6383: db 34,68,48,34,0
LB_6386: db 59,32,226,136,142,124,10,101,120,110,32,49,51,49,56,57,52,58,10,0
LB_6392: db 194,167,194,167,32,77,48,10,9,226,136,142,226,136,142,32,10,0
LB_6404: db 9,226,136,142,32,120,32,10,0
LB_6411: db 39,48,226,151,130,0
LB_6413: db 39,49,226,151,130,0
LB_6418: db 39,48,226,151,130,0
LB_6419: db 39,49,226,151,130,0
section .text
global _start

info:
	C_PUSH_REGS
	mov rdi,fmt_info 
	mov rsi,QWORD [SS_LN_C]
	mov rdx,SS_LN_N 
	xor rax,rax 
	C_CALL printf
	mov rax,0
info_rcd:
	push rax 
	mov rdi,fmt_info_rcd
	mov rsi,rax 
	mov rdx,QWORD [SS_RCD_C+8*rax]
	mov rcx,QWORD [SS_RCD_N+8*rax]
	xor rax,rax
	C_CALL printf 
	pop rax 
	cmp rax,RCD_N 
	jz info_rcd_end 
	add rax,1 
	jmp info_rcd 
info_rcd_end:
	C_POP_REGS 
	ret
;getchar:
;	xor rax,rax 
;	C_CALL_SF getchar 
;	ret

sig_hdl: ; rdi=sig_n rsi=siginfo_t* rdx=void*
	push rdi 
	push rsi 
	push rdx 
	xor rax,rax 
	mov rsi,rdi 
	mov rdi,fmt_sig_hdl
	C_CALL printf 
	call info 
	call exit 
	jmp err

eq_s8: ;rdi,rsi
	push rdx
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,QWORD [rdi]
	mov rdx,0x0000_ffff_ffff_ffff
	and rdx,QWORD [rsi]
	cmp rax,rdx
	jnz eq_s8_f 
eq_s8_lp:
	cmp rax,0
	jz eq_s8_t
	movzx rdx,BYTE [rdi+7+rax]
	cmp BYTE [rsi+7+rax],dl 
	jnz eq_s8_f 
	sub rax,1 
	jmp eq_s8_lp 
eq_s8_f:
	pop rdx 
	mov rax,0 
	stz
	ret 
eq_s8_t:
	pop rdx 
	mov rax,1 
	ret

rpc_s8: ; rdi ⊢ rax
	push rdi 
	mov rsi,0x0000_ffff_ffff_ffff
	and rsi,QWORD [rdi]  
	push rsi
	mov rdi,rsi 
	call mlc_s8
	pop rcx 
	pop rsi 
	add rsi,8
	lea rdi,[rax+8]
	cld 
	rep movsb
	ret
     
esc_s8: ; rdi ⊢ rax 
	mov rsi,0x0000_ffff_ffff_ffff
	and rsi,QWORD [rdi] 
	mov rax,rsi 
	shl rax,1 
	sub rsp,rax 
esc_s8_lp0: 

arr_of_lst: 
	mov rsi,0 
arr_of_lst_r:
	cmp BYTE [rdi+6],1
	jz arr_of_lst_end 
	push QWORD [rdi+8] 
	mov rdi,QWORD [rdi+16]
	add rsi,1 
	call arr_of_lst_r
	sub rsi,1 
	pop QWORD [rax+8+8*rsi]
	ret 
arr_of_lst_end: 
	push rsi 
	xor rax,rax
	mov rdi,8
	add rsi,1 
	C_CALL calloc
	pop rsi 
	mov QWORD [rax],rsi
	ret 

scf_d: ; rdi=src ⊢ rax=flg rdi=dst rsi=n
	push rdi
	movzx rdi,BYTE [rdi]
	C_CALL isspace
	cmp rax,0
	jnz scf_d_err0 
	jmp scf_d_scf 
scf_d_err0: 
	add rsp,8
	mov rax,0
	ret
	scf_d_scf:
	mov rdi,QWORD [rsp]
	sub rsp,8
	mov rsi,rsp
	mov rdx,10
	mov rax,0
	C_CALL strtoul
	pop rsi
	pop rdi
	sub rsi,rdi
	jz scf_d_err1
 mov rdi,rax
	mov rax,1 
	ret
scf_d_err1:
	mov rax,0 
	ret

scf_x: ; rdi=src ⊢ rax=flg rdi=dst rsi=n
	push rdi
	movzx rdi,BYTE [rdi]
	C_CALL isspace
	cmp rax,0
	jnz scf_x_err0 
	jmp scf_x_scf 
scf_x_err0: 
	add rsp,8
	mov rax,0
	ret
	scf_x_scf:
	mov rdi,QWORD [rsp]
	sub rsp,8
	mov rsi,rsp
	mov rdx,16
	mov rax,0
	C_CALL strtoul
	pop rsi
	pop rdi
	sub rsi,rdi
	jz scf_x_err1
 mov rdi,rax
	mov rax,1 
	ret
scf_x_err1:
	mov rax,0 
	ret

mlc_s8: ; rdi=len  
	push rdi 
	and rdi,~111b
	lea rdi,[rdi+16] 
	mov rsi,1 
	xor rax,rax 
	C_CALL_SF calloc
	pop QWORD [rax] 
	ret

s8_of_c_stg: 
	push rdi
	xor rax,rax
	C_CALL strlen
	push rax
	mov rdi,rax
	call mlc_s8
	pop rcx
	pop rsi
	mov rdi,rax
	add rdi,8
	cld
	rep movsb
	ret

free_s8: ;rdi=ptr
	C_CALL_SF free
	ret 

in_fn: 
	mov rax,2
	mov rsi,2
	syscall
	push rax ; [rsp]=fd
	mov rdi,rax
	mov rax,5
	mov rsi,stat
	syscall
	mov rdi,[stat + STAT.st_size]
	call mlc_s8
	mov rdi,QWORD [rsp]
	push rax ; [rsp]=buf
	mov rsi,rax
	add rsi,8
	mov rax,0
	mov rdx,[stat+STAT.st_size]
	syscall
	mov rax,3
	mov rdi,QWORD [rsp+8]
	syscall
	mov rax,QWORD [rsp]	
	add rsp,16
	ret 

out_fn: ; rdi=fn,rsi=src
	push rsi 
	mov rax,2
	mov rsi,0x42
	syscall
	pop rsi 
	push rax
	mov rdi,rax
	mov rdx,QWORD [rsi]
	mov rax,0x0000_ffff_ffff_ffff
	and rdx,rax
	add rsi,8
	mov rax,1
	syscall
	pop rdi
	mov rax,3
	syscall
	ret

emt_stg: ; rdi=stg 
	xor rax,rax 
	C_CALL_SF printf
	ret

emt_r64: ;rdi=r64
	xor rax,rax 
	mov rsi,rdi
	mov rdi,fmt_r64
	C_CALL_SF printf
	ret

emt_s8: ;rdi=s8
	xor rax,rax 
	lea rsi,[rdi+8]
	mov rdi,fmt_s8
	C_CALL_SF printf
	ret

emt_add: ; rdi=len rsi=stg
	cld 
	push rcx 
	mov rcx,rdi 
	mov rax,QWORD [EMT_BUF_OFS]
	add rdi,rax
	cmp rdi,EMT_BUF_MAX 
	jge emt_add_buf 
	mov BYTE [EMT_BUF+rdi],0
	mov QWORD [EMT_BUF_OFS],rdi
	lea rdi,[EMT_BUF+rax]
	jmp emt_add_end 
emt_add_buf:
	push rsi 
	call emt_buf 
	pop rsi 
	cmp rcx,EMT_BUF_MAX
	jge emt_add_stg 
	mov BYTE [EMT_BUF+rcx],0
	mov QWORD [EMT_BUF_OFS],rcx 
	mov rdi,EMT_BUF
emt_add_end:
	rep movsb 
	pop rcx 
	ret 
emt_add_stg 
	mov QWORD [EMT_BUF],0
	mov QWORD [EMT_BUF_OFS],0
	mov rdi,rsi 
	call emt_stg 
	pop rcx 
	ret 

emt_buf:
	xor rax,rax 
	mov rdi,EMT_BUF 
	C_CALL printf 
	mov QWORD [EMT_BUF_OFS],0
	mov BYTE [EMT_BUF],0
	ret 
	 
_start:
; set signal handler 
	mov rdi,SIG_SEGV 
	mov rsi,sig_hdl 
	C_CALL set_handler 

SS_init:
	mov QWORD [SS_TOP],SS_VCT
	mov rdi,0 
	mov rax,SS_VCT 
SS_lp: 
	cmp rdi,SS_MAX 
	jz SS_end 
	add rdi,1 
	lea rsi,[rax+8*16] 
	mov QWORD [rax],rsi 
	mov rax,rsi 
	jmp SS_lp 
SS_end:
	mov rsi,SS_NULL 
	mov [rax],rsi

SS_LN_init:
	mov SS_LN_N,0
	mov QWORD [SS_LN_TOP],SS_LN_VCT
	mov r15,SS_LN_VCT 
	mov rdi,0 
	mov rax,SS_LN_VCT 
SS_LN_lp: 
	cmp rdi,SS_LN_MAX 
	jz SS_LN_end 
	add rdi,1 
	lea rsi,[rax+8*2] 
	mov QWORD [rax],rsi 
	mov rax,rsi 
	jmp SS_LN_lp 
SS_LN_end:
	mov rsi,0xffff_ffff_ffff_0100 
	mov [rax],rsi

SS_PT_init:
	mov QWORD [SS_PT_TOP],SS_PT_VCT
	mov rdi,0 
	mov rax,SS_PT_VCT 
SS_PT_lp: 
	cmp rdi,SS_MAX 
	jz SS_PT_end 
	add rdi,1 
	lea rsi,[rax+8*3] 
	mov QWORD [rax],rsi 
	mov rax,rsi 
	jmp SS_PT_lp 
SS_PT_end:
	mov rsi,0xffff_ffff_ffff_0200 
	mov [rax],rsi

	mov rdi,0
	mov QWORD [EMT_BUF],0
	mov QWORD [EMT_BUF_OFS],0

; _args 
	mov rdi,QWORD [rsp]
 lea rdi,[rdi+1]
	mov rsi,8 
	xor rax,rax 
	C_CALL calloc
	pop r13
	mov QWORD [rax],r13
	xor r14,r14
	mov rbx,rax
args_lp:
	cmp r14,r13
	jz args_lp_end
	pop rdi
	call s8_of_c_stg 
	mov QWORD [rbx+8+8*r14],rax
	add r14,1 
	jmp args_lp 
args_lp_end:
	mov r13,rbx
	

init_ss_rcd_1:
	mov QWORD [SS_RCD_N+8*1],0
	mov QWORD [SS_RCD_C+8*1],0
	mov QWORD [SS_RCD_1_TOP],SS_RCD_1_VCT
	mov rdi,0 
	mov rax,SS_RCD_1_VCT
ss_lp_rcd_1:
	cmp rdi,SS_RCD_1_MAX
	jz ss_end_rcd_1
	add rdi,1 
	lea rsi,[rax+8*2]
	mov QWORD [rax],rsi 
	mov rax,rsi 
	jmp ss_lp_rcd_1
ss_end_rcd_1:
	mov rsi,-65535
	mov [rax],rsi 

init_ss_rcd_2:
	mov QWORD [SS_RCD_N+8*2],0
	mov QWORD [SS_RCD_C+8*2],0
	mov QWORD [SS_RCD_2_TOP],SS_RCD_2_VCT
	mov rdi,0 
	mov rax,SS_RCD_2_VCT
ss_lp_rcd_2:
	cmp rdi,SS_RCD_2_MAX
	jz ss_end_rcd_2
	add rdi,1 
	lea rsi,[rax+8*3]
	mov QWORD [rax],rsi 
	mov rax,rsi 
	jmp ss_lp_rcd_2
ss_end_rcd_2:
	mov rsi,-65534
	mov [rax],rsi 

init_ss_rcd_3:
	mov QWORD [SS_RCD_N+8*3],0
	mov QWORD [SS_RCD_C+8*3],0
	mov QWORD [SS_RCD_3_TOP],SS_RCD_3_VCT
	mov rdi,0 
	mov rax,SS_RCD_3_VCT
ss_lp_rcd_3:
	cmp rdi,SS_RCD_3_MAX
	jz ss_end_rcd_3
	add rdi,1 
	lea rsi,[rax+8*4]
	mov QWORD [rax],rsi 
	mov rax,rsi 
	jmp ss_lp_rcd_3
ss_end_rcd_3:
	mov rsi,-65533
	mov [rax],rsi 

init_ss_rcd_4:
	mov QWORD [SS_RCD_N+8*4],0
	mov QWORD [SS_RCD_C+8*4],0
	mov QWORD [SS_RCD_4_TOP],SS_RCD_4_VCT
	mov rdi,0 
	mov rax,SS_RCD_4_VCT
ss_lp_rcd_4:
	cmp rdi,SS_RCD_4_MAX
	jz ss_end_rcd_4
	add rdi,1 
	lea rsi,[rax+8*5]
	mov QWORD [rax],rsi 
	mov rax,rsi 
	jmp ss_lp_rcd_4
ss_end_rcd_4:
	mov rsi,-65532
	mov [rax],rsi 

init_ss_rcd_5:
	mov QWORD [SS_RCD_N+8*5],0
	mov QWORD [SS_RCD_C+8*5],0
	mov QWORD [SS_RCD_5_TOP],SS_RCD_5_VCT
	mov rdi,0 
	mov rax,SS_RCD_5_VCT
ss_lp_rcd_5:
	cmp rdi,SS_RCD_5_MAX
	jz ss_end_rcd_5
	add rdi,1 
	lea rsi,[rax+8*6]
	mov QWORD [rax],rsi 
	mov rax,rsi 
	jmp ss_lp_rcd_5
ss_end_rcd_5:
	mov rsi,-65531
	mov [rax],rsi 

init_ss_rcd_6:
	mov QWORD [SS_RCD_N+8*6],0
	mov QWORD [SS_RCD_C+8*6],0
	mov QWORD [SS_RCD_6_TOP],SS_RCD_6_VCT
	mov rdi,0 
	mov rax,SS_RCD_6_VCT
ss_lp_rcd_6:
	cmp rdi,SS_RCD_6_MAX
	jz ss_end_rcd_6
	add rdi,1 
	lea rsi,[rax+8*7]
	mov QWORD [rax],rsi 
	mov rax,rsi 
	jmp ss_lp_rcd_6
ss_end_rcd_6:
	mov rsi,-65530
	mov [rax],rsi 

init_ss_rcd_7:
	mov QWORD [SS_RCD_N+8*7],0
	mov QWORD [SS_RCD_C+8*7],0
	mov QWORD [SS_RCD_7_TOP],SS_RCD_7_VCT
	mov rdi,0 
	mov rax,SS_RCD_7_VCT
ss_lp_rcd_7:
	cmp rdi,SS_RCD_7_MAX
	jz ss_end_rcd_7
	add rdi,1 
	lea rsi,[rax+8*8]
	mov QWORD [rax],rsi 
	mov rax,rsi 
	jmp ss_lp_rcd_7
ss_end_rcd_7:
	mov rsi,-65529
	mov [rax],rsi 

init_ss_rcd_8:
	mov QWORD [SS_RCD_N+8*8],0
	mov QWORD [SS_RCD_C+8*8],0
	mov QWORD [SS_RCD_8_TOP],SS_RCD_8_VCT
	mov rdi,0 
	mov rax,SS_RCD_8_VCT
ss_lp_rcd_8:
	cmp rdi,SS_RCD_8_MAX
	jz ss_end_rcd_8
	add rdi,1 
	lea rsi,[rax+8*9]
	mov QWORD [rax],rsi 
	mov rax,rsi 
	jmp ss_lp_rcd_8
ss_end_rcd_8:
	mov rsi,-65528
	mov [rax],rsi 

init_ss_rcd_9:
	mov QWORD [SS_RCD_N+8*9],0
	mov QWORD [SS_RCD_C+8*9],0
	mov QWORD [SS_RCD_9_TOP],SS_RCD_9_VCT
	mov rdi,0 
	mov rax,SS_RCD_9_VCT
ss_lp_rcd_9:
	cmp rdi,SS_RCD_9_MAX
	jz ss_end_rcd_9
	add rdi,1 
	lea rsi,[rax+8*10]
	mov QWORD [rax],rsi 
	mov rax,rsi 
	jmp ss_lp_rcd_9
ss_end_rcd_9:
	mov rsi,-65527
	mov [rax],rsi 

init_ss_rcd_10:
	mov QWORD [SS_RCD_N+8*10],0
	mov QWORD [SS_RCD_C+8*10],0
	mov QWORD [SS_RCD_10_TOP],SS_RCD_10_VCT
	mov rdi,0 
	mov rax,SS_RCD_10_VCT
ss_lp_rcd_10:
	cmp rdi,SS_RCD_10_MAX
	jz ss_end_rcd_10
	add rdi,1 
	lea rsi,[rax+8*11]
	mov QWORD [rax],rsi 
	mov rax,rsi 
	jmp ss_lp_rcd_10
ss_end_rcd_10:
	mov rsi,-65526
	mov [rax],rsi 

init_ss_rcd_11:
	mov QWORD [SS_RCD_N+8*11],0
	mov QWORD [SS_RCD_C+8*11],0
	mov QWORD [SS_RCD_11_TOP],SS_RCD_11_VCT
	mov rdi,0 
	mov rax,SS_RCD_11_VCT
ss_lp_rcd_11:
	cmp rdi,SS_RCD_11_MAX
	jz ss_end_rcd_11
	add rdi,1 
	lea rsi,[rax+8*12]
	mov QWORD [rax],rsi 
	mov rax,rsi 
	jmp ss_lp_rcd_11
ss_end_rcd_11:
	mov rsi,-65525
	mov [rax],rsi 

init_ss_rcd_12:
	mov QWORD [SS_RCD_N+8*12],0
	mov QWORD [SS_RCD_C+8*12],0
	mov QWORD [SS_RCD_12_TOP],SS_RCD_12_VCT
	mov rdi,0 
	mov rax,SS_RCD_12_VCT
ss_lp_rcd_12:
	cmp rdi,SS_RCD_12_MAX
	jz ss_end_rcd_12
	add rdi,1 
	lea rsi,[rax+8*13]
	mov QWORD [rax],rsi 
	mov rax,rsi 
	jmp ss_lp_rcd_12
ss_end_rcd_12:
	mov rsi,-65524
	mov [rax],rsi 

init_ss_rcd_13:
	mov QWORD [SS_RCD_N+8*13],0
	mov QWORD [SS_RCD_C+8*13],0
	mov QWORD [SS_RCD_13_TOP],SS_RCD_13_VCT
	mov rdi,0 
	mov rax,SS_RCD_13_VCT
ss_lp_rcd_13:
	cmp rdi,SS_RCD_13_MAX
	jz ss_end_rcd_13
	add rdi,1 
	lea rsi,[rax+8*14]
	mov QWORD [rax],rsi 
	mov rax,rsi 
	jmp ss_lp_rcd_13
ss_end_rcd_13:
	mov rsi,-65523
	mov [rax],rsi 

init_ss_rcd_14:
	mov QWORD [SS_RCD_N+8*14],0
	mov QWORD [SS_RCD_C+8*14],0
	mov QWORD [SS_RCD_14_TOP],SS_RCD_14_VCT
	mov rdi,0 
	mov rax,SS_RCD_14_VCT
ss_lp_rcd_14:
	cmp rdi,SS_RCD_14_MAX
	jz ss_end_rcd_14
	add rdi,1 
	lea rsi,[rax+8*15]
	mov QWORD [rax],rsi 
	mov rax,rsi 
	jmp ss_lp_rcd_14
ss_end_rcd_14:
	mov rsi,-65522
	mov [rax],rsi 

init_ss_rcd_15:
	mov QWORD [SS_RCD_N+8*15],0
	mov QWORD [SS_RCD_C+8*15],0
	mov QWORD [SS_RCD_15_TOP],SS_RCD_15_VCT
	mov rdi,0 
	mov rax,SS_RCD_15_VCT
ss_lp_rcd_15:
	cmp rdi,SS_RCD_15_MAX
	jz ss_end_rcd_15
	add rdi,1 
	lea rsi,[rax+8*16]
	mov QWORD [rax],rsi 
	mov rax,rsi 
	jmp ss_lp_rcd_15
ss_end_rcd_15:
	mov rsi,-65521
	mov [rax],rsi 

init_ss_rcd_16:
	mov QWORD [SS_RCD_N+8*16],0
	mov QWORD [SS_RCD_C+8*16],0
	mov QWORD [SS_RCD_16_TOP],SS_RCD_16_VCT
	mov rdi,0 
	mov rax,SS_RCD_16_VCT
ss_lp_rcd_16:
	cmp rdi,SS_RCD_16_MAX
	jz ss_end_rcd_16
	add rdi,1 
	lea rsi,[rax+8*17]
	mov QWORD [rax],rsi 
	mov rax,rsi 
	jmp ss_lp_rcd_16
ss_end_rcd_16:
	mov rsi,-65520
	mov [rax],rsi 

init_ss_rcd_17:
	mov QWORD [SS_RCD_N+8*17],0
	mov QWORD [SS_RCD_C+8*17],0
	mov QWORD [SS_RCD_17_TOP],SS_RCD_17_VCT
	mov rdi,0 
	mov rax,SS_RCD_17_VCT
ss_lp_rcd_17:
	cmp rdi,SS_RCD_17_MAX
	jz ss_end_rcd_17
	add rdi,1 
	lea rsi,[rax+8*18]
	mov QWORD [rax],rsi 
	mov rax,rsi 
	jmp ss_lp_rcd_17
ss_end_rcd_17:
	mov rsi,-65519
	mov [rax],rsi 

init_ss_rcd_18:
	mov QWORD [SS_RCD_N+8*18],0
	mov QWORD [SS_RCD_C+8*18],0
	mov QWORD [SS_RCD_18_TOP],SS_RCD_18_VCT
	mov rdi,0 
	mov rax,SS_RCD_18_VCT
ss_lp_rcd_18:
	cmp rdi,SS_RCD_18_MAX
	jz ss_end_rcd_18
	add rdi,1 
	lea rsi,[rax+8*19]
	mov QWORD [rax],rsi 
	mov rax,rsi 
	jmp ss_lp_rcd_18
ss_end_rcd_18:
	mov rsi,-65518
	mov [rax],rsi 

init_ss_rcd_19:
	mov QWORD [SS_RCD_N+8*19],0
	mov QWORD [SS_RCD_C+8*19],0
	mov QWORD [SS_RCD_19_TOP],SS_RCD_19_VCT
	mov rdi,0 
	mov rax,SS_RCD_19_VCT
ss_lp_rcd_19:
	cmp rdi,SS_RCD_19_MAX
	jz ss_end_rcd_19
	add rdi,1 
	lea rsi,[rax+8*20]
	mov QWORD [rax],rsi 
	mov rax,rsi 
	jmp ss_lp_rcd_19
ss_end_rcd_19:
	mov rsi,-65517
	mov [rax],rsi 

init_ss_rcd_20:
	mov QWORD [SS_RCD_N+8*20],0
	mov QWORD [SS_RCD_C+8*20],0
	mov QWORD [SS_RCD_20_TOP],SS_RCD_20_VCT
	mov rdi,0 
	mov rax,SS_RCD_20_VCT
ss_lp_rcd_20:
	cmp rdi,SS_RCD_20_MAX
	jz ss_end_rcd_20
	add rdi,1 
	lea rsi,[rax+8*21]
	mov QWORD [rax],rsi 
	mov rax,rsi 
	jmp ss_lp_rcd_20
ss_end_rcd_20:
	mov rsi,-65516
	mov [rax],rsi 

init_ss_rcd_21:
	mov QWORD [SS_RCD_N+8*21],0
	mov QWORD [SS_RCD_C+8*21],0
	mov QWORD [SS_RCD_21_TOP],SS_RCD_21_VCT
	mov rdi,0 
	mov rax,SS_RCD_21_VCT
ss_lp_rcd_21:
	cmp rdi,SS_RCD_21_MAX
	jz ss_end_rcd_21
	add rdi,1 
	lea rsi,[rax+8*22]
	mov QWORD [rax],rsi 
	mov rax,rsi 
	jmp ss_lp_rcd_21
ss_end_rcd_21:
	mov rsi,-65515
	mov [rax],rsi 

init_ss_rcd_22:
	mov QWORD [SS_RCD_N+8*22],0
	mov QWORD [SS_RCD_C+8*22],0
	mov QWORD [SS_RCD_22_TOP],SS_RCD_22_VCT
	mov rdi,0 
	mov rax,SS_RCD_22_VCT
ss_lp_rcd_22:
	cmp rdi,SS_RCD_22_MAX
	jz ss_end_rcd_22
	add rdi,1 
	lea rsi,[rax+8*23]
	mov QWORD [rax],rsi 
	mov rax,rsi 
	jmp ss_lp_rcd_22
ss_end_rcd_22:
	mov rsi,-65514
	mov [rax],rsi 

init_ss_rcd_23:
	mov QWORD [SS_RCD_N+8*23],0
	mov QWORD [SS_RCD_C+8*23],0
	mov QWORD [SS_RCD_23_TOP],SS_RCD_23_VCT
	mov rdi,0 
	mov rax,SS_RCD_23_VCT
ss_lp_rcd_23:
	cmp rdi,SS_RCD_23_MAX
	jz ss_end_rcd_23
	add rdi,1 
	lea rsi,[rax+8*24]
	mov QWORD [rax],rsi 
	mov rax,rsi 
	jmp ss_lp_rcd_23
ss_end_rcd_23:
	mov rsi,-65513
	mov [rax],rsi 

init_ss_rcd_24:
	mov QWORD [SS_RCD_N+8*24],0
	mov QWORD [SS_RCD_C+8*24],0
	mov QWORD [SS_RCD_24_TOP],SS_RCD_24_VCT
	mov rdi,0 
	mov rax,SS_RCD_24_VCT
ss_lp_rcd_24:
	cmp rdi,SS_RCD_24_MAX
	jz ss_end_rcd_24
	add rdi,1 
	lea rsi,[rax+8*25]
	mov QWORD [rax],rsi 
	mov rax,rsi 
	jmp ss_lp_rcd_24
ss_end_rcd_24:
	mov rsi,-65512
	mov [rax],rsi 

init_ss_rcd_25:
	mov QWORD [SS_RCD_N+8*25],0
	mov QWORD [SS_RCD_C+8*25],0
	mov QWORD [SS_RCD_25_TOP],SS_RCD_25_VCT
	mov rdi,0 
	mov rax,SS_RCD_25_VCT
ss_lp_rcd_25:
	cmp rdi,SS_RCD_25_MAX
	jz ss_end_rcd_25
	add rdi,1 
	lea rsi,[rax+8*26]
	mov QWORD [rax],rsi 
	mov rax,rsi 
	jmp ss_lp_rcd_25
ss_end_rcd_25:
	mov rsi,-65511
	mov [rax],rsi 

init_ss_rcd_26:
	mov QWORD [SS_RCD_N+8*26],0
	mov QWORD [SS_RCD_C+8*26],0
	mov QWORD [SS_RCD_26_TOP],SS_RCD_26_VCT
	mov rdi,0 
	mov rax,SS_RCD_26_VCT
ss_lp_rcd_26:
	cmp rdi,SS_RCD_26_MAX
	jz ss_end_rcd_26
	add rdi,1 
	lea rsi,[rax+8*27]
	mov QWORD [rax],rsi 
	mov rax,rsi 
	jmp ss_lp_rcd_26
ss_end_rcd_26:
	mov rsi,-65510
	mov [rax],rsi 

init_ss_rcd_27:
	mov QWORD [SS_RCD_N+8*27],0
	mov QWORD [SS_RCD_C+8*27],0
	mov QWORD [SS_RCD_27_TOP],SS_RCD_27_VCT
	mov rdi,0 
	mov rax,SS_RCD_27_VCT
ss_lp_rcd_27:
	cmp rdi,SS_RCD_27_MAX
	jz ss_end_rcd_27
	add rdi,1 
	lea rsi,[rax+8*28]
	mov QWORD [rax],rsi 
	mov rax,rsi 
	jmp ss_lp_rcd_27
ss_end_rcd_27:
	mov rsi,-65509
	mov [rax],rsi 

init_ss_rcd_28:
	mov QWORD [SS_RCD_N+8*28],0
	mov QWORD [SS_RCD_C+8*28],0
	mov QWORD [SS_RCD_28_TOP],SS_RCD_28_VCT
	mov rdi,0 
	mov rax,SS_RCD_28_VCT
ss_lp_rcd_28:
	cmp rdi,SS_RCD_28_MAX
	jz ss_end_rcd_28
	add rdi,1 
	lea rsi,[rax+8*29]
	mov QWORD [rax],rsi 
	mov rax,rsi 
	jmp ss_lp_rcd_28
ss_end_rcd_28:
	mov rsi,-65508
	mov [rax],rsi 

init_ss_rcd_29:
	mov QWORD [SS_RCD_N+8*29],0
	mov QWORD [SS_RCD_C+8*29],0
	mov QWORD [SS_RCD_29_TOP],SS_RCD_29_VCT
	mov rdi,0 
	mov rax,SS_RCD_29_VCT
ss_lp_rcd_29:
	cmp rdi,SS_RCD_29_MAX
	jz ss_end_rcd_29
	add rdi,1 
	lea rsi,[rax+8*30]
	mov QWORD [rax],rsi 
	mov rax,rsi 
	jmp ss_lp_rcd_29
ss_end_rcd_29:
	mov rsi,-65507
	mov [rax],rsi 

init_ss_rcd_30:
	mov QWORD [SS_RCD_N+8*30],0
	mov QWORD [SS_RCD_C+8*30],0
	mov QWORD [SS_RCD_30_TOP],SS_RCD_30_VCT
	mov rdi,0 
	mov rax,SS_RCD_30_VCT
ss_lp_rcd_30:
	cmp rdi,SS_RCD_30_MAX
	jz ss_end_rcd_30
	add rdi,1 
	lea rsi,[rax+8*31]
	mov QWORD [rax],rsi 
	mov rax,rsi 
	jmp ss_lp_rcd_30
ss_end_rcd_30:
	mov rsi,-65506
	mov [rax],rsi 

init_ss_rcd_31:
	mov QWORD [SS_RCD_N+8*31],0
	mov QWORD [SS_RCD_C+8*31],0
	mov QWORD [SS_RCD_31_TOP],SS_RCD_31_VCT
	mov rdi,0 
	mov rax,SS_RCD_31_VCT
ss_lp_rcd_31:
	cmp rdi,SS_RCD_31_MAX
	jz ss_end_rcd_31
	add rdi,1 
	lea rsi,[rax+8*32]
	mov QWORD [rax],rsi 
	mov rax,rsi 
	jmp ss_lp_rcd_31
ss_end_rcd_31:
	mov rsi,-65505
	mov [rax],rsi 
	jmp RTM_0
ETR_40: ;; of_s8 0'(= {| l |} ) ⊢ 0'(= a14◂ [ ] ) : (_s8→_t14)
;; rsp=0 , %6~0'(= {| l |} ) 
; #38 0'(= {| l |} ) ⊢ 1(<4)◂0'(= {| l |} )
;; rsp=0 , %7~1(<4)◂0'(= {| l |} ) 
; ∎ 1(<4)◂0'(= {| l |} )
; .mov_ptn2 1(<4)◂0'(= {| l |} ) ⊢ 0'(= a14◂ [ ] )
	mov r14,r13
; .mov_ptn 1(<4)◂1'(= {| l |} ) ⊢ 0'(= a14◂ [ ] )
	mov rax,r14
	mov BYTE [rax+6],1
	mov r13,rax
	ret
ETR_41: ;; len 0'(= a14◂ [ ] ) ⊢ { 0'(= a14◂ [ ] ) 1'(= r ) } : (_t14→{ _t14 _r64 })
;; rsp=0 , %8~0'(= a14◂ [ ] ) 
;; ? 0'(= a14◂ [ ] ) ⊢ 0(<4)◂{ 1'(= a14◂ [ ] ) 2'(= r ) 3'(= a14◂ [ ] ) }
	mov rdi,r13
	cmp BYTE [rdi+6],0
	jnz LB_1
	jmp LB_2
LB_1:
	jmp LB_0
LB_2:
	mov r14, QWORD [r13+8]
	mov r8, QWORD [r13+16]
	mov r9, QWORD [r13+24]
	mov QWORD [GBG_VCT+8*0],r13
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_RCD 3,rdi
;; rsp=0 , %13~3'(= a14◂ [ ] ) %12~2'(= r ) %11~1'(= a14◂ [ ] ) 
; $ 2'(= r ) ⊢ 2'(= r ),0'(= r )
	mov rdi,r8
	C_PUSH_REGS
	mov r8,rdi
	mov rax,r8
	C_POP_REGS
	mov r13,rax
;; rsp=0 , %15~0'(= r ) %14~2'(= r ) %13~3'(= a14◂ [ ] ) %11~1'(= a14◂ [ ] ) 
; #39 { 1'(= a14◂ [ ] ) 0'(= r ) 3'(= a14◂ [ ] ) } ⊢ 0(<4)◂{ 1'(= a14◂ [ ] ) 0'(= r ) 3'(= a14◂ [ ] ) }
;; rsp=0 , %16~0(<4)◂{ 1'(= a14◂ [ ] ) 0'(= r ) 3'(= a14◂ [ ] ) } %14~2'(= r ) 
; ∎ { 0(<4)◂{ 1'(= a14◂ [ ] ) 0'(= r ) 3'(= a14◂ [ ] ) } 2'(= r ) }
; .mov_ptn2 { 0(<4)◂{ 1'(= a14◂ [ ] ) 0'(= r ) 3'(= a14◂ [ ] ) } 2'(= r ) } ⊢ { 0'(= a14◂ [ ] ) 1'(= r ) }
	mov r10,r13
; .mov_ptn 0(<4)◂{ 1'(= a14◂ [ ] ) 4'(= r ) 3'(= a14◂ [ ] ) } ⊢ 0'(= a14◂ [ ] )
	ALC_RCD 3, rax
	mov r11,rax
	mov rax,r14
	mov QWORD [r11+8+8*0],rax
	mov rax,r10
	mov QWORD [r11+8+8*1],rax
	mov rax,r9
	mov QWORD [r11+8+8*2],rax
	mov rax,r11
	mov BYTE [rax+6],0
	mov r13,rax
; .mov_ptn 2'(= r ) ⊢ 1'(= r )
	mov rax,r8
	mov r14,rax
	ret
LB_0:
;; ? 0'(= a14◂ [ ] ) ⊢ 3(<4)◂1'(= r )
	mov rdi,r13
	cmp BYTE [rdi+6],3
	jnz LB_4
	jmp LB_5
LB_4:
	jmp LB_3
LB_5:
	mov QWORD [GBG_VCT+8*0],rdi
	mov r14,QWORD [rdi+8]
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_LN rdi
;; rsp=0 , %10~1'(= r ) 
; $ %[ 1r ] ⊢ %[ 1r ]
;; rsp=0 , %17~%[ 1r ] %10~1'(= r ) 
; #36 1'(= r ) ⊢ 3(<4)◂1'(= r )
;; rsp=0 , %18~3(<4)◂1'(= r ) %17~%[ 1r ] 
; ∎ { 3(<4)◂1'(= r ) %[ 1r ] }
; .mov_ptn2 { 3(<4)◂1'(= r ) %[ 1r ] } ⊢ { 0'(= a14◂ [ ] ) 1'(= r ) }
; .mov_ptn 3(<4)◂1'(= r ) ⊢ 0'(= a14◂ [ ] )
	mov rax,r14
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],3
	mov QWORD [rax+8],rdi
	mov r13,rax
; .mov_ptn %[ 1r ] ⊢ 1'(= r )
	mov rax,1
	mov r14,rax
	ret
LB_3:
;; ? 0'(= a14◂ [ ] ) ⊢ 2(<4)◂{ }
	mov rdi,r13
	cmp BYTE [rdi+6],2
	jnz LB_7
	jmp LB_8
LB_7:
	jmp LB_6
LB_8:
;; rsp=0 , 
; #37 { } ⊢ 2(<4)◂{ }
;; rsp=0 , %19~2(<4)◂{ } 
; $ %[ 0r ] ⊢ %[ 0r ]
;; rsp=0 , %20~%[ 0r ] %19~2(<4)◂{ } 
; ∎ { 2(<4)◂{ } %[ 0r ] }
; .mov_ptn2 { 2(<4)◂{ } %[ 0r ] } ⊢ { 0'(= a14◂ [ ] ) 1'(= r ) }
; .mov_ptn %[ 0r ] ⊢ 1'(= r )
	mov rax,0
	mov r14,rax
; .mov_ptn 2(<4)◂{ } ⊢ 0'(= a14◂ [ ] )
	mov rax,unt 
	mov rax,unt_2
	mov r13,rax
	ret
LB_6:
;; ?. 0'(= a14◂ [ ] ) ⊢ 1(<4)◂0'(= {| l |} )
;; rsp=0 , %9~0'(= {| l |} ) 
; #9 0'(= {| l |} ) ⊢ { 0'(= {| l |} ) 1'(= r ) }
	mov rdi,r13
	mov rsi,0x0000_ffff_ffff_ffff
	and rsi,[rdi] 
	mov r14,rsi
;; rsp=0 , %22~1'(= r ) %21~0'(= {| l |} ) 
; #38 0'(= {| l |} ) ⊢ 1(<4)◂0'(= {| l |} )
;; rsp=0 , %23~1(<4)◂0'(= {| l |} ) %22~1'(= r ) 
; ∎ { 1(<4)◂0'(= {| l |} ) 1'(= r ) }
; .mov_ptn2 { 1(<4)◂0'(= {| l |} ) 1'(= r ) } ⊢ { 0'(= a14◂ [ ] ) 1'(= r ) }
	mov r8,r13
; .mov_ptn 1(<4)◂2'(= {| l |} ) ⊢ 0'(= a14◂ [ ] )
	mov rax,r8
	mov BYTE [rax+6],1
	mov r13,rax
	ret
ETR_42: ;; add_s8 { 0'(= a14◂ [ ] ) 1'(= {| l |} ) } ⊢ 0'(= a14◂ [ ] ) : ({ _t14 _s8 }→_t14)
;; rsp=0 , %25~1'(= {| l |} ) %24~0'(= a14◂ [ ] ) 
; #9 1'(= {| l |} ) ⊢ { 1'(= {| l |} ) 2'(= r ) }
	mov rdi,r14
	mov rsi,0x0000_ffff_ffff_ffff
	and rsi,[rdi] 
	mov r8,rsi
;; rsp=0 , %27~2'(= r ) %26~1'(= {| l |} ) %24~0'(= a14◂ [ ] ) 
; #41 0'(= a14◂ [ ] ) ⊢ { 0'(= a14◂ [ ] ) 3'(= r ) }
	sub rsp,16
	mov QWORD [rsp+8*0],r14
	mov QWORD [rsp+8*1],r8
; .mov_ptn2 0'(= a14◂ [ ] ) ⊢ 0'(= a14◂ [ ] )
	call ETR_41
	mov r8,QWORD [rsp-8+8*2]
	mov r9,r14
	mov r14,QWORD [rsp-8+8*1]
	add rsp,16
;; rsp=0 , %29~3'(= r ) %28~0'(= a14◂ [ ] ) %27~2'(= r ) %26~1'(= {| l |} ) 
; #13 { 2'(= r ) 3'(= r ) } ⊢ { 2'(= r ) 3'(= r ) }
	add r8,r9
;; rsp=0 , %31~3'(= r ) %30~2'(= r ) %28~0'(= a14◂ [ ] ) %26~1'(= {| l |} ) 
; #38 1'(= {| l |} ) ⊢ 1(<4)◂1'(= {| l |} )
;; rsp=0 , %32~1(<4)◂1'(= {| l |} ) %31~3'(= r ) %30~2'(= r ) %28~0'(= a14◂ [ ] ) 
; #39 { 0'(= a14◂ [ ] ) 2'(= r ) 1(<4)◂1'(= {| l |} ) } ⊢ 0(<4)◂{ 0'(= a14◂ [ ] ) 2'(= r ) 1(<4)◂1'(= {| l |} ) }
;; rsp=0 , %33~0(<4)◂{ 0'(= a14◂ [ ] ) 2'(= r ) 1(<4)◂1'(= {| l |} ) } %31~3'(= r ) 
; ∎ 0(<4)◂{ 0'(= a14◂ [ ] ) 2'(= r ) 1(<4)◂1'(= {| l |} ) }
; .dlt.ptn 3'(= r )
	mov rdi,r9
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<4)◂{ 0'(= a14◂ [ ] ) 2'(= r ) 1(<4)◂1'(= {| l |} ) } ⊢ 0'(= a14◂ [ ] )
	mov r9,r13
; .mov_ptn 0(<4)◂{ 3'(= a14◂ [ ] ) 2'(= r ) 1(<4)◂1'(= {| l |} ) } ⊢ 0'(= a14◂ [ ] )
	ALC_RCD 3, rax
	mov r10,rax
	mov rax,r9
	mov QWORD [r10+8+8*0],rax
	mov rax,r8
	mov QWORD [r10+8+8*1],rax
	mov rax,r14
	mov BYTE [rax+6],1
	mov QWORD [r10+8+8*2],rax
	mov rax,r10
	mov BYTE [rax+6],0
	mov r13,rax
	ret
ETR_43: ;; pfx_s8 { 0'(= {| l |} ) 1'(= a14◂ [ ] ) } ⊢ 0'(= a14◂ [ ] ) : ({ _s8 _t14 }→_t14)
;; rsp=0 , %35~1'(= a14◂ [ ] ) %34~0'(= {| l |} ) 
; #9 0'(= {| l |} ) ⊢ { 0'(= {| l |} ) 2'(= r ) }
	mov rdi,r13
	mov rsi,0x0000_ffff_ffff_ffff
	and rsi,[rdi] 
	mov r8,rsi
;; rsp=0 , %37~2'(= r ) %36~0'(= {| l |} ) %35~1'(= a14◂ [ ] ) 
; #41 1'(= a14◂ [ ] ) ⊢ { 3'(= a14◂ [ ] ) 1'(= r ) }
	sub rsp,16
	mov QWORD [rsp+8*0],r13
	mov QWORD [rsp+8*1],r8
; .mov_ptn2 1'(= a14◂ [ ] ) ⊢ 0'(= a14◂ [ ] )
; .mov_ptn 1'(= a14◂ [ ] ) ⊢ 0'(= a14◂ [ ] )
	mov rax,r14
	mov r13,rax
	call ETR_41
	mov r8,QWORD [rsp-8+8*2]
	mov r9,r13
	mov r13,QWORD [rsp-8+8*1]
	add rsp,16
;; rsp=0 , %39~1'(= r ) %38~3'(= a14◂ [ ] ) %37~2'(= r ) %36~0'(= {| l |} ) 
; #13 { 2'(= r ) 1'(= r ) } ⊢ { 2'(= r ) 1'(= r ) }
	add r8,r14
;; rsp=0 , %41~1'(= r ) %40~2'(= r ) %38~3'(= a14◂ [ ] ) %36~0'(= {| l |} ) 
; #38 0'(= {| l |} ) ⊢ 1(<4)◂0'(= {| l |} )
;; rsp=0 , %42~1(<4)◂0'(= {| l |} ) %41~1'(= r ) %40~2'(= r ) %38~3'(= a14◂ [ ] ) 
; #39 { 1(<4)◂0'(= {| l |} ) 2'(= r ) 3'(= a14◂ [ ] ) } ⊢ 0(<4)◂{ 1(<4)◂0'(= {| l |} ) 2'(= r ) 3'(= a14◂ [ ] ) }
;; rsp=0 , %43~0(<4)◂{ 1(<4)◂0'(= {| l |} ) 2'(= r ) 3'(= a14◂ [ ] ) } %41~1'(= r ) 
; ∎ 0(<4)◂{ 1(<4)◂0'(= {| l |} ) 2'(= r ) 3'(= a14◂ [ ] ) }
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<4)◂{ 1(<4)◂0'(= {| l |} ) 2'(= r ) 3'(= a14◂ [ ] ) } ⊢ 0'(= a14◂ [ ] )
	mov r14,r13
; .mov_ptn 0(<4)◂{ 1(<4)◂1'(= {| l |} ) 2'(= r ) 3'(= a14◂ [ ] ) } ⊢ 0'(= a14◂ [ ] )
	ALC_RCD 3, rax
	mov r10,rax
	mov rax,r14
	mov BYTE [rax+6],1
	mov QWORD [r10+8+8*0],rax
	mov rax,r8
	mov QWORD [r10+8+8*1],rax
	mov rax,r9
	mov QWORD [r10+8+8*2],rax
	mov rax,r10
	mov BYTE [rax+6],0
	mov r13,rax
	ret
ETR_44: ;; add_chr { 0'(= a14◂ [ ] ) 1'(= r ) } ⊢ 0'(= a14◂ [ ] ) : ({ _t14 _r64 }→_t14)
;; rsp=0 , %45~1'(= r ) %44~0'(= a14◂ [ ] ) 
; #41 0'(= a14◂ [ ] ) ⊢ { 0'(= a14◂ [ ] ) 2'(= r ) }
	sub rsp,8
	mov QWORD [rsp+8*0],r14
; .mov_ptn2 0'(= a14◂ [ ] ) ⊢ 0'(= a14◂ [ ] )
	call ETR_41
	mov r8,r14
	mov r14,QWORD [rsp-8+8*1]
	add rsp,8
;; rsp=0 , %47~2'(= r ) %46~0'(= a14◂ [ ] ) %45~1'(= r ) 
; #11 2'(= r ) ⊢ 2'(= r )
	add r8,1
;; rsp=0 , %48~2'(= r ) %46~0'(= a14◂ [ ] ) %45~1'(= r ) 
; #36 1'(= r ) ⊢ 3(<4)◂1'(= r )
;; rsp=0 , %49~3(<4)◂1'(= r ) %48~2'(= r ) %46~0'(= a14◂ [ ] ) 
; #39 { 0'(= a14◂ [ ] ) 2'(= r ) 3(<4)◂1'(= r ) } ⊢ 0(<4)◂{ 0'(= a14◂ [ ] ) 2'(= r ) 3(<4)◂1'(= r ) }
;; rsp=0 , %50~0(<4)◂{ 0'(= a14◂ [ ] ) 2'(= r ) 3(<4)◂1'(= r ) } 
; ∎ 0(<4)◂{ 0'(= a14◂ [ ] ) 2'(= r ) 3(<4)◂1'(= r ) }
; .mov_ptn2 0(<4)◂{ 0'(= a14◂ [ ] ) 2'(= r ) 3(<4)◂1'(= r ) } ⊢ 0'(= a14◂ [ ] )
	mov r9,r13
; .mov_ptn 0(<4)◂{ 3'(= a14◂ [ ] ) 2'(= r ) 3(<4)◂1'(= r ) } ⊢ 0'(= a14◂ [ ] )
	ALC_RCD 3, rax
	mov r10,rax
	mov rax,r9
	mov QWORD [r10+8+8*0],rax
	mov rax,r8
	mov QWORD [r10+8+8*1],rax
	mov rax,r14
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],3
	mov QWORD [rax+8],rdi
	mov QWORD [r10+8+8*2],rax
	mov rax,r10
	mov BYTE [rax+6],0
	mov r13,rax
	ret
ETR_45: ;; pfx_chr { 0'(= r ) 1'(= a14◂ [ ] ) } ⊢ 0'(= a14◂ [ ] ) : ({ _r64 _t14 }→_t14)
;; rsp=0 , %52~1'(= a14◂ [ ] ) %51~0'(= r ) 
; #41 1'(= a14◂ [ ] ) ⊢ { 2'(= a14◂ [ ] ) 1'(= r ) }
	sub rsp,8
	mov QWORD [rsp+8*0],r13
; .mov_ptn2 1'(= a14◂ [ ] ) ⊢ 0'(= a14◂ [ ] )
; .mov_ptn 1'(= a14◂ [ ] ) ⊢ 0'(= a14◂ [ ] )
	mov rax,r14
	mov r13,rax
	call ETR_41
	mov r8,r13
	mov r13,QWORD [rsp-8+8*1]
	add rsp,8
;; rsp=0 , %54~1'(= r ) %53~2'(= a14◂ [ ] ) %51~0'(= r ) 
; #11 1'(= r ) ⊢ 1'(= r )
	add r14,1
;; rsp=0 , %55~1'(= r ) %53~2'(= a14◂ [ ] ) %51~0'(= r ) 
; #36 0'(= r ) ⊢ 3(<4)◂0'(= r )
;; rsp=0 , %56~3(<4)◂0'(= r ) %55~1'(= r ) %53~2'(= a14◂ [ ] ) 
; #39 { 3(<4)◂0'(= r ) 1'(= r ) 2'(= a14◂ [ ] ) } ⊢ 0(<4)◂{ 3(<4)◂0'(= r ) 1'(= r ) 2'(= a14◂ [ ] ) }
;; rsp=0 , %57~0(<4)◂{ 3(<4)◂0'(= r ) 1'(= r ) 2'(= a14◂ [ ] ) } 
; ∎ 0(<4)◂{ 3(<4)◂0'(= r ) 1'(= r ) 2'(= a14◂ [ ] ) }
; .mov_ptn2 0(<4)◂{ 3(<4)◂0'(= r ) 1'(= r ) 2'(= a14◂ [ ] ) } ⊢ 0'(= a14◂ [ ] )
	mov r9,r13
; .mov_ptn 0(<4)◂{ 3(<4)◂3'(= r ) 1'(= r ) 2'(= a14◂ [ ] ) } ⊢ 0'(= a14◂ [ ] )
	ALC_RCD 3, rax
	mov r10,rax
	mov rax,r9
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],3
	mov QWORD [rax+8],rdi
	mov QWORD [r10+8+8*0],rax
	mov rax,r14
	mov QWORD [r10+8+8*1],rax
	mov rax,r8
	mov QWORD [r10+8+8*2],rax
	mov rax,r10
	mov BYTE [rax+6],0
	mov r13,rax
	ret
ETR_46: ;; cct { 0'(= a14◂ [ ] ) 1'(= a14◂ [ ] ) } ⊢ 0'(= a14◂ [ ] ) : ({ _t14 _t14 }→_t14)
;; rsp=0 , %59~1'(= a14◂ [ ] ) %58~0'(= a14◂ [ ] ) 
; #41 0'(= a14◂ [ ] ) ⊢ { 0'(= a14◂ [ ] ) 2'(= r ) }
	sub rsp,8
	mov QWORD [rsp+8*0],r14
; .mov_ptn2 0'(= a14◂ [ ] ) ⊢ 0'(= a14◂ [ ] )
	call ETR_41
	mov r8,r14
	mov r14,QWORD [rsp-8+8*1]
	add rsp,8
;; rsp=0 , %61~2'(= r ) %60~0'(= a14◂ [ ] ) %59~1'(= a14◂ [ ] ) 
; #41 1'(= a14◂ [ ] ) ⊢ { 3'(= a14◂ [ ] ) 1'(= r ) }
	sub rsp,16
	mov QWORD [rsp+8*0],r13
	mov QWORD [rsp+8*1],r8
; .mov_ptn2 1'(= a14◂ [ ] ) ⊢ 0'(= a14◂ [ ] )
; .mov_ptn 1'(= a14◂ [ ] ) ⊢ 0'(= a14◂ [ ] )
	mov rax,r14
	mov r13,rax
	call ETR_41
	mov r8,QWORD [rsp-8+8*2]
	mov r9,r13
	mov r13,QWORD [rsp-8+8*1]
	add rsp,16
;; rsp=0 , %63~1'(= r ) %62~3'(= a14◂ [ ] ) %61~2'(= r ) %60~0'(= a14◂ [ ] ) 
; #13 { 2'(= r ) 1'(= r ) } ⊢ { 2'(= r ) 1'(= r ) }
	add r8,r14
;; rsp=0 , %65~1'(= r ) %64~2'(= r ) %62~3'(= a14◂ [ ] ) %60~0'(= a14◂ [ ] ) 
; #39 { 0'(= a14◂ [ ] ) 2'(= r ) 3'(= a14◂ [ ] ) } ⊢ 0(<4)◂{ 0'(= a14◂ [ ] ) 2'(= r ) 3'(= a14◂ [ ] ) }
;; rsp=0 , %66~0(<4)◂{ 0'(= a14◂ [ ] ) 2'(= r ) 3'(= a14◂ [ ] ) } %65~1'(= r ) 
; ∎ 0(<4)◂{ 0'(= a14◂ [ ] ) 2'(= r ) 3'(= a14◂ [ ] ) }
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<4)◂{ 0'(= a14◂ [ ] ) 2'(= r ) 3'(= a14◂ [ ] ) } ⊢ 0'(= a14◂ [ ] )
	mov r14,r13
; .mov_ptn 0(<4)◂{ 1'(= a14◂ [ ] ) 2'(= r ) 3'(= a14◂ [ ] ) } ⊢ 0'(= a14◂ [ ] )
	ALC_RCD 3, rax
	mov r10,rax
	mov rax,r14
	mov QWORD [r10+8+8*0],rax
	mov rax,r8
	mov QWORD [r10+8+8*1],rax
	mov rax,r9
	mov QWORD [r10+8+8*2],rax
	mov rax,r10
	mov BYTE [rax+6],0
	mov r13,rax
	ret
ETR_47: ;; mk_s8_i { 0'(= a14◂ [ ] ) 1'(= {| l |} ) 2'(= r ) } ⊢ { 0'(= a14◂ [ ] ) 1'(= {| l |} ) 2'(= r ) } : ({ _t14 _s8 _r64 }→{ _t14 _s8 _r64 })
;; rsp=0 , %69~2'(= r ) %68~1'(= {| l |} ) %67~0'(= a14◂ [ ] ) 
;; ? 0'(= a14◂ [ ] ) ⊢ 0(<4)◂{ 3'(= a14◂ [ ] ) 4'(= r ) 5'(= a14◂ [ ] ) }
	mov rdi,r13
	cmp BYTE [rdi+6],0
	jnz LB_10
	jmp LB_11
LB_10:
	jmp LB_9
LB_11:
	mov r9, QWORD [r13+8]
	mov r10, QWORD [r13+16]
	mov r11, QWORD [r13+24]
	mov QWORD [GBG_VCT+8*0],r13
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_RCD 3,rdi
;; rsp=0 , %74~5'(= a14◂ [ ] ) %73~4'(= r ) %72~3'(= a14◂ [ ] ) %69~2'(= r ) %68~1'(= {| l |} ) 
; #47 { 3'(= a14◂ [ ] ) 1'(= {| l |} ) 2'(= r ) } ⊢ { 0'(= a14◂ [ ] ) 1'(= {| l |} ) 2'(= r ) }
	sub rsp,16
	mov QWORD [rsp+8*0],r10
	mov QWORD [rsp+8*1],r11
; .mov_ptn2 { 3'(= a14◂ [ ] ) 1'(= {| l |} ) 2'(= r ) } ⊢ { 0'(= a14◂ [ ] ) 1'(= {| l |} ) 2'(= r ) }
; .mov_ptn 3'(= a14◂ [ ] ) ⊢ 0'(= a14◂ [ ] )
	mov rax,r9
	mov r13,rax
	call ETR_47
	mov r11,QWORD [rsp-8+8*2]
	mov r10,QWORD [rsp-8+8*1]
	add rsp,16
;; rsp=0 , %77~2'(= r ) %76~1'(= {| l |} ) %75~0'(= a14◂ [ ] ) %74~5'(= a14◂ [ ] ) %73~4'(= r ) 
; #47 { 5'(= a14◂ [ ] ) 1'(= {| l |} ) 2'(= r ) } ⊢ { 3'(= a14◂ [ ] ) 1'(= {| l |} ) 2'(= r ) }
	sub rsp,16
	mov QWORD [rsp+8*0],r13
	mov QWORD [rsp+8*1],r10
; .mov_ptn2 { 5'(= a14◂ [ ] ) 1'(= {| l |} ) 2'(= r ) } ⊢ { 0'(= a14◂ [ ] ) 1'(= {| l |} ) 2'(= r ) }
; .mov_ptn 5'(= a14◂ [ ] ) ⊢ 0'(= a14◂ [ ] )
	mov rax,r11
	mov r13,rax
	call ETR_47
	mov r10,QWORD [rsp-8+8*2]
	mov r9,r13
	mov r13,QWORD [rsp-8+8*1]
	add rsp,16
;; rsp=0 , %80~2'(= r ) %79~1'(= {| l |} ) %78~3'(= a14◂ [ ] ) %75~0'(= a14◂ [ ] ) %73~4'(= r ) 
; #39 { 0'(= a14◂ [ ] ) 4'(= r ) 3'(= a14◂ [ ] ) } ⊢ 0(<4)◂{ 0'(= a14◂ [ ] ) 4'(= r ) 3'(= a14◂ [ ] ) }
;; rsp=0 , %81~0(<4)◂{ 0'(= a14◂ [ ] ) 4'(= r ) 3'(= a14◂ [ ] ) } %80~2'(= r ) %79~1'(= {| l |} ) 
; ∎ { 0(<4)◂{ 0'(= a14◂ [ ] ) 4'(= r ) 3'(= a14◂ [ ] ) } 1'(= {| l |} ) 2'(= r ) }
; .mov_ptn2 { 0(<4)◂{ 0'(= a14◂ [ ] ) 4'(= r ) 3'(= a14◂ [ ] ) } 1'(= {| l |} ) 2'(= r ) } ⊢ { 0'(= a14◂ [ ] ) 1'(= {| l |} ) 2'(= r ) }
	mov r11,r13
; .mov_ptn 0(<4)◂{ 5'(= a14◂ [ ] ) 4'(= r ) 3'(= a14◂ [ ] ) } ⊢ 0'(= a14◂ [ ] )
	ALC_RCD 3, rax
	mov rcx,rax
	mov rax,r11
	mov QWORD [rcx+8+8*0],rax
	mov rax,r10
	mov QWORD [rcx+8+8*1],rax
	mov rax,r9
	mov QWORD [rcx+8+8*2],rax
	mov rax,rcx
	mov BYTE [rax+6],0
	mov r13,rax
	ret
LB_9:
;; ? 0'(= a14◂ [ ] ) ⊢ 2(<4)◂{ }
	mov rdi,r13
	cmp BYTE [rdi+6],2
	jnz LB_13
	jmp LB_14
LB_13:
	jmp LB_12
LB_14:
;; rsp=0 , %69~2'(= r ) %68~1'(= {| l |} ) 
; #37 { } ⊢ 2(<4)◂{ }
;; rsp=0 , %82~2(<4)◂{ } %69~2'(= r ) %68~1'(= {| l |} ) 
; ∎ { 2(<4)◂{ } 1'(= {| l |} ) 2'(= r ) }
; .mov_ptn2 { 2(<4)◂{ } 1'(= {| l |} ) 2'(= r ) } ⊢ { 0'(= a14◂ [ ] ) 1'(= {| l |} ) 2'(= r ) }
; .mov_ptn 2(<4)◂{ } ⊢ 0'(= a14◂ [ ] )
	mov rax,unt 
	mov rax,unt_2
	mov r13,rax
	ret
LB_12:
;; ? 0'(= a14◂ [ ] ) ⊢ 3(<4)◂3'(= r )
	mov rdi,r13
	cmp BYTE [rdi+6],3
	jnz LB_16
	jmp LB_17
LB_16:
	jmp LB_15
LB_17:
	mov QWORD [GBG_VCT+8*0],rdi
	mov r9,QWORD [rdi+8]
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_LN rdi
;; rsp=0 , %71~3'(= r ) %69~2'(= r ) %68~1'(= {| l |} ) 
; #16 { 1'(= {| l |} ) 2'(= r ) 3'(= r ) } ⊢ { 1'(= {| l |} ) 2'(= r ) 3'(= r ) }
; _sts { 1'(= {| l |} ) 2'(= r ) 3'(= r ) } ⊢ { 1'(= {| l |} ) 2'(= r ) 3'(= r ) }
	mov rax,r14
	mov rdi,0x0000_ffff_ffff_ffff
	and rdi,[rax]
	cmp rdi,r8
	jle err
	mov rsi,r8
	mov rdi,r9
	mov BYTE [rax+8+rsi],dil
;; rsp=0 , %85~3'(= r ) %84~2'(= r ) %83~1'(= {| l |} ) 
; #11 2'(= r ) ⊢ 2'(= r )
	add r8,1
;; rsp=0 , %86~2'(= r ) %85~3'(= r ) %83~1'(= {| l |} ) 
; #36 3'(= r ) ⊢ 3(<4)◂3'(= r )
;; rsp=0 , %87~3(<4)◂3'(= r ) %86~2'(= r ) %83~1'(= {| l |} ) 
; ∎ { 3(<4)◂3'(= r ) 1'(= {| l |} ) 2'(= r ) }
; .mov_ptn2 { 3(<4)◂3'(= r ) 1'(= {| l |} ) 2'(= r ) } ⊢ { 0'(= a14◂ [ ] ) 1'(= {| l |} ) 2'(= r ) }
; .mov_ptn 3(<4)◂3'(= r ) ⊢ 0'(= a14◂ [ ] )
	mov rax,r9
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],3
	mov QWORD [rax+8],rdi
	mov r13,rax
	ret
LB_15:
;; ?. 0'(= a14◂ [ ] ) ⊢ 1(<4)◂0'(= {| l |} )
;; rsp=0 , %70~0'(= {| l |} ) %69~2'(= r ) %68~1'(= {| l |} ) 
; #9 0'(= {| l |} ) ⊢ { 0'(= {| l |} ) 3'(= r ) }
	mov rdi,r13
	mov rsi,0x0000_ffff_ffff_ffff
	and rsi,[rdi] 
	mov r9,rsi
;; rsp=0 , %89~3'(= r ) %88~0'(= {| l |} ) %69~2'(= r ) %68~1'(= {| l |} ) 
; $ %[ 0r ] ⊢ %[ 0r ]
;; rsp=0 , %90~%[ 0r ] %89~3'(= r ) %88~0'(= {| l |} ) %69~2'(= r ) %68~1'(= {| l |} ) 
; #19 { 3'(= r ) 0'(= {| l |} ) %[ 0r ] 1'(= {| l |} ) 2'(= r ) } ⊢ { 3'(= r ) 0'(= {| l |} ) %[ 0r ] 1'(= {| l |} ) 2'(= r ) }
; _rep_movsb { 3'(= r ) 0'(= {| l |} ) %[ 0r ] 1'(= {| l |} ) 2'(= r ) } ⊢ { 3'(= r ) 0'(= {| l |} ) %[ 0r ] 1'(= {| l |} ) 2'(= r ) }
	mov rax,r9
	mov rsi,r13
	mov rdi,0x0000_ffff_ffff_ffff
	and rdi,[rsi]
	sub rdi,rax
	lea rsi,[rsi+8]
	cmp rdi,0
	jl err
	lea rsi,[rsi+0]
	push rsi 
	mov rsi,r14
	mov rdi,0x0000_ffff_ffff_ffff
	and rdi,[rsi]
	sub rdi,rax
	lea rsi,[rsi+8]
	cmp rdi,r8
	jl err
	add rsi,r8
	mov rdi,rsi 
	pop rsi 
	push rcx 
	mov rcx,rax 
	cld 
	rep movsb
	pop rcx 
;; rsp=0 , %95~2'(= r ) %94~1'(= {| l |} ) %93~%[ 0r ] %92~0'(= {| l |} ) %91~3'(= r ) 
; #38 0'(= {| l |} ) ⊢ 1(<4)◂0'(= {| l |} )
;; rsp=0 , %96~1(<4)◂0'(= {| l |} ) %95~2'(= r ) %94~1'(= {| l |} ) %93~%[ 0r ] %91~3'(= r ) 
; ∎ { 1(<4)◂0'(= {| l |} ) 1'(= {| l |} ) 2'(= r ) }
; .dlt.ptn %[ 0r ]
; .dlt.ptn 3'(= r )
	mov rdi,r9
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 { 1(<4)◂0'(= {| l |} ) 1'(= {| l |} ) 2'(= r ) } ⊢ { 0'(= a14◂ [ ] ) 1'(= {| l |} ) 2'(= r ) }
	mov r9,r13
; .mov_ptn 1(<4)◂3'(= {| l |} ) ⊢ 0'(= a14◂ [ ] )
	mov rax,r9
	mov BYTE [rax+6],1
	mov r13,rax
	ret
ETR_48: ;; mk_s8 0'(= a14◂ [ ] ) ⊢ { 0'(= a14◂ [ ] ) 1'(= {| l |} ) } : (_t14→{ _t14 _s8 })
;; rsp=0 , %97~0'(= a14◂ [ ] ) 
; #41 0'(= a14◂ [ ] ) ⊢ { 0'(= a14◂ [ ] ) 1'(= r ) }
; .mov_ptn2 0'(= a14◂ [ ] ) ⊢ 0'(= a14◂ [ ] )
	call ETR_41
;; rsp=0 , %99~1'(= r ) %98~0'(= a14◂ [ ] ) 
; #8 1'(= r ) ⊢ { 1'(= r ) 2'(= {| l |} ) }
	mov rdi,r14
	call mlc_s8
	mov r8,rax
;; rsp=0 , %101~2'(= {| l |} ) %100~1'(= r ) %98~0'(= a14◂ [ ] ) 
; $ %[ 0r ] ⊢ %[ 0r ]
;; rsp=0 , %102~%[ 0r ] %101~2'(= {| l |} ) %100~1'(= r ) %98~0'(= a14◂ [ ] ) 
; #47 { 0'(= a14◂ [ ] ) 2'(= {| l |} ) %[ 0r ] } ⊢ { 0'(= a14◂ [ ] ) 3'(= {| l |} ) 2'(= r ) }
	sub rsp,8
	mov QWORD [rsp+8*0],r14
; .mov_ptn2 { 0'(= a14◂ [ ] ) 2'(= {| l |} ) %[ 0r ] } ⊢ { 0'(= a14◂ [ ] ) 1'(= {| l |} ) 2'(= r ) }
	mov r9,r8
; .mov_ptn %[ 0r ] ⊢ 2'(= r )
	mov rax,0
	mov r8,rax
; .mov_ptn 3'(= {| l |} ) ⊢ 1'(= {| l |} )
	mov rax,r9
	mov r14,rax
	call ETR_47
	mov r9,r14
	mov r14,QWORD [rsp-8+8*1]
	add rsp,8
;; rsp=0 , %105~2'(= r ) %104~3'(= {| l |} ) %103~0'(= a14◂ [ ] ) %100~1'(= r ) 
; ∎ { 0'(= a14◂ [ ] ) 3'(= {| l |} ) }
; .dlt.ptn 2'(= r )
	mov rdi,r8
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 { 0'(= a14◂ [ ] ) 3'(= {| l |} ) } ⊢ { 0'(= a14◂ [ ] ) 1'(= {| l |} ) }
; .mov_ptn 3'(= {| l |} ) ⊢ 1'(= {| l |} )
	mov rax,r9
	mov r14,rax
	ret
LB_23:
	movzx rax,BYTE [r8+6]
	jmp QWORD [LB_26+8*rax]
LB_26: dq LB_24,LB_25
LB_24:
	jmp LB_27
LB_25:
	jmp LB_27
LB_27:
	ret
ETR_51: ;; and { 0'(= a15◂ [ ] ) 1'(= a15◂ [ ] ) } ⊢ 0'(= a15◂ [ ] ) : ({ _t15 _t15 }→_t15)
;; rsp=0 , %107~1'(= a15◂ [ ] ) %106~0'(= a15◂ [ ] ) 
;; ?; 0'(= a15◂ [ ] ) ⊢ 0(<2)◂{ }
	mov rdi,r13
	cmp BYTE [rdi+6],0
	jnz LB_19
	jmp LB_20
LB_19:
	jmp LB_18
LB_20:
;; ?; 1'(= a15◂ [ ] ) ⊢ 0(<2)◂{ }
	mov rdi,r14
	cmp BYTE [rdi+6],0
	jnz LB_21
	jmp LB_22
LB_21:
	jmp LB_18
LB_22:
;; rsp=0 , 
; #50 { } ⊢ 0(<2)◂{ }
;; rsp=0 , %108~0(<2)◂{ } 
; ∎ 0(<2)◂{ }
; .mov_ptn2 0(<2)◂{ } ⊢ 0'(= a15◂ [ ] )
; .mov_ptn 0(<2)◂{ } ⊢ 0'(= a15◂ [ ] )
	mov rax,unt 
	mov rax,unt_0
	mov r13,rax
	ret
LB_18:
;; rsp=0 , %107~1'(= a15◂ [ ] ) %106~0'(= a15◂ [ ] ) 
; #49 { } ⊢ 1(<2)◂{ }
;; rsp=0 , %109~1(<2)◂{ } %107~1'(= a15◂ [ ] ) %106~0'(= a15◂ [ ] ) 
; ∎ 1(<2)◂{ }
; .dlt.ptn 1'(= a15◂ [ ] )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	call LB_23
	C_POP_REGS
; .dlt.ptn 0'(= a15◂ [ ] )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	call LB_23
	C_POP_REGS
; .mov_ptn2 1(<2)◂{ } ⊢ 0'(= a15◂ [ ] )
; .mov_ptn 1(<2)◂{ } ⊢ 0'(= a15◂ [ ] )
	mov rax,unt 
	mov rax,unt_1
	mov r13,rax
	ret
ETR_52: ;; or { 0'(= a15◂ [ ] ) 1'(= a15◂ [ ] ) } ⊢ 0'(= a15◂ [ ] ) : ({ _t15 _t15 }→_t15)
;; rsp=0 , %111~1'(= a15◂ [ ] ) %110~0'(= a15◂ [ ] ) 
;; ?; 0'(= a15◂ [ ] ) ⊢ 1(<2)◂{ }
	mov rdi,r13
	cmp BYTE [rdi+6],1
	jnz LB_29
	jmp LB_30
LB_29:
	jmp LB_28
LB_30:
;; ?; 1'(= a15◂ [ ] ) ⊢ 1(<2)◂{ }
	mov rdi,r14
	cmp BYTE [rdi+6],1
	jnz LB_31
	jmp LB_32
LB_31:
	jmp LB_28
LB_32:
;; rsp=0 , 
; #49 { } ⊢ 1(<2)◂{ }
;; rsp=0 , %112~1(<2)◂{ } 
; ∎ 1(<2)◂{ }
; .mov_ptn2 1(<2)◂{ } ⊢ 0'(= a15◂ [ ] )
; .mov_ptn 1(<2)◂{ } ⊢ 0'(= a15◂ [ ] )
	mov rax,unt 
	mov rax,unt_1
	mov r13,rax
	ret
LB_28:
;; rsp=0 , %111~1'(= a15◂ [ ] ) %110~0'(= a15◂ [ ] ) 
; #50 { } ⊢ 0(<2)◂{ }
;; rsp=0 , %113~0(<2)◂{ } %111~1'(= a15◂ [ ] ) %110~0'(= a15◂ [ ] ) 
; ∎ 0(<2)◂{ }
; .dlt.ptn 1'(= a15◂ [ ] )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	call LB_23
	C_POP_REGS
; .dlt.ptn 0'(= a15◂ [ ] )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	call LB_23
	C_POP_REGS
; .mov_ptn2 0(<2)◂{ } ⊢ 0'(= a15◂ [ ] )
; .mov_ptn 0(<2)◂{ } ⊢ 0'(= a15◂ [ ] )
	mov rax,unt 
	mov rax,unt_0
	mov r13,rax
	ret
ETR_53: ;; sub { 0'(= a15◂ [ ] ) 1'(= a15◂ [ ] ) } ⊢ 0'(= a15◂ [ ] ) : ({ _t15 _t15 }→_t15)
;; rsp=0 , %115~1'(= a15◂ [ ] ) %114~0'(= a15◂ [ ] ) 
;; ?; 1'(= a15◂ [ ] ) ⊢ 1(<2)◂{ }
	mov rdi,r14
	cmp BYTE [rdi+6],1
	jnz LB_34
	jmp LB_35
LB_34:
	jmp LB_33
LB_35:
;; rsp=0 , %114~0'(= a15◂ [ ] ) 
; ∎ 0'(= a15◂ [ ] )
; .mov_ptn2 0'(= a15◂ [ ] ) ⊢ 0'(= a15◂ [ ] )
	ret
LB_33:
;; ?; 1'(= a15◂ [ ] ) ⊢ 0(<2)◂{ }
;; rsp=0 , %114~0'(= a15◂ [ ] ) 
; #49 { } ⊢ 1(<2)◂{ }
;; rsp=0 , %116~1(<2)◂{ } %114~0'(= a15◂ [ ] ) 
; ∎ 1(<2)◂{ }
; .dlt.ptn 0'(= a15◂ [ ] )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	call LB_23
	C_POP_REGS
; .mov_ptn2 1(<2)◂{ } ⊢ 0'(= a15◂ [ ] )
; .mov_ptn 1(<2)◂{ } ⊢ 0'(= a15◂ [ ] )
	mov rax,unt 
	mov rax,unt_1
	mov r13,rax
	ret
ETR_59: ;; s8_of_r64_lst_i { 0'(= r ) 1'(= a2◂ [ r] ) } ⊢ { 0'(= r ) 1'(= {| l |} ) } : ({ _r64 _lst◂_r64 }→{ _r64 _s8 })
;; rsp=0 , %133~1'(= a2◂ [ r] ) %132~0'(= r ) 
;; ?; 1'(= a2◂ [ r] ) ⊢ 0(<2)◂{ 2'(= r ) 3'(= a2◂ [ r] ) }
	mov rdi,r14
	cmp BYTE [rdi+6],0
	jnz LB_37
	jmp LB_38
LB_37:
	jmp LB_36
LB_38:
	mov r8, QWORD [r14+8]
	mov r9, QWORD [r14+16]
	mov QWORD [GBG_VCT+8*0],r14
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_RCD 2,rdi
;; rsp=0 , %135~3'(= a2◂ [ r] ) %134~2'(= r ) %132~0'(= r ) 
; #11 0'(= r ) ⊢ 0'(= r )
	add r13,1
;; rsp=0 , %136~0'(= r ) %135~3'(= a2◂ [ r] ) %134~2'(= r ) 
; #59 { 0'(= r ) 3'(= a2◂ [ r] ) } ⊢ { 0'(= r ) 1'(= {| l |} ) }
	sub rsp,8
	mov QWORD [rsp+8*0],r8
; .mov_ptn2 { 0'(= r ) 3'(= a2◂ [ r] ) } ⊢ { 0'(= r ) 1'(= a2◂ [ r] ) }
; .mov_ptn 3'(= a2◂ [ r] ) ⊢ 1'(= a2◂ [ r] )
	mov rax,r9
	mov r14,rax
	call ETR_59
	mov r8,QWORD [rsp-8+8*1]
	add rsp,8
;; rsp=0 , %138~1'(= {| l |} ) %137~0'(= r ) %134~2'(= r ) 
; #12 0'(= r ) ⊢ 0'(= r )
	sub r13,1
;; rsp=0 , %139~0'(= r ) %138~1'(= {| l |} ) %134~2'(= r ) 
; #16 { 1'(= {| l |} ) 0'(= r ) 2'(= r ) } ⊢ { 1'(= {| l |} ) 0'(= r ) 2'(= r ) }
; _sts { 1'(= {| l |} ) 0'(= r ) 2'(= r ) } ⊢ { 1'(= {| l |} ) 0'(= r ) 2'(= r ) }
	mov rax,r14
	mov rdi,0x0000_ffff_ffff_ffff
	and rdi,[rax]
	cmp rdi,r13
	jle err
	mov rsi,r13
	mov rdi,r8
	mov BYTE [rax+8+rsi],dil
;; rsp=0 , %142~2'(= r ) %141~0'(= r ) %140~1'(= {| l |} ) 
; ∎ { 0'(= r ) 1'(= {| l |} ) }
; .dlt.ptn 2'(= r )
	mov rdi,r8
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 { 0'(= r ) 1'(= {| l |} ) } ⊢ { 0'(= r ) 1'(= {| l |} ) }
	ret
LB_36:
;; ?; 1'(= a2◂ [ r] ) ⊢ 1(<2)◂{ }
;; rsp=0 , %132~0'(= r ) 
; #8 0'(= r ) ⊢ { 0'(= r ) 1'(= {| l |} ) }
	mov rdi,r13
	call mlc_s8
	mov r14,rax
;; rsp=0 , %144~1'(= {| l |} ) %143~0'(= r ) 
; ∎ { 0'(= r ) 1'(= {| l |} ) }
; .mov_ptn2 { 0'(= r ) 1'(= {| l |} ) } ⊢ { 0'(= r ) 1'(= {| l |} ) }
	ret
ETR_60: ;; s8_of_r64_lst 0'(= a2◂ [ r] ) ⊢ 0'(= {| l |} ) : (_lst◂_r64→_s8)
;; rsp=0 , %145~0'(= a2◂ [ r] ) 
; $ %[ 0r ] ⊢ %[ 0r ]
;; rsp=0 , %146~%[ 0r ] %145~0'(= a2◂ [ r] ) 
; #59 { %[ 0r ] 0'(= a2◂ [ r] ) } ⊢ { 0'(= r ) 1'(= {| l |} ) }
; .mov_ptn2 { %[ 0r ] 0'(= a2◂ [ r] ) } ⊢ { 0'(= r ) 1'(= a2◂ [ r] ) }
; .mov_ptn 0'(= a2◂ [ r] ) ⊢ 1'(= a2◂ [ r] )
	mov rax,r13
	mov r14,rax
; .mov_ptn %[ 0r ] ⊢ 0'(= r )
	mov rax,0
	mov r13,rax
	call ETR_59
;; rsp=0 , %148~1'(= {| l |} ) %147~0'(= r ) 
; ∎ 1'(= {| l |} )
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 1'(= {| l |} ) ⊢ 0'(= {| l |} )
; .mov_ptn 1'(= {| l |} ) ⊢ 0'(= {| l |} )
	mov rax,r14
	mov r13,rax
	ret
ETR_61: ;; s8_of_s8_lst_i { 0'(= r ) 1'(= a2◂ [ {| l |}] ) } ⊢ { 0'(= {| l |} ) 1'(= r ) } : ({ _r64 _lst◂_s8 }→{ _s8 _r64 })
;; rsp=0 , %150~1'(= a2◂ [ {| l |}] ) %149~0'(= r ) 
;; ? 1'(= a2◂ [ {| l |}] ) ⊢ 0(<2)◂{ 2'(= {| l |} ) 3'(= a2◂ [ {| l |}] ) }
	mov rdi,r14
	cmp BYTE [rdi+6],0
	jnz LB_40
	jmp LB_41
LB_40:
	jmp LB_39
LB_41:
	mov r8, QWORD [r14+8]
	mov r9, QWORD [r14+16]
	mov QWORD [GBG_VCT+8*0],r14
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_RCD 2,rdi
;; rsp=0 , %152~3'(= a2◂ [ {| l |}] ) %151~2'(= {| l |} ) %149~0'(= r ) 
; #9 2'(= {| l |} ) ⊢ { 2'(= {| l |} ) 1'(= r ) }
	mov rdi,r8
	mov rsi,0x0000_ffff_ffff_ffff
	and rsi,[rdi] 
	mov r14,rsi
;; rsp=0 , %154~1'(= r ) %153~2'(= {| l |} ) %152~3'(= a2◂ [ {| l |}] ) %149~0'(= r ) 
; #13 { 0'(= r ) 1'(= r ) } ⊢ { 0'(= r ) 1'(= r ) }
	add r13,r14
;; rsp=0 , %156~1'(= r ) %155~0'(= r ) %153~2'(= {| l |} ) %152~3'(= a2◂ [ {| l |}] ) 
; #61 { 0'(= r ) 3'(= a2◂ [ {| l |}] ) } ⊢ { 0'(= {| l |} ) 3'(= r ) }
	sub rsp,16
	mov QWORD [rsp+8*0],r14
	mov QWORD [rsp+8*1],r8
; .mov_ptn2 { 0'(= r ) 3'(= a2◂ [ {| l |}] ) } ⊢ { 0'(= r ) 1'(= a2◂ [ {| l |}] ) }
; .mov_ptn 3'(= a2◂ [ {| l |}] ) ⊢ 1'(= a2◂ [ {| l |}] )
	mov rax,r9
	mov r14,rax
	call ETR_61
	mov r8,QWORD [rsp-8+8*2]
	mov r9,r14
	mov r14,QWORD [rsp-8+8*1]
	add rsp,16
;; rsp=0 , %158~3'(= r ) %157~0'(= {| l |} ) %156~1'(= r ) %153~2'(= {| l |} ) 
; $ %[ 0r ] ⊢ %[ 0r ]
;; rsp=0 , %159~%[ 0r ] %158~3'(= r ) %157~0'(= {| l |} ) %156~1'(= r ) %153~2'(= {| l |} ) 
; $ 1'(= r ) ⊢ 1'(= r ),4'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	mov rax,r8
	C_POP_REGS
	mov r10,rax
;; rsp=0 , %161~4'(= r ) %160~1'(= r ) %159~%[ 0r ] %158~3'(= r ) %157~0'(= {| l |} ) %153~2'(= {| l |} ) 
; #19 { 1'(= r ) 2'(= {| l |} ) %[ 0r ] 0'(= {| l |} ) 3'(= r ) } ⊢ { 1'(= r ) 2'(= {| l |} ) %[ 0r ] 0'(= {| l |} ) 3'(= r ) }
; _rep_movsb { 1'(= r ) 2'(= {| l |} ) %[ 0r ] 0'(= {| l |} ) 3'(= r ) } ⊢ { 1'(= r ) 2'(= {| l |} ) %[ 0r ] 0'(= {| l |} ) 3'(= r ) }
	mov rax,r14
	mov rsi,r8
	mov rdi,0x0000_ffff_ffff_ffff
	and rdi,[rsi]
	sub rdi,rax
	lea rsi,[rsi+8]
	cmp rdi,0
	jl err
	lea rsi,[rsi+0]
	push rsi 
	mov rsi,r13
	mov rdi,0x0000_ffff_ffff_ffff
	and rdi,[rsi]
	sub rdi,rax
	lea rsi,[rsi+8]
	cmp rdi,r9
	jl err
	add rsi,r9
	mov rdi,rsi 
	pop rsi 
	push rcx 
	mov rcx,rax 
	cld 
	rep movsb
	pop rcx 
;; rsp=0 , %166~3'(= r ) %165~0'(= {| l |} ) %164~%[ 0r ] %163~2'(= {| l |} ) %162~1'(= r ) %161~4'(= r ) 
; ∎ { 0'(= {| l |} ) 3'(= r ) }
; .dlt.ptn %[ 0r ]
; .dlt.ptn 2'(= {| l |} )
	mov rdi,r8
	C_PUSH_REGS
	mov r8,rdi
	mov rdi,r8
	call free_s8
	C_POP_REGS
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 4'(= r )
	mov rdi,r10
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 { 0'(= {| l |} ) 3'(= r ) } ⊢ { 0'(= {| l |} ) 1'(= r ) }
; .mov_ptn 3'(= r ) ⊢ 1'(= r )
	mov rax,r9
	mov r14,rax
	ret
LB_39:
;; ?. 1'(= a2◂ [ {| l |}] ) ⊢ 1(<2)◂{ }
;; rsp=0 , %149~0'(= r ) 
; #8 0'(= r ) ⊢ { 0'(= r ) 1'(= {| l |} ) }
	mov rdi,r13
	call mlc_s8
	mov r14,rax
;; rsp=0 , %168~1'(= {| l |} ) %167~0'(= r ) 
; $ %[ 0r ] ⊢ %[ 0r ]
;; rsp=0 , %169~%[ 0r ] %168~1'(= {| l |} ) %167~0'(= r ) 
; ∎ { 1'(= {| l |} ) %[ 0r ] }
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 { 1'(= {| l |} ) %[ 0r ] } ⊢ { 0'(= {| l |} ) 1'(= r ) }
; .mov_ptn 1'(= {| l |} ) ⊢ 0'(= {| l |} )
	mov rax,r14
	mov r13,rax
; .mov_ptn %[ 0r ] ⊢ 1'(= r )
	mov rax,0
	mov r14,rax
	ret
ETR_62: ;; s8_of_s8_lst 0'(= a2◂ [ {| l |}] ) ⊢ 0'(= {| l |} ) : (_lst◂_s8→_s8)
;; rsp=0 , %170~0'(= a2◂ [ {| l |}] ) 
; $ %[ 0r ] ⊢ %[ 0r ]
;; rsp=0 , %171~%[ 0r ] %170~0'(= a2◂ [ {| l |}] ) 
; #61 { %[ 0r ] 0'(= a2◂ [ {| l |}] ) } ⊢ { 0'(= {| l |} ) 1'(= r ) }
; .mov_ptn2 { %[ 0r ] 0'(= a2◂ [ {| l |}] ) } ⊢ { 0'(= r ) 1'(= a2◂ [ {| l |}] ) }
; .mov_ptn 0'(= a2◂ [ {| l |}] ) ⊢ 1'(= a2◂ [ {| l |}] )
	mov rax,r13
	mov r14,rax
; .mov_ptn %[ 0r ] ⊢ 0'(= r )
	mov rax,0
	mov r13,rax
	call ETR_61
;; rsp=0 , %173~1'(= r ) %172~0'(= {| l |} ) 
; ∎ 0'(= {| l |} )
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0'(= {| l |} ) ⊢ 0'(= {| l |} )
	ret
ETR_70:
	mov r9,0x0000_ffff_ffff_ffff
	and r9,[r13]
	call GRM_70
	ret
GRM_70:
	PUSH_GRM
	lea rax,[r14+1]
	cmp rax,r9
	jg LB_45
	jmp LB_46
LB_45:
	mov r8,unt_1
	jmp LB_43
LB_46:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],10
	jnz LB_47
	jmp LB_48
LB_47:
	mov r8,unt_1
	jmp LB_43
LB_48:
	add r14,1
	jmp LB_44
LB_43:
	add rsp,0
	jmp LB_42
LB_44:
	call GRM_70
	cmp BYTE [r8+6],0
	jnz LB_51
	jmp LB_52
LB_51:
	jmp LB_49
LB_52:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a14◂ [ ] ) ⊢ 8'(= a14◂ [ ] )
; .mov_ptn 2'(= a14◂ [ ] ) ⊢ 8'(= a14◂ [ ] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_50
LB_49:
	add rsp,0
	jmp LB_42
LB_50:
	mov QWORD [rsp+8*1],r14
	mov r13,QWORD [rsp+16+8*1]
	mov r14,QWORD [rsp+8*1]
	jmp LB_53
LB_53
;; rsp=1 , %248~1'(= r ) %247~0'(= r ) %246~8'(= a14◂ [ ] ) 
; $ %[ "\\n" ] ⊢ %[ "\\n" ]
;; rsp=1 , %249~%[ "\\n" ] %248~1'(= r ) %247~0'(= r ) %246~8'(= a14◂ [ ] ) 
; #43 { %[ "\\n" ] 8'(= a14◂ [ ] ) } ⊢ 2'(= a14◂ [ ] )
	sub rsp,16
	mov QWORD [rsp+8*0],r13
	mov QWORD [rsp+8*1],r14
; .mov_ptn2 { %[ "\\n" ] 8'(= a14◂ [ ] ) } ⊢ { 0'(= {| l |} ) 1'(= a14◂ [ ] ) }
; .mov_ptn 8'(= a14◂ [ ] ) ⊢ 1'(= a14◂ [ ] )
	mov rax,QWORD [rsp-8+8*3]
	mov r14,rax
; .mov_ptn %[ "\\n" ] ⊢ 0'(= {| l |} )
	mov rsi,1  
	mov rdi,16
	xor rax,rax 
	C_CALL_SF calloc
	mov QWORD [rax],2
	mov BYTE [rax+8+0],92
	mov BYTE [rax+8+1],110
	mov r13,rax
	call ETR_43
	mov r14,QWORD [rsp-8+8*2]
	mov r8,r13
	mov r13,QWORD [rsp-8+8*1]
	add rsp,24
;; rsp=0 , %250~2'(= a14◂ [ ] ) %248~1'(= r ) %247~0'(= r ) 
; #24 2'(= a14◂ [ ] ) ⊢ 0(<2)◂2'(= a14◂ [ ] )
;; rsp=0 , %251~0(<2)◂2'(= a14◂ [ ] ) %248~1'(= r ) %247~0'(= r ) 
; ∎ 0(<2)◂2'(= a14◂ [ ] )
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂2'(= a14◂ [ ] ) ⊢ 2'(= a3◂ [ a14◂ [ ]] )
	mov r13,r8
; .mov_ptn 0(<2)◂0'(= a14◂ [ ] ) ⊢ 2'(= a3◂ [ a14◂ [ ]] )
	mov rax,r13
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	jmp LB_54
LB_54:
	cmp BYTE [r8+6],0
	jnz LB_42
	POP_GRM_SCC
	ret
LB_42:
	RB_GRM
	lea rax,[r14+1]
	cmp rax,r9
	jg LB_58
	jmp LB_59
LB_58:
	mov r8,unt_1
	jmp LB_56
LB_59:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],9
	jnz LB_60
	jmp LB_61
LB_60:
	mov r8,unt_1
	jmp LB_56
LB_61:
	add r14,1
	jmp LB_57
LB_56:
	add rsp,0
	jmp LB_55
LB_57:
	call GRM_70
	cmp BYTE [r8+6],0
	jnz LB_64
	jmp LB_65
LB_64:
	jmp LB_62
LB_65:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a14◂ [ ] ) ⊢ 8'(= a14◂ [ ] )
; .mov_ptn 2'(= a14◂ [ ] ) ⊢ 8'(= a14◂ [ ] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_63
LB_62:
	add rsp,0
	jmp LB_55
LB_63:
	mov QWORD [rsp+8*1],r14
	mov r13,QWORD [rsp+16+8*1]
	mov r14,QWORD [rsp+8*1]
	jmp LB_66
LB_66
;; rsp=1 , %254~1'(= r ) %253~0'(= r ) %252~8'(= a14◂ [ ] ) 
; $ %[ "\\t" ] ⊢ %[ "\\t" ]
;; rsp=1 , %255~%[ "\\t" ] %254~1'(= r ) %253~0'(= r ) %252~8'(= a14◂ [ ] ) 
; #43 { %[ "\\t" ] 8'(= a14◂ [ ] ) } ⊢ 2'(= a14◂ [ ] )
	sub rsp,16
	mov QWORD [rsp+8*0],r13
	mov QWORD [rsp+8*1],r14
; .mov_ptn2 { %[ "\\t" ] 8'(= a14◂ [ ] ) } ⊢ { 0'(= {| l |} ) 1'(= a14◂ [ ] ) }
; .mov_ptn 8'(= a14◂ [ ] ) ⊢ 1'(= a14◂ [ ] )
	mov rax,QWORD [rsp-8+8*3]
	mov r14,rax
; .mov_ptn %[ "\\t" ] ⊢ 0'(= {| l |} )
	mov rsi,1  
	mov rdi,16
	xor rax,rax 
	C_CALL_SF calloc
	mov QWORD [rax],2
	mov BYTE [rax+8+0],92
	mov BYTE [rax+8+1],116
	mov r13,rax
	call ETR_43
	mov r14,QWORD [rsp-8+8*2]
	mov r8,r13
	mov r13,QWORD [rsp-8+8*1]
	add rsp,24
;; rsp=0 , %256~2'(= a14◂ [ ] ) %254~1'(= r ) %253~0'(= r ) 
; #24 2'(= a14◂ [ ] ) ⊢ 0(<2)◂2'(= a14◂ [ ] )
;; rsp=0 , %257~0(<2)◂2'(= a14◂ [ ] ) %254~1'(= r ) %253~0'(= r ) 
; ∎ 0(<2)◂2'(= a14◂ [ ] )
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂2'(= a14◂ [ ] ) ⊢ 2'(= a3◂ [ a14◂ [ ]] )
	mov r13,r8
; .mov_ptn 0(<2)◂0'(= a14◂ [ ] ) ⊢ 2'(= a3◂ [ a14◂ [ ]] )
	mov rax,r13
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	jmp LB_67
LB_67:
	cmp BYTE [r8+6],0
	jnz LB_55
	POP_GRM_SCC
	ret
LB_55:
	RB_GRM
	lea rax,[r14+1]
	cmp rax,r9
	jg LB_71
	jmp LB_72
LB_71:
	mov r8,unt_1
	jmp LB_69
LB_72:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],92
	jnz LB_73
	jmp LB_74
LB_73:
	mov r8,unt_1
	jmp LB_69
LB_74:
	add r14,1
	jmp LB_70
LB_69:
	add rsp,0
	jmp LB_68
LB_70:
	call GRM_70
	cmp BYTE [r8+6],0
	jnz LB_77
	jmp LB_78
LB_77:
	jmp LB_75
LB_78:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a14◂ [ ] ) ⊢ 8'(= a14◂ [ ] )
; .mov_ptn 2'(= a14◂ [ ] ) ⊢ 8'(= a14◂ [ ] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_76
LB_75:
	add rsp,0
	jmp LB_68
LB_76:
	mov QWORD [rsp+8*1],r14
	mov r13,QWORD [rsp+16+8*1]
	mov r14,QWORD [rsp+8*1]
	jmp LB_79
LB_79
;; rsp=1 , %260~1'(= r ) %259~0'(= r ) %258~8'(= a14◂ [ ] ) 
; $ %[ "\\\\" ] ⊢ %[ "\\\\" ]
;; rsp=1 , %261~%[ "\\\\" ] %260~1'(= r ) %259~0'(= r ) %258~8'(= a14◂ [ ] ) 
; #43 { %[ "\\\\" ] 8'(= a14◂ [ ] ) } ⊢ 2'(= a14◂ [ ] )
	sub rsp,16
	mov QWORD [rsp+8*0],r13
	mov QWORD [rsp+8*1],r14
; .mov_ptn2 { %[ "\\\\" ] 8'(= a14◂ [ ] ) } ⊢ { 0'(= {| l |} ) 1'(= a14◂ [ ] ) }
; .mov_ptn 8'(= a14◂ [ ] ) ⊢ 1'(= a14◂ [ ] )
	mov rax,QWORD [rsp-8+8*3]
	mov r14,rax
; .mov_ptn %[ "\\\\" ] ⊢ 0'(= {| l |} )
	mov rsi,1  
	mov rdi,16
	xor rax,rax 
	C_CALL_SF calloc
	mov QWORD [rax],2
	mov BYTE [rax+8+0],92
	mov BYTE [rax+8+1],92
	mov r13,rax
	call ETR_43
	mov r14,QWORD [rsp-8+8*2]
	mov r8,r13
	mov r13,QWORD [rsp-8+8*1]
	add rsp,24
;; rsp=0 , %262~2'(= a14◂ [ ] ) %260~1'(= r ) %259~0'(= r ) 
; #24 2'(= a14◂ [ ] ) ⊢ 0(<2)◂2'(= a14◂ [ ] )
;; rsp=0 , %263~0(<2)◂2'(= a14◂ [ ] ) %260~1'(= r ) %259~0'(= r ) 
; ∎ 0(<2)◂2'(= a14◂ [ ] )
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂2'(= a14◂ [ ] ) ⊢ 2'(= a3◂ [ a14◂ [ ]] )
	mov r13,r8
; .mov_ptn 0(<2)◂0'(= a14◂ [ ] ) ⊢ 2'(= a3◂ [ a14◂ [ ]] )
	mov rax,r13
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	jmp LB_80
LB_80:
	cmp BYTE [r8+6],0
	jnz LB_68
	POP_GRM_SCC
	ret
LB_68:
	RB_GRM
	lea rax,[r14+1]
	cmp rax,r9
	jg LB_84
	jmp LB_85
LB_84:
	mov r8,unt_1
	jmp LB_82
LB_85:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],34
	jnz LB_86
	jmp LB_87
LB_86:
	mov r8,unt_1
	jmp LB_82
LB_87:
	add r14,1
	jmp LB_83
LB_82:
	add rsp,0
	jmp LB_81
LB_83:
	call GRM_70
	cmp BYTE [r8+6],0
	jnz LB_90
	jmp LB_91
LB_90:
	jmp LB_88
LB_91:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a14◂ [ ] ) ⊢ 8'(= a14◂ [ ] )
; .mov_ptn 2'(= a14◂ [ ] ) ⊢ 8'(= a14◂ [ ] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_89
LB_88:
	add rsp,0
	jmp LB_81
LB_89:
	mov QWORD [rsp+8*1],r14
	mov r13,QWORD [rsp+16+8*1]
	mov r14,QWORD [rsp+8*1]
	jmp LB_92
LB_92
;; rsp=1 , %266~1'(= r ) %265~0'(= r ) %264~8'(= a14◂ [ ] ) 
; $ %[ "\\\"" ] ⊢ %[ "\\\"" ]
;; rsp=1 , %267~%[ "\\\"" ] %266~1'(= r ) %265~0'(= r ) %264~8'(= a14◂ [ ] ) 
; #43 { %[ "\\\"" ] 8'(= a14◂ [ ] ) } ⊢ 2'(= a14◂ [ ] )
	sub rsp,16
	mov QWORD [rsp+8*0],r13
	mov QWORD [rsp+8*1],r14
; .mov_ptn2 { %[ "\\\"" ] 8'(= a14◂ [ ] ) } ⊢ { 0'(= {| l |} ) 1'(= a14◂ [ ] ) }
; .mov_ptn 8'(= a14◂ [ ] ) ⊢ 1'(= a14◂ [ ] )
	mov rax,QWORD [rsp-8+8*3]
	mov r14,rax
; .mov_ptn %[ "\\\"" ] ⊢ 0'(= {| l |} )
	mov rsi,1  
	mov rdi,16
	xor rax,rax 
	C_CALL_SF calloc
	mov QWORD [rax],2
	mov BYTE [rax+8+0],92
	mov BYTE [rax+8+1],34
	mov r13,rax
	call ETR_43
	mov r14,QWORD [rsp-8+8*2]
	mov r8,r13
	mov r13,QWORD [rsp-8+8*1]
	add rsp,24
;; rsp=0 , %268~2'(= a14◂ [ ] ) %266~1'(= r ) %265~0'(= r ) 
; #24 2'(= a14◂ [ ] ) ⊢ 0(<2)◂2'(= a14◂ [ ] )
;; rsp=0 , %269~0(<2)◂2'(= a14◂ [ ] ) %266~1'(= r ) %265~0'(= r ) 
; ∎ 0(<2)◂2'(= a14◂ [ ] )
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂2'(= a14◂ [ ] ) ⊢ 2'(= a3◂ [ a14◂ [ ]] )
	mov r13,r8
; .mov_ptn 0(<2)◂0'(= a14◂ [ ] ) ⊢ 2'(= a3◂ [ a14◂ [ ]] )
	mov rax,r13
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	jmp LB_93
LB_93:
	cmp BYTE [r8+6],0
	jnz LB_81
	POP_GRM_SCC
	ret
LB_81:
	RB_GRM
	cmp r14,r9
	jge LB_97
	jmp LB_98
LB_97:
	mov r8,unt_1 
	jmp LB_95
LB_98:
	movzx rdi,BYTE [r13+8+r14]
	push rdi 
	add r14,1 
	jmp LB_96
LB_95:
	add rsp,0
	jmp LB_94
LB_96:
	call GRM_70
	cmp BYTE [r8+6],0
	jnz LB_101
	jmp LB_102
LB_101:
	jmp LB_99
LB_102:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a14◂ [ ] ) ⊢ 9'(= a14◂ [ ] )
; .mov_ptn 2'(= a14◂ [ ] ) ⊢ 9'(= a14◂ [ ] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_100
LB_99:
	add rsp,8
	jmp LB_94
LB_100:
	mov QWORD [rsp+8*2],r14
	mov r13,QWORD [rsp+16+8*2]
	mov r14,QWORD [rsp+8*2]
	jmp LB_103
LB_103
;; rsp=2 , %273~1'(= r ) %272~0'(= r ) %271~9'(= a14◂ [ ] ) %270~8'(= r ) 
	cmp QWORD [rsp-8+8*2],0
	jnz LB_107
	jmp LB_106
LB_107:
	jmp LB_105
LB_106:
;; rsp=2 , %273~1'(= r ) %272~0'(= r ) %271~9'(= a14◂ [ ] ) %270~8'(= r ) 
; $ %[ "\\0" ] ⊢ %[ "\\0" ]
;; rsp=2 , %274~%[ "\\0" ] %273~1'(= r ) %272~0'(= r ) %271~9'(= a14◂ [ ] ) %270~8'(= r ) 
; #43 { %[ "\\0" ] 9'(= a14◂ [ ] ) } ⊢ 2'(= a14◂ [ ] )
	sub rsp,16
	mov QWORD [rsp+8*0],r13
	mov QWORD [rsp+8*1],r14
; .mov_ptn2 { %[ "\\0" ] 9'(= a14◂ [ ] ) } ⊢ { 0'(= {| l |} ) 1'(= a14◂ [ ] ) }
; .mov_ptn 9'(= a14◂ [ ] ) ⊢ 1'(= a14◂ [ ] )
	mov rax,QWORD [rsp-8+8*3]
	mov r14,rax
; .mov_ptn %[ "\\0" ] ⊢ 0'(= {| l |} )
	mov rsi,1  
	mov rdi,16
	xor rax,rax 
	C_CALL_SF calloc
	mov QWORD [rax],2
	mov BYTE [rax+8+0],92
	mov BYTE [rax+8+1],48
	mov r13,rax
	call ETR_43
	mov r14,QWORD [rsp-8+8*2]
	mov r8,r13
	mov r13,QWORD [rsp-8+8*1]
	add rsp,24
;; rsp=1 , %275~2'(= a14◂ [ ] ) %273~1'(= r ) %272~0'(= r ) %270~8'(= r ) 
; #24 2'(= a14◂ [ ] ) ⊢ 0(<2)◂2'(= a14◂ [ ] )
;; rsp=1 , %276~0(<2)◂2'(= a14◂ [ ] ) %273~1'(= r ) %272~0'(= r ) %270~8'(= r ) 
; ∎ 0(<2)◂2'(= a14◂ [ ] )
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 8'(= r )
	mov rdi,QWORD [rsp-8+8*1]
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂2'(= a14◂ [ ] ) ⊢ 2'(= a3◂ [ a14◂ [ ]] )
	mov r13,r8
; .mov_ptn 0(<2)◂0'(= a14◂ [ ] ) ⊢ 2'(= a3◂ [ a14◂ [ ]] )
	mov rax,r13
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,8
	jmp LB_104
LB_105:
;; rsp=2 , %273~1'(= r ) %272~0'(= r ) %271~9'(= a14◂ [ ] ) %270~8'(= r ) 
; #45 { 8'(= r ) 9'(= a14◂ [ ] ) } ⊢ 2'(= a14◂ [ ] )
	sub rsp,16
	mov QWORD [rsp+8*0],r13
	mov QWORD [rsp+8*1],r14
; .mov_ptn2 { 8'(= r ) 9'(= a14◂ [ ] ) } ⊢ { 0'(= r ) 1'(= a14◂ [ ] ) }
; .mov_ptn 9'(= a14◂ [ ] ) ⊢ 1'(= a14◂ [ ] )
	mov rax,QWORD [rsp-8+8*3]
	mov r14,rax
; .mov_ptn 8'(= r ) ⊢ 0'(= r )
	mov rax,QWORD [rsp-8+8*4]
	mov r13,rax
	call ETR_45
	mov r14,QWORD [rsp-8+8*2]
	mov r8,r13
	mov r13,QWORD [rsp-8+8*1]
	add rsp,32
;; rsp=0 , %277~2'(= a14◂ [ ] ) %273~1'(= r ) %272~0'(= r ) 
; #24 2'(= a14◂ [ ] ) ⊢ 0(<2)◂2'(= a14◂ [ ] )
;; rsp=0 , %278~0(<2)◂2'(= a14◂ [ ] ) %273~1'(= r ) %272~0'(= r ) 
; ∎ 0(<2)◂2'(= a14◂ [ ] )
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂2'(= a14◂ [ ] ) ⊢ 2'(= a3◂ [ a14◂ [ ]] )
	mov r13,r8
; .mov_ptn 0(<2)◂0'(= a14◂ [ ] ) ⊢ 2'(= a3◂ [ a14◂ [ ]] )
	mov rax,r13
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	jmp LB_104
LB_104:
	cmp BYTE [r8+6],0
	jnz LB_94
	POP_GRM_SCC
	ret
LB_94:
	RB_GRM
	mov QWORD [rsp+8*0],r14
	mov r13,QWORD [rsp+16+8*0]
	mov r14,QWORD [rsp+8*0]
	jmp LB_109
LB_109
;; rsp=0 , %280~1'(= r ) %279~0'(= r ) 
; #37 { } ⊢ 2(<4)◂{ }
;; rsp=0 , %281~2(<4)◂{ } %280~1'(= r ) %279~0'(= r ) 
; #24 2(<4)◂{ } ⊢ 0(<2)◂2(<4)◂{ }
;; rsp=0 , %282~0(<2)◂2(<4)◂{ } %280~1'(= r ) %279~0'(= r ) 
; ∎ 0(<2)◂2(<4)◂{ }
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂2(<4)◂{ } ⊢ 2'(= a3◂ [ a14◂ [ ]] )
; .mov_ptn 0(<2)◂2(<4)◂{ } ⊢ 2'(= a3◂ [ a14◂ [ ]] )
	mov rax,unt 
	mov rax,unt_2
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	jmp LB_110
LB_110:
	cmp BYTE [r8+6],0
	jnz LB_108
	POP_GRM_SCC
	ret
LB_108:
	POP_GRM_FAIL 
	ret
LB_114:
	movzx rax,BYTE [r8+6]
	jmp QWORD [LB_119+8*rax]
LB_119: dq LB_115,LB_116,LB_117,LB_118
LB_115:
	push r8
	mov r8,QWORD [r8+8+8*0]
	call LB_114
	pop r8 
	push r8
	mov r8,QWORD [r8+8+8*1]
	pop r8 
	push r8
	mov r8,QWORD [r8+8+8*2]
	call LB_114
	pop r8 
	FREE_RCD 3, r8
	jmp LB_120
LB_116:
	mov rdi,r8
	call free_s8
	jmp LB_120
LB_117:
	jmp LB_120
LB_118:
	FREE_LN r8 
	mov r8,QWORD [r8+8]
	jmp LB_120
LB_120:
	ret
ETR_71: ;; mk_esc_s8 0'(= {| l |} ) ⊢ { 0'(= {| l |} ) 1'(= {| l |} ) } : (_s8→{ _s8 _s8 })
;; rsp=0 , %283~0'(= {| l |} ) 
; $ %[ 0r ] ⊢ %[ 0r ]
;; rsp=0 , %284~%[ 0r ] %283~0'(= {| l |} ) 
; #70 { 0'(= {| l |} ) %[ 0r ] } ⊢ { 0'(= {| l |} ) 1'(= r ) 2'(= a3◂ [ a14◂ [ ]] ) }
; .mov_ptn2 { 0'(= {| l |} ) %[ 0r ] } ⊢ { 0'(= {| l |} ) 1'(= r ) }
; .mov_ptn %[ 0r ] ⊢ 1'(= r )
	mov rax,0
	mov r14,rax
	call ETR_70
;; rsp=0 , %287~2'(= a3◂ [ a14◂ [ ]] ) %286~1'(= r ) %285~0'(= {| l |} ) 
;; ?; 2'(= a3◂ [ a14◂ [ ]] ) ⊢ 0(<2)◂3'(= a14◂ [ ] )
	mov rdi,r8
	cmp BYTE [rdi+6],0
	jnz LB_112
	jmp LB_113
LB_112:
	jmp LB_111
LB_113:
	mov QWORD [GBG_VCT+8*0],rdi
	mov r9,QWORD [rdi+8]
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_LN rdi
;; rsp=0 , %288~3'(= a14◂ [ ] ) %286~1'(= r ) %285~0'(= {| l |} ) 
; #48 3'(= a14◂ [ ] ) ⊢ { 3'(= a14◂ [ ] ) 2'(= {| l |} ) }
	sub rsp,16
	mov QWORD [rsp+8*0],r13
	mov QWORD [rsp+8*1],r14
; .mov_ptn2 3'(= a14◂ [ ] ) ⊢ 0'(= a14◂ [ ] )
; .mov_ptn 3'(= a14◂ [ ] ) ⊢ 0'(= a14◂ [ ] )
	mov rax,r9
	mov r13,rax
	call ETR_48
	mov r8,r14
	mov r14,QWORD [rsp-8+8*2]
	mov r9,r13
	mov r13,QWORD [rsp-8+8*1]
	add rsp,16
;; rsp=0 , %290~2'(= {| l |} ) %289~3'(= a14◂ [ ] ) %286~1'(= r ) %285~0'(= {| l |} ) 
; ∎ { 0'(= {| l |} ) 2'(= {| l |} ) }
; .dlt.ptn 3'(= a14◂ [ ] )
	mov rdi,r9
	C_PUSH_REGS
	mov r8,rdi
	call LB_114
	C_POP_REGS
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 { 0'(= {| l |} ) 2'(= {| l |} ) } ⊢ { 0'(= {| l |} ) 1'(= {| l |} ) }
; .mov_ptn 2'(= {| l |} ) ⊢ 1'(= {| l |} )
	mov rax,r8
	mov r14,rax
	ret
LB_111:
;; rsp=0 , %287~2'(= a3◂ [ a14◂ [ ]] ) %286~1'(= r ) %285~0'(= {| l |} ) 
; $ %[ "esc_stg_ltr" ] ⊢ %[ "esc_stg_ltr" ]
;; rsp=0 , %291~%[ "esc_stg_ltr" ] %287~2'(= a3◂ [ a14◂ [ ]] ) %286~1'(= r ) %285~0'(= {| l |} ) 
; #10 %[ "esc_stg_ltr" ] ⊢ %[ "esc_stg_ltr" ]
	mov rdi,fmt_emt
	call emt_stg
	mov rdi,LB_121
	call emt_stg 
	mov rdi,fmt_nl
	call emt_stg
	jmp LB_122
LB_122:
;; rsp=0 , %292~%[ "esc_stg_ltr" ] %287~2'(= a3◂ [ a14◂ [ ]] ) %286~1'(= r ) %285~0'(= {| l |} ) 
	mov rdi,LB_123
	call emt_stg 
	jmp err
ETR_72:
	mov r9,0x0000_ffff_ffff_ffff
	and r9,[r13]
	call GRM_72
	ret
GRM_72:
	PUSH_GRM
	lea rax,[r14+1]
	cmp rax,r9
	jg LB_127
	jmp LB_128
LB_127:
	mov r8,unt_1
	jmp LB_125
LB_128:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],34
	jnz LB_129
	jmp LB_130
LB_129:
	mov r8,unt_1
	jmp LB_125
LB_130:
	add r14,1
	jmp LB_126
LB_125:
	add rsp,0
	jmp LB_124
LB_126:
	call GRM_73
	cmp BYTE [r8+6],0
	jnz LB_133
	jmp LB_134
LB_133:
	jmp LB_131
LB_134:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a14◂ [ ] ) ⊢ 8'(= a14◂ [ ] )
; .mov_ptn 2'(= a14◂ [ ] ) ⊢ 8'(= a14◂ [ ] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_132
LB_131:
	add rsp,0
	jmp LB_124
LB_132:
	mov QWORD [rsp+8*1],r14
	mov r13,QWORD [rsp+16+8*1]
	mov r14,QWORD [rsp+8*1]
	jmp LB_135
LB_135
;; rsp=1 , %295~1'(= r ) %294~0'(= r ) %293~8'(= a14◂ [ ] ) 
; #48 8'(= a14◂ [ ] ) ⊢ { 3'(= a14◂ [ ] ) 2'(= {| l |} ) }
	sub rsp,16
	mov QWORD [rsp+8*0],r13
	mov QWORD [rsp+8*1],r14
; .mov_ptn2 8'(= a14◂ [ ] ) ⊢ 0'(= a14◂ [ ] )
; .mov_ptn 8'(= a14◂ [ ] ) ⊢ 0'(= a14◂ [ ] )
	mov rax,QWORD [rsp-8+8*3]
	mov r13,rax
	call ETR_48
	mov r8,r14
	mov r14,QWORD [rsp-8+8*2]
	mov r9,r13
	mov r13,QWORD [rsp-8+8*1]
	add rsp,24
;; rsp=0 , %297~2'(= {| l |} ) %296~3'(= a14◂ [ ] ) %295~1'(= r ) %294~0'(= r ) 
; #24 2'(= {| l |} ) ⊢ 0(<2)◂2'(= {| l |} )
;; rsp=0 , %298~0(<2)◂2'(= {| l |} ) %296~3'(= a14◂ [ ] ) %295~1'(= r ) %294~0'(= r ) 
; ∎ 0(<2)◂2'(= {| l |} )
; .dlt.ptn 3'(= a14◂ [ ] )
	mov rdi,r9
	C_PUSH_REGS
	mov r8,rdi
	call LB_114
	C_POP_REGS
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂2'(= {| l |} ) ⊢ 2'(= a3◂ [ {| l |}] )
	mov r13,r8
; .mov_ptn 0(<2)◂0'(= {| l |} ) ⊢ 2'(= a3◂ [ {| l |}] )
	mov rax,r13
	mov BYTE [rax+6],0
	mov r8,rax
	jmp LB_136
LB_136:
	cmp BYTE [r8+6],0
	jnz LB_124
	POP_GRM_SCC
	ret
LB_124:
	POP_GRM_FAIL 
	ret
ETR_73:
	mov r9,0x0000_ffff_ffff_ffff
	and r9,[r13]
	call GRM_73
	ret
GRM_73:
	PUSH_GRM
	lea rax,[r14+1]
	cmp rax,r9
	jg LB_140
	jmp LB_141
LB_140:
	mov r8,unt_1
	jmp LB_138
LB_141:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],10
	jnz LB_142
	jmp LB_143
LB_142:
	mov r8,unt_1
	jmp LB_138
LB_143:
	add r14,1
	jmp LB_139
LB_138:
	add rsp,0
	jmp LB_137
LB_139:
	mov QWORD [rsp+8*0],r14
	mov r13,QWORD [rsp+16+8*0]
	mov r14,QWORD [rsp+8*0]
	jmp LB_144
LB_144
;; rsp=0 , %301~1'(= r ) %300~0'(= r ) %299~{ } 
; #25 { } ⊢ 1(<2)◂{ }
;; rsp=0 , %302~1(<2)◂{ } %301~1'(= r ) %300~0'(= r ) %299~{ } 
; ∎ 1(<2)◂{ }
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn { }
; .mov_ptn2 1(<2)◂{ } ⊢ 2'(= a3◂ [ a14◂ [ ]] )
; .mov_ptn 1(<2)◂{ } ⊢ 2'(= a3◂ [ a14◂ [ ]] )
	mov rax,unt 
	mov rax,unt_1
	mov r8,rax
	jmp LB_145
LB_145:
	cmp BYTE [r8+6],0
	jnz LB_137
	POP_GRM_SCC
	ret
LB_137:
	RB_GRM
	lea rax,[r14+1]
	cmp rax,r9
	jg LB_149
	jmp LB_150
LB_149:
	mov r8,unt_1
	jmp LB_147
LB_150:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],92
	jnz LB_151
	jmp LB_152
LB_151:
	mov r8,unt_1
	jmp LB_147
LB_152:
	add r14,1
	jmp LB_148
LB_147:
	add rsp,0
	jmp LB_146
LB_148:
	call GRM_74
	cmp BYTE [r8+6],0
	jnz LB_155
	jmp LB_156
LB_155:
	jmp LB_153
LB_156:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= r ) ⊢ 8'(= r )
; .mov_ptn 2'(= r ) ⊢ 8'(= r )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_154
LB_153:
	add rsp,0
	jmp LB_146
LB_154:
	call GRM_73
	cmp BYTE [r8+6],0
	jnz LB_159
	jmp LB_160
LB_159:
	jmp LB_157
LB_160:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a14◂ [ ] ) ⊢ 9'(= a14◂ [ ] )
; .mov_ptn 2'(= a14◂ [ ] ) ⊢ 9'(= a14◂ [ ] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_158
LB_157:
	add rsp,8
	jmp LB_146
LB_158:
	mov QWORD [rsp+8*2],r14
	mov r13,QWORD [rsp+16+8*2]
	mov r14,QWORD [rsp+8*2]
	jmp LB_161
LB_161
;; rsp=2 , %306~1'(= r ) %305~0'(= r ) %304~9'(= a14◂ [ ] ) %303~8'(= r ) 
; #45 { 8'(= r ) 9'(= a14◂ [ ] ) } ⊢ 2'(= a14◂ [ ] )
	sub rsp,16
	mov QWORD [rsp+8*0],r13
	mov QWORD [rsp+8*1],r14
; .mov_ptn2 { 8'(= r ) 9'(= a14◂ [ ] ) } ⊢ { 0'(= r ) 1'(= a14◂ [ ] ) }
; .mov_ptn 9'(= a14◂ [ ] ) ⊢ 1'(= a14◂ [ ] )
	mov rax,QWORD [rsp-8+8*3]
	mov r14,rax
; .mov_ptn 8'(= r ) ⊢ 0'(= r )
	mov rax,QWORD [rsp-8+8*4]
	mov r13,rax
	call ETR_45
	mov r14,QWORD [rsp-8+8*2]
	mov r8,r13
	mov r13,QWORD [rsp-8+8*1]
	add rsp,32
;; rsp=0 , %307~2'(= a14◂ [ ] ) %306~1'(= r ) %305~0'(= r ) 
; #24 2'(= a14◂ [ ] ) ⊢ 0(<2)◂2'(= a14◂ [ ] )
;; rsp=0 , %308~0(<2)◂2'(= a14◂ [ ] ) %306~1'(= r ) %305~0'(= r ) 
; ∎ 0(<2)◂2'(= a14◂ [ ] )
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂2'(= a14◂ [ ] ) ⊢ 2'(= a3◂ [ a14◂ [ ]] )
	mov r13,r8
; .mov_ptn 0(<2)◂0'(= a14◂ [ ] ) ⊢ 2'(= a3◂ [ a14◂ [ ]] )
	mov rax,r13
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	jmp LB_162
LB_162:
	cmp BYTE [r8+6],0
	jnz LB_146
	POP_GRM_SCC
	ret
LB_146:
	RB_GRM
	lea rax,[r14+1]
	cmp rax,r9
	jg LB_166
	jmp LB_167
LB_166:
	mov r8,unt_1
	jmp LB_164
LB_167:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],34
	jnz LB_168
	jmp LB_169
LB_168:
	mov r8,unt_1
	jmp LB_164
LB_169:
	add r14,1
	jmp LB_165
LB_164:
	add rsp,0
	jmp LB_163
LB_165:
	mov QWORD [rsp+8*0],r14
	mov r13,QWORD [rsp+16+8*0]
	mov r14,QWORD [rsp+8*0]
	jmp LB_170
LB_170
;; rsp=0 , %310~1'(= r ) %309~0'(= r ) 
; #37 { } ⊢ 2(<4)◂{ }
;; rsp=0 , %311~2(<4)◂{ } %310~1'(= r ) %309~0'(= r ) 
; #24 2(<4)◂{ } ⊢ 0(<2)◂2(<4)◂{ }
;; rsp=0 , %312~0(<2)◂2(<4)◂{ } %310~1'(= r ) %309~0'(= r ) 
; ∎ 0(<2)◂2(<4)◂{ }
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂2(<4)◂{ } ⊢ 2'(= a3◂ [ a14◂ [ ]] )
; .mov_ptn 0(<2)◂2(<4)◂{ } ⊢ 2'(= a3◂ [ a14◂ [ ]] )
	mov rax,unt 
	mov rax,unt_2
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	jmp LB_171
LB_171:
	cmp BYTE [r8+6],0
	jnz LB_163
	POP_GRM_SCC
	ret
LB_163:
	RB_GRM
	cmp r14,r9
	jge LB_175
	jmp LB_176
LB_175:
	mov r8,unt_1 
	jmp LB_173
LB_176:
	movzx rdi,BYTE [r13+8+r14]
	push rdi 
	add r14,1 
	jmp LB_174
LB_173:
	add rsp,0
	jmp LB_172
LB_174:
	call GRM_73
	cmp BYTE [r8+6],0
	jnz LB_179
	jmp LB_180
LB_179:
	jmp LB_177
LB_180:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a14◂ [ ] ) ⊢ 9'(= a14◂ [ ] )
; .mov_ptn 2'(= a14◂ [ ] ) ⊢ 9'(= a14◂ [ ] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_178
LB_177:
	add rsp,8
	jmp LB_172
LB_178:
	mov QWORD [rsp+8*2],r14
	mov r13,QWORD [rsp+16+8*2]
	mov r14,QWORD [rsp+8*2]
	jmp LB_181
LB_181
;; rsp=2 , %316~1'(= r ) %315~0'(= r ) %314~9'(= a14◂ [ ] ) %313~8'(= r ) 
; #45 { 8'(= r ) 9'(= a14◂ [ ] ) } ⊢ 2'(= a14◂ [ ] )
	sub rsp,16
	mov QWORD [rsp+8*0],r13
	mov QWORD [rsp+8*1],r14
; .mov_ptn2 { 8'(= r ) 9'(= a14◂ [ ] ) } ⊢ { 0'(= r ) 1'(= a14◂ [ ] ) }
; .mov_ptn 9'(= a14◂ [ ] ) ⊢ 1'(= a14◂ [ ] )
	mov rax,QWORD [rsp-8+8*3]
	mov r14,rax
; .mov_ptn 8'(= r ) ⊢ 0'(= r )
	mov rax,QWORD [rsp-8+8*4]
	mov r13,rax
	call ETR_45
	mov r14,QWORD [rsp-8+8*2]
	mov r8,r13
	mov r13,QWORD [rsp-8+8*1]
	add rsp,32
;; rsp=0 , %317~2'(= a14◂ [ ] ) %316~1'(= r ) %315~0'(= r ) 
; #24 2'(= a14◂ [ ] ) ⊢ 0(<2)◂2'(= a14◂ [ ] )
;; rsp=0 , %318~0(<2)◂2'(= a14◂ [ ] ) %316~1'(= r ) %315~0'(= r ) 
; ∎ 0(<2)◂2'(= a14◂ [ ] )
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂2'(= a14◂ [ ] ) ⊢ 2'(= a3◂ [ a14◂ [ ]] )
	mov r13,r8
; .mov_ptn 0(<2)◂0'(= a14◂ [ ] ) ⊢ 2'(= a3◂ [ a14◂ [ ]] )
	mov rax,r13
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	jmp LB_182
LB_182:
	cmp BYTE [r8+6],0
	jnz LB_172
	POP_GRM_SCC
	ret
LB_172:
	POP_GRM_FAIL 
	ret
ETR_74:
	mov r9,0x0000_ffff_ffff_ffff
	and r9,[r13]
	call GRM_74
	ret
GRM_74:
	PUSH_GRM
	lea rax,[r14+1]
	cmp rax,r9
	jg LB_186
	jmp LB_187
LB_186:
	mov r8,unt_1
	jmp LB_184
LB_187:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],92
	jnz LB_188
	jmp LB_189
LB_188:
	mov r8,unt_1
	jmp LB_184
LB_189:
	add r14,1
	jmp LB_185
LB_184:
	add rsp,0
	jmp LB_183
LB_185:
	mov QWORD [rsp+8*0],r14
	mov r13,QWORD [rsp+16+8*0]
	mov r14,QWORD [rsp+8*0]
	jmp LB_190
LB_190
;; rsp=0 , %320~1'(= r ) %319~0'(= r ) 
; $ %[ 92r ] ⊢ %[ 92r ]
;; rsp=0 , %321~%[ 92r ] %320~1'(= r ) %319~0'(= r ) 
; #24 %[ 92r ] ⊢ 0(<2)◂%[ 92r ]
;; rsp=0 , %322~0(<2)◂%[ 92r ] %320~1'(= r ) %319~0'(= r ) 
; ∎ 0(<2)◂%[ 92r ]
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂%[ 92r ] ⊢ 2'(= a3◂ [ r] )
; .mov_ptn 0(<2)◂%[ 92r ] ⊢ 2'(= a3◂ [ r] )
	mov rax,92
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	jmp LB_191
LB_191:
	cmp BYTE [r8+6],0
	jnz LB_183
	POP_GRM_SCC
	ret
LB_183:
	RB_GRM
	lea rax,[r14+1]
	cmp rax,r9
	jg LB_195
	jmp LB_196
LB_195:
	mov r8,unt_1
	jmp LB_193
LB_196:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],34
	jnz LB_197
	jmp LB_198
LB_197:
	mov r8,unt_1
	jmp LB_193
LB_198:
	add r14,1
	jmp LB_194
LB_193:
	add rsp,0
	jmp LB_192
LB_194:
	mov QWORD [rsp+8*0],r14
	mov r13,QWORD [rsp+16+8*0]
	mov r14,QWORD [rsp+8*0]
	jmp LB_199
LB_199
;; rsp=0 , %324~1'(= r ) %323~0'(= r ) 
; $ %[ 34r ] ⊢ %[ 34r ]
;; rsp=0 , %325~%[ 34r ] %324~1'(= r ) %323~0'(= r ) 
; #24 %[ 34r ] ⊢ 0(<2)◂%[ 34r ]
;; rsp=0 , %326~0(<2)◂%[ 34r ] %324~1'(= r ) %323~0'(= r ) 
; ∎ 0(<2)◂%[ 34r ]
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂%[ 34r ] ⊢ 2'(= a3◂ [ r] )
; .mov_ptn 0(<2)◂%[ 34r ] ⊢ 2'(= a3◂ [ r] )
	mov rax,34
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	jmp LB_200
LB_200:
	cmp BYTE [r8+6],0
	jnz LB_192
	POP_GRM_SCC
	ret
LB_192:
	RB_GRM
	lea rax,[r14+1]
	cmp rax,r9
	jg LB_204
	jmp LB_205
LB_204:
	mov r8,unt_1
	jmp LB_202
LB_205:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],110
	jnz LB_206
	jmp LB_207
LB_206:
	mov r8,unt_1
	jmp LB_202
LB_207:
	add r14,1
	jmp LB_203
LB_202:
	add rsp,0
	jmp LB_201
LB_203:
	mov QWORD [rsp+8*0],r14
	mov r13,QWORD [rsp+16+8*0]
	mov r14,QWORD [rsp+8*0]
	jmp LB_208
LB_208
;; rsp=0 , %328~1'(= r ) %327~0'(= r ) 
; $ %[ 10r ] ⊢ %[ 10r ]
;; rsp=0 , %329~%[ 10r ] %328~1'(= r ) %327~0'(= r ) 
; #24 %[ 10r ] ⊢ 0(<2)◂%[ 10r ]
;; rsp=0 , %330~0(<2)◂%[ 10r ] %328~1'(= r ) %327~0'(= r ) 
; ∎ 0(<2)◂%[ 10r ]
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂%[ 10r ] ⊢ 2'(= a3◂ [ r] )
; .mov_ptn 0(<2)◂%[ 10r ] ⊢ 2'(= a3◂ [ r] )
	mov rax,10
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	jmp LB_209
LB_209:
	cmp BYTE [r8+6],0
	jnz LB_201
	POP_GRM_SCC
	ret
LB_201:
	RB_GRM
	lea rax,[r14+1]
	cmp rax,r9
	jg LB_213
	jmp LB_214
LB_213:
	mov r8,unt_1
	jmp LB_211
LB_214:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],116
	jnz LB_215
	jmp LB_216
LB_215:
	mov r8,unt_1
	jmp LB_211
LB_216:
	add r14,1
	jmp LB_212
LB_211:
	add rsp,0
	jmp LB_210
LB_212:
	mov QWORD [rsp+8*0],r14
	mov r13,QWORD [rsp+16+8*0]
	mov r14,QWORD [rsp+8*0]
	jmp LB_217
LB_217
;; rsp=0 , %332~1'(= r ) %331~0'(= r ) 
; $ %[ 9r ] ⊢ %[ 9r ]
;; rsp=0 , %333~%[ 9r ] %332~1'(= r ) %331~0'(= r ) 
; #24 %[ 9r ] ⊢ 0(<2)◂%[ 9r ]
;; rsp=0 , %334~0(<2)◂%[ 9r ] %332~1'(= r ) %331~0'(= r ) 
; ∎ 0(<2)◂%[ 9r ]
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂%[ 9r ] ⊢ 2'(= a3◂ [ r] )
; .mov_ptn 0(<2)◂%[ 9r ] ⊢ 2'(= a3◂ [ r] )
	mov rax,9
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	jmp LB_218
LB_218:
	cmp BYTE [r8+6],0
	jnz LB_210
	POP_GRM_SCC
	ret
LB_210:
	RB_GRM
	lea rax,[r14+1]
	cmp rax,r9
	jg LB_222
	jmp LB_223
LB_222:
	mov r8,unt_1
	jmp LB_220
LB_223:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],48
	jnz LB_224
	jmp LB_225
LB_224:
	mov r8,unt_1
	jmp LB_220
LB_225:
	add r14,1
	jmp LB_221
LB_220:
	add rsp,0
	jmp LB_219
LB_221:
	mov QWORD [rsp+8*0],r14
	mov r13,QWORD [rsp+16+8*0]
	mov r14,QWORD [rsp+8*0]
	jmp LB_226
LB_226
;; rsp=0 , %336~1'(= r ) %335~0'(= r ) 
; $ %[ 0r ] ⊢ %[ 0r ]
;; rsp=0 , %337~%[ 0r ] %336~1'(= r ) %335~0'(= r ) 
; #24 %[ 0r ] ⊢ 0(<2)◂%[ 0r ]
;; rsp=0 , %338~0(<2)◂%[ 0r ] %336~1'(= r ) %335~0'(= r ) 
; ∎ 0(<2)◂%[ 0r ]
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂%[ 0r ] ⊢ 2'(= a3◂ [ r] )
; .mov_ptn 0(<2)◂%[ 0r ] ⊢ 2'(= a3◂ [ r] )
	mov rax,0
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	jmp LB_227
LB_227:
	cmp BYTE [r8+6],0
	jnz LB_219
	POP_GRM_SCC
	ret
LB_219:
	POP_GRM_FAIL 
	ret
ETR_75:
	mov r9,0x0000_ffff_ffff_ffff
	and r9,[r13]
	call GRM_75
	ret
GRM_75:
	PUSH_GRM
	cmp r14,r9
	jge LB_231
	jmp LB_232
LB_231:
	mov r8,unt_1 
	jmp LB_229
LB_232:
	movzx rdi,BYTE [r13+8+r14]
	push rdi 
	add r14,1 
	jmp LB_230
LB_229:
	add rsp,0
	jmp LB_228
LB_230:
	mov QWORD [rsp+8*1],r14
	mov r13,QWORD [rsp+16+8*1]
	mov r14,QWORD [rsp+8*1]
	jmp LB_233
LB_233
;; rsp=1 , %341~1'(= r ) %340~0'(= r ) %339~8'(= r ) 
	cmp QWORD [rsp-8+8*1],48
	jl LB_237
	jmp LB_236
LB_237:
	jmp LB_235
LB_236:
	cmp QWORD [rsp-8+8*1],57
	jg LB_239
	jmp LB_238
LB_239:
	jmp LB_235
LB_238:
;; rsp=1 , %341~1'(= r ) %340~0'(= r ) %339~8'(= r ) 
; #24 8'(= r ) ⊢ 0(<2)◂8'(= r )
;; rsp=1 , %342~0(<2)◂8'(= r ) %341~1'(= r ) %340~0'(= r ) 
; ∎ 0(<2)◂8'(= r )
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂8'(= r ) ⊢ 2'(= a3◂ [ r] )
; .mov_ptn 0(<2)◂8'(= r ) ⊢ 2'(= a3◂ [ r] )
	mov rax,QWORD [rsp-8+8*1]
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,8
	jmp LB_234
LB_235:
;; rsp=1 , %341~1'(= r ) %340~0'(= r ) %339~8'(= r ) 
; #25 { } ⊢ 1(<2)◂{ }
;; rsp=1 , %343~1(<2)◂{ } %341~1'(= r ) %340~0'(= r ) %339~8'(= r ) 
; ∎ 1(<2)◂{ }
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 8'(= r )
	mov rdi,QWORD [rsp-8+8*1]
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 1(<2)◂{ } ⊢ 2'(= a3◂ [ r] )
; .mov_ptn 1(<2)◂{ } ⊢ 2'(= a3◂ [ r] )
	mov rax,unt 
	mov rax,unt_1
	mov r8,rax
	add rsp,8
	jmp LB_234
LB_234:
	cmp BYTE [r8+6],0
	jnz LB_228
	POP_GRM_SCC
	ret
LB_228:
	POP_GRM_FAIL 
	ret
ETR_76:
	mov r9,0x0000_ffff_ffff_ffff
	and r9,[r13]
	call GRM_76
	ret
GRM_76:
	PUSH_GRM
	cmp r14,r9
	jge LB_243
	jmp LB_244
LB_243:
	mov r8,unt_1 
	jmp LB_241
LB_244:
	movzx rdi,BYTE [r13+8+r14]
	push rdi 
	add r14,1 
	jmp LB_242
LB_241:
	add rsp,0
	jmp LB_240
LB_242:
	mov QWORD [rsp+8*1],r14
	mov r13,QWORD [rsp+16+8*1]
	mov r14,QWORD [rsp+8*1]
	jmp LB_245
LB_245
;; rsp=1 , %346~1'(= r ) %345~0'(= r ) %344~8'(= r ) 
	cmp QWORD [rsp-8+8*1],97
	jl LB_249
	jmp LB_248
LB_249:
	jmp LB_247
LB_248:
	cmp QWORD [rsp-8+8*1],122
	jg LB_251
	jmp LB_250
LB_251:
	jmp LB_247
LB_250:
;; rsp=1 , %346~1'(= r ) %345~0'(= r ) %344~8'(= r ) 
; #24 8'(= r ) ⊢ 0(<2)◂8'(= r )
;; rsp=1 , %347~0(<2)◂8'(= r ) %346~1'(= r ) %345~0'(= r ) 
; ∎ 0(<2)◂8'(= r )
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂8'(= r ) ⊢ 2'(= a3◂ [ r] )
; .mov_ptn 0(<2)◂8'(= r ) ⊢ 2'(= a3◂ [ r] )
	mov rax,QWORD [rsp-8+8*1]
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,8
	jmp LB_246
LB_247:
;; rsp=1 , %346~1'(= r ) %345~0'(= r ) %344~8'(= r ) 
; #25 { } ⊢ 1(<2)◂{ }
;; rsp=1 , %348~1(<2)◂{ } %346~1'(= r ) %345~0'(= r ) %344~8'(= r ) 
; ∎ 1(<2)◂{ }
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 8'(= r )
	mov rdi,QWORD [rsp-8+8*1]
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 1(<2)◂{ } ⊢ 2'(= a3◂ [ r] )
; .mov_ptn 1(<2)◂{ } ⊢ 2'(= a3◂ [ r] )
	mov rax,unt 
	mov rax,unt_1
	mov r8,rax
	add rsp,8
	jmp LB_246
LB_246:
	cmp BYTE [r8+6],0
	jnz LB_240
	POP_GRM_SCC
	ret
LB_240:
	POP_GRM_FAIL 
	ret
ETR_77:
	mov r9,0x0000_ffff_ffff_ffff
	and r9,[r13]
	call GRM_77
	ret
GRM_77:
	PUSH_GRM
	cmp r14,r9
	jge LB_255
	jmp LB_256
LB_255:
	mov r8,unt_1 
	jmp LB_253
LB_256:
	movzx rdi,BYTE [r13+8+r14]
	push rdi 
	add r14,1 
	jmp LB_254
LB_253:
	add rsp,0
	jmp LB_252
LB_254:
	mov QWORD [rsp+8*1],r14
	mov r13,QWORD [rsp+16+8*1]
	mov r14,QWORD [rsp+8*1]
	jmp LB_257
LB_257
;; rsp=1 , %351~1'(= r ) %350~0'(= r ) %349~8'(= r ) 
	cmp QWORD [rsp-8+8*1],65
	jl LB_261
	jmp LB_260
LB_261:
	jmp LB_259
LB_260:
	cmp QWORD [rsp-8+8*1],90
	jg LB_263
	jmp LB_262
LB_263:
	jmp LB_259
LB_262:
;; rsp=1 , %351~1'(= r ) %350~0'(= r ) %349~8'(= r ) 
; #24 8'(= r ) ⊢ 0(<2)◂8'(= r )
;; rsp=1 , %352~0(<2)◂8'(= r ) %351~1'(= r ) %350~0'(= r ) 
; ∎ 0(<2)◂8'(= r )
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂8'(= r ) ⊢ 2'(= a3◂ [ r] )
; .mov_ptn 0(<2)◂8'(= r ) ⊢ 2'(= a3◂ [ r] )
	mov rax,QWORD [rsp-8+8*1]
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,8
	jmp LB_258
LB_259:
;; rsp=1 , %351~1'(= r ) %350~0'(= r ) %349~8'(= r ) 
; #25 { } ⊢ 1(<2)◂{ }
;; rsp=1 , %353~1(<2)◂{ } %351~1'(= r ) %350~0'(= r ) %349~8'(= r ) 
; ∎ 1(<2)◂{ }
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 8'(= r )
	mov rdi,QWORD [rsp-8+8*1]
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 1(<2)◂{ } ⊢ 2'(= a3◂ [ r] )
; .mov_ptn 1(<2)◂{ } ⊢ 2'(= a3◂ [ r] )
	mov rax,unt 
	mov rax,unt_1
	mov r8,rax
	add rsp,8
	jmp LB_258
LB_258:
	cmp BYTE [r8+6],0
	jnz LB_252
	POP_GRM_SCC
	ret
LB_252:
	POP_GRM_FAIL 
	ret
ETR_78:
	mov r9,0x0000_ffff_ffff_ffff
	and r9,[r13]
	call GRM_78
	ret
GRM_78:
	PUSH_GRM
	call GRM_77
	cmp BYTE [r8+6],0
	jnz LB_267
	jmp LB_268
LB_267:
	jmp LB_265
LB_268:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= r ) ⊢ 8'(= r )
; .mov_ptn 2'(= r ) ⊢ 8'(= r )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_266
LB_265:
	add rsp,0
	jmp LB_264
LB_266:
	mov QWORD [rsp+8*1],r14
	mov r13,QWORD [rsp+16+8*1]
	mov r14,QWORD [rsp+8*1]
	jmp LB_269
LB_269
;; rsp=1 , %356~1'(= r ) %355~0'(= r ) %354~8'(= r ) 
; #24 8'(= r ) ⊢ 0(<2)◂8'(= r )
;; rsp=1 , %357~0(<2)◂8'(= r ) %356~1'(= r ) %355~0'(= r ) 
; ∎ 0(<2)◂8'(= r )
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂8'(= r ) ⊢ 2'(= a3◂ [ r] )
; .mov_ptn 0(<2)◂8'(= r ) ⊢ 2'(= a3◂ [ r] )
	mov rax,QWORD [rsp-8+8*1]
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,8
	jmp LB_270
LB_270:
	cmp BYTE [r8+6],0
	jnz LB_264
	POP_GRM_SCC
	ret
LB_264:
	RB_GRM
	call GRM_76
	cmp BYTE [r8+6],0
	jnz LB_274
	jmp LB_275
LB_274:
	jmp LB_272
LB_275:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= r ) ⊢ 8'(= r )
; .mov_ptn 2'(= r ) ⊢ 8'(= r )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_273
LB_272:
	add rsp,0
	jmp LB_271
LB_273:
	mov QWORD [rsp+8*1],r14
	mov r13,QWORD [rsp+16+8*1]
	mov r14,QWORD [rsp+8*1]
	jmp LB_276
LB_276
;; rsp=1 , %360~1'(= r ) %359~0'(= r ) %358~8'(= r ) 
; #24 8'(= r ) ⊢ 0(<2)◂8'(= r )
;; rsp=1 , %361~0(<2)◂8'(= r ) %360~1'(= r ) %359~0'(= r ) 
; ∎ 0(<2)◂8'(= r )
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂8'(= r ) ⊢ 2'(= a3◂ [ r] )
; .mov_ptn 0(<2)◂8'(= r ) ⊢ 2'(= a3◂ [ r] )
	mov rax,QWORD [rsp-8+8*1]
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,8
	jmp LB_277
LB_277:
	cmp BYTE [r8+6],0
	jnz LB_271
	POP_GRM_SCC
	ret
LB_271:
	POP_GRM_FAIL 
	ret
ETR_79:
	mov r9,0x0000_ffff_ffff_ffff
	and r9,[r13]
	call GRM_79
	ret
GRM_79:
	PUSH_GRM
	call GRM_78
	cmp BYTE [r8+6],0
	jnz LB_281
	jmp LB_282
LB_281:
	jmp LB_279
LB_282:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= r ) ⊢ 8'(= r )
; .mov_ptn 2'(= r ) ⊢ 8'(= r )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_280
LB_279:
	add rsp,0
	jmp LB_278
LB_280:
	call GRM_80
	cmp BYTE [r8+6],0
	jnz LB_285
	jmp LB_286
LB_285:
	jmp LB_283
LB_286:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a14◂ [ ] ) ⊢ 9'(= a14◂ [ ] )
; .mov_ptn 2'(= a14◂ [ ] ) ⊢ 9'(= a14◂ [ ] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_284
LB_283:
	add rsp,8
	jmp LB_278
LB_284:
	mov QWORD [rsp+8*2],r14
	mov r13,QWORD [rsp+16+8*2]
	mov r14,QWORD [rsp+8*2]
	jmp LB_287
LB_287
;; rsp=2 , %365~1'(= r ) %364~0'(= r ) %363~9'(= a14◂ [ ] ) %362~8'(= r ) 
; #45 { 8'(= r ) 9'(= a14◂ [ ] ) } ⊢ 2'(= a14◂ [ ] )
	sub rsp,16
	mov QWORD [rsp+8*0],r13
	mov QWORD [rsp+8*1],r14
; .mov_ptn2 { 8'(= r ) 9'(= a14◂ [ ] ) } ⊢ { 0'(= r ) 1'(= a14◂ [ ] ) }
; .mov_ptn 9'(= a14◂ [ ] ) ⊢ 1'(= a14◂ [ ] )
	mov rax,QWORD [rsp-8+8*3]
	mov r14,rax
; .mov_ptn 8'(= r ) ⊢ 0'(= r )
	mov rax,QWORD [rsp-8+8*4]
	mov r13,rax
	call ETR_45
	mov r14,QWORD [rsp-8+8*2]
	mov r8,r13
	mov r13,QWORD [rsp-8+8*1]
	add rsp,32
;; rsp=0 , %366~2'(= a14◂ [ ] ) %365~1'(= r ) %364~0'(= r ) 
; #48 2'(= a14◂ [ ] ) ⊢ { 3'(= a14◂ [ ] ) 2'(= {| l |} ) }
	sub rsp,16
	mov QWORD [rsp+8*0],r13
	mov QWORD [rsp+8*1],r14
; .mov_ptn2 2'(= a14◂ [ ] ) ⊢ 0'(= a14◂ [ ] )
; .mov_ptn 2'(= a14◂ [ ] ) ⊢ 0'(= a14◂ [ ] )
	mov rax,r8
	mov r13,rax
	call ETR_48
	mov r8,r14
	mov r14,QWORD [rsp-8+8*2]
	mov r9,r13
	mov r13,QWORD [rsp-8+8*1]
	add rsp,16
;; rsp=0 , %368~2'(= {| l |} ) %367~3'(= a14◂ [ ] ) %365~1'(= r ) %364~0'(= r ) 
; #24 2'(= {| l |} ) ⊢ 0(<2)◂2'(= {| l |} )
;; rsp=0 , %369~0(<2)◂2'(= {| l |} ) %367~3'(= a14◂ [ ] ) %365~1'(= r ) %364~0'(= r ) 
; ∎ 0(<2)◂2'(= {| l |} )
; .dlt.ptn 3'(= a14◂ [ ] )
	mov rdi,r9
	C_PUSH_REGS
	mov r8,rdi
	call LB_114
	C_POP_REGS
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂2'(= {| l |} ) ⊢ 2'(= a3◂ [ {| l |}] )
	mov r13,r8
; .mov_ptn 0(<2)◂0'(= {| l |} ) ⊢ 2'(= a3◂ [ {| l |}] )
	mov rax,r13
	mov BYTE [rax+6],0
	mov r8,rax
	jmp LB_288
LB_288:
	cmp BYTE [r8+6],0
	jnz LB_278
	POP_GRM_SCC
	ret
LB_278:
	POP_GRM_FAIL 
	ret
ETR_80:
	mov r9,0x0000_ffff_ffff_ffff
	and r9,[r13]
	call GRM_80
	ret
GRM_80:
	PUSH_GRM
	call GRM_81
	cmp BYTE [r8+6],0
	jnz LB_292
	jmp LB_293
LB_292:
	jmp LB_290
LB_293:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= r ) ⊢ 8'(= r )
; .mov_ptn 2'(= r ) ⊢ 8'(= r )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_291
LB_290:
	add rsp,0
	jmp LB_289
LB_291:
	call GRM_80
	cmp BYTE [r8+6],0
	jnz LB_296
	jmp LB_297
LB_296:
	jmp LB_294
LB_297:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a14◂ [ ] ) ⊢ 9'(= a14◂ [ ] )
; .mov_ptn 2'(= a14◂ [ ] ) ⊢ 9'(= a14◂ [ ] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_295
LB_294:
	add rsp,8
	jmp LB_289
LB_295:
	mov QWORD [rsp+8*2],r14
	mov r13,QWORD [rsp+16+8*2]
	mov r14,QWORD [rsp+8*2]
	jmp LB_298
LB_298
;; rsp=2 , %373~1'(= r ) %372~0'(= r ) %371~9'(= a14◂ [ ] ) %370~8'(= r ) 
; #45 { 8'(= r ) 9'(= a14◂ [ ] ) } ⊢ 2'(= a14◂ [ ] )
	sub rsp,16
	mov QWORD [rsp+8*0],r13
	mov QWORD [rsp+8*1],r14
; .mov_ptn2 { 8'(= r ) 9'(= a14◂ [ ] ) } ⊢ { 0'(= r ) 1'(= a14◂ [ ] ) }
; .mov_ptn 9'(= a14◂ [ ] ) ⊢ 1'(= a14◂ [ ] )
	mov rax,QWORD [rsp-8+8*3]
	mov r14,rax
; .mov_ptn 8'(= r ) ⊢ 0'(= r )
	mov rax,QWORD [rsp-8+8*4]
	mov r13,rax
	call ETR_45
	mov r14,QWORD [rsp-8+8*2]
	mov r8,r13
	mov r13,QWORD [rsp-8+8*1]
	add rsp,32
;; rsp=0 , %374~2'(= a14◂ [ ] ) %373~1'(= r ) %372~0'(= r ) 
; #24 2'(= a14◂ [ ] ) ⊢ 0(<2)◂2'(= a14◂ [ ] )
;; rsp=0 , %375~0(<2)◂2'(= a14◂ [ ] ) %373~1'(= r ) %372~0'(= r ) 
; ∎ 0(<2)◂2'(= a14◂ [ ] )
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂2'(= a14◂ [ ] ) ⊢ 2'(= a3◂ [ a14◂ [ ]] )
	mov r13,r8
; .mov_ptn 0(<2)◂0'(= a14◂ [ ] ) ⊢ 2'(= a3◂ [ a14◂ [ ]] )
	mov rax,r13
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	jmp LB_299
LB_299:
	cmp BYTE [r8+6],0
	jnz LB_289
	POP_GRM_SCC
	ret
LB_289:
	RB_GRM
	mov QWORD [rsp+8*0],r14
	mov r13,QWORD [rsp+16+8*0]
	mov r14,QWORD [rsp+8*0]
	jmp LB_301
LB_301
;; rsp=0 , %377~1'(= r ) %376~0'(= r ) 
; #37 { } ⊢ 2(<4)◂{ }
;; rsp=0 , %378~2(<4)◂{ } %377~1'(= r ) %376~0'(= r ) 
; #24 2(<4)◂{ } ⊢ 0(<2)◂2(<4)◂{ }
;; rsp=0 , %379~0(<2)◂2(<4)◂{ } %377~1'(= r ) %376~0'(= r ) 
; ∎ 0(<2)◂2(<4)◂{ }
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂2(<4)◂{ } ⊢ 2'(= a3◂ [ a14◂ [ ]] )
; .mov_ptn 0(<2)◂2(<4)◂{ } ⊢ 2'(= a3◂ [ a14◂ [ ]] )
	mov rax,unt 
	mov rax,unt_2
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	jmp LB_302
LB_302:
	cmp BYTE [r8+6],0
	jnz LB_300
	POP_GRM_SCC
	ret
LB_300:
	POP_GRM_FAIL 
	ret
ETR_81:
	mov r9,0x0000_ffff_ffff_ffff
	and r9,[r13]
	call GRM_81
	ret
GRM_81:
	PUSH_GRM
	call GRM_78
	cmp BYTE [r8+6],0
	jnz LB_306
	jmp LB_307
LB_306:
	jmp LB_304
LB_307:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= r ) ⊢ 8'(= r )
; .mov_ptn 2'(= r ) ⊢ 8'(= r )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_305
LB_304:
	add rsp,0
	jmp LB_303
LB_305:
	mov QWORD [rsp+8*1],r14
	mov r13,QWORD [rsp+16+8*1]
	mov r14,QWORD [rsp+8*1]
	jmp LB_308
LB_308
;; rsp=1 , %382~1'(= r ) %381~0'(= r ) %380~8'(= r ) 
; #24 8'(= r ) ⊢ 0(<2)◂8'(= r )
;; rsp=1 , %383~0(<2)◂8'(= r ) %382~1'(= r ) %381~0'(= r ) 
; ∎ 0(<2)◂8'(= r )
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂8'(= r ) ⊢ 2'(= a3◂ [ r] )
; .mov_ptn 0(<2)◂8'(= r ) ⊢ 2'(= a3◂ [ r] )
	mov rax,QWORD [rsp-8+8*1]
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,8
	jmp LB_309
LB_309:
	cmp BYTE [r8+6],0
	jnz LB_303
	POP_GRM_SCC
	ret
LB_303:
	RB_GRM
	call GRM_75
	cmp BYTE [r8+6],0
	jnz LB_313
	jmp LB_314
LB_313:
	jmp LB_311
LB_314:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= r ) ⊢ 8'(= r )
; .mov_ptn 2'(= r ) ⊢ 8'(= r )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_312
LB_311:
	add rsp,0
	jmp LB_310
LB_312:
	mov QWORD [rsp+8*1],r14
	mov r13,QWORD [rsp+16+8*1]
	mov r14,QWORD [rsp+8*1]
	jmp LB_315
LB_315
;; rsp=1 , %386~1'(= r ) %385~0'(= r ) %384~8'(= r ) 
; #24 8'(= r ) ⊢ 0(<2)◂8'(= r )
;; rsp=1 , %387~0(<2)◂8'(= r ) %386~1'(= r ) %385~0'(= r ) 
; ∎ 0(<2)◂8'(= r )
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂8'(= r ) ⊢ 2'(= a3◂ [ r] )
; .mov_ptn 0(<2)◂8'(= r ) ⊢ 2'(= a3◂ [ r] )
	mov rax,QWORD [rsp-8+8*1]
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,8
	jmp LB_316
LB_316:
	cmp BYTE [r8+6],0
	jnz LB_310
	POP_GRM_SCC
	ret
LB_310:
	RB_GRM
	lea rax,[r14+1]
	cmp rax,r9
	jg LB_320
	jmp LB_321
LB_320:
	mov r8,unt_1
	jmp LB_318
LB_321:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],95
	jnz LB_322
	jmp LB_323
LB_322:
	mov r8,unt_1
	jmp LB_318
LB_323:
	add r14,1
	jmp LB_319
LB_318:
	add rsp,0
	jmp LB_317
LB_319:
	mov QWORD [rsp+8*0],r14
	mov r13,QWORD [rsp+16+8*0]
	mov r14,QWORD [rsp+8*0]
	jmp LB_324
LB_324
;; rsp=0 , %389~1'(= r ) %388~0'(= r ) 
; $ %[ 95r ] ⊢ %[ 95r ]
;; rsp=0 , %390~%[ 95r ] %389~1'(= r ) %388~0'(= r ) 
; #24 %[ 95r ] ⊢ 0(<2)◂%[ 95r ]
;; rsp=0 , %391~0(<2)◂%[ 95r ] %389~1'(= r ) %388~0'(= r ) 
; ∎ 0(<2)◂%[ 95r ]
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂%[ 95r ] ⊢ 2'(= a3◂ [ r] )
; .mov_ptn 0(<2)◂%[ 95r ] ⊢ 2'(= a3◂ [ r] )
	mov rax,95
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	jmp LB_325
LB_325:
	cmp BYTE [r8+6],0
	jnz LB_317
	POP_GRM_SCC
	ret
LB_317:
	POP_GRM_FAIL 
	ret
ETR_82:
	mov r9,0x0000_ffff_ffff_ffff
	and r9,[r13]
	call GRM_82
	ret
GRM_82:
	PUSH_GRM
	lea rax,[r14+1]
	cmp rax,r9
	jg LB_329
	jmp LB_330
LB_329:
	mov r8,unt_1
	jmp LB_327
LB_330:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],95
	jnz LB_331
	jmp LB_332
LB_331:
	mov r8,unt_1
	jmp LB_327
LB_332:
	add r14,1
	jmp LB_328
LB_327:
	add rsp,0
	jmp LB_326
LB_328:
	call GRM_80
	cmp BYTE [r8+6],0
	jnz LB_335
	jmp LB_336
LB_335:
	jmp LB_333
LB_336:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a14◂ [ ] ) ⊢ 8'(= a14◂ [ ] )
; .mov_ptn 2'(= a14◂ [ ] ) ⊢ 8'(= a14◂ [ ] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_334
LB_333:
	add rsp,0
	jmp LB_326
LB_334:
	mov QWORD [rsp+8*1],r14
	mov r13,QWORD [rsp+16+8*1]
	mov r14,QWORD [rsp+8*1]
	jmp LB_337
LB_337
;; rsp=1 , %394~1'(= r ) %393~0'(= r ) %392~8'(= a14◂ [ ] ) 
; #48 8'(= a14◂ [ ] ) ⊢ { 3'(= a14◂ [ ] ) 2'(= {| l |} ) }
	sub rsp,16
	mov QWORD [rsp+8*0],r13
	mov QWORD [rsp+8*1],r14
; .mov_ptn2 8'(= a14◂ [ ] ) ⊢ 0'(= a14◂ [ ] )
; .mov_ptn 8'(= a14◂ [ ] ) ⊢ 0'(= a14◂ [ ] )
	mov rax,QWORD [rsp-8+8*3]
	mov r13,rax
	call ETR_48
	mov r8,r14
	mov r14,QWORD [rsp-8+8*2]
	mov r9,r13
	mov r13,QWORD [rsp-8+8*1]
	add rsp,24
;; rsp=0 , %396~2'(= {| l |} ) %395~3'(= a14◂ [ ] ) %394~1'(= r ) %393~0'(= r ) 
; » _^ .. ⊢ ..
; .. //
	mov rdi,0
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[r8]
	add rdi,rax 
	push rax
	add rdi,1
	push rdi 
	call mlc_s8
	pop rdi
	mov r10,rax
	lea rdi,[rax+7+rdi]
	std 
	mov QWORD [tmp],rcx 
	pop rcx
	lea rsi,[r8+7+rcx]
	rep movsb
	lea rsi,[LB_339+1-1]
	mov rcx,1
	rep movsb
	mov rcx,QWORD [tmp] 
;; rsp=0 , %398~4'(= {| l |} ) %397~2'(= {| l |} ) %395~3'(= a14◂ [ ] ) %394~1'(= r ) %393~0'(= r ) 
; #24 4'(= {| l |} ) ⊢ 0(<2)◂4'(= {| l |} )
;; rsp=0 , %399~0(<2)◂4'(= {| l |} ) %397~2'(= {| l |} ) %395~3'(= a14◂ [ ] ) %394~1'(= r ) %393~0'(= r ) 
; ∎ 0(<2)◂4'(= {| l |} )
; .dlt.ptn 2'(= {| l |} )
	mov rdi,r8
	C_PUSH_REGS
	mov r8,rdi
	mov rdi,r8
	call free_s8
	C_POP_REGS
; .dlt.ptn 3'(= a14◂ [ ] )
	mov rdi,r9
	C_PUSH_REGS
	mov r8,rdi
	call LB_114
	C_POP_REGS
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂4'(= {| l |} ) ⊢ 2'(= a3◂ [ {| l |}] )
; .mov_ptn 0(<2)◂4'(= {| l |} ) ⊢ 2'(= a3◂ [ {| l |}] )
	mov rax,r10
	mov BYTE [rax+6],0
	mov r8,rax
	jmp LB_338
LB_338:
	cmp BYTE [r8+6],0
	jnz LB_326
	POP_GRM_SCC
	ret
LB_326:
	RB_GRM
	call GRM_79
	cmp BYTE [r8+6],0
	jnz LB_343
	jmp LB_344
LB_343:
	jmp LB_341
LB_344:
	sub rsp,8
; .mov_ptn2 2'(= {| l |} ) ⊢ 8'(= {| l |} )
; .mov_ptn 2'(= {| l |} ) ⊢ 8'(= {| l |} )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_342
LB_341:
	add rsp,0
	jmp LB_340
LB_342:
	mov QWORD [rsp+8*1],r14
	mov r13,QWORD [rsp+16+8*1]
	mov r14,QWORD [rsp+8*1]
	jmp LB_345
LB_345
;; rsp=1 , %402~1'(= r ) %401~0'(= r ) %400~8'(= {| l |} ) 
; #24 8'(= {| l |} ) ⊢ 0(<2)◂8'(= {| l |} )
;; rsp=1 , %403~0(<2)◂8'(= {| l |} ) %402~1'(= r ) %401~0'(= r ) 
; ∎ 0(<2)◂8'(= {| l |} )
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂8'(= {| l |} ) ⊢ 2'(= a3◂ [ {| l |}] )
; .mov_ptn 0(<2)◂8'(= {| l |} ) ⊢ 2'(= a3◂ [ {| l |}] )
	mov rax,QWORD [rsp-8+8*1]
	mov BYTE [rax+6],0
	mov r8,rax
	add rsp,8
	jmp LB_346
LB_346:
	cmp BYTE [r8+6],0
	jnz LB_340
	POP_GRM_SCC
	ret
LB_340:
	POP_GRM_FAIL 
	ret
ETR_87: ;; pnt_name 0'(= a18◂ [ ] ) ⊢ 0'(= {| l |} ) : (_t18→_s8)
;; rsp=0 , %404~0'(= a18◂ [ ] ) 
;; ?; 0'(= a18◂ [ ] ) ⊢ 0(<2)◂{ 1'(= {| l |} ) 2'(= a18◂ [ ] ) }
	mov rdi,r13
	cmp BYTE [rdi+6],0
	jnz LB_348
	jmp LB_349
LB_348:
	jmp LB_347
LB_349:
	mov r14, QWORD [r13+8]
	mov r8, QWORD [r13+16]
	mov QWORD [GBG_VCT+8*0],r13
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_RCD 2,rdi
;; rsp=0 , %406~2'(= a18◂ [ ] ) %405~1'(= {| l |} ) 
; #87 2'(= a18◂ [ ] ) ⊢ 0'(= {| l |} )
	sub rsp,8
	mov QWORD [rsp+8*0],r14
; .mov_ptn2 2'(= a18◂ [ ] ) ⊢ 0'(= a18◂ [ ] )
; .mov_ptn 2'(= a18◂ [ ] ) ⊢ 0'(= a18◂ [ ] )
	mov rax,r8
	mov r13,rax
	call ETR_87
	mov r14,QWORD [rsp-8+8*1]
	add rsp,8
;; rsp=0 , %407~0'(= {| l |} ) %405~1'(= {| l |} ) 
; » _^ .. ⊢ ..
; .. //
	mov rdi,0
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[r14]
	add rdi,rax 
	push rax
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[r13]
	add rdi,rax 
	push rax
	add rdi,1
	push rdi 
	call mlc_s8
	pop rdi
	mov r8,rax
	lea rdi,[rax+7+rdi]
	std 
	mov QWORD [tmp],rcx 
	pop rcx
	lea rsi,[r13+7+rcx]
	rep movsb
	lea rsi,[LB_350+1-1]
	mov rcx,1
	rep movsb
	pop rcx
	lea rsi,[r14+7+rcx]
	rep movsb
	mov rcx,QWORD [tmp] 
;; rsp=0 , %410~2'(= {| l |} ) %409~0'(= {| l |} ) %408~1'(= {| l |} ) 
; ∎ 2'(= {| l |} )
; .dlt.ptn 0'(= {| l |} )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	mov rdi,r8
	call free_s8
	C_POP_REGS
; .dlt.ptn 1'(= {| l |} )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	mov rdi,r8
	call free_s8
	C_POP_REGS
; .mov_ptn2 2'(= {| l |} ) ⊢ 0'(= {| l |} )
; .mov_ptn 2'(= {| l |} ) ⊢ 0'(= {| l |} )
	mov rax,r8
	mov r13,rax
	ret
LB_347:
;; ?; 0'(= a18◂ [ ] ) ⊢ 1(<2)◂0'(= {| l |} )
;; rsp=0 , %411~0'(= {| l |} ) 
; ∎ 0'(= {| l |} )
; .mov_ptn2 0'(= {| l |} ) ⊢ 0'(= {| l |} )
	ret
ETR_92: ;; pnt_cst_v 0'(= a19◂ [ ] ) ⊢ 0'(= {| l |} ) : (_t19→_s8)
;; rsp=0 , %412~0'(= a19◂ [ ] ) 
;; ? 0'(= a19◂ [ ] ) ⊢ 0(<2)◂1'(= r )
	mov rdi,r13
	cmp BYTE [rdi+6],0
	jnz LB_352
	jmp LB_353
LB_352:
	jmp LB_351
LB_353:
	mov QWORD [GBG_VCT+8*0],rdi
	mov r14,QWORD [rdi+8]
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_LN rdi
;; rsp=0 , %414~1'(= r ) 
; » _^ .. ⊢ ..
; .. //
	mov rdi,0
	sub rsp,128
	push rdi 
	lea rdi,[rsp+8]
	mov rdx,r14
	mov rsi,fmt_d
 xor rax,rax
	C_CALL_SF sprintf
	pop rdi
	add rdi,rax 
	push rax 
	add rdi,1
	push rdi 
	call mlc_s8
	pop rdi
	mov r13,rax
	lea rdi,[rax+7+rdi]
	std 
	mov QWORD [tmp],rcx 
	lea rsi,[LB_354+1-1]
	mov rcx,1
	rep movsb
	pop rcx
	lea rsi,[rsp+rcx-1]
	rep movsb
	add rsp,128
	mov rcx,QWORD [tmp] 
;; rsp=0 , %416~0'(= {| l |} ) %415~1'(= r ) 
; ∎ 0'(= {| l |} )
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0'(= {| l |} ) ⊢ 0'(= {| l |} )
	ret
LB_351:
;; ?. 0'(= a19◂ [ ] ) ⊢ 1(<2)◂0'(= {| l |} )
;; rsp=0 , %413~0'(= {| l |} ) 
; #71 0'(= {| l |} ) ⊢ { 0'(= {| l |} ) 1'(= {| l |} ) }
; .mov_ptn2 0'(= {| l |} ) ⊢ 0'(= {| l |} )
	call ETR_71
;; rsp=0 , %418~1'(= {| l |} ) %417~0'(= {| l |} ) 
; » _^ .. ⊢ ..
; .. //
	mov rdi,0
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[r14]
	add rdi,rax 
	push rax
	add rdi,2
	push rdi 
	call mlc_s8
	pop rdi
	mov r8,rax
	lea rdi,[rax+7+rdi]
	std 
	mov QWORD [tmp],rcx 
	lea rsi,[LB_355+1-1]
	mov rcx,1
	rep movsb
	pop rcx
	lea rsi,[r14+7+rcx]
	rep movsb
	lea rsi,[LB_356+1-1]
	mov rcx,1
	rep movsb
	mov rcx,QWORD [tmp] 
;; rsp=0 , %420~2'(= {| l |} ) %419~1'(= {| l |} ) %417~0'(= {| l |} ) 
; ∎ 2'(= {| l |} )
; .dlt.ptn 1'(= {| l |} )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	mov rdi,r8
	call free_s8
	C_POP_REGS
; .dlt.ptn 0'(= {| l |} )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	mov rdi,r8
	call free_s8
	C_POP_REGS
; .mov_ptn2 2'(= {| l |} ) ⊢ 0'(= {| l |} )
; .mov_ptn 2'(= {| l |} ) ⊢ 0'(= {| l |} )
	mov rax,r8
	mov r13,rax
	ret
ETR_93: ;; pnt_cst 0'(= a20◂ [ a18◂ [ ]] ) ⊢ 0'(= {| l |} ) : (_t20◂_t18→_s8)
;; rsp=0 , %421~0'(= a20◂ [ a18◂ [ ]] ) 
;; ? 0'(= a20◂ [ a18◂ [ ]] ) ⊢ 0(<2)◂1'(= a19◂ [ ] )
	mov rdi,r13
	cmp BYTE [rdi+6],0
	jnz LB_358
	jmp LB_359
LB_358:
	jmp LB_357
LB_359:
	mov QWORD [GBG_VCT+8*0],rdi
	mov r14,QWORD [rdi+8]
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_LN rdi
;; rsp=0 , %423~1'(= a19◂ [ ] ) 
; #92 1'(= a19◂ [ ] ) ⊢ 0'(= {| l |} )
; .mov_ptn2 1'(= a19◂ [ ] ) ⊢ 0'(= a19◂ [ ] )
; .mov_ptn 1'(= a19◂ [ ] ) ⊢ 0'(= a19◂ [ ] )
	mov rax,r14
	mov r13,rax
	call ETR_92
;; rsp=0 , %424~0'(= {| l |} ) 
; ∎ 0'(= {| l |} )
; .mov_ptn2 0'(= {| l |} ) ⊢ 0'(= {| l |} )
	ret
LB_357:
;; ?. 0'(= a20◂ [ a18◂ [ ]] ) ⊢ 1(<2)◂1'(= a18◂ [ ] )
	mov QWORD [GBG_VCT+8*0],rdi
	mov r14,QWORD [rdi+8]
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_LN rdi
;; rsp=0 , %422~1'(= a18◂ [ ] ) 
; #87 1'(= a18◂ [ ] ) ⊢ 0'(= {| l |} )
; .mov_ptn2 1'(= a18◂ [ ] ) ⊢ 0'(= a18◂ [ ] )
; .mov_ptn 1'(= a18◂ [ ] ) ⊢ 0'(= a18◂ [ ] )
	mov rax,r14
	mov r13,rax
	call ETR_87
;; rsp=0 , %425~0'(= {| l |} ) 
; ∎ 0'(= {| l |} )
; .mov_ptn2 0'(= {| l |} ) ⊢ 0'(= {| l |} )
	ret
LB_382:
	movzx rax,BYTE [r8+6]
	jmp QWORD [LB_385+8*rax]
LB_385: dq LB_383,LB_384
LB_383:
	mov rdi,r8
	call free_s8
	jmp LB_386
LB_384:
	jmp LB_386
LB_386:
	ret
ETR_102: ;; pnt_src_ptn 0'(= a17◂ [ a21◂ [ a18◂ [ ]{| l |}]] ) ⊢ 0'(= {| l |} ) : (_t17◂_t21◂_s8◂_t18→_s8)
;; rsp=0 , %426~0'(= a17◂ [ a21◂ [ a18◂ [ ]{| l |}]] ) 
;; ?; 0'(= a17◂ [ a21◂ [ a18◂ [ ]{| l |}]] ) ⊢ 0(<2)◂1'(= a2◂ [ a17◂ [ a21◂ [ a18◂ [ ]{| l |}]]] )
	mov rdi,r13
	cmp BYTE [rdi+6],0
	jnz LB_361
	jmp LB_362
LB_361:
	jmp LB_360
LB_362:
	mov QWORD [GBG_VCT+8*0],rdi
	mov r14,QWORD [rdi+8]
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_LN rdi
;; rsp=0 , %427~1'(= a2◂ [ a17◂ [ a21◂ [ a18◂ [ ]{| l |}]]] ) 
; #103 1'(= a2◂ [ a17◂ [ a21◂ [ a18◂ [ ]{| l |}]]] ) ⊢ 0'(= {| l |} )
; .mov_ptn2 1'(= a2◂ [ a17◂ [ a21◂ [ a18◂ [ ]{| l |}]]] ) ⊢ 0'(= a2◂ [ a17◂ [ a21◂ [ a18◂ [ ]{| l |}]]] )
; .mov_ptn 1'(= a2◂ [ a17◂ [ a21◂ [ a18◂ [ ]{| l |}]]] ) ⊢ 0'(= a2◂ [ a17◂ [ a21◂ [ a18◂ [ ]{| l |}]]] )
	mov rax,r14
	mov r13,rax
	call ETR_103
;; rsp=0 , %428~0'(= {| l |} ) 
; » _^ .. ⊢ ..
; .. //
	mov rdi,0
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[r13]
	add rdi,rax 
	push rax
	add rdi,3
	push rdi 
	call mlc_s8
	pop rdi
	mov r14,rax
	lea rdi,[rax+7+rdi]
	std 
	mov QWORD [tmp],rcx 
	lea rsi,[LB_363+1-1]
	mov rcx,1
	rep movsb
	pop rcx
	lea rsi,[r13+7+rcx]
	rep movsb
	lea rsi,[LB_364+2-1]
	mov rcx,2
	rep movsb
	mov rcx,QWORD [tmp] 
;; rsp=0 , %430~1'(= {| l |} ) %429~0'(= {| l |} ) 
; ∎ 1'(= {| l |} )
; .dlt.ptn 0'(= {| l |} )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	mov rdi,r8
	call free_s8
	C_POP_REGS
; .mov_ptn2 1'(= {| l |} ) ⊢ 0'(= {| l |} )
; .mov_ptn 1'(= {| l |} ) ⊢ 0'(= {| l |} )
	mov rax,r14
	mov r13,rax
	ret
LB_360:
;; ?; 0'(= a17◂ [ a21◂ [ a18◂ [ ]{| l |}]] ) ⊢ 1(<2)◂1'(= a21◂ [ a18◂ [ ]{| l |}] )
	mov QWORD [GBG_VCT+8*0],rdi
	mov r14,QWORD [rdi+8]
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_LN rdi
;; rsp=0 , %431~1'(= a21◂ [ a18◂ [ ]{| l |}] ) 
;; ?; 1'(= a21◂ [ a18◂ [ ]{| l |}] ) ⊢ 0(<2)◂0'(= a20◂ [ a18◂ [ ]] )
	mov rdi,r14
	cmp BYTE [rdi+6],0
	jnz LB_366
	jmp LB_367
LB_366:
	jmp LB_365
LB_367:
	mov QWORD [GBG_VCT+8*0],rdi
	mov r13,QWORD [rdi+8]
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_LN rdi
;; rsp=0 , %432~0'(= a20◂ [ a18◂ [ ]] ) 
; #93 0'(= a20◂ [ a18◂ [ ]] ) ⊢ 0'(= {| l |} )
; .mov_ptn2 0'(= a20◂ [ a18◂ [ ]] ) ⊢ 0'(= a20◂ [ a18◂ [ ]] )
	call ETR_93
;; rsp=0 , %433~0'(= {| l |} ) 
; » _^ .. ⊢ ..
; .. //
	mov rdi,0
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[r13]
	add rdi,rax 
	push rax
	add rdi,6
	push rdi 
	call mlc_s8
	pop rdi
	mov r14,rax
	lea rdi,[rax+7+rdi]
	std 
	mov QWORD [tmp],rcx 
	lea rsi,[LB_368+3-1]
	mov rcx,3
	rep movsb
	pop rcx
	lea rsi,[r13+7+rcx]
	rep movsb
	lea rsi,[LB_369+3-1]
	mov rcx,3
	rep movsb
	mov rcx,QWORD [tmp] 
;; rsp=0 , %435~1'(= {| l |} ) %434~0'(= {| l |} ) 
; ∎ 1'(= {| l |} )
; .dlt.ptn 0'(= {| l |} )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	mov rdi,r8
	call free_s8
	C_POP_REGS
; .mov_ptn2 1'(= {| l |} ) ⊢ 0'(= {| l |} )
; .mov_ptn 1'(= {| l |} ) ⊢ 0'(= {| l |} )
	mov rax,r14
	mov r13,rax
	ret
LB_365:
;; ?; 1'(= a21◂ [ a18◂ [ ]{| l |}] ) ⊢ 1(<2)◂1'(= {| l |} )
;; rsp=0 , %436~1'(= {| l |} ) 
; ∎ 1'(= {| l |} )
; .mov_ptn2 1'(= {| l |} ) ⊢ 0'(= {| l |} )
; .mov_ptn 1'(= {| l |} ) ⊢ 0'(= {| l |} )
	mov rax,r14
	mov r13,rax
	ret
ETR_103: ;; pnt_src_ptn_lst 0'(= a2◂ [ a17◂ [ a21◂ [ a18◂ [ ]{| l |}]]] ) ⊢ 0'(= {| l |} ) : (_lst◂_t17◂_t21◂_s8◂_t18→_s8)
;; rsp=0 , %437~0'(= a2◂ [ a17◂ [ a21◂ [ a18◂ [ ]{| l |}]]] ) 
;; ?; 0'(= a2◂ [ a17◂ [ a21◂ [ a18◂ [ ]{| l |}]]] ) ⊢ 0(<2)◂{ 1'(= a17◂ [ a21◂ [ a18◂ [ ]{| l |}]] ) 2'(= a2◂ [ a17◂ [ a21◂ [ a18◂ [ ]{| l |}]]] ) }
	mov rdi,r13
	cmp BYTE [rdi+6],0
	jnz LB_371
	jmp LB_372
LB_371:
	jmp LB_370
LB_372:
	mov r14, QWORD [r13+8]
	mov r8, QWORD [r13+16]
	mov QWORD [GBG_VCT+8*0],r13
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_RCD 2,rdi
;; rsp=0 , %439~2'(= a2◂ [ a17◂ [ a21◂ [ a18◂ [ ]{| l |}]]] ) %438~1'(= a17◂ [ a21◂ [ a18◂ [ ]{| l |}]] ) 
; #102 1'(= a17◂ [ a21◂ [ a18◂ [ ]{| l |}]] ) ⊢ 0'(= {| l |} )
	sub rsp,8
	mov QWORD [rsp+8*0],r8
; .mov_ptn2 1'(= a17◂ [ a21◂ [ a18◂ [ ]{| l |}]] ) ⊢ 0'(= a17◂ [ a21◂ [ a18◂ [ ]{| l |}]] )
; .mov_ptn 1'(= a17◂ [ a21◂ [ a18◂ [ ]{| l |}]] ) ⊢ 0'(= a17◂ [ a21◂ [ a18◂ [ ]{| l |}]] )
	mov rax,r14
	mov r13,rax
	call ETR_102
	mov r8,QWORD [rsp-8+8*1]
	add rsp,8
;; rsp=0 , %440~0'(= {| l |} ) %439~2'(= a2◂ [ a17◂ [ a21◂ [ a18◂ [ ]{| l |}]]] ) 
; #103 2'(= a2◂ [ a17◂ [ a21◂ [ a18◂ [ ]{| l |}]]] ) ⊢ 1'(= {| l |} )
	sub rsp,8
	mov QWORD [rsp+8*0],r13
; .mov_ptn2 2'(= a2◂ [ a17◂ [ a21◂ [ a18◂ [ ]{| l |}]]] ) ⊢ 0'(= a2◂ [ a17◂ [ a21◂ [ a18◂ [ ]{| l |}]]] )
; .mov_ptn 2'(= a2◂ [ a17◂ [ a21◂ [ a18◂ [ ]{| l |}]]] ) ⊢ 0'(= a2◂ [ a17◂ [ a21◂ [ a18◂ [ ]{| l |}]]] )
	mov rax,r8
	mov r13,rax
	call ETR_103
	mov r14,r13
	mov r13,QWORD [rsp-8+8*1]
	add rsp,8
;; rsp=0 , %441~1'(= {| l |} ) %440~0'(= {| l |} ) 
; » _^ .. ⊢ ..
; .. //
	mov rdi,0
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[r13]
	add rdi,rax 
	push rax
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[r14]
	add rdi,rax 
	push rax
	add rdi,1
	push rdi 
	call mlc_s8
	pop rdi
	mov r8,rax
	lea rdi,[rax+7+rdi]
	std 
	mov QWORD [tmp],rcx 
	pop rcx
	lea rsi,[r14+7+rcx]
	rep movsb
	lea rsi,[LB_373+1-1]
	mov rcx,1
	rep movsb
	pop rcx
	lea rsi,[r13+7+rcx]
	rep movsb
	mov rcx,QWORD [tmp] 
;; rsp=0 , %444~2'(= {| l |} ) %443~1'(= {| l |} ) %442~0'(= {| l |} ) 
; ∎ 2'(= {| l |} )
; .dlt.ptn 1'(= {| l |} )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	mov rdi,r8
	call free_s8
	C_POP_REGS
; .dlt.ptn 0'(= {| l |} )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	mov rdi,r8
	call free_s8
	C_POP_REGS
; .mov_ptn2 2'(= {| l |} ) ⊢ 0'(= {| l |} )
; .mov_ptn 2'(= {| l |} ) ⊢ 0'(= {| l |} )
	mov rax,r8
	mov r13,rax
	ret
LB_370:
;; ?; 0'(= a2◂ [ a17◂ [ a21◂ [ a18◂ [ ]{| l |}]]] ) ⊢ 1(<2)◂{ }
;; rsp=0 , 
; $ %[ "" ] ⊢ %[ "" ]
;; rsp=0 , %445~%[ "" ] 
; ∎ %[ "" ]
; .mov_ptn2 %[ "" ] ⊢ 0'(= {| l |} )
; .mov_ptn %[ "" ] ⊢ 0'(= {| l |} )
	mov rsi,1  
	mov rdi,16
	xor rax,rax 
	C_CALL_SF calloc
	mov QWORD [rax],0
	mov r13,rax
	ret
ETR_104: ;; pnt_dst_ptn 0'(= a17◂ [ a22◂ [ {| l |}]] ) ⊢ 0'(= {| l |} ) : (_t17◂_t22◂_s8→_s8)
;; rsp=0 , %446~0'(= a17◂ [ a22◂ [ {| l |}]] ) 
;; ?; 0'(= a17◂ [ a22◂ [ {| l |}]] ) ⊢ 0(<2)◂1'(= a2◂ [ a17◂ [ a22◂ [ {| l |}]]] )
	mov rdi,r13
	cmp BYTE [rdi+6],0
	jnz LB_375
	jmp LB_376
LB_375:
	jmp LB_374
LB_376:
	mov QWORD [GBG_VCT+8*0],rdi
	mov r14,QWORD [rdi+8]
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_LN rdi
;; rsp=0 , %447~1'(= a2◂ [ a17◂ [ a22◂ [ {| l |}]]] ) 
; #105 1'(= a2◂ [ a17◂ [ a22◂ [ {| l |}]]] ) ⊢ 0'(= {| l |} )
; .mov_ptn2 1'(= a2◂ [ a17◂ [ a22◂ [ {| l |}]]] ) ⊢ 0'(= a2◂ [ a17◂ [ a22◂ [ {| l |}]]] )
; .mov_ptn 1'(= a2◂ [ a17◂ [ a22◂ [ {| l |}]]] ) ⊢ 0'(= a2◂ [ a17◂ [ a22◂ [ {| l |}]]] )
	mov rax,r14
	mov r13,rax
	call ETR_105
;; rsp=0 , %448~0'(= {| l |} ) 
; » _^ .. ⊢ ..
; .. //
	mov rdi,0
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[r13]
	add rdi,rax 
	push rax
	add rdi,3
	push rdi 
	call mlc_s8
	pop rdi
	mov r14,rax
	lea rdi,[rax+7+rdi]
	std 
	mov QWORD [tmp],rcx 
	lea rsi,[LB_377+1-1]
	mov rcx,1
	rep movsb
	pop rcx
	lea rsi,[r13+7+rcx]
	rep movsb
	lea rsi,[LB_378+2-1]
	mov rcx,2
	rep movsb
	mov rcx,QWORD [tmp] 
;; rsp=0 , %450~1'(= {| l |} ) %449~0'(= {| l |} ) 
; ∎ 1'(= {| l |} )
; .dlt.ptn 0'(= {| l |} )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	mov rdi,r8
	call free_s8
	C_POP_REGS
; .mov_ptn2 1'(= {| l |} ) ⊢ 0'(= {| l |} )
; .mov_ptn 1'(= {| l |} ) ⊢ 0'(= {| l |} )
	mov rax,r14
	mov r13,rax
	ret
LB_374:
;; ?; 0'(= a17◂ [ a22◂ [ {| l |}]] ) ⊢ 1(<2)◂1'(= a22◂ [ {| l |}] )
	mov QWORD [GBG_VCT+8*0],rdi
	mov r14,QWORD [rdi+8]
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_LN rdi
;; rsp=0 , %451~1'(= a22◂ [ {| l |}] ) 
;; ?; 1'(= a22◂ [ {| l |}] ) ⊢ 0(<2)◂0'(= a3◂ [ {| l |}] )
	mov rdi,r14
	cmp BYTE [rdi+6],0
	jnz LB_380
	jmp LB_381
LB_380:
	jmp LB_379
LB_381:
	mov QWORD [GBG_VCT+8*0],rdi
	mov r13,QWORD [rdi+8]
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_LN rdi
;; rsp=0 , %452~0'(= a3◂ [ {| l |}] ) 
; $ %[ "_ " ] ⊢ %[ "_ " ]
;; rsp=0 , %453~%[ "_ " ] %452~0'(= a3◂ [ {| l |}] ) 
; ∎ %[ "_ " ]
; .dlt.ptn 0'(= a3◂ [ {| l |}] )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	call LB_382
	C_POP_REGS
; .mov_ptn2 %[ "_ " ] ⊢ 0'(= {| l |} )
; .mov_ptn %[ "_ " ] ⊢ 0'(= {| l |} )
	mov rsi,1  
	mov rdi,16
	xor rax,rax 
	C_CALL_SF calloc
	mov QWORD [rax],2
	mov BYTE [rax+8+0],95
	mov BYTE [rax+8+1],32
	mov r13,rax
	ret
LB_379:
;; ?; 1'(= a22◂ [ {| l |}] ) ⊢ 1(<2)◂1'(= {| l |} )
;; rsp=0 , %454~1'(= {| l |} ) 
; ∎ 1'(= {| l |} )
; .mov_ptn2 1'(= {| l |} ) ⊢ 0'(= {| l |} )
; .mov_ptn 1'(= {| l |} ) ⊢ 0'(= {| l |} )
	mov rax,r14
	mov r13,rax
	ret
ETR_105: ;; pnt_dst_ptn_lst 0'(= a2◂ [ a17◂ [ a22◂ [ {| l |}]]] ) ⊢ 0'(= {| l |} ) : (_lst◂_t17◂_t22◂_s8→_s8)
;; rsp=0 , %455~0'(= a2◂ [ a17◂ [ a22◂ [ {| l |}]]] ) 
;; ?; 0'(= a2◂ [ a17◂ [ a22◂ [ {| l |}]]] ) ⊢ 0(<2)◂{ 1'(= a17◂ [ a22◂ [ {| l |}]] ) 2'(= a2◂ [ a17◂ [ a22◂ [ {| l |}]]] ) }
	mov rdi,r13
	cmp BYTE [rdi+6],0
	jnz LB_388
	jmp LB_389
LB_388:
	jmp LB_387
LB_389:
	mov r14, QWORD [r13+8]
	mov r8, QWORD [r13+16]
	mov QWORD [GBG_VCT+8*0],r13
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_RCD 2,rdi
;; rsp=0 , %457~2'(= a2◂ [ a17◂ [ a22◂ [ {| l |}]]] ) %456~1'(= a17◂ [ a22◂ [ {| l |}]] ) 
; #104 1'(= a17◂ [ a22◂ [ {| l |}]] ) ⊢ 0'(= {| l |} )
	sub rsp,8
	mov QWORD [rsp+8*0],r8
; .mov_ptn2 1'(= a17◂ [ a22◂ [ {| l |}]] ) ⊢ 0'(= a17◂ [ a22◂ [ {| l |}]] )
; .mov_ptn 1'(= a17◂ [ a22◂ [ {| l |}]] ) ⊢ 0'(= a17◂ [ a22◂ [ {| l |}]] )
	mov rax,r14
	mov r13,rax
	call ETR_104
	mov r8,QWORD [rsp-8+8*1]
	add rsp,8
;; rsp=0 , %458~0'(= {| l |} ) %457~2'(= a2◂ [ a17◂ [ a22◂ [ {| l |}]]] ) 
; #105 2'(= a2◂ [ a17◂ [ a22◂ [ {| l |}]]] ) ⊢ 1'(= {| l |} )
	sub rsp,8
	mov QWORD [rsp+8*0],r13
; .mov_ptn2 2'(= a2◂ [ a17◂ [ a22◂ [ {| l |}]]] ) ⊢ 0'(= a2◂ [ a17◂ [ a22◂ [ {| l |}]]] )
; .mov_ptn 2'(= a2◂ [ a17◂ [ a22◂ [ {| l |}]]] ) ⊢ 0'(= a2◂ [ a17◂ [ a22◂ [ {| l |}]]] )
	mov rax,r8
	mov r13,rax
	call ETR_105
	mov r14,r13
	mov r13,QWORD [rsp-8+8*1]
	add rsp,8
;; rsp=0 , %459~1'(= {| l |} ) %458~0'(= {| l |} ) 
; » _^ .. ⊢ ..
; .. //
	mov rdi,0
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[r13]
	add rdi,rax 
	push rax
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[r14]
	add rdi,rax 
	push rax
	add rdi,1
	push rdi 
	call mlc_s8
	pop rdi
	mov r8,rax
	lea rdi,[rax+7+rdi]
	std 
	mov QWORD [tmp],rcx 
	pop rcx
	lea rsi,[r14+7+rcx]
	rep movsb
	lea rsi,[LB_390+1-1]
	mov rcx,1
	rep movsb
	pop rcx
	lea rsi,[r13+7+rcx]
	rep movsb
	mov rcx,QWORD [tmp] 
;; rsp=0 , %462~2'(= {| l |} ) %461~1'(= {| l |} ) %460~0'(= {| l |} ) 
; ∎ 2'(= {| l |} )
; .dlt.ptn 1'(= {| l |} )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	mov rdi,r8
	call free_s8
	C_POP_REGS
; .dlt.ptn 0'(= {| l |} )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	mov rdi,r8
	call free_s8
	C_POP_REGS
; .mov_ptn2 2'(= {| l |} ) ⊢ 0'(= {| l |} )
; .mov_ptn 2'(= {| l |} ) ⊢ 0'(= {| l |} )
	mov rax,r8
	mov r13,rax
	ret
LB_387:
;; ?; 0'(= a2◂ [ a17◂ [ a22◂ [ {| l |}]]] ) ⊢ 1(<2)◂{ }
;; rsp=0 , 
; $ %[ "" ] ⊢ %[ "" ]
;; rsp=0 , %463~%[ "" ] 
; ∎ %[ "" ]
; .mov_ptn2 %[ "" ] ⊢ 0'(= {| l |} )
; .mov_ptn %[ "" ] ⊢ 0'(= {| l |} )
	mov rsi,1  
	mov rdi,16
	xor rax,rax 
	C_CALL_SF calloc
	mov QWORD [rax],0
	mov r13,rax
	ret
LB_394:
	movzx rax,BYTE [r8+6]
	jmp QWORD [LB_397+8*rax]
LB_397: dq LB_395,LB_396
LB_395:
	ALC_RCD 2,r9
	push r8
	push r9
	mov r8,QWORD [r8+8+8*0]
	call LB_399
	pop r9  
	pop r8 
	mov QWORD [r9+8+8*0],rax
	push r8
	push r9
	mov r8,QWORD [r8+8+8*1]
	call LB_394
	pop r9  
	pop r8 
	mov QWORD [r9+8+8*1],rax
	mov rax,r9 
	mov BYTE [rax+6],0
	jmp LB_398
LB_396:
	mov rax,unt
	mov BYTE [rax+6],1
	jmp LB_398
LB_398:
	ret
LB_399:
	movzx rax,BYTE [r8+6]
	jmp QWORD [LB_402+8*rax]
LB_402: dq LB_400,LB_401
LB_400:
	mov r8,QWORD [r8+8]
	call LB_394
	ALC_LN rsi 
	mov BYTE [rsi+6],0
	mov QWORD [rsi+8],rax
	mov rax,rsi
	jmp LB_403
LB_401:
	mov r8,QWORD [r8+8]
	call LB_404
	ALC_LN rsi 
	mov BYTE [rsi+6],1
	mov QWORD [rsi+8],rax
	mov rax,rsi
	jmp LB_403
LB_403:
	ret
LB_404:
	movzx rax,BYTE [r8+6]
	jmp QWORD [LB_409+8*rax]
LB_409: dq LB_405,LB_406,LB_407,LB_408
LB_405:
	ALC_RCD 2,r9
	push r8
	push r9
	mov r8,QWORD [r8+8+8*0]
	call LB_411
	pop r9  
	pop r8 
	mov QWORD [r9+8+8*0],rax
	push r8
	push r9
	mov r8,QWORD [r8+8+8*1]
	call LB_399
	pop r9  
	pop r8 
	mov QWORD [r9+8+8*1],rax
	mov rax,r9 
	mov BYTE [rax+6],0
	jmp LB_410
LB_406:
	mov r8,QWORD [r8+8]
	call LB_412
	ALC_LN rsi 
	mov BYTE [rsi+6],1
	mov QWORD [rsi+8],rax
	mov rax,rsi
	jmp LB_410
LB_407:
	mov r8,QWORD [r8+8]
	call LB_413
	ALC_LN rsi 
	mov BYTE [rsi+6],2
	mov QWORD [rsi+8],rax
	mov rax,rsi
	jmp LB_410
LB_408:
	C_PUSH_REGS
	mov rdi,r8  
	call rpc_s8  
	C_POP_REGS
	mov BYTE [rax+6],3
	jmp LB_410
LB_410:
	ret
LB_413:
	movzx rax,BYTE [r8+6]
	jmp QWORD [LB_416+8*rax]
LB_416: dq LB_414,LB_415
LB_414:
	C_PUSH_REGS
	mov rdi,r8  
	call rpc_s8  
	C_POP_REGS
	mov BYTE [rax+6],0
	jmp LB_417
LB_415:
	mov rax,unt
	mov BYTE [rax+6],1
	jmp LB_417
LB_417:
	ret
LB_412:
	movzx rax,BYTE [r8+6]
	jmp QWORD [LB_420+8*rax]
LB_420: dq LB_418,LB_419
LB_418:
	mov r8,QWORD [r8+8]
	call LB_422
	ALC_LN rsi 
	mov BYTE [rsi+6],0
	mov QWORD [rsi+8],rax
	mov rax,rsi
	jmp LB_421
LB_419:
	mov r8,QWORD [r8+8]
	call LB_411
	ALC_LN rsi 
	mov BYTE [rsi+6],1
	mov QWORD [rsi+8],rax
	mov rax,rsi
	jmp LB_421
LB_421:
	ret
LB_422:
	movzx rax,BYTE [r8+6]
	jmp QWORD [LB_425+8*rax]
LB_425: dq LB_423,LB_424
LB_423:
	mov r8,QWORD [r8+8]
	mov rax,r8
	ALC_LN rsi 
	mov BYTE [rsi+6],0
	mov QWORD [rsi+8],rax
	mov rax,rsi
	jmp LB_426
LB_424:
	C_PUSH_REGS
	mov rdi,r8  
	call rpc_s8  
	C_POP_REGS
	mov BYTE [rax+6],1
	jmp LB_426
LB_426:
	ret
LB_411:
	movzx rax,BYTE [r8+6]
	jmp QWORD [LB_429+8*rax]
LB_429: dq LB_427,LB_428
LB_427:
	ALC_RCD 2,r9
	push r8
	push r9
	mov r8,QWORD [r8+8+8*0]
	C_PUSH_REGS
	mov rdi,r8  
	call rpc_s8  
	C_POP_REGS
	pop r9  
	pop r8 
	mov QWORD [r9+8+8*0],rax
	push r8
	push r9
	mov r8,QWORD [r8+8+8*1]
	call LB_411
	pop r9  
	pop r8 
	mov QWORD [r9+8+8*1],rax
	mov rax,r9 
	mov BYTE [rax+6],0
	jmp LB_430
LB_428:
	C_PUSH_REGS
	mov rdi,r8  
	call rpc_s8  
	C_POP_REGS
	mov BYTE [rax+6],1
	jmp LB_430
LB_430:
	ret
LB_433:
	movzx rax,BYTE [r8+6]
	jmp QWORD [LB_436+8*rax]
LB_436: dq LB_434,LB_435
LB_434:
	push r8
	mov r8,QWORD [r8+8+8*0]
	call LB_438
	pop r8 
	push r8
	mov r8,QWORD [r8+8+8*1]
	call LB_433
	pop r8 
	FREE_RCD 2, r8
	jmp LB_437
LB_435:
	jmp LB_437
LB_437:
	ret
LB_438:
	movzx rax,BYTE [r8+6]
	jmp QWORD [LB_441+8*rax]
LB_441: dq LB_439,LB_440
LB_439:
	FREE_LN r8 
	mov r8,QWORD [r8+8]
	call LB_433
	jmp LB_442
LB_440:
	FREE_LN r8 
	mov r8,QWORD [r8+8]
	call LB_443
	jmp LB_442
LB_442:
	ret
LB_443:
	movzx rax,BYTE [r8+6]
	jmp QWORD [LB_448+8*rax]
LB_448: dq LB_444,LB_445,LB_446,LB_447
LB_444:
	push r8
	mov r8,QWORD [r8+8+8*0]
	call LB_450
	pop r8 
	push r8
	mov r8,QWORD [r8+8+8*1]
	call LB_438
	pop r8 
	FREE_RCD 2, r8
	jmp LB_449
LB_445:
	FREE_LN r8 
	mov r8,QWORD [r8+8]
	call LB_451
	jmp LB_449
LB_446:
	FREE_LN r8 
	mov r8,QWORD [r8+8]
	call LB_382
	jmp LB_449
LB_447:
	mov rdi,r8
	call free_s8
	jmp LB_449
LB_449:
	ret
LB_451:
	movzx rax,BYTE [r8+6]
	jmp QWORD [LB_454+8*rax]
LB_454: dq LB_452,LB_453
LB_452:
	FREE_LN r8 
	mov r8,QWORD [r8+8]
	call LB_456
	jmp LB_455
LB_453:
	FREE_LN r8 
	mov r8,QWORD [r8+8]
	call LB_450
	jmp LB_455
LB_455:
	ret
LB_456:
	movzx rax,BYTE [r8+6]
	jmp QWORD [LB_459+8*rax]
LB_459: dq LB_457,LB_458
LB_457:
	FREE_LN r8 
	mov r8,QWORD [r8+8]
	jmp LB_460
LB_458:
	mov rdi,r8
	call free_s8
	jmp LB_460
LB_460:
	ret
LB_450:
	movzx rax,BYTE [r8+6]
	jmp QWORD [LB_463+8*rax]
LB_463: dq LB_461,LB_462
LB_461:
	push r8
	mov r8,QWORD [r8+8+8*0]
	mov rdi,r8
	call free_s8
	pop r8 
	push r8
	mov r8,QWORD [r8+8+8*1]
	call LB_450
	pop r8 
	FREE_RCD 2, r8
	jmp LB_464
LB_462:
	mov rdi,r8
	call free_s8
	jmp LB_464
LB_464:
	ret
ETR_106: ;; pnt_mtc_ptn 0'(= a17◂ [ a23◂ [ a18◂ [ ]{| l |}]] ) ⊢ 0'(= {| l |} ) : (_t17◂_t23◂_s8◂_t18→_s8)
;; rsp=0 , %464~0'(= a17◂ [ a23◂ [ a18◂ [ ]{| l |}]] ) 
;; ? 0'(= a17◂ [ a23◂ [ a18◂ [ ]{| l |}]] ) ⊢ 0(<2)◂1'(= a2◂ [ a17◂ [ a23◂ [ a18◂ [ ]{| l |}]]] )
	mov rdi,r13
	cmp BYTE [rdi+6],0
	jnz LB_392
	jmp LB_393
LB_392:
	jmp LB_391
LB_393:
	mov QWORD [GBG_VCT+8*0],rdi
	mov r14,QWORD [rdi+8]
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_LN rdi
;; rsp=0 , %466~1'(= a2◂ [ a17◂ [ a23◂ [ a18◂ [ ]{| l |}]]] ) 
; $ 1'(= a2◂ [ a17◂ [ a23◂ [ a18◂ [ ]{| l |}]]] ) ⊢ 1'(= a2◂ [ a17◂ [ a23◂ [ a18◂ [ ]{| l |}]]] ),0'(= a2◂ [ a17◂ [ a23◂ [ a18◂ [ ]{| l |}]]] )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	call LB_394
	C_POP_REGS
	mov r13,rax
;; rsp=0 , %468~0'(= a2◂ [ a17◂ [ a23◂ [ a18◂ [ ]{| l |}]]] ) %467~1'(= a2◂ [ a17◂ [ a23◂ [ a18◂ [ ]{| l |}]]] ) 
; #84 0'(= a2◂ [ a17◂ [ a23◂ [ a18◂ [ ]{| l |}]]] ) ⊢ 0(<2)◂0'(= a2◂ [ a17◂ [ a23◂ [ a18◂ [ ]{| l |}]]] )
;; rsp=0 , %469~0(<2)◂0'(= a2◂ [ a17◂ [ a23◂ [ a18◂ [ ]{| l |}]]] ) %467~1'(= a2◂ [ a17◂ [ a23◂ [ a18◂ [ ]{| l |}]]] ) 
; #107 1'(= a2◂ [ a17◂ [ a23◂ [ a18◂ [ ]{| l |}]]] ) ⊢ 1'(= {| l |} )
	sub rsp,8
	mov QWORD [rsp+8*0],r13
; .mov_ptn2 1'(= a2◂ [ a17◂ [ a23◂ [ a18◂ [ ]{| l |}]]] ) ⊢ 0'(= a2◂ [ a17◂ [ a23◂ [ a18◂ [ ]{| l |}]]] )
; .mov_ptn 1'(= a2◂ [ a17◂ [ a23◂ [ a18◂ [ ]{| l |}]]] ) ⊢ 0'(= a2◂ [ a17◂ [ a23◂ [ a18◂ [ ]{| l |}]]] )
	mov rax,r14
	mov r13,rax
	call ETR_107
	mov r14,r13
	mov r13,QWORD [rsp-8+8*1]
	add rsp,8
;; rsp=0 , %470~1'(= {| l |} ) %469~0(<2)◂0'(= a2◂ [ a17◂ [ a23◂ [ a18◂ [ ]{| l |}]]] ) 
; » _^ .. ⊢ ..
; .. //
	mov rdi,0
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[r14]
	add rdi,rax 
	push rax
	add rdi,3
	push rdi 
	call mlc_s8
	pop rdi
	mov r8,rax
	lea rdi,[rax+7+rdi]
	std 
	mov QWORD [tmp],rcx 
	lea rsi,[LB_431+1-1]
	mov rcx,1
	rep movsb
	pop rcx
	lea rsi,[r14+7+rcx]
	rep movsb
	lea rsi,[LB_432+2-1]
	mov rcx,2
	rep movsb
	mov rcx,QWORD [tmp] 
;; rsp=0 , %472~2'(= {| l |} ) %471~1'(= {| l |} ) %469~0(<2)◂0'(= a2◂ [ a17◂ [ a23◂ [ a18◂ [ ]{| l |}]]] ) 
; ∎ 2'(= {| l |} )
; .dlt.ptn 1'(= {| l |} )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	mov rdi,r8
	call free_s8
	C_POP_REGS
; .dlt.ptn 0(<2)◂0'(= a2◂ [ a17◂ [ a23◂ [ a18◂ [ ]{| l |}]]] )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	call LB_433
	C_POP_REGS
; .mov_ptn2 2'(= {| l |} ) ⊢ 0'(= {| l |} )
; .mov_ptn 2'(= {| l |} ) ⊢ 0'(= {| l |} )
	mov rax,r8
	mov r13,rax
	ret
LB_391:
;; ?. 0'(= a17◂ [ a23◂ [ a18◂ [ ]{| l |}]] ) ⊢ 1(<2)◂1'(= a23◂ [ a18◂ [ ]{| l |}] )
	mov QWORD [GBG_VCT+8*0],rdi
	mov r14,QWORD [rdi+8]
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_LN rdi
;; rsp=0 , %465~1'(= a23◂ [ a18◂ [ ]{| l |}] ) 
;; ? 1'(= a23◂ [ a18◂ [ ]{| l |}] ) ⊢ 1(<4)◂0'(= a20◂ [ a18◂ [ ]] )
	mov rdi,r14
	cmp BYTE [rdi+6],1
	jnz LB_466
	jmp LB_467
LB_466:
	jmp LB_465
LB_467:
	mov QWORD [GBG_VCT+8*0],rdi
	mov r13,QWORD [rdi+8]
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_LN rdi
;; rsp=0 , %477~0'(= a20◂ [ a18◂ [ ]] ) 
; #93 0'(= a20◂ [ a18◂ [ ]] ) ⊢ 0'(= {| l |} )
; .mov_ptn2 0'(= a20◂ [ a18◂ [ ]] ) ⊢ 0'(= a20◂ [ a18◂ [ ]] )
	call ETR_93
;; rsp=0 , %478~0'(= {| l |} ) 
; » _^ .. ⊢ ..
; .. //
	mov rdi,0
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[r13]
	add rdi,rax 
	push rax
	add rdi,6
	push rdi 
	call mlc_s8
	pop rdi
	mov r14,rax
	lea rdi,[rax+7+rdi]
	std 
	mov QWORD [tmp],rcx 
	lea rsi,[LB_468+3-1]
	mov rcx,3
	rep movsb
	pop rcx
	lea rsi,[r13+7+rcx]
	rep movsb
	lea rsi,[LB_469+3-1]
	mov rcx,3
	rep movsb
	mov rcx,QWORD [tmp] 
;; rsp=0 , %480~1'(= {| l |} ) %479~0'(= {| l |} ) 
; ∎ 1'(= {| l |} )
; .dlt.ptn 0'(= {| l |} )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	mov rdi,r8
	call free_s8
	C_POP_REGS
; .mov_ptn2 1'(= {| l |} ) ⊢ 0'(= {| l |} )
; .mov_ptn 1'(= {| l |} ) ⊢ 0'(= {| l |} )
	mov rax,r14
	mov r13,rax
	ret
LB_465:
;; ? 1'(= a23◂ [ a18◂ [ ]{| l |}] ) ⊢ 0(<4)◂{ 0'(= a18◂ [ ] ) 2'(= a17◂ [ a23◂ [ a18◂ [ ]{| l |}]] ) }
	mov rdi,r14
	cmp BYTE [rdi+6],0
	jnz LB_471
	jmp LB_472
LB_471:
	jmp LB_470
LB_472:
	mov r13, QWORD [r14+8]
	mov r8, QWORD [r14+16]
	mov QWORD [GBG_VCT+8*0],r14
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_RCD 2,rdi
;; rsp=0 , %476~2'(= a17◂ [ a23◂ [ a18◂ [ ]{| l |}]] ) %475~0'(= a18◂ [ ] ) 
; #106 2'(= a17◂ [ a23◂ [ a18◂ [ ]{| l |}]] ) ⊢ 1'(= {| l |} )
	sub rsp,8
	mov QWORD [rsp+8*0],r13
; .mov_ptn2 2'(= a17◂ [ a23◂ [ a18◂ [ ]{| l |}]] ) ⊢ 0'(= a17◂ [ a23◂ [ a18◂ [ ]{| l |}]] )
; .mov_ptn 2'(= a17◂ [ a23◂ [ a18◂ [ ]{| l |}]] ) ⊢ 0'(= a17◂ [ a23◂ [ a18◂ [ ]{| l |}]] )
	mov rax,r8
	mov r13,rax
	call ETR_106
	mov r14,r13
	mov r13,QWORD [rsp-8+8*1]
	add rsp,8
;; rsp=0 , %481~1'(= {| l |} ) %475~0'(= a18◂ [ ] ) 
; #87 0'(= a18◂ [ ] ) ⊢ 0'(= {| l |} )
	sub rsp,8
	mov QWORD [rsp+8*0],r14
; .mov_ptn2 0'(= a18◂ [ ] ) ⊢ 0'(= a18◂ [ ] )
	call ETR_87
	mov r14,QWORD [rsp-8+8*1]
	add rsp,8
;; rsp=0 , %482~0'(= {| l |} ) %481~1'(= {| l |} ) 
; » _^ .. ⊢ ..
; .. //
	mov rdi,0
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[r13]
	add rdi,rax 
	push rax
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[r14]
	add rdi,rax 
	push rax
	add rdi,3
	push rdi 
	call mlc_s8
	pop rdi
	mov r8,rax
	lea rdi,[rax+7+rdi]
	std 
	mov QWORD [tmp],rcx 
	pop rcx
	lea rsi,[r14+7+rcx]
	rep movsb
	lea rsi,[LB_473+3-1]
	mov rcx,3
	rep movsb
	pop rcx
	lea rsi,[r13+7+rcx]
	rep movsb
	mov rcx,QWORD [tmp] 
;; rsp=0 , %485~2'(= {| l |} ) %484~1'(= {| l |} ) %483~0'(= {| l |} ) 
; ∎ 2'(= {| l |} )
; .dlt.ptn 1'(= {| l |} )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	mov rdi,r8
	call free_s8
	C_POP_REGS
; .dlt.ptn 0'(= {| l |} )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	mov rdi,r8
	call free_s8
	C_POP_REGS
; .mov_ptn2 2'(= {| l |} ) ⊢ 0'(= {| l |} )
; .mov_ptn 2'(= {| l |} ) ⊢ 0'(= {| l |} )
	mov rax,r8
	mov r13,rax
	ret
LB_470:
;; ? 1'(= a23◂ [ a18◂ [ ]{| l |}] ) ⊢ 3(<4)◂1'(= {| l |} )
	mov rdi,r14
	cmp BYTE [rdi+6],3
	jnz LB_475
	jmp LB_476
LB_475:
	jmp LB_474
LB_476:
;; rsp=0 , %474~1'(= {| l |} ) 
; » _^ .. ⊢ ..
; .. //
	mov rdi,0
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[r14]
	add rdi,rax 
	push rax
	add rdi,1
	push rdi 
	call mlc_s8
	pop rdi
	mov r13,rax
	lea rdi,[rax+7+rdi]
	std 
	mov QWORD [tmp],rcx 
	pop rcx
	lea rsi,[r14+7+rcx]
	rep movsb
	lea rsi,[LB_477+1-1]
	mov rcx,1
	rep movsb
	mov rcx,QWORD [tmp] 
;; rsp=0 , %487~0'(= {| l |} ) %486~1'(= {| l |} ) 
; ∎ 0'(= {| l |} )
; .dlt.ptn 1'(= {| l |} )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	mov rdi,r8
	call free_s8
	C_POP_REGS
; .mov_ptn2 0'(= {| l |} ) ⊢ 0'(= {| l |} )
	ret
LB_474:
;; ?. 1'(= a23◂ [ a18◂ [ ]{| l |}] ) ⊢ 2(<4)◂0'(= a3◂ [ {| l |}] )
	mov QWORD [GBG_VCT+8*0],rdi
	mov r13,QWORD [rdi+8]
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_LN rdi
;; rsp=0 , %473~0'(= a3◂ [ {| l |}] ) 
; $ %[ "_" ] ⊢ %[ "_" ]
;; rsp=0 , %488~%[ "_" ] %473~0'(= a3◂ [ {| l |}] ) 
; ∎ %[ "_" ]
; .dlt.ptn 0'(= a3◂ [ {| l |}] )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	call LB_382
	C_POP_REGS
; .mov_ptn2 %[ "_" ] ⊢ 0'(= {| l |} )
; .mov_ptn %[ "_" ] ⊢ 0'(= {| l |} )
	mov rsi,1  
	mov rdi,16
	xor rax,rax 
	C_CALL_SF calloc
	mov QWORD [rax],1
	mov BYTE [rax+8+0],95
	mov r13,rax
	ret
ETR_107: ;; pnt_mtc_ptn_lst 0'(= a2◂ [ a17◂ [ a23◂ [ a18◂ [ ]{| l |}]]] ) ⊢ 0'(= {| l |} ) : (_lst◂_t17◂_t23◂_s8◂_t18→_s8)
;; rsp=0 , %489~0'(= a2◂ [ a17◂ [ a23◂ [ a18◂ [ ]{| l |}]]] ) 
;; ? 0'(= a2◂ [ a17◂ [ a23◂ [ a18◂ [ ]{| l |}]]] ) ⊢ 0(<2)◂{ 1'(= a17◂ [ a23◂ [ a18◂ [ ]{| l |}]] ) 2'(= a2◂ [ a17◂ [ a23◂ [ a18◂ [ ]{| l |}]]] ) }
	mov rdi,r13
	cmp BYTE [rdi+6],0
	jnz LB_479
	jmp LB_480
LB_479:
	jmp LB_478
LB_480:
	mov r14, QWORD [r13+8]
	mov r8, QWORD [r13+16]
	mov QWORD [GBG_VCT+8*0],r13
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_RCD 2,rdi
;; rsp=0 , %491~2'(= a2◂ [ a17◂ [ a23◂ [ a18◂ [ ]{| l |}]]] ) %490~1'(= a17◂ [ a23◂ [ a18◂ [ ]{| l |}]] ) 
; #106 1'(= a17◂ [ a23◂ [ a18◂ [ ]{| l |}]] ) ⊢ 0'(= {| l |} )
	sub rsp,8
	mov QWORD [rsp+8*0],r8
; .mov_ptn2 1'(= a17◂ [ a23◂ [ a18◂ [ ]{| l |}]] ) ⊢ 0'(= a17◂ [ a23◂ [ a18◂ [ ]{| l |}]] )
; .mov_ptn 1'(= a17◂ [ a23◂ [ a18◂ [ ]{| l |}]] ) ⊢ 0'(= a17◂ [ a23◂ [ a18◂ [ ]{| l |}]] )
	mov rax,r14
	mov r13,rax
	call ETR_106
	mov r8,QWORD [rsp-8+8*1]
	add rsp,8
;; rsp=0 , %492~0'(= {| l |} ) %491~2'(= a2◂ [ a17◂ [ a23◂ [ a18◂ [ ]{| l |}]]] ) 
; #107 2'(= a2◂ [ a17◂ [ a23◂ [ a18◂ [ ]{| l |}]]] ) ⊢ 1'(= {| l |} )
	sub rsp,8
	mov QWORD [rsp+8*0],r13
; .mov_ptn2 2'(= a2◂ [ a17◂ [ a23◂ [ a18◂ [ ]{| l |}]]] ) ⊢ 0'(= a2◂ [ a17◂ [ a23◂ [ a18◂ [ ]{| l |}]]] )
; .mov_ptn 2'(= a2◂ [ a17◂ [ a23◂ [ a18◂ [ ]{| l |}]]] ) ⊢ 0'(= a2◂ [ a17◂ [ a23◂ [ a18◂ [ ]{| l |}]]] )
	mov rax,r8
	mov r13,rax
	call ETR_107
	mov r14,r13
	mov r13,QWORD [rsp-8+8*1]
	add rsp,8
;; rsp=0 , %493~1'(= {| l |} ) %492~0'(= {| l |} ) 
; » _^ .. ⊢ ..
; .. //
	mov rdi,0
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[r13]
	add rdi,rax 
	push rax
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[r14]
	add rdi,rax 
	push rax
	add rdi,1
	push rdi 
	call mlc_s8
	pop rdi
	mov r8,rax
	lea rdi,[rax+7+rdi]
	std 
	mov QWORD [tmp],rcx 
	pop rcx
	lea rsi,[r14+7+rcx]
	rep movsb
	lea rsi,[LB_481+1-1]
	mov rcx,1
	rep movsb
	pop rcx
	lea rsi,[r13+7+rcx]
	rep movsb
	mov rcx,QWORD [tmp] 
;; rsp=0 , %496~2'(= {| l |} ) %495~1'(= {| l |} ) %494~0'(= {| l |} ) 
; ∎ 2'(= {| l |} )
; .dlt.ptn 1'(= {| l |} )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	mov rdi,r8
	call free_s8
	C_POP_REGS
; .dlt.ptn 0'(= {| l |} )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	mov rdi,r8
	call free_s8
	C_POP_REGS
; .mov_ptn2 2'(= {| l |} ) ⊢ 0'(= {| l |} )
; .mov_ptn 2'(= {| l |} ) ⊢ 0'(= {| l |} )
	mov rax,r8
	mov r13,rax
	ret
LB_478:
;; ?. 0'(= a2◂ [ a17◂ [ a23◂ [ a18◂ [ ]{| l |}]]] ) ⊢ 1(<2)◂{ }
;; rsp=0 , 
; $ %[ "" ] ⊢ %[ "" ]
;; rsp=0 , %497~%[ "" ] 
; ∎ %[ "" ]
; .mov_ptn2 %[ "" ] ⊢ 0'(= {| l |} )
; .mov_ptn %[ "" ] ⊢ 0'(= {| l |} )
	mov rsi,1  
	mov rdi,16
	xor rax,rax 
	C_CALL_SF calloc
	mov QWORD [rax],0
	mov r13,rax
	ret
LB_529:
	movzx rax,BYTE [r8+6]
	jmp QWORD [LB_532+8*rax]
LB_532: dq LB_530,LB_531
LB_530:
	FREE_LN r8 
	mov r8,QWORD [r8+8]
	call LB_534
	jmp LB_533
LB_531:
	jmp LB_533
LB_533:
	ret
LB_534:
	movzx rax,BYTE [r8+6]
	jmp QWORD [LB_537+8*rax]
LB_537: dq LB_535,LB_536
LB_535:
	FREE_LN r8 
	mov r8,QWORD [r8+8]
	call LB_539
	jmp LB_538
LB_536:
	FREE_LN r8 
	mov r8,QWORD [r8+8]
	call LB_540
	jmp LB_538
LB_538:
	ret
LB_540:
	movzx rax,BYTE [r8+6]
	jmp QWORD [LB_543+8*rax]
LB_543: dq LB_541,LB_542
LB_541:
	FREE_LN r8 
	mov r8,QWORD [r8+8]
	call LB_451
	jmp LB_544
LB_542:
	mov rdi,r8
	call free_s8
	jmp LB_544
LB_544:
	ret
LB_539:
	movzx rax,BYTE [r8+6]
	jmp QWORD [LB_547+8*rax]
LB_547: dq LB_545,LB_546
LB_545:
	push r8
	mov r8,QWORD [r8+8+8*0]
	call LB_534
	pop r8 
	push r8
	mov r8,QWORD [r8+8+8*1]
	call LB_539
	pop r8 
	FREE_RCD 2, r8
	jmp LB_548
LB_546:
	jmp LB_548
LB_548:
	ret
LB_588:
	movzx rax,BYTE [r8+6]
	jmp QWORD [LB_591+8*rax]
LB_591: dq LB_589,LB_590
LB_589:
	push r8
	mov r8,QWORD [r8+8+8*0]
	call LB_593
	pop r8 
	push r8
	mov r8,QWORD [r8+8+8*1]
	call LB_588
	pop r8 
	FREE_RCD 2, r8
	jmp LB_592
LB_590:
	jmp LB_592
LB_592:
	ret
LB_593:
	movzx rax,BYTE [r8+6]
	jmp QWORD [LB_598+8*rax]
LB_598: dq LB_594,LB_595,LB_596,LB_597
LB_594:
	mov rdi,r8
	call free_s8
	jmp LB_599
LB_595:
	FREE_LN r8 
	mov r8,QWORD [r8+8]
	call LB_451
	jmp LB_599
LB_596:
	push r8
	mov r8,QWORD [r8+8+8*0]
	call LB_600
	pop r8 
	push r8
	mov r8,QWORD [r8+8+8*1]
	pop r8 
	FREE_RCD 2, r8
	jmp LB_599
LB_597:
	push r8
	mov r8,QWORD [r8+8+8*0]
	pop r8 
	push r8
	mov r8,QWORD [r8+8+8*1]
	mov rdi,r8
	call free_s8
	pop r8 
	FREE_RCD 2, r8
	jmp LB_599
LB_599:
	ret
LB_600:
	movzx rax,BYTE [r8+6]
	jmp QWORD [LB_605+8*rax]
LB_605: dq LB_601,LB_602,LB_603,LB_604
LB_601:
	jmp LB_606
LB_602:
	jmp LB_606
LB_603:
	jmp LB_606
LB_604:
	jmp LB_606
LB_606:
	ret
LB_587:
	movzx rax,BYTE [r8+6]
	jmp QWORD [LB_609+8*rax]
LB_609: dq LB_607,LB_608
LB_607:
	push r8
	mov r8,QWORD [r8+8+8*0]
	call LB_540
	pop r8 
	push r8
	mov r8,QWORD [r8+8+8*1]
	call LB_587
	pop r8 
	FREE_RCD 2, r8
	jmp LB_610
LB_608:
	jmp LB_610
LB_610:
	ret
LB_586:
	movzx rax,BYTE [r8+6]
	jmp QWORD [LB_613+8*rax]
LB_613: dq LB_611,LB_612
LB_611:
	push r8
	mov r8,QWORD [r8+8+8*0]
	call LB_615
	pop r8 
	push r8
	mov r8,QWORD [r8+8+8*1]
	call LB_586
	pop r8 
	FREE_RCD 2, r8
	jmp LB_614
LB_612:
	jmp LB_614
LB_614:
	ret
LB_615:
	movzx rax,BYTE [r8+6]
	jmp QWORD [LB_618+8*rax]
LB_618: dq LB_616,LB_617
LB_616:
	FREE_LN r8 
	mov r8,QWORD [r8+8]
	call LB_382
	jmp LB_619
LB_617:
	mov rdi,r8
	call free_s8
	jmp LB_619
LB_619:
	ret
LB_630:
	movzx rax,BYTE [r8+6]
	jmp QWORD [LB_633+8*rax]
LB_633: dq LB_631,LB_632
LB_631:
	push r8
	mov r8,QWORD [r8+8+8*0]
	call LB_635
	pop r8 
	push r8
	mov r8,QWORD [r8+8+8*1]
	call LB_630
	pop r8 
	FREE_RCD 2, r8
	jmp LB_634
LB_632:
	jmp LB_634
LB_634:
	ret
LB_635:
	movzx rax,BYTE [r8+6]
	jmp QWORD [LB_639+8*rax]
LB_639: dq LB_636,LB_637,LB_638
LB_636:
	push r8
	mov r8,QWORD [r8+8+8*0]
	call LB_534
	pop r8 
	push r8
	mov r8,QWORD [r8+8+8*1]
	call LB_438
	pop r8 
	FREE_RCD 2, r8
	jmp LB_640
LB_637:
	push r8
	mov r8,QWORD [r8+8+8*0]
	call LB_641
	pop r8 
	push r8
	mov r8,QWORD [r8+8+8*1]
	call LB_641
	pop r8 
	FREE_RCD 2, r8
	jmp LB_640
LB_638:
	push r8
	mov r8,QWORD [r8+8+8*0]
	call LB_641
	pop r8 
	push r8
	mov r8,QWORD [r8+8+8*1]
	call LB_641
	pop r8 
	FREE_RCD 2, r8
	jmp LB_640
LB_640:
	ret
LB_641:
	movzx rax,BYTE [r8+6]
	jmp QWORD [LB_644+8*rax]
LB_644: dq LB_642,LB_643
LB_642:
	FREE_LN r8 
	mov r8,QWORD [r8+8]
	call LB_451
	jmp LB_645
LB_643:
	mov rdi,r8
	call free_s8
	jmp LB_645
LB_645:
	ret
ETR_137: ;; pnt_lc_code { 0'(= r ) 1'(= a26◂ [ a18◂ [ ]{| l |}] ) } ⊢ { 0'(= r ) 1'(= {| l |} ) } : ({ _r64 _t26◂_s8◂_t18 }→{ _r64 _s8 })
;; rsp=0 , %499~1'(= a26◂ [ a18◂ [ ]{| l |}] ) %498~0'(= r ) 
;; ? 1'(= a26◂ [ a18◂ [ ]{| l |}] ) ⊢ 0(<7)◂{ 2'(= a18◂ [ ] ) 3'(= a17◂ [ a21◂ [ a18◂ [ ]{| l |}]] ) }
	mov rdi,r14
	cmp BYTE [rdi+6],0
	jnz LB_483
	jmp LB_484
LB_483:
	jmp LB_482
LB_484:
	mov r8, QWORD [r14+8]
	mov r9, QWORD [r14+16]
	mov QWORD [GBG_VCT+8*0],r14
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_RCD 2,rdi
;; rsp=0 , %510~3'(= a17◂ [ a21◂ [ a18◂ [ ]{| l |}]] ) %509~2'(= a18◂ [ ] ) %498~0'(= r ) 
; #87 2'(= a18◂ [ ] ) ⊢ 1'(= {| l |} )
	sub rsp,16
	mov QWORD [rsp+8*0],r13
	mov QWORD [rsp+8*1],r9
; .mov_ptn2 2'(= a18◂ [ ] ) ⊢ 0'(= a18◂ [ ] )
; .mov_ptn 2'(= a18◂ [ ] ) ⊢ 0'(= a18◂ [ ] )
	mov rax,r8
	mov r13,rax
	call ETR_87
	mov r9,QWORD [rsp-8+8*2]
	mov r14,r13
	mov r13,QWORD [rsp-8+8*1]
	add rsp,16
;; rsp=0 , %511~1'(= {| l |} ) %510~3'(= a17◂ [ a21◂ [ a18◂ [ ]{| l |}]] ) %498~0'(= r ) 
; #102 3'(= a17◂ [ a21◂ [ a18◂ [ ]{| l |}]] ) ⊢ 2'(= {| l |} )
	sub rsp,16
	mov QWORD [rsp+8*0],r13
	mov QWORD [rsp+8*1],r14
; .mov_ptn2 3'(= a17◂ [ a21◂ [ a18◂ [ ]{| l |}]] ) ⊢ 0'(= a17◂ [ a21◂ [ a18◂ [ ]{| l |}]] )
; .mov_ptn 3'(= a17◂ [ a21◂ [ a18◂ [ ]{| l |}]] ) ⊢ 0'(= a17◂ [ a21◂ [ a18◂ [ ]{| l |}]] )
	mov rax,r9
	mov r13,rax
	call ETR_102
	mov r14,QWORD [rsp-8+8*2]
	mov r8,r13
	mov r13,QWORD [rsp-8+8*1]
	add rsp,16
;; rsp=0 , %512~2'(= {| l |} ) %511~1'(= {| l |} ) %498~0'(= r ) 
; » _^ .. ⊢ ..
; .. //
	mov rdi,0
	mov rsi,r13
	imul rsi,1
	add rdi,rsi 
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[r14]
	add rdi,rax 
	push rax
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[r8]
	add rdi,rax 
	push rax
	add rdi,7
	push rdi 
	call mlc_s8
	pop rdi
	mov r9,rax
	lea rdi,[rax+7+rdi]
	std 
	mov QWORD [tmp],rcx 
	lea rsi,[LB_485+6-1]
	mov rcx,6
	rep movsb
	pop rcx
	lea rsi,[r8+7+rcx]
	rep movsb
	lea rsi,[LB_486+1-1]
	mov rcx,1
	rep movsb
	pop rcx
	lea rsi,[r14+7+rcx]
	rep movsb
	mov rax,r13
LB_488:
	cmp rax,0
	jz LB_489
	sub rax,1
	lea rsi,[LB_487+1-1]
	mov rcx,1
	rep movsb 
	jmp LB_488
LB_489:
	mov rcx,QWORD [tmp] 
;; rsp=0 , %516~3'(= {| l |} ) %515~2'(= {| l |} ) %514~1'(= {| l |} ) %513~0'(= r ) 
; ∎ { 0'(= r ) 3'(= {| l |} ) }
; .dlt.ptn 2'(= {| l |} )
	mov rdi,r8
	C_PUSH_REGS
	mov r8,rdi
	mov rdi,r8
	call free_s8
	C_POP_REGS
; .dlt.ptn 1'(= {| l |} )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	mov rdi,r8
	call free_s8
	C_POP_REGS
; .mov_ptn2 { 0'(= r ) 3'(= {| l |} ) } ⊢ { 0'(= r ) 1'(= {| l |} ) }
; .mov_ptn 3'(= {| l |} ) ⊢ 1'(= {| l |} )
	mov rax,r9
	mov r14,rax
	ret
LB_482:
;; ? 1'(= a26◂ [ a18◂ [ ]{| l |}] ) ⊢ 1(<7)◂{ 2'(= a21◂ [ a18◂ [ ]{| l |}] ) 3'(= a17◂ [ a21◂ [ a18◂ [ ]{| l |}]] ) }
	mov rdi,r14
	cmp BYTE [rdi+6],1
	jnz LB_491
	jmp LB_492
LB_491:
	jmp LB_490
LB_492:
	mov r8, QWORD [r14+8]
	mov r9, QWORD [r14+16]
	mov QWORD [GBG_VCT+8*0],r14
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_RCD 2,rdi
;; rsp=0 , %508~3'(= a17◂ [ a21◂ [ a18◂ [ ]{| l |}]] ) %507~2'(= a21◂ [ a18◂ [ ]{| l |}] ) %498~0'(= r ) 
; #83 2'(= a21◂ [ a18◂ [ ]{| l |}] ) ⊢ 1(<2)◂2'(= a21◂ [ a18◂ [ ]{| l |}] )
;; rsp=0 , %517~1(<2)◂2'(= a21◂ [ a18◂ [ ]{| l |}] ) %508~3'(= a17◂ [ a21◂ [ a18◂ [ ]{| l |}]] ) %498~0'(= r ) 
; #102 1(<2)◂2'(= a21◂ [ a18◂ [ ]{| l |}] ) ⊢ 1'(= {| l |} )
	sub rsp,16
	mov QWORD [rsp+8*0],r13
	mov QWORD [rsp+8*1],r9
; .mov_ptn2 1(<2)◂2'(= a21◂ [ a18◂ [ ]{| l |}] ) ⊢ 0'(= a17◂ [ a21◂ [ a18◂ [ ]{| l |}]] )
; .mov_ptn 1(<2)◂2'(= a21◂ [ a18◂ [ ]{| l |}] ) ⊢ 0'(= a17◂ [ a21◂ [ a18◂ [ ]{| l |}]] )
	mov rax,r8
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],1
	mov QWORD [rax+8],rdi
	mov r13,rax
	call ETR_102
	mov r9,QWORD [rsp-8+8*2]
	mov r14,r13
	mov r13,QWORD [rsp-8+8*1]
	add rsp,16
;; rsp=0 , %518~1'(= {| l |} ) %508~3'(= a17◂ [ a21◂ [ a18◂ [ ]{| l |}]] ) %498~0'(= r ) 
; #102 3'(= a17◂ [ a21◂ [ a18◂ [ ]{| l |}]] ) ⊢ 2'(= {| l |} )
	sub rsp,16
	mov QWORD [rsp+8*0],r13
	mov QWORD [rsp+8*1],r14
; .mov_ptn2 3'(= a17◂ [ a21◂ [ a18◂ [ ]{| l |}]] ) ⊢ 0'(= a17◂ [ a21◂ [ a18◂ [ ]{| l |}]] )
; .mov_ptn 3'(= a17◂ [ a21◂ [ a18◂ [ ]{| l |}]] ) ⊢ 0'(= a17◂ [ a21◂ [ a18◂ [ ]{| l |}]] )
	mov rax,r9
	mov r13,rax
	call ETR_102
	mov r14,QWORD [rsp-8+8*2]
	mov r8,r13
	mov r13,QWORD [rsp-8+8*1]
	add rsp,16
;; rsp=0 , %519~2'(= {| l |} ) %518~1'(= {| l |} ) %498~0'(= r ) 
; » _^ .. ⊢ ..
; .. //
	mov rdi,0
	mov rsi,r13
	imul rsi,1
	add rdi,rsi 
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[r14]
	add rdi,rax 
	push rax
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[r8]
	add rdi,rax 
	push rax
	add rdi,10
	push rdi 
	call mlc_s8
	pop rdi
	mov r9,rax
	lea rdi,[rax+7+rdi]
	std 
	mov QWORD [tmp],rcx 
	lea rsi,[LB_493+6-1]
	mov rcx,6
	rep movsb
	pop rcx
	lea rsi,[r8+7+rcx]
	rep movsb
	lea rsi,[LB_494+1-1]
	mov rcx,1
	rep movsb
	pop rcx
	lea rsi,[r14+7+rcx]
	rep movsb
	lea rsi,[LB_495+3-1]
	mov rcx,3
	rep movsb
	mov rax,r13
LB_497:
	cmp rax,0
	jz LB_498
	sub rax,1
	lea rsi,[LB_496+1-1]
	mov rcx,1
	rep movsb 
	jmp LB_497
LB_498:
	mov rcx,QWORD [tmp] 
;; rsp=0 , %523~3'(= {| l |} ) %522~2'(= {| l |} ) %521~1'(= {| l |} ) %520~0'(= r ) 
; ∎ { 0'(= r ) 3'(= {| l |} ) }
; .dlt.ptn 2'(= {| l |} )
	mov rdi,r8
	C_PUSH_REGS
	mov r8,rdi
	mov rdi,r8
	call free_s8
	C_POP_REGS
; .dlt.ptn 1'(= {| l |} )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	mov rdi,r8
	call free_s8
	C_POP_REGS
; .mov_ptn2 { 0'(= r ) 3'(= {| l |} ) } ⊢ { 0'(= r ) 1'(= {| l |} ) }
; .mov_ptn 3'(= {| l |} ) ⊢ 1'(= {| l |} )
	mov rax,r9
	mov r14,rax
	ret
LB_490:
;; ? 1'(= a26◂ [ a18◂ [ ]{| l |}] ) ⊢ 2(<7)◂{ 2'(= a28◂ [ a18◂ [ ]{| l |}] ) 3'(= a26◂ [ a18◂ [ ]{| l |}] ) }
	mov rdi,r14
	cmp BYTE [rdi+6],2
	jnz LB_500
	jmp LB_501
LB_500:
	jmp LB_499
LB_501:
	mov r8, QWORD [r14+8]
	mov r9, QWORD [r14+16]
	mov QWORD [GBG_VCT+8*0],r14
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_RCD 2,rdi
;; rsp=0 , %506~3'(= a26◂ [ a18◂ [ ]{| l |}] ) %505~2'(= a28◂ [ a18◂ [ ]{| l |}] ) %498~0'(= r ) 
; #138 { 0'(= r ) 2'(= a28◂ [ a18◂ [ ]{| l |}] ) } ⊢ { 0'(= r ) 1'(= {| l |} ) }
	sub rsp,8
	mov QWORD [rsp+8*0],r9
; .mov_ptn2 { 0'(= r ) 2'(= a28◂ [ a18◂ [ ]{| l |}] ) } ⊢ { 0'(= r ) 1'(= a28◂ [ a18◂ [ ]{| l |}] ) }
; .mov_ptn 2'(= a28◂ [ a18◂ [ ]{| l |}] ) ⊢ 1'(= a28◂ [ a18◂ [ ]{| l |}] )
	mov rax,r8
	mov r14,rax
	call ETR_138
	mov r9,QWORD [rsp-8+8*1]
	add rsp,8
;; rsp=0 , %525~1'(= {| l |} ) %524~0'(= r ) %506~3'(= a26◂ [ a18◂ [ ]{| l |}] ) 
; #137 { 0'(= r ) 3'(= a26◂ [ a18◂ [ ]{| l |}] ) } ⊢ { 0'(= r ) 2'(= {| l |} ) }
	sub rsp,8
	mov QWORD [rsp+8*0],r14
; .mov_ptn2 { 0'(= r ) 3'(= a26◂ [ a18◂ [ ]{| l |}] ) } ⊢ { 0'(= r ) 1'(= a26◂ [ a18◂ [ ]{| l |}] ) }
; .mov_ptn 3'(= a26◂ [ a18◂ [ ]{| l |}] ) ⊢ 1'(= a26◂ [ a18◂ [ ]{| l |}] )
	mov rax,r9
	mov r14,rax
	call ETR_137
	mov r8,r14
	mov r14,QWORD [rsp-8+8*1]
	add rsp,8
;; rsp=0 , %527~2'(= {| l |} ) %526~0'(= r ) %525~1'(= {| l |} ) 
; » _^ .. ⊢ ..
; .. //
	mov rdi,0
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[r14]
	add rdi,rax 
	push rax
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[r8]
	add rdi,rax 
	push rax
	add rdi,0
	push rdi 
	call mlc_s8
	pop rdi
	mov r9,rax
	lea rdi,[rax+7+rdi]
	std 
	mov QWORD [tmp],rcx 
	pop rcx
	lea rsi,[r8+7+rcx]
	rep movsb
	pop rcx
	lea rsi,[r14+7+rcx]
	rep movsb
	mov rcx,QWORD [tmp] 
;; rsp=0 , %530~3'(= {| l |} ) %529~2'(= {| l |} ) %528~1'(= {| l |} ) %526~0'(= r ) 
; ∎ { 0'(= r ) 3'(= {| l |} ) }
; .dlt.ptn 2'(= {| l |} )
	mov rdi,r8
	C_PUSH_REGS
	mov r8,rdi
	mov rdi,r8
	call free_s8
	C_POP_REGS
; .dlt.ptn 1'(= {| l |} )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	mov rdi,r8
	call free_s8
	C_POP_REGS
; .mov_ptn2 { 0'(= r ) 3'(= {| l |} ) } ⊢ { 0'(= r ) 1'(= {| l |} ) }
; .mov_ptn 3'(= {| l |} ) ⊢ 1'(= {| l |} )
	mov rax,r9
	mov r14,rax
	ret
LB_499:
;; ? 1'(= a26◂ [ a18◂ [ ]{| l |}] ) ⊢ 3(<7)◂2'(= a16◂ [ *{ a2◂ [ a30◂ [ a18◂ [ ]{| l |}]]a29◂ [ a18◂ [ ]{| l |}]}] )
	mov rdi,r14
	cmp BYTE [rdi+6],3
	jnz LB_503
	jmp LB_504
LB_503:
	jmp LB_502
LB_504:
	mov QWORD [GBG_VCT+8*0],rdi
	mov r8,QWORD [rdi+8]
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_LN rdi
;; rsp=0 , %504~2'(= a16◂ [ *{ a2◂ [ a30◂ [ a18◂ [ ]{| l |}]]a29◂ [ a18◂ [ ]{| l |}]}] ) %498~0'(= r ) 
; #139 { 0'(= r ) 2'(= a16◂ [ *{ a2◂ [ a30◂ [ a18◂ [ ]{| l |}]]a29◂ [ a18◂ [ ]{| l |}]}] ) } ⊢ { 0'(= r ) 1'(= {| l |} ) }
; .mov_ptn2 { 0'(= r ) 2'(= a16◂ [ *{ a2◂ [ a30◂ [ a18◂ [ ]{| l |}]]a29◂ [ a18◂ [ ]{| l |}]}] ) } ⊢ { 0'(= r ) 1'(= a16◂ [ *{ a2◂ [ a30◂ [ a18◂ [ ]{| l |}]]a29◂ [ a18◂ [ ]{| l |}]}] ) }
; .mov_ptn 2'(= a16◂ [ *{ a2◂ [ a30◂ [ a18◂ [ ]{| l |}]]a29◂ [ a18◂ [ ]{| l |}]}] ) ⊢ 1'(= a16◂ [ *{ a2◂ [ a30◂ [ a18◂ [ ]{| l |}]]a29◂ [ a18◂ [ ]{| l |}]}] )
	mov rax,r8
	mov r14,rax
	call ETR_139
;; rsp=0 , %532~1'(= {| l |} ) %531~0'(= r ) 
; ∎ { 0'(= r ) 1'(= {| l |} ) }
; .mov_ptn2 { 0'(= r ) 1'(= {| l |} ) } ⊢ { 0'(= r ) 1'(= {| l |} ) }
	ret
LB_502:
;; ? 1'(= a26◂ [ a18◂ [ ]{| l |}] ) ⊢ 4(<7)◂{ 2'(= a17◂ [ a21◂ [ a18◂ [ ]{| l |}]] ) 3'(= a27◂ [ a18◂ [ ]{| l |}] ) }
	mov rdi,r14
	cmp BYTE [rdi+6],4
	jnz LB_506
	jmp LB_507
LB_506:
	jmp LB_505
LB_507:
	mov r8, QWORD [r14+8]
	mov r9, QWORD [r14+16]
	mov QWORD [GBG_VCT+8*0],r14
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_RCD 2,rdi
;; rsp=0 , %503~3'(= a27◂ [ a18◂ [ ]{| l |}] ) %502~2'(= a17◂ [ a21◂ [ a18◂ [ ]{| l |}]] ) %498~0'(= r ) 
; #102 2'(= a17◂ [ a21◂ [ a18◂ [ ]{| l |}]] ) ⊢ 1'(= {| l |} )
	sub rsp,16
	mov QWORD [rsp+8*0],r13
	mov QWORD [rsp+8*1],r9
; .mov_ptn2 2'(= a17◂ [ a21◂ [ a18◂ [ ]{| l |}]] ) ⊢ 0'(= a17◂ [ a21◂ [ a18◂ [ ]{| l |}]] )
; .mov_ptn 2'(= a17◂ [ a21◂ [ a18◂ [ ]{| l |}]] ) ⊢ 0'(= a17◂ [ a21◂ [ a18◂ [ ]{| l |}]] )
	mov rax,r8
	mov r13,rax
	call ETR_102
	mov r9,QWORD [rsp-8+8*2]
	mov r14,r13
	mov r13,QWORD [rsp-8+8*1]
	add rsp,16
;; rsp=0 , %533~1'(= {| l |} ) %503~3'(= a27◂ [ a18◂ [ ]{| l |}] ) %498~0'(= r ) 
;; ? 3'(= a27◂ [ a18◂ [ ]{| l |}] ) ⊢ 1(<2)◂{ 2'(= a2◂ [ a17◂ [ a22◂ [ {| l |}]]] ) 4'(= a26◂ [ a18◂ [ ]{| l |}] ) }
	mov rdi,r9
	cmp BYTE [rdi+6],1
	jnz LB_509
	jmp LB_510
LB_509:
	jmp LB_508
LB_510:
	mov r8, QWORD [r9+8]
	mov r10, QWORD [r9+16]
	mov QWORD [GBG_VCT+8*0],r9
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_RCD 2,rdi
;; rsp=0 , %536~4'(= a26◂ [ a18◂ [ ]{| l |}] ) %535~2'(= a2◂ [ a17◂ [ a22◂ [ {| l |}]]] ) %533~1'(= {| l |} ) %498~0'(= r ) 
; #105 2'(= a2◂ [ a17◂ [ a22◂ [ {| l |}]]] ) ⊢ 2'(= {| l |} )
	sub rsp,24
	mov QWORD [rsp+8*0],r13
	mov QWORD [rsp+8*1],r14
	mov QWORD [rsp+8*2],r10
; .mov_ptn2 2'(= a2◂ [ a17◂ [ a22◂ [ {| l |}]]] ) ⊢ 0'(= a2◂ [ a17◂ [ a22◂ [ {| l |}]]] )
; .mov_ptn 2'(= a2◂ [ a17◂ [ a22◂ [ {| l |}]]] ) ⊢ 0'(= a2◂ [ a17◂ [ a22◂ [ {| l |}]]] )
	mov rax,r8
	mov r13,rax
	call ETR_105
	mov r10,QWORD [rsp-8+8*3]
	mov r14,QWORD [rsp-8+8*2]
	mov r8,r13
	mov r13,QWORD [rsp-8+8*1]
	add rsp,24
;; rsp=0 , %537~2'(= {| l |} ) %536~4'(= a26◂ [ a18◂ [ ]{| l |}] ) %533~1'(= {| l |} ) %498~0'(= r ) 
; #137 { 0'(= r ) 4'(= a26◂ [ a18◂ [ ]{| l |}] ) } ⊢ { 0'(= r ) 3'(= {| l |} ) }
	sub rsp,16
	mov QWORD [rsp+8*0],r14
	mov QWORD [rsp+8*1],r8
; .mov_ptn2 { 0'(= r ) 4'(= a26◂ [ a18◂ [ ]{| l |}] ) } ⊢ { 0'(= r ) 1'(= a26◂ [ a18◂ [ ]{| l |}] ) }
; .mov_ptn 4'(= a26◂ [ a18◂ [ ]{| l |}] ) ⊢ 1'(= a26◂ [ a18◂ [ ]{| l |}] )
	mov rax,r10
	mov r14,rax
	call ETR_137
	mov r8,QWORD [rsp-8+8*2]
	mov r9,r14
	mov r14,QWORD [rsp-8+8*1]
	add rsp,16
;; rsp=0 , %539~3'(= {| l |} ) %538~0'(= r ) %537~2'(= {| l |} ) %533~1'(= {| l |} ) 
; » _^ .. ⊢ ..
; .. //
	mov rdi,0
	mov rsi,r13
	imul rsi,1
	add rdi,rsi 
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[r14]
	add rdi,rax 
	push rax
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[r8]
	add rdi,rax 
	push rax
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[r9]
	add rdi,rax 
	push rax
	add rdi,8
	push rdi 
	call mlc_s8
	pop rdi
	mov r10,rax
	lea rdi,[rax+7+rdi]
	std 
	mov QWORD [tmp],rcx 
	pop rcx
	lea rsi,[r9+7+rcx]
	rep movsb
	lea rsi,[LB_511+1-1]
	mov rcx,1
	rep movsb
	pop rcx
	lea rsi,[r8+7+rcx]
	rep movsb
	lea rsi,[LB_512+5-1]
	mov rcx,5
	rep movsb
	pop rcx
	lea rsi,[r14+7+rcx]
	rep movsb
	lea rsi,[LB_513+2-1]
	mov rcx,2
	rep movsb
	mov rax,r13
LB_515:
	cmp rax,0
	jz LB_516
	sub rax,1
	lea rsi,[LB_514+1-1]
	mov rcx,1
	rep movsb 
	jmp LB_515
LB_516:
	mov rcx,QWORD [tmp] 
;; rsp=0 , %544~4'(= {| l |} ) %543~3'(= {| l |} ) %542~2'(= {| l |} ) %541~1'(= {| l |} ) %540~0'(= r ) 
; ∎ { 0'(= r ) 4'(= {| l |} ) }
; .dlt.ptn 3'(= {| l |} )
	mov rdi,r9
	C_PUSH_REGS
	mov r8,rdi
	mov rdi,r8
	call free_s8
	C_POP_REGS
; .dlt.ptn 2'(= {| l |} )
	mov rdi,r8
	C_PUSH_REGS
	mov r8,rdi
	mov rdi,r8
	call free_s8
	C_POP_REGS
; .dlt.ptn 1'(= {| l |} )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	mov rdi,r8
	call free_s8
	C_POP_REGS
; .mov_ptn2 { 0'(= r ) 4'(= {| l |} ) } ⊢ { 0'(= r ) 1'(= {| l |} ) }
; .mov_ptn 4'(= {| l |} ) ⊢ 1'(= {| l |} )
	mov rax,r10
	mov r14,rax
	ret
LB_508:
;; ?. 3'(= a27◂ [ a18◂ [ ]{| l |}] ) ⊢ 0(<2)◂2'(= a16◂ [ *{ a17◂ [ a23◂ [ a18◂ [ ]{| l |}]]a2◂ [ a30◂ [ a18◂ [ ]{| l |}]]a29◂ [ a18◂ [ ]{| l |}]}] )
	mov QWORD [GBG_VCT+8*0],rdi
	mov r8,QWORD [rdi+8]
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_LN rdi
;; rsp=0 , %534~2'(= a16◂ [ *{ a17◂ [ a23◂ [ a18◂ [ ]{| l |}]]a2◂ [ a30◂ [ a18◂ [ ]{| l |}]]a29◂ [ a18◂ [ ]{| l |}]}] ) %533~1'(= {| l |} ) %498~0'(= r ) 
; #140 { 0'(= r ) 2'(= a16◂ [ *{ a17◂ [ a23◂ [ a18◂ [ ]{| l |}]]a2◂ [ a30◂ [ a18◂ [ ]{| l |}]]a29◂ [ a18◂ [ ]{| l |}]}] ) } ⊢ { 0'(= r ) 2'(= {| l |} ) }
	sub rsp,8
	mov QWORD [rsp+8*0],r14
; .mov_ptn2 { 0'(= r ) 2'(= a16◂ [ *{ a17◂ [ a23◂ [ a18◂ [ ]{| l |}]]a2◂ [ a30◂ [ a18◂ [ ]{| l |}]]a29◂ [ a18◂ [ ]{| l |}]}] ) } ⊢ { 0'(= r ) 1'(= a16◂ [ *{ a17◂ [ a23◂ [ a18◂ [ ]{| l |}]]a2◂ [ a30◂ [ a18◂ [ ]{| l |}]]a29◂ [ a18◂ [ ]{| l |}]}] ) }
; .mov_ptn 2'(= a16◂ [ *{ a17◂ [ a23◂ [ a18◂ [ ]{| l |}]]a2◂ [ a30◂ [ a18◂ [ ]{| l |}]]a29◂ [ a18◂ [ ]{| l |}]}] ) ⊢ 1'(= a16◂ [ *{ a17◂ [ a23◂ [ a18◂ [ ]{| l |}]]a2◂ [ a30◂ [ a18◂ [ ]{| l |}]]a29◂ [ a18◂ [ ]{| l |}]}] )
	mov rax,r8
	mov r14,rax
	call ETR_140
	mov r8,r14
	mov r14,QWORD [rsp-8+8*1]
	add rsp,8
;; rsp=0 , %546~2'(= {| l |} ) %545~0'(= r ) %533~1'(= {| l |} ) 
; » _^ .. ⊢ ..
; .. //
	mov rdi,0
	mov rsi,r13
	imul rsi,1
	add rdi,rsi 
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[r14]
	add rdi,rax 
	push rax
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[r8]
	add rdi,rax 
	push rax
	add rdi,7
	push rdi 
	call mlc_s8
	pop rdi
	mov r9,rax
	lea rdi,[rax+7+rdi]
	std 
	mov QWORD [tmp],rcx 
	pop rcx
	lea rsi,[r8+7+rcx]
	rep movsb
	lea rsi,[LB_517+5-1]
	mov rcx,5
	rep movsb
	pop rcx
	lea rsi,[r14+7+rcx]
	rep movsb
	lea rsi,[LB_518+2-1]
	mov rcx,2
	rep movsb
	mov rax,r13
LB_520:
	cmp rax,0
	jz LB_521
	sub rax,1
	lea rsi,[LB_519+1-1]
	mov rcx,1
	rep movsb 
	jmp LB_520
LB_521:
	mov rcx,QWORD [tmp] 
;; rsp=0 , %550~3'(= {| l |} ) %549~2'(= {| l |} ) %548~1'(= {| l |} ) %547~0'(= r ) 
; ∎ { 0'(= r ) 3'(= {| l |} ) }
; .dlt.ptn 2'(= {| l |} )
	mov rdi,r8
	C_PUSH_REGS
	mov r8,rdi
	mov rdi,r8
	call free_s8
	C_POP_REGS
; .dlt.ptn 1'(= {| l |} )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	mov rdi,r8
	call free_s8
	C_POP_REGS
; .mov_ptn2 { 0'(= r ) 3'(= {| l |} ) } ⊢ { 0'(= r ) 1'(= {| l |} ) }
; .mov_ptn 3'(= {| l |} ) ⊢ 1'(= {| l |} )
	mov rax,r9
	mov r14,rax
	ret
LB_505:
;; ? 1'(= a26◂ [ a18◂ [ ]{| l |}] ) ⊢ 5(<7)◂2'(= a3◂ [ a17◂ [ a21◂ [ a18◂ [ ]{| l |}]]] )
	mov rdi,r14
	cmp BYTE [rdi+6],5
	jnz LB_523
	jmp LB_524
LB_523:
	jmp LB_522
LB_524:
	mov QWORD [GBG_VCT+8*0],rdi
	mov r8,QWORD [rdi+8]
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_LN rdi
;; rsp=0 , %501~2'(= a3◂ [ a17◂ [ a21◂ [ a18◂ [ ]{| l |}]]] ) %498~0'(= r ) 
; » _^ .. ⊢ ..
; .. //
	mov rdi,0
	mov rsi,r13
	imul rsi,1
	add rdi,rsi 
	add rdi,7
	push rdi 
	call mlc_s8
	pop rdi
	mov r14,rax
	lea rdi,[rax+7+rdi]
	std 
	mov QWORD [tmp],rcx 
	lea rsi,[LB_525+7-1]
	mov rcx,7
	rep movsb
	mov rax,r13
LB_527:
	cmp rax,0
	jz LB_528
	sub rax,1
	lea rsi,[LB_526+1-1]
	mov rcx,1
	rep movsb 
	jmp LB_527
LB_528:
	mov rcx,QWORD [tmp] 
;; rsp=0 , %552~1'(= {| l |} ) %551~0'(= r ) %501~2'(= a3◂ [ a17◂ [ a21◂ [ a18◂ [ ]{| l |}]]] ) 
; ∎ { 0'(= r ) 1'(= {| l |} ) }
; .dlt.ptn 2'(= a3◂ [ a17◂ [ a21◂ [ a18◂ [ ]{| l |}]]] )
	mov rdi,r8
	C_PUSH_REGS
	mov r8,rdi
	call LB_529
	C_POP_REGS
; .mov_ptn2 { 0'(= r ) 1'(= {| l |} ) } ⊢ { 0'(= r ) 1'(= {| l |} ) }
	ret
LB_522:
;; ?. 1'(= a26◂ [ a18◂ [ ]{| l |}] ) ⊢ 6(<7)◂2'(= r )
	mov QWORD [GBG_VCT+8*0],rdi
	mov r8,QWORD [rdi+8]
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_LN rdi
;; rsp=0 , %500~2'(= r ) %498~0'(= r ) 
; » _^ .. ⊢ ..
; .. //
	mov rdi,0
	mov rsi,r13
	imul rsi,1
	add rdi,rsi 
	add rdi,5
	push rdi 
	call mlc_s8
	pop rdi
	mov r14,rax
	lea rdi,[rax+7+rdi]
	std 
	mov QWORD [tmp],rcx 
	lea rsi,[LB_549+5-1]
	mov rcx,5
	rep movsb
	mov rax,r13
LB_551:
	cmp rax,0
	jz LB_552
	sub rax,1
	lea rsi,[LB_550+1-1]
	mov rcx,1
	rep movsb 
	jmp LB_551
LB_552:
	mov rcx,QWORD [tmp] 
;; rsp=0 , %554~1'(= {| l |} ) %553~0'(= r ) %500~2'(= r ) 
; ∎ { 0'(= r ) 1'(= {| l |} ) }
; .dlt.ptn 2'(= r )
	mov rdi,r8
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 { 0'(= r ) 1'(= {| l |} ) } ⊢ { 0'(= r ) 1'(= {| l |} ) }
	ret
ETR_138: ;; pnt_lc_line { 0'(= r ) 1'(= a28◂ [ a18◂ [ ]{| l |}] ) } ⊢ { 0'(= r ) 1'(= {| l |} ) } : ({ _r64 _t28◂_s8◂_t18 }→{ _r64 _s8 })
;; rsp=0 , %556~1'(= a28◂ [ a18◂ [ ]{| l |}] ) %555~0'(= r ) 
;; ?; 1'(= a28◂ [ a18◂ [ ]{| l |}] ) ⊢ 0(<4)◂{ 2'(= a18◂ [ ] ) 3'(= a17◂ [ a21◂ [ a18◂ [ ]{| l |}]] ) 4'(= a17◂ [ a22◂ [ {| l |}]] ) }
	mov rdi,r14
	cmp BYTE [rdi+6],0
	jnz LB_554
	jmp LB_555
LB_554:
	jmp LB_553
LB_555:
	mov r8, QWORD [r14+8]
	mov r9, QWORD [r14+16]
	mov r10, QWORD [r14+24]
	mov QWORD [GBG_VCT+8*0],r14
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_RCD 3,rdi
;; rsp=0 , %559~4'(= a17◂ [ a22◂ [ {| l |}]] ) %558~3'(= a17◂ [ a21◂ [ a18◂ [ ]{| l |}]] ) %557~2'(= a18◂ [ ] ) %555~0'(= r ) 
; #102 3'(= a17◂ [ a21◂ [ a18◂ [ ]{| l |}]] ) ⊢ 1'(= {| l |} )
	sub rsp,24
	mov QWORD [rsp+8*0],r13
	mov QWORD [rsp+8*1],r8
	mov QWORD [rsp+8*2],r10
; .mov_ptn2 3'(= a17◂ [ a21◂ [ a18◂ [ ]{| l |}]] ) ⊢ 0'(= a17◂ [ a21◂ [ a18◂ [ ]{| l |}]] )
; .mov_ptn 3'(= a17◂ [ a21◂ [ a18◂ [ ]{| l |}]] ) ⊢ 0'(= a17◂ [ a21◂ [ a18◂ [ ]{| l |}]] )
	mov rax,r9
	mov r13,rax
	call ETR_102
	mov r10,QWORD [rsp-8+8*3]
	mov r8,QWORD [rsp-8+8*2]
	mov r14,r13
	mov r13,QWORD [rsp-8+8*1]
	add rsp,24
;; rsp=0 , %560~1'(= {| l |} ) %559~4'(= a17◂ [ a22◂ [ {| l |}]] ) %557~2'(= a18◂ [ ] ) %555~0'(= r ) 
; #104 4'(= a17◂ [ a22◂ [ {| l |}]] ) ⊢ 3'(= {| l |} )
	sub rsp,24
	mov QWORD [rsp+8*0],r13
	mov QWORD [rsp+8*1],r14
	mov QWORD [rsp+8*2],r8
; .mov_ptn2 4'(= a17◂ [ a22◂ [ {| l |}]] ) ⊢ 0'(= a17◂ [ a22◂ [ {| l |}]] )
; .mov_ptn 4'(= a17◂ [ a22◂ [ {| l |}]] ) ⊢ 0'(= a17◂ [ a22◂ [ {| l |}]] )
	mov rax,r10
	mov r13,rax
	call ETR_104
	mov r8,QWORD [rsp-8+8*3]
	mov r14,QWORD [rsp-8+8*2]
	mov r9,r13
	mov r13,QWORD [rsp-8+8*1]
	add rsp,24
;; rsp=0 , %561~3'(= {| l |} ) %560~1'(= {| l |} ) %557~2'(= a18◂ [ ] ) %555~0'(= r ) 
; #87 2'(= a18◂ [ ] ) ⊢ 2'(= {| l |} )
	sub rsp,24
	mov QWORD [rsp+8*0],r13
	mov QWORD [rsp+8*1],r14
	mov QWORD [rsp+8*2],r9
; .mov_ptn2 2'(= a18◂ [ ] ) ⊢ 0'(= a18◂ [ ] )
; .mov_ptn 2'(= a18◂ [ ] ) ⊢ 0'(= a18◂ [ ] )
	mov rax,r8
	mov r13,rax
	call ETR_87
	mov r9,QWORD [rsp-8+8*3]
	mov r14,QWORD [rsp-8+8*2]
	mov r8,r13
	mov r13,QWORD [rsp-8+8*1]
	add rsp,24
;; rsp=0 , %562~2'(= {| l |} ) %561~3'(= {| l |} ) %560~1'(= {| l |} ) %555~0'(= r ) 
; » _^ .. ⊢ ..
; .. //
	mov rdi,0
	mov rsi,r13
	imul rsi,1
	add rdi,rsi 
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[r8]
	add rdi,rax 
	push rax
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[r14]
	add rdi,rax 
	push rax
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[r9]
	add rdi,rax 
	push rax
	add rdi,7
	push rdi 
	call mlc_s8
	pop rdi
	mov r10,rax
	lea rdi,[rax+7+rdi]
	std 
	mov QWORD [tmp],rcx 
	lea rsi,[LB_556+1-1]
	mov rcx,1
	rep movsb
	pop rcx
	lea rsi,[r9+7+rcx]
	rep movsb
	lea rsi,[LB_557+5-1]
	mov rcx,5
	rep movsb
	pop rcx
	lea rsi,[r14+7+rcx]
	rep movsb
	lea rsi,[LB_558+1-1]
	mov rcx,1
	rep movsb
	pop rcx
	lea rsi,[r8+7+rcx]
	rep movsb
	mov rax,r13
LB_560:
	cmp rax,0
	jz LB_561
	sub rax,1
	lea rsi,[LB_559+1-1]
	mov rcx,1
	rep movsb 
	jmp LB_560
LB_561:
	mov rcx,QWORD [tmp] 
;; rsp=0 , %567~4'(= {| l |} ) %566~3'(= {| l |} ) %565~1'(= {| l |} ) %564~2'(= {| l |} ) %563~0'(= r ) 
; ∎ { 0'(= r ) 4'(= {| l |} ) }
; .dlt.ptn 3'(= {| l |} )
	mov rdi,r9
	C_PUSH_REGS
	mov r8,rdi
	mov rdi,r8
	call free_s8
	C_POP_REGS
; .dlt.ptn 1'(= {| l |} )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	mov rdi,r8
	call free_s8
	C_POP_REGS
; .dlt.ptn 2'(= {| l |} )
	mov rdi,r8
	C_PUSH_REGS
	mov r8,rdi
	mov rdi,r8
	call free_s8
	C_POP_REGS
; .mov_ptn2 { 0'(= r ) 4'(= {| l |} ) } ⊢ { 0'(= r ) 1'(= {| l |} ) }
; .mov_ptn 4'(= {| l |} ) ⊢ 1'(= {| l |} )
	mov rax,r10
	mov r14,rax
	ret
LB_553:
;; ?; 1'(= a28◂ [ a18◂ [ ]{| l |}] ) ⊢ 1(<4)◂{ 2'(= a21◂ [ a18◂ [ ]{| l |}] ) 3'(= a17◂ [ a21◂ [ a18◂ [ ]{| l |}]] ) 4'(= a17◂ [ a22◂ [ {| l |}]] ) }
	mov rdi,r14
	cmp BYTE [rdi+6],1
	jnz LB_563
	jmp LB_564
LB_563:
	jmp LB_562
LB_564:
	mov r8, QWORD [r14+8]
	mov r9, QWORD [r14+16]
	mov r10, QWORD [r14+24]
	mov QWORD [GBG_VCT+8*0],r14
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_RCD 3,rdi
;; rsp=0 , %570~4'(= a17◂ [ a22◂ [ {| l |}]] ) %569~3'(= a17◂ [ a21◂ [ a18◂ [ ]{| l |}]] ) %568~2'(= a21◂ [ a18◂ [ ]{| l |}] ) %555~0'(= r ) 
; #83 2'(= a21◂ [ a18◂ [ ]{| l |}] ) ⊢ 1(<2)◂2'(= a21◂ [ a18◂ [ ]{| l |}] )
;; rsp=0 , %571~1(<2)◂2'(= a21◂ [ a18◂ [ ]{| l |}] ) %570~4'(= a17◂ [ a22◂ [ {| l |}]] ) %569~3'(= a17◂ [ a21◂ [ a18◂ [ ]{| l |}]] ) %555~0'(= r ) 
; #102 1(<2)◂2'(= a21◂ [ a18◂ [ ]{| l |}] ) ⊢ 1'(= {| l |} )
	sub rsp,24
	mov QWORD [rsp+8*0],r13
	mov QWORD [rsp+8*1],r9
	mov QWORD [rsp+8*2],r10
; .mov_ptn2 1(<2)◂2'(= a21◂ [ a18◂ [ ]{| l |}] ) ⊢ 0'(= a17◂ [ a21◂ [ a18◂ [ ]{| l |}]] )
; .mov_ptn 1(<2)◂2'(= a21◂ [ a18◂ [ ]{| l |}] ) ⊢ 0'(= a17◂ [ a21◂ [ a18◂ [ ]{| l |}]] )
	mov rax,r8
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],1
	mov QWORD [rax+8],rdi
	mov r13,rax
	call ETR_102
	mov r10,QWORD [rsp-8+8*3]
	mov r9,QWORD [rsp-8+8*2]
	mov r14,r13
	mov r13,QWORD [rsp-8+8*1]
	add rsp,24
;; rsp=0 , %572~1'(= {| l |} ) %570~4'(= a17◂ [ a22◂ [ {| l |}]] ) %569~3'(= a17◂ [ a21◂ [ a18◂ [ ]{| l |}]] ) %555~0'(= r ) 
; #102 3'(= a17◂ [ a21◂ [ a18◂ [ ]{| l |}]] ) ⊢ 2'(= {| l |} )
	sub rsp,24
	mov QWORD [rsp+8*0],r13
	mov QWORD [rsp+8*1],r14
	mov QWORD [rsp+8*2],r10
; .mov_ptn2 3'(= a17◂ [ a21◂ [ a18◂ [ ]{| l |}]] ) ⊢ 0'(= a17◂ [ a21◂ [ a18◂ [ ]{| l |}]] )
; .mov_ptn 3'(= a17◂ [ a21◂ [ a18◂ [ ]{| l |}]] ) ⊢ 0'(= a17◂ [ a21◂ [ a18◂ [ ]{| l |}]] )
	mov rax,r9
	mov r13,rax
	call ETR_102
	mov r10,QWORD [rsp-8+8*3]
	mov r14,QWORD [rsp-8+8*2]
	mov r8,r13
	mov r13,QWORD [rsp-8+8*1]
	add rsp,24
;; rsp=0 , %573~2'(= {| l |} ) %572~1'(= {| l |} ) %570~4'(= a17◂ [ a22◂ [ {| l |}]] ) %555~0'(= r ) 
; #104 4'(= a17◂ [ a22◂ [ {| l |}]] ) ⊢ 3'(= {| l |} )
	sub rsp,24
	mov QWORD [rsp+8*0],r13
	mov QWORD [rsp+8*1],r14
	mov QWORD [rsp+8*2],r8
; .mov_ptn2 4'(= a17◂ [ a22◂ [ {| l |}]] ) ⊢ 0'(= a17◂ [ a22◂ [ {| l |}]] )
; .mov_ptn 4'(= a17◂ [ a22◂ [ {| l |}]] ) ⊢ 0'(= a17◂ [ a22◂ [ {| l |}]] )
	mov rax,r10
	mov r13,rax
	call ETR_104
	mov r8,QWORD [rsp-8+8*3]
	mov r14,QWORD [rsp-8+8*2]
	mov r9,r13
	mov r13,QWORD [rsp-8+8*1]
	add rsp,24
;; rsp=0 , %574~3'(= {| l |} ) %573~2'(= {| l |} ) %572~1'(= {| l |} ) %555~0'(= r ) 
; » _^ .. ⊢ ..
; .. //
	mov rdi,0
	mov rsi,r13
	imul rsi,1
	add rdi,rsi 
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[r14]
	add rdi,rax 
	push rax
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[r8]
	add rdi,rax 
	push rax
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[r9]
	add rdi,rax 
	push rax
	add rdi,11
	push rdi 
	call mlc_s8
	pop rdi
	mov r10,rax
	lea rdi,[rax+7+rdi]
	std 
	mov QWORD [tmp],rcx 
	lea rsi,[LB_565+1-1]
	mov rcx,1
	rep movsb
	pop rcx
	lea rsi,[r9+7+rcx]
	rep movsb
	lea rsi,[LB_566+5-1]
	mov rcx,5
	rep movsb
	pop rcx
	lea rsi,[r8+7+rcx]
	rep movsb
	lea rsi,[LB_567+1-1]
	mov rcx,1
	rep movsb
	pop rcx
	lea rsi,[r14+7+rcx]
	rep movsb
	lea rsi,[LB_568+4-1]
	mov rcx,4
	rep movsb
	mov rax,r13
LB_570:
	cmp rax,0
	jz LB_571
	sub rax,1
	lea rsi,[LB_569+1-1]
	mov rcx,1
	rep movsb 
	jmp LB_570
LB_571:
	mov rcx,QWORD [tmp] 
;; rsp=0 , %579~4'(= {| l |} ) %578~3'(= {| l |} ) %577~2'(= {| l |} ) %576~1'(= {| l |} ) %575~0'(= r ) 
; ∎ { 0'(= r ) 4'(= {| l |} ) }
; .dlt.ptn 3'(= {| l |} )
	mov rdi,r9
	C_PUSH_REGS
	mov r8,rdi
	mov rdi,r8
	call free_s8
	C_POP_REGS
; .dlt.ptn 2'(= {| l |} )
	mov rdi,r8
	C_PUSH_REGS
	mov r8,rdi
	mov rdi,r8
	call free_s8
	C_POP_REGS
; .dlt.ptn 1'(= {| l |} )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	mov rdi,r8
	call free_s8
	C_POP_REGS
; .mov_ptn2 { 0'(= r ) 4'(= {| l |} ) } ⊢ { 0'(= r ) 1'(= {| l |} ) }
; .mov_ptn 4'(= {| l |} ) ⊢ 1'(= {| l |} )
	mov rax,r10
	mov r14,rax
	ret
LB_562:
;; ?; 1'(= a28◂ [ a18◂ [ ]{| l |}] ) ⊢ 2(<4)◂{ 2'(= a20◂ [ a18◂ [ ]] ) 3'(= a17◂ [ a21◂ [ a18◂ [ ]{| l |}]] ) 4'(= a17◂ [ a22◂ [ {| l |}]] ) }
	mov rdi,r14
	cmp BYTE [rdi+6],2
	jnz LB_573
	jmp LB_574
LB_573:
	jmp LB_572
LB_574:
	mov r8, QWORD [r14+8]
	mov r9, QWORD [r14+16]
	mov r10, QWORD [r14+24]
	mov QWORD [GBG_VCT+8*0],r14
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_RCD 3,rdi
;; rsp=0 , %582~4'(= a17◂ [ a22◂ [ {| l |}]] ) %581~3'(= a17◂ [ a21◂ [ a18◂ [ ]{| l |}]] ) %580~2'(= a20◂ [ a18◂ [ ]] ) %555~0'(= r ) 
; #102 3'(= a17◂ [ a21◂ [ a18◂ [ ]{| l |}]] ) ⊢ 1'(= {| l |} )
	sub rsp,24
	mov QWORD [rsp+8*0],r13
	mov QWORD [rsp+8*1],r8
	mov QWORD [rsp+8*2],r10
; .mov_ptn2 3'(= a17◂ [ a21◂ [ a18◂ [ ]{| l |}]] ) ⊢ 0'(= a17◂ [ a21◂ [ a18◂ [ ]{| l |}]] )
; .mov_ptn 3'(= a17◂ [ a21◂ [ a18◂ [ ]{| l |}]] ) ⊢ 0'(= a17◂ [ a21◂ [ a18◂ [ ]{| l |}]] )
	mov rax,r9
	mov r13,rax
	call ETR_102
	mov r10,QWORD [rsp-8+8*3]
	mov r8,QWORD [rsp-8+8*2]
	mov r14,r13
	mov r13,QWORD [rsp-8+8*1]
	add rsp,24
;; rsp=0 , %583~1'(= {| l |} ) %582~4'(= a17◂ [ a22◂ [ {| l |}]] ) %580~2'(= a20◂ [ a18◂ [ ]] ) %555~0'(= r ) 
; #104 4'(= a17◂ [ a22◂ [ {| l |}]] ) ⊢ 3'(= {| l |} )
	sub rsp,24
	mov QWORD [rsp+8*0],r13
	mov QWORD [rsp+8*1],r14
	mov QWORD [rsp+8*2],r8
; .mov_ptn2 4'(= a17◂ [ a22◂ [ {| l |}]] ) ⊢ 0'(= a17◂ [ a22◂ [ {| l |}]] )
; .mov_ptn 4'(= a17◂ [ a22◂ [ {| l |}]] ) ⊢ 0'(= a17◂ [ a22◂ [ {| l |}]] )
	mov rax,r10
	mov r13,rax
	call ETR_104
	mov r8,QWORD [rsp-8+8*3]
	mov r14,QWORD [rsp-8+8*2]
	mov r9,r13
	mov r13,QWORD [rsp-8+8*1]
	add rsp,24
;; rsp=0 , %584~3'(= {| l |} ) %583~1'(= {| l |} ) %580~2'(= a20◂ [ a18◂ [ ]] ) %555~0'(= r ) 
; #93 2'(= a20◂ [ a18◂ [ ]] ) ⊢ 2'(= {| l |} )
	sub rsp,24
	mov QWORD [rsp+8*0],r13
	mov QWORD [rsp+8*1],r14
	mov QWORD [rsp+8*2],r9
; .mov_ptn2 2'(= a20◂ [ a18◂ [ ]] ) ⊢ 0'(= a20◂ [ a18◂ [ ]] )
; .mov_ptn 2'(= a20◂ [ a18◂ [ ]] ) ⊢ 0'(= a20◂ [ a18◂ [ ]] )
	mov rax,r8
	mov r13,rax
	call ETR_93
	mov r9,QWORD [rsp-8+8*3]
	mov r14,QWORD [rsp-8+8*2]
	mov r8,r13
	mov r13,QWORD [rsp-8+8*1]
	add rsp,24
;; rsp=0 , %585~2'(= {| l |} ) %584~3'(= {| l |} ) %583~1'(= {| l |} ) %555~0'(= r ) 
; » _^ .. ⊢ ..
; .. //
	mov rdi,0
	mov rsi,r13
	imul rsi,1
	add rdi,rsi 
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[r8]
	add rdi,rax 
	push rax
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[r14]
	add rdi,rax 
	push rax
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[r9]
	add rdi,rax 
	push rax
	add rdi,10
	push rdi 
	call mlc_s8
	pop rdi
	mov r10,rax
	lea rdi,[rax+7+rdi]
	std 
	mov QWORD [tmp],rcx 
	lea rsi,[LB_575+1-1]
	mov rcx,1
	rep movsb
	pop rcx
	lea rsi,[r9+7+rcx]
	rep movsb
	lea rsi,[LB_576+5-1]
	mov rcx,5
	rep movsb
	pop rcx
	lea rsi,[r14+7+rcx]
	rep movsb
	lea rsi,[LB_577+1-1]
	mov rcx,1
	rep movsb
	pop rcx
	lea rsi,[r8+7+rcx]
	rep movsb
	lea rsi,[LB_578+3-1]
	mov rcx,3
	rep movsb
	mov rax,r13
LB_580:
	cmp rax,0
	jz LB_581
	sub rax,1
	lea rsi,[LB_579+1-1]
	mov rcx,1
	rep movsb 
	jmp LB_580
LB_581:
	mov rcx,QWORD [tmp] 
;; rsp=0 , %590~4'(= {| l |} ) %589~3'(= {| l |} ) %588~1'(= {| l |} ) %587~2'(= {| l |} ) %586~0'(= r ) 
; ∎ { 0'(= r ) 4'(= {| l |} ) }
; .dlt.ptn 3'(= {| l |} )
	mov rdi,r9
	C_PUSH_REGS
	mov r8,rdi
	mov rdi,r8
	call free_s8
	C_POP_REGS
; .dlt.ptn 1'(= {| l |} )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	mov rdi,r8
	call free_s8
	C_POP_REGS
; .dlt.ptn 2'(= {| l |} )
	mov rdi,r8
	C_PUSH_REGS
	mov r8,rdi
	mov rdi,r8
	call free_s8
	C_POP_REGS
; .mov_ptn2 { 0'(= r ) 4'(= {| l |} ) } ⊢ { 0'(= r ) 1'(= {| l |} ) }
; .mov_ptn 4'(= {| l |} ) ⊢ 1'(= {| l |} )
	mov rax,r10
	mov r14,rax
	ret
LB_572:
;; ?; 1'(= a28◂ [ a18◂ [ ]{| l |}] ) ⊢ 3(<4)◂{ 2'(= a2◂ [ a25◂ [ a18◂ [ ]]] ) 3'(= a2◂ [ a21◂ [ a18◂ [ ]{| l |}]] ) 4'(= a2◂ [ a22◂ [ {| l |}]] ) }
	mov r8, QWORD [r14+8]
	mov r9, QWORD [r14+16]
	mov r10, QWORD [r14+24]
	mov QWORD [GBG_VCT+8*0],r14
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_RCD 3,rdi
;; rsp=0 , %593~4'(= a2◂ [ a22◂ [ {| l |}]] ) %592~3'(= a2◂ [ a21◂ [ a18◂ [ ]{| l |}]] ) %591~2'(= a2◂ [ a25◂ [ a18◂ [ ]]] ) %555~0'(= r ) 
; » _^ .. ⊢ ..
; .. //
	mov rdi,0
	mov rsi,r13
	imul rsi,1
	add rdi,rsi 
	add rdi,23
	push rdi 
	call mlc_s8
	pop rdi
	mov r14,rax
	lea rdi,[rax+7+rdi]
	std 
	mov QWORD [tmp],rcx 
	lea rsi,[LB_582+23-1]
	mov rcx,23
	rep movsb
	mov rax,r13
LB_584:
	cmp rax,0
	jz LB_585
	sub rax,1
	lea rsi,[LB_583+1-1]
	mov rcx,1
	rep movsb 
	jmp LB_584
LB_585:
	mov rcx,QWORD [tmp] 
;; rsp=0 , %595~1'(= {| l |} ) %594~0'(= r ) %593~4'(= a2◂ [ a22◂ [ {| l |}]] ) %592~3'(= a2◂ [ a21◂ [ a18◂ [ ]{| l |}]] ) %591~2'(= a2◂ [ a25◂ [ a18◂ [ ]]] ) 
; ∎ { 0'(= r ) 1'(= {| l |} ) }
; .dlt.ptn 4'(= a2◂ [ a22◂ [ {| l |}]] )
	mov rdi,r10
	C_PUSH_REGS
	mov r8,rdi
	call LB_586
	C_POP_REGS
; .dlt.ptn 3'(= a2◂ [ a21◂ [ a18◂ [ ]{| l |}]] )
	mov rdi,r9
	C_PUSH_REGS
	mov r8,rdi
	call LB_587
	C_POP_REGS
; .dlt.ptn 2'(= a2◂ [ a25◂ [ a18◂ [ ]]] )
	mov rdi,r8
	C_PUSH_REGS
	mov r8,rdi
	call LB_588
	C_POP_REGS
; .mov_ptn2 { 0'(= r ) 1'(= {| l |} ) } ⊢ { 0'(= r ) 1'(= {| l |} ) }
	ret
ETR_139: ;; pnt_lc_mtc { 0'(= r ) 1'(= a16◂ [ *{ a2◂ [ a30◂ [ a18◂ [ ]{| l |}]]a29◂ [ a18◂ [ ]{| l |}]}] ) } ⊢ { 0'(= r ) 1'(= {| l |} ) } : ({ _r64 _t16◂{ _lst◂_t30◂_s8◂_t18 _t29◂_s8◂_t18 } }→{ _r64 _s8 })
;; rsp=0 , %597~1'(= a16◂ [ *{ a2◂ [ a30◂ [ a18◂ [ ]{| l |}]]a29◂ [ a18◂ [ ]{| l |}]}] ) %596~0'(= r ) 
;; ?; 1'(= a16◂ [ *{ a2◂ [ a30◂ [ a18◂ [ ]{| l |}]]a29◂ [ a18◂ [ ]{| l |}]}] ) ⊢ 0(<2)◂{ { 3'(= a2◂ [ a30◂ [ a18◂ [ ]{| l |}]] ) 4'(= a29◂ [ a18◂ [ ]{| l |}] ) } 5'(= a16◂ [ *{ a2◂ [ a30◂ [ a18◂ [ ]{| l |}]]a29◂ [ a18◂ [ ]{| l |}]}] ) }
	mov rdi,r14
	cmp BYTE [rdi+6],0
	jnz LB_621
	jmp LB_622
LB_621:
	jmp LB_620
LB_622:
	mov r8, QWORD [r14+8]
	mov r9, QWORD [r8+8]
	mov r10, QWORD [r8+16]
	mov QWORD [GBG_VCT+8*0],r8
	mov r11, QWORD [r14+16]
	mov QWORD [GBG_VCT+8*1],r14
	mov rdi,QWORD [GBG_VCT+8*1]
	FREE_RCD 2,rdi
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_RCD 2,rdi
;; rsp=0 , %600~5'(= a16◂ [ *{ a2◂ [ a30◂ [ a18◂ [ ]{| l |}]]a29◂ [ a18◂ [ ]{| l |}]}] ) %599~4'(= a29◂ [ a18◂ [ ]{| l |}] ) %598~3'(= a2◂ [ a30◂ [ a18◂ [ ]{| l |}]] ) %596~0'(= r ) 
; #139 { 0'(= r ) 5'(= a16◂ [ *{ a2◂ [ a30◂ [ a18◂ [ ]{| l |}]]a29◂ [ a18◂ [ ]{| l |}]}] ) } ⊢ { 0'(= r ) 1'(= {| l |} ) }
	sub rsp,16
	mov QWORD [rsp+8*0],r9
	mov QWORD [rsp+8*1],r10
; .mov_ptn2 { 0'(= r ) 5'(= a16◂ [ *{ a2◂ [ a30◂ [ a18◂ [ ]{| l |}]]a29◂ [ a18◂ [ ]{| l |}]}] ) } ⊢ { 0'(= r ) 1'(= a16◂ [ *{ a2◂ [ a30◂ [ a18◂ [ ]{| l |}]]a29◂ [ a18◂ [ ]{| l |}]}] ) }
; .mov_ptn 5'(= a16◂ [ *{ a2◂ [ a30◂ [ a18◂ [ ]{| l |}]]a29◂ [ a18◂ [ ]{| l |}]}] ) ⊢ 1'(= a16◂ [ *{ a2◂ [ a30◂ [ a18◂ [ ]{| l |}]]a29◂ [ a18◂ [ ]{| l |}]}] )
	mov rax,r11
	mov r14,rax
	call ETR_139
	mov r10,QWORD [rsp-8+8*2]
	mov r9,QWORD [rsp-8+8*1]
	add rsp,16
;; rsp=0 , %602~1'(= {| l |} ) %601~0'(= r ) %599~4'(= a29◂ [ a18◂ [ ]{| l |}] ) %598~3'(= a2◂ [ a30◂ [ a18◂ [ ]{| l |}]] ) 
;; ? 4'(= a29◂ [ a18◂ [ ]{| l |}] ) ⊢ 0(<3)◂2'(= a16◂ [ *{ a2◂ [ a30◂ [ a18◂ [ ]{| l |}]]a29◂ [ a18◂ [ ]{| l |}]}] )
	mov rdi,r10
	cmp BYTE [rdi+6],0
	jnz LB_624
	jmp LB_625
LB_624:
	jmp LB_623
LB_625:
	mov QWORD [GBG_VCT+8*0],rdi
	mov r8,QWORD [rdi+8]
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_LN rdi
;; rsp=0 , %606~2'(= a16◂ [ *{ a2◂ [ a30◂ [ a18◂ [ ]{| l |}]]a29◂ [ a18◂ [ ]{| l |}]}] ) %602~1'(= {| l |} ) %601~0'(= r ) %598~3'(= a2◂ [ a30◂ [ a18◂ [ ]{| l |}]] ) 
; #139 { 0'(= r ) 2'(= a16◂ [ *{ a2◂ [ a30◂ [ a18◂ [ ]{| l |}]]a29◂ [ a18◂ [ ]{| l |}]}] ) } ⊢ { 0'(= r ) 2'(= {| l |} ) }
	sub rsp,16
	mov QWORD [rsp+8*0],r14
	mov QWORD [rsp+8*1],r9
; .mov_ptn2 { 0'(= r ) 2'(= a16◂ [ *{ a2◂ [ a30◂ [ a18◂ [ ]{| l |}]]a29◂ [ a18◂ [ ]{| l |}]}] ) } ⊢ { 0'(= r ) 1'(= a16◂ [ *{ a2◂ [ a30◂ [ a18◂ [ ]{| l |}]]a29◂ [ a18◂ [ ]{| l |}]}] ) }
; .mov_ptn 2'(= a16◂ [ *{ a2◂ [ a30◂ [ a18◂ [ ]{| l |}]]a29◂ [ a18◂ [ ]{| l |}]}] ) ⊢ 1'(= a16◂ [ *{ a2◂ [ a30◂ [ a18◂ [ ]{| l |}]]a29◂ [ a18◂ [ ]{| l |}]}] )
	mov rax,r8
	mov r14,rax
	call ETR_139
	mov r9,QWORD [rsp-8+8*2]
	mov r8,r14
	mov r14,QWORD [rsp-8+8*1]
	add rsp,16
;; rsp=0 , %608~2'(= {| l |} ) %607~0'(= r ) %602~1'(= {| l |} ) %598~3'(= a2◂ [ a30◂ [ a18◂ [ ]{| l |}]] ) 
; » _^ .. ⊢ ..
; .. //
	mov rdi,0
	mov rsi,r13
	imul rsi,1
	add rdi,rsi 
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[r8]
	add rdi,rax 
	push rax
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[r14]
	add rdi,rax 
	push rax
	add rdi,9
	push rdi 
	call mlc_s8
	pop rdi
	mov r10,rax
	lea rdi,[rax+7+rdi]
	std 
	mov QWORD [tmp],rcx 
	pop rcx
	lea rsi,[r14+7+rcx]
	rep movsb
	pop rcx
	lea rsi,[r8+7+rcx]
	rep movsb
	lea rsi,[LB_626+9-1]
	mov rcx,9
	rep movsb
	mov rax,r13
LB_628:
	cmp rax,0
	jz LB_629
	sub rax,1
	lea rsi,[LB_627+1-1]
	mov rcx,1
	rep movsb 
	jmp LB_628
LB_629:
	mov rcx,QWORD [tmp] 
;; rsp=0 , %612~4'(= {| l |} ) %611~2'(= {| l |} ) %610~1'(= {| l |} ) %609~0'(= r ) %598~3'(= a2◂ [ a30◂ [ a18◂ [ ]{| l |}]] ) 
; ∎ { 0'(= r ) 4'(= {| l |} ) }
; .dlt.ptn 2'(= {| l |} )
	mov rdi,r8
	C_PUSH_REGS
	mov r8,rdi
	mov rdi,r8
	call free_s8
	C_POP_REGS
; .dlt.ptn 1'(= {| l |} )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	mov rdi,r8
	call free_s8
	C_POP_REGS
; .dlt.ptn 3'(= a2◂ [ a30◂ [ a18◂ [ ]{| l |}]] )
	mov rdi,r9
	C_PUSH_REGS
	mov r8,rdi
	call LB_630
	C_POP_REGS
; .mov_ptn2 { 0'(= r ) 4'(= {| l |} ) } ⊢ { 0'(= r ) 1'(= {| l |} ) }
; .mov_ptn 4'(= {| l |} ) ⊢ 1'(= {| l |} )
	mov rax,r10
	mov r14,rax
	ret
LB_623:
;; ? 4'(= a29◂ [ a18◂ [ ]{| l |}] ) ⊢ 1(<3)◂{ 2'(= a17◂ [ a21◂ [ a18◂ [ ]{| l |}]] ) 5'(= a16◂ [ *{ a17◂ [ a23◂ [ a18◂ [ ]{| l |}]]a2◂ [ a30◂ [ a18◂ [ ]{| l |}]]a29◂ [ a18◂ [ ]{| l |}]}] ) }
	mov rdi,r10
	cmp BYTE [rdi+6],1
	jnz LB_647
	jmp LB_648
LB_647:
	jmp LB_646
LB_648:
	mov r8, QWORD [r10+8]
	mov r11, QWORD [r10+16]
	mov QWORD [GBG_VCT+8*0],r10
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_RCD 2,rdi
;; rsp=0 , %605~5'(= a16◂ [ *{ a17◂ [ a23◂ [ a18◂ [ ]{| l |}]]a2◂ [ a30◂ [ a18◂ [ ]{| l |}]]a29◂ [ a18◂ [ ]{| l |}]}] ) %604~2'(= a17◂ [ a21◂ [ a18◂ [ ]{| l |}]] ) %602~1'(= {| l |} ) %601~0'(= r ) %598~3'(= a2◂ [ a30◂ [ a18◂ [ ]{| l |}]] ) 
; #102 2'(= a17◂ [ a21◂ [ a18◂ [ ]{| l |}]] ) ⊢ 2'(= {| l |} )
	sub rsp,32
	mov QWORD [rsp+8*0],r13
	mov QWORD [rsp+8*1],r14
	mov QWORD [rsp+8*2],r9
	mov QWORD [rsp+8*3],r11
; .mov_ptn2 2'(= a17◂ [ a21◂ [ a18◂ [ ]{| l |}]] ) ⊢ 0'(= a17◂ [ a21◂ [ a18◂ [ ]{| l |}]] )
; .mov_ptn 2'(= a17◂ [ a21◂ [ a18◂ [ ]{| l |}]] ) ⊢ 0'(= a17◂ [ a21◂ [ a18◂ [ ]{| l |}]] )
	mov rax,r8
	mov r13,rax
	call ETR_102
	mov r11,QWORD [rsp-8+8*4]
	mov r9,QWORD [rsp-8+8*3]
	mov r14,QWORD [rsp-8+8*2]
	mov r8,r13
	mov r13,QWORD [rsp-8+8*1]
	add rsp,32
;; rsp=0 , %613~2'(= {| l |} ) %605~5'(= a16◂ [ *{ a17◂ [ a23◂ [ a18◂ [ ]{| l |}]]a2◂ [ a30◂ [ a18◂ [ ]{| l |}]]a29◂ [ a18◂ [ ]{| l |}]}] ) %602~1'(= {| l |} ) %601~0'(= r ) %598~3'(= a2◂ [ a30◂ [ a18◂ [ ]{| l |}]] ) 
; #140 { 0'(= r ) 5'(= a16◂ [ *{ a17◂ [ a23◂ [ a18◂ [ ]{| l |}]]a2◂ [ a30◂ [ a18◂ [ ]{| l |}]]a29◂ [ a18◂ [ ]{| l |}]}] ) } ⊢ { 0'(= r ) 4'(= {| l |} ) }
	sub rsp,24
	mov QWORD [rsp+8*0],r14
	mov QWORD [rsp+8*1],r8
	mov QWORD [rsp+8*2],r9
; .mov_ptn2 { 0'(= r ) 5'(= a16◂ [ *{ a17◂ [ a23◂ [ a18◂ [ ]{| l |}]]a2◂ [ a30◂ [ a18◂ [ ]{| l |}]]a29◂ [ a18◂ [ ]{| l |}]}] ) } ⊢ { 0'(= r ) 1'(= a16◂ [ *{ a17◂ [ a23◂ [ a18◂ [ ]{| l |}]]a2◂ [ a30◂ [ a18◂ [ ]{| l |}]]a29◂ [ a18◂ [ ]{| l |}]}] ) }
; .mov_ptn 5'(= a16◂ [ *{ a17◂ [ a23◂ [ a18◂ [ ]{| l |}]]a2◂ [ a30◂ [ a18◂ [ ]{| l |}]]a29◂ [ a18◂ [ ]{| l |}]}] ) ⊢ 1'(= a16◂ [ *{ a17◂ [ a23◂ [ a18◂ [ ]{| l |}]]a2◂ [ a30◂ [ a18◂ [ ]{| l |}]]a29◂ [ a18◂ [ ]{| l |}]}] )
	mov rax,r11
	mov r14,rax
	call ETR_140
	mov r9,QWORD [rsp-8+8*3]
	mov r8,QWORD [rsp-8+8*2]
	mov r10,r14
	mov r14,QWORD [rsp-8+8*1]
	add rsp,24
;; rsp=0 , %615~4'(= {| l |} ) %614~0'(= r ) %613~2'(= {| l |} ) %602~1'(= {| l |} ) %598~3'(= a2◂ [ a30◂ [ a18◂ [ ]{| l |}]] ) 
; » _^ .. ⊢ ..
; .. //
	mov rdi,0
	mov rsi,r13
	imul rsi,1
	add rdi,rsi 
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[r8]
	add rdi,rax 
	push rax
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[r10]
	add rdi,rax 
	push rax
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[r14]
	add rdi,rax 
	push rax
	add rdi,14
	push rdi 
	call mlc_s8
	pop rdi
	mov r11,rax
	lea rdi,[rax+7+rdi]
	std 
	mov QWORD [tmp],rcx 
	pop rcx
	lea rsi,[r14+7+rcx]
	rep movsb
	pop rcx
	lea rsi,[r10+7+rcx]
	rep movsb
	lea rsi,[LB_649+5-1]
	mov rcx,5
	rep movsb
	pop rcx
	lea rsi,[r8+7+rcx]
	rep movsb
	lea rsi,[LB_650+9-1]
	mov rcx,9
	rep movsb
	mov rax,r13
LB_652:
	cmp rax,0
	jz LB_653
	sub rax,1
	lea rsi,[LB_651+1-1]
	mov rcx,1
	rep movsb 
	jmp LB_652
LB_653:
	mov rcx,QWORD [tmp] 
;; rsp=0 , %620~5'(= {| l |} ) %619~4'(= {| l |} ) %618~1'(= {| l |} ) %617~2'(= {| l |} ) %616~0'(= r ) %598~3'(= a2◂ [ a30◂ [ a18◂ [ ]{| l |}]] ) 
; ∎ { 0'(= r ) 5'(= {| l |} ) }
; .dlt.ptn 4'(= {| l |} )
	mov rdi,r10
	C_PUSH_REGS
	mov r8,rdi
	mov rdi,r8
	call free_s8
	C_POP_REGS
; .dlt.ptn 1'(= {| l |} )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	mov rdi,r8
	call free_s8
	C_POP_REGS
; .dlt.ptn 2'(= {| l |} )
	mov rdi,r8
	C_PUSH_REGS
	mov r8,rdi
	mov rdi,r8
	call free_s8
	C_POP_REGS
; .dlt.ptn 3'(= a2◂ [ a30◂ [ a18◂ [ ]{| l |}]] )
	mov rdi,r9
	C_PUSH_REGS
	mov r8,rdi
	call LB_630
	C_POP_REGS
; .mov_ptn2 { 0'(= r ) 5'(= {| l |} ) } ⊢ { 0'(= r ) 1'(= {| l |} ) }
; .mov_ptn 5'(= {| l |} ) ⊢ 1'(= {| l |} )
	mov rax,r11
	mov r14,rax
	ret
LB_646:
;; ?. 4'(= a29◂ [ a18◂ [ ]{| l |}] ) ⊢ 2(<3)◂2'(= a26◂ [ a18◂ [ ]{| l |}] )
	mov QWORD [GBG_VCT+8*0],rdi
	mov r8,QWORD [rdi+8]
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_LN rdi
;; rsp=0 , %603~2'(= a26◂ [ a18◂ [ ]{| l |}] ) %602~1'(= {| l |} ) %601~0'(= r ) %598~3'(= a2◂ [ a30◂ [ a18◂ [ ]{| l |}]] ) 
; #11 0'(= r ) ⊢ 0'(= r )
	add r13,1
;; rsp=0 , %621~0'(= r ) %603~2'(= a26◂ [ a18◂ [ ]{| l |}] ) %602~1'(= {| l |} ) %598~3'(= a2◂ [ a30◂ [ a18◂ [ ]{| l |}]] ) 
; #137 { 0'(= r ) 2'(= a26◂ [ a18◂ [ ]{| l |}] ) } ⊢ { 0'(= r ) 2'(= {| l |} ) }
	sub rsp,16
	mov QWORD [rsp+8*0],r14
	mov QWORD [rsp+8*1],r9
; .mov_ptn2 { 0'(= r ) 2'(= a26◂ [ a18◂ [ ]{| l |}] ) } ⊢ { 0'(= r ) 1'(= a26◂ [ a18◂ [ ]{| l |}] ) }
; .mov_ptn 2'(= a26◂ [ a18◂ [ ]{| l |}] ) ⊢ 1'(= a26◂ [ a18◂ [ ]{| l |}] )
	mov rax,r8
	mov r14,rax
	call ETR_137
	mov r9,QWORD [rsp-8+8*2]
	mov r8,r14
	mov r14,QWORD [rsp-8+8*1]
	add rsp,16
;; rsp=0 , %623~2'(= {| l |} ) %622~0'(= r ) %602~1'(= {| l |} ) %598~3'(= a2◂ [ a30◂ [ a18◂ [ ]{| l |}]] ) 
; #12 0'(= r ) ⊢ 0'(= r )
	sub r13,1
;; rsp=0 , %624~0'(= r ) %623~2'(= {| l |} ) %602~1'(= {| l |} ) %598~3'(= a2◂ [ a30◂ [ a18◂ [ ]{| l |}]] ) 
; » _^ .. ⊢ ..
; .. //
	mov rdi,0
	mov rsi,r13
	imul rsi,1
	add rdi,rsi 
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[r8]
	add rdi,rax 
	push rax
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[r14]
	add rdi,rax 
	push rax
	add rdi,9
	push rdi 
	call mlc_s8
	pop rdi
	mov r10,rax
	lea rdi,[rax+7+rdi]
	std 
	mov QWORD [tmp],rcx 
	pop rcx
	lea rsi,[r14+7+rcx]
	rep movsb
	pop rcx
	lea rsi,[r8+7+rcx]
	rep movsb
	lea rsi,[LB_654+9-1]
	mov rcx,9
	rep movsb
	mov rax,r13
LB_656:
	cmp rax,0
	jz LB_657
	sub rax,1
	lea rsi,[LB_655+1-1]
	mov rcx,1
	rep movsb 
	jmp LB_656
LB_657:
	mov rcx,QWORD [tmp] 
;; rsp=0 , %628~4'(= {| l |} ) %627~2'(= {| l |} ) %626~1'(= {| l |} ) %625~0'(= r ) %598~3'(= a2◂ [ a30◂ [ a18◂ [ ]{| l |}]] ) 
; ∎ { 0'(= r ) 4'(= {| l |} ) }
; .dlt.ptn 2'(= {| l |} )
	mov rdi,r8
	C_PUSH_REGS
	mov r8,rdi
	mov rdi,r8
	call free_s8
	C_POP_REGS
; .dlt.ptn 1'(= {| l |} )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	mov rdi,r8
	call free_s8
	C_POP_REGS
; .dlt.ptn 3'(= a2◂ [ a30◂ [ a18◂ [ ]{| l |}]] )
	mov rdi,r9
	C_PUSH_REGS
	mov r8,rdi
	call LB_630
	C_POP_REGS
; .mov_ptn2 { 0'(= r ) 4'(= {| l |} ) } ⊢ { 0'(= r ) 1'(= {| l |} ) }
; .mov_ptn 4'(= {| l |} ) ⊢ 1'(= {| l |} )
	mov rax,r10
	mov r14,rax
	ret
LB_620:
;; ?; 1'(= a16◂ [ *{ a2◂ [ a30◂ [ a18◂ [ ]{| l |}]]a29◂ [ a18◂ [ ]{| l |}]}] ) ⊢ 1(<2)◂{ 2'(= a2◂ [ a30◂ [ a18◂ [ ]{| l |}]] ) 3'(= a29◂ [ a18◂ [ ]{| l |}] ) }
	mov r8, QWORD [r14+8]
	mov r9, QWORD [r14+16]
	mov QWORD [GBG_VCT+8*0],r14
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_RCD 2,rdi
;; rsp=0 , %630~3'(= a29◂ [ a18◂ [ ]{| l |}] ) %629~2'(= a2◂ [ a30◂ [ a18◂ [ ]{| l |}]] ) %596~0'(= r ) 
;; ?; 3'(= a29◂ [ a18◂ [ ]{| l |}] ) ⊢ 0(<3)◂1'(= a16◂ [ *{ a2◂ [ a30◂ [ a18◂ [ ]{| l |}]]a29◂ [ a18◂ [ ]{| l |}]}] )
	mov rdi,r9
	cmp BYTE [rdi+6],0
	jnz LB_659
	jmp LB_660
LB_659:
	jmp LB_658
LB_660:
	mov QWORD [GBG_VCT+8*0],rdi
	mov r14,QWORD [rdi+8]
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_LN rdi
;; rsp=0 , %631~1'(= a16◂ [ *{ a2◂ [ a30◂ [ a18◂ [ ]{| l |}]]a29◂ [ a18◂ [ ]{| l |}]}] ) %629~2'(= a2◂ [ a30◂ [ a18◂ [ ]{| l |}]] ) %596~0'(= r ) 
; #139 { 0'(= r ) 1'(= a16◂ [ *{ a2◂ [ a30◂ [ a18◂ [ ]{| l |}]]a29◂ [ a18◂ [ ]{| l |}]}] ) } ⊢ { 0'(= r ) 1'(= {| l |} ) }
	sub rsp,8
	mov QWORD [rsp+8*0],r8
; .mov_ptn2 { 0'(= r ) 1'(= a16◂ [ *{ a2◂ [ a30◂ [ a18◂ [ ]{| l |}]]a29◂ [ a18◂ [ ]{| l |}]}] ) } ⊢ { 0'(= r ) 1'(= a16◂ [ *{ a2◂ [ a30◂ [ a18◂ [ ]{| l |}]]a29◂ [ a18◂ [ ]{| l |}]}] ) }
	call ETR_139
	mov r8,QWORD [rsp-8+8*1]
	add rsp,8
;; rsp=0 , %633~1'(= {| l |} ) %632~0'(= r ) %629~2'(= a2◂ [ a30◂ [ a18◂ [ ]{| l |}]] ) 
; » _^ .. ⊢ ..
; .. //
	mov rdi,0
	mov rsi,r13
	imul rsi,1
	add rdi,rsi 
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[r14]
	add rdi,rax 
	push rax
	add rdi,10
	push rdi 
	call mlc_s8
	pop rdi
	mov r9,rax
	lea rdi,[rax+7+rdi]
	std 
	mov QWORD [tmp],rcx 
	pop rcx
	lea rsi,[r14+7+rcx]
	rep movsb
	lea rsi,[LB_661+10-1]
	mov rcx,10
	rep movsb
	mov rax,r13
LB_663:
	cmp rax,0
	jz LB_664
	sub rax,1
	lea rsi,[LB_662+1-1]
	mov rcx,1
	rep movsb 
	jmp LB_663
LB_664:
	mov rcx,QWORD [tmp] 
;; rsp=0 , %636~3'(= {| l |} ) %635~1'(= {| l |} ) %634~0'(= r ) %629~2'(= a2◂ [ a30◂ [ a18◂ [ ]{| l |}]] ) 
; ∎ { 0'(= r ) 3'(= {| l |} ) }
; .dlt.ptn 1'(= {| l |} )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	mov rdi,r8
	call free_s8
	C_POP_REGS
; .dlt.ptn 2'(= a2◂ [ a30◂ [ a18◂ [ ]{| l |}]] )
	mov rdi,r8
	C_PUSH_REGS
	mov r8,rdi
	call LB_630
	C_POP_REGS
; .mov_ptn2 { 0'(= r ) 3'(= {| l |} ) } ⊢ { 0'(= r ) 1'(= {| l |} ) }
; .mov_ptn 3'(= {| l |} ) ⊢ 1'(= {| l |} )
	mov rax,r9
	mov r14,rax
	ret
LB_658:
;; ?; 3'(= a29◂ [ a18◂ [ ]{| l |}] ) ⊢ 1(<3)◂{ 1'(= a17◂ [ a21◂ [ a18◂ [ ]{| l |}]] ) 4'(= a16◂ [ *{ a17◂ [ a23◂ [ a18◂ [ ]{| l |}]]a2◂ [ a30◂ [ a18◂ [ ]{| l |}]]a29◂ [ a18◂ [ ]{| l |}]}] ) }
	mov rdi,r9
	cmp BYTE [rdi+6],1
	jnz LB_666
	jmp LB_667
LB_666:
	jmp LB_665
LB_667:
	mov r14, QWORD [r9+8]
	mov r10, QWORD [r9+16]
	mov QWORD [GBG_VCT+8*0],r9
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_RCD 2,rdi
;; rsp=0 , %638~4'(= a16◂ [ *{ a17◂ [ a23◂ [ a18◂ [ ]{| l |}]]a2◂ [ a30◂ [ a18◂ [ ]{| l |}]]a29◂ [ a18◂ [ ]{| l |}]}] ) %637~1'(= a17◂ [ a21◂ [ a18◂ [ ]{| l |}]] ) %629~2'(= a2◂ [ a30◂ [ a18◂ [ ]{| l |}]] ) %596~0'(= r ) 
; #102 1'(= a17◂ [ a21◂ [ a18◂ [ ]{| l |}]] ) ⊢ 1'(= {| l |} )
	sub rsp,24
	mov QWORD [rsp+8*0],r13
	mov QWORD [rsp+8*1],r8
	mov QWORD [rsp+8*2],r10
; .mov_ptn2 1'(= a17◂ [ a21◂ [ a18◂ [ ]{| l |}]] ) ⊢ 0'(= a17◂ [ a21◂ [ a18◂ [ ]{| l |}]] )
; .mov_ptn 1'(= a17◂ [ a21◂ [ a18◂ [ ]{| l |}]] ) ⊢ 0'(= a17◂ [ a21◂ [ a18◂ [ ]{| l |}]] )
	mov rax,r14
	mov r13,rax
	call ETR_102
	mov r10,QWORD [rsp-8+8*3]
	mov r8,QWORD [rsp-8+8*2]
	mov r14,r13
	mov r13,QWORD [rsp-8+8*1]
	add rsp,24
;; rsp=0 , %639~1'(= {| l |} ) %638~4'(= a16◂ [ *{ a17◂ [ a23◂ [ a18◂ [ ]{| l |}]]a2◂ [ a30◂ [ a18◂ [ ]{| l |}]]a29◂ [ a18◂ [ ]{| l |}]}] ) %629~2'(= a2◂ [ a30◂ [ a18◂ [ ]{| l |}]] ) %596~0'(= r ) 
; #140 { 0'(= r ) 4'(= a16◂ [ *{ a17◂ [ a23◂ [ a18◂ [ ]{| l |}]]a2◂ [ a30◂ [ a18◂ [ ]{| l |}]]a29◂ [ a18◂ [ ]{| l |}]}] ) } ⊢ { 0'(= r ) 3'(= {| l |} ) }
	sub rsp,16
	mov QWORD [rsp+8*0],r14
	mov QWORD [rsp+8*1],r8
; .mov_ptn2 { 0'(= r ) 4'(= a16◂ [ *{ a17◂ [ a23◂ [ a18◂ [ ]{| l |}]]a2◂ [ a30◂ [ a18◂ [ ]{| l |}]]a29◂ [ a18◂ [ ]{| l |}]}] ) } ⊢ { 0'(= r ) 1'(= a16◂ [ *{ a17◂ [ a23◂ [ a18◂ [ ]{| l |}]]a2◂ [ a30◂ [ a18◂ [ ]{| l |}]]a29◂ [ a18◂ [ ]{| l |}]}] ) }
; .mov_ptn 4'(= a16◂ [ *{ a17◂ [ a23◂ [ a18◂ [ ]{| l |}]]a2◂ [ a30◂ [ a18◂ [ ]{| l |}]]a29◂ [ a18◂ [ ]{| l |}]}] ) ⊢ 1'(= a16◂ [ *{ a17◂ [ a23◂ [ a18◂ [ ]{| l |}]]a2◂ [ a30◂ [ a18◂ [ ]{| l |}]]a29◂ [ a18◂ [ ]{| l |}]}] )
	mov rax,r10
	mov r14,rax
	call ETR_140
	mov r8,QWORD [rsp-8+8*2]
	mov r9,r14
	mov r14,QWORD [rsp-8+8*1]
	add rsp,16
;; rsp=0 , %641~3'(= {| l |} ) %640~0'(= r ) %639~1'(= {| l |} ) %629~2'(= a2◂ [ a30◂ [ a18◂ [ ]{| l |}]] ) 
; » _^ .. ⊢ ..
; .. //
	mov rdi,0
	mov rsi,r13
	imul rsi,1
	add rdi,rsi 
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[r14]
	add rdi,rax 
	push rax
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[r9]
	add rdi,rax 
	push rax
	add rdi,14
	push rdi 
	call mlc_s8
	pop rdi
	mov r10,rax
	lea rdi,[rax+7+rdi]
	std 
	mov QWORD [tmp],rcx 
	pop rcx
	lea rsi,[r9+7+rcx]
	rep movsb
	lea rsi,[LB_668+5-1]
	mov rcx,5
	rep movsb
	pop rcx
	lea rsi,[r14+7+rcx]
	rep movsb
	lea rsi,[LB_669+9-1]
	mov rcx,9
	rep movsb
	mov rax,r13
LB_671:
	cmp rax,0
	jz LB_672
	sub rax,1
	lea rsi,[LB_670+1-1]
	mov rcx,1
	rep movsb 
	jmp LB_671
LB_672:
	mov rcx,QWORD [tmp] 
;; rsp=0 , %645~4'(= {| l |} ) %644~3'(= {| l |} ) %643~1'(= {| l |} ) %642~0'(= r ) %629~2'(= a2◂ [ a30◂ [ a18◂ [ ]{| l |}]] ) 
; ∎ { 0'(= r ) 4'(= {| l |} ) }
; .dlt.ptn 3'(= {| l |} )
	mov rdi,r9
	C_PUSH_REGS
	mov r8,rdi
	mov rdi,r8
	call free_s8
	C_POP_REGS
; .dlt.ptn 1'(= {| l |} )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	mov rdi,r8
	call free_s8
	C_POP_REGS
; .dlt.ptn 2'(= a2◂ [ a30◂ [ a18◂ [ ]{| l |}]] )
	mov rdi,r8
	C_PUSH_REGS
	mov r8,rdi
	call LB_630
	C_POP_REGS
; .mov_ptn2 { 0'(= r ) 4'(= {| l |} ) } ⊢ { 0'(= r ) 1'(= {| l |} ) }
; .mov_ptn 4'(= {| l |} ) ⊢ 1'(= {| l |} )
	mov rax,r10
	mov r14,rax
	ret
LB_665:
;; ?; 3'(= a29◂ [ a18◂ [ ]{| l |}] ) ⊢ 2(<3)◂1'(= a26◂ [ a18◂ [ ]{| l |}] )
	mov QWORD [GBG_VCT+8*0],rdi
	mov r14,QWORD [rdi+8]
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_LN rdi
;; rsp=0 , %646~1'(= a26◂ [ a18◂ [ ]{| l |}] ) %629~2'(= a2◂ [ a30◂ [ a18◂ [ ]{| l |}]] ) %596~0'(= r ) 
; #11 0'(= r ) ⊢ 0'(= r )
	add r13,1
;; rsp=0 , %647~0'(= r ) %646~1'(= a26◂ [ a18◂ [ ]{| l |}] ) %629~2'(= a2◂ [ a30◂ [ a18◂ [ ]{| l |}]] ) 
; #137 { 0'(= r ) 1'(= a26◂ [ a18◂ [ ]{| l |}] ) } ⊢ { 0'(= r ) 1'(= {| l |} ) }
	sub rsp,8
	mov QWORD [rsp+8*0],r8
; .mov_ptn2 { 0'(= r ) 1'(= a26◂ [ a18◂ [ ]{| l |}] ) } ⊢ { 0'(= r ) 1'(= a26◂ [ a18◂ [ ]{| l |}] ) }
	call ETR_137
	mov r8,QWORD [rsp-8+8*1]
	add rsp,8
;; rsp=0 , %649~1'(= {| l |} ) %648~0'(= r ) %629~2'(= a2◂ [ a30◂ [ a18◂ [ ]{| l |}]] ) 
; #12 0'(= r ) ⊢ 0'(= r )
	sub r13,1
;; rsp=0 , %650~0'(= r ) %649~1'(= {| l |} ) %629~2'(= a2◂ [ a30◂ [ a18◂ [ ]{| l |}]] ) 
; » _^ .. ⊢ ..
; .. //
	mov rdi,0
	mov rsi,r13
	imul rsi,1
	add rdi,rsi 
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[r14]
	add rdi,rax 
	push rax
	add rdi,10
	push rdi 
	call mlc_s8
	pop rdi
	mov r9,rax
	lea rdi,[rax+7+rdi]
	std 
	mov QWORD [tmp],rcx 
	pop rcx
	lea rsi,[r14+7+rcx]
	rep movsb
	lea rsi,[LB_673+10-1]
	mov rcx,10
	rep movsb
	mov rax,r13
LB_675:
	cmp rax,0
	jz LB_676
	sub rax,1
	lea rsi,[LB_674+1-1]
	mov rcx,1
	rep movsb 
	jmp LB_675
LB_676:
	mov rcx,QWORD [tmp] 
;; rsp=0 , %653~3'(= {| l |} ) %652~1'(= {| l |} ) %651~0'(= r ) %629~2'(= a2◂ [ a30◂ [ a18◂ [ ]{| l |}]] ) 
; ∎ { 0'(= r ) 3'(= {| l |} ) }
; .dlt.ptn 1'(= {| l |} )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	mov rdi,r8
	call free_s8
	C_POP_REGS
; .dlt.ptn 2'(= a2◂ [ a30◂ [ a18◂ [ ]{| l |}]] )
	mov rdi,r8
	C_PUSH_REGS
	mov r8,rdi
	call LB_630
	C_POP_REGS
; .mov_ptn2 { 0'(= r ) 3'(= {| l |} ) } ⊢ { 0'(= r ) 1'(= {| l |} ) }
; .mov_ptn 3'(= {| l |} ) ⊢ 1'(= {| l |} )
	mov rax,r9
	mov r14,rax
	ret
ETR_140: ;; pnt_lc_id_mtc { 0'(= r ) 1'(= a16◂ [ *{ a17◂ [ a23◂ [ a18◂ [ ]{| l |}]]a2◂ [ a30◂ [ a18◂ [ ]{| l |}]]a29◂ [ a18◂ [ ]{| l |}]}] ) } ⊢ { 0'(= r ) 1'(= {| l |} ) } : ({ _r64 _t16◂{ _t17◂_t23◂_s8◂_t18 _lst◂_t30◂_s8◂_t18 _t29◂_s8◂_t18 } }→{ _r64 _s8 })
;; rsp=0 , %655~1'(= a16◂ [ *{ a17◂ [ a23◂ [ a18◂ [ ]{| l |}]]a2◂ [ a30◂ [ a18◂ [ ]{| l |}]]a29◂ [ a18◂ [ ]{| l |}]}] ) %654~0'(= r ) 
;; ?; 1'(= a16◂ [ *{ a17◂ [ a23◂ [ a18◂ [ ]{| l |}]]a2◂ [ a30◂ [ a18◂ [ ]{| l |}]]a29◂ [ a18◂ [ ]{| l |}]}] ) ⊢ 0(<2)◂{ { 3'(= a17◂ [ a23◂ [ a18◂ [ ]{| l |}]] ) 4'(= a2◂ [ a30◂ [ a18◂ [ ]{| l |}]] ) 5'(= a29◂ [ a18◂ [ ]{| l |}] ) } 6'(= a16◂ [ *{ a17◂ [ a23◂ [ a18◂ [ ]{| l |}]]a2◂ [ a30◂ [ a18◂ [ ]{| l |}]]a29◂ [ a18◂ [ ]{| l |}]}] ) }
	mov rdi,r14
	cmp BYTE [rdi+6],0
	jnz LB_678
	jmp LB_679
LB_678:
	jmp LB_677
LB_679:
	mov r8, QWORD [r14+8]
	mov r9, QWORD [r8+8]
	mov r10, QWORD [r8+16]
	mov r11, QWORD [r8+24]
	mov QWORD [GBG_VCT+8*0],r8
	mov rcx, QWORD [r14+16]
	mov QWORD [GBG_VCT+8*1],r14
	mov rdi,QWORD [GBG_VCT+8*1]
	FREE_RCD 2,rdi
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_RCD 3,rdi
;; rsp=0 , %659~6'(= a16◂ [ *{ a17◂ [ a23◂ [ a18◂ [ ]{| l |}]]a2◂ [ a30◂ [ a18◂ [ ]{| l |}]]a29◂ [ a18◂ [ ]{| l |}]}] ) %658~5'(= a29◂ [ a18◂ [ ]{| l |}] ) %657~4'(= a2◂ [ a30◂ [ a18◂ [ ]{| l |}]] ) %656~3'(= a17◂ [ a23◂ [ a18◂ [ ]{| l |}]] ) %654~0'(= r ) 
; #106 3'(= a17◂ [ a23◂ [ a18◂ [ ]{| l |}]] ) ⊢ 1'(= {| l |} )
	sub rsp,32
	mov QWORD [rsp+8*0],r13
	mov QWORD [rsp+8*1],r10
	mov QWORD [rsp+8*2],r11
	mov QWORD [rsp+8*3],rcx
; .mov_ptn2 3'(= a17◂ [ a23◂ [ a18◂ [ ]{| l |}]] ) ⊢ 0'(= a17◂ [ a23◂ [ a18◂ [ ]{| l |}]] )
; .mov_ptn 3'(= a17◂ [ a23◂ [ a18◂ [ ]{| l |}]] ) ⊢ 0'(= a17◂ [ a23◂ [ a18◂ [ ]{| l |}]] )
	mov rax,r9
	mov r13,rax
	call ETR_106
	mov rcx,QWORD [rsp-8+8*4]
	mov r11,QWORD [rsp-8+8*3]
	mov r10,QWORD [rsp-8+8*2]
	mov r14,r13
	mov r13,QWORD [rsp-8+8*1]
	add rsp,32
;; rsp=0 , %660~1'(= {| l |} ) %659~6'(= a16◂ [ *{ a17◂ [ a23◂ [ a18◂ [ ]{| l |}]]a2◂ [ a30◂ [ a18◂ [ ]{| l |}]]a29◂ [ a18◂ [ ]{| l |}]}] ) %658~5'(= a29◂ [ a18◂ [ ]{| l |}] ) %657~4'(= a2◂ [ a30◂ [ a18◂ [ ]{| l |}]] ) %654~0'(= r ) 
; #140 { 0'(= r ) 6'(= a16◂ [ *{ a17◂ [ a23◂ [ a18◂ [ ]{| l |}]]a2◂ [ a30◂ [ a18◂ [ ]{| l |}]]a29◂ [ a18◂ [ ]{| l |}]}] ) } ⊢ { 0'(= r ) 2'(= {| l |} ) }
	sub rsp,24
	mov QWORD [rsp+8*0],r14
	mov QWORD [rsp+8*1],r10
	mov QWORD [rsp+8*2],r11
; .mov_ptn2 { 0'(= r ) 6'(= a16◂ [ *{ a17◂ [ a23◂ [ a18◂ [ ]{| l |}]]a2◂ [ a30◂ [ a18◂ [ ]{| l |}]]a29◂ [ a18◂ [ ]{| l |}]}] ) } ⊢ { 0'(= r ) 1'(= a16◂ [ *{ a17◂ [ a23◂ [ a18◂ [ ]{| l |}]]a2◂ [ a30◂ [ a18◂ [ ]{| l |}]]a29◂ [ a18◂ [ ]{| l |}]}] ) }
; .mov_ptn 6'(= a16◂ [ *{ a17◂ [ a23◂ [ a18◂ [ ]{| l |}]]a2◂ [ a30◂ [ a18◂ [ ]{| l |}]]a29◂ [ a18◂ [ ]{| l |}]}] ) ⊢ 1'(= a16◂ [ *{ a17◂ [ a23◂ [ a18◂ [ ]{| l |}]]a2◂ [ a30◂ [ a18◂ [ ]{| l |}]]a29◂ [ a18◂ [ ]{| l |}]}] )
	mov rax,rcx
	mov r14,rax
	call ETR_140
	mov r11,QWORD [rsp-8+8*3]
	mov r10,QWORD [rsp-8+8*2]
	mov r8,r14
	mov r14,QWORD [rsp-8+8*1]
	add rsp,24
;; rsp=0 , %662~2'(= {| l |} ) %661~0'(= r ) %660~1'(= {| l |} ) %658~5'(= a29◂ [ a18◂ [ ]{| l |}] ) %657~4'(= a2◂ [ a30◂ [ a18◂ [ ]{| l |}]] ) 
;; ? 5'(= a29◂ [ a18◂ [ ]{| l |}] ) ⊢ 0(<3)◂3'(= a16◂ [ *{ a2◂ [ a30◂ [ a18◂ [ ]{| l |}]]a29◂ [ a18◂ [ ]{| l |}]}] )
	mov rdi,r11
	cmp BYTE [rdi+6],0
	jnz LB_681
	jmp LB_682
LB_681:
	jmp LB_680
LB_682:
	mov QWORD [GBG_VCT+8*0],rdi
	mov r9,QWORD [rdi+8]
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_LN rdi
;; rsp=0 , %666~3'(= a16◂ [ *{ a2◂ [ a30◂ [ a18◂ [ ]{| l |}]]a29◂ [ a18◂ [ ]{| l |}]}] ) %662~2'(= {| l |} ) %661~0'(= r ) %660~1'(= {| l |} ) %657~4'(= a2◂ [ a30◂ [ a18◂ [ ]{| l |}]] ) 
; #139 { 0'(= r ) 3'(= a16◂ [ *{ a2◂ [ a30◂ [ a18◂ [ ]{| l |}]]a29◂ [ a18◂ [ ]{| l |}]}] ) } ⊢ { 0'(= r ) 3'(= {| l |} ) }
	sub rsp,24
	mov QWORD [rsp+8*0],r14
	mov QWORD [rsp+8*1],r8
	mov QWORD [rsp+8*2],r10
; .mov_ptn2 { 0'(= r ) 3'(= a16◂ [ *{ a2◂ [ a30◂ [ a18◂ [ ]{| l |}]]a29◂ [ a18◂ [ ]{| l |}]}] ) } ⊢ { 0'(= r ) 1'(= a16◂ [ *{ a2◂ [ a30◂ [ a18◂ [ ]{| l |}]]a29◂ [ a18◂ [ ]{| l |}]}] ) }
; .mov_ptn 3'(= a16◂ [ *{ a2◂ [ a30◂ [ a18◂ [ ]{| l |}]]a29◂ [ a18◂ [ ]{| l |}]}] ) ⊢ 1'(= a16◂ [ *{ a2◂ [ a30◂ [ a18◂ [ ]{| l |}]]a29◂ [ a18◂ [ ]{| l |}]}] )
	mov rax,r9
	mov r14,rax
	call ETR_139
	mov r10,QWORD [rsp-8+8*3]
	mov r8,QWORD [rsp-8+8*2]
	mov r9,r14
	mov r14,QWORD [rsp-8+8*1]
	add rsp,24
;; rsp=0 , %668~3'(= {| l |} ) %667~0'(= r ) %662~2'(= {| l |} ) %660~1'(= {| l |} ) %657~4'(= a2◂ [ a30◂ [ a18◂ [ ]{| l |}]] ) 
; » _^ .. ⊢ ..
; .. //
	mov rdi,0
	mov rsi,r13
	imul rsi,1
	add rdi,rsi 
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[r14]
	add rdi,rax 
	push rax
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[r9]
	add rdi,rax 
	push rax
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[r8]
	add rdi,rax 
	push rax
	add rdi,9
	push rdi 
	call mlc_s8
	pop rdi
	mov r11,rax
	lea rdi,[rax+7+rdi]
	std 
	mov QWORD [tmp],rcx 
	pop rcx
	lea rsi,[r8+7+rcx]
	rep movsb
	pop rcx
	lea rsi,[r9+7+rcx]
	rep movsb
	lea rsi,[LB_683+5-1]
	mov rcx,5
	rep movsb
	pop rcx
	lea rsi,[r14+7+rcx]
	rep movsb
	lea rsi,[LB_684+4-1]
	mov rcx,4
	rep movsb
	mov rax,r13
LB_686:
	cmp rax,0
	jz LB_687
	sub rax,1
	lea rsi,[LB_685+1-1]
	mov rcx,1
	rep movsb 
	jmp LB_686
LB_687:
	mov rcx,QWORD [tmp] 
;; rsp=0 , %673~5'(= {| l |} ) %672~3'(= {| l |} ) %671~2'(= {| l |} ) %670~1'(= {| l |} ) %669~0'(= r ) %657~4'(= a2◂ [ a30◂ [ a18◂ [ ]{| l |}]] ) 
; ∎ { 0'(= r ) 5'(= {| l |} ) }
; .dlt.ptn 3'(= {| l |} )
	mov rdi,r9
	C_PUSH_REGS
	mov r8,rdi
	mov rdi,r8
	call free_s8
	C_POP_REGS
; .dlt.ptn 2'(= {| l |} )
	mov rdi,r8
	C_PUSH_REGS
	mov r8,rdi
	mov rdi,r8
	call free_s8
	C_POP_REGS
; .dlt.ptn 1'(= {| l |} )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	mov rdi,r8
	call free_s8
	C_POP_REGS
; .dlt.ptn 4'(= a2◂ [ a30◂ [ a18◂ [ ]{| l |}]] )
	mov rdi,r10
	C_PUSH_REGS
	mov r8,rdi
	call LB_630
	C_POP_REGS
; .mov_ptn2 { 0'(= r ) 5'(= {| l |} ) } ⊢ { 0'(= r ) 1'(= {| l |} ) }
; .mov_ptn 5'(= {| l |} ) ⊢ 1'(= {| l |} )
	mov rax,r11
	mov r14,rax
	ret
LB_680:
;; ? 5'(= a29◂ [ a18◂ [ ]{| l |}] ) ⊢ 1(<3)◂{ 3'(= a17◂ [ a21◂ [ a18◂ [ ]{| l |}]] ) 6'(= a16◂ [ *{ a17◂ [ a23◂ [ a18◂ [ ]{| l |}]]a2◂ [ a30◂ [ a18◂ [ ]{| l |}]]a29◂ [ a18◂ [ ]{| l |}]}] ) }
	mov rdi,r11
	cmp BYTE [rdi+6],1
	jnz LB_689
	jmp LB_690
LB_689:
	jmp LB_688
LB_690:
	mov r9, QWORD [r11+8]
	mov rcx, QWORD [r11+16]
	mov QWORD [GBG_VCT+8*0],r11
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_RCD 2,rdi
;; rsp=0 , %665~6'(= a16◂ [ *{ a17◂ [ a23◂ [ a18◂ [ ]{| l |}]]a2◂ [ a30◂ [ a18◂ [ ]{| l |}]]a29◂ [ a18◂ [ ]{| l |}]}] ) %664~3'(= a17◂ [ a21◂ [ a18◂ [ ]{| l |}]] ) %662~2'(= {| l |} ) %661~0'(= r ) %660~1'(= {| l |} ) %657~4'(= a2◂ [ a30◂ [ a18◂ [ ]{| l |}]] ) 
; #102 3'(= a17◂ [ a21◂ [ a18◂ [ ]{| l |}]] ) ⊢ 3'(= {| l |} )
	sub rsp,40
	mov QWORD [rsp+8*0],r13
	mov QWORD [rsp+8*1],r14
	mov QWORD [rsp+8*2],r8
	mov QWORD [rsp+8*3],r10
	mov QWORD [rsp+8*4],rcx
; .mov_ptn2 3'(= a17◂ [ a21◂ [ a18◂ [ ]{| l |}]] ) ⊢ 0'(= a17◂ [ a21◂ [ a18◂ [ ]{| l |}]] )
; .mov_ptn 3'(= a17◂ [ a21◂ [ a18◂ [ ]{| l |}]] ) ⊢ 0'(= a17◂ [ a21◂ [ a18◂ [ ]{| l |}]] )
	mov rax,r9
	mov r13,rax
	call ETR_102
	mov rcx,QWORD [rsp-8+8*5]
	mov r10,QWORD [rsp-8+8*4]
	mov r8,QWORD [rsp-8+8*3]
	mov r14,QWORD [rsp-8+8*2]
	mov r9,r13
	mov r13,QWORD [rsp-8+8*1]
	add rsp,40
;; rsp=0 , %674~3'(= {| l |} ) %665~6'(= a16◂ [ *{ a17◂ [ a23◂ [ a18◂ [ ]{| l |}]]a2◂ [ a30◂ [ a18◂ [ ]{| l |}]]a29◂ [ a18◂ [ ]{| l |}]}] ) %662~2'(= {| l |} ) %661~0'(= r ) %660~1'(= {| l |} ) %657~4'(= a2◂ [ a30◂ [ a18◂ [ ]{| l |}]] ) 
; #140 { 0'(= r ) 6'(= a16◂ [ *{ a17◂ [ a23◂ [ a18◂ [ ]{| l |}]]a2◂ [ a30◂ [ a18◂ [ ]{| l |}]]a29◂ [ a18◂ [ ]{| l |}]}] ) } ⊢ { 0'(= r ) 5'(= {| l |} ) }
	sub rsp,32
	mov QWORD [rsp+8*0],r14
	mov QWORD [rsp+8*1],r8
	mov QWORD [rsp+8*2],r9
	mov QWORD [rsp+8*3],r10
; .mov_ptn2 { 0'(= r ) 6'(= a16◂ [ *{ a17◂ [ a23◂ [ a18◂ [ ]{| l |}]]a2◂ [ a30◂ [ a18◂ [ ]{| l |}]]a29◂ [ a18◂ [ ]{| l |}]}] ) } ⊢ { 0'(= r ) 1'(= a16◂ [ *{ a17◂ [ a23◂ [ a18◂ [ ]{| l |}]]a2◂ [ a30◂ [ a18◂ [ ]{| l |}]]a29◂ [ a18◂ [ ]{| l |}]}] ) }
; .mov_ptn 6'(= a16◂ [ *{ a17◂ [ a23◂ [ a18◂ [ ]{| l |}]]a2◂ [ a30◂ [ a18◂ [ ]{| l |}]]a29◂ [ a18◂ [ ]{| l |}]}] ) ⊢ 1'(= a16◂ [ *{ a17◂ [ a23◂ [ a18◂ [ ]{| l |}]]a2◂ [ a30◂ [ a18◂ [ ]{| l |}]]a29◂ [ a18◂ [ ]{| l |}]}] )
	mov rax,rcx
	mov r14,rax
	call ETR_140
	mov r10,QWORD [rsp-8+8*4]
	mov r9,QWORD [rsp-8+8*3]
	mov r8,QWORD [rsp-8+8*2]
	mov r11,r14
	mov r14,QWORD [rsp-8+8*1]
	add rsp,32
;; rsp=0 , %676~5'(= {| l |} ) %675~0'(= r ) %674~3'(= {| l |} ) %662~2'(= {| l |} ) %660~1'(= {| l |} ) %657~4'(= a2◂ [ a30◂ [ a18◂ [ ]{| l |}]] ) 
; » _^ .. ⊢ ..
; .. //
	mov rdi,0
	mov rsi,r13
	imul rsi,1
	add rdi,rsi 
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[r9]
	add rdi,rax 
	push rax
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[r11]
	add rdi,rax 
	push rax
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[r8]
	add rdi,rax 
	push rax
	add rdi,14
	push rdi 
	call mlc_s8
	pop rdi
	mov rcx,rax
	lea rdi,[rax+7+rdi]
	std 
	mov QWORD [tmp],rcx 
	pop rcx
	lea rsi,[r8+7+rcx]
	rep movsb
	pop rcx
	lea rsi,[r11+7+rcx]
	rep movsb
	lea rsi,[LB_691+5-1]
	mov rcx,5
	rep movsb
	pop rcx
	lea rsi,[r9+7+rcx]
	rep movsb
	lea rsi,[LB_692+9-1]
	mov rcx,9
	rep movsb
	mov rax,r13
LB_694:
	cmp rax,0
	jz LB_695
	sub rax,1
	lea rsi,[LB_693+1-1]
	mov rcx,1
	rep movsb 
	jmp LB_694
LB_695:
	mov rcx,QWORD [tmp] 
;; rsp=0 , %681~6'(= {| l |} ) %680~5'(= {| l |} ) %679~2'(= {| l |} ) %678~3'(= {| l |} ) %677~0'(= r ) %660~1'(= {| l |} ) %657~4'(= a2◂ [ a30◂ [ a18◂ [ ]{| l |}]] ) 
; ∎ { 0'(= r ) 6'(= {| l |} ) }
; .dlt.ptn 5'(= {| l |} )
	mov rdi,r11
	C_PUSH_REGS
	mov r8,rdi
	mov rdi,r8
	call free_s8
	C_POP_REGS
; .dlt.ptn 2'(= {| l |} )
	mov rdi,r8
	C_PUSH_REGS
	mov r8,rdi
	mov rdi,r8
	call free_s8
	C_POP_REGS
; .dlt.ptn 3'(= {| l |} )
	mov rdi,r9
	C_PUSH_REGS
	mov r8,rdi
	mov rdi,r8
	call free_s8
	C_POP_REGS
; .dlt.ptn 1'(= {| l |} )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	mov rdi,r8
	call free_s8
	C_POP_REGS
; .dlt.ptn 4'(= a2◂ [ a30◂ [ a18◂ [ ]{| l |}]] )
	mov rdi,r10
	C_PUSH_REGS
	mov r8,rdi
	call LB_630
	C_POP_REGS
; .mov_ptn2 { 0'(= r ) 6'(= {| l |} ) } ⊢ { 0'(= r ) 1'(= {| l |} ) }
; .mov_ptn 6'(= {| l |} ) ⊢ 1'(= {| l |} )
	mov rax,rcx
	mov r14,rax
	ret
LB_688:
;; ?. 5'(= a29◂ [ a18◂ [ ]{| l |}] ) ⊢ 2(<3)◂3'(= a26◂ [ a18◂ [ ]{| l |}] )
	mov QWORD [GBG_VCT+8*0],rdi
	mov r9,QWORD [rdi+8]
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_LN rdi
;; rsp=0 , %663~3'(= a26◂ [ a18◂ [ ]{| l |}] ) %662~2'(= {| l |} ) %661~0'(= r ) %660~1'(= {| l |} ) %657~4'(= a2◂ [ a30◂ [ a18◂ [ ]{| l |}]] ) 
; #11 0'(= r ) ⊢ 0'(= r )
	add r13,1
;; rsp=0 , %682~0'(= r ) %663~3'(= a26◂ [ a18◂ [ ]{| l |}] ) %662~2'(= {| l |} ) %660~1'(= {| l |} ) %657~4'(= a2◂ [ a30◂ [ a18◂ [ ]{| l |}]] ) 
; #137 { 0'(= r ) 3'(= a26◂ [ a18◂ [ ]{| l |}] ) } ⊢ { 0'(= r ) 3'(= {| l |} ) }
	sub rsp,24
	mov QWORD [rsp+8*0],r14
	mov QWORD [rsp+8*1],r8
	mov QWORD [rsp+8*2],r10
; .mov_ptn2 { 0'(= r ) 3'(= a26◂ [ a18◂ [ ]{| l |}] ) } ⊢ { 0'(= r ) 1'(= a26◂ [ a18◂ [ ]{| l |}] ) }
; .mov_ptn 3'(= a26◂ [ a18◂ [ ]{| l |}] ) ⊢ 1'(= a26◂ [ a18◂ [ ]{| l |}] )
	mov rax,r9
	mov r14,rax
	call ETR_137
	mov r10,QWORD [rsp-8+8*3]
	mov r8,QWORD [rsp-8+8*2]
	mov r9,r14
	mov r14,QWORD [rsp-8+8*1]
	add rsp,24
;; rsp=0 , %684~3'(= {| l |} ) %683~0'(= r ) %662~2'(= {| l |} ) %660~1'(= {| l |} ) %657~4'(= a2◂ [ a30◂ [ a18◂ [ ]{| l |}]] ) 
; #12 0'(= r ) ⊢ 0'(= r )
	sub r13,1
;; rsp=0 , %685~0'(= r ) %684~3'(= {| l |} ) %662~2'(= {| l |} ) %660~1'(= {| l |} ) %657~4'(= a2◂ [ a30◂ [ a18◂ [ ]{| l |}]] ) 
; » _^ .. ⊢ ..
; .. //
	mov rdi,0
	mov rsi,r13
	imul rsi,1
	add rdi,rsi 
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[r9]
	add rdi,rax 
	push rax
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[r8]
	add rdi,rax 
	push rax
	add rdi,9
	push rdi 
	call mlc_s8
	pop rdi
	mov r11,rax
	lea rdi,[rax+7+rdi]
	std 
	mov QWORD [tmp],rcx 
	pop rcx
	lea rsi,[r8+7+rcx]
	rep movsb
	pop rcx
	lea rsi,[r9+7+rcx]
	rep movsb
	lea rsi,[LB_696+9-1]
	mov rcx,9
	rep movsb
	mov rax,r13
LB_698:
	cmp rax,0
	jz LB_699
	sub rax,1
	lea rsi,[LB_697+1-1]
	mov rcx,1
	rep movsb 
	jmp LB_698
LB_699:
	mov rcx,QWORD [tmp] 
;; rsp=0 , %689~5'(= {| l |} ) %688~3'(= {| l |} ) %687~2'(= {| l |} ) %686~0'(= r ) %660~1'(= {| l |} ) %657~4'(= a2◂ [ a30◂ [ a18◂ [ ]{| l |}]] ) 
; ∎ { 0'(= r ) 5'(= {| l |} ) }
; .dlt.ptn 3'(= {| l |} )
	mov rdi,r9
	C_PUSH_REGS
	mov r8,rdi
	mov rdi,r8
	call free_s8
	C_POP_REGS
; .dlt.ptn 2'(= {| l |} )
	mov rdi,r8
	C_PUSH_REGS
	mov r8,rdi
	mov rdi,r8
	call free_s8
	C_POP_REGS
; .dlt.ptn 1'(= {| l |} )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	mov rdi,r8
	call free_s8
	C_POP_REGS
; .dlt.ptn 4'(= a2◂ [ a30◂ [ a18◂ [ ]{| l |}]] )
	mov rdi,r10
	C_PUSH_REGS
	mov r8,rdi
	call LB_630
	C_POP_REGS
; .mov_ptn2 { 0'(= r ) 5'(= {| l |} ) } ⊢ { 0'(= r ) 1'(= {| l |} ) }
; .mov_ptn 5'(= {| l |} ) ⊢ 1'(= {| l |} )
	mov rax,r11
	mov r14,rax
	ret
LB_677:
;; ?; 1'(= a16◂ [ *{ a17◂ [ a23◂ [ a18◂ [ ]{| l |}]]a2◂ [ a30◂ [ a18◂ [ ]{| l |}]]a29◂ [ a18◂ [ ]{| l |}]}] ) ⊢ 1(<2)◂{ 2'(= a17◂ [ a23◂ [ a18◂ [ ]{| l |}]] ) 3'(= a2◂ [ a30◂ [ a18◂ [ ]{| l |}]] ) 4'(= a29◂ [ a18◂ [ ]{| l |}] ) }
	mov r8, QWORD [r14+8]
	mov r9, QWORD [r14+16]
	mov r10, QWORD [r14+24]
	mov QWORD [GBG_VCT+8*0],r14
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_RCD 3,rdi
;; rsp=0 , %692~4'(= a29◂ [ a18◂ [ ]{| l |}] ) %691~3'(= a2◂ [ a30◂ [ a18◂ [ ]{| l |}]] ) %690~2'(= a17◂ [ a23◂ [ a18◂ [ ]{| l |}]] ) %654~0'(= r ) 
;; ?; 4'(= a29◂ [ a18◂ [ ]{| l |}] ) ⊢ 0(<3)◂1'(= a16◂ [ *{ a2◂ [ a30◂ [ a18◂ [ ]{| l |}]]a29◂ [ a18◂ [ ]{| l |}]}] )
	mov rdi,r10
	cmp BYTE [rdi+6],0
	jnz LB_701
	jmp LB_702
LB_701:
	jmp LB_700
LB_702:
	mov QWORD [GBG_VCT+8*0],rdi
	mov r14,QWORD [rdi+8]
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_LN rdi
;; rsp=0 , %693~1'(= a16◂ [ *{ a2◂ [ a30◂ [ a18◂ [ ]{| l |}]]a29◂ [ a18◂ [ ]{| l |}]}] ) %691~3'(= a2◂ [ a30◂ [ a18◂ [ ]{| l |}]] ) %690~2'(= a17◂ [ a23◂ [ a18◂ [ ]{| l |}]] ) %654~0'(= r ) 
; #106 2'(= a17◂ [ a23◂ [ a18◂ [ ]{| l |}]] ) ⊢ 2'(= {| l |} )
	sub rsp,24
	mov QWORD [rsp+8*0],r13
	mov QWORD [rsp+8*1],r14
	mov QWORD [rsp+8*2],r9
; .mov_ptn2 2'(= a17◂ [ a23◂ [ a18◂ [ ]{| l |}]] ) ⊢ 0'(= a17◂ [ a23◂ [ a18◂ [ ]{| l |}]] )
; .mov_ptn 2'(= a17◂ [ a23◂ [ a18◂ [ ]{| l |}]] ) ⊢ 0'(= a17◂ [ a23◂ [ a18◂ [ ]{| l |}]] )
	mov rax,r8
	mov r13,rax
	call ETR_106
	mov r9,QWORD [rsp-8+8*3]
	mov r14,QWORD [rsp-8+8*2]
	mov r8,r13
	mov r13,QWORD [rsp-8+8*1]
	add rsp,24
;; rsp=0 , %694~2'(= {| l |} ) %693~1'(= a16◂ [ *{ a2◂ [ a30◂ [ a18◂ [ ]{| l |}]]a29◂ [ a18◂ [ ]{| l |}]}] ) %691~3'(= a2◂ [ a30◂ [ a18◂ [ ]{| l |}]] ) %654~0'(= r ) 
; #139 { 0'(= r ) 1'(= a16◂ [ *{ a2◂ [ a30◂ [ a18◂ [ ]{| l |}]]a29◂ [ a18◂ [ ]{| l |}]}] ) } ⊢ { 0'(= r ) 1'(= {| l |} ) }
	sub rsp,16
	mov QWORD [rsp+8*0],r8
	mov QWORD [rsp+8*1],r9
; .mov_ptn2 { 0'(= r ) 1'(= a16◂ [ *{ a2◂ [ a30◂ [ a18◂ [ ]{| l |}]]a29◂ [ a18◂ [ ]{| l |}]}] ) } ⊢ { 0'(= r ) 1'(= a16◂ [ *{ a2◂ [ a30◂ [ a18◂ [ ]{| l |}]]a29◂ [ a18◂ [ ]{| l |}]}] ) }
	call ETR_139
	mov r9,QWORD [rsp-8+8*2]
	mov r8,QWORD [rsp-8+8*1]
	add rsp,16
;; rsp=0 , %696~1'(= {| l |} ) %695~0'(= r ) %694~2'(= {| l |} ) %691~3'(= a2◂ [ a30◂ [ a18◂ [ ]{| l |}]] ) 
; » _^ .. ⊢ ..
; .. //
	mov rdi,0
	mov rsi,r13
	imul rsi,1
	add rdi,rsi 
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[r14]
	add rdi,rax 
	push rax
	add rdi,10
	push rdi 
	call mlc_s8
	pop rdi
	mov r10,rax
	lea rdi,[rax+7+rdi]
	std 
	mov QWORD [tmp],rcx 
	pop rcx
	lea rsi,[r14+7+rcx]
	rep movsb
	lea rsi,[LB_703+10-1]
	mov rcx,10
	rep movsb
	mov rax,r13
LB_705:
	cmp rax,0
	jz LB_706
	sub rax,1
	lea rsi,[LB_704+1-1]
	mov rcx,1
	rep movsb 
	jmp LB_705
LB_706:
	mov rcx,QWORD [tmp] 
;; rsp=0 , %699~4'(= {| l |} ) %698~1'(= {| l |} ) %697~0'(= r ) %694~2'(= {| l |} ) %691~3'(= a2◂ [ a30◂ [ a18◂ [ ]{| l |}]] ) 
; ∎ { 0'(= r ) 4'(= {| l |} ) }
; .dlt.ptn 1'(= {| l |} )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	mov rdi,r8
	call free_s8
	C_POP_REGS
; .dlt.ptn 2'(= {| l |} )
	mov rdi,r8
	C_PUSH_REGS
	mov r8,rdi
	mov rdi,r8
	call free_s8
	C_POP_REGS
; .dlt.ptn 3'(= a2◂ [ a30◂ [ a18◂ [ ]{| l |}]] )
	mov rdi,r9
	C_PUSH_REGS
	mov r8,rdi
	call LB_630
	C_POP_REGS
; .mov_ptn2 { 0'(= r ) 4'(= {| l |} ) } ⊢ { 0'(= r ) 1'(= {| l |} ) }
; .mov_ptn 4'(= {| l |} ) ⊢ 1'(= {| l |} )
	mov rax,r10
	mov r14,rax
	ret
LB_700:
;; ?; 4'(= a29◂ [ a18◂ [ ]{| l |}] ) ⊢ 1(<3)◂{ 1'(= a17◂ [ a21◂ [ a18◂ [ ]{| l |}]] ) 5'(= a16◂ [ *{ a17◂ [ a23◂ [ a18◂ [ ]{| l |}]]a2◂ [ a30◂ [ a18◂ [ ]{| l |}]]a29◂ [ a18◂ [ ]{| l |}]}] ) }
	mov rdi,r10
	cmp BYTE [rdi+6],1
	jnz LB_708
	jmp LB_709
LB_708:
	jmp LB_707
LB_709:
	mov r14, QWORD [r10+8]
	mov r11, QWORD [r10+16]
	mov QWORD [GBG_VCT+8*0],r10
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_RCD 2,rdi
;; rsp=0 , %701~5'(= a16◂ [ *{ a17◂ [ a23◂ [ a18◂ [ ]{| l |}]]a2◂ [ a30◂ [ a18◂ [ ]{| l |}]]a29◂ [ a18◂ [ ]{| l |}]}] ) %700~1'(= a17◂ [ a21◂ [ a18◂ [ ]{| l |}]] ) %691~3'(= a2◂ [ a30◂ [ a18◂ [ ]{| l |}]] ) %690~2'(= a17◂ [ a23◂ [ a18◂ [ ]{| l |}]] ) %654~0'(= r ) 
; #102 1'(= a17◂ [ a21◂ [ a18◂ [ ]{| l |}]] ) ⊢ 1'(= {| l |} )
	sub rsp,32
	mov QWORD [rsp+8*0],r13
	mov QWORD [rsp+8*1],r8
	mov QWORD [rsp+8*2],r9
	mov QWORD [rsp+8*3],r11
; .mov_ptn2 1'(= a17◂ [ a21◂ [ a18◂ [ ]{| l |}]] ) ⊢ 0'(= a17◂ [ a21◂ [ a18◂ [ ]{| l |}]] )
; .mov_ptn 1'(= a17◂ [ a21◂ [ a18◂ [ ]{| l |}]] ) ⊢ 0'(= a17◂ [ a21◂ [ a18◂ [ ]{| l |}]] )
	mov rax,r14
	mov r13,rax
	call ETR_102
	mov r11,QWORD [rsp-8+8*4]
	mov r9,QWORD [rsp-8+8*3]
	mov r8,QWORD [rsp-8+8*2]
	mov r14,r13
	mov r13,QWORD [rsp-8+8*1]
	add rsp,32
;; rsp=0 , %702~1'(= {| l |} ) %701~5'(= a16◂ [ *{ a17◂ [ a23◂ [ a18◂ [ ]{| l |}]]a2◂ [ a30◂ [ a18◂ [ ]{| l |}]]a29◂ [ a18◂ [ ]{| l |}]}] ) %691~3'(= a2◂ [ a30◂ [ a18◂ [ ]{| l |}]] ) %690~2'(= a17◂ [ a23◂ [ a18◂ [ ]{| l |}]] ) %654~0'(= r ) 
; #140 { 0'(= r ) 5'(= a16◂ [ *{ a17◂ [ a23◂ [ a18◂ [ ]{| l |}]]a2◂ [ a30◂ [ a18◂ [ ]{| l |}]]a29◂ [ a18◂ [ ]{| l |}]}] ) } ⊢ { 0'(= r ) 4'(= {| l |} ) }
	sub rsp,24
	mov QWORD [rsp+8*0],r14
	mov QWORD [rsp+8*1],r8
	mov QWORD [rsp+8*2],r9
; .mov_ptn2 { 0'(= r ) 5'(= a16◂ [ *{ a17◂ [ a23◂ [ a18◂ [ ]{| l |}]]a2◂ [ a30◂ [ a18◂ [ ]{| l |}]]a29◂ [ a18◂ [ ]{| l |}]}] ) } ⊢ { 0'(= r ) 1'(= a16◂ [ *{ a17◂ [ a23◂ [ a18◂ [ ]{| l |}]]a2◂ [ a30◂ [ a18◂ [ ]{| l |}]]a29◂ [ a18◂ [ ]{| l |}]}] ) }
; .mov_ptn 5'(= a16◂ [ *{ a17◂ [ a23◂ [ a18◂ [ ]{| l |}]]a2◂ [ a30◂ [ a18◂ [ ]{| l |}]]a29◂ [ a18◂ [ ]{| l |}]}] ) ⊢ 1'(= a16◂ [ *{ a17◂ [ a23◂ [ a18◂ [ ]{| l |}]]a2◂ [ a30◂ [ a18◂ [ ]{| l |}]]a29◂ [ a18◂ [ ]{| l |}]}] )
	mov rax,r11
	mov r14,rax
	call ETR_140
	mov r9,QWORD [rsp-8+8*3]
	mov r8,QWORD [rsp-8+8*2]
	mov r10,r14
	mov r14,QWORD [rsp-8+8*1]
	add rsp,24
;; rsp=0 , %704~4'(= {| l |} ) %703~0'(= r ) %702~1'(= {| l |} ) %691~3'(= a2◂ [ a30◂ [ a18◂ [ ]{| l |}]] ) %690~2'(= a17◂ [ a23◂ [ a18◂ [ ]{| l |}]] ) 
; » _^ .. ⊢ ..
; .. //
	mov rdi,0
	mov rsi,r13
	imul rsi,1
	add rdi,rsi 
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[r14]
	add rdi,rax 
	push rax
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[r10]
	add rdi,rax 
	push rax
	add rdi,14
	push rdi 
	call mlc_s8
	pop rdi
	mov r11,rax
	lea rdi,[rax+7+rdi]
	std 
	mov QWORD [tmp],rcx 
	pop rcx
	lea rsi,[r10+7+rcx]
	rep movsb
	lea rsi,[LB_710+5-1]
	mov rcx,5
	rep movsb
	pop rcx
	lea rsi,[r14+7+rcx]
	rep movsb
	lea rsi,[LB_711+9-1]
	mov rcx,9
	rep movsb
	mov rax,r13
LB_713:
	cmp rax,0
	jz LB_714
	sub rax,1
	lea rsi,[LB_712+1-1]
	mov rcx,1
	rep movsb 
	jmp LB_713
LB_714:
	mov rcx,QWORD [tmp] 
;; rsp=0 , %708~5'(= {| l |} ) %707~4'(= {| l |} ) %706~1'(= {| l |} ) %705~0'(= r ) %691~3'(= a2◂ [ a30◂ [ a18◂ [ ]{| l |}]] ) %690~2'(= a17◂ [ a23◂ [ a18◂ [ ]{| l |}]] ) 
; ∎ { 0'(= r ) 5'(= {| l |} ) }
; .dlt.ptn 4'(= {| l |} )
	mov rdi,r10
	C_PUSH_REGS
	mov r8,rdi
	mov rdi,r8
	call free_s8
	C_POP_REGS
; .dlt.ptn 1'(= {| l |} )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	mov rdi,r8
	call free_s8
	C_POP_REGS
; .dlt.ptn 3'(= a2◂ [ a30◂ [ a18◂ [ ]{| l |}]] )
	mov rdi,r9
	C_PUSH_REGS
	mov r8,rdi
	call LB_630
	C_POP_REGS
; .dlt.ptn 2'(= a17◂ [ a23◂ [ a18◂ [ ]{| l |}]] )
	mov rdi,r8
	C_PUSH_REGS
	mov r8,rdi
	call LB_438
	C_POP_REGS
; .mov_ptn2 { 0'(= r ) 5'(= {| l |} ) } ⊢ { 0'(= r ) 1'(= {| l |} ) }
; .mov_ptn 5'(= {| l |} ) ⊢ 1'(= {| l |} )
	mov rax,r11
	mov r14,rax
	ret
LB_707:
;; ?; 4'(= a29◂ [ a18◂ [ ]{| l |}] ) ⊢ 2(<3)◂1'(= a26◂ [ a18◂ [ ]{| l |}] )
	mov QWORD [GBG_VCT+8*0],rdi
	mov r14,QWORD [rdi+8]
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_LN rdi
;; rsp=0 , %709~1'(= a26◂ [ a18◂ [ ]{| l |}] ) %691~3'(= a2◂ [ a30◂ [ a18◂ [ ]{| l |}]] ) %690~2'(= a17◂ [ a23◂ [ a18◂ [ ]{| l |}]] ) %654~0'(= r ) 
; #11 0'(= r ) ⊢ 0'(= r )
	add r13,1
;; rsp=0 , %710~0'(= r ) %709~1'(= a26◂ [ a18◂ [ ]{| l |}] ) %691~3'(= a2◂ [ a30◂ [ a18◂ [ ]{| l |}]] ) %690~2'(= a17◂ [ a23◂ [ a18◂ [ ]{| l |}]] ) 
; #137 { 0'(= r ) 1'(= a26◂ [ a18◂ [ ]{| l |}] ) } ⊢ { 0'(= r ) 1'(= {| l |} ) }
	sub rsp,16
	mov QWORD [rsp+8*0],r8
	mov QWORD [rsp+8*1],r9
; .mov_ptn2 { 0'(= r ) 1'(= a26◂ [ a18◂ [ ]{| l |}] ) } ⊢ { 0'(= r ) 1'(= a26◂ [ a18◂ [ ]{| l |}] ) }
	call ETR_137
	mov r9,QWORD [rsp-8+8*2]
	mov r8,QWORD [rsp-8+8*1]
	add rsp,16
;; rsp=0 , %712~1'(= {| l |} ) %711~0'(= r ) %691~3'(= a2◂ [ a30◂ [ a18◂ [ ]{| l |}]] ) %690~2'(= a17◂ [ a23◂ [ a18◂ [ ]{| l |}]] ) 
; #12 0'(= r ) ⊢ 0'(= r )
	sub r13,1
;; rsp=0 , %713~0'(= r ) %712~1'(= {| l |} ) %691~3'(= a2◂ [ a30◂ [ a18◂ [ ]{| l |}]] ) %690~2'(= a17◂ [ a23◂ [ a18◂ [ ]{| l |}]] ) 
; » _^ .. ⊢ ..
; .. //
	mov rdi,0
	mov rsi,r13
	imul rsi,1
	add rdi,rsi 
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[r14]
	add rdi,rax 
	push rax
	add rdi,10
	push rdi 
	call mlc_s8
	pop rdi
	mov r10,rax
	lea rdi,[rax+7+rdi]
	std 
	mov QWORD [tmp],rcx 
	pop rcx
	lea rsi,[r14+7+rcx]
	rep movsb
	lea rsi,[LB_715+10-1]
	mov rcx,10
	rep movsb
	mov rax,r13
LB_717:
	cmp rax,0
	jz LB_718
	sub rax,1
	lea rsi,[LB_716+1-1]
	mov rcx,1
	rep movsb 
	jmp LB_717
LB_718:
	mov rcx,QWORD [tmp] 
;; rsp=0 , %716~4'(= {| l |} ) %715~1'(= {| l |} ) %714~0'(= r ) %691~3'(= a2◂ [ a30◂ [ a18◂ [ ]{| l |}]] ) %690~2'(= a17◂ [ a23◂ [ a18◂ [ ]{| l |}]] ) 
; ∎ { 0'(= r ) 4'(= {| l |} ) }
; .dlt.ptn 1'(= {| l |} )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	mov rdi,r8
	call free_s8
	C_POP_REGS
; .dlt.ptn 3'(= a2◂ [ a30◂ [ a18◂ [ ]{| l |}]] )
	mov rdi,r9
	C_PUSH_REGS
	mov r8,rdi
	call LB_630
	C_POP_REGS
; .dlt.ptn 2'(= a17◂ [ a23◂ [ a18◂ [ ]{| l |}]] )
	mov rdi,r8
	C_PUSH_REGS
	mov r8,rdi
	call LB_438
	C_POP_REGS
; .mov_ptn2 { 0'(= r ) 4'(= {| l |} ) } ⊢ { 0'(= r ) 1'(= {| l |} ) }
; .mov_ptn 4'(= {| l |} ) ⊢ 1'(= {| l |} )
	mov rax,r10
	mov r14,rax
	ret
LB_739:
	movzx rax,BYTE [r8+6]
	jmp QWORD [LB_743+8*rax]
LB_743: dq LB_740,LB_741,LB_742
LB_740:
	jmp LB_744
LB_741:
	jmp LB_744
LB_742:
	jmp LB_744
LB_744:
	ret
LB_738:
	movzx rax,BYTE [r8+6]
	jmp QWORD [LB_748+8*rax]
LB_748: dq LB_745,LB_746,LB_747
LB_745:
	FREE_LN r8 
	mov r8,QWORD [r8+8]
	call LB_750
	jmp LB_749
LB_746:
	push r8
	mov r8,QWORD [r8+8+8*0]
	call LB_751
	pop r8 
	push r8
	mov r8,QWORD [r8+8+8*1]
	call LB_738
	pop r8 
	FREE_RCD 2, r8
	jmp LB_749
LB_747:
	jmp LB_749
LB_749:
	ret
LB_751:
	movzx rax,BYTE [r8+6]
	jmp QWORD [LB_754+8*rax]
LB_754: dq LB_752,LB_753
LB_752:
	FREE_LN r8 
	mov r8,QWORD [r8+8]
	call LB_756
	jmp LB_755
LB_753:
	FREE_LN r8 
	mov r8,QWORD [r8+8]
	call LB_756
	jmp LB_755
LB_755:
	ret
LB_756:
	movzx rax,BYTE [r8+6]
	jmp QWORD [LB_759+8*rax]
LB_759: dq LB_757,LB_758
LB_757:
	FREE_LN r8 
	mov r8,QWORD [r8+8]
	call LB_450
	jmp LB_760
LB_758:
	mov rdi,r8
	call free_s8
	jmp LB_760
LB_760:
	ret
LB_750:
	movzx rax,BYTE [r8+6]
	jmp QWORD [LB_763+8*rax]
LB_763: dq LB_761,LB_762
LB_761:
	push r8
	mov r8,QWORD [r8+8+8*0]
	call LB_751
	pop r8 
	push r8
	mov r8,QWORD [r8+8+8*1]
	call LB_750
	pop r8 
	FREE_RCD 2, r8
	jmp LB_764
LB_762:
	jmp LB_764
LB_764:
	ret
LB_737:
	movzx rax,BYTE [r8+6]
	jmp QWORD [LB_767+8*rax]
LB_767: dq LB_765,LB_766
LB_765:
	FREE_LN r8 
	mov r8,QWORD [r8+8]
	call LB_769
	jmp LB_768
LB_766:
	jmp LB_768
LB_768:
	ret
LB_769:
	movzx rax,BYTE [r8+6]
	jmp QWORD [LB_772+8*rax]
LB_772: dq LB_770,LB_771
LB_770:
	push r8
	mov r8,QWORD [r8+8+8*0]
	call LB_382
	pop r8 
	push r8
	mov r8,QWORD [r8+8+8*1]
	call LB_739
	pop r8 
	push r8
	mov r8,QWORD [r8+8+8*2]
	call LB_738
	pop r8 
	push r8
	mov r8,QWORD [r8+8+8*3]
	call LB_737
	pop r8 
	push r8
	mov r8,QWORD [r8+8+8*4]
	call LB_769
	pop r8 
	FREE_RCD 5, r8
	jmp LB_773
LB_771:
	push r8
	mov r8,QWORD [r8+8+8*0]
	call LB_382
	pop r8 
	push r8
	mov r8,QWORD [r8+8+8*1]
	call LB_739
	pop r8 
	push r8
	mov r8,QWORD [r8+8+8*2]
	call LB_738
	pop r8 
	push r8
	mov r8,QWORD [r8+8+8*3]
	call LB_737
	pop r8 
	FREE_RCD 4, r8
	jmp LB_773
LB_773:
	ret
LB_786:
	movzx rax,BYTE [r8+6]
	jmp QWORD [LB_789+8*rax]
LB_789: dq LB_787,LB_788
LB_787:
	push r8
	mov r8,QWORD [r8+8+8*0]
	call LB_791
	pop r8 
	push r8
	mov r8,QWORD [r8+8+8*1]
	call LB_792
	pop r8 
	FREE_RCD 2, r8
	jmp LB_790
LB_788:
	jmp LB_790
LB_790:
	ret
LB_792:
	movzx rax,BYTE [r8+6]
	jmp QWORD [LB_795+8*rax]
LB_795: dq LB_793,LB_794
LB_793:
	push r8
	mov r8,QWORD [r8+8+8*0]
	call LB_586
	pop r8 
	push r8
	mov r8,QWORD [r8+8+8*1]
	call LB_791
	pop r8 
	push r8
	mov r8,QWORD [r8+8+8*2]
	call LB_797
	pop r8 
	push r8
	mov r8,QWORD [r8+8+8*3]
	call LB_739
	pop r8 
	push r8
	mov r8,QWORD [r8+8+8*4]
	call LB_738
	pop r8 
	push r8
	mov r8,QWORD [r8+8+8*5]
	call LB_786
	pop r8 
	push r8
	mov r8,QWORD [r8+8+8*6]
	call LB_792
	pop r8 
	FREE_RCD 7, r8
	jmp LB_796
LB_794:
	push r8
	mov r8,QWORD [r8+8+8*0]
	call LB_586
	pop r8 
	push r8
	mov r8,QWORD [r8+8+8*1]
	call LB_791
	pop r8 
	push r8
	mov r8,QWORD [r8+8+8*2]
	call LB_797
	pop r8 
	push r8
	mov r8,QWORD [r8+8+8*3]
	call LB_739
	pop r8 
	push r8
	mov r8,QWORD [r8+8+8*4]
	call LB_738
	pop r8 
	push r8
	mov r8,QWORD [r8+8+8*5]
	call LB_786
	pop r8 
	FREE_RCD 6, r8
	jmp LB_796
LB_796:
	ret
LB_797:
	movzx rax,BYTE [r8+6]
	jmp QWORD [LB_805+8*rax]
LB_805: dq LB_798,LB_799,LB_800,LB_801,LB_802,LB_803,LB_804
LB_798:
	push r8
	mov r8,QWORD [r8+8+8*0]
	call LB_450
	pop r8 
	push r8
	mov r8,QWORD [r8+8+8*1]
	call LB_534
	pop r8 
	FREE_RCD 2, r8
	jmp LB_806
LB_799:
	push r8
	mov r8,QWORD [r8+8+8*0]
	call LB_540
	pop r8 
	push r8
	mov r8,QWORD [r8+8+8*1]
	call LB_534
	pop r8 
	FREE_RCD 2, r8
	jmp LB_806
LB_800:
	push r8
	mov r8,QWORD [r8+8+8*0]
	call LB_807
	pop r8 
	push r8
	mov r8,QWORD [r8+8+8*1]
	call LB_797
	pop r8 
	FREE_RCD 2, r8
	jmp LB_806
LB_801:
	FREE_LN r8 
	mov r8,QWORD [r8+8]
	call LB_808
	jmp LB_806
LB_802:
	push r8
	mov r8,QWORD [r8+8+8*0]
	call LB_534
	pop r8 
	push r8
	mov r8,QWORD [r8+8+8*1]
	call LB_809
	pop r8 
	FREE_RCD 2, r8
	jmp LB_806
LB_803:
	FREE_LN r8 
	mov r8,QWORD [r8+8]
	call LB_529
	jmp LB_806
LB_804:
	FREE_LN r8 
	mov r8,QWORD [r8+8]
	jmp LB_806
LB_806:
	ret
LB_809:
	movzx rax,BYTE [r8+6]
	jmp QWORD [LB_812+8*rax]
LB_812: dq LB_810,LB_811
LB_810:
	FREE_LN r8 
	mov r8,QWORD [r8+8]
	call LB_814
	jmp LB_813
LB_811:
	push r8
	mov r8,QWORD [r8+8+8*0]
	call LB_815
	pop r8 
	push r8
	mov r8,QWORD [r8+8+8*1]
	call LB_797
	pop r8 
	FREE_RCD 2, r8
	jmp LB_813
LB_813:
	ret
LB_815:
	movzx rax,BYTE [r8+6]
	jmp QWORD [LB_818+8*rax]
LB_818: dq LB_816,LB_817
LB_816:
	push r8
	mov r8,QWORD [r8+8+8*0]
	call LB_791
	pop r8 
	push r8
	mov r8,QWORD [r8+8+8*1]
	call LB_815
	pop r8 
	FREE_RCD 2, r8
	jmp LB_819
LB_817:
	jmp LB_819
LB_819:
	ret
LB_814:
	movzx rax,BYTE [r8+6]
	jmp QWORD [LB_822+8*rax]
LB_822: dq LB_820,LB_821
LB_820:
	push r8
	mov r8,QWORD [r8+8+8*0]
	push r8
	mov r8,QWORD [r8+8+8*0]
	call LB_438
	pop r8 
	push r8
	mov r8,QWORD [r8+8+8*1]
	call LB_630
	pop r8 
	push r8
	mov r8,QWORD [r8+8+8*2]
	call LB_824
	pop r8 
	FREE_RCD 3, r8
	pop r8 
	push r8
	mov r8,QWORD [r8+8+8*1]
	call LB_814
	pop r8 
	FREE_RCD 2, r8
	jmp LB_823
LB_821:
	push r8
	mov r8,QWORD [r8+8+8*0]
	call LB_438
	pop r8 
	push r8
	mov r8,QWORD [r8+8+8*1]
	call LB_630
	pop r8 
	push r8
	mov r8,QWORD [r8+8+8*2]
	call LB_824
	pop r8 
	FREE_RCD 3, r8
	jmp LB_823
LB_823:
	ret
LB_824:
	movzx rax,BYTE [r8+6]
	jmp QWORD [LB_828+8*rax]
LB_828: dq LB_825,LB_826,LB_827
LB_825:
	FREE_LN r8 
	mov r8,QWORD [r8+8]
	call LB_808
	jmp LB_829
LB_826:
	push r8
	mov r8,QWORD [r8+8+8*0]
	call LB_534
	pop r8 
	push r8
	mov r8,QWORD [r8+8+8*1]
	call LB_814
	pop r8 
	FREE_RCD 2, r8
	jmp LB_829
LB_827:
	FREE_LN r8 
	mov r8,QWORD [r8+8]
	call LB_797
	jmp LB_829
LB_829:
	ret
LB_808:
	movzx rax,BYTE [r8+6]
	jmp QWORD [LB_832+8*rax]
LB_832: dq LB_830,LB_831
LB_830:
	push r8
	mov r8,QWORD [r8+8+8*0]
	push r8
	mov r8,QWORD [r8+8+8*0]
	call LB_630
	pop r8 
	push r8
	mov r8,QWORD [r8+8+8*1]
	call LB_824
	pop r8 
	FREE_RCD 2, r8
	pop r8 
	push r8
	mov r8,QWORD [r8+8+8*1]
	call LB_808
	pop r8 
	FREE_RCD 2, r8
	jmp LB_833
LB_831:
	push r8
	mov r8,QWORD [r8+8+8*0]
	call LB_630
	pop r8 
	push r8
	mov r8,QWORD [r8+8+8*1]
	call LB_824
	pop r8 
	FREE_RCD 2, r8
	jmp LB_833
LB_833:
	ret
LB_807:
	movzx rax,BYTE [r8+6]
	jmp QWORD [LB_838+8*rax]
LB_838: dq LB_834,LB_835,LB_836,LB_837
LB_834:
	push r8
	mov r8,QWORD [r8+8+8*0]
	call LB_450
	pop r8 
	push r8
	mov r8,QWORD [r8+8+8*1]
	call LB_534
	pop r8 
	push r8
	mov r8,QWORD [r8+8+8*2]
	call LB_791
	pop r8 
	FREE_RCD 3, r8
	jmp LB_839
LB_835:
	push r8
	mov r8,QWORD [r8+8+8*0]
	call LB_540
	pop r8 
	push r8
	mov r8,QWORD [r8+8+8*1]
	call LB_534
	pop r8 
	push r8
	mov r8,QWORD [r8+8+8*2]
	call LB_791
	pop r8 
	FREE_RCD 3, r8
	jmp LB_839
LB_836:
	push r8
	mov r8,QWORD [r8+8+8*0]
	call LB_451
	pop r8 
	push r8
	mov r8,QWORD [r8+8+8*1]
	call LB_534
	pop r8 
	push r8
	mov r8,QWORD [r8+8+8*2]
	call LB_791
	pop r8 
	FREE_RCD 3, r8
	jmp LB_839
LB_837:
	push r8
	mov r8,QWORD [r8+8+8*0]
	call LB_588
	pop r8 
	push r8
	mov r8,QWORD [r8+8+8*1]
	call LB_587
	pop r8 
	push r8
	mov r8,QWORD [r8+8+8*2]
	call LB_586
	pop r8 
	FREE_RCD 3, r8
	jmp LB_839
LB_839:
	ret
LB_791:
	movzx rax,BYTE [r8+6]
	jmp QWORD [LB_842+8*rax]
LB_842: dq LB_840,LB_841
LB_840:
	FREE_LN r8 
	mov r8,QWORD [r8+8]
	call LB_815
	jmp LB_843
LB_841:
	FREE_LN r8 
	mov r8,QWORD [r8+8]
	call LB_615
	jmp LB_843
LB_843:
	ret
ETR_162: ;; pnt { 0'(= r ) 1'(= a2◂ [ *{ {| l |}a33◂ [ a18◂ [ ]{| l |}]}] ) } ⊢ { 0'(= r ) 1'(= {| l |} ) } : ({ _r64 _lst◂{ _s8 _t33◂_s8◂_t18 } }→{ _r64 _s8 })
;; rsp=0 , %718~1'(= a2◂ [ *{ {| l |}a33◂ [ a18◂ [ ]{| l |}]}] ) %717~0'(= r ) 
;; ?; 1'(= a2◂ [ *{ {| l |}a33◂ [ a18◂ [ ]{| l |}]}] ) ⊢ 0(<2)◂{ { 3'(= {| l |} ) 4'(= a33◂ [ a18◂ [ ]{| l |}] ) } 5'(= a2◂ [ *{ {| l |}a33◂ [ a18◂ [ ]{| l |}]}] ) }
	mov rdi,r14
	cmp BYTE [rdi+6],0
	jnz LB_720
	jmp LB_721
LB_720:
	jmp LB_719
LB_721:
	mov r8, QWORD [r14+8]
	mov r9, QWORD [r8+8]
	mov r10, QWORD [r8+16]
	mov QWORD [GBG_VCT+8*0],r8
	mov r11, QWORD [r14+16]
	mov QWORD [GBG_VCT+8*1],r14
	mov rdi,QWORD [GBG_VCT+8*1]
	FREE_RCD 2,rdi
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_RCD 2,rdi
;; rsp=0 , %721~5'(= a2◂ [ *{ {| l |}a33◂ [ a18◂ [ ]{| l |}]}] ) %720~4'(= a33◂ [ a18◂ [ ]{| l |}] ) %719~3'(= {| l |} ) %717~0'(= r ) 
; #11 0'(= r ) ⊢ 0'(= r )
	add r13,1
;; rsp=0 , %722~0'(= r ) %721~5'(= a2◂ [ *{ {| l |}a33◂ [ a18◂ [ ]{| l |}]}] ) %720~4'(= a33◂ [ a18◂ [ ]{| l |}] ) %719~3'(= {| l |} ) 
; #163 { 0'(= r ) 4'(= a33◂ [ a18◂ [ ]{| l |}] ) } ⊢ { 0'(= r ) 1'(= {| l |} ) }
	sub rsp,16
	mov QWORD [rsp+8*0],r9
	mov QWORD [rsp+8*1],r11
; .mov_ptn2 { 0'(= r ) 4'(= a33◂ [ a18◂ [ ]{| l |}] ) } ⊢ { 0'(= r ) 1'(= a33◂ [ a18◂ [ ]{| l |}] ) }
; .mov_ptn 4'(= a33◂ [ a18◂ [ ]{| l |}] ) ⊢ 1'(= a33◂ [ a18◂ [ ]{| l |}] )
	mov rax,r10
	mov r14,rax
	call ETR_163
	mov r11,QWORD [rsp-8+8*2]
	mov r9,QWORD [rsp-8+8*1]
	add rsp,16
;; rsp=0 , %724~1'(= {| l |} ) %723~0'(= r ) %721~5'(= a2◂ [ *{ {| l |}a33◂ [ a18◂ [ ]{| l |}]}] ) %719~3'(= {| l |} ) 
; #12 0'(= r ) ⊢ 0'(= r )
	sub r13,1
;; rsp=0 , %725~0'(= r ) %724~1'(= {| l |} ) %721~5'(= a2◂ [ *{ {| l |}a33◂ [ a18◂ [ ]{| l |}]}] ) %719~3'(= {| l |} ) 
; #162 { 0'(= r ) 5'(= a2◂ [ *{ {| l |}a33◂ [ a18◂ [ ]{| l |}]}] ) } ⊢ { 0'(= r ) 2'(= {| l |} ) }
	sub rsp,16
	mov QWORD [rsp+8*0],r14
	mov QWORD [rsp+8*1],r9
; .mov_ptn2 { 0'(= r ) 5'(= a2◂ [ *{ {| l |}a33◂ [ a18◂ [ ]{| l |}]}] ) } ⊢ { 0'(= r ) 1'(= a2◂ [ *{ {| l |}a33◂ [ a18◂ [ ]{| l |}]}] ) }
; .mov_ptn 5'(= a2◂ [ *{ {| l |}a33◂ [ a18◂ [ ]{| l |}]}] ) ⊢ 1'(= a2◂ [ *{ {| l |}a33◂ [ a18◂ [ ]{| l |}]}] )
	mov rax,r11
	mov r14,rax
	call ETR_162
	mov r9,QWORD [rsp-8+8*2]
	mov r8,r14
	mov r14,QWORD [rsp-8+8*1]
	add rsp,16
;; rsp=0 , %727~2'(= {| l |} ) %726~0'(= r ) %724~1'(= {| l |} ) %719~3'(= {| l |} ) 
; » _^ .. ⊢ ..
; .. //
	mov rdi,0
	mov rsi,r13
	imul rsi,1
	add rdi,rsi 
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[r9]
	add rdi,rax 
	push rax
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[r14]
	add rdi,rax 
	push rax
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[r8]
	add rdi,rax 
	push rax
	add rdi,3
	push rdi 
	call mlc_s8
	pop rdi
	mov r10,rax
	lea rdi,[rax+7+rdi]
	std 
	mov QWORD [tmp],rcx 
	pop rcx
	lea rsi,[r8+7+rcx]
	rep movsb
	pop rcx
	lea rsi,[r14+7+rcx]
	rep movsb
	lea rsi,[LB_722+1-1]
	mov rcx,1
	rep movsb
	pop rcx
	lea rsi,[r9+7+rcx]
	rep movsb
	lea rsi,[LB_723+2-1]
	mov rcx,2
	rep movsb
	mov rax,r13
LB_725:
	cmp rax,0
	jz LB_726
	sub rax,1
	lea rsi,[LB_724+1-1]
	mov rcx,1
	rep movsb 
	jmp LB_725
LB_726:
	mov rcx,QWORD [tmp] 
;; rsp=0 , %732~4'(= {| l |} ) %731~2'(= {| l |} ) %730~1'(= {| l |} ) %729~3'(= {| l |} ) %728~0'(= r ) 
; ∎ { 0'(= r ) 4'(= {| l |} ) }
; .dlt.ptn 2'(= {| l |} )
	mov rdi,r8
	C_PUSH_REGS
	mov r8,rdi
	mov rdi,r8
	call free_s8
	C_POP_REGS
; .dlt.ptn 1'(= {| l |} )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	mov rdi,r8
	call free_s8
	C_POP_REGS
; .dlt.ptn 3'(= {| l |} )
	mov rdi,r9
	C_PUSH_REGS
	mov r8,rdi
	mov rdi,r8
	call free_s8
	C_POP_REGS
; .mov_ptn2 { 0'(= r ) 4'(= {| l |} ) } ⊢ { 0'(= r ) 1'(= {| l |} ) }
; .mov_ptn 4'(= {| l |} ) ⊢ 1'(= {| l |} )
	mov rax,r10
	mov r14,rax
	ret
LB_719:
;; ?; 1'(= a2◂ [ *{ {| l |}a33◂ [ a18◂ [ ]{| l |}]}] ) ⊢ 1(<2)◂{ }
;; rsp=0 , %717~0'(= r ) 
; $ %[ "" ] ⊢ %[ "" ]
;; rsp=0 , %733~%[ "" ] %717~0'(= r ) 
; ∎ { 0'(= r ) %[ "" ] }
; .mov_ptn2 { 0'(= r ) %[ "" ] } ⊢ { 0'(= r ) 1'(= {| l |} ) }
; .mov_ptn %[ "" ] ⊢ 1'(= {| l |} )
	mov rsi,1  
	mov rdi,16
	xor rax,rax 
	C_CALL_SF calloc
	mov QWORD [rax],0
	mov r14,rax
	ret
ETR_163: ;; pnt_etr { 0'(= r ) 1'(= a33◂ [ a18◂ [ ]{| l |}] ) } ⊢ { 0'(= r ) 1'(= {| l |} ) } : ({ _r64 _t33◂_s8◂_t18 }→{ _r64 _s8 })
;; rsp=0 , %735~1'(= a33◂ [ a18◂ [ ]{| l |}] ) %734~0'(= r ) 
;; ?; 1'(= a33◂ [ a18◂ [ ]{| l |}] ) ⊢ 0(<2)◂2'(= a34◂ [ a18◂ [ ]{| l |}] )
	mov rdi,r14
	cmp BYTE [rdi+6],0
	jnz LB_728
	jmp LB_729
LB_728:
	jmp LB_727
LB_729:
	mov QWORD [GBG_VCT+8*0],rdi
	mov r8,QWORD [rdi+8]
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_LN rdi
;; rsp=0 , %736~2'(= a34◂ [ a18◂ [ ]{| l |}] ) %734~0'(= r ) 
; #164 { 0'(= r ) 2'(= a34◂ [ a18◂ [ ]{| l |}] ) } ⊢ { 0'(= r ) 1'(= {| l |} ) }
; .mov_ptn2 { 0'(= r ) 2'(= a34◂ [ a18◂ [ ]{| l |}] ) } ⊢ { 0'(= r ) 1'(= a34◂ [ a18◂ [ ]{| l |}] ) }
; .mov_ptn 2'(= a34◂ [ a18◂ [ ]{| l |}] ) ⊢ 1'(= a34◂ [ a18◂ [ ]{| l |}] )
	mov rax,r8
	mov r14,rax
	call ETR_164
;; rsp=0 , %738~1'(= {| l |} ) %737~0'(= r ) 
; ∎ { 0'(= r ) 1'(= {| l |} ) }
; .mov_ptn2 { 0'(= r ) 1'(= {| l |} ) } ⊢ { 0'(= r ) 1'(= {| l |} ) }
	ret
LB_727:
;; ?; 1'(= a33◂ [ a18◂ [ ]{| l |}] ) ⊢ 1(<2)◂2'(= a35◂ [ a18◂ [ ]{| l |}] )
	mov QWORD [GBG_VCT+8*0],rdi
	mov r8,QWORD [rdi+8]
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_LN rdi
;; rsp=0 , %739~2'(= a35◂ [ a18◂ [ ]{| l |}] ) %734~0'(= r ) 
; #165 { 0'(= r ) 2'(= a35◂ [ a18◂ [ ]{| l |}] ) } ⊢ { 0'(= r ) 1'(= {| l |} ) }
; .mov_ptn2 { 0'(= r ) 2'(= a35◂ [ a18◂ [ ]{| l |}] ) } ⊢ { 0'(= r ) 1'(= a35◂ [ a18◂ [ ]{| l |}] ) }
; .mov_ptn 2'(= a35◂ [ a18◂ [ ]{| l |}] ) ⊢ 1'(= a35◂ [ a18◂ [ ]{| l |}] )
	mov rax,r8
	mov r14,rax
	call ETR_165
;; rsp=0 , %741~1'(= {| l |} ) %740~0'(= r ) 
; ∎ { 0'(= r ) 1'(= {| l |} ) }
; .mov_ptn2 { 0'(= r ) 1'(= {| l |} ) } ⊢ { 0'(= r ) 1'(= {| l |} ) }
	ret
ETR_164: ;; pnt_cnc { 0'(= r ) 1'(= a34◂ [ a18◂ [ ]{| l |}] ) } ⊢ { 0'(= r ) 1'(= {| l |} ) } : ({ _r64 _t34◂_s8◂_t18 }→{ _r64 _s8 })
;; rsp=0 , %743~1'(= a34◂ [ a18◂ [ ]{| l |}] ) %742~0'(= r ) 
;; ?; 1'(= a34◂ [ a18◂ [ ]{| l |}] ) ⊢ 0(<2)◂{ 2'(= a3◂ [ {| l |}] ) 3'(= a36◂ [ ] ) 4'(= a37◂ [ a18◂ [ ]] ) 5'(= a3◂ [ a34◂ [ a18◂ [ ]{| l |}]] ) 6'(= a34◂ [ a18◂ [ ]{| l |}] ) }
	mov rdi,r14
	cmp BYTE [rdi+6],0
	jnz LB_731
	jmp LB_732
LB_731:
	jmp LB_730
LB_732:
	mov r8, QWORD [r14+8]
	mov r9, QWORD [r14+16]
	mov r10, QWORD [r14+24]
	mov r11, QWORD [r14+32]
	mov rcx, QWORD [r14+40]
	mov QWORD [GBG_VCT+8*0],r14
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_RCD 5,rdi
;; rsp=0 , %748~6'(= a34◂ [ a18◂ [ ]{| l |}] ) %747~5'(= a3◂ [ a34◂ [ a18◂ [ ]{| l |}]] ) %746~4'(= a37◂ [ a18◂ [ ]] ) %745~3'(= a36◂ [ ] ) %744~2'(= a3◂ [ {| l |}] ) %742~0'(= r ) 
; #164 { 0'(= r ) 6'(= a34◂ [ a18◂ [ ]{| l |}] ) } ⊢ { 0'(= r ) 1'(= {| l |} ) }
	sub rsp,32
	mov QWORD [rsp+8*0],r8
	mov QWORD [rsp+8*1],r9
	mov QWORD [rsp+8*2],r10
	mov QWORD [rsp+8*3],r11
; .mov_ptn2 { 0'(= r ) 6'(= a34◂ [ a18◂ [ ]{| l |}] ) } ⊢ { 0'(= r ) 1'(= a34◂ [ a18◂ [ ]{| l |}] ) }
; .mov_ptn 6'(= a34◂ [ a18◂ [ ]{| l |}] ) ⊢ 1'(= a34◂ [ a18◂ [ ]{| l |}] )
	mov rax,rcx
	mov r14,rax
	call ETR_164
	mov r11,QWORD [rsp-8+8*4]
	mov r10,QWORD [rsp-8+8*3]
	mov r9,QWORD [rsp-8+8*2]
	mov r8,QWORD [rsp-8+8*1]
	add rsp,32
;; rsp=0 , %750~1'(= {| l |} ) %749~0'(= r ) %747~5'(= a3◂ [ a34◂ [ a18◂ [ ]{| l |}]] ) %746~4'(= a37◂ [ a18◂ [ ]] ) %745~3'(= a36◂ [ ] ) %744~2'(= a3◂ [ {| l |}] ) 
; » _^ .. ⊢ ..
; .. //
	mov rdi,0
	mov rsi,r13
	imul rsi,1
	add rdi,rsi 
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[r14]
	add rdi,rax 
	push rax
	add rdi,7
	push rdi 
	call mlc_s8
	pop rdi
	mov rcx,rax
	lea rdi,[rax+7+rdi]
	std 
	mov QWORD [tmp],rcx 
	pop rcx
	lea rsi,[r14+7+rcx]
	rep movsb
	lea rsi,[LB_733+7-1]
	mov rcx,7
	rep movsb
	mov rax,r13
LB_735:
	cmp rax,0
	jz LB_736
	sub rax,1
	lea rsi,[LB_734+1-1]
	mov rcx,1
	rep movsb 
	jmp LB_735
LB_736:
	mov rcx,QWORD [tmp] 
;; rsp=0 , %753~6'(= {| l |} ) %752~1'(= {| l |} ) %751~0'(= r ) %747~5'(= a3◂ [ a34◂ [ a18◂ [ ]{| l |}]] ) %746~4'(= a37◂ [ a18◂ [ ]] ) %745~3'(= a36◂ [ ] ) %744~2'(= a3◂ [ {| l |}] ) 
; ∎ { 0'(= r ) 6'(= {| l |} ) }
; .dlt.ptn 1'(= {| l |} )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	mov rdi,r8
	call free_s8
	C_POP_REGS
; .dlt.ptn 5'(= a3◂ [ a34◂ [ a18◂ [ ]{| l |}]] )
	mov rdi,r11
	C_PUSH_REGS
	mov r8,rdi
	call LB_737
	C_POP_REGS
; .dlt.ptn 4'(= a37◂ [ a18◂ [ ]] )
	mov rdi,r10
	C_PUSH_REGS
	mov r8,rdi
	call LB_738
	C_POP_REGS
; .dlt.ptn 3'(= a36◂ [ ] )
	mov rdi,r9
	C_PUSH_REGS
	mov r8,rdi
	call LB_739
	C_POP_REGS
; .dlt.ptn 2'(= a3◂ [ {| l |}] )
	mov rdi,r8
	C_PUSH_REGS
	mov r8,rdi
	call LB_382
	C_POP_REGS
; .mov_ptn2 { 0'(= r ) 6'(= {| l |} ) } ⊢ { 0'(= r ) 1'(= {| l |} ) }
; .mov_ptn 6'(= {| l |} ) ⊢ 1'(= {| l |} )
	mov rax,rcx
	mov r14,rax
	ret
LB_730:
;; ?; 1'(= a34◂ [ a18◂ [ ]{| l |}] ) ⊢ 1(<2)◂{ 2'(= a3◂ [ {| l |}] ) 3'(= a36◂ [ ] ) 4'(= a37◂ [ a18◂ [ ]] ) 5'(= a3◂ [ a34◂ [ a18◂ [ ]{| l |}]] ) }
	mov r8, QWORD [r14+8]
	mov r9, QWORD [r14+16]
	mov r10, QWORD [r14+24]
	mov r11, QWORD [r14+32]
	mov QWORD [GBG_VCT+8*0],r14
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_RCD 4,rdi
;; rsp=0 , %757~5'(= a3◂ [ a34◂ [ a18◂ [ ]{| l |}]] ) %756~4'(= a37◂ [ a18◂ [ ]] ) %755~3'(= a36◂ [ ] ) %754~2'(= a3◂ [ {| l |}] ) %742~0'(= r ) 
; » _^ .. ⊢ ..
; .. //
	mov rdi,0
	mov rsi,r13
	imul rsi,1
	add rdi,rsi 
	add rdi,9
	push rdi 
	call mlc_s8
	pop rdi
	mov r14,rax
	lea rdi,[rax+7+rdi]
	std 
	mov QWORD [tmp],rcx 
	lea rsi,[LB_774+9-1]
	mov rcx,9
	rep movsb
	mov rax,r13
LB_776:
	cmp rax,0
	jz LB_777
	sub rax,1
	lea rsi,[LB_775+1-1]
	mov rcx,1
	rep movsb 
	jmp LB_776
LB_777:
	mov rcx,QWORD [tmp] 
;; rsp=0 , %759~1'(= {| l |} ) %758~0'(= r ) %757~5'(= a3◂ [ a34◂ [ a18◂ [ ]{| l |}]] ) %756~4'(= a37◂ [ a18◂ [ ]] ) %755~3'(= a36◂ [ ] ) %754~2'(= a3◂ [ {| l |}] ) 
; ∎ { 0'(= r ) 1'(= {| l |} ) }
; .dlt.ptn 5'(= a3◂ [ a34◂ [ a18◂ [ ]{| l |}]] )
	mov rdi,r11
	C_PUSH_REGS
	mov r8,rdi
	call LB_737
	C_POP_REGS
; .dlt.ptn 4'(= a37◂ [ a18◂ [ ]] )
	mov rdi,r10
	C_PUSH_REGS
	mov r8,rdi
	call LB_738
	C_POP_REGS
; .dlt.ptn 3'(= a36◂ [ ] )
	mov rdi,r9
	C_PUSH_REGS
	mov r8,rdi
	call LB_739
	C_POP_REGS
; .dlt.ptn 2'(= a3◂ [ {| l |}] )
	mov rdi,r8
	C_PUSH_REGS
	mov r8,rdi
	call LB_382
	C_POP_REGS
; .mov_ptn2 { 0'(= r ) 1'(= {| l |} ) } ⊢ { 0'(= r ) 1'(= {| l |} ) }
	ret
ETR_165: ;; pnt_act { 0'(= r ) 1'(= a35◂ [ a18◂ [ ]{| l |}] ) } ⊢ { 0'(= r ) 1'(= {| l |} ) } : ({ _r64 _t35◂_s8◂_t18 }→{ _r64 _s8 })
;; rsp=0 , %761~1'(= a35◂ [ a18◂ [ ]{| l |}] ) %760~0'(= r ) 
;; ?; 1'(= a35◂ [ a18◂ [ ]{| l |}] ) ⊢ 0(<2)◂{ 2'(= a2◂ [ a22◂ [ {| l |}]] ) 3'(= a17◂ [ a22◂ [ {| l |}]] ) 4'(= a26◂ [ a18◂ [ ]{| l |}] ) 5'(= a36◂ [ ] ) 6'(= a37◂ [ a18◂ [ ]] ) 7'(= a3◂ [ *{ a17◂ [ a22◂ [ {| l |}]]a35◂ [ a18◂ [ ]{| l |}]}] ) 8'(= a35◂ [ a18◂ [ ]{| l |}] ) }
	mov rdi,r14
	cmp BYTE [rdi+6],0
	jnz LB_779
	jmp LB_780
LB_779:
	jmp LB_778
LB_780:
	mov r8, QWORD [r14+8]
	mov r9, QWORD [r14+16]
	mov r10, QWORD [r14+24]
	mov r11, QWORD [r14+32]
	mov rcx, QWORD [r14+40]
	mov rdx, QWORD [r14+48]
	sub rsp,8
	MOV_RDI QWORD [rsp-8+8*1], QWORD [r14+56]
	mov QWORD [GBG_VCT+8*0],r14
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_RCD 7,rdi
;; rsp=1 , %768~8'(= a35◂ [ a18◂ [ ]{| l |}] ) %767~7'(= a3◂ [ *{ a17◂ [ a22◂ [ {| l |}]]a35◂ [ a18◂ [ ]{| l |}]}] ) %766~6'(= a37◂ [ a18◂ [ ]] ) %765~5'(= a36◂ [ ] ) %764~4'(= a26◂ [ a18◂ [ ]{| l |}] ) %763~3'(= a17◂ [ a22◂ [ {| l |}]] ) %762~2'(= a2◂ [ a22◂ [ {| l |}]] ) %760~0'(= r ) 
; #104 3'(= a17◂ [ a22◂ [ {| l |}]] ) ⊢ 1'(= {| l |} )
	sub rsp,48
	mov QWORD [rsp+8*0],r13
	mov QWORD [rsp+8*1],r8
	mov QWORD [rsp+8*2],r10
	mov QWORD [rsp+8*3],r11
	mov QWORD [rsp+8*4],rcx
	mov QWORD [rsp+8*5],rdx
; .mov_ptn2 3'(= a17◂ [ a22◂ [ {| l |}]] ) ⊢ 0'(= a17◂ [ a22◂ [ {| l |}]] )
; .mov_ptn 3'(= a17◂ [ a22◂ [ {| l |}]] ) ⊢ 0'(= a17◂ [ a22◂ [ {| l |}]] )
	mov rax,r9
	mov r13,rax
	call ETR_104
	mov rdx,QWORD [rsp-8+8*6]
	mov rcx,QWORD [rsp-8+8*5]
	mov r11,QWORD [rsp-8+8*4]
	mov r10,QWORD [rsp-8+8*3]
	mov r8,QWORD [rsp-8+8*2]
	mov r14,r13
	mov r13,QWORD [rsp-8+8*1]
	add rsp,48
;; rsp=1 , %769~1'(= {| l |} ) %768~8'(= a35◂ [ a18◂ [ ]{| l |}] ) %767~7'(= a3◂ [ *{ a17◂ [ a22◂ [ {| l |}]]a35◂ [ a18◂ [ ]{| l |}]}] ) %766~6'(= a37◂ [ a18◂ [ ]] ) %765~5'(= a36◂ [ ] ) %764~4'(= a26◂ [ a18◂ [ ]{| l |}] ) %762~2'(= a2◂ [ a22◂ [ {| l |}]] ) %760~0'(= r ) 
; #11 0'(= r ) ⊢ 0'(= r )
	add r13,1
;; rsp=1 , %770~0'(= r ) %769~1'(= {| l |} ) %768~8'(= a35◂ [ a18◂ [ ]{| l |}] ) %767~7'(= a3◂ [ *{ a17◂ [ a22◂ [ {| l |}]]a35◂ [ a18◂ [ ]{| l |}]}] ) %766~6'(= a37◂ [ a18◂ [ ]] ) %765~5'(= a36◂ [ ] ) %764~4'(= a26◂ [ a18◂ [ ]{| l |}] ) %762~2'(= a2◂ [ a22◂ [ {| l |}]] ) 
; #137 { 0'(= r ) 4'(= a26◂ [ a18◂ [ ]{| l |}] ) } ⊢ { 0'(= r ) 3'(= {| l |} ) }
	sub rsp,40
	mov QWORD [rsp+8*0],r14
	mov QWORD [rsp+8*1],r8
	mov QWORD [rsp+8*2],r11
	mov QWORD [rsp+8*3],rcx
	mov QWORD [rsp+8*4],rdx
; .mov_ptn2 { 0'(= r ) 4'(= a26◂ [ a18◂ [ ]{| l |}] ) } ⊢ { 0'(= r ) 1'(= a26◂ [ a18◂ [ ]{| l |}] ) }
; .mov_ptn 4'(= a26◂ [ a18◂ [ ]{| l |}] ) ⊢ 1'(= a26◂ [ a18◂ [ ]{| l |}] )
	mov rax,r10
	mov r14,rax
	call ETR_137
	mov rdx,QWORD [rsp-8+8*5]
	mov rcx,QWORD [rsp-8+8*4]
	mov r11,QWORD [rsp-8+8*3]
	mov r8,QWORD [rsp-8+8*2]
	mov r9,r14
	mov r14,QWORD [rsp-8+8*1]
	add rsp,40
;; rsp=1 , %772~3'(= {| l |} ) %771~0'(= r ) %769~1'(= {| l |} ) %768~8'(= a35◂ [ a18◂ [ ]{| l |}] ) %767~7'(= a3◂ [ *{ a17◂ [ a22◂ [ {| l |}]]a35◂ [ a18◂ [ ]{| l |}]}] ) %766~6'(= a37◂ [ a18◂ [ ]] ) %765~5'(= a36◂ [ ] ) %762~2'(= a2◂ [ a22◂ [ {| l |}]] ) 
; #12 0'(= r ) ⊢ 0'(= r )
	sub r13,1
;; rsp=1 , %773~0'(= r ) %772~3'(= {| l |} ) %769~1'(= {| l |} ) %768~8'(= a35◂ [ a18◂ [ ]{| l |}] ) %767~7'(= a3◂ [ *{ a17◂ [ a22◂ [ {| l |}]]a35◂ [ a18◂ [ ]{| l |}]}] ) %766~6'(= a37◂ [ a18◂ [ ]] ) %765~5'(= a36◂ [ ] ) %762~2'(= a2◂ [ a22◂ [ {| l |}]] ) 
; #165 { 0'(= r ) 8'(= a35◂ [ a18◂ [ ]{| l |}] ) } ⊢ { 0'(= r ) 4'(= {| l |} ) }
	sub rsp,48
	mov QWORD [rsp+8*0],r14
	mov QWORD [rsp+8*1],r8
	mov QWORD [rsp+8*2],r9
	mov QWORD [rsp+8*3],r11
	mov QWORD [rsp+8*4],rcx
	mov QWORD [rsp+8*5],rdx
; .mov_ptn2 { 0'(= r ) 8'(= a35◂ [ a18◂ [ ]{| l |}] ) } ⊢ { 0'(= r ) 1'(= a35◂ [ a18◂ [ ]{| l |}] ) }
; .mov_ptn 8'(= a35◂ [ a18◂ [ ]{| l |}] ) ⊢ 1'(= a35◂ [ a18◂ [ ]{| l |}] )
	mov rax,QWORD [rsp-8+8*7]
	mov r14,rax
	call ETR_165
	mov rdx,QWORD [rsp-8+8*6]
	mov rcx,QWORD [rsp-8+8*5]
	mov r11,QWORD [rsp-8+8*4]
	mov r9,QWORD [rsp-8+8*3]
	mov r8,QWORD [rsp-8+8*2]
	mov r10,r14
	mov r14,QWORD [rsp-8+8*1]
	add rsp,56
;; rsp=0 , %775~4'(= {| l |} ) %774~0'(= r ) %772~3'(= {| l |} ) %769~1'(= {| l |} ) %767~7'(= a3◂ [ *{ a17◂ [ a22◂ [ {| l |}]]a35◂ [ a18◂ [ ]{| l |}]}] ) %766~6'(= a37◂ [ a18◂ [ ]] ) %765~5'(= a36◂ [ ] ) %762~2'(= a2◂ [ a22◂ [ {| l |}]] ) 
; » _^ .. ⊢ ..
; .. //
	sub rsp,8
	mov rdi,0
	mov rsi,r13
	imul rsi,1
	add rdi,rsi 
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[r14]
	add rdi,rax 
	push rax
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[r9]
	add rdi,rax 
	push rax
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[r10]
	add rdi,rax 
	push rax
	add rdi,12
	push rdi 
	call mlc_s8
	pop rdi
	mov QWORD [rsp-8+8*4],rax
	lea rdi,[rax+7+rdi]
	std 
	mov QWORD [tmp],rcx 
	pop rcx
	lea rsi,[r10+7+rcx]
	rep movsb
	pop rcx
	lea rsi,[r9+7+rcx]
	rep movsb
	lea rsi,[LB_781+1-1]
	mov rcx,1
	rep movsb
	pop rcx
	lea rsi,[r14+7+rcx]
	rep movsb
	lea rsi,[LB_782+11-1]
	mov rcx,11
	rep movsb
	mov rax,r13
LB_784:
	cmp rax,0
	jz LB_785
	sub rax,1
	lea rsi,[LB_783+1-1]
	mov rcx,1
	rep movsb 
	jmp LB_784
LB_785:
	mov rcx,QWORD [tmp] 
;; rsp=1 , %780~8'(= {| l |} ) %779~4'(= {| l |} ) %778~3'(= {| l |} ) %777~1'(= {| l |} ) %776~0'(= r ) %767~7'(= a3◂ [ *{ a17◂ [ a22◂ [ {| l |}]]a35◂ [ a18◂ [ ]{| l |}]}] ) %766~6'(= a37◂ [ a18◂ [ ]] ) %765~5'(= a36◂ [ ] ) %762~2'(= a2◂ [ a22◂ [ {| l |}]] ) 
; ∎ { 0'(= r ) 8'(= {| l |} ) }
; .dlt.ptn 4'(= {| l |} )
	mov rdi,r10
	C_PUSH_REGS
	mov r8,rdi
	mov rdi,r8
	call free_s8
	C_POP_REGS
; .dlt.ptn 3'(= {| l |} )
	mov rdi,r9
	C_PUSH_REGS
	mov r8,rdi
	mov rdi,r8
	call free_s8
	C_POP_REGS
; .dlt.ptn 1'(= {| l |} )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	mov rdi,r8
	call free_s8
	C_POP_REGS
; .dlt.ptn 7'(= a3◂ [ *{ a17◂ [ a22◂ [ {| l |}]]a35◂ [ a18◂ [ ]{| l |}]}] )
	mov rdi,rdx
	C_PUSH_REGS
	mov r8,rdi
	call LB_786
	C_POP_REGS
; .dlt.ptn 6'(= a37◂ [ a18◂ [ ]] )
	mov rdi,rcx
	C_PUSH_REGS
	mov r8,rdi
	call LB_738
	C_POP_REGS
; .dlt.ptn 5'(= a36◂ [ ] )
	mov rdi,r11
	C_PUSH_REGS
	mov r8,rdi
	call LB_739
	C_POP_REGS
; .dlt.ptn 2'(= a2◂ [ a22◂ [ {| l |}]] )
	mov rdi,r8
	C_PUSH_REGS
	mov r8,rdi
	call LB_586
	C_POP_REGS
; .mov_ptn2 { 0'(= r ) 8'(= {| l |} ) } ⊢ { 0'(= r ) 1'(= {| l |} ) }
; .mov_ptn 8'(= {| l |} ) ⊢ 1'(= {| l |} )
	mov rax,QWORD [rsp-8+8*1]
	mov r14,rax
	add rsp,8
	ret
LB_778:
;; ?; 1'(= a35◂ [ a18◂ [ ]{| l |}] ) ⊢ 1(<2)◂{ 2'(= a2◂ [ a22◂ [ {| l |}]] ) 3'(= a17◂ [ a22◂ [ {| l |}]] ) 4'(= a26◂ [ a18◂ [ ]{| l |}] ) 5'(= a36◂ [ ] ) 6'(= a37◂ [ a18◂ [ ]] ) 7'(= a3◂ [ *{ a17◂ [ a22◂ [ {| l |}]]a35◂ [ a18◂ [ ]{| l |}]}] ) }
	mov r8, QWORD [r14+8]
	mov r9, QWORD [r14+16]
	mov r10, QWORD [r14+24]
	mov r11, QWORD [r14+32]
	mov rcx, QWORD [r14+40]
	mov rdx, QWORD [r14+48]
	mov QWORD [GBG_VCT+8*0],r14
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_RCD 6,rdi
;; rsp=0 , %786~7'(= a3◂ [ *{ a17◂ [ a22◂ [ {| l |}]]a35◂ [ a18◂ [ ]{| l |}]}] ) %785~6'(= a37◂ [ a18◂ [ ]] ) %784~5'(= a36◂ [ ] ) %783~4'(= a26◂ [ a18◂ [ ]{| l |}] ) %782~3'(= a17◂ [ a22◂ [ {| l |}]] ) %781~2'(= a2◂ [ a22◂ [ {| l |}]] ) %760~0'(= r ) 
; #104 3'(= a17◂ [ a22◂ [ {| l |}]] ) ⊢ 1'(= {| l |} )
	sub rsp,48
	mov QWORD [rsp+8*0],r13
	mov QWORD [rsp+8*1],r8
	mov QWORD [rsp+8*2],r10
	mov QWORD [rsp+8*3],r11
	mov QWORD [rsp+8*4],rcx
	mov QWORD [rsp+8*5],rdx
; .mov_ptn2 3'(= a17◂ [ a22◂ [ {| l |}]] ) ⊢ 0'(= a17◂ [ a22◂ [ {| l |}]] )
; .mov_ptn 3'(= a17◂ [ a22◂ [ {| l |}]] ) ⊢ 0'(= a17◂ [ a22◂ [ {| l |}]] )
	mov rax,r9
	mov r13,rax
	call ETR_104
	mov rdx,QWORD [rsp-8+8*6]
	mov rcx,QWORD [rsp-8+8*5]
	mov r11,QWORD [rsp-8+8*4]
	mov r10,QWORD [rsp-8+8*3]
	mov r8,QWORD [rsp-8+8*2]
	mov r14,r13
	mov r13,QWORD [rsp-8+8*1]
	add rsp,48
;; rsp=0 , %787~1'(= {| l |} ) %786~7'(= a3◂ [ *{ a17◂ [ a22◂ [ {| l |}]]a35◂ [ a18◂ [ ]{| l |}]}] ) %785~6'(= a37◂ [ a18◂ [ ]] ) %784~5'(= a36◂ [ ] ) %783~4'(= a26◂ [ a18◂ [ ]{| l |}] ) %781~2'(= a2◂ [ a22◂ [ {| l |}]] ) %760~0'(= r ) 
; #11 0'(= r ) ⊢ 0'(= r )
	add r13,1
;; rsp=0 , %788~0'(= r ) %787~1'(= {| l |} ) %786~7'(= a3◂ [ *{ a17◂ [ a22◂ [ {| l |}]]a35◂ [ a18◂ [ ]{| l |}]}] ) %785~6'(= a37◂ [ a18◂ [ ]] ) %784~5'(= a36◂ [ ] ) %783~4'(= a26◂ [ a18◂ [ ]{| l |}] ) %781~2'(= a2◂ [ a22◂ [ {| l |}]] ) 
; #137 { 0'(= r ) 4'(= a26◂ [ a18◂ [ ]{| l |}] ) } ⊢ { 0'(= r ) 3'(= {| l |} ) }
	sub rsp,40
	mov QWORD [rsp+8*0],r14
	mov QWORD [rsp+8*1],r8
	mov QWORD [rsp+8*2],r11
	mov QWORD [rsp+8*3],rcx
	mov QWORD [rsp+8*4],rdx
; .mov_ptn2 { 0'(= r ) 4'(= a26◂ [ a18◂ [ ]{| l |}] ) } ⊢ { 0'(= r ) 1'(= a26◂ [ a18◂ [ ]{| l |}] ) }
; .mov_ptn 4'(= a26◂ [ a18◂ [ ]{| l |}] ) ⊢ 1'(= a26◂ [ a18◂ [ ]{| l |}] )
	mov rax,r10
	mov r14,rax
	call ETR_137
	mov rdx,QWORD [rsp-8+8*5]
	mov rcx,QWORD [rsp-8+8*4]
	mov r11,QWORD [rsp-8+8*3]
	mov r8,QWORD [rsp-8+8*2]
	mov r9,r14
	mov r14,QWORD [rsp-8+8*1]
	add rsp,40
;; rsp=0 , %790~3'(= {| l |} ) %789~0'(= r ) %787~1'(= {| l |} ) %786~7'(= a3◂ [ *{ a17◂ [ a22◂ [ {| l |}]]a35◂ [ a18◂ [ ]{| l |}]}] ) %785~6'(= a37◂ [ a18◂ [ ]] ) %784~5'(= a36◂ [ ] ) %781~2'(= a2◂ [ a22◂ [ {| l |}]] ) 
; #12 0'(= r ) ⊢ 0'(= r )
	sub r13,1
;; rsp=0 , %791~0'(= r ) %790~3'(= {| l |} ) %787~1'(= {| l |} ) %786~7'(= a3◂ [ *{ a17◂ [ a22◂ [ {| l |}]]a35◂ [ a18◂ [ ]{| l |}]}] ) %785~6'(= a37◂ [ a18◂ [ ]] ) %784~5'(= a36◂ [ ] ) %781~2'(= a2◂ [ a22◂ [ {| l |}]] ) 
; » _^ .. ⊢ ..
; .. //
	mov rdi,0
	mov rsi,r13
	imul rsi,1
	add rdi,rsi 
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[r14]
	add rdi,rax 
	push rax
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[r9]
	add rdi,rax 
	push rax
	add rdi,13
	push rdi 
	call mlc_s8
	pop rdi
	mov r10,rax
	lea rdi,[rax+7+rdi]
	std 
	mov QWORD [tmp],rcx 
	pop rcx
	lea rsi,[r9+7+rcx]
	rep movsb
	lea rsi,[LB_844+1-1]
	mov rcx,1
	rep movsb
	pop rcx
	lea rsi,[r14+7+rcx]
	rep movsb
	lea rsi,[LB_845+12-1]
	mov rcx,12
	rep movsb
	mov rax,r13
LB_847:
	cmp rax,0
	jz LB_848
	sub rax,1
	lea rsi,[LB_846+1-1]
	mov rcx,1
	rep movsb 
	jmp LB_847
LB_848:
	mov rcx,QWORD [tmp] 
;; rsp=0 , %795~4'(= {| l |} ) %794~3'(= {| l |} ) %793~1'(= {| l |} ) %792~0'(= r ) %786~7'(= a3◂ [ *{ a17◂ [ a22◂ [ {| l |}]]a35◂ [ a18◂ [ ]{| l |}]}] ) %785~6'(= a37◂ [ a18◂ [ ]] ) %784~5'(= a36◂ [ ] ) %781~2'(= a2◂ [ a22◂ [ {| l |}]] ) 
; ∎ { 0'(= r ) 4'(= {| l |} ) }
; .dlt.ptn 3'(= {| l |} )
	mov rdi,r9
	C_PUSH_REGS
	mov r8,rdi
	mov rdi,r8
	call free_s8
	C_POP_REGS
; .dlt.ptn 1'(= {| l |} )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	mov rdi,r8
	call free_s8
	C_POP_REGS
; .dlt.ptn 7'(= a3◂ [ *{ a17◂ [ a22◂ [ {| l |}]]a35◂ [ a18◂ [ ]{| l |}]}] )
	mov rdi,rdx
	C_PUSH_REGS
	mov r8,rdi
	call LB_786
	C_POP_REGS
; .dlt.ptn 6'(= a37◂ [ a18◂ [ ]] )
	mov rdi,rcx
	C_PUSH_REGS
	mov r8,rdi
	call LB_738
	C_POP_REGS
; .dlt.ptn 5'(= a36◂ [ ] )
	mov rdi,r11
	C_PUSH_REGS
	mov r8,rdi
	call LB_739
	C_POP_REGS
; .dlt.ptn 2'(= a2◂ [ a22◂ [ {| l |}]] )
	mov rdi,r8
	C_PUSH_REGS
	mov r8,rdi
	call LB_586
	C_POP_REGS
; .mov_ptn2 { 0'(= r ) 4'(= {| l |} ) } ⊢ { 0'(= r ) 1'(= {| l |} ) }
; .mov_ptn 4'(= {| l |} ) ⊢ 1'(= {| l |} )
	mov rax,r10
	mov r14,rax
	ret
ETR_168: ;; act_regs { } ⊢ 0'(= a2◂ [ a22◂ [ {| l |}]] ) : ({ }→_lst◂_t22◂_s8)
;; rsp=0 , 
; $ %[ "_r" ] ⊢ %[ "_r" ]
;; rsp=0 , %816~%[ "_r" ] 
; $ %[ "_n" ] ⊢ %[ "_n" ]
;; rsp=0 , %817~%[ "_n" ] %816~%[ "_r" ] 
; #94 %[ "_r" ] ⊢ 1(<2)◂%[ "_r" ]
;; rsp=0 , %818~1(<2)◂%[ "_r" ] %817~%[ "_n" ] 
; #94 %[ "_n" ] ⊢ 1(<2)◂%[ "_n" ]
;; rsp=0 , %819~1(<2)◂%[ "_n" ] %818~1(<2)◂%[ "_r" ] 
; #22 { } ⊢ 1(<2)◂{ }
;; rsp=0 , %820~1(<2)◂{ } %819~1(<2)◂%[ "_n" ] %818~1(<2)◂%[ "_r" ] 
; #23 { 1(<2)◂%[ "_r" ] 1(<2)◂{ } } ⊢ 0(<2)◂{ 1(<2)◂%[ "_r" ] 1(<2)◂{ } }
;; rsp=0 , %821~0(<2)◂{ 1(<2)◂%[ "_r" ] 1(<2)◂{ } } %819~1(<2)◂%[ "_n" ] 
; #23 { 1(<2)◂%[ "_n" ] 0(<2)◂{ 1(<2)◂%[ "_r" ] 1(<2)◂{ } } } ⊢ 0(<2)◂{ 1(<2)◂%[ "_n" ] 0(<2)◂{ 1(<2)◂%[ "_r" ] 1(<2)◂{ } } }
;; rsp=0 , %822~0(<2)◂{ 1(<2)◂%[ "_n" ] 0(<2)◂{ 1(<2)◂%[ "_r" ] 1(<2)◂{ } } } 
; ∎ 0(<2)◂{ 1(<2)◂%[ "_n" ] 0(<2)◂{ 1(<2)◂%[ "_r" ] 1(<2)◂{ } } }
; .mov_ptn2 0(<2)◂{ 1(<2)◂%[ "_n" ] 0(<2)◂{ 1(<2)◂%[ "_r" ] 1(<2)◂{ } } } ⊢ 0'(= a2◂ [ a22◂ [ {| l |}]] )
; .mov_ptn 0(<2)◂{ 1(<2)◂%[ "_n" ] 0(<2)◂{ 1(<2)◂%[ "_r" ] 1(<2)◂{ } } } ⊢ 0'(= a2◂ [ a22◂ [ {| l |}]] )
	ALC_RCD 2, rax
	mov r14,rax
	mov rsi,1  
	mov rdi,16
	xor rax,rax 
	C_CALL_SF calloc
	mov QWORD [rax],2
	mov BYTE [rax+8+0],95
	mov BYTE [rax+8+1],110
	mov BYTE [rax+6],1
	mov QWORD [r14+8+8*0],rax
	ALC_RCD 2, rax
	mov r8,rax
	mov rsi,1  
	mov rdi,16
	xor rax,rax 
	C_CALL_SF calloc
	mov QWORD [rax],2
	mov BYTE [rax+8+0],95
	mov BYTE [rax+8+1],114
	mov BYTE [rax+6],1
	mov QWORD [r8+8+8*0],rax
	mov rax,unt 
	mov rax,unt_1
	mov QWORD [r8+8+8*1],rax
	mov rax,r8
	mov BYTE [rax+6],0
	mov QWORD [r14+8+8*1],rax
	mov rax,r14
	mov BYTE [rax+6],0
	mov r13,rax
	ret
LB_905:
	movzx rax,BYTE [r8+6]
	jmp QWORD [LB_908+8*rax]
LB_908: dq LB_906,LB_907
LB_906:
	push r8
	mov r8,QWORD [r8+8+8*0]
	mov rdi,r8
	call free_s8
	pop r8 
	push r8
	mov r8,QWORD [r8+8+8*1]
	call LB_905
	pop r8 
	FREE_RCD 2, r8
	jmp LB_909
LB_907:
	jmp LB_909
LB_909:
	ret
LB_915:
	movzx rax,BYTE [r8+6]
	jmp QWORD [LB_921+8*rax]
LB_921: dq LB_916,LB_917,LB_918,LB_919,LB_920
LB_916:
	FREE_LN r8 
	mov r8,QWORD [r8+8]
	call LB_923
	jmp LB_922
LB_917:
	push r8
	mov r8,QWORD [r8+8+8*0]
	call LB_915
	pop r8 
	push r8
	mov r8,QWORD [r8+8+8*1]
	call LB_915
	pop r8 
	FREE_RCD 2, r8
	jmp LB_922
LB_918:
	push r8
	mov r8,QWORD [r8+8+8*0]
	call LB_915
	pop r8 
	push r8
	mov r8,QWORD [r8+8+8*1]
	call LB_915
	pop r8 
	FREE_RCD 2, r8
	jmp LB_922
LB_919:
	FREE_LN r8 
	mov r8,QWORD [r8+8]
	call LB_450
	jmp LB_922
LB_920:
	mov rdi,r8
	call free_s8
	jmp LB_922
LB_922:
	ret
LB_923:
	movzx rax,BYTE [r8+6]
	jmp QWORD [LB_926+8*rax]
LB_926: dq LB_924,LB_925
LB_924:
	push r8
	mov r8,QWORD [r8+8+8*0]
	call LB_915
	pop r8 
	push r8
	mov r8,QWORD [r8+8+8*1]
	call LB_923
	pop r8 
	FREE_RCD 2, r8
	jmp LB_927
LB_925:
	jmp LB_927
LB_927:
	ret
LB_995:
	movzx rax,BYTE [r8+6]
	jmp QWORD [LB_998+8*rax]
LB_998: dq LB_996,LB_997
LB_996:
	FREE_LN r8 
	mov r8,QWORD [r8+8]
	call LB_915
	jmp LB_999
LB_997:
	jmp LB_999
LB_999:
	ret
ETR_182: ;; pnt { 0'(= r ) 1'(= a2◂ [ a40◂ [ ]] ) } ⊢ { 0'(= r ) 1'(= {| l |} ) } : ({ _r64 _lst◂_t40 }→{ _r64 _s8 })
;; rsp=0 , %824~1'(= a2◂ [ a40◂ [ ]] ) %823~0'(= r ) 
;; ?; 1'(= a2◂ [ a40◂ [ ]] ) ⊢ 1(<2)◂{ }
	mov rdi,r14
	cmp BYTE [rdi+6],1
	jnz LB_850
	jmp LB_851
LB_850:
	jmp LB_849
LB_851:
;; rsp=0 , %823~0'(= r ) 
; $ %[ "" ] ⊢ %[ "" ]
;; rsp=0 , %825~%[ "" ] %823~0'(= r ) 
; ∎ { 0'(= r ) %[ "" ] }
; .mov_ptn2 { 0'(= r ) %[ "" ] } ⊢ { 0'(= r ) 1'(= {| l |} ) }
; .mov_ptn %[ "" ] ⊢ 1'(= {| l |} )
	mov rsi,1  
	mov rdi,16
	xor rax,rax 
	C_CALL_SF calloc
	mov QWORD [rax],0
	mov r14,rax
	ret
LB_849:
;; ?; 1'(= a2◂ [ a40◂ [ ]] ) ⊢ 0(<2)◂{ 2'(= a40◂ [ ] ) 3'(= a2◂ [ a40◂ [ ]] ) }
	mov r8, QWORD [r14+8]
	mov r9, QWORD [r14+16]
	mov QWORD [GBG_VCT+8*0],r14
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_RCD 2,rdi
;; rsp=0 , %827~3'(= a2◂ [ a40◂ [ ]] ) %826~2'(= a40◂ [ ] ) %823~0'(= r ) 
; #183 { 0'(= r ) 2'(= a40◂ [ ] ) } ⊢ { 0'(= r ) 1'(= {| l |} ) }
	sub rsp,8
	mov QWORD [rsp+8*0],r9
; .mov_ptn2 { 0'(= r ) 2'(= a40◂ [ ] ) } ⊢ { 0'(= r ) 1'(= a40◂ [ ] ) }
; .mov_ptn 2'(= a40◂ [ ] ) ⊢ 1'(= a40◂ [ ] )
	mov rax,r8
	mov r14,rax
	call ETR_183
	mov r9,QWORD [rsp-8+8*1]
	add rsp,8
;; rsp=0 , %829~1'(= {| l |} ) %828~0'(= r ) %827~3'(= a2◂ [ a40◂ [ ]] ) 
; #182 { 0'(= r ) 3'(= a2◂ [ a40◂ [ ]] ) } ⊢ { 0'(= r ) 2'(= {| l |} ) }
	sub rsp,8
	mov QWORD [rsp+8*0],r14
; .mov_ptn2 { 0'(= r ) 3'(= a2◂ [ a40◂ [ ]] ) } ⊢ { 0'(= r ) 1'(= a2◂ [ a40◂ [ ]] ) }
; .mov_ptn 3'(= a2◂ [ a40◂ [ ]] ) ⊢ 1'(= a2◂ [ a40◂ [ ]] )
	mov rax,r9
	mov r14,rax
	call ETR_182
	mov r8,r14
	mov r14,QWORD [rsp-8+8*1]
	add rsp,8
;; rsp=0 , %831~2'(= {| l |} ) %830~0'(= r ) %829~1'(= {| l |} ) 
; » _^ .. ⊢ ..
; .. //
	mov rdi,0
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[r14]
	add rdi,rax 
	push rax
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[r8]
	add rdi,rax 
	push rax
	add rdi,0
	push rdi 
	call mlc_s8
	pop rdi
	mov r9,rax
	lea rdi,[rax+7+rdi]
	std 
	mov QWORD [tmp],rcx 
	pop rcx
	lea rsi,[r8+7+rcx]
	rep movsb
	pop rcx
	lea rsi,[r14+7+rcx]
	rep movsb
	mov rcx,QWORD [tmp] 
;; rsp=0 , %834~3'(= {| l |} ) %833~2'(= {| l |} ) %832~1'(= {| l |} ) %830~0'(= r ) 
; ∎ { 0'(= r ) 3'(= {| l |} ) }
; .dlt.ptn 2'(= {| l |} )
	mov rdi,r8
	C_PUSH_REGS
	mov r8,rdi
	mov rdi,r8
	call free_s8
	C_POP_REGS
; .dlt.ptn 1'(= {| l |} )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	mov rdi,r8
	call free_s8
	C_POP_REGS
; .mov_ptn2 { 0'(= r ) 3'(= {| l |} ) } ⊢ { 0'(= r ) 1'(= {| l |} ) }
; .mov_ptn 3'(= {| l |} ) ⊢ 1'(= {| l |} )
	mov rax,r9
	mov r14,rax
	ret
ETR_183: ;; pnt_glb_etr { 0'(= r ) 1'(= a40◂ [ ] ) } ⊢ { 0'(= r ) 1'(= {| l |} ) } : ({ _r64 _t40 }→{ _r64 _s8 })
;; rsp=0 , %836~1'(= a40◂ [ ] ) %835~0'(= r ) 
;; ?; 1'(= a40◂ [ ] ) ⊢ 0(<6)◂{ 2'(= {| l |} ) 3'(= a41◂ [ ] ) }
	mov rdi,r14
	cmp BYTE [rdi+6],0
	jnz LB_853
	jmp LB_854
LB_853:
	jmp LB_852
LB_854:
	mov r8, QWORD [r14+8]
	mov r9, QWORD [r14+16]
	mov QWORD [GBG_VCT+8*0],r14
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_RCD 2,rdi
;; rsp=0 , %838~3'(= a41◂ [ ] ) %837~2'(= {| l |} ) %835~0'(= r ) 
;; ?; 3'(= a41◂ [ ] ) ⊢ 0(<2)◂1'(= a2◂ [ a40◂ [ ]] )
	mov rdi,r9
	cmp BYTE [rdi+6],0
	jnz LB_856
	jmp LB_857
LB_856:
	jmp LB_855
LB_857:
	mov QWORD [GBG_VCT+8*0],rdi
	mov r14,QWORD [rdi+8]
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_LN rdi
;; rsp=0 , %839~1'(= a2◂ [ a40◂ [ ]] ) %837~2'(= {| l |} ) %835~0'(= r ) 
; #11 0'(= r ) ⊢ 0'(= r )
	add r13,1
;; rsp=0 , %840~0'(= r ) %839~1'(= a2◂ [ a40◂ [ ]] ) %837~2'(= {| l |} ) 
; #182 { 0'(= r ) 1'(= a2◂ [ a40◂ [ ]] ) } ⊢ { 0'(= r ) 1'(= {| l |} ) }
	sub rsp,8
	mov QWORD [rsp+8*0],r8
; .mov_ptn2 { 0'(= r ) 1'(= a2◂ [ a40◂ [ ]] ) } ⊢ { 0'(= r ) 1'(= a2◂ [ a40◂ [ ]] ) }
	call ETR_182
	mov r8,QWORD [rsp-8+8*1]
	add rsp,8
;; rsp=0 , %842~1'(= {| l |} ) %841~0'(= r ) %837~2'(= {| l |} ) 
; #12 0'(= r ) ⊢ 0'(= r )
	sub r13,1
;; rsp=0 , %843~0'(= r ) %842~1'(= {| l |} ) %837~2'(= {| l |} ) 
; » _^ .. ⊢ ..
; .. //
	mov rdi,0
	mov rsi,r13
	imul rsi,1
	add rdi,rsi 
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[r8]
	add rdi,rax 
	push rax
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[r14]
	add rdi,rax 
	push rax
	mov rsi,r13
	imul rsi,1
	add rdi,rsi 
	add rdi,14
	push rdi 
	call mlc_s8
	pop rdi
	mov r9,rax
	lea rdi,[rax+7+rdi]
	std 
	mov QWORD [tmp],rcx 
	lea rsi,[LB_858+8-1]
	mov rcx,8
	rep movsb
	mov rax,r13
LB_860:
	cmp rax,0
	jz LB_861
	sub rax,1
	lea rsi,[LB_859+1-1]
	mov rcx,1
	rep movsb 
	jmp LB_860
LB_861:
	pop rcx
	lea rsi,[r14+7+rcx]
	rep movsb
	lea rsi,[LB_862+1-1]
	mov rcx,1
	rep movsb
	pop rcx
	lea rsi,[r8+7+rcx]
	rep movsb
	lea rsi,[LB_863+5-1]
	mov rcx,5
	rep movsb
	mov rax,r13
LB_865:
	cmp rax,0
	jz LB_866
	sub rax,1
	lea rsi,[LB_864+1-1]
	mov rcx,1
	rep movsb 
	jmp LB_865
LB_866:
	mov rcx,QWORD [tmp] 
;; rsp=0 , %847~3'(= {| l |} ) %846~1'(= {| l |} ) %845~2'(= {| l |} ) %844~0'(= r ) 
; ∎ { 0'(= r ) 3'(= {| l |} ) }
; .dlt.ptn 1'(= {| l |} )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	mov rdi,r8
	call free_s8
	C_POP_REGS
; .dlt.ptn 2'(= {| l |} )
	mov rdi,r8
	C_PUSH_REGS
	mov r8,rdi
	mov rdi,r8
	call free_s8
	C_POP_REGS
; .mov_ptn2 { 0'(= r ) 3'(= {| l |} ) } ⊢ { 0'(= r ) 1'(= {| l |} ) }
; .mov_ptn 3'(= {| l |} ) ⊢ 1'(= {| l |} )
	mov rax,r9
	mov r14,rax
	ret
LB_855:
;; ?; 3'(= a41◂ [ ] ) ⊢ 1(<2)◂1'(= a18◂ [ ] )
	mov QWORD [GBG_VCT+8*0],rdi
	mov r14,QWORD [rdi+8]
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_LN rdi
;; rsp=0 , %848~1'(= a18◂ [ ] ) %837~2'(= {| l |} ) %835~0'(= r ) 
; #87 1'(= a18◂ [ ] ) ⊢ 1'(= {| l |} )
	sub rsp,16
	mov QWORD [rsp+8*0],r13
	mov QWORD [rsp+8*1],r8
; .mov_ptn2 1'(= a18◂ [ ] ) ⊢ 0'(= a18◂ [ ] )
; .mov_ptn 1'(= a18◂ [ ] ) ⊢ 0'(= a18◂ [ ] )
	mov rax,r14
	mov r13,rax
	call ETR_87
	mov r8,QWORD [rsp-8+8*2]
	mov r14,r13
	mov r13,QWORD [rsp-8+8*1]
	add rsp,16
;; rsp=0 , %849~1'(= {| l |} ) %837~2'(= {| l |} ) %835~0'(= r ) 
; » _^ .. ⊢ ..
; .. //
	mov rdi,0
	mov rsi,r13
	imul rsi,1
	add rdi,rsi 
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[r8]
	add rdi,rax 
	push rax
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[r14]
	add rdi,rax 
	push rax
	add rdi,9
	push rdi 
	call mlc_s8
	pop rdi
	mov r9,rax
	lea rdi,[rax+7+rdi]
	std 
	mov QWORD [tmp],rcx 
	lea rsi,[LB_867+1-1]
	mov rcx,1
	rep movsb
	pop rcx
	lea rsi,[r14+7+rcx]
	rep movsb
	lea rsi,[LB_868+3-1]
	mov rcx,3
	rep movsb
	pop rcx
	lea rsi,[r8+7+rcx]
	rep movsb
	lea rsi,[LB_869+5-1]
	mov rcx,5
	rep movsb
	mov rax,r13
LB_871:
	cmp rax,0
	jz LB_872
	sub rax,1
	lea rsi,[LB_870+1-1]
	mov rcx,1
	rep movsb 
	jmp LB_871
LB_872:
	mov rcx,QWORD [tmp] 
;; rsp=0 , %853~3'(= {| l |} ) %852~1'(= {| l |} ) %851~2'(= {| l |} ) %850~0'(= r ) 
; ∎ { 0'(= r ) 3'(= {| l |} ) }
; .dlt.ptn 1'(= {| l |} )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	mov rdi,r8
	call free_s8
	C_POP_REGS
; .dlt.ptn 2'(= {| l |} )
	mov rdi,r8
	C_PUSH_REGS
	mov r8,rdi
	mov rdi,r8
	call free_s8
	C_POP_REGS
; .mov_ptn2 { 0'(= r ) 3'(= {| l |} ) } ⊢ { 0'(= r ) 1'(= {| l |} ) }
; .mov_ptn 3'(= {| l |} ) ⊢ 1'(= {| l |} )
	mov rax,r9
	mov r14,rax
	ret
LB_852:
;; ?; 1'(= a40◂ [ ] ) ⊢ 1(<6)◂2'(= a2◂ [ *{ {| l |}a33◂ [ a18◂ [ ]{| l |}]}] )
	mov rdi,r14
	cmp BYTE [rdi+6],1
	jnz LB_874
	jmp LB_875
LB_874:
	jmp LB_873
LB_875:
	mov QWORD [GBG_VCT+8*0],rdi
	mov r8,QWORD [rdi+8]
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_LN rdi
;; rsp=0 , %854~2'(= a2◂ [ *{ {| l |}a33◂ [ a18◂ [ ]{| l |}]}] ) %835~0'(= r ) 
; #11 0'(= r ) ⊢ 0'(= r )
	add r13,1
;; rsp=0 , %855~0'(= r ) %854~2'(= a2◂ [ *{ {| l |}a33◂ [ a18◂ [ ]{| l |}]}] ) 
; #162 { 0'(= r ) 2'(= a2◂ [ *{ {| l |}a33◂ [ a18◂ [ ]{| l |}]}] ) } ⊢ { 0'(= r ) 1'(= {| l |} ) }
; .mov_ptn2 { 0'(= r ) 2'(= a2◂ [ *{ {| l |}a33◂ [ a18◂ [ ]{| l |}]}] ) } ⊢ { 0'(= r ) 1'(= a2◂ [ *{ {| l |}a33◂ [ a18◂ [ ]{| l |}]}] ) }
; .mov_ptn 2'(= a2◂ [ *{ {| l |}a33◂ [ a18◂ [ ]{| l |}]}] ) ⊢ 1'(= a2◂ [ *{ {| l |}a33◂ [ a18◂ [ ]{| l |}]}] )
	mov rax,r8
	mov r14,rax
	call ETR_162
;; rsp=0 , %857~1'(= {| l |} ) %856~0'(= r ) 
; #12 0'(= r ) ⊢ 0'(= r )
	sub r13,1
;; rsp=0 , %858~0'(= r ) %857~1'(= {| l |} ) 
; » _^ .. ⊢ ..
; .. //
	mov rdi,0
	mov rsi,r13
	imul rsi,1
	add rdi,rsi 
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[r14]
	add rdi,rax 
	push rax
	add rdi,8
	push rdi 
	call mlc_s8
	pop rdi
	mov r8,rax
	lea rdi,[rax+7+rdi]
	std 
	mov QWORD [tmp],rcx 
	pop rcx
	lea rsi,[r14+7+rcx]
	rep movsb
	lea rsi,[LB_876+8-1]
	mov rcx,8
	rep movsb
	mov rax,r13
LB_878:
	cmp rax,0
	jz LB_879
	sub rax,1
	lea rsi,[LB_877+1-1]
	mov rcx,1
	rep movsb 
	jmp LB_878
LB_879:
	mov rcx,QWORD [tmp] 
;; rsp=0 , %861~2'(= {| l |} ) %860~1'(= {| l |} ) %859~0'(= r ) 
; ∎ { 0'(= r ) 2'(= {| l |} ) }
; .dlt.ptn 1'(= {| l |} )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	mov rdi,r8
	call free_s8
	C_POP_REGS
; .mov_ptn2 { 0'(= r ) 2'(= {| l |} ) } ⊢ { 0'(= r ) 1'(= {| l |} ) }
; .mov_ptn 2'(= {| l |} ) ⊢ 1'(= {| l |} )
	mov rax,r8
	mov r14,rax
	ret
LB_873:
;; ?; 1'(= a40◂ [ ] ) ⊢ 2(<6)◂{ 2'(= {| l |} ) 3'(= a42◂ [ ] ) }
	mov rdi,r14
	cmp BYTE [rdi+6],2
	jnz LB_881
	jmp LB_882
LB_881:
	jmp LB_880
LB_882:
	mov r8, QWORD [r14+8]
	mov r9, QWORD [r14+16]
	mov QWORD [GBG_VCT+8*0],r14
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_RCD 2,rdi
;; rsp=0 , %863~3'(= a42◂ [ ] ) %862~2'(= {| l |} ) %835~0'(= r ) 
; #11 0'(= r ) ⊢ 0'(= r )
	add r13,1
;; rsp=0 , %864~0'(= r ) %863~3'(= a42◂ [ ] ) %862~2'(= {| l |} ) 
; #189 { 0'(= r ) 3'(= a42◂ [ ] ) } ⊢ { 0'(= r ) 1'(= {| l |} ) }
	sub rsp,8
	mov QWORD [rsp+8*0],r8
; .mov_ptn2 { 0'(= r ) 3'(= a42◂ [ ] ) } ⊢ { 0'(= r ) 1'(= a42◂ [ ] ) }
; .mov_ptn 3'(= a42◂ [ ] ) ⊢ 1'(= a42◂ [ ] )
	mov rax,r9
	mov r14,rax
	call ETR_189
	mov r8,QWORD [rsp-8+8*1]
	add rsp,8
;; rsp=0 , %866~1'(= {| l |} ) %865~0'(= r ) %862~2'(= {| l |} ) 
; #12 0'(= r ) ⊢ 0'(= r )
	sub r13,1
;; rsp=0 , %867~0'(= r ) %866~1'(= {| l |} ) %862~2'(= {| l |} ) 
; » _^ .. ⊢ ..
; .. //
	mov rdi,0
	mov rsi,r13
	imul rsi,1
	add rdi,rsi 
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[r8]
	add rdi,rax 
	push rax
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[r14]
	add rdi,rax 
	push rax
	add rdi,3
	push rdi 
	call mlc_s8
	pop rdi
	mov r9,rax
	lea rdi,[rax+7+rdi]
	std 
	mov QWORD [tmp],rcx 
	pop rcx
	lea rsi,[r14+7+rcx]
	rep movsb
	pop rcx
	lea rsi,[r8+7+rcx]
	rep movsb
	lea rsi,[LB_883+3-1]
	mov rcx,3
	rep movsb
	mov rax,r13
LB_885:
	cmp rax,0
	jz LB_886
	sub rax,1
	lea rsi,[LB_884+1-1]
	mov rcx,1
	rep movsb 
	jmp LB_885
LB_886:
	mov rcx,QWORD [tmp] 
;; rsp=0 , %871~3'(= {| l |} ) %870~1'(= {| l |} ) %869~2'(= {| l |} ) %868~0'(= r ) 
; ∎ { 0'(= r ) 3'(= {| l |} ) }
; .dlt.ptn 1'(= {| l |} )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	mov rdi,r8
	call free_s8
	C_POP_REGS
; .dlt.ptn 2'(= {| l |} )
	mov rdi,r8
	C_PUSH_REGS
	mov r8,rdi
	mov rdi,r8
	call free_s8
	C_POP_REGS
; .mov_ptn2 { 0'(= r ) 3'(= {| l |} ) } ⊢ { 0'(= r ) 1'(= {| l |} ) }
; .mov_ptn 3'(= {| l |} ) ⊢ 1'(= {| l |} )
	mov rax,r9
	mov r14,rax
	ret
LB_880:
;; ?; 1'(= a40◂ [ ] ) ⊢ 3(<6)◂2'(= a2◂ [ *{ {| l |}a17◂ [ a22◂ [ {| l |}]]a3◂ [ a32◂ [ ]]a26◂ [ a18◂ [ ]{| l |}]}] )
	mov rdi,r14
	cmp BYTE [rdi+6],3
	jnz LB_888
	jmp LB_889
LB_888:
	jmp LB_887
LB_889:
	mov QWORD [GBG_VCT+8*0],rdi
	mov r8,QWORD [rdi+8]
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_LN rdi
;; rsp=0 , %872~2'(= a2◂ [ *{ {| l |}a17◂ [ a22◂ [ {| l |}]]a3◂ [ a32◂ [ ]]a26◂ [ a18◂ [ ]{| l |}]}] ) %835~0'(= r ) 
; #11 0'(= r ) ⊢ 0'(= r )
	add r13,1
;; rsp=0 , %873~0'(= r ) %872~2'(= a2◂ [ *{ {| l |}a17◂ [ a22◂ [ {| l |}]]a3◂ [ a32◂ [ ]]a26◂ [ a18◂ [ ]{| l |}]}] ) 
; #190 { 0'(= r ) 2'(= a2◂ [ *{ {| l |}a17◂ [ a22◂ [ {| l |}]]a3◂ [ a32◂ [ ]]a26◂ [ a18◂ [ ]{| l |}]}] ) } ⊢ { 0'(= r ) 1'(= {| l |} ) }
; .mov_ptn2 { 0'(= r ) 2'(= a2◂ [ *{ {| l |}a17◂ [ a22◂ [ {| l |}]]a3◂ [ a32◂ [ ]]a26◂ [ a18◂ [ ]{| l |}]}] ) } ⊢ { 0'(= r ) 1'(= a2◂ [ *{ {| l |}a17◂ [ a22◂ [ {| l |}]]a3◂ [ a32◂ [ ]]a26◂ [ a18◂ [ ]{| l |}]}] ) }
; .mov_ptn 2'(= a2◂ [ *{ {| l |}a17◂ [ a22◂ [ {| l |}]]a3◂ [ a32◂ [ ]]a26◂ [ a18◂ [ ]{| l |}]}] ) ⊢ 1'(= a2◂ [ *{ {| l |}a17◂ [ a22◂ [ {| l |}]]a3◂ [ a32◂ [ ]]a26◂ [ a18◂ [ ]{| l |}]}] )
	mov rax,r8
	mov r14,rax
	call ETR_190
;; rsp=0 , %875~1'(= {| l |} ) %874~0'(= r ) 
; #12 0'(= r ) ⊢ 0'(= r )
	sub r13,1
;; rsp=0 , %876~0'(= r ) %875~1'(= {| l |} ) 
; » _^ .. ⊢ ..
; .. //
	mov rdi,0
	mov rsi,r13
	imul rsi,1
	add rdi,rsi 
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[r14]
	add rdi,rax 
	push rax
	add rdi,4
	push rdi 
	call mlc_s8
	pop rdi
	mov r8,rax
	lea rdi,[rax+7+rdi]
	std 
	mov QWORD [tmp],rcx 
	pop rcx
	lea rsi,[r14+7+rcx]
	rep movsb
	lea rsi,[LB_890+4-1]
	mov rcx,4
	rep movsb
	mov rax,r13
LB_892:
	cmp rax,0
	jz LB_893
	sub rax,1
	lea rsi,[LB_891+1-1]
	mov rcx,1
	rep movsb 
	jmp LB_892
LB_893:
	mov rcx,QWORD [tmp] 
;; rsp=0 , %879~2'(= {| l |} ) %878~1'(= {| l |} ) %877~0'(= r ) 
; ∎ { 0'(= r ) 2'(= {| l |} ) }
; .dlt.ptn 1'(= {| l |} )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	mov rdi,r8
	call free_s8
	C_POP_REGS
; .mov_ptn2 { 0'(= r ) 2'(= {| l |} ) } ⊢ { 0'(= r ) 1'(= {| l |} ) }
; .mov_ptn 2'(= {| l |} ) ⊢ 1'(= {| l |} )
	mov rax,r8
	mov r14,rax
	ret
LB_887:
;; ?; 1'(= a40◂ [ ] ) ⊢ 4(<6)◂{ 2'(= {| l |} ) 3'(= a43◂ [ ] ) }
	mov rdi,r14
	cmp BYTE [rdi+6],4
	jnz LB_895
	jmp LB_896
LB_895:
	jmp LB_894
LB_896:
	mov r8, QWORD [r14+8]
	mov r9, QWORD [r14+16]
	mov QWORD [GBG_VCT+8*0],r14
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_RCD 2,rdi
;; rsp=0 , %881~3'(= a43◂ [ ] ) %880~2'(= {| l |} ) %835~0'(= r ) 
;; ?; 3'(= a43◂ [ ] ) ⊢ 0(<2)◂{ 1'(= a2◂ [ {| l |}] ) 4'(= a2◂ [ *{ {| l |}a32◂ [ ]}] ) }
	mov rdi,r9
	cmp BYTE [rdi+6],0
	jnz LB_898
	jmp LB_899
LB_898:
	jmp LB_897
LB_899:
	mov r14, QWORD [r9+8]
	mov r10, QWORD [r9+16]
	mov QWORD [GBG_VCT+8*0],r9
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_RCD 2,rdi
;; rsp=0 , %883~4'(= a2◂ [ *{ {| l |}a32◂ [ ]}] ) %882~1'(= a2◂ [ {| l |}] ) %880~2'(= {| l |} ) %835~0'(= r ) 
; #11 0'(= r ) ⊢ 0'(= r )
	add r13,1
;; rsp=0 , %884~0'(= r ) %883~4'(= a2◂ [ *{ {| l |}a32◂ [ ]}] ) %882~1'(= a2◂ [ {| l |}] ) %880~2'(= {| l |} ) 
; #186 { 0'(= r ) 4'(= a2◂ [ *{ {| l |}a32◂ [ ]}] ) } ⊢ { 0'(= r ) 3'(= {| l |} ) }
	sub rsp,16
	mov QWORD [rsp+8*0],r14
	mov QWORD [rsp+8*1],r8
; .mov_ptn2 { 0'(= r ) 4'(= a2◂ [ *{ {| l |}a32◂ [ ]}] ) } ⊢ { 0'(= r ) 1'(= a2◂ [ *{ {| l |}a32◂ [ ]}] ) }
; .mov_ptn 4'(= a2◂ [ *{ {| l |}a32◂ [ ]}] ) ⊢ 1'(= a2◂ [ *{ {| l |}a32◂ [ ]}] )
	mov rax,r10
	mov r14,rax
	call ETR_186
	mov r8,QWORD [rsp-8+8*2]
	mov r9,r14
	mov r14,QWORD [rsp-8+8*1]
	add rsp,16
;; rsp=0 , %886~3'(= {| l |} ) %885~0'(= r ) %882~1'(= a2◂ [ {| l |}] ) %880~2'(= {| l |} ) 
; #12 0'(= r ) ⊢ 0'(= r )
	sub r13,1
;; rsp=0 , %887~0'(= r ) %886~3'(= {| l |} ) %882~1'(= a2◂ [ {| l |}] ) %880~2'(= {| l |} ) 
; » _^ .. ⊢ ..
; .. //
	mov rdi,0
	mov rsi,r13
	imul rsi,1
	add rdi,rsi 
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[r8]
	add rdi,rax 
	push rax
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[r9]
	add rdi,rax 
	push rax
	add rdi,4
	push rdi 
	call mlc_s8
	pop rdi
	mov r10,rax
	lea rdi,[rax+7+rdi]
	std 
	mov QWORD [tmp],rcx 
	pop rcx
	lea rsi,[r9+7+rcx]
	rep movsb
	lea rsi,[LB_900+1-1]
	mov rcx,1
	rep movsb
	pop rcx
	lea rsi,[r8+7+rcx]
	rep movsb
	lea rsi,[LB_901+3-1]
	mov rcx,3
	rep movsb
	mov rax,r13
LB_903:
	cmp rax,0
	jz LB_904
	sub rax,1
	lea rsi,[LB_902+1-1]
	mov rcx,1
	rep movsb 
	jmp LB_903
LB_904:
	mov rcx,QWORD [tmp] 
;; rsp=0 , %891~4'(= {| l |} ) %890~3'(= {| l |} ) %889~2'(= {| l |} ) %888~0'(= r ) %882~1'(= a2◂ [ {| l |}] ) 
; ∎ { 0'(= r ) 4'(= {| l |} ) }
; .dlt.ptn 3'(= {| l |} )
	mov rdi,r9
	C_PUSH_REGS
	mov r8,rdi
	mov rdi,r8
	call free_s8
	C_POP_REGS
; .dlt.ptn 2'(= {| l |} )
	mov rdi,r8
	C_PUSH_REGS
	mov r8,rdi
	mov rdi,r8
	call free_s8
	C_POP_REGS
; .dlt.ptn 1'(= a2◂ [ {| l |}] )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	call LB_905
	C_POP_REGS
; .mov_ptn2 { 0'(= r ) 4'(= {| l |} ) } ⊢ { 0'(= r ) 1'(= {| l |} ) }
; .mov_ptn 4'(= {| l |} ) ⊢ 1'(= {| l |} )
	mov rax,r10
	mov r14,rax
	ret
LB_897:
;; ?; 3'(= a43◂ [ ] ) ⊢ 1(<2)◂{ 1'(= a2◂ [ {| l |}] ) 4'(= a32◂ [ ] ) }
	mov r14, QWORD [r9+8]
	mov r10, QWORD [r9+16]
	mov QWORD [GBG_VCT+8*0],r9
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_RCD 2,rdi
;; rsp=0 , %893~4'(= a32◂ [ ] ) %892~1'(= a2◂ [ {| l |}] ) %880~2'(= {| l |} ) %835~0'(= r ) 
; » _^ .. ⊢ ..
; .. //
	mov rdi,0
	mov rsi,r13
	imul rsi,1
	add rdi,rsi 
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[r8]
	add rdi,rax 
	push rax
	add rdi,10
	push rdi 
	call mlc_s8
	pop rdi
	mov r9,rax
	lea rdi,[rax+7+rdi]
	std 
	mov QWORD [tmp],rcx 
	lea rsi,[LB_910+7-1]
	mov rcx,7
	rep movsb
	pop rcx
	lea rsi,[r8+7+rcx]
	rep movsb
	lea rsi,[LB_911+3-1]
	mov rcx,3
	rep movsb
	mov rax,r13
LB_913:
	cmp rax,0
	jz LB_914
	sub rax,1
	lea rsi,[LB_912+1-1]
	mov rcx,1
	rep movsb 
	jmp LB_913
LB_914:
	mov rcx,QWORD [tmp] 
;; rsp=0 , %896~3'(= {| l |} ) %895~2'(= {| l |} ) %894~0'(= r ) %893~4'(= a32◂ [ ] ) %892~1'(= a2◂ [ {| l |}] ) 
; ∎ { 0'(= r ) 3'(= {| l |} ) }
; .dlt.ptn 2'(= {| l |} )
	mov rdi,r8
	C_PUSH_REGS
	mov r8,rdi
	mov rdi,r8
	call free_s8
	C_POP_REGS
; .dlt.ptn 4'(= a32◂ [ ] )
	mov rdi,r10
	C_PUSH_REGS
	mov r8,rdi
	call LB_915
	C_POP_REGS
; .dlt.ptn 1'(= a2◂ [ {| l |}] )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	call LB_905
	C_POP_REGS
; .mov_ptn2 { 0'(= r ) 3'(= {| l |} ) } ⊢ { 0'(= r ) 1'(= {| l |} ) }
; .mov_ptn 3'(= {| l |} ) ⊢ 1'(= {| l |} )
	mov rax,r9
	mov r14,rax
	ret
LB_894:
;; ?; 1'(= a40◂ [ ] ) ⊢ 5(<6)◂2'(= a2◂ [ *{ {| l |}a43◂ [ ]}] )
	mov QWORD [GBG_VCT+8*0],rdi
	mov r8,QWORD [rdi+8]
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_LN rdi
;; rsp=0 , %897~2'(= a2◂ [ *{ {| l |}a43◂ [ ]}] ) %835~0'(= r ) 
; #11 0'(= r ) ⊢ 0'(= r )
	add r13,1
;; rsp=0 , %898~0'(= r ) %897~2'(= a2◂ [ *{ {| l |}a43◂ [ ]}] ) 
; #184 { 0'(= r ) 2'(= a2◂ [ *{ {| l |}a43◂ [ ]}] ) } ⊢ { 0'(= r ) 1'(= {| l |} ) }
; .mov_ptn2 { 0'(= r ) 2'(= a2◂ [ *{ {| l |}a43◂ [ ]}] ) } ⊢ { 0'(= r ) 1'(= a2◂ [ *{ {| l |}a43◂ [ ]}] ) }
; .mov_ptn 2'(= a2◂ [ *{ {| l |}a43◂ [ ]}] ) ⊢ 1'(= a2◂ [ *{ {| l |}a43◂ [ ]}] )
	mov rax,r8
	mov r14,rax
	call ETR_184
;; rsp=0 , %900~1'(= {| l |} ) %899~0'(= r ) 
; #12 0'(= r ) ⊢ 0'(= r )
	sub r13,1
;; rsp=0 , %901~0'(= r ) %900~1'(= {| l |} ) 
; » _^ .. ⊢ ..
; .. //
	mov rdi,0
	mov rsi,r13
	imul rsi,1
	add rdi,rsi 
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[r14]
	add rdi,rax 
	push rax
	add rdi,3
	push rdi 
	call mlc_s8
	pop rdi
	mov r8,rax
	lea rdi,[rax+7+rdi]
	std 
	mov QWORD [tmp],rcx 
	pop rcx
	lea rsi,[r14+7+rcx]
	rep movsb
	lea rsi,[LB_928+3-1]
	mov rcx,3
	rep movsb
	mov rax,r13
LB_930:
	cmp rax,0
	jz LB_931
	sub rax,1
	lea rsi,[LB_929+1-1]
	mov rcx,1
	rep movsb 
	jmp LB_930
LB_931:
	mov rcx,QWORD [tmp] 
;; rsp=0 , %904~2'(= {| l |} ) %903~1'(= {| l |} ) %902~0'(= r ) 
; ∎ { 0'(= r ) 2'(= {| l |} ) }
; .dlt.ptn 1'(= {| l |} )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	mov rdi,r8
	call free_s8
	C_POP_REGS
; .mov_ptn2 { 0'(= r ) 2'(= {| l |} ) } ⊢ { 0'(= r ) 1'(= {| l |} ) }
; .mov_ptn 2'(= {| l |} ) ⊢ 1'(= {| l |} )
	mov rax,r8
	mov r14,rax
	ret
ETR_184: ;; pnt_dt_qlq_etr { 0'(= r ) 1'(= a2◂ [ *{ {| l |}a43◂ [ ]}] ) } ⊢ { 0'(= r ) 1'(= {| l |} ) } : ({ _r64 _lst◂{ _s8 _t43 } }→{ _r64 _s8 })
;; rsp=0 , %906~1'(= a2◂ [ *{ {| l |}a43◂ [ ]}] ) %905~0'(= r ) 
;; ?; 1'(= a2◂ [ *{ {| l |}a43◂ [ ]}] ) ⊢ 0(<2)◂{ { 3'(= {| l |} ) 4'(= a43◂ [ ] ) } 5'(= a2◂ [ *{ {| l |}a43◂ [ ]}] ) }
	mov rdi,r14
	cmp BYTE [rdi+6],0
	jnz LB_933
	jmp LB_934
LB_933:
	jmp LB_932
LB_934:
	mov r8, QWORD [r14+8]
	mov r9, QWORD [r8+8]
	mov r10, QWORD [r8+16]
	mov QWORD [GBG_VCT+8*0],r8
	mov r11, QWORD [r14+16]
	mov QWORD [GBG_VCT+8*1],r14
	mov rdi,QWORD [GBG_VCT+8*1]
	FREE_RCD 2,rdi
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_RCD 2,rdi
;; rsp=0 , %909~5'(= a2◂ [ *{ {| l |}a43◂ [ ]}] ) %908~4'(= a43◂ [ ] ) %907~3'(= {| l |} ) %905~0'(= r ) 
; #184 { 0'(= r ) 5'(= a2◂ [ *{ {| l |}a43◂ [ ]}] ) } ⊢ { 0'(= r ) 1'(= {| l |} ) }
	sub rsp,16
	mov QWORD [rsp+8*0],r9
	mov QWORD [rsp+8*1],r10
; .mov_ptn2 { 0'(= r ) 5'(= a2◂ [ *{ {| l |}a43◂ [ ]}] ) } ⊢ { 0'(= r ) 1'(= a2◂ [ *{ {| l |}a43◂ [ ]}] ) }
; .mov_ptn 5'(= a2◂ [ *{ {| l |}a43◂ [ ]}] ) ⊢ 1'(= a2◂ [ *{ {| l |}a43◂ [ ]}] )
	mov rax,r11
	mov r14,rax
	call ETR_184
	mov r10,QWORD [rsp-8+8*2]
	mov r9,QWORD [rsp-8+8*1]
	add rsp,16
;; rsp=0 , %911~1'(= {| l |} ) %910~0'(= r ) %908~4'(= a43◂ [ ] ) %907~3'(= {| l |} ) 
;; ?; 4'(= a43◂ [ ] ) ⊢ 0(<2)◂{ 2'(= a2◂ [ {| l |}] ) 5'(= a2◂ [ *{ {| l |}a32◂ [ ]}] ) }
	mov rdi,r10
	cmp BYTE [rdi+6],0
	jnz LB_936
	jmp LB_937
LB_936:
	jmp LB_935
LB_937:
	mov r8, QWORD [r10+8]
	mov r11, QWORD [r10+16]
	mov QWORD [GBG_VCT+8*0],r10
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_RCD 2,rdi
;; rsp=0 , %913~5'(= a2◂ [ *{ {| l |}a32◂ [ ]}] ) %912~2'(= a2◂ [ {| l |}] ) %911~1'(= {| l |} ) %910~0'(= r ) %907~3'(= {| l |} ) 
; #11 0'(= r ) ⊢ 0'(= r )
	add r13,1
;; rsp=0 , %914~0'(= r ) %913~5'(= a2◂ [ *{ {| l |}a32◂ [ ]}] ) %912~2'(= a2◂ [ {| l |}] ) %911~1'(= {| l |} ) %907~3'(= {| l |} ) 
; #186 { 0'(= r ) 5'(= a2◂ [ *{ {| l |}a32◂ [ ]}] ) } ⊢ { 0'(= r ) 4'(= {| l |} ) }
	sub rsp,24
	mov QWORD [rsp+8*0],r14
	mov QWORD [rsp+8*1],r8
	mov QWORD [rsp+8*2],r9
; .mov_ptn2 { 0'(= r ) 5'(= a2◂ [ *{ {| l |}a32◂ [ ]}] ) } ⊢ { 0'(= r ) 1'(= a2◂ [ *{ {| l |}a32◂ [ ]}] ) }
; .mov_ptn 5'(= a2◂ [ *{ {| l |}a32◂ [ ]}] ) ⊢ 1'(= a2◂ [ *{ {| l |}a32◂ [ ]}] )
	mov rax,r11
	mov r14,rax
	call ETR_186
	mov r9,QWORD [rsp-8+8*3]
	mov r8,QWORD [rsp-8+8*2]
	mov r10,r14
	mov r14,QWORD [rsp-8+8*1]
	add rsp,24
;; rsp=0 , %916~4'(= {| l |} ) %915~0'(= r ) %912~2'(= a2◂ [ {| l |}] ) %911~1'(= {| l |} ) %907~3'(= {| l |} ) 
; #12 0'(= r ) ⊢ 0'(= r )
	sub r13,1
;; rsp=0 , %917~0'(= r ) %916~4'(= {| l |} ) %912~2'(= a2◂ [ {| l |}] ) %911~1'(= {| l |} ) %907~3'(= {| l |} ) 
; » _^ .. ⊢ ..
; .. //
	mov rdi,0
	mov rsi,r13
	imul rsi,1
	add rdi,rsi 
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[r9]
	add rdi,rax 
	push rax
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[r10]
	add rdi,rax 
	push rax
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[r14]
	add rdi,rax 
	push rax
	add rdi,3
	push rdi 
	call mlc_s8
	pop rdi
	mov r11,rax
	lea rdi,[rax+7+rdi]
	std 
	mov QWORD [tmp],rcx 
	pop rcx
	lea rsi,[r14+7+rcx]
	rep movsb
	pop rcx
	lea rsi,[r10+7+rcx]
	rep movsb
	lea rsi,[LB_938+1-1]
	mov rcx,1
	rep movsb
	pop rcx
	lea rsi,[r9+7+rcx]
	rep movsb
	lea rsi,[LB_939+2-1]
	mov rcx,2
	rep movsb
	mov rax,r13
LB_941:
	cmp rax,0
	jz LB_942
	sub rax,1
	lea rsi,[LB_940+1-1]
	mov rcx,1
	rep movsb 
	jmp LB_941
LB_942:
	mov rcx,QWORD [tmp] 
;; rsp=0 , %922~5'(= {| l |} ) %921~1'(= {| l |} ) %920~4'(= {| l |} ) %919~3'(= {| l |} ) %918~0'(= r ) %912~2'(= a2◂ [ {| l |}] ) 
; ∎ { 0'(= r ) 5'(= {| l |} ) }
; .dlt.ptn 1'(= {| l |} )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	mov rdi,r8
	call free_s8
	C_POP_REGS
; .dlt.ptn 4'(= {| l |} )
	mov rdi,r10
	C_PUSH_REGS
	mov r8,rdi
	mov rdi,r8
	call free_s8
	C_POP_REGS
; .dlt.ptn 3'(= {| l |} )
	mov rdi,r9
	C_PUSH_REGS
	mov r8,rdi
	mov rdi,r8
	call free_s8
	C_POP_REGS
; .dlt.ptn 2'(= a2◂ [ {| l |}] )
	mov rdi,r8
	C_PUSH_REGS
	mov r8,rdi
	call LB_905
	C_POP_REGS
; .mov_ptn2 { 0'(= r ) 5'(= {| l |} ) } ⊢ { 0'(= r ) 1'(= {| l |} ) }
; .mov_ptn 5'(= {| l |} ) ⊢ 1'(= {| l |} )
	mov rax,r11
	mov r14,rax
	ret
LB_935:
;; ?; 4'(= a43◂ [ ] ) ⊢ 1(<2)◂{ 2'(= a2◂ [ {| l |}] ) 5'(= a32◂ [ ] ) }
	mov r8, QWORD [r10+8]
	mov r11, QWORD [r10+16]
	mov QWORD [GBG_VCT+8*0],r10
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_RCD 2,rdi
;; rsp=0 , %924~5'(= a32◂ [ ] ) %923~2'(= a2◂ [ {| l |}] ) %911~1'(= {| l |} ) %910~0'(= r ) %907~3'(= {| l |} ) 
; » _^ .. ⊢ ..
; .. //
	mov rdi,0
	mov rsi,r13
	imul rsi,1
	add rdi,rsi 
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[r9]
	add rdi,rax 
	push rax
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[r14]
	add rdi,rax 
	push rax
	add rdi,9
	push rdi 
	call mlc_s8
	pop rdi
	mov r10,rax
	lea rdi,[rax+7+rdi]
	std 
	mov QWORD [tmp],rcx 
	pop rcx
	lea rsi,[r14+7+rcx]
	rep movsb
	lea rsi,[LB_943+7-1]
	mov rcx,7
	rep movsb
	pop rcx
	lea rsi,[r9+7+rcx]
	rep movsb
	lea rsi,[LB_944+2-1]
	mov rcx,2
	rep movsb
	mov rax,r13
LB_946:
	cmp rax,0
	jz LB_947
	sub rax,1
	lea rsi,[LB_945+1-1]
	mov rcx,1
	rep movsb 
	jmp LB_946
LB_947:
	mov rcx,QWORD [tmp] 
;; rsp=0 , %928~4'(= {| l |} ) %927~1'(= {| l |} ) %926~3'(= {| l |} ) %925~0'(= r ) %924~5'(= a32◂ [ ] ) %923~2'(= a2◂ [ {| l |}] ) 
; ∎ { 0'(= r ) 4'(= {| l |} ) }
; .dlt.ptn 1'(= {| l |} )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	mov rdi,r8
	call free_s8
	C_POP_REGS
; .dlt.ptn 3'(= {| l |} )
	mov rdi,r9
	C_PUSH_REGS
	mov r8,rdi
	mov rdi,r8
	call free_s8
	C_POP_REGS
; .dlt.ptn 5'(= a32◂ [ ] )
	mov rdi,r11
	C_PUSH_REGS
	mov r8,rdi
	call LB_915
	C_POP_REGS
; .dlt.ptn 2'(= a2◂ [ {| l |}] )
	mov rdi,r8
	C_PUSH_REGS
	mov r8,rdi
	call LB_905
	C_POP_REGS
; .mov_ptn2 { 0'(= r ) 4'(= {| l |} ) } ⊢ { 0'(= r ) 1'(= {| l |} ) }
; .mov_ptn 4'(= {| l |} ) ⊢ 1'(= {| l |} )
	mov rax,r10
	mov r14,rax
	ret
LB_932:
;; ?; 1'(= a2◂ [ *{ {| l |}a43◂ [ ]}] ) ⊢ 1(<2)◂{ }
;; rsp=0 , %905~0'(= r ) 
; $ %[ "" ] ⊢ %[ "" ]
;; rsp=0 , %929~%[ "" ] %905~0'(= r ) 
; ∎ { 0'(= r ) %[ "" ] }
; .mov_ptn2 { 0'(= r ) %[ "" ] } ⊢ { 0'(= r ) 1'(= {| l |} ) }
; .mov_ptn %[ "" ] ⊢ 1'(= {| l |} )
	mov rsi,1  
	mov rdi,16
	xor rax,rax 
	C_CALL_SF calloc
	mov QWORD [rax],0
	mov r14,rax
	ret
ETR_185: ;; pnt_dt_etr { 0'(= r ) 1'(= a43◂ [ ] ) } ⊢ { 0'(= r ) 1'(= {| l |} ) } : ({ _r64 _t43 }→{ _r64 _s8 })
;; rsp=0 , %931~1'(= a43◂ [ ] ) %930~0'(= r ) 
;; ?; 1'(= a43◂ [ ] ) ⊢ 0(<2)◂{ 2'(= a2◂ [ {| l |}] ) 3'(= a2◂ [ *{ {| l |}a32◂ [ ]}] ) }
	mov rdi,r14
	cmp BYTE [rdi+6],0
	jnz LB_949
	jmp LB_950
LB_949:
	jmp LB_948
LB_950:
	mov r8, QWORD [r14+8]
	mov r9, QWORD [r14+16]
	mov QWORD [GBG_VCT+8*0],r14
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_RCD 2,rdi
;; rsp=0 , %933~3'(= a2◂ [ *{ {| l |}a32◂ [ ]}] ) %932~2'(= a2◂ [ {| l |}] ) %930~0'(= r ) 
; #11 0'(= r ) ⊢ 0'(= r )
	add r13,1
;; rsp=0 , %934~0'(= r ) %933~3'(= a2◂ [ *{ {| l |}a32◂ [ ]}] ) %932~2'(= a2◂ [ {| l |}] ) 
; #186 { 0'(= r ) 3'(= a2◂ [ *{ {| l |}a32◂ [ ]}] ) } ⊢ { 0'(= r ) 1'(= {| l |} ) }
	sub rsp,8
	mov QWORD [rsp+8*0],r8
; .mov_ptn2 { 0'(= r ) 3'(= a2◂ [ *{ {| l |}a32◂ [ ]}] ) } ⊢ { 0'(= r ) 1'(= a2◂ [ *{ {| l |}a32◂ [ ]}] ) }
; .mov_ptn 3'(= a2◂ [ *{ {| l |}a32◂ [ ]}] ) ⊢ 1'(= a2◂ [ *{ {| l |}a32◂ [ ]}] )
	mov rax,r9
	mov r14,rax
	call ETR_186
	mov r8,QWORD [rsp-8+8*1]
	add rsp,8
;; rsp=0 , %936~1'(= {| l |} ) %935~0'(= r ) %932~2'(= a2◂ [ {| l |}] ) 
; #12 0'(= r ) ⊢ 0'(= r )
	sub r13,1
;; rsp=0 , %937~0'(= r ) %936~1'(= {| l |} ) %932~2'(= a2◂ [ {| l |}] ) 
; » _^ .. ⊢ ..
; .. //
	mov rdi,0
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[r14]
	add rdi,rax 
	push rax
	add rdi,1
	push rdi 
	call mlc_s8
	pop rdi
	mov r9,rax
	lea rdi,[rax+7+rdi]
	std 
	mov QWORD [tmp],rcx 
	pop rcx
	lea rsi,[r14+7+rcx]
	rep movsb
	lea rsi,[LB_951+1-1]
	mov rcx,1
	rep movsb
	mov rcx,QWORD [tmp] 
;; rsp=0 , %939~3'(= {| l |} ) %938~1'(= {| l |} ) %937~0'(= r ) %932~2'(= a2◂ [ {| l |}] ) 
; ∎ { 0'(= r ) 1'(= {| l |} ) }
; .dlt.ptn 3'(= {| l |} )
	mov rdi,r9
	C_PUSH_REGS
	mov r8,rdi
	mov rdi,r8
	call free_s8
	C_POP_REGS
; .dlt.ptn 2'(= a2◂ [ {| l |}] )
	mov rdi,r8
	C_PUSH_REGS
	mov r8,rdi
	call LB_905
	C_POP_REGS
; .mov_ptn2 { 0'(= r ) 1'(= {| l |} ) } ⊢ { 0'(= r ) 1'(= {| l |} ) }
	ret
LB_948:
;; ?; 1'(= a43◂ [ ] ) ⊢ 1(<2)◂{ 2'(= a2◂ [ {| l |}] ) 3'(= a32◂ [ ] ) }
	mov r8, QWORD [r14+8]
	mov r9, QWORD [r14+16]
	mov QWORD [GBG_VCT+8*0],r14
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_RCD 2,rdi
;; rsp=0 , %941~3'(= a32◂ [ ] ) %940~2'(= a2◂ [ {| l |}] ) %930~0'(= r ) 
; #187 3'(= a32◂ [ ] ) ⊢ 1'(= {| l |} )
	sub rsp,16
	mov QWORD [rsp+8*0],r13
	mov QWORD [rsp+8*1],r8
; .mov_ptn2 3'(= a32◂ [ ] ) ⊢ 0'(= a32◂ [ ] )
; .mov_ptn 3'(= a32◂ [ ] ) ⊢ 0'(= a32◂ [ ] )
	mov rax,r9
	mov r13,rax
	call ETR_187
	mov r8,QWORD [rsp-8+8*2]
	mov r14,r13
	mov r13,QWORD [rsp-8+8*1]
	add rsp,16
;; rsp=0 , %942~1'(= {| l |} ) %940~2'(= a2◂ [ {| l |}] ) %930~0'(= r ) 
; » _^ .. ⊢ ..
; .. //
	mov rdi,0
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[r14]
	add rdi,rax 
	push rax
	add rdi,4
	push rdi 
	call mlc_s8
	pop rdi
	mov r9,rax
	lea rdi,[rax+7+rdi]
	std 
	mov QWORD [tmp],rcx 
	lea rsi,[LB_952+1-1]
	mov rcx,1
	rep movsb
	pop rcx
	lea rsi,[r14+7+rcx]
	rep movsb
	lea rsi,[LB_953+3-1]
	mov rcx,3
	rep movsb
	mov rcx,QWORD [tmp] 
;; rsp=0 , %944~3'(= {| l |} ) %943~1'(= {| l |} ) %940~2'(= a2◂ [ {| l |}] ) %930~0'(= r ) 
; ∎ { 0'(= r ) 3'(= {| l |} ) }
; .dlt.ptn 1'(= {| l |} )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	mov rdi,r8
	call free_s8
	C_POP_REGS
; .dlt.ptn 2'(= a2◂ [ {| l |}] )
	mov rdi,r8
	C_PUSH_REGS
	mov r8,rdi
	call LB_905
	C_POP_REGS
; .mov_ptn2 { 0'(= r ) 3'(= {| l |} ) } ⊢ { 0'(= r ) 1'(= {| l |} ) }
; .mov_ptn 3'(= {| l |} ) ⊢ 1'(= {| l |} )
	mov rax,r9
	mov r14,rax
	ret
ETR_186: ;; pnt_dt_def { 0'(= r ) 1'(= a2◂ [ *{ {| l |}a32◂ [ ]}] ) } ⊢ { 0'(= r ) 1'(= {| l |} ) } : ({ _r64 _lst◂{ _s8 _t32 } }→{ _r64 _s8 })
;; rsp=0 , %946~1'(= a2◂ [ *{ {| l |}a32◂ [ ]}] ) %945~0'(= r ) 
;; ?; 1'(= a2◂ [ *{ {| l |}a32◂ [ ]}] ) ⊢ 0(<2)◂{ { 3'(= {| l |} ) 4'(= a32◂ [ ] ) } 5'(= a2◂ [ *{ {| l |}a32◂ [ ]}] ) }
	mov rdi,r14
	cmp BYTE [rdi+6],0
	jnz LB_955
	jmp LB_956
LB_955:
	jmp LB_954
LB_956:
	mov r8, QWORD [r14+8]
	mov r9, QWORD [r8+8]
	mov r10, QWORD [r8+16]
	mov QWORD [GBG_VCT+8*0],r8
	mov r11, QWORD [r14+16]
	mov QWORD [GBG_VCT+8*1],r14
	mov rdi,QWORD [GBG_VCT+8*1]
	FREE_RCD 2,rdi
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_RCD 2,rdi
;; rsp=0 , %949~5'(= a2◂ [ *{ {| l |}a32◂ [ ]}] ) %948~4'(= a32◂ [ ] ) %947~3'(= {| l |} ) %945~0'(= r ) 
; #186 { 0'(= r ) 5'(= a2◂ [ *{ {| l |}a32◂ [ ]}] ) } ⊢ { 0'(= r ) 1'(= {| l |} ) }
	sub rsp,16
	mov QWORD [rsp+8*0],r9
	mov QWORD [rsp+8*1],r10
; .mov_ptn2 { 0'(= r ) 5'(= a2◂ [ *{ {| l |}a32◂ [ ]}] ) } ⊢ { 0'(= r ) 1'(= a2◂ [ *{ {| l |}a32◂ [ ]}] ) }
; .mov_ptn 5'(= a2◂ [ *{ {| l |}a32◂ [ ]}] ) ⊢ 1'(= a2◂ [ *{ {| l |}a32◂ [ ]}] )
	mov rax,r11
	mov r14,rax
	call ETR_186
	mov r10,QWORD [rsp-8+8*2]
	mov r9,QWORD [rsp-8+8*1]
	add rsp,16
;; rsp=0 , %951~1'(= {| l |} ) %950~0'(= r ) %948~4'(= a32◂ [ ] ) %947~3'(= {| l |} ) 
; #187 4'(= a32◂ [ ] ) ⊢ 2'(= {| l |} )
	sub rsp,24
	mov QWORD [rsp+8*0],r13
	mov QWORD [rsp+8*1],r14
	mov QWORD [rsp+8*2],r9
; .mov_ptn2 4'(= a32◂ [ ] ) ⊢ 0'(= a32◂ [ ] )
; .mov_ptn 4'(= a32◂ [ ] ) ⊢ 0'(= a32◂ [ ] )
	mov rax,r10
	mov r13,rax
	call ETR_187
	mov r9,QWORD [rsp-8+8*3]
	mov r14,QWORD [rsp-8+8*2]
	mov r8,r13
	mov r13,QWORD [rsp-8+8*1]
	add rsp,24
;; rsp=0 , %952~2'(= {| l |} ) %951~1'(= {| l |} ) %950~0'(= r ) %947~3'(= {| l |} ) 
; » _^ .. ⊢ ..
; .. //
	mov rdi,0
	mov rsi,r13
	imul rsi,1
	add rdi,rsi 
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[r9]
	add rdi,rax 
	push rax
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[r8]
	add rdi,rax 
	push rax
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[r14]
	add rdi,rax 
	push rax
	add rdi,8
	push rdi 
	call mlc_s8
	pop rdi
	mov r10,rax
	lea rdi,[rax+7+rdi]
	std 
	mov QWORD [tmp],rcx 
	pop rcx
	lea rsi,[r14+7+rcx]
	rep movsb
	lea rsi,[LB_957+1-1]
	mov rcx,1
	rep movsb
	pop rcx
	lea rsi,[r8+7+rcx]
	rep movsb
	lea rsi,[LB_958+3-1]
	mov rcx,3
	rep movsb
	pop rcx
	lea rsi,[r9+7+rcx]
	rep movsb
	lea rsi,[LB_959+4-1]
	mov rcx,4
	rep movsb
	mov rax,r13
LB_961:
	cmp rax,0
	jz LB_962
	sub rax,1
	lea rsi,[LB_960+1-1]
	mov rcx,1
	rep movsb 
	jmp LB_961
LB_962:
	mov rcx,QWORD [tmp] 
;; rsp=0 , %957~4'(= {| l |} ) %956~1'(= {| l |} ) %955~2'(= {| l |} ) %954~3'(= {| l |} ) %953~0'(= r ) 
; ∎ { 0'(= r ) 4'(= {| l |} ) }
; .dlt.ptn 1'(= {| l |} )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	mov rdi,r8
	call free_s8
	C_POP_REGS
; .dlt.ptn 2'(= {| l |} )
	mov rdi,r8
	C_PUSH_REGS
	mov r8,rdi
	mov rdi,r8
	call free_s8
	C_POP_REGS
; .dlt.ptn 3'(= {| l |} )
	mov rdi,r9
	C_PUSH_REGS
	mov r8,rdi
	mov rdi,r8
	call free_s8
	C_POP_REGS
; .mov_ptn2 { 0'(= r ) 4'(= {| l |} ) } ⊢ { 0'(= r ) 1'(= {| l |} ) }
; .mov_ptn 4'(= {| l |} ) ⊢ 1'(= {| l |} )
	mov rax,r10
	mov r14,rax
	ret
LB_954:
;; ?; 1'(= a2◂ [ *{ {| l |}a32◂ [ ]}] ) ⊢ 1(<2)◂{ }
;; rsp=0 , %945~0'(= r ) 
; $ %[ "" ] ⊢ %[ "" ]
;; rsp=0 , %958~%[ "" ] %945~0'(= r ) 
; ∎ { 0'(= r ) %[ "" ] }
; .mov_ptn2 { 0'(= r ) %[ "" ] } ⊢ { 0'(= r ) 1'(= {| l |} ) }
; .mov_ptn %[ "" ] ⊢ 1'(= {| l |} )
	mov rsi,1  
	mov rdi,16
	xor rax,rax 
	C_CALL_SF calloc
	mov QWORD [rax],0
	mov r14,rax
	ret
ETR_187: ;; pnt_type 0'(= a32◂ [ ] ) ⊢ 0'(= {| l |} ) : (_t32→_s8)
;; rsp=0 , %959~0'(= a32◂ [ ] ) 
;; ?; 0'(= a32◂ [ ] ) ⊢ 0(<5)◂1'(= a2◂ [ a32◂ [ ]] )
	mov rdi,r13
	cmp BYTE [rdi+6],0
	jnz LB_964
	jmp LB_965
LB_964:
	jmp LB_963
LB_965:
	mov QWORD [GBG_VCT+8*0],rdi
	mov r14,QWORD [rdi+8]
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_LN rdi
;; rsp=0 , %960~1'(= a2◂ [ a32◂ [ ]] ) 
; #188 1'(= a2◂ [ a32◂ [ ]] ) ⊢ 0'(= {| l |} )
; .mov_ptn2 1'(= a2◂ [ a32◂ [ ]] ) ⊢ 0'(= a2◂ [ a32◂ [ ]] )
; .mov_ptn 1'(= a2◂ [ a32◂ [ ]] ) ⊢ 0'(= a2◂ [ a32◂ [ ]] )
	mov rax,r14
	mov r13,rax
	call ETR_188
;; rsp=0 , %961~0'(= {| l |} ) 
; » _^ .. ⊢ ..
; .. //
	mov rdi,0
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[r13]
	add rdi,rax 
	push rax
	add rdi,3
	push rdi 
	call mlc_s8
	pop rdi
	mov r14,rax
	lea rdi,[rax+7+rdi]
	std 
	mov QWORD [tmp],rcx 
	lea rsi,[LB_966+1-1]
	mov rcx,1
	rep movsb
	pop rcx
	lea rsi,[r13+7+rcx]
	rep movsb
	lea rsi,[LB_967+2-1]
	mov rcx,2
	rep movsb
	mov rcx,QWORD [tmp] 
;; rsp=0 , %963~1'(= {| l |} ) %962~0'(= {| l |} ) 
; ∎ 1'(= {| l |} )
; .dlt.ptn 0'(= {| l |} )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	mov rdi,r8
	call free_s8
	C_POP_REGS
; .mov_ptn2 1'(= {| l |} ) ⊢ 0'(= {| l |} )
; .mov_ptn 1'(= {| l |} ) ⊢ 0'(= {| l |} )
	mov rax,r14
	mov r13,rax
	ret
LB_963:
;; ?; 0'(= a32◂ [ ] ) ⊢ 1(<5)◂{ 1'(= a32◂ [ ] ) 2'(= a32◂ [ ] ) }
	mov rdi,r13
	cmp BYTE [rdi+6],1
	jnz LB_969
	jmp LB_970
LB_969:
	jmp LB_968
LB_970:
	mov r14, QWORD [r13+8]
	mov r8, QWORD [r13+16]
	mov QWORD [GBG_VCT+8*0],r13
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_RCD 2,rdi
;; rsp=0 , %965~2'(= a32◂ [ ] ) %964~1'(= a32◂ [ ] ) 
; #187 1'(= a32◂ [ ] ) ⊢ 0'(= {| l |} )
	sub rsp,8
	mov QWORD [rsp+8*0],r8
; .mov_ptn2 1'(= a32◂ [ ] ) ⊢ 0'(= a32◂ [ ] )
; .mov_ptn 1'(= a32◂ [ ] ) ⊢ 0'(= a32◂ [ ] )
	mov rax,r14
	mov r13,rax
	call ETR_187
	mov r8,QWORD [rsp-8+8*1]
	add rsp,8
;; rsp=0 , %966~0'(= {| l |} ) %965~2'(= a32◂ [ ] ) 
; #187 2'(= a32◂ [ ] ) ⊢ 1'(= {| l |} )
	sub rsp,8
	mov QWORD [rsp+8*0],r13
; .mov_ptn2 2'(= a32◂ [ ] ) ⊢ 0'(= a32◂ [ ] )
; .mov_ptn 2'(= a32◂ [ ] ) ⊢ 0'(= a32◂ [ ] )
	mov rax,r8
	mov r13,rax
	call ETR_187
	mov r14,r13
	mov r13,QWORD [rsp-8+8*1]
	add rsp,8
;; rsp=0 , %967~1'(= {| l |} ) %966~0'(= {| l |} ) 
; » _^ .. ⊢ ..
; .. //
	mov rdi,0
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[r13]
	add rdi,rax 
	push rax
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[r14]
	add rdi,rax 
	push rax
	add rdi,5
	push rdi 
	call mlc_s8
	pop rdi
	mov r8,rax
	lea rdi,[rax+7+rdi]
	std 
	mov QWORD [tmp],rcx 
	pop rcx
	lea rsi,[r14+7+rcx]
	rep movsb
	lea rsi,[LB_971+5-1]
	mov rcx,5
	rep movsb
	pop rcx
	lea rsi,[r13+7+rcx]
	rep movsb
	mov rcx,QWORD [tmp] 
;; rsp=0 , %970~2'(= {| l |} ) %969~1'(= {| l |} ) %968~0'(= {| l |} ) 
; ∎ 2'(= {| l |} )
; .dlt.ptn 1'(= {| l |} )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	mov rdi,r8
	call free_s8
	C_POP_REGS
; .dlt.ptn 0'(= {| l |} )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	mov rdi,r8
	call free_s8
	C_POP_REGS
; .mov_ptn2 2'(= {| l |} ) ⊢ 0'(= {| l |} )
; .mov_ptn 2'(= {| l |} ) ⊢ 0'(= {| l |} )
	mov rax,r8
	mov r13,rax
	ret
LB_968:
;; ?; 0'(= a32◂ [ ] ) ⊢ 2(<5)◂{ 1'(= a32◂ [ ] ) 2'(= a32◂ [ ] ) }
	mov rdi,r13
	cmp BYTE [rdi+6],2
	jnz LB_973
	jmp LB_974
LB_973:
	jmp LB_972
LB_974:
	mov r14, QWORD [r13+8]
	mov r8, QWORD [r13+16]
	mov QWORD [GBG_VCT+8*0],r13
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_RCD 2,rdi
;; rsp=0 , %972~2'(= a32◂ [ ] ) %971~1'(= a32◂ [ ] ) 
; #187 1'(= a32◂ [ ] ) ⊢ 0'(= {| l |} )
	sub rsp,8
	mov QWORD [rsp+8*0],r8
; .mov_ptn2 1'(= a32◂ [ ] ) ⊢ 0'(= a32◂ [ ] )
; .mov_ptn 1'(= a32◂ [ ] ) ⊢ 0'(= a32◂ [ ] )
	mov rax,r14
	mov r13,rax
	call ETR_187
	mov r8,QWORD [rsp-8+8*1]
	add rsp,8
;; rsp=0 , %973~0'(= {| l |} ) %972~2'(= a32◂ [ ] ) 
; #187 2'(= a32◂ [ ] ) ⊢ 1'(= {| l |} )
	sub rsp,8
	mov QWORD [rsp+8*0],r13
; .mov_ptn2 2'(= a32◂ [ ] ) ⊢ 0'(= a32◂ [ ] )
; .mov_ptn 2'(= a32◂ [ ] ) ⊢ 0'(= a32◂ [ ] )
	mov rax,r8
	mov r13,rax
	call ETR_187
	mov r14,r13
	mov r13,QWORD [rsp-8+8*1]
	add rsp,8
;; rsp=0 , %974~1'(= {| l |} ) %973~0'(= {| l |} ) 
; » _^ .. ⊢ ..
; .. //
	mov rdi,0
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[r13]
	add rdi,rax 
	push rax
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[r14]
	add rdi,rax 
	push rax
	add rdi,3
	push rdi 
	call mlc_s8
	pop rdi
	mov r8,rax
	lea rdi,[rax+7+rdi]
	std 
	mov QWORD [tmp],rcx 
	pop rcx
	lea rsi,[r14+7+rcx]
	rep movsb
	lea rsi,[LB_975+3-1]
	mov rcx,3
	rep movsb
	pop rcx
	lea rsi,[r13+7+rcx]
	rep movsb
	mov rcx,QWORD [tmp] 
;; rsp=0 , %977~2'(= {| l |} ) %976~1'(= {| l |} ) %975~0'(= {| l |} ) 
; ∎ 2'(= {| l |} )
; .dlt.ptn 1'(= {| l |} )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	mov rdi,r8
	call free_s8
	C_POP_REGS
; .dlt.ptn 0'(= {| l |} )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	mov rdi,r8
	call free_s8
	C_POP_REGS
; .mov_ptn2 2'(= {| l |} ) ⊢ 0'(= {| l |} )
; .mov_ptn 2'(= {| l |} ) ⊢ 0'(= {| l |} )
	mov rax,r8
	mov r13,rax
	ret
LB_972:
;; ?; 0'(= a32◂ [ ] ) ⊢ 3(<5)◂1'(= a18◂ [ ] )
	mov rdi,r13
	cmp BYTE [rdi+6],3
	jnz LB_977
	jmp LB_978
LB_977:
	jmp LB_976
LB_978:
	mov QWORD [GBG_VCT+8*0],rdi
	mov r14,QWORD [rdi+8]
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_LN rdi
;; rsp=0 , %978~1'(= a18◂ [ ] ) 
; #87 1'(= a18◂ [ ] ) ⊢ 0'(= {| l |} )
; .mov_ptn2 1'(= a18◂ [ ] ) ⊢ 0'(= a18◂ [ ] )
; .mov_ptn 1'(= a18◂ [ ] ) ⊢ 0'(= a18◂ [ ] )
	mov rax,r14
	mov r13,rax
	call ETR_87
;; rsp=0 , %979~0'(= {| l |} ) 
; ∎ 0'(= {| l |} )
; .mov_ptn2 0'(= {| l |} ) ⊢ 0'(= {| l |} )
	ret
LB_976:
;; ?; 0'(= a32◂ [ ] ) ⊢ 4(<5)◂0'(= {| l |} )
;; rsp=0 , %980~0'(= {| l |} ) 
; » _^ .. ⊢ ..
; .. //
	mov rdi,0
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[r13]
	add rdi,rax 
	push rax
	add rdi,1
	push rdi 
	call mlc_s8
	pop rdi
	mov r14,rax
	lea rdi,[rax+7+rdi]
	std 
	mov QWORD [tmp],rcx 
	lea rsi,[LB_979+1-1]
	mov rcx,1
	rep movsb
	pop rcx
	lea rsi,[r13+7+rcx]
	rep movsb
	mov rcx,QWORD [tmp] 
;; rsp=0 , %982~1'(= {| l |} ) %981~0'(= {| l |} ) 
; ∎ 1'(= {| l |} )
; .dlt.ptn 0'(= {| l |} )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	mov rdi,r8
	call free_s8
	C_POP_REGS
; .mov_ptn2 1'(= {| l |} ) ⊢ 0'(= {| l |} )
; .mov_ptn 1'(= {| l |} ) ⊢ 0'(= {| l |} )
	mov rax,r14
	mov r13,rax
	ret
ETR_188: ;; pnt_type_rcd 0'(= a2◂ [ a32◂ [ ]] ) ⊢ 0'(= {| l |} ) : (_lst◂_t32→_s8)
;; rsp=0 , %983~0'(= a2◂ [ a32◂ [ ]] ) 
;; ?; 0'(= a2◂ [ a32◂ [ ]] ) ⊢ 0(<2)◂{ 1'(= a32◂ [ ] ) 2'(= a2◂ [ a32◂ [ ]] ) }
	mov rdi,r13
	cmp BYTE [rdi+6],0
	jnz LB_981
	jmp LB_982
LB_981:
	jmp LB_980
LB_982:
	mov r14, QWORD [r13+8]
	mov r8, QWORD [r13+16]
	mov QWORD [GBG_VCT+8*0],r13
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_RCD 2,rdi
;; rsp=0 , %985~2'(= a2◂ [ a32◂ [ ]] ) %984~1'(= a32◂ [ ] ) 
; #187 1'(= a32◂ [ ] ) ⊢ 0'(= {| l |} )
	sub rsp,8
	mov QWORD [rsp+8*0],r8
; .mov_ptn2 1'(= a32◂ [ ] ) ⊢ 0'(= a32◂ [ ] )
; .mov_ptn 1'(= a32◂ [ ] ) ⊢ 0'(= a32◂ [ ] )
	mov rax,r14
	mov r13,rax
	call ETR_187
	mov r8,QWORD [rsp-8+8*1]
	add rsp,8
;; rsp=0 , %986~0'(= {| l |} ) %985~2'(= a2◂ [ a32◂ [ ]] ) 
; #188 2'(= a2◂ [ a32◂ [ ]] ) ⊢ 1'(= {| l |} )
	sub rsp,8
	mov QWORD [rsp+8*0],r13
; .mov_ptn2 2'(= a2◂ [ a32◂ [ ]] ) ⊢ 0'(= a2◂ [ a32◂ [ ]] )
; .mov_ptn 2'(= a2◂ [ a32◂ [ ]] ) ⊢ 0'(= a2◂ [ a32◂ [ ]] )
	mov rax,r8
	mov r13,rax
	call ETR_188
	mov r14,r13
	mov r13,QWORD [rsp-8+8*1]
	add rsp,8
;; rsp=0 , %987~1'(= {| l |} ) %986~0'(= {| l |} ) 
; » _^ .. ⊢ ..
; .. //
	mov rdi,0
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[r13]
	add rdi,rax 
	push rax
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[r14]
	add rdi,rax 
	push rax
	add rdi,1
	push rdi 
	call mlc_s8
	pop rdi
	mov r8,rax
	lea rdi,[rax+7+rdi]
	std 
	mov QWORD [tmp],rcx 
	pop rcx
	lea rsi,[r14+7+rcx]
	rep movsb
	lea rsi,[LB_983+1-1]
	mov rcx,1
	rep movsb
	pop rcx
	lea rsi,[r13+7+rcx]
	rep movsb
	mov rcx,QWORD [tmp] 
;; rsp=0 , %990~2'(= {| l |} ) %989~1'(= {| l |} ) %988~0'(= {| l |} ) 
; ∎ 2'(= {| l |} )
; .dlt.ptn 1'(= {| l |} )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	mov rdi,r8
	call free_s8
	C_POP_REGS
; .dlt.ptn 0'(= {| l |} )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	mov rdi,r8
	call free_s8
	C_POP_REGS
; .mov_ptn2 2'(= {| l |} ) ⊢ 0'(= {| l |} )
; .mov_ptn 2'(= {| l |} ) ⊢ 0'(= {| l |} )
	mov rax,r8
	mov r13,rax
	ret
LB_980:
;; ?; 0'(= a2◂ [ a32◂ [ ]] ) ⊢ 1(<2)◂{ }
;; rsp=0 , 
; $ %[ "" ] ⊢ %[ "" ]
;; rsp=0 , %991~%[ "" ] 
; ∎ %[ "" ]
; .mov_ptn2 %[ "" ] ⊢ 0'(= {| l |} )
; .mov_ptn %[ "" ] ⊢ 0'(= {| l |} )
	mov rsi,1  
	mov rdi,16
	xor rax,rax 
	C_CALL_SF calloc
	mov QWORD [rax],0
	mov r13,rax
	ret
ETR_189: ;; pnt_lc_etr { 0'(= r ) 1'(= a42◂ [ ] ) } ⊢ { 0'(= r ) 1'(= {| l |} ) } : ({ _r64 _t42 }→{ _r64 _s8 })
;; rsp=0 , %993~1'(= a42◂ [ ] ) %992~0'(= r ) 
;; ?; 1'(= a42◂ [ ] ) ⊢ 0(<3)◂{ 2'(= a17◂ [ a22◂ [ {| l |}]] ) 3'(= a3◂ [ a32◂ [ ]] ) 4'(= a26◂ [ a18◂ [ ]{| l |}] ) }
	mov rdi,r14
	cmp BYTE [rdi+6],0
	jnz LB_985
	jmp LB_986
LB_985:
	jmp LB_984
LB_986:
	mov r8, QWORD [r14+8]
	mov r9, QWORD [r14+16]
	mov r10, QWORD [r14+24]
	mov QWORD [GBG_VCT+8*0],r14
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_RCD 3,rdi
;; rsp=0 , %996~4'(= a26◂ [ a18◂ [ ]{| l |}] ) %995~3'(= a3◂ [ a32◂ [ ]] ) %994~2'(= a17◂ [ a22◂ [ {| l |}]] ) %992~0'(= r ) 
;; ?; 3'(= a3◂ [ a32◂ [ ]] ) ⊢ 0(<2)◂1'(= a32◂ [ ] )
	mov rdi,r9
	cmp BYTE [rdi+6],0
	jnz LB_988
	jmp LB_989
LB_988:
	jmp LB_987
LB_989:
	mov QWORD [GBG_VCT+8*0],rdi
	mov r14,QWORD [rdi+8]
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_LN rdi
;; rsp=0 , %997~1'(= a32◂ [ ] ) %996~4'(= a26◂ [ a18◂ [ ]{| l |}] ) %994~2'(= a17◂ [ a22◂ [ {| l |}]] ) %992~0'(= r ) 
; #187 1'(= a32◂ [ ] ) ⊢ 1'(= {| l |} )
	sub rsp,24
	mov QWORD [rsp+8*0],r13
	mov QWORD [rsp+8*1],r8
	mov QWORD [rsp+8*2],r10
; .mov_ptn2 1'(= a32◂ [ ] ) ⊢ 0'(= a32◂ [ ] )
; .mov_ptn 1'(= a32◂ [ ] ) ⊢ 0'(= a32◂ [ ] )
	mov rax,r14
	mov r13,rax
	call ETR_187
	mov r10,QWORD [rsp-8+8*3]
	mov r8,QWORD [rsp-8+8*2]
	mov r14,r13
	mov r13,QWORD [rsp-8+8*1]
	add rsp,24
;; rsp=0 , %998~1'(= {| l |} ) %996~4'(= a26◂ [ a18◂ [ ]{| l |}] ) %994~2'(= a17◂ [ a22◂ [ {| l |}]] ) %992~0'(= r ) 
; #104 2'(= a17◂ [ a22◂ [ {| l |}]] ) ⊢ 2'(= {| l |} )
	sub rsp,24
	mov QWORD [rsp+8*0],r13
	mov QWORD [rsp+8*1],r14
	mov QWORD [rsp+8*2],r10
; .mov_ptn2 2'(= a17◂ [ a22◂ [ {| l |}]] ) ⊢ 0'(= a17◂ [ a22◂ [ {| l |}]] )
; .mov_ptn 2'(= a17◂ [ a22◂ [ {| l |}]] ) ⊢ 0'(= a17◂ [ a22◂ [ {| l |}]] )
	mov rax,r8
	mov r13,rax
	call ETR_104
	mov r10,QWORD [rsp-8+8*3]
	mov r14,QWORD [rsp-8+8*2]
	mov r8,r13
	mov r13,QWORD [rsp-8+8*1]
	add rsp,24
;; rsp=0 , %999~2'(= {| l |} ) %998~1'(= {| l |} ) %996~4'(= a26◂ [ a18◂ [ ]{| l |}] ) %992~0'(= r ) 
; #11 0'(= r ) ⊢ 0'(= r )
	add r13,1
;; rsp=0 , %1000~0'(= r ) %999~2'(= {| l |} ) %998~1'(= {| l |} ) %996~4'(= a26◂ [ a18◂ [ ]{| l |}] ) 
; #137 { 0'(= r ) 4'(= a26◂ [ a18◂ [ ]{| l |}] ) } ⊢ { 0'(= r ) 3'(= {| l |} ) }
	sub rsp,16
	mov QWORD [rsp+8*0],r14
	mov QWORD [rsp+8*1],r8
; .mov_ptn2 { 0'(= r ) 4'(= a26◂ [ a18◂ [ ]{| l |}] ) } ⊢ { 0'(= r ) 1'(= a26◂ [ a18◂ [ ]{| l |}] ) }
; .mov_ptn 4'(= a26◂ [ a18◂ [ ]{| l |}] ) ⊢ 1'(= a26◂ [ a18◂ [ ]{| l |}] )
	mov rax,r10
	mov r14,rax
	call ETR_137
	mov r8,QWORD [rsp-8+8*2]
	mov r9,r14
	mov r14,QWORD [rsp-8+8*1]
	add rsp,16
;; rsp=0 , %1002~3'(= {| l |} ) %1001~0'(= r ) %999~2'(= {| l |} ) %998~1'(= {| l |} ) 
; #12 0'(= r ) ⊢ 0'(= r )
	sub r13,1
;; rsp=0 , %1003~0'(= r ) %1002~3'(= {| l |} ) %999~2'(= {| l |} ) %998~1'(= {| l |} ) 
; » _^ .. ⊢ ..
; .. //
	mov rdi,0
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[r8]
	add rdi,rax 
	push rax
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[r14]
	add rdi,rax 
	push rax
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[r9]
	add rdi,rax 
	push rax
	add rdi,5
	push rdi 
	call mlc_s8
	pop rdi
	mov r10,rax
	lea rdi,[rax+7+rdi]
	std 
	mov QWORD [tmp],rcx 
	pop rcx
	lea rsi,[r9+7+rcx]
	rep movsb
	lea rsi,[LB_990+1-1]
	mov rcx,1
	rep movsb
	pop rcx
	lea rsi,[r14+7+rcx]
	rep movsb
	lea rsi,[LB_991+3-1]
	mov rcx,3
	rep movsb
	pop rcx
	lea rsi,[r8+7+rcx]
	rep movsb
	lea rsi,[LB_992+1-1]
	mov rcx,1
	rep movsb
	mov rcx,QWORD [tmp] 
;; rsp=0 , %1007~4'(= {| l |} ) %1006~1'(= {| l |} ) %1005~3'(= {| l |} ) %1004~2'(= {| l |} ) %1003~0'(= r ) 
; ∎ { 0'(= r ) 4'(= {| l |} ) }
; .dlt.ptn 1'(= {| l |} )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	mov rdi,r8
	call free_s8
	C_POP_REGS
; .dlt.ptn 3'(= {| l |} )
	mov rdi,r9
	C_PUSH_REGS
	mov r8,rdi
	mov rdi,r8
	call free_s8
	C_POP_REGS
; .dlt.ptn 2'(= {| l |} )
	mov rdi,r8
	C_PUSH_REGS
	mov r8,rdi
	mov rdi,r8
	call free_s8
	C_POP_REGS
; .mov_ptn2 { 0'(= r ) 4'(= {| l |} ) } ⊢ { 0'(= r ) 1'(= {| l |} ) }
; .mov_ptn 4'(= {| l |} ) ⊢ 1'(= {| l |} )
	mov rax,r10
	mov r14,rax
	ret
LB_987:
;; rsp=0 , %996~4'(= a26◂ [ a18◂ [ ]{| l |}] ) %995~3'(= a3◂ [ a32◂ [ ]] ) %994~2'(= a17◂ [ a22◂ [ {| l |}]] ) %992~0'(= r ) 
; #104 2'(= a17◂ [ a22◂ [ {| l |}]] ) ⊢ 1'(= {| l |} )
	sub rsp,24
	mov QWORD [rsp+8*0],r13
	mov QWORD [rsp+8*1],r9
	mov QWORD [rsp+8*2],r10
; .mov_ptn2 2'(= a17◂ [ a22◂ [ {| l |}]] ) ⊢ 0'(= a17◂ [ a22◂ [ {| l |}]] )
; .mov_ptn 2'(= a17◂ [ a22◂ [ {| l |}]] ) ⊢ 0'(= a17◂ [ a22◂ [ {| l |}]] )
	mov rax,r8
	mov r13,rax
	call ETR_104
	mov r10,QWORD [rsp-8+8*3]
	mov r9,QWORD [rsp-8+8*2]
	mov r14,r13
	mov r13,QWORD [rsp-8+8*1]
	add rsp,24
;; rsp=0 , %1008~1'(= {| l |} ) %996~4'(= a26◂ [ a18◂ [ ]{| l |}] ) %995~3'(= a3◂ [ a32◂ [ ]] ) %992~0'(= r ) 
; #11 0'(= r ) ⊢ 0'(= r )
	add r13,1
;; rsp=0 , %1009~0'(= r ) %1008~1'(= {| l |} ) %996~4'(= a26◂ [ a18◂ [ ]{| l |}] ) %995~3'(= a3◂ [ a32◂ [ ]] ) 
; #137 { 0'(= r ) 4'(= a26◂ [ a18◂ [ ]{| l |}] ) } ⊢ { 0'(= r ) 2'(= {| l |} ) }
	sub rsp,16
	mov QWORD [rsp+8*0],r14
	mov QWORD [rsp+8*1],r9
; .mov_ptn2 { 0'(= r ) 4'(= a26◂ [ a18◂ [ ]{| l |}] ) } ⊢ { 0'(= r ) 1'(= a26◂ [ a18◂ [ ]{| l |}] ) }
; .mov_ptn 4'(= a26◂ [ a18◂ [ ]{| l |}] ) ⊢ 1'(= a26◂ [ a18◂ [ ]{| l |}] )
	mov rax,r10
	mov r14,rax
	call ETR_137
	mov r9,QWORD [rsp-8+8*2]
	mov r8,r14
	mov r14,QWORD [rsp-8+8*1]
	add rsp,16
;; rsp=0 , %1011~2'(= {| l |} ) %1010~0'(= r ) %1008~1'(= {| l |} ) %995~3'(= a3◂ [ a32◂ [ ]] ) 
; #12 0'(= r ) ⊢ 0'(= r )
	sub r13,1
;; rsp=0 , %1012~0'(= r ) %1011~2'(= {| l |} ) %1008~1'(= {| l |} ) %995~3'(= a3◂ [ a32◂ [ ]] ) 
; » _^ .. ⊢ ..
; .. //
	mov rdi,0
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[r14]
	add rdi,rax 
	push rax
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[r8]
	add rdi,rax 
	push rax
	add rdi,2
	push rdi 
	call mlc_s8
	pop rdi
	mov r10,rax
	lea rdi,[rax+7+rdi]
	std 
	mov QWORD [tmp],rcx 
	pop rcx
	lea rsi,[r8+7+rcx]
	rep movsb
	lea rsi,[LB_993+1-1]
	mov rcx,1
	rep movsb
	pop rcx
	lea rsi,[r14+7+rcx]
	rep movsb
	lea rsi,[LB_994+1-1]
	mov rcx,1
	rep movsb
	mov rcx,QWORD [tmp] 
;; rsp=0 , %1015~4'(= {| l |} ) %1014~2'(= {| l |} ) %1013~1'(= {| l |} ) %1012~0'(= r ) %995~3'(= a3◂ [ a32◂ [ ]] ) 
; ∎ { 0'(= r ) 4'(= {| l |} ) }
; .dlt.ptn 2'(= {| l |} )
	mov rdi,r8
	C_PUSH_REGS
	mov r8,rdi
	mov rdi,r8
	call free_s8
	C_POP_REGS
; .dlt.ptn 1'(= {| l |} )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	mov rdi,r8
	call free_s8
	C_POP_REGS
; .dlt.ptn 3'(= a3◂ [ a32◂ [ ]] )
	mov rdi,r9
	C_PUSH_REGS
	mov r8,rdi
	call LB_995
	C_POP_REGS
; .mov_ptn2 { 0'(= r ) 4'(= {| l |} ) } ⊢ { 0'(= r ) 1'(= {| l |} ) }
; .mov_ptn 4'(= {| l |} ) ⊢ 1'(= {| l |} )
	mov rax,r10
	mov r14,rax
	ret
LB_984:
;; ?; 1'(= a42◂ [ ] ) ⊢ 1(<3)◂2'(= a20◂ [ a18◂ [ ]] )
	mov rdi,r14
	cmp BYTE [rdi+6],1
	jnz LB_1001
	jmp LB_1002
LB_1001:
	jmp LB_1000
LB_1002:
	mov QWORD [GBG_VCT+8*0],rdi
	mov r8,QWORD [rdi+8]
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_LN rdi
;; rsp=0 , %1016~2'(= a20◂ [ a18◂ [ ]] ) %992~0'(= r ) 
; #93 2'(= a20◂ [ a18◂ [ ]] ) ⊢ 1'(= {| l |} )
	sub rsp,8
	mov QWORD [rsp+8*0],r13
; .mov_ptn2 2'(= a20◂ [ a18◂ [ ]] ) ⊢ 0'(= a20◂ [ a18◂ [ ]] )
; .mov_ptn 2'(= a20◂ [ a18◂ [ ]] ) ⊢ 0'(= a20◂ [ a18◂ [ ]] )
	mov rax,r8
	mov r13,rax
	call ETR_93
	mov r14,r13
	mov r13,QWORD [rsp-8+8*1]
	add rsp,8
;; rsp=0 , %1017~1'(= {| l |} ) %992~0'(= r ) 
; » _^ .. ⊢ ..
; .. //
	mov rdi,0
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[r14]
	add rdi,rax 
	push rax
	add rdi,4
	push rdi 
	call mlc_s8
	pop rdi
	mov r8,rax
	lea rdi,[rax+7+rdi]
	std 
	mov QWORD [tmp],rcx 
	lea rsi,[LB_1003+1-1]
	mov rcx,1
	rep movsb
	pop rcx
	lea rsi,[r14+7+rcx]
	rep movsb
	lea rsi,[LB_1004+3-1]
	mov rcx,3
	rep movsb
	mov rcx,QWORD [tmp] 
;; rsp=0 , %1019~2'(= {| l |} ) %1018~1'(= {| l |} ) %992~0'(= r ) 
; ∎ { 0'(= r ) 2'(= {| l |} ) }
; .dlt.ptn 1'(= {| l |} )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	mov rdi,r8
	call free_s8
	C_POP_REGS
; .mov_ptn2 { 0'(= r ) 2'(= {| l |} ) } ⊢ { 0'(= r ) 1'(= {| l |} ) }
; .mov_ptn 2'(= {| l |} ) ⊢ 1'(= {| l |} )
	mov rax,r8
	mov r14,rax
	ret
LB_1000:
;; ?; 1'(= a42◂ [ ] ) ⊢ 2(<3)◂2'(= a26◂ [ a18◂ [ ]{| l |}] )
	mov QWORD [GBG_VCT+8*0],rdi
	mov r8,QWORD [rdi+8]
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_LN rdi
;; rsp=0 , %1020~2'(= a26◂ [ a18◂ [ ]{| l |}] ) %992~0'(= r ) 
; #11 0'(= r ) ⊢ 0'(= r )
	add r13,1
;; rsp=0 , %1021~0'(= r ) %1020~2'(= a26◂ [ a18◂ [ ]{| l |}] ) 
; #137 { 0'(= r ) 2'(= a26◂ [ a18◂ [ ]{| l |}] ) } ⊢ { 0'(= r ) 1'(= {| l |} ) }
; .mov_ptn2 { 0'(= r ) 2'(= a26◂ [ a18◂ [ ]{| l |}] ) } ⊢ { 0'(= r ) 1'(= a26◂ [ a18◂ [ ]{| l |}] ) }
; .mov_ptn 2'(= a26◂ [ a18◂ [ ]{| l |}] ) ⊢ 1'(= a26◂ [ a18◂ [ ]{| l |}] )
	mov rax,r8
	mov r14,rax
	call ETR_137
;; rsp=0 , %1023~1'(= {| l |} ) %1022~0'(= r ) 
; #12 0'(= r ) ⊢ 0'(= r )
	sub r13,1
;; rsp=0 , %1024~0'(= r ) %1023~1'(= {| l |} ) 
; » _^ .. ⊢ ..
; .. //
	mov rdi,0
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[r14]
	add rdi,rax 
	push rax
	add rdi,5
	push rdi 
	call mlc_s8
	pop rdi
	mov r8,rax
	lea rdi,[rax+7+rdi]
	std 
	mov QWORD [tmp],rcx 
	pop rcx
	lea rsi,[r14+7+rcx]
	rep movsb
	lea rsi,[LB_1005+5-1]
	mov rcx,5
	rep movsb
	mov rcx,QWORD [tmp] 
;; rsp=0 , %1026~2'(= {| l |} ) %1025~1'(= {| l |} ) %1024~0'(= r ) 
; ∎ { 0'(= r ) 2'(= {| l |} ) }
; .dlt.ptn 1'(= {| l |} )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	mov rdi,r8
	call free_s8
	C_POP_REGS
; .mov_ptn2 { 0'(= r ) 2'(= {| l |} ) } ⊢ { 0'(= r ) 1'(= {| l |} ) }
; .mov_ptn 2'(= {| l |} ) ⊢ 1'(= {| l |} )
	mov rax,r8
	mov r14,rax
	ret
ETR_190: ;; pnt_lc_qlq_etr { 0'(= r ) 1'(= a2◂ [ *{ {| l |}a17◂ [ a22◂ [ {| l |}]]a3◂ [ a32◂ [ ]]a26◂ [ a18◂ [ ]{| l |}]}] ) } ⊢ { 0'(= r ) 1'(= {| l |} ) } : ({ _r64 _lst◂{ _s8 _t17◂_t22◂_s8 _opn◂_t32 _t26◂_s8◂_t18 } }→{ _r64 _s8 })
;; rsp=0 , %1028~1'(= a2◂ [ *{ {| l |}a17◂ [ a22◂ [ {| l |}]]a3◂ [ a32◂ [ ]]a26◂ [ a18◂ [ ]{| l |}]}] ) %1027~0'(= r ) 
;; ?; 1'(= a2◂ [ *{ {| l |}a17◂ [ a22◂ [ {| l |}]]a3◂ [ a32◂ [ ]]a26◂ [ a18◂ [ ]{| l |}]}] ) ⊢ 0(<2)◂{ { 3'(= {| l |} ) 4'(= a17◂ [ a22◂ [ {| l |}]] ) 5'(= a3◂ [ a32◂ [ ]] ) 6'(= a26◂ [ a18◂ [ ]{| l |}] ) } 7'(= a2◂ [ *{ {| l |}a17◂ [ a22◂ [ {| l |}]]a3◂ [ a32◂ [ ]]a26◂ [ a18◂ [ ]{| l |}]}] ) }
	mov rdi,r14
	cmp BYTE [rdi+6],0
	jnz LB_1007
	jmp LB_1008
LB_1007:
	jmp LB_1006
LB_1008:
	mov r8, QWORD [r14+8]
	mov r9, QWORD [r8+8]
	mov r10, QWORD [r8+16]
	mov r11, QWORD [r8+24]
	mov rcx, QWORD [r8+32]
	mov QWORD [GBG_VCT+8*0],r8
	mov rdx, QWORD [r14+16]
	mov QWORD [GBG_VCT+8*1],r14
	mov rdi,QWORD [GBG_VCT+8*1]
	FREE_RCD 2,rdi
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_RCD 4,rdi
;; rsp=0 , %1033~7'(= a2◂ [ *{ {| l |}a17◂ [ a22◂ [ {| l |}]]a3◂ [ a32◂ [ ]]a26◂ [ a18◂ [ ]{| l |}]}] ) %1032~6'(= a26◂ [ a18◂ [ ]{| l |}] ) %1031~5'(= a3◂ [ a32◂ [ ]] ) %1030~4'(= a17◂ [ a22◂ [ {| l |}]] ) %1029~3'(= {| l |} ) %1027~0'(= r ) 
;; ?; 5'(= a3◂ [ a32◂ [ ]] ) ⊢ 0(<2)◂1'(= a32◂ [ ] )
	mov rdi,r11
	cmp BYTE [rdi+6],0
	jnz LB_1010
	jmp LB_1011
LB_1010:
	jmp LB_1009
LB_1011:
	mov QWORD [GBG_VCT+8*0],rdi
	mov r14,QWORD [rdi+8]
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_LN rdi
;; rsp=0 , %1034~1'(= a32◂ [ ] ) %1033~7'(= a2◂ [ *{ {| l |}a17◂ [ a22◂ [ {| l |}]]a3◂ [ a32◂ [ ]]a26◂ [ a18◂ [ ]{| l |}]}] ) %1032~6'(= a26◂ [ a18◂ [ ]{| l |}] ) %1030~4'(= a17◂ [ a22◂ [ {| l |}]] ) %1029~3'(= {| l |} ) %1027~0'(= r ) 
; #187 1'(= a32◂ [ ] ) ⊢ 1'(= {| l |} )
	sub rsp,40
	mov QWORD [rsp+8*0],r13
	mov QWORD [rsp+8*1],r9
	mov QWORD [rsp+8*2],r10
	mov QWORD [rsp+8*3],rcx
	mov QWORD [rsp+8*4],rdx
; .mov_ptn2 1'(= a32◂ [ ] ) ⊢ 0'(= a32◂ [ ] )
; .mov_ptn 1'(= a32◂ [ ] ) ⊢ 0'(= a32◂ [ ] )
	mov rax,r14
	mov r13,rax
	call ETR_187
	mov rdx,QWORD [rsp-8+8*5]
	mov rcx,QWORD [rsp-8+8*4]
	mov r10,QWORD [rsp-8+8*3]
	mov r9,QWORD [rsp-8+8*2]
	mov r14,r13
	mov r13,QWORD [rsp-8+8*1]
	add rsp,40
;; rsp=0 , %1035~1'(= {| l |} ) %1033~7'(= a2◂ [ *{ {| l |}a17◂ [ a22◂ [ {| l |}]]a3◂ [ a32◂ [ ]]a26◂ [ a18◂ [ ]{| l |}]}] ) %1032~6'(= a26◂ [ a18◂ [ ]{| l |}] ) %1030~4'(= a17◂ [ a22◂ [ {| l |}]] ) %1029~3'(= {| l |} ) %1027~0'(= r ) 
; #104 4'(= a17◂ [ a22◂ [ {| l |}]] ) ⊢ 2'(= {| l |} )
	sub rsp,40
	mov QWORD [rsp+8*0],r13
	mov QWORD [rsp+8*1],r14
	mov QWORD [rsp+8*2],r9
	mov QWORD [rsp+8*3],rcx
	mov QWORD [rsp+8*4],rdx
; .mov_ptn2 4'(= a17◂ [ a22◂ [ {| l |}]] ) ⊢ 0'(= a17◂ [ a22◂ [ {| l |}]] )
; .mov_ptn 4'(= a17◂ [ a22◂ [ {| l |}]] ) ⊢ 0'(= a17◂ [ a22◂ [ {| l |}]] )
	mov rax,r10
	mov r13,rax
	call ETR_104
	mov rdx,QWORD [rsp-8+8*5]
	mov rcx,QWORD [rsp-8+8*4]
	mov r9,QWORD [rsp-8+8*3]
	mov r14,QWORD [rsp-8+8*2]
	mov r8,r13
	mov r13,QWORD [rsp-8+8*1]
	add rsp,40
;; rsp=0 , %1036~2'(= {| l |} ) %1035~1'(= {| l |} ) %1033~7'(= a2◂ [ *{ {| l |}a17◂ [ a22◂ [ {| l |}]]a3◂ [ a32◂ [ ]]a26◂ [ a18◂ [ ]{| l |}]}] ) %1032~6'(= a26◂ [ a18◂ [ ]{| l |}] ) %1029~3'(= {| l |} ) %1027~0'(= r ) 
; #190 { 0'(= r ) 7'(= a2◂ [ *{ {| l |}a17◂ [ a22◂ [ {| l |}]]a3◂ [ a32◂ [ ]]a26◂ [ a18◂ [ ]{| l |}]}] ) } ⊢ { 0'(= r ) 4'(= {| l |} ) }
	sub rsp,32
	mov QWORD [rsp+8*0],r14
	mov QWORD [rsp+8*1],r8
	mov QWORD [rsp+8*2],r9
	mov QWORD [rsp+8*3],rcx
; .mov_ptn2 { 0'(= r ) 7'(= a2◂ [ *{ {| l |}a17◂ [ a22◂ [ {| l |}]]a3◂ [ a32◂ [ ]]a26◂ [ a18◂ [ ]{| l |}]}] ) } ⊢ { 0'(= r ) 1'(= a2◂ [ *{ {| l |}a17◂ [ a22◂ [ {| l |}]]a3◂ [ a32◂ [ ]]a26◂ [ a18◂ [ ]{| l |}]}] ) }
; .mov_ptn 7'(= a2◂ [ *{ {| l |}a17◂ [ a22◂ [ {| l |}]]a3◂ [ a32◂ [ ]]a26◂ [ a18◂ [ ]{| l |}]}] ) ⊢ 1'(= a2◂ [ *{ {| l |}a17◂ [ a22◂ [ {| l |}]]a3◂ [ a32◂ [ ]]a26◂ [ a18◂ [ ]{| l |}]}] )
	mov rax,rdx
	mov r14,rax
	call ETR_190
	mov rcx,QWORD [rsp-8+8*4]
	mov r9,QWORD [rsp-8+8*3]
	mov r8,QWORD [rsp-8+8*2]
	mov r10,r14
	mov r14,QWORD [rsp-8+8*1]
	add rsp,32
;; rsp=0 , %1038~4'(= {| l |} ) %1037~0'(= r ) %1036~2'(= {| l |} ) %1035~1'(= {| l |} ) %1032~6'(= a26◂ [ a18◂ [ ]{| l |}] ) %1029~3'(= {| l |} ) 
; #11 0'(= r ) ⊢ 0'(= r )
	add r13,1
;; rsp=0 , %1039~0'(= r ) %1038~4'(= {| l |} ) %1036~2'(= {| l |} ) %1035~1'(= {| l |} ) %1032~6'(= a26◂ [ a18◂ [ ]{| l |}] ) %1029~3'(= {| l |} ) 
; #137 { 0'(= r ) 6'(= a26◂ [ a18◂ [ ]{| l |}] ) } ⊢ { 0'(= r ) 5'(= {| l |} ) }
	sub rsp,32
	mov QWORD [rsp+8*0],r14
	mov QWORD [rsp+8*1],r8
	mov QWORD [rsp+8*2],r9
	mov QWORD [rsp+8*3],r10
; .mov_ptn2 { 0'(= r ) 6'(= a26◂ [ a18◂ [ ]{| l |}] ) } ⊢ { 0'(= r ) 1'(= a26◂ [ a18◂ [ ]{| l |}] ) }
; .mov_ptn 6'(= a26◂ [ a18◂ [ ]{| l |}] ) ⊢ 1'(= a26◂ [ a18◂ [ ]{| l |}] )
	mov rax,rcx
	mov r14,rax
	call ETR_137
	mov r10,QWORD [rsp-8+8*4]
	mov r9,QWORD [rsp-8+8*3]
	mov r8,QWORD [rsp-8+8*2]
	mov r11,r14
	mov r14,QWORD [rsp-8+8*1]
	add rsp,32
;; rsp=0 , %1041~5'(= {| l |} ) %1040~0'(= r ) %1038~4'(= {| l |} ) %1036~2'(= {| l |} ) %1035~1'(= {| l |} ) %1029~3'(= {| l |} ) 
; #12 0'(= r ) ⊢ 0'(= r )
	sub r13,1
;; rsp=0 , %1042~0'(= r ) %1041~5'(= {| l |} ) %1038~4'(= {| l |} ) %1036~2'(= {| l |} ) %1035~1'(= {| l |} ) %1029~3'(= {| l |} ) 
; » _^ .. ⊢ ..
; .. //
	mov rdi,0
	mov rsi,r13
	imul rsi,1
	add rdi,rsi 
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[r9]
	add rdi,rax 
	push rax
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[r8]
	add rdi,rax 
	push rax
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[r14]
	add rdi,rax 
	push rax
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[r11]
	add rdi,rax 
	push rax
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[r10]
	add rdi,rax 
	push rax
	add rdi,7
	push rdi 
	call mlc_s8
	pop rdi
	mov rcx,rax
	lea rdi,[rax+7+rdi]
	std 
	mov QWORD [tmp],rcx 
	pop rcx
	lea rsi,[r10+7+rcx]
	rep movsb
	pop rcx
	lea rsi,[r11+7+rcx]
	rep movsb
	lea rsi,[LB_1012+1-1]
	mov rcx,1
	rep movsb
	pop rcx
	lea rsi,[r14+7+rcx]
	rep movsb
	lea rsi,[LB_1013+3-1]
	mov rcx,3
	rep movsb
	pop rcx
	lea rsi,[r8+7+rcx]
	rep movsb
	lea rsi,[LB_1014+1-1]
	mov rcx,1
	rep movsb
	pop rcx
	lea rsi,[r9+7+rcx]
	rep movsb
	lea rsi,[LB_1015+2-1]
	mov rcx,2
	rep movsb
	mov rax,r13
LB_1017:
	cmp rax,0
	jz LB_1018
	sub rax,1
	lea rsi,[LB_1016+1-1]
	mov rcx,1
	rep movsb 
	jmp LB_1017
LB_1018:
	mov rcx,QWORD [tmp] 
;; rsp=0 , %1049~6'(= {| l |} ) %1048~1'(= {| l |} ) %1047~4'(= {| l |} ) %1046~5'(= {| l |} ) %1045~2'(= {| l |} ) %1044~3'(= {| l |} ) %1043~0'(= r ) 
; ∎ { 0'(= r ) 6'(= {| l |} ) }
; .dlt.ptn 1'(= {| l |} )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	mov rdi,r8
	call free_s8
	C_POP_REGS
; .dlt.ptn 4'(= {| l |} )
	mov rdi,r10
	C_PUSH_REGS
	mov r8,rdi
	mov rdi,r8
	call free_s8
	C_POP_REGS
; .dlt.ptn 5'(= {| l |} )
	mov rdi,r11
	C_PUSH_REGS
	mov r8,rdi
	mov rdi,r8
	call free_s8
	C_POP_REGS
; .dlt.ptn 2'(= {| l |} )
	mov rdi,r8
	C_PUSH_REGS
	mov r8,rdi
	mov rdi,r8
	call free_s8
	C_POP_REGS
; .dlt.ptn 3'(= {| l |} )
	mov rdi,r9
	C_PUSH_REGS
	mov r8,rdi
	mov rdi,r8
	call free_s8
	C_POP_REGS
; .mov_ptn2 { 0'(= r ) 6'(= {| l |} ) } ⊢ { 0'(= r ) 1'(= {| l |} ) }
; .mov_ptn 6'(= {| l |} ) ⊢ 1'(= {| l |} )
	mov rax,rcx
	mov r14,rax
	ret
LB_1009:
;; rsp=0 , %1033~7'(= a2◂ [ *{ {| l |}a17◂ [ a22◂ [ {| l |}]]a3◂ [ a32◂ [ ]]a26◂ [ a18◂ [ ]{| l |}]}] ) %1032~6'(= a26◂ [ a18◂ [ ]{| l |}] ) %1031~5'(= a3◂ [ a32◂ [ ]] ) %1030~4'(= a17◂ [ a22◂ [ {| l |}]] ) %1029~3'(= {| l |} ) %1027~0'(= r ) 
; #104 4'(= a17◂ [ a22◂ [ {| l |}]] ) ⊢ 1'(= {| l |} )
	sub rsp,40
	mov QWORD [rsp+8*0],r13
	mov QWORD [rsp+8*1],r9
	mov QWORD [rsp+8*2],r11
	mov QWORD [rsp+8*3],rcx
	mov QWORD [rsp+8*4],rdx
; .mov_ptn2 4'(= a17◂ [ a22◂ [ {| l |}]] ) ⊢ 0'(= a17◂ [ a22◂ [ {| l |}]] )
; .mov_ptn 4'(= a17◂ [ a22◂ [ {| l |}]] ) ⊢ 0'(= a17◂ [ a22◂ [ {| l |}]] )
	mov rax,r10
	mov r13,rax
	call ETR_104
	mov rdx,QWORD [rsp-8+8*5]
	mov rcx,QWORD [rsp-8+8*4]
	mov r11,QWORD [rsp-8+8*3]
	mov r9,QWORD [rsp-8+8*2]
	mov r14,r13
	mov r13,QWORD [rsp-8+8*1]
	add rsp,40
;; rsp=0 , %1050~1'(= {| l |} ) %1033~7'(= a2◂ [ *{ {| l |}a17◂ [ a22◂ [ {| l |}]]a3◂ [ a32◂ [ ]]a26◂ [ a18◂ [ ]{| l |}]}] ) %1032~6'(= a26◂ [ a18◂ [ ]{| l |}] ) %1031~5'(= a3◂ [ a32◂ [ ]] ) %1029~3'(= {| l |} ) %1027~0'(= r ) 
; #190 { 0'(= r ) 7'(= a2◂ [ *{ {| l |}a17◂ [ a22◂ [ {| l |}]]a3◂ [ a32◂ [ ]]a26◂ [ a18◂ [ ]{| l |}]}] ) } ⊢ { 0'(= r ) 2'(= {| l |} ) }
	sub rsp,32
	mov QWORD [rsp+8*0],r14
	mov QWORD [rsp+8*1],r9
	mov QWORD [rsp+8*2],r11
	mov QWORD [rsp+8*3],rcx
; .mov_ptn2 { 0'(= r ) 7'(= a2◂ [ *{ {| l |}a17◂ [ a22◂ [ {| l |}]]a3◂ [ a32◂ [ ]]a26◂ [ a18◂ [ ]{| l |}]}] ) } ⊢ { 0'(= r ) 1'(= a2◂ [ *{ {| l |}a17◂ [ a22◂ [ {| l |}]]a3◂ [ a32◂ [ ]]a26◂ [ a18◂ [ ]{| l |}]}] ) }
; .mov_ptn 7'(= a2◂ [ *{ {| l |}a17◂ [ a22◂ [ {| l |}]]a3◂ [ a32◂ [ ]]a26◂ [ a18◂ [ ]{| l |}]}] ) ⊢ 1'(= a2◂ [ *{ {| l |}a17◂ [ a22◂ [ {| l |}]]a3◂ [ a32◂ [ ]]a26◂ [ a18◂ [ ]{| l |}]}] )
	mov rax,rdx
	mov r14,rax
	call ETR_190
	mov rcx,QWORD [rsp-8+8*4]
	mov r11,QWORD [rsp-8+8*3]
	mov r9,QWORD [rsp-8+8*2]
	mov r8,r14
	mov r14,QWORD [rsp-8+8*1]
	add rsp,32
;; rsp=0 , %1052~2'(= {| l |} ) %1051~0'(= r ) %1050~1'(= {| l |} ) %1032~6'(= a26◂ [ a18◂ [ ]{| l |}] ) %1031~5'(= a3◂ [ a32◂ [ ]] ) %1029~3'(= {| l |} ) 
; #11 0'(= r ) ⊢ 0'(= r )
	add r13,1
;; rsp=0 , %1053~0'(= r ) %1052~2'(= {| l |} ) %1050~1'(= {| l |} ) %1032~6'(= a26◂ [ a18◂ [ ]{| l |}] ) %1031~5'(= a3◂ [ a32◂ [ ]] ) %1029~3'(= {| l |} ) 
; #137 { 0'(= r ) 6'(= a26◂ [ a18◂ [ ]{| l |}] ) } ⊢ { 0'(= r ) 4'(= {| l |} ) }
	sub rsp,32
	mov QWORD [rsp+8*0],r14
	mov QWORD [rsp+8*1],r8
	mov QWORD [rsp+8*2],r9
	mov QWORD [rsp+8*3],r11
; .mov_ptn2 { 0'(= r ) 6'(= a26◂ [ a18◂ [ ]{| l |}] ) } ⊢ { 0'(= r ) 1'(= a26◂ [ a18◂ [ ]{| l |}] ) }
; .mov_ptn 6'(= a26◂ [ a18◂ [ ]{| l |}] ) ⊢ 1'(= a26◂ [ a18◂ [ ]{| l |}] )
	mov rax,rcx
	mov r14,rax
	call ETR_137
	mov r11,QWORD [rsp-8+8*4]
	mov r9,QWORD [rsp-8+8*3]
	mov r8,QWORD [rsp-8+8*2]
	mov r10,r14
	mov r14,QWORD [rsp-8+8*1]
	add rsp,32
;; rsp=0 , %1055~4'(= {| l |} ) %1054~0'(= r ) %1052~2'(= {| l |} ) %1050~1'(= {| l |} ) %1031~5'(= a3◂ [ a32◂ [ ]] ) %1029~3'(= {| l |} ) 
; #12 0'(= r ) ⊢ 0'(= r )
	sub r13,1
;; rsp=0 , %1056~0'(= r ) %1055~4'(= {| l |} ) %1052~2'(= {| l |} ) %1050~1'(= {| l |} ) %1031~5'(= a3◂ [ a32◂ [ ]] ) %1029~3'(= {| l |} ) 
; » _^ .. ⊢ ..
; .. //
	mov rdi,0
	mov rsi,r13
	imul rsi,1
	add rdi,rsi 
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[r9]
	add rdi,rax 
	push rax
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[r14]
	add rdi,rax 
	push rax
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[r10]
	add rdi,rax 
	push rax
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[r8]
	add rdi,rax 
	push rax
	add rdi,4
	push rdi 
	call mlc_s8
	pop rdi
	mov rcx,rax
	lea rdi,[rax+7+rdi]
	std 
	mov QWORD [tmp],rcx 
	pop rcx
	lea rsi,[r8+7+rcx]
	rep movsb
	pop rcx
	lea rsi,[r10+7+rcx]
	rep movsb
	lea rsi,[LB_1019+1-1]
	mov rcx,1
	rep movsb
	pop rcx
	lea rsi,[r14+7+rcx]
	rep movsb
	lea rsi,[LB_1020+1-1]
	mov rcx,1
	rep movsb
	pop rcx
	lea rsi,[r9+7+rcx]
	rep movsb
	lea rsi,[LB_1021+2-1]
	mov rcx,2
	rep movsb
	mov rax,r13
LB_1023:
	cmp rax,0
	jz LB_1024
	sub rax,1
	lea rsi,[LB_1022+1-1]
	mov rcx,1
	rep movsb 
	jmp LB_1023
LB_1024:
	mov rcx,QWORD [tmp] 
;; rsp=0 , %1062~6'(= {| l |} ) %1061~2'(= {| l |} ) %1060~4'(= {| l |} ) %1059~1'(= {| l |} ) %1058~3'(= {| l |} ) %1057~0'(= r ) %1031~5'(= a3◂ [ a32◂ [ ]] ) 
; ∎ { 0'(= r ) 6'(= {| l |} ) }
; .dlt.ptn 2'(= {| l |} )
	mov rdi,r8
	C_PUSH_REGS
	mov r8,rdi
	mov rdi,r8
	call free_s8
	C_POP_REGS
; .dlt.ptn 4'(= {| l |} )
	mov rdi,r10
	C_PUSH_REGS
	mov r8,rdi
	mov rdi,r8
	call free_s8
	C_POP_REGS
; .dlt.ptn 1'(= {| l |} )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	mov rdi,r8
	call free_s8
	C_POP_REGS
; .dlt.ptn 3'(= {| l |} )
	mov rdi,r9
	C_PUSH_REGS
	mov r8,rdi
	mov rdi,r8
	call free_s8
	C_POP_REGS
; .dlt.ptn 5'(= a3◂ [ a32◂ [ ]] )
	mov rdi,r11
	C_PUSH_REGS
	mov r8,rdi
	call LB_995
	C_POP_REGS
; .mov_ptn2 { 0'(= r ) 6'(= {| l |} ) } ⊢ { 0'(= r ) 1'(= {| l |} ) }
; .mov_ptn 6'(= {| l |} ) ⊢ 1'(= {| l |} )
	mov rax,rcx
	mov r14,rax
	ret
LB_1006:
;; ?; 1'(= a2◂ [ *{ {| l |}a17◂ [ a22◂ [ {| l |}]]a3◂ [ a32◂ [ ]]a26◂ [ a18◂ [ ]{| l |}]}] ) ⊢ 1(<2)◂{ }
;; rsp=0 , %1027~0'(= r ) 
; $ %[ "" ] ⊢ %[ "" ]
;; rsp=0 , %1063~%[ "" ] %1027~0'(= r ) 
; ∎ { 0'(= r ) %[ "" ] }
; .mov_ptn2 { 0'(= r ) %[ "" ] } ⊢ { 0'(= r ) 1'(= {| l |} ) }
; .mov_ptn %[ "" ] ⊢ 1'(= {| l |} )
	mov rsi,1  
	mov rdi,16
	xor rax,rax 
	C_CALL_SF calloc
	mov QWORD [rax],0
	mov r14,rax
	ret
ETR_191: ;; mk_app { 0'(= a32◂ [ ] ) 1'(= a2◂ [ a32◂ [ ]] ) } ⊢ 0'(= a32◂ [ ] ) : ({ _t32 _lst◂_t32 }→_t32)
;; rsp=0 , %1065~1'(= a2◂ [ a32◂ [ ]] ) %1064~0'(= a32◂ [ ] ) 
;; ?; 1'(= a2◂ [ a32◂ [ ]] ) ⊢ 0(<2)◂{ 2'(= a32◂ [ ] ) 3'(= a2◂ [ a32◂ [ ]] ) }
	mov rdi,r14
	cmp BYTE [rdi+6],0
	jnz LB_1026
	jmp LB_1027
LB_1026:
	jmp LB_1025
LB_1027:
	mov r8, QWORD [r14+8]
	mov r9, QWORD [r14+16]
	mov QWORD [GBG_VCT+8*0],r14
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_RCD 2,rdi
;; rsp=0 , %1067~3'(= a2◂ [ a32◂ [ ]] ) %1066~2'(= a32◂ [ ] ) %1064~0'(= a32◂ [ ] ) 
; #143 { 0'(= a32◂ [ ] ) 2'(= a32◂ [ ] ) } ⊢ 2(<5)◂{ 0'(= a32◂ [ ] ) 2'(= a32◂ [ ] ) }
;; rsp=0 , %1068~2(<5)◂{ 0'(= a32◂ [ ] ) 2'(= a32◂ [ ] ) } %1067~3'(= a2◂ [ a32◂ [ ]] ) 
; #191 { 2(<5)◂{ 0'(= a32◂ [ ] ) 2'(= a32◂ [ ] ) } 3'(= a2◂ [ a32◂ [ ]] ) } ⊢ 0'(= a32◂ [ ] )
; .mov_ptn2 { 2(<5)◂{ 0'(= a32◂ [ ] ) 2'(= a32◂ [ ] ) } 3'(= a2◂ [ a32◂ [ ]] ) } ⊢ { 0'(= a32◂ [ ] ) 1'(= a2◂ [ a32◂ [ ]] ) }
; .mov_ptn 3'(= a2◂ [ a32◂ [ ]] ) ⊢ 1'(= a2◂ [ a32◂ [ ]] )
	mov rax,r9
	mov r14,rax
	mov r10,r13
; .mov_ptn 2(<5)◂{ 4'(= a32◂ [ ] ) 2'(= a32◂ [ ] ) } ⊢ 0'(= a32◂ [ ] )
	ALC_RCD 2, rax
	mov r9,rax
	mov rax,r10
	mov QWORD [r9+8+8*0],rax
	mov rax,r8
	mov QWORD [r9+8+8*1],rax
	mov rax,r9
	mov BYTE [rax+6],2
	mov r13,rax
	call ETR_191
;; rsp=0 , %1069~0'(= a32◂ [ ] ) 
; ∎ 0'(= a32◂ [ ] )
; .mov_ptn2 0'(= a32◂ [ ] ) ⊢ 0'(= a32◂ [ ] )
	ret
LB_1025:
;; ?; 1'(= a2◂ [ a32◂ [ ]] ) ⊢ 1(<2)◂{ }
;; rsp=0 , %1064~0'(= a32◂ [ ] ) 
; ∎ 0'(= a32◂ [ ] )
; .mov_ptn2 0'(= a32◂ [ ] ) ⊢ 0'(= a32◂ [ ] )
	ret
ETR_192:
	mov r9,0x0000_ffff_ffff_ffff
	and r9,[r13]
	call GRM_192
	ret
GRM_192:
	PUSH_GRM
	lea rax,[r14+1]
	cmp rax,r9
	jg LB_1031
	jmp LB_1032
LB_1031:
	mov r8,unt_1
	jmp LB_1029
LB_1032:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],95
	jnz LB_1033
	jmp LB_1034
LB_1033:
	mov r8,unt_1
	jmp LB_1029
LB_1034:
	add r14,1
	jmp LB_1030
LB_1029:
	add rsp,0
	jmp LB_1028
LB_1030:
	PUSH_GRM
	lea rax,[r14+1]
	cmp rax,r9
	jg LB_1039
	jmp LB_1040
LB_1039:
	mov r8,unt_1
	jmp LB_1037
LB_1040:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],32
	jnz LB_1041
	jmp LB_1042
LB_1041:
	mov r8,unt_1
	jmp LB_1037
LB_1042:
	add r14,1
	jmp LB_1038
LB_1037:
	add rsp,0
	jmp LB_1036
LB_1038:
	mov QWORD [rsp+8*0],r14
	mov r13,QWORD [rsp+16+8*0]
	mov r14,QWORD [rsp+8*0]
	jmp LB_1043
LB_1043
;; rsp=0 , %1073~1'(= r ) %1072~0'(= r ) 
; #24 { } ⊢ 0(<2)◂{ }
;; rsp=0 , %1074~0(<2)◂{ } %1073~1'(= r ) %1072~0'(= r ) 
; ∎ 0(<2)◂{ }
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂{ } ⊢ 2'(= a3◂ [ *{ }] )
; .mov_ptn 0(<2)◂{ } ⊢ 2'(= a3◂ [ *{ }] )
	mov rax,unt 
	mov rax,unt_0
	mov r8,rax
	jmp LB_1044
LB_1044:
	cmp BYTE [r8+6],0
	jnz LB_1036
	POP_GRM_SCC
	jmp LB_1035
LB_1036:
	RB_GRM
	lea rax,[r14+1]
	cmp rax,r9
	jg LB_1048
	jmp LB_1049
LB_1048:
	mov r8,unt_1
	jmp LB_1046
LB_1049:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],9
	jnz LB_1050
	jmp LB_1051
LB_1050:
	mov r8,unt_1
	jmp LB_1046
LB_1051:
	add r14,1
	jmp LB_1047
LB_1046:
	add rsp,0
	jmp LB_1045
LB_1047:
	mov QWORD [rsp+8*0],r14
	mov r13,QWORD [rsp+16+8*0]
	mov r14,QWORD [rsp+8*0]
	jmp LB_1052
LB_1052
;; rsp=0 , %1076~1'(= r ) %1075~0'(= r ) 
; #24 { } ⊢ 0(<2)◂{ }
;; rsp=0 , %1077~0(<2)◂{ } %1076~1'(= r ) %1075~0'(= r ) 
; ∎ 0(<2)◂{ }
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂{ } ⊢ 2'(= a3◂ [ *{ }] )
; .mov_ptn 0(<2)◂{ } ⊢ 2'(= a3◂ [ *{ }] )
	mov rax,unt 
	mov rax,unt_0
	mov r8,rax
	jmp LB_1053
LB_1053:
	cmp BYTE [r8+6],0
	jnz LB_1045
	POP_GRM_SCC
	jmp LB_1035
LB_1045:
	RB_GRM
	call GRM_193
	cmp BYTE [r8+6],0
	jnz LB_1057
	jmp LB_1058
LB_1057:
	jmp LB_1055
LB_1058:
; .mov_ptn2 2'(= *{ } ) ⊢ { }
; .mov_ptn 2'(= *{ } ) ⊢ { }
	jmp LB_1056
LB_1055:
	add rsp,0
	jmp LB_1054
LB_1056:
	mov QWORD [rsp+8*0],r14
	mov r13,QWORD [rsp+16+8*0]
	mov r14,QWORD [rsp+8*0]
	jmp LB_1059
LB_1059
;; rsp=0 , %1080~1'(= r ) %1079~0'(= r ) %1078~{ } 
; #25 { } ⊢ 1(<2)◂{ }
;; rsp=0 , %1081~1(<2)◂{ } %1080~1'(= r ) %1079~0'(= r ) %1078~{ } 
; ∎ 1(<2)◂{ }
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn { }
; .mov_ptn2 1(<2)◂{ } ⊢ 2'(= a3◂ [ *{ }] )
; .mov_ptn 1(<2)◂{ } ⊢ 2'(= a3◂ [ *{ }] )
	mov rax,unt 
	mov rax,unt_1
	mov r8,rax
	jmp LB_1060
LB_1060:
	cmp BYTE [r8+6],0
	jnz LB_1054
	POP_GRM_SCC
	jmp LB_1035
LB_1054:
	RB_GRM
	mov QWORD [rsp+8*0],r14
	mov r13,QWORD [rsp+16+8*0]
	mov r14,QWORD [rsp+8*0]
	jmp LB_1062
LB_1062
;; rsp=0 , %1083~1'(= r ) %1082~0'(= r ) 
; #24 { } ⊢ 0(<2)◂{ }
;; rsp=0 , %1084~0(<2)◂{ } %1083~1'(= r ) %1082~0'(= r ) 
; ∎ 0(<2)◂{ }
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂{ } ⊢ 2'(= a3◂ [ *{ }] )
; .mov_ptn 0(<2)◂{ } ⊢ 2'(= a3◂ [ *{ }] )
	mov rax,unt 
	mov rax,unt_0
	mov r8,rax
	jmp LB_1063
LB_1063:
	cmp BYTE [r8+6],0
	jnz LB_1061
	POP_GRM_SCC
	jmp LB_1035
LB_1061:
	POP_GRM_FAIL 
	jmp LB_1035
LB_1035:
	cmp BYTE [r8+6],0
	jnz LB_1064
	jmp LB_1065
LB_1064:
	add rsp,0
	POP_GRM_FAIL
	ret
LB_1065:
	mov QWORD [rsp+8*0],r14
; .mov_ptn2 2'(= *{ } ) ⊢ { }
; .mov_ptn 2'(= *{ } ) ⊢ { }
	mov r13,QWORD [rsp+16+8*0]
	mov r14,QWORD [rsp+8*0]
	jmp LB_1066
LB_1066
;; rsp=0 , %1085~{ } %1071~1'(= r ) %1070~0'(= r ) 
; #24 { } ⊢ 0(<2)◂{ }
;; rsp=0 , %1086~0(<2)◂{ } %1085~{ } %1071~1'(= r ) %1070~0'(= r ) 
; ∎ 0(<2)◂{ }
; .dlt.ptn { }
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂{ } ⊢ 2'(= a3◂ [ *{ }] )
; .mov_ptn 0(<2)◂{ } ⊢ 2'(= a3◂ [ *{ }] )
	mov rax,unt 
	mov rax,unt_0
	mov r8,rax
	jmp LB_1067
LB_1067:
	cmp BYTE [r8+6],0
	jnz LB_1028
	POP_GRM_SCC
	ret
LB_1028:
	POP_GRM_FAIL 
	ret
ETR_193:
	mov r9,0x0000_ffff_ffff_ffff
	and r9,[r13]
	call GRM_193
	ret
GRM_193:
	PUSH_GRM
	lea rax,[r14+1]
	cmp rax,r9
	jg LB_1071
	jmp LB_1072
LB_1071:
	mov r8,unt_1
	jmp LB_1069
LB_1072:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],44
	jnz LB_1073
	jmp LB_1074
LB_1073:
	mov r8,unt_1
	jmp LB_1069
LB_1074:
	add r14,1
	jmp LB_1070
LB_1069:
	add rsp,0
	jmp LB_1068
LB_1070:
	mov QWORD [rsp+8*0],r14
	mov r13,QWORD [rsp+16+8*0]
	mov r14,QWORD [rsp+8*0]
	jmp LB_1075
LB_1075
;; rsp=0 , %1088~1'(= r ) %1087~0'(= r ) 
; #25 { } ⊢ 1(<2)◂{ }
;; rsp=0 , %1089~1(<2)◂{ } %1088~1'(= r ) %1087~0'(= r ) 
; ∎ 1(<2)◂{ }
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 1(<2)◂{ } ⊢ 2'(= a3◂ [ *{ }] )
; .mov_ptn 1(<2)◂{ } ⊢ 2'(= a3◂ [ *{ }] )
	mov rax,unt 
	mov rax,unt_1
	mov r8,rax
	jmp LB_1076
LB_1076:
	cmp BYTE [r8+6],0
	jnz LB_1068
	POP_GRM_SCC
	ret
LB_1068:
	RB_GRM
	mov QWORD [rsp+8*0],r14
	mov r13,QWORD [rsp+16+8*0]
	mov r14,QWORD [rsp+8*0]
	jmp LB_1078
LB_1078
;; rsp=0 , %1091~1'(= r ) %1090~0'(= r ) 
; #24 { } ⊢ 0(<2)◂{ }
;; rsp=0 , %1092~0(<2)◂{ } %1091~1'(= r ) %1090~0'(= r ) 
; ∎ 0(<2)◂{ }
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂{ } ⊢ 2'(= a3◂ [ *{ }] )
; .mov_ptn 0(<2)◂{ } ⊢ 2'(= a3◂ [ *{ }] )
	mov rax,unt 
	mov rax,unt_0
	mov r8,rax
	jmp LB_1079
LB_1079:
	cmp BYTE [r8+6],0
	jnz LB_1077
	POP_GRM_SCC
	ret
LB_1077:
	POP_GRM_FAIL 
	ret
ETR_194:
	mov r9,0x0000_ffff_ffff_ffff
	and r9,[r13]
	call GRM_194
	ret
GRM_194:
	PUSH_GRM
	jmp LB_1082
LB_1081:
	add r14,1 
LB_1082:
	cmp r14,r9
	jge LB_1083
	JZ_LINE_SPC BYTE [r13+8+r14], LB_1081
LB_1083
	call GRM_82
	cmp BYTE [r8+6],0
	jnz LB_1086
	jmp LB_1087
LB_1086:
	jmp LB_1084
LB_1087:
	sub rsp,8
; .mov_ptn2 2'(= {| l |} ) ⊢ 8'(= {| l |} )
; .mov_ptn 2'(= {| l |} ) ⊢ 8'(= {| l |} )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_1085
LB_1084:
	add rsp,0
	jmp LB_1080
LB_1085:
	jmp LB_1089
LB_1088:
	add r14,1 
LB_1089:
	cmp r14,r9
	jge LB_1090
	JZ_LINE_SPC BYTE [r13+8+r14], LB_1088
LB_1090
	lea rax,[r14+1]
	cmp rax,r9
	jg LB_1093
	jmp LB_1094
LB_1093:
	mov r8,unt_1
	jmp LB_1091
LB_1094:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],46
	jnz LB_1095
	jmp LB_1096
LB_1095:
	mov r8,unt_1
	jmp LB_1091
LB_1096:
	add r14,1
	jmp LB_1092
LB_1091:
	add rsp,8
	jmp LB_1080
LB_1092:
	jmp LB_1098
LB_1097:
	add r14,1 
LB_1098:
	cmp r14,r9
	jge LB_1099
	JZ_LINE_SPC BYTE [r13+8+r14], LB_1097
LB_1099
	call GRM_194
	cmp BYTE [r8+6],0
	jnz LB_1102
	jmp LB_1103
LB_1102:
	jmp LB_1100
LB_1103:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a18◂ [ ] ) ⊢ 9'(= a18◂ [ ] )
; .mov_ptn 2'(= a18◂ [ ] ) ⊢ 9'(= a18◂ [ ] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_1101
LB_1100:
	add rsp,8
	jmp LB_1080
LB_1101:
	mov QWORD [rsp+8*2],r14
	mov r13,QWORD [rsp+16+8*2]
	mov r14,QWORD [rsp+8*2]
	jmp LB_1104
LB_1104
;; rsp=2 , %1096~1'(= r ) %1095~0'(= r ) %1094~9'(= a18◂ [ ] ) %1093~8'(= {| l |} ) 
; #86 { 8'(= {| l |} ) 9'(= a18◂ [ ] ) } ⊢ 0(<2)◂{ 8'(= {| l |} ) 9'(= a18◂ [ ] ) }
;; rsp=2 , %1097~0(<2)◂{ 8'(= {| l |} ) 9'(= a18◂ [ ] ) } %1096~1'(= r ) %1095~0'(= r ) 
; #24 0(<2)◂{ 8'(= {| l |} ) 9'(= a18◂ [ ] ) } ⊢ 0(<2)◂0(<2)◂{ 8'(= {| l |} ) 9'(= a18◂ [ ] ) }
;; rsp=2 , %1098~0(<2)◂0(<2)◂{ 8'(= {| l |} ) 9'(= a18◂ [ ] ) } %1096~1'(= r ) %1095~0'(= r ) 
; ∎ 0(<2)◂0(<2)◂{ 8'(= {| l |} ) 9'(= a18◂ [ ] ) }
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂0(<2)◂{ 8'(= {| l |} ) 9'(= a18◂ [ ] ) } ⊢ 2'(= a3◂ [ a18◂ [ ]] )
; .mov_ptn 0(<2)◂0(<2)◂{ 8'(= {| l |} ) 9'(= a18◂ [ ] ) } ⊢ 2'(= a3◂ [ a18◂ [ ]] )
	ALC_RCD 2, rax
	mov r13,rax
	mov rax,QWORD [rsp-8+8*2]
	mov QWORD [r13+8+8*0],rax
	mov rax,QWORD [rsp-8+8*1]
	mov QWORD [r13+8+8*1],rax
	mov rax,r13
	mov BYTE [rax+6],0
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,16
	jmp LB_1105
LB_1105:
	cmp BYTE [r8+6],0
	jnz LB_1080
	POP_GRM_SCC
	ret
LB_1080:
	RB_GRM
	jmp LB_1108
LB_1107:
	add r14,1 
LB_1108:
	cmp r14,r9
	jge LB_1109
	JZ_LINE_SPC BYTE [r13+8+r14], LB_1107
LB_1109
	call GRM_82
	cmp BYTE [r8+6],0
	jnz LB_1112
	jmp LB_1113
LB_1112:
	jmp LB_1110
LB_1113:
	sub rsp,8
; .mov_ptn2 2'(= {| l |} ) ⊢ 8'(= {| l |} )
; .mov_ptn 2'(= {| l |} ) ⊢ 8'(= {| l |} )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_1111
LB_1110:
	add rsp,0
	jmp LB_1106
LB_1111:
	mov QWORD [rsp+8*1],r14
	mov r13,QWORD [rsp+16+8*1]
	mov r14,QWORD [rsp+8*1]
	jmp LB_1114
LB_1114
;; rsp=1 , %1101~1'(= r ) %1100~0'(= r ) %1099~8'(= {| l |} ) 
; #85 8'(= {| l |} ) ⊢ 1(<2)◂8'(= {| l |} )
;; rsp=1 , %1102~1(<2)◂8'(= {| l |} ) %1101~1'(= r ) %1100~0'(= r ) 
; #24 1(<2)◂8'(= {| l |} ) ⊢ 0(<2)◂1(<2)◂8'(= {| l |} )
;; rsp=1 , %1103~0(<2)◂1(<2)◂8'(= {| l |} ) %1101~1'(= r ) %1100~0'(= r ) 
; ∎ 0(<2)◂1(<2)◂8'(= {| l |} )
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂1(<2)◂8'(= {| l |} ) ⊢ 2'(= a3◂ [ a18◂ [ ]] )
; .mov_ptn 0(<2)◂1(<2)◂8'(= {| l |} ) ⊢ 2'(= a3◂ [ a18◂ [ ]] )
	mov rax,QWORD [rsp-8+8*1]
	mov BYTE [rax+6],1
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,8
	jmp LB_1115
LB_1115:
	cmp BYTE [r8+6],0
	jnz LB_1106
	POP_GRM_SCC
	ret
LB_1106:
	POP_GRM_FAIL 
	ret
ETR_195:
	mov r9,0x0000_ffff_ffff_ffff
	and r9,[r13]
	call GRM_195
	ret
GRM_195:
	PUSH_GRM
	cmp r14,r9
	jge LB_1119
 lea rdi,[r13+8+r14] 
	C_PUSH_REGS
	call scf_d
	C_POP_REGS
	cmp rax,0 
	jz LB_1119
	add r14,rsi
	push rdi
	jmp LB_1120
LB_1119:
	mov r8,unt_1
	jmp LB_1117
LB_1120:
	jmp LB_1118
LB_1117:
	add rsp,0
	jmp LB_1116
LB_1118:
	lea rax,[r14+1]
	cmp rax,r9
	jg LB_1123
	jmp LB_1124
LB_1123:
	mov r8,unt_1
	jmp LB_1121
LB_1124:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],114
	jnz LB_1125
	jmp LB_1126
LB_1125:
	mov r8,unt_1
	jmp LB_1121
LB_1126:
	add r14,1
	jmp LB_1122
LB_1121:
	add rsp,8
	jmp LB_1116
LB_1122:
	mov QWORD [rsp+8*1],r14
	mov r13,QWORD [rsp+16+8*1]
	mov r14,QWORD [rsp+8*1]
	jmp LB_1127
LB_1127
;; rsp=1 , %1106~1'(= r ) %1105~0'(= r ) %1104~8'(= r ) 
; #89 8'(= r ) ⊢ 0(<2)◂8'(= r )
;; rsp=1 , %1107~0(<2)◂8'(= r ) %1106~1'(= r ) %1105~0'(= r ) 
; #91 0(<2)◂8'(= r ) ⊢ 0(<2)◂0(<2)◂8'(= r )
;; rsp=1 , %1108~0(<2)◂0(<2)◂8'(= r ) %1106~1'(= r ) %1105~0'(= r ) 
; #24 0(<2)◂0(<2)◂8'(= r ) ⊢ 0(<2)◂0(<2)◂0(<2)◂8'(= r )
;; rsp=1 , %1109~0(<2)◂0(<2)◂0(<2)◂8'(= r ) %1106~1'(= r ) %1105~0'(= r ) 
; ∎ 0(<2)◂0(<2)◂0(<2)◂8'(= r )
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂0(<2)◂0(<2)◂8'(= r ) ⊢ 2'(= a3◂ [ a20◂ [ a18◂ [ ]]] )
; .mov_ptn 0(<2)◂0(<2)◂0(<2)◂8'(= r ) ⊢ 2'(= a3◂ [ a20◂ [ a18◂ [ ]]] )
	mov rax,QWORD [rsp-8+8*1]
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,8
	jmp LB_1128
LB_1128:
	cmp BYTE [r8+6],0
	jnz LB_1116
	POP_GRM_SCC
	ret
LB_1116:
	RB_GRM
	lea rax,[r14+2]
	cmp rax,r9
	jg LB_1132
	jmp LB_1133
LB_1132:
	mov r8,unt_1
	jmp LB_1130
LB_1133:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],48
	jnz LB_1134
	cmp BYTE [rdi+1],120
	jnz LB_1134
	jmp LB_1135
LB_1134:
	mov r8,unt_1
	jmp LB_1130
LB_1135:
	add r14,2
	jmp LB_1131
LB_1130:
	add rsp,0
	jmp LB_1129
LB_1131:
	cmp r14,r9
	jge LB_1138
 lea rdi,[r13+8+r14] 
	C_PUSH_REGS
	call scf_x
	C_POP_REGS
	cmp rax,0 
	jz LB_1138
	add r14,rsi
	push rdi
	jmp LB_1139
LB_1138:
	mov r8,unt_1
	jmp LB_1136
LB_1139:
	jmp LB_1137
LB_1136:
	add rsp,0
	jmp LB_1129
LB_1137:
	lea rax,[r14+1]
	cmp rax,r9
	jg LB_1142
	jmp LB_1143
LB_1142:
	mov r8,unt_1
	jmp LB_1140
LB_1143:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],114
	jnz LB_1144
	jmp LB_1145
LB_1144:
	mov r8,unt_1
	jmp LB_1140
LB_1145:
	add r14,1
	jmp LB_1141
LB_1140:
	add rsp,8
	jmp LB_1129
LB_1141:
	mov QWORD [rsp+8*1],r14
	mov r13,QWORD [rsp+16+8*1]
	mov r14,QWORD [rsp+8*1]
	jmp LB_1146
LB_1146
;; rsp=1 , %1112~1'(= r ) %1111~0'(= r ) %1110~8'(= r ) 
; #89 8'(= r ) ⊢ 0(<2)◂8'(= r )
;; rsp=1 , %1113~0(<2)◂8'(= r ) %1112~1'(= r ) %1111~0'(= r ) 
; #91 0(<2)◂8'(= r ) ⊢ 0(<2)◂0(<2)◂8'(= r )
;; rsp=1 , %1114~0(<2)◂0(<2)◂8'(= r ) %1112~1'(= r ) %1111~0'(= r ) 
; #24 0(<2)◂0(<2)◂8'(= r ) ⊢ 0(<2)◂0(<2)◂0(<2)◂8'(= r )
;; rsp=1 , %1115~0(<2)◂0(<2)◂0(<2)◂8'(= r ) %1112~1'(= r ) %1111~0'(= r ) 
; ∎ 0(<2)◂0(<2)◂0(<2)◂8'(= r )
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂0(<2)◂0(<2)◂8'(= r ) ⊢ 2'(= a3◂ [ a20◂ [ a18◂ [ ]]] )
; .mov_ptn 0(<2)◂0(<2)◂0(<2)◂8'(= r ) ⊢ 2'(= a3◂ [ a20◂ [ a18◂ [ ]]] )
	mov rax,QWORD [rsp-8+8*1]
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,8
	jmp LB_1147
LB_1147:
	cmp BYTE [r8+6],0
	jnz LB_1129
	POP_GRM_SCC
	ret
LB_1129:
	RB_GRM
	call GRM_72
	cmp BYTE [r8+6],0
	jnz LB_1151
	jmp LB_1152
LB_1151:
	jmp LB_1149
LB_1152:
	sub rsp,8
; .mov_ptn2 2'(= {| l |} ) ⊢ 8'(= {| l |} )
; .mov_ptn 2'(= {| l |} ) ⊢ 8'(= {| l |} )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_1150
LB_1149:
	add rsp,0
	jmp LB_1148
LB_1150:
	mov QWORD [rsp+8*1],r14
	mov r13,QWORD [rsp+16+8*1]
	mov r14,QWORD [rsp+8*1]
	jmp LB_1153
LB_1153
;; rsp=1 , %1118~1'(= r ) %1117~0'(= r ) %1116~8'(= {| l |} ) 
; #88 8'(= {| l |} ) ⊢ 1(<2)◂8'(= {| l |} )
;; rsp=1 , %1119~1(<2)◂8'(= {| l |} ) %1118~1'(= r ) %1117~0'(= r ) 
; #91 1(<2)◂8'(= {| l |} ) ⊢ 0(<2)◂1(<2)◂8'(= {| l |} )
;; rsp=1 , %1120~0(<2)◂1(<2)◂8'(= {| l |} ) %1118~1'(= r ) %1117~0'(= r ) 
; #24 0(<2)◂1(<2)◂8'(= {| l |} ) ⊢ 0(<2)◂0(<2)◂1(<2)◂8'(= {| l |} )
;; rsp=1 , %1121~0(<2)◂0(<2)◂1(<2)◂8'(= {| l |} ) %1118~1'(= r ) %1117~0'(= r ) 
; ∎ 0(<2)◂0(<2)◂1(<2)◂8'(= {| l |} )
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂0(<2)◂1(<2)◂8'(= {| l |} ) ⊢ 2'(= a3◂ [ a20◂ [ a18◂ [ ]]] )
; .mov_ptn 0(<2)◂0(<2)◂1(<2)◂8'(= {| l |} ) ⊢ 2'(= a3◂ [ a20◂ [ a18◂ [ ]]] )
	mov rax,QWORD [rsp-8+8*1]
	mov BYTE [rax+6],1
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,8
	jmp LB_1154
LB_1154:
	cmp BYTE [r8+6],0
	jnz LB_1148
	POP_GRM_SCC
	ret
LB_1148:
	RB_GRM
	call GRM_194
	cmp BYTE [r8+6],0
	jnz LB_1158
	jmp LB_1159
LB_1158:
	jmp LB_1156
LB_1159:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a18◂ [ ] ) ⊢ 8'(= a18◂ [ ] )
; .mov_ptn 2'(= a18◂ [ ] ) ⊢ 8'(= a18◂ [ ] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_1157
LB_1156:
	add rsp,0
	jmp LB_1155
LB_1157:
	mov QWORD [rsp+8*1],r14
	mov r13,QWORD [rsp+16+8*1]
	mov r14,QWORD [rsp+8*1]
	jmp LB_1160
LB_1160
;; rsp=1 , %1124~1'(= r ) %1123~0'(= r ) %1122~8'(= a18◂ [ ] ) 
; #90 8'(= a18◂ [ ] ) ⊢ 1(<2)◂8'(= a18◂ [ ] )
;; rsp=1 , %1125~1(<2)◂8'(= a18◂ [ ] ) %1124~1'(= r ) %1123~0'(= r ) 
; #24 1(<2)◂8'(= a18◂ [ ] ) ⊢ 0(<2)◂1(<2)◂8'(= a18◂ [ ] )
;; rsp=1 , %1126~0(<2)◂1(<2)◂8'(= a18◂ [ ] ) %1124~1'(= r ) %1123~0'(= r ) 
; ∎ 0(<2)◂1(<2)◂8'(= a18◂ [ ] )
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂1(<2)◂8'(= a18◂ [ ] ) ⊢ 2'(= a3◂ [ a20◂ [ a18◂ [ ]]] )
; .mov_ptn 0(<2)◂1(<2)◂8'(= a18◂ [ ] ) ⊢ 2'(= a3◂ [ a20◂ [ a18◂ [ ]]] )
	mov rax,QWORD [rsp-8+8*1]
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],1
	mov QWORD [rax+8],rdi
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,8
	jmp LB_1161
LB_1161:
	cmp BYTE [r8+6],0
	jnz LB_1155
	POP_GRM_SCC
	ret
LB_1155:
	POP_GRM_FAIL 
	ret
ETR_196:
	mov r9,0x0000_ffff_ffff_ffff
	and r9,[r13]
	call GRM_196
	ret
GRM_196:
	PUSH_GRM
	jmp LB_1164
LB_1163:
	add r14,1 
LB_1164:
	cmp r14,r9
	jge LB_1165
	JZ_LINE_SPC BYTE [r13+8+r14], LB_1163
LB_1165
	lea rax,[r14+1]
	cmp rax,r9
	jg LB_1168
	jmp LB_1169
LB_1168:
	mov r8,unt_1
	jmp LB_1166
LB_1169:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],10
	jnz LB_1170
	jmp LB_1171
LB_1170:
	mov r8,unt_1
	jmp LB_1166
LB_1171:
	add r14,1
	jmp LB_1167
LB_1166:
	add rsp,0
	jmp LB_1162
LB_1167:
	jmp LB_1173
LB_1172:
	add r14,1 
LB_1173:
	cmp r14,r9
	jge LB_1174
	JZ_LINE_SPC BYTE [r13+8+r14], LB_1172
LB_1174
	call GRM_196
	cmp BYTE [r8+6],0
	jnz LB_1177
	jmp LB_1178
LB_1177:
	jmp LB_1175
LB_1178:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= r ) ⊢ 8'(= r )
; .mov_ptn 2'(= r ) ⊢ 8'(= r )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_1176
LB_1175:
	add rsp,0
	jmp LB_1162
LB_1176:
	mov QWORD [rsp+8*1],r14
	mov r13,QWORD [rsp+16+8*1]
	mov r14,QWORD [rsp+8*1]
	jmp LB_1179
LB_1179
;; rsp=1 , %1129~1'(= r ) %1128~0'(= r ) %1127~8'(= r ) 
; #11 8'(= r ) ⊢ 8'(= r )
	add QWORD [rsp-8+8*1],1
;; rsp=1 , %1130~8'(= r ) %1129~1'(= r ) %1128~0'(= r ) 
; #24 8'(= r ) ⊢ 0(<2)◂8'(= r )
;; rsp=1 , %1131~0(<2)◂8'(= r ) %1129~1'(= r ) %1128~0'(= r ) 
; ∎ 0(<2)◂8'(= r )
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂8'(= r ) ⊢ 2'(= a3◂ [ r] )
; .mov_ptn 0(<2)◂8'(= r ) ⊢ 2'(= a3◂ [ r] )
	mov rax,QWORD [rsp-8+8*1]
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,8
	jmp LB_1180
LB_1180:
	cmp BYTE [r8+6],0
	jnz LB_1162
	POP_GRM_SCC
	ret
LB_1162:
	RB_GRM
	jmp LB_1183
LB_1182:
	add r14,1 
LB_1183:
	cmp r14,r9
	jge LB_1184
	JZ_LINE_SPC BYTE [r13+8+r14], LB_1182
LB_1184
	lea rax,[r14+1]
	cmp rax,r9
	jg LB_1187
	jmp LB_1188
LB_1187:
	mov r8,unt_1
	jmp LB_1185
LB_1188:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],10
	jnz LB_1189
	jmp LB_1190
LB_1189:
	mov r8,unt_1
	jmp LB_1185
LB_1190:
	add r14,1
	jmp LB_1186
LB_1185:
	add rsp,0
	jmp LB_1181
LB_1186:
	mov QWORD [rsp+8*0],r14
	mov r13,QWORD [rsp+16+8*0]
	mov r14,QWORD [rsp+8*0]
	jmp LB_1191
LB_1191
;; rsp=0 , %1133~1'(= r ) %1132~0'(= r ) 
; #24 %[ 1r ] ⊢ 0(<2)◂%[ 1r ]
;; rsp=0 , %1134~0(<2)◂%[ 1r ] %1133~1'(= r ) %1132~0'(= r ) 
; ∎ 0(<2)◂%[ 1r ]
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂%[ 1r ] ⊢ 2'(= a3◂ [ r] )
; .mov_ptn 0(<2)◂%[ 1r ] ⊢ 2'(= a3◂ [ r] )
	mov rax,1
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	jmp LB_1192
LB_1192:
	cmp BYTE [r8+6],0
	jnz LB_1181
	POP_GRM_SCC
	ret
LB_1181:
	POP_GRM_FAIL 
	ret
ETR_200: ;; mk_prs_err { 0'(= r ) 1'(= r ) 2'(= {| l |} ) } ⊢ 0'(= a44◂ [ q0] ) : ({ _r64 _r64 _s8 }→_t44◂2337'(1))
;; rsp=0 , %1150~2'(= {| l |} ) %1149~1'(= r ) %1148~0'(= r ) 
; #22 { } ⊢ 1(<2)◂{ }
;; rsp=0 , %1151~1(<2)◂{ } %1150~2'(= {| l |} ) %1149~1'(= r ) %1148~0'(= r ) 
; #23 { { 0'(= r ) 1'(= r ) 2'(= {| l |} ) } 1(<2)◂{ } } ⊢ 0(<2)◂{ { 0'(= r ) 1'(= r ) 2'(= {| l |} ) } 1(<2)◂{ } }
;; rsp=0 , %1152~0(<2)◂{ { 0'(= r ) 1'(= r ) 2'(= {| l |} ) } 1(<2)◂{ } } 
; #197 0(<2)◂{ { 0'(= r ) 1'(= r ) 2'(= {| l |} ) } 1(<2)◂{ } } ⊢ 1(<2)◂0(<2)◂{ { 0'(= r ) 1'(= r ) 2'(= {| l |} ) } 1(<2)◂{ } }
;; rsp=0 , %1153~1(<2)◂0(<2)◂{ { 0'(= r ) 1'(= r ) 2'(= {| l |} ) } 1(<2)◂{ } } 
; ∎ 1(<2)◂0(<2)◂{ { 0'(= r ) 1'(= r ) 2'(= {| l |} ) } 1(<2)◂{ } }
; .mov_ptn2 1(<2)◂0(<2)◂{ { 0'(= r ) 1'(= r ) 2'(= {| l |} ) } 1(<2)◂{ } } ⊢ 0'(= a44◂ [ q0] )
	mov r9,r13
; .mov_ptn 1(<2)◂0(<2)◂{ { 3'(= r ) 1'(= r ) 2'(= {| l |} ) } 1(<2)◂{ } } ⊢ 0'(= a44◂ [ q0] )
	ALC_RCD 2, rax
	mov r10,rax
	ALC_RCD 3, rax
	mov r11,rax
	mov rax,r9
	mov QWORD [r11+8+8*0],rax
	mov rax,r14
	mov QWORD [r11+8+8*1],rax
	mov rax,r8
	mov QWORD [r11+8+8*2],rax
	mov rax,r11
	mov QWORD [r10+8+8*0],rax
	mov rax,unt 
	mov rax,unt_1
	mov QWORD [r10+8+8*1],rax
	mov rax,r10
	mov BYTE [rax+6],0
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],1
	mov QWORD [rax+8],rdi
	mov r13,rax
	ret
ETR_201: ;; pnt_prs_err 0'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 0'(= {| l |} ) : (_lst◂{ _r64 _r64 _s8 }→_s8)
;; rsp=0 , %1154~0'(= a2◂ [ *{ rr{| l |}}] ) 
;; ? 0'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 0(<2)◂{ { 2'(= r ) 3'(= r ) 4'(= {| l |} ) } 5'(= a2◂ [ *{ rr{| l |}}] ) }
	mov rdi,r13
	cmp BYTE [rdi+6],0
	jnz LB_1194
	jmp LB_1195
LB_1194:
	jmp LB_1193
LB_1195:
	mov r14, QWORD [r13+8]
	mov r8, QWORD [r14+8]
	mov r9, QWORD [r14+16]
	mov r10, QWORD [r14+24]
	mov QWORD [GBG_VCT+8*0],r14
	mov r11, QWORD [r13+16]
	mov QWORD [GBG_VCT+8*1],r13
	mov rdi,QWORD [GBG_VCT+8*1]
	FREE_RCD 2,rdi
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_RCD 3,rdi
;; rsp=0 , %1158~5'(= a2◂ [ *{ rr{| l |}}] ) %1157~4'(= {| l |} ) %1156~3'(= r ) %1155~2'(= r ) 
; #201 5'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 0'(= {| l |} )
	sub rsp,24
	mov QWORD [rsp+8*0],r8
	mov QWORD [rsp+8*1],r9
	mov QWORD [rsp+8*2],r10
; .mov_ptn2 5'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 0'(= a2◂ [ *{ rr{| l |}}] )
; .mov_ptn 5'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 0'(= a2◂ [ *{ rr{| l |}}] )
	mov rax,r11
	mov r13,rax
	call ETR_201
	mov r10,QWORD [rsp-8+8*3]
	mov r9,QWORD [rsp-8+8*2]
	mov r8,QWORD [rsp-8+8*1]
	add rsp,24
;; rsp=0 , %1159~0'(= {| l |} ) %1157~4'(= {| l |} ) %1156~3'(= r ) %1155~2'(= r ) 
; » _^ .. ⊢ ..
; .. //
	mov rdi,0
	sub rsp,128
	push rdi 
	lea rdi,[rsp+8]
	mov rdx,r8
	mov rsi,fmt_d
 xor rax,rax
	C_CALL_SF sprintf
	pop rdi
	add rdi,rax 
	push rax 
	sub rsp,128
	push rdi 
	lea rdi,[rsp+8]
	mov rdx,r9
	mov rsi,fmt_d
 xor rax,rax
	C_CALL_SF sprintf
	pop rdi
	add rdi,rax 
	push rax 
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[r10]
	add rdi,rax 
	push rax
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[r13]
	add rdi,rax 
	push rax
	add rdi,11
	push rdi 
	call mlc_s8
	pop rdi
	mov r14,rax
	lea rdi,[rax+7+rdi]
	std 
	mov QWORD [tmp],rcx 
	pop rcx
	lea rsi,[r13+7+rcx]
	rep movsb
	lea rsi,[LB_1196+1-1]
	mov rcx,1
	rep movsb
	pop rcx
	lea rsi,[r10+7+rcx]
	rep movsb
	lea rsi,[LB_1197+1-1]
	mov rcx,1
	rep movsb
	pop rcx
	lea rsi,[rsp+rcx-1]
	rep movsb
	add rsp,128
	lea rsi,[LB_1198+1-1]
	mov rcx,1
	rep movsb
	pop rcx
	lea rsi,[rsp+rcx-1]
	rep movsb
	add rsp,128
	lea rsi,[LB_1199+8-1]
	mov rcx,8
	rep movsb
	mov rcx,QWORD [tmp] 
;; rsp=0 , %1164~1'(= {| l |} ) %1163~0'(= {| l |} ) %1162~4'(= {| l |} ) %1161~3'(= r ) %1160~2'(= r ) 
; ∎ 1'(= {| l |} )
; .dlt.ptn 0'(= {| l |} )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	mov rdi,r8
	call free_s8
	C_POP_REGS
; .dlt.ptn 4'(= {| l |} )
	mov rdi,r10
	C_PUSH_REGS
	mov r8,rdi
	mov rdi,r8
	call free_s8
	C_POP_REGS
; .dlt.ptn 3'(= r )
	mov rdi,r9
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 2'(= r )
	mov rdi,r8
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 1'(= {| l |} ) ⊢ 0'(= {| l |} )
; .mov_ptn 1'(= {| l |} ) ⊢ 0'(= {| l |} )
	mov rax,r14
	mov r13,rax
	ret
LB_1193:
;; ?. 0'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 1(<2)◂{ }
;; rsp=0 , 
; $ %[ "" ] ⊢ %[ "" ]
;; rsp=0 , %1165~%[ "" ] 
; ∎ %[ "" ]
; .mov_ptn2 %[ "" ] ⊢ 0'(= {| l |} )
; .mov_ptn %[ "" ] ⊢ 0'(= {| l |} )
	mov rsi,1  
	mov rdi,16
	xor rax,rax 
	C_CALL_SF calloc
	mov QWORD [rax],0
	mov r13,rax
	ret
ETR_202:
	mov r9,0x0000_ffff_ffff_ffff
	and r9,[r13]
	call GRM_202
	ret
GRM_202:
	PUSH_GRM
	jmp LB_1202
LB_1201:
	add r14,1 
LB_1202:
	cmp r14,r9
	jge LB_1203
	JZ_LINE_SPC BYTE [r13+8+r14], LB_1201
LB_1203
	lea rax,[r14+1]
	cmp rax,r9
	jg LB_1206
	jmp LB_1207
LB_1206:
	mov r8,unt_1
	jmp LB_1204
LB_1207:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],123
	jnz LB_1208
	jmp LB_1209
LB_1208:
	mov r8,unt_1
	jmp LB_1204
LB_1209:
	add r14,1
	jmp LB_1205
LB_1204:
	add rsp,0
	jmp LB_1200
LB_1205:
	jmp LB_1211
LB_1210:
	add r14,1 
LB_1211:
	cmp r14,r9
	jge LB_1212
	JZ_LINE_SPC BYTE [r13+8+r14], LB_1210
LB_1212
	call GRM_203
	cmp BYTE [r8+6],0
	jnz LB_1215
	jmp LB_1216
LB_1215:
	jmp LB_1213
LB_1216:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a2◂ [ a17◂ [ a23◂ [ a18◂ [ ]{| l |}]]] ) ⊢ 8'(= a2◂ [ a17◂ [ a23◂ [ a18◂ [ ]{| l |}]]] )
; .mov_ptn 2'(= a2◂ [ a17◂ [ a23◂ [ a18◂ [ ]{| l |}]]] ) ⊢ 8'(= a2◂ [ a17◂ [ a23◂ [ a18◂ [ ]{| l |}]]] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_1214
LB_1213:
	add rsp,0
	jmp LB_1200
LB_1214:
	jmp LB_1218
LB_1217:
	add r14,1 
LB_1218:
	cmp r14,r9
	jge LB_1219
	JZ_LINE_SPC BYTE [r13+8+r14], LB_1217
LB_1219
	lea rax,[r14+1]
	cmp rax,r9
	jg LB_1222
	jmp LB_1223
LB_1222:
	mov r8,unt_1
	jmp LB_1220
LB_1223:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],125
	jnz LB_1224
	jmp LB_1225
LB_1224:
	mov r8,unt_1
	jmp LB_1220
LB_1225:
	add r14,1
	jmp LB_1221
LB_1220:
	add rsp,8
	jmp LB_1200
LB_1221:
	mov QWORD [rsp+8*1],r14
	mov r13,QWORD [rsp+16+8*1]
	mov r14,QWORD [rsp+8*1]
	jmp LB_1226
LB_1226
;; rsp=1 , %1168~1'(= r ) %1167~0'(= r ) %1166~8'(= a2◂ [ a17◂ [ a23◂ [ a18◂ [ ]{| l |}]]] ) 
; #84 8'(= a2◂ [ a17◂ [ a23◂ [ a18◂ [ ]{| l |}]]] ) ⊢ 0(<2)◂8'(= a2◂ [ a17◂ [ a23◂ [ a18◂ [ ]{| l |}]]] )
;; rsp=1 , %1169~0(<2)◂8'(= a2◂ [ a17◂ [ a23◂ [ a18◂ [ ]{| l |}]]] ) %1168~1'(= r ) %1167~0'(= r ) 
; #24 0(<2)◂8'(= a2◂ [ a17◂ [ a23◂ [ a18◂ [ ]{| l |}]]] ) ⊢ 0(<2)◂0(<2)◂8'(= a2◂ [ a17◂ [ a23◂ [ a18◂ [ ]{| l |}]]] )
;; rsp=1 , %1170~0(<2)◂0(<2)◂8'(= a2◂ [ a17◂ [ a23◂ [ a18◂ [ ]{| l |}]]] ) %1168~1'(= r ) %1167~0'(= r ) 
; ∎ 0(<2)◂0(<2)◂8'(= a2◂ [ a17◂ [ a23◂ [ a18◂ [ ]{| l |}]]] )
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂0(<2)◂8'(= a2◂ [ a17◂ [ a23◂ [ a18◂ [ ]{| l |}]]] ) ⊢ 2'(= a3◂ [ a17◂ [ a23◂ [ a18◂ [ ]{| l |}]]] )
; .mov_ptn 0(<2)◂0(<2)◂8'(= a2◂ [ a17◂ [ a23◂ [ a18◂ [ ]{| l |}]]] ) ⊢ 2'(= a3◂ [ a17◂ [ a23◂ [ a18◂ [ ]{| l |}]]] )
	mov rax,QWORD [rsp-8+8*1]
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,8
	jmp LB_1227
LB_1227:
	cmp BYTE [r8+6],0
	jnz LB_1200
	POP_GRM_SCC
	ret
LB_1200:
	RB_GRM
	jmp LB_1230
LB_1229:
	add r14,1 
LB_1230:
	cmp r14,r9
	jge LB_1231
	JZ_LINE_SPC BYTE [r13+8+r14], LB_1229
LB_1231
	call GRM_205
	cmp BYTE [r8+6],0
	jnz LB_1234
	jmp LB_1235
LB_1234:
	jmp LB_1232
LB_1235:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a23◂ [ a18◂ [ ]{| l |}] ) ⊢ 8'(= a23◂ [ a18◂ [ ]{| l |}] )
; .mov_ptn 2'(= a23◂ [ a18◂ [ ]{| l |}] ) ⊢ 8'(= a23◂ [ a18◂ [ ]{| l |}] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_1233
LB_1232:
	add rsp,0
	jmp LB_1228
LB_1233:
	mov QWORD [rsp+8*1],r14
	mov r13,QWORD [rsp+16+8*1]
	mov r14,QWORD [rsp+8*1]
	jmp LB_1236
LB_1236
;; rsp=1 , %1173~1'(= r ) %1172~0'(= r ) %1171~8'(= a23◂ [ a18◂ [ ]{| l |}] ) 
; #83 8'(= a23◂ [ a18◂ [ ]{| l |}] ) ⊢ 1(<2)◂8'(= a23◂ [ a18◂ [ ]{| l |}] )
;; rsp=1 , %1174~1(<2)◂8'(= a23◂ [ a18◂ [ ]{| l |}] ) %1173~1'(= r ) %1172~0'(= r ) 
; #24 1(<2)◂8'(= a23◂ [ a18◂ [ ]{| l |}] ) ⊢ 0(<2)◂1(<2)◂8'(= a23◂ [ a18◂ [ ]{| l |}] )
;; rsp=1 , %1175~0(<2)◂1(<2)◂8'(= a23◂ [ a18◂ [ ]{| l |}] ) %1173~1'(= r ) %1172~0'(= r ) 
; ∎ 0(<2)◂1(<2)◂8'(= a23◂ [ a18◂ [ ]{| l |}] )
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂1(<2)◂8'(= a23◂ [ a18◂ [ ]{| l |}] ) ⊢ 2'(= a3◂ [ a17◂ [ a23◂ [ a18◂ [ ]{| l |}]]] )
; .mov_ptn 0(<2)◂1(<2)◂8'(= a23◂ [ a18◂ [ ]{| l |}] ) ⊢ 2'(= a3◂ [ a17◂ [ a23◂ [ a18◂ [ ]{| l |}]]] )
	mov rax,QWORD [rsp-8+8*1]
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],1
	mov QWORD [rax+8],rdi
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,8
	jmp LB_1237
LB_1237:
	cmp BYTE [r8+6],0
	jnz LB_1228
	POP_GRM_SCC
	ret
LB_1228:
	POP_GRM_FAIL 
	ret
ETR_203:
	mov r9,0x0000_ffff_ffff_ffff
	and r9,[r13]
	call GRM_203
	ret
GRM_203:
	PUSH_GRM
	jmp LB_1240
LB_1239:
	add r14,1 
LB_1240:
	cmp r14,r9
	jge LB_1241
	JZ_LINE_SPC BYTE [r13+8+r14], LB_1239
LB_1241
	call GRM_202
	cmp BYTE [r8+6],0
	jnz LB_1244
	jmp LB_1245
LB_1244:
	jmp LB_1242
LB_1245:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a17◂ [ a23◂ [ a18◂ [ ]{| l |}]] ) ⊢ 8'(= a17◂ [ a23◂ [ a18◂ [ ]{| l |}]] )
; .mov_ptn 2'(= a17◂ [ a23◂ [ a18◂ [ ]{| l |}]] ) ⊢ 8'(= a17◂ [ a23◂ [ a18◂ [ ]{| l |}]] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_1243
LB_1242:
	add rsp,0
	jmp LB_1238
LB_1243:
	jmp LB_1247
LB_1246:
	add r14,1 
LB_1247:
	cmp r14,r9
	jge LB_1248
	JZ_LINE_SPC BYTE [r13+8+r14], LB_1246
LB_1248
	call GRM_203
	cmp BYTE [r8+6],0
	jnz LB_1251
	jmp LB_1252
LB_1251:
	jmp LB_1249
LB_1252:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a2◂ [ a17◂ [ a23◂ [ a18◂ [ ]{| l |}]]] ) ⊢ 9'(= a2◂ [ a17◂ [ a23◂ [ a18◂ [ ]{| l |}]]] )
; .mov_ptn 2'(= a2◂ [ a17◂ [ a23◂ [ a18◂ [ ]{| l |}]]] ) ⊢ 9'(= a2◂ [ a17◂ [ a23◂ [ a18◂ [ ]{| l |}]]] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_1250
LB_1249:
	add rsp,8
	jmp LB_1238
LB_1250:
	mov QWORD [rsp+8*2],r14
	mov r13,QWORD [rsp+16+8*2]
	mov r14,QWORD [rsp+8*2]
	jmp LB_1253
LB_1253
;; rsp=2 , %1179~1'(= r ) %1178~0'(= r ) %1177~9'(= a2◂ [ a17◂ [ a23◂ [ a18◂ [ ]{| l |}]]] ) %1176~8'(= a17◂ [ a23◂ [ a18◂ [ ]{| l |}]] ) 
; #23 { 8'(= a17◂ [ a23◂ [ a18◂ [ ]{| l |}]] ) 9'(= a2◂ [ a17◂ [ a23◂ [ a18◂ [ ]{| l |}]]] ) } ⊢ 0(<2)◂{ 8'(= a17◂ [ a23◂ [ a18◂ [ ]{| l |}]] ) 9'(= a2◂ [ a17◂ [ a23◂ [ a18◂ [ ]{| l |}]]] ) }
;; rsp=2 , %1180~0(<2)◂{ 8'(= a17◂ [ a23◂ [ a18◂ [ ]{| l |}]] ) 9'(= a2◂ [ a17◂ [ a23◂ [ a18◂ [ ]{| l |}]]] ) } %1179~1'(= r ) %1178~0'(= r ) 
; #24 0(<2)◂{ 8'(= a17◂ [ a23◂ [ a18◂ [ ]{| l |}]] ) 9'(= a2◂ [ a17◂ [ a23◂ [ a18◂ [ ]{| l |}]]] ) } ⊢ 0(<2)◂0(<2)◂{ 8'(= a17◂ [ a23◂ [ a18◂ [ ]{| l |}]] ) 9'(= a2◂ [ a17◂ [ a23◂ [ a18◂ [ ]{| l |}]]] ) }
;; rsp=2 , %1181~0(<2)◂0(<2)◂{ 8'(= a17◂ [ a23◂ [ a18◂ [ ]{| l |}]] ) 9'(= a2◂ [ a17◂ [ a23◂ [ a18◂ [ ]{| l |}]]] ) } %1179~1'(= r ) %1178~0'(= r ) 
; ∎ 0(<2)◂0(<2)◂{ 8'(= a17◂ [ a23◂ [ a18◂ [ ]{| l |}]] ) 9'(= a2◂ [ a17◂ [ a23◂ [ a18◂ [ ]{| l |}]]] ) }
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂0(<2)◂{ 8'(= a17◂ [ a23◂ [ a18◂ [ ]{| l |}]] ) 9'(= a2◂ [ a17◂ [ a23◂ [ a18◂ [ ]{| l |}]]] ) } ⊢ 2'(= a3◂ [ a2◂ [ a17◂ [ a23◂ [ a18◂ [ ]{| l |}]]]] )
; .mov_ptn 0(<2)◂0(<2)◂{ 8'(= a17◂ [ a23◂ [ a18◂ [ ]{| l |}]] ) 9'(= a2◂ [ a17◂ [ a23◂ [ a18◂ [ ]{| l |}]]] ) } ⊢ 2'(= a3◂ [ a2◂ [ a17◂ [ a23◂ [ a18◂ [ ]{| l |}]]]] )
	ALC_RCD 2, rax
	mov r13,rax
	mov rax,QWORD [rsp-8+8*2]
	mov QWORD [r13+8+8*0],rax
	mov rax,QWORD [rsp-8+8*1]
	mov QWORD [r13+8+8*1],rax
	mov rax,r13
	mov BYTE [rax+6],0
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,16
	jmp LB_1254
LB_1254:
	cmp BYTE [r8+6],0
	jnz LB_1238
	POP_GRM_SCC
	ret
LB_1238:
	RB_GRM
	mov QWORD [rsp+8*0],r14
	mov r13,QWORD [rsp+16+8*0]
	mov r14,QWORD [rsp+8*0]
	jmp LB_1256
LB_1256
;; rsp=0 , %1183~1'(= r ) %1182~0'(= r ) 
; #22 { } ⊢ 1(<2)◂{ }
;; rsp=0 , %1184~1(<2)◂{ } %1183~1'(= r ) %1182~0'(= r ) 
; #24 1(<2)◂{ } ⊢ 0(<2)◂1(<2)◂{ }
;; rsp=0 , %1185~0(<2)◂1(<2)◂{ } %1183~1'(= r ) %1182~0'(= r ) 
; ∎ 0(<2)◂1(<2)◂{ }
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂1(<2)◂{ } ⊢ 2'(= a3◂ [ a2◂ [ a17◂ [ a23◂ [ a18◂ [ ]{| l |}]]]] )
; .mov_ptn 0(<2)◂1(<2)◂{ } ⊢ 2'(= a3◂ [ a2◂ [ a17◂ [ a23◂ [ a18◂ [ ]{| l |}]]]] )
	mov rax,unt 
	mov rax,unt_1
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	jmp LB_1257
LB_1257:
	cmp BYTE [r8+6],0
	jnz LB_1255
	POP_GRM_SCC
	ret
LB_1255:
	POP_GRM_FAIL 
	ret
ETR_204:
	mov r9,0x0000_ffff_ffff_ffff
	and r9,[r13]
	call GRM_204
	ret
GRM_204:
	PUSH_GRM
	jmp LB_1260
LB_1259:
	add r14,1 
LB_1260:
	cmp r14,r9
	jge LB_1261
	JZ_LINE_SPC BYTE [r13+8+r14], LB_1259
LB_1261
	lea rax,[r14+1]
	cmp rax,r9
	jg LB_1264
	jmp LB_1265
LB_1264:
	mov r8,unt_1
	jmp LB_1262
LB_1265:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],44
	jnz LB_1266
	jmp LB_1267
LB_1266:
	mov r8,unt_1
	jmp LB_1262
LB_1267:
	add r14,1
	jmp LB_1263
LB_1262:
	add rsp,0
	jmp LB_1258
LB_1263:
	jmp LB_1269
LB_1268:
	add r14,1 
LB_1269:
	cmp r14,r9
	jge LB_1270
	JZ_LINE_SPC BYTE [r13+8+r14], LB_1268
LB_1270
	call GRM_205
	cmp BYTE [r8+6],0
	jnz LB_1273
	jmp LB_1274
LB_1273:
	jmp LB_1271
LB_1274:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a23◂ [ a18◂ [ ]{| l |}] ) ⊢ 8'(= a23◂ [ a18◂ [ ]{| l |}] )
; .mov_ptn 2'(= a23◂ [ a18◂ [ ]{| l |}] ) ⊢ 8'(= a23◂ [ a18◂ [ ]{| l |}] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_1272
LB_1271:
	add rsp,0
	POP_GRM_FAIL
	ret
LB_1272:
	jmp LB_1276
LB_1275:
	add r14,1 
LB_1276:
	cmp r14,r9
	jge LB_1277
	JZ_LINE_SPC BYTE [r13+8+r14], LB_1275
LB_1277
	call GRM_204
	cmp BYTE [r8+6],0
	jnz LB_1280
	jmp LB_1281
LB_1280:
	jmp LB_1278
LB_1281:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a2◂ [ a23◂ [ a18◂ [ ]{| l |}]] ) ⊢ 9'(= a2◂ [ a23◂ [ a18◂ [ ]{| l |}]] )
; .mov_ptn 2'(= a2◂ [ a23◂ [ a18◂ [ ]{| l |}]] ) ⊢ 9'(= a2◂ [ a23◂ [ a18◂ [ ]{| l |}]] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_1279
LB_1278:
	add rsp,8
	POP_GRM_FAIL
	ret
LB_1279:
	mov QWORD [rsp+8*2],r14
	mov r13,QWORD [rsp+16+8*2]
	mov r14,QWORD [rsp+8*2]
	jmp LB_1282
LB_1282
;; rsp=2 , %1189~1'(= r ) %1188~0'(= r ) %1187~9'(= a2◂ [ a23◂ [ a18◂ [ ]{| l |}]] ) %1186~8'(= a23◂ [ a18◂ [ ]{| l |}] ) 
; #23 { 8'(= a23◂ [ a18◂ [ ]{| l |}] ) 9'(= a2◂ [ a23◂ [ a18◂ [ ]{| l |}]] ) } ⊢ 0(<2)◂{ 8'(= a23◂ [ a18◂ [ ]{| l |}] ) 9'(= a2◂ [ a23◂ [ a18◂ [ ]{| l |}]] ) }
;; rsp=2 , %1190~0(<2)◂{ 8'(= a23◂ [ a18◂ [ ]{| l |}] ) 9'(= a2◂ [ a23◂ [ a18◂ [ ]{| l |}]] ) } %1189~1'(= r ) %1188~0'(= r ) 
; #24 0(<2)◂{ 8'(= a23◂ [ a18◂ [ ]{| l |}] ) 9'(= a2◂ [ a23◂ [ a18◂ [ ]{| l |}]] ) } ⊢ 0(<2)◂0(<2)◂{ 8'(= a23◂ [ a18◂ [ ]{| l |}] ) 9'(= a2◂ [ a23◂ [ a18◂ [ ]{| l |}]] ) }
;; rsp=2 , %1191~0(<2)◂0(<2)◂{ 8'(= a23◂ [ a18◂ [ ]{| l |}] ) 9'(= a2◂ [ a23◂ [ a18◂ [ ]{| l |}]] ) } %1189~1'(= r ) %1188~0'(= r ) 
; ∎ 0(<2)◂0(<2)◂{ 8'(= a23◂ [ a18◂ [ ]{| l |}] ) 9'(= a2◂ [ a23◂ [ a18◂ [ ]{| l |}]] ) }
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂0(<2)◂{ 8'(= a23◂ [ a18◂ [ ]{| l |}] ) 9'(= a2◂ [ a23◂ [ a18◂ [ ]{| l |}]] ) } ⊢ 2'(= a3◂ [ a2◂ [ a23◂ [ a18◂ [ ]{| l |}]]] )
; .mov_ptn 0(<2)◂0(<2)◂{ 8'(= a23◂ [ a18◂ [ ]{| l |}] ) 9'(= a2◂ [ a23◂ [ a18◂ [ ]{| l |}]] ) } ⊢ 2'(= a3◂ [ a2◂ [ a23◂ [ a18◂ [ ]{| l |}]]] )
	ALC_RCD 2, rax
	mov r13,rax
	mov rax,QWORD [rsp-8+8*2]
	mov QWORD [r13+8+8*0],rax
	mov rax,QWORD [rsp-8+8*1]
	mov QWORD [r13+8+8*1],rax
	mov rax,r13
	mov BYTE [rax+6],0
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,16
	jmp LB_1283
LB_1283:
	cmp BYTE [r8+6],0
	jnz LB_1258
	POP_GRM_SCC
	ret
LB_1258:
	RB_GRM
	mov QWORD [rsp+8*0],r14
	mov r13,QWORD [rsp+16+8*0]
	mov r14,QWORD [rsp+8*0]
	jmp LB_1285
LB_1285
;; rsp=0 , %1193~1'(= r ) %1192~0'(= r ) 
; #22 { } ⊢ 1(<2)◂{ }
;; rsp=0 , %1194~1(<2)◂{ } %1193~1'(= r ) %1192~0'(= r ) 
; #24 1(<2)◂{ } ⊢ 0(<2)◂1(<2)◂{ }
;; rsp=0 , %1195~0(<2)◂1(<2)◂{ } %1193~1'(= r ) %1192~0'(= r ) 
; ∎ 0(<2)◂1(<2)◂{ }
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂1(<2)◂{ } ⊢ 2'(= a3◂ [ a2◂ [ a23◂ [ a18◂ [ ]{| l |}]]] )
; .mov_ptn 0(<2)◂1(<2)◂{ } ⊢ 2'(= a3◂ [ a2◂ [ a23◂ [ a18◂ [ ]{| l |}]]] )
	mov rax,unt 
	mov rax,unt_1
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	jmp LB_1286
LB_1286:
	cmp BYTE [r8+6],0
	jnz LB_1284
	POP_GRM_SCC
	ret
LB_1284:
	POP_GRM_FAIL 
	ret
ETR_205:
	mov r9,0x0000_ffff_ffff_ffff
	and r9,[r13]
	call GRM_205
	ret
GRM_205:
	PUSH_GRM
	jmp LB_1289
LB_1288:
	add r14,1 
LB_1289:
	cmp r14,r9
	jge LB_1290
	JZ_LINE_SPC BYTE [r13+8+r14], LB_1288
LB_1290
	call GRM_194
	cmp BYTE [r8+6],0
	jnz LB_1293
	jmp LB_1294
LB_1293:
	jmp LB_1291
LB_1294:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a18◂ [ ] ) ⊢ 8'(= a18◂ [ ] )
; .mov_ptn 2'(= a18◂ [ ] ) ⊢ 8'(= a18◂ [ ] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_1292
LB_1291:
	add rsp,0
	jmp LB_1287
LB_1292:
	jmp LB_1296
LB_1295:
	add r14,1 
LB_1296:
	cmp r14,r9
	jge LB_1297
	JZ_LINE_SPC BYTE [r13+8+r14], LB_1295
LB_1297
	lea rax,[r14+3]
	cmp rax,r9
	jg LB_1300
	jmp LB_1301
LB_1300:
	mov r8,unt_1
	jmp LB_1298
LB_1301:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],226
	jnz LB_1302
	cmp BYTE [rdi+1],151
	jnz LB_1302
	cmp BYTE [rdi+2],130
	jnz LB_1302
	jmp LB_1303
LB_1302:
	mov r8,unt_1
	jmp LB_1298
LB_1303:
	add r14,3
	jmp LB_1299
LB_1298:
	add rsp,8
	jmp LB_1287
LB_1299:
	jmp LB_1305
LB_1304:
	add r14,1 
LB_1305:
	cmp r14,r9
	jge LB_1306
	JZ_LINE_SPC BYTE [r13+8+r14], LB_1304
LB_1306
	call GRM_202
	cmp BYTE [r8+6],0
	jnz LB_1309
	jmp LB_1310
LB_1309:
	jmp LB_1307
LB_1310:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a17◂ [ a23◂ [ a18◂ [ ]{| l |}]] ) ⊢ 9'(= a17◂ [ a23◂ [ a18◂ [ ]{| l |}]] )
; .mov_ptn 2'(= a17◂ [ a23◂ [ a18◂ [ ]{| l |}]] ) ⊢ 9'(= a17◂ [ a23◂ [ a18◂ [ ]{| l |}]] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_1308
LB_1307:
	add rsp,8
	jmp LB_1287
LB_1308:
	mov QWORD [rsp+8*2],r14
	mov r13,QWORD [rsp+16+8*2]
	mov r14,QWORD [rsp+8*2]
	jmp LB_1311
LB_1311
;; rsp=2 , %1199~1'(= r ) %1198~0'(= r ) %1197~9'(= a17◂ [ a23◂ [ a18◂ [ ]{| l |}]] ) %1196~8'(= a18◂ [ ] ) 
; #101 { 8'(= a18◂ [ ] ) 9'(= a17◂ [ a23◂ [ a18◂ [ ]{| l |}]] ) } ⊢ 0(<4)◂{ 8'(= a18◂ [ ] ) 9'(= a17◂ [ a23◂ [ a18◂ [ ]{| l |}]] ) }
;; rsp=2 , %1200~0(<4)◂{ 8'(= a18◂ [ ] ) 9'(= a17◂ [ a23◂ [ a18◂ [ ]{| l |}]] ) } %1199~1'(= r ) %1198~0'(= r ) 
; #24 0(<4)◂{ 8'(= a18◂ [ ] ) 9'(= a17◂ [ a23◂ [ a18◂ [ ]{| l |}]] ) } ⊢ 0(<2)◂0(<4)◂{ 8'(= a18◂ [ ] ) 9'(= a17◂ [ a23◂ [ a18◂ [ ]{| l |}]] ) }
;; rsp=2 , %1201~0(<2)◂0(<4)◂{ 8'(= a18◂ [ ] ) 9'(= a17◂ [ a23◂ [ a18◂ [ ]{| l |}]] ) } %1199~1'(= r ) %1198~0'(= r ) 
; ∎ 0(<2)◂0(<4)◂{ 8'(= a18◂ [ ] ) 9'(= a17◂ [ a23◂ [ a18◂ [ ]{| l |}]] ) }
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂0(<4)◂{ 8'(= a18◂ [ ] ) 9'(= a17◂ [ a23◂ [ a18◂ [ ]{| l |}]] ) } ⊢ 2'(= a3◂ [ a23◂ [ a18◂ [ ]{| l |}]] )
; .mov_ptn 0(<2)◂0(<4)◂{ 8'(= a18◂ [ ] ) 9'(= a17◂ [ a23◂ [ a18◂ [ ]{| l |}]] ) } ⊢ 2'(= a3◂ [ a23◂ [ a18◂ [ ]{| l |}]] )
	ALC_RCD 2, rax
	mov r13,rax
	mov rax,QWORD [rsp-8+8*2]
	mov QWORD [r13+8+8*0],rax
	mov rax,QWORD [rsp-8+8*1]
	mov QWORD [r13+8+8*1],rax
	mov rax,r13
	mov BYTE [rax+6],0
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,16
	jmp LB_1312
LB_1312:
	cmp BYTE [r8+6],0
	jnz LB_1287
	POP_GRM_SCC
	ret
LB_1287:
	RB_GRM
	jmp LB_1315
LB_1314:
	add r14,1 
LB_1315:
	cmp r14,r9
	jge LB_1316
	JZ_LINE_SPC BYTE [r13+8+r14], LB_1314
LB_1316
	lea rax,[r14+2]
	cmp rax,r9
	jg LB_1319
	jmp LB_1320
LB_1319:
	mov r8,unt_1
	jmp LB_1317
LB_1320:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],37
	jnz LB_1321
	cmp BYTE [rdi+1],91
	jnz LB_1321
	jmp LB_1322
LB_1321:
	mov r8,unt_1
	jmp LB_1317
LB_1322:
	add r14,2
	jmp LB_1318
LB_1317:
	add rsp,0
	jmp LB_1313
LB_1318:
	jmp LB_1324
LB_1323:
	add r14,1 
LB_1324:
	cmp r14,r9
	jge LB_1325
	JZ_LINE_SPC BYTE [r13+8+r14], LB_1323
LB_1325
	call GRM_195
	cmp BYTE [r8+6],0
	jnz LB_1328
	jmp LB_1329
LB_1328:
	jmp LB_1326
LB_1329:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a20◂ [ a18◂ [ ]] ) ⊢ 8'(= a20◂ [ a18◂ [ ]] )
; .mov_ptn 2'(= a20◂ [ a18◂ [ ]] ) ⊢ 8'(= a20◂ [ a18◂ [ ]] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_1327
LB_1326:
	add rsp,0
	POP_GRM_FAIL
	ret
LB_1327:
	jmp LB_1331
LB_1330:
	add r14,1 
LB_1331:
	cmp r14,r9
	jge LB_1332
	JZ_LINE_SPC BYTE [r13+8+r14], LB_1330
LB_1332
	lea rax,[r14+1]
	cmp rax,r9
	jg LB_1335
	jmp LB_1336
LB_1335:
	mov r8,unt_1
	jmp LB_1333
LB_1336:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],93
	jnz LB_1337
	jmp LB_1338
LB_1337:
	mov r8,unt_1
	jmp LB_1333
LB_1338:
	add r14,1
	jmp LB_1334
LB_1333:
	add rsp,8
	POP_GRM_FAIL
	ret
LB_1334:
	mov QWORD [rsp+8*1],r14
	mov r13,QWORD [rsp+16+8*1]
	mov r14,QWORD [rsp+8*1]
	jmp LB_1339
LB_1339
;; rsp=1 , %1204~1'(= r ) %1203~0'(= r ) %1202~8'(= a20◂ [ a18◂ [ ]] ) 
; #100 8'(= a20◂ [ a18◂ [ ]] ) ⊢ 1(<4)◂8'(= a20◂ [ a18◂ [ ]] )
;; rsp=1 , %1205~1(<4)◂8'(= a20◂ [ a18◂ [ ]] ) %1204~1'(= r ) %1203~0'(= r ) 
; #24 1(<4)◂8'(= a20◂ [ a18◂ [ ]] ) ⊢ 0(<2)◂1(<4)◂8'(= a20◂ [ a18◂ [ ]] )
;; rsp=1 , %1206~0(<2)◂1(<4)◂8'(= a20◂ [ a18◂ [ ]] ) %1204~1'(= r ) %1203~0'(= r ) 
; ∎ 0(<2)◂1(<4)◂8'(= a20◂ [ a18◂ [ ]] )
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂1(<4)◂8'(= a20◂ [ a18◂ [ ]] ) ⊢ 2'(= a3◂ [ a23◂ [ a18◂ [ ]{| l |}]] )
; .mov_ptn 0(<2)◂1(<4)◂8'(= a20◂ [ a18◂ [ ]] ) ⊢ 2'(= a3◂ [ a23◂ [ a18◂ [ ]{| l |}]] )
	mov rax,QWORD [rsp-8+8*1]
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],1
	mov QWORD [rax+8],rdi
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,8
	jmp LB_1340
LB_1340:
	cmp BYTE [r8+6],0
	jnz LB_1313
	POP_GRM_SCC
	ret
LB_1313:
	RB_GRM
	jmp LB_1343
LB_1342:
	add r14,1 
LB_1343:
	cmp r14,r9
	jge LB_1344
	JZ_LINE_SPC BYTE [r13+8+r14], LB_1342
LB_1344
	lea rax,[r14+1]
	cmp rax,r9
	jg LB_1347
	jmp LB_1348
LB_1347:
	mov r8,unt_1
	jmp LB_1345
LB_1348:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],37
	jnz LB_1349
	jmp LB_1350
LB_1349:
	mov r8,unt_1
	jmp LB_1345
LB_1350:
	add r14,1
	jmp LB_1346
LB_1345:
	add rsp,0
	jmp LB_1341
LB_1346:
	jmp LB_1352
LB_1351:
	add r14,1 
LB_1352:
	cmp r14,r9
	jge LB_1353
	JZ_LINE_SPC BYTE [r13+8+r14], LB_1351
LB_1353
	call GRM_82
	cmp BYTE [r8+6],0
	jnz LB_1356
	jmp LB_1357
LB_1356:
	jmp LB_1354
LB_1357:
	sub rsp,8
; .mov_ptn2 2'(= {| l |} ) ⊢ 8'(= {| l |} )
; .mov_ptn 2'(= {| l |} ) ⊢ 8'(= {| l |} )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_1355
LB_1354:
	add rsp,0
	POP_GRM_FAIL
	ret
LB_1355:
	mov QWORD [rsp+8*1],r14
	mov r13,QWORD [rsp+16+8*1]
	mov r14,QWORD [rsp+8*1]
	jmp LB_1358
LB_1358
;; rsp=1 , %1209~1'(= r ) %1208~0'(= r ) %1207~8'(= {| l |} ) 
; #98 8'(= {| l |} ) ⊢ 3(<4)◂8'(= {| l |} )
;; rsp=1 , %1210~3(<4)◂8'(= {| l |} ) %1209~1'(= r ) %1208~0'(= r ) 
; #24 3(<4)◂8'(= {| l |} ) ⊢ 0(<2)◂3(<4)◂8'(= {| l |} )
;; rsp=1 , %1211~0(<2)◂3(<4)◂8'(= {| l |} ) %1209~1'(= r ) %1208~0'(= r ) 
; ∎ 0(<2)◂3(<4)◂8'(= {| l |} )
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂3(<4)◂8'(= {| l |} ) ⊢ 2'(= a3◂ [ a23◂ [ a18◂ [ ]{| l |}]] )
; .mov_ptn 0(<2)◂3(<4)◂8'(= {| l |} ) ⊢ 2'(= a3◂ [ a23◂ [ a18◂ [ ]{| l |}]] )
	mov rax,QWORD [rsp-8+8*1]
	mov BYTE [rax+6],3
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,8
	jmp LB_1359
LB_1359:
	cmp BYTE [r8+6],0
	jnz LB_1341
	POP_GRM_SCC
	ret
LB_1341:
	RB_GRM
	jmp LB_1362
LB_1361:
	add r14,1 
LB_1362:
	cmp r14,r9
	jge LB_1363
	JZ_LINE_SPC BYTE [r13+8+r14], LB_1361
LB_1363
	call GRM_82
	cmp BYTE [r8+6],0
	jnz LB_1366
	jmp LB_1367
LB_1366:
	jmp LB_1364
LB_1367:
	sub rsp,8
; .mov_ptn2 2'(= {| l |} ) ⊢ 8'(= {| l |} )
; .mov_ptn 2'(= {| l |} ) ⊢ 8'(= {| l |} )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_1365
LB_1364:
	add rsp,0
	jmp LB_1360
LB_1365:
	mov QWORD [rsp+8*1],r14
	mov r13,QWORD [rsp+16+8*1]
	mov r14,QWORD [rsp+8*1]
	jmp LB_1368
LB_1368
;; rsp=1 , %1214~1'(= r ) %1213~0'(= r ) %1212~8'(= {| l |} ) 
; #98 8'(= {| l |} ) ⊢ 3(<4)◂8'(= {| l |} )
;; rsp=1 , %1215~3(<4)◂8'(= {| l |} ) %1214~1'(= r ) %1213~0'(= r ) 
; #24 3(<4)◂8'(= {| l |} ) ⊢ 0(<2)◂3(<4)◂8'(= {| l |} )
;; rsp=1 , %1216~0(<2)◂3(<4)◂8'(= {| l |} ) %1214~1'(= r ) %1213~0'(= r ) 
; ∎ 0(<2)◂3(<4)◂8'(= {| l |} )
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂3(<4)◂8'(= {| l |} ) ⊢ 2'(= a3◂ [ a23◂ [ a18◂ [ ]{| l |}]] )
; .mov_ptn 0(<2)◂3(<4)◂8'(= {| l |} ) ⊢ 2'(= a3◂ [ a23◂ [ a18◂ [ ]{| l |}]] )
	mov rax,QWORD [rsp-8+8*1]
	mov BYTE [rax+6],3
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,8
	jmp LB_1369
LB_1369:
	cmp BYTE [r8+6],0
	jnz LB_1360
	POP_GRM_SCC
	ret
LB_1360:
	RB_GRM
	jmp LB_1372
LB_1371:
	add r14,1 
LB_1372:
	cmp r14,r9
	jge LB_1373
	JZ_LINE_SPC BYTE [r13+8+r14], LB_1371
LB_1373
	lea rax,[r14+1]
	cmp rax,r9
	jg LB_1376
	jmp LB_1377
LB_1376:
	mov r8,unt_1
	jmp LB_1374
LB_1377:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],95
	jnz LB_1378
	jmp LB_1379
LB_1378:
	mov r8,unt_1
	jmp LB_1374
LB_1379:
	add r14,1
	jmp LB_1375
LB_1374:
	add rsp,0
	jmp LB_1370
LB_1375:
	mov QWORD [rsp+8*0],r14
	mov r13,QWORD [rsp+16+8*0]
	mov r14,QWORD [rsp+8*0]
	jmp LB_1380
LB_1380
;; rsp=0 , %1218~1'(= r ) %1217~0'(= r ) 
; #25 { } ⊢ 1(<2)◂{ }
;; rsp=0 , %1219~1(<2)◂{ } %1218~1'(= r ) %1217~0'(= r ) 
; #99 1(<2)◂{ } ⊢ 2(<4)◂1(<2)◂{ }
;; rsp=0 , %1220~2(<4)◂1(<2)◂{ } %1218~1'(= r ) %1217~0'(= r ) 
; #24 2(<4)◂1(<2)◂{ } ⊢ 0(<2)◂2(<4)◂1(<2)◂{ }
;; rsp=0 , %1221~0(<2)◂2(<4)◂1(<2)◂{ } %1218~1'(= r ) %1217~0'(= r ) 
; ∎ 0(<2)◂2(<4)◂1(<2)◂{ }
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂2(<4)◂1(<2)◂{ } ⊢ 2'(= a3◂ [ a23◂ [ a18◂ [ ]{| l |}]] )
; .mov_ptn 0(<2)◂2(<4)◂1(<2)◂{ } ⊢ 2'(= a3◂ [ a23◂ [ a18◂ [ ]{| l |}]] )
	mov rax,unt 
	mov rax,unt_1
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],2
	mov QWORD [rax+8],rdi
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	jmp LB_1381
LB_1381:
	cmp BYTE [r8+6],0
	jnz LB_1370
	POP_GRM_SCC
	ret
LB_1370:
	POP_GRM_FAIL 
	ret
ETR_206:
	mov r9,0x0000_ffff_ffff_ffff
	and r9,[r13]
	call GRM_206
	ret
GRM_206:
	PUSH_GRM
	jmp LB_1384
LB_1383:
	add r14,1 
LB_1384:
	cmp r14,r9
	jge LB_1385
	JZ_LINE_SPC BYTE [r13+8+r14], LB_1383
LB_1385
	lea rax,[r14+1]
	cmp rax,r9
	jg LB_1388
	jmp LB_1389
LB_1388:
	mov r8,unt_1
	jmp LB_1386
LB_1389:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],123
	jnz LB_1390
	jmp LB_1391
LB_1390:
	mov r8,unt_1
	jmp LB_1386
LB_1391:
	add r14,1
	jmp LB_1387
LB_1386:
	add rsp,0
	jmp LB_1382
LB_1387:
	jmp LB_1393
LB_1392:
	add r14,1 
LB_1393:
	cmp r14,r9
	jge LB_1394
	JZ_LINE_SPC BYTE [r13+8+r14], LB_1392
LB_1394
	call GRM_207
	cmp BYTE [r8+6],0
	jnz LB_1397
	jmp LB_1398
LB_1397:
	jmp LB_1395
LB_1398:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a2◂ [ a17◂ [ a21◂ [ a18◂ [ ]{| l |}]]] ) ⊢ 8'(= a2◂ [ a17◂ [ a21◂ [ a18◂ [ ]{| l |}]]] )
; .mov_ptn 2'(= a2◂ [ a17◂ [ a21◂ [ a18◂ [ ]{| l |}]]] ) ⊢ 8'(= a2◂ [ a17◂ [ a21◂ [ a18◂ [ ]{| l |}]]] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_1396
LB_1395:
	add rsp,0
	jmp LB_1382
LB_1396:
	jmp LB_1400
LB_1399:
	add r14,1 
LB_1400:
	cmp r14,r9
	jge LB_1401
	JZ_LINE_SPC BYTE [r13+8+r14], LB_1399
LB_1401
	lea rax,[r14+1]
	cmp rax,r9
	jg LB_1404
	jmp LB_1405
LB_1404:
	mov r8,unt_1
	jmp LB_1402
LB_1405:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],125
	jnz LB_1406
	jmp LB_1407
LB_1406:
	mov r8,unt_1
	jmp LB_1402
LB_1407:
	add r14,1
	jmp LB_1403
LB_1402:
	add rsp,8
	jmp LB_1382
LB_1403:
	mov QWORD [rsp+8*1],r14
	mov r13,QWORD [rsp+16+8*1]
	mov r14,QWORD [rsp+8*1]
	jmp LB_1408
LB_1408
;; rsp=1 , %1224~1'(= r ) %1223~0'(= r ) %1222~8'(= a2◂ [ a17◂ [ a21◂ [ a18◂ [ ]{| l |}]]] ) 
; #84 8'(= a2◂ [ a17◂ [ a21◂ [ a18◂ [ ]{| l |}]]] ) ⊢ 0(<2)◂8'(= a2◂ [ a17◂ [ a21◂ [ a18◂ [ ]{| l |}]]] )
;; rsp=1 , %1225~0(<2)◂8'(= a2◂ [ a17◂ [ a21◂ [ a18◂ [ ]{| l |}]]] ) %1224~1'(= r ) %1223~0'(= r ) 
; #24 0(<2)◂8'(= a2◂ [ a17◂ [ a21◂ [ a18◂ [ ]{| l |}]]] ) ⊢ 0(<2)◂0(<2)◂8'(= a2◂ [ a17◂ [ a21◂ [ a18◂ [ ]{| l |}]]] )
;; rsp=1 , %1226~0(<2)◂0(<2)◂8'(= a2◂ [ a17◂ [ a21◂ [ a18◂ [ ]{| l |}]]] ) %1224~1'(= r ) %1223~0'(= r ) 
; ∎ 0(<2)◂0(<2)◂8'(= a2◂ [ a17◂ [ a21◂ [ a18◂ [ ]{| l |}]]] )
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂0(<2)◂8'(= a2◂ [ a17◂ [ a21◂ [ a18◂ [ ]{| l |}]]] ) ⊢ 2'(= a3◂ [ a17◂ [ a21◂ [ a18◂ [ ]{| l |}]]] )
; .mov_ptn 0(<2)◂0(<2)◂8'(= a2◂ [ a17◂ [ a21◂ [ a18◂ [ ]{| l |}]]] ) ⊢ 2'(= a3◂ [ a17◂ [ a21◂ [ a18◂ [ ]{| l |}]]] )
	mov rax,QWORD [rsp-8+8*1]
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,8
	jmp LB_1409
LB_1409:
	cmp BYTE [r8+6],0
	jnz LB_1382
	POP_GRM_SCC
	ret
LB_1382:
	RB_GRM
	jmp LB_1412
LB_1411:
	add r14,1 
LB_1412:
	cmp r14,r9
	jge LB_1413
	JZ_LINE_SPC BYTE [r13+8+r14], LB_1411
LB_1413
	call GRM_209
	cmp BYTE [r8+6],0
	jnz LB_1416
	jmp LB_1417
LB_1416:
	jmp LB_1414
LB_1417:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a21◂ [ a18◂ [ ]{| l |}] ) ⊢ 8'(= a21◂ [ a18◂ [ ]{| l |}] )
; .mov_ptn 2'(= a21◂ [ a18◂ [ ]{| l |}] ) ⊢ 8'(= a21◂ [ a18◂ [ ]{| l |}] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_1415
LB_1414:
	add rsp,0
	jmp LB_1410
LB_1415:
	mov QWORD [rsp+8*1],r14
	mov r13,QWORD [rsp+16+8*1]
	mov r14,QWORD [rsp+8*1]
	jmp LB_1418
LB_1418
;; rsp=1 , %1229~1'(= r ) %1228~0'(= r ) %1227~8'(= a21◂ [ a18◂ [ ]{| l |}] ) 
; #83 8'(= a21◂ [ a18◂ [ ]{| l |}] ) ⊢ 1(<2)◂8'(= a21◂ [ a18◂ [ ]{| l |}] )
;; rsp=1 , %1230~1(<2)◂8'(= a21◂ [ a18◂ [ ]{| l |}] ) %1229~1'(= r ) %1228~0'(= r ) 
; #24 1(<2)◂8'(= a21◂ [ a18◂ [ ]{| l |}] ) ⊢ 0(<2)◂1(<2)◂8'(= a21◂ [ a18◂ [ ]{| l |}] )
;; rsp=1 , %1231~0(<2)◂1(<2)◂8'(= a21◂ [ a18◂ [ ]{| l |}] ) %1229~1'(= r ) %1228~0'(= r ) 
; ∎ 0(<2)◂1(<2)◂8'(= a21◂ [ a18◂ [ ]{| l |}] )
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂1(<2)◂8'(= a21◂ [ a18◂ [ ]{| l |}] ) ⊢ 2'(= a3◂ [ a17◂ [ a21◂ [ a18◂ [ ]{| l |}]]] )
; .mov_ptn 0(<2)◂1(<2)◂8'(= a21◂ [ a18◂ [ ]{| l |}] ) ⊢ 2'(= a3◂ [ a17◂ [ a21◂ [ a18◂ [ ]{| l |}]]] )
	mov rax,QWORD [rsp-8+8*1]
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],1
	mov QWORD [rax+8],rdi
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,8
	jmp LB_1419
LB_1419:
	cmp BYTE [r8+6],0
	jnz LB_1410
	POP_GRM_SCC
	ret
LB_1410:
	POP_GRM_FAIL 
	ret
ETR_207:
	mov r9,0x0000_ffff_ffff_ffff
	and r9,[r13]
	call GRM_207
	ret
GRM_207:
	PUSH_GRM
	jmp LB_1422
LB_1421:
	add r14,1 
LB_1422:
	cmp r14,r9
	jge LB_1423
	JZ_LINE_SPC BYTE [r13+8+r14], LB_1421
LB_1423
	call GRM_206
	cmp BYTE [r8+6],0
	jnz LB_1426
	jmp LB_1427
LB_1426:
	jmp LB_1424
LB_1427:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a17◂ [ a21◂ [ a18◂ [ ]{| l |}]] ) ⊢ 8'(= a17◂ [ a21◂ [ a18◂ [ ]{| l |}]] )
; .mov_ptn 2'(= a17◂ [ a21◂ [ a18◂ [ ]{| l |}]] ) ⊢ 8'(= a17◂ [ a21◂ [ a18◂ [ ]{| l |}]] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_1425
LB_1424:
	add rsp,0
	jmp LB_1420
LB_1425:
	jmp LB_1429
LB_1428:
	add r14,1 
LB_1429:
	cmp r14,r9
	jge LB_1430
	JZ_LINE_SPC BYTE [r13+8+r14], LB_1428
LB_1430
	call GRM_207
	cmp BYTE [r8+6],0
	jnz LB_1433
	jmp LB_1434
LB_1433:
	jmp LB_1431
LB_1434:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a2◂ [ a17◂ [ a21◂ [ a18◂ [ ]{| l |}]]] ) ⊢ 9'(= a2◂ [ a17◂ [ a21◂ [ a18◂ [ ]{| l |}]]] )
; .mov_ptn 2'(= a2◂ [ a17◂ [ a21◂ [ a18◂ [ ]{| l |}]]] ) ⊢ 9'(= a2◂ [ a17◂ [ a21◂ [ a18◂ [ ]{| l |}]]] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_1432
LB_1431:
	add rsp,8
	jmp LB_1420
LB_1432:
	mov QWORD [rsp+8*2],r14
	mov r13,QWORD [rsp+16+8*2]
	mov r14,QWORD [rsp+8*2]
	jmp LB_1435
LB_1435
;; rsp=2 , %1235~1'(= r ) %1234~0'(= r ) %1233~9'(= a2◂ [ a17◂ [ a21◂ [ a18◂ [ ]{| l |}]]] ) %1232~8'(= a17◂ [ a21◂ [ a18◂ [ ]{| l |}]] ) 
; #23 { 8'(= a17◂ [ a21◂ [ a18◂ [ ]{| l |}]] ) 9'(= a2◂ [ a17◂ [ a21◂ [ a18◂ [ ]{| l |}]]] ) } ⊢ 0(<2)◂{ 8'(= a17◂ [ a21◂ [ a18◂ [ ]{| l |}]] ) 9'(= a2◂ [ a17◂ [ a21◂ [ a18◂ [ ]{| l |}]]] ) }
;; rsp=2 , %1236~0(<2)◂{ 8'(= a17◂ [ a21◂ [ a18◂ [ ]{| l |}]] ) 9'(= a2◂ [ a17◂ [ a21◂ [ a18◂ [ ]{| l |}]]] ) } %1235~1'(= r ) %1234~0'(= r ) 
; #24 0(<2)◂{ 8'(= a17◂ [ a21◂ [ a18◂ [ ]{| l |}]] ) 9'(= a2◂ [ a17◂ [ a21◂ [ a18◂ [ ]{| l |}]]] ) } ⊢ 0(<2)◂0(<2)◂{ 8'(= a17◂ [ a21◂ [ a18◂ [ ]{| l |}]] ) 9'(= a2◂ [ a17◂ [ a21◂ [ a18◂ [ ]{| l |}]]] ) }
;; rsp=2 , %1237~0(<2)◂0(<2)◂{ 8'(= a17◂ [ a21◂ [ a18◂ [ ]{| l |}]] ) 9'(= a2◂ [ a17◂ [ a21◂ [ a18◂ [ ]{| l |}]]] ) } %1235~1'(= r ) %1234~0'(= r ) 
; ∎ 0(<2)◂0(<2)◂{ 8'(= a17◂ [ a21◂ [ a18◂ [ ]{| l |}]] ) 9'(= a2◂ [ a17◂ [ a21◂ [ a18◂ [ ]{| l |}]]] ) }
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂0(<2)◂{ 8'(= a17◂ [ a21◂ [ a18◂ [ ]{| l |}]] ) 9'(= a2◂ [ a17◂ [ a21◂ [ a18◂ [ ]{| l |}]]] ) } ⊢ 2'(= a3◂ [ a2◂ [ a17◂ [ a21◂ [ a18◂ [ ]{| l |}]]]] )
; .mov_ptn 0(<2)◂0(<2)◂{ 8'(= a17◂ [ a21◂ [ a18◂ [ ]{| l |}]] ) 9'(= a2◂ [ a17◂ [ a21◂ [ a18◂ [ ]{| l |}]]] ) } ⊢ 2'(= a3◂ [ a2◂ [ a17◂ [ a21◂ [ a18◂ [ ]{| l |}]]]] )
	ALC_RCD 2, rax
	mov r13,rax
	mov rax,QWORD [rsp-8+8*2]
	mov QWORD [r13+8+8*0],rax
	mov rax,QWORD [rsp-8+8*1]
	mov QWORD [r13+8+8*1],rax
	mov rax,r13
	mov BYTE [rax+6],0
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,16
	jmp LB_1436
LB_1436:
	cmp BYTE [r8+6],0
	jnz LB_1420
	POP_GRM_SCC
	ret
LB_1420:
	RB_GRM
	mov QWORD [rsp+8*0],r14
	mov r13,QWORD [rsp+16+8*0]
	mov r14,QWORD [rsp+8*0]
	jmp LB_1438
LB_1438
;; rsp=0 , %1239~1'(= r ) %1238~0'(= r ) 
; #22 { } ⊢ 1(<2)◂{ }
;; rsp=0 , %1240~1(<2)◂{ } %1239~1'(= r ) %1238~0'(= r ) 
; #24 1(<2)◂{ } ⊢ 0(<2)◂1(<2)◂{ }
;; rsp=0 , %1241~0(<2)◂1(<2)◂{ } %1239~1'(= r ) %1238~0'(= r ) 
; ∎ 0(<2)◂1(<2)◂{ }
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂1(<2)◂{ } ⊢ 2'(= a3◂ [ a2◂ [ a17◂ [ a21◂ [ a18◂ [ ]{| l |}]]]] )
; .mov_ptn 0(<2)◂1(<2)◂{ } ⊢ 2'(= a3◂ [ a2◂ [ a17◂ [ a21◂ [ a18◂ [ ]{| l |}]]]] )
	mov rax,unt 
	mov rax,unt_1
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	jmp LB_1439
LB_1439:
	cmp BYTE [r8+6],0
	jnz LB_1437
	POP_GRM_SCC
	ret
LB_1437:
	POP_GRM_FAIL 
	ret
ETR_208:
	mov r9,0x0000_ffff_ffff_ffff
	and r9,[r13]
	call GRM_208
	ret
GRM_208:
	PUSH_GRM
	jmp LB_1442
LB_1441:
	add r14,1 
LB_1442:
	cmp r14,r9
	jge LB_1443
	JZ_LINE_SPC BYTE [r13+8+r14], LB_1441
LB_1443
	lea rax,[r14+1]
	cmp rax,r9
	jg LB_1446
	jmp LB_1447
LB_1446:
	mov r8,unt_1
	jmp LB_1444
LB_1447:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],44
	jnz LB_1448
	jmp LB_1449
LB_1448:
	mov r8,unt_1
	jmp LB_1444
LB_1449:
	add r14,1
	jmp LB_1445
LB_1444:
	add rsp,0
	jmp LB_1440
LB_1445:
	jmp LB_1451
LB_1450:
	add r14,1 
LB_1451:
	cmp r14,r9
	jge LB_1452
	JZ_LINE_SPC BYTE [r13+8+r14], LB_1450
LB_1452
	call GRM_209
	cmp BYTE [r8+6],0
	jnz LB_1455
	jmp LB_1456
LB_1455:
	jmp LB_1453
LB_1456:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a21◂ [ a18◂ [ ]{| l |}] ) ⊢ 8'(= a21◂ [ a18◂ [ ]{| l |}] )
; .mov_ptn 2'(= a21◂ [ a18◂ [ ]{| l |}] ) ⊢ 8'(= a21◂ [ a18◂ [ ]{| l |}] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_1454
LB_1453:
	add rsp,0
	POP_GRM_FAIL
	ret
LB_1454:
	jmp LB_1458
LB_1457:
	add r14,1 
LB_1458:
	cmp r14,r9
	jge LB_1459
	JZ_LINE_SPC BYTE [r13+8+r14], LB_1457
LB_1459
	call GRM_208
	cmp BYTE [r8+6],0
	jnz LB_1462
	jmp LB_1463
LB_1462:
	jmp LB_1460
LB_1463:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a2◂ [ a21◂ [ a18◂ [ ]{| l |}]] ) ⊢ 9'(= a2◂ [ a21◂ [ a18◂ [ ]{| l |}]] )
; .mov_ptn 2'(= a2◂ [ a21◂ [ a18◂ [ ]{| l |}]] ) ⊢ 9'(= a2◂ [ a21◂ [ a18◂ [ ]{| l |}]] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_1461
LB_1460:
	add rsp,8
	POP_GRM_FAIL
	ret
LB_1461:
	mov QWORD [rsp+8*2],r14
	mov r13,QWORD [rsp+16+8*2]
	mov r14,QWORD [rsp+8*2]
	jmp LB_1464
LB_1464
;; rsp=2 , %1245~1'(= r ) %1244~0'(= r ) %1243~9'(= a2◂ [ a21◂ [ a18◂ [ ]{| l |}]] ) %1242~8'(= a21◂ [ a18◂ [ ]{| l |}] ) 
; #23 { 8'(= a21◂ [ a18◂ [ ]{| l |}] ) 9'(= a2◂ [ a21◂ [ a18◂ [ ]{| l |}]] ) } ⊢ 0(<2)◂{ 8'(= a21◂ [ a18◂ [ ]{| l |}] ) 9'(= a2◂ [ a21◂ [ a18◂ [ ]{| l |}]] ) }
;; rsp=2 , %1246~0(<2)◂{ 8'(= a21◂ [ a18◂ [ ]{| l |}] ) 9'(= a2◂ [ a21◂ [ a18◂ [ ]{| l |}]] ) } %1245~1'(= r ) %1244~0'(= r ) 
; #24 0(<2)◂{ 8'(= a21◂ [ a18◂ [ ]{| l |}] ) 9'(= a2◂ [ a21◂ [ a18◂ [ ]{| l |}]] ) } ⊢ 0(<2)◂0(<2)◂{ 8'(= a21◂ [ a18◂ [ ]{| l |}] ) 9'(= a2◂ [ a21◂ [ a18◂ [ ]{| l |}]] ) }
;; rsp=2 , %1247~0(<2)◂0(<2)◂{ 8'(= a21◂ [ a18◂ [ ]{| l |}] ) 9'(= a2◂ [ a21◂ [ a18◂ [ ]{| l |}]] ) } %1245~1'(= r ) %1244~0'(= r ) 
; ∎ 0(<2)◂0(<2)◂{ 8'(= a21◂ [ a18◂ [ ]{| l |}] ) 9'(= a2◂ [ a21◂ [ a18◂ [ ]{| l |}]] ) }
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂0(<2)◂{ 8'(= a21◂ [ a18◂ [ ]{| l |}] ) 9'(= a2◂ [ a21◂ [ a18◂ [ ]{| l |}]] ) } ⊢ 2'(= a3◂ [ a2◂ [ a21◂ [ a18◂ [ ]{| l |}]]] )
; .mov_ptn 0(<2)◂0(<2)◂{ 8'(= a21◂ [ a18◂ [ ]{| l |}] ) 9'(= a2◂ [ a21◂ [ a18◂ [ ]{| l |}]] ) } ⊢ 2'(= a3◂ [ a2◂ [ a21◂ [ a18◂ [ ]{| l |}]]] )
	ALC_RCD 2, rax
	mov r13,rax
	mov rax,QWORD [rsp-8+8*2]
	mov QWORD [r13+8+8*0],rax
	mov rax,QWORD [rsp-8+8*1]
	mov QWORD [r13+8+8*1],rax
	mov rax,r13
	mov BYTE [rax+6],0
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,16
	jmp LB_1465
LB_1465:
	cmp BYTE [r8+6],0
	jnz LB_1440
	POP_GRM_SCC
	ret
LB_1440:
	RB_GRM
	mov QWORD [rsp+8*0],r14
	mov r13,QWORD [rsp+16+8*0]
	mov r14,QWORD [rsp+8*0]
	jmp LB_1467
LB_1467
;; rsp=0 , %1249~1'(= r ) %1248~0'(= r ) 
; #22 { } ⊢ 1(<2)◂{ }
;; rsp=0 , %1250~1(<2)◂{ } %1249~1'(= r ) %1248~0'(= r ) 
; #24 1(<2)◂{ } ⊢ 0(<2)◂1(<2)◂{ }
;; rsp=0 , %1251~0(<2)◂1(<2)◂{ } %1249~1'(= r ) %1248~0'(= r ) 
; ∎ 0(<2)◂1(<2)◂{ }
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂1(<2)◂{ } ⊢ 2'(= a3◂ [ a2◂ [ a21◂ [ a18◂ [ ]{| l |}]]] )
; .mov_ptn 0(<2)◂1(<2)◂{ } ⊢ 2'(= a3◂ [ a2◂ [ a21◂ [ a18◂ [ ]{| l |}]]] )
	mov rax,unt 
	mov rax,unt_1
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	jmp LB_1468
LB_1468:
	cmp BYTE [r8+6],0
	jnz LB_1466
	POP_GRM_SCC
	ret
LB_1466:
	POP_GRM_FAIL 
	ret
ETR_209:
	mov r9,0x0000_ffff_ffff_ffff
	and r9,[r13]
	call GRM_209
	ret
GRM_209:
	PUSH_GRM
	jmp LB_1471
LB_1470:
	add r14,1 
LB_1471:
	cmp r14,r9
	jge LB_1472
	JZ_LINE_SPC BYTE [r13+8+r14], LB_1470
LB_1472
	lea rax,[r14+2]
	cmp rax,r9
	jg LB_1475
	jmp LB_1476
LB_1475:
	mov r8,unt_1
	jmp LB_1473
LB_1476:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],37
	jnz LB_1477
	cmp BYTE [rdi+1],91
	jnz LB_1477
	jmp LB_1478
LB_1477:
	mov r8,unt_1
	jmp LB_1473
LB_1478:
	add r14,2
	jmp LB_1474
LB_1473:
	add rsp,0
	jmp LB_1469
LB_1474:
	jmp LB_1480
LB_1479:
	add r14,1 
LB_1480:
	cmp r14,r9
	jge LB_1481
	JZ_LINE_SPC BYTE [r13+8+r14], LB_1479
LB_1481
	call GRM_195
	cmp BYTE [r8+6],0
	jnz LB_1484
	jmp LB_1485
LB_1484:
	jmp LB_1482
LB_1485:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a20◂ [ a18◂ [ ]] ) ⊢ 8'(= a20◂ [ a18◂ [ ]] )
; .mov_ptn 2'(= a20◂ [ a18◂ [ ]] ) ⊢ 8'(= a20◂ [ a18◂ [ ]] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_1483
LB_1482:
	add rsp,0
	jmp LB_1469
LB_1483:
	jmp LB_1487
LB_1486:
	add r14,1 
LB_1487:
	cmp r14,r9
	jge LB_1488
	JZ_LINE_SPC BYTE [r13+8+r14], LB_1486
LB_1488
	lea rax,[r14+1]
	cmp rax,r9
	jg LB_1491
	jmp LB_1492
LB_1491:
	mov r8,unt_1
	jmp LB_1489
LB_1492:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],93
	jnz LB_1493
	jmp LB_1494
LB_1493:
	mov r8,unt_1
	jmp LB_1489
LB_1494:
	add r14,1
	jmp LB_1490
LB_1489:
	add rsp,8
	jmp LB_1469
LB_1490:
	mov QWORD [rsp+8*1],r14
	mov r13,QWORD [rsp+16+8*1]
	mov r14,QWORD [rsp+8*1]
	jmp LB_1495
LB_1495
;; rsp=1 , %1254~1'(= r ) %1253~0'(= r ) %1252~8'(= a20◂ [ a18◂ [ ]] ) 
; #97 8'(= a20◂ [ a18◂ [ ]] ) ⊢ 0(<2)◂8'(= a20◂ [ a18◂ [ ]] )
;; rsp=1 , %1255~0(<2)◂8'(= a20◂ [ a18◂ [ ]] ) %1254~1'(= r ) %1253~0'(= r ) 
; #24 0(<2)◂8'(= a20◂ [ a18◂ [ ]] ) ⊢ 0(<2)◂0(<2)◂8'(= a20◂ [ a18◂ [ ]] )
;; rsp=1 , %1256~0(<2)◂0(<2)◂8'(= a20◂ [ a18◂ [ ]] ) %1254~1'(= r ) %1253~0'(= r ) 
; ∎ 0(<2)◂0(<2)◂8'(= a20◂ [ a18◂ [ ]] )
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂0(<2)◂8'(= a20◂ [ a18◂ [ ]] ) ⊢ 2'(= a3◂ [ a21◂ [ a18◂ [ ]{| l |}]] )
; .mov_ptn 0(<2)◂0(<2)◂8'(= a20◂ [ a18◂ [ ]] ) ⊢ 2'(= a3◂ [ a21◂ [ a18◂ [ ]{| l |}]] )
	mov rax,QWORD [rsp-8+8*1]
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,8
	jmp LB_1496
LB_1496:
	cmp BYTE [r8+6],0
	jnz LB_1469
	POP_GRM_SCC
	ret
LB_1469:
	RB_GRM
	lea rax,[r14+1]
	cmp rax,r9
	jg LB_1500
	jmp LB_1501
LB_1500:
	mov r8,unt_1
	jmp LB_1498
LB_1501:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],37
	jnz LB_1502
	jmp LB_1503
LB_1502:
	mov r8,unt_1
	jmp LB_1498
LB_1503:
	add r14,1
	jmp LB_1499
LB_1498:
	add rsp,0
	jmp LB_1497
LB_1499:
	call GRM_82
	cmp BYTE [r8+6],0
	jnz LB_1506
	jmp LB_1507
LB_1506:
	jmp LB_1504
LB_1507:
	sub rsp,8
; .mov_ptn2 2'(= {| l |} ) ⊢ 8'(= {| l |} )
; .mov_ptn 2'(= {| l |} ) ⊢ 8'(= {| l |} )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_1505
LB_1504:
	add rsp,0
	POP_GRM_FAIL
	ret
LB_1505:
	mov QWORD [rsp+8*1],r14
	mov r13,QWORD [rsp+16+8*1]
	mov r14,QWORD [rsp+8*1]
	jmp LB_1508
LB_1508
;; rsp=1 , %1259~1'(= r ) %1258~0'(= r ) %1257~8'(= {| l |} ) 
; #96 8'(= {| l |} ) ⊢ 1(<2)◂8'(= {| l |} )
;; rsp=1 , %1260~1(<2)◂8'(= {| l |} ) %1259~1'(= r ) %1258~0'(= r ) 
; #24 1(<2)◂8'(= {| l |} ) ⊢ 0(<2)◂1(<2)◂8'(= {| l |} )
;; rsp=1 , %1261~0(<2)◂1(<2)◂8'(= {| l |} ) %1259~1'(= r ) %1258~0'(= r ) 
; ∎ 0(<2)◂1(<2)◂8'(= {| l |} )
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂1(<2)◂8'(= {| l |} ) ⊢ 2'(= a3◂ [ a21◂ [ a18◂ [ ]{| l |}]] )
; .mov_ptn 0(<2)◂1(<2)◂8'(= {| l |} ) ⊢ 2'(= a3◂ [ a21◂ [ a18◂ [ ]{| l |}]] )
	mov rax,QWORD [rsp-8+8*1]
	mov BYTE [rax+6],1
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,8
	jmp LB_1509
LB_1509:
	cmp BYTE [r8+6],0
	jnz LB_1497
	POP_GRM_SCC
	ret
LB_1497:
	RB_GRM
	jmp LB_1512
LB_1511:
	add r14,1 
LB_1512:
	cmp r14,r9
	jge LB_1513
	JZ_LINE_SPC BYTE [r13+8+r14], LB_1511
LB_1513
	call GRM_82
	cmp BYTE [r8+6],0
	jnz LB_1516
	jmp LB_1517
LB_1516:
	jmp LB_1514
LB_1517:
	sub rsp,8
; .mov_ptn2 2'(= {| l |} ) ⊢ 8'(= {| l |} )
; .mov_ptn 2'(= {| l |} ) ⊢ 8'(= {| l |} )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_1515
LB_1514:
	add rsp,0
	jmp LB_1510
LB_1515:
	mov QWORD [rsp+8*1],r14
	mov r13,QWORD [rsp+16+8*1]
	mov r14,QWORD [rsp+8*1]
	jmp LB_1518
LB_1518
;; rsp=1 , %1264~1'(= r ) %1263~0'(= r ) %1262~8'(= {| l |} ) 
; #96 8'(= {| l |} ) ⊢ 1(<2)◂8'(= {| l |} )
;; rsp=1 , %1265~1(<2)◂8'(= {| l |} ) %1264~1'(= r ) %1263~0'(= r ) 
; #24 1(<2)◂8'(= {| l |} ) ⊢ 0(<2)◂1(<2)◂8'(= {| l |} )
;; rsp=1 , %1266~0(<2)◂1(<2)◂8'(= {| l |} ) %1264~1'(= r ) %1263~0'(= r ) 
; ∎ 0(<2)◂1(<2)◂8'(= {| l |} )
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂1(<2)◂8'(= {| l |} ) ⊢ 2'(= a3◂ [ a21◂ [ a18◂ [ ]{| l |}]] )
; .mov_ptn 0(<2)◂1(<2)◂8'(= {| l |} ) ⊢ 2'(= a3◂ [ a21◂ [ a18◂ [ ]{| l |}]] )
	mov rax,QWORD [rsp-8+8*1]
	mov BYTE [rax+6],1
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,8
	jmp LB_1519
LB_1519:
	cmp BYTE [r8+6],0
	jnz LB_1510
	POP_GRM_SCC
	ret
LB_1510:
	POP_GRM_FAIL 
	ret
ETR_210:
	mov r9,0x0000_ffff_ffff_ffff
	and r9,[r13]
	call GRM_210
	ret
GRM_210:
	PUSH_GRM
	jmp LB_1522
LB_1521:
	add r14,1 
LB_1522:
	cmp r14,r9
	jge LB_1523
	JZ_LINE_SPC BYTE [r13+8+r14], LB_1521
LB_1523
	lea rax,[r14+1]
	cmp rax,r9
	jg LB_1526
	jmp LB_1527
LB_1526:
	mov r8,unt_1
	jmp LB_1524
LB_1527:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],123
	jnz LB_1528
	jmp LB_1529
LB_1528:
	mov r8,unt_1
	jmp LB_1524
LB_1529:
	add r14,1
	jmp LB_1525
LB_1524:
	add rsp,0
	jmp LB_1520
LB_1525:
	jmp LB_1531
LB_1530:
	add r14,1 
LB_1531:
	cmp r14,r9
	jge LB_1532
	JZ_LINE_SPC BYTE [r13+8+r14], LB_1530
LB_1532
	call GRM_211
	cmp BYTE [r8+6],0
	jnz LB_1535
	jmp LB_1536
LB_1535:
	jmp LB_1533
LB_1536:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a2◂ [ a17◂ [ a22◂ [ {| l |}]]] ) ⊢ 8'(= a2◂ [ a17◂ [ a22◂ [ {| l |}]]] )
; .mov_ptn 2'(= a2◂ [ a17◂ [ a22◂ [ {| l |}]]] ) ⊢ 8'(= a2◂ [ a17◂ [ a22◂ [ {| l |}]]] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_1534
LB_1533:
	add rsp,0
	jmp LB_1520
LB_1534:
	jmp LB_1538
LB_1537:
	add r14,1 
LB_1538:
	cmp r14,r9
	jge LB_1539
	JZ_LINE_SPC BYTE [r13+8+r14], LB_1537
LB_1539
	lea rax,[r14+1]
	cmp rax,r9
	jg LB_1542
	jmp LB_1543
LB_1542:
	mov r8,unt_1
	jmp LB_1540
LB_1543:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],125
	jnz LB_1544
	jmp LB_1545
LB_1544:
	mov r8,unt_1
	jmp LB_1540
LB_1545:
	add r14,1
	jmp LB_1541
LB_1540:
	add rsp,8
	jmp LB_1520
LB_1541:
	mov QWORD [rsp+8*1],r14
	mov r13,QWORD [rsp+16+8*1]
	mov r14,QWORD [rsp+8*1]
	jmp LB_1546
LB_1546
;; rsp=1 , %1269~1'(= r ) %1268~0'(= r ) %1267~8'(= a2◂ [ a17◂ [ a22◂ [ {| l |}]]] ) 
; #84 8'(= a2◂ [ a17◂ [ a22◂ [ {| l |}]]] ) ⊢ 0(<2)◂8'(= a2◂ [ a17◂ [ a22◂ [ {| l |}]]] )
;; rsp=1 , %1270~0(<2)◂8'(= a2◂ [ a17◂ [ a22◂ [ {| l |}]]] ) %1269~1'(= r ) %1268~0'(= r ) 
; #24 0(<2)◂8'(= a2◂ [ a17◂ [ a22◂ [ {| l |}]]] ) ⊢ 0(<2)◂0(<2)◂8'(= a2◂ [ a17◂ [ a22◂ [ {| l |}]]] )
;; rsp=1 , %1271~0(<2)◂0(<2)◂8'(= a2◂ [ a17◂ [ a22◂ [ {| l |}]]] ) %1269~1'(= r ) %1268~0'(= r ) 
; ∎ 0(<2)◂0(<2)◂8'(= a2◂ [ a17◂ [ a22◂ [ {| l |}]]] )
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂0(<2)◂8'(= a2◂ [ a17◂ [ a22◂ [ {| l |}]]] ) ⊢ 2'(= a3◂ [ a17◂ [ a22◂ [ {| l |}]]] )
; .mov_ptn 0(<2)◂0(<2)◂8'(= a2◂ [ a17◂ [ a22◂ [ {| l |}]]] ) ⊢ 2'(= a3◂ [ a17◂ [ a22◂ [ {| l |}]]] )
	mov rax,QWORD [rsp-8+8*1]
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,8
	jmp LB_1547
LB_1547:
	cmp BYTE [r8+6],0
	jnz LB_1520
	POP_GRM_SCC
	ret
LB_1520:
	RB_GRM
	jmp LB_1550
LB_1549:
	add r14,1 
LB_1550:
	cmp r14,r9
	jge LB_1551
	JZ_LINE_SPC BYTE [r13+8+r14], LB_1549
LB_1551
	call GRM_214
	cmp BYTE [r8+6],0
	jnz LB_1554
	jmp LB_1555
LB_1554:
	jmp LB_1552
LB_1555:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a22◂ [ {| l |}] ) ⊢ 8'(= a22◂ [ {| l |}] )
; .mov_ptn 2'(= a22◂ [ {| l |}] ) ⊢ 8'(= a22◂ [ {| l |}] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_1553
LB_1552:
	add rsp,0
	jmp LB_1548
LB_1553:
	mov QWORD [rsp+8*1],r14
	mov r13,QWORD [rsp+16+8*1]
	mov r14,QWORD [rsp+8*1]
	jmp LB_1556
LB_1556
;; rsp=1 , %1274~1'(= r ) %1273~0'(= r ) %1272~8'(= a22◂ [ {| l |}] ) 
; #83 8'(= a22◂ [ {| l |}] ) ⊢ 1(<2)◂8'(= a22◂ [ {| l |}] )
;; rsp=1 , %1275~1(<2)◂8'(= a22◂ [ {| l |}] ) %1274~1'(= r ) %1273~0'(= r ) 
; #24 1(<2)◂8'(= a22◂ [ {| l |}] ) ⊢ 0(<2)◂1(<2)◂8'(= a22◂ [ {| l |}] )
;; rsp=1 , %1276~0(<2)◂1(<2)◂8'(= a22◂ [ {| l |}] ) %1274~1'(= r ) %1273~0'(= r ) 
; ∎ 0(<2)◂1(<2)◂8'(= a22◂ [ {| l |}] )
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂1(<2)◂8'(= a22◂ [ {| l |}] ) ⊢ 2'(= a3◂ [ a17◂ [ a22◂ [ {| l |}]]] )
; .mov_ptn 0(<2)◂1(<2)◂8'(= a22◂ [ {| l |}] ) ⊢ 2'(= a3◂ [ a17◂ [ a22◂ [ {| l |}]]] )
	mov rax,QWORD [rsp-8+8*1]
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],1
	mov QWORD [rax+8],rdi
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,8
	jmp LB_1557
LB_1557:
	cmp BYTE [r8+6],0
	jnz LB_1548
	POP_GRM_SCC
	ret
LB_1548:
	POP_GRM_FAIL 
	ret
ETR_211:
	mov r9,0x0000_ffff_ffff_ffff
	and r9,[r13]
	call GRM_211
	ret
GRM_211:
	PUSH_GRM
	jmp LB_1560
LB_1559:
	add r14,1 
LB_1560:
	cmp r14,r9
	jge LB_1561
	JZ_LINE_SPC BYTE [r13+8+r14], LB_1559
LB_1561
	call GRM_210
	cmp BYTE [r8+6],0
	jnz LB_1564
	jmp LB_1565
LB_1564:
	jmp LB_1562
LB_1565:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a17◂ [ a22◂ [ {| l |}]] ) ⊢ 8'(= a17◂ [ a22◂ [ {| l |}]] )
; .mov_ptn 2'(= a17◂ [ a22◂ [ {| l |}]] ) ⊢ 8'(= a17◂ [ a22◂ [ {| l |}]] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_1563
LB_1562:
	add rsp,0
	jmp LB_1558
LB_1563:
	jmp LB_1567
LB_1566:
	add r14,1 
LB_1567:
	cmp r14,r9
	jge LB_1568
	JZ_LINE_SPC BYTE [r13+8+r14], LB_1566
LB_1568
	call GRM_211
	cmp BYTE [r8+6],0
	jnz LB_1571
	jmp LB_1572
LB_1571:
	jmp LB_1569
LB_1572:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a2◂ [ a17◂ [ a22◂ [ {| l |}]]] ) ⊢ 9'(= a2◂ [ a17◂ [ a22◂ [ {| l |}]]] )
; .mov_ptn 2'(= a2◂ [ a17◂ [ a22◂ [ {| l |}]]] ) ⊢ 9'(= a2◂ [ a17◂ [ a22◂ [ {| l |}]]] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_1570
LB_1569:
	add rsp,8
	jmp LB_1558
LB_1570:
	mov QWORD [rsp+8*2],r14
	mov r13,QWORD [rsp+16+8*2]
	mov r14,QWORD [rsp+8*2]
	jmp LB_1573
LB_1573
;; rsp=2 , %1280~1'(= r ) %1279~0'(= r ) %1278~9'(= a2◂ [ a17◂ [ a22◂ [ {| l |}]]] ) %1277~8'(= a17◂ [ a22◂ [ {| l |}]] ) 
; #23 { 8'(= a17◂ [ a22◂ [ {| l |}]] ) 9'(= a2◂ [ a17◂ [ a22◂ [ {| l |}]]] ) } ⊢ 0(<2)◂{ 8'(= a17◂ [ a22◂ [ {| l |}]] ) 9'(= a2◂ [ a17◂ [ a22◂ [ {| l |}]]] ) }
;; rsp=2 , %1281~0(<2)◂{ 8'(= a17◂ [ a22◂ [ {| l |}]] ) 9'(= a2◂ [ a17◂ [ a22◂ [ {| l |}]]] ) } %1280~1'(= r ) %1279~0'(= r ) 
; #24 0(<2)◂{ 8'(= a17◂ [ a22◂ [ {| l |}]] ) 9'(= a2◂ [ a17◂ [ a22◂ [ {| l |}]]] ) } ⊢ 0(<2)◂0(<2)◂{ 8'(= a17◂ [ a22◂ [ {| l |}]] ) 9'(= a2◂ [ a17◂ [ a22◂ [ {| l |}]]] ) }
;; rsp=2 , %1282~0(<2)◂0(<2)◂{ 8'(= a17◂ [ a22◂ [ {| l |}]] ) 9'(= a2◂ [ a17◂ [ a22◂ [ {| l |}]]] ) } %1280~1'(= r ) %1279~0'(= r ) 
; ∎ 0(<2)◂0(<2)◂{ 8'(= a17◂ [ a22◂ [ {| l |}]] ) 9'(= a2◂ [ a17◂ [ a22◂ [ {| l |}]]] ) }
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂0(<2)◂{ 8'(= a17◂ [ a22◂ [ {| l |}]] ) 9'(= a2◂ [ a17◂ [ a22◂ [ {| l |}]]] ) } ⊢ 2'(= a3◂ [ a2◂ [ a17◂ [ a22◂ [ {| l |}]]]] )
; .mov_ptn 0(<2)◂0(<2)◂{ 8'(= a17◂ [ a22◂ [ {| l |}]] ) 9'(= a2◂ [ a17◂ [ a22◂ [ {| l |}]]] ) } ⊢ 2'(= a3◂ [ a2◂ [ a17◂ [ a22◂ [ {| l |}]]]] )
	ALC_RCD 2, rax
	mov r13,rax
	mov rax,QWORD [rsp-8+8*2]
	mov QWORD [r13+8+8*0],rax
	mov rax,QWORD [rsp-8+8*1]
	mov QWORD [r13+8+8*1],rax
	mov rax,r13
	mov BYTE [rax+6],0
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,16
	jmp LB_1574
LB_1574:
	cmp BYTE [r8+6],0
	jnz LB_1558
	POP_GRM_SCC
	ret
LB_1558:
	RB_GRM
	mov QWORD [rsp+8*0],r14
	mov r13,QWORD [rsp+16+8*0]
	mov r14,QWORD [rsp+8*0]
	jmp LB_1576
LB_1576
;; rsp=0 , %1284~1'(= r ) %1283~0'(= r ) 
; #22 { } ⊢ 1(<2)◂{ }
;; rsp=0 , %1285~1(<2)◂{ } %1284~1'(= r ) %1283~0'(= r ) 
; #24 1(<2)◂{ } ⊢ 0(<2)◂1(<2)◂{ }
;; rsp=0 , %1286~0(<2)◂1(<2)◂{ } %1284~1'(= r ) %1283~0'(= r ) 
; ∎ 0(<2)◂1(<2)◂{ }
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂1(<2)◂{ } ⊢ 2'(= a3◂ [ a2◂ [ a17◂ [ a22◂ [ {| l |}]]]] )
; .mov_ptn 0(<2)◂1(<2)◂{ } ⊢ 2'(= a3◂ [ a2◂ [ a17◂ [ a22◂ [ {| l |}]]]] )
	mov rax,unt 
	mov rax,unt_1
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	jmp LB_1577
LB_1577:
	cmp BYTE [r8+6],0
	jnz LB_1575
	POP_GRM_SCC
	ret
LB_1575:
	POP_GRM_FAIL 
	ret
ETR_212:
	mov r9,0x0000_ffff_ffff_ffff
	and r9,[r13]
	call GRM_212
	ret
GRM_212:
	PUSH_GRM
	jmp LB_1580
LB_1579:
	add r14,1 
LB_1580:
	cmp r14,r9
	jge LB_1581
	JZ_LINE_SPC BYTE [r13+8+r14], LB_1579
LB_1581
	lea rax,[r14+1]
	cmp rax,r9
	jg LB_1584
	jmp LB_1585
LB_1584:
	mov r8,unt_1
	jmp LB_1582
LB_1585:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],44
	jnz LB_1586
	jmp LB_1587
LB_1586:
	mov r8,unt_1
	jmp LB_1582
LB_1587:
	add r14,1
	jmp LB_1583
LB_1582:
	add rsp,0
	jmp LB_1578
LB_1583:
	jmp LB_1589
LB_1588:
	add r14,1 
LB_1589:
	cmp r14,r9
	jge LB_1590
	JZ_LINE_SPC BYTE [r13+8+r14], LB_1588
LB_1590
	call GRM_210
	cmp BYTE [r8+6],0
	jnz LB_1593
	jmp LB_1594
LB_1593:
	jmp LB_1591
LB_1594:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a17◂ [ a22◂ [ {| l |}]] ) ⊢ 8'(= a17◂ [ a22◂ [ {| l |}]] )
; .mov_ptn 2'(= a17◂ [ a22◂ [ {| l |}]] ) ⊢ 8'(= a17◂ [ a22◂ [ {| l |}]] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_1592
LB_1591:
	add rsp,0
	POP_GRM_FAIL
	ret
LB_1592:
	jmp LB_1596
LB_1595:
	add r14,1 
LB_1596:
	cmp r14,r9
	jge LB_1597
	JZ_LINE_SPC BYTE [r13+8+r14], LB_1595
LB_1597
	call GRM_212
	cmp BYTE [r8+6],0
	jnz LB_1600
	jmp LB_1601
LB_1600:
	jmp LB_1598
LB_1601:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a2◂ [ a17◂ [ a22◂ [ {| l |}]]] ) ⊢ 9'(= a2◂ [ a17◂ [ a22◂ [ {| l |}]]] )
; .mov_ptn 2'(= a2◂ [ a17◂ [ a22◂ [ {| l |}]]] ) ⊢ 9'(= a2◂ [ a17◂ [ a22◂ [ {| l |}]]] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_1599
LB_1598:
	add rsp,8
	POP_GRM_FAIL
	ret
LB_1599:
	mov QWORD [rsp+8*2],r14
	mov r13,QWORD [rsp+16+8*2]
	mov r14,QWORD [rsp+8*2]
	jmp LB_1602
LB_1602
;; rsp=2 , %1290~1'(= r ) %1289~0'(= r ) %1288~9'(= a2◂ [ a17◂ [ a22◂ [ {| l |}]]] ) %1287~8'(= a17◂ [ a22◂ [ {| l |}]] ) 
; #23 { 8'(= a17◂ [ a22◂ [ {| l |}]] ) 9'(= a2◂ [ a17◂ [ a22◂ [ {| l |}]]] ) } ⊢ 0(<2)◂{ 8'(= a17◂ [ a22◂ [ {| l |}]] ) 9'(= a2◂ [ a17◂ [ a22◂ [ {| l |}]]] ) }
;; rsp=2 , %1291~0(<2)◂{ 8'(= a17◂ [ a22◂ [ {| l |}]] ) 9'(= a2◂ [ a17◂ [ a22◂ [ {| l |}]]] ) } %1290~1'(= r ) %1289~0'(= r ) 
; #24 0(<2)◂{ 8'(= a17◂ [ a22◂ [ {| l |}]] ) 9'(= a2◂ [ a17◂ [ a22◂ [ {| l |}]]] ) } ⊢ 0(<2)◂0(<2)◂{ 8'(= a17◂ [ a22◂ [ {| l |}]] ) 9'(= a2◂ [ a17◂ [ a22◂ [ {| l |}]]] ) }
;; rsp=2 , %1292~0(<2)◂0(<2)◂{ 8'(= a17◂ [ a22◂ [ {| l |}]] ) 9'(= a2◂ [ a17◂ [ a22◂ [ {| l |}]]] ) } %1290~1'(= r ) %1289~0'(= r ) 
; ∎ 0(<2)◂0(<2)◂{ 8'(= a17◂ [ a22◂ [ {| l |}]] ) 9'(= a2◂ [ a17◂ [ a22◂ [ {| l |}]]] ) }
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂0(<2)◂{ 8'(= a17◂ [ a22◂ [ {| l |}]] ) 9'(= a2◂ [ a17◂ [ a22◂ [ {| l |}]]] ) } ⊢ 2'(= a3◂ [ a2◂ [ a17◂ [ a22◂ [ {| l |}]]]] )
; .mov_ptn 0(<2)◂0(<2)◂{ 8'(= a17◂ [ a22◂ [ {| l |}]] ) 9'(= a2◂ [ a17◂ [ a22◂ [ {| l |}]]] ) } ⊢ 2'(= a3◂ [ a2◂ [ a17◂ [ a22◂ [ {| l |}]]]] )
	ALC_RCD 2, rax
	mov r13,rax
	mov rax,QWORD [rsp-8+8*2]
	mov QWORD [r13+8+8*0],rax
	mov rax,QWORD [rsp-8+8*1]
	mov QWORD [r13+8+8*1],rax
	mov rax,r13
	mov BYTE [rax+6],0
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,16
	jmp LB_1603
LB_1603:
	cmp BYTE [r8+6],0
	jnz LB_1578
	POP_GRM_SCC
	ret
LB_1578:
	RB_GRM
	mov QWORD [rsp+8*0],r14
	mov r13,QWORD [rsp+16+8*0]
	mov r14,QWORD [rsp+8*0]
	jmp LB_1605
LB_1605
;; rsp=0 , %1294~1'(= r ) %1293~0'(= r ) 
; #22 { } ⊢ 1(<2)◂{ }
;; rsp=0 , %1295~1(<2)◂{ } %1294~1'(= r ) %1293~0'(= r ) 
; #24 1(<2)◂{ } ⊢ 0(<2)◂1(<2)◂{ }
;; rsp=0 , %1296~0(<2)◂1(<2)◂{ } %1294~1'(= r ) %1293~0'(= r ) 
; ∎ 0(<2)◂1(<2)◂{ }
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂1(<2)◂{ } ⊢ 2'(= a3◂ [ a2◂ [ a17◂ [ a22◂ [ {| l |}]]]] )
; .mov_ptn 0(<2)◂1(<2)◂{ } ⊢ 2'(= a3◂ [ a2◂ [ a17◂ [ a22◂ [ {| l |}]]]] )
	mov rax,unt 
	mov rax,unt_1
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	jmp LB_1606
LB_1606:
	cmp BYTE [r8+6],0
	jnz LB_1604
	POP_GRM_SCC
	ret
LB_1604:
	POP_GRM_FAIL 
	ret
ETR_213:
	mov r9,0x0000_ffff_ffff_ffff
	and r9,[r13]
	call GRM_213
	ret
GRM_213:
	PUSH_GRM
	jmp LB_1609
LB_1608:
	add r14,1 
LB_1609:
	cmp r14,r9
	jge LB_1610
	JZ_LINE_SPC BYTE [r13+8+r14], LB_1608
LB_1610
	lea rax,[r14+1]
	cmp rax,r9
	jg LB_1613
	jmp LB_1614
LB_1613:
	mov r8,unt_1
	jmp LB_1611
LB_1614:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],44
	jnz LB_1615
	jmp LB_1616
LB_1615:
	mov r8,unt_1
	jmp LB_1611
LB_1616:
	add r14,1
	jmp LB_1612
LB_1611:
	add rsp,0
	jmp LB_1607
LB_1612:
	jmp LB_1618
LB_1617:
	add r14,1 
LB_1618:
	cmp r14,r9
	jge LB_1619
	JZ_LINE_SPC BYTE [r13+8+r14], LB_1617
LB_1619
	call GRM_214
	cmp BYTE [r8+6],0
	jnz LB_1622
	jmp LB_1623
LB_1622:
	jmp LB_1620
LB_1623:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a22◂ [ {| l |}] ) ⊢ 8'(= a22◂ [ {| l |}] )
; .mov_ptn 2'(= a22◂ [ {| l |}] ) ⊢ 8'(= a22◂ [ {| l |}] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_1621
LB_1620:
	add rsp,0
	POP_GRM_FAIL
	ret
LB_1621:
	jmp LB_1625
LB_1624:
	add r14,1 
LB_1625:
	cmp r14,r9
	jge LB_1626
	JZ_LINE_SPC BYTE [r13+8+r14], LB_1624
LB_1626
	call GRM_213
	cmp BYTE [r8+6],0
	jnz LB_1629
	jmp LB_1630
LB_1629:
	jmp LB_1627
LB_1630:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a2◂ [ a22◂ [ {| l |}]] ) ⊢ 9'(= a2◂ [ a22◂ [ {| l |}]] )
; .mov_ptn 2'(= a2◂ [ a22◂ [ {| l |}]] ) ⊢ 9'(= a2◂ [ a22◂ [ {| l |}]] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_1628
LB_1627:
	add rsp,8
	POP_GRM_FAIL
	ret
LB_1628:
	mov QWORD [rsp+8*2],r14
	mov r13,QWORD [rsp+16+8*2]
	mov r14,QWORD [rsp+8*2]
	jmp LB_1631
LB_1631
;; rsp=2 , %1300~1'(= r ) %1299~0'(= r ) %1298~9'(= a2◂ [ a22◂ [ {| l |}]] ) %1297~8'(= a22◂ [ {| l |}] ) 
; #23 { 8'(= a22◂ [ {| l |}] ) 9'(= a2◂ [ a22◂ [ {| l |}]] ) } ⊢ 0(<2)◂{ 8'(= a22◂ [ {| l |}] ) 9'(= a2◂ [ a22◂ [ {| l |}]] ) }
;; rsp=2 , %1301~0(<2)◂{ 8'(= a22◂ [ {| l |}] ) 9'(= a2◂ [ a22◂ [ {| l |}]] ) } %1300~1'(= r ) %1299~0'(= r ) 
; #24 0(<2)◂{ 8'(= a22◂ [ {| l |}] ) 9'(= a2◂ [ a22◂ [ {| l |}]] ) } ⊢ 0(<2)◂0(<2)◂{ 8'(= a22◂ [ {| l |}] ) 9'(= a2◂ [ a22◂ [ {| l |}]] ) }
;; rsp=2 , %1302~0(<2)◂0(<2)◂{ 8'(= a22◂ [ {| l |}] ) 9'(= a2◂ [ a22◂ [ {| l |}]] ) } %1300~1'(= r ) %1299~0'(= r ) 
; ∎ 0(<2)◂0(<2)◂{ 8'(= a22◂ [ {| l |}] ) 9'(= a2◂ [ a22◂ [ {| l |}]] ) }
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂0(<2)◂{ 8'(= a22◂ [ {| l |}] ) 9'(= a2◂ [ a22◂ [ {| l |}]] ) } ⊢ 2'(= a3◂ [ a2◂ [ a22◂ [ {| l |}]]] )
; .mov_ptn 0(<2)◂0(<2)◂{ 8'(= a22◂ [ {| l |}] ) 9'(= a2◂ [ a22◂ [ {| l |}]] ) } ⊢ 2'(= a3◂ [ a2◂ [ a22◂ [ {| l |}]]] )
	ALC_RCD 2, rax
	mov r13,rax
	mov rax,QWORD [rsp-8+8*2]
	mov QWORD [r13+8+8*0],rax
	mov rax,QWORD [rsp-8+8*1]
	mov QWORD [r13+8+8*1],rax
	mov rax,r13
	mov BYTE [rax+6],0
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,16
	jmp LB_1632
LB_1632:
	cmp BYTE [r8+6],0
	jnz LB_1607
	POP_GRM_SCC
	ret
LB_1607:
	RB_GRM
	mov QWORD [rsp+8*0],r14
	mov r13,QWORD [rsp+16+8*0]
	mov r14,QWORD [rsp+8*0]
	jmp LB_1634
LB_1634
;; rsp=0 , %1304~1'(= r ) %1303~0'(= r ) 
; #22 { } ⊢ 1(<2)◂{ }
;; rsp=0 , %1305~1(<2)◂{ } %1304~1'(= r ) %1303~0'(= r ) 
; #24 1(<2)◂{ } ⊢ 0(<2)◂1(<2)◂{ }
;; rsp=0 , %1306~0(<2)◂1(<2)◂{ } %1304~1'(= r ) %1303~0'(= r ) 
; ∎ 0(<2)◂1(<2)◂{ }
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂1(<2)◂{ } ⊢ 2'(= a3◂ [ a2◂ [ a22◂ [ {| l |}]]] )
; .mov_ptn 0(<2)◂1(<2)◂{ } ⊢ 2'(= a3◂ [ a2◂ [ a22◂ [ {| l |}]]] )
	mov rax,unt 
	mov rax,unt_1
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	jmp LB_1635
LB_1635:
	cmp BYTE [r8+6],0
	jnz LB_1633
	POP_GRM_SCC
	ret
LB_1633:
	POP_GRM_FAIL 
	ret
ETR_214:
	mov r9,0x0000_ffff_ffff_ffff
	and r9,[r13]
	call GRM_214
	ret
GRM_214:
	PUSH_GRM
	lea rax,[r14+1]
	cmp rax,r9
	jg LB_1639
	jmp LB_1640
LB_1639:
	mov r8,unt_1
	jmp LB_1637
LB_1640:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],37
	jnz LB_1641
	jmp LB_1642
LB_1641:
	mov r8,unt_1
	jmp LB_1637
LB_1642:
	add r14,1
	jmp LB_1638
LB_1637:
	add rsp,0
	jmp LB_1636
LB_1638:
	call GRM_79
	cmp BYTE [r8+6],0
	jnz LB_1645
	jmp LB_1646
LB_1645:
	jmp LB_1643
LB_1646:
	sub rsp,8
; .mov_ptn2 2'(= {| l |} ) ⊢ 8'(= {| l |} )
; .mov_ptn 2'(= {| l |} ) ⊢ 8'(= {| l |} )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_1644
LB_1643:
	add rsp,0
	POP_GRM_FAIL
	ret
LB_1644:
	mov QWORD [rsp+8*1],r14
	mov r13,QWORD [rsp+16+8*1]
	mov r14,QWORD [rsp+8*1]
	jmp LB_1647
LB_1647
;; rsp=1 , %1309~1'(= r ) %1308~0'(= r ) %1307~8'(= {| l |} ) 
; #94 8'(= {| l |} ) ⊢ 1(<2)◂8'(= {| l |} )
;; rsp=1 , %1310~1(<2)◂8'(= {| l |} ) %1309~1'(= r ) %1308~0'(= r ) 
; #24 1(<2)◂8'(= {| l |} ) ⊢ 0(<2)◂1(<2)◂8'(= {| l |} )
;; rsp=1 , %1311~0(<2)◂1(<2)◂8'(= {| l |} ) %1309~1'(= r ) %1308~0'(= r ) 
; ∎ 0(<2)◂1(<2)◂8'(= {| l |} )
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂1(<2)◂8'(= {| l |} ) ⊢ 2'(= a3◂ [ a22◂ [ {| l |}]] )
; .mov_ptn 0(<2)◂1(<2)◂8'(= {| l |} ) ⊢ 2'(= a3◂ [ a22◂ [ {| l |}]] )
	mov rax,QWORD [rsp-8+8*1]
	mov BYTE [rax+6],1
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,8
	jmp LB_1648
LB_1648:
	cmp BYTE [r8+6],0
	jnz LB_1636
	POP_GRM_SCC
	ret
LB_1636:
	RB_GRM
	call GRM_79
	cmp BYTE [r8+6],0
	jnz LB_1652
	jmp LB_1653
LB_1652:
	jmp LB_1650
LB_1653:
	sub rsp,8
; .mov_ptn2 2'(= {| l |} ) ⊢ 8'(= {| l |} )
; .mov_ptn 2'(= {| l |} ) ⊢ 8'(= {| l |} )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_1651
LB_1650:
	add rsp,0
	jmp LB_1649
LB_1651:
	mov QWORD [rsp+8*1],r14
	mov r13,QWORD [rsp+16+8*1]
	mov r14,QWORD [rsp+8*1]
	jmp LB_1654
LB_1654
;; rsp=1 , %1314~1'(= r ) %1313~0'(= r ) %1312~8'(= {| l |} ) 
; #94 8'(= {| l |} ) ⊢ 1(<2)◂8'(= {| l |} )
;; rsp=1 , %1315~1(<2)◂8'(= {| l |} ) %1314~1'(= r ) %1313~0'(= r ) 
; #24 1(<2)◂8'(= {| l |} ) ⊢ 0(<2)◂1(<2)◂8'(= {| l |} )
;; rsp=1 , %1316~0(<2)◂1(<2)◂8'(= {| l |} ) %1314~1'(= r ) %1313~0'(= r ) 
; ∎ 0(<2)◂1(<2)◂8'(= {| l |} )
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂1(<2)◂8'(= {| l |} ) ⊢ 2'(= a3◂ [ a22◂ [ {| l |}]] )
; .mov_ptn 0(<2)◂1(<2)◂8'(= {| l |} ) ⊢ 2'(= a3◂ [ a22◂ [ {| l |}]] )
	mov rax,QWORD [rsp-8+8*1]
	mov BYTE [rax+6],1
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,8
	jmp LB_1655
LB_1655:
	cmp BYTE [r8+6],0
	jnz LB_1649
	POP_GRM_SCC
	ret
LB_1649:
	RB_GRM
	lea rax,[r14+1]
	cmp rax,r9
	jg LB_1659
	jmp LB_1660
LB_1659:
	mov r8,unt_1
	jmp LB_1657
LB_1660:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],95
	jnz LB_1661
	jmp LB_1662
LB_1661:
	mov r8,unt_1
	jmp LB_1657
LB_1662:
	add r14,1
	jmp LB_1658
LB_1657:
	add rsp,0
	jmp LB_1656
LB_1658:
	mov QWORD [rsp+8*0],r14
	mov r13,QWORD [rsp+16+8*0]
	mov r14,QWORD [rsp+8*0]
	jmp LB_1663
LB_1663
;; rsp=0 , %1318~1'(= r ) %1317~0'(= r ) 
; #25 { } ⊢ 1(<2)◂{ }
;; rsp=0 , %1319~1(<2)◂{ } %1318~1'(= r ) %1317~0'(= r ) 
; #95 1(<2)◂{ } ⊢ 0(<2)◂1(<2)◂{ }
;; rsp=0 , %1320~0(<2)◂1(<2)◂{ } %1318~1'(= r ) %1317~0'(= r ) 
; #24 0(<2)◂1(<2)◂{ } ⊢ 0(<2)◂0(<2)◂1(<2)◂{ }
;; rsp=0 , %1321~0(<2)◂0(<2)◂1(<2)◂{ } %1318~1'(= r ) %1317~0'(= r ) 
; ∎ 0(<2)◂0(<2)◂1(<2)◂{ }
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂0(<2)◂1(<2)◂{ } ⊢ 2'(= a3◂ [ a22◂ [ {| l |}]] )
; .mov_ptn 0(<2)◂0(<2)◂1(<2)◂{ } ⊢ 2'(= a3◂ [ a22◂ [ {| l |}]] )
	mov rax,unt 
	mov rax,unt_1
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	jmp LB_1664
LB_1664:
	cmp BYTE [r8+6],0
	jnz LB_1656
	POP_GRM_SCC
	ret
LB_1656:
	POP_GRM_FAIL 
	ret
LB_1792: ;; #56 { 0'(= a2◂ [ a32◂ [ ]] ) 1'(= a2◂ [ a32◂ [ ]] ) } ⊢ 0'(= a2◂ [ a32◂ [ ]] ) : ({ _lst◂2981'(=2982'(=_t32)) _lst◂_t32 }→_lst◂_t32)
;; rsp=0 , %118~1'(= a2◂ [ a32◂ [ ]] ) %117~0'(= a2◂ [ a32◂ [ ]] ) 
;; ?; 1'(= a2◂ [ a32◂ [ ]] ) ⊢ 1(<2)◂{ }
	mov rdi,r14
	cmp BYTE [rdi+6],1
	jnz LB_1794
	jmp LB_1795
LB_1794:
	jmp LB_1793
LB_1795:
;; rsp=0 , %117~0'(= a2◂ [ a32◂ [ ]] ) 
; ∎ 0'(= a2◂ [ a32◂ [ ]] )
; .mov_ptn2 0'(= a2◂ [ a32◂ [ ]] ) ⊢ 0'(= a2◂ [ a32◂ [ ]] )
	ret
LB_1793:
;; ?; 1'(= a2◂ [ a32◂ [ ]] ) ⊢ 0(<2)◂{ 2'(= a32◂ [ ] ) 3'(= a2◂ [ a32◂ [ ]] ) }
	mov r8, QWORD [r14+8]
	mov r9, QWORD [r14+16]
	mov QWORD [GBG_VCT+8*0],r14
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_RCD 2,rdi
;; rsp=0 , %120~3'(= a2◂ [ a32◂ [ ]] ) %119~2'(= a32◂ [ ] ) %117~0'(= a2◂ [ a32◂ [ ]] ) 
; #23 { 2'(= a32◂ [ ] ) 0'(= a2◂ [ a32◂ [ ]] ) } ⊢ 0(<2)◂{ 2'(= a32◂ [ ] ) 0'(= a2◂ [ a32◂ [ ]] ) }
;; rsp=0 , %121~0(<2)◂{ 2'(= a32◂ [ ] ) 0'(= a2◂ [ a32◂ [ ]] ) } %120~3'(= a2◂ [ a32◂ [ ]] ) 
; #56 { 0(<2)◂{ 2'(= a32◂ [ ] ) 0'(= a2◂ [ a32◂ [ ]] ) } 3'(= a2◂ [ a32◂ [ ]] ) } ⊢ 0'(= a2◂ [ a32◂ [ ]] )
; .mov_ptn2 { 0(<2)◂{ 2'(= a32◂ [ ] ) 0'(= a2◂ [ a32◂ [ ]] ) } 3'(= a2◂ [ a32◂ [ ]] ) } ⊢ { 0'(= a2◂ [ a32◂ [ ]] ) 1'(= a2◂ [ a32◂ [ ]] ) }
; .mov_ptn 3'(= a2◂ [ a32◂ [ ]] ) ⊢ 1'(= a2◂ [ a32◂ [ ]] )
	mov rax,r9
	mov r14,rax
	mov r10,r13
; .mov_ptn 0(<2)◂{ 2'(= a32◂ [ ] ) 4'(= a2◂ [ a32◂ [ ]] ) } ⊢ 0'(= a2◂ [ a32◂ [ ]] )
	ALC_RCD 2, rax
	mov r9,rax
	mov rax,r8
	mov QWORD [r9+8+8*0],rax
	mov rax,r10
	mov QWORD [r9+8+8*1],rax
	mov rax,r9
	mov BYTE [rax+6],0
	mov r13,rax
	call LB_1792
;; rsp=0 , %122~0'(= a2◂ [ a32◂ [ ]] ) 
; ∎ 0'(= a2◂ [ a32◂ [ ]] )
; .mov_ptn2 0'(= a2◂ [ a32◂ [ ]] ) ⊢ 0'(= a2◂ [ a32◂ [ ]] )
	ret
LB_1791: ;; #57 0'(= a2◂ [ a32◂ [ ]] ) ⊢ 0'(= a2◂ [ a32◂ [ ]] ) : (_lst◂_t32→_lst◂_t32)
;; rsp=0 , %123~0'(= a2◂ [ a32◂ [ ]] ) 
; #22 { } ⊢ 1(<2)◂{ }
;; rsp=0 , %124~1(<2)◂{ } %123~0'(= a2◂ [ a32◂ [ ]] ) 
; #56 { 1(<2)◂{ } 0'(= a2◂ [ a32◂ [ ]] ) } ⊢ 0'(= a2◂ [ a32◂ [ ]] )
; .mov_ptn2 { 1(<2)◂{ } 0'(= a2◂ [ a32◂ [ ]] ) } ⊢ { 0'(= a2◂ [ a32◂ [ ]] ) 1'(= a2◂ [ a32◂ [ ]] ) }
; .mov_ptn 0'(= a2◂ [ a32◂ [ ]] ) ⊢ 1'(= a2◂ [ a32◂ [ ]] )
	mov rax,r13
	mov r14,rax
; .mov_ptn 1(<2)◂{ } ⊢ 0'(= a2◂ [ a32◂ [ ]] )
	mov rax,unt 
	mov rax,unt_1
	mov r13,rax
	call LB_1792
;; rsp=0 , %125~0'(= a2◂ [ a32◂ [ ]] ) 
; ∎ 0'(= a2◂ [ a32◂ [ ]] )
; .mov_ptn2 0'(= a2◂ [ a32◂ [ ]] ) ⊢ 0'(= a2◂ [ a32◂ [ ]] )
	ret
ETR_215:
	mov r9,0x0000_ffff_ffff_ffff
	and r9,[r13]
	call GRM_215
	ret
GRM_215:
	PUSH_GRM
	jmp LB_1667
LB_1666:
	add r14,1 
LB_1667:
	cmp r14,r9
	jge LB_1668
	JZ_LINE_SPC BYTE [r13+8+r14], LB_1666
LB_1668
	call GRM_219
	cmp BYTE [r8+6],0
	jnz LB_1671
	jmp LB_1672
LB_1671:
	jmp LB_1669
LB_1672:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a32◂ [ ] ) ⊢ 8'(= a32◂ [ ] )
; .mov_ptn 2'(= a32◂ [ ] ) ⊢ 8'(= a32◂ [ ] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_1670
LB_1669:
	add rsp,0
	jmp LB_1665
LB_1670:
	jmp LB_1674
LB_1673:
	add r14,1 
LB_1674:
	cmp r14,r9
	jge LB_1675
	JZ_LINE_SPC BYTE [r13+8+r14], LB_1673
LB_1675
	call GRM_218
	cmp BYTE [r8+6],0
	jnz LB_1678
	jmp LB_1679
LB_1678:
	jmp LB_1676
LB_1679:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a2◂ [ a32◂ [ ]] ) ⊢ 9'(= a2◂ [ a32◂ [ ]] )
; .mov_ptn 2'(= a2◂ [ a32◂ [ ]] ) ⊢ 9'(= a2◂ [ a32◂ [ ]] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_1677
LB_1676:
	add rsp,8
	jmp LB_1665
LB_1677:
	jmp LB_1681
LB_1680:
	add r14,1 
LB_1681:
	cmp r14,r9
	jge LB_1682
	JZ_LINE_SPC BYTE [r13+8+r14], LB_1680
LB_1682
	call GRM_217
	cmp BYTE [r8+6],0
	jnz LB_1685
	jmp LB_1686
LB_1685:
	jmp LB_1683
LB_1686:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a3◂ [ a32◂ [ ]] ) ⊢ 10'(= a3◂ [ a32◂ [ ]] )
; .mov_ptn 2'(= a3◂ [ a32◂ [ ]] ) ⊢ 10'(= a3◂ [ a32◂ [ ]] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_1684
LB_1683:
	add rsp,16
	jmp LB_1665
LB_1684:
	mov QWORD [rsp+8*3],r14
	mov r13,QWORD [rsp+16+8*3]
	mov r14,QWORD [rsp+8*3]
	jmp LB_1687
LB_1687
;; rsp=3 , %1326~1'(= r ) %1325~0'(= r ) %1324~10'(= a3◂ [ a32◂ [ ]] ) %1323~9'(= a2◂ [ a32◂ [ ]] ) %1322~8'(= a32◂ [ ] ) 
; #191 { 8'(= a32◂ [ ] ) 9'(= a2◂ [ a32◂ [ ]] ) } ⊢ 2'(= a32◂ [ ] )
	sub rsp,16
	mov QWORD [rsp+8*0],r13
	mov QWORD [rsp+8*1],r14
; .mov_ptn2 { 8'(= a32◂ [ ] ) 9'(= a2◂ [ a32◂ [ ]] ) } ⊢ { 0'(= a32◂ [ ] ) 1'(= a2◂ [ a32◂ [ ]] ) }
; .mov_ptn 9'(= a2◂ [ a32◂ [ ]] ) ⊢ 1'(= a2◂ [ a32◂ [ ]] )
	mov rax,QWORD [rsp-8+8*4]
	mov r14,rax
; .mov_ptn 8'(= a32◂ [ ] ) ⊢ 0'(= a32◂ [ ] )
	mov rax,QWORD [rsp-8+8*5]
	mov r13,rax
	call ETR_191
	mov r14,QWORD [rsp-8+8*2]
	mov r8,r13
	mov r13,QWORD [rsp-8+8*1]
	add rsp,16
;; rsp=3 , %1327~2'(= a32◂ [ ] ) %1326~1'(= r ) %1325~0'(= r ) %1324~10'(= a3◂ [ a32◂ [ ]] ) 
;; ?; 10'(= a3◂ [ a32◂ [ ]] ) ⊢ 0(<2)◂3'(= a32◂ [ ] )
	mov rdi,QWORD [rsp-8+8*1]
	cmp BYTE [rdi+6],0
	jnz LB_1690
	jmp LB_1691
LB_1690:
	jmp LB_1689
LB_1691:
	mov QWORD [GBG_VCT+8*0],rdi
	mov r9,QWORD [rdi+8]
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_LN rdi
;; rsp=3 , %1328~3'(= a32◂ [ ] ) %1327~2'(= a32◂ [ ] ) %1326~1'(= r ) %1325~0'(= r ) 
; #144 { 2'(= a32◂ [ ] ) 3'(= a32◂ [ ] ) } ⊢ 1(<5)◂{ 2'(= a32◂ [ ] ) 3'(= a32◂ [ ] ) }
;; rsp=3 , %1329~1(<5)◂{ 2'(= a32◂ [ ] ) 3'(= a32◂ [ ] ) } %1326~1'(= r ) %1325~0'(= r ) 
; #24 1(<5)◂{ 2'(= a32◂ [ ] ) 3'(= a32◂ [ ] ) } ⊢ 0(<2)◂1(<5)◂{ 2'(= a32◂ [ ] ) 3'(= a32◂ [ ] ) }
;; rsp=3 , %1330~0(<2)◂1(<5)◂{ 2'(= a32◂ [ ] ) 3'(= a32◂ [ ] ) } %1326~1'(= r ) %1325~0'(= r ) 
; ∎ 0(<2)◂1(<5)◂{ 2'(= a32◂ [ ] ) 3'(= a32◂ [ ] ) }
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂1(<5)◂{ 2'(= a32◂ [ ] ) 3'(= a32◂ [ ] ) } ⊢ 2'(= a3◂ [ a32◂ [ ]] )
	mov r13,r8
; .mov_ptn 0(<2)◂1(<5)◂{ 0'(= a32◂ [ ] ) 3'(= a32◂ [ ] ) } ⊢ 2'(= a3◂ [ a32◂ [ ]] )
	ALC_RCD 2, rax
	mov r14,rax
	mov rax,r13
	mov QWORD [r14+8+8*0],rax
	mov rax,r9
	mov QWORD [r14+8+8*1],rax
	mov rax,r14
	mov BYTE [rax+6],1
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,24
	jmp LB_1688
LB_1689:
;; ?; 10'(= a3◂ [ a32◂ [ ]] ) ⊢ 1(<2)◂{ }
;; rsp=3 , %1327~2'(= a32◂ [ ] ) %1326~1'(= r ) %1325~0'(= r ) 
; #24 2'(= a32◂ [ ] ) ⊢ 0(<2)◂2'(= a32◂ [ ] )
;; rsp=3 , %1331~0(<2)◂2'(= a32◂ [ ] ) %1326~1'(= r ) %1325~0'(= r ) 
; ∎ 0(<2)◂2'(= a32◂ [ ] )
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂2'(= a32◂ [ ] ) ⊢ 2'(= a3◂ [ a32◂ [ ]] )
	mov r13,r8
; .mov_ptn 0(<2)◂0'(= a32◂ [ ] ) ⊢ 2'(= a3◂ [ a32◂ [ ]] )
	mov rax,r13
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,24
	jmp LB_1688
LB_1688:
	cmp BYTE [r8+6],0
	jnz LB_1665
	POP_GRM_SCC
	ret
LB_1665:
	POP_GRM_FAIL 
	ret
ETR_216:
	mov r9,0x0000_ffff_ffff_ffff
	and r9,[r13]
	call GRM_216
	ret
GRM_216:
	PUSH_GRM
	jmp LB_1694
LB_1693:
	add r14,1 
LB_1694:
	cmp r14,r9
	jge LB_1695
	JZ_LINE_SPC BYTE [r13+8+r14], LB_1693
LB_1695
	call GRM_215
	cmp BYTE [r8+6],0
	jnz LB_1698
	jmp LB_1699
LB_1698:
	jmp LB_1696
LB_1699:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a32◂ [ ] ) ⊢ 8'(= a32◂ [ ] )
; .mov_ptn 2'(= a32◂ [ ] ) ⊢ 8'(= a32◂ [ ] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_1697
LB_1696:
	add rsp,0
	jmp LB_1692
LB_1697:
	jmp LB_1701
LB_1700:
	add r14,1 
LB_1701:
	cmp r14,r9
	jge LB_1702
	JZ_LINE_SPC BYTE [r13+8+r14], LB_1700
LB_1702
	call GRM_216
	cmp BYTE [r8+6],0
	jnz LB_1705
	jmp LB_1706
LB_1705:
	jmp LB_1703
LB_1706:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a2◂ [ a32◂ [ ]] ) ⊢ 9'(= a2◂ [ a32◂ [ ]] )
; .mov_ptn 2'(= a2◂ [ a32◂ [ ]] ) ⊢ 9'(= a2◂ [ a32◂ [ ]] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_1704
LB_1703:
	add rsp,8
	jmp LB_1692
LB_1704:
	mov QWORD [rsp+8*2],r14
	mov r13,QWORD [rsp+16+8*2]
	mov r14,QWORD [rsp+8*2]
	jmp LB_1707
LB_1707
;; rsp=2 , %1335~1'(= r ) %1334~0'(= r ) %1333~9'(= a2◂ [ a32◂ [ ]] ) %1332~8'(= a32◂ [ ] ) 
; #23 { 8'(= a32◂ [ ] ) 9'(= a2◂ [ a32◂ [ ]] ) } ⊢ 0(<2)◂{ 8'(= a32◂ [ ] ) 9'(= a2◂ [ a32◂ [ ]] ) }
;; rsp=2 , %1336~0(<2)◂{ 8'(= a32◂ [ ] ) 9'(= a2◂ [ a32◂ [ ]] ) } %1335~1'(= r ) %1334~0'(= r ) 
; #24 0(<2)◂{ 8'(= a32◂ [ ] ) 9'(= a2◂ [ a32◂ [ ]] ) } ⊢ 0(<2)◂0(<2)◂{ 8'(= a32◂ [ ] ) 9'(= a2◂ [ a32◂ [ ]] ) }
;; rsp=2 , %1337~0(<2)◂0(<2)◂{ 8'(= a32◂ [ ] ) 9'(= a2◂ [ a32◂ [ ]] ) } %1335~1'(= r ) %1334~0'(= r ) 
; ∎ 0(<2)◂0(<2)◂{ 8'(= a32◂ [ ] ) 9'(= a2◂ [ a32◂ [ ]] ) }
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂0(<2)◂{ 8'(= a32◂ [ ] ) 9'(= a2◂ [ a32◂ [ ]] ) } ⊢ 2'(= a3◂ [ a2◂ [ a32◂ [ ]]] )
; .mov_ptn 0(<2)◂0(<2)◂{ 8'(= a32◂ [ ] ) 9'(= a2◂ [ a32◂ [ ]] ) } ⊢ 2'(= a3◂ [ a2◂ [ a32◂ [ ]]] )
	ALC_RCD 2, rax
	mov r13,rax
	mov rax,QWORD [rsp-8+8*2]
	mov QWORD [r13+8+8*0],rax
	mov rax,QWORD [rsp-8+8*1]
	mov QWORD [r13+8+8*1],rax
	mov rax,r13
	mov BYTE [rax+6],0
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,16
	jmp LB_1708
LB_1708:
	cmp BYTE [r8+6],0
	jnz LB_1692
	POP_GRM_SCC
	ret
LB_1692:
	RB_GRM
	mov QWORD [rsp+8*0],r14
	mov r13,QWORD [rsp+16+8*0]
	mov r14,QWORD [rsp+8*0]
	jmp LB_1710
LB_1710
;; rsp=0 , %1339~1'(= r ) %1338~0'(= r ) 
; #22 { } ⊢ 1(<2)◂{ }
;; rsp=0 , %1340~1(<2)◂{ } %1339~1'(= r ) %1338~0'(= r ) 
; #24 1(<2)◂{ } ⊢ 0(<2)◂1(<2)◂{ }
;; rsp=0 , %1341~0(<2)◂1(<2)◂{ } %1339~1'(= r ) %1338~0'(= r ) 
; ∎ 0(<2)◂1(<2)◂{ }
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂1(<2)◂{ } ⊢ 2'(= a3◂ [ a2◂ [ a32◂ [ ]]] )
; .mov_ptn 0(<2)◂1(<2)◂{ } ⊢ 2'(= a3◂ [ a2◂ [ a32◂ [ ]]] )
	mov rax,unt 
	mov rax,unt_1
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	jmp LB_1711
LB_1711:
	cmp BYTE [r8+6],0
	jnz LB_1709
	POP_GRM_SCC
	ret
LB_1709:
	POP_GRM_FAIL 
	ret
ETR_217:
	mov r9,0x0000_ffff_ffff_ffff
	and r9,[r13]
	call GRM_217
	ret
GRM_217:
	PUSH_GRM
	jmp LB_1714
LB_1713:
	add r14,1 
LB_1714:
	cmp r14,r9
	jge LB_1715
	JZ_LINE_SPC BYTE [r13+8+r14], LB_1713
LB_1715
	lea rax,[r14+3]
	cmp rax,r9
	jg LB_1718
	jmp LB_1719
LB_1718:
	mov r8,unt_1
	jmp LB_1716
LB_1719:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],226
	jnz LB_1720
	cmp BYTE [rdi+1],134
	jnz LB_1720
	cmp BYTE [rdi+2],146
	jnz LB_1720
	jmp LB_1721
LB_1720:
	mov r8,unt_1
	jmp LB_1716
LB_1721:
	add r14,3
	jmp LB_1717
LB_1716:
	add rsp,0
	jmp LB_1712
LB_1717:
	jmp LB_1723
LB_1722:
	add r14,1 
LB_1723:
	cmp r14,r9
	jge LB_1724
	JZ_LINE_SPC BYTE [r13+8+r14], LB_1722
LB_1724
	call GRM_215
	cmp BYTE [r8+6],0
	jnz LB_1727
	jmp LB_1728
LB_1727:
	jmp LB_1725
LB_1728:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a32◂ [ ] ) ⊢ 8'(= a32◂ [ ] )
; .mov_ptn 2'(= a32◂ [ ] ) ⊢ 8'(= a32◂ [ ] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_1726
LB_1725:
	add rsp,0
	jmp LB_1712
LB_1726:
	mov QWORD [rsp+8*1],r14
	mov r13,QWORD [rsp+16+8*1]
	mov r14,QWORD [rsp+8*1]
	jmp LB_1729
LB_1729
;; rsp=1 , %1344~1'(= r ) %1343~0'(= r ) %1342~8'(= a32◂ [ ] ) 
; #24 8'(= a32◂ [ ] ) ⊢ 0(<2)◂8'(= a32◂ [ ] )
;; rsp=1 , %1345~0(<2)◂8'(= a32◂ [ ] ) %1344~1'(= r ) %1343~0'(= r ) 
; #24 0(<2)◂8'(= a32◂ [ ] ) ⊢ 0(<2)◂0(<2)◂8'(= a32◂ [ ] )
;; rsp=1 , %1346~0(<2)◂0(<2)◂8'(= a32◂ [ ] ) %1344~1'(= r ) %1343~0'(= r ) 
; ∎ 0(<2)◂0(<2)◂8'(= a32◂ [ ] )
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂0(<2)◂8'(= a32◂ [ ] ) ⊢ 2'(= a3◂ [ a3◂ [ a32◂ [ ]]] )
; .mov_ptn 0(<2)◂0(<2)◂8'(= a32◂ [ ] ) ⊢ 2'(= a3◂ [ a3◂ [ a32◂ [ ]]] )
	mov rax,QWORD [rsp-8+8*1]
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,8
	jmp LB_1730
LB_1730:
	cmp BYTE [r8+6],0
	jnz LB_1712
	POP_GRM_SCC
	ret
LB_1712:
	RB_GRM
	mov QWORD [rsp+8*0],r14
	mov r13,QWORD [rsp+16+8*0]
	mov r14,QWORD [rsp+8*0]
	jmp LB_1732
LB_1732
;; rsp=0 , %1348~1'(= r ) %1347~0'(= r ) 
; #25 { } ⊢ 1(<2)◂{ }
;; rsp=0 , %1349~1(<2)◂{ } %1348~1'(= r ) %1347~0'(= r ) 
; #24 1(<2)◂{ } ⊢ 0(<2)◂1(<2)◂{ }
;; rsp=0 , %1350~0(<2)◂1(<2)◂{ } %1348~1'(= r ) %1347~0'(= r ) 
; ∎ 0(<2)◂1(<2)◂{ }
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂1(<2)◂{ } ⊢ 2'(= a3◂ [ a3◂ [ a32◂ [ ]]] )
; .mov_ptn 0(<2)◂1(<2)◂{ } ⊢ 2'(= a3◂ [ a3◂ [ a32◂ [ ]]] )
	mov rax,unt 
	mov rax,unt_1
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	jmp LB_1733
LB_1733:
	cmp BYTE [r8+6],0
	jnz LB_1731
	POP_GRM_SCC
	ret
LB_1731:
	POP_GRM_FAIL 
	ret
ETR_218:
	mov r9,0x0000_ffff_ffff_ffff
	and r9,[r13]
	call GRM_218
	ret
GRM_218:
	PUSH_GRM
	jmp LB_1736
LB_1735:
	add r14,1 
LB_1736:
	cmp r14,r9
	jge LB_1737
	JZ_LINE_SPC BYTE [r13+8+r14], LB_1735
LB_1737
	lea rax,[r14+3]
	cmp rax,r9
	jg LB_1740
	jmp LB_1741
LB_1740:
	mov r8,unt_1
	jmp LB_1738
LB_1741:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],226
	jnz LB_1742
	cmp BYTE [rdi+1],151
	jnz LB_1742
	cmp BYTE [rdi+2],130
	jnz LB_1742
	jmp LB_1743
LB_1742:
	mov r8,unt_1
	jmp LB_1738
LB_1743:
	add r14,3
	jmp LB_1739
LB_1738:
	add rsp,0
	jmp LB_1734
LB_1739:
	jmp LB_1745
LB_1744:
	add r14,1 
LB_1745:
	cmp r14,r9
	jge LB_1746
	JZ_LINE_SPC BYTE [r13+8+r14], LB_1744
LB_1746
	call GRM_219
	cmp BYTE [r8+6],0
	jnz LB_1749
	jmp LB_1750
LB_1749:
	jmp LB_1747
LB_1750:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a32◂ [ ] ) ⊢ 8'(= a32◂ [ ] )
; .mov_ptn 2'(= a32◂ [ ] ) ⊢ 8'(= a32◂ [ ] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_1748
LB_1747:
	add rsp,0
	jmp LB_1734
LB_1748:
	jmp LB_1752
LB_1751:
	add r14,1 
LB_1752:
	cmp r14,r9
	jge LB_1753
	JZ_LINE_SPC BYTE [r13+8+r14], LB_1751
LB_1753
	call GRM_218
	cmp BYTE [r8+6],0
	jnz LB_1756
	jmp LB_1757
LB_1756:
	jmp LB_1754
LB_1757:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a2◂ [ a32◂ [ ]] ) ⊢ 9'(= a2◂ [ a32◂ [ ]] )
; .mov_ptn 2'(= a2◂ [ a32◂ [ ]] ) ⊢ 9'(= a2◂ [ a32◂ [ ]] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_1755
LB_1754:
	add rsp,8
	jmp LB_1734
LB_1755:
	mov QWORD [rsp+8*2],r14
	mov r13,QWORD [rsp+16+8*2]
	mov r14,QWORD [rsp+8*2]
	jmp LB_1758
LB_1758
;; rsp=2 , %1354~1'(= r ) %1353~0'(= r ) %1352~9'(= a2◂ [ a32◂ [ ]] ) %1351~8'(= a32◂ [ ] ) 
; #23 { 8'(= a32◂ [ ] ) 9'(= a2◂ [ a32◂ [ ]] ) } ⊢ 0(<2)◂{ 8'(= a32◂ [ ] ) 9'(= a2◂ [ a32◂ [ ]] ) }
;; rsp=2 , %1355~0(<2)◂{ 8'(= a32◂ [ ] ) 9'(= a2◂ [ a32◂ [ ]] ) } %1354~1'(= r ) %1353~0'(= r ) 
; #24 0(<2)◂{ 8'(= a32◂ [ ] ) 9'(= a2◂ [ a32◂ [ ]] ) } ⊢ 0(<2)◂0(<2)◂{ 8'(= a32◂ [ ] ) 9'(= a2◂ [ a32◂ [ ]] ) }
;; rsp=2 , %1356~0(<2)◂0(<2)◂{ 8'(= a32◂ [ ] ) 9'(= a2◂ [ a32◂ [ ]] ) } %1354~1'(= r ) %1353~0'(= r ) 
; ∎ 0(<2)◂0(<2)◂{ 8'(= a32◂ [ ] ) 9'(= a2◂ [ a32◂ [ ]] ) }
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂0(<2)◂{ 8'(= a32◂ [ ] ) 9'(= a2◂ [ a32◂ [ ]] ) } ⊢ 2'(= a3◂ [ a2◂ [ a32◂ [ ]]] )
; .mov_ptn 0(<2)◂0(<2)◂{ 8'(= a32◂ [ ] ) 9'(= a2◂ [ a32◂ [ ]] ) } ⊢ 2'(= a3◂ [ a2◂ [ a32◂ [ ]]] )
	ALC_RCD 2, rax
	mov r13,rax
	mov rax,QWORD [rsp-8+8*2]
	mov QWORD [r13+8+8*0],rax
	mov rax,QWORD [rsp-8+8*1]
	mov QWORD [r13+8+8*1],rax
	mov rax,r13
	mov BYTE [rax+6],0
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,16
	jmp LB_1759
LB_1759:
	cmp BYTE [r8+6],0
	jnz LB_1734
	POP_GRM_SCC
	ret
LB_1734:
	RB_GRM
	mov QWORD [rsp+8*0],r14
	mov r13,QWORD [rsp+16+8*0]
	mov r14,QWORD [rsp+8*0]
	jmp LB_1761
LB_1761
;; rsp=0 , %1358~1'(= r ) %1357~0'(= r ) 
; #22 { } ⊢ 1(<2)◂{ }
;; rsp=0 , %1359~1(<2)◂{ } %1358~1'(= r ) %1357~0'(= r ) 
; #24 1(<2)◂{ } ⊢ 0(<2)◂1(<2)◂{ }
;; rsp=0 , %1360~0(<2)◂1(<2)◂{ } %1358~1'(= r ) %1357~0'(= r ) 
; ∎ 0(<2)◂1(<2)◂{ }
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂1(<2)◂{ } ⊢ 2'(= a3◂ [ a2◂ [ a32◂ [ ]]] )
; .mov_ptn 0(<2)◂1(<2)◂{ } ⊢ 2'(= a3◂ [ a2◂ [ a32◂ [ ]]] )
	mov rax,unt 
	mov rax,unt_1
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	jmp LB_1762
LB_1762:
	cmp BYTE [r8+6],0
	jnz LB_1760
	POP_GRM_SCC
	ret
LB_1760:
	POP_GRM_FAIL 
	ret
ETR_219:
	mov r9,0x0000_ffff_ffff_ffff
	and r9,[r13]
	call GRM_219
	ret
GRM_219:
	PUSH_GRM
	jmp LB_1765
LB_1764:
	add r14,1 
LB_1765:
	cmp r14,r9
	jge LB_1766
	JZ_LINE_SPC BYTE [r13+8+r14], LB_1764
LB_1766
	lea rax,[r14+1]
	cmp rax,r9
	jg LB_1769
	jmp LB_1770
LB_1769:
	mov r8,unt_1
	jmp LB_1767
LB_1770:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],123
	jnz LB_1771
	jmp LB_1772
LB_1771:
	mov r8,unt_1
	jmp LB_1767
LB_1772:
	add r14,1
	jmp LB_1768
LB_1767:
	add rsp,0
	jmp LB_1763
LB_1768:
	jmp LB_1774
LB_1773:
	add r14,1 
LB_1774:
	cmp r14,r9
	jge LB_1775
	JZ_LINE_SPC BYTE [r13+8+r14], LB_1773
LB_1775
	call GRM_216
	cmp BYTE [r8+6],0
	jnz LB_1778
	jmp LB_1779
LB_1778:
	jmp LB_1776
LB_1779:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a2◂ [ a32◂ [ ]] ) ⊢ 8'(= a2◂ [ a32◂ [ ]] )
; .mov_ptn 2'(= a2◂ [ a32◂ [ ]] ) ⊢ 8'(= a2◂ [ a32◂ [ ]] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_1777
LB_1776:
	add rsp,0
	jmp LB_1763
LB_1777:
	jmp LB_1781
LB_1780:
	add r14,1 
LB_1781:
	cmp r14,r9
	jge LB_1782
	JZ_LINE_SPC BYTE [r13+8+r14], LB_1780
LB_1782
	lea rax,[r14+1]
	cmp rax,r9
	jg LB_1785
	jmp LB_1786
LB_1785:
	mov r8,unt_1
	jmp LB_1783
LB_1786:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],125
	jnz LB_1787
	jmp LB_1788
LB_1787:
	mov r8,unt_1
	jmp LB_1783
LB_1788:
	add r14,1
	jmp LB_1784
LB_1783:
	add rsp,8
	jmp LB_1763
LB_1784:
	mov QWORD [rsp+8*1],r14
	mov r13,QWORD [rsp+16+8*1]
	mov r14,QWORD [rsp+8*1]
	jmp LB_1789
LB_1789
;; rsp=1 , %1363~1'(= r ) %1362~0'(= r ) %1361~8'(= a2◂ [ a32◂ [ ]] ) 
; #57 8'(= a2◂ [ a32◂ [ ]] ) ⊢ 2'(= a2◂ [ a32◂ [ ]] )
	sub rsp,16
	mov QWORD [rsp+8*0],r13
	mov QWORD [rsp+8*1],r14
; .mov_ptn2 8'(= a2◂ [ a32◂ [ ]] ) ⊢ 0'(= a2◂ [ a32◂ [ ]] )
; .mov_ptn 8'(= a2◂ [ a32◂ [ ]] ) ⊢ 0'(= a2◂ [ a32◂ [ ]] )
	mov rax,QWORD [rsp-8+8*3]
	mov r13,rax
	call LB_1791
	mov r14,QWORD [rsp-8+8*2]
	mov r8,r13
	mov r13,QWORD [rsp-8+8*1]
	add rsp,24
;; rsp=0 , %1364~2'(= a2◂ [ a32◂ [ ]] ) %1363~1'(= r ) %1362~0'(= r ) 
; #145 2'(= a2◂ [ a32◂ [ ]] ) ⊢ 0(<5)◂2'(= a2◂ [ a32◂ [ ]] )
;; rsp=0 , %1365~0(<5)◂2'(= a2◂ [ a32◂ [ ]] ) %1363~1'(= r ) %1362~0'(= r ) 
; #24 0(<5)◂2'(= a2◂ [ a32◂ [ ]] ) ⊢ 0(<2)◂0(<5)◂2'(= a2◂ [ a32◂ [ ]] )
;; rsp=0 , %1366~0(<2)◂0(<5)◂2'(= a2◂ [ a32◂ [ ]] ) %1363~1'(= r ) %1362~0'(= r ) 
; ∎ 0(<2)◂0(<5)◂2'(= a2◂ [ a32◂ [ ]] )
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂0(<5)◂2'(= a2◂ [ a32◂ [ ]] ) ⊢ 2'(= a3◂ [ a32◂ [ ]] )
	mov r13,r8
; .mov_ptn 0(<2)◂0(<5)◂0'(= a2◂ [ a32◂ [ ]] ) ⊢ 2'(= a3◂ [ a32◂ [ ]] )
	mov rax,r13
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	jmp LB_1790
LB_1790:
	cmp BYTE [r8+6],0
	jnz LB_1763
	POP_GRM_SCC
	ret
LB_1763:
	RB_GRM
	jmp LB_1798
LB_1797:
	add r14,1 
LB_1798:
	cmp r14,r9
	jge LB_1799
	JZ_LINE_SPC BYTE [r13+8+r14], LB_1797
LB_1799
	lea rax,[r14+1]
	cmp rax,r9
	jg LB_1802
	jmp LB_1803
LB_1802:
	mov r8,unt_1
	jmp LB_1800
LB_1803:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],40
	jnz LB_1804
	jmp LB_1805
LB_1804:
	mov r8,unt_1
	jmp LB_1800
LB_1805:
	add r14,1
	jmp LB_1801
LB_1800:
	add rsp,0
	jmp LB_1796
LB_1801:
	jmp LB_1807
LB_1806:
	add r14,1 
LB_1807:
	cmp r14,r9
	jge LB_1808
	JZ_LINE_SPC BYTE [r13+8+r14], LB_1806
LB_1808
	call GRM_215
	cmp BYTE [r8+6],0
	jnz LB_1811
	jmp LB_1812
LB_1811:
	jmp LB_1809
LB_1812:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a32◂ [ ] ) ⊢ 8'(= a32◂ [ ] )
; .mov_ptn 2'(= a32◂ [ ] ) ⊢ 8'(= a32◂ [ ] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_1810
LB_1809:
	add rsp,0
	jmp LB_1796
LB_1810:
	jmp LB_1814
LB_1813:
	add r14,1 
LB_1814:
	cmp r14,r9
	jge LB_1815
	JZ_LINE_SPC BYTE [r13+8+r14], LB_1813
LB_1815
	lea rax,[r14+1]
	cmp rax,r9
	jg LB_1818
	jmp LB_1819
LB_1818:
	mov r8,unt_1
	jmp LB_1816
LB_1819:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],41
	jnz LB_1820
	jmp LB_1821
LB_1820:
	mov r8,unt_1
	jmp LB_1816
LB_1821:
	add r14,1
	jmp LB_1817
LB_1816:
	add rsp,8
	jmp LB_1796
LB_1817:
	mov QWORD [rsp+8*1],r14
	mov r13,QWORD [rsp+16+8*1]
	mov r14,QWORD [rsp+8*1]
	jmp LB_1822
LB_1822
;; rsp=1 , %1369~1'(= r ) %1368~0'(= r ) %1367~8'(= a32◂ [ ] ) 
; #24 8'(= a32◂ [ ] ) ⊢ 0(<2)◂8'(= a32◂ [ ] )
;; rsp=1 , %1370~0(<2)◂8'(= a32◂ [ ] ) %1369~1'(= r ) %1368~0'(= r ) 
; ∎ 0(<2)◂8'(= a32◂ [ ] )
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂8'(= a32◂ [ ] ) ⊢ 2'(= a3◂ [ a32◂ [ ]] )
; .mov_ptn 0(<2)◂8'(= a32◂ [ ] ) ⊢ 2'(= a3◂ [ a32◂ [ ]] )
	mov rax,QWORD [rsp-8+8*1]
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,8
	jmp LB_1823
LB_1823:
	cmp BYTE [r8+6],0
	jnz LB_1796
	POP_GRM_SCC
	ret
LB_1796:
	RB_GRM
	jmp LB_1826
LB_1825:
	add r14,1 
LB_1826:
	cmp r14,r9
	jge LB_1827
	JZ_LINE_SPC BYTE [r13+8+r14], LB_1825
LB_1827
	call GRM_220
	cmp BYTE [r8+6],0
	jnz LB_1830
	jmp LB_1831
LB_1830:
	jmp LB_1828
LB_1831:
	sub rsp,8
; .mov_ptn2 2'(= {| l |} ) ⊢ 8'(= {| l |} )
; .mov_ptn 2'(= {| l |} ) ⊢ 8'(= {| l |} )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_1829
LB_1828:
	add rsp,0
	jmp LB_1824
LB_1829:
	mov QWORD [rsp+8*1],r14
	mov r13,QWORD [rsp+16+8*1]
	mov r14,QWORD [rsp+8*1]
	jmp LB_1832
LB_1832
;; rsp=1 , %1373~1'(= r ) %1372~0'(= r ) %1371~8'(= {| l |} ) 
; #141 8'(= {| l |} ) ⊢ 4(<5)◂8'(= {| l |} )
;; rsp=1 , %1374~4(<5)◂8'(= {| l |} ) %1373~1'(= r ) %1372~0'(= r ) 
; #24 4(<5)◂8'(= {| l |} ) ⊢ 0(<2)◂4(<5)◂8'(= {| l |} )
;; rsp=1 , %1375~0(<2)◂4(<5)◂8'(= {| l |} ) %1373~1'(= r ) %1372~0'(= r ) 
; ∎ 0(<2)◂4(<5)◂8'(= {| l |} )
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂4(<5)◂8'(= {| l |} ) ⊢ 2'(= a3◂ [ a32◂ [ ]] )
; .mov_ptn 0(<2)◂4(<5)◂8'(= {| l |} ) ⊢ 2'(= a3◂ [ a32◂ [ ]] )
	mov rax,QWORD [rsp-8+8*1]
	mov BYTE [rax+6],4
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,8
	jmp LB_1833
LB_1833:
	cmp BYTE [r8+6],0
	jnz LB_1824
	POP_GRM_SCC
	ret
LB_1824:
	RB_GRM
	jmp LB_1836
LB_1835:
	add r14,1 
LB_1836:
	cmp r14,r9
	jge LB_1837
	JZ_LINE_SPC BYTE [r13+8+r14], LB_1835
LB_1837
	call GRM_194
	cmp BYTE [r8+6],0
	jnz LB_1840
	jmp LB_1841
LB_1840:
	jmp LB_1838
LB_1841:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a18◂ [ ] ) ⊢ 8'(= a18◂ [ ] )
; .mov_ptn 2'(= a18◂ [ ] ) ⊢ 8'(= a18◂ [ ] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_1839
LB_1838:
	add rsp,0
	jmp LB_1834
LB_1839:
	mov QWORD [rsp+8*1],r14
	mov r13,QWORD [rsp+16+8*1]
	mov r14,QWORD [rsp+8*1]
	jmp LB_1842
LB_1842
;; rsp=1 , %1378~1'(= r ) %1377~0'(= r ) %1376~8'(= a18◂ [ ] ) 
; #142 8'(= a18◂ [ ] ) ⊢ 3(<5)◂8'(= a18◂ [ ] )
;; rsp=1 , %1379~3(<5)◂8'(= a18◂ [ ] ) %1378~1'(= r ) %1377~0'(= r ) 
; #24 3(<5)◂8'(= a18◂ [ ] ) ⊢ 0(<2)◂3(<5)◂8'(= a18◂ [ ] )
;; rsp=1 , %1380~0(<2)◂3(<5)◂8'(= a18◂ [ ] ) %1378~1'(= r ) %1377~0'(= r ) 
; ∎ 0(<2)◂3(<5)◂8'(= a18◂ [ ] )
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂3(<5)◂8'(= a18◂ [ ] ) ⊢ 2'(= a3◂ [ a32◂ [ ]] )
; .mov_ptn 0(<2)◂3(<5)◂8'(= a18◂ [ ] ) ⊢ 2'(= a3◂ [ a32◂ [ ]] )
	mov rax,QWORD [rsp-8+8*1]
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],3
	mov QWORD [rax+8],rdi
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,8
	jmp LB_1843
LB_1843:
	cmp BYTE [r8+6],0
	jnz LB_1834
	POP_GRM_SCC
	ret
LB_1834:
	POP_GRM_FAIL 
	ret
ETR_220:
	mov r9,0x0000_ffff_ffff_ffff
	and r9,[r13]
	call GRM_220
	ret
GRM_220:
	PUSH_GRM
	call GRM_79
	cmp BYTE [r8+6],0
	jnz LB_1847
	jmp LB_1848
LB_1847:
	jmp LB_1845
LB_1848:
	sub rsp,8
; .mov_ptn2 2'(= {| l |} ) ⊢ 8'(= {| l |} )
; .mov_ptn 2'(= {| l |} ) ⊢ 8'(= {| l |} )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_1846
LB_1845:
	add rsp,0
	jmp LB_1844
LB_1846:
	lea rax,[r14+1]
	cmp rax,r9
	jg LB_1851
	jmp LB_1852
LB_1851:
	mov r8,unt_1
	jmp LB_1849
LB_1852:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],39
	jnz LB_1853
	jmp LB_1854
LB_1853:
	mov r8,unt_1
	jmp LB_1849
LB_1854:
	add r14,1
	jmp LB_1850
LB_1849:
	add rsp,8
	jmp LB_1844
LB_1850:
	mov QWORD [rsp+8*1],r14
	mov r13,QWORD [rsp+16+8*1]
	mov r14,QWORD [rsp+8*1]
	jmp LB_1855
LB_1855
;; rsp=1 , %1383~1'(= r ) %1382~0'(= r ) %1381~8'(= {| l |} ) 
; #24 8'(= {| l |} ) ⊢ 0(<2)◂8'(= {| l |} )
;; rsp=1 , %1384~0(<2)◂8'(= {| l |} ) %1383~1'(= r ) %1382~0'(= r ) 
; ∎ 0(<2)◂8'(= {| l |} )
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂8'(= {| l |} ) ⊢ 2'(= a3◂ [ {| l |}] )
; .mov_ptn 0(<2)◂8'(= {| l |} ) ⊢ 2'(= a3◂ [ {| l |}] )
	mov rax,QWORD [rsp-8+8*1]
	mov BYTE [rax+6],0
	mov r8,rax
	add rsp,8
	jmp LB_1856
LB_1856:
	cmp BYTE [r8+6],0
	jnz LB_1844
	POP_GRM_SCC
	ret
LB_1844:
	POP_GRM_FAIL 
	ret
LB_1876:
	movzx rax,BYTE [r8+6]
	jmp QWORD [LB_1879+8*rax]
LB_1879: dq LB_1877,LB_1878
LB_1877:
	jmp LB_1880
LB_1878:
	FREE_LN r8 
	mov r8,QWORD [r8+8]
	call LB_1881
	jmp LB_1880
LB_1880:
	ret
LB_1881:
	movzx rax,BYTE [r8+6]
	jmp QWORD [LB_1884+8*rax]
LB_1884: dq LB_1882,LB_1883
LB_1882:
	push r8
	mov r8,QWORD [r8+8+8*0]
	push r8
	mov r8,QWORD [r8+8+8*0]
	pop r8 
	push r8
	mov r8,QWORD [r8+8+8*1]
	pop r8 
	push r8
	mov r8,QWORD [r8+8+8*2]
	mov rdi,r8
	call free_s8
	pop r8 
	FREE_RCD 3, r8
	pop r8 
	push r8
	mov r8,QWORD [r8+8+8*1]
	call LB_1881
	pop r8 
	FREE_RCD 2, r8
	jmp LB_1885
LB_1883:
	jmp LB_1885
LB_1885:
	ret
LB_1985: ;; #58 { 0'(= a2◂ [ *{ rr{| l |}}] ) 1'(= a2◂ [ *{ rr{| l |}}] ) } ⊢ 0'(= a2◂ [ *{ rr{| l |}}] ) : ({ _lst◂{ _r64 _r64 _s8 } _lst◂{ _r64 _r64 _s8 } }→_lst◂{ _r64 _r64 _s8 })
;; rsp=0 , %127~1'(= a2◂ [ *{ rr{| l |}}] ) %126~0'(= a2◂ [ *{ rr{| l |}}] ) 
;; ? 0'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 0(<2)◂{ 2'(= *{ rr{| l |}} ) 3'(= a2◂ [ *{ rr{| l |}}] ) }
	mov rdi,r13
	cmp BYTE [rdi+6],0
	jnz LB_1987
	jmp LB_1988
LB_1987:
	jmp LB_1986
LB_1988:
	mov r8, QWORD [r13+8]
	mov r9, QWORD [r13+16]
	mov QWORD [GBG_VCT+8*0],r13
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_RCD 2,rdi
;; rsp=0 , %129~3'(= a2◂ [ *{ rr{| l |}}] ) %128~2'(= *{ rr{| l |}} ) %127~1'(= a2◂ [ *{ rr{| l |}}] ) 
; #58 { 3'(= a2◂ [ *{ rr{| l |}}] ) 1'(= a2◂ [ *{ rr{| l |}}] ) } ⊢ 0'(= a2◂ [ *{ rr{| l |}}] )
	sub rsp,8
	mov QWORD [rsp+8*0],r8
; .mov_ptn2 { 3'(= a2◂ [ *{ rr{| l |}}] ) 1'(= a2◂ [ *{ rr{| l |}}] ) } ⊢ { 0'(= a2◂ [ *{ rr{| l |}}] ) 1'(= a2◂ [ *{ rr{| l |}}] ) }
; .mov_ptn 3'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 0'(= a2◂ [ *{ rr{| l |}}] )
	mov rax,r9
	mov r13,rax
	call LB_1985
	mov r8,QWORD [rsp-8+8*1]
	add rsp,8
;; rsp=0 , %130~0'(= a2◂ [ *{ rr{| l |}}] ) %128~2'(= *{ rr{| l |}} ) 
; #23 { 2'(= *{ rr{| l |}} ) 0'(= a2◂ [ *{ rr{| l |}}] ) } ⊢ 0(<2)◂{ 2'(= *{ rr{| l |}} ) 0'(= a2◂ [ *{ rr{| l |}}] ) }
;; rsp=0 , %131~0(<2)◂{ 2'(= *{ rr{| l |}} ) 0'(= a2◂ [ *{ rr{| l |}}] ) } 
; ∎ 0(<2)◂{ 2'(= *{ rr{| l |}} ) 0'(= a2◂ [ *{ rr{| l |}}] ) }
; .mov_ptn2 0(<2)◂{ 2'(= *{ rr{| l |}} ) 0'(= a2◂ [ *{ rr{| l |}}] ) } ⊢ 0'(= a2◂ [ *{ rr{| l |}}] )
	mov r14,r13
; .mov_ptn 0(<2)◂{ 2'(= *{ rr{| l |}} ) 1'(= a2◂ [ *{ rr{| l |}}] ) } ⊢ 0'(= a2◂ [ *{ rr{| l |}}] )
	ALC_RCD 2, rax
	mov r9,rax
	mov rax,r8
	mov QWORD [r9+8+8*0],rax
	mov rax,r14
	mov QWORD [r9+8+8*1],rax
	mov rax,r9
	mov BYTE [rax+6],0
	mov r13,rax
	ret
LB_1986:
;; ?. 0'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 1(<2)◂{ }
;; rsp=0 , %127~1'(= a2◂ [ *{ rr{| l |}}] ) 
; ∎ 1'(= a2◂ [ *{ rr{| l |}}] )
; .mov_ptn2 1'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 0'(= a2◂ [ *{ rr{| l |}}] )
; .mov_ptn 1'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 0'(= a2◂ [ *{ rr{| l |}}] )
	mov rax,r14
	mov r13,rax
	ret
LB_1975: ;; #199 { 0'(= a44◂ [ *{ }] ) 1'(= a44◂ [ *{ }] ) } ⊢ 0'(= a44◂ [ *{ *{ }*{ }}] ) : ({ _t44◂{ } _t44◂{ } }→_t44◂{ { } { } })
;; rsp=0 , %1136~1'(= a44◂ [ *{ }] ) %1135~0'(= a44◂ [ *{ }] ) 
;; ? 0'(= a44◂ [ *{ }] ) ⊢ 0(<2)◂0'(= *{ } )
	mov rdi,r13
	cmp BYTE [rdi+6],0
	jnz LB_1977
	jmp LB_1978
LB_1977:
	jmp LB_1976
LB_1978:
;; rsp=0 , %1138~0'(= *{ } ) %1136~1'(= a44◂ [ *{ }] ) 
;; ? 1'(= a44◂ [ *{ }] ) ⊢ 0(<2)◂1'(= *{ } )
	mov rdi,r14
	cmp BYTE [rdi+6],0
	jnz LB_1980
	jmp LB_1981
LB_1980:
	jmp LB_1979
LB_1981:
;; rsp=0 , %1140~1'(= *{ } ) %1138~0'(= *{ } ) 
; #198 { 0'(= *{ } ) 1'(= *{ } ) } ⊢ 0(<2)◂{ 0'(= *{ } ) 1'(= *{ } ) }
;; rsp=0 , %1141~0(<2)◂{ 0'(= *{ } ) 1'(= *{ } ) } 
; ∎ 0(<2)◂{ 0'(= *{ } ) 1'(= *{ } ) }
; .mov_ptn2 0(<2)◂{ 0'(= *{ } ) 1'(= *{ } ) } ⊢ 0'(= a44◂ [ *{ *{ }*{ }}] )
	mov r8,r13
; .mov_ptn 0(<2)◂{ 2'(= *{ } ) 1'(= *{ } ) } ⊢ 0'(= a44◂ [ *{ *{ }*{ }}] )
	ALC_RCD 2, rax
	mov r9,rax
	mov rax,r8
	mov QWORD [r9+8+8*0],rax
	mov rax,r14
	mov QWORD [r9+8+8*1],rax
	mov rax,r9
	mov BYTE [rax+6],0
	mov r13,rax
	ret
LB_1979:
;; ?. 1'(= a44◂ [ *{ }] ) ⊢ 1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] )
	mov QWORD [GBG_VCT+8*0],rdi
	mov r8,QWORD [rdi+8]
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_LN rdi
;; rsp=0 , %1139~2'(= a2◂ [ *{ rr{| l |}}] ) %1138~0'(= *{ } ) 
; #197 2'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] )
;; rsp=0 , %1142~1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] ) %1138~0'(= *{ } ) 
; ∎ 1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] )
; .dlt.ptn 0'(= *{ } )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 0'(= a44◂ [ *{ *{ }*{ }}] )
; .mov_ptn 1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 0'(= a44◂ [ *{ *{ }*{ }}] )
	mov rax,r8
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],1
	mov QWORD [rax+8],rdi
	mov r13,rax
	ret
LB_1976:
;; ?. 0'(= a44◂ [ *{ }] ) ⊢ 1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] )
	mov QWORD [GBG_VCT+8*0],rdi
	mov r8,QWORD [rdi+8]
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_LN rdi
;; rsp=0 , %1137~2'(= a2◂ [ *{ rr{| l |}}] ) %1136~1'(= a44◂ [ *{ }] ) 
;; ? 1'(= a44◂ [ *{ }] ) ⊢ 0(<2)◂1'(= *{ } )
	mov rdi,r14
	cmp BYTE [rdi+6],0
	jnz LB_1983
	jmp LB_1984
LB_1983:
	jmp LB_1982
LB_1984:
;; rsp=0 , %1144~1'(= *{ } ) %1137~2'(= a2◂ [ *{ rr{| l |}}] ) 
; #197 2'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] )
;; rsp=0 , %1145~1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] ) %1144~1'(= *{ } ) 
; ∎ 1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] )
; .dlt.ptn 1'(= *{ } )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 0'(= a44◂ [ *{ *{ }*{ }}] )
; .mov_ptn 1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 0'(= a44◂ [ *{ *{ }*{ }}] )
	mov rax,r8
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],1
	mov QWORD [rax+8],rdi
	mov r13,rax
	ret
LB_1982:
;; ?. 1'(= a44◂ [ *{ }] ) ⊢ 1(<2)◂0'(= a2◂ [ *{ rr{| l |}}] )
	mov QWORD [GBG_VCT+8*0],rdi
	mov r13,QWORD [rdi+8]
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_LN rdi
;; rsp=0 , %1143~0'(= a2◂ [ *{ rr{| l |}}] ) %1137~2'(= a2◂ [ *{ rr{| l |}}] ) 
; #58 { 2'(= a2◂ [ *{ rr{| l |}}] ) 0'(= a2◂ [ *{ rr{| l |}}] ) } ⊢ 0'(= a2◂ [ *{ rr{| l |}}] )
; .mov_ptn2 { 2'(= a2◂ [ *{ rr{| l |}}] ) 0'(= a2◂ [ *{ rr{| l |}}] ) } ⊢ { 0'(= a2◂ [ *{ rr{| l |}}] ) 1'(= a2◂ [ *{ rr{| l |}}] ) }
; .mov_ptn 0'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 1'(= a2◂ [ *{ rr{| l |}}] )
	mov rax,r13
	mov r14,rax
; .mov_ptn 2'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 0'(= a2◂ [ *{ rr{| l |}}] )
	mov rax,r8
	mov r13,rax
	call LB_1985
;; rsp=0 , %1146~0'(= a2◂ [ *{ rr{| l |}}] ) 
; #197 0'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 1(<2)◂0'(= a2◂ [ *{ rr{| l |}}] )
;; rsp=0 , %1147~1(<2)◂0'(= a2◂ [ *{ rr{| l |}}] ) 
; ∎ 1(<2)◂0'(= a2◂ [ *{ rr{| l |}}] )
; .mov_ptn2 1(<2)◂0'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 0'(= a44◂ [ *{ *{ }*{ }}] )
	mov r14,r13
; .mov_ptn 1(<2)◂1'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 0'(= a44◂ [ *{ *{ }*{ }}] )
	mov rax,r14
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],1
	mov QWORD [rax+8],rdi
	mov r13,rax
	ret
ETR_221:
	mov r9,0x0000_ffff_ffff_ffff
	and r9,[r13]
	call GRM_221
	ret
GRM_221:
	PUSH_GRM
	jmp LB_1859
LB_1858:
	add r14,1 
LB_1859:
	cmp r14,r9
	jge LB_1860
	JZ_LINE_SPC BYTE [r13+8+r14], LB_1858
LB_1860
	lea rax,[r14+1]
	cmp rax,r9
	jg LB_1863
	jmp LB_1864
LB_1863:
	mov r8,unt_1
	jmp LB_1861
LB_1864:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],10
	jnz LB_1865
	jmp LB_1866
LB_1865:
	mov r8,unt_1
	jmp LB_1861
LB_1866:
	add r14,1
	jmp LB_1862
LB_1861:
	add rsp,0
	jmp LB_1857
LB_1862:
	jmp LB_1868
LB_1867:
	add r14,1 
LB_1868:
	cmp r14,r9
	jge LB_1869
	JZ_LINE_SPC BYTE [r13+8+r14], LB_1867
LB_1869
	call GRM_221
	cmp BYTE [r8+6],0
	jnz LB_1872
	jmp LB_1873
LB_1872:
	jmp LB_1870
LB_1873:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a44◂ [ *{ }] ) ⊢ 8'(= a44◂ [ *{ }] )
; .mov_ptn 2'(= a44◂ [ *{ }] ) ⊢ 8'(= a44◂ [ *{ }] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_1871
LB_1870:
	add rsp,0
	POP_GRM_FAIL
	ret
LB_1871:
	mov QWORD [rsp+8*1],r14
	mov r13,QWORD [rsp+16+8*1]
	mov r14,QWORD [rsp+8*1]
	jmp LB_1874
LB_1874
;; rsp=1 , %1387~1'(= r ) %1386~0'(= r ) %1385~8'(= a44◂ [ *{ }] ) 
; #198 { } ⊢ 0(<2)◂{ }
;; rsp=1 , %1388~0(<2)◂{ } %1387~1'(= r ) %1386~0'(= r ) %1385~8'(= a44◂ [ *{ }] ) 
; #24 0(<2)◂{ } ⊢ 0(<2)◂0(<2)◂{ }
;; rsp=1 , %1389~0(<2)◂0(<2)◂{ } %1387~1'(= r ) %1386~0'(= r ) %1385~8'(= a44◂ [ *{ }] ) 
; ∎ 0(<2)◂0(<2)◂{ }
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 8'(= a44◂ [ *{ }] )
	mov rdi,QWORD [rsp-8+8*1]
	C_PUSH_REGS
	mov r8,rdi
	call LB_1876
	C_POP_REGS
; .mov_ptn2 0(<2)◂0(<2)◂{ } ⊢ 2'(= a3◂ [ a44◂ [ *{ }]] )
; .mov_ptn 0(<2)◂0(<2)◂{ } ⊢ 2'(= a3◂ [ a44◂ [ *{ }]] )
	mov rax,unt 
	mov rax,unt_0
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,8
	jmp LB_1875
LB_1875:
	cmp BYTE [r8+6],0
	jnz LB_1857
	POP_GRM_SCC
	ret
LB_1857:
	RB_GRM
	jmp LB_1888
LB_1887:
	add r14,1 
LB_1888:
	cmp r14,r9
	jge LB_1889
	JZ_LINE_SPC BYTE [r13+8+r14], LB_1887
LB_1889
	lea rax,[r14+2]
	cmp rax,r9
	jg LB_1892
	jmp LB_1893
LB_1892:
	mov r8,unt_1
	jmp LB_1890
LB_1893:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],35
	jnz LB_1894
	cmp BYTE [rdi+1],35
	jnz LB_1894
	jmp LB_1895
LB_1894:
	mov r8,unt_1
	jmp LB_1890
LB_1895:
	add r14,2
	jmp LB_1891
LB_1890:
	add rsp,0
	jmp LB_1886
LB_1891:
	jmp LB_1897
LB_1896:
	add r14,1 
LB_1897:
	cmp r14,r9
	jge LB_1898
	JZ_LINE_SPC BYTE [r13+8+r14], LB_1896
LB_1898
	call GRM_224
	cmp BYTE [r8+6],0
	jnz LB_1901
	jmp LB_1902
LB_1901:
	jmp LB_1899
LB_1902:
	sub rsp,16
; .mov_ptn2 2'(= *{ rr} ) ⊢ { 8'(= r ) 9'(= r ) }
; .mov_ptn 2'(= *{ rr} ) ⊢ { 8'(= r ) 9'(= r ) }
	mov r10, QWORD [r8+8]
	mov QWORD [rsp-8+8*2],r10
	mov r11, QWORD [r8+16]
	mov QWORD [rsp-8+8*1],r11
	mov rdi,r8
	FREE_RCD 2,rdi
	jmp LB_1900
LB_1899:
	add rsp,0
	POP_GRM_FAIL
	ret
LB_1900:
	jmp LB_1904
LB_1903:
	add r14,1 
LB_1904:
	cmp r14,r9
	jge LB_1905
	JZ_LINE_SPC BYTE [r13+8+r14], LB_1903
LB_1905
	call GRM_221
	cmp BYTE [r8+6],0
	jnz LB_1908
	jmp LB_1909
LB_1908:
	jmp LB_1906
LB_1909:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a44◂ [ *{ }] ) ⊢ 10'(= a44◂ [ *{ }] )
; .mov_ptn 2'(= a44◂ [ *{ }] ) ⊢ 10'(= a44◂ [ *{ }] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_1907
LB_1906:
	add rsp,16
	POP_GRM_FAIL
	ret
LB_1907:
	mov QWORD [rsp+8*3],r14
	mov r13,QWORD [rsp+16+8*3]
	mov r14,QWORD [rsp+8*3]
	jmp LB_1910
LB_1910
;; rsp=3 , %1393~1'(= r ) %1392~0'(= r ) %1391~10'(= a44◂ [ *{ }] ) %1390~{ 8'(= r ) 9'(= r ) } 
; #198 { } ⊢ 0(<2)◂{ }
;; rsp=3 , %1394~0(<2)◂{ } %1393~1'(= r ) %1392~0'(= r ) %1391~10'(= a44◂ [ *{ }] ) %1390~{ 8'(= r ) 9'(= r ) } 
; #24 0(<2)◂{ } ⊢ 0(<2)◂0(<2)◂{ }
;; rsp=3 , %1395~0(<2)◂0(<2)◂{ } %1393~1'(= r ) %1392~0'(= r ) %1391~10'(= a44◂ [ *{ }] ) %1390~{ 8'(= r ) 9'(= r ) } 
; ∎ 0(<2)◂0(<2)◂{ }
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 10'(= a44◂ [ *{ }] )
	mov rdi,QWORD [rsp-8+8*1]
	C_PUSH_REGS
	mov r8,rdi
	call LB_1876
	C_POP_REGS
; .dlt.ptn { 8'(= r ) 9'(= r ) }
	mov rdi,QWORD [rsp-8+8*3]
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
	mov rdi,QWORD [rsp-8+8*2]
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂0(<2)◂{ } ⊢ 2'(= a3◂ [ a44◂ [ *{ }]] )
; .mov_ptn 0(<2)◂0(<2)◂{ } ⊢ 2'(= a3◂ [ a44◂ [ *{ }]] )
	mov rax,unt 
	mov rax,unt_0
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,24
	jmp LB_1911
LB_1911:
	cmp BYTE [r8+6],0
	jnz LB_1886
	POP_GRM_SCC
	ret
LB_1886:
	RB_GRM
	jmp LB_1914
LB_1913:
	add r14,1 
LB_1914:
	cmp r14,r9
	jge LB_1915
	JZ_LINE_SPC BYTE [r13+8+r14], LB_1913
LB_1915
	lea rax,[r14+2]
	cmp rax,r9
	jg LB_1918
	jmp LB_1919
LB_1918:
	mov r8,unt_1
	jmp LB_1916
LB_1919:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],92
	jnz LB_1920
	cmp BYTE [rdi+1],92
	jnz LB_1920
	jmp LB_1921
LB_1920:
	mov r8,unt_1
	jmp LB_1916
LB_1921:
	add r14,2
	jmp LB_1917
LB_1916:
	add rsp,0
	jmp LB_1912
LB_1917:
	jmp LB_1923
LB_1922:
	add r14,1 
LB_1923:
	cmp r14,r9
	jge LB_1924
	JZ_LINE_SPC BYTE [r13+8+r14], LB_1922
LB_1924
	call GRM_224
	cmp BYTE [r8+6],0
	jnz LB_1927
	jmp LB_1928
LB_1927:
	jmp LB_1925
LB_1928:
	sub rsp,16
; .mov_ptn2 2'(= *{ rr} ) ⊢ { 8'(= r ) 9'(= r ) }
; .mov_ptn 2'(= *{ rr} ) ⊢ { 8'(= r ) 9'(= r ) }
	mov r10, QWORD [r8+8]
	mov QWORD [rsp-8+8*2],r10
	mov r11, QWORD [r8+16]
	mov QWORD [rsp-8+8*1],r11
	mov rdi,r8
	FREE_RCD 2,rdi
	jmp LB_1926
LB_1925:
	add rsp,0
	POP_GRM_FAIL
	ret
LB_1926:
	jmp LB_1930
LB_1929:
	add r14,1 
LB_1930:
	cmp r14,r9
	jge LB_1931
	JZ_LINE_SPC BYTE [r13+8+r14], LB_1929
LB_1931
	call GRM_221
	cmp BYTE [r8+6],0
	jnz LB_1934
	jmp LB_1935
LB_1934:
	jmp LB_1932
LB_1935:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a44◂ [ *{ }] ) ⊢ 10'(= a44◂ [ *{ }] )
; .mov_ptn 2'(= a44◂ [ *{ }] ) ⊢ 10'(= a44◂ [ *{ }] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_1933
LB_1932:
	add rsp,16
	POP_GRM_FAIL
	ret
LB_1933:
	mov QWORD [rsp+8*3],r14
	mov r13,QWORD [rsp+16+8*3]
	mov r14,QWORD [rsp+8*3]
	jmp LB_1936
LB_1936
;; rsp=3 , %1399~1'(= r ) %1398~0'(= r ) %1397~10'(= a44◂ [ *{ }] ) %1396~{ 8'(= r ) 9'(= r ) } 
; #198 { } ⊢ 0(<2)◂{ }
;; rsp=3 , %1400~0(<2)◂{ } %1399~1'(= r ) %1398~0'(= r ) %1397~10'(= a44◂ [ *{ }] ) %1396~{ 8'(= r ) 9'(= r ) } 
; #24 0(<2)◂{ } ⊢ 0(<2)◂0(<2)◂{ }
;; rsp=3 , %1401~0(<2)◂0(<2)◂{ } %1399~1'(= r ) %1398~0'(= r ) %1397~10'(= a44◂ [ *{ }] ) %1396~{ 8'(= r ) 9'(= r ) } 
; ∎ 0(<2)◂0(<2)◂{ }
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 10'(= a44◂ [ *{ }] )
	mov rdi,QWORD [rsp-8+8*1]
	C_PUSH_REGS
	mov r8,rdi
	call LB_1876
	C_POP_REGS
; .dlt.ptn { 8'(= r ) 9'(= r ) }
	mov rdi,QWORD [rsp-8+8*3]
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
	mov rdi,QWORD [rsp-8+8*2]
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂0(<2)◂{ } ⊢ 2'(= a3◂ [ a44◂ [ *{ }]] )
; .mov_ptn 0(<2)◂0(<2)◂{ } ⊢ 2'(= a3◂ [ a44◂ [ *{ }]] )
	mov rax,unt 
	mov rax,unt_0
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,24
	jmp LB_1937
LB_1937:
	cmp BYTE [r8+6],0
	jnz LB_1912
	POP_GRM_SCC
	ret
LB_1912:
	RB_GRM
	jmp LB_1940
LB_1939:
	add r14,1 
LB_1940:
	cmp r14,r9
	jge LB_1941
	JZ_LINE_SPC BYTE [r13+8+r14], LB_1939
LB_1941
	lea rax,[r14+2]
	cmp rax,r9
	jg LB_1944
	jmp LB_1945
LB_1944:
	mov r8,unt_1
	jmp LB_1942
LB_1945:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],92
	jnz LB_1946
	cmp BYTE [rdi+1],91
	jnz LB_1946
	jmp LB_1947
LB_1946:
	mov r8,unt_1
	jmp LB_1942
LB_1947:
	add r14,2
	jmp LB_1943
LB_1942:
	add rsp,0
	jmp LB_1938
LB_1943:
	PUSH_GRM
	jmp LB_1951
LB_1950:
	add r14,1 
LB_1951:
	cmp r14,r9
	jge LB_1952
	JZ_LINE_SPC BYTE [r13+8+r14], LB_1950
LB_1952
	lea rax,[r14+1]
	cmp rax,r9
	jg LB_1955
	jmp LB_1956
LB_1955:
	mov r8,unt_1
	jmp LB_1953
LB_1956:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],10
	jnz LB_1957
	jmp LB_1958
LB_1957:
	mov r8,unt_1
	jmp LB_1953
LB_1958:
	add r14,1
	jmp LB_1954
LB_1953:
	add rsp,0
	jmp LB_1949
LB_1954:
	jmp LB_1960
LB_1959:
	add r14,1 
LB_1960:
	cmp r14,r9
	jge LB_1961
	JZ_LINE_SPC BYTE [r13+8+r14], LB_1959
LB_1961
	call GRM_222
	cmp BYTE [r8+6],0
	jnz LB_1964
	jmp LB_1965
LB_1964:
	jmp LB_1962
LB_1965:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a44◂ [ *{ }] ) ⊢ 8'(= a44◂ [ *{ }] )
; .mov_ptn 2'(= a44◂ [ *{ }] ) ⊢ 8'(= a44◂ [ *{ }] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_1963
LB_1962:
	add rsp,0
	jmp LB_1949
LB_1963:
	jmp LB_1967
LB_1966:
	add r14,1 
LB_1967:
	cmp r14,r9
	jge LB_1968
	JZ_LINE_SPC BYTE [r13+8+r14], LB_1966
LB_1968
	call GRM_221
	cmp BYTE [r8+6],0
	jnz LB_1971
	jmp LB_1972
LB_1971:
	jmp LB_1969
LB_1972:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a44◂ [ *{ }] ) ⊢ 9'(= a44◂ [ *{ }] )
; .mov_ptn 2'(= a44◂ [ *{ }] ) ⊢ 9'(= a44◂ [ *{ }] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_1970
LB_1969:
	add rsp,8
	jmp LB_1949
LB_1970:
	mov QWORD [rsp+8*2],r14
	mov r13,QWORD [rsp+16+8*2]
	mov r14,QWORD [rsp+8*2]
	jmp LB_1973
LB_1973
;; rsp=2 , %1407~1'(= r ) %1406~0'(= r ) %1405~9'(= a44◂ [ *{ }] ) %1404~8'(= a44◂ [ *{ }] ) 
; #199 { 8'(= a44◂ [ *{ }] ) 9'(= a44◂ [ *{ }] ) } ⊢ 2'(= a44◂ [ *{ *{ }*{ }}] )
	sub rsp,16
	mov QWORD [rsp+8*0],r13
	mov QWORD [rsp+8*1],r14
; .mov_ptn2 { 8'(= a44◂ [ *{ }] ) 9'(= a44◂ [ *{ }] ) } ⊢ { 0'(= a44◂ [ *{ }] ) 1'(= a44◂ [ *{ }] ) }
; .mov_ptn 9'(= a44◂ [ *{ }] ) ⊢ 1'(= a44◂ [ *{ }] )
	mov rax,QWORD [rsp-8+8*3]
	mov r14,rax
; .mov_ptn 8'(= a44◂ [ *{ }] ) ⊢ 0'(= a44◂ [ *{ }] )
	mov rax,QWORD [rsp-8+8*4]
	mov r13,rax
	call LB_1975
	mov r14,QWORD [rsp-8+8*2]
	mov r8,r13
	mov r13,QWORD [rsp-8+8*1]
	add rsp,32
;; rsp=0 , %1408~2'(= a44◂ [ *{ *{ }*{ }}] ) %1407~1'(= r ) %1406~0'(= r ) 
;; ? 2'(= a44◂ [ *{ *{ }*{ }}] ) ⊢ 0(<2)◂{ 3'(= *{ } ) 4'(= *{ } ) }
	mov rdi,r8
	cmp BYTE [rdi+6],0
	jnz LB_1990
	jmp LB_1991
LB_1990:
	jmp LB_1989
LB_1991:
	mov r9, QWORD [r8+8]
	mov r10, QWORD [r8+16]
	mov QWORD [GBG_VCT+8*0],r8
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_RCD 2,rdi
;; rsp=0 , %1411~4'(= *{ } ) %1410~3'(= *{ } ) %1407~1'(= r ) %1406~0'(= r ) 
; #198 { } ⊢ 0(<2)◂{ }
;; rsp=0 , %1412~0(<2)◂{ } %1411~4'(= *{ } ) %1410~3'(= *{ } ) %1407~1'(= r ) %1406~0'(= r ) 
; #24 0(<2)◂{ } ⊢ 0(<2)◂0(<2)◂{ }
;; rsp=0 , %1413~0(<2)◂0(<2)◂{ } %1411~4'(= *{ } ) %1410~3'(= *{ } ) %1407~1'(= r ) %1406~0'(= r ) 
; ∎ 0(<2)◂0(<2)◂{ }
; .dlt.ptn 4'(= *{ } )
	mov rdi,r10
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 3'(= *{ } )
	mov rdi,r9
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂0(<2)◂{ } ⊢ 2'(= a3◂ [ a44◂ [ *{ }]] )
; .mov_ptn 0(<2)◂0(<2)◂{ } ⊢ 2'(= a3◂ [ a44◂ [ *{ }]] )
	mov rax,unt 
	mov rax,unt_0
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	jmp LB_1974
LB_1989:
;; ?. 2'(= a44◂ [ *{ *{ }*{ }}] ) ⊢ 1(<2)◂3'(= a2◂ [ *{ rr{| l |}}] )
	mov QWORD [GBG_VCT+8*0],rdi
	mov r9,QWORD [rdi+8]
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_LN rdi
;; rsp=0 , %1409~3'(= a2◂ [ *{ rr{| l |}}] ) %1407~1'(= r ) %1406~0'(= r ) 
; #201 3'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 2'(= {| l |} )
	sub rsp,16
	mov QWORD [rsp+8*0],r13
	mov QWORD [rsp+8*1],r14
; .mov_ptn2 3'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 0'(= a2◂ [ *{ rr{| l |}}] )
; .mov_ptn 3'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 0'(= a2◂ [ *{ rr{| l |}}] )
	mov rax,r9
	mov r13,rax
	call ETR_201
	mov r14,QWORD [rsp-8+8*2]
	mov r8,r13
	mov r13,QWORD [rsp-8+8*1]
	add rsp,16
;; rsp=0 , %1414~2'(= {| l |} ) %1407~1'(= r ) %1406~0'(= r ) 
; #10 2'(= {| l |} ) ⊢ 2'(= {| l |} )
	mov rdi,fmt_emt
	call emt_stg
	mov rdi,r8
	C_PUSH_REGS
	mov r8,rdi
	mov rdi,r8
	call emt_s8
	C_POP_REGS
	mov rdi,fmt_nl
	call emt_stg
	jmp LB_1992
LB_1992:
;; rsp=0 , %1415~2'(= {| l |} ) %1407~1'(= r ) %1406~0'(= r ) 
	mov rdi,LB_1993
	call emt_stg 
	jmp err
LB_1974:
	cmp BYTE [r8+6],0
	jnz LB_1949
	POP_GRM_SCC
	jmp LB_1948
LB_1949:
	RB_GRM
	mov QWORD [rsp+8*0],r14
	mov r13,QWORD [rsp+16+8*0]
	mov r14,QWORD [rsp+8*0]
	jmp LB_1995
LB_1995
;; rsp=0 , %1417~1'(= r ) %1416~0'(= r ) 
; » _^ .. ⊢ ..
; .. //
	mov rdi,0
	sub rsp,128
	push rdi 
	lea rdi,[rsp+8]
	mov rdx,r13
	mov rsi,fmt_d
 xor rax,rax
	C_CALL_SF sprintf
	pop rdi
	add rdi,rax 
	push rax 
	sub rsp,128
	push rdi 
	lea rdi,[rsp+8]
	mov rdx,r14
	mov rsi,fmt_d
 xor rax,rax
	C_CALL_SF sprintf
	pop rdi
	add rdi,rax 
	push rax 
	add rdi,11
	push rdi 
	call mlc_s8
	pop rdi
	mov r8,rax
	lea rdi,[rax+7+rdi]
	std 
	mov QWORD [tmp],rcx 
	lea rsi,[LB_1997+2-1]
	mov rcx,2
	rep movsb
	pop rcx
	lea rsi,[rsp+rcx-1]
	rep movsb
	add rsp,128
	lea rsi,[LB_1998+1-1]
	mov rcx,1
	rep movsb
	pop rcx
	lea rsi,[rsp+rcx-1]
	rep movsb
	add rsp,128
	lea rsi,[LB_1999+8-1]
	mov rcx,8
	rep movsb
	mov rcx,QWORD [tmp] 
;; rsp=0 , %1420~2'(= {| l |} ) %1419~1'(= r ) %1418~0'(= r ) 
; #10 2'(= {| l |} ) ⊢ 2'(= {| l |} )
	mov rdi,fmt_emt
	call emt_stg
	mov rdi,r8
	C_PUSH_REGS
	mov r8,rdi
	mov rdi,r8
	call emt_s8
	C_POP_REGS
	mov rdi,fmt_nl
	call emt_stg
	jmp LB_2000
LB_2000:
;; rsp=0 , %1421~2'(= {| l |} ) %1419~1'(= r ) %1418~0'(= r ) 
	mov rdi,LB_2001
	call emt_stg 
	jmp err
LB_1996:
	cmp BYTE [r8+6],0
	jnz LB_1994
	POP_GRM_SCC
	jmp LB_1948
LB_1994:
	POP_GRM_FAIL 
	jmp LB_1948
LB_1948:
	cmp BYTE [r8+6],0
	jnz LB_2002
	jmp LB_2003
LB_2002:
	add rsp,0
	POP_GRM_FAIL
	ret
LB_2003:
	mov QWORD [rsp+8*0],r14
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi 
; .mov_ptn2 2'(= a44◂ [ *{ }] ) ⊢ 3'(= a44◂ [ *{ }] )
	mov r10,r9
; .mov_ptn 2'(= a44◂ [ *{ }] ) ⊢ 3'(= a44◂ [ *{ }] )
	mov rax,r8
	mov r9,rax
	mov r13,QWORD [rsp+16+8*0]
	mov r14,QWORD [rsp+8*0]
	jmp LB_2004
LB_2004
;; rsp=0 , %1422~3'(= a44◂ [ *{ }] ) %1403~1'(= r ) %1402~0'(= r ) 
; #24 3'(= a44◂ [ *{ }] ) ⊢ 0(<2)◂3'(= a44◂ [ *{ }] )
;; rsp=0 , %1423~0(<2)◂3'(= a44◂ [ *{ }] ) %1403~1'(= r ) %1402~0'(= r ) 
; ∎ 0(<2)◂3'(= a44◂ [ *{ }] )
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂3'(= a44◂ [ *{ }] ) ⊢ 2'(= a3◂ [ a44◂ [ *{ }]] )
; .mov_ptn 0(<2)◂3'(= a44◂ [ *{ }] ) ⊢ 2'(= a3◂ [ a44◂ [ *{ }]] )
	mov rax,r9
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	jmp LB_2005
LB_2005:
	cmp BYTE [r8+6],0
	jnz LB_1938
	POP_GRM_SCC
	ret
LB_1938:
	RB_GRM
	mov QWORD [rsp+8*0],r14
	mov r13,QWORD [rsp+16+8*0]
	mov r14,QWORD [rsp+8*0]
	jmp LB_2007
LB_2007
;; rsp=0 , %1425~1'(= r ) %1424~0'(= r ) 
; #198 { } ⊢ 0(<2)◂{ }
;; rsp=0 , %1426~0(<2)◂{ } %1425~1'(= r ) %1424~0'(= r ) 
; #24 0(<2)◂{ } ⊢ 0(<2)◂0(<2)◂{ }
;; rsp=0 , %1427~0(<2)◂0(<2)◂{ } %1425~1'(= r ) %1424~0'(= r ) 
; ∎ 0(<2)◂0(<2)◂{ }
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂0(<2)◂{ } ⊢ 2'(= a3◂ [ a44◂ [ *{ }]] )
; .mov_ptn 0(<2)◂0(<2)◂{ } ⊢ 2'(= a3◂ [ a44◂ [ *{ }]] )
	mov rax,unt 
	mov rax,unt_0
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	jmp LB_2008
LB_2008:
	cmp BYTE [r8+6],0
	jnz LB_2006
	POP_GRM_SCC
	ret
LB_2006:
	POP_GRM_FAIL 
	ret
ETR_222:
	mov r9,0x0000_ffff_ffff_ffff
	and r9,[r13]
	call GRM_222
	ret
GRM_222:
	PUSH_GRM
	jmp LB_2011
LB_2010:
	add r14,1 
LB_2011:
	cmp r14,r9
	jge LB_2012
	JZ_LINE_SPC BYTE [r13+8+r14], LB_2010
LB_2012
	lea rax,[r14+2]
	cmp rax,r9
	jg LB_2015
	jmp LB_2016
LB_2015:
	mov r8,unt_1
	jmp LB_2013
LB_2016:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],92
	jnz LB_2017
	cmp BYTE [rdi+1],91
	jnz LB_2017
	jmp LB_2018
LB_2017:
	mov r8,unt_1
	jmp LB_2013
LB_2018:
	add r14,2
	jmp LB_2014
LB_2013:
	add rsp,0
	jmp LB_2009
LB_2014:
	PUSH_GRM
	jmp LB_2022
LB_2021:
	add r14,1 
LB_2022:
	cmp r14,r9
	jge LB_2023
	JZ_LINE_SPC BYTE [r13+8+r14], LB_2021
LB_2023
	lea rax,[r14+1]
	cmp rax,r9
	jg LB_2026
	jmp LB_2027
LB_2026:
	mov r8,unt_1
	jmp LB_2024
LB_2027:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],10
	jnz LB_2028
	jmp LB_2029
LB_2028:
	mov r8,unt_1
	jmp LB_2024
LB_2029:
	add r14,1
	jmp LB_2025
LB_2024:
	add rsp,0
	jmp LB_2020
LB_2025:
	jmp LB_2031
LB_2030:
	add r14,1 
LB_2031:
	cmp r14,r9
	jge LB_2032
	JZ_LINE_SPC BYTE [r13+8+r14], LB_2030
LB_2032
	call GRM_222
	cmp BYTE [r8+6],0
	jnz LB_2035
	jmp LB_2036
LB_2035:
	jmp LB_2033
LB_2036:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a44◂ [ *{ }] ) ⊢ 8'(= a44◂ [ *{ }] )
; .mov_ptn 2'(= a44◂ [ *{ }] ) ⊢ 8'(= a44◂ [ *{ }] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_2034
LB_2033:
	add rsp,0
	jmp LB_2020
LB_2034:
	jmp LB_2038
LB_2037:
	add r14,1 
LB_2038:
	cmp r14,r9
	jge LB_2039
	JZ_LINE_SPC BYTE [r13+8+r14], LB_2037
LB_2039
	call GRM_222
	cmp BYTE [r8+6],0
	jnz LB_2042
	jmp LB_2043
LB_2042:
	jmp LB_2040
LB_2043:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a44◂ [ *{ }] ) ⊢ 9'(= a44◂ [ *{ }] )
; .mov_ptn 2'(= a44◂ [ *{ }] ) ⊢ 9'(= a44◂ [ *{ }] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_2041
LB_2040:
	add rsp,8
	jmp LB_2020
LB_2041:
	mov QWORD [rsp+8*2],r14
	mov r13,QWORD [rsp+16+8*2]
	mov r14,QWORD [rsp+8*2]
	jmp LB_2044
LB_2044
;; rsp=2 , %1433~1'(= r ) %1432~0'(= r ) %1431~9'(= a44◂ [ *{ }] ) %1430~8'(= a44◂ [ *{ }] ) 
; #199 { 8'(= a44◂ [ *{ }] ) 9'(= a44◂ [ *{ }] ) } ⊢ 2'(= a44◂ [ *{ *{ }*{ }}] )
	sub rsp,16
	mov QWORD [rsp+8*0],r13
	mov QWORD [rsp+8*1],r14
; .mov_ptn2 { 8'(= a44◂ [ *{ }] ) 9'(= a44◂ [ *{ }] ) } ⊢ { 0'(= a44◂ [ *{ }] ) 1'(= a44◂ [ *{ }] ) }
; .mov_ptn 9'(= a44◂ [ *{ }] ) ⊢ 1'(= a44◂ [ *{ }] )
	mov rax,QWORD [rsp-8+8*3]
	mov r14,rax
; .mov_ptn 8'(= a44◂ [ *{ }] ) ⊢ 0'(= a44◂ [ *{ }] )
	mov rax,QWORD [rsp-8+8*4]
	mov r13,rax
	call LB_1975
	mov r14,QWORD [rsp-8+8*2]
	mov r8,r13
	mov r13,QWORD [rsp-8+8*1]
	add rsp,32
;; rsp=0 , %1434~2'(= a44◂ [ *{ *{ }*{ }}] ) %1433~1'(= r ) %1432~0'(= r ) 
;; ? 2'(= a44◂ [ *{ *{ }*{ }}] ) ⊢ 0(<2)◂{ 3'(= *{ } ) 4'(= *{ } ) }
	mov rdi,r8
	cmp BYTE [rdi+6],0
	jnz LB_2047
	jmp LB_2048
LB_2047:
	jmp LB_2046
LB_2048:
	mov r9, QWORD [r8+8]
	mov r10, QWORD [r8+16]
	mov QWORD [GBG_VCT+8*0],r8
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_RCD 2,rdi
;; rsp=0 , %1437~4'(= *{ } ) %1436~3'(= *{ } ) %1433~1'(= r ) %1432~0'(= r ) 
; #198 { } ⊢ 0(<2)◂{ }
;; rsp=0 , %1438~0(<2)◂{ } %1437~4'(= *{ } ) %1436~3'(= *{ } ) %1433~1'(= r ) %1432~0'(= r ) 
; #24 0(<2)◂{ } ⊢ 0(<2)◂0(<2)◂{ }
;; rsp=0 , %1439~0(<2)◂0(<2)◂{ } %1437~4'(= *{ } ) %1436~3'(= *{ } ) %1433~1'(= r ) %1432~0'(= r ) 
; ∎ 0(<2)◂0(<2)◂{ }
; .dlt.ptn 4'(= *{ } )
	mov rdi,r10
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 3'(= *{ } )
	mov rdi,r9
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂0(<2)◂{ } ⊢ 2'(= a3◂ [ a44◂ [ *{ }]] )
; .mov_ptn 0(<2)◂0(<2)◂{ } ⊢ 2'(= a3◂ [ a44◂ [ *{ }]] )
	mov rax,unt 
	mov rax,unt_0
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	jmp LB_2045
LB_2046:
;; ?. 2'(= a44◂ [ *{ *{ }*{ }}] ) ⊢ 1(<2)◂3'(= a2◂ [ *{ rr{| l |}}] )
	mov QWORD [GBG_VCT+8*0],rdi
	mov r9,QWORD [rdi+8]
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_LN rdi
;; rsp=0 , %1435~3'(= a2◂ [ *{ rr{| l |}}] ) %1433~1'(= r ) %1432~0'(= r ) 
; #201 3'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 2'(= {| l |} )
	sub rsp,16
	mov QWORD [rsp+8*0],r13
	mov QWORD [rsp+8*1],r14
; .mov_ptn2 3'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 0'(= a2◂ [ *{ rr{| l |}}] )
; .mov_ptn 3'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 0'(= a2◂ [ *{ rr{| l |}}] )
	mov rax,r9
	mov r13,rax
	call ETR_201
	mov r14,QWORD [rsp-8+8*2]
	mov r8,r13
	mov r13,QWORD [rsp-8+8*1]
	add rsp,16
;; rsp=0 , %1440~2'(= {| l |} ) %1433~1'(= r ) %1432~0'(= r ) 
; #10 2'(= {| l |} ) ⊢ 2'(= {| l |} )
	mov rdi,fmt_emt
	call emt_stg
	mov rdi,r8
	C_PUSH_REGS
	mov r8,rdi
	mov rdi,r8
	call emt_s8
	C_POP_REGS
	mov rdi,fmt_nl
	call emt_stg
	jmp LB_2049
LB_2049:
;; rsp=0 , %1441~2'(= {| l |} ) %1433~1'(= r ) %1432~0'(= r ) 
	mov rdi,LB_2050
	call emt_stg 
	jmp err
LB_2045:
	cmp BYTE [r8+6],0
	jnz LB_2020
	POP_GRM_SCC
	jmp LB_2019
LB_2020:
	RB_GRM
	mov QWORD [rsp+8*0],r14
	mov r13,QWORD [rsp+16+8*0]
	mov r14,QWORD [rsp+8*0]
	jmp LB_2052
LB_2052
;; rsp=0 , %1443~1'(= r ) %1442~0'(= r ) 
; #22 { } ⊢ 1(<2)◂{ }
;; rsp=0 , %1444~1(<2)◂{ } %1443~1'(= r ) %1442~0'(= r ) 
; $ %[ "blk_cmt 0" ] ⊢ %[ "blk_cmt 0" ]
;; rsp=0 , %1445~%[ "blk_cmt 0" ] %1444~1(<2)◂{ } %1443~1'(= r ) %1442~0'(= r ) 
; #23 { { 0'(= r ) 1'(= r ) %[ "blk_cmt 0" ] } 1(<2)◂{ } } ⊢ 0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "blk_cmt 0" ] } 1(<2)◂{ } }
;; rsp=0 , %1446~0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "blk_cmt 0" ] } 1(<2)◂{ } } 
; #197 0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "blk_cmt 0" ] } 1(<2)◂{ } } ⊢ 1(<2)◂0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "blk_cmt 0" ] } 1(<2)◂{ } }
;; rsp=0 , %1447~1(<2)◂0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "blk_cmt 0" ] } 1(<2)◂{ } } 
; #24 1(<2)◂0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "blk_cmt 0" ] } 1(<2)◂{ } } ⊢ 0(<2)◂1(<2)◂0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "blk_cmt 0" ] } 1(<2)◂{ } }
;; rsp=0 , %1448~0(<2)◂1(<2)◂0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "blk_cmt 0" ] } 1(<2)◂{ } } 
; ∎ 0(<2)◂1(<2)◂0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "blk_cmt 0" ] } 1(<2)◂{ } }
; .mov_ptn2 0(<2)◂1(<2)◂0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "blk_cmt 0" ] } 1(<2)◂{ } } ⊢ 2'(= a3◂ [ a44◂ [ *{ }]] )
; .mov_ptn 0(<2)◂1(<2)◂0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "blk_cmt 0" ] } 1(<2)◂{ } } ⊢ 2'(= a3◂ [ a44◂ [ *{ }]] )
	ALC_RCD 2, rax
	mov r9,rax
	ALC_RCD 3, rax
	mov r10,rax
	mov rax,r13
	mov QWORD [r10+8+8*0],rax
	mov rax,r14
	mov QWORD [r10+8+8*1],rax
	mov rsi,1  
	mov rdi,24
	xor rax,rax 
	C_CALL_SF calloc
	mov QWORD [rax],9
	mov BYTE [rax+8+0],98
	mov BYTE [rax+8+1],108
	mov BYTE [rax+8+2],107
	mov BYTE [rax+8+3],95
	mov BYTE [rax+8+4],99
	mov BYTE [rax+8+5],109
	mov BYTE [rax+8+6],116
	mov BYTE [rax+8+7],32
	mov BYTE [rax+8+8],48
	mov QWORD [r10+8+8*2],rax
	mov rax,r10
	mov QWORD [r9+8+8*0],rax
	mov rax,unt 
	mov rax,unt_1
	mov QWORD [r9+8+8*1],rax
	mov rax,r9
	mov BYTE [rax+6],0
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],1
	mov QWORD [rax+8],rdi
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	jmp LB_2053
LB_2053:
	cmp BYTE [r8+6],0
	jnz LB_2051
	POP_GRM_SCC
	jmp LB_2019
LB_2051:
	POP_GRM_FAIL 
	jmp LB_2019
LB_2019:
	cmp BYTE [r8+6],0
	jnz LB_2054
	jmp LB_2055
LB_2054:
	add rsp,0
	POP_GRM_FAIL
	ret
LB_2055:
	mov QWORD [rsp+8*0],r14
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi 
; .mov_ptn2 2'(= a44◂ [ *{ }] ) ⊢ 3'(= a44◂ [ *{ }] )
	mov r10,r9
; .mov_ptn 2'(= a44◂ [ *{ }] ) ⊢ 3'(= a44◂ [ *{ }] )
	mov rax,r8
	mov r9,rax
	mov r13,QWORD [rsp+16+8*0]
	mov r14,QWORD [rsp+8*0]
	jmp LB_2056
LB_2056
;; rsp=0 , %1449~3'(= a44◂ [ *{ }] ) %1429~1'(= r ) %1428~0'(= r ) 
; #24 3'(= a44◂ [ *{ }] ) ⊢ 0(<2)◂3'(= a44◂ [ *{ }] )
;; rsp=0 , %1450~0(<2)◂3'(= a44◂ [ *{ }] ) %1429~1'(= r ) %1428~0'(= r ) 
; ∎ 0(<2)◂3'(= a44◂ [ *{ }] )
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂3'(= a44◂ [ *{ }] ) ⊢ 2'(= a3◂ [ a44◂ [ *{ }]] )
; .mov_ptn 0(<2)◂3'(= a44◂ [ *{ }] ) ⊢ 2'(= a3◂ [ a44◂ [ *{ }]] )
	mov rax,r9
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	jmp LB_2057
LB_2057:
	cmp BYTE [r8+6],0
	jnz LB_2009
	POP_GRM_SCC
	ret
LB_2009:
	RB_GRM
	jmp LB_2060
LB_2059:
	add r14,1 
LB_2060:
	cmp r14,r9
	jge LB_2061
	JZ_LINE_SPC BYTE [r13+8+r14], LB_2059
LB_2061
	lea rax,[r14+2]
	cmp rax,r9
	jg LB_2064
	jmp LB_2065
LB_2064:
	mov r8,unt_1
	jmp LB_2062
LB_2065:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],92
	jnz LB_2066
	cmp BYTE [rdi+1],93
	jnz LB_2066
	jmp LB_2067
LB_2066:
	mov r8,unt_1
	jmp LB_2062
LB_2067:
	add r14,2
	jmp LB_2063
LB_2062:
	add rsp,0
	jmp LB_2058
LB_2063:
	PUSH_GRM
	jmp LB_2071
LB_2070:
	add r14,1 
LB_2071:
	cmp r14,r9
	jge LB_2072
	JZ_LINE_SPC BYTE [r13+8+r14], LB_2070
LB_2072
	lea rax,[r14+1]
	cmp rax,r9
	jg LB_2075
	jmp LB_2076
LB_2075:
	mov r8,unt_1
	jmp LB_2073
LB_2076:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],10
	jnz LB_2077
	jmp LB_2078
LB_2077:
	mov r8,unt_1
	jmp LB_2073
LB_2078:
	add r14,1
	jmp LB_2074
LB_2073:
	add rsp,0
	jmp LB_2069
LB_2074:
	mov QWORD [rsp+8*0],r14
	mov r13,QWORD [rsp+16+8*0]
	mov r14,QWORD [rsp+8*0]
	jmp LB_2079
LB_2079
;; rsp=0 , %1454~1'(= r ) %1453~0'(= r ) 
; #24 { } ⊢ 0(<2)◂{ }
;; rsp=0 , %1455~0(<2)◂{ } %1454~1'(= r ) %1453~0'(= r ) 
; ∎ 0(<2)◂{ }
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂{ } ⊢ 2'(= a3◂ [ *{ }] )
; .mov_ptn 0(<2)◂{ } ⊢ 2'(= a3◂ [ *{ }] )
	mov rax,unt 
	mov rax,unt_0
	mov r8,rax
	jmp LB_2080
LB_2080:
	cmp BYTE [r8+6],0
	jnz LB_2069
	POP_GRM_SCC
	jmp LB_2068
LB_2069:
	RB_GRM
	jmp LB_2083
LB_2082:
	add r14,1 
LB_2083:
	cmp r14,r9
	jge LB_2084
	JZ_LINE_SPC BYTE [r13+8+r14], LB_2082
LB_2084
	cmp r14,r9
	jge LB_2087
	jmp LB_2088
LB_2087:
	mov r8,unt_1 
	jmp LB_2085
LB_2088:
	movzx rdi,BYTE [r13+8+r14]
	push rdi 
	add r14,1 
	jmp LB_2086
LB_2085:
	add rsp,0
	POP_GRM_FAIL
	jmp LB_2068
LB_2086:
	mov QWORD [rsp+8*1],r14
	mov r13,QWORD [rsp+16+8*1]
	mov r14,QWORD [rsp+8*1]
	jmp LB_2089
LB_2089
;; rsp=1 , %1458~1'(= r ) %1457~0'(= r ) %1456~8'(= r ) 
; #25 { } ⊢ 1(<2)◂{ }
;; rsp=1 , %1459~1(<2)◂{ } %1458~1'(= r ) %1457~0'(= r ) %1456~8'(= r ) 
; ∎ 1(<2)◂{ }
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 8'(= r )
	mov rdi,QWORD [rsp-8+8*1]
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 1(<2)◂{ } ⊢ 2'(= a3◂ [ *{ }] )
; .mov_ptn 1(<2)◂{ } ⊢ 2'(= a3◂ [ *{ }] )
	mov rax,unt 
	mov rax,unt_1
	mov r8,rax
	add rsp,8
	jmp LB_2090
LB_2090:
	cmp BYTE [r8+6],0
	jnz LB_2081
	POP_GRM_SCC
	jmp LB_2068
LB_2081:
	RB_GRM
	mov QWORD [rsp+8*0],r14
	mov r13,QWORD [rsp+16+8*0]
	mov r14,QWORD [rsp+8*0]
	jmp LB_2092
LB_2092
;; rsp=0 , %1461~1'(= r ) %1460~0'(= r ) 
; #24 { } ⊢ 0(<2)◂{ }
;; rsp=0 , %1462~0(<2)◂{ } %1461~1'(= r ) %1460~0'(= r ) 
; ∎ 0(<2)◂{ }
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂{ } ⊢ 2'(= a3◂ [ *{ }] )
; .mov_ptn 0(<2)◂{ } ⊢ 2'(= a3◂ [ *{ }] )
	mov rax,unt 
	mov rax,unt_0
	mov r8,rax
	jmp LB_2093
LB_2093:
	cmp BYTE [r8+6],0
	jnz LB_2091
	POP_GRM_SCC
	jmp LB_2068
LB_2091:
	POP_GRM_FAIL 
	jmp LB_2068
LB_2068:
	cmp BYTE [r8+6],0
	jnz LB_2094
	jmp LB_2095
LB_2094:
	add rsp,0
	POP_GRM_FAIL
	ret
LB_2095:
	mov QWORD [rsp+8*0],r14
; .mov_ptn2 2'(= *{ } ) ⊢ { }
; .mov_ptn 2'(= *{ } ) ⊢ { }
	mov r13,QWORD [rsp+16+8*0]
	mov r14,QWORD [rsp+8*0]
	jmp LB_2096
LB_2096
;; rsp=0 , %1463~{ } %1452~1'(= r ) %1451~0'(= r ) 
; #198 { } ⊢ 0(<2)◂{ }
;; rsp=0 , %1464~0(<2)◂{ } %1463~{ } %1452~1'(= r ) %1451~0'(= r ) 
; #24 0(<2)◂{ } ⊢ 0(<2)◂0(<2)◂{ }
;; rsp=0 , %1465~0(<2)◂0(<2)◂{ } %1463~{ } %1452~1'(= r ) %1451~0'(= r ) 
; ∎ 0(<2)◂0(<2)◂{ }
; .dlt.ptn { }
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂0(<2)◂{ } ⊢ 2'(= a3◂ [ a44◂ [ *{ }]] )
; .mov_ptn 0(<2)◂0(<2)◂{ } ⊢ 2'(= a3◂ [ a44◂ [ *{ }]] )
	mov rax,unt 
	mov rax,unt_0
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	jmp LB_2097
LB_2097:
	cmp BYTE [r8+6],0
	jnz LB_2058
	POP_GRM_SCC
	ret
LB_2058:
	RB_GRM
	jmp LB_2100
LB_2099:
	add r14,1 
LB_2100:
	cmp r14,r9
	jge LB_2101
	JZ_LINE_SPC BYTE [r13+8+r14], LB_2099
LB_2101
	call GRM_223
	cmp BYTE [r8+6],0
	jnz LB_2104
	jmp LB_2105
LB_2104:
	jmp LB_2102
LB_2105:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a44◂ [ *{ }] ) ⊢ 8'(= a44◂ [ *{ }] )
; .mov_ptn 2'(= a44◂ [ *{ }] ) ⊢ 8'(= a44◂ [ *{ }] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_2103
LB_2102:
	add rsp,0
	jmp LB_2098
LB_2103:
	mov QWORD [rsp+8*1],r14
	mov r13,QWORD [rsp+16+8*1]
	mov r14,QWORD [rsp+8*1]
	jmp LB_2106
LB_2106
;; rsp=1 , %1468~1'(= r ) %1467~0'(= r ) %1466~8'(= a44◂ [ *{ }] ) 
; #24 8'(= a44◂ [ *{ }] ) ⊢ 0(<2)◂8'(= a44◂ [ *{ }] )
;; rsp=1 , %1469~0(<2)◂8'(= a44◂ [ *{ }] ) %1468~1'(= r ) %1467~0'(= r ) 
; ∎ 0(<2)◂8'(= a44◂ [ *{ }] )
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂8'(= a44◂ [ *{ }] ) ⊢ 2'(= a3◂ [ a44◂ [ *{ }]] )
; .mov_ptn 0(<2)◂8'(= a44◂ [ *{ }] ) ⊢ 2'(= a3◂ [ a44◂ [ *{ }]] )
	mov rax,QWORD [rsp-8+8*1]
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,8
	jmp LB_2107
LB_2107:
	cmp BYTE [r8+6],0
	jnz LB_2098
	POP_GRM_SCC
	ret
LB_2098:
	RB_GRM
	mov QWORD [rsp+8*0],r14
	mov r13,QWORD [rsp+16+8*0]
	mov r14,QWORD [rsp+8*0]
	jmp LB_2109
LB_2109
;; rsp=0 , %1471~1'(= r ) %1470~0'(= r ) 
; #22 { } ⊢ 1(<2)◂{ }
;; rsp=0 , %1472~1(<2)◂{ } %1471~1'(= r ) %1470~0'(= r ) 
; $ %[ "blk_cmt 1" ] ⊢ %[ "blk_cmt 1" ]
;; rsp=0 , %1473~%[ "blk_cmt 1" ] %1472~1(<2)◂{ } %1471~1'(= r ) %1470~0'(= r ) 
; #23 { { 0'(= r ) 1'(= r ) %[ "blk_cmt 1" ] } 1(<2)◂{ } } ⊢ 0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "blk_cmt 1" ] } 1(<2)◂{ } }
;; rsp=0 , %1474~0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "blk_cmt 1" ] } 1(<2)◂{ } } 
; #197 0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "blk_cmt 1" ] } 1(<2)◂{ } } ⊢ 1(<2)◂0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "blk_cmt 1" ] } 1(<2)◂{ } }
;; rsp=0 , %1475~1(<2)◂0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "blk_cmt 1" ] } 1(<2)◂{ } } 
; #24 1(<2)◂0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "blk_cmt 1" ] } 1(<2)◂{ } } ⊢ 0(<2)◂1(<2)◂0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "blk_cmt 1" ] } 1(<2)◂{ } }
;; rsp=0 , %1476~0(<2)◂1(<2)◂0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "blk_cmt 1" ] } 1(<2)◂{ } } 
; ∎ 0(<2)◂1(<2)◂0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "blk_cmt 1" ] } 1(<2)◂{ } }
; .mov_ptn2 0(<2)◂1(<2)◂0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "blk_cmt 1" ] } 1(<2)◂{ } } ⊢ 2'(= a3◂ [ a44◂ [ *{ }]] )
; .mov_ptn 0(<2)◂1(<2)◂0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "blk_cmt 1" ] } 1(<2)◂{ } } ⊢ 2'(= a3◂ [ a44◂ [ *{ }]] )
	ALC_RCD 2, rax
	mov r9,rax
	ALC_RCD 3, rax
	mov r10,rax
	mov rax,r13
	mov QWORD [r10+8+8*0],rax
	mov rax,r14
	mov QWORD [r10+8+8*1],rax
	mov rsi,1  
	mov rdi,24
	xor rax,rax 
	C_CALL_SF calloc
	mov QWORD [rax],9
	mov BYTE [rax+8+0],98
	mov BYTE [rax+8+1],108
	mov BYTE [rax+8+2],107
	mov BYTE [rax+8+3],95
	mov BYTE [rax+8+4],99
	mov BYTE [rax+8+5],109
	mov BYTE [rax+8+6],116
	mov BYTE [rax+8+7],32
	mov BYTE [rax+8+8],49
	mov QWORD [r10+8+8*2],rax
	mov rax,r10
	mov QWORD [r9+8+8*0],rax
	mov rax,unt 
	mov rax,unt_1
	mov QWORD [r9+8+8*1],rax
	mov rax,r9
	mov BYTE [rax+6],0
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],1
	mov QWORD [rax+8],rdi
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	jmp LB_2110
LB_2110:
	cmp BYTE [r8+6],0
	jnz LB_2108
	POP_GRM_SCC
	ret
LB_2108:
	POP_GRM_FAIL 
	ret
ETR_223:
	mov r9,0x0000_ffff_ffff_ffff
	and r9,[r13]
	call GRM_223
	ret
GRM_223:
	PUSH_GRM
	jmp LB_2113
LB_2112:
	add r14,1 
LB_2113:
	cmp r14,r9
	jge LB_2114
	JZ_LINE_SPC BYTE [r13+8+r14], LB_2112
LB_2114
	lea rax,[r14+1]
	cmp rax,r9
	jg LB_2117
	jmp LB_2118
LB_2117:
	mov r8,unt_1
	jmp LB_2115
LB_2118:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],10
	jnz LB_2119
	jmp LB_2120
LB_2119:
	mov r8,unt_1
	jmp LB_2115
LB_2120:
	add r14,1
	jmp LB_2116
LB_2115:
	add rsp,0
	jmp LB_2111
LB_2116:
	jmp LB_2122
LB_2121:
	add r14,1 
LB_2122:
	cmp r14,r9
	jge LB_2123
	JZ_LINE_SPC BYTE [r13+8+r14], LB_2121
LB_2123
	call GRM_222
	cmp BYTE [r8+6],0
	jnz LB_2126
	jmp LB_2127
LB_2126:
	jmp LB_2124
LB_2127:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a44◂ [ *{ }] ) ⊢ 8'(= a44◂ [ *{ }] )
; .mov_ptn 2'(= a44◂ [ *{ }] ) ⊢ 8'(= a44◂ [ *{ }] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_2125
LB_2124:
	add rsp,0
	jmp LB_2111
LB_2125:
	mov QWORD [rsp+8*1],r14
	mov r13,QWORD [rsp+16+8*1]
	mov r14,QWORD [rsp+8*1]
	jmp LB_2128
LB_2128
;; rsp=1 , %1479~1'(= r ) %1478~0'(= r ) %1477~8'(= a44◂ [ *{ }] ) 
; #24 8'(= a44◂ [ *{ }] ) ⊢ 0(<2)◂8'(= a44◂ [ *{ }] )
;; rsp=1 , %1480~0(<2)◂8'(= a44◂ [ *{ }] ) %1479~1'(= r ) %1478~0'(= r ) 
; ∎ 0(<2)◂8'(= a44◂ [ *{ }] )
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂8'(= a44◂ [ *{ }] ) ⊢ 2'(= a3◂ [ a44◂ [ *{ }]] )
; .mov_ptn 0(<2)◂8'(= a44◂ [ *{ }] ) ⊢ 2'(= a3◂ [ a44◂ [ *{ }]] )
	mov rax,QWORD [rsp-8+8*1]
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,8
	jmp LB_2129
LB_2129:
	cmp BYTE [r8+6],0
	jnz LB_2111
	POP_GRM_SCC
	ret
LB_2111:
	RB_GRM
	jmp LB_2132
LB_2131:
	add r14,1 
LB_2132:
	cmp r14,r9
	jge LB_2133
	JZ_LINE_SPC BYTE [r13+8+r14], LB_2131
LB_2133
	cmp r14,r9
	jge LB_2136
	jmp LB_2137
LB_2136:
	mov r8,unt_1 
	jmp LB_2134
LB_2137:
	movzx rdi,BYTE [r13+8+r14]
	push rdi 
	add r14,1 
	jmp LB_2135
LB_2134:
	add rsp,0
	jmp LB_2130
LB_2135:
	jmp LB_2139
LB_2138:
	add r14,1 
LB_2139:
	cmp r14,r9
	jge LB_2140
	JZ_LINE_SPC BYTE [r13+8+r14], LB_2138
LB_2140
	call GRM_223
	cmp BYTE [r8+6],0
	jnz LB_2143
	jmp LB_2144
LB_2143:
	jmp LB_2141
LB_2144:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a44◂ [ *{ }] ) ⊢ 9'(= a44◂ [ *{ }] )
; .mov_ptn 2'(= a44◂ [ *{ }] ) ⊢ 9'(= a44◂ [ *{ }] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_2142
LB_2141:
	add rsp,8
	jmp LB_2130
LB_2142:
	mov QWORD [rsp+8*2],r14
	mov r13,QWORD [rsp+16+8*2]
	mov r14,QWORD [rsp+8*2]
	jmp LB_2145
LB_2145
;; rsp=2 , %1484~1'(= r ) %1483~0'(= r ) %1482~9'(= a44◂ [ *{ }] ) %1481~8'(= r ) 
; #24 9'(= a44◂ [ *{ }] ) ⊢ 0(<2)◂9'(= a44◂ [ *{ }] )
;; rsp=2 , %1485~0(<2)◂9'(= a44◂ [ *{ }] ) %1484~1'(= r ) %1483~0'(= r ) %1481~8'(= r ) 
; ∎ 0(<2)◂9'(= a44◂ [ *{ }] )
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 8'(= r )
	mov rdi,QWORD [rsp-8+8*2]
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂9'(= a44◂ [ *{ }] ) ⊢ 2'(= a3◂ [ a44◂ [ *{ }]] )
; .mov_ptn 0(<2)◂9'(= a44◂ [ *{ }] ) ⊢ 2'(= a3◂ [ a44◂ [ *{ }]] )
	mov rax,QWORD [rsp-8+8*1]
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,16
	jmp LB_2146
LB_2146:
	cmp BYTE [r8+6],0
	jnz LB_2130
	POP_GRM_SCC
	ret
LB_2130:
	RB_GRM
	mov QWORD [rsp+8*0],r14
	mov r13,QWORD [rsp+16+8*0]
	mov r14,QWORD [rsp+8*0]
	jmp LB_2148
LB_2148
;; rsp=0 , %1487~1'(= r ) %1486~0'(= r ) 
; $ %[ "line_res_c 0" ] ⊢ %[ "line_res_c 0" ]
;; rsp=0 , %1488~%[ "line_res_c 0" ] %1487~1'(= r ) %1486~0'(= r ) 
; #10 %[ "line_res_c 0" ] ⊢ %[ "line_res_c 0" ]
	mov rdi,fmt_emt
	call emt_stg
	mov rdi,LB_2150
	call emt_stg 
	mov rdi,fmt_nl
	call emt_stg
	jmp LB_2151
LB_2151:
;; rsp=0 , %1489~%[ "line_res_c 0" ] %1487~1'(= r ) %1486~0'(= r ) 
	mov rdi,LB_2152
	call emt_stg 
	jmp err
LB_2149:
	cmp BYTE [r8+6],0
	jnz LB_2147
	POP_GRM_SCC
	ret
LB_2147:
	POP_GRM_FAIL 
	ret
ETR_224:
	mov r9,0x0000_ffff_ffff_ffff
	and r9,[r13]
	call GRM_224
	ret
GRM_224:
	PUSH_GRM
	jmp LB_2155
LB_2154:
	add r14,1 
LB_2155:
	cmp r14,r9
	jge LB_2156
	JZ_LINE_SPC BYTE [r13+8+r14], LB_2154
LB_2156
	lea rax,[r14+1]
	cmp rax,r9
	jg LB_2159
	jmp LB_2160
LB_2159:
	mov r8,unt_1
	jmp LB_2157
LB_2160:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],10
	jnz LB_2161
	jmp LB_2162
LB_2161:
	mov r8,unt_1
	jmp LB_2157
LB_2162:
	add r14,1
	jmp LB_2158
LB_2157:
	add rsp,0
	jmp LB_2153
LB_2158:
	mov QWORD [rsp+8*0],r14
	mov r13,QWORD [rsp+16+8*0]
	mov r14,QWORD [rsp+8*0]
	jmp LB_2163
LB_2163
;; rsp=0 , %1491~1'(= r ) %1490~0'(= r ) 
; #24 { 0'(= r ) 1'(= r ) } ⊢ 0(<2)◂{ 0'(= r ) 1'(= r ) }
;; rsp=0 , %1492~0(<2)◂{ 0'(= r ) 1'(= r ) } 
; ∎ 0(<2)◂{ 0'(= r ) 1'(= r ) }
; .mov_ptn2 0(<2)◂{ 0'(= r ) 1'(= r ) } ⊢ 2'(= a3◂ [ *{ rr}] )
; .mov_ptn 0(<2)◂{ 0'(= r ) 1'(= r ) } ⊢ 2'(= a3◂ [ *{ rr}] )
	ALC_RCD 2, rax
	mov r9,rax
	mov rax,r13
	mov QWORD [r9+8+8*0],rax
	mov rax,r14
	mov QWORD [r9+8+8*1],rax
	mov rax,r9
	mov BYTE [rax+6],0
	mov r8,rax
	jmp LB_2164
LB_2164:
	cmp BYTE [r8+6],0
	jnz LB_2153
	POP_GRM_SCC
	ret
LB_2153:
	RB_GRM
	jmp LB_2167
LB_2166:
	add r14,1 
LB_2167:
	cmp r14,r9
	jge LB_2168
	JZ_LINE_SPC BYTE [r13+8+r14], LB_2166
LB_2168
	cmp r14,r9
	jge LB_2171
	jmp LB_2172
LB_2171:
	mov r8,unt_1 
	jmp LB_2169
LB_2172:
	movzx rdi,BYTE [r13+8+r14]
	push rdi 
	add r14,1 
	jmp LB_2170
LB_2169:
	add rsp,0
	jmp LB_2165
LB_2170:
	jmp LB_2174
LB_2173:
	add r14,1 
LB_2174:
	cmp r14,r9
	jge LB_2175
	JZ_LINE_SPC BYTE [r13+8+r14], LB_2173
LB_2175
	call GRM_224
	cmp BYTE [r8+6],0
	jnz LB_2178
	jmp LB_2179
LB_2178:
	jmp LB_2176
LB_2179:
	sub rsp,16
; .mov_ptn2 2'(= *{ rr} ) ⊢ { 9'(= r ) 10'(= r ) }
; .mov_ptn 2'(= *{ rr} ) ⊢ { 9'(= r ) 10'(= r ) }
	mov r10, QWORD [r8+8]
	mov QWORD [rsp-8+8*2],r10
	mov r11, QWORD [r8+16]
	mov QWORD [rsp-8+8*1],r11
	mov rdi,r8
	FREE_RCD 2,rdi
	jmp LB_2177
LB_2176:
	add rsp,8
	jmp LB_2165
LB_2177:
	mov QWORD [rsp+8*3],r14
	mov r13,QWORD [rsp+16+8*3]
	mov r14,QWORD [rsp+8*3]
	jmp LB_2180
LB_2180
;; rsp=3 , %1497~1'(= r ) %1496~0'(= r ) %1495~10'(= r ) %1494~9'(= r ) %1493~8'(= r ) 
; #24 { 0'(= r ) 10'(= r ) } ⊢ 0(<2)◂{ 0'(= r ) 10'(= r ) }
;; rsp=3 , %1498~0(<2)◂{ 0'(= r ) 10'(= r ) } %1497~1'(= r ) %1494~9'(= r ) %1493~8'(= r ) 
; ∎ 0(<2)◂{ 0'(= r ) 10'(= r ) }
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 9'(= r )
	mov rdi,QWORD [rsp-8+8*2]
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 8'(= r )
	mov rdi,QWORD [rsp-8+8*3]
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂{ 0'(= r ) 10'(= r ) } ⊢ 2'(= a3◂ [ *{ rr}] )
; .mov_ptn 0(<2)◂{ 0'(= r ) 10'(= r ) } ⊢ 2'(= a3◂ [ *{ rr}] )
	ALC_RCD 2, rax
	mov r14,rax
	mov rax,r13
	mov QWORD [r14+8+8*0],rax
	mov rax,QWORD [rsp-8+8*1]
	mov QWORD [r14+8+8*1],rax
	mov rax,r14
	mov BYTE [rax+6],0
	mov r8,rax
	add rsp,24
	jmp LB_2181
LB_2181:
	cmp BYTE [r8+6],0
	jnz LB_2165
	POP_GRM_SCC
	ret
LB_2165:
	RB_GRM
	mov QWORD [rsp+8*0],r14
	mov r13,QWORD [rsp+16+8*0]
	mov r14,QWORD [rsp+8*0]
	jmp LB_2183
LB_2183
;; rsp=0 , %1500~1'(= r ) %1499~0'(= r ) 
; #24 { 0'(= r ) 1'(= r ) } ⊢ 0(<2)◂{ 0'(= r ) 1'(= r ) }
;; rsp=0 , %1501~0(<2)◂{ 0'(= r ) 1'(= r ) } 
; ∎ 0(<2)◂{ 0'(= r ) 1'(= r ) }
; .mov_ptn2 0(<2)◂{ 0'(= r ) 1'(= r ) } ⊢ 2'(= a3◂ [ *{ rr}] )
; .mov_ptn 0(<2)◂{ 0'(= r ) 1'(= r ) } ⊢ 2'(= a3◂ [ *{ rr}] )
	ALC_RCD 2, rax
	mov r9,rax
	mov rax,r13
	mov QWORD [r9+8+8*0],rax
	mov rax,r14
	mov QWORD [r9+8+8*1],rax
	mov rax,r9
	mov BYTE [rax+6],0
	mov r8,rax
	jmp LB_2184
LB_2184:
	cmp BYTE [r8+6],0
	jnz LB_2182
	POP_GRM_SCC
	ret
LB_2182:
	POP_GRM_FAIL 
	ret
ETR_225:
	mov r9,0x0000_ffff_ffff_ffff
	and r9,[r13]
	call GRM_225
	ret
GRM_225:
	PUSH_GRM
	jmp LB_2187
LB_2186:
	add r14,1 
LB_2187:
	cmp r14,r9
	jge LB_2188
	JZ_SPC BYTE [r13+8+r14], LB_2186
LB_2188
	lea rax,[r14+7]
	cmp rax,r9
	jg LB_2191
	jmp LB_2192
LB_2191:
	mov r8,unt_1
	jmp LB_2189
LB_2192:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],194
	jnz LB_2193
	cmp BYTE [rdi+1],167
	jnz LB_2193
	cmp BYTE [rdi+2],194
	jnz LB_2193
	cmp BYTE [rdi+3],167
	jnz LB_2193
	cmp BYTE [rdi+4],43
	jnz LB_2193
	cmp BYTE [rdi+5],115
	jnz LB_2193
	cmp BYTE [rdi+6],56
	jnz LB_2193
	jmp LB_2194
LB_2193:
	mov r8,unt_1
	jmp LB_2189
LB_2194:
	add r14,7
	jmp LB_2190
LB_2189:
	add rsp,0
	jmp LB_2185
LB_2190:
	mov QWORD [rsp+8*0],r14
	mov r13,QWORD [rsp+16+8*0]
	mov r14,QWORD [rsp+8*0]
	jmp LB_2195
LB_2195
;; rsp=0 , %1503~1'(= r ) %1502~0'(= r ) 
; #24 { } ⊢ 0(<2)◂{ }
;; rsp=0 , %1504~0(<2)◂{ } %1503~1'(= r ) %1502~0'(= r ) 
; ∎ 0(<2)◂{ }
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂{ } ⊢ 2'(= a3◂ [ *{ }] )
; .mov_ptn 0(<2)◂{ } ⊢ 2'(= a3◂ [ *{ }] )
	mov rax,unt 
	mov rax,unt_0
	mov r8,rax
	jmp LB_2196
LB_2196:
	cmp BYTE [r8+6],0
	jnz LB_2185
	POP_GRM_SCC
	ret
LB_2185:
	RB_GRM
	jmp LB_2199
LB_2198:
	add r14,1 
LB_2199:
	cmp r14,r9
	jge LB_2200
	JZ_SPC BYTE [r13+8+r14], LB_2198
LB_2200
	lea rax,[r14+4]
	cmp rax,r9
	jg LB_2203
	jmp LB_2204
LB_2203:
	mov r8,unt_1
	jmp LB_2201
LB_2204:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],194
	jnz LB_2205
	cmp BYTE [rdi+1],167
	jnz LB_2205
	cmp BYTE [rdi+2],194
	jnz LB_2205
	cmp BYTE [rdi+3],167
	jnz LB_2205
	jmp LB_2206
LB_2205:
	mov r8,unt_1
	jmp LB_2201
LB_2206:
	add r14,4
	jmp LB_2202
LB_2201:
	add rsp,0
	jmp LB_2197
LB_2202:
	mov QWORD [rsp+8*0],r14
	mov r13,QWORD [rsp+16+8*0]
	mov r14,QWORD [rsp+8*0]
	jmp LB_2207
LB_2207
;; rsp=0 , %1506~1'(= r ) %1505~0'(= r ) 
; #24 { } ⊢ 0(<2)◂{ }
;; rsp=0 , %1507~0(<2)◂{ } %1506~1'(= r ) %1505~0'(= r ) 
; ∎ 0(<2)◂{ }
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂{ } ⊢ 2'(= a3◂ [ *{ }] )
; .mov_ptn 0(<2)◂{ } ⊢ 2'(= a3◂ [ *{ }] )
	mov rax,unt 
	mov rax,unt_0
	mov r8,rax
	jmp LB_2208
LB_2208:
	cmp BYTE [r8+6],0
	jnz LB_2197
	POP_GRM_SCC
	ret
LB_2197:
	RB_GRM
	jmp LB_2211
LB_2210:
	add r14,1 
LB_2211:
	cmp r14,r9
	jge LB_2212
	JZ_SPC BYTE [r13+8+r14], LB_2210
LB_2212
	lea rax,[r14+2]
	cmp rax,r9
	jg LB_2215
	jmp LB_2216
LB_2215:
	mov r8,unt_1
	jmp LB_2213
LB_2216:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],194
	jnz LB_2217
	cmp BYTE [rdi+1],167
	jnz LB_2217
	jmp LB_2218
LB_2217:
	mov r8,unt_1
	jmp LB_2213
LB_2218:
	add r14,2
	jmp LB_2214
LB_2213:
	add rsp,0
	jmp LB_2209
LB_2214:
	mov QWORD [rsp+8*0],r14
	mov r13,QWORD [rsp+16+8*0]
	mov r14,QWORD [rsp+8*0]
	jmp LB_2219
LB_2219
;; rsp=0 , %1509~1'(= r ) %1508~0'(= r ) 
; #24 { } ⊢ 0(<2)◂{ }
;; rsp=0 , %1510~0(<2)◂{ } %1509~1'(= r ) %1508~0'(= r ) 
; ∎ 0(<2)◂{ }
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂{ } ⊢ 2'(= a3◂ [ *{ }] )
; .mov_ptn 0(<2)◂{ } ⊢ 2'(= a3◂ [ *{ }] )
	mov rax,unt 
	mov rax,unt_0
	mov r8,rax
	jmp LB_2220
LB_2220:
	cmp BYTE [r8+6],0
	jnz LB_2209
	POP_GRM_SCC
	ret
LB_2209:
	RB_GRM
	jmp LB_2223
LB_2222:
	add r14,1 
LB_2223:
	cmp r14,r9
	jge LB_2224
	JZ_SPC BYTE [r13+8+r14], LB_2222
LB_2224
	lea rax,[r14+2]
	cmp rax,r9
	jg LB_2227
	jmp LB_2228
LB_2227:
	mov r8,unt_1
	jmp LB_2225
LB_2228:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],194
	jnz LB_2229
	cmp BYTE [rdi+1],182
	jnz LB_2229
	jmp LB_2230
LB_2229:
	mov r8,unt_1
	jmp LB_2225
LB_2230:
	add r14,2
	jmp LB_2226
LB_2225:
	add rsp,0
	jmp LB_2221
LB_2226:
	mov QWORD [rsp+8*0],r14
	mov r13,QWORD [rsp+16+8*0]
	mov r14,QWORD [rsp+8*0]
	jmp LB_2231
LB_2231
;; rsp=0 , %1512~1'(= r ) %1511~0'(= r ) 
; #24 { } ⊢ 0(<2)◂{ }
;; rsp=0 , %1513~0(<2)◂{ } %1512~1'(= r ) %1511~0'(= r ) 
; ∎ 0(<2)◂{ }
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂{ } ⊢ 2'(= a3◂ [ *{ }] )
; .mov_ptn 0(<2)◂{ } ⊢ 2'(= a3◂ [ *{ }] )
	mov rax,unt 
	mov rax,unt_0
	mov r8,rax
	jmp LB_2232
LB_2232:
	cmp BYTE [r8+6],0
	jnz LB_2221
	POP_GRM_SCC
	ret
LB_2221:
	RB_GRM
	jmp LB_2235
LB_2234:
	add r14,1 
LB_2235:
	cmp r14,r9
	jge LB_2236
	JZ_SPC BYTE [r13+8+r14], LB_2234
LB_2236
	lea rax,[r14+6]
	cmp rax,r9
	jg LB_2239
	jmp LB_2240
LB_2239:
	mov r8,unt_1
	jmp LB_2237
LB_2240:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],226
	jnz LB_2241
	cmp BYTE [rdi+1],136
	jnz LB_2241
	cmp BYTE [rdi+2],142
	jnz LB_2241
	cmp BYTE [rdi+3],226
	jnz LB_2241
	cmp BYTE [rdi+4],136
	jnz LB_2241
	cmp BYTE [rdi+5],142
	jnz LB_2241
	jmp LB_2242
LB_2241:
	mov r8,unt_1
	jmp LB_2237
LB_2242:
	add r14,6
	jmp LB_2238
LB_2237:
	add rsp,0
	jmp LB_2233
LB_2238:
	mov QWORD [rsp+8*0],r14
	mov r13,QWORD [rsp+16+8*0]
	mov r14,QWORD [rsp+8*0]
	jmp LB_2243
LB_2243
;; rsp=0 , %1515~1'(= r ) %1514~0'(= r ) 
; #24 { } ⊢ 0(<2)◂{ }
;; rsp=0 , %1516~0(<2)◂{ } %1515~1'(= r ) %1514~0'(= r ) 
; ∎ 0(<2)◂{ }
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂{ } ⊢ 2'(= a3◂ [ *{ }] )
; .mov_ptn 0(<2)◂{ } ⊢ 2'(= a3◂ [ *{ }] )
	mov rax,unt 
	mov rax,unt_0
	mov r8,rax
	jmp LB_2244
LB_2244:
	cmp BYTE [r8+6],0
	jnz LB_2233
	POP_GRM_SCC
	ret
LB_2233:
	POP_GRM_FAIL 
	ret
ETR_226:
	mov r9,0x0000_ffff_ffff_ffff
	and r9,[r13]
	call GRM_226
	ret
GRM_226:
	PUSH_GRM
	jmp LB_2247
LB_2246:
	add r14,1 
LB_2247:
	cmp r14,r9
	jge LB_2248
	JZ_SPC BYTE [r13+8+r14], LB_2246
LB_2248
	call GRM_225
	cmp BYTE [r8+6],0
	jnz LB_2251
	jmp LB_2252
LB_2251:
	jmp LB_2249
LB_2252:
; .mov_ptn2 2'(= *{ } ) ⊢ { }
; .mov_ptn 2'(= *{ } ) ⊢ { }
	jmp LB_2250
LB_2249:
	add rsp,0
	jmp LB_2245
LB_2250:
	mov QWORD [rsp+8*0],r14
	mov r13,QWORD [rsp+16+8*0]
	mov r14,QWORD [rsp+8*0]
	jmp LB_2253
LB_2253
;; rsp=0 , %1519~1'(= r ) %1518~0'(= r ) %1517~{ } 
; #25 { } ⊢ 1(<2)◂{ }
;; rsp=0 , %1520~1(<2)◂{ } %1519~1'(= r ) %1518~0'(= r ) %1517~{ } 
; ∎ 1(<2)◂{ }
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn { }
; .mov_ptn2 1(<2)◂{ } ⊢ 2'(= a3◂ [ *{ }] )
; .mov_ptn 1(<2)◂{ } ⊢ 2'(= a3◂ [ *{ }] )
	mov rax,unt 
	mov rax,unt_1
	mov r8,rax
	jmp LB_2254
LB_2254:
	cmp BYTE [r8+6],0
	jnz LB_2245
	POP_GRM_SCC
	ret
LB_2245:
	RB_GRM
	jmp LB_2257
LB_2256:
	add r14,1 
LB_2257:
	cmp r14,r9
	jge LB_2258
	JZ_SPC BYTE [r13+8+r14], LB_2256
LB_2258
	cmp r14,r9
	jge LB_2261
	jmp LB_2262
LB_2261:
	mov r8,unt_1 
	jmp LB_2259
LB_2262:
	movzx rdi,BYTE [r13+8+r14]
	push rdi 
	add r14,1 
	jmp LB_2260
LB_2259:
	add rsp,0
	jmp LB_2255
LB_2260:
	mov QWORD [rsp+8*1],r14
	mov r13,QWORD [rsp+16+8*1]
	mov r14,QWORD [rsp+8*1]
	jmp LB_2263
LB_2263
;; rsp=1 , %1523~1'(= r ) %1522~0'(= r ) %1521~8'(= r ) 
; #24 { } ⊢ 0(<2)◂{ }
;; rsp=1 , %1524~0(<2)◂{ } %1523~1'(= r ) %1522~0'(= r ) %1521~8'(= r ) 
; ∎ 0(<2)◂{ }
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 8'(= r )
	mov rdi,QWORD [rsp-8+8*1]
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂{ } ⊢ 2'(= a3◂ [ *{ }] )
; .mov_ptn 0(<2)◂{ } ⊢ 2'(= a3◂ [ *{ }] )
	mov rax,unt 
	mov rax,unt_0
	mov r8,rax
	add rsp,8
	jmp LB_2264
LB_2264:
	cmp BYTE [r8+6],0
	jnz LB_2255
	POP_GRM_SCC
	ret
LB_2255:
	POP_GRM_FAIL 
	ret
ETR_227:
	mov r9,0x0000_ffff_ffff_ffff
	and r9,[r13]
	call GRM_227
	ret
GRM_227:
	PUSH_GRM
	jmp LB_2267
LB_2266:
	add r14,1 
LB_2267:
	cmp r14,r9
	jge LB_2268
	JZ_SPC BYTE [r13+8+r14], LB_2266
LB_2268
	lea rax,[r14+1]
	cmp rax,r9
	jg LB_2271
	jmp LB_2272
LB_2271:
	mov r8,unt_1
	jmp LB_2269
LB_2272:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],64
	jnz LB_2273
	jmp LB_2274
LB_2273:
	mov r8,unt_1
	jmp LB_2269
LB_2274:
	add r14,1
	jmp LB_2270
LB_2269:
	add rsp,0
	jmp LB_2265
LB_2270:
	mov QWORD [rsp+8*0],r14
	mov r13,QWORD [rsp+16+8*0]
	mov r14,QWORD [rsp+8*0]
	jmp LB_2275
LB_2275
;; rsp=0 , %1527~1'(= r ) %1526~0'(= r ) %1525~{ } 
; #25 { } ⊢ 1(<2)◂{ }
;; rsp=0 , %1528~1(<2)◂{ } %1527~1'(= r ) %1526~0'(= r ) %1525~{ } 
; ∎ 1(<2)◂{ }
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn { }
; .mov_ptn2 1(<2)◂{ } ⊢ 2'(= a3◂ [ *{ }] )
; .mov_ptn 1(<2)◂{ } ⊢ 2'(= a3◂ [ *{ }] )
	mov rax,unt 
	mov rax,unt_1
	mov r8,rax
	jmp LB_2276
LB_2276:
	cmp BYTE [r8+6],0
	jnz LB_2265
	POP_GRM_SCC
	ret
LB_2265:
	RB_GRM
	jmp LB_2279
LB_2278:
	add r14,1 
LB_2279:
	cmp r14,r9
	jge LB_2280
	JZ_SPC BYTE [r13+8+r14], LB_2278
LB_2280
	call GRM_225
	cmp BYTE [r8+6],0
	jnz LB_2283
	jmp LB_2284
LB_2283:
	jmp LB_2281
LB_2284:
; .mov_ptn2 2'(= *{ } ) ⊢ { }
; .mov_ptn 2'(= *{ } ) ⊢ { }
	jmp LB_2282
LB_2281:
	add rsp,0
	jmp LB_2277
LB_2282:
	mov QWORD [rsp+8*0],r14
	mov r13,QWORD [rsp+16+8*0]
	mov r14,QWORD [rsp+8*0]
	jmp LB_2285
LB_2285
;; rsp=0 , %1531~1'(= r ) %1530~0'(= r ) %1529~{ } 
; #25 { } ⊢ 1(<2)◂{ }
;; rsp=0 , %1532~1(<2)◂{ } %1531~1'(= r ) %1530~0'(= r ) %1529~{ } 
; ∎ 1(<2)◂{ }
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn { }
; .mov_ptn2 1(<2)◂{ } ⊢ 2'(= a3◂ [ *{ }] )
; .mov_ptn 1(<2)◂{ } ⊢ 2'(= a3◂ [ *{ }] )
	mov rax,unt 
	mov rax,unt_1
	mov r8,rax
	jmp LB_2286
LB_2286:
	cmp BYTE [r8+6],0
	jnz LB_2277
	POP_GRM_SCC
	ret
LB_2277:
	RB_GRM
	jmp LB_2289
LB_2288:
	add r14,1 
LB_2289:
	cmp r14,r9
	jge LB_2290
	JZ_SPC BYTE [r13+8+r14], LB_2288
LB_2290
	cmp r14,r9
	jge LB_2293
	jmp LB_2294
LB_2293:
	mov r8,unt_1 
	jmp LB_2291
LB_2294:
	movzx rdi,BYTE [r13+8+r14]
	push rdi 
	add r14,1 
	jmp LB_2292
LB_2291:
	add rsp,0
	jmp LB_2287
LB_2292:
	mov QWORD [rsp+8*1],r14
	mov r13,QWORD [rsp+16+8*1]
	mov r14,QWORD [rsp+8*1]
	jmp LB_2295
LB_2295
;; rsp=1 , %1535~1'(= r ) %1534~0'(= r ) %1533~8'(= r ) 
; #24 { } ⊢ 0(<2)◂{ }
;; rsp=1 , %1536~0(<2)◂{ } %1535~1'(= r ) %1534~0'(= r ) %1533~8'(= r ) 
; ∎ 0(<2)◂{ }
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 8'(= r )
	mov rdi,QWORD [rsp-8+8*1]
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂{ } ⊢ 2'(= a3◂ [ *{ }] )
; .mov_ptn 0(<2)◂{ } ⊢ 2'(= a3◂ [ *{ }] )
	mov rax,unt 
	mov rax,unt_0
	mov r8,rax
	add rsp,8
	jmp LB_2296
LB_2296:
	cmp BYTE [r8+6],0
	jnz LB_2287
	POP_GRM_SCC
	ret
LB_2287:
	POP_GRM_FAIL 
	ret
ETR_228:
	mov r9,0x0000_ffff_ffff_ffff
	and r9,[r13]
	call GRM_228
	ret
GRM_228:
	PUSH_GRM
	jmp LB_2299
LB_2298:
	add r14,1 
LB_2299:
	cmp r14,r9
	jge LB_2300
	JZ_SPC BYTE [r13+8+r14], LB_2298
LB_2300
	call GRM_227
	cmp BYTE [r8+6],0
	jnz LB_2303
	jmp LB_2304
LB_2303:
	jmp LB_2301
LB_2304:
; .mov_ptn2 2'(= *{ } ) ⊢ { }
; .mov_ptn 2'(= *{ } ) ⊢ { }
	jmp LB_2302
LB_2301:
	add rsp,0
	jmp LB_2297
LB_2302:
	jmp LB_2306
LB_2305:
	add r14,1 
LB_2306:
	cmp r14,r9
	jge LB_2307
	JZ_SPC BYTE [r13+8+r14], LB_2305
LB_2307
	call GRM_228
	cmp BYTE [r8+6],0
	jnz LB_2310
	jmp LB_2311
LB_2310:
	jmp LB_2308
LB_2311:
; .mov_ptn2 2'(= *{ } ) ⊢ { }
; .mov_ptn 2'(= *{ } ) ⊢ { }
	jmp LB_2309
LB_2308:
	add rsp,0
	jmp LB_2297
LB_2309:
	mov QWORD [rsp+8*0],r14
	mov r13,QWORD [rsp+16+8*0]
	mov r14,QWORD [rsp+8*0]
	jmp LB_2312
LB_2312
;; rsp=0 , %1540~1'(= r ) %1539~0'(= r ) %1538~{ } %1537~{ } 
; #24 { } ⊢ 0(<2)◂{ }
;; rsp=0 , %1541~0(<2)◂{ } %1540~1'(= r ) %1539~0'(= r ) %1538~{ } %1537~{ } 
; ∎ 0(<2)◂{ }
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn { }
; .dlt.ptn { }
; .mov_ptn2 0(<2)◂{ } ⊢ 2'(= a3◂ [ *{ }] )
; .mov_ptn 0(<2)◂{ } ⊢ 2'(= a3◂ [ *{ }] )
	mov rax,unt 
	mov rax,unt_0
	mov r8,rax
	jmp LB_2313
LB_2313:
	cmp BYTE [r8+6],0
	jnz LB_2297
	POP_GRM_SCC
	ret
LB_2297:
	RB_GRM
	mov QWORD [rsp+8*0],r14
	mov r13,QWORD [rsp+16+8*0]
	mov r14,QWORD [rsp+8*0]
	jmp LB_2315
LB_2315
;; rsp=0 , %1543~1'(= r ) %1542~0'(= r ) 
; #24 { } ⊢ 0(<2)◂{ }
;; rsp=0 , %1544~0(<2)◂{ } %1543~1'(= r ) %1542~0'(= r ) 
; ∎ 0(<2)◂{ }
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂{ } ⊢ 2'(= a3◂ [ *{ }] )
; .mov_ptn 0(<2)◂{ } ⊢ 2'(= a3◂ [ *{ }] )
	mov rax,unt 
	mov rax,unt_0
	mov r8,rax
	jmp LB_2316
LB_2316:
	cmp BYTE [r8+6],0
	jnz LB_2314
	POP_GRM_SCC
	ret
LB_2314:
	POP_GRM_FAIL 
	ret
ETR_229:
	mov r9,0x0000_ffff_ffff_ffff
	and r9,[r13]
	call GRM_229
	ret
GRM_229:
	PUSH_GRM
	jmp LB_2319
LB_2318:
	add r14,1 
LB_2319:
	cmp r14,r9
	jge LB_2320
	JZ_LINE_SPC BYTE [r13+8+r14], LB_2318
LB_2320
	lea rax,[r14+1]
	cmp rax,r9
	jg LB_2323
	jmp LB_2324
LB_2323:
	mov r8,unt_1
	jmp LB_2321
LB_2324:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],10
	jnz LB_2325
	jmp LB_2326
LB_2325:
	mov r8,unt_1
	jmp LB_2321
LB_2326:
	add r14,1
	jmp LB_2322
LB_2321:
	add rsp,0
	jmp LB_2317
LB_2322:
	mov QWORD [rsp+8*0],r14
	mov r13,QWORD [rsp+16+8*0]
	mov r14,QWORD [rsp+8*0]
	jmp LB_2327
LB_2327
;; rsp=0 , %1547~1'(= r ) %1546~0'(= r ) %1545~{ } 
; #24 { } ⊢ 0(<2)◂{ }
;; rsp=0 , %1548~0(<2)◂{ } %1547~1'(= r ) %1546~0'(= r ) %1545~{ } 
; ∎ 0(<2)◂{ }
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn { }
; .mov_ptn2 0(<2)◂{ } ⊢ 2'(= a3◂ [ *{ }] )
; .mov_ptn 0(<2)◂{ } ⊢ 2'(= a3◂ [ *{ }] )
	mov rax,unt 
	mov rax,unt_0
	mov r8,rax
	jmp LB_2328
LB_2328:
	cmp BYTE [r8+6],0
	jnz LB_2317
	POP_GRM_SCC
	ret
LB_2317:
	RB_GRM
	jmp LB_2331
LB_2330:
	add r14,1 
LB_2331:
	cmp r14,r9
	jge LB_2332
	JZ_LINE_SPC BYTE [r13+8+r14], LB_2330
LB_2332
	call GRM_225
	cmp BYTE [r8+6],0
	jnz LB_2335
	jmp LB_2336
LB_2335:
	jmp LB_2333
LB_2336:
; .mov_ptn2 2'(= *{ } ) ⊢ { }
; .mov_ptn 2'(= *{ } ) ⊢ { }
	jmp LB_2334
LB_2333:
	add rsp,0
	jmp LB_2329
LB_2334:
	mov QWORD [rsp+8*0],r14
	mov r13,QWORD [rsp+16+8*0]
	mov r14,QWORD [rsp+8*0]
	jmp LB_2337
LB_2337
;; rsp=0 , %1551~1'(= r ) %1550~0'(= r ) %1549~{ } 
; #25 { } ⊢ 1(<2)◂{ }
;; rsp=0 , %1552~1(<2)◂{ } %1551~1'(= r ) %1550~0'(= r ) %1549~{ } 
; ∎ 1(<2)◂{ }
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn { }
; .mov_ptn2 1(<2)◂{ } ⊢ 2'(= a3◂ [ *{ }] )
; .mov_ptn 1(<2)◂{ } ⊢ 2'(= a3◂ [ *{ }] )
	mov rax,unt 
	mov rax,unt_1
	mov r8,rax
	jmp LB_2338
LB_2338:
	cmp BYTE [r8+6],0
	jnz LB_2329
	POP_GRM_SCC
	ret
LB_2329:
	RB_GRM
	jmp LB_2341
LB_2340:
	add r14,1 
LB_2341:
	cmp r14,r9
	jge LB_2342
	JZ_LINE_SPC BYTE [r13+8+r14], LB_2340
LB_2342
	lea rax,[r14+1]
	cmp rax,r9
	jg LB_2345
	jmp LB_2346
LB_2345:
	mov r8,unt_1
	jmp LB_2343
LB_2346:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],64
	jnz LB_2347
	jmp LB_2348
LB_2347:
	mov r8,unt_1
	jmp LB_2343
LB_2348:
	add r14,1
	jmp LB_2344
LB_2343:
	add rsp,0
	jmp LB_2339
LB_2344:
	mov QWORD [rsp+8*0],r14
	mov r13,QWORD [rsp+16+8*0]
	mov r14,QWORD [rsp+8*0]
	jmp LB_2349
LB_2349
;; rsp=0 , %1555~1'(= r ) %1554~0'(= r ) %1553~{ } 
; #25 { } ⊢ 1(<2)◂{ }
;; rsp=0 , %1556~1(<2)◂{ } %1555~1'(= r ) %1554~0'(= r ) %1553~{ } 
; ∎ 1(<2)◂{ }
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn { }
; .mov_ptn2 1(<2)◂{ } ⊢ 2'(= a3◂ [ *{ }] )
; .mov_ptn 1(<2)◂{ } ⊢ 2'(= a3◂ [ *{ }] )
	mov rax,unt 
	mov rax,unt_1
	mov r8,rax
	jmp LB_2350
LB_2350:
	cmp BYTE [r8+6],0
	jnz LB_2339
	POP_GRM_SCC
	ret
LB_2339:
	RB_GRM
	jmp LB_2353
LB_2352:
	add r14,1 
LB_2353:
	cmp r14,r9
	jge LB_2354
	JZ_LINE_SPC BYTE [r13+8+r14], LB_2352
LB_2354
	cmp r14,r9
	jge LB_2357
	jmp LB_2358
LB_2357:
	mov r8,unt_1 
	jmp LB_2355
LB_2358:
	movzx rdi,BYTE [r13+8+r14]
	push rdi 
	add r14,1 
	jmp LB_2356
LB_2355:
	add rsp,0
	jmp LB_2351
LB_2356:
	jmp LB_2360
LB_2359:
	add r14,1 
LB_2360:
	cmp r14,r9
	jge LB_2361
	JZ_LINE_SPC BYTE [r13+8+r14], LB_2359
LB_2361
	call GRM_229
	cmp BYTE [r8+6],0
	jnz LB_2364
	jmp LB_2365
LB_2364:
	jmp LB_2362
LB_2365:
; .mov_ptn2 2'(= *{ } ) ⊢ { }
; .mov_ptn 2'(= *{ } ) ⊢ { }
	jmp LB_2363
LB_2362:
	add rsp,8
	jmp LB_2351
LB_2363:
	mov QWORD [rsp+8*1],r14
	mov r13,QWORD [rsp+16+8*1]
	mov r14,QWORD [rsp+8*1]
	jmp LB_2366
LB_2366
;; rsp=1 , %1560~1'(= r ) %1559~0'(= r ) %1558~{ } %1557~8'(= r ) 
; #24 { } ⊢ 0(<2)◂{ }
;; rsp=1 , %1561~0(<2)◂{ } %1560~1'(= r ) %1559~0'(= r ) %1558~{ } %1557~8'(= r ) 
; ∎ 0(<2)◂{ }
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn { }
; .dlt.ptn 8'(= r )
	mov rdi,QWORD [rsp-8+8*1]
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂{ } ⊢ 2'(= a3◂ [ *{ }] )
; .mov_ptn 0(<2)◂{ } ⊢ 2'(= a3◂ [ *{ }] )
	mov rax,unt 
	mov rax,unt_0
	mov r8,rax
	add rsp,8
	jmp LB_2367
LB_2367:
	cmp BYTE [r8+6],0
	jnz LB_2351
	POP_GRM_SCC
	ret
LB_2351:
	RB_GRM
	jmp LB_2370
LB_2369:
	add r14,1 
LB_2370:
	cmp r14,r9
	jge LB_2371
	JZ_LINE_SPC BYTE [r13+8+r14], LB_2369
LB_2371
	cmp r14,r9
	jge LB_2374
	jmp LB_2375
LB_2374:
	mov r8,unt_1 
	jmp LB_2372
LB_2375:
	movzx rdi,BYTE [r13+8+r14]
	push rdi 
	add r14,1 
	jmp LB_2373
LB_2372:
	add rsp,0
	jmp LB_2368
LB_2373:
	mov QWORD [rsp+8*1],r14
	mov r13,QWORD [rsp+16+8*1]
	mov r14,QWORD [rsp+8*1]
	jmp LB_2376
LB_2376
;; rsp=1 , %1564~1'(= r ) %1563~0'(= r ) %1562~8'(= r ) 
; #24 { } ⊢ 0(<2)◂{ }
;; rsp=1 , %1565~0(<2)◂{ } %1564~1'(= r ) %1563~0'(= r ) %1562~8'(= r ) 
; ∎ 0(<2)◂{ }
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 8'(= r )
	mov rdi,QWORD [rsp-8+8*1]
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂{ } ⊢ 2'(= a3◂ [ *{ }] )
; .mov_ptn 0(<2)◂{ } ⊢ 2'(= a3◂ [ *{ }] )
	mov rax,unt 
	mov rax,unt_0
	mov r8,rax
	add rsp,8
	jmp LB_2377
LB_2377:
	cmp BYTE [r8+6],0
	jnz LB_2368
	POP_GRM_SCC
	ret
LB_2368:
	RB_GRM
	mov QWORD [rsp+8*0],r14
	mov r13,QWORD [rsp+16+8*0]
	mov r14,QWORD [rsp+8*0]
	jmp LB_2379
LB_2379
;; rsp=0 , %1567~1'(= r ) %1566~0'(= r ) 
; #24 { } ⊢ 0(<2)◂{ }
;; rsp=0 , %1568~0(<2)◂{ } %1567~1'(= r ) %1566~0'(= r ) 
; ∎ 0(<2)◂{ }
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂{ } ⊢ 2'(= a3◂ [ *{ }] )
; .mov_ptn 0(<2)◂{ } ⊢ 2'(= a3◂ [ *{ }] )
	mov rax,unt 
	mov rax,unt_0
	mov r8,rax
	jmp LB_2380
LB_2380:
	cmp BYTE [r8+6],0
	jnz LB_2378
	POP_GRM_SCC
	ret
LB_2378:
	POP_GRM_FAIL 
	ret
ETR_230:
	mov r9,0x0000_ffff_ffff_ffff
	and r9,[r13]
	call GRM_230
	ret
GRM_230:
	PUSH_GRM
	lea rax,[r14+3]
	cmp rax,r9
	jg LB_2384
	jmp LB_2385
LB_2384:
	mov r8,unt_1
	jmp LB_2382
LB_2385:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],194
	jnz LB_2386
	cmp BYTE [rdi+1],167
	jnz LB_2386
	cmp BYTE [rdi+2],126
	jnz LB_2386
	jmp LB_2387
LB_2386:
	mov r8,unt_1
	jmp LB_2382
LB_2387:
	add r14,3
	jmp LB_2383
LB_2382:
	add rsp,0
	jmp LB_2381
LB_2383:
	mov QWORD [rsp+8*0],r14
	mov r13,QWORD [rsp+16+8*0]
	mov r14,QWORD [rsp+8*0]
	jmp LB_2388
LB_2388
;; rsp=0 , %1570~1'(= r ) %1569~0'(= r ) 
; #24 { } ⊢ 0(<2)◂{ }
;; rsp=0 , %1571~0(<2)◂{ } %1570~1'(= r ) %1569~0'(= r ) 
; ∎ 0(<2)◂{ }
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂{ } ⊢ 2'(= a3◂ [ *{ }] )
; .mov_ptn 0(<2)◂{ } ⊢ 2'(= a3◂ [ *{ }] )
	mov rax,unt 
	mov rax,unt_0
	mov r8,rax
	jmp LB_2389
LB_2389:
	cmp BYTE [r8+6],0
	jnz LB_2381
	POP_GRM_SCC
	ret
LB_2381:
	RB_GRM
	lea rax,[r14+3]
	cmp rax,r9
	jg LB_2393
	jmp LB_2394
LB_2393:
	mov r8,unt_1
	jmp LB_2391
LB_2394:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],194
	jnz LB_2395
	cmp BYTE [rdi+1],167
	jnz LB_2395
	cmp BYTE [rdi+2],37
	jnz LB_2395
	jmp LB_2396
LB_2395:
	mov r8,unt_1
	jmp LB_2391
LB_2396:
	add r14,3
	jmp LB_2392
LB_2391:
	add rsp,0
	jmp LB_2390
LB_2392:
	mov QWORD [rsp+8*0],r14
	mov r13,QWORD [rsp+16+8*0]
	mov r14,QWORD [rsp+8*0]
	jmp LB_2397
LB_2397
;; rsp=0 , %1573~1'(= r ) %1572~0'(= r ) 
; #24 { } ⊢ 0(<2)◂{ }
;; rsp=0 , %1574~0(<2)◂{ } %1573~1'(= r ) %1572~0'(= r ) 
; ∎ 0(<2)◂{ }
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂{ } ⊢ 2'(= a3◂ [ *{ }] )
; .mov_ptn 0(<2)◂{ } ⊢ 2'(= a3◂ [ *{ }] )
	mov rax,unt 
	mov rax,unt_0
	mov r8,rax
	jmp LB_2398
LB_2398:
	cmp BYTE [r8+6],0
	jnz LB_2390
	POP_GRM_SCC
	ret
LB_2390:
	POP_GRM_FAIL 
	ret
ETR_231:
	mov r9,0x0000_ffff_ffff_ffff
	and r9,[r13]
	call GRM_231
	ret
GRM_231:
	PUSH_GRM
	jmp LB_2401
LB_2400:
	add r14,1 
LB_2401:
	cmp r14,r9
	jge LB_2402
	JZ_SPC BYTE [r13+8+r14], LB_2400
LB_2402
	call GRM_232
	cmp BYTE [r8+6],0
	jnz LB_2405
	jmp LB_2406
LB_2405:
	jmp LB_2403
LB_2406:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= r ) ⊢ 8'(= r )
; .mov_ptn 2'(= r ) ⊢ 8'(= r )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_2404
LB_2403:
	add rsp,0
	jmp LB_2399
LB_2404:
	jmp LB_2408
LB_2407:
	add r14,1 
LB_2408:
	cmp r14,r9
	jge LB_2409
	JZ_SPC BYTE [r13+8+r14], LB_2407
LB_2409
	lea rax,[r14+1]
	cmp rax,r9
	jg LB_2412
	jmp LB_2413
LB_2412:
	mov r8,unt_1
	jmp LB_2410
LB_2413:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],42
	jnz LB_2414
	jmp LB_2415
LB_2414:
	mov r8,unt_1
	jmp LB_2410
LB_2415:
	add r14,1
	jmp LB_2411
LB_2410:
	add rsp,8
	jmp LB_2399
LB_2411:
	jmp LB_2417
LB_2416:
	add r14,1 
LB_2417:
	cmp r14,r9
	jge LB_2418
	JZ_SPC BYTE [r13+8+r14], LB_2416
LB_2418
	call GRM_72
	cmp BYTE [r8+6],0
	jnz LB_2421
	jmp LB_2422
LB_2421:
	jmp LB_2419
LB_2422:
	sub rsp,8
; .mov_ptn2 2'(= {| l |} ) ⊢ 9'(= {| l |} )
; .mov_ptn 2'(= {| l |} ) ⊢ 9'(= {| l |} )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_2420
LB_2419:
	add rsp,8
	POP_GRM_FAIL
	ret
LB_2420:
	mov QWORD [rsp+8*2],r14
	mov r13,QWORD [rsp+16+8*2]
	mov r14,QWORD [rsp+8*2]
	jmp LB_2423
LB_2423
;; rsp=2 , %1578~1'(= r ) %1577~0'(= r ) %1576~9'(= {| l |} ) %1575~8'(= r ) 
; #112 { 8'(= r ) 9'(= {| l |} ) } ⊢ 3(<4)◂{ 8'(= r ) 9'(= {| l |} ) }
;; rsp=2 , %1579~3(<4)◂{ 8'(= r ) 9'(= {| l |} ) } %1578~1'(= r ) %1577~0'(= r ) 
; #24 3(<4)◂{ 8'(= r ) 9'(= {| l |} ) } ⊢ 0(<2)◂3(<4)◂{ 8'(= r ) 9'(= {| l |} ) }
;; rsp=2 , %1580~0(<2)◂3(<4)◂{ 8'(= r ) 9'(= {| l |} ) } %1578~1'(= r ) %1577~0'(= r ) 
; ∎ 0(<2)◂3(<4)◂{ 8'(= r ) 9'(= {| l |} ) }
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂3(<4)◂{ 8'(= r ) 9'(= {| l |} ) } ⊢ 2'(= a3◂ [ a25◂ [ a18◂ [ ]]] )
; .mov_ptn 0(<2)◂3(<4)◂{ 8'(= r ) 9'(= {| l |} ) } ⊢ 2'(= a3◂ [ a25◂ [ a18◂ [ ]]] )
	ALC_RCD 2, rax
	mov r13,rax
	mov rax,QWORD [rsp-8+8*2]
	mov QWORD [r13+8+8*0],rax
	mov rax,QWORD [rsp-8+8*1]
	mov QWORD [r13+8+8*1],rax
	mov rax,r13
	mov BYTE [rax+6],3
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,16
	jmp LB_2424
LB_2424:
	cmp BYTE [r8+6],0
	jnz LB_2399
	POP_GRM_SCC
	ret
LB_2399:
	RB_GRM
	jmp LB_2427
LB_2426:
	add r14,1 
LB_2427:
	cmp r14,r9
	jge LB_2428
	JZ_SPC BYTE [r13+8+r14], LB_2426
LB_2428
	call GRM_234
	cmp BYTE [r8+6],0
	jnz LB_2431
	jmp LB_2432
LB_2431:
	jmp LB_2429
LB_2432:
	sub rsp,8
; .mov_ptn2 2'(= {| l |} ) ⊢ 8'(= {| l |} )
; .mov_ptn 2'(= {| l |} ) ⊢ 8'(= {| l |} )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_2430
LB_2429:
	add rsp,0
	jmp LB_2425
LB_2430:
	mov QWORD [rsp+8*1],r14
	mov r13,QWORD [rsp+16+8*1]
	mov r14,QWORD [rsp+8*1]
	jmp LB_2433
LB_2433
;; rsp=1 , %1583~1'(= r ) %1582~0'(= r ) %1581~8'(= {| l |} ) 
; #115 8'(= {| l |} ) ⊢ 0(<4)◂8'(= {| l |} )
;; rsp=1 , %1584~0(<4)◂8'(= {| l |} ) %1583~1'(= r ) %1582~0'(= r ) 
; #24 0(<4)◂8'(= {| l |} ) ⊢ 0(<2)◂0(<4)◂8'(= {| l |} )
;; rsp=1 , %1585~0(<2)◂0(<4)◂8'(= {| l |} ) %1583~1'(= r ) %1582~0'(= r ) 
; ∎ 0(<2)◂0(<4)◂8'(= {| l |} )
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂0(<4)◂8'(= {| l |} ) ⊢ 2'(= a3◂ [ a25◂ [ a18◂ [ ]]] )
; .mov_ptn 0(<2)◂0(<4)◂8'(= {| l |} ) ⊢ 2'(= a3◂ [ a25◂ [ a18◂ [ ]]] )
	mov rax,QWORD [rsp-8+8*1]
	mov BYTE [rax+6],0
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,8
	jmp LB_2434
LB_2434:
	cmp BYTE [r8+6],0
	jnz LB_2425
	POP_GRM_SCC
	ret
LB_2425:
	RB_GRM
	jmp LB_2437
LB_2436:
	add r14,1 
LB_2437:
	cmp r14,r9
	jge LB_2438
	JZ_SPC BYTE [r13+8+r14], LB_2436
LB_2438
	call GRM_72
	cmp BYTE [r8+6],0
	jnz LB_2441
	jmp LB_2442
LB_2441:
	jmp LB_2439
LB_2442:
	sub rsp,8
; .mov_ptn2 2'(= {| l |} ) ⊢ 8'(= {| l |} )
; .mov_ptn 2'(= {| l |} ) ⊢ 8'(= {| l |} )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_2440
LB_2439:
	add rsp,0
	jmp LB_2435
LB_2440:
	mov QWORD [rsp+8*1],r14
	mov r13,QWORD [rsp+16+8*1]
	mov r14,QWORD [rsp+8*1]
	jmp LB_2443
LB_2443
;; rsp=1 , %1588~1'(= r ) %1587~0'(= r ) %1586~8'(= {| l |} ) 
; #115 8'(= {| l |} ) ⊢ 0(<4)◂8'(= {| l |} )
;; rsp=1 , %1589~0(<4)◂8'(= {| l |} ) %1588~1'(= r ) %1587~0'(= r ) 
; #24 0(<4)◂8'(= {| l |} ) ⊢ 0(<2)◂0(<4)◂8'(= {| l |} )
;; rsp=1 , %1590~0(<2)◂0(<4)◂8'(= {| l |} ) %1588~1'(= r ) %1587~0'(= r ) 
; ∎ 0(<2)◂0(<4)◂8'(= {| l |} )
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂0(<4)◂8'(= {| l |} ) ⊢ 2'(= a3◂ [ a25◂ [ a18◂ [ ]]] )
; .mov_ptn 0(<2)◂0(<4)◂8'(= {| l |} ) ⊢ 2'(= a3◂ [ a25◂ [ a18◂ [ ]]] )
	mov rax,QWORD [rsp-8+8*1]
	mov BYTE [rax+6],0
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,8
	jmp LB_2444
LB_2444:
	cmp BYTE [r8+6],0
	jnz LB_2435
	POP_GRM_SCC
	ret
LB_2435:
	RB_GRM
	jmp LB_2447
LB_2446:
	add r14,1 
LB_2447:
	cmp r14,r9
	jge LB_2448
	JZ_SPC BYTE [r13+8+r14], LB_2446
LB_2448
	call GRM_194
	cmp BYTE [r8+6],0
	jnz LB_2451
	jmp LB_2452
LB_2451:
	jmp LB_2449
LB_2452:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a18◂ [ ] ) ⊢ 8'(= a18◂ [ ] )
; .mov_ptn 2'(= a18◂ [ ] ) ⊢ 8'(= a18◂ [ ] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_2450
LB_2449:
	add rsp,0
	jmp LB_2445
LB_2450:
	mov QWORD [rsp+8*1],r14
	mov r13,QWORD [rsp+16+8*1]
	mov r14,QWORD [rsp+8*1]
	jmp LB_2453
LB_2453
;; rsp=1 , %1593~1'(= r ) %1592~0'(= r ) %1591~8'(= a18◂ [ ] ) 
; #90 8'(= a18◂ [ ] ) ⊢ 1(<2)◂8'(= a18◂ [ ] )
;; rsp=1 , %1594~1(<2)◂8'(= a18◂ [ ] ) %1593~1'(= r ) %1592~0'(= r ) 
; #114 1(<2)◂8'(= a18◂ [ ] ) ⊢ 1(<4)◂1(<2)◂8'(= a18◂ [ ] )
;; rsp=1 , %1595~1(<4)◂1(<2)◂8'(= a18◂ [ ] ) %1593~1'(= r ) %1592~0'(= r ) 
; #24 1(<4)◂1(<2)◂8'(= a18◂ [ ] ) ⊢ 0(<2)◂1(<4)◂1(<2)◂8'(= a18◂ [ ] )
;; rsp=1 , %1596~0(<2)◂1(<4)◂1(<2)◂8'(= a18◂ [ ] ) %1593~1'(= r ) %1592~0'(= r ) 
; ∎ 0(<2)◂1(<4)◂1(<2)◂8'(= a18◂ [ ] )
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂1(<4)◂1(<2)◂8'(= a18◂ [ ] ) ⊢ 2'(= a3◂ [ a25◂ [ a18◂ [ ]]] )
; .mov_ptn 0(<2)◂1(<4)◂1(<2)◂8'(= a18◂ [ ] ) ⊢ 2'(= a3◂ [ a25◂ [ a18◂ [ ]]] )
	mov rax,QWORD [rsp-8+8*1]
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],1
	mov QWORD [rax+8],rdi
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],1
	mov QWORD [rax+8],rdi
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,8
	jmp LB_2454
LB_2454:
	cmp BYTE [r8+6],0
	jnz LB_2445
	POP_GRM_SCC
	ret
LB_2445:
	RB_GRM
	jmp LB_2457
LB_2456:
	add r14,1 
LB_2457:
	cmp r14,r9
	jge LB_2458
	JZ_SPC BYTE [r13+8+r14], LB_2456
LB_2458
	call GRM_233
	cmp BYTE [r8+6],0
	jnz LB_2461
	jmp LB_2462
LB_2461:
	jmp LB_2459
LB_2462:
	sub rsp,16
; .mov_ptn2 2'(= *{ a24◂ [ ]r} ) ⊢ { 8'(= a24◂ [ ] ) 9'(= r ) }
; .mov_ptn 2'(= *{ a24◂ [ ]r} ) ⊢ { 8'(= a24◂ [ ] ) 9'(= r ) }
	mov r10, QWORD [r8+8]
	mov QWORD [rsp-8+8*2],r10
	mov r11, QWORD [r8+16]
	mov QWORD [rsp-8+8*1],r11
	mov rdi,r8
	FREE_RCD 2,rdi
	jmp LB_2460
LB_2459:
	add rsp,0
	jmp LB_2455
LB_2460:
	mov QWORD [rsp+8*2],r14
	mov r13,QWORD [rsp+16+8*2]
	mov r14,QWORD [rsp+8*2]
	jmp LB_2463
LB_2463
;; rsp=2 , %1599~1'(= r ) %1598~0'(= r ) %1597~{ 8'(= a24◂ [ ] ) 9'(= r ) } 
; #113 { 8'(= a24◂ [ ] ) 9'(= r ) } ⊢ 2(<4)◂{ 8'(= a24◂ [ ] ) 9'(= r ) }
;; rsp=2 , %1600~2(<4)◂{ 8'(= a24◂ [ ] ) 9'(= r ) } %1599~1'(= r ) %1598~0'(= r ) 
; #24 2(<4)◂{ 8'(= a24◂ [ ] ) 9'(= r ) } ⊢ 0(<2)◂2(<4)◂{ 8'(= a24◂ [ ] ) 9'(= r ) }
;; rsp=2 , %1601~0(<2)◂2(<4)◂{ 8'(= a24◂ [ ] ) 9'(= r ) } %1599~1'(= r ) %1598~0'(= r ) 
; ∎ 0(<2)◂2(<4)◂{ 8'(= a24◂ [ ] ) 9'(= r ) }
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂2(<4)◂{ 8'(= a24◂ [ ] ) 9'(= r ) } ⊢ 2'(= a3◂ [ a25◂ [ a18◂ [ ]]] )
; .mov_ptn 0(<2)◂2(<4)◂{ 8'(= a24◂ [ ] ) 9'(= r ) } ⊢ 2'(= a3◂ [ a25◂ [ a18◂ [ ]]] )
	ALC_RCD 2, rax
	mov r13,rax
	mov rax,QWORD [rsp-8+8*2]
	mov QWORD [r13+8+8*0],rax
	mov rax,QWORD [rsp-8+8*1]
	mov QWORD [r13+8+8*1],rax
	mov rax,r13
	mov BYTE [rax+6],2
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,16
	jmp LB_2464
LB_2464:
	cmp BYTE [r8+6],0
	jnz LB_2455
	POP_GRM_SCC
	ret
LB_2455:
	POP_GRM_FAIL 
	ret
ETR_232:
	mov r9,0x0000_ffff_ffff_ffff
	and r9,[r13]
	call GRM_232
	ret
GRM_232:
	PUSH_GRM
	cmp r14,r9
	jge LB_2468
 lea rdi,[r13+8+r14] 
	C_PUSH_REGS
	call scf_d
	C_POP_REGS
	cmp rax,0 
	jz LB_2468
	add r14,rsi
	push rdi
	jmp LB_2469
LB_2468:
	mov r8,unt_1
	jmp LB_2466
LB_2469:
	jmp LB_2467
LB_2466:
	add rsp,0
	jmp LB_2465
LB_2467:
	lea rax,[r14+1]
	cmp rax,r9
	jg LB_2472
	jmp LB_2473
LB_2472:
	mov r8,unt_1
	jmp LB_2470
LB_2473:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],39
	jnz LB_2474
	jmp LB_2475
LB_2474:
	mov r8,unt_1
	jmp LB_2470
LB_2475:
	add r14,1
	jmp LB_2471
LB_2470:
	add rsp,8
	jmp LB_2465
LB_2471:
	mov QWORD [rsp+8*1],r14
	mov r13,QWORD [rsp+16+8*1]
	mov r14,QWORD [rsp+8*1]
	jmp LB_2476
LB_2476
;; rsp=1 , %1604~1'(= r ) %1603~0'(= r ) %1602~8'(= r ) 
; #24 8'(= r ) ⊢ 0(<2)◂8'(= r )
;; rsp=1 , %1605~0(<2)◂8'(= r ) %1604~1'(= r ) %1603~0'(= r ) 
; ∎ 0(<2)◂8'(= r )
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂8'(= r ) ⊢ 2'(= a3◂ [ r] )
; .mov_ptn 0(<2)◂8'(= r ) ⊢ 2'(= a3◂ [ r] )
	mov rax,QWORD [rsp-8+8*1]
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,8
	jmp LB_2477
LB_2477:
	cmp BYTE [r8+6],0
	jnz LB_2465
	POP_GRM_SCC
	ret
LB_2465:
	POP_GRM_FAIL 
	ret
ETR_233:
	mov r9,0x0000_ffff_ffff_ffff
	and r9,[r13]
	call GRM_233
	ret
GRM_233:
	PUSH_GRM
	cmp r14,r9
	jge LB_2481
 lea rdi,[r13+8+r14] 
	C_PUSH_REGS
	call scf_d
	C_POP_REGS
	cmp rax,0 
	jz LB_2481
	add r14,rsi
	push rdi
	jmp LB_2482
LB_2481:
	mov r8,unt_1
	jmp LB_2479
LB_2482:
	jmp LB_2480
LB_2479:
	add rsp,0
	jmp LB_2478
LB_2480:
	lea rax,[r14+2]
	cmp rax,r9
	jg LB_2485
	jmp LB_2486
LB_2485:
	mov r8,unt_1
	jmp LB_2483
LB_2486:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],100
	jnz LB_2487
	cmp BYTE [rdi+1],39
	jnz LB_2487
	jmp LB_2488
LB_2487:
	mov r8,unt_1
	jmp LB_2483
LB_2488:
	add r14,2
	jmp LB_2484
LB_2483:
	add rsp,8
	jmp LB_2478
LB_2484:
	mov QWORD [rsp+8*1],r14
	mov r13,QWORD [rsp+16+8*1]
	mov r14,QWORD [rsp+8*1]
	jmp LB_2489
LB_2489
;; rsp=1 , %1608~1'(= r ) %1607~0'(= r ) %1606~8'(= r ) 
; #110 { } ⊢ 1(<4)◂{ }
;; rsp=1 , %1609~1(<4)◂{ } %1608~1'(= r ) %1607~0'(= r ) %1606~8'(= r ) 
; #24 { 1(<4)◂{ } 8'(= r ) } ⊢ 0(<2)◂{ 1(<4)◂{ } 8'(= r ) }
;; rsp=1 , %1610~0(<2)◂{ 1(<4)◂{ } 8'(= r ) } %1608~1'(= r ) %1607~0'(= r ) 
; ∎ 0(<2)◂{ 1(<4)◂{ } 8'(= r ) }
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂{ 1(<4)◂{ } 8'(= r ) } ⊢ 2'(= a3◂ [ *{ a24◂ [ ]r}] )
; .mov_ptn 0(<2)◂{ 1(<4)◂{ } 8'(= r ) } ⊢ 2'(= a3◂ [ *{ a24◂ [ ]r}] )
	ALC_RCD 2, rax
	mov r13,rax
	mov rax,unt 
	mov rax,unt_1
	mov QWORD [r13+8+8*0],rax
	mov rax,QWORD [rsp-8+8*1]
	mov QWORD [r13+8+8*1],rax
	mov rax,r13
	mov BYTE [rax+6],0
	mov r8,rax
	add rsp,8
	jmp LB_2490
LB_2490:
	cmp BYTE [r8+6],0
	jnz LB_2478
	POP_GRM_SCC
	ret
LB_2478:
	RB_GRM
	cmp r14,r9
	jge LB_2494
 lea rdi,[r13+8+r14] 
	C_PUSH_REGS
	call scf_d
	C_POP_REGS
	cmp rax,0 
	jz LB_2494
	add r14,rsi
	push rdi
	jmp LB_2495
LB_2494:
	mov r8,unt_1
	jmp LB_2492
LB_2495:
	jmp LB_2493
LB_2492:
	add rsp,0
	jmp LB_2491
LB_2493:
	lea rax,[r14+2]
	cmp rax,r9
	jg LB_2498
	jmp LB_2499
LB_2498:
	mov r8,unt_1
	jmp LB_2496
LB_2499:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],120
	jnz LB_2500
	cmp BYTE [rdi+1],39
	jnz LB_2500
	jmp LB_2501
LB_2500:
	mov r8,unt_1
	jmp LB_2496
LB_2501:
	add r14,2
	jmp LB_2497
LB_2496:
	add rsp,8
	jmp LB_2491
LB_2497:
	mov QWORD [rsp+8*1],r14
	mov r13,QWORD [rsp+16+8*1]
	mov r14,QWORD [rsp+8*1]
	jmp LB_2502
LB_2502
;; rsp=1 , %1613~1'(= r ) %1612~0'(= r ) %1611~8'(= r ) 
; #109 { } ⊢ 2(<4)◂{ }
;; rsp=1 , %1614~2(<4)◂{ } %1613~1'(= r ) %1612~0'(= r ) %1611~8'(= r ) 
; #24 { 2(<4)◂{ } 8'(= r ) } ⊢ 0(<2)◂{ 2(<4)◂{ } 8'(= r ) }
;; rsp=1 , %1615~0(<2)◂{ 2(<4)◂{ } 8'(= r ) } %1613~1'(= r ) %1612~0'(= r ) 
; ∎ 0(<2)◂{ 2(<4)◂{ } 8'(= r ) }
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂{ 2(<4)◂{ } 8'(= r ) } ⊢ 2'(= a3◂ [ *{ a24◂ [ ]r}] )
; .mov_ptn 0(<2)◂{ 2(<4)◂{ } 8'(= r ) } ⊢ 2'(= a3◂ [ *{ a24◂ [ ]r}] )
	ALC_RCD 2, rax
	mov r13,rax
	mov rax,unt 
	mov rax,unt_2
	mov QWORD [r13+8+8*0],rax
	mov rax,QWORD [rsp-8+8*1]
	mov QWORD [r13+8+8*1],rax
	mov rax,r13
	mov BYTE [rax+6],0
	mov r8,rax
	add rsp,8
	jmp LB_2503
LB_2503:
	cmp BYTE [r8+6],0
	jnz LB_2491
	POP_GRM_SCC
	ret
LB_2491:
	RB_GRM
	cmp r14,r9
	jge LB_2507
 lea rdi,[r13+8+r14] 
	C_PUSH_REGS
	call scf_d
	C_POP_REGS
	cmp rax,0 
	jz LB_2507
	add r14,rsi
	push rdi
	jmp LB_2508
LB_2507:
	mov r8,unt_1
	jmp LB_2505
LB_2508:
	jmp LB_2506
LB_2505:
	add rsp,0
	jmp LB_2504
LB_2506:
	lea rax,[r14+1]
	cmp rax,r9
	jg LB_2511
	jmp LB_2512
LB_2511:
	mov r8,unt_1
	jmp LB_2509
LB_2512:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],39
	jnz LB_2513
	jmp LB_2514
LB_2513:
	mov r8,unt_1
	jmp LB_2509
LB_2514:
	add r14,1
	jmp LB_2510
LB_2509:
	add rsp,8
	jmp LB_2504
LB_2510:
	mov QWORD [rsp+8*1],r14
	mov r13,QWORD [rsp+16+8*1]
	mov r14,QWORD [rsp+8*1]
	jmp LB_2515
LB_2515
;; rsp=1 , %1618~1'(= r ) %1617~0'(= r ) %1616~8'(= r ) 
; #111 { } ⊢ 0(<4)◂{ }
;; rsp=1 , %1619~0(<4)◂{ } %1618~1'(= r ) %1617~0'(= r ) %1616~8'(= r ) 
; #24 { 0(<4)◂{ } 8'(= r ) } ⊢ 0(<2)◂{ 0(<4)◂{ } 8'(= r ) }
;; rsp=1 , %1620~0(<2)◂{ 0(<4)◂{ } 8'(= r ) } %1618~1'(= r ) %1617~0'(= r ) 
; ∎ 0(<2)◂{ 0(<4)◂{ } 8'(= r ) }
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂{ 0(<4)◂{ } 8'(= r ) } ⊢ 2'(= a3◂ [ *{ a24◂ [ ]r}] )
; .mov_ptn 0(<2)◂{ 0(<4)◂{ } 8'(= r ) } ⊢ 2'(= a3◂ [ *{ a24◂ [ ]r}] )
	ALC_RCD 2, rax
	mov r13,rax
	mov rax,unt 
	mov rax,unt_0
	mov QWORD [r13+8+8*0],rax
	mov rax,QWORD [rsp-8+8*1]
	mov QWORD [r13+8+8*1],rax
	mov rax,r13
	mov BYTE [rax+6],0
	mov r8,rax
	add rsp,8
	jmp LB_2516
LB_2516:
	cmp BYTE [r8+6],0
	jnz LB_2504
	POP_GRM_SCC
	ret
LB_2504:
	POP_GRM_FAIL 
	ret
ETR_234:
	mov r9,0x0000_ffff_ffff_ffff
	and r9,[r13]
	call GRM_234
	ret
GRM_234:
	PUSH_GRM
	lea rax,[r14+1]
	cmp rax,r9
	jg LB_2520
	jmp LB_2521
LB_2520:
	mov r8,unt_1
	jmp LB_2518
LB_2521:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],96
	jnz LB_2522
	jmp LB_2523
LB_2522:
	mov r8,unt_1
	jmp LB_2518
LB_2523:
	add r14,1
	jmp LB_2519
LB_2518:
	add rsp,0
	jmp LB_2517
LB_2519:
	call GRM_235
	cmp BYTE [r8+6],0
	jnz LB_2526
	jmp LB_2527
LB_2526:
	jmp LB_2524
LB_2527:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a14◂ [ ] ) ⊢ 8'(= a14◂ [ ] )
; .mov_ptn 2'(= a14◂ [ ] ) ⊢ 8'(= a14◂ [ ] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_2525
LB_2524:
	add rsp,0
	jmp LB_2517
LB_2525:
	mov QWORD [rsp+8*1],r14
	mov r13,QWORD [rsp+16+8*1]
	mov r14,QWORD [rsp+8*1]
	jmp LB_2528
LB_2528
;; rsp=1 , %1623~1'(= r ) %1622~0'(= r ) %1621~8'(= a14◂ [ ] ) 
; #48 8'(= a14◂ [ ] ) ⊢ { 3'(= a14◂ [ ] ) 2'(= {| l |} ) }
	sub rsp,16
	mov QWORD [rsp+8*0],r13
	mov QWORD [rsp+8*1],r14
; .mov_ptn2 8'(= a14◂ [ ] ) ⊢ 0'(= a14◂ [ ] )
; .mov_ptn 8'(= a14◂ [ ] ) ⊢ 0'(= a14◂ [ ] )
	mov rax,QWORD [rsp-8+8*3]
	mov r13,rax
	call ETR_48
	mov r8,r14
	mov r14,QWORD [rsp-8+8*2]
	mov r9,r13
	mov r13,QWORD [rsp-8+8*1]
	add rsp,24
;; rsp=0 , %1625~2'(= {| l |} ) %1624~3'(= a14◂ [ ] ) %1623~1'(= r ) %1622~0'(= r ) 
; #24 2'(= {| l |} ) ⊢ 0(<2)◂2'(= {| l |} )
;; rsp=0 , %1626~0(<2)◂2'(= {| l |} ) %1624~3'(= a14◂ [ ] ) %1623~1'(= r ) %1622~0'(= r ) 
; ∎ 0(<2)◂2'(= {| l |} )
; .dlt.ptn 3'(= a14◂ [ ] )
	mov rdi,r9
	C_PUSH_REGS
	mov r8,rdi
	call LB_114
	C_POP_REGS
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂2'(= {| l |} ) ⊢ 2'(= a3◂ [ {| l |}] )
	mov r13,r8
; .mov_ptn 0(<2)◂0'(= {| l |} ) ⊢ 2'(= a3◂ [ {| l |}] )
	mov rax,r13
	mov BYTE [rax+6],0
	mov r8,rax
	jmp LB_2529
LB_2529:
	cmp BYTE [r8+6],0
	jnz LB_2517
	POP_GRM_SCC
	ret
LB_2517:
	POP_GRM_FAIL 
	ret
ETR_235:
	mov r9,0x0000_ffff_ffff_ffff
	and r9,[r13]
	call GRM_235
	ret
GRM_235:
	PUSH_GRM
	lea rax,[r14+1]
	cmp rax,r9
	jg LB_2533
	jmp LB_2534
LB_2533:
	mov r8,unt_1
	jmp LB_2531
LB_2534:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],10
	jnz LB_2535
	jmp LB_2536
LB_2535:
	mov r8,unt_1
	jmp LB_2531
LB_2536:
	add r14,1
	jmp LB_2532
LB_2531:
	add rsp,0
	jmp LB_2530
LB_2532:
	mov QWORD [rsp+8*0],r14
	mov r13,QWORD [rsp+16+8*0]
	mov r14,QWORD [rsp+8*0]
	jmp LB_2537
LB_2537
;; rsp=0 , %1628~1'(= r ) %1627~0'(= r ) 
; $ %[ 10r ] ⊢ %[ 10r ]
;; rsp=0 , %1629~%[ 10r ] %1628~1'(= r ) %1627~0'(= r ) 
; #37 { } ⊢ 2(<4)◂{ }
;; rsp=0 , %1630~2(<4)◂{ } %1629~%[ 10r ] %1628~1'(= r ) %1627~0'(= r ) 
; #45 { %[ 10r ] 2(<4)◂{ } } ⊢ 2'(= a14◂ [ ] )
	sub rsp,16
	mov QWORD [rsp+8*0],r13
	mov QWORD [rsp+8*1],r14
; .mov_ptn2 { %[ 10r ] 2(<4)◂{ } } ⊢ { 0'(= r ) 1'(= a14◂ [ ] ) }
; .mov_ptn 2(<4)◂{ } ⊢ 1'(= a14◂ [ ] )
	mov rax,unt 
	mov rax,unt_2
	mov r14,rax
; .mov_ptn %[ 10r ] ⊢ 0'(= r )
	mov rax,10
	mov r13,rax
	call ETR_45
	mov r14,QWORD [rsp-8+8*2]
	mov r8,r13
	mov r13,QWORD [rsp-8+8*1]
	add rsp,16
;; rsp=0 , %1631~2'(= a14◂ [ ] ) %1628~1'(= r ) %1627~0'(= r ) 
; #24 2'(= a14◂ [ ] ) ⊢ 0(<2)◂2'(= a14◂ [ ] )
;; rsp=0 , %1632~0(<2)◂2'(= a14◂ [ ] ) %1628~1'(= r ) %1627~0'(= r ) 
; ∎ 0(<2)◂2'(= a14◂ [ ] )
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂2'(= a14◂ [ ] ) ⊢ 2'(= a3◂ [ a14◂ [ ]] )
	mov r13,r8
; .mov_ptn 0(<2)◂0'(= a14◂ [ ] ) ⊢ 2'(= a3◂ [ a14◂ [ ]] )
	mov rax,r13
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	jmp LB_2538
LB_2538:
	cmp BYTE [r8+6],0
	jnz LB_2530
	POP_GRM_SCC
	ret
LB_2530:
	RB_GRM
	cmp r14,r9
	jge LB_2542
	jmp LB_2543
LB_2542:
	mov r8,unt_1 
	jmp LB_2540
LB_2543:
	movzx rdi,BYTE [r13+8+r14]
	push rdi 
	add r14,1 
	jmp LB_2541
LB_2540:
	add rsp,0
	jmp LB_2539
LB_2541:
	call GRM_235
	cmp BYTE [r8+6],0
	jnz LB_2546
	jmp LB_2547
LB_2546:
	jmp LB_2544
LB_2547:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a14◂ [ ] ) ⊢ 9'(= a14◂ [ ] )
; .mov_ptn 2'(= a14◂ [ ] ) ⊢ 9'(= a14◂ [ ] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_2545
LB_2544:
	add rsp,8
	jmp LB_2539
LB_2545:
	mov QWORD [rsp+8*2],r14
	mov r13,QWORD [rsp+16+8*2]
	mov r14,QWORD [rsp+8*2]
	jmp LB_2548
LB_2548
;; rsp=2 , %1636~1'(= r ) %1635~0'(= r ) %1634~9'(= a14◂ [ ] ) %1633~8'(= r ) 
; #45 { 8'(= r ) 9'(= a14◂ [ ] ) } ⊢ 2'(= a14◂ [ ] )
	sub rsp,16
	mov QWORD [rsp+8*0],r13
	mov QWORD [rsp+8*1],r14
; .mov_ptn2 { 8'(= r ) 9'(= a14◂ [ ] ) } ⊢ { 0'(= r ) 1'(= a14◂ [ ] ) }
; .mov_ptn 9'(= a14◂ [ ] ) ⊢ 1'(= a14◂ [ ] )
	mov rax,QWORD [rsp-8+8*3]
	mov r14,rax
; .mov_ptn 8'(= r ) ⊢ 0'(= r )
	mov rax,QWORD [rsp-8+8*4]
	mov r13,rax
	call ETR_45
	mov r14,QWORD [rsp-8+8*2]
	mov r8,r13
	mov r13,QWORD [rsp-8+8*1]
	add rsp,32
;; rsp=0 , %1637~2'(= a14◂ [ ] ) %1636~1'(= r ) %1635~0'(= r ) 
; #24 2'(= a14◂ [ ] ) ⊢ 0(<2)◂2'(= a14◂ [ ] )
;; rsp=0 , %1638~0(<2)◂2'(= a14◂ [ ] ) %1636~1'(= r ) %1635~0'(= r ) 
; ∎ 0(<2)◂2'(= a14◂ [ ] )
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂2'(= a14◂ [ ] ) ⊢ 2'(= a3◂ [ a14◂ [ ]] )
	mov r13,r8
; .mov_ptn 0(<2)◂0'(= a14◂ [ ] ) ⊢ 2'(= a3◂ [ a14◂ [ ]] )
	mov rax,r13
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	jmp LB_2549
LB_2549:
	cmp BYTE [r8+6],0
	jnz LB_2539
	POP_GRM_SCC
	ret
LB_2539:
	POP_GRM_FAIL 
	ret
ETR_236:
	mov r9,0x0000_ffff_ffff_ffff
	and r9,[r13]
	call GRM_236
	ret
GRM_236:
	PUSH_GRM
	jmp LB_2552
LB_2551:
	add r14,1 
LB_2552:
	cmp r14,r9
	jge LB_2553
	JZ_LINE_SPC BYTE [r13+8+r14], LB_2551
LB_2553
	call GRM_221
	cmp BYTE [r8+6],0
	jnz LB_2556
	jmp LB_2557
LB_2556:
	jmp LB_2554
LB_2557:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a44◂ [ *{ }] ) ⊢ 8'(= a44◂ [ *{ }] )
; .mov_ptn 2'(= a44◂ [ *{ }] ) ⊢ 8'(= a44◂ [ *{ }] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_2555
LB_2554:
	add rsp,0
	jmp LB_2550
LB_2555:
	jmp LB_2559
LB_2558:
	add r14,1 
LB_2559:
	cmp r14,r9
	jge LB_2560
	JZ_LINE_SPC BYTE [r13+8+r14], LB_2558
LB_2560
	lea rax,[r14+2]
	cmp rax,r9
	jg LB_2563
	jmp LB_2564
LB_2563:
	mov r8,unt_1
	jmp LB_2561
LB_2564:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],47
	jnz LB_2565
	cmp BYTE [rdi+1],47
	jnz LB_2565
	jmp LB_2566
LB_2565:
	mov r8,unt_1
	jmp LB_2561
LB_2566:
	add r14,2
	jmp LB_2562
LB_2561:
	add rsp,8
	jmp LB_2550
LB_2562:
	mov QWORD [rsp+8*1],r14
	mov r13,QWORD [rsp+16+8*1]
	mov r14,QWORD [rsp+8*1]
	jmp LB_2567
LB_2567
;; rsp=1 , %1641~1'(= r ) %1640~0'(= r ) %1639~8'(= a44◂ [ *{ }] ) 
; #22 { } ⊢ 1(<2)◂{ }
;; rsp=1 , %1642~1(<2)◂{ } %1641~1'(= r ) %1640~0'(= r ) %1639~8'(= a44◂ [ *{ }] ) 
; #24 1(<2)◂{ } ⊢ 0(<2)◂1(<2)◂{ }
;; rsp=1 , %1643~0(<2)◂1(<2)◂{ } %1641~1'(= r ) %1640~0'(= r ) %1639~8'(= a44◂ [ *{ }] ) 
; ∎ 0(<2)◂1(<2)◂{ }
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 8'(= a44◂ [ *{ }] )
	mov rdi,QWORD [rsp-8+8*1]
	C_PUSH_REGS
	mov r8,rdi
	call LB_1876
	C_POP_REGS
; .mov_ptn2 0(<2)◂1(<2)◂{ } ⊢ 2'(= a3◂ [ a2◂ [ a25◂ [ a18◂ [ ]]]] )
; .mov_ptn 0(<2)◂1(<2)◂{ } ⊢ 2'(= a3◂ [ a2◂ [ a25◂ [ a18◂ [ ]]]] )
	mov rax,unt 
	mov rax,unt_1
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,8
	jmp LB_2568
LB_2568:
	cmp BYTE [r8+6],0
	jnz LB_2550
	POP_GRM_SCC
	ret
LB_2550:
	RB_GRM
	jmp LB_2571
LB_2570:
	add r14,1 
LB_2571:
	cmp r14,r9
	jge LB_2572
	JZ_LINE_SPC BYTE [r13+8+r14], LB_2570
LB_2572
	call GRM_221
	cmp BYTE [r8+6],0
	jnz LB_2575
	jmp LB_2576
LB_2575:
	jmp LB_2573
LB_2576:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a44◂ [ *{ }] ) ⊢ 8'(= a44◂ [ *{ }] )
; .mov_ptn 2'(= a44◂ [ *{ }] ) ⊢ 8'(= a44◂ [ *{ }] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_2574
LB_2573:
	add rsp,0
	jmp LB_2569
LB_2574:
	jmp LB_2578
LB_2577:
	add r14,1 
LB_2578:
	cmp r14,r9
	jge LB_2579
	JZ_LINE_SPC BYTE [r13+8+r14], LB_2577
LB_2579
	call GRM_231
	cmp BYTE [r8+6],0
	jnz LB_2582
	jmp LB_2583
LB_2582:
	jmp LB_2580
LB_2583:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a25◂ [ a18◂ [ ]] ) ⊢ 9'(= a25◂ [ a18◂ [ ]] )
; .mov_ptn 2'(= a25◂ [ a18◂ [ ]] ) ⊢ 9'(= a25◂ [ a18◂ [ ]] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_2581
LB_2580:
	add rsp,8
	jmp LB_2569
LB_2581:
	jmp LB_2585
LB_2584:
	add r14,1 
LB_2585:
	cmp r14,r9
	jge LB_2586
	JZ_LINE_SPC BYTE [r13+8+r14], LB_2584
LB_2586
	call GRM_236
	cmp BYTE [r8+6],0
	jnz LB_2589
	jmp LB_2590
LB_2589:
	jmp LB_2587
LB_2590:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a2◂ [ a25◂ [ a18◂ [ ]]] ) ⊢ 10'(= a2◂ [ a25◂ [ a18◂ [ ]]] )
; .mov_ptn 2'(= a2◂ [ a25◂ [ a18◂ [ ]]] ) ⊢ 10'(= a2◂ [ a25◂ [ a18◂ [ ]]] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_2588
LB_2587:
	add rsp,16
	jmp LB_2569
LB_2588:
	mov QWORD [rsp+8*3],r14
	mov r13,QWORD [rsp+16+8*3]
	mov r14,QWORD [rsp+8*3]
	jmp LB_2591
LB_2591
;; rsp=3 , %1648~1'(= r ) %1647~0'(= r ) %1646~10'(= a2◂ [ a25◂ [ a18◂ [ ]]] ) %1645~9'(= a25◂ [ a18◂ [ ]] ) %1644~8'(= a44◂ [ *{ }] ) 
; #23 { 9'(= a25◂ [ a18◂ [ ]] ) 10'(= a2◂ [ a25◂ [ a18◂ [ ]]] ) } ⊢ 0(<2)◂{ 9'(= a25◂ [ a18◂ [ ]] ) 10'(= a2◂ [ a25◂ [ a18◂ [ ]]] ) }
;; rsp=3 , %1649~0(<2)◂{ 9'(= a25◂ [ a18◂ [ ]] ) 10'(= a2◂ [ a25◂ [ a18◂ [ ]]] ) } %1648~1'(= r ) %1647~0'(= r ) %1644~8'(= a44◂ [ *{ }] ) 
; #24 0(<2)◂{ 9'(= a25◂ [ a18◂ [ ]] ) 10'(= a2◂ [ a25◂ [ a18◂ [ ]]] ) } ⊢ 0(<2)◂0(<2)◂{ 9'(= a25◂ [ a18◂ [ ]] ) 10'(= a2◂ [ a25◂ [ a18◂ [ ]]] ) }
;; rsp=3 , %1650~0(<2)◂0(<2)◂{ 9'(= a25◂ [ a18◂ [ ]] ) 10'(= a2◂ [ a25◂ [ a18◂ [ ]]] ) } %1648~1'(= r ) %1647~0'(= r ) %1644~8'(= a44◂ [ *{ }] ) 
; ∎ 0(<2)◂0(<2)◂{ 9'(= a25◂ [ a18◂ [ ]] ) 10'(= a2◂ [ a25◂ [ a18◂ [ ]]] ) }
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 8'(= a44◂ [ *{ }] )
	mov rdi,QWORD [rsp-8+8*3]
	C_PUSH_REGS
	mov r8,rdi
	call LB_1876
	C_POP_REGS
; .mov_ptn2 0(<2)◂0(<2)◂{ 9'(= a25◂ [ a18◂ [ ]] ) 10'(= a2◂ [ a25◂ [ a18◂ [ ]]] ) } ⊢ 2'(= a3◂ [ a2◂ [ a25◂ [ a18◂ [ ]]]] )
; .mov_ptn 0(<2)◂0(<2)◂{ 9'(= a25◂ [ a18◂ [ ]] ) 10'(= a2◂ [ a25◂ [ a18◂ [ ]]] ) } ⊢ 2'(= a3◂ [ a2◂ [ a25◂ [ a18◂ [ ]]]] )
	ALC_RCD 2, rax
	mov r13,rax
	mov rax,QWORD [rsp-8+8*2]
	mov QWORD [r13+8+8*0],rax
	mov rax,QWORD [rsp-8+8*1]
	mov QWORD [r13+8+8*1],rax
	mov rax,r13
	mov BYTE [rax+6],0
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,24
	jmp LB_2592
LB_2592:
	cmp BYTE [r8+6],0
	jnz LB_2569
	POP_GRM_SCC
	ret
LB_2569:
	POP_GRM_FAIL 
	ret
LB_2852: ;; #56 { 0'(= a2◂ [ a25◂ [ a18◂ [ ]]] ) 1'(= a2◂ [ a25◂ [ a18◂ [ ]]] ) } ⊢ 0'(= a2◂ [ a25◂ [ a18◂ [ ]]] ) : ({ _lst◂4694'(=4695'(=_t25◂_t18)) _lst◂_t25◂_t18 }→_lst◂_t25◂_t18)
;; rsp=0 , %118~1'(= a2◂ [ a25◂ [ a18◂ [ ]]] ) %117~0'(= a2◂ [ a25◂ [ a18◂ [ ]]] ) 
;; ?; 1'(= a2◂ [ a25◂ [ a18◂ [ ]]] ) ⊢ 1(<2)◂{ }
	mov rdi,r14
	cmp BYTE [rdi+6],1
	jnz LB_2854
	jmp LB_2855
LB_2854:
	jmp LB_2853
LB_2855:
;; rsp=0 , %117~0'(= a2◂ [ a25◂ [ a18◂ [ ]]] ) 
; ∎ 0'(= a2◂ [ a25◂ [ a18◂ [ ]]] )
; .mov_ptn2 0'(= a2◂ [ a25◂ [ a18◂ [ ]]] ) ⊢ 0'(= a2◂ [ a25◂ [ a18◂ [ ]]] )
	ret
LB_2853:
;; ?; 1'(= a2◂ [ a25◂ [ a18◂ [ ]]] ) ⊢ 0(<2)◂{ 2'(= a25◂ [ a18◂ [ ]] ) 3'(= a2◂ [ a25◂ [ a18◂ [ ]]] ) }
	mov r8, QWORD [r14+8]
	mov r9, QWORD [r14+16]
	mov QWORD [GBG_VCT+8*0],r14
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_RCD 2,rdi
;; rsp=0 , %120~3'(= a2◂ [ a25◂ [ a18◂ [ ]]] ) %119~2'(= a25◂ [ a18◂ [ ]] ) %117~0'(= a2◂ [ a25◂ [ a18◂ [ ]]] ) 
; #23 { 2'(= a25◂ [ a18◂ [ ]] ) 0'(= a2◂ [ a25◂ [ a18◂ [ ]]] ) } ⊢ 0(<2)◂{ 2'(= a25◂ [ a18◂ [ ]] ) 0'(= a2◂ [ a25◂ [ a18◂ [ ]]] ) }
;; rsp=0 , %121~0(<2)◂{ 2'(= a25◂ [ a18◂ [ ]] ) 0'(= a2◂ [ a25◂ [ a18◂ [ ]]] ) } %120~3'(= a2◂ [ a25◂ [ a18◂ [ ]]] ) 
; #56 { 0(<2)◂{ 2'(= a25◂ [ a18◂ [ ]] ) 0'(= a2◂ [ a25◂ [ a18◂ [ ]]] ) } 3'(= a2◂ [ a25◂ [ a18◂ [ ]]] ) } ⊢ 0'(= a2◂ [ a25◂ [ a18◂ [ ]]] )
; .mov_ptn2 { 0(<2)◂{ 2'(= a25◂ [ a18◂ [ ]] ) 0'(= a2◂ [ a25◂ [ a18◂ [ ]]] ) } 3'(= a2◂ [ a25◂ [ a18◂ [ ]]] ) } ⊢ { 0'(= a2◂ [ a25◂ [ a18◂ [ ]]] ) 1'(= a2◂ [ a25◂ [ a18◂ [ ]]] ) }
; .mov_ptn 3'(= a2◂ [ a25◂ [ a18◂ [ ]]] ) ⊢ 1'(= a2◂ [ a25◂ [ a18◂ [ ]]] )
	mov rax,r9
	mov r14,rax
	mov r10,r13
; .mov_ptn 0(<2)◂{ 2'(= a25◂ [ a18◂ [ ]] ) 4'(= a2◂ [ a25◂ [ a18◂ [ ]]] ) } ⊢ 0'(= a2◂ [ a25◂ [ a18◂ [ ]]] )
	ALC_RCD 2, rax
	mov r9,rax
	mov rax,r8
	mov QWORD [r9+8+8*0],rax
	mov rax,r10
	mov QWORD [r9+8+8*1],rax
	mov rax,r9
	mov BYTE [rax+6],0
	mov r13,rax
	call LB_2852
;; rsp=0 , %122~0'(= a2◂ [ a25◂ [ a18◂ [ ]]] ) 
; ∎ 0'(= a2◂ [ a25◂ [ a18◂ [ ]]] )
; .mov_ptn2 0'(= a2◂ [ a25◂ [ a18◂ [ ]]] ) ⊢ 0'(= a2◂ [ a25◂ [ a18◂ [ ]]] )
	ret
LB_2851: ;; #57 0'(= a2◂ [ a25◂ [ a18◂ [ ]]] ) ⊢ 0'(= a2◂ [ a25◂ [ a18◂ [ ]]] ) : (_lst◂_t25◂_t18→_lst◂_t25◂_t18)
;; rsp=0 , %123~0'(= a2◂ [ a25◂ [ a18◂ [ ]]] ) 
; #22 { } ⊢ 1(<2)◂{ }
;; rsp=0 , %124~1(<2)◂{ } %123~0'(= a2◂ [ a25◂ [ a18◂ [ ]]] ) 
; #56 { 1(<2)◂{ } 0'(= a2◂ [ a25◂ [ a18◂ [ ]]] ) } ⊢ 0'(= a2◂ [ a25◂ [ a18◂ [ ]]] )
; .mov_ptn2 { 1(<2)◂{ } 0'(= a2◂ [ a25◂ [ a18◂ [ ]]] ) } ⊢ { 0'(= a2◂ [ a25◂ [ a18◂ [ ]]] ) 1'(= a2◂ [ a25◂ [ a18◂ [ ]]] ) }
; .mov_ptn 0'(= a2◂ [ a25◂ [ a18◂ [ ]]] ) ⊢ 1'(= a2◂ [ a25◂ [ a18◂ [ ]]] )
	mov rax,r13
	mov r14,rax
; .mov_ptn 1(<2)◂{ } ⊢ 0'(= a2◂ [ a25◂ [ a18◂ [ ]]] )
	mov rax,unt 
	mov rax,unt_1
	mov r13,rax
	call LB_2852
;; rsp=0 , %125~0'(= a2◂ [ a25◂ [ a18◂ [ ]]] ) 
; ∎ 0'(= a2◂ [ a25◂ [ a18◂ [ ]]] )
; .mov_ptn2 0'(= a2◂ [ a25◂ [ a18◂ [ ]]] ) ⊢ 0'(= a2◂ [ a25◂ [ a18◂ [ ]]] )
	ret
LB_3363: ;; #199 { 0'(= a44◂ [ a2◂ [ a30◂ [ a18◂ [ ]{| l |}]]] ) 1'(= a44◂ [ a26◂ [ a18◂ [ ]{| l |}]] ) } ⊢ 0'(= a44◂ [ *{ a2◂ [ a30◂ [ a18◂ [ ]{| l |}]]a26◂ [ a18◂ [ ]{| l |}]}] ) : ({ _t44◂_lst◂_t30◂_s8◂_t18 _t44◂_t26◂_s8◂_t18 }→_t44◂{ _lst◂_t30◂_s8◂_t18 _t26◂_s8◂_t18 })
;; rsp=0 , %1136~1'(= a44◂ [ a26◂ [ a18◂ [ ]{| l |}]] ) %1135~0'(= a44◂ [ a2◂ [ a30◂ [ a18◂ [ ]{| l |}]]] ) 
;; ? 0'(= a44◂ [ a2◂ [ a30◂ [ a18◂ [ ]{| l |}]]] ) ⊢ 0(<2)◂2'(= a2◂ [ a30◂ [ a18◂ [ ]{| l |}]] )
	mov rdi,r13
	cmp BYTE [rdi+6],0
	jnz LB_3365
	jmp LB_3366
LB_3365:
	jmp LB_3364
LB_3366:
	mov QWORD [GBG_VCT+8*0],rdi
	mov r8,QWORD [rdi+8]
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_LN rdi
;; rsp=0 , %1138~2'(= a2◂ [ a30◂ [ a18◂ [ ]{| l |}]] ) %1136~1'(= a44◂ [ a26◂ [ a18◂ [ ]{| l |}]] ) 
;; ? 1'(= a44◂ [ a26◂ [ a18◂ [ ]{| l |}]] ) ⊢ 0(<2)◂0'(= a26◂ [ a18◂ [ ]{| l |}] )
	mov rdi,r14
	cmp BYTE [rdi+6],0
	jnz LB_3368
	jmp LB_3369
LB_3368:
	jmp LB_3367
LB_3369:
	mov QWORD [GBG_VCT+8*0],rdi
	mov r13,QWORD [rdi+8]
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_LN rdi
;; rsp=0 , %1140~0'(= a26◂ [ a18◂ [ ]{| l |}] ) %1138~2'(= a2◂ [ a30◂ [ a18◂ [ ]{| l |}]] ) 
; #198 { 2'(= a2◂ [ a30◂ [ a18◂ [ ]{| l |}]] ) 0'(= a26◂ [ a18◂ [ ]{| l |}] ) } ⊢ 0(<2)◂{ 2'(= a2◂ [ a30◂ [ a18◂ [ ]{| l |}]] ) 0'(= a26◂ [ a18◂ [ ]{| l |}] ) }
;; rsp=0 , %1141~0(<2)◂{ 2'(= a2◂ [ a30◂ [ a18◂ [ ]{| l |}]] ) 0'(= a26◂ [ a18◂ [ ]{| l |}] ) } 
; ∎ 0(<2)◂{ 2'(= a2◂ [ a30◂ [ a18◂ [ ]{| l |}]] ) 0'(= a26◂ [ a18◂ [ ]{| l |}] ) }
; .mov_ptn2 0(<2)◂{ 2'(= a2◂ [ a30◂ [ a18◂ [ ]{| l |}]] ) 0'(= a26◂ [ a18◂ [ ]{| l |}] ) } ⊢ 0'(= a44◂ [ *{ a2◂ [ a30◂ [ a18◂ [ ]{| l |}]]a26◂ [ a18◂ [ ]{| l |}]}] )
	mov r14,r13
; .mov_ptn 0(<2)◂{ 2'(= a2◂ [ a30◂ [ a18◂ [ ]{| l |}]] ) 1'(= a26◂ [ a18◂ [ ]{| l |}] ) } ⊢ 0'(= a44◂ [ *{ a2◂ [ a30◂ [ a18◂ [ ]{| l |}]]a26◂ [ a18◂ [ ]{| l |}]}] )
	ALC_RCD 2, rax
	mov r9,rax
	mov rax,r8
	mov QWORD [r9+8+8*0],rax
	mov rax,r14
	mov QWORD [r9+8+8*1],rax
	mov rax,r9
	mov BYTE [rax+6],0
	mov r13,rax
	ret
LB_3367:
;; ?. 1'(= a44◂ [ a26◂ [ a18◂ [ ]{| l |}]] ) ⊢ 1(<2)◂0'(= a2◂ [ *{ rr{| l |}}] )
	mov QWORD [GBG_VCT+8*0],rdi
	mov r13,QWORD [rdi+8]
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_LN rdi
;; rsp=0 , %1139~0'(= a2◂ [ *{ rr{| l |}}] ) %1138~2'(= a2◂ [ a30◂ [ a18◂ [ ]{| l |}]] ) 
; #197 0'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 1(<2)◂0'(= a2◂ [ *{ rr{| l |}}] )
;; rsp=0 , %1142~1(<2)◂0'(= a2◂ [ *{ rr{| l |}}] ) %1138~2'(= a2◂ [ a30◂ [ a18◂ [ ]{| l |}]] ) 
; ∎ 1(<2)◂0'(= a2◂ [ *{ rr{| l |}}] )
; .dlt.ptn 2'(= a2◂ [ a30◂ [ a18◂ [ ]{| l |}]] )
	mov rdi,r8
	C_PUSH_REGS
	mov r8,rdi
	call LB_630
	C_POP_REGS
; .mov_ptn2 1(<2)◂0'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 0'(= a44◂ [ *{ a2◂ [ a30◂ [ a18◂ [ ]{| l |}]]a26◂ [ a18◂ [ ]{| l |}]}] )
	mov r14,r13
; .mov_ptn 1(<2)◂1'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 0'(= a44◂ [ *{ a2◂ [ a30◂ [ a18◂ [ ]{| l |}]]a26◂ [ a18◂ [ ]{| l |}]}] )
	mov rax,r14
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],1
	mov QWORD [rax+8],rdi
	mov r13,rax
	ret
LB_3364:
;; ?. 0'(= a44◂ [ a2◂ [ a30◂ [ a18◂ [ ]{| l |}]]] ) ⊢ 1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] )
	mov QWORD [GBG_VCT+8*0],rdi
	mov r8,QWORD [rdi+8]
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_LN rdi
;; rsp=0 , %1137~2'(= a2◂ [ *{ rr{| l |}}] ) %1136~1'(= a44◂ [ a26◂ [ a18◂ [ ]{| l |}]] ) 
;; ? 1'(= a44◂ [ a26◂ [ a18◂ [ ]{| l |}]] ) ⊢ 0(<2)◂0'(= a26◂ [ a18◂ [ ]{| l |}] )
	mov rdi,r14
	cmp BYTE [rdi+6],0
	jnz LB_3371
	jmp LB_3372
LB_3371:
	jmp LB_3370
LB_3372:
	mov QWORD [GBG_VCT+8*0],rdi
	mov r13,QWORD [rdi+8]
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_LN rdi
;; rsp=0 , %1144~0'(= a26◂ [ a18◂ [ ]{| l |}] ) %1137~2'(= a2◂ [ *{ rr{| l |}}] ) 
; #197 2'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] )
;; rsp=0 , %1145~1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] ) %1144~0'(= a26◂ [ a18◂ [ ]{| l |}] ) 
; ∎ 1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] )
; .dlt.ptn 0'(= a26◂ [ a18◂ [ ]{| l |}] )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	call LB_797
	C_POP_REGS
; .mov_ptn2 1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 0'(= a44◂ [ *{ a2◂ [ a30◂ [ a18◂ [ ]{| l |}]]a26◂ [ a18◂ [ ]{| l |}]}] )
; .mov_ptn 1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 0'(= a44◂ [ *{ a2◂ [ a30◂ [ a18◂ [ ]{| l |}]]a26◂ [ a18◂ [ ]{| l |}]}] )
	mov rax,r8
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],1
	mov QWORD [rax+8],rdi
	mov r13,rax
	ret
LB_3370:
;; ?. 1'(= a44◂ [ a26◂ [ a18◂ [ ]{| l |}]] ) ⊢ 1(<2)◂0'(= a2◂ [ *{ rr{| l |}}] )
	mov QWORD [GBG_VCT+8*0],rdi
	mov r13,QWORD [rdi+8]
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_LN rdi
;; rsp=0 , %1143~0'(= a2◂ [ *{ rr{| l |}}] ) %1137~2'(= a2◂ [ *{ rr{| l |}}] ) 
; #58 { 2'(= a2◂ [ *{ rr{| l |}}] ) 0'(= a2◂ [ *{ rr{| l |}}] ) } ⊢ 0'(= a2◂ [ *{ rr{| l |}}] )
; .mov_ptn2 { 2'(= a2◂ [ *{ rr{| l |}}] ) 0'(= a2◂ [ *{ rr{| l |}}] ) } ⊢ { 0'(= a2◂ [ *{ rr{| l |}}] ) 1'(= a2◂ [ *{ rr{| l |}}] ) }
; .mov_ptn 0'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 1'(= a2◂ [ *{ rr{| l |}}] )
	mov rax,r13
	mov r14,rax
; .mov_ptn 2'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 0'(= a2◂ [ *{ rr{| l |}}] )
	mov rax,r8
	mov r13,rax
	call LB_1985
;; rsp=0 , %1146~0'(= a2◂ [ *{ rr{| l |}}] ) 
; #197 0'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 1(<2)◂0'(= a2◂ [ *{ rr{| l |}}] )
;; rsp=0 , %1147~1(<2)◂0'(= a2◂ [ *{ rr{| l |}}] ) 
; ∎ 1(<2)◂0'(= a2◂ [ *{ rr{| l |}}] )
; .mov_ptn2 1(<2)◂0'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 0'(= a44◂ [ *{ a2◂ [ a30◂ [ a18◂ [ ]{| l |}]]a26◂ [ a18◂ [ ]{| l |}]}] )
	mov r14,r13
; .mov_ptn 1(<2)◂1'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 0'(= a44◂ [ *{ a2◂ [ a30◂ [ a18◂ [ ]{| l |}]]a26◂ [ a18◂ [ ]{| l |}]}] )
	mov rax,r14
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],1
	mov QWORD [rax+8],rdi
	mov r13,rax
	ret
LB_3416: ;; #199 { 0'(= a44◂ [ *{ a2◂ [ a30◂ [ a18◂ [ ]{| l |}]]a26◂ [ a18◂ [ ]{| l |}]}] ) 1'(= a44◂ [ a16◂ [ *{ a2◂ [ a30◂ [ a18◂ [ ]{| l |}]]a29◂ [ a18◂ [ ]{| l |}]}]] ) } ⊢ 0'(= a44◂ [ *{ *{ a2◂ [ a30◂ [ a18◂ [ ]{| l |}]]a26◂ [ a18◂ [ ]{| l |}]}a16◂ [ *{ a2◂ [ a30◂ [ a18◂ [ ]{| l |}]]a29◂ [ a18◂ [ ]{| l |}]}]}] ) : ({ _t44◂{ _lst◂_t30◂_s8◂_t18 _t26◂_s8◂_t18 } _t44◂_t16◂{ _lst◂_t30◂_s8◂_t18 _t29◂_s8◂_t18 } }→_t44◂{ { _lst◂_t30◂_s8◂_t18 _t26◂_s8◂_t18 } _t16◂{ _lst◂_t30◂_s8◂_t18 _t29◂_s8◂_t18 } })
;; rsp=0 , %1136~1'(= a44◂ [ a16◂ [ *{ a2◂ [ a30◂ [ a18◂ [ ]{| l |}]]a29◂ [ a18◂ [ ]{| l |}]}]] ) %1135~0'(= a44◂ [ *{ a2◂ [ a30◂ [ a18◂ [ ]{| l |}]]a26◂ [ a18◂ [ ]{| l |}]}] ) 
;; ? 0'(= a44◂ [ *{ a2◂ [ a30◂ [ a18◂ [ ]{| l |}]]a26◂ [ a18◂ [ ]{| l |}]}] ) ⊢ 0(<2)◂0'(= *{ a2◂ [ a30◂ [ a18◂ [ ]{| l |}]]a26◂ [ a18◂ [ ]{| l |}]} )
	mov rdi,r13
	cmp BYTE [rdi+6],0
	jnz LB_3418
	jmp LB_3419
LB_3418:
	jmp LB_3417
LB_3419:
;; rsp=0 , %1138~0'(= *{ a2◂ [ a30◂ [ a18◂ [ ]{| l |}]]a26◂ [ a18◂ [ ]{| l |}]} ) %1136~1'(= a44◂ [ a16◂ [ *{ a2◂ [ a30◂ [ a18◂ [ ]{| l |}]]a29◂ [ a18◂ [ ]{| l |}]}]] ) 
;; ? 1'(= a44◂ [ a16◂ [ *{ a2◂ [ a30◂ [ a18◂ [ ]{| l |}]]a29◂ [ a18◂ [ ]{| l |}]}]] ) ⊢ 0(<2)◂2'(= a16◂ [ *{ a2◂ [ a30◂ [ a18◂ [ ]{| l |}]]a29◂ [ a18◂ [ ]{| l |}]}] )
	mov rdi,r14
	cmp BYTE [rdi+6],0
	jnz LB_3421
	jmp LB_3422
LB_3421:
	jmp LB_3420
LB_3422:
	mov QWORD [GBG_VCT+8*0],rdi
	mov r8,QWORD [rdi+8]
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_LN rdi
;; rsp=0 , %1140~2'(= a16◂ [ *{ a2◂ [ a30◂ [ a18◂ [ ]{| l |}]]a29◂ [ a18◂ [ ]{| l |}]}] ) %1138~0'(= *{ a2◂ [ a30◂ [ a18◂ [ ]{| l |}]]a26◂ [ a18◂ [ ]{| l |}]} ) 
; #198 { 0'(= *{ a2◂ [ a30◂ [ a18◂ [ ]{| l |}]]a26◂ [ a18◂ [ ]{| l |}]} ) 2'(= a16◂ [ *{ a2◂ [ a30◂ [ a18◂ [ ]{| l |}]]a29◂ [ a18◂ [ ]{| l |}]}] ) } ⊢ 0(<2)◂{ 0'(= *{ a2◂ [ a30◂ [ a18◂ [ ]{| l |}]]a26◂ [ a18◂ [ ]{| l |}]} ) 2'(= a16◂ [ *{ a2◂ [ a30◂ [ a18◂ [ ]{| l |}]]a29◂ [ a18◂ [ ]{| l |}]}] ) }
;; rsp=0 , %1141~0(<2)◂{ 0'(= *{ a2◂ [ a30◂ [ a18◂ [ ]{| l |}]]a26◂ [ a18◂ [ ]{| l |}]} ) 2'(= a16◂ [ *{ a2◂ [ a30◂ [ a18◂ [ ]{| l |}]]a29◂ [ a18◂ [ ]{| l |}]}] ) } 
; ∎ 0(<2)◂{ 0'(= *{ a2◂ [ a30◂ [ a18◂ [ ]{| l |}]]a26◂ [ a18◂ [ ]{| l |}]} ) 2'(= a16◂ [ *{ a2◂ [ a30◂ [ a18◂ [ ]{| l |}]]a29◂ [ a18◂ [ ]{| l |}]}] ) }
; .mov_ptn2 0(<2)◂{ 0'(= *{ a2◂ [ a30◂ [ a18◂ [ ]{| l |}]]a26◂ [ a18◂ [ ]{| l |}]} ) 2'(= a16◂ [ *{ a2◂ [ a30◂ [ a18◂ [ ]{| l |}]]a29◂ [ a18◂ [ ]{| l |}]}] ) } ⊢ 0'(= a44◂ [ *{ *{ a2◂ [ a30◂ [ a18◂ [ ]{| l |}]]a26◂ [ a18◂ [ ]{| l |}]}a16◂ [ *{ a2◂ [ a30◂ [ a18◂ [ ]{| l |}]]a29◂ [ a18◂ [ ]{| l |}]}]}] )
	mov r14,r13
; .mov_ptn 0(<2)◂{ 1'(= *{ a2◂ [ a30◂ [ a18◂ [ ]{| l |}]]a26◂ [ a18◂ [ ]{| l |}]} ) 2'(= a16◂ [ *{ a2◂ [ a30◂ [ a18◂ [ ]{| l |}]]a29◂ [ a18◂ [ ]{| l |}]}] ) } ⊢ 0'(= a44◂ [ *{ *{ a2◂ [ a30◂ [ a18◂ [ ]{| l |}]]a26◂ [ a18◂ [ ]{| l |}]}a16◂ [ *{ a2◂ [ a30◂ [ a18◂ [ ]{| l |}]]a29◂ [ a18◂ [ ]{| l |}]}]}] )
	ALC_RCD 2, rax
	mov r9,rax
	mov rax,r14
	mov QWORD [r9+8+8*0],rax
	mov rax,r8
	mov QWORD [r9+8+8*1],rax
	mov rax,r9
	mov BYTE [rax+6],0
	mov r13,rax
	ret
LB_3420:
;; ?. 1'(= a44◂ [ a16◂ [ *{ a2◂ [ a30◂ [ a18◂ [ ]{| l |}]]a29◂ [ a18◂ [ ]{| l |}]}]] ) ⊢ 1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] )
	mov QWORD [GBG_VCT+8*0],rdi
	mov r8,QWORD [rdi+8]
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_LN rdi
;; rsp=0 , %1139~2'(= a2◂ [ *{ rr{| l |}}] ) %1138~0'(= *{ a2◂ [ a30◂ [ a18◂ [ ]{| l |}]]a26◂ [ a18◂ [ ]{| l |}]} ) 
; #197 2'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] )
;; rsp=0 , %1142~1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] ) %1138~0'(= *{ a2◂ [ a30◂ [ a18◂ [ ]{| l |}]]a26◂ [ a18◂ [ ]{| l |}]} ) 
; ∎ 1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] )
; .dlt.ptn 0'(= *{ a2◂ [ a30◂ [ a18◂ [ ]{| l |}]]a26◂ [ a18◂ [ ]{| l |}]} )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	push r8
	mov r8,QWORD [r8+8+8*0]
	call LB_630
	pop r8 
	push r8
	mov r8,QWORD [r8+8+8*1]
	call LB_797
	pop r8 
	FREE_RCD 2, r8
	C_POP_REGS
; .mov_ptn2 1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 0'(= a44◂ [ *{ *{ a2◂ [ a30◂ [ a18◂ [ ]{| l |}]]a26◂ [ a18◂ [ ]{| l |}]}a16◂ [ *{ a2◂ [ a30◂ [ a18◂ [ ]{| l |}]]a29◂ [ a18◂ [ ]{| l |}]}]}] )
; .mov_ptn 1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 0'(= a44◂ [ *{ *{ a2◂ [ a30◂ [ a18◂ [ ]{| l |}]]a26◂ [ a18◂ [ ]{| l |}]}a16◂ [ *{ a2◂ [ a30◂ [ a18◂ [ ]{| l |}]]a29◂ [ a18◂ [ ]{| l |}]}]}] )
	mov rax,r8
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],1
	mov QWORD [rax+8],rdi
	mov r13,rax
	ret
LB_3417:
;; ?. 0'(= a44◂ [ *{ a2◂ [ a30◂ [ a18◂ [ ]{| l |}]]a26◂ [ a18◂ [ ]{| l |}]}] ) ⊢ 1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] )
	mov QWORD [GBG_VCT+8*0],rdi
	mov r8,QWORD [rdi+8]
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_LN rdi
;; rsp=0 , %1137~2'(= a2◂ [ *{ rr{| l |}}] ) %1136~1'(= a44◂ [ a16◂ [ *{ a2◂ [ a30◂ [ a18◂ [ ]{| l |}]]a29◂ [ a18◂ [ ]{| l |}]}]] ) 
;; ? 1'(= a44◂ [ a16◂ [ *{ a2◂ [ a30◂ [ a18◂ [ ]{| l |}]]a29◂ [ a18◂ [ ]{| l |}]}]] ) ⊢ 0(<2)◂0'(= a16◂ [ *{ a2◂ [ a30◂ [ a18◂ [ ]{| l |}]]a29◂ [ a18◂ [ ]{| l |}]}] )
	mov rdi,r14
	cmp BYTE [rdi+6],0
	jnz LB_3424
	jmp LB_3425
LB_3424:
	jmp LB_3423
LB_3425:
	mov QWORD [GBG_VCT+8*0],rdi
	mov r13,QWORD [rdi+8]
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_LN rdi
;; rsp=0 , %1144~0'(= a16◂ [ *{ a2◂ [ a30◂ [ a18◂ [ ]{| l |}]]a29◂ [ a18◂ [ ]{| l |}]}] ) %1137~2'(= a2◂ [ *{ rr{| l |}}] ) 
; #197 2'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] )
;; rsp=0 , %1145~1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] ) %1144~0'(= a16◂ [ *{ a2◂ [ a30◂ [ a18◂ [ ]{| l |}]]a29◂ [ a18◂ [ ]{| l |}]}] ) 
; ∎ 1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] )
; .dlt.ptn 0'(= a16◂ [ *{ a2◂ [ a30◂ [ a18◂ [ ]{| l |}]]a29◂ [ a18◂ [ ]{| l |}]}] )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	call LB_808
	C_POP_REGS
; .mov_ptn2 1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 0'(= a44◂ [ *{ *{ a2◂ [ a30◂ [ a18◂ [ ]{| l |}]]a26◂ [ a18◂ [ ]{| l |}]}a16◂ [ *{ a2◂ [ a30◂ [ a18◂ [ ]{| l |}]]a29◂ [ a18◂ [ ]{| l |}]}]}] )
; .mov_ptn 1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 0'(= a44◂ [ *{ *{ a2◂ [ a30◂ [ a18◂ [ ]{| l |}]]a26◂ [ a18◂ [ ]{| l |}]}a16◂ [ *{ a2◂ [ a30◂ [ a18◂ [ ]{| l |}]]a29◂ [ a18◂ [ ]{| l |}]}]}] )
	mov rax,r8
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],1
	mov QWORD [rax+8],rdi
	mov r13,rax
	ret
LB_3423:
;; ?. 1'(= a44◂ [ a16◂ [ *{ a2◂ [ a30◂ [ a18◂ [ ]{| l |}]]a29◂ [ a18◂ [ ]{| l |}]}]] ) ⊢ 1(<2)◂0'(= a2◂ [ *{ rr{| l |}}] )
	mov QWORD [GBG_VCT+8*0],rdi
	mov r13,QWORD [rdi+8]
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_LN rdi
;; rsp=0 , %1143~0'(= a2◂ [ *{ rr{| l |}}] ) %1137~2'(= a2◂ [ *{ rr{| l |}}] ) 
; #58 { 2'(= a2◂ [ *{ rr{| l |}}] ) 0'(= a2◂ [ *{ rr{| l |}}] ) } ⊢ 0'(= a2◂ [ *{ rr{| l |}}] )
; .mov_ptn2 { 2'(= a2◂ [ *{ rr{| l |}}] ) 0'(= a2◂ [ *{ rr{| l |}}] ) } ⊢ { 0'(= a2◂ [ *{ rr{| l |}}] ) 1'(= a2◂ [ *{ rr{| l |}}] ) }
; .mov_ptn 0'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 1'(= a2◂ [ *{ rr{| l |}}] )
	mov rax,r13
	mov r14,rax
; .mov_ptn 2'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 0'(= a2◂ [ *{ rr{| l |}}] )
	mov rax,r8
	mov r13,rax
	call LB_1985
;; rsp=0 , %1146~0'(= a2◂ [ *{ rr{| l |}}] ) 
; #197 0'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 1(<2)◂0'(= a2◂ [ *{ rr{| l |}}] )
;; rsp=0 , %1147~1(<2)◂0'(= a2◂ [ *{ rr{| l |}}] ) 
; ∎ 1(<2)◂0'(= a2◂ [ *{ rr{| l |}}] )
; .mov_ptn2 1(<2)◂0'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 0'(= a44◂ [ *{ *{ a2◂ [ a30◂ [ a18◂ [ ]{| l |}]]a26◂ [ a18◂ [ ]{| l |}]}a16◂ [ *{ a2◂ [ a30◂ [ a18◂ [ ]{| l |}]]a29◂ [ a18◂ [ ]{| l |}]}]}] )
	mov r14,r13
; .mov_ptn 1(<2)◂1'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 0'(= a44◂ [ *{ *{ a2◂ [ a30◂ [ a18◂ [ ]{| l |}]]a26◂ [ a18◂ [ ]{| l |}]}a16◂ [ *{ a2◂ [ a30◂ [ a18◂ [ ]{| l |}]]a29◂ [ a18◂ [ ]{| l |}]}]}] )
	mov rax,r14
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],1
	mov QWORD [rax+8],rdi
	mov r13,rax
	ret
LB_3519: ;; #199 { 0'(= a44◂ [ *{ a2◂ [ a30◂ [ a18◂ [ ]{| l |}]]a26◂ [ a18◂ [ ]{| l |}]}] ) 1'(= a44◂ [ a16◂ [ *{ a17◂ [ a23◂ [ a18◂ [ ]{| l |}]]a2◂ [ a30◂ [ a18◂ [ ]{| l |}]]a29◂ [ a18◂ [ ]{| l |}]}]] ) } ⊢ 0'(= a44◂ [ *{ *{ a2◂ [ a30◂ [ a18◂ [ ]{| l |}]]a26◂ [ a18◂ [ ]{| l |}]}a16◂ [ *{ a17◂ [ a23◂ [ a18◂ [ ]{| l |}]]a2◂ [ a30◂ [ a18◂ [ ]{| l |}]]a29◂ [ a18◂ [ ]{| l |}]}]}] ) : ({ _t44◂{ _lst◂_t30◂_s8◂_t18 _t26◂_s8◂_t18 } _t44◂_t16◂{ _t17◂_t23◂_s8◂_t18 _lst◂_t30◂_s8◂_t18 _t29◂_s8◂_t18 } }→_t44◂{ { _lst◂_t30◂_s8◂_t18 _t26◂_s8◂_t18 } _t16◂{ _t17◂_t23◂_s8◂_t18 _lst◂_t30◂_s8◂_t18 _t29◂_s8◂_t18 } })
;; rsp=0 , %1136~1'(= a44◂ [ a16◂ [ *{ a17◂ [ a23◂ [ a18◂ [ ]{| l |}]]a2◂ [ a30◂ [ a18◂ [ ]{| l |}]]a29◂ [ a18◂ [ ]{| l |}]}]] ) %1135~0'(= a44◂ [ *{ a2◂ [ a30◂ [ a18◂ [ ]{| l |}]]a26◂ [ a18◂ [ ]{| l |}]}] ) 
;; ? 0'(= a44◂ [ *{ a2◂ [ a30◂ [ a18◂ [ ]{| l |}]]a26◂ [ a18◂ [ ]{| l |}]}] ) ⊢ 0(<2)◂0'(= *{ a2◂ [ a30◂ [ a18◂ [ ]{| l |}]]a26◂ [ a18◂ [ ]{| l |}]} )
	mov rdi,r13
	cmp BYTE [rdi+6],0
	jnz LB_3521
	jmp LB_3522
LB_3521:
	jmp LB_3520
LB_3522:
;; rsp=0 , %1138~0'(= *{ a2◂ [ a30◂ [ a18◂ [ ]{| l |}]]a26◂ [ a18◂ [ ]{| l |}]} ) %1136~1'(= a44◂ [ a16◂ [ *{ a17◂ [ a23◂ [ a18◂ [ ]{| l |}]]a2◂ [ a30◂ [ a18◂ [ ]{| l |}]]a29◂ [ a18◂ [ ]{| l |}]}]] ) 
;; ? 1'(= a44◂ [ a16◂ [ *{ a17◂ [ a23◂ [ a18◂ [ ]{| l |}]]a2◂ [ a30◂ [ a18◂ [ ]{| l |}]]a29◂ [ a18◂ [ ]{| l |}]}]] ) ⊢ 0(<2)◂2'(= a16◂ [ *{ a17◂ [ a23◂ [ a18◂ [ ]{| l |}]]a2◂ [ a30◂ [ a18◂ [ ]{| l |}]]a29◂ [ a18◂ [ ]{| l |}]}] )
	mov rdi,r14
	cmp BYTE [rdi+6],0
	jnz LB_3524
	jmp LB_3525
LB_3524:
	jmp LB_3523
LB_3525:
	mov QWORD [GBG_VCT+8*0],rdi
	mov r8,QWORD [rdi+8]
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_LN rdi
;; rsp=0 , %1140~2'(= a16◂ [ *{ a17◂ [ a23◂ [ a18◂ [ ]{| l |}]]a2◂ [ a30◂ [ a18◂ [ ]{| l |}]]a29◂ [ a18◂ [ ]{| l |}]}] ) %1138~0'(= *{ a2◂ [ a30◂ [ a18◂ [ ]{| l |}]]a26◂ [ a18◂ [ ]{| l |}]} ) 
; #198 { 0'(= *{ a2◂ [ a30◂ [ a18◂ [ ]{| l |}]]a26◂ [ a18◂ [ ]{| l |}]} ) 2'(= a16◂ [ *{ a17◂ [ a23◂ [ a18◂ [ ]{| l |}]]a2◂ [ a30◂ [ a18◂ [ ]{| l |}]]a29◂ [ a18◂ [ ]{| l |}]}] ) } ⊢ 0(<2)◂{ 0'(= *{ a2◂ [ a30◂ [ a18◂ [ ]{| l |}]]a26◂ [ a18◂ [ ]{| l |}]} ) 2'(= a16◂ [ *{ a17◂ [ a23◂ [ a18◂ [ ]{| l |}]]a2◂ [ a30◂ [ a18◂ [ ]{| l |}]]a29◂ [ a18◂ [ ]{| l |}]}] ) }
;; rsp=0 , %1141~0(<2)◂{ 0'(= *{ a2◂ [ a30◂ [ a18◂ [ ]{| l |}]]a26◂ [ a18◂ [ ]{| l |}]} ) 2'(= a16◂ [ *{ a17◂ [ a23◂ [ a18◂ [ ]{| l |}]]a2◂ [ a30◂ [ a18◂ [ ]{| l |}]]a29◂ [ a18◂ [ ]{| l |}]}] ) } 
; ∎ 0(<2)◂{ 0'(= *{ a2◂ [ a30◂ [ a18◂ [ ]{| l |}]]a26◂ [ a18◂ [ ]{| l |}]} ) 2'(= a16◂ [ *{ a17◂ [ a23◂ [ a18◂ [ ]{| l |}]]a2◂ [ a30◂ [ a18◂ [ ]{| l |}]]a29◂ [ a18◂ [ ]{| l |}]}] ) }
; .mov_ptn2 0(<2)◂{ 0'(= *{ a2◂ [ a30◂ [ a18◂ [ ]{| l |}]]a26◂ [ a18◂ [ ]{| l |}]} ) 2'(= a16◂ [ *{ a17◂ [ a23◂ [ a18◂ [ ]{| l |}]]a2◂ [ a30◂ [ a18◂ [ ]{| l |}]]a29◂ [ a18◂ [ ]{| l |}]}] ) } ⊢ 0'(= a44◂ [ *{ *{ a2◂ [ a30◂ [ a18◂ [ ]{| l |}]]a26◂ [ a18◂ [ ]{| l |}]}a16◂ [ *{ a17◂ [ a23◂ [ a18◂ [ ]{| l |}]]a2◂ [ a30◂ [ a18◂ [ ]{| l |}]]a29◂ [ a18◂ [ ]{| l |}]}]}] )
	mov r14,r13
; .mov_ptn 0(<2)◂{ 1'(= *{ a2◂ [ a30◂ [ a18◂ [ ]{| l |}]]a26◂ [ a18◂ [ ]{| l |}]} ) 2'(= a16◂ [ *{ a17◂ [ a23◂ [ a18◂ [ ]{| l |}]]a2◂ [ a30◂ [ a18◂ [ ]{| l |}]]a29◂ [ a18◂ [ ]{| l |}]}] ) } ⊢ 0'(= a44◂ [ *{ *{ a2◂ [ a30◂ [ a18◂ [ ]{| l |}]]a26◂ [ a18◂ [ ]{| l |}]}a16◂ [ *{ a17◂ [ a23◂ [ a18◂ [ ]{| l |}]]a2◂ [ a30◂ [ a18◂ [ ]{| l |}]]a29◂ [ a18◂ [ ]{| l |}]}]}] )
	ALC_RCD 2, rax
	mov r9,rax
	mov rax,r14
	mov QWORD [r9+8+8*0],rax
	mov rax,r8
	mov QWORD [r9+8+8*1],rax
	mov rax,r9
	mov BYTE [rax+6],0
	mov r13,rax
	ret
LB_3523:
;; ?. 1'(= a44◂ [ a16◂ [ *{ a17◂ [ a23◂ [ a18◂ [ ]{| l |}]]a2◂ [ a30◂ [ a18◂ [ ]{| l |}]]a29◂ [ a18◂ [ ]{| l |}]}]] ) ⊢ 1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] )
	mov QWORD [GBG_VCT+8*0],rdi
	mov r8,QWORD [rdi+8]
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_LN rdi
;; rsp=0 , %1139~2'(= a2◂ [ *{ rr{| l |}}] ) %1138~0'(= *{ a2◂ [ a30◂ [ a18◂ [ ]{| l |}]]a26◂ [ a18◂ [ ]{| l |}]} ) 
; #197 2'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] )
;; rsp=0 , %1142~1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] ) %1138~0'(= *{ a2◂ [ a30◂ [ a18◂ [ ]{| l |}]]a26◂ [ a18◂ [ ]{| l |}]} ) 
; ∎ 1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] )
; .dlt.ptn 0'(= *{ a2◂ [ a30◂ [ a18◂ [ ]{| l |}]]a26◂ [ a18◂ [ ]{| l |}]} )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	push r8
	mov r8,QWORD [r8+8+8*0]
	call LB_630
	pop r8 
	push r8
	mov r8,QWORD [r8+8+8*1]
	call LB_797
	pop r8 
	FREE_RCD 2, r8
	C_POP_REGS
; .mov_ptn2 1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 0'(= a44◂ [ *{ *{ a2◂ [ a30◂ [ a18◂ [ ]{| l |}]]a26◂ [ a18◂ [ ]{| l |}]}a16◂ [ *{ a17◂ [ a23◂ [ a18◂ [ ]{| l |}]]a2◂ [ a30◂ [ a18◂ [ ]{| l |}]]a29◂ [ a18◂ [ ]{| l |}]}]}] )
; .mov_ptn 1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 0'(= a44◂ [ *{ *{ a2◂ [ a30◂ [ a18◂ [ ]{| l |}]]a26◂ [ a18◂ [ ]{| l |}]}a16◂ [ *{ a17◂ [ a23◂ [ a18◂ [ ]{| l |}]]a2◂ [ a30◂ [ a18◂ [ ]{| l |}]]a29◂ [ a18◂ [ ]{| l |}]}]}] )
	mov rax,r8
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],1
	mov QWORD [rax+8],rdi
	mov r13,rax
	ret
LB_3520:
;; ?. 0'(= a44◂ [ *{ a2◂ [ a30◂ [ a18◂ [ ]{| l |}]]a26◂ [ a18◂ [ ]{| l |}]}] ) ⊢ 1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] )
	mov QWORD [GBG_VCT+8*0],rdi
	mov r8,QWORD [rdi+8]
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_LN rdi
;; rsp=0 , %1137~2'(= a2◂ [ *{ rr{| l |}}] ) %1136~1'(= a44◂ [ a16◂ [ *{ a17◂ [ a23◂ [ a18◂ [ ]{| l |}]]a2◂ [ a30◂ [ a18◂ [ ]{| l |}]]a29◂ [ a18◂ [ ]{| l |}]}]] ) 
;; ? 1'(= a44◂ [ a16◂ [ *{ a17◂ [ a23◂ [ a18◂ [ ]{| l |}]]a2◂ [ a30◂ [ a18◂ [ ]{| l |}]]a29◂ [ a18◂ [ ]{| l |}]}]] ) ⊢ 0(<2)◂0'(= a16◂ [ *{ a17◂ [ a23◂ [ a18◂ [ ]{| l |}]]a2◂ [ a30◂ [ a18◂ [ ]{| l |}]]a29◂ [ a18◂ [ ]{| l |}]}] )
	mov rdi,r14
	cmp BYTE [rdi+6],0
	jnz LB_3527
	jmp LB_3528
LB_3527:
	jmp LB_3526
LB_3528:
	mov QWORD [GBG_VCT+8*0],rdi
	mov r13,QWORD [rdi+8]
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_LN rdi
;; rsp=0 , %1144~0'(= a16◂ [ *{ a17◂ [ a23◂ [ a18◂ [ ]{| l |}]]a2◂ [ a30◂ [ a18◂ [ ]{| l |}]]a29◂ [ a18◂ [ ]{| l |}]}] ) %1137~2'(= a2◂ [ *{ rr{| l |}}] ) 
; #197 2'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] )
;; rsp=0 , %1145~1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] ) %1144~0'(= a16◂ [ *{ a17◂ [ a23◂ [ a18◂ [ ]{| l |}]]a2◂ [ a30◂ [ a18◂ [ ]{| l |}]]a29◂ [ a18◂ [ ]{| l |}]}] ) 
; ∎ 1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] )
; .dlt.ptn 0'(= a16◂ [ *{ a17◂ [ a23◂ [ a18◂ [ ]{| l |}]]a2◂ [ a30◂ [ a18◂ [ ]{| l |}]]a29◂ [ a18◂ [ ]{| l |}]}] )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	call LB_814
	C_POP_REGS
; .mov_ptn2 1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 0'(= a44◂ [ *{ *{ a2◂ [ a30◂ [ a18◂ [ ]{| l |}]]a26◂ [ a18◂ [ ]{| l |}]}a16◂ [ *{ a17◂ [ a23◂ [ a18◂ [ ]{| l |}]]a2◂ [ a30◂ [ a18◂ [ ]{| l |}]]a29◂ [ a18◂ [ ]{| l |}]}]}] )
; .mov_ptn 1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 0'(= a44◂ [ *{ *{ a2◂ [ a30◂ [ a18◂ [ ]{| l |}]]a26◂ [ a18◂ [ ]{| l |}]}a16◂ [ *{ a17◂ [ a23◂ [ a18◂ [ ]{| l |}]]a2◂ [ a30◂ [ a18◂ [ ]{| l |}]]a29◂ [ a18◂ [ ]{| l |}]}]}] )
	mov rax,r8
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],1
	mov QWORD [rax+8],rdi
	mov r13,rax
	ret
LB_3526:
;; ?. 1'(= a44◂ [ a16◂ [ *{ a17◂ [ a23◂ [ a18◂ [ ]{| l |}]]a2◂ [ a30◂ [ a18◂ [ ]{| l |}]]a29◂ [ a18◂ [ ]{| l |}]}]] ) ⊢ 1(<2)◂0'(= a2◂ [ *{ rr{| l |}}] )
	mov QWORD [GBG_VCT+8*0],rdi
	mov r13,QWORD [rdi+8]
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_LN rdi
;; rsp=0 , %1143~0'(= a2◂ [ *{ rr{| l |}}] ) %1137~2'(= a2◂ [ *{ rr{| l |}}] ) 
; #58 { 2'(= a2◂ [ *{ rr{| l |}}] ) 0'(= a2◂ [ *{ rr{| l |}}] ) } ⊢ 0'(= a2◂ [ *{ rr{| l |}}] )
; .mov_ptn2 { 2'(= a2◂ [ *{ rr{| l |}}] ) 0'(= a2◂ [ *{ rr{| l |}}] ) } ⊢ { 0'(= a2◂ [ *{ rr{| l |}}] ) 1'(= a2◂ [ *{ rr{| l |}}] ) }
; .mov_ptn 0'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 1'(= a2◂ [ *{ rr{| l |}}] )
	mov rax,r13
	mov r14,rax
; .mov_ptn 2'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 0'(= a2◂ [ *{ rr{| l |}}] )
	mov rax,r8
	mov r13,rax
	call LB_1985
;; rsp=0 , %1146~0'(= a2◂ [ *{ rr{| l |}}] ) 
; #197 0'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 1(<2)◂0'(= a2◂ [ *{ rr{| l |}}] )
;; rsp=0 , %1147~1(<2)◂0'(= a2◂ [ *{ rr{| l |}}] ) 
; ∎ 1(<2)◂0'(= a2◂ [ *{ rr{| l |}}] )
; .mov_ptn2 1(<2)◂0'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 0'(= a44◂ [ *{ *{ a2◂ [ a30◂ [ a18◂ [ ]{| l |}]]a26◂ [ a18◂ [ ]{| l |}]}a16◂ [ *{ a17◂ [ a23◂ [ a18◂ [ ]{| l |}]]a2◂ [ a30◂ [ a18◂ [ ]{| l |}]]a29◂ [ a18◂ [ ]{| l |}]}]}] )
	mov r14,r13
; .mov_ptn 1(<2)◂1'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 0'(= a44◂ [ *{ *{ a2◂ [ a30◂ [ a18◂ [ ]{| l |}]]a26◂ [ a18◂ [ ]{| l |}]}a16◂ [ *{ a17◂ [ a23◂ [ a18◂ [ ]{| l |}]]a2◂ [ a30◂ [ a18◂ [ ]{| l |}]]a29◂ [ a18◂ [ ]{| l |}]}]}] )
	mov rax,r14
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],1
	mov QWORD [rax+8],rdi
	mov r13,rax
	ret
ETR_237:
	mov r9,0x0000_ffff_ffff_ffff
	and r9,[r13]
	call GRM_237
	ret
GRM_237:
	PUSH_GRM
	jmp LB_2595
LB_2594:
	add r14,1 
LB_2595:
	cmp r14,r9
	jge LB_2596
	JZ_SPC BYTE [r13+8+r14], LB_2594
LB_2596
	lea rax,[r14+2]
	cmp rax,r9
	jg LB_2599
	jmp LB_2600
LB_2599:
	mov r8,unt_1
	jmp LB_2597
LB_2600:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],95
	jnz LB_2601
	cmp BYTE [rdi+1],94
	jnz LB_2601
	jmp LB_2602
LB_2601:
	mov r8,unt_1
	jmp LB_2597
LB_2602:
	add r14,2
	jmp LB_2598
LB_2597:
	add rsp,0
	jmp LB_2593
LB_2598:
	jmp LB_2604
LB_2603:
	add r14,1 
LB_2604:
	cmp r14,r9
	jge LB_2605
	JZ_SPC BYTE [r13+8+r14], LB_2603
LB_2605
	call GRM_238
	cmp BYTE [r8+6],0
	jnz LB_2608
	jmp LB_2609
LB_2608:
	jmp LB_2606
LB_2609:
	sub rsp,16
; .mov_ptn2 2'(= *{ a2◂ [ a21◂ [ a18◂ [ ]{| l |}]]a2◂ [ a22◂ [ {| l |}]]} ) ⊢ { 8'(= a2◂ [ a21◂ [ a18◂ [ ]{| l |}]] ) 9'(= a2◂ [ a22◂ [ {| l |}]] ) }
; .mov_ptn 2'(= *{ a2◂ [ a21◂ [ a18◂ [ ]{| l |}]]a2◂ [ a22◂ [ {| l |}]]} ) ⊢ { 8'(= a2◂ [ a21◂ [ a18◂ [ ]{| l |}]] ) 9'(= a2◂ [ a22◂ [ {| l |}]] ) }
	mov r10, QWORD [r8+8]
	mov QWORD [rsp-8+8*2],r10
	mov r11, QWORD [r8+16]
	mov QWORD [rsp-8+8*1],r11
	mov rdi,r8
	FREE_RCD 2,rdi
	jmp LB_2607
LB_2606:
	add rsp,0
	POP_GRM_FAIL
	ret
LB_2607:
	jmp LB_2611
LB_2610:
	add r14,1 
LB_2611:
	cmp r14,r9
	jge LB_2612
	JZ_SPC BYTE [r13+8+r14], LB_2610
LB_2612
	call GRM_236
	cmp BYTE [r8+6],0
	jnz LB_2615
	jmp LB_2616
LB_2615:
	jmp LB_2613
LB_2616:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a2◂ [ a25◂ [ a18◂ [ ]]] ) ⊢ 10'(= a2◂ [ a25◂ [ a18◂ [ ]]] )
; .mov_ptn 2'(= a2◂ [ a25◂ [ a18◂ [ ]]] ) ⊢ 10'(= a2◂ [ a25◂ [ a18◂ [ ]]] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_2614
LB_2613:
	add rsp,16
	POP_GRM_FAIL
	ret
LB_2614:
	mov QWORD [rsp+8*3],r14
	mov r13,QWORD [rsp+16+8*3]
	mov r14,QWORD [rsp+8*3]
	jmp LB_2617
LB_2617
;; rsp=3 , %1655~1'(= r ) %1654~0'(= r ) %1653~10'(= a2◂ [ a25◂ [ a18◂ [ ]]] ) %1652~9'(= a2◂ [ a22◂ [ {| l |}]] ) %1651~8'(= a2◂ [ a21◂ [ a18◂ [ ]{| l |}]] ) 
; #124 { 10'(= a2◂ [ a25◂ [ a18◂ [ ]]] ) 8'(= a2◂ [ a21◂ [ a18◂ [ ]{| l |}]] ) 9'(= a2◂ [ a22◂ [ {| l |}]] ) } ⊢ 3(<4)◂{ 10'(= a2◂ [ a25◂ [ a18◂ [ ]]] ) 8'(= a2◂ [ a21◂ [ a18◂ [ ]{| l |}]] ) 9'(= a2◂ [ a22◂ [ {| l |}]] ) }
;; rsp=3 , %1656~3(<4)◂{ 10'(= a2◂ [ a25◂ [ a18◂ [ ]]] ) 8'(= a2◂ [ a21◂ [ a18◂ [ ]{| l |}]] ) 9'(= a2◂ [ a22◂ [ {| l |}]] ) } %1655~1'(= r ) %1654~0'(= r ) 
; #24 3(<4)◂{ 10'(= a2◂ [ a25◂ [ a18◂ [ ]]] ) 8'(= a2◂ [ a21◂ [ a18◂ [ ]{| l |}]] ) 9'(= a2◂ [ a22◂ [ {| l |}]] ) } ⊢ 0(<2)◂3(<4)◂{ 10'(= a2◂ [ a25◂ [ a18◂ [ ]]] ) 8'(= a2◂ [ a21◂ [ a18◂ [ ]{| l |}]] ) 9'(= a2◂ [ a22◂ [ {| l |}]] ) }
;; rsp=3 , %1657~0(<2)◂3(<4)◂{ 10'(= a2◂ [ a25◂ [ a18◂ [ ]]] ) 8'(= a2◂ [ a21◂ [ a18◂ [ ]{| l |}]] ) 9'(= a2◂ [ a22◂ [ {| l |}]] ) } %1655~1'(= r ) %1654~0'(= r ) 
; ∎ 0(<2)◂3(<4)◂{ 10'(= a2◂ [ a25◂ [ a18◂ [ ]]] ) 8'(= a2◂ [ a21◂ [ a18◂ [ ]{| l |}]] ) 9'(= a2◂ [ a22◂ [ {| l |}]] ) }
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂3(<4)◂{ 10'(= a2◂ [ a25◂ [ a18◂ [ ]]] ) 8'(= a2◂ [ a21◂ [ a18◂ [ ]{| l |}]] ) 9'(= a2◂ [ a22◂ [ {| l |}]] ) } ⊢ 2'(= a3◂ [ a28◂ [ a18◂ [ ]{| l |}]] )
; .mov_ptn 0(<2)◂3(<4)◂{ 10'(= a2◂ [ a25◂ [ a18◂ [ ]]] ) 8'(= a2◂ [ a21◂ [ a18◂ [ ]{| l |}]] ) 9'(= a2◂ [ a22◂ [ {| l |}]] ) } ⊢ 2'(= a3◂ [ a28◂ [ a18◂ [ ]{| l |}]] )
	ALC_RCD 3, rax
	mov r13,rax
	mov rax,QWORD [rsp-8+8*1]
	mov QWORD [r13+8+8*0],rax
	mov rax,QWORD [rsp-8+8*3]
	mov QWORD [r13+8+8*1],rax
	mov rax,QWORD [rsp-8+8*2]
	mov QWORD [r13+8+8*2],rax
	mov rax,r13
	mov BYTE [rax+6],3
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,24
	jmp LB_2618
LB_2618:
	cmp BYTE [r8+6],0
	jnz LB_2593
	POP_GRM_SCC
	ret
LB_2593:
	RB_GRM
	jmp LB_2621
LB_2620:
	add r14,1 
LB_2621:
	cmp r14,r9
	jge LB_2622
	JZ_SPC BYTE [r13+8+r14], LB_2620
LB_2622
	call GRM_195
	cmp BYTE [r8+6],0
	jnz LB_2625
	jmp LB_2626
LB_2625:
	jmp LB_2623
LB_2626:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a20◂ [ a18◂ [ ]] ) ⊢ 8'(= a20◂ [ a18◂ [ ]] )
; .mov_ptn 2'(= a20◂ [ a18◂ [ ]] ) ⊢ 8'(= a20◂ [ a18◂ [ ]] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_2624
LB_2623:
	add rsp,0
	jmp LB_2619
LB_2624:
	jmp LB_2628
LB_2627:
	add r14,1 
LB_2628:
	cmp r14,r9
	jge LB_2629
	JZ_SPC BYTE [r13+8+r14], LB_2627
LB_2629
	lea rax,[r14+1]
	cmp rax,r9
	jg LB_2632
	jmp LB_2633
LB_2632:
	mov r8,unt_1
	jmp LB_2630
LB_2633:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],95
	jnz LB_2634
	jmp LB_2635
LB_2634:
	mov r8,unt_1
	jmp LB_2630
LB_2635:
	add r14,1
	jmp LB_2631
LB_2630:
	add rsp,8
	jmp LB_2619
LB_2631:
	jmp LB_2637
LB_2636:
	add r14,1 
LB_2637:
	cmp r14,r9
	jge LB_2638
	JZ_SPC BYTE [r13+8+r14], LB_2636
LB_2638
	lea rax,[r14+3]
	cmp rax,r9
	jg LB_2641
	jmp LB_2642
LB_2641:
	mov r8,unt_1
	jmp LB_2639
LB_2642:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],226
	jnz LB_2643
	cmp BYTE [rdi+1],138
	jnz LB_2643
	cmp BYTE [rdi+2],162
	jnz LB_2643
	jmp LB_2644
LB_2643:
	mov r8,unt_1
	jmp LB_2639
LB_2644:
	add r14,3
	jmp LB_2640
LB_2639:
	add rsp,8
	jmp LB_2619
LB_2640:
	jmp LB_2646
LB_2645:
	add r14,1 
LB_2646:
	cmp r14,r9
	jge LB_2647
	JZ_SPC BYTE [r13+8+r14], LB_2645
LB_2647
	call GRM_210
	cmp BYTE [r8+6],0
	jnz LB_2650
	jmp LB_2651
LB_2650:
	jmp LB_2648
LB_2651:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a17◂ [ a22◂ [ {| l |}]] ) ⊢ 9'(= a17◂ [ a22◂ [ {| l |}]] )
; .mov_ptn 2'(= a17◂ [ a22◂ [ {| l |}]] ) ⊢ 9'(= a17◂ [ a22◂ [ {| l |}]] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_2649
LB_2648:
	add rsp,8
	jmp LB_2619
LB_2649:
	mov QWORD [rsp+8*2],r14
	mov r13,QWORD [rsp+16+8*2]
	mov r14,QWORD [rsp+8*2]
	jmp LB_2652
LB_2652
;; rsp=2 , %1661~1'(= r ) %1660~0'(= r ) %1659~9'(= a17◂ [ a22◂ [ {| l |}]] ) %1658~8'(= a20◂ [ a18◂ [ ]] ) 
; #22 { } ⊢ 1(<2)◂{ }
;; rsp=2 , %1662~1(<2)◂{ } %1661~1'(= r ) %1660~0'(= r ) %1659~9'(= a17◂ [ a22◂ [ {| l |}]] ) %1658~8'(= a20◂ [ a18◂ [ ]] ) 
; #84 1(<2)◂{ } ⊢ 0(<2)◂1(<2)◂{ }
;; rsp=2 , %1663~0(<2)◂1(<2)◂{ } %1661~1'(= r ) %1660~0'(= r ) %1659~9'(= a17◂ [ a22◂ [ {| l |}]] ) %1658~8'(= a20◂ [ a18◂ [ ]] ) 
; #125 { 8'(= a20◂ [ a18◂ [ ]] ) 0(<2)◂1(<2)◂{ } 9'(= a17◂ [ a22◂ [ {| l |}]] ) } ⊢ 2(<4)◂{ 8'(= a20◂ [ a18◂ [ ]] ) 0(<2)◂1(<2)◂{ } 9'(= a17◂ [ a22◂ [ {| l |}]] ) }
;; rsp=2 , %1664~2(<4)◂{ 8'(= a20◂ [ a18◂ [ ]] ) 0(<2)◂1(<2)◂{ } 9'(= a17◂ [ a22◂ [ {| l |}]] ) } %1661~1'(= r ) %1660~0'(= r ) 
; #24 2(<4)◂{ 8'(= a20◂ [ a18◂ [ ]] ) 0(<2)◂1(<2)◂{ } 9'(= a17◂ [ a22◂ [ {| l |}]] ) } ⊢ 0(<2)◂2(<4)◂{ 8'(= a20◂ [ a18◂ [ ]] ) 0(<2)◂1(<2)◂{ } 9'(= a17◂ [ a22◂ [ {| l |}]] ) }
;; rsp=2 , %1665~0(<2)◂2(<4)◂{ 8'(= a20◂ [ a18◂ [ ]] ) 0(<2)◂1(<2)◂{ } 9'(= a17◂ [ a22◂ [ {| l |}]] ) } %1661~1'(= r ) %1660~0'(= r ) 
; ∎ 0(<2)◂2(<4)◂{ 8'(= a20◂ [ a18◂ [ ]] ) 0(<2)◂1(<2)◂{ } 9'(= a17◂ [ a22◂ [ {| l |}]] ) }
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂2(<4)◂{ 8'(= a20◂ [ a18◂ [ ]] ) 0(<2)◂1(<2)◂{ } 9'(= a17◂ [ a22◂ [ {| l |}]] ) } ⊢ 2'(= a3◂ [ a28◂ [ a18◂ [ ]{| l |}]] )
; .mov_ptn 0(<2)◂2(<4)◂{ 8'(= a20◂ [ a18◂ [ ]] ) 0(<2)◂1(<2)◂{ } 9'(= a17◂ [ a22◂ [ {| l |}]] ) } ⊢ 2'(= a3◂ [ a28◂ [ a18◂ [ ]{| l |}]] )
	ALC_RCD 3, rax
	mov r13,rax
	mov rax,QWORD [rsp-8+8*2]
	mov QWORD [r13+8+8*0],rax
	mov rax,unt 
	mov rax,unt_1
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov QWORD [r13+8+8*1],rax
	mov rax,QWORD [rsp-8+8*1]
	mov QWORD [r13+8+8*2],rax
	mov rax,r13
	mov BYTE [rax+6],2
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,16
	jmp LB_2653
LB_2653:
	cmp BYTE [r8+6],0
	jnz LB_2619
	POP_GRM_SCC
	ret
LB_2619:
	POP_GRM_FAIL 
	ret
ETR_238:
	mov r9,0x0000_ffff_ffff_ffff
	and r9,[r13]
	call GRM_238
	ret
GRM_238:
	PUSH_GRM
	jmp LB_2656
LB_2655:
	add r14,1 
LB_2656:
	cmp r14,r9
	jge LB_2657
	JZ_SPC BYTE [r13+8+r14], LB_2655
LB_2657
	call GRM_192
	cmp BYTE [r8+6],0
	jnz LB_2660
	jmp LB_2661
LB_2660:
	jmp LB_2658
LB_2661:
; .mov_ptn2 2'(= *{ } ) ⊢ { }
; .mov_ptn 2'(= *{ } ) ⊢ { }
	jmp LB_2659
LB_2658:
	add rsp,0
	jmp LB_2654
LB_2659:
	jmp LB_2663
LB_2662:
	add r14,1 
LB_2663:
	cmp r14,r9
	jge LB_2664
	JZ_SPC BYTE [r13+8+r14], LB_2662
LB_2664
	lea rax,[r14+3]
	cmp rax,r9
	jg LB_2667
	jmp LB_2668
LB_2667:
	mov r8,unt_1
	jmp LB_2665
LB_2668:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],226
	jnz LB_2669
	cmp BYTE [rdi+1],138
	jnz LB_2669
	cmp BYTE [rdi+2],162
	jnz LB_2669
	jmp LB_2670
LB_2669:
	mov r8,unt_1
	jmp LB_2665
LB_2670:
	add r14,3
	jmp LB_2666
LB_2665:
	add rsp,0
	jmp LB_2654
LB_2666:
	jmp LB_2672
LB_2671:
	add r14,1 
LB_2672:
	cmp r14,r9
	jge LB_2673
	JZ_SPC BYTE [r13+8+r14], LB_2671
LB_2673
	call GRM_214
	cmp BYTE [r8+6],0
	jnz LB_2676
	jmp LB_2677
LB_2676:
	jmp LB_2674
LB_2677:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a22◂ [ {| l |}] ) ⊢ 8'(= a22◂ [ {| l |}] )
; .mov_ptn 2'(= a22◂ [ {| l |}] ) ⊢ 8'(= a22◂ [ {| l |}] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_2675
LB_2674:
	add rsp,0
	POP_GRM_FAIL
	ret
LB_2675:
	mov QWORD [rsp+8*1],r14
	mov r13,QWORD [rsp+16+8*1]
	mov r14,QWORD [rsp+8*1]
	jmp LB_2678
LB_2678
;; rsp=1 , %1669~1'(= r ) %1668~0'(= r ) %1667~8'(= a22◂ [ {| l |}] ) %1666~{ } 
; #22 { } ⊢ 1(<2)◂{ }
;; rsp=1 , %1670~1(<2)◂{ } %1669~1'(= r ) %1668~0'(= r ) %1667~8'(= a22◂ [ {| l |}] ) %1666~{ } 
; #22 { } ⊢ 1(<2)◂{ }
;; rsp=1 , %1671~1(<2)◂{ } %1670~1(<2)◂{ } %1669~1'(= r ) %1668~0'(= r ) %1667~8'(= a22◂ [ {| l |}] ) %1666~{ } 
; #23 { 8'(= a22◂ [ {| l |}] ) 1(<2)◂{ } } ⊢ 0(<2)◂{ 8'(= a22◂ [ {| l |}] ) 1(<2)◂{ } }
;; rsp=1 , %1672~0(<2)◂{ 8'(= a22◂ [ {| l |}] ) 1(<2)◂{ } } %1670~1(<2)◂{ } %1669~1'(= r ) %1668~0'(= r ) %1666~{ } 
; #24 { 1(<2)◂{ } 0(<2)◂{ 8'(= a22◂ [ {| l |}] ) 1(<2)◂{ } } } ⊢ 0(<2)◂{ 1(<2)◂{ } 0(<2)◂{ 8'(= a22◂ [ {| l |}] ) 1(<2)◂{ } } }
;; rsp=1 , %1673~0(<2)◂{ 1(<2)◂{ } 0(<2)◂{ 8'(= a22◂ [ {| l |}] ) 1(<2)◂{ } } } %1669~1'(= r ) %1668~0'(= r ) %1666~{ } 
; ∎ 0(<2)◂{ 1(<2)◂{ } 0(<2)◂{ 8'(= a22◂ [ {| l |}] ) 1(<2)◂{ } } }
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn { }
; .mov_ptn2 0(<2)◂{ 1(<2)◂{ } 0(<2)◂{ 8'(= a22◂ [ {| l |}] ) 1(<2)◂{ } } } ⊢ 2'(= a3◂ [ *{ a2◂ [ a21◂ [ a18◂ [ ]{| l |}]]a2◂ [ a22◂ [ {| l |}]]}] )
; .mov_ptn 0(<2)◂{ 1(<2)◂{ } 0(<2)◂{ 8'(= a22◂ [ {| l |}] ) 1(<2)◂{ } } } ⊢ 2'(= a3◂ [ *{ a2◂ [ a21◂ [ a18◂ [ ]{| l |}]]a2◂ [ a22◂ [ {| l |}]]}] )
	ALC_RCD 2, rax
	mov r13,rax
	mov rax,unt 
	mov rax,unt_1
	mov QWORD [r13+8+8*0],rax
	ALC_RCD 2, rax
	mov r14,rax
	mov rax,QWORD [rsp-8+8*1]
	mov QWORD [r14+8+8*0],rax
	mov rax,unt 
	mov rax,unt_1
	mov QWORD [r14+8+8*1],rax
	mov rax,r14
	mov BYTE [rax+6],0
	mov QWORD [r13+8+8*1],rax
	mov rax,r13
	mov BYTE [rax+6],0
	mov r8,rax
	add rsp,8
	jmp LB_2679
LB_2679:
	cmp BYTE [r8+6],0
	jnz LB_2654
	POP_GRM_SCC
	ret
LB_2654:
	RB_GRM
	jmp LB_2682
LB_2681:
	add r14,1 
LB_2682:
	cmp r14,r9
	jge LB_2683
	JZ_SPC BYTE [r13+8+r14], LB_2681
LB_2683
	call GRM_209
	cmp BYTE [r8+6],0
	jnz LB_2686
	jmp LB_2687
LB_2686:
	jmp LB_2684
LB_2687:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a21◂ [ a18◂ [ ]{| l |}] ) ⊢ 8'(= a21◂ [ a18◂ [ ]{| l |}] )
; .mov_ptn 2'(= a21◂ [ a18◂ [ ]{| l |}] ) ⊢ 8'(= a21◂ [ a18◂ [ ]{| l |}] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_2685
LB_2684:
	add rsp,0
	jmp LB_2680
LB_2685:
	jmp LB_2689
LB_2688:
	add r14,1 
LB_2689:
	cmp r14,r9
	jge LB_2690
	JZ_SPC BYTE [r13+8+r14], LB_2688
LB_2690
	call GRM_208
	cmp BYTE [r8+6],0
	jnz LB_2693
	jmp LB_2694
LB_2693:
	jmp LB_2691
LB_2694:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a2◂ [ a21◂ [ a18◂ [ ]{| l |}]] ) ⊢ 9'(= a2◂ [ a21◂ [ a18◂ [ ]{| l |}]] )
; .mov_ptn 2'(= a2◂ [ a21◂ [ a18◂ [ ]{| l |}]] ) ⊢ 9'(= a2◂ [ a21◂ [ a18◂ [ ]{| l |}]] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_2692
LB_2691:
	add rsp,8
	jmp LB_2680
LB_2692:
	jmp LB_2696
LB_2695:
	add r14,1 
LB_2696:
	cmp r14,r9
	jge LB_2697
	JZ_SPC BYTE [r13+8+r14], LB_2695
LB_2697
	lea rax,[r14+3]
	cmp rax,r9
	jg LB_2700
	jmp LB_2701
LB_2700:
	mov r8,unt_1
	jmp LB_2698
LB_2701:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],226
	jnz LB_2702
	cmp BYTE [rdi+1],138
	jnz LB_2702
	cmp BYTE [rdi+2],162
	jnz LB_2702
	jmp LB_2703
LB_2702:
	mov r8,unt_1
	jmp LB_2698
LB_2703:
	add r14,3
	jmp LB_2699
LB_2698:
	add rsp,16
	jmp LB_2680
LB_2699:
	jmp LB_2705
LB_2704:
	add r14,1 
LB_2705:
	cmp r14,r9
	jge LB_2706
	JZ_SPC BYTE [r13+8+r14], LB_2704
LB_2706
	call GRM_214
	cmp BYTE [r8+6],0
	jnz LB_2709
	jmp LB_2710
LB_2709:
	jmp LB_2707
LB_2710:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a22◂ [ {| l |}] ) ⊢ 10'(= a22◂ [ {| l |}] )
; .mov_ptn 2'(= a22◂ [ {| l |}] ) ⊢ 10'(= a22◂ [ {| l |}] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_2708
LB_2707:
	add rsp,16
	jmp LB_2680
LB_2708:
	jmp LB_2712
LB_2711:
	add r14,1 
LB_2712:
	cmp r14,r9
	jge LB_2713
	JZ_SPC BYTE [r13+8+r14], LB_2711
LB_2713
	call GRM_213
	cmp BYTE [r8+6],0
	jnz LB_2716
	jmp LB_2717
LB_2716:
	jmp LB_2714
LB_2717:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a2◂ [ a22◂ [ {| l |}]] ) ⊢ 11'(= a2◂ [ a22◂ [ {| l |}]] )
; .mov_ptn 2'(= a2◂ [ a22◂ [ {| l |}]] ) ⊢ 11'(= a2◂ [ a22◂ [ {| l |}]] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_2715
LB_2714:
	add rsp,24
	jmp LB_2680
LB_2715:
	mov QWORD [rsp+8*4],r14
	mov r13,QWORD [rsp+16+8*4]
	mov r14,QWORD [rsp+8*4]
	jmp LB_2718
LB_2718
;; rsp=4 , %1679~1'(= r ) %1678~0'(= r ) %1677~11'(= a2◂ [ a22◂ [ {| l |}]] ) %1676~10'(= a22◂ [ {| l |}] ) %1675~9'(= a2◂ [ a21◂ [ a18◂ [ ]{| l |}]] ) %1674~8'(= a21◂ [ a18◂ [ ]{| l |}] ) 
; #23 { 8'(= a21◂ [ a18◂ [ ]{| l |}] ) 9'(= a2◂ [ a21◂ [ a18◂ [ ]{| l |}]] ) } ⊢ 0(<2)◂{ 8'(= a21◂ [ a18◂ [ ]{| l |}] ) 9'(= a2◂ [ a21◂ [ a18◂ [ ]{| l |}]] ) }
;; rsp=4 , %1680~0(<2)◂{ 8'(= a21◂ [ a18◂ [ ]{| l |}] ) 9'(= a2◂ [ a21◂ [ a18◂ [ ]{| l |}]] ) } %1679~1'(= r ) %1678~0'(= r ) %1677~11'(= a2◂ [ a22◂ [ {| l |}]] ) %1676~10'(= a22◂ [ {| l |}] ) 
; #23 { 10'(= a22◂ [ {| l |}] ) 11'(= a2◂ [ a22◂ [ {| l |}]] ) } ⊢ 0(<2)◂{ 10'(= a22◂ [ {| l |}] ) 11'(= a2◂ [ a22◂ [ {| l |}]] ) }
;; rsp=4 , %1681~0(<2)◂{ 10'(= a22◂ [ {| l |}] ) 11'(= a2◂ [ a22◂ [ {| l |}]] ) } %1680~0(<2)◂{ 8'(= a21◂ [ a18◂ [ ]{| l |}] ) 9'(= a2◂ [ a21◂ [ a18◂ [ ]{| l |}]] ) } %1679~1'(= r ) %1678~0'(= r ) 
; #24 { 0(<2)◂{ 8'(= a21◂ [ a18◂ [ ]{| l |}] ) 9'(= a2◂ [ a21◂ [ a18◂ [ ]{| l |}]] ) } 0(<2)◂{ 10'(= a22◂ [ {| l |}] ) 11'(= a2◂ [ a22◂ [ {| l |}]] ) } } ⊢ 0(<2)◂{ 0(<2)◂{ 8'(= a21◂ [ a18◂ [ ]{| l |}] ) 9'(= a2◂ [ a21◂ [ a18◂ [ ]{| l |}]] ) } 0(<2)◂{ 10'(= a22◂ [ {| l |}] ) 11'(= a2◂ [ a22◂ [ {| l |}]] ) } }
;; rsp=4 , %1682~0(<2)◂{ 0(<2)◂{ 8'(= a21◂ [ a18◂ [ ]{| l |}] ) 9'(= a2◂ [ a21◂ [ a18◂ [ ]{| l |}]] ) } 0(<2)◂{ 10'(= a22◂ [ {| l |}] ) 11'(= a2◂ [ a22◂ [ {| l |}]] ) } } %1679~1'(= r ) %1678~0'(= r ) 
; ∎ 0(<2)◂{ 0(<2)◂{ 8'(= a21◂ [ a18◂ [ ]{| l |}] ) 9'(= a2◂ [ a21◂ [ a18◂ [ ]{| l |}]] ) } 0(<2)◂{ 10'(= a22◂ [ {| l |}] ) 11'(= a2◂ [ a22◂ [ {| l |}]] ) } }
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂{ 0(<2)◂{ 8'(= a21◂ [ a18◂ [ ]{| l |}] ) 9'(= a2◂ [ a21◂ [ a18◂ [ ]{| l |}]] ) } 0(<2)◂{ 10'(= a22◂ [ {| l |}] ) 11'(= a2◂ [ a22◂ [ {| l |}]] ) } } ⊢ 2'(= a3◂ [ *{ a2◂ [ a21◂ [ a18◂ [ ]{| l |}]]a2◂ [ a22◂ [ {| l |}]]}] )
; .mov_ptn 0(<2)◂{ 0(<2)◂{ 8'(= a21◂ [ a18◂ [ ]{| l |}] ) 9'(= a2◂ [ a21◂ [ a18◂ [ ]{| l |}]] ) } 0(<2)◂{ 10'(= a22◂ [ {| l |}] ) 11'(= a2◂ [ a22◂ [ {| l |}]] ) } } ⊢ 2'(= a3◂ [ *{ a2◂ [ a21◂ [ a18◂ [ ]{| l |}]]a2◂ [ a22◂ [ {| l |}]]}] )
	ALC_RCD 2, rax
	mov r13,rax
	ALC_RCD 2, rax
	mov r14,rax
	mov rax,QWORD [rsp-8+8*4]
	mov QWORD [r14+8+8*0],rax
	mov rax,QWORD [rsp-8+8*3]
	mov QWORD [r14+8+8*1],rax
	mov rax,r14
	mov BYTE [rax+6],0
	mov QWORD [r13+8+8*0],rax
	ALC_RCD 2, rax
	mov r14,rax
	mov rax,QWORD [rsp-8+8*2]
	mov QWORD [r14+8+8*0],rax
	mov rax,QWORD [rsp-8+8*1]
	mov QWORD [r14+8+8*1],rax
	mov rax,r14
	mov BYTE [rax+6],0
	mov QWORD [r13+8+8*1],rax
	mov rax,r13
	mov BYTE [rax+6],0
	mov r8,rax
	add rsp,32
	jmp LB_2719
LB_2719:
	cmp BYTE [r8+6],0
	jnz LB_2680
	POP_GRM_SCC
	ret
LB_2680:
	POP_GRM_FAIL 
	ret
ETR_239:
	mov r9,0x0000_ffff_ffff_ffff
	and r9,[r13]
	call GRM_239
	ret
GRM_239:
	PUSH_GRM
	jmp LB_2722
LB_2721:
	add r14,1 
LB_2722:
	cmp r14,r9
	jge LB_2723
	JZ_SPC BYTE [r13+8+r14], LB_2721
LB_2723
	call GRM_221
	cmp BYTE [r8+6],0
	jnz LB_2726
	jmp LB_2727
LB_2726:
	jmp LB_2724
LB_2727:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a44◂ [ *{ }] ) ⊢ 8'(= a44◂ [ *{ }] )
; .mov_ptn 2'(= a44◂ [ *{ }] ) ⊢ 8'(= a44◂ [ *{ }] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_2725
LB_2724:
	add rsp,0
	jmp LB_2720
LB_2725:
	jmp LB_2729
LB_2728:
	add r14,1 
LB_2729:
	cmp r14,r9
	jge LB_2730
	JZ_SPC BYTE [r13+8+r14], LB_2728
LB_2730
	lea rax,[r14+4]
	cmp rax,r9
	jg LB_2733
	jmp LB_2734
LB_2733:
	mov r8,unt_1
	jmp LB_2731
LB_2734:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],226
	jnz LB_2735
	cmp BYTE [rdi+1],136
	jnz LB_2735
	cmp BYTE [rdi+2],142
	jnz LB_2735
	cmp BYTE [rdi+3],124
	jnz LB_2735
	jmp LB_2736
LB_2735:
	mov r8,unt_1
	jmp LB_2731
LB_2736:
	add r14,4
	jmp LB_2732
LB_2731:
	add rsp,8
	jmp LB_2720
LB_2732:
	mov QWORD [rsp+8*1],r14
	mov r13,QWORD [rsp+16+8*1]
	mov r14,QWORD [rsp+8*1]
	jmp LB_2737
LB_2737
;; rsp=1 , %1685~1'(= r ) %1684~0'(= r ) %1683~8'(= a44◂ [ *{ }] ) 
; #130 0'(= r ) ⊢ 6(<7)◂0'(= r )
;; rsp=1 , %1686~6(<7)◂0'(= r ) %1685~1'(= r ) %1683~8'(= a44◂ [ *{ }] ) 
; #198 6(<7)◂0'(= r ) ⊢ 0(<2)◂6(<7)◂0'(= r )
;; rsp=1 , %1687~0(<2)◂6(<7)◂0'(= r ) %1685~1'(= r ) %1683~8'(= a44◂ [ *{ }] ) 
; #24 0(<2)◂6(<7)◂0'(= r ) ⊢ 0(<2)◂0(<2)◂6(<7)◂0'(= r )
;; rsp=1 , %1688~0(<2)◂0(<2)◂6(<7)◂0'(= r ) %1685~1'(= r ) %1683~8'(= a44◂ [ *{ }] ) 
; ∎ 0(<2)◂0(<2)◂6(<7)◂0'(= r )
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 8'(= a44◂ [ *{ }] )
	mov rdi,QWORD [rsp-8+8*1]
	C_PUSH_REGS
	mov r8,rdi
	call LB_1876
	C_POP_REGS
; .mov_ptn2 0(<2)◂0(<2)◂6(<7)◂0'(= r ) ⊢ 2'(= a3◂ [ a44◂ [ a26◂ [ a18◂ [ ]{| l |}]]] )
; .mov_ptn 0(<2)◂0(<2)◂6(<7)◂0'(= r ) ⊢ 2'(= a3◂ [ a44◂ [ a26◂ [ a18◂ [ ]{| l |}]]] )
	mov rax,r13
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],6
	mov QWORD [rax+8],rdi
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,8
	jmp LB_2738
LB_2738:
	cmp BYTE [r8+6],0
	jnz LB_2720
	POP_GRM_SCC
	ret
LB_2720:
	RB_GRM
	jmp LB_2741
LB_2740:
	add r14,1 
LB_2741:
	cmp r14,r9
	jge LB_2742
	JZ_LINE_SPC BYTE [r13+8+r14], LB_2740
LB_2742
	call GRM_221
	cmp BYTE [r8+6],0
	jnz LB_2745
	jmp LB_2746
LB_2745:
	jmp LB_2743
LB_2746:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a44◂ [ *{ }] ) ⊢ 8'(= a44◂ [ *{ }] )
; .mov_ptn 2'(= a44◂ [ *{ }] ) ⊢ 8'(= a44◂ [ *{ }] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_2744
LB_2743:
	add rsp,0
	jmp LB_2739
LB_2744:
	jmp LB_2748
LB_2747:
	add r14,1 
LB_2748:
	cmp r14,r9
	jge LB_2749
	JZ_LINE_SPC BYTE [r13+8+r14], LB_2747
LB_2749
	lea rax,[r14+3]
	cmp rax,r9
	jg LB_2752
	jmp LB_2753
LB_2752:
	mov r8,unt_1
	jmp LB_2750
LB_2753:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],226
	jnz LB_2754
	cmp BYTE [rdi+1],136
	jnz LB_2754
	cmp BYTE [rdi+2],142
	jnz LB_2754
	jmp LB_2755
LB_2754:
	mov r8,unt_1
	jmp LB_2750
LB_2755:
	add r14,3
	jmp LB_2751
LB_2750:
	add rsp,8
	jmp LB_2739
LB_2751:
	PUSH_GRM
	jmp LB_2759
LB_2758:
	add r14,1 
LB_2759:
	cmp r14,r9
	jge LB_2760
	JZ_LINE_SPC BYTE [r13+8+r14], LB_2758
LB_2760
	lea rax,[r14+1]
	cmp rax,r9
	jg LB_2763
	jmp LB_2764
LB_2763:
	mov r8,unt_1
	jmp LB_2761
LB_2764:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],10
	jnz LB_2765
	jmp LB_2766
LB_2765:
	mov r8,unt_1
	jmp LB_2761
LB_2766:
	add r14,1
	jmp LB_2762
LB_2761:
	add rsp,0
	jmp LB_2757
LB_2762:
	mov QWORD [rsp+8*0],r14
	mov r13,QWORD [rsp+16+8*0]
	mov r14,QWORD [rsp+8*0]
	jmp LB_2767
LB_2767
;; rsp=0 , %1693~1'(= r ) %1692~0'(= r ) 
; #25 { } ⊢ 1(<2)◂{ }
;; rsp=0 , %1694~1(<2)◂{ } %1693~1'(= r ) %1692~0'(= r ) 
; #131 1(<2)◂{ } ⊢ 5(<7)◂1(<2)◂{ }
;; rsp=0 , %1695~5(<7)◂1(<2)◂{ } %1693~1'(= r ) %1692~0'(= r ) 
; #198 5(<7)◂1(<2)◂{ } ⊢ 0(<2)◂5(<7)◂1(<2)◂{ }
;; rsp=0 , %1696~0(<2)◂5(<7)◂1(<2)◂{ } %1693~1'(= r ) %1692~0'(= r ) 
; #24 0(<2)◂5(<7)◂1(<2)◂{ } ⊢ 0(<2)◂0(<2)◂5(<7)◂1(<2)◂{ }
;; rsp=0 , %1697~0(<2)◂0(<2)◂5(<7)◂1(<2)◂{ } %1693~1'(= r ) %1692~0'(= r ) 
; ∎ 0(<2)◂0(<2)◂5(<7)◂1(<2)◂{ }
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂0(<2)◂5(<7)◂1(<2)◂{ } ⊢ 2'(= a3◂ [ a44◂ [ a26◂ [ a18◂ [ ]{| l |}]]] )
; .mov_ptn 0(<2)◂0(<2)◂5(<7)◂1(<2)◂{ } ⊢ 2'(= a3◂ [ a44◂ [ a26◂ [ a18◂ [ ]{| l |}]]] )
	mov rax,unt 
	mov rax,unt_1
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],5
	mov QWORD [rax+8],rdi
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	jmp LB_2768
LB_2768:
	cmp BYTE [r8+6],0
	jnz LB_2757
	POP_GRM_SCC
	jmp LB_2756
LB_2757:
	RB_GRM
	jmp LB_2771
LB_2770:
	add r14,1 
LB_2771:
	cmp r14,r9
	jge LB_2772
	JZ_LINE_SPC BYTE [r13+8+r14], LB_2770
LB_2772
	call GRM_206
	cmp BYTE [r8+6],0
	jnz LB_2775
	jmp LB_2776
LB_2775:
	jmp LB_2773
LB_2776:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a17◂ [ a21◂ [ a18◂ [ ]{| l |}]] ) ⊢ 8'(= a17◂ [ a21◂ [ a18◂ [ ]{| l |}]] )
; .mov_ptn 2'(= a17◂ [ a21◂ [ a18◂ [ ]{| l |}]] ) ⊢ 8'(= a17◂ [ a21◂ [ a18◂ [ ]{| l |}]] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_2774
LB_2773:
	add rsp,0
	jmp LB_2769
LB_2774:
	jmp LB_2778
LB_2777:
	add r14,1 
LB_2778:
	cmp r14,r9
	jge LB_2779
	JZ_LINE_SPC BYTE [r13+8+r14], LB_2777
LB_2779
	lea rax,[r14+1]
	cmp rax,r9
	jg LB_2782
	jmp LB_2783
LB_2782:
	mov r8,unt_1
	jmp LB_2780
LB_2783:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],10
	jnz LB_2784
	jmp LB_2785
LB_2784:
	mov r8,unt_1
	jmp LB_2780
LB_2785:
	add r14,1
	jmp LB_2781
LB_2780:
	add rsp,8
	jmp LB_2769
LB_2781:
	mov QWORD [rsp+8*1],r14
	mov r13,QWORD [rsp+16+8*1]
	mov r14,QWORD [rsp+8*1]
	jmp LB_2786
LB_2786
;; rsp=1 , %1700~1'(= r ) %1699~0'(= r ) %1698~8'(= a17◂ [ a21◂ [ a18◂ [ ]{| l |}]] ) 
; #24 8'(= a17◂ [ a21◂ [ a18◂ [ ]{| l |}]] ) ⊢ 0(<2)◂8'(= a17◂ [ a21◂ [ a18◂ [ ]{| l |}]] )
;; rsp=1 , %1701~0(<2)◂8'(= a17◂ [ a21◂ [ a18◂ [ ]{| l |}]] ) %1700~1'(= r ) %1699~0'(= r ) 
; #131 0(<2)◂8'(= a17◂ [ a21◂ [ a18◂ [ ]{| l |}]] ) ⊢ 5(<7)◂0(<2)◂8'(= a17◂ [ a21◂ [ a18◂ [ ]{| l |}]] )
;; rsp=1 , %1702~5(<7)◂0(<2)◂8'(= a17◂ [ a21◂ [ a18◂ [ ]{| l |}]] ) %1700~1'(= r ) %1699~0'(= r ) 
; #198 5(<7)◂0(<2)◂8'(= a17◂ [ a21◂ [ a18◂ [ ]{| l |}]] ) ⊢ 0(<2)◂5(<7)◂0(<2)◂8'(= a17◂ [ a21◂ [ a18◂ [ ]{| l |}]] )
;; rsp=1 , %1703~0(<2)◂5(<7)◂0(<2)◂8'(= a17◂ [ a21◂ [ a18◂ [ ]{| l |}]] ) %1700~1'(= r ) %1699~0'(= r ) 
; #24 0(<2)◂5(<7)◂0(<2)◂8'(= a17◂ [ a21◂ [ a18◂ [ ]{| l |}]] ) ⊢ 0(<2)◂0(<2)◂5(<7)◂0(<2)◂8'(= a17◂ [ a21◂ [ a18◂ [ ]{| l |}]] )
;; rsp=1 , %1704~0(<2)◂0(<2)◂5(<7)◂0(<2)◂8'(= a17◂ [ a21◂ [ a18◂ [ ]{| l |}]] ) %1700~1'(= r ) %1699~0'(= r ) 
; ∎ 0(<2)◂0(<2)◂5(<7)◂0(<2)◂8'(= a17◂ [ a21◂ [ a18◂ [ ]{| l |}]] )
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂0(<2)◂5(<7)◂0(<2)◂8'(= a17◂ [ a21◂ [ a18◂ [ ]{| l |}]] ) ⊢ 2'(= a3◂ [ a44◂ [ a26◂ [ a18◂ [ ]{| l |}]]] )
; .mov_ptn 0(<2)◂0(<2)◂5(<7)◂0(<2)◂8'(= a17◂ [ a21◂ [ a18◂ [ ]{| l |}]] ) ⊢ 2'(= a3◂ [ a44◂ [ a26◂ [ a18◂ [ ]{| l |}]]] )
	mov rax,QWORD [rsp-8+8*1]
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],5
	mov QWORD [rax+8],rdi
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,8
	jmp LB_2787
LB_2787:
	cmp BYTE [r8+6],0
	jnz LB_2769
	POP_GRM_SCC
	jmp LB_2756
LB_2769:
	RB_GRM
	jmp LB_2790
LB_2789:
	add r14,1 
LB_2790:
	cmp r14,r9
	jge LB_2791
	JZ_LINE_SPC BYTE [r13+8+r14], LB_2789
LB_2791
	call GRM_224
	cmp BYTE [r8+6],0
	jnz LB_2794
	jmp LB_2795
LB_2794:
	jmp LB_2792
LB_2795:
	sub rsp,16
; .mov_ptn2 2'(= *{ rr} ) ⊢ { 8'(= r ) 9'(= r ) }
; .mov_ptn 2'(= *{ rr} ) ⊢ { 8'(= r ) 9'(= r ) }
	mov r10, QWORD [r8+8]
	mov QWORD [rsp-8+8*2],r10
	mov r11, QWORD [r8+16]
	mov QWORD [rsp-8+8*1],r11
	mov rdi,r8
	FREE_RCD 2,rdi
	jmp LB_2793
LB_2792:
	add rsp,0
	jmp LB_2788
LB_2793:
	mov QWORD [rsp+8*2],r14
	mov r13,QWORD [rsp+16+8*2]
	mov r14,QWORD [rsp+8*2]
	jmp LB_2796
LB_2796
;; rsp=2 , %1707~1'(= r ) %1706~0'(= r ) %1705~{ 8'(= r ) 9'(= r ) } 
; $ %[ "lc_code ∎ .. " ] ⊢ %[ "lc_code ∎ .. " ]
;; rsp=2 , %1708~%[ "lc_code ∎ .. " ] %1707~1'(= r ) %1706~0'(= r ) %1705~{ 8'(= r ) 9'(= r ) } 
; #22 { } ⊢ 1(<2)◂{ }
;; rsp=2 , %1709~1(<2)◂{ } %1708~%[ "lc_code ∎ .. " ] %1707~1'(= r ) %1706~0'(= r ) %1705~{ 8'(= r ) 9'(= r ) } 
; #23 { { 0'(= r ) 1'(= r ) %[ "lc_code ∎ .. " ] } 1(<2)◂{ } } ⊢ 0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "lc_code ∎ .. " ] } 1(<2)◂{ } }
;; rsp=2 , %1710~0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "lc_code ∎ .. " ] } 1(<2)◂{ } } %1705~{ 8'(= r ) 9'(= r ) } 
; #197 0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "lc_code ∎ .. " ] } 1(<2)◂{ } } ⊢ 1(<2)◂0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "lc_code ∎ .. " ] } 1(<2)◂{ } }
;; rsp=2 , %1711~1(<2)◂0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "lc_code ∎ .. " ] } 1(<2)◂{ } } %1705~{ 8'(= r ) 9'(= r ) } 
; #24 1(<2)◂0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "lc_code ∎ .. " ] } 1(<2)◂{ } } ⊢ 0(<2)◂1(<2)◂0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "lc_code ∎ .. " ] } 1(<2)◂{ } }
;; rsp=2 , %1712~0(<2)◂1(<2)◂0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "lc_code ∎ .. " ] } 1(<2)◂{ } } %1705~{ 8'(= r ) 9'(= r ) } 
; ∎ 0(<2)◂1(<2)◂0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "lc_code ∎ .. " ] } 1(<2)◂{ } }
; .dlt.ptn { 8'(= r ) 9'(= r ) }
	mov rdi,QWORD [rsp-8+8*2]
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
	mov rdi,QWORD [rsp-8+8*1]
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂1(<2)◂0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "lc_code ∎ .. " ] } 1(<2)◂{ } } ⊢ 2'(= a3◂ [ a44◂ [ a26◂ [ a18◂ [ ]{| l |}]]] )
; .mov_ptn 0(<2)◂1(<2)◂0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "lc_code ∎ .. " ] } 1(<2)◂{ } } ⊢ 2'(= a3◂ [ a44◂ [ a26◂ [ a18◂ [ ]{| l |}]]] )
	ALC_RCD 2, rax
	mov r9,rax
	ALC_RCD 3, rax
	mov r10,rax
	mov rax,r13
	mov QWORD [r10+8+8*0],rax
	mov rax,r14
	mov QWORD [r10+8+8*1],rax
	mov rsi,1  
	mov rdi,24
	xor rax,rax 
	C_CALL_SF calloc
	mov QWORD [rax],15
	mov BYTE [rax+8+0],108
	mov BYTE [rax+8+1],99
	mov BYTE [rax+8+2],95
	mov BYTE [rax+8+3],99
	mov BYTE [rax+8+4],111
	mov BYTE [rax+8+5],100
	mov BYTE [rax+8+6],101
	mov BYTE [rax+8+7],32
	mov BYTE [rax+8+8],226
	mov BYTE [rax+8+9],136
	mov BYTE [rax+8+10],142
	mov BYTE [rax+8+11],32
	mov BYTE [rax+8+12],46
	mov BYTE [rax+8+13],46
	mov BYTE [rax+8+14],32
	mov QWORD [r10+8+8*2],rax
	mov rax,r10
	mov QWORD [r9+8+8*0],rax
	mov rax,unt 
	mov rax,unt_1
	mov QWORD [r9+8+8*1],rax
	mov rax,r9
	mov BYTE [rax+6],0
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],1
	mov QWORD [rax+8],rdi
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,16
	jmp LB_2797
LB_2797:
	cmp BYTE [r8+6],0
	jnz LB_2788
	POP_GRM_SCC
	jmp LB_2756
LB_2788:
	POP_GRM_FAIL 
	jmp LB_2756
LB_2756:
	cmp BYTE [r8+6],0
	jnz LB_2798
	jmp LB_2799
LB_2798:
	add rsp,8
	POP_GRM_FAIL
	ret
LB_2799:
	mov QWORD [rsp+8*1],r14
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi 
; .mov_ptn2 2'(= a44◂ [ a26◂ [ a18◂ [ ]{| l |}]] ) ⊢ 3'(= a44◂ [ a26◂ [ a18◂ [ ]{| l |}]] )
	mov r10,r9
; .mov_ptn 2'(= a44◂ [ a26◂ [ a18◂ [ ]{| l |}]] ) ⊢ 3'(= a44◂ [ a26◂ [ a18◂ [ ]{| l |}]] )
	mov rax,r8
	mov r9,rax
	mov r13,QWORD [rsp+16+8*1]
	mov r14,QWORD [rsp+8*1]
	jmp LB_2800
LB_2800
;; rsp=1 , %1713~3'(= a44◂ [ a26◂ [ a18◂ [ ]{| l |}]] ) %1691~1'(= r ) %1690~0'(= r ) %1689~8'(= a44◂ [ *{ }] ) 
; #24 3'(= a44◂ [ a26◂ [ a18◂ [ ]{| l |}]] ) ⊢ 0(<2)◂3'(= a44◂ [ a26◂ [ a18◂ [ ]{| l |}]] )
;; rsp=1 , %1714~0(<2)◂3'(= a44◂ [ a26◂ [ a18◂ [ ]{| l |}]] ) %1691~1'(= r ) %1690~0'(= r ) %1689~8'(= a44◂ [ *{ }] ) 
; ∎ 0(<2)◂3'(= a44◂ [ a26◂ [ a18◂ [ ]{| l |}]] )
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 8'(= a44◂ [ *{ }] )
	mov rdi,QWORD [rsp-8+8*1]
	C_PUSH_REGS
	mov r8,rdi
	call LB_1876
	C_POP_REGS
; .mov_ptn2 0(<2)◂3'(= a44◂ [ a26◂ [ a18◂ [ ]{| l |}]] ) ⊢ 2'(= a3◂ [ a44◂ [ a26◂ [ a18◂ [ ]{| l |}]]] )
; .mov_ptn 0(<2)◂3'(= a44◂ [ a26◂ [ a18◂ [ ]{| l |}]] ) ⊢ 2'(= a3◂ [ a44◂ [ a26◂ [ a18◂ [ ]{| l |}]]] )
	mov rax,r9
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,8
	jmp LB_2801
LB_2801:
	cmp BYTE [r8+6],0
	jnz LB_2739
	POP_GRM_SCC
	ret
LB_2739:
	RB_GRM
	jmp LB_2804
LB_2803:
	add r14,1 
LB_2804:
	cmp r14,r9
	jge LB_2805
	JZ_LINE_SPC BYTE [r13+8+r14], LB_2803
LB_2805
	call GRM_221
	cmp BYTE [r8+6],0
	jnz LB_2808
	jmp LB_2809
LB_2808:
	jmp LB_2806
LB_2809:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a44◂ [ *{ }] ) ⊢ 8'(= a44◂ [ *{ }] )
; .mov_ptn 2'(= a44◂ [ *{ }] ) ⊢ 8'(= a44◂ [ *{ }] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_2807
LB_2806:
	add rsp,0
	jmp LB_2802
LB_2807:
	jmp LB_2811
LB_2810:
	add r14,1 
LB_2811:
	cmp r14,r9
	jge LB_2812
	JZ_LINE_SPC BYTE [r13+8+r14], LB_2810
LB_2812
	lea rax,[r14+1]
	cmp rax,r9
	jg LB_2815
	jmp LB_2816
LB_2815:
	mov r8,unt_1
	jmp LB_2813
LB_2816:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],94
	jnz LB_2817
	jmp LB_2818
LB_2817:
	mov r8,unt_1
	jmp LB_2813
LB_2818:
	add r14,1
	jmp LB_2814
LB_2813:
	add rsp,8
	jmp LB_2802
LB_2814:
	jmp LB_2820
LB_2819:
	add r14,1 
LB_2820:
	cmp r14,r9
	jge LB_2821
	JZ_LINE_SPC BYTE [r13+8+r14], LB_2819
LB_2821
	call GRM_238
	cmp BYTE [r8+6],0
	jnz LB_2824
	jmp LB_2825
LB_2824:
	jmp LB_2822
LB_2825:
	sub rsp,16
; .mov_ptn2 2'(= *{ a2◂ [ a21◂ [ a18◂ [ ]{| l |}]]a2◂ [ a22◂ [ {| l |}]]} ) ⊢ { 9'(= a2◂ [ a21◂ [ a18◂ [ ]{| l |}]] ) 10'(= a2◂ [ a22◂ [ {| l |}]] ) }
; .mov_ptn 2'(= *{ a2◂ [ a21◂ [ a18◂ [ ]{| l |}]]a2◂ [ a22◂ [ {| l |}]]} ) ⊢ { 9'(= a2◂ [ a21◂ [ a18◂ [ ]{| l |}]] ) 10'(= a2◂ [ a22◂ [ {| l |}]] ) }
	mov r10, QWORD [r8+8]
	mov QWORD [rsp-8+8*2],r10
	mov r11, QWORD [r8+16]
	mov QWORD [rsp-8+8*1],r11
	mov rdi,r8
	FREE_RCD 2,rdi
	jmp LB_2823
LB_2822:
	add rsp,8
	POP_GRM_FAIL
	ret
LB_2823:
	jmp LB_2827
LB_2826:
	add r14,1 
LB_2827:
	cmp r14,r9
	jge LB_2828
	JZ_LINE_SPC BYTE [r13+8+r14], LB_2826
LB_2828
	lea rax,[r14+1]
	cmp rax,r9
	jg LB_2831
	jmp LB_2832
LB_2831:
	mov r8,unt_1
	jmp LB_2829
LB_2832:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],10
	jnz LB_2833
	jmp LB_2834
LB_2833:
	mov r8,unt_1
	jmp LB_2829
LB_2834:
	add r14,1
	jmp LB_2830
LB_2829:
	add rsp,24
	POP_GRM_FAIL
	ret
LB_2830:
	jmp LB_2836
LB_2835:
	add r14,1 
LB_2836:
	cmp r14,r9
	jge LB_2837
	JZ_LINE_SPC BYTE [r13+8+r14], LB_2835
LB_2837
	call GRM_236
	cmp BYTE [r8+6],0
	jnz LB_2840
	jmp LB_2841
LB_2840:
	jmp LB_2838
LB_2841:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a2◂ [ a25◂ [ a18◂ [ ]]] ) ⊢ 11'(= a2◂ [ a25◂ [ a18◂ [ ]]] )
; .mov_ptn 2'(= a2◂ [ a25◂ [ a18◂ [ ]]] ) ⊢ 11'(= a2◂ [ a25◂ [ a18◂ [ ]]] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_2839
LB_2838:
	add rsp,24
	POP_GRM_FAIL
	ret
LB_2839:
	jmp LB_2843
LB_2842:
	add r14,1 
LB_2843:
	cmp r14,r9
	jge LB_2844
	JZ_LINE_SPC BYTE [r13+8+r14], LB_2842
LB_2844
	call GRM_239
	cmp BYTE [r8+6],0
	jnz LB_2847
	jmp LB_2848
LB_2847:
	jmp LB_2845
LB_2848:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a44◂ [ a26◂ [ a18◂ [ ]{| l |}]] ) ⊢ 12'(= a44◂ [ a26◂ [ a18◂ [ ]{| l |}]] )
; .mov_ptn 2'(= a44◂ [ a26◂ [ a18◂ [ ]{| l |}]] ) ⊢ 12'(= a44◂ [ a26◂ [ a18◂ [ ]{| l |}]] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_2846
LB_2845:
	add rsp,32
	POP_GRM_FAIL
	ret
LB_2846:
	mov QWORD [rsp+8*5],r14
	mov r13,QWORD [rsp+16+8*5]
	mov r14,QWORD [rsp+8*5]
	jmp LB_2849
LB_2849
;; rsp=5 , %1721~1'(= r ) %1720~0'(= r ) %1719~12'(= a44◂ [ a26◂ [ a18◂ [ ]{| l |}]] ) %1718~11'(= a2◂ [ a25◂ [ a18◂ [ ]]] ) %1717~10'(= a2◂ [ a22◂ [ {| l |}]] ) %1716~9'(= a2◂ [ a21◂ [ a18◂ [ ]{| l |}]] ) %1715~8'(= a44◂ [ *{ }] ) 
; #57 11'(= a2◂ [ a25◂ [ a18◂ [ ]]] ) ⊢ 2'(= a2◂ [ a25◂ [ a18◂ [ ]]] )
	sub rsp,16
	mov QWORD [rsp+8*0],r13
	mov QWORD [rsp+8*1],r14
; .mov_ptn2 11'(= a2◂ [ a25◂ [ a18◂ [ ]]] ) ⊢ 0'(= a2◂ [ a25◂ [ a18◂ [ ]]] )
; .mov_ptn 11'(= a2◂ [ a25◂ [ a18◂ [ ]]] ) ⊢ 0'(= a2◂ [ a25◂ [ a18◂ [ ]]] )
	mov rax,QWORD [rsp-8+8*4]
	mov r13,rax
	call LB_2851
	mov r14,QWORD [rsp-8+8*2]
	mov r8,r13
	mov r13,QWORD [rsp-8+8*1]
	add rsp,16
;; rsp=5 , %1722~2'(= a2◂ [ a25◂ [ a18◂ [ ]]] ) %1721~1'(= r ) %1720~0'(= r ) %1719~12'(= a44◂ [ a26◂ [ a18◂ [ ]{| l |}]] ) %1717~10'(= a2◂ [ a22◂ [ {| l |}]] ) %1716~9'(= a2◂ [ a21◂ [ a18◂ [ ]{| l |}]] ) %1715~8'(= a44◂ [ *{ }] ) 
; #124 { 2'(= a2◂ [ a25◂ [ a18◂ [ ]]] ) 9'(= a2◂ [ a21◂ [ a18◂ [ ]{| l |}]] ) 10'(= a2◂ [ a22◂ [ {| l |}]] ) } ⊢ 3(<4)◂{ 2'(= a2◂ [ a25◂ [ a18◂ [ ]]] ) 9'(= a2◂ [ a21◂ [ a18◂ [ ]{| l |}]] ) 10'(= a2◂ [ a22◂ [ {| l |}]] ) }
;; rsp=5 , %1723~3(<4)◂{ 2'(= a2◂ [ a25◂ [ a18◂ [ ]]] ) 9'(= a2◂ [ a21◂ [ a18◂ [ ]{| l |}]] ) 10'(= a2◂ [ a22◂ [ {| l |}]] ) } %1721~1'(= r ) %1720~0'(= r ) %1719~12'(= a44◂ [ a26◂ [ a18◂ [ ]{| l |}]] ) %1715~8'(= a44◂ [ *{ }] ) 
;; ? 12'(= a44◂ [ a26◂ [ a18◂ [ ]{| l |}]] ) ⊢ 0(<2)◂3'(= a26◂ [ a18◂ [ ]{| l |}] )
	mov rdi,QWORD [rsp-8+8*1]
	cmp BYTE [rdi+6],0
	jnz LB_2857
	jmp LB_2858
LB_2857:
	jmp LB_2856
LB_2858:
	mov QWORD [GBG_VCT+8*0],rdi
	mov r9,QWORD [rdi+8]
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_LN rdi
;; rsp=5 , %1725~3'(= a26◂ [ a18◂ [ ]{| l |}] ) %1723~3(<4)◂{ 2'(= a2◂ [ a25◂ [ a18◂ [ ]]] ) 9'(= a2◂ [ a21◂ [ a18◂ [ ]{| l |}]] ) 10'(= a2◂ [ a22◂ [ {| l |}]] ) } %1721~1'(= r ) %1720~0'(= r ) %1715~8'(= a44◂ [ *{ }] ) 
; #134 { 3(<4)◂{ 2'(= a2◂ [ a25◂ [ a18◂ [ ]]] ) 9'(= a2◂ [ a21◂ [ a18◂ [ ]{| l |}]] ) 10'(= a2◂ [ a22◂ [ {| l |}]] ) } 3'(= a26◂ [ a18◂ [ ]{| l |}] ) } ⊢ 2(<7)◂{ 3(<4)◂{ 2'(= a2◂ [ a25◂ [ a18◂ [ ]]] ) 9'(= a2◂ [ a21◂ [ a18◂ [ ]{| l |}]] ) 10'(= a2◂ [ a22◂ [ {| l |}]] ) } 3'(= a26◂ [ a18◂ [ ]{| l |}] ) }
;; rsp=5 , %1726~2(<7)◂{ 3(<4)◂{ 2'(= a2◂ [ a25◂ [ a18◂ [ ]]] ) 9'(= a2◂ [ a21◂ [ a18◂ [ ]{| l |}]] ) 10'(= a2◂ [ a22◂ [ {| l |}]] ) } 3'(= a26◂ [ a18◂ [ ]{| l |}] ) } %1721~1'(= r ) %1720~0'(= r ) %1715~8'(= a44◂ [ *{ }] ) 
; #198 2(<7)◂{ 3(<4)◂{ 2'(= a2◂ [ a25◂ [ a18◂ [ ]]] ) 9'(= a2◂ [ a21◂ [ a18◂ [ ]{| l |}]] ) 10'(= a2◂ [ a22◂ [ {| l |}]] ) } 3'(= a26◂ [ a18◂ [ ]{| l |}] ) } ⊢ 0(<2)◂2(<7)◂{ 3(<4)◂{ 2'(= a2◂ [ a25◂ [ a18◂ [ ]]] ) 9'(= a2◂ [ a21◂ [ a18◂ [ ]{| l |}]] ) 10'(= a2◂ [ a22◂ [ {| l |}]] ) } 3'(= a26◂ [ a18◂ [ ]{| l |}] ) }
;; rsp=5 , %1727~0(<2)◂2(<7)◂{ 3(<4)◂{ 2'(= a2◂ [ a25◂ [ a18◂ [ ]]] ) 9'(= a2◂ [ a21◂ [ a18◂ [ ]{| l |}]] ) 10'(= a2◂ [ a22◂ [ {| l |}]] ) } 3'(= a26◂ [ a18◂ [ ]{| l |}] ) } %1721~1'(= r ) %1720~0'(= r ) %1715~8'(= a44◂ [ *{ }] ) 
; #24 0(<2)◂2(<7)◂{ 3(<4)◂{ 2'(= a2◂ [ a25◂ [ a18◂ [ ]]] ) 9'(= a2◂ [ a21◂ [ a18◂ [ ]{| l |}]] ) 10'(= a2◂ [ a22◂ [ {| l |}]] ) } 3'(= a26◂ [ a18◂ [ ]{| l |}] ) } ⊢ 0(<2)◂0(<2)◂2(<7)◂{ 3(<4)◂{ 2'(= a2◂ [ a25◂ [ a18◂ [ ]]] ) 9'(= a2◂ [ a21◂ [ a18◂ [ ]{| l |}]] ) 10'(= a2◂ [ a22◂ [ {| l |}]] ) } 3'(= a26◂ [ a18◂ [ ]{| l |}] ) }
;; rsp=5 , %1728~0(<2)◂0(<2)◂2(<7)◂{ 3(<4)◂{ 2'(= a2◂ [ a25◂ [ a18◂ [ ]]] ) 9'(= a2◂ [ a21◂ [ a18◂ [ ]{| l |}]] ) 10'(= a2◂ [ a22◂ [ {| l |}]] ) } 3'(= a26◂ [ a18◂ [ ]{| l |}] ) } %1721~1'(= r ) %1720~0'(= r ) %1715~8'(= a44◂ [ *{ }] ) 
; ∎ 0(<2)◂0(<2)◂2(<7)◂{ 3(<4)◂{ 2'(= a2◂ [ a25◂ [ a18◂ [ ]]] ) 9'(= a2◂ [ a21◂ [ a18◂ [ ]{| l |}]] ) 10'(= a2◂ [ a22◂ [ {| l |}]] ) } 3'(= a26◂ [ a18◂ [ ]{| l |}] ) }
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 8'(= a44◂ [ *{ }] )
	mov rdi,QWORD [rsp-8+8*5]
	C_PUSH_REGS
	mov r8,rdi
	call LB_1876
	C_POP_REGS
; .mov_ptn2 0(<2)◂0(<2)◂2(<7)◂{ 3(<4)◂{ 2'(= a2◂ [ a25◂ [ a18◂ [ ]]] ) 9'(= a2◂ [ a21◂ [ a18◂ [ ]{| l |}]] ) 10'(= a2◂ [ a22◂ [ {| l |}]] ) } 3'(= a26◂ [ a18◂ [ ]{| l |}] ) } ⊢ 2'(= a3◂ [ a44◂ [ a26◂ [ a18◂ [ ]{| l |}]]] )
	mov r13,r8
; .mov_ptn 0(<2)◂0(<2)◂2(<7)◂{ 3(<4)◂{ 0'(= a2◂ [ a25◂ [ a18◂ [ ]]] ) 9'(= a2◂ [ a21◂ [ a18◂ [ ]{| l |}]] ) 10'(= a2◂ [ a22◂ [ {| l |}]] ) } 3'(= a26◂ [ a18◂ [ ]{| l |}] ) } ⊢ 2'(= a3◂ [ a44◂ [ a26◂ [ a18◂ [ ]{| l |}]]] )
	ALC_RCD 2, rax
	mov r14,rax
	ALC_RCD 3, rax
	mov r10,rax
	mov rax,r13
	mov QWORD [r10+8+8*0],rax
	mov rax,QWORD [rsp-8+8*4]
	mov QWORD [r10+8+8*1],rax
	mov rax,QWORD [rsp-8+8*3]
	mov QWORD [r10+8+8*2],rax
	mov rax,r10
	mov BYTE [rax+6],3
	mov QWORD [r14+8+8*0],rax
	mov rax,r9
	mov QWORD [r14+8+8*1],rax
	mov rax,r14
	mov BYTE [rax+6],2
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,40
	jmp LB_2850
LB_2856:
;; ?. 12'(= a44◂ [ a26◂ [ a18◂ [ ]{| l |}]] ) ⊢ 1(<2)◂3'(= a2◂ [ *{ rr{| l |}}] )
	mov QWORD [GBG_VCT+8*0],rdi
	mov r9,QWORD [rdi+8]
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_LN rdi
;; rsp=5 , %1724~3'(= a2◂ [ *{ rr{| l |}}] ) %1723~3(<4)◂{ 2'(= a2◂ [ a25◂ [ a18◂ [ ]]] ) 9'(= a2◂ [ a21◂ [ a18◂ [ ]{| l |}]] ) 10'(= a2◂ [ a22◂ [ {| l |}]] ) } %1721~1'(= r ) %1720~0'(= r ) %1715~8'(= a44◂ [ *{ }] ) 
; #197 3'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 1(<2)◂3'(= a2◂ [ *{ rr{| l |}}] )
;; rsp=5 , %1729~1(<2)◂3'(= a2◂ [ *{ rr{| l |}}] ) %1723~3(<4)◂{ 2'(= a2◂ [ a25◂ [ a18◂ [ ]]] ) 9'(= a2◂ [ a21◂ [ a18◂ [ ]{| l |}]] ) 10'(= a2◂ [ a22◂ [ {| l |}]] ) } %1721~1'(= r ) %1720~0'(= r ) %1715~8'(= a44◂ [ *{ }] ) 
; #24 1(<2)◂3'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 0(<2)◂1(<2)◂3'(= a2◂ [ *{ rr{| l |}}] )
;; rsp=5 , %1730~0(<2)◂1(<2)◂3'(= a2◂ [ *{ rr{| l |}}] ) %1723~3(<4)◂{ 2'(= a2◂ [ a25◂ [ a18◂ [ ]]] ) 9'(= a2◂ [ a21◂ [ a18◂ [ ]{| l |}]] ) 10'(= a2◂ [ a22◂ [ {| l |}]] ) } %1721~1'(= r ) %1720~0'(= r ) %1715~8'(= a44◂ [ *{ }] ) 
; ∎ 0(<2)◂1(<2)◂3'(= a2◂ [ *{ rr{| l |}}] )
; .dlt.ptn 3(<4)◂{ 2'(= a2◂ [ a25◂ [ a18◂ [ ]]] ) 9'(= a2◂ [ a21◂ [ a18◂ [ ]{| l |}]] ) 10'(= a2◂ [ a22◂ [ {| l |}]] ) }
	mov rdi,r8
	C_PUSH_REGS
	mov r8,rdi
	call LB_588
	C_POP_REGS
	mov rdi,QWORD [rsp-8+8*4]
	C_PUSH_REGS
	mov r8,rdi
	call LB_587
	C_POP_REGS
	mov rdi,QWORD [rsp-8+8*3]
	C_PUSH_REGS
	mov r8,rdi
	call LB_586
	C_POP_REGS
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 8'(= a44◂ [ *{ }] )
	mov rdi,QWORD [rsp-8+8*5]
	C_PUSH_REGS
	mov r8,rdi
	call LB_1876
	C_POP_REGS
; .mov_ptn2 0(<2)◂1(<2)◂3'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 2'(= a3◂ [ a44◂ [ a26◂ [ a18◂ [ ]{| l |}]]] )
; .mov_ptn 0(<2)◂1(<2)◂3'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 2'(= a3◂ [ a44◂ [ a26◂ [ a18◂ [ ]{| l |}]]] )
	mov rax,r9
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],1
	mov QWORD [rax+8],rdi
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,40
	jmp LB_2850
LB_2850:
	cmp BYTE [r8+6],0
	jnz LB_2802
	POP_GRM_SCC
	ret
LB_2802:
	RB_GRM
	jmp LB_2861
LB_2860:
	add r14,1 
LB_2861:
	cmp r14,r9
	jge LB_2862
	JZ_SPC BYTE [r13+8+r14], LB_2860
LB_2862
	call GRM_221
	cmp BYTE [r8+6],0
	jnz LB_2865
	jmp LB_2866
LB_2865:
	jmp LB_2863
LB_2866:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a44◂ [ *{ }] ) ⊢ 8'(= a44◂ [ *{ }] )
; .mov_ptn 2'(= a44◂ [ *{ }] ) ⊢ 8'(= a44◂ [ *{ }] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_2864
LB_2863:
	add rsp,0
	jmp LB_2859
LB_2864:
	jmp LB_2868
LB_2867:
	add r14,1 
LB_2868:
	cmp r14,r9
	jge LB_2869
	JZ_SPC BYTE [r13+8+r14], LB_2867
LB_2869
	lea rax,[r14+3]
	cmp rax,r9
	jg LB_2872
	jmp LB_2873
LB_2872:
	mov r8,unt_1
	jmp LB_2870
LB_2873:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],226
	jnz LB_2874
	cmp BYTE [rdi+1],151
	jnz LB_2874
	cmp BYTE [rdi+2],130
	jnz LB_2874
	jmp LB_2875
LB_2874:
	mov r8,unt_1
	jmp LB_2870
LB_2875:
	add r14,3
	jmp LB_2871
LB_2870:
	add rsp,8
	jmp LB_2859
LB_2871:
	jmp LB_2877
LB_2876:
	add r14,1 
LB_2877:
	cmp r14,r9
	jge LB_2878
	JZ_SPC BYTE [r13+8+r14], LB_2876
LB_2878
	call GRM_209
	cmp BYTE [r8+6],0
	jnz LB_2881
	jmp LB_2882
LB_2881:
	jmp LB_2879
LB_2882:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a21◂ [ a18◂ [ ]{| l |}] ) ⊢ 9'(= a21◂ [ a18◂ [ ]{| l |}] )
; .mov_ptn 2'(= a21◂ [ a18◂ [ ]{| l |}] ) ⊢ 9'(= a21◂ [ a18◂ [ ]{| l |}] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_2880
LB_2879:
	add rsp,8
	POP_GRM_FAIL
	ret
LB_2880:
	jmp LB_2884
LB_2883:
	add r14,1 
LB_2884:
	cmp r14,r9
	jge LB_2885
	JZ_SPC BYTE [r13+8+r14], LB_2883
LB_2885
	lea rax,[r14+1]
	cmp rax,r9
	jg LB_2888
	jmp LB_2889
LB_2888:
	mov r8,unt_1
	jmp LB_2886
LB_2889:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],44
	jnz LB_2890
	jmp LB_2891
LB_2890:
	mov r8,unt_1
	jmp LB_2886
LB_2891:
	add r14,1
	jmp LB_2887
LB_2886:
	add rsp,16
	POP_GRM_FAIL
	ret
LB_2887:
	jmp LB_2893
LB_2892:
	add r14,1 
LB_2893:
	cmp r14,r9
	jge LB_2894
	JZ_SPC BYTE [r13+8+r14], LB_2892
LB_2894
	call GRM_206
	cmp BYTE [r8+6],0
	jnz LB_2897
	jmp LB_2898
LB_2897:
	jmp LB_2895
LB_2898:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a17◂ [ a21◂ [ a18◂ [ ]{| l |}]] ) ⊢ 10'(= a17◂ [ a21◂ [ a18◂ [ ]{| l |}]] )
; .mov_ptn 2'(= a17◂ [ a21◂ [ a18◂ [ ]{| l |}]] ) ⊢ 10'(= a17◂ [ a21◂ [ a18◂ [ ]{| l |}]] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_2896
LB_2895:
	add rsp,16
	POP_GRM_FAIL
	ret
LB_2896:
	PUSH_GRM
	jmp LB_2902
LB_2901:
	add r14,1 
LB_2902:
	cmp r14,r9
	jge LB_2903
	JZ_SPC BYTE [r13+8+r14], LB_2901
LB_2903
	lea rax,[r14+4]
	cmp rax,r9
	jg LB_2906
	jmp LB_2907
LB_2906:
	mov r8,unt_1
	jmp LB_2904
LB_2907:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],226
	jnz LB_2908
	cmp BYTE [rdi+1],138
	jnz LB_2908
	cmp BYTE [rdi+2],162
	jnz LB_2908
	cmp BYTE [rdi+3],124
	jnz LB_2908
	jmp LB_2909
LB_2908:
	mov r8,unt_1
	jmp LB_2904
LB_2909:
	add r14,4
	jmp LB_2905
LB_2904:
	add rsp,0
	jmp LB_2900
LB_2905:
	mov QWORD [rsp+8*0],r14
	mov r13,QWORD [rsp+16+8*0]
	mov r14,QWORD [rsp+8*0]
	jmp LB_2910
LB_2910
;; rsp=0 , %1737~1'(= r ) %1736~0'(= r ) 
; #25 { } ⊢ 1(<2)◂{ }
;; rsp=0 , %1738~1(<2)◂{ } %1737~1'(= r ) %1736~0'(= r ) 
; #198 1(<2)◂{ } ⊢ 0(<2)◂1(<2)◂{ }
;; rsp=0 , %1739~0(<2)◂1(<2)◂{ } %1737~1'(= r ) %1736~0'(= r ) 
; #24 0(<2)◂1(<2)◂{ } ⊢ 0(<2)◂0(<2)◂1(<2)◂{ }
;; rsp=0 , %1740~0(<2)◂0(<2)◂1(<2)◂{ } %1737~1'(= r ) %1736~0'(= r ) 
; ∎ 0(<2)◂0(<2)◂1(<2)◂{ }
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂0(<2)◂1(<2)◂{ } ⊢ 2'(= a3◂ [ a44◂ [ a3◂ [ *{ a17◂ [ a22◂ [ {| l |}]]a26◂ [ a18◂ [ ]{| l |}]}]]] )
; .mov_ptn 0(<2)◂0(<2)◂1(<2)◂{ } ⊢ 2'(= a3◂ [ a44◂ [ a3◂ [ *{ a17◂ [ a22◂ [ {| l |}]]a26◂ [ a18◂ [ ]{| l |}]}]]] )
	mov rax,unt 
	mov rax,unt_1
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	jmp LB_2911
LB_2911:
	cmp BYTE [r8+6],0
	jnz LB_2900
	POP_GRM_SCC
	jmp LB_2899
LB_2900:
	RB_GRM
	jmp LB_2914
LB_2913:
	add r14,1 
LB_2914:
	cmp r14,r9
	jge LB_2915
	JZ_SPC BYTE [r13+8+r14], LB_2913
LB_2915
	lea rax,[r14+3]
	cmp rax,r9
	jg LB_2918
	jmp LB_2919
LB_2918:
	mov r8,unt_1
	jmp LB_2916
LB_2919:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],226
	jnz LB_2920
	cmp BYTE [rdi+1],138
	jnz LB_2920
	cmp BYTE [rdi+2],162
	jnz LB_2920
	jmp LB_2921
LB_2920:
	mov r8,unt_1
	jmp LB_2916
LB_2921:
	add r14,3
	jmp LB_2917
LB_2916:
	add rsp,0
	jmp LB_2912
LB_2917:
	jmp LB_2923
LB_2922:
	add r14,1 
LB_2923:
	cmp r14,r9
	jge LB_2924
	JZ_SPC BYTE [r13+8+r14], LB_2922
LB_2924
	call GRM_210
	cmp BYTE [r8+6],0
	jnz LB_2927
	jmp LB_2928
LB_2927:
	jmp LB_2925
LB_2928:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a17◂ [ a22◂ [ {| l |}]] ) ⊢ 8'(= a17◂ [ a22◂ [ {| l |}]] )
; .mov_ptn 2'(= a17◂ [ a22◂ [ {| l |}]] ) ⊢ 8'(= a17◂ [ a22◂ [ {| l |}]] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_2926
LB_2925:
	add rsp,0
	jmp LB_2912
LB_2926:
	jmp LB_2930
LB_2929:
	add r14,1 
LB_2930:
	cmp r14,r9
	jge LB_2931
	JZ_SPC BYTE [r13+8+r14], LB_2929
LB_2931
	call GRM_239
	cmp BYTE [r8+6],0
	jnz LB_2934
	jmp LB_2935
LB_2934:
	jmp LB_2932
LB_2935:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a44◂ [ a26◂ [ a18◂ [ ]{| l |}]] ) ⊢ 9'(= a44◂ [ a26◂ [ a18◂ [ ]{| l |}]] )
; .mov_ptn 2'(= a44◂ [ a26◂ [ a18◂ [ ]{| l |}]] ) ⊢ 9'(= a44◂ [ a26◂ [ a18◂ [ ]{| l |}]] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_2933
LB_2932:
	add rsp,8
	jmp LB_2912
LB_2933:
	mov QWORD [rsp+8*2],r14
	mov r13,QWORD [rsp+16+8*2]
	mov r14,QWORD [rsp+8*2]
	jmp LB_2936
LB_2936
;; rsp=2 , %1744~1'(= r ) %1743~0'(= r ) %1742~9'(= a44◂ [ a26◂ [ a18◂ [ ]{| l |}]] ) %1741~8'(= a17◂ [ a22◂ [ {| l |}]] ) 
;; ? 9'(= a44◂ [ a26◂ [ a18◂ [ ]{| l |}]] ) ⊢ 0(<2)◂2'(= a26◂ [ a18◂ [ ]{| l |}] )
	mov rdi,QWORD [rsp-8+8*1]
	cmp BYTE [rdi+6],0
	jnz LB_2939
	jmp LB_2940
LB_2939:
	jmp LB_2938
LB_2940:
	mov QWORD [GBG_VCT+8*0],rdi
	mov r8,QWORD [rdi+8]
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_LN rdi
;; rsp=2 , %1746~2'(= a26◂ [ a18◂ [ ]{| l |}] ) %1744~1'(= r ) %1743~0'(= r ) %1741~8'(= a17◂ [ a22◂ [ {| l |}]] ) 
; #24 { 8'(= a17◂ [ a22◂ [ {| l |}]] ) 2'(= a26◂ [ a18◂ [ ]{| l |}] ) } ⊢ 0(<2)◂{ 8'(= a17◂ [ a22◂ [ {| l |}]] ) 2'(= a26◂ [ a18◂ [ ]{| l |}] ) }
;; rsp=2 , %1747~0(<2)◂{ 8'(= a17◂ [ a22◂ [ {| l |}]] ) 2'(= a26◂ [ a18◂ [ ]{| l |}] ) } %1744~1'(= r ) %1743~0'(= r ) 
; #198 0(<2)◂{ 8'(= a17◂ [ a22◂ [ {| l |}]] ) 2'(= a26◂ [ a18◂ [ ]{| l |}] ) } ⊢ 0(<2)◂0(<2)◂{ 8'(= a17◂ [ a22◂ [ {| l |}]] ) 2'(= a26◂ [ a18◂ [ ]{| l |}] ) }
;; rsp=2 , %1748~0(<2)◂0(<2)◂{ 8'(= a17◂ [ a22◂ [ {| l |}]] ) 2'(= a26◂ [ a18◂ [ ]{| l |}] ) } %1744~1'(= r ) %1743~0'(= r ) 
; #24 0(<2)◂0(<2)◂{ 8'(= a17◂ [ a22◂ [ {| l |}]] ) 2'(= a26◂ [ a18◂ [ ]{| l |}] ) } ⊢ 0(<2)◂0(<2)◂0(<2)◂{ 8'(= a17◂ [ a22◂ [ {| l |}]] ) 2'(= a26◂ [ a18◂ [ ]{| l |}] ) }
;; rsp=2 , %1749~0(<2)◂0(<2)◂0(<2)◂{ 8'(= a17◂ [ a22◂ [ {| l |}]] ) 2'(= a26◂ [ a18◂ [ ]{| l |}] ) } %1744~1'(= r ) %1743~0'(= r ) 
; ∎ 0(<2)◂0(<2)◂0(<2)◂{ 8'(= a17◂ [ a22◂ [ {| l |}]] ) 2'(= a26◂ [ a18◂ [ ]{| l |}] ) }
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂0(<2)◂0(<2)◂{ 8'(= a17◂ [ a22◂ [ {| l |}]] ) 2'(= a26◂ [ a18◂ [ ]{| l |}] ) } ⊢ 2'(= a3◂ [ a44◂ [ a3◂ [ *{ a17◂ [ a22◂ [ {| l |}]]a26◂ [ a18◂ [ ]{| l |}]}]]] )
	mov r13,r8
; .mov_ptn 0(<2)◂0(<2)◂0(<2)◂{ 8'(= a17◂ [ a22◂ [ {| l |}]] ) 0'(= a26◂ [ a18◂ [ ]{| l |}] ) } ⊢ 2'(= a3◂ [ a44◂ [ a3◂ [ *{ a17◂ [ a22◂ [ {| l |}]]a26◂ [ a18◂ [ ]{| l |}]}]]] )
	ALC_RCD 2, rax
	mov r14,rax
	mov rax,QWORD [rsp-8+8*2]
	mov QWORD [r14+8+8*0],rax
	mov rax,r13
	mov QWORD [r14+8+8*1],rax
	mov rax,r14
	mov BYTE [rax+6],0
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,16
	jmp LB_2937
LB_2938:
;; ?. 9'(= a44◂ [ a26◂ [ a18◂ [ ]{| l |}]] ) ⊢ 1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] )
	mov QWORD [GBG_VCT+8*0],rdi
	mov r8,QWORD [rdi+8]
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_LN rdi
;; rsp=2 , %1745~2'(= a2◂ [ *{ rr{| l |}}] ) %1744~1'(= r ) %1743~0'(= r ) %1741~8'(= a17◂ [ a22◂ [ {| l |}]] ) 
; #197 2'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] )
;; rsp=2 , %1750~1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] ) %1744~1'(= r ) %1743~0'(= r ) %1741~8'(= a17◂ [ a22◂ [ {| l |}]] ) 
; #24 1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 0(<2)◂1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] )
;; rsp=2 , %1751~0(<2)◂1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] ) %1744~1'(= r ) %1743~0'(= r ) %1741~8'(= a17◂ [ a22◂ [ {| l |}]] ) 
; ∎ 0(<2)◂1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] )
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 8'(= a17◂ [ a22◂ [ {| l |}]] )
	mov rdi,QWORD [rsp-8+8*2]
	C_PUSH_REGS
	mov r8,rdi
	call LB_791
	C_POP_REGS
; .mov_ptn2 0(<2)◂1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 2'(= a3◂ [ a44◂ [ a3◂ [ *{ a17◂ [ a22◂ [ {| l |}]]a26◂ [ a18◂ [ ]{| l |}]}]]] )
	mov r13,r8
; .mov_ptn 0(<2)◂1(<2)◂0'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 2'(= a3◂ [ a44◂ [ a3◂ [ *{ a17◂ [ a22◂ [ {| l |}]]a26◂ [ a18◂ [ ]{| l |}]}]]] )
	mov rax,r13
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],1
	mov QWORD [rax+8],rdi
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,16
	jmp LB_2937
LB_2937:
	cmp BYTE [r8+6],0
	jnz LB_2912
	POP_GRM_SCC
	jmp LB_2899
LB_2912:
	POP_GRM_FAIL 
	jmp LB_2899
LB_2899:
	cmp BYTE [r8+6],0
	jnz LB_2941
	jmp LB_2942
LB_2941:
	add rsp,24
	POP_GRM_FAIL
	ret
LB_2942:
	mov QWORD [rsp+8*3],r14
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi 
; .mov_ptn2 2'(= a44◂ [ a3◂ [ *{ a17◂ [ a22◂ [ {| l |}]]a26◂ [ a18◂ [ ]{| l |}]}]] ) ⊢ 3'(= a44◂ [ a3◂ [ *{ a17◂ [ a22◂ [ {| l |}]]a26◂ [ a18◂ [ ]{| l |}]}]] )
	mov r10,r9
; .mov_ptn 2'(= a44◂ [ a3◂ [ *{ a17◂ [ a22◂ [ {| l |}]]a26◂ [ a18◂ [ ]{| l |}]}]] ) ⊢ 3'(= a44◂ [ a3◂ [ *{ a17◂ [ a22◂ [ {| l |}]]a26◂ [ a18◂ [ ]{| l |}]}]] )
	mov rax,r8
	mov r9,rax
	mov r13,QWORD [rsp+16+8*3]
	mov r14,QWORD [rsp+8*3]
	jmp LB_2943
LB_2943
;; rsp=3 , %1752~3'(= a44◂ [ a3◂ [ *{ a17◂ [ a22◂ [ {| l |}]]a26◂ [ a18◂ [ ]{| l |}]}]] ) %1735~1'(= r ) %1734~0'(= r ) %1733~10'(= a17◂ [ a21◂ [ a18◂ [ ]{| l |}]] ) %1732~9'(= a21◂ [ a18◂ [ ]{| l |}] ) %1731~8'(= a44◂ [ *{ }] ) 
;; ? 3'(= a44◂ [ a3◂ [ *{ a17◂ [ a22◂ [ {| l |}]]a26◂ [ a18◂ [ ]{| l |}]}]] ) ⊢ 0(<2)◂2'(= a3◂ [ *{ a17◂ [ a22◂ [ {| l |}]]a26◂ [ a18◂ [ ]{| l |}]}] )
	mov rdi,r9
	cmp BYTE [rdi+6],0
	jnz LB_2946
	jmp LB_2947
LB_2946:
	jmp LB_2945
LB_2947:
	mov QWORD [GBG_VCT+8*0],rdi
	mov r8,QWORD [rdi+8]
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_LN rdi
;; rsp=3 , %1754~2'(= a3◂ [ *{ a17◂ [ a22◂ [ {| l |}]]a26◂ [ a18◂ [ ]{| l |}]}] ) %1735~1'(= r ) %1734~0'(= r ) %1733~10'(= a17◂ [ a21◂ [ a18◂ [ ]{| l |}]] ) %1732~9'(= a21◂ [ a18◂ [ ]{| l |}] ) %1731~8'(= a44◂ [ *{ }] ) 
;; ? 2'(= a3◂ [ *{ a17◂ [ a22◂ [ {| l |}]]a26◂ [ a18◂ [ ]{| l |}]}] ) ⊢ 0(<2)◂{ 3'(= a17◂ [ a22◂ [ {| l |}]] ) 4'(= a26◂ [ a18◂ [ ]{| l |}] ) }
	mov rdi,r8
	cmp BYTE [rdi+6],0
	jnz LB_2949
	jmp LB_2950
LB_2949:
	jmp LB_2948
LB_2950:
	mov r9, QWORD [r8+8]
	mov r10, QWORD [r8+16]
	mov QWORD [GBG_VCT+8*0],r8
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_RCD 2,rdi
;; rsp=3 , %1756~4'(= a26◂ [ a18◂ [ ]{| l |}] ) %1755~3'(= a17◂ [ a22◂ [ {| l |}]] ) %1735~1'(= r ) %1734~0'(= r ) %1733~10'(= a17◂ [ a21◂ [ a18◂ [ ]{| l |}]] ) %1732~9'(= a21◂ [ a18◂ [ ]{| l |}] ) %1731~8'(= a44◂ [ *{ }] ) 
; #126 { 9'(= a21◂ [ a18◂ [ ]{| l |}] ) 10'(= a17◂ [ a21◂ [ a18◂ [ ]{| l |}]] ) 3'(= a17◂ [ a22◂ [ {| l |}]] ) } ⊢ 1(<4)◂{ 9'(= a21◂ [ a18◂ [ ]{| l |}] ) 10'(= a17◂ [ a21◂ [ a18◂ [ ]{| l |}]] ) 3'(= a17◂ [ a22◂ [ {| l |}]] ) }
;; rsp=3 , %1757~1(<4)◂{ 9'(= a21◂ [ a18◂ [ ]{| l |}] ) 10'(= a17◂ [ a21◂ [ a18◂ [ ]{| l |}]] ) 3'(= a17◂ [ a22◂ [ {| l |}]] ) } %1756~4'(= a26◂ [ a18◂ [ ]{| l |}] ) %1735~1'(= r ) %1734~0'(= r ) %1731~8'(= a44◂ [ *{ }] ) 
; #134 { 1(<4)◂{ 9'(= a21◂ [ a18◂ [ ]{| l |}] ) 10'(= a17◂ [ a21◂ [ a18◂ [ ]{| l |}]] ) 3'(= a17◂ [ a22◂ [ {| l |}]] ) } 4'(= a26◂ [ a18◂ [ ]{| l |}] ) } ⊢ 2(<7)◂{ 1(<4)◂{ 9'(= a21◂ [ a18◂ [ ]{| l |}] ) 10'(= a17◂ [ a21◂ [ a18◂ [ ]{| l |}]] ) 3'(= a17◂ [ a22◂ [ {| l |}]] ) } 4'(= a26◂ [ a18◂ [ ]{| l |}] ) }
;; rsp=3 , %1758~2(<7)◂{ 1(<4)◂{ 9'(= a21◂ [ a18◂ [ ]{| l |}] ) 10'(= a17◂ [ a21◂ [ a18◂ [ ]{| l |}]] ) 3'(= a17◂ [ a22◂ [ {| l |}]] ) } 4'(= a26◂ [ a18◂ [ ]{| l |}] ) } %1735~1'(= r ) %1734~0'(= r ) %1731~8'(= a44◂ [ *{ }] ) 
; #198 2(<7)◂{ 1(<4)◂{ 9'(= a21◂ [ a18◂ [ ]{| l |}] ) 10'(= a17◂ [ a21◂ [ a18◂ [ ]{| l |}]] ) 3'(= a17◂ [ a22◂ [ {| l |}]] ) } 4'(= a26◂ [ a18◂ [ ]{| l |}] ) } ⊢ 0(<2)◂2(<7)◂{ 1(<4)◂{ 9'(= a21◂ [ a18◂ [ ]{| l |}] ) 10'(= a17◂ [ a21◂ [ a18◂ [ ]{| l |}]] ) 3'(= a17◂ [ a22◂ [ {| l |}]] ) } 4'(= a26◂ [ a18◂ [ ]{| l |}] ) }
;; rsp=3 , %1759~0(<2)◂2(<7)◂{ 1(<4)◂{ 9'(= a21◂ [ a18◂ [ ]{| l |}] ) 10'(= a17◂ [ a21◂ [ a18◂ [ ]{| l |}]] ) 3'(= a17◂ [ a22◂ [ {| l |}]] ) } 4'(= a26◂ [ a18◂ [ ]{| l |}] ) } %1735~1'(= r ) %1734~0'(= r ) %1731~8'(= a44◂ [ *{ }] ) 
; #24 0(<2)◂2(<7)◂{ 1(<4)◂{ 9'(= a21◂ [ a18◂ [ ]{| l |}] ) 10'(= a17◂ [ a21◂ [ a18◂ [ ]{| l |}]] ) 3'(= a17◂ [ a22◂ [ {| l |}]] ) } 4'(= a26◂ [ a18◂ [ ]{| l |}] ) } ⊢ 0(<2)◂0(<2)◂2(<7)◂{ 1(<4)◂{ 9'(= a21◂ [ a18◂ [ ]{| l |}] ) 10'(= a17◂ [ a21◂ [ a18◂ [ ]{| l |}]] ) 3'(= a17◂ [ a22◂ [ {| l |}]] ) } 4'(= a26◂ [ a18◂ [ ]{| l |}] ) }
;; rsp=3 , %1760~0(<2)◂0(<2)◂2(<7)◂{ 1(<4)◂{ 9'(= a21◂ [ a18◂ [ ]{| l |}] ) 10'(= a17◂ [ a21◂ [ a18◂ [ ]{| l |}]] ) 3'(= a17◂ [ a22◂ [ {| l |}]] ) } 4'(= a26◂ [ a18◂ [ ]{| l |}] ) } %1735~1'(= r ) %1734~0'(= r ) %1731~8'(= a44◂ [ *{ }] ) 
; ∎ 0(<2)◂0(<2)◂2(<7)◂{ 1(<4)◂{ 9'(= a21◂ [ a18◂ [ ]{| l |}] ) 10'(= a17◂ [ a21◂ [ a18◂ [ ]{| l |}]] ) 3'(= a17◂ [ a22◂ [ {| l |}]] ) } 4'(= a26◂ [ a18◂ [ ]{| l |}] ) }
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 8'(= a44◂ [ *{ }] )
	mov rdi,QWORD [rsp-8+8*3]
	C_PUSH_REGS
	mov r8,rdi
	call LB_1876
	C_POP_REGS
; .mov_ptn2 0(<2)◂0(<2)◂2(<7)◂{ 1(<4)◂{ 9'(= a21◂ [ a18◂ [ ]{| l |}] ) 10'(= a17◂ [ a21◂ [ a18◂ [ ]{| l |}]] ) 3'(= a17◂ [ a22◂ [ {| l |}]] ) } 4'(= a26◂ [ a18◂ [ ]{| l |}] ) } ⊢ 2'(= a3◂ [ a44◂ [ a26◂ [ a18◂ [ ]{| l |}]]] )
; .mov_ptn 0(<2)◂0(<2)◂2(<7)◂{ 1(<4)◂{ 9'(= a21◂ [ a18◂ [ ]{| l |}] ) 10'(= a17◂ [ a21◂ [ a18◂ [ ]{| l |}]] ) 3'(= a17◂ [ a22◂ [ {| l |}]] ) } 4'(= a26◂ [ a18◂ [ ]{| l |}] ) } ⊢ 2'(= a3◂ [ a44◂ [ a26◂ [ a18◂ [ ]{| l |}]]] )
	ALC_RCD 2, rax
	mov r13,rax
	ALC_RCD 3, rax
	mov r14,rax
	mov rax,QWORD [rsp-8+8*2]
	mov QWORD [r14+8+8*0],rax
	mov rax,QWORD [rsp-8+8*1]
	mov QWORD [r14+8+8*1],rax
	mov rax,r9
	mov QWORD [r14+8+8*2],rax
	mov rax,r14
	mov BYTE [rax+6],1
	mov QWORD [r13+8+8*0],rax
	mov rax,r10
	mov QWORD [r13+8+8*1],rax
	mov rax,r13
	mov BYTE [rax+6],2
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,24
	jmp LB_2944
LB_2948:
;; ?. 2'(= a3◂ [ *{ a17◂ [ a22◂ [ {| l |}]]a26◂ [ a18◂ [ ]{| l |}]}] ) ⊢ 1(<2)◂{ }
;; rsp=3 , %1735~1'(= r ) %1734~0'(= r ) %1733~10'(= a17◂ [ a21◂ [ a18◂ [ ]{| l |}]] ) %1732~9'(= a21◂ [ a18◂ [ ]{| l |}] ) %1731~8'(= a44◂ [ *{ }] ) 
; #135 { 9'(= a21◂ [ a18◂ [ ]{| l |}] ) 10'(= a17◂ [ a21◂ [ a18◂ [ ]{| l |}]] ) } ⊢ 1(<7)◂{ 9'(= a21◂ [ a18◂ [ ]{| l |}] ) 10'(= a17◂ [ a21◂ [ a18◂ [ ]{| l |}]] ) }
;; rsp=3 , %1761~1(<7)◂{ 9'(= a21◂ [ a18◂ [ ]{| l |}] ) 10'(= a17◂ [ a21◂ [ a18◂ [ ]{| l |}]] ) } %1735~1'(= r ) %1734~0'(= r ) %1731~8'(= a44◂ [ *{ }] ) 
; #198 1(<7)◂{ 9'(= a21◂ [ a18◂ [ ]{| l |}] ) 10'(= a17◂ [ a21◂ [ a18◂ [ ]{| l |}]] ) } ⊢ 0(<2)◂1(<7)◂{ 9'(= a21◂ [ a18◂ [ ]{| l |}] ) 10'(= a17◂ [ a21◂ [ a18◂ [ ]{| l |}]] ) }
;; rsp=3 , %1762~0(<2)◂1(<7)◂{ 9'(= a21◂ [ a18◂ [ ]{| l |}] ) 10'(= a17◂ [ a21◂ [ a18◂ [ ]{| l |}]] ) } %1735~1'(= r ) %1734~0'(= r ) %1731~8'(= a44◂ [ *{ }] ) 
; #24 0(<2)◂1(<7)◂{ 9'(= a21◂ [ a18◂ [ ]{| l |}] ) 10'(= a17◂ [ a21◂ [ a18◂ [ ]{| l |}]] ) } ⊢ 0(<2)◂0(<2)◂1(<7)◂{ 9'(= a21◂ [ a18◂ [ ]{| l |}] ) 10'(= a17◂ [ a21◂ [ a18◂ [ ]{| l |}]] ) }
;; rsp=3 , %1763~0(<2)◂0(<2)◂1(<7)◂{ 9'(= a21◂ [ a18◂ [ ]{| l |}] ) 10'(= a17◂ [ a21◂ [ a18◂ [ ]{| l |}]] ) } %1735~1'(= r ) %1734~0'(= r ) %1731~8'(= a44◂ [ *{ }] ) 
; ∎ 0(<2)◂0(<2)◂1(<7)◂{ 9'(= a21◂ [ a18◂ [ ]{| l |}] ) 10'(= a17◂ [ a21◂ [ a18◂ [ ]{| l |}]] ) }
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 8'(= a44◂ [ *{ }] )
	mov rdi,QWORD [rsp-8+8*3]
	C_PUSH_REGS
	mov r8,rdi
	call LB_1876
	C_POP_REGS
; .mov_ptn2 0(<2)◂0(<2)◂1(<7)◂{ 9'(= a21◂ [ a18◂ [ ]{| l |}] ) 10'(= a17◂ [ a21◂ [ a18◂ [ ]{| l |}]] ) } ⊢ 2'(= a3◂ [ a44◂ [ a26◂ [ a18◂ [ ]{| l |}]]] )
; .mov_ptn 0(<2)◂0(<2)◂1(<7)◂{ 9'(= a21◂ [ a18◂ [ ]{| l |}] ) 10'(= a17◂ [ a21◂ [ a18◂ [ ]{| l |}]] ) } ⊢ 2'(= a3◂ [ a44◂ [ a26◂ [ a18◂ [ ]{| l |}]]] )
	ALC_RCD 2, rax
	mov r13,rax
	mov rax,QWORD [rsp-8+8*2]
	mov QWORD [r13+8+8*0],rax
	mov rax,QWORD [rsp-8+8*1]
	mov QWORD [r13+8+8*1],rax
	mov rax,r13
	mov BYTE [rax+6],1
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,24
	jmp LB_2944
LB_2945:
;; ?. 3'(= a44◂ [ a3◂ [ *{ a17◂ [ a22◂ [ {| l |}]]a26◂ [ a18◂ [ ]{| l |}]}]] ) ⊢ 1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] )
	mov QWORD [GBG_VCT+8*0],rdi
	mov r8,QWORD [rdi+8]
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_LN rdi
;; rsp=3 , %1753~2'(= a2◂ [ *{ rr{| l |}}] ) %1735~1'(= r ) %1734~0'(= r ) %1733~10'(= a17◂ [ a21◂ [ a18◂ [ ]{| l |}]] ) %1732~9'(= a21◂ [ a18◂ [ ]{| l |}] ) %1731~8'(= a44◂ [ *{ }] ) 
; #197 2'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] )
;; rsp=3 , %1764~1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] ) %1735~1'(= r ) %1734~0'(= r ) %1733~10'(= a17◂ [ a21◂ [ a18◂ [ ]{| l |}]] ) %1732~9'(= a21◂ [ a18◂ [ ]{| l |}] ) %1731~8'(= a44◂ [ *{ }] ) 
; #24 1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 0(<2)◂1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] )
;; rsp=3 , %1765~0(<2)◂1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] ) %1735~1'(= r ) %1734~0'(= r ) %1733~10'(= a17◂ [ a21◂ [ a18◂ [ ]{| l |}]] ) %1732~9'(= a21◂ [ a18◂ [ ]{| l |}] ) %1731~8'(= a44◂ [ *{ }] ) 
; ∎ 0(<2)◂1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] )
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 10'(= a17◂ [ a21◂ [ a18◂ [ ]{| l |}]] )
	mov rdi,QWORD [rsp-8+8*1]
	C_PUSH_REGS
	mov r8,rdi
	call LB_534
	C_POP_REGS
; .dlt.ptn 9'(= a21◂ [ a18◂ [ ]{| l |}] )
	mov rdi,QWORD [rsp-8+8*2]
	C_PUSH_REGS
	mov r8,rdi
	call LB_540
	C_POP_REGS
; .dlt.ptn 8'(= a44◂ [ *{ }] )
	mov rdi,QWORD [rsp-8+8*3]
	C_PUSH_REGS
	mov r8,rdi
	call LB_1876
	C_POP_REGS
; .mov_ptn2 0(<2)◂1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 2'(= a3◂ [ a44◂ [ a26◂ [ a18◂ [ ]{| l |}]]] )
	mov r13,r8
; .mov_ptn 0(<2)◂1(<2)◂0'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 2'(= a3◂ [ a44◂ [ a26◂ [ a18◂ [ ]{| l |}]]] )
	mov rax,r13
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],1
	mov QWORD [rax+8],rdi
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,24
	jmp LB_2944
LB_2944:
	cmp BYTE [r8+6],0
	jnz LB_2859
	POP_GRM_SCC
	ret
LB_2859:
	RB_GRM
	jmp LB_2953
LB_2952:
	add r14,1 
LB_2953:
	cmp r14,r9
	jge LB_2954
	JZ_SPC BYTE [r13+8+r14], LB_2952
LB_2954
	call GRM_221
	cmp BYTE [r8+6],0
	jnz LB_2957
	jmp LB_2958
LB_2957:
	jmp LB_2955
LB_2958:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a44◂ [ *{ }] ) ⊢ 8'(= a44◂ [ *{ }] )
; .mov_ptn 2'(= a44◂ [ *{ }] ) ⊢ 8'(= a44◂ [ *{ }] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_2956
LB_2955:
	add rsp,0
	jmp LB_2951
LB_2956:
	jmp LB_2960
LB_2959:
	add r14,1 
LB_2960:
	cmp r14,r9
	jge LB_2961
	JZ_SPC BYTE [r13+8+r14], LB_2959
LB_2961
	lea rax,[r14+2]
	cmp rax,r9
	jg LB_2964
	jmp LB_2965
LB_2964:
	mov r8,unt_1
	jmp LB_2962
LB_2965:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],194
	jnz LB_2966
	cmp BYTE [rdi+1],187
	jnz LB_2966
	jmp LB_2967
LB_2966:
	mov r8,unt_1
	jmp LB_2962
LB_2967:
	add r14,2
	jmp LB_2963
LB_2962:
	add rsp,8
	jmp LB_2951
LB_2963:
	jmp LB_2969
LB_2968:
	add r14,1 
LB_2969:
	cmp r14,r9
	jge LB_2970
	JZ_SPC BYTE [r13+8+r14], LB_2968
LB_2970
	call GRM_237
	cmp BYTE [r8+6],0
	jnz LB_2973
	jmp LB_2974
LB_2973:
	jmp LB_2971
LB_2974:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a28◂ [ a18◂ [ ]{| l |}] ) ⊢ 9'(= a28◂ [ a18◂ [ ]{| l |}] )
; .mov_ptn 2'(= a28◂ [ a18◂ [ ]{| l |}] ) ⊢ 9'(= a28◂ [ a18◂ [ ]{| l |}] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_2972
LB_2971:
	add rsp,8
	POP_GRM_FAIL
	ret
LB_2972:
	jmp LB_2976
LB_2975:
	add r14,1 
LB_2976:
	cmp r14,r9
	jge LB_2977
	JZ_SPC BYTE [r13+8+r14], LB_2975
LB_2977
	call GRM_239
	cmp BYTE [r8+6],0
	jnz LB_2980
	jmp LB_2981
LB_2980:
	jmp LB_2978
LB_2981:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a44◂ [ a26◂ [ a18◂ [ ]{| l |}]] ) ⊢ 10'(= a44◂ [ a26◂ [ a18◂ [ ]{| l |}]] )
; .mov_ptn 2'(= a44◂ [ a26◂ [ a18◂ [ ]{| l |}]] ) ⊢ 10'(= a44◂ [ a26◂ [ a18◂ [ ]{| l |}]] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_2979
LB_2978:
	add rsp,16
	POP_GRM_FAIL
	ret
LB_2979:
	mov QWORD [rsp+8*3],r14
	mov r13,QWORD [rsp+16+8*3]
	mov r14,QWORD [rsp+8*3]
	jmp LB_2982
LB_2982
;; rsp=3 , %1770~1'(= r ) %1769~0'(= r ) %1768~10'(= a44◂ [ a26◂ [ a18◂ [ ]{| l |}]] ) %1767~9'(= a28◂ [ a18◂ [ ]{| l |}] ) %1766~8'(= a44◂ [ *{ }] ) 
;; ? 10'(= a44◂ [ a26◂ [ a18◂ [ ]{| l |}]] ) ⊢ 0(<2)◂2'(= a26◂ [ a18◂ [ ]{| l |}] )
	mov rdi,QWORD [rsp-8+8*1]
	cmp BYTE [rdi+6],0
	jnz LB_2985
	jmp LB_2986
LB_2985:
	jmp LB_2984
LB_2986:
	mov QWORD [GBG_VCT+8*0],rdi
	mov r8,QWORD [rdi+8]
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_LN rdi
;; rsp=3 , %1772~2'(= a26◂ [ a18◂ [ ]{| l |}] ) %1770~1'(= r ) %1769~0'(= r ) %1767~9'(= a28◂ [ a18◂ [ ]{| l |}] ) %1766~8'(= a44◂ [ *{ }] ) 
;; ?; 9'(= a28◂ [ a18◂ [ ]{| l |}] ) ⊢ 2(<4)◂{ 3'(= a20◂ [ a18◂ [ ]] ) 4'(= a17◂ [ a21◂ [ a18◂ [ ]{| l |}]] ) 5'(= a17◂ [ a22◂ [ {| l |}]] ) }
	mov rdi,QWORD [rsp-8+8*2]
	cmp BYTE [rdi+6],2
	jnz LB_2988
	jmp LB_2989
LB_2988:
	jmp LB_2987
LB_2989:
	mov rdi,QWORD [rsp-8+8*2]
	mov r9, QWORD [rdi+8]
	mov rdi,QWORD [rsp-8+8*2]
	mov r10, QWORD [rdi+16]
	mov rdi,QWORD [rsp-8+8*2]
	mov r11, QWORD [rdi+24]
	MOV_RAX QWORD [GBG_VCT+8*0],QWORD [rsp-8+8*2]
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_RCD 3,rdi
;; rsp=3 , %1775~5'(= a17◂ [ a22◂ [ {| l |}]] ) %1774~4'(= a17◂ [ a21◂ [ a18◂ [ ]{| l |}]] ) %1773~3'(= a20◂ [ a18◂ [ ]] ) %1772~2'(= a26◂ [ a18◂ [ ]{| l |}] ) %1770~1'(= r ) %1769~0'(= r ) %1766~8'(= a44◂ [ *{ }] ) 
; #97 3'(= a20◂ [ a18◂ [ ]] ) ⊢ 0(<2)◂3'(= a20◂ [ a18◂ [ ]] )
;; rsp=3 , %1776~0(<2)◂3'(= a20◂ [ a18◂ [ ]] ) %1775~5'(= a17◂ [ a22◂ [ {| l |}]] ) %1774~4'(= a17◂ [ a21◂ [ a18◂ [ ]{| l |}]] ) %1772~2'(= a26◂ [ a18◂ [ ]{| l |}] ) %1770~1'(= r ) %1769~0'(= r ) %1766~8'(= a44◂ [ *{ }] ) 
; #83 0(<2)◂3'(= a20◂ [ a18◂ [ ]] ) ⊢ 1(<2)◂0(<2)◂3'(= a20◂ [ a18◂ [ ]] )
;; rsp=3 , %1777~1(<2)◂0(<2)◂3'(= a20◂ [ a18◂ [ ]] ) %1775~5'(= a17◂ [ a22◂ [ {| l |}]] ) %1774~4'(= a17◂ [ a21◂ [ a18◂ [ ]{| l |}]] ) %1772~2'(= a26◂ [ a18◂ [ ]{| l |}] ) %1770~1'(= r ) %1769~0'(= r ) %1766~8'(= a44◂ [ *{ }] ) 
; #22 { } ⊢ 1(<2)◂{ }
;; rsp=3 , %1778~1(<2)◂{ } %1777~1(<2)◂0(<2)◂3'(= a20◂ [ a18◂ [ ]] ) %1775~5'(= a17◂ [ a22◂ [ {| l |}]] ) %1774~4'(= a17◂ [ a21◂ [ a18◂ [ ]{| l |}]] ) %1772~2'(= a26◂ [ a18◂ [ ]{| l |}] ) %1770~1'(= r ) %1769~0'(= r ) %1766~8'(= a44◂ [ *{ }] ) 
; #23 { 5'(= a17◂ [ a22◂ [ {| l |}]] ) 1(<2)◂{ } } ⊢ 0(<2)◂{ 5'(= a17◂ [ a22◂ [ {| l |}]] ) 1(<2)◂{ } }
;; rsp=3 , %1779~0(<2)◂{ 5'(= a17◂ [ a22◂ [ {| l |}]] ) 1(<2)◂{ } } %1777~1(<2)◂0(<2)◂3'(= a20◂ [ a18◂ [ ]] ) %1774~4'(= a17◂ [ a21◂ [ a18◂ [ ]{| l |}]] ) %1772~2'(= a26◂ [ a18◂ [ ]{| l |}] ) %1770~1'(= r ) %1769~0'(= r ) %1766~8'(= a44◂ [ *{ }] ) 
; #128 { 0(<2)◂{ 5'(= a17◂ [ a22◂ [ {| l |}]] ) 1(<2)◂{ } } 2'(= a26◂ [ a18◂ [ ]{| l |}] ) } ⊢ 1(<2)◂{ 0(<2)◂{ 5'(= a17◂ [ a22◂ [ {| l |}]] ) 1(<2)◂{ } } 2'(= a26◂ [ a18◂ [ ]{| l |}] ) }
;; rsp=3 , %1780~1(<2)◂{ 0(<2)◂{ 5'(= a17◂ [ a22◂ [ {| l |}]] ) 1(<2)◂{ } } 2'(= a26◂ [ a18◂ [ ]{| l |}] ) } %1777~1(<2)◂0(<2)◂3'(= a20◂ [ a18◂ [ ]] ) %1774~4'(= a17◂ [ a21◂ [ a18◂ [ ]{| l |}]] ) %1770~1'(= r ) %1769~0'(= r ) %1766~8'(= a44◂ [ *{ }] ) 
; #132 { 1(<2)◂0(<2)◂3'(= a20◂ [ a18◂ [ ]] ) 1(<2)◂{ 0(<2)◂{ 5'(= a17◂ [ a22◂ [ {| l |}]] ) 1(<2)◂{ } } 2'(= a26◂ [ a18◂ [ ]{| l |}] ) } } ⊢ 4(<7)◂{ 1(<2)◂0(<2)◂3'(= a20◂ [ a18◂ [ ]] ) 1(<2)◂{ 0(<2)◂{ 5'(= a17◂ [ a22◂ [ {| l |}]] ) 1(<2)◂{ } } 2'(= a26◂ [ a18◂ [ ]{| l |}] ) } }
;; rsp=3 , %1781~4(<7)◂{ 1(<2)◂0(<2)◂3'(= a20◂ [ a18◂ [ ]] ) 1(<2)◂{ 0(<2)◂{ 5'(= a17◂ [ a22◂ [ {| l |}]] ) 1(<2)◂{ } } 2'(= a26◂ [ a18◂ [ ]{| l |}] ) } } %1774~4'(= a17◂ [ a21◂ [ a18◂ [ ]{| l |}]] ) %1770~1'(= r ) %1769~0'(= r ) %1766~8'(= a44◂ [ *{ }] ) 
; #198 4(<7)◂{ 1(<2)◂0(<2)◂3'(= a20◂ [ a18◂ [ ]] ) 1(<2)◂{ 0(<2)◂{ 5'(= a17◂ [ a22◂ [ {| l |}]] ) 1(<2)◂{ } } 2'(= a26◂ [ a18◂ [ ]{| l |}] ) } } ⊢ 0(<2)◂4(<7)◂{ 1(<2)◂0(<2)◂3'(= a20◂ [ a18◂ [ ]] ) 1(<2)◂{ 0(<2)◂{ 5'(= a17◂ [ a22◂ [ {| l |}]] ) 1(<2)◂{ } } 2'(= a26◂ [ a18◂ [ ]{| l |}] ) } }
;; rsp=3 , %1782~0(<2)◂4(<7)◂{ 1(<2)◂0(<2)◂3'(= a20◂ [ a18◂ [ ]] ) 1(<2)◂{ 0(<2)◂{ 5'(= a17◂ [ a22◂ [ {| l |}]] ) 1(<2)◂{ } } 2'(= a26◂ [ a18◂ [ ]{| l |}] ) } } %1774~4'(= a17◂ [ a21◂ [ a18◂ [ ]{| l |}]] ) %1770~1'(= r ) %1769~0'(= r ) %1766~8'(= a44◂ [ *{ }] ) 
; #24 0(<2)◂4(<7)◂{ 1(<2)◂0(<2)◂3'(= a20◂ [ a18◂ [ ]] ) 1(<2)◂{ 0(<2)◂{ 5'(= a17◂ [ a22◂ [ {| l |}]] ) 1(<2)◂{ } } 2'(= a26◂ [ a18◂ [ ]{| l |}] ) } } ⊢ 0(<2)◂0(<2)◂4(<7)◂{ 1(<2)◂0(<2)◂3'(= a20◂ [ a18◂ [ ]] ) 1(<2)◂{ 0(<2)◂{ 5'(= a17◂ [ a22◂ [ {| l |}]] ) 1(<2)◂{ } } 2'(= a26◂ [ a18◂ [ ]{| l |}] ) } }
;; rsp=3 , %1783~0(<2)◂0(<2)◂4(<7)◂{ 1(<2)◂0(<2)◂3'(= a20◂ [ a18◂ [ ]] ) 1(<2)◂{ 0(<2)◂{ 5'(= a17◂ [ a22◂ [ {| l |}]] ) 1(<2)◂{ } } 2'(= a26◂ [ a18◂ [ ]{| l |}] ) } } %1774~4'(= a17◂ [ a21◂ [ a18◂ [ ]{| l |}]] ) %1770~1'(= r ) %1769~0'(= r ) %1766~8'(= a44◂ [ *{ }] ) 
; ∎ 0(<2)◂0(<2)◂4(<7)◂{ 1(<2)◂0(<2)◂3'(= a20◂ [ a18◂ [ ]] ) 1(<2)◂{ 0(<2)◂{ 5'(= a17◂ [ a22◂ [ {| l |}]] ) 1(<2)◂{ } } 2'(= a26◂ [ a18◂ [ ]{| l |}] ) } }
; .dlt.ptn 4'(= a17◂ [ a21◂ [ a18◂ [ ]{| l |}]] )
	mov rdi,r10
	C_PUSH_REGS
	mov r8,rdi
	call LB_534
	C_POP_REGS
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 8'(= a44◂ [ *{ }] )
	mov rdi,QWORD [rsp-8+8*3]
	C_PUSH_REGS
	mov r8,rdi
	call LB_1876
	C_POP_REGS
; .mov_ptn2 0(<2)◂0(<2)◂4(<7)◂{ 1(<2)◂0(<2)◂3'(= a20◂ [ a18◂ [ ]] ) 1(<2)◂{ 0(<2)◂{ 5'(= a17◂ [ a22◂ [ {| l |}]] ) 1(<2)◂{ } } 2'(= a26◂ [ a18◂ [ ]{| l |}] ) } } ⊢ 2'(= a3◂ [ a44◂ [ a26◂ [ a18◂ [ ]{| l |}]]] )
	mov r13,r8
; .mov_ptn 0(<2)◂0(<2)◂4(<7)◂{ 1(<2)◂0(<2)◂3'(= a20◂ [ a18◂ [ ]] ) 1(<2)◂{ 0(<2)◂{ 5'(= a17◂ [ a22◂ [ {| l |}]] ) 1(<2)◂{ } } 0'(= a26◂ [ a18◂ [ ]{| l |}] ) } } ⊢ 2'(= a3◂ [ a44◂ [ a26◂ [ a18◂ [ ]{| l |}]]] )
	ALC_RCD 2, rax
	mov r14,rax
	mov rax,r9
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],1
	mov QWORD [rax+8],rdi
	mov QWORD [r14+8+8*0],rax
	ALC_RCD 2, rax
	mov r10,rax
	ALC_RCD 2, rax
	mov rcx,rax
	mov rax,r11
	mov QWORD [rcx+8+8*0],rax
	mov rax,unt 
	mov rax,unt_1
	mov QWORD [rcx+8+8*1],rax
	mov rax,rcx
	mov BYTE [rax+6],0
	mov QWORD [r10+8+8*0],rax
	mov rax,r13
	mov QWORD [r10+8+8*1],rax
	mov rax,r10
	mov BYTE [rax+6],1
	mov QWORD [r14+8+8*1],rax
	mov rax,r14
	mov BYTE [rax+6],4
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,24
	jmp LB_2983
LB_2987:
;; rsp=3 , %1772~2'(= a26◂ [ a18◂ [ ]{| l |}] ) %1770~1'(= r ) %1769~0'(= r ) %1767~9'(= a28◂ [ a18◂ [ ]{| l |}] ) %1766~8'(= a44◂ [ *{ }] ) 
; #134 { 9'(= a28◂ [ a18◂ [ ]{| l |}] ) 2'(= a26◂ [ a18◂ [ ]{| l |}] ) } ⊢ 2(<7)◂{ 9'(= a28◂ [ a18◂ [ ]{| l |}] ) 2'(= a26◂ [ a18◂ [ ]{| l |}] ) }
;; rsp=3 , %1784~2(<7)◂{ 9'(= a28◂ [ a18◂ [ ]{| l |}] ) 2'(= a26◂ [ a18◂ [ ]{| l |}] ) } %1770~1'(= r ) %1769~0'(= r ) %1766~8'(= a44◂ [ *{ }] ) 
; #198 2(<7)◂{ 9'(= a28◂ [ a18◂ [ ]{| l |}] ) 2'(= a26◂ [ a18◂ [ ]{| l |}] ) } ⊢ 0(<2)◂2(<7)◂{ 9'(= a28◂ [ a18◂ [ ]{| l |}] ) 2'(= a26◂ [ a18◂ [ ]{| l |}] ) }
;; rsp=3 , %1785~0(<2)◂2(<7)◂{ 9'(= a28◂ [ a18◂ [ ]{| l |}] ) 2'(= a26◂ [ a18◂ [ ]{| l |}] ) } %1770~1'(= r ) %1769~0'(= r ) %1766~8'(= a44◂ [ *{ }] ) 
; #24 0(<2)◂2(<7)◂{ 9'(= a28◂ [ a18◂ [ ]{| l |}] ) 2'(= a26◂ [ a18◂ [ ]{| l |}] ) } ⊢ 0(<2)◂0(<2)◂2(<7)◂{ 9'(= a28◂ [ a18◂ [ ]{| l |}] ) 2'(= a26◂ [ a18◂ [ ]{| l |}] ) }
;; rsp=3 , %1786~0(<2)◂0(<2)◂2(<7)◂{ 9'(= a28◂ [ a18◂ [ ]{| l |}] ) 2'(= a26◂ [ a18◂ [ ]{| l |}] ) } %1770~1'(= r ) %1769~0'(= r ) %1766~8'(= a44◂ [ *{ }] ) 
; ∎ 0(<2)◂0(<2)◂2(<7)◂{ 9'(= a28◂ [ a18◂ [ ]{| l |}] ) 2'(= a26◂ [ a18◂ [ ]{| l |}] ) }
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 8'(= a44◂ [ *{ }] )
	mov rdi,QWORD [rsp-8+8*3]
	C_PUSH_REGS
	mov r8,rdi
	call LB_1876
	C_POP_REGS
; .mov_ptn2 0(<2)◂0(<2)◂2(<7)◂{ 9'(= a28◂ [ a18◂ [ ]{| l |}] ) 2'(= a26◂ [ a18◂ [ ]{| l |}] ) } ⊢ 2'(= a3◂ [ a44◂ [ a26◂ [ a18◂ [ ]{| l |}]]] )
	mov r13,r8
; .mov_ptn 0(<2)◂0(<2)◂2(<7)◂{ 9'(= a28◂ [ a18◂ [ ]{| l |}] ) 0'(= a26◂ [ a18◂ [ ]{| l |}] ) } ⊢ 2'(= a3◂ [ a44◂ [ a26◂ [ a18◂ [ ]{| l |}]]] )
	ALC_RCD 2, rax
	mov r14,rax
	mov rax,QWORD [rsp-8+8*2]
	mov QWORD [r14+8+8*0],rax
	mov rax,r13
	mov QWORD [r14+8+8*1],rax
	mov rax,r14
	mov BYTE [rax+6],2
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,24
	jmp LB_2983
LB_2984:
;; ?. 10'(= a44◂ [ a26◂ [ a18◂ [ ]{| l |}]] ) ⊢ 1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] )
	mov QWORD [GBG_VCT+8*0],rdi
	mov r8,QWORD [rdi+8]
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_LN rdi
;; rsp=3 , %1771~2'(= a2◂ [ *{ rr{| l |}}] ) %1770~1'(= r ) %1769~0'(= r ) %1767~9'(= a28◂ [ a18◂ [ ]{| l |}] ) %1766~8'(= a44◂ [ *{ }] ) 
; #197 2'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] )
;; rsp=3 , %1787~1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] ) %1770~1'(= r ) %1769~0'(= r ) %1767~9'(= a28◂ [ a18◂ [ ]{| l |}] ) %1766~8'(= a44◂ [ *{ }] ) 
; #24 1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 0(<2)◂1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] )
;; rsp=3 , %1788~0(<2)◂1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] ) %1770~1'(= r ) %1769~0'(= r ) %1767~9'(= a28◂ [ a18◂ [ ]{| l |}] ) %1766~8'(= a44◂ [ *{ }] ) 
; ∎ 0(<2)◂1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] )
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 9'(= a28◂ [ a18◂ [ ]{| l |}] )
	mov rdi,QWORD [rsp-8+8*2]
	C_PUSH_REGS
	mov r8,rdi
	call LB_807
	C_POP_REGS
; .dlt.ptn 8'(= a44◂ [ *{ }] )
	mov rdi,QWORD [rsp-8+8*3]
	C_PUSH_REGS
	mov r8,rdi
	call LB_1876
	C_POP_REGS
; .mov_ptn2 0(<2)◂1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 2'(= a3◂ [ a44◂ [ a26◂ [ a18◂ [ ]{| l |}]]] )
	mov r13,r8
; .mov_ptn 0(<2)◂1(<2)◂0'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 2'(= a3◂ [ a44◂ [ a26◂ [ a18◂ [ ]{| l |}]]] )
	mov rax,r13
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],1
	mov QWORD [rax+8],rdi
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,24
	jmp LB_2983
LB_2983:
	cmp BYTE [r8+6],0
	jnz LB_2951
	POP_GRM_SCC
	ret
LB_2951:
	RB_GRM
	jmp LB_2992
LB_2991:
	add r14,1 
LB_2992:
	cmp r14,r9
	jge LB_2993
	JZ_LINE_SPC BYTE [r13+8+r14], LB_2991
LB_2993
	call GRM_221
	cmp BYTE [r8+6],0
	jnz LB_2996
	jmp LB_2997
LB_2996:
	jmp LB_2994
LB_2997:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a44◂ [ *{ }] ) ⊢ 8'(= a44◂ [ *{ }] )
; .mov_ptn 2'(= a44◂ [ *{ }] ) ⊢ 8'(= a44◂ [ *{ }] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_2995
LB_2994:
	add rsp,0
	jmp LB_2990
LB_2995:
	jmp LB_2999
LB_2998:
	add r14,1 
LB_2999:
	cmp r14,r9
	jge LB_3000
	JZ_LINE_SPC BYTE [r13+8+r14], LB_2998
LB_3000
	call GRM_194
	cmp BYTE [r8+6],0
	jnz LB_3003
	jmp LB_3004
LB_3003:
	jmp LB_3001
LB_3004:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a18◂ [ ] ) ⊢ 9'(= a18◂ [ ] )
; .mov_ptn 2'(= a18◂ [ ] ) ⊢ 9'(= a18◂ [ ] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_3002
LB_3001:
	add rsp,8
	jmp LB_2990
LB_3002:
	jmp LB_3006
LB_3005:
	add r14,1 
LB_3006:
	cmp r14,r9
	jge LB_3007
	JZ_LINE_SPC BYTE [r13+8+r14], LB_3005
LB_3007
	call GRM_206
	cmp BYTE [r8+6],0
	jnz LB_3010
	jmp LB_3011
LB_3010:
	jmp LB_3008
LB_3011:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a17◂ [ a21◂ [ a18◂ [ ]{| l |}]] ) ⊢ 10'(= a17◂ [ a21◂ [ a18◂ [ ]{| l |}]] )
; .mov_ptn 2'(= a17◂ [ a21◂ [ a18◂ [ ]{| l |}]] ) ⊢ 10'(= a17◂ [ a21◂ [ a18◂ [ ]{| l |}]] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_3009
LB_3008:
	add rsp,16
	jmp LB_2990
LB_3009:
	PUSH_GRM
	jmp LB_3015
LB_3014:
	add r14,1 
LB_3015:
	cmp r14,r9
	jge LB_3016
	JZ_SPC BYTE [r13+8+r14], LB_3014
LB_3016
	lea rax,[r14+4]
	cmp rax,r9
	jg LB_3019
	jmp LB_3020
LB_3019:
	mov r8,unt_1
	jmp LB_3017
LB_3020:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],226
	jnz LB_3021
	cmp BYTE [rdi+1],138
	jnz LB_3021
	cmp BYTE [rdi+2],162
	jnz LB_3021
	cmp BYTE [rdi+3],124
	jnz LB_3021
	jmp LB_3022
LB_3021:
	mov r8,unt_1
	jmp LB_3017
LB_3022:
	add r14,4
	jmp LB_3018
LB_3017:
	add rsp,0
	jmp LB_3013
LB_3018:
	mov QWORD [rsp+8*0],r14
	mov r13,QWORD [rsp+16+8*0]
	mov r14,QWORD [rsp+8*0]
	jmp LB_3023
LB_3023
;; rsp=0 , %1795~1'(= r ) %1794~0'(= r ) 
; #25 { } ⊢ 1(<2)◂{ }
;; rsp=0 , %1796~1(<2)◂{ } %1795~1'(= r ) %1794~0'(= r ) 
; #198 1(<2)◂{ } ⊢ 0(<2)◂1(<2)◂{ }
;; rsp=0 , %1797~0(<2)◂1(<2)◂{ } %1795~1'(= r ) %1794~0'(= r ) 
; #24 0(<2)◂1(<2)◂{ } ⊢ 0(<2)◂0(<2)◂1(<2)◂{ }
;; rsp=0 , %1798~0(<2)◂0(<2)◂1(<2)◂{ } %1795~1'(= r ) %1794~0'(= r ) 
; ∎ 0(<2)◂0(<2)◂1(<2)◂{ }
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂0(<2)◂1(<2)◂{ } ⊢ 2'(= a3◂ [ a44◂ [ a3◂ [ *{ a17◂ [ a22◂ [ {| l |}]]a26◂ [ a18◂ [ ]{| l |}]}]]] )
; .mov_ptn 0(<2)◂0(<2)◂1(<2)◂{ } ⊢ 2'(= a3◂ [ a44◂ [ a3◂ [ *{ a17◂ [ a22◂ [ {| l |}]]a26◂ [ a18◂ [ ]{| l |}]}]]] )
	mov rax,unt 
	mov rax,unt_1
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	jmp LB_3024
LB_3024:
	cmp BYTE [r8+6],0
	jnz LB_3013
	POP_GRM_SCC
	jmp LB_3012
LB_3013:
	RB_GRM
	jmp LB_3027
LB_3026:
	add r14,1 
LB_3027:
	cmp r14,r9
	jge LB_3028
	JZ_LINE_SPC BYTE [r13+8+r14], LB_3026
LB_3028
	lea rax,[r14+3]
	cmp rax,r9
	jg LB_3031
	jmp LB_3032
LB_3031:
	mov r8,unt_1
	jmp LB_3029
LB_3032:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],226
	jnz LB_3033
	cmp BYTE [rdi+1],138
	jnz LB_3033
	cmp BYTE [rdi+2],162
	jnz LB_3033
	jmp LB_3034
LB_3033:
	mov r8,unt_1
	jmp LB_3029
LB_3034:
	add r14,3
	jmp LB_3030
LB_3029:
	add rsp,0
	jmp LB_3025
LB_3030:
	jmp LB_3036
LB_3035:
	add r14,1 
LB_3036:
	cmp r14,r9
	jge LB_3037
	JZ_LINE_SPC BYTE [r13+8+r14], LB_3035
LB_3037
	call GRM_210
	cmp BYTE [r8+6],0
	jnz LB_3040
	jmp LB_3041
LB_3040:
	jmp LB_3038
LB_3041:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a17◂ [ a22◂ [ {| l |}]] ) ⊢ 8'(= a17◂ [ a22◂ [ {| l |}]] )
; .mov_ptn 2'(= a17◂ [ a22◂ [ {| l |}]] ) ⊢ 8'(= a17◂ [ a22◂ [ {| l |}]] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_3039
LB_3038:
	add rsp,0
	jmp LB_3025
LB_3039:
	jmp LB_3043
LB_3042:
	add r14,1 
LB_3043:
	cmp r14,r9
	jge LB_3044
	JZ_LINE_SPC BYTE [r13+8+r14], LB_3042
LB_3044
	lea rax,[r14+1]
	cmp rax,r9
	jg LB_3047
	jmp LB_3048
LB_3047:
	mov r8,unt_1
	jmp LB_3045
LB_3048:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],10
	jnz LB_3049
	jmp LB_3050
LB_3049:
	mov r8,unt_1
	jmp LB_3045
LB_3050:
	add r14,1
	jmp LB_3046
LB_3045:
	add rsp,8
	jmp LB_3025
LB_3046:
	jmp LB_3052
LB_3051:
	add r14,1 
LB_3052:
	cmp r14,r9
	jge LB_3053
	JZ_LINE_SPC BYTE [r13+8+r14], LB_3051
LB_3053
	call GRM_239
	cmp BYTE [r8+6],0
	jnz LB_3056
	jmp LB_3057
LB_3056:
	jmp LB_3054
LB_3057:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a44◂ [ a26◂ [ a18◂ [ ]{| l |}]] ) ⊢ 9'(= a44◂ [ a26◂ [ a18◂ [ ]{| l |}]] )
; .mov_ptn 2'(= a44◂ [ a26◂ [ a18◂ [ ]{| l |}]] ) ⊢ 9'(= a44◂ [ a26◂ [ a18◂ [ ]{| l |}]] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_3055
LB_3054:
	add rsp,8
	POP_GRM_FAIL
	jmp LB_3012
LB_3055:
	mov QWORD [rsp+8*2],r14
	mov r13,QWORD [rsp+16+8*2]
	mov r14,QWORD [rsp+8*2]
	jmp LB_3058
LB_3058
;; rsp=2 , %1802~1'(= r ) %1801~0'(= r ) %1800~9'(= a44◂ [ a26◂ [ a18◂ [ ]{| l |}]] ) %1799~8'(= a17◂ [ a22◂ [ {| l |}]] ) 
;; ? 9'(= a44◂ [ a26◂ [ a18◂ [ ]{| l |}]] ) ⊢ 0(<2)◂2'(= a26◂ [ a18◂ [ ]{| l |}] )
	mov rdi,QWORD [rsp-8+8*1]
	cmp BYTE [rdi+6],0
	jnz LB_3061
	jmp LB_3062
LB_3061:
	jmp LB_3060
LB_3062:
	mov QWORD [GBG_VCT+8*0],rdi
	mov r8,QWORD [rdi+8]
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_LN rdi
;; rsp=2 , %1804~2'(= a26◂ [ a18◂ [ ]{| l |}] ) %1802~1'(= r ) %1801~0'(= r ) %1799~8'(= a17◂ [ a22◂ [ {| l |}]] ) 
; #24 { 8'(= a17◂ [ a22◂ [ {| l |}]] ) 2'(= a26◂ [ a18◂ [ ]{| l |}] ) } ⊢ 0(<2)◂{ 8'(= a17◂ [ a22◂ [ {| l |}]] ) 2'(= a26◂ [ a18◂ [ ]{| l |}] ) }
;; rsp=2 , %1805~0(<2)◂{ 8'(= a17◂ [ a22◂ [ {| l |}]] ) 2'(= a26◂ [ a18◂ [ ]{| l |}] ) } %1802~1'(= r ) %1801~0'(= r ) 
; #198 0(<2)◂{ 8'(= a17◂ [ a22◂ [ {| l |}]] ) 2'(= a26◂ [ a18◂ [ ]{| l |}] ) } ⊢ 0(<2)◂0(<2)◂{ 8'(= a17◂ [ a22◂ [ {| l |}]] ) 2'(= a26◂ [ a18◂ [ ]{| l |}] ) }
;; rsp=2 , %1806~0(<2)◂0(<2)◂{ 8'(= a17◂ [ a22◂ [ {| l |}]] ) 2'(= a26◂ [ a18◂ [ ]{| l |}] ) } %1802~1'(= r ) %1801~0'(= r ) 
; #24 0(<2)◂0(<2)◂{ 8'(= a17◂ [ a22◂ [ {| l |}]] ) 2'(= a26◂ [ a18◂ [ ]{| l |}] ) } ⊢ 0(<2)◂0(<2)◂0(<2)◂{ 8'(= a17◂ [ a22◂ [ {| l |}]] ) 2'(= a26◂ [ a18◂ [ ]{| l |}] ) }
;; rsp=2 , %1807~0(<2)◂0(<2)◂0(<2)◂{ 8'(= a17◂ [ a22◂ [ {| l |}]] ) 2'(= a26◂ [ a18◂ [ ]{| l |}] ) } %1802~1'(= r ) %1801~0'(= r ) 
; ∎ 0(<2)◂0(<2)◂0(<2)◂{ 8'(= a17◂ [ a22◂ [ {| l |}]] ) 2'(= a26◂ [ a18◂ [ ]{| l |}] ) }
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂0(<2)◂0(<2)◂{ 8'(= a17◂ [ a22◂ [ {| l |}]] ) 2'(= a26◂ [ a18◂ [ ]{| l |}] ) } ⊢ 2'(= a3◂ [ a44◂ [ a3◂ [ *{ a17◂ [ a22◂ [ {| l |}]]a26◂ [ a18◂ [ ]{| l |}]}]]] )
	mov r13,r8
; .mov_ptn 0(<2)◂0(<2)◂0(<2)◂{ 8'(= a17◂ [ a22◂ [ {| l |}]] ) 0'(= a26◂ [ a18◂ [ ]{| l |}] ) } ⊢ 2'(= a3◂ [ a44◂ [ a3◂ [ *{ a17◂ [ a22◂ [ {| l |}]]a26◂ [ a18◂ [ ]{| l |}]}]]] )
	ALC_RCD 2, rax
	mov r14,rax
	mov rax,QWORD [rsp-8+8*2]
	mov QWORD [r14+8+8*0],rax
	mov rax,r13
	mov QWORD [r14+8+8*1],rax
	mov rax,r14
	mov BYTE [rax+6],0
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,16
	jmp LB_3059
LB_3060:
;; ?. 9'(= a44◂ [ a26◂ [ a18◂ [ ]{| l |}]] ) ⊢ 1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] )
	mov QWORD [GBG_VCT+8*0],rdi
	mov r8,QWORD [rdi+8]
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_LN rdi
;; rsp=2 , %1803~2'(= a2◂ [ *{ rr{| l |}}] ) %1802~1'(= r ) %1801~0'(= r ) %1799~8'(= a17◂ [ a22◂ [ {| l |}]] ) 
; #197 2'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] )
;; rsp=2 , %1808~1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] ) %1802~1'(= r ) %1801~0'(= r ) %1799~8'(= a17◂ [ a22◂ [ {| l |}]] ) 
; #24 1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 0(<2)◂1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] )
;; rsp=2 , %1809~0(<2)◂1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] ) %1802~1'(= r ) %1801~0'(= r ) %1799~8'(= a17◂ [ a22◂ [ {| l |}]] ) 
; ∎ 0(<2)◂1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] )
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 8'(= a17◂ [ a22◂ [ {| l |}]] )
	mov rdi,QWORD [rsp-8+8*2]
	C_PUSH_REGS
	mov r8,rdi
	call LB_791
	C_POP_REGS
; .mov_ptn2 0(<2)◂1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 2'(= a3◂ [ a44◂ [ a3◂ [ *{ a17◂ [ a22◂ [ {| l |}]]a26◂ [ a18◂ [ ]{| l |}]}]]] )
	mov r13,r8
; .mov_ptn 0(<2)◂1(<2)◂0'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 2'(= a3◂ [ a44◂ [ a3◂ [ *{ a17◂ [ a22◂ [ {| l |}]]a26◂ [ a18◂ [ ]{| l |}]}]]] )
	mov rax,r13
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],1
	mov QWORD [rax+8],rdi
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,16
	jmp LB_3059
LB_3059:
	cmp BYTE [r8+6],0
	jnz LB_3025
	POP_GRM_SCC
	jmp LB_3012
LB_3025:
	RB_GRM
	jmp LB_3065
LB_3064:
	add r14,1 
LB_3065:
	cmp r14,r9
	jge LB_3066
	JZ_LINE_SPC BYTE [r13+8+r14], LB_3064
LB_3066
	call GRM_224
	cmp BYTE [r8+6],0
	jnz LB_3069
	jmp LB_3070
LB_3069:
	jmp LB_3067
LB_3070:
	sub rsp,16
; .mov_ptn2 2'(= *{ rr} ) ⊢ { 8'(= r ) 9'(= r ) }
; .mov_ptn 2'(= *{ rr} ) ⊢ { 8'(= r ) 9'(= r ) }
	mov r10, QWORD [r8+8]
	mov QWORD [rsp-8+8*2],r10
	mov r11, QWORD [r8+16]
	mov QWORD [rsp-8+8*1],r11
	mov rdi,r8
	FREE_RCD 2,rdi
	jmp LB_3068
LB_3067:
	add rsp,0
	jmp LB_3063
LB_3068:
	jmp LB_3072
LB_3071:
	add r14,1 
LB_3072:
	cmp r14,r9
	jge LB_3073
	JZ_LINE_SPC BYTE [r13+8+r14], LB_3071
LB_3073
	call GRM_239
	cmp BYTE [r8+6],0
	jnz LB_3076
	jmp LB_3077
LB_3076:
	jmp LB_3074
LB_3077:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a44◂ [ a26◂ [ a18◂ [ ]{| l |}]] ) ⊢ 10'(= a44◂ [ a26◂ [ a18◂ [ ]{| l |}]] )
; .mov_ptn 2'(= a44◂ [ a26◂ [ a18◂ [ ]{| l |}]] ) ⊢ 10'(= a44◂ [ a26◂ [ a18◂ [ ]{| l |}]] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_3075
LB_3074:
	add rsp,16
	jmp LB_3063
LB_3075:
	mov QWORD [rsp+8*3],r14
	mov r13,QWORD [rsp+16+8*3]
	mov r14,QWORD [rsp+8*3]
	jmp LB_3078
LB_3078
;; rsp=3 , %1814~1'(= r ) %1813~0'(= r ) %1812~10'(= a44◂ [ a26◂ [ a18◂ [ ]{| l |}]] ) %1811~9'(= r ) %1810~8'(= r ) 
;; ? 10'(= a44◂ [ a26◂ [ a18◂ [ ]{| l |}]] ) ⊢ 0(<2)◂2'(= a26◂ [ a18◂ [ ]{| l |}] )
	mov rdi,QWORD [rsp-8+8*1]
	cmp BYTE [rdi+6],0
	jnz LB_3081
	jmp LB_3082
LB_3081:
	jmp LB_3080
LB_3082:
	mov QWORD [GBG_VCT+8*0],rdi
	mov r8,QWORD [rdi+8]
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_LN rdi
;; rsp=3 , %1816~2'(= a26◂ [ a18◂ [ ]{| l |}] ) %1814~1'(= r ) %1813~0'(= r ) %1811~9'(= r ) %1810~8'(= r ) 
; $ %[ "lc_code 20" ] ⊢ %[ "lc_code 20" ]
;; rsp=3 , %1817~%[ "lc_code 20" ] %1816~2'(= a26◂ [ a18◂ [ ]{| l |}] ) %1814~1'(= r ) %1813~0'(= r ) %1811~9'(= r ) %1810~8'(= r ) 
; #22 { } ⊢ 1(<2)◂{ }
;; rsp=3 , %1818~1(<2)◂{ } %1817~%[ "lc_code 20" ] %1816~2'(= a26◂ [ a18◂ [ ]{| l |}] ) %1814~1'(= r ) %1813~0'(= r ) %1811~9'(= r ) %1810~8'(= r ) 
; #23 { { 8'(= r ) 9'(= r ) %[ "lc_code 20" ] } 1(<2)◂{ } } ⊢ 0(<2)◂{ { 8'(= r ) 9'(= r ) %[ "lc_code 20" ] } 1(<2)◂{ } }
;; rsp=3 , %1819~0(<2)◂{ { 8'(= r ) 9'(= r ) %[ "lc_code 20" ] } 1(<2)◂{ } } %1816~2'(= a26◂ [ a18◂ [ ]{| l |}] ) %1814~1'(= r ) %1813~0'(= r ) 
; #197 0(<2)◂{ { 8'(= r ) 9'(= r ) %[ "lc_code 20" ] } 1(<2)◂{ } } ⊢ 1(<2)◂0(<2)◂{ { 8'(= r ) 9'(= r ) %[ "lc_code 20" ] } 1(<2)◂{ } }
;; rsp=3 , %1820~1(<2)◂0(<2)◂{ { 8'(= r ) 9'(= r ) %[ "lc_code 20" ] } 1(<2)◂{ } } %1816~2'(= a26◂ [ a18◂ [ ]{| l |}] ) %1814~1'(= r ) %1813~0'(= r ) 
; #24 1(<2)◂0(<2)◂{ { 8'(= r ) 9'(= r ) %[ "lc_code 20" ] } 1(<2)◂{ } } ⊢ 0(<2)◂1(<2)◂0(<2)◂{ { 8'(= r ) 9'(= r ) %[ "lc_code 20" ] } 1(<2)◂{ } }
;; rsp=3 , %1821~0(<2)◂1(<2)◂0(<2)◂{ { 8'(= r ) 9'(= r ) %[ "lc_code 20" ] } 1(<2)◂{ } } %1816~2'(= a26◂ [ a18◂ [ ]{| l |}] ) %1814~1'(= r ) %1813~0'(= r ) 
; ∎ 0(<2)◂1(<2)◂0(<2)◂{ { 8'(= r ) 9'(= r ) %[ "lc_code 20" ] } 1(<2)◂{ } }
; .dlt.ptn 2'(= a26◂ [ a18◂ [ ]{| l |}] )
	mov rdi,r8
	C_PUSH_REGS
	mov r8,rdi
	call LB_797
	C_POP_REGS
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂1(<2)◂0(<2)◂{ { 8'(= r ) 9'(= r ) %[ "lc_code 20" ] } 1(<2)◂{ } } ⊢ 2'(= a3◂ [ a44◂ [ a3◂ [ *{ a17◂ [ a22◂ [ {| l |}]]a26◂ [ a18◂ [ ]{| l |}]}]]] )
; .mov_ptn 0(<2)◂1(<2)◂0(<2)◂{ { 8'(= r ) 9'(= r ) %[ "lc_code 20" ] } 1(<2)◂{ } } ⊢ 2'(= a3◂ [ a44◂ [ a3◂ [ *{ a17◂ [ a22◂ [ {| l |}]]a26◂ [ a18◂ [ ]{| l |}]}]]] )
	ALC_RCD 2, rax
	mov r13,rax
	ALC_RCD 3, rax
	mov r14,rax
	mov rax,QWORD [rsp-8+8*3]
	mov QWORD [r14+8+8*0],rax
	mov rax,QWORD [rsp-8+8*2]
	mov QWORD [r14+8+8*1],rax
	mov rsi,1  
	mov rdi,24
	xor rax,rax 
	C_CALL_SF calloc
	mov QWORD [rax],10
	mov BYTE [rax+8+0],108
	mov BYTE [rax+8+1],99
	mov BYTE [rax+8+2],95
	mov BYTE [rax+8+3],99
	mov BYTE [rax+8+4],111
	mov BYTE [rax+8+5],100
	mov BYTE [rax+8+6],101
	mov BYTE [rax+8+7],32
	mov BYTE [rax+8+8],50
	mov BYTE [rax+8+9],48
	mov QWORD [r14+8+8*2],rax
	mov rax,r14
	mov QWORD [r13+8+8*0],rax
	mov rax,unt 
	mov rax,unt_1
	mov QWORD [r13+8+8*1],rax
	mov rax,r13
	mov BYTE [rax+6],0
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],1
	mov QWORD [rax+8],rdi
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,24
	jmp LB_3079
LB_3080:
;; ?. 10'(= a44◂ [ a26◂ [ a18◂ [ ]{| l |}]] ) ⊢ 1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] )
	mov QWORD [GBG_VCT+8*0],rdi
	mov r8,QWORD [rdi+8]
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_LN rdi
;; rsp=3 , %1815~2'(= a2◂ [ *{ rr{| l |}}] ) %1814~1'(= r ) %1813~0'(= r ) %1811~9'(= r ) %1810~8'(= r ) 
; $ %[ "lc_code 21" ] ⊢ %[ "lc_code 21" ]
;; rsp=3 , %1822~%[ "lc_code 21" ] %1815~2'(= a2◂ [ *{ rr{| l |}}] ) %1814~1'(= r ) %1813~0'(= r ) %1811~9'(= r ) %1810~8'(= r ) 
; #23 { { 8'(= r ) 9'(= r ) %[ "lc_code 21" ] } 2'(= a2◂ [ *{ rr{| l |}}] ) } ⊢ 0(<2)◂{ { 8'(= r ) 9'(= r ) %[ "lc_code 21" ] } 2'(= a2◂ [ *{ rr{| l |}}] ) }
;; rsp=3 , %1823~0(<2)◂{ { 8'(= r ) 9'(= r ) %[ "lc_code 21" ] } 2'(= a2◂ [ *{ rr{| l |}}] ) } %1814~1'(= r ) %1813~0'(= r ) 
; #197 0(<2)◂{ { 8'(= r ) 9'(= r ) %[ "lc_code 21" ] } 2'(= a2◂ [ *{ rr{| l |}}] ) } ⊢ 1(<2)◂0(<2)◂{ { 8'(= r ) 9'(= r ) %[ "lc_code 21" ] } 2'(= a2◂ [ *{ rr{| l |}}] ) }
;; rsp=3 , %1824~1(<2)◂0(<2)◂{ { 8'(= r ) 9'(= r ) %[ "lc_code 21" ] } 2'(= a2◂ [ *{ rr{| l |}}] ) } %1814~1'(= r ) %1813~0'(= r ) 
; #24 1(<2)◂0(<2)◂{ { 8'(= r ) 9'(= r ) %[ "lc_code 21" ] } 2'(= a2◂ [ *{ rr{| l |}}] ) } ⊢ 0(<2)◂1(<2)◂0(<2)◂{ { 8'(= r ) 9'(= r ) %[ "lc_code 21" ] } 2'(= a2◂ [ *{ rr{| l |}}] ) }
;; rsp=3 , %1825~0(<2)◂1(<2)◂0(<2)◂{ { 8'(= r ) 9'(= r ) %[ "lc_code 21" ] } 2'(= a2◂ [ *{ rr{| l |}}] ) } %1814~1'(= r ) %1813~0'(= r ) 
; ∎ 0(<2)◂1(<2)◂0(<2)◂{ { 8'(= r ) 9'(= r ) %[ "lc_code 21" ] } 2'(= a2◂ [ *{ rr{| l |}}] ) }
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂1(<2)◂0(<2)◂{ { 8'(= r ) 9'(= r ) %[ "lc_code 21" ] } 2'(= a2◂ [ *{ rr{| l |}}] ) } ⊢ 2'(= a3◂ [ a44◂ [ a3◂ [ *{ a17◂ [ a22◂ [ {| l |}]]a26◂ [ a18◂ [ ]{| l |}]}]]] )
	mov r13,r8
; .mov_ptn 0(<2)◂1(<2)◂0(<2)◂{ { 8'(= r ) 9'(= r ) %[ "lc_code 21" ] } 0'(= a2◂ [ *{ rr{| l |}}] ) } ⊢ 2'(= a3◂ [ a44◂ [ a3◂ [ *{ a17◂ [ a22◂ [ {| l |}]]a26◂ [ a18◂ [ ]{| l |}]}]]] )
	ALC_RCD 2, rax
	mov r14,rax
	ALC_RCD 3, rax
	mov r9,rax
	mov rax,QWORD [rsp-8+8*3]
	mov QWORD [r9+8+8*0],rax
	mov rax,QWORD [rsp-8+8*2]
	mov QWORD [r9+8+8*1],rax
	mov rsi,1  
	mov rdi,24
	xor rax,rax 
	C_CALL_SF calloc
	mov QWORD [rax],10
	mov BYTE [rax+8+0],108
	mov BYTE [rax+8+1],99
	mov BYTE [rax+8+2],95
	mov BYTE [rax+8+3],99
	mov BYTE [rax+8+4],111
	mov BYTE [rax+8+5],100
	mov BYTE [rax+8+6],101
	mov BYTE [rax+8+7],32
	mov BYTE [rax+8+8],50
	mov BYTE [rax+8+9],49
	mov QWORD [r9+8+8*2],rax
	mov rax,r9
	mov QWORD [r14+8+8*0],rax
	mov rax,r13
	mov QWORD [r14+8+8*1],rax
	mov rax,r14
	mov BYTE [rax+6],0
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],1
	mov QWORD [rax+8],rdi
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,24
	jmp LB_3079
LB_3079:
	cmp BYTE [r8+6],0
	jnz LB_3063
	POP_GRM_SCC
	jmp LB_3012
LB_3063:
	POP_GRM_FAIL 
	jmp LB_3012
LB_3012:
	cmp BYTE [r8+6],0
	jnz LB_3083
	jmp LB_3084
LB_3083:
	add rsp,24
	POP_GRM_FAIL
	ret
LB_3084:
	mov QWORD [rsp+8*3],r14
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi 
; .mov_ptn2 2'(= a44◂ [ a3◂ [ *{ a17◂ [ a22◂ [ {| l |}]]a26◂ [ a18◂ [ ]{| l |}]}]] ) ⊢ 3'(= a44◂ [ a3◂ [ *{ a17◂ [ a22◂ [ {| l |}]]a26◂ [ a18◂ [ ]{| l |}]}]] )
	mov r10,r9
; .mov_ptn 2'(= a44◂ [ a3◂ [ *{ a17◂ [ a22◂ [ {| l |}]]a26◂ [ a18◂ [ ]{| l |}]}]] ) ⊢ 3'(= a44◂ [ a3◂ [ *{ a17◂ [ a22◂ [ {| l |}]]a26◂ [ a18◂ [ ]{| l |}]}]] )
	mov rax,r8
	mov r9,rax
	mov r13,QWORD [rsp+16+8*3]
	mov r14,QWORD [rsp+8*3]
	jmp LB_3085
LB_3085
;; rsp=3 , %1826~3'(= a44◂ [ a3◂ [ *{ a17◂ [ a22◂ [ {| l |}]]a26◂ [ a18◂ [ ]{| l |}]}]] ) %1793~1'(= r ) %1792~0'(= r ) %1791~10'(= a17◂ [ a21◂ [ a18◂ [ ]{| l |}]] ) %1790~9'(= a18◂ [ ] ) %1789~8'(= a44◂ [ *{ }] ) 
;; ? 3'(= a44◂ [ a3◂ [ *{ a17◂ [ a22◂ [ {| l |}]]a26◂ [ a18◂ [ ]{| l |}]}]] ) ⊢ 0(<2)◂2'(= a3◂ [ *{ a17◂ [ a22◂ [ {| l |}]]a26◂ [ a18◂ [ ]{| l |}]}] )
	mov rdi,r9
	cmp BYTE [rdi+6],0
	jnz LB_3088
	jmp LB_3089
LB_3088:
	jmp LB_3087
LB_3089:
	mov QWORD [GBG_VCT+8*0],rdi
	mov r8,QWORD [rdi+8]
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_LN rdi
;; rsp=3 , %1828~2'(= a3◂ [ *{ a17◂ [ a22◂ [ {| l |}]]a26◂ [ a18◂ [ ]{| l |}]}] ) %1793~1'(= r ) %1792~0'(= r ) %1791~10'(= a17◂ [ a21◂ [ a18◂ [ ]{| l |}]] ) %1790~9'(= a18◂ [ ] ) %1789~8'(= a44◂ [ *{ }] ) 
;; ? 2'(= a3◂ [ *{ a17◂ [ a22◂ [ {| l |}]]a26◂ [ a18◂ [ ]{| l |}]}] ) ⊢ 0(<2)◂{ 3'(= a17◂ [ a22◂ [ {| l |}]] ) 4'(= a26◂ [ a18◂ [ ]{| l |}] ) }
	mov rdi,r8
	cmp BYTE [rdi+6],0
	jnz LB_3091
	jmp LB_3092
LB_3091:
	jmp LB_3090
LB_3092:
	mov r9, QWORD [r8+8]
	mov r10, QWORD [r8+16]
	mov QWORD [GBG_VCT+8*0],r8
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_RCD 2,rdi
;; rsp=3 , %1830~4'(= a26◂ [ a18◂ [ ]{| l |}] ) %1829~3'(= a17◂ [ a22◂ [ {| l |}]] ) %1793~1'(= r ) %1792~0'(= r ) %1791~10'(= a17◂ [ a21◂ [ a18◂ [ ]{| l |}]] ) %1790~9'(= a18◂ [ ] ) %1789~8'(= a44◂ [ *{ }] ) 
; #127 { 9'(= a18◂ [ ] ) 10'(= a17◂ [ a21◂ [ a18◂ [ ]{| l |}]] ) 3'(= a17◂ [ a22◂ [ {| l |}]] ) } ⊢ 0(<4)◂{ 9'(= a18◂ [ ] ) 10'(= a17◂ [ a21◂ [ a18◂ [ ]{| l |}]] ) 3'(= a17◂ [ a22◂ [ {| l |}]] ) }
;; rsp=3 , %1831~0(<4)◂{ 9'(= a18◂ [ ] ) 10'(= a17◂ [ a21◂ [ a18◂ [ ]{| l |}]] ) 3'(= a17◂ [ a22◂ [ {| l |}]] ) } %1830~4'(= a26◂ [ a18◂ [ ]{| l |}] ) %1793~1'(= r ) %1792~0'(= r ) %1789~8'(= a44◂ [ *{ }] ) 
; #134 { 0(<4)◂{ 9'(= a18◂ [ ] ) 10'(= a17◂ [ a21◂ [ a18◂ [ ]{| l |}]] ) 3'(= a17◂ [ a22◂ [ {| l |}]] ) } 4'(= a26◂ [ a18◂ [ ]{| l |}] ) } ⊢ 2(<7)◂{ 0(<4)◂{ 9'(= a18◂ [ ] ) 10'(= a17◂ [ a21◂ [ a18◂ [ ]{| l |}]] ) 3'(= a17◂ [ a22◂ [ {| l |}]] ) } 4'(= a26◂ [ a18◂ [ ]{| l |}] ) }
;; rsp=3 , %1832~2(<7)◂{ 0(<4)◂{ 9'(= a18◂ [ ] ) 10'(= a17◂ [ a21◂ [ a18◂ [ ]{| l |}]] ) 3'(= a17◂ [ a22◂ [ {| l |}]] ) } 4'(= a26◂ [ a18◂ [ ]{| l |}] ) } %1793~1'(= r ) %1792~0'(= r ) %1789~8'(= a44◂ [ *{ }] ) 
; #198 2(<7)◂{ 0(<4)◂{ 9'(= a18◂ [ ] ) 10'(= a17◂ [ a21◂ [ a18◂ [ ]{| l |}]] ) 3'(= a17◂ [ a22◂ [ {| l |}]] ) } 4'(= a26◂ [ a18◂ [ ]{| l |}] ) } ⊢ 0(<2)◂2(<7)◂{ 0(<4)◂{ 9'(= a18◂ [ ] ) 10'(= a17◂ [ a21◂ [ a18◂ [ ]{| l |}]] ) 3'(= a17◂ [ a22◂ [ {| l |}]] ) } 4'(= a26◂ [ a18◂ [ ]{| l |}] ) }
;; rsp=3 , %1833~0(<2)◂2(<7)◂{ 0(<4)◂{ 9'(= a18◂ [ ] ) 10'(= a17◂ [ a21◂ [ a18◂ [ ]{| l |}]] ) 3'(= a17◂ [ a22◂ [ {| l |}]] ) } 4'(= a26◂ [ a18◂ [ ]{| l |}] ) } %1793~1'(= r ) %1792~0'(= r ) %1789~8'(= a44◂ [ *{ }] ) 
; #24 0(<2)◂2(<7)◂{ 0(<4)◂{ 9'(= a18◂ [ ] ) 10'(= a17◂ [ a21◂ [ a18◂ [ ]{| l |}]] ) 3'(= a17◂ [ a22◂ [ {| l |}]] ) } 4'(= a26◂ [ a18◂ [ ]{| l |}] ) } ⊢ 0(<2)◂0(<2)◂2(<7)◂{ 0(<4)◂{ 9'(= a18◂ [ ] ) 10'(= a17◂ [ a21◂ [ a18◂ [ ]{| l |}]] ) 3'(= a17◂ [ a22◂ [ {| l |}]] ) } 4'(= a26◂ [ a18◂ [ ]{| l |}] ) }
;; rsp=3 , %1834~0(<2)◂0(<2)◂2(<7)◂{ 0(<4)◂{ 9'(= a18◂ [ ] ) 10'(= a17◂ [ a21◂ [ a18◂ [ ]{| l |}]] ) 3'(= a17◂ [ a22◂ [ {| l |}]] ) } 4'(= a26◂ [ a18◂ [ ]{| l |}] ) } %1793~1'(= r ) %1792~0'(= r ) %1789~8'(= a44◂ [ *{ }] ) 
; ∎ 0(<2)◂0(<2)◂2(<7)◂{ 0(<4)◂{ 9'(= a18◂ [ ] ) 10'(= a17◂ [ a21◂ [ a18◂ [ ]{| l |}]] ) 3'(= a17◂ [ a22◂ [ {| l |}]] ) } 4'(= a26◂ [ a18◂ [ ]{| l |}] ) }
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 8'(= a44◂ [ *{ }] )
	mov rdi,QWORD [rsp-8+8*3]
	C_PUSH_REGS
	mov r8,rdi
	call LB_1876
	C_POP_REGS
; .mov_ptn2 0(<2)◂0(<2)◂2(<7)◂{ 0(<4)◂{ 9'(= a18◂ [ ] ) 10'(= a17◂ [ a21◂ [ a18◂ [ ]{| l |}]] ) 3'(= a17◂ [ a22◂ [ {| l |}]] ) } 4'(= a26◂ [ a18◂ [ ]{| l |}] ) } ⊢ 2'(= a3◂ [ a44◂ [ a26◂ [ a18◂ [ ]{| l |}]]] )
; .mov_ptn 0(<2)◂0(<2)◂2(<7)◂{ 0(<4)◂{ 9'(= a18◂ [ ] ) 10'(= a17◂ [ a21◂ [ a18◂ [ ]{| l |}]] ) 3'(= a17◂ [ a22◂ [ {| l |}]] ) } 4'(= a26◂ [ a18◂ [ ]{| l |}] ) } ⊢ 2'(= a3◂ [ a44◂ [ a26◂ [ a18◂ [ ]{| l |}]]] )
	ALC_RCD 2, rax
	mov r13,rax
	ALC_RCD 3, rax
	mov r14,rax
	mov rax,QWORD [rsp-8+8*2]
	mov QWORD [r14+8+8*0],rax
	mov rax,QWORD [rsp-8+8*1]
	mov QWORD [r14+8+8*1],rax
	mov rax,r9
	mov QWORD [r14+8+8*2],rax
	mov rax,r14
	mov BYTE [rax+6],0
	mov QWORD [r13+8+8*0],rax
	mov rax,r10
	mov QWORD [r13+8+8*1],rax
	mov rax,r13
	mov BYTE [rax+6],2
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,24
	jmp LB_3086
LB_3090:
;; ?. 2'(= a3◂ [ *{ a17◂ [ a22◂ [ {| l |}]]a26◂ [ a18◂ [ ]{| l |}]}] ) ⊢ 1(<2)◂{ }
;; rsp=3 , %1793~1'(= r ) %1792~0'(= r ) %1791~10'(= a17◂ [ a21◂ [ a18◂ [ ]{| l |}]] ) %1790~9'(= a18◂ [ ] ) %1789~8'(= a44◂ [ *{ }] ) 
; #136 { 9'(= a18◂ [ ] ) 10'(= a17◂ [ a21◂ [ a18◂ [ ]{| l |}]] ) } ⊢ 0(<7)◂{ 9'(= a18◂ [ ] ) 10'(= a17◂ [ a21◂ [ a18◂ [ ]{| l |}]] ) }
;; rsp=3 , %1835~0(<7)◂{ 9'(= a18◂ [ ] ) 10'(= a17◂ [ a21◂ [ a18◂ [ ]{| l |}]] ) } %1793~1'(= r ) %1792~0'(= r ) %1789~8'(= a44◂ [ *{ }] ) 
; #198 0(<7)◂{ 9'(= a18◂ [ ] ) 10'(= a17◂ [ a21◂ [ a18◂ [ ]{| l |}]] ) } ⊢ 0(<2)◂0(<7)◂{ 9'(= a18◂ [ ] ) 10'(= a17◂ [ a21◂ [ a18◂ [ ]{| l |}]] ) }
;; rsp=3 , %1836~0(<2)◂0(<7)◂{ 9'(= a18◂ [ ] ) 10'(= a17◂ [ a21◂ [ a18◂ [ ]{| l |}]] ) } %1793~1'(= r ) %1792~0'(= r ) %1789~8'(= a44◂ [ *{ }] ) 
; #24 0(<2)◂0(<7)◂{ 9'(= a18◂ [ ] ) 10'(= a17◂ [ a21◂ [ a18◂ [ ]{| l |}]] ) } ⊢ 0(<2)◂0(<2)◂0(<7)◂{ 9'(= a18◂ [ ] ) 10'(= a17◂ [ a21◂ [ a18◂ [ ]{| l |}]] ) }
;; rsp=3 , %1837~0(<2)◂0(<2)◂0(<7)◂{ 9'(= a18◂ [ ] ) 10'(= a17◂ [ a21◂ [ a18◂ [ ]{| l |}]] ) } %1793~1'(= r ) %1792~0'(= r ) %1789~8'(= a44◂ [ *{ }] ) 
; ∎ 0(<2)◂0(<2)◂0(<7)◂{ 9'(= a18◂ [ ] ) 10'(= a17◂ [ a21◂ [ a18◂ [ ]{| l |}]] ) }
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 8'(= a44◂ [ *{ }] )
	mov rdi,QWORD [rsp-8+8*3]
	C_PUSH_REGS
	mov r8,rdi
	call LB_1876
	C_POP_REGS
; .mov_ptn2 0(<2)◂0(<2)◂0(<7)◂{ 9'(= a18◂ [ ] ) 10'(= a17◂ [ a21◂ [ a18◂ [ ]{| l |}]] ) } ⊢ 2'(= a3◂ [ a44◂ [ a26◂ [ a18◂ [ ]{| l |}]]] )
; .mov_ptn 0(<2)◂0(<2)◂0(<7)◂{ 9'(= a18◂ [ ] ) 10'(= a17◂ [ a21◂ [ a18◂ [ ]{| l |}]] ) } ⊢ 2'(= a3◂ [ a44◂ [ a26◂ [ a18◂ [ ]{| l |}]]] )
	ALC_RCD 2, rax
	mov r13,rax
	mov rax,QWORD [rsp-8+8*2]
	mov QWORD [r13+8+8*0],rax
	mov rax,QWORD [rsp-8+8*1]
	mov QWORD [r13+8+8*1],rax
	mov rax,r13
	mov BYTE [rax+6],0
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,24
	jmp LB_3086
LB_3087:
;; ?. 3'(= a44◂ [ a3◂ [ *{ a17◂ [ a22◂ [ {| l |}]]a26◂ [ a18◂ [ ]{| l |}]}]] ) ⊢ 1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] )
	mov QWORD [GBG_VCT+8*0],rdi
	mov r8,QWORD [rdi+8]
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_LN rdi
;; rsp=3 , %1827~2'(= a2◂ [ *{ rr{| l |}}] ) %1793~1'(= r ) %1792~0'(= r ) %1791~10'(= a17◂ [ a21◂ [ a18◂ [ ]{| l |}]] ) %1790~9'(= a18◂ [ ] ) %1789~8'(= a44◂ [ *{ }] ) 
; #197 2'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] )
;; rsp=3 , %1838~1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] ) %1793~1'(= r ) %1792~0'(= r ) %1791~10'(= a17◂ [ a21◂ [ a18◂ [ ]{| l |}]] ) %1790~9'(= a18◂ [ ] ) %1789~8'(= a44◂ [ *{ }] ) 
; #24 1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 0(<2)◂1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] )
;; rsp=3 , %1839~0(<2)◂1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] ) %1793~1'(= r ) %1792~0'(= r ) %1791~10'(= a17◂ [ a21◂ [ a18◂ [ ]{| l |}]] ) %1790~9'(= a18◂ [ ] ) %1789~8'(= a44◂ [ *{ }] ) 
; ∎ 0(<2)◂1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] )
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 10'(= a17◂ [ a21◂ [ a18◂ [ ]{| l |}]] )
	mov rdi,QWORD [rsp-8+8*1]
	C_PUSH_REGS
	mov r8,rdi
	call LB_534
	C_POP_REGS
; .dlt.ptn 9'(= a18◂ [ ] )
	mov rdi,QWORD [rsp-8+8*2]
	C_PUSH_REGS
	mov r8,rdi
	call LB_450
	C_POP_REGS
; .dlt.ptn 8'(= a44◂ [ *{ }] )
	mov rdi,QWORD [rsp-8+8*3]
	C_PUSH_REGS
	mov r8,rdi
	call LB_1876
	C_POP_REGS
; .mov_ptn2 0(<2)◂1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 2'(= a3◂ [ a44◂ [ a26◂ [ a18◂ [ ]{| l |}]]] )
	mov r13,r8
; .mov_ptn 0(<2)◂1(<2)◂0'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 2'(= a3◂ [ a44◂ [ a26◂ [ a18◂ [ ]{| l |}]]] )
	mov rax,r13
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],1
	mov QWORD [rax+8],rdi
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,24
	jmp LB_3086
LB_3086:
	cmp BYTE [r8+6],0
	jnz LB_2990
	POP_GRM_SCC
	ret
LB_2990:
	RB_GRM
	jmp LB_3095
LB_3094:
	add r14,1 
LB_3095:
	cmp r14,r9
	jge LB_3096
	JZ_SPC BYTE [r13+8+r14], LB_3094
LB_3096
	call GRM_241
	cmp BYTE [r8+6],0
	jnz LB_3099
	jmp LB_3100
LB_3099:
	jmp LB_3097
LB_3100:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a44◂ [ a16◂ [ *{ a2◂ [ a30◂ [ a18◂ [ ]{| l |}]]a29◂ [ a18◂ [ ]{| l |}]}]] ) ⊢ 8'(= a44◂ [ a16◂ [ *{ a2◂ [ a30◂ [ a18◂ [ ]{| l |}]]a29◂ [ a18◂ [ ]{| l |}]}]] )
; .mov_ptn 2'(= a44◂ [ a16◂ [ *{ a2◂ [ a30◂ [ a18◂ [ ]{| l |}]]a29◂ [ a18◂ [ ]{| l |}]}]] ) ⊢ 8'(= a44◂ [ a16◂ [ *{ a2◂ [ a30◂ [ a18◂ [ ]{| l |}]]a29◂ [ a18◂ [ ]{| l |}]}]] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_3098
LB_3097:
	add rsp,0
	jmp LB_3093
LB_3098:
	mov QWORD [rsp+8*1],r14
	mov r13,QWORD [rsp+16+8*1]
	mov r14,QWORD [rsp+8*1]
	jmp LB_3101
LB_3101
;; rsp=1 , %1842~1'(= r ) %1841~0'(= r ) %1840~8'(= a44◂ [ a16◂ [ *{ a2◂ [ a30◂ [ a18◂ [ ]{| l |}]]a29◂ [ a18◂ [ ]{| l |}]}]] ) 
;; ? 8'(= a44◂ [ a16◂ [ *{ a2◂ [ a30◂ [ a18◂ [ ]{| l |}]]a29◂ [ a18◂ [ ]{| l |}]}]] ) ⊢ 0(<2)◂2'(= a16◂ [ *{ a2◂ [ a30◂ [ a18◂ [ ]{| l |}]]a29◂ [ a18◂ [ ]{| l |}]}] )
	mov rdi,QWORD [rsp-8+8*1]
	cmp BYTE [rdi+6],0
	jnz LB_3104
	jmp LB_3105
LB_3104:
	jmp LB_3103
LB_3105:
	mov QWORD [GBG_VCT+8*0],rdi
	mov r8,QWORD [rdi+8]
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_LN rdi
;; rsp=1 , %1844~2'(= a16◂ [ *{ a2◂ [ a30◂ [ a18◂ [ ]{| l |}]]a29◂ [ a18◂ [ ]{| l |}]}] ) %1842~1'(= r ) %1841~0'(= r ) 
; #133 2'(= a16◂ [ *{ a2◂ [ a30◂ [ a18◂ [ ]{| l |}]]a29◂ [ a18◂ [ ]{| l |}]}] ) ⊢ 3(<7)◂2'(= a16◂ [ *{ a2◂ [ a30◂ [ a18◂ [ ]{| l |}]]a29◂ [ a18◂ [ ]{| l |}]}] )
;; rsp=1 , %1845~3(<7)◂2'(= a16◂ [ *{ a2◂ [ a30◂ [ a18◂ [ ]{| l |}]]a29◂ [ a18◂ [ ]{| l |}]}] ) %1842~1'(= r ) %1841~0'(= r ) 
; #198 3(<7)◂2'(= a16◂ [ *{ a2◂ [ a30◂ [ a18◂ [ ]{| l |}]]a29◂ [ a18◂ [ ]{| l |}]}] ) ⊢ 0(<2)◂3(<7)◂2'(= a16◂ [ *{ a2◂ [ a30◂ [ a18◂ [ ]{| l |}]]a29◂ [ a18◂ [ ]{| l |}]}] )
;; rsp=1 , %1846~0(<2)◂3(<7)◂2'(= a16◂ [ *{ a2◂ [ a30◂ [ a18◂ [ ]{| l |}]]a29◂ [ a18◂ [ ]{| l |}]}] ) %1842~1'(= r ) %1841~0'(= r ) 
; #24 0(<2)◂3(<7)◂2'(= a16◂ [ *{ a2◂ [ a30◂ [ a18◂ [ ]{| l |}]]a29◂ [ a18◂ [ ]{| l |}]}] ) ⊢ 0(<2)◂0(<2)◂3(<7)◂2'(= a16◂ [ *{ a2◂ [ a30◂ [ a18◂ [ ]{| l |}]]a29◂ [ a18◂ [ ]{| l |}]}] )
;; rsp=1 , %1847~0(<2)◂0(<2)◂3(<7)◂2'(= a16◂ [ *{ a2◂ [ a30◂ [ a18◂ [ ]{| l |}]]a29◂ [ a18◂ [ ]{| l |}]}] ) %1842~1'(= r ) %1841~0'(= r ) 
; ∎ 0(<2)◂0(<2)◂3(<7)◂2'(= a16◂ [ *{ a2◂ [ a30◂ [ a18◂ [ ]{| l |}]]a29◂ [ a18◂ [ ]{| l |}]}] )
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂0(<2)◂3(<7)◂2'(= a16◂ [ *{ a2◂ [ a30◂ [ a18◂ [ ]{| l |}]]a29◂ [ a18◂ [ ]{| l |}]}] ) ⊢ 2'(= a3◂ [ a44◂ [ a26◂ [ a18◂ [ ]{| l |}]]] )
	mov r13,r8
; .mov_ptn 0(<2)◂0(<2)◂3(<7)◂0'(= a16◂ [ *{ a2◂ [ a30◂ [ a18◂ [ ]{| l |}]]a29◂ [ a18◂ [ ]{| l |}]}] ) ⊢ 2'(= a3◂ [ a44◂ [ a26◂ [ a18◂ [ ]{| l |}]]] )
	mov rax,r13
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],3
	mov QWORD [rax+8],rdi
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,8
	jmp LB_3102
LB_3103:
;; ?. 8'(= a44◂ [ a16◂ [ *{ a2◂ [ a30◂ [ a18◂ [ ]{| l |}]]a29◂ [ a18◂ [ ]{| l |}]}]] ) ⊢ 1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] )
	mov QWORD [GBG_VCT+8*0],rdi
	mov r8,QWORD [rdi+8]
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_LN rdi
;; rsp=1 , %1843~2'(= a2◂ [ *{ rr{| l |}}] ) %1842~1'(= r ) %1841~0'(= r ) 
; #197 2'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] )
;; rsp=1 , %1848~1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] ) %1842~1'(= r ) %1841~0'(= r ) 
; #24 1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 0(<2)◂1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] )
;; rsp=1 , %1849~0(<2)◂1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] ) %1842~1'(= r ) %1841~0'(= r ) 
; ∎ 0(<2)◂1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] )
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 2'(= a3◂ [ a44◂ [ a26◂ [ a18◂ [ ]{| l |}]]] )
	mov r13,r8
; .mov_ptn 0(<2)◂1(<2)◂0'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 2'(= a3◂ [ a44◂ [ a26◂ [ a18◂ [ ]{| l |}]]] )
	mov rax,r13
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],1
	mov QWORD [rax+8],rdi
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,8
	jmp LB_3102
LB_3102:
	cmp BYTE [r8+6],0
	jnz LB_3093
	POP_GRM_SCC
	ret
LB_3093:
	RB_GRM
	jmp LB_3108
LB_3107:
	add r14,1 
LB_3108:
	cmp r14,r9
	jge LB_3109
	JZ_LINE_SPC BYTE [r13+8+r14], LB_3107
LB_3109
	call GRM_221
	cmp BYTE [r8+6],0
	jnz LB_3112
	jmp LB_3113
LB_3112:
	jmp LB_3110
LB_3113:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a44◂ [ *{ }] ) ⊢ 8'(= a44◂ [ *{ }] )
; .mov_ptn 2'(= a44◂ [ *{ }] ) ⊢ 8'(= a44◂ [ *{ }] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_3111
LB_3110:
	add rsp,0
	jmp LB_3106
LB_3111:
	jmp LB_3115
LB_3114:
	add r14,1 
LB_3115:
	cmp r14,r9
	jge LB_3116
	JZ_LINE_SPC BYTE [r13+8+r14], LB_3114
LB_3116
	lea rax,[r14+1]
	cmp rax,r9
	jg LB_3119
	jmp LB_3120
LB_3119:
	mov r8,unt_1
	jmp LB_3117
LB_3120:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],36
	jnz LB_3121
	jmp LB_3122
LB_3121:
	mov r8,unt_1
	jmp LB_3117
LB_3122:
	add r14,1
	jmp LB_3118
LB_3117:
	add rsp,8
	jmp LB_3106
LB_3118:
	PUSH_GRM
	jmp LB_3126
LB_3125:
	add r14,1 
LB_3126:
	cmp r14,r9
	jge LB_3127
	JZ_LINE_SPC BYTE [r13+8+r14], LB_3125
LB_3127
	call GRM_206
	cmp BYTE [r8+6],0
	jnz LB_3130
	jmp LB_3131
LB_3130:
	jmp LB_3128
LB_3131:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a17◂ [ a21◂ [ a18◂ [ ]{| l |}]] ) ⊢ 8'(= a17◂ [ a21◂ [ a18◂ [ ]{| l |}]] )
; .mov_ptn 2'(= a17◂ [ a21◂ [ a18◂ [ ]{| l |}]] ) ⊢ 8'(= a17◂ [ a21◂ [ a18◂ [ ]{| l |}]] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_3129
LB_3128:
	add rsp,0
	jmp LB_3124
LB_3129:
	jmp LB_3133
LB_3132:
	add r14,1 
LB_3133:
	cmp r14,r9
	jge LB_3134
	JZ_LINE_SPC BYTE [r13+8+r14], LB_3132
LB_3134
	lea rax,[r14+3]
	cmp rax,r9
	jg LB_3137
	jmp LB_3138
LB_3137:
	mov r8,unt_1
	jmp LB_3135
LB_3138:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],226
	jnz LB_3139
	cmp BYTE [rdi+1],138
	jnz LB_3139
	cmp BYTE [rdi+2],162
	jnz LB_3139
	jmp LB_3140
LB_3139:
	mov r8,unt_1
	jmp LB_3135
LB_3140:
	add r14,3
	jmp LB_3136
LB_3135:
	add rsp,8
	jmp LB_3124
LB_3136:
	PUSH_GRM
	jmp LB_3144
LB_3143:
	add r14,1 
LB_3144:
	cmp r14,r9
	jge LB_3145
	JZ_LINE_SPC BYTE [r13+8+r14], LB_3143
LB_3145
	lea rax,[r14+1]
	cmp rax,r9
	jg LB_3148
	jmp LB_3149
LB_3148:
	mov r8,unt_1
	jmp LB_3146
LB_3149:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],10
	jnz LB_3150
	jmp LB_3151
LB_3150:
	mov r8,unt_1
	jmp LB_3146
LB_3151:
	add r14,1
	jmp LB_3147
LB_3146:
	add rsp,0
	jmp LB_3142
LB_3147:
	jmp LB_3153
LB_3152:
	add r14,1 
LB_3153:
	cmp r14,r9
	jge LB_3154
	JZ_LINE_SPC BYTE [r13+8+r14], LB_3152
LB_3154
	call GRM_242
	cmp BYTE [r8+6],0
	jnz LB_3157
	jmp LB_3158
LB_3157:
	jmp LB_3155
LB_3158:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a44◂ [ a16◂ [ *{ a17◂ [ a23◂ [ a18◂ [ ]{| l |}]]a2◂ [ a30◂ [ a18◂ [ ]{| l |}]]a29◂ [ a18◂ [ ]{| l |}]}]] ) ⊢ 8'(= a44◂ [ a16◂ [ *{ a17◂ [ a23◂ [ a18◂ [ ]{| l |}]]a2◂ [ a30◂ [ a18◂ [ ]{| l |}]]a29◂ [ a18◂ [ ]{| l |}]}]] )
; .mov_ptn 2'(= a44◂ [ a16◂ [ *{ a17◂ [ a23◂ [ a18◂ [ ]{| l |}]]a2◂ [ a30◂ [ a18◂ [ ]{| l |}]]a29◂ [ a18◂ [ ]{| l |}]}]] ) ⊢ 8'(= a44◂ [ a16◂ [ *{ a17◂ [ a23◂ [ a18◂ [ ]{| l |}]]a2◂ [ a30◂ [ a18◂ [ ]{| l |}]]a29◂ [ a18◂ [ ]{| l |}]}]] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_3156
LB_3155:
	add rsp,0
	jmp LB_3142
LB_3156:
	mov QWORD [rsp+8*1],r14
	mov r13,QWORD [rsp+16+8*1]
	mov r14,QWORD [rsp+8*1]
	jmp LB_3159
LB_3159
;; rsp=1 , %1858~1'(= r ) %1857~0'(= r ) %1856~8'(= a44◂ [ a16◂ [ *{ a17◂ [ a23◂ [ a18◂ [ ]{| l |}]]a2◂ [ a30◂ [ a18◂ [ ]{| l |}]]a29◂ [ a18◂ [ ]{| l |}]}]] ) 
;; ? 8'(= a44◂ [ a16◂ [ *{ a17◂ [ a23◂ [ a18◂ [ ]{| l |}]]a2◂ [ a30◂ [ a18◂ [ ]{| l |}]]a29◂ [ a18◂ [ ]{| l |}]}]] ) ⊢ 0(<2)◂2'(= a16◂ [ *{ a17◂ [ a23◂ [ a18◂ [ ]{| l |}]]a2◂ [ a30◂ [ a18◂ [ ]{| l |}]]a29◂ [ a18◂ [ ]{| l |}]}] )
	mov rdi,QWORD [rsp-8+8*1]
	cmp BYTE [rdi+6],0
	jnz LB_3162
	jmp LB_3163
LB_3162:
	jmp LB_3161
LB_3163:
	mov QWORD [GBG_VCT+8*0],rdi
	mov r8,QWORD [rdi+8]
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_LN rdi
;; rsp=1 , %1860~2'(= a16◂ [ *{ a17◂ [ a23◂ [ a18◂ [ ]{| l |}]]a2◂ [ a30◂ [ a18◂ [ ]{| l |}]]a29◂ [ a18◂ [ ]{| l |}]}] ) %1858~1'(= r ) %1857~0'(= r ) 
; #129 2'(= a16◂ [ *{ a17◂ [ a23◂ [ a18◂ [ ]{| l |}]]a2◂ [ a30◂ [ a18◂ [ ]{| l |}]]a29◂ [ a18◂ [ ]{| l |}]}] ) ⊢ 0(<2)◂2'(= a16◂ [ *{ a17◂ [ a23◂ [ a18◂ [ ]{| l |}]]a2◂ [ a30◂ [ a18◂ [ ]{| l |}]]a29◂ [ a18◂ [ ]{| l |}]}] )
;; rsp=1 , %1861~0(<2)◂2'(= a16◂ [ *{ a17◂ [ a23◂ [ a18◂ [ ]{| l |}]]a2◂ [ a30◂ [ a18◂ [ ]{| l |}]]a29◂ [ a18◂ [ ]{| l |}]}] ) %1858~1'(= r ) %1857~0'(= r ) 
; #198 0(<2)◂2'(= a16◂ [ *{ a17◂ [ a23◂ [ a18◂ [ ]{| l |}]]a2◂ [ a30◂ [ a18◂ [ ]{| l |}]]a29◂ [ a18◂ [ ]{| l |}]}] ) ⊢ 0(<2)◂0(<2)◂2'(= a16◂ [ *{ a17◂ [ a23◂ [ a18◂ [ ]{| l |}]]a2◂ [ a30◂ [ a18◂ [ ]{| l |}]]a29◂ [ a18◂ [ ]{| l |}]}] )
;; rsp=1 , %1862~0(<2)◂0(<2)◂2'(= a16◂ [ *{ a17◂ [ a23◂ [ a18◂ [ ]{| l |}]]a2◂ [ a30◂ [ a18◂ [ ]{| l |}]]a29◂ [ a18◂ [ ]{| l |}]}] ) %1858~1'(= r ) %1857~0'(= r ) 
; #24 0(<2)◂0(<2)◂2'(= a16◂ [ *{ a17◂ [ a23◂ [ a18◂ [ ]{| l |}]]a2◂ [ a30◂ [ a18◂ [ ]{| l |}]]a29◂ [ a18◂ [ ]{| l |}]}] ) ⊢ 0(<2)◂0(<2)◂0(<2)◂2'(= a16◂ [ *{ a17◂ [ a23◂ [ a18◂ [ ]{| l |}]]a2◂ [ a30◂ [ a18◂ [ ]{| l |}]]a29◂ [ a18◂ [ ]{| l |}]}] )
;; rsp=1 , %1863~0(<2)◂0(<2)◂0(<2)◂2'(= a16◂ [ *{ a17◂ [ a23◂ [ a18◂ [ ]{| l |}]]a2◂ [ a30◂ [ a18◂ [ ]{| l |}]]a29◂ [ a18◂ [ ]{| l |}]}] ) %1858~1'(= r ) %1857~0'(= r ) 
; ∎ 0(<2)◂0(<2)◂0(<2)◂2'(= a16◂ [ *{ a17◂ [ a23◂ [ a18◂ [ ]{| l |}]]a2◂ [ a30◂ [ a18◂ [ ]{| l |}]]a29◂ [ a18◂ [ ]{| l |}]}] )
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂0(<2)◂0(<2)◂2'(= a16◂ [ *{ a17◂ [ a23◂ [ a18◂ [ ]{| l |}]]a2◂ [ a30◂ [ a18◂ [ ]{| l |}]]a29◂ [ a18◂ [ ]{| l |}]}] ) ⊢ 2'(= a3◂ [ a44◂ [ a27◂ [ a18◂ [ ]{| l |}]]] )
	mov r13,r8
; .mov_ptn 0(<2)◂0(<2)◂0(<2)◂0'(= a16◂ [ *{ a17◂ [ a23◂ [ a18◂ [ ]{| l |}]]a2◂ [ a30◂ [ a18◂ [ ]{| l |}]]a29◂ [ a18◂ [ ]{| l |}]}] ) ⊢ 2'(= a3◂ [ a44◂ [ a27◂ [ a18◂ [ ]{| l |}]]] )
	mov rax,r13
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,8
	jmp LB_3160
LB_3161:
;; ?. 8'(= a44◂ [ a16◂ [ *{ a17◂ [ a23◂ [ a18◂ [ ]{| l |}]]a2◂ [ a30◂ [ a18◂ [ ]{| l |}]]a29◂ [ a18◂ [ ]{| l |}]}]] ) ⊢ 1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] )
	mov QWORD [GBG_VCT+8*0],rdi
	mov r8,QWORD [rdi+8]
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_LN rdi
;; rsp=1 , %1859~2'(= a2◂ [ *{ rr{| l |}}] ) %1858~1'(= r ) %1857~0'(= r ) 
; #197 2'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] )
;; rsp=1 , %1864~1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] ) %1858~1'(= r ) %1857~0'(= r ) 
; #24 1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 0(<2)◂1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] )
;; rsp=1 , %1865~0(<2)◂1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] ) %1858~1'(= r ) %1857~0'(= r ) 
; ∎ 0(<2)◂1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] )
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 2'(= a3◂ [ a44◂ [ a27◂ [ a18◂ [ ]{| l |}]]] )
	mov r13,r8
; .mov_ptn 0(<2)◂1(<2)◂0'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 2'(= a3◂ [ a44◂ [ a27◂ [ a18◂ [ ]{| l |}]]] )
	mov rax,r13
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],1
	mov QWORD [rax+8],rdi
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,8
	jmp LB_3160
LB_3160:
	cmp BYTE [r8+6],0
	jnz LB_3142
	POP_GRM_SCC
	jmp LB_3141
LB_3142:
	RB_GRM
	jmp LB_3166
LB_3165:
	add r14,1 
LB_3166:
	cmp r14,r9
	jge LB_3167
	JZ_LINE_SPC BYTE [r13+8+r14], LB_3165
LB_3167
	call GRM_210
	cmp BYTE [r8+6],0
	jnz LB_3170
	jmp LB_3171
LB_3170:
	jmp LB_3168
LB_3171:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a17◂ [ a22◂ [ {| l |}]] ) ⊢ 8'(= a17◂ [ a22◂ [ {| l |}]] )
; .mov_ptn 2'(= a17◂ [ a22◂ [ {| l |}]] ) ⊢ 8'(= a17◂ [ a22◂ [ {| l |}]] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_3169
LB_3168:
	add rsp,0
	jmp LB_3164
LB_3169:
	jmp LB_3173
LB_3172:
	add r14,1 
LB_3173:
	cmp r14,r9
	jge LB_3174
	JZ_LINE_SPC BYTE [r13+8+r14], LB_3172
LB_3174
	call GRM_212
	cmp BYTE [r8+6],0
	jnz LB_3177
	jmp LB_3178
LB_3177:
	jmp LB_3175
LB_3178:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a2◂ [ a17◂ [ a22◂ [ {| l |}]]] ) ⊢ 9'(= a2◂ [ a17◂ [ a22◂ [ {| l |}]]] )
; .mov_ptn 2'(= a2◂ [ a17◂ [ a22◂ [ {| l |}]]] ) ⊢ 9'(= a2◂ [ a17◂ [ a22◂ [ {| l |}]]] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_3176
LB_3175:
	add rsp,8
	jmp LB_3164
LB_3176:
	jmp LB_3180
LB_3179:
	add r14,1 
LB_3180:
	cmp r14,r9
	jge LB_3181
	JZ_LINE_SPC BYTE [r13+8+r14], LB_3179
LB_3181
	lea rax,[r14+1]
	cmp rax,r9
	jg LB_3184
	jmp LB_3185
LB_3184:
	mov r8,unt_1
	jmp LB_3182
LB_3185:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],10
	jnz LB_3186
	jmp LB_3187
LB_3186:
	mov r8,unt_1
	jmp LB_3182
LB_3187:
	add r14,1
	jmp LB_3183
LB_3182:
	add rsp,16
	jmp LB_3164
LB_3183:
	jmp LB_3189
LB_3188:
	add r14,1 
LB_3189:
	cmp r14,r9
	jge LB_3190
	JZ_LINE_SPC BYTE [r13+8+r14], LB_3188
LB_3190
	call GRM_239
	cmp BYTE [r8+6],0
	jnz LB_3193
	jmp LB_3194
LB_3193:
	jmp LB_3191
LB_3194:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a44◂ [ a26◂ [ a18◂ [ ]{| l |}]] ) ⊢ 10'(= a44◂ [ a26◂ [ a18◂ [ ]{| l |}]] )
; .mov_ptn 2'(= a44◂ [ a26◂ [ a18◂ [ ]{| l |}]] ) ⊢ 10'(= a44◂ [ a26◂ [ a18◂ [ ]{| l |}]] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_3192
LB_3191:
	add rsp,16
	jmp LB_3164
LB_3192:
	mov QWORD [rsp+8*3],r14
	mov r13,QWORD [rsp+16+8*3]
	mov r14,QWORD [rsp+8*3]
	jmp LB_3195
LB_3195
;; rsp=3 , %1870~1'(= r ) %1869~0'(= r ) %1868~10'(= a44◂ [ a26◂ [ a18◂ [ ]{| l |}]] ) %1867~9'(= a2◂ [ a17◂ [ a22◂ [ {| l |}]]] ) %1866~8'(= a17◂ [ a22◂ [ {| l |}]] ) 
;; ? 10'(= a44◂ [ a26◂ [ a18◂ [ ]{| l |}]] ) ⊢ 0(<2)◂2'(= a26◂ [ a18◂ [ ]{| l |}] )
	mov rdi,QWORD [rsp-8+8*1]
	cmp BYTE [rdi+6],0
	jnz LB_3198
	jmp LB_3199
LB_3198:
	jmp LB_3197
LB_3199:
	mov QWORD [GBG_VCT+8*0],rdi
	mov r8,QWORD [rdi+8]
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_LN rdi
;; rsp=3 , %1872~2'(= a26◂ [ a18◂ [ ]{| l |}] ) %1870~1'(= r ) %1869~0'(= r ) %1867~9'(= a2◂ [ a17◂ [ a22◂ [ {| l |}]]] ) %1866~8'(= a17◂ [ a22◂ [ {| l |}]] ) 
; #23 { 8'(= a17◂ [ a22◂ [ {| l |}]] ) 9'(= a2◂ [ a17◂ [ a22◂ [ {| l |}]]] ) } ⊢ 0(<2)◂{ 8'(= a17◂ [ a22◂ [ {| l |}]] ) 9'(= a2◂ [ a17◂ [ a22◂ [ {| l |}]]] ) }
;; rsp=3 , %1873~0(<2)◂{ 8'(= a17◂ [ a22◂ [ {| l |}]] ) 9'(= a2◂ [ a17◂ [ a22◂ [ {| l |}]]] ) } %1872~2'(= a26◂ [ a18◂ [ ]{| l |}] ) %1870~1'(= r ) %1869~0'(= r ) 
; #128 { 0(<2)◂{ 8'(= a17◂ [ a22◂ [ {| l |}]] ) 9'(= a2◂ [ a17◂ [ a22◂ [ {| l |}]]] ) } 2'(= a26◂ [ a18◂ [ ]{| l |}] ) } ⊢ 1(<2)◂{ 0(<2)◂{ 8'(= a17◂ [ a22◂ [ {| l |}]] ) 9'(= a2◂ [ a17◂ [ a22◂ [ {| l |}]]] ) } 2'(= a26◂ [ a18◂ [ ]{| l |}] ) }
;; rsp=3 , %1874~1(<2)◂{ 0(<2)◂{ 8'(= a17◂ [ a22◂ [ {| l |}]] ) 9'(= a2◂ [ a17◂ [ a22◂ [ {| l |}]]] ) } 2'(= a26◂ [ a18◂ [ ]{| l |}] ) } %1870~1'(= r ) %1869~0'(= r ) 
; #198 1(<2)◂{ 0(<2)◂{ 8'(= a17◂ [ a22◂ [ {| l |}]] ) 9'(= a2◂ [ a17◂ [ a22◂ [ {| l |}]]] ) } 2'(= a26◂ [ a18◂ [ ]{| l |}] ) } ⊢ 0(<2)◂1(<2)◂{ 0(<2)◂{ 8'(= a17◂ [ a22◂ [ {| l |}]] ) 9'(= a2◂ [ a17◂ [ a22◂ [ {| l |}]]] ) } 2'(= a26◂ [ a18◂ [ ]{| l |}] ) }
;; rsp=3 , %1875~0(<2)◂1(<2)◂{ 0(<2)◂{ 8'(= a17◂ [ a22◂ [ {| l |}]] ) 9'(= a2◂ [ a17◂ [ a22◂ [ {| l |}]]] ) } 2'(= a26◂ [ a18◂ [ ]{| l |}] ) } %1870~1'(= r ) %1869~0'(= r ) 
; #24 0(<2)◂1(<2)◂{ 0(<2)◂{ 8'(= a17◂ [ a22◂ [ {| l |}]] ) 9'(= a2◂ [ a17◂ [ a22◂ [ {| l |}]]] ) } 2'(= a26◂ [ a18◂ [ ]{| l |}] ) } ⊢ 0(<2)◂0(<2)◂1(<2)◂{ 0(<2)◂{ 8'(= a17◂ [ a22◂ [ {| l |}]] ) 9'(= a2◂ [ a17◂ [ a22◂ [ {| l |}]]] ) } 2'(= a26◂ [ a18◂ [ ]{| l |}] ) }
;; rsp=3 , %1876~0(<2)◂0(<2)◂1(<2)◂{ 0(<2)◂{ 8'(= a17◂ [ a22◂ [ {| l |}]] ) 9'(= a2◂ [ a17◂ [ a22◂ [ {| l |}]]] ) } 2'(= a26◂ [ a18◂ [ ]{| l |}] ) } %1870~1'(= r ) %1869~0'(= r ) 
; ∎ 0(<2)◂0(<2)◂1(<2)◂{ 0(<2)◂{ 8'(= a17◂ [ a22◂ [ {| l |}]] ) 9'(= a2◂ [ a17◂ [ a22◂ [ {| l |}]]] ) } 2'(= a26◂ [ a18◂ [ ]{| l |}] ) }
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂0(<2)◂1(<2)◂{ 0(<2)◂{ 8'(= a17◂ [ a22◂ [ {| l |}]] ) 9'(= a2◂ [ a17◂ [ a22◂ [ {| l |}]]] ) } 2'(= a26◂ [ a18◂ [ ]{| l |}] ) } ⊢ 2'(= a3◂ [ a44◂ [ a27◂ [ a18◂ [ ]{| l |}]]] )
	mov r13,r8
; .mov_ptn 0(<2)◂0(<2)◂1(<2)◂{ 0(<2)◂{ 8'(= a17◂ [ a22◂ [ {| l |}]] ) 9'(= a2◂ [ a17◂ [ a22◂ [ {| l |}]]] ) } 0'(= a26◂ [ a18◂ [ ]{| l |}] ) } ⊢ 2'(= a3◂ [ a44◂ [ a27◂ [ a18◂ [ ]{| l |}]]] )
	ALC_RCD 2, rax
	mov r14,rax
	ALC_RCD 2, rax
	mov r9,rax
	mov rax,QWORD [rsp-8+8*3]
	mov QWORD [r9+8+8*0],rax
	mov rax,QWORD [rsp-8+8*2]
	mov QWORD [r9+8+8*1],rax
	mov rax,r9
	mov BYTE [rax+6],0
	mov QWORD [r14+8+8*0],rax
	mov rax,r13
	mov QWORD [r14+8+8*1],rax
	mov rax,r14
	mov BYTE [rax+6],1
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,24
	jmp LB_3196
LB_3197:
;; ?. 10'(= a44◂ [ a26◂ [ a18◂ [ ]{| l |}]] ) ⊢ 1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] )
	mov QWORD [GBG_VCT+8*0],rdi
	mov r8,QWORD [rdi+8]
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_LN rdi
;; rsp=3 , %1871~2'(= a2◂ [ *{ rr{| l |}}] ) %1870~1'(= r ) %1869~0'(= r ) %1867~9'(= a2◂ [ a17◂ [ a22◂ [ {| l |}]]] ) %1866~8'(= a17◂ [ a22◂ [ {| l |}]] ) 
; #197 2'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] )
;; rsp=3 , %1877~1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] ) %1870~1'(= r ) %1869~0'(= r ) %1867~9'(= a2◂ [ a17◂ [ a22◂ [ {| l |}]]] ) %1866~8'(= a17◂ [ a22◂ [ {| l |}]] ) 
; #24 1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 0(<2)◂1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] )
;; rsp=3 , %1878~0(<2)◂1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] ) %1870~1'(= r ) %1869~0'(= r ) %1867~9'(= a2◂ [ a17◂ [ a22◂ [ {| l |}]]] ) %1866~8'(= a17◂ [ a22◂ [ {| l |}]] ) 
; ∎ 0(<2)◂1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] )
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 9'(= a2◂ [ a17◂ [ a22◂ [ {| l |}]]] )
	mov rdi,QWORD [rsp-8+8*2]
	C_PUSH_REGS
	mov r8,rdi
	call LB_815
	C_POP_REGS
; .dlt.ptn 8'(= a17◂ [ a22◂ [ {| l |}]] )
	mov rdi,QWORD [rsp-8+8*3]
	C_PUSH_REGS
	mov r8,rdi
	call LB_791
	C_POP_REGS
; .mov_ptn2 0(<2)◂1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 2'(= a3◂ [ a44◂ [ a27◂ [ a18◂ [ ]{| l |}]]] )
	mov r13,r8
; .mov_ptn 0(<2)◂1(<2)◂0'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 2'(= a3◂ [ a44◂ [ a27◂ [ a18◂ [ ]{| l |}]]] )
	mov rax,r13
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],1
	mov QWORD [rax+8],rdi
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,24
	jmp LB_3196
LB_3196:
	cmp BYTE [r8+6],0
	jnz LB_3164
	POP_GRM_SCC
	jmp LB_3141
LB_3164:
	POP_GRM_FAIL 
	jmp LB_3141
LB_3141:
	cmp BYTE [r8+6],0
	jnz LB_3200
	jmp LB_3201
LB_3200:
	add rsp,8
	POP_GRM_FAIL
	jmp LB_3123
LB_3201:
	mov QWORD [rsp+8*1],r14
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi 
; .mov_ptn2 2'(= a44◂ [ a27◂ [ a18◂ [ ]{| l |}]] ) ⊢ 3'(= a44◂ [ a27◂ [ a18◂ [ ]{| l |}]] )
	mov r10,r9
; .mov_ptn 2'(= a44◂ [ a27◂ [ a18◂ [ ]{| l |}]] ) ⊢ 3'(= a44◂ [ a27◂ [ a18◂ [ ]{| l |}]] )
	mov rax,r8
	mov r9,rax
	mov r13,QWORD [rsp+16+8*1]
	mov r14,QWORD [rsp+8*1]
	jmp LB_3202
LB_3202
;; rsp=1 , %1879~3'(= a44◂ [ a27◂ [ a18◂ [ ]{| l |}]] ) %1855~1'(= r ) %1854~0'(= r ) %1853~8'(= a17◂ [ a21◂ [ a18◂ [ ]{| l |}]] ) 
; #198 { 8'(= a17◂ [ a21◂ [ a18◂ [ ]{| l |}]] ) 3'(= a44◂ [ a27◂ [ a18◂ [ ]{| l |}]] ) } ⊢ 0(<2)◂{ 8'(= a17◂ [ a21◂ [ a18◂ [ ]{| l |}]] ) 3'(= a44◂ [ a27◂ [ a18◂ [ ]{| l |}]] ) }
;; rsp=1 , %1880~0(<2)◂{ 8'(= a17◂ [ a21◂ [ a18◂ [ ]{| l |}]] ) 3'(= a44◂ [ a27◂ [ a18◂ [ ]{| l |}]] ) } %1855~1'(= r ) %1854~0'(= r ) 
; #24 0(<2)◂{ 8'(= a17◂ [ a21◂ [ a18◂ [ ]{| l |}]] ) 3'(= a44◂ [ a27◂ [ a18◂ [ ]{| l |}]] ) } ⊢ 0(<2)◂0(<2)◂{ 8'(= a17◂ [ a21◂ [ a18◂ [ ]{| l |}]] ) 3'(= a44◂ [ a27◂ [ a18◂ [ ]{| l |}]] ) }
;; rsp=1 , %1881~0(<2)◂0(<2)◂{ 8'(= a17◂ [ a21◂ [ a18◂ [ ]{| l |}]] ) 3'(= a44◂ [ a27◂ [ a18◂ [ ]{| l |}]] ) } %1855~1'(= r ) %1854~0'(= r ) 
; ∎ 0(<2)◂0(<2)◂{ 8'(= a17◂ [ a21◂ [ a18◂ [ ]{| l |}]] ) 3'(= a44◂ [ a27◂ [ a18◂ [ ]{| l |}]] ) }
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂0(<2)◂{ 8'(= a17◂ [ a21◂ [ a18◂ [ ]{| l |}]] ) 3'(= a44◂ [ a27◂ [ a18◂ [ ]{| l |}]] ) } ⊢ 2'(= a3◂ [ a44◂ [ *{ a17◂ [ a21◂ [ a18◂ [ ]{| l |}]]a44◂ [ a27◂ [ a18◂ [ ]{| l |}]]}]] )
; .mov_ptn 0(<2)◂0(<2)◂{ 8'(= a17◂ [ a21◂ [ a18◂ [ ]{| l |}]] ) 3'(= a44◂ [ a27◂ [ a18◂ [ ]{| l |}]] ) } ⊢ 2'(= a3◂ [ a44◂ [ *{ a17◂ [ a21◂ [ a18◂ [ ]{| l |}]]a44◂ [ a27◂ [ a18◂ [ ]{| l |}]]}]] )
	ALC_RCD 2, rax
	mov r13,rax
	mov rax,QWORD [rsp-8+8*1]
	mov QWORD [r13+8+8*0],rax
	mov rax,r9
	mov QWORD [r13+8+8*1],rax
	mov rax,r13
	mov BYTE [rax+6],0
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,8
	jmp LB_3203
LB_3203:
	cmp BYTE [r8+6],0
	jnz LB_3124
	POP_GRM_SCC
	jmp LB_3123
LB_3124:
	RB_GRM
	jmp LB_3206
LB_3205:
	add r14,1 
LB_3206:
	cmp r14,r9
	jge LB_3207
	JZ_LINE_SPC BYTE [r13+8+r14], LB_3205
LB_3207
	call GRM_224
	cmp BYTE [r8+6],0
	jnz LB_3210
	jmp LB_3211
LB_3210:
	jmp LB_3208
LB_3211:
	sub rsp,16
; .mov_ptn2 2'(= *{ rr} ) ⊢ { 8'(= r ) 9'(= r ) }
; .mov_ptn 2'(= *{ rr} ) ⊢ { 8'(= r ) 9'(= r ) }
	mov r10, QWORD [r8+8]
	mov QWORD [rsp-8+8*2],r10
	mov r11, QWORD [r8+16]
	mov QWORD [rsp-8+8*1],r11
	mov rdi,r8
	FREE_RCD 2,rdi
	jmp LB_3209
LB_3208:
	add rsp,0
	jmp LB_3204
LB_3209:
	jmp LB_3213
LB_3212:
	add r14,1 
LB_3213:
	cmp r14,r9
	jge LB_3214
	JZ_LINE_SPC BYTE [r13+8+r14], LB_3212
LB_3214
	call GRM_242
	cmp BYTE [r8+6],0
	jnz LB_3217
	jmp LB_3218
LB_3217:
	jmp LB_3215
LB_3218:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a44◂ [ a16◂ [ *{ a17◂ [ a23◂ [ a18◂ [ ]{| l |}]]a2◂ [ a30◂ [ a18◂ [ ]{| l |}]]a29◂ [ a18◂ [ ]{| l |}]}]] ) ⊢ 10'(= a44◂ [ a16◂ [ *{ a17◂ [ a23◂ [ a18◂ [ ]{| l |}]]a2◂ [ a30◂ [ a18◂ [ ]{| l |}]]a29◂ [ a18◂ [ ]{| l |}]}]] )
; .mov_ptn 2'(= a44◂ [ a16◂ [ *{ a17◂ [ a23◂ [ a18◂ [ ]{| l |}]]a2◂ [ a30◂ [ a18◂ [ ]{| l |}]]a29◂ [ a18◂ [ ]{| l |}]}]] ) ⊢ 10'(= a44◂ [ a16◂ [ *{ a17◂ [ a23◂ [ a18◂ [ ]{| l |}]]a2◂ [ a30◂ [ a18◂ [ ]{| l |}]]a29◂ [ a18◂ [ ]{| l |}]}]] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_3216
LB_3215:
	add rsp,16
	jmp LB_3204
LB_3216:
	mov QWORD [rsp+8*3],r14
	mov r13,QWORD [rsp+16+8*3]
	mov r14,QWORD [rsp+8*3]
	jmp LB_3219
LB_3219
;; rsp=3 , %1886~1'(= r ) %1885~0'(= r ) %1884~10'(= a44◂ [ a16◂ [ *{ a17◂ [ a23◂ [ a18◂ [ ]{| l |}]]a2◂ [ a30◂ [ a18◂ [ ]{| l |}]]a29◂ [ a18◂ [ ]{| l |}]}]] ) %1883~9'(= r ) %1882~8'(= r ) 
;; ? 10'(= a44◂ [ a16◂ [ *{ a17◂ [ a23◂ [ a18◂ [ ]{| l |}]]a2◂ [ a30◂ [ a18◂ [ ]{| l |}]]a29◂ [ a18◂ [ ]{| l |}]}]] ) ⊢ 0(<2)◂2'(= a16◂ [ *{ a17◂ [ a23◂ [ a18◂ [ ]{| l |}]]a2◂ [ a30◂ [ a18◂ [ ]{| l |}]]a29◂ [ a18◂ [ ]{| l |}]}] )
	mov rdi,QWORD [rsp-8+8*1]
	cmp BYTE [rdi+6],0
	jnz LB_3222
	jmp LB_3223
LB_3222:
	jmp LB_3221
LB_3223:
	mov QWORD [GBG_VCT+8*0],rdi
	mov r8,QWORD [rdi+8]
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_LN rdi
;; rsp=3 , %1888~2'(= a16◂ [ *{ a17◂ [ a23◂ [ a18◂ [ ]{| l |}]]a2◂ [ a30◂ [ a18◂ [ ]{| l |}]]a29◂ [ a18◂ [ ]{| l |}]}] ) %1886~1'(= r ) %1885~0'(= r ) %1883~9'(= r ) %1882~8'(= r ) 
; #22 { } ⊢ 1(<2)◂{ }
;; rsp=3 , %1889~1(<2)◂{ } %1888~2'(= a16◂ [ *{ a17◂ [ a23◂ [ a18◂ [ ]{| l |}]]a2◂ [ a30◂ [ a18◂ [ ]{| l |}]]a29◂ [ a18◂ [ ]{| l |}]}] ) %1886~1'(= r ) %1885~0'(= r ) %1883~9'(= r ) %1882~8'(= r ) 
; $ %[ "glb_etr id_line line_res 0" ] ⊢ %[ "glb_etr id_line line_res 0" ]
;; rsp=3 , %1890~%[ "glb_etr id_line line_res 0" ] %1889~1(<2)◂{ } %1888~2'(= a16◂ [ *{ a17◂ [ a23◂ [ a18◂ [ ]{| l |}]]a2◂ [ a30◂ [ a18◂ [ ]{| l |}]]a29◂ [ a18◂ [ ]{| l |}]}] ) %1886~1'(= r ) %1885~0'(= r ) %1883~9'(= r ) %1882~8'(= r ) 
; #23 { { 8'(= r ) 9'(= r ) %[ "glb_etr id_line line_res 0" ] } 1(<2)◂{ } } ⊢ 0(<2)◂{ { 8'(= r ) 9'(= r ) %[ "glb_etr id_line line_res 0" ] } 1(<2)◂{ } }
;; rsp=3 , %1891~0(<2)◂{ { 8'(= r ) 9'(= r ) %[ "glb_etr id_line line_res 0" ] } 1(<2)◂{ } } %1888~2'(= a16◂ [ *{ a17◂ [ a23◂ [ a18◂ [ ]{| l |}]]a2◂ [ a30◂ [ a18◂ [ ]{| l |}]]a29◂ [ a18◂ [ ]{| l |}]}] ) %1886~1'(= r ) %1885~0'(= r ) 
; #197 0(<2)◂{ { 8'(= r ) 9'(= r ) %[ "glb_etr id_line line_res 0" ] } 1(<2)◂{ } } ⊢ 1(<2)◂0(<2)◂{ { 8'(= r ) 9'(= r ) %[ "glb_etr id_line line_res 0" ] } 1(<2)◂{ } }
;; rsp=3 , %1892~1(<2)◂0(<2)◂{ { 8'(= r ) 9'(= r ) %[ "glb_etr id_line line_res 0" ] } 1(<2)◂{ } } %1888~2'(= a16◂ [ *{ a17◂ [ a23◂ [ a18◂ [ ]{| l |}]]a2◂ [ a30◂ [ a18◂ [ ]{| l |}]]a29◂ [ a18◂ [ ]{| l |}]}] ) %1886~1'(= r ) %1885~0'(= r ) 
; #24 1(<2)◂0(<2)◂{ { 8'(= r ) 9'(= r ) %[ "glb_etr id_line line_res 0" ] } 1(<2)◂{ } } ⊢ 0(<2)◂1(<2)◂0(<2)◂{ { 8'(= r ) 9'(= r ) %[ "glb_etr id_line line_res 0" ] } 1(<2)◂{ } }
;; rsp=3 , %1893~0(<2)◂1(<2)◂0(<2)◂{ { 8'(= r ) 9'(= r ) %[ "glb_etr id_line line_res 0" ] } 1(<2)◂{ } } %1888~2'(= a16◂ [ *{ a17◂ [ a23◂ [ a18◂ [ ]{| l |}]]a2◂ [ a30◂ [ a18◂ [ ]{| l |}]]a29◂ [ a18◂ [ ]{| l |}]}] ) %1886~1'(= r ) %1885~0'(= r ) 
; ∎ 0(<2)◂1(<2)◂0(<2)◂{ { 8'(= r ) 9'(= r ) %[ "glb_etr id_line line_res 0" ] } 1(<2)◂{ } }
; .dlt.ptn 2'(= a16◂ [ *{ a17◂ [ a23◂ [ a18◂ [ ]{| l |}]]a2◂ [ a30◂ [ a18◂ [ ]{| l |}]]a29◂ [ a18◂ [ ]{| l |}]}] )
	mov rdi,r8
	C_PUSH_REGS
	mov r8,rdi
	call LB_814
	C_POP_REGS
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂1(<2)◂0(<2)◂{ { 8'(= r ) 9'(= r ) %[ "glb_etr id_line line_res 0" ] } 1(<2)◂{ } } ⊢ 2'(= a3◂ [ a44◂ [ *{ a17◂ [ a21◂ [ a18◂ [ ]{| l |}]]a44◂ [ a27◂ [ a18◂ [ ]{| l |}]]}]] )
; .mov_ptn 0(<2)◂1(<2)◂0(<2)◂{ { 8'(= r ) 9'(= r ) %[ "glb_etr id_line line_res 0" ] } 1(<2)◂{ } } ⊢ 2'(= a3◂ [ a44◂ [ *{ a17◂ [ a21◂ [ a18◂ [ ]{| l |}]]a44◂ [ a27◂ [ a18◂ [ ]{| l |}]]}]] )
	ALC_RCD 2, rax
	mov r13,rax
	ALC_RCD 3, rax
	mov r14,rax
	mov rax,QWORD [rsp-8+8*3]
	mov QWORD [r14+8+8*0],rax
	mov rax,QWORD [rsp-8+8*2]
	mov QWORD [r14+8+8*1],rax
	mov rsi,1  
	mov rdi,40
	xor rax,rax 
	C_CALL_SF calloc
	mov QWORD [rax],26
	mov BYTE [rax+8+0],103
	mov BYTE [rax+8+1],108
	mov BYTE [rax+8+2],98
	mov BYTE [rax+8+3],95
	mov BYTE [rax+8+4],101
	mov BYTE [rax+8+5],116
	mov BYTE [rax+8+6],114
	mov BYTE [rax+8+7],32
	mov BYTE [rax+8+8],105
	mov BYTE [rax+8+9],100
	mov BYTE [rax+8+10],95
	mov BYTE [rax+8+11],108
	mov BYTE [rax+8+12],105
	mov BYTE [rax+8+13],110
	mov BYTE [rax+8+14],101
	mov BYTE [rax+8+15],32
	mov BYTE [rax+8+16],108
	mov BYTE [rax+8+17],105
	mov BYTE [rax+8+18],110
	mov BYTE [rax+8+19],101
	mov BYTE [rax+8+20],95
	mov BYTE [rax+8+21],114
	mov BYTE [rax+8+22],101
	mov BYTE [rax+8+23],115
	mov BYTE [rax+8+24],32
	mov BYTE [rax+8+25],48
	mov QWORD [r14+8+8*2],rax
	mov rax,r14
	mov QWORD [r13+8+8*0],rax
	mov rax,unt 
	mov rax,unt_1
	mov QWORD [r13+8+8*1],rax
	mov rax,r13
	mov BYTE [rax+6],0
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],1
	mov QWORD [rax+8],rdi
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,24
	jmp LB_3220
LB_3221:
;; ?. 10'(= a44◂ [ a16◂ [ *{ a17◂ [ a23◂ [ a18◂ [ ]{| l |}]]a2◂ [ a30◂ [ a18◂ [ ]{| l |}]]a29◂ [ a18◂ [ ]{| l |}]}]] ) ⊢ 1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] )
	mov QWORD [GBG_VCT+8*0],rdi
	mov r8,QWORD [rdi+8]
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_LN rdi
;; rsp=3 , %1887~2'(= a2◂ [ *{ rr{| l |}}] ) %1886~1'(= r ) %1885~0'(= r ) %1883~9'(= r ) %1882~8'(= r ) 
; $ %[ "glb_etr id_line line_res 1" ] ⊢ %[ "glb_etr id_line line_res 1" ]
;; rsp=3 , %1894~%[ "glb_etr id_line line_res 1" ] %1887~2'(= a2◂ [ *{ rr{| l |}}] ) %1886~1'(= r ) %1885~0'(= r ) %1883~9'(= r ) %1882~8'(= r ) 
; #23 { { 8'(= r ) 9'(= r ) %[ "glb_etr id_line line_res 1" ] } 2'(= a2◂ [ *{ rr{| l |}}] ) } ⊢ 0(<2)◂{ { 8'(= r ) 9'(= r ) %[ "glb_etr id_line line_res 1" ] } 2'(= a2◂ [ *{ rr{| l |}}] ) }
;; rsp=3 , %1895~0(<2)◂{ { 8'(= r ) 9'(= r ) %[ "glb_etr id_line line_res 1" ] } 2'(= a2◂ [ *{ rr{| l |}}] ) } %1886~1'(= r ) %1885~0'(= r ) 
; #197 0(<2)◂{ { 8'(= r ) 9'(= r ) %[ "glb_etr id_line line_res 1" ] } 2'(= a2◂ [ *{ rr{| l |}}] ) } ⊢ 1(<2)◂0(<2)◂{ { 8'(= r ) 9'(= r ) %[ "glb_etr id_line line_res 1" ] } 2'(= a2◂ [ *{ rr{| l |}}] ) }
;; rsp=3 , %1896~1(<2)◂0(<2)◂{ { 8'(= r ) 9'(= r ) %[ "glb_etr id_line line_res 1" ] } 2'(= a2◂ [ *{ rr{| l |}}] ) } %1886~1'(= r ) %1885~0'(= r ) 
; #24 1(<2)◂0(<2)◂{ { 8'(= r ) 9'(= r ) %[ "glb_etr id_line line_res 1" ] } 2'(= a2◂ [ *{ rr{| l |}}] ) } ⊢ 0(<2)◂1(<2)◂0(<2)◂{ { 8'(= r ) 9'(= r ) %[ "glb_etr id_line line_res 1" ] } 2'(= a2◂ [ *{ rr{| l |}}] ) }
;; rsp=3 , %1897~0(<2)◂1(<2)◂0(<2)◂{ { 8'(= r ) 9'(= r ) %[ "glb_etr id_line line_res 1" ] } 2'(= a2◂ [ *{ rr{| l |}}] ) } %1886~1'(= r ) %1885~0'(= r ) 
; ∎ 0(<2)◂1(<2)◂0(<2)◂{ { 8'(= r ) 9'(= r ) %[ "glb_etr id_line line_res 1" ] } 2'(= a2◂ [ *{ rr{| l |}}] ) }
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂1(<2)◂0(<2)◂{ { 8'(= r ) 9'(= r ) %[ "glb_etr id_line line_res 1" ] } 2'(= a2◂ [ *{ rr{| l |}}] ) } ⊢ 2'(= a3◂ [ a44◂ [ *{ a17◂ [ a21◂ [ a18◂ [ ]{| l |}]]a44◂ [ a27◂ [ a18◂ [ ]{| l |}]]}]] )
	mov r13,r8
; .mov_ptn 0(<2)◂1(<2)◂0(<2)◂{ { 8'(= r ) 9'(= r ) %[ "glb_etr id_line line_res 1" ] } 0'(= a2◂ [ *{ rr{| l |}}] ) } ⊢ 2'(= a3◂ [ a44◂ [ *{ a17◂ [ a21◂ [ a18◂ [ ]{| l |}]]a44◂ [ a27◂ [ a18◂ [ ]{| l |}]]}]] )
	ALC_RCD 2, rax
	mov r14,rax
	ALC_RCD 3, rax
	mov r9,rax
	mov rax,QWORD [rsp-8+8*3]
	mov QWORD [r9+8+8*0],rax
	mov rax,QWORD [rsp-8+8*2]
	mov QWORD [r9+8+8*1],rax
	mov rsi,1  
	mov rdi,40
	xor rax,rax 
	C_CALL_SF calloc
	mov QWORD [rax],26
	mov BYTE [rax+8+0],103
	mov BYTE [rax+8+1],108
	mov BYTE [rax+8+2],98
	mov BYTE [rax+8+3],95
	mov BYTE [rax+8+4],101
	mov BYTE [rax+8+5],116
	mov BYTE [rax+8+6],114
	mov BYTE [rax+8+7],32
	mov BYTE [rax+8+8],105
	mov BYTE [rax+8+9],100
	mov BYTE [rax+8+10],95
	mov BYTE [rax+8+11],108
	mov BYTE [rax+8+12],105
	mov BYTE [rax+8+13],110
	mov BYTE [rax+8+14],101
	mov BYTE [rax+8+15],32
	mov BYTE [rax+8+16],108
	mov BYTE [rax+8+17],105
	mov BYTE [rax+8+18],110
	mov BYTE [rax+8+19],101
	mov BYTE [rax+8+20],95
	mov BYTE [rax+8+21],114
	mov BYTE [rax+8+22],101
	mov BYTE [rax+8+23],115
	mov BYTE [rax+8+24],32
	mov BYTE [rax+8+25],49
	mov QWORD [r9+8+8*2],rax
	mov rax,r9
	mov QWORD [r14+8+8*0],rax
	mov rax,r13
	mov QWORD [r14+8+8*1],rax
	mov rax,r14
	mov BYTE [rax+6],0
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],1
	mov QWORD [rax+8],rdi
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,24
	jmp LB_3220
LB_3220:
	cmp BYTE [r8+6],0
	jnz LB_3204
	POP_GRM_SCC
	jmp LB_3123
LB_3204:
	RB_GRM
	jmp LB_3226
LB_3225:
	add r14,1 
LB_3226:
	cmp r14,r9
	jge LB_3227
	JZ_LINE_SPC BYTE [r13+8+r14], LB_3225
LB_3227
	call GRM_224
	cmp BYTE [r8+6],0
	jnz LB_3230
	jmp LB_3231
LB_3230:
	jmp LB_3228
LB_3231:
	sub rsp,16
; .mov_ptn2 2'(= *{ rr} ) ⊢ { 8'(= r ) 9'(= r ) }
; .mov_ptn 2'(= *{ rr} ) ⊢ { 8'(= r ) 9'(= r ) }
	mov r10, QWORD [r8+8]
	mov QWORD [rsp-8+8*2],r10
	mov r11, QWORD [r8+16]
	mov QWORD [rsp-8+8*1],r11
	mov rdi,r8
	FREE_RCD 2,rdi
	jmp LB_3229
LB_3228:
	add rsp,0
	jmp LB_3224
LB_3229:
	jmp LB_3233
LB_3232:
	add r14,1 
LB_3233:
	cmp r14,r9
	jge LB_3234
	JZ_LINE_SPC BYTE [r13+8+r14], LB_3232
LB_3234
	call GRM_239
	cmp BYTE [r8+6],0
	jnz LB_3237
	jmp LB_3238
LB_3237:
	jmp LB_3235
LB_3238:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a44◂ [ a26◂ [ a18◂ [ ]{| l |}]] ) ⊢ 10'(= a44◂ [ a26◂ [ a18◂ [ ]{| l |}]] )
; .mov_ptn 2'(= a44◂ [ a26◂ [ a18◂ [ ]{| l |}]] ) ⊢ 10'(= a44◂ [ a26◂ [ a18◂ [ ]{| l |}]] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_3236
LB_3235:
	add rsp,16
	jmp LB_3224
LB_3236:
	mov QWORD [rsp+8*3],r14
	mov r13,QWORD [rsp+16+8*3]
	mov r14,QWORD [rsp+8*3]
	jmp LB_3239
LB_3239
;; rsp=3 , %1902~1'(= r ) %1901~0'(= r ) %1900~10'(= a44◂ [ a26◂ [ a18◂ [ ]{| l |}]] ) %1899~9'(= r ) %1898~8'(= r ) 
;; ? 10'(= a44◂ [ a26◂ [ a18◂ [ ]{| l |}]] ) ⊢ 0(<2)◂2'(= a26◂ [ a18◂ [ ]{| l |}] )
	mov rdi,QWORD [rsp-8+8*1]
	cmp BYTE [rdi+6],0
	jnz LB_3242
	jmp LB_3243
LB_3242:
	jmp LB_3241
LB_3243:
	mov QWORD [GBG_VCT+8*0],rdi
	mov r8,QWORD [rdi+8]
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_LN rdi
;; rsp=3 , %1904~2'(= a26◂ [ a18◂ [ ]{| l |}] ) %1902~1'(= r ) %1901~0'(= r ) %1899~9'(= r ) %1898~8'(= r ) 
; #22 { } ⊢ 1(<2)◂{ }
;; rsp=3 , %1905~1(<2)◂{ } %1904~2'(= a26◂ [ a18◂ [ ]{| l |}] ) %1902~1'(= r ) %1901~0'(= r ) %1899~9'(= r ) %1898~8'(= r ) 
; $ %[ "glb_etr id_line line_res 2" ] ⊢ %[ "glb_etr id_line line_res 2" ]
;; rsp=3 , %1906~%[ "glb_etr id_line line_res 2" ] %1905~1(<2)◂{ } %1904~2'(= a26◂ [ a18◂ [ ]{| l |}] ) %1902~1'(= r ) %1901~0'(= r ) %1899~9'(= r ) %1898~8'(= r ) 
; #23 { { 8'(= r ) 9'(= r ) %[ "glb_etr id_line line_res 2" ] } 1(<2)◂{ } } ⊢ 0(<2)◂{ { 8'(= r ) 9'(= r ) %[ "glb_etr id_line line_res 2" ] } 1(<2)◂{ } }
;; rsp=3 , %1907~0(<2)◂{ { 8'(= r ) 9'(= r ) %[ "glb_etr id_line line_res 2" ] } 1(<2)◂{ } } %1904~2'(= a26◂ [ a18◂ [ ]{| l |}] ) %1902~1'(= r ) %1901~0'(= r ) 
; #197 0(<2)◂{ { 8'(= r ) 9'(= r ) %[ "glb_etr id_line line_res 2" ] } 1(<2)◂{ } } ⊢ 1(<2)◂0(<2)◂{ { 8'(= r ) 9'(= r ) %[ "glb_etr id_line line_res 2" ] } 1(<2)◂{ } }
;; rsp=3 , %1908~1(<2)◂0(<2)◂{ { 8'(= r ) 9'(= r ) %[ "glb_etr id_line line_res 2" ] } 1(<2)◂{ } } %1904~2'(= a26◂ [ a18◂ [ ]{| l |}] ) %1902~1'(= r ) %1901~0'(= r ) 
; #24 1(<2)◂0(<2)◂{ { 8'(= r ) 9'(= r ) %[ "glb_etr id_line line_res 2" ] } 1(<2)◂{ } } ⊢ 0(<2)◂1(<2)◂0(<2)◂{ { 8'(= r ) 9'(= r ) %[ "glb_etr id_line line_res 2" ] } 1(<2)◂{ } }
;; rsp=3 , %1909~0(<2)◂1(<2)◂0(<2)◂{ { 8'(= r ) 9'(= r ) %[ "glb_etr id_line line_res 2" ] } 1(<2)◂{ } } %1904~2'(= a26◂ [ a18◂ [ ]{| l |}] ) %1902~1'(= r ) %1901~0'(= r ) 
; ∎ 0(<2)◂1(<2)◂0(<2)◂{ { 8'(= r ) 9'(= r ) %[ "glb_etr id_line line_res 2" ] } 1(<2)◂{ } }
; .dlt.ptn 2'(= a26◂ [ a18◂ [ ]{| l |}] )
	mov rdi,r8
	C_PUSH_REGS
	mov r8,rdi
	call LB_797
	C_POP_REGS
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂1(<2)◂0(<2)◂{ { 8'(= r ) 9'(= r ) %[ "glb_etr id_line line_res 2" ] } 1(<2)◂{ } } ⊢ 2'(= a3◂ [ a44◂ [ *{ a17◂ [ a21◂ [ a18◂ [ ]{| l |}]]a44◂ [ a27◂ [ a18◂ [ ]{| l |}]]}]] )
; .mov_ptn 0(<2)◂1(<2)◂0(<2)◂{ { 8'(= r ) 9'(= r ) %[ "glb_etr id_line line_res 2" ] } 1(<2)◂{ } } ⊢ 2'(= a3◂ [ a44◂ [ *{ a17◂ [ a21◂ [ a18◂ [ ]{| l |}]]a44◂ [ a27◂ [ a18◂ [ ]{| l |}]]}]] )
	ALC_RCD 2, rax
	mov r13,rax
	ALC_RCD 3, rax
	mov r14,rax
	mov rax,QWORD [rsp-8+8*3]
	mov QWORD [r14+8+8*0],rax
	mov rax,QWORD [rsp-8+8*2]
	mov QWORD [r14+8+8*1],rax
	mov rsi,1  
	mov rdi,40
	xor rax,rax 
	C_CALL_SF calloc
	mov QWORD [rax],26
	mov BYTE [rax+8+0],103
	mov BYTE [rax+8+1],108
	mov BYTE [rax+8+2],98
	mov BYTE [rax+8+3],95
	mov BYTE [rax+8+4],101
	mov BYTE [rax+8+5],116
	mov BYTE [rax+8+6],114
	mov BYTE [rax+8+7],32
	mov BYTE [rax+8+8],105
	mov BYTE [rax+8+9],100
	mov BYTE [rax+8+10],95
	mov BYTE [rax+8+11],108
	mov BYTE [rax+8+12],105
	mov BYTE [rax+8+13],110
	mov BYTE [rax+8+14],101
	mov BYTE [rax+8+15],32
	mov BYTE [rax+8+16],108
	mov BYTE [rax+8+17],105
	mov BYTE [rax+8+18],110
	mov BYTE [rax+8+19],101
	mov BYTE [rax+8+20],95
	mov BYTE [rax+8+21],114
	mov BYTE [rax+8+22],101
	mov BYTE [rax+8+23],115
	mov BYTE [rax+8+24],32
	mov BYTE [rax+8+25],50
	mov QWORD [r14+8+8*2],rax
	mov rax,r14
	mov QWORD [r13+8+8*0],rax
	mov rax,unt 
	mov rax,unt_1
	mov QWORD [r13+8+8*1],rax
	mov rax,r13
	mov BYTE [rax+6],0
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],1
	mov QWORD [rax+8],rdi
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,24
	jmp LB_3240
LB_3241:
;; ?. 10'(= a44◂ [ a26◂ [ a18◂ [ ]{| l |}]] ) ⊢ 1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] )
	mov QWORD [GBG_VCT+8*0],rdi
	mov r8,QWORD [rdi+8]
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_LN rdi
;; rsp=3 , %1903~2'(= a2◂ [ *{ rr{| l |}}] ) %1902~1'(= r ) %1901~0'(= r ) %1899~9'(= r ) %1898~8'(= r ) 
; $ %[ "glb_etr id_line line_res 3" ] ⊢ %[ "glb_etr id_line line_res 3" ]
;; rsp=3 , %1910~%[ "glb_etr id_line line_res 3" ] %1903~2'(= a2◂ [ *{ rr{| l |}}] ) %1902~1'(= r ) %1901~0'(= r ) %1899~9'(= r ) %1898~8'(= r ) 
; #23 { { 8'(= r ) 9'(= r ) %[ "glb_etr id_line line_res 3" ] } 2'(= a2◂ [ *{ rr{| l |}}] ) } ⊢ 0(<2)◂{ { 8'(= r ) 9'(= r ) %[ "glb_etr id_line line_res 3" ] } 2'(= a2◂ [ *{ rr{| l |}}] ) }
;; rsp=3 , %1911~0(<2)◂{ { 8'(= r ) 9'(= r ) %[ "glb_etr id_line line_res 3" ] } 2'(= a2◂ [ *{ rr{| l |}}] ) } %1902~1'(= r ) %1901~0'(= r ) 
; #197 0(<2)◂{ { 8'(= r ) 9'(= r ) %[ "glb_etr id_line line_res 3" ] } 2'(= a2◂ [ *{ rr{| l |}}] ) } ⊢ 1(<2)◂0(<2)◂{ { 8'(= r ) 9'(= r ) %[ "glb_etr id_line line_res 3" ] } 2'(= a2◂ [ *{ rr{| l |}}] ) }
;; rsp=3 , %1912~1(<2)◂0(<2)◂{ { 8'(= r ) 9'(= r ) %[ "glb_etr id_line line_res 3" ] } 2'(= a2◂ [ *{ rr{| l |}}] ) } %1902~1'(= r ) %1901~0'(= r ) 
; #24 1(<2)◂0(<2)◂{ { 8'(= r ) 9'(= r ) %[ "glb_etr id_line line_res 3" ] } 2'(= a2◂ [ *{ rr{| l |}}] ) } ⊢ 0(<2)◂1(<2)◂0(<2)◂{ { 8'(= r ) 9'(= r ) %[ "glb_etr id_line line_res 3" ] } 2'(= a2◂ [ *{ rr{| l |}}] ) }
;; rsp=3 , %1913~0(<2)◂1(<2)◂0(<2)◂{ { 8'(= r ) 9'(= r ) %[ "glb_etr id_line line_res 3" ] } 2'(= a2◂ [ *{ rr{| l |}}] ) } %1902~1'(= r ) %1901~0'(= r ) 
; ∎ 0(<2)◂1(<2)◂0(<2)◂{ { 8'(= r ) 9'(= r ) %[ "glb_etr id_line line_res 3" ] } 2'(= a2◂ [ *{ rr{| l |}}] ) }
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂1(<2)◂0(<2)◂{ { 8'(= r ) 9'(= r ) %[ "glb_etr id_line line_res 3" ] } 2'(= a2◂ [ *{ rr{| l |}}] ) } ⊢ 2'(= a3◂ [ a44◂ [ *{ a17◂ [ a21◂ [ a18◂ [ ]{| l |}]]a44◂ [ a27◂ [ a18◂ [ ]{| l |}]]}]] )
	mov r13,r8
; .mov_ptn 0(<2)◂1(<2)◂0(<2)◂{ { 8'(= r ) 9'(= r ) %[ "glb_etr id_line line_res 3" ] } 0'(= a2◂ [ *{ rr{| l |}}] ) } ⊢ 2'(= a3◂ [ a44◂ [ *{ a17◂ [ a21◂ [ a18◂ [ ]{| l |}]]a44◂ [ a27◂ [ a18◂ [ ]{| l |}]]}]] )
	ALC_RCD 2, rax
	mov r14,rax
	ALC_RCD 3, rax
	mov r9,rax
	mov rax,QWORD [rsp-8+8*3]
	mov QWORD [r9+8+8*0],rax
	mov rax,QWORD [rsp-8+8*2]
	mov QWORD [r9+8+8*1],rax
	mov rsi,1  
	mov rdi,40
	xor rax,rax 
	C_CALL_SF calloc
	mov QWORD [rax],26
	mov BYTE [rax+8+0],103
	mov BYTE [rax+8+1],108
	mov BYTE [rax+8+2],98
	mov BYTE [rax+8+3],95
	mov BYTE [rax+8+4],101
	mov BYTE [rax+8+5],116
	mov BYTE [rax+8+6],114
	mov BYTE [rax+8+7],32
	mov BYTE [rax+8+8],105
	mov BYTE [rax+8+9],100
	mov BYTE [rax+8+10],95
	mov BYTE [rax+8+11],108
	mov BYTE [rax+8+12],105
	mov BYTE [rax+8+13],110
	mov BYTE [rax+8+14],101
	mov BYTE [rax+8+15],32
	mov BYTE [rax+8+16],108
	mov BYTE [rax+8+17],105
	mov BYTE [rax+8+18],110
	mov BYTE [rax+8+19],101
	mov BYTE [rax+8+20],95
	mov BYTE [rax+8+21],114
	mov BYTE [rax+8+22],101
	mov BYTE [rax+8+23],115
	mov BYTE [rax+8+24],32
	mov BYTE [rax+8+25],51
	mov QWORD [r9+8+8*2],rax
	mov rax,r9
	mov QWORD [r14+8+8*0],rax
	mov rax,r13
	mov QWORD [r14+8+8*1],rax
	mov rax,r14
	mov BYTE [rax+6],0
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],1
	mov QWORD [rax+8],rdi
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,24
	jmp LB_3240
LB_3240:
	cmp BYTE [r8+6],0
	jnz LB_3224
	POP_GRM_SCC
	jmp LB_3123
LB_3224:
	POP_GRM_FAIL 
	jmp LB_3123
LB_3123:
	cmp BYTE [r8+6],0
	jnz LB_3244
	jmp LB_3245
LB_3244:
	add rsp,8
	POP_GRM_FAIL
	ret
LB_3245:
	mov QWORD [rsp+8*1],r14
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi 
; .mov_ptn2 2'(= a44◂ [ *{ a17◂ [ a21◂ [ a18◂ [ ]{| l |}]]a44◂ [ a27◂ [ a18◂ [ ]{| l |}]]}] ) ⊢ 3'(= a44◂ [ *{ a17◂ [ a21◂ [ a18◂ [ ]{| l |}]]a44◂ [ a27◂ [ a18◂ [ ]{| l |}]]}] )
	mov r10,r9
; .mov_ptn 2'(= a44◂ [ *{ a17◂ [ a21◂ [ a18◂ [ ]{| l |}]]a44◂ [ a27◂ [ a18◂ [ ]{| l |}]]}] ) ⊢ 3'(= a44◂ [ *{ a17◂ [ a21◂ [ a18◂ [ ]{| l |}]]a44◂ [ a27◂ [ a18◂ [ ]{| l |}]]}] )
	mov rax,r8
	mov r9,rax
	mov r13,QWORD [rsp+16+8*1]
	mov r14,QWORD [rsp+8*1]
	jmp LB_3246
LB_3246
;; rsp=1 , %1914~3'(= a44◂ [ *{ a17◂ [ a21◂ [ a18◂ [ ]{| l |}]]a44◂ [ a27◂ [ a18◂ [ ]{| l |}]]}] ) %1852~1'(= r ) %1851~0'(= r ) %1850~8'(= a44◂ [ *{ }] ) 
;; ? 3'(= a44◂ [ *{ a17◂ [ a21◂ [ a18◂ [ ]{| l |}]]a44◂ [ a27◂ [ a18◂ [ ]{| l |}]]}] ) ⊢ 0(<2)◂{ 2'(= a17◂ [ a21◂ [ a18◂ [ ]{| l |}]] ) 4'(= a44◂ [ a27◂ [ a18◂ [ ]{| l |}]] ) }
	mov rdi,r9
	cmp BYTE [rdi+6],0
	jnz LB_3249
	jmp LB_3250
LB_3249:
	jmp LB_3248
LB_3250:
	mov r8, QWORD [r9+8]
	mov r10, QWORD [r9+16]
	mov QWORD [GBG_VCT+8*0],r9
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_RCD 2,rdi
;; rsp=1 , %1917~4'(= a44◂ [ a27◂ [ a18◂ [ ]{| l |}]] ) %1916~2'(= a17◂ [ a21◂ [ a18◂ [ ]{| l |}]] ) %1852~1'(= r ) %1851~0'(= r ) %1850~8'(= a44◂ [ *{ }] ) 
;; ? 4'(= a44◂ [ a27◂ [ a18◂ [ ]{| l |}]] ) ⊢ 0(<2)◂3'(= a27◂ [ a18◂ [ ]{| l |}] )
	mov rdi,r10
	cmp BYTE [rdi+6],0
	jnz LB_3252
	jmp LB_3253
LB_3252:
	jmp LB_3251
LB_3253:
	mov QWORD [GBG_VCT+8*0],rdi
	mov r9,QWORD [rdi+8]
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_LN rdi
;; rsp=1 , %1919~3'(= a27◂ [ a18◂ [ ]{| l |}] ) %1916~2'(= a17◂ [ a21◂ [ a18◂ [ ]{| l |}]] ) %1852~1'(= r ) %1851~0'(= r ) %1850~8'(= a44◂ [ *{ }] ) 
; #132 { 2'(= a17◂ [ a21◂ [ a18◂ [ ]{| l |}]] ) 3'(= a27◂ [ a18◂ [ ]{| l |}] ) } ⊢ 4(<7)◂{ 2'(= a17◂ [ a21◂ [ a18◂ [ ]{| l |}]] ) 3'(= a27◂ [ a18◂ [ ]{| l |}] ) }
;; rsp=1 , %1920~4(<7)◂{ 2'(= a17◂ [ a21◂ [ a18◂ [ ]{| l |}]] ) 3'(= a27◂ [ a18◂ [ ]{| l |}] ) } %1852~1'(= r ) %1851~0'(= r ) %1850~8'(= a44◂ [ *{ }] ) 
; #198 4(<7)◂{ 2'(= a17◂ [ a21◂ [ a18◂ [ ]{| l |}]] ) 3'(= a27◂ [ a18◂ [ ]{| l |}] ) } ⊢ 0(<2)◂4(<7)◂{ 2'(= a17◂ [ a21◂ [ a18◂ [ ]{| l |}]] ) 3'(= a27◂ [ a18◂ [ ]{| l |}] ) }
;; rsp=1 , %1921~0(<2)◂4(<7)◂{ 2'(= a17◂ [ a21◂ [ a18◂ [ ]{| l |}]] ) 3'(= a27◂ [ a18◂ [ ]{| l |}] ) } %1852~1'(= r ) %1851~0'(= r ) %1850~8'(= a44◂ [ *{ }] ) 
; #24 0(<2)◂4(<7)◂{ 2'(= a17◂ [ a21◂ [ a18◂ [ ]{| l |}]] ) 3'(= a27◂ [ a18◂ [ ]{| l |}] ) } ⊢ 0(<2)◂0(<2)◂4(<7)◂{ 2'(= a17◂ [ a21◂ [ a18◂ [ ]{| l |}]] ) 3'(= a27◂ [ a18◂ [ ]{| l |}] ) }
;; rsp=1 , %1922~0(<2)◂0(<2)◂4(<7)◂{ 2'(= a17◂ [ a21◂ [ a18◂ [ ]{| l |}]] ) 3'(= a27◂ [ a18◂ [ ]{| l |}] ) } %1852~1'(= r ) %1851~0'(= r ) %1850~8'(= a44◂ [ *{ }] ) 
; ∎ 0(<2)◂0(<2)◂4(<7)◂{ 2'(= a17◂ [ a21◂ [ a18◂ [ ]{| l |}]] ) 3'(= a27◂ [ a18◂ [ ]{| l |}] ) }
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 8'(= a44◂ [ *{ }] )
	mov rdi,QWORD [rsp-8+8*1]
	C_PUSH_REGS
	mov r8,rdi
	call LB_1876
	C_POP_REGS
; .mov_ptn2 0(<2)◂0(<2)◂4(<7)◂{ 2'(= a17◂ [ a21◂ [ a18◂ [ ]{| l |}]] ) 3'(= a27◂ [ a18◂ [ ]{| l |}] ) } ⊢ 2'(= a3◂ [ a44◂ [ a26◂ [ a18◂ [ ]{| l |}]]] )
	mov r13,r8
; .mov_ptn 0(<2)◂0(<2)◂4(<7)◂{ 0'(= a17◂ [ a21◂ [ a18◂ [ ]{| l |}]] ) 3'(= a27◂ [ a18◂ [ ]{| l |}] ) } ⊢ 2'(= a3◂ [ a44◂ [ a26◂ [ a18◂ [ ]{| l |}]]] )
	ALC_RCD 2, rax
	mov r14,rax
	mov rax,r13
	mov QWORD [r14+8+8*0],rax
	mov rax,r9
	mov QWORD [r14+8+8*1],rax
	mov rax,r14
	mov BYTE [rax+6],4
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,8
	jmp LB_3247
LB_3251:
;; ?. 4'(= a44◂ [ a27◂ [ a18◂ [ ]{| l |}]] ) ⊢ 1(<2)◂3'(= a2◂ [ *{ rr{| l |}}] )
	mov QWORD [GBG_VCT+8*0],rdi
	mov r9,QWORD [rdi+8]
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_LN rdi
;; rsp=1 , %1918~3'(= a2◂ [ *{ rr{| l |}}] ) %1916~2'(= a17◂ [ a21◂ [ a18◂ [ ]{| l |}]] ) %1852~1'(= r ) %1851~0'(= r ) %1850~8'(= a44◂ [ *{ }] ) 
; #197 3'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 1(<2)◂3'(= a2◂ [ *{ rr{| l |}}] )
;; rsp=1 , %1923~1(<2)◂3'(= a2◂ [ *{ rr{| l |}}] ) %1916~2'(= a17◂ [ a21◂ [ a18◂ [ ]{| l |}]] ) %1852~1'(= r ) %1851~0'(= r ) %1850~8'(= a44◂ [ *{ }] ) 
; #24 1(<2)◂3'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 0(<2)◂1(<2)◂3'(= a2◂ [ *{ rr{| l |}}] )
;; rsp=1 , %1924~0(<2)◂1(<2)◂3'(= a2◂ [ *{ rr{| l |}}] ) %1916~2'(= a17◂ [ a21◂ [ a18◂ [ ]{| l |}]] ) %1852~1'(= r ) %1851~0'(= r ) %1850~8'(= a44◂ [ *{ }] ) 
; ∎ 0(<2)◂1(<2)◂3'(= a2◂ [ *{ rr{| l |}}] )
; .dlt.ptn 2'(= a17◂ [ a21◂ [ a18◂ [ ]{| l |}]] )
	mov rdi,r8
	C_PUSH_REGS
	mov r8,rdi
	call LB_534
	C_POP_REGS
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 8'(= a44◂ [ *{ }] )
	mov rdi,QWORD [rsp-8+8*1]
	C_PUSH_REGS
	mov r8,rdi
	call LB_1876
	C_POP_REGS
; .mov_ptn2 0(<2)◂1(<2)◂3'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 2'(= a3◂ [ a44◂ [ a26◂ [ a18◂ [ ]{| l |}]]] )
; .mov_ptn 0(<2)◂1(<2)◂3'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 2'(= a3◂ [ a44◂ [ a26◂ [ a18◂ [ ]{| l |}]]] )
	mov rax,r9
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],1
	mov QWORD [rax+8],rdi
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,8
	jmp LB_3247
LB_3248:
;; ?. 3'(= a44◂ [ *{ a17◂ [ a21◂ [ a18◂ [ ]{| l |}]]a44◂ [ a27◂ [ a18◂ [ ]{| l |}]]}] ) ⊢ 1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] )
	mov QWORD [GBG_VCT+8*0],rdi
	mov r8,QWORD [rdi+8]
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_LN rdi
;; rsp=1 , %1915~2'(= a2◂ [ *{ rr{| l |}}] ) %1852~1'(= r ) %1851~0'(= r ) %1850~8'(= a44◂ [ *{ }] ) 
; #197 2'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] )
;; rsp=1 , %1925~1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] ) %1852~1'(= r ) %1851~0'(= r ) %1850~8'(= a44◂ [ *{ }] ) 
; #24 1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 0(<2)◂1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] )
;; rsp=1 , %1926~0(<2)◂1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] ) %1852~1'(= r ) %1851~0'(= r ) %1850~8'(= a44◂ [ *{ }] ) 
; ∎ 0(<2)◂1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] )
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 8'(= a44◂ [ *{ }] )
	mov rdi,QWORD [rsp-8+8*1]
	C_PUSH_REGS
	mov r8,rdi
	call LB_1876
	C_POP_REGS
; .mov_ptn2 0(<2)◂1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 2'(= a3◂ [ a44◂ [ a26◂ [ a18◂ [ ]{| l |}]]] )
	mov r13,r8
; .mov_ptn 0(<2)◂1(<2)◂0'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 2'(= a3◂ [ a44◂ [ a26◂ [ a18◂ [ ]{| l |}]]] )
	mov rax,r13
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],1
	mov QWORD [rax+8],rdi
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,8
	jmp LB_3247
LB_3247:
	cmp BYTE [r8+6],0
	jnz LB_3106
	POP_GRM_SCC
	ret
LB_3106:
	RB_GRM
	jmp LB_3256
LB_3255:
	add r14,1 
LB_3256:
	cmp r14,r9
	jge LB_3257
	JZ_SPC BYTE [r13+8+r14], LB_3255
LB_3257
	call GRM_229
	cmp BYTE [r8+6],0
	jnz LB_3260
	jmp LB_3261
LB_3260:
	jmp LB_3258
LB_3261:
; .mov_ptn2 2'(= *{ } ) ⊢ { }
; .mov_ptn 2'(= *{ } ) ⊢ { }
	jmp LB_3259
LB_3258:
	add rsp,0
	jmp LB_3254
LB_3259:
	PUSH_GRM
	jmp LB_3265
LB_3264:
	add r14,1 
LB_3265:
	cmp r14,r9
	jge LB_3266
	JZ_SPC BYTE [r13+8+r14], LB_3264
LB_3266
	call GRM_239
	cmp BYTE [r8+6],0
	jnz LB_3269
	jmp LB_3270
LB_3269:
	jmp LB_3267
LB_3270:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a44◂ [ a26◂ [ a18◂ [ ]{| l |}]] ) ⊢ 8'(= a44◂ [ a26◂ [ a18◂ [ ]{| l |}]] )
; .mov_ptn 2'(= a44◂ [ a26◂ [ a18◂ [ ]{| l |}]] ) ⊢ 8'(= a44◂ [ a26◂ [ a18◂ [ ]{| l |}]] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_3268
LB_3267:
	add rsp,0
	jmp LB_3263
LB_3268:
	mov QWORD [rsp+8*1],r14
	mov r13,QWORD [rsp+16+8*1]
	mov r14,QWORD [rsp+8*1]
	jmp LB_3271
LB_3271
;; rsp=1 , %1932~1'(= r ) %1931~0'(= r ) %1930~8'(= a44◂ [ a26◂ [ a18◂ [ ]{| l |}]] ) 
; #24 8'(= a44◂ [ a26◂ [ a18◂ [ ]{| l |}]] ) ⊢ 0(<2)◂8'(= a44◂ [ a26◂ [ a18◂ [ ]{| l |}]] )
;; rsp=1 , %1933~0(<2)◂8'(= a44◂ [ a26◂ [ a18◂ [ ]{| l |}]] ) %1932~1'(= r ) %1931~0'(= r ) 
; ∎ 0(<2)◂8'(= a44◂ [ a26◂ [ a18◂ [ ]{| l |}]] )
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂8'(= a44◂ [ a26◂ [ a18◂ [ ]{| l |}]] ) ⊢ 2'(= a3◂ [ a44◂ [ a26◂ [ a18◂ [ ]{| l |}]]] )
; .mov_ptn 0(<2)◂8'(= a44◂ [ a26◂ [ a18◂ [ ]{| l |}]] ) ⊢ 2'(= a3◂ [ a44◂ [ a26◂ [ a18◂ [ ]{| l |}]]] )
	mov rax,QWORD [rsp-8+8*1]
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,8
	jmp LB_3272
LB_3272:
	cmp BYTE [r8+6],0
	jnz LB_3263
	POP_GRM_SCC
	jmp LB_3262
LB_3263:
	RB_GRM
	jmp LB_3275
LB_3274:
	add r14,1 
LB_3275:
	cmp r14,r9
	jge LB_3276
	JZ_SPC BYTE [r13+8+r14], LB_3274
LB_3276
	call GRM_228
	cmp BYTE [r8+6],0
	jnz LB_3279
	jmp LB_3280
LB_3279:
	jmp LB_3277
LB_3280:
; .mov_ptn2 2'(= *{ } ) ⊢ { }
; .mov_ptn 2'(= *{ } ) ⊢ { }
	jmp LB_3278
LB_3277:
	add rsp,0
	jmp LB_3273
LB_3278:
	mov QWORD [rsp+8*0],r14
	mov r13,QWORD [rsp+16+8*0]
	mov r14,QWORD [rsp+8*0]
	jmp LB_3281
LB_3281
;; rsp=0 , %1936~1'(= r ) %1935~0'(= r ) %1934~{ } 
; $ %[ "lc_code 11" ] ⊢ %[ "lc_code 11" ]
;; rsp=0 , %1937~%[ "lc_code 11" ] %1936~1'(= r ) %1935~0'(= r ) %1934~{ } 
; #22 { } ⊢ 1(<2)◂{ }
;; rsp=0 , %1938~1(<2)◂{ } %1937~%[ "lc_code 11" ] %1936~1'(= r ) %1935~0'(= r ) %1934~{ } 
; #23 { { 0'(= r ) 1'(= r ) %[ "lc_code 11" ] } 1(<2)◂{ } } ⊢ 0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "lc_code 11" ] } 1(<2)◂{ } }
;; rsp=0 , %1939~0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "lc_code 11" ] } 1(<2)◂{ } } %1934~{ } 
; #197 0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "lc_code 11" ] } 1(<2)◂{ } } ⊢ 1(<2)◂0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "lc_code 11" ] } 1(<2)◂{ } }
;; rsp=0 , %1940~1(<2)◂0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "lc_code 11" ] } 1(<2)◂{ } } %1934~{ } 
; #24 1(<2)◂0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "lc_code 11" ] } 1(<2)◂{ } } ⊢ 0(<2)◂1(<2)◂0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "lc_code 11" ] } 1(<2)◂{ } }
;; rsp=0 , %1941~0(<2)◂1(<2)◂0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "lc_code 11" ] } 1(<2)◂{ } } %1934~{ } 
; ∎ 0(<2)◂1(<2)◂0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "lc_code 11" ] } 1(<2)◂{ } }
; .dlt.ptn { }
; .mov_ptn2 0(<2)◂1(<2)◂0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "lc_code 11" ] } 1(<2)◂{ } } ⊢ 2'(= a3◂ [ a44◂ [ a26◂ [ a18◂ [ ]{| l |}]]] )
; .mov_ptn 0(<2)◂1(<2)◂0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "lc_code 11" ] } 1(<2)◂{ } } ⊢ 2'(= a3◂ [ a44◂ [ a26◂ [ a18◂ [ ]{| l |}]]] )
	ALC_RCD 2, rax
	mov r9,rax
	ALC_RCD 3, rax
	mov r10,rax
	mov rax,r13
	mov QWORD [r10+8+8*0],rax
	mov rax,r14
	mov QWORD [r10+8+8*1],rax
	mov rsi,1  
	mov rdi,24
	xor rax,rax 
	C_CALL_SF calloc
	mov QWORD [rax],10
	mov BYTE [rax+8+0],108
	mov BYTE [rax+8+1],99
	mov BYTE [rax+8+2],95
	mov BYTE [rax+8+3],99
	mov BYTE [rax+8+4],111
	mov BYTE [rax+8+5],100
	mov BYTE [rax+8+6],101
	mov BYTE [rax+8+7],32
	mov BYTE [rax+8+8],49
	mov BYTE [rax+8+9],49
	mov QWORD [r10+8+8*2],rax
	mov rax,r10
	mov QWORD [r9+8+8*0],rax
	mov rax,unt 
	mov rax,unt_1
	mov QWORD [r9+8+8*1],rax
	mov rax,r9
	mov BYTE [rax+6],0
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],1
	mov QWORD [rax+8],rdi
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	jmp LB_3282
LB_3282:
	cmp BYTE [r8+6],0
	jnz LB_3273
	POP_GRM_SCC
	jmp LB_3262
LB_3273:
	POP_GRM_FAIL 
	jmp LB_3262
LB_3262:
	cmp BYTE [r8+6],0
	jnz LB_3283
	jmp LB_3284
LB_3283:
	add rsp,0
	POP_GRM_FAIL
	ret
LB_3284:
	mov QWORD [rsp+8*0],r14
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi 
; .mov_ptn2 2'(= a44◂ [ a26◂ [ a18◂ [ ]{| l |}]] ) ⊢ 3'(= a44◂ [ a26◂ [ a18◂ [ ]{| l |}]] )
	mov r10,r9
; .mov_ptn 2'(= a44◂ [ a26◂ [ a18◂ [ ]{| l |}]] ) ⊢ 3'(= a44◂ [ a26◂ [ a18◂ [ ]{| l |}]] )
	mov rax,r8
	mov r9,rax
	mov r13,QWORD [rsp+16+8*0]
	mov r14,QWORD [rsp+8*0]
	jmp LB_3285
LB_3285
;; rsp=0 , %1942~3'(= a44◂ [ a26◂ [ a18◂ [ ]{| l |}]] ) %1929~1'(= r ) %1928~0'(= r ) %1927~{ } 
;; ? 3'(= a44◂ [ a26◂ [ a18◂ [ ]{| l |}]] ) ⊢ 0(<2)◂2'(= a26◂ [ a18◂ [ ]{| l |}] )
	mov rdi,r9
	cmp BYTE [rdi+6],0
	jnz LB_3288
	jmp LB_3289
LB_3288:
	jmp LB_3287
LB_3289:
	mov QWORD [GBG_VCT+8*0],rdi
	mov r8,QWORD [rdi+8]
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_LN rdi
;; rsp=0 , %1944~2'(= a26◂ [ a18◂ [ ]{| l |}] ) %1929~1'(= r ) %1928~0'(= r ) %1927~{ } 
; $ %[ "lc_code 9" ] ⊢ %[ "lc_code 9" ]
;; rsp=0 , %1945~%[ "lc_code 9" ] %1944~2'(= a26◂ [ a18◂ [ ]{| l |}] ) %1929~1'(= r ) %1928~0'(= r ) %1927~{ } 
; #200 { 0'(= r ) 1'(= r ) %[ "lc_code 9" ] } ⊢ 0'(= a44◂ [ q0] )
	sub rsp,8
	mov QWORD [rsp+8*0],r8
; .mov_ptn2 { 0'(= r ) 1'(= r ) %[ "lc_code 9" ] } ⊢ { 0'(= r ) 1'(= r ) 2'(= {| l |} ) }
; .mov_ptn %[ "lc_code 9" ] ⊢ 2'(= {| l |} )
	mov rsi,1  
	mov rdi,24
	xor rax,rax 
	C_CALL_SF calloc
	mov QWORD [rax],9
	mov BYTE [rax+8+0],108
	mov BYTE [rax+8+1],99
	mov BYTE [rax+8+2],95
	mov BYTE [rax+8+3],99
	mov BYTE [rax+8+4],111
	mov BYTE [rax+8+5],100
	mov BYTE [rax+8+6],101
	mov BYTE [rax+8+7],32
	mov BYTE [rax+8+8],57
	mov r8,rax
	call ETR_200
	mov r8,QWORD [rsp-8+8*1]
	add rsp,8
;; rsp=0 , %1946~0'(= a44◂ [ q0] ) %1944~2'(= a26◂ [ a18◂ [ ]{| l |}] ) %1927~{ } 
; #24 0'(= a44◂ [ q0] ) ⊢ 0(<2)◂0'(= a44◂ [ q0] )
;; rsp=0 , %1947~0(<2)◂0'(= a44◂ [ q0] ) %1944~2'(= a26◂ [ a18◂ [ ]{| l |}] ) %1927~{ } 
; ∎ 0(<2)◂0'(= a44◂ [ q0] )
; .dlt.ptn 2'(= a26◂ [ a18◂ [ ]{| l |}] )
	mov rdi,r8
	C_PUSH_REGS
	mov r8,rdi
	call LB_797
	C_POP_REGS
; .dlt.ptn { }
; .mov_ptn2 0(<2)◂0'(= a44◂ [ q0] ) ⊢ 2'(= a3◂ [ a44◂ [ a26◂ [ a18◂ [ ]{| l |}]]] )
; .mov_ptn 0(<2)◂0'(= a44◂ [ q0] ) ⊢ 2'(= a3◂ [ a44◂ [ a26◂ [ a18◂ [ ]{| l |}]]] )
	mov rax,r13
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	jmp LB_3286
LB_3287:
;; ?. 3'(= a44◂ [ a26◂ [ a18◂ [ ]{| l |}]] ) ⊢ 1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] )
	mov QWORD [GBG_VCT+8*0],rdi
	mov r8,QWORD [rdi+8]
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_LN rdi
;; rsp=0 , %1943~2'(= a2◂ [ *{ rr{| l |}}] ) %1929~1'(= r ) %1928~0'(= r ) %1927~{ } 
; $ %[ "lc_code 10" ] ⊢ %[ "lc_code 10" ]
;; rsp=0 , %1948~%[ "lc_code 10" ] %1943~2'(= a2◂ [ *{ rr{| l |}}] ) %1929~1'(= r ) %1928~0'(= r ) %1927~{ } 
; #23 { { 0'(= r ) 1'(= r ) %[ "lc_code 10" ] } 2'(= a2◂ [ *{ rr{| l |}}] ) } ⊢ 0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "lc_code 10" ] } 2'(= a2◂ [ *{ rr{| l |}}] ) }
;; rsp=0 , %1949~0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "lc_code 10" ] } 2'(= a2◂ [ *{ rr{| l |}}] ) } %1927~{ } 
; #197 0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "lc_code 10" ] } 2'(= a2◂ [ *{ rr{| l |}}] ) } ⊢ 1(<2)◂0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "lc_code 10" ] } 2'(= a2◂ [ *{ rr{| l |}}] ) }
;; rsp=0 , %1950~1(<2)◂0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "lc_code 10" ] } 2'(= a2◂ [ *{ rr{| l |}}] ) } %1927~{ } 
; #24 1(<2)◂0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "lc_code 10" ] } 2'(= a2◂ [ *{ rr{| l |}}] ) } ⊢ 0(<2)◂1(<2)◂0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "lc_code 10" ] } 2'(= a2◂ [ *{ rr{| l |}}] ) }
;; rsp=0 , %1951~0(<2)◂1(<2)◂0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "lc_code 10" ] } 2'(= a2◂ [ *{ rr{| l |}}] ) } %1927~{ } 
; ∎ 0(<2)◂1(<2)◂0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "lc_code 10" ] } 2'(= a2◂ [ *{ rr{| l |}}] ) }
; .dlt.ptn { }
; .mov_ptn2 0(<2)◂1(<2)◂0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "lc_code 10" ] } 2'(= a2◂ [ *{ rr{| l |}}] ) } ⊢ 2'(= a3◂ [ a44◂ [ a26◂ [ a18◂ [ ]{| l |}]]] )
	mov r9,r8
; .mov_ptn 0(<2)◂1(<2)◂0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "lc_code 10" ] } 3'(= a2◂ [ *{ rr{| l |}}] ) } ⊢ 2'(= a3◂ [ a44◂ [ a26◂ [ a18◂ [ ]{| l |}]]] )
	ALC_RCD 2, rax
	mov r10,rax
	ALC_RCD 3, rax
	mov r11,rax
	mov rax,r13
	mov QWORD [r11+8+8*0],rax
	mov rax,r14
	mov QWORD [r11+8+8*1],rax
	mov rsi,1  
	mov rdi,24
	xor rax,rax 
	C_CALL_SF calloc
	mov QWORD [rax],10
	mov BYTE [rax+8+0],108
	mov BYTE [rax+8+1],99
	mov BYTE [rax+8+2],95
	mov BYTE [rax+8+3],99
	mov BYTE [rax+8+4],111
	mov BYTE [rax+8+5],100
	mov BYTE [rax+8+6],101
	mov BYTE [rax+8+7],32
	mov BYTE [rax+8+8],49
	mov BYTE [rax+8+9],48
	mov QWORD [r11+8+8*2],rax
	mov rax,r11
	mov QWORD [r10+8+8*0],rax
	mov rax,r9
	mov QWORD [r10+8+8*1],rax
	mov rax,r10
	mov BYTE [rax+6],0
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],1
	mov QWORD [rax+8],rdi
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	jmp LB_3286
LB_3286:
	cmp BYTE [r8+6],0
	jnz LB_3254
	POP_GRM_SCC
	ret
LB_3254:
	POP_GRM_FAIL 
	ret
ETR_240:
	mov r9,0x0000_ffff_ffff_ffff
	and r9,[r13]
	call GRM_240
	ret
GRM_240:
	PUSH_GRM
	jmp LB_3292
LB_3291:
	add r14,1 
LB_3292:
	cmp r14,r9
	jge LB_3293
	JZ_SPC BYTE [r13+8+r14], LB_3291
LB_3293
	call GRM_242
	cmp BYTE [r8+6],0
	jnz LB_3296
	jmp LB_3297
LB_3296:
	jmp LB_3294
LB_3297:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a44◂ [ a16◂ [ *{ a17◂ [ a23◂ [ a18◂ [ ]{| l |}]]a2◂ [ a30◂ [ a18◂ [ ]{| l |}]]a29◂ [ a18◂ [ ]{| l |}]}]] ) ⊢ 8'(= a44◂ [ a16◂ [ *{ a17◂ [ a23◂ [ a18◂ [ ]{| l |}]]a2◂ [ a30◂ [ a18◂ [ ]{| l |}]]a29◂ [ a18◂ [ ]{| l |}]}]] )
; .mov_ptn 2'(= a44◂ [ a16◂ [ *{ a17◂ [ a23◂ [ a18◂ [ ]{| l |}]]a2◂ [ a30◂ [ a18◂ [ ]{| l |}]]a29◂ [ a18◂ [ ]{| l |}]}]] ) ⊢ 8'(= a44◂ [ a16◂ [ *{ a17◂ [ a23◂ [ a18◂ [ ]{| l |}]]a2◂ [ a30◂ [ a18◂ [ ]{| l |}]]a29◂ [ a18◂ [ ]{| l |}]}]] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_3295
LB_3294:
	add rsp,0
	jmp LB_3290
LB_3295:
	mov QWORD [rsp+8*1],r14
	mov r13,QWORD [rsp+16+8*1]
	mov r14,QWORD [rsp+8*1]
	jmp LB_3298
LB_3298
;; rsp=1 , %1954~1'(= r ) %1953~0'(= r ) %1952~8'(= a44◂ [ a16◂ [ *{ a17◂ [ a23◂ [ a18◂ [ ]{| l |}]]a2◂ [ a30◂ [ a18◂ [ ]{| l |}]]a29◂ [ a18◂ [ ]{| l |}]}]] ) 
;; ? 8'(= a44◂ [ a16◂ [ *{ a17◂ [ a23◂ [ a18◂ [ ]{| l |}]]a2◂ [ a30◂ [ a18◂ [ ]{| l |}]]a29◂ [ a18◂ [ ]{| l |}]}]] ) ⊢ 0(<2)◂2'(= a16◂ [ *{ a17◂ [ a23◂ [ a18◂ [ ]{| l |}]]a2◂ [ a30◂ [ a18◂ [ ]{| l |}]]a29◂ [ a18◂ [ ]{| l |}]}] )
	mov rdi,QWORD [rsp-8+8*1]
	cmp BYTE [rdi+6],0
	jnz LB_3301
	jmp LB_3302
LB_3301:
	jmp LB_3300
LB_3302:
	mov QWORD [GBG_VCT+8*0],rdi
	mov r8,QWORD [rdi+8]
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_LN rdi
;; rsp=1 , %1956~2'(= a16◂ [ *{ a17◂ [ a23◂ [ a18◂ [ ]{| l |}]]a2◂ [ a30◂ [ a18◂ [ ]{| l |}]]a29◂ [ a18◂ [ ]{| l |}]}] ) %1954~1'(= r ) %1953~0'(= r ) 
; #129 2'(= a16◂ [ *{ a17◂ [ a23◂ [ a18◂ [ ]{| l |}]]a2◂ [ a30◂ [ a18◂ [ ]{| l |}]]a29◂ [ a18◂ [ ]{| l |}]}] ) ⊢ 0(<2)◂2'(= a16◂ [ *{ a17◂ [ a23◂ [ a18◂ [ ]{| l |}]]a2◂ [ a30◂ [ a18◂ [ ]{| l |}]]a29◂ [ a18◂ [ ]{| l |}]}] )
;; rsp=1 , %1957~0(<2)◂2'(= a16◂ [ *{ a17◂ [ a23◂ [ a18◂ [ ]{| l |}]]a2◂ [ a30◂ [ a18◂ [ ]{| l |}]]a29◂ [ a18◂ [ ]{| l |}]}] ) %1954~1'(= r ) %1953~0'(= r ) 
; #198 0(<2)◂2'(= a16◂ [ *{ a17◂ [ a23◂ [ a18◂ [ ]{| l |}]]a2◂ [ a30◂ [ a18◂ [ ]{| l |}]]a29◂ [ a18◂ [ ]{| l |}]}] ) ⊢ 0(<2)◂0(<2)◂2'(= a16◂ [ *{ a17◂ [ a23◂ [ a18◂ [ ]{| l |}]]a2◂ [ a30◂ [ a18◂ [ ]{| l |}]]a29◂ [ a18◂ [ ]{| l |}]}] )
;; rsp=1 , %1958~0(<2)◂0(<2)◂2'(= a16◂ [ *{ a17◂ [ a23◂ [ a18◂ [ ]{| l |}]]a2◂ [ a30◂ [ a18◂ [ ]{| l |}]]a29◂ [ a18◂ [ ]{| l |}]}] ) %1954~1'(= r ) %1953~0'(= r ) 
; #24 0(<2)◂0(<2)◂2'(= a16◂ [ *{ a17◂ [ a23◂ [ a18◂ [ ]{| l |}]]a2◂ [ a30◂ [ a18◂ [ ]{| l |}]]a29◂ [ a18◂ [ ]{| l |}]}] ) ⊢ 0(<2)◂0(<2)◂0(<2)◂2'(= a16◂ [ *{ a17◂ [ a23◂ [ a18◂ [ ]{| l |}]]a2◂ [ a30◂ [ a18◂ [ ]{| l |}]]a29◂ [ a18◂ [ ]{| l |}]}] )
;; rsp=1 , %1959~0(<2)◂0(<2)◂0(<2)◂2'(= a16◂ [ *{ a17◂ [ a23◂ [ a18◂ [ ]{| l |}]]a2◂ [ a30◂ [ a18◂ [ ]{| l |}]]a29◂ [ a18◂ [ ]{| l |}]}] ) %1954~1'(= r ) %1953~0'(= r ) 
; ∎ 0(<2)◂0(<2)◂0(<2)◂2'(= a16◂ [ *{ a17◂ [ a23◂ [ a18◂ [ ]{| l |}]]a2◂ [ a30◂ [ a18◂ [ ]{| l |}]]a29◂ [ a18◂ [ ]{| l |}]}] )
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂0(<2)◂0(<2)◂2'(= a16◂ [ *{ a17◂ [ a23◂ [ a18◂ [ ]{| l |}]]a2◂ [ a30◂ [ a18◂ [ ]{| l |}]]a29◂ [ a18◂ [ ]{| l |}]}] ) ⊢ 2'(= a3◂ [ a44◂ [ a27◂ [ a18◂ [ ]{| l |}]]] )
	mov r13,r8
; .mov_ptn 0(<2)◂0(<2)◂0(<2)◂0'(= a16◂ [ *{ a17◂ [ a23◂ [ a18◂ [ ]{| l |}]]a2◂ [ a30◂ [ a18◂ [ ]{| l |}]]a29◂ [ a18◂ [ ]{| l |}]}] ) ⊢ 2'(= a3◂ [ a44◂ [ a27◂ [ a18◂ [ ]{| l |}]]] )
	mov rax,r13
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,8
	jmp LB_3299
LB_3300:
;; ?. 8'(= a44◂ [ a16◂ [ *{ a17◂ [ a23◂ [ a18◂ [ ]{| l |}]]a2◂ [ a30◂ [ a18◂ [ ]{| l |}]]a29◂ [ a18◂ [ ]{| l |}]}]] ) ⊢ 1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] )
	mov QWORD [GBG_VCT+8*0],rdi
	mov r8,QWORD [rdi+8]
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_LN rdi
;; rsp=1 , %1955~2'(= a2◂ [ *{ rr{| l |}}] ) %1954~1'(= r ) %1953~0'(= r ) 
; #197 2'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] )
;; rsp=1 , %1960~1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] ) %1954~1'(= r ) %1953~0'(= r ) 
; #24 1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 0(<2)◂1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] )
;; rsp=1 , %1961~0(<2)◂1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] ) %1954~1'(= r ) %1953~0'(= r ) 
; ∎ 0(<2)◂1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] )
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 2'(= a3◂ [ a44◂ [ a27◂ [ a18◂ [ ]{| l |}]]] )
	mov r13,r8
; .mov_ptn 0(<2)◂1(<2)◂0'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 2'(= a3◂ [ a44◂ [ a27◂ [ a18◂ [ ]{| l |}]]] )
	mov rax,r13
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],1
	mov QWORD [rax+8],rdi
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,8
	jmp LB_3299
LB_3299:
	cmp BYTE [r8+6],0
	jnz LB_3290
	POP_GRM_SCC
	ret
LB_3290:
	RB_GRM
	jmp LB_3305
LB_3304:
	add r14,1 
LB_3305:
	cmp r14,r9
	jge LB_3306
	JZ_SPC BYTE [r13+8+r14], LB_3304
LB_3306
	call GRM_210
	cmp BYTE [r8+6],0
	jnz LB_3309
	jmp LB_3310
LB_3309:
	jmp LB_3307
LB_3310:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a17◂ [ a22◂ [ {| l |}]] ) ⊢ 8'(= a17◂ [ a22◂ [ {| l |}]] )
; .mov_ptn 2'(= a17◂ [ a22◂ [ {| l |}]] ) ⊢ 8'(= a17◂ [ a22◂ [ {| l |}]] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_3308
LB_3307:
	add rsp,0
	jmp LB_3303
LB_3308:
	jmp LB_3312
LB_3311:
	add r14,1 
LB_3312:
	cmp r14,r9
	jge LB_3313
	JZ_SPC BYTE [r13+8+r14], LB_3311
LB_3313
	call GRM_212
	cmp BYTE [r8+6],0
	jnz LB_3316
	jmp LB_3317
LB_3316:
	jmp LB_3314
LB_3317:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a2◂ [ a17◂ [ a22◂ [ {| l |}]]] ) ⊢ 9'(= a2◂ [ a17◂ [ a22◂ [ {| l |}]]] )
; .mov_ptn 2'(= a2◂ [ a17◂ [ a22◂ [ {| l |}]]] ) ⊢ 9'(= a2◂ [ a17◂ [ a22◂ [ {| l |}]]] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_3315
LB_3314:
	add rsp,8
	jmp LB_3303
LB_3315:
	jmp LB_3319
LB_3318:
	add r14,1 
LB_3319:
	cmp r14,r9
	jge LB_3320
	JZ_SPC BYTE [r13+8+r14], LB_3318
LB_3320
	call GRM_239
	cmp BYTE [r8+6],0
	jnz LB_3323
	jmp LB_3324
LB_3323:
	jmp LB_3321
LB_3324:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a44◂ [ a26◂ [ a18◂ [ ]{| l |}]] ) ⊢ 10'(= a44◂ [ a26◂ [ a18◂ [ ]{| l |}]] )
; .mov_ptn 2'(= a44◂ [ a26◂ [ a18◂ [ ]{| l |}]] ) ⊢ 10'(= a44◂ [ a26◂ [ a18◂ [ ]{| l |}]] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_3322
LB_3321:
	add rsp,16
	jmp LB_3303
LB_3322:
	mov QWORD [rsp+8*3],r14
	mov r13,QWORD [rsp+16+8*3]
	mov r14,QWORD [rsp+8*3]
	jmp LB_3325
LB_3325
;; rsp=3 , %1966~1'(= r ) %1965~0'(= r ) %1964~10'(= a44◂ [ a26◂ [ a18◂ [ ]{| l |}]] ) %1963~9'(= a2◂ [ a17◂ [ a22◂ [ {| l |}]]] ) %1962~8'(= a17◂ [ a22◂ [ {| l |}]] ) 
;; ? 10'(= a44◂ [ a26◂ [ a18◂ [ ]{| l |}]] ) ⊢ 0(<2)◂2'(= a26◂ [ a18◂ [ ]{| l |}] )
	mov rdi,QWORD [rsp-8+8*1]
	cmp BYTE [rdi+6],0
	jnz LB_3328
	jmp LB_3329
LB_3328:
	jmp LB_3327
LB_3329:
	mov QWORD [GBG_VCT+8*0],rdi
	mov r8,QWORD [rdi+8]
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_LN rdi
;; rsp=3 , %1968~2'(= a26◂ [ a18◂ [ ]{| l |}] ) %1966~1'(= r ) %1965~0'(= r ) %1963~9'(= a2◂ [ a17◂ [ a22◂ [ {| l |}]]] ) %1962~8'(= a17◂ [ a22◂ [ {| l |}]] ) 
; #23 { 8'(= a17◂ [ a22◂ [ {| l |}]] ) 9'(= a2◂ [ a17◂ [ a22◂ [ {| l |}]]] ) } ⊢ 0(<2)◂{ 8'(= a17◂ [ a22◂ [ {| l |}]] ) 9'(= a2◂ [ a17◂ [ a22◂ [ {| l |}]]] ) }
;; rsp=3 , %1969~0(<2)◂{ 8'(= a17◂ [ a22◂ [ {| l |}]] ) 9'(= a2◂ [ a17◂ [ a22◂ [ {| l |}]]] ) } %1968~2'(= a26◂ [ a18◂ [ ]{| l |}] ) %1966~1'(= r ) %1965~0'(= r ) 
; #128 { 0(<2)◂{ 8'(= a17◂ [ a22◂ [ {| l |}]] ) 9'(= a2◂ [ a17◂ [ a22◂ [ {| l |}]]] ) } 2'(= a26◂ [ a18◂ [ ]{| l |}] ) } ⊢ 1(<2)◂{ 0(<2)◂{ 8'(= a17◂ [ a22◂ [ {| l |}]] ) 9'(= a2◂ [ a17◂ [ a22◂ [ {| l |}]]] ) } 2'(= a26◂ [ a18◂ [ ]{| l |}] ) }
;; rsp=3 , %1970~1(<2)◂{ 0(<2)◂{ 8'(= a17◂ [ a22◂ [ {| l |}]] ) 9'(= a2◂ [ a17◂ [ a22◂ [ {| l |}]]] ) } 2'(= a26◂ [ a18◂ [ ]{| l |}] ) } %1966~1'(= r ) %1965~0'(= r ) 
; #198 1(<2)◂{ 0(<2)◂{ 8'(= a17◂ [ a22◂ [ {| l |}]] ) 9'(= a2◂ [ a17◂ [ a22◂ [ {| l |}]]] ) } 2'(= a26◂ [ a18◂ [ ]{| l |}] ) } ⊢ 0(<2)◂1(<2)◂{ 0(<2)◂{ 8'(= a17◂ [ a22◂ [ {| l |}]] ) 9'(= a2◂ [ a17◂ [ a22◂ [ {| l |}]]] ) } 2'(= a26◂ [ a18◂ [ ]{| l |}] ) }
;; rsp=3 , %1971~0(<2)◂1(<2)◂{ 0(<2)◂{ 8'(= a17◂ [ a22◂ [ {| l |}]] ) 9'(= a2◂ [ a17◂ [ a22◂ [ {| l |}]]] ) } 2'(= a26◂ [ a18◂ [ ]{| l |}] ) } %1966~1'(= r ) %1965~0'(= r ) 
; #24 0(<2)◂1(<2)◂{ 0(<2)◂{ 8'(= a17◂ [ a22◂ [ {| l |}]] ) 9'(= a2◂ [ a17◂ [ a22◂ [ {| l |}]]] ) } 2'(= a26◂ [ a18◂ [ ]{| l |}] ) } ⊢ 0(<2)◂0(<2)◂1(<2)◂{ 0(<2)◂{ 8'(= a17◂ [ a22◂ [ {| l |}]] ) 9'(= a2◂ [ a17◂ [ a22◂ [ {| l |}]]] ) } 2'(= a26◂ [ a18◂ [ ]{| l |}] ) }
;; rsp=3 , %1972~0(<2)◂0(<2)◂1(<2)◂{ 0(<2)◂{ 8'(= a17◂ [ a22◂ [ {| l |}]] ) 9'(= a2◂ [ a17◂ [ a22◂ [ {| l |}]]] ) } 2'(= a26◂ [ a18◂ [ ]{| l |}] ) } %1966~1'(= r ) %1965~0'(= r ) 
; ∎ 0(<2)◂0(<2)◂1(<2)◂{ 0(<2)◂{ 8'(= a17◂ [ a22◂ [ {| l |}]] ) 9'(= a2◂ [ a17◂ [ a22◂ [ {| l |}]]] ) } 2'(= a26◂ [ a18◂ [ ]{| l |}] ) }
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂0(<2)◂1(<2)◂{ 0(<2)◂{ 8'(= a17◂ [ a22◂ [ {| l |}]] ) 9'(= a2◂ [ a17◂ [ a22◂ [ {| l |}]]] ) } 2'(= a26◂ [ a18◂ [ ]{| l |}] ) } ⊢ 2'(= a3◂ [ a44◂ [ a27◂ [ a18◂ [ ]{| l |}]]] )
	mov r13,r8
; .mov_ptn 0(<2)◂0(<2)◂1(<2)◂{ 0(<2)◂{ 8'(= a17◂ [ a22◂ [ {| l |}]] ) 9'(= a2◂ [ a17◂ [ a22◂ [ {| l |}]]] ) } 0'(= a26◂ [ a18◂ [ ]{| l |}] ) } ⊢ 2'(= a3◂ [ a44◂ [ a27◂ [ a18◂ [ ]{| l |}]]] )
	ALC_RCD 2, rax
	mov r14,rax
	ALC_RCD 2, rax
	mov r9,rax
	mov rax,QWORD [rsp-8+8*3]
	mov QWORD [r9+8+8*0],rax
	mov rax,QWORD [rsp-8+8*2]
	mov QWORD [r9+8+8*1],rax
	mov rax,r9
	mov BYTE [rax+6],0
	mov QWORD [r14+8+8*0],rax
	mov rax,r13
	mov QWORD [r14+8+8*1],rax
	mov rax,r14
	mov BYTE [rax+6],1
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,24
	jmp LB_3326
LB_3327:
;; ?. 10'(= a44◂ [ a26◂ [ a18◂ [ ]{| l |}]] ) ⊢ 1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] )
	mov QWORD [GBG_VCT+8*0],rdi
	mov r8,QWORD [rdi+8]
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_LN rdi
;; rsp=3 , %1967~2'(= a2◂ [ *{ rr{| l |}}] ) %1966~1'(= r ) %1965~0'(= r ) %1963~9'(= a2◂ [ a17◂ [ a22◂ [ {| l |}]]] ) %1962~8'(= a17◂ [ a22◂ [ {| l |}]] ) 
; #197 2'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] )
;; rsp=3 , %1973~1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] ) %1966~1'(= r ) %1965~0'(= r ) %1963~9'(= a2◂ [ a17◂ [ a22◂ [ {| l |}]]] ) %1962~8'(= a17◂ [ a22◂ [ {| l |}]] ) 
; #24 1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 0(<2)◂1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] )
;; rsp=3 , %1974~0(<2)◂1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] ) %1966~1'(= r ) %1965~0'(= r ) %1963~9'(= a2◂ [ a17◂ [ a22◂ [ {| l |}]]] ) %1962~8'(= a17◂ [ a22◂ [ {| l |}]] ) 
; ∎ 0(<2)◂1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] )
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 9'(= a2◂ [ a17◂ [ a22◂ [ {| l |}]]] )
	mov rdi,QWORD [rsp-8+8*2]
	C_PUSH_REGS
	mov r8,rdi
	call LB_815
	C_POP_REGS
; .dlt.ptn 8'(= a17◂ [ a22◂ [ {| l |}]] )
	mov rdi,QWORD [rsp-8+8*3]
	C_PUSH_REGS
	mov r8,rdi
	call LB_791
	C_POP_REGS
; .mov_ptn2 0(<2)◂1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 2'(= a3◂ [ a44◂ [ a27◂ [ a18◂ [ ]{| l |}]]] )
	mov r13,r8
; .mov_ptn 0(<2)◂1(<2)◂0'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 2'(= a3◂ [ a44◂ [ a27◂ [ a18◂ [ ]{| l |}]]] )
	mov rax,r13
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],1
	mov QWORD [rax+8],rdi
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,24
	jmp LB_3326
LB_3326:
	cmp BYTE [r8+6],0
	jnz LB_3303
	POP_GRM_SCC
	ret
LB_3303:
	POP_GRM_FAIL 
	ret
ETR_241:
	mov r9,0x0000_ffff_ffff_ffff
	and r9,[r13]
	call GRM_241
	ret
GRM_241:
	PUSH_GRM
	jmp LB_3332
LB_3331:
	add r14,1 
LB_3332:
	cmp r14,r9
	jge LB_3333
	JZ_SPC BYTE [r13+8+r14], LB_3331
LB_3333
	call GRM_221
	cmp BYTE [r8+6],0
	jnz LB_3336
	jmp LB_3337
LB_3336:
	jmp LB_3334
LB_3337:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a44◂ [ *{ }] ) ⊢ 8'(= a44◂ [ *{ }] )
; .mov_ptn 2'(= a44◂ [ *{ }] ) ⊢ 8'(= a44◂ [ *{ }] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_3335
LB_3334:
	add rsp,0
	jmp LB_3330
LB_3335:
	jmp LB_3339
LB_3338:
	add r14,1 
LB_3339:
	cmp r14,r9
	jge LB_3340
	JZ_SPC BYTE [r13+8+r14], LB_3338
LB_3340
	lea rax,[r14+4]
	cmp rax,r9
	jg LB_3343
	jmp LB_3344
LB_3343:
	mov r8,unt_1
	jmp LB_3341
LB_3344:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],226
	jnz LB_3345
	cmp BYTE [rdi+1],136
	jnz LB_3345
	cmp BYTE [rdi+2],144
	jnz LB_3345
	cmp BYTE [rdi+3],46
	jnz LB_3345
	jmp LB_3346
LB_3345:
	mov r8,unt_1
	jmp LB_3341
LB_3346:
	add r14,4
	jmp LB_3342
LB_3341:
	add rsp,8
	jmp LB_3330
LB_3342:
	jmp LB_3348
LB_3347:
	add r14,1 
LB_3348:
	cmp r14,r9
	jge LB_3349
	JZ_SPC BYTE [r13+8+r14], LB_3347
LB_3349
	call GRM_243
	cmp BYTE [r8+6],0
	jnz LB_3352
	jmp LB_3353
LB_3352:
	jmp LB_3350
LB_3353:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a44◂ [ a2◂ [ a30◂ [ a18◂ [ ]{| l |}]]] ) ⊢ 9'(= a44◂ [ a2◂ [ a30◂ [ a18◂ [ ]{| l |}]]] )
; .mov_ptn 2'(= a44◂ [ a2◂ [ a30◂ [ a18◂ [ ]{| l |}]]] ) ⊢ 9'(= a44◂ [ a2◂ [ a30◂ [ a18◂ [ ]{| l |}]]] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_3351
LB_3350:
	add rsp,8
	POP_GRM_FAIL
	ret
LB_3351:
	jmp LB_3355
LB_3354:
	add r14,1 
LB_3355:
	cmp r14,r9
	jge LB_3356
	JZ_SPC BYTE [r13+8+r14], LB_3354
LB_3356
	call GRM_239
	cmp BYTE [r8+6],0
	jnz LB_3359
	jmp LB_3360
LB_3359:
	jmp LB_3357
LB_3360:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a44◂ [ a26◂ [ a18◂ [ ]{| l |}]] ) ⊢ 10'(= a44◂ [ a26◂ [ a18◂ [ ]{| l |}]] )
; .mov_ptn 2'(= a44◂ [ a26◂ [ a18◂ [ ]{| l |}]] ) ⊢ 10'(= a44◂ [ a26◂ [ a18◂ [ ]{| l |}]] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_3358
LB_3357:
	add rsp,16
	POP_GRM_FAIL
	ret
LB_3358:
	mov QWORD [rsp+8*3],r14
	mov r13,QWORD [rsp+16+8*3]
	mov r14,QWORD [rsp+8*3]
	jmp LB_3361
LB_3361
;; rsp=3 , %1979~1'(= r ) %1978~0'(= r ) %1977~10'(= a44◂ [ a26◂ [ a18◂ [ ]{| l |}]] ) %1976~9'(= a44◂ [ a2◂ [ a30◂ [ a18◂ [ ]{| l |}]]] ) %1975~8'(= a44◂ [ *{ }] ) 
; #199 { 9'(= a44◂ [ a2◂ [ a30◂ [ a18◂ [ ]{| l |}]]] ) 10'(= a44◂ [ a26◂ [ a18◂ [ ]{| l |}]] ) } ⊢ 2'(= a44◂ [ *{ a2◂ [ a30◂ [ a18◂ [ ]{| l |}]]a26◂ [ a18◂ [ ]{| l |}]}] )
	sub rsp,16
	mov QWORD [rsp+8*0],r13
	mov QWORD [rsp+8*1],r14
; .mov_ptn2 { 9'(= a44◂ [ a2◂ [ a30◂ [ a18◂ [ ]{| l |}]]] ) 10'(= a44◂ [ a26◂ [ a18◂ [ ]{| l |}]] ) } ⊢ { 0'(= a44◂ [ a2◂ [ a30◂ [ a18◂ [ ]{| l |}]]] ) 1'(= a44◂ [ a26◂ [ a18◂ [ ]{| l |}]] ) }
; .mov_ptn 10'(= a44◂ [ a26◂ [ a18◂ [ ]{| l |}]] ) ⊢ 1'(= a44◂ [ a26◂ [ a18◂ [ ]{| l |}]] )
	mov rax,QWORD [rsp-8+8*3]
	mov r14,rax
; .mov_ptn 9'(= a44◂ [ a2◂ [ a30◂ [ a18◂ [ ]{| l |}]]] ) ⊢ 0'(= a44◂ [ a2◂ [ a30◂ [ a18◂ [ ]{| l |}]]] )
	mov rax,QWORD [rsp-8+8*4]
	mov r13,rax
	call LB_3363
	mov r14,QWORD [rsp-8+8*2]
	mov r8,r13
	mov r13,QWORD [rsp-8+8*1]
	add rsp,32
;; rsp=1 , %1980~2'(= a44◂ [ *{ a2◂ [ a30◂ [ a18◂ [ ]{| l |}]]a26◂ [ a18◂ [ ]{| l |}]}] ) %1979~1'(= r ) %1978~0'(= r ) %1975~8'(= a44◂ [ *{ }] ) 
;; ? 2'(= a44◂ [ *{ a2◂ [ a30◂ [ a18◂ [ ]{| l |}]]a26◂ [ a18◂ [ ]{| l |}]}] ) ⊢ 0(<2)◂{ 3'(= a2◂ [ a30◂ [ a18◂ [ ]{| l |}]] ) 4'(= a26◂ [ a18◂ [ ]{| l |}] ) }
	mov rdi,r8
	cmp BYTE [rdi+6],0
	jnz LB_3374
	jmp LB_3375
LB_3374:
	jmp LB_3373
LB_3375:
	mov r9, QWORD [r8+8]
	mov r10, QWORD [r8+16]
	mov QWORD [GBG_VCT+8*0],r8
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_RCD 2,rdi
;; rsp=1 , %1983~4'(= a26◂ [ a18◂ [ ]{| l |}] ) %1982~3'(= a2◂ [ a30◂ [ a18◂ [ ]{| l |}]] ) %1979~1'(= r ) %1978~0'(= r ) %1975~8'(= a44◂ [ *{ }] ) 
; #121 4'(= a26◂ [ a18◂ [ ]{| l |}] ) ⊢ 2(<3)◂4'(= a26◂ [ a18◂ [ ]{| l |}] )
;; rsp=1 , %1984~2(<3)◂4'(= a26◂ [ a18◂ [ ]{| l |}] ) %1982~3'(= a2◂ [ a30◂ [ a18◂ [ ]{| l |}]] ) %1979~1'(= r ) %1978~0'(= r ) %1975~8'(= a44◂ [ *{ }] ) 
; #54 { 3'(= a2◂ [ a30◂ [ a18◂ [ ]{| l |}]] ) 2(<3)◂4'(= a26◂ [ a18◂ [ ]{| l |}] ) } ⊢ 1(<2)◂{ 3'(= a2◂ [ a30◂ [ a18◂ [ ]{| l |}]] ) 2(<3)◂4'(= a26◂ [ a18◂ [ ]{| l |}] ) }
;; rsp=1 , %1985~1(<2)◂{ 3'(= a2◂ [ a30◂ [ a18◂ [ ]{| l |}]] ) 2(<3)◂4'(= a26◂ [ a18◂ [ ]{| l |}] ) } %1979~1'(= r ) %1978~0'(= r ) %1975~8'(= a44◂ [ *{ }] ) 
; #198 1(<2)◂{ 3'(= a2◂ [ a30◂ [ a18◂ [ ]{| l |}]] ) 2(<3)◂4'(= a26◂ [ a18◂ [ ]{| l |}] ) } ⊢ 0(<2)◂1(<2)◂{ 3'(= a2◂ [ a30◂ [ a18◂ [ ]{| l |}]] ) 2(<3)◂4'(= a26◂ [ a18◂ [ ]{| l |}] ) }
;; rsp=1 , %1986~0(<2)◂1(<2)◂{ 3'(= a2◂ [ a30◂ [ a18◂ [ ]{| l |}]] ) 2(<3)◂4'(= a26◂ [ a18◂ [ ]{| l |}] ) } %1979~1'(= r ) %1978~0'(= r ) %1975~8'(= a44◂ [ *{ }] ) 
; #24 0(<2)◂1(<2)◂{ 3'(= a2◂ [ a30◂ [ a18◂ [ ]{| l |}]] ) 2(<3)◂4'(= a26◂ [ a18◂ [ ]{| l |}] ) } ⊢ 0(<2)◂0(<2)◂1(<2)◂{ 3'(= a2◂ [ a30◂ [ a18◂ [ ]{| l |}]] ) 2(<3)◂4'(= a26◂ [ a18◂ [ ]{| l |}] ) }
;; rsp=1 , %1987~0(<2)◂0(<2)◂1(<2)◂{ 3'(= a2◂ [ a30◂ [ a18◂ [ ]{| l |}]] ) 2(<3)◂4'(= a26◂ [ a18◂ [ ]{| l |}] ) } %1979~1'(= r ) %1978~0'(= r ) %1975~8'(= a44◂ [ *{ }] ) 
; ∎ 0(<2)◂0(<2)◂1(<2)◂{ 3'(= a2◂ [ a30◂ [ a18◂ [ ]{| l |}]] ) 2(<3)◂4'(= a26◂ [ a18◂ [ ]{| l |}] ) }
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 8'(= a44◂ [ *{ }] )
	mov rdi,QWORD [rsp-8+8*1]
	C_PUSH_REGS
	mov r8,rdi
	call LB_1876
	C_POP_REGS
; .mov_ptn2 0(<2)◂0(<2)◂1(<2)◂{ 3'(= a2◂ [ a30◂ [ a18◂ [ ]{| l |}]] ) 2(<3)◂4'(= a26◂ [ a18◂ [ ]{| l |}] ) } ⊢ 2'(= a3◂ [ a44◂ [ a16◂ [ *{ a2◂ [ a30◂ [ a18◂ [ ]{| l |}]]a29◂ [ a18◂ [ ]{| l |}]}]]] )
; .mov_ptn 0(<2)◂0(<2)◂1(<2)◂{ 3'(= a2◂ [ a30◂ [ a18◂ [ ]{| l |}]] ) 2(<3)◂4'(= a26◂ [ a18◂ [ ]{| l |}] ) } ⊢ 2'(= a3◂ [ a44◂ [ a16◂ [ *{ a2◂ [ a30◂ [ a18◂ [ ]{| l |}]]a29◂ [ a18◂ [ ]{| l |}]}]]] )
	ALC_RCD 2, rax
	mov r13,rax
	mov rax,r9
	mov QWORD [r13+8+8*0],rax
	mov rax,r10
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],2
	mov QWORD [rax+8],rdi
	mov QWORD [r13+8+8*1],rax
	mov rax,r13
	mov BYTE [rax+6],1
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,8
	jmp LB_3362
LB_3373:
;; ?. 2'(= a44◂ [ *{ a2◂ [ a30◂ [ a18◂ [ ]{| l |}]]a26◂ [ a18◂ [ ]{| l |}]}] ) ⊢ 1(<2)◂3'(= a2◂ [ *{ rr{| l |}}] )
	mov QWORD [GBG_VCT+8*0],rdi
	mov r9,QWORD [rdi+8]
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_LN rdi
;; rsp=1 , %1981~3'(= a2◂ [ *{ rr{| l |}}] ) %1979~1'(= r ) %1978~0'(= r ) %1975~8'(= a44◂ [ *{ }] ) 
; #197 3'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 1(<2)◂3'(= a2◂ [ *{ rr{| l |}}] )
;; rsp=1 , %1988~1(<2)◂3'(= a2◂ [ *{ rr{| l |}}] ) %1979~1'(= r ) %1978~0'(= r ) %1975~8'(= a44◂ [ *{ }] ) 
; #24 1(<2)◂3'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 0(<2)◂1(<2)◂3'(= a2◂ [ *{ rr{| l |}}] )
;; rsp=1 , %1989~0(<2)◂1(<2)◂3'(= a2◂ [ *{ rr{| l |}}] ) %1979~1'(= r ) %1978~0'(= r ) %1975~8'(= a44◂ [ *{ }] ) 
; ∎ 0(<2)◂1(<2)◂3'(= a2◂ [ *{ rr{| l |}}] )
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 8'(= a44◂ [ *{ }] )
	mov rdi,QWORD [rsp-8+8*1]
	C_PUSH_REGS
	mov r8,rdi
	call LB_1876
	C_POP_REGS
; .mov_ptn2 0(<2)◂1(<2)◂3'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 2'(= a3◂ [ a44◂ [ a16◂ [ *{ a2◂ [ a30◂ [ a18◂ [ ]{| l |}]]a29◂ [ a18◂ [ ]{| l |}]}]]] )
; .mov_ptn 0(<2)◂1(<2)◂3'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 2'(= a3◂ [ a44◂ [ a16◂ [ *{ a2◂ [ a30◂ [ a18◂ [ ]{| l |}]]a29◂ [ a18◂ [ ]{| l |}]}]]] )
	mov rax,r9
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],1
	mov QWORD [rax+8],rdi
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,8
	jmp LB_3362
LB_3362:
	cmp BYTE [r8+6],0
	jnz LB_3330
	POP_GRM_SCC
	ret
LB_3330:
	RB_GRM
	jmp LB_3378
LB_3377:
	add r14,1 
LB_3378:
	cmp r14,r9
	jge LB_3379
	JZ_SPC BYTE [r13+8+r14], LB_3377
LB_3379
	call GRM_221
	cmp BYTE [r8+6],0
	jnz LB_3382
	jmp LB_3383
LB_3382:
	jmp LB_3380
LB_3383:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a44◂ [ *{ }] ) ⊢ 8'(= a44◂ [ *{ }] )
; .mov_ptn 2'(= a44◂ [ *{ }] ) ⊢ 8'(= a44◂ [ *{ }] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_3381
LB_3380:
	add rsp,0
	jmp LB_3376
LB_3381:
	jmp LB_3385
LB_3384:
	add r14,1 
LB_3385:
	cmp r14,r9
	jge LB_3386
	JZ_SPC BYTE [r13+8+r14], LB_3384
LB_3386
	lea rax,[r14+3]
	cmp rax,r9
	jg LB_3389
	jmp LB_3390
LB_3389:
	mov r8,unt_1
	jmp LB_3387
LB_3390:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],226
	jnz LB_3391
	cmp BYTE [rdi+1],136
	jnz LB_3391
	cmp BYTE [rdi+2],144
	jnz LB_3391
	jmp LB_3392
LB_3391:
	mov r8,unt_1
	jmp LB_3387
LB_3392:
	add r14,3
	jmp LB_3388
LB_3387:
	add rsp,8
	jmp LB_3376
LB_3388:
	jmp LB_3394
LB_3393:
	add r14,1 
LB_3394:
	cmp r14,r9
	jge LB_3395
	JZ_SPC BYTE [r13+8+r14], LB_3393
LB_3395
	call GRM_243
	cmp BYTE [r8+6],0
	jnz LB_3398
	jmp LB_3399
LB_3398:
	jmp LB_3396
LB_3399:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a44◂ [ a2◂ [ a30◂ [ a18◂ [ ]{| l |}]]] ) ⊢ 9'(= a44◂ [ a2◂ [ a30◂ [ a18◂ [ ]{| l |}]]] )
; .mov_ptn 2'(= a44◂ [ a2◂ [ a30◂ [ a18◂ [ ]{| l |}]]] ) ⊢ 9'(= a44◂ [ a2◂ [ a30◂ [ a18◂ [ ]{| l |}]]] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_3397
LB_3396:
	add rsp,8
	jmp LB_3376
LB_3397:
	jmp LB_3401
LB_3400:
	add r14,1 
LB_3401:
	cmp r14,r9
	jge LB_3402
	JZ_SPC BYTE [r13+8+r14], LB_3400
LB_3402
	call GRM_239
	cmp BYTE [r8+6],0
	jnz LB_3405
	jmp LB_3406
LB_3405:
	jmp LB_3403
LB_3406:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a44◂ [ a26◂ [ a18◂ [ ]{| l |}]] ) ⊢ 10'(= a44◂ [ a26◂ [ a18◂ [ ]{| l |}]] )
; .mov_ptn 2'(= a44◂ [ a26◂ [ a18◂ [ ]{| l |}]] ) ⊢ 10'(= a44◂ [ a26◂ [ a18◂ [ ]{| l |}]] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_3404
LB_3403:
	add rsp,16
	jmp LB_3376
LB_3404:
	jmp LB_3408
LB_3407:
	add r14,1 
LB_3408:
	cmp r14,r9
	jge LB_3409
	JZ_SPC BYTE [r13+8+r14], LB_3407
LB_3409
	call GRM_241
	cmp BYTE [r8+6],0
	jnz LB_3412
	jmp LB_3413
LB_3412:
	jmp LB_3410
LB_3413:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a44◂ [ a16◂ [ *{ a2◂ [ a30◂ [ a18◂ [ ]{| l |}]]a29◂ [ a18◂ [ ]{| l |}]}]] ) ⊢ 11'(= a44◂ [ a16◂ [ *{ a2◂ [ a30◂ [ a18◂ [ ]{| l |}]]a29◂ [ a18◂ [ ]{| l |}]}]] )
; .mov_ptn 2'(= a44◂ [ a16◂ [ *{ a2◂ [ a30◂ [ a18◂ [ ]{| l |}]]a29◂ [ a18◂ [ ]{| l |}]}]] ) ⊢ 11'(= a44◂ [ a16◂ [ *{ a2◂ [ a30◂ [ a18◂ [ ]{| l |}]]a29◂ [ a18◂ [ ]{| l |}]}]] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_3411
LB_3410:
	add rsp,24
	jmp LB_3376
LB_3411:
	mov QWORD [rsp+8*4],r14
	mov r13,QWORD [rsp+16+8*4]
	mov r14,QWORD [rsp+8*4]
	jmp LB_3414
LB_3414
;; rsp=4 , %1995~1'(= r ) %1994~0'(= r ) %1993~11'(= a44◂ [ a16◂ [ *{ a2◂ [ a30◂ [ a18◂ [ ]{| l |}]]a29◂ [ a18◂ [ ]{| l |}]}]] ) %1992~10'(= a44◂ [ a26◂ [ a18◂ [ ]{| l |}]] ) %1991~9'(= a44◂ [ a2◂ [ a30◂ [ a18◂ [ ]{| l |}]]] ) %1990~8'(= a44◂ [ *{ }] ) 
; #199 { 9'(= a44◂ [ a2◂ [ a30◂ [ a18◂ [ ]{| l |}]]] ) 10'(= a44◂ [ a26◂ [ a18◂ [ ]{| l |}]] ) } ⊢ 2'(= a44◂ [ *{ a2◂ [ a30◂ [ a18◂ [ ]{| l |}]]a26◂ [ a18◂ [ ]{| l |}]}] )
	sub rsp,16
	mov QWORD [rsp+8*0],r13
	mov QWORD [rsp+8*1],r14
; .mov_ptn2 { 9'(= a44◂ [ a2◂ [ a30◂ [ a18◂ [ ]{| l |}]]] ) 10'(= a44◂ [ a26◂ [ a18◂ [ ]{| l |}]] ) } ⊢ { 0'(= a44◂ [ a2◂ [ a30◂ [ a18◂ [ ]{| l |}]]] ) 1'(= a44◂ [ a26◂ [ a18◂ [ ]{| l |}]] ) }
; .mov_ptn 10'(= a44◂ [ a26◂ [ a18◂ [ ]{| l |}]] ) ⊢ 1'(= a44◂ [ a26◂ [ a18◂ [ ]{| l |}]] )
	mov rax,QWORD [rsp-8+8*4]
	mov r14,rax
; .mov_ptn 9'(= a44◂ [ a2◂ [ a30◂ [ a18◂ [ ]{| l |}]]] ) ⊢ 0'(= a44◂ [ a2◂ [ a30◂ [ a18◂ [ ]{| l |}]]] )
	mov rax,QWORD [rsp-8+8*5]
	mov r13,rax
	call LB_3363
	mov r14,QWORD [rsp-8+8*2]
	mov r8,r13
	mov r13,QWORD [rsp-8+8*1]
	add rsp,16
;; rsp=4 , %1996~2'(= a44◂ [ *{ a2◂ [ a30◂ [ a18◂ [ ]{| l |}]]a26◂ [ a18◂ [ ]{| l |}]}] ) %1995~1'(= r ) %1994~0'(= r ) %1993~11'(= a44◂ [ a16◂ [ *{ a2◂ [ a30◂ [ a18◂ [ ]{| l |}]]a29◂ [ a18◂ [ ]{| l |}]}]] ) %1990~8'(= a44◂ [ *{ }] ) 
; #199 { 2'(= a44◂ [ *{ a2◂ [ a30◂ [ a18◂ [ ]{| l |}]]a26◂ [ a18◂ [ ]{| l |}]}] ) 11'(= a44◂ [ a16◂ [ *{ a2◂ [ a30◂ [ a18◂ [ ]{| l |}]]a29◂ [ a18◂ [ ]{| l |}]}]] ) } ⊢ 2'(= a44◂ [ *{ *{ a2◂ [ a30◂ [ a18◂ [ ]{| l |}]]a26◂ [ a18◂ [ ]{| l |}]}a16◂ [ *{ a2◂ [ a30◂ [ a18◂ [ ]{| l |}]]a29◂ [ a18◂ [ ]{| l |}]}]}] )
	sub rsp,16
	mov QWORD [rsp+8*0],r13
	mov QWORD [rsp+8*1],r14
; .mov_ptn2 { 2'(= a44◂ [ *{ a2◂ [ a30◂ [ a18◂ [ ]{| l |}]]a26◂ [ a18◂ [ ]{| l |}]}] ) 11'(= a44◂ [ a16◂ [ *{ a2◂ [ a30◂ [ a18◂ [ ]{| l |}]]a29◂ [ a18◂ [ ]{| l |}]}]] ) } ⊢ { 0'(= a44◂ [ *{ a2◂ [ a30◂ [ a18◂ [ ]{| l |}]]a26◂ [ a18◂ [ ]{| l |}]}] ) 1'(= a44◂ [ a16◂ [ *{ a2◂ [ a30◂ [ a18◂ [ ]{| l |}]]a29◂ [ a18◂ [ ]{| l |}]}]] ) }
; .mov_ptn 11'(= a44◂ [ a16◂ [ *{ a2◂ [ a30◂ [ a18◂ [ ]{| l |}]]a29◂ [ a18◂ [ ]{| l |}]}]] ) ⊢ 1'(= a44◂ [ a16◂ [ *{ a2◂ [ a30◂ [ a18◂ [ ]{| l |}]]a29◂ [ a18◂ [ ]{| l |}]}]] )
	mov rax,QWORD [rsp-8+8*3]
	mov r14,rax
; .mov_ptn 2'(= a44◂ [ *{ a2◂ [ a30◂ [ a18◂ [ ]{| l |}]]a26◂ [ a18◂ [ ]{| l |}]}] ) ⊢ 0'(= a44◂ [ *{ a2◂ [ a30◂ [ a18◂ [ ]{| l |}]]a26◂ [ a18◂ [ ]{| l |}]}] )
	mov rax,r8
	mov r13,rax
	call LB_3416
	mov r14,QWORD [rsp-8+8*2]
	mov r8,r13
	mov r13,QWORD [rsp-8+8*1]
	add rsp,40
;; rsp=1 , %1997~2'(= a44◂ [ *{ *{ a2◂ [ a30◂ [ a18◂ [ ]{| l |}]]a26◂ [ a18◂ [ ]{| l |}]}a16◂ [ *{ a2◂ [ a30◂ [ a18◂ [ ]{| l |}]]a29◂ [ a18◂ [ ]{| l |}]}]}] ) %1995~1'(= r ) %1994~0'(= r ) %1990~8'(= a44◂ [ *{ }] ) 
;; ? 2'(= a44◂ [ *{ *{ a2◂ [ a30◂ [ a18◂ [ ]{| l |}]]a26◂ [ a18◂ [ ]{| l |}]}a16◂ [ *{ a2◂ [ a30◂ [ a18◂ [ ]{| l |}]]a29◂ [ a18◂ [ ]{| l |}]}]}] ) ⊢ 0(<2)◂{ { 4'(= a2◂ [ a30◂ [ a18◂ [ ]{| l |}]] ) 5'(= a26◂ [ a18◂ [ ]{| l |}] ) } 6'(= a16◂ [ *{ a2◂ [ a30◂ [ a18◂ [ ]{| l |}]]a29◂ [ a18◂ [ ]{| l |}]}] ) }
	mov rdi,r8
	cmp BYTE [rdi+6],0
	jnz LB_3427
	jmp LB_3428
LB_3427:
	jmp LB_3426
LB_3428:
	mov r9, QWORD [r8+8]
	mov r10, QWORD [r9+8]
	mov r11, QWORD [r9+16]
	mov QWORD [GBG_VCT+8*0],r9
	mov rcx, QWORD [r8+16]
	mov QWORD [GBG_VCT+8*1],r8
	mov rdi,QWORD [GBG_VCT+8*1]
	FREE_RCD 2,rdi
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_RCD 2,rdi
;; rsp=1 , %2001~6'(= a16◂ [ *{ a2◂ [ a30◂ [ a18◂ [ ]{| l |}]]a29◂ [ a18◂ [ ]{| l |}]}] ) %2000~5'(= a26◂ [ a18◂ [ ]{| l |}] ) %1999~4'(= a2◂ [ a30◂ [ a18◂ [ ]{| l |}]] ) %1995~1'(= r ) %1994~0'(= r ) %1990~8'(= a44◂ [ *{ }] ) 
; #121 5'(= a26◂ [ a18◂ [ ]{| l |}] ) ⊢ 2(<3)◂5'(= a26◂ [ a18◂ [ ]{| l |}] )
;; rsp=1 , %2002~2(<3)◂5'(= a26◂ [ a18◂ [ ]{| l |}] ) %2001~6'(= a16◂ [ *{ a2◂ [ a30◂ [ a18◂ [ ]{| l |}]]a29◂ [ a18◂ [ ]{| l |}]}] ) %1999~4'(= a2◂ [ a30◂ [ a18◂ [ ]{| l |}]] ) %1995~1'(= r ) %1994~0'(= r ) %1990~8'(= a44◂ [ *{ }] ) 
; #55 { { 4'(= a2◂ [ a30◂ [ a18◂ [ ]{| l |}]] ) 2(<3)◂5'(= a26◂ [ a18◂ [ ]{| l |}] ) } 6'(= a16◂ [ *{ a2◂ [ a30◂ [ a18◂ [ ]{| l |}]]a29◂ [ a18◂ [ ]{| l |}]}] ) } ⊢ 0(<2)◂{ { 4'(= a2◂ [ a30◂ [ a18◂ [ ]{| l |}]] ) 2(<3)◂5'(= a26◂ [ a18◂ [ ]{| l |}] ) } 6'(= a16◂ [ *{ a2◂ [ a30◂ [ a18◂ [ ]{| l |}]]a29◂ [ a18◂ [ ]{| l |}]}] ) }
;; rsp=1 , %2003~0(<2)◂{ { 4'(= a2◂ [ a30◂ [ a18◂ [ ]{| l |}]] ) 2(<3)◂5'(= a26◂ [ a18◂ [ ]{| l |}] ) } 6'(= a16◂ [ *{ a2◂ [ a30◂ [ a18◂ [ ]{| l |}]]a29◂ [ a18◂ [ ]{| l |}]}] ) } %1995~1'(= r ) %1994~0'(= r ) %1990~8'(= a44◂ [ *{ }] ) 
; #198 0(<2)◂{ { 4'(= a2◂ [ a30◂ [ a18◂ [ ]{| l |}]] ) 2(<3)◂5'(= a26◂ [ a18◂ [ ]{| l |}] ) } 6'(= a16◂ [ *{ a2◂ [ a30◂ [ a18◂ [ ]{| l |}]]a29◂ [ a18◂ [ ]{| l |}]}] ) } ⊢ 0(<2)◂0(<2)◂{ { 4'(= a2◂ [ a30◂ [ a18◂ [ ]{| l |}]] ) 2(<3)◂5'(= a26◂ [ a18◂ [ ]{| l |}] ) } 6'(= a16◂ [ *{ a2◂ [ a30◂ [ a18◂ [ ]{| l |}]]a29◂ [ a18◂ [ ]{| l |}]}] ) }
;; rsp=1 , %2004~0(<2)◂0(<2)◂{ { 4'(= a2◂ [ a30◂ [ a18◂ [ ]{| l |}]] ) 2(<3)◂5'(= a26◂ [ a18◂ [ ]{| l |}] ) } 6'(= a16◂ [ *{ a2◂ [ a30◂ [ a18◂ [ ]{| l |}]]a29◂ [ a18◂ [ ]{| l |}]}] ) } %1995~1'(= r ) %1994~0'(= r ) %1990~8'(= a44◂ [ *{ }] ) 
; #24 0(<2)◂0(<2)◂{ { 4'(= a2◂ [ a30◂ [ a18◂ [ ]{| l |}]] ) 2(<3)◂5'(= a26◂ [ a18◂ [ ]{| l |}] ) } 6'(= a16◂ [ *{ a2◂ [ a30◂ [ a18◂ [ ]{| l |}]]a29◂ [ a18◂ [ ]{| l |}]}] ) } ⊢ 0(<2)◂0(<2)◂0(<2)◂{ { 4'(= a2◂ [ a30◂ [ a18◂ [ ]{| l |}]] ) 2(<3)◂5'(= a26◂ [ a18◂ [ ]{| l |}] ) } 6'(= a16◂ [ *{ a2◂ [ a30◂ [ a18◂ [ ]{| l |}]]a29◂ [ a18◂ [ ]{| l |}]}] ) }
;; rsp=1 , %2005~0(<2)◂0(<2)◂0(<2)◂{ { 4'(= a2◂ [ a30◂ [ a18◂ [ ]{| l |}]] ) 2(<3)◂5'(= a26◂ [ a18◂ [ ]{| l |}] ) } 6'(= a16◂ [ *{ a2◂ [ a30◂ [ a18◂ [ ]{| l |}]]a29◂ [ a18◂ [ ]{| l |}]}] ) } %1995~1'(= r ) %1994~0'(= r ) %1990~8'(= a44◂ [ *{ }] ) 
; ∎ 0(<2)◂0(<2)◂0(<2)◂{ { 4'(= a2◂ [ a30◂ [ a18◂ [ ]{| l |}]] ) 2(<3)◂5'(= a26◂ [ a18◂ [ ]{| l |}] ) } 6'(= a16◂ [ *{ a2◂ [ a30◂ [ a18◂ [ ]{| l |}]]a29◂ [ a18◂ [ ]{| l |}]}] ) }
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 8'(= a44◂ [ *{ }] )
	mov rdi,QWORD [rsp-8+8*1]
	C_PUSH_REGS
	mov r8,rdi
	call LB_1876
	C_POP_REGS
; .mov_ptn2 0(<2)◂0(<2)◂0(<2)◂{ { 4'(= a2◂ [ a30◂ [ a18◂ [ ]{| l |}]] ) 2(<3)◂5'(= a26◂ [ a18◂ [ ]{| l |}] ) } 6'(= a16◂ [ *{ a2◂ [ a30◂ [ a18◂ [ ]{| l |}]]a29◂ [ a18◂ [ ]{| l |}]}] ) } ⊢ 2'(= a3◂ [ a44◂ [ a16◂ [ *{ a2◂ [ a30◂ [ a18◂ [ ]{| l |}]]a29◂ [ a18◂ [ ]{| l |}]}]]] )
; .mov_ptn 0(<2)◂0(<2)◂0(<2)◂{ { 4'(= a2◂ [ a30◂ [ a18◂ [ ]{| l |}]] ) 2(<3)◂5'(= a26◂ [ a18◂ [ ]{| l |}] ) } 6'(= a16◂ [ *{ a2◂ [ a30◂ [ a18◂ [ ]{| l |}]]a29◂ [ a18◂ [ ]{| l |}]}] ) } ⊢ 2'(= a3◂ [ a44◂ [ a16◂ [ *{ a2◂ [ a30◂ [ a18◂ [ ]{| l |}]]a29◂ [ a18◂ [ ]{| l |}]}]]] )
	ALC_RCD 2, rax
	mov r13,rax
	ALC_RCD 2, rax
	mov r14,rax
	mov rax,r10
	mov QWORD [r14+8+8*0],rax
	mov rax,r11
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],2
	mov QWORD [rax+8],rdi
	mov QWORD [r14+8+8*1],rax
	mov rax,r14
	mov QWORD [r13+8+8*0],rax
	mov rax,rcx
	mov QWORD [r13+8+8*1],rax
	mov rax,r13
	mov BYTE [rax+6],0
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,8
	jmp LB_3415
LB_3426:
;; ?. 2'(= a44◂ [ *{ *{ a2◂ [ a30◂ [ a18◂ [ ]{| l |}]]a26◂ [ a18◂ [ ]{| l |}]}a16◂ [ *{ a2◂ [ a30◂ [ a18◂ [ ]{| l |}]]a29◂ [ a18◂ [ ]{| l |}]}]}] ) ⊢ 1(<2)◂3'(= a2◂ [ *{ rr{| l |}}] )
	mov QWORD [GBG_VCT+8*0],rdi
	mov r9,QWORD [rdi+8]
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_LN rdi
;; rsp=1 , %1998~3'(= a2◂ [ *{ rr{| l |}}] ) %1995~1'(= r ) %1994~0'(= r ) %1990~8'(= a44◂ [ *{ }] ) 
; #197 3'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 1(<2)◂3'(= a2◂ [ *{ rr{| l |}}] )
;; rsp=1 , %2006~1(<2)◂3'(= a2◂ [ *{ rr{| l |}}] ) %1995~1'(= r ) %1994~0'(= r ) %1990~8'(= a44◂ [ *{ }] ) 
; #24 1(<2)◂3'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 0(<2)◂1(<2)◂3'(= a2◂ [ *{ rr{| l |}}] )
;; rsp=1 , %2007~0(<2)◂1(<2)◂3'(= a2◂ [ *{ rr{| l |}}] ) %1995~1'(= r ) %1994~0'(= r ) %1990~8'(= a44◂ [ *{ }] ) 
; ∎ 0(<2)◂1(<2)◂3'(= a2◂ [ *{ rr{| l |}}] )
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 8'(= a44◂ [ *{ }] )
	mov rdi,QWORD [rsp-8+8*1]
	C_PUSH_REGS
	mov r8,rdi
	call LB_1876
	C_POP_REGS
; .mov_ptn2 0(<2)◂1(<2)◂3'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 2'(= a3◂ [ a44◂ [ a16◂ [ *{ a2◂ [ a30◂ [ a18◂ [ ]{| l |}]]a29◂ [ a18◂ [ ]{| l |}]}]]] )
; .mov_ptn 0(<2)◂1(<2)◂3'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 2'(= a3◂ [ a44◂ [ a16◂ [ *{ a2◂ [ a30◂ [ a18◂ [ ]{| l |}]]a29◂ [ a18◂ [ ]{| l |}]}]]] )
	mov rax,r9
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],1
	mov QWORD [rax+8],rdi
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,8
	jmp LB_3415
LB_3415:
	cmp BYTE [r8+6],0
	jnz LB_3376
	POP_GRM_SCC
	ret
LB_3376:
	POP_GRM_FAIL 
	ret
ETR_242:
	mov r9,0x0000_ffff_ffff_ffff
	and r9,[r13]
	call GRM_242
	ret
GRM_242:
	PUSH_GRM
	jmp LB_3431
LB_3430:
	add r14,1 
LB_3431:
	cmp r14,r9
	jge LB_3432
	JZ_LINE_SPC BYTE [r13+8+r14], LB_3430
LB_3432
	call GRM_221
	cmp BYTE [r8+6],0
	jnz LB_3435
	jmp LB_3436
LB_3435:
	jmp LB_3433
LB_3436:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a44◂ [ *{ }] ) ⊢ 8'(= a44◂ [ *{ }] )
; .mov_ptn 2'(= a44◂ [ *{ }] ) ⊢ 8'(= a44◂ [ *{ }] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_3434
LB_3433:
	add rsp,0
	jmp LB_3429
LB_3434:
	jmp LB_3438
LB_3437:
	add r14,1 
LB_3438:
	cmp r14,r9
	jge LB_3439
	JZ_LINE_SPC BYTE [r13+8+r14], LB_3437
LB_3439
	lea rax,[r14+4]
	cmp rax,r9
	jg LB_3442
	jmp LB_3443
LB_3442:
	mov r8,unt_1
	jmp LB_3440
LB_3443:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],226
	jnz LB_3444
	cmp BYTE [rdi+1],136
	jnz LB_3444
	cmp BYTE [rdi+2],144
	jnz LB_3444
	cmp BYTE [rdi+3],46
	jnz LB_3444
	jmp LB_3445
LB_3444:
	mov r8,unt_1
	jmp LB_3440
LB_3445:
	add r14,4
	jmp LB_3441
LB_3440:
	add rsp,8
	jmp LB_3429
LB_3441:
	jmp LB_3447
LB_3446:
	add r14,1 
LB_3447:
	cmp r14,r9
	jge LB_3448
	JZ_LINE_SPC BYTE [r13+8+r14], LB_3446
LB_3448
	call GRM_202
	cmp BYTE [r8+6],0
	jnz LB_3451
	jmp LB_3452
LB_3451:
	jmp LB_3449
LB_3452:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a17◂ [ a23◂ [ a18◂ [ ]{| l |}]] ) ⊢ 9'(= a17◂ [ a23◂ [ a18◂ [ ]{| l |}]] )
; .mov_ptn 2'(= a17◂ [ a23◂ [ a18◂ [ ]{| l |}]] ) ⊢ 9'(= a17◂ [ a23◂ [ a18◂ [ ]{| l |}]] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_3450
LB_3449:
	add rsp,8
	POP_GRM_FAIL
	ret
LB_3450:
	jmp LB_3454
LB_3453:
	add r14,1 
LB_3454:
	cmp r14,r9
	jge LB_3455
	JZ_LINE_SPC BYTE [r13+8+r14], LB_3453
LB_3455
	call GRM_246
	cmp BYTE [r8+6],0
	jnz LB_3458
	jmp LB_3459
LB_3458:
	jmp LB_3456
LB_3459:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a44◂ [ a2◂ [ a30◂ [ a18◂ [ ]{| l |}]]] ) ⊢ 10'(= a44◂ [ a2◂ [ a30◂ [ a18◂ [ ]{| l |}]]] )
; .mov_ptn 2'(= a44◂ [ a2◂ [ a30◂ [ a18◂ [ ]{| l |}]]] ) ⊢ 10'(= a44◂ [ a2◂ [ a30◂ [ a18◂ [ ]{| l |}]]] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_3457
LB_3456:
	add rsp,16
	POP_GRM_FAIL
	ret
LB_3457:
	jmp LB_3461
LB_3460:
	add r14,1 
LB_3461:
	cmp r14,r9
	jge LB_3462
	JZ_LINE_SPC BYTE [r13+8+r14], LB_3460
LB_3462
	call GRM_239
	cmp BYTE [r8+6],0
	jnz LB_3465
	jmp LB_3466
LB_3465:
	jmp LB_3463
LB_3466:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a44◂ [ a26◂ [ a18◂ [ ]{| l |}]] ) ⊢ 11'(= a44◂ [ a26◂ [ a18◂ [ ]{| l |}]] )
; .mov_ptn 2'(= a44◂ [ a26◂ [ a18◂ [ ]{| l |}]] ) ⊢ 11'(= a44◂ [ a26◂ [ a18◂ [ ]{| l |}]] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_3464
LB_3463:
	add rsp,24
	POP_GRM_FAIL
	ret
LB_3464:
	mov QWORD [rsp+8*4],r14
	mov r13,QWORD [rsp+16+8*4]
	mov r14,QWORD [rsp+8*4]
	jmp LB_3467
LB_3467
;; rsp=4 , %2013~1'(= r ) %2012~0'(= r ) %2011~11'(= a44◂ [ a26◂ [ a18◂ [ ]{| l |}]] ) %2010~10'(= a44◂ [ a2◂ [ a30◂ [ a18◂ [ ]{| l |}]]] ) %2009~9'(= a17◂ [ a23◂ [ a18◂ [ ]{| l |}]] ) %2008~8'(= a44◂ [ *{ }] ) 
; #199 { 10'(= a44◂ [ a2◂ [ a30◂ [ a18◂ [ ]{| l |}]]] ) 11'(= a44◂ [ a26◂ [ a18◂ [ ]{| l |}]] ) } ⊢ 2'(= a44◂ [ *{ a2◂ [ a30◂ [ a18◂ [ ]{| l |}]]a26◂ [ a18◂ [ ]{| l |}]}] )
	sub rsp,16
	mov QWORD [rsp+8*0],r13
	mov QWORD [rsp+8*1],r14
; .mov_ptn2 { 10'(= a44◂ [ a2◂ [ a30◂ [ a18◂ [ ]{| l |}]]] ) 11'(= a44◂ [ a26◂ [ a18◂ [ ]{| l |}]] ) } ⊢ { 0'(= a44◂ [ a2◂ [ a30◂ [ a18◂ [ ]{| l |}]]] ) 1'(= a44◂ [ a26◂ [ a18◂ [ ]{| l |}]] ) }
; .mov_ptn 11'(= a44◂ [ a26◂ [ a18◂ [ ]{| l |}]] ) ⊢ 1'(= a44◂ [ a26◂ [ a18◂ [ ]{| l |}]] )
	mov rax,QWORD [rsp-8+8*3]
	mov r14,rax
; .mov_ptn 10'(= a44◂ [ a2◂ [ a30◂ [ a18◂ [ ]{| l |}]]] ) ⊢ 0'(= a44◂ [ a2◂ [ a30◂ [ a18◂ [ ]{| l |}]]] )
	mov rax,QWORD [rsp-8+8*4]
	mov r13,rax
	call LB_3363
	mov r14,QWORD [rsp-8+8*2]
	mov r8,r13
	mov r13,QWORD [rsp-8+8*1]
	add rsp,32
;; rsp=2 , %2014~2'(= a44◂ [ *{ a2◂ [ a30◂ [ a18◂ [ ]{| l |}]]a26◂ [ a18◂ [ ]{| l |}]}] ) %2013~1'(= r ) %2012~0'(= r ) %2009~9'(= a17◂ [ a23◂ [ a18◂ [ ]{| l |}]] ) %2008~8'(= a44◂ [ *{ }] ) 
;; ? 2'(= a44◂ [ *{ a2◂ [ a30◂ [ a18◂ [ ]{| l |}]]a26◂ [ a18◂ [ ]{| l |}]}] ) ⊢ 0(<2)◂{ 3'(= a2◂ [ a30◂ [ a18◂ [ ]{| l |}]] ) 4'(= a26◂ [ a18◂ [ ]{| l |}] ) }
	mov rdi,r8
	cmp BYTE [rdi+6],0
	jnz LB_3470
	jmp LB_3471
LB_3470:
	jmp LB_3469
LB_3471:
	mov r9, QWORD [r8+8]
	mov r10, QWORD [r8+16]
	mov QWORD [GBG_VCT+8*0],r8
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_RCD 2,rdi
;; rsp=2 , %2017~4'(= a26◂ [ a18◂ [ ]{| l |}] ) %2016~3'(= a2◂ [ a30◂ [ a18◂ [ ]{| l |}]] ) %2013~1'(= r ) %2012~0'(= r ) %2009~9'(= a17◂ [ a23◂ [ a18◂ [ ]{| l |}]] ) %2008~8'(= a44◂ [ *{ }] ) 
; #121 4'(= a26◂ [ a18◂ [ ]{| l |}] ) ⊢ 2(<3)◂4'(= a26◂ [ a18◂ [ ]{| l |}] )
;; rsp=2 , %2018~2(<3)◂4'(= a26◂ [ a18◂ [ ]{| l |}] ) %2016~3'(= a2◂ [ a30◂ [ a18◂ [ ]{| l |}]] ) %2013~1'(= r ) %2012~0'(= r ) %2009~9'(= a17◂ [ a23◂ [ a18◂ [ ]{| l |}]] ) %2008~8'(= a44◂ [ *{ }] ) 
; #54 { 9'(= a17◂ [ a23◂ [ a18◂ [ ]{| l |}]] ) 3'(= a2◂ [ a30◂ [ a18◂ [ ]{| l |}]] ) 2(<3)◂4'(= a26◂ [ a18◂ [ ]{| l |}] ) } ⊢ 1(<2)◂{ 9'(= a17◂ [ a23◂ [ a18◂ [ ]{| l |}]] ) 3'(= a2◂ [ a30◂ [ a18◂ [ ]{| l |}]] ) 2(<3)◂4'(= a26◂ [ a18◂ [ ]{| l |}] ) }
;; rsp=2 , %2019~1(<2)◂{ 9'(= a17◂ [ a23◂ [ a18◂ [ ]{| l |}]] ) 3'(= a2◂ [ a30◂ [ a18◂ [ ]{| l |}]] ) 2(<3)◂4'(= a26◂ [ a18◂ [ ]{| l |}] ) } %2013~1'(= r ) %2012~0'(= r ) %2008~8'(= a44◂ [ *{ }] ) 
; #198 1(<2)◂{ 9'(= a17◂ [ a23◂ [ a18◂ [ ]{| l |}]] ) 3'(= a2◂ [ a30◂ [ a18◂ [ ]{| l |}]] ) 2(<3)◂4'(= a26◂ [ a18◂ [ ]{| l |}] ) } ⊢ 0(<2)◂1(<2)◂{ 9'(= a17◂ [ a23◂ [ a18◂ [ ]{| l |}]] ) 3'(= a2◂ [ a30◂ [ a18◂ [ ]{| l |}]] ) 2(<3)◂4'(= a26◂ [ a18◂ [ ]{| l |}] ) }
;; rsp=2 , %2020~0(<2)◂1(<2)◂{ 9'(= a17◂ [ a23◂ [ a18◂ [ ]{| l |}]] ) 3'(= a2◂ [ a30◂ [ a18◂ [ ]{| l |}]] ) 2(<3)◂4'(= a26◂ [ a18◂ [ ]{| l |}] ) } %2013~1'(= r ) %2012~0'(= r ) %2008~8'(= a44◂ [ *{ }] ) 
; #24 0(<2)◂1(<2)◂{ 9'(= a17◂ [ a23◂ [ a18◂ [ ]{| l |}]] ) 3'(= a2◂ [ a30◂ [ a18◂ [ ]{| l |}]] ) 2(<3)◂4'(= a26◂ [ a18◂ [ ]{| l |}] ) } ⊢ 0(<2)◂0(<2)◂1(<2)◂{ 9'(= a17◂ [ a23◂ [ a18◂ [ ]{| l |}]] ) 3'(= a2◂ [ a30◂ [ a18◂ [ ]{| l |}]] ) 2(<3)◂4'(= a26◂ [ a18◂ [ ]{| l |}] ) }
;; rsp=2 , %2021~0(<2)◂0(<2)◂1(<2)◂{ 9'(= a17◂ [ a23◂ [ a18◂ [ ]{| l |}]] ) 3'(= a2◂ [ a30◂ [ a18◂ [ ]{| l |}]] ) 2(<3)◂4'(= a26◂ [ a18◂ [ ]{| l |}] ) } %2013~1'(= r ) %2012~0'(= r ) %2008~8'(= a44◂ [ *{ }] ) 
; ∎ 0(<2)◂0(<2)◂1(<2)◂{ 9'(= a17◂ [ a23◂ [ a18◂ [ ]{| l |}]] ) 3'(= a2◂ [ a30◂ [ a18◂ [ ]{| l |}]] ) 2(<3)◂4'(= a26◂ [ a18◂ [ ]{| l |}] ) }
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 8'(= a44◂ [ *{ }] )
	mov rdi,QWORD [rsp-8+8*2]
	C_PUSH_REGS
	mov r8,rdi
	call LB_1876
	C_POP_REGS
; .mov_ptn2 0(<2)◂0(<2)◂1(<2)◂{ 9'(= a17◂ [ a23◂ [ a18◂ [ ]{| l |}]] ) 3'(= a2◂ [ a30◂ [ a18◂ [ ]{| l |}]] ) 2(<3)◂4'(= a26◂ [ a18◂ [ ]{| l |}] ) } ⊢ 2'(= a3◂ [ a44◂ [ a16◂ [ *{ a17◂ [ a23◂ [ a18◂ [ ]{| l |}]]a2◂ [ a30◂ [ a18◂ [ ]{| l |}]]a29◂ [ a18◂ [ ]{| l |}]}]]] )
; .mov_ptn 0(<2)◂0(<2)◂1(<2)◂{ 9'(= a17◂ [ a23◂ [ a18◂ [ ]{| l |}]] ) 3'(= a2◂ [ a30◂ [ a18◂ [ ]{| l |}]] ) 2(<3)◂4'(= a26◂ [ a18◂ [ ]{| l |}] ) } ⊢ 2'(= a3◂ [ a44◂ [ a16◂ [ *{ a17◂ [ a23◂ [ a18◂ [ ]{| l |}]]a2◂ [ a30◂ [ a18◂ [ ]{| l |}]]a29◂ [ a18◂ [ ]{| l |}]}]]] )
	ALC_RCD 3, rax
	mov r13,rax
	mov rax,QWORD [rsp-8+8*1]
	mov QWORD [r13+8+8*0],rax
	mov rax,r9
	mov QWORD [r13+8+8*1],rax
	mov rax,r10
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],2
	mov QWORD [rax+8],rdi
	mov QWORD [r13+8+8*2],rax
	mov rax,r13
	mov BYTE [rax+6],1
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,16
	jmp LB_3468
LB_3469:
;; ?. 2'(= a44◂ [ *{ a2◂ [ a30◂ [ a18◂ [ ]{| l |}]]a26◂ [ a18◂ [ ]{| l |}]}] ) ⊢ 1(<2)◂3'(= a2◂ [ *{ rr{| l |}}] )
	mov QWORD [GBG_VCT+8*0],rdi
	mov r9,QWORD [rdi+8]
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_LN rdi
;; rsp=2 , %2015~3'(= a2◂ [ *{ rr{| l |}}] ) %2013~1'(= r ) %2012~0'(= r ) %2009~9'(= a17◂ [ a23◂ [ a18◂ [ ]{| l |}]] ) %2008~8'(= a44◂ [ *{ }] ) 
; #197 3'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 1(<2)◂3'(= a2◂ [ *{ rr{| l |}}] )
;; rsp=2 , %2022~1(<2)◂3'(= a2◂ [ *{ rr{| l |}}] ) %2013~1'(= r ) %2012~0'(= r ) %2009~9'(= a17◂ [ a23◂ [ a18◂ [ ]{| l |}]] ) %2008~8'(= a44◂ [ *{ }] ) 
; #24 1(<2)◂3'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 0(<2)◂1(<2)◂3'(= a2◂ [ *{ rr{| l |}}] )
;; rsp=2 , %2023~0(<2)◂1(<2)◂3'(= a2◂ [ *{ rr{| l |}}] ) %2013~1'(= r ) %2012~0'(= r ) %2009~9'(= a17◂ [ a23◂ [ a18◂ [ ]{| l |}]] ) %2008~8'(= a44◂ [ *{ }] ) 
; ∎ 0(<2)◂1(<2)◂3'(= a2◂ [ *{ rr{| l |}}] )
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 9'(= a17◂ [ a23◂ [ a18◂ [ ]{| l |}]] )
	mov rdi,QWORD [rsp-8+8*1]
	C_PUSH_REGS
	mov r8,rdi
	call LB_438
	C_POP_REGS
; .dlt.ptn 8'(= a44◂ [ *{ }] )
	mov rdi,QWORD [rsp-8+8*2]
	C_PUSH_REGS
	mov r8,rdi
	call LB_1876
	C_POP_REGS
; .mov_ptn2 0(<2)◂1(<2)◂3'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 2'(= a3◂ [ a44◂ [ a16◂ [ *{ a17◂ [ a23◂ [ a18◂ [ ]{| l |}]]a2◂ [ a30◂ [ a18◂ [ ]{| l |}]]a29◂ [ a18◂ [ ]{| l |}]}]]] )
; .mov_ptn 0(<2)◂1(<2)◂3'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 2'(= a3◂ [ a44◂ [ a16◂ [ *{ a17◂ [ a23◂ [ a18◂ [ ]{| l |}]]a2◂ [ a30◂ [ a18◂ [ ]{| l |}]]a29◂ [ a18◂ [ ]{| l |}]}]]] )
	mov rax,r9
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],1
	mov QWORD [rax+8],rdi
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,16
	jmp LB_3468
LB_3468:
	cmp BYTE [r8+6],0
	jnz LB_3429
	POP_GRM_SCC
	ret
LB_3429:
	RB_GRM
	jmp LB_3474
LB_3473:
	add r14,1 
LB_3474:
	cmp r14,r9
	jge LB_3475
	JZ_LINE_SPC BYTE [r13+8+r14], LB_3473
LB_3475
	call GRM_221
	cmp BYTE [r8+6],0
	jnz LB_3478
	jmp LB_3479
LB_3478:
	jmp LB_3476
LB_3479:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a44◂ [ *{ }] ) ⊢ 8'(= a44◂ [ *{ }] )
; .mov_ptn 2'(= a44◂ [ *{ }] ) ⊢ 8'(= a44◂ [ *{ }] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_3477
LB_3476:
	add rsp,0
	jmp LB_3472
LB_3477:
	jmp LB_3481
LB_3480:
	add r14,1 
LB_3481:
	cmp r14,r9
	jge LB_3482
	JZ_LINE_SPC BYTE [r13+8+r14], LB_3480
LB_3482
	lea rax,[r14+3]
	cmp rax,r9
	jg LB_3485
	jmp LB_3486
LB_3485:
	mov r8,unt_1
	jmp LB_3483
LB_3486:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],226
	jnz LB_3487
	cmp BYTE [rdi+1],136
	jnz LB_3487
	cmp BYTE [rdi+2],144
	jnz LB_3487
	jmp LB_3488
LB_3487:
	mov r8,unt_1
	jmp LB_3483
LB_3488:
	add r14,3
	jmp LB_3484
LB_3483:
	add rsp,8
	jmp LB_3472
LB_3484:
	jmp LB_3490
LB_3489:
	add r14,1 
LB_3490:
	cmp r14,r9
	jge LB_3491
	JZ_LINE_SPC BYTE [r13+8+r14], LB_3489
LB_3491
	call GRM_202
	cmp BYTE [r8+6],0
	jnz LB_3494
	jmp LB_3495
LB_3494:
	jmp LB_3492
LB_3495:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a17◂ [ a23◂ [ a18◂ [ ]{| l |}]] ) ⊢ 9'(= a17◂ [ a23◂ [ a18◂ [ ]{| l |}]] )
; .mov_ptn 2'(= a17◂ [ a23◂ [ a18◂ [ ]{| l |}]] ) ⊢ 9'(= a17◂ [ a23◂ [ a18◂ [ ]{| l |}]] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_3493
LB_3492:
	add rsp,8
	jmp LB_3472
LB_3493:
	jmp LB_3497
LB_3496:
	add r14,1 
LB_3497:
	cmp r14,r9
	jge LB_3498
	JZ_LINE_SPC BYTE [r13+8+r14], LB_3496
LB_3498
	call GRM_246
	cmp BYTE [r8+6],0
	jnz LB_3501
	jmp LB_3502
LB_3501:
	jmp LB_3499
LB_3502:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a44◂ [ a2◂ [ a30◂ [ a18◂ [ ]{| l |}]]] ) ⊢ 10'(= a44◂ [ a2◂ [ a30◂ [ a18◂ [ ]{| l |}]]] )
; .mov_ptn 2'(= a44◂ [ a2◂ [ a30◂ [ a18◂ [ ]{| l |}]]] ) ⊢ 10'(= a44◂ [ a2◂ [ a30◂ [ a18◂ [ ]{| l |}]]] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_3500
LB_3499:
	add rsp,16
	jmp LB_3472
LB_3500:
	jmp LB_3504
LB_3503:
	add r14,1 
LB_3504:
	cmp r14,r9
	jge LB_3505
	JZ_LINE_SPC BYTE [r13+8+r14], LB_3503
LB_3505
	call GRM_239
	cmp BYTE [r8+6],0
	jnz LB_3508
	jmp LB_3509
LB_3508:
	jmp LB_3506
LB_3509:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a44◂ [ a26◂ [ a18◂ [ ]{| l |}]] ) ⊢ 11'(= a44◂ [ a26◂ [ a18◂ [ ]{| l |}]] )
; .mov_ptn 2'(= a44◂ [ a26◂ [ a18◂ [ ]{| l |}]] ) ⊢ 11'(= a44◂ [ a26◂ [ a18◂ [ ]{| l |}]] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_3507
LB_3506:
	add rsp,24
	jmp LB_3472
LB_3507:
	jmp LB_3511
LB_3510:
	add r14,1 
LB_3511:
	cmp r14,r9
	jge LB_3512
	JZ_LINE_SPC BYTE [r13+8+r14], LB_3510
LB_3512
	call GRM_242
	cmp BYTE [r8+6],0
	jnz LB_3515
	jmp LB_3516
LB_3515:
	jmp LB_3513
LB_3516:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a44◂ [ a16◂ [ *{ a17◂ [ a23◂ [ a18◂ [ ]{| l |}]]a2◂ [ a30◂ [ a18◂ [ ]{| l |}]]a29◂ [ a18◂ [ ]{| l |}]}]] ) ⊢ 12'(= a44◂ [ a16◂ [ *{ a17◂ [ a23◂ [ a18◂ [ ]{| l |}]]a2◂ [ a30◂ [ a18◂ [ ]{| l |}]]a29◂ [ a18◂ [ ]{| l |}]}]] )
; .mov_ptn 2'(= a44◂ [ a16◂ [ *{ a17◂ [ a23◂ [ a18◂ [ ]{| l |}]]a2◂ [ a30◂ [ a18◂ [ ]{| l |}]]a29◂ [ a18◂ [ ]{| l |}]}]] ) ⊢ 12'(= a44◂ [ a16◂ [ *{ a17◂ [ a23◂ [ a18◂ [ ]{| l |}]]a2◂ [ a30◂ [ a18◂ [ ]{| l |}]]a29◂ [ a18◂ [ ]{| l |}]}]] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_3514
LB_3513:
	add rsp,32
	jmp LB_3472
LB_3514:
	mov QWORD [rsp+8*5],r14
	mov r13,QWORD [rsp+16+8*5]
	mov r14,QWORD [rsp+8*5]
	jmp LB_3517
LB_3517
;; rsp=5 , %2030~1'(= r ) %2029~0'(= r ) %2028~12'(= a44◂ [ a16◂ [ *{ a17◂ [ a23◂ [ a18◂ [ ]{| l |}]]a2◂ [ a30◂ [ a18◂ [ ]{| l |}]]a29◂ [ a18◂ [ ]{| l |}]}]] ) %2027~11'(= a44◂ [ a26◂ [ a18◂ [ ]{| l |}]] ) %2026~10'(= a44◂ [ a2◂ [ a30◂ [ a18◂ [ ]{| l |}]]] ) %2025~9'(= a17◂ [ a23◂ [ a18◂ [ ]{| l |}]] ) %2024~8'(= a44◂ [ *{ }] ) 
; #199 { 10'(= a44◂ [ a2◂ [ a30◂ [ a18◂ [ ]{| l |}]]] ) 11'(= a44◂ [ a26◂ [ a18◂ [ ]{| l |}]] ) } ⊢ 2'(= a44◂ [ *{ a2◂ [ a30◂ [ a18◂ [ ]{| l |}]]a26◂ [ a18◂ [ ]{| l |}]}] )
	sub rsp,16
	mov QWORD [rsp+8*0],r13
	mov QWORD [rsp+8*1],r14
; .mov_ptn2 { 10'(= a44◂ [ a2◂ [ a30◂ [ a18◂ [ ]{| l |}]]] ) 11'(= a44◂ [ a26◂ [ a18◂ [ ]{| l |}]] ) } ⊢ { 0'(= a44◂ [ a2◂ [ a30◂ [ a18◂ [ ]{| l |}]]] ) 1'(= a44◂ [ a26◂ [ a18◂ [ ]{| l |}]] ) }
; .mov_ptn 11'(= a44◂ [ a26◂ [ a18◂ [ ]{| l |}]] ) ⊢ 1'(= a44◂ [ a26◂ [ a18◂ [ ]{| l |}]] )
	mov rax,QWORD [rsp-8+8*4]
	mov r14,rax
; .mov_ptn 10'(= a44◂ [ a2◂ [ a30◂ [ a18◂ [ ]{| l |}]]] ) ⊢ 0'(= a44◂ [ a2◂ [ a30◂ [ a18◂ [ ]{| l |}]]] )
	mov rax,QWORD [rsp-8+8*5]
	mov r13,rax
	call LB_3363
	mov r14,QWORD [rsp-8+8*2]
	mov r8,r13
	mov r13,QWORD [rsp-8+8*1]
	add rsp,16
;; rsp=5 , %2031~2'(= a44◂ [ *{ a2◂ [ a30◂ [ a18◂ [ ]{| l |}]]a26◂ [ a18◂ [ ]{| l |}]}] ) %2030~1'(= r ) %2029~0'(= r ) %2028~12'(= a44◂ [ a16◂ [ *{ a17◂ [ a23◂ [ a18◂ [ ]{| l |}]]a2◂ [ a30◂ [ a18◂ [ ]{| l |}]]a29◂ [ a18◂ [ ]{| l |}]}]] ) %2025~9'(= a17◂ [ a23◂ [ a18◂ [ ]{| l |}]] ) %2024~8'(= a44◂ [ *{ }] ) 
; #199 { 2'(= a44◂ [ *{ a2◂ [ a30◂ [ a18◂ [ ]{| l |}]]a26◂ [ a18◂ [ ]{| l |}]}] ) 12'(= a44◂ [ a16◂ [ *{ a17◂ [ a23◂ [ a18◂ [ ]{| l |}]]a2◂ [ a30◂ [ a18◂ [ ]{| l |}]]a29◂ [ a18◂ [ ]{| l |}]}]] ) } ⊢ 2'(= a44◂ [ *{ *{ a2◂ [ a30◂ [ a18◂ [ ]{| l |}]]a26◂ [ a18◂ [ ]{| l |}]}a16◂ [ *{ a17◂ [ a23◂ [ a18◂ [ ]{| l |}]]a2◂ [ a30◂ [ a18◂ [ ]{| l |}]]a29◂ [ a18◂ [ ]{| l |}]}]}] )
	sub rsp,16
	mov QWORD [rsp+8*0],r13
	mov QWORD [rsp+8*1],r14
; .mov_ptn2 { 2'(= a44◂ [ *{ a2◂ [ a30◂ [ a18◂ [ ]{| l |}]]a26◂ [ a18◂ [ ]{| l |}]}] ) 12'(= a44◂ [ a16◂ [ *{ a17◂ [ a23◂ [ a18◂ [ ]{| l |}]]a2◂ [ a30◂ [ a18◂ [ ]{| l |}]]a29◂ [ a18◂ [ ]{| l |}]}]] ) } ⊢ { 0'(= a44◂ [ *{ a2◂ [ a30◂ [ a18◂ [ ]{| l |}]]a26◂ [ a18◂ [ ]{| l |}]}] ) 1'(= a44◂ [ a16◂ [ *{ a17◂ [ a23◂ [ a18◂ [ ]{| l |}]]a2◂ [ a30◂ [ a18◂ [ ]{| l |}]]a29◂ [ a18◂ [ ]{| l |}]}]] ) }
; .mov_ptn 12'(= a44◂ [ a16◂ [ *{ a17◂ [ a23◂ [ a18◂ [ ]{| l |}]]a2◂ [ a30◂ [ a18◂ [ ]{| l |}]]a29◂ [ a18◂ [ ]{| l |}]}]] ) ⊢ 1'(= a44◂ [ a16◂ [ *{ a17◂ [ a23◂ [ a18◂ [ ]{| l |}]]a2◂ [ a30◂ [ a18◂ [ ]{| l |}]]a29◂ [ a18◂ [ ]{| l |}]}]] )
	mov rax,QWORD [rsp-8+8*3]
	mov r14,rax
; .mov_ptn 2'(= a44◂ [ *{ a2◂ [ a30◂ [ a18◂ [ ]{| l |}]]a26◂ [ a18◂ [ ]{| l |}]}] ) ⊢ 0'(= a44◂ [ *{ a2◂ [ a30◂ [ a18◂ [ ]{| l |}]]a26◂ [ a18◂ [ ]{| l |}]}] )
	mov rax,r8
	mov r13,rax
	call LB_3519
	mov r14,QWORD [rsp-8+8*2]
	mov r8,r13
	mov r13,QWORD [rsp-8+8*1]
	add rsp,40
;; rsp=2 , %2032~2'(= a44◂ [ *{ *{ a2◂ [ a30◂ [ a18◂ [ ]{| l |}]]a26◂ [ a18◂ [ ]{| l |}]}a16◂ [ *{ a17◂ [ a23◂ [ a18◂ [ ]{| l |}]]a2◂ [ a30◂ [ a18◂ [ ]{| l |}]]a29◂ [ a18◂ [ ]{| l |}]}]}] ) %2030~1'(= r ) %2029~0'(= r ) %2025~9'(= a17◂ [ a23◂ [ a18◂ [ ]{| l |}]] ) %2024~8'(= a44◂ [ *{ }] ) 
;; ? 2'(= a44◂ [ *{ *{ a2◂ [ a30◂ [ a18◂ [ ]{| l |}]]a26◂ [ a18◂ [ ]{| l |}]}a16◂ [ *{ a17◂ [ a23◂ [ a18◂ [ ]{| l |}]]a2◂ [ a30◂ [ a18◂ [ ]{| l |}]]a29◂ [ a18◂ [ ]{| l |}]}]}] ) ⊢ 0(<2)◂{ { 4'(= a2◂ [ a30◂ [ a18◂ [ ]{| l |}]] ) 5'(= a26◂ [ a18◂ [ ]{| l |}] ) } 6'(= a16◂ [ *{ a17◂ [ a23◂ [ a18◂ [ ]{| l |}]]a2◂ [ a30◂ [ a18◂ [ ]{| l |}]]a29◂ [ a18◂ [ ]{| l |}]}] ) }
	mov rdi,r8
	cmp BYTE [rdi+6],0
	jnz LB_3530
	jmp LB_3531
LB_3530:
	jmp LB_3529
LB_3531:
	mov r9, QWORD [r8+8]
	mov r10, QWORD [r9+8]
	mov r11, QWORD [r9+16]
	mov QWORD [GBG_VCT+8*0],r9
	mov rcx, QWORD [r8+16]
	mov QWORD [GBG_VCT+8*1],r8
	mov rdi,QWORD [GBG_VCT+8*1]
	FREE_RCD 2,rdi
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_RCD 2,rdi
;; rsp=2 , %2036~6'(= a16◂ [ *{ a17◂ [ a23◂ [ a18◂ [ ]{| l |}]]a2◂ [ a30◂ [ a18◂ [ ]{| l |}]]a29◂ [ a18◂ [ ]{| l |}]}] ) %2035~5'(= a26◂ [ a18◂ [ ]{| l |}] ) %2034~4'(= a2◂ [ a30◂ [ a18◂ [ ]{| l |}]] ) %2030~1'(= r ) %2029~0'(= r ) %2025~9'(= a17◂ [ a23◂ [ a18◂ [ ]{| l |}]] ) %2024~8'(= a44◂ [ *{ }] ) 
; #121 5'(= a26◂ [ a18◂ [ ]{| l |}] ) ⊢ 2(<3)◂5'(= a26◂ [ a18◂ [ ]{| l |}] )
;; rsp=2 , %2037~2(<3)◂5'(= a26◂ [ a18◂ [ ]{| l |}] ) %2036~6'(= a16◂ [ *{ a17◂ [ a23◂ [ a18◂ [ ]{| l |}]]a2◂ [ a30◂ [ a18◂ [ ]{| l |}]]a29◂ [ a18◂ [ ]{| l |}]}] ) %2034~4'(= a2◂ [ a30◂ [ a18◂ [ ]{| l |}]] ) %2030~1'(= r ) %2029~0'(= r ) %2025~9'(= a17◂ [ a23◂ [ a18◂ [ ]{| l |}]] ) %2024~8'(= a44◂ [ *{ }] ) 
; #55 { { 9'(= a17◂ [ a23◂ [ a18◂ [ ]{| l |}]] ) 4'(= a2◂ [ a30◂ [ a18◂ [ ]{| l |}]] ) 2(<3)◂5'(= a26◂ [ a18◂ [ ]{| l |}] ) } 6'(= a16◂ [ *{ a17◂ [ a23◂ [ a18◂ [ ]{| l |}]]a2◂ [ a30◂ [ a18◂ [ ]{| l |}]]a29◂ [ a18◂ [ ]{| l |}]}] ) } ⊢ 0(<2)◂{ { 9'(= a17◂ [ a23◂ [ a18◂ [ ]{| l |}]] ) 4'(= a2◂ [ a30◂ [ a18◂ [ ]{| l |}]] ) 2(<3)◂5'(= a26◂ [ a18◂ [ ]{| l |}] ) } 6'(= a16◂ [ *{ a17◂ [ a23◂ [ a18◂ [ ]{| l |}]]a2◂ [ a30◂ [ a18◂ [ ]{| l |}]]a29◂ [ a18◂ [ ]{| l |}]}] ) }
;; rsp=2 , %2038~0(<2)◂{ { 9'(= a17◂ [ a23◂ [ a18◂ [ ]{| l |}]] ) 4'(= a2◂ [ a30◂ [ a18◂ [ ]{| l |}]] ) 2(<3)◂5'(= a26◂ [ a18◂ [ ]{| l |}] ) } 6'(= a16◂ [ *{ a17◂ [ a23◂ [ a18◂ [ ]{| l |}]]a2◂ [ a30◂ [ a18◂ [ ]{| l |}]]a29◂ [ a18◂ [ ]{| l |}]}] ) } %2030~1'(= r ) %2029~0'(= r ) %2024~8'(= a44◂ [ *{ }] ) 
; #198 0(<2)◂{ { 9'(= a17◂ [ a23◂ [ a18◂ [ ]{| l |}]] ) 4'(= a2◂ [ a30◂ [ a18◂ [ ]{| l |}]] ) 2(<3)◂5'(= a26◂ [ a18◂ [ ]{| l |}] ) } 6'(= a16◂ [ *{ a17◂ [ a23◂ [ a18◂ [ ]{| l |}]]a2◂ [ a30◂ [ a18◂ [ ]{| l |}]]a29◂ [ a18◂ [ ]{| l |}]}] ) } ⊢ 0(<2)◂0(<2)◂{ { 9'(= a17◂ [ a23◂ [ a18◂ [ ]{| l |}]] ) 4'(= a2◂ [ a30◂ [ a18◂ [ ]{| l |}]] ) 2(<3)◂5'(= a26◂ [ a18◂ [ ]{| l |}] ) } 6'(= a16◂ [ *{ a17◂ [ a23◂ [ a18◂ [ ]{| l |}]]a2◂ [ a30◂ [ a18◂ [ ]{| l |}]]a29◂ [ a18◂ [ ]{| l |}]}] ) }
;; rsp=2 , %2039~0(<2)◂0(<2)◂{ { 9'(= a17◂ [ a23◂ [ a18◂ [ ]{| l |}]] ) 4'(= a2◂ [ a30◂ [ a18◂ [ ]{| l |}]] ) 2(<3)◂5'(= a26◂ [ a18◂ [ ]{| l |}] ) } 6'(= a16◂ [ *{ a17◂ [ a23◂ [ a18◂ [ ]{| l |}]]a2◂ [ a30◂ [ a18◂ [ ]{| l |}]]a29◂ [ a18◂ [ ]{| l |}]}] ) } %2030~1'(= r ) %2029~0'(= r ) %2024~8'(= a44◂ [ *{ }] ) 
; #24 0(<2)◂0(<2)◂{ { 9'(= a17◂ [ a23◂ [ a18◂ [ ]{| l |}]] ) 4'(= a2◂ [ a30◂ [ a18◂ [ ]{| l |}]] ) 2(<3)◂5'(= a26◂ [ a18◂ [ ]{| l |}] ) } 6'(= a16◂ [ *{ a17◂ [ a23◂ [ a18◂ [ ]{| l |}]]a2◂ [ a30◂ [ a18◂ [ ]{| l |}]]a29◂ [ a18◂ [ ]{| l |}]}] ) } ⊢ 0(<2)◂0(<2)◂0(<2)◂{ { 9'(= a17◂ [ a23◂ [ a18◂ [ ]{| l |}]] ) 4'(= a2◂ [ a30◂ [ a18◂ [ ]{| l |}]] ) 2(<3)◂5'(= a26◂ [ a18◂ [ ]{| l |}] ) } 6'(= a16◂ [ *{ a17◂ [ a23◂ [ a18◂ [ ]{| l |}]]a2◂ [ a30◂ [ a18◂ [ ]{| l |}]]a29◂ [ a18◂ [ ]{| l |}]}] ) }
;; rsp=2 , %2040~0(<2)◂0(<2)◂0(<2)◂{ { 9'(= a17◂ [ a23◂ [ a18◂ [ ]{| l |}]] ) 4'(= a2◂ [ a30◂ [ a18◂ [ ]{| l |}]] ) 2(<3)◂5'(= a26◂ [ a18◂ [ ]{| l |}] ) } 6'(= a16◂ [ *{ a17◂ [ a23◂ [ a18◂ [ ]{| l |}]]a2◂ [ a30◂ [ a18◂ [ ]{| l |}]]a29◂ [ a18◂ [ ]{| l |}]}] ) } %2030~1'(= r ) %2029~0'(= r ) %2024~8'(= a44◂ [ *{ }] ) 
; ∎ 0(<2)◂0(<2)◂0(<2)◂{ { 9'(= a17◂ [ a23◂ [ a18◂ [ ]{| l |}]] ) 4'(= a2◂ [ a30◂ [ a18◂ [ ]{| l |}]] ) 2(<3)◂5'(= a26◂ [ a18◂ [ ]{| l |}] ) } 6'(= a16◂ [ *{ a17◂ [ a23◂ [ a18◂ [ ]{| l |}]]a2◂ [ a30◂ [ a18◂ [ ]{| l |}]]a29◂ [ a18◂ [ ]{| l |}]}] ) }
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 8'(= a44◂ [ *{ }] )
	mov rdi,QWORD [rsp-8+8*2]
	C_PUSH_REGS
	mov r8,rdi
	call LB_1876
	C_POP_REGS
; .mov_ptn2 0(<2)◂0(<2)◂0(<2)◂{ { 9'(= a17◂ [ a23◂ [ a18◂ [ ]{| l |}]] ) 4'(= a2◂ [ a30◂ [ a18◂ [ ]{| l |}]] ) 2(<3)◂5'(= a26◂ [ a18◂ [ ]{| l |}] ) } 6'(= a16◂ [ *{ a17◂ [ a23◂ [ a18◂ [ ]{| l |}]]a2◂ [ a30◂ [ a18◂ [ ]{| l |}]]a29◂ [ a18◂ [ ]{| l |}]}] ) } ⊢ 2'(= a3◂ [ a44◂ [ a16◂ [ *{ a17◂ [ a23◂ [ a18◂ [ ]{| l |}]]a2◂ [ a30◂ [ a18◂ [ ]{| l |}]]a29◂ [ a18◂ [ ]{| l |}]}]]] )
; .mov_ptn 0(<2)◂0(<2)◂0(<2)◂{ { 9'(= a17◂ [ a23◂ [ a18◂ [ ]{| l |}]] ) 4'(= a2◂ [ a30◂ [ a18◂ [ ]{| l |}]] ) 2(<3)◂5'(= a26◂ [ a18◂ [ ]{| l |}] ) } 6'(= a16◂ [ *{ a17◂ [ a23◂ [ a18◂ [ ]{| l |}]]a2◂ [ a30◂ [ a18◂ [ ]{| l |}]]a29◂ [ a18◂ [ ]{| l |}]}] ) } ⊢ 2'(= a3◂ [ a44◂ [ a16◂ [ *{ a17◂ [ a23◂ [ a18◂ [ ]{| l |}]]a2◂ [ a30◂ [ a18◂ [ ]{| l |}]]a29◂ [ a18◂ [ ]{| l |}]}]]] )
	ALC_RCD 2, rax
	mov r13,rax
	ALC_RCD 3, rax
	mov r14,rax
	mov rax,QWORD [rsp-8+8*1]
	mov QWORD [r14+8+8*0],rax
	mov rax,r10
	mov QWORD [r14+8+8*1],rax
	mov rax,r11
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],2
	mov QWORD [rax+8],rdi
	mov QWORD [r14+8+8*2],rax
	mov rax,r14
	mov QWORD [r13+8+8*0],rax
	mov rax,rcx
	mov QWORD [r13+8+8*1],rax
	mov rax,r13
	mov BYTE [rax+6],0
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,16
	jmp LB_3518
LB_3529:
;; ?. 2'(= a44◂ [ *{ *{ a2◂ [ a30◂ [ a18◂ [ ]{| l |}]]a26◂ [ a18◂ [ ]{| l |}]}a16◂ [ *{ a17◂ [ a23◂ [ a18◂ [ ]{| l |}]]a2◂ [ a30◂ [ a18◂ [ ]{| l |}]]a29◂ [ a18◂ [ ]{| l |}]}]}] ) ⊢ 1(<2)◂3'(= a2◂ [ *{ rr{| l |}}] )
	mov QWORD [GBG_VCT+8*0],rdi
	mov r9,QWORD [rdi+8]
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_LN rdi
;; rsp=2 , %2033~3'(= a2◂ [ *{ rr{| l |}}] ) %2030~1'(= r ) %2029~0'(= r ) %2025~9'(= a17◂ [ a23◂ [ a18◂ [ ]{| l |}]] ) %2024~8'(= a44◂ [ *{ }] ) 
; #197 3'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 1(<2)◂3'(= a2◂ [ *{ rr{| l |}}] )
;; rsp=2 , %2041~1(<2)◂3'(= a2◂ [ *{ rr{| l |}}] ) %2030~1'(= r ) %2029~0'(= r ) %2025~9'(= a17◂ [ a23◂ [ a18◂ [ ]{| l |}]] ) %2024~8'(= a44◂ [ *{ }] ) 
; #24 1(<2)◂3'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 0(<2)◂1(<2)◂3'(= a2◂ [ *{ rr{| l |}}] )
;; rsp=2 , %2042~0(<2)◂1(<2)◂3'(= a2◂ [ *{ rr{| l |}}] ) %2030~1'(= r ) %2029~0'(= r ) %2025~9'(= a17◂ [ a23◂ [ a18◂ [ ]{| l |}]] ) %2024~8'(= a44◂ [ *{ }] ) 
; ∎ 0(<2)◂1(<2)◂3'(= a2◂ [ *{ rr{| l |}}] )
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 9'(= a17◂ [ a23◂ [ a18◂ [ ]{| l |}]] )
	mov rdi,QWORD [rsp-8+8*1]
	C_PUSH_REGS
	mov r8,rdi
	call LB_438
	C_POP_REGS
; .dlt.ptn 8'(= a44◂ [ *{ }] )
	mov rdi,QWORD [rsp-8+8*2]
	C_PUSH_REGS
	mov r8,rdi
	call LB_1876
	C_POP_REGS
; .mov_ptn2 0(<2)◂1(<2)◂3'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 2'(= a3◂ [ a44◂ [ a16◂ [ *{ a17◂ [ a23◂ [ a18◂ [ ]{| l |}]]a2◂ [ a30◂ [ a18◂ [ ]{| l |}]]a29◂ [ a18◂ [ ]{| l |}]}]]] )
; .mov_ptn 0(<2)◂1(<2)◂3'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 2'(= a3◂ [ a44◂ [ a16◂ [ *{ a17◂ [ a23◂ [ a18◂ [ ]{| l |}]]a2◂ [ a30◂ [ a18◂ [ ]{| l |}]]a29◂ [ a18◂ [ ]{| l |}]}]]] )
	mov rax,r9
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],1
	mov QWORD [rax+8],rdi
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,16
	jmp LB_3518
LB_3518:
	cmp BYTE [r8+6],0
	jnz LB_3472
	POP_GRM_SCC
	ret
LB_3472:
	POP_GRM_FAIL 
	ret
ETR_243:
	mov r9,0x0000_ffff_ffff_ffff
	and r9,[r13]
	call GRM_243
	ret
GRM_243:
	PUSH_GRM
	jmp LB_3534
LB_3533:
	add r14,1 
LB_3534:
	cmp r14,r9
	jge LB_3535
	JZ_LINE_SPC BYTE [r13+8+r14], LB_3533
LB_3535
	call GRM_244
	cmp BYTE [r8+6],0
	jnz LB_3538
	jmp LB_3539
LB_3538:
	jmp LB_3536
LB_3539:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a30◂ [ a18◂ [ ]{| l |}] ) ⊢ 8'(= a30◂ [ a18◂ [ ]{| l |}] )
; .mov_ptn 2'(= a30◂ [ a18◂ [ ]{| l |}] ) ⊢ 8'(= a30◂ [ a18◂ [ ]{| l |}] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_3537
LB_3536:
	add rsp,0
	jmp LB_3532
LB_3537:
	jmp LB_3541
LB_3540:
	add r14,1 
LB_3541:
	cmp r14,r9
	jge LB_3542
	JZ_LINE_SPC BYTE [r13+8+r14], LB_3540
LB_3542
	call GRM_245
	cmp BYTE [r8+6],0
	jnz LB_3545
	jmp LB_3546
LB_3545:
	jmp LB_3543
LB_3546:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a2◂ [ a30◂ [ a18◂ [ ]{| l |}]] ) ⊢ 9'(= a2◂ [ a30◂ [ a18◂ [ ]{| l |}]] )
; .mov_ptn 2'(= a2◂ [ a30◂ [ a18◂ [ ]{| l |}]] ) ⊢ 9'(= a2◂ [ a30◂ [ a18◂ [ ]{| l |}]] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_3544
LB_3543:
	add rsp,8
	jmp LB_3532
LB_3544:
	mov QWORD [rsp+8*2],r14
	mov r13,QWORD [rsp+16+8*2]
	mov r14,QWORD [rsp+8*2]
	jmp LB_3547
LB_3547
;; rsp=2 , %2046~1'(= r ) %2045~0'(= r ) %2044~9'(= a2◂ [ a30◂ [ a18◂ [ ]{| l |}]] ) %2043~8'(= a30◂ [ a18◂ [ ]{| l |}] ) 
; #23 { 8'(= a30◂ [ a18◂ [ ]{| l |}] ) 9'(= a2◂ [ a30◂ [ a18◂ [ ]{| l |}]] ) } ⊢ 0(<2)◂{ 8'(= a30◂ [ a18◂ [ ]{| l |}] ) 9'(= a2◂ [ a30◂ [ a18◂ [ ]{| l |}]] ) }
;; rsp=2 , %2047~0(<2)◂{ 8'(= a30◂ [ a18◂ [ ]{| l |}] ) 9'(= a2◂ [ a30◂ [ a18◂ [ ]{| l |}]] ) } %2046~1'(= r ) %2045~0'(= r ) 
; #198 0(<2)◂{ 8'(= a30◂ [ a18◂ [ ]{| l |}] ) 9'(= a2◂ [ a30◂ [ a18◂ [ ]{| l |}]] ) } ⊢ 0(<2)◂0(<2)◂{ 8'(= a30◂ [ a18◂ [ ]{| l |}] ) 9'(= a2◂ [ a30◂ [ a18◂ [ ]{| l |}]] ) }
;; rsp=2 , %2048~0(<2)◂0(<2)◂{ 8'(= a30◂ [ a18◂ [ ]{| l |}] ) 9'(= a2◂ [ a30◂ [ a18◂ [ ]{| l |}]] ) } %2046~1'(= r ) %2045~0'(= r ) 
; #24 0(<2)◂0(<2)◂{ 8'(= a30◂ [ a18◂ [ ]{| l |}] ) 9'(= a2◂ [ a30◂ [ a18◂ [ ]{| l |}]] ) } ⊢ 0(<2)◂0(<2)◂0(<2)◂{ 8'(= a30◂ [ a18◂ [ ]{| l |}] ) 9'(= a2◂ [ a30◂ [ a18◂ [ ]{| l |}]] ) }
;; rsp=2 , %2049~0(<2)◂0(<2)◂0(<2)◂{ 8'(= a30◂ [ a18◂ [ ]{| l |}] ) 9'(= a2◂ [ a30◂ [ a18◂ [ ]{| l |}]] ) } %2046~1'(= r ) %2045~0'(= r ) 
; ∎ 0(<2)◂0(<2)◂0(<2)◂{ 8'(= a30◂ [ a18◂ [ ]{| l |}] ) 9'(= a2◂ [ a30◂ [ a18◂ [ ]{| l |}]] ) }
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂0(<2)◂0(<2)◂{ 8'(= a30◂ [ a18◂ [ ]{| l |}] ) 9'(= a2◂ [ a30◂ [ a18◂ [ ]{| l |}]] ) } ⊢ 2'(= a3◂ [ a44◂ [ a2◂ [ a30◂ [ a18◂ [ ]{| l |}]]]] )
; .mov_ptn 0(<2)◂0(<2)◂0(<2)◂{ 8'(= a30◂ [ a18◂ [ ]{| l |}] ) 9'(= a2◂ [ a30◂ [ a18◂ [ ]{| l |}]] ) } ⊢ 2'(= a3◂ [ a44◂ [ a2◂ [ a30◂ [ a18◂ [ ]{| l |}]]]] )
	ALC_RCD 2, rax
	mov r13,rax
	mov rax,QWORD [rsp-8+8*2]
	mov QWORD [r13+8+8*0],rax
	mov rax,QWORD [rsp-8+8*1]
	mov QWORD [r13+8+8*1],rax
	mov rax,r13
	mov BYTE [rax+6],0
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,16
	jmp LB_3548
LB_3548:
	cmp BYTE [r8+6],0
	jnz LB_3532
	POP_GRM_SCC
	ret
LB_3532:
	RB_GRM
	jmp LB_3551
LB_3550:
	add r14,1 
LB_3551:
	cmp r14,r9
	jge LB_3552
	JZ_LINE_SPC BYTE [r13+8+r14], LB_3550
LB_3552
	lea rax,[r14+1]
	cmp rax,r9
	jg LB_3555
	jmp LB_3556
LB_3555:
	mov r8,unt_1
	jmp LB_3553
LB_3556:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],46
	jnz LB_3557
	jmp LB_3558
LB_3557:
	mov r8,unt_1
	jmp LB_3553
LB_3558:
	add r14,1
	jmp LB_3554
LB_3553:
	add rsp,0
	jmp LB_3549
LB_3554:
	jmp LB_3560
LB_3559:
	add r14,1 
LB_3560:
	cmp r14,r9
	jge LB_3561
	JZ_LINE_SPC BYTE [r13+8+r14], LB_3559
LB_3561
	lea rax,[r14+1]
	cmp rax,r9
	jg LB_3564
	jmp LB_3565
LB_3564:
	mov r8,unt_1
	jmp LB_3562
LB_3565:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],10
	jnz LB_3566
	jmp LB_3567
LB_3566:
	mov r8,unt_1
	jmp LB_3562
LB_3567:
	add r14,1
	jmp LB_3563
LB_3562:
	add rsp,0
	jmp LB_3549
LB_3563:
	mov QWORD [rsp+8*0],r14
	mov r13,QWORD [rsp+16+8*0]
	mov r14,QWORD [rsp+8*0]
	jmp LB_3568
LB_3568
;; rsp=0 , %2051~1'(= r ) %2050~0'(= r ) 
; #22 { } ⊢ 1(<2)◂{ }
;; rsp=0 , %2052~1(<2)◂{ } %2051~1'(= r ) %2050~0'(= r ) 
; #198 1(<2)◂{ } ⊢ 0(<2)◂1(<2)◂{ }
;; rsp=0 , %2053~0(<2)◂1(<2)◂{ } %2051~1'(= r ) %2050~0'(= r ) 
; #24 0(<2)◂1(<2)◂{ } ⊢ 0(<2)◂0(<2)◂1(<2)◂{ }
;; rsp=0 , %2054~0(<2)◂0(<2)◂1(<2)◂{ } %2051~1'(= r ) %2050~0'(= r ) 
; ∎ 0(<2)◂0(<2)◂1(<2)◂{ }
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂0(<2)◂1(<2)◂{ } ⊢ 2'(= a3◂ [ a44◂ [ a2◂ [ a30◂ [ a18◂ [ ]{| l |}]]]] )
; .mov_ptn 0(<2)◂0(<2)◂1(<2)◂{ } ⊢ 2'(= a3◂ [ a44◂ [ a2◂ [ a30◂ [ a18◂ [ ]{| l |}]]]] )
	mov rax,unt 
	mov rax,unt_1
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	jmp LB_3569
LB_3569:
	cmp BYTE [r8+6],0
	jnz LB_3549
	POP_GRM_SCC
	ret
LB_3549:
	RB_GRM
	jmp LB_3572
LB_3571:
	add r14,1 
LB_3572:
	cmp r14,r9
	jge LB_3573
	JZ_LINE_SPC BYTE [r13+8+r14], LB_3571
LB_3573
	call GRM_224
	cmp BYTE [r8+6],0
	jnz LB_3576
	jmp LB_3577
LB_3576:
	jmp LB_3574
LB_3577:
	sub rsp,16
; .mov_ptn2 2'(= *{ rr} ) ⊢ { 8'(= r ) 9'(= r ) }
; .mov_ptn 2'(= *{ rr} ) ⊢ { 8'(= r ) 9'(= r ) }
	mov r10, QWORD [r8+8]
	mov QWORD [rsp-8+8*2],r10
	mov r11, QWORD [r8+16]
	mov QWORD [rsp-8+8*1],r11
	mov rdi,r8
	FREE_RCD 2,rdi
	jmp LB_3575
LB_3574:
	add rsp,0
	jmp LB_3570
LB_3575:
	mov QWORD [rsp+8*2],r14
	mov r13,QWORD [rsp+16+8*2]
	mov r14,QWORD [rsp+8*2]
	jmp LB_3578
LB_3578
;; rsp=2 , %2057~1'(= r ) %2056~0'(= r ) %2055~{ 8'(= r ) 9'(= r ) } 
; $ %[ "mtc_line 0" ] ⊢ %[ "mtc_line 0" ]
;; rsp=2 , %2058~%[ "mtc_line 0" ] %2057~1'(= r ) %2056~0'(= r ) %2055~{ 8'(= r ) 9'(= r ) } 
; #22 { } ⊢ 1(<2)◂{ }
;; rsp=2 , %2059~1(<2)◂{ } %2058~%[ "mtc_line 0" ] %2057~1'(= r ) %2056~0'(= r ) %2055~{ 8'(= r ) 9'(= r ) } 
; #23 { { 0'(= r ) 1'(= r ) %[ "mtc_line 0" ] } 1(<2)◂{ } } ⊢ 0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "mtc_line 0" ] } 1(<2)◂{ } }
;; rsp=2 , %2060~0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "mtc_line 0" ] } 1(<2)◂{ } } %2055~{ 8'(= r ) 9'(= r ) } 
; #197 0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "mtc_line 0" ] } 1(<2)◂{ } } ⊢ 1(<2)◂0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "mtc_line 0" ] } 1(<2)◂{ } }
;; rsp=2 , %2061~1(<2)◂0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "mtc_line 0" ] } 1(<2)◂{ } } %2055~{ 8'(= r ) 9'(= r ) } 
; #24 1(<2)◂0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "mtc_line 0" ] } 1(<2)◂{ } } ⊢ 0(<2)◂1(<2)◂0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "mtc_line 0" ] } 1(<2)◂{ } }
;; rsp=2 , %2062~0(<2)◂1(<2)◂0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "mtc_line 0" ] } 1(<2)◂{ } } %2055~{ 8'(= r ) 9'(= r ) } 
; ∎ 0(<2)◂1(<2)◂0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "mtc_line 0" ] } 1(<2)◂{ } }
; .dlt.ptn { 8'(= r ) 9'(= r ) }
	mov rdi,QWORD [rsp-8+8*2]
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
	mov rdi,QWORD [rsp-8+8*1]
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂1(<2)◂0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "mtc_line 0" ] } 1(<2)◂{ } } ⊢ 2'(= a3◂ [ a44◂ [ a2◂ [ a30◂ [ a18◂ [ ]{| l |}]]]] )
; .mov_ptn 0(<2)◂1(<2)◂0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "mtc_line 0" ] } 1(<2)◂{ } } ⊢ 2'(= a3◂ [ a44◂ [ a2◂ [ a30◂ [ a18◂ [ ]{| l |}]]]] )
	ALC_RCD 2, rax
	mov r9,rax
	ALC_RCD 3, rax
	mov r10,rax
	mov rax,r13
	mov QWORD [r10+8+8*0],rax
	mov rax,r14
	mov QWORD [r10+8+8*1],rax
	mov rsi,1  
	mov rdi,24
	xor rax,rax 
	C_CALL_SF calloc
	mov QWORD [rax],10
	mov BYTE [rax+8+0],109
	mov BYTE [rax+8+1],116
	mov BYTE [rax+8+2],99
	mov BYTE [rax+8+3],95
	mov BYTE [rax+8+4],108
	mov BYTE [rax+8+5],105
	mov BYTE [rax+8+6],110
	mov BYTE [rax+8+7],101
	mov BYTE [rax+8+8],32
	mov BYTE [rax+8+9],48
	mov QWORD [r10+8+8*2],rax
	mov rax,r10
	mov QWORD [r9+8+8*0],rax
	mov rax,unt 
	mov rax,unt_1
	mov QWORD [r9+8+8*1],rax
	mov rax,r9
	mov BYTE [rax+6],0
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],1
	mov QWORD [rax+8],rdi
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,16
	jmp LB_3579
LB_3579:
	cmp BYTE [r8+6],0
	jnz LB_3570
	POP_GRM_SCC
	ret
LB_3570:
	POP_GRM_FAIL 
	ret
ETR_244:
	mov r9,0x0000_ffff_ffff_ffff
	and r9,[r13]
	call GRM_244
	ret
GRM_244:
	PUSH_GRM
	jmp LB_3582
LB_3581:
	add r14,1 
LB_3582:
	cmp r14,r9
	jge LB_3583
	JZ_LINE_SPC BYTE [r13+8+r14], LB_3581
LB_3583
	call GRM_206
	cmp BYTE [r8+6],0
	jnz LB_3586
	jmp LB_3587
LB_3586:
	jmp LB_3584
LB_3587:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a17◂ [ a21◂ [ a18◂ [ ]{| l |}]] ) ⊢ 8'(= a17◂ [ a21◂ [ a18◂ [ ]{| l |}]] )
; .mov_ptn 2'(= a17◂ [ a21◂ [ a18◂ [ ]{| l |}]] ) ⊢ 8'(= a17◂ [ a21◂ [ a18◂ [ ]{| l |}]] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_3585
LB_3584:
	add rsp,0
	jmp LB_3580
LB_3585:
	jmp LB_3589
LB_3588:
	add r14,1 
LB_3589:
	cmp r14,r9
	jge LB_3590
	JZ_LINE_SPC BYTE [r13+8+r14], LB_3588
LB_3590
	lea rax,[r14+3]
	cmp rax,r9
	jg LB_3593
	jmp LB_3594
LB_3593:
	mov r8,unt_1
	jmp LB_3591
LB_3594:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],226
	jnz LB_3595
	cmp BYTE [rdi+1],138
	jnz LB_3595
	cmp BYTE [rdi+2],162
	jnz LB_3595
	jmp LB_3596
LB_3595:
	mov r8,unt_1
	jmp LB_3591
LB_3596:
	add r14,3
	jmp LB_3592
LB_3591:
	add rsp,8
	jmp LB_3580
LB_3592:
	jmp LB_3598
LB_3597:
	add r14,1 
LB_3598:
	cmp r14,r9
	jge LB_3599
	JZ_LINE_SPC BYTE [r13+8+r14], LB_3597
LB_3599
	call GRM_194
	cmp BYTE [r8+6],0
	jnz LB_3602
	jmp LB_3603
LB_3602:
	jmp LB_3600
LB_3603:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a18◂ [ ] ) ⊢ 9'(= a18◂ [ ] )
; .mov_ptn 2'(= a18◂ [ ] ) ⊢ 9'(= a18◂ [ ] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_3601
LB_3600:
	add rsp,8
	POP_GRM_FAIL
	ret
LB_3601:
	jmp LB_3605
LB_3604:
	add r14,1 
LB_3605:
	cmp r14,r9
	jge LB_3606
	JZ_LINE_SPC BYTE [r13+8+r14], LB_3604
LB_3606
	lea rax,[r14+3]
	cmp rax,r9
	jg LB_3609
	jmp LB_3610
LB_3609:
	mov r8,unt_1
	jmp LB_3607
LB_3610:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],226
	jnz LB_3611
	cmp BYTE [rdi+1],151
	jnz LB_3611
	cmp BYTE [rdi+2],130
	jnz LB_3611
	jmp LB_3612
LB_3611:
	mov r8,unt_1
	jmp LB_3607
LB_3612:
	add r14,3
	jmp LB_3608
LB_3607:
	add rsp,16
	POP_GRM_FAIL
	ret
LB_3608:
	jmp LB_3614
LB_3613:
	add r14,1 
LB_3614:
	cmp r14,r9
	jge LB_3615
	JZ_LINE_SPC BYTE [r13+8+r14], LB_3613
LB_3615
	call GRM_202
	cmp BYTE [r8+6],0
	jnz LB_3618
	jmp LB_3619
LB_3618:
	jmp LB_3616
LB_3619:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a17◂ [ a23◂ [ a18◂ [ ]{| l |}]] ) ⊢ 10'(= a17◂ [ a23◂ [ a18◂ [ ]{| l |}]] )
; .mov_ptn 2'(= a17◂ [ a23◂ [ a18◂ [ ]{| l |}]] ) ⊢ 10'(= a17◂ [ a23◂ [ a18◂ [ ]{| l |}]] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_3617
LB_3616:
	add rsp,16
	POP_GRM_FAIL
	ret
LB_3617:
	mov QWORD [rsp+8*3],r14
	mov r13,QWORD [rsp+16+8*3]
	mov r14,QWORD [rsp+8*3]
	jmp LB_3620
LB_3620
;; rsp=3 , %2067~1'(= r ) %2066~0'(= r ) %2065~10'(= a17◂ [ a23◂ [ a18◂ [ ]{| l |}]] ) %2064~9'(= a18◂ [ ] ) %2063~8'(= a17◂ [ a21◂ [ a18◂ [ ]{| l |}]] ) 
; #101 { 9'(= a18◂ [ ] ) 10'(= a17◂ [ a23◂ [ a18◂ [ ]{| l |}]] ) } ⊢ 0(<4)◂{ 9'(= a18◂ [ ] ) 10'(= a17◂ [ a23◂ [ a18◂ [ ]{| l |}]] ) }
;; rsp=3 , %2068~0(<4)◂{ 9'(= a18◂ [ ] ) 10'(= a17◂ [ a23◂ [ a18◂ [ ]{| l |}]] ) } %2067~1'(= r ) %2066~0'(= r ) %2063~8'(= a17◂ [ a21◂ [ a18◂ [ ]{| l |}]] ) 
; #83 0(<4)◂{ 9'(= a18◂ [ ] ) 10'(= a17◂ [ a23◂ [ a18◂ [ ]{| l |}]] ) } ⊢ 1(<2)◂0(<4)◂{ 9'(= a18◂ [ ] ) 10'(= a17◂ [ a23◂ [ a18◂ [ ]{| l |}]] ) }
;; rsp=3 , %2069~1(<2)◂0(<4)◂{ 9'(= a18◂ [ ] ) 10'(= a17◂ [ a23◂ [ a18◂ [ ]{| l |}]] ) } %2067~1'(= r ) %2066~0'(= r ) %2063~8'(= a17◂ [ a21◂ [ a18◂ [ ]{| l |}]] ) 
; #120 { 8'(= a17◂ [ a21◂ [ a18◂ [ ]{| l |}]] ) 1(<2)◂0(<4)◂{ 9'(= a18◂ [ ] ) 10'(= a17◂ [ a23◂ [ a18◂ [ ]{| l |}]] ) } } ⊢ 0(<3)◂{ 8'(= a17◂ [ a21◂ [ a18◂ [ ]{| l |}]] ) 1(<2)◂0(<4)◂{ 9'(= a18◂ [ ] ) 10'(= a17◂ [ a23◂ [ a18◂ [ ]{| l |}]] ) } }
;; rsp=3 , %2070~0(<3)◂{ 8'(= a17◂ [ a21◂ [ a18◂ [ ]{| l |}]] ) 1(<2)◂0(<4)◂{ 9'(= a18◂ [ ] ) 10'(= a17◂ [ a23◂ [ a18◂ [ ]{| l |}]] ) } } %2067~1'(= r ) %2066~0'(= r ) 
; #24 0(<3)◂{ 8'(= a17◂ [ a21◂ [ a18◂ [ ]{| l |}]] ) 1(<2)◂0(<4)◂{ 9'(= a18◂ [ ] ) 10'(= a17◂ [ a23◂ [ a18◂ [ ]{| l |}]] ) } } ⊢ 0(<2)◂0(<3)◂{ 8'(= a17◂ [ a21◂ [ a18◂ [ ]{| l |}]] ) 1(<2)◂0(<4)◂{ 9'(= a18◂ [ ] ) 10'(= a17◂ [ a23◂ [ a18◂ [ ]{| l |}]] ) } }
;; rsp=3 , %2071~0(<2)◂0(<3)◂{ 8'(= a17◂ [ a21◂ [ a18◂ [ ]{| l |}]] ) 1(<2)◂0(<4)◂{ 9'(= a18◂ [ ] ) 10'(= a17◂ [ a23◂ [ a18◂ [ ]{| l |}]] ) } } %2067~1'(= r ) %2066~0'(= r ) 
; ∎ 0(<2)◂0(<3)◂{ 8'(= a17◂ [ a21◂ [ a18◂ [ ]{| l |}]] ) 1(<2)◂0(<4)◂{ 9'(= a18◂ [ ] ) 10'(= a17◂ [ a23◂ [ a18◂ [ ]{| l |}]] ) } }
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂0(<3)◂{ 8'(= a17◂ [ a21◂ [ a18◂ [ ]{| l |}]] ) 1(<2)◂0(<4)◂{ 9'(= a18◂ [ ] ) 10'(= a17◂ [ a23◂ [ a18◂ [ ]{| l |}]] ) } } ⊢ 2'(= a3◂ [ a30◂ [ a18◂ [ ]{| l |}]] )
; .mov_ptn 0(<2)◂0(<3)◂{ 8'(= a17◂ [ a21◂ [ a18◂ [ ]{| l |}]] ) 1(<2)◂0(<4)◂{ 9'(= a18◂ [ ] ) 10'(= a17◂ [ a23◂ [ a18◂ [ ]{| l |}]] ) } } ⊢ 2'(= a3◂ [ a30◂ [ a18◂ [ ]{| l |}]] )
	ALC_RCD 2, rax
	mov r13,rax
	mov rax,QWORD [rsp-8+8*3]
	mov QWORD [r13+8+8*0],rax
	ALC_RCD 2, rax
	mov r14,rax
	mov rax,QWORD [rsp-8+8*2]
	mov QWORD [r14+8+8*0],rax
	mov rax,QWORD [rsp-8+8*1]
	mov QWORD [r14+8+8*1],rax
	mov rax,r14
	mov BYTE [rax+6],0
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],1
	mov QWORD [rax+8],rdi
	mov QWORD [r13+8+8*1],rax
	mov rax,r13
	mov BYTE [rax+6],0
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,24
	jmp LB_3621
LB_3621:
	cmp BYTE [r8+6],0
	jnz LB_3580
	POP_GRM_SCC
	ret
LB_3580:
	RB_GRM
	jmp LB_3624
LB_3623:
	add r14,1 
LB_3624:
	cmp r14,r9
	jge LB_3625
	JZ_LINE_SPC BYTE [r13+8+r14], LB_3623
LB_3625
	call GRM_247
	cmp BYTE [r8+6],0
	jnz LB_3628
	jmp LB_3629
LB_3628:
	jmp LB_3626
LB_3629:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a31◂ [ a18◂ [ ]{| l |}] ) ⊢ 8'(= a31◂ [ a18◂ [ ]{| l |}] )
; .mov_ptn 2'(= a31◂ [ a18◂ [ ]{| l |}] ) ⊢ 8'(= a31◂ [ a18◂ [ ]{| l |}] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_3627
LB_3626:
	add rsp,0
	jmp LB_3622
LB_3627:
	jmp LB_3631
LB_3630:
	add r14,1 
LB_3631:
	cmp r14,r9
	jge LB_3632
	JZ_LINE_SPC BYTE [r13+8+r14], LB_3630
LB_3632
	lea rax,[r14+2]
	cmp rax,r9
	jg LB_3635
	jmp LB_3636
LB_3635:
	mov r8,unt_1
	jmp LB_3633
LB_3636:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],61
	jnz LB_3637
	cmp BYTE [rdi+1],60
	jnz LB_3637
	jmp LB_3638
LB_3637:
	mov r8,unt_1
	jmp LB_3633
LB_3638:
	add r14,2
	jmp LB_3634
LB_3633:
	add rsp,8
	jmp LB_3622
LB_3634:
	jmp LB_3640
LB_3639:
	add r14,1 
LB_3640:
	cmp r14,r9
	jge LB_3641
	JZ_LINE_SPC BYTE [r13+8+r14], LB_3639
LB_3641
	call GRM_247
	cmp BYTE [r8+6],0
	jnz LB_3644
	jmp LB_3645
LB_3644:
	jmp LB_3642
LB_3645:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a31◂ [ a18◂ [ ]{| l |}] ) ⊢ 9'(= a31◂ [ a18◂ [ ]{| l |}] )
; .mov_ptn 2'(= a31◂ [ a18◂ [ ]{| l |}] ) ⊢ 9'(= a31◂ [ a18◂ [ ]{| l |}] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_3643
LB_3642:
	add rsp,8
	jmp LB_3622
LB_3643:
	mov QWORD [rsp+8*2],r14
	mov r13,QWORD [rsp+16+8*2]
	mov r14,QWORD [rsp+8*2]
	jmp LB_3646
LB_3646
;; rsp=2 , %2075~1'(= r ) %2074~0'(= r ) %2073~9'(= a31◂ [ a18◂ [ ]{| l |}] ) %2072~8'(= a31◂ [ a18◂ [ ]{| l |}] ) 
; #118 { 8'(= a31◂ [ a18◂ [ ]{| l |}] ) 9'(= a31◂ [ a18◂ [ ]{| l |}] ) } ⊢ 2(<3)◂{ 8'(= a31◂ [ a18◂ [ ]{| l |}] ) 9'(= a31◂ [ a18◂ [ ]{| l |}] ) }
;; rsp=2 , %2076~2(<3)◂{ 8'(= a31◂ [ a18◂ [ ]{| l |}] ) 9'(= a31◂ [ a18◂ [ ]{| l |}] ) } %2075~1'(= r ) %2074~0'(= r ) 
; #24 2(<3)◂{ 8'(= a31◂ [ a18◂ [ ]{| l |}] ) 9'(= a31◂ [ a18◂ [ ]{| l |}] ) } ⊢ 0(<2)◂2(<3)◂{ 8'(= a31◂ [ a18◂ [ ]{| l |}] ) 9'(= a31◂ [ a18◂ [ ]{| l |}] ) }
;; rsp=2 , %2077~0(<2)◂2(<3)◂{ 8'(= a31◂ [ a18◂ [ ]{| l |}] ) 9'(= a31◂ [ a18◂ [ ]{| l |}] ) } %2075~1'(= r ) %2074~0'(= r ) 
; ∎ 0(<2)◂2(<3)◂{ 8'(= a31◂ [ a18◂ [ ]{| l |}] ) 9'(= a31◂ [ a18◂ [ ]{| l |}] ) }
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂2(<3)◂{ 8'(= a31◂ [ a18◂ [ ]{| l |}] ) 9'(= a31◂ [ a18◂ [ ]{| l |}] ) } ⊢ 2'(= a3◂ [ a30◂ [ a18◂ [ ]{| l |}]] )
; .mov_ptn 0(<2)◂2(<3)◂{ 8'(= a31◂ [ a18◂ [ ]{| l |}] ) 9'(= a31◂ [ a18◂ [ ]{| l |}] ) } ⊢ 2'(= a3◂ [ a30◂ [ a18◂ [ ]{| l |}]] )
	ALC_RCD 2, rax
	mov r13,rax
	mov rax,QWORD [rsp-8+8*2]
	mov QWORD [r13+8+8*0],rax
	mov rax,QWORD [rsp-8+8*1]
	mov QWORD [r13+8+8*1],rax
	mov rax,r13
	mov BYTE [rax+6],2
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,16
	jmp LB_3647
LB_3647:
	cmp BYTE [r8+6],0
	jnz LB_3622
	POP_GRM_SCC
	ret
LB_3622:
	RB_GRM
	jmp LB_3650
LB_3649:
	add r14,1 
LB_3650:
	cmp r14,r9
	jge LB_3651
	JZ_LINE_SPC BYTE [r13+8+r14], LB_3649
LB_3651
	call GRM_247
	cmp BYTE [r8+6],0
	jnz LB_3654
	jmp LB_3655
LB_3654:
	jmp LB_3652
LB_3655:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a31◂ [ a18◂ [ ]{| l |}] ) ⊢ 8'(= a31◂ [ a18◂ [ ]{| l |}] )
; .mov_ptn 2'(= a31◂ [ a18◂ [ ]{| l |}] ) ⊢ 8'(= a31◂ [ a18◂ [ ]{| l |}] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_3653
LB_3652:
	add rsp,0
	jmp LB_3648
LB_3653:
	jmp LB_3657
LB_3656:
	add r14,1 
LB_3657:
	cmp r14,r9
	jge LB_3658
	JZ_LINE_SPC BYTE [r13+8+r14], LB_3656
LB_3658
	lea rax,[r14+1]
	cmp rax,r9
	jg LB_3661
	jmp LB_3662
LB_3661:
	mov r8,unt_1
	jmp LB_3659
LB_3662:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],61
	jnz LB_3663
	jmp LB_3664
LB_3663:
	mov r8,unt_1
	jmp LB_3659
LB_3664:
	add r14,1
	jmp LB_3660
LB_3659:
	add rsp,8
	jmp LB_3648
LB_3660:
	jmp LB_3666
LB_3665:
	add r14,1 
LB_3666:
	cmp r14,r9
	jge LB_3667
	JZ_LINE_SPC BYTE [r13+8+r14], LB_3665
LB_3667
	call GRM_247
	cmp BYTE [r8+6],0
	jnz LB_3670
	jmp LB_3671
LB_3670:
	jmp LB_3668
LB_3671:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a31◂ [ a18◂ [ ]{| l |}] ) ⊢ 9'(= a31◂ [ a18◂ [ ]{| l |}] )
; .mov_ptn 2'(= a31◂ [ a18◂ [ ]{| l |}] ) ⊢ 9'(= a31◂ [ a18◂ [ ]{| l |}] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_3669
LB_3668:
	add rsp,8
	jmp LB_3648
LB_3669:
	mov QWORD [rsp+8*2],r14
	mov r13,QWORD [rsp+16+8*2]
	mov r14,QWORD [rsp+8*2]
	jmp LB_3672
LB_3672
;; rsp=2 , %2081~1'(= r ) %2080~0'(= r ) %2079~9'(= a31◂ [ a18◂ [ ]{| l |}] ) %2078~8'(= a31◂ [ a18◂ [ ]{| l |}] ) 
; #119 { 8'(= a31◂ [ a18◂ [ ]{| l |}] ) 9'(= a31◂ [ a18◂ [ ]{| l |}] ) } ⊢ 1(<3)◂{ 8'(= a31◂ [ a18◂ [ ]{| l |}] ) 9'(= a31◂ [ a18◂ [ ]{| l |}] ) }
;; rsp=2 , %2082~1(<3)◂{ 8'(= a31◂ [ a18◂ [ ]{| l |}] ) 9'(= a31◂ [ a18◂ [ ]{| l |}] ) } %2081~1'(= r ) %2080~0'(= r ) 
; #24 1(<3)◂{ 8'(= a31◂ [ a18◂ [ ]{| l |}] ) 9'(= a31◂ [ a18◂ [ ]{| l |}] ) } ⊢ 0(<2)◂1(<3)◂{ 8'(= a31◂ [ a18◂ [ ]{| l |}] ) 9'(= a31◂ [ a18◂ [ ]{| l |}] ) }
;; rsp=2 , %2083~0(<2)◂1(<3)◂{ 8'(= a31◂ [ a18◂ [ ]{| l |}] ) 9'(= a31◂ [ a18◂ [ ]{| l |}] ) } %2081~1'(= r ) %2080~0'(= r ) 
; ∎ 0(<2)◂1(<3)◂{ 8'(= a31◂ [ a18◂ [ ]{| l |}] ) 9'(= a31◂ [ a18◂ [ ]{| l |}] ) }
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂1(<3)◂{ 8'(= a31◂ [ a18◂ [ ]{| l |}] ) 9'(= a31◂ [ a18◂ [ ]{| l |}] ) } ⊢ 2'(= a3◂ [ a30◂ [ a18◂ [ ]{| l |}]] )
; .mov_ptn 0(<2)◂1(<3)◂{ 8'(= a31◂ [ a18◂ [ ]{| l |}] ) 9'(= a31◂ [ a18◂ [ ]{| l |}] ) } ⊢ 2'(= a3◂ [ a30◂ [ a18◂ [ ]{| l |}]] )
	ALC_RCD 2, rax
	mov r13,rax
	mov rax,QWORD [rsp-8+8*2]
	mov QWORD [r13+8+8*0],rax
	mov rax,QWORD [rsp-8+8*1]
	mov QWORD [r13+8+8*1],rax
	mov rax,r13
	mov BYTE [rax+6],1
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,16
	jmp LB_3673
LB_3673:
	cmp BYTE [r8+6],0
	jnz LB_3648
	POP_GRM_SCC
	ret
LB_3648:
	POP_GRM_FAIL 
	ret
ETR_245:
	mov r9,0x0000_ffff_ffff_ffff
	and r9,[r13]
	call GRM_245
	ret
GRM_245:
	PUSH_GRM
	jmp LB_3676
LB_3675:
	add r14,1 
LB_3676:
	cmp r14,r9
	jge LB_3677
	JZ_LINE_SPC BYTE [r13+8+r14], LB_3675
LB_3677
	lea rax,[r14+1]
	cmp rax,r9
	jg LB_3680
	jmp LB_3681
LB_3680:
	mov r8,unt_1
	jmp LB_3678
LB_3681:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],59
	jnz LB_3682
	jmp LB_3683
LB_3682:
	mov r8,unt_1
	jmp LB_3678
LB_3683:
	add r14,1
	jmp LB_3679
LB_3678:
	add rsp,0
	jmp LB_3674
LB_3679:
	jmp LB_3685
LB_3684:
	add r14,1 
LB_3685:
	cmp r14,r9
	jge LB_3686
	JZ_LINE_SPC BYTE [r13+8+r14], LB_3684
LB_3686
	call GRM_244
	cmp BYTE [r8+6],0
	jnz LB_3689
	jmp LB_3690
LB_3689:
	jmp LB_3687
LB_3690:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a30◂ [ a18◂ [ ]{| l |}] ) ⊢ 8'(= a30◂ [ a18◂ [ ]{| l |}] )
; .mov_ptn 2'(= a30◂ [ a18◂ [ ]{| l |}] ) ⊢ 8'(= a30◂ [ a18◂ [ ]{| l |}] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_3688
LB_3687:
	add rsp,0
	POP_GRM_FAIL
	ret
LB_3688:
	jmp LB_3692
LB_3691:
	add r14,1 
LB_3692:
	cmp r14,r9
	jge LB_3693
	JZ_LINE_SPC BYTE [r13+8+r14], LB_3691
LB_3693
	call GRM_245
	cmp BYTE [r8+6],0
	jnz LB_3696
	jmp LB_3697
LB_3696:
	jmp LB_3694
LB_3697:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a2◂ [ a30◂ [ a18◂ [ ]{| l |}]] ) ⊢ 9'(= a2◂ [ a30◂ [ a18◂ [ ]{| l |}]] )
; .mov_ptn 2'(= a2◂ [ a30◂ [ a18◂ [ ]{| l |}]] ) ⊢ 9'(= a2◂ [ a30◂ [ a18◂ [ ]{| l |}]] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_3695
LB_3694:
	add rsp,8
	POP_GRM_FAIL
	ret
LB_3695:
	mov QWORD [rsp+8*2],r14
	mov r13,QWORD [rsp+16+8*2]
	mov r14,QWORD [rsp+8*2]
	jmp LB_3698
LB_3698
;; rsp=2 , %2087~1'(= r ) %2086~0'(= r ) %2085~9'(= a2◂ [ a30◂ [ a18◂ [ ]{| l |}]] ) %2084~8'(= a30◂ [ a18◂ [ ]{| l |}] ) 
; #23 { 8'(= a30◂ [ a18◂ [ ]{| l |}] ) 9'(= a2◂ [ a30◂ [ a18◂ [ ]{| l |}]] ) } ⊢ 0(<2)◂{ 8'(= a30◂ [ a18◂ [ ]{| l |}] ) 9'(= a2◂ [ a30◂ [ a18◂ [ ]{| l |}]] ) }
;; rsp=2 , %2088~0(<2)◂{ 8'(= a30◂ [ a18◂ [ ]{| l |}] ) 9'(= a2◂ [ a30◂ [ a18◂ [ ]{| l |}]] ) } %2087~1'(= r ) %2086~0'(= r ) 
; #24 0(<2)◂{ 8'(= a30◂ [ a18◂ [ ]{| l |}] ) 9'(= a2◂ [ a30◂ [ a18◂ [ ]{| l |}]] ) } ⊢ 0(<2)◂0(<2)◂{ 8'(= a30◂ [ a18◂ [ ]{| l |}] ) 9'(= a2◂ [ a30◂ [ a18◂ [ ]{| l |}]] ) }
;; rsp=2 , %2089~0(<2)◂0(<2)◂{ 8'(= a30◂ [ a18◂ [ ]{| l |}] ) 9'(= a2◂ [ a30◂ [ a18◂ [ ]{| l |}]] ) } %2087~1'(= r ) %2086~0'(= r ) 
; ∎ 0(<2)◂0(<2)◂{ 8'(= a30◂ [ a18◂ [ ]{| l |}] ) 9'(= a2◂ [ a30◂ [ a18◂ [ ]{| l |}]] ) }
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂0(<2)◂{ 8'(= a30◂ [ a18◂ [ ]{| l |}] ) 9'(= a2◂ [ a30◂ [ a18◂ [ ]{| l |}]] ) } ⊢ 2'(= a3◂ [ a2◂ [ a30◂ [ a18◂ [ ]{| l |}]]] )
; .mov_ptn 0(<2)◂0(<2)◂{ 8'(= a30◂ [ a18◂ [ ]{| l |}] ) 9'(= a2◂ [ a30◂ [ a18◂ [ ]{| l |}]] ) } ⊢ 2'(= a3◂ [ a2◂ [ a30◂ [ a18◂ [ ]{| l |}]]] )
	ALC_RCD 2, rax
	mov r13,rax
	mov rax,QWORD [rsp-8+8*2]
	mov QWORD [r13+8+8*0],rax
	mov rax,QWORD [rsp-8+8*1]
	mov QWORD [r13+8+8*1],rax
	mov rax,r13
	mov BYTE [rax+6],0
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,16
	jmp LB_3699
LB_3699:
	cmp BYTE [r8+6],0
	jnz LB_3674
	POP_GRM_SCC
	ret
LB_3674:
	RB_GRM
	jmp LB_3702
LB_3701:
	add r14,1 
LB_3702:
	cmp r14,r9
	jge LB_3703
	JZ_LINE_SPC BYTE [r13+8+r14], LB_3701
LB_3703
	lea rax,[r14+1]
	cmp rax,r9
	jg LB_3706
	jmp LB_3707
LB_3706:
	mov r8,unt_1
	jmp LB_3704
LB_3707:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],46
	jnz LB_3708
	jmp LB_3709
LB_3708:
	mov r8,unt_1
	jmp LB_3704
LB_3709:
	add r14,1
	jmp LB_3705
LB_3704:
	add rsp,0
	jmp LB_3700
LB_3705:
	jmp LB_3711
LB_3710:
	add r14,1 
LB_3711:
	cmp r14,r9
	jge LB_3712
	JZ_LINE_SPC BYTE [r13+8+r14], LB_3710
LB_3712
	lea rax,[r14+1]
	cmp rax,r9
	jg LB_3715
	jmp LB_3716
LB_3715:
	mov r8,unt_1
	jmp LB_3713
LB_3716:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],10
	jnz LB_3717
	jmp LB_3718
LB_3717:
	mov r8,unt_1
	jmp LB_3713
LB_3718:
	add r14,1
	jmp LB_3714
LB_3713:
	add rsp,0
	jmp LB_3700
LB_3714:
	mov QWORD [rsp+8*0],r14
	mov r13,QWORD [rsp+16+8*0]
	mov r14,QWORD [rsp+8*0]
	jmp LB_3719
LB_3719
;; rsp=0 , %2091~1'(= r ) %2090~0'(= r ) 
; #22 { } ⊢ 1(<2)◂{ }
;; rsp=0 , %2092~1(<2)◂{ } %2091~1'(= r ) %2090~0'(= r ) 
; #24 1(<2)◂{ } ⊢ 0(<2)◂1(<2)◂{ }
;; rsp=0 , %2093~0(<2)◂1(<2)◂{ } %2091~1'(= r ) %2090~0'(= r ) 
; ∎ 0(<2)◂1(<2)◂{ }
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂1(<2)◂{ } ⊢ 2'(= a3◂ [ a2◂ [ a30◂ [ a18◂ [ ]{| l |}]]] )
; .mov_ptn 0(<2)◂1(<2)◂{ } ⊢ 2'(= a3◂ [ a2◂ [ a30◂ [ a18◂ [ ]{| l |}]]] )
	mov rax,unt 
	mov rax,unt_1
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	jmp LB_3720
LB_3720:
	cmp BYTE [r8+6],0
	jnz LB_3700
	POP_GRM_SCC
	ret
LB_3700:
	POP_GRM_FAIL 
	ret
ETR_246:
	mov r9,0x0000_ffff_ffff_ffff
	and r9,[r13]
	call GRM_246
	ret
GRM_246:
	PUSH_GRM
	jmp LB_3723
LB_3722:
	add r14,1 
LB_3723:
	cmp r14,r9
	jge LB_3724
	JZ_LINE_SPC BYTE [r13+8+r14], LB_3722
LB_3724
	lea rax,[r14+1]
	cmp rax,r9
	jg LB_3727
	jmp LB_3728
LB_3727:
	mov r8,unt_1
	jmp LB_3725
LB_3728:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],59
	jnz LB_3729
	jmp LB_3730
LB_3729:
	mov r8,unt_1
	jmp LB_3725
LB_3730:
	add r14,1
	jmp LB_3726
LB_3725:
	add rsp,0
	jmp LB_3721
LB_3726:
	jmp LB_3732
LB_3731:
	add r14,1 
LB_3732:
	cmp r14,r9
	jge LB_3733
	JZ_LINE_SPC BYTE [r13+8+r14], LB_3731
LB_3733
	call GRM_244
	cmp BYTE [r8+6],0
	jnz LB_3736
	jmp LB_3737
LB_3736:
	jmp LB_3734
LB_3737:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a30◂ [ a18◂ [ ]{| l |}] ) ⊢ 8'(= a30◂ [ a18◂ [ ]{| l |}] )
; .mov_ptn 2'(= a30◂ [ a18◂ [ ]{| l |}] ) ⊢ 8'(= a30◂ [ a18◂ [ ]{| l |}] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_3735
LB_3734:
	add rsp,0
	POP_GRM_FAIL
	ret
LB_3735:
	jmp LB_3739
LB_3738:
	add r14,1 
LB_3739:
	cmp r14,r9
	jge LB_3740
	JZ_LINE_SPC BYTE [r13+8+r14], LB_3738
LB_3740
	call GRM_245
	cmp BYTE [r8+6],0
	jnz LB_3743
	jmp LB_3744
LB_3743:
	jmp LB_3741
LB_3744:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a2◂ [ a30◂ [ a18◂ [ ]{| l |}]] ) ⊢ 9'(= a2◂ [ a30◂ [ a18◂ [ ]{| l |}]] )
; .mov_ptn 2'(= a2◂ [ a30◂ [ a18◂ [ ]{| l |}]] ) ⊢ 9'(= a2◂ [ a30◂ [ a18◂ [ ]{| l |}]] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_3742
LB_3741:
	add rsp,8
	POP_GRM_FAIL
	ret
LB_3742:
	mov QWORD [rsp+8*2],r14
	mov r13,QWORD [rsp+16+8*2]
	mov r14,QWORD [rsp+8*2]
	jmp LB_3745
LB_3745
;; rsp=2 , %2097~1'(= r ) %2096~0'(= r ) %2095~9'(= a2◂ [ a30◂ [ a18◂ [ ]{| l |}]] ) %2094~8'(= a30◂ [ a18◂ [ ]{| l |}] ) 
; #23 { 8'(= a30◂ [ a18◂ [ ]{| l |}] ) 9'(= a2◂ [ a30◂ [ a18◂ [ ]{| l |}]] ) } ⊢ 0(<2)◂{ 8'(= a30◂ [ a18◂ [ ]{| l |}] ) 9'(= a2◂ [ a30◂ [ a18◂ [ ]{| l |}]] ) }
;; rsp=2 , %2098~0(<2)◂{ 8'(= a30◂ [ a18◂ [ ]{| l |}] ) 9'(= a2◂ [ a30◂ [ a18◂ [ ]{| l |}]] ) } %2097~1'(= r ) %2096~0'(= r ) 
; #198 0(<2)◂{ 8'(= a30◂ [ a18◂ [ ]{| l |}] ) 9'(= a2◂ [ a30◂ [ a18◂ [ ]{| l |}]] ) } ⊢ 0(<2)◂0(<2)◂{ 8'(= a30◂ [ a18◂ [ ]{| l |}] ) 9'(= a2◂ [ a30◂ [ a18◂ [ ]{| l |}]] ) }
;; rsp=2 , %2099~0(<2)◂0(<2)◂{ 8'(= a30◂ [ a18◂ [ ]{| l |}] ) 9'(= a2◂ [ a30◂ [ a18◂ [ ]{| l |}]] ) } %2097~1'(= r ) %2096~0'(= r ) 
; #24 0(<2)◂0(<2)◂{ 8'(= a30◂ [ a18◂ [ ]{| l |}] ) 9'(= a2◂ [ a30◂ [ a18◂ [ ]{| l |}]] ) } ⊢ 0(<2)◂0(<2)◂0(<2)◂{ 8'(= a30◂ [ a18◂ [ ]{| l |}] ) 9'(= a2◂ [ a30◂ [ a18◂ [ ]{| l |}]] ) }
;; rsp=2 , %2100~0(<2)◂0(<2)◂0(<2)◂{ 8'(= a30◂ [ a18◂ [ ]{| l |}] ) 9'(= a2◂ [ a30◂ [ a18◂ [ ]{| l |}]] ) } %2097~1'(= r ) %2096~0'(= r ) 
; ∎ 0(<2)◂0(<2)◂0(<2)◂{ 8'(= a30◂ [ a18◂ [ ]{| l |}] ) 9'(= a2◂ [ a30◂ [ a18◂ [ ]{| l |}]] ) }
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂0(<2)◂0(<2)◂{ 8'(= a30◂ [ a18◂ [ ]{| l |}] ) 9'(= a2◂ [ a30◂ [ a18◂ [ ]{| l |}]] ) } ⊢ 2'(= a3◂ [ a44◂ [ a2◂ [ a30◂ [ a18◂ [ ]{| l |}]]]] )
; .mov_ptn 0(<2)◂0(<2)◂0(<2)◂{ 8'(= a30◂ [ a18◂ [ ]{| l |}] ) 9'(= a2◂ [ a30◂ [ a18◂ [ ]{| l |}]] ) } ⊢ 2'(= a3◂ [ a44◂ [ a2◂ [ a30◂ [ a18◂ [ ]{| l |}]]]] )
	ALC_RCD 2, rax
	mov r13,rax
	mov rax,QWORD [rsp-8+8*2]
	mov QWORD [r13+8+8*0],rax
	mov rax,QWORD [rsp-8+8*1]
	mov QWORD [r13+8+8*1],rax
	mov rax,r13
	mov BYTE [rax+6],0
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,16
	jmp LB_3746
LB_3746:
	cmp BYTE [r8+6],0
	jnz LB_3721
	POP_GRM_SCC
	ret
LB_3721:
	RB_GRM
	jmp LB_3749
LB_3748:
	add r14,1 
LB_3749:
	cmp r14,r9
	jge LB_3750
	JZ_LINE_SPC BYTE [r13+8+r14], LB_3748
LB_3750
	lea rax,[r14+1]
	cmp rax,r9
	jg LB_3753
	jmp LB_3754
LB_3753:
	mov r8,unt_1
	jmp LB_3751
LB_3754:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],46
	jnz LB_3755
	jmp LB_3756
LB_3755:
	mov r8,unt_1
	jmp LB_3751
LB_3756:
	add r14,1
	jmp LB_3752
LB_3751:
	add rsp,0
	jmp LB_3747
LB_3752:
	jmp LB_3758
LB_3757:
	add r14,1 
LB_3758:
	cmp r14,r9
	jge LB_3759
	JZ_LINE_SPC BYTE [r13+8+r14], LB_3757
LB_3759
	lea rax,[r14+1]
	cmp rax,r9
	jg LB_3762
	jmp LB_3763
LB_3762:
	mov r8,unt_1
	jmp LB_3760
LB_3763:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],10
	jnz LB_3764
	jmp LB_3765
LB_3764:
	mov r8,unt_1
	jmp LB_3760
LB_3765:
	add r14,1
	jmp LB_3761
LB_3760:
	add rsp,0
	jmp LB_3747
LB_3761:
	mov QWORD [rsp+8*0],r14
	mov r13,QWORD [rsp+16+8*0]
	mov r14,QWORD [rsp+8*0]
	jmp LB_3766
LB_3766
;; rsp=0 , %2102~1'(= r ) %2101~0'(= r ) 
; #22 { } ⊢ 1(<2)◂{ }
;; rsp=0 , %2103~1(<2)◂{ } %2102~1'(= r ) %2101~0'(= r ) 
; #198 1(<2)◂{ } ⊢ 0(<2)◂1(<2)◂{ }
;; rsp=0 , %2104~0(<2)◂1(<2)◂{ } %2102~1'(= r ) %2101~0'(= r ) 
; #24 0(<2)◂1(<2)◂{ } ⊢ 0(<2)◂0(<2)◂1(<2)◂{ }
;; rsp=0 , %2105~0(<2)◂0(<2)◂1(<2)◂{ } %2102~1'(= r ) %2101~0'(= r ) 
; ∎ 0(<2)◂0(<2)◂1(<2)◂{ }
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂0(<2)◂1(<2)◂{ } ⊢ 2'(= a3◂ [ a44◂ [ a2◂ [ a30◂ [ a18◂ [ ]{| l |}]]]] )
; .mov_ptn 0(<2)◂0(<2)◂1(<2)◂{ } ⊢ 2'(= a3◂ [ a44◂ [ a2◂ [ a30◂ [ a18◂ [ ]{| l |}]]]] )
	mov rax,unt 
	mov rax,unt_1
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	jmp LB_3767
LB_3767:
	cmp BYTE [r8+6],0
	jnz LB_3747
	POP_GRM_SCC
	ret
LB_3747:
	RB_GRM
	jmp LB_3770
LB_3769:
	add r14,1 
LB_3770:
	cmp r14,r9
	jge LB_3771
	JZ_LINE_SPC BYTE [r13+8+r14], LB_3769
LB_3771
	call GRM_224
	cmp BYTE [r8+6],0
	jnz LB_3774
	jmp LB_3775
LB_3774:
	jmp LB_3772
LB_3775:
	sub rsp,16
; .mov_ptn2 2'(= *{ rr} ) ⊢ { 8'(= r ) 9'(= r ) }
; .mov_ptn 2'(= *{ rr} ) ⊢ { 8'(= r ) 9'(= r ) }
	mov r10, QWORD [r8+8]
	mov QWORD [rsp-8+8*2],r10
	mov r11, QWORD [r8+16]
	mov QWORD [rsp-8+8*1],r11
	mov rdi,r8
	FREE_RCD 2,rdi
	jmp LB_3773
LB_3772:
	add rsp,0
	jmp LB_3768
LB_3773:
	mov QWORD [rsp+8*2],r14
	mov r13,QWORD [rsp+16+8*2]
	mov r14,QWORD [rsp+8*2]
	jmp LB_3776
LB_3776
;; rsp=2 , %2108~1'(= r ) %2107~0'(= r ) %2106~{ 8'(= r ) 9'(= r ) } 
; $ %[ "mtc_line_tl 0" ] ⊢ %[ "mtc_line_tl 0" ]
;; rsp=2 , %2109~%[ "mtc_line_tl 0" ] %2108~1'(= r ) %2107~0'(= r ) %2106~{ 8'(= r ) 9'(= r ) } 
; #22 { } ⊢ 1(<2)◂{ }
;; rsp=2 , %2110~1(<2)◂{ } %2109~%[ "mtc_line_tl 0" ] %2108~1'(= r ) %2107~0'(= r ) %2106~{ 8'(= r ) 9'(= r ) } 
; #23 { { 0'(= r ) 1'(= r ) %[ "mtc_line_tl 0" ] } 1(<2)◂{ } } ⊢ 0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "mtc_line_tl 0" ] } 1(<2)◂{ } }
;; rsp=2 , %2111~0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "mtc_line_tl 0" ] } 1(<2)◂{ } } %2106~{ 8'(= r ) 9'(= r ) } 
; #197 0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "mtc_line_tl 0" ] } 1(<2)◂{ } } ⊢ 1(<2)◂0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "mtc_line_tl 0" ] } 1(<2)◂{ } }
;; rsp=2 , %2112~1(<2)◂0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "mtc_line_tl 0" ] } 1(<2)◂{ } } %2106~{ 8'(= r ) 9'(= r ) } 
; #24 1(<2)◂0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "mtc_line_tl 0" ] } 1(<2)◂{ } } ⊢ 0(<2)◂1(<2)◂0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "mtc_line_tl 0" ] } 1(<2)◂{ } }
;; rsp=2 , %2113~0(<2)◂1(<2)◂0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "mtc_line_tl 0" ] } 1(<2)◂{ } } %2106~{ 8'(= r ) 9'(= r ) } 
; ∎ 0(<2)◂1(<2)◂0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "mtc_line_tl 0" ] } 1(<2)◂{ } }
; .dlt.ptn { 8'(= r ) 9'(= r ) }
	mov rdi,QWORD [rsp-8+8*2]
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
	mov rdi,QWORD [rsp-8+8*1]
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂1(<2)◂0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "mtc_line_tl 0" ] } 1(<2)◂{ } } ⊢ 2'(= a3◂ [ a44◂ [ a2◂ [ a30◂ [ a18◂ [ ]{| l |}]]]] )
; .mov_ptn 0(<2)◂1(<2)◂0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "mtc_line_tl 0" ] } 1(<2)◂{ } } ⊢ 2'(= a3◂ [ a44◂ [ a2◂ [ a30◂ [ a18◂ [ ]{| l |}]]]] )
	ALC_RCD 2, rax
	mov r9,rax
	ALC_RCD 3, rax
	mov r10,rax
	mov rax,r13
	mov QWORD [r10+8+8*0],rax
	mov rax,r14
	mov QWORD [r10+8+8*1],rax
	mov rsi,1  
	mov rdi,24
	xor rax,rax 
	C_CALL_SF calloc
	mov QWORD [rax],13
	mov BYTE [rax+8+0],109
	mov BYTE [rax+8+1],116
	mov BYTE [rax+8+2],99
	mov BYTE [rax+8+3],95
	mov BYTE [rax+8+4],108
	mov BYTE [rax+8+5],105
	mov BYTE [rax+8+6],110
	mov BYTE [rax+8+7],101
	mov BYTE [rax+8+8],95
	mov BYTE [rax+8+9],116
	mov BYTE [rax+8+10],108
	mov BYTE [rax+8+11],32
	mov BYTE [rax+8+12],48
	mov QWORD [r10+8+8*2],rax
	mov rax,r10
	mov QWORD [r9+8+8*0],rax
	mov rax,unt 
	mov rax,unt_1
	mov QWORD [r9+8+8*1],rax
	mov rax,r9
	mov BYTE [rax+6],0
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],1
	mov QWORD [rax+8],rdi
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,16
	jmp LB_3777
LB_3777:
	cmp BYTE [r8+6],0
	jnz LB_3768
	POP_GRM_SCC
	ret
LB_3768:
	POP_GRM_FAIL 
	ret
ETR_247:
	mov r9,0x0000_ffff_ffff_ffff
	and r9,[r13]
	call GRM_247
	ret
GRM_247:
	PUSH_GRM
	call GRM_79
	cmp BYTE [r8+6],0
	jnz LB_3781
	jmp LB_3782
LB_3781:
	jmp LB_3779
LB_3782:
	sub rsp,8
; .mov_ptn2 2'(= {| l |} ) ⊢ 8'(= {| l |} )
; .mov_ptn 2'(= {| l |} ) ⊢ 8'(= {| l |} )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_3780
LB_3779:
	add rsp,0
	jmp LB_3778
LB_3780:
	lea rax,[r14+1]
	cmp rax,r9
	jg LB_3785
	jmp LB_3786
LB_3785:
	mov r8,unt_1
	jmp LB_3783
LB_3786:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],39
	jnz LB_3787
	jmp LB_3788
LB_3787:
	mov r8,unt_1
	jmp LB_3783
LB_3788:
	add r14,1
	jmp LB_3784
LB_3783:
	add rsp,8
	jmp LB_3778
LB_3784:
	mov QWORD [rsp+8*1],r14
	mov r13,QWORD [rsp+16+8*1]
	mov r14,QWORD [rsp+8*1]
	jmp LB_3789
LB_3789
;; rsp=1 , %2116~1'(= r ) %2115~0'(= r ) %2114~8'(= {| l |} ) 
; #116 8'(= {| l |} ) ⊢ 1(<2)◂8'(= {| l |} )
;; rsp=1 , %2117~1(<2)◂8'(= {| l |} ) %2116~1'(= r ) %2115~0'(= r ) 
; #24 1(<2)◂8'(= {| l |} ) ⊢ 0(<2)◂1(<2)◂8'(= {| l |} )
;; rsp=1 , %2118~0(<2)◂1(<2)◂8'(= {| l |} ) %2116~1'(= r ) %2115~0'(= r ) 
; ∎ 0(<2)◂1(<2)◂8'(= {| l |} )
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂1(<2)◂8'(= {| l |} ) ⊢ 2'(= a3◂ [ a31◂ [ a18◂ [ ]{| l |}]] )
; .mov_ptn 0(<2)◂1(<2)◂8'(= {| l |} ) ⊢ 2'(= a3◂ [ a31◂ [ a18◂ [ ]{| l |}]] )
	mov rax,QWORD [rsp-8+8*1]
	mov BYTE [rax+6],1
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,8
	jmp LB_3790
LB_3790:
	cmp BYTE [r8+6],0
	jnz LB_3778
	POP_GRM_SCC
	ret
LB_3778:
	RB_GRM
	call GRM_195
	cmp BYTE [r8+6],0
	jnz LB_3794
	jmp LB_3795
LB_3794:
	jmp LB_3792
LB_3795:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a20◂ [ a18◂ [ ]] ) ⊢ 8'(= a20◂ [ a18◂ [ ]] )
; .mov_ptn 2'(= a20◂ [ a18◂ [ ]] ) ⊢ 8'(= a20◂ [ a18◂ [ ]] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_3793
LB_3792:
	add rsp,0
	jmp LB_3791
LB_3793:
	mov QWORD [rsp+8*1],r14
	mov r13,QWORD [rsp+16+8*1]
	mov r14,QWORD [rsp+8*1]
	jmp LB_3796
LB_3796
;; rsp=1 , %2121~1'(= r ) %2120~0'(= r ) %2119~8'(= a20◂ [ a18◂ [ ]] ) 
; #117 8'(= a20◂ [ a18◂ [ ]] ) ⊢ 0(<2)◂8'(= a20◂ [ a18◂ [ ]] )
;; rsp=1 , %2122~0(<2)◂8'(= a20◂ [ a18◂ [ ]] ) %2121~1'(= r ) %2120~0'(= r ) 
; #24 0(<2)◂8'(= a20◂ [ a18◂ [ ]] ) ⊢ 0(<2)◂0(<2)◂8'(= a20◂ [ a18◂ [ ]] )
;; rsp=1 , %2123~0(<2)◂0(<2)◂8'(= a20◂ [ a18◂ [ ]] ) %2121~1'(= r ) %2120~0'(= r ) 
; ∎ 0(<2)◂0(<2)◂8'(= a20◂ [ a18◂ [ ]] )
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂0(<2)◂8'(= a20◂ [ a18◂ [ ]] ) ⊢ 2'(= a3◂ [ a31◂ [ a18◂ [ ]{| l |}]] )
; .mov_ptn 0(<2)◂0(<2)◂8'(= a20◂ [ a18◂ [ ]] ) ⊢ 2'(= a3◂ [ a31◂ [ a18◂ [ ]{| l |}]] )
	mov rax,QWORD [rsp-8+8*1]
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,8
	jmp LB_3797
LB_3797:
	cmp BYTE [r8+6],0
	jnz LB_3791
	POP_GRM_SCC
	ret
LB_3791:
	POP_GRM_FAIL 
	ret
LB_3829:
	movzx rax,BYTE [r8+6]
	jmp QWORD [LB_3836+8*rax]
LB_3836: dq LB_3830,LB_3831,LB_3832,LB_3833,LB_3834,LB_3835
LB_3830:
	push r8
	mov r8,QWORD [r8+8+8*0]
	mov rdi,r8
	call free_s8
	pop r8 
	push r8
	mov r8,QWORD [r8+8+8*1]
	call LB_3838
	pop r8 
	FREE_RCD 2, r8
	jmp LB_3837
LB_3831:
	FREE_LN r8 
	mov r8,QWORD [r8+8]
	call LB_3839
	jmp LB_3837
LB_3832:
	push r8
	mov r8,QWORD [r8+8+8*0]
	mov rdi,r8
	call free_s8
	pop r8 
	push r8
	mov r8,QWORD [r8+8+8*1]
	call LB_3840
	pop r8 
	FREE_RCD 2, r8
	jmp LB_3837
LB_3833:
	FREE_LN r8 
	mov r8,QWORD [r8+8]
	call LB_3841
	jmp LB_3837
LB_3834:
	push r8
	mov r8,QWORD [r8+8+8*0]
	mov rdi,r8
	call free_s8
	pop r8 
	push r8
	mov r8,QWORD [r8+8+8*1]
	call LB_3842
	pop r8 
	FREE_RCD 2, r8
	jmp LB_3837
LB_3835:
	FREE_LN r8 
	mov r8,QWORD [r8+8]
	call LB_3843
	jmp LB_3837
LB_3837:
	ret
LB_3843:
	movzx rax,BYTE [r8+6]
	jmp QWORD [LB_3846+8*rax]
LB_3846: dq LB_3844,LB_3845
LB_3844:
	push r8
	mov r8,QWORD [r8+8+8*0]
	push r8
	mov r8,QWORD [r8+8+8*0]
	mov rdi,r8
	call free_s8
	pop r8 
	push r8
	mov r8,QWORD [r8+8+8*1]
	call LB_3842
	pop r8 
	FREE_RCD 2, r8
	pop r8 
	push r8
	mov r8,QWORD [r8+8+8*1]
	call LB_3843
	pop r8 
	FREE_RCD 2, r8
	jmp LB_3847
LB_3845:
	jmp LB_3847
LB_3847:
	ret
LB_3842:
	movzx rax,BYTE [r8+6]
	jmp QWORD [LB_3850+8*rax]
LB_3850: dq LB_3848,LB_3849
LB_3848:
	push r8
	mov r8,QWORD [r8+8+8*0]
	call LB_905
	pop r8 
	push r8
	mov r8,QWORD [r8+8+8*1]
	call LB_3852
	pop r8 
	FREE_RCD 2, r8
	jmp LB_3851
LB_3849:
	push r8
	mov r8,QWORD [r8+8+8*0]
	call LB_905
	pop r8 
	push r8
	mov r8,QWORD [r8+8+8*1]
	call LB_915
	pop r8 
	FREE_RCD 2, r8
	jmp LB_3851
LB_3851:
	ret
LB_3852:
	movzx rax,BYTE [r8+6]
	jmp QWORD [LB_3855+8*rax]
LB_3855: dq LB_3853,LB_3854
LB_3853:
	push r8
	mov r8,QWORD [r8+8+8*0]
	push r8
	mov r8,QWORD [r8+8+8*0]
	mov rdi,r8
	call free_s8
	pop r8 
	push r8
	mov r8,QWORD [r8+8+8*1]
	call LB_915
	pop r8 
	FREE_RCD 2, r8
	pop r8 
	push r8
	mov r8,QWORD [r8+8+8*1]
	call LB_3852
	pop r8 
	FREE_RCD 2, r8
	jmp LB_3856
LB_3854:
	jmp LB_3856
LB_3856:
	ret
LB_3841:
	movzx rax,BYTE [r8+6]
	jmp QWORD [LB_3859+8*rax]
LB_3859: dq LB_3857,LB_3858
LB_3857:
	push r8
	mov r8,QWORD [r8+8+8*0]
	push r8
	mov r8,QWORD [r8+8+8*0]
	mov rdi,r8
	call free_s8
	pop r8 
	push r8
	mov r8,QWORD [r8+8+8*1]
	call LB_791
	pop r8 
	push r8
	mov r8,QWORD [r8+8+8*2]
	call LB_995
	pop r8 
	push r8
	mov r8,QWORD [r8+8+8*3]
	call LB_797
	pop r8 
	FREE_RCD 4, r8
	pop r8 
	push r8
	mov r8,QWORD [r8+8+8*1]
	call LB_3841
	pop r8 
	FREE_RCD 2, r8
	jmp LB_3860
LB_3858:
	jmp LB_3860
LB_3860:
	ret
LB_3840:
	movzx rax,BYTE [r8+6]
	jmp QWORD [LB_3864+8*rax]
LB_3864: dq LB_3861,LB_3862,LB_3863
LB_3861:
	push r8
	mov r8,QWORD [r8+8+8*0]
	call LB_791
	pop r8 
	push r8
	mov r8,QWORD [r8+8+8*1]
	call LB_995
	pop r8 
	push r8
	mov r8,QWORD [r8+8+8*2]
	call LB_797
	pop r8 
	FREE_RCD 3, r8
	jmp LB_3865
LB_3862:
	FREE_LN r8 
	mov r8,QWORD [r8+8]
	call LB_451
	jmp LB_3865
LB_3863:
	FREE_LN r8 
	mov r8,QWORD [r8+8]
	call LB_797
	jmp LB_3865
LB_3865:
	ret
LB_3839:
	movzx rax,BYTE [r8+6]
	jmp QWORD [LB_3868+8*rax]
LB_3868: dq LB_3866,LB_3867
LB_3866:
	push r8
	mov r8,QWORD [r8+8+8*0]
	push r8
	mov r8,QWORD [r8+8+8*0]
	mov rdi,r8
	call free_s8
	pop r8 
	push r8
	mov r8,QWORD [r8+8+8*1]
	call LB_3870
	pop r8 
	FREE_RCD 2, r8
	pop r8 
	push r8
	mov r8,QWORD [r8+8+8*1]
	call LB_3839
	pop r8 
	FREE_RCD 2, r8
	jmp LB_3869
LB_3867:
	jmp LB_3869
LB_3869:
	ret
LB_3870:
	movzx rax,BYTE [r8+6]
	jmp QWORD [LB_3873+8*rax]
LB_3873: dq LB_3871,LB_3872
LB_3871:
	FREE_LN r8 
	mov r8,QWORD [r8+8]
	call LB_769
	jmp LB_3874
LB_3872:
	FREE_LN r8 
	mov r8,QWORD [r8+8]
	call LB_792
	jmp LB_3874
LB_3874:
	ret
LB_3838:
	movzx rax,BYTE [r8+6]
	jmp QWORD [LB_3877+8*rax]
LB_3877: dq LB_3875,LB_3876
LB_3875:
	FREE_LN r8 
	mov r8,QWORD [r8+8]
	call LB_3879
	jmp LB_3878
LB_3876:
	FREE_LN r8 
	mov r8,QWORD [r8+8]
	call LB_450
	jmp LB_3878
LB_3878:
	ret
LB_3879:
	movzx rax,BYTE [r8+6]
	jmp QWORD [LB_3882+8*rax]
LB_3882: dq LB_3880,LB_3881
LB_3880:
	push r8
	mov r8,QWORD [r8+8+8*0]
	call LB_3829
	pop r8 
	push r8
	mov r8,QWORD [r8+8+8*1]
	call LB_3879
	pop r8 
	FREE_RCD 2, r8
	jmp LB_3883
LB_3881:
	jmp LB_3883
LB_3883:
	ret
LB_3822: ;; #199 { 0'(= a44◂ [ a40◂ [ ]] ) 1'(= a44◂ [ a2◂ [ a40◂ [ ]]] ) } ⊢ 0'(= a44◂ [ *{ a40◂ [ ]a2◂ [ a40◂ [ ]]}] ) : ({ _t44◂_t40 _t44◂_lst◂_t40 }→_t44◂{ _t40 _lst◂_t40 })
;; rsp=0 , %1136~1'(= a44◂ [ a2◂ [ a40◂ [ ]]] ) %1135~0'(= a44◂ [ a40◂ [ ]] ) 
;; ? 0'(= a44◂ [ a40◂ [ ]] ) ⊢ 0(<2)◂2'(= a40◂ [ ] )
	mov rdi,r13
	cmp BYTE [rdi+6],0
	jnz LB_3824
	jmp LB_3825
LB_3824:
	jmp LB_3823
LB_3825:
	mov QWORD [GBG_VCT+8*0],rdi
	mov r8,QWORD [rdi+8]
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_LN rdi
;; rsp=0 , %1138~2'(= a40◂ [ ] ) %1136~1'(= a44◂ [ a2◂ [ a40◂ [ ]]] ) 
;; ? 1'(= a44◂ [ a2◂ [ a40◂ [ ]]] ) ⊢ 0(<2)◂0'(= a2◂ [ a40◂ [ ]] )
	mov rdi,r14
	cmp BYTE [rdi+6],0
	jnz LB_3827
	jmp LB_3828
LB_3827:
	jmp LB_3826
LB_3828:
	mov QWORD [GBG_VCT+8*0],rdi
	mov r13,QWORD [rdi+8]
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_LN rdi
;; rsp=0 , %1140~0'(= a2◂ [ a40◂ [ ]] ) %1138~2'(= a40◂ [ ] ) 
; #198 { 2'(= a40◂ [ ] ) 0'(= a2◂ [ a40◂ [ ]] ) } ⊢ 0(<2)◂{ 2'(= a40◂ [ ] ) 0'(= a2◂ [ a40◂ [ ]] ) }
;; rsp=0 , %1141~0(<2)◂{ 2'(= a40◂ [ ] ) 0'(= a2◂ [ a40◂ [ ]] ) } 
; ∎ 0(<2)◂{ 2'(= a40◂ [ ] ) 0'(= a2◂ [ a40◂ [ ]] ) }
; .mov_ptn2 0(<2)◂{ 2'(= a40◂ [ ] ) 0'(= a2◂ [ a40◂ [ ]] ) } ⊢ 0'(= a44◂ [ *{ a40◂ [ ]a2◂ [ a40◂ [ ]]}] )
	mov r14,r13
; .mov_ptn 0(<2)◂{ 2'(= a40◂ [ ] ) 1'(= a2◂ [ a40◂ [ ]] ) } ⊢ 0'(= a44◂ [ *{ a40◂ [ ]a2◂ [ a40◂ [ ]]}] )
	ALC_RCD 2, rax
	mov r9,rax
	mov rax,r8
	mov QWORD [r9+8+8*0],rax
	mov rax,r14
	mov QWORD [r9+8+8*1],rax
	mov rax,r9
	mov BYTE [rax+6],0
	mov r13,rax
	ret
LB_3826:
;; ?. 1'(= a44◂ [ a2◂ [ a40◂ [ ]]] ) ⊢ 1(<2)◂0'(= a2◂ [ *{ rr{| l |}}] )
	mov QWORD [GBG_VCT+8*0],rdi
	mov r13,QWORD [rdi+8]
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_LN rdi
;; rsp=0 , %1139~0'(= a2◂ [ *{ rr{| l |}}] ) %1138~2'(= a40◂ [ ] ) 
; #197 0'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 1(<2)◂0'(= a2◂ [ *{ rr{| l |}}] )
;; rsp=0 , %1142~1(<2)◂0'(= a2◂ [ *{ rr{| l |}}] ) %1138~2'(= a40◂ [ ] ) 
; ∎ 1(<2)◂0'(= a2◂ [ *{ rr{| l |}}] )
; .dlt.ptn 2'(= a40◂ [ ] )
	mov rdi,r8
	C_PUSH_REGS
	mov r8,rdi
	call LB_3829
	C_POP_REGS
; .mov_ptn2 1(<2)◂0'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 0'(= a44◂ [ *{ a40◂ [ ]a2◂ [ a40◂ [ ]]}] )
	mov r14,r13
; .mov_ptn 1(<2)◂1'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 0'(= a44◂ [ *{ a40◂ [ ]a2◂ [ a40◂ [ ]]}] )
	mov rax,r14
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],1
	mov QWORD [rax+8],rdi
	mov r13,rax
	ret
LB_3823:
;; ?. 0'(= a44◂ [ a40◂ [ ]] ) ⊢ 1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] )
	mov QWORD [GBG_VCT+8*0],rdi
	mov r8,QWORD [rdi+8]
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_LN rdi
;; rsp=0 , %1137~2'(= a2◂ [ *{ rr{| l |}}] ) %1136~1'(= a44◂ [ a2◂ [ a40◂ [ ]]] ) 
;; ? 1'(= a44◂ [ a2◂ [ a40◂ [ ]]] ) ⊢ 0(<2)◂0'(= a2◂ [ a40◂ [ ]] )
	mov rdi,r14
	cmp BYTE [rdi+6],0
	jnz LB_3885
	jmp LB_3886
LB_3885:
	jmp LB_3884
LB_3886:
	mov QWORD [GBG_VCT+8*0],rdi
	mov r13,QWORD [rdi+8]
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_LN rdi
;; rsp=0 , %1144~0'(= a2◂ [ a40◂ [ ]] ) %1137~2'(= a2◂ [ *{ rr{| l |}}] ) 
; #197 2'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] )
;; rsp=0 , %1145~1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] ) %1144~0'(= a2◂ [ a40◂ [ ]] ) 
; ∎ 1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] )
; .dlt.ptn 0'(= a2◂ [ a40◂ [ ]] )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	call LB_3879
	C_POP_REGS
; .mov_ptn2 1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 0'(= a44◂ [ *{ a40◂ [ ]a2◂ [ a40◂ [ ]]}] )
; .mov_ptn 1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 0'(= a44◂ [ *{ a40◂ [ ]a2◂ [ a40◂ [ ]]}] )
	mov rax,r8
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],1
	mov QWORD [rax+8],rdi
	mov r13,rax
	ret
LB_3884:
;; ?. 1'(= a44◂ [ a2◂ [ a40◂ [ ]]] ) ⊢ 1(<2)◂0'(= a2◂ [ *{ rr{| l |}}] )
	mov QWORD [GBG_VCT+8*0],rdi
	mov r13,QWORD [rdi+8]
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_LN rdi
;; rsp=0 , %1143~0'(= a2◂ [ *{ rr{| l |}}] ) %1137~2'(= a2◂ [ *{ rr{| l |}}] ) 
; #58 { 2'(= a2◂ [ *{ rr{| l |}}] ) 0'(= a2◂ [ *{ rr{| l |}}] ) } ⊢ 0'(= a2◂ [ *{ rr{| l |}}] )
; .mov_ptn2 { 2'(= a2◂ [ *{ rr{| l |}}] ) 0'(= a2◂ [ *{ rr{| l |}}] ) } ⊢ { 0'(= a2◂ [ *{ rr{| l |}}] ) 1'(= a2◂ [ *{ rr{| l |}}] ) }
; .mov_ptn 0'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 1'(= a2◂ [ *{ rr{| l |}}] )
	mov rax,r13
	mov r14,rax
; .mov_ptn 2'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 0'(= a2◂ [ *{ rr{| l |}}] )
	mov rax,r8
	mov r13,rax
	call LB_1985
;; rsp=0 , %1146~0'(= a2◂ [ *{ rr{| l |}}] ) 
; #197 0'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 1(<2)◂0'(= a2◂ [ *{ rr{| l |}}] )
;; rsp=0 , %1147~1(<2)◂0'(= a2◂ [ *{ rr{| l |}}] ) 
; ∎ 1(<2)◂0'(= a2◂ [ *{ rr{| l |}}] )
; .mov_ptn2 1(<2)◂0'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 0'(= a44◂ [ *{ a40◂ [ ]a2◂ [ a40◂ [ ]]}] )
	mov r14,r13
; .mov_ptn 1(<2)◂1'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 0'(= a44◂ [ *{ a40◂ [ ]a2◂ [ a40◂ [ ]]}] )
	mov rax,r14
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],1
	mov QWORD [rax+8],rdi
	mov r13,rax
	ret
LB_4832: ;; #199 { 0'(= a44◂ [ a2◂ [ *{ {| l |}a17◂ [ a22◂ [ {| l |}]]a3◂ [ a32◂ [ ]]a26◂ [ a18◂ [ ]{| l |}]}]] ) 1'(= a44◂ [ a26◂ [ a18◂ [ ]{| l |}]] ) } ⊢ 0'(= a44◂ [ *{ a2◂ [ *{ {| l |}a17◂ [ a22◂ [ {| l |}]]a3◂ [ a32◂ [ ]]a26◂ [ a18◂ [ ]{| l |}]}]a26◂ [ a18◂ [ ]{| l |}]}] ) : ({ _t44◂_lst◂{ _s8 _t17◂_t22◂_s8 _opn◂_t32 _t26◂_s8◂_t18 } _t44◂_t26◂_s8◂_t18 }→_t44◂{ _lst◂{ _s8 _t17◂_t22◂_s8 _opn◂_t32 _t26◂_s8◂_t18 } _t26◂_s8◂_t18 })
;; rsp=0 , %1136~1'(= a44◂ [ a26◂ [ a18◂ [ ]{| l |}]] ) %1135~0'(= a44◂ [ a2◂ [ *{ {| l |}a17◂ [ a22◂ [ {| l |}]]a3◂ [ a32◂ [ ]]a26◂ [ a18◂ [ ]{| l |}]}]] ) 
;; ? 0'(= a44◂ [ a2◂ [ *{ {| l |}a17◂ [ a22◂ [ {| l |}]]a3◂ [ a32◂ [ ]]a26◂ [ a18◂ [ ]{| l |}]}]] ) ⊢ 0(<2)◂2'(= a2◂ [ *{ {| l |}a17◂ [ a22◂ [ {| l |}]]a3◂ [ a32◂ [ ]]a26◂ [ a18◂ [ ]{| l |}]}] )
	mov rdi,r13
	cmp BYTE [rdi+6],0
	jnz LB_4834
	jmp LB_4835
LB_4834:
	jmp LB_4833
LB_4835:
	mov QWORD [GBG_VCT+8*0],rdi
	mov r8,QWORD [rdi+8]
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_LN rdi
;; rsp=0 , %1138~2'(= a2◂ [ *{ {| l |}a17◂ [ a22◂ [ {| l |}]]a3◂ [ a32◂ [ ]]a26◂ [ a18◂ [ ]{| l |}]}] ) %1136~1'(= a44◂ [ a26◂ [ a18◂ [ ]{| l |}]] ) 
;; ? 1'(= a44◂ [ a26◂ [ a18◂ [ ]{| l |}]] ) ⊢ 0(<2)◂0'(= a26◂ [ a18◂ [ ]{| l |}] )
	mov rdi,r14
	cmp BYTE [rdi+6],0
	jnz LB_4837
	jmp LB_4838
LB_4837:
	jmp LB_4836
LB_4838:
	mov QWORD [GBG_VCT+8*0],rdi
	mov r13,QWORD [rdi+8]
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_LN rdi
;; rsp=0 , %1140~0'(= a26◂ [ a18◂ [ ]{| l |}] ) %1138~2'(= a2◂ [ *{ {| l |}a17◂ [ a22◂ [ {| l |}]]a3◂ [ a32◂ [ ]]a26◂ [ a18◂ [ ]{| l |}]}] ) 
; #198 { 2'(= a2◂ [ *{ {| l |}a17◂ [ a22◂ [ {| l |}]]a3◂ [ a32◂ [ ]]a26◂ [ a18◂ [ ]{| l |}]}] ) 0'(= a26◂ [ a18◂ [ ]{| l |}] ) } ⊢ 0(<2)◂{ 2'(= a2◂ [ *{ {| l |}a17◂ [ a22◂ [ {| l |}]]a3◂ [ a32◂ [ ]]a26◂ [ a18◂ [ ]{| l |}]}] ) 0'(= a26◂ [ a18◂ [ ]{| l |}] ) }
;; rsp=0 , %1141~0(<2)◂{ 2'(= a2◂ [ *{ {| l |}a17◂ [ a22◂ [ {| l |}]]a3◂ [ a32◂ [ ]]a26◂ [ a18◂ [ ]{| l |}]}] ) 0'(= a26◂ [ a18◂ [ ]{| l |}] ) } 
; ∎ 0(<2)◂{ 2'(= a2◂ [ *{ {| l |}a17◂ [ a22◂ [ {| l |}]]a3◂ [ a32◂ [ ]]a26◂ [ a18◂ [ ]{| l |}]}] ) 0'(= a26◂ [ a18◂ [ ]{| l |}] ) }
; .mov_ptn2 0(<2)◂{ 2'(= a2◂ [ *{ {| l |}a17◂ [ a22◂ [ {| l |}]]a3◂ [ a32◂ [ ]]a26◂ [ a18◂ [ ]{| l |}]}] ) 0'(= a26◂ [ a18◂ [ ]{| l |}] ) } ⊢ 0'(= a44◂ [ *{ a2◂ [ *{ {| l |}a17◂ [ a22◂ [ {| l |}]]a3◂ [ a32◂ [ ]]a26◂ [ a18◂ [ ]{| l |}]}]a26◂ [ a18◂ [ ]{| l |}]}] )
	mov r14,r13
; .mov_ptn 0(<2)◂{ 2'(= a2◂ [ *{ {| l |}a17◂ [ a22◂ [ {| l |}]]a3◂ [ a32◂ [ ]]a26◂ [ a18◂ [ ]{| l |}]}] ) 1'(= a26◂ [ a18◂ [ ]{| l |}] ) } ⊢ 0'(= a44◂ [ *{ a2◂ [ *{ {| l |}a17◂ [ a22◂ [ {| l |}]]a3◂ [ a32◂ [ ]]a26◂ [ a18◂ [ ]{| l |}]}]a26◂ [ a18◂ [ ]{| l |}]}] )
	ALC_RCD 2, rax
	mov r9,rax
	mov rax,r8
	mov QWORD [r9+8+8*0],rax
	mov rax,r14
	mov QWORD [r9+8+8*1],rax
	mov rax,r9
	mov BYTE [rax+6],0
	mov r13,rax
	ret
LB_4836:
;; ?. 1'(= a44◂ [ a26◂ [ a18◂ [ ]{| l |}]] ) ⊢ 1(<2)◂0'(= a2◂ [ *{ rr{| l |}}] )
	mov QWORD [GBG_VCT+8*0],rdi
	mov r13,QWORD [rdi+8]
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_LN rdi
;; rsp=0 , %1139~0'(= a2◂ [ *{ rr{| l |}}] ) %1138~2'(= a2◂ [ *{ {| l |}a17◂ [ a22◂ [ {| l |}]]a3◂ [ a32◂ [ ]]a26◂ [ a18◂ [ ]{| l |}]}] ) 
; #197 0'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 1(<2)◂0'(= a2◂ [ *{ rr{| l |}}] )
;; rsp=0 , %1142~1(<2)◂0'(= a2◂ [ *{ rr{| l |}}] ) %1138~2'(= a2◂ [ *{ {| l |}a17◂ [ a22◂ [ {| l |}]]a3◂ [ a32◂ [ ]]a26◂ [ a18◂ [ ]{| l |}]}] ) 
; ∎ 1(<2)◂0'(= a2◂ [ *{ rr{| l |}}] )
; .dlt.ptn 2'(= a2◂ [ *{ {| l |}a17◂ [ a22◂ [ {| l |}]]a3◂ [ a32◂ [ ]]a26◂ [ a18◂ [ ]{| l |}]}] )
	mov rdi,r8
	C_PUSH_REGS
	mov r8,rdi
	call LB_3841
	C_POP_REGS
; .mov_ptn2 1(<2)◂0'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 0'(= a44◂ [ *{ a2◂ [ *{ {| l |}a17◂ [ a22◂ [ {| l |}]]a3◂ [ a32◂ [ ]]a26◂ [ a18◂ [ ]{| l |}]}]a26◂ [ a18◂ [ ]{| l |}]}] )
	mov r14,r13
; .mov_ptn 1(<2)◂1'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 0'(= a44◂ [ *{ a2◂ [ *{ {| l |}a17◂ [ a22◂ [ {| l |}]]a3◂ [ a32◂ [ ]]a26◂ [ a18◂ [ ]{| l |}]}]a26◂ [ a18◂ [ ]{| l |}]}] )
	mov rax,r14
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],1
	mov QWORD [rax+8],rdi
	mov r13,rax
	ret
LB_4833:
;; ?. 0'(= a44◂ [ a2◂ [ *{ {| l |}a17◂ [ a22◂ [ {| l |}]]a3◂ [ a32◂ [ ]]a26◂ [ a18◂ [ ]{| l |}]}]] ) ⊢ 1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] )
	mov QWORD [GBG_VCT+8*0],rdi
	mov r8,QWORD [rdi+8]
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_LN rdi
;; rsp=0 , %1137~2'(= a2◂ [ *{ rr{| l |}}] ) %1136~1'(= a44◂ [ a26◂ [ a18◂ [ ]{| l |}]] ) 
;; ? 1'(= a44◂ [ a26◂ [ a18◂ [ ]{| l |}]] ) ⊢ 0(<2)◂0'(= a26◂ [ a18◂ [ ]{| l |}] )
	mov rdi,r14
	cmp BYTE [rdi+6],0
	jnz LB_4840
	jmp LB_4841
LB_4840:
	jmp LB_4839
LB_4841:
	mov QWORD [GBG_VCT+8*0],rdi
	mov r13,QWORD [rdi+8]
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_LN rdi
;; rsp=0 , %1144~0'(= a26◂ [ a18◂ [ ]{| l |}] ) %1137~2'(= a2◂ [ *{ rr{| l |}}] ) 
; #197 2'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] )
;; rsp=0 , %1145~1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] ) %1144~0'(= a26◂ [ a18◂ [ ]{| l |}] ) 
; ∎ 1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] )
; .dlt.ptn 0'(= a26◂ [ a18◂ [ ]{| l |}] )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	call LB_797
	C_POP_REGS
; .mov_ptn2 1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 0'(= a44◂ [ *{ a2◂ [ *{ {| l |}a17◂ [ a22◂ [ {| l |}]]a3◂ [ a32◂ [ ]]a26◂ [ a18◂ [ ]{| l |}]}]a26◂ [ a18◂ [ ]{| l |}]}] )
; .mov_ptn 1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 0'(= a44◂ [ *{ a2◂ [ *{ {| l |}a17◂ [ a22◂ [ {| l |}]]a3◂ [ a32◂ [ ]]a26◂ [ a18◂ [ ]{| l |}]}]a26◂ [ a18◂ [ ]{| l |}]}] )
	mov rax,r8
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],1
	mov QWORD [rax+8],rdi
	mov r13,rax
	ret
LB_4839:
;; ?. 1'(= a44◂ [ a26◂ [ a18◂ [ ]{| l |}]] ) ⊢ 1(<2)◂0'(= a2◂ [ *{ rr{| l |}}] )
	mov QWORD [GBG_VCT+8*0],rdi
	mov r13,QWORD [rdi+8]
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_LN rdi
;; rsp=0 , %1143~0'(= a2◂ [ *{ rr{| l |}}] ) %1137~2'(= a2◂ [ *{ rr{| l |}}] ) 
; #58 { 2'(= a2◂ [ *{ rr{| l |}}] ) 0'(= a2◂ [ *{ rr{| l |}}] ) } ⊢ 0'(= a2◂ [ *{ rr{| l |}}] )
; .mov_ptn2 { 2'(= a2◂ [ *{ rr{| l |}}] ) 0'(= a2◂ [ *{ rr{| l |}}] ) } ⊢ { 0'(= a2◂ [ *{ rr{| l |}}] ) 1'(= a2◂ [ *{ rr{| l |}}] ) }
; .mov_ptn 0'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 1'(= a2◂ [ *{ rr{| l |}}] )
	mov rax,r13
	mov r14,rax
; .mov_ptn 2'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 0'(= a2◂ [ *{ rr{| l |}}] )
	mov rax,r8
	mov r13,rax
	call LB_1985
;; rsp=0 , %1146~0'(= a2◂ [ *{ rr{| l |}}] ) 
; #197 0'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 1(<2)◂0'(= a2◂ [ *{ rr{| l |}}] )
;; rsp=0 , %1147~1(<2)◂0'(= a2◂ [ *{ rr{| l |}}] ) 
; ∎ 1(<2)◂0'(= a2◂ [ *{ rr{| l |}}] )
; .mov_ptn2 1(<2)◂0'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 0'(= a44◂ [ *{ a2◂ [ *{ {| l |}a17◂ [ a22◂ [ {| l |}]]a3◂ [ a32◂ [ ]]a26◂ [ a18◂ [ ]{| l |}]}]a26◂ [ a18◂ [ ]{| l |}]}] )
	mov r14,r13
; .mov_ptn 1(<2)◂1'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 0'(= a44◂ [ *{ a2◂ [ *{ {| l |}a17◂ [ a22◂ [ {| l |}]]a3◂ [ a32◂ [ ]]a26◂ [ a18◂ [ ]{| l |}]}]a26◂ [ a18◂ [ ]{| l |}]}] )
	mov rax,r14
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],1
	mov QWORD [rax+8],rdi
	mov r13,rax
	ret
ETR_248:
	mov r9,0x0000_ffff_ffff_ffff
	and r9,[r13]
	call GRM_248
	ret
GRM_248:
	PUSH_GRM
	jmp LB_3800
LB_3799:
	add r14,1 
LB_3800:
	cmp r14,r9
	jge LB_3801
	JZ_SPC BYTE [r13+8+r14], LB_3799
LB_3801
	call GRM_221
	cmp BYTE [r8+6],0
	jnz LB_3804
	jmp LB_3805
LB_3804:
	jmp LB_3802
LB_3805:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a44◂ [ *{ }] ) ⊢ 8'(= a44◂ [ *{ }] )
; .mov_ptn 2'(= a44◂ [ *{ }] ) ⊢ 8'(= a44◂ [ *{ }] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_3803
LB_3802:
	add rsp,0
	jmp LB_3798
LB_3803:
	jmp LB_3807
LB_3806:
	add r14,1 
LB_3807:
	cmp r14,r9
	jge LB_3808
	JZ_SPC BYTE [r13+8+r14], LB_3806
LB_3808
	call GRM_249
	cmp BYTE [r8+6],0
	jnz LB_3811
	jmp LB_3812
LB_3811:
	jmp LB_3809
LB_3812:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a44◂ [ a40◂ [ ]] ) ⊢ 9'(= a44◂ [ a40◂ [ ]] )
; .mov_ptn 2'(= a44◂ [ a40◂ [ ]] ) ⊢ 9'(= a44◂ [ a40◂ [ ]] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_3810
LB_3809:
	add rsp,8
	jmp LB_3798
LB_3810:
	jmp LB_3814
LB_3813:
	add r14,1 
LB_3814:
	cmp r14,r9
	jge LB_3815
	JZ_SPC BYTE [r13+8+r14], LB_3813
LB_3815
	call GRM_248
	cmp BYTE [r8+6],0
	jnz LB_3818
	jmp LB_3819
LB_3818:
	jmp LB_3816
LB_3819:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a44◂ [ a2◂ [ a40◂ [ ]]] ) ⊢ 10'(= a44◂ [ a2◂ [ a40◂ [ ]]] )
; .mov_ptn 2'(= a44◂ [ a2◂ [ a40◂ [ ]]] ) ⊢ 10'(= a44◂ [ a2◂ [ a40◂ [ ]]] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_3817
LB_3816:
	add rsp,16
	jmp LB_3798
LB_3817:
	mov QWORD [rsp+8*3],r14
	mov r13,QWORD [rsp+16+8*3]
	mov r14,QWORD [rsp+8*3]
	jmp LB_3820
LB_3820
;; rsp=3 , %2128~1'(= r ) %2127~0'(= r ) %2126~10'(= a44◂ [ a2◂ [ a40◂ [ ]]] ) %2125~9'(= a44◂ [ a40◂ [ ]] ) %2124~8'(= a44◂ [ *{ }] ) 
; #199 { 9'(= a44◂ [ a40◂ [ ]] ) 10'(= a44◂ [ a2◂ [ a40◂ [ ]]] ) } ⊢ 2'(= a44◂ [ *{ a40◂ [ ]a2◂ [ a40◂ [ ]]}] )
	sub rsp,16
	mov QWORD [rsp+8*0],r13
	mov QWORD [rsp+8*1],r14
; .mov_ptn2 { 9'(= a44◂ [ a40◂ [ ]] ) 10'(= a44◂ [ a2◂ [ a40◂ [ ]]] ) } ⊢ { 0'(= a44◂ [ a40◂ [ ]] ) 1'(= a44◂ [ a2◂ [ a40◂ [ ]]] ) }
; .mov_ptn 10'(= a44◂ [ a2◂ [ a40◂ [ ]]] ) ⊢ 1'(= a44◂ [ a2◂ [ a40◂ [ ]]] )
	mov rax,QWORD [rsp-8+8*3]
	mov r14,rax
; .mov_ptn 9'(= a44◂ [ a40◂ [ ]] ) ⊢ 0'(= a44◂ [ a40◂ [ ]] )
	mov rax,QWORD [rsp-8+8*4]
	mov r13,rax
	call LB_3822
	mov r14,QWORD [rsp-8+8*2]
	mov r8,r13
	mov r13,QWORD [rsp-8+8*1]
	add rsp,32
;; rsp=1 , %2129~2'(= a44◂ [ *{ a40◂ [ ]a2◂ [ a40◂ [ ]]}] ) %2128~1'(= r ) %2127~0'(= r ) %2124~8'(= a44◂ [ *{ }] ) 
;; ? 2'(= a44◂ [ *{ a40◂ [ ]a2◂ [ a40◂ [ ]]}] ) ⊢ 0(<2)◂{ 3'(= a40◂ [ ] ) 4'(= a2◂ [ a40◂ [ ]] ) }
	mov rdi,r8
	cmp BYTE [rdi+6],0
	jnz LB_3888
	jmp LB_3889
LB_3888:
	jmp LB_3887
LB_3889:
	mov r9, QWORD [r8+8]
	mov r10, QWORD [r8+16]
	mov QWORD [GBG_VCT+8*0],r8
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_RCD 2,rdi
;; rsp=1 , %2132~4'(= a2◂ [ a40◂ [ ]] ) %2131~3'(= a40◂ [ ] ) %2128~1'(= r ) %2127~0'(= r ) %2124~8'(= a44◂ [ *{ }] ) 
; #23 { 3'(= a40◂ [ ] ) 4'(= a2◂ [ a40◂ [ ]] ) } ⊢ 0(<2)◂{ 3'(= a40◂ [ ] ) 4'(= a2◂ [ a40◂ [ ]] ) }
;; rsp=1 , %2133~0(<2)◂{ 3'(= a40◂ [ ] ) 4'(= a2◂ [ a40◂ [ ]] ) } %2128~1'(= r ) %2127~0'(= r ) %2124~8'(= a44◂ [ *{ }] ) 
; #198 0(<2)◂{ 3'(= a40◂ [ ] ) 4'(= a2◂ [ a40◂ [ ]] ) } ⊢ 0(<2)◂0(<2)◂{ 3'(= a40◂ [ ] ) 4'(= a2◂ [ a40◂ [ ]] ) }
;; rsp=1 , %2134~0(<2)◂0(<2)◂{ 3'(= a40◂ [ ] ) 4'(= a2◂ [ a40◂ [ ]] ) } %2128~1'(= r ) %2127~0'(= r ) %2124~8'(= a44◂ [ *{ }] ) 
; #24 0(<2)◂0(<2)◂{ 3'(= a40◂ [ ] ) 4'(= a2◂ [ a40◂ [ ]] ) } ⊢ 0(<2)◂0(<2)◂0(<2)◂{ 3'(= a40◂ [ ] ) 4'(= a2◂ [ a40◂ [ ]] ) }
;; rsp=1 , %2135~0(<2)◂0(<2)◂0(<2)◂{ 3'(= a40◂ [ ] ) 4'(= a2◂ [ a40◂ [ ]] ) } %2128~1'(= r ) %2127~0'(= r ) %2124~8'(= a44◂ [ *{ }] ) 
; ∎ 0(<2)◂0(<2)◂0(<2)◂{ 3'(= a40◂ [ ] ) 4'(= a2◂ [ a40◂ [ ]] ) }
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 8'(= a44◂ [ *{ }] )
	mov rdi,QWORD [rsp-8+8*1]
	C_PUSH_REGS
	mov r8,rdi
	call LB_1876
	C_POP_REGS
; .mov_ptn2 0(<2)◂0(<2)◂0(<2)◂{ 3'(= a40◂ [ ] ) 4'(= a2◂ [ a40◂ [ ]] ) } ⊢ 2'(= a3◂ [ a44◂ [ a2◂ [ a40◂ [ ]]]] )
; .mov_ptn 0(<2)◂0(<2)◂0(<2)◂{ 3'(= a40◂ [ ] ) 4'(= a2◂ [ a40◂ [ ]] ) } ⊢ 2'(= a3◂ [ a44◂ [ a2◂ [ a40◂ [ ]]]] )
	ALC_RCD 2, rax
	mov r13,rax
	mov rax,r9
	mov QWORD [r13+8+8*0],rax
	mov rax,r10
	mov QWORD [r13+8+8*1],rax
	mov rax,r13
	mov BYTE [rax+6],0
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,8
	jmp LB_3821
LB_3887:
;; ?. 2'(= a44◂ [ *{ a40◂ [ ]a2◂ [ a40◂ [ ]]}] ) ⊢ 1(<2)◂3'(= a2◂ [ *{ rr{| l |}}] )
	mov QWORD [GBG_VCT+8*0],rdi
	mov r9,QWORD [rdi+8]
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_LN rdi
;; rsp=1 , %2130~3'(= a2◂ [ *{ rr{| l |}}] ) %2128~1'(= r ) %2127~0'(= r ) %2124~8'(= a44◂ [ *{ }] ) 
; #197 3'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 1(<2)◂3'(= a2◂ [ *{ rr{| l |}}] )
;; rsp=1 , %2136~1(<2)◂3'(= a2◂ [ *{ rr{| l |}}] ) %2128~1'(= r ) %2127~0'(= r ) %2124~8'(= a44◂ [ *{ }] ) 
; #24 1(<2)◂3'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 0(<2)◂1(<2)◂3'(= a2◂ [ *{ rr{| l |}}] )
;; rsp=1 , %2137~0(<2)◂1(<2)◂3'(= a2◂ [ *{ rr{| l |}}] ) %2128~1'(= r ) %2127~0'(= r ) %2124~8'(= a44◂ [ *{ }] ) 
; ∎ 0(<2)◂1(<2)◂3'(= a2◂ [ *{ rr{| l |}}] )
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 8'(= a44◂ [ *{ }] )
	mov rdi,QWORD [rsp-8+8*1]
	C_PUSH_REGS
	mov r8,rdi
	call LB_1876
	C_POP_REGS
; .mov_ptn2 0(<2)◂1(<2)◂3'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 2'(= a3◂ [ a44◂ [ a2◂ [ a40◂ [ ]]]] )
; .mov_ptn 0(<2)◂1(<2)◂3'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 2'(= a3◂ [ a44◂ [ a2◂ [ a40◂ [ ]]]] )
	mov rax,r9
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],1
	mov QWORD [rax+8],rdi
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,8
	jmp LB_3821
LB_3821:
	cmp BYTE [r8+6],0
	jnz LB_3798
	POP_GRM_SCC
	ret
LB_3798:
	RB_GRM
	jmp LB_3892
LB_3891:
	add r14,1 
LB_3892:
	cmp r14,r9
	jge LB_3893
	JZ_SPC BYTE [r13+8+r14], LB_3891
LB_3893
	call GRM_221
	cmp BYTE [r8+6],0
	jnz LB_3896
	jmp LB_3897
LB_3896:
	jmp LB_3894
LB_3897:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a44◂ [ *{ }] ) ⊢ 8'(= a44◂ [ *{ }] )
; .mov_ptn 2'(= a44◂ [ *{ }] ) ⊢ 8'(= a44◂ [ *{ }] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_3895
LB_3894:
	add rsp,0
	jmp LB_3890
LB_3895:
	PUSH_GRM
	jmp LB_3901
LB_3900:
	add r14,1 
LB_3901:
	cmp r14,r9
	jge LB_3902
	JZ_SPC BYTE [r13+8+r14], LB_3900
LB_3902
	cmp r14,r9
	jge LB_3905
	jmp LB_3906
LB_3905:
	mov r8,unt_1 
	jmp LB_3903
LB_3906:
	movzx rdi,BYTE [r13+8+r14]
	push rdi 
	add r14,1 
	jmp LB_3904
LB_3903:
	add rsp,0
	jmp LB_3899
LB_3904:
	mov QWORD [rsp+8*1],r14
	mov r13,QWORD [rsp+16+8*1]
	mov r14,QWORD [rsp+8*1]
	jmp LB_3907
LB_3907
;; rsp=1 , %2143~1'(= r ) %2142~0'(= r ) %2141~8'(= r ) 
; $ %[ "file end" ] ⊢ %[ "file end" ]
;; rsp=1 , %2144~%[ "file end" ] %2143~1'(= r ) %2142~0'(= r ) %2141~8'(= r ) 
; #10 %[ "file end" ] ⊢ %[ "file end" ]
	mov rdi,fmt_emt
	call emt_stg
	mov rdi,LB_3909
	call emt_stg 
	mov rdi,fmt_nl
	call emt_stg
	jmp LB_3910
LB_3910:
;; rsp=1 , %2145~%[ "file end" ] %2143~1'(= r ) %2142~0'(= r ) %2141~8'(= r ) 
; #25 { } ⊢ 1(<2)◂{ }
;; rsp=1 , %2146~1(<2)◂{ } %2145~%[ "file end" ] %2143~1'(= r ) %2142~0'(= r ) %2141~8'(= r ) 
; ∎ 1(<2)◂{ }
; .dlt.ptn %[ "file end" ]
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 8'(= r )
	mov rdi,QWORD [rsp-8+8*1]
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 1(<2)◂{ } ⊢ 2'(= a3◂ [ *{ }] )
; .mov_ptn 1(<2)◂{ } ⊢ 2'(= a3◂ [ *{ }] )
	mov rax,unt 
	mov rax,unt_1
	mov r8,rax
	add rsp,8
	jmp LB_3908
LB_3908:
	cmp BYTE [r8+6],0
	jnz LB_3899
	POP_GRM_SCC
	jmp LB_3898
LB_3899:
	RB_GRM
	mov QWORD [rsp+8*0],r14
	mov r13,QWORD [rsp+16+8*0]
	mov r14,QWORD [rsp+8*0]
	jmp LB_3912
LB_3912
;; rsp=0 , %2148~1'(= r ) %2147~0'(= r ) 
; $ %[ "file end nl" ] ⊢ %[ "file end nl" ]
;; rsp=0 , %2149~%[ "file end nl" ] %2148~1'(= r ) %2147~0'(= r ) 
; #10 %[ "file end nl" ] ⊢ %[ "file end nl" ]
	mov rdi,fmt_emt
	call emt_stg
	mov rdi,LB_3914
	call emt_stg 
	mov rdi,fmt_nl
	call emt_stg
	jmp LB_3915
LB_3915:
;; rsp=0 , %2150~%[ "file end nl" ] %2148~1'(= r ) %2147~0'(= r ) 
; #24 { } ⊢ 0(<2)◂{ }
;; rsp=0 , %2151~0(<2)◂{ } %2150~%[ "file end nl" ] %2148~1'(= r ) %2147~0'(= r ) 
; ∎ 0(<2)◂{ }
; .dlt.ptn %[ "file end nl" ]
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂{ } ⊢ 2'(= a3◂ [ *{ }] )
; .mov_ptn 0(<2)◂{ } ⊢ 2'(= a3◂ [ *{ }] )
	mov rax,unt 
	mov rax,unt_0
	mov r8,rax
	jmp LB_3913
LB_3913:
	cmp BYTE [r8+6],0
	jnz LB_3911
	POP_GRM_SCC
	jmp LB_3898
LB_3911:
	POP_GRM_FAIL 
	jmp LB_3898
LB_3898:
	cmp BYTE [r8+6],0
	jnz LB_3916
	jmp LB_3917
LB_3916:
	add rsp,8
	POP_GRM_FAIL
	ret
LB_3917:
	mov QWORD [rsp+8*1],r14
; .mov_ptn2 2'(= *{ } ) ⊢ { }
; .mov_ptn 2'(= *{ } ) ⊢ { }
	mov r13,QWORD [rsp+16+8*1]
	mov r14,QWORD [rsp+8*1]
	jmp LB_3918
LB_3918
;; rsp=1 , %2152~{ } %2140~1'(= r ) %2139~0'(= r ) %2138~8'(= a44◂ [ *{ }] ) 
; #22 { } ⊢ 1(<2)◂{ }
;; rsp=1 , %2153~1(<2)◂{ } %2152~{ } %2140~1'(= r ) %2139~0'(= r ) %2138~8'(= a44◂ [ *{ }] ) 
; #198 1(<2)◂{ } ⊢ 0(<2)◂1(<2)◂{ }
;; rsp=1 , %2154~0(<2)◂1(<2)◂{ } %2152~{ } %2140~1'(= r ) %2139~0'(= r ) %2138~8'(= a44◂ [ *{ }] ) 
; #24 0(<2)◂1(<2)◂{ } ⊢ 0(<2)◂0(<2)◂1(<2)◂{ }
;; rsp=1 , %2155~0(<2)◂0(<2)◂1(<2)◂{ } %2152~{ } %2140~1'(= r ) %2139~0'(= r ) %2138~8'(= a44◂ [ *{ }] ) 
; ∎ 0(<2)◂0(<2)◂1(<2)◂{ }
; .dlt.ptn { }
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 8'(= a44◂ [ *{ }] )
	mov rdi,QWORD [rsp-8+8*1]
	C_PUSH_REGS
	mov r8,rdi
	call LB_1876
	C_POP_REGS
; .mov_ptn2 0(<2)◂0(<2)◂1(<2)◂{ } ⊢ 2'(= a3◂ [ a44◂ [ a2◂ [ a40◂ [ ]]]] )
; .mov_ptn 0(<2)◂0(<2)◂1(<2)◂{ } ⊢ 2'(= a3◂ [ a44◂ [ a2◂ [ a40◂ [ ]]]] )
	mov rax,unt 
	mov rax,unt_1
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,8
	jmp LB_3919
LB_3919:
	cmp BYTE [r8+6],0
	jnz LB_3890
	POP_GRM_SCC
	ret
LB_3890:
	POP_GRM_FAIL 
	ret
ETR_249:
	mov r9,0x0000_ffff_ffff_ffff
	and r9,[r13]
	call GRM_249
	ret
GRM_249:
	PUSH_GRM
	jmp LB_3922
LB_3921:
	add r14,1 
LB_3922:
	cmp r14,r9
	jge LB_3923
	JZ_SPC BYTE [r13+8+r14], LB_3921
LB_3923
	lea rax,[r14+7]
	cmp rax,r9
	jg LB_3926
	jmp LB_3927
LB_3926:
	mov r8,unt_1
	jmp LB_3924
LB_3927:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],194
	jnz LB_3928
	cmp BYTE [rdi+1],167
	jnz LB_3928
	cmp BYTE [rdi+2],194
	jnz LB_3928
	cmp BYTE [rdi+3],167
	jnz LB_3928
	cmp BYTE [rdi+4],43
	jnz LB_3928
	cmp BYTE [rdi+5],115
	jnz LB_3928
	cmp BYTE [rdi+6],56
	jnz LB_3928
	jmp LB_3929
LB_3928:
	mov r8,unt_1
	jmp LB_3924
LB_3929:
	add r14,7
	jmp LB_3925
LB_3924:
	add rsp,0
	jmp LB_3920
LB_3925:
	PUSH_GRM
	jmp LB_3933
LB_3932:
	add r14,1 
LB_3933:
	cmp r14,r9
	jge LB_3934
	JZ_SPC BYTE [r13+8+r14], LB_3932
LB_3934
	call GRM_264
	cmp BYTE [r8+6],0
	jnz LB_3937
	jmp LB_3938
LB_3937:
	jmp LB_3935
LB_3938:
	sub rsp,16
; .mov_ptn2 2'(= *{ {| l |}a33◂ [ a18◂ [ ]{| l |}]} ) ⊢ { 8'(= {| l |} ) 9'(= a33◂ [ a18◂ [ ]{| l |}] ) }
; .mov_ptn 2'(= *{ {| l |}a33◂ [ a18◂ [ ]{| l |}]} ) ⊢ { 8'(= {| l |} ) 9'(= a33◂ [ a18◂ [ ]{| l |}] ) }
	mov r10, QWORD [r8+8]
	mov QWORD [rsp-8+8*2],r10
	mov r11, QWORD [r8+16]
	mov QWORD [rsp-8+8*1],r11
	mov rdi,r8
	FREE_RCD 2,rdi
	jmp LB_3936
LB_3935:
	add rsp,0
	jmp LB_3931
LB_3936:
	jmp LB_3940
LB_3939:
	add r14,1 
LB_3940:
	cmp r14,r9
	jge LB_3941
	JZ_SPC BYTE [r13+8+r14], LB_3939
LB_3941
	call GRM_265
	cmp BYTE [r8+6],0
	jnz LB_3944
	jmp LB_3945
LB_3944:
	jmp LB_3942
LB_3945:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a2◂ [ *{ {| l |}a33◂ [ a18◂ [ ]{| l |}]}] ) ⊢ 10'(= a2◂ [ *{ {| l |}a33◂ [ a18◂ [ ]{| l |}]}] )
; .mov_ptn 2'(= a2◂ [ *{ {| l |}a33◂ [ a18◂ [ ]{| l |}]}] ) ⊢ 10'(= a2◂ [ *{ {| l |}a33◂ [ a18◂ [ ]{| l |}]}] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_3943
LB_3942:
	add rsp,16
	jmp LB_3931
LB_3943:
	mov QWORD [rsp+8*3],r14
	mov r13,QWORD [rsp+16+8*3]
	mov r14,QWORD [rsp+8*3]
	jmp LB_3946
LB_3946
;; rsp=3 , %2161~1'(= r ) %2160~0'(= r ) %2159~10'(= a2◂ [ *{ {| l |}a33◂ [ a18◂ [ ]{| l |}]}] ) %2158~{ 8'(= {| l |} ) 9'(= a33◂ [ a18◂ [ ]{| l |}] ) } 
; #23 { { 8'(= {| l |} ) 9'(= a33◂ [ a18◂ [ ]{| l |}] ) } 10'(= a2◂ [ *{ {| l |}a33◂ [ a18◂ [ ]{| l |}]}] ) } ⊢ 0(<2)◂{ { 8'(= {| l |} ) 9'(= a33◂ [ a18◂ [ ]{| l |}] ) } 10'(= a2◂ [ *{ {| l |}a33◂ [ a18◂ [ ]{| l |}]}] ) }
;; rsp=3 , %2162~0(<2)◂{ { 8'(= {| l |} ) 9'(= a33◂ [ a18◂ [ ]{| l |}] ) } 10'(= a2◂ [ *{ {| l |}a33◂ [ a18◂ [ ]{| l |}]}] ) } %2161~1'(= r ) %2160~0'(= r ) 
; #180 0(<2)◂{ { 8'(= {| l |} ) 9'(= a33◂ [ a18◂ [ ]{| l |}] ) } 10'(= a2◂ [ *{ {| l |}a33◂ [ a18◂ [ ]{| l |}]}] ) } ⊢ 1(<6)◂0(<2)◂{ { 8'(= {| l |} ) 9'(= a33◂ [ a18◂ [ ]{| l |}] ) } 10'(= a2◂ [ *{ {| l |}a33◂ [ a18◂ [ ]{| l |}]}] ) }
;; rsp=3 , %2163~1(<6)◂0(<2)◂{ { 8'(= {| l |} ) 9'(= a33◂ [ a18◂ [ ]{| l |}] ) } 10'(= a2◂ [ *{ {| l |}a33◂ [ a18◂ [ ]{| l |}]}] ) } %2161~1'(= r ) %2160~0'(= r ) 
; #198 1(<6)◂0(<2)◂{ { 8'(= {| l |} ) 9'(= a33◂ [ a18◂ [ ]{| l |}] ) } 10'(= a2◂ [ *{ {| l |}a33◂ [ a18◂ [ ]{| l |}]}] ) } ⊢ 0(<2)◂1(<6)◂0(<2)◂{ { 8'(= {| l |} ) 9'(= a33◂ [ a18◂ [ ]{| l |}] ) } 10'(= a2◂ [ *{ {| l |}a33◂ [ a18◂ [ ]{| l |}]}] ) }
;; rsp=3 , %2164~0(<2)◂1(<6)◂0(<2)◂{ { 8'(= {| l |} ) 9'(= a33◂ [ a18◂ [ ]{| l |}] ) } 10'(= a2◂ [ *{ {| l |}a33◂ [ a18◂ [ ]{| l |}]}] ) } %2161~1'(= r ) %2160~0'(= r ) 
; #24 0(<2)◂1(<6)◂0(<2)◂{ { 8'(= {| l |} ) 9'(= a33◂ [ a18◂ [ ]{| l |}] ) } 10'(= a2◂ [ *{ {| l |}a33◂ [ a18◂ [ ]{| l |}]}] ) } ⊢ 0(<2)◂0(<2)◂1(<6)◂0(<2)◂{ { 8'(= {| l |} ) 9'(= a33◂ [ a18◂ [ ]{| l |}] ) } 10'(= a2◂ [ *{ {| l |}a33◂ [ a18◂ [ ]{| l |}]}] ) }
;; rsp=3 , %2165~0(<2)◂0(<2)◂1(<6)◂0(<2)◂{ { 8'(= {| l |} ) 9'(= a33◂ [ a18◂ [ ]{| l |}] ) } 10'(= a2◂ [ *{ {| l |}a33◂ [ a18◂ [ ]{| l |}]}] ) } %2161~1'(= r ) %2160~0'(= r ) 
; ∎ 0(<2)◂0(<2)◂1(<6)◂0(<2)◂{ { 8'(= {| l |} ) 9'(= a33◂ [ a18◂ [ ]{| l |}] ) } 10'(= a2◂ [ *{ {| l |}a33◂ [ a18◂ [ ]{| l |}]}] ) }
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂0(<2)◂1(<6)◂0(<2)◂{ { 8'(= {| l |} ) 9'(= a33◂ [ a18◂ [ ]{| l |}] ) } 10'(= a2◂ [ *{ {| l |}a33◂ [ a18◂ [ ]{| l |}]}] ) } ⊢ 2'(= a3◂ [ a44◂ [ a40◂ [ ]]] )
; .mov_ptn 0(<2)◂0(<2)◂1(<6)◂0(<2)◂{ { 8'(= {| l |} ) 9'(= a33◂ [ a18◂ [ ]{| l |}] ) } 10'(= a2◂ [ *{ {| l |}a33◂ [ a18◂ [ ]{| l |}]}] ) } ⊢ 2'(= a3◂ [ a44◂ [ a40◂ [ ]]] )
	ALC_RCD 2, rax
	mov r13,rax
	ALC_RCD 2, rax
	mov r14,rax
	mov rax,QWORD [rsp-8+8*3]
	mov QWORD [r14+8+8*0],rax
	mov rax,QWORD [rsp-8+8*2]
	mov QWORD [r14+8+8*1],rax
	mov rax,r14
	mov QWORD [r13+8+8*0],rax
	mov rax,QWORD [rsp-8+8*1]
	mov QWORD [r13+8+8*1],rax
	mov rax,r13
	mov BYTE [rax+6],0
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],1
	mov QWORD [rax+8],rdi
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,24
	jmp LB_3947
LB_3947:
	cmp BYTE [r8+6],0
	jnz LB_3931
	POP_GRM_SCC
	jmp LB_3930
LB_3931:
	RB_GRM
	jmp LB_3950
LB_3949:
	add r14,1 
LB_3950:
	cmp r14,r9
	jge LB_3951
	JZ_SPC BYTE [r13+8+r14], LB_3949
LB_3951
	call GRM_250
	cmp BYTE [r8+6],0
	jnz LB_3954
	jmp LB_3955
LB_3954:
	jmp LB_3952
LB_3955:
; .mov_ptn2 2'(= *{ } ) ⊢ { }
; .mov_ptn 2'(= *{ } ) ⊢ { }
	jmp LB_3953
LB_3952:
	add rsp,0
	jmp LB_3948
LB_3953:
	mov QWORD [rsp+8*0],r14
	mov r13,QWORD [rsp+16+8*0]
	mov r14,QWORD [rsp+8*0]
	jmp LB_3956
LB_3956
;; rsp=0 , %2168~1'(= r ) %2167~0'(= r ) %2166~{ } 
; #22 { } ⊢ 1(<2)◂{ }
;; rsp=0 , %2169~1(<2)◂{ } %2168~1'(= r ) %2167~0'(= r ) %2166~{ } 
; $ %[ "grb_etr 1" ] ⊢ %[ "grb_etr 1" ]
;; rsp=0 , %2170~%[ "grb_etr 1" ] %2169~1(<2)◂{ } %2168~1'(= r ) %2167~0'(= r ) %2166~{ } 
; #23 { { 0'(= r ) 1'(= r ) %[ "grb_etr 1" ] } 1(<2)◂{ } } ⊢ 0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "grb_etr 1" ] } 1(<2)◂{ } }
;; rsp=0 , %2171~0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "grb_etr 1" ] } 1(<2)◂{ } } %2166~{ } 
; #197 0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "grb_etr 1" ] } 1(<2)◂{ } } ⊢ 1(<2)◂0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "grb_etr 1" ] } 1(<2)◂{ } }
;; rsp=0 , %2172~1(<2)◂0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "grb_etr 1" ] } 1(<2)◂{ } } %2166~{ } 
; #24 1(<2)◂0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "grb_etr 1" ] } 1(<2)◂{ } } ⊢ 0(<2)◂1(<2)◂0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "grb_etr 1" ] } 1(<2)◂{ } }
;; rsp=0 , %2173~0(<2)◂1(<2)◂0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "grb_etr 1" ] } 1(<2)◂{ } } %2166~{ } 
; ∎ 0(<2)◂1(<2)◂0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "grb_etr 1" ] } 1(<2)◂{ } }
; .dlt.ptn { }
; .mov_ptn2 0(<2)◂1(<2)◂0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "grb_etr 1" ] } 1(<2)◂{ } } ⊢ 2'(= a3◂ [ a44◂ [ a40◂ [ ]]] )
; .mov_ptn 0(<2)◂1(<2)◂0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "grb_etr 1" ] } 1(<2)◂{ } } ⊢ 2'(= a3◂ [ a44◂ [ a40◂ [ ]]] )
	ALC_RCD 2, rax
	mov r9,rax
	ALC_RCD 3, rax
	mov r10,rax
	mov rax,r13
	mov QWORD [r10+8+8*0],rax
	mov rax,r14
	mov QWORD [r10+8+8*1],rax
	mov rsi,1  
	mov rdi,24
	xor rax,rax 
	C_CALL_SF calloc
	mov QWORD [rax],9
	mov BYTE [rax+8+0],103
	mov BYTE [rax+8+1],114
	mov BYTE [rax+8+2],98
	mov BYTE [rax+8+3],95
	mov BYTE [rax+8+4],101
	mov BYTE [rax+8+5],116
	mov BYTE [rax+8+6],114
	mov BYTE [rax+8+7],32
	mov BYTE [rax+8+8],49
	mov QWORD [r10+8+8*2],rax
	mov rax,r10
	mov QWORD [r9+8+8*0],rax
	mov rax,unt 
	mov rax,unt_1
	mov QWORD [r9+8+8*1],rax
	mov rax,r9
	mov BYTE [rax+6],0
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],1
	mov QWORD [rax+8],rdi
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	jmp LB_3957
LB_3957:
	cmp BYTE [r8+6],0
	jnz LB_3948
	POP_GRM_SCC
	jmp LB_3930
LB_3948:
	POP_GRM_FAIL 
	jmp LB_3930
LB_3930:
	cmp BYTE [r8+6],0
	jnz LB_3958
	jmp LB_3959
LB_3958:
	add rsp,0
	POP_GRM_FAIL
	ret
LB_3959:
	mov QWORD [rsp+8*0],r14
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi 
; .mov_ptn2 2'(= a44◂ [ a40◂ [ ]] ) ⊢ 3'(= a44◂ [ a40◂ [ ]] )
	mov r10,r9
; .mov_ptn 2'(= a44◂ [ a40◂ [ ]] ) ⊢ 3'(= a44◂ [ a40◂ [ ]] )
	mov rax,r8
	mov r9,rax
	mov r13,QWORD [rsp+16+8*0]
	mov r14,QWORD [rsp+8*0]
	jmp LB_3960
LB_3960
;; rsp=0 , %2174~3'(= a44◂ [ a40◂ [ ]] ) %2157~1'(= r ) %2156~0'(= r ) 
; #24 3'(= a44◂ [ a40◂ [ ]] ) ⊢ 0(<2)◂3'(= a44◂ [ a40◂ [ ]] )
;; rsp=0 , %2175~0(<2)◂3'(= a44◂ [ a40◂ [ ]] ) %2157~1'(= r ) %2156~0'(= r ) 
; ∎ 0(<2)◂3'(= a44◂ [ a40◂ [ ]] )
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂3'(= a44◂ [ a40◂ [ ]] ) ⊢ 2'(= a3◂ [ a44◂ [ a40◂ [ ]]] )
; .mov_ptn 0(<2)◂3'(= a44◂ [ a40◂ [ ]] ) ⊢ 2'(= a3◂ [ a44◂ [ a40◂ [ ]]] )
	mov rax,r9
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	jmp LB_3961
LB_3961:
	cmp BYTE [r8+6],0
	jnz LB_3920
	POP_GRM_SCC
	ret
LB_3920:
	RB_GRM
	jmp LB_3964
LB_3963:
	add r14,1 
LB_3964:
	cmp r14,r9
	jge LB_3965
	JZ_SPC BYTE [r13+8+r14], LB_3963
LB_3965
	call GRM_221
	cmp BYTE [r8+6],0
	jnz LB_3968
	jmp LB_3969
LB_3968:
	jmp LB_3966
LB_3969:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a44◂ [ *{ }] ) ⊢ 8'(= a44◂ [ *{ }] )
; .mov_ptn 2'(= a44◂ [ *{ }] ) ⊢ 8'(= a44◂ [ *{ }] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_3967
LB_3966:
	add rsp,0
	jmp LB_3962
LB_3967:
	jmp LB_3971
LB_3970:
	add r14,1 
LB_3971:
	cmp r14,r9
	jge LB_3972
	JZ_SPC BYTE [r13+8+r14], LB_3970
LB_3972
	lea rax,[r14+4]
	cmp rax,r9
	jg LB_3975
	jmp LB_3976
LB_3975:
	mov r8,unt_1
	jmp LB_3973
LB_3976:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],194
	jnz LB_3977
	cmp BYTE [rdi+1],167
	jnz LB_3977
	cmp BYTE [rdi+2],194
	jnz LB_3977
	cmp BYTE [rdi+3],167
	jnz LB_3977
	jmp LB_3978
LB_3977:
	mov r8,unt_1
	jmp LB_3973
LB_3978:
	add r14,4
	jmp LB_3974
LB_3973:
	add rsp,8
	jmp LB_3962
LB_3974:
	PUSH_GRM
	jmp LB_3982
LB_3981:
	add r14,1 
LB_3982:
	cmp r14,r9
	jge LB_3983
	JZ_SPC BYTE [r13+8+r14], LB_3981
LB_3983
	call GRM_79
	cmp BYTE [r8+6],0
	jnz LB_3986
	jmp LB_3987
LB_3986:
	jmp LB_3984
LB_3987:
	sub rsp,8
; .mov_ptn2 2'(= {| l |} ) ⊢ 8'(= {| l |} )
; .mov_ptn 2'(= {| l |} ) ⊢ 8'(= {| l |} )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_3985
LB_3984:
	add rsp,0
	jmp LB_3980
LB_3985:
	jmp LB_3989
LB_3988:
	add r14,1 
LB_3989:
	cmp r14,r9
	jge LB_3990
	JZ_SPC BYTE [r13+8+r14], LB_3988
LB_3990
	call GRM_252
	cmp BYTE [r8+6],0
	jnz LB_3993
	jmp LB_3994
LB_3993:
	jmp LB_3991
LB_3994:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a44◂ [ a41◂ [ ]] ) ⊢ 9'(= a44◂ [ a41◂ [ ]] )
; .mov_ptn 2'(= a44◂ [ a41◂ [ ]] ) ⊢ 9'(= a44◂ [ a41◂ [ ]] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_3992
LB_3991:
	add rsp,8
	jmp LB_3980
LB_3992:
	mov QWORD [rsp+8*2],r14
	mov r13,QWORD [rsp+16+8*2]
	mov r14,QWORD [rsp+8*2]
	jmp LB_3995
LB_3995
;; rsp=2 , %2182~1'(= r ) %2181~0'(= r ) %2180~9'(= a44◂ [ a41◂ [ ]] ) %2179~8'(= {| l |} ) 
;; ? 9'(= a44◂ [ a41◂ [ ]] ) ⊢ 0(<2)◂2'(= a41◂ [ ] )
	mov rdi,QWORD [rsp-8+8*1]
	cmp BYTE [rdi+6],0
	jnz LB_3998
	jmp LB_3999
LB_3998:
	jmp LB_3997
LB_3999:
	mov QWORD [GBG_VCT+8*0],rdi
	mov r8,QWORD [rdi+8]
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_LN rdi
;; rsp=2 , %2184~2'(= a41◂ [ ] ) %2182~1'(= r ) %2181~0'(= r ) %2179~8'(= {| l |} ) 
; #181 { 8'(= {| l |} ) 2'(= a41◂ [ ] ) } ⊢ 0(<6)◂{ 8'(= {| l |} ) 2'(= a41◂ [ ] ) }
;; rsp=2 , %2185~0(<6)◂{ 8'(= {| l |} ) 2'(= a41◂ [ ] ) } %2182~1'(= r ) %2181~0'(= r ) 
; #198 0(<6)◂{ 8'(= {| l |} ) 2'(= a41◂ [ ] ) } ⊢ 0(<2)◂0(<6)◂{ 8'(= {| l |} ) 2'(= a41◂ [ ] ) }
;; rsp=2 , %2186~0(<2)◂0(<6)◂{ 8'(= {| l |} ) 2'(= a41◂ [ ] ) } %2182~1'(= r ) %2181~0'(= r ) 
; #24 0(<2)◂0(<6)◂{ 8'(= {| l |} ) 2'(= a41◂ [ ] ) } ⊢ 0(<2)◂0(<2)◂0(<6)◂{ 8'(= {| l |} ) 2'(= a41◂ [ ] ) }
;; rsp=2 , %2187~0(<2)◂0(<2)◂0(<6)◂{ 8'(= {| l |} ) 2'(= a41◂ [ ] ) } %2182~1'(= r ) %2181~0'(= r ) 
; ∎ 0(<2)◂0(<2)◂0(<6)◂{ 8'(= {| l |} ) 2'(= a41◂ [ ] ) }
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂0(<2)◂0(<6)◂{ 8'(= {| l |} ) 2'(= a41◂ [ ] ) } ⊢ 2'(= a3◂ [ a44◂ [ a40◂ [ ]]] )
	mov r13,r8
; .mov_ptn 0(<2)◂0(<2)◂0(<6)◂{ 8'(= {| l |} ) 0'(= a41◂ [ ] ) } ⊢ 2'(= a3◂ [ a44◂ [ a40◂ [ ]]] )
	ALC_RCD 2, rax
	mov r14,rax
	mov rax,QWORD [rsp-8+8*2]
	mov QWORD [r14+8+8*0],rax
	mov rax,r13
	mov QWORD [r14+8+8*1],rax
	mov rax,r14
	mov BYTE [rax+6],0
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,16
	jmp LB_3996
LB_3997:
;; ?. 9'(= a44◂ [ a41◂ [ ]] ) ⊢ 1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] )
	mov QWORD [GBG_VCT+8*0],rdi
	mov r8,QWORD [rdi+8]
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_LN rdi
;; rsp=2 , %2183~2'(= a2◂ [ *{ rr{| l |}}] ) %2182~1'(= r ) %2181~0'(= r ) %2179~8'(= {| l |} ) 
; #197 2'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] )
;; rsp=2 , %2188~1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] ) %2182~1'(= r ) %2181~0'(= r ) %2179~8'(= {| l |} ) 
; #24 1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 0(<2)◂1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] )
;; rsp=2 , %2189~0(<2)◂1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] ) %2182~1'(= r ) %2181~0'(= r ) %2179~8'(= {| l |} ) 
; ∎ 0(<2)◂1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] )
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 8'(= {| l |} )
	mov rdi,QWORD [rsp-8+8*2]
	C_PUSH_REGS
	mov r8,rdi
	mov rdi,r8
	call free_s8
	C_POP_REGS
; .mov_ptn2 0(<2)◂1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 2'(= a3◂ [ a44◂ [ a40◂ [ ]]] )
	mov r13,r8
; .mov_ptn 0(<2)◂1(<2)◂0'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 2'(= a3◂ [ a44◂ [ a40◂ [ ]]] )
	mov rax,r13
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],1
	mov QWORD [rax+8],rdi
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,16
	jmp LB_3996
LB_3996:
	cmp BYTE [r8+6],0
	jnz LB_3980
	POP_GRM_SCC
	jmp LB_3979
LB_3980:
	RB_GRM
	jmp LB_4002
LB_4001:
	add r14,1 
LB_4002:
	cmp r14,r9
	jge LB_4003
	JZ_SPC BYTE [r13+8+r14], LB_4001
LB_4003
	call GRM_251
	cmp BYTE [r8+6],0
	jnz LB_4006
	jmp LB_4007
LB_4006:
	jmp LB_4004
LB_4007:
; .mov_ptn2 2'(= *{ } ) ⊢ { }
; .mov_ptn 2'(= *{ } ) ⊢ { }
	jmp LB_4005
LB_4004:
	add rsp,0
	jmp LB_4000
LB_4005:
	mov QWORD [rsp+8*0],r14
	mov r13,QWORD [rsp+16+8*0]
	mov r14,QWORD [rsp+8*0]
	jmp LB_4008
LB_4008
;; rsp=0 , %2192~1'(= r ) %2191~0'(= r ) %2190~{ } 
; #22 { } ⊢ 1(<2)◂{ }
;; rsp=0 , %2193~1(<2)◂{ } %2192~1'(= r ) %2191~0'(= r ) %2190~{ } 
; $ %[ "glb_etr 0.1" ] ⊢ %[ "glb_etr 0.1" ]
;; rsp=0 , %2194~%[ "glb_etr 0.1" ] %2193~1(<2)◂{ } %2192~1'(= r ) %2191~0'(= r ) %2190~{ } 
; #23 { { 0'(= r ) 1'(= r ) %[ "glb_etr 0.1" ] } 1(<2)◂{ } } ⊢ 0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "glb_etr 0.1" ] } 1(<2)◂{ } }
;; rsp=0 , %2195~0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "glb_etr 0.1" ] } 1(<2)◂{ } } %2190~{ } 
; #197 0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "glb_etr 0.1" ] } 1(<2)◂{ } } ⊢ 1(<2)◂0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "glb_etr 0.1" ] } 1(<2)◂{ } }
;; rsp=0 , %2196~1(<2)◂0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "glb_etr 0.1" ] } 1(<2)◂{ } } %2190~{ } 
; #24 1(<2)◂0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "glb_etr 0.1" ] } 1(<2)◂{ } } ⊢ 0(<2)◂1(<2)◂0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "glb_etr 0.1" ] } 1(<2)◂{ } }
;; rsp=0 , %2197~0(<2)◂1(<2)◂0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "glb_etr 0.1" ] } 1(<2)◂{ } } %2190~{ } 
; ∎ 0(<2)◂1(<2)◂0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "glb_etr 0.1" ] } 1(<2)◂{ } }
; .dlt.ptn { }
; .mov_ptn2 0(<2)◂1(<2)◂0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "glb_etr 0.1" ] } 1(<2)◂{ } } ⊢ 2'(= a3◂ [ a44◂ [ a40◂ [ ]]] )
; .mov_ptn 0(<2)◂1(<2)◂0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "glb_etr 0.1" ] } 1(<2)◂{ } } ⊢ 2'(= a3◂ [ a44◂ [ a40◂ [ ]]] )
	ALC_RCD 2, rax
	mov r9,rax
	ALC_RCD 3, rax
	mov r10,rax
	mov rax,r13
	mov QWORD [r10+8+8*0],rax
	mov rax,r14
	mov QWORD [r10+8+8*1],rax
	mov rsi,1  
	mov rdi,24
	xor rax,rax 
	C_CALL_SF calloc
	mov QWORD [rax],11
	mov BYTE [rax+8+0],103
	mov BYTE [rax+8+1],108
	mov BYTE [rax+8+2],98
	mov BYTE [rax+8+3],95
	mov BYTE [rax+8+4],101
	mov BYTE [rax+8+5],116
	mov BYTE [rax+8+6],114
	mov BYTE [rax+8+7],32
	mov BYTE [rax+8+8],48
	mov BYTE [rax+8+9],46
	mov BYTE [rax+8+10],49
	mov QWORD [r10+8+8*2],rax
	mov rax,r10
	mov QWORD [r9+8+8*0],rax
	mov rax,unt 
	mov rax,unt_1
	mov QWORD [r9+8+8*1],rax
	mov rax,r9
	mov BYTE [rax+6],0
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],1
	mov QWORD [rax+8],rdi
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	jmp LB_4009
LB_4009:
	cmp BYTE [r8+6],0
	jnz LB_4000
	POP_GRM_SCC
	jmp LB_3979
LB_4000:
	POP_GRM_FAIL 
	jmp LB_3979
LB_3979:
	cmp BYTE [r8+6],0
	jnz LB_4010
	jmp LB_4011
LB_4010:
	add rsp,8
	POP_GRM_FAIL
	ret
LB_4011:
	mov QWORD [rsp+8*1],r14
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi 
; .mov_ptn2 2'(= a44◂ [ a40◂ [ ]] ) ⊢ 3'(= a44◂ [ a40◂ [ ]] )
	mov r10,r9
; .mov_ptn 2'(= a44◂ [ a40◂ [ ]] ) ⊢ 3'(= a44◂ [ a40◂ [ ]] )
	mov rax,r8
	mov r9,rax
	mov r13,QWORD [rsp+16+8*1]
	mov r14,QWORD [rsp+8*1]
	jmp LB_4012
LB_4012
;; rsp=1 , %2198~3'(= a44◂ [ a40◂ [ ]] ) %2178~1'(= r ) %2177~0'(= r ) %2176~8'(= a44◂ [ *{ }] ) 
; #24 3'(= a44◂ [ a40◂ [ ]] ) ⊢ 0(<2)◂3'(= a44◂ [ a40◂ [ ]] )
;; rsp=1 , %2199~0(<2)◂3'(= a44◂ [ a40◂ [ ]] ) %2178~1'(= r ) %2177~0'(= r ) %2176~8'(= a44◂ [ *{ }] ) 
; ∎ 0(<2)◂3'(= a44◂ [ a40◂ [ ]] )
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 8'(= a44◂ [ *{ }] )
	mov rdi,QWORD [rsp-8+8*1]
	C_PUSH_REGS
	mov r8,rdi
	call LB_1876
	C_POP_REGS
; .mov_ptn2 0(<2)◂3'(= a44◂ [ a40◂ [ ]] ) ⊢ 2'(= a3◂ [ a44◂ [ a40◂ [ ]]] )
; .mov_ptn 0(<2)◂3'(= a44◂ [ a40◂ [ ]] ) ⊢ 2'(= a3◂ [ a44◂ [ a40◂ [ ]]] )
	mov rax,r9
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,8
	jmp LB_4013
LB_4013:
	cmp BYTE [r8+6],0
	jnz LB_3962
	POP_GRM_SCC
	ret
LB_3962:
	RB_GRM
	jmp LB_4016
LB_4015:
	add r14,1 
LB_4016:
	cmp r14,r9
	jge LB_4017
	JZ_LINE_SPC BYTE [r13+8+r14], LB_4015
LB_4017
	call GRM_230
	cmp BYTE [r8+6],0
	jnz LB_4020
	jmp LB_4021
LB_4020:
	jmp LB_4018
LB_4021:
; .mov_ptn2 2'(= *{ } ) ⊢ { }
; .mov_ptn 2'(= *{ } ) ⊢ { }
	jmp LB_4019
LB_4018:
	add rsp,0
	jmp LB_4014
LB_4019:
	jmp LB_4023
LB_4022:
	add r14,1 
LB_4023:
	cmp r14,r9
	jge LB_4024
	JZ_LINE_SPC BYTE [r13+8+r14], LB_4022
LB_4024
	lea rax,[r14+1]
	cmp rax,r9
	jg LB_4027
	jmp LB_4028
LB_4027:
	mov r8,unt_1
	jmp LB_4025
LB_4028:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],10
	jnz LB_4029
	jmp LB_4030
LB_4029:
	mov r8,unt_1
	jmp LB_4025
LB_4030:
	add r14,1
	jmp LB_4026
LB_4025:
	add rsp,0
	jmp LB_4014
LB_4026:
	jmp LB_4032
LB_4031:
	add r14,1 
LB_4032:
	cmp r14,r9
	jge LB_4033
	JZ_LINE_SPC BYTE [r13+8+r14], LB_4031
LB_4033
	call GRM_239
	cmp BYTE [r8+6],0
	jnz LB_4036
	jmp LB_4037
LB_4036:
	jmp LB_4034
LB_4037:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a44◂ [ a26◂ [ a18◂ [ ]{| l |}]] ) ⊢ 8'(= a44◂ [ a26◂ [ a18◂ [ ]{| l |}]] )
; .mov_ptn 2'(= a44◂ [ a26◂ [ a18◂ [ ]{| l |}]] ) ⊢ 8'(= a44◂ [ a26◂ [ a18◂ [ ]{| l |}]] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_4035
LB_4034:
	add rsp,0
	jmp LB_4014
LB_4035:
	mov QWORD [rsp+8*1],r14
	mov r13,QWORD [rsp+16+8*1]
	mov r14,QWORD [rsp+8*1]
	jmp LB_4038
LB_4038
;; rsp=1 , %2202~1'(= r ) %2201~0'(= r ) %2200~8'(= a44◂ [ a26◂ [ a18◂ [ ]{| l |}]] ) 
;; ? 8'(= a44◂ [ a26◂ [ a18◂ [ ]{| l |}]] ) ⊢ 0(<2)◂2'(= a26◂ [ a18◂ [ ]{| l |}] )
	mov rdi,QWORD [rsp-8+8*1]
	cmp BYTE [rdi+6],0
	jnz LB_4041
	jmp LB_4042
LB_4041:
	jmp LB_4040
LB_4042:
	mov QWORD [GBG_VCT+8*0],rdi
	mov r8,QWORD [rdi+8]
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_LN rdi
;; rsp=1 , %2204~2'(= a26◂ [ a18◂ [ ]{| l |}] ) %2202~1'(= r ) %2201~0'(= r ) 
; #171 2'(= a26◂ [ a18◂ [ ]{| l |}] ) ⊢ 2(<3)◂2'(= a26◂ [ a18◂ [ ]{| l |}] )
;; rsp=1 , %2205~2(<3)◂2'(= a26◂ [ a18◂ [ ]{| l |}] ) %2202~1'(= r ) %2201~0'(= r ) 
; $ %[ "" ] ⊢ %[ "" ]
;; rsp=1 , %2206~%[ "" ] %2205~2(<3)◂2'(= a26◂ [ a18◂ [ ]{| l |}] ) %2202~1'(= r ) %2201~0'(= r ) 
; #179 { %[ "" ] 2(<3)◂2'(= a26◂ [ a18◂ [ ]{| l |}] ) } ⊢ 2(<6)◂{ %[ "" ] 2(<3)◂2'(= a26◂ [ a18◂ [ ]{| l |}] ) }
;; rsp=1 , %2207~2(<6)◂{ %[ "" ] 2(<3)◂2'(= a26◂ [ a18◂ [ ]{| l |}] ) } %2202~1'(= r ) %2201~0'(= r ) 
; #198 2(<6)◂{ %[ "" ] 2(<3)◂2'(= a26◂ [ a18◂ [ ]{| l |}] ) } ⊢ 0(<2)◂2(<6)◂{ %[ "" ] 2(<3)◂2'(= a26◂ [ a18◂ [ ]{| l |}] ) }
;; rsp=1 , %2208~0(<2)◂2(<6)◂{ %[ "" ] 2(<3)◂2'(= a26◂ [ a18◂ [ ]{| l |}] ) } %2202~1'(= r ) %2201~0'(= r ) 
; #24 0(<2)◂2(<6)◂{ %[ "" ] 2(<3)◂2'(= a26◂ [ a18◂ [ ]{| l |}] ) } ⊢ 0(<2)◂0(<2)◂2(<6)◂{ %[ "" ] 2(<3)◂2'(= a26◂ [ a18◂ [ ]{| l |}] ) }
;; rsp=1 , %2209~0(<2)◂0(<2)◂2(<6)◂{ %[ "" ] 2(<3)◂2'(= a26◂ [ a18◂ [ ]{| l |}] ) } %2202~1'(= r ) %2201~0'(= r ) 
; ∎ 0(<2)◂0(<2)◂2(<6)◂{ %[ "" ] 2(<3)◂2'(= a26◂ [ a18◂ [ ]{| l |}] ) }
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂0(<2)◂2(<6)◂{ %[ "" ] 2(<3)◂2'(= a26◂ [ a18◂ [ ]{| l |}] ) } ⊢ 2'(= a3◂ [ a44◂ [ a40◂ [ ]]] )
	mov r13,r8
; .mov_ptn 0(<2)◂0(<2)◂2(<6)◂{ %[ "" ] 2(<3)◂0'(= a26◂ [ a18◂ [ ]{| l |}] ) } ⊢ 2'(= a3◂ [ a44◂ [ a40◂ [ ]]] )
	ALC_RCD 2, rax
	mov r14,rax
	mov rsi,1  
	mov rdi,16
	xor rax,rax 
	C_CALL_SF calloc
	mov QWORD [rax],0
	mov QWORD [r14+8+8*0],rax
	mov rax,r13
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],2
	mov QWORD [rax+8],rdi
	mov QWORD [r14+8+8*1],rax
	mov rax,r14
	mov BYTE [rax+6],2
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,8
	jmp LB_4039
LB_4040:
;; ?. 8'(= a44◂ [ a26◂ [ a18◂ [ ]{| l |}]] ) ⊢ 1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] )
	mov QWORD [GBG_VCT+8*0],rdi
	mov r8,QWORD [rdi+8]
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_LN rdi
;; rsp=1 , %2203~2'(= a2◂ [ *{ rr{| l |}}] ) %2202~1'(= r ) %2201~0'(= r ) 
; #197 2'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] )
;; rsp=1 , %2210~1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] ) %2202~1'(= r ) %2201~0'(= r ) 
; #24 1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 0(<2)◂1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] )
;; rsp=1 , %2211~0(<2)◂1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] ) %2202~1'(= r ) %2201~0'(= r ) 
; ∎ 0(<2)◂1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] )
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 2'(= a3◂ [ a44◂ [ a40◂ [ ]]] )
	mov r13,r8
; .mov_ptn 0(<2)◂1(<2)◂0'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 2'(= a3◂ [ a44◂ [ a40◂ [ ]]] )
	mov rax,r13
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],1
	mov QWORD [rax+8],rdi
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,8
	jmp LB_4039
LB_4039:
	cmp BYTE [r8+6],0
	jnz LB_4014
	POP_GRM_SCC
	ret
LB_4014:
	RB_GRM
	jmp LB_4045
LB_4044:
	add r14,1 
LB_4045:
	cmp r14,r9
	jge LB_4046
	JZ_SPC BYTE [r13+8+r14], LB_4044
LB_4046
	lea rax,[r14+2]
	cmp rax,r9
	jg LB_4049
	jmp LB_4050
LB_4049:
	mov r8,unt_1
	jmp LB_4047
LB_4050:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],194
	jnz LB_4051
	cmp BYTE [rdi+1],167
	jnz LB_4051
	jmp LB_4052
LB_4051:
	mov r8,unt_1
	jmp LB_4047
LB_4052:
	add r14,2
	jmp LB_4048
LB_4047:
	add rsp,0
	jmp LB_4043
LB_4048:
	PUSH_GRM
	jmp LB_4056
LB_4055:
	add r14,1 
LB_4056:
	cmp r14,r9
	jge LB_4057
	JZ_SPC BYTE [r13+8+r14], LB_4055
LB_4057
	call GRM_260
	cmp BYTE [r8+6],0
	jnz LB_4060
	jmp LB_4061
LB_4060:
	jmp LB_4058
LB_4061:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a44◂ [ a40◂ [ ]] ) ⊢ 8'(= a44◂ [ a40◂ [ ]] )
; .mov_ptn 2'(= a44◂ [ a40◂ [ ]] ) ⊢ 8'(= a44◂ [ a40◂ [ ]] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_4059
LB_4058:
	add rsp,0
	jmp LB_4054
LB_4059:
	mov QWORD [rsp+8*1],r14
	mov r13,QWORD [rsp+16+8*1]
	mov r14,QWORD [rsp+8*1]
	jmp LB_4062
LB_4062
;; rsp=1 , %2216~1'(= r ) %2215~0'(= r ) %2214~8'(= a44◂ [ a40◂ [ ]] ) 
; #24 8'(= a44◂ [ a40◂ [ ]] ) ⊢ 0(<2)◂8'(= a44◂ [ a40◂ [ ]] )
;; rsp=1 , %2217~0(<2)◂8'(= a44◂ [ a40◂ [ ]] ) %2216~1'(= r ) %2215~0'(= r ) 
; ∎ 0(<2)◂8'(= a44◂ [ a40◂ [ ]] )
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂8'(= a44◂ [ a40◂ [ ]] ) ⊢ 2'(= a3◂ [ a44◂ [ a40◂ [ ]]] )
; .mov_ptn 0(<2)◂8'(= a44◂ [ a40◂ [ ]] ) ⊢ 2'(= a3◂ [ a44◂ [ a40◂ [ ]]] )
	mov rax,QWORD [rsp-8+8*1]
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,8
	jmp LB_4063
LB_4063:
	cmp BYTE [r8+6],0
	jnz LB_4054
	POP_GRM_SCC
	jmp LB_4053
LB_4054:
	RB_GRM
	jmp LB_4066
LB_4065:
	add r14,1 
LB_4066:
	cmp r14,r9
	jge LB_4067
	JZ_SPC BYTE [r13+8+r14], LB_4065
LB_4067
	call GRM_250
	cmp BYTE [r8+6],0
	jnz LB_4070
	jmp LB_4071
LB_4070:
	jmp LB_4068
LB_4071:
; .mov_ptn2 2'(= *{ } ) ⊢ { }
; .mov_ptn 2'(= *{ } ) ⊢ { }
	jmp LB_4069
LB_4068:
	add rsp,0
	jmp LB_4064
LB_4069:
	mov QWORD [rsp+8*0],r14
	mov r13,QWORD [rsp+16+8*0]
	mov r14,QWORD [rsp+8*0]
	jmp LB_4072
LB_4072
;; rsp=0 , %2220~1'(= r ) %2219~0'(= r ) %2218~{ } 
; #22 { } ⊢ 1(<2)◂{ }
;; rsp=0 , %2221~1(<2)◂{ } %2220~1'(= r ) %2219~0'(= r ) %2218~{ } 
; $ %[ "glb_etr 3" ] ⊢ %[ "glb_etr 3" ]
;; rsp=0 , %2222~%[ "glb_etr 3" ] %2221~1(<2)◂{ } %2220~1'(= r ) %2219~0'(= r ) %2218~{ } 
; #23 { { 0'(= r ) 1'(= r ) %[ "glb_etr 3" ] } 1(<2)◂{ } } ⊢ 0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "glb_etr 3" ] } 1(<2)◂{ } }
;; rsp=0 , %2223~0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "glb_etr 3" ] } 1(<2)◂{ } } %2218~{ } 
; #197 0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "glb_etr 3" ] } 1(<2)◂{ } } ⊢ 1(<2)◂0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "glb_etr 3" ] } 1(<2)◂{ } }
;; rsp=0 , %2224~1(<2)◂0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "glb_etr 3" ] } 1(<2)◂{ } } %2218~{ } 
; #24 1(<2)◂0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "glb_etr 3" ] } 1(<2)◂{ } } ⊢ 0(<2)◂1(<2)◂0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "glb_etr 3" ] } 1(<2)◂{ } }
;; rsp=0 , %2225~0(<2)◂1(<2)◂0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "glb_etr 3" ] } 1(<2)◂{ } } %2218~{ } 
; ∎ 0(<2)◂1(<2)◂0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "glb_etr 3" ] } 1(<2)◂{ } }
; .dlt.ptn { }
; .mov_ptn2 0(<2)◂1(<2)◂0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "glb_etr 3" ] } 1(<2)◂{ } } ⊢ 2'(= a3◂ [ a44◂ [ a40◂ [ ]]] )
; .mov_ptn 0(<2)◂1(<2)◂0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "glb_etr 3" ] } 1(<2)◂{ } } ⊢ 2'(= a3◂ [ a44◂ [ a40◂ [ ]]] )
	ALC_RCD 2, rax
	mov r9,rax
	ALC_RCD 3, rax
	mov r10,rax
	mov rax,r13
	mov QWORD [r10+8+8*0],rax
	mov rax,r14
	mov QWORD [r10+8+8*1],rax
	mov rsi,1  
	mov rdi,24
	xor rax,rax 
	C_CALL_SF calloc
	mov QWORD [rax],9
	mov BYTE [rax+8+0],103
	mov BYTE [rax+8+1],108
	mov BYTE [rax+8+2],98
	mov BYTE [rax+8+3],95
	mov BYTE [rax+8+4],101
	mov BYTE [rax+8+5],116
	mov BYTE [rax+8+6],114
	mov BYTE [rax+8+7],32
	mov BYTE [rax+8+8],51
	mov QWORD [r10+8+8*2],rax
	mov rax,r10
	mov QWORD [r9+8+8*0],rax
	mov rax,unt 
	mov rax,unt_1
	mov QWORD [r9+8+8*1],rax
	mov rax,r9
	mov BYTE [rax+6],0
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],1
	mov QWORD [rax+8],rdi
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	jmp LB_4073
LB_4073:
	cmp BYTE [r8+6],0
	jnz LB_4064
	POP_GRM_SCC
	jmp LB_4053
LB_4064:
	POP_GRM_FAIL 
	jmp LB_4053
LB_4053:
	cmp BYTE [r8+6],0
	jnz LB_4074
	jmp LB_4075
LB_4074:
	add rsp,0
	POP_GRM_FAIL
	ret
LB_4075:
	mov QWORD [rsp+8*0],r14
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi 
; .mov_ptn2 2'(= a44◂ [ a40◂ [ ]] ) ⊢ 3'(= a44◂ [ a40◂ [ ]] )
	mov r10,r9
; .mov_ptn 2'(= a44◂ [ a40◂ [ ]] ) ⊢ 3'(= a44◂ [ a40◂ [ ]] )
	mov rax,r8
	mov r9,rax
	mov r13,QWORD [rsp+16+8*0]
	mov r14,QWORD [rsp+8*0]
	jmp LB_4076
LB_4076
;; rsp=0 , %2226~3'(= a44◂ [ a40◂ [ ]] ) %2213~1'(= r ) %2212~0'(= r ) 
; #24 3'(= a44◂ [ a40◂ [ ]] ) ⊢ 0(<2)◂3'(= a44◂ [ a40◂ [ ]] )
;; rsp=0 , %2227~0(<2)◂3'(= a44◂ [ a40◂ [ ]] ) %2213~1'(= r ) %2212~0'(= r ) 
; ∎ 0(<2)◂3'(= a44◂ [ a40◂ [ ]] )
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂3'(= a44◂ [ a40◂ [ ]] ) ⊢ 2'(= a3◂ [ a44◂ [ a40◂ [ ]]] )
; .mov_ptn 0(<2)◂3'(= a44◂ [ a40◂ [ ]] ) ⊢ 2'(= a3◂ [ a44◂ [ a40◂ [ ]]] )
	mov rax,r9
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	jmp LB_4077
LB_4077:
	cmp BYTE [r8+6],0
	jnz LB_4043
	POP_GRM_SCC
	ret
LB_4043:
	RB_GRM
	jmp LB_4080
LB_4079:
	add r14,1 
LB_4080:
	cmp r14,r9
	jge LB_4081
	JZ_SPC BYTE [r13+8+r14], LB_4079
LB_4081
	lea rax,[r14+2]
	cmp rax,r9
	jg LB_4084
	jmp LB_4085
LB_4084:
	mov r8,unt_1
	jmp LB_4082
LB_4085:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],194
	jnz LB_4086
	cmp BYTE [rdi+1],182
	jnz LB_4086
	jmp LB_4087
LB_4086:
	mov r8,unt_1
	jmp LB_4082
LB_4087:
	add r14,2
	jmp LB_4083
LB_4082:
	add rsp,0
	jmp LB_4078
LB_4083:
	PUSH_GRM
	jmp LB_4091
LB_4090:
	add r14,1 
LB_4091:
	cmp r14,r9
	jge LB_4092
	JZ_SPC BYTE [r13+8+r14], LB_4090
LB_4092
	call GRM_254
	cmp BYTE [r8+6],0
	jnz LB_4095
	jmp LB_4096
LB_4095:
	jmp LB_4093
LB_4096:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a40◂ [ ] ) ⊢ 8'(= a40◂ [ ] )
; .mov_ptn 2'(= a40◂ [ ] ) ⊢ 8'(= a40◂ [ ] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_4094
LB_4093:
	add rsp,0
	jmp LB_4089
LB_4094:
	mov QWORD [rsp+8*1],r14
	mov r13,QWORD [rsp+16+8*1]
	mov r14,QWORD [rsp+8*1]
	jmp LB_4097
LB_4097
;; rsp=1 , %2232~1'(= r ) %2231~0'(= r ) %2230~8'(= a40◂ [ ] ) 
; #198 8'(= a40◂ [ ] ) ⊢ 0(<2)◂8'(= a40◂ [ ] )
;; rsp=1 , %2233~0(<2)◂8'(= a40◂ [ ] ) %2232~1'(= r ) %2231~0'(= r ) 
; #24 0(<2)◂8'(= a40◂ [ ] ) ⊢ 0(<2)◂0(<2)◂8'(= a40◂ [ ] )
;; rsp=1 , %2234~0(<2)◂0(<2)◂8'(= a40◂ [ ] ) %2232~1'(= r ) %2231~0'(= r ) 
; ∎ 0(<2)◂0(<2)◂8'(= a40◂ [ ] )
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂0(<2)◂8'(= a40◂ [ ] ) ⊢ 2'(= a3◂ [ a44◂ [ a40◂ [ ]]] )
; .mov_ptn 0(<2)◂0(<2)◂8'(= a40◂ [ ] ) ⊢ 2'(= a3◂ [ a44◂ [ a40◂ [ ]]] )
	mov rax,QWORD [rsp-8+8*1]
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,8
	jmp LB_4098
LB_4098:
	cmp BYTE [r8+6],0
	jnz LB_4089
	POP_GRM_SCC
	jmp LB_4088
LB_4089:
	RB_GRM
	jmp LB_4101
LB_4100:
	add r14,1 
LB_4101:
	cmp r14,r9
	jge LB_4102
	JZ_SPC BYTE [r13+8+r14], LB_4100
LB_4102
	call GRM_250
	cmp BYTE [r8+6],0
	jnz LB_4105
	jmp LB_4106
LB_4105:
	jmp LB_4103
LB_4106:
; .mov_ptn2 2'(= *{ } ) ⊢ { }
; .mov_ptn 2'(= *{ } ) ⊢ { }
	jmp LB_4104
LB_4103:
	add rsp,0
	jmp LB_4099
LB_4104:
	mov QWORD [rsp+8*0],r14
	mov r13,QWORD [rsp+16+8*0]
	mov r14,QWORD [rsp+8*0]
	jmp LB_4107
LB_4107
;; rsp=0 , %2237~1'(= r ) %2236~0'(= r ) %2235~{ } 
; #22 { } ⊢ 1(<2)◂{ }
;; rsp=0 , %2238~1(<2)◂{ } %2237~1'(= r ) %2236~0'(= r ) %2235~{ } 
; $ %[ "glb_etr 4" ] ⊢ %[ "glb_etr 4" ]
;; rsp=0 , %2239~%[ "glb_etr 4" ] %2238~1(<2)◂{ } %2237~1'(= r ) %2236~0'(= r ) %2235~{ } 
; #23 { { 0'(= r ) 1'(= r ) %[ "glb_etr 4" ] } 1(<2)◂{ } } ⊢ 0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "glb_etr 4" ] } 1(<2)◂{ } }
;; rsp=0 , %2240~0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "glb_etr 4" ] } 1(<2)◂{ } } %2235~{ } 
; #197 0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "glb_etr 4" ] } 1(<2)◂{ } } ⊢ 1(<2)◂0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "glb_etr 4" ] } 1(<2)◂{ } }
;; rsp=0 , %2241~1(<2)◂0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "glb_etr 4" ] } 1(<2)◂{ } } %2235~{ } 
; #24 1(<2)◂0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "glb_etr 4" ] } 1(<2)◂{ } } ⊢ 0(<2)◂1(<2)◂0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "glb_etr 4" ] } 1(<2)◂{ } }
;; rsp=0 , %2242~0(<2)◂1(<2)◂0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "glb_etr 4" ] } 1(<2)◂{ } } %2235~{ } 
; ∎ 0(<2)◂1(<2)◂0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "glb_etr 4" ] } 1(<2)◂{ } }
; .dlt.ptn { }
; .mov_ptn2 0(<2)◂1(<2)◂0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "glb_etr 4" ] } 1(<2)◂{ } } ⊢ 2'(= a3◂ [ a44◂ [ a40◂ [ ]]] )
; .mov_ptn 0(<2)◂1(<2)◂0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "glb_etr 4" ] } 1(<2)◂{ } } ⊢ 2'(= a3◂ [ a44◂ [ a40◂ [ ]]] )
	ALC_RCD 2, rax
	mov r9,rax
	ALC_RCD 3, rax
	mov r10,rax
	mov rax,r13
	mov QWORD [r10+8+8*0],rax
	mov rax,r14
	mov QWORD [r10+8+8*1],rax
	mov rsi,1  
	mov rdi,24
	xor rax,rax 
	C_CALL_SF calloc
	mov QWORD [rax],9
	mov BYTE [rax+8+0],103
	mov BYTE [rax+8+1],108
	mov BYTE [rax+8+2],98
	mov BYTE [rax+8+3],95
	mov BYTE [rax+8+4],101
	mov BYTE [rax+8+5],116
	mov BYTE [rax+8+6],114
	mov BYTE [rax+8+7],32
	mov BYTE [rax+8+8],52
	mov QWORD [r10+8+8*2],rax
	mov rax,r10
	mov QWORD [r9+8+8*0],rax
	mov rax,unt 
	mov rax,unt_1
	mov QWORD [r9+8+8*1],rax
	mov rax,r9
	mov BYTE [rax+6],0
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],1
	mov QWORD [rax+8],rdi
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	jmp LB_4108
LB_4108:
	cmp BYTE [r8+6],0
	jnz LB_4099
	POP_GRM_SCC
	jmp LB_4088
LB_4099:
	POP_GRM_FAIL 
	jmp LB_4088
LB_4088:
	cmp BYTE [r8+6],0
	jnz LB_4109
	jmp LB_4110
LB_4109:
	add rsp,0
	POP_GRM_FAIL
	ret
LB_4110:
	mov QWORD [rsp+8*0],r14
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi 
; .mov_ptn2 2'(= a44◂ [ a40◂ [ ]] ) ⊢ 3'(= a44◂ [ a40◂ [ ]] )
	mov r10,r9
; .mov_ptn 2'(= a44◂ [ a40◂ [ ]] ) ⊢ 3'(= a44◂ [ a40◂ [ ]] )
	mov rax,r8
	mov r9,rax
	mov r13,QWORD [rsp+16+8*0]
	mov r14,QWORD [rsp+8*0]
	jmp LB_4111
LB_4111
;; rsp=0 , %2243~3'(= a44◂ [ a40◂ [ ]] ) %2229~1'(= r ) %2228~0'(= r ) 
; #24 3'(= a44◂ [ a40◂ [ ]] ) ⊢ 0(<2)◂3'(= a44◂ [ a40◂ [ ]] )
;; rsp=0 , %2244~0(<2)◂3'(= a44◂ [ a40◂ [ ]] ) %2229~1'(= r ) %2228~0'(= r ) 
; ∎ 0(<2)◂3'(= a44◂ [ a40◂ [ ]] )
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂3'(= a44◂ [ a40◂ [ ]] ) ⊢ 2'(= a3◂ [ a44◂ [ a40◂ [ ]]] )
; .mov_ptn 0(<2)◂3'(= a44◂ [ a40◂ [ ]] ) ⊢ 2'(= a3◂ [ a44◂ [ a40◂ [ ]]] )
	mov rax,r9
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	jmp LB_4112
LB_4112:
	cmp BYTE [r8+6],0
	jnz LB_4078
	POP_GRM_SCC
	ret
LB_4078:
	POP_GRM_FAIL 
	ret
ETR_250:
	mov r9,0x0000_ffff_ffff_ffff
	and r9,[r13]
	call GRM_250
	ret
GRM_250:
	PUSH_GRM
	jmp LB_4115
LB_4114:
	add r14,1 
LB_4115:
	cmp r14,r9
	jge LB_4116
	JZ_SPC BYTE [r13+8+r14], LB_4114
LB_4116
	call GRM_226
	cmp BYTE [r8+6],0
	jnz LB_4119
	jmp LB_4120
LB_4119:
	jmp LB_4117
LB_4120:
; .mov_ptn2 2'(= *{ } ) ⊢ { }
; .mov_ptn 2'(= *{ } ) ⊢ { }
	jmp LB_4118
LB_4117:
	add rsp,0
	jmp LB_4113
LB_4118:
	jmp LB_4122
LB_4121:
	add r14,1 
LB_4122:
	cmp r14,r9
	jge LB_4123
	JZ_SPC BYTE [r13+8+r14], LB_4121
LB_4123
	call GRM_250
	cmp BYTE [r8+6],0
	jnz LB_4126
	jmp LB_4127
LB_4126:
	jmp LB_4124
LB_4127:
; .mov_ptn2 2'(= *{ } ) ⊢ { }
; .mov_ptn 2'(= *{ } ) ⊢ { }
	jmp LB_4125
LB_4124:
	add rsp,0
	jmp LB_4113
LB_4125:
	mov QWORD [rsp+8*0],r14
	mov r13,QWORD [rsp+16+8*0]
	mov r14,QWORD [rsp+8*0]
	jmp LB_4128
LB_4128
;; rsp=0 , %2248~1'(= r ) %2247~0'(= r ) %2246~{ } %2245~{ } 
; #24 { } ⊢ 0(<2)◂{ }
;; rsp=0 , %2249~0(<2)◂{ } %2248~1'(= r ) %2247~0'(= r ) %2246~{ } %2245~{ } 
; ∎ 0(<2)◂{ }
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn { }
; .dlt.ptn { }
; .mov_ptn2 0(<2)◂{ } ⊢ 2'(= a3◂ [ *{ }] )
; .mov_ptn 0(<2)◂{ } ⊢ 2'(= a3◂ [ *{ }] )
	mov rax,unt 
	mov rax,unt_0
	mov r8,rax
	jmp LB_4129
LB_4129:
	cmp BYTE [r8+6],0
	jnz LB_4113
	POP_GRM_SCC
	ret
LB_4113:
	RB_GRM
	mov QWORD [rsp+8*0],r14
	mov r13,QWORD [rsp+16+8*0]
	mov r14,QWORD [rsp+8*0]
	jmp LB_4131
LB_4131
;; rsp=0 , %2251~1'(= r ) %2250~0'(= r ) 
; #24 { } ⊢ 0(<2)◂{ }
;; rsp=0 , %2252~0(<2)◂{ } %2251~1'(= r ) %2250~0'(= r ) 
; ∎ 0(<2)◂{ }
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂{ } ⊢ 2'(= a3◂ [ *{ }] )
; .mov_ptn 0(<2)◂{ } ⊢ 2'(= a3◂ [ *{ }] )
	mov rax,unt 
	mov rax,unt_0
	mov r8,rax
	jmp LB_4132
LB_4132:
	cmp BYTE [r8+6],0
	jnz LB_4130
	POP_GRM_SCC
	ret
LB_4130:
	POP_GRM_FAIL 
	ret
ETR_251:
	mov r9,0x0000_ffff_ffff_ffff
	and r9,[r13]
	call GRM_251
	ret
GRM_251:
	PUSH_GRM
	jmp LB_4135
LB_4134:
	add r14,1 
LB_4135:
	cmp r14,r9
	jge LB_4136
	JZ_SPC BYTE [r13+8+r14], LB_4134
LB_4136
	lea rax,[r14+6]
	cmp rax,r9
	jg LB_4139
	jmp LB_4140
LB_4139:
	mov r8,unt_1
	jmp LB_4137
LB_4140:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],226
	jnz LB_4141
	cmp BYTE [rdi+1],136
	jnz LB_4141
	cmp BYTE [rdi+2],142
	jnz LB_4141
	cmp BYTE [rdi+3],226
	jnz LB_4141
	cmp BYTE [rdi+4],136
	jnz LB_4141
	cmp BYTE [rdi+5],142
	jnz LB_4141
	jmp LB_4142
LB_4141:
	mov r8,unt_1
	jmp LB_4137
LB_4142:
	add r14,6
	jmp LB_4138
LB_4137:
	add rsp,0
	jmp LB_4133
LB_4138:
	mov QWORD [rsp+8*0],r14
	mov r13,QWORD [rsp+16+8*0]
	mov r14,QWORD [rsp+8*0]
	jmp LB_4143
LB_4143
;; rsp=0 , %2254~1'(= r ) %2253~0'(= r ) 
; #24 { } ⊢ 0(<2)◂{ }
;; rsp=0 , %2255~0(<2)◂{ } %2254~1'(= r ) %2253~0'(= r ) 
; ∎ 0(<2)◂{ }
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂{ } ⊢ 2'(= a3◂ [ *{ }] )
; .mov_ptn 0(<2)◂{ } ⊢ 2'(= a3◂ [ *{ }] )
	mov rax,unt 
	mov rax,unt_0
	mov r8,rax
	jmp LB_4144
LB_4144:
	cmp BYTE [r8+6],0
	jnz LB_4133
	POP_GRM_SCC
	ret
LB_4133:
	RB_GRM
	jmp LB_4147
LB_4146:
	add r14,1 
LB_4147:
	cmp r14,r9
	jge LB_4148
	JZ_SPC BYTE [r13+8+r14], LB_4146
LB_4148
	lea rax,[r14+4]
	cmp rax,r9
	jg LB_4151
	jmp LB_4152
LB_4151:
	mov r8,unt_1
	jmp LB_4149
LB_4152:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],194
	jnz LB_4153
	cmp BYTE [rdi+1],167
	jnz LB_4153
	cmp BYTE [rdi+2],194
	jnz LB_4153
	cmp BYTE [rdi+3],167
	jnz LB_4153
	jmp LB_4154
LB_4153:
	mov r8,unt_1
	jmp LB_4149
LB_4154:
	add r14,4
	jmp LB_4150
LB_4149:
	add rsp,0
	jmp LB_4145
LB_4150:
	PUSH_GRM
	jmp LB_4158
LB_4157:
	add r14,1 
LB_4158:
	cmp r14,r9
	jge LB_4159
	JZ_SPC BYTE [r13+8+r14], LB_4157
LB_4159
	call GRM_79
	cmp BYTE [r8+6],0
	jnz LB_4162
	jmp LB_4163
LB_4162:
	jmp LB_4160
LB_4163:
	sub rsp,8
; .mov_ptn2 2'(= {| l |} ) ⊢ 8'(= {| l |} )
; .mov_ptn 2'(= {| l |} ) ⊢ 8'(= {| l |} )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_4161
LB_4160:
	add rsp,0
	jmp LB_4156
LB_4161:
	jmp LB_4165
LB_4164:
	add r14,1 
LB_4165:
	cmp r14,r9
	jge LB_4166
	JZ_SPC BYTE [r13+8+r14], LB_4164
LB_4166
	lea rax,[r14+1]
	cmp rax,r9
	jg LB_4169
	jmp LB_4170
LB_4169:
	mov r8,unt_1
	jmp LB_4167
LB_4170:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],61
	jnz LB_4171
	jmp LB_4172
LB_4171:
	mov r8,unt_1
	jmp LB_4167
LB_4172:
	add r14,1
	jmp LB_4168
LB_4167:
	add rsp,8
	jmp LB_4156
LB_4168:
	jmp LB_4174
LB_4173:
	add r14,1 
LB_4174:
	cmp r14,r9
	jge LB_4175
	JZ_SPC BYTE [r13+8+r14], LB_4173
LB_4175
	call GRM_194
	cmp BYTE [r8+6],0
	jnz LB_4178
	jmp LB_4179
LB_4178:
	jmp LB_4176
LB_4179:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a18◂ [ ] ) ⊢ 9'(= a18◂ [ ] )
; .mov_ptn 2'(= a18◂ [ ] ) ⊢ 9'(= a18◂ [ ] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_4177
LB_4176:
	add rsp,8
	jmp LB_4156
LB_4177:
	jmp LB_4181
LB_4180:
	add r14,1 
LB_4181:
	cmp r14,r9
	jge LB_4182
	JZ_SPC BYTE [r13+8+r14], LB_4180
LB_4182
	call GRM_251
	cmp BYTE [r8+6],0
	jnz LB_4185
	jmp LB_4186
LB_4185:
	jmp LB_4183
LB_4186:
; .mov_ptn2 2'(= *{ } ) ⊢ { }
; .mov_ptn 2'(= *{ } ) ⊢ { }
	jmp LB_4184
LB_4183:
	add rsp,16
	jmp LB_4156
LB_4184:
	mov QWORD [rsp+8*2],r14
	mov r13,QWORD [rsp+16+8*2]
	mov r14,QWORD [rsp+8*2]
	jmp LB_4187
LB_4187
;; rsp=2 , %2262~1'(= r ) %2261~0'(= r ) %2260~{ } %2259~9'(= a18◂ [ ] ) %2258~8'(= {| l |} ) 
; #24 { } ⊢ 0(<2)◂{ }
;; rsp=2 , %2263~0(<2)◂{ } %2262~1'(= r ) %2261~0'(= r ) %2260~{ } %2259~9'(= a18◂ [ ] ) %2258~8'(= {| l |} ) 
; ∎ 0(<2)◂{ }
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn { }
; .dlt.ptn 9'(= a18◂ [ ] )
	mov rdi,QWORD [rsp-8+8*1]
	C_PUSH_REGS
	mov r8,rdi
	call LB_450
	C_POP_REGS
; .dlt.ptn 8'(= {| l |} )
	mov rdi,QWORD [rsp-8+8*2]
	C_PUSH_REGS
	mov r8,rdi
	mov rdi,r8
	call free_s8
	C_POP_REGS
; .mov_ptn2 0(<2)◂{ } ⊢ 2'(= a3◂ [ *{ }] )
; .mov_ptn 0(<2)◂{ } ⊢ 2'(= a3◂ [ *{ }] )
	mov rax,unt 
	mov rax,unt_0
	mov r8,rax
	add rsp,16
	jmp LB_4188
LB_4188:
	cmp BYTE [r8+6],0
	jnz LB_4156
	POP_GRM_SCC
	jmp LB_4155
LB_4156:
	RB_GRM
	jmp LB_4191
LB_4190:
	add r14,1 
LB_4191:
	cmp r14,r9
	jge LB_4192
	JZ_SPC BYTE [r13+8+r14], LB_4190
LB_4192
	call GRM_251
	cmp BYTE [r8+6],0
	jnz LB_4195
	jmp LB_4196
LB_4195:
	jmp LB_4193
LB_4196:
; .mov_ptn2 2'(= *{ } ) ⊢ { }
; .mov_ptn 2'(= *{ } ) ⊢ { }
	jmp LB_4194
LB_4193:
	add rsp,0
	jmp LB_4189
LB_4194:
	jmp LB_4198
LB_4197:
	add r14,1 
LB_4198:
	cmp r14,r9
	jge LB_4199
	JZ_SPC BYTE [r13+8+r14], LB_4197
LB_4199
	call GRM_251
	cmp BYTE [r8+6],0
	jnz LB_4202
	jmp LB_4203
LB_4202:
	jmp LB_4200
LB_4203:
; .mov_ptn2 2'(= *{ } ) ⊢ { }
; .mov_ptn 2'(= *{ } ) ⊢ { }
	jmp LB_4201
LB_4200:
	add rsp,0
	jmp LB_4189
LB_4201:
	mov QWORD [rsp+8*0],r14
	mov r13,QWORD [rsp+16+8*0]
	mov r14,QWORD [rsp+8*0]
	jmp LB_4204
LB_4204
;; rsp=0 , %2267~1'(= r ) %2266~0'(= r ) %2265~{ } %2264~{ } 
; #24 { } ⊢ 0(<2)◂{ }
;; rsp=0 , %2268~0(<2)◂{ } %2267~1'(= r ) %2266~0'(= r ) %2265~{ } %2264~{ } 
; ∎ 0(<2)◂{ }
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn { }
; .dlt.ptn { }
; .mov_ptn2 0(<2)◂{ } ⊢ 2'(= a3◂ [ *{ }] )
; .mov_ptn 0(<2)◂{ } ⊢ 2'(= a3◂ [ *{ }] )
	mov rax,unt 
	mov rax,unt_0
	mov r8,rax
	jmp LB_4205
LB_4205:
	cmp BYTE [r8+6],0
	jnz LB_4189
	POP_GRM_SCC
	jmp LB_4155
LB_4189:
	POP_GRM_FAIL 
	jmp LB_4155
LB_4155:
	cmp BYTE [r8+6],0
	jnz LB_4206
	jmp LB_4207
LB_4206:
	add rsp,0
	POP_GRM_FAIL
	ret
LB_4207:
	mov QWORD [rsp+8*0],r14
; .mov_ptn2 2'(= *{ } ) ⊢ { }
; .mov_ptn 2'(= *{ } ) ⊢ { }
	mov r13,QWORD [rsp+16+8*0]
	mov r14,QWORD [rsp+8*0]
	jmp LB_4208
LB_4208
;; rsp=0 , %2269~{ } %2257~1'(= r ) %2256~0'(= r ) 
; #24 { } ⊢ 0(<2)◂{ }
;; rsp=0 , %2270~0(<2)◂{ } %2269~{ } %2257~1'(= r ) %2256~0'(= r ) 
; ∎ 0(<2)◂{ }
; .dlt.ptn { }
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂{ } ⊢ 2'(= a3◂ [ *{ }] )
; .mov_ptn 0(<2)◂{ } ⊢ 2'(= a3◂ [ *{ }] )
	mov rax,unt 
	mov rax,unt_0
	mov r8,rax
	jmp LB_4209
LB_4209:
	cmp BYTE [r8+6],0
	jnz LB_4145
	POP_GRM_SCC
	ret
LB_4145:
	RB_GRM
	jmp LB_4212
LB_4211:
	add r14,1 
LB_4212:
	cmp r14,r9
	jge LB_4213
	JZ_SPC BYTE [r13+8+r14], LB_4211
LB_4213
	cmp r14,r9
	jge LB_4216
	jmp LB_4217
LB_4216:
	mov r8,unt_1 
	jmp LB_4214
LB_4217:
	movzx rdi,BYTE [r13+8+r14]
	push rdi 
	add r14,1 
	jmp LB_4215
LB_4214:
	add rsp,0
	jmp LB_4210
LB_4215:
	jmp LB_4219
LB_4218:
	add r14,1 
LB_4219:
	cmp r14,r9
	jge LB_4220
	JZ_SPC BYTE [r13+8+r14], LB_4218
LB_4220
	call GRM_251
	cmp BYTE [r8+6],0
	jnz LB_4223
	jmp LB_4224
LB_4223:
	jmp LB_4221
LB_4224:
; .mov_ptn2 2'(= *{ } ) ⊢ { }
; .mov_ptn 2'(= *{ } ) ⊢ { }
	jmp LB_4222
LB_4221:
	add rsp,8
	jmp LB_4210
LB_4222:
	mov QWORD [rsp+8*1],r14
	mov r13,QWORD [rsp+16+8*1]
	mov r14,QWORD [rsp+8*1]
	jmp LB_4225
LB_4225
;; rsp=1 , %2274~1'(= r ) %2273~0'(= r ) %2272~{ } %2271~8'(= r ) 
; #24 { } ⊢ 0(<2)◂{ }
;; rsp=1 , %2275~0(<2)◂{ } %2274~1'(= r ) %2273~0'(= r ) %2272~{ } %2271~8'(= r ) 
; ∎ 0(<2)◂{ }
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn { }
; .dlt.ptn 8'(= r )
	mov rdi,QWORD [rsp-8+8*1]
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂{ } ⊢ 2'(= a3◂ [ *{ }] )
; .mov_ptn 0(<2)◂{ } ⊢ 2'(= a3◂ [ *{ }] )
	mov rax,unt 
	mov rax,unt_0
	mov r8,rax
	add rsp,8
	jmp LB_4226
LB_4226:
	cmp BYTE [r8+6],0
	jnz LB_4210
	POP_GRM_SCC
	ret
LB_4210:
	RB_GRM
	mov QWORD [rsp+8*0],r14
	mov r13,QWORD [rsp+16+8*0]
	mov r14,QWORD [rsp+8*0]
	jmp LB_4228
LB_4228
;; rsp=0 , %2277~1'(= r ) %2276~0'(= r ) 
; #24 { } ⊢ 0(<2)◂{ }
;; rsp=0 , %2278~0(<2)◂{ } %2277~1'(= r ) %2276~0'(= r ) 
; ∎ 0(<2)◂{ }
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂{ } ⊢ 2'(= a3◂ [ *{ }] )
; .mov_ptn 0(<2)◂{ } ⊢ 2'(= a3◂ [ *{ }] )
	mov rax,unt 
	mov rax,unt_0
	mov r8,rax
	jmp LB_4229
LB_4229:
	cmp BYTE [r8+6],0
	jnz LB_4227
	POP_GRM_SCC
	ret
LB_4227:
	POP_GRM_FAIL 
	ret
ETR_252:
	mov r9,0x0000_ffff_ffff_ffff
	and r9,[r13]
	call GRM_252
	ret
GRM_252:
	PUSH_GRM
	jmp LB_4232
LB_4231:
	add r14,1 
LB_4232:
	cmp r14,r9
	jge LB_4233
	JZ_SPC BYTE [r13+8+r14], LB_4231
LB_4233
	lea rax,[r14+1]
	cmp rax,r9
	jg LB_4236
	jmp LB_4237
LB_4236:
	mov r8,unt_1
	jmp LB_4234
LB_4237:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],61
	jnz LB_4238
	jmp LB_4239
LB_4238:
	mov r8,unt_1
	jmp LB_4234
LB_4239:
	add r14,1
	jmp LB_4235
LB_4234:
	add rsp,0
	jmp LB_4230
LB_4235:
	jmp LB_4241
LB_4240:
	add r14,1 
LB_4241:
	cmp r14,r9
	jge LB_4242
	JZ_SPC BYTE [r13+8+r14], LB_4240
LB_4242
	call GRM_194
	cmp BYTE [r8+6],0
	jnz LB_4245
	jmp LB_4246
LB_4245:
	jmp LB_4243
LB_4246:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a18◂ [ ] ) ⊢ 8'(= a18◂ [ ] )
; .mov_ptn 2'(= a18◂ [ ] ) ⊢ 8'(= a18◂ [ ] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_4244
LB_4243:
	add rsp,0
	POP_GRM_FAIL
	ret
LB_4244:
	jmp LB_4248
LB_4247:
	add r14,1 
LB_4248:
	cmp r14,r9
	jge LB_4249
	JZ_SPC BYTE [r13+8+r14], LB_4247
LB_4249
	call GRM_221
	cmp BYTE [r8+6],0
	jnz LB_4252
	jmp LB_4253
LB_4252:
	jmp LB_4250
LB_4253:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a44◂ [ *{ }] ) ⊢ 9'(= a44◂ [ *{ }] )
; .mov_ptn 2'(= a44◂ [ *{ }] ) ⊢ 9'(= a44◂ [ *{ }] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_4251
LB_4250:
	add rsp,8
	POP_GRM_FAIL
	ret
LB_4251:
	mov QWORD [rsp+8*2],r14
	mov r13,QWORD [rsp+16+8*2]
	mov r14,QWORD [rsp+8*2]
	jmp LB_4254
LB_4254
;; rsp=2 , %2282~1'(= r ) %2281~0'(= r ) %2280~9'(= a44◂ [ *{ }] ) %2279~8'(= a18◂ [ ] ) 
; #174 8'(= a18◂ [ ] ) ⊢ 1(<2)◂8'(= a18◂ [ ] )
;; rsp=2 , %2283~1(<2)◂8'(= a18◂ [ ] ) %2282~1'(= r ) %2281~0'(= r ) %2280~9'(= a44◂ [ *{ }] ) 
; #198 1(<2)◂8'(= a18◂ [ ] ) ⊢ 0(<2)◂1(<2)◂8'(= a18◂ [ ] )
;; rsp=2 , %2284~0(<2)◂1(<2)◂8'(= a18◂ [ ] ) %2282~1'(= r ) %2281~0'(= r ) %2280~9'(= a44◂ [ *{ }] ) 
; #24 0(<2)◂1(<2)◂8'(= a18◂ [ ] ) ⊢ 0(<2)◂0(<2)◂1(<2)◂8'(= a18◂ [ ] )
;; rsp=2 , %2285~0(<2)◂0(<2)◂1(<2)◂8'(= a18◂ [ ] ) %2282~1'(= r ) %2281~0'(= r ) %2280~9'(= a44◂ [ *{ }] ) 
; ∎ 0(<2)◂0(<2)◂1(<2)◂8'(= a18◂ [ ] )
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 9'(= a44◂ [ *{ }] )
	mov rdi,QWORD [rsp-8+8*1]
	C_PUSH_REGS
	mov r8,rdi
	call LB_1876
	C_POP_REGS
; .mov_ptn2 0(<2)◂0(<2)◂1(<2)◂8'(= a18◂ [ ] ) ⊢ 2'(= a3◂ [ a44◂ [ a41◂ [ ]]] )
; .mov_ptn 0(<2)◂0(<2)◂1(<2)◂8'(= a18◂ [ ] ) ⊢ 2'(= a3◂ [ a44◂ [ a41◂ [ ]]] )
	mov rax,QWORD [rsp-8+8*2]
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],1
	mov QWORD [rax+8],rdi
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,16
	jmp LB_4255
LB_4255:
	cmp BYTE [r8+6],0
	jnz LB_4230
	POP_GRM_SCC
	ret
LB_4230:
	RB_GRM
	jmp LB_4258
LB_4257:
	add r14,1 
LB_4258:
	cmp r14,r9
	jge LB_4259
	JZ_SPC BYTE [r13+8+r14], LB_4257
LB_4259
	call GRM_221
	cmp BYTE [r8+6],0
	jnz LB_4262
	jmp LB_4263
LB_4262:
	jmp LB_4260
LB_4263:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a44◂ [ *{ }] ) ⊢ 8'(= a44◂ [ *{ }] )
; .mov_ptn 2'(= a44◂ [ *{ }] ) ⊢ 8'(= a44◂ [ *{ }] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_4261
LB_4260:
	add rsp,0
	jmp LB_4256
LB_4261:
	jmp LB_4265
LB_4264:
	add r14,1 
LB_4265:
	cmp r14,r9
	jge LB_4266
	JZ_SPC BYTE [r13+8+r14], LB_4264
LB_4266
	call GRM_253
	cmp BYTE [r8+6],0
	jnz LB_4269
	jmp LB_4270
LB_4269:
	jmp LB_4267
LB_4270:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a44◂ [ a2◂ [ a40◂ [ ]]] ) ⊢ 9'(= a44◂ [ a2◂ [ a40◂ [ ]]] )
; .mov_ptn 2'(= a44◂ [ a2◂ [ a40◂ [ ]]] ) ⊢ 9'(= a44◂ [ a2◂ [ a40◂ [ ]]] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_4268
LB_4267:
	add rsp,8
	jmp LB_4256
LB_4268:
	mov QWORD [rsp+8*2],r14
	mov r13,QWORD [rsp+16+8*2]
	mov r14,QWORD [rsp+8*2]
	jmp LB_4271
LB_4271
;; rsp=2 , %2289~1'(= r ) %2288~0'(= r ) %2287~9'(= a44◂ [ a2◂ [ a40◂ [ ]]] ) %2286~8'(= a44◂ [ *{ }] ) 
;; ? 9'(= a44◂ [ a2◂ [ a40◂ [ ]]] ) ⊢ 0(<2)◂2'(= a2◂ [ a40◂ [ ]] )
	mov rdi,QWORD [rsp-8+8*1]
	cmp BYTE [rdi+6],0
	jnz LB_4274
	jmp LB_4275
LB_4274:
	jmp LB_4273
LB_4275:
	mov QWORD [GBG_VCT+8*0],rdi
	mov r8,QWORD [rdi+8]
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_LN rdi
;; rsp=2 , %2291~2'(= a2◂ [ a40◂ [ ]] ) %2289~1'(= r ) %2288~0'(= r ) %2286~8'(= a44◂ [ *{ }] ) 
; #175 2'(= a2◂ [ a40◂ [ ]] ) ⊢ 0(<2)◂2'(= a2◂ [ a40◂ [ ]] )
;; rsp=2 , %2292~0(<2)◂2'(= a2◂ [ a40◂ [ ]] ) %2289~1'(= r ) %2288~0'(= r ) %2286~8'(= a44◂ [ *{ }] ) 
; #198 0(<2)◂2'(= a2◂ [ a40◂ [ ]] ) ⊢ 0(<2)◂0(<2)◂2'(= a2◂ [ a40◂ [ ]] )
;; rsp=2 , %2293~0(<2)◂0(<2)◂2'(= a2◂ [ a40◂ [ ]] ) %2289~1'(= r ) %2288~0'(= r ) %2286~8'(= a44◂ [ *{ }] ) 
; #24 0(<2)◂0(<2)◂2'(= a2◂ [ a40◂ [ ]] ) ⊢ 0(<2)◂0(<2)◂0(<2)◂2'(= a2◂ [ a40◂ [ ]] )
;; rsp=2 , %2294~0(<2)◂0(<2)◂0(<2)◂2'(= a2◂ [ a40◂ [ ]] ) %2289~1'(= r ) %2288~0'(= r ) %2286~8'(= a44◂ [ *{ }] ) 
; ∎ 0(<2)◂0(<2)◂0(<2)◂2'(= a2◂ [ a40◂ [ ]] )
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 8'(= a44◂ [ *{ }] )
	mov rdi,QWORD [rsp-8+8*2]
	C_PUSH_REGS
	mov r8,rdi
	call LB_1876
	C_POP_REGS
; .mov_ptn2 0(<2)◂0(<2)◂0(<2)◂2'(= a2◂ [ a40◂ [ ]] ) ⊢ 2'(= a3◂ [ a44◂ [ a41◂ [ ]]] )
	mov r13,r8
; .mov_ptn 0(<2)◂0(<2)◂0(<2)◂0'(= a2◂ [ a40◂ [ ]] ) ⊢ 2'(= a3◂ [ a44◂ [ a41◂ [ ]]] )
	mov rax,r13
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,16
	jmp LB_4272
LB_4273:
;; ?. 9'(= a44◂ [ a2◂ [ a40◂ [ ]]] ) ⊢ 1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] )
	mov QWORD [GBG_VCT+8*0],rdi
	mov r8,QWORD [rdi+8]
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_LN rdi
;; rsp=2 , %2290~2'(= a2◂ [ *{ rr{| l |}}] ) %2289~1'(= r ) %2288~0'(= r ) %2286~8'(= a44◂ [ *{ }] ) 
; #197 2'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] )
;; rsp=2 , %2295~1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] ) %2289~1'(= r ) %2288~0'(= r ) %2286~8'(= a44◂ [ *{ }] ) 
; #24 1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 0(<2)◂1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] )
;; rsp=2 , %2296~0(<2)◂1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] ) %2289~1'(= r ) %2288~0'(= r ) %2286~8'(= a44◂ [ *{ }] ) 
; ∎ 0(<2)◂1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] )
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 8'(= a44◂ [ *{ }] )
	mov rdi,QWORD [rsp-8+8*2]
	C_PUSH_REGS
	mov r8,rdi
	call LB_1876
	C_POP_REGS
; .mov_ptn2 0(<2)◂1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 2'(= a3◂ [ a44◂ [ a41◂ [ ]]] )
	mov r13,r8
; .mov_ptn 0(<2)◂1(<2)◂0'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 2'(= a3◂ [ a44◂ [ a41◂ [ ]]] )
	mov rax,r13
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],1
	mov QWORD [rax+8],rdi
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,16
	jmp LB_4272
LB_4272:
	cmp BYTE [r8+6],0
	jnz LB_4256
	POP_GRM_SCC
	ret
LB_4256:
	POP_GRM_FAIL 
	ret
ETR_253:
	mov r9,0x0000_ffff_ffff_ffff
	and r9,[r13]
	call GRM_253
	ret
GRM_253:
	PUSH_GRM
	jmp LB_4278
LB_4277:
	add r14,1 
LB_4278:
	cmp r14,r9
	jge LB_4279
	JZ_SPC BYTE [r13+8+r14], LB_4277
LB_4279
	call GRM_221
	cmp BYTE [r8+6],0
	jnz LB_4282
	jmp LB_4283
LB_4282:
	jmp LB_4280
LB_4283:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a44◂ [ *{ }] ) ⊢ 8'(= a44◂ [ *{ }] )
; .mov_ptn 2'(= a44◂ [ *{ }] ) ⊢ 8'(= a44◂ [ *{ }] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_4281
LB_4280:
	add rsp,0
	jmp LB_4276
LB_4281:
	jmp LB_4285
LB_4284:
	add r14,1 
LB_4285:
	cmp r14,r9
	jge LB_4286
	JZ_SPC BYTE [r13+8+r14], LB_4284
LB_4286
	lea rax,[r14+6]
	cmp rax,r9
	jg LB_4289
	jmp LB_4290
LB_4289:
	mov r8,unt_1
	jmp LB_4287
LB_4290:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],226
	jnz LB_4291
	cmp BYTE [rdi+1],136
	jnz LB_4291
	cmp BYTE [rdi+2],142
	jnz LB_4291
	cmp BYTE [rdi+3],226
	jnz LB_4291
	cmp BYTE [rdi+4],136
	jnz LB_4291
	cmp BYTE [rdi+5],142
	jnz LB_4291
	jmp LB_4292
LB_4291:
	mov r8,unt_1
	jmp LB_4287
LB_4292:
	add r14,6
	jmp LB_4288
LB_4287:
	add rsp,8
	jmp LB_4276
LB_4288:
	jmp LB_4294
LB_4293:
	add r14,1 
LB_4294:
	cmp r14,r9
	jge LB_4295
	JZ_SPC BYTE [r13+8+r14], LB_4293
LB_4295
	call GRM_221
	cmp BYTE [r8+6],0
	jnz LB_4298
	jmp LB_4299
LB_4298:
	jmp LB_4296
LB_4299:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a44◂ [ *{ }] ) ⊢ 9'(= a44◂ [ *{ }] )
; .mov_ptn 2'(= a44◂ [ *{ }] ) ⊢ 9'(= a44◂ [ *{ }] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_4297
LB_4296:
	add rsp,8
	jmp LB_4276
LB_4297:
	mov QWORD [rsp+8*2],r14
	mov r13,QWORD [rsp+16+8*2]
	mov r14,QWORD [rsp+8*2]
	jmp LB_4300
LB_4300
;; rsp=2 , %2300~1'(= r ) %2299~0'(= r ) %2298~9'(= a44◂ [ *{ }] ) %2297~8'(= a44◂ [ *{ }] ) 
; #22 { } ⊢ 1(<2)◂{ }
;; rsp=2 , %2301~1(<2)◂{ } %2300~1'(= r ) %2299~0'(= r ) %2298~9'(= a44◂ [ *{ }] ) %2297~8'(= a44◂ [ *{ }] ) 
; #198 1(<2)◂{ } ⊢ 0(<2)◂1(<2)◂{ }
;; rsp=2 , %2302~0(<2)◂1(<2)◂{ } %2300~1'(= r ) %2299~0'(= r ) %2298~9'(= a44◂ [ *{ }] ) %2297~8'(= a44◂ [ *{ }] ) 
; #24 0(<2)◂1(<2)◂{ } ⊢ 0(<2)◂0(<2)◂1(<2)◂{ }
;; rsp=2 , %2303~0(<2)◂0(<2)◂1(<2)◂{ } %2300~1'(= r ) %2299~0'(= r ) %2298~9'(= a44◂ [ *{ }] ) %2297~8'(= a44◂ [ *{ }] ) 
; ∎ 0(<2)◂0(<2)◂1(<2)◂{ }
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 9'(= a44◂ [ *{ }] )
	mov rdi,QWORD [rsp-8+8*1]
	C_PUSH_REGS
	mov r8,rdi
	call LB_1876
	C_POP_REGS
; .dlt.ptn 8'(= a44◂ [ *{ }] )
	mov rdi,QWORD [rsp-8+8*2]
	C_PUSH_REGS
	mov r8,rdi
	call LB_1876
	C_POP_REGS
; .mov_ptn2 0(<2)◂0(<2)◂1(<2)◂{ } ⊢ 2'(= a3◂ [ a44◂ [ a2◂ [ a40◂ [ ]]]] )
; .mov_ptn 0(<2)◂0(<2)◂1(<2)◂{ } ⊢ 2'(= a3◂ [ a44◂ [ a2◂ [ a40◂ [ ]]]] )
	mov rax,unt 
	mov rax,unt_1
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,16
	jmp LB_4301
LB_4301:
	cmp BYTE [r8+6],0
	jnz LB_4276
	POP_GRM_SCC
	ret
LB_4276:
	RB_GRM
	jmp LB_4304
LB_4303:
	add r14,1 
LB_4304:
	cmp r14,r9
	jge LB_4305
	JZ_SPC BYTE [r13+8+r14], LB_4303
LB_4305
	call GRM_221
	cmp BYTE [r8+6],0
	jnz LB_4308
	jmp LB_4309
LB_4308:
	jmp LB_4306
LB_4309:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a44◂ [ *{ }] ) ⊢ 8'(= a44◂ [ *{ }] )
; .mov_ptn 2'(= a44◂ [ *{ }] ) ⊢ 8'(= a44◂ [ *{ }] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_4307
LB_4306:
	add rsp,0
	jmp LB_4302
LB_4307:
	jmp LB_4311
LB_4310:
	add r14,1 
LB_4311:
	cmp r14,r9
	jge LB_4312
	JZ_SPC BYTE [r13+8+r14], LB_4310
LB_4312
	call GRM_249
	cmp BYTE [r8+6],0
	jnz LB_4315
	jmp LB_4316
LB_4315:
	jmp LB_4313
LB_4316:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a44◂ [ a40◂ [ ]] ) ⊢ 9'(= a44◂ [ a40◂ [ ]] )
; .mov_ptn 2'(= a44◂ [ a40◂ [ ]] ) ⊢ 9'(= a44◂ [ a40◂ [ ]] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_4314
LB_4313:
	add rsp,8
	jmp LB_4302
LB_4314:
	jmp LB_4318
LB_4317:
	add r14,1 
LB_4318:
	cmp r14,r9
	jge LB_4319
	JZ_SPC BYTE [r13+8+r14], LB_4317
LB_4319
	call GRM_253
	cmp BYTE [r8+6],0
	jnz LB_4322
	jmp LB_4323
LB_4322:
	jmp LB_4320
LB_4323:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a44◂ [ a2◂ [ a40◂ [ ]]] ) ⊢ 10'(= a44◂ [ a2◂ [ a40◂ [ ]]] )
; .mov_ptn 2'(= a44◂ [ a2◂ [ a40◂ [ ]]] ) ⊢ 10'(= a44◂ [ a2◂ [ a40◂ [ ]]] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_4321
LB_4320:
	add rsp,16
	jmp LB_4302
LB_4321:
	mov QWORD [rsp+8*3],r14
	mov r13,QWORD [rsp+16+8*3]
	mov r14,QWORD [rsp+8*3]
	jmp LB_4324
LB_4324
;; rsp=3 , %2308~1'(= r ) %2307~0'(= r ) %2306~10'(= a44◂ [ a2◂ [ a40◂ [ ]]] ) %2305~9'(= a44◂ [ a40◂ [ ]] ) %2304~8'(= a44◂ [ *{ }] ) 
; #199 { 9'(= a44◂ [ a40◂ [ ]] ) 10'(= a44◂ [ a2◂ [ a40◂ [ ]]] ) } ⊢ 2'(= a44◂ [ *{ a40◂ [ ]a2◂ [ a40◂ [ ]]}] )
	sub rsp,16
	mov QWORD [rsp+8*0],r13
	mov QWORD [rsp+8*1],r14
; .mov_ptn2 { 9'(= a44◂ [ a40◂ [ ]] ) 10'(= a44◂ [ a2◂ [ a40◂ [ ]]] ) } ⊢ { 0'(= a44◂ [ a40◂ [ ]] ) 1'(= a44◂ [ a2◂ [ a40◂ [ ]]] ) }
; .mov_ptn 10'(= a44◂ [ a2◂ [ a40◂ [ ]]] ) ⊢ 1'(= a44◂ [ a2◂ [ a40◂ [ ]]] )
	mov rax,QWORD [rsp-8+8*3]
	mov r14,rax
; .mov_ptn 9'(= a44◂ [ a40◂ [ ]] ) ⊢ 0'(= a44◂ [ a40◂ [ ]] )
	mov rax,QWORD [rsp-8+8*4]
	mov r13,rax
	call LB_3822
	mov r14,QWORD [rsp-8+8*2]
	mov r8,r13
	mov r13,QWORD [rsp-8+8*1]
	add rsp,32
;; rsp=1 , %2309~2'(= a44◂ [ *{ a40◂ [ ]a2◂ [ a40◂ [ ]]}] ) %2308~1'(= r ) %2307~0'(= r ) %2304~8'(= a44◂ [ *{ }] ) 
;; ? 2'(= a44◂ [ *{ a40◂ [ ]a2◂ [ a40◂ [ ]]}] ) ⊢ 0(<2)◂{ 3'(= a40◂ [ ] ) 4'(= a2◂ [ a40◂ [ ]] ) }
	mov rdi,r8
	cmp BYTE [rdi+6],0
	jnz LB_4327
	jmp LB_4328
LB_4327:
	jmp LB_4326
LB_4328:
	mov r9, QWORD [r8+8]
	mov r10, QWORD [r8+16]
	mov QWORD [GBG_VCT+8*0],r8
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_RCD 2,rdi
;; rsp=1 , %2312~4'(= a2◂ [ a40◂ [ ]] ) %2311~3'(= a40◂ [ ] ) %2308~1'(= r ) %2307~0'(= r ) %2304~8'(= a44◂ [ *{ }] ) 
; #23 { 3'(= a40◂ [ ] ) 4'(= a2◂ [ a40◂ [ ]] ) } ⊢ 0(<2)◂{ 3'(= a40◂ [ ] ) 4'(= a2◂ [ a40◂ [ ]] ) }
;; rsp=1 , %2313~0(<2)◂{ 3'(= a40◂ [ ] ) 4'(= a2◂ [ a40◂ [ ]] ) } %2308~1'(= r ) %2307~0'(= r ) %2304~8'(= a44◂ [ *{ }] ) 
; #198 0(<2)◂{ 3'(= a40◂ [ ] ) 4'(= a2◂ [ a40◂ [ ]] ) } ⊢ 0(<2)◂0(<2)◂{ 3'(= a40◂ [ ] ) 4'(= a2◂ [ a40◂ [ ]] ) }
;; rsp=1 , %2314~0(<2)◂0(<2)◂{ 3'(= a40◂ [ ] ) 4'(= a2◂ [ a40◂ [ ]] ) } %2308~1'(= r ) %2307~0'(= r ) %2304~8'(= a44◂ [ *{ }] ) 
; #24 0(<2)◂0(<2)◂{ 3'(= a40◂ [ ] ) 4'(= a2◂ [ a40◂ [ ]] ) } ⊢ 0(<2)◂0(<2)◂0(<2)◂{ 3'(= a40◂ [ ] ) 4'(= a2◂ [ a40◂ [ ]] ) }
;; rsp=1 , %2315~0(<2)◂0(<2)◂0(<2)◂{ 3'(= a40◂ [ ] ) 4'(= a2◂ [ a40◂ [ ]] ) } %2308~1'(= r ) %2307~0'(= r ) %2304~8'(= a44◂ [ *{ }] ) 
; ∎ 0(<2)◂0(<2)◂0(<2)◂{ 3'(= a40◂ [ ] ) 4'(= a2◂ [ a40◂ [ ]] ) }
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 8'(= a44◂ [ *{ }] )
	mov rdi,QWORD [rsp-8+8*1]
	C_PUSH_REGS
	mov r8,rdi
	call LB_1876
	C_POP_REGS
; .mov_ptn2 0(<2)◂0(<2)◂0(<2)◂{ 3'(= a40◂ [ ] ) 4'(= a2◂ [ a40◂ [ ]] ) } ⊢ 2'(= a3◂ [ a44◂ [ a2◂ [ a40◂ [ ]]]] )
; .mov_ptn 0(<2)◂0(<2)◂0(<2)◂{ 3'(= a40◂ [ ] ) 4'(= a2◂ [ a40◂ [ ]] ) } ⊢ 2'(= a3◂ [ a44◂ [ a2◂ [ a40◂ [ ]]]] )
	ALC_RCD 2, rax
	mov r13,rax
	mov rax,r9
	mov QWORD [r13+8+8*0],rax
	mov rax,r10
	mov QWORD [r13+8+8*1],rax
	mov rax,r13
	mov BYTE [rax+6],0
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,8
	jmp LB_4325
LB_4326:
;; ?. 2'(= a44◂ [ *{ a40◂ [ ]a2◂ [ a40◂ [ ]]}] ) ⊢ 1(<2)◂3'(= a2◂ [ *{ rr{| l |}}] )
	mov QWORD [GBG_VCT+8*0],rdi
	mov r9,QWORD [rdi+8]
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_LN rdi
;; rsp=1 , %2310~3'(= a2◂ [ *{ rr{| l |}}] ) %2308~1'(= r ) %2307~0'(= r ) %2304~8'(= a44◂ [ *{ }] ) 
; #197 3'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 1(<2)◂3'(= a2◂ [ *{ rr{| l |}}] )
;; rsp=1 , %2316~1(<2)◂3'(= a2◂ [ *{ rr{| l |}}] ) %2308~1'(= r ) %2307~0'(= r ) %2304~8'(= a44◂ [ *{ }] ) 
; #24 1(<2)◂3'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 0(<2)◂1(<2)◂3'(= a2◂ [ *{ rr{| l |}}] )
;; rsp=1 , %2317~0(<2)◂1(<2)◂3'(= a2◂ [ *{ rr{| l |}}] ) %2308~1'(= r ) %2307~0'(= r ) %2304~8'(= a44◂ [ *{ }] ) 
; ∎ 0(<2)◂1(<2)◂3'(= a2◂ [ *{ rr{| l |}}] )
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 8'(= a44◂ [ *{ }] )
	mov rdi,QWORD [rsp-8+8*1]
	C_PUSH_REGS
	mov r8,rdi
	call LB_1876
	C_POP_REGS
; .mov_ptn2 0(<2)◂1(<2)◂3'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 2'(= a3◂ [ a44◂ [ a2◂ [ a40◂ [ ]]]] )
; .mov_ptn 0(<2)◂1(<2)◂3'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 2'(= a3◂ [ a44◂ [ a2◂ [ a40◂ [ ]]]] )
	mov rax,r9
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],1
	mov QWORD [rax+8],rdi
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,8
	jmp LB_4325
LB_4325:
	cmp BYTE [r8+6],0
	jnz LB_4302
	POP_GRM_SCC
	ret
LB_4302:
	RB_GRM
	call GRM_251
	cmp BYTE [r8+6],0
	jnz LB_4332
	jmp LB_4333
LB_4332:
	jmp LB_4330
LB_4333:
; .mov_ptn2 2'(= *{ } ) ⊢ { }
; .mov_ptn 2'(= *{ } ) ⊢ { }
	jmp LB_4331
LB_4330:
	add rsp,0
	jmp LB_4329
LB_4331:
	mov QWORD [rsp+8*0],r14
	mov r13,QWORD [rsp+16+8*0]
	mov r14,QWORD [rsp+8*0]
	jmp LB_4334
LB_4334
;; rsp=0 , %2320~1'(= r ) %2319~0'(= r ) %2318~{ } 
; #22 { } ⊢ 1(<2)◂{ }
;; rsp=0 , %2321~1(<2)◂{ } %2320~1'(= r ) %2319~0'(= r ) %2318~{ } 
; $ %[ "glb_etr 7" ] ⊢ %[ "glb_etr 7" ]
;; rsp=0 , %2322~%[ "glb_etr 7" ] %2321~1(<2)◂{ } %2320~1'(= r ) %2319~0'(= r ) %2318~{ } 
; #23 { { 0'(= r ) 1'(= r ) %[ "glb_etr 7" ] } 1(<2)◂{ } } ⊢ 0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "glb_etr 7" ] } 1(<2)◂{ } }
;; rsp=0 , %2323~0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "glb_etr 7" ] } 1(<2)◂{ } } %2318~{ } 
; #197 0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "glb_etr 7" ] } 1(<2)◂{ } } ⊢ 1(<2)◂0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "glb_etr 7" ] } 1(<2)◂{ } }
;; rsp=0 , %2324~1(<2)◂0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "glb_etr 7" ] } 1(<2)◂{ } } %2318~{ } 
; #24 1(<2)◂0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "glb_etr 7" ] } 1(<2)◂{ } } ⊢ 0(<2)◂1(<2)◂0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "glb_etr 7" ] } 1(<2)◂{ } }
;; rsp=0 , %2325~0(<2)◂1(<2)◂0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "glb_etr 7" ] } 1(<2)◂{ } } %2318~{ } 
; ∎ 0(<2)◂1(<2)◂0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "glb_etr 7" ] } 1(<2)◂{ } }
; .dlt.ptn { }
; .mov_ptn2 0(<2)◂1(<2)◂0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "glb_etr 7" ] } 1(<2)◂{ } } ⊢ 2'(= a3◂ [ a44◂ [ a2◂ [ a40◂ [ ]]]] )
; .mov_ptn 0(<2)◂1(<2)◂0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "glb_etr 7" ] } 1(<2)◂{ } } ⊢ 2'(= a3◂ [ a44◂ [ a2◂ [ a40◂ [ ]]]] )
	ALC_RCD 2, rax
	mov r9,rax
	ALC_RCD 3, rax
	mov r10,rax
	mov rax,r13
	mov QWORD [r10+8+8*0],rax
	mov rax,r14
	mov QWORD [r10+8+8*1],rax
	mov rsi,1  
	mov rdi,24
	xor rax,rax 
	C_CALL_SF calloc
	mov QWORD [rax],9
	mov BYTE [rax+8+0],103
	mov BYTE [rax+8+1],108
	mov BYTE [rax+8+2],98
	mov BYTE [rax+8+3],95
	mov BYTE [rax+8+4],101
	mov BYTE [rax+8+5],116
	mov BYTE [rax+8+6],114
	mov BYTE [rax+8+7],32
	mov BYTE [rax+8+8],55
	mov QWORD [r10+8+8*2],rax
	mov rax,r10
	mov QWORD [r9+8+8*0],rax
	mov rax,unt 
	mov rax,unt_1
	mov QWORD [r9+8+8*1],rax
	mov rax,r9
	mov BYTE [rax+6],0
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],1
	mov QWORD [rax+8],rdi
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	jmp LB_4335
LB_4335:
	cmp BYTE [r8+6],0
	jnz LB_4329
	POP_GRM_SCC
	ret
LB_4329:
	POP_GRM_FAIL 
	ret
ETR_254:
	mov r9,0x0000_ffff_ffff_ffff
	and r9,[r13]
	call GRM_254
	ret
GRM_254:
	PUSH_GRM
	jmp LB_4338
LB_4337:
	add r14,1 
LB_4338:
	cmp r14,r9
	jge LB_4339
	JZ_SPC BYTE [r13+8+r14], LB_4337
LB_4339
	lea rax,[r14+1]
	cmp rax,r9
	jg LB_4342
	jmp LB_4343
LB_4342:
	mov r8,unt_1
	jmp LB_4340
LB_4343:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],64
	jnz LB_4344
	jmp LB_4345
LB_4344:
	mov r8,unt_1
	jmp LB_4340
LB_4345:
	add r14,1
	jmp LB_4341
LB_4340:
	add rsp,0
	jmp LB_4336
LB_4341:
	jmp LB_4347
LB_4346:
	add r14,1 
LB_4347:
	cmp r14,r9
	jge LB_4348
	JZ_SPC BYTE [r13+8+r14], LB_4346
LB_4348
	lea rax,[r14+1]
	cmp rax,r9
	jg LB_4351
	jmp LB_4352
LB_4351:
	mov r8,unt_1
	jmp LB_4349
LB_4352:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],46
	jnz LB_4353
	jmp LB_4354
LB_4353:
	mov r8,unt_1
	jmp LB_4349
LB_4354:
	add r14,1
	jmp LB_4350
LB_4349:
	add rsp,0
	POP_GRM_FAIL
	ret
LB_4350:
	jmp LB_4356
LB_4355:
	add r14,1 
LB_4356:
	cmp r14,r9
	jge LB_4357
	JZ_SPC BYTE [r13+8+r14], LB_4355
LB_4357
	call GRM_255
	cmp BYTE [r8+6],0
	jnz LB_4360
	jmp LB_4361
LB_4360:
	jmp LB_4358
LB_4361:
	sub rsp,16
; .mov_ptn2 2'(= *{ {| l |}a43◂ [ ]} ) ⊢ { 8'(= {| l |} ) 9'(= a43◂ [ ] ) }
; .mov_ptn 2'(= *{ {| l |}a43◂ [ ]} ) ⊢ { 8'(= {| l |} ) 9'(= a43◂ [ ] ) }
	mov r10, QWORD [r8+8]
	mov QWORD [rsp-8+8*2],r10
	mov r11, QWORD [r8+16]
	mov QWORD [rsp-8+8*1],r11
	mov rdi,r8
	FREE_RCD 2,rdi
	jmp LB_4359
LB_4358:
	add rsp,0
	POP_GRM_FAIL
	ret
LB_4359:
	jmp LB_4363
LB_4362:
	add r14,1 
LB_4363:
	cmp r14,r9
	jge LB_4364
	JZ_SPC BYTE [r13+8+r14], LB_4362
LB_4364
	call GRM_258
	cmp BYTE [r8+6],0
	jnz LB_4367
	jmp LB_4368
LB_4367:
	jmp LB_4365
LB_4368:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a2◂ [ *{ {| l |}a43◂ [ ]}] ) ⊢ 10'(= a2◂ [ *{ {| l |}a43◂ [ ]}] )
; .mov_ptn 2'(= a2◂ [ *{ {| l |}a43◂ [ ]}] ) ⊢ 10'(= a2◂ [ *{ {| l |}a43◂ [ ]}] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_4366
LB_4365:
	add rsp,16
	POP_GRM_FAIL
	ret
LB_4366:
	mov QWORD [rsp+8*3],r14
	mov r13,QWORD [rsp+16+8*3]
	mov r14,QWORD [rsp+8*3]
	jmp LB_4369
LB_4369
;; rsp=3 , %2329~1'(= r ) %2328~0'(= r ) %2327~10'(= a2◂ [ *{ {| l |}a43◂ [ ]}] ) %2326~{ 8'(= {| l |} ) 9'(= a43◂ [ ] ) } 
; #23 { { 8'(= {| l |} ) 9'(= a43◂ [ ] ) } 10'(= a2◂ [ *{ {| l |}a43◂ [ ]}] ) } ⊢ 0(<2)◂{ { 8'(= {| l |} ) 9'(= a43◂ [ ] ) } 10'(= a2◂ [ *{ {| l |}a43◂ [ ]}] ) }
;; rsp=3 , %2330~0(<2)◂{ { 8'(= {| l |} ) 9'(= a43◂ [ ] ) } 10'(= a2◂ [ *{ {| l |}a43◂ [ ]}] ) } %2329~1'(= r ) %2328~0'(= r ) 
; #176 0(<2)◂{ { 8'(= {| l |} ) 9'(= a43◂ [ ] ) } 10'(= a2◂ [ *{ {| l |}a43◂ [ ]}] ) } ⊢ 5(<6)◂0(<2)◂{ { 8'(= {| l |} ) 9'(= a43◂ [ ] ) } 10'(= a2◂ [ *{ {| l |}a43◂ [ ]}] ) }
;; rsp=3 , %2331~5(<6)◂0(<2)◂{ { 8'(= {| l |} ) 9'(= a43◂ [ ] ) } 10'(= a2◂ [ *{ {| l |}a43◂ [ ]}] ) } %2329~1'(= r ) %2328~0'(= r ) 
; #24 5(<6)◂0(<2)◂{ { 8'(= {| l |} ) 9'(= a43◂ [ ] ) } 10'(= a2◂ [ *{ {| l |}a43◂ [ ]}] ) } ⊢ 0(<2)◂5(<6)◂0(<2)◂{ { 8'(= {| l |} ) 9'(= a43◂ [ ] ) } 10'(= a2◂ [ *{ {| l |}a43◂ [ ]}] ) }
;; rsp=3 , %2332~0(<2)◂5(<6)◂0(<2)◂{ { 8'(= {| l |} ) 9'(= a43◂ [ ] ) } 10'(= a2◂ [ *{ {| l |}a43◂ [ ]}] ) } %2329~1'(= r ) %2328~0'(= r ) 
; ∎ 0(<2)◂5(<6)◂0(<2)◂{ { 8'(= {| l |} ) 9'(= a43◂ [ ] ) } 10'(= a2◂ [ *{ {| l |}a43◂ [ ]}] ) }
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂5(<6)◂0(<2)◂{ { 8'(= {| l |} ) 9'(= a43◂ [ ] ) } 10'(= a2◂ [ *{ {| l |}a43◂ [ ]}] ) } ⊢ 2'(= a3◂ [ a40◂ [ ]] )
; .mov_ptn 0(<2)◂5(<6)◂0(<2)◂{ { 8'(= {| l |} ) 9'(= a43◂ [ ] ) } 10'(= a2◂ [ *{ {| l |}a43◂ [ ]}] ) } ⊢ 2'(= a3◂ [ a40◂ [ ]] )
	ALC_RCD 2, rax
	mov r13,rax
	ALC_RCD 2, rax
	mov r14,rax
	mov rax,QWORD [rsp-8+8*3]
	mov QWORD [r14+8+8*0],rax
	mov rax,QWORD [rsp-8+8*2]
	mov QWORD [r14+8+8*1],rax
	mov rax,r14
	mov QWORD [r13+8+8*0],rax
	mov rax,QWORD [rsp-8+8*1]
	mov QWORD [r13+8+8*1],rax
	mov rax,r13
	mov BYTE [rax+6],0
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],5
	mov QWORD [rax+8],rdi
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,24
	jmp LB_4370
LB_4370:
	cmp BYTE [r8+6],0
	jnz LB_4336
	POP_GRM_SCC
	ret
LB_4336:
	RB_GRM
	jmp LB_4373
LB_4372:
	add r14,1 
LB_4373:
	cmp r14,r9
	jge LB_4374
	JZ_SPC BYTE [r13+8+r14], LB_4372
LB_4374
	call GRM_255
	cmp BYTE [r8+6],0
	jnz LB_4377
	jmp LB_4378
LB_4377:
	jmp LB_4375
LB_4378:
	sub rsp,16
; .mov_ptn2 2'(= *{ {| l |}a43◂ [ ]} ) ⊢ { 8'(= {| l |} ) 9'(= a43◂ [ ] ) }
; .mov_ptn 2'(= *{ {| l |}a43◂ [ ]} ) ⊢ { 8'(= {| l |} ) 9'(= a43◂ [ ] ) }
	mov r10, QWORD [r8+8]
	mov QWORD [rsp-8+8*2],r10
	mov r11, QWORD [r8+16]
	mov QWORD [rsp-8+8*1],r11
	mov rdi,r8
	FREE_RCD 2,rdi
	jmp LB_4376
LB_4375:
	add rsp,0
	jmp LB_4371
LB_4376:
	mov QWORD [rsp+8*2],r14
	mov r13,QWORD [rsp+16+8*2]
	mov r14,QWORD [rsp+8*2]
	jmp LB_4379
LB_4379
;; rsp=2 , %2335~1'(= r ) %2334~0'(= r ) %2333~{ 8'(= {| l |} ) 9'(= a43◂ [ ] ) } 
; #177 { 8'(= {| l |} ) 9'(= a43◂ [ ] ) } ⊢ 4(<6)◂{ 8'(= {| l |} ) 9'(= a43◂ [ ] ) }
;; rsp=2 , %2336~4(<6)◂{ 8'(= {| l |} ) 9'(= a43◂ [ ] ) } %2335~1'(= r ) %2334~0'(= r ) 
; #24 4(<6)◂{ 8'(= {| l |} ) 9'(= a43◂ [ ] ) } ⊢ 0(<2)◂4(<6)◂{ 8'(= {| l |} ) 9'(= a43◂ [ ] ) }
;; rsp=2 , %2337~0(<2)◂4(<6)◂{ 8'(= {| l |} ) 9'(= a43◂ [ ] ) } %2335~1'(= r ) %2334~0'(= r ) 
; ∎ 0(<2)◂4(<6)◂{ 8'(= {| l |} ) 9'(= a43◂ [ ] ) }
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂4(<6)◂{ 8'(= {| l |} ) 9'(= a43◂ [ ] ) } ⊢ 2'(= a3◂ [ a40◂ [ ]] )
; .mov_ptn 0(<2)◂4(<6)◂{ 8'(= {| l |} ) 9'(= a43◂ [ ] ) } ⊢ 2'(= a3◂ [ a40◂ [ ]] )
	ALC_RCD 2, rax
	mov r13,rax
	mov rax,QWORD [rsp-8+8*2]
	mov QWORD [r13+8+8*0],rax
	mov rax,QWORD [rsp-8+8*1]
	mov QWORD [r13+8+8*1],rax
	mov rax,r13
	mov BYTE [rax+6],4
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,16
	jmp LB_4380
LB_4380:
	cmp BYTE [r8+6],0
	jnz LB_4371
	POP_GRM_SCC
	ret
LB_4371:
	RB_GRM
	mov QWORD [rsp+8*0],r14
	mov r13,QWORD [rsp+16+8*0]
	mov r14,QWORD [rsp+8*0]
	jmp LB_4382
LB_4382
;; rsp=0 , %2339~1'(= r ) %2338~0'(= r ) 
; $ %[ "dt_etr 0" ] ⊢ %[ "dt_etr 0" ]
;; rsp=0 , %2340~%[ "dt_etr 0" ] %2339~1'(= r ) %2338~0'(= r ) 
; #10 %[ "dt_etr 0" ] ⊢ %[ "dt_etr 0" ]
	mov rdi,fmt_emt
	call emt_stg
	mov rdi,LB_4384
	call emt_stg 
	mov rdi,fmt_nl
	call emt_stg
	jmp LB_4385
LB_4385:
;; rsp=0 , %2341~%[ "dt_etr 0" ] %2339~1'(= r ) %2338~0'(= r ) 
; #25 { } ⊢ 1(<2)◂{ }
;; rsp=0 , %2342~1(<2)◂{ } %2341~%[ "dt_etr 0" ] %2339~1'(= r ) %2338~0'(= r ) 
; ∎ 1(<2)◂{ }
; .dlt.ptn %[ "dt_etr 0" ]
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 1(<2)◂{ } ⊢ 2'(= a3◂ [ a40◂ [ ]] )
; .mov_ptn 1(<2)◂{ } ⊢ 2'(= a3◂ [ a40◂ [ ]] )
	mov rax,unt 
	mov rax,unt_1
	mov r8,rax
	jmp LB_4383
LB_4383:
	cmp BYTE [r8+6],0
	jnz LB_4381
	POP_GRM_SCC
	ret
LB_4381:
	POP_GRM_FAIL 
	ret
ETR_255:
	mov r9,0x0000_ffff_ffff_ffff
	and r9,[r13]
	call GRM_255
	ret
GRM_255:
	PUSH_GRM
	jmp LB_4388
LB_4387:
	add r14,1 
LB_4388:
	cmp r14,r9
	jge LB_4389
	JZ_SPC BYTE [r13+8+r14], LB_4387
LB_4389
	call GRM_79
	cmp BYTE [r8+6],0
	jnz LB_4392
	jmp LB_4393
LB_4392:
	jmp LB_4390
LB_4393:
	sub rsp,8
; .mov_ptn2 2'(= {| l |} ) ⊢ 8'(= {| l |} )
; .mov_ptn 2'(= {| l |} ) ⊢ 8'(= {| l |} )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_4391
LB_4390:
	add rsp,0
	jmp LB_4386
LB_4391:
	jmp LB_4395
LB_4394:
	add r14,1 
LB_4395:
	cmp r14,r9
	jge LB_4396
	JZ_SPC BYTE [r13+8+r14], LB_4394
LB_4396
	call GRM_256
	cmp BYTE [r8+6],0
	jnz LB_4399
	jmp LB_4400
LB_4399:
	jmp LB_4397
LB_4400:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a2◂ [ {| l |}] ) ⊢ 9'(= a2◂ [ {| l |}] )
; .mov_ptn 2'(= a2◂ [ {| l |}] ) ⊢ 9'(= a2◂ [ {| l |}] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_4398
LB_4397:
	add rsp,8
	jmp LB_4386
LB_4398:
	jmp LB_4402
LB_4401:
	add r14,1 
LB_4402:
	cmp r14,r9
	jge LB_4403
	JZ_SPC BYTE [r13+8+r14], LB_4401
LB_4403
	lea rax,[r14+1]
	cmp rax,r9
	jg LB_4406
	jmp LB_4407
LB_4406:
	mov r8,unt_1
	jmp LB_4404
LB_4407:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],61
	jnz LB_4408
	jmp LB_4409
LB_4408:
	mov r8,unt_1
	jmp LB_4404
LB_4409:
	add r14,1
	jmp LB_4405
LB_4404:
	add rsp,16
	jmp LB_4386
LB_4405:
	jmp LB_4411
LB_4410:
	add r14,1 
LB_4411:
	cmp r14,r9
	jge LB_4412
	JZ_SPC BYTE [r13+8+r14], LB_4410
LB_4412
	call GRM_215
	cmp BYTE [r8+6],0
	jnz LB_4415
	jmp LB_4416
LB_4415:
	jmp LB_4413
LB_4416:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a32◂ [ ] ) ⊢ 10'(= a32◂ [ ] )
; .mov_ptn 2'(= a32◂ [ ] ) ⊢ 10'(= a32◂ [ ] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_4414
LB_4413:
	add rsp,16
	POP_GRM_FAIL
	ret
LB_4414:
	mov QWORD [rsp+8*3],r14
	mov r13,QWORD [rsp+16+8*3]
	mov r14,QWORD [rsp+8*3]
	jmp LB_4417
LB_4417
;; rsp=3 , %2347~1'(= r ) %2346~0'(= r ) %2345~10'(= a32◂ [ ] ) %2344~9'(= a2◂ [ {| l |}] ) %2343~8'(= {| l |} ) 
; #169 { 9'(= a2◂ [ {| l |}] ) 10'(= a32◂ [ ] ) } ⊢ 1(<2)◂{ 9'(= a2◂ [ {| l |}] ) 10'(= a32◂ [ ] ) }
;; rsp=3 , %2348~1(<2)◂{ 9'(= a2◂ [ {| l |}] ) 10'(= a32◂ [ ] ) } %2347~1'(= r ) %2346~0'(= r ) %2343~8'(= {| l |} ) 
; #24 { 8'(= {| l |} ) 1(<2)◂{ 9'(= a2◂ [ {| l |}] ) 10'(= a32◂ [ ] ) } } ⊢ 0(<2)◂{ 8'(= {| l |} ) 1(<2)◂{ 9'(= a2◂ [ {| l |}] ) 10'(= a32◂ [ ] ) } }
;; rsp=3 , %2349~0(<2)◂{ 8'(= {| l |} ) 1(<2)◂{ 9'(= a2◂ [ {| l |}] ) 10'(= a32◂ [ ] ) } } %2347~1'(= r ) %2346~0'(= r ) 
; ∎ 0(<2)◂{ 8'(= {| l |} ) 1(<2)◂{ 9'(= a2◂ [ {| l |}] ) 10'(= a32◂ [ ] ) } }
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂{ 8'(= {| l |} ) 1(<2)◂{ 9'(= a2◂ [ {| l |}] ) 10'(= a32◂ [ ] ) } } ⊢ 2'(= a3◂ [ *{ {| l |}a43◂ [ ]}] )
; .mov_ptn 0(<2)◂{ 8'(= {| l |} ) 1(<2)◂{ 9'(= a2◂ [ {| l |}] ) 10'(= a32◂ [ ] ) } } ⊢ 2'(= a3◂ [ *{ {| l |}a43◂ [ ]}] )
	ALC_RCD 2, rax
	mov r13,rax
	mov rax,QWORD [rsp-8+8*3]
	mov QWORD [r13+8+8*0],rax
	ALC_RCD 2, rax
	mov r14,rax
	mov rax,QWORD [rsp-8+8*2]
	mov QWORD [r14+8+8*0],rax
	mov rax,QWORD [rsp-8+8*1]
	mov QWORD [r14+8+8*1],rax
	mov rax,r14
	mov BYTE [rax+6],1
	mov QWORD [r13+8+8*1],rax
	mov rax,r13
	mov BYTE [rax+6],0
	mov r8,rax
	add rsp,24
	jmp LB_4418
LB_4418:
	cmp BYTE [r8+6],0
	jnz LB_4386
	POP_GRM_SCC
	ret
LB_4386:
	RB_GRM
	jmp LB_4421
LB_4420:
	add r14,1 
LB_4421:
	cmp r14,r9
	jge LB_4422
	JZ_SPC BYTE [r13+8+r14], LB_4420
LB_4422
	call GRM_79
	cmp BYTE [r8+6],0
	jnz LB_4425
	jmp LB_4426
LB_4425:
	jmp LB_4423
LB_4426:
	sub rsp,8
; .mov_ptn2 2'(= {| l |} ) ⊢ 8'(= {| l |} )
; .mov_ptn 2'(= {| l |} ) ⊢ 8'(= {| l |} )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_4424
LB_4423:
	add rsp,0
	jmp LB_4419
LB_4424:
	jmp LB_4428
LB_4427:
	add r14,1 
LB_4428:
	cmp r14,r9
	jge LB_4429
	JZ_SPC BYTE [r13+8+r14], LB_4427
LB_4429
	call GRM_256
	cmp BYTE [r8+6],0
	jnz LB_4432
	jmp LB_4433
LB_4432:
	jmp LB_4430
LB_4433:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a2◂ [ {| l |}] ) ⊢ 9'(= a2◂ [ {| l |}] )
; .mov_ptn 2'(= a2◂ [ {| l |}] ) ⊢ 9'(= a2◂ [ {| l |}] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_4431
LB_4430:
	add rsp,8
	jmp LB_4419
LB_4431:
	jmp LB_4435
LB_4434:
	add r14,1 
LB_4435:
	cmp r14,r9
	jge LB_4436
	JZ_SPC BYTE [r13+8+r14], LB_4434
LB_4436
	call GRM_221
	cmp BYTE [r8+6],0
	jnz LB_4439
	jmp LB_4440
LB_4439:
	jmp LB_4437
LB_4440:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a44◂ [ *{ }] ) ⊢ 10'(= a44◂ [ *{ }] )
; .mov_ptn 2'(= a44◂ [ *{ }] ) ⊢ 10'(= a44◂ [ *{ }] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_4438
LB_4437:
	add rsp,16
	jmp LB_4419
LB_4438:
	jmp LB_4442
LB_4441:
	add r14,1 
LB_4442:
	cmp r14,r9
	jge LB_4443
	JZ_SPC BYTE [r13+8+r14], LB_4441
LB_4443
	lea rax,[r14+3]
	cmp rax,r9
	jg LB_4446
	jmp LB_4447
LB_4446:
	mov r8,unt_1
	jmp LB_4444
LB_4447:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],226
	jnz LB_4448
	cmp BYTE [rdi+1],136
	jnz LB_4448
	cmp BYTE [rdi+2],144
	jnz LB_4448
	jmp LB_4449
LB_4448:
	mov r8,unt_1
	jmp LB_4444
LB_4449:
	add r14,3
	jmp LB_4445
LB_4444:
	add rsp,24
	jmp LB_4419
LB_4445:
	jmp LB_4451
LB_4450:
	add r14,1 
LB_4451:
	cmp r14,r9
	jge LB_4452
	JZ_SPC BYTE [r13+8+r14], LB_4450
LB_4452
	call GRM_79
	cmp BYTE [r8+6],0
	jnz LB_4455
	jmp LB_4456
LB_4455:
	jmp LB_4453
LB_4456:
	sub rsp,8
; .mov_ptn2 2'(= {| l |} ) ⊢ 11'(= {| l |} )
; .mov_ptn 2'(= {| l |} ) ⊢ 11'(= {| l |} )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_4454
LB_4453:
	add rsp,24
	jmp LB_4419
LB_4454:
	jmp LB_4458
LB_4457:
	add r14,1 
LB_4458:
	cmp r14,r9
	jge LB_4459
	JZ_SPC BYTE [r13+8+r14], LB_4457
LB_4459
	lea rax,[r14+1]
	cmp rax,r9
	jg LB_4462
	jmp LB_4463
LB_4462:
	mov r8,unt_1
	jmp LB_4460
LB_4463:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],58
	jnz LB_4464
	jmp LB_4465
LB_4464:
	mov r8,unt_1
	jmp LB_4460
LB_4465:
	add r14,1
	jmp LB_4461
LB_4460:
	add rsp,32
	jmp LB_4419
LB_4461:
	jmp LB_4467
LB_4466:
	add r14,1 
LB_4467:
	cmp r14,r9
	jge LB_4468
	JZ_SPC BYTE [r13+8+r14], LB_4466
LB_4468
	call GRM_215
	cmp BYTE [r8+6],0
	jnz LB_4471
	jmp LB_4472
LB_4471:
	jmp LB_4469
LB_4472:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a32◂ [ ] ) ⊢ 12'(= a32◂ [ ] )
; .mov_ptn 2'(= a32◂ [ ] ) ⊢ 12'(= a32◂ [ ] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_4470
LB_4469:
	add rsp,32
	jmp LB_4419
LB_4470:
	jmp LB_4474
LB_4473:
	add r14,1 
LB_4474:
	cmp r14,r9
	jge LB_4475
	JZ_SPC BYTE [r13+8+r14], LB_4473
LB_4475
	call GRM_259
	cmp BYTE [r8+6],0
	jnz LB_4478
	jmp LB_4479
LB_4478:
	jmp LB_4476
LB_4479:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a2◂ [ *{ {| l |}a32◂ [ ]}] ) ⊢ 13'(= a2◂ [ *{ {| l |}a32◂ [ ]}] )
; .mov_ptn 2'(= a2◂ [ *{ {| l |}a32◂ [ ]}] ) ⊢ 13'(= a2◂ [ *{ {| l |}a32◂ [ ]}] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_4477
LB_4476:
	add rsp,40
	jmp LB_4419
LB_4477:
	mov QWORD [rsp+8*6],r14
	mov r13,QWORD [rsp+16+8*6]
	mov r14,QWORD [rsp+8*6]
	jmp LB_4480
LB_4480
;; rsp=6 , %2357~1'(= r ) %2356~0'(= r ) %2355~13'(= a2◂ [ *{ {| l |}a32◂ [ ]}] ) %2354~12'(= a32◂ [ ] ) %2353~11'(= {| l |} ) %2352~10'(= a44◂ [ *{ }] ) %2351~9'(= a2◂ [ {| l |}] ) %2350~8'(= {| l |} ) 
; #23 { { 11'(= {| l |} ) 12'(= a32◂ [ ] ) } 13'(= a2◂ [ *{ {| l |}a32◂ [ ]}] ) } ⊢ 0(<2)◂{ { 11'(= {| l |} ) 12'(= a32◂ [ ] ) } 13'(= a2◂ [ *{ {| l |}a32◂ [ ]}] ) }
;; rsp=6 , %2358~0(<2)◂{ { 11'(= {| l |} ) 12'(= a32◂ [ ] ) } 13'(= a2◂ [ *{ {| l |}a32◂ [ ]}] ) } %2357~1'(= r ) %2356~0'(= r ) %2352~10'(= a44◂ [ *{ }] ) %2351~9'(= a2◂ [ {| l |}] ) %2350~8'(= {| l |} ) 
; #170 { 9'(= a2◂ [ {| l |}] ) 0(<2)◂{ { 11'(= {| l |} ) 12'(= a32◂ [ ] ) } 13'(= a2◂ [ *{ {| l |}a32◂ [ ]}] ) } } ⊢ 0(<2)◂{ 9'(= a2◂ [ {| l |}] ) 0(<2)◂{ { 11'(= {| l |} ) 12'(= a32◂ [ ] ) } 13'(= a2◂ [ *{ {| l |}a32◂ [ ]}] ) } }
;; rsp=6 , %2359~0(<2)◂{ 9'(= a2◂ [ {| l |}] ) 0(<2)◂{ { 11'(= {| l |} ) 12'(= a32◂ [ ] ) } 13'(= a2◂ [ *{ {| l |}a32◂ [ ]}] ) } } %2357~1'(= r ) %2356~0'(= r ) %2352~10'(= a44◂ [ *{ }] ) %2350~8'(= {| l |} ) 
; #24 { 8'(= {| l |} ) 0(<2)◂{ 9'(= a2◂ [ {| l |}] ) 0(<2)◂{ { 11'(= {| l |} ) 12'(= a32◂ [ ] ) } 13'(= a2◂ [ *{ {| l |}a32◂ [ ]}] ) } } } ⊢ 0(<2)◂{ 8'(= {| l |} ) 0(<2)◂{ 9'(= a2◂ [ {| l |}] ) 0(<2)◂{ { 11'(= {| l |} ) 12'(= a32◂ [ ] ) } 13'(= a2◂ [ *{ {| l |}a32◂ [ ]}] ) } } }
;; rsp=6 , %2360~0(<2)◂{ 8'(= {| l |} ) 0(<2)◂{ 9'(= a2◂ [ {| l |}] ) 0(<2)◂{ { 11'(= {| l |} ) 12'(= a32◂ [ ] ) } 13'(= a2◂ [ *{ {| l |}a32◂ [ ]}] ) } } } %2357~1'(= r ) %2356~0'(= r ) %2352~10'(= a44◂ [ *{ }] ) 
; ∎ 0(<2)◂{ 8'(= {| l |} ) 0(<2)◂{ 9'(= a2◂ [ {| l |}] ) 0(<2)◂{ { 11'(= {| l |} ) 12'(= a32◂ [ ] ) } 13'(= a2◂ [ *{ {| l |}a32◂ [ ]}] ) } } }
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 10'(= a44◂ [ *{ }] )
	mov rdi,QWORD [rsp-8+8*4]
	C_PUSH_REGS
	mov r8,rdi
	call LB_1876
	C_POP_REGS
; .mov_ptn2 0(<2)◂{ 8'(= {| l |} ) 0(<2)◂{ 9'(= a2◂ [ {| l |}] ) 0(<2)◂{ { 11'(= {| l |} ) 12'(= a32◂ [ ] ) } 13'(= a2◂ [ *{ {| l |}a32◂ [ ]}] ) } } } ⊢ 2'(= a3◂ [ *{ {| l |}a43◂ [ ]}] )
; .mov_ptn 0(<2)◂{ 8'(= {| l |} ) 0(<2)◂{ 9'(= a2◂ [ {| l |}] ) 0(<2)◂{ { 11'(= {| l |} ) 12'(= a32◂ [ ] ) } 13'(= a2◂ [ *{ {| l |}a32◂ [ ]}] ) } } } ⊢ 2'(= a3◂ [ *{ {| l |}a43◂ [ ]}] )
	ALC_RCD 2, rax
	mov r13,rax
	mov rax,QWORD [rsp-8+8*6]
	mov QWORD [r13+8+8*0],rax
	ALC_RCD 2, rax
	mov r14,rax
	mov rax,QWORD [rsp-8+8*5]
	mov QWORD [r14+8+8*0],rax
	ALC_RCD 2, rax
	mov r9,rax
	ALC_RCD 2, rax
	mov r10,rax
	mov rax,QWORD [rsp-8+8*3]
	mov QWORD [r10+8+8*0],rax
	mov rax,QWORD [rsp-8+8*2]
	mov QWORD [r10+8+8*1],rax
	mov rax,r10
	mov QWORD [r9+8+8*0],rax
	mov rax,QWORD [rsp-8+8*1]
	mov QWORD [r9+8+8*1],rax
	mov rax,r9
	mov BYTE [rax+6],0
	mov QWORD [r14+8+8*1],rax
	mov rax,r14
	mov BYTE [rax+6],0
	mov QWORD [r13+8+8*1],rax
	mov rax,r13
	mov BYTE [rax+6],0
	mov r8,rax
	add rsp,48
	jmp LB_4481
LB_4481:
	cmp BYTE [r8+6],0
	jnz LB_4419
	POP_GRM_SCC
	ret
LB_4419:
	POP_GRM_FAIL 
	ret
ETR_256:
	mov r9,0x0000_ffff_ffff_ffff
	and r9,[r13]
	call GRM_256
	ret
GRM_256:
	PUSH_GRM
	jmp LB_4484
LB_4483:
	add r14,1 
LB_4484:
	cmp r14,r9
	jge LB_4485
	JZ_SPC BYTE [r13+8+r14], LB_4483
LB_4485
	lea rax,[r14+3]
	cmp rax,r9
	jg LB_4488
	jmp LB_4489
LB_4488:
	mov r8,unt_1
	jmp LB_4486
LB_4489:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],226
	jnz LB_4490
	cmp BYTE [rdi+1],151
	jnz LB_4490
	cmp BYTE [rdi+2],130
	jnz LB_4490
	jmp LB_4491
LB_4490:
	mov r8,unt_1
	jmp LB_4486
LB_4491:
	add r14,3
	jmp LB_4487
LB_4486:
	add rsp,0
	jmp LB_4482
LB_4487:
	jmp LB_4493
LB_4492:
	add r14,1 
LB_4493:
	cmp r14,r9
	jge LB_4494
	JZ_SPC BYTE [r13+8+r14], LB_4492
LB_4494
	call GRM_220
	cmp BYTE [r8+6],0
	jnz LB_4497
	jmp LB_4498
LB_4497:
	jmp LB_4495
LB_4498:
	sub rsp,8
; .mov_ptn2 2'(= {| l |} ) ⊢ 8'(= {| l |} )
; .mov_ptn 2'(= {| l |} ) ⊢ 8'(= {| l |} )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_4496
LB_4495:
	add rsp,0
	POP_GRM_FAIL
	ret
LB_4496:
	jmp LB_4500
LB_4499:
	add r14,1 
LB_4500:
	cmp r14,r9
	jge LB_4501
	JZ_SPC BYTE [r13+8+r14], LB_4499
LB_4501
	call GRM_257
	cmp BYTE [r8+6],0
	jnz LB_4504
	jmp LB_4505
LB_4504:
	jmp LB_4502
LB_4505:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a2◂ [ {| l |}] ) ⊢ 9'(= a2◂ [ {| l |}] )
; .mov_ptn 2'(= a2◂ [ {| l |}] ) ⊢ 9'(= a2◂ [ {| l |}] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_4503
LB_4502:
	add rsp,8
	POP_GRM_FAIL
	ret
LB_4503:
	mov QWORD [rsp+8*2],r14
	mov r13,QWORD [rsp+16+8*2]
	mov r14,QWORD [rsp+8*2]
	jmp LB_4506
LB_4506
;; rsp=2 , %2364~1'(= r ) %2363~0'(= r ) %2362~9'(= a2◂ [ {| l |}] ) %2361~8'(= {| l |} ) 
; #23 { 8'(= {| l |} ) 9'(= a2◂ [ {| l |}] ) } ⊢ 0(<2)◂{ 8'(= {| l |} ) 9'(= a2◂ [ {| l |}] ) }
;; rsp=2 , %2365~0(<2)◂{ 8'(= {| l |} ) 9'(= a2◂ [ {| l |}] ) } %2364~1'(= r ) %2363~0'(= r ) 
; #24 0(<2)◂{ 8'(= {| l |} ) 9'(= a2◂ [ {| l |}] ) } ⊢ 0(<2)◂0(<2)◂{ 8'(= {| l |} ) 9'(= a2◂ [ {| l |}] ) }
;; rsp=2 , %2366~0(<2)◂0(<2)◂{ 8'(= {| l |} ) 9'(= a2◂ [ {| l |}] ) } %2364~1'(= r ) %2363~0'(= r ) 
; ∎ 0(<2)◂0(<2)◂{ 8'(= {| l |} ) 9'(= a2◂ [ {| l |}] ) }
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂0(<2)◂{ 8'(= {| l |} ) 9'(= a2◂ [ {| l |}] ) } ⊢ 2'(= a3◂ [ a2◂ [ {| l |}]] )
; .mov_ptn 0(<2)◂0(<2)◂{ 8'(= {| l |} ) 9'(= a2◂ [ {| l |}] ) } ⊢ 2'(= a3◂ [ a2◂ [ {| l |}]] )
	ALC_RCD 2, rax
	mov r13,rax
	mov rax,QWORD [rsp-8+8*2]
	mov QWORD [r13+8+8*0],rax
	mov rax,QWORD [rsp-8+8*1]
	mov QWORD [r13+8+8*1],rax
	mov rax,r13
	mov BYTE [rax+6],0
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,16
	jmp LB_4507
LB_4507:
	cmp BYTE [r8+6],0
	jnz LB_4482
	POP_GRM_SCC
	ret
LB_4482:
	RB_GRM
	jmp LB_4510
LB_4509:
	add r14,1 
LB_4510:
	cmp r14,r9
	jge LB_4511
	JZ_SPC BYTE [r13+8+r14], LB_4509
LB_4511
	call GRM_220
	cmp BYTE [r8+6],0
	jnz LB_4514
	jmp LB_4515
LB_4514:
	jmp LB_4512
LB_4515:
	sub rsp,8
; .mov_ptn2 2'(= {| l |} ) ⊢ 8'(= {| l |} )
; .mov_ptn 2'(= {| l |} ) ⊢ 8'(= {| l |} )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_4513
LB_4512:
	add rsp,0
	jmp LB_4508
LB_4513:
	jmp LB_4517
LB_4516:
	add r14,1 
LB_4517:
	cmp r14,r9
	jge LB_4518
	JZ_SPC BYTE [r13+8+r14], LB_4516
LB_4518
	call GRM_257
	cmp BYTE [r8+6],0
	jnz LB_4521
	jmp LB_4522
LB_4521:
	jmp LB_4519
LB_4522:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a2◂ [ {| l |}] ) ⊢ 9'(= a2◂ [ {| l |}] )
; .mov_ptn 2'(= a2◂ [ {| l |}] ) ⊢ 9'(= a2◂ [ {| l |}] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_4520
LB_4519:
	add rsp,8
	POP_GRM_FAIL
	ret
LB_4520:
	mov QWORD [rsp+8*2],r14
	mov r13,QWORD [rsp+16+8*2]
	mov r14,QWORD [rsp+8*2]
	jmp LB_4523
LB_4523
;; rsp=2 , %2370~1'(= r ) %2369~0'(= r ) %2368~9'(= a2◂ [ {| l |}] ) %2367~8'(= {| l |} ) 
; #23 { 8'(= {| l |} ) 9'(= a2◂ [ {| l |}] ) } ⊢ 0(<2)◂{ 8'(= {| l |} ) 9'(= a2◂ [ {| l |}] ) }
;; rsp=2 , %2371~0(<2)◂{ 8'(= {| l |} ) 9'(= a2◂ [ {| l |}] ) } %2370~1'(= r ) %2369~0'(= r ) 
; #24 0(<2)◂{ 8'(= {| l |} ) 9'(= a2◂ [ {| l |}] ) } ⊢ 0(<2)◂0(<2)◂{ 8'(= {| l |} ) 9'(= a2◂ [ {| l |}] ) }
;; rsp=2 , %2372~0(<2)◂0(<2)◂{ 8'(= {| l |} ) 9'(= a2◂ [ {| l |}] ) } %2370~1'(= r ) %2369~0'(= r ) 
; ∎ 0(<2)◂0(<2)◂{ 8'(= {| l |} ) 9'(= a2◂ [ {| l |}] ) }
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂0(<2)◂{ 8'(= {| l |} ) 9'(= a2◂ [ {| l |}] ) } ⊢ 2'(= a3◂ [ a2◂ [ {| l |}]] )
; .mov_ptn 0(<2)◂0(<2)◂{ 8'(= {| l |} ) 9'(= a2◂ [ {| l |}] ) } ⊢ 2'(= a3◂ [ a2◂ [ {| l |}]] )
	ALC_RCD 2, rax
	mov r13,rax
	mov rax,QWORD [rsp-8+8*2]
	mov QWORD [r13+8+8*0],rax
	mov rax,QWORD [rsp-8+8*1]
	mov QWORD [r13+8+8*1],rax
	mov rax,r13
	mov BYTE [rax+6],0
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,16
	jmp LB_4524
LB_4524:
	cmp BYTE [r8+6],0
	jnz LB_4508
	POP_GRM_SCC
	ret
LB_4508:
	RB_GRM
	mov QWORD [rsp+8*0],r14
	mov r13,QWORD [rsp+16+8*0]
	mov r14,QWORD [rsp+8*0]
	jmp LB_4526
LB_4526
;; rsp=0 , %2374~1'(= r ) %2373~0'(= r ) 
; #22 { } ⊢ 1(<2)◂{ }
;; rsp=0 , %2375~1(<2)◂{ } %2374~1'(= r ) %2373~0'(= r ) 
; #24 1(<2)◂{ } ⊢ 0(<2)◂1(<2)◂{ }
;; rsp=0 , %2376~0(<2)◂1(<2)◂{ } %2374~1'(= r ) %2373~0'(= r ) 
; ∎ 0(<2)◂1(<2)◂{ }
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂1(<2)◂{ } ⊢ 2'(= a3◂ [ a2◂ [ {| l |}]] )
; .mov_ptn 0(<2)◂1(<2)◂{ } ⊢ 2'(= a3◂ [ a2◂ [ {| l |}]] )
	mov rax,unt 
	mov rax,unt_1
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	jmp LB_4527
LB_4527:
	cmp BYTE [r8+6],0
	jnz LB_4525
	POP_GRM_SCC
	ret
LB_4525:
	POP_GRM_FAIL 
	ret
ETR_257:
	mov r9,0x0000_ffff_ffff_ffff
	and r9,[r13]
	call GRM_257
	ret
GRM_257:
	PUSH_GRM
	jmp LB_4530
LB_4529:
	add r14,1 
LB_4530:
	cmp r14,r9
	jge LB_4531
	JZ_SPC BYTE [r13+8+r14], LB_4529
LB_4531
	lea rax,[r14+1]
	cmp rax,r9
	jg LB_4534
	jmp LB_4535
LB_4534:
	mov r8,unt_1
	jmp LB_4532
LB_4535:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],44
	jnz LB_4536
	jmp LB_4537
LB_4536:
	mov r8,unt_1
	jmp LB_4532
LB_4537:
	add r14,1
	jmp LB_4533
LB_4532:
	add rsp,0
	jmp LB_4528
LB_4533:
	jmp LB_4539
LB_4538:
	add r14,1 
LB_4539:
	cmp r14,r9
	jge LB_4540
	JZ_SPC BYTE [r13+8+r14], LB_4538
LB_4540
	call GRM_220
	cmp BYTE [r8+6],0
	jnz LB_4543
	jmp LB_4544
LB_4543:
	jmp LB_4541
LB_4544:
	sub rsp,8
; .mov_ptn2 2'(= {| l |} ) ⊢ 8'(= {| l |} )
; .mov_ptn 2'(= {| l |} ) ⊢ 8'(= {| l |} )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_4542
LB_4541:
	add rsp,0
	POP_GRM_FAIL
	ret
LB_4542:
	jmp LB_4546
LB_4545:
	add r14,1 
LB_4546:
	cmp r14,r9
	jge LB_4547
	JZ_SPC BYTE [r13+8+r14], LB_4545
LB_4547
	call GRM_257
	cmp BYTE [r8+6],0
	jnz LB_4550
	jmp LB_4551
LB_4550:
	jmp LB_4548
LB_4551:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a2◂ [ {| l |}] ) ⊢ 9'(= a2◂ [ {| l |}] )
; .mov_ptn 2'(= a2◂ [ {| l |}] ) ⊢ 9'(= a2◂ [ {| l |}] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_4549
LB_4548:
	add rsp,8
	POP_GRM_FAIL
	ret
LB_4549:
	mov QWORD [rsp+8*2],r14
	mov r13,QWORD [rsp+16+8*2]
	mov r14,QWORD [rsp+8*2]
	jmp LB_4552
LB_4552
;; rsp=2 , %2380~1'(= r ) %2379~0'(= r ) %2378~9'(= a2◂ [ {| l |}] ) %2377~8'(= {| l |} ) 
; #23 { 8'(= {| l |} ) 9'(= a2◂ [ {| l |}] ) } ⊢ 0(<2)◂{ 8'(= {| l |} ) 9'(= a2◂ [ {| l |}] ) }
;; rsp=2 , %2381~0(<2)◂{ 8'(= {| l |} ) 9'(= a2◂ [ {| l |}] ) } %2380~1'(= r ) %2379~0'(= r ) 
; #24 0(<2)◂{ 8'(= {| l |} ) 9'(= a2◂ [ {| l |}] ) } ⊢ 0(<2)◂0(<2)◂{ 8'(= {| l |} ) 9'(= a2◂ [ {| l |}] ) }
;; rsp=2 , %2382~0(<2)◂0(<2)◂{ 8'(= {| l |} ) 9'(= a2◂ [ {| l |}] ) } %2380~1'(= r ) %2379~0'(= r ) 
; ∎ 0(<2)◂0(<2)◂{ 8'(= {| l |} ) 9'(= a2◂ [ {| l |}] ) }
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂0(<2)◂{ 8'(= {| l |} ) 9'(= a2◂ [ {| l |}] ) } ⊢ 2'(= a3◂ [ a2◂ [ {| l |}]] )
; .mov_ptn 0(<2)◂0(<2)◂{ 8'(= {| l |} ) 9'(= a2◂ [ {| l |}] ) } ⊢ 2'(= a3◂ [ a2◂ [ {| l |}]] )
	ALC_RCD 2, rax
	mov r13,rax
	mov rax,QWORD [rsp-8+8*2]
	mov QWORD [r13+8+8*0],rax
	mov rax,QWORD [rsp-8+8*1]
	mov QWORD [r13+8+8*1],rax
	mov rax,r13
	mov BYTE [rax+6],0
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,16
	jmp LB_4553
LB_4553:
	cmp BYTE [r8+6],0
	jnz LB_4528
	POP_GRM_SCC
	ret
LB_4528:
	RB_GRM
	mov QWORD [rsp+8*0],r14
	mov r13,QWORD [rsp+16+8*0]
	mov r14,QWORD [rsp+8*0]
	jmp LB_4555
LB_4555
;; rsp=0 , %2384~1'(= r ) %2383~0'(= r ) 
; #22 { } ⊢ 1(<2)◂{ }
;; rsp=0 , %2385~1(<2)◂{ } %2384~1'(= r ) %2383~0'(= r ) 
; #24 1(<2)◂{ } ⊢ 0(<2)◂1(<2)◂{ }
;; rsp=0 , %2386~0(<2)◂1(<2)◂{ } %2384~1'(= r ) %2383~0'(= r ) 
; ∎ 0(<2)◂1(<2)◂{ }
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂1(<2)◂{ } ⊢ 2'(= a3◂ [ a2◂ [ {| l |}]] )
; .mov_ptn 0(<2)◂1(<2)◂{ } ⊢ 2'(= a3◂ [ a2◂ [ {| l |}]] )
	mov rax,unt 
	mov rax,unt_1
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	jmp LB_4556
LB_4556:
	cmp BYTE [r8+6],0
	jnz LB_4554
	POP_GRM_SCC
	ret
LB_4554:
	POP_GRM_FAIL 
	ret
ETR_258:
	mov r9,0x0000_ffff_ffff_ffff
	and r9,[r13]
	call GRM_258
	ret
GRM_258:
	PUSH_GRM
	jmp LB_4559
LB_4558:
	add r14,1 
LB_4559:
	cmp r14,r9
	jge LB_4560
	JZ_SPC BYTE [r13+8+r14], LB_4558
LB_4560
	call GRM_221
	cmp BYTE [r8+6],0
	jnz LB_4563
	jmp LB_4564
LB_4563:
	jmp LB_4561
LB_4564:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a44◂ [ *{ }] ) ⊢ 8'(= a44◂ [ *{ }] )
; .mov_ptn 2'(= a44◂ [ *{ }] ) ⊢ 8'(= a44◂ [ *{ }] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_4562
LB_4561:
	add rsp,0
	jmp LB_4557
LB_4562:
	jmp LB_4566
LB_4565:
	add r14,1 
LB_4566:
	cmp r14,r9
	jge LB_4567
	JZ_SPC BYTE [r13+8+r14], LB_4565
LB_4567
	lea rax,[r14+1]
	cmp rax,r9
	jg LB_4570
	jmp LB_4571
LB_4570:
	mov r8,unt_1
	jmp LB_4568
LB_4571:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],64
	jnz LB_4572
	jmp LB_4573
LB_4572:
	mov r8,unt_1
	jmp LB_4568
LB_4573:
	add r14,1
	jmp LB_4569
LB_4568:
	add rsp,8
	jmp LB_4557
LB_4569:
	jmp LB_4575
LB_4574:
	add r14,1 
LB_4575:
	cmp r14,r9
	jge LB_4576
	JZ_SPC BYTE [r13+8+r14], LB_4574
LB_4576
	lea rax,[r14+1]
	cmp rax,r9
	jg LB_4579
	jmp LB_4580
LB_4579:
	mov r8,unt_1
	jmp LB_4577
LB_4580:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],46
	jnz LB_4581
	jmp LB_4582
LB_4581:
	mov r8,unt_1
	jmp LB_4577
LB_4582:
	add r14,1
	jmp LB_4578
LB_4577:
	add rsp,8
	POP_GRM_FAIL
	ret
LB_4578:
	jmp LB_4584
LB_4583:
	add r14,1 
LB_4584:
	cmp r14,r9
	jge LB_4585
	JZ_SPC BYTE [r13+8+r14], LB_4583
LB_4585
	call GRM_255
	cmp BYTE [r8+6],0
	jnz LB_4588
	jmp LB_4589
LB_4588:
	jmp LB_4586
LB_4589:
	sub rsp,16
; .mov_ptn2 2'(= *{ {| l |}a43◂ [ ]} ) ⊢ { 9'(= {| l |} ) 10'(= a43◂ [ ] ) }
; .mov_ptn 2'(= *{ {| l |}a43◂ [ ]} ) ⊢ { 9'(= {| l |} ) 10'(= a43◂ [ ] ) }
	mov r10, QWORD [r8+8]
	mov QWORD [rsp-8+8*2],r10
	mov r11, QWORD [r8+16]
	mov QWORD [rsp-8+8*1],r11
	mov rdi,r8
	FREE_RCD 2,rdi
	jmp LB_4587
LB_4586:
	add rsp,8
	POP_GRM_FAIL
	ret
LB_4587:
	jmp LB_4591
LB_4590:
	add r14,1 
LB_4591:
	cmp r14,r9
	jge LB_4592
	JZ_SPC BYTE [r13+8+r14], LB_4590
LB_4592
	call GRM_258
	cmp BYTE [r8+6],0
	jnz LB_4595
	jmp LB_4596
LB_4595:
	jmp LB_4593
LB_4596:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a2◂ [ *{ {| l |}a43◂ [ ]}] ) ⊢ 11'(= a2◂ [ *{ {| l |}a43◂ [ ]}] )
; .mov_ptn 2'(= a2◂ [ *{ {| l |}a43◂ [ ]}] ) ⊢ 11'(= a2◂ [ *{ {| l |}a43◂ [ ]}] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_4594
LB_4593:
	add rsp,24
	POP_GRM_FAIL
	ret
LB_4594:
	mov QWORD [rsp+8*4],r14
	mov r13,QWORD [rsp+16+8*4]
	mov r14,QWORD [rsp+8*4]
	jmp LB_4597
LB_4597
;; rsp=4 , %2391~1'(= r ) %2390~0'(= r ) %2389~11'(= a2◂ [ *{ {| l |}a43◂ [ ]}] ) %2388~{ 9'(= {| l |} ) 10'(= a43◂ [ ] ) } %2387~8'(= a44◂ [ *{ }] ) 
; #23 { { 9'(= {| l |} ) 10'(= a43◂ [ ] ) } 11'(= a2◂ [ *{ {| l |}a43◂ [ ]}] ) } ⊢ 0(<2)◂{ { 9'(= {| l |} ) 10'(= a43◂ [ ] ) } 11'(= a2◂ [ *{ {| l |}a43◂ [ ]}] ) }
;; rsp=4 , %2392~0(<2)◂{ { 9'(= {| l |} ) 10'(= a43◂ [ ] ) } 11'(= a2◂ [ *{ {| l |}a43◂ [ ]}] ) } %2391~1'(= r ) %2390~0'(= r ) %2387~8'(= a44◂ [ *{ }] ) 
; #24 0(<2)◂{ { 9'(= {| l |} ) 10'(= a43◂ [ ] ) } 11'(= a2◂ [ *{ {| l |}a43◂ [ ]}] ) } ⊢ 0(<2)◂0(<2)◂{ { 9'(= {| l |} ) 10'(= a43◂ [ ] ) } 11'(= a2◂ [ *{ {| l |}a43◂ [ ]}] ) }
;; rsp=4 , %2393~0(<2)◂0(<2)◂{ { 9'(= {| l |} ) 10'(= a43◂ [ ] ) } 11'(= a2◂ [ *{ {| l |}a43◂ [ ]}] ) } %2391~1'(= r ) %2390~0'(= r ) %2387~8'(= a44◂ [ *{ }] ) 
; ∎ 0(<2)◂0(<2)◂{ { 9'(= {| l |} ) 10'(= a43◂ [ ] ) } 11'(= a2◂ [ *{ {| l |}a43◂ [ ]}] ) }
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 8'(= a44◂ [ *{ }] )
	mov rdi,QWORD [rsp-8+8*4]
	C_PUSH_REGS
	mov r8,rdi
	call LB_1876
	C_POP_REGS
; .mov_ptn2 0(<2)◂0(<2)◂{ { 9'(= {| l |} ) 10'(= a43◂ [ ] ) } 11'(= a2◂ [ *{ {| l |}a43◂ [ ]}] ) } ⊢ 2'(= a3◂ [ a2◂ [ *{ {| l |}a43◂ [ ]}]] )
; .mov_ptn 0(<2)◂0(<2)◂{ { 9'(= {| l |} ) 10'(= a43◂ [ ] ) } 11'(= a2◂ [ *{ {| l |}a43◂ [ ]}] ) } ⊢ 2'(= a3◂ [ a2◂ [ *{ {| l |}a43◂ [ ]}]] )
	ALC_RCD 2, rax
	mov r13,rax
	ALC_RCD 2, rax
	mov r14,rax
	mov rax,QWORD [rsp-8+8*3]
	mov QWORD [r14+8+8*0],rax
	mov rax,QWORD [rsp-8+8*2]
	mov QWORD [r14+8+8*1],rax
	mov rax,r14
	mov QWORD [r13+8+8*0],rax
	mov rax,QWORD [rsp-8+8*1]
	mov QWORD [r13+8+8*1],rax
	mov rax,r13
	mov BYTE [rax+6],0
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,32
	jmp LB_4598
LB_4598:
	cmp BYTE [r8+6],0
	jnz LB_4557
	POP_GRM_SCC
	ret
LB_4557:
	RB_GRM
	mov QWORD [rsp+8*0],r14
	mov r13,QWORD [rsp+16+8*0]
	mov r14,QWORD [rsp+8*0]
	jmp LB_4600
LB_4600
;; rsp=0 , %2395~1'(= r ) %2394~0'(= r ) 
; #22 { } ⊢ 1(<2)◂{ }
;; rsp=0 , %2396~1(<2)◂{ } %2395~1'(= r ) %2394~0'(= r ) 
; #24 1(<2)◂{ } ⊢ 0(<2)◂1(<2)◂{ }
;; rsp=0 , %2397~0(<2)◂1(<2)◂{ } %2395~1'(= r ) %2394~0'(= r ) 
; ∎ 0(<2)◂1(<2)◂{ }
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂1(<2)◂{ } ⊢ 2'(= a3◂ [ a2◂ [ *{ {| l |}a43◂ [ ]}]] )
; .mov_ptn 0(<2)◂1(<2)◂{ } ⊢ 2'(= a3◂ [ a2◂ [ *{ {| l |}a43◂ [ ]}]] )
	mov rax,unt 
	mov rax,unt_1
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	jmp LB_4601
LB_4601:
	cmp BYTE [r8+6],0
	jnz LB_4599
	POP_GRM_SCC
	ret
LB_4599:
	POP_GRM_FAIL 
	ret
ETR_259:
	mov r9,0x0000_ffff_ffff_ffff
	and r9,[r13]
	call GRM_259
	ret
GRM_259:
	PUSH_GRM
	jmp LB_4604
LB_4603:
	add r14,1 
LB_4604:
	cmp r14,r9
	jge LB_4605
	JZ_SPC BYTE [r13+8+r14], LB_4603
LB_4605
	call GRM_221
	cmp BYTE [r8+6],0
	jnz LB_4608
	jmp LB_4609
LB_4608:
	jmp LB_4606
LB_4609:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a44◂ [ *{ }] ) ⊢ 8'(= a44◂ [ *{ }] )
; .mov_ptn 2'(= a44◂ [ *{ }] ) ⊢ 8'(= a44◂ [ *{ }] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_4607
LB_4606:
	add rsp,0
	jmp LB_4602
LB_4607:
	jmp LB_4611
LB_4610:
	add r14,1 
LB_4611:
	cmp r14,r9
	jge LB_4612
	JZ_SPC BYTE [r13+8+r14], LB_4610
LB_4612
	lea rax,[r14+3]
	cmp rax,r9
	jg LB_4615
	jmp LB_4616
LB_4615:
	mov r8,unt_1
	jmp LB_4613
LB_4616:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],226
	jnz LB_4617
	cmp BYTE [rdi+1],136
	jnz LB_4617
	cmp BYTE [rdi+2],144
	jnz LB_4617
	jmp LB_4618
LB_4617:
	mov r8,unt_1
	jmp LB_4613
LB_4618:
	add r14,3
	jmp LB_4614
LB_4613:
	add rsp,8
	jmp LB_4602
LB_4614:
	jmp LB_4620
LB_4619:
	add r14,1 
LB_4620:
	cmp r14,r9
	jge LB_4621
	JZ_SPC BYTE [r13+8+r14], LB_4619
LB_4621
	call GRM_79
	cmp BYTE [r8+6],0
	jnz LB_4624
	jmp LB_4625
LB_4624:
	jmp LB_4622
LB_4625:
	sub rsp,8
; .mov_ptn2 2'(= {| l |} ) ⊢ 9'(= {| l |} )
; .mov_ptn 2'(= {| l |} ) ⊢ 9'(= {| l |} )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_4623
LB_4622:
	add rsp,8
	POP_GRM_FAIL
	ret
LB_4623:
	jmp LB_4627
LB_4626:
	add r14,1 
LB_4627:
	cmp r14,r9
	jge LB_4628
	JZ_SPC BYTE [r13+8+r14], LB_4626
LB_4628
	lea rax,[r14+1]
	cmp rax,r9
	jg LB_4631
	jmp LB_4632
LB_4631:
	mov r8,unt_1
	jmp LB_4629
LB_4632:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],58
	jnz LB_4633
	jmp LB_4634
LB_4633:
	mov r8,unt_1
	jmp LB_4629
LB_4634:
	add r14,1
	jmp LB_4630
LB_4629:
	add rsp,16
	POP_GRM_FAIL
	ret
LB_4630:
	jmp LB_4636
LB_4635:
	add r14,1 
LB_4636:
	cmp r14,r9
	jge LB_4637
	JZ_SPC BYTE [r13+8+r14], LB_4635
LB_4637
	call GRM_215
	cmp BYTE [r8+6],0
	jnz LB_4640
	jmp LB_4641
LB_4640:
	jmp LB_4638
LB_4641:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a32◂ [ ] ) ⊢ 10'(= a32◂ [ ] )
; .mov_ptn 2'(= a32◂ [ ] ) ⊢ 10'(= a32◂ [ ] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_4639
LB_4638:
	add rsp,16
	POP_GRM_FAIL
	ret
LB_4639:
	jmp LB_4643
LB_4642:
	add r14,1 
LB_4643:
	cmp r14,r9
	jge LB_4644
	JZ_SPC BYTE [r13+8+r14], LB_4642
LB_4644
	call GRM_259
	cmp BYTE [r8+6],0
	jnz LB_4647
	jmp LB_4648
LB_4647:
	jmp LB_4645
LB_4648:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a2◂ [ *{ {| l |}a32◂ [ ]}] ) ⊢ 11'(= a2◂ [ *{ {| l |}a32◂ [ ]}] )
; .mov_ptn 2'(= a2◂ [ *{ {| l |}a32◂ [ ]}] ) ⊢ 11'(= a2◂ [ *{ {| l |}a32◂ [ ]}] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_4646
LB_4645:
	add rsp,24
	POP_GRM_FAIL
	ret
LB_4646:
	mov QWORD [rsp+8*4],r14
	mov r13,QWORD [rsp+16+8*4]
	mov r14,QWORD [rsp+8*4]
	jmp LB_4649
LB_4649
;; rsp=4 , %2403~1'(= r ) %2402~0'(= r ) %2401~11'(= a2◂ [ *{ {| l |}a32◂ [ ]}] ) %2400~10'(= a32◂ [ ] ) %2399~9'(= {| l |} ) %2398~8'(= a44◂ [ *{ }] ) 
; #23 { { 9'(= {| l |} ) 10'(= a32◂ [ ] ) } 11'(= a2◂ [ *{ {| l |}a32◂ [ ]}] ) } ⊢ 0(<2)◂{ { 9'(= {| l |} ) 10'(= a32◂ [ ] ) } 11'(= a2◂ [ *{ {| l |}a32◂ [ ]}] ) }
;; rsp=4 , %2404~0(<2)◂{ { 9'(= {| l |} ) 10'(= a32◂ [ ] ) } 11'(= a2◂ [ *{ {| l |}a32◂ [ ]}] ) } %2403~1'(= r ) %2402~0'(= r ) %2398~8'(= a44◂ [ *{ }] ) 
; #24 0(<2)◂{ { 9'(= {| l |} ) 10'(= a32◂ [ ] ) } 11'(= a2◂ [ *{ {| l |}a32◂ [ ]}] ) } ⊢ 0(<2)◂0(<2)◂{ { 9'(= {| l |} ) 10'(= a32◂ [ ] ) } 11'(= a2◂ [ *{ {| l |}a32◂ [ ]}] ) }
;; rsp=4 , %2405~0(<2)◂0(<2)◂{ { 9'(= {| l |} ) 10'(= a32◂ [ ] ) } 11'(= a2◂ [ *{ {| l |}a32◂ [ ]}] ) } %2403~1'(= r ) %2402~0'(= r ) %2398~8'(= a44◂ [ *{ }] ) 
; ∎ 0(<2)◂0(<2)◂{ { 9'(= {| l |} ) 10'(= a32◂ [ ] ) } 11'(= a2◂ [ *{ {| l |}a32◂ [ ]}] ) }
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 8'(= a44◂ [ *{ }] )
	mov rdi,QWORD [rsp-8+8*4]
	C_PUSH_REGS
	mov r8,rdi
	call LB_1876
	C_POP_REGS
; .mov_ptn2 0(<2)◂0(<2)◂{ { 9'(= {| l |} ) 10'(= a32◂ [ ] ) } 11'(= a2◂ [ *{ {| l |}a32◂ [ ]}] ) } ⊢ 2'(= a3◂ [ a2◂ [ *{ {| l |}a32◂ [ ]}]] )
; .mov_ptn 0(<2)◂0(<2)◂{ { 9'(= {| l |} ) 10'(= a32◂ [ ] ) } 11'(= a2◂ [ *{ {| l |}a32◂ [ ]}] ) } ⊢ 2'(= a3◂ [ a2◂ [ *{ {| l |}a32◂ [ ]}]] )
	ALC_RCD 2, rax
	mov r13,rax
	ALC_RCD 2, rax
	mov r14,rax
	mov rax,QWORD [rsp-8+8*3]
	mov QWORD [r14+8+8*0],rax
	mov rax,QWORD [rsp-8+8*2]
	mov QWORD [r14+8+8*1],rax
	mov rax,r14
	mov QWORD [r13+8+8*0],rax
	mov rax,QWORD [rsp-8+8*1]
	mov QWORD [r13+8+8*1],rax
	mov rax,r13
	mov BYTE [rax+6],0
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,32
	jmp LB_4650
LB_4650:
	cmp BYTE [r8+6],0
	jnz LB_4602
	POP_GRM_SCC
	ret
LB_4602:
	RB_GRM
	mov QWORD [rsp+8*0],r14
	mov r13,QWORD [rsp+16+8*0]
	mov r14,QWORD [rsp+8*0]
	jmp LB_4652
LB_4652
;; rsp=0 , %2407~1'(= r ) %2406~0'(= r ) 
; #22 { } ⊢ 1(<2)◂{ }
;; rsp=0 , %2408~1(<2)◂{ } %2407~1'(= r ) %2406~0'(= r ) 
; #24 1(<2)◂{ } ⊢ 0(<2)◂1(<2)◂{ }
;; rsp=0 , %2409~0(<2)◂1(<2)◂{ } %2407~1'(= r ) %2406~0'(= r ) 
; ∎ 0(<2)◂1(<2)◂{ }
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂1(<2)◂{ } ⊢ 2'(= a3◂ [ a2◂ [ *{ {| l |}a32◂ [ ]}]] )
; .mov_ptn 0(<2)◂1(<2)◂{ } ⊢ 2'(= a3◂ [ a2◂ [ *{ {| l |}a32◂ [ ]}]] )
	mov rax,unt 
	mov rax,unt_1
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	jmp LB_4653
LB_4653:
	cmp BYTE [r8+6],0
	jnz LB_4651
	POP_GRM_SCC
	ret
LB_4651:
	POP_GRM_FAIL 
	ret
ETR_260:
	mov r9,0x0000_ffff_ffff_ffff
	and r9,[r13]
	call GRM_260
	ret
GRM_260:
	PUSH_GRM
	jmp LB_4656
LB_4655:
	add r14,1 
LB_4656:
	cmp r14,r9
	jge LB_4657
	JZ_LINE_SPC BYTE [r13+8+r14], LB_4655
LB_4657
	call GRM_221
	cmp BYTE [r8+6],0
	jnz LB_4660
	jmp LB_4661
LB_4660:
	jmp LB_4658
LB_4661:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a44◂ [ *{ }] ) ⊢ 8'(= a44◂ [ *{ }] )
; .mov_ptn 2'(= a44◂ [ *{ }] ) ⊢ 8'(= a44◂ [ *{ }] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_4659
LB_4658:
	add rsp,0
	jmp LB_4654
LB_4659:
	jmp LB_4663
LB_4662:
	add r14,1 
LB_4663:
	cmp r14,r9
	jge LB_4664
	JZ_LINE_SPC BYTE [r13+8+r14], LB_4662
LB_4664
	lea rax,[r14+1]
	cmp rax,r9
	jg LB_4667
	jmp LB_4668
LB_4667:
	mov r8,unt_1
	jmp LB_4665
LB_4668:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],64
	jnz LB_4669
	jmp LB_4670
LB_4669:
	mov r8,unt_1
	jmp LB_4665
LB_4670:
	add r14,1
	jmp LB_4666
LB_4665:
	add rsp,8
	jmp LB_4654
LB_4666:
	jmp LB_4672
LB_4671:
	add r14,1 
LB_4672:
	cmp r14,r9
	jge LB_4673
	JZ_LINE_SPC BYTE [r13+8+r14], LB_4671
LB_4673
	lea rax,[r14+1]
	cmp rax,r9
	jg LB_4676
	jmp LB_4677
LB_4676:
	mov r8,unt_1
	jmp LB_4674
LB_4677:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],46
	jnz LB_4678
	jmp LB_4679
LB_4678:
	mov r8,unt_1
	jmp LB_4674
LB_4679:
	add r14,1
	jmp LB_4675
LB_4674:
	add rsp,8
	POP_GRM_FAIL
	ret
LB_4675:
	jmp LB_4681
LB_4680:
	add r14,1 
LB_4681:
	cmp r14,r9
	jge LB_4682
	JZ_LINE_SPC BYTE [r13+8+r14], LB_4680
LB_4682
	call GRM_79
	cmp BYTE [r8+6],0
	jnz LB_4685
	jmp LB_4686
LB_4685:
	jmp LB_4683
LB_4686:
	sub rsp,8
; .mov_ptn2 2'(= {| l |} ) ⊢ 9'(= {| l |} )
; .mov_ptn 2'(= {| l |} ) ⊢ 9'(= {| l |} )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_4684
LB_4683:
	add rsp,8
	POP_GRM_FAIL
	ret
LB_4684:
	jmp LB_4688
LB_4687:
	add r14,1 
LB_4688:
	cmp r14,r9
	jge LB_4689
	JZ_LINE_SPC BYTE [r13+8+r14], LB_4687
LB_4689
	call GRM_210
	cmp BYTE [r8+6],0
	jnz LB_4692
	jmp LB_4693
LB_4692:
	jmp LB_4690
LB_4693:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a17◂ [ a22◂ [ {| l |}]] ) ⊢ 10'(= a17◂ [ a22◂ [ {| l |}]] )
; .mov_ptn 2'(= a17◂ [ a22◂ [ {| l |}]] ) ⊢ 10'(= a17◂ [ a22◂ [ {| l |}]] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_4691
LB_4690:
	add rsp,16
	POP_GRM_FAIL
	ret
LB_4691:
	jmp LB_4695
LB_4694:
	add r14,1 
LB_4695:
	cmp r14,r9
	jge LB_4696
	JZ_LINE_SPC BYTE [r13+8+r14], LB_4694
LB_4696
	call GRM_262
	cmp BYTE [r8+6],0
	jnz LB_4699
	jmp LB_4700
LB_4699:
	jmp LB_4697
LB_4700:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a3◂ [ a32◂ [ ]] ) ⊢ 11'(= a3◂ [ a32◂ [ ]] )
; .mov_ptn 2'(= a3◂ [ a32◂ [ ]] ) ⊢ 11'(= a3◂ [ a32◂ [ ]] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_4698
LB_4697:
	add rsp,24
	POP_GRM_FAIL
	ret
LB_4698:
	jmp LB_4702
LB_4701:
	add r14,1 
LB_4702:
	cmp r14,r9
	jge LB_4703
	JZ_LINE_SPC BYTE [r13+8+r14], LB_4701
LB_4703
	lea rax,[r14+1]
	cmp rax,r9
	jg LB_4706
	jmp LB_4707
LB_4706:
	mov r8,unt_1
	jmp LB_4704
LB_4707:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],10
	jnz LB_4708
	jmp LB_4709
LB_4708:
	mov r8,unt_1
	jmp LB_4704
LB_4709:
	add r14,1
	jmp LB_4705
LB_4704:
	add rsp,32
	POP_GRM_FAIL
	ret
LB_4705:
	jmp LB_4711
LB_4710:
	add r14,1 
LB_4711:
	cmp r14,r9
	jge LB_4712
	JZ_LINE_SPC BYTE [r13+8+r14], LB_4710
LB_4712
	call GRM_239
	cmp BYTE [r8+6],0
	jnz LB_4715
	jmp LB_4716
LB_4715:
	jmp LB_4713
LB_4716:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a44◂ [ a26◂ [ a18◂ [ ]{| l |}]] ) ⊢ 12'(= a44◂ [ a26◂ [ a18◂ [ ]{| l |}]] )
; .mov_ptn 2'(= a44◂ [ a26◂ [ a18◂ [ ]{| l |}]] ) ⊢ 12'(= a44◂ [ a26◂ [ a18◂ [ ]{| l |}]] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_4714
LB_4713:
	add rsp,32
	POP_GRM_FAIL
	ret
LB_4714:
	jmp LB_4718
LB_4717:
	add r14,1 
LB_4718:
	cmp r14,r9
	jge LB_4719
	JZ_LINE_SPC BYTE [r13+8+r14], LB_4717
LB_4719
	call GRM_261
	cmp BYTE [r8+6],0
	jnz LB_4722
	jmp LB_4723
LB_4722:
	jmp LB_4720
LB_4723:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a44◂ [ a2◂ [ *{ {| l |}a17◂ [ a22◂ [ {| l |}]]a3◂ [ a32◂ [ ]]a26◂ [ a18◂ [ ]{| l |}]}]] ) ⊢ 13'(= a44◂ [ a2◂ [ *{ {| l |}a17◂ [ a22◂ [ {| l |}]]a3◂ [ a32◂ [ ]]a26◂ [ a18◂ [ ]{| l |}]}]] )
; .mov_ptn 2'(= a44◂ [ a2◂ [ *{ {| l |}a17◂ [ a22◂ [ {| l |}]]a3◂ [ a32◂ [ ]]a26◂ [ a18◂ [ ]{| l |}]}]] ) ⊢ 13'(= a44◂ [ a2◂ [ *{ {| l |}a17◂ [ a22◂ [ {| l |}]]a3◂ [ a32◂ [ ]]a26◂ [ a18◂ [ ]{| l |}]}]] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_4721
LB_4720:
	add rsp,40
	POP_GRM_FAIL
	ret
LB_4721:
	mov QWORD [rsp+8*6],r14
	mov r13,QWORD [rsp+16+8*6]
	mov r14,QWORD [rsp+8*6]
	jmp LB_4724
LB_4724
;; rsp=6 , %2417~1'(= r ) %2416~0'(= r ) %2415~13'(= a44◂ [ a2◂ [ *{ {| l |}a17◂ [ a22◂ [ {| l |}]]a3◂ [ a32◂ [ ]]a26◂ [ a18◂ [ ]{| l |}]}]] ) %2414~12'(= a44◂ [ a26◂ [ a18◂ [ ]{| l |}]] ) %2413~11'(= a3◂ [ a32◂ [ ]] ) %2412~10'(= a17◂ [ a22◂ [ {| l |}]] ) %2411~9'(= {| l |} ) %2410~8'(= a44◂ [ *{ }] ) 
;; ? 13'(= a44◂ [ a2◂ [ *{ {| l |}a17◂ [ a22◂ [ {| l |}]]a3◂ [ a32◂ [ ]]a26◂ [ a18◂ [ ]{| l |}]}]] ) ⊢ 0(<2)◂2'(= a2◂ [ *{ {| l |}a17◂ [ a22◂ [ {| l |}]]a3◂ [ a32◂ [ ]]a26◂ [ a18◂ [ ]{| l |}]}] )
	mov rdi,QWORD [rsp-8+8*1]
	cmp BYTE [rdi+6],0
	jnz LB_4727
	jmp LB_4728
LB_4727:
	jmp LB_4726
LB_4728:
	mov QWORD [GBG_VCT+8*0],rdi
	mov r8,QWORD [rdi+8]
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_LN rdi
;; rsp=6 , %2419~2'(= a2◂ [ *{ {| l |}a17◂ [ a22◂ [ {| l |}]]a3◂ [ a32◂ [ ]]a26◂ [ a18◂ [ ]{| l |}]}] ) %2417~1'(= r ) %2416~0'(= r ) %2414~12'(= a44◂ [ a26◂ [ a18◂ [ ]{| l |}]] ) %2413~11'(= a3◂ [ a32◂ [ ]] ) %2412~10'(= a17◂ [ a22◂ [ {| l |}]] ) %2411~9'(= {| l |} ) %2410~8'(= a44◂ [ *{ }] ) 
;; ? 12'(= a44◂ [ a26◂ [ a18◂ [ ]{| l |}]] ) ⊢ 0(<2)◂3'(= a26◂ [ a18◂ [ ]{| l |}] )
	mov rdi,QWORD [rsp-8+8*2]
	cmp BYTE [rdi+6],0
	jnz LB_4730
	jmp LB_4731
LB_4730:
	jmp LB_4729
LB_4731:
	mov QWORD [GBG_VCT+8*0],rdi
	mov r9,QWORD [rdi+8]
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_LN rdi
;; rsp=6 , %2421~3'(= a26◂ [ a18◂ [ ]{| l |}] ) %2419~2'(= a2◂ [ *{ {| l |}a17◂ [ a22◂ [ {| l |}]]a3◂ [ a32◂ [ ]]a26◂ [ a18◂ [ ]{| l |}]}] ) %2417~1'(= r ) %2416~0'(= r ) %2413~11'(= a3◂ [ a32◂ [ ]] ) %2412~10'(= a17◂ [ a22◂ [ {| l |}]] ) %2411~9'(= {| l |} ) %2410~8'(= a44◂ [ *{ }] ) 
; #23 { { 9'(= {| l |} ) 10'(= a17◂ [ a22◂ [ {| l |}]] ) 11'(= a3◂ [ a32◂ [ ]] ) 3'(= a26◂ [ a18◂ [ ]{| l |}] ) } 2'(= a2◂ [ *{ {| l |}a17◂ [ a22◂ [ {| l |}]]a3◂ [ a32◂ [ ]]a26◂ [ a18◂ [ ]{| l |}]}] ) } ⊢ 0(<2)◂{ { 9'(= {| l |} ) 10'(= a17◂ [ a22◂ [ {| l |}]] ) 11'(= a3◂ [ a32◂ [ ]] ) 3'(= a26◂ [ a18◂ [ ]{| l |}] ) } 2'(= a2◂ [ *{ {| l |}a17◂ [ a22◂ [ {| l |}]]a3◂ [ a32◂ [ ]]a26◂ [ a18◂ [ ]{| l |}]}] ) }
;; rsp=6 , %2422~0(<2)◂{ { 9'(= {| l |} ) 10'(= a17◂ [ a22◂ [ {| l |}]] ) 11'(= a3◂ [ a32◂ [ ]] ) 3'(= a26◂ [ a18◂ [ ]{| l |}] ) } 2'(= a2◂ [ *{ {| l |}a17◂ [ a22◂ [ {| l |}]]a3◂ [ a32◂ [ ]]a26◂ [ a18◂ [ ]{| l |}]}] ) } %2417~1'(= r ) %2416~0'(= r ) %2410~8'(= a44◂ [ *{ }] ) 
; #178 0(<2)◂{ { 9'(= {| l |} ) 10'(= a17◂ [ a22◂ [ {| l |}]] ) 11'(= a3◂ [ a32◂ [ ]] ) 3'(= a26◂ [ a18◂ [ ]{| l |}] ) } 2'(= a2◂ [ *{ {| l |}a17◂ [ a22◂ [ {| l |}]]a3◂ [ a32◂ [ ]]a26◂ [ a18◂ [ ]{| l |}]}] ) } ⊢ 3(<6)◂0(<2)◂{ { 9'(= {| l |} ) 10'(= a17◂ [ a22◂ [ {| l |}]] ) 11'(= a3◂ [ a32◂ [ ]] ) 3'(= a26◂ [ a18◂ [ ]{| l |}] ) } 2'(= a2◂ [ *{ {| l |}a17◂ [ a22◂ [ {| l |}]]a3◂ [ a32◂ [ ]]a26◂ [ a18◂ [ ]{| l |}]}] ) }
;; rsp=6 , %2423~3(<6)◂0(<2)◂{ { 9'(= {| l |} ) 10'(= a17◂ [ a22◂ [ {| l |}]] ) 11'(= a3◂ [ a32◂ [ ]] ) 3'(= a26◂ [ a18◂ [ ]{| l |}] ) } 2'(= a2◂ [ *{ {| l |}a17◂ [ a22◂ [ {| l |}]]a3◂ [ a32◂ [ ]]a26◂ [ a18◂ [ ]{| l |}]}] ) } %2417~1'(= r ) %2416~0'(= r ) %2410~8'(= a44◂ [ *{ }] ) 
; #198 3(<6)◂0(<2)◂{ { 9'(= {| l |} ) 10'(= a17◂ [ a22◂ [ {| l |}]] ) 11'(= a3◂ [ a32◂ [ ]] ) 3'(= a26◂ [ a18◂ [ ]{| l |}] ) } 2'(= a2◂ [ *{ {| l |}a17◂ [ a22◂ [ {| l |}]]a3◂ [ a32◂ [ ]]a26◂ [ a18◂ [ ]{| l |}]}] ) } ⊢ 0(<2)◂3(<6)◂0(<2)◂{ { 9'(= {| l |} ) 10'(= a17◂ [ a22◂ [ {| l |}]] ) 11'(= a3◂ [ a32◂ [ ]] ) 3'(= a26◂ [ a18◂ [ ]{| l |}] ) } 2'(= a2◂ [ *{ {| l |}a17◂ [ a22◂ [ {| l |}]]a3◂ [ a32◂ [ ]]a26◂ [ a18◂ [ ]{| l |}]}] ) }
;; rsp=6 , %2424~0(<2)◂3(<6)◂0(<2)◂{ { 9'(= {| l |} ) 10'(= a17◂ [ a22◂ [ {| l |}]] ) 11'(= a3◂ [ a32◂ [ ]] ) 3'(= a26◂ [ a18◂ [ ]{| l |}] ) } 2'(= a2◂ [ *{ {| l |}a17◂ [ a22◂ [ {| l |}]]a3◂ [ a32◂ [ ]]a26◂ [ a18◂ [ ]{| l |}]}] ) } %2417~1'(= r ) %2416~0'(= r ) %2410~8'(= a44◂ [ *{ }] ) 
; #24 0(<2)◂3(<6)◂0(<2)◂{ { 9'(= {| l |} ) 10'(= a17◂ [ a22◂ [ {| l |}]] ) 11'(= a3◂ [ a32◂ [ ]] ) 3'(= a26◂ [ a18◂ [ ]{| l |}] ) } 2'(= a2◂ [ *{ {| l |}a17◂ [ a22◂ [ {| l |}]]a3◂ [ a32◂ [ ]]a26◂ [ a18◂ [ ]{| l |}]}] ) } ⊢ 0(<2)◂0(<2)◂3(<6)◂0(<2)◂{ { 9'(= {| l |} ) 10'(= a17◂ [ a22◂ [ {| l |}]] ) 11'(= a3◂ [ a32◂ [ ]] ) 3'(= a26◂ [ a18◂ [ ]{| l |}] ) } 2'(= a2◂ [ *{ {| l |}a17◂ [ a22◂ [ {| l |}]]a3◂ [ a32◂ [ ]]a26◂ [ a18◂ [ ]{| l |}]}] ) }
;; rsp=6 , %2425~0(<2)◂0(<2)◂3(<6)◂0(<2)◂{ { 9'(= {| l |} ) 10'(= a17◂ [ a22◂ [ {| l |}]] ) 11'(= a3◂ [ a32◂ [ ]] ) 3'(= a26◂ [ a18◂ [ ]{| l |}] ) } 2'(= a2◂ [ *{ {| l |}a17◂ [ a22◂ [ {| l |}]]a3◂ [ a32◂ [ ]]a26◂ [ a18◂ [ ]{| l |}]}] ) } %2417~1'(= r ) %2416~0'(= r ) %2410~8'(= a44◂ [ *{ }] ) 
; ∎ 0(<2)◂0(<2)◂3(<6)◂0(<2)◂{ { 9'(= {| l |} ) 10'(= a17◂ [ a22◂ [ {| l |}]] ) 11'(= a3◂ [ a32◂ [ ]] ) 3'(= a26◂ [ a18◂ [ ]{| l |}] ) } 2'(= a2◂ [ *{ {| l |}a17◂ [ a22◂ [ {| l |}]]a3◂ [ a32◂ [ ]]a26◂ [ a18◂ [ ]{| l |}]}] ) }
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 8'(= a44◂ [ *{ }] )
	mov rdi,QWORD [rsp-8+8*6]
	C_PUSH_REGS
	mov r8,rdi
	call LB_1876
	C_POP_REGS
; .mov_ptn2 0(<2)◂0(<2)◂3(<6)◂0(<2)◂{ { 9'(= {| l |} ) 10'(= a17◂ [ a22◂ [ {| l |}]] ) 11'(= a3◂ [ a32◂ [ ]] ) 3'(= a26◂ [ a18◂ [ ]{| l |}] ) } 2'(= a2◂ [ *{ {| l |}a17◂ [ a22◂ [ {| l |}]]a3◂ [ a32◂ [ ]]a26◂ [ a18◂ [ ]{| l |}]}] ) } ⊢ 2'(= a3◂ [ a44◂ [ a40◂ [ ]]] )
	mov r13,r8
; .mov_ptn 0(<2)◂0(<2)◂3(<6)◂0(<2)◂{ { 9'(= {| l |} ) 10'(= a17◂ [ a22◂ [ {| l |}]] ) 11'(= a3◂ [ a32◂ [ ]] ) 3'(= a26◂ [ a18◂ [ ]{| l |}] ) } 0'(= a2◂ [ *{ {| l |}a17◂ [ a22◂ [ {| l |}]]a3◂ [ a32◂ [ ]]a26◂ [ a18◂ [ ]{| l |}]}] ) } ⊢ 2'(= a3◂ [ a44◂ [ a40◂ [ ]]] )
	ALC_RCD 2, rax
	mov r14,rax
	ALC_RCD 4, rax
	mov r10,rax
	mov rax,QWORD [rsp-8+8*5]
	mov QWORD [r10+8+8*0],rax
	mov rax,QWORD [rsp-8+8*4]
	mov QWORD [r10+8+8*1],rax
	mov rax,QWORD [rsp-8+8*3]
	mov QWORD [r10+8+8*2],rax
	mov rax,r9
	mov QWORD [r10+8+8*3],rax
	mov rax,r10
	mov QWORD [r14+8+8*0],rax
	mov rax,r13
	mov QWORD [r14+8+8*1],rax
	mov rax,r14
	mov BYTE [rax+6],0
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],3
	mov QWORD [rax+8],rdi
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,48
	jmp LB_4725
LB_4729:
;; ?. 12'(= a44◂ [ a26◂ [ a18◂ [ ]{| l |}]] ) ⊢ 1(<2)◂3'(= a2◂ [ *{ rr{| l |}}] )
	mov QWORD [GBG_VCT+8*0],rdi
	mov r9,QWORD [rdi+8]
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_LN rdi
;; rsp=6 , %2420~3'(= a2◂ [ *{ rr{| l |}}] ) %2419~2'(= a2◂ [ *{ {| l |}a17◂ [ a22◂ [ {| l |}]]a3◂ [ a32◂ [ ]]a26◂ [ a18◂ [ ]{| l |}]}] ) %2417~1'(= r ) %2416~0'(= r ) %2413~11'(= a3◂ [ a32◂ [ ]] ) %2412~10'(= a17◂ [ a22◂ [ {| l |}]] ) %2411~9'(= {| l |} ) %2410~8'(= a44◂ [ *{ }] ) 
; #197 3'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 1(<2)◂3'(= a2◂ [ *{ rr{| l |}}] )
;; rsp=6 , %2426~1(<2)◂3'(= a2◂ [ *{ rr{| l |}}] ) %2419~2'(= a2◂ [ *{ {| l |}a17◂ [ a22◂ [ {| l |}]]a3◂ [ a32◂ [ ]]a26◂ [ a18◂ [ ]{| l |}]}] ) %2417~1'(= r ) %2416~0'(= r ) %2413~11'(= a3◂ [ a32◂ [ ]] ) %2412~10'(= a17◂ [ a22◂ [ {| l |}]] ) %2411~9'(= {| l |} ) %2410~8'(= a44◂ [ *{ }] ) 
; #24 1(<2)◂3'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 0(<2)◂1(<2)◂3'(= a2◂ [ *{ rr{| l |}}] )
;; rsp=6 , %2427~0(<2)◂1(<2)◂3'(= a2◂ [ *{ rr{| l |}}] ) %2419~2'(= a2◂ [ *{ {| l |}a17◂ [ a22◂ [ {| l |}]]a3◂ [ a32◂ [ ]]a26◂ [ a18◂ [ ]{| l |}]}] ) %2417~1'(= r ) %2416~0'(= r ) %2413~11'(= a3◂ [ a32◂ [ ]] ) %2412~10'(= a17◂ [ a22◂ [ {| l |}]] ) %2411~9'(= {| l |} ) %2410~8'(= a44◂ [ *{ }] ) 
; ∎ 0(<2)◂1(<2)◂3'(= a2◂ [ *{ rr{| l |}}] )
; .dlt.ptn 2'(= a2◂ [ *{ {| l |}a17◂ [ a22◂ [ {| l |}]]a3◂ [ a32◂ [ ]]a26◂ [ a18◂ [ ]{| l |}]}] )
	mov rdi,r8
	C_PUSH_REGS
	mov r8,rdi
	call LB_3841
	C_POP_REGS
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 11'(= a3◂ [ a32◂ [ ]] )
	mov rdi,QWORD [rsp-8+8*3]
	C_PUSH_REGS
	mov r8,rdi
	call LB_995
	C_POP_REGS
; .dlt.ptn 10'(= a17◂ [ a22◂ [ {| l |}]] )
	mov rdi,QWORD [rsp-8+8*4]
	C_PUSH_REGS
	mov r8,rdi
	call LB_791
	C_POP_REGS
; .dlt.ptn 9'(= {| l |} )
	mov rdi,QWORD [rsp-8+8*5]
	C_PUSH_REGS
	mov r8,rdi
	mov rdi,r8
	call free_s8
	C_POP_REGS
; .dlt.ptn 8'(= a44◂ [ *{ }] )
	mov rdi,QWORD [rsp-8+8*6]
	C_PUSH_REGS
	mov r8,rdi
	call LB_1876
	C_POP_REGS
; .mov_ptn2 0(<2)◂1(<2)◂3'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 2'(= a3◂ [ a44◂ [ a40◂ [ ]]] )
; .mov_ptn 0(<2)◂1(<2)◂3'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 2'(= a3◂ [ a44◂ [ a40◂ [ ]]] )
	mov rax,r9
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],1
	mov QWORD [rax+8],rdi
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,48
	jmp LB_4725
LB_4726:
;; ?. 13'(= a44◂ [ a2◂ [ *{ {| l |}a17◂ [ a22◂ [ {| l |}]]a3◂ [ a32◂ [ ]]a26◂ [ a18◂ [ ]{| l |}]}]] ) ⊢ 1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] )
	mov QWORD [GBG_VCT+8*0],rdi
	mov r8,QWORD [rdi+8]
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_LN rdi
;; rsp=6 , %2418~2'(= a2◂ [ *{ rr{| l |}}] ) %2417~1'(= r ) %2416~0'(= r ) %2414~12'(= a44◂ [ a26◂ [ a18◂ [ ]{| l |}]] ) %2413~11'(= a3◂ [ a32◂ [ ]] ) %2412~10'(= a17◂ [ a22◂ [ {| l |}]] ) %2411~9'(= {| l |} ) %2410~8'(= a44◂ [ *{ }] ) 
;; ? 12'(= a44◂ [ a26◂ [ a18◂ [ ]{| l |}]] ) ⊢ 0(<2)◂3'(= a26◂ [ a18◂ [ ]{| l |}] )
	mov rdi,QWORD [rsp-8+8*2]
	cmp BYTE [rdi+6],0
	jnz LB_4733
	jmp LB_4734
LB_4733:
	jmp LB_4732
LB_4734:
	mov QWORD [GBG_VCT+8*0],rdi
	mov r9,QWORD [rdi+8]
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_LN rdi
;; rsp=6 , %2429~3'(= a26◂ [ a18◂ [ ]{| l |}] ) %2418~2'(= a2◂ [ *{ rr{| l |}}] ) %2417~1'(= r ) %2416~0'(= r ) %2413~11'(= a3◂ [ a32◂ [ ]] ) %2412~10'(= a17◂ [ a22◂ [ {| l |}]] ) %2411~9'(= {| l |} ) %2410~8'(= a44◂ [ *{ }] ) 
; #197 2'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] )
;; rsp=6 , %2430~1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] ) %2429~3'(= a26◂ [ a18◂ [ ]{| l |}] ) %2417~1'(= r ) %2416~0'(= r ) %2413~11'(= a3◂ [ a32◂ [ ]] ) %2412~10'(= a17◂ [ a22◂ [ {| l |}]] ) %2411~9'(= {| l |} ) %2410~8'(= a44◂ [ *{ }] ) 
; #24 1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 0(<2)◂1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] )
;; rsp=6 , %2431~0(<2)◂1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] ) %2429~3'(= a26◂ [ a18◂ [ ]{| l |}] ) %2417~1'(= r ) %2416~0'(= r ) %2413~11'(= a3◂ [ a32◂ [ ]] ) %2412~10'(= a17◂ [ a22◂ [ {| l |}]] ) %2411~9'(= {| l |} ) %2410~8'(= a44◂ [ *{ }] ) 
; ∎ 0(<2)◂1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] )
; .dlt.ptn 3'(= a26◂ [ a18◂ [ ]{| l |}] )
	mov rdi,r9
	C_PUSH_REGS
	mov r8,rdi
	call LB_797
	C_POP_REGS
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 11'(= a3◂ [ a32◂ [ ]] )
	mov rdi,QWORD [rsp-8+8*3]
	C_PUSH_REGS
	mov r8,rdi
	call LB_995
	C_POP_REGS
; .dlt.ptn 10'(= a17◂ [ a22◂ [ {| l |}]] )
	mov rdi,QWORD [rsp-8+8*4]
	C_PUSH_REGS
	mov r8,rdi
	call LB_791
	C_POP_REGS
; .dlt.ptn 9'(= {| l |} )
	mov rdi,QWORD [rsp-8+8*5]
	C_PUSH_REGS
	mov r8,rdi
	mov rdi,r8
	call free_s8
	C_POP_REGS
; .dlt.ptn 8'(= a44◂ [ *{ }] )
	mov rdi,QWORD [rsp-8+8*6]
	C_PUSH_REGS
	mov r8,rdi
	call LB_1876
	C_POP_REGS
; .mov_ptn2 0(<2)◂1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 2'(= a3◂ [ a44◂ [ a40◂ [ ]]] )
	mov r13,r8
; .mov_ptn 0(<2)◂1(<2)◂0'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 2'(= a3◂ [ a44◂ [ a40◂ [ ]]] )
	mov rax,r13
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],1
	mov QWORD [rax+8],rdi
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,48
	jmp LB_4725
LB_4732:
;; ?. 12'(= a44◂ [ a26◂ [ a18◂ [ ]{| l |}]] ) ⊢ 1(<2)◂3'(= a2◂ [ *{ rr{| l |}}] )
	mov QWORD [GBG_VCT+8*0],rdi
	mov r9,QWORD [rdi+8]
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_LN rdi
;; rsp=6 , %2428~3'(= a2◂ [ *{ rr{| l |}}] ) %2418~2'(= a2◂ [ *{ rr{| l |}}] ) %2417~1'(= r ) %2416~0'(= r ) %2413~11'(= a3◂ [ a32◂ [ ]] ) %2412~10'(= a17◂ [ a22◂ [ {| l |}]] ) %2411~9'(= {| l |} ) %2410~8'(= a44◂ [ *{ }] ) 
; #58 { 2'(= a2◂ [ *{ rr{| l |}}] ) 3'(= a2◂ [ *{ rr{| l |}}] ) } ⊢ 2'(= a2◂ [ *{ rr{| l |}}] )
	sub rsp,16
	mov QWORD [rsp+8*0],r13
	mov QWORD [rsp+8*1],r14
; .mov_ptn2 { 2'(= a2◂ [ *{ rr{| l |}}] ) 3'(= a2◂ [ *{ rr{| l |}}] ) } ⊢ { 0'(= a2◂ [ *{ rr{| l |}}] ) 1'(= a2◂ [ *{ rr{| l |}}] ) }
; .mov_ptn 3'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 1'(= a2◂ [ *{ rr{| l |}}] )
	mov rax,r9
	mov r14,rax
; .mov_ptn 2'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 0'(= a2◂ [ *{ rr{| l |}}] )
	mov rax,r8
	mov r13,rax
	call LB_1985
	mov r14,QWORD [rsp-8+8*2]
	mov r8,r13
	mov r13,QWORD [rsp-8+8*1]
	add rsp,32
;; rsp=4 , %2432~2'(= a2◂ [ *{ rr{| l |}}] ) %2417~1'(= r ) %2416~0'(= r ) %2413~11'(= a3◂ [ a32◂ [ ]] ) %2412~10'(= a17◂ [ a22◂ [ {| l |}]] ) %2411~9'(= {| l |} ) %2410~8'(= a44◂ [ *{ }] ) 
; #197 2'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] )
;; rsp=4 , %2433~1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] ) %2417~1'(= r ) %2416~0'(= r ) %2413~11'(= a3◂ [ a32◂ [ ]] ) %2412~10'(= a17◂ [ a22◂ [ {| l |}]] ) %2411~9'(= {| l |} ) %2410~8'(= a44◂ [ *{ }] ) 
; #24 1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 0(<2)◂1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] )
;; rsp=4 , %2434~0(<2)◂1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] ) %2417~1'(= r ) %2416~0'(= r ) %2413~11'(= a3◂ [ a32◂ [ ]] ) %2412~10'(= a17◂ [ a22◂ [ {| l |}]] ) %2411~9'(= {| l |} ) %2410~8'(= a44◂ [ *{ }] ) 
; ∎ 0(<2)◂1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] )
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 11'(= a3◂ [ a32◂ [ ]] )
	mov rdi,QWORD [rsp-8+8*1]
	C_PUSH_REGS
	mov r8,rdi
	call LB_995
	C_POP_REGS
; .dlt.ptn 10'(= a17◂ [ a22◂ [ {| l |}]] )
	mov rdi,QWORD [rsp-8+8*2]
	C_PUSH_REGS
	mov r8,rdi
	call LB_791
	C_POP_REGS
; .dlt.ptn 9'(= {| l |} )
	mov rdi,QWORD [rsp-8+8*3]
	C_PUSH_REGS
	mov r8,rdi
	mov rdi,r8
	call free_s8
	C_POP_REGS
; .dlt.ptn 8'(= a44◂ [ *{ }] )
	mov rdi,QWORD [rsp-8+8*4]
	C_PUSH_REGS
	mov r8,rdi
	call LB_1876
	C_POP_REGS
; .mov_ptn2 0(<2)◂1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 2'(= a3◂ [ a44◂ [ a40◂ [ ]]] )
	mov r13,r8
; .mov_ptn 0(<2)◂1(<2)◂0'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 2'(= a3◂ [ a44◂ [ a40◂ [ ]]] )
	mov rax,r13
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],1
	mov QWORD [rax+8],rdi
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,32
	jmp LB_4725
LB_4725:
	cmp BYTE [r8+6],0
	jnz LB_4654
	POP_GRM_SCC
	ret
LB_4654:
	RB_GRM
	jmp LB_4737
LB_4736:
	add r14,1 
LB_4737:
	cmp r14,r9
	jge LB_4738
	JZ_SPC BYTE [r13+8+r14], LB_4736
LB_4738
	call GRM_79
	cmp BYTE [r8+6],0
	jnz LB_4741
	jmp LB_4742
LB_4741:
	jmp LB_4739
LB_4742:
	sub rsp,8
; .mov_ptn2 2'(= {| l |} ) ⊢ 8'(= {| l |} )
; .mov_ptn 2'(= {| l |} ) ⊢ 8'(= {| l |} )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_4740
LB_4739:
	add rsp,0
	jmp LB_4735
LB_4740:
	jmp LB_4744
LB_4743:
	add r14,1 
LB_4744:
	cmp r14,r9
	jge LB_4745
	JZ_SPC BYTE [r13+8+r14], LB_4743
LB_4745
	call GRM_263
	cmp BYTE [r8+6],0
	jnz LB_4748
	jmp LB_4749
LB_4748:
	jmp LB_4746
LB_4749:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a44◂ [ a42◂ [ ]] ) ⊢ 9'(= a44◂ [ a42◂ [ ]] )
; .mov_ptn 2'(= a44◂ [ a42◂ [ ]] ) ⊢ 9'(= a44◂ [ a42◂ [ ]] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_4747
LB_4746:
	add rsp,8
	jmp LB_4735
LB_4747:
	mov QWORD [rsp+8*2],r14
	mov r13,QWORD [rsp+16+8*2]
	mov r14,QWORD [rsp+8*2]
	jmp LB_4750
LB_4750
;; rsp=2 , %2438~1'(= r ) %2437~0'(= r ) %2436~9'(= a44◂ [ a42◂ [ ]] ) %2435~8'(= {| l |} ) 
;; ? 9'(= a44◂ [ a42◂ [ ]] ) ⊢ 0(<2)◂2'(= a42◂ [ ] )
	mov rdi,QWORD [rsp-8+8*1]
	cmp BYTE [rdi+6],0
	jnz LB_4753
	jmp LB_4754
LB_4753:
	jmp LB_4752
LB_4754:
	mov QWORD [GBG_VCT+8*0],rdi
	mov r8,QWORD [rdi+8]
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_LN rdi
;; rsp=2 , %2440~2'(= a42◂ [ ] ) %2438~1'(= r ) %2437~0'(= r ) %2435~8'(= {| l |} ) 
; #179 { 8'(= {| l |} ) 2'(= a42◂ [ ] ) } ⊢ 2(<6)◂{ 8'(= {| l |} ) 2'(= a42◂ [ ] ) }
;; rsp=2 , %2441~2(<6)◂{ 8'(= {| l |} ) 2'(= a42◂ [ ] ) } %2438~1'(= r ) %2437~0'(= r ) 
; #198 2(<6)◂{ 8'(= {| l |} ) 2'(= a42◂ [ ] ) } ⊢ 0(<2)◂2(<6)◂{ 8'(= {| l |} ) 2'(= a42◂ [ ] ) }
;; rsp=2 , %2442~0(<2)◂2(<6)◂{ 8'(= {| l |} ) 2'(= a42◂ [ ] ) } %2438~1'(= r ) %2437~0'(= r ) 
; #24 0(<2)◂2(<6)◂{ 8'(= {| l |} ) 2'(= a42◂ [ ] ) } ⊢ 0(<2)◂0(<2)◂2(<6)◂{ 8'(= {| l |} ) 2'(= a42◂ [ ] ) }
;; rsp=2 , %2443~0(<2)◂0(<2)◂2(<6)◂{ 8'(= {| l |} ) 2'(= a42◂ [ ] ) } %2438~1'(= r ) %2437~0'(= r ) 
; ∎ 0(<2)◂0(<2)◂2(<6)◂{ 8'(= {| l |} ) 2'(= a42◂ [ ] ) }
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂0(<2)◂2(<6)◂{ 8'(= {| l |} ) 2'(= a42◂ [ ] ) } ⊢ 2'(= a3◂ [ a44◂ [ a40◂ [ ]]] )
	mov r13,r8
; .mov_ptn 0(<2)◂0(<2)◂2(<6)◂{ 8'(= {| l |} ) 0'(= a42◂ [ ] ) } ⊢ 2'(= a3◂ [ a44◂ [ a40◂ [ ]]] )
	ALC_RCD 2, rax
	mov r14,rax
	mov rax,QWORD [rsp-8+8*2]
	mov QWORD [r14+8+8*0],rax
	mov rax,r13
	mov QWORD [r14+8+8*1],rax
	mov rax,r14
	mov BYTE [rax+6],2
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,16
	jmp LB_4751
LB_4752:
;; ?. 9'(= a44◂ [ a42◂ [ ]] ) ⊢ 1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] )
	mov QWORD [GBG_VCT+8*0],rdi
	mov r8,QWORD [rdi+8]
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_LN rdi
;; rsp=2 , %2439~2'(= a2◂ [ *{ rr{| l |}}] ) %2438~1'(= r ) %2437~0'(= r ) %2435~8'(= {| l |} ) 
; #197 2'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] )
;; rsp=2 , %2444~1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] ) %2438~1'(= r ) %2437~0'(= r ) %2435~8'(= {| l |} ) 
; #24 1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 0(<2)◂1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] )
;; rsp=2 , %2445~0(<2)◂1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] ) %2438~1'(= r ) %2437~0'(= r ) %2435~8'(= {| l |} ) 
; ∎ 0(<2)◂1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] )
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 8'(= {| l |} )
	mov rdi,QWORD [rsp-8+8*2]
	C_PUSH_REGS
	mov r8,rdi
	mov rdi,r8
	call free_s8
	C_POP_REGS
; .mov_ptn2 0(<2)◂1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 2'(= a3◂ [ a44◂ [ a40◂ [ ]]] )
	mov r13,r8
; .mov_ptn 0(<2)◂1(<2)◂0'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 2'(= a3◂ [ a44◂ [ a40◂ [ ]]] )
	mov rax,r13
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],1
	mov QWORD [rax+8],rdi
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,16
	jmp LB_4751
LB_4751:
	cmp BYTE [r8+6],0
	jnz LB_4735
	POP_GRM_SCC
	ret
LB_4735:
	RB_GRM
	mov QWORD [rsp+8*0],r14
	mov r13,QWORD [rsp+16+8*0]
	mov r14,QWORD [rsp+8*0]
	jmp LB_4756
LB_4756
;; rsp=0 , %2447~1'(= r ) %2446~0'(= r ) 
; $ %[ "lc_etr_body 0" ] ⊢ %[ "lc_etr_body 0" ]
;; rsp=0 , %2448~%[ "lc_etr_body 0" ] %2447~1'(= r ) %2446~0'(= r ) 
; #10 %[ "lc_etr_body 0" ] ⊢ %[ "lc_etr_body 0" ]
	mov rdi,fmt_emt
	call emt_stg
	mov rdi,LB_4758
	call emt_stg 
	mov rdi,fmt_nl
	call emt_stg
	jmp LB_4759
LB_4759:
;; rsp=0 , %2449~%[ "lc_etr_body 0" ] %2447~1'(= r ) %2446~0'(= r ) 
; #25 { } ⊢ 1(<2)◂{ }
;; rsp=0 , %2450~1(<2)◂{ } %2449~%[ "lc_etr_body 0" ] %2447~1'(= r ) %2446~0'(= r ) 
; ∎ 1(<2)◂{ }
; .dlt.ptn %[ "lc_etr_body 0" ]
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 1(<2)◂{ } ⊢ 2'(= a3◂ [ a44◂ [ a40◂ [ ]]] )
; .mov_ptn 1(<2)◂{ } ⊢ 2'(= a3◂ [ a44◂ [ a40◂ [ ]]] )
	mov rax,unt 
	mov rax,unt_1
	mov r8,rax
	jmp LB_4757
LB_4757:
	cmp BYTE [r8+6],0
	jnz LB_4755
	POP_GRM_SCC
	ret
LB_4755:
	POP_GRM_FAIL 
	ret
ETR_261:
	mov r9,0x0000_ffff_ffff_ffff
	and r9,[r13]
	call GRM_261
	ret
GRM_261:
	PUSH_GRM
	jmp LB_4762
LB_4761:
	add r14,1 
LB_4762:
	cmp r14,r9
	jge LB_4763
	JZ_LINE_SPC BYTE [r13+8+r14], LB_4761
LB_4763
	call GRM_221
	cmp BYTE [r8+6],0
	jnz LB_4766
	jmp LB_4767
LB_4766:
	jmp LB_4764
LB_4767:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a44◂ [ *{ }] ) ⊢ 8'(= a44◂ [ *{ }] )
; .mov_ptn 2'(= a44◂ [ *{ }] ) ⊢ 8'(= a44◂ [ *{ }] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_4765
LB_4764:
	add rsp,0
	jmp LB_4760
LB_4765:
	jmp LB_4769
LB_4768:
	add r14,1 
LB_4769:
	cmp r14,r9
	jge LB_4770
	JZ_LINE_SPC BYTE [r13+8+r14], LB_4768
LB_4770
	lea rax,[r14+1]
	cmp rax,r9
	jg LB_4773
	jmp LB_4774
LB_4773:
	mov r8,unt_1
	jmp LB_4771
LB_4774:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],64
	jnz LB_4775
	jmp LB_4776
LB_4775:
	mov r8,unt_1
	jmp LB_4771
LB_4776:
	add r14,1
	jmp LB_4772
LB_4771:
	add rsp,8
	jmp LB_4760
LB_4772:
	jmp LB_4778
LB_4777:
	add r14,1 
LB_4778:
	cmp r14,r9
	jge LB_4779
	JZ_LINE_SPC BYTE [r13+8+r14], LB_4777
LB_4779
	lea rax,[r14+1]
	cmp rax,r9
	jg LB_4782
	jmp LB_4783
LB_4782:
	mov r8,unt_1
	jmp LB_4780
LB_4783:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],46
	jnz LB_4784
	jmp LB_4785
LB_4784:
	mov r8,unt_1
	jmp LB_4780
LB_4785:
	add r14,1
	jmp LB_4781
LB_4780:
	add rsp,8
	POP_GRM_FAIL
	ret
LB_4781:
	jmp LB_4787
LB_4786:
	add r14,1 
LB_4787:
	cmp r14,r9
	jge LB_4788
	JZ_LINE_SPC BYTE [r13+8+r14], LB_4786
LB_4788
	call GRM_79
	cmp BYTE [r8+6],0
	jnz LB_4791
	jmp LB_4792
LB_4791:
	jmp LB_4789
LB_4792:
	sub rsp,8
; .mov_ptn2 2'(= {| l |} ) ⊢ 9'(= {| l |} )
; .mov_ptn 2'(= {| l |} ) ⊢ 9'(= {| l |} )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_4790
LB_4789:
	add rsp,8
	POP_GRM_FAIL
	ret
LB_4790:
	jmp LB_4794
LB_4793:
	add r14,1 
LB_4794:
	cmp r14,r9
	jge LB_4795
	JZ_LINE_SPC BYTE [r13+8+r14], LB_4793
LB_4795
	call GRM_210
	cmp BYTE [r8+6],0
	jnz LB_4798
	jmp LB_4799
LB_4798:
	jmp LB_4796
LB_4799:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a17◂ [ a22◂ [ {| l |}]] ) ⊢ 10'(= a17◂ [ a22◂ [ {| l |}]] )
; .mov_ptn 2'(= a17◂ [ a22◂ [ {| l |}]] ) ⊢ 10'(= a17◂ [ a22◂ [ {| l |}]] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_4797
LB_4796:
	add rsp,16
	POP_GRM_FAIL
	ret
LB_4797:
	jmp LB_4801
LB_4800:
	add r14,1 
LB_4801:
	cmp r14,r9
	jge LB_4802
	JZ_LINE_SPC BYTE [r13+8+r14], LB_4800
LB_4802
	call GRM_262
	cmp BYTE [r8+6],0
	jnz LB_4805
	jmp LB_4806
LB_4805:
	jmp LB_4803
LB_4806:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a3◂ [ a32◂ [ ]] ) ⊢ 11'(= a3◂ [ a32◂ [ ]] )
; .mov_ptn 2'(= a3◂ [ a32◂ [ ]] ) ⊢ 11'(= a3◂ [ a32◂ [ ]] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_4804
LB_4803:
	add rsp,24
	POP_GRM_FAIL
	ret
LB_4804:
	jmp LB_4808
LB_4807:
	add r14,1 
LB_4808:
	cmp r14,r9
	jge LB_4809
	JZ_LINE_SPC BYTE [r13+8+r14], LB_4807
LB_4809
	lea rax,[r14+1]
	cmp rax,r9
	jg LB_4812
	jmp LB_4813
LB_4812:
	mov r8,unt_1
	jmp LB_4810
LB_4813:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],10
	jnz LB_4814
	jmp LB_4815
LB_4814:
	mov r8,unt_1
	jmp LB_4810
LB_4815:
	add r14,1
	jmp LB_4811
LB_4810:
	add rsp,32
	POP_GRM_FAIL
	ret
LB_4811:
	jmp LB_4817
LB_4816:
	add r14,1 
LB_4817:
	cmp r14,r9
	jge LB_4818
	JZ_LINE_SPC BYTE [r13+8+r14], LB_4816
LB_4818
	call GRM_239
	cmp BYTE [r8+6],0
	jnz LB_4821
	jmp LB_4822
LB_4821:
	jmp LB_4819
LB_4822:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a44◂ [ a26◂ [ a18◂ [ ]{| l |}]] ) ⊢ 12'(= a44◂ [ a26◂ [ a18◂ [ ]{| l |}]] )
; .mov_ptn 2'(= a44◂ [ a26◂ [ a18◂ [ ]{| l |}]] ) ⊢ 12'(= a44◂ [ a26◂ [ a18◂ [ ]{| l |}]] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_4820
LB_4819:
	add rsp,32
	POP_GRM_FAIL
	ret
LB_4820:
	jmp LB_4824
LB_4823:
	add r14,1 
LB_4824:
	cmp r14,r9
	jge LB_4825
	JZ_LINE_SPC BYTE [r13+8+r14], LB_4823
LB_4825
	call GRM_261
	cmp BYTE [r8+6],0
	jnz LB_4828
	jmp LB_4829
LB_4828:
	jmp LB_4826
LB_4829:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a44◂ [ a2◂ [ *{ {| l |}a17◂ [ a22◂ [ {| l |}]]a3◂ [ a32◂ [ ]]a26◂ [ a18◂ [ ]{| l |}]}]] ) ⊢ 13'(= a44◂ [ a2◂ [ *{ {| l |}a17◂ [ a22◂ [ {| l |}]]a3◂ [ a32◂ [ ]]a26◂ [ a18◂ [ ]{| l |}]}]] )
; .mov_ptn 2'(= a44◂ [ a2◂ [ *{ {| l |}a17◂ [ a22◂ [ {| l |}]]a3◂ [ a32◂ [ ]]a26◂ [ a18◂ [ ]{| l |}]}]] ) ⊢ 13'(= a44◂ [ a2◂ [ *{ {| l |}a17◂ [ a22◂ [ {| l |}]]a3◂ [ a32◂ [ ]]a26◂ [ a18◂ [ ]{| l |}]}]] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_4827
LB_4826:
	add rsp,40
	POP_GRM_FAIL
	ret
LB_4827:
	mov QWORD [rsp+8*6],r14
	mov r13,QWORD [rsp+16+8*6]
	mov r14,QWORD [rsp+8*6]
	jmp LB_4830
LB_4830
;; rsp=6 , %2458~1'(= r ) %2457~0'(= r ) %2456~13'(= a44◂ [ a2◂ [ *{ {| l |}a17◂ [ a22◂ [ {| l |}]]a3◂ [ a32◂ [ ]]a26◂ [ a18◂ [ ]{| l |}]}]] ) %2455~12'(= a44◂ [ a26◂ [ a18◂ [ ]{| l |}]] ) %2454~11'(= a3◂ [ a32◂ [ ]] ) %2453~10'(= a17◂ [ a22◂ [ {| l |}]] ) %2452~9'(= {| l |} ) %2451~8'(= a44◂ [ *{ }] ) 
; #199 { 13'(= a44◂ [ a2◂ [ *{ {| l |}a17◂ [ a22◂ [ {| l |}]]a3◂ [ a32◂ [ ]]a26◂ [ a18◂ [ ]{| l |}]}]] ) 12'(= a44◂ [ a26◂ [ a18◂ [ ]{| l |}]] ) } ⊢ 2'(= a44◂ [ *{ a2◂ [ *{ {| l |}a17◂ [ a22◂ [ {| l |}]]a3◂ [ a32◂ [ ]]a26◂ [ a18◂ [ ]{| l |}]}]a26◂ [ a18◂ [ ]{| l |}]}] )
	sub rsp,16
	mov QWORD [rsp+8*0],r13
	mov QWORD [rsp+8*1],r14
; .mov_ptn2 { 13'(= a44◂ [ a2◂ [ *{ {| l |}a17◂ [ a22◂ [ {| l |}]]a3◂ [ a32◂ [ ]]a26◂ [ a18◂ [ ]{| l |}]}]] ) 12'(= a44◂ [ a26◂ [ a18◂ [ ]{| l |}]] ) } ⊢ { 0'(= a44◂ [ a2◂ [ *{ {| l |}a17◂ [ a22◂ [ {| l |}]]a3◂ [ a32◂ [ ]]a26◂ [ a18◂ [ ]{| l |}]}]] ) 1'(= a44◂ [ a26◂ [ a18◂ [ ]{| l |}]] ) }
; .mov_ptn 12'(= a44◂ [ a26◂ [ a18◂ [ ]{| l |}]] ) ⊢ 1'(= a44◂ [ a26◂ [ a18◂ [ ]{| l |}]] )
	mov rax,QWORD [rsp-8+8*4]
	mov r14,rax
; .mov_ptn 13'(= a44◂ [ a2◂ [ *{ {| l |}a17◂ [ a22◂ [ {| l |}]]a3◂ [ a32◂ [ ]]a26◂ [ a18◂ [ ]{| l |}]}]] ) ⊢ 0'(= a44◂ [ a2◂ [ *{ {| l |}a17◂ [ a22◂ [ {| l |}]]a3◂ [ a32◂ [ ]]a26◂ [ a18◂ [ ]{| l |}]}]] )
	mov rax,QWORD [rsp-8+8*3]
	mov r13,rax
	call LB_4832
	mov r14,QWORD [rsp-8+8*2]
	mov r8,r13
	mov r13,QWORD [rsp-8+8*1]
	add rsp,32
;; rsp=4 , %2459~2'(= a44◂ [ *{ a2◂ [ *{ {| l |}a17◂ [ a22◂ [ {| l |}]]a3◂ [ a32◂ [ ]]a26◂ [ a18◂ [ ]{| l |}]}]a26◂ [ a18◂ [ ]{| l |}]}] ) %2458~1'(= r ) %2457~0'(= r ) %2454~11'(= a3◂ [ a32◂ [ ]] ) %2453~10'(= a17◂ [ a22◂ [ {| l |}]] ) %2452~9'(= {| l |} ) %2451~8'(= a44◂ [ *{ }] ) 
;; ? 2'(= a44◂ [ *{ a2◂ [ *{ {| l |}a17◂ [ a22◂ [ {| l |}]]a3◂ [ a32◂ [ ]]a26◂ [ a18◂ [ ]{| l |}]}]a26◂ [ a18◂ [ ]{| l |}]}] ) ⊢ 0(<2)◂{ 3'(= a2◂ [ *{ {| l |}a17◂ [ a22◂ [ {| l |}]]a3◂ [ a32◂ [ ]]a26◂ [ a18◂ [ ]{| l |}]}] ) 4'(= a26◂ [ a18◂ [ ]{| l |}] ) }
	mov rdi,r8
	cmp BYTE [rdi+6],0
	jnz LB_4843
	jmp LB_4844
LB_4843:
	jmp LB_4842
LB_4844:
	mov r9, QWORD [r8+8]
	mov r10, QWORD [r8+16]
	mov QWORD [GBG_VCT+8*0],r8
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_RCD 2,rdi
;; rsp=4 , %2462~4'(= a26◂ [ a18◂ [ ]{| l |}] ) %2461~3'(= a2◂ [ *{ {| l |}a17◂ [ a22◂ [ {| l |}]]a3◂ [ a32◂ [ ]]a26◂ [ a18◂ [ ]{| l |}]}] ) %2458~1'(= r ) %2457~0'(= r ) %2454~11'(= a3◂ [ a32◂ [ ]] ) %2453~10'(= a17◂ [ a22◂ [ {| l |}]] ) %2452~9'(= {| l |} ) %2451~8'(= a44◂ [ *{ }] ) 
; #23 { { 9'(= {| l |} ) 10'(= a17◂ [ a22◂ [ {| l |}]] ) 11'(= a3◂ [ a32◂ [ ]] ) 4'(= a26◂ [ a18◂ [ ]{| l |}] ) } 3'(= a2◂ [ *{ {| l |}a17◂ [ a22◂ [ {| l |}]]a3◂ [ a32◂ [ ]]a26◂ [ a18◂ [ ]{| l |}]}] ) } ⊢ 0(<2)◂{ { 9'(= {| l |} ) 10'(= a17◂ [ a22◂ [ {| l |}]] ) 11'(= a3◂ [ a32◂ [ ]] ) 4'(= a26◂ [ a18◂ [ ]{| l |}] ) } 3'(= a2◂ [ *{ {| l |}a17◂ [ a22◂ [ {| l |}]]a3◂ [ a32◂ [ ]]a26◂ [ a18◂ [ ]{| l |}]}] ) }
;; rsp=4 , %2463~0(<2)◂{ { 9'(= {| l |} ) 10'(= a17◂ [ a22◂ [ {| l |}]] ) 11'(= a3◂ [ a32◂ [ ]] ) 4'(= a26◂ [ a18◂ [ ]{| l |}] ) } 3'(= a2◂ [ *{ {| l |}a17◂ [ a22◂ [ {| l |}]]a3◂ [ a32◂ [ ]]a26◂ [ a18◂ [ ]{| l |}]}] ) } %2458~1'(= r ) %2457~0'(= r ) %2451~8'(= a44◂ [ *{ }] ) 
; #198 0(<2)◂{ { 9'(= {| l |} ) 10'(= a17◂ [ a22◂ [ {| l |}]] ) 11'(= a3◂ [ a32◂ [ ]] ) 4'(= a26◂ [ a18◂ [ ]{| l |}] ) } 3'(= a2◂ [ *{ {| l |}a17◂ [ a22◂ [ {| l |}]]a3◂ [ a32◂ [ ]]a26◂ [ a18◂ [ ]{| l |}]}] ) } ⊢ 0(<2)◂0(<2)◂{ { 9'(= {| l |} ) 10'(= a17◂ [ a22◂ [ {| l |}]] ) 11'(= a3◂ [ a32◂ [ ]] ) 4'(= a26◂ [ a18◂ [ ]{| l |}] ) } 3'(= a2◂ [ *{ {| l |}a17◂ [ a22◂ [ {| l |}]]a3◂ [ a32◂ [ ]]a26◂ [ a18◂ [ ]{| l |}]}] ) }
;; rsp=4 , %2464~0(<2)◂0(<2)◂{ { 9'(= {| l |} ) 10'(= a17◂ [ a22◂ [ {| l |}]] ) 11'(= a3◂ [ a32◂ [ ]] ) 4'(= a26◂ [ a18◂ [ ]{| l |}] ) } 3'(= a2◂ [ *{ {| l |}a17◂ [ a22◂ [ {| l |}]]a3◂ [ a32◂ [ ]]a26◂ [ a18◂ [ ]{| l |}]}] ) } %2458~1'(= r ) %2457~0'(= r ) %2451~8'(= a44◂ [ *{ }] ) 
; #24 0(<2)◂0(<2)◂{ { 9'(= {| l |} ) 10'(= a17◂ [ a22◂ [ {| l |}]] ) 11'(= a3◂ [ a32◂ [ ]] ) 4'(= a26◂ [ a18◂ [ ]{| l |}] ) } 3'(= a2◂ [ *{ {| l |}a17◂ [ a22◂ [ {| l |}]]a3◂ [ a32◂ [ ]]a26◂ [ a18◂ [ ]{| l |}]}] ) } ⊢ 0(<2)◂0(<2)◂0(<2)◂{ { 9'(= {| l |} ) 10'(= a17◂ [ a22◂ [ {| l |}]] ) 11'(= a3◂ [ a32◂ [ ]] ) 4'(= a26◂ [ a18◂ [ ]{| l |}] ) } 3'(= a2◂ [ *{ {| l |}a17◂ [ a22◂ [ {| l |}]]a3◂ [ a32◂ [ ]]a26◂ [ a18◂ [ ]{| l |}]}] ) }
;; rsp=4 , %2465~0(<2)◂0(<2)◂0(<2)◂{ { 9'(= {| l |} ) 10'(= a17◂ [ a22◂ [ {| l |}]] ) 11'(= a3◂ [ a32◂ [ ]] ) 4'(= a26◂ [ a18◂ [ ]{| l |}] ) } 3'(= a2◂ [ *{ {| l |}a17◂ [ a22◂ [ {| l |}]]a3◂ [ a32◂ [ ]]a26◂ [ a18◂ [ ]{| l |}]}] ) } %2458~1'(= r ) %2457~0'(= r ) %2451~8'(= a44◂ [ *{ }] ) 
; ∎ 0(<2)◂0(<2)◂0(<2)◂{ { 9'(= {| l |} ) 10'(= a17◂ [ a22◂ [ {| l |}]] ) 11'(= a3◂ [ a32◂ [ ]] ) 4'(= a26◂ [ a18◂ [ ]{| l |}] ) } 3'(= a2◂ [ *{ {| l |}a17◂ [ a22◂ [ {| l |}]]a3◂ [ a32◂ [ ]]a26◂ [ a18◂ [ ]{| l |}]}] ) }
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 8'(= a44◂ [ *{ }] )
	mov rdi,QWORD [rsp-8+8*4]
	C_PUSH_REGS
	mov r8,rdi
	call LB_1876
	C_POP_REGS
; .mov_ptn2 0(<2)◂0(<2)◂0(<2)◂{ { 9'(= {| l |} ) 10'(= a17◂ [ a22◂ [ {| l |}]] ) 11'(= a3◂ [ a32◂ [ ]] ) 4'(= a26◂ [ a18◂ [ ]{| l |}] ) } 3'(= a2◂ [ *{ {| l |}a17◂ [ a22◂ [ {| l |}]]a3◂ [ a32◂ [ ]]a26◂ [ a18◂ [ ]{| l |}]}] ) } ⊢ 2'(= a3◂ [ a44◂ [ a2◂ [ *{ {| l |}a17◂ [ a22◂ [ {| l |}]]a3◂ [ a32◂ [ ]]a26◂ [ a18◂ [ ]{| l |}]}]]] )
; .mov_ptn 0(<2)◂0(<2)◂0(<2)◂{ { 9'(= {| l |} ) 10'(= a17◂ [ a22◂ [ {| l |}]] ) 11'(= a3◂ [ a32◂ [ ]] ) 4'(= a26◂ [ a18◂ [ ]{| l |}] ) } 3'(= a2◂ [ *{ {| l |}a17◂ [ a22◂ [ {| l |}]]a3◂ [ a32◂ [ ]]a26◂ [ a18◂ [ ]{| l |}]}] ) } ⊢ 2'(= a3◂ [ a44◂ [ a2◂ [ *{ {| l |}a17◂ [ a22◂ [ {| l |}]]a3◂ [ a32◂ [ ]]a26◂ [ a18◂ [ ]{| l |}]}]]] )
	ALC_RCD 2, rax
	mov r13,rax
	ALC_RCD 4, rax
	mov r14,rax
	mov rax,QWORD [rsp-8+8*3]
	mov QWORD [r14+8+8*0],rax
	mov rax,QWORD [rsp-8+8*2]
	mov QWORD [r14+8+8*1],rax
	mov rax,QWORD [rsp-8+8*1]
	mov QWORD [r14+8+8*2],rax
	mov rax,r10
	mov QWORD [r14+8+8*3],rax
	mov rax,r14
	mov QWORD [r13+8+8*0],rax
	mov rax,r9
	mov QWORD [r13+8+8*1],rax
	mov rax,r13
	mov BYTE [rax+6],0
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,32
	jmp LB_4831
LB_4842:
;; ?. 2'(= a44◂ [ *{ a2◂ [ *{ {| l |}a17◂ [ a22◂ [ {| l |}]]a3◂ [ a32◂ [ ]]a26◂ [ a18◂ [ ]{| l |}]}]a26◂ [ a18◂ [ ]{| l |}]}] ) ⊢ 1(<2)◂3'(= a2◂ [ *{ rr{| l |}}] )
	mov QWORD [GBG_VCT+8*0],rdi
	mov r9,QWORD [rdi+8]
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_LN rdi
;; rsp=4 , %2460~3'(= a2◂ [ *{ rr{| l |}}] ) %2458~1'(= r ) %2457~0'(= r ) %2454~11'(= a3◂ [ a32◂ [ ]] ) %2453~10'(= a17◂ [ a22◂ [ {| l |}]] ) %2452~9'(= {| l |} ) %2451~8'(= a44◂ [ *{ }] ) 
; #197 3'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 1(<2)◂3'(= a2◂ [ *{ rr{| l |}}] )
;; rsp=4 , %2466~1(<2)◂3'(= a2◂ [ *{ rr{| l |}}] ) %2458~1'(= r ) %2457~0'(= r ) %2454~11'(= a3◂ [ a32◂ [ ]] ) %2453~10'(= a17◂ [ a22◂ [ {| l |}]] ) %2452~9'(= {| l |} ) %2451~8'(= a44◂ [ *{ }] ) 
; #24 1(<2)◂3'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 0(<2)◂1(<2)◂3'(= a2◂ [ *{ rr{| l |}}] )
;; rsp=4 , %2467~0(<2)◂1(<2)◂3'(= a2◂ [ *{ rr{| l |}}] ) %2458~1'(= r ) %2457~0'(= r ) %2454~11'(= a3◂ [ a32◂ [ ]] ) %2453~10'(= a17◂ [ a22◂ [ {| l |}]] ) %2452~9'(= {| l |} ) %2451~8'(= a44◂ [ *{ }] ) 
; ∎ 0(<2)◂1(<2)◂3'(= a2◂ [ *{ rr{| l |}}] )
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 11'(= a3◂ [ a32◂ [ ]] )
	mov rdi,QWORD [rsp-8+8*1]
	C_PUSH_REGS
	mov r8,rdi
	call LB_995
	C_POP_REGS
; .dlt.ptn 10'(= a17◂ [ a22◂ [ {| l |}]] )
	mov rdi,QWORD [rsp-8+8*2]
	C_PUSH_REGS
	mov r8,rdi
	call LB_791
	C_POP_REGS
; .dlt.ptn 9'(= {| l |} )
	mov rdi,QWORD [rsp-8+8*3]
	C_PUSH_REGS
	mov r8,rdi
	mov rdi,r8
	call free_s8
	C_POP_REGS
; .dlt.ptn 8'(= a44◂ [ *{ }] )
	mov rdi,QWORD [rsp-8+8*4]
	C_PUSH_REGS
	mov r8,rdi
	call LB_1876
	C_POP_REGS
; .mov_ptn2 0(<2)◂1(<2)◂3'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 2'(= a3◂ [ a44◂ [ a2◂ [ *{ {| l |}a17◂ [ a22◂ [ {| l |}]]a3◂ [ a32◂ [ ]]a26◂ [ a18◂ [ ]{| l |}]}]]] )
; .mov_ptn 0(<2)◂1(<2)◂3'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 2'(= a3◂ [ a44◂ [ a2◂ [ *{ {| l |}a17◂ [ a22◂ [ {| l |}]]a3◂ [ a32◂ [ ]]a26◂ [ a18◂ [ ]{| l |}]}]]] )
	mov rax,r9
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],1
	mov QWORD [rax+8],rdi
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,32
	jmp LB_4831
LB_4831:
	cmp BYTE [r8+6],0
	jnz LB_4760
	POP_GRM_SCC
	ret
LB_4760:
	RB_GRM
	mov QWORD [rsp+8*0],r14
	mov r13,QWORD [rsp+16+8*0]
	mov r14,QWORD [rsp+8*0]
	jmp LB_4846
LB_4846
;; rsp=0 , %2469~1'(= r ) %2468~0'(= r ) 
; #22 { } ⊢ 1(<2)◂{ }
;; rsp=0 , %2470~1(<2)◂{ } %2469~1'(= r ) %2468~0'(= r ) 
; #198 1(<2)◂{ } ⊢ 0(<2)◂1(<2)◂{ }
;; rsp=0 , %2471~0(<2)◂1(<2)◂{ } %2469~1'(= r ) %2468~0'(= r ) 
; #24 0(<2)◂1(<2)◂{ } ⊢ 0(<2)◂0(<2)◂1(<2)◂{ }
;; rsp=0 , %2472~0(<2)◂0(<2)◂1(<2)◂{ } %2469~1'(= r ) %2468~0'(= r ) 
; ∎ 0(<2)◂0(<2)◂1(<2)◂{ }
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂0(<2)◂1(<2)◂{ } ⊢ 2'(= a3◂ [ a44◂ [ a2◂ [ *{ {| l |}a17◂ [ a22◂ [ {| l |}]]a3◂ [ a32◂ [ ]]a26◂ [ a18◂ [ ]{| l |}]}]]] )
; .mov_ptn 0(<2)◂0(<2)◂1(<2)◂{ } ⊢ 2'(= a3◂ [ a44◂ [ a2◂ [ *{ {| l |}a17◂ [ a22◂ [ {| l |}]]a3◂ [ a32◂ [ ]]a26◂ [ a18◂ [ ]{| l |}]}]]] )
	mov rax,unt 
	mov rax,unt_1
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	jmp LB_4847
LB_4847:
	cmp BYTE [r8+6],0
	jnz LB_4845
	POP_GRM_SCC
	ret
LB_4845:
	POP_GRM_FAIL 
	ret
ETR_262:
	mov r9,0x0000_ffff_ffff_ffff
	and r9,[r13]
	call GRM_262
	ret
GRM_262:
	PUSH_GRM
	jmp LB_4850
LB_4849:
	add r14,1 
LB_4850:
	cmp r14,r9
	jge LB_4851
	JZ_LINE_SPC BYTE [r13+8+r14], LB_4849
LB_4851
	lea rax,[r14+1]
	cmp rax,r9
	jg LB_4854
	jmp LB_4855
LB_4854:
	mov r8,unt_1
	jmp LB_4852
LB_4855:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],58
	jnz LB_4856
	jmp LB_4857
LB_4856:
	mov r8,unt_1
	jmp LB_4852
LB_4857:
	add r14,1
	jmp LB_4853
LB_4852:
	add rsp,0
	jmp LB_4848
LB_4853:
	jmp LB_4859
LB_4858:
	add r14,1 
LB_4859:
	cmp r14,r9
	jge LB_4860
	JZ_LINE_SPC BYTE [r13+8+r14], LB_4858
LB_4860
	call GRM_215
	cmp BYTE [r8+6],0
	jnz LB_4863
	jmp LB_4864
LB_4863:
	jmp LB_4861
LB_4864:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a32◂ [ ] ) ⊢ 8'(= a32◂ [ ] )
; .mov_ptn 2'(= a32◂ [ ] ) ⊢ 8'(= a32◂ [ ] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_4862
LB_4861:
	add rsp,0
	POP_GRM_FAIL
	ret
LB_4862:
	mov QWORD [rsp+8*1],r14
	mov r13,QWORD [rsp+16+8*1]
	mov r14,QWORD [rsp+8*1]
	jmp LB_4865
LB_4865
;; rsp=1 , %2475~1'(= r ) %2474~0'(= r ) %2473~8'(= a32◂ [ ] ) 
; #24 8'(= a32◂ [ ] ) ⊢ 0(<2)◂8'(= a32◂ [ ] )
;; rsp=1 , %2476~0(<2)◂8'(= a32◂ [ ] ) %2475~1'(= r ) %2474~0'(= r ) 
; #24 0(<2)◂8'(= a32◂ [ ] ) ⊢ 0(<2)◂0(<2)◂8'(= a32◂ [ ] )
;; rsp=1 , %2477~0(<2)◂0(<2)◂8'(= a32◂ [ ] ) %2475~1'(= r ) %2474~0'(= r ) 
; ∎ 0(<2)◂0(<2)◂8'(= a32◂ [ ] )
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂0(<2)◂8'(= a32◂ [ ] ) ⊢ 2'(= a3◂ [ a3◂ [ a32◂ [ ]]] )
; .mov_ptn 0(<2)◂0(<2)◂8'(= a32◂ [ ] ) ⊢ 2'(= a3◂ [ a3◂ [ a32◂ [ ]]] )
	mov rax,QWORD [rsp-8+8*1]
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,8
	jmp LB_4866
LB_4866:
	cmp BYTE [r8+6],0
	jnz LB_4848
	POP_GRM_SCC
	ret
LB_4848:
	RB_GRM
	mov QWORD [rsp+8*0],r14
	mov r13,QWORD [rsp+16+8*0]
	mov r14,QWORD [rsp+8*0]
	jmp LB_4868
LB_4868
;; rsp=0 , %2479~1'(= r ) %2478~0'(= r ) 
; #25 { } ⊢ 1(<2)◂{ }
;; rsp=0 , %2480~1(<2)◂{ } %2479~1'(= r ) %2478~0'(= r ) 
; #24 1(<2)◂{ } ⊢ 0(<2)◂1(<2)◂{ }
;; rsp=0 , %2481~0(<2)◂1(<2)◂{ } %2479~1'(= r ) %2478~0'(= r ) 
; ∎ 0(<2)◂1(<2)◂{ }
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂1(<2)◂{ } ⊢ 2'(= a3◂ [ a3◂ [ a32◂ [ ]]] )
; .mov_ptn 0(<2)◂1(<2)◂{ } ⊢ 2'(= a3◂ [ a3◂ [ a32◂ [ ]]] )
	mov rax,unt 
	mov rax,unt_1
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	jmp LB_4869
LB_4869:
	cmp BYTE [r8+6],0
	jnz LB_4867
	POP_GRM_SCC
	ret
LB_4867:
	POP_GRM_FAIL 
	ret
ETR_263:
	mov r9,0x0000_ffff_ffff_ffff
	and r9,[r13]
	call GRM_263
	ret
GRM_263:
	PUSH_GRM
	jmp LB_4872
LB_4871:
	add r14,1 
LB_4872:
	cmp r14,r9
	jge LB_4873
	JZ_LINE_SPC BYTE [r13+8+r14], LB_4871
LB_4873
	lea rax,[r14+1]
	cmp rax,r9
	jg LB_4876
	jmp LB_4877
LB_4876:
	mov r8,unt_1
	jmp LB_4874
LB_4877:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],61
	jnz LB_4878
	jmp LB_4879
LB_4878:
	mov r8,unt_1
	jmp LB_4874
LB_4879:
	add r14,1
	jmp LB_4875
LB_4874:
	add rsp,0
	jmp LB_4870
LB_4875:
	jmp LB_4881
LB_4880:
	add r14,1 
LB_4881:
	cmp r14,r9
	jge LB_4882
	JZ_LINE_SPC BYTE [r13+8+r14], LB_4880
LB_4882
	call GRM_195
	cmp BYTE [r8+6],0
	jnz LB_4885
	jmp LB_4886
LB_4885:
	jmp LB_4883
LB_4886:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a20◂ [ a18◂ [ ]] ) ⊢ 8'(= a20◂ [ a18◂ [ ]] )
; .mov_ptn 2'(= a20◂ [ a18◂ [ ]] ) ⊢ 8'(= a20◂ [ a18◂ [ ]] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_4884
LB_4883:
	add rsp,0
	POP_GRM_FAIL
	ret
LB_4884:
	jmp LB_4888
LB_4887:
	add r14,1 
LB_4888:
	cmp r14,r9
	jge LB_4889
	JZ_LINE_SPC BYTE [r13+8+r14], LB_4887
LB_4889
	lea rax,[r14+1]
	cmp rax,r9
	jg LB_4892
	jmp LB_4893
LB_4892:
	mov r8,unt_1
	jmp LB_4890
LB_4893:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],10
	jnz LB_4894
	jmp LB_4895
LB_4894:
	mov r8,unt_1
	jmp LB_4890
LB_4895:
	add r14,1
	jmp LB_4891
LB_4890:
	add rsp,8
	POP_GRM_FAIL
	ret
LB_4891:
	mov QWORD [rsp+8*1],r14
	mov r13,QWORD [rsp+16+8*1]
	mov r14,QWORD [rsp+8*1]
	jmp LB_4896
LB_4896
;; rsp=1 , %2484~1'(= r ) %2483~0'(= r ) %2482~8'(= a20◂ [ a18◂ [ ]] ) 
; #172 8'(= a20◂ [ a18◂ [ ]] ) ⊢ 1(<3)◂8'(= a20◂ [ a18◂ [ ]] )
;; rsp=1 , %2485~1(<3)◂8'(= a20◂ [ a18◂ [ ]] ) %2484~1'(= r ) %2483~0'(= r ) 
; #198 1(<3)◂8'(= a20◂ [ a18◂ [ ]] ) ⊢ 0(<2)◂1(<3)◂8'(= a20◂ [ a18◂ [ ]] )
;; rsp=1 , %2486~0(<2)◂1(<3)◂8'(= a20◂ [ a18◂ [ ]] ) %2484~1'(= r ) %2483~0'(= r ) 
; #24 0(<2)◂1(<3)◂8'(= a20◂ [ a18◂ [ ]] ) ⊢ 0(<2)◂0(<2)◂1(<3)◂8'(= a20◂ [ a18◂ [ ]] )
;; rsp=1 , %2487~0(<2)◂0(<2)◂1(<3)◂8'(= a20◂ [ a18◂ [ ]] ) %2484~1'(= r ) %2483~0'(= r ) 
; ∎ 0(<2)◂0(<2)◂1(<3)◂8'(= a20◂ [ a18◂ [ ]] )
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂0(<2)◂1(<3)◂8'(= a20◂ [ a18◂ [ ]] ) ⊢ 2'(= a3◂ [ a44◂ [ a42◂ [ ]]] )
; .mov_ptn 0(<2)◂0(<2)◂1(<3)◂8'(= a20◂ [ a18◂ [ ]] ) ⊢ 2'(= a3◂ [ a44◂ [ a42◂ [ ]]] )
	mov rax,QWORD [rsp-8+8*1]
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],1
	mov QWORD [rax+8],rdi
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,8
	jmp LB_4897
LB_4897:
	cmp BYTE [r8+6],0
	jnz LB_4870
	POP_GRM_SCC
	ret
LB_4870:
	RB_GRM
	jmp LB_4900
LB_4899:
	add r14,1 
LB_4900:
	cmp r14,r9
	jge LB_4901
	JZ_LINE_SPC BYTE [r13+8+r14], LB_4899
LB_4901
	lea rax,[r14+2]
	cmp rax,r9
	jg LB_4904
	jmp LB_4905
LB_4904:
	mov r8,unt_1
	jmp LB_4902
LB_4905:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],194
	jnz LB_4906
	cmp BYTE [rdi+1],171
	jnz LB_4906
	jmp LB_4907
LB_4906:
	mov r8,unt_1
	jmp LB_4902
LB_4907:
	add r14,2
	jmp LB_4903
LB_4902:
	add rsp,0
	jmp LB_4898
LB_4903:
	jmp LB_4909
LB_4908:
	add r14,1 
LB_4909:
	cmp r14,r9
	jge LB_4910
	JZ_LINE_SPC BYTE [r13+8+r14], LB_4908
LB_4910
	lea rax,[r14+1]
	cmp rax,r9
	jg LB_4913
	jmp LB_4914
LB_4913:
	mov r8,unt_1
	jmp LB_4911
LB_4914:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],10
	jnz LB_4915
	jmp LB_4916
LB_4915:
	mov r8,unt_1
	jmp LB_4911
LB_4916:
	add r14,1
	jmp LB_4912
LB_4911:
	add rsp,0
	POP_GRM_FAIL
	ret
LB_4912:
	jmp LB_4918
LB_4917:
	add r14,1 
LB_4918:
	cmp r14,r9
	jge LB_4919
	JZ_LINE_SPC BYTE [r13+8+r14], LB_4917
LB_4919
	call GRM_239
	cmp BYTE [r8+6],0
	jnz LB_4922
	jmp LB_4923
LB_4922:
	jmp LB_4920
LB_4923:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a44◂ [ a26◂ [ a18◂ [ ]{| l |}]] ) ⊢ 8'(= a44◂ [ a26◂ [ a18◂ [ ]{| l |}]] )
; .mov_ptn 2'(= a44◂ [ a26◂ [ a18◂ [ ]{| l |}]] ) ⊢ 8'(= a44◂ [ a26◂ [ a18◂ [ ]{| l |}]] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_4921
LB_4920:
	add rsp,0
	POP_GRM_FAIL
	ret
LB_4921:
	mov QWORD [rsp+8*1],r14
	mov r13,QWORD [rsp+16+8*1]
	mov r14,QWORD [rsp+8*1]
	jmp LB_4924
LB_4924
;; rsp=1 , %2490~1'(= r ) %2489~0'(= r ) %2488~8'(= a44◂ [ a26◂ [ a18◂ [ ]{| l |}]] ) 
;; ? 8'(= a44◂ [ a26◂ [ a18◂ [ ]{| l |}]] ) ⊢ 0(<2)◂2'(= a26◂ [ a18◂ [ ]{| l |}] )
	mov rdi,QWORD [rsp-8+8*1]
	cmp BYTE [rdi+6],0
	jnz LB_4927
	jmp LB_4928
LB_4927:
	jmp LB_4926
LB_4928:
	mov QWORD [GBG_VCT+8*0],rdi
	mov r8,QWORD [rdi+8]
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_LN rdi
;; rsp=1 , %2492~2'(= a26◂ [ a18◂ [ ]{| l |}] ) %2490~1'(= r ) %2489~0'(= r ) 
; #171 2'(= a26◂ [ a18◂ [ ]{| l |}] ) ⊢ 2(<3)◂2'(= a26◂ [ a18◂ [ ]{| l |}] )
;; rsp=1 , %2493~2(<3)◂2'(= a26◂ [ a18◂ [ ]{| l |}] ) %2490~1'(= r ) %2489~0'(= r ) 
; #198 2(<3)◂2'(= a26◂ [ a18◂ [ ]{| l |}] ) ⊢ 0(<2)◂2(<3)◂2'(= a26◂ [ a18◂ [ ]{| l |}] )
;; rsp=1 , %2494~0(<2)◂2(<3)◂2'(= a26◂ [ a18◂ [ ]{| l |}] ) %2490~1'(= r ) %2489~0'(= r ) 
; #24 0(<2)◂2(<3)◂2'(= a26◂ [ a18◂ [ ]{| l |}] ) ⊢ 0(<2)◂0(<2)◂2(<3)◂2'(= a26◂ [ a18◂ [ ]{| l |}] )
;; rsp=1 , %2495~0(<2)◂0(<2)◂2(<3)◂2'(= a26◂ [ a18◂ [ ]{| l |}] ) %2490~1'(= r ) %2489~0'(= r ) 
; ∎ 0(<2)◂0(<2)◂2(<3)◂2'(= a26◂ [ a18◂ [ ]{| l |}] )
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂0(<2)◂2(<3)◂2'(= a26◂ [ a18◂ [ ]{| l |}] ) ⊢ 2'(= a3◂ [ a44◂ [ a42◂ [ ]]] )
	mov r13,r8
; .mov_ptn 0(<2)◂0(<2)◂2(<3)◂0'(= a26◂ [ a18◂ [ ]{| l |}] ) ⊢ 2'(= a3◂ [ a44◂ [ a42◂ [ ]]] )
	mov rax,r13
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],2
	mov QWORD [rax+8],rdi
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,8
	jmp LB_4925
LB_4926:
;; ?. 8'(= a44◂ [ a26◂ [ a18◂ [ ]{| l |}]] ) ⊢ 1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] )
	mov QWORD [GBG_VCT+8*0],rdi
	mov r8,QWORD [rdi+8]
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_LN rdi
;; rsp=1 , %2491~2'(= a2◂ [ *{ rr{| l |}}] ) %2490~1'(= r ) %2489~0'(= r ) 
; #197 2'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] )
;; rsp=1 , %2496~1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] ) %2490~1'(= r ) %2489~0'(= r ) 
; #24 1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 0(<2)◂1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] )
;; rsp=1 , %2497~0(<2)◂1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] ) %2490~1'(= r ) %2489~0'(= r ) 
; ∎ 0(<2)◂1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] )
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 2'(= a3◂ [ a44◂ [ a42◂ [ ]]] )
	mov r13,r8
; .mov_ptn 0(<2)◂1(<2)◂0'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 2'(= a3◂ [ a44◂ [ a42◂ [ ]]] )
	mov rax,r13
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],1
	mov QWORD [rax+8],rdi
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,8
	jmp LB_4925
LB_4925:
	cmp BYTE [r8+6],0
	jnz LB_4898
	POP_GRM_SCC
	ret
LB_4898:
	RB_GRM
	jmp LB_4931
LB_4930:
	add r14,1 
LB_4931:
	cmp r14,r9
	jge LB_4932
	JZ_LINE_SPC BYTE [r13+8+r14], LB_4930
LB_4932
	call GRM_210
	cmp BYTE [r8+6],0
	jnz LB_4935
	jmp LB_4936
LB_4935:
	jmp LB_4933
LB_4936:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a17◂ [ a22◂ [ {| l |}]] ) ⊢ 8'(= a17◂ [ a22◂ [ {| l |}]] )
; .mov_ptn 2'(= a17◂ [ a22◂ [ {| l |}]] ) ⊢ 8'(= a17◂ [ a22◂ [ {| l |}]] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_4934
LB_4933:
	add rsp,0
	jmp LB_4929
LB_4934:
	jmp LB_4938
LB_4937:
	add r14,1 
LB_4938:
	cmp r14,r9
	jge LB_4939
	JZ_LINE_SPC BYTE [r13+8+r14], LB_4937
LB_4939
	call GRM_262
	cmp BYTE [r8+6],0
	jnz LB_4942
	jmp LB_4943
LB_4942:
	jmp LB_4940
LB_4943:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a3◂ [ a32◂ [ ]] ) ⊢ 9'(= a3◂ [ a32◂ [ ]] )
; .mov_ptn 2'(= a3◂ [ a32◂ [ ]] ) ⊢ 9'(= a3◂ [ a32◂ [ ]] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_4941
LB_4940:
	add rsp,8
	jmp LB_4929
LB_4941:
	jmp LB_4945
LB_4944:
	add r14,1 
LB_4945:
	cmp r14,r9
	jge LB_4946
	JZ_LINE_SPC BYTE [r13+8+r14], LB_4944
LB_4946
	lea rax,[r14+1]
	cmp rax,r9
	jg LB_4949
	jmp LB_4950
LB_4949:
	mov r8,unt_1
	jmp LB_4947
LB_4950:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],10
	jnz LB_4951
	jmp LB_4952
LB_4951:
	mov r8,unt_1
	jmp LB_4947
LB_4952:
	add r14,1
	jmp LB_4948
LB_4947:
	add rsp,16
	jmp LB_4929
LB_4948:
	jmp LB_4954
LB_4953:
	add r14,1 
LB_4954:
	cmp r14,r9
	jge LB_4955
	JZ_LINE_SPC BYTE [r13+8+r14], LB_4953
LB_4955
	call GRM_239
	cmp BYTE [r8+6],0
	jnz LB_4958
	jmp LB_4959
LB_4958:
	jmp LB_4956
LB_4959:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a44◂ [ a26◂ [ a18◂ [ ]{| l |}]] ) ⊢ 10'(= a44◂ [ a26◂ [ a18◂ [ ]{| l |}]] )
; .mov_ptn 2'(= a44◂ [ a26◂ [ a18◂ [ ]{| l |}]] ) ⊢ 10'(= a44◂ [ a26◂ [ a18◂ [ ]{| l |}]] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_4957
LB_4956:
	add rsp,16
	jmp LB_4929
LB_4957:
	mov QWORD [rsp+8*3],r14
	mov r13,QWORD [rsp+16+8*3]
	mov r14,QWORD [rsp+8*3]
	jmp LB_4960
LB_4960
;; rsp=3 , %2502~1'(= r ) %2501~0'(= r ) %2500~10'(= a44◂ [ a26◂ [ a18◂ [ ]{| l |}]] ) %2499~9'(= a3◂ [ a32◂ [ ]] ) %2498~8'(= a17◂ [ a22◂ [ {| l |}]] ) 
;; ? 10'(= a44◂ [ a26◂ [ a18◂ [ ]{| l |}]] ) ⊢ 0(<2)◂2'(= a26◂ [ a18◂ [ ]{| l |}] )
	mov rdi,QWORD [rsp-8+8*1]
	cmp BYTE [rdi+6],0
	jnz LB_4963
	jmp LB_4964
LB_4963:
	jmp LB_4962
LB_4964:
	mov QWORD [GBG_VCT+8*0],rdi
	mov r8,QWORD [rdi+8]
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_LN rdi
;; rsp=3 , %2504~2'(= a26◂ [ a18◂ [ ]{| l |}] ) %2502~1'(= r ) %2501~0'(= r ) %2499~9'(= a3◂ [ a32◂ [ ]] ) %2498~8'(= a17◂ [ a22◂ [ {| l |}]] ) 
; #173 { 8'(= a17◂ [ a22◂ [ {| l |}]] ) 9'(= a3◂ [ a32◂ [ ]] ) 2'(= a26◂ [ a18◂ [ ]{| l |}] ) } ⊢ 0(<3)◂{ 8'(= a17◂ [ a22◂ [ {| l |}]] ) 9'(= a3◂ [ a32◂ [ ]] ) 2'(= a26◂ [ a18◂ [ ]{| l |}] ) }
;; rsp=3 , %2505~0(<3)◂{ 8'(= a17◂ [ a22◂ [ {| l |}]] ) 9'(= a3◂ [ a32◂ [ ]] ) 2'(= a26◂ [ a18◂ [ ]{| l |}] ) } %2502~1'(= r ) %2501~0'(= r ) 
; #198 0(<3)◂{ 8'(= a17◂ [ a22◂ [ {| l |}]] ) 9'(= a3◂ [ a32◂ [ ]] ) 2'(= a26◂ [ a18◂ [ ]{| l |}] ) } ⊢ 0(<2)◂0(<3)◂{ 8'(= a17◂ [ a22◂ [ {| l |}]] ) 9'(= a3◂ [ a32◂ [ ]] ) 2'(= a26◂ [ a18◂ [ ]{| l |}] ) }
;; rsp=3 , %2506~0(<2)◂0(<3)◂{ 8'(= a17◂ [ a22◂ [ {| l |}]] ) 9'(= a3◂ [ a32◂ [ ]] ) 2'(= a26◂ [ a18◂ [ ]{| l |}] ) } %2502~1'(= r ) %2501~0'(= r ) 
; #24 0(<2)◂0(<3)◂{ 8'(= a17◂ [ a22◂ [ {| l |}]] ) 9'(= a3◂ [ a32◂ [ ]] ) 2'(= a26◂ [ a18◂ [ ]{| l |}] ) } ⊢ 0(<2)◂0(<2)◂0(<3)◂{ 8'(= a17◂ [ a22◂ [ {| l |}]] ) 9'(= a3◂ [ a32◂ [ ]] ) 2'(= a26◂ [ a18◂ [ ]{| l |}] ) }
;; rsp=3 , %2507~0(<2)◂0(<2)◂0(<3)◂{ 8'(= a17◂ [ a22◂ [ {| l |}]] ) 9'(= a3◂ [ a32◂ [ ]] ) 2'(= a26◂ [ a18◂ [ ]{| l |}] ) } %2502~1'(= r ) %2501~0'(= r ) 
; ∎ 0(<2)◂0(<2)◂0(<3)◂{ 8'(= a17◂ [ a22◂ [ {| l |}]] ) 9'(= a3◂ [ a32◂ [ ]] ) 2'(= a26◂ [ a18◂ [ ]{| l |}] ) }
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂0(<2)◂0(<3)◂{ 8'(= a17◂ [ a22◂ [ {| l |}]] ) 9'(= a3◂ [ a32◂ [ ]] ) 2'(= a26◂ [ a18◂ [ ]{| l |}] ) } ⊢ 2'(= a3◂ [ a44◂ [ a42◂ [ ]]] )
	mov r13,r8
; .mov_ptn 0(<2)◂0(<2)◂0(<3)◂{ 8'(= a17◂ [ a22◂ [ {| l |}]] ) 9'(= a3◂ [ a32◂ [ ]] ) 0'(= a26◂ [ a18◂ [ ]{| l |}] ) } ⊢ 2'(= a3◂ [ a44◂ [ a42◂ [ ]]] )
	ALC_RCD 3, rax
	mov r14,rax
	mov rax,QWORD [rsp-8+8*3]
	mov QWORD [r14+8+8*0],rax
	mov rax,QWORD [rsp-8+8*2]
	mov QWORD [r14+8+8*1],rax
	mov rax,r13
	mov QWORD [r14+8+8*2],rax
	mov rax,r14
	mov BYTE [rax+6],0
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,24
	jmp LB_4961
LB_4962:
;; ?. 10'(= a44◂ [ a26◂ [ a18◂ [ ]{| l |}]] ) ⊢ 1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] )
	mov QWORD [GBG_VCT+8*0],rdi
	mov r8,QWORD [rdi+8]
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_LN rdi
;; rsp=3 , %2503~2'(= a2◂ [ *{ rr{| l |}}] ) %2502~1'(= r ) %2501~0'(= r ) %2499~9'(= a3◂ [ a32◂ [ ]] ) %2498~8'(= a17◂ [ a22◂ [ {| l |}]] ) 
; #197 2'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] )
;; rsp=3 , %2508~1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] ) %2502~1'(= r ) %2501~0'(= r ) %2499~9'(= a3◂ [ a32◂ [ ]] ) %2498~8'(= a17◂ [ a22◂ [ {| l |}]] ) 
; #24 1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 0(<2)◂1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] )
;; rsp=3 , %2509~0(<2)◂1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] ) %2502~1'(= r ) %2501~0'(= r ) %2499~9'(= a3◂ [ a32◂ [ ]] ) %2498~8'(= a17◂ [ a22◂ [ {| l |}]] ) 
; ∎ 0(<2)◂1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] )
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 9'(= a3◂ [ a32◂ [ ]] )
	mov rdi,QWORD [rsp-8+8*2]
	C_PUSH_REGS
	mov r8,rdi
	call LB_995
	C_POP_REGS
; .dlt.ptn 8'(= a17◂ [ a22◂ [ {| l |}]] )
	mov rdi,QWORD [rsp-8+8*3]
	C_PUSH_REGS
	mov r8,rdi
	call LB_791
	C_POP_REGS
; .mov_ptn2 0(<2)◂1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 2'(= a3◂ [ a44◂ [ a42◂ [ ]]] )
	mov r13,r8
; .mov_ptn 0(<2)◂1(<2)◂0'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 2'(= a3◂ [ a44◂ [ a42◂ [ ]]] )
	mov rax,r13
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],1
	mov QWORD [rax+8],rdi
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,24
	jmp LB_4961
LB_4961:
	cmp BYTE [r8+6],0
	jnz LB_4929
	POP_GRM_SCC
	ret
LB_4929:
	POP_GRM_FAIL 
	ret
ETR_264:
	mov r9,0x0000_ffff_ffff_ffff
	and r9,[r13]
	call GRM_264
	ret
GRM_264:
	PUSH_GRM
	jmp LB_4967
LB_4966:
	add r14,1 
LB_4967:
	cmp r14,r9
	jge LB_4968
	JZ_SPC BYTE [r13+8+r14], LB_4966
LB_4968
	lea rax,[r14+1]
	cmp rax,r9
	jg LB_4971
	jmp LB_4972
LB_4971:
	mov r8,unt_1
	jmp LB_4969
LB_4972:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],64
	jnz LB_4973
	jmp LB_4974
LB_4973:
	mov r8,unt_1
	jmp LB_4969
LB_4974:
	add r14,1
	jmp LB_4970
LB_4969:
	add rsp,0
	jmp LB_4965
LB_4970:
	jmp LB_4976
LB_4975:
	add r14,1 
LB_4976:
	cmp r14,r9
	jge LB_4977
	JZ_SPC BYTE [r13+8+r14], LB_4975
LB_4977
	lea rax,[r14+1]
	cmp rax,r9
	jg LB_4980
	jmp LB_4981
LB_4980:
	mov r8,unt_1
	jmp LB_4978
LB_4981:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],46
	jnz LB_4982
	jmp LB_4983
LB_4982:
	mov r8,unt_1
	jmp LB_4978
LB_4983:
	add r14,1
	jmp LB_4979
LB_4978:
	add rsp,0
	jmp LB_4965
LB_4979:
	jmp LB_4985
LB_4984:
	add r14,1 
LB_4985:
	cmp r14,r9
	jge LB_4986
	JZ_SPC BYTE [r13+8+r14], LB_4984
LB_4986
	call GRM_79
	cmp BYTE [r8+6],0
	jnz LB_4989
	jmp LB_4990
LB_4989:
	jmp LB_4987
LB_4990:
	sub rsp,8
; .mov_ptn2 2'(= {| l |} ) ⊢ 8'(= {| l |} )
; .mov_ptn 2'(= {| l |} ) ⊢ 8'(= {| l |} )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_4988
LB_4987:
	add rsp,0
	jmp LB_4965
LB_4988:
	jmp LB_4992
LB_4991:
	add r14,1 
LB_4992:
	cmp r14,r9
	jge LB_4993
	JZ_SPC BYTE [r13+8+r14], LB_4991
LB_4993
	call GRM_266
	cmp BYTE [r8+6],0
	jnz LB_4996
	jmp LB_4997
LB_4996:
	jmp LB_4994
LB_4997:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a33◂ [ a18◂ [ ]{| l |}] ) ⊢ 9'(= a33◂ [ a18◂ [ ]{| l |}] )
; .mov_ptn 2'(= a33◂ [ a18◂ [ ]{| l |}] ) ⊢ 9'(= a33◂ [ a18◂ [ ]{| l |}] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_4995
LB_4994:
	add rsp,8
	jmp LB_4965
LB_4995:
	mov QWORD [rsp+8*2],r14
	mov r13,QWORD [rsp+16+8*2]
	mov r14,QWORD [rsp+8*2]
	jmp LB_4998
LB_4998
;; rsp=2 , %2513~1'(= r ) %2512~0'(= r ) %2511~9'(= a33◂ [ a18◂ [ ]{| l |}] ) %2510~8'(= {| l |} ) 
; #24 { 8'(= {| l |} ) 9'(= a33◂ [ a18◂ [ ]{| l |}] ) } ⊢ 0(<2)◂{ 8'(= {| l |} ) 9'(= a33◂ [ a18◂ [ ]{| l |}] ) }
;; rsp=2 , %2514~0(<2)◂{ 8'(= {| l |} ) 9'(= a33◂ [ a18◂ [ ]{| l |}] ) } %2513~1'(= r ) %2512~0'(= r ) 
; ∎ 0(<2)◂{ 8'(= {| l |} ) 9'(= a33◂ [ a18◂ [ ]{| l |}] ) }
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂{ 8'(= {| l |} ) 9'(= a33◂ [ a18◂ [ ]{| l |}] ) } ⊢ 2'(= a3◂ [ *{ {| l |}a33◂ [ a18◂ [ ]{| l |}]}] )
; .mov_ptn 0(<2)◂{ 8'(= {| l |} ) 9'(= a33◂ [ a18◂ [ ]{| l |}] ) } ⊢ 2'(= a3◂ [ *{ {| l |}a33◂ [ a18◂ [ ]{| l |}]}] )
	ALC_RCD 2, rax
	mov r13,rax
	mov rax,QWORD [rsp-8+8*2]
	mov QWORD [r13+8+8*0],rax
	mov rax,QWORD [rsp-8+8*1]
	mov QWORD [r13+8+8*1],rax
	mov rax,r13
	mov BYTE [rax+6],0
	mov r8,rax
	add rsp,16
	jmp LB_4999
LB_4999:
	cmp BYTE [r8+6],0
	jnz LB_4965
	POP_GRM_SCC
	ret
LB_4965:
	POP_GRM_FAIL 
	ret
ETR_265:
	mov r9,0x0000_ffff_ffff_ffff
	and r9,[r13]
	call GRM_265
	ret
GRM_265:
	PUSH_GRM
	jmp LB_5002
LB_5001:
	add r14,1 
LB_5002:
	cmp r14,r9
	jge LB_5003
	JZ_SPC BYTE [r13+8+r14], LB_5001
LB_5003
	call GRM_264
	cmp BYTE [r8+6],0
	jnz LB_5006
	jmp LB_5007
LB_5006:
	jmp LB_5004
LB_5007:
	sub rsp,16
; .mov_ptn2 2'(= *{ {| l |}a33◂ [ a18◂ [ ]{| l |}]} ) ⊢ { 8'(= {| l |} ) 9'(= a33◂ [ a18◂ [ ]{| l |}] ) }
; .mov_ptn 2'(= *{ {| l |}a33◂ [ a18◂ [ ]{| l |}]} ) ⊢ { 8'(= {| l |} ) 9'(= a33◂ [ a18◂ [ ]{| l |}] ) }
	mov r10, QWORD [r8+8]
	mov QWORD [rsp-8+8*2],r10
	mov r11, QWORD [r8+16]
	mov QWORD [rsp-8+8*1],r11
	mov rdi,r8
	FREE_RCD 2,rdi
	jmp LB_5005
LB_5004:
	add rsp,0
	jmp LB_5000
LB_5005:
	jmp LB_5009
LB_5008:
	add r14,1 
LB_5009:
	cmp r14,r9
	jge LB_5010
	JZ_SPC BYTE [r13+8+r14], LB_5008
LB_5010
	call GRM_265
	cmp BYTE [r8+6],0
	jnz LB_5013
	jmp LB_5014
LB_5013:
	jmp LB_5011
LB_5014:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a2◂ [ *{ {| l |}a33◂ [ a18◂ [ ]{| l |}]}] ) ⊢ 10'(= a2◂ [ *{ {| l |}a33◂ [ a18◂ [ ]{| l |}]}] )
; .mov_ptn 2'(= a2◂ [ *{ {| l |}a33◂ [ a18◂ [ ]{| l |}]}] ) ⊢ 10'(= a2◂ [ *{ {| l |}a33◂ [ a18◂ [ ]{| l |}]}] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_5012
LB_5011:
	add rsp,16
	jmp LB_5000
LB_5012:
	mov QWORD [rsp+8*3],r14
	mov r13,QWORD [rsp+16+8*3]
	mov r14,QWORD [rsp+8*3]
	jmp LB_5015
LB_5015
;; rsp=3 , %2518~1'(= r ) %2517~0'(= r ) %2516~10'(= a2◂ [ *{ {| l |}a33◂ [ a18◂ [ ]{| l |}]}] ) %2515~{ 8'(= {| l |} ) 9'(= a33◂ [ a18◂ [ ]{| l |}] ) } 
; #23 { { 8'(= {| l |} ) 9'(= a33◂ [ a18◂ [ ]{| l |}] ) } 10'(= a2◂ [ *{ {| l |}a33◂ [ a18◂ [ ]{| l |}]}] ) } ⊢ 0(<2)◂{ { 8'(= {| l |} ) 9'(= a33◂ [ a18◂ [ ]{| l |}] ) } 10'(= a2◂ [ *{ {| l |}a33◂ [ a18◂ [ ]{| l |}]}] ) }
;; rsp=3 , %2519~0(<2)◂{ { 8'(= {| l |} ) 9'(= a33◂ [ a18◂ [ ]{| l |}] ) } 10'(= a2◂ [ *{ {| l |}a33◂ [ a18◂ [ ]{| l |}]}] ) } %2518~1'(= r ) %2517~0'(= r ) 
; #24 0(<2)◂{ { 8'(= {| l |} ) 9'(= a33◂ [ a18◂ [ ]{| l |}] ) } 10'(= a2◂ [ *{ {| l |}a33◂ [ a18◂ [ ]{| l |}]}] ) } ⊢ 0(<2)◂0(<2)◂{ { 8'(= {| l |} ) 9'(= a33◂ [ a18◂ [ ]{| l |}] ) } 10'(= a2◂ [ *{ {| l |}a33◂ [ a18◂ [ ]{| l |}]}] ) }
;; rsp=3 , %2520~0(<2)◂0(<2)◂{ { 8'(= {| l |} ) 9'(= a33◂ [ a18◂ [ ]{| l |}] ) } 10'(= a2◂ [ *{ {| l |}a33◂ [ a18◂ [ ]{| l |}]}] ) } %2518~1'(= r ) %2517~0'(= r ) 
; ∎ 0(<2)◂0(<2)◂{ { 8'(= {| l |} ) 9'(= a33◂ [ a18◂ [ ]{| l |}] ) } 10'(= a2◂ [ *{ {| l |}a33◂ [ a18◂ [ ]{| l |}]}] ) }
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂0(<2)◂{ { 8'(= {| l |} ) 9'(= a33◂ [ a18◂ [ ]{| l |}] ) } 10'(= a2◂ [ *{ {| l |}a33◂ [ a18◂ [ ]{| l |}]}] ) } ⊢ 2'(= a3◂ [ a2◂ [ *{ {| l |}a33◂ [ a18◂ [ ]{| l |}]}]] )
; .mov_ptn 0(<2)◂0(<2)◂{ { 8'(= {| l |} ) 9'(= a33◂ [ a18◂ [ ]{| l |}] ) } 10'(= a2◂ [ *{ {| l |}a33◂ [ a18◂ [ ]{| l |}]}] ) } ⊢ 2'(= a3◂ [ a2◂ [ *{ {| l |}a33◂ [ a18◂ [ ]{| l |}]}]] )
	ALC_RCD 2, rax
	mov r13,rax
	ALC_RCD 2, rax
	mov r14,rax
	mov rax,QWORD [rsp-8+8*3]
	mov QWORD [r14+8+8*0],rax
	mov rax,QWORD [rsp-8+8*2]
	mov QWORD [r14+8+8*1],rax
	mov rax,r14
	mov QWORD [r13+8+8*0],rax
	mov rax,QWORD [rsp-8+8*1]
	mov QWORD [r13+8+8*1],rax
	mov rax,r13
	mov BYTE [rax+6],0
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,24
	jmp LB_5016
LB_5016:
	cmp BYTE [r8+6],0
	jnz LB_5000
	POP_GRM_SCC
	ret
LB_5000:
	RB_GRM
	mov QWORD [rsp+8*0],r14
	mov r13,QWORD [rsp+16+8*0]
	mov r14,QWORD [rsp+8*0]
	jmp LB_5018
LB_5018
;; rsp=0 , %2522~1'(= r ) %2521~0'(= r ) 
; #22 { } ⊢ 1(<2)◂{ }
;; rsp=0 , %2523~1(<2)◂{ } %2522~1'(= r ) %2521~0'(= r ) 
; #24 1(<2)◂{ } ⊢ 0(<2)◂1(<2)◂{ }
;; rsp=0 , %2524~0(<2)◂1(<2)◂{ } %2522~1'(= r ) %2521~0'(= r ) 
; ∎ 0(<2)◂1(<2)◂{ }
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂1(<2)◂{ } ⊢ 2'(= a3◂ [ a2◂ [ *{ {| l |}a33◂ [ a18◂ [ ]{| l |}]}]] )
; .mov_ptn 0(<2)◂1(<2)◂{ } ⊢ 2'(= a3◂ [ a2◂ [ *{ {| l |}a33◂ [ a18◂ [ ]{| l |}]}]] )
	mov rax,unt 
	mov rax,unt_1
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	jmp LB_5019
LB_5019:
	cmp BYTE [r8+6],0
	jnz LB_5017
	POP_GRM_SCC
	ret
LB_5017:
	POP_GRM_FAIL 
	ret
ETR_266:
	mov r9,0x0000_ffff_ffff_ffff
	and r9,[r13]
	call GRM_266
	ret
GRM_266:
	PUSH_GRM
	jmp LB_5022
LB_5021:
	add r14,1 
LB_5022:
	cmp r14,r9
	jge LB_5023
	JZ_SPC BYTE [r13+8+r14], LB_5021
LB_5023
	call GRM_267
	cmp BYTE [r8+6],0
	jnz LB_5026
	jmp LB_5027
LB_5026:
	jmp LB_5024
LB_5027:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a35◂ [ a18◂ [ ]{| l |}] ) ⊢ 8'(= a35◂ [ a18◂ [ ]{| l |}] )
; .mov_ptn 2'(= a35◂ [ a18◂ [ ]{| l |}] ) ⊢ 8'(= a35◂ [ a18◂ [ ]{| l |}] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_5025
LB_5024:
	add rsp,0
	jmp LB_5020
LB_5025:
	mov QWORD [rsp+8*1],r14
	mov r13,QWORD [rsp+16+8*1]
	mov r14,QWORD [rsp+8*1]
	jmp LB_5028
LB_5028
;; rsp=1 , %2527~1'(= r ) %2526~0'(= r ) %2525~8'(= a35◂ [ a18◂ [ ]{| l |}] ) 
; #160 8'(= a35◂ [ a18◂ [ ]{| l |}] ) ⊢ 1(<2)◂8'(= a35◂ [ a18◂ [ ]{| l |}] )
;; rsp=1 , %2528~1(<2)◂8'(= a35◂ [ a18◂ [ ]{| l |}] ) %2527~1'(= r ) %2526~0'(= r ) 
; #24 1(<2)◂8'(= a35◂ [ a18◂ [ ]{| l |}] ) ⊢ 0(<2)◂1(<2)◂8'(= a35◂ [ a18◂ [ ]{| l |}] )
;; rsp=1 , %2529~0(<2)◂1(<2)◂8'(= a35◂ [ a18◂ [ ]{| l |}] ) %2527~1'(= r ) %2526~0'(= r ) 
; ∎ 0(<2)◂1(<2)◂8'(= a35◂ [ a18◂ [ ]{| l |}] )
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂1(<2)◂8'(= a35◂ [ a18◂ [ ]{| l |}] ) ⊢ 2'(= a3◂ [ a33◂ [ a18◂ [ ]{| l |}]] )
; .mov_ptn 0(<2)◂1(<2)◂8'(= a35◂ [ a18◂ [ ]{| l |}] ) ⊢ 2'(= a3◂ [ a33◂ [ a18◂ [ ]{| l |}]] )
	mov rax,QWORD [rsp-8+8*1]
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],1
	mov QWORD [rax+8],rdi
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,8
	jmp LB_5029
LB_5029:
	cmp BYTE [r8+6],0
	jnz LB_5020
	POP_GRM_SCC
	ret
LB_5020:
	RB_GRM
	jmp LB_5032
LB_5031:
	add r14,1 
LB_5032:
	cmp r14,r9
	jge LB_5033
	JZ_SPC BYTE [r13+8+r14], LB_5031
LB_5033
	call GRM_275
	cmp BYTE [r8+6],0
	jnz LB_5036
	jmp LB_5037
LB_5036:
	jmp LB_5034
LB_5037:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a34◂ [ a18◂ [ ]{| l |}] ) ⊢ 8'(= a34◂ [ a18◂ [ ]{| l |}] )
; .mov_ptn 2'(= a34◂ [ a18◂ [ ]{| l |}] ) ⊢ 8'(= a34◂ [ a18◂ [ ]{| l |}] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_5035
LB_5034:
	add rsp,0
	jmp LB_5030
LB_5035:
	mov QWORD [rsp+8*1],r14
	mov r13,QWORD [rsp+16+8*1]
	mov r14,QWORD [rsp+8*1]
	jmp LB_5038
LB_5038
;; rsp=1 , %2532~1'(= r ) %2531~0'(= r ) %2530~8'(= a34◂ [ a18◂ [ ]{| l |}] ) 
; #161 8'(= a34◂ [ a18◂ [ ]{| l |}] ) ⊢ 0(<2)◂8'(= a34◂ [ a18◂ [ ]{| l |}] )
;; rsp=1 , %2533~0(<2)◂8'(= a34◂ [ a18◂ [ ]{| l |}] ) %2532~1'(= r ) %2531~0'(= r ) 
; #24 0(<2)◂8'(= a34◂ [ a18◂ [ ]{| l |}] ) ⊢ 0(<2)◂0(<2)◂8'(= a34◂ [ a18◂ [ ]{| l |}] )
;; rsp=1 , %2534~0(<2)◂0(<2)◂8'(= a34◂ [ a18◂ [ ]{| l |}] ) %2532~1'(= r ) %2531~0'(= r ) 
; ∎ 0(<2)◂0(<2)◂8'(= a34◂ [ a18◂ [ ]{| l |}] )
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂0(<2)◂8'(= a34◂ [ a18◂ [ ]{| l |}] ) ⊢ 2'(= a3◂ [ a33◂ [ a18◂ [ ]{| l |}]] )
; .mov_ptn 0(<2)◂0(<2)◂8'(= a34◂ [ a18◂ [ ]{| l |}] ) ⊢ 2'(= a3◂ [ a33◂ [ a18◂ [ ]{| l |}]] )
	mov rax,QWORD [rsp-8+8*1]
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,8
	jmp LB_5039
LB_5039:
	cmp BYTE [r8+6],0
	jnz LB_5030
	POP_GRM_SCC
	ret
LB_5030:
	POP_GRM_FAIL 
	ret
ETR_267:
	mov r9,0x0000_ffff_ffff_ffff
	and r9,[r13]
	call GRM_267
	ret
GRM_267:
	PUSH_GRM
	jmp LB_5042
LB_5041:
	add r14,1 
LB_5042:
	cmp r14,r9
	jge LB_5043
	JZ_SPC BYTE [r13+8+r14], LB_5041
LB_5043
	call GRM_274
	cmp BYTE [r8+6],0
	jnz LB_5046
	jmp LB_5047
LB_5046:
	jmp LB_5044
LB_5047:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a36◂ [ ] ) ⊢ 8'(= a36◂ [ ] )
; .mov_ptn 2'(= a36◂ [ ] ) ⊢ 8'(= a36◂ [ ] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_5045
LB_5044:
	add rsp,0
	jmp LB_5040
LB_5045:
	jmp LB_5049
LB_5048:
	add r14,1 
LB_5049:
	cmp r14,r9
	jge LB_5050
	JZ_SPC BYTE [r13+8+r14], LB_5048
LB_5050
	call GRM_269
	cmp BYTE [r8+6],0
	jnz LB_5053
	jmp LB_5054
LB_5053:
	jmp LB_5051
LB_5054:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a37◂ [ a18◂ [ ]] ) ⊢ 9'(= a37◂ [ a18◂ [ ]] )
; .mov_ptn 2'(= a37◂ [ a18◂ [ ]] ) ⊢ 9'(= a37◂ [ a18◂ [ ]] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_5052
LB_5051:
	add rsp,8
	POP_GRM_FAIL
	ret
LB_5052:
	jmp LB_5056
LB_5055:
	add r14,1 
LB_5056:
	cmp r14,r9
	jge LB_5057
	JZ_SPC BYTE [r13+8+r14], LB_5055
LB_5057
	call GRM_268
	cmp BYTE [r8+6],0
	jnz LB_5060
	jmp LB_5061
LB_5060:
	jmp LB_5058
LB_5061:
	sub rsp,24
; .mov_ptn2 2'(= *{ a17◂ [ a22◂ [ {| l |}]]a26◂ [ a18◂ [ ]{| l |}]a3◂ [ *{ a17◂ [ a22◂ [ {| l |}]]a35◂ [ a18◂ [ ]{| l |}]}]} ) ⊢ { 10'(= a17◂ [ a22◂ [ {| l |}]] ) 11'(= a26◂ [ a18◂ [ ]{| l |}] ) 12'(= a3◂ [ *{ a17◂ [ a22◂ [ {| l |}]]a35◂ [ a18◂ [ ]{| l |}]}] ) }
; .mov_ptn 2'(= *{ a17◂ [ a22◂ [ {| l |}]]a26◂ [ a18◂ [ ]{| l |}]a3◂ [ *{ a17◂ [ a22◂ [ {| l |}]]a35◂ [ a18◂ [ ]{| l |}]}]} ) ⊢ { 10'(= a17◂ [ a22◂ [ {| l |}]] ) 11'(= a26◂ [ a18◂ [ ]{| l |}] ) 12'(= a3◂ [ *{ a17◂ [ a22◂ [ {| l |}]]a35◂ [ a18◂ [ ]{| l |}]}] ) }
	mov r10, QWORD [r8+8]
	mov QWORD [rsp-8+8*3],r10
	mov r11, QWORD [r8+16]
	mov QWORD [rsp-8+8*2],r11
	mov rcx, QWORD [r8+24]
	mov QWORD [rsp-8+8*1],rcx
	mov rdi,r8
	FREE_RCD 3,rdi
	jmp LB_5059
LB_5058:
	add rsp,16
	POP_GRM_FAIL
	ret
LB_5059:
	mov QWORD [rsp+8*5],r14
	mov r13,QWORD [rsp+16+8*5]
	mov r14,QWORD [rsp+8*5]
	jmp LB_5062
LB_5062
;; rsp=5 , %2541~1'(= r ) %2540~0'(= r ) %2539~12'(= a3◂ [ *{ a17◂ [ a22◂ [ {| l |}]]a35◂ [ a18◂ [ ]{| l |}]}] ) %2538~11'(= a26◂ [ a18◂ [ ]{| l |}] ) %2537~10'(= a17◂ [ a22◂ [ {| l |}]] ) %2536~9'(= a37◂ [ a18◂ [ ]] ) %2535~8'(= a36◂ [ ] ) 
; #168 { } ⊢ 2'(= a2◂ [ a22◂ [ {| l |}]] )
	sub rsp,16
	mov QWORD [rsp+8*0],r13
	mov QWORD [rsp+8*1],r14
; .mov_ptn2 { } ⊢ { }
	call ETR_168
	mov r14,QWORD [rsp-8+8*2]
	mov r8,r13
	mov r13,QWORD [rsp-8+8*1]
	add rsp,16
;; rsp=5 , %2542~2'(= a2◂ [ a22◂ [ {| l |}]] ) %2541~1'(= r ) %2540~0'(= r ) %2539~12'(= a3◂ [ *{ a17◂ [ a22◂ [ {| l |}]]a35◂ [ a18◂ [ ]{| l |}]}] ) %2538~11'(= a26◂ [ a18◂ [ ]{| l |}] ) %2537~10'(= a17◂ [ a22◂ [ {| l |}]] ) %2536~9'(= a37◂ [ a18◂ [ ]] ) %2535~8'(= a36◂ [ ] ) 
; #156 { 2'(= a2◂ [ a22◂ [ {| l |}]] ) 10'(= a17◂ [ a22◂ [ {| l |}]] ) 11'(= a26◂ [ a18◂ [ ]{| l |}] ) 8'(= a36◂ [ ] ) 9'(= a37◂ [ a18◂ [ ]] ) 12'(= a3◂ [ *{ a17◂ [ a22◂ [ {| l |}]]a35◂ [ a18◂ [ ]{| l |}]}] ) } ⊢ 1(<2)◂{ 2'(= a2◂ [ a22◂ [ {| l |}]] ) 10'(= a17◂ [ a22◂ [ {| l |}]] ) 11'(= a26◂ [ a18◂ [ ]{| l |}] ) 8'(= a36◂ [ ] ) 9'(= a37◂ [ a18◂ [ ]] ) 12'(= a3◂ [ *{ a17◂ [ a22◂ [ {| l |}]]a35◂ [ a18◂ [ ]{| l |}]}] ) }
;; rsp=5 , %2543~1(<2)◂{ 2'(= a2◂ [ a22◂ [ {| l |}]] ) 10'(= a17◂ [ a22◂ [ {| l |}]] ) 11'(= a26◂ [ a18◂ [ ]{| l |}] ) 8'(= a36◂ [ ] ) 9'(= a37◂ [ a18◂ [ ]] ) 12'(= a3◂ [ *{ a17◂ [ a22◂ [ {| l |}]]a35◂ [ a18◂ [ ]{| l |}]}] ) } %2541~1'(= r ) %2540~0'(= r ) 
; #24 1(<2)◂{ 2'(= a2◂ [ a22◂ [ {| l |}]] ) 10'(= a17◂ [ a22◂ [ {| l |}]] ) 11'(= a26◂ [ a18◂ [ ]{| l |}] ) 8'(= a36◂ [ ] ) 9'(= a37◂ [ a18◂ [ ]] ) 12'(= a3◂ [ *{ a17◂ [ a22◂ [ {| l |}]]a35◂ [ a18◂ [ ]{| l |}]}] ) } ⊢ 0(<2)◂1(<2)◂{ 2'(= a2◂ [ a22◂ [ {| l |}]] ) 10'(= a17◂ [ a22◂ [ {| l |}]] ) 11'(= a26◂ [ a18◂ [ ]{| l |}] ) 8'(= a36◂ [ ] ) 9'(= a37◂ [ a18◂ [ ]] ) 12'(= a3◂ [ *{ a17◂ [ a22◂ [ {| l |}]]a35◂ [ a18◂ [ ]{| l |}]}] ) }
;; rsp=5 , %2544~0(<2)◂1(<2)◂{ 2'(= a2◂ [ a22◂ [ {| l |}]] ) 10'(= a17◂ [ a22◂ [ {| l |}]] ) 11'(= a26◂ [ a18◂ [ ]{| l |}] ) 8'(= a36◂ [ ] ) 9'(= a37◂ [ a18◂ [ ]] ) 12'(= a3◂ [ *{ a17◂ [ a22◂ [ {| l |}]]a35◂ [ a18◂ [ ]{| l |}]}] ) } %2541~1'(= r ) %2540~0'(= r ) 
; ∎ 0(<2)◂1(<2)◂{ 2'(= a2◂ [ a22◂ [ {| l |}]] ) 10'(= a17◂ [ a22◂ [ {| l |}]] ) 11'(= a26◂ [ a18◂ [ ]{| l |}] ) 8'(= a36◂ [ ] ) 9'(= a37◂ [ a18◂ [ ]] ) 12'(= a3◂ [ *{ a17◂ [ a22◂ [ {| l |}]]a35◂ [ a18◂ [ ]{| l |}]}] ) }
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂1(<2)◂{ 2'(= a2◂ [ a22◂ [ {| l |}]] ) 10'(= a17◂ [ a22◂ [ {| l |}]] ) 11'(= a26◂ [ a18◂ [ ]{| l |}] ) 8'(= a36◂ [ ] ) 9'(= a37◂ [ a18◂ [ ]] ) 12'(= a3◂ [ *{ a17◂ [ a22◂ [ {| l |}]]a35◂ [ a18◂ [ ]{| l |}]}] ) } ⊢ 2'(= a3◂ [ a35◂ [ a18◂ [ ]{| l |}]] )
	mov r13,r8
; .mov_ptn 0(<2)◂1(<2)◂{ 0'(= a2◂ [ a22◂ [ {| l |}]] ) 10'(= a17◂ [ a22◂ [ {| l |}]] ) 11'(= a26◂ [ a18◂ [ ]{| l |}] ) 8'(= a36◂ [ ] ) 9'(= a37◂ [ a18◂ [ ]] ) 12'(= a3◂ [ *{ a17◂ [ a22◂ [ {| l |}]]a35◂ [ a18◂ [ ]{| l |}]}] ) } ⊢ 2'(= a3◂ [ a35◂ [ a18◂ [ ]{| l |}]] )
	ALC_RCD 6, rax
	mov r14,rax
	mov rax,r13
	mov QWORD [r14+8+8*0],rax
	mov rax,QWORD [rsp-8+8*3]
	mov QWORD [r14+8+8*1],rax
	mov rax,QWORD [rsp-8+8*2]
	mov QWORD [r14+8+8*2],rax
	mov rax,QWORD [rsp-8+8*5]
	mov QWORD [r14+8+8*3],rax
	mov rax,QWORD [rsp-8+8*4]
	mov QWORD [r14+8+8*4],rax
	mov rax,QWORD [rsp-8+8*1]
	mov QWORD [r14+8+8*5],rax
	mov rax,r14
	mov BYTE [rax+6],1
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,40
	jmp LB_5063
LB_5063:
	cmp BYTE [r8+6],0
	jnz LB_5040
	POP_GRM_SCC
	ret
LB_5040:
	RB_GRM
	jmp LB_5066
LB_5065:
	add r14,1 
LB_5066:
	cmp r14,r9
	jge LB_5067
	JZ_SPC BYTE [r13+8+r14], LB_5065
LB_5067
	call GRM_273
	cmp BYTE [r8+6],0
	jnz LB_5070
	jmp LB_5071
LB_5070:
	jmp LB_5068
LB_5071:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a36◂ [ ] ) ⊢ 8'(= a36◂ [ ] )
; .mov_ptn 2'(= a36◂ [ ] ) ⊢ 8'(= a36◂ [ ] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_5069
LB_5068:
	add rsp,0
	jmp LB_5064
LB_5069:
	jmp LB_5073
LB_5072:
	add r14,1 
LB_5073:
	cmp r14,r9
	jge LB_5074
	JZ_SPC BYTE [r13+8+r14], LB_5072
LB_5074
	call GRM_269
	cmp BYTE [r8+6],0
	jnz LB_5077
	jmp LB_5078
LB_5077:
	jmp LB_5075
LB_5078:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a37◂ [ a18◂ [ ]] ) ⊢ 9'(= a37◂ [ a18◂ [ ]] )
; .mov_ptn 2'(= a37◂ [ a18◂ [ ]] ) ⊢ 9'(= a37◂ [ a18◂ [ ]] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_5076
LB_5075:
	add rsp,8
	jmp LB_5064
LB_5076:
	jmp LB_5080
LB_5079:
	add r14,1 
LB_5080:
	cmp r14,r9
	jge LB_5081
	JZ_SPC BYTE [r13+8+r14], LB_5079
LB_5081
	call GRM_268
	cmp BYTE [r8+6],0
	jnz LB_5084
	jmp LB_5085
LB_5084:
	jmp LB_5082
LB_5085:
	sub rsp,24
; .mov_ptn2 2'(= *{ a17◂ [ a22◂ [ {| l |}]]a26◂ [ a18◂ [ ]{| l |}]a3◂ [ *{ a17◂ [ a22◂ [ {| l |}]]a35◂ [ a18◂ [ ]{| l |}]}]} ) ⊢ { 10'(= a17◂ [ a22◂ [ {| l |}]] ) 11'(= a26◂ [ a18◂ [ ]{| l |}] ) 12'(= a3◂ [ *{ a17◂ [ a22◂ [ {| l |}]]a35◂ [ a18◂ [ ]{| l |}]}] ) }
; .mov_ptn 2'(= *{ a17◂ [ a22◂ [ {| l |}]]a26◂ [ a18◂ [ ]{| l |}]a3◂ [ *{ a17◂ [ a22◂ [ {| l |}]]a35◂ [ a18◂ [ ]{| l |}]}]} ) ⊢ { 10'(= a17◂ [ a22◂ [ {| l |}]] ) 11'(= a26◂ [ a18◂ [ ]{| l |}] ) 12'(= a3◂ [ *{ a17◂ [ a22◂ [ {| l |}]]a35◂ [ a18◂ [ ]{| l |}]}] ) }
	mov r10, QWORD [r8+8]
	mov QWORD [rsp-8+8*3],r10
	mov r11, QWORD [r8+16]
	mov QWORD [rsp-8+8*2],r11
	mov rcx, QWORD [r8+24]
	mov QWORD [rsp-8+8*1],rcx
	mov rdi,r8
	FREE_RCD 3,rdi
	jmp LB_5083
LB_5082:
	add rsp,16
	jmp LB_5064
LB_5083:
	jmp LB_5087
LB_5086:
	add r14,1 
LB_5087:
	cmp r14,r9
	jge LB_5088
	JZ_SPC BYTE [r13+8+r14], LB_5086
LB_5088
	call GRM_267
	cmp BYTE [r8+6],0
	jnz LB_5091
	jmp LB_5092
LB_5091:
	jmp LB_5089
LB_5092:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a35◂ [ a18◂ [ ]{| l |}] ) ⊢ 13'(= a35◂ [ a18◂ [ ]{| l |}] )
; .mov_ptn 2'(= a35◂ [ a18◂ [ ]{| l |}] ) ⊢ 13'(= a35◂ [ a18◂ [ ]{| l |}] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_5090
LB_5089:
	add rsp,40
	jmp LB_5064
LB_5090:
	mov QWORD [rsp+8*6],r14
	mov r13,QWORD [rsp+16+8*6]
	mov r14,QWORD [rsp+8*6]
	jmp LB_5093
LB_5093
;; rsp=6 , %2552~1'(= r ) %2551~0'(= r ) %2550~13'(= a35◂ [ a18◂ [ ]{| l |}] ) %2549~12'(= a3◂ [ *{ a17◂ [ a22◂ [ {| l |}]]a35◂ [ a18◂ [ ]{| l |}]}] ) %2548~11'(= a26◂ [ a18◂ [ ]{| l |}] ) %2547~10'(= a17◂ [ a22◂ [ {| l |}]] ) %2546~9'(= a37◂ [ a18◂ [ ]] ) %2545~8'(= a36◂ [ ] ) 
; #168 { } ⊢ 2'(= a2◂ [ a22◂ [ {| l |}]] )
	sub rsp,16
	mov QWORD [rsp+8*0],r13
	mov QWORD [rsp+8*1],r14
; .mov_ptn2 { } ⊢ { }
	call ETR_168
	mov r14,QWORD [rsp-8+8*2]
	mov r8,r13
	mov r13,QWORD [rsp-8+8*1]
	add rsp,16
;; rsp=6 , %2553~2'(= a2◂ [ a22◂ [ {| l |}]] ) %2552~1'(= r ) %2551~0'(= r ) %2550~13'(= a35◂ [ a18◂ [ ]{| l |}] ) %2549~12'(= a3◂ [ *{ a17◂ [ a22◂ [ {| l |}]]a35◂ [ a18◂ [ ]{| l |}]}] ) %2548~11'(= a26◂ [ a18◂ [ ]{| l |}] ) %2547~10'(= a17◂ [ a22◂ [ {| l |}]] ) %2546~9'(= a37◂ [ a18◂ [ ]] ) %2545~8'(= a36◂ [ ] ) 
; #157 { 2'(= a2◂ [ a22◂ [ {| l |}]] ) 10'(= a17◂ [ a22◂ [ {| l |}]] ) 11'(= a26◂ [ a18◂ [ ]{| l |}] ) 8'(= a36◂ [ ] ) 9'(= a37◂ [ a18◂ [ ]] ) 12'(= a3◂ [ *{ a17◂ [ a22◂ [ {| l |}]]a35◂ [ a18◂ [ ]{| l |}]}] ) 13'(= a35◂ [ a18◂ [ ]{| l |}] ) } ⊢ 0(<2)◂{ 2'(= a2◂ [ a22◂ [ {| l |}]] ) 10'(= a17◂ [ a22◂ [ {| l |}]] ) 11'(= a26◂ [ a18◂ [ ]{| l |}] ) 8'(= a36◂ [ ] ) 9'(= a37◂ [ a18◂ [ ]] ) 12'(= a3◂ [ *{ a17◂ [ a22◂ [ {| l |}]]a35◂ [ a18◂ [ ]{| l |}]}] ) 13'(= a35◂ [ a18◂ [ ]{| l |}] ) }
;; rsp=6 , %2554~0(<2)◂{ 2'(= a2◂ [ a22◂ [ {| l |}]] ) 10'(= a17◂ [ a22◂ [ {| l |}]] ) 11'(= a26◂ [ a18◂ [ ]{| l |}] ) 8'(= a36◂ [ ] ) 9'(= a37◂ [ a18◂ [ ]] ) 12'(= a3◂ [ *{ a17◂ [ a22◂ [ {| l |}]]a35◂ [ a18◂ [ ]{| l |}]}] ) 13'(= a35◂ [ a18◂ [ ]{| l |}] ) } %2552~1'(= r ) %2551~0'(= r ) 
; #24 0(<2)◂{ 2'(= a2◂ [ a22◂ [ {| l |}]] ) 10'(= a17◂ [ a22◂ [ {| l |}]] ) 11'(= a26◂ [ a18◂ [ ]{| l |}] ) 8'(= a36◂ [ ] ) 9'(= a37◂ [ a18◂ [ ]] ) 12'(= a3◂ [ *{ a17◂ [ a22◂ [ {| l |}]]a35◂ [ a18◂ [ ]{| l |}]}] ) 13'(= a35◂ [ a18◂ [ ]{| l |}] ) } ⊢ 0(<2)◂0(<2)◂{ 2'(= a2◂ [ a22◂ [ {| l |}]] ) 10'(= a17◂ [ a22◂ [ {| l |}]] ) 11'(= a26◂ [ a18◂ [ ]{| l |}] ) 8'(= a36◂ [ ] ) 9'(= a37◂ [ a18◂ [ ]] ) 12'(= a3◂ [ *{ a17◂ [ a22◂ [ {| l |}]]a35◂ [ a18◂ [ ]{| l |}]}] ) 13'(= a35◂ [ a18◂ [ ]{| l |}] ) }
;; rsp=6 , %2555~0(<2)◂0(<2)◂{ 2'(= a2◂ [ a22◂ [ {| l |}]] ) 10'(= a17◂ [ a22◂ [ {| l |}]] ) 11'(= a26◂ [ a18◂ [ ]{| l |}] ) 8'(= a36◂ [ ] ) 9'(= a37◂ [ a18◂ [ ]] ) 12'(= a3◂ [ *{ a17◂ [ a22◂ [ {| l |}]]a35◂ [ a18◂ [ ]{| l |}]}] ) 13'(= a35◂ [ a18◂ [ ]{| l |}] ) } %2552~1'(= r ) %2551~0'(= r ) 
; ∎ 0(<2)◂0(<2)◂{ 2'(= a2◂ [ a22◂ [ {| l |}]] ) 10'(= a17◂ [ a22◂ [ {| l |}]] ) 11'(= a26◂ [ a18◂ [ ]{| l |}] ) 8'(= a36◂ [ ] ) 9'(= a37◂ [ a18◂ [ ]] ) 12'(= a3◂ [ *{ a17◂ [ a22◂ [ {| l |}]]a35◂ [ a18◂ [ ]{| l |}]}] ) 13'(= a35◂ [ a18◂ [ ]{| l |}] ) }
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂0(<2)◂{ 2'(= a2◂ [ a22◂ [ {| l |}]] ) 10'(= a17◂ [ a22◂ [ {| l |}]] ) 11'(= a26◂ [ a18◂ [ ]{| l |}] ) 8'(= a36◂ [ ] ) 9'(= a37◂ [ a18◂ [ ]] ) 12'(= a3◂ [ *{ a17◂ [ a22◂ [ {| l |}]]a35◂ [ a18◂ [ ]{| l |}]}] ) 13'(= a35◂ [ a18◂ [ ]{| l |}] ) } ⊢ 2'(= a3◂ [ a35◂ [ a18◂ [ ]{| l |}]] )
	mov r13,r8
; .mov_ptn 0(<2)◂0(<2)◂{ 0'(= a2◂ [ a22◂ [ {| l |}]] ) 10'(= a17◂ [ a22◂ [ {| l |}]] ) 11'(= a26◂ [ a18◂ [ ]{| l |}] ) 8'(= a36◂ [ ] ) 9'(= a37◂ [ a18◂ [ ]] ) 12'(= a3◂ [ *{ a17◂ [ a22◂ [ {| l |}]]a35◂ [ a18◂ [ ]{| l |}]}] ) 13'(= a35◂ [ a18◂ [ ]{| l |}] ) } ⊢ 2'(= a3◂ [ a35◂ [ a18◂ [ ]{| l |}]] )
	ALC_RCD 7, rax
	mov r14,rax
	mov rax,r13
	mov QWORD [r14+8+8*0],rax
	mov rax,QWORD [rsp-8+8*4]
	mov QWORD [r14+8+8*1],rax
	mov rax,QWORD [rsp-8+8*3]
	mov QWORD [r14+8+8*2],rax
	mov rax,QWORD [rsp-8+8*6]
	mov QWORD [r14+8+8*3],rax
	mov rax,QWORD [rsp-8+8*5]
	mov QWORD [r14+8+8*4],rax
	mov rax,QWORD [rsp-8+8*2]
	mov QWORD [r14+8+8*5],rax
	mov rax,QWORD [rsp-8+8*1]
	mov QWORD [r14+8+8*6],rax
	mov rax,r14
	mov BYTE [rax+6],0
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,48
	jmp LB_5094
LB_5094:
	cmp BYTE [r8+6],0
	jnz LB_5064
	POP_GRM_SCC
	ret
LB_5064:
	POP_GRM_FAIL 
	ret
ETR_268:
	mov r9,0x0000_ffff_ffff_ffff
	and r9,[r13]
	call GRM_268
	ret
GRM_268:
	PUSH_GRM
	jmp LB_5097
LB_5096:
	add r14,1 
LB_5097:
	cmp r14,r9
	jge LB_5098
	JZ_SPC BYTE [r13+8+r14], LB_5096
LB_5098
	lea rax,[r14+1]
	cmp rax,r9
	jg LB_5101
	jmp LB_5102
LB_5101:
	mov r8,unt_1
	jmp LB_5099
LB_5102:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],59
	jnz LB_5103
	jmp LB_5104
LB_5103:
	mov r8,unt_1
	jmp LB_5099
LB_5104:
	add r14,1
	jmp LB_5100
LB_5099:
	add rsp,0
	jmp LB_5095
LB_5100:
	jmp LB_5106
LB_5105:
	add r14,1 
LB_5106:
	cmp r14,r9
	jge LB_5107
	JZ_SPC BYTE [r13+8+r14], LB_5105
LB_5107
	lea rax,[r14+3]
	cmp rax,r9
	jg LB_5110
	jmp LB_5111
LB_5110:
	mov r8,unt_1
	jmp LB_5108
LB_5111:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],226
	jnz LB_5112
	cmp BYTE [rdi+1],138
	jnz LB_5112
	cmp BYTE [rdi+2],162
	jnz LB_5112
	jmp LB_5113
LB_5112:
	mov r8,unt_1
	jmp LB_5108
LB_5113:
	add r14,3
	jmp LB_5109
LB_5108:
	add rsp,0
	jmp LB_5095
LB_5109:
	jmp LB_5115
LB_5114:
	add r14,1 
LB_5115:
	cmp r14,r9
	jge LB_5116
	JZ_SPC BYTE [r13+8+r14], LB_5114
LB_5116
	call GRM_210
	cmp BYTE [r8+6],0
	jnz LB_5119
	jmp LB_5120
LB_5119:
	jmp LB_5117
LB_5120:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a17◂ [ a22◂ [ {| l |}]] ) ⊢ 8'(= a17◂ [ a22◂ [ {| l |}]] )
; .mov_ptn 2'(= a17◂ [ a22◂ [ {| l |}]] ) ⊢ 8'(= a17◂ [ a22◂ [ {| l |}]] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_5118
LB_5117:
	add rsp,0
	POP_GRM_FAIL
	ret
LB_5118:
	jmp LB_5122
LB_5121:
	add r14,1 
LB_5122:
	cmp r14,r9
	jge LB_5123
	JZ_SPC BYTE [r13+8+r14], LB_5121
LB_5123
	lea rax,[r14+1]
	cmp rax,r9
	jg LB_5126
	jmp LB_5127
LB_5126:
	mov r8,unt_1
	jmp LB_5124
LB_5127:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],44
	jnz LB_5128
	jmp LB_5129
LB_5128:
	mov r8,unt_1
	jmp LB_5124
LB_5129:
	add r14,1
	jmp LB_5125
LB_5124:
	add rsp,8
	POP_GRM_FAIL
	ret
LB_5125:
	jmp LB_5131
LB_5130:
	add r14,1 
LB_5131:
	cmp r14,r9
	jge LB_5132
	JZ_SPC BYTE [r13+8+r14], LB_5130
LB_5132
	call GRM_210
	cmp BYTE [r8+6],0
	jnz LB_5135
	jmp LB_5136
LB_5135:
	jmp LB_5133
LB_5136:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a17◂ [ a22◂ [ {| l |}]] ) ⊢ 9'(= a17◂ [ a22◂ [ {| l |}]] )
; .mov_ptn 2'(= a17◂ [ a22◂ [ {| l |}]] ) ⊢ 9'(= a17◂ [ a22◂ [ {| l |}]] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_5134
LB_5133:
	add rsp,8
	POP_GRM_FAIL
	ret
LB_5134:
	jmp LB_5138
LB_5137:
	add r14,1 
LB_5138:
	cmp r14,r9
	jge LB_5139
	JZ_SPC BYTE [r13+8+r14], LB_5137
LB_5139
	call GRM_239
	cmp BYTE [r8+6],0
	jnz LB_5142
	jmp LB_5143
LB_5142:
	jmp LB_5140
LB_5143:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a44◂ [ a26◂ [ a18◂ [ ]{| l |}]] ) ⊢ 10'(= a44◂ [ a26◂ [ a18◂ [ ]{| l |}]] )
; .mov_ptn 2'(= a44◂ [ a26◂ [ a18◂ [ ]{| l |}]] ) ⊢ 10'(= a44◂ [ a26◂ [ a18◂ [ ]{| l |}]] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_5141
LB_5140:
	add rsp,16
	POP_GRM_FAIL
	ret
LB_5141:
	jmp LB_5145
LB_5144:
	add r14,1 
LB_5145:
	cmp r14,r9
	jge LB_5146
	JZ_SPC BYTE [r13+8+r14], LB_5144
LB_5146
	call GRM_267
	cmp BYTE [r8+6],0
	jnz LB_5149
	jmp LB_5150
LB_5149:
	jmp LB_5147
LB_5150:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a35◂ [ a18◂ [ ]{| l |}] ) ⊢ 11'(= a35◂ [ a18◂ [ ]{| l |}] )
; .mov_ptn 2'(= a35◂ [ a18◂ [ ]{| l |}] ) ⊢ 11'(= a35◂ [ a18◂ [ ]{| l |}] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_5148
LB_5147:
	add rsp,24
	POP_GRM_FAIL
	ret
LB_5148:
	mov QWORD [rsp+8*4],r14
	mov r13,QWORD [rsp+16+8*4]
	mov r14,QWORD [rsp+8*4]
	jmp LB_5151
LB_5151
;; rsp=4 , %2561~1'(= r ) %2560~0'(= r ) %2559~11'(= a35◂ [ a18◂ [ ]{| l |}] ) %2558~10'(= a44◂ [ a26◂ [ a18◂ [ ]{| l |}]] ) %2557~9'(= a17◂ [ a22◂ [ {| l |}]] ) %2556~8'(= a17◂ [ a22◂ [ {| l |}]] ) 
;; ? 10'(= a44◂ [ a26◂ [ a18◂ [ ]{| l |}]] ) ⊢ 0(<2)◂2'(= a26◂ [ a18◂ [ ]{| l |}] )
	mov rdi,QWORD [rsp-8+8*2]
	cmp BYTE [rdi+6],0
	jnz LB_5154
	jmp LB_5155
LB_5154:
	jmp LB_5153
LB_5155:
	mov QWORD [GBG_VCT+8*0],rdi
	mov r8,QWORD [rdi+8]
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_LN rdi
;; rsp=4 , %2563~2'(= a26◂ [ a18◂ [ ]{| l |}] ) %2561~1'(= r ) %2560~0'(= r ) %2559~11'(= a35◂ [ a18◂ [ ]{| l |}] ) %2557~9'(= a17◂ [ a22◂ [ {| l |}]] ) %2556~8'(= a17◂ [ a22◂ [ {| l |}]] ) 
; #24 { 9'(= a17◂ [ a22◂ [ {| l |}]] ) 11'(= a35◂ [ a18◂ [ ]{| l |}] ) } ⊢ 0(<2)◂{ 9'(= a17◂ [ a22◂ [ {| l |}]] ) 11'(= a35◂ [ a18◂ [ ]{| l |}] ) }
;; rsp=4 , %2564~0(<2)◂{ 9'(= a17◂ [ a22◂ [ {| l |}]] ) 11'(= a35◂ [ a18◂ [ ]{| l |}] ) } %2563~2'(= a26◂ [ a18◂ [ ]{| l |}] ) %2561~1'(= r ) %2560~0'(= r ) %2556~8'(= a17◂ [ a22◂ [ {| l |}]] ) 
; #24 { 8'(= a17◂ [ a22◂ [ {| l |}]] ) 2'(= a26◂ [ a18◂ [ ]{| l |}] ) 0(<2)◂{ 9'(= a17◂ [ a22◂ [ {| l |}]] ) 11'(= a35◂ [ a18◂ [ ]{| l |}] ) } } ⊢ 0(<2)◂{ 8'(= a17◂ [ a22◂ [ {| l |}]] ) 2'(= a26◂ [ a18◂ [ ]{| l |}] ) 0(<2)◂{ 9'(= a17◂ [ a22◂ [ {| l |}]] ) 11'(= a35◂ [ a18◂ [ ]{| l |}] ) } }
;; rsp=4 , %2565~0(<2)◂{ 8'(= a17◂ [ a22◂ [ {| l |}]] ) 2'(= a26◂ [ a18◂ [ ]{| l |}] ) 0(<2)◂{ 9'(= a17◂ [ a22◂ [ {| l |}]] ) 11'(= a35◂ [ a18◂ [ ]{| l |}] ) } } %2561~1'(= r ) %2560~0'(= r ) 
; ∎ 0(<2)◂{ 8'(= a17◂ [ a22◂ [ {| l |}]] ) 2'(= a26◂ [ a18◂ [ ]{| l |}] ) 0(<2)◂{ 9'(= a17◂ [ a22◂ [ {| l |}]] ) 11'(= a35◂ [ a18◂ [ ]{| l |}] ) } }
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂{ 8'(= a17◂ [ a22◂ [ {| l |}]] ) 2'(= a26◂ [ a18◂ [ ]{| l |}] ) 0(<2)◂{ 9'(= a17◂ [ a22◂ [ {| l |}]] ) 11'(= a35◂ [ a18◂ [ ]{| l |}] ) } } ⊢ 2'(= a3◂ [ *{ a17◂ [ a22◂ [ {| l |}]]a26◂ [ a18◂ [ ]{| l |}]a3◂ [ *{ a17◂ [ a22◂ [ {| l |}]]a35◂ [ a18◂ [ ]{| l |}]}]}] )
	mov r13,r8
; .mov_ptn 0(<2)◂{ 8'(= a17◂ [ a22◂ [ {| l |}]] ) 0'(= a26◂ [ a18◂ [ ]{| l |}] ) 0(<2)◂{ 9'(= a17◂ [ a22◂ [ {| l |}]] ) 11'(= a35◂ [ a18◂ [ ]{| l |}] ) } } ⊢ 2'(= a3◂ [ *{ a17◂ [ a22◂ [ {| l |}]]a26◂ [ a18◂ [ ]{| l |}]a3◂ [ *{ a17◂ [ a22◂ [ {| l |}]]a35◂ [ a18◂ [ ]{| l |}]}]}] )
	ALC_RCD 3, rax
	mov r14,rax
	mov rax,QWORD [rsp-8+8*4]
	mov QWORD [r14+8+8*0],rax
	mov rax,r13
	mov QWORD [r14+8+8*1],rax
	ALC_RCD 2, rax
	mov r9,rax
	mov rax,QWORD [rsp-8+8*3]
	mov QWORD [r9+8+8*0],rax
	mov rax,QWORD [rsp-8+8*1]
	mov QWORD [r9+8+8*1],rax
	mov rax,r9
	mov BYTE [rax+6],0
	mov QWORD [r14+8+8*2],rax
	mov rax,r14
	mov BYTE [rax+6],0
	mov r8,rax
	add rsp,32
	jmp LB_5152
LB_5153:
;; ?. 10'(= a44◂ [ a26◂ [ a18◂ [ ]{| l |}]] ) ⊢ 1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] )
	mov QWORD [GBG_VCT+8*0],rdi
	mov r8,QWORD [rdi+8]
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_LN rdi
;; rsp=4 , %2562~2'(= a2◂ [ *{ rr{| l |}}] ) %2561~1'(= r ) %2560~0'(= r ) %2559~11'(= a35◂ [ a18◂ [ ]{| l |}] ) %2557~9'(= a17◂ [ a22◂ [ {| l |}]] ) %2556~8'(= a17◂ [ a22◂ [ {| l |}]] ) 
; $ %[ "grm_etr_act_act 0" ] ⊢ %[ "grm_etr_act_act 0" ]
;; rsp=4 , %2566~%[ "grm_etr_act_act 0" ] %2562~2'(= a2◂ [ *{ rr{| l |}}] ) %2561~1'(= r ) %2560~0'(= r ) %2559~11'(= a35◂ [ a18◂ [ ]{| l |}] ) %2557~9'(= a17◂ [ a22◂ [ {| l |}]] ) %2556~8'(= a17◂ [ a22◂ [ {| l |}]] ) 
; #10 %[ "grm_etr_act_act 0" ] ⊢ %[ "grm_etr_act_act 0" ]
	mov rdi,fmt_emt
	call emt_stg
	mov rdi,LB_5156
	call emt_stg 
	mov rdi,fmt_nl
	call emt_stg
	jmp LB_5157
LB_5157:
;; rsp=4 , %2567~%[ "grm_etr_act_act 0" ] %2562~2'(= a2◂ [ *{ rr{| l |}}] ) %2561~1'(= r ) %2560~0'(= r ) %2559~11'(= a35◂ [ a18◂ [ ]{| l |}] ) %2557~9'(= a17◂ [ a22◂ [ {| l |}]] ) %2556~8'(= a17◂ [ a22◂ [ {| l |}]] ) 
; #10 { 0'(= r ) 1'(= r ) } ⊢ { 0'(= r ) 1'(= r ) }
	mov rdi,fmt_emt
	call emt_stg
	mov rdi,fmt_rcd_l 
	call emt_stg 
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	mov rdi,r8 
	call emt_r64 
	C_POP_REGS
	mov rdi,fmt_spc 
	call emt_stg 
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	mov rdi,r8 
	call emt_r64 
	C_POP_REGS
	mov rdi,fmt_spc 
	call emt_stg 
	mov rdi,fmt_rcd_r 
	call emt_stg 
	mov rdi,fmt_nl
	call emt_stg
	jmp LB_5158
LB_5158:
;; rsp=4 , %2568~{ 0'(= r ) 1'(= r ) } %2567~%[ "grm_etr_act_act 0" ] %2562~2'(= a2◂ [ *{ rr{| l |}}] ) %2559~11'(= a35◂ [ a18◂ [ ]{| l |}] ) %2557~9'(= a17◂ [ a22◂ [ {| l |}]] ) %2556~8'(= a17◂ [ a22◂ [ {| l |}]] ) 
	mov rdi,LB_5159
	call emt_stg 
	jmp err
LB_5152:
	cmp BYTE [r8+6],0
	jnz LB_5095
	POP_GRM_SCC
	ret
LB_5095:
	RB_GRM
	jmp LB_5162
LB_5161:
	add r14,1 
LB_5162:
	cmp r14,r9
	jge LB_5163
	JZ_SPC BYTE [r13+8+r14], LB_5161
LB_5163
	lea rax,[r14+3]
	cmp rax,r9
	jg LB_5166
	jmp LB_5167
LB_5166:
	mov r8,unt_1
	jmp LB_5164
LB_5167:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],226
	jnz LB_5168
	cmp BYTE [rdi+1],138
	jnz LB_5168
	cmp BYTE [rdi+2],162
	jnz LB_5168
	jmp LB_5169
LB_5168:
	mov r8,unt_1
	jmp LB_5164
LB_5169:
	add r14,3
	jmp LB_5165
LB_5164:
	add rsp,0
	jmp LB_5160
LB_5165:
	jmp LB_5171
LB_5170:
	add r14,1 
LB_5171:
	cmp r14,r9
	jge LB_5172
	JZ_SPC BYTE [r13+8+r14], LB_5170
LB_5172
	call GRM_210
	cmp BYTE [r8+6],0
	jnz LB_5175
	jmp LB_5176
LB_5175:
	jmp LB_5173
LB_5176:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a17◂ [ a22◂ [ {| l |}]] ) ⊢ 8'(= a17◂ [ a22◂ [ {| l |}]] )
; .mov_ptn 2'(= a17◂ [ a22◂ [ {| l |}]] ) ⊢ 8'(= a17◂ [ a22◂ [ {| l |}]] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_5174
LB_5173:
	add rsp,0
	POP_GRM_FAIL
	ret
LB_5174:
	jmp LB_5178
LB_5177:
	add r14,1 
LB_5178:
	cmp r14,r9
	jge LB_5179
	JZ_SPC BYTE [r13+8+r14], LB_5177
LB_5179
	call GRM_239
	cmp BYTE [r8+6],0
	jnz LB_5182
	jmp LB_5183
LB_5182:
	jmp LB_5180
LB_5183:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a44◂ [ a26◂ [ a18◂ [ ]{| l |}]] ) ⊢ 9'(= a44◂ [ a26◂ [ a18◂ [ ]{| l |}]] )
; .mov_ptn 2'(= a44◂ [ a26◂ [ a18◂ [ ]{| l |}]] ) ⊢ 9'(= a44◂ [ a26◂ [ a18◂ [ ]{| l |}]] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_5181
LB_5180:
	add rsp,8
	POP_GRM_FAIL
	ret
LB_5181:
	mov QWORD [rsp+8*2],r14
	mov r13,QWORD [rsp+16+8*2]
	mov r14,QWORD [rsp+8*2]
	jmp LB_5184
LB_5184
;; rsp=2 , %2572~1'(= r ) %2571~0'(= r ) %2570~9'(= a44◂ [ a26◂ [ a18◂ [ ]{| l |}]] ) %2569~8'(= a17◂ [ a22◂ [ {| l |}]] ) 
;; ? 9'(= a44◂ [ a26◂ [ a18◂ [ ]{| l |}]] ) ⊢ 0(<2)◂2'(= a26◂ [ a18◂ [ ]{| l |}] )
	mov rdi,QWORD [rsp-8+8*1]
	cmp BYTE [rdi+6],0
	jnz LB_5187
	jmp LB_5188
LB_5187:
	jmp LB_5186
LB_5188:
	mov QWORD [GBG_VCT+8*0],rdi
	mov r8,QWORD [rdi+8]
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_LN rdi
;; rsp=2 , %2574~2'(= a26◂ [ a18◂ [ ]{| l |}] ) %2572~1'(= r ) %2571~0'(= r ) %2569~8'(= a17◂ [ a22◂ [ {| l |}]] ) 
; #25 { } ⊢ 1(<2)◂{ }
;; rsp=2 , %2575~1(<2)◂{ } %2574~2'(= a26◂ [ a18◂ [ ]{| l |}] ) %2572~1'(= r ) %2571~0'(= r ) %2569~8'(= a17◂ [ a22◂ [ {| l |}]] ) 
; #24 { 8'(= a17◂ [ a22◂ [ {| l |}]] ) 2'(= a26◂ [ a18◂ [ ]{| l |}] ) 1(<2)◂{ } } ⊢ 0(<2)◂{ 8'(= a17◂ [ a22◂ [ {| l |}]] ) 2'(= a26◂ [ a18◂ [ ]{| l |}] ) 1(<2)◂{ } }
;; rsp=2 , %2576~0(<2)◂{ 8'(= a17◂ [ a22◂ [ {| l |}]] ) 2'(= a26◂ [ a18◂ [ ]{| l |}] ) 1(<2)◂{ } } %2572~1'(= r ) %2571~0'(= r ) 
; ∎ 0(<2)◂{ 8'(= a17◂ [ a22◂ [ {| l |}]] ) 2'(= a26◂ [ a18◂ [ ]{| l |}] ) 1(<2)◂{ } }
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂{ 8'(= a17◂ [ a22◂ [ {| l |}]] ) 2'(= a26◂ [ a18◂ [ ]{| l |}] ) 1(<2)◂{ } } ⊢ 2'(= a3◂ [ *{ a17◂ [ a22◂ [ {| l |}]]a26◂ [ a18◂ [ ]{| l |}]a3◂ [ *{ a17◂ [ a22◂ [ {| l |}]]a35◂ [ a18◂ [ ]{| l |}]}]}] )
	mov r13,r8
; .mov_ptn 0(<2)◂{ 8'(= a17◂ [ a22◂ [ {| l |}]] ) 0'(= a26◂ [ a18◂ [ ]{| l |}] ) 1(<2)◂{ } } ⊢ 2'(= a3◂ [ *{ a17◂ [ a22◂ [ {| l |}]]a26◂ [ a18◂ [ ]{| l |}]a3◂ [ *{ a17◂ [ a22◂ [ {| l |}]]a35◂ [ a18◂ [ ]{| l |}]}]}] )
	ALC_RCD 3, rax
	mov r14,rax
	mov rax,QWORD [rsp-8+8*2]
	mov QWORD [r14+8+8*0],rax
	mov rax,r13
	mov QWORD [r14+8+8*1],rax
	mov rax,unt 
	mov rax,unt_1
	mov QWORD [r14+8+8*2],rax
	mov rax,r14
	mov BYTE [rax+6],0
	mov r8,rax
	add rsp,16
	jmp LB_5185
LB_5186:
;; ?. 9'(= a44◂ [ a26◂ [ a18◂ [ ]{| l |}]] ) ⊢ 1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] )
	mov QWORD [GBG_VCT+8*0],rdi
	mov r8,QWORD [rdi+8]
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_LN rdi
;; rsp=2 , %2573~2'(= a2◂ [ *{ rr{| l |}}] ) %2572~1'(= r ) %2571~0'(= r ) %2569~8'(= a17◂ [ a22◂ [ {| l |}]] ) 
; $ %[ "grm_etr_act_act 1" ] ⊢ %[ "grm_etr_act_act 1" ]
;; rsp=2 , %2577~%[ "grm_etr_act_act 1" ] %2573~2'(= a2◂ [ *{ rr{| l |}}] ) %2572~1'(= r ) %2571~0'(= r ) %2569~8'(= a17◂ [ a22◂ [ {| l |}]] ) 
; #10 %[ "grm_etr_act_act 1" ] ⊢ %[ "grm_etr_act_act 1" ]
	mov rdi,fmt_emt
	call emt_stg
	mov rdi,LB_5189
	call emt_stg 
	mov rdi,fmt_nl
	call emt_stg
	jmp LB_5190
LB_5190:
;; rsp=2 , %2578~%[ "grm_etr_act_act 1" ] %2573~2'(= a2◂ [ *{ rr{| l |}}] ) %2572~1'(= r ) %2571~0'(= r ) %2569~8'(= a17◂ [ a22◂ [ {| l |}]] ) 
; #10 { 0'(= r ) 1'(= r ) } ⊢ { 0'(= r ) 1'(= r ) }
	mov rdi,fmt_emt
	call emt_stg
	mov rdi,fmt_rcd_l 
	call emt_stg 
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	mov rdi,r8 
	call emt_r64 
	C_POP_REGS
	mov rdi,fmt_spc 
	call emt_stg 
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	mov rdi,r8 
	call emt_r64 
	C_POP_REGS
	mov rdi,fmt_spc 
	call emt_stg 
	mov rdi,fmt_rcd_r 
	call emt_stg 
	mov rdi,fmt_nl
	call emt_stg
	jmp LB_5191
LB_5191:
;; rsp=2 , %2579~{ 0'(= r ) 1'(= r ) } %2578~%[ "grm_etr_act_act 1" ] %2573~2'(= a2◂ [ *{ rr{| l |}}] ) %2569~8'(= a17◂ [ a22◂ [ {| l |}]] ) 
	mov rdi,LB_5192
	call emt_stg 
	jmp err
LB_5185:
	cmp BYTE [r8+6],0
	jnz LB_5160
	POP_GRM_SCC
	ret
LB_5160:
	POP_GRM_FAIL 
	ret
ETR_269:
	mov r9,0x0000_ffff_ffff_ffff
	and r9,[r13]
	call GRM_269
	ret
GRM_269:
	PUSH_GRM
	jmp LB_5195
LB_5194:
	add r14,1 
LB_5195:
	cmp r14,r9
	jge LB_5196
	JZ_SPC BYTE [r13+8+r14], LB_5194
LB_5196
	lea rax,[r14+2]
	cmp rax,r9
	jg LB_5199
	jmp LB_5200
LB_5199:
	mov r8,unt_1
	jmp LB_5197
LB_5200:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],33
	jnz LB_5201
	cmp BYTE [rdi+1],124
	jnz LB_5201
	jmp LB_5202
LB_5201:
	mov r8,unt_1
	jmp LB_5197
LB_5202:
	add r14,2
	jmp LB_5198
LB_5197:
	add rsp,0
	jmp LB_5193
LB_5198:
	jmp LB_5204
LB_5203:
	add r14,1 
LB_5204:
	cmp r14,r9
	jge LB_5205
	JZ_SPC BYTE [r13+8+r14], LB_5203
LB_5205
	call GRM_270
	cmp BYTE [r8+6],0
	jnz LB_5208
	jmp LB_5209
LB_5208:
	jmp LB_5206
LB_5209:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a2◂ [ a38◂ [ a18◂ [ ]]] ) ⊢ 8'(= a2◂ [ a38◂ [ a18◂ [ ]]] )
; .mov_ptn 2'(= a2◂ [ a38◂ [ a18◂ [ ]]] ) ⊢ 8'(= a2◂ [ a38◂ [ a18◂ [ ]]] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_5207
LB_5206:
	add rsp,0
	POP_GRM_FAIL
	ret
LB_5207:
	mov QWORD [rsp+8*1],r14
	mov r13,QWORD [rsp+16+8*1]
	mov r14,QWORD [rsp+8*1]
	jmp LB_5210
LB_5210
;; rsp=1 , %2582~1'(= r ) %2581~0'(= r ) %2580~8'(= a2◂ [ a38◂ [ a18◂ [ ]]] ) 
; #152 8'(= a2◂ [ a38◂ [ a18◂ [ ]]] ) ⊢ 0(<3)◂8'(= a2◂ [ a38◂ [ a18◂ [ ]]] )
;; rsp=1 , %2583~0(<3)◂8'(= a2◂ [ a38◂ [ a18◂ [ ]]] ) %2582~1'(= r ) %2581~0'(= r ) 
; #24 0(<3)◂8'(= a2◂ [ a38◂ [ a18◂ [ ]]] ) ⊢ 0(<2)◂0(<3)◂8'(= a2◂ [ a38◂ [ a18◂ [ ]]] )
;; rsp=1 , %2584~0(<2)◂0(<3)◂8'(= a2◂ [ a38◂ [ a18◂ [ ]]] ) %2582~1'(= r ) %2581~0'(= r ) 
; ∎ 0(<2)◂0(<3)◂8'(= a2◂ [ a38◂ [ a18◂ [ ]]] )
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂0(<3)◂8'(= a2◂ [ a38◂ [ a18◂ [ ]]] ) ⊢ 2'(= a3◂ [ a37◂ [ a18◂ [ ]]] )
; .mov_ptn 0(<2)◂0(<3)◂8'(= a2◂ [ a38◂ [ a18◂ [ ]]] ) ⊢ 2'(= a3◂ [ a37◂ [ a18◂ [ ]]] )
	mov rax,QWORD [rsp-8+8*1]
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,8
	jmp LB_5211
LB_5211:
	cmp BYTE [r8+6],0
	jnz LB_5193
	POP_GRM_SCC
	ret
LB_5193:
	RB_GRM
	jmp LB_5214
LB_5213:
	add r14,1 
LB_5214:
	cmp r14,r9
	jge LB_5215
	JZ_SPC BYTE [r13+8+r14], LB_5213
LB_5215
	call GRM_271
	cmp BYTE [r8+6],0
	jnz LB_5218
	jmp LB_5219
LB_5218:
	jmp LB_5216
LB_5219:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a38◂ [ a18◂ [ ]] ) ⊢ 8'(= a38◂ [ a18◂ [ ]] )
; .mov_ptn 2'(= a38◂ [ a18◂ [ ]] ) ⊢ 8'(= a38◂ [ a18◂ [ ]] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_5217
LB_5216:
	add rsp,0
	jmp LB_5212
LB_5217:
	jmp LB_5221
LB_5220:
	add r14,1 
LB_5221:
	cmp r14,r9
	jge LB_5222
	JZ_SPC BYTE [r13+8+r14], LB_5220
LB_5222
	call GRM_269
	cmp BYTE [r8+6],0
	jnz LB_5225
	jmp LB_5226
LB_5225:
	jmp LB_5223
LB_5226:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a37◂ [ a18◂ [ ]] ) ⊢ 9'(= a37◂ [ a18◂ [ ]] )
; .mov_ptn 2'(= a37◂ [ a18◂ [ ]] ) ⊢ 9'(= a37◂ [ a18◂ [ ]] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_5224
LB_5223:
	add rsp,8
	jmp LB_5212
LB_5224:
	mov QWORD [rsp+8*2],r14
	mov r13,QWORD [rsp+16+8*2]
	mov r14,QWORD [rsp+8*2]
	jmp LB_5227
LB_5227
;; rsp=2 , %2588~1'(= r ) %2587~0'(= r ) %2586~9'(= a37◂ [ a18◂ [ ]] ) %2585~8'(= a38◂ [ a18◂ [ ]] ) 
; #151 { 8'(= a38◂ [ a18◂ [ ]] ) 9'(= a37◂ [ a18◂ [ ]] ) } ⊢ 1(<3)◂{ 8'(= a38◂ [ a18◂ [ ]] ) 9'(= a37◂ [ a18◂ [ ]] ) }
;; rsp=2 , %2589~1(<3)◂{ 8'(= a38◂ [ a18◂ [ ]] ) 9'(= a37◂ [ a18◂ [ ]] ) } %2588~1'(= r ) %2587~0'(= r ) 
; #24 1(<3)◂{ 8'(= a38◂ [ a18◂ [ ]] ) 9'(= a37◂ [ a18◂ [ ]] ) } ⊢ 0(<2)◂1(<3)◂{ 8'(= a38◂ [ a18◂ [ ]] ) 9'(= a37◂ [ a18◂ [ ]] ) }
;; rsp=2 , %2590~0(<2)◂1(<3)◂{ 8'(= a38◂ [ a18◂ [ ]] ) 9'(= a37◂ [ a18◂ [ ]] ) } %2588~1'(= r ) %2587~0'(= r ) 
; ∎ 0(<2)◂1(<3)◂{ 8'(= a38◂ [ a18◂ [ ]] ) 9'(= a37◂ [ a18◂ [ ]] ) }
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂1(<3)◂{ 8'(= a38◂ [ a18◂ [ ]] ) 9'(= a37◂ [ a18◂ [ ]] ) } ⊢ 2'(= a3◂ [ a37◂ [ a18◂ [ ]]] )
; .mov_ptn 0(<2)◂1(<3)◂{ 8'(= a38◂ [ a18◂ [ ]] ) 9'(= a37◂ [ a18◂ [ ]] ) } ⊢ 2'(= a3◂ [ a37◂ [ a18◂ [ ]]] )
	ALC_RCD 2, rax
	mov r13,rax
	mov rax,QWORD [rsp-8+8*2]
	mov QWORD [r13+8+8*0],rax
	mov rax,QWORD [rsp-8+8*1]
	mov QWORD [r13+8+8*1],rax
	mov rax,r13
	mov BYTE [rax+6],1
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,16
	jmp LB_5228
LB_5228:
	cmp BYTE [r8+6],0
	jnz LB_5212
	POP_GRM_SCC
	ret
LB_5212:
	RB_GRM
	mov QWORD [rsp+8*0],r14
	mov r13,QWORD [rsp+16+8*0]
	mov r14,QWORD [rsp+8*0]
	jmp LB_5230
LB_5230
;; rsp=0 , %2592~1'(= r ) %2591~0'(= r ) 
; #150 { } ⊢ 2(<3)◂{ }
;; rsp=0 , %2593~2(<3)◂{ } %2592~1'(= r ) %2591~0'(= r ) 
; #24 2(<3)◂{ } ⊢ 0(<2)◂2(<3)◂{ }
;; rsp=0 , %2594~0(<2)◂2(<3)◂{ } %2592~1'(= r ) %2591~0'(= r ) 
; ∎ 0(<2)◂2(<3)◂{ }
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂2(<3)◂{ } ⊢ 2'(= a3◂ [ a37◂ [ a18◂ [ ]]] )
; .mov_ptn 0(<2)◂2(<3)◂{ } ⊢ 2'(= a3◂ [ a37◂ [ a18◂ [ ]]] )
	mov rax,unt 
	mov rax,unt_2
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	jmp LB_5231
LB_5231:
	cmp BYTE [r8+6],0
	jnz LB_5229
	POP_GRM_SCC
	ret
LB_5229:
	POP_GRM_FAIL 
	ret
ETR_270:
	mov r9,0x0000_ffff_ffff_ffff
	and r9,[r13]
	call GRM_270
	ret
GRM_270:
	PUSH_GRM
	jmp LB_5234
LB_5233:
	add r14,1 
LB_5234:
	cmp r14,r9
	jge LB_5235
	JZ_SPC BYTE [r13+8+r14], LB_5233
LB_5235
	call GRM_271
	cmp BYTE [r8+6],0
	jnz LB_5238
	jmp LB_5239
LB_5238:
	jmp LB_5236
LB_5239:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a38◂ [ a18◂ [ ]] ) ⊢ 8'(= a38◂ [ a18◂ [ ]] )
; .mov_ptn 2'(= a38◂ [ a18◂ [ ]] ) ⊢ 8'(= a38◂ [ a18◂ [ ]] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_5237
LB_5236:
	add rsp,0
	jmp LB_5232
LB_5237:
	jmp LB_5241
LB_5240:
	add r14,1 
LB_5241:
	cmp r14,r9
	jge LB_5242
	JZ_SPC BYTE [r13+8+r14], LB_5240
LB_5242
	call GRM_270
	cmp BYTE [r8+6],0
	jnz LB_5245
	jmp LB_5246
LB_5245:
	jmp LB_5243
LB_5246:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a2◂ [ a38◂ [ a18◂ [ ]]] ) ⊢ 9'(= a2◂ [ a38◂ [ a18◂ [ ]]] )
; .mov_ptn 2'(= a2◂ [ a38◂ [ a18◂ [ ]]] ) ⊢ 9'(= a2◂ [ a38◂ [ a18◂ [ ]]] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_5244
LB_5243:
	add rsp,8
	jmp LB_5232
LB_5244:
	mov QWORD [rsp+8*2],r14
	mov r13,QWORD [rsp+16+8*2]
	mov r14,QWORD [rsp+8*2]
	jmp LB_5247
LB_5247
;; rsp=2 , %2598~1'(= r ) %2597~0'(= r ) %2596~9'(= a2◂ [ a38◂ [ a18◂ [ ]]] ) %2595~8'(= a38◂ [ a18◂ [ ]] ) 
; #23 { 8'(= a38◂ [ a18◂ [ ]] ) 9'(= a2◂ [ a38◂ [ a18◂ [ ]]] ) } ⊢ 0(<2)◂{ 8'(= a38◂ [ a18◂ [ ]] ) 9'(= a2◂ [ a38◂ [ a18◂ [ ]]] ) }
;; rsp=2 , %2599~0(<2)◂{ 8'(= a38◂ [ a18◂ [ ]] ) 9'(= a2◂ [ a38◂ [ a18◂ [ ]]] ) } %2598~1'(= r ) %2597~0'(= r ) 
; #24 0(<2)◂{ 8'(= a38◂ [ a18◂ [ ]] ) 9'(= a2◂ [ a38◂ [ a18◂ [ ]]] ) } ⊢ 0(<2)◂0(<2)◂{ 8'(= a38◂ [ a18◂ [ ]] ) 9'(= a2◂ [ a38◂ [ a18◂ [ ]]] ) }
;; rsp=2 , %2600~0(<2)◂0(<2)◂{ 8'(= a38◂ [ a18◂ [ ]] ) 9'(= a2◂ [ a38◂ [ a18◂ [ ]]] ) } %2598~1'(= r ) %2597~0'(= r ) 
; ∎ 0(<2)◂0(<2)◂{ 8'(= a38◂ [ a18◂ [ ]] ) 9'(= a2◂ [ a38◂ [ a18◂ [ ]]] ) }
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂0(<2)◂{ 8'(= a38◂ [ a18◂ [ ]] ) 9'(= a2◂ [ a38◂ [ a18◂ [ ]]] ) } ⊢ 2'(= a3◂ [ a2◂ [ a38◂ [ a18◂ [ ]]]] )
; .mov_ptn 0(<2)◂0(<2)◂{ 8'(= a38◂ [ a18◂ [ ]] ) 9'(= a2◂ [ a38◂ [ a18◂ [ ]]] ) } ⊢ 2'(= a3◂ [ a2◂ [ a38◂ [ a18◂ [ ]]]] )
	ALC_RCD 2, rax
	mov r13,rax
	mov rax,QWORD [rsp-8+8*2]
	mov QWORD [r13+8+8*0],rax
	mov rax,QWORD [rsp-8+8*1]
	mov QWORD [r13+8+8*1],rax
	mov rax,r13
	mov BYTE [rax+6],0
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,16
	jmp LB_5248
LB_5248:
	cmp BYTE [r8+6],0
	jnz LB_5232
	POP_GRM_SCC
	ret
LB_5232:
	RB_GRM
	mov QWORD [rsp+8*0],r14
	mov r13,QWORD [rsp+16+8*0]
	mov r14,QWORD [rsp+8*0]
	jmp LB_5250
LB_5250
;; rsp=0 , %2602~1'(= r ) %2601~0'(= r ) 
; #22 { } ⊢ 1(<2)◂{ }
;; rsp=0 , %2603~1(<2)◂{ } %2602~1'(= r ) %2601~0'(= r ) 
; #24 1(<2)◂{ } ⊢ 0(<2)◂1(<2)◂{ }
;; rsp=0 , %2604~0(<2)◂1(<2)◂{ } %2602~1'(= r ) %2601~0'(= r ) 
; ∎ 0(<2)◂1(<2)◂{ }
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂1(<2)◂{ } ⊢ 2'(= a3◂ [ a2◂ [ a38◂ [ a18◂ [ ]]]] )
; .mov_ptn 0(<2)◂1(<2)◂{ } ⊢ 2'(= a3◂ [ a2◂ [ a38◂ [ a18◂ [ ]]]] )
	mov rax,unt 
	mov rax,unt_1
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	jmp LB_5251
LB_5251:
	cmp BYTE [r8+6],0
	jnz LB_5249
	POP_GRM_SCC
	ret
LB_5249:
	POP_GRM_FAIL 
	ret
ETR_271:
	mov r9,0x0000_ffff_ffff_ffff
	and r9,[r13]
	call GRM_271
	ret
GRM_271:
	PUSH_GRM
	jmp LB_5254
LB_5253:
	add r14,1 
LB_5254:
	cmp r14,r9
	jge LB_5255
	JZ_SPC BYTE [r13+8+r14], LB_5253
LB_5255
	lea rax,[r14+3]
	cmp rax,r9
	jg LB_5258
	jmp LB_5259
LB_5258:
	mov r8,unt_1
	jmp LB_5256
LB_5259:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],226
	jnz LB_5260
	cmp BYTE [rdi+1],159
	jnz LB_5260
	cmp BYTE [rdi+2],166
	jnz LB_5260
	jmp LB_5261
LB_5260:
	mov r8,unt_1
	jmp LB_5256
LB_5261:
	add r14,3
	jmp LB_5257
LB_5256:
	add rsp,0
	jmp LB_5252
LB_5257:
	jmp LB_5263
LB_5262:
	add r14,1 
LB_5263:
	cmp r14,r9
	jge LB_5264
	JZ_SPC BYTE [r13+8+r14], LB_5262
LB_5264
	call GRM_272
	cmp BYTE [r8+6],0
	jnz LB_5267
	jmp LB_5268
LB_5267:
	jmp LB_5265
LB_5268:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a39◂ [ a18◂ [ ]] ) ⊢ 8'(= a39◂ [ a18◂ [ ]] )
; .mov_ptn 2'(= a39◂ [ a18◂ [ ]] ) ⊢ 8'(= a39◂ [ a18◂ [ ]] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_5266
LB_5265:
	add rsp,0
	jmp LB_5252
LB_5266:
	jmp LB_5270
LB_5269:
	add r14,1 
LB_5270:
	cmp r14,r9
	jge LB_5271
	JZ_SPC BYTE [r13+8+r14], LB_5269
LB_5271
	lea rax,[r14+3]
	cmp rax,r9
	jg LB_5274
	jmp LB_5275
LB_5274:
	mov r8,unt_1
	jmp LB_5272
LB_5275:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],226
	jnz LB_5276
	cmp BYTE [rdi+1],159
	jnz LB_5276
	cmp BYTE [rdi+2],167
	jnz LB_5276
	jmp LB_5277
LB_5276:
	mov r8,unt_1
	jmp LB_5272
LB_5277:
	add r14,3
	jmp LB_5273
LB_5272:
	add rsp,8
	jmp LB_5252
LB_5273:
	mov QWORD [rsp+8*1],r14
	mov r13,QWORD [rsp+16+8*1]
	mov r14,QWORD [rsp+8*1]
	jmp LB_5278
LB_5278
;; rsp=1 , %2607~1'(= r ) %2606~0'(= r ) %2605~8'(= a39◂ [ a18◂ [ ]] ) 
; #149 8'(= a39◂ [ a18◂ [ ]] ) ⊢ 0(<2)◂8'(= a39◂ [ a18◂ [ ]] )
;; rsp=1 , %2608~0(<2)◂8'(= a39◂ [ a18◂ [ ]] ) %2607~1'(= r ) %2606~0'(= r ) 
; #24 0(<2)◂8'(= a39◂ [ a18◂ [ ]] ) ⊢ 0(<2)◂0(<2)◂8'(= a39◂ [ a18◂ [ ]] )
;; rsp=1 , %2609~0(<2)◂0(<2)◂8'(= a39◂ [ a18◂ [ ]] ) %2607~1'(= r ) %2606~0'(= r ) 
; ∎ 0(<2)◂0(<2)◂8'(= a39◂ [ a18◂ [ ]] )
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂0(<2)◂8'(= a39◂ [ a18◂ [ ]] ) ⊢ 2'(= a3◂ [ a38◂ [ a18◂ [ ]]] )
; .mov_ptn 0(<2)◂0(<2)◂8'(= a39◂ [ a18◂ [ ]] ) ⊢ 2'(= a3◂ [ a38◂ [ a18◂ [ ]]] )
	mov rax,QWORD [rsp-8+8*1]
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,8
	jmp LB_5279
LB_5279:
	cmp BYTE [r8+6],0
	jnz LB_5252
	POP_GRM_SCC
	ret
LB_5252:
	RB_GRM
	jmp LB_5282
LB_5281:
	add r14,1 
LB_5282:
	cmp r14,r9
	jge LB_5283
	JZ_SPC BYTE [r13+8+r14], LB_5281
LB_5283
	call GRM_272
	cmp BYTE [r8+6],0
	jnz LB_5286
	jmp LB_5287
LB_5286:
	jmp LB_5284
LB_5287:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a39◂ [ a18◂ [ ]] ) ⊢ 8'(= a39◂ [ a18◂ [ ]] )
; .mov_ptn 2'(= a39◂ [ a18◂ [ ]] ) ⊢ 8'(= a39◂ [ a18◂ [ ]] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_5285
LB_5284:
	add rsp,0
	jmp LB_5280
LB_5285:
	mov QWORD [rsp+8*1],r14
	mov r13,QWORD [rsp+16+8*1]
	mov r14,QWORD [rsp+8*1]
	jmp LB_5288
LB_5288
;; rsp=1 , %2612~1'(= r ) %2611~0'(= r ) %2610~8'(= a39◂ [ a18◂ [ ]] ) 
; #148 8'(= a39◂ [ a18◂ [ ]] ) ⊢ 1(<2)◂8'(= a39◂ [ a18◂ [ ]] )
;; rsp=1 , %2613~1(<2)◂8'(= a39◂ [ a18◂ [ ]] ) %2612~1'(= r ) %2611~0'(= r ) 
; #24 1(<2)◂8'(= a39◂ [ a18◂ [ ]] ) ⊢ 0(<2)◂1(<2)◂8'(= a39◂ [ a18◂ [ ]] )
;; rsp=1 , %2614~0(<2)◂1(<2)◂8'(= a39◂ [ a18◂ [ ]] ) %2612~1'(= r ) %2611~0'(= r ) 
; ∎ 0(<2)◂1(<2)◂8'(= a39◂ [ a18◂ [ ]] )
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂1(<2)◂8'(= a39◂ [ a18◂ [ ]] ) ⊢ 2'(= a3◂ [ a38◂ [ a18◂ [ ]]] )
; .mov_ptn 0(<2)◂1(<2)◂8'(= a39◂ [ a18◂ [ ]] ) ⊢ 2'(= a3◂ [ a38◂ [ a18◂ [ ]]] )
	mov rax,QWORD [rsp-8+8*1]
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],1
	mov QWORD [rax+8],rdi
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,8
	jmp LB_5289
LB_5289:
	cmp BYTE [r8+6],0
	jnz LB_5280
	POP_GRM_SCC
	ret
LB_5280:
	POP_GRM_FAIL 
	ret
ETR_272:
	mov r9,0x0000_ffff_ffff_ffff
	and r9,[r13]
	call GRM_272
	ret
GRM_272:
	PUSH_GRM
	jmp LB_5292
LB_5291:
	add r14,1 
LB_5292:
	cmp r14,r9
	jge LB_5293
	JZ_SPC BYTE [r13+8+r14], LB_5291
LB_5293
	call GRM_72
	cmp BYTE [r8+6],0
	jnz LB_5296
	jmp LB_5297
LB_5296:
	jmp LB_5294
LB_5297:
	sub rsp,8
; .mov_ptn2 2'(= {| l |} ) ⊢ 8'(= {| l |} )
; .mov_ptn 2'(= {| l |} ) ⊢ 8'(= {| l |} )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_5295
LB_5294:
	add rsp,0
	jmp LB_5290
LB_5295:
	mov QWORD [rsp+8*1],r14
	mov r13,QWORD [rsp+16+8*1]
	mov r14,QWORD [rsp+8*1]
	jmp LB_5298
LB_5298
;; rsp=1 , %2617~1'(= r ) %2616~0'(= r ) %2615~8'(= {| l |} ) 
; #146 8'(= {| l |} ) ⊢ 1(<2)◂8'(= {| l |} )
;; rsp=1 , %2618~1(<2)◂8'(= {| l |} ) %2617~1'(= r ) %2616~0'(= r ) 
; #24 1(<2)◂8'(= {| l |} ) ⊢ 0(<2)◂1(<2)◂8'(= {| l |} )
;; rsp=1 , %2619~0(<2)◂1(<2)◂8'(= {| l |} ) %2617~1'(= r ) %2616~0'(= r ) 
; ∎ 0(<2)◂1(<2)◂8'(= {| l |} )
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂1(<2)◂8'(= {| l |} ) ⊢ 2'(= a3◂ [ a39◂ [ a18◂ [ ]]] )
; .mov_ptn 0(<2)◂1(<2)◂8'(= {| l |} ) ⊢ 2'(= a3◂ [ a39◂ [ a18◂ [ ]]] )
	mov rax,QWORD [rsp-8+8*1]
	mov BYTE [rax+6],1
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,8
	jmp LB_5299
LB_5299:
	cmp BYTE [r8+6],0
	jnz LB_5290
	POP_GRM_SCC
	ret
LB_5290:
	RB_GRM
	jmp LB_5302
LB_5301:
	add r14,1 
LB_5302:
	cmp r14,r9
	jge LB_5303
	JZ_SPC BYTE [r13+8+r14], LB_5301
LB_5303
	call GRM_194
	cmp BYTE [r8+6],0
	jnz LB_5306
	jmp LB_5307
LB_5306:
	jmp LB_5304
LB_5307:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a18◂ [ ] ) ⊢ 8'(= a18◂ [ ] )
; .mov_ptn 2'(= a18◂ [ ] ) ⊢ 8'(= a18◂ [ ] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_5305
LB_5304:
	add rsp,0
	jmp LB_5300
LB_5305:
	mov QWORD [rsp+8*1],r14
	mov r13,QWORD [rsp+16+8*1]
	mov r14,QWORD [rsp+8*1]
	jmp LB_5308
LB_5308
;; rsp=1 , %2622~1'(= r ) %2621~0'(= r ) %2620~8'(= a18◂ [ ] ) 
; #147 8'(= a18◂ [ ] ) ⊢ 0(<2)◂8'(= a18◂ [ ] )
;; rsp=1 , %2623~0(<2)◂8'(= a18◂ [ ] ) %2622~1'(= r ) %2621~0'(= r ) 
; #24 0(<2)◂8'(= a18◂ [ ] ) ⊢ 0(<2)◂0(<2)◂8'(= a18◂ [ ] )
;; rsp=1 , %2624~0(<2)◂0(<2)◂8'(= a18◂ [ ] ) %2622~1'(= r ) %2621~0'(= r ) 
; ∎ 0(<2)◂0(<2)◂8'(= a18◂ [ ] )
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂0(<2)◂8'(= a18◂ [ ] ) ⊢ 2'(= a3◂ [ a39◂ [ a18◂ [ ]]] )
; .mov_ptn 0(<2)◂0(<2)◂8'(= a18◂ [ ] ) ⊢ 2'(= a3◂ [ a39◂ [ a18◂ [ ]]] )
	mov rax,QWORD [rsp-8+8*1]
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,8
	jmp LB_5309
LB_5309:
	cmp BYTE [r8+6],0
	jnz LB_5300
	POP_GRM_SCC
	ret
LB_5300:
	POP_GRM_FAIL 
	ret
ETR_273:
	mov r9,0x0000_ffff_ffff_ffff
	and r9,[r13]
	call GRM_273
	ret
GRM_273:
	PUSH_GRM
	jmp LB_5312
LB_5311:
	add r14,1 
LB_5312:
	cmp r14,r9
	jge LB_5313
	JZ_SPC BYTE [r13+8+r14], LB_5311
LB_5313
	lea rax,[r14+4]
	cmp rax,r9
	jg LB_5316
	jmp LB_5317
LB_5316:
	mov r8,unt_1
	jmp LB_5314
LB_5317:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],226
	jnz LB_5318
	cmp BYTE [rdi+1],136
	jnz LB_5318
	cmp BYTE [rdi+2],144
	jnz LB_5318
	cmp BYTE [rdi+3],42
	jnz LB_5318
	jmp LB_5319
LB_5318:
	mov r8,unt_1
	jmp LB_5314
LB_5319:
	add r14,4
	jmp LB_5315
LB_5314:
	add rsp,0
	jmp LB_5310
LB_5315:
	mov QWORD [rsp+8*0],r14
	mov r13,QWORD [rsp+16+8*0]
	mov r14,QWORD [rsp+8*0]
	jmp LB_5320
LB_5320
;; rsp=0 , %2626~1'(= r ) %2625~0'(= r ) 
; #154 { } ⊢ 1(<3)◂{ }
;; rsp=0 , %2627~1(<3)◂{ } %2626~1'(= r ) %2625~0'(= r ) 
; #24 1(<3)◂{ } ⊢ 0(<2)◂1(<3)◂{ }
;; rsp=0 , %2628~0(<2)◂1(<3)◂{ } %2626~1'(= r ) %2625~0'(= r ) 
; ∎ 0(<2)◂1(<3)◂{ }
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂1(<3)◂{ } ⊢ 2'(= a3◂ [ a36◂ [ ]] )
; .mov_ptn 0(<2)◂1(<3)◂{ } ⊢ 2'(= a3◂ [ a36◂ [ ]] )
	mov rax,unt 
	mov rax,unt_1
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	jmp LB_5321
LB_5321:
	cmp BYTE [r8+6],0
	jnz LB_5310
	POP_GRM_SCC
	ret
LB_5310:
	RB_GRM
	jmp LB_5324
LB_5323:
	add r14,1 
LB_5324:
	cmp r14,r9
	jge LB_5325
	JZ_SPC BYTE [r13+8+r14], LB_5323
LB_5325
	lea rax,[r14+4]
	cmp rax,r9
	jg LB_5328
	jmp LB_5329
LB_5328:
	mov r8,unt_1
	jmp LB_5326
LB_5329:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],226
	jnz LB_5330
	cmp BYTE [rdi+1],136
	jnz LB_5330
	cmp BYTE [rdi+2],144
	jnz LB_5330
	cmp BYTE [rdi+3],35
	jnz LB_5330
	jmp LB_5331
LB_5330:
	mov r8,unt_1
	jmp LB_5326
LB_5331:
	add r14,4
	jmp LB_5327
LB_5326:
	add rsp,0
	jmp LB_5322
LB_5327:
	mov QWORD [rsp+8*0],r14
	mov r13,QWORD [rsp+16+8*0]
	mov r14,QWORD [rsp+8*0]
	jmp LB_5332
LB_5332
;; rsp=0 , %2630~1'(= r ) %2629~0'(= r ) 
; #153 { } ⊢ 2(<3)◂{ }
;; rsp=0 , %2631~2(<3)◂{ } %2630~1'(= r ) %2629~0'(= r ) 
; #24 2(<3)◂{ } ⊢ 0(<2)◂2(<3)◂{ }
;; rsp=0 , %2632~0(<2)◂2(<3)◂{ } %2630~1'(= r ) %2629~0'(= r ) 
; ∎ 0(<2)◂2(<3)◂{ }
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂2(<3)◂{ } ⊢ 2'(= a3◂ [ a36◂ [ ]] )
; .mov_ptn 0(<2)◂2(<3)◂{ } ⊢ 2'(= a3◂ [ a36◂ [ ]] )
	mov rax,unt 
	mov rax,unt_2
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	jmp LB_5333
LB_5333:
	cmp BYTE [r8+6],0
	jnz LB_5322
	POP_GRM_SCC
	ret
LB_5322:
	RB_GRM
	jmp LB_5336
LB_5335:
	add r14,1 
LB_5336:
	cmp r14,r9
	jge LB_5337
	JZ_SPC BYTE [r13+8+r14], LB_5335
LB_5337
	lea rax,[r14+3]
	cmp rax,r9
	jg LB_5340
	jmp LB_5341
LB_5340:
	mov r8,unt_1
	jmp LB_5338
LB_5341:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],226
	jnz LB_5342
	cmp BYTE [rdi+1],136
	jnz LB_5342
	cmp BYTE [rdi+2],144
	jnz LB_5342
	jmp LB_5343
LB_5342:
	mov r8,unt_1
	jmp LB_5338
LB_5343:
	add r14,3
	jmp LB_5339
LB_5338:
	add rsp,0
	jmp LB_5334
LB_5339:
	mov QWORD [rsp+8*0],r14
	mov r13,QWORD [rsp+16+8*0]
	mov r14,QWORD [rsp+8*0]
	jmp LB_5344
LB_5344
;; rsp=0 , %2634~1'(= r ) %2633~0'(= r ) 
; #155 { } ⊢ 0(<3)◂{ }
;; rsp=0 , %2635~0(<3)◂{ } %2634~1'(= r ) %2633~0'(= r ) 
; #24 0(<3)◂{ } ⊢ 0(<2)◂0(<3)◂{ }
;; rsp=0 , %2636~0(<2)◂0(<3)◂{ } %2634~1'(= r ) %2633~0'(= r ) 
; ∎ 0(<2)◂0(<3)◂{ }
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂0(<3)◂{ } ⊢ 2'(= a3◂ [ a36◂ [ ]] )
; .mov_ptn 0(<2)◂0(<3)◂{ } ⊢ 2'(= a3◂ [ a36◂ [ ]] )
	mov rax,unt 
	mov rax,unt_0
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	jmp LB_5345
LB_5345:
	cmp BYTE [r8+6],0
	jnz LB_5334
	POP_GRM_SCC
	ret
LB_5334:
	POP_GRM_FAIL 
	ret
ETR_274:
	mov r9,0x0000_ffff_ffff_ffff
	and r9,[r13]
	call GRM_274
	ret
GRM_274:
	PUSH_GRM
	jmp LB_5348
LB_5347:
	add r14,1 
LB_5348:
	cmp r14,r9
	jge LB_5349
	JZ_SPC BYTE [r13+8+r14], LB_5347
LB_5349
	lea rax,[r14+5]
	cmp rax,r9
	jg LB_5352
	jmp LB_5353
LB_5352:
	mov r8,unt_1
	jmp LB_5350
LB_5353:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],226
	jnz LB_5354
	cmp BYTE [rdi+1],136
	jnz LB_5354
	cmp BYTE [rdi+2],144
	jnz LB_5354
	cmp BYTE [rdi+3],46
	jnz LB_5354
	cmp BYTE [rdi+4],42
	jnz LB_5354
	jmp LB_5355
LB_5354:
	mov r8,unt_1
	jmp LB_5350
LB_5355:
	add r14,5
	jmp LB_5351
LB_5350:
	add rsp,0
	jmp LB_5346
LB_5351:
	mov QWORD [rsp+8*0],r14
	mov r13,QWORD [rsp+16+8*0]
	mov r14,QWORD [rsp+8*0]
	jmp LB_5356
LB_5356
;; rsp=0 , %2638~1'(= r ) %2637~0'(= r ) 
; #154 { } ⊢ 1(<3)◂{ }
;; rsp=0 , %2639~1(<3)◂{ } %2638~1'(= r ) %2637~0'(= r ) 
; #24 1(<3)◂{ } ⊢ 0(<2)◂1(<3)◂{ }
;; rsp=0 , %2640~0(<2)◂1(<3)◂{ } %2638~1'(= r ) %2637~0'(= r ) 
; ∎ 0(<2)◂1(<3)◂{ }
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂1(<3)◂{ } ⊢ 2'(= a3◂ [ a36◂ [ ]] )
; .mov_ptn 0(<2)◂1(<3)◂{ } ⊢ 2'(= a3◂ [ a36◂ [ ]] )
	mov rax,unt 
	mov rax,unt_1
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	jmp LB_5357
LB_5357:
	cmp BYTE [r8+6],0
	jnz LB_5346
	POP_GRM_SCC
	ret
LB_5346:
	RB_GRM
	jmp LB_5360
LB_5359:
	add r14,1 
LB_5360:
	cmp r14,r9
	jge LB_5361
	JZ_SPC BYTE [r13+8+r14], LB_5359
LB_5361
	lea rax,[r14+5]
	cmp rax,r9
	jg LB_5364
	jmp LB_5365
LB_5364:
	mov r8,unt_1
	jmp LB_5362
LB_5365:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],226
	jnz LB_5366
	cmp BYTE [rdi+1],136
	jnz LB_5366
	cmp BYTE [rdi+2],144
	jnz LB_5366
	cmp BYTE [rdi+3],46
	jnz LB_5366
	cmp BYTE [rdi+4],35
	jnz LB_5366
	jmp LB_5367
LB_5366:
	mov r8,unt_1
	jmp LB_5362
LB_5367:
	add r14,5
	jmp LB_5363
LB_5362:
	add rsp,0
	jmp LB_5358
LB_5363:
	mov QWORD [rsp+8*0],r14
	mov r13,QWORD [rsp+16+8*0]
	mov r14,QWORD [rsp+8*0]
	jmp LB_5368
LB_5368
;; rsp=0 , %2642~1'(= r ) %2641~0'(= r ) 
; #153 { } ⊢ 2(<3)◂{ }
;; rsp=0 , %2643~2(<3)◂{ } %2642~1'(= r ) %2641~0'(= r ) 
; #24 2(<3)◂{ } ⊢ 0(<2)◂2(<3)◂{ }
;; rsp=0 , %2644~0(<2)◂2(<3)◂{ } %2642~1'(= r ) %2641~0'(= r ) 
; ∎ 0(<2)◂2(<3)◂{ }
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂2(<3)◂{ } ⊢ 2'(= a3◂ [ a36◂ [ ]] )
; .mov_ptn 0(<2)◂2(<3)◂{ } ⊢ 2'(= a3◂ [ a36◂ [ ]] )
	mov rax,unt 
	mov rax,unt_2
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	jmp LB_5369
LB_5369:
	cmp BYTE [r8+6],0
	jnz LB_5358
	POP_GRM_SCC
	ret
LB_5358:
	RB_GRM
	jmp LB_5372
LB_5371:
	add r14,1 
LB_5372:
	cmp r14,r9
	jge LB_5373
	JZ_SPC BYTE [r13+8+r14], LB_5371
LB_5373
	lea rax,[r14+4]
	cmp rax,r9
	jg LB_5376
	jmp LB_5377
LB_5376:
	mov r8,unt_1
	jmp LB_5374
LB_5377:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],226
	jnz LB_5378
	cmp BYTE [rdi+1],136
	jnz LB_5378
	cmp BYTE [rdi+2],144
	jnz LB_5378
	cmp BYTE [rdi+3],46
	jnz LB_5378
	jmp LB_5379
LB_5378:
	mov r8,unt_1
	jmp LB_5374
LB_5379:
	add r14,4
	jmp LB_5375
LB_5374:
	add rsp,0
	jmp LB_5370
LB_5375:
	mov QWORD [rsp+8*0],r14
	mov r13,QWORD [rsp+16+8*0]
	mov r14,QWORD [rsp+8*0]
	jmp LB_5380
LB_5380
;; rsp=0 , %2646~1'(= r ) %2645~0'(= r ) 
; #155 { } ⊢ 0(<3)◂{ }
;; rsp=0 , %2647~0(<3)◂{ } %2646~1'(= r ) %2645~0'(= r ) 
; #24 0(<3)◂{ } ⊢ 0(<2)◂0(<3)◂{ }
;; rsp=0 , %2648~0(<2)◂0(<3)◂{ } %2646~1'(= r ) %2645~0'(= r ) 
; ∎ 0(<2)◂0(<3)◂{ }
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂0(<3)◂{ } ⊢ 2'(= a3◂ [ a36◂ [ ]] )
; .mov_ptn 0(<2)◂0(<3)◂{ } ⊢ 2'(= a3◂ [ a36◂ [ ]] )
	mov rax,unt 
	mov rax,unt_0
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	jmp LB_5381
LB_5381:
	cmp BYTE [r8+6],0
	jnz LB_5370
	POP_GRM_SCC
	ret
LB_5370:
	POP_GRM_FAIL 
	ret
ETR_275:
	mov r9,0x0000_ffff_ffff_ffff
	and r9,[r13]
	call GRM_275
	ret
GRM_275:
	PUSH_GRM
	jmp LB_5384
LB_5383:
	add r14,1 
LB_5384:
	cmp r14,r9
	jge LB_5385
	JZ_SPC BYTE [r13+8+r14], LB_5383
LB_5385
	call GRM_274
	cmp BYTE [r8+6],0
	jnz LB_5388
	jmp LB_5389
LB_5388:
	jmp LB_5386
LB_5389:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a36◂ [ ] ) ⊢ 8'(= a36◂ [ ] )
; .mov_ptn 2'(= a36◂ [ ] ) ⊢ 8'(= a36◂ [ ] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_5387
LB_5386:
	add rsp,0
	jmp LB_5382
LB_5387:
	jmp LB_5391
LB_5390:
	add r14,1 
LB_5391:
	cmp r14,r9
	jge LB_5392
	JZ_SPC BYTE [r13+8+r14], LB_5390
LB_5392
	call GRM_277
	cmp BYTE [r8+6],0
	jnz LB_5395
	jmp LB_5396
LB_5395:
	jmp LB_5393
LB_5396:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a3◂ [ {| l |}] ) ⊢ 9'(= a3◂ [ {| l |}] )
; .mov_ptn 2'(= a3◂ [ {| l |}] ) ⊢ 9'(= a3◂ [ {| l |}] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_5394
LB_5393:
	add rsp,8
	POP_GRM_FAIL
	ret
LB_5394:
	jmp LB_5398
LB_5397:
	add r14,1 
LB_5398:
	cmp r14,r9
	jge LB_5399
	JZ_SPC BYTE [r13+8+r14], LB_5397
LB_5399
	call GRM_269
	cmp BYTE [r8+6],0
	jnz LB_5402
	jmp LB_5403
LB_5402:
	jmp LB_5400
LB_5403:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a37◂ [ a18◂ [ ]] ) ⊢ 10'(= a37◂ [ a18◂ [ ]] )
; .mov_ptn 2'(= a37◂ [ a18◂ [ ]] ) ⊢ 10'(= a37◂ [ a18◂ [ ]] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_5401
LB_5400:
	add rsp,16
	POP_GRM_FAIL
	ret
LB_5401:
	jmp LB_5405
LB_5404:
	add r14,1 
LB_5405:
	cmp r14,r9
	jge LB_5406
	JZ_SPC BYTE [r13+8+r14], LB_5404
LB_5406
	call GRM_276
	cmp BYTE [r8+6],0
	jnz LB_5409
	jmp LB_5410
LB_5409:
	jmp LB_5407
LB_5410:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a3◂ [ a34◂ [ a18◂ [ ]{| l |}]] ) ⊢ 11'(= a3◂ [ a34◂ [ a18◂ [ ]{| l |}]] )
; .mov_ptn 2'(= a3◂ [ a34◂ [ a18◂ [ ]{| l |}]] ) ⊢ 11'(= a3◂ [ a34◂ [ a18◂ [ ]{| l |}]] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_5408
LB_5407:
	add rsp,24
	POP_GRM_FAIL
	ret
LB_5408:
	mov QWORD [rsp+8*4],r14
	mov r13,QWORD [rsp+16+8*4]
	mov r14,QWORD [rsp+8*4]
	jmp LB_5411
LB_5411
;; rsp=4 , %2654~1'(= r ) %2653~0'(= r ) %2652~11'(= a3◂ [ a34◂ [ a18◂ [ ]{| l |}]] ) %2651~10'(= a37◂ [ a18◂ [ ]] ) %2650~9'(= a3◂ [ {| l |}] ) %2649~8'(= a36◂ [ ] ) 
; #158 { 9'(= a3◂ [ {| l |}] ) 8'(= a36◂ [ ] ) 10'(= a37◂ [ a18◂ [ ]] ) 11'(= a3◂ [ a34◂ [ a18◂ [ ]{| l |}]] ) } ⊢ 1(<2)◂{ 9'(= a3◂ [ {| l |}] ) 8'(= a36◂ [ ] ) 10'(= a37◂ [ a18◂ [ ]] ) 11'(= a3◂ [ a34◂ [ a18◂ [ ]{| l |}]] ) }
;; rsp=4 , %2655~1(<2)◂{ 9'(= a3◂ [ {| l |}] ) 8'(= a36◂ [ ] ) 10'(= a37◂ [ a18◂ [ ]] ) 11'(= a3◂ [ a34◂ [ a18◂ [ ]{| l |}]] ) } %2654~1'(= r ) %2653~0'(= r ) 
; #24 1(<2)◂{ 9'(= a3◂ [ {| l |}] ) 8'(= a36◂ [ ] ) 10'(= a37◂ [ a18◂ [ ]] ) 11'(= a3◂ [ a34◂ [ a18◂ [ ]{| l |}]] ) } ⊢ 0(<2)◂1(<2)◂{ 9'(= a3◂ [ {| l |}] ) 8'(= a36◂ [ ] ) 10'(= a37◂ [ a18◂ [ ]] ) 11'(= a3◂ [ a34◂ [ a18◂ [ ]{| l |}]] ) }
;; rsp=4 , %2656~0(<2)◂1(<2)◂{ 9'(= a3◂ [ {| l |}] ) 8'(= a36◂ [ ] ) 10'(= a37◂ [ a18◂ [ ]] ) 11'(= a3◂ [ a34◂ [ a18◂ [ ]{| l |}]] ) } %2654~1'(= r ) %2653~0'(= r ) 
; ∎ 0(<2)◂1(<2)◂{ 9'(= a3◂ [ {| l |}] ) 8'(= a36◂ [ ] ) 10'(= a37◂ [ a18◂ [ ]] ) 11'(= a3◂ [ a34◂ [ a18◂ [ ]{| l |}]] ) }
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂1(<2)◂{ 9'(= a3◂ [ {| l |}] ) 8'(= a36◂ [ ] ) 10'(= a37◂ [ a18◂ [ ]] ) 11'(= a3◂ [ a34◂ [ a18◂ [ ]{| l |}]] ) } ⊢ 2'(= a3◂ [ a34◂ [ a18◂ [ ]{| l |}]] )
; .mov_ptn 0(<2)◂1(<2)◂{ 9'(= a3◂ [ {| l |}] ) 8'(= a36◂ [ ] ) 10'(= a37◂ [ a18◂ [ ]] ) 11'(= a3◂ [ a34◂ [ a18◂ [ ]{| l |}]] ) } ⊢ 2'(= a3◂ [ a34◂ [ a18◂ [ ]{| l |}]] )
	ALC_RCD 4, rax
	mov r13,rax
	mov rax,QWORD [rsp-8+8*3]
	mov QWORD [r13+8+8*0],rax
	mov rax,QWORD [rsp-8+8*4]
	mov QWORD [r13+8+8*1],rax
	mov rax,QWORD [rsp-8+8*2]
	mov QWORD [r13+8+8*2],rax
	mov rax,QWORD [rsp-8+8*1]
	mov QWORD [r13+8+8*3],rax
	mov rax,r13
	mov BYTE [rax+6],1
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,32
	jmp LB_5412
LB_5412:
	cmp BYTE [r8+6],0
	jnz LB_5382
	POP_GRM_SCC
	ret
LB_5382:
	RB_GRM
	jmp LB_5415
LB_5414:
	add r14,1 
LB_5415:
	cmp r14,r9
	jge LB_5416
	JZ_SPC BYTE [r13+8+r14], LB_5414
LB_5416
	call GRM_273
	cmp BYTE [r8+6],0
	jnz LB_5419
	jmp LB_5420
LB_5419:
	jmp LB_5417
LB_5420:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a36◂ [ ] ) ⊢ 8'(= a36◂ [ ] )
; .mov_ptn 2'(= a36◂ [ ] ) ⊢ 8'(= a36◂ [ ] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_5418
LB_5417:
	add rsp,0
	jmp LB_5413
LB_5418:
	jmp LB_5422
LB_5421:
	add r14,1 
LB_5422:
	cmp r14,r9
	jge LB_5423
	JZ_SPC BYTE [r13+8+r14], LB_5421
LB_5423
	call GRM_277
	cmp BYTE [r8+6],0
	jnz LB_5426
	jmp LB_5427
LB_5426:
	jmp LB_5424
LB_5427:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a3◂ [ {| l |}] ) ⊢ 9'(= a3◂ [ {| l |}] )
; .mov_ptn 2'(= a3◂ [ {| l |}] ) ⊢ 9'(= a3◂ [ {| l |}] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_5425
LB_5424:
	add rsp,8
	jmp LB_5413
LB_5425:
	jmp LB_5429
LB_5428:
	add r14,1 
LB_5429:
	cmp r14,r9
	jge LB_5430
	JZ_SPC BYTE [r13+8+r14], LB_5428
LB_5430
	call GRM_269
	cmp BYTE [r8+6],0
	jnz LB_5433
	jmp LB_5434
LB_5433:
	jmp LB_5431
LB_5434:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a37◂ [ a18◂ [ ]] ) ⊢ 10'(= a37◂ [ a18◂ [ ]] )
; .mov_ptn 2'(= a37◂ [ a18◂ [ ]] ) ⊢ 10'(= a37◂ [ a18◂ [ ]] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_5432
LB_5431:
	add rsp,16
	jmp LB_5413
LB_5432:
	jmp LB_5436
LB_5435:
	add r14,1 
LB_5436:
	cmp r14,r9
	jge LB_5437
	JZ_SPC BYTE [r13+8+r14], LB_5435
LB_5437
	call GRM_276
	cmp BYTE [r8+6],0
	jnz LB_5440
	jmp LB_5441
LB_5440:
	jmp LB_5438
LB_5441:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a3◂ [ a34◂ [ a18◂ [ ]{| l |}]] ) ⊢ 11'(= a3◂ [ a34◂ [ a18◂ [ ]{| l |}]] )
; .mov_ptn 2'(= a3◂ [ a34◂ [ a18◂ [ ]{| l |}]] ) ⊢ 11'(= a3◂ [ a34◂ [ a18◂ [ ]{| l |}]] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_5439
LB_5438:
	add rsp,24
	jmp LB_5413
LB_5439:
	jmp LB_5443
LB_5442:
	add r14,1 
LB_5443:
	cmp r14,r9
	jge LB_5444
	JZ_SPC BYTE [r13+8+r14], LB_5442
LB_5444
	call GRM_275
	cmp BYTE [r8+6],0
	jnz LB_5447
	jmp LB_5448
LB_5447:
	jmp LB_5445
LB_5448:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a34◂ [ a18◂ [ ]{| l |}] ) ⊢ 12'(= a34◂ [ a18◂ [ ]{| l |}] )
; .mov_ptn 2'(= a34◂ [ a18◂ [ ]{| l |}] ) ⊢ 12'(= a34◂ [ a18◂ [ ]{| l |}] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_5446
LB_5445:
	add rsp,32
	jmp LB_5413
LB_5446:
	mov QWORD [rsp+8*5],r14
	mov r13,QWORD [rsp+16+8*5]
	mov r14,QWORD [rsp+8*5]
	jmp LB_5449
LB_5449
;; rsp=5 , %2663~1'(= r ) %2662~0'(= r ) %2661~12'(= a34◂ [ a18◂ [ ]{| l |}] ) %2660~11'(= a3◂ [ a34◂ [ a18◂ [ ]{| l |}]] ) %2659~10'(= a37◂ [ a18◂ [ ]] ) %2658~9'(= a3◂ [ {| l |}] ) %2657~8'(= a36◂ [ ] ) 
; #159 { 9'(= a3◂ [ {| l |}] ) 8'(= a36◂ [ ] ) 10'(= a37◂ [ a18◂ [ ]] ) 11'(= a3◂ [ a34◂ [ a18◂ [ ]{| l |}]] ) 12'(= a34◂ [ a18◂ [ ]{| l |}] ) } ⊢ 0(<2)◂{ 9'(= a3◂ [ {| l |}] ) 8'(= a36◂ [ ] ) 10'(= a37◂ [ a18◂ [ ]] ) 11'(= a3◂ [ a34◂ [ a18◂ [ ]{| l |}]] ) 12'(= a34◂ [ a18◂ [ ]{| l |}] ) }
;; rsp=5 , %2664~0(<2)◂{ 9'(= a3◂ [ {| l |}] ) 8'(= a36◂ [ ] ) 10'(= a37◂ [ a18◂ [ ]] ) 11'(= a3◂ [ a34◂ [ a18◂ [ ]{| l |}]] ) 12'(= a34◂ [ a18◂ [ ]{| l |}] ) } %2663~1'(= r ) %2662~0'(= r ) 
; #24 0(<2)◂{ 9'(= a3◂ [ {| l |}] ) 8'(= a36◂ [ ] ) 10'(= a37◂ [ a18◂ [ ]] ) 11'(= a3◂ [ a34◂ [ a18◂ [ ]{| l |}]] ) 12'(= a34◂ [ a18◂ [ ]{| l |}] ) } ⊢ 0(<2)◂0(<2)◂{ 9'(= a3◂ [ {| l |}] ) 8'(= a36◂ [ ] ) 10'(= a37◂ [ a18◂ [ ]] ) 11'(= a3◂ [ a34◂ [ a18◂ [ ]{| l |}]] ) 12'(= a34◂ [ a18◂ [ ]{| l |}] ) }
;; rsp=5 , %2665~0(<2)◂0(<2)◂{ 9'(= a3◂ [ {| l |}] ) 8'(= a36◂ [ ] ) 10'(= a37◂ [ a18◂ [ ]] ) 11'(= a3◂ [ a34◂ [ a18◂ [ ]{| l |}]] ) 12'(= a34◂ [ a18◂ [ ]{| l |}] ) } %2663~1'(= r ) %2662~0'(= r ) 
; ∎ 0(<2)◂0(<2)◂{ 9'(= a3◂ [ {| l |}] ) 8'(= a36◂ [ ] ) 10'(= a37◂ [ a18◂ [ ]] ) 11'(= a3◂ [ a34◂ [ a18◂ [ ]{| l |}]] ) 12'(= a34◂ [ a18◂ [ ]{| l |}] ) }
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂0(<2)◂{ 9'(= a3◂ [ {| l |}] ) 8'(= a36◂ [ ] ) 10'(= a37◂ [ a18◂ [ ]] ) 11'(= a3◂ [ a34◂ [ a18◂ [ ]{| l |}]] ) 12'(= a34◂ [ a18◂ [ ]{| l |}] ) } ⊢ 2'(= a3◂ [ a34◂ [ a18◂ [ ]{| l |}]] )
; .mov_ptn 0(<2)◂0(<2)◂{ 9'(= a3◂ [ {| l |}] ) 8'(= a36◂ [ ] ) 10'(= a37◂ [ a18◂ [ ]] ) 11'(= a3◂ [ a34◂ [ a18◂ [ ]{| l |}]] ) 12'(= a34◂ [ a18◂ [ ]{| l |}] ) } ⊢ 2'(= a3◂ [ a34◂ [ a18◂ [ ]{| l |}]] )
	ALC_RCD 5, rax
	mov r13,rax
	mov rax,QWORD [rsp-8+8*4]
	mov QWORD [r13+8+8*0],rax
	mov rax,QWORD [rsp-8+8*5]
	mov QWORD [r13+8+8*1],rax
	mov rax,QWORD [rsp-8+8*3]
	mov QWORD [r13+8+8*2],rax
	mov rax,QWORD [rsp-8+8*2]
	mov QWORD [r13+8+8*3],rax
	mov rax,QWORD [rsp-8+8*1]
	mov QWORD [r13+8+8*4],rax
	mov rax,r13
	mov BYTE [rax+6],0
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,40
	jmp LB_5450
LB_5450:
	cmp BYTE [r8+6],0
	jnz LB_5413
	POP_GRM_SCC
	ret
LB_5413:
	POP_GRM_FAIL 
	ret
ETR_276:
	mov r9,0x0000_ffff_ffff_ffff
	and r9,[r13]
	call GRM_276
	ret
GRM_276:
	PUSH_GRM
	jmp LB_5453
LB_5452:
	add r14,1 
LB_5453:
	cmp r14,r9
	jge LB_5454
	JZ_SPC BYTE [r13+8+r14], LB_5452
LB_5454
	lea rax,[r14+1]
	cmp rax,r9
	jg LB_5457
	jmp LB_5458
LB_5457:
	mov r8,unt_1
	jmp LB_5455
LB_5458:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],59
	jnz LB_5459
	jmp LB_5460
LB_5459:
	mov r8,unt_1
	jmp LB_5455
LB_5460:
	add r14,1
	jmp LB_5456
LB_5455:
	add rsp,0
	jmp LB_5451
LB_5456:
	jmp LB_5462
LB_5461:
	add r14,1 
LB_5462:
	cmp r14,r9
	jge LB_5463
	JZ_SPC BYTE [r13+8+r14], LB_5461
LB_5463
	call GRM_275
	cmp BYTE [r8+6],0
	jnz LB_5466
	jmp LB_5467
LB_5466:
	jmp LB_5464
LB_5467:
	sub rsp,8
	mov rdi,[r8+8]
	FREE_LN r8 
	mov r8,rdi
; .mov_ptn2 2'(= a34◂ [ a18◂ [ ]{| l |}] ) ⊢ 8'(= a34◂ [ a18◂ [ ]{| l |}] )
; .mov_ptn 2'(= a34◂ [ a18◂ [ ]{| l |}] ) ⊢ 8'(= a34◂ [ a18◂ [ ]{| l |}] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_5465
LB_5464:
	add rsp,0
	jmp LB_5451
LB_5465:
	mov QWORD [rsp+8*1],r14
	mov r13,QWORD [rsp+16+8*1]
	mov r14,QWORD [rsp+8*1]
	jmp LB_5468
LB_5468
;; rsp=1 , %2668~1'(= r ) %2667~0'(= r ) %2666~8'(= a34◂ [ a18◂ [ ]{| l |}] ) 
; #24 8'(= a34◂ [ a18◂ [ ]{| l |}] ) ⊢ 0(<2)◂8'(= a34◂ [ a18◂ [ ]{| l |}] )
;; rsp=1 , %2669~0(<2)◂8'(= a34◂ [ a18◂ [ ]{| l |}] ) %2668~1'(= r ) %2667~0'(= r ) 
; #24 0(<2)◂8'(= a34◂ [ a18◂ [ ]{| l |}] ) ⊢ 0(<2)◂0(<2)◂8'(= a34◂ [ a18◂ [ ]{| l |}] )
;; rsp=1 , %2670~0(<2)◂0(<2)◂8'(= a34◂ [ a18◂ [ ]{| l |}] ) %2668~1'(= r ) %2667~0'(= r ) 
; ∎ 0(<2)◂0(<2)◂8'(= a34◂ [ a18◂ [ ]{| l |}] )
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂0(<2)◂8'(= a34◂ [ a18◂ [ ]{| l |}] ) ⊢ 2'(= a3◂ [ a3◂ [ a34◂ [ a18◂ [ ]{| l |}]]] )
; .mov_ptn 0(<2)◂0(<2)◂8'(= a34◂ [ a18◂ [ ]{| l |}] ) ⊢ 2'(= a3◂ [ a3◂ [ a34◂ [ a18◂ [ ]{| l |}]]] )
	mov rax,QWORD [rsp-8+8*1]
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,8
	jmp LB_5469
LB_5469:
	cmp BYTE [r8+6],0
	jnz LB_5451
	POP_GRM_SCC
	ret
LB_5451:
	RB_GRM
	mov QWORD [rsp+8*0],r14
	mov r13,QWORD [rsp+16+8*0]
	mov r14,QWORD [rsp+8*0]
	jmp LB_5471
LB_5471
;; rsp=0 , %2672~1'(= r ) %2671~0'(= r ) 
; #25 { } ⊢ 1(<2)◂{ }
;; rsp=0 , %2673~1(<2)◂{ } %2672~1'(= r ) %2671~0'(= r ) 
; #24 1(<2)◂{ } ⊢ 0(<2)◂1(<2)◂{ }
;; rsp=0 , %2674~0(<2)◂1(<2)◂{ } %2672~1'(= r ) %2671~0'(= r ) 
; ∎ 0(<2)◂1(<2)◂{ }
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂1(<2)◂{ } ⊢ 2'(= a3◂ [ a3◂ [ a34◂ [ a18◂ [ ]{| l |}]]] )
; .mov_ptn 0(<2)◂1(<2)◂{ } ⊢ 2'(= a3◂ [ a3◂ [ a34◂ [ a18◂ [ ]{| l |}]]] )
	mov rax,unt 
	mov rax,unt_1
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	jmp LB_5472
LB_5472:
	cmp BYTE [r8+6],0
	jnz LB_5470
	POP_GRM_SCC
	ret
LB_5470:
	POP_GRM_FAIL 
	ret
ETR_277:
	mov r9,0x0000_ffff_ffff_ffff
	and r9,[r13]
	call GRM_277
	ret
GRM_277:
	PUSH_GRM
	jmp LB_5475
LB_5474:
	add r14,1 
LB_5475:
	cmp r14,r9
	jge LB_5476
	JZ_SPC BYTE [r13+8+r14], LB_5474
LB_5476
	call GRM_79
	cmp BYTE [r8+6],0
	jnz LB_5479
	jmp LB_5480
LB_5479:
	jmp LB_5477
LB_5480:
	sub rsp,8
; .mov_ptn2 2'(= {| l |} ) ⊢ 8'(= {| l |} )
; .mov_ptn 2'(= {| l |} ) ⊢ 8'(= {| l |} )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_5478
LB_5477:
	add rsp,0
	jmp LB_5473
LB_5478:
	jmp LB_5482
LB_5481:
	add r14,1 
LB_5482:
	cmp r14,r9
	jge LB_5483
	JZ_SPC BYTE [r13+8+r14], LB_5481
LB_5483
	lea rax,[r14+1]
	cmp rax,r9
	jg LB_5486
	jmp LB_5487
LB_5486:
	mov r8,unt_1
	jmp LB_5484
LB_5487:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],58
	jnz LB_5488
	jmp LB_5489
LB_5488:
	mov r8,unt_1
	jmp LB_5484
LB_5489:
	add r14,1
	jmp LB_5485
LB_5484:
	add rsp,8
	jmp LB_5473
LB_5485:
	mov QWORD [rsp+8*1],r14
	mov r13,QWORD [rsp+16+8*1]
	mov r14,QWORD [rsp+8*1]
	jmp LB_5490
LB_5490
;; rsp=1 , %2677~1'(= r ) %2676~0'(= r ) %2675~8'(= {| l |} ) 
; #24 8'(= {| l |} ) ⊢ 0(<2)◂8'(= {| l |} )
;; rsp=1 , %2678~0(<2)◂8'(= {| l |} ) %2677~1'(= r ) %2676~0'(= r ) 
; #24 0(<2)◂8'(= {| l |} ) ⊢ 0(<2)◂0(<2)◂8'(= {| l |} )
;; rsp=1 , %2679~0(<2)◂0(<2)◂8'(= {| l |} ) %2677~1'(= r ) %2676~0'(= r ) 
; ∎ 0(<2)◂0(<2)◂8'(= {| l |} )
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂0(<2)◂8'(= {| l |} ) ⊢ 2'(= a3◂ [ a3◂ [ {| l |}]] )
; .mov_ptn 0(<2)◂0(<2)◂8'(= {| l |} ) ⊢ 2'(= a3◂ [ a3◂ [ {| l |}]] )
	mov rax,QWORD [rsp-8+8*1]
	mov BYTE [rax+6],0
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	add rsp,8
	jmp LB_5491
LB_5491:
	cmp BYTE [r8+6],0
	jnz LB_5473
	POP_GRM_SCC
	ret
LB_5473:
	RB_GRM
	mov QWORD [rsp+8*0],r14
	mov r13,QWORD [rsp+16+8*0]
	mov r14,QWORD [rsp+8*0]
	jmp LB_5493
LB_5493
;; rsp=0 , %2681~1'(= r ) %2680~0'(= r ) 
; #25 { } ⊢ 1(<2)◂{ }
;; rsp=0 , %2682~1(<2)◂{ } %2681~1'(= r ) %2680~0'(= r ) 
; #24 1(<2)◂{ } ⊢ 0(<2)◂1(<2)◂{ }
;; rsp=0 , %2683~0(<2)◂1(<2)◂{ } %2681~1'(= r ) %2680~0'(= r ) 
; ∎ 0(<2)◂1(<2)◂{ }
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0(<2)◂1(<2)◂{ } ⊢ 2'(= a3◂ [ a3◂ [ {| l |}]] )
; .mov_ptn 0(<2)◂1(<2)◂{ } ⊢ 2'(= a3◂ [ a3◂ [ {| l |}]] )
	mov rax,unt 
	mov rax,unt_1
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	jmp LB_5494
LB_5494:
	cmp BYTE [r8+6],0
	jnz LB_5492
	POP_GRM_SCC
	ret
LB_5492:
	POP_GRM_FAIL 
	ret
ETR_278: ;; ini { } ⊢ 0'(= {| a15◂ [ ]|} ) : ({ }→_arr◂_t15)
;; rsp=0 , 
; #49 { } ⊢ 1(<2)◂{ }
;; rsp=0 , %2684~1(<2)◂{ } 
; #0 { %[ 64r ] 1(<2)◂{ } } ⊢ { %[ 64r ] 1(<2)◂{ } 0'(= {| a15◂ [ ]|} ) }
	mov rdi,64
	push rdi 
	lea rsi,[8+8*rdi]
	mov rdi,1 
 C_CALL_SF calloc
	pop rdi 
	mov r13,rax
	mov QWORD [rax],rdi 
LB_5495:
	cmp rdi,0 
	jz LB_5496
	sub rdi,1
	mov r8,rdi
; .mov_ptn2 1(<2)◂{ } ⊢ 1'(= a15◂ [ ] )
	mov r9,r14
; .mov_ptn 1(<2)◂{ } ⊢ 1'(= a15◂ [ ] )
	mov rax,unt 
	mov rax,unt_1
	mov r14,rax
	mov rsi,r13
	mov rax,r14
	mov rdi,r8
	mov QWORD [rsi+8+8*rdi],rax 
	jmp LB_5495
LB_5496:
; .dlt.ptn 1(<2)◂{ }
; .dlt.ptn %[ 64r ]
;; rsp=0 , %2687~0'(= {| a15◂ [ ]|} ) 
; ∎ 0'(= {| a15◂ [ ]|} )
; .mov_ptn2 0'(= {| a15◂ [ ]|} ) ⊢ 0'(= {| a15◂ [ ]|} )
	ret
ETR_279: ;; set_t { 0'(= {| a15◂ [ ]|} ) 1'(= r ) } ⊢ { 0'(= {| a15◂ [ ]|} ) 1'(= r ) } : ({ _arr◂_t15 _r64 }→{ _arr◂_t15 _r64 })
;; rsp=0 , %2689~1'(= r ) %2688~0'(= {| a15◂ [ ]|} ) 
; #50 { } ⊢ 0(<2)◂{ }
;; rsp=0 , %2690~0(<2)◂{ } %2689~1'(= r ) %2688~0'(= {| a15◂ [ ]|} ) 
; #1 { 0'(= {| a15◂ [ ]|} ) 1'(= r ) 0(<2)◂{ } } ⊢ { 0'(= {| a15◂ [ ]|} ) 1'(= r ) 3'(= a15◂ [ ] ) }
; .mov_ptn2 0(<2)◂{ } ⊢ 2'(= a15◂ [ ] )
	mov r9,r8
; .mov_ptn 0(<2)◂{ } ⊢ 2'(= a15◂ [ ] )
	mov rax,unt 
	mov rax,unt_0
	mov r8,rax
	mov rax,r14
	mov rdi,r13
	mov rsi,0x0000_ffff_ffff_ffff 
	and rsi,QWORD [rdi]
	cmp rax,rsi 
	jge err
	lea rdi,[rdi+8+8*rax]
	mov rax,QWORD [rdi]
	mov rsi,r8
	mov QWORD [rdi],rsi 
	mov r8,rax
; .mov_ptn2 2'(= a15◂ [ ] ) ⊢ 3'(= a15◂ [ ] )
	mov r10,r9
; .mov_ptn 2'(= a15◂ [ ] ) ⊢ 3'(= a15◂ [ ] )
	mov rax,r8
	mov r9,rax
; .dlt.ptn 3'(= a15◂ [ ] )
	mov rdi,r9
	C_PUSH_REGS
	mov r8,rdi
	call LB_23
	C_POP_REGS
;; rsp=0 , %2692~1'(= r ) %2691~0'(= {| a15◂ [ ]|} ) 
; ∎ { 0'(= {| a15◂ [ ]|} ) 1'(= r ) }
; .mov_ptn2 { 0'(= {| a15◂ [ ]|} ) 1'(= r ) } ⊢ { 0'(= {| a15◂ [ ]|} ) 1'(= r ) }
	ret
ETR_280: ;; set_f { 0'(= {| a15◂ [ ]|} ) 1'(= r ) } ⊢ { 0'(= {| a15◂ [ ]|} ) 1'(= r ) } : ({ _arr◂_t15 _r64 }→{ _arr◂_t15 _r64 })
;; rsp=0 , %2695~1'(= r ) %2694~0'(= {| a15◂ [ ]|} ) 
; #49 { } ⊢ 1(<2)◂{ }
;; rsp=0 , %2696~1(<2)◂{ } %2695~1'(= r ) %2694~0'(= {| a15◂ [ ]|} ) 
; #1 { 0'(= {| a15◂ [ ]|} ) 1'(= r ) 1(<2)◂{ } } ⊢ { 0'(= {| a15◂ [ ]|} ) 1'(= r ) 3'(= a15◂ [ ] ) }
; .mov_ptn2 1(<2)◂{ } ⊢ 2'(= a15◂ [ ] )
	mov r9,r8
; .mov_ptn 1(<2)◂{ } ⊢ 2'(= a15◂ [ ] )
	mov rax,unt 
	mov rax,unt_1
	mov r8,rax
	mov rax,r14
	mov rdi,r13
	mov rsi,0x0000_ffff_ffff_ffff 
	and rsi,QWORD [rdi]
	cmp rax,rsi 
	jge err
	lea rdi,[rdi+8+8*rax]
	mov rax,QWORD [rdi]
	mov rsi,r8
	mov QWORD [rdi],rsi 
	mov r8,rax
; .mov_ptn2 2'(= a15◂ [ ] ) ⊢ 3'(= a15◂ [ ] )
	mov r10,r9
; .mov_ptn 2'(= a15◂ [ ] ) ⊢ 3'(= a15◂ [ ] )
	mov rax,r8
	mov r9,rax
; .dlt.ptn 3'(= a15◂ [ ] )
	mov rdi,r9
	C_PUSH_REGS
	mov r8,rdi
	call LB_23
	C_POP_REGS
;; rsp=0 , %2698~1'(= r ) %2697~0'(= {| a15◂ [ ]|} ) 
; ∎ { 0'(= {| a15◂ [ ]|} ) 1'(= r ) }
; .mov_ptn2 { 0'(= {| a15◂ [ ]|} ) 1'(= r ) } ⊢ { 0'(= {| a15◂ [ ]|} ) 1'(= r ) }
	ret
LB_5500:
	movzx rax,BYTE [r8+6]
	jmp QWORD [LB_5503+8*rax]
LB_5503: dq LB_5501,LB_5502
LB_5501:
	mov rax,unt
	mov BYTE [rax+6],0
	jmp LB_5504
LB_5502:
	mov rax,unt
	mov BYTE [rax+6],1
	jmp LB_5504
LB_5504:
	ret
ETR_281: ;; and_lp { 0'(= {| a15◂ [ ]|} ) 1'(= {| a15◂ [ ]|} ) 2'(= r ) } ⊢ { 0'(= {| a15◂ [ ]|} ) 1'(= {| a15◂ [ ]|} ) } : ({ _arr◂_t15 _arr◂_t15 _r64 }→{ _arr◂_t15 _arr◂_t15 })
;; rsp=0 , %2702~2'(= r ) %2701~1'(= {| a15◂ [ ]|} ) %2700~0'(= {| a15◂ [ ]|} ) 
	cmp r8,64
	jnz LB_5499
	jmp LB_5498
LB_5499:
	jmp LB_5497
LB_5498:
;; rsp=0 , %2702~2'(= r ) %2701~1'(= {| a15◂ [ ]|} ) %2700~0'(= {| a15◂ [ ]|} ) 
; ∎ { 0'(= {| a15◂ [ ]|} ) 1'(= {| a15◂ [ ]|} ) }
; .dlt.ptn 2'(= r )
	mov rdi,r8
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 { 0'(= {| a15◂ [ ]|} ) 1'(= {| a15◂ [ ]|} ) } ⊢ { 0'(= {| a15◂ [ ]|} ) 1'(= {| a15◂ [ ]|} ) }
	ret
LB_5497:
;; rsp=0 , %2702~2'(= r ) %2701~1'(= {| a15◂ [ ]|} ) %2700~0'(= {| a15◂ [ ]|} ) 
; #4 { 0'(= {| a15◂ [ ]|} ) 2'(= r ) } ⊢ { 0'(= {| a15◂ [ ]|} ) 2'(= r ) 4'(= a15◂ [ ] ) }
	mov rax,r8
	mov rdi,r13
	mov rsi,0x0000_ffff_ffff_ffff 
	and rsi,QWORD [rdi]
	cmp rax,rsi 
	jge err 
	mov rdi,[rdi+8+8*rax]
	C_PUSH_REGS
	mov r8,rdi
	call LB_5500
	C_POP_REGS
	mov r9,rax
; .mov_ptn2 3'(= a15◂ [ ] ) ⊢ 4'(= a15◂ [ ] )
	mov r11,r10
; .mov_ptn 3'(= a15◂ [ ] ) ⊢ 4'(= a15◂ [ ] )
	mov rax,r9
	mov r10,rax
;; rsp=0 , %2705~4'(= a15◂ [ ] ) %2704~2'(= r ) %2703~0'(= {| a15◂ [ ]|} ) %2701~1'(= {| a15◂ [ ]|} ) 
; #4 { 1'(= {| a15◂ [ ]|} ) 2'(= r ) } ⊢ { 1'(= {| a15◂ [ ]|} ) 2'(= r ) 5'(= a15◂ [ ] ) }
	mov rax,r8
	mov rdi,r14
	mov rsi,0x0000_ffff_ffff_ffff 
	and rsi,QWORD [rdi]
	cmp rax,rsi 
	jge err 
	mov rdi,[rdi+8+8*rax]
	C_PUSH_REGS
	mov r8,rdi
	call LB_5500
	C_POP_REGS
	mov r9,rax
; .mov_ptn2 3'(= a15◂ [ ] ) ⊢ 5'(= a15◂ [ ] )
	mov rcx,r11
; .mov_ptn 3'(= a15◂ [ ] ) ⊢ 5'(= a15◂ [ ] )
	mov rax,r9
	mov r11,rax
;; rsp=0 , %2708~5'(= a15◂ [ ] ) %2707~2'(= r ) %2706~1'(= {| a15◂ [ ]|} ) %2705~4'(= a15◂ [ ] ) %2703~0'(= {| a15◂ [ ]|} ) 
; #51 { 4'(= a15◂ [ ] ) 5'(= a15◂ [ ] ) } ⊢ 3'(= a15◂ [ ] )
	sub rsp,24
	mov QWORD [rsp+8*0],r13
	mov QWORD [rsp+8*1],r14
	mov QWORD [rsp+8*2],r8
; .mov_ptn2 { 4'(= a15◂ [ ] ) 5'(= a15◂ [ ] ) } ⊢ { 0'(= a15◂ [ ] ) 1'(= a15◂ [ ] ) }
; .mov_ptn 5'(= a15◂ [ ] ) ⊢ 1'(= a15◂ [ ] )
	mov rax,r11
	mov r14,rax
; .mov_ptn 4'(= a15◂ [ ] ) ⊢ 0'(= a15◂ [ ] )
	mov rax,r10
	mov r13,rax
	call ETR_51
	mov r8,QWORD [rsp-8+8*3]
	mov r14,QWORD [rsp-8+8*2]
	mov r9,r13
	mov r13,QWORD [rsp-8+8*1]
	add rsp,24
;; rsp=0 , %2709~3'(= a15◂ [ ] ) %2707~2'(= r ) %2706~1'(= {| a15◂ [ ]|} ) %2703~0'(= {| a15◂ [ ]|} ) 
; #1 { 0'(= {| a15◂ [ ]|} ) 2'(= r ) 3'(= a15◂ [ ] ) } ⊢ { 0'(= {| a15◂ [ ]|} ) 2'(= r ) 5'(= a15◂ [ ] ) }
; .mov_ptn2 3'(= a15◂ [ ] ) ⊢ 4'(= a15◂ [ ] )
	mov r11,r10
; .mov_ptn 3'(= a15◂ [ ] ) ⊢ 4'(= a15◂ [ ] )
	mov rax,r9
	mov r10,rax
	mov rax,r8
	mov rdi,r13
	mov rsi,0x0000_ffff_ffff_ffff 
	and rsi,QWORD [rdi]
	cmp rax,rsi 
	jge err
	lea rdi,[rdi+8+8*rax]
	mov rax,QWORD [rdi]
	mov rsi,r10
	mov QWORD [rdi],rsi 
	mov r10,rax
; .mov_ptn2 4'(= a15◂ [ ] ) ⊢ 5'(= a15◂ [ ] )
	mov rcx,r11
; .mov_ptn 4'(= a15◂ [ ] ) ⊢ 5'(= a15◂ [ ] )
	mov rax,r10
	mov r11,rax
; .dlt.ptn 5'(= a15◂ [ ] )
	mov rdi,r11
	C_PUSH_REGS
	mov r8,rdi
	call LB_23
	C_POP_REGS
;; rsp=0 , %2711~2'(= r ) %2710~0'(= {| a15◂ [ ]|} ) %2706~1'(= {| a15◂ [ ]|} ) 
; #11 2'(= r ) ⊢ 2'(= r )
	add r8,1
;; rsp=0 , %2713~2'(= r ) %2710~0'(= {| a15◂ [ ]|} ) %2706~1'(= {| a15◂ [ ]|} ) 
; #281 { 0'(= {| a15◂ [ ]|} ) 1'(= {| a15◂ [ ]|} ) 2'(= r ) } ⊢|
; .mov_ptn2 { 0'(= {| a15◂ [ ]|} ) 1'(= {| a15◂ [ ]|} ) 2'(= r ) } ⊢ { 0'(= {| a15◂ [ ]|} ) 1'(= {| a15◂ [ ]|} ) 2'(= r ) }
	call ETR_281
; .mov_ptn2 { 0'(= {| a15◂ [ ]|} ) 1'(= {| a15◂ [ ]|} ) } ⊢ { 0'(= {| a15◂ [ ]|} ) 1'(= {| a15◂ [ ]|} ) }
	ret
ETR_282: ;; and { 0'(= {| a15◂ [ ]|} ) 1'(= {| a15◂ [ ]|} ) } ⊢ { 0'(= {| a15◂ [ ]|} ) 1'(= {| a15◂ [ ]|} ) } : ({ _arr◂_t15 _arr◂_t15 }→{ _arr◂_t15 _arr◂_t15 })
;; rsp=0 , %2715~1'(= {| a15◂ [ ]|} ) %2714~0'(= {| a15◂ [ ]|} ) 
; #281 { 0'(= {| a15◂ [ ]|} ) 1'(= {| a15◂ [ ]|} ) %[ 0r ] } ⊢|
; .mov_ptn2 { 0'(= {| a15◂ [ ]|} ) 1'(= {| a15◂ [ ]|} ) %[ 0r ] } ⊢ { 0'(= {| a15◂ [ ]|} ) 1'(= {| a15◂ [ ]|} ) 2'(= r ) }
; .mov_ptn %[ 0r ] ⊢ 2'(= r )
	mov rax,0
	mov r8,rax
	call ETR_281
; .mov_ptn2 { 0'(= {| a15◂ [ ]|} ) 1'(= {| a15◂ [ ]|} ) } ⊢ { 0'(= {| a15◂ [ ]|} ) 1'(= {| a15◂ [ ]|} ) }
	ret
ETR_283: ;; or_lp { 0'(= {| a15◂ [ ]|} ) 1'(= {| a15◂ [ ]|} ) 2'(= r ) } ⊢ { 0'(= {| a15◂ [ ]|} ) 1'(= {| a15◂ [ ]|} ) } : ({ _arr◂_t15 _arr◂_t15 _r64 }→{ _arr◂_t15 _arr◂_t15 })
;; rsp=0 , %2718~2'(= r ) %2717~1'(= {| a15◂ [ ]|} ) %2716~0'(= {| a15◂ [ ]|} ) 
	cmp r8,64
	jnz LB_5507
	jmp LB_5506
LB_5507:
	jmp LB_5505
LB_5506:
;; rsp=0 , %2718~2'(= r ) %2717~1'(= {| a15◂ [ ]|} ) %2716~0'(= {| a15◂ [ ]|} ) 
; ∎ { 0'(= {| a15◂ [ ]|} ) 1'(= {| a15◂ [ ]|} ) }
; .dlt.ptn 2'(= r )
	mov rdi,r8
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 { 0'(= {| a15◂ [ ]|} ) 1'(= {| a15◂ [ ]|} ) } ⊢ { 0'(= {| a15◂ [ ]|} ) 1'(= {| a15◂ [ ]|} ) }
	ret
LB_5505:
;; rsp=0 , %2718~2'(= r ) %2717~1'(= {| a15◂ [ ]|} ) %2716~0'(= {| a15◂ [ ]|} ) 
; #4 { 0'(= {| a15◂ [ ]|} ) 2'(= r ) } ⊢ { 0'(= {| a15◂ [ ]|} ) 2'(= r ) 4'(= a15◂ [ ] ) }
	mov rax,r8
	mov rdi,r13
	mov rsi,0x0000_ffff_ffff_ffff 
	and rsi,QWORD [rdi]
	cmp rax,rsi 
	jge err 
	mov rdi,[rdi+8+8*rax]
	C_PUSH_REGS
	mov r8,rdi
	call LB_5500
	C_POP_REGS
	mov r9,rax
; .mov_ptn2 3'(= a15◂ [ ] ) ⊢ 4'(= a15◂ [ ] )
	mov r11,r10
; .mov_ptn 3'(= a15◂ [ ] ) ⊢ 4'(= a15◂ [ ] )
	mov rax,r9
	mov r10,rax
;; rsp=0 , %2721~4'(= a15◂ [ ] ) %2720~2'(= r ) %2719~0'(= {| a15◂ [ ]|} ) %2717~1'(= {| a15◂ [ ]|} ) 
; #4 { 1'(= {| a15◂ [ ]|} ) 2'(= r ) } ⊢ { 1'(= {| a15◂ [ ]|} ) 2'(= r ) 5'(= a15◂ [ ] ) }
	mov rax,r8
	mov rdi,r14
	mov rsi,0x0000_ffff_ffff_ffff 
	and rsi,QWORD [rdi]
	cmp rax,rsi 
	jge err 
	mov rdi,[rdi+8+8*rax]
	C_PUSH_REGS
	mov r8,rdi
	call LB_5500
	C_POP_REGS
	mov r9,rax
; .mov_ptn2 3'(= a15◂ [ ] ) ⊢ 5'(= a15◂ [ ] )
	mov rcx,r11
; .mov_ptn 3'(= a15◂ [ ] ) ⊢ 5'(= a15◂ [ ] )
	mov rax,r9
	mov r11,rax
;; rsp=0 , %2724~5'(= a15◂ [ ] ) %2723~2'(= r ) %2722~1'(= {| a15◂ [ ]|} ) %2721~4'(= a15◂ [ ] ) %2719~0'(= {| a15◂ [ ]|} ) 
; #52 { 4'(= a15◂ [ ] ) 5'(= a15◂ [ ] ) } ⊢ 3'(= a15◂ [ ] )
	sub rsp,24
	mov QWORD [rsp+8*0],r13
	mov QWORD [rsp+8*1],r14
	mov QWORD [rsp+8*2],r8
; .mov_ptn2 { 4'(= a15◂ [ ] ) 5'(= a15◂ [ ] ) } ⊢ { 0'(= a15◂ [ ] ) 1'(= a15◂ [ ] ) }
; .mov_ptn 5'(= a15◂ [ ] ) ⊢ 1'(= a15◂ [ ] )
	mov rax,r11
	mov r14,rax
; .mov_ptn 4'(= a15◂ [ ] ) ⊢ 0'(= a15◂ [ ] )
	mov rax,r10
	mov r13,rax
	call ETR_52
	mov r8,QWORD [rsp-8+8*3]
	mov r14,QWORD [rsp-8+8*2]
	mov r9,r13
	mov r13,QWORD [rsp-8+8*1]
	add rsp,24
;; rsp=0 , %2725~3'(= a15◂ [ ] ) %2723~2'(= r ) %2722~1'(= {| a15◂ [ ]|} ) %2719~0'(= {| a15◂ [ ]|} ) 
; #1 { 0'(= {| a15◂ [ ]|} ) 2'(= r ) 3'(= a15◂ [ ] ) } ⊢ { 0'(= {| a15◂ [ ]|} ) 2'(= r ) 5'(= a15◂ [ ] ) }
; .mov_ptn2 3'(= a15◂ [ ] ) ⊢ 4'(= a15◂ [ ] )
	mov r11,r10
; .mov_ptn 3'(= a15◂ [ ] ) ⊢ 4'(= a15◂ [ ] )
	mov rax,r9
	mov r10,rax
	mov rax,r8
	mov rdi,r13
	mov rsi,0x0000_ffff_ffff_ffff 
	and rsi,QWORD [rdi]
	cmp rax,rsi 
	jge err
	lea rdi,[rdi+8+8*rax]
	mov rax,QWORD [rdi]
	mov rsi,r10
	mov QWORD [rdi],rsi 
	mov r10,rax
; .mov_ptn2 4'(= a15◂ [ ] ) ⊢ 5'(= a15◂ [ ] )
	mov rcx,r11
; .mov_ptn 4'(= a15◂ [ ] ) ⊢ 5'(= a15◂ [ ] )
	mov rax,r10
	mov r11,rax
; .dlt.ptn 5'(= a15◂ [ ] )
	mov rdi,r11
	C_PUSH_REGS
	mov r8,rdi
	call LB_23
	C_POP_REGS
;; rsp=0 , %2727~2'(= r ) %2726~0'(= {| a15◂ [ ]|} ) %2722~1'(= {| a15◂ [ ]|} ) 
; #11 2'(= r ) ⊢ 2'(= r )
	add r8,1
;; rsp=0 , %2729~2'(= r ) %2726~0'(= {| a15◂ [ ]|} ) %2722~1'(= {| a15◂ [ ]|} ) 
; #283 { 0'(= {| a15◂ [ ]|} ) 1'(= {| a15◂ [ ]|} ) 2'(= r ) } ⊢|
; .mov_ptn2 { 0'(= {| a15◂ [ ]|} ) 1'(= {| a15◂ [ ]|} ) 2'(= r ) } ⊢ { 0'(= {| a15◂ [ ]|} ) 1'(= {| a15◂ [ ]|} ) 2'(= r ) }
	call ETR_283
; .mov_ptn2 { 0'(= {| a15◂ [ ]|} ) 1'(= {| a15◂ [ ]|} ) } ⊢ { 0'(= {| a15◂ [ ]|} ) 1'(= {| a15◂ [ ]|} ) }
	ret
ETR_284: ;; or { 0'(= {| a15◂ [ ]|} ) 1'(= {| a15◂ [ ]|} ) } ⊢ { 0'(= {| a15◂ [ ]|} ) 1'(= {| a15◂ [ ]|} ) } : ({ _arr◂_t15 _arr◂_t15 }→{ _arr◂_t15 _arr◂_t15 })
;; rsp=0 , %2731~1'(= {| a15◂ [ ]|} ) %2730~0'(= {| a15◂ [ ]|} ) 
; $ %[ 0r ] ⊢ %[ 0r ]
;; rsp=0 , %2732~%[ 0r ] %2731~1'(= {| a15◂ [ ]|} ) %2730~0'(= {| a15◂ [ ]|} ) 
; #283 { 0'(= {| a15◂ [ ]|} ) 1'(= {| a15◂ [ ]|} ) %[ 0r ] } ⊢|
; .mov_ptn2 { 0'(= {| a15◂ [ ]|} ) 1'(= {| a15◂ [ ]|} ) %[ 0r ] } ⊢ { 0'(= {| a15◂ [ ]|} ) 1'(= {| a15◂ [ ]|} ) 2'(= r ) }
; .mov_ptn %[ 0r ] ⊢ 2'(= r )
	mov rax,0
	mov r8,rax
	call ETR_283
; .mov_ptn2 { 0'(= {| a15◂ [ ]|} ) 1'(= {| a15◂ [ ]|} ) } ⊢ { 0'(= {| a15◂ [ ]|} ) 1'(= {| a15◂ [ ]|} ) }
	ret
ETR_285: ;; sub_lp { 0'(= {| a15◂ [ ]|} ) 1'(= {| a15◂ [ ]|} ) 2'(= r ) } ⊢ { 0'(= {| a15◂ [ ]|} ) 1'(= {| a15◂ [ ]|} ) } : ({ _arr◂_t15 _arr◂_t15 _r64 }→{ _arr◂_t15 _arr◂_t15 })
;; rsp=0 , %2735~2'(= r ) %2734~1'(= {| a15◂ [ ]|} ) %2733~0'(= {| a15◂ [ ]|} ) 
	cmp r8,64
	jnz LB_5510
	jmp LB_5509
LB_5510:
	jmp LB_5508
LB_5509:
;; rsp=0 , %2735~2'(= r ) %2734~1'(= {| a15◂ [ ]|} ) %2733~0'(= {| a15◂ [ ]|} ) 
; ∎ { 0'(= {| a15◂ [ ]|} ) 1'(= {| a15◂ [ ]|} ) }
; .dlt.ptn 2'(= r )
	mov rdi,r8
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 { 0'(= {| a15◂ [ ]|} ) 1'(= {| a15◂ [ ]|} ) } ⊢ { 0'(= {| a15◂ [ ]|} ) 1'(= {| a15◂ [ ]|} ) }
	ret
LB_5508:
;; rsp=0 , %2735~2'(= r ) %2734~1'(= {| a15◂ [ ]|} ) %2733~0'(= {| a15◂ [ ]|} ) 
; #4 { 0'(= {| a15◂ [ ]|} ) 2'(= r ) } ⊢ { 0'(= {| a15◂ [ ]|} ) 2'(= r ) 4'(= a15◂ [ ] ) }
	mov rax,r8
	mov rdi,r13
	mov rsi,0x0000_ffff_ffff_ffff 
	and rsi,QWORD [rdi]
	cmp rax,rsi 
	jge err 
	mov rdi,[rdi+8+8*rax]
	C_PUSH_REGS
	mov r8,rdi
	call LB_5500
	C_POP_REGS
	mov r9,rax
; .mov_ptn2 3'(= a15◂ [ ] ) ⊢ 4'(= a15◂ [ ] )
	mov r11,r10
; .mov_ptn 3'(= a15◂ [ ] ) ⊢ 4'(= a15◂ [ ] )
	mov rax,r9
	mov r10,rax
;; rsp=0 , %2738~4'(= a15◂ [ ] ) %2737~2'(= r ) %2736~0'(= {| a15◂ [ ]|} ) %2734~1'(= {| a15◂ [ ]|} ) 
; #4 { 1'(= {| a15◂ [ ]|} ) 2'(= r ) } ⊢ { 1'(= {| a15◂ [ ]|} ) 2'(= r ) 5'(= a15◂ [ ] ) }
	mov rax,r8
	mov rdi,r14
	mov rsi,0x0000_ffff_ffff_ffff 
	and rsi,QWORD [rdi]
	cmp rax,rsi 
	jge err 
	mov rdi,[rdi+8+8*rax]
	C_PUSH_REGS
	mov r8,rdi
	call LB_5500
	C_POP_REGS
	mov r9,rax
; .mov_ptn2 3'(= a15◂ [ ] ) ⊢ 5'(= a15◂ [ ] )
	mov rcx,r11
; .mov_ptn 3'(= a15◂ [ ] ) ⊢ 5'(= a15◂ [ ] )
	mov rax,r9
	mov r11,rax
;; rsp=0 , %2741~5'(= a15◂ [ ] ) %2740~2'(= r ) %2739~1'(= {| a15◂ [ ]|} ) %2738~4'(= a15◂ [ ] ) %2736~0'(= {| a15◂ [ ]|} ) 
; #53 { 4'(= a15◂ [ ] ) 5'(= a15◂ [ ] ) } ⊢ 3'(= a15◂ [ ] )
	sub rsp,24
	mov QWORD [rsp+8*0],r13
	mov QWORD [rsp+8*1],r14
	mov QWORD [rsp+8*2],r8
; .mov_ptn2 { 4'(= a15◂ [ ] ) 5'(= a15◂ [ ] ) } ⊢ { 0'(= a15◂ [ ] ) 1'(= a15◂ [ ] ) }
; .mov_ptn 5'(= a15◂ [ ] ) ⊢ 1'(= a15◂ [ ] )
	mov rax,r11
	mov r14,rax
; .mov_ptn 4'(= a15◂ [ ] ) ⊢ 0'(= a15◂ [ ] )
	mov rax,r10
	mov r13,rax
	call ETR_53
	mov r8,QWORD [rsp-8+8*3]
	mov r14,QWORD [rsp-8+8*2]
	mov r9,r13
	mov r13,QWORD [rsp-8+8*1]
	add rsp,24
;; rsp=0 , %2742~3'(= a15◂ [ ] ) %2740~2'(= r ) %2739~1'(= {| a15◂ [ ]|} ) %2736~0'(= {| a15◂ [ ]|} ) 
; #1 { 0'(= {| a15◂ [ ]|} ) 2'(= r ) 3'(= a15◂ [ ] ) } ⊢ { 0'(= {| a15◂ [ ]|} ) 2'(= r ) 5'(= a15◂ [ ] ) }
; .mov_ptn2 3'(= a15◂ [ ] ) ⊢ 4'(= a15◂ [ ] )
	mov r11,r10
; .mov_ptn 3'(= a15◂ [ ] ) ⊢ 4'(= a15◂ [ ] )
	mov rax,r9
	mov r10,rax
	mov rax,r8
	mov rdi,r13
	mov rsi,0x0000_ffff_ffff_ffff 
	and rsi,QWORD [rdi]
	cmp rax,rsi 
	jge err
	lea rdi,[rdi+8+8*rax]
	mov rax,QWORD [rdi]
	mov rsi,r10
	mov QWORD [rdi],rsi 
	mov r10,rax
; .mov_ptn2 4'(= a15◂ [ ] ) ⊢ 5'(= a15◂ [ ] )
	mov rcx,r11
; .mov_ptn 4'(= a15◂ [ ] ) ⊢ 5'(= a15◂ [ ] )
	mov rax,r10
	mov r11,rax
; .dlt.ptn 5'(= a15◂ [ ] )
	mov rdi,r11
	C_PUSH_REGS
	mov r8,rdi
	call LB_23
	C_POP_REGS
;; rsp=0 , %2744~2'(= r ) %2743~0'(= {| a15◂ [ ]|} ) %2739~1'(= {| a15◂ [ ]|} ) 
; #11 2'(= r ) ⊢ 2'(= r )
	add r8,1
;; rsp=0 , %2746~2'(= r ) %2743~0'(= {| a15◂ [ ]|} ) %2739~1'(= {| a15◂ [ ]|} ) 
; #285 { 0'(= {| a15◂ [ ]|} ) 1'(= {| a15◂ [ ]|} ) 2'(= r ) } ⊢|
; .mov_ptn2 { 0'(= {| a15◂ [ ]|} ) 1'(= {| a15◂ [ ]|} ) 2'(= r ) } ⊢ { 0'(= {| a15◂ [ ]|} ) 1'(= {| a15◂ [ ]|} ) 2'(= r ) }
	call ETR_285
; .mov_ptn2 { 0'(= {| a15◂ [ ]|} ) 1'(= {| a15◂ [ ]|} ) } ⊢ { 0'(= {| a15◂ [ ]|} ) 1'(= {| a15◂ [ ]|} ) }
	ret
ETR_286: ;; sub { 0'(= {| a15◂ [ ]|} ) 1'(= {| a15◂ [ ]|} ) } ⊢ { 0'(= {| a15◂ [ ]|} ) 1'(= {| a15◂ [ ]|} ) } : ({ _arr◂_t15 _arr◂_t15 }→{ _arr◂_t15 _arr◂_t15 })
;; rsp=0 , %2748~1'(= {| a15◂ [ ]|} ) %2747~0'(= {| a15◂ [ ]|} ) 
; $ %[ 0r ] ⊢ %[ 0r ]
;; rsp=0 , %2749~%[ 0r ] %2748~1'(= {| a15◂ [ ]|} ) %2747~0'(= {| a15◂ [ ]|} ) 
; #285 { 0'(= {| a15◂ [ ]|} ) 1'(= {| a15◂ [ ]|} ) %[ 0r ] } ⊢|
; .mov_ptn2 { 0'(= {| a15◂ [ ]|} ) 1'(= {| a15◂ [ ]|} ) %[ 0r ] } ⊢ { 0'(= {| a15◂ [ ]|} ) 1'(= {| a15◂ [ ]|} ) 2'(= r ) }
; .mov_ptn %[ 0r ] ⊢ 2'(= r )
	mov rax,0
	mov r8,rax
	call ETR_285
; .mov_ptn2 { 0'(= {| a15◂ [ ]|} ) 1'(= {| a15◂ [ ]|} ) } ⊢ { 0'(= {| a15◂ [ ]|} ) 1'(= {| a15◂ [ ]|} ) }
	ret
ETR_287: ;; min_f 0'(= {| a15◂ [ ]|} ) ⊢ { 0'(= {| a15◂ [ ]|} ) 1'(= r ) } : (_arr◂_t15→{ _arr◂_t15 _r64 })
;; rsp=0 , %2750~0'(= {| a15◂ [ ]|} ) 
; $ %[ 0r ] ⊢ %[ 0r ]
;; rsp=0 , %2751~%[ 0r ] %2750~0'(= {| a15◂ [ ]|} ) 
; #288 { 0'(= {| a15◂ [ ]|} ) %[ 0r ] } ⊢|
; .mov_ptn2 { 0'(= {| a15◂ [ ]|} ) %[ 0r ] } ⊢ { 0'(= {| a15◂ [ ]|} ) 1'(= r ) }
; .mov_ptn %[ 0r ] ⊢ 1'(= r )
	mov rax,0
	mov r14,rax
	call ETR_288
; .mov_ptn2 { 0'(= {| a15◂ [ ]|} ) 1'(= r ) } ⊢ { 0'(= {| a15◂ [ ]|} ) 1'(= r ) }
	ret
ETR_288: ;; min_f_lp { 0'(= {| a15◂ [ ]|} ) 1'(= r ) } ⊢ { 0'(= {| a15◂ [ ]|} ) 1'(= r ) } : ({ _arr◂_t15 _r64 }→{ _arr◂_t15 _r64 })
;; rsp=0 , %2753~1'(= r ) %2752~0'(= {| a15◂ [ ]|} ) 
	cmp r14,64
	jnz LB_5513
	jmp LB_5512
LB_5513:
	jmp LB_5511
LB_5512:
;; rsp=0 , %2753~1'(= r ) %2752~0'(= {| a15◂ [ ]|} ) 
; ∎ { 0'(= {| a15◂ [ ]|} ) 1'(= r ) }
; .mov_ptn2 { 0'(= {| a15◂ [ ]|} ) 1'(= r ) } ⊢ { 0'(= {| a15◂ [ ]|} ) 1'(= r ) }
	ret
LB_5511:
;; rsp=0 , %2753~1'(= r ) %2752~0'(= {| a15◂ [ ]|} ) 
; #4 { 0'(= {| a15◂ [ ]|} ) 1'(= r ) } ⊢ { 0'(= {| a15◂ [ ]|} ) 1'(= r ) 3'(= a15◂ [ ] ) }
	mov rax,r14
	mov rdi,r13
	mov rsi,0x0000_ffff_ffff_ffff 
	and rsi,QWORD [rdi]
	cmp rax,rsi 
	jge err 
	mov rdi,[rdi+8+8*rax]
	C_PUSH_REGS
	mov r8,rdi
	call LB_5500
	C_POP_REGS
	mov r8,rax
; .mov_ptn2 2'(= a15◂ [ ] ) ⊢ 3'(= a15◂ [ ] )
	mov r10,r9
; .mov_ptn 2'(= a15◂ [ ] ) ⊢ 3'(= a15◂ [ ] )
	mov rax,r8
	mov r9,rax
;; rsp=0 , %2756~3'(= a15◂ [ ] ) %2755~1'(= r ) %2754~0'(= {| a15◂ [ ]|} ) 
;; ? 3'(= a15◂ [ ] ) ⊢ 1(<2)◂{ }
	mov rdi,r9
	cmp BYTE [rdi+6],1
	jnz LB_5515
	jmp LB_5516
LB_5515:
	jmp LB_5514
LB_5516:
;; rsp=0 , %2755~1'(= r ) %2754~0'(= {| a15◂ [ ]|} ) 
; ∎ { 0'(= {| a15◂ [ ]|} ) 1'(= r ) }
; .mov_ptn2 { 0'(= {| a15◂ [ ]|} ) 1'(= r ) } ⊢ { 0'(= {| a15◂ [ ]|} ) 1'(= r ) }
	ret
LB_5514:
;; ?. 3'(= a15◂ [ ] ) ⊢ 0(<2)◂{ }
;; rsp=0 , %2755~1'(= r ) %2754~0'(= {| a15◂ [ ]|} ) 
; #11 1'(= r ) ⊢ 1'(= r )
	add r14,1
;; rsp=0 , %2757~1'(= r ) %2754~0'(= {| a15◂ [ ]|} ) 
; #288 { 0'(= {| a15◂ [ ]|} ) 1'(= r ) } ⊢|
; .mov_ptn2 { 0'(= {| a15◂ [ ]|} ) 1'(= r ) } ⊢ { 0'(= {| a15◂ [ ]|} ) 1'(= r ) }
	call ETR_288
; .mov_ptn2 { 0'(= {| a15◂ [ ]|} ) 1'(= r ) } ⊢ { 0'(= {| a15◂ [ ]|} ) 1'(= r ) }
	ret
ETR_289: ;; min_t 0'(= {| a15◂ [ ]|} ) ⊢ { 0'(= {| a15◂ [ ]|} ) 1'(= r ) } : (_arr◂_t15→{ _arr◂_t15 _r64 })
;; rsp=0 , %2758~0'(= {| a15◂ [ ]|} ) 
; $ %[ 0r ] ⊢ %[ 0r ]
;; rsp=0 , %2759~%[ 0r ] %2758~0'(= {| a15◂ [ ]|} ) 
; #290 { 0'(= {| a15◂ [ ]|} ) %[ 0r ] } ⊢|
; .mov_ptn2 { 0'(= {| a15◂ [ ]|} ) %[ 0r ] } ⊢ { 0'(= {| a15◂ [ ]|} ) 1'(= r ) }
; .mov_ptn %[ 0r ] ⊢ 1'(= r )
	mov rax,0
	mov r14,rax
	call ETR_290
; .mov_ptn2 { 0'(= {| a15◂ [ ]|} ) 1'(= r ) } ⊢ { 0'(= {| a15◂ [ ]|} ) 1'(= r ) }
	ret
ETR_290: ;; min_t_lp { 0'(= {| a15◂ [ ]|} ) 1'(= r ) } ⊢ { 0'(= {| a15◂ [ ]|} ) 1'(= r ) } : ({ _arr◂_t15 _r64 }→{ _arr◂_t15 _r64 })
;; rsp=0 , %2761~1'(= r ) %2760~0'(= {| a15◂ [ ]|} ) 
	cmp r14,64
	jnz LB_5519
	jmp LB_5518
LB_5519:
	jmp LB_5517
LB_5518:
;; rsp=0 , %2761~1'(= r ) %2760~0'(= {| a15◂ [ ]|} ) 
; ∎ { 0'(= {| a15◂ [ ]|} ) 1'(= r ) }
; .mov_ptn2 { 0'(= {| a15◂ [ ]|} ) 1'(= r ) } ⊢ { 0'(= {| a15◂ [ ]|} ) 1'(= r ) }
	ret
LB_5517:
;; rsp=0 , %2761~1'(= r ) %2760~0'(= {| a15◂ [ ]|} ) 
; #4 { 0'(= {| a15◂ [ ]|} ) 1'(= r ) } ⊢ { 0'(= {| a15◂ [ ]|} ) 1'(= r ) 3'(= a15◂ [ ] ) }
	mov rax,r14
	mov rdi,r13
	mov rsi,0x0000_ffff_ffff_ffff 
	and rsi,QWORD [rdi]
	cmp rax,rsi 
	jge err 
	mov rdi,[rdi+8+8*rax]
	C_PUSH_REGS
	mov r8,rdi
	call LB_5500
	C_POP_REGS
	mov r8,rax
; .mov_ptn2 2'(= a15◂ [ ] ) ⊢ 3'(= a15◂ [ ] )
	mov r10,r9
; .mov_ptn 2'(= a15◂ [ ] ) ⊢ 3'(= a15◂ [ ] )
	mov rax,r8
	mov r9,rax
;; rsp=0 , %2764~3'(= a15◂ [ ] ) %2763~1'(= r ) %2762~0'(= {| a15◂ [ ]|} ) 
;; ? 3'(= a15◂ [ ] ) ⊢ 0(<2)◂{ }
	mov rdi,r9
	cmp BYTE [rdi+6],0
	jnz LB_5521
	jmp LB_5522
LB_5521:
	jmp LB_5520
LB_5522:
;; rsp=0 , %2763~1'(= r ) %2762~0'(= {| a15◂ [ ]|} ) 
; ∎ { 0'(= {| a15◂ [ ]|} ) 1'(= r ) }
; .mov_ptn2 { 0'(= {| a15◂ [ ]|} ) 1'(= r ) } ⊢ { 0'(= {| a15◂ [ ]|} ) 1'(= r ) }
	ret
LB_5520:
;; ?. 3'(= a15◂ [ ] ) ⊢ 1(<2)◂{ }
;; rsp=0 , %2763~1'(= r ) %2762~0'(= {| a15◂ [ ]|} ) 
; #11 1'(= r ) ⊢ 1'(= r )
	add r14,1
;; rsp=0 , %2765~1'(= r ) %2762~0'(= {| a15◂ [ ]|} ) 
; #288 { 0'(= {| a15◂ [ ]|} ) 1'(= r ) } ⊢|
; .mov_ptn2 { 0'(= {| a15◂ [ ]|} ) 1'(= r ) } ⊢ { 0'(= {| a15◂ [ ]|} ) 1'(= r ) }
	call ETR_288
; .mov_ptn2 { 0'(= {| a15◂ [ ]|} ) 1'(= r ) } ⊢ { 0'(= {| a15◂ [ ]|} ) 1'(= r ) }
	ret
ETR_291: ;; max_t 0'(= {| a15◂ [ ]|} ) ⊢ { 0'(= {| a15◂ [ ]|} ) 1'(= r ) } : (_arr◂_t15→{ _arr◂_t15 _r64 })
;; rsp=0 , %2766~0'(= {| a15◂ [ ]|} ) 
; $ %[ 0r ] ⊢ %[ 0r ]
;; rsp=0 , %2767~%[ 0r ] %2766~0'(= {| a15◂ [ ]|} ) 
; $ %[ 0r ] ⊢ %[ 0r ]
;; rsp=0 , %2768~%[ 0r ] %2767~%[ 0r ] %2766~0'(= {| a15◂ [ ]|} ) 
; #292 { 0'(= {| a15◂ [ ]|} ) %[ 0r ] %[ 0r ] } ⊢|
; .mov_ptn2 { 0'(= {| a15◂ [ ]|} ) %[ 0r ] %[ 0r ] } ⊢ { 0'(= {| a15◂ [ ]|} ) 1'(= r ) 2'(= r ) }
; .mov_ptn %[ 0r ] ⊢ 2'(= r )
	mov rax,0
	mov r8,rax
; .mov_ptn %[ 0r ] ⊢ 1'(= r )
	mov rax,0
	mov r14,rax
	call ETR_292
; .mov_ptn2 { 0'(= {| a15◂ [ ]|} ) 1'(= r ) } ⊢ { 0'(= {| a15◂ [ ]|} ) 1'(= r ) }
	ret
ETR_292: ;; max_t_lp { 0'(= {| a15◂ [ ]|} ) 1'(= r ) 2'(= r ) } ⊢ { 0'(= {| a15◂ [ ]|} ) 1'(= r ) } : ({ _arr◂_t15 _r64 _r64 }→{ _arr◂_t15 _r64 })
;; rsp=0 , %2771~2'(= r ) %2770~1'(= r ) %2769~0'(= {| a15◂ [ ]|} ) 
	cmp r14,64
	jnz LB_5525
	jmp LB_5524
LB_5525:
	jmp LB_5523
LB_5524:
;; rsp=0 , %2771~2'(= r ) %2770~1'(= r ) %2769~0'(= {| a15◂ [ ]|} ) 
; ∎ { 0'(= {| a15◂ [ ]|} ) 2'(= r ) }
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 { 0'(= {| a15◂ [ ]|} ) 2'(= r ) } ⊢ { 0'(= {| a15◂ [ ]|} ) 1'(= r ) }
; .mov_ptn 2'(= r ) ⊢ 1'(= r )
	mov rax,r8
	mov r14,rax
	ret
LB_5523:
;; rsp=0 , %2771~2'(= r ) %2770~1'(= r ) %2769~0'(= {| a15◂ [ ]|} ) 
; #4 { 0'(= {| a15◂ [ ]|} ) 1'(= r ) } ⊢ { 0'(= {| a15◂ [ ]|} ) 1'(= r ) 4'(= a15◂ [ ] ) }
	mov rax,r14
	mov rdi,r13
	mov rsi,0x0000_ffff_ffff_ffff 
	and rsi,QWORD [rdi]
	cmp rax,rsi 
	jge err 
	mov rdi,[rdi+8+8*rax]
	C_PUSH_REGS
	mov r8,rdi
	call LB_5500
	C_POP_REGS
	mov r9,rax
; .mov_ptn2 3'(= a15◂ [ ] ) ⊢ 4'(= a15◂ [ ] )
	mov r11,r10
; .mov_ptn 3'(= a15◂ [ ] ) ⊢ 4'(= a15◂ [ ] )
	mov rax,r9
	mov r10,rax
;; rsp=0 , %2774~4'(= a15◂ [ ] ) %2773~1'(= r ) %2772~0'(= {| a15◂ [ ]|} ) %2771~2'(= r ) 
;; ? 4'(= a15◂ [ ] ) ⊢ 1(<2)◂{ }
	mov rdi,r10
	cmp BYTE [rdi+6],1
	jnz LB_5527
	jmp LB_5528
LB_5527:
	jmp LB_5526
LB_5528:
;; rsp=0 , %2773~1'(= r ) %2772~0'(= {| a15◂ [ ]|} ) %2771~2'(= r ) 
; #11 1'(= r ) ⊢ 1'(= r )
	add r14,1
;; rsp=0 , %2775~1'(= r ) %2772~0'(= {| a15◂ [ ]|} ) %2771~2'(= r ) 
; #292 { 0'(= {| a15◂ [ ]|} ) 1'(= r ) 2'(= r ) } ⊢|
; .mov_ptn2 { 0'(= {| a15◂ [ ]|} ) 1'(= r ) 2'(= r ) } ⊢ { 0'(= {| a15◂ [ ]|} ) 1'(= r ) 2'(= r ) }
	call ETR_292
; .mov_ptn2 { 0'(= {| a15◂ [ ]|} ) 1'(= r ) } ⊢ { 0'(= {| a15◂ [ ]|} ) 1'(= r ) }
	ret
LB_5526:
;; ?. 4'(= a15◂ [ ] ) ⊢ 0(<2)◂{ }
;; rsp=0 , %2773~1'(= r ) %2772~0'(= {| a15◂ [ ]|} ) %2771~2'(= r ) 
; $ 1'(= r ) ⊢ 1'(= r ),3'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	mov rax,r8
	C_POP_REGS
	mov r9,rax
;; rsp=0 , %2777~3'(= r ) %2776~1'(= r ) %2772~0'(= {| a15◂ [ ]|} ) %2771~2'(= r ) 
; #11 1'(= r ) ⊢ 1'(= r )
	add r14,1
;; rsp=0 , %2778~1'(= r ) %2777~3'(= r ) %2772~0'(= {| a15◂ [ ]|} ) %2771~2'(= r ) 
; #292 { 0'(= {| a15◂ [ ]|} ) 1'(= r ) 3'(= r ) } ⊢|
; .dlt.ptn 2'(= r )
	mov rdi,r8
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 { 0'(= {| a15◂ [ ]|} ) 1'(= r ) 3'(= r ) } ⊢ { 0'(= {| a15◂ [ ]|} ) 1'(= r ) 2'(= r ) }
; .mov_ptn 3'(= r ) ⊢ 2'(= r )
	mov rax,r9
	mov r8,rax
	call ETR_292
; .mov_ptn2 { 0'(= {| a15◂ [ ]|} ) 1'(= r ) } ⊢ { 0'(= {| a15◂ [ ]|} ) 1'(= r ) }
	ret
ETR_293: ;; is_zero_lp { 0'(= {| a15◂ [ ]|} ) 1'(= r ) } ⊢ { 0'(= {| a15◂ [ ]|} ) 1'(= a15◂ [ ] ) } : ({ _arr◂_t15 _r64 }→{ _arr◂_t15 _t15 })
;; rsp=0 , %2780~1'(= r ) %2779~0'(= {| a15◂ [ ]|} ) 
	cmp r14,64
	jnz LB_5531
	jmp LB_5530
LB_5531:
	jmp LB_5529
LB_5530:
;; rsp=0 , %2780~1'(= r ) %2779~0'(= {| a15◂ [ ]|} ) 
; #50 { } ⊢ 0(<2)◂{ }
;; rsp=0 , %2781~0(<2)◂{ } %2780~1'(= r ) %2779~0'(= {| a15◂ [ ]|} ) 
; ∎ { 0'(= {| a15◂ [ ]|} ) 0(<2)◂{ } }
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 { 0'(= {| a15◂ [ ]|} ) 0(<2)◂{ } } ⊢ { 0'(= {| a15◂ [ ]|} ) 1'(= a15◂ [ ] ) }
; .mov_ptn 0(<2)◂{ } ⊢ 1'(= a15◂ [ ] )
	mov rax,unt 
	mov rax,unt_0
	mov r14,rax
	ret
LB_5529:
;; rsp=0 , %2780~1'(= r ) %2779~0'(= {| a15◂ [ ]|} ) 
; #4 { 0'(= {| a15◂ [ ]|} ) 1'(= r ) } ⊢ { 0'(= {| a15◂ [ ]|} ) 1'(= r ) 3'(= a15◂ [ ] ) }
	mov rax,r14
	mov rdi,r13
	mov rsi,0x0000_ffff_ffff_ffff 
	and rsi,QWORD [rdi]
	cmp rax,rsi 
	jge err 
	mov rdi,[rdi+8+8*rax]
	C_PUSH_REGS
	mov r8,rdi
	call LB_5500
	C_POP_REGS
	mov r8,rax
; .mov_ptn2 2'(= a15◂ [ ] ) ⊢ 3'(= a15◂ [ ] )
	mov r10,r9
; .mov_ptn 2'(= a15◂ [ ] ) ⊢ 3'(= a15◂ [ ] )
	mov rax,r8
	mov r9,rax
;; rsp=0 , %2784~3'(= a15◂ [ ] ) %2783~1'(= r ) %2782~0'(= {| a15◂ [ ]|} ) 
;; ? 3'(= a15◂ [ ] ) ⊢ 0(<2)◂{ }
	mov rdi,r9
	cmp BYTE [rdi+6],0
	jnz LB_5533
	jmp LB_5534
LB_5533:
	jmp LB_5532
LB_5534:
;; rsp=0 , %2783~1'(= r ) %2782~0'(= {| a15◂ [ ]|} ) 
; #49 { } ⊢ 1(<2)◂{ }
;; rsp=0 , %2785~1(<2)◂{ } %2783~1'(= r ) %2782~0'(= {| a15◂ [ ]|} ) 
; ∎ { 0'(= {| a15◂ [ ]|} ) 1(<2)◂{ } }
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 { 0'(= {| a15◂ [ ]|} ) 1(<2)◂{ } } ⊢ { 0'(= {| a15◂ [ ]|} ) 1'(= a15◂ [ ] ) }
; .mov_ptn 1(<2)◂{ } ⊢ 1'(= a15◂ [ ] )
	mov rax,unt 
	mov rax,unt_1
	mov r14,rax
	ret
LB_5532:
;; ?. 3'(= a15◂ [ ] ) ⊢ 1(<2)◂{ }
;; rsp=0 , %2783~1'(= r ) %2782~0'(= {| a15◂ [ ]|} ) 
; #11 1'(= r ) ⊢ 1'(= r )
	add r14,1
;; rsp=0 , %2786~1'(= r ) %2782~0'(= {| a15◂ [ ]|} ) 
; #293 { 0'(= {| a15◂ [ ]|} ) 1'(= r ) } ⊢|
; .mov_ptn2 { 0'(= {| a15◂ [ ]|} ) 1'(= r ) } ⊢ { 0'(= {| a15◂ [ ]|} ) 1'(= r ) }
	call ETR_293
; .mov_ptn2 { 0'(= {| a15◂ [ ]|} ) 1'(= a15◂ [ ] ) } ⊢ { 0'(= {| a15◂ [ ]|} ) 1'(= a15◂ [ ] ) }
	ret
ETR_294: ;; is_zero 0'(= {| a15◂ [ ]|} ) ⊢ { 0'(= {| a15◂ [ ]|} ) 1'(= a15◂ [ ] ) } : (_arr◂_t15→{ _arr◂_t15 _t15 })
;; rsp=0 , %2787~0'(= {| a15◂ [ ]|} ) 
; $ %[ 0r ] ⊢ %[ 0r ]
;; rsp=0 , %2788~%[ 0r ] %2787~0'(= {| a15◂ [ ]|} ) 
; #293 { 0'(= {| a15◂ [ ]|} ) %[ 0r ] } ⊢ { 0'(= {| a15◂ [ ]|} ) 1'(= a15◂ [ ] ) }
; .mov_ptn2 { 0'(= {| a15◂ [ ]|} ) %[ 0r ] } ⊢ { 0'(= {| a15◂ [ ]|} ) 1'(= r ) }
; .mov_ptn %[ 0r ] ⊢ 1'(= r )
	mov rax,0
	mov r14,rax
	call ETR_293
;; rsp=0 , %2790~1'(= a15◂ [ ] ) %2789~0'(= {| a15◂ [ ]|} ) 
; ∎ { 0'(= {| a15◂ [ ]|} ) 1'(= a15◂ [ ] ) }
; .mov_ptn2 { 0'(= {| a15◂ [ ]|} ) 1'(= a15◂ [ ] ) } ⊢ { 0'(= {| a15◂ [ ]|} ) 1'(= a15◂ [ ] ) }
	ret
ETR_295: ;; alc_vs 0'(= {| a15◂ [ ]|} ) ⊢ { 0'(= {| a15◂ [ ]|} ) 1'(= r ) } : (_arr◂_t15→{ _arr◂_t15 _r64 })
;; rsp=0 , %2791~0'(= {| a15◂ [ ]|} ) 
; #287 0'(= {| a15◂ [ ]|} ) ⊢ { 0'(= {| a15◂ [ ]|} ) 1'(= r ) }
; .mov_ptn2 0'(= {| a15◂ [ ]|} ) ⊢ 0'(= {| a15◂ [ ]|} )
	call ETR_287
;; rsp=0 , %2793~1'(= r ) %2792~0'(= {| a15◂ [ ]|} ) 
; #50 { } ⊢ 0(<2)◂{ }
;; rsp=0 , %2794~0(<2)◂{ } %2793~1'(= r ) %2792~0'(= {| a15◂ [ ]|} ) 
; #1 { 0'(= {| a15◂ [ ]|} ) 1'(= r ) 0(<2)◂{ } } ⊢ { 0'(= {| a15◂ [ ]|} ) 1'(= r ) 3'(= a15◂ [ ] ) }
; .mov_ptn2 0(<2)◂{ } ⊢ 2'(= a15◂ [ ] )
	mov r9,r8
; .mov_ptn 0(<2)◂{ } ⊢ 2'(= a15◂ [ ] )
	mov rax,unt 
	mov rax,unt_0
	mov r8,rax
	mov rax,r14
	mov rdi,r13
	mov rsi,0x0000_ffff_ffff_ffff 
	and rsi,QWORD [rdi]
	cmp rax,rsi 
	jge err
	lea rdi,[rdi+8+8*rax]
	mov rax,QWORD [rdi]
	mov rsi,r8
	mov QWORD [rdi],rsi 
	mov r8,rax
; .mov_ptn2 2'(= a15◂ [ ] ) ⊢ 3'(= a15◂ [ ] )
	mov r10,r9
; .mov_ptn 2'(= a15◂ [ ] ) ⊢ 3'(= a15◂ [ ] )
	mov rax,r8
	mov r9,rax
;; rsp=0 , %2797~3'(= a15◂ [ ] ) %2796~1'(= r ) %2795~0'(= {| a15◂ [ ]|} ) 
; ∎ { 0'(= {| a15◂ [ ]|} ) 1'(= r ) }
; .dlt.ptn 3'(= a15◂ [ ] )
	mov rdi,r9
	C_PUSH_REGS
	mov r8,rdi
	call LB_23
	C_POP_REGS
; .mov_ptn2 { 0'(= {| a15◂ [ ]|} ) 1'(= r ) } ⊢ { 0'(= {| a15◂ [ ]|} ) 1'(= r ) }
	ret
ETR_320: ;; ptn_of_hp { 0'(= {| a15◂ [ ]|} ) 1'(= a48◂ [ ] ) } ⊢ { 0'(= {| a15◂ [ ]|} ) 1'(= a17◂ [ a46◂ [ r]] ) } : ({ _arr◂_t15 _t48 }→{ _arr◂_t15 _t17◂_t46◂_r64 })
;; rsp=0 , %2799~1'(= a48◂ [ ] ) %2798~0'(= {| a15◂ [ ]|} ) 
;; ?; 1'(= a48◂ [ ] ) ⊢ 0(<4)◂2'(= a49◂ [ ] )
	mov rdi,r14
	cmp BYTE [rdi+6],0
	jnz LB_5536
	jmp LB_5537
LB_5536:
	jmp LB_5535
LB_5537:
	mov QWORD [GBG_VCT+8*0],rdi
	mov r8,QWORD [rdi+8]
;; ?; 2'(= a49◂ [ ] ) ⊢ 4(<5)◂3'(= a2◂ [ a48◂ [ ]] )
	mov rdi,r8
	cmp BYTE [rdi+6],4
	jnz LB_5538
	jmp LB_5539
LB_5538:
	jmp LB_5535
LB_5539:
	mov QWORD [GBG_VCT+8*1],rdi
	mov r9,QWORD [rdi+8]
	mov rdi,QWORD [GBG_VCT+8*1]
	FREE_LN rdi
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_LN rdi
;; rsp=0 , %2801~3'(= a2◂ [ a48◂ [ ]] ) %2798~0'(= {| a15◂ [ ]|} ) 
; #321 { 0'(= {| a15◂ [ ]|} ) 3'(= a2◂ [ a48◂ [ ]] ) } ⊢ { 0'(= {| a15◂ [ ]|} ) 1'(= a2◂ [ a17◂ [ a46◂ [ r]]] ) }
; .mov_ptn2 { 0'(= {| a15◂ [ ]|} ) 3'(= a2◂ [ a48◂ [ ]] ) } ⊢ { 0'(= {| a15◂ [ ]|} ) 1'(= a2◂ [ a48◂ [ ]] ) }
; .mov_ptn 3'(= a2◂ [ a48◂ [ ]] ) ⊢ 1'(= a2◂ [ a48◂ [ ]] )
	mov rax,r9
	mov r14,rax
	call ETR_321
;; rsp=0 , %2803~1'(= a2◂ [ a17◂ [ a46◂ [ r]]] ) %2802~0'(= {| a15◂ [ ]|} ) 
; #84 1'(= a2◂ [ a17◂ [ a46◂ [ r]]] ) ⊢ 0(<2)◂1'(= a2◂ [ a17◂ [ a46◂ [ r]]] )
;; rsp=0 , %2804~0(<2)◂1'(= a2◂ [ a17◂ [ a46◂ [ r]]] ) %2802~0'(= {| a15◂ [ ]|} ) 
; ∎ { 0'(= {| a15◂ [ ]|} ) 0(<2)◂1'(= a2◂ [ a17◂ [ a46◂ [ r]]] ) }
; .mov_ptn2 { 0'(= {| a15◂ [ ]|} ) 0(<2)◂1'(= a2◂ [ a17◂ [ a46◂ [ r]]] ) } ⊢ { 0'(= {| a15◂ [ ]|} ) 1'(= a17◂ [ a46◂ [ r]] ) }
	mov r8,r14
; .mov_ptn 0(<2)◂2'(= a2◂ [ a17◂ [ a46◂ [ r]]] ) ⊢ 1'(= a17◂ [ a46◂ [ r]] )
	mov rax,r8
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r14,rax
	ret
LB_5535:
;; ?; 1'(= a48◂ [ ] ) ⊢ 0(<4)◂2'(= a49◂ [ ] )
	mov rdi,r14
	cmp BYTE [rdi+6],0
	jnz LB_5541
	jmp LB_5542
LB_5541:
	jmp LB_5540
LB_5542:
	mov QWORD [GBG_VCT+8*0],rdi
	mov r8,QWORD [rdi+8]
;; ?; 2'(= a49◂ [ ] ) ⊢ 3(<5)◂{ }
	mov rdi,r8
	cmp BYTE [rdi+6],3
	jnz LB_5543
	jmp LB_5544
LB_5543:
	jmp LB_5540
LB_5544:
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_LN rdi
;; rsp=0 , %2798~0'(= {| a15◂ [ ]|} ) 
; #295 0'(= {| a15◂ [ ]|} ) ⊢ { 0'(= {| a15◂ [ ]|} ) 1'(= r ) }
; .mov_ptn2 0'(= {| a15◂ [ ]|} ) ⊢ 0'(= {| a15◂ [ ]|} )
	call ETR_295
;; rsp=0 , %2807~1'(= r ) %2806~0'(= {| a15◂ [ ]|} ) 
; #295 0'(= {| a15◂ [ ]|} ) ⊢ { 0'(= {| a15◂ [ ]|} ) 2'(= r ) }
	sub rsp,8
	mov QWORD [rsp+8*0],r14
; .mov_ptn2 0'(= {| a15◂ [ ]|} ) ⊢ 0'(= {| a15◂ [ ]|} )
	call ETR_295
	mov r8,r14
	mov r14,QWORD [rsp-8+8*1]
	add rsp,8
;; rsp=0 , %2809~2'(= r ) %2808~0'(= {| a15◂ [ ]|} ) %2807~1'(= r ) 
; #312 { 1'(= r ) 2'(= r ) } ⊢ 4(<5)◂{ 1'(= r ) 2'(= r ) }
;; rsp=0 , %2810~4(<5)◂{ 1'(= r ) 2'(= r ) } %2808~0'(= {| a15◂ [ ]|} ) 
; #83 4(<5)◂{ 1'(= r ) 2'(= r ) } ⊢ 1(<2)◂4(<5)◂{ 1'(= r ) 2'(= r ) }
;; rsp=0 , %2811~1(<2)◂4(<5)◂{ 1'(= r ) 2'(= r ) } %2808~0'(= {| a15◂ [ ]|} ) 
; ∎ { 0'(= {| a15◂ [ ]|} ) 1(<2)◂4(<5)◂{ 1'(= r ) 2'(= r ) } }
; .mov_ptn2 { 0'(= {| a15◂ [ ]|} ) 1(<2)◂4(<5)◂{ 1'(= r ) 2'(= r ) } } ⊢ { 0'(= {| a15◂ [ ]|} ) 1'(= a17◂ [ a46◂ [ r]] ) }
	mov r9,r14
; .mov_ptn 1(<2)◂4(<5)◂{ 3'(= r ) 2'(= r ) } ⊢ 1'(= a17◂ [ a46◂ [ r]] )
	ALC_RCD 2, rax
	mov r10,rax
	mov rax,r9
	mov QWORD [r10+8+8*0],rax
	mov rax,r8
	mov QWORD [r10+8+8*1],rax
	mov rax,r10
	mov BYTE [rax+6],4
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],1
	mov QWORD [rax+8],rdi
	mov r14,rax
	ret
LB_5540:
;; rsp=0 , %2799~1'(= a48◂ [ ] ) %2798~0'(= {| a15◂ [ ]|} ) 
; #295 0'(= {| a15◂ [ ]|} ) ⊢ { 0'(= {| a15◂ [ ]|} ) 2'(= r ) }
	sub rsp,8
	mov QWORD [rsp+8*0],r14
; .mov_ptn2 0'(= {| a15◂ [ ]|} ) ⊢ 0'(= {| a15◂ [ ]|} )
	call ETR_295
	mov r8,r14
	mov r14,QWORD [rsp-8+8*1]
	add rsp,8
;; rsp=0 , %2813~2'(= r ) %2812~0'(= {| a15◂ [ ]|} ) %2799~1'(= a48◂ [ ] ) 
; #316 { 2'(= r ) 1'(= a48◂ [ ] ) } ⊢ 0(<5)◂{ 2'(= r ) 1'(= a48◂ [ ] ) }
;; rsp=0 , %2814~0(<5)◂{ 2'(= r ) 1'(= a48◂ [ ] ) } %2812~0'(= {| a15◂ [ ]|} ) 
; #83 0(<5)◂{ 2'(= r ) 1'(= a48◂ [ ] ) } ⊢ 1(<2)◂0(<5)◂{ 2'(= r ) 1'(= a48◂ [ ] ) }
;; rsp=0 , %2815~1(<2)◂0(<5)◂{ 2'(= r ) 1'(= a48◂ [ ] ) } %2812~0'(= {| a15◂ [ ]|} ) 
; ∎ { 0'(= {| a15◂ [ ]|} ) 1(<2)◂0(<5)◂{ 2'(= r ) 1'(= a48◂ [ ] ) } }
; .mov_ptn2 { 0'(= {| a15◂ [ ]|} ) 1(<2)◂0(<5)◂{ 2'(= r ) 1'(= a48◂ [ ] ) } } ⊢ { 0'(= {| a15◂ [ ]|} ) 1'(= a17◂ [ a46◂ [ r]] ) }
	mov r9,r14
; .mov_ptn 1(<2)◂0(<5)◂{ 2'(= r ) 3'(= a48◂ [ ] ) } ⊢ 1'(= a17◂ [ a46◂ [ r]] )
	ALC_RCD 2, rax
	mov r10,rax
	mov rax,r8
	mov QWORD [r10+8+8*0],rax
	mov rax,r9
	mov QWORD [r10+8+8*1],rax
	mov rax,r10
	mov BYTE [rax+6],0
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],1
	mov QWORD [rax+8],rdi
	mov r14,rax
	ret
ETR_321: ;; ptn_of_hp_lst { 0'(= {| a15◂ [ ]|} ) 1'(= a2◂ [ a48◂ [ ]] ) } ⊢ { 0'(= {| a15◂ [ ]|} ) 1'(= a2◂ [ a17◂ [ a46◂ [ r]]] ) } : ({ _arr◂_t15 _lst◂_t48 }→{ _arr◂_t15 _lst◂_t17◂_t46◂_r64 })
;; rsp=0 , %2817~1'(= a2◂ [ a48◂ [ ]] ) %2816~0'(= {| a15◂ [ ]|} ) 
;; ? 1'(= a2◂ [ a48◂ [ ]] ) ⊢ 0(<2)◂{ 2'(= a48◂ [ ] ) 3'(= a2◂ [ a48◂ [ ]] ) }
	mov rdi,r14
	cmp BYTE [rdi+6],0
	jnz LB_5546
	jmp LB_5547
LB_5546:
	jmp LB_5545
LB_5547:
	mov r8, QWORD [r14+8]
	mov r9, QWORD [r14+16]
	mov QWORD [GBG_VCT+8*0],r14
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_RCD 2,rdi
;; rsp=0 , %2819~3'(= a2◂ [ a48◂ [ ]] ) %2818~2'(= a48◂ [ ] ) %2816~0'(= {| a15◂ [ ]|} ) 
; #320 { 0'(= {| a15◂ [ ]|} ) 2'(= a48◂ [ ] ) } ⊢ { 0'(= {| a15◂ [ ]|} ) 1'(= a17◂ [ a46◂ [ r]] ) }
	sub rsp,8
	mov QWORD [rsp+8*0],r9
; .mov_ptn2 { 0'(= {| a15◂ [ ]|} ) 2'(= a48◂ [ ] ) } ⊢ { 0'(= {| a15◂ [ ]|} ) 1'(= a48◂ [ ] ) }
; .mov_ptn 2'(= a48◂ [ ] ) ⊢ 1'(= a48◂ [ ] )
	mov rax,r8
	mov r14,rax
	call ETR_320
	mov r9,QWORD [rsp-8+8*1]
	add rsp,8
;; rsp=0 , %2821~1'(= a17◂ [ a46◂ [ r]] ) %2820~0'(= {| a15◂ [ ]|} ) %2819~3'(= a2◂ [ a48◂ [ ]] ) 
; #321 { 0'(= {| a15◂ [ ]|} ) 3'(= a2◂ [ a48◂ [ ]] ) } ⊢ { 0'(= {| a15◂ [ ]|} ) 2'(= a2◂ [ a17◂ [ a46◂ [ r]]] ) }
	sub rsp,8
	mov QWORD [rsp+8*0],r14
; .mov_ptn2 { 0'(= {| a15◂ [ ]|} ) 3'(= a2◂ [ a48◂ [ ]] ) } ⊢ { 0'(= {| a15◂ [ ]|} ) 1'(= a2◂ [ a48◂ [ ]] ) }
; .mov_ptn 3'(= a2◂ [ a48◂ [ ]] ) ⊢ 1'(= a2◂ [ a48◂ [ ]] )
	mov rax,r9
	mov r14,rax
	call ETR_321
	mov r8,r14
	mov r14,QWORD [rsp-8+8*1]
	add rsp,8
;; rsp=0 , %2823~2'(= a2◂ [ a17◂ [ a46◂ [ r]]] ) %2822~0'(= {| a15◂ [ ]|} ) %2821~1'(= a17◂ [ a46◂ [ r]] ) 
; #23 { 1'(= a17◂ [ a46◂ [ r]] ) 2'(= a2◂ [ a17◂ [ a46◂ [ r]]] ) } ⊢ 0(<2)◂{ 1'(= a17◂ [ a46◂ [ r]] ) 2'(= a2◂ [ a17◂ [ a46◂ [ r]]] ) }
;; rsp=0 , %2824~0(<2)◂{ 1'(= a17◂ [ a46◂ [ r]] ) 2'(= a2◂ [ a17◂ [ a46◂ [ r]]] ) } %2822~0'(= {| a15◂ [ ]|} ) 
; ∎ { 0'(= {| a15◂ [ ]|} ) 0(<2)◂{ 1'(= a17◂ [ a46◂ [ r]] ) 2'(= a2◂ [ a17◂ [ a46◂ [ r]]] ) } }
; .mov_ptn2 { 0'(= {| a15◂ [ ]|} ) 0(<2)◂{ 1'(= a17◂ [ a46◂ [ r]] ) 2'(= a2◂ [ a17◂ [ a46◂ [ r]]] ) } } ⊢ { 0'(= {| a15◂ [ ]|} ) 1'(= a2◂ [ a17◂ [ a46◂ [ r]]] ) }
	mov r9,r14
; .mov_ptn 0(<2)◂{ 3'(= a17◂ [ a46◂ [ r]] ) 2'(= a2◂ [ a17◂ [ a46◂ [ r]]] ) } ⊢ 1'(= a2◂ [ a17◂ [ a46◂ [ r]]] )
	ALC_RCD 2, rax
	mov r10,rax
	mov rax,r9
	mov QWORD [r10+8+8*0],rax
	mov rax,r8
	mov QWORD [r10+8+8*1],rax
	mov rax,r10
	mov BYTE [rax+6],0
	mov r14,rax
	ret
LB_5545:
;; ?. 1'(= a2◂ [ a48◂ [ ]] ) ⊢ 1(<2)◂{ }
;; rsp=0 , %2816~0'(= {| a15◂ [ ]|} ) 
; #22 { } ⊢ 1(<2)◂{ }
;; rsp=0 , %2825~1(<2)◂{ } %2816~0'(= {| a15◂ [ ]|} ) 
; ∎ { 0'(= {| a15◂ [ ]|} ) 1(<2)◂{ } }
; .mov_ptn2 { 0'(= {| a15◂ [ ]|} ) 1(<2)◂{ } } ⊢ { 0'(= {| a15◂ [ ]|} ) 1'(= a2◂ [ a17◂ [ a46◂ [ r]]] ) }
; .mov_ptn 1(<2)◂{ } ⊢ 1'(= a2◂ [ a17◂ [ a46◂ [ r]]] )
	mov rax,unt 
	mov rax,unt_1
	mov r14,rax
	ret
ETR_322: ;; eq_hp { 0'(= a48◂ [ ] ) 1'(= a48◂ [ ] ) } ⊢ { 0'(= a48◂ [ ] ) 1'(= a48◂ [ ] ) 2'(= a15◂ [ ] ) } : ({ _t48 _t48 }→{ _t48 _t48 _t15 })
;; rsp=0 , %2827~1'(= a48◂ [ ] ) %2826~0'(= a48◂ [ ] ) 
;; ?; 0'(= a48◂ [ ] ) ⊢ 0(<4)◂2'(= a49◂ [ ] )
	mov rdi,r13
	cmp BYTE [rdi+6],0
	jnz LB_5549
	jmp LB_5550
LB_5549:
	jmp LB_5548
LB_5550:
	mov QWORD [GBG_VCT+8*0],rdi
	mov r8,QWORD [rdi+8]
;; ?; 1'(= a48◂ [ ] ) ⊢ 0(<4)◂3'(= a49◂ [ ] )
	mov rdi,r14
	cmp BYTE [rdi+6],0
	jnz LB_5551
	jmp LB_5552
LB_5551:
	jmp LB_5548
LB_5552:
	mov QWORD [GBG_VCT+8*1],rdi
	mov r9,QWORD [rdi+8]
	mov rdi,QWORD [GBG_VCT+8*1]
	FREE_LN rdi
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_LN rdi
;; rsp=0 , %2829~3'(= a49◂ [ ] ) %2828~2'(= a49◂ [ ] ) 
;; ?; 2'(= a49◂ [ ] ) ⊢ 0(<5)◂{ }
	mov rdi,r8
	cmp BYTE [rdi+6],0
	jnz LB_5554
	jmp LB_5555
LB_5554:
	jmp LB_5553
LB_5555:
;; ?; 3'(= a49◂ [ ] ) ⊢ 0(<5)◂{ }
	mov rdi,r9
	cmp BYTE [rdi+6],0
	jnz LB_5556
	jmp LB_5557
LB_5556:
	jmp LB_5553
LB_5557:
;; rsp=0 , 
; #305 { } ⊢ 0(<5)◂{ }
;; rsp=0 , %2830~0(<5)◂{ } 
; #305 { } ⊢ 0(<5)◂{ }
;; rsp=0 , %2831~0(<5)◂{ } %2830~0(<5)◂{ } 
; #309 0(<5)◂{ } ⊢ 0(<4)◂0(<5)◂{ }
;; rsp=0 , %2832~0(<4)◂0(<5)◂{ } %2831~0(<5)◂{ } 
; #309 0(<5)◂{ } ⊢ 0(<4)◂0(<5)◂{ }
;; rsp=0 , %2833~0(<4)◂0(<5)◂{ } %2832~0(<4)◂0(<5)◂{ } 
; #50 { } ⊢ 0(<2)◂{ }
;; rsp=0 , %2834~0(<2)◂{ } %2833~0(<4)◂0(<5)◂{ } %2832~0(<4)◂0(<5)◂{ } 
; ∎ { 0(<4)◂0(<5)◂{ } 0(<4)◂0(<5)◂{ } 0(<2)◂{ } }
; .mov_ptn2 { 0(<4)◂0(<5)◂{ } 0(<4)◂0(<5)◂{ } 0(<2)◂{ } } ⊢ { 0'(= a48◂ [ ] ) 1'(= a48◂ [ ] ) 2'(= a15◂ [ ] ) }
; .mov_ptn 0(<2)◂{ } ⊢ 2'(= a15◂ [ ] )
	mov rax,unt 
	mov rax,unt_0
	mov r8,rax
; .mov_ptn 0(<4)◂0(<5)◂{ } ⊢ 1'(= a48◂ [ ] )
	mov rax,unt 
	mov rax,unt_0
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r14,rax
; .mov_ptn 0(<4)◂0(<5)◂{ } ⊢ 0'(= a48◂ [ ] )
	mov rax,unt 
	mov rax,unt_0
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r13,rax
	ret
LB_5553:
;; ?; 2'(= a49◂ [ ] ) ⊢ 4(<5)◂0'(= a2◂ [ a48◂ [ ]] )
	mov rdi,r8
	cmp BYTE [rdi+6],4
	jnz LB_5559
	jmp LB_5560
LB_5559:
	jmp LB_5558
LB_5560:
	mov QWORD [GBG_VCT+8*0],rdi
	mov r13,QWORD [rdi+8]
;; ?; 3'(= a49◂ [ ] ) ⊢ 4(<5)◂1'(= a2◂ [ a48◂ [ ]] )
	mov rdi,r9
	cmp BYTE [rdi+6],4
	jnz LB_5561
	jmp LB_5562
LB_5561:
	jmp LB_5558
LB_5562:
	mov QWORD [GBG_VCT+8*1],rdi
	mov r14,QWORD [rdi+8]
	mov rdi,QWORD [GBG_VCT+8*1]
	FREE_LN rdi
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_LN rdi
;; rsp=0 , %2836~1'(= a2◂ [ a48◂ [ ]] ) %2835~0'(= a2◂ [ a48◂ [ ]] ) 
; #323 { 0'(= a2◂ [ a48◂ [ ]] ) 1'(= a2◂ [ a48◂ [ ]] ) } ⊢ { 0'(= a2◂ [ a48◂ [ ]] ) 1'(= a2◂ [ a48◂ [ ]] ) 2'(= a15◂ [ ] ) }
; .mov_ptn2 { 0'(= a2◂ [ a48◂ [ ]] ) 1'(= a2◂ [ a48◂ [ ]] ) } ⊢ { 0'(= a2◂ [ a48◂ [ ]] ) 1'(= a2◂ [ a48◂ [ ]] ) }
	call ETR_323
;; rsp=0 , %2839~2'(= a15◂ [ ] ) %2838~1'(= a2◂ [ a48◂ [ ]] ) %2837~0'(= a2◂ [ a48◂ [ ]] ) 
; #301 0'(= a2◂ [ a48◂ [ ]] ) ⊢ 4(<5)◂0'(= a2◂ [ a48◂ [ ]] )
;; rsp=0 , %2840~4(<5)◂0'(= a2◂ [ a48◂ [ ]] ) %2839~2'(= a15◂ [ ] ) %2838~1'(= a2◂ [ a48◂ [ ]] ) 
; #301 1'(= a2◂ [ a48◂ [ ]] ) ⊢ 4(<5)◂1'(= a2◂ [ a48◂ [ ]] )
;; rsp=0 , %2841~4(<5)◂1'(= a2◂ [ a48◂ [ ]] ) %2840~4(<5)◂0'(= a2◂ [ a48◂ [ ]] ) %2839~2'(= a15◂ [ ] ) 
; #309 4(<5)◂0'(= a2◂ [ a48◂ [ ]] ) ⊢ 0(<4)◂4(<5)◂0'(= a2◂ [ a48◂ [ ]] )
;; rsp=0 , %2842~0(<4)◂4(<5)◂0'(= a2◂ [ a48◂ [ ]] ) %2841~4(<5)◂1'(= a2◂ [ a48◂ [ ]] ) %2839~2'(= a15◂ [ ] ) 
; #309 4(<5)◂1'(= a2◂ [ a48◂ [ ]] ) ⊢ 0(<4)◂4(<5)◂1'(= a2◂ [ a48◂ [ ]] )
;; rsp=0 , %2843~0(<4)◂4(<5)◂1'(= a2◂ [ a48◂ [ ]] ) %2842~0(<4)◂4(<5)◂0'(= a2◂ [ a48◂ [ ]] ) %2839~2'(= a15◂ [ ] ) 
; ∎ { 0(<4)◂4(<5)◂0'(= a2◂ [ a48◂ [ ]] ) 0(<4)◂4(<5)◂1'(= a2◂ [ a48◂ [ ]] ) 2'(= a15◂ [ ] ) }
; .mov_ptn2 { 0(<4)◂4(<5)◂0'(= a2◂ [ a48◂ [ ]] ) 0(<4)◂4(<5)◂1'(= a2◂ [ a48◂ [ ]] ) 2'(= a15◂ [ ] ) } ⊢ { 0'(= a48◂ [ ] ) 1'(= a48◂ [ ] ) 2'(= a15◂ [ ] ) }
	mov r9,r14
; .mov_ptn 0(<4)◂4(<5)◂3'(= a2◂ [ a48◂ [ ]] ) ⊢ 1'(= a48◂ [ ] )
	mov rax,r9
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],4
	mov QWORD [rax+8],rdi
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r14,rax
	mov r10,r13
; .mov_ptn 0(<4)◂4(<5)◂4'(= a2◂ [ a48◂ [ ]] ) ⊢ 0'(= a48◂ [ ] )
	mov rax,r10
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],4
	mov QWORD [rax+8],rdi
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r13,rax
	ret
LB_5558:
;; ?; 2'(= a49◂ [ ] ) ⊢ 1(<5)◂0'(= a48◂ [ ] )
	mov rdi,r8
	cmp BYTE [rdi+6],1
	jnz LB_5564
	jmp LB_5565
LB_5564:
	jmp LB_5563
LB_5565:
	mov QWORD [GBG_VCT+8*0],rdi
	mov r13,QWORD [rdi+8]
;; ?; 3'(= a49◂ [ ] ) ⊢ 1(<5)◂1'(= a48◂ [ ] )
	mov rdi,r9
	cmp BYTE [rdi+6],1
	jnz LB_5566
	jmp LB_5567
LB_5566:
	jmp LB_5563
LB_5567:
	mov QWORD [GBG_VCT+8*1],rdi
	mov r14,QWORD [rdi+8]
	mov rdi,QWORD [GBG_VCT+8*1]
	FREE_LN rdi
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_LN rdi
;; rsp=0 , %2845~1'(= a48◂ [ ] ) %2844~0'(= a48◂ [ ] ) 
; #322 { 0'(= a48◂ [ ] ) 1'(= a48◂ [ ] ) } ⊢ { 0'(= a48◂ [ ] ) 1'(= a48◂ [ ] ) 2'(= a15◂ [ ] ) }
; .mov_ptn2 { 0'(= a48◂ [ ] ) 1'(= a48◂ [ ] ) } ⊢ { 0'(= a48◂ [ ] ) 1'(= a48◂ [ ] ) }
	call ETR_322
;; rsp=0 , %2848~2'(= a15◂ [ ] ) %2847~1'(= a48◂ [ ] ) %2846~0'(= a48◂ [ ] ) 
; #304 0'(= a48◂ [ ] ) ⊢ 1(<5)◂0'(= a48◂ [ ] )
;; rsp=0 , %2849~1(<5)◂0'(= a48◂ [ ] ) %2848~2'(= a15◂ [ ] ) %2847~1'(= a48◂ [ ] ) 
; #304 1'(= a48◂ [ ] ) ⊢ 1(<5)◂1'(= a48◂ [ ] )
;; rsp=0 , %2850~1(<5)◂1'(= a48◂ [ ] ) %2849~1(<5)◂0'(= a48◂ [ ] ) %2848~2'(= a15◂ [ ] ) 
; #309 1(<5)◂0'(= a48◂ [ ] ) ⊢ 0(<4)◂1(<5)◂0'(= a48◂ [ ] )
;; rsp=0 , %2851~0(<4)◂1(<5)◂0'(= a48◂ [ ] ) %2850~1(<5)◂1'(= a48◂ [ ] ) %2848~2'(= a15◂ [ ] ) 
; #309 1(<5)◂1'(= a48◂ [ ] ) ⊢ 0(<4)◂1(<5)◂1'(= a48◂ [ ] )
;; rsp=0 , %2852~0(<4)◂1(<5)◂1'(= a48◂ [ ] ) %2851~0(<4)◂1(<5)◂0'(= a48◂ [ ] ) %2848~2'(= a15◂ [ ] ) 
; ∎ { 0(<4)◂1(<5)◂0'(= a48◂ [ ] ) 0(<4)◂1(<5)◂1'(= a48◂ [ ] ) 2'(= a15◂ [ ] ) }
; .mov_ptn2 { 0(<4)◂1(<5)◂0'(= a48◂ [ ] ) 0(<4)◂1(<5)◂1'(= a48◂ [ ] ) 2'(= a15◂ [ ] ) } ⊢ { 0'(= a48◂ [ ] ) 1'(= a48◂ [ ] ) 2'(= a15◂ [ ] ) }
	mov r9,r14
; .mov_ptn 0(<4)◂1(<5)◂3'(= a48◂ [ ] ) ⊢ 1'(= a48◂ [ ] )
	mov rax,r9
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],1
	mov QWORD [rax+8],rdi
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r14,rax
	mov r10,r13
; .mov_ptn 0(<4)◂1(<5)◂4'(= a48◂ [ ] ) ⊢ 0'(= a48◂ [ ] )
	mov rax,r10
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],1
	mov QWORD [rax+8],rdi
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r13,rax
	ret
LB_5563:
;; ?; 2'(= a49◂ [ ] ) ⊢ 2(<5)◂0'(= a48◂ [ ] )
	mov rdi,r8
	cmp BYTE [rdi+6],2
	jnz LB_5569
	jmp LB_5570
LB_5569:
	jmp LB_5568
LB_5570:
	mov QWORD [GBG_VCT+8*0],rdi
	mov r13,QWORD [rdi+8]
;; ?; 3'(= a49◂ [ ] ) ⊢ 2(<5)◂1'(= a48◂ [ ] )
	mov rdi,r9
	cmp BYTE [rdi+6],2
	jnz LB_5571
	jmp LB_5572
LB_5571:
	jmp LB_5568
LB_5572:
	mov QWORD [GBG_VCT+8*1],rdi
	mov r14,QWORD [rdi+8]
	mov rdi,QWORD [GBG_VCT+8*1]
	FREE_LN rdi
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_LN rdi
;; rsp=0 , %2854~1'(= a48◂ [ ] ) %2853~0'(= a48◂ [ ] ) 
; #322 { 0'(= a48◂ [ ] ) 1'(= a48◂ [ ] ) } ⊢ { 0'(= a48◂ [ ] ) 1'(= a48◂ [ ] ) 2'(= a15◂ [ ] ) }
; .mov_ptn2 { 0'(= a48◂ [ ] ) 1'(= a48◂ [ ] ) } ⊢ { 0'(= a48◂ [ ] ) 1'(= a48◂ [ ] ) }
	call ETR_322
;; rsp=0 , %2857~2'(= a15◂ [ ] ) %2856~1'(= a48◂ [ ] ) %2855~0'(= a48◂ [ ] ) 
; #303 0'(= a48◂ [ ] ) ⊢ 2(<5)◂0'(= a48◂ [ ] )
;; rsp=0 , %2858~2(<5)◂0'(= a48◂ [ ] ) %2857~2'(= a15◂ [ ] ) %2856~1'(= a48◂ [ ] ) 
; #303 1'(= a48◂ [ ] ) ⊢ 2(<5)◂1'(= a48◂ [ ] )
;; rsp=0 , %2859~2(<5)◂1'(= a48◂ [ ] ) %2858~2(<5)◂0'(= a48◂ [ ] ) %2857~2'(= a15◂ [ ] ) 
; #309 2(<5)◂0'(= a48◂ [ ] ) ⊢ 0(<4)◂2(<5)◂0'(= a48◂ [ ] )
;; rsp=0 , %2860~0(<4)◂2(<5)◂0'(= a48◂ [ ] ) %2859~2(<5)◂1'(= a48◂ [ ] ) %2857~2'(= a15◂ [ ] ) 
; #309 2(<5)◂1'(= a48◂ [ ] ) ⊢ 0(<4)◂2(<5)◂1'(= a48◂ [ ] )
;; rsp=0 , %2861~0(<4)◂2(<5)◂1'(= a48◂ [ ] ) %2860~0(<4)◂2(<5)◂0'(= a48◂ [ ] ) %2857~2'(= a15◂ [ ] ) 
; ∎ { 0(<4)◂2(<5)◂0'(= a48◂ [ ] ) 0(<4)◂2(<5)◂1'(= a48◂ [ ] ) 2'(= a15◂ [ ] ) }
; .mov_ptn2 { 0(<4)◂2(<5)◂0'(= a48◂ [ ] ) 0(<4)◂2(<5)◂1'(= a48◂ [ ] ) 2'(= a15◂ [ ] ) } ⊢ { 0'(= a48◂ [ ] ) 1'(= a48◂ [ ] ) 2'(= a15◂ [ ] ) }
	mov r9,r14
; .mov_ptn 0(<4)◂2(<5)◂3'(= a48◂ [ ] ) ⊢ 1'(= a48◂ [ ] )
	mov rax,r9
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],2
	mov QWORD [rax+8],rdi
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r14,rax
	mov r10,r13
; .mov_ptn 0(<4)◂2(<5)◂4'(= a48◂ [ ] ) ⊢ 0'(= a48◂ [ ] )
	mov rax,r10
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],2
	mov QWORD [rax+8],rdi
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r13,rax
	ret
LB_5568:
;; ?; 2'(= a49◂ [ ] ) ⊢ 3(<5)◂{ }
	mov rdi,r8
	cmp BYTE [rdi+6],3
	jnz LB_5574
	jmp LB_5575
LB_5574:
	jmp LB_5573
LB_5575:
;; ?; 3'(= a49◂ [ ] ) ⊢ 3(<5)◂{ }
	mov rdi,r9
	cmp BYTE [rdi+6],3
	jnz LB_5576
	jmp LB_5577
LB_5576:
	jmp LB_5573
LB_5577:
;; rsp=0 , 
; #302 { } ⊢ 3(<5)◂{ }
;; rsp=0 , %2862~3(<5)◂{ } 
; #302 { } ⊢ 3(<5)◂{ }
;; rsp=0 , %2863~3(<5)◂{ } %2862~3(<5)◂{ } 
; #309 3(<5)◂{ } ⊢ 0(<4)◂3(<5)◂{ }
;; rsp=0 , %2864~0(<4)◂3(<5)◂{ } %2863~3(<5)◂{ } 
; #309 3(<5)◂{ } ⊢ 0(<4)◂3(<5)◂{ }
;; rsp=0 , %2865~0(<4)◂3(<5)◂{ } %2864~0(<4)◂3(<5)◂{ } 
; #50 { } ⊢ 0(<2)◂{ }
;; rsp=0 , %2866~0(<2)◂{ } %2865~0(<4)◂3(<5)◂{ } %2864~0(<4)◂3(<5)◂{ } 
; ∎ { 0(<4)◂3(<5)◂{ } 0(<4)◂3(<5)◂{ } 0(<2)◂{ } }
; .mov_ptn2 { 0(<4)◂3(<5)◂{ } 0(<4)◂3(<5)◂{ } 0(<2)◂{ } } ⊢ { 0'(= a48◂ [ ] ) 1'(= a48◂ [ ] ) 2'(= a15◂ [ ] ) }
; .mov_ptn 0(<2)◂{ } ⊢ 2'(= a15◂ [ ] )
	mov rax,unt 
	mov rax,unt_0
	mov r8,rax
; .mov_ptn 0(<4)◂3(<5)◂{ } ⊢ 1'(= a48◂ [ ] )
	mov rax,unt 
	mov rax,unt_3
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r14,rax
; .mov_ptn 0(<4)◂3(<5)◂{ } ⊢ 0'(= a48◂ [ ] )
	mov rax,unt 
	mov rax,unt_3
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r13,rax
	ret
LB_5573:
;; rsp=0 , %2829~3'(= a49◂ [ ] ) %2828~2'(= a49◂ [ ] ) 
; #49 { } ⊢ 1(<2)◂{ }
;; rsp=0 , %2867~1(<2)◂{ } %2829~3'(= a49◂ [ ] ) %2828~2'(= a49◂ [ ] ) 
; #309 2'(= a49◂ [ ] ) ⊢ 0(<4)◂2'(= a49◂ [ ] )
;; rsp=0 , %2868~0(<4)◂2'(= a49◂ [ ] ) %2867~1(<2)◂{ } %2829~3'(= a49◂ [ ] ) 
; #309 3'(= a49◂ [ ] ) ⊢ 0(<4)◂3'(= a49◂ [ ] )
;; rsp=0 , %2869~0(<4)◂3'(= a49◂ [ ] ) %2868~0(<4)◂2'(= a49◂ [ ] ) %2867~1(<2)◂{ } 
; ∎ { 0(<4)◂2'(= a49◂ [ ] ) 0(<4)◂3'(= a49◂ [ ] ) 1(<2)◂{ } }
; .mov_ptn2 { 0(<4)◂2'(= a49◂ [ ] ) 0(<4)◂3'(= a49◂ [ ] ) 1(<2)◂{ } } ⊢ { 0'(= a48◂ [ ] ) 1'(= a48◂ [ ] ) 2'(= a15◂ [ ] ) }
	mov r10,r8
; .mov_ptn 1(<2)◂{ } ⊢ 2'(= a15◂ [ ] )
	mov rax,unt 
	mov rax,unt_1
	mov r8,rax
; .mov_ptn 0(<4)◂3'(= a49◂ [ ] ) ⊢ 1'(= a48◂ [ ] )
	mov rax,r9
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r14,rax
; .mov_ptn 0(<4)◂4'(= a49◂ [ ] ) ⊢ 0'(= a48◂ [ ] )
	mov rax,r10
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r13,rax
	ret
LB_5548:
;; ?; 0'(= a48◂ [ ] ) ⊢ 1(<4)◂{ }
	mov rdi,r13
	cmp BYTE [rdi+6],1
	jnz LB_5579
	jmp LB_5580
LB_5579:
	jmp LB_5578
LB_5580:
;; ?; 1'(= a48◂ [ ] ) ⊢ 1(<4)◂{ }
	mov rdi,r14
	cmp BYTE [rdi+6],1
	jnz LB_5581
	jmp LB_5582
LB_5581:
	jmp LB_5578
LB_5582:
;; rsp=0 , 
; #308 { } ⊢ 1(<4)◂{ }
;; rsp=0 , %2870~1(<4)◂{ } 
; #308 { } ⊢ 1(<4)◂{ }
;; rsp=0 , %2871~1(<4)◂{ } %2870~1(<4)◂{ } 
; #50 { } ⊢ 0(<2)◂{ }
;; rsp=0 , %2872~0(<2)◂{ } %2871~1(<4)◂{ } %2870~1(<4)◂{ } 
; ∎ { 1(<4)◂{ } 1(<4)◂{ } 0(<2)◂{ } }
; .mov_ptn2 { 1(<4)◂{ } 1(<4)◂{ } 0(<2)◂{ } } ⊢ { 0'(= a48◂ [ ] ) 1'(= a48◂ [ ] ) 2'(= a15◂ [ ] ) }
; .mov_ptn 0(<2)◂{ } ⊢ 2'(= a15◂ [ ] )
	mov rax,unt 
	mov rax,unt_0
	mov r8,rax
; .mov_ptn 1(<4)◂{ } ⊢ 1'(= a48◂ [ ] )
	mov rax,unt 
	mov rax,unt_1
	mov r14,rax
; .mov_ptn 1(<4)◂{ } ⊢ 0'(= a48◂ [ ] )
	mov rax,unt 
	mov rax,unt_1
	mov r13,rax
	ret
LB_5578:
;; ?; 0'(= a48◂ [ ] ) ⊢ 2(<4)◂2'(= r )
	mov rdi,r13
	cmp BYTE [rdi+6],2
	jnz LB_5584
	jmp LB_5585
LB_5584:
	jmp LB_5583
LB_5585:
	mov QWORD [GBG_VCT+8*0],rdi
	mov r8,QWORD [rdi+8]
;; ?; 1'(= a48◂ [ ] ) ⊢ 2(<4)◂3'(= r )
	mov rdi,r14
	cmp BYTE [rdi+6],2
	jnz LB_5586
	jmp LB_5587
LB_5586:
	jmp LB_5583
LB_5587:
	mov QWORD [GBG_VCT+8*1],rdi
	mov r9,QWORD [rdi+8]
	mov rdi,QWORD [GBG_VCT+8*1]
	FREE_LN rdi
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_LN rdi
;; rsp=0 , %2874~3'(= r ) %2873~2'(= r ) 
	cmp r8,r9
	jnz LB_5590
	jmp LB_5589
LB_5590:
	jmp LB_5588
LB_5589:
;; rsp=0 , %2874~3'(= r ) %2873~2'(= r ) 
; #307 2'(= r ) ⊢ 2(<4)◂2'(= r )
;; rsp=0 , %2875~2(<4)◂2'(= r ) %2874~3'(= r ) 
; #307 3'(= r ) ⊢ 2(<4)◂3'(= r )
;; rsp=0 , %2876~2(<4)◂3'(= r ) %2875~2(<4)◂2'(= r ) 
; #50 { } ⊢ 0(<2)◂{ }
;; rsp=0 , %2877~0(<2)◂{ } %2876~2(<4)◂3'(= r ) %2875~2(<4)◂2'(= r ) 
; ∎ { 2(<4)◂2'(= r ) 2(<4)◂3'(= r ) 0(<2)◂{ } }
; .mov_ptn2 { 2(<4)◂2'(= r ) 2(<4)◂3'(= r ) 0(<2)◂{ } } ⊢ { 0'(= a48◂ [ ] ) 1'(= a48◂ [ ] ) 2'(= a15◂ [ ] ) }
	mov r10,r8
; .mov_ptn 0(<2)◂{ } ⊢ 2'(= a15◂ [ ] )
	mov rax,unt 
	mov rax,unt_0
	mov r8,rax
; .mov_ptn 2(<4)◂3'(= r ) ⊢ 1'(= a48◂ [ ] )
	mov rax,r9
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],2
	mov QWORD [rax+8],rdi
	mov r14,rax
; .mov_ptn 2(<4)◂4'(= r ) ⊢ 0'(= a48◂ [ ] )
	mov rax,r10
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],2
	mov QWORD [rax+8],rdi
	mov r13,rax
	ret
LB_5588:
;; rsp=0 , %2874~3'(= r ) %2873~2'(= r ) 
; #307 2'(= r ) ⊢ 2(<4)◂2'(= r )
;; rsp=0 , %2878~2(<4)◂2'(= r ) %2874~3'(= r ) 
; #307 3'(= r ) ⊢ 2(<4)◂3'(= r )
;; rsp=0 , %2879~2(<4)◂3'(= r ) %2878~2(<4)◂2'(= r ) 
; #49 { } ⊢ 1(<2)◂{ }
;; rsp=0 , %2880~1(<2)◂{ } %2879~2(<4)◂3'(= r ) %2878~2(<4)◂2'(= r ) 
; ∎ { 2(<4)◂2'(= r ) 2(<4)◂3'(= r ) 1(<2)◂{ } }
; .mov_ptn2 { 2(<4)◂2'(= r ) 2(<4)◂3'(= r ) 1(<2)◂{ } } ⊢ { 0'(= a48◂ [ ] ) 1'(= a48◂ [ ] ) 2'(= a15◂ [ ] ) }
	mov r10,r8
; .mov_ptn 1(<2)◂{ } ⊢ 2'(= a15◂ [ ] )
	mov rax,unt 
	mov rax,unt_1
	mov r8,rax
; .mov_ptn 2(<4)◂3'(= r ) ⊢ 1'(= a48◂ [ ] )
	mov rax,r9
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],2
	mov QWORD [rax+8],rdi
	mov r14,rax
; .mov_ptn 2(<4)◂4'(= r ) ⊢ 0'(= a48◂ [ ] )
	mov rax,r10
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],2
	mov QWORD [rax+8],rdi
	mov r13,rax
	ret
LB_5583:
;; ?; 0'(= a48◂ [ ] ) ⊢ 3(<4)◂{ 2'(= r ) 3'(= a2◂ [ a48◂ [ ]] ) }
	mov rdi,r13
	cmp BYTE [rdi+6],3
	jnz LB_5592
	jmp LB_5593
LB_5592:
	jmp LB_5591
LB_5593:
	mov r8, QWORD [r13+8]
	mov r9, QWORD [r13+16]
	mov QWORD [GBG_VCT+8*0],r13
;; ?; 1'(= a48◂ [ ] ) ⊢ 3(<4)◂{ 4'(= r ) 5'(= a2◂ [ a48◂ [ ]] ) }
	mov rdi,r14
	cmp BYTE [rdi+6],3
	jnz LB_5594
	jmp LB_5595
LB_5594:
	jmp LB_5591
LB_5595:
	mov r10, QWORD [r14+8]
	mov r11, QWORD [r14+16]
	mov QWORD [GBG_VCT+8*1],r14
	mov rdi,QWORD [GBG_VCT+8*1]
	FREE_RCD 2,rdi
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_RCD 2,rdi
;; rsp=0 , %2884~5'(= a2◂ [ a48◂ [ ]] ) %2883~4'(= r ) %2882~3'(= a2◂ [ a48◂ [ ]] ) %2881~2'(= r ) 
; #323 { 3'(= a2◂ [ a48◂ [ ]] ) 5'(= a2◂ [ a48◂ [ ]] ) } ⊢ { 0'(= a2◂ [ a48◂ [ ]] ) 1'(= a2◂ [ a48◂ [ ]] ) 3'(= a15◂ [ ] ) }
	sub rsp,16
	mov QWORD [rsp+8*0],r8
	mov QWORD [rsp+8*1],r10
; .mov_ptn2 { 3'(= a2◂ [ a48◂ [ ]] ) 5'(= a2◂ [ a48◂ [ ]] ) } ⊢ { 0'(= a2◂ [ a48◂ [ ]] ) 1'(= a2◂ [ a48◂ [ ]] ) }
; .mov_ptn 5'(= a2◂ [ a48◂ [ ]] ) ⊢ 1'(= a2◂ [ a48◂ [ ]] )
	mov rax,r11
	mov r14,rax
; .mov_ptn 3'(= a2◂ [ a48◂ [ ]] ) ⊢ 0'(= a2◂ [ a48◂ [ ]] )
	mov rax,r9
	mov r13,rax
	call ETR_323
	mov r10,QWORD [rsp-8+8*2]
	mov r9,r8
	mov r8,QWORD [rsp-8+8*1]
	add rsp,16
;; rsp=0 , %2887~3'(= a15◂ [ ] ) %2886~1'(= a2◂ [ a48◂ [ ]] ) %2885~0'(= a2◂ [ a48◂ [ ]] ) %2883~4'(= r ) %2881~2'(= r ) 
	cmp r8,r10
	jnz LB_5598
	jmp LB_5597
LB_5598:
	jmp LB_5596
LB_5597:
;; ?; 3'(= a15◂ [ ] ) ⊢ 0(<2)◂{ }
	mov rdi,r9
	cmp BYTE [rdi+6],0
	jnz LB_5599
	jmp LB_5600
LB_5599:
	jmp LB_5596
LB_5600:
;; rsp=0 , %2886~1'(= a2◂ [ a48◂ [ ]] ) %2885~0'(= a2◂ [ a48◂ [ ]] ) %2883~4'(= r ) %2881~2'(= r ) 
; #306 { 2'(= r ) 0'(= a2◂ [ a48◂ [ ]] ) } ⊢ 3(<4)◂{ 2'(= r ) 0'(= a2◂ [ a48◂ [ ]] ) }
;; rsp=0 , %2888~3(<4)◂{ 2'(= r ) 0'(= a2◂ [ a48◂ [ ]] ) } %2886~1'(= a2◂ [ a48◂ [ ]] ) %2883~4'(= r ) 
; #306 { 4'(= r ) 1'(= a2◂ [ a48◂ [ ]] ) } ⊢ 3(<4)◂{ 4'(= r ) 1'(= a2◂ [ a48◂ [ ]] ) }
;; rsp=0 , %2889~3(<4)◂{ 4'(= r ) 1'(= a2◂ [ a48◂ [ ]] ) } %2888~3(<4)◂{ 2'(= r ) 0'(= a2◂ [ a48◂ [ ]] ) } 
; #50 { } ⊢ 0(<2)◂{ }
;; rsp=0 , %2890~0(<2)◂{ } %2889~3(<4)◂{ 4'(= r ) 1'(= a2◂ [ a48◂ [ ]] ) } %2888~3(<4)◂{ 2'(= r ) 0'(= a2◂ [ a48◂ [ ]] ) } 
; ∎ { 3(<4)◂{ 2'(= r ) 0'(= a2◂ [ a48◂ [ ]] ) } 3(<4)◂{ 4'(= r ) 1'(= a2◂ [ a48◂ [ ]] ) } 0(<2)◂{ } }
; .mov_ptn2 { 3(<4)◂{ 2'(= r ) 0'(= a2◂ [ a48◂ [ ]] ) } 3(<4)◂{ 4'(= r ) 1'(= a2◂ [ a48◂ [ ]] ) } 0(<2)◂{ } } ⊢ { 0'(= a48◂ [ ] ) 1'(= a48◂ [ ] ) 2'(= a15◂ [ ] ) }
	mov r9,r8
; .mov_ptn 0(<2)◂{ } ⊢ 2'(= a15◂ [ ] )
	mov rax,unt 
	mov rax,unt_0
	mov r8,rax
	mov r11,r14
; .mov_ptn 3(<4)◂{ 4'(= r ) 5'(= a2◂ [ a48◂ [ ]] ) } ⊢ 1'(= a48◂ [ ] )
	ALC_RCD 2, rax
	mov r9,rax
	mov rax,r10
	mov QWORD [r9+8+8*0],rax
	mov rax,r11
	mov QWORD [r9+8+8*1],rax
	mov rax,r9
	mov BYTE [rax+6],3
	mov r14,rax
	mov rcx,r13
; .mov_ptn 3(<4)◂{ 3'(= r ) 6'(= a2◂ [ a48◂ [ ]] ) } ⊢ 0'(= a48◂ [ ] )
	ALC_RCD 2, rax
	mov r10,rax
	mov rax,r9
	mov QWORD [r10+8+8*0],rax
	mov rax,rcx
	mov QWORD [r10+8+8*1],rax
	mov rax,r10
	mov BYTE [rax+6],3
	mov r13,rax
	ret
LB_5596:
;; rsp=0 , %2887~3'(= a15◂ [ ] ) %2886~1'(= a2◂ [ a48◂ [ ]] ) %2885~0'(= a2◂ [ a48◂ [ ]] ) %2883~4'(= r ) %2881~2'(= r ) 
; #306 { 2'(= r ) 0'(= a2◂ [ a48◂ [ ]] ) } ⊢ 3(<4)◂{ 2'(= r ) 0'(= a2◂ [ a48◂ [ ]] ) }
;; rsp=0 , %2891~3(<4)◂{ 2'(= r ) 0'(= a2◂ [ a48◂ [ ]] ) } %2887~3'(= a15◂ [ ] ) %2886~1'(= a2◂ [ a48◂ [ ]] ) %2883~4'(= r ) 
; #306 { 4'(= r ) 1'(= a2◂ [ a48◂ [ ]] ) } ⊢ 3(<4)◂{ 4'(= r ) 1'(= a2◂ [ a48◂ [ ]] ) }
;; rsp=0 , %2892~3(<4)◂{ 4'(= r ) 1'(= a2◂ [ a48◂ [ ]] ) } %2891~3(<4)◂{ 2'(= r ) 0'(= a2◂ [ a48◂ [ ]] ) } %2887~3'(= a15◂ [ ] ) 
; #49 { } ⊢ 1(<2)◂{ }
;; rsp=0 , %2893~1(<2)◂{ } %2892~3(<4)◂{ 4'(= r ) 1'(= a2◂ [ a48◂ [ ]] ) } %2891~3(<4)◂{ 2'(= r ) 0'(= a2◂ [ a48◂ [ ]] ) } %2887~3'(= a15◂ [ ] ) 
; ∎ { 3(<4)◂{ 2'(= r ) 0'(= a2◂ [ a48◂ [ ]] ) } 3(<4)◂{ 4'(= r ) 1'(= a2◂ [ a48◂ [ ]] ) } 1(<2)◂{ } }
; .dlt.ptn 3'(= a15◂ [ ] )
	mov rdi,r9
	C_PUSH_REGS
	mov r8,rdi
	call LB_23
	C_POP_REGS
; .mov_ptn2 { 3(<4)◂{ 2'(= r ) 0'(= a2◂ [ a48◂ [ ]] ) } 3(<4)◂{ 4'(= r ) 1'(= a2◂ [ a48◂ [ ]] ) } 1(<2)◂{ } } ⊢ { 0'(= a48◂ [ ] ) 1'(= a48◂ [ ] ) 2'(= a15◂ [ ] ) }
	mov r9,r8
; .mov_ptn 1(<2)◂{ } ⊢ 2'(= a15◂ [ ] )
	mov rax,unt 
	mov rax,unt_1
	mov r8,rax
	mov r11,r14
; .mov_ptn 3(<4)◂{ 4'(= r ) 5'(= a2◂ [ a48◂ [ ]] ) } ⊢ 1'(= a48◂ [ ] )
	ALC_RCD 2, rax
	mov r9,rax
	mov rax,r10
	mov QWORD [r9+8+8*0],rax
	mov rax,r11
	mov QWORD [r9+8+8*1],rax
	mov rax,r9
	mov BYTE [rax+6],3
	mov r14,rax
	mov rcx,r13
; .mov_ptn 3(<4)◂{ 3'(= r ) 6'(= a2◂ [ a48◂ [ ]] ) } ⊢ 0'(= a48◂ [ ] )
	ALC_RCD 2, rax
	mov r10,rax
	mov rax,r9
	mov QWORD [r10+8+8*0],rax
	mov rax,rcx
	mov QWORD [r10+8+8*1],rax
	mov rax,r10
	mov BYTE [rax+6],3
	mov r13,rax
	ret
LB_5591:
;; rsp=0 , %2827~1'(= a48◂ [ ] ) %2826~0'(= a48◂ [ ] ) 
; #49 { } ⊢ 1(<2)◂{ }
;; rsp=0 , %2894~1(<2)◂{ } %2827~1'(= a48◂ [ ] ) %2826~0'(= a48◂ [ ] ) 
; ∎ { 0'(= a48◂ [ ] ) 1'(= a48◂ [ ] ) 1(<2)◂{ } }
; .mov_ptn2 { 0'(= a48◂ [ ] ) 1'(= a48◂ [ ] ) 1(<2)◂{ } } ⊢ { 0'(= a48◂ [ ] ) 1'(= a48◂ [ ] ) 2'(= a15◂ [ ] ) }
; .mov_ptn 1(<2)◂{ } ⊢ 2'(= a15◂ [ ] )
	mov rax,unt 
	mov rax,unt_1
	mov r8,rax
	ret
ETR_323: ;; eq_hp_lst { 0'(= a2◂ [ a48◂ [ ]] ) 1'(= a2◂ [ a48◂ [ ]] ) } ⊢ { 0'(= a2◂ [ a48◂ [ ]] ) 1'(= a2◂ [ a48◂ [ ]] ) 2'(= a15◂ [ ] ) } : ({ _lst◂_t48 _lst◂_t48 }→{ _lst◂_t48 _lst◂_t48 _t15 })
;; rsp=0 , %2896~1'(= a2◂ [ a48◂ [ ]] ) %2895~0'(= a2◂ [ a48◂ [ ]] ) 
;; ?; 0'(= a2◂ [ a48◂ [ ]] ) ⊢ 0(<2)◂{ 2'(= a48◂ [ ] ) 3'(= a2◂ [ a48◂ [ ]] ) }
	mov rdi,r13
	cmp BYTE [rdi+6],0
	jnz LB_5602
	jmp LB_5603
LB_5602:
	jmp LB_5601
LB_5603:
	mov r8, QWORD [r13+8]
	mov r9, QWORD [r13+16]
	mov QWORD [GBG_VCT+8*0],r13
;; ?; 1'(= a2◂ [ a48◂ [ ]] ) ⊢ 0(<2)◂{ 4'(= a48◂ [ ] ) 5'(= a2◂ [ a48◂ [ ]] ) }
	mov rdi,r14
	cmp BYTE [rdi+6],0
	jnz LB_5604
	jmp LB_5605
LB_5604:
	jmp LB_5601
LB_5605:
	mov r10, QWORD [r14+8]
	mov r11, QWORD [r14+16]
	mov QWORD [GBG_VCT+8*1],r14
	mov rdi,QWORD [GBG_VCT+8*1]
	FREE_RCD 2,rdi
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_RCD 2,rdi
;; rsp=0 , %2900~5'(= a2◂ [ a48◂ [ ]] ) %2899~4'(= a48◂ [ ] ) %2898~3'(= a2◂ [ a48◂ [ ]] ) %2897~2'(= a48◂ [ ] ) 
; #322 { 2'(= a48◂ [ ] ) 4'(= a48◂ [ ] ) } ⊢ { 0'(= a48◂ [ ] ) 1'(= a48◂ [ ] ) 2'(= a15◂ [ ] ) }
	sub rsp,16
	mov QWORD [rsp+8*0],r9
	mov QWORD [rsp+8*1],r11
; .mov_ptn2 { 2'(= a48◂ [ ] ) 4'(= a48◂ [ ] ) } ⊢ { 0'(= a48◂ [ ] ) 1'(= a48◂ [ ] ) }
; .mov_ptn 4'(= a48◂ [ ] ) ⊢ 1'(= a48◂ [ ] )
	mov rax,r10
	mov r14,rax
; .mov_ptn 2'(= a48◂ [ ] ) ⊢ 0'(= a48◂ [ ] )
	mov rax,r8
	mov r13,rax
	call ETR_322
	mov r11,QWORD [rsp-8+8*2]
	mov r9,QWORD [rsp-8+8*1]
	add rsp,16
;; rsp=0 , %2903~2'(= a15◂ [ ] ) %2902~1'(= a48◂ [ ] ) %2901~0'(= a48◂ [ ] ) %2900~5'(= a2◂ [ a48◂ [ ]] ) %2898~3'(= a2◂ [ a48◂ [ ]] ) 
; #323 { 3'(= a2◂ [ a48◂ [ ]] ) 5'(= a2◂ [ a48◂ [ ]] ) } ⊢ { 5'(= a2◂ [ a48◂ [ ]] ) 4'(= a2◂ [ a48◂ [ ]] ) 3'(= a15◂ [ ] ) }
	sub rsp,24
	mov QWORD [rsp+8*0],r13
	mov QWORD [rsp+8*1],r14
	mov QWORD [rsp+8*2],r8
; .mov_ptn2 { 3'(= a2◂ [ a48◂ [ ]] ) 5'(= a2◂ [ a48◂ [ ]] ) } ⊢ { 0'(= a2◂ [ a48◂ [ ]] ) 1'(= a2◂ [ a48◂ [ ]] ) }
; .mov_ptn 5'(= a2◂ [ a48◂ [ ]] ) ⊢ 1'(= a2◂ [ a48◂ [ ]] )
	mov rax,r11
	mov r14,rax
; .mov_ptn 3'(= a2◂ [ a48◂ [ ]] ) ⊢ 0'(= a2◂ [ a48◂ [ ]] )
	mov rax,r9
	mov r13,rax
	call ETR_323
	mov r9,r8
	mov r8,QWORD [rsp-8+8*3]
	mov r10,r14
	mov r14,QWORD [rsp-8+8*2]
	mov r11,r13
	mov r13,QWORD [rsp-8+8*1]
	add rsp,24
;; rsp=0 , %2906~3'(= a15◂ [ ] ) %2905~4'(= a2◂ [ a48◂ [ ]] ) %2904~5'(= a2◂ [ a48◂ [ ]] ) %2903~2'(= a15◂ [ ] ) %2902~1'(= a48◂ [ ] ) %2901~0'(= a48◂ [ ] ) 
; #51 { 2'(= a15◂ [ ] ) 3'(= a15◂ [ ] ) } ⊢ 2'(= a15◂ [ ] )
	sub rsp,32
	mov QWORD [rsp+8*0],r13
	mov QWORD [rsp+8*1],r14
	mov QWORD [rsp+8*2],r10
	mov QWORD [rsp+8*3],r11
; .mov_ptn2 { 2'(= a15◂ [ ] ) 3'(= a15◂ [ ] ) } ⊢ { 0'(= a15◂ [ ] ) 1'(= a15◂ [ ] ) }
; .mov_ptn 3'(= a15◂ [ ] ) ⊢ 1'(= a15◂ [ ] )
	mov rax,r9
	mov r14,rax
; .mov_ptn 2'(= a15◂ [ ] ) ⊢ 0'(= a15◂ [ ] )
	mov rax,r8
	mov r13,rax
	call ETR_51
	mov r11,QWORD [rsp-8+8*4]
	mov r10,QWORD [rsp-8+8*3]
	mov r14,QWORD [rsp-8+8*2]
	mov r8,r13
	mov r13,QWORD [rsp-8+8*1]
	add rsp,32
;; rsp=0 , %2907~2'(= a15◂ [ ] ) %2905~4'(= a2◂ [ a48◂ [ ]] ) %2904~5'(= a2◂ [ a48◂ [ ]] ) %2902~1'(= a48◂ [ ] ) %2901~0'(= a48◂ [ ] ) 
; #23 { 0'(= a48◂ [ ] ) 5'(= a2◂ [ a48◂ [ ]] ) } ⊢ 0(<2)◂{ 0'(= a48◂ [ ] ) 5'(= a2◂ [ a48◂ [ ]] ) }
;; rsp=0 , %2908~0(<2)◂{ 0'(= a48◂ [ ] ) 5'(= a2◂ [ a48◂ [ ]] ) } %2907~2'(= a15◂ [ ] ) %2905~4'(= a2◂ [ a48◂ [ ]] ) %2902~1'(= a48◂ [ ] ) 
; #23 { 1'(= a48◂ [ ] ) 4'(= a2◂ [ a48◂ [ ]] ) } ⊢ 0(<2)◂{ 1'(= a48◂ [ ] ) 4'(= a2◂ [ a48◂ [ ]] ) }
;; rsp=0 , %2909~0(<2)◂{ 1'(= a48◂ [ ] ) 4'(= a2◂ [ a48◂ [ ]] ) } %2908~0(<2)◂{ 0'(= a48◂ [ ] ) 5'(= a2◂ [ a48◂ [ ]] ) } %2907~2'(= a15◂ [ ] ) 
; ∎ { 0(<2)◂{ 0'(= a48◂ [ ] ) 5'(= a2◂ [ a48◂ [ ]] ) } 0(<2)◂{ 1'(= a48◂ [ ] ) 4'(= a2◂ [ a48◂ [ ]] ) } 2'(= a15◂ [ ] ) }
; .mov_ptn2 { 0(<2)◂{ 0'(= a48◂ [ ] ) 5'(= a2◂ [ a48◂ [ ]] ) } 0(<2)◂{ 1'(= a48◂ [ ] ) 4'(= a2◂ [ a48◂ [ ]] ) } 2'(= a15◂ [ ] ) } ⊢ { 0'(= a2◂ [ a48◂ [ ]] ) 1'(= a2◂ [ a48◂ [ ]] ) 2'(= a15◂ [ ] ) }
	mov r9,r14
; .mov_ptn 0(<2)◂{ 3'(= a48◂ [ ] ) 4'(= a2◂ [ a48◂ [ ]] ) } ⊢ 1'(= a2◂ [ a48◂ [ ]] )
	ALC_RCD 2, rax
	mov rcx,rax
	mov rax,r9
	mov QWORD [rcx+8+8*0],rax
	mov rax,r10
	mov QWORD [rcx+8+8*1],rax
	mov rax,rcx
	mov BYTE [rax+6],0
	mov r14,rax
	mov rcx,r13
; .mov_ptn 0(<2)◂{ 6'(= a48◂ [ ] ) 5'(= a2◂ [ a48◂ [ ]] ) } ⊢ 0'(= a2◂ [ a48◂ [ ]] )
	ALC_RCD 2, rax
	mov r9,rax
	mov rax,rcx
	mov QWORD [r9+8+8*0],rax
	mov rax,r11
	mov QWORD [r9+8+8*1],rax
	mov rax,r9
	mov BYTE [rax+6],0
	mov r13,rax
	ret
LB_5601:
;; ?; 0'(= a2◂ [ a48◂ [ ]] ) ⊢ 1(<2)◂{ }
	mov rdi,r13
	cmp BYTE [rdi+6],1
	jnz LB_5607
	jmp LB_5608
LB_5607:
	jmp LB_5606
LB_5608:
;; ?; 1'(= a2◂ [ a48◂ [ ]] ) ⊢ 1(<2)◂{ }
	mov rdi,r14
	cmp BYTE [rdi+6],1
	jnz LB_5609
	jmp LB_5610
LB_5609:
	jmp LB_5606
LB_5610:
;; rsp=0 , 
; #50 { } ⊢ 0(<2)◂{ }
;; rsp=0 , %2910~0(<2)◂{ } 
; #22 { } ⊢ 1(<2)◂{ }
;; rsp=0 , %2911~1(<2)◂{ } %2910~0(<2)◂{ } 
; #22 { } ⊢ 1(<2)◂{ }
;; rsp=0 , %2912~1(<2)◂{ } %2911~1(<2)◂{ } %2910~0(<2)◂{ } 
; ∎ { 1(<2)◂{ } 1(<2)◂{ } 0(<2)◂{ } }
; .mov_ptn2 { 1(<2)◂{ } 1(<2)◂{ } 0(<2)◂{ } } ⊢ { 0'(= a2◂ [ a48◂ [ ]] ) 1'(= a2◂ [ a48◂ [ ]] ) 2'(= a15◂ [ ] ) }
; .mov_ptn 0(<2)◂{ } ⊢ 2'(= a15◂ [ ] )
	mov rax,unt 
	mov rax,unt_0
	mov r8,rax
; .mov_ptn 1(<2)◂{ } ⊢ 1'(= a2◂ [ a48◂ [ ]] )
	mov rax,unt 
	mov rax,unt_1
	mov r14,rax
; .mov_ptn 1(<2)◂{ } ⊢ 0'(= a2◂ [ a48◂ [ ]] )
	mov rax,unt 
	mov rax,unt_1
	mov r13,rax
	ret
LB_5606:
;; rsp=0 , %2896~1'(= a2◂ [ a48◂ [ ]] ) %2895~0'(= a2◂ [ a48◂ [ ]] ) 
; #49 { } ⊢ 1(<2)◂{ }
;; rsp=0 , %2913~1(<2)◂{ } %2896~1'(= a2◂ [ a48◂ [ ]] ) %2895~0'(= a2◂ [ a48◂ [ ]] ) 
; ∎ { 0'(= a2◂ [ a48◂ [ ]] ) 1'(= a2◂ [ a48◂ [ ]] ) 1(<2)◂{ } }
; .mov_ptn2 { 0'(= a2◂ [ a48◂ [ ]] ) 1'(= a2◂ [ a48◂ [ ]] ) 1(<2)◂{ } } ⊢ { 0'(= a2◂ [ a48◂ [ ]] ) 1'(= a2◂ [ a48◂ [ ]] ) 2'(= a15◂ [ ] ) }
; .mov_ptn 1(<2)◂{ } ⊢ 2'(= a15◂ [ ] )
	mov rax,unt 
	mov rax,unt_1
	mov r8,rax
	ret
ETR_324: ;; cf 0'(= a48◂ [ ] ) ⊢ { 0'(= a48◂ [ ] ) 1'(= a51◂ [ ] ) } : (_t48→{ _t48 _t51 })
;; rsp=0 , %2914~0'(= a48◂ [ ] ) 
;; ?; 0'(= a48◂ [ ] ) ⊢ 0(<4)◂1'(= a49◂ [ ] )
	mov rdi,r13
	cmp BYTE [rdi+6],0
	jnz LB_5612
	jmp LB_5613
LB_5612:
	jmp LB_5611
LB_5613:
	mov QWORD [GBG_VCT+8*0],rdi
	mov r14,QWORD [rdi+8]
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_LN rdi
;; rsp=0 , %2915~1'(= a49◂ [ ] ) 
; #297 { } ⊢ 1(<3)◂{ }
;; rsp=0 , %2916~1(<3)◂{ } %2915~1'(= a49◂ [ ] ) 
; #309 1'(= a49◂ [ ] ) ⊢ 0(<4)◂1'(= a49◂ [ ] )
;; rsp=0 , %2917~0(<4)◂1'(= a49◂ [ ] ) %2916~1(<3)◂{ } 
; ∎ { 0(<4)◂1'(= a49◂ [ ] ) 1(<3)◂{ } }
; .mov_ptn2 { 0(<4)◂1'(= a49◂ [ ] ) 1(<3)◂{ } } ⊢ { 0'(= a48◂ [ ] ) 1'(= a51◂ [ ] ) }
; .mov_ptn 0(<4)◂1'(= a49◂ [ ] ) ⊢ 0'(= a48◂ [ ] )
	mov rax,r14
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r13,rax
; .mov_ptn 1(<3)◂{ } ⊢ 1'(= a51◂ [ ] )
	mov rax,unt 
	mov rax,unt_1
	mov r14,rax
	ret
LB_5611:
;; ?; 0'(= a48◂ [ ] ) ⊢ 1(<4)◂{ }
	mov rdi,r13
	cmp BYTE [rdi+6],1
	jnz LB_5615
	jmp LB_5616
LB_5615:
	jmp LB_5614
LB_5616:
;; rsp=0 , 
; #298 { } ⊢ 0(<3)◂{ }
;; rsp=0 , %2918~0(<3)◂{ } 
; #308 { } ⊢ 1(<4)◂{ }
;; rsp=0 , %2919~1(<4)◂{ } %2918~0(<3)◂{ } 
; ∎ { 1(<4)◂{ } 0(<3)◂{ } }
; .mov_ptn2 { 1(<4)◂{ } 0(<3)◂{ } } ⊢ { 0'(= a48◂ [ ] ) 1'(= a51◂ [ ] ) }
; .mov_ptn 0(<3)◂{ } ⊢ 1'(= a51◂ [ ] )
	mov rax,unt 
	mov rax,unt_0
	mov r14,rax
; .mov_ptn 1(<4)◂{ } ⊢ 0'(= a48◂ [ ] )
	mov rax,unt 
	mov rax,unt_1
	mov r13,rax
	ret
LB_5614:
;; ?; 0'(= a48◂ [ ] ) ⊢ 2(<4)◂1'(= r )
	mov rdi,r13
	cmp BYTE [rdi+6],2
	jnz LB_5618
	jmp LB_5619
LB_5618:
	jmp LB_5617
LB_5619:
	mov QWORD [GBG_VCT+8*0],rdi
	mov r14,QWORD [rdi+8]
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_LN rdi
;; rsp=0 , %2920~1'(= r ) 
; #296 { } ⊢ 2(<3)◂{ }
;; rsp=0 , %2921~2(<3)◂{ } %2920~1'(= r ) 
; #307 1'(= r ) ⊢ 2(<4)◂1'(= r )
;; rsp=0 , %2922~2(<4)◂1'(= r ) %2921~2(<3)◂{ } 
; ∎ { 2(<4)◂1'(= r ) 2(<3)◂{ } }
; .mov_ptn2 { 2(<4)◂1'(= r ) 2(<3)◂{ } } ⊢ { 0'(= a48◂ [ ] ) 1'(= a51◂ [ ] ) }
; .mov_ptn 2(<4)◂1'(= r ) ⊢ 0'(= a48◂ [ ] )
	mov rax,r14
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],2
	mov QWORD [rax+8],rdi
	mov r13,rax
; .mov_ptn 2(<3)◂{ } ⊢ 1'(= a51◂ [ ] )
	mov rax,unt 
	mov rax,unt_2
	mov r14,rax
	ret
LB_5617:
;; rsp=0 , %2914~0'(= a48◂ [ ] ) 
; $ %[ "cf 0" ] ⊢ %[ "cf 0" ]
;; rsp=0 , %2923~%[ "cf 0" ] %2914~0'(= a48◂ [ ] ) 
; #10 %[ "cf 0" ] ⊢ %[ "cf 0" ]
	mov rdi,fmt_emt
	call emt_stg
	mov rdi,LB_5620
	call emt_stg 
	mov rdi,fmt_nl
	call emt_stg
	jmp LB_5621
LB_5621:
;; rsp=0 , %2924~%[ "cf 0" ] %2914~0'(= a48◂ [ ] ) 
	mov rdi,LB_5622
	call emt_stg 
	jmp err
ETR_325: ;; f 0'(= a17◂ [ a46◂ [ r]] ) ⊢ 0'(= {| l |} ) : (_t17◂_t46◂_r64→_s8)
;; rsp=0 , %2925~0'(= a17◂ [ a46◂ [ r]] ) 
;; ? 0'(= a17◂ [ a46◂ [ r]] ) ⊢ 0(<2)◂1'(= a2◂ [ a17◂ [ a46◂ [ r]]] )
	mov rdi,r13
	cmp BYTE [rdi+6],0
	jnz LB_5624
	jmp LB_5625
LB_5624:
	jmp LB_5623
LB_5625:
	mov QWORD [GBG_VCT+8*0],rdi
	mov r14,QWORD [rdi+8]
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_LN rdi
;; rsp=0 , %2927~1'(= a2◂ [ a17◂ [ a46◂ [ r]]] ) 
; #328 1'(= a2◂ [ a17◂ [ a46◂ [ r]]] ) ⊢ 0'(= {| l |} )
; .mov_ptn2 1'(= a2◂ [ a17◂ [ a46◂ [ r]]] ) ⊢ 0'(= a2◂ [ a17◂ [ a46◂ [ r]]] )
; .mov_ptn 1'(= a2◂ [ a17◂ [ a46◂ [ r]]] ) ⊢ 0'(= a2◂ [ a17◂ [ a46◂ [ r]]] )
	mov rax,r14
	mov r13,rax
	call ETR_328
;; rsp=0 , %2928~0'(= {| l |} ) 
; » _^ .. ⊢ ..
; .. //
	mov rdi,0
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[r13]
	add rdi,rax 
	push rax
	add rdi,3
	push rdi 
	call mlc_s8
	pop rdi
	mov r14,rax
	lea rdi,[rax+7+rdi]
	std 
	mov QWORD [tmp],rcx 
	lea rsi,[LB_5626+1-1]
	mov rcx,1
	rep movsb
	pop rcx
	lea rsi,[r13+7+rcx]
	rep movsb
	lea rsi,[LB_5627+2-1]
	mov rcx,2
	rep movsb
	mov rcx,QWORD [tmp] 
;; rsp=0 , %2930~1'(= {| l |} ) %2929~0'(= {| l |} ) 
; ∎ 1'(= {| l |} )
; .dlt.ptn 0'(= {| l |} )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	mov rdi,r8
	call free_s8
	C_POP_REGS
; .mov_ptn2 1'(= {| l |} ) ⊢ 0'(= {| l |} )
; .mov_ptn 1'(= {| l |} ) ⊢ 0'(= {| l |} )
	mov rax,r14
	mov r13,rax
	ret
LB_5623:
;; ?. 0'(= a17◂ [ a46◂ [ r]] ) ⊢ 1(<2)◂1'(= a46◂ [ r] )
	mov QWORD [GBG_VCT+8*0],rdi
	mov r14,QWORD [rdi+8]
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_LN rdi
;; rsp=0 , %2926~1'(= a46◂ [ r] ) 
;; ? 1'(= a46◂ [ r] ) ⊢ 0(<5)◂{ 0'(= r ) 2'(= a48◂ [ ] ) }
	mov rdi,r14
	cmp BYTE [rdi+6],0
	jnz LB_5629
	jmp LB_5630
LB_5629:
	jmp LB_5628
LB_5630:
	mov r13, QWORD [r14+8]
	mov r8, QWORD [r14+16]
	mov QWORD [GBG_VCT+8*0],r14
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_RCD 2,rdi
;; rsp=0 , %2939~2'(= a48◂ [ ] ) %2938~0'(= r ) 
; #326 2'(= a48◂ [ ] ) ⊢ 1'(= {| l |} )
	sub rsp,8
	mov QWORD [rsp+8*0],r13
; .mov_ptn2 2'(= a48◂ [ ] ) ⊢ 0'(= a48◂ [ ] )
; .mov_ptn 2'(= a48◂ [ ] ) ⊢ 0'(= a48◂ [ ] )
	mov rax,r8
	mov r13,rax
	call ETR_326
	mov r14,r13
	mov r13,QWORD [rsp-8+8*1]
	add rsp,8
;; rsp=0 , %2940~1'(= {| l |} ) %2938~0'(= r ) 
; » _^ .. ⊢ ..
; .. //
	mov rdi,0
	sub rsp,128
	push rdi 
	lea rdi,[rsp+8]
	mov rdx,r13
	mov rsi,fmt_d
 xor rax,rax
	C_CALL_SF sprintf
	pop rdi
	add rdi,rax 
	push rax 
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[r14]
	add rdi,rax 
	push rax
	add rdi,6
	push rdi 
	call mlc_s8
	pop rdi
	mov r8,rax
	lea rdi,[rax+7+rdi]
	std 
	mov QWORD [tmp],rcx 
	lea rsi,[LB_5631+2-1]
	mov rcx,2
	rep movsb
	pop rcx
	lea rsi,[r14+7+rcx]
	rep movsb
	lea rsi,[LB_5632+4-1]
	mov rcx,4
	rep movsb
	pop rcx
	lea rsi,[rsp+rcx-1]
	rep movsb
	add rsp,128
	mov rcx,QWORD [tmp] 
;; rsp=0 , %2943~2'(= {| l |} ) %2942~1'(= {| l |} ) %2941~0'(= r ) 
; ∎ 2'(= {| l |} )
; .dlt.ptn 1'(= {| l |} )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	mov rdi,r8
	call free_s8
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 2'(= {| l |} ) ⊢ 0'(= {| l |} )
; .mov_ptn 2'(= {| l |} ) ⊢ 0'(= {| l |} )
	mov rax,r8
	mov r13,rax
	ret
LB_5628:
;; ? 1'(= a46◂ [ r] ) ⊢ 1(<5)◂0'(= a19◂ [ ] )
	mov rdi,r14
	cmp BYTE [rdi+6],1
	jnz LB_5634
	jmp LB_5635
LB_5634:
	jmp LB_5633
LB_5635:
	mov QWORD [GBG_VCT+8*0],rdi
	mov r13,QWORD [rdi+8]
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_LN rdi
;; rsp=0 , %2937~0'(= a19◂ [ ] ) 
; #92 0'(= a19◂ [ ] ) ⊢ 0'(= {| l |} )
; .mov_ptn2 0'(= a19◂ [ ] ) ⊢ 0'(= a19◂ [ ] )
	call ETR_92
;; rsp=0 , %2944~0'(= {| l |} ) 
; » _^ .. ⊢ ..
; .. //
	mov rdi,0
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[r13]
	add rdi,rax 
	push rax
	add rdi,5
	push rdi 
	call mlc_s8
	pop rdi
	mov r14,rax
	lea rdi,[rax+7+rdi]
	std 
	mov QWORD [tmp],rcx 
	lea rsi,[LB_5636+2-1]
	mov rcx,2
	rep movsb
	pop rcx
	lea rsi,[r13+7+rcx]
	rep movsb
	lea rsi,[LB_5637+3-1]
	mov rcx,3
	rep movsb
	mov rcx,QWORD [tmp] 
;; rsp=0 , %2946~1'(= {| l |} ) %2945~0'(= {| l |} ) 
; ∎ 1'(= {| l |} )
; .dlt.ptn 0'(= {| l |} )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	mov rdi,r8
	call free_s8
	C_POP_REGS
; .mov_ptn2 1'(= {| l |} ) ⊢ 0'(= {| l |} )
; .mov_ptn 1'(= {| l |} ) ⊢ 0'(= {| l |} )
	mov rax,r14
	mov r13,rax
	ret
LB_5633:
;; ? 1'(= a46◂ [ r] ) ⊢ 2(<5)◂0'(= r )
	mov rdi,r14
	cmp BYTE [rdi+6],2
	jnz LB_5639
	jmp LB_5640
LB_5639:
	jmp LB_5638
LB_5640:
	mov QWORD [GBG_VCT+8*0],rdi
	mov r13,QWORD [rdi+8]
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_LN rdi
;; rsp=0 , %2936~0'(= r ) 
; » _^ .. ⊢ ..
; .. //
	mov rdi,0
	sub rsp,128
	push rdi 
	lea rdi,[rsp+8]
	mov rdx,r13
	mov rsi,fmt_d
 xor rax,rax
	C_CALL_SF sprintf
	pop rdi
	add rdi,rax 
	push rax 
	add rdi,7
	push rdi 
	call mlc_s8
	pop rdi
	mov r14,rax
	lea rdi,[rax+7+rdi]
	std 
	mov QWORD [tmp],rcx 
	lea rsi,[LB_5641+4-1]
	mov rcx,4
	rep movsb
	pop rcx
	lea rsi,[rsp+rcx-1]
	rep movsb
	add rsp,128
	lea rsi,[LB_5642+3-1]
	mov rcx,3
	rep movsb
	mov rcx,QWORD [tmp] 
;; rsp=0 , %2948~1'(= {| l |} ) %2947~0'(= r ) 
; ∎ 1'(= {| l |} )
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 1'(= {| l |} ) ⊢ 0'(= {| l |} )
; .mov_ptn 1'(= {| l |} ) ⊢ 0'(= {| l |} )
	mov rax,r14
	mov r13,rax
	ret
LB_5638:
;; ? 1'(= a46◂ [ r] ) ⊢ 4(<5)◂{ 0'(= r ) 2'(= r ) }
	mov rdi,r14
	cmp BYTE [rdi+6],4
	jnz LB_5644
	jmp LB_5645
LB_5644:
	jmp LB_5643
LB_5645:
	mov r13, QWORD [r14+8]
	mov r8, QWORD [r14+16]
	mov QWORD [GBG_VCT+8*0],r14
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_RCD 2,rdi
;; rsp=0 , %2935~2'(= r ) %2934~0'(= r ) 
; » _^ .. ⊢ ..
; .. //
	mov rdi,0
	sub rsp,128
	push rdi 
	lea rdi,[rsp+8]
	mov rdx,r13
	mov rsi,fmt_d
 xor rax,rax
	C_CALL_SF sprintf
	pop rdi
	add rdi,rax 
	push rax 
	sub rsp,128
	push rdi 
	lea rdi,[rsp+8]
	mov rdx,r8
	mov rsi,fmt_d
 xor rax,rax
	C_CALL_SF sprintf
	pop rdi
	add rdi,rax 
	push rax 
	add rdi,11
	push rdi 
	call mlc_s8
	pop rdi
	mov r14,rax
	lea rdi,[rax+7+rdi]
	std 
	mov QWORD [tmp],rcx 
	lea rsi,[LB_5646+4-1]
	mov rcx,4
	rep movsb
	pop rcx
	lea rsi,[rsp+rcx-1]
	rep movsb
	add rsp,128
	lea rsi,[LB_5647+4-1]
	mov rcx,4
	rep movsb
	pop rcx
	lea rsi,[rsp+rcx-1]
	rep movsb
	add rsp,128
	lea rsi,[LB_5648+3-1]
	mov rcx,3
	rep movsb
	mov rcx,QWORD [tmp] 
;; rsp=0 , %2951~1'(= {| l |} ) %2950~2'(= r ) %2949~0'(= r ) 
; ∎ 1'(= {| l |} )
; .dlt.ptn 2'(= r )
	mov rdi,r8
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 1'(= {| l |} ) ⊢ 0'(= {| l |} )
; .mov_ptn 1'(= {| l |} ) ⊢ 0'(= {| l |} )
	mov rax,r14
	mov r13,rax
	ret
LB_5643:
;; ?. 1'(= a46◂ [ r] ) ⊢ 3(<5)◂{ 0'(= r ) 2'(= r ) 3'(= a17◂ [ a46◂ [ r]] ) }
	mov r13, QWORD [r14+8]
	mov r8, QWORD [r14+16]
	mov r9, QWORD [r14+24]
	mov QWORD [GBG_VCT+8*0],r14
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_RCD 3,rdi
;; rsp=0 , %2933~3'(= a17◂ [ a46◂ [ r]] ) %2932~2'(= r ) %2931~0'(= r ) 
; #325 3'(= a17◂ [ a46◂ [ r]] ) ⊢ 1'(= {| l |} )
	sub rsp,16
	mov QWORD [rsp+8*0],r13
	mov QWORD [rsp+8*1],r8
; .mov_ptn2 3'(= a17◂ [ a46◂ [ r]] ) ⊢ 0'(= a17◂ [ a46◂ [ r]] )
; .mov_ptn 3'(= a17◂ [ a46◂ [ r]] ) ⊢ 0'(= a17◂ [ a46◂ [ r]] )
	mov rax,r9
	mov r13,rax
	call ETR_325
	mov r8,QWORD [rsp-8+8*2]
	mov r14,r13
	mov r13,QWORD [rsp-8+8*1]
	add rsp,16
;; rsp=0 , %2952~1'(= {| l |} ) %2932~2'(= r ) %2931~0'(= r ) 
; » _^ .. ⊢ ..
; .. //
	mov rdi,0
	sub rsp,128
	push rdi 
	lea rdi,[rsp+8]
	mov rdx,r13
	mov rsi,fmt_d
 xor rax,rax
	C_CALL_SF sprintf
	pop rdi
	add rdi,rax 
	push rax 
	sub rsp,128
	push rdi 
	lea rdi,[rsp+8]
	mov rdx,r8
	mov rsi,fmt_d
 xor rax,rax
	C_CALL_SF sprintf
	pop rdi
	add rdi,rax 
	push rax 
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[r14]
	add rdi,rax 
	push rax
	add rdi,6
	push rdi 
	call mlc_s8
	pop rdi
	mov r9,rax
	lea rdi,[rax+7+rdi]
	std 
	mov QWORD [tmp],rcx 
	pop rcx
	lea rsi,[r14+7+rcx]
	rep movsb
	lea rsi,[LB_5649+4-1]
	mov rcx,4
	rep movsb
	pop rcx
	lea rsi,[rsp+rcx-1]
	rep movsb
	add rsp,128
	lea rsi,[LB_5650+2-1]
	mov rcx,2
	rep movsb
	pop rcx
	lea rsi,[rsp+rcx-1]
	rep movsb
	add rsp,128
	mov rcx,QWORD [tmp] 
;; rsp=0 , %2956~3'(= {| l |} ) %2955~1'(= {| l |} ) %2954~2'(= r ) %2953~0'(= r ) 
; ∎ 3'(= {| l |} )
; .dlt.ptn 1'(= {| l |} )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	mov rdi,r8
	call free_s8
	C_POP_REGS
; .dlt.ptn 2'(= r )
	mov rdi,r8
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 3'(= {| l |} ) ⊢ 0'(= {| l |} )
; .mov_ptn 3'(= {| l |} ) ⊢ 0'(= {| l |} )
	mov rax,r9
	mov r13,rax
	ret
ETR_326: ;; hp 0'(= a48◂ [ ] ) ⊢ 0'(= {| l |} ) : (_t48→_s8)
;; rsp=0 , %2957~0'(= a48◂ [ ] ) 
;; ? 0'(= a48◂ [ ] ) ⊢ 3(<4)◂{ 1'(= r ) 2'(= a2◂ [ a48◂ [ ]] ) }
	mov rdi,r13
	cmp BYTE [rdi+6],3
	jnz LB_5652
	jmp LB_5653
LB_5652:
	jmp LB_5651
LB_5653:
	mov r14, QWORD [r13+8]
	mov r8, QWORD [r13+16]
	mov QWORD [GBG_VCT+8*0],r13
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_RCD 2,rdi
;; rsp=0 , %2961~2'(= a2◂ [ a48◂ [ ]] ) %2960~1'(= r ) 
; #327 2'(= a2◂ [ a48◂ [ ]] ) ⊢ 0'(= {| l |} )
	sub rsp,8
	mov QWORD [rsp+8*0],r14
; .mov_ptn2 2'(= a2◂ [ a48◂ [ ]] ) ⊢ 0'(= a2◂ [ a48◂ [ ]] )
; .mov_ptn 2'(= a2◂ [ a48◂ [ ]] ) ⊢ 0'(= a2◂ [ a48◂ [ ]] )
	mov rax,r8
	mov r13,rax
	call ETR_327
	mov r14,QWORD [rsp-8+8*1]
	add rsp,8
;; rsp=0 , %2962~0'(= {| l |} ) %2960~1'(= r ) 
; » _^ .. ⊢ ..
; .. //
	mov rdi,0
	sub rsp,128
	push rdi 
	lea rdi,[rsp+8]
	mov rdx,r14
	mov rsi,fmt_d
 xor rax,rax
	C_CALL_SF sprintf
	pop rdi
	add rdi,rax 
	push rax 
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[r13]
	add rdi,rax 
	push rax
	add rdi,8
	push rdi 
	call mlc_s8
	pop rdi
	mov r8,rax
	lea rdi,[rax+7+rdi]
	std 
	mov QWORD [tmp],rcx 
	lea rsi,[LB_5654+1-1]
	mov rcx,1
	rep movsb
	pop rcx
	lea rsi,[r13+7+rcx]
	rep movsb
	lea rsi,[LB_5655+6-1]
	mov rcx,6
	rep movsb
	pop rcx
	lea rsi,[rsp+rcx-1]
	rep movsb
	add rsp,128
	lea rsi,[LB_5656+1-1]
	mov rcx,1
	rep movsb
	mov rcx,QWORD [tmp] 
;; rsp=0 , %2965~2'(= {| l |} ) %2964~0'(= {| l |} ) %2963~1'(= r ) 
; ∎ 2'(= {| l |} )
; .dlt.ptn 0'(= {| l |} )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	mov rdi,r8
	call free_s8
	C_POP_REGS
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 2'(= {| l |} ) ⊢ 0'(= {| l |} )
; .mov_ptn 2'(= {| l |} ) ⊢ 0'(= {| l |} )
	mov rax,r8
	mov r13,rax
	ret
LB_5651:
;; ? 0'(= a48◂ [ ] ) ⊢ 1(<4)◂{ }
	mov rdi,r13
	cmp BYTE [rdi+6],1
	jnz LB_5658
	jmp LB_5659
LB_5658:
	jmp LB_5657
LB_5659:
;; rsp=0 , 
; » _^ .. ⊢ ..
; .. //
	mov rdi,0
	add rdi,1
	push rdi 
	call mlc_s8
	pop rdi
	mov r13,rax
	lea rdi,[rax+7+rdi]
	std 
	mov QWORD [tmp],rcx 
	lea rsi,[LB_5660+1-1]
	mov rcx,1
	rep movsb
	mov rcx,QWORD [tmp] 
;; rsp=0 , %2966~0'(= {| l |} ) 
; ∎ 0'(= {| l |} )
; .mov_ptn2 0'(= {| l |} ) ⊢ 0'(= {| l |} )
	ret
LB_5657:
;; ? 0'(= a48◂ [ ] ) ⊢ 0(<4)◂1'(= a49◂ [ ] )
	mov rdi,r13
	cmp BYTE [rdi+6],0
	jnz LB_5662
	jmp LB_5663
LB_5662:
	jmp LB_5661
LB_5663:
	mov QWORD [GBG_VCT+8*0],rdi
	mov r14,QWORD [rdi+8]
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_LN rdi
;; rsp=0 , %2959~1'(= a49◂ [ ] ) 
;; ? 1'(= a49◂ [ ] ) ⊢ 4(<5)◂0'(= a2◂ [ a48◂ [ ]] )
	mov rdi,r14
	cmp BYTE [rdi+6],4
	jnz LB_5665
	jmp LB_5666
LB_5665:
	jmp LB_5664
LB_5666:
	mov QWORD [GBG_VCT+8*0],rdi
	mov r13,QWORD [rdi+8]
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_LN rdi
;; rsp=0 , %2969~0'(= a2◂ [ a48◂ [ ]] ) 
; #327 0'(= a2◂ [ a48◂ [ ]] ) ⊢ 0'(= {| l |} )
; .mov_ptn2 0'(= a2◂ [ a48◂ [ ]] ) ⊢ 0'(= a2◂ [ a48◂ [ ]] )
	call ETR_327
;; rsp=0 , %2970~0'(= {| l |} ) 
; » _^ .. ⊢ ..
; .. //
	mov rdi,0
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[r13]
	add rdi,rax 
	push rax
	add rdi,4
	push rdi 
	call mlc_s8
	pop rdi
	mov r14,rax
	lea rdi,[rax+7+rdi]
	std 
	mov QWORD [tmp],rcx 
	lea rsi,[LB_5667+1-1]
	mov rcx,1
	rep movsb
	pop rcx
	lea rsi,[r13+7+rcx]
	rep movsb
	lea rsi,[LB_5668+3-1]
	mov rcx,3
	rep movsb
	mov rcx,QWORD [tmp] 
;; rsp=0 , %2972~1'(= {| l |} ) %2971~0'(= {| l |} ) 
; ∎ 1'(= {| l |} )
; .dlt.ptn 0'(= {| l |} )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	mov rdi,r8
	call free_s8
	C_POP_REGS
; .mov_ptn2 1'(= {| l |} ) ⊢ 0'(= {| l |} )
; .mov_ptn 1'(= {| l |} ) ⊢ 0'(= {| l |} )
	mov rax,r14
	mov r13,rax
	ret
LB_5664:
;; ? 1'(= a49◂ [ ] ) ⊢ 1(<5)◂0'(= a48◂ [ ] )
	mov rdi,r14
	cmp BYTE [rdi+6],1
	jnz LB_5670
	jmp LB_5671
LB_5670:
	jmp LB_5669
LB_5671:
	mov QWORD [GBG_VCT+8*0],rdi
	mov r13,QWORD [rdi+8]
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_LN rdi
;; rsp=0 , %2968~0'(= a48◂ [ ] ) 
; #326 0'(= a48◂ [ ] ) ⊢ 0'(= {| l |} )
; .mov_ptn2 0'(= a48◂ [ ] ) ⊢ 0'(= a48◂ [ ] )
	call ETR_326
;; rsp=0 , %2973~0'(= {| l |} ) 
; » _^ .. ⊢ ..
; .. //
	mov rdi,0
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[r13]
	add rdi,rax 
	push rax
	add rdi,5
	push rdi 
	call mlc_s8
	pop rdi
	mov r14,rax
	lea rdi,[rax+7+rdi]
	std 
	mov QWORD [tmp],rcx 
	lea rsi,[LB_5672+2-1]
	mov rcx,2
	rep movsb
	pop rcx
	lea rsi,[r13+7+rcx]
	rep movsb
	lea rsi,[LB_5673+3-1]
	mov rcx,3
	rep movsb
	mov rcx,QWORD [tmp] 
;; rsp=0 , %2975~1'(= {| l |} ) %2974~0'(= {| l |} ) 
; ∎ 1'(= {| l |} )
; .dlt.ptn 0'(= {| l |} )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	mov rdi,r8
	call free_s8
	C_POP_REGS
; .mov_ptn2 1'(= {| l |} ) ⊢ 0'(= {| l |} )
; .mov_ptn 1'(= {| l |} ) ⊢ 0'(= {| l |} )
	mov rax,r14
	mov r13,rax
	ret
LB_5669:
;; ? 1'(= a49◂ [ ] ) ⊢ 2(<5)◂0'(= a48◂ [ ] )
	mov rdi,r14
	cmp BYTE [rdi+6],2
	jnz LB_5675
	jmp LB_5676
LB_5675:
	jmp LB_5674
LB_5676:
	mov QWORD [GBG_VCT+8*0],rdi
	mov r13,QWORD [rdi+8]
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_LN rdi
;; rsp=0 , %2967~0'(= a48◂ [ ] ) 
; #326 0'(= a48◂ [ ] ) ⊢ 0'(= {| l |} )
; .mov_ptn2 0'(= a48◂ [ ] ) ⊢ 0'(= a48◂ [ ] )
	call ETR_326
;; rsp=0 , %2976~0'(= {| l |} ) 
; » _^ .. ⊢ ..
; .. //
	mov rdi,0
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[r13]
	add rdi,rax 
	push rax
	add rdi,5
	push rdi 
	call mlc_s8
	pop rdi
	mov r14,rax
	lea rdi,[rax+7+rdi]
	std 
	mov QWORD [tmp],rcx 
	lea rsi,[LB_5677+2-1]
	mov rcx,2
	rep movsb
	pop rcx
	lea rsi,[r13+7+rcx]
	rep movsb
	lea rsi,[LB_5678+3-1]
	mov rcx,3
	rep movsb
	mov rcx,QWORD [tmp] 
;; rsp=0 , %2978~1'(= {| l |} ) %2977~0'(= {| l |} ) 
; ∎ 1'(= {| l |} )
; .dlt.ptn 0'(= {| l |} )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	mov rdi,r8
	call free_s8
	C_POP_REGS
; .mov_ptn2 1'(= {| l |} ) ⊢ 0'(= {| l |} )
; .mov_ptn 1'(= {| l |} ) ⊢ 0'(= {| l |} )
	mov rax,r14
	mov r13,rax
	ret
LB_5674:
;; ? 1'(= a49◂ [ ] ) ⊢ 3(<5)◂{ }
	mov rdi,r14
	cmp BYTE [rdi+6],3
	jnz LB_5680
	jmp LB_5681
LB_5680:
	jmp LB_5679
LB_5681:
;; rsp=0 , 
; $ %[ "*[< _ >]" ] ⊢ %[ "*[< _ >]" ]
;; rsp=0 , %2979~%[ "*[< _ >]" ] 
; ∎ %[ "*[< _ >]" ]
; .mov_ptn2 %[ "*[< _ >]" ] ⊢ 0'(= {| l |} )
; .mov_ptn %[ "*[< _ >]" ] ⊢ 0'(= {| l |} )
	mov rsi,1  
	mov rdi,24
	xor rax,rax 
	C_CALL_SF calloc
	mov QWORD [rax],8
	mov BYTE [rax+8+0],42
	mov BYTE [rax+8+1],91
	mov BYTE [rax+8+2],60
	mov BYTE [rax+8+3],32
	mov BYTE [rax+8+4],95
	mov BYTE [rax+8+5],32
	mov BYTE [rax+8+6],62
	mov BYTE [rax+8+7],93
	mov r13,rax
	ret
LB_5679:
;; ?. 1'(= a49◂ [ ] ) ⊢ 0(<5)◂{ }
;; rsp=0 , 
; $ %[ "{| l |}" ] ⊢ %[ "{| l |}" ]
;; rsp=0 , %2980~%[ "{| l |}" ] 
; ∎ %[ "{| l |}" ]
; .mov_ptn2 %[ "{| l |}" ] ⊢ 0'(= {| l |} )
; .mov_ptn %[ "{| l |}" ] ⊢ 0'(= {| l |} )
	mov rsi,1  
	mov rdi,16
	xor rax,rax 
	C_CALL_SF calloc
	mov QWORD [rax],7
	mov BYTE [rax+8+0],123
	mov BYTE [rax+8+1],124
	mov BYTE [rax+8+2],32
	mov BYTE [rax+8+3],108
	mov BYTE [rax+8+4],32
	mov BYTE [rax+8+5],124
	mov BYTE [rax+8+6],125
	mov r13,rax
	ret
LB_5661:
;; ?. 0'(= a48◂ [ ] ) ⊢ 2(<4)◂1'(= r )
	mov QWORD [GBG_VCT+8*0],rdi
	mov r14,QWORD [rdi+8]
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_LN rdi
;; rsp=0 , %2958~1'(= r ) 
; » _^ .. ⊢ ..
; .. //
	mov rdi,0
	sub rsp,128
	push rdi 
	lea rdi,[rsp+8]
	mov rdx,r14
	mov rsi,fmt_d
 xor rax,rax
	C_CALL_SF sprintf
	pop rdi
	add rdi,rax 
	push rax 
	add rdi,1
	push rdi 
	call mlc_s8
	pop rdi
	mov r13,rax
	lea rdi,[rax+7+rdi]
	std 
	mov QWORD [tmp],rcx 
	pop rcx
	lea rsi,[rsp+rcx-1]
	rep movsb
	add rsp,128
	lea rsi,[LB_5682+1-1]
	mov rcx,1
	rep movsb
	mov rcx,QWORD [tmp] 
;; rsp=0 , %2982~0'(= {| l |} ) %2981~1'(= r ) 
; ∎ 0'(= {| l |} )
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0'(= {| l |} ) ⊢ 0'(= {| l |} )
	ret
ETR_327: ;; hp_lst 0'(= a2◂ [ a48◂ [ ]] ) ⊢ 0'(= {| l |} ) : (_lst◂_t48→_s8)
;; rsp=0 , %2983~0'(= a2◂ [ a48◂ [ ]] ) 
;; ? 0'(= a2◂ [ a48◂ [ ]] ) ⊢ 0(<2)◂{ 1'(= a48◂ [ ] ) 2'(= a2◂ [ a48◂ [ ]] ) }
	mov rdi,r13
	cmp BYTE [rdi+6],0
	jnz LB_5684
	jmp LB_5685
LB_5684:
	jmp LB_5683
LB_5685:
	mov r14, QWORD [r13+8]
	mov r8, QWORD [r13+16]
	mov QWORD [GBG_VCT+8*0],r13
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_RCD 2,rdi
;; rsp=0 , %2985~2'(= a2◂ [ a48◂ [ ]] ) %2984~1'(= a48◂ [ ] ) 
; #326 1'(= a48◂ [ ] ) ⊢ 0'(= {| l |} )
	sub rsp,8
	mov QWORD [rsp+8*0],r8
; .mov_ptn2 1'(= a48◂ [ ] ) ⊢ 0'(= a48◂ [ ] )
; .mov_ptn 1'(= a48◂ [ ] ) ⊢ 0'(= a48◂ [ ] )
	mov rax,r14
	mov r13,rax
	call ETR_326
	mov r8,QWORD [rsp-8+8*1]
	add rsp,8
;; rsp=0 , %2986~0'(= {| l |} ) %2985~2'(= a2◂ [ a48◂ [ ]] ) 
; #327 2'(= a2◂ [ a48◂ [ ]] ) ⊢ 1'(= {| l |} )
	sub rsp,8
	mov QWORD [rsp+8*0],r13
; .mov_ptn2 2'(= a2◂ [ a48◂ [ ]] ) ⊢ 0'(= a2◂ [ a48◂ [ ]] )
; .mov_ptn 2'(= a2◂ [ a48◂ [ ]] ) ⊢ 0'(= a2◂ [ a48◂ [ ]] )
	mov rax,r8
	mov r13,rax
	call ETR_327
	mov r14,r13
	mov r13,QWORD [rsp-8+8*1]
	add rsp,8
;; rsp=0 , %2987~1'(= {| l |} ) %2986~0'(= {| l |} ) 
; » _^ .. ⊢ ..
; .. //
	mov rdi,0
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[r13]
	add rdi,rax 
	push rax
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[r14]
	add rdi,rax 
	push rax
	add rdi,0
	push rdi 
	call mlc_s8
	pop rdi
	mov r8,rax
	lea rdi,[rax+7+rdi]
	std 
	mov QWORD [tmp],rcx 
	pop rcx
	lea rsi,[r14+7+rcx]
	rep movsb
	pop rcx
	lea rsi,[r13+7+rcx]
	rep movsb
	mov rcx,QWORD [tmp] 
;; rsp=0 , %2990~2'(= {| l |} ) %2989~1'(= {| l |} ) %2988~0'(= {| l |} ) 
; ∎ 2'(= {| l |} )
; .dlt.ptn 1'(= {| l |} )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	mov rdi,r8
	call free_s8
	C_POP_REGS
; .dlt.ptn 0'(= {| l |} )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	mov rdi,r8
	call free_s8
	C_POP_REGS
; .mov_ptn2 2'(= {| l |} ) ⊢ 0'(= {| l |} )
; .mov_ptn 2'(= {| l |} ) ⊢ 0'(= {| l |} )
	mov rax,r8
	mov r13,rax
	ret
LB_5683:
;; ?. 0'(= a2◂ [ a48◂ [ ]] ) ⊢ 1(<2)◂{ }
;; rsp=0 , 
; $ %[ "" ] ⊢ %[ "" ]
;; rsp=0 , %2991~%[ "" ] 
; ∎ %[ "" ]
; .mov_ptn2 %[ "" ] ⊢ 0'(= {| l |} )
; .mov_ptn %[ "" ] ⊢ 0'(= {| l |} )
	mov rsi,1  
	mov rdi,16
	xor rax,rax 
	C_CALL_SF calloc
	mov QWORD [rax],0
	mov r13,rax
	ret
ETR_328: ;; lst 0'(= a2◂ [ a17◂ [ a46◂ [ r]]] ) ⊢ 0'(= {| l |} ) : (_lst◂_t17◂_t46◂_r64→_s8)
;; rsp=0 , %2992~0'(= a2◂ [ a17◂ [ a46◂ [ r]]] ) 
;; ? 0'(= a2◂ [ a17◂ [ a46◂ [ r]]] ) ⊢ 0(<2)◂{ 1'(= a17◂ [ a46◂ [ r]] ) 2'(= a2◂ [ a17◂ [ a46◂ [ r]]] ) }
	mov rdi,r13
	cmp BYTE [rdi+6],0
	jnz LB_5687
	jmp LB_5688
LB_5687:
	jmp LB_5686
LB_5688:
	mov r14, QWORD [r13+8]
	mov r8, QWORD [r13+16]
	mov QWORD [GBG_VCT+8*0],r13
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_RCD 2,rdi
;; rsp=0 , %2994~2'(= a2◂ [ a17◂ [ a46◂ [ r]]] ) %2993~1'(= a17◂ [ a46◂ [ r]] ) 
; #325 1'(= a17◂ [ a46◂ [ r]] ) ⊢ 0'(= {| l |} )
	sub rsp,8
	mov QWORD [rsp+8*0],r8
; .mov_ptn2 1'(= a17◂ [ a46◂ [ r]] ) ⊢ 0'(= a17◂ [ a46◂ [ r]] )
; .mov_ptn 1'(= a17◂ [ a46◂ [ r]] ) ⊢ 0'(= a17◂ [ a46◂ [ r]] )
	mov rax,r14
	mov r13,rax
	call ETR_325
	mov r8,QWORD [rsp-8+8*1]
	add rsp,8
;; rsp=0 , %2995~0'(= {| l |} ) %2994~2'(= a2◂ [ a17◂ [ a46◂ [ r]]] ) 
; #328 2'(= a2◂ [ a17◂ [ a46◂ [ r]]] ) ⊢ 1'(= {| l |} )
	sub rsp,8
	mov QWORD [rsp+8*0],r13
; .mov_ptn2 2'(= a2◂ [ a17◂ [ a46◂ [ r]]] ) ⊢ 0'(= a2◂ [ a17◂ [ a46◂ [ r]]] )
; .mov_ptn 2'(= a2◂ [ a17◂ [ a46◂ [ r]]] ) ⊢ 0'(= a2◂ [ a17◂ [ a46◂ [ r]]] )
	mov rax,r8
	mov r13,rax
	call ETR_328
	mov r14,r13
	mov r13,QWORD [rsp-8+8*1]
	add rsp,8
;; rsp=0 , %2996~1'(= {| l |} ) %2995~0'(= {| l |} ) 
; » _^ .. ⊢ ..
; .. //
	mov rdi,0
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[r13]
	add rdi,rax 
	push rax
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[r14]
	add rdi,rax 
	push rax
	add rdi,1
	push rdi 
	call mlc_s8
	pop rdi
	mov r8,rax
	lea rdi,[rax+7+rdi]
	std 
	mov QWORD [tmp],rcx 
	pop rcx
	lea rsi,[r14+7+rcx]
	rep movsb
	lea rsi,[LB_5689+1-1]
	mov rcx,1
	rep movsb
	pop rcx
	lea rsi,[r13+7+rcx]
	rep movsb
	mov rcx,QWORD [tmp] 
;; rsp=0 , %2999~2'(= {| l |} ) %2998~1'(= {| l |} ) %2997~0'(= {| l |} ) 
; ∎ 2'(= {| l |} )
; .dlt.ptn 1'(= {| l |} )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	mov rdi,r8
	call free_s8
	C_POP_REGS
; .dlt.ptn 0'(= {| l |} )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	mov rdi,r8
	call free_s8
	C_POP_REGS
; .mov_ptn2 2'(= {| l |} ) ⊢ 0'(= {| l |} )
; .mov_ptn 2'(= {| l |} ) ⊢ 0'(= {| l |} )
	mov rax,r8
	mov r13,rax
	ret
LB_5686:
;; ?. 0'(= a2◂ [ a17◂ [ a46◂ [ r]]] ) ⊢ 1(<2)◂{ }
;; rsp=0 , 
; $ %[ "" ] ⊢ %[ "" ]
;; rsp=0 , %3000~%[ "" ] 
; ∎ %[ "" ]
; .mov_ptn2 %[ "" ] ⊢ 0'(= {| l |} )
; .mov_ptn %[ "" ] ⊢ 0'(= {| l |} )
	mov rsi,1  
	mov rdi,16
	xor rax,rax 
	C_CALL_SF calloc
	mov QWORD [rax],0
	mov r13,rax
	ret
LB_5696:
	movzx rax,BYTE [r8+6]
	jmp QWORD [LB_5701+8*rax]
LB_5701: dq LB_5697,LB_5698,LB_5699,LB_5700
LB_5697:
	FREE_LN r8 
	mov r8,QWORD [r8+8]
	call LB_5703
	jmp LB_5702
LB_5698:
	jmp LB_5702
LB_5699:
	FREE_LN r8 
	mov r8,QWORD [r8+8]
	jmp LB_5702
LB_5700:
	push r8
	mov r8,QWORD [r8+8+8*0]
	pop r8 
	push r8
	mov r8,QWORD [r8+8+8*1]
	call LB_5704
	pop r8 
	FREE_RCD 2, r8
	jmp LB_5702
LB_5702:
	ret
LB_5704:
	movzx rax,BYTE [r8+6]
	jmp QWORD [LB_5707+8*rax]
LB_5707: dq LB_5705,LB_5706
LB_5705:
	push r8
	mov r8,QWORD [r8+8+8*0]
	call LB_5696
	pop r8 
	push r8
	mov r8,QWORD [r8+8+8*1]
	call LB_5704
	pop r8 
	FREE_RCD 2, r8
	jmp LB_5708
LB_5706:
	jmp LB_5708
LB_5708:
	ret
LB_5703:
	movzx rax,BYTE [r8+6]
	jmp QWORD [LB_5714+8*rax]
LB_5714: dq LB_5709,LB_5710,LB_5711,LB_5712,LB_5713
LB_5709:
	jmp LB_5715
LB_5710:
	FREE_LN r8 
	mov r8,QWORD [r8+8]
	call LB_5696
	jmp LB_5715
LB_5711:
	FREE_LN r8 
	mov r8,QWORD [r8+8]
	call LB_5696
	jmp LB_5715
LB_5712:
	jmp LB_5715
LB_5713:
	FREE_LN r8 
	mov r8,QWORD [r8+8]
	call LB_5704
	jmp LB_5715
LB_5715:
	ret
LB_5731:
	movzx rax,BYTE [r8+6]
	jmp QWORD [LB_5734+8*rax]
LB_5734: dq LB_5732,LB_5733
LB_5732:
	mov r8,QWORD [r8+8]
	call LB_5736
	ALC_LN rsi 
	mov BYTE [rsi+6],0
	mov QWORD [rsi+8],rax
	mov rax,rsi
	jmp LB_5735
LB_5733:
	mov r8,QWORD [r8+8]
	call LB_5737
	ALC_LN rsi 
	mov BYTE [rsi+6],1
	mov QWORD [rsi+8],rax
	mov rax,rsi
	jmp LB_5735
LB_5735:
	ret
LB_5737:
	movzx rax,BYTE [r8+6]
	jmp QWORD [LB_5743+8*rax]
LB_5743: dq LB_5738,LB_5739,LB_5740,LB_5741,LB_5742
LB_5738:
	ALC_RCD 2,r9
	push r8
	push r9
	mov r8,QWORD [r8+8+8*0]
	mov rax,r8
	pop r9  
	pop r8 
	mov QWORD [r9+8+8*0],rax
	push r8
	push r9
	mov r8,QWORD [r8+8+8*1]
	call LB_5745
	pop r9  
	pop r8 
	mov QWORD [r9+8+8*1],rax
	mov rax,r9 
	mov BYTE [rax+6],0
	jmp LB_5744
LB_5739:
	mov r8,QWORD [r8+8]
	call LB_422
	ALC_LN rsi 
	mov BYTE [rsi+6],1
	mov QWORD [rsi+8],rax
	mov rax,rsi
	jmp LB_5744
LB_5740:
	mov r8,QWORD [r8+8]
	mov rax,r8
	ALC_LN rsi 
	mov BYTE [rsi+6],2
	mov QWORD [rsi+8],rax
	mov rax,rsi
	jmp LB_5744
LB_5741:
	ALC_RCD 3,r9
	push r8
	push r9
	mov r8,QWORD [r8+8+8*0]
	mov rax,r8
	pop r9  
	pop r8 
	mov QWORD [r9+8+8*0],rax
	push r8
	push r9
	mov r8,QWORD [r8+8+8*1]
	mov rax,r8
	pop r9  
	pop r8 
	mov QWORD [r9+8+8*1],rax
	push r8
	push r9
	mov r8,QWORD [r8+8+8*2]
	call LB_5731
	pop r9  
	pop r8 
	mov QWORD [r9+8+8*2],rax
	mov rax,r9 
	mov BYTE [rax+6],3
	jmp LB_5744
LB_5742:
	ALC_RCD 2,r9
	push r8
	push r9
	mov r8,QWORD [r8+8+8*0]
	mov rax,r8
	pop r9  
	pop r8 
	mov QWORD [r9+8+8*0],rax
	push r8
	push r9
	mov r8,QWORD [r8+8+8*1]
	mov rax,r8
	pop r9  
	pop r8 
	mov QWORD [r9+8+8*1],rax
	mov rax,r9 
	mov BYTE [rax+6],4
	jmp LB_5744
LB_5744:
	ret
LB_5745:
	movzx rax,BYTE [r8+6]
	jmp QWORD [LB_5750+8*rax]
LB_5750: dq LB_5746,LB_5747,LB_5748,LB_5749
LB_5746:
	mov r8,QWORD [r8+8]
	call LB_5752
	ALC_LN rsi 
	mov BYTE [rsi+6],0
	mov QWORD [rsi+8],rax
	mov rax,rsi
	jmp LB_5751
LB_5747:
	mov rax,unt
	mov BYTE [rax+6],1
	jmp LB_5751
LB_5748:
	mov r8,QWORD [r8+8]
	mov rax,r8
	ALC_LN rsi 
	mov BYTE [rsi+6],2
	mov QWORD [rsi+8],rax
	mov rax,rsi
	jmp LB_5751
LB_5749:
	ALC_RCD 2,r9
	push r8
	push r9
	mov r8,QWORD [r8+8+8*0]
	mov rax,r8
	pop r9  
	pop r8 
	mov QWORD [r9+8+8*0],rax
	push r8
	push r9
	mov r8,QWORD [r8+8+8*1]
	call LB_5753
	pop r9  
	pop r8 
	mov QWORD [r9+8+8*1],rax
	mov rax,r9 
	mov BYTE [rax+6],3
	jmp LB_5751
LB_5751:
	ret
LB_5753:
	movzx rax,BYTE [r8+6]
	jmp QWORD [LB_5756+8*rax]
LB_5756: dq LB_5754,LB_5755
LB_5754:
	ALC_RCD 2,r9
	push r8
	push r9
	mov r8,QWORD [r8+8+8*0]
	call LB_5745
	pop r9  
	pop r8 
	mov QWORD [r9+8+8*0],rax
	push r8
	push r9
	mov r8,QWORD [r8+8+8*1]
	call LB_5753
	pop r9  
	pop r8 
	mov QWORD [r9+8+8*1],rax
	mov rax,r9 
	mov BYTE [rax+6],0
	jmp LB_5757
LB_5755:
	mov rax,unt
	mov BYTE [rax+6],1
	jmp LB_5757
LB_5757:
	ret
LB_5752:
	movzx rax,BYTE [r8+6]
	jmp QWORD [LB_5763+8*rax]
LB_5763: dq LB_5758,LB_5759,LB_5760,LB_5761,LB_5762
LB_5758:
	mov rax,unt
	mov BYTE [rax+6],0
	jmp LB_5764
LB_5759:
	mov r8,QWORD [r8+8]
	call LB_5745
	ALC_LN rsi 
	mov BYTE [rsi+6],1
	mov QWORD [rsi+8],rax
	mov rax,rsi
	jmp LB_5764
LB_5760:
	mov r8,QWORD [r8+8]
	call LB_5745
	ALC_LN rsi 
	mov BYTE [rsi+6],2
	mov QWORD [rsi+8],rax
	mov rax,rsi
	jmp LB_5764
LB_5761:
	mov rax,unt
	mov BYTE [rax+6],3
	jmp LB_5764
LB_5762:
	mov r8,QWORD [r8+8]
	call LB_5753
	ALC_LN rsi 
	mov BYTE [rsi+6],4
	mov QWORD [rsi+8],rax
	mov rax,rsi
	jmp LB_5764
LB_5764:
	ret
LB_5736:
	movzx rax,BYTE [r8+6]
	jmp QWORD [LB_5767+8*rax]
LB_5767: dq LB_5765,LB_5766
LB_5765:
	ALC_RCD 2,r9
	push r8
	push r9
	mov r8,QWORD [r8+8+8*0]
	call LB_5731
	pop r9  
	pop r8 
	mov QWORD [r9+8+8*0],rax
	push r8
	push r9
	mov r8,QWORD [r8+8+8*1]
	call LB_5736
	pop r9  
	pop r8 
	mov QWORD [r9+8+8*1],rax
	mov rax,r9 
	mov BYTE [rax+6],0
	jmp LB_5768
LB_5766:
	mov rax,unt
	mov BYTE [rax+6],1
	jmp LB_5768
LB_5768:
	ret
ETR_329: ;; mk_rset { 0'(= a17◂ [ a46◂ [ r]] ) 1'(= {| a15◂ [ ]|} ) } ⊢ 0'(= {| a15◂ [ ]|} ) : ({ _t17◂_t46◂_r64 _arr◂_t15 }→_arr◂_t15)
;; rsp=0 , %3002~1'(= {| a15◂ [ ]|} ) %3001~0'(= a17◂ [ a46◂ [ r]] ) 
;; ? 0'(= a17◂ [ a46◂ [ r]] ) ⊢ 0(<2)◂2'(= a2◂ [ a17◂ [ a46◂ [ r]]] )
	mov rdi,r13
	cmp BYTE [rdi+6],0
	jnz LB_5691
	jmp LB_5692
LB_5691:
	jmp LB_5690
LB_5692:
	mov QWORD [GBG_VCT+8*0],rdi
	mov r8,QWORD [rdi+8]
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_LN rdi
;; rsp=0 , %3004~2'(= a2◂ [ a17◂ [ a46◂ [ r]]] ) %3002~1'(= {| a15◂ [ ]|} ) 
; #330 { 2'(= a2◂ [ a17◂ [ a46◂ [ r]]] ) 1'(= {| a15◂ [ ]|} ) } ⊢|
; .mov_ptn2 { 2'(= a2◂ [ a17◂ [ a46◂ [ r]]] ) 1'(= {| a15◂ [ ]|} ) } ⊢ { 0'(= a2◂ [ a17◂ [ a46◂ [ r]]] ) 1'(= {| a15◂ [ ]|} ) }
; .mov_ptn 2'(= a2◂ [ a17◂ [ a46◂ [ r]]] ) ⊢ 0'(= a2◂ [ a17◂ [ a46◂ [ r]]] )
	mov rax,r8
	mov r13,rax
	call ETR_330
; .mov_ptn2 0'(= {| a15◂ [ ]|} ) ⊢ 0'(= {| a15◂ [ ]|} )
	ret
LB_5690:
;; ?. 0'(= a17◂ [ a46◂ [ r]] ) ⊢ 1(<2)◂2'(= a46◂ [ r] )
	mov QWORD [GBG_VCT+8*0],rdi
	mov r8,QWORD [rdi+8]
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_LN rdi
;; rsp=0 , %3003~2'(= a46◂ [ r] ) %3002~1'(= {| a15◂ [ ]|} ) 
;; ? 2'(= a46◂ [ r] ) ⊢ 0(<5)◂{ 0'(= r ) 3'(= a48◂ [ ] ) }
	mov rdi,r8
	cmp BYTE [rdi+6],0
	jnz LB_5694
	jmp LB_5695
LB_5694:
	jmp LB_5693
LB_5695:
	mov r13, QWORD [r8+8]
	mov r9, QWORD [r8+16]
	mov QWORD [GBG_VCT+8*0],r8
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_RCD 2,rdi
;; rsp=0 , %3013~3'(= a48◂ [ ] ) %3012~0'(= r ) %3002~1'(= {| a15◂ [ ]|} ) 
; #279 { 1'(= {| a15◂ [ ]|} ) 0'(= r ) } ⊢ { 0'(= {| a15◂ [ ]|} ) 1'(= r ) }
	sub rsp,8
	mov QWORD [rsp+8*0],r9
; .mov_ptn2 { 1'(= {| a15◂ [ ]|} ) 0'(= r ) } ⊢ { 0'(= {| a15◂ [ ]|} ) 1'(= r ) }
	mov r8,r13
; .mov_ptn 1'(= {| a15◂ [ ]|} ) ⊢ 0'(= {| a15◂ [ ]|} )
	mov rax,r14
	mov r13,rax
; .mov_ptn 2'(= r ) ⊢ 1'(= r )
	mov rax,r8
	mov r14,rax
	call ETR_279
	mov r9,QWORD [rsp-8+8*1]
	add rsp,8
;; rsp=0 , %3015~1'(= r ) %3014~0'(= {| a15◂ [ ]|} ) %3013~3'(= a48◂ [ ] ) 
; ∎ 0'(= {| a15◂ [ ]|} )
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 3'(= a48◂ [ ] )
	mov rdi,r9
	C_PUSH_REGS
	mov r8,rdi
	call LB_5696
	C_POP_REGS
; .mov_ptn2 0'(= {| a15◂ [ ]|} ) ⊢ 0'(= {| a15◂ [ ]|} )
	ret
LB_5693:
;; ? 2'(= a46◂ [ r] ) ⊢ 1(<5)◂0'(= a19◂ [ ] )
	mov rdi,r8
	cmp BYTE [rdi+6],1
	jnz LB_5717
	jmp LB_5718
LB_5717:
	jmp LB_5716
LB_5718:
	mov QWORD [GBG_VCT+8*0],rdi
	mov r13,QWORD [rdi+8]
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_LN rdi
;; rsp=0 , %3011~0'(= a19◂ [ ] ) %3002~1'(= {| a15◂ [ ]|} ) 
; ∎ 1'(= {| a15◂ [ ]|} )
; .dlt.ptn 0'(= a19◂ [ ] )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	call LB_456
	C_POP_REGS
; .mov_ptn2 1'(= {| a15◂ [ ]|} ) ⊢ 0'(= {| a15◂ [ ]|} )
; .mov_ptn 1'(= {| a15◂ [ ]|} ) ⊢ 0'(= {| a15◂ [ ]|} )
	mov rax,r14
	mov r13,rax
	ret
LB_5716:
;; ? 2'(= a46◂ [ r] ) ⊢ 2(<5)◂0'(= r )
	mov rdi,r8
	cmp BYTE [rdi+6],2
	jnz LB_5720
	jmp LB_5721
LB_5720:
	jmp LB_5719
LB_5721:
	mov QWORD [GBG_VCT+8*0],rdi
	mov r13,QWORD [rdi+8]
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_LN rdi
;; rsp=0 , %3010~0'(= r ) %3002~1'(= {| a15◂ [ ]|} ) 
; ∎ 1'(= {| a15◂ [ ]|} )
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 1'(= {| a15◂ [ ]|} ) ⊢ 0'(= {| a15◂ [ ]|} )
; .mov_ptn 1'(= {| a15◂ [ ]|} ) ⊢ 0'(= {| a15◂ [ ]|} )
	mov rax,r14
	mov r13,rax
	ret
LB_5719:
;; ? 2'(= a46◂ [ r] ) ⊢ 4(<5)◂{ 0'(= r ) 3'(= r ) }
	mov rdi,r8
	cmp BYTE [rdi+6],4
	jnz LB_5723
	jmp LB_5724
LB_5723:
	jmp LB_5722
LB_5724:
	mov r13, QWORD [r8+8]
	mov r9, QWORD [r8+16]
	mov QWORD [GBG_VCT+8*0],r8
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_RCD 2,rdi
;; rsp=0 , %3009~3'(= r ) %3008~0'(= r ) %3002~1'(= {| a15◂ [ ]|} ) 
; #279 { 1'(= {| a15◂ [ ]|} ) 0'(= r ) } ⊢ { 0'(= {| a15◂ [ ]|} ) 1'(= r ) }
	sub rsp,8
	mov QWORD [rsp+8*0],r9
; .mov_ptn2 { 1'(= {| a15◂ [ ]|} ) 0'(= r ) } ⊢ { 0'(= {| a15◂ [ ]|} ) 1'(= r ) }
	mov r8,r13
; .mov_ptn 1'(= {| a15◂ [ ]|} ) ⊢ 0'(= {| a15◂ [ ]|} )
	mov rax,r14
	mov r13,rax
; .mov_ptn 2'(= r ) ⊢ 1'(= r )
	mov rax,r8
	mov r14,rax
	call ETR_279
	mov r9,QWORD [rsp-8+8*1]
	add rsp,8
;; rsp=0 , %3017~1'(= r ) %3016~0'(= {| a15◂ [ ]|} ) %3009~3'(= r ) 
; #279 { 0'(= {| a15◂ [ ]|} ) 3'(= r ) } ⊢ { 0'(= {| a15◂ [ ]|} ) 2'(= r ) }
	sub rsp,8
	mov QWORD [rsp+8*0],r14
; .mov_ptn2 { 0'(= {| a15◂ [ ]|} ) 3'(= r ) } ⊢ { 0'(= {| a15◂ [ ]|} ) 1'(= r ) }
; .mov_ptn 3'(= r ) ⊢ 1'(= r )
	mov rax,r9
	mov r14,rax
	call ETR_279
	mov r8,r14
	mov r14,QWORD [rsp-8+8*1]
	add rsp,8
;; rsp=0 , %3019~2'(= r ) %3018~0'(= {| a15◂ [ ]|} ) %3017~1'(= r ) 
; ∎ 0'(= {| a15◂ [ ]|} )
; .dlt.ptn 2'(= r )
	mov rdi,r8
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 0'(= {| a15◂ [ ]|} ) ⊢ 0'(= {| a15◂ [ ]|} )
	ret
LB_5722:
;; ?. 2'(= a46◂ [ r] ) ⊢ 3(<5)◂{ 0'(= r ) 3'(= r ) 4'(= a17◂ [ a46◂ [ r]] ) }
	mov r13, QWORD [r8+8]
	mov r9, QWORD [r8+16]
	mov r10, QWORD [r8+24]
	mov QWORD [GBG_VCT+8*0],r8
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_RCD 3,rdi
;; rsp=0 , %3007~4'(= a17◂ [ a46◂ [ r]] ) %3006~3'(= r ) %3005~0'(= r ) %3002~1'(= {| a15◂ [ ]|} ) 
; #329 { 4'(= a17◂ [ a46◂ [ r]] ) 1'(= {| a15◂ [ ]|} ) } ⊢|
; .dlt.ptn 3'(= r )
	mov rdi,r9
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 { 4'(= a17◂ [ a46◂ [ r]] ) 1'(= {| a15◂ [ ]|} ) } ⊢ { 0'(= a17◂ [ a46◂ [ r]] ) 1'(= {| a15◂ [ ]|} ) }
; .mov_ptn 4'(= a17◂ [ a46◂ [ r]] ) ⊢ 0'(= a17◂ [ a46◂ [ r]] )
	mov rax,r10
	mov r13,rax
	call ETR_329
; .mov_ptn2 0'(= {| a15◂ [ ]|} ) ⊢ 0'(= {| a15◂ [ ]|} )
	ret
ETR_330: ;; mk_rset_lst { 0'(= a2◂ [ a17◂ [ a46◂ [ r]]] ) 1'(= {| a15◂ [ ]|} ) } ⊢ 0'(= {| a15◂ [ ]|} ) : ({ _lst◂_t17◂_t46◂_r64 _arr◂_t15 }→_arr◂_t15)
;; rsp=0 , %3021~1'(= {| a15◂ [ ]|} ) %3020~0'(= a2◂ [ a17◂ [ a46◂ [ r]]] ) 
;; ? 0'(= a2◂ [ a17◂ [ a46◂ [ r]]] ) ⊢ 0(<2)◂{ 2'(= a17◂ [ a46◂ [ r]] ) 3'(= a2◂ [ a17◂ [ a46◂ [ r]]] ) }
	mov rdi,r13
	cmp BYTE [rdi+6],0
	jnz LB_5726
	jmp LB_5727
LB_5726:
	jmp LB_5725
LB_5727:
	mov r8, QWORD [r13+8]
	mov r9, QWORD [r13+16]
	mov QWORD [GBG_VCT+8*0],r13
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_RCD 2,rdi
;; rsp=0 , %3023~3'(= a2◂ [ a17◂ [ a46◂ [ r]]] ) %3022~2'(= a17◂ [ a46◂ [ r]] ) %3021~1'(= {| a15◂ [ ]|} ) 
; #329 { 2'(= a17◂ [ a46◂ [ r]] ) 1'(= {| a15◂ [ ]|} ) } ⊢ 0'(= {| a15◂ [ ]|} )
	sub rsp,8
	mov QWORD [rsp+8*0],r9
; .mov_ptn2 { 2'(= a17◂ [ a46◂ [ r]] ) 1'(= {| a15◂ [ ]|} ) } ⊢ { 0'(= a17◂ [ a46◂ [ r]] ) 1'(= {| a15◂ [ ]|} ) }
; .mov_ptn 2'(= a17◂ [ a46◂ [ r]] ) ⊢ 0'(= a17◂ [ a46◂ [ r]] )
	mov rax,r8
	mov r13,rax
	call ETR_329
	mov r9,QWORD [rsp-8+8*1]
	add rsp,8
;; rsp=0 , %3024~0'(= {| a15◂ [ ]|} ) %3023~3'(= a2◂ [ a17◂ [ a46◂ [ r]]] ) 
; #330 { 3'(= a2◂ [ a17◂ [ a46◂ [ r]]] ) 0'(= {| a15◂ [ ]|} ) } ⊢ 0'(= {| a15◂ [ ]|} )
; .mov_ptn2 { 3'(= a2◂ [ a17◂ [ a46◂ [ r]]] ) 0'(= {| a15◂ [ ]|} ) } ⊢ { 0'(= a2◂ [ a17◂ [ a46◂ [ r]]] ) 1'(= {| a15◂ [ ]|} ) }
; .mov_ptn 0'(= {| a15◂ [ ]|} ) ⊢ 1'(= {| a15◂ [ ]|} )
	mov rax,r13
	mov r14,rax
; .mov_ptn 3'(= a2◂ [ a17◂ [ a46◂ [ r]]] ) ⊢ 0'(= a2◂ [ a17◂ [ a46◂ [ r]]] )
	mov rax,r9
	mov r13,rax
	call ETR_330
;; rsp=0 , %3025~0'(= {| a15◂ [ ]|} ) 
; ∎ 0'(= {| a15◂ [ ]|} )
; .mov_ptn2 0'(= {| a15◂ [ ]|} ) ⊢ 0'(= {| a15◂ [ ]|} )
	ret
LB_5725:
;; ?. 0'(= a2◂ [ a17◂ [ a46◂ [ r]]] ) ⊢ 1(<2)◂{ }
;; rsp=0 , %3021~1'(= {| a15◂ [ ]|} ) 
; ∎ 1'(= {| a15◂ [ ]|} )
; .mov_ptn2 1'(= {| a15◂ [ ]|} ) ⊢ 0'(= {| a15◂ [ ]|} )
; .mov_ptn 1'(= {| a15◂ [ ]|} ) ⊢ 0'(= {| a15◂ [ ]|} )
	mov rax,r14
	mov r13,rax
	ret
ETR_331: ;; mk_rset_env { 0'(= {| a17◂ [ a46◂ [ r]]|} ) 1'(= a2◂ [ r] ) 2'(= {| a15◂ [ ]|} ) } ⊢ { 0'(= {| a17◂ [ a46◂ [ r]]|} ) 1'(= {| a15◂ [ ]|} ) } : ({ _arr◂_t17◂_t46◂_r64 _lst◂_r64 _arr◂_t15 }→{ _arr◂_t17◂_t46◂_r64 _arr◂_t15 })
;; rsp=0 , %3028~2'(= {| a15◂ [ ]|} ) %3027~1'(= a2◂ [ r] ) %3026~0'(= {| a17◂ [ a46◂ [ r]]|} ) 
;; ? 1'(= a2◂ [ r] ) ⊢ 0(<2)◂{ 3'(= r ) 4'(= a2◂ [ r] ) }
	mov rdi,r14
	cmp BYTE [rdi+6],0
	jnz LB_5729
	jmp LB_5730
LB_5729:
	jmp LB_5728
LB_5730:
	mov r9, QWORD [r14+8]
	mov r10, QWORD [r14+16]
	mov QWORD [GBG_VCT+8*0],r14
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_RCD 2,rdi
;; rsp=0 , %3030~4'(= a2◂ [ r] ) %3029~3'(= r ) %3028~2'(= {| a15◂ [ ]|} ) %3026~0'(= {| a17◂ [ a46◂ [ r]]|} ) 
; #4 { 0'(= {| a17◂ [ a46◂ [ r]]|} ) 3'(= r ) } ⊢ { 0'(= {| a17◂ [ a46◂ [ r]]|} ) 3'(= r ) 5'(= a17◂ [ a46◂ [ r]] ) }
	mov rax,r9
	mov rdi,r13
	mov rsi,0x0000_ffff_ffff_ffff 
	and rsi,QWORD [rdi]
	cmp rax,rsi 
	jge err 
	mov rdi,[rdi+8+8*rax]
	C_PUSH_REGS
	mov r8,rdi
	call LB_5731
	C_POP_REGS
	mov r14,rax
; .mov_ptn2 1'(= a17◂ [ a46◂ [ r]] ) ⊢ 5'(= a17◂ [ a46◂ [ r]] )
	mov rcx,r11
; .mov_ptn 1'(= a17◂ [ a46◂ [ r]] ) ⊢ 5'(= a17◂ [ a46◂ [ r]] )
	mov rax,r14
	mov r11,rax
;; rsp=0 , %3033~5'(= a17◂ [ a46◂ [ r]] ) %3032~3'(= r ) %3031~0'(= {| a17◂ [ a46◂ [ r]]|} ) %3030~4'(= a2◂ [ r] ) %3028~2'(= {| a15◂ [ ]|} ) 
; #329 { 5'(= a17◂ [ a46◂ [ r]] ) 2'(= {| a15◂ [ ]|} ) } ⊢ 1'(= {| a15◂ [ ]|} )
	sub rsp,24
	mov QWORD [rsp+8*0],r13
	mov QWORD [rsp+8*1],r9
	mov QWORD [rsp+8*2],r10
; .mov_ptn2 { 5'(= a17◂ [ a46◂ [ r]] ) 2'(= {| a15◂ [ ]|} ) } ⊢ { 0'(= a17◂ [ a46◂ [ r]] ) 1'(= {| a15◂ [ ]|} ) }
; .mov_ptn 2'(= {| a15◂ [ ]|} ) ⊢ 1'(= {| a15◂ [ ]|} )
	mov rax,r8
	mov r14,rax
; .mov_ptn 5'(= a17◂ [ a46◂ [ r]] ) ⊢ 0'(= a17◂ [ a46◂ [ r]] )
	mov rax,r11
	mov r13,rax
	call ETR_329
	mov r10,QWORD [rsp-8+8*3]
	mov r9,QWORD [rsp-8+8*2]
	mov r14,r13
	mov r13,QWORD [rsp-8+8*1]
	add rsp,24
;; rsp=0 , %3034~1'(= {| a15◂ [ ]|} ) %3032~3'(= r ) %3031~0'(= {| a17◂ [ a46◂ [ r]]|} ) %3030~4'(= a2◂ [ r] ) 
; #331 { 0'(= {| a17◂ [ a46◂ [ r]]|} ) 4'(= a2◂ [ r] ) 1'(= {| a15◂ [ ]|} ) } ⊢|
; .dlt.ptn 3'(= r )
	mov rdi,r9
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 { 0'(= {| a17◂ [ a46◂ [ r]]|} ) 4'(= a2◂ [ r] ) 1'(= {| a15◂ [ ]|} ) } ⊢ { 0'(= {| a17◂ [ a46◂ [ r]]|} ) 1'(= a2◂ [ r] ) 2'(= {| a15◂ [ ]|} ) }
; .mov_ptn 1'(= {| a15◂ [ ]|} ) ⊢ 2'(= {| a15◂ [ ]|} )
	mov rax,r14
	mov r8,rax
; .mov_ptn 4'(= a2◂ [ r] ) ⊢ 1'(= a2◂ [ r] )
	mov rax,r10
	mov r14,rax
	call ETR_331
; .mov_ptn2 { 0'(= {| a17◂ [ a46◂ [ r]]|} ) 1'(= {| a15◂ [ ]|} ) } ⊢ { 0'(= {| a17◂ [ a46◂ [ r]]|} ) 1'(= {| a15◂ [ ]|} ) }
	ret
LB_5728:
;; ?. 1'(= a2◂ [ r] ) ⊢ 1(<2)◂{ }
;; rsp=0 , %3028~2'(= {| a15◂ [ ]|} ) %3026~0'(= {| a17◂ [ a46◂ [ r]]|} ) 
; ∎ { 0'(= {| a17◂ [ a46◂ [ r]]|} ) 2'(= {| a15◂ [ ]|} ) }
; .mov_ptn2 { 0'(= {| a17◂ [ a46◂ [ r]]|} ) 2'(= {| a15◂ [ ]|} ) } ⊢ { 0'(= {| a17◂ [ a46◂ [ r]]|} ) 1'(= {| a15◂ [ ]|} ) }
; .mov_ptn 2'(= {| a15◂ [ ]|} ) ⊢ 1'(= {| a15◂ [ ]|} )
	mov rax,r8
	mov r14,rax
	ret
LB_5769:
	movzx rax,BYTE [r8+6]
	jmp QWORD [LB_5772+8*rax]
LB_5772: dq LB_5770,LB_5771
LB_5770:
	ALC_RCD 2,r9
	push r8
	push r9
	mov r8,QWORD [r8+8+8*0]
	mov rax,r8
	pop r9  
	pop r8 
	mov QWORD [r9+8+8*0],rax
	push r8
	push r9
	mov r8,QWORD [r8+8+8*1]
	call LB_5769
	pop r9  
	pop r8 
	mov QWORD [r9+8+8*1],rax
	mov rax,r9 
	mov BYTE [rax+6],0
	jmp LB_5773
LB_5771:
	mov rax,unt
	mov BYTE [rax+6],1
	jmp LB_5773
LB_5773:
	ret
ETR_332: ;; mk_rset_env_x { 0'(= {| a17◂ [ a46◂ [ r]]|} ) 1'(= a2◂ [ r] ) } ⊢ { 0'(= {| a17◂ [ a46◂ [ r]]|} ) 1'(= a2◂ [ r] ) 2'(= {| a15◂ [ ]|} ) } : ({ _arr◂_t17◂_t46◂_r64 _lst◂_r64 }→{ _arr◂_t17◂_t46◂_r64 _lst◂_r64 _arr◂_t15 })
;; rsp=0 , %3036~1'(= a2◂ [ r] ) %3035~0'(= {| a17◂ [ a46◂ [ r]]|} ) 
; #278 { } ⊢ 2'(= {| a15◂ [ ]|} )
	sub rsp,16
	mov QWORD [rsp+8*0],r13
	mov QWORD [rsp+8*1],r14
; .mov_ptn2 { } ⊢ { }
	call ETR_278
	mov r14,QWORD [rsp-8+8*2]
	mov r8,r13
	mov r13,QWORD [rsp-8+8*1]
	add rsp,16
;; rsp=0 , %3037~2'(= {| a15◂ [ ]|} ) %3036~1'(= a2◂ [ r] ) %3035~0'(= {| a17◂ [ a46◂ [ r]]|} ) 
; $ 1'(= a2◂ [ r] ) ⊢ 1'(= a2◂ [ r] ),3'(= a2◂ [ r] )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	call LB_5769
	C_POP_REGS
	mov r9,rax
;; rsp=0 , %3039~3'(= a2◂ [ r] ) %3038~1'(= a2◂ [ r] ) %3037~2'(= {| a15◂ [ ]|} ) %3035~0'(= {| a17◂ [ a46◂ [ r]]|} ) 
; #331 { 0'(= {| a17◂ [ a46◂ [ r]]|} ) 3'(= a2◂ [ r] ) 2'(= {| a15◂ [ ]|} ) } ⊢ { 0'(= {| a17◂ [ a46◂ [ r]]|} ) 2'(= {| a15◂ [ ]|} ) }
	sub rsp,8
	mov QWORD [rsp+8*0],r14
; .mov_ptn2 { 0'(= {| a17◂ [ a46◂ [ r]]|} ) 3'(= a2◂ [ r] ) 2'(= {| a15◂ [ ]|} ) } ⊢ { 0'(= {| a17◂ [ a46◂ [ r]]|} ) 1'(= a2◂ [ r] ) 2'(= {| a15◂ [ ]|} ) }
; .mov_ptn 3'(= a2◂ [ r] ) ⊢ 1'(= a2◂ [ r] )
	mov rax,r9
	mov r14,rax
	call ETR_331
	mov r8,r14
	mov r14,QWORD [rsp-8+8*1]
	add rsp,8
;; rsp=0 , %3041~2'(= {| a15◂ [ ]|} ) %3040~0'(= {| a17◂ [ a46◂ [ r]]|} ) %3038~1'(= a2◂ [ r] ) 
; ∎ { 0'(= {| a17◂ [ a46◂ [ r]]|} ) 1'(= a2◂ [ r] ) 2'(= {| a15◂ [ ]|} ) }
; .mov_ptn2 { 0'(= {| a17◂ [ a46◂ [ r]]|} ) 1'(= a2◂ [ r] ) 2'(= {| a15◂ [ ]|} ) } ⊢ { 0'(= {| a17◂ [ a46◂ [ r]]|} ) 1'(= a2◂ [ r] ) 2'(= {| a15◂ [ ]|} ) }
	ret
ETR_333: ;; mk_rset_x 0'(= a17◂ [ a46◂ [ r]] ) ⊢ { 0'(= a17◂ [ a46◂ [ r]] ) 1'(= {| a15◂ [ ]|} ) } : (_t17◂_t46◂_r64→{ _t17◂_t46◂_r64 _arr◂_t15 })
;; rsp=0 , %3042~0'(= a17◂ [ a46◂ [ r]] ) 
; $ 0'(= a17◂ [ a46◂ [ r]] ) ⊢ 0'(= a17◂ [ a46◂ [ r]] ),1'(= a17◂ [ a46◂ [ r]] )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	call LB_5731
	C_POP_REGS
	mov r14,rax
;; rsp=0 , %3044~1'(= a17◂ [ a46◂ [ r]] ) %3043~0'(= a17◂ [ a46◂ [ r]] ) 
; #278 { } ⊢ 2'(= {| a15◂ [ ]|} )
	sub rsp,16
	mov QWORD [rsp+8*0],r13
	mov QWORD [rsp+8*1],r14
; .mov_ptn2 { } ⊢ { }
	call ETR_278
	mov r14,QWORD [rsp-8+8*2]
	mov r8,r13
	mov r13,QWORD [rsp-8+8*1]
	add rsp,16
;; rsp=0 , %3045~2'(= {| a15◂ [ ]|} ) %3044~1'(= a17◂ [ a46◂ [ r]] ) %3043~0'(= a17◂ [ a46◂ [ r]] ) 
; #329 { 1'(= a17◂ [ a46◂ [ r]] ) 2'(= {| a15◂ [ ]|} ) } ⊢ 1'(= {| a15◂ [ ]|} )
	sub rsp,8
	mov QWORD [rsp+8*0],r13
; .mov_ptn2 { 1'(= a17◂ [ a46◂ [ r]] ) 2'(= {| a15◂ [ ]|} ) } ⊢ { 0'(= a17◂ [ a46◂ [ r]] ) 1'(= {| a15◂ [ ]|} ) }
; .mov_ptn 1'(= a17◂ [ a46◂ [ r]] ) ⊢ 0'(= a17◂ [ a46◂ [ r]] )
	mov rax,r14
	mov r13,rax
; .mov_ptn 2'(= {| a15◂ [ ]|} ) ⊢ 1'(= {| a15◂ [ ]|} )
	mov rax,r8
	mov r14,rax
	call ETR_329
	mov r14,r13
	mov r13,QWORD [rsp-8+8*1]
	add rsp,8
;; rsp=0 , %3046~1'(= {| a15◂ [ ]|} ) %3043~0'(= a17◂ [ a46◂ [ r]] ) 
; ∎ { 0'(= a17◂ [ a46◂ [ r]] ) 1'(= {| a15◂ [ ]|} ) }
; .mov_ptn2 { 0'(= a17◂ [ a46◂ [ r]] ) 1'(= {| a15◂ [ ]|} ) } ⊢ { 0'(= a17◂ [ a46◂ [ r]] ) 1'(= {| a15◂ [ ]|} ) }
	ret
ETR_337: ;; r64_im 0'(= r ) ⊢ 0'(= a17◂ [ a46◂ [ q0]] ) : (_r64→_t17◂_t46◂7221'(1))
;; rsp=0 , %3065~0'(= r ) 
; #89 0'(= r ) ⊢ 0(<2)◂0'(= r )
;; rsp=0 , %3066~0(<2)◂0'(= r ) 
; #315 0(<2)◂0'(= r ) ⊢ 1(<5)◂0(<2)◂0'(= r )
;; rsp=0 , %3067~1(<5)◂0(<2)◂0'(= r ) 
; #83 1(<5)◂0(<2)◂0'(= r ) ⊢ 1(<2)◂1(<5)◂0(<2)◂0'(= r )
;; rsp=0 , %3068~1(<2)◂1(<5)◂0(<2)◂0'(= r ) 
; ∎ 1(<2)◂1(<5)◂0(<2)◂0'(= r )
; .mov_ptn2 1(<2)◂1(<5)◂0(<2)◂0'(= r ) ⊢ 0'(= a17◂ [ a46◂ [ q0]] )
	mov r14,r13
; .mov_ptn 1(<2)◂1(<5)◂0(<2)◂1'(= r ) ⊢ 0'(= a17◂ [ a46◂ [ q0]] )
	mov rax,r14
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],1
	mov QWORD [rax+8],rdi
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],1
	mov QWORD [rax+8],rdi
	mov r13,rax
	ret
ETR_339: ;; s8_im 0'(= {| l |} ) ⊢ 0'(= a17◂ [ a46◂ [ q0]] ) : (_s8→_t17◂_t46◂7243'(1))
;; rsp=0 , %3074~0'(= {| l |} ) 
; #88 0'(= {| l |} ) ⊢ 1(<2)◂0'(= {| l |} )
;; rsp=0 , %3075~1(<2)◂0'(= {| l |} ) 
; #315 1(<2)◂0'(= {| l |} ) ⊢ 1(<5)◂1(<2)◂0'(= {| l |} )
;; rsp=0 , %3076~1(<5)◂1(<2)◂0'(= {| l |} ) 
; #83 1(<5)◂1(<2)◂0'(= {| l |} ) ⊢ 1(<2)◂1(<5)◂1(<2)◂0'(= {| l |} )
;; rsp=0 , %3077~1(<2)◂1(<5)◂1(<2)◂0'(= {| l |} ) 
; ∎ 1(<2)◂1(<5)◂1(<2)◂0'(= {| l |} )
; .mov_ptn2 1(<2)◂1(<5)◂1(<2)◂0'(= {| l |} ) ⊢ 0'(= a17◂ [ a46◂ [ q0]] )
	mov r14,r13
; .mov_ptn 1(<2)◂1(<5)◂1(<2)◂1'(= {| l |} ) ⊢ 0'(= a17◂ [ a46◂ [ q0]] )
	mov rax,r14
	mov BYTE [rax+6],1
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],1
	mov QWORD [rax+8],rdi
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],1
	mov QWORD [rax+8],rdi
	mov r13,rax
	ret
ETR_344: ;; pnt 0'(= r ) ⊢ { 0'(= r ) 1'(= {| l |} ) } : (_r64→{ _r64 _s8 })
;; rsp=0 , %3095~0'(= r ) 
; » _^ .. ⊢ ..
; .. //
	mov rdi,0
	sub rsp,128
	push rdi 
	lea rdi,[rsp+8]
	mov rdx,r13
	mov rsi,fmt_d
 xor rax,rax
	C_CALL_SF sprintf
	pop rdi
	add rdi,rax 
	push rax 
	add rdi,18
	push rdi 
	call mlc_s8
	pop rdi
	mov r14,rax
	lea rdi,[rax+7+rdi]
	std 
	mov QWORD [tmp],rcx 
	lea rsi,[LB_5774+1-1]
	mov rcx,1
	rep movsb
	pop rcx
	lea rsi,[rsp+rcx-1]
	rep movsb
	add rsp,128
	lea rsi,[LB_5775+17-1]
	mov rcx,17
	rep movsb
	mov rcx,QWORD [tmp] 
;; rsp=0 , %3097~1'(= {| l |} ) %3096~0'(= r ) 
; ∎ { 0'(= r ) 1'(= {| l |} ) }
; .mov_ptn2 { 0'(= r ) 1'(= {| l |} ) } ⊢ { 0'(= r ) 1'(= {| l |} ) }
	ret
ETR_345: ;; ini { } ⊢ { 0'(= r ) 1'(= a2◂ [ q0] ) } : ({ }→{ _r64 _lst◂7292'(1) })
;; rsp=0 , 
; $ %[ 0r ] ⊢ %[ 0r ]
;; rsp=0 , %3098~%[ 0r ] 
; #22 { } ⊢ 1(<2)◂{ }
;; rsp=0 , %3099~1(<2)◂{ } %3098~%[ 0r ] 
; ∎ { %[ 0r ] 1(<2)◂{ } }
; .mov_ptn2 { %[ 0r ] 1(<2)◂{ } } ⊢ { 0'(= r ) 1'(= a2◂ [ q0] ) }
; .mov_ptn 1(<2)◂{ } ⊢ 1'(= a2◂ [ q0] )
	mov rax,unt 
	mov rax,unt_1
	mov r14,rax
; .mov_ptn %[ 0r ] ⊢ 0'(= r )
	mov rax,0
	mov r13,rax
	ret
ETR_346: ;; dlt { 0'(= a2◂ [ *{ ra52◂ [ ]}] ) 1'(= a14◂ [ ] ) } ⊢ 0'(= a14◂ [ ] ) : ({ _lst◂{ _r64 _t52 } _t14 }→_t14)
;; rsp=0 , %3101~1'(= a14◂ [ ] ) %3100~0'(= a2◂ [ *{ ra52◂ [ ]}] ) 
;; ? 0'(= a2◂ [ *{ ra52◂ [ ]}] ) ⊢ 0(<2)◂{ { 3'(= r ) 4'(= a52◂ [ ] ) } 5'(= a2◂ [ *{ ra52◂ [ ]}] ) }
	mov rdi,r13
	cmp BYTE [rdi+6],0
	jnz LB_5777
	jmp LB_5778
LB_5777:
	jmp LB_5776
LB_5778:
	mov r8, QWORD [r13+8]
	mov r9, QWORD [r8+8]
	mov r10, QWORD [r8+16]
	mov QWORD [GBG_VCT+8*0],r8
	mov r11, QWORD [r13+16]
	mov QWORD [GBG_VCT+8*1],r13
	mov rdi,QWORD [GBG_VCT+8*1]
	FREE_RCD 2,rdi
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_RCD 2,rdi
;; rsp=0 , %3104~5'(= a2◂ [ *{ ra52◂ [ ]}] ) %3103~4'(= a52◂ [ ] ) %3102~3'(= r ) %3101~1'(= a14◂ [ ] ) 
;; ? 4'(= a52◂ [ ] ) ⊢ 0(<2)◂{ }
	mov rdi,r10
	cmp BYTE [rdi+6],0
	jnz LB_5780
	jmp LB_5781
LB_5780:
	jmp LB_5779
LB_5781:
;; rsp=0 , %3104~5'(= a2◂ [ *{ ra52◂ [ ]}] ) %3102~3'(= r ) %3101~1'(= a14◂ [ ] ) 
; #344 3'(= r ) ⊢ { 0'(= r ) 2'(= {| l |} ) }
	sub rsp,16
	mov QWORD [rsp+8*0],r14
	mov QWORD [rsp+8*1],r11
; .mov_ptn2 3'(= r ) ⊢ 0'(= r )
; .mov_ptn 3'(= r ) ⊢ 0'(= r )
	mov rax,r9
	mov r13,rax
	call ETR_344
	mov r11,QWORD [rsp-8+8*2]
	mov r8,r14
	mov r14,QWORD [rsp-8+8*1]
	add rsp,16
;; rsp=0 , %3107~2'(= {| l |} ) %3106~0'(= r ) %3104~5'(= a2◂ [ *{ ra52◂ [ ]}] ) %3101~1'(= a14◂ [ ] ) 
; » _^ .. ⊢ ..
; .. //
	mov rdi,0
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[r8]
	add rdi,rax 
	push rax
	add rdi,23
	push rdi 
	call mlc_s8
	pop rdi
	mov r8,rax
	lea rdi,[rax+7+rdi]
	std 
	mov QWORD [tmp],rcx 
	lea rsi,[LB_5782+14-1]
	mov rcx,14
	rep movsb
	pop rcx
	lea rsi,[r8+7+rcx]
	rep movsb
	lea rsi,[LB_5783+9-1]
	mov rcx,9
	rep movsb
	mov rcx,QWORD [tmp] 
;; rsp=0 , %3109~2'(= {| l |} ) %3106~0'(= r ) %3104~5'(= a2◂ [ *{ ra52◂ [ ]}] ) %3101~1'(= a14◂ [ ] ) 
; #42 { 1'(= a14◂ [ ] ) 2'(= {| l |} ) } ⊢ 1'(= a14◂ [ ] )
	sub rsp,16
	mov QWORD [rsp+8*0],r13
	mov QWORD [rsp+8*1],r11
; .mov_ptn2 { 1'(= a14◂ [ ] ) 2'(= {| l |} ) } ⊢ { 0'(= a14◂ [ ] ) 1'(= {| l |} ) }
; .mov_ptn 1'(= a14◂ [ ] ) ⊢ 0'(= a14◂ [ ] )
	mov rax,r14
	mov r13,rax
; .mov_ptn 2'(= {| l |} ) ⊢ 1'(= {| l |} )
	mov rax,r8
	mov r14,rax
	call ETR_42
	mov r11,QWORD [rsp-8+8*2]
	mov r14,r13
	mov r13,QWORD [rsp-8+8*1]
	add rsp,16
;; rsp=0 , %3110~1'(= a14◂ [ ] ) %3106~0'(= r ) %3104~5'(= a2◂ [ *{ ra52◂ [ ]}] ) 
; #346 { 5'(= a2◂ [ *{ ra52◂ [ ]}] ) 1'(= a14◂ [ ] ) } ⊢|
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 { 5'(= a2◂ [ *{ ra52◂ [ ]}] ) 1'(= a14◂ [ ] ) } ⊢ { 0'(= a2◂ [ *{ ra52◂ [ ]}] ) 1'(= a14◂ [ ] ) }
; .mov_ptn 5'(= a2◂ [ *{ ra52◂ [ ]}] ) ⊢ 0'(= a2◂ [ *{ ra52◂ [ ]}] )
	mov rax,r11
	mov r13,rax
	call ETR_346
; .mov_ptn2 0'(= a14◂ [ ] ) ⊢ 0'(= a14◂ [ ] )
	ret
LB_5779:
;; ?. 4'(= a52◂ [ ] ) ⊢ 1(<2)◂0'(= r )
	mov QWORD [GBG_VCT+8*0],rdi
	mov r13,QWORD [rdi+8]
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_LN rdi
;; rsp=0 , %3105~0'(= r ) %3104~5'(= a2◂ [ *{ ra52◂ [ ]}] ) %3102~3'(= r ) %3101~1'(= a14◂ [ ] ) 
; #344 3'(= r ) ⊢ { 3'(= r ) 2'(= {| l |} ) }
	sub rsp,24
	mov QWORD [rsp+8*0],r13
	mov QWORD [rsp+8*1],r14
	mov QWORD [rsp+8*2],r11
; .mov_ptn2 3'(= r ) ⊢ 0'(= r )
; .mov_ptn 3'(= r ) ⊢ 0'(= r )
	mov rax,r9
	mov r13,rax
	call ETR_344
	mov r11,QWORD [rsp-8+8*3]
	mov r8,r14
	mov r14,QWORD [rsp-8+8*2]
	mov r9,r13
	mov r13,QWORD [rsp-8+8*1]
	add rsp,24
;; rsp=0 , %3112~2'(= {| l |} ) %3111~3'(= r ) %3105~0'(= r ) %3104~5'(= a2◂ [ *{ ra52◂ [ ]}] ) %3101~1'(= a14◂ [ ] ) 
; » _^ .. ⊢ ..
; .. //
	mov rdi,0
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[r8]
	add rdi,rax 
	push rax
	sub rsp,128
	push rdi 
	lea rdi,[rsp+8]
	mov rdx,r13
	mov rsi,fmt_d
 xor rax,rax
	C_CALL_SF sprintf
	pop rdi
	add rdi,rax 
	push rax 
	add rdi,25
	push rdi 
	call mlc_s8
	pop rdi
	mov r13,rax
	lea rdi,[rax+7+rdi]
	std 
	mov QWORD [tmp],rcx 
	lea rsi,[LB_5784+5-1]
	mov rcx,5
	rep movsb
	pop rcx
	lea rsi,[rsp+rcx-1]
	rep movsb
	add rsp,128
	lea rsi,[LB_5785+11-1]
	mov rcx,11
	rep movsb
	pop rcx
	lea rsi,[r8+7+rcx]
	rep movsb
	lea rsi,[LB_5786+9-1]
	mov rcx,9
	rep movsb
	mov rcx,QWORD [tmp] 
;; rsp=0 , %3115~0'(= {| l |} ) %3111~3'(= r ) %3104~5'(= a2◂ [ *{ ra52◂ [ ]}] ) %3101~1'(= a14◂ [ ] ) 
; #42 { 1'(= a14◂ [ ] ) 0'(= {| l |} ) } ⊢ 0'(= a14◂ [ ] )
	sub rsp,16
	mov QWORD [rsp+8*0],r9
	mov QWORD [rsp+8*1],r11
; .mov_ptn2 { 1'(= a14◂ [ ] ) 0'(= {| l |} ) } ⊢ { 0'(= a14◂ [ ] ) 1'(= {| l |} ) }
	mov r8,r13
; .mov_ptn 1'(= a14◂ [ ] ) ⊢ 0'(= a14◂ [ ] )
	mov rax,r14
	mov r13,rax
; .mov_ptn 2'(= {| l |} ) ⊢ 1'(= {| l |} )
	mov rax,r8
	mov r14,rax
	call ETR_42
	mov r11,QWORD [rsp-8+8*2]
	mov r9,QWORD [rsp-8+8*1]
	add rsp,16
;; rsp=0 , %3116~0'(= a14◂ [ ] ) %3111~3'(= r ) %3104~5'(= a2◂ [ *{ ra52◂ [ ]}] ) 
; #346 { 5'(= a2◂ [ *{ ra52◂ [ ]}] ) 0'(= a14◂ [ ] ) } ⊢|
; .dlt.ptn 3'(= r )
	mov rdi,r9
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 { 5'(= a2◂ [ *{ ra52◂ [ ]}] ) 0'(= a14◂ [ ] ) } ⊢ { 0'(= a2◂ [ *{ ra52◂ [ ]}] ) 1'(= a14◂ [ ] ) }
; .mov_ptn 0'(= a14◂ [ ] ) ⊢ 1'(= a14◂ [ ] )
	mov rax,r13
	mov r14,rax
; .mov_ptn 5'(= a2◂ [ *{ ra52◂ [ ]}] ) ⊢ 0'(= a2◂ [ *{ ra52◂ [ ]}] )
	mov rax,r11
	mov r13,rax
	call ETR_346
; .mov_ptn2 0'(= a14◂ [ ] ) ⊢ 0'(= a14◂ [ ] )
	ret
LB_5776:
;; ?. 0'(= a2◂ [ *{ ra52◂ [ ]}] ) ⊢ 1(<2)◂{ }
;; rsp=0 , %3101~1'(= a14◂ [ ] ) 
; ∎ 1'(= a14◂ [ ] )
; .mov_ptn2 1'(= a14◂ [ ] ) ⊢ 0'(= a14◂ [ ] )
; .mov_ptn 1'(= a14◂ [ ] ) ⊢ 0'(= a14◂ [ ] )
	mov rax,r14
	mov r13,rax
	ret
ETR_349: ;; mk_nil_arr 0'(= r ) ⊢ { 0'(= r ) 1'(= {| a2◂ [ q0]|} ) } : (_r64→{ _r64 _arr◂_lst◂7580'(1) })
;; rsp=0 , %3263~0'(= r ) 
; #22 { } ⊢ 1(<2)◂{ }
;; rsp=0 , %3264~1(<2)◂{ } %3263~0'(= r ) 
; #0 { 0'(= r ) 1(<2)◂{ } } ⊢ { 0'(= r ) 1(<2)◂{ } 1'(= {| a2◂ [ q0]|} ) }
	mov rdi,r13
	push rdi 
	lea rsi,[8+8*rdi]
	mov rdi,1 
 C_CALL_SF calloc
	pop rdi 
	mov r14,rax
	mov QWORD [rax],rdi 
LB_5787:
	cmp rdi,0 
	jz LB_5788
	sub rdi,1
	mov r9,rdi
; .mov_ptn2 1(<2)◂{ } ⊢ 2'(= a2◂ [ q0] )
	mov r10,r8
; .mov_ptn 1(<2)◂{ } ⊢ 2'(= a2◂ [ q0] )
	mov rax,unt 
	mov rax,unt_1
	mov r8,rax
	mov rsi,r14
	mov rax,r8
	mov rdi,r9
	mov QWORD [rsi+8+8*rdi],rax 
	jmp LB_5787
LB_5788:
; .dlt.ptn 1(<2)◂{ }
;; rsp=0 , %3267~1'(= {| a2◂ [ q0]|} ) %3265~0'(= r ) 
; ∎ { 0'(= r ) 1'(= {| a2◂ [ q0]|} ) }
; .mov_ptn2 { 0'(= r ) 1'(= {| a2◂ [ q0]|} ) } ⊢ { 0'(= r ) 1'(= {| a2◂ [ q0]|} ) }
	ret
ETR_350: ;; mk_none_arr 0'(= r ) ⊢ { 0'(= r ) 1'(= {| a3◂ [ q0]|} ) } : (_r64→{ _r64 _arr◂_opn◂7595'(1) })
;; rsp=0 , %3268~0'(= r ) 
; #25 { } ⊢ 1(<2)◂{ }
;; rsp=0 , %3269~1(<2)◂{ } %3268~0'(= r ) 
; #0 { 0'(= r ) 1(<2)◂{ } } ⊢ { 0'(= r ) 1(<2)◂{ } 1'(= {| a3◂ [ q0]|} ) }
	mov rdi,r13
	push rdi 
	lea rsi,[8+8*rdi]
	mov rdi,1 
 C_CALL_SF calloc
	pop rdi 
	mov r14,rax
	mov QWORD [rax],rdi 
LB_5789:
	cmp rdi,0 
	jz LB_5790
	sub rdi,1
	mov r9,rdi
; .mov_ptn2 1(<2)◂{ } ⊢ 2'(= a3◂ [ q0] )
	mov r10,r8
; .mov_ptn 1(<2)◂{ } ⊢ 2'(= a3◂ [ q0] )
	mov rax,unt 
	mov rax,unt_1
	mov r8,rax
	mov rsi,r14
	mov rax,r8
	mov rdi,r9
	mov QWORD [rsi+8+8*rdi],rax 
	jmp LB_5789
LB_5790:
; .dlt.ptn 1(<2)◂{ }
;; rsp=0 , %3272~1'(= {| a3◂ [ q0]|} ) %3270~0'(= r ) 
; ∎ { 0'(= r ) 1'(= {| a3◂ [ q0]|} ) }
; .mov_ptn2 { 0'(= r ) 1'(= {| a3◂ [ q0]|} ) } ⊢ { 0'(= r ) 1'(= {| a3◂ [ q0]|} ) }
	ret
LB_5794:
	movzx rax,BYTE [r8+6]
	jmp QWORD [LB_5798+8*rax]
LB_5798: dq LB_5796,LB_5797
LB_5796:
	mov rdi,LB_5800
	call emt_stg 
	mov rdi,fmt_rcd_box_l
	call emt_stg
	push r8
	mov r8,QWORD [r8+8+8*0]
	call LB_5801
	pop r8 
	mov rdi,fmt_spc 
	call emt_stg 
	push r8
	mov r8,QWORD [r8+8+8*1]
	call LB_5794
	pop r8 
	mov rdi,fmt_spc 
	call emt_stg 
	mov rdi,fmt_rcd_r
	call emt_stg
	jmp LB_5799
LB_5797:
	mov rdi,LB_5802
	call emt_stg 
	mov rdi,fmt_rcd_box_l
	call emt_stg
	mov rdi,fmt_rcd_r
	call emt_stg
	jmp LB_5799
LB_5799:
	ret
LB_5801:
	movzx rax,BYTE [r8+6]
	jmp QWORD [LB_5809+8*rax]
LB_5809: dq LB_5803,LB_5804,LB_5805,LB_5806,LB_5807,LB_5808
LB_5803:
	mov rdi,LB_5811
	call emt_stg 
	mov rdi,fmt_rcd_box_l
	call emt_stg
	push r8
	mov r8,QWORD [r8+8+8*0]
	mov rdi,r8
	call emt_s8
	pop r8 
	mov rdi,fmt_spc 
	call emt_stg 
	push r8
	mov r8,QWORD [r8+8+8*1]
	call LB_5812
	pop r8 
	mov rdi,fmt_spc 
	call emt_stg 
	mov rdi,fmt_rcd_r
	call emt_stg
	jmp LB_5810
LB_5804:
	mov rdi,LB_5813
	call emt_stg 
	mov r8,QWORD [r8+8]
	call LB_5814
	jmp LB_5810
LB_5805:
	mov rdi,LB_5815
	call emt_stg 
	mov rdi,fmt_rcd_box_l
	call emt_stg
	push r8
	mov r8,QWORD [r8+8+8*0]
	mov rdi,r8
	call emt_s8
	pop r8 
	mov rdi,fmt_spc 
	call emt_stg 
	push r8
	mov r8,QWORD [r8+8+8*1]
	call LB_5816
	pop r8 
	mov rdi,fmt_spc 
	call emt_stg 
	mov rdi,fmt_rcd_r
	call emt_stg
	jmp LB_5810
LB_5806:
	mov rdi,LB_5817
	call emt_stg 
	mov r8,QWORD [r8+8]
	call LB_5818
	jmp LB_5810
LB_5807:
	mov rdi,LB_5819
	call emt_stg 
	mov rdi,fmt_rcd_box_l
	call emt_stg
	push r8
	mov r8,QWORD [r8+8+8*0]
	mov rdi,r8
	call emt_s8
	pop r8 
	mov rdi,fmt_spc 
	call emt_stg 
	push r8
	mov r8,QWORD [r8+8+8*1]
	call LB_5820
	pop r8 
	mov rdi,fmt_spc 
	call emt_stg 
	mov rdi,fmt_rcd_r
	call emt_stg
	jmp LB_5810
LB_5808:
	mov rdi,LB_5821
	call emt_stg 
	mov r8,QWORD [r8+8]
	call LB_5822
	jmp LB_5810
LB_5810:
	ret
LB_5822:
	movzx rax,BYTE [r8+6]
	jmp QWORD [LB_5825+8*rax]
LB_5825: dq LB_5823,LB_5824
LB_5823:
	mov rdi,LB_5827
	call emt_stg 
	mov rdi,fmt_rcd_box_l
	call emt_stg
	push r8
	mov r8,QWORD [r8+8+8*0]
	mov rdi,fmt_rcd_box_l
	call emt_stg
	push r8
	mov r8,QWORD [r8+8+8*0]
	mov rdi,r8
	call emt_s8
	pop r8 
	mov rdi,fmt_spc 
	call emt_stg 
	push r8
	mov r8,QWORD [r8+8+8*1]
	call LB_5820
	pop r8 
	mov rdi,fmt_spc 
	call emt_stg 
	mov rdi,fmt_rcd_r
	call emt_stg
	pop r8 
	mov rdi,fmt_spc 
	call emt_stg 
	push r8
	mov r8,QWORD [r8+8+8*1]
	call LB_5822
	pop r8 
	mov rdi,fmt_spc 
	call emt_stg 
	mov rdi,fmt_rcd_r
	call emt_stg
	jmp LB_5826
LB_5824:
	mov rdi,LB_5828
	call emt_stg 
	mov rdi,fmt_rcd_box_l
	call emt_stg
	mov rdi,fmt_rcd_r
	call emt_stg
	jmp LB_5826
LB_5826:
	ret
LB_5820:
	movzx rax,BYTE [r8+6]
	jmp QWORD [LB_5831+8*rax]
LB_5831: dq LB_5829,LB_5830
LB_5829:
	mov rdi,LB_5833
	call emt_stg 
	mov rdi,fmt_rcd_box_l
	call emt_stg
	push r8
	mov r8,QWORD [r8+8+8*0]
	call LB_5834
	pop r8 
	mov rdi,fmt_spc 
	call emt_stg 
	push r8
	mov r8,QWORD [r8+8+8*1]
	call LB_5835
	pop r8 
	mov rdi,fmt_spc 
	call emt_stg 
	mov rdi,fmt_rcd_r
	call emt_stg
	jmp LB_5832
LB_5830:
	mov rdi,LB_5836
	call emt_stg 
	mov rdi,fmt_rcd_box_l
	call emt_stg
	push r8
	mov r8,QWORD [r8+8+8*0]
	call LB_5834
	pop r8 
	mov rdi,fmt_spc 
	call emt_stg 
	push r8
	mov r8,QWORD [r8+8+8*1]
	call LB_5837
	pop r8 
	mov rdi,fmt_spc 
	call emt_stg 
	mov rdi,fmt_rcd_r
	call emt_stg
	jmp LB_5832
LB_5832:
	ret
LB_5837:
	movzx rax,BYTE [r8+6]
	jmp QWORD [LB_5843+8*rax]
LB_5843: dq LB_5838,LB_5839,LB_5840,LB_5841,LB_5842
LB_5838:
	mov rdi,LB_5845
	call emt_stg 
	mov r8,QWORD [r8+8]
	call LB_5846
	jmp LB_5844
LB_5839:
	mov rdi,LB_5847
	call emt_stg 
	mov rdi,fmt_rcd_box_l
	call emt_stg
	push r8
	mov r8,QWORD [r8+8+8*0]
	call LB_5837
	pop r8 
	mov rdi,fmt_spc 
	call emt_stg 
	push r8
	mov r8,QWORD [r8+8+8*1]
	call LB_5837
	pop r8 
	mov rdi,fmt_spc 
	call emt_stg 
	mov rdi,fmt_rcd_r
	call emt_stg
	jmp LB_5844
LB_5840:
	mov rdi,LB_5848
	call emt_stg 
	mov rdi,fmt_rcd_box_l
	call emt_stg
	push r8
	mov r8,QWORD [r8+8+8*0]
	call LB_5837
	pop r8 
	mov rdi,fmt_spc 
	call emt_stg 
	push r8
	mov r8,QWORD [r8+8+8*1]
	call LB_5837
	pop r8 
	mov rdi,fmt_spc 
	call emt_stg 
	mov rdi,fmt_rcd_r
	call emt_stg
	jmp LB_5844
LB_5841:
	mov rdi,LB_5849
	call emt_stg 
	mov r8,QWORD [r8+8]
	call LB_5850
	jmp LB_5844
LB_5842:
	mov rdi,LB_5851
	call emt_stg 
	mov rdi,r8
	call emt_s8
	jmp LB_5844
LB_5844:
	ret
LB_5850:
	movzx rax,BYTE [r8+6]
	jmp QWORD [LB_5854+8*rax]
LB_5854: dq LB_5852,LB_5853
LB_5852:
	mov rdi,LB_5856
	call emt_stg 
	mov rdi,fmt_rcd_box_l
	call emt_stg
	push r8
	mov r8,QWORD [r8+8+8*0]
	mov rdi,r8
	call emt_s8
	pop r8 
	mov rdi,fmt_spc 
	call emt_stg 
	push r8
	mov r8,QWORD [r8+8+8*1]
	call LB_5850
	pop r8 
	mov rdi,fmt_spc 
	call emt_stg 
	mov rdi,fmt_rcd_r
	call emt_stg
	jmp LB_5855
LB_5853:
	mov rdi,LB_5857
	call emt_stg 
	mov rdi,r8
	call emt_s8
	jmp LB_5855
LB_5855:
	ret
LB_5846:
	movzx rax,BYTE [r8+6]
	jmp QWORD [LB_5860+8*rax]
LB_5860: dq LB_5858,LB_5859
LB_5858:
	mov rdi,LB_5862
	call emt_stg 
	mov rdi,fmt_rcd_box_l
	call emt_stg
	push r8
	mov r8,QWORD [r8+8+8*0]
	call LB_5837
	pop r8 
	mov rdi,fmt_spc 
	call emt_stg 
	push r8
	mov r8,QWORD [r8+8+8*1]
	call LB_5846
	pop r8 
	mov rdi,fmt_spc 
	call emt_stg 
	mov rdi,fmt_rcd_r
	call emt_stg
	jmp LB_5861
LB_5859:
	mov rdi,LB_5863
	call emt_stg 
	mov rdi,fmt_rcd_box_l
	call emt_stg
	mov rdi,fmt_rcd_r
	call emt_stg
	jmp LB_5861
LB_5861:
	ret
LB_5835:
	movzx rax,BYTE [r8+6]
	jmp QWORD [LB_5866+8*rax]
LB_5866: dq LB_5864,LB_5865
LB_5864:
	mov rdi,LB_5868
	call emt_stg 
	mov rdi,fmt_rcd_box_l
	call emt_stg
	push r8
	mov r8,QWORD [r8+8+8*0]
	mov rdi,fmt_rcd_box_l
	call emt_stg
	push r8
	mov r8,QWORD [r8+8+8*0]
	mov rdi,r8
	call emt_s8
	pop r8 
	mov rdi,fmt_spc 
	call emt_stg 
	push r8
	mov r8,QWORD [r8+8+8*1]
	call LB_5837
	pop r8 
	mov rdi,fmt_spc 
	call emt_stg 
	mov rdi,fmt_rcd_r
	call emt_stg
	pop r8 
	mov rdi,fmt_spc 
	call emt_stg 
	push r8
	mov r8,QWORD [r8+8+8*1]
	call LB_5835
	pop r8 
	mov rdi,fmt_spc 
	call emt_stg 
	mov rdi,fmt_rcd_r
	call emt_stg
	jmp LB_5867
LB_5865:
	mov rdi,LB_5869
	call emt_stg 
	mov rdi,fmt_rcd_box_l
	call emt_stg
	mov rdi,fmt_rcd_r
	call emt_stg
	jmp LB_5867
LB_5867:
	ret
LB_5834:
	movzx rax,BYTE [r8+6]
	jmp QWORD [LB_5872+8*rax]
LB_5872: dq LB_5870,LB_5871
LB_5870:
	mov rdi,LB_5874
	call emt_stg 
	mov rdi,fmt_rcd_box_l
	call emt_stg
	push r8
	mov r8,QWORD [r8+8+8*0]
	mov rdi,r8
	call emt_s8
	pop r8 
	mov rdi,fmt_spc 
	call emt_stg 
	push r8
	mov r8,QWORD [r8+8+8*1]
	call LB_5834
	pop r8 
	mov rdi,fmt_spc 
	call emt_stg 
	mov rdi,fmt_rcd_r
	call emt_stg
	jmp LB_5873
LB_5871:
	mov rdi,LB_5875
	call emt_stg 
	mov rdi,fmt_rcd_box_l
	call emt_stg
	mov rdi,fmt_rcd_r
	call emt_stg
	jmp LB_5873
LB_5873:
	ret
LB_5818:
	movzx rax,BYTE [r8+6]
	jmp QWORD [LB_5878+8*rax]
LB_5878: dq LB_5876,LB_5877
LB_5876:
	mov rdi,LB_5880
	call emt_stg 
	mov rdi,fmt_rcd_box_l
	call emt_stg
	push r8
	mov r8,QWORD [r8+8+8*0]
	mov rdi,fmt_rcd_box_l
	call emt_stg
	push r8
	mov r8,QWORD [r8+8+8*0]
	mov rdi,r8
	call emt_s8
	pop r8 
	mov rdi,fmt_spc 
	call emt_stg 
	push r8
	mov r8,QWORD [r8+8+8*1]
	call LB_5881
	pop r8 
	mov rdi,fmt_spc 
	call emt_stg 
	push r8
	mov r8,QWORD [r8+8+8*2]
	call LB_5882
	pop r8 
	mov rdi,fmt_spc 
	call emt_stg 
	push r8
	mov r8,QWORD [r8+8+8*3]
	call LB_5883
	pop r8 
	mov rdi,fmt_spc 
	call emt_stg 
	mov rdi,fmt_rcd_r
	call emt_stg
	pop r8 
	mov rdi,fmt_spc 
	call emt_stg 
	push r8
	mov r8,QWORD [r8+8+8*1]
	call LB_5818
	pop r8 
	mov rdi,fmt_spc 
	call emt_stg 
	mov rdi,fmt_rcd_r
	call emt_stg
	jmp LB_5879
LB_5877:
	mov rdi,LB_5884
	call emt_stg 
	mov rdi,fmt_rcd_box_l
	call emt_stg
	mov rdi,fmt_rcd_r
	call emt_stg
	jmp LB_5879
LB_5879:
	ret
LB_5883:
	movzx rax,BYTE [r8+6]
	jmp QWORD [LB_5892+8*rax]
LB_5892: dq LB_5885,LB_5886,LB_5887,LB_5888,LB_5889,LB_5890,LB_5891
LB_5885:
	mov rdi,LB_5894
	call emt_stg 
	mov rdi,fmt_rcd_box_l
	call emt_stg
	push r8
	mov r8,QWORD [r8+8+8*0]
	call LB_5850
	pop r8 
	mov rdi,fmt_spc 
	call emt_stg 
	push r8
	mov r8,QWORD [r8+8+8*1]
	call LB_5895
	pop r8 
	mov rdi,fmt_spc 
	call emt_stg 
	mov rdi,fmt_rcd_r
	call emt_stg
	jmp LB_5893
LB_5886:
	mov rdi,LB_5896
	call emt_stg 
	mov rdi,fmt_rcd_box_l
	call emt_stg
	push r8
	mov r8,QWORD [r8+8+8*0]
	call LB_5897
	pop r8 
	mov rdi,fmt_spc 
	call emt_stg 
	push r8
	mov r8,QWORD [r8+8+8*1]
	call LB_5895
	pop r8 
	mov rdi,fmt_spc 
	call emt_stg 
	mov rdi,fmt_rcd_r
	call emt_stg
	jmp LB_5893
LB_5887:
	mov rdi,LB_5898
	call emt_stg 
	mov rdi,fmt_rcd_box_l
	call emt_stg
	push r8
	mov r8,QWORD [r8+8+8*0]
	call LB_5899
	pop r8 
	mov rdi,fmt_spc 
	call emt_stg 
	push r8
	mov r8,QWORD [r8+8+8*1]
	call LB_5883
	pop r8 
	mov rdi,fmt_spc 
	call emt_stg 
	mov rdi,fmt_rcd_r
	call emt_stg
	jmp LB_5893
LB_5888:
	mov rdi,LB_5900
	call emt_stg 
	mov r8,QWORD [r8+8]
	call LB_5901
	jmp LB_5893
LB_5889:
	mov rdi,LB_5902
	call emt_stg 
	mov rdi,fmt_rcd_box_l
	call emt_stg
	push r8
	mov r8,QWORD [r8+8+8*0]
	call LB_5895
	pop r8 
	mov rdi,fmt_spc 
	call emt_stg 
	push r8
	mov r8,QWORD [r8+8+8*1]
	call LB_5903
	pop r8 
	mov rdi,fmt_spc 
	call emt_stg 
	mov rdi,fmt_rcd_r
	call emt_stg
	jmp LB_5893
LB_5890:
	mov rdi,LB_5904
	call emt_stg 
	mov r8,QWORD [r8+8]
	call LB_5905
	jmp LB_5893
LB_5891:
	mov rdi,LB_5906
	call emt_stg 
	mov r8,QWORD [r8+8]
	mov rdi,r8 
	call emt_r64 
	jmp LB_5893
LB_5893:
	ret
LB_5905:
	movzx rax,BYTE [r8+6]
	jmp QWORD [LB_5909+8*rax]
LB_5909: dq LB_5907,LB_5908
LB_5907:
	mov rdi,LB_5911
	call emt_stg 
	mov r8,QWORD [r8+8]
	call LB_5895
	jmp LB_5910
LB_5908:
	mov rdi,LB_5912
	call emt_stg 
	mov rdi,fmt_rcd_box_l
	call emt_stg
	mov rdi,fmt_rcd_r
	call emt_stg
	jmp LB_5910
LB_5910:
	ret
LB_5903:
	movzx rax,BYTE [r8+6]
	jmp QWORD [LB_5915+8*rax]
LB_5915: dq LB_5913,LB_5914
LB_5913:
	mov rdi,LB_5917
	call emt_stg 
	mov r8,QWORD [r8+8]
	call LB_5918
	jmp LB_5916
LB_5914:
	mov rdi,LB_5919
	call emt_stg 
	mov rdi,fmt_rcd_box_l
	call emt_stg
	push r8
	mov r8,QWORD [r8+8+8*0]
	call LB_5920
	pop r8 
	mov rdi,fmt_spc 
	call emt_stg 
	push r8
	mov r8,QWORD [r8+8+8*1]
	call LB_5883
	pop r8 
	mov rdi,fmt_spc 
	call emt_stg 
	mov rdi,fmt_rcd_r
	call emt_stg
	jmp LB_5916
LB_5916:
	ret
LB_5920:
	movzx rax,BYTE [r8+6]
	jmp QWORD [LB_5923+8*rax]
LB_5923: dq LB_5921,LB_5922
LB_5921:
	mov rdi,LB_5925
	call emt_stg 
	mov rdi,fmt_rcd_box_l
	call emt_stg
	push r8
	mov r8,QWORD [r8+8+8*0]
	call LB_5881
	pop r8 
	mov rdi,fmt_spc 
	call emt_stg 
	push r8
	mov r8,QWORD [r8+8+8*1]
	call LB_5920
	pop r8 
	mov rdi,fmt_spc 
	call emt_stg 
	mov rdi,fmt_rcd_r
	call emt_stg
	jmp LB_5924
LB_5922:
	mov rdi,LB_5926
	call emt_stg 
	mov rdi,fmt_rcd_box_l
	call emt_stg
	mov rdi,fmt_rcd_r
	call emt_stg
	jmp LB_5924
LB_5924:
	ret
LB_5918:
	movzx rax,BYTE [r8+6]
	jmp QWORD [LB_5929+8*rax]
LB_5929: dq LB_5927,LB_5928
LB_5927:
	mov rdi,LB_5931
	call emt_stg 
	mov rdi,fmt_rcd_box_l
	call emt_stg
	push r8
	mov r8,QWORD [r8+8+8*0]
	mov rdi,fmt_rcd_box_l
	call emt_stg
	push r8
	mov r8,QWORD [r8+8+8*0]
	call LB_5932
	pop r8 
	mov rdi,fmt_spc 
	call emt_stg 
	push r8
	mov r8,QWORD [r8+8+8*1]
	call LB_5933
	pop r8 
	mov rdi,fmt_spc 
	call emt_stg 
	push r8
	mov r8,QWORD [r8+8+8*2]
	call LB_5934
	pop r8 
	mov rdi,fmt_spc 
	call emt_stg 
	mov rdi,fmt_rcd_r
	call emt_stg
	pop r8 
	mov rdi,fmt_spc 
	call emt_stg 
	push r8
	mov r8,QWORD [r8+8+8*1]
	call LB_5918
	pop r8 
	mov rdi,fmt_spc 
	call emt_stg 
	mov rdi,fmt_rcd_r
	call emt_stg
	jmp LB_5930
LB_5928:
	mov rdi,LB_5935
	call emt_stg 
	mov rdi,fmt_rcd_box_l
	call emt_stg
	push r8
	mov r8,QWORD [r8+8+8*0]
	call LB_5932
	pop r8 
	mov rdi,fmt_spc 
	call emt_stg 
	push r8
	mov r8,QWORD [r8+8+8*1]
	call LB_5933
	pop r8 
	mov rdi,fmt_spc 
	call emt_stg 
	push r8
	mov r8,QWORD [r8+8+8*2]
	call LB_5934
	pop r8 
	mov rdi,fmt_spc 
	call emt_stg 
	mov rdi,fmt_rcd_r
	call emt_stg
	jmp LB_5930
LB_5930:
	ret
LB_5934:
	movzx rax,BYTE [r8+6]
	jmp QWORD [LB_5939+8*rax]
LB_5939: dq LB_5936,LB_5937,LB_5938
LB_5936:
	mov rdi,LB_5941
	call emt_stg 
	mov r8,QWORD [r8+8]
	call LB_5901
	jmp LB_5940
LB_5937:
	mov rdi,LB_5942
	call emt_stg 
	mov rdi,fmt_rcd_box_l
	call emt_stg
	push r8
	mov r8,QWORD [r8+8+8*0]
	call LB_5895
	pop r8 
	mov rdi,fmt_spc 
	call emt_stg 
	push r8
	mov r8,QWORD [r8+8+8*1]
	call LB_5918
	pop r8 
	mov rdi,fmt_spc 
	call emt_stg 
	mov rdi,fmt_rcd_r
	call emt_stg
	jmp LB_5940
LB_5938:
	mov rdi,LB_5943
	call emt_stg 
	mov r8,QWORD [r8+8]
	call LB_5883
	jmp LB_5940
LB_5940:
	ret
LB_5933:
	movzx rax,BYTE [r8+6]
	jmp QWORD [LB_5946+8*rax]
LB_5946: dq LB_5944,LB_5945
LB_5944:
	mov rdi,LB_5948
	call emt_stg 
	mov rdi,fmt_rcd_box_l
	call emt_stg
	push r8
	mov r8,QWORD [r8+8+8*0]
	call LB_5949
	pop r8 
	mov rdi,fmt_spc 
	call emt_stg 
	push r8
	mov r8,QWORD [r8+8+8*1]
	call LB_5933
	pop r8 
	mov rdi,fmt_spc 
	call emt_stg 
	mov rdi,fmt_rcd_r
	call emt_stg
	jmp LB_5947
LB_5945:
	mov rdi,LB_5950
	call emt_stg 
	mov rdi,fmt_rcd_box_l
	call emt_stg
	mov rdi,fmt_rcd_r
	call emt_stg
	jmp LB_5947
LB_5947:
	ret
LB_5949:
	movzx rax,BYTE [r8+6]
	jmp QWORD [LB_5954+8*rax]
LB_5954: dq LB_5951,LB_5952,LB_5953
LB_5951:
	mov rdi,LB_5956
	call emt_stg 
	mov rdi,fmt_rcd_box_l
	call emt_stg
	push r8
	mov r8,QWORD [r8+8+8*0]
	call LB_5895
	pop r8 
	mov rdi,fmt_spc 
	call emt_stg 
	push r8
	mov r8,QWORD [r8+8+8*1]
	call LB_5932
	pop r8 
	mov rdi,fmt_spc 
	call emt_stg 
	mov rdi,fmt_rcd_r
	call emt_stg
	jmp LB_5955
LB_5952:
	mov rdi,LB_5957
	call emt_stg 
	mov rdi,fmt_rcd_box_l
	call emt_stg
	push r8
	mov r8,QWORD [r8+8+8*0]
	call LB_5958
	pop r8 
	mov rdi,fmt_spc 
	call emt_stg 
	push r8
	mov r8,QWORD [r8+8+8*1]
	call LB_5958
	pop r8 
	mov rdi,fmt_spc 
	call emt_stg 
	mov rdi,fmt_rcd_r
	call emt_stg
	jmp LB_5955
LB_5953:
	mov rdi,LB_5959
	call emt_stg 
	mov rdi,fmt_rcd_box_l
	call emt_stg
	push r8
	mov r8,QWORD [r8+8+8*0]
	call LB_5958
	pop r8 
	mov rdi,fmt_spc 
	call emt_stg 
	push r8
	mov r8,QWORD [r8+8+8*1]
	call LB_5958
	pop r8 
	mov rdi,fmt_spc 
	call emt_stg 
	mov rdi,fmt_rcd_r
	call emt_stg
	jmp LB_5955
LB_5955:
	ret
LB_5958:
	movzx rax,BYTE [r8+6]
	jmp QWORD [LB_5962+8*rax]
LB_5962: dq LB_5960,LB_5961
LB_5960:
	mov rdi,LB_5964
	call emt_stg 
	mov r8,QWORD [r8+8]
	call LB_5965
	jmp LB_5963
LB_5961:
	mov rdi,LB_5966
	call emt_stg 
	mov rdi,r8
	call emt_s8
	jmp LB_5963
LB_5963:
	ret
LB_5965:
	movzx rax,BYTE [r8+6]
	jmp QWORD [LB_5969+8*rax]
LB_5969: dq LB_5967,LB_5968
LB_5967:
	mov rdi,LB_5971
	call emt_stg 
	mov r8,QWORD [r8+8]
	call LB_5972
	jmp LB_5970
LB_5968:
	mov rdi,LB_5973
	call emt_stg 
	mov r8,QWORD [r8+8]
	call LB_5850
	jmp LB_5970
LB_5970:
	ret
LB_5972:
	movzx rax,BYTE [r8+6]
	jmp QWORD [LB_5976+8*rax]
LB_5976: dq LB_5974,LB_5975
LB_5974:
	mov rdi,LB_5978
	call emt_stg 
	mov r8,QWORD [r8+8]
	mov rdi,r8 
	call emt_r64 
	jmp LB_5977
LB_5975:
	mov rdi,LB_5979
	call emt_stg 
	mov rdi,r8
	call emt_s8
	jmp LB_5977
LB_5977:
	ret
LB_5932:
	movzx rax,BYTE [r8+6]
	jmp QWORD [LB_5982+8*rax]
LB_5982: dq LB_5980,LB_5981
LB_5980:
	mov rdi,LB_5984
	call emt_stg 
	mov r8,QWORD [r8+8]
	call LB_5985
	jmp LB_5983
LB_5981:
	mov rdi,LB_5986
	call emt_stg 
	mov r8,QWORD [r8+8]
	call LB_5987
	jmp LB_5983
LB_5983:
	ret
LB_5987:
	movzx rax,BYTE [r8+6]
	jmp QWORD [LB_5992+8*rax]
LB_5992: dq LB_5988,LB_5989,LB_5990,LB_5991
LB_5988:
	mov rdi,LB_5994
	call emt_stg 
	mov rdi,fmt_rcd_box_l
	call emt_stg
	push r8
	mov r8,QWORD [r8+8+8*0]
	call LB_5850
	pop r8 
	mov rdi,fmt_spc 
	call emt_stg 
	push r8
	mov r8,QWORD [r8+8+8*1]
	call LB_5932
	pop r8 
	mov rdi,fmt_spc 
	call emt_stg 
	mov rdi,fmt_rcd_r
	call emt_stg
	jmp LB_5993
LB_5989:
	mov rdi,LB_5995
	call emt_stg 
	mov r8,QWORD [r8+8]
	call LB_5965
	jmp LB_5993
LB_5990:
	mov rdi,LB_5996
	call emt_stg 
	mov r8,QWORD [r8+8]
	call LB_5997
	jmp LB_5993
LB_5991:
	mov rdi,LB_5998
	call emt_stg 
	mov rdi,r8
	call emt_s8
	jmp LB_5993
LB_5993:
	ret
LB_5997:
	movzx rax,BYTE [r8+6]
	jmp QWORD [LB_6001+8*rax]
LB_6001: dq LB_5999,LB_6000
LB_5999:
	mov rdi,LB_6003
	call emt_stg 
	mov rdi,r8
	call emt_s8
	jmp LB_6002
LB_6000:
	mov rdi,LB_6004
	call emt_stg 
	mov rdi,fmt_rcd_box_l
	call emt_stg
	mov rdi,fmt_rcd_r
	call emt_stg
	jmp LB_6002
LB_6002:
	ret
LB_5985:
	movzx rax,BYTE [r8+6]
	jmp QWORD [LB_6007+8*rax]
LB_6007: dq LB_6005,LB_6006
LB_6005:
	mov rdi,LB_6009
	call emt_stg 
	mov rdi,fmt_rcd_box_l
	call emt_stg
	push r8
	mov r8,QWORD [r8+8+8*0]
	call LB_5932
	pop r8 
	mov rdi,fmt_spc 
	call emt_stg 
	push r8
	mov r8,QWORD [r8+8+8*1]
	call LB_5985
	pop r8 
	mov rdi,fmt_spc 
	call emt_stg 
	mov rdi,fmt_rcd_r
	call emt_stg
	jmp LB_6008
LB_6006:
	mov rdi,LB_6010
	call emt_stg 
	mov rdi,fmt_rcd_box_l
	call emt_stg
	mov rdi,fmt_rcd_r
	call emt_stg
	jmp LB_6008
LB_6008:
	ret
LB_5901:
	movzx rax,BYTE [r8+6]
	jmp QWORD [LB_6013+8*rax]
LB_6013: dq LB_6011,LB_6012
LB_6011:
	mov rdi,LB_6015
	call emt_stg 
	mov rdi,fmt_rcd_box_l
	call emt_stg
	push r8
	mov r8,QWORD [r8+8+8*0]
	mov rdi,fmt_rcd_box_l
	call emt_stg
	push r8
	mov r8,QWORD [r8+8+8*0]
	call LB_5933
	pop r8 
	mov rdi,fmt_spc 
	call emt_stg 
	push r8
	mov r8,QWORD [r8+8+8*1]
	call LB_5934
	pop r8 
	mov rdi,fmt_spc 
	call emt_stg 
	mov rdi,fmt_rcd_r
	call emt_stg
	pop r8 
	mov rdi,fmt_spc 
	call emt_stg 
	push r8
	mov r8,QWORD [r8+8+8*1]
	call LB_5901
	pop r8 
	mov rdi,fmt_spc 
	call emt_stg 
	mov rdi,fmt_rcd_r
	call emt_stg
	jmp LB_6014
LB_6012:
	mov rdi,LB_6016
	call emt_stg 
	mov rdi,fmt_rcd_box_l
	call emt_stg
	push r8
	mov r8,QWORD [r8+8+8*0]
	call LB_5933
	pop r8 
	mov rdi,fmt_spc 
	call emt_stg 
	push r8
	mov r8,QWORD [r8+8+8*1]
	call LB_5934
	pop r8 
	mov rdi,fmt_spc 
	call emt_stg 
	mov rdi,fmt_rcd_r
	call emt_stg
	jmp LB_6014
LB_6014:
	ret
LB_5899:
	movzx rax,BYTE [r8+6]
	jmp QWORD [LB_6021+8*rax]
LB_6021: dq LB_6017,LB_6018,LB_6019,LB_6020
LB_6017:
	mov rdi,LB_6023
	call emt_stg 
	mov rdi,fmt_rcd_box_l
	call emt_stg
	push r8
	mov r8,QWORD [r8+8+8*0]
	call LB_5850
	pop r8 
	mov rdi,fmt_spc 
	call emt_stg 
	push r8
	mov r8,QWORD [r8+8+8*1]
	call LB_5895
	pop r8 
	mov rdi,fmt_spc 
	call emt_stg 
	push r8
	mov r8,QWORD [r8+8+8*2]
	call LB_5881
	pop r8 
	mov rdi,fmt_spc 
	call emt_stg 
	mov rdi,fmt_rcd_r
	call emt_stg
	jmp LB_6022
LB_6018:
	mov rdi,LB_6024
	call emt_stg 
	mov rdi,fmt_rcd_box_l
	call emt_stg
	push r8
	mov r8,QWORD [r8+8+8*0]
	call LB_5897
	pop r8 
	mov rdi,fmt_spc 
	call emt_stg 
	push r8
	mov r8,QWORD [r8+8+8*1]
	call LB_5895
	pop r8 
	mov rdi,fmt_spc 
	call emt_stg 
	push r8
	mov r8,QWORD [r8+8+8*2]
	call LB_5881
	pop r8 
	mov rdi,fmt_spc 
	call emt_stg 
	mov rdi,fmt_rcd_r
	call emt_stg
	jmp LB_6022
LB_6019:
	mov rdi,LB_6025
	call emt_stg 
	mov rdi,fmt_rcd_box_l
	call emt_stg
	push r8
	mov r8,QWORD [r8+8+8*0]
	call LB_5965
	pop r8 
	mov rdi,fmt_spc 
	call emt_stg 
	push r8
	mov r8,QWORD [r8+8+8*1]
	call LB_5895
	pop r8 
	mov rdi,fmt_spc 
	call emt_stg 
	push r8
	mov r8,QWORD [r8+8+8*2]
	call LB_5881
	pop r8 
	mov rdi,fmt_spc 
	call emt_stg 
	mov rdi,fmt_rcd_r
	call emt_stg
	jmp LB_6022
LB_6020:
	mov rdi,LB_6026
	call emt_stg 
	mov rdi,fmt_rcd_box_l
	call emt_stg
	push r8
	mov r8,QWORD [r8+8+8*0]
	call LB_6027
	pop r8 
	mov rdi,fmt_spc 
	call emt_stg 
	push r8
	mov r8,QWORD [r8+8+8*1]
	call LB_6028
	pop r8 
	mov rdi,fmt_spc 
	call emt_stg 
	push r8
	mov r8,QWORD [r8+8+8*2]
	call LB_6029
	pop r8 
	mov rdi,fmt_spc 
	call emt_stg 
	mov rdi,fmt_rcd_r
	call emt_stg
	jmp LB_6022
LB_6022:
	ret
LB_6029:
	movzx rax,BYTE [r8+6]
	jmp QWORD [LB_6032+8*rax]
LB_6032: dq LB_6030,LB_6031
LB_6030:
	mov rdi,LB_6034
	call emt_stg 
	mov rdi,fmt_rcd_box_l
	call emt_stg
	push r8
	mov r8,QWORD [r8+8+8*0]
	call LB_6035
	pop r8 
	mov rdi,fmt_spc 
	call emt_stg 
	push r8
	mov r8,QWORD [r8+8+8*1]
	call LB_6029
	pop r8 
	mov rdi,fmt_spc 
	call emt_stg 
	mov rdi,fmt_rcd_r
	call emt_stg
	jmp LB_6033
LB_6031:
	mov rdi,LB_6036
	call emt_stg 
	mov rdi,fmt_rcd_box_l
	call emt_stg
	mov rdi,fmt_rcd_r
	call emt_stg
	jmp LB_6033
LB_6033:
	ret
LB_6035:
	movzx rax,BYTE [r8+6]
	jmp QWORD [LB_6039+8*rax]
LB_6039: dq LB_6037,LB_6038
LB_6037:
	mov rdi,LB_6041
	call emt_stg 
	mov r8,QWORD [r8+8]
	call LB_5997
	jmp LB_6040
LB_6038:
	mov rdi,LB_6042
	call emt_stg 
	mov rdi,r8
	call emt_s8
	jmp LB_6040
LB_6040:
	ret
LB_6028:
	movzx rax,BYTE [r8+6]
	jmp QWORD [LB_6045+8*rax]
LB_6045: dq LB_6043,LB_6044
LB_6043:
	mov rdi,LB_6047
	call emt_stg 
	mov rdi,fmt_rcd_box_l
	call emt_stg
	push r8
	mov r8,QWORD [r8+8+8*0]
	call LB_5897
	pop r8 
	mov rdi,fmt_spc 
	call emt_stg 
	push r8
	mov r8,QWORD [r8+8+8*1]
	call LB_6028
	pop r8 
	mov rdi,fmt_spc 
	call emt_stg 
	mov rdi,fmt_rcd_r
	call emt_stg
	jmp LB_6046
LB_6044:
	mov rdi,LB_6048
	call emt_stg 
	mov rdi,fmt_rcd_box_l
	call emt_stg
	mov rdi,fmt_rcd_r
	call emt_stg
	jmp LB_6046
LB_6046:
	ret
LB_6027:
	movzx rax,BYTE [r8+6]
	jmp QWORD [LB_6051+8*rax]
LB_6051: dq LB_6049,LB_6050
LB_6049:
	mov rdi,LB_6053
	call emt_stg 
	mov rdi,fmt_rcd_box_l
	call emt_stg
	push r8
	mov r8,QWORD [r8+8+8*0]
	call LB_6054
	pop r8 
	mov rdi,fmt_spc 
	call emt_stg 
	push r8
	mov r8,QWORD [r8+8+8*1]
	call LB_6027
	pop r8 
	mov rdi,fmt_spc 
	call emt_stg 
	mov rdi,fmt_rcd_r
	call emt_stg
	jmp LB_6052
LB_6050:
	mov rdi,LB_6055
	call emt_stg 
	mov rdi,fmt_rcd_box_l
	call emt_stg
	mov rdi,fmt_rcd_r
	call emt_stg
	jmp LB_6052
LB_6052:
	ret
LB_6054:
	movzx rax,BYTE [r8+6]
	jmp QWORD [LB_6060+8*rax]
LB_6060: dq LB_6056,LB_6057,LB_6058,LB_6059
LB_6056:
	mov rdi,LB_6062
	call emt_stg 
	mov rdi,r8
	call emt_s8
	jmp LB_6061
LB_6057:
	mov rdi,LB_6063
	call emt_stg 
	mov r8,QWORD [r8+8]
	call LB_5965
	jmp LB_6061
LB_6058:
	mov rdi,LB_6064
	call emt_stg 
	mov rdi,fmt_rcd_box_l
	call emt_stg
	push r8
	mov r8,QWORD [r8+8+8*0]
	call LB_6065
	pop r8 
	mov rdi,fmt_spc 
	call emt_stg 
	push r8
	mov r8,QWORD [r8+8+8*1]
	mov rdi,r8 
	call emt_r64 
	pop r8 
	mov rdi,fmt_spc 
	call emt_stg 
	mov rdi,fmt_rcd_r
	call emt_stg
	jmp LB_6061
LB_6059:
	mov rdi,LB_6066
	call emt_stg 
	mov rdi,fmt_rcd_box_l
	call emt_stg
	push r8
	mov r8,QWORD [r8+8+8*0]
	mov rdi,r8 
	call emt_r64 
	pop r8 
	mov rdi,fmt_spc 
	call emt_stg 
	push r8
	mov r8,QWORD [r8+8+8*1]
	mov rdi,r8
	call emt_s8
	pop r8 
	mov rdi,fmt_spc 
	call emt_stg 
	mov rdi,fmt_rcd_r
	call emt_stg
	jmp LB_6061
LB_6061:
	ret
LB_6065:
	movzx rax,BYTE [r8+6]
	jmp QWORD [LB_6071+8*rax]
LB_6071: dq LB_6067,LB_6068,LB_6069,LB_6070
LB_6067:
	mov rdi,LB_6073
	call emt_stg 
	mov rdi,fmt_rcd_box_l
	call emt_stg
	mov rdi,fmt_rcd_r
	call emt_stg
	jmp LB_6072
LB_6068:
	mov rdi,LB_6074
	call emt_stg 
	mov rdi,fmt_rcd_box_l
	call emt_stg
	mov rdi,fmt_rcd_r
	call emt_stg
	jmp LB_6072
LB_6069:
	mov rdi,LB_6075
	call emt_stg 
	mov rdi,fmt_rcd_box_l
	call emt_stg
	mov rdi,fmt_rcd_r
	call emt_stg
	jmp LB_6072
LB_6070:
	mov rdi,LB_6076
	call emt_stg 
	mov rdi,fmt_rcd_box_l
	call emt_stg
	mov rdi,fmt_rcd_r
	call emt_stg
	jmp LB_6072
LB_6072:
	ret
LB_5897:
	movzx rax,BYTE [r8+6]
	jmp QWORD [LB_6079+8*rax]
LB_6079: dq LB_6077,LB_6078
LB_6077:
	mov rdi,LB_6081
	call emt_stg 
	mov r8,QWORD [r8+8]
	call LB_5965
	jmp LB_6080
LB_6078:
	mov rdi,LB_6082
	call emt_stg 
	mov rdi,r8
	call emt_s8
	jmp LB_6080
LB_6080:
	ret
LB_5895:
	movzx rax,BYTE [r8+6]
	jmp QWORD [LB_6085+8*rax]
LB_6085: dq LB_6083,LB_6084
LB_6083:
	mov rdi,LB_6087
	call emt_stg 
	mov r8,QWORD [r8+8]
	call LB_6088
	jmp LB_6086
LB_6084:
	mov rdi,LB_6089
	call emt_stg 
	mov r8,QWORD [r8+8]
	call LB_5897
	jmp LB_6086
LB_6086:
	ret
LB_6088:
	movzx rax,BYTE [r8+6]
	jmp QWORD [LB_6092+8*rax]
LB_6092: dq LB_6090,LB_6091
LB_6090:
	mov rdi,LB_6094
	call emt_stg 
	mov rdi,fmt_rcd_box_l
	call emt_stg
	push r8
	mov r8,QWORD [r8+8+8*0]
	call LB_5895
	pop r8 
	mov rdi,fmt_spc 
	call emt_stg 
	push r8
	mov r8,QWORD [r8+8+8*1]
	call LB_6088
	pop r8 
	mov rdi,fmt_spc 
	call emt_stg 
	mov rdi,fmt_rcd_r
	call emt_stg
	jmp LB_6093
LB_6091:
	mov rdi,LB_6095
	call emt_stg 
	mov rdi,fmt_rcd_box_l
	call emt_stg
	mov rdi,fmt_rcd_r
	call emt_stg
	jmp LB_6093
LB_6093:
	ret
LB_5882:
	movzx rax,BYTE [r8+6]
	jmp QWORD [LB_6098+8*rax]
LB_6098: dq LB_6096,LB_6097
LB_6096:
	mov rdi,LB_6100
	call emt_stg 
	mov r8,QWORD [r8+8]
	call LB_5837
	jmp LB_6099
LB_6097:
	mov rdi,LB_6101
	call emt_stg 
	mov rdi,fmt_rcd_box_l
	call emt_stg
	mov rdi,fmt_rcd_r
	call emt_stg
	jmp LB_6099
LB_6099:
	ret
LB_5881:
	movzx rax,BYTE [r8+6]
	jmp QWORD [LB_6104+8*rax]
LB_6104: dq LB_6102,LB_6103
LB_6102:
	mov rdi,LB_6106
	call emt_stg 
	mov r8,QWORD [r8+8]
	call LB_5920
	jmp LB_6105
LB_6103:
	mov rdi,LB_6107
	call emt_stg 
	mov r8,QWORD [r8+8]
	call LB_6035
	jmp LB_6105
LB_6105:
	ret
LB_5816:
	movzx rax,BYTE [r8+6]
	jmp QWORD [LB_6111+8*rax]
LB_6111: dq LB_6108,LB_6109,LB_6110
LB_6108:
	mov rdi,LB_6113
	call emt_stg 
	mov rdi,fmt_rcd_box_l
	call emt_stg
	push r8
	mov r8,QWORD [r8+8+8*0]
	call LB_5881
	pop r8 
	mov rdi,fmt_spc 
	call emt_stg 
	push r8
	mov r8,QWORD [r8+8+8*1]
	call LB_5882
	pop r8 
	mov rdi,fmt_spc 
	call emt_stg 
	push r8
	mov r8,QWORD [r8+8+8*2]
	call LB_5883
	pop r8 
	mov rdi,fmt_spc 
	call emt_stg 
	mov rdi,fmt_rcd_r
	call emt_stg
	jmp LB_6112
LB_6109:
	mov rdi,LB_6114
	call emt_stg 
	mov r8,QWORD [r8+8]
	call LB_5965
	jmp LB_6112
LB_6110:
	mov rdi,LB_6115
	call emt_stg 
	mov r8,QWORD [r8+8]
	call LB_5883
	jmp LB_6112
LB_6112:
	ret
LB_5814:
	movzx rax,BYTE [r8+6]
	jmp QWORD [LB_6118+8*rax]
LB_6118: dq LB_6116,LB_6117
LB_6116:
	mov rdi,LB_6120
	call emt_stg 
	mov rdi,fmt_rcd_box_l
	call emt_stg
	push r8
	mov r8,QWORD [r8+8+8*0]
	mov rdi,fmt_rcd_box_l
	call emt_stg
	push r8
	mov r8,QWORD [r8+8+8*0]
	mov rdi,r8
	call emt_s8
	pop r8 
	mov rdi,fmt_spc 
	call emt_stg 
	push r8
	mov r8,QWORD [r8+8+8*1]
	call LB_6121
	pop r8 
	mov rdi,fmt_spc 
	call emt_stg 
	mov rdi,fmt_rcd_r
	call emt_stg
	pop r8 
	mov rdi,fmt_spc 
	call emt_stg 
	push r8
	mov r8,QWORD [r8+8+8*1]
	call LB_5814
	pop r8 
	mov rdi,fmt_spc 
	call emt_stg 
	mov rdi,fmt_rcd_r
	call emt_stg
	jmp LB_6119
LB_6117:
	mov rdi,LB_6122
	call emt_stg 
	mov rdi,fmt_rcd_box_l
	call emt_stg
	mov rdi,fmt_rcd_r
	call emt_stg
	jmp LB_6119
LB_6119:
	ret
LB_6121:
	movzx rax,BYTE [r8+6]
	jmp QWORD [LB_6125+8*rax]
LB_6125: dq LB_6123,LB_6124
LB_6123:
	mov rdi,LB_6127
	call emt_stg 
	mov r8,QWORD [r8+8]
	call LB_6128
	jmp LB_6126
LB_6124:
	mov rdi,LB_6129
	call emt_stg 
	mov r8,QWORD [r8+8]
	call LB_6130
	jmp LB_6126
LB_6126:
	ret
LB_6130:
	movzx rax,BYTE [r8+6]
	jmp QWORD [LB_6133+8*rax]
LB_6133: dq LB_6131,LB_6132
LB_6131:
	mov rdi,LB_6135
	call emt_stg 
	mov rdi,fmt_rcd_box_l
	call emt_stg
	push r8
	mov r8,QWORD [r8+8+8*0]
	call LB_6029
	pop r8 
	mov rdi,fmt_spc 
	call emt_stg 
	push r8
	mov r8,QWORD [r8+8+8*1]
	call LB_5881
	pop r8 
	mov rdi,fmt_spc 
	call emt_stg 
	push r8
	mov r8,QWORD [r8+8+8*2]
	call LB_5883
	pop r8 
	mov rdi,fmt_spc 
	call emt_stg 
	push r8
	mov r8,QWORD [r8+8+8*3]
	call LB_6136
	pop r8 
	mov rdi,fmt_spc 
	call emt_stg 
	push r8
	mov r8,QWORD [r8+8+8*4]
	call LB_6137
	pop r8 
	mov rdi,fmt_spc 
	call emt_stg 
	push r8
	mov r8,QWORD [r8+8+8*5]
	call LB_6138
	pop r8 
	mov rdi,fmt_spc 
	call emt_stg 
	push r8
	mov r8,QWORD [r8+8+8*6]
	call LB_6130
	pop r8 
	mov rdi,fmt_spc 
	call emt_stg 
	mov rdi,fmt_rcd_r
	call emt_stg
	jmp LB_6134
LB_6132:
	mov rdi,LB_6139
	call emt_stg 
	mov rdi,fmt_rcd_box_l
	call emt_stg
	push r8
	mov r8,QWORD [r8+8+8*0]
	call LB_6029
	pop r8 
	mov rdi,fmt_spc 
	call emt_stg 
	push r8
	mov r8,QWORD [r8+8+8*1]
	call LB_5881
	pop r8 
	mov rdi,fmt_spc 
	call emt_stg 
	push r8
	mov r8,QWORD [r8+8+8*2]
	call LB_5883
	pop r8 
	mov rdi,fmt_spc 
	call emt_stg 
	push r8
	mov r8,QWORD [r8+8+8*3]
	call LB_6136
	pop r8 
	mov rdi,fmt_spc 
	call emt_stg 
	push r8
	mov r8,QWORD [r8+8+8*4]
	call LB_6137
	pop r8 
	mov rdi,fmt_spc 
	call emt_stg 
	push r8
	mov r8,QWORD [r8+8+8*5]
	call LB_6138
	pop r8 
	mov rdi,fmt_spc 
	call emt_stg 
	mov rdi,fmt_rcd_r
	call emt_stg
	jmp LB_6134
LB_6134:
	ret
LB_6138:
	movzx rax,BYTE [r8+6]
	jmp QWORD [LB_6142+8*rax]
LB_6142: dq LB_6140,LB_6141
LB_6140:
	mov rdi,LB_6144
	call emt_stg 
	mov rdi,fmt_rcd_box_l
	call emt_stg
	push r8
	mov r8,QWORD [r8+8+8*0]
	call LB_5881
	pop r8 
	mov rdi,fmt_spc 
	call emt_stg 
	push r8
	mov r8,QWORD [r8+8+8*1]
	call LB_6130
	pop r8 
	mov rdi,fmt_spc 
	call emt_stg 
	mov rdi,fmt_rcd_r
	call emt_stg
	jmp LB_6143
LB_6141:
	mov rdi,LB_6145
	call emt_stg 
	mov rdi,fmt_rcd_box_l
	call emt_stg
	mov rdi,fmt_rcd_r
	call emt_stg
	jmp LB_6143
LB_6143:
	ret
LB_6137:
	movzx rax,BYTE [r8+6]
	jmp QWORD [LB_6149+8*rax]
LB_6149: dq LB_6146,LB_6147,LB_6148
LB_6146:
	mov rdi,LB_6151
	call emt_stg 
	mov r8,QWORD [r8+8]
	call LB_6152
	jmp LB_6150
LB_6147:
	mov rdi,LB_6153
	call emt_stg 
	mov rdi,fmt_rcd_box_l
	call emt_stg
	push r8
	mov r8,QWORD [r8+8+8*0]
	call LB_6154
	pop r8 
	mov rdi,fmt_spc 
	call emt_stg 
	push r8
	mov r8,QWORD [r8+8+8*1]
	call LB_6137
	pop r8 
	mov rdi,fmt_spc 
	call emt_stg 
	mov rdi,fmt_rcd_r
	call emt_stg
	jmp LB_6150
LB_6148:
	mov rdi,LB_6155
	call emt_stg 
	mov rdi,fmt_rcd_box_l
	call emt_stg
	mov rdi,fmt_rcd_r
	call emt_stg
	jmp LB_6150
LB_6150:
	ret
LB_6154:
	movzx rax,BYTE [r8+6]
	jmp QWORD [LB_6158+8*rax]
LB_6158: dq LB_6156,LB_6157
LB_6156:
	mov rdi,LB_6160
	call emt_stg 
	mov r8,QWORD [r8+8]
	call LB_6161
	jmp LB_6159
LB_6157:
	mov rdi,LB_6162
	call emt_stg 
	mov r8,QWORD [r8+8]
	call LB_6161
	jmp LB_6159
LB_6159:
	ret
LB_6161:
	movzx rax,BYTE [r8+6]
	jmp QWORD [LB_6165+8*rax]
LB_6165: dq LB_6163,LB_6164
LB_6163:
	mov rdi,LB_6167
	call emt_stg 
	mov r8,QWORD [r8+8]
	call LB_5850
	jmp LB_6166
LB_6164:
	mov rdi,LB_6168
	call emt_stg 
	mov rdi,r8
	call emt_s8
	jmp LB_6166
LB_6166:
	ret
LB_6152:
	movzx rax,BYTE [r8+6]
	jmp QWORD [LB_6171+8*rax]
LB_6171: dq LB_6169,LB_6170
LB_6169:
	mov rdi,LB_6173
	call emt_stg 
	mov rdi,fmt_rcd_box_l
	call emt_stg
	push r8
	mov r8,QWORD [r8+8+8*0]
	call LB_6154
	pop r8 
	mov rdi,fmt_spc 
	call emt_stg 
	push r8
	mov r8,QWORD [r8+8+8*1]
	call LB_6152
	pop r8 
	mov rdi,fmt_spc 
	call emt_stg 
	mov rdi,fmt_rcd_r
	call emt_stg
	jmp LB_6172
LB_6170:
	mov rdi,LB_6174
	call emt_stg 
	mov rdi,fmt_rcd_box_l
	call emt_stg
	mov rdi,fmt_rcd_r
	call emt_stg
	jmp LB_6172
LB_6172:
	ret
LB_6136:
	movzx rax,BYTE [r8+6]
	jmp QWORD [LB_6178+8*rax]
LB_6178: dq LB_6175,LB_6176,LB_6177
LB_6175:
	mov rdi,LB_6180
	call emt_stg 
	mov rdi,fmt_rcd_box_l
	call emt_stg
	mov rdi,fmt_rcd_r
	call emt_stg
	jmp LB_6179
LB_6176:
	mov rdi,LB_6181
	call emt_stg 
	mov rdi,fmt_rcd_box_l
	call emt_stg
	mov rdi,fmt_rcd_r
	call emt_stg
	jmp LB_6179
LB_6177:
	mov rdi,LB_6182
	call emt_stg 
	mov rdi,fmt_rcd_box_l
	call emt_stg
	mov rdi,fmt_rcd_r
	call emt_stg
	jmp LB_6179
LB_6179:
	ret
LB_6128:
	movzx rax,BYTE [r8+6]
	jmp QWORD [LB_6185+8*rax]
LB_6185: dq LB_6183,LB_6184
LB_6183:
	mov rdi,LB_6187
	call emt_stg 
	mov rdi,fmt_rcd_box_l
	call emt_stg
	push r8
	mov r8,QWORD [r8+8+8*0]
	call LB_5997
	pop r8 
	mov rdi,fmt_spc 
	call emt_stg 
	push r8
	mov r8,QWORD [r8+8+8*1]
	call LB_6136
	pop r8 
	mov rdi,fmt_spc 
	call emt_stg 
	push r8
	mov r8,QWORD [r8+8+8*2]
	call LB_6137
	pop r8 
	mov rdi,fmt_spc 
	call emt_stg 
	push r8
	mov r8,QWORD [r8+8+8*3]
	call LB_6188
	pop r8 
	mov rdi,fmt_spc 
	call emt_stg 
	push r8
	mov r8,QWORD [r8+8+8*4]
	call LB_6128
	pop r8 
	mov rdi,fmt_spc 
	call emt_stg 
	mov rdi,fmt_rcd_r
	call emt_stg
	jmp LB_6186
LB_6184:
	mov rdi,LB_6189
	call emt_stg 
	mov rdi,fmt_rcd_box_l
	call emt_stg
	push r8
	mov r8,QWORD [r8+8+8*0]
	call LB_5997
	pop r8 
	mov rdi,fmt_spc 
	call emt_stg 
	push r8
	mov r8,QWORD [r8+8+8*1]
	call LB_6136
	pop r8 
	mov rdi,fmt_spc 
	call emt_stg 
	push r8
	mov r8,QWORD [r8+8+8*2]
	call LB_6137
	pop r8 
	mov rdi,fmt_spc 
	call emt_stg 
	push r8
	mov r8,QWORD [r8+8+8*3]
	call LB_6188
	pop r8 
	mov rdi,fmt_spc 
	call emt_stg 
	mov rdi,fmt_rcd_r
	call emt_stg
	jmp LB_6186
LB_6186:
	ret
LB_6188:
	movzx rax,BYTE [r8+6]
	jmp QWORD [LB_6192+8*rax]
LB_6192: dq LB_6190,LB_6191
LB_6190:
	mov rdi,LB_6194
	call emt_stg 
	mov r8,QWORD [r8+8]
	call LB_6128
	jmp LB_6193
LB_6191:
	mov rdi,LB_6195
	call emt_stg 
	mov rdi,fmt_rcd_box_l
	call emt_stg
	mov rdi,fmt_rcd_r
	call emt_stg
	jmp LB_6193
LB_6193:
	ret
LB_5812:
	movzx rax,BYTE [r8+6]
	jmp QWORD [LB_6198+8*rax]
LB_6198: dq LB_6196,LB_6197
LB_6196:
	mov rdi,LB_6200
	call emt_stg 
	mov r8,QWORD [r8+8]
	call LB_5794
	jmp LB_6199
LB_6197:
	mov rdi,LB_6201
	call emt_stg 
	mov r8,QWORD [r8+8]
	call LB_5850
	jmp LB_6199
LB_6199:
	ret
LB_6211: ;; #34 0'(= a13◂ [ *{ {| a2◂ [ *{ {| l |}a3◂ [ r]}]|}{| a2◂ [ q0]|}{| a2◂ [ q1]|}r}] ) ⊢ { 0'(= {| a2◂ [ *{ {| l |}a3◂ [ r]}]|} ) 1'(= {| a2◂ [ q0]|} ) 2'(= {| a2◂ [ q1]|} ) 3'(= r ) } : (_t13◂{ _arr◂_lst◂{ _s8 _opn◂_r64 } _arr◂_lst◂7746'(=7748'(1)) _arr◂_lst◂7747'(=7749'(1)) _r64 }→{ _arr◂_lst◂{ _s8 _opn◂_r64 } _arr◂_lst◂7748'(1) _arr◂_lst◂7749'(1) _r64 })
;; rsp=0 , %4~0'(= a13◂ [ *{ {| a2◂ [ *{ {| l |}a3◂ [ r]}]|}{| a2◂ [ q0]|}{| a2◂ [ q1]|}r}] ) 
;; ?. 0'(= a13◂ [ *{ {| a2◂ [ *{ {| l |}a3◂ [ r]}]|}{| a2◂ [ q0]|}{| a2◂ [ q1]|}r}] ) ⊢ 0(<1)◂0'(= *{ {| a2◂ [ *{ {| l |}a3◂ [ r]}]|}{| a2◂ [ q0]|}{| a2◂ [ q1]|}r} )
;; rsp=0 , %5~0'(= *{ {| a2◂ [ *{ {| l |}a3◂ [ r]}]|}{| a2◂ [ q0]|}{| a2◂ [ q1]|}r} ) 
; ∎ 0'(= *{ {| a2◂ [ *{ {| l |}a3◂ [ r]}]|}{| a2◂ [ q0]|}{| a2◂ [ q1]|}r} )
; .mov_ptn2 0'(= *{ {| a2◂ [ *{ {| l |}a3◂ [ r]}]|}{| a2◂ [ q0]|}{| a2◂ [ q1]|}r} ) ⊢ { 0'(= {| a2◂ [ *{ {| l |}a3◂ [ r]}]|} ) 1'(= {| a2◂ [ q0]|} ) 2'(= {| a2◂ [ q1]|} ) 3'(= r ) }
	mov r10,r13
; .mov_ptn 4'(= *{ {| a2◂ [ *{ {| l |}a3◂ [ r]}]|}{| a2◂ [ q0]|}{| a2◂ [ q1]|}r} ) ⊢ { 0'(= {| a2◂ [ *{ {| l |}a3◂ [ r]}]|} ) 1'(= {| a2◂ [ q0]|} ) 2'(= {| a2◂ [ q1]|} ) 3'(= r ) }
	mov r11, QWORD [r10+8]
	mov r13,r11
	mov rcx, QWORD [r10+16]
	mov r14,rcx
	mov rdx, QWORD [r10+24]
	mov r8,rdx
	sub rsp,8
	MOV_RDI QWORD [rsp-8+8*1], QWORD [r10+32]
	mov r9,QWORD [rsp-8+8*1]
	mov rdi,r10
	FREE_RCD 4,rdi
	add rsp,8
	ret
LB_6212: ;; #34 0'(= a13◂ [ *{ a2◂ [ *{ {| l |}a3◂ [ r]}]a2◂ [ q0]a2◂ [ q1]}] ) ⊢ { 0'(= a2◂ [ *{ {| l |}a3◂ [ r]}] ) 1'(= a2◂ [ q0] ) 2'(= a2◂ [ q1] ) } : (_t13◂{ _lst◂{ _s8 _opn◂_r64 } _lst◂7754'(=7756'(1)) _lst◂7755'(=7757'(1)) }→{ _lst◂{ _s8 _opn◂_r64 } _lst◂7756'(1) _lst◂7757'(1) })
;; rsp=0 , %4~0'(= a13◂ [ *{ a2◂ [ *{ {| l |}a3◂ [ r]}]a2◂ [ q0]a2◂ [ q1]}] ) 
;; ?. 0'(= a13◂ [ *{ a2◂ [ *{ {| l |}a3◂ [ r]}]a2◂ [ q0]a2◂ [ q1]}] ) ⊢ 0(<1)◂0'(= *{ a2◂ [ *{ {| l |}a3◂ [ r]}]a2◂ [ q0]a2◂ [ q1]} )
;; rsp=0 , %5~0'(= *{ a2◂ [ *{ {| l |}a3◂ [ r]}]a2◂ [ q0]a2◂ [ q1]} ) 
; ∎ 0'(= *{ a2◂ [ *{ {| l |}a3◂ [ r]}]a2◂ [ q0]a2◂ [ q1]} )
; .mov_ptn2 0'(= *{ a2◂ [ *{ {| l |}a3◂ [ r]}]a2◂ [ q0]a2◂ [ q1]} ) ⊢ { 0'(= a2◂ [ *{ {| l |}a3◂ [ r]}] ) 1'(= a2◂ [ q0] ) 2'(= a2◂ [ q1] ) }
	mov r9,r13
; .mov_ptn 3'(= *{ a2◂ [ *{ {| l |}a3◂ [ r]}]a2◂ [ q0]a2◂ [ q1]} ) ⊢ { 0'(= a2◂ [ *{ {| l |}a3◂ [ r]}] ) 1'(= a2◂ [ q0] ) 2'(= a2◂ [ q1] ) }
	mov r10, QWORD [r9+8]
	mov r13,r10
	mov r11, QWORD [r9+16]
	mov r14,r11
	mov rcx, QWORD [r9+24]
	mov r8,rcx
	mov rdi,r9
	FREE_RCD 3,rdi
	ret
LB_6213:
	movzx rax,BYTE [r8+6]
	jmp QWORD [LB_6216+8*rax]
LB_6216: dq LB_6214,LB_6215
LB_6214:
	push r8
	mov r8,QWORD [r8+8+8*0]
	push r8
	mov r8,QWORD [r8+8+8*0]
	mov rdi,r8
	call free_s8
	pop r8 
	push r8
	mov r8,QWORD [r8+8+8*1]
	call LB_6218
	pop r8 
	FREE_RCD 2, r8
	pop r8 
	push r8
	mov r8,QWORD [r8+8+8*1]
	call LB_6213
	pop r8 
	FREE_RCD 2, r8
	jmp LB_6217
LB_6215:
	jmp LB_6217
LB_6217:
	ret
LB_6218:
	movzx rax,BYTE [r8+6]
	jmp QWORD [LB_6221+8*rax]
LB_6221: dq LB_6219,LB_6220
LB_6219:
	FREE_LN r8 
	mov r8,QWORD [r8+8]
	jmp LB_6222
LB_6220:
	jmp LB_6222
LB_6222:
	ret
LB_6223:
	movzx rax,BYTE [r8+6]
	jmp QWORD [LB_6226+8*rax]
LB_6226: dq LB_6224,LB_6225
LB_6224:
	push r8
	mov r8,QWORD [r8+8+8*0]
	mov rdi,rt_err0 
	call emt_stg
	mov QWORD [err_n],0xffff_0002
	jmp err
	pop r8 
	push r8
	mov r8,QWORD [r8+8+8*1]
	call LB_6223
	pop r8 
	FREE_RCD 2, r8
	jmp LB_6227
LB_6225:
	jmp LB_6227
LB_6227:
	ret
LB_6228:
	movzx rax,BYTE [r8+6]
	jmp QWORD [LB_6231+8*rax]
LB_6231: dq LB_6229,LB_6230
LB_6229:
	push r8
	mov r8,QWORD [r8+8+8*0]
	mov rdi,rt_err0 
	call emt_stg
	mov QWORD [err_n],0xffff_0002
	jmp err
	pop r8 
	push r8
	mov r8,QWORD [r8+8+8*1]
	call LB_6228
	pop r8 
	FREE_RCD 2, r8
	jmp LB_6232
LB_6230:
	jmp LB_6232
LB_6232:
	ret
LB_6243: ;; #63 { 0'(= a2◂ [ *{ {| l |}a3◂ [ r]}] ) 1'(= {| l |} ) } ⊢ { 0'(= a2◂ [ *{ {| l |}a3◂ [ r]}] ) 1'(= {| l |} ) 2'(= a3◂ [ r] ) } : ({ _lst◂{ _s8 _opn◂_r64 } _s8 }→{ _lst◂{ _s8 _opn◂_r64 } _s8 _opn◂_r64 })
;; rsp=0 , %175~1'(= {| l |} ) %174~0'(= a2◂ [ *{ {| l |}a3◂ [ r]}] ) 
;; ?; 0'(= a2◂ [ *{ {| l |}a3◂ [ r]}] ) ⊢ 0(<2)◂{ { 3'(= {| l |} ) 4'(= a3◂ [ r] ) } 5'(= a2◂ [ *{ {| l |}a3◂ [ r]}] ) }
	mov rdi,r13
	cmp BYTE [rdi+6],0
	jnz LB_6245
	jmp LB_6246
LB_6245:
	jmp LB_6244
LB_6246:
	mov r8, QWORD [r13+8]
	mov r9, QWORD [r8+8]
	mov r10, QWORD [r8+16]
	mov QWORD [GBG_VCT+8*0],r8
	mov r11, QWORD [r13+16]
	mov QWORD [GBG_VCT+8*1],r13
	mov rdi,QWORD [GBG_VCT+8*1]
	FREE_RCD 2,rdi
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_RCD 2,rdi
;; rsp=0 , %178~5'(= a2◂ [ *{ {| l |}a3◂ [ r]}] ) %177~4'(= a3◂ [ r] ) %176~3'(= {| l |} ) %175~1'(= {| l |} ) 
	mov rdi,r9
	mov rsi,r14
	call eq_s8  
	cmp rax,1
	jnz LB_6249
	jmp LB_6248
LB_6249:
	jmp LB_6247
LB_6248:
;; rsp=0 , %178~5'(= a2◂ [ *{ {| l |}a3◂ [ r]}] ) %177~4'(= a3◂ [ r] ) %176~3'(= {| l |} ) %175~1'(= {| l |} ) 
;; ?; 4'(= a3◂ [ r] ) ⊢ 0(<2)◂0'(= r )
	mov rdi,r10
	cmp BYTE [rdi+6],0
	jnz LB_6251
	jmp LB_6252
LB_6251:
	jmp LB_6250
LB_6252:
	mov QWORD [GBG_VCT+8*0],rdi
	mov r13,QWORD [rdi+8]
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_LN rdi
;; rsp=0 , %179~0'(= r ) %178~5'(= a2◂ [ *{ {| l |}a3◂ [ r]}] ) %176~3'(= {| l |} ) %175~1'(= {| l |} ) 
; $ 0'(= r ) ⊢ 0'(= r ),2'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	mov rax,r8
	C_POP_REGS
	mov r8,rax
;; rsp=0 , %181~2'(= r ) %180~0'(= r ) %178~5'(= a2◂ [ *{ {| l |}a3◂ [ r]}] ) %176~3'(= {| l |} ) %175~1'(= {| l |} ) 
; #24 0'(= r ) ⊢ 0(<2)◂0'(= r )
;; rsp=0 , %182~0(<2)◂0'(= r ) %181~2'(= r ) %178~5'(= a2◂ [ *{ {| l |}a3◂ [ r]}] ) %176~3'(= {| l |} ) %175~1'(= {| l |} ) 
; #23 { { 3'(= {| l |} ) 0(<2)◂0'(= r ) } 5'(= a2◂ [ *{ {| l |}a3◂ [ r]}] ) } ⊢ 0(<2)◂{ { 3'(= {| l |} ) 0(<2)◂0'(= r ) } 5'(= a2◂ [ *{ {| l |}a3◂ [ r]}] ) }
;; rsp=0 , %183~0(<2)◂{ { 3'(= {| l |} ) 0(<2)◂0'(= r ) } 5'(= a2◂ [ *{ {| l |}a3◂ [ r]}] ) } %181~2'(= r ) %175~1'(= {| l |} ) 
; #24 2'(= r ) ⊢ 0(<2)◂2'(= r )
;; rsp=0 , %184~0(<2)◂2'(= r ) %183~0(<2)◂{ { 3'(= {| l |} ) 0(<2)◂0'(= r ) } 5'(= a2◂ [ *{ {| l |}a3◂ [ r]}] ) } %175~1'(= {| l |} ) 
; ∎ { 0(<2)◂{ { 3'(= {| l |} ) 0(<2)◂0'(= r ) } 5'(= a2◂ [ *{ {| l |}a3◂ [ r]}] ) } 1'(= {| l |} ) 0(<2)◂2'(= r ) }
; .mov_ptn2 { 0(<2)◂{ { 3'(= {| l |} ) 0(<2)◂0'(= r ) } 5'(= a2◂ [ *{ {| l |}a3◂ [ r]}] ) } 1'(= {| l |} ) 0(<2)◂2'(= r ) } ⊢ { 0'(= a2◂ [ *{ {| l |}a3◂ [ r]}] ) 1'(= {| l |} ) 2'(= a3◂ [ r] ) }
	mov r10,r8
; .mov_ptn 0(<2)◂4'(= r ) ⊢ 2'(= a3◂ [ r] )
	mov rax,r10
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	mov rcx,r13
; .mov_ptn 0(<2)◂{ { 3'(= {| l |} ) 0(<2)◂6'(= r ) } 5'(= a2◂ [ *{ {| l |}a3◂ [ r]}] ) } ⊢ 0'(= a2◂ [ *{ {| l |}a3◂ [ r]}] )
	ALC_RCD 2, rax
	mov r10,rax
	ALC_RCD 2, rax
	mov rdx,rax
	mov rax,r9
	mov QWORD [rdx+8+8*0],rax
	mov rax,rcx
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov QWORD [rdx+8+8*1],rax
	mov rax,rdx
	mov QWORD [r10+8+8*0],rax
	mov rax,r11
	mov QWORD [r10+8+8*1],rax
	mov rax,r10
	mov BYTE [rax+6],0
	mov r13,rax
	ret
LB_6250:
;; rsp=0 , %178~5'(= a2◂ [ *{ {| l |}a3◂ [ r]}] ) %177~4'(= a3◂ [ r] ) %176~3'(= {| l |} ) %175~1'(= {| l |} ) 
; #23 { { 3'(= {| l |} ) 4'(= a3◂ [ r] ) } 5'(= a2◂ [ *{ {| l |}a3◂ [ r]}] ) } ⊢ 0(<2)◂{ { 3'(= {| l |} ) 4'(= a3◂ [ r] ) } 5'(= a2◂ [ *{ {| l |}a3◂ [ r]}] ) }
;; rsp=0 , %185~0(<2)◂{ { 3'(= {| l |} ) 4'(= a3◂ [ r] ) } 5'(= a2◂ [ *{ {| l |}a3◂ [ r]}] ) } %175~1'(= {| l |} ) 
; #25 { } ⊢ 1(<2)◂{ }
;; rsp=0 , %186~1(<2)◂{ } %185~0(<2)◂{ { 3'(= {| l |} ) 4'(= a3◂ [ r] ) } 5'(= a2◂ [ *{ {| l |}a3◂ [ r]}] ) } %175~1'(= {| l |} ) 
; ∎ { 0(<2)◂{ { 3'(= {| l |} ) 4'(= a3◂ [ r] ) } 5'(= a2◂ [ *{ {| l |}a3◂ [ r]}] ) } 1'(= {| l |} ) 1(<2)◂{ } }
; .mov_ptn2 { 0(<2)◂{ { 3'(= {| l |} ) 4'(= a3◂ [ r] ) } 5'(= a2◂ [ *{ {| l |}a3◂ [ r]}] ) } 1'(= {| l |} ) 1(<2)◂{ } } ⊢ { 0'(= a2◂ [ *{ {| l |}a3◂ [ r]}] ) 1'(= {| l |} ) 2'(= a3◂ [ r] ) }
; .mov_ptn 1(<2)◂{ } ⊢ 2'(= a3◂ [ r] )
	mov rax,unt 
	mov rax,unt_1
	mov r8,rax
; .mov_ptn 0(<2)◂{ { 3'(= {| l |} ) 4'(= a3◂ [ r] ) } 5'(= a2◂ [ *{ {| l |}a3◂ [ r]}] ) } ⊢ 0'(= a2◂ [ *{ {| l |}a3◂ [ r]}] )
	ALC_RCD 2, rax
	mov rcx,rax
	ALC_RCD 2, rax
	mov rdx,rax
	mov rax,r9
	mov QWORD [rdx+8+8*0],rax
	mov rax,r10
	mov QWORD [rdx+8+8*1],rax
	mov rax,rdx
	mov QWORD [rcx+8+8*0],rax
	mov rax,r11
	mov QWORD [rcx+8+8*1],rax
	mov rax,rcx
	mov BYTE [rax+6],0
	mov r13,rax
	ret
LB_6247:
;; rsp=0 , %178~5'(= a2◂ [ *{ {| l |}a3◂ [ r]}] ) %177~4'(= a3◂ [ r] ) %176~3'(= {| l |} ) %175~1'(= {| l |} ) 
; #63 { 5'(= a2◂ [ *{ {| l |}a3◂ [ r]}] ) 1'(= {| l |} ) } ⊢ { 0'(= a2◂ [ *{ {| l |}a3◂ [ r]}] ) 1'(= {| l |} ) 2'(= a3◂ [ r] ) }
	sub rsp,16
	mov QWORD [rsp+8*0],r9
	mov QWORD [rsp+8*1],r10
; .mov_ptn2 { 5'(= a2◂ [ *{ {| l |}a3◂ [ r]}] ) 1'(= {| l |} ) } ⊢ { 0'(= a2◂ [ *{ {| l |}a3◂ [ r]}] ) 1'(= {| l |} ) }
; .mov_ptn 5'(= a2◂ [ *{ {| l |}a3◂ [ r]}] ) ⊢ 0'(= a2◂ [ *{ {| l |}a3◂ [ r]}] )
	mov rax,r11
	mov r13,rax
	call LB_6243
	mov r10,QWORD [rsp-8+8*2]
	mov r9,QWORD [rsp-8+8*1]
	add rsp,16
;; rsp=0 , %189~2'(= a3◂ [ r] ) %188~1'(= {| l |} ) %187~0'(= a2◂ [ *{ {| l |}a3◂ [ r]}] ) %177~4'(= a3◂ [ r] ) %176~3'(= {| l |} ) 
; #23 { { 3'(= {| l |} ) 4'(= a3◂ [ r] ) } 0'(= a2◂ [ *{ {| l |}a3◂ [ r]}] ) } ⊢ 0(<2)◂{ { 3'(= {| l |} ) 4'(= a3◂ [ r] ) } 0'(= a2◂ [ *{ {| l |}a3◂ [ r]}] ) }
;; rsp=0 , %190~0(<2)◂{ { 3'(= {| l |} ) 4'(= a3◂ [ r] ) } 0'(= a2◂ [ *{ {| l |}a3◂ [ r]}] ) } %189~2'(= a3◂ [ r] ) %188~1'(= {| l |} ) 
; ∎ { 0(<2)◂{ { 3'(= {| l |} ) 4'(= a3◂ [ r] ) } 0'(= a2◂ [ *{ {| l |}a3◂ [ r]}] ) } 1'(= {| l |} ) 2'(= a3◂ [ r] ) }
; .mov_ptn2 { 0(<2)◂{ { 3'(= {| l |} ) 4'(= a3◂ [ r] ) } 0'(= a2◂ [ *{ {| l |}a3◂ [ r]}] ) } 1'(= {| l |} ) 2'(= a3◂ [ r] ) } ⊢ { 0'(= a2◂ [ *{ {| l |}a3◂ [ r]}] ) 1'(= {| l |} ) 2'(= a3◂ [ r] ) }
	mov r11,r13
; .mov_ptn 0(<2)◂{ { 3'(= {| l |} ) 4'(= a3◂ [ r] ) } 5'(= a2◂ [ *{ {| l |}a3◂ [ r]}] ) } ⊢ 0'(= a2◂ [ *{ {| l |}a3◂ [ r]}] )
	ALC_RCD 2, rax
	mov rcx,rax
	ALC_RCD 2, rax
	mov rdx,rax
	mov rax,r9
	mov QWORD [rdx+8+8*0],rax
	mov rax,r10
	mov QWORD [rdx+8+8*1],rax
	mov rax,rdx
	mov QWORD [rcx+8+8*0],rax
	mov rax,r11
	mov QWORD [rcx+8+8*1],rax
	mov rax,rcx
	mov BYTE [rax+6],0
	mov r13,rax
	ret
LB_6244:
;; rsp=0 , %175~1'(= {| l |} ) %174~0'(= a2◂ [ *{ {| l |}a3◂ [ r]}] ) 
; #25 { } ⊢ 1(<2)◂{ }
;; rsp=0 , %191~1(<2)◂{ } %175~1'(= {| l |} ) %174~0'(= a2◂ [ *{ {| l |}a3◂ [ r]}] ) 
; ∎ { 0'(= a2◂ [ *{ {| l |}a3◂ [ r]}] ) 1'(= {| l |} ) 1(<2)◂{ } }
; .mov_ptn2 { 0'(= a2◂ [ *{ {| l |}a3◂ [ r]}] ) 1'(= {| l |} ) 1(<2)◂{ } } ⊢ { 0'(= a2◂ [ *{ {| l |}a3◂ [ r]}] ) 1'(= {| l |} ) 2'(= a3◂ [ r] ) }
; .mov_ptn 1(<2)◂{ } ⊢ 2'(= a3◂ [ r] )
	mov rax,unt 
	mov rax,unt_1
	mov r8,rax
	ret
LB_6256:
	movzx rax,BYTE [r8+6]
	jmp QWORD [LB_6259+8*rax]
LB_6259: dq LB_6257,LB_6258
LB_6257:
	ALC_RCD 2,r9
	push r8
	push r9
	mov r8,QWORD [r8+8+8*0]
	ALC_RCD 2,r9
	push r8
	push r9
	mov r8,QWORD [r8+8+8*0]
	C_PUSH_REGS
	mov rdi,r8  
	call rpc_s8  
	C_POP_REGS
	pop r9  
	pop r8 
	mov QWORD [r9+8+8*0],rax
	push r8
	push r9
	mov r8,QWORD [r8+8+8*1]
	call LB_6261
	pop r9  
	pop r8 
	mov QWORD [r9+8+8*1],rax
	mov rax,r9 
	pop r9  
	pop r8 
	mov QWORD [r9+8+8*0],rax
	push r8
	push r9
	mov r8,QWORD [r8+8+8*1]
	call LB_6256
	pop r9  
	pop r8 
	mov QWORD [r9+8+8*1],rax
	mov rax,r9 
	mov BYTE [rax+6],0
	jmp LB_6260
LB_6258:
	mov rax,unt
	mov BYTE [rax+6],1
	jmp LB_6260
LB_6260:
	ret
LB_6261:
	movzx rax,BYTE [r8+6]
	jmp QWORD [LB_6264+8*rax]
LB_6264: dq LB_6262,LB_6263
LB_6262:
	mov r8,QWORD [r8+8]
	mov rax,r8
	ALC_LN rsi 
	mov BYTE [rsi+6],0
	mov QWORD [rsi+8],rax
	mov rax,rsi
	jmp LB_6265
LB_6263:
	mov rax,unt
	mov BYTE [rax+6],1
	jmp LB_6265
LB_6265:
	ret
LB_6266:
	movzx rax,BYTE [r8+6]
	jmp QWORD [LB_6269+8*rax]
LB_6269: dq LB_6267,LB_6268
LB_6267:
	push r8
	mov r8,QWORD [r8+8+8*0]
	push r8
	mov r8,QWORD [r8+8+8*0]
	pop r8 
	push r8
	mov r8,QWORD [r8+8+8*1]
	call LB_6213
	pop r8 
	push r8
	mov r8,QWORD [r8+8+8*2]
	call LB_6223
	pop r8 
	push r8
	mov r8,QWORD [r8+8+8*3]
	call LB_6228
	pop r8 
	FREE_RCD 4, r8
	pop r8 
	push r8
	mov r8,QWORD [r8+8+8*1]
	call LB_6266
	pop r8 
	FREE_RCD 2, r8
	jmp LB_6270
LB_6268:
	jmp LB_6270
LB_6270:
	ret
LB_6239: ;; #347 { 0'(= a18◂ [ ] ) 1'(= {| a2◂ [ *{ {| l |}a3◂ [ r]}]|} ) 2'(= a2◂ [ *{ {| l |}a3◂ [ r]}] ) 3'(= a2◂ [ *{ ra2◂ [ *{ {| l |}a3◂ [ r]}]a2◂ [ q0]a2◂ [ q1]}] ) } ⊢ { 0'(= {| a2◂ [ *{ {| l |}a3◂ [ r]}]|} ) 1'(= a2◂ [ *{ {| l |}a3◂ [ r]}] ) 2'(= a2◂ [ *{ ra2◂ [ *{ {| l |}a3◂ [ r]}]a2◂ [ q0]a2◂ [ q1]}] ) 3'(= r ) } : ({ _t18 _arr◂_lst◂{ _s8 _opn◂_r64 } _lst◂{ _s8 _opn◂_r64 } _lst◂{ _r64 _lst◂{ _s8 _opn◂_r64 } _lst◂7858'(=7860'(1)) _lst◂7859'(=7861'(1)) } }→{ _arr◂_lst◂{ _s8 _opn◂_r64 } _lst◂{ _s8 _opn◂_r64 } _lst◂{ _r64 _lst◂{ _s8 _opn◂_r64 } _lst◂7860'(1) _lst◂7861'(1) } _r64 })
;; rsp=0 , %3120~3'(= a2◂ [ *{ ra2◂ [ *{ {| l |}a3◂ [ r]}]a2◂ [ q0]a2◂ [ q1]}] ) %3119~2'(= a2◂ [ *{ {| l |}a3◂ [ r]}] ) %3118~1'(= {| a2◂ [ *{ {| l |}a3◂ [ r]}]|} ) %3117~0'(= a18◂ [ ] ) 
;; ? 0'(= a18◂ [ ] ) ⊢ 0(<2)◂{ 4'(= {| l |} ) 5'(= a18◂ [ ] ) }
	mov rdi,r13
	cmp BYTE [rdi+6],0
	jnz LB_6241
	jmp LB_6242
LB_6241:
	jmp LB_6240
LB_6242:
	mov r10, QWORD [r13+8]
	mov r11, QWORD [r13+16]
	mov QWORD [GBG_VCT+8*0],r13
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_RCD 2,rdi
;; rsp=0 , %3123~5'(= a18◂ [ ] ) %3122~4'(= {| l |} ) %3120~3'(= a2◂ [ *{ ra2◂ [ *{ {| l |}a3◂ [ r]}]a2◂ [ q0]a2◂ [ q1]}] ) %3119~2'(= a2◂ [ *{ {| l |}a3◂ [ r]}] ) %3118~1'(= {| a2◂ [ *{ {| l |}a3◂ [ r]}]|} ) 
; #63 { 2'(= a2◂ [ *{ {| l |}a3◂ [ r]}] ) 4'(= {| l |} ) } ⊢ { 0'(= a2◂ [ *{ {| l |}a3◂ [ r]}] ) 4'(= {| l |} ) 2'(= a3◂ [ r] ) }
	sub rsp,24
	mov QWORD [rsp+8*0],r14
	mov QWORD [rsp+8*1],r9
	mov QWORD [rsp+8*2],r11
; .mov_ptn2 { 2'(= a2◂ [ *{ {| l |}a3◂ [ r]}] ) 4'(= {| l |} ) } ⊢ { 0'(= a2◂ [ *{ {| l |}a3◂ [ r]}] ) 1'(= {| l |} ) }
; .mov_ptn 4'(= {| l |} ) ⊢ 1'(= {| l |} )
	mov rax,r10
	mov r14,rax
; .mov_ptn 2'(= a2◂ [ *{ {| l |}a3◂ [ r]}] ) ⊢ 0'(= a2◂ [ *{ {| l |}a3◂ [ r]}] )
	mov rax,r8
	mov r13,rax
	call LB_6243
	mov r11,QWORD [rsp-8+8*3]
	mov r9,QWORD [rsp-8+8*2]
	mov r10,r14
	mov r14,QWORD [rsp-8+8*1]
	add rsp,24
;; rsp=0 , %3126~2'(= a3◂ [ r] ) %3125~4'(= {| l |} ) %3124~0'(= a2◂ [ *{ {| l |}a3◂ [ r]}] ) %3123~5'(= a18◂ [ ] ) %3120~3'(= a2◂ [ *{ ra2◂ [ *{ {| l |}a3◂ [ r]}]a2◂ [ q0]a2◂ [ q1]}] ) %3118~1'(= {| a2◂ [ *{ {| l |}a3◂ [ r]}]|} ) 
;; ? 2'(= a3◂ [ r] ) ⊢ 0(<2)◂6'(= r )
	mov rdi,r8
	cmp BYTE [rdi+6],0
	jnz LB_6254
	jmp LB_6255
LB_6254:
	jmp LB_6253
LB_6255:
	mov QWORD [GBG_VCT+8*0],rdi
	mov rcx,QWORD [rdi+8]
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_LN rdi
;; rsp=0 , %3127~6'(= r ) %3125~4'(= {| l |} ) %3124~0'(= a2◂ [ *{ {| l |}a3◂ [ r]}] ) %3123~5'(= a18◂ [ ] ) %3120~3'(= a2◂ [ *{ ra2◂ [ *{ {| l |}a3◂ [ r]}]a2◂ [ q0]a2◂ [ q1]}] ) %3118~1'(= {| a2◂ [ *{ {| l |}a3◂ [ r]}]|} ) 
; #4 { 1'(= {| a2◂ [ *{ {| l |}a3◂ [ r]}]|} ) 6'(= r ) } ⊢ { 1'(= {| a2◂ [ *{ {| l |}a3◂ [ r]}]|} ) 6'(= r ) 7'(= a2◂ [ *{ {| l |}a3◂ [ r]}] ) }
	mov rax,rcx
	mov rdi,r14
	mov rsi,0x0000_ffff_ffff_ffff 
	and rsi,QWORD [rdi]
	cmp rax,rsi 
	jge err 
	mov rdi,[rdi+8+8*rax]
	C_PUSH_REGS
	mov r8,rdi
	call LB_6256
	C_POP_REGS
	mov r8,rax
; .mov_ptn2 2'(= a2◂ [ *{ {| l |}a3◂ [ r]}] ) ⊢ 7'(= a2◂ [ *{ {| l |}a3◂ [ r]}] )
	sub rsp,8
	mov QWORD [rsp-8+8*1],rdx
; .mov_ptn 2'(= a2◂ [ *{ {| l |}a3◂ [ r]}] ) ⊢ 7'(= a2◂ [ *{ {| l |}a3◂ [ r]}] )
	mov rax,r8
	mov rdx,rax
;; rsp=1 , %3130~7'(= a2◂ [ *{ {| l |}a3◂ [ r]}] ) %3129~6'(= r ) %3128~1'(= {| a2◂ [ *{ {| l |}a3◂ [ r]}]|} ) %3125~4'(= {| l |} ) %3124~0'(= a2◂ [ *{ {| l |}a3◂ [ r]}] ) %3123~5'(= a18◂ [ ] ) %3120~3'(= a2◂ [ *{ ra2◂ [ *{ {| l |}a3◂ [ r]}]a2◂ [ q0]a2◂ [ q1]}] ) 
; #22 { } ⊢ 1(<2)◂{ }
;; rsp=1 , %3131~1(<2)◂{ } %3130~7'(= a2◂ [ *{ {| l |}a3◂ [ r]}] ) %3129~6'(= r ) %3128~1'(= {| a2◂ [ *{ {| l |}a3◂ [ r]}]|} ) %3125~4'(= {| l |} ) %3124~0'(= a2◂ [ *{ {| l |}a3◂ [ r]}] ) %3123~5'(= a18◂ [ ] ) %3120~3'(= a2◂ [ *{ ra2◂ [ *{ {| l |}a3◂ [ r]}]a2◂ [ q0]a2◂ [ q1]}] ) 
; #347 { 5'(= a18◂ [ ] ) 1'(= {| a2◂ [ *{ {| l |}a3◂ [ r]}]|} ) 7'(= a2◂ [ *{ {| l |}a3◂ [ r]}] ) 1(<2)◂{ } } ⊢ { 7'(= {| a2◂ [ *{ {| l |}a3◂ [ r]}]|} ) 1'(= a2◂ [ *{ {| l |}a3◂ [ r]}] ) 2'(= a2◂ [ *{ ra2◂ [ *{ {| l |}a3◂ [ r]}]a2◂ [ q0]a2◂ [ q1]}] ) 5'(= r ) }
	sub rsp,32
	mov QWORD [rsp+8*0],r13
	mov QWORD [rsp+8*1],r9
	mov QWORD [rsp+8*2],r10
	mov QWORD [rsp+8*3],rcx
; .mov_ptn2 { 5'(= a18◂ [ ] ) 1'(= {| a2◂ [ *{ {| l |}a3◂ [ r]}]|} ) 7'(= a2◂ [ *{ {| l |}a3◂ [ r]}] ) 1(<2)◂{ } } ⊢ { 0'(= a18◂ [ ] ) 1'(= {| a2◂ [ *{ {| l |}a3◂ [ r]}]|} ) 2'(= a2◂ [ *{ {| l |}a3◂ [ r]}] ) 3'(= a2◂ [ *{ ra2◂ [ *{ {| l |}a3◂ [ r]}]a2◂ [ q0]a2◂ [ q1]}] ) }
; .mov_ptn 1(<2)◂{ } ⊢ 3'(= a2◂ [ *{ ra2◂ [ *{ {| l |}a3◂ [ r]}]a2◂ [ q0]a2◂ [ q1]}] )
	mov rax,unt 
	mov rax,unt_1
	mov r9,rax
; .mov_ptn 7'(= a2◂ [ *{ {| l |}a3◂ [ r]}] ) ⊢ 2'(= a2◂ [ *{ {| l |}a3◂ [ r]}] )
	mov rax,rdx
	mov r8,rax
; .mov_ptn 5'(= a18◂ [ ] ) ⊢ 0'(= a18◂ [ ] )
	mov rax,r11
	mov r13,rax
	call LB_6239
	mov rcx,QWORD [rsp-8+8*4]
	mov r10,QWORD [rsp-8+8*3]
	mov r11,r9
	mov r9,QWORD [rsp-8+8*2]
	mov rdx,r13
	mov r13,QWORD [rsp-8+8*1]
	add rsp,40
;; rsp=0 , %3135~5'(= r ) %3134~2'(= a2◂ [ *{ ra2◂ [ *{ {| l |}a3◂ [ r]}]a2◂ [ q0]a2◂ [ q1]}] ) %3133~1'(= a2◂ [ *{ {| l |}a3◂ [ r]}] ) %3132~7'(= {| a2◂ [ *{ {| l |}a3◂ [ r]}]|} ) %3129~6'(= r ) %3125~4'(= {| l |} ) %3124~0'(= a2◂ [ *{ {| l |}a3◂ [ r]}] ) %3120~3'(= a2◂ [ *{ ra2◂ [ *{ {| l |}a3◂ [ r]}]a2◂ [ q0]a2◂ [ q1]}] ) 
; ∎ { 7'(= {| a2◂ [ *{ {| l |}a3◂ [ r]}]|} ) 0'(= a2◂ [ *{ {| l |}a3◂ [ r]}] ) 3'(= a2◂ [ *{ ra2◂ [ *{ {| l |}a3◂ [ r]}]a2◂ [ q0]a2◂ [ q1]}] ) 5'(= r ) }
; .dlt.ptn 2'(= a2◂ [ *{ ra2◂ [ *{ {| l |}a3◂ [ r]}]a2◂ [ q0]a2◂ [ q1]}] )
	mov rdi,r8
	C_PUSH_REGS
	mov r8,rdi
	call LB_6266
	C_POP_REGS
; .dlt.ptn 1'(= a2◂ [ *{ {| l |}a3◂ [ r]}] )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	call LB_6213
	C_POP_REGS
; .dlt.ptn 6'(= r )
	mov rdi,rcx
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .dlt.ptn 4'(= {| l |} )
	mov rdi,r10
	C_PUSH_REGS
	mov r8,rdi
	mov rdi,r8
	call free_s8
	C_POP_REGS
; .mov_ptn2 { 7'(= {| a2◂ [ *{ {| l |}a3◂ [ r]}]|} ) 0'(= a2◂ [ *{ {| l |}a3◂ [ r]}] ) 3'(= a2◂ [ *{ ra2◂ [ *{ {| l |}a3◂ [ r]}]a2◂ [ q0]a2◂ [ q1]}] ) 5'(= r ) } ⊢ { 0'(= {| a2◂ [ *{ {| l |}a3◂ [ r]}]|} ) 1'(= a2◂ [ *{ {| l |}a3◂ [ r]}] ) 2'(= a2◂ [ *{ ra2◂ [ *{ {| l |}a3◂ [ r]}]a2◂ [ q0]a2◂ [ q1]}] ) 3'(= r ) }
	mov r10,r9
; .mov_ptn 5'(= r ) ⊢ 3'(= r )
	mov rax,r11
	mov r9,rax
; .mov_ptn 0'(= a2◂ [ *{ {| l |}a3◂ [ r]}] ) ⊢ 1'(= a2◂ [ *{ {| l |}a3◂ [ r]}] )
	mov rax,r13
	mov r14,rax
; .mov_ptn 4'(= a2◂ [ *{ ra2◂ [ *{ {| l |}a3◂ [ r]}]a2◂ [ q0]a2◂ [ q1]}] ) ⊢ 2'(= a2◂ [ *{ ra2◂ [ *{ {| l |}a3◂ [ r]}]a2◂ [ q0]a2◂ [ q1]}] )
	mov rax,r10
	mov r8,rax
; .mov_ptn 7'(= {| a2◂ [ *{ {| l |}a3◂ [ r]}]|} ) ⊢ 0'(= {| a2◂ [ *{ {| l |}a3◂ [ r]}]|} )
	mov rax,rdx
	mov r13,rax
	ret
LB_6253:
;; ?. 2'(= a3◂ [ r] ) ⊢ 1(<2)◂{ }
;; rsp=0 , %3125~4'(= {| l |} ) %3124~0'(= a2◂ [ *{ {| l |}a3◂ [ r]}] ) %3123~5'(= a18◂ [ ] ) %3120~3'(= a2◂ [ *{ ra2◂ [ *{ {| l |}a3◂ [ r]}]a2◂ [ q0]a2◂ [ q1]}] ) %3118~1'(= {| a2◂ [ *{ {| l |}a3◂ [ r]}]|} ) 
;; ? 3'(= a2◂ [ *{ ra2◂ [ *{ {| l |}a3◂ [ r]}]a2◂ [ q0]a2◂ [ q1]}] ) ⊢ 0(<2)◂{ { 6'(= r ) 7'(= a2◂ [ *{ {| l |}a3◂ [ r]}] ) 8'(= a2◂ [ q0] ) 9'(= a2◂ [ q1] ) } 10'(= a2◂ [ *{ ra2◂ [ *{ {| l |}a3◂ [ r]}]a2◂ [ q0]a2◂ [ q1]}] ) }
	mov rdi,r9
	cmp BYTE [rdi+6],0
	jnz LB_6272
	jmp LB_6273
LB_6272:
	jmp LB_6271
LB_6273:
	mov r8, QWORD [r9+8]
	mov rcx, QWORD [r8+8]
	mov rdx, QWORD [r8+16]
	sub rsp,8
	MOV_RDI QWORD [rsp-8+8*1], QWORD [r8+24]
	sub rsp,8
	MOV_RDI QWORD [rsp-8+8*1], QWORD [r8+32]
	mov QWORD [GBG_VCT+8*0],r8
	sub rsp,8
	MOV_RDI QWORD [rsp-8+8*1], QWORD [r9+16]
	mov QWORD [GBG_VCT+8*1],r9
	mov rdi,QWORD [GBG_VCT+8*1]
	FREE_RCD 2,rdi
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_RCD 4,rdi
;; rsp=3 , %3140~10'(= a2◂ [ *{ ra2◂ [ *{ {| l |}a3◂ [ r]}]a2◂ [ q0]a2◂ [ q1]}] ) %3139~9'(= a2◂ [ q1] ) %3138~8'(= a2◂ [ q0] ) %3137~7'(= a2◂ [ *{ {| l |}a3◂ [ r]}] ) %3136~6'(= r ) %3125~4'(= {| l |} ) %3124~0'(= a2◂ [ *{ {| l |}a3◂ [ r]}] ) %3123~5'(= a18◂ [ ] ) %3118~1'(= {| a2◂ [ *{ {| l |}a3◂ [ r]}]|} ) 
; #86 { 4'(= {| l |} ) 5'(= a18◂ [ ] ) } ⊢ 0(<2)◂{ 4'(= {| l |} ) 5'(= a18◂ [ ] ) }
;; rsp=3 , %3141~0(<2)◂{ 4'(= {| l |} ) 5'(= a18◂ [ ] ) } %3140~10'(= a2◂ [ *{ ra2◂ [ *{ {| l |}a3◂ [ r]}]a2◂ [ q0]a2◂ [ q1]}] ) %3139~9'(= a2◂ [ q1] ) %3138~8'(= a2◂ [ q0] ) %3137~7'(= a2◂ [ *{ {| l |}a3◂ [ r]}] ) %3136~6'(= r ) %3124~0'(= a2◂ [ *{ {| l |}a3◂ [ r]}] ) %3118~1'(= {| a2◂ [ *{ {| l |}a3◂ [ r]}]|} ) 
; #347 { 0(<2)◂{ 4'(= {| l |} ) 5'(= a18◂ [ ] ) } 1'(= {| a2◂ [ *{ {| l |}a3◂ [ r]}]|} ) 7'(= a2◂ [ *{ {| l |}a3◂ [ r]}] ) 10'(= a2◂ [ *{ ra2◂ [ *{ {| l |}a3◂ [ r]}]a2◂ [ q0]a2◂ [ q1]}] ) } ⊢ { 4'(= {| a2◂ [ *{ {| l |}a3◂ [ r]}]|} ) 1'(= a2◂ [ *{ {| l |}a3◂ [ r]}] ) 2'(= a2◂ [ *{ ra2◂ [ *{ {| l |}a3◂ [ r]}]a2◂ [ q0]a2◂ [ q1]}] ) 3'(= r ) }
	sub rsp,16
	mov QWORD [rsp+8*0],r13
	mov QWORD [rsp+8*1],rcx
; .mov_ptn2 { 0(<2)◂{ 4'(= {| l |} ) 5'(= a18◂ [ ] ) } 1'(= {| a2◂ [ *{ {| l |}a3◂ [ r]}]|} ) 7'(= a2◂ [ *{ {| l |}a3◂ [ r]}] ) 10'(= a2◂ [ *{ ra2◂ [ *{ {| l |}a3◂ [ r]}]a2◂ [ q0]a2◂ [ q1]}] ) } ⊢ { 0'(= a18◂ [ ] ) 1'(= {| a2◂ [ *{ {| l |}a3◂ [ r]}]|} ) 2'(= a2◂ [ *{ {| l |}a3◂ [ r]}] ) 3'(= a2◂ [ *{ ra2◂ [ *{ {| l |}a3◂ [ r]}]a2◂ [ q0]a2◂ [ q1]}] ) }
; .mov_ptn 10'(= a2◂ [ *{ ra2◂ [ *{ {| l |}a3◂ [ r]}]a2◂ [ q0]a2◂ [ q1]}] ) ⊢ 3'(= a2◂ [ *{ ra2◂ [ *{ {| l |}a3◂ [ r]}]a2◂ [ q0]a2◂ [ q1]}] )
	mov rax,QWORD [rsp-8+8*3]
	mov r9,rax
; .mov_ptn 7'(= a2◂ [ *{ {| l |}a3◂ [ r]}] ) ⊢ 2'(= a2◂ [ *{ {| l |}a3◂ [ r]}] )
	mov rax,rdx
	mov r8,rax
; .mov_ptn 0(<2)◂{ 4'(= {| l |} ) 5'(= a18◂ [ ] ) } ⊢ 0'(= a18◂ [ ] )
	ALC_RCD 2, rax
	mov rcx,rax
	mov rax,r10
	mov QWORD [rcx+8+8*0],rax
	mov rax,r11
	mov QWORD [rcx+8+8*1],rax
	mov rax,rcx
	mov BYTE [rax+6],0
	mov r13,rax
	call LB_6239
	mov rcx,QWORD [rsp-8+8*2]
	mov r10,r13
	mov r13,QWORD [rsp-8+8*1]
	add rsp,24
;; rsp=2 , %3145~3'(= r ) %3144~2'(= a2◂ [ *{ ra2◂ [ *{ {| l |}a3◂ [ r]}]a2◂ [ q0]a2◂ [ q1]}] ) %3143~1'(= a2◂ [ *{ {| l |}a3◂ [ r]}] ) %3142~4'(= {| a2◂ [ *{ {| l |}a3◂ [ r]}]|} ) %3139~9'(= a2◂ [ q1] ) %3138~8'(= a2◂ [ q0] ) %3136~6'(= r ) %3124~0'(= a2◂ [ *{ {| l |}a3◂ [ r]}] ) 
; #23 { { 6'(= r ) 1'(= a2◂ [ *{ {| l |}a3◂ [ r]}] ) 8'(= a2◂ [ q0] ) 9'(= a2◂ [ q1] ) } 2'(= a2◂ [ *{ ra2◂ [ *{ {| l |}a3◂ [ r]}]a2◂ [ q0]a2◂ [ q1]}] ) } ⊢ 0(<2)◂{ { 6'(= r ) 1'(= a2◂ [ *{ {| l |}a3◂ [ r]}] ) 8'(= a2◂ [ q0] ) 9'(= a2◂ [ q1] ) } 2'(= a2◂ [ *{ ra2◂ [ *{ {| l |}a3◂ [ r]}]a2◂ [ q0]a2◂ [ q1]}] ) }
;; rsp=2 , %3146~0(<2)◂{ { 6'(= r ) 1'(= a2◂ [ *{ {| l |}a3◂ [ r]}] ) 8'(= a2◂ [ q0] ) 9'(= a2◂ [ q1] ) } 2'(= a2◂ [ *{ ra2◂ [ *{ {| l |}a3◂ [ r]}]a2◂ [ q0]a2◂ [ q1]}] ) } %3145~3'(= r ) %3142~4'(= {| a2◂ [ *{ {| l |}a3◂ [ r]}]|} ) %3124~0'(= a2◂ [ *{ {| l |}a3◂ [ r]}] ) 
; ∎ { 4'(= {| a2◂ [ *{ {| l |}a3◂ [ r]}]|} ) 0'(= a2◂ [ *{ {| l |}a3◂ [ r]}] ) 0(<2)◂{ { 6'(= r ) 1'(= a2◂ [ *{ {| l |}a3◂ [ r]}] ) 8'(= a2◂ [ q0] ) 9'(= a2◂ [ q1] ) } 2'(= a2◂ [ *{ ra2◂ [ *{ {| l |}a3◂ [ r]}]a2◂ [ q0]a2◂ [ q1]}] ) } 3'(= r ) }
; .mov_ptn2 { 4'(= {| a2◂ [ *{ {| l |}a3◂ [ r]}]|} ) 0'(= a2◂ [ *{ {| l |}a3◂ [ r]}] ) 0(<2)◂{ { 6'(= r ) 1'(= a2◂ [ *{ {| l |}a3◂ [ r]}] ) 8'(= a2◂ [ q0] ) 9'(= a2◂ [ q1] ) } 2'(= a2◂ [ *{ ra2◂ [ *{ {| l |}a3◂ [ r]}]a2◂ [ q0]a2◂ [ q1]}] ) } 3'(= r ) } ⊢ { 0'(= {| a2◂ [ *{ {| l |}a3◂ [ r]}]|} ) 1'(= a2◂ [ *{ {| l |}a3◂ [ r]}] ) 2'(= a2◂ [ *{ ra2◂ [ *{ {| l |}a3◂ [ r]}]a2◂ [ q0]a2◂ [ q1]}] ) 3'(= r ) }
	mov r11,r8
; .mov_ptn 0(<2)◂{ { 6'(= r ) 1'(= a2◂ [ *{ {| l |}a3◂ [ r]}] ) 8'(= a2◂ [ q0] ) 9'(= a2◂ [ q1] ) } 5'(= a2◂ [ *{ ra2◂ [ *{ {| l |}a3◂ [ r]}]a2◂ [ q0]a2◂ [ q1]}] ) } ⊢ 2'(= a2◂ [ *{ ra2◂ [ *{ {| l |}a3◂ [ r]}]a2◂ [ q0]a2◂ [ q1]}] )
	ALC_RCD 2, rax
	mov rdx,rax
	sub rsp,8
	ALC_RCD 4, rax
	mov QWORD [rsp-8+8*1],rax
	mov rax,rcx
	mov rdi,QWORD [rsp-8+8*1]
	mov QWORD [rdi+8+8*0],rax
	mov rax,r14
	mov rdi,QWORD [rsp-8+8*1]
	mov QWORD [rdi+8+8*1],rax
	mov rax,QWORD [rsp-8+8*3]
	mov rdi,QWORD [rsp-8+8*1]
	mov QWORD [rdi+8+8*2],rax
	mov rax,QWORD [rsp-8+8*2]
	mov rdi,QWORD [rsp-8+8*1]
	mov QWORD [rdi+8+8*3],rax
	mov rax,QWORD [rsp-8+8*1]
	mov QWORD [rdx+8+8*0],rax
	mov rax,r11
	mov QWORD [rdx+8+8*1],rax
	mov rax,rdx
	mov BYTE [rax+6],0
	mov r8,rax
; .mov_ptn 0'(= a2◂ [ *{ {| l |}a3◂ [ r]}] ) ⊢ 1'(= a2◂ [ *{ {| l |}a3◂ [ r]}] )
	mov rax,r13
	mov r14,rax
; .mov_ptn 4'(= {| a2◂ [ *{ {| l |}a3◂ [ r]}]|} ) ⊢ 0'(= {| a2◂ [ *{ {| l |}a3◂ [ r]}]|} )
	mov rax,r10
	mov r13,rax
	add rsp,24
	ret
LB_6271:
;; ?. 3'(= a2◂ [ *{ ra2◂ [ *{ {| l |}a3◂ [ r]}]a2◂ [ q0]a2◂ [ q1]}] ) ⊢ 1(<2)◂{ }
;; rsp=0 , %3125~4'(= {| l |} ) %3124~0'(= a2◂ [ *{ {| l |}a3◂ [ r]}] ) %3123~5'(= a18◂ [ ] ) %3118~1'(= {| a2◂ [ *{ {| l |}a3◂ [ r]}]|} ) 
; #10 %[ "slv_ns_m 0:not found" ] ⊢ %[ "slv_ns_m 0:not found" ]
	mov rdi,fmt_emt
	call emt_stg
	mov rdi,LB_6274
	call emt_stg 
	mov rdi,fmt_nl
	call emt_stg
	jmp LB_6275
LB_6275:
; .dlt.ptn %[ "slv_ns_m 0:not found" ]
;; rsp=0 , %3125~4'(= {| l |} ) %3124~0'(= a2◂ [ *{ {| l |}a3◂ [ r]}] ) %3123~5'(= a18◂ [ ] ) %3118~1'(= {| a2◂ [ *{ {| l |}a3◂ [ r]}]|} ) 
; #10 4'(= {| l |} ) ⊢ 4'(= {| l |} )
	mov rdi,fmt_emt
	call emt_stg
	mov rdi,r10
	C_PUSH_REGS
	mov r8,rdi
	mov rdi,r8
	call emt_s8
	C_POP_REGS
	mov rdi,fmt_nl
	call emt_stg
	jmp LB_6276
LB_6276:
; .dlt.ptn 4'(= {| l |} )
	mov rdi,r10
	C_PUSH_REGS
	mov r8,rdi
	mov rdi,r8
	call free_s8
	C_POP_REGS
;; rsp=0 , %3124~0'(= a2◂ [ *{ {| l |}a3◂ [ r]}] ) %3123~5'(= a18◂ [ ] ) %3118~1'(= {| a2◂ [ *{ {| l |}a3◂ [ r]}]|} ) 
	mov rdi,LB_6277
	call emt_stg 
	jmp err
LB_6240:
;; ?. 0'(= a18◂ [ ] ) ⊢ 1(<2)◂0'(= {| l |} )
;; rsp=0 , %3121~0'(= {| l |} ) %3120~3'(= a2◂ [ *{ ra2◂ [ *{ {| l |}a3◂ [ r]}]a2◂ [ q0]a2◂ [ q1]}] ) %3119~2'(= a2◂ [ *{ {| l |}a3◂ [ r]}] ) %3118~1'(= {| a2◂ [ *{ {| l |}a3◂ [ r]}]|} ) 
; #63 { 2'(= a2◂ [ *{ {| l |}a3◂ [ r]}] ) 0'(= {| l |} ) } ⊢ { 0'(= a2◂ [ *{ {| l |}a3◂ [ r]}] ) 4'(= {| l |} ) 2'(= a3◂ [ r] ) }
	sub rsp,16
	mov QWORD [rsp+8*0],r14
	mov QWORD [rsp+8*1],r9
; .mov_ptn2 { 2'(= a2◂ [ *{ {| l |}a3◂ [ r]}] ) 0'(= {| l |} ) } ⊢ { 0'(= a2◂ [ *{ {| l |}a3◂ [ r]}] ) 1'(= {| l |} ) }
; .mov_ptn 0'(= {| l |} ) ⊢ 1'(= {| l |} )
	mov rax,r13
	mov r14,rax
; .mov_ptn 2'(= a2◂ [ *{ {| l |}a3◂ [ r]}] ) ⊢ 0'(= a2◂ [ *{ {| l |}a3◂ [ r]}] )
	mov rax,r8
	mov r13,rax
	call LB_6243
	mov r9,QWORD [rsp-8+8*2]
	mov r10,r14
	mov r14,QWORD [rsp-8+8*1]
	add rsp,16
;; rsp=0 , %3151~2'(= a3◂ [ r] ) %3150~4'(= {| l |} ) %3149~0'(= a2◂ [ *{ {| l |}a3◂ [ r]}] ) %3120~3'(= a2◂ [ *{ ra2◂ [ *{ {| l |}a3◂ [ r]}]a2◂ [ q0]a2◂ [ q1]}] ) %3118~1'(= {| a2◂ [ *{ {| l |}a3◂ [ r]}]|} ) 
;; ? 2'(= a3◂ [ r] ) ⊢ 0(<2)◂5'(= r )
	mov rdi,r8
	cmp BYTE [rdi+6],0
	jnz LB_6279
	jmp LB_6280
LB_6279:
	jmp LB_6278
LB_6280:
	mov QWORD [GBG_VCT+8*0],rdi
	mov r11,QWORD [rdi+8]
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_LN rdi
;; rsp=0 , %3152~5'(= r ) %3150~4'(= {| l |} ) %3149~0'(= a2◂ [ *{ {| l |}a3◂ [ r]}] ) %3120~3'(= a2◂ [ *{ ra2◂ [ *{ {| l |}a3◂ [ r]}]a2◂ [ q0]a2◂ [ q1]}] ) %3118~1'(= {| a2◂ [ *{ {| l |}a3◂ [ r]}]|} ) 
; ∎ { 1'(= {| a2◂ [ *{ {| l |}a3◂ [ r]}]|} ) 0'(= a2◂ [ *{ {| l |}a3◂ [ r]}] ) 3'(= a2◂ [ *{ ra2◂ [ *{ {| l |}a3◂ [ r]}]a2◂ [ q0]a2◂ [ q1]}] ) 5'(= r ) }
; .dlt.ptn 4'(= {| l |} )
	mov rdi,r10
	C_PUSH_REGS
	mov r8,rdi
	mov rdi,r8
	call free_s8
	C_POP_REGS
; .mov_ptn2 { 1'(= {| a2◂ [ *{ {| l |}a3◂ [ r]}]|} ) 0'(= a2◂ [ *{ {| l |}a3◂ [ r]}] ) 3'(= a2◂ [ *{ ra2◂ [ *{ {| l |}a3◂ [ r]}]a2◂ [ q0]a2◂ [ q1]}] ) 5'(= r ) } ⊢ { 0'(= {| a2◂ [ *{ {| l |}a3◂ [ r]}]|} ) 1'(= a2◂ [ *{ {| l |}a3◂ [ r]}] ) 2'(= a2◂ [ *{ ra2◂ [ *{ {| l |}a3◂ [ r]}]a2◂ [ q0]a2◂ [ q1]}] ) 3'(= r ) }
	mov r10,r9
; .mov_ptn 5'(= r ) ⊢ 3'(= r )
	mov rax,r11
	mov r9,rax
	mov rcx,r14
; .mov_ptn 0'(= a2◂ [ *{ {| l |}a3◂ [ r]}] ) ⊢ 1'(= a2◂ [ *{ {| l |}a3◂ [ r]}] )
	mov rax,r13
	mov r14,rax
; .mov_ptn 4'(= a2◂ [ *{ ra2◂ [ *{ {| l |}a3◂ [ r]}]a2◂ [ q0]a2◂ [ q1]}] ) ⊢ 2'(= a2◂ [ *{ ra2◂ [ *{ {| l |}a3◂ [ r]}]a2◂ [ q0]a2◂ [ q1]}] )
	mov rax,r10
	mov r8,rax
; .mov_ptn 6'(= {| a2◂ [ *{ {| l |}a3◂ [ r]}]|} ) ⊢ 0'(= {| a2◂ [ *{ {| l |}a3◂ [ r]}]|} )
	mov rax,rcx
	mov r13,rax
	ret
LB_6278:
;; ?. 2'(= a3◂ [ r] ) ⊢ 1(<2)◂{ }
;; rsp=0 , %3150~4'(= {| l |} ) %3149~0'(= a2◂ [ *{ {| l |}a3◂ [ r]}] ) %3120~3'(= a2◂ [ *{ ra2◂ [ *{ {| l |}a3◂ [ r]}]a2◂ [ q0]a2◂ [ q1]}] ) %3118~1'(= {| a2◂ [ *{ {| l |}a3◂ [ r]}]|} ) 
;; ? 3'(= a2◂ [ *{ ra2◂ [ *{ {| l |}a3◂ [ r]}]a2◂ [ q0]a2◂ [ q1]}] ) ⊢ 0(<2)◂{ { 5'(= r ) 6'(= a2◂ [ *{ {| l |}a3◂ [ r]}] ) 7'(= a2◂ [ q0] ) 8'(= a2◂ [ q1] ) } 9'(= a2◂ [ *{ ra2◂ [ *{ {| l |}a3◂ [ r]}]a2◂ [ q0]a2◂ [ q1]}] ) }
	mov rdi,r9
	cmp BYTE [rdi+6],0
	jnz LB_6282
	jmp LB_6283
LB_6282:
	jmp LB_6281
LB_6283:
	mov r8, QWORD [r9+8]
	mov r11, QWORD [r8+8]
	mov rcx, QWORD [r8+16]
	mov rdx, QWORD [r8+24]
	sub rsp,8
	MOV_RDI QWORD [rsp-8+8*1], QWORD [r8+32]
	mov QWORD [GBG_VCT+8*0],r8
	sub rsp,8
	MOV_RDI QWORD [rsp-8+8*1], QWORD [r9+16]
	mov QWORD [GBG_VCT+8*1],r9
	mov rdi,QWORD [GBG_VCT+8*1]
	FREE_RCD 2,rdi
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_RCD 4,rdi
;; rsp=2 , %3157~9'(= a2◂ [ *{ ra2◂ [ *{ {| l |}a3◂ [ r]}]a2◂ [ q0]a2◂ [ q1]}] ) %3156~8'(= a2◂ [ q1] ) %3155~7'(= a2◂ [ q0] ) %3154~6'(= a2◂ [ *{ {| l |}a3◂ [ r]}] ) %3153~5'(= r ) %3150~4'(= {| l |} ) %3149~0'(= a2◂ [ *{ {| l |}a3◂ [ r]}] ) %3118~1'(= {| a2◂ [ *{ {| l |}a3◂ [ r]}]|} ) 
; #85 4'(= {| l |} ) ⊢ 1(<2)◂4'(= {| l |} )
;; rsp=2 , %3158~1(<2)◂4'(= {| l |} ) %3157~9'(= a2◂ [ *{ ra2◂ [ *{ {| l |}a3◂ [ r]}]a2◂ [ q0]a2◂ [ q1]}] ) %3156~8'(= a2◂ [ q1] ) %3155~7'(= a2◂ [ q0] ) %3154~6'(= a2◂ [ *{ {| l |}a3◂ [ r]}] ) %3153~5'(= r ) %3149~0'(= a2◂ [ *{ {| l |}a3◂ [ r]}] ) %3118~1'(= {| a2◂ [ *{ {| l |}a3◂ [ r]}]|} ) 
; #347 { 1(<2)◂4'(= {| l |} ) 1'(= {| a2◂ [ *{ {| l |}a3◂ [ r]}]|} ) 6'(= a2◂ [ *{ {| l |}a3◂ [ r]}] ) 9'(= a2◂ [ *{ ra2◂ [ *{ {| l |}a3◂ [ r]}]a2◂ [ q0]a2◂ [ q1]}] ) } ⊢ { 4'(= {| a2◂ [ *{ {| l |}a3◂ [ r]}]|} ) 1'(= a2◂ [ *{ {| l |}a3◂ [ r]}] ) 2'(= a2◂ [ *{ ra2◂ [ *{ {| l |}a3◂ [ r]}]a2◂ [ q0]a2◂ [ q1]}] ) 3'(= r ) }
	sub rsp,24
	mov QWORD [rsp+8*0],r13
	mov QWORD [rsp+8*1],r11
	mov QWORD [rsp+8*2],rdx
; .mov_ptn2 { 1(<2)◂4'(= {| l |} ) 1'(= {| a2◂ [ *{ {| l |}a3◂ [ r]}]|} ) 6'(= a2◂ [ *{ {| l |}a3◂ [ r]}] ) 9'(= a2◂ [ *{ ra2◂ [ *{ {| l |}a3◂ [ r]}]a2◂ [ q0]a2◂ [ q1]}] ) } ⊢ { 0'(= a18◂ [ ] ) 1'(= {| a2◂ [ *{ {| l |}a3◂ [ r]}]|} ) 2'(= a2◂ [ *{ {| l |}a3◂ [ r]}] ) 3'(= a2◂ [ *{ ra2◂ [ *{ {| l |}a3◂ [ r]}]a2◂ [ q0]a2◂ [ q1]}] ) }
; .mov_ptn 9'(= a2◂ [ *{ ra2◂ [ *{ {| l |}a3◂ [ r]}]a2◂ [ q0]a2◂ [ q1]}] ) ⊢ 3'(= a2◂ [ *{ ra2◂ [ *{ {| l |}a3◂ [ r]}]a2◂ [ q0]a2◂ [ q1]}] )
	mov rax,QWORD [rsp-8+8*4]
	mov r9,rax
; .mov_ptn 6'(= a2◂ [ *{ {| l |}a3◂ [ r]}] ) ⊢ 2'(= a2◂ [ *{ {| l |}a3◂ [ r]}] )
	mov rax,rcx
	mov r8,rax
; .mov_ptn 1(<2)◂4'(= {| l |} ) ⊢ 0'(= a18◂ [ ] )
	mov rax,r10
	mov BYTE [rax+6],1
	mov r13,rax
	call LB_6239
	mov rdx,QWORD [rsp-8+8*3]
	mov r11,QWORD [rsp-8+8*2]
	mov r10,r13
	mov r13,QWORD [rsp-8+8*1]
	add rsp,32
;; rsp=1 , %3162~3'(= r ) %3161~2'(= a2◂ [ *{ ra2◂ [ *{ {| l |}a3◂ [ r]}]a2◂ [ q0]a2◂ [ q1]}] ) %3160~1'(= a2◂ [ *{ {| l |}a3◂ [ r]}] ) %3159~4'(= {| a2◂ [ *{ {| l |}a3◂ [ r]}]|} ) %3156~8'(= a2◂ [ q1] ) %3155~7'(= a2◂ [ q0] ) %3153~5'(= r ) %3149~0'(= a2◂ [ *{ {| l |}a3◂ [ r]}] ) 
; #23 { { 5'(= r ) 1'(= a2◂ [ *{ {| l |}a3◂ [ r]}] ) 7'(= a2◂ [ q0] ) 8'(= a2◂ [ q1] ) } 2'(= a2◂ [ *{ ra2◂ [ *{ {| l |}a3◂ [ r]}]a2◂ [ q0]a2◂ [ q1]}] ) } ⊢ 0(<2)◂{ { 5'(= r ) 1'(= a2◂ [ *{ {| l |}a3◂ [ r]}] ) 7'(= a2◂ [ q0] ) 8'(= a2◂ [ q1] ) } 2'(= a2◂ [ *{ ra2◂ [ *{ {| l |}a3◂ [ r]}]a2◂ [ q0]a2◂ [ q1]}] ) }
;; rsp=1 , %3163~0(<2)◂{ { 5'(= r ) 1'(= a2◂ [ *{ {| l |}a3◂ [ r]}] ) 7'(= a2◂ [ q0] ) 8'(= a2◂ [ q1] ) } 2'(= a2◂ [ *{ ra2◂ [ *{ {| l |}a3◂ [ r]}]a2◂ [ q0]a2◂ [ q1]}] ) } %3162~3'(= r ) %3159~4'(= {| a2◂ [ *{ {| l |}a3◂ [ r]}]|} ) %3149~0'(= a2◂ [ *{ {| l |}a3◂ [ r]}] ) 
; ∎ { 4'(= {| a2◂ [ *{ {| l |}a3◂ [ r]}]|} ) 0'(= a2◂ [ *{ {| l |}a3◂ [ r]}] ) 0(<2)◂{ { 5'(= r ) 1'(= a2◂ [ *{ {| l |}a3◂ [ r]}] ) 7'(= a2◂ [ q0] ) 8'(= a2◂ [ q1] ) } 2'(= a2◂ [ *{ ra2◂ [ *{ {| l |}a3◂ [ r]}]a2◂ [ q0]a2◂ [ q1]}] ) } 3'(= r ) }
; .mov_ptn2 { 4'(= {| a2◂ [ *{ {| l |}a3◂ [ r]}]|} ) 0'(= a2◂ [ *{ {| l |}a3◂ [ r]}] ) 0(<2)◂{ { 5'(= r ) 1'(= a2◂ [ *{ {| l |}a3◂ [ r]}] ) 7'(= a2◂ [ q0] ) 8'(= a2◂ [ q1] ) } 2'(= a2◂ [ *{ ra2◂ [ *{ {| l |}a3◂ [ r]}]a2◂ [ q0]a2◂ [ q1]}] ) } 3'(= r ) } ⊢ { 0'(= {| a2◂ [ *{ {| l |}a3◂ [ r]}]|} ) 1'(= a2◂ [ *{ {| l |}a3◂ [ r]}] ) 2'(= a2◂ [ *{ ra2◂ [ *{ {| l |}a3◂ [ r]}]a2◂ [ q0]a2◂ [ q1]}] ) 3'(= r ) }
	mov rcx,r8
; .mov_ptn 0(<2)◂{ { 5'(= r ) 1'(= a2◂ [ *{ {| l |}a3◂ [ r]}] ) 7'(= a2◂ [ q0] ) 8'(= a2◂ [ q1] ) } 6'(= a2◂ [ *{ ra2◂ [ *{ {| l |}a3◂ [ r]}]a2◂ [ q0]a2◂ [ q1]}] ) } ⊢ 2'(= a2◂ [ *{ ra2◂ [ *{ {| l |}a3◂ [ r]}]a2◂ [ q0]a2◂ [ q1]}] )
	sub rsp,8
	ALC_RCD 2, rax
	mov QWORD [rsp-8+8*1],rax
	sub rsp,8
	ALC_RCD 4, rax
	mov QWORD [rsp-8+8*1],rax
	mov rax,r11
	mov rdi,QWORD [rsp-8+8*1]
	mov QWORD [rdi+8+8*0],rax
	mov rax,r14
	mov rdi,QWORD [rsp-8+8*1]
	mov QWORD [rdi+8+8*1],rax
	mov rax,rdx
	mov rdi,QWORD [rsp-8+8*1]
	mov QWORD [rdi+8+8*2],rax
	mov rax,QWORD [rsp-8+8*3]
	mov rdi,QWORD [rsp-8+8*1]
	mov QWORD [rdi+8+8*3],rax
	mov rax,QWORD [rsp-8+8*1]
	mov rdi,QWORD [rsp-8+8*2]
	mov QWORD [rdi+8+8*0],rax
	mov rax,rcx
	mov rdi,QWORD [rsp-8+8*2]
	mov QWORD [rdi+8+8*1],rax
	mov rax,QWORD [rsp-8+8*2]
	mov BYTE [rax+6],0
	mov r8,rax
; .mov_ptn 0'(= a2◂ [ *{ {| l |}a3◂ [ r]}] ) ⊢ 1'(= a2◂ [ *{ {| l |}a3◂ [ r]}] )
	mov rax,r13
	mov r14,rax
; .mov_ptn 4'(= {| a2◂ [ *{ {| l |}a3◂ [ r]}]|} ) ⊢ 0'(= {| a2◂ [ *{ {| l |}a3◂ [ r]}]|} )
	mov rax,r10
	mov r13,rax
	add rsp,24
	ret
LB_6281:
;; ?. 3'(= a2◂ [ *{ ra2◂ [ *{ {| l |}a3◂ [ r]}]a2◂ [ q0]a2◂ [ q1]}] ) ⊢ 1(<2)◂{ }
;; rsp=0 , %3150~4'(= {| l |} ) %3149~0'(= a2◂ [ *{ {| l |}a3◂ [ r]}] ) %3118~1'(= {| a2◂ [ *{ {| l |}a3◂ [ r]}]|} ) 
; #10 %[ "slv_ns_m 1:not found" ] ⊢ %[ "slv_ns_m 1:not found" ]
	mov rdi,fmt_emt
	call emt_stg
	mov rdi,LB_6284
	call emt_stg 
	mov rdi,fmt_nl
	call emt_stg
	jmp LB_6285
LB_6285:
; .dlt.ptn %[ "slv_ns_m 1:not found" ]
;; rsp=0 , %3150~4'(= {| l |} ) %3149~0'(= a2◂ [ *{ {| l |}a3◂ [ r]}] ) %3118~1'(= {| a2◂ [ *{ {| l |}a3◂ [ r]}]|} ) 
; #10 4'(= {| l |} ) ⊢ 4'(= {| l |} )
	mov rdi,fmt_emt
	call emt_stg
	mov rdi,r10
	C_PUSH_REGS
	mov r8,rdi
	mov rdi,r8
	call emt_s8
	C_POP_REGS
	mov rdi,fmt_nl
	call emt_stg
	jmp LB_6286
LB_6286:
; .dlt.ptn 4'(= {| l |} )
	mov rdi,r10
	C_PUSH_REGS
	mov r8,rdi
	mov rdi,r8
	call free_s8
	C_POP_REGS
;; rsp=0 , %3149~0'(= a2◂ [ *{ {| l |}a3◂ [ r]}] ) %3118~1'(= {| a2◂ [ *{ {| l |}a3◂ [ r]}]|} ) 
	mov rdi,LB_6287
	call emt_stg 
	jmp err
LB_5793: ;; #348 { { } 0'(= r ) 1'(= a2◂ [ *{ ra2◂ [ *{ {| l |}a3◂ [ r]}]a2◂ [ q0]a2◂ [ q1]}] ) 2'(= a13◂ [ *{ {| a2◂ [ *{ {| l |}a3◂ [ r]}]|}{| a2◂ [ q0]|}{| a2◂ [ q1]|}r}] ) { } 3'(= r ) 4'(= a13◂ [ *{ a2◂ [ *{ {| l |}a3◂ [ r]}]a2◂ [ q0]a2◂ [ q1]}] ) 5'(= a2◂ [ a40◂ [ ]] ) 6'(= a2◂ [ q2] ) 7'(= a13◂ [ *{ a14◂ [ ]ra2◂ [ q3]a14◂ [ ]rr}] ) } ⊢ { { } 0'(= r ) 1'(= a2◂ [ *{ ra2◂ [ *{ {| l |}a3◂ [ r]}]a2◂ [ q4]a2◂ [ q5]}] ) 2'(= a13◂ [ *{ {| a2◂ [ *{ {| l |}a3◂ [ r]}]|}{| a2◂ [ q4]|}{| a2◂ [ q5]|}r}] ) { } 3'(= r ) 4'(= a13◂ [ *{ a2◂ [ *{ {| l |}a3◂ [ r]}]a2◂ [ q4]a2◂ [ q5]}] ) 5'(= a2◂ [ q6] ) 6'(= a13◂ [ *{ a14◂ [ ]ra2◂ [ q7]a14◂ [ ]rr}] ) } : ({ { } _r64 _lst◂7714'(={ _r64 _lst◂{ _s8 _opn◂_r64 } _lst◂7728'(1) _lst◂7729'(1) }) _t13◂{ _arr◂_lst◂7715'(={ _s8 _opn◂_r64 }) _arr◂_lst◂7716'(=7728'(1)) _arr◂_lst◂7717'(=7729'(1)) _r64 } { } _r64 _t13◂{ _lst◂7718'(={ _s8 _opn◂_r64 }) _lst◂7719'(=7728'(1)) _lst◂7720'(=7729'(1)) } _lst◂_t40 _lst◂7721'(=7725'(1)) _t13◂{ _t14 _r64 _lst◂7722'(=7726'(1)) _t14 _r64 _r64 } }→{ { } _r64 _lst◂{ _r64 _lst◂{ _s8 _opn◂_r64 } _lst◂7658'(1) _lst◂7659'(1) } _t13◂{ _arr◂_lst◂{ _s8 _opn◂_r64 } _arr◂_lst◂7658'(1) _arr◂_lst◂7659'(1) _r64 } { } _r64 _t13◂{ _lst◂{ _s8 _opn◂_r64 } _lst◂7658'(1) _lst◂7659'(1) } _lst◂7671'(1) _t13◂{ _t14 _r64 _lst◂7672'(1) _t14 _r64 _r64 } })
;; rsp=0 , %3175~7'(= a13◂ [ *{ a14◂ [ ]ra2◂ [ q3]a14◂ [ ]rr}] ) %3174~6'(= a2◂ [ q2] ) %3173~5'(= a2◂ [ a40◂ [ ]] ) %3172~4'(= a13◂ [ *{ a2◂ [ *{ {| l |}a3◂ [ r]}]a2◂ [ q0]a2◂ [ q1]}] ) %3171~3'(= r ) %3170~{ } %3169~2'(= a13◂ [ *{ {| a2◂ [ *{ {| l |}a3◂ [ r]}]|}{| a2◂ [ q0]|}{| a2◂ [ q1]|}r}] ) %3168~1'(= a2◂ [ *{ ra2◂ [ *{ {| l |}a3◂ [ r]}]a2◂ [ q0]a2◂ [ q1]}] ) %3167~0'(= r ) %3166~{ } 
; #10 5'(= a2◂ [ a40◂ [ ]] ) ⊢ 5'(= a2◂ [ a40◂ [ ]] )
	mov rdi,fmt_emt
	call emt_stg
	mov rdi,r11
	C_PUSH_REGS
	mov r8,rdi
	call LB_5794
	C_POP_REGS
	mov rdi,fmt_nl
	call emt_stg
	jmp LB_5795
LB_5795:
;; rsp=0 , %3176~5'(= a2◂ [ a40◂ [ ]] ) %3175~7'(= a13◂ [ *{ a14◂ [ ]ra2◂ [ q3]a14◂ [ ]rr}] ) %3174~6'(= a2◂ [ q2] ) %3172~4'(= a13◂ [ *{ a2◂ [ *{ {| l |}a3◂ [ r]}]a2◂ [ q0]a2◂ [ q1]}] ) %3171~3'(= r ) %3170~{ } %3169~2'(= a13◂ [ *{ {| a2◂ [ *{ {| l |}a3◂ [ r]}]|}{| a2◂ [ q0]|}{| a2◂ [ q1]|}r}] ) %3168~1'(= a2◂ [ *{ ra2◂ [ *{ {| l |}a3◂ [ r]}]a2◂ [ q0]a2◂ [ q1]}] ) %3167~0'(= r ) %3166~{ } 
; #21 { } ⊢ 8'(= r )
	sub rsp,8
	mov rdi,fmt_getchar 
	call emt_stg 
	xor rax,rax 
	C_CALL_SF getchar 
	mov QWORD [rsp-8+8*1],rax
; .dlt.ptn 8'(= r )
	mov rdi,QWORD [rsp-8+8*1]
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
;; rsp=1 , %3176~5'(= a2◂ [ a40◂ [ ]] ) %3175~7'(= a13◂ [ *{ a14◂ [ ]ra2◂ [ q3]a14◂ [ ]rr}] ) %3174~6'(= a2◂ [ q2] ) %3172~4'(= a13◂ [ *{ a2◂ [ *{ {| l |}a3◂ [ r]}]a2◂ [ q0]a2◂ [ q1]}] ) %3171~3'(= r ) %3170~{ } %3169~2'(= a13◂ [ *{ {| a2◂ [ *{ {| l |}a3◂ [ r]}]|}{| a2◂ [ q0]|}{| a2◂ [ q1]|}r}] ) %3168~1'(= a2◂ [ *{ ra2◂ [ *{ {| l |}a3◂ [ r]}]a2◂ [ q0]a2◂ [ q1]}] ) %3167~0'(= r ) %3166~{ } 
;; ? 5'(= a2◂ [ a40◂ [ ]] ) ⊢ 0(<2)◂{ 8'(= a40◂ [ ] ) 9'(= a2◂ [ a40◂ [ ]] ) }
	mov rdi,r11
	cmp BYTE [rdi+6],0
	jnz LB_6203
	jmp LB_6204
LB_6203:
	jmp LB_6202
LB_6204:
	MOV_RDI QWORD [rsp-8+8*1], QWORD [r11+8]
	sub rsp,8
	MOV_RDI QWORD [rsp-8+8*1], QWORD [r11+16]
	mov QWORD [GBG_VCT+8*0],r11
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_RCD 2,rdi
;; rsp=2 , %3179~9'(= a2◂ [ a40◂ [ ]] ) %3178~8'(= a40◂ [ ] ) %3175~7'(= a13◂ [ *{ a14◂ [ ]ra2◂ [ q3]a14◂ [ ]rr}] ) %3174~6'(= a2◂ [ q2] ) %3172~4'(= a13◂ [ *{ a2◂ [ *{ {| l |}a3◂ [ r]}]a2◂ [ q0]a2◂ [ q1]}] ) %3171~3'(= r ) %3170~{ } %3169~2'(= a13◂ [ *{ {| a2◂ [ *{ {| l |}a3◂ [ r]}]|}{| a2◂ [ q0]|}{| a2◂ [ q1]|}r}] ) %3168~1'(= a2◂ [ *{ ra2◂ [ *{ {| l |}a3◂ [ r]}]a2◂ [ q0]a2◂ [ q1]}] ) %3167~0'(= r ) %3166~{ } 
;; ? 8'(= a40◂ [ ] ) ⊢ 0(<6)◂{ 5'(= {| l |} ) 10'(= a41◂ [ ] ) }
	mov rdi,QWORD [rsp-8+8*2]
	cmp BYTE [rdi+6],0
	jnz LB_6206
	jmp LB_6207
LB_6206:
	jmp LB_6205
LB_6207:
	mov rdi,QWORD [rsp-8+8*2]
	mov r11, QWORD [rdi+8]
	sub rsp,8
	mov rdi,QWORD [rsp-8+8*3]
	MOV_RDI QWORD [rsp-8+8*1], QWORD [rdi+16]
	MOV_RAX QWORD [GBG_VCT+8*0],QWORD [rsp-8+8*3]
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_RCD 2,rdi
;; rsp=3 , %3188~10'(= a41◂ [ ] ) %3187~5'(= {| l |} ) %3179~9'(= a2◂ [ a40◂ [ ]] ) %3175~7'(= a13◂ [ *{ a14◂ [ ]ra2◂ [ q3]a14◂ [ ]rr}] ) %3174~6'(= a2◂ [ q2] ) %3172~4'(= a13◂ [ *{ a2◂ [ *{ {| l |}a3◂ [ r]}]a2◂ [ q0]a2◂ [ q1]}] ) %3171~3'(= r ) %3170~{ } %3169~2'(= a13◂ [ *{ {| a2◂ [ *{ {| l |}a3◂ [ r]}]|}{| a2◂ [ q0]|}{| a2◂ [ q1]|}r}] ) %3168~1'(= a2◂ [ *{ ra2◂ [ *{ {| l |}a3◂ [ r]}]a2◂ [ q0]a2◂ [ q1]}] ) %3167~0'(= r ) %3166~{ } 
;; ? 10'(= a41◂ [ ] ) ⊢ 0(<2)◂8'(= a2◂ [ a40◂ [ ]] )
	mov rdi,QWORD [rsp-8+8*1]
	cmp BYTE [rdi+6],0
	jnz LB_6209
	jmp LB_6210
LB_6209:
	jmp LB_6208
LB_6210:
	mov QWORD [GBG_VCT+8*0],rdi
	MOV_RAX QWORD [rsp-8+8*3],QWORD [rdi+8]
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_LN rdi
;; rsp=3 , %3190~8'(= a2◂ [ a40◂ [ ]] ) %3187~5'(= {| l |} ) %3179~9'(= a2◂ [ a40◂ [ ]] ) %3175~7'(= a13◂ [ *{ a14◂ [ ]ra2◂ [ q3]a14◂ [ ]rr}] ) %3174~6'(= a2◂ [ q2] ) %3172~4'(= a13◂ [ *{ a2◂ [ *{ {| l |}a3◂ [ r]}]a2◂ [ q0]a2◂ [ q1]}] ) %3171~3'(= r ) %3170~{ } %3169~2'(= a13◂ [ *{ {| a2◂ [ *{ {| l |}a3◂ [ r]}]|}{| a2◂ [ q0]|}{| a2◂ [ q1]|}r}] ) %3168~1'(= a2◂ [ *{ ra2◂ [ *{ {| l |}a3◂ [ r]}]a2◂ [ q0]a2◂ [ q1]}] ) %3167~0'(= r ) %3166~{ } 
; #34 2'(= a13◂ [ *{ {| a2◂ [ *{ {| l |}a3◂ [ r]}]|}{| a2◂ [ q0]|}{| a2◂ [ q1]|}r}] ) ⊢ { 12'(= {| a2◂ [ *{ {| l |}a3◂ [ r]}]|} ) 11'(= {| a2◂ [ q0]|} ) 2'(= {| a2◂ [ q1]|} ) 10'(= r ) }
	sub rsp,56
	mov QWORD [rsp+8*0],r13
	mov QWORD [rsp+8*1],r14
	mov QWORD [rsp+8*2],r9
	mov QWORD [rsp+8*3],r10
	mov QWORD [rsp+8*4],r11
	mov QWORD [rsp+8*5],rcx
	mov QWORD [rsp+8*6],rdx
; .mov_ptn2 2'(= a13◂ [ *{ {| a2◂ [ *{ {| l |}a3◂ [ r]}]|}{| a2◂ [ q0]|}{| a2◂ [ q1]|}r}] ) ⊢ 0'(= a13◂ [ *{ {| a2◂ [ *{ {| l |}a3◂ [ r]}]|}{| a2◂ [ q0]|}{| a2◂ [ q1]|}r}] )
; .mov_ptn 2'(= a13◂ [ *{ {| a2◂ [ *{ {| l |}a3◂ [ r]}]|}{| a2◂ [ q0]|}{| a2◂ [ q1]|}r}] ) ⊢ 0'(= a13◂ [ *{ {| a2◂ [ *{ {| l |}a3◂ [ r]}]|}{| a2◂ [ q0]|}{| a2◂ [ q1]|}r}] )
	mov rax,r8
	mov r13,rax
	call LB_6211
	mov rdx,QWORD [rsp-8+8*7]
	mov rcx,QWORD [rsp-8+8*6]
	mov r11,QWORD [rsp-8+8*5]
	mov r10,QWORD [rsp-8+8*4]
	mov QWORD [rsp-8+8*8],r9
	mov r9,QWORD [rsp-8+8*3]
	mov QWORD [rsp-8+8*7],r14
	mov r14,QWORD [rsp-8+8*2]
	mov QWORD [rsp-8+8*6],r13
	mov r13,QWORD [rsp-8+8*1]
	add rsp,40
;; rsp=5 , %3194~10'(= r ) %3193~2'(= {| a2◂ [ q1]|} ) %3192~11'(= {| a2◂ [ q0]|} ) %3191~12'(= {| a2◂ [ *{ {| l |}a3◂ [ r]}]|} ) %3190~8'(= a2◂ [ a40◂ [ ]] ) %3187~5'(= {| l |} ) %3179~9'(= a2◂ [ a40◂ [ ]] ) %3175~7'(= a13◂ [ *{ a14◂ [ ]ra2◂ [ q3]a14◂ [ ]rr}] ) %3174~6'(= a2◂ [ q2] ) %3172~4'(= a13◂ [ *{ a2◂ [ *{ {| l |}a3◂ [ r]}]a2◂ [ q0]a2◂ [ q1]}] ) %3171~3'(= r ) %3170~{ } %3168~1'(= a2◂ [ *{ ra2◂ [ *{ {| l |}a3◂ [ r]}]a2◂ [ q0]a2◂ [ q1]}] ) %3167~0'(= r ) %3166~{ } 
; #34 4'(= a13◂ [ *{ a2◂ [ *{ {| l |}a3◂ [ r]}]a2◂ [ q0]a2◂ [ q1]}] ) ⊢ { 14'(= a2◂ [ *{ {| l |}a3◂ [ r]}] ) 13'(= a2◂ [ q0] ) 4'(= a2◂ [ q1] ) }
	sub rsp,56
	mov QWORD [rsp+8*0],r13
	mov QWORD [rsp+8*1],r14
	mov QWORD [rsp+8*2],r8
	mov QWORD [rsp+8*3],r9
	mov QWORD [rsp+8*4],r11
	mov QWORD [rsp+8*5],rcx
	mov QWORD [rsp+8*6],rdx
; .mov_ptn2 4'(= a13◂ [ *{ a2◂ [ *{ {| l |}a3◂ [ r]}]a2◂ [ q0]a2◂ [ q1]}] ) ⊢ 0'(= a13◂ [ *{ a2◂ [ *{ {| l |}a3◂ [ r]}]a2◂ [ q0]a2◂ [ q1]}] )
; .mov_ptn 4'(= a13◂ [ *{ a2◂ [ *{ {| l |}a3◂ [ r]}]a2◂ [ q0]a2◂ [ q1]}] ) ⊢ 0'(= a13◂ [ *{ a2◂ [ *{ {| l |}a3◂ [ r]}]a2◂ [ q0]a2◂ [ q1]}] )
	mov rax,r10
	mov r13,rax
	call LB_6212
	mov rdx,QWORD [rsp-8+8*7]
	mov rcx,QWORD [rsp-8+8*6]
	mov r11,QWORD [rsp-8+8*5]
	mov r9,QWORD [rsp-8+8*4]
	mov r10,r8
	mov r8,QWORD [rsp-8+8*3]
	mov QWORD [rsp-8+8*7],r14
	mov r14,QWORD [rsp-8+8*2]
	mov QWORD [rsp-8+8*6],r13
	mov r13,QWORD [rsp-8+8*1]
	add rsp,40
;; rsp=7 , %3197~4'(= a2◂ [ q1] ) %3196~13'(= a2◂ [ q0] ) %3195~14'(= a2◂ [ *{ {| l |}a3◂ [ r]}] ) %3194~10'(= r ) %3193~2'(= {| a2◂ [ q1]|} ) %3192~11'(= {| a2◂ [ q0]|} ) %3191~12'(= {| a2◂ [ *{ {| l |}a3◂ [ r]}]|} ) %3190~8'(= a2◂ [ a40◂ [ ]] ) %3187~5'(= {| l |} ) %3179~9'(= a2◂ [ a40◂ [ ]] ) %3175~7'(= a13◂ [ *{ a14◂ [ ]ra2◂ [ q3]a14◂ [ ]rr}] ) %3174~6'(= a2◂ [ q2] ) %3171~3'(= r ) %3170~{ } %3168~1'(= a2◂ [ *{ ra2◂ [ *{ {| l |}a3◂ [ r]}]a2◂ [ q0]a2◂ [ q1]}] ) %3167~0'(= r ) %3166~{ } 
; $ 10'(= r ) ⊢ 10'(= r ),15'(= r )
	sub rsp,8
	mov rdi,QWORD [rsp-8+8*6]
	C_PUSH_REGS
	mov r8,rdi
	mov rax,r8
	C_POP_REGS
	mov QWORD [rsp-8+8*1],rax
;; rsp=8 , %3199~15'(= r ) %3198~10'(= r ) %3197~4'(= a2◂ [ q1] ) %3196~13'(= a2◂ [ q0] ) %3195~14'(= a2◂ [ *{ {| l |}a3◂ [ r]}] ) %3193~2'(= {| a2◂ [ q1]|} ) %3192~11'(= {| a2◂ [ q0]|} ) %3191~12'(= {| a2◂ [ *{ {| l |}a3◂ [ r]}]|} ) %3190~8'(= a2◂ [ a40◂ [ ]] ) %3187~5'(= {| l |} ) %3179~9'(= a2◂ [ a40◂ [ ]] ) %3175~7'(= a13◂ [ *{ a14◂ [ ]ra2◂ [ q3]a14◂ [ ]rr}] ) %3174~6'(= a2◂ [ q2] ) %3171~3'(= r ) %3170~{ } %3168~1'(= a2◂ [ *{ ra2◂ [ *{ {| l |}a3◂ [ r]}]a2◂ [ q0]a2◂ [ q1]}] ) %3167~0'(= r ) %3166~{ } 
; #11 10'(= r ) ⊢ 10'(= r )
	add QWORD [rsp-8+8*6],1
;; rsp=8 , %3200~10'(= r ) %3199~15'(= r ) %3197~4'(= a2◂ [ q1] ) %3196~13'(= a2◂ [ q0] ) %3195~14'(= a2◂ [ *{ {| l |}a3◂ [ r]}] ) %3193~2'(= {| a2◂ [ q1]|} ) %3192~11'(= {| a2◂ [ q0]|} ) %3191~12'(= {| a2◂ [ *{ {| l |}a3◂ [ r]}]|} ) %3190~8'(= a2◂ [ a40◂ [ ]] ) %3187~5'(= {| l |} ) %3179~9'(= a2◂ [ a40◂ [ ]] ) %3175~7'(= a13◂ [ *{ a14◂ [ ]ra2◂ [ q3]a14◂ [ ]rr}] ) %3174~6'(= a2◂ [ q2] ) %3171~3'(= r ) %3170~{ } %3168~1'(= a2◂ [ *{ ra2◂ [ *{ {| l |}a3◂ [ r]}]a2◂ [ q0]a2◂ [ q1]}] ) %3167~0'(= r ) %3166~{ } 
; #23 { { 0'(= r ) 14'(= a2◂ [ *{ {| l |}a3◂ [ r]}] ) 13'(= a2◂ [ q0] ) 4'(= a2◂ [ q1] ) } 1'(= a2◂ [ *{ ra2◂ [ *{ {| l |}a3◂ [ r]}]a2◂ [ q0]a2◂ [ q1]}] ) } ⊢ 0(<2)◂{ { 0'(= r ) 14'(= a2◂ [ *{ {| l |}a3◂ [ r]}] ) 13'(= a2◂ [ q0] ) 4'(= a2◂ [ q1] ) } 1'(= a2◂ [ *{ ra2◂ [ *{ {| l |}a3◂ [ r]}]a2◂ [ q0]a2◂ [ q1]}] ) }
;; rsp=8 , %3201~0(<2)◂{ { 0'(= r ) 14'(= a2◂ [ *{ {| l |}a3◂ [ r]}] ) 13'(= a2◂ [ q0] ) 4'(= a2◂ [ q1] ) } 1'(= a2◂ [ *{ ra2◂ [ *{ {| l |}a3◂ [ r]}]a2◂ [ q0]a2◂ [ q1]}] ) } %3200~10'(= r ) %3199~15'(= r ) %3193~2'(= {| a2◂ [ q1]|} ) %3192~11'(= {| a2◂ [ q0]|} ) %3191~12'(= {| a2◂ [ *{ {| l |}a3◂ [ r]}]|} ) %3190~8'(= a2◂ [ a40◂ [ ]] ) %3187~5'(= {| l |} ) %3179~9'(= a2◂ [ a40◂ [ ]] ) %3175~7'(= a13◂ [ *{ a14◂ [ ]ra2◂ [ q3]a14◂ [ ]rr}] ) %3174~6'(= a2◂ [ q2] ) %3171~3'(= r ) %3170~{ } %3166~{ } 
; #22 { } ⊢ 1(<2)◂{ }
;; rsp=8 , %3202~1(<2)◂{ } %3201~0(<2)◂{ { 0'(= r ) 14'(= a2◂ [ *{ {| l |}a3◂ [ r]}] ) 13'(= a2◂ [ q0] ) 4'(= a2◂ [ q1] ) } 1'(= a2◂ [ *{ ra2◂ [ *{ {| l |}a3◂ [ r]}]a2◂ [ q0]a2◂ [ q1]}] ) } %3200~10'(= r ) %3199~15'(= r ) %3193~2'(= {| a2◂ [ q1]|} ) %3192~11'(= {| a2◂ [ q0]|} ) %3191~12'(= {| a2◂ [ *{ {| l |}a3◂ [ r]}]|} ) %3190~8'(= a2◂ [ a40◂ [ ]] ) %3187~5'(= {| l |} ) %3179~9'(= a2◂ [ a40◂ [ ]] ) %3175~7'(= a13◂ [ *{ a14◂ [ ]ra2◂ [ q3]a14◂ [ ]rr}] ) %3174~6'(= a2◂ [ q2] ) %3171~3'(= r ) %3170~{ } %3166~{ } 
; #22 { } ⊢ 1(<2)◂{ }
;; rsp=8 , %3203~1(<2)◂{ } %3202~1(<2)◂{ } %3201~0(<2)◂{ { 0'(= r ) 14'(= a2◂ [ *{ {| l |}a3◂ [ r]}] ) 13'(= a2◂ [ q0] ) 4'(= a2◂ [ q1] ) } 1'(= a2◂ [ *{ ra2◂ [ *{ {| l |}a3◂ [ r]}]a2◂ [ q0]a2◂ [ q1]}] ) } %3200~10'(= r ) %3199~15'(= r ) %3193~2'(= {| a2◂ [ q1]|} ) %3192~11'(= {| a2◂ [ q0]|} ) %3191~12'(= {| a2◂ [ *{ {| l |}a3◂ [ r]}]|} ) %3190~8'(= a2◂ [ a40◂ [ ]] ) %3187~5'(= {| l |} ) %3179~9'(= a2◂ [ a40◂ [ ]] ) %3175~7'(= a13◂ [ *{ a14◂ [ ]ra2◂ [ q3]a14◂ [ ]rr}] ) %3174~6'(= a2◂ [ q2] ) %3171~3'(= r ) %3170~{ } %3166~{ } 
; #22 { } ⊢ 1(<2)◂{ }
;; rsp=8 , %3204~1(<2)◂{ } %3203~1(<2)◂{ } %3202~1(<2)◂{ } %3201~0(<2)◂{ { 0'(= r ) 14'(= a2◂ [ *{ {| l |}a3◂ [ r]}] ) 13'(= a2◂ [ q0] ) 4'(= a2◂ [ q1] ) } 1'(= a2◂ [ *{ ra2◂ [ *{ {| l |}a3◂ [ r]}]a2◂ [ q0]a2◂ [ q1]}] ) } %3200~10'(= r ) %3199~15'(= r ) %3193~2'(= {| a2◂ [ q1]|} ) %3192~11'(= {| a2◂ [ q0]|} ) %3191~12'(= {| a2◂ [ *{ {| l |}a3◂ [ r]}]|} ) %3190~8'(= a2◂ [ a40◂ [ ]] ) %3187~5'(= {| l |} ) %3179~9'(= a2◂ [ a40◂ [ ]] ) %3175~7'(= a13◂ [ *{ a14◂ [ ]ra2◂ [ q3]a14◂ [ ]rr}] ) %3174~6'(= a2◂ [ q2] ) %3171~3'(= r ) %3170~{ } %3166~{ } 
; #33 { 1(<2)◂{ } 1(<2)◂{ } 1(<2)◂{ } } ⊢ 0(<1)◂{ 1(<2)◂{ } 1(<2)◂{ } 1(<2)◂{ } }
;; rsp=8 , %3205~0(<1)◂{ 1(<2)◂{ } 1(<2)◂{ } 1(<2)◂{ } } %3201~0(<2)◂{ { 0'(= r ) 14'(= a2◂ [ *{ {| l |}a3◂ [ r]}] ) 13'(= a2◂ [ q0] ) 4'(= a2◂ [ q1] ) } 1'(= a2◂ [ *{ ra2◂ [ *{ {| l |}a3◂ [ r]}]a2◂ [ q0]a2◂ [ q1]}] ) } %3200~10'(= r ) %3199~15'(= r ) %3193~2'(= {| a2◂ [ q1]|} ) %3192~11'(= {| a2◂ [ q0]|} ) %3191~12'(= {| a2◂ [ *{ {| l |}a3◂ [ r]}]|} ) %3190~8'(= a2◂ [ a40◂ [ ]] ) %3187~5'(= {| l |} ) %3179~9'(= a2◂ [ a40◂ [ ]] ) %3175~7'(= a13◂ [ *{ a14◂ [ ]ra2◂ [ q3]a14◂ [ ]rr}] ) %3174~6'(= a2◂ [ q2] ) %3171~3'(= r ) %3170~{ } %3166~{ } 
; #33 { 12'(= {| a2◂ [ *{ {| l |}a3◂ [ r]}]|} ) 11'(= {| a2◂ [ q0]|} ) 2'(= {| a2◂ [ q1]|} ) 10'(= r ) } ⊢ 0(<1)◂{ 12'(= {| a2◂ [ *{ {| l |}a3◂ [ r]}]|} ) 11'(= {| a2◂ [ q0]|} ) 2'(= {| a2◂ [ q1]|} ) 10'(= r ) }
;; rsp=8 , %3206~0(<1)◂{ 12'(= {| a2◂ [ *{ {| l |}a3◂ [ r]}]|} ) 11'(= {| a2◂ [ q0]|} ) 2'(= {| a2◂ [ q1]|} ) 10'(= r ) } %3205~0(<1)◂{ 1(<2)◂{ } 1(<2)◂{ } 1(<2)◂{ } } %3201~0(<2)◂{ { 0'(= r ) 14'(= a2◂ [ *{ {| l |}a3◂ [ r]}] ) 13'(= a2◂ [ q0] ) 4'(= a2◂ [ q1] ) } 1'(= a2◂ [ *{ ra2◂ [ *{ {| l |}a3◂ [ r]}]a2◂ [ q0]a2◂ [ q1]}] ) } %3199~15'(= r ) %3190~8'(= a2◂ [ a40◂ [ ]] ) %3187~5'(= {| l |} ) %3179~9'(= a2◂ [ a40◂ [ ]] ) %3175~7'(= a13◂ [ *{ a14◂ [ ]ra2◂ [ q3]a14◂ [ ]rr}] ) %3174~6'(= a2◂ [ q2] ) %3171~3'(= r ) %3170~{ } %3166~{ } 
; #348 { { } 15'(= r ) 0(<2)◂{ { 0'(= r ) 14'(= a2◂ [ *{ {| l |}a3◂ [ r]}] ) 13'(= a2◂ [ q0] ) 4'(= a2◂ [ q1] ) } 1'(= a2◂ [ *{ ra2◂ [ *{ {| l |}a3◂ [ r]}]a2◂ [ q0]a2◂ [ q1]}] ) } 0(<1)◂{ 12'(= {| a2◂ [ *{ {| l |}a3◂ [ r]}]|} ) 11'(= {| a2◂ [ q0]|} ) 2'(= {| a2◂ [ q1]|} ) 10'(= r ) } { } 3'(= r ) 0(<1)◂{ 1(<2)◂{ } 1(<2)◂{ } 1(<2)◂{ } } 8'(= a2◂ [ a40◂ [ ]] ) 6'(= a2◂ [ q2] ) 7'(= a13◂ [ *{ a14◂ [ ]ra2◂ [ q3]a14◂ [ ]rr}] ) } ⊢ { { } 0'(= r ) 1'(= a2◂ [ *{ ra2◂ [ *{ {| l |}a3◂ [ r]}]a2◂ [ q4]a2◂ [ q5]}] ) 2'(= a13◂ [ *{ {| a2◂ [ *{ {| l |}a3◂ [ r]}]|}{| a2◂ [ q4]|}{| a2◂ [ q5]|}r}] ) { } 3'(= r ) 4'(= a13◂ [ *{ a2◂ [ *{ {| l |}a3◂ [ r]}]a2◂ [ q4]a2◂ [ q5]}] ) 7'(= a2◂ [ q6] ) 6'(= a13◂ [ *{ a14◂ [ ]ra2◂ [ q7]a14◂ [ ]rr}] ) }
	sub rsp,8
	mov QWORD [rsp+8*0],r11
; .mov_ptn2 { { } 15'(= r ) 0(<2)◂{ { 0'(= r ) 14'(= a2◂ [ *{ {| l |}a3◂ [ r]}] ) 13'(= a2◂ [ q0] ) 4'(= a2◂ [ q1] ) } 1'(= a2◂ [ *{ ra2◂ [ *{ {| l |}a3◂ [ r]}]a2◂ [ q0]a2◂ [ q1]}] ) } 0(<1)◂{ 12'(= {| a2◂ [ *{ {| l |}a3◂ [ r]}]|} ) 11'(= {| a2◂ [ q0]|} ) 2'(= {| a2◂ [ q1]|} ) 10'(= r ) } { } 3'(= r ) 0(<1)◂{ 1(<2)◂{ } 1(<2)◂{ } 1(<2)◂{ } } 8'(= a2◂ [ a40◂ [ ]] ) 6'(= a2◂ [ q2] ) 7'(= a13◂ [ *{ a14◂ [ ]ra2◂ [ q3]a14◂ [ ]rr}] ) } ⊢ { { } 0'(= r ) 1'(= a2◂ [ *{ ra2◂ [ *{ {| l |}a3◂ [ r]}]a2◂ [ q0]a2◂ [ q1]}] ) 2'(= a13◂ [ *{ {| a2◂ [ *{ {| l |}a3◂ [ r]}]|}{| a2◂ [ q0]|}{| a2◂ [ q1]|}r}] ) { } 3'(= r ) 4'(= a13◂ [ *{ a2◂ [ *{ {| l |}a3◂ [ r]}]a2◂ [ q0]a2◂ [ q1]}] ) 5'(= a2◂ [ a40◂ [ ]] ) 6'(= a2◂ [ q2] ) 7'(= a13◂ [ *{ a14◂ [ ]ra2◂ [ q3]a14◂ [ ]rr}] ) }
; .mov_ptn 8'(= a2◂ [ a40◂ [ ]] ) ⊢ 5'(= a2◂ [ a40◂ [ ]] )
	mov rax,QWORD [rsp-8+8*9]
	mov r11,rax
	mov QWORD [rsp-8+8*8],r10
; .mov_ptn 0(<1)◂{ 1(<2)◂{ } 1(<2)◂{ } 1(<2)◂{ } } ⊢ 4'(= a13◂ [ *{ a2◂ [ *{ {| l |}a3◂ [ r]}]a2◂ [ q0]a2◂ [ q1]}] )
	ALC_RCD 3, rax
	mov QWORD [rsp-8+8*9],rax
	mov rax,unt 
	mov rax,unt_1
	mov rdi,QWORD [rsp-8+8*9]
	mov QWORD [rdi+8+8*0],rax
	mov rax,unt 
	mov rax,unt_1
	mov rdi,QWORD [rsp-8+8*9]
	mov QWORD [rdi+8+8*1],rax
	mov rax,unt 
	mov rax,unt_1
	mov rdi,QWORD [rsp-8+8*9]
	mov QWORD [rdi+8+8*2],rax
	mov rax,QWORD [rsp-8+8*9]
	mov BYTE [rax+6],0
	mov r10,rax
	sub rsp,8
	mov QWORD [rsp-8+8*1],r8
; .mov_ptn 0(<1)◂{ 12'(= {| a2◂ [ *{ {| l |}a3◂ [ r]}]|} ) 11'(= {| a2◂ [ q0]|} ) 17'(= {| a2◂ [ q1]|} ) 10'(= r ) } ⊢ 2'(= a13◂ [ *{ {| a2◂ [ *{ {| l |}a3◂ [ r]}]|}{| a2◂ [ q0]|}{| a2◂ [ q1]|}r}] )
	ALC_RCD 4, rax
	mov QWORD [rsp-8+8*10],rax
	mov rax,QWORD [rsp-8+8*6]
	mov rdi,QWORD [rsp-8+8*10]
	mov QWORD [rdi+8+8*0],rax
	mov rax,QWORD [rsp-8+8*7]
	mov rdi,QWORD [rsp-8+8*10]
	mov QWORD [rdi+8+8*1],rax
	mov rax,QWORD [rsp-8+8*1]
	mov rdi,QWORD [rsp-8+8*10]
	mov QWORD [rdi+8+8*2],rax
	mov rax,QWORD [rsp-8+8*8]
	mov rdi,QWORD [rsp-8+8*10]
	mov QWORD [rdi+8+8*3],rax
	mov rax,QWORD [rsp-8+8*10]
	mov BYTE [rax+6],0
	mov r8,rax
	sub rsp,8
	mov QWORD [rsp-8+8*1],r14
; .mov_ptn 0(<2)◂{ { 0'(= r ) 14'(= a2◂ [ *{ {| l |}a3◂ [ r]}] ) 13'(= a2◂ [ q0] ) 9'(= a2◂ [ q1] ) } 18'(= a2◂ [ *{ ra2◂ [ *{ {| l |}a3◂ [ r]}]a2◂ [ q0]a2◂ [ q1]}] ) } ⊢ 1'(= a2◂ [ *{ ra2◂ [ *{ {| l |}a3◂ [ r]}]a2◂ [ q0]a2◂ [ q1]}] )
	ALC_RCD 2, rax
	mov QWORD [rsp-8+8*11],rax
	ALC_RCD 4, rax
	mov QWORD [rsp-8+8*9],rax
	mov rax,r13
	mov rdi,QWORD [rsp-8+8*9]
	mov QWORD [rdi+8+8*0],rax
	mov rax,QWORD [rsp-8+8*5]
	mov rdi,QWORD [rsp-8+8*9]
	mov QWORD [rdi+8+8*1],rax
	mov rax,QWORD [rsp-8+8*6]
	mov rdi,QWORD [rsp-8+8*9]
	mov QWORD [rdi+8+8*2],rax
	mov rax,QWORD [rsp-8+8*10]
	mov rdi,QWORD [rsp-8+8*9]
	mov QWORD [rdi+8+8*3],rax
	mov rax,QWORD [rsp-8+8*9]
	mov rdi,QWORD [rsp-8+8*11]
	mov QWORD [rdi+8+8*0],rax
	mov rax,QWORD [rsp-8+8*1]
	mov rdi,QWORD [rsp-8+8*11]
	mov QWORD [rdi+8+8*1],rax
	mov rax,QWORD [rsp-8+8*11]
	mov BYTE [rax+6],0
	mov r14,rax
; .mov_ptn 15'(= r ) ⊢ 0'(= r )
	mov rax,QWORD [rsp-8+8*4]
	mov r13,rax
	add rsp,16
	call LB_5793
	mov rdx,r11
	mov r11,QWORD [rsp-8+8*1]
	add rsp,56
;; rsp=2 , %3215~6'(= a13◂ [ *{ a14◂ [ ]ra2◂ [ q7]a14◂ [ ]rr}] ) %3214~7'(= a2◂ [ q6] ) %3213~4'(= a13◂ [ *{ a2◂ [ *{ {| l |}a3◂ [ r]}]a2◂ [ q4]a2◂ [ q5]}] ) %3212~3'(= r ) %3211~{ } %3210~2'(= a13◂ [ *{ {| a2◂ [ *{ {| l |}a3◂ [ r]}]|}{| a2◂ [ q4]|}{| a2◂ [ q5]|}r}] ) %3209~1'(= a2◂ [ *{ ra2◂ [ *{ {| l |}a3◂ [ r]}]a2◂ [ q4]a2◂ [ q5]}] ) %3208~0'(= r ) %3207~{ } %3187~5'(= {| l |} ) %3179~9'(= a2◂ [ a40◂ [ ]] ) 
; #34 2'(= a13◂ [ *{ {| a2◂ [ *{ {| l |}a3◂ [ r]}]|}{| a2◂ [ q4]|}{| a2◂ [ q5]|}r}] ) ⊢ { 11'(= {| a2◂ [ *{ {| l |}a3◂ [ r]}]|} ) 10'(= {| a2◂ [ q0]|} ) 2'(= {| a2◂ [ q1]|} ) 8'(= r ) }
	sub rsp,56
	mov QWORD [rsp+8*0],r13
	mov QWORD [rsp+8*1],r14
	mov QWORD [rsp+8*2],r9
	mov QWORD [rsp+8*3],r10
	mov QWORD [rsp+8*4],r11
	mov QWORD [rsp+8*5],rcx
	mov QWORD [rsp+8*6],rdx
; .mov_ptn2 2'(= a13◂ [ *{ {| a2◂ [ *{ {| l |}a3◂ [ r]}]|}{| a2◂ [ q4]|}{| a2◂ [ q5]|}r}] ) ⊢ 0'(= a13◂ [ *{ {| a2◂ [ *{ {| l |}a3◂ [ r]}]|}{| a2◂ [ q0]|}{| a2◂ [ q1]|}r}] )
; .mov_ptn 2'(= a13◂ [ *{ {| a2◂ [ *{ {| l |}a3◂ [ r]}]|}{| a2◂ [ q4]|}{| a2◂ [ q5]|}r}] ) ⊢ 0'(= a13◂ [ *{ {| a2◂ [ *{ {| l |}a3◂ [ r]}]|}{| a2◂ [ q0]|}{| a2◂ [ q1]|}r}] )
	mov rax,r8
	mov r13,rax
	call LB_6211
	mov rdx,QWORD [rsp-8+8*7]
	mov rcx,QWORD [rsp-8+8*6]
	mov r11,QWORD [rsp-8+8*5]
	mov r10,QWORD [rsp-8+8*4]
	mov QWORD [rsp-8+8*9],r9
	mov r9,QWORD [rsp-8+8*3]
	mov QWORD [rsp-8+8*7],r14
	mov r14,QWORD [rsp-8+8*2]
	mov QWORD [rsp-8+8*6],r13
	mov r13,QWORD [rsp-8+8*1]
	add rsp,40
;; rsp=4 , %3219~8'(= r ) %3218~2'(= {| a2◂ [ q1]|} ) %3217~10'(= {| a2◂ [ q0]|} ) %3216~11'(= {| a2◂ [ *{ {| l |}a3◂ [ r]}]|} ) %3215~6'(= a13◂ [ *{ a14◂ [ ]ra2◂ [ q7]a14◂ [ ]rr}] ) %3214~7'(= a2◂ [ q6] ) %3213~4'(= a13◂ [ *{ a2◂ [ *{ {| l |}a3◂ [ r]}]a2◂ [ q4]a2◂ [ q5]}] ) %3212~3'(= r ) %3211~{ } %3209~1'(= a2◂ [ *{ ra2◂ [ *{ {| l |}a3◂ [ r]}]a2◂ [ q4]a2◂ [ q5]}] ) %3208~0'(= r ) %3207~{ } %3187~5'(= {| l |} ) %3179~9'(= a2◂ [ a40◂ [ ]] ) 
; #34 4'(= a13◂ [ *{ a2◂ [ *{ {| l |}a3◂ [ r]}]a2◂ [ q4]a2◂ [ q5]}] ) ⊢ { 13'(= a2◂ [ *{ {| l |}a3◂ [ r]}] ) 12'(= a2◂ [ q0] ) 4'(= a2◂ [ q1] ) }
	sub rsp,56
	mov QWORD [rsp+8*0],r13
	mov QWORD [rsp+8*1],r14
	mov QWORD [rsp+8*2],r8
	mov QWORD [rsp+8*3],r9
	mov QWORD [rsp+8*4],r11
	mov QWORD [rsp+8*5],rcx
	mov QWORD [rsp+8*6],rdx
; .mov_ptn2 4'(= a13◂ [ *{ a2◂ [ *{ {| l |}a3◂ [ r]}]a2◂ [ q4]a2◂ [ q5]}] ) ⊢ 0'(= a13◂ [ *{ a2◂ [ *{ {| l |}a3◂ [ r]}]a2◂ [ q0]a2◂ [ q1]}] )
; .mov_ptn 4'(= a13◂ [ *{ a2◂ [ *{ {| l |}a3◂ [ r]}]a2◂ [ q4]a2◂ [ q5]}] ) ⊢ 0'(= a13◂ [ *{ a2◂ [ *{ {| l |}a3◂ [ r]}]a2◂ [ q0]a2◂ [ q1]}] )
	mov rax,r10
	mov r13,rax
	call LB_6212
	mov rdx,QWORD [rsp-8+8*7]
	mov rcx,QWORD [rsp-8+8*6]
	mov r11,QWORD [rsp-8+8*5]
	mov r9,QWORD [rsp-8+8*4]
	mov r10,r8
	mov r8,QWORD [rsp-8+8*3]
	mov QWORD [rsp-8+8*7],r14
	mov r14,QWORD [rsp-8+8*2]
	mov QWORD [rsp-8+8*6],r13
	mov r13,QWORD [rsp-8+8*1]
	add rsp,40
;; rsp=6 , %3222~4'(= a2◂ [ q1] ) %3221~12'(= a2◂ [ q0] ) %3220~13'(= a2◂ [ *{ {| l |}a3◂ [ r]}] ) %3219~8'(= r ) %3218~2'(= {| a2◂ [ q1]|} ) %3217~10'(= {| a2◂ [ q0]|} ) %3216~11'(= {| a2◂ [ *{ {| l |}a3◂ [ r]}]|} ) %3215~6'(= a13◂ [ *{ a14◂ [ ]ra2◂ [ q7]a14◂ [ ]rr}] ) %3214~7'(= a2◂ [ q6] ) %3212~3'(= r ) %3211~{ } %3209~1'(= a2◂ [ *{ ra2◂ [ *{ {| l |}a3◂ [ r]}]a2◂ [ q4]a2◂ [ q5]}] ) %3208~0'(= r ) %3207~{ } %3187~5'(= {| l |} ) %3179~9'(= a2◂ [ a40◂ [ ]] ) 
; #1 { 11'(= {| a2◂ [ *{ {| l |}a3◂ [ r]}]|} ) 0'(= r ) 13'(= a2◂ [ *{ {| l |}a3◂ [ r]}] ) } ⊢ { 11'(= {| a2◂ [ *{ {| l |}a3◂ [ r]}]|} ) 0'(= r ) 15'(= a2◂ [ *{ {| l |}a3◂ [ r]}] ) }
; .mov_ptn2 13'(= a2◂ [ *{ {| l |}a3◂ [ r]}] ) ⊢ 14'(= a2◂ [ *{ {| l |}a3◂ [ r]}] )
	sub rsp,16
	MOV_RAX QWORD [rsp-8+8*1],QWORD [rsp-8+8*2]
; .mov_ptn 13'(= a2◂ [ *{ {| l |}a3◂ [ r]}] ) ⊢ 14'(= a2◂ [ *{ {| l |}a3◂ [ r]}] )
	mov rax,QWORD [rsp-8+8*3]
	mov QWORD [rsp-8+8*2],rax
	mov rax,r13
	mov rdi,QWORD [rsp-8+8*5]
	mov rsi,0x0000_ffff_ffff_ffff 
	and rsi,QWORD [rdi]
	cmp rax,rsi 
	jge err
	lea rdi,[rdi+8+8*rax]
	mov rax,QWORD [rdi]
	mov rsi,QWORD [rsp-8+8*2]
	mov QWORD [rdi],rsi 
	mov QWORD [rsp-8+8*2],rax
; .mov_ptn2 14'(= a2◂ [ *{ {| l |}a3◂ [ r]}] ) ⊢ 15'(= a2◂ [ *{ {| l |}a3◂ [ r]}] )
	sub rsp,8
	MOV_RAX QWORD [rsp-8+8*1],QWORD [rsp-8+8*2]
; .mov_ptn 14'(= a2◂ [ *{ {| l |}a3◂ [ r]}] ) ⊢ 15'(= a2◂ [ *{ {| l |}a3◂ [ r]}] )
	mov rax,QWORD [rsp-8+8*3]
	mov QWORD [rsp-8+8*2],rax
; .dlt.ptn 15'(= a2◂ [ *{ {| l |}a3◂ [ r]}] )
	mov rdi,QWORD [rsp-8+8*2]
	C_PUSH_REGS
	mov r8,rdi
	call LB_6213
	C_POP_REGS
;; rsp=9 , %3224~0'(= r ) %3223~11'(= {| a2◂ [ *{ {| l |}a3◂ [ r]}]|} ) %3222~4'(= a2◂ [ q1] ) %3221~12'(= a2◂ [ q0] ) %3219~8'(= r ) %3218~2'(= {| a2◂ [ q1]|} ) %3217~10'(= {| a2◂ [ q0]|} ) %3215~6'(= a13◂ [ *{ a14◂ [ ]ra2◂ [ q7]a14◂ [ ]rr}] ) %3214~7'(= a2◂ [ q6] ) %3212~3'(= r ) %3211~{ } %3209~1'(= a2◂ [ *{ ra2◂ [ *{ {| l |}a3◂ [ r]}]a2◂ [ q4]a2◂ [ q5]}] ) %3207~{ } %3187~5'(= {| l |} ) %3179~9'(= a2◂ [ a40◂ [ ]] ) 
; #1 { 10'(= {| a2◂ [ q0]|} ) 0'(= r ) 12'(= a2◂ [ q0] ) } ⊢ { 10'(= {| a2◂ [ q0]|} ) 0'(= r ) 14'(= a2◂ [ q0] ) }
; .mov_ptn2 12'(= a2◂ [ q0] ) ⊢ 13'(= a2◂ [ q0] )
	MOV_RAX QWORD [rsp-8+8*3],QWORD [rsp-8+8*4]
; .mov_ptn 12'(= a2◂ [ q0] ) ⊢ 13'(= a2◂ [ q0] )
	mov rax,QWORD [rsp-8+8*5]
	mov QWORD [rsp-8+8*4],rax
	mov rax,r13
	mov rdi,QWORD [rsp-8+8*7]
	mov rsi,0x0000_ffff_ffff_ffff 
	and rsi,QWORD [rdi]
	cmp rax,rsi 
	jge err
	lea rdi,[rdi+8+8*rax]
	mov rax,QWORD [rdi]
	mov rsi,QWORD [rsp-8+8*4]
	mov QWORD [rdi],rsi 
	mov QWORD [rsp-8+8*4],rax
; .mov_ptn2 13'(= a2◂ [ q0] ) ⊢ 14'(= a2◂ [ q0] )
	MOV_RAX QWORD [rsp-8+8*2],QWORD [rsp-8+8*3]
; .mov_ptn 13'(= a2◂ [ q0] ) ⊢ 14'(= a2◂ [ q0] )
	mov rax,QWORD [rsp-8+8*4]
	mov QWORD [rsp-8+8*3],rax
; .dlt.ptn 14'(= a2◂ [ q0] )
	mov rdi,QWORD [rsp-8+8*3]
	C_PUSH_REGS
	mov r8,rdi
	call LB_6223
	C_POP_REGS
;; rsp=9 , %3227~0'(= r ) %3226~10'(= {| a2◂ [ q0]|} ) %3223~11'(= {| a2◂ [ *{ {| l |}a3◂ [ r]}]|} ) %3222~4'(= a2◂ [ q1] ) %3219~8'(= r ) %3218~2'(= {| a2◂ [ q1]|} ) %3215~6'(= a13◂ [ *{ a14◂ [ ]ra2◂ [ q7]a14◂ [ ]rr}] ) %3214~7'(= a2◂ [ q6] ) %3212~3'(= r ) %3211~{ } %3209~1'(= a2◂ [ *{ ra2◂ [ *{ {| l |}a3◂ [ r]}]a2◂ [ q4]a2◂ [ q5]}] ) %3207~{ } %3187~5'(= {| l |} ) %3179~9'(= a2◂ [ a40◂ [ ]] ) 
; #1 { 2'(= {| a2◂ [ q1]|} ) 0'(= r ) 4'(= a2◂ [ q1] ) } ⊢ { 2'(= {| a2◂ [ q1]|} ) 0'(= r ) 13'(= a2◂ [ q1] ) }
; .mov_ptn2 4'(= a2◂ [ q1] ) ⊢ 12'(= a2◂ [ q1] )
	MOV_RAX QWORD [rsp-8+8*4],QWORD [rsp-8+8*5]
; .mov_ptn 4'(= a2◂ [ q1] ) ⊢ 12'(= a2◂ [ q1] )
	mov rax,r10
	mov QWORD [rsp-8+8*5],rax
	mov rax,r13
	mov rdi,r8
	mov rsi,0x0000_ffff_ffff_ffff 
	and rsi,QWORD [rdi]
	cmp rax,rsi 
	jge err
	lea rdi,[rdi+8+8*rax]
	mov rax,QWORD [rdi]
	mov rsi,QWORD [rsp-8+8*5]
	mov QWORD [rdi],rsi 
	mov QWORD [rsp-8+8*5],rax
; .mov_ptn2 12'(= a2◂ [ q1] ) ⊢ 13'(= a2◂ [ q1] )
	MOV_RAX QWORD [rsp-8+8*3],QWORD [rsp-8+8*4]
; .mov_ptn 12'(= a2◂ [ q1] ) ⊢ 13'(= a2◂ [ q1] )
	mov rax,QWORD [rsp-8+8*5]
	mov QWORD [rsp-8+8*4],rax
; .dlt.ptn 13'(= a2◂ [ q1] )
	mov rdi,QWORD [rsp-8+8*4]
	C_PUSH_REGS
	mov r8,rdi
	call LB_6228
	C_POP_REGS
;; rsp=9 , %3230~0'(= r ) %3229~2'(= {| a2◂ [ q1]|} ) %3226~10'(= {| a2◂ [ q0]|} ) %3223~11'(= {| a2◂ [ *{ {| l |}a3◂ [ r]}]|} ) %3219~8'(= r ) %3215~6'(= a13◂ [ *{ a14◂ [ ]ra2◂ [ q7]a14◂ [ ]rr}] ) %3214~7'(= a2◂ [ q6] ) %3212~3'(= r ) %3211~{ } %3209~1'(= a2◂ [ *{ ra2◂ [ *{ {| l |}a3◂ [ r]}]a2◂ [ q4]a2◂ [ q5]}] ) %3207~{ } %3187~5'(= {| l |} ) %3179~9'(= a2◂ [ a40◂ [ ]] ) 
;; ? 1'(= a2◂ [ *{ ra2◂ [ *{ {| l |}a3◂ [ r]}]a2◂ [ q4]a2◂ [ q5]}] ) ⊢ 0(<2)◂{ { 12'(= r ) 13'(= a2◂ [ *{ {| l |}a3◂ [ r]}] ) 14'(= a2◂ [ q4] ) 15'(= a2◂ [ q5] ) } 16'(= a2◂ [ *{ ra2◂ [ *{ {| l |}a3◂ [ r]}]a2◂ [ q4]a2◂ [ q5]}] ) }
	mov rdi,r14
	cmp BYTE [rdi+6],0
	jnz LB_6234
	jmp LB_6235
LB_6234:
	jmp LB_6233
LB_6235:
	mov r10, QWORD [r14+8]
	MOV_RDI QWORD [rsp-8+8*5], QWORD [r10+8]
	MOV_RDI QWORD [rsp-8+8*4], QWORD [r10+16]
	MOV_RDI QWORD [rsp-8+8*3], QWORD [r10+24]
	MOV_RDI QWORD [rsp-8+8*2], QWORD [r10+32]
	mov QWORD [GBG_VCT+8*0],r10
	MOV_RDI QWORD [rsp-8+8*1], QWORD [r14+16]
	mov QWORD [GBG_VCT+8*1],r14
	mov rdi,QWORD [GBG_VCT+8*1]
	FREE_RCD 2,rdi
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_RCD 4,rdi
;; rsp=9 , %3236~16'(= a2◂ [ *{ ra2◂ [ *{ {| l |}a3◂ [ r]}]a2◂ [ q4]a2◂ [ q5]}] ) %3235~15'(= a2◂ [ q5] ) %3234~14'(= a2◂ [ q4] ) %3233~13'(= a2◂ [ *{ {| l |}a3◂ [ r]}] ) %3232~12'(= r ) %3230~0'(= r ) %3229~2'(= {| a2◂ [ q1]|} ) %3226~10'(= {| a2◂ [ q0]|} ) %3223~11'(= {| a2◂ [ *{ {| l |}a3◂ [ r]}]|} ) %3219~8'(= r ) %3215~6'(= a13◂ [ *{ a14◂ [ ]ra2◂ [ q7]a14◂ [ ]rr}] ) %3214~7'(= a2◂ [ q6] ) %3212~3'(= r ) %3211~{ } %3207~{ } %3187~5'(= {| l |} ) %3179~9'(= a2◂ [ a40◂ [ ]] ) 
; #24 0'(= r ) ⊢ 0(<2)◂0'(= r )
;; rsp=9 , %3237~0(<2)◂0'(= r ) %3236~16'(= a2◂ [ *{ ra2◂ [ *{ {| l |}a3◂ [ r]}]a2◂ [ q4]a2◂ [ q5]}] ) %3235~15'(= a2◂ [ q5] ) %3234~14'(= a2◂ [ q4] ) %3233~13'(= a2◂ [ *{ {| l |}a3◂ [ r]}] ) %3232~12'(= r ) %3229~2'(= {| a2◂ [ q1]|} ) %3226~10'(= {| a2◂ [ q0]|} ) %3223~11'(= {| a2◂ [ *{ {| l |}a3◂ [ r]}]|} ) %3219~8'(= r ) %3215~6'(= a13◂ [ *{ a14◂ [ ]ra2◂ [ q7]a14◂ [ ]rr}] ) %3214~7'(= a2◂ [ q6] ) %3212~3'(= r ) %3211~{ } %3207~{ } %3187~5'(= {| l |} ) %3179~9'(= a2◂ [ a40◂ [ ]] ) 
; #23 { { 5'(= {| l |} ) 0(<2)◂0'(= r ) } 13'(= a2◂ [ *{ {| l |}a3◂ [ r]}] ) } ⊢ 0(<2)◂{ { 5'(= {| l |} ) 0(<2)◂0'(= r ) } 13'(= a2◂ [ *{ {| l |}a3◂ [ r]}] ) }
;; rsp=9 , %3238~0(<2)◂{ { 5'(= {| l |} ) 0(<2)◂0'(= r ) } 13'(= a2◂ [ *{ {| l |}a3◂ [ r]}] ) } %3236~16'(= a2◂ [ *{ ra2◂ [ *{ {| l |}a3◂ [ r]}]a2◂ [ q4]a2◂ [ q5]}] ) %3235~15'(= a2◂ [ q5] ) %3234~14'(= a2◂ [ q4] ) %3232~12'(= r ) %3229~2'(= {| a2◂ [ q1]|} ) %3226~10'(= {| a2◂ [ q0]|} ) %3223~11'(= {| a2◂ [ *{ {| l |}a3◂ [ r]}]|} ) %3219~8'(= r ) %3215~6'(= a13◂ [ *{ a14◂ [ ]ra2◂ [ q7]a14◂ [ ]rr}] ) %3214~7'(= a2◂ [ q6] ) %3212~3'(= r ) %3211~{ } %3207~{ } %3179~9'(= a2◂ [ a40◂ [ ]] ) 
; #33 { 11'(= {| a2◂ [ *{ {| l |}a3◂ [ r]}]|} ) 10'(= {| a2◂ [ q0]|} ) 2'(= {| a2◂ [ q1]|} ) 8'(= r ) } ⊢ 0(<1)◂{ 11'(= {| a2◂ [ *{ {| l |}a3◂ [ r]}]|} ) 10'(= {| a2◂ [ q0]|} ) 2'(= {| a2◂ [ q1]|} ) 8'(= r ) }
;; rsp=9 , %3239~0(<1)◂{ 11'(= {| a2◂ [ *{ {| l |}a3◂ [ r]}]|} ) 10'(= {| a2◂ [ q0]|} ) 2'(= {| a2◂ [ q1]|} ) 8'(= r ) } %3238~0(<2)◂{ { 5'(= {| l |} ) 0(<2)◂0'(= r ) } 13'(= a2◂ [ *{ {| l |}a3◂ [ r]}] ) } %3236~16'(= a2◂ [ *{ ra2◂ [ *{ {| l |}a3◂ [ r]}]a2◂ [ q4]a2◂ [ q5]}] ) %3235~15'(= a2◂ [ q5] ) %3234~14'(= a2◂ [ q4] ) %3232~12'(= r ) %3215~6'(= a13◂ [ *{ a14◂ [ ]ra2◂ [ q7]a14◂ [ ]rr}] ) %3214~7'(= a2◂ [ q6] ) %3212~3'(= r ) %3211~{ } %3207~{ } %3179~9'(= a2◂ [ a40◂ [ ]] ) 
; #33 { 0(<2)◂{ { 5'(= {| l |} ) 0(<2)◂0'(= r ) } 13'(= a2◂ [ *{ {| l |}a3◂ [ r]}] ) } 14'(= a2◂ [ q4] ) 15'(= a2◂ [ q5] ) } ⊢ 0(<1)◂{ 0(<2)◂{ { 5'(= {| l |} ) 0(<2)◂0'(= r ) } 13'(= a2◂ [ *{ {| l |}a3◂ [ r]}] ) } 14'(= a2◂ [ q4] ) 15'(= a2◂ [ q5] ) }
;; rsp=9 , %3240~0(<1)◂{ 0(<2)◂{ { 5'(= {| l |} ) 0(<2)◂0'(= r ) } 13'(= a2◂ [ *{ {| l |}a3◂ [ r]}] ) } 14'(= a2◂ [ q4] ) 15'(= a2◂ [ q5] ) } %3239~0(<1)◂{ 11'(= {| a2◂ [ *{ {| l |}a3◂ [ r]}]|} ) 10'(= {| a2◂ [ q0]|} ) 2'(= {| a2◂ [ q1]|} ) 8'(= r ) } %3236~16'(= a2◂ [ *{ ra2◂ [ *{ {| l |}a3◂ [ r]}]a2◂ [ q4]a2◂ [ q5]}] ) %3232~12'(= r ) %3215~6'(= a13◂ [ *{ a14◂ [ ]ra2◂ [ q7]a14◂ [ ]rr}] ) %3214~7'(= a2◂ [ q6] ) %3212~3'(= r ) %3211~{ } %3207~{ } %3179~9'(= a2◂ [ a40◂ [ ]] ) 
; #348 { { } 12'(= r ) 16'(= a2◂ [ *{ ra2◂ [ *{ {| l |}a3◂ [ r]}]a2◂ [ q4]a2◂ [ q5]}] ) 0(<1)◂{ 11'(= {| a2◂ [ *{ {| l |}a3◂ [ r]}]|} ) 10'(= {| a2◂ [ q0]|} ) 2'(= {| a2◂ [ q1]|} ) 8'(= r ) } { } 3'(= r ) 0(<1)◂{ 0(<2)◂{ { 5'(= {| l |} ) 0(<2)◂0'(= r ) } 13'(= a2◂ [ *{ {| l |}a3◂ [ r]}] ) } 14'(= a2◂ [ q4] ) 15'(= a2◂ [ q5] ) } 9'(= a2◂ [ a40◂ [ ]] ) 7'(= a2◂ [ q6] ) 6'(= a13◂ [ *{ a14◂ [ ]ra2◂ [ q7]a14◂ [ ]rr}] ) } ⊢|
; .mov_ptn2 { { } 12'(= r ) 16'(= a2◂ [ *{ ra2◂ [ *{ {| l |}a3◂ [ r]}]a2◂ [ q4]a2◂ [ q5]}] ) 0(<1)◂{ 11'(= {| a2◂ [ *{ {| l |}a3◂ [ r]}]|} ) 10'(= {| a2◂ [ q0]|} ) 2'(= {| a2◂ [ q1]|} ) 8'(= r ) } { } 3'(= r ) 0(<1)◂{ 0(<2)◂{ { 5'(= {| l |} ) 0(<2)◂0'(= r ) } 13'(= a2◂ [ *{ {| l |}a3◂ [ r]}] ) } 14'(= a2◂ [ q4] ) 15'(= a2◂ [ q5] ) } 9'(= a2◂ [ a40◂ [ ]] ) 7'(= a2◂ [ q6] ) 6'(= a13◂ [ *{ a14◂ [ ]ra2◂ [ q7]a14◂ [ ]rr}] ) } ⊢ { { } 0'(= r ) 1'(= a2◂ [ *{ ra2◂ [ *{ {| l |}a3◂ [ r]}]a2◂ [ q0]a2◂ [ q1]}] ) 2'(= a13◂ [ *{ {| a2◂ [ *{ {| l |}a3◂ [ r]}]|}{| a2◂ [ q0]|}{| a2◂ [ q1]|}r}] ) { } 3'(= r ) 4'(= a13◂ [ *{ a2◂ [ *{ {| l |}a3◂ [ r]}]a2◂ [ q0]a2◂ [ q1]}] ) 5'(= a2◂ [ a40◂ [ ]] ) 6'(= a2◂ [ q2] ) 7'(= a13◂ [ *{ a14◂ [ ]ra2◂ [ q3]a14◂ [ ]rr}] ) }
	sub rsp,8
	mov QWORD [rsp-8+8*1],rdx
; .mov_ptn 6'(= a13◂ [ *{ a14◂ [ ]ra2◂ [ q7]a14◂ [ ]rr}] ) ⊢ 7'(= a13◂ [ *{ a14◂ [ ]ra2◂ [ q3]a14◂ [ ]rr}] )
	mov rax,rcx
	mov rdx,rax
	sub rsp,8
	mov QWORD [rsp-8+8*1],r11
; .mov_ptn 9'(= a2◂ [ a40◂ [ ]] ) ⊢ 5'(= a2◂ [ a40◂ [ ]] )
	mov rax,QWORD [rsp-8+8*10]
	mov r11,rax
; .mov_ptn 17'(= a2◂ [ q6] ) ⊢ 6'(= a2◂ [ q2] )
	mov rax,QWORD [rsp-8+8*2]
	mov rcx,rax
; .mov_ptn 0(<1)◂{ 0(<2)◂{ { 18'(= {| l |} ) 0(<2)◂0'(= r ) } 13'(= a2◂ [ *{ {| l |}a3◂ [ r]}] ) } 14'(= a2◂ [ q4] ) 15'(= a2◂ [ q5] ) } ⊢ 4'(= a13◂ [ *{ a2◂ [ *{ {| l |}a3◂ [ r]}]a2◂ [ q0]a2◂ [ q1]}] )
	ALC_RCD 3, rax
	mov r14,rax
	ALC_RCD 2, rax
	mov QWORD [rsp-8+8*10],rax
	ALC_RCD 2, rax
	mov QWORD [rsp-8+8*2],rax
	mov rax,QWORD [rsp-8+8*1]
	mov rdi,QWORD [rsp-8+8*2]
	mov QWORD [rdi+8+8*0],rax
	mov rax,r13
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov rdi,QWORD [rsp-8+8*2]
	mov QWORD [rdi+8+8*1],rax
	mov rax,QWORD [rsp-8+8*2]
	mov rdi,QWORD [rsp-8+8*10]
	mov QWORD [rdi+8+8*0],rax
	mov rax,QWORD [rsp-8+8*6]
	mov rdi,QWORD [rsp-8+8*10]
	mov QWORD [rdi+8+8*1],rax
	mov rax,QWORD [rsp-8+8*10]
	mov BYTE [rax+6],0
	mov QWORD [r14+8+8*0],rax
	mov rax,QWORD [rsp-8+8*5]
	mov QWORD [r14+8+8*1],rax
	mov rax,QWORD [rsp-8+8*4]
	mov QWORD [r14+8+8*2],rax
	mov rax,r14
	mov BYTE [rax+6],0
	mov r10,rax
	sub rsp,8
	mov QWORD [rsp-8+8*1],r8
; .mov_ptn 0(<1)◂{ 11'(= {| a2◂ [ *{ {| l |}a3◂ [ r]}]|} ) 10'(= {| a2◂ [ q0]|} ) 19'(= {| a2◂ [ q1]|} ) 8'(= r ) } ⊢ 2'(= a13◂ [ *{ {| a2◂ [ *{ {| l |}a3◂ [ r]}]|}{| a2◂ [ q0]|}{| a2◂ [ q1]|}r}] )
	ALC_RCD 4, rax
	mov r13,rax
	mov rax,QWORD [rsp-8+8*9]
	mov QWORD [r13+8+8*0],rax
	mov rax,QWORD [rsp-8+8*10]
	mov QWORD [r13+8+8*1],rax
	mov rax,QWORD [rsp-8+8*1]
	mov QWORD [r13+8+8*2],rax
	mov rax,QWORD [rsp-8+8*12]
	mov QWORD [r13+8+8*3],rax
	mov rax,r13
	mov BYTE [rax+6],0
	mov r8,rax
; .mov_ptn 16'(= a2◂ [ *{ ra2◂ [ *{ {| l |}a3◂ [ r]}]a2◂ [ q4]a2◂ [ q5]}] ) ⊢ 1'(= a2◂ [ *{ ra2◂ [ *{ {| l |}a3◂ [ r]}]a2◂ [ q0]a2◂ [ q1]}] )
	mov rax,QWORD [rsp-8+8*4]
	mov r14,rax
; .mov_ptn 12'(= r ) ⊢ 0'(= r )
	mov rax,QWORD [rsp-8+8*8]
	mov r13,rax
	add rsp,24
	call LB_5793
	add rsp,72
; .mov_ptn2 { { } 0'(= r ) 1'(= a2◂ [ *{ ra2◂ [ *{ {| l |}a3◂ [ r]}]a2◂ [ q4]a2◂ [ q5]}] ) 2'(= a13◂ [ *{ {| a2◂ [ *{ {| l |}a3◂ [ r]}]|}{| a2◂ [ q4]|}{| a2◂ [ q5]|}r}] ) { } 3'(= r ) 4'(= a13◂ [ *{ a2◂ [ *{ {| l |}a3◂ [ r]}]a2◂ [ q4]a2◂ [ q5]}] ) 5'(= a2◂ [ q6] ) 6'(= a13◂ [ *{ a14◂ [ ]ra2◂ [ q7]a14◂ [ ]rr}] ) } ⊢ { { } 0'(= r ) 1'(= a2◂ [ *{ ra2◂ [ *{ {| l |}a3◂ [ r]}]a2◂ [ q4]a2◂ [ q5]}] ) 2'(= a13◂ [ *{ {| a2◂ [ *{ {| l |}a3◂ [ r]}]|}{| a2◂ [ q4]|}{| a2◂ [ q5]|}r}] ) { } 3'(= r ) 4'(= a13◂ [ *{ a2◂ [ *{ {| l |}a3◂ [ r]}]a2◂ [ q4]a2◂ [ q5]}] ) 5'(= a2◂ [ q6] ) 6'(= a13◂ [ *{ a14◂ [ ]ra2◂ [ q7]a14◂ [ ]rr}] ) }
	ret
LB_6233:
;; ?. 1'(= a2◂ [ *{ ra2◂ [ *{ {| l |}a3◂ [ r]}]a2◂ [ q4]a2◂ [ q5]}] ) ⊢ 1(<2)◂{ }
;; rsp=9 , %3230~0'(= r ) %3229~2'(= {| a2◂ [ q1]|} ) %3226~10'(= {| a2◂ [ q0]|} ) %3223~11'(= {| a2◂ [ *{ {| l |}a3◂ [ r]}]|} ) %3219~8'(= r ) %3215~6'(= a13◂ [ *{ a14◂ [ ]ra2◂ [ q7]a14◂ [ ]rr}] ) %3214~7'(= a2◂ [ q6] ) %3212~3'(= r ) %3211~{ } %3207~{ } %3187~5'(= {| l |} ) %3179~9'(= a2◂ [ a40◂ [ ]] ) 
; $ %[ "slv_file_lp 0" ] ⊢ %[ "slv_file_lp 0" ]
;; rsp=9 , %3241~%[ "slv_file_lp 0" ] %3230~0'(= r ) %3229~2'(= {| a2◂ [ q1]|} ) %3226~10'(= {| a2◂ [ q0]|} ) %3223~11'(= {| a2◂ [ *{ {| l |}a3◂ [ r]}]|} ) %3219~8'(= r ) %3215~6'(= a13◂ [ *{ a14◂ [ ]ra2◂ [ q7]a14◂ [ ]rr}] ) %3214~7'(= a2◂ [ q6] ) %3212~3'(= r ) %3211~{ } %3207~{ } %3187~5'(= {| l |} ) %3179~9'(= a2◂ [ a40◂ [ ]] ) 
; #10 %[ "slv_file_lp 0" ] ⊢ %[ "slv_file_lp 0" ]
	mov rdi,fmt_emt
	call emt_stg
	mov rdi,LB_6236
	call emt_stg 
	mov rdi,fmt_nl
	call emt_stg
	jmp LB_6237
LB_6237:
;; rsp=9 , %3242~%[ "slv_file_lp 0" ] %3230~0'(= r ) %3229~2'(= {| a2◂ [ q1]|} ) %3226~10'(= {| a2◂ [ q0]|} ) %3223~11'(= {| a2◂ [ *{ {| l |}a3◂ [ r]}]|} ) %3219~8'(= r ) %3215~6'(= a13◂ [ *{ a14◂ [ ]ra2◂ [ q7]a14◂ [ ]rr}] ) %3214~7'(= a2◂ [ q6] ) %3212~3'(= r ) %3211~{ } %3207~{ } %3187~5'(= {| l |} ) %3179~9'(= a2◂ [ a40◂ [ ]] ) 
	mov rdi,LB_6238
	call emt_stg 
	jmp err
LB_6208:
;; ?. 10'(= a41◂ [ ] ) ⊢ 1(<2)◂8'(= a18◂ [ ] )
	mov QWORD [GBG_VCT+8*0],rdi
	MOV_RAX QWORD [rsp-8+8*3],QWORD [rdi+8]
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_LN rdi
;; rsp=3 , %3189~8'(= a18◂ [ ] ) %3187~5'(= {| l |} ) %3179~9'(= a2◂ [ a40◂ [ ]] ) %3175~7'(= a13◂ [ *{ a14◂ [ ]ra2◂ [ q3]a14◂ [ ]rr}] ) %3174~6'(= a2◂ [ q2] ) %3172~4'(= a13◂ [ *{ a2◂ [ *{ {| l |}a3◂ [ r]}]a2◂ [ q0]a2◂ [ q1]}] ) %3171~3'(= r ) %3170~{ } %3169~2'(= a13◂ [ *{ {| a2◂ [ *{ {| l |}a3◂ [ r]}]|}{| a2◂ [ q0]|}{| a2◂ [ q1]|}r}] ) %3168~1'(= a2◂ [ *{ ra2◂ [ *{ {| l |}a3◂ [ r]}]a2◂ [ q0]a2◂ [ q1]}] ) %3167~0'(= r ) %3166~{ } 
; #34 2'(= a13◂ [ *{ {| a2◂ [ *{ {| l |}a3◂ [ r]}]|}{| a2◂ [ q0]|}{| a2◂ [ q1]|}r}] ) ⊢ { 12'(= {| a2◂ [ *{ {| l |}a3◂ [ r]}]|} ) 11'(= {| a2◂ [ q0]|} ) 2'(= {| a2◂ [ q1]|} ) 10'(= r ) }
	sub rsp,56
	mov QWORD [rsp+8*0],r13
	mov QWORD [rsp+8*1],r14
	mov QWORD [rsp+8*2],r9
	mov QWORD [rsp+8*3],r10
	mov QWORD [rsp+8*4],r11
	mov QWORD [rsp+8*5],rcx
	mov QWORD [rsp+8*6],rdx
; .mov_ptn2 2'(= a13◂ [ *{ {| a2◂ [ *{ {| l |}a3◂ [ r]}]|}{| a2◂ [ q0]|}{| a2◂ [ q1]|}r}] ) ⊢ 0'(= a13◂ [ *{ {| a2◂ [ *{ {| l |}a3◂ [ r]}]|}{| a2◂ [ q0]|}{| a2◂ [ q1]|}r}] )
; .mov_ptn 2'(= a13◂ [ *{ {| a2◂ [ *{ {| l |}a3◂ [ r]}]|}{| a2◂ [ q0]|}{| a2◂ [ q1]|}r}] ) ⊢ 0'(= a13◂ [ *{ {| a2◂ [ *{ {| l |}a3◂ [ r]}]|}{| a2◂ [ q0]|}{| a2◂ [ q1]|}r}] )
	mov rax,r8
	mov r13,rax
	call LB_6211
	mov rdx,QWORD [rsp-8+8*7]
	mov rcx,QWORD [rsp-8+8*6]
	mov r11,QWORD [rsp-8+8*5]
	mov r10,QWORD [rsp-8+8*4]
	mov QWORD [rsp-8+8*8],r9
	mov r9,QWORD [rsp-8+8*3]
	mov QWORD [rsp-8+8*7],r14
	mov r14,QWORD [rsp-8+8*2]
	mov QWORD [rsp-8+8*6],r13
	mov r13,QWORD [rsp-8+8*1]
	add rsp,40
;; rsp=5 , %3246~10'(= r ) %3245~2'(= {| a2◂ [ q1]|} ) %3244~11'(= {| a2◂ [ q0]|} ) %3243~12'(= {| a2◂ [ *{ {| l |}a3◂ [ r]}]|} ) %3189~8'(= a18◂ [ ] ) %3187~5'(= {| l |} ) %3179~9'(= a2◂ [ a40◂ [ ]] ) %3175~7'(= a13◂ [ *{ a14◂ [ ]ra2◂ [ q3]a14◂ [ ]rr}] ) %3174~6'(= a2◂ [ q2] ) %3172~4'(= a13◂ [ *{ a2◂ [ *{ {| l |}a3◂ [ r]}]a2◂ [ q0]a2◂ [ q1]}] ) %3171~3'(= r ) %3170~{ } %3168~1'(= a2◂ [ *{ ra2◂ [ *{ {| l |}a3◂ [ r]}]a2◂ [ q0]a2◂ [ q1]}] ) %3167~0'(= r ) %3166~{ } 
; #34 4'(= a13◂ [ *{ a2◂ [ *{ {| l |}a3◂ [ r]}]a2◂ [ q0]a2◂ [ q1]}] ) ⊢ { 14'(= a2◂ [ *{ {| l |}a3◂ [ r]}] ) 13'(= a2◂ [ q0] ) 4'(= a2◂ [ q1] ) }
	sub rsp,56
	mov QWORD [rsp+8*0],r13
	mov QWORD [rsp+8*1],r14
	mov QWORD [rsp+8*2],r8
	mov QWORD [rsp+8*3],r9
	mov QWORD [rsp+8*4],r11
	mov QWORD [rsp+8*5],rcx
	mov QWORD [rsp+8*6],rdx
; .mov_ptn2 4'(= a13◂ [ *{ a2◂ [ *{ {| l |}a3◂ [ r]}]a2◂ [ q0]a2◂ [ q1]}] ) ⊢ 0'(= a13◂ [ *{ a2◂ [ *{ {| l |}a3◂ [ r]}]a2◂ [ q0]a2◂ [ q1]}] )
; .mov_ptn 4'(= a13◂ [ *{ a2◂ [ *{ {| l |}a3◂ [ r]}]a2◂ [ q0]a2◂ [ q1]}] ) ⊢ 0'(= a13◂ [ *{ a2◂ [ *{ {| l |}a3◂ [ r]}]a2◂ [ q0]a2◂ [ q1]}] )
	mov rax,r10
	mov r13,rax
	call LB_6212
	mov rdx,QWORD [rsp-8+8*7]
	mov rcx,QWORD [rsp-8+8*6]
	mov r11,QWORD [rsp-8+8*5]
	mov r9,QWORD [rsp-8+8*4]
	mov r10,r8
	mov r8,QWORD [rsp-8+8*3]
	mov QWORD [rsp-8+8*7],r14
	mov r14,QWORD [rsp-8+8*2]
	mov QWORD [rsp-8+8*6],r13
	mov r13,QWORD [rsp-8+8*1]
	add rsp,40
;; rsp=7 , %3249~4'(= a2◂ [ q1] ) %3248~13'(= a2◂ [ q0] ) %3247~14'(= a2◂ [ *{ {| l |}a3◂ [ r]}] ) %3246~10'(= r ) %3245~2'(= {| a2◂ [ q1]|} ) %3244~11'(= {| a2◂ [ q0]|} ) %3243~12'(= {| a2◂ [ *{ {| l |}a3◂ [ r]}]|} ) %3189~8'(= a18◂ [ ] ) %3187~5'(= {| l |} ) %3179~9'(= a2◂ [ a40◂ [ ]] ) %3175~7'(= a13◂ [ *{ a14◂ [ ]ra2◂ [ q3]a14◂ [ ]rr}] ) %3174~6'(= a2◂ [ q2] ) %3171~3'(= r ) %3170~{ } %3168~1'(= a2◂ [ *{ ra2◂ [ *{ {| l |}a3◂ [ r]}]a2◂ [ q0]a2◂ [ q1]}] ) %3167~0'(= r ) %3166~{ } 
; #347 { 8'(= a18◂ [ ] ) 12'(= {| a2◂ [ *{ {| l |}a3◂ [ r]}]|} ) 14'(= a2◂ [ *{ {| l |}a3◂ [ r]}] ) 1'(= a2◂ [ *{ ra2◂ [ *{ {| l |}a3◂ [ r]}]a2◂ [ q0]a2◂ [ q1]}] ) } ⊢ { 14'(= {| a2◂ [ *{ {| l |}a3◂ [ r]}]|} ) 1'(= a2◂ [ *{ {| l |}a3◂ [ r]}] ) 12'(= a2◂ [ *{ ra2◂ [ *{ {| l |}a3◂ [ r]}]a2◂ [ q0]a2◂ [ q1]}] ) 8'(= r ) }
	sub rsp,56
	mov QWORD [rsp+8*0],r13
	mov QWORD [rsp+8*1],r8
	mov QWORD [rsp+8*2],r9
	mov QWORD [rsp+8*3],r10
	mov QWORD [rsp+8*4],r11
	mov QWORD [rsp+8*5],rcx
	mov QWORD [rsp+8*6],rdx
; .mov_ptn2 { 8'(= a18◂ [ ] ) 12'(= {| a2◂ [ *{ {| l |}a3◂ [ r]}]|} ) 14'(= a2◂ [ *{ {| l |}a3◂ [ r]}] ) 1'(= a2◂ [ *{ ra2◂ [ *{ {| l |}a3◂ [ r]}]a2◂ [ q0]a2◂ [ q1]}] ) } ⊢ { 0'(= a18◂ [ ] ) 1'(= {| a2◂ [ *{ {| l |}a3◂ [ r]}]|} ) 2'(= a2◂ [ *{ {| l |}a3◂ [ r]}] ) 3'(= a2◂ [ *{ ra2◂ [ *{ {| l |}a3◂ [ r]}]a2◂ [ q0]a2◂ [ q1]}] ) }
; .mov_ptn 1'(= a2◂ [ *{ ra2◂ [ *{ {| l |}a3◂ [ r]}]a2◂ [ q0]a2◂ [ q1]}] ) ⊢ 3'(= a2◂ [ *{ ra2◂ [ *{ {| l |}a3◂ [ r]}]a2◂ [ q0]a2◂ [ q1]}] )
	mov rax,r14
	mov r9,rax
; .mov_ptn 14'(= a2◂ [ *{ {| l |}a3◂ [ r]}] ) ⊢ 2'(= a2◂ [ *{ {| l |}a3◂ [ r]}] )
	mov rax,QWORD [rsp-8+8*8]
	mov r8,rax
; .mov_ptn 12'(= {| a2◂ [ *{ {| l |}a3◂ [ r]}]|} ) ⊢ 1'(= {| a2◂ [ *{ {| l |}a3◂ [ r]}]|} )
	mov rax,QWORD [rsp-8+8*10]
	mov r14,rax
; .mov_ptn 8'(= a18◂ [ ] ) ⊢ 0'(= a18◂ [ ] )
	mov rax,QWORD [rsp-8+8*14]
	mov r13,rax
	call LB_6239
	mov rdx,QWORD [rsp-8+8*7]
	mov rcx,QWORD [rsp-8+8*6]
	mov r11,QWORD [rsp-8+8*5]
	mov r10,QWORD [rsp-8+8*4]
	mov QWORD [rsp-8+8*14],r9
	mov r9,QWORD [rsp-8+8*3]
	mov QWORD [rsp-8+8*10],r8
	mov r8,QWORD [rsp-8+8*2]
	mov QWORD [rsp-8+8*8],r13
	mov r13,QWORD [rsp-8+8*1]
	add rsp,56
;; rsp=7 , %3253~8'(= r ) %3252~12'(= a2◂ [ *{ ra2◂ [ *{ {| l |}a3◂ [ r]}]a2◂ [ q0]a2◂ [ q1]}] ) %3251~1'(= a2◂ [ *{ {| l |}a3◂ [ r]}] ) %3250~14'(= {| a2◂ [ *{ {| l |}a3◂ [ r]}]|} ) %3249~4'(= a2◂ [ q1] ) %3248~13'(= a2◂ [ q0] ) %3246~10'(= r ) %3245~2'(= {| a2◂ [ q1]|} ) %3244~11'(= {| a2◂ [ q0]|} ) %3187~5'(= {| l |} ) %3179~9'(= a2◂ [ a40◂ [ ]] ) %3175~7'(= a13◂ [ *{ a14◂ [ ]ra2◂ [ q3]a14◂ [ ]rr}] ) %3174~6'(= a2◂ [ q2] ) %3171~3'(= r ) %3170~{ } %3167~0'(= r ) %3166~{ } 
; #24 8'(= r ) ⊢ 0(<2)◂8'(= r )
;; rsp=7 , %3254~0(<2)◂8'(= r ) %3252~12'(= a2◂ [ *{ ra2◂ [ *{ {| l |}a3◂ [ r]}]a2◂ [ q0]a2◂ [ q1]}] ) %3251~1'(= a2◂ [ *{ {| l |}a3◂ [ r]}] ) %3250~14'(= {| a2◂ [ *{ {| l |}a3◂ [ r]}]|} ) %3249~4'(= a2◂ [ q1] ) %3248~13'(= a2◂ [ q0] ) %3246~10'(= r ) %3245~2'(= {| a2◂ [ q1]|} ) %3244~11'(= {| a2◂ [ q0]|} ) %3187~5'(= {| l |} ) %3179~9'(= a2◂ [ a40◂ [ ]] ) %3175~7'(= a13◂ [ *{ a14◂ [ ]ra2◂ [ q3]a14◂ [ ]rr}] ) %3174~6'(= a2◂ [ q2] ) %3171~3'(= r ) %3170~{ } %3167~0'(= r ) %3166~{ } 
; #23 { { 5'(= {| l |} ) 0(<2)◂8'(= r ) } 1'(= a2◂ [ *{ {| l |}a3◂ [ r]}] ) } ⊢ 0(<2)◂{ { 5'(= {| l |} ) 0(<2)◂8'(= r ) } 1'(= a2◂ [ *{ {| l |}a3◂ [ r]}] ) }
;; rsp=7 , %3255~0(<2)◂{ { 5'(= {| l |} ) 0(<2)◂8'(= r ) } 1'(= a2◂ [ *{ {| l |}a3◂ [ r]}] ) } %3252~12'(= a2◂ [ *{ ra2◂ [ *{ {| l |}a3◂ [ r]}]a2◂ [ q0]a2◂ [ q1]}] ) %3250~14'(= {| a2◂ [ *{ {| l |}a3◂ [ r]}]|} ) %3249~4'(= a2◂ [ q1] ) %3248~13'(= a2◂ [ q0] ) %3246~10'(= r ) %3245~2'(= {| a2◂ [ q1]|} ) %3244~11'(= {| a2◂ [ q0]|} ) %3179~9'(= a2◂ [ a40◂ [ ]] ) %3175~7'(= a13◂ [ *{ a14◂ [ ]ra2◂ [ q3]a14◂ [ ]rr}] ) %3174~6'(= a2◂ [ q2] ) %3171~3'(= r ) %3170~{ } %3167~0'(= r ) %3166~{ } 
; #33 { 14'(= {| a2◂ [ *{ {| l |}a3◂ [ r]}]|} ) 11'(= {| a2◂ [ q0]|} ) 2'(= {| a2◂ [ q1]|} ) 10'(= r ) } ⊢ 0(<1)◂{ 14'(= {| a2◂ [ *{ {| l |}a3◂ [ r]}]|} ) 11'(= {| a2◂ [ q0]|} ) 2'(= {| a2◂ [ q1]|} ) 10'(= r ) }
;; rsp=7 , %3256~0(<1)◂{ 14'(= {| a2◂ [ *{ {| l |}a3◂ [ r]}]|} ) 11'(= {| a2◂ [ q0]|} ) 2'(= {| a2◂ [ q1]|} ) 10'(= r ) } %3255~0(<2)◂{ { 5'(= {| l |} ) 0(<2)◂8'(= r ) } 1'(= a2◂ [ *{ {| l |}a3◂ [ r]}] ) } %3252~12'(= a2◂ [ *{ ra2◂ [ *{ {| l |}a3◂ [ r]}]a2◂ [ q0]a2◂ [ q1]}] ) %3249~4'(= a2◂ [ q1] ) %3248~13'(= a2◂ [ q0] ) %3179~9'(= a2◂ [ a40◂ [ ]] ) %3175~7'(= a13◂ [ *{ a14◂ [ ]ra2◂ [ q3]a14◂ [ ]rr}] ) %3174~6'(= a2◂ [ q2] ) %3171~3'(= r ) %3170~{ } %3167~0'(= r ) %3166~{ } 
; #33 { 0(<2)◂{ { 5'(= {| l |} ) 0(<2)◂8'(= r ) } 1'(= a2◂ [ *{ {| l |}a3◂ [ r]}] ) } 13'(= a2◂ [ q0] ) 4'(= a2◂ [ q1] ) } ⊢ 0(<1)◂{ 0(<2)◂{ { 5'(= {| l |} ) 0(<2)◂8'(= r ) } 1'(= a2◂ [ *{ {| l |}a3◂ [ r]}] ) } 13'(= a2◂ [ q0] ) 4'(= a2◂ [ q1] ) }
;; rsp=7 , %3257~0(<1)◂{ 0(<2)◂{ { 5'(= {| l |} ) 0(<2)◂8'(= r ) } 1'(= a2◂ [ *{ {| l |}a3◂ [ r]}] ) } 13'(= a2◂ [ q0] ) 4'(= a2◂ [ q1] ) } %3256~0(<1)◂{ 14'(= {| a2◂ [ *{ {| l |}a3◂ [ r]}]|} ) 11'(= {| a2◂ [ q0]|} ) 2'(= {| a2◂ [ q1]|} ) 10'(= r ) } %3252~12'(= a2◂ [ *{ ra2◂ [ *{ {| l |}a3◂ [ r]}]a2◂ [ q0]a2◂ [ q1]}] ) %3179~9'(= a2◂ [ a40◂ [ ]] ) %3175~7'(= a13◂ [ *{ a14◂ [ ]ra2◂ [ q3]a14◂ [ ]rr}] ) %3174~6'(= a2◂ [ q2] ) %3171~3'(= r ) %3170~{ } %3167~0'(= r ) %3166~{ } 
; #348 { { } 0'(= r ) 12'(= a2◂ [ *{ ra2◂ [ *{ {| l |}a3◂ [ r]}]a2◂ [ q0]a2◂ [ q1]}] ) 0(<1)◂{ 14'(= {| a2◂ [ *{ {| l |}a3◂ [ r]}]|} ) 11'(= {| a2◂ [ q0]|} ) 2'(= {| a2◂ [ q1]|} ) 10'(= r ) } { } 3'(= r ) 0(<1)◂{ 0(<2)◂{ { 5'(= {| l |} ) 0(<2)◂8'(= r ) } 1'(= a2◂ [ *{ {| l |}a3◂ [ r]}] ) } 13'(= a2◂ [ q0] ) 4'(= a2◂ [ q1] ) } 9'(= a2◂ [ a40◂ [ ]] ) 6'(= a2◂ [ q2] ) 7'(= a13◂ [ *{ a14◂ [ ]ra2◂ [ q3]a14◂ [ ]rr}] ) } ⊢|
; .mov_ptn2 { { } 0'(= r ) 12'(= a2◂ [ *{ ra2◂ [ *{ {| l |}a3◂ [ r]}]a2◂ [ q0]a2◂ [ q1]}] ) 0(<1)◂{ 14'(= {| a2◂ [ *{ {| l |}a3◂ [ r]}]|} ) 11'(= {| a2◂ [ q0]|} ) 2'(= {| a2◂ [ q1]|} ) 10'(= r ) } { } 3'(= r ) 0(<1)◂{ 0(<2)◂{ { 5'(= {| l |} ) 0(<2)◂8'(= r ) } 1'(= a2◂ [ *{ {| l |}a3◂ [ r]}] ) } 13'(= a2◂ [ q0] ) 4'(= a2◂ [ q1] ) } 9'(= a2◂ [ a40◂ [ ]] ) 6'(= a2◂ [ q2] ) 7'(= a13◂ [ *{ a14◂ [ ]ra2◂ [ q3]a14◂ [ ]rr}] ) } ⊢ { { } 0'(= r ) 1'(= a2◂ [ *{ ra2◂ [ *{ {| l |}a3◂ [ r]}]a2◂ [ q0]a2◂ [ q1]}] ) 2'(= a13◂ [ *{ {| a2◂ [ *{ {| l |}a3◂ [ r]}]|}{| a2◂ [ q0]|}{| a2◂ [ q1]|}r}] ) { } 3'(= r ) 4'(= a13◂ [ *{ a2◂ [ *{ {| l |}a3◂ [ r]}]a2◂ [ q0]a2◂ [ q1]}] ) 5'(= a2◂ [ a40◂ [ ]] ) 6'(= a2◂ [ q2] ) 7'(= a13◂ [ *{ a14◂ [ ]ra2◂ [ q3]a14◂ [ ]rr}] ) }
	sub rsp,8
	mov QWORD [rsp-8+8*1],r11
; .mov_ptn 9'(= a2◂ [ a40◂ [ ]] ) ⊢ 5'(= a2◂ [ a40◂ [ ]] )
	mov rax,QWORD [rsp-8+8*7]
	mov r11,rax
	sub rsp,8
	mov QWORD [rsp-8+8*1],r10
; .mov_ptn 0(<1)◂{ 0(<2)◂{ { 15'(= {| l |} ) 0(<2)◂8'(= r ) } 1'(= a2◂ [ *{ {| l |}a3◂ [ r]}] ) } 13'(= a2◂ [ q0] ) 16'(= a2◂ [ q1] ) } ⊢ 4'(= a13◂ [ *{ a2◂ [ *{ {| l |}a3◂ [ r]}]a2◂ [ q0]a2◂ [ q1]}] )
	ALC_RCD 3, rax
	mov QWORD [rsp-8+8*8],rax
	sub rsp,8
	ALC_RCD 2, rax
	mov QWORD [rsp-8+8*1],rax
	sub rsp,8
	ALC_RCD 2, rax
	mov QWORD [rsp-8+8*1],rax
	mov rax,QWORD [rsp-8+8*4]
	mov rdi,QWORD [rsp-8+8*1]
	mov QWORD [rdi+8+8*0],rax
	mov rax,QWORD [rsp-8+8*11]
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov rdi,QWORD [rsp-8+8*1]
	mov QWORD [rdi+8+8*1],rax
	mov rax,QWORD [rsp-8+8*1]
	mov rdi,QWORD [rsp-8+8*2]
	mov QWORD [rdi+8+8*0],rax
	mov rax,r14
	mov rdi,QWORD [rsp-8+8*2]
	mov QWORD [rdi+8+8*1],rax
	mov rax,QWORD [rsp-8+8*2]
	mov BYTE [rax+6],0
	mov rdi,QWORD [rsp-8+8*10]
	mov QWORD [rdi+8+8*0],rax
	mov rax,QWORD [rsp-8+8*6]
	mov rdi,QWORD [rsp-8+8*10]
	mov QWORD [rdi+8+8*1],rax
	mov rax,QWORD [rsp-8+8*3]
	mov rdi,QWORD [rsp-8+8*10]
	mov QWORD [rdi+8+8*2],rax
	mov rax,QWORD [rsp-8+8*10]
	mov BYTE [rax+6],0
	mov r10,rax
	mov QWORD [rsp-8+8*2],r8
; .mov_ptn 0(<1)◂{ 14'(= {| a2◂ [ *{ {| l |}a3◂ [ r]}]|} ) 11'(= {| a2◂ [ q0]|} ) 17'(= {| a2◂ [ q1]|} ) 10'(= r ) } ⊢ 2'(= a13◂ [ *{ {| a2◂ [ *{ {| l |}a3◂ [ r]}]|}{| a2◂ [ q0]|}{| a2◂ [ q1]|}r}] )
	ALC_RCD 4, rax
	mov r14,rax
	mov rax,QWORD [rsp-8+8*5]
	mov QWORD [r14+8+8*0],rax
	mov rax,QWORD [rsp-8+8*8]
	mov QWORD [r14+8+8*1],rax
	mov rax,QWORD [rsp-8+8*2]
	mov QWORD [r14+8+8*2],rax
	mov rax,QWORD [rsp-8+8*9]
	mov QWORD [r14+8+8*3],rax
	mov rax,r14
	mov BYTE [rax+6],0
	mov r8,rax
; .mov_ptn 12'(= a2◂ [ *{ ra2◂ [ *{ {| l |}a3◂ [ r]}]a2◂ [ q0]a2◂ [ q1]}] ) ⊢ 1'(= a2◂ [ *{ ra2◂ [ *{ {| l |}a3◂ [ r]}]a2◂ [ q0]a2◂ [ q1]}] )
	mov rax,QWORD [rsp-8+8*7]
	mov r14,rax
	add rsp,32
	call LB_5793
	add rsp,56
; .mov_ptn2 { { } 0'(= r ) 1'(= a2◂ [ *{ ra2◂ [ *{ {| l |}a3◂ [ r]}]a2◂ [ q4]a2◂ [ q5]}] ) 2'(= a13◂ [ *{ {| a2◂ [ *{ {| l |}a3◂ [ r]}]|}{| a2◂ [ q4]|}{| a2◂ [ q5]|}r}] ) { } 3'(= r ) 4'(= a13◂ [ *{ a2◂ [ *{ {| l |}a3◂ [ r]}]a2◂ [ q4]a2◂ [ q5]}] ) 5'(= a2◂ [ q6] ) 6'(= a13◂ [ *{ a14◂ [ ]ra2◂ [ q7]a14◂ [ ]rr}] ) } ⊢ { { } 0'(= r ) 1'(= a2◂ [ *{ ra2◂ [ *{ {| l |}a3◂ [ r]}]a2◂ [ q4]a2◂ [ q5]}] ) 2'(= a13◂ [ *{ {| a2◂ [ *{ {| l |}a3◂ [ r]}]|}{| a2◂ [ q4]|}{| a2◂ [ q5]|}r}] ) { } 3'(= r ) 4'(= a13◂ [ *{ a2◂ [ *{ {| l |}a3◂ [ r]}]a2◂ [ q4]a2◂ [ q5]}] ) 5'(= a2◂ [ q6] ) 6'(= a13◂ [ *{ a14◂ [ ]ra2◂ [ q7]a14◂ [ ]rr}] ) }
	ret
LB_6205:
;; ? 8'(= a40◂ [ ] ) ⊢ 1(<6)◂5'(= a2◂ [ *{ {| l |}a33◂ [ a18◂ [ ]{| l |}]}] )
	mov rdi,QWORD [rsp-8+8*2]
	cmp BYTE [rdi+6],1
	jnz LB_6289
	jmp LB_6290
LB_6289:
	jmp LB_6288
LB_6290:
	mov QWORD [GBG_VCT+8*0],rdi
	mov r11,QWORD [rdi+8]
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_LN rdi
;; rsp=2 , %3186~5'(= a2◂ [ *{ {| l |}a33◂ [ a18◂ [ ]{| l |}]}] ) %3179~9'(= a2◂ [ a40◂ [ ]] ) %3175~7'(= a13◂ [ *{ a14◂ [ ]ra2◂ [ q3]a14◂ [ ]rr}] ) %3174~6'(= a2◂ [ q2] ) %3172~4'(= a13◂ [ *{ a2◂ [ *{ {| l |}a3◂ [ r]}]a2◂ [ q0]a2◂ [ q1]}] ) %3171~3'(= r ) %3170~{ } %3169~2'(= a13◂ [ *{ {| a2◂ [ *{ {| l |}a3◂ [ r]}]|}{| a2◂ [ q0]|}{| a2◂ [ q1]|}r}] ) %3168~1'(= a2◂ [ *{ ra2◂ [ *{ {| l |}a3◂ [ r]}]a2◂ [ q0]a2◂ [ q1]}] ) %3167~0'(= r ) %3166~{ } 
; #348 { { } 0'(= r ) 1'(= a2◂ [ *{ ra2◂ [ *{ {| l |}a3◂ [ r]}]a2◂ [ q0]a2◂ [ q1]}] ) 2'(= a13◂ [ *{ {| a2◂ [ *{ {| l |}a3◂ [ r]}]|}{| a2◂ [ q0]|}{| a2◂ [ q1]|}r}] ) { } 3'(= r ) 4'(= a13◂ [ *{ a2◂ [ *{ {| l |}a3◂ [ r]}]a2◂ [ q0]a2◂ [ q1]}] ) 9'(= a2◂ [ a40◂ [ ]] ) 6'(= a2◂ [ q2] ) 7'(= a13◂ [ *{ a14◂ [ ]ra2◂ [ q3]a14◂ [ ]rr}] ) } ⊢|
; .dlt.ptn 5'(= a2◂ [ *{ {| l |}a33◂ [ a18◂ [ ]{| l |}]}] )
	mov rdi,r11
	C_PUSH_REGS
	mov r8,rdi
	call LB_3839
	C_POP_REGS
; .mov_ptn2 { { } 0'(= r ) 1'(= a2◂ [ *{ ra2◂ [ *{ {| l |}a3◂ [ r]}]a2◂ [ q0]a2◂ [ q1]}] ) 2'(= a13◂ [ *{ {| a2◂ [ *{ {| l |}a3◂ [ r]}]|}{| a2◂ [ q0]|}{| a2◂ [ q1]|}r}] ) { } 3'(= r ) 4'(= a13◂ [ *{ a2◂ [ *{ {| l |}a3◂ [ r]}]a2◂ [ q0]a2◂ [ q1]}] ) 9'(= a2◂ [ a40◂ [ ]] ) 6'(= a2◂ [ q2] ) 7'(= a13◂ [ *{ a14◂ [ ]ra2◂ [ q3]a14◂ [ ]rr}] ) } ⊢ { { } 0'(= r ) 1'(= a2◂ [ *{ ra2◂ [ *{ {| l |}a3◂ [ r]}]a2◂ [ q0]a2◂ [ q1]}] ) 2'(= a13◂ [ *{ {| a2◂ [ *{ {| l |}a3◂ [ r]}]|}{| a2◂ [ q0]|}{| a2◂ [ q1]|}r}] ) { } 3'(= r ) 4'(= a13◂ [ *{ a2◂ [ *{ {| l |}a3◂ [ r]}]a2◂ [ q0]a2◂ [ q1]}] ) 5'(= a2◂ [ a40◂ [ ]] ) 6'(= a2◂ [ q2] ) 7'(= a13◂ [ *{ a14◂ [ ]ra2◂ [ q3]a14◂ [ ]rr}] ) }
; .mov_ptn 9'(= a2◂ [ a40◂ [ ]] ) ⊢ 5'(= a2◂ [ a40◂ [ ]] )
	mov rax,QWORD [rsp-8+8*1]
	mov r11,rax
	call LB_5793
	add rsp,16
; .mov_ptn2 { { } 0'(= r ) 1'(= a2◂ [ *{ ra2◂ [ *{ {| l |}a3◂ [ r]}]a2◂ [ q4]a2◂ [ q5]}] ) 2'(= a13◂ [ *{ {| a2◂ [ *{ {| l |}a3◂ [ r]}]|}{| a2◂ [ q4]|}{| a2◂ [ q5]|}r}] ) { } 3'(= r ) 4'(= a13◂ [ *{ a2◂ [ *{ {| l |}a3◂ [ r]}]a2◂ [ q4]a2◂ [ q5]}] ) 5'(= a2◂ [ q6] ) 6'(= a13◂ [ *{ a14◂ [ ]ra2◂ [ q7]a14◂ [ ]rr}] ) } ⊢ { { } 0'(= r ) 1'(= a2◂ [ *{ ra2◂ [ *{ {| l |}a3◂ [ r]}]a2◂ [ q4]a2◂ [ q5]}] ) 2'(= a13◂ [ *{ {| a2◂ [ *{ {| l |}a3◂ [ r]}]|}{| a2◂ [ q4]|}{| a2◂ [ q5]|}r}] ) { } 3'(= r ) 4'(= a13◂ [ *{ a2◂ [ *{ {| l |}a3◂ [ r]}]a2◂ [ q4]a2◂ [ q5]}] ) 5'(= a2◂ [ q6] ) 6'(= a13◂ [ *{ a14◂ [ ]ra2◂ [ q7]a14◂ [ ]rr}] ) }
	ret
LB_6288:
;; ? 8'(= a40◂ [ ] ) ⊢ 2(<6)◂{ 5'(= {| l |} ) 10'(= a42◂ [ ] ) }
	mov rdi,QWORD [rsp-8+8*2]
	cmp BYTE [rdi+6],2
	jnz LB_6292
	jmp LB_6293
LB_6292:
	jmp LB_6291
LB_6293:
	mov rdi,QWORD [rsp-8+8*2]
	mov r11, QWORD [rdi+8]
	sub rsp,8
	mov rdi,QWORD [rsp-8+8*3]
	MOV_RDI QWORD [rsp-8+8*1], QWORD [rdi+16]
	MOV_RAX QWORD [GBG_VCT+8*0],QWORD [rsp-8+8*3]
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_RCD 2,rdi
;; rsp=3 , %3185~10'(= a42◂ [ ] ) %3184~5'(= {| l |} ) %3179~9'(= a2◂ [ a40◂ [ ]] ) %3175~7'(= a13◂ [ *{ a14◂ [ ]ra2◂ [ q3]a14◂ [ ]rr}] ) %3174~6'(= a2◂ [ q2] ) %3172~4'(= a13◂ [ *{ a2◂ [ *{ {| l |}a3◂ [ r]}]a2◂ [ q0]a2◂ [ q1]}] ) %3171~3'(= r ) %3170~{ } %3169~2'(= a13◂ [ *{ {| a2◂ [ *{ {| l |}a3◂ [ r]}]|}{| a2◂ [ q0]|}{| a2◂ [ q1]|}r}] ) %3168~1'(= a2◂ [ *{ ra2◂ [ *{ {| l |}a3◂ [ r]}]a2◂ [ q0]a2◂ [ q1]}] ) %3167~0'(= r ) %3166~{ } 
;; ? 10'(= a42◂ [ ] ) ⊢ 0(<3)◂{ 8'(= a17◂ [ a22◂ [ {| l |}]] ) 11'(= a3◂ [ a32◂ [ ]] ) 12'(= a26◂ [ a18◂ [ ]{| l |}] ) }
	mov rdi,QWORD [rsp-8+8*1]
	cmp BYTE [rdi+6],0
	jnz LB_6295
	jmp LB_6296
LB_6295:
	jmp LB_6294
LB_6296:
	mov rdi,QWORD [rsp-8+8*1]
	MOV_RDI QWORD [rsp-8+8*3], QWORD [rdi+8]
	sub rsp,8
	mov rdi,QWORD [rsp-8+8*2]
	MOV_RDI QWORD [rsp-8+8*1], QWORD [rdi+16]
	sub rsp,8
	mov rdi,QWORD [rsp-8+8*3]
	MOV_RDI QWORD [rsp-8+8*1], QWORD [rdi+24]
	MOV_RAX QWORD [GBG_VCT+8*0],QWORD [rsp-8+8*3]
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_RCD 3,rdi
;; rsp=5 , %3262~12'(= a26◂ [ a18◂ [ ]{| l |}] ) %3261~11'(= a3◂ [ a32◂ [ ]] ) %3260~8'(= a17◂ [ a22◂ [ {| l |}]] ) %3184~5'(= {| l |} ) %3179~9'(= a2◂ [ a40◂ [ ]] ) %3175~7'(= a13◂ [ *{ a14◂ [ ]ra2◂ [ q3]a14◂ [ ]rr}] ) %3174~6'(= a2◂ [ q2] ) %3172~4'(= a13◂ [ *{ a2◂ [ *{ {| l |}a3◂ [ r]}]a2◂ [ q0]a2◂ [ q1]}] ) %3171~3'(= r ) %3170~{ } %3169~2'(= a13◂ [ *{ {| a2◂ [ *{ {| l |}a3◂ [ r]}]|}{| a2◂ [ q0]|}{| a2◂ [ q1]|}r}] ) %3168~1'(= a2◂ [ *{ ra2◂ [ *{ {| l |}a3◂ [ r]}]a2◂ [ q0]a2◂ [ q1]}] ) %3167~0'(= r ) %3166~{ } 
; #348 { { } 0'(= r ) 1'(= a2◂ [ *{ ra2◂ [ *{ {| l |}a3◂ [ r]}]a2◂ [ q0]a2◂ [ q1]}] ) 2'(= a13◂ [ *{ {| a2◂ [ *{ {| l |}a3◂ [ r]}]|}{| a2◂ [ q0]|}{| a2◂ [ q1]|}r}] ) { } 3'(= r ) 4'(= a13◂ [ *{ a2◂ [ *{ {| l |}a3◂ [ r]}]a2◂ [ q0]a2◂ [ q1]}] ) 9'(= a2◂ [ a40◂ [ ]] ) 6'(= a2◂ [ q2] ) 7'(= a13◂ [ *{ a14◂ [ ]ra2◂ [ q3]a14◂ [ ]rr}] ) } ⊢|
; .dlt.ptn 12'(= a26◂ [ a18◂ [ ]{| l |}] )
	mov rdi,QWORD [rsp-8+8*1]
	C_PUSH_REGS
	mov r8,rdi
	call LB_797
	C_POP_REGS
; .dlt.ptn 11'(= a3◂ [ a32◂ [ ]] )
	mov rdi,QWORD [rsp-8+8*2]
	C_PUSH_REGS
	mov r8,rdi
	call LB_995
	C_POP_REGS
; .dlt.ptn 8'(= a17◂ [ a22◂ [ {| l |}]] )
	mov rdi,QWORD [rsp-8+8*5]
	C_PUSH_REGS
	mov r8,rdi
	call LB_791
	C_POP_REGS
; .dlt.ptn 5'(= {| l |} )
	mov rdi,r11
	C_PUSH_REGS
	mov r8,rdi
	mov rdi,r8
	call free_s8
	C_POP_REGS
; .mov_ptn2 { { } 0'(= r ) 1'(= a2◂ [ *{ ra2◂ [ *{ {| l |}a3◂ [ r]}]a2◂ [ q0]a2◂ [ q1]}] ) 2'(= a13◂ [ *{ {| a2◂ [ *{ {| l |}a3◂ [ r]}]|}{| a2◂ [ q0]|}{| a2◂ [ q1]|}r}] ) { } 3'(= r ) 4'(= a13◂ [ *{ a2◂ [ *{ {| l |}a3◂ [ r]}]a2◂ [ q0]a2◂ [ q1]}] ) 9'(= a2◂ [ a40◂ [ ]] ) 6'(= a2◂ [ q2] ) 7'(= a13◂ [ *{ a14◂ [ ]ra2◂ [ q3]a14◂ [ ]rr}] ) } ⊢ { { } 0'(= r ) 1'(= a2◂ [ *{ ra2◂ [ *{ {| l |}a3◂ [ r]}]a2◂ [ q0]a2◂ [ q1]}] ) 2'(= a13◂ [ *{ {| a2◂ [ *{ {| l |}a3◂ [ r]}]|}{| a2◂ [ q0]|}{| a2◂ [ q1]|}r}] ) { } 3'(= r ) 4'(= a13◂ [ *{ a2◂ [ *{ {| l |}a3◂ [ r]}]a2◂ [ q0]a2◂ [ q1]}] ) 5'(= a2◂ [ a40◂ [ ]] ) 6'(= a2◂ [ q2] ) 7'(= a13◂ [ *{ a14◂ [ ]ra2◂ [ q3]a14◂ [ ]rr}] ) }
; .mov_ptn 9'(= a2◂ [ a40◂ [ ]] ) ⊢ 5'(= a2◂ [ a40◂ [ ]] )
	mov rax,QWORD [rsp-8+8*4]
	mov r11,rax
	call LB_5793
	add rsp,40
; .mov_ptn2 { { } 0'(= r ) 1'(= a2◂ [ *{ ra2◂ [ *{ {| l |}a3◂ [ r]}]a2◂ [ q4]a2◂ [ q5]}] ) 2'(= a13◂ [ *{ {| a2◂ [ *{ {| l |}a3◂ [ r]}]|}{| a2◂ [ q4]|}{| a2◂ [ q5]|}r}] ) { } 3'(= r ) 4'(= a13◂ [ *{ a2◂ [ *{ {| l |}a3◂ [ r]}]a2◂ [ q4]a2◂ [ q5]}] ) 5'(= a2◂ [ q6] ) 6'(= a13◂ [ *{ a14◂ [ ]ra2◂ [ q7]a14◂ [ ]rr}] ) } ⊢ { { } 0'(= r ) 1'(= a2◂ [ *{ ra2◂ [ *{ {| l |}a3◂ [ r]}]a2◂ [ q4]a2◂ [ q5]}] ) 2'(= a13◂ [ *{ {| a2◂ [ *{ {| l |}a3◂ [ r]}]|}{| a2◂ [ q4]|}{| a2◂ [ q5]|}r}] ) { } 3'(= r ) 4'(= a13◂ [ *{ a2◂ [ *{ {| l |}a3◂ [ r]}]a2◂ [ q4]a2◂ [ q5]}] ) 5'(= a2◂ [ q6] ) 6'(= a13◂ [ *{ a14◂ [ ]ra2◂ [ q7]a14◂ [ ]rr}] ) }
	ret
LB_6294:
;; ? 10'(= a42◂ [ ] ) ⊢ 1(<3)◂8'(= a20◂ [ a18◂ [ ]] )
	mov rdi,QWORD [rsp-8+8*1]
	cmp BYTE [rdi+6],1
	jnz LB_6298
	jmp LB_6299
LB_6298:
	jmp LB_6297
LB_6299:
	mov QWORD [GBG_VCT+8*0],rdi
	MOV_RAX QWORD [rsp-8+8*3],QWORD [rdi+8]
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_LN rdi
;; rsp=3 , %3259~8'(= a20◂ [ a18◂ [ ]] ) %3184~5'(= {| l |} ) %3179~9'(= a2◂ [ a40◂ [ ]] ) %3175~7'(= a13◂ [ *{ a14◂ [ ]ra2◂ [ q3]a14◂ [ ]rr}] ) %3174~6'(= a2◂ [ q2] ) %3172~4'(= a13◂ [ *{ a2◂ [ *{ {| l |}a3◂ [ r]}]a2◂ [ q0]a2◂ [ q1]}] ) %3171~3'(= r ) %3170~{ } %3169~2'(= a13◂ [ *{ {| a2◂ [ *{ {| l |}a3◂ [ r]}]|}{| a2◂ [ q0]|}{| a2◂ [ q1]|}r}] ) %3168~1'(= a2◂ [ *{ ra2◂ [ *{ {| l |}a3◂ [ r]}]a2◂ [ q0]a2◂ [ q1]}] ) %3167~0'(= r ) %3166~{ } 
; #348 { { } 0'(= r ) 1'(= a2◂ [ *{ ra2◂ [ *{ {| l |}a3◂ [ r]}]a2◂ [ q0]a2◂ [ q1]}] ) 2'(= a13◂ [ *{ {| a2◂ [ *{ {| l |}a3◂ [ r]}]|}{| a2◂ [ q0]|}{| a2◂ [ q1]|}r}] ) { } 3'(= r ) 4'(= a13◂ [ *{ a2◂ [ *{ {| l |}a3◂ [ r]}]a2◂ [ q0]a2◂ [ q1]}] ) 9'(= a2◂ [ a40◂ [ ]] ) 6'(= a2◂ [ q2] ) 7'(= a13◂ [ *{ a14◂ [ ]ra2◂ [ q3]a14◂ [ ]rr}] ) } ⊢|
; .dlt.ptn 8'(= a20◂ [ a18◂ [ ]] )
	mov rdi,QWORD [rsp-8+8*3]
	C_PUSH_REGS
	mov r8,rdi
	call LB_451
	C_POP_REGS
; .dlt.ptn 5'(= {| l |} )
	mov rdi,r11
	C_PUSH_REGS
	mov r8,rdi
	mov rdi,r8
	call free_s8
	C_POP_REGS
; .mov_ptn2 { { } 0'(= r ) 1'(= a2◂ [ *{ ra2◂ [ *{ {| l |}a3◂ [ r]}]a2◂ [ q0]a2◂ [ q1]}] ) 2'(= a13◂ [ *{ {| a2◂ [ *{ {| l |}a3◂ [ r]}]|}{| a2◂ [ q0]|}{| a2◂ [ q1]|}r}] ) { } 3'(= r ) 4'(= a13◂ [ *{ a2◂ [ *{ {| l |}a3◂ [ r]}]a2◂ [ q0]a2◂ [ q1]}] ) 9'(= a2◂ [ a40◂ [ ]] ) 6'(= a2◂ [ q2] ) 7'(= a13◂ [ *{ a14◂ [ ]ra2◂ [ q3]a14◂ [ ]rr}] ) } ⊢ { { } 0'(= r ) 1'(= a2◂ [ *{ ra2◂ [ *{ {| l |}a3◂ [ r]}]a2◂ [ q0]a2◂ [ q1]}] ) 2'(= a13◂ [ *{ {| a2◂ [ *{ {| l |}a3◂ [ r]}]|}{| a2◂ [ q0]|}{| a2◂ [ q1]|}r}] ) { } 3'(= r ) 4'(= a13◂ [ *{ a2◂ [ *{ {| l |}a3◂ [ r]}]a2◂ [ q0]a2◂ [ q1]}] ) 5'(= a2◂ [ a40◂ [ ]] ) 6'(= a2◂ [ q2] ) 7'(= a13◂ [ *{ a14◂ [ ]ra2◂ [ q3]a14◂ [ ]rr}] ) }
; .mov_ptn 9'(= a2◂ [ a40◂ [ ]] ) ⊢ 5'(= a2◂ [ a40◂ [ ]] )
	mov rax,QWORD [rsp-8+8*2]
	mov r11,rax
	call LB_5793
	add rsp,24
; .mov_ptn2 { { } 0'(= r ) 1'(= a2◂ [ *{ ra2◂ [ *{ {| l |}a3◂ [ r]}]a2◂ [ q4]a2◂ [ q5]}] ) 2'(= a13◂ [ *{ {| a2◂ [ *{ {| l |}a3◂ [ r]}]|}{| a2◂ [ q4]|}{| a2◂ [ q5]|}r}] ) { } 3'(= r ) 4'(= a13◂ [ *{ a2◂ [ *{ {| l |}a3◂ [ r]}]a2◂ [ q4]a2◂ [ q5]}] ) 5'(= a2◂ [ q6] ) 6'(= a13◂ [ *{ a14◂ [ ]ra2◂ [ q7]a14◂ [ ]rr}] ) } ⊢ { { } 0'(= r ) 1'(= a2◂ [ *{ ra2◂ [ *{ {| l |}a3◂ [ r]}]a2◂ [ q4]a2◂ [ q5]}] ) 2'(= a13◂ [ *{ {| a2◂ [ *{ {| l |}a3◂ [ r]}]|}{| a2◂ [ q4]|}{| a2◂ [ q5]|}r}] ) { } 3'(= r ) 4'(= a13◂ [ *{ a2◂ [ *{ {| l |}a3◂ [ r]}]a2◂ [ q4]a2◂ [ q5]}] ) 5'(= a2◂ [ q6] ) 6'(= a13◂ [ *{ a14◂ [ ]ra2◂ [ q7]a14◂ [ ]rr}] ) }
	ret
LB_6297:
;; ?. 10'(= a42◂ [ ] ) ⊢ 2(<3)◂8'(= a26◂ [ a18◂ [ ]{| l |}] )
	mov QWORD [GBG_VCT+8*0],rdi
	MOV_RAX QWORD [rsp-8+8*3],QWORD [rdi+8]
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_LN rdi
;; rsp=3 , %3258~8'(= a26◂ [ a18◂ [ ]{| l |}] ) %3184~5'(= {| l |} ) %3179~9'(= a2◂ [ a40◂ [ ]] ) %3175~7'(= a13◂ [ *{ a14◂ [ ]ra2◂ [ q3]a14◂ [ ]rr}] ) %3174~6'(= a2◂ [ q2] ) %3172~4'(= a13◂ [ *{ a2◂ [ *{ {| l |}a3◂ [ r]}]a2◂ [ q0]a2◂ [ q1]}] ) %3171~3'(= r ) %3170~{ } %3169~2'(= a13◂ [ *{ {| a2◂ [ *{ {| l |}a3◂ [ r]}]|}{| a2◂ [ q0]|}{| a2◂ [ q1]|}r}] ) %3168~1'(= a2◂ [ *{ ra2◂ [ *{ {| l |}a3◂ [ r]}]a2◂ [ q0]a2◂ [ q1]}] ) %3167~0'(= r ) %3166~{ } 
; #348 { { } 0'(= r ) 1'(= a2◂ [ *{ ra2◂ [ *{ {| l |}a3◂ [ r]}]a2◂ [ q0]a2◂ [ q1]}] ) 2'(= a13◂ [ *{ {| a2◂ [ *{ {| l |}a3◂ [ r]}]|}{| a2◂ [ q0]|}{| a2◂ [ q1]|}r}] ) { } 3'(= r ) 4'(= a13◂ [ *{ a2◂ [ *{ {| l |}a3◂ [ r]}]a2◂ [ q0]a2◂ [ q1]}] ) 9'(= a2◂ [ a40◂ [ ]] ) 6'(= a2◂ [ q2] ) 7'(= a13◂ [ *{ a14◂ [ ]ra2◂ [ q3]a14◂ [ ]rr}] ) } ⊢|
; .dlt.ptn 8'(= a26◂ [ a18◂ [ ]{| l |}] )
	mov rdi,QWORD [rsp-8+8*3]
	C_PUSH_REGS
	mov r8,rdi
	call LB_797
	C_POP_REGS
; .dlt.ptn 5'(= {| l |} )
	mov rdi,r11
	C_PUSH_REGS
	mov r8,rdi
	mov rdi,r8
	call free_s8
	C_POP_REGS
; .mov_ptn2 { { } 0'(= r ) 1'(= a2◂ [ *{ ra2◂ [ *{ {| l |}a3◂ [ r]}]a2◂ [ q0]a2◂ [ q1]}] ) 2'(= a13◂ [ *{ {| a2◂ [ *{ {| l |}a3◂ [ r]}]|}{| a2◂ [ q0]|}{| a2◂ [ q1]|}r}] ) { } 3'(= r ) 4'(= a13◂ [ *{ a2◂ [ *{ {| l |}a3◂ [ r]}]a2◂ [ q0]a2◂ [ q1]}] ) 9'(= a2◂ [ a40◂ [ ]] ) 6'(= a2◂ [ q2] ) 7'(= a13◂ [ *{ a14◂ [ ]ra2◂ [ q3]a14◂ [ ]rr}] ) } ⊢ { { } 0'(= r ) 1'(= a2◂ [ *{ ra2◂ [ *{ {| l |}a3◂ [ r]}]a2◂ [ q0]a2◂ [ q1]}] ) 2'(= a13◂ [ *{ {| a2◂ [ *{ {| l |}a3◂ [ r]}]|}{| a2◂ [ q0]|}{| a2◂ [ q1]|}r}] ) { } 3'(= r ) 4'(= a13◂ [ *{ a2◂ [ *{ {| l |}a3◂ [ r]}]a2◂ [ q0]a2◂ [ q1]}] ) 5'(= a2◂ [ a40◂ [ ]] ) 6'(= a2◂ [ q2] ) 7'(= a13◂ [ *{ a14◂ [ ]ra2◂ [ q3]a14◂ [ ]rr}] ) }
; .mov_ptn 9'(= a2◂ [ a40◂ [ ]] ) ⊢ 5'(= a2◂ [ a40◂ [ ]] )
	mov rax,QWORD [rsp-8+8*2]
	mov r11,rax
	call LB_5793
	add rsp,24
; .mov_ptn2 { { } 0'(= r ) 1'(= a2◂ [ *{ ra2◂ [ *{ {| l |}a3◂ [ r]}]a2◂ [ q4]a2◂ [ q5]}] ) 2'(= a13◂ [ *{ {| a2◂ [ *{ {| l |}a3◂ [ r]}]|}{| a2◂ [ q4]|}{| a2◂ [ q5]|}r}] ) { } 3'(= r ) 4'(= a13◂ [ *{ a2◂ [ *{ {| l |}a3◂ [ r]}]a2◂ [ q4]a2◂ [ q5]}] ) 5'(= a2◂ [ q6] ) 6'(= a13◂ [ *{ a14◂ [ ]ra2◂ [ q7]a14◂ [ ]rr}] ) } ⊢ { { } 0'(= r ) 1'(= a2◂ [ *{ ra2◂ [ *{ {| l |}a3◂ [ r]}]a2◂ [ q4]a2◂ [ q5]}] ) 2'(= a13◂ [ *{ {| a2◂ [ *{ {| l |}a3◂ [ r]}]|}{| a2◂ [ q4]|}{| a2◂ [ q5]|}r}] ) { } 3'(= r ) 4'(= a13◂ [ *{ a2◂ [ *{ {| l |}a3◂ [ r]}]a2◂ [ q4]a2◂ [ q5]}] ) 5'(= a2◂ [ q6] ) 6'(= a13◂ [ *{ a14◂ [ ]ra2◂ [ q7]a14◂ [ ]rr}] ) }
	ret
LB_6291:
;; ? 8'(= a40◂ [ ] ) ⊢ 3(<6)◂5'(= a2◂ [ *{ {| l |}a17◂ [ a22◂ [ {| l |}]]a3◂ [ a32◂ [ ]]a26◂ [ a18◂ [ ]{| l |}]}] )
	mov rdi,QWORD [rsp-8+8*2]
	cmp BYTE [rdi+6],3
	jnz LB_6301
	jmp LB_6302
LB_6301:
	jmp LB_6300
LB_6302:
	mov QWORD [GBG_VCT+8*0],rdi
	mov r11,QWORD [rdi+8]
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_LN rdi
;; rsp=2 , %3183~5'(= a2◂ [ *{ {| l |}a17◂ [ a22◂ [ {| l |}]]a3◂ [ a32◂ [ ]]a26◂ [ a18◂ [ ]{| l |}]}] ) %3179~9'(= a2◂ [ a40◂ [ ]] ) %3175~7'(= a13◂ [ *{ a14◂ [ ]ra2◂ [ q3]a14◂ [ ]rr}] ) %3174~6'(= a2◂ [ q2] ) %3172~4'(= a13◂ [ *{ a2◂ [ *{ {| l |}a3◂ [ r]}]a2◂ [ q0]a2◂ [ q1]}] ) %3171~3'(= r ) %3170~{ } %3169~2'(= a13◂ [ *{ {| a2◂ [ *{ {| l |}a3◂ [ r]}]|}{| a2◂ [ q0]|}{| a2◂ [ q1]|}r}] ) %3168~1'(= a2◂ [ *{ ra2◂ [ *{ {| l |}a3◂ [ r]}]a2◂ [ q0]a2◂ [ q1]}] ) %3167~0'(= r ) %3166~{ } 
; #348 { { } 0'(= r ) 1'(= a2◂ [ *{ ra2◂ [ *{ {| l |}a3◂ [ r]}]a2◂ [ q0]a2◂ [ q1]}] ) 2'(= a13◂ [ *{ {| a2◂ [ *{ {| l |}a3◂ [ r]}]|}{| a2◂ [ q0]|}{| a2◂ [ q1]|}r}] ) { } 3'(= r ) 4'(= a13◂ [ *{ a2◂ [ *{ {| l |}a3◂ [ r]}]a2◂ [ q0]a2◂ [ q1]}] ) 9'(= a2◂ [ a40◂ [ ]] ) 6'(= a2◂ [ q2] ) 7'(= a13◂ [ *{ a14◂ [ ]ra2◂ [ q3]a14◂ [ ]rr}] ) } ⊢|
; .dlt.ptn 5'(= a2◂ [ *{ {| l |}a17◂ [ a22◂ [ {| l |}]]a3◂ [ a32◂ [ ]]a26◂ [ a18◂ [ ]{| l |}]}] )
	mov rdi,r11
	C_PUSH_REGS
	mov r8,rdi
	call LB_3841
	C_POP_REGS
; .mov_ptn2 { { } 0'(= r ) 1'(= a2◂ [ *{ ra2◂ [ *{ {| l |}a3◂ [ r]}]a2◂ [ q0]a2◂ [ q1]}] ) 2'(= a13◂ [ *{ {| a2◂ [ *{ {| l |}a3◂ [ r]}]|}{| a2◂ [ q0]|}{| a2◂ [ q1]|}r}] ) { } 3'(= r ) 4'(= a13◂ [ *{ a2◂ [ *{ {| l |}a3◂ [ r]}]a2◂ [ q0]a2◂ [ q1]}] ) 9'(= a2◂ [ a40◂ [ ]] ) 6'(= a2◂ [ q2] ) 7'(= a13◂ [ *{ a14◂ [ ]ra2◂ [ q3]a14◂ [ ]rr}] ) } ⊢ { { } 0'(= r ) 1'(= a2◂ [ *{ ra2◂ [ *{ {| l |}a3◂ [ r]}]a2◂ [ q0]a2◂ [ q1]}] ) 2'(= a13◂ [ *{ {| a2◂ [ *{ {| l |}a3◂ [ r]}]|}{| a2◂ [ q0]|}{| a2◂ [ q1]|}r}] ) { } 3'(= r ) 4'(= a13◂ [ *{ a2◂ [ *{ {| l |}a3◂ [ r]}]a2◂ [ q0]a2◂ [ q1]}] ) 5'(= a2◂ [ a40◂ [ ]] ) 6'(= a2◂ [ q2] ) 7'(= a13◂ [ *{ a14◂ [ ]ra2◂ [ q3]a14◂ [ ]rr}] ) }
; .mov_ptn 9'(= a2◂ [ a40◂ [ ]] ) ⊢ 5'(= a2◂ [ a40◂ [ ]] )
	mov rax,QWORD [rsp-8+8*1]
	mov r11,rax
	call LB_5793
	add rsp,16
; .mov_ptn2 { { } 0'(= r ) 1'(= a2◂ [ *{ ra2◂ [ *{ {| l |}a3◂ [ r]}]a2◂ [ q4]a2◂ [ q5]}] ) 2'(= a13◂ [ *{ {| a2◂ [ *{ {| l |}a3◂ [ r]}]|}{| a2◂ [ q4]|}{| a2◂ [ q5]|}r}] ) { } 3'(= r ) 4'(= a13◂ [ *{ a2◂ [ *{ {| l |}a3◂ [ r]}]a2◂ [ q4]a2◂ [ q5]}] ) 5'(= a2◂ [ q6] ) 6'(= a13◂ [ *{ a14◂ [ ]ra2◂ [ q7]a14◂ [ ]rr}] ) } ⊢ { { } 0'(= r ) 1'(= a2◂ [ *{ ra2◂ [ *{ {| l |}a3◂ [ r]}]a2◂ [ q4]a2◂ [ q5]}] ) 2'(= a13◂ [ *{ {| a2◂ [ *{ {| l |}a3◂ [ r]}]|}{| a2◂ [ q4]|}{| a2◂ [ q5]|}r}] ) { } 3'(= r ) 4'(= a13◂ [ *{ a2◂ [ *{ {| l |}a3◂ [ r]}]a2◂ [ q4]a2◂ [ q5]}] ) 5'(= a2◂ [ q6] ) 6'(= a13◂ [ *{ a14◂ [ ]ra2◂ [ q7]a14◂ [ ]rr}] ) }
	ret
LB_6300:
;; ? 8'(= a40◂ [ ] ) ⊢ 4(<6)◂{ 5'(= {| l |} ) 10'(= a43◂ [ ] ) }
	mov rdi,QWORD [rsp-8+8*2]
	cmp BYTE [rdi+6],4
	jnz LB_6304
	jmp LB_6305
LB_6304:
	jmp LB_6303
LB_6305:
	mov rdi,QWORD [rsp-8+8*2]
	mov r11, QWORD [rdi+8]
	sub rsp,8
	mov rdi,QWORD [rsp-8+8*3]
	MOV_RDI QWORD [rsp-8+8*1], QWORD [rdi+16]
	MOV_RAX QWORD [GBG_VCT+8*0],QWORD [rsp-8+8*3]
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_RCD 2,rdi
;; rsp=3 , %3182~10'(= a43◂ [ ] ) %3181~5'(= {| l |} ) %3179~9'(= a2◂ [ a40◂ [ ]] ) %3175~7'(= a13◂ [ *{ a14◂ [ ]ra2◂ [ q3]a14◂ [ ]rr}] ) %3174~6'(= a2◂ [ q2] ) %3172~4'(= a13◂ [ *{ a2◂ [ *{ {| l |}a3◂ [ r]}]a2◂ [ q0]a2◂ [ q1]}] ) %3171~3'(= r ) %3170~{ } %3169~2'(= a13◂ [ *{ {| a2◂ [ *{ {| l |}a3◂ [ r]}]|}{| a2◂ [ q0]|}{| a2◂ [ q1]|}r}] ) %3168~1'(= a2◂ [ *{ ra2◂ [ *{ {| l |}a3◂ [ r]}]a2◂ [ q0]a2◂ [ q1]}] ) %3167~0'(= r ) %3166~{ } 
; #348 { { } 0'(= r ) 1'(= a2◂ [ *{ ra2◂ [ *{ {| l |}a3◂ [ r]}]a2◂ [ q0]a2◂ [ q1]}] ) 2'(= a13◂ [ *{ {| a2◂ [ *{ {| l |}a3◂ [ r]}]|}{| a2◂ [ q0]|}{| a2◂ [ q1]|}r}] ) { } 3'(= r ) 4'(= a13◂ [ *{ a2◂ [ *{ {| l |}a3◂ [ r]}]a2◂ [ q0]a2◂ [ q1]}] ) 9'(= a2◂ [ a40◂ [ ]] ) 6'(= a2◂ [ q2] ) 7'(= a13◂ [ *{ a14◂ [ ]ra2◂ [ q3]a14◂ [ ]rr}] ) } ⊢|
; .dlt.ptn 10'(= a43◂ [ ] )
	mov rdi,QWORD [rsp-8+8*1]
	C_PUSH_REGS
	mov r8,rdi
	call LB_3842
	C_POP_REGS
; .dlt.ptn 5'(= {| l |} )
	mov rdi,r11
	C_PUSH_REGS
	mov r8,rdi
	mov rdi,r8
	call free_s8
	C_POP_REGS
; .mov_ptn2 { { } 0'(= r ) 1'(= a2◂ [ *{ ra2◂ [ *{ {| l |}a3◂ [ r]}]a2◂ [ q0]a2◂ [ q1]}] ) 2'(= a13◂ [ *{ {| a2◂ [ *{ {| l |}a3◂ [ r]}]|}{| a2◂ [ q0]|}{| a2◂ [ q1]|}r}] ) { } 3'(= r ) 4'(= a13◂ [ *{ a2◂ [ *{ {| l |}a3◂ [ r]}]a2◂ [ q0]a2◂ [ q1]}] ) 9'(= a2◂ [ a40◂ [ ]] ) 6'(= a2◂ [ q2] ) 7'(= a13◂ [ *{ a14◂ [ ]ra2◂ [ q3]a14◂ [ ]rr}] ) } ⊢ { { } 0'(= r ) 1'(= a2◂ [ *{ ra2◂ [ *{ {| l |}a3◂ [ r]}]a2◂ [ q0]a2◂ [ q1]}] ) 2'(= a13◂ [ *{ {| a2◂ [ *{ {| l |}a3◂ [ r]}]|}{| a2◂ [ q0]|}{| a2◂ [ q1]|}r}] ) { } 3'(= r ) 4'(= a13◂ [ *{ a2◂ [ *{ {| l |}a3◂ [ r]}]a2◂ [ q0]a2◂ [ q1]}] ) 5'(= a2◂ [ a40◂ [ ]] ) 6'(= a2◂ [ q2] ) 7'(= a13◂ [ *{ a14◂ [ ]ra2◂ [ q3]a14◂ [ ]rr}] ) }
; .mov_ptn 9'(= a2◂ [ a40◂ [ ]] ) ⊢ 5'(= a2◂ [ a40◂ [ ]] )
	mov rax,QWORD [rsp-8+8*2]
	mov r11,rax
	call LB_5793
	add rsp,24
; .mov_ptn2 { { } 0'(= r ) 1'(= a2◂ [ *{ ra2◂ [ *{ {| l |}a3◂ [ r]}]a2◂ [ q4]a2◂ [ q5]}] ) 2'(= a13◂ [ *{ {| a2◂ [ *{ {| l |}a3◂ [ r]}]|}{| a2◂ [ q4]|}{| a2◂ [ q5]|}r}] ) { } 3'(= r ) 4'(= a13◂ [ *{ a2◂ [ *{ {| l |}a3◂ [ r]}]a2◂ [ q4]a2◂ [ q5]}] ) 5'(= a2◂ [ q6] ) 6'(= a13◂ [ *{ a14◂ [ ]ra2◂ [ q7]a14◂ [ ]rr}] ) } ⊢ { { } 0'(= r ) 1'(= a2◂ [ *{ ra2◂ [ *{ {| l |}a3◂ [ r]}]a2◂ [ q4]a2◂ [ q5]}] ) 2'(= a13◂ [ *{ {| a2◂ [ *{ {| l |}a3◂ [ r]}]|}{| a2◂ [ q4]|}{| a2◂ [ q5]|}r}] ) { } 3'(= r ) 4'(= a13◂ [ *{ a2◂ [ *{ {| l |}a3◂ [ r]}]a2◂ [ q4]a2◂ [ q5]}] ) 5'(= a2◂ [ q6] ) 6'(= a13◂ [ *{ a14◂ [ ]ra2◂ [ q7]a14◂ [ ]rr}] ) }
	ret
LB_6303:
;; ?. 8'(= a40◂ [ ] ) ⊢ 5(<6)◂5'(= a2◂ [ *{ {| l |}a43◂ [ ]}] )
	mov QWORD [GBG_VCT+8*0],rdi
	mov r11,QWORD [rdi+8]
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_LN rdi
;; rsp=2 , %3180~5'(= a2◂ [ *{ {| l |}a43◂ [ ]}] ) %3179~9'(= a2◂ [ a40◂ [ ]] ) %3175~7'(= a13◂ [ *{ a14◂ [ ]ra2◂ [ q3]a14◂ [ ]rr}] ) %3174~6'(= a2◂ [ q2] ) %3172~4'(= a13◂ [ *{ a2◂ [ *{ {| l |}a3◂ [ r]}]a2◂ [ q0]a2◂ [ q1]}] ) %3171~3'(= r ) %3170~{ } %3169~2'(= a13◂ [ *{ {| a2◂ [ *{ {| l |}a3◂ [ r]}]|}{| a2◂ [ q0]|}{| a2◂ [ q1]|}r}] ) %3168~1'(= a2◂ [ *{ ra2◂ [ *{ {| l |}a3◂ [ r]}]a2◂ [ q0]a2◂ [ q1]}] ) %3167~0'(= r ) %3166~{ } 
; #348 { { } 0'(= r ) 1'(= a2◂ [ *{ ra2◂ [ *{ {| l |}a3◂ [ r]}]a2◂ [ q0]a2◂ [ q1]}] ) 2'(= a13◂ [ *{ {| a2◂ [ *{ {| l |}a3◂ [ r]}]|}{| a2◂ [ q0]|}{| a2◂ [ q1]|}r}] ) { } 3'(= r ) 4'(= a13◂ [ *{ a2◂ [ *{ {| l |}a3◂ [ r]}]a2◂ [ q0]a2◂ [ q1]}] ) 9'(= a2◂ [ a40◂ [ ]] ) 6'(= a2◂ [ q2] ) 7'(= a13◂ [ *{ a14◂ [ ]ra2◂ [ q3]a14◂ [ ]rr}] ) } ⊢|
; .dlt.ptn 5'(= a2◂ [ *{ {| l |}a43◂ [ ]}] )
	mov rdi,r11
	C_PUSH_REGS
	mov r8,rdi
	call LB_3843
	C_POP_REGS
; .mov_ptn2 { { } 0'(= r ) 1'(= a2◂ [ *{ ra2◂ [ *{ {| l |}a3◂ [ r]}]a2◂ [ q0]a2◂ [ q1]}] ) 2'(= a13◂ [ *{ {| a2◂ [ *{ {| l |}a3◂ [ r]}]|}{| a2◂ [ q0]|}{| a2◂ [ q1]|}r}] ) { } 3'(= r ) 4'(= a13◂ [ *{ a2◂ [ *{ {| l |}a3◂ [ r]}]a2◂ [ q0]a2◂ [ q1]}] ) 9'(= a2◂ [ a40◂ [ ]] ) 6'(= a2◂ [ q2] ) 7'(= a13◂ [ *{ a14◂ [ ]ra2◂ [ q3]a14◂ [ ]rr}] ) } ⊢ { { } 0'(= r ) 1'(= a2◂ [ *{ ra2◂ [ *{ {| l |}a3◂ [ r]}]a2◂ [ q0]a2◂ [ q1]}] ) 2'(= a13◂ [ *{ {| a2◂ [ *{ {| l |}a3◂ [ r]}]|}{| a2◂ [ q0]|}{| a2◂ [ q1]|}r}] ) { } 3'(= r ) 4'(= a13◂ [ *{ a2◂ [ *{ {| l |}a3◂ [ r]}]a2◂ [ q0]a2◂ [ q1]}] ) 5'(= a2◂ [ a40◂ [ ]] ) 6'(= a2◂ [ q2] ) 7'(= a13◂ [ *{ a14◂ [ ]ra2◂ [ q3]a14◂ [ ]rr}] ) }
; .mov_ptn 9'(= a2◂ [ a40◂ [ ]] ) ⊢ 5'(= a2◂ [ a40◂ [ ]] )
	mov rax,QWORD [rsp-8+8*1]
	mov r11,rax
	call LB_5793
	add rsp,16
; .mov_ptn2 { { } 0'(= r ) 1'(= a2◂ [ *{ ra2◂ [ *{ {| l |}a3◂ [ r]}]a2◂ [ q4]a2◂ [ q5]}] ) 2'(= a13◂ [ *{ {| a2◂ [ *{ {| l |}a3◂ [ r]}]|}{| a2◂ [ q4]|}{| a2◂ [ q5]|}r}] ) { } 3'(= r ) 4'(= a13◂ [ *{ a2◂ [ *{ {| l |}a3◂ [ r]}]a2◂ [ q4]a2◂ [ q5]}] ) 5'(= a2◂ [ q6] ) 6'(= a13◂ [ *{ a14◂ [ ]ra2◂ [ q7]a14◂ [ ]rr}] ) } ⊢ { { } 0'(= r ) 1'(= a2◂ [ *{ ra2◂ [ *{ {| l |}a3◂ [ r]}]a2◂ [ q4]a2◂ [ q5]}] ) 2'(= a13◂ [ *{ {| a2◂ [ *{ {| l |}a3◂ [ r]}]|}{| a2◂ [ q4]|}{| a2◂ [ q5]|}r}] ) { } 3'(= r ) 4'(= a13◂ [ *{ a2◂ [ *{ {| l |}a3◂ [ r]}]a2◂ [ q4]a2◂ [ q5]}] ) 5'(= a2◂ [ q6] ) 6'(= a13◂ [ *{ a14◂ [ ]ra2◂ [ q7]a14◂ [ ]rr}] ) }
	ret
LB_6202:
;; ?. 5'(= a2◂ [ a40◂ [ ]] ) ⊢ 1(<2)◂{ }
;; rsp=1 , %3175~7'(= a13◂ [ *{ a14◂ [ ]ra2◂ [ q3]a14◂ [ ]rr}] ) %3174~6'(= a2◂ [ q2] ) %3172~4'(= a13◂ [ *{ a2◂ [ *{ {| l |}a3◂ [ r]}]a2◂ [ q0]a2◂ [ q1]}] ) %3171~3'(= r ) %3170~{ } %3169~2'(= a13◂ [ *{ {| a2◂ [ *{ {| l |}a3◂ [ r]}]|}{| a2◂ [ q0]|}{| a2◂ [ q1]|}r}] ) %3168~1'(= a2◂ [ *{ ra2◂ [ *{ {| l |}a3◂ [ r]}]a2◂ [ q0]a2◂ [ q1]}] ) %3167~0'(= r ) %3166~{ } 
; ∎ { { } 0'(= r ) 1'(= a2◂ [ *{ ra2◂ [ *{ {| l |}a3◂ [ r]}]a2◂ [ q0]a2◂ [ q1]}] ) 2'(= a13◂ [ *{ {| a2◂ [ *{ {| l |}a3◂ [ r]}]|}{| a2◂ [ q0]|}{| a2◂ [ q1]|}r}] ) { } 3'(= r ) 4'(= a13◂ [ *{ a2◂ [ *{ {| l |}a3◂ [ r]}]a2◂ [ q0]a2◂ [ q1]}] ) 6'(= a2◂ [ q2] ) 7'(= a13◂ [ *{ a14◂ [ ]ra2◂ [ q3]a14◂ [ ]rr}] ) }
; .mov_ptn2 { { } 0'(= r ) 1'(= a2◂ [ *{ ra2◂ [ *{ {| l |}a3◂ [ r]}]a2◂ [ q0]a2◂ [ q1]}] ) 2'(= a13◂ [ *{ {| a2◂ [ *{ {| l |}a3◂ [ r]}]|}{| a2◂ [ q0]|}{| a2◂ [ q1]|}r}] ) { } 3'(= r ) 4'(= a13◂ [ *{ a2◂ [ *{ {| l |}a3◂ [ r]}]a2◂ [ q0]a2◂ [ q1]}] ) 6'(= a2◂ [ q2] ) 7'(= a13◂ [ *{ a14◂ [ ]ra2◂ [ q3]a14◂ [ ]rr}] ) } ⊢ { { } 0'(= r ) 1'(= a2◂ [ *{ ra2◂ [ *{ {| l |}a3◂ [ r]}]a2◂ [ q4]a2◂ [ q5]}] ) 2'(= a13◂ [ *{ {| a2◂ [ *{ {| l |}a3◂ [ r]}]|}{| a2◂ [ q4]|}{| a2◂ [ q5]|}r}] ) { } 3'(= r ) 4'(= a13◂ [ *{ a2◂ [ *{ {| l |}a3◂ [ r]}]a2◂ [ q4]a2◂ [ q5]}] ) 5'(= a2◂ [ q6] ) 6'(= a13◂ [ *{ a14◂ [ ]ra2◂ [ q7]a14◂ [ ]rr}] ) }
	mov QWORD [rsp-8+8*1],rcx
; .mov_ptn 7'(= a13◂ [ *{ a14◂ [ ]ra2◂ [ q3]a14◂ [ ]rr}] ) ⊢ 6'(= a13◂ [ *{ a14◂ [ ]ra2◂ [ q7]a14◂ [ ]rr}] )
	mov rax,rdx
	mov rcx,rax
; .mov_ptn 8'(= a2◂ [ q2] ) ⊢ 5'(= a2◂ [ q6] )
	mov rax,QWORD [rsp-8+8*1]
	mov r11,rax
	add rsp,8
	ret
ETR_351: ;; slv_file 0'(= a2◂ [ a40◂ [ ]] ) ⊢ { { } 0'(= r ) 1'(= a2◂ [ *{ ra2◂ [ *{ {| l |}a3◂ [ r]}]a2◂ [ q0]a2◂ [ q1]}] ) 2'(= a13◂ [ *{ {| a2◂ [ *{ {| l |}a3◂ [ r]}]|}{| a2◂ [ q0]|}{| a2◂ [ q1]|}r}] ) { } 3'(= r ) 4'(= a13◂ [ *{ a2◂ [ *{ {| l |}a3◂ [ r]}]a2◂ [ q0]a2◂ [ q1]}] ) 5'(= a2◂ [ q2] ) 6'(= a13◂ [ *{ a14◂ [ ]ra2◂ [ q3]a14◂ [ ]rr}] ) } : (_lst◂_t40→{ { } _r64 _lst◂{ _r64 _lst◂{ _s8 _opn◂_r64 } _lst◂7658'(1) _lst◂7659'(1) } _t13◂{ _arr◂_lst◂{ _s8 _opn◂_r64 } _arr◂_lst◂7658'(1) _arr◂_lst◂7659'(1) _r64 } { } _r64 _t13◂{ _lst◂{ _s8 _opn◂_r64 } _lst◂7658'(1) _lst◂7659'(1) } _lst◂7671'(1) _t13◂{ _t14 _r64 _lst◂7672'(1) _t14 _r64 _r64 } })
;; rsp=0 , %3273~0'(= a2◂ [ a40◂ [ ]] ) 
; $ %[ 0r ] ⊢ %[ 0r ]
;; rsp=0 , %3274~%[ 0r ] %3273~0'(= a2◂ [ a40◂ [ ]] ) 
; #22 { } ⊢ 1(<2)◂{ }
;; rsp=0 , %3275~1(<2)◂{ } %3274~%[ 0r ] %3273~0'(= a2◂ [ a40◂ [ ]] ) 
; #22 { } ⊢ 1(<2)◂{ }
;; rsp=0 , %3276~1(<2)◂{ } %3275~1(<2)◂{ } %3274~%[ 0r ] %3273~0'(= a2◂ [ a40◂ [ ]] ) 
; #22 { } ⊢ 1(<2)◂{ }
;; rsp=0 , %3277~1(<2)◂{ } %3276~1(<2)◂{ } %3275~1(<2)◂{ } %3274~%[ 0r ] %3273~0'(= a2◂ [ a40◂ [ ]] ) 
; #349 %[ 800r ] ⊢ { 2'(= r ) 1'(= {| a2◂ [ q0]|} ) }
	sub rsp,8
	mov QWORD [rsp+8*0],r13
; .mov_ptn2 %[ 800r ] ⊢ 0'(= r )
; .mov_ptn %[ 800r ] ⊢ 0'(= r )
	mov rax,800
	mov r13,rax
	call ETR_349
	mov r8,r13
	mov r13,QWORD [rsp-8+8*1]
	add rsp,8
; .dlt.ptn 2'(= r )
	mov rdi,r8
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
;; rsp=0 , %3279~1'(= {| a2◂ [ q0]|} ) %3277~1(<2)◂{ } %3276~1(<2)◂{ } %3275~1(<2)◂{ } %3274~%[ 0r ] %3273~0'(= a2◂ [ a40◂ [ ]] ) 
; #349 %[ 800r ] ⊢ { 3'(= r ) 2'(= {| a2◂ [ q0]|} ) }
	sub rsp,16
	mov QWORD [rsp+8*0],r13
	mov QWORD [rsp+8*1],r14
; .mov_ptn2 %[ 800r ] ⊢ 0'(= r )
; .mov_ptn %[ 800r ] ⊢ 0'(= r )
	mov rax,800
	mov r13,rax
	call ETR_349
	mov r8,r14
	mov r14,QWORD [rsp-8+8*2]
	mov r9,r13
	mov r13,QWORD [rsp-8+8*1]
	add rsp,16
; .dlt.ptn 3'(= r )
	mov rdi,r9
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
;; rsp=0 , %3281~2'(= {| a2◂ [ q0]|} ) %3279~1'(= {| a2◂ [ q0]|} ) %3277~1(<2)◂{ } %3276~1(<2)◂{ } %3275~1(<2)◂{ } %3274~%[ 0r ] %3273~0'(= a2◂ [ a40◂ [ ]] ) 
; #349 %[ 800r ] ⊢ { 4'(= r ) 3'(= {| a2◂ [ q0]|} ) }
	sub rsp,24
	mov QWORD [rsp+8*0],r13
	mov QWORD [rsp+8*1],r14
	mov QWORD [rsp+8*2],r8
; .mov_ptn2 %[ 800r ] ⊢ 0'(= r )
; .mov_ptn %[ 800r ] ⊢ 0'(= r )
	mov rax,800
	mov r13,rax
	call ETR_349
	mov r8,QWORD [rsp-8+8*3]
	mov r9,r14
	mov r14,QWORD [rsp-8+8*2]
	mov r10,r13
	mov r13,QWORD [rsp-8+8*1]
	add rsp,24
; .dlt.ptn 4'(= r )
	mov rdi,r10
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
;; rsp=0 , %3283~3'(= {| a2◂ [ q0]|} ) %3281~2'(= {| a2◂ [ q0]|} ) %3279~1'(= {| a2◂ [ q0]|} ) %3277~1(<2)◂{ } %3276~1(<2)◂{ } %3275~1(<2)◂{ } %3274~%[ 0r ] %3273~0'(= a2◂ [ a40◂ [ ]] ) 
; $ %[ 1r ] ⊢ %[ 1r ]
;; rsp=0 , %3284~%[ 1r ] %3283~3'(= {| a2◂ [ q0]|} ) %3281~2'(= {| a2◂ [ q0]|} ) %3279~1'(= {| a2◂ [ q0]|} ) %3277~1(<2)◂{ } %3276~1(<2)◂{ } %3275~1(<2)◂{ } %3274~%[ 0r ] %3273~0'(= a2◂ [ a40◂ [ ]] ) 
; $ %[ 0r ] ⊢ %[ 0r ]
;; rsp=0 , %3285~%[ 0r ] %3284~%[ 1r ] %3283~3'(= {| a2◂ [ q0]|} ) %3281~2'(= {| a2◂ [ q0]|} ) %3279~1'(= {| a2◂ [ q0]|} ) %3277~1(<2)◂{ } %3276~1(<2)◂{ } %3275~1(<2)◂{ } %3274~%[ 0r ] %3273~0'(= a2◂ [ a40◂ [ ]] ) 
; $ %[ 0r ] ⊢ %[ 0r ]
;; rsp=0 , %3286~%[ 0r ] %3285~%[ 0r ] %3284~%[ 1r ] %3283~3'(= {| a2◂ [ q0]|} ) %3281~2'(= {| a2◂ [ q0]|} ) %3279~1'(= {| a2◂ [ q0]|} ) %3277~1(<2)◂{ } %3276~1(<2)◂{ } %3275~1(<2)◂{ } %3274~%[ 0r ] %3273~0'(= a2◂ [ a40◂ [ ]] ) 
; $ %[ 0r ] ⊢ %[ 0r ]
;; rsp=0 , %3287~%[ 0r ] %3286~%[ 0r ] %3285~%[ 0r ] %3284~%[ 1r ] %3283~3'(= {| a2◂ [ q0]|} ) %3281~2'(= {| a2◂ [ q0]|} ) %3279~1'(= {| a2◂ [ q0]|} ) %3277~1(<2)◂{ } %3276~1(<2)◂{ } %3275~1(<2)◂{ } %3274~%[ 0r ] %3273~0'(= a2◂ [ a40◂ [ ]] ) 
; $ %[ 0r ] ⊢ %[ 0r ]
;; rsp=0 , %3288~%[ 0r ] %3287~%[ 0r ] %3286~%[ 0r ] %3285~%[ 0r ] %3284~%[ 1r ] %3283~3'(= {| a2◂ [ q0]|} ) %3281~2'(= {| a2◂ [ q0]|} ) %3279~1'(= {| a2◂ [ q0]|} ) %3277~1(<2)◂{ } %3276~1(<2)◂{ } %3275~1(<2)◂{ } %3274~%[ 0r ] %3273~0'(= a2◂ [ a40◂ [ ]] ) 
; $ %[ 0r ] ⊢ %[ 0r ]
;; rsp=0 , %3289~%[ 0r ] %3288~%[ 0r ] %3287~%[ 0r ] %3286~%[ 0r ] %3285~%[ 0r ] %3284~%[ 1r ] %3283~3'(= {| a2◂ [ q0]|} ) %3281~2'(= {| a2◂ [ q0]|} ) %3279~1'(= {| a2◂ [ q0]|} ) %3277~1(<2)◂{ } %3276~1(<2)◂{ } %3275~1(<2)◂{ } %3274~%[ 0r ] %3273~0'(= a2◂ [ a40◂ [ ]] ) 
; #22 { } ⊢ 1(<2)◂{ }
;; rsp=0 , %3290~1(<2)◂{ } %3289~%[ 0r ] %3288~%[ 0r ] %3287~%[ 0r ] %3286~%[ 0r ] %3285~%[ 0r ] %3284~%[ 1r ] %3283~3'(= {| a2◂ [ q0]|} ) %3281~2'(= {| a2◂ [ q0]|} ) %3279~1'(= {| a2◂ [ q0]|} ) %3277~1(<2)◂{ } %3276~1(<2)◂{ } %3275~1(<2)◂{ } %3274~%[ 0r ] %3273~0'(= a2◂ [ a40◂ [ ]] ) 
; #37 { } ⊢ 2(<4)◂{ }
;; rsp=0 , %3291~2(<4)◂{ } %3290~1(<2)◂{ } %3289~%[ 0r ] %3288~%[ 0r ] %3287~%[ 0r ] %3286~%[ 0r ] %3285~%[ 0r ] %3284~%[ 1r ] %3283~3'(= {| a2◂ [ q0]|} ) %3281~2'(= {| a2◂ [ q0]|} ) %3279~1'(= {| a2◂ [ q0]|} ) %3277~1(<2)◂{ } %3276~1(<2)◂{ } %3275~1(<2)◂{ } %3274~%[ 0r ] %3273~0'(= a2◂ [ a40◂ [ ]] ) 
; $ %[ 0r ] ⊢ %[ 0r ]
;; rsp=0 , %3292~%[ 0r ] %3291~2(<4)◂{ } %3290~1(<2)◂{ } %3289~%[ 0r ] %3288~%[ 0r ] %3287~%[ 0r ] %3286~%[ 0r ] %3285~%[ 0r ] %3284~%[ 1r ] %3283~3'(= {| a2◂ [ q0]|} ) %3281~2'(= {| a2◂ [ q0]|} ) %3279~1'(= {| a2◂ [ q0]|} ) %3277~1(<2)◂{ } %3276~1(<2)◂{ } %3275~1(<2)◂{ } %3274~%[ 0r ] %3273~0'(= a2◂ [ a40◂ [ ]] ) 
; $ %[ 0r ] ⊢ %[ 0r ]
;; rsp=0 , %3293~%[ 0r ] %3292~%[ 0r ] %3291~2(<4)◂{ } %3290~1(<2)◂{ } %3289~%[ 0r ] %3288~%[ 0r ] %3287~%[ 0r ] %3286~%[ 0r ] %3285~%[ 0r ] %3284~%[ 1r ] %3283~3'(= {| a2◂ [ q0]|} ) %3281~2'(= {| a2◂ [ q0]|} ) %3279~1'(= {| a2◂ [ q0]|} ) %3277~1(<2)◂{ } %3276~1(<2)◂{ } %3275~1(<2)◂{ } %3274~%[ 0r ] %3273~0'(= a2◂ [ a40◂ [ ]] ) 
; » _^ .. ⊢ ..
; .. //
	mov rdi,0
	add rdi,941
	push rdi 
	call mlc_s8
	pop rdi
	mov r10,rax
	lea rdi,[rax+7+rdi]
	std 
	mov QWORD [tmp],rcx 
	lea rsi,[LB_5791+941-1]
	mov rcx,941
	rep movsb
	mov rcx,QWORD [tmp] 
;; rsp=0 , %3294~4'(= {| l |} ) %3293~%[ 0r ] %3292~%[ 0r ] %3291~2(<4)◂{ } %3290~1(<2)◂{ } %3289~%[ 0r ] %3288~%[ 0r ] %3287~%[ 0r ] %3286~%[ 0r ] %3285~%[ 0r ] %3284~%[ 1r ] %3283~3'(= {| a2◂ [ q0]|} ) %3281~2'(= {| a2◂ [ q0]|} ) %3279~1'(= {| a2◂ [ q0]|} ) %3277~1(<2)◂{ } %3276~1(<2)◂{ } %3275~1(<2)◂{ } %3274~%[ 0r ] %3273~0'(= a2◂ [ a40◂ [ ]] ) 
; #40 4'(= {| l |} ) ⊢ 4'(= a14◂ [ ] )
	sub rsp,32
	mov QWORD [rsp+8*0],r13
	mov QWORD [rsp+8*1],r14
	mov QWORD [rsp+8*2],r8
	mov QWORD [rsp+8*3],r9
; .mov_ptn2 4'(= {| l |} ) ⊢ 0'(= {| l |} )
; .mov_ptn 4'(= {| l |} ) ⊢ 0'(= {| l |} )
	mov rax,r10
	mov r13,rax
	call ETR_40
	mov r9,QWORD [rsp-8+8*4]
	mov r8,QWORD [rsp-8+8*3]
	mov r14,QWORD [rsp-8+8*2]
	mov r10,r13
	mov r13,QWORD [rsp-8+8*1]
	add rsp,32
;; rsp=0 , %3295~4'(= a14◂ [ ] ) %3293~%[ 0r ] %3292~%[ 0r ] %3291~2(<4)◂{ } %3290~1(<2)◂{ } %3289~%[ 0r ] %3288~%[ 0r ] %3287~%[ 0r ] %3286~%[ 0r ] %3285~%[ 0r ] %3284~%[ 1r ] %3283~3'(= {| a2◂ [ q0]|} ) %3281~2'(= {| a2◂ [ q0]|} ) %3279~1'(= {| a2◂ [ q0]|} ) %3277~1(<2)◂{ } %3276~1(<2)◂{ } %3275~1(<2)◂{ } %3274~%[ 0r ] %3273~0'(= a2◂ [ a40◂ [ ]] ) 
; » _^ .. ⊢ ..
; .. //
	mov rdi,0
	add rdi,5433
	push rdi 
	call mlc_s8
	pop rdi
	mov r11,rax
	lea rdi,[rax+7+rdi]
	std 
	mov QWORD [tmp],rcx 
	lea rsi,[LB_5792+5433-1]
	mov rcx,5433
	rep movsb
	mov rcx,QWORD [tmp] 
;; rsp=0 , %3296~5'(= {| l |} ) %3295~4'(= a14◂ [ ] ) %3293~%[ 0r ] %3292~%[ 0r ] %3291~2(<4)◂{ } %3290~1(<2)◂{ } %3289~%[ 0r ] %3288~%[ 0r ] %3287~%[ 0r ] %3286~%[ 0r ] %3285~%[ 0r ] %3284~%[ 1r ] %3283~3'(= {| a2◂ [ q0]|} ) %3281~2'(= {| a2◂ [ q0]|} ) %3279~1'(= {| a2◂ [ q0]|} ) %3277~1(<2)◂{ } %3276~1(<2)◂{ } %3275~1(<2)◂{ } %3274~%[ 0r ] %3273~0'(= a2◂ [ a40◂ [ ]] ) 
; #42 { 2(<4)◂{ } 5'(= {| l |} ) } ⊢ 5'(= a14◂ [ ] )
	sub rsp,40
	mov QWORD [rsp+8*0],r13
	mov QWORD [rsp+8*1],r14
	mov QWORD [rsp+8*2],r8
	mov QWORD [rsp+8*3],r9
	mov QWORD [rsp+8*4],r10
; .mov_ptn2 { 2(<4)◂{ } 5'(= {| l |} ) } ⊢ { 0'(= a14◂ [ ] ) 1'(= {| l |} ) }
; .mov_ptn 5'(= {| l |} ) ⊢ 1'(= {| l |} )
	mov rax,r11
	mov r14,rax
; .mov_ptn 2(<4)◂{ } ⊢ 0'(= a14◂ [ ] )
	mov rax,unt 
	mov rax,unt_2
	mov r13,rax
	call ETR_42
	mov r10,QWORD [rsp-8+8*5]
	mov r9,QWORD [rsp-8+8*4]
	mov r8,QWORD [rsp-8+8*3]
	mov r14,QWORD [rsp-8+8*2]
	mov r11,r13
	mov r13,QWORD [rsp-8+8*1]
	add rsp,40
;; rsp=0 , %3297~5'(= a14◂ [ ] ) %3295~4'(= a14◂ [ ] ) %3293~%[ 0r ] %3292~%[ 0r ] %3290~1(<2)◂{ } %3289~%[ 0r ] %3288~%[ 0r ] %3287~%[ 0r ] %3286~%[ 0r ] %3285~%[ 0r ] %3284~%[ 1r ] %3283~3'(= {| a2◂ [ q0]|} ) %3281~2'(= {| a2◂ [ q0]|} ) %3279~1'(= {| a2◂ [ q0]|} ) %3277~1(<2)◂{ } %3276~1(<2)◂{ } %3275~1(<2)◂{ } %3274~%[ 0r ] %3273~0'(= a2◂ [ a40◂ [ ]] ) 
; $ %[ 0r ] ⊢ %[ 0r ]
;; rsp=0 , %3298~%[ 0r ] %3297~5'(= a14◂ [ ] ) %3295~4'(= a14◂ [ ] ) %3293~%[ 0r ] %3292~%[ 0r ] %3290~1(<2)◂{ } %3289~%[ 0r ] %3288~%[ 0r ] %3287~%[ 0r ] %3286~%[ 0r ] %3285~%[ 0r ] %3284~%[ 1r ] %3283~3'(= {| a2◂ [ q0]|} ) %3281~2'(= {| a2◂ [ q0]|} ) %3279~1'(= {| a2◂ [ q0]|} ) %3277~1(<2)◂{ } %3276~1(<2)◂{ } %3275~1(<2)◂{ } %3274~%[ 0r ] %3273~0'(= a2◂ [ a40◂ [ ]] ) 
; #22 { } ⊢ 1(<2)◂{ }
;; rsp=0 , %3299~1(<2)◂{ } %3298~%[ 0r ] %3297~5'(= a14◂ [ ] ) %3295~4'(= a14◂ [ ] ) %3293~%[ 0r ] %3292~%[ 0r ] %3290~1(<2)◂{ } %3289~%[ 0r ] %3288~%[ 0r ] %3287~%[ 0r ] %3286~%[ 0r ] %3285~%[ 0r ] %3284~%[ 1r ] %3283~3'(= {| a2◂ [ q0]|} ) %3281~2'(= {| a2◂ [ q0]|} ) %3279~1'(= {| a2◂ [ q0]|} ) %3277~1(<2)◂{ } %3276~1(<2)◂{ } %3275~1(<2)◂{ } %3274~%[ 0r ] %3273~0'(= a2◂ [ a40◂ [ ]] ) 
; #22 { } ⊢ 1(<2)◂{ }
;; rsp=0 , %3300~1(<2)◂{ } %3299~1(<2)◂{ } %3298~%[ 0r ] %3297~5'(= a14◂ [ ] ) %3295~4'(= a14◂ [ ] ) %3293~%[ 0r ] %3292~%[ 0r ] %3290~1(<2)◂{ } %3289~%[ 0r ] %3288~%[ 0r ] %3287~%[ 0r ] %3286~%[ 0r ] %3285~%[ 0r ] %3284~%[ 1r ] %3283~3'(= {| a2◂ [ q0]|} ) %3281~2'(= {| a2◂ [ q0]|} ) %3279~1'(= {| a2◂ [ q0]|} ) %3277~1(<2)◂{ } %3276~1(<2)◂{ } %3275~1(<2)◂{ } %3274~%[ 0r ] %3273~0'(= a2◂ [ a40◂ [ ]] ) 
; #22 { } ⊢ 1(<2)◂{ }
;; rsp=0 , %3301~1(<2)◂{ } %3300~1(<2)◂{ } %3299~1(<2)◂{ } %3298~%[ 0r ] %3297~5'(= a14◂ [ ] ) %3295~4'(= a14◂ [ ] ) %3293~%[ 0r ] %3292~%[ 0r ] %3290~1(<2)◂{ } %3289~%[ 0r ] %3288~%[ 0r ] %3287~%[ 0r ] %3286~%[ 0r ] %3285~%[ 0r ] %3284~%[ 1r ] %3283~3'(= {| a2◂ [ q0]|} ) %3281~2'(= {| a2◂ [ q0]|} ) %3279~1'(= {| a2◂ [ q0]|} ) %3277~1(<2)◂{ } %3276~1(<2)◂{ } %3275~1(<2)◂{ } %3274~%[ 0r ] %3273~0'(= a2◂ [ a40◂ [ ]] ) 
; $ %[ 0r ] ⊢ %[ 0r ]
;; rsp=0 , %3302~%[ 0r ] %3301~1(<2)◂{ } %3300~1(<2)◂{ } %3299~1(<2)◂{ } %3298~%[ 0r ] %3297~5'(= a14◂ [ ] ) %3295~4'(= a14◂ [ ] ) %3293~%[ 0r ] %3292~%[ 0r ] %3290~1(<2)◂{ } %3289~%[ 0r ] %3288~%[ 0r ] %3287~%[ 0r ] %3286~%[ 0r ] %3285~%[ 0r ] %3284~%[ 1r ] %3283~3'(= {| a2◂ [ q0]|} ) %3281~2'(= {| a2◂ [ q0]|} ) %3279~1'(= {| a2◂ [ q0]|} ) %3277~1(<2)◂{ } %3276~1(<2)◂{ } %3275~1(<2)◂{ } %3274~%[ 0r ] %3273~0'(= a2◂ [ a40◂ [ ]] ) 
; #22 { } ⊢ 1(<2)◂{ }
;; rsp=0 , %3303~1(<2)◂{ } %3302~%[ 0r ] %3301~1(<2)◂{ } %3300~1(<2)◂{ } %3299~1(<2)◂{ } %3298~%[ 0r ] %3297~5'(= a14◂ [ ] ) %3295~4'(= a14◂ [ ] ) %3293~%[ 0r ] %3292~%[ 0r ] %3290~1(<2)◂{ } %3289~%[ 0r ] %3288~%[ 0r ] %3287~%[ 0r ] %3286~%[ 0r ] %3285~%[ 0r ] %3284~%[ 1r ] %3283~3'(= {| a2◂ [ q0]|} ) %3281~2'(= {| a2◂ [ q0]|} ) %3279~1'(= {| a2◂ [ q0]|} ) %3277~1(<2)◂{ } %3276~1(<2)◂{ } %3275~1(<2)◂{ } %3274~%[ 0r ] %3273~0'(= a2◂ [ a40◂ [ ]] ) 
; #33 { 1'(= {| a2◂ [ q0]|} ) 2'(= {| a2◂ [ q0]|} ) 3'(= {| a2◂ [ q0]|} ) %[ 1r ] } ⊢ 0(<1)◂{ 1'(= {| a2◂ [ q0]|} ) 2'(= {| a2◂ [ q0]|} ) 3'(= {| a2◂ [ q0]|} ) %[ 1r ] }
;; rsp=0 , %3304~0(<1)◂{ 1'(= {| a2◂ [ q0]|} ) 2'(= {| a2◂ [ q0]|} ) 3'(= {| a2◂ [ q0]|} ) %[ 1r ] } %3303~1(<2)◂{ } %3302~%[ 0r ] %3301~1(<2)◂{ } %3300~1(<2)◂{ } %3299~1(<2)◂{ } %3298~%[ 0r ] %3297~5'(= a14◂ [ ] ) %3295~4'(= a14◂ [ ] ) %3293~%[ 0r ] %3292~%[ 0r ] %3290~1(<2)◂{ } %3289~%[ 0r ] %3288~%[ 0r ] %3287~%[ 0r ] %3286~%[ 0r ] %3285~%[ 0r ] %3277~1(<2)◂{ } %3276~1(<2)◂{ } %3275~1(<2)◂{ } %3274~%[ 0r ] %3273~0'(= a2◂ [ a40◂ [ ]] ) 
; #33 { 4'(= a14◂ [ ] ) %[ 0r ] 1(<2)◂{ } 5'(= a14◂ [ ] ) %[ 0r ] %[ 0r ] } ⊢ 0(<1)◂{ 4'(= a14◂ [ ] ) %[ 0r ] 1(<2)◂{ } 5'(= a14◂ [ ] ) %[ 0r ] %[ 0r ] }
;; rsp=0 , %3305~0(<1)◂{ 4'(= a14◂ [ ] ) %[ 0r ] 1(<2)◂{ } 5'(= a14◂ [ ] ) %[ 0r ] %[ 0r ] } %3304~0(<1)◂{ 1'(= {| a2◂ [ q0]|} ) 2'(= {| a2◂ [ q0]|} ) 3'(= {| a2◂ [ q0]|} ) %[ 1r ] } %3303~1(<2)◂{ } %3302~%[ 0r ] %3301~1(<2)◂{ } %3300~1(<2)◂{ } %3299~1(<2)◂{ } %3289~%[ 0r ] %3288~%[ 0r ] %3287~%[ 0r ] %3286~%[ 0r ] %3285~%[ 0r ] %3277~1(<2)◂{ } %3276~1(<2)◂{ } %3275~1(<2)◂{ } %3274~%[ 0r ] %3273~0'(= a2◂ [ a40◂ [ ]] ) 
; #33 { 1(<2)◂{ } 1(<2)◂{ } 1(<2)◂{ } } ⊢ 0(<1)◂{ 1(<2)◂{ } 1(<2)◂{ } 1(<2)◂{ } }
;; rsp=0 , %3306~0(<1)◂{ 1(<2)◂{ } 1(<2)◂{ } 1(<2)◂{ } } %3305~0(<1)◂{ 4'(= a14◂ [ ] ) %[ 0r ] 1(<2)◂{ } 5'(= a14◂ [ ] ) %[ 0r ] %[ 0r ] } %3304~0(<1)◂{ 1'(= {| a2◂ [ q0]|} ) 2'(= {| a2◂ [ q0]|} ) 3'(= {| a2◂ [ q0]|} ) %[ 1r ] } %3303~1(<2)◂{ } %3302~%[ 0r ] %3301~1(<2)◂{ } %3300~1(<2)◂{ } %3299~1(<2)◂{ } %3289~%[ 0r ] %3288~%[ 0r ] %3287~%[ 0r ] %3286~%[ 0r ] %3285~%[ 0r ] %3274~%[ 0r ] %3273~0'(= a2◂ [ a40◂ [ ]] ) 
; #348 { { } %[ 0r ] 1(<2)◂{ } 0(<1)◂{ 1'(= {| a2◂ [ q0]|} ) 2'(= {| a2◂ [ q0]|} ) 3'(= {| a2◂ [ q0]|} ) %[ 1r ] } { } %[ 0r ] 0(<1)◂{ 1(<2)◂{ } 1(<2)◂{ } 1(<2)◂{ } } 0'(= a2◂ [ a40◂ [ ]] ) 1(<2)◂{ } 0(<1)◂{ 4'(= a14◂ [ ] ) %[ 0r ] 1(<2)◂{ } 5'(= a14◂ [ ] ) %[ 0r ] %[ 0r ] } } ⊢|
; .dlt.ptn 1(<2)◂{ }
; .dlt.ptn %[ 0r ]
; .dlt.ptn 1(<2)◂{ }
; .dlt.ptn %[ 0r ]
; .dlt.ptn %[ 0r ]
; .dlt.ptn %[ 0r ]
; .dlt.ptn %[ 0r ]
; .mov_ptn2 { { } %[ 0r ] 1(<2)◂{ } 0(<1)◂{ 1'(= {| a2◂ [ q0]|} ) 2'(= {| a2◂ [ q0]|} ) 3'(= {| a2◂ [ q0]|} ) %[ 1r ] } { } %[ 0r ] 0(<1)◂{ 1(<2)◂{ } 1(<2)◂{ } 1(<2)◂{ } } 0'(= a2◂ [ a40◂ [ ]] ) 1(<2)◂{ } 0(<1)◂{ 4'(= a14◂ [ ] ) %[ 0r ] 1(<2)◂{ } 5'(= a14◂ [ ] ) %[ 0r ] %[ 0r ] } } ⊢ { { } 0'(= r ) 1'(= a2◂ [ *{ ra2◂ [ *{ {| l |}a3◂ [ r]}]a2◂ [ q0]a2◂ [ q1]}] ) 2'(= a13◂ [ *{ {| a2◂ [ *{ {| l |}a3◂ [ r]}]|}{| a2◂ [ q0]|}{| a2◂ [ q1]|}r}] ) { } 3'(= r ) 4'(= a13◂ [ *{ a2◂ [ *{ {| l |}a3◂ [ r]}]a2◂ [ q0]a2◂ [ q1]}] ) 5'(= a2◂ [ a40◂ [ ]] ) 6'(= a2◂ [ q2] ) 7'(= a13◂ [ *{ a14◂ [ ]ra2◂ [ q3]a14◂ [ ]rr}] ) }
; .mov_ptn 0(<1)◂{ 4'(= a14◂ [ ] ) %[ 0r ] 1(<2)◂{ } 5'(= a14◂ [ ] ) %[ 0r ] %[ 0r ] } ⊢ 7'(= a13◂ [ *{ a14◂ [ ]ra2◂ [ q3]a14◂ [ ]rr}] )
	ALC_RCD 6, rax
	mov rcx,rax
	mov rax,r10
	mov QWORD [rcx+8+8*0],rax
	mov rax,0
	mov QWORD [rcx+8+8*1],rax
	mov rax,unt 
	mov rax,unt_1
	mov QWORD [rcx+8+8*2],rax
	mov rax,r11
	mov QWORD [rcx+8+8*3],rax
	mov rax,0
	mov QWORD [rcx+8+8*4],rax
	mov rax,0
	mov QWORD [rcx+8+8*5],rax
	mov rax,rcx
	mov BYTE [rax+6],0
	mov rdx,rax
; .mov_ptn 1(<2)◂{ } ⊢ 6'(= a2◂ [ q2] )
	mov rax,unt 
	mov rax,unt_1
	mov rcx,rax
; .mov_ptn 0'(= a2◂ [ a40◂ [ ]] ) ⊢ 5'(= a2◂ [ a40◂ [ ]] )
	mov rax,r13
	mov r11,rax
; .mov_ptn 0(<1)◂{ 1(<2)◂{ } 1(<2)◂{ } 1(<2)◂{ } } ⊢ 4'(= a13◂ [ *{ a2◂ [ *{ {| l |}a3◂ [ r]}]a2◂ [ q0]a2◂ [ q1]}] )
	ALC_RCD 3, rax
	mov r13,rax
	mov rax,unt 
	mov rax,unt_1
	mov QWORD [r13+8+8*0],rax
	mov rax,unt 
	mov rax,unt_1
	mov QWORD [r13+8+8*1],rax
	mov rax,unt 
	mov rax,unt_1
	mov QWORD [r13+8+8*2],rax
	mov rax,r13
	mov BYTE [rax+6],0
	mov r10,rax
	sub rsp,8
	mov QWORD [rsp-8+8*1],r9
; .mov_ptn %[ 0r ] ⊢ 3'(= r )
	mov rax,0
	mov r9,rax
	sub rsp,8
	mov QWORD [rsp-8+8*1],r14
; .mov_ptn 1(<2)◂{ } ⊢ 1'(= a2◂ [ *{ ra2◂ [ *{ {| l |}a3◂ [ r]}]a2◂ [ q0]a2◂ [ q1]}] )
	mov rax,unt 
	mov rax,unt_1
	mov r14,rax
; .mov_ptn %[ 0r ] ⊢ 0'(= r )
	mov rax,0
	mov r13,rax
	sub rsp,8
	mov QWORD [rsp-8+8*1],r8
; .mov_ptn 0(<1)◂{ 9'(= {| a2◂ [ q0]|} ) 10'(= {| a2◂ [ q0]|} ) 8'(= {| a2◂ [ q0]|} ) %[ 1r ] } ⊢ 2'(= a13◂ [ *{ {| a2◂ [ *{ {| l |}a3◂ [ r]}]|}{| a2◂ [ q0]|}{| a2◂ [ q1]|}r}] )
	sub rsp,8
	ALC_RCD 4, rax
	mov QWORD [rsp-8+8*1],rax
	mov rax,QWORD [rsp-8+8*3]
	mov rdi,QWORD [rsp-8+8*1]
	mov QWORD [rdi+8+8*0],rax
	mov rax,QWORD [rsp-8+8*2]
	mov rdi,QWORD [rsp-8+8*1]
	mov QWORD [rdi+8+8*1],rax
	mov rax,QWORD [rsp-8+8*4]
	mov rdi,QWORD [rsp-8+8*1]
	mov QWORD [rdi+8+8*2],rax
	mov rax,1
	mov rdi,QWORD [rsp-8+8*1]
	mov QWORD [rdi+8+8*3],rax
	mov rax,QWORD [rsp-8+8*1]
	mov BYTE [rax+6],0
	mov r8,rax
	add rsp,32
	call LB_5793
; .mov_ptn2 { { } 0'(= r ) 1'(= a2◂ [ *{ ra2◂ [ *{ {| l |}a3◂ [ r]}]a2◂ [ q4]a2◂ [ q5]}] ) 2'(= a13◂ [ *{ {| a2◂ [ *{ {| l |}a3◂ [ r]}]|}{| a2◂ [ q4]|}{| a2◂ [ q5]|}r}] ) { } 3'(= r ) 4'(= a13◂ [ *{ a2◂ [ *{ {| l |}a3◂ [ r]}]a2◂ [ q4]a2◂ [ q5]}] ) 5'(= a2◂ [ q6] ) 6'(= a13◂ [ *{ a14◂ [ ]ra2◂ [ q7]a14◂ [ ]rr}] ) } ⊢ { { } 0'(= r ) 1'(= a2◂ [ *{ ra2◂ [ *{ {| l |}a3◂ [ r]}]a2◂ [ q0]a2◂ [ q1]}] ) 2'(= a13◂ [ *{ {| a2◂ [ *{ {| l |}a3◂ [ r]}]|}{| a2◂ [ q0]|}{| a2◂ [ q1]|}r}] ) { } 3'(= r ) 4'(= a13◂ [ *{ a2◂ [ *{ {| l |}a3◂ [ r]}]a2◂ [ q0]a2◂ [ q1]}] ) 5'(= a2◂ [ q2] ) 6'(= a13◂ [ *{ a14◂ [ ]ra2◂ [ q3]a14◂ [ ]rr}] ) }
	ret
LB_6309:
	movzx rax,BYTE [r8+6]
	jmp QWORD [LB_6313+8*rax]
LB_6313: dq LB_6311,LB_6312
LB_6311:
	mov rdi,LB_6315
	call emt_stg 
	mov r8,QWORD [r8+8]
	call LB_6316
	jmp LB_6314
LB_6312:
	mov rdi,LB_6317
	call emt_stg 
	mov rdi,fmt_rcd_box_l
	call emt_stg
	mov rdi,fmt_rcd_r
	call emt_stg
	jmp LB_6314
LB_6314:
	ret
LB_6316:
	movzx rax,BYTE [r8+6]
	jmp QWORD [LB_6320+8*rax]
LB_6320: dq LB_6318,LB_6319
LB_6318:
	mov rdi,LB_6322
	call emt_stg 
	mov r8,QWORD [r8+8]
	call LB_5794
	jmp LB_6321
LB_6319:
	mov rdi,LB_6323
	call emt_stg 
	mov r8,QWORD [r8+8]
	call LB_6324
	jmp LB_6321
LB_6321:
	ret
LB_6324:
	movzx rax,BYTE [r8+6]
	jmp QWORD [LB_6327+8*rax]
LB_6327: dq LB_6325,LB_6326
LB_6325:
	mov rdi,LB_6329
	call emt_stg 
	mov rdi,fmt_rcd_box_l
	call emt_stg
	push r8
	mov r8,QWORD [r8+8+8*0]
	mov rdi,fmt_rcd_box_l
	call emt_stg
	push r8
	mov r8,QWORD [r8+8+8*0]
	mov rdi,r8 
	call emt_r64 
	pop r8 
	mov rdi,fmt_spc 
	call emt_stg 
	push r8
	mov r8,QWORD [r8+8+8*1]
	mov rdi,r8 
	call emt_r64 
	pop r8 
	mov rdi,fmt_spc 
	call emt_stg 
	push r8
	mov r8,QWORD [r8+8+8*2]
	mov rdi,r8
	call emt_s8
	pop r8 
	mov rdi,fmt_spc 
	call emt_stg 
	mov rdi,fmt_rcd_r
	call emt_stg
	pop r8 
	mov rdi,fmt_spc 
	call emt_stg 
	push r8
	mov r8,QWORD [r8+8+8*1]
	call LB_6324
	pop r8 
	mov rdi,fmt_spc 
	call emt_stg 
	mov rdi,fmt_rcd_r
	call emt_stg
	jmp LB_6328
LB_6326:
	mov rdi,LB_6330
	call emt_stg 
	mov rdi,fmt_rcd_box_l
	call emt_stg
	mov rdi,fmt_rcd_r
	call emt_stg
	jmp LB_6328
LB_6328:
	ret
LB_6343:
	movzx rax,BYTE [r8+6]
	jmp QWORD [LB_6345+8*rax]
LB_6345: dq LB_6344
LB_6344:
	push r8
	mov r8,QWORD [r8+8+8*0]
	call LB_114
	pop r8 
	push r8
	mov r8,QWORD [r8+8+8*1]
	pop r8 
	push r8
	mov r8,QWORD [r8+8+8*2]
	call LB_6347
	pop r8 
	push r8
	mov r8,QWORD [r8+8+8*3]
	call LB_114
	pop r8 
	push r8
	mov r8,QWORD [r8+8+8*4]
	pop r8 
	push r8
	mov r8,QWORD [r8+8+8*5]
	pop r8 
	FREE_RCD 6, r8
	jmp LB_6346
LB_6346:
	ret
LB_6347:
	movzx rax,BYTE [r8+6]
	jmp QWORD [LB_6350+8*rax]
LB_6350: dq LB_6348,LB_6349
LB_6348:
	push r8
	mov r8,QWORD [r8+8+8*0]
	mov rdi,rt_err0 
	call emt_stg
	mov QWORD [err_n],0xffff_0002
	jmp err
	pop r8 
	push r8
	mov r8,QWORD [r8+8+8*1]
	call LB_6347
	pop r8 
	FREE_RCD 2, r8
	jmp LB_6351
LB_6349:
	jmp LB_6351
LB_6351:
	ret
LB_6342:
	movzx rax,BYTE [r8+6]
	jmp QWORD [LB_6354+8*rax]
LB_6354: dq LB_6352,LB_6353
LB_6352:
	push r8
	mov r8,QWORD [r8+8+8*0]
	mov rdi,rt_err0 
	call emt_stg
	mov QWORD [err_n],0xffff_0002
	jmp err
	pop r8 
	push r8
	mov r8,QWORD [r8+8+8*1]
	call LB_6342
	pop r8 
	FREE_RCD 2, r8
	jmp LB_6355
LB_6353:
	jmp LB_6355
LB_6355:
	ret
LB_6341:
	movzx rax,BYTE [r8+6]
	jmp QWORD [LB_6357+8*rax]
LB_6357: dq LB_6356
LB_6356:
	push r8
	mov r8,QWORD [r8+8+8*0]
	call LB_6213
	pop r8 
	push r8
	mov r8,QWORD [r8+8+8*1]
	call LB_6223
	pop r8 
	push r8
	mov r8,QWORD [r8+8+8*2]
	call LB_6228
	pop r8 
	FREE_RCD 3, r8
	jmp LB_6358
LB_6358:
	ret
LB_6340:
	movzx rax,BYTE [r8+6]
	jmp QWORD [LB_6360+8*rax]
LB_6360: dq LB_6359
LB_6359:
	push r8
	mov r8,QWORD [r8+8+8*0]
	GET_LEN rsi,r8
	mov rax,0 
LB_6362:
	cmp rsi,rax 
	jz LB_6363
	push r8 
	push rsi 
	push rax 
	mov r8,QWORD [r8+8+8*rax]
	call LB_6213
	pop rax 
	pop rsi 
	pop r8 
	add rax,1 
	jmp LB_6362
LB_6363:
	pop r8 
	push r8
	mov r8,QWORD [r8+8+8*1]
	GET_LEN rsi,r8
	mov rax,0 
LB_6364:
	cmp rsi,rax 
	jz LB_6365
	push r8 
	push rsi 
	push rax 
	mov r8,QWORD [r8+8+8*rax]
	call LB_6223
	pop rax 
	pop rsi 
	pop r8 
	add rax,1 
	jmp LB_6364
LB_6365:
	pop r8 
	push r8
	mov r8,QWORD [r8+8+8*2]
	GET_LEN rsi,r8
	mov rax,0 
LB_6366:
	cmp rsi,rax 
	jz LB_6367
	push r8 
	push rsi 
	push rax 
	mov r8,QWORD [r8+8+8*rax]
	call LB_6228
	pop rax 
	pop rsi 
	pop r8 
	add rax,1 
	jmp LB_6366
LB_6367:
	pop r8 
	push r8
	mov r8,QWORD [r8+8+8*3]
	pop r8 
	FREE_RCD 4, r8
	jmp LB_6361
LB_6361:
	ret
ETR_352: ;; E 0'(= {| l |} ) ⊢ { } : (_s8→{ })
;; rsp=0 , %3307~0'(= {| l |} ) 
; » _^ .. ⊢ ..
; .. //
	mov rdi,0
	add rdi,17
	push rdi 
	call mlc_s8
	pop rdi
	mov r14,rax
	lea rdi,[rax+7+rdi]
	std 
	mov QWORD [tmp],rcx 
	lea rsi,[LB_6306+17-1]
	mov rcx,17
	rep movsb
	mov rcx,QWORD [tmp] 
;; rsp=0 , %3308~1'(= {| l |} ) %3307~0'(= {| l |} ) 
; #10 1'(= {| l |} ) ⊢ 1'(= {| l |} )
	mov rdi,fmt_emt
	call emt_stg
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	mov rdi,r8
	call emt_s8
	C_POP_REGS
	mov rdi,fmt_nl
	call emt_stg
	jmp LB_6307
LB_6307:
;; rsp=0 , %3309~1'(= {| l |} ) %3307~0'(= {| l |} ) 
; #26 0'(= {| l |} ) ⊢ { 0'(= {| l |} ) 2'(= {| l |} ) }
	mov rdi,r13
	C_PUSH_REGS
	add rdi,8
	call in_fn
	C_POP_REGS
	mov r8,rax
; .dlt.ptn 0'(= {| l |} )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	mov rdi,r8
	call free_s8
	C_POP_REGS
;; rsp=0 , %3311~2'(= {| l |} ) %3309~1'(= {| l |} ) 
; #20 { } ⊢ { }
	call info
;; rsp=0 , %3311~2'(= {| l |} ) %3309~1'(= {| l |} ) 
; #248 { 1'(= {| l |} ) %[ 0r ] } ⊢ { 0'(= {| l |} ) 1'(= r ) 3'(= a3◂ [ a44◂ [ a2◂ [ a40◂ [ ]]]] ) }
	sub rsp,8
	mov QWORD [rsp+8*0],r8
; .mov_ptn2 { 1'(= {| l |} ) %[ 0r ] } ⊢ { 0'(= {| l |} ) 1'(= r ) }
; .mov_ptn 1'(= {| l |} ) ⊢ 0'(= {| l |} )
	mov rax,r14
	mov r13,rax
; .mov_ptn %[ 0r ] ⊢ 1'(= r )
	mov rax,0
	mov r14,rax
	call ETR_248
	mov r9,r8
	mov r8,QWORD [rsp-8+8*1]
	add rsp,8
; .dlt.ptn 0'(= {| l |} )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	mov rdi,r8
	call free_s8
	C_POP_REGS
;; rsp=0 , %3314~3'(= a3◂ [ a44◂ [ a2◂ [ a40◂ [ ]]]] ) %3313~1'(= r ) %3311~2'(= {| l |} ) 
; #10 1'(= r ) ⊢ 1'(= r )
	mov rdi,fmt_emt
	call emt_stg
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	mov rdi,r8 
	call emt_r64 
	C_POP_REGS
	mov rdi,fmt_nl
	call emt_stg
	jmp LB_6308
LB_6308:
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
;; rsp=0 , %3314~3'(= a3◂ [ a44◂ [ a2◂ [ a40◂ [ ]]]] ) %3311~2'(= {| l |} ) 
; #10 3'(= a3◂ [ a44◂ [ a2◂ [ a40◂ [ ]]]] ) ⊢ 3'(= a3◂ [ a44◂ [ a2◂ [ a40◂ [ ]]]] )
	mov rdi,fmt_emt
	call emt_stg
	mov rdi,r9
	C_PUSH_REGS
	mov r8,rdi
	call LB_6309
	C_POP_REGS
	mov rdi,fmt_nl
	call emt_stg
	jmp LB_6310
LB_6310:
;; rsp=0 , %3316~3'(= a3◂ [ a44◂ [ a2◂ [ a40◂ [ ]]]] ) %3311~2'(= {| l |} ) 
;; ? 3'(= a3◂ [ a44◂ [ a2◂ [ a40◂ [ ]]]] ) ⊢ 0(<2)◂0'(= a44◂ [ a2◂ [ a40◂ [ ]]] )
	mov rdi,r9
	cmp BYTE [rdi+6],0
	jnz LB_6332
	jmp LB_6333
LB_6332:
	jmp LB_6331
LB_6333:
	mov QWORD [GBG_VCT+8*0],rdi
	mov r13,QWORD [rdi+8]
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_LN rdi
;; rsp=0 , %3317~0'(= a44◂ [ a2◂ [ a40◂ [ ]]] ) %3311~2'(= {| l |} ) 
;; ? 0'(= a44◂ [ a2◂ [ a40◂ [ ]]] ) ⊢ 0(<2)◂1'(= a2◂ [ a40◂ [ ]] )
	mov rdi,r13
	cmp BYTE [rdi+6],0
	jnz LB_6335
	jmp LB_6336
LB_6335:
	jmp LB_6334
LB_6336:
	mov QWORD [GBG_VCT+8*0],rdi
	mov r14,QWORD [rdi+8]
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_LN rdi
;; rsp=0 , %3319~1'(= a2◂ [ a40◂ [ ]] ) %3311~2'(= {| l |} ) 
; #10 %[ "D0" ] ⊢ %[ "D0" ]
	mov rdi,fmt_emt
	call emt_stg
	mov rdi,LB_6337
	call emt_stg 
	mov rdi,fmt_nl
	call emt_stg
	jmp LB_6338
LB_6338:
; .dlt.ptn %[ "D0" ]
;; rsp=0 , %3319~1'(= a2◂ [ a40◂ [ ]] ) %3311~2'(= {| l |} ) 
; #10 1'(= a2◂ [ a40◂ [ ]] ) ⊢ 1'(= a2◂ [ a40◂ [ ]] )
	mov rdi,fmt_emt
	call emt_stg
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	call LB_5794
	C_POP_REGS
	mov rdi,fmt_nl
	call emt_stg
	jmp LB_6339
LB_6339:
;; rsp=0 , %3321~1'(= a2◂ [ a40◂ [ ]] ) %3311~2'(= {| l |} ) 
; #351 1'(= a2◂ [ a40◂ [ ]] ) ⊢ { { } 0'(= r ) 1'(= a2◂ [ *{ ra2◂ [ *{ {| l |}a3◂ [ r]}]a2◂ [ q0]a2◂ [ q1]}] ) 7'(= a13◂ [ *{ {| a2◂ [ *{ {| l |}a3◂ [ r]}]|}{| a2◂ [ q0]|}{| a2◂ [ q1]|}r}] ) { } 3'(= r ) 4'(= a13◂ [ *{ a2◂ [ *{ {| l |}a3◂ [ r]}]a2◂ [ q0]a2◂ [ q1]}] ) 5'(= a2◂ [ q2] ) 6'(= a13◂ [ *{ a14◂ [ ]ra2◂ [ q3]a14◂ [ ]rr}] ) }
	sub rsp,8
	mov QWORD [rsp+8*0],r8
; .mov_ptn2 1'(= a2◂ [ a40◂ [ ]] ) ⊢ 0'(= a2◂ [ a40◂ [ ]] )
; .mov_ptn 1'(= a2◂ [ a40◂ [ ]] ) ⊢ 0'(= a2◂ [ a40◂ [ ]] )
	mov rax,r14
	mov r13,rax
	call ETR_351
	mov rdx,r8
	mov r8,QWORD [rsp-8+8*1]
	add rsp,8
;; rsp=0 , %3322~{ { } 0'(= r ) 1'(= a2◂ [ *{ ra2◂ [ *{ {| l |}a3◂ [ r]}]a2◂ [ q0]a2◂ [ q1]}] ) 7'(= a13◂ [ *{ {| a2◂ [ *{ {| l |}a3◂ [ r]}]|}{| a2◂ [ q0]|}{| a2◂ [ q1]|}r}] ) { } 3'(= r ) 4'(= a13◂ [ *{ a2◂ [ *{ {| l |}a3◂ [ r]}]a2◂ [ q0]a2◂ [ q1]}] ) 5'(= a2◂ [ q2] ) 6'(= a13◂ [ *{ a14◂ [ ]ra2◂ [ q3]a14◂ [ ]rr}] ) } %3311~2'(= {| l |} ) 
; ∎ { }
; .dlt.ptn { { } 0'(= r ) 1'(= a2◂ [ *{ ra2◂ [ *{ {| l |}a3◂ [ r]}]a2◂ [ q0]a2◂ [ q1]}] ) 7'(= a13◂ [ *{ {| a2◂ [ *{ {| l |}a3◂ [ r]}]|}{| a2◂ [ q0]|}{| a2◂ [ q1]|}r}] ) { } 3'(= r ) 4'(= a13◂ [ *{ a2◂ [ *{ {| l |}a3◂ [ r]}]a2◂ [ q0]a2◂ [ q1]}] ) 5'(= a2◂ [ q2] ) 6'(= a13◂ [ *{ a14◂ [ ]ra2◂ [ q3]a14◂ [ ]rr}] ) }
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	call LB_6266
	C_POP_REGS
	mov rdi,rdx
	C_PUSH_REGS
	mov r8,rdi
	call LB_6340
	C_POP_REGS
	mov rdi,r9
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
	mov rdi,r10
	C_PUSH_REGS
	mov r8,rdi
	call LB_6341
	C_POP_REGS
	mov rdi,r11
	C_PUSH_REGS
	mov r8,rdi
	call LB_6342
	C_POP_REGS
	mov rdi,rcx
	C_PUSH_REGS
	mov r8,rdi
	call LB_6343
	C_POP_REGS
; .dlt.ptn 2'(= {| l |} )
	mov rdi,r8
	C_PUSH_REGS
	mov r8,rdi
	mov rdi,r8
	call free_s8
	C_POP_REGS
; .mov_ptn2 { } ⊢ { }
	ret
LB_6334:
;; ?. 0'(= a44◂ [ a2◂ [ a40◂ [ ]]] ) ⊢ 1(<2)◂1'(= a2◂ [ *{ rr{| l |}}] )
	mov QWORD [GBG_VCT+8*0],rdi
	mov r14,QWORD [rdi+8]
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_LN rdi
;; rsp=0 , %3318~1'(= a2◂ [ *{ rr{| l |}}] ) %3311~2'(= {| l |} ) 
	mov rdi,LB_6368
	call emt_stg 
	jmp err
LB_6331:
;; ?. 3'(= a3◂ [ a44◂ [ a2◂ [ a40◂ [ ]]]] ) ⊢ 1(<2)◂{ }
;; rsp=0 , %3311~2'(= {| l |} ) 
	mov rdi,LB_6369
	call emt_stg 
	jmp err
LB_6372:
	movzx rax,BYTE [r8+6]
	jmp QWORD [LB_6376+8*rax]
LB_6376: dq LB_6374,LB_6375
LB_6374:
	mov rdi,LB_6378
	call emt_stg 
	mov r8,QWORD [r8+8]
	call LB_5881
	jmp LB_6377
LB_6375:
	mov rdi,LB_6379
	call emt_stg 
	mov rdi,fmt_rcd_box_l
	call emt_stg
	mov rdi,fmt_rcd_r
	call emt_stg
	jmp LB_6377
LB_6377:
	ret
ETR_353: ;; E1 { } ⊢ { } : ({ }→{ })
;; rsp=0 , 
; » _^ .. ⊢ ..
; .. //
	mov rdi,0
	add rdi,3
	push rdi 
	call mlc_s8
	pop rdi
	mov r13,rax
	lea rdi,[rax+7+rdi]
	std 
	mov QWORD [tmp],rcx 
	lea rsi,[LB_6370+3-1]
	mov rcx,3
	rep movsb
	mov rcx,QWORD [tmp] 
;; rsp=0 , %3323~0'(= {| l |} ) 
; #210 { 0'(= {| l |} ) %[ 0r ] } ⊢ { 0'(= {| l |} ) 1'(= r ) 2'(= a3◂ [ a17◂ [ a22◂ [ {| l |}]]] ) }
; .mov_ptn2 { 0'(= {| l |} ) %[ 0r ] } ⊢ { 0'(= {| l |} ) 1'(= r ) }
; .mov_ptn %[ 0r ] ⊢ 1'(= r )
	mov rax,0
	mov r14,rax
	call ETR_210
;; rsp=0 , %3326~2'(= a3◂ [ a17◂ [ a22◂ [ {| l |}]]] ) %3325~1'(= r ) %3324~0'(= {| l |} ) 
; #10 1'(= r ) ⊢ 1'(= r )
	mov rdi,fmt_emt
	call emt_stg
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	mov rdi,r8 
	call emt_r64 
	C_POP_REGS
	mov rdi,fmt_nl
	call emt_stg
	jmp LB_6371
LB_6371:
; .dlt.ptn 1'(= r )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
;; rsp=0 , %3326~2'(= a3◂ [ a17◂ [ a22◂ [ {| l |}]]] ) %3324~0'(= {| l |} ) 
; #10 2'(= a3◂ [ a17◂ [ a22◂ [ {| l |}]]] ) ⊢ 2'(= a3◂ [ a17◂ [ a22◂ [ {| l |}]]] )
	mov rdi,fmt_emt
	call emt_stg
	mov rdi,r8
	C_PUSH_REGS
	mov r8,rdi
	call LB_6372
	C_POP_REGS
	mov rdi,fmt_nl
	call emt_stg
	jmp LB_6373
LB_6373:
;; rsp=0 , %3328~2'(= a3◂ [ a17◂ [ a22◂ [ {| l |}]]] ) %3324~0'(= {| l |} ) 
;; ? 2'(= a3◂ [ a17◂ [ a22◂ [ {| l |}]]] ) ⊢ 0(<2)◂1'(= a17◂ [ a22◂ [ {| l |}]] )
	mov rdi,r8
	cmp BYTE [rdi+6],0
	jnz LB_6381
	jmp LB_6382
LB_6381:
	jmp LB_6380
LB_6382:
	mov QWORD [GBG_VCT+8*0],rdi
	mov r14,QWORD [rdi+8]
	mov rdi,QWORD [GBG_VCT+8*0]
	FREE_LN rdi
;; rsp=0 , %3329~1'(= a17◂ [ a22◂ [ {| l |}]] ) %3324~0'(= {| l |} ) 
; #10 %[ "D0" ] ⊢ %[ "D0" ]
	mov rdi,fmt_emt
	call emt_stg
	mov rdi,LB_6383
	call emt_stg 
	mov rdi,fmt_nl
	call emt_stg
	jmp LB_6384
LB_6384:
; .dlt.ptn %[ "D0" ]
;; rsp=0 , %3329~1'(= a17◂ [ a22◂ [ {| l |}]] ) %3324~0'(= {| l |} ) 
; #104 1'(= a17◂ [ a22◂ [ {| l |}]] ) ⊢ 1'(= {| l |} )
	sub rsp,8
	mov QWORD [rsp+8*0],r13
; .mov_ptn2 1'(= a17◂ [ a22◂ [ {| l |}]] ) ⊢ 0'(= a17◂ [ a22◂ [ {| l |}]] )
; .mov_ptn 1'(= a17◂ [ a22◂ [ {| l |}]] ) ⊢ 0'(= a17◂ [ a22◂ [ {| l |}]] )
	mov rax,r14
	mov r13,rax
	call ETR_104
	mov r14,r13
	mov r13,QWORD [rsp-8+8*1]
	add rsp,8
;; rsp=0 , %3331~1'(= {| l |} ) %3324~0'(= {| l |} ) 
; #10 1'(= {| l |} ) ⊢ 1'(= {| l |} )
	mov rdi,fmt_emt
	call emt_stg
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	mov rdi,r8
	call emt_s8
	C_POP_REGS
	mov rdi,fmt_nl
	call emt_stg
	jmp LB_6385
LB_6385:
; .dlt.ptn 1'(= {| l |} )
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	mov rdi,r8
	call free_s8
	C_POP_REGS
;; rsp=0 , %3324~0'(= {| l |} ) 
; ∎ { }
; .dlt.ptn 0'(= {| l |} )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	mov rdi,r8
	call free_s8
	C_POP_REGS
; .mov_ptn2 { } ⊢ { }
	ret
LB_6380:
;; ?. 2'(= a3◂ [ a17◂ [ a22◂ [ {| l |}]]] ) ⊢ 1(<2)◂{ }
;; rsp=0 , %3324~0'(= {| l |} ) 
	mov rdi,LB_6386
	call emt_stg 
	jmp err
ETR_354: ;; f0 0'(= r ) ⊢ 0'(= a3◂ [ r] ) : (_r64→_opn◂_r64)
;; rsp=0 , %3333~0'(= r ) 
	cmp r13,97
	jl LB_6389
	jmp LB_6388
LB_6389:
	jmp LB_6387
LB_6388:
	cmp r13,122
	jg LB_6391
	jmp LB_6390
LB_6391:
	jmp LB_6387
LB_6390:
;; rsp=0 , %3333~0'(= r ) 
; #24 0'(= r ) ⊢ 0(<2)◂0'(= r )
;; rsp=0 , %3334~0(<2)◂0'(= r ) 
; ∎ 0(<2)◂0'(= r )
; .mov_ptn2 0(<2)◂0'(= r ) ⊢ 0'(= a3◂ [ r] )
	mov r14,r13
; .mov_ptn 0(<2)◂1'(= r ) ⊢ 0'(= a3◂ [ r] )
	mov rax,r14
	mov rdi,rax
	ALC_LN rax
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r13,rax
	ret
LB_6387:
;; rsp=0 , %3333~0'(= r ) 
; #25 { } ⊢ 1(<2)◂{ }
;; rsp=0 , %3335~1(<2)◂{ } %3333~0'(= r ) 
; ∎ 1(<2)◂{ }
; .dlt.ptn 0'(= r )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
; .mov_ptn2 1(<2)◂{ } ⊢ 0'(= a3◂ [ r] )
; .mov_ptn 1(<2)◂{ } ⊢ 0'(= a3◂ [ r] )
	mov rax,unt 
	mov rax,unt_1
	mov r13,rax
	ret
LB_6394:
	movzx rax,BYTE [r8+6]
	jmp QWORD [LB_6397+8*rax]
LB_6397: dq LB_6395,LB_6396
LB_6395:
	FREE_LN r8 
	mov r8,QWORD [r8+8]
	call LB_6399
	jmp LB_6398
LB_6396:
	jmp LB_6398
LB_6398:
	ret
LB_6399:
	movzx rax,BYTE [r8+6]
	jmp QWORD [LB_6402+8*rax]
LB_6402: dq LB_6400,LB_6401
LB_6400:
	FREE_LN r8 
	mov r8,QWORD [r8+8]
	call LB_3879
	jmp LB_6403
LB_6401:
	FREE_LN r8 
	mov r8,QWORD [r8+8]
	call LB_1881
	jmp LB_6403
LB_6403:
	ret
RTM_0:
;; rsp=0 , %0~0'(= {| {| l |}|} ) 
; » _^ .. ⊢ ..
; .. //
	mov rdi,0
	add rdi,17
	push rdi 
	call mlc_s8
	pop rdi
	mov r14,rax
	lea rdi,[rax+7+rdi]
	std 
	mov QWORD [tmp],rcx 
	lea rsi,[LB_6392+17-1]
	mov rcx,17
	rep movsb
	mov rcx,QWORD [tmp] 
;; rsp=0 , %3336~1'(= {| l |} ) %0~0'(= {| {| l |}|} ) 
; #10 1'(= {| l |} ) ⊢ 1'(= {| l |} )
	mov rdi,fmt_emt
	call emt_stg
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	mov rdi,r8
	call emt_s8
	C_POP_REGS
	mov rdi,fmt_nl
	call emt_stg
	jmp LB_6393
LB_6393:
;; rsp=0 , %3337~1'(= {| l |} ) %0~0'(= {| {| l |}|} ) 
; #248 { 1'(= {| l |} ) %[ 0r ] } ⊢ { 3'(= {| l |} ) 1'(= r ) 2'(= a3◂ [ a44◂ [ a2◂ [ a40◂ [ ]]]] ) }
	sub rsp,8
	mov QWORD [rsp+8*0],r13
; .mov_ptn2 { 1'(= {| l |} ) %[ 0r ] } ⊢ { 0'(= {| l |} ) 1'(= r ) }
; .mov_ptn 1'(= {| l |} ) ⊢ 0'(= {| l |} )
	mov rax,r14
	mov r13,rax
; .mov_ptn %[ 0r ] ⊢ 1'(= r )
	mov rax,0
	mov r14,rax
	call ETR_248
	mov r9,r13
	mov r13,QWORD [rsp-8+8*1]
	add rsp,8
; .dlt.ptn { 3'(= {| l |} ) 1'(= r ) 2'(= a3◂ [ a44◂ [ a2◂ [ a40◂ [ ]]]] ) }
	mov rdi,r9
	C_PUSH_REGS
	mov r8,rdi
	mov rdi,r8
	call free_s8
	C_POP_REGS
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
	mov rdi,r8
	C_PUSH_REGS
	mov r8,rdi
	call LB_6394
	C_POP_REGS
;; rsp=0 , %0~0'(= {| {| l |}|} ) 
; ∎
	jmp RTM_1
LB_6405:
	movzx rax,BYTE [r8+6]
	jmp QWORD [LB_6409+8*rax]
LB_6409: dq LB_6407,LB_6408
LB_6407:
	mov rdi,LB_6411
	call emt_stg 
	mov r8,QWORD [r8+8]
	call LB_6412
	jmp LB_6410
LB_6408:
	mov rdi,LB_6413
	call emt_stg 
	mov rdi,fmt_rcd_box_l
	call emt_stg
	mov rdi,fmt_rcd_r
	call emt_stg
	jmp LB_6410
LB_6410:
	ret
LB_6412:
	movzx rax,BYTE [r8+6]
	jmp QWORD [LB_6416+8*rax]
LB_6416: dq LB_6414,LB_6415
LB_6414:
	mov rdi,LB_6418
	call emt_stg 
	mov r8,QWORD [r8+8]
	call LB_5883
	jmp LB_6417
LB_6415:
	mov rdi,LB_6419
	call emt_stg 
	mov r8,QWORD [r8+8]
	call LB_6324
	jmp LB_6417
LB_6417:
	ret
LB_6420:
	movzx rax,BYTE [r8+6]
	jmp QWORD [LB_6423+8*rax]
LB_6423: dq LB_6421,LB_6422
LB_6421:
	FREE_LN r8 
	mov r8,QWORD [r8+8]
	call LB_6425
	jmp LB_6424
LB_6422:
	jmp LB_6424
LB_6424:
	ret
LB_6425:
	movzx rax,BYTE [r8+6]
	jmp QWORD [LB_6428+8*rax]
LB_6428: dq LB_6426,LB_6427
LB_6426:
	FREE_LN r8 
	mov r8,QWORD [r8+8]
	call LB_797
	jmp LB_6429
LB_6427:
	FREE_LN r8 
	mov r8,QWORD [r8+8]
	call LB_1881
	jmp LB_6429
LB_6429:
	ret
RTM_1:
;; rsp=0 , %0~0'(= {| {| l |}|} ) 
; #22 { } ⊢ 1(<2)◂{ }
;; rsp=0 , %3339~1(<2)◂{ } %0~0'(= {| {| l |}|} ) 
; #351 1(<2)◂{ } ⊢ { { } 7'(= r ) 1'(= a2◂ [ *{ ra2◂ [ *{ {| l |}a3◂ [ r]}]a2◂ [ q0]a2◂ [ q1]}] ) 2'(= a13◂ [ *{ {| a2◂ [ *{ {| l |}a3◂ [ r]}]|}{| a2◂ [ q0]|}{| a2◂ [ q1]|}r}] ) { } 3'(= r ) 4'(= a13◂ [ *{ a2◂ [ *{ {| l |}a3◂ [ r]}]a2◂ [ q0]a2◂ [ q1]}] ) 5'(= a2◂ [ q2] ) 6'(= a13◂ [ *{ a14◂ [ ]ra2◂ [ q3]a14◂ [ ]rr}] ) }
	sub rsp,8
	mov QWORD [rsp+8*0],r13
; .mov_ptn2 1(<2)◂{ } ⊢ 0'(= a2◂ [ a40◂ [ ]] )
; .mov_ptn 1(<2)◂{ } ⊢ 0'(= a2◂ [ a40◂ [ ]] )
	mov rax,unt 
	mov rax,unt_1
	mov r13,rax
	call ETR_351
	mov rdx,r13
	mov r13,QWORD [rsp-8+8*1]
	add rsp,8
; .dlt.ptn { { } 7'(= r ) 1'(= a2◂ [ *{ ra2◂ [ *{ {| l |}a3◂ [ r]}]a2◂ [ q0]a2◂ [ q1]}] ) 2'(= a13◂ [ *{ {| a2◂ [ *{ {| l |}a3◂ [ r]}]|}{| a2◂ [ q0]|}{| a2◂ [ q1]|}r}] ) { } 3'(= r ) 4'(= a13◂ [ *{ a2◂ [ *{ {| l |}a3◂ [ r]}]a2◂ [ q0]a2◂ [ q1]}] ) 5'(= a2◂ [ q2] ) 6'(= a13◂ [ *{ a14◂ [ ]ra2◂ [ q3]a14◂ [ ]rr}] ) }
	mov rdi,rdx
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	call LB_6266
	C_POP_REGS
	mov rdi,r8
	C_PUSH_REGS
	mov r8,rdi
	call LB_6340
	C_POP_REGS
	mov rdi,r9
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
	mov rdi,r10
	C_PUSH_REGS
	mov r8,rdi
	call LB_6341
	C_POP_REGS
	mov rdi,r11
	C_PUSH_REGS
	mov r8,rdi
	call LB_6342
	C_POP_REGS
	mov rdi,rcx
	C_PUSH_REGS
	mov r8,rdi
	call LB_6343
	C_POP_REGS
;; rsp=0 , %0~0'(= {| {| l |}|} ) 
; » _^ .. ⊢ ..
; .. //
	mov rdi,0
	add rdi,8
	push rdi 
	call mlc_s8
	pop rdi
	mov r14,rax
	lea rdi,[rax+7+rdi]
	std 
	mov QWORD [tmp],rcx 
	lea rsi,[LB_6404+8-1]
	mov rcx,8
	rep movsb
	mov rcx,QWORD [tmp] 
;; rsp=0 , %3341~1'(= {| l |} ) %0~0'(= {| {| l |}|} ) 
; #239 { 1'(= {| l |} ) %[ 0r ] } ⊢ { 3'(= {| l |} ) 1'(= r ) 2'(= a3◂ [ a44◂ [ a26◂ [ a18◂ [ ]{| l |}]]] ) }
	sub rsp,8
	mov QWORD [rsp+8*0],r13
; .mov_ptn2 { 1'(= {| l |} ) %[ 0r ] } ⊢ { 0'(= {| l |} ) 1'(= r ) }
; .mov_ptn 1'(= {| l |} ) ⊢ 0'(= {| l |} )
	mov rax,r14
	mov r13,rax
; .mov_ptn %[ 0r ] ⊢ 1'(= r )
	mov rax,0
	mov r14,rax
	call ETR_239
	mov r9,r13
	mov r13,QWORD [rsp-8+8*1]
	add rsp,8
;; rsp=0 , %3344~2'(= a3◂ [ a44◂ [ a26◂ [ a18◂ [ ]{| l |}]]] ) %3343~1'(= r ) %3342~3'(= {| l |} ) %0~0'(= {| {| l |}|} ) 
; #10 { 3'(= {| l |} ) 1'(= r ) 2'(= a3◂ [ a44◂ [ a26◂ [ a18◂ [ ]{| l |}]]] ) } ⊢ { 3'(= {| l |} ) 1'(= r ) 2'(= a3◂ [ a44◂ [ a26◂ [ a18◂ [ ]{| l |}]]] ) }
	mov rdi,fmt_emt
	call emt_stg
	mov rdi,fmt_rcd_l 
	call emt_stg 
	mov rdi,r9
	C_PUSH_REGS
	mov r8,rdi
	mov rdi,r8
	call emt_s8
	C_POP_REGS
	mov rdi,fmt_spc 
	call emt_stg 
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	mov rdi,r8 
	call emt_r64 
	C_POP_REGS
	mov rdi,fmt_spc 
	call emt_stg 
	mov rdi,r8
	C_PUSH_REGS
	mov r8,rdi
	call LB_6405
	C_POP_REGS
	mov rdi,fmt_spc 
	call emt_stg 
	mov rdi,fmt_rcd_r 
	call emt_stg 
	mov rdi,fmt_nl
	call emt_stg
	jmp LB_6406
LB_6406:
; .dlt.ptn { 3'(= {| l |} ) 1'(= r ) 2'(= a3◂ [ a44◂ [ a26◂ [ a18◂ [ ]{| l |}]]] ) }
	mov rdi,r9
	C_PUSH_REGS
	mov r8,rdi
	mov rdi,r8
	call free_s8
	C_POP_REGS
	mov rdi,r14
	C_PUSH_REGS
	mov r8,rdi
	C_POP_REGS
	mov rdi,r8
	C_PUSH_REGS
	mov r8,rdi
	call LB_6420
	C_POP_REGS
;; rsp=0 , %0~0'(= {| {| l |}|} ) 
; #10 0'(= {| {| l |}|} ) ⊢ 0'(= {| {| l |}|} )
	mov rdi,fmt_emt
	call emt_stg
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	mov rdi,fmt_arr_l 
	call emt_stg 
	mov rsi,[r8]
	mov rax,0 
LB_6430:
	cmp rsi,rax 
	jz LB_6431
	push r8 
	push rsi 
	push rax 
	mov r8,QWORD [r8+8+8*rax]
	mov rdi,r8
	call emt_s8
	mov rdi,fmt_spc 
	call emt_stg 
	pop rax 
	pop rsi 
	pop r8 
	add rax,1 
	jmp LB_6430
LB_6431:
	mov rdi,fmt_arr_r 
	call emt_stg
	C_POP_REGS
	mov rdi,fmt_nl
	call emt_stg
	jmp LB_6432
LB_6432:
;; rsp=0 , %3346~0'(= {| {| l |}|} ) 
; #4 { 0'(= {| {| l |}|} ) %[ 1r ] } ⊢ { 0'(= {| {| l |}|} ) %[ 1r ] 2'(= {| l |} ) }
	mov rax,1
	mov rdi,r13
	mov rsi,0x0000_ffff_ffff_ffff 
	and rsi,QWORD [rdi]
	cmp rax,rsi 
	jge err 
	mov rdi,[rdi+8+8*rax]
	C_PUSH_REGS
	mov r8,rdi
	C_PUSH_REGS
	mov rdi,r8  
	call rpc_s8  
	C_POP_REGS
	C_POP_REGS
	mov r14,rax
; .mov_ptn2 1'(= {| l |} ) ⊢ 2'(= {| l |} )
	mov r9,r8
; .mov_ptn 1'(= {| l |} ) ⊢ 2'(= {| l |} )
	mov rax,r14
	mov r8,rax
; .dlt.ptn %[ 1r ]
; .dlt.ptn 0'(= {| {| l |}|} )
	mov rdi,r13
	C_PUSH_REGS
	mov r8,rdi
	GET_LEN rsi,r8
	mov rax,0 
LB_6433:
	cmp rsi,rax 
	jz LB_6434
	push r8 
	push rsi 
	push rax 
	mov r8,QWORD [r8+8+8*rax]
	mov rdi,r8
	call free_s8
	pop rax 
	pop rsi 
	pop r8 
	add rax,1 
	jmp LB_6433
LB_6434:
	C_POP_REGS
;; rsp=0 , %3349~2'(= {| l |} ) 
; #352 2'(= {| l |} ) ⊢ { }
; .mov_ptn2 2'(= {| l |} ) ⊢ 0'(= {| l |} )
; .mov_ptn 2'(= {| l |} ) ⊢ 0'(= {| l |} )
	mov rax,r8
	mov r13,rax
	call ETR_352
; .dlt.ptn { }
;; rsp=0 , 
; ∎
	jmp RTM_2
RTM_2:
	mov rdi,0
	mov QWORD rdi,rsp
	and rsp,~0xf
	push rdi
	call exit
	pop rdi
	mov rsp,rdi

err: 
	mov rdi,fmt_err_line
	mov rsi,QWORD [err_n]
	xor rax,rax
	C_CALL printf
	mov rax,1
	mov rbx,0
	int 0x80
