bits 64 
%define SS_MAX 2000
%define SS_NULL 0xffff_ffff_ffff_0000
extern exit 
extern printf 
extern sprintf
extern malloc 
extern calloc
extern free 
extern isspace 
extern strtoul
extern strlen
section .bss 
	tmp: resq 64
	ret_vct: resq 64
 rsp_tmp: resq 1

; SS segments 
	SS_TOP: resq 1
	SS_VCT: resq 16*SS_MAX
	SS_BTM: resq 1 

	SS_LN_TOP: resq 1
	SS_LN_VCT: resq 2*SS_MAX
	SS_LN_BTM: resq 1  

	SS_PT_TOP: resq 1
	SS_PT_VCT: resq 3*SS_MAX
	SS_PT_BTM: resq 1 

stat: resb 144
struc STAT
	.st_dev         resq 1
	.st_ino         resq 1
	.st_mode        resd 1
	.st_nlink       resd 1
	.st_uid         resd 1
	.st_gid         resd 1
	.st_rdev        resq 1
	.pad1           resq 1
	.st_size        resq 1
	.st_blksize     resd 1
	.pad2 resd 1
	.st_blocks      resq 1
	.st_atime       resq 1
	.st_atime_nsec  resq 1
	.st_mtime       resq 1
	.st_mtime_nsec  resq 1
	.st_ctime       resq 1
	.st_ctime_nsec  resq 1
	.__unused4  resd 1
	.__unused5  resd 1
endstruc

SS_RCD_1_TOP: resq 1

SS_RCD_1_VCT: resq 2*SS_MAX

SS_RCD_1_BTM: resq 1


SS_RCD_2_TOP: resq 1

SS_RCD_2_VCT: resq 3*SS_MAX

SS_RCD_2_BTM: resq 1


SS_RCD_3_TOP: resq 1

SS_RCD_3_VCT: resq 4*SS_MAX

SS_RCD_3_BTM: resq 1


SS_RCD_4_TOP: resq 1

SS_RCD_4_VCT: resq 5*SS_MAX

SS_RCD_4_BTM: resq 1


SS_RCD_5_TOP: resq 1

SS_RCD_5_VCT: resq 6*SS_MAX

SS_RCD_5_BTM: resq 1


SS_RCD_6_TOP: resq 1

SS_RCD_6_VCT: resq 7*SS_MAX

SS_RCD_6_BTM: resq 1


SS_RCD_7_TOP: resq 1

SS_RCD_7_VCT: resq 8*SS_MAX

SS_RCD_7_BTM: resq 1


SS_RCD_8_TOP: resq 1

SS_RCD_8_VCT: resq 9*SS_MAX

SS_RCD_8_BTM: resq 1


SS_RCD_9_TOP: resq 1

SS_RCD_9_VCT: resq 10*SS_MAX

SS_RCD_9_BTM: resq 1


SS_RCD_10_TOP: resq 1

SS_RCD_10_VCT: resq 11*SS_MAX

SS_RCD_10_BTM: resq 1


SS_RCD_11_TOP: resq 1

SS_RCD_11_VCT: resq 12*SS_MAX

SS_RCD_11_BTM: resq 1


SS_RCD_12_TOP: resq 1

SS_RCD_12_VCT: resq 13*SS_MAX

SS_RCD_12_BTM: resq 1


SS_RCD_13_TOP: resq 1

SS_RCD_13_VCT: resq 14*SS_MAX

SS_RCD_13_BTM: resq 1


SS_RCD_14_TOP: resq 1

SS_RCD_14_VCT: resq 15*SS_MAX

SS_RCD_14_BTM: resq 1


SS_RCD_15_TOP: resq 1

SS_RCD_15_VCT: resq 16*SS_MAX

SS_RCD_15_BTM: resq 1

section .data
	err_n: dq 0
	fmt_err_line: db "err:%x",10,0
	fmt_r64: db "%dr",0
	fmt_s8: db 34,"%s",34,0
	fmt_d: db "%d",0
	fmt_x: db "%x",0
	fmt_arr_l: db "{| ",0
	fmt_arr_r: db "|}",0
	rt_err0: db "rt_err 0:",10,0 
	unt: dq 0x0

	unt_0: dq 0x0 
	unt_1: dq 0x00_01_0000_0000_0000 
	unt_2: dq 0x00_02_0000_0000_0000 
	unt_3: dq 0x00_03_0000_0000_0000 
	unt_4: dq 0x00_04_0000_0000_0000 
	unt_5: dq 0x00_05_0000_0000_0000 
	unt_6: dq 0x00_06_0000_0000_0000 
	unt_7: dq 0x00_07_0000_0000_0000 
	unt_8: dq 0x00_08_0000_0000_0000 

section .text
global _start
rpc_s8: ; rdi ⊢ rax
	mov rsi,0x0000_ffff_ffff_ffff
	and rsi,QWORD [rdi]  
	push rdi 
	push rsi 
	and rsi,~111b
	lea rdi,[rsi+16]
	mov rsi,1 
	xor rax,rax 
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call calloc 
	mov rsp,QWORD [rsp_tmp]
	pop rcx 
	mov QWORD [rax],rcx
	pop rsi 
	add rsi,8
	lea rdi,[rax+8]
	cld 
	rep movsb
	ret
     
esc_s8: ; rdi ⊢ rax 
	mov rsi,0x0000_ffff_ffff_ffff
	and rsi,QWORD [rdi] 
	mov rax,rsi 
	shl rax,1 
	sub rsp,rax 
esc_s8_lp0: 

arr_of_lst: 
	mov rsi,0 
arr_of_lst_r:
	movzx rax,BYTE [rdi+6]
	cmp rax,1
	jz arr_of_lst_end 
	push QWORD [rdi+8] 
	mov rdi,QWORD [rdi+16]
	add rsi,1 
	call arr_of_lst_r
	sub rsi,1 
	pop QWORD [rax+8+8*rsi]
	ret 
arr_of_lst_end: 
	push rsi 
	xor rax,rax
	mov rdi,8
	add rsi,1 
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call calloc
	mov rsp,QWORD [rsp_tmp]
	pop rsi 
	mov QWORD [rax],rsi
	ret 

scf_d: ; rdi=src ⊢ rax=flg rdi=dst rsi=n
	push rdi
	movzx rdi,BYTE [rdi]
	mov QWORD [rsp_tmp],rsp
	and rsp,~0xf
	call isspace
	mov rsp,QWORD [rsp_tmp]
	cmp rax,0
	jnz scf_d_err0 
	jmp scf_d_scf 
scf_d_err0: 
	add rsp,8
	mov rax,0
	ret
	scf_d_scf:
	mov rdi,QWORD [rsp]
	sub rsp,8
	mov rsi,rsp
	mov rdx,10
	mov rax,0
	mov QWORD [rsp_tmp],rsp
	and rsp,~0xf
	call strtoul
	mov rsp,QWORD [rsp_tmp]
	pop rsi
	pop rdi
	sub rsi,rdi
	jz scf_d_err1
 mov rdi,rax
	mov rax,1 
	ret
scf_d_err1:
	mov rax,0 
	ret

scf_x: ; rdi=src ⊢ rax=flg rdi=dst rsi=n
	push rdi
	movzx rdi,BYTE [rdi]
	mov QWORD [rsp_tmp],rsp
	and rsp,~0xf
	call isspace
	mov rsp,QWORD [rsp_tmp]
	cmp rax,0
	jnz scf_x_err0 
	jmp scf_x_scf 
scf_x_err0: 
	add rsp,8
	mov rax,0
	ret
	scf_x_scf:
	mov rdi,QWORD [rsp]
	sub rsp,8
	mov rsi,rsp
	mov rdx,16
	mov rax,0
	mov QWORD [rsp_tmp],rsp
	and rsp,~0xf
	call strtoul
	mov rsp,QWORD [rsp_tmp]
	pop rsi
	pop rdi
	sub rsi,rdi
	jz scf_x_err1
 mov rdi,rax
	mov rax,1 
	ret
scf_x_err1:
	mov rax,0 
	ret

mlc_s8: ; rdi=len  
	push rdi 
	and rdi,~111b
	lea rdi,[rdi+16] 
	mov rsi,1 
	xor rax,rax 
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call calloc 
	mov rsp,QWORD [rsp_tmp]
	pop QWORD [rax] 
	ret

s8_of_c_stg: 
	push rdi
	mov QWORD [rsp_tmp],rsp
	and rsp,~0xf
	xor rax,rax
	call strlen
	mov rsp,QWORD [rsp_tmp]
	push rax
	mov rdi,rax
	call mlc_s8
	pop rcx
	pop rsi
	mov rdi,rax
	add rdi,8
	cld
	rep movsb
	ret

in_fn: 
	mov rax,2
	mov rsi,2
	syscall
	push rax ; [rsp]=fd
	mov rdi,rax
	mov rax,5
	mov rsi,stat
	syscall
	mov rdi,[stat + STAT.st_size]
	call mlc_s8
	mov rdi,QWORD [rsp]
	push rax ; [rsp]=buf
	mov rsi,rax
	add rsi,8
	mov rax,0
	mov rdx,[stat+STAT.st_size]
	syscall
	mov rax,3
	mov rdi,QWORD [rsp+8]
	syscall
	mov rax,QWORD [rsp]	
	add rsp,16
	ret 

out_fn: ; rdi=fn,rsi=src
	push rsi 
	mov rax,2
	mov rsi,0x42
	syscall
	pop rsi 
	push rax
	mov rdi,rax
	mov rdx,QWORD [rsi]
	mov rax,0x0000_ffff_ffff_ffff
	and rdx,rax
	add rsi,8
	mov rax,1
	syscall
	pop rdi
	mov rax,3
	syscall
	ret
_start:
SS_init:
	mov QWORD [SS_TOP],SS_VCT
	mov rdi,0 
	mov rax,SS_VCT 
SS_lp: 
	cmp rdi,SS_MAX 
	jz SS_end 
	add rdi,1 
	lea rsi,[rax+8*16] 
	mov QWORD [rax],rsi 
	mov rax,rsi 
	jmp SS_lp 
SS_end:
	mov rsi,SS_NULL 
	mov [rax],rsi

SS_LN_init:
	mov QWORD [SS_LN_TOP],SS_LN_VCT
	mov rdi,0 
	mov rax,SS_LN_VCT 
SS_LN_lp: 
	cmp rdi,SS_MAX 
	jz SS_LN_end 
	add rdi,1 
	lea rsi,[rax+8*2] 
	mov QWORD [rax],rsi 
	mov rax,rsi 
	jmp SS_LN_lp 
SS_LN_end:
	mov rsi,0xffff_ffff_ffff_0100 
	mov [rax],rsi

SS_PT_init:
	mov QWORD [SS_PT_TOP],SS_PT_VCT
	mov rdi,0 
	mov rax,SS_PT_VCT 
SS_PT_lp: 
	cmp rdi,SS_MAX 
	jz SS_PT_end 
	add rdi,1 
	lea rsi,[rax+8*3] 
	mov QWORD [rax],rsi 
	mov rax,rsi 
	jmp SS_PT_lp 
SS_PT_end:
	mov rsi,0xffff_ffff_ffff_0200 
	mov [rax],rsi

; _args 
	mov rdi,QWORD [rsp]
 lea rdi,[rdi+1]
	mov rsi,8 
	mov QWORD [rsp_tmp],rsp
	and rsp,~0xf 
	xor rax,rax 
	call calloc 
	mov rsp,QWORD [rsp_tmp]
	pop r13
	mov QWORD [rax],r13
	xor r14,r14
	mov r15,rax
args_lp:
	cmp r14,r13
	jz args_lp_end
	pop rdi
	call s8_of_c_stg 
	mov QWORD [r15+8+8*r14],rax
	add r14,1 
	jmp args_lp 
args_lp_end:
	mov r13,r15
	

init_ss_rcd_1:
	mov QWORD [SS_RCD_1_TOP],SS_RCD_1_VCT
	mov rdi,0 
	mov rax,SS_RCD_1_VCT
ss_lp_rcd_1:
	cmp rdi,SS_MAX
	jz ss_end_rcd_1
	add rdi,1 
	lea rsi,[rax+8*2]
	mov QWORD [rax],rsi 
	mov rax,rsi 
	jmp ss_lp_rcd_1
ss_end_rcd_1:
	mov rsi,-65535
	mov [rax],rsi 

init_ss_rcd_2:
	mov QWORD [SS_RCD_2_TOP],SS_RCD_2_VCT
	mov rdi,0 
	mov rax,SS_RCD_2_VCT
ss_lp_rcd_2:
	cmp rdi,SS_MAX
	jz ss_end_rcd_2
	add rdi,1 
	lea rsi,[rax+8*3]
	mov QWORD [rax],rsi 
	mov rax,rsi 
	jmp ss_lp_rcd_2
ss_end_rcd_2:
	mov rsi,-65534
	mov [rax],rsi 

init_ss_rcd_3:
	mov QWORD [SS_RCD_3_TOP],SS_RCD_3_VCT
	mov rdi,0 
	mov rax,SS_RCD_3_VCT
ss_lp_rcd_3:
	cmp rdi,SS_MAX
	jz ss_end_rcd_3
	add rdi,1 
	lea rsi,[rax+8*4]
	mov QWORD [rax],rsi 
	mov rax,rsi 
	jmp ss_lp_rcd_3
ss_end_rcd_3:
	mov rsi,-65533
	mov [rax],rsi 

init_ss_rcd_4:
	mov QWORD [SS_RCD_4_TOP],SS_RCD_4_VCT
	mov rdi,0 
	mov rax,SS_RCD_4_VCT
ss_lp_rcd_4:
	cmp rdi,SS_MAX
	jz ss_end_rcd_4
	add rdi,1 
	lea rsi,[rax+8*5]
	mov QWORD [rax],rsi 
	mov rax,rsi 
	jmp ss_lp_rcd_4
ss_end_rcd_4:
	mov rsi,-65532
	mov [rax],rsi 

init_ss_rcd_5:
	mov QWORD [SS_RCD_5_TOP],SS_RCD_5_VCT
	mov rdi,0 
	mov rax,SS_RCD_5_VCT
ss_lp_rcd_5:
	cmp rdi,SS_MAX
	jz ss_end_rcd_5
	add rdi,1 
	lea rsi,[rax+8*6]
	mov QWORD [rax],rsi 
	mov rax,rsi 
	jmp ss_lp_rcd_5
ss_end_rcd_5:
	mov rsi,-65531
	mov [rax],rsi 

init_ss_rcd_6:
	mov QWORD [SS_RCD_6_TOP],SS_RCD_6_VCT
	mov rdi,0 
	mov rax,SS_RCD_6_VCT
ss_lp_rcd_6:
	cmp rdi,SS_MAX
	jz ss_end_rcd_6
	add rdi,1 
	lea rsi,[rax+8*7]
	mov QWORD [rax],rsi 
	mov rax,rsi 
	jmp ss_lp_rcd_6
ss_end_rcd_6:
	mov rsi,-65530
	mov [rax],rsi 

init_ss_rcd_7:
	mov QWORD [SS_RCD_7_TOP],SS_RCD_7_VCT
	mov rdi,0 
	mov rax,SS_RCD_7_VCT
ss_lp_rcd_7:
	cmp rdi,SS_MAX
	jz ss_end_rcd_7
	add rdi,1 
	lea rsi,[rax+8*8]
	mov QWORD [rax],rsi 
	mov rax,rsi 
	jmp ss_lp_rcd_7
ss_end_rcd_7:
	mov rsi,-65529
	mov [rax],rsi 

init_ss_rcd_8:
	mov QWORD [SS_RCD_8_TOP],SS_RCD_8_VCT
	mov rdi,0 
	mov rax,SS_RCD_8_VCT
ss_lp_rcd_8:
	cmp rdi,SS_MAX
	jz ss_end_rcd_8
	add rdi,1 
	lea rsi,[rax+8*9]
	mov QWORD [rax],rsi 
	mov rax,rsi 
	jmp ss_lp_rcd_8
ss_end_rcd_8:
	mov rsi,-65528
	mov [rax],rsi 

init_ss_rcd_9:
	mov QWORD [SS_RCD_9_TOP],SS_RCD_9_VCT
	mov rdi,0 
	mov rax,SS_RCD_9_VCT
ss_lp_rcd_9:
	cmp rdi,SS_MAX
	jz ss_end_rcd_9
	add rdi,1 
	lea rsi,[rax+8*10]
	mov QWORD [rax],rsi 
	mov rax,rsi 
	jmp ss_lp_rcd_9
ss_end_rcd_9:
	mov rsi,-65527
	mov [rax],rsi 

init_ss_rcd_10:
	mov QWORD [SS_RCD_10_TOP],SS_RCD_10_VCT
	mov rdi,0 
	mov rax,SS_RCD_10_VCT
ss_lp_rcd_10:
	cmp rdi,SS_MAX
	jz ss_end_rcd_10
	add rdi,1 
	lea rsi,[rax+8*11]
	mov QWORD [rax],rsi 
	mov rax,rsi 
	jmp ss_lp_rcd_10
ss_end_rcd_10:
	mov rsi,-65526
	mov [rax],rsi 

init_ss_rcd_11:
	mov QWORD [SS_RCD_11_TOP],SS_RCD_11_VCT
	mov rdi,0 
	mov rax,SS_RCD_11_VCT
ss_lp_rcd_11:
	cmp rdi,SS_MAX
	jz ss_end_rcd_11
	add rdi,1 
	lea rsi,[rax+8*12]
	mov QWORD [rax],rsi 
	mov rax,rsi 
	jmp ss_lp_rcd_11
ss_end_rcd_11:
	mov rsi,-65525
	mov [rax],rsi 

init_ss_rcd_12:
	mov QWORD [SS_RCD_12_TOP],SS_RCD_12_VCT
	mov rdi,0 
	mov rax,SS_RCD_12_VCT
ss_lp_rcd_12:
	cmp rdi,SS_MAX
	jz ss_end_rcd_12
	add rdi,1 
	lea rsi,[rax+8*13]
	mov QWORD [rax],rsi 
	mov rax,rsi 
	jmp ss_lp_rcd_12
ss_end_rcd_12:
	mov rsi,-65524
	mov [rax],rsi 

init_ss_rcd_13:
	mov QWORD [SS_RCD_13_TOP],SS_RCD_13_VCT
	mov rdi,0 
	mov rax,SS_RCD_13_VCT
ss_lp_rcd_13:
	cmp rdi,SS_MAX
	jz ss_end_rcd_13
	add rdi,1 
	lea rsi,[rax+8*14]
	mov QWORD [rax],rsi 
	mov rax,rsi 
	jmp ss_lp_rcd_13
ss_end_rcd_13:
	mov rsi,-65523
	mov [rax],rsi 

init_ss_rcd_14:
	mov QWORD [SS_RCD_14_TOP],SS_RCD_14_VCT
	mov rdi,0 
	mov rax,SS_RCD_14_VCT
ss_lp_rcd_14:
	cmp rdi,SS_MAX
	jz ss_end_rcd_14
	add rdi,1 
	lea rsi,[rax+8*15]
	mov QWORD [rax],rsi 
	mov rax,rsi 
	jmp ss_lp_rcd_14
ss_end_rcd_14:
	mov rsi,-65522
	mov [rax],rsi 

init_ss_rcd_15:
	mov QWORD [SS_RCD_15_TOP],SS_RCD_15_VCT
	mov rdi,0 
	mov rax,SS_RCD_15_VCT
ss_lp_rcd_15:
	cmp rdi,SS_MAX
	jz ss_end_rcd_15
	add rdi,1 
	lea rsi,[rax+8*16]
	mov QWORD [rax],rsi 
	mov rax,rsi 
	jmp ss_lp_rcd_15
ss_end_rcd_15:
	mov rsi,-65521
	mov [rax],rsi 
	jmp RTM_0
ETR_35: ; of_s8 0'(= {| l |} ) ⊢ 0'(= a5◂ [ ] ) : (_s8→_t5)
;; rsp=0 , %4~0'(= {| l |} ) 
; #33 0'(= {| l |} ) ⊢ 1(<4)◂0'(= {| l |} )
;; rsp=0 , %5~1(<4)◂0'(= {| l |} ) 
; ∎ 1(<4)◂0'(= {| l |} )
; .mov_ptn2 1(<4)◂0'(= {| l |} ) ⊢ 0'(= a5◂ [ ] )
	mov r14,r13
; .mov_ptn 1(<4)◂1'(= {| l |} ) ⊢ 0'(= a5◂ [ ] )
	mov rax,r14
	mov BYTE [rax+6],1
	mov r13,rax
	ret
ETR_36: ; len 0'(= a5◂ [ ] ) ⊢ { 0'(= a5◂ [ ] ) 1'(= r ) } : (_t5→{ _t5 _r64 })
;; rsp=0 , %6~0'(= a5◂ [ ] ) 
;; ? 0'(= a5◂ [ ] ) ⊢ 0(<4)◂{ 1'(= a5◂ [ ] ) 2'(= r ) 3'(= a5◂ [ ] ) }
	mov rdi,r13
	movzx rax,BYTE [rdi+6]
	cmp rax,0
	jnz LB_0
	mov rdi,r13
	mov rdi,QWORD [rdi+8+8*0]
	mov r14,rdi
	mov rdi,r13
	mov rdi,QWORD [rdi+8+8*1]
	mov r8,rdi
	mov rdi,r13
	mov rdi,QWORD [rdi+8+8*2]
	mov r9,rdi
;; rsp=0 , %11~3'(= a5◂ [ ] ) %10~2'(= r ) %9~1'(= a5◂ [ ] ) 
	jmp LB_1
LB_1:
; $ 2'(= r ) ⊢ 2'(= r ),0'(= r )
	mov rdi,r8
	mov rax,rdi
	mov r13,rax
;; rsp=0 , %13~0'(= r ) %12~2'(= r ) %11~3'(= a5◂ [ ] ) %9~1'(= a5◂ [ ] ) 
; #34 { 1'(= a5◂ [ ] ) 0'(= r ) 3'(= a5◂ [ ] ) } ⊢ 0(<4)◂{ 1'(= a5◂ [ ] ) 0'(= r ) 3'(= a5◂ [ ] ) }
;; rsp=0 , %14~0(<4)◂{ 1'(= a5◂ [ ] ) 0'(= r ) 3'(= a5◂ [ ] ) } %12~2'(= r ) 
; ∎ { 0(<4)◂{ 1'(= a5◂ [ ] ) 0'(= r ) 3'(= a5◂ [ ] ) } 2'(= r ) }
; .mov_ptn2 { 0(<4)◂{ 1'(= a5◂ [ ] ) 0'(= r ) 3'(= a5◂ [ ] ) } 2'(= r ) } ⊢ { 0'(= a5◂ [ ] ) 1'(= r ) }
	mov r10,r13
; .mov_ptn 0(<4)◂{ 1'(= a5◂ [ ] ) 4'(= r ) 3'(= a5◂ [ ] ) } ⊢ 0'(= a5◂ [ ] )
	mov rax,[SS_RCD_3_TOP]
	mov rsi,[rax] 
	mov QWORD [SS_RCD_3_TOP],rsi
	mov QWORD [rax],0
	mov r11,rax
	mov rax,r14
	mov rdi,r11
	mov QWORD [rdi+8+8*0],rax
	mov rax,r10
	mov rdi,r11
	mov QWORD [rdi+8+8*1],rax
	mov rax,r9
	mov rdi,r11
	mov QWORD [rdi+8+8*2],rax
	mov rax,r11
	mov BYTE [rax+6],0
	mov r13,rax
; .mov_ptn 2'(= r ) ⊢ 1'(= r )
	mov rax,r8
	mov r14,rax
	ret
LB_0:
;; ? 0'(= a5◂ [ ] ) ⊢ 3(<4)◂1'(= r )
	mov rdi,r13
	movzx rax,BYTE [rdi+6]
	cmp rax,3
	jnz LB_2
	mov rax,QWORD [rdi+8]
	mov r14,rax
;; rsp=0 , %8~1'(= r ) 
	jmp LB_3
LB_3:
; $ %[ 1r ] ⊢ %[ 1r ]
;; rsp=0 , %15~%[ 1r ] %8~1'(= r ) 
; #31 1'(= r ) ⊢ 3(<4)◂1'(= r )
;; rsp=0 , %16~3(<4)◂1'(= r ) %15~%[ 1r ] 
; ∎ { 3(<4)◂1'(= r ) %[ 1r ] }
; .mov_ptn2 { 3(<4)◂1'(= r ) %[ 1r ] } ⊢ { 0'(= a5◂ [ ] ) 1'(= r ) }
; .mov_ptn 3(<4)◂1'(= r ) ⊢ 0'(= a5◂ [ ] )
	mov rax,r14
	mov rdi,rax
	mov rax,[SS_LN_TOP]
	mov rsi,[rax]
	mov QWORD [SS_LN_TOP],rsi 
	mov QWORD [rax],0
	mov BYTE [rax+6],3
	mov QWORD [rax+8],rdi
	mov r13,rax
; .mov_ptn %[ 1r ] ⊢ 1'(= r )
	mov rax,1
	mov r14,rax
	ret
LB_2:
;; ? 0'(= a5◂ [ ] ) ⊢ 2(<4)◂{ }
	mov rdi,r13
	movzx rax,BYTE [rdi+6]
	cmp rax,2
	jnz LB_4
;; rsp=0 , 
; #32 { } ⊢ 2(<4)◂{ }
;; rsp=0 , %17~2(<4)◂{ } 
	jmp LB_5
LB_5:
; $ %[ 0r ] ⊢ %[ 0r ]
;; rsp=0 , %18~%[ 0r ] %17~2(<4)◂{ } 
; ∎ { 2(<4)◂{ } %[ 0r ] }
; .mov_ptn2 { 2(<4)◂{ } %[ 0r ] } ⊢ { 0'(= a5◂ [ ] ) 1'(= r ) }
; .mov_ptn %[ 0r ] ⊢ 1'(= r )
	mov rax,0
	mov r14,rax
; .mov_ptn 2(<4)◂{ } ⊢ 0'(= a5◂ [ ] )
	mov rax,unt 
	mov rax,unt_2
	mov r13,rax
	ret
LB_4:
;; ? 0'(= a5◂ [ ] ) ⊢ 1(<4)◂0'(= {| l |} )
;; rsp=0 , %7~0'(= {| l |} ) 
; _s8_len 0'(= {| l |} ) ⊢ { 0'(= {| l |} ) 1'(= r ) }
	mov rdi,r13
	mov rdi,QWORD [rdi]
	mov rsi,0x0000_ffff_ffff_ffff
	and rdi,rsi
	mov r14,rdi
;; rsp=0 , %20~1'(= r ) %19~0'(= {| l |} ) 
; #33 0'(= {| l |} ) ⊢ 1(<4)◂0'(= {| l |} )
;; rsp=0 , %21~1(<4)◂0'(= {| l |} ) %20~1'(= r ) 
; ∎ { 1(<4)◂0'(= {| l |} ) 1'(= r ) }
; .mov_ptn2 { 1(<4)◂0'(= {| l |} ) 1'(= r ) } ⊢ { 0'(= a5◂ [ ] ) 1'(= r ) }
	mov r8,r13
; .mov_ptn 1(<4)◂2'(= {| l |} ) ⊢ 0'(= a5◂ [ ] )
	mov rax,r8
	mov BYTE [rax+6],1
	mov r13,rax
	ret
ETR_37: ; add_s8 { 0'(= a5◂ [ ] ) 1'(= {| l |} ) } ⊢ 0'(= a5◂ [ ] ) : ({ _t5 _s8 }→_t5)
;; rsp=0 , %23~1'(= {| l |} ) %22~0'(= a5◂ [ ] ) 
; _s8_len 1'(= {| l |} ) ⊢ { 1'(= {| l |} ) 2'(= r ) }
	mov rdi,r14
	mov rdi,QWORD [rdi]
	mov rsi,0x0000_ffff_ffff_ffff
	and rdi,rsi
	mov r8,rdi
;; rsp=0 , %25~2'(= r ) %24~1'(= {| l |} ) %22~0'(= a5◂ [ ] ) 
; rsp_d=0, #36 0'(= a5◂ [ ] ) ⊢ { 0'(= a5◂ [ ] ) 3'(= r ) }
	lea rsp,[rsp-8*2]
	mov QWORD [rsp+8*0],r14
	mov QWORD [rsp+8*1],r8
; .mov_ptn2 0'(= a5◂ [ ] ) ⊢ 0'(= a5◂ [ ] )
	call ETR_36

	mov r8,QWORD [rsp-8+8*2]
	mov rax,QWORD [rsp-8+8*1]
	mov r9,r14
	mov r14,rax
	lea rsp,[rsp+8*2]
;; rsp=0 , %27~3'(= r ) %26~0'(= a5◂ [ ] ) %25~2'(= r ) %24~1'(= {| l |} ) 
; _add { 2'(= r ) 3'(= r ) } ⊢ { 2'(= r ) 3'(= r ) }
	add r8,r9
;; rsp=0 , %29~3'(= r ) %28~2'(= r ) %26~0'(= a5◂ [ ] ) %24~1'(= {| l |} ) 
; #33 1'(= {| l |} ) ⊢ 1(<4)◂1'(= {| l |} )
;; rsp=0 , %30~1(<4)◂1'(= {| l |} ) %29~3'(= r ) %28~2'(= r ) %26~0'(= a5◂ [ ] ) 
; #34 { 0'(= a5◂ [ ] ) 2'(= r ) 1(<4)◂1'(= {| l |} ) } ⊢ 0(<4)◂{ 0'(= a5◂ [ ] ) 2'(= r ) 1(<4)◂1'(= {| l |} ) }
;; rsp=0 , %31~0(<4)◂{ 0'(= a5◂ [ ] ) 2'(= r ) 1(<4)◂1'(= {| l |} ) } %29~3'(= r ) 
; ∎ 0(<4)◂{ 0'(= a5◂ [ ] ) 2'(= r ) 1(<4)◂1'(= {| l |} ) }
; .dlt.ptn 3'(= r )
; .mov_ptn2 0(<4)◂{ 0'(= a5◂ [ ] ) 2'(= r ) 1(<4)◂1'(= {| l |} ) } ⊢ 0'(= a5◂ [ ] )
	mov r9,r13
; .mov_ptn 0(<4)◂{ 3'(= a5◂ [ ] ) 2'(= r ) 1(<4)◂1'(= {| l |} ) } ⊢ 0'(= a5◂ [ ] )
	mov rax,[SS_RCD_3_TOP]
	mov rsi,[rax] 
	mov QWORD [SS_RCD_3_TOP],rsi
	mov QWORD [rax],0
	mov r10,rax
	mov rax,r9
	mov rdi,r10
	mov QWORD [rdi+8+8*0],rax
	mov rax,r8
	mov rdi,r10
	mov QWORD [rdi+8+8*1],rax
	mov rax,r14
	mov BYTE [rax+6],1
	mov rdi,r10
	mov QWORD [rdi+8+8*2],rax
	mov rax,r10
	mov BYTE [rax+6],0
	mov r13,rax
	ret
ETR_38: ; pfx_s8 { 0'(= {| l |} ) 1'(= a5◂ [ ] ) } ⊢ 0'(= a5◂ [ ] ) : ({ _s8 _t5 }→_t5)
;; rsp=0 , %33~1'(= a5◂ [ ] ) %32~0'(= {| l |} ) 
; _s8_len 0'(= {| l |} ) ⊢ { 0'(= {| l |} ) 2'(= r ) }
	mov rdi,r13
	mov rdi,QWORD [rdi]
	mov rsi,0x0000_ffff_ffff_ffff
	and rdi,rsi
	mov r8,rdi
;; rsp=0 , %35~2'(= r ) %34~0'(= {| l |} ) %33~1'(= a5◂ [ ] ) 
; rsp_d=0, #36 1'(= a5◂ [ ] ) ⊢ { 3'(= a5◂ [ ] ) 1'(= r ) }
	lea rsp,[rsp-8*2]
	mov QWORD [rsp+8*0],r13
	mov QWORD [rsp+8*1],r8
; .mov_ptn2 1'(= a5◂ [ ] ) ⊢ 0'(= a5◂ [ ] )
; .mov_ptn 1'(= a5◂ [ ] ) ⊢ 0'(= a5◂ [ ] )
	mov rax,r14
	mov r13,rax
	call ETR_36

	mov r8,QWORD [rsp-8+8*2]
	mov rax,QWORD [rsp-8+8*1]
	mov r9,r13
	mov r13,rax
	lea rsp,[rsp+8*2]
;; rsp=0 , %37~1'(= r ) %36~3'(= a5◂ [ ] ) %35~2'(= r ) %34~0'(= {| l |} ) 
; _add { 2'(= r ) 1'(= r ) } ⊢ { 2'(= r ) 1'(= r ) }
	add r8,r14
;; rsp=0 , %39~1'(= r ) %38~2'(= r ) %36~3'(= a5◂ [ ] ) %34~0'(= {| l |} ) 
; #33 0'(= {| l |} ) ⊢ 1(<4)◂0'(= {| l |} )
;; rsp=0 , %40~1(<4)◂0'(= {| l |} ) %39~1'(= r ) %38~2'(= r ) %36~3'(= a5◂ [ ] ) 
; #34 { 1(<4)◂0'(= {| l |} ) 2'(= r ) 3'(= a5◂ [ ] ) } ⊢ 0(<4)◂{ 1(<4)◂0'(= {| l |} ) 2'(= r ) 3'(= a5◂ [ ] ) }
;; rsp=0 , %41~0(<4)◂{ 1(<4)◂0'(= {| l |} ) 2'(= r ) 3'(= a5◂ [ ] ) } %39~1'(= r ) 
; ∎ 0(<4)◂{ 1(<4)◂0'(= {| l |} ) 2'(= r ) 3'(= a5◂ [ ] ) }
; .dlt.ptn 1'(= r )
; .mov_ptn2 0(<4)◂{ 1(<4)◂0'(= {| l |} ) 2'(= r ) 3'(= a5◂ [ ] ) } ⊢ 0'(= a5◂ [ ] )
	mov r14,r13
; .mov_ptn 0(<4)◂{ 1(<4)◂1'(= {| l |} ) 2'(= r ) 3'(= a5◂ [ ] ) } ⊢ 0'(= a5◂ [ ] )
	mov rax,[SS_RCD_3_TOP]
	mov rsi,[rax] 
	mov QWORD [SS_RCD_3_TOP],rsi
	mov QWORD [rax],0
	mov r10,rax
	mov rax,r14
	mov BYTE [rax+6],1
	mov rdi,r10
	mov QWORD [rdi+8+8*0],rax
	mov rax,r8
	mov rdi,r10
	mov QWORD [rdi+8+8*1],rax
	mov rax,r9
	mov rdi,r10
	mov QWORD [rdi+8+8*2],rax
	mov rax,r10
	mov BYTE [rax+6],0
	mov r13,rax
	ret
ETR_39: ; add_chr { 0'(= a5◂ [ ] ) 1'(= r ) } ⊢ 0'(= a5◂ [ ] ) : ({ _t5 _r64 }→_t5)
;; rsp=0 , %43~1'(= r ) %42~0'(= a5◂ [ ] ) 
; rsp_d=0, #36 0'(= a5◂ [ ] ) ⊢ { 0'(= a5◂ [ ] ) 2'(= r ) }
	lea rsp,[rsp-8*1]
	mov QWORD [rsp+8*0],r14
; .mov_ptn2 0'(= a5◂ [ ] ) ⊢ 0'(= a5◂ [ ] )
	call ETR_36

	mov rax,QWORD [rsp-8+8*1]
	mov r8,r14
	mov r14,rax
	lea rsp,[rsp+8*1]
;; rsp=0 , %45~2'(= r ) %44~0'(= a5◂ [ ] ) %43~1'(= r ) 
; _inc 2'(= r ) ⊢ 2'(= r )
	add r8,1
;; rsp=0 , %46~2'(= r ) %44~0'(= a5◂ [ ] ) %43~1'(= r ) 
; #31 1'(= r ) ⊢ 3(<4)◂1'(= r )
;; rsp=0 , %47~3(<4)◂1'(= r ) %46~2'(= r ) %44~0'(= a5◂ [ ] ) 
; #34 { 0'(= a5◂ [ ] ) 2'(= r ) 3(<4)◂1'(= r ) } ⊢ 0(<4)◂{ 0'(= a5◂ [ ] ) 2'(= r ) 3(<4)◂1'(= r ) }
;; rsp=0 , %48~0(<4)◂{ 0'(= a5◂ [ ] ) 2'(= r ) 3(<4)◂1'(= r ) } 
; ∎ 0(<4)◂{ 0'(= a5◂ [ ] ) 2'(= r ) 3(<4)◂1'(= r ) }
; .mov_ptn2 0(<4)◂{ 0'(= a5◂ [ ] ) 2'(= r ) 3(<4)◂1'(= r ) } ⊢ 0'(= a5◂ [ ] )
	mov r9,r13
; .mov_ptn 0(<4)◂{ 3'(= a5◂ [ ] ) 2'(= r ) 3(<4)◂1'(= r ) } ⊢ 0'(= a5◂ [ ] )
	mov rax,[SS_RCD_3_TOP]
	mov rsi,[rax] 
	mov QWORD [SS_RCD_3_TOP],rsi
	mov QWORD [rax],0
	mov r10,rax
	mov rax,r9
	mov rdi,r10
	mov QWORD [rdi+8+8*0],rax
	mov rax,r8
	mov rdi,r10
	mov QWORD [rdi+8+8*1],rax
	mov rax,r14
	mov rdi,rax
	mov rax,[SS_LN_TOP]
	mov rsi,[rax]
	mov QWORD [SS_LN_TOP],rsi 
	mov QWORD [rax],0
	mov BYTE [rax+6],3
	mov QWORD [rax+8],rdi
	mov rdi,r10
	mov QWORD [rdi+8+8*2],rax
	mov rax,r10
	mov BYTE [rax+6],0
	mov r13,rax
	ret
ETR_40: ; pfx_chr { 0'(= r ) 1'(= a5◂ [ ] ) } ⊢ 0'(= a5◂ [ ] ) : ({ _r64 _t5 }→_t5)
;; rsp=0 , %50~1'(= a5◂ [ ] ) %49~0'(= r ) 
; rsp_d=0, #36 1'(= a5◂ [ ] ) ⊢ { 2'(= a5◂ [ ] ) 1'(= r ) }
	lea rsp,[rsp-8*1]
	mov QWORD [rsp+8*0],r13
; .mov_ptn2 1'(= a5◂ [ ] ) ⊢ 0'(= a5◂ [ ] )
; .mov_ptn 1'(= a5◂ [ ] ) ⊢ 0'(= a5◂ [ ] )
	mov rax,r14
	mov r13,rax
	call ETR_36

	mov rax,QWORD [rsp-8+8*1]
	mov r8,r13
	mov r13,rax
	lea rsp,[rsp+8*1]
;; rsp=0 , %52~1'(= r ) %51~2'(= a5◂ [ ] ) %49~0'(= r ) 
; _inc 1'(= r ) ⊢ 1'(= r )
	add r14,1
;; rsp=0 , %53~1'(= r ) %51~2'(= a5◂ [ ] ) %49~0'(= r ) 
; #31 0'(= r ) ⊢ 3(<4)◂0'(= r )
;; rsp=0 , %54~3(<4)◂0'(= r ) %53~1'(= r ) %51~2'(= a5◂ [ ] ) 
; #34 { 3(<4)◂0'(= r ) 1'(= r ) 2'(= a5◂ [ ] ) } ⊢ 0(<4)◂{ 3(<4)◂0'(= r ) 1'(= r ) 2'(= a5◂ [ ] ) }
;; rsp=0 , %55~0(<4)◂{ 3(<4)◂0'(= r ) 1'(= r ) 2'(= a5◂ [ ] ) } 
; ∎ 0(<4)◂{ 3(<4)◂0'(= r ) 1'(= r ) 2'(= a5◂ [ ] ) }
; .mov_ptn2 0(<4)◂{ 3(<4)◂0'(= r ) 1'(= r ) 2'(= a5◂ [ ] ) } ⊢ 0'(= a5◂ [ ] )
	mov r9,r13
; .mov_ptn 0(<4)◂{ 3(<4)◂3'(= r ) 1'(= r ) 2'(= a5◂ [ ] ) } ⊢ 0'(= a5◂ [ ] )
	mov rax,[SS_RCD_3_TOP]
	mov rsi,[rax] 
	mov QWORD [SS_RCD_3_TOP],rsi
	mov QWORD [rax],0
	mov r10,rax
	mov rax,r9
	mov rdi,rax
	mov rax,[SS_LN_TOP]
	mov rsi,[rax]
	mov QWORD [SS_LN_TOP],rsi 
	mov QWORD [rax],0
	mov BYTE [rax+6],3
	mov QWORD [rax+8],rdi
	mov rdi,r10
	mov QWORD [rdi+8+8*0],rax
	mov rax,r14
	mov rdi,r10
	mov QWORD [rdi+8+8*1],rax
	mov rax,r8
	mov rdi,r10
	mov QWORD [rdi+8+8*2],rax
	mov rax,r10
	mov BYTE [rax+6],0
	mov r13,rax
	ret
ETR_41: ; cct { 0'(= a5◂ [ ] ) 1'(= a5◂ [ ] ) } ⊢ 0'(= a5◂ [ ] ) : ({ _t5 _t5 }→_t5)
;; rsp=0 , %57~1'(= a5◂ [ ] ) %56~0'(= a5◂ [ ] ) 
; rsp_d=0, #36 0'(= a5◂ [ ] ) ⊢ { 0'(= a5◂ [ ] ) 2'(= r ) }
	lea rsp,[rsp-8*1]
	mov QWORD [rsp+8*0],r14
; .mov_ptn2 0'(= a5◂ [ ] ) ⊢ 0'(= a5◂ [ ] )
	call ETR_36

	mov rax,QWORD [rsp-8+8*1]
	mov r8,r14
	mov r14,rax
	lea rsp,[rsp+8*1]
;; rsp=0 , %59~2'(= r ) %58~0'(= a5◂ [ ] ) %57~1'(= a5◂ [ ] ) 
; rsp_d=0, #36 1'(= a5◂ [ ] ) ⊢ { 3'(= a5◂ [ ] ) 1'(= r ) }
	lea rsp,[rsp-8*2]
	mov QWORD [rsp+8*0],r13
	mov QWORD [rsp+8*1],r8
; .mov_ptn2 1'(= a5◂ [ ] ) ⊢ 0'(= a5◂ [ ] )
; .mov_ptn 1'(= a5◂ [ ] ) ⊢ 0'(= a5◂ [ ] )
	mov rax,r14
	mov r13,rax
	call ETR_36

	mov r8,QWORD [rsp-8+8*2]
	mov rax,QWORD [rsp-8+8*1]
	mov r9,r13
	mov r13,rax
	lea rsp,[rsp+8*2]
;; rsp=0 , %61~1'(= r ) %60~3'(= a5◂ [ ] ) %59~2'(= r ) %58~0'(= a5◂ [ ] ) 
; _add { 2'(= r ) 1'(= r ) } ⊢ { 2'(= r ) 1'(= r ) }
	add r8,r14
;; rsp=0 , %63~1'(= r ) %62~2'(= r ) %60~3'(= a5◂ [ ] ) %58~0'(= a5◂ [ ] ) 
; #34 { 0'(= a5◂ [ ] ) 2'(= r ) 3'(= a5◂ [ ] ) } ⊢ 0(<4)◂{ 0'(= a5◂ [ ] ) 2'(= r ) 3'(= a5◂ [ ] ) }
;; rsp=0 , %64~0(<4)◂{ 0'(= a5◂ [ ] ) 2'(= r ) 3'(= a5◂ [ ] ) } %63~1'(= r ) 
; ∎ 0(<4)◂{ 0'(= a5◂ [ ] ) 2'(= r ) 3'(= a5◂ [ ] ) }
; .dlt.ptn 1'(= r )
; .mov_ptn2 0(<4)◂{ 0'(= a5◂ [ ] ) 2'(= r ) 3'(= a5◂ [ ] ) } ⊢ 0'(= a5◂ [ ] )
	mov r14,r13
; .mov_ptn 0(<4)◂{ 1'(= a5◂ [ ] ) 2'(= r ) 3'(= a5◂ [ ] ) } ⊢ 0'(= a5◂ [ ] )
	mov rax,[SS_RCD_3_TOP]
	mov rsi,[rax] 
	mov QWORD [SS_RCD_3_TOP],rsi
	mov QWORD [rax],0
	mov r10,rax
	mov rax,r14
	mov rdi,r10
	mov QWORD [rdi+8+8*0],rax
	mov rax,r8
	mov rdi,r10
	mov QWORD [rdi+8+8*1],rax
	mov rax,r9
	mov rdi,r10
	mov QWORD [rdi+8+8*2],rax
	mov rax,r10
	mov BYTE [rax+6],0
	mov r13,rax
	ret
ETR_42: ; mk_s8_i { 0'(= a5◂ [ ] ) 1'(= {| l |} ) 2'(= r ) } ⊢ { 0'(= a5◂ [ ] ) 1'(= {| l |} ) 2'(= r ) } : ({ _t5 _s8 _r64 }→{ _t5 _s8 _r64 })
;; rsp=0 , %67~2'(= r ) %66~1'(= {| l |} ) %65~0'(= a5◂ [ ] ) 
;; ? 0'(= a5◂ [ ] ) ⊢ 0(<4)◂{ 3'(= a5◂ [ ] ) 4'(= r ) 5'(= a5◂ [ ] ) }
	mov rdi,r13
	movzx rax,BYTE [rdi+6]
	cmp rax,0
	jnz LB_6
	mov rdi,r13
	mov rdi,QWORD [rdi+8+8*0]
	mov r9,rdi
	mov rdi,r13
	mov rdi,QWORD [rdi+8+8*1]
	mov r10,rdi
	mov rdi,r13
	mov rdi,QWORD [rdi+8+8*2]
	mov r11,rdi
;; rsp=0 , %72~5'(= a5◂ [ ] ) %71~4'(= r ) %70~3'(= a5◂ [ ] ) %67~2'(= r ) %66~1'(= {| l |} ) 
; rsp_d=0, #42 { 3'(= a5◂ [ ] ) 1'(= {| l |} ) 2'(= r ) } ⊢ { 0'(= a5◂ [ ] ) 1'(= {| l |} ) 2'(= r ) }
	lea rsp,[rsp-8*2]
	mov QWORD [rsp+8*0],r10
	mov QWORD [rsp+8*1],r11
; .mov_ptn2 { 3'(= a5◂ [ ] ) 1'(= {| l |} ) 2'(= r ) } ⊢ { 0'(= a5◂ [ ] ) 1'(= {| l |} ) 2'(= r ) }
; .mov_ptn 3'(= a5◂ [ ] ) ⊢ 0'(= a5◂ [ ] )
	mov rax,r9
	mov r13,rax
	call ETR_42

	mov r11,QWORD [rsp-8+8*2]
	mov r10,QWORD [rsp-8+8*1]
	lea rsp,[rsp+8*2]
;; rsp=0 , %75~2'(= r ) %74~1'(= {| l |} ) %73~0'(= a5◂ [ ] ) %72~5'(= a5◂ [ ] ) %71~4'(= r ) 
; rsp_d=0, #42 { 5'(= a5◂ [ ] ) 1'(= {| l |} ) 2'(= r ) } ⊢ { 3'(= a5◂ [ ] ) 1'(= {| l |} ) 2'(= r ) }
	lea rsp,[rsp-8*2]
	mov QWORD [rsp+8*0],r13
	mov QWORD [rsp+8*1],r10
; .mov_ptn2 { 5'(= a5◂ [ ] ) 1'(= {| l |} ) 2'(= r ) } ⊢ { 0'(= a5◂ [ ] ) 1'(= {| l |} ) 2'(= r ) }
; .mov_ptn 5'(= a5◂ [ ] ) ⊢ 0'(= a5◂ [ ] )
	mov rax,r11
	mov r13,rax
	call ETR_42

	mov r10,QWORD [rsp-8+8*2]
	mov rax,QWORD [rsp-8+8*1]
	mov r9,r13
	mov r13,rax
	lea rsp,[rsp+8*2]
;; rsp=0 , %78~2'(= r ) %77~1'(= {| l |} ) %76~3'(= a5◂ [ ] ) %73~0'(= a5◂ [ ] ) %71~4'(= r ) 
; #34 { 0'(= a5◂ [ ] ) 4'(= r ) 3'(= a5◂ [ ] ) } ⊢ 0(<4)◂{ 0'(= a5◂ [ ] ) 4'(= r ) 3'(= a5◂ [ ] ) }
;; rsp=0 , %79~0(<4)◂{ 0'(= a5◂ [ ] ) 4'(= r ) 3'(= a5◂ [ ] ) } %78~2'(= r ) %77~1'(= {| l |} ) 
; ∎ { 0(<4)◂{ 0'(= a5◂ [ ] ) 4'(= r ) 3'(= a5◂ [ ] ) } 1'(= {| l |} ) 2'(= r ) }
; .mov_ptn2 { 0(<4)◂{ 0'(= a5◂ [ ] ) 4'(= r ) 3'(= a5◂ [ ] ) } 1'(= {| l |} ) 2'(= r ) } ⊢ { 0'(= a5◂ [ ] ) 1'(= {| l |} ) 2'(= r ) }
	mov r11,r13
; .mov_ptn 0(<4)◂{ 5'(= a5◂ [ ] ) 4'(= r ) 3'(= a5◂ [ ] ) } ⊢ 0'(= a5◂ [ ] )
	mov rax,[SS_RCD_3_TOP]
	mov rsi,[rax] 
	mov QWORD [SS_RCD_3_TOP],rsi
	mov QWORD [rax],0
	mov rcx,rax
	mov rax,r11
	mov rdi,rcx
	mov QWORD [rdi+8+8*0],rax
	mov rax,r10
	mov rdi,rcx
	mov QWORD [rdi+8+8*1],rax
	mov rax,r9
	mov rdi,rcx
	mov QWORD [rdi+8+8*2],rax
	mov rax,rcx
	mov BYTE [rax+6],0
	mov r13,rax
	ret
LB_6:
;; ? 0'(= a5◂ [ ] ) ⊢ 2(<4)◂{ }
	mov rdi,r13
	movzx rax,BYTE [rdi+6]
	cmp rax,2
	jnz LB_7
;; rsp=0 , %67~2'(= r ) %66~1'(= {| l |} ) 
; #32 { } ⊢ 2(<4)◂{ }
;; rsp=0 , %80~2(<4)◂{ } %67~2'(= r ) %66~1'(= {| l |} ) 
; ∎ { 2(<4)◂{ } 1'(= {| l |} ) 2'(= r ) }
; .mov_ptn2 { 2(<4)◂{ } 1'(= {| l |} ) 2'(= r ) } ⊢ { 0'(= a5◂ [ ] ) 1'(= {| l |} ) 2'(= r ) }
; .mov_ptn 2(<4)◂{ } ⊢ 0'(= a5◂ [ ] )
	mov rax,unt 
	mov rax,unt_2
	mov r13,rax
	ret
LB_7:
;; ? 0'(= a5◂ [ ] ) ⊢ 3(<4)◂3'(= r )
	mov rdi,r13
	movzx rax,BYTE [rdi+6]
	cmp rax,3
	jnz LB_8
	mov rax,QWORD [rdi+8]
	mov r9,rax
;; rsp=0 , %69~3'(= r ) %67~2'(= r ) %66~1'(= {| l |} ) 
; _sts { 1'(= {| l |} ) 2'(= r ) 3'(= r ) } ⊢ { 1'(= {| l |} ) 2'(= r ) 3'(= r ) }
	mov rax,r14
	mov rdi,0x0000_ffff_ffff_ffff
	and rdi,[rax]
	cmp rdi,r8
	jle err
	mov rsi,r8
	mov rdi,r9
	mov BYTE [rax+8+rsi],dil
;; rsp=0 , %83~3'(= r ) %82~2'(= r ) %81~1'(= {| l |} ) 
; _inc 2'(= r ) ⊢ 2'(= r )
	add r8,1
;; rsp=0 , %84~2'(= r ) %83~3'(= r ) %81~1'(= {| l |} ) 
; #31 3'(= r ) ⊢ 3(<4)◂3'(= r )
;; rsp=0 , %85~3(<4)◂3'(= r ) %84~2'(= r ) %81~1'(= {| l |} ) 
; ∎ { 3(<4)◂3'(= r ) 1'(= {| l |} ) 2'(= r ) }
; .mov_ptn2 { 3(<4)◂3'(= r ) 1'(= {| l |} ) 2'(= r ) } ⊢ { 0'(= a5◂ [ ] ) 1'(= {| l |} ) 2'(= r ) }
; .mov_ptn 3(<4)◂3'(= r ) ⊢ 0'(= a5◂ [ ] )
	mov rax,r9
	mov rdi,rax
	mov rax,[SS_LN_TOP]
	mov rsi,[rax]
	mov QWORD [SS_LN_TOP],rsi 
	mov QWORD [rax],0
	mov BYTE [rax+6],3
	mov QWORD [rax+8],rdi
	mov r13,rax
	ret
LB_8:
;; ? 0'(= a5◂ [ ] ) ⊢ 1(<4)◂0'(= {| l |} )
;; rsp=0 , %68~0'(= {| l |} ) %67~2'(= r ) %66~1'(= {| l |} ) 
; _s8_len 0'(= {| l |} ) ⊢ { 0'(= {| l |} ) 3'(= r ) }
	mov rdi,r13
	mov rdi,QWORD [rdi]
	mov rsi,0x0000_ffff_ffff_ffff
	and rdi,rsi
	mov r9,rdi
;; rsp=0 , %87~3'(= r ) %86~0'(= {| l |} ) %67~2'(= r ) %66~1'(= {| l |} ) 
	jmp LB_9
LB_9:
; $ %[ 0r ] ⊢ %[ 0r ]
;; rsp=0 , %88~%[ 0r ] %87~3'(= r ) %86~0'(= {| l |} ) %67~2'(= r ) %66~1'(= {| l |} ) 
; _rep_movsb { 3'(= r ) 0'(= {| l |} ) %[ 0r ] 1'(= {| l |} ) 2'(= r ) } ⊢ { 3'(= r ) 0'(= {| l |} ) %[ 0r ] 1'(= {| l |} ) 2'(= r ) }
	mov rax,r9
	mov rsi,r13
	mov rdi,0x0000_ffff_ffff_ffff
	and rdi,[rsi]
	sub rdi,rax
	lea rsi,[rsi+8]
	cmp rdi,0
	jl err
	lea rsi,[rsi+0]
	push rsi 
	mov rsi,r14
	mov rdi,0x0000_ffff_ffff_ffff
	and rdi,[rsi]
	sub rdi,rax
	lea rsi,[rsi+8]
	cmp rdi,r8
	jl err
	add rsi,r8
	mov rdi,rsi 
	pop rsi 
	push rcx 
	mov rcx,rax 
	cld 
	rep movsb
	pop rcx 
;; rsp=0 , %93~2'(= r ) %92~1'(= {| l |} ) %91~%[ 0r ] %90~0'(= {| l |} ) %89~3'(= r ) 
; #33 0'(= {| l |} ) ⊢ 1(<4)◂0'(= {| l |} )
;; rsp=0 , %94~1(<4)◂0'(= {| l |} ) %93~2'(= r ) %92~1'(= {| l |} ) %91~%[ 0r ] %89~3'(= r ) 
; ∎ { 1(<4)◂0'(= {| l |} ) 1'(= {| l |} ) 2'(= r ) }
; .dlt.ptn %[ 0r ]
; .dlt.ptn 3'(= r )
; .mov_ptn2 { 1(<4)◂0'(= {| l |} ) 1'(= {| l |} ) 2'(= r ) } ⊢ { 0'(= a5◂ [ ] ) 1'(= {| l |} ) 2'(= r ) }
	mov r9,r13
; .mov_ptn 1(<4)◂3'(= {| l |} ) ⊢ 0'(= a5◂ [ ] )
	mov rax,r9
	mov BYTE [rax+6],1
	mov r13,rax
	ret
ETR_43: ; mk_s8 0'(= a5◂ [ ] ) ⊢ { 0'(= a5◂ [ ] ) 1'(= {| l |} ) } : (_t5→{ _t5 _s8 })
;; rsp=0 , %95~0'(= a5◂ [ ] ) 
; rsp_d=0, #36 0'(= a5◂ [ ] ) ⊢ { 0'(= a5◂ [ ] ) 1'(= r ) }
; .mov_ptn2 0'(= a5◂ [ ] ) ⊢ 0'(= a5◂ [ ] )
	call ETR_36

;; rsp=0 , %97~1'(= r ) %96~0'(= a5◂ [ ] ) 
; _mlc_s8 1'(= r ) ⊢ { 1'(= r ) 2'(= {| l |} ) }
	mov rdi,r14
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	mov rsi,1 
	xor rax,rax
	push rdi
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call calloc
	mov rsp,QWORD [rsp_tmp]  
	pop QWORD [rax] 
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	mov r8,rax
;; rsp=0 , %99~2'(= {| l |} ) %98~1'(= r ) %96~0'(= a5◂ [ ] ) 
	jmp LB_10
LB_10:
; $ %[ 0r ] ⊢ %[ 0r ]
;; rsp=0 , %100~%[ 0r ] %99~2'(= {| l |} ) %98~1'(= r ) %96~0'(= a5◂ [ ] ) 
; rsp_d=0, #42 { 0'(= a5◂ [ ] ) 2'(= {| l |} ) %[ 0r ] } ⊢ { 0'(= a5◂ [ ] ) 3'(= {| l |} ) 2'(= r ) }
	lea rsp,[rsp-8*1]
	mov QWORD [rsp+8*0],r14
; .mov_ptn2 { 0'(= a5◂ [ ] ) 2'(= {| l |} ) %[ 0r ] } ⊢ { 0'(= a5◂ [ ] ) 1'(= {| l |} ) 2'(= r ) }
	mov r9,r8
; .mov_ptn %[ 0r ] ⊢ 2'(= r )
	mov rax,0
	mov r8,rax
; .mov_ptn 3'(= {| l |} ) ⊢ 1'(= {| l |} )
	mov rax,r9
	mov r14,rax
	call ETR_42

	mov rax,QWORD [rsp-8+8*1]
	mov r9,r14
	mov r14,rax
	lea rsp,[rsp+8*1]
;; rsp=0 , %103~2'(= r ) %102~3'(= {| l |} ) %101~0'(= a5◂ [ ] ) %98~1'(= r ) 
; ∎ { 0'(= a5◂ [ ] ) 3'(= {| l |} ) }
; .dlt.ptn 2'(= r )
; .dlt.ptn 1'(= r )
; .mov_ptn2 { 0'(= a5◂ [ ] ) 3'(= {| l |} ) } ⊢ { 0'(= a5◂ [ ] ) 1'(= {| l |} ) }
; .mov_ptn 3'(= {| l |} ) ⊢ 1'(= {| l |} )
	mov rax,r9
	mov r14,rax
	ret
ETR_46: ; and { 0'(= a6◂ [ ] ) 1'(= a6◂ [ ] ) } ⊢ 0'(= a6◂ [ ] ) : ({ _t6 _t6 }→_t6)
;; rsp=0 , %105~1'(= a6◂ [ ] ) %104~0'(= a6◂ [ ] ) 
;; ? 0'(= a6◂ [ ] ) ⊢ 0(<2)◂{ }
	mov rdi,r13
	movzx rax,BYTE [rdi+6]
	cmp rax,0
	jnz LB_11
;; ? 1'(= a6◂ [ ] ) ⊢ 0(<2)◂{ }
	mov rdi,r14
	movzx rax,BYTE [rdi+6]
	cmp rax,0
	jnz LB_11
;; rsp=0 , 
; #45 { } ⊢ 0(<2)◂{ }
;; rsp=0 , %106~0(<2)◂{ } 
; ∎ 0(<2)◂{ }
; .mov_ptn2 0(<2)◂{ } ⊢ 0'(= a6◂ [ ] )
; .mov_ptn 0(<2)◂{ } ⊢ 0'(= a6◂ [ ] )
	mov rax,unt 
	mov rax,unt_0
	mov r13,rax
	ret
LB_11:
;; rsp=0 , %105~1'(= a6◂ [ ] ) %104~0'(= a6◂ [ ] ) 
; #44 { } ⊢ 1(<2)◂{ }
;; rsp=0 , %107~1(<2)◂{ } %105~1'(= a6◂ [ ] ) %104~0'(= a6◂ [ ] ) 
; ∎ 1(<2)◂{ }
; .dlt.ptn 1'(= a6◂ [ ] )
;	.dlt adt ⊢ _  
; .dlt.ptn 0'(= a6◂ [ ] )
;	.dlt adt ⊢ _  
; .mov_ptn2 1(<2)◂{ } ⊢ 0'(= a6◂ [ ] )
; .mov_ptn 1(<2)◂{ } ⊢ 0'(= a6◂ [ ] )
	mov rax,unt 
	mov rax,unt_1
	mov r13,rax
	ret
ETR_47: ; or { 0'(= a6◂ [ ] ) 1'(= a6◂ [ ] ) } ⊢ 0'(= a6◂ [ ] ) : ({ _t6 _t6 }→_t6)
;; rsp=0 , %109~1'(= a6◂ [ ] ) %108~0'(= a6◂ [ ] ) 
;; ? 0'(= a6◂ [ ] ) ⊢ 1(<2)◂{ }
	mov rdi,r13
	movzx rax,BYTE [rdi+6]
	cmp rax,1
	jnz LB_12
;; ? 1'(= a6◂ [ ] ) ⊢ 1(<2)◂{ }
	mov rdi,r14
	movzx rax,BYTE [rdi+6]
	cmp rax,1
	jnz LB_12
;; rsp=0 , 
; #44 { } ⊢ 1(<2)◂{ }
;; rsp=0 , %110~1(<2)◂{ } 
; ∎ 1(<2)◂{ }
; .mov_ptn2 1(<2)◂{ } ⊢ 0'(= a6◂ [ ] )
; .mov_ptn 1(<2)◂{ } ⊢ 0'(= a6◂ [ ] )
	mov rax,unt 
	mov rax,unt_1
	mov r13,rax
	ret
LB_12:
;; rsp=0 , %109~1'(= a6◂ [ ] ) %108~0'(= a6◂ [ ] ) 
; #45 { } ⊢ 0(<2)◂{ }
;; rsp=0 , %111~0(<2)◂{ } %109~1'(= a6◂ [ ] ) %108~0'(= a6◂ [ ] ) 
; ∎ 0(<2)◂{ }
; .dlt.ptn 1'(= a6◂ [ ] )
;	.dlt adt ⊢ _  
; .dlt.ptn 0'(= a6◂ [ ] )
;	.dlt adt ⊢ _  
; .mov_ptn2 0(<2)◂{ } ⊢ 0'(= a6◂ [ ] )
; .mov_ptn 0(<2)◂{ } ⊢ 0'(= a6◂ [ ] )
	mov rax,unt 
	mov rax,unt_0
	mov r13,rax
	ret
ETR_48: ; sub { 0'(= a6◂ [ ] ) 1'(= a6◂ [ ] ) } ⊢ 0'(= a6◂ [ ] ) : ({ _t6 _t6 }→_t6)
;; rsp=0 , %113~1'(= a6◂ [ ] ) %112~0'(= a6◂ [ ] ) 
;; ? 1'(= a6◂ [ ] ) ⊢ 1(<2)◂{ }
	mov rdi,r14
	movzx rax,BYTE [rdi+6]
	cmp rax,1
	jnz LB_13
;; rsp=0 , %112~0'(= a6◂ [ ] ) 
; ∎ 0'(= a6◂ [ ] )
; .mov_ptn2 0'(= a6◂ [ ] ) ⊢ 0'(= a6◂ [ ] )
	ret
LB_13:
;; ? 1'(= a6◂ [ ] ) ⊢ 0(<2)◂{ }
;; rsp=0 , %112~0'(= a6◂ [ ] ) 
; #44 { } ⊢ 1(<2)◂{ }
;; rsp=0 , %114~1(<2)◂{ } %112~0'(= a6◂ [ ] ) 
; ∎ 1(<2)◂{ }
; .dlt.ptn 0'(= a6◂ [ ] )
;	.dlt adt ⊢ _  
; .mov_ptn2 1(<2)◂{ } ⊢ 0'(= a6◂ [ ] )
; .mov_ptn 1(<2)◂{ } ⊢ 0'(= a6◂ [ ] )
	mov rax,unt 
	mov rax,unt_1
	mov r13,rax
	ret
ETR_54: ; s8_of_r64_lst_i { 0'(= r ) 1'(= a2◂ [ r] ) } ⊢ { 0'(= r ) 1'(= {| l |} ) } : ({ _r64 _lst◂_r64 }→{ _r64 _s8 })
;; rsp=0 , %131~1'(= a2◂ [ r] ) %130~0'(= r ) 
;; ? 1'(= a2◂ [ r] ) ⊢ 0(<2)◂{ 2'(= r ) 3'(= a2◂ [ r] ) }
	mov rdi,r14
	movzx rax,BYTE [rdi+6]
	cmp rax,0
	jnz LB_14
	mov rdi,r14
	mov rdi,QWORD [rdi+8+8*0]
	mov r8,rdi
	mov rdi,r14
	mov rdi,QWORD [rdi+8+8*1]
	mov r9,rdi
;; rsp=0 , %133~3'(= a2◂ [ r] ) %132~2'(= r ) %130~0'(= r ) 
; _inc 0'(= r ) ⊢ 0'(= r )
	add r13,1
;; rsp=0 , %134~0'(= r ) %133~3'(= a2◂ [ r] ) %132~2'(= r ) 
; rsp_d=0, #54 { 0'(= r ) 3'(= a2◂ [ r] ) } ⊢ { 0'(= r ) 1'(= {| l |} ) }
	lea rsp,[rsp-8*1]
	mov QWORD [rsp+8*0],r8
; .mov_ptn2 { 0'(= r ) 3'(= a2◂ [ r] ) } ⊢ { 0'(= r ) 1'(= a2◂ [ r] ) }
; .mov_ptn 3'(= a2◂ [ r] ) ⊢ 1'(= a2◂ [ r] )
	mov rax,r9
	mov r14,rax
	call ETR_54

	mov r8,QWORD [rsp-8+8*1]
	lea rsp,[rsp+8*1]
;; rsp=0 , %136~1'(= {| l |} ) %135~0'(= r ) %132~2'(= r ) 
; _dec 0'(= r ) ⊢ 0'(= r )
	sub r13,1
;; rsp=0 , %137~0'(= r ) %136~1'(= {| l |} ) %132~2'(= r ) 
; _sts { 1'(= {| l |} ) 0'(= r ) 2'(= r ) } ⊢ { 1'(= {| l |} ) 0'(= r ) 2'(= r ) }
	mov rax,r14
	mov rdi,0x0000_ffff_ffff_ffff
	and rdi,[rax]
	cmp rdi,r13
	jle err
	mov rsi,r13
	mov rdi,r8
	mov BYTE [rax+8+rsi],dil
;; rsp=0 , %140~2'(= r ) %139~0'(= r ) %138~1'(= {| l |} ) 
; ∎ { 0'(= r ) 1'(= {| l |} ) }
; .dlt.ptn 2'(= r )
; .mov_ptn2 { 0'(= r ) 1'(= {| l |} ) } ⊢ { 0'(= r ) 1'(= {| l |} ) }
	ret
LB_14:
;; ? 1'(= a2◂ [ r] ) ⊢ 1(<2)◂{ }
;; rsp=0 , %130~0'(= r ) 
; _mlc_s8 0'(= r ) ⊢ { 0'(= r ) 1'(= {| l |} ) }
	mov rdi,r13
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	mov rsi,1 
	xor rax,rax
	push rdi
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call calloc
	mov rsp,QWORD [rsp_tmp]  
	pop QWORD [rax] 
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	mov r14,rax
;; rsp=0 , %142~1'(= {| l |} ) %141~0'(= r ) 
; ∎ { 0'(= r ) 1'(= {| l |} ) }
; .mov_ptn2 { 0'(= r ) 1'(= {| l |} ) } ⊢ { 0'(= r ) 1'(= {| l |} ) }
	ret
ETR_55: ; s8_of_r64_lst 0'(= a2◂ [ r] ) ⊢ 0'(= {| l |} ) : (_lst◂_r64→_s8)
;; rsp=0 , %143~0'(= a2◂ [ r] ) 
	jmp LB_15
LB_15:
; $ %[ 0r ] ⊢ %[ 0r ]
;; rsp=0 , %144~%[ 0r ] %143~0'(= a2◂ [ r] ) 
; rsp_d=0, #54 { %[ 0r ] 0'(= a2◂ [ r] ) } ⊢ { 0'(= r ) 1'(= {| l |} ) }
; .mov_ptn2 { %[ 0r ] 0'(= a2◂ [ r] ) } ⊢ { 0'(= r ) 1'(= a2◂ [ r] ) }
; .mov_ptn 0'(= a2◂ [ r] ) ⊢ 1'(= a2◂ [ r] )
	mov rax,r13
	mov r14,rax
; .mov_ptn %[ 0r ] ⊢ 0'(= r )
	mov rax,0
	mov r13,rax
	call ETR_54

;; rsp=0 , %146~1'(= {| l |} ) %145~0'(= r ) 
; ∎ 1'(= {| l |} )
; .dlt.ptn 0'(= r )
; .mov_ptn2 1'(= {| l |} ) ⊢ 0'(= {| l |} )
; .mov_ptn 1'(= {| l |} ) ⊢ 0'(= {| l |} )
	mov rax,r14
	mov r13,rax
	ret
ETR_56: ; s8_of_s8_lst_i { 0'(= r ) 1'(= a2◂ [ {| l |}] ) } ⊢ { 0'(= {| l |} ) 1'(= r ) } : ({ _r64 _lst◂_s8 }→{ _s8 _r64 })
;; rsp=0 , %148~1'(= a2◂ [ {| l |}] ) %147~0'(= r ) 
;; ? 1'(= a2◂ [ {| l |}] ) ⊢ 0(<2)◂{ 2'(= {| l |} ) 3'(= a2◂ [ {| l |}] ) }
	mov rdi,r14
	movzx rax,BYTE [rdi+6]
	cmp rax,0
	jnz LB_16
	mov rdi,r14
	mov rdi,QWORD [rdi+8+8*0]
	mov r8,rdi
	mov rdi,r14
	mov rdi,QWORD [rdi+8+8*1]
	mov r9,rdi
;; rsp=0 , %150~3'(= a2◂ [ {| l |}] ) %149~2'(= {| l |} ) %147~0'(= r ) 
; _s8_len 2'(= {| l |} ) ⊢ { 2'(= {| l |} ) 1'(= r ) }
	mov rdi,r8
	mov rdi,QWORD [rdi]
	mov rsi,0x0000_ffff_ffff_ffff
	and rdi,rsi
	mov r14,rdi
;; rsp=0 , %152~1'(= r ) %151~2'(= {| l |} ) %150~3'(= a2◂ [ {| l |}] ) %147~0'(= r ) 
; _add { 0'(= r ) 1'(= r ) } ⊢ { 0'(= r ) 1'(= r ) }
	add r13,r14
;; rsp=0 , %154~1'(= r ) %153~0'(= r ) %151~2'(= {| l |} ) %150~3'(= a2◂ [ {| l |}] ) 
; rsp_d=0, #56 { 0'(= r ) 3'(= a2◂ [ {| l |}] ) } ⊢ { 0'(= {| l |} ) 3'(= r ) }
	lea rsp,[rsp-8*2]
	mov QWORD [rsp+8*0],r14
	mov QWORD [rsp+8*1],r8
; .mov_ptn2 { 0'(= r ) 3'(= a2◂ [ {| l |}] ) } ⊢ { 0'(= r ) 1'(= a2◂ [ {| l |}] ) }
; .mov_ptn 3'(= a2◂ [ {| l |}] ) ⊢ 1'(= a2◂ [ {| l |}] )
	mov rax,r9
	mov r14,rax
	call ETR_56

	mov r8,QWORD [rsp-8+8*2]
	mov rax,QWORD [rsp-8+8*1]
	mov r9,r14
	mov r14,rax
	lea rsp,[rsp+8*2]
;; rsp=0 , %156~3'(= r ) %155~0'(= {| l |} ) %154~1'(= r ) %151~2'(= {| l |} ) 
	jmp LB_17
LB_17:
; $ %[ 0r ] ⊢ %[ 0r ]
;; rsp=0 , %157~%[ 0r ] %156~3'(= r ) %155~0'(= {| l |} ) %154~1'(= r ) %151~2'(= {| l |} ) 
	jmp LB_18
LB_18:
; $ 1'(= r ) ⊢ 1'(= r ),4'(= r )
	mov rdi,r14
	mov rax,rdi
	mov r10,rax
;; rsp=0 , %159~4'(= r ) %158~1'(= r ) %157~%[ 0r ] %156~3'(= r ) %155~0'(= {| l |} ) %151~2'(= {| l |} ) 
; _rep_movsb { 1'(= r ) 2'(= {| l |} ) %[ 0r ] 0'(= {| l |} ) 3'(= r ) } ⊢ { 1'(= r ) 2'(= {| l |} ) %[ 0r ] 0'(= {| l |} ) 3'(= r ) }
	mov rax,r14
	mov rsi,r8
	mov rdi,0x0000_ffff_ffff_ffff
	and rdi,[rsi]
	sub rdi,rax
	lea rsi,[rsi+8]
	cmp rdi,0
	jl err
	lea rsi,[rsi+0]
	push rsi 
	mov rsi,r13
	mov rdi,0x0000_ffff_ffff_ffff
	and rdi,[rsi]
	sub rdi,rax
	lea rsi,[rsi+8]
	cmp rdi,r9
	jl err
	add rsi,r9
	mov rdi,rsi 
	pop rsi 
	push rcx 
	mov rcx,rax 
	cld 
	rep movsb
	pop rcx 
;; rsp=0 , %164~3'(= r ) %163~0'(= {| l |} ) %162~%[ 0r ] %161~2'(= {| l |} ) %160~1'(= r ) %159~4'(= r ) 
; ∎ { 0'(= {| l |} ) 3'(= r ) }
; .dlt.ptn %[ 0r ]
; .dlt.ptn 2'(= {| l |} )
	mov rdi,r8
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call free 
	mov rsp,QWORD [rsp_tmp] 
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
; .dlt.ptn 1'(= r )
; .dlt.ptn 4'(= r )
; .mov_ptn2 { 0'(= {| l |} ) 3'(= r ) } ⊢ { 0'(= {| l |} ) 1'(= r ) }
; .mov_ptn 3'(= r ) ⊢ 1'(= r )
	mov rax,r9
	mov r14,rax
	ret
LB_16:
;; ? 1'(= a2◂ [ {| l |}] ) ⊢ 1(<2)◂{ }
;; rsp=0 , %147~0'(= r ) 
; _mlc_s8 0'(= r ) ⊢ { 0'(= r ) 1'(= {| l |} ) }
	mov rdi,r13
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	mov rsi,1 
	xor rax,rax
	push rdi
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call calloc
	mov rsp,QWORD [rsp_tmp]  
	pop QWORD [rax] 
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	mov r14,rax
;; rsp=0 , %166~1'(= {| l |} ) %165~0'(= r ) 
	jmp LB_19
LB_19:
; $ %[ 0r ] ⊢ %[ 0r ]
;; rsp=0 , %167~%[ 0r ] %166~1'(= {| l |} ) %165~0'(= r ) 
; ∎ { 1'(= {| l |} ) %[ 0r ] }
; .dlt.ptn 0'(= r )
; .mov_ptn2 { 1'(= {| l |} ) %[ 0r ] } ⊢ { 0'(= {| l |} ) 1'(= r ) }
; .mov_ptn 1'(= {| l |} ) ⊢ 0'(= {| l |} )
	mov rax,r14
	mov r13,rax
; .mov_ptn %[ 0r ] ⊢ 1'(= r )
	mov rax,0
	mov r14,rax
	ret
ETR_57: ; s8_of_s8_lst 0'(= a2◂ [ {| l |}] ) ⊢ 0'(= {| l |} ) : (_lst◂_s8→_s8)
;; rsp=0 , %168~0'(= a2◂ [ {| l |}] ) 
	jmp LB_20
LB_20:
; $ %[ 0r ] ⊢ %[ 0r ]
;; rsp=0 , %169~%[ 0r ] %168~0'(= a2◂ [ {| l |}] ) 
; rsp_d=0, #56 { %[ 0r ] 0'(= a2◂ [ {| l |}] ) } ⊢ { 0'(= {| l |} ) 1'(= r ) }
; .mov_ptn2 { %[ 0r ] 0'(= a2◂ [ {| l |}] ) } ⊢ { 0'(= r ) 1'(= a2◂ [ {| l |}] ) }
; .mov_ptn 0'(= a2◂ [ {| l |}] ) ⊢ 1'(= a2◂ [ {| l |}] )
	mov rax,r13
	mov r14,rax
; .mov_ptn %[ 0r ] ⊢ 0'(= r )
	mov rax,0
	mov r13,rax
	call ETR_56

;; rsp=0 , %171~1'(= r ) %170~0'(= {| l |} ) 
; ∎ 0'(= {| l |} )
; .dlt.ptn 1'(= r )
; .mov_ptn2 0'(= {| l |} ) ⊢ 0'(= {| l |} )
	ret
ETR_65:
	mov r9,0x0000_ffff_ffff_ffff
	and r9,[r13]
	call GRM_65
	ret
GRM_65:
	sub rsp,32
	mov QWORD [rsp+24],r13
	mov QWORD [rsp+16],r14 
	mov QWORD [rsp+8],r9
	lea rax,[r14+1]
	cmp rax,r9
	jg LB_24
	jmp LB_25
LB_24:
	mov r8,unt_1
	jmp LB_22
LB_25:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],10
	jnz LB_26
	jmp LB_27
LB_26:
	mov r8,unt_1
	jmp LB_22
LB_27:
	add r14,1
	jmp LB_23
LB_22:
	lea rsp,[rsp+8*0]
	jmp LB_21
LB_23:
	call GRM_65
	movzx rax,BYTE [r8+6]
	cmp rax,0
	jnz LB_30
	jmp LB_31
LB_30:
	jmp LB_28
LB_31:
	lea rsp,[rsp-8*1]
	mov r8,[r8+8]
; .mov_ptn2 2'(= a5◂ [ ] ) ⊢ 8'(= a5◂ [ ] )
; .mov_ptn 2'(= a5◂ [ ] ) ⊢ 8'(= a5◂ [ ] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_29
LB_28:
	lea rsp,[rsp+8*0]
	jmp LB_21
LB_29:
	mov QWORD [rsp+8*1],r14
	mov r13,QWORD [rsp+16+8*1]
	mov r14,QWORD [rsp+8*1]
	jmp LB_33
LB_33
;; rsp=1 , %244~1'(= r ) %243~0'(= r ) %242~8'(= a5◂ [ ] ) 
	jmp LB_34
LB_34:
; $ %[ "\\n" ] ⊢ %[ "\\n" ]
;; rsp=1 , %245~%[ "\\n" ] %244~1'(= r ) %243~0'(= r ) %242~8'(= a5◂ [ ] ) 
; rsp_d=0, #38 { %[ "\\n" ] 8'(= a5◂ [ ] ) } ⊢ 2'(= a5◂ [ ] )
	lea rsp,[rsp-8*2]
	mov QWORD [rsp+8*0],r13
	mov QWORD [rsp+8*1],r14
; .mov_ptn2 { %[ "\\n" ] 8'(= a5◂ [ ] ) } ⊢ { 0'(= {| l |} ) 1'(= a5◂ [ ] ) }
; .mov_ptn 8'(= a5◂ [ ] ) ⊢ 1'(= a5◂ [ ] )
	mov rax,QWORD [rsp-8+8*3]
	mov r14,rax
; .mov_ptn %[ "\\n" ] ⊢ 0'(= {| l |} )
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	mov rdi,1  
	mov rsi,16
	xor rax,rax
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call calloc
	mov rsp,QWORD [rsp_tmp]  
	mov rdi,2
	mov rsi,0x_40_00_0000_0000_0000
	or rdi,rsi
	mov QWORD [rax],rdi
	mov QWORD [rax+8*1],0
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	mov BYTE [rax+8+0],92
	mov BYTE [rax+8+1],110
	mov r13,rax
	call ETR_38

	mov r14,QWORD [rsp-8+8*2]
	mov rax,QWORD [rsp-8+8*1]
	mov r8,r13
	mov r13,rax
	lea rsp,[rsp+8*3]
;; rsp=0 , %246~2'(= a5◂ [ ] ) %244~1'(= r ) %243~0'(= r ) 
; #22 2'(= a5◂ [ ] ) ⊢ 0(<2)◂2'(= a5◂ [ ] )
;; rsp=0 , %247~0(<2)◂2'(= a5◂ [ ] ) %244~1'(= r ) %243~0'(= r ) 
; ∎ 0(<2)◂2'(= a5◂ [ ] )
; .dlt.ptn 1'(= r )
; .dlt.ptn 0'(= r )
; .mov_ptn2 0(<2)◂2'(= a5◂ [ ] ) ⊢ 2'(= a3◂ [ a5◂ [ ]] )
	mov r13,r8
; .mov_ptn 0(<2)◂0'(= a5◂ [ ] ) ⊢ 2'(= a3◂ [ a5◂ [ ]] )
	mov rax,r13
	mov rdi,rax
	mov rax,[SS_LN_TOP]
	mov rsi,[rax]
	mov QWORD [SS_LN_TOP],rsi 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	jmp LB_32
LB_32:
	movzx rax,BYTE [r8+6]
	cmp rax,0
	jnz LB_21
	pop r14
	pop r9
	add rsp,8
	pop r13
	ret
LB_21:
	lea rax,[r14+1]
	cmp rax,r9
	jg LB_38
	jmp LB_39
LB_38:
	mov r8,unt_1
	jmp LB_36
LB_39:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],9
	jnz LB_40
	jmp LB_41
LB_40:
	mov r8,unt_1
	jmp LB_36
LB_41:
	add r14,1
	jmp LB_37
LB_36:
	lea rsp,[rsp+8*0]
	jmp LB_35
LB_37:
	call GRM_65
	movzx rax,BYTE [r8+6]
	cmp rax,0
	jnz LB_44
	jmp LB_45
LB_44:
	jmp LB_42
LB_45:
	lea rsp,[rsp-8*1]
	mov r8,[r8+8]
; .mov_ptn2 2'(= a5◂ [ ] ) ⊢ 8'(= a5◂ [ ] )
; .mov_ptn 2'(= a5◂ [ ] ) ⊢ 8'(= a5◂ [ ] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_43
LB_42:
	lea rsp,[rsp+8*0]
	jmp LB_35
LB_43:
	mov QWORD [rsp+8*1],r14
	mov r13,QWORD [rsp+16+8*1]
	mov r14,QWORD [rsp+8*1]
	jmp LB_47
LB_47
;; rsp=1 , %250~1'(= r ) %249~0'(= r ) %248~8'(= a5◂ [ ] ) 
	jmp LB_48
LB_48:
; $ %[ "\\t" ] ⊢ %[ "\\t" ]
;; rsp=1 , %251~%[ "\\t" ] %250~1'(= r ) %249~0'(= r ) %248~8'(= a5◂ [ ] ) 
; rsp_d=0, #38 { %[ "\\t" ] 8'(= a5◂ [ ] ) } ⊢ 2'(= a5◂ [ ] )
	lea rsp,[rsp-8*2]
	mov QWORD [rsp+8*0],r13
	mov QWORD [rsp+8*1],r14
; .mov_ptn2 { %[ "\\t" ] 8'(= a5◂ [ ] ) } ⊢ { 0'(= {| l |} ) 1'(= a5◂ [ ] ) }
; .mov_ptn 8'(= a5◂ [ ] ) ⊢ 1'(= a5◂ [ ] )
	mov rax,QWORD [rsp-8+8*3]
	mov r14,rax
; .mov_ptn %[ "\\t" ] ⊢ 0'(= {| l |} )
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	mov rdi,1  
	mov rsi,16
	xor rax,rax
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call calloc
	mov rsp,QWORD [rsp_tmp]  
	mov rdi,2
	mov rsi,0x_40_00_0000_0000_0000
	or rdi,rsi
	mov QWORD [rax],rdi
	mov QWORD [rax+8*1],0
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	mov BYTE [rax+8+0],92
	mov BYTE [rax+8+1],116
	mov r13,rax
	call ETR_38

	mov r14,QWORD [rsp-8+8*2]
	mov rax,QWORD [rsp-8+8*1]
	mov r8,r13
	mov r13,rax
	lea rsp,[rsp+8*3]
;; rsp=0 , %252~2'(= a5◂ [ ] ) %250~1'(= r ) %249~0'(= r ) 
; #22 2'(= a5◂ [ ] ) ⊢ 0(<2)◂2'(= a5◂ [ ] )
;; rsp=0 , %253~0(<2)◂2'(= a5◂ [ ] ) %250~1'(= r ) %249~0'(= r ) 
; ∎ 0(<2)◂2'(= a5◂ [ ] )
; .dlt.ptn 1'(= r )
; .dlt.ptn 0'(= r )
; .mov_ptn2 0(<2)◂2'(= a5◂ [ ] ) ⊢ 2'(= a3◂ [ a5◂ [ ]] )
	mov r13,r8
; .mov_ptn 0(<2)◂0'(= a5◂ [ ] ) ⊢ 2'(= a3◂ [ a5◂ [ ]] )
	mov rax,r13
	mov rdi,rax
	mov rax,[SS_LN_TOP]
	mov rsi,[rax]
	mov QWORD [SS_LN_TOP],rsi 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	jmp LB_46
LB_46:
	movzx rax,BYTE [r8+6]
	cmp rax,0
	jnz LB_35
	pop r14
	pop r9
	add rsp,8
	pop r13
	ret
LB_35:
	lea rax,[r14+1]
	cmp rax,r9
	jg LB_52
	jmp LB_53
LB_52:
	mov r8,unt_1
	jmp LB_50
LB_53:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],92
	jnz LB_54
	jmp LB_55
LB_54:
	mov r8,unt_1
	jmp LB_50
LB_55:
	add r14,1
	jmp LB_51
LB_50:
	lea rsp,[rsp+8*0]
	jmp LB_49
LB_51:
	call GRM_65
	movzx rax,BYTE [r8+6]
	cmp rax,0
	jnz LB_58
	jmp LB_59
LB_58:
	jmp LB_56
LB_59:
	lea rsp,[rsp-8*1]
	mov r8,[r8+8]
; .mov_ptn2 2'(= a5◂ [ ] ) ⊢ 8'(= a5◂ [ ] )
; .mov_ptn 2'(= a5◂ [ ] ) ⊢ 8'(= a5◂ [ ] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_57
LB_56:
	lea rsp,[rsp+8*0]
	jmp LB_49
LB_57:
	mov QWORD [rsp+8*1],r14
	mov r13,QWORD [rsp+16+8*1]
	mov r14,QWORD [rsp+8*1]
	jmp LB_61
LB_61
;; rsp=1 , %256~1'(= r ) %255~0'(= r ) %254~8'(= a5◂ [ ] ) 
	jmp LB_62
LB_62:
; $ %[ "\\\\" ] ⊢ %[ "\\\\" ]
;; rsp=1 , %257~%[ "\\\\" ] %256~1'(= r ) %255~0'(= r ) %254~8'(= a5◂ [ ] ) 
; rsp_d=0, #38 { %[ "\\\\" ] 8'(= a5◂ [ ] ) } ⊢ 2'(= a5◂ [ ] )
	lea rsp,[rsp-8*2]
	mov QWORD [rsp+8*0],r13
	mov QWORD [rsp+8*1],r14
; .mov_ptn2 { %[ "\\\\" ] 8'(= a5◂ [ ] ) } ⊢ { 0'(= {| l |} ) 1'(= a5◂ [ ] ) }
; .mov_ptn 8'(= a5◂ [ ] ) ⊢ 1'(= a5◂ [ ] )
	mov rax,QWORD [rsp-8+8*3]
	mov r14,rax
; .mov_ptn %[ "\\\\" ] ⊢ 0'(= {| l |} )
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	mov rdi,1  
	mov rsi,16
	xor rax,rax
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call calloc
	mov rsp,QWORD [rsp_tmp]  
	mov rdi,2
	mov rsi,0x_40_00_0000_0000_0000
	or rdi,rsi
	mov QWORD [rax],rdi
	mov QWORD [rax+8*1],0
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	mov BYTE [rax+8+0],92
	mov BYTE [rax+8+1],92
	mov r13,rax
	call ETR_38

	mov r14,QWORD [rsp-8+8*2]
	mov rax,QWORD [rsp-8+8*1]
	mov r8,r13
	mov r13,rax
	lea rsp,[rsp+8*3]
;; rsp=0 , %258~2'(= a5◂ [ ] ) %256~1'(= r ) %255~0'(= r ) 
; #22 2'(= a5◂ [ ] ) ⊢ 0(<2)◂2'(= a5◂ [ ] )
;; rsp=0 , %259~0(<2)◂2'(= a5◂ [ ] ) %256~1'(= r ) %255~0'(= r ) 
; ∎ 0(<2)◂2'(= a5◂ [ ] )
; .dlt.ptn 1'(= r )
; .dlt.ptn 0'(= r )
; .mov_ptn2 0(<2)◂2'(= a5◂ [ ] ) ⊢ 2'(= a3◂ [ a5◂ [ ]] )
	mov r13,r8
; .mov_ptn 0(<2)◂0'(= a5◂ [ ] ) ⊢ 2'(= a3◂ [ a5◂ [ ]] )
	mov rax,r13
	mov rdi,rax
	mov rax,[SS_LN_TOP]
	mov rsi,[rax]
	mov QWORD [SS_LN_TOP],rsi 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	jmp LB_60
LB_60:
	movzx rax,BYTE [r8+6]
	cmp rax,0
	jnz LB_49
	pop r14
	pop r9
	add rsp,8
	pop r13
	ret
LB_49:
	lea rax,[r14+1]
	cmp rax,r9
	jg LB_66
	jmp LB_67
LB_66:
	mov r8,unt_1
	jmp LB_64
LB_67:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],34
	jnz LB_68
	jmp LB_69
LB_68:
	mov r8,unt_1
	jmp LB_64
LB_69:
	add r14,1
	jmp LB_65
LB_64:
	lea rsp,[rsp+8*0]
	jmp LB_63
LB_65:
	call GRM_65
	movzx rax,BYTE [r8+6]
	cmp rax,0
	jnz LB_72
	jmp LB_73
LB_72:
	jmp LB_70
LB_73:
	lea rsp,[rsp-8*1]
	mov r8,[r8+8]
; .mov_ptn2 2'(= a5◂ [ ] ) ⊢ 8'(= a5◂ [ ] )
; .mov_ptn 2'(= a5◂ [ ] ) ⊢ 8'(= a5◂ [ ] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_71
LB_70:
	lea rsp,[rsp+8*0]
	jmp LB_63
LB_71:
	mov QWORD [rsp+8*1],r14
	mov r13,QWORD [rsp+16+8*1]
	mov r14,QWORD [rsp+8*1]
	jmp LB_75
LB_75
;; rsp=1 , %262~1'(= r ) %261~0'(= r ) %260~8'(= a5◂ [ ] ) 
	jmp LB_76
LB_76:
; $ %[ "\\\"" ] ⊢ %[ "\\\"" ]
;; rsp=1 , %263~%[ "\\\"" ] %262~1'(= r ) %261~0'(= r ) %260~8'(= a5◂ [ ] ) 
; rsp_d=0, #38 { %[ "\\\"" ] 8'(= a5◂ [ ] ) } ⊢ 2'(= a5◂ [ ] )
	lea rsp,[rsp-8*2]
	mov QWORD [rsp+8*0],r13
	mov QWORD [rsp+8*1],r14
; .mov_ptn2 { %[ "\\\"" ] 8'(= a5◂ [ ] ) } ⊢ { 0'(= {| l |} ) 1'(= a5◂ [ ] ) }
; .mov_ptn 8'(= a5◂ [ ] ) ⊢ 1'(= a5◂ [ ] )
	mov rax,QWORD [rsp-8+8*3]
	mov r14,rax
; .mov_ptn %[ "\\\"" ] ⊢ 0'(= {| l |} )
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	mov rdi,1  
	mov rsi,16
	xor rax,rax
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call calloc
	mov rsp,QWORD [rsp_tmp]  
	mov rdi,2
	mov rsi,0x_40_00_0000_0000_0000
	or rdi,rsi
	mov QWORD [rax],rdi
	mov QWORD [rax+8*1],0
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	mov BYTE [rax+8+0],92
	mov BYTE [rax+8+1],34
	mov r13,rax
	call ETR_38

	mov r14,QWORD [rsp-8+8*2]
	mov rax,QWORD [rsp-8+8*1]
	mov r8,r13
	mov r13,rax
	lea rsp,[rsp+8*3]
;; rsp=0 , %264~2'(= a5◂ [ ] ) %262~1'(= r ) %261~0'(= r ) 
; #22 2'(= a5◂ [ ] ) ⊢ 0(<2)◂2'(= a5◂ [ ] )
;; rsp=0 , %265~0(<2)◂2'(= a5◂ [ ] ) %262~1'(= r ) %261~0'(= r ) 
; ∎ 0(<2)◂2'(= a5◂ [ ] )
; .dlt.ptn 1'(= r )
; .dlt.ptn 0'(= r )
; .mov_ptn2 0(<2)◂2'(= a5◂ [ ] ) ⊢ 2'(= a3◂ [ a5◂ [ ]] )
	mov r13,r8
; .mov_ptn 0(<2)◂0'(= a5◂ [ ] ) ⊢ 2'(= a3◂ [ a5◂ [ ]] )
	mov rax,r13
	mov rdi,rax
	mov rax,[SS_LN_TOP]
	mov rsi,[rax]
	mov QWORD [SS_LN_TOP],rsi 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	jmp LB_74
LB_74:
	movzx rax,BYTE [r8+6]
	cmp rax,0
	jnz LB_63
	pop r14
	pop r9
	add rsp,8
	pop r13
	ret
LB_63:
	cmp r14,r9
	jge LB_80
	jmp LB_81
LB_80:
	mov r8,unt_1 
	jmp LB_78
LB_81:
	movzx rdi,BYTE [r13+8+r14]
	push rdi 
	add r14,1 
	jmp LB_79
LB_78:
	lea rsp,[rsp+8*0]
	jmp LB_77
LB_79:
	call GRM_65
	movzx rax,BYTE [r8+6]
	cmp rax,0
	jnz LB_84
	jmp LB_85
LB_84:
	jmp LB_82
LB_85:
	lea rsp,[rsp-8*1]
	mov r8,[r8+8]
; .mov_ptn2 2'(= a5◂ [ ] ) ⊢ 9'(= a5◂ [ ] )
; .mov_ptn 2'(= a5◂ [ ] ) ⊢ 9'(= a5◂ [ ] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_83
LB_82:
	lea rsp,[rsp+8*1]
	jmp LB_77
LB_83:
	mov QWORD [rsp+8*2],r14
	mov r13,QWORD [rsp+16+8*2]
	mov r14,QWORD [rsp+8*2]
	jmp LB_87
LB_87
;; rsp=2 , %269~1'(= r ) %268~0'(= r ) %267~9'(= a5◂ [ ] ) %266~8'(= r ) 
	mov rdi,0
	cmp QWORD [rsp-8+8*2],rdi
	jnz LB_88
;; rsp=2 , %269~1'(= r ) %268~0'(= r ) %267~9'(= a5◂ [ ] ) %266~8'(= r ) 
	jmp LB_89
LB_89:
; $ %[ "\\0" ] ⊢ %[ "\\0" ]
;; rsp=2 , %270~%[ "\\0" ] %269~1'(= r ) %268~0'(= r ) %267~9'(= a5◂ [ ] ) %266~8'(= r ) 
; rsp_d=0, #38 { %[ "\\0" ] 9'(= a5◂ [ ] ) } ⊢ 2'(= a5◂ [ ] )
	lea rsp,[rsp-8*2]
	mov QWORD [rsp+8*0],r13
	mov QWORD [rsp+8*1],r14
; .mov_ptn2 { %[ "\\0" ] 9'(= a5◂ [ ] ) } ⊢ { 0'(= {| l |} ) 1'(= a5◂ [ ] ) }
; .mov_ptn 9'(= a5◂ [ ] ) ⊢ 1'(= a5◂ [ ] )
	mov rax,QWORD [rsp-8+8*3]
	mov r14,rax
; .mov_ptn %[ "\\0" ] ⊢ 0'(= {| l |} )
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	mov rdi,1  
	mov rsi,16
	xor rax,rax
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call calloc
	mov rsp,QWORD [rsp_tmp]  
	mov rdi,2
	mov rsi,0x_40_00_0000_0000_0000
	or rdi,rsi
	mov QWORD [rax],rdi
	mov QWORD [rax+8*1],0
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	mov BYTE [rax+8+0],92
	mov BYTE [rax+8+1],48
	mov r13,rax
	call ETR_38

	mov r14,QWORD [rsp-8+8*2]
	mov rax,QWORD [rsp-8+8*1]
	mov r8,r13
	mov r13,rax
	lea rsp,[rsp+8*3]
;; rsp=1 , %271~2'(= a5◂ [ ] ) %269~1'(= r ) %268~0'(= r ) %266~8'(= r ) 
; #22 2'(= a5◂ [ ] ) ⊢ 0(<2)◂2'(= a5◂ [ ] )
;; rsp=1 , %272~0(<2)◂2'(= a5◂ [ ] ) %269~1'(= r ) %268~0'(= r ) %266~8'(= r ) 
; ∎ 0(<2)◂2'(= a5◂ [ ] )
; .dlt.ptn 1'(= r )
; .dlt.ptn 0'(= r )
; .dlt.ptn 8'(= r )
; .mov_ptn2 0(<2)◂2'(= a5◂ [ ] ) ⊢ 2'(= a3◂ [ a5◂ [ ]] )
	mov r13,r8
; .mov_ptn 0(<2)◂0'(= a5◂ [ ] ) ⊢ 2'(= a3◂ [ a5◂ [ ]] )
	mov rax,r13
	mov rdi,rax
	mov rax,[SS_LN_TOP]
	mov rsi,[rax]
	mov QWORD [SS_LN_TOP],rsi 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	lea rsp,[rsp+8*1]
	jmp LB_86
LB_88:
;; rsp=1 , %269~1'(= r ) %268~0'(= r ) %267~9'(= a5◂ [ ] ) %266~8'(= r ) 
; rsp_d=0, #40 { 8'(= r ) 9'(= a5◂ [ ] ) } ⊢ 2'(= a5◂ [ ] )
	lea rsp,[rsp-8*2]
	mov QWORD [rsp+8*0],r13
	mov QWORD [rsp+8*1],r14
; .mov_ptn2 { 8'(= r ) 9'(= a5◂ [ ] ) } ⊢ { 0'(= r ) 1'(= a5◂ [ ] ) }
; .mov_ptn 9'(= a5◂ [ ] ) ⊢ 1'(= a5◂ [ ] )
	mov rax,QWORD [rsp-8+8*2]
	mov r14,rax
; .mov_ptn 8'(= r ) ⊢ 0'(= r )
	mov rax,QWORD [rsp-8+8*3]
	mov r13,rax
	call ETR_40

	mov r14,QWORD [rsp-8+8*2]
	mov rax,QWORD [rsp-8+8*1]
	mov r8,r13
	mov r13,rax
	lea rsp,[rsp+8*3]
;; rsp=0 , %273~2'(= a5◂ [ ] ) %269~1'(= r ) %268~0'(= r ) 
; #22 2'(= a5◂ [ ] ) ⊢ 0(<2)◂2'(= a5◂ [ ] )
;; rsp=0 , %274~0(<2)◂2'(= a5◂ [ ] ) %269~1'(= r ) %268~0'(= r ) 
; ∎ 0(<2)◂2'(= a5◂ [ ] )
; .dlt.ptn 1'(= r )
; .dlt.ptn 0'(= r )
; .mov_ptn2 0(<2)◂2'(= a5◂ [ ] ) ⊢ 2'(= a3◂ [ a5◂ [ ]] )
	mov r13,r8
; .mov_ptn 0(<2)◂0'(= a5◂ [ ] ) ⊢ 2'(= a3◂ [ a5◂ [ ]] )
	mov rax,r13
	mov rdi,rax
	mov rax,[SS_LN_TOP]
	mov rsi,[rax]
	mov QWORD [SS_LN_TOP],rsi 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	jmp LB_86
LB_86:
	movzx rax,BYTE [r8+6]
	cmp rax,0
	jnz LB_77
	pop r14
	pop r9
	add rsp,8
	pop r13
	ret
LB_77:
	mov QWORD [rsp+8*0],r14
	mov r13,QWORD [rsp+16+8*0]
	mov r14,QWORD [rsp+8*0]
	jmp LB_92
LB_92
;; rsp=0 , %276~1'(= r ) %275~0'(= r ) 
; #32 { } ⊢ 2(<4)◂{ }
;; rsp=0 , %277~2(<4)◂{ } %276~1'(= r ) %275~0'(= r ) 
; #22 2(<4)◂{ } ⊢ 0(<2)◂2(<4)◂{ }
;; rsp=0 , %278~0(<2)◂2(<4)◂{ } %276~1'(= r ) %275~0'(= r ) 
; ∎ 0(<2)◂2(<4)◂{ }
; .dlt.ptn 1'(= r )
; .dlt.ptn 0'(= r )
; .mov_ptn2 0(<2)◂2(<4)◂{ } ⊢ 2'(= a3◂ [ a5◂ [ ]] )
; .mov_ptn 0(<2)◂2(<4)◂{ } ⊢ 2'(= a3◂ [ a5◂ [ ]] )
	mov rax,unt 
	mov rax,unt_2
	mov rdi,rax
	mov rax,[SS_LN_TOP]
	mov rsi,[rax]
	mov QWORD [SS_LN_TOP],rsi 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	jmp LB_91
LB_91:
	movzx rax,BYTE [r8+6]
	cmp rax,0
	jnz LB_90
	pop r14
	pop r9
	add rsp,8
	pop r13
	ret
LB_90:
	pop rdi
	pop r9 
	pop r14
	pop r13
	ret
ETR_66: ; mk_esc_s8 0'(= {| l |} ) ⊢ { 0'(= {| l |} ) 1'(= {| l |} ) } : (_s8→{ _s8 _s8 })
;; rsp=0 , %279~0'(= {| l |} ) 
	jmp LB_93
LB_93:
; $ %[ 0r ] ⊢ %[ 0r ]
;; rsp=0 , %280~%[ 0r ] %279~0'(= {| l |} ) 
; rsp_d=0, #65 { 0'(= {| l |} ) %[ 0r ] } ⊢ { 0'(= {| l |} ) 1'(= r ) 2'(= a3◂ [ a5◂ [ ]] ) }
; .mov_ptn2 { 0'(= {| l |} ) %[ 0r ] } ⊢ { 0'(= {| l |} ) 1'(= r ) }
; .mov_ptn %[ 0r ] ⊢ 1'(= r )
	mov rax,0
	mov r14,rax
	call ETR_65

;; rsp=0 , %283~2'(= a3◂ [ a5◂ [ ]] ) %282~1'(= r ) %281~0'(= {| l |} ) 
;; ? 2'(= a3◂ [ a5◂ [ ]] ) ⊢ 0(<2)◂3'(= a5◂ [ ] )
	mov rdi,r8
	movzx rax,BYTE [rdi+6]
	cmp rax,0
	jnz LB_94
	mov rax,QWORD [rdi+8]
	mov r9,rax
;; rsp=0 , %284~3'(= a5◂ [ ] ) %282~1'(= r ) %281~0'(= {| l |} ) 
; rsp_d=0, #43 3'(= a5◂ [ ] ) ⊢ { 3'(= a5◂ [ ] ) 2'(= {| l |} ) }
	lea rsp,[rsp-8*2]
	mov QWORD [rsp+8*0],r13
	mov QWORD [rsp+8*1],r14
; .mov_ptn2 3'(= a5◂ [ ] ) ⊢ 0'(= a5◂ [ ] )
; .mov_ptn 3'(= a5◂ [ ] ) ⊢ 0'(= a5◂ [ ] )
	mov rax,r9
	mov r13,rax
	call ETR_43

	mov rax,QWORD [rsp-8+8*2]
	mov r8,r14
	mov r14,rax
	mov rax,QWORD [rsp-8+8*1]
	mov r9,r13
	mov r13,rax
	lea rsp,[rsp+8*2]
;; rsp=0 , %286~2'(= {| l |} ) %285~3'(= a5◂ [ ] ) %282~1'(= r ) %281~0'(= {| l |} ) 
; ∎ { 0'(= {| l |} ) 2'(= {| l |} ) }
; .dlt.ptn 3'(= a5◂ [ ] )
;	.dlt adt ⊢ _  
; .dlt.ptn 1'(= r )
; .mov_ptn2 { 0'(= {| l |} ) 2'(= {| l |} ) } ⊢ { 0'(= {| l |} ) 1'(= {| l |} ) }
; .mov_ptn 2'(= {| l |} ) ⊢ 1'(= {| l |} )
	mov rax,r8
	mov r14,rax
	ret
LB_94:
;; rsp=0 , %283~2'(= a3◂ [ a5◂ [ ]] ) %282~1'(= r ) %281~0'(= {| l |} ) 
	jmp LB_95
LB_95:
; $ %[ "esc_stg_ltr" ] ⊢ %[ "esc_stg_ltr" ]
;; rsp=0 , %287~%[ "esc_stg_ltr" ] %283~2'(= a3◂ [ a5◂ [ ]] ) %282~1'(= r ) %281~0'(= {| l |} ) 
; _emt %[ "esc_stg_ltr" ] ⊢ %[ "esc_stg_ltr" ]
	jmp LB_97
LB_96: db 95,101,109,116,58,0
LB_97:
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax  
	mov rdi,LB_96
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call printf 
	mov rsp,QWORD [rsp_tmp]
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	jmp LB_99
LB_98: db 34,101,115,99,95,115,116,103,95,108,116,114,34,0
LB_99:
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax  
	mov rdi,LB_98
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call printf 
	mov rsp,QWORD [rsp_tmp]
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	jmp LB_101
LB_100: db 10,0
LB_101:
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax  
	mov rdi,LB_100
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call printf 
	mov rsp,QWORD [rsp_tmp]
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	jmp LB_102
LB_102:
;; rsp=0 , %288~%[ "esc_stg_ltr" ] %283~2'(= a3◂ [ a5◂ [ ]] ) %282~1'(= r ) %281~0'(= {| l |} ) 
; ∎| 
	jmp LB_104
LB_103: db 101,120,110,32,54,51,54,52,58,10,0
LB_104:
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax  
	mov rdi,LB_103
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call printf 
	mov rsp,QWORD [rsp_tmp]
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	jmp err
ETR_67:
	mov r9,0x0000_ffff_ffff_ffff
	and r9,[r13]
	call GRM_67
	ret
GRM_67:
	sub rsp,32
	mov QWORD [rsp+24],r13
	mov QWORD [rsp+16],r14 
	mov QWORD [rsp+8],r9
	lea rax,[r14+1]
	cmp rax,r9
	jg LB_108
	jmp LB_109
LB_108:
	mov r8,unt_1
	jmp LB_106
LB_109:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],34
	jnz LB_110
	jmp LB_111
LB_110:
	mov r8,unt_1
	jmp LB_106
LB_111:
	add r14,1
	jmp LB_107
LB_106:
	lea rsp,[rsp+8*0]
	jmp LB_105
LB_107:
	call GRM_68
	movzx rax,BYTE [r8+6]
	cmp rax,0
	jnz LB_114
	jmp LB_115
LB_114:
	jmp LB_112
LB_115:
	lea rsp,[rsp-8*1]
	mov r8,[r8+8]
; .mov_ptn2 2'(= a5◂ [ ] ) ⊢ 8'(= a5◂ [ ] )
; .mov_ptn 2'(= a5◂ [ ] ) ⊢ 8'(= a5◂ [ ] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_113
LB_112:
	lea rsp,[rsp+8*0]
	jmp LB_105
LB_113:
	mov QWORD [rsp+8*1],r14
	mov r13,QWORD [rsp+16+8*1]
	mov r14,QWORD [rsp+8*1]
	jmp LB_117
LB_117
;; rsp=1 , %291~1'(= r ) %290~0'(= r ) %289~8'(= a5◂ [ ] ) 
; rsp_d=0, #43 8'(= a5◂ [ ] ) ⊢ { 3'(= a5◂ [ ] ) 2'(= {| l |} ) }
	lea rsp,[rsp-8*2]
	mov QWORD [rsp+8*0],r13
	mov QWORD [rsp+8*1],r14
; .mov_ptn2 8'(= a5◂ [ ] ) ⊢ 0'(= a5◂ [ ] )
; .mov_ptn 8'(= a5◂ [ ] ) ⊢ 0'(= a5◂ [ ] )
	mov rax,QWORD [rsp-8+8*3]
	mov r13,rax
	call ETR_43

	mov rax,QWORD [rsp-8+8*2]
	mov r8,r14
	mov r14,rax
	mov rax,QWORD [rsp-8+8*1]
	mov r9,r13
	mov r13,rax
	lea rsp,[rsp+8*3]
;; rsp=0 , %293~2'(= {| l |} ) %292~3'(= a5◂ [ ] ) %291~1'(= r ) %290~0'(= r ) 
; #22 2'(= {| l |} ) ⊢ 0(<2)◂2'(= {| l |} )
;; rsp=0 , %294~0(<2)◂2'(= {| l |} ) %292~3'(= a5◂ [ ] ) %291~1'(= r ) %290~0'(= r ) 
; ∎ 0(<2)◂2'(= {| l |} )
; .dlt.ptn 3'(= a5◂ [ ] )
;	.dlt adt ⊢ _  
; .dlt.ptn 1'(= r )
; .dlt.ptn 0'(= r )
; .mov_ptn2 0(<2)◂2'(= {| l |} ) ⊢ 2'(= a3◂ [ {| l |}] )
	mov r13,r8
; .mov_ptn 0(<2)◂0'(= {| l |} ) ⊢ 2'(= a3◂ [ {| l |}] )
	mov rax,r13
	mov BYTE [rax+6],0
	mov r8,rax
	jmp LB_116
LB_116:
	movzx rax,BYTE [r8+6]
	cmp rax,0
	jnz LB_105
	pop r14
	pop r9
	add rsp,8
	pop r13
	ret
LB_105:
	pop rdi
	pop r9 
	pop r14
	pop r13
	ret
ETR_68:
	mov r9,0x0000_ffff_ffff_ffff
	and r9,[r13]
	call GRM_68
	ret
GRM_68:
	sub rsp,32
	mov QWORD [rsp+24],r13
	mov QWORD [rsp+16],r14 
	mov QWORD [rsp+8],r9
	lea rax,[r14+1]
	cmp rax,r9
	jg LB_121
	jmp LB_122
LB_121:
	mov r8,unt_1
	jmp LB_119
LB_122:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],10
	jnz LB_123
	jmp LB_124
LB_123:
	mov r8,unt_1
	jmp LB_119
LB_124:
	add r14,1
	jmp LB_120
LB_119:
	lea rsp,[rsp+8*0]
	jmp LB_118
LB_120:
	mov QWORD [rsp+8*0],r14
	mov r13,QWORD [rsp+16+8*0]
	mov r14,QWORD [rsp+8*0]
	jmp LB_126
LB_126
;; rsp=0 , %297~1'(= r ) %296~0'(= r ) %295~{ } 
; #23 { } ⊢ 1(<2)◂{ }
;; rsp=0 , %298~1(<2)◂{ } %297~1'(= r ) %296~0'(= r ) %295~{ } 
; ∎ 1(<2)◂{ }
; .dlt.ptn 1'(= r )
; .dlt.ptn 0'(= r )
; .dlt.ptn { }
; .mov_ptn2 1(<2)◂{ } ⊢ 2'(= a3◂ [ a5◂ [ ]] )
; .mov_ptn 1(<2)◂{ } ⊢ 2'(= a3◂ [ a5◂ [ ]] )
	mov rax,unt 
	mov rax,unt_1
	mov r8,rax
	jmp LB_125
LB_125:
	movzx rax,BYTE [r8+6]
	cmp rax,0
	jnz LB_118
	pop r14
	pop r9
	add rsp,8
	pop r13
	ret
LB_118:
	lea rax,[r14+1]
	cmp rax,r9
	jg LB_130
	jmp LB_131
LB_130:
	mov r8,unt_1
	jmp LB_128
LB_131:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],92
	jnz LB_132
	jmp LB_133
LB_132:
	mov r8,unt_1
	jmp LB_128
LB_133:
	add r14,1
	jmp LB_129
LB_128:
	lea rsp,[rsp+8*0]
	jmp LB_127
LB_129:
	call GRM_69
	movzx rax,BYTE [r8+6]
	cmp rax,0
	jnz LB_136
	jmp LB_137
LB_136:
	jmp LB_134
LB_137:
	lea rsp,[rsp-8*1]
	mov r8,[r8+8]
; .mov_ptn2 2'(= r ) ⊢ 8'(= r )
; .mov_ptn 2'(= r ) ⊢ 8'(= r )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_135
LB_134:
	lea rsp,[rsp+8*0]
	jmp LB_127
LB_135:
	call GRM_68
	movzx rax,BYTE [r8+6]
	cmp rax,0
	jnz LB_140
	jmp LB_141
LB_140:
	jmp LB_138
LB_141:
	lea rsp,[rsp-8*1]
	mov r8,[r8+8]
; .mov_ptn2 2'(= a5◂ [ ] ) ⊢ 9'(= a5◂ [ ] )
; .mov_ptn 2'(= a5◂ [ ] ) ⊢ 9'(= a5◂ [ ] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_139
LB_138:
	lea rsp,[rsp+8*1]
	jmp LB_127
LB_139:
	mov QWORD [rsp+8*2],r14
	mov r13,QWORD [rsp+16+8*2]
	mov r14,QWORD [rsp+8*2]
	jmp LB_143
LB_143
;; rsp=2 , %302~1'(= r ) %301~0'(= r ) %300~9'(= a5◂ [ ] ) %299~8'(= r ) 
; rsp_d=0, #40 { 8'(= r ) 9'(= a5◂ [ ] ) } ⊢ 2'(= a5◂ [ ] )
	lea rsp,[rsp-8*2]
	mov QWORD [rsp+8*0],r13
	mov QWORD [rsp+8*1],r14
; .mov_ptn2 { 8'(= r ) 9'(= a5◂ [ ] ) } ⊢ { 0'(= r ) 1'(= a5◂ [ ] ) }
; .mov_ptn 9'(= a5◂ [ ] ) ⊢ 1'(= a5◂ [ ] )
	mov rax,QWORD [rsp-8+8*3]
	mov r14,rax
; .mov_ptn 8'(= r ) ⊢ 0'(= r )
	mov rax,QWORD [rsp-8+8*4]
	mov r13,rax
	call ETR_40

	mov r14,QWORD [rsp-8+8*2]
	mov rax,QWORD [rsp-8+8*1]
	mov r8,r13
	mov r13,rax
	lea rsp,[rsp+8*4]
;; rsp=0 , %303~2'(= a5◂ [ ] ) %302~1'(= r ) %301~0'(= r ) 
; #22 2'(= a5◂ [ ] ) ⊢ 0(<2)◂2'(= a5◂ [ ] )
;; rsp=0 , %304~0(<2)◂2'(= a5◂ [ ] ) %302~1'(= r ) %301~0'(= r ) 
; ∎ 0(<2)◂2'(= a5◂ [ ] )
; .dlt.ptn 1'(= r )
; .dlt.ptn 0'(= r )
; .mov_ptn2 0(<2)◂2'(= a5◂ [ ] ) ⊢ 2'(= a3◂ [ a5◂ [ ]] )
	mov r13,r8
; .mov_ptn 0(<2)◂0'(= a5◂ [ ] ) ⊢ 2'(= a3◂ [ a5◂ [ ]] )
	mov rax,r13
	mov rdi,rax
	mov rax,[SS_LN_TOP]
	mov rsi,[rax]
	mov QWORD [SS_LN_TOP],rsi 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	jmp LB_142
LB_142:
	movzx rax,BYTE [r8+6]
	cmp rax,0
	jnz LB_127
	pop r14
	pop r9
	add rsp,8
	pop r13
	ret
LB_127:
	lea rax,[r14+1]
	cmp rax,r9
	jg LB_147
	jmp LB_148
LB_147:
	mov r8,unt_1
	jmp LB_145
LB_148:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],34
	jnz LB_149
	jmp LB_150
LB_149:
	mov r8,unt_1
	jmp LB_145
LB_150:
	add r14,1
	jmp LB_146
LB_145:
	lea rsp,[rsp+8*0]
	jmp LB_144
LB_146:
	mov QWORD [rsp+8*0],r14
	mov r13,QWORD [rsp+16+8*0]
	mov r14,QWORD [rsp+8*0]
	jmp LB_152
LB_152
;; rsp=0 , %306~1'(= r ) %305~0'(= r ) 
; #32 { } ⊢ 2(<4)◂{ }
;; rsp=0 , %307~2(<4)◂{ } %306~1'(= r ) %305~0'(= r ) 
; #22 2(<4)◂{ } ⊢ 0(<2)◂2(<4)◂{ }
;; rsp=0 , %308~0(<2)◂2(<4)◂{ } %306~1'(= r ) %305~0'(= r ) 
; ∎ 0(<2)◂2(<4)◂{ }
; .dlt.ptn 1'(= r )
; .dlt.ptn 0'(= r )
; .mov_ptn2 0(<2)◂2(<4)◂{ } ⊢ 2'(= a3◂ [ a5◂ [ ]] )
; .mov_ptn 0(<2)◂2(<4)◂{ } ⊢ 2'(= a3◂ [ a5◂ [ ]] )
	mov rax,unt 
	mov rax,unt_2
	mov rdi,rax
	mov rax,[SS_LN_TOP]
	mov rsi,[rax]
	mov QWORD [SS_LN_TOP],rsi 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	jmp LB_151
LB_151:
	movzx rax,BYTE [r8+6]
	cmp rax,0
	jnz LB_144
	pop r14
	pop r9
	add rsp,8
	pop r13
	ret
LB_144:
	cmp r14,r9
	jge LB_156
	jmp LB_157
LB_156:
	mov r8,unt_1 
	jmp LB_154
LB_157:
	movzx rdi,BYTE [r13+8+r14]
	push rdi 
	add r14,1 
	jmp LB_155
LB_154:
	lea rsp,[rsp+8*0]
	jmp LB_153
LB_155:
	call GRM_68
	movzx rax,BYTE [r8+6]
	cmp rax,0
	jnz LB_160
	jmp LB_161
LB_160:
	jmp LB_158
LB_161:
	lea rsp,[rsp-8*1]
	mov r8,[r8+8]
; .mov_ptn2 2'(= a5◂ [ ] ) ⊢ 9'(= a5◂ [ ] )
; .mov_ptn 2'(= a5◂ [ ] ) ⊢ 9'(= a5◂ [ ] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_159
LB_158:
	lea rsp,[rsp+8*1]
	jmp LB_153
LB_159:
	mov QWORD [rsp+8*2],r14
	mov r13,QWORD [rsp+16+8*2]
	mov r14,QWORD [rsp+8*2]
	jmp LB_163
LB_163
;; rsp=2 , %312~1'(= r ) %311~0'(= r ) %310~9'(= a5◂ [ ] ) %309~8'(= r ) 
; rsp_d=0, #40 { 8'(= r ) 9'(= a5◂ [ ] ) } ⊢ 2'(= a5◂ [ ] )
	lea rsp,[rsp-8*2]
	mov QWORD [rsp+8*0],r13
	mov QWORD [rsp+8*1],r14
; .mov_ptn2 { 8'(= r ) 9'(= a5◂ [ ] ) } ⊢ { 0'(= r ) 1'(= a5◂ [ ] ) }
; .mov_ptn 9'(= a5◂ [ ] ) ⊢ 1'(= a5◂ [ ] )
	mov rax,QWORD [rsp-8+8*3]
	mov r14,rax
; .mov_ptn 8'(= r ) ⊢ 0'(= r )
	mov rax,QWORD [rsp-8+8*4]
	mov r13,rax
	call ETR_40

	mov r14,QWORD [rsp-8+8*2]
	mov rax,QWORD [rsp-8+8*1]
	mov r8,r13
	mov r13,rax
	lea rsp,[rsp+8*4]
;; rsp=0 , %313~2'(= a5◂ [ ] ) %312~1'(= r ) %311~0'(= r ) 
; #22 2'(= a5◂ [ ] ) ⊢ 0(<2)◂2'(= a5◂ [ ] )
;; rsp=0 , %314~0(<2)◂2'(= a5◂ [ ] ) %312~1'(= r ) %311~0'(= r ) 
; ∎ 0(<2)◂2'(= a5◂ [ ] )
; .dlt.ptn 1'(= r )
; .dlt.ptn 0'(= r )
; .mov_ptn2 0(<2)◂2'(= a5◂ [ ] ) ⊢ 2'(= a3◂ [ a5◂ [ ]] )
	mov r13,r8
; .mov_ptn 0(<2)◂0'(= a5◂ [ ] ) ⊢ 2'(= a3◂ [ a5◂ [ ]] )
	mov rax,r13
	mov rdi,rax
	mov rax,[SS_LN_TOP]
	mov rsi,[rax]
	mov QWORD [SS_LN_TOP],rsi 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	jmp LB_162
LB_162:
	movzx rax,BYTE [r8+6]
	cmp rax,0
	jnz LB_153
	pop r14
	pop r9
	add rsp,8
	pop r13
	ret
LB_153:
	pop rdi
	pop r9 
	pop r14
	pop r13
	ret
ETR_69:
	mov r9,0x0000_ffff_ffff_ffff
	and r9,[r13]
	call GRM_69
	ret
GRM_69:
	sub rsp,32
	mov QWORD [rsp+24],r13
	mov QWORD [rsp+16],r14 
	mov QWORD [rsp+8],r9
	lea rax,[r14+1]
	cmp rax,r9
	jg LB_167
	jmp LB_168
LB_167:
	mov r8,unt_1
	jmp LB_165
LB_168:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],92
	jnz LB_169
	jmp LB_170
LB_169:
	mov r8,unt_1
	jmp LB_165
LB_170:
	add r14,1
	jmp LB_166
LB_165:
	lea rsp,[rsp+8*0]
	jmp LB_164
LB_166:
	mov QWORD [rsp+8*0],r14
	mov r13,QWORD [rsp+16+8*0]
	mov r14,QWORD [rsp+8*0]
	jmp LB_172
LB_172
;; rsp=0 , %316~1'(= r ) %315~0'(= r ) 
	jmp LB_173
LB_173:
; $ %[ 92r ] ⊢ %[ 92r ]
;; rsp=0 , %317~%[ 92r ] %316~1'(= r ) %315~0'(= r ) 
; #22 %[ 92r ] ⊢ 0(<2)◂%[ 92r ]
;; rsp=0 , %318~0(<2)◂%[ 92r ] %316~1'(= r ) %315~0'(= r ) 
; ∎ 0(<2)◂%[ 92r ]
; .dlt.ptn 1'(= r )
; .dlt.ptn 0'(= r )
; .mov_ptn2 0(<2)◂%[ 92r ] ⊢ 2'(= a3◂ [ r] )
; .mov_ptn 0(<2)◂%[ 92r ] ⊢ 2'(= a3◂ [ r] )
	mov rax,92
	mov rdi,rax
	mov rax,[SS_LN_TOP]
	mov rsi,[rax]
	mov QWORD [SS_LN_TOP],rsi 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	jmp LB_171
LB_171:
	movzx rax,BYTE [r8+6]
	cmp rax,0
	jnz LB_164
	pop r14
	pop r9
	add rsp,8
	pop r13
	ret
LB_164:
	lea rax,[r14+1]
	cmp rax,r9
	jg LB_177
	jmp LB_178
LB_177:
	mov r8,unt_1
	jmp LB_175
LB_178:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],34
	jnz LB_179
	jmp LB_180
LB_179:
	mov r8,unt_1
	jmp LB_175
LB_180:
	add r14,1
	jmp LB_176
LB_175:
	lea rsp,[rsp+8*0]
	jmp LB_174
LB_176:
	mov QWORD [rsp+8*0],r14
	mov r13,QWORD [rsp+16+8*0]
	mov r14,QWORD [rsp+8*0]
	jmp LB_182
LB_182
;; rsp=0 , %320~1'(= r ) %319~0'(= r ) 
	jmp LB_183
LB_183:
; $ %[ 34r ] ⊢ %[ 34r ]
;; rsp=0 , %321~%[ 34r ] %320~1'(= r ) %319~0'(= r ) 
; #22 %[ 34r ] ⊢ 0(<2)◂%[ 34r ]
;; rsp=0 , %322~0(<2)◂%[ 34r ] %320~1'(= r ) %319~0'(= r ) 
; ∎ 0(<2)◂%[ 34r ]
; .dlt.ptn 1'(= r )
; .dlt.ptn 0'(= r )
; .mov_ptn2 0(<2)◂%[ 34r ] ⊢ 2'(= a3◂ [ r] )
; .mov_ptn 0(<2)◂%[ 34r ] ⊢ 2'(= a3◂ [ r] )
	mov rax,34
	mov rdi,rax
	mov rax,[SS_LN_TOP]
	mov rsi,[rax]
	mov QWORD [SS_LN_TOP],rsi 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	jmp LB_181
LB_181:
	movzx rax,BYTE [r8+6]
	cmp rax,0
	jnz LB_174
	pop r14
	pop r9
	add rsp,8
	pop r13
	ret
LB_174:
	lea rax,[r14+1]
	cmp rax,r9
	jg LB_187
	jmp LB_188
LB_187:
	mov r8,unt_1
	jmp LB_185
LB_188:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],110
	jnz LB_189
	jmp LB_190
LB_189:
	mov r8,unt_1
	jmp LB_185
LB_190:
	add r14,1
	jmp LB_186
LB_185:
	lea rsp,[rsp+8*0]
	jmp LB_184
LB_186:
	mov QWORD [rsp+8*0],r14
	mov r13,QWORD [rsp+16+8*0]
	mov r14,QWORD [rsp+8*0]
	jmp LB_192
LB_192
;; rsp=0 , %324~1'(= r ) %323~0'(= r ) 
	jmp LB_193
LB_193:
; $ %[ 10r ] ⊢ %[ 10r ]
;; rsp=0 , %325~%[ 10r ] %324~1'(= r ) %323~0'(= r ) 
; #22 %[ 10r ] ⊢ 0(<2)◂%[ 10r ]
;; rsp=0 , %326~0(<2)◂%[ 10r ] %324~1'(= r ) %323~0'(= r ) 
; ∎ 0(<2)◂%[ 10r ]
; .dlt.ptn 1'(= r )
; .dlt.ptn 0'(= r )
; .mov_ptn2 0(<2)◂%[ 10r ] ⊢ 2'(= a3◂ [ r] )
; .mov_ptn 0(<2)◂%[ 10r ] ⊢ 2'(= a3◂ [ r] )
	mov rax,10
	mov rdi,rax
	mov rax,[SS_LN_TOP]
	mov rsi,[rax]
	mov QWORD [SS_LN_TOP],rsi 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	jmp LB_191
LB_191:
	movzx rax,BYTE [r8+6]
	cmp rax,0
	jnz LB_184
	pop r14
	pop r9
	add rsp,8
	pop r13
	ret
LB_184:
	lea rax,[r14+1]
	cmp rax,r9
	jg LB_197
	jmp LB_198
LB_197:
	mov r8,unt_1
	jmp LB_195
LB_198:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],116
	jnz LB_199
	jmp LB_200
LB_199:
	mov r8,unt_1
	jmp LB_195
LB_200:
	add r14,1
	jmp LB_196
LB_195:
	lea rsp,[rsp+8*0]
	jmp LB_194
LB_196:
	mov QWORD [rsp+8*0],r14
	mov r13,QWORD [rsp+16+8*0]
	mov r14,QWORD [rsp+8*0]
	jmp LB_202
LB_202
;; rsp=0 , %328~1'(= r ) %327~0'(= r ) 
	jmp LB_203
LB_203:
; $ %[ 9r ] ⊢ %[ 9r ]
;; rsp=0 , %329~%[ 9r ] %328~1'(= r ) %327~0'(= r ) 
; #22 %[ 9r ] ⊢ 0(<2)◂%[ 9r ]
;; rsp=0 , %330~0(<2)◂%[ 9r ] %328~1'(= r ) %327~0'(= r ) 
; ∎ 0(<2)◂%[ 9r ]
; .dlt.ptn 1'(= r )
; .dlt.ptn 0'(= r )
; .mov_ptn2 0(<2)◂%[ 9r ] ⊢ 2'(= a3◂ [ r] )
; .mov_ptn 0(<2)◂%[ 9r ] ⊢ 2'(= a3◂ [ r] )
	mov rax,9
	mov rdi,rax
	mov rax,[SS_LN_TOP]
	mov rsi,[rax]
	mov QWORD [SS_LN_TOP],rsi 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	jmp LB_201
LB_201:
	movzx rax,BYTE [r8+6]
	cmp rax,0
	jnz LB_194
	pop r14
	pop r9
	add rsp,8
	pop r13
	ret
LB_194:
	lea rax,[r14+1]
	cmp rax,r9
	jg LB_207
	jmp LB_208
LB_207:
	mov r8,unt_1
	jmp LB_205
LB_208:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],48
	jnz LB_209
	jmp LB_210
LB_209:
	mov r8,unt_1
	jmp LB_205
LB_210:
	add r14,1
	jmp LB_206
LB_205:
	lea rsp,[rsp+8*0]
	jmp LB_204
LB_206:
	mov QWORD [rsp+8*0],r14
	mov r13,QWORD [rsp+16+8*0]
	mov r14,QWORD [rsp+8*0]
	jmp LB_212
LB_212
;; rsp=0 , %332~1'(= r ) %331~0'(= r ) 
	jmp LB_213
LB_213:
; $ %[ 0r ] ⊢ %[ 0r ]
;; rsp=0 , %333~%[ 0r ] %332~1'(= r ) %331~0'(= r ) 
; #22 %[ 0r ] ⊢ 0(<2)◂%[ 0r ]
;; rsp=0 , %334~0(<2)◂%[ 0r ] %332~1'(= r ) %331~0'(= r ) 
; ∎ 0(<2)◂%[ 0r ]
; .dlt.ptn 1'(= r )
; .dlt.ptn 0'(= r )
; .mov_ptn2 0(<2)◂%[ 0r ] ⊢ 2'(= a3◂ [ r] )
; .mov_ptn 0(<2)◂%[ 0r ] ⊢ 2'(= a3◂ [ r] )
	mov rax,0
	mov rdi,rax
	mov rax,[SS_LN_TOP]
	mov rsi,[rax]
	mov QWORD [SS_LN_TOP],rsi 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	jmp LB_211
LB_211:
	movzx rax,BYTE [r8+6]
	cmp rax,0
	jnz LB_204
	pop r14
	pop r9
	add rsp,8
	pop r13
	ret
LB_204:
	pop rdi
	pop r9 
	pop r14
	pop r13
	ret
ETR_70:
	mov r9,0x0000_ffff_ffff_ffff
	and r9,[r13]
	call GRM_70
	ret
GRM_70:
	sub rsp,32
	mov QWORD [rsp+24],r13
	mov QWORD [rsp+16],r14 
	mov QWORD [rsp+8],r9
	cmp r14,r9
	jge LB_217
	jmp LB_218
LB_217:
	mov r8,unt_1 
	jmp LB_215
LB_218:
	movzx rdi,BYTE [r13+8+r14]
	push rdi 
	add r14,1 
	jmp LB_216
LB_215:
	lea rsp,[rsp+8*0]
	jmp LB_214
LB_216:
	mov QWORD [rsp+8*1],r14
	mov r13,QWORD [rsp+16+8*1]
	mov r14,QWORD [rsp+8*1]
	jmp LB_220
LB_220
;; rsp=1 , %337~1'(= r ) %336~0'(= r ) %335~8'(= r ) 
	mov rdi,48
	cmp QWORD [rsp-8+8*1],rdi
	jg LB_221
	mov rdi,57
	cmp QWORD [rsp-8+8*1],rdi
	jg LB_221
;; rsp=1 , %337~1'(= r ) %336~0'(= r ) %335~8'(= r ) 
; #22 8'(= r ) ⊢ 0(<2)◂8'(= r )
;; rsp=1 , %338~0(<2)◂8'(= r ) %337~1'(= r ) %336~0'(= r ) 
; ∎ 0(<2)◂8'(= r )
; .dlt.ptn 1'(= r )
; .dlt.ptn 0'(= r )
; .mov_ptn2 0(<2)◂8'(= r ) ⊢ 2'(= a3◂ [ r] )
; .mov_ptn 0(<2)◂8'(= r ) ⊢ 2'(= a3◂ [ r] )
	mov rax,QWORD [rsp-8+8*1]
	mov rdi,rax
	mov rax,[SS_LN_TOP]
	mov rsi,[rax]
	mov QWORD [SS_LN_TOP],rsi 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	lea rsp,[rsp+8*1]
	jmp LB_219
LB_221:
;; rsp=1 , %337~1'(= r ) %336~0'(= r ) %335~8'(= r ) 
; #23 { } ⊢ 1(<2)◂{ }
;; rsp=1 , %339~1(<2)◂{ } %337~1'(= r ) %336~0'(= r ) %335~8'(= r ) 
; ∎ 1(<2)◂{ }
; .dlt.ptn 1'(= r )
; .dlt.ptn 0'(= r )
; .dlt.ptn 8'(= r )
; .mov_ptn2 1(<2)◂{ } ⊢ 2'(= a3◂ [ r] )
; .mov_ptn 1(<2)◂{ } ⊢ 2'(= a3◂ [ r] )
	mov rax,unt 
	mov rax,unt_1
	mov r8,rax
	lea rsp,[rsp+8*1]
	jmp LB_219
LB_219:
	movzx rax,BYTE [r8+6]
	cmp rax,0
	jnz LB_214
	pop r14
	pop r9
	add rsp,8
	pop r13
	ret
LB_214:
	pop rdi
	pop r9 
	pop r14
	pop r13
	ret
ETR_71:
	mov r9,0x0000_ffff_ffff_ffff
	and r9,[r13]
	call GRM_71
	ret
GRM_71:
	sub rsp,32
	mov QWORD [rsp+24],r13
	mov QWORD [rsp+16],r14 
	mov QWORD [rsp+8],r9
	cmp r14,r9
	jge LB_225
	jmp LB_226
LB_225:
	mov r8,unt_1 
	jmp LB_223
LB_226:
	movzx rdi,BYTE [r13+8+r14]
	push rdi 
	add r14,1 
	jmp LB_224
LB_223:
	lea rsp,[rsp+8*0]
	jmp LB_222
LB_224:
	mov QWORD [rsp+8*1],r14
	mov r13,QWORD [rsp+16+8*1]
	mov r14,QWORD [rsp+8*1]
	jmp LB_228
LB_228
;; rsp=1 , %342~1'(= r ) %341~0'(= r ) %340~8'(= r ) 
	mov rdi,97
	cmp QWORD [rsp-8+8*1],rdi
	jg LB_229
	mov rdi,122
	cmp QWORD [rsp-8+8*1],rdi
	jg LB_229
;; rsp=1 , %342~1'(= r ) %341~0'(= r ) %340~8'(= r ) 
; #22 8'(= r ) ⊢ 0(<2)◂8'(= r )
;; rsp=1 , %343~0(<2)◂8'(= r ) %342~1'(= r ) %341~0'(= r ) 
; ∎ 0(<2)◂8'(= r )
; .dlt.ptn 1'(= r )
; .dlt.ptn 0'(= r )
; .mov_ptn2 0(<2)◂8'(= r ) ⊢ 2'(= a3◂ [ r] )
; .mov_ptn 0(<2)◂8'(= r ) ⊢ 2'(= a3◂ [ r] )
	mov rax,QWORD [rsp-8+8*1]
	mov rdi,rax
	mov rax,[SS_LN_TOP]
	mov rsi,[rax]
	mov QWORD [SS_LN_TOP],rsi 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	lea rsp,[rsp+8*1]
	jmp LB_227
LB_229:
;; rsp=1 , %342~1'(= r ) %341~0'(= r ) %340~8'(= r ) 
; #23 { } ⊢ 1(<2)◂{ }
;; rsp=1 , %344~1(<2)◂{ } %342~1'(= r ) %341~0'(= r ) %340~8'(= r ) 
; ∎ 1(<2)◂{ }
; .dlt.ptn 1'(= r )
; .dlt.ptn 0'(= r )
; .dlt.ptn 8'(= r )
; .mov_ptn2 1(<2)◂{ } ⊢ 2'(= a3◂ [ r] )
; .mov_ptn 1(<2)◂{ } ⊢ 2'(= a3◂ [ r] )
	mov rax,unt 
	mov rax,unt_1
	mov r8,rax
	lea rsp,[rsp+8*1]
	jmp LB_227
LB_227:
	movzx rax,BYTE [r8+6]
	cmp rax,0
	jnz LB_222
	pop r14
	pop r9
	add rsp,8
	pop r13
	ret
LB_222:
	pop rdi
	pop r9 
	pop r14
	pop r13
	ret
ETR_72:
	mov r9,0x0000_ffff_ffff_ffff
	and r9,[r13]
	call GRM_72
	ret
GRM_72:
	sub rsp,32
	mov QWORD [rsp+24],r13
	mov QWORD [rsp+16],r14 
	mov QWORD [rsp+8],r9
	cmp r14,r9
	jge LB_233
	jmp LB_234
LB_233:
	mov r8,unt_1 
	jmp LB_231
LB_234:
	movzx rdi,BYTE [r13+8+r14]
	push rdi 
	add r14,1 
	jmp LB_232
LB_231:
	lea rsp,[rsp+8*0]
	jmp LB_230
LB_232:
	mov QWORD [rsp+8*1],r14
	mov r13,QWORD [rsp+16+8*1]
	mov r14,QWORD [rsp+8*1]
	jmp LB_236
LB_236
;; rsp=1 , %347~1'(= r ) %346~0'(= r ) %345~8'(= r ) 
	mov rdi,65
	cmp QWORD [rsp-8+8*1],rdi
	jg LB_237
	mov rdi,90
	cmp QWORD [rsp-8+8*1],rdi
	jg LB_237
;; rsp=1 , %347~1'(= r ) %346~0'(= r ) %345~8'(= r ) 
; #22 8'(= r ) ⊢ 0(<2)◂8'(= r )
;; rsp=1 , %348~0(<2)◂8'(= r ) %347~1'(= r ) %346~0'(= r ) 
; ∎ 0(<2)◂8'(= r )
; .dlt.ptn 1'(= r )
; .dlt.ptn 0'(= r )
; .mov_ptn2 0(<2)◂8'(= r ) ⊢ 2'(= a3◂ [ r] )
; .mov_ptn 0(<2)◂8'(= r ) ⊢ 2'(= a3◂ [ r] )
	mov rax,QWORD [rsp-8+8*1]
	mov rdi,rax
	mov rax,[SS_LN_TOP]
	mov rsi,[rax]
	mov QWORD [SS_LN_TOP],rsi 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	lea rsp,[rsp+8*1]
	jmp LB_235
LB_237:
;; rsp=1 , %347~1'(= r ) %346~0'(= r ) %345~8'(= r ) 
; #23 { } ⊢ 1(<2)◂{ }
;; rsp=1 , %349~1(<2)◂{ } %347~1'(= r ) %346~0'(= r ) %345~8'(= r ) 
; ∎ 1(<2)◂{ }
; .dlt.ptn 1'(= r )
; .dlt.ptn 0'(= r )
; .dlt.ptn 8'(= r )
; .mov_ptn2 1(<2)◂{ } ⊢ 2'(= a3◂ [ r] )
; .mov_ptn 1(<2)◂{ } ⊢ 2'(= a3◂ [ r] )
	mov rax,unt 
	mov rax,unt_1
	mov r8,rax
	lea rsp,[rsp+8*1]
	jmp LB_235
LB_235:
	movzx rax,BYTE [r8+6]
	cmp rax,0
	jnz LB_230
	pop r14
	pop r9
	add rsp,8
	pop r13
	ret
LB_230:
	pop rdi
	pop r9 
	pop r14
	pop r13
	ret
ETR_73:
	mov r9,0x0000_ffff_ffff_ffff
	and r9,[r13]
	call GRM_73
	ret
GRM_73:
	sub rsp,32
	mov QWORD [rsp+24],r13
	mov QWORD [rsp+16],r14 
	mov QWORD [rsp+8],r9
	call GRM_72
	movzx rax,BYTE [r8+6]
	cmp rax,0
	jnz LB_241
	jmp LB_242
LB_241:
	jmp LB_239
LB_242:
	lea rsp,[rsp-8*1]
	mov r8,[r8+8]
; .mov_ptn2 2'(= r ) ⊢ 8'(= r )
; .mov_ptn 2'(= r ) ⊢ 8'(= r )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_240
LB_239:
	lea rsp,[rsp+8*0]
	jmp LB_238
LB_240:
	mov QWORD [rsp+8*1],r14
	mov r13,QWORD [rsp+16+8*1]
	mov r14,QWORD [rsp+8*1]
	jmp LB_244
LB_244
;; rsp=1 , %352~1'(= r ) %351~0'(= r ) %350~8'(= r ) 
; #22 8'(= r ) ⊢ 0(<2)◂8'(= r )
;; rsp=1 , %353~0(<2)◂8'(= r ) %352~1'(= r ) %351~0'(= r ) 
; ∎ 0(<2)◂8'(= r )
; .dlt.ptn 1'(= r )
; .dlt.ptn 0'(= r )
; .mov_ptn2 0(<2)◂8'(= r ) ⊢ 2'(= a3◂ [ r] )
; .mov_ptn 0(<2)◂8'(= r ) ⊢ 2'(= a3◂ [ r] )
	mov rax,QWORD [rsp-8+8*1]
	mov rdi,rax
	mov rax,[SS_LN_TOP]
	mov rsi,[rax]
	mov QWORD [SS_LN_TOP],rsi 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	lea rsp,[rsp+8*1]
	jmp LB_243
LB_243:
	movzx rax,BYTE [r8+6]
	cmp rax,0
	jnz LB_238
	pop r14
	pop r9
	add rsp,8
	pop r13
	ret
LB_238:
	call GRM_71
	movzx rax,BYTE [r8+6]
	cmp rax,0
	jnz LB_248
	jmp LB_249
LB_248:
	jmp LB_246
LB_249:
	lea rsp,[rsp-8*1]
	mov r8,[r8+8]
; .mov_ptn2 2'(= r ) ⊢ 8'(= r )
; .mov_ptn 2'(= r ) ⊢ 8'(= r )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_247
LB_246:
	lea rsp,[rsp+8*0]
	jmp LB_245
LB_247:
	mov QWORD [rsp+8*1],r14
	mov r13,QWORD [rsp+16+8*1]
	mov r14,QWORD [rsp+8*1]
	jmp LB_251
LB_251
;; rsp=1 , %356~1'(= r ) %355~0'(= r ) %354~8'(= r ) 
; #22 8'(= r ) ⊢ 0(<2)◂8'(= r )
;; rsp=1 , %357~0(<2)◂8'(= r ) %356~1'(= r ) %355~0'(= r ) 
; ∎ 0(<2)◂8'(= r )
; .dlt.ptn 1'(= r )
; .dlt.ptn 0'(= r )
; .mov_ptn2 0(<2)◂8'(= r ) ⊢ 2'(= a3◂ [ r] )
; .mov_ptn 0(<2)◂8'(= r ) ⊢ 2'(= a3◂ [ r] )
	mov rax,QWORD [rsp-8+8*1]
	mov rdi,rax
	mov rax,[SS_LN_TOP]
	mov rsi,[rax]
	mov QWORD [SS_LN_TOP],rsi 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	lea rsp,[rsp+8*1]
	jmp LB_250
LB_250:
	movzx rax,BYTE [r8+6]
	cmp rax,0
	jnz LB_245
	pop r14
	pop r9
	add rsp,8
	pop r13
	ret
LB_245:
	pop rdi
	pop r9 
	pop r14
	pop r13
	ret
ETR_74:
	mov r9,0x0000_ffff_ffff_ffff
	and r9,[r13]
	call GRM_74
	ret
GRM_74:
	sub rsp,32
	mov QWORD [rsp+24],r13
	mov QWORD [rsp+16],r14 
	mov QWORD [rsp+8],r9
	call GRM_73
	movzx rax,BYTE [r8+6]
	cmp rax,0
	jnz LB_255
	jmp LB_256
LB_255:
	jmp LB_253
LB_256:
	lea rsp,[rsp-8*1]
	mov r8,[r8+8]
; .mov_ptn2 2'(= r ) ⊢ 8'(= r )
; .mov_ptn 2'(= r ) ⊢ 8'(= r )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_254
LB_253:
	lea rsp,[rsp+8*0]
	jmp LB_252
LB_254:
	call GRM_75
	movzx rax,BYTE [r8+6]
	cmp rax,0
	jnz LB_259
	jmp LB_260
LB_259:
	jmp LB_257
LB_260:
	lea rsp,[rsp-8*1]
	mov r8,[r8+8]
; .mov_ptn2 2'(= a5◂ [ ] ) ⊢ 9'(= a5◂ [ ] )
; .mov_ptn 2'(= a5◂ [ ] ) ⊢ 9'(= a5◂ [ ] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_258
LB_257:
	lea rsp,[rsp+8*1]
	jmp LB_252
LB_258:
	mov QWORD [rsp+8*2],r14
	mov r13,QWORD [rsp+16+8*2]
	mov r14,QWORD [rsp+8*2]
	jmp LB_262
LB_262
;; rsp=2 , %361~1'(= r ) %360~0'(= r ) %359~9'(= a5◂ [ ] ) %358~8'(= r ) 
; rsp_d=0, #40 { 8'(= r ) 9'(= a5◂ [ ] ) } ⊢ 2'(= a5◂ [ ] )
	lea rsp,[rsp-8*2]
	mov QWORD [rsp+8*0],r13
	mov QWORD [rsp+8*1],r14
; .mov_ptn2 { 8'(= r ) 9'(= a5◂ [ ] ) } ⊢ { 0'(= r ) 1'(= a5◂ [ ] ) }
; .mov_ptn 9'(= a5◂ [ ] ) ⊢ 1'(= a5◂ [ ] )
	mov rax,QWORD [rsp-8+8*3]
	mov r14,rax
; .mov_ptn 8'(= r ) ⊢ 0'(= r )
	mov rax,QWORD [rsp-8+8*4]
	mov r13,rax
	call ETR_40

	mov r14,QWORD [rsp-8+8*2]
	mov rax,QWORD [rsp-8+8*1]
	mov r8,r13
	mov r13,rax
	lea rsp,[rsp+8*4]
;; rsp=0 , %362~2'(= a5◂ [ ] ) %361~1'(= r ) %360~0'(= r ) 
; rsp_d=0, #43 2'(= a5◂ [ ] ) ⊢ { 3'(= a5◂ [ ] ) 2'(= {| l |} ) }
	lea rsp,[rsp-8*2]
	mov QWORD [rsp+8*0],r13
	mov QWORD [rsp+8*1],r14
; .mov_ptn2 2'(= a5◂ [ ] ) ⊢ 0'(= a5◂ [ ] )
; .mov_ptn 2'(= a5◂ [ ] ) ⊢ 0'(= a5◂ [ ] )
	mov rax,r8
	mov r13,rax
	call ETR_43

	mov rax,QWORD [rsp-8+8*2]
	mov r8,r14
	mov r14,rax
	mov rax,QWORD [rsp-8+8*1]
	mov r9,r13
	mov r13,rax
	lea rsp,[rsp+8*2]
;; rsp=0 , %364~2'(= {| l |} ) %363~3'(= a5◂ [ ] ) %361~1'(= r ) %360~0'(= r ) 
; #22 2'(= {| l |} ) ⊢ 0(<2)◂2'(= {| l |} )
;; rsp=0 , %365~0(<2)◂2'(= {| l |} ) %363~3'(= a5◂ [ ] ) %361~1'(= r ) %360~0'(= r ) 
; ∎ 0(<2)◂2'(= {| l |} )
; .dlt.ptn 3'(= a5◂ [ ] )
;	.dlt adt ⊢ _  
; .dlt.ptn 1'(= r )
; .dlt.ptn 0'(= r )
; .mov_ptn2 0(<2)◂2'(= {| l |} ) ⊢ 2'(= a3◂ [ {| l |}] )
	mov r13,r8
; .mov_ptn 0(<2)◂0'(= {| l |} ) ⊢ 2'(= a3◂ [ {| l |}] )
	mov rax,r13
	mov BYTE [rax+6],0
	mov r8,rax
	jmp LB_261
LB_261:
	movzx rax,BYTE [r8+6]
	cmp rax,0
	jnz LB_252
	pop r14
	pop r9
	add rsp,8
	pop r13
	ret
LB_252:
	pop rdi
	pop r9 
	pop r14
	pop r13
	ret
ETR_75:
	mov r9,0x0000_ffff_ffff_ffff
	and r9,[r13]
	call GRM_75
	ret
GRM_75:
	sub rsp,32
	mov QWORD [rsp+24],r13
	mov QWORD [rsp+16],r14 
	mov QWORD [rsp+8],r9
	call GRM_76
	movzx rax,BYTE [r8+6]
	cmp rax,0
	jnz LB_266
	jmp LB_267
LB_266:
	jmp LB_264
LB_267:
	lea rsp,[rsp-8*1]
	mov r8,[r8+8]
; .mov_ptn2 2'(= r ) ⊢ 8'(= r )
; .mov_ptn 2'(= r ) ⊢ 8'(= r )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_265
LB_264:
	lea rsp,[rsp+8*0]
	jmp LB_263
LB_265:
	call GRM_75
	movzx rax,BYTE [r8+6]
	cmp rax,0
	jnz LB_270
	jmp LB_271
LB_270:
	jmp LB_268
LB_271:
	lea rsp,[rsp-8*1]
	mov r8,[r8+8]
; .mov_ptn2 2'(= a5◂ [ ] ) ⊢ 9'(= a5◂ [ ] )
; .mov_ptn 2'(= a5◂ [ ] ) ⊢ 9'(= a5◂ [ ] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_269
LB_268:
	lea rsp,[rsp+8*1]
	jmp LB_263
LB_269:
	mov QWORD [rsp+8*2],r14
	mov r13,QWORD [rsp+16+8*2]
	mov r14,QWORD [rsp+8*2]
	jmp LB_273
LB_273
;; rsp=2 , %369~1'(= r ) %368~0'(= r ) %367~9'(= a5◂ [ ] ) %366~8'(= r ) 
; rsp_d=0, #40 { 8'(= r ) 9'(= a5◂ [ ] ) } ⊢ 2'(= a5◂ [ ] )
	lea rsp,[rsp-8*2]
	mov QWORD [rsp+8*0],r13
	mov QWORD [rsp+8*1],r14
; .mov_ptn2 { 8'(= r ) 9'(= a5◂ [ ] ) } ⊢ { 0'(= r ) 1'(= a5◂ [ ] ) }
; .mov_ptn 9'(= a5◂ [ ] ) ⊢ 1'(= a5◂ [ ] )
	mov rax,QWORD [rsp-8+8*3]
	mov r14,rax
; .mov_ptn 8'(= r ) ⊢ 0'(= r )
	mov rax,QWORD [rsp-8+8*4]
	mov r13,rax
	call ETR_40

	mov r14,QWORD [rsp-8+8*2]
	mov rax,QWORD [rsp-8+8*1]
	mov r8,r13
	mov r13,rax
	lea rsp,[rsp+8*4]
;; rsp=0 , %370~2'(= a5◂ [ ] ) %369~1'(= r ) %368~0'(= r ) 
; #22 2'(= a5◂ [ ] ) ⊢ 0(<2)◂2'(= a5◂ [ ] )
;; rsp=0 , %371~0(<2)◂2'(= a5◂ [ ] ) %369~1'(= r ) %368~0'(= r ) 
; ∎ 0(<2)◂2'(= a5◂ [ ] )
; .dlt.ptn 1'(= r )
; .dlt.ptn 0'(= r )
; .mov_ptn2 0(<2)◂2'(= a5◂ [ ] ) ⊢ 2'(= a3◂ [ a5◂ [ ]] )
	mov r13,r8
; .mov_ptn 0(<2)◂0'(= a5◂ [ ] ) ⊢ 2'(= a3◂ [ a5◂ [ ]] )
	mov rax,r13
	mov rdi,rax
	mov rax,[SS_LN_TOP]
	mov rsi,[rax]
	mov QWORD [SS_LN_TOP],rsi 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	jmp LB_272
LB_272:
	movzx rax,BYTE [r8+6]
	cmp rax,0
	jnz LB_263
	pop r14
	pop r9
	add rsp,8
	pop r13
	ret
LB_263:
	mov QWORD [rsp+8*0],r14
	mov r13,QWORD [rsp+16+8*0]
	mov r14,QWORD [rsp+8*0]
	jmp LB_276
LB_276
;; rsp=0 , %373~1'(= r ) %372~0'(= r ) 
; #32 { } ⊢ 2(<4)◂{ }
;; rsp=0 , %374~2(<4)◂{ } %373~1'(= r ) %372~0'(= r ) 
; #22 2(<4)◂{ } ⊢ 0(<2)◂2(<4)◂{ }
;; rsp=0 , %375~0(<2)◂2(<4)◂{ } %373~1'(= r ) %372~0'(= r ) 
; ∎ 0(<2)◂2(<4)◂{ }
; .dlt.ptn 1'(= r )
; .dlt.ptn 0'(= r )
; .mov_ptn2 0(<2)◂2(<4)◂{ } ⊢ 2'(= a3◂ [ a5◂ [ ]] )
; .mov_ptn 0(<2)◂2(<4)◂{ } ⊢ 2'(= a3◂ [ a5◂ [ ]] )
	mov rax,unt 
	mov rax,unt_2
	mov rdi,rax
	mov rax,[SS_LN_TOP]
	mov rsi,[rax]
	mov QWORD [SS_LN_TOP],rsi 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	jmp LB_275
LB_275:
	movzx rax,BYTE [r8+6]
	cmp rax,0
	jnz LB_274
	pop r14
	pop r9
	add rsp,8
	pop r13
	ret
LB_274:
	pop rdi
	pop r9 
	pop r14
	pop r13
	ret
ETR_76:
	mov r9,0x0000_ffff_ffff_ffff
	and r9,[r13]
	call GRM_76
	ret
GRM_76:
	sub rsp,32
	mov QWORD [rsp+24],r13
	mov QWORD [rsp+16],r14 
	mov QWORD [rsp+8],r9
	call GRM_73
	movzx rax,BYTE [r8+6]
	cmp rax,0
	jnz LB_280
	jmp LB_281
LB_280:
	jmp LB_278
LB_281:
	lea rsp,[rsp-8*1]
	mov r8,[r8+8]
; .mov_ptn2 2'(= r ) ⊢ 8'(= r )
; .mov_ptn 2'(= r ) ⊢ 8'(= r )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_279
LB_278:
	lea rsp,[rsp+8*0]
	jmp LB_277
LB_279:
	mov QWORD [rsp+8*1],r14
	mov r13,QWORD [rsp+16+8*1]
	mov r14,QWORD [rsp+8*1]
	jmp LB_283
LB_283
;; rsp=1 , %378~1'(= r ) %377~0'(= r ) %376~8'(= r ) 
; #22 8'(= r ) ⊢ 0(<2)◂8'(= r )
;; rsp=1 , %379~0(<2)◂8'(= r ) %378~1'(= r ) %377~0'(= r ) 
; ∎ 0(<2)◂8'(= r )
; .dlt.ptn 1'(= r )
; .dlt.ptn 0'(= r )
; .mov_ptn2 0(<2)◂8'(= r ) ⊢ 2'(= a3◂ [ r] )
; .mov_ptn 0(<2)◂8'(= r ) ⊢ 2'(= a3◂ [ r] )
	mov rax,QWORD [rsp-8+8*1]
	mov rdi,rax
	mov rax,[SS_LN_TOP]
	mov rsi,[rax]
	mov QWORD [SS_LN_TOP],rsi 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	lea rsp,[rsp+8*1]
	jmp LB_282
LB_282:
	movzx rax,BYTE [r8+6]
	cmp rax,0
	jnz LB_277
	pop r14
	pop r9
	add rsp,8
	pop r13
	ret
LB_277:
	call GRM_70
	movzx rax,BYTE [r8+6]
	cmp rax,0
	jnz LB_287
	jmp LB_288
LB_287:
	jmp LB_285
LB_288:
	lea rsp,[rsp-8*1]
	mov r8,[r8+8]
; .mov_ptn2 2'(= r ) ⊢ 8'(= r )
; .mov_ptn 2'(= r ) ⊢ 8'(= r )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_286
LB_285:
	lea rsp,[rsp+8*0]
	jmp LB_284
LB_286:
	mov QWORD [rsp+8*1],r14
	mov r13,QWORD [rsp+16+8*1]
	mov r14,QWORD [rsp+8*1]
	jmp LB_290
LB_290
;; rsp=1 , %382~1'(= r ) %381~0'(= r ) %380~8'(= r ) 
; #22 8'(= r ) ⊢ 0(<2)◂8'(= r )
;; rsp=1 , %383~0(<2)◂8'(= r ) %382~1'(= r ) %381~0'(= r ) 
; ∎ 0(<2)◂8'(= r )
; .dlt.ptn 1'(= r )
; .dlt.ptn 0'(= r )
; .mov_ptn2 0(<2)◂8'(= r ) ⊢ 2'(= a3◂ [ r] )
; .mov_ptn 0(<2)◂8'(= r ) ⊢ 2'(= a3◂ [ r] )
	mov rax,QWORD [rsp-8+8*1]
	mov rdi,rax
	mov rax,[SS_LN_TOP]
	mov rsi,[rax]
	mov QWORD [SS_LN_TOP],rsi 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	lea rsp,[rsp+8*1]
	jmp LB_289
LB_289:
	movzx rax,BYTE [r8+6]
	cmp rax,0
	jnz LB_284
	pop r14
	pop r9
	add rsp,8
	pop r13
	ret
LB_284:
	lea rax,[r14+1]
	cmp rax,r9
	jg LB_294
	jmp LB_295
LB_294:
	mov r8,unt_1
	jmp LB_292
LB_295:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],95
	jnz LB_296
	jmp LB_297
LB_296:
	mov r8,unt_1
	jmp LB_292
LB_297:
	add r14,1
	jmp LB_293
LB_292:
	lea rsp,[rsp+8*0]
	jmp LB_291
LB_293:
	mov QWORD [rsp+8*0],r14
	mov r13,QWORD [rsp+16+8*0]
	mov r14,QWORD [rsp+8*0]
	jmp LB_299
LB_299
;; rsp=0 , %385~1'(= r ) %384~0'(= r ) 
	jmp LB_300
LB_300:
; $ %[ 95r ] ⊢ %[ 95r ]
;; rsp=0 , %386~%[ 95r ] %385~1'(= r ) %384~0'(= r ) 
; #22 %[ 95r ] ⊢ 0(<2)◂%[ 95r ]
;; rsp=0 , %387~0(<2)◂%[ 95r ] %385~1'(= r ) %384~0'(= r ) 
; ∎ 0(<2)◂%[ 95r ]
; .dlt.ptn 1'(= r )
; .dlt.ptn 0'(= r )
; .mov_ptn2 0(<2)◂%[ 95r ] ⊢ 2'(= a3◂ [ r] )
; .mov_ptn 0(<2)◂%[ 95r ] ⊢ 2'(= a3◂ [ r] )
	mov rax,95
	mov rdi,rax
	mov rax,[SS_LN_TOP]
	mov rsi,[rax]
	mov QWORD [SS_LN_TOP],rsi 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	jmp LB_298
LB_298:
	movzx rax,BYTE [r8+6]
	cmp rax,0
	jnz LB_291
	pop r14
	pop r9
	add rsp,8
	pop r13
	ret
LB_291:
	pop rdi
	pop r9 
	pop r14
	pop r13
	ret
ETR_77:
	mov r9,0x0000_ffff_ffff_ffff
	and r9,[r13]
	call GRM_77
	ret
GRM_77:
	sub rsp,32
	mov QWORD [rsp+24],r13
	mov QWORD [rsp+16],r14 
	mov QWORD [rsp+8],r9
	lea rax,[r14+1]
	cmp rax,r9
	jg LB_304
	jmp LB_305
LB_304:
	mov r8,unt_1
	jmp LB_302
LB_305:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],95
	jnz LB_306
	jmp LB_307
LB_306:
	mov r8,unt_1
	jmp LB_302
LB_307:
	add r14,1
	jmp LB_303
LB_302:
	lea rsp,[rsp+8*0]
	jmp LB_301
LB_303:
	call GRM_75
	movzx rax,BYTE [r8+6]
	cmp rax,0
	jnz LB_310
	jmp LB_311
LB_310:
	jmp LB_308
LB_311:
	lea rsp,[rsp-8*1]
	mov r8,[r8+8]
; .mov_ptn2 2'(= a5◂ [ ] ) ⊢ 8'(= a5◂ [ ] )
; .mov_ptn 2'(= a5◂ [ ] ) ⊢ 8'(= a5◂ [ ] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_309
LB_308:
	lea rsp,[rsp+8*0]
	jmp LB_301
LB_309:
	mov QWORD [rsp+8*1],r14
	mov r13,QWORD [rsp+16+8*1]
	mov r14,QWORD [rsp+8*1]
	jmp LB_313
LB_313
;; rsp=1 , %390~1'(= r ) %389~0'(= r ) %388~8'(= a5◂ [ ] ) 
; rsp_d=0, #43 8'(= a5◂ [ ] ) ⊢ { 3'(= a5◂ [ ] ) 2'(= {| l |} ) }
	lea rsp,[rsp-8*2]
	mov QWORD [rsp+8*0],r13
	mov QWORD [rsp+8*1],r14
; .mov_ptn2 8'(= a5◂ [ ] ) ⊢ 0'(= a5◂ [ ] )
; .mov_ptn 8'(= a5◂ [ ] ) ⊢ 0'(= a5◂ [ ] )
	mov rax,QWORD [rsp-8+8*3]
	mov r13,rax
	call ETR_43

	mov rax,QWORD [rsp-8+8*2]
	mov r8,r14
	mov r14,rax
	mov rax,QWORD [rsp-8+8*1]
	mov r9,r13
	mov r13,rax
	lea rsp,[rsp+8*3]
;; rsp=0 , %392~2'(= {| l |} ) %391~3'(= a5◂ [ ] ) %390~1'(= r ) %389~0'(= r ) 
; » _^ .. ⊢ ..
; .. //
	mov rdi,0
	mov rsi,r8
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[rsi] 
	add rdi,rax 
	push rax
	push rsi
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	add rdi,1
	push rdi 
	and rdi,~111b
	add rdi,16
	mov rsi,rdi 
	mov rdi,1
	xor rax,rax 
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call calloc
	mov rsp,QWORD [rsp_tmp]  
	pop rdi 
	mov QWORD [rax],rdi
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	mov r10,rax
	lea rdi,[rax+7+rdi]
	std 
	mov QWORD [tmp],rcx 
	jmp LB_314
	LB_315: db 95,0
LB_314:
	lea rsi,[LB_315+1-1]
	mov rcx,1
	rep movsb
	pop rsi 
	pop rcx
	lea rsi,[rsi+7+rcx]
	rep movsb
	mov rcx,QWORD [tmp] 
;; rsp=0 , %394~4'(= {| l |} ) %393~2'(= {| l |} ) %391~3'(= a5◂ [ ] ) %390~1'(= r ) %389~0'(= r ) 
; #22 4'(= {| l |} ) ⊢ 0(<2)◂4'(= {| l |} )
;; rsp=0 , %395~0(<2)◂4'(= {| l |} ) %393~2'(= {| l |} ) %391~3'(= a5◂ [ ] ) %390~1'(= r ) %389~0'(= r ) 
; ∎ 0(<2)◂4'(= {| l |} )
; .dlt.ptn 2'(= {| l |} )
	mov rdi,r8
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call free 
	mov rsp,QWORD [rsp_tmp] 
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
; .dlt.ptn 3'(= a5◂ [ ] )
;	.dlt adt ⊢ _  
; .dlt.ptn 1'(= r )
; .dlt.ptn 0'(= r )
; .mov_ptn2 0(<2)◂4'(= {| l |} ) ⊢ 2'(= a3◂ [ {| l |}] )
; .mov_ptn 0(<2)◂4'(= {| l |} ) ⊢ 2'(= a3◂ [ {| l |}] )
	mov rax,r10
	mov BYTE [rax+6],0
	mov r8,rax
	jmp LB_312
LB_312:
	movzx rax,BYTE [r8+6]
	cmp rax,0
	jnz LB_301
	pop r14
	pop r9
	add rsp,8
	pop r13
	ret
LB_301:
	call GRM_74
	movzx rax,BYTE [r8+6]
	cmp rax,0
	jnz LB_319
	jmp LB_320
LB_319:
	jmp LB_317
LB_320:
	lea rsp,[rsp-8*1]
; .mov_ptn2 2'(= {| l |} ) ⊢ 8'(= {| l |} )
; .mov_ptn 2'(= {| l |} ) ⊢ 8'(= {| l |} )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_318
LB_317:
	lea rsp,[rsp+8*0]
	jmp LB_316
LB_318:
	mov QWORD [rsp+8*1],r14
	mov r13,QWORD [rsp+16+8*1]
	mov r14,QWORD [rsp+8*1]
	jmp LB_322
LB_322
;; rsp=1 , %398~1'(= r ) %397~0'(= r ) %396~8'(= {| l |} ) 
; #22 8'(= {| l |} ) ⊢ 0(<2)◂8'(= {| l |} )
;; rsp=1 , %399~0(<2)◂8'(= {| l |} ) %398~1'(= r ) %397~0'(= r ) 
; ∎ 0(<2)◂8'(= {| l |} )
; .dlt.ptn 1'(= r )
; .dlt.ptn 0'(= r )
; .mov_ptn2 0(<2)◂8'(= {| l |} ) ⊢ 2'(= a3◂ [ {| l |}] )
; .mov_ptn 0(<2)◂8'(= {| l |} ) ⊢ 2'(= a3◂ [ {| l |}] )
	mov rax,QWORD [rsp-8+8*1]
	mov BYTE [rax+6],0
	mov r8,rax
	lea rsp,[rsp+8*1]
	jmp LB_321
LB_321:
	movzx rax,BYTE [r8+6]
	cmp rax,0
	jnz LB_316
	pop r14
	pop r9
	add rsp,8
	pop r13
	ret
LB_316:
	pop rdi
	pop r9 
	pop r14
	pop r13
	ret
ETR_82: ; pnt_name 0'(= a9◂ [ ] ) ⊢ 0'(= {| l |} ) : (_t9→_s8)
;; rsp=0 , %400~0'(= a9◂ [ ] ) 
;; ? 0'(= a9◂ [ ] ) ⊢ 0(<2)◂{ 1'(= {| l |} ) 2'(= a9◂ [ ] ) }
	mov rdi,r13
	movzx rax,BYTE [rdi+6]
	cmp rax,0
	jnz LB_323
	mov rdi,r13
	mov rdi,QWORD [rdi+8+8*0]
	mov r14,rdi
	mov rdi,r13
	mov rdi,QWORD [rdi+8+8*1]
	mov r8,rdi
;; rsp=0 , %402~2'(= a9◂ [ ] ) %401~1'(= {| l |} ) 
; rsp_d=0, #82 2'(= a9◂ [ ] ) ⊢ 0'(= {| l |} )
	lea rsp,[rsp-8*1]
	mov QWORD [rsp+8*0],r14
; .mov_ptn2 2'(= a9◂ [ ] ) ⊢ 0'(= a9◂ [ ] )
; .mov_ptn 2'(= a9◂ [ ] ) ⊢ 0'(= a9◂ [ ] )
	mov rax,r8
	mov r13,rax
	call ETR_82

	mov r14,QWORD [rsp-8+8*1]
	lea rsp,[rsp+8*1]
;; rsp=0 , %403~0'(= {| l |} ) %401~1'(= {| l |} ) 
; » _^ .. ⊢ ..
; .. //
	mov rdi,0
	mov rsi,r13
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[rsi] 
	add rdi,rax 
	push rax
	push rsi
	mov rsi,r14
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[rsi] 
	add rdi,rax 
	push rax
	push rsi
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	add rdi,1
	push rdi 
	and rdi,~111b
	add rdi,16
	mov rsi,rdi 
	mov rdi,1
	xor rax,rax 
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call calloc
	mov rsp,QWORD [rsp_tmp]  
	pop rdi 
	mov QWORD [rax],rdi
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	mov r8,rax
	lea rdi,[rax+7+rdi]
	std 
	mov QWORD [tmp],rcx 
	pop rsi 
	pop rcx
	lea rsi,[rsi+7+rcx]
	rep movsb
	jmp LB_324
	LB_325: db 46,0
LB_324:
	lea rsi,[LB_325+1-1]
	mov rcx,1
	rep movsb
	pop rsi 
	pop rcx
	lea rsi,[rsi+7+rcx]
	rep movsb
	mov rcx,QWORD [tmp] 
;; rsp=0 , %406~2'(= {| l |} ) %405~0'(= {| l |} ) %404~1'(= {| l |} ) 
; ∎ 2'(= {| l |} )
; .dlt.ptn 0'(= {| l |} )
	mov rdi,r13
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call free 
	mov rsp,QWORD [rsp_tmp] 
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
; .dlt.ptn 1'(= {| l |} )
	mov rdi,r14
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call free 
	mov rsp,QWORD [rsp_tmp] 
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
; .mov_ptn2 2'(= {| l |} ) ⊢ 0'(= {| l |} )
; .mov_ptn 2'(= {| l |} ) ⊢ 0'(= {| l |} )
	mov rax,r8
	mov r13,rax
	ret
LB_323:
;; ? 0'(= a9◂ [ ] ) ⊢ 1(<2)◂0'(= {| l |} )
;; rsp=0 , %407~0'(= {| l |} ) 
; ∎ 0'(= {| l |} )
; .mov_ptn2 0'(= {| l |} ) ⊢ 0'(= {| l |} )
	ret
ETR_87: ; pnt_cst_v 0'(= a10◂ [ ] ) ⊢ 0'(= {| l |} ) : (_t10→_s8)
;; rsp=0 , %408~0'(= a10◂ [ ] ) 
;; ? 0'(= a10◂ [ ] ) ⊢ 0(<2)◂1'(= r )
	mov rdi,r13
	movzx rax,BYTE [rdi+6]
	cmp rax,0
	jnz LB_326
	mov rax,QWORD [rdi+8]
	mov r14,rax
;; rsp=0 , %410~1'(= r ) 
; » _^ .. ⊢ ..
; .. //
	mov rdi,0
	sub rsp,128
	mov rdi,rsp
	mov rsi,fmt_d
	mov rdx,r14
	mov QWORD [tmp],rdi
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call sprintf
	mov rsp,QWORD [rsp_tmp]  
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	push rax 
	add rax,QWORD [tmp]
	mov rdi,rax
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	add rdi,1
	push rdi 
	and rdi,~111b
	add rdi,16
	mov rsi,rdi 
	mov rdi,1
	xor rax,rax 
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call calloc
	mov rsp,QWORD [rsp_tmp]  
	pop rdi 
	mov QWORD [rax],rdi
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	mov r13,rax
	lea rdi,[rax+7+rdi]
	std 
	mov QWORD [tmp],rcx 
	pop rcx
	lea rsi,[rsp+rcx-1]
	rep movsb
	add rsp,128
	jmp LB_327
	LB_328: db 114,0
LB_327:
	lea rsi,[LB_328+1-1]
	mov rcx,1
	rep movsb
	mov rcx,QWORD [tmp] 
;; rsp=0 , %412~0'(= {| l |} ) %411~1'(= r ) 
; ∎ 0'(= {| l |} )
; .dlt.ptn 1'(= r )
; .mov_ptn2 0'(= {| l |} ) ⊢ 0'(= {| l |} )
	ret
LB_326:
;; ? 0'(= a10◂ [ ] ) ⊢ 1(<2)◂0'(= {| l |} )
;; rsp=0 , %409~0'(= {| l |} ) 
; rsp_d=0, #66 0'(= {| l |} ) ⊢ { 0'(= {| l |} ) 1'(= {| l |} ) }
; .mov_ptn2 0'(= {| l |} ) ⊢ 0'(= {| l |} )
	call ETR_66

;; rsp=0 , %414~1'(= {| l |} ) %413~0'(= {| l |} ) 
; » _^ .. ⊢ ..
; .. //
	mov rdi,0
	mov rsi,r14
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[rsi] 
	add rdi,rax 
	push rax
	push rsi
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	add rdi,2
	push rdi 
	and rdi,~111b
	add rdi,16
	mov rsi,rdi 
	mov rdi,1
	xor rax,rax 
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call calloc
	mov rsp,QWORD [rsp_tmp]  
	pop rdi 
	mov QWORD [rax],rdi
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	mov r8,rax
	lea rdi,[rax+7+rdi]
	std 
	mov QWORD [tmp],rcx 
	jmp LB_329
	LB_330: db 34,0
LB_329:
	lea rsi,[LB_330+1-1]
	mov rcx,1
	rep movsb
	pop rsi 
	pop rcx
	lea rsi,[rsi+7+rcx]
	rep movsb
	jmp LB_331
	LB_332: db 34,0
LB_331:
	lea rsi,[LB_332+1-1]
	mov rcx,1
	rep movsb
	mov rcx,QWORD [tmp] 
;; rsp=0 , %416~2'(= {| l |} ) %415~1'(= {| l |} ) %413~0'(= {| l |} ) 
; ∎ 2'(= {| l |} )
; .dlt.ptn 1'(= {| l |} )
	mov rdi,r14
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call free 
	mov rsp,QWORD [rsp_tmp] 
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
; .dlt.ptn 0'(= {| l |} )
	mov rdi,r13
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call free 
	mov rsp,QWORD [rsp_tmp] 
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
; .mov_ptn2 2'(= {| l |} ) ⊢ 0'(= {| l |} )
; .mov_ptn 2'(= {| l |} ) ⊢ 0'(= {| l |} )
	mov rax,r8
	mov r13,rax
	ret
ETR_88: ; pnt_cst 0'(= a11◂ [ a9◂ [ ]] ) ⊢ 0'(= {| l |} ) : (_t11◂_t9→_s8)
;; rsp=0 , %417~0'(= a11◂ [ a9◂ [ ]] ) 
;; ? 0'(= a11◂ [ a9◂ [ ]] ) ⊢ 0(<2)◂1'(= a10◂ [ ] )
	mov rdi,r13
	movzx rax,BYTE [rdi+6]
	cmp rax,0
	jnz LB_333
	mov rax,QWORD [rdi+8]
	mov r14,rax
;; rsp=0 , %419~1'(= a10◂ [ ] ) 
; rsp_d=0 , #87 1'(= a10◂ [ ] ) ⊢| 
; .mov_ptn2 1'(= a10◂ [ ] ) ⊢ 0'(= a10◂ [ ] )
; .mov_ptn 1'(= a10◂ [ ] ) ⊢ 0'(= a10◂ [ ] )
	mov rax,r14
	mov r13,rax
	call ETR_87
; .mov_ptn2 0'(= {| l |} ) ⊢ 0'(= {| l |} )
	ret
LB_333:
;; ? 0'(= a11◂ [ a9◂ [ ]] ) ⊢ 1(<2)◂0'(= a9◂ [ ] )
;; rsp=0 , %418~0'(= a9◂ [ ] ) 
; rsp_d=0, #82 0'(= a9◂ [ ] ) ⊢ 0'(= {| l |} )
; .mov_ptn2 0'(= a9◂ [ ] ) ⊢ 0'(= a9◂ [ ] )
	call ETR_82

;; rsp=0 , %420~0'(= {| l |} ) 
; ∎ 0'(= {| l |} )
; .mov_ptn2 0'(= {| l |} ) ⊢ 0'(= {| l |} )
	ret
ETR_97: ; pnt_src_ptn 0'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) ⊢ 0'(= {| l |} ) : (_t8◂_t12◂_s8◂_t9→_s8)
;; rsp=0 , %421~0'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) 
;; ? 0'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) ⊢ 0(<2)◂1'(= a2◂ [ a8◂ [ a12◂ [ a9◂ [ ]{| l |}]]] )
	mov rdi,r13
	movzx rax,BYTE [rdi+6]
	cmp rax,0
	jnz LB_334
	mov rax,QWORD [rdi+8]
	mov r14,rax
;; rsp=0 , %422~1'(= a2◂ [ a8◂ [ a12◂ [ a9◂ [ ]{| l |}]]] ) 
; rsp_d=0, #98 1'(= a2◂ [ a8◂ [ a12◂ [ a9◂ [ ]{| l |}]]] ) ⊢ 0'(= {| l |} )
; .mov_ptn2 1'(= a2◂ [ a8◂ [ a12◂ [ a9◂ [ ]{| l |}]]] ) ⊢ 0'(= a2◂ [ a8◂ [ a12◂ [ a9◂ [ ]{| l |}]]] )
; .mov_ptn 1'(= a2◂ [ a8◂ [ a12◂ [ a9◂ [ ]{| l |}]]] ) ⊢ 0'(= a2◂ [ a8◂ [ a12◂ [ a9◂ [ ]{| l |}]]] )
	mov rax,r14
	mov r13,rax
	call ETR_98

;; rsp=0 , %423~0'(= {| l |} ) 
; » _^ .. ⊢ ..
; .. //
	mov rdi,0
	mov rsi,r13
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[rsi] 
	add rdi,rax 
	push rax
	push rsi
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	add rdi,3
	push rdi 
	and rdi,~111b
	add rdi,16
	mov rsi,rdi 
	mov rdi,1
	xor rax,rax 
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call calloc
	mov rsp,QWORD [rsp_tmp]  
	pop rdi 
	mov QWORD [rax],rdi
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	mov r14,rax
	lea rdi,[rax+7+rdi]
	std 
	mov QWORD [tmp],rcx 
	jmp LB_335
	LB_336: db 123,32,0
LB_335:
	lea rsi,[LB_336+2-1]
	mov rcx,2
	rep movsb
	pop rsi 
	pop rcx
	lea rsi,[rsi+7+rcx]
	rep movsb
	jmp LB_337
	LB_338: db 125,0
LB_337:
	lea rsi,[LB_338+1-1]
	mov rcx,1
	rep movsb
	mov rcx,QWORD [tmp] 
;; rsp=0 , %425~1'(= {| l |} ) %424~0'(= {| l |} ) 
; ∎ 1'(= {| l |} )
; .dlt.ptn 0'(= {| l |} )
	mov rdi,r13
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call free 
	mov rsp,QWORD [rsp_tmp] 
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
; .mov_ptn2 1'(= {| l |} ) ⊢ 0'(= {| l |} )
; .mov_ptn 1'(= {| l |} ) ⊢ 0'(= {| l |} )
	mov rax,r14
	mov r13,rax
	ret
LB_334:
;; ? 0'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) ⊢ 1(<2)◂0'(= a12◂ [ a9◂ [ ]{| l |}] )
;; rsp=0 , %426~0'(= a12◂ [ a9◂ [ ]{| l |}] ) 
;; ? 0'(= a12◂ [ a9◂ [ ]{| l |}] ) ⊢ 0(<2)◂1'(= a11◂ [ a9◂ [ ]] )
	mov rdi,r13
	movzx rax,BYTE [rdi+6]
	cmp rax,0
	jnz LB_339
	mov rax,QWORD [rdi+8]
	mov r14,rax
;; rsp=0 , %427~1'(= a11◂ [ a9◂ [ ]] ) 
; rsp_d=0, #88 1'(= a11◂ [ a9◂ [ ]] ) ⊢ 0'(= {| l |} )
; .mov_ptn2 1'(= a11◂ [ a9◂ [ ]] ) ⊢ 0'(= a11◂ [ a9◂ [ ]] )
; .mov_ptn 1'(= a11◂ [ a9◂ [ ]] ) ⊢ 0'(= a11◂ [ a9◂ [ ]] )
	mov rax,r14
	mov r13,rax
	call ETR_88

;; rsp=0 , %428~0'(= {| l |} ) 
; » _^ .. ⊢ ..
; .. //
	mov rdi,0
	mov rsi,r13
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[rsi] 
	add rdi,rax 
	push rax
	push rsi
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	add rdi,6
	push rdi 
	and rdi,~111b
	add rdi,16
	mov rsi,rdi 
	mov rdi,1
	xor rax,rax 
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call calloc
	mov rsp,QWORD [rsp_tmp]  
	pop rdi 
	mov QWORD [rax],rdi
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	mov r14,rax
	lea rdi,[rax+7+rdi]
	std 
	mov QWORD [tmp],rcx 
	jmp LB_340
	LB_341: db 37,91,32,0
LB_340:
	lea rsi,[LB_341+3-1]
	mov rcx,3
	rep movsb
	pop rsi 
	pop rcx
	lea rsi,[rsi+7+rcx]
	rep movsb
	jmp LB_342
	LB_343: db 32,93,32,0
LB_342:
	lea rsi,[LB_343+3-1]
	mov rcx,3
	rep movsb
	mov rcx,QWORD [tmp] 
;; rsp=0 , %430~1'(= {| l |} ) %429~0'(= {| l |} ) 
; ∎ 1'(= {| l |} )
; .dlt.ptn 0'(= {| l |} )
	mov rdi,r13
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call free 
	mov rsp,QWORD [rsp_tmp] 
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
; .mov_ptn2 1'(= {| l |} ) ⊢ 0'(= {| l |} )
; .mov_ptn 1'(= {| l |} ) ⊢ 0'(= {| l |} )
	mov rax,r14
	mov r13,rax
	ret
LB_339:
;; ? 0'(= a12◂ [ a9◂ [ ]{| l |}] ) ⊢ 1(<2)◂0'(= {| l |} )
;; rsp=0 , %431~0'(= {| l |} ) 
; ∎ 0'(= {| l |} )
; .mov_ptn2 0'(= {| l |} ) ⊢ 0'(= {| l |} )
	ret
ETR_98: ; pnt_src_ptn_lst 0'(= a2◂ [ a8◂ [ a12◂ [ a9◂ [ ]{| l |}]]] ) ⊢ 0'(= {| l |} ) : (_lst◂_t8◂_t12◂_s8◂_t9→_s8)
;; rsp=0 , %432~0'(= a2◂ [ a8◂ [ a12◂ [ a9◂ [ ]{| l |}]]] ) 
;; ? 0'(= a2◂ [ a8◂ [ a12◂ [ a9◂ [ ]{| l |}]]] ) ⊢ 0(<2)◂{ 1'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) 2'(= a2◂ [ a8◂ [ a12◂ [ a9◂ [ ]{| l |}]]] ) }
	mov rdi,r13
	movzx rax,BYTE [rdi+6]
	cmp rax,0
	jnz LB_344
	mov rdi,r13
	mov rdi,QWORD [rdi+8+8*0]
	mov r14,rdi
	mov rdi,r13
	mov rdi,QWORD [rdi+8+8*1]
	mov r8,rdi
;; rsp=0 , %434~2'(= a2◂ [ a8◂ [ a12◂ [ a9◂ [ ]{| l |}]]] ) %433~1'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) 
; rsp_d=0, #97 1'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) ⊢ 0'(= {| l |} )
	lea rsp,[rsp-8*1]
	mov QWORD [rsp+8*0],r8
; .mov_ptn2 1'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) ⊢ 0'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] )
; .mov_ptn 1'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) ⊢ 0'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] )
	mov rax,r14
	mov r13,rax
	call ETR_97

	mov r8,QWORD [rsp-8+8*1]
	lea rsp,[rsp+8*1]
;; rsp=0 , %435~0'(= {| l |} ) %434~2'(= a2◂ [ a8◂ [ a12◂ [ a9◂ [ ]{| l |}]]] ) 
; rsp_d=0, #98 2'(= a2◂ [ a8◂ [ a12◂ [ a9◂ [ ]{| l |}]]] ) ⊢ 1'(= {| l |} )
	lea rsp,[rsp-8*1]
	mov QWORD [rsp+8*0],r13
; .mov_ptn2 2'(= a2◂ [ a8◂ [ a12◂ [ a9◂ [ ]{| l |}]]] ) ⊢ 0'(= a2◂ [ a8◂ [ a12◂ [ a9◂ [ ]{| l |}]]] )
; .mov_ptn 2'(= a2◂ [ a8◂ [ a12◂ [ a9◂ [ ]{| l |}]]] ) ⊢ 0'(= a2◂ [ a8◂ [ a12◂ [ a9◂ [ ]{| l |}]]] )
	mov rax,r8
	mov r13,rax
	call ETR_98

	mov rax,QWORD [rsp-8+8*1]
	mov r14,r13
	mov r13,rax
	lea rsp,[rsp+8*1]
;; rsp=0 , %436~1'(= {| l |} ) %435~0'(= {| l |} ) 
; » _^ .. ⊢ ..
; .. //
	mov rdi,0
	mov rsi,r14
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[rsi] 
	add rdi,rax 
	push rax
	push rsi
	mov rsi,r13
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[rsi] 
	add rdi,rax 
	push rax
	push rsi
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	add rdi,1
	push rdi 
	and rdi,~111b
	add rdi,16
	mov rsi,rdi 
	mov rdi,1
	xor rax,rax 
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call calloc
	mov rsp,QWORD [rsp_tmp]  
	pop rdi 
	mov QWORD [rax],rdi
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	mov r8,rax
	lea rdi,[rax+7+rdi]
	std 
	mov QWORD [tmp],rcx 
	pop rsi 
	pop rcx
	lea rsi,[rsi+7+rcx]
	rep movsb
	jmp LB_345
	LB_346: db 32,0
LB_345:
	lea rsi,[LB_346+1-1]
	mov rcx,1
	rep movsb
	pop rsi 
	pop rcx
	lea rsi,[rsi+7+rcx]
	rep movsb
	mov rcx,QWORD [tmp] 
;; rsp=0 , %439~2'(= {| l |} ) %438~1'(= {| l |} ) %437~0'(= {| l |} ) 
; ∎ 2'(= {| l |} )
; .dlt.ptn 1'(= {| l |} )
	mov rdi,r14
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call free 
	mov rsp,QWORD [rsp_tmp] 
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
; .dlt.ptn 0'(= {| l |} )
	mov rdi,r13
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call free 
	mov rsp,QWORD [rsp_tmp] 
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
; .mov_ptn2 2'(= {| l |} ) ⊢ 0'(= {| l |} )
; .mov_ptn 2'(= {| l |} ) ⊢ 0'(= {| l |} )
	mov rax,r8
	mov r13,rax
	ret
LB_344:
;; ? 0'(= a2◂ [ a8◂ [ a12◂ [ a9◂ [ ]{| l |}]]] ) ⊢ 1(<2)◂{ }
;; rsp=0 , 
	jmp LB_347
LB_347:
; $ %[ "" ] ⊢ %[ "" ]
;; rsp=0 , %440~%[ "" ] 
; ∎ %[ "" ]
; .mov_ptn2 %[ "" ] ⊢ 0'(= {| l |} )
; .mov_ptn %[ "" ] ⊢ 0'(= {| l |} )
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	mov rdi,1  
	mov rsi,16
	xor rax,rax
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call calloc
	mov rsp,QWORD [rsp_tmp]  
	mov rdi,0
	mov rsi,0x_40_00_0000_0000_0000
	or rdi,rsi
	mov QWORD [rax],rdi
	mov QWORD [rax+8*1],0
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	mov r13,rax
	ret
ETR_99: ; pnt_dst_ptn 0'(= a8◂ [ a13◂ [ {| l |}]] ) ⊢ 0'(= {| l |} ) : (_t8◂_t13◂_s8→_s8)
;; rsp=0 , %441~0'(= a8◂ [ a13◂ [ {| l |}]] ) 
;; ? 0'(= a8◂ [ a13◂ [ {| l |}]] ) ⊢ 0(<2)◂1'(= a2◂ [ a8◂ [ a13◂ [ {| l |}]]] )
	mov rdi,r13
	movzx rax,BYTE [rdi+6]
	cmp rax,0
	jnz LB_348
	mov rax,QWORD [rdi+8]
	mov r14,rax
;; rsp=0 , %442~1'(= a2◂ [ a8◂ [ a13◂ [ {| l |}]]] ) 
; rsp_d=0, #100 1'(= a2◂ [ a8◂ [ a13◂ [ {| l |}]]] ) ⊢ 0'(= {| l |} )
; .mov_ptn2 1'(= a2◂ [ a8◂ [ a13◂ [ {| l |}]]] ) ⊢ 0'(= a2◂ [ a8◂ [ a13◂ [ {| l |}]]] )
; .mov_ptn 1'(= a2◂ [ a8◂ [ a13◂ [ {| l |}]]] ) ⊢ 0'(= a2◂ [ a8◂ [ a13◂ [ {| l |}]]] )
	mov rax,r14
	mov r13,rax
	call ETR_100

;; rsp=0 , %443~0'(= {| l |} ) 
; » _^ .. ⊢ ..
; .. //
	mov rdi,0
	mov rsi,r13
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[rsi] 
	add rdi,rax 
	push rax
	push rsi
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	add rdi,3
	push rdi 
	and rdi,~111b
	add rdi,16
	mov rsi,rdi 
	mov rdi,1
	xor rax,rax 
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call calloc
	mov rsp,QWORD [rsp_tmp]  
	pop rdi 
	mov QWORD [rax],rdi
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	mov r14,rax
	lea rdi,[rax+7+rdi]
	std 
	mov QWORD [tmp],rcx 
	jmp LB_349
	LB_350: db 123,32,0
LB_349:
	lea rsi,[LB_350+2-1]
	mov rcx,2
	rep movsb
	pop rsi 
	pop rcx
	lea rsi,[rsi+7+rcx]
	rep movsb
	jmp LB_351
	LB_352: db 125,0
LB_351:
	lea rsi,[LB_352+1-1]
	mov rcx,1
	rep movsb
	mov rcx,QWORD [tmp] 
;; rsp=0 , %445~1'(= {| l |} ) %444~0'(= {| l |} ) 
; ∎ 1'(= {| l |} )
; .dlt.ptn 0'(= {| l |} )
	mov rdi,r13
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call free 
	mov rsp,QWORD [rsp_tmp] 
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
; .mov_ptn2 1'(= {| l |} ) ⊢ 0'(= {| l |} )
; .mov_ptn 1'(= {| l |} ) ⊢ 0'(= {| l |} )
	mov rax,r14
	mov r13,rax
	ret
LB_348:
;; ? 0'(= a8◂ [ a13◂ [ {| l |}]] ) ⊢ 1(<2)◂0'(= a13◂ [ {| l |}] )
;; rsp=0 , %446~0'(= a13◂ [ {| l |}] ) 
;; ? 0'(= a13◂ [ {| l |}] ) ⊢ 0(<2)◂1'(= a3◂ [ {| l |}] )
	mov rdi,r13
	movzx rax,BYTE [rdi+6]
	cmp rax,0
	jnz LB_353
	mov rax,QWORD [rdi+8]
	mov r14,rax
;; rsp=0 , %447~1'(= a3◂ [ {| l |}] ) 
	jmp LB_354
LB_354:
; $ %[ "_ " ] ⊢ %[ "_ " ]
;; rsp=0 , %448~%[ "_ " ] %447~1'(= a3◂ [ {| l |}] ) 
; ∎ %[ "_ " ]
; .dlt.ptn 1'(= a3◂ [ {| l |}] )
;	.dlt adt ⊢ _  
; .mov_ptn2 %[ "_ " ] ⊢ 0'(= {| l |} )
; .mov_ptn %[ "_ " ] ⊢ 0'(= {| l |} )
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	mov rdi,1  
	mov rsi,16
	xor rax,rax
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call calloc
	mov rsp,QWORD [rsp_tmp]  
	mov rdi,2
	mov rsi,0x_40_00_0000_0000_0000
	or rdi,rsi
	mov QWORD [rax],rdi
	mov QWORD [rax+8*1],0
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	mov BYTE [rax+8+0],95
	mov BYTE [rax+8+1],32
	mov r13,rax
	ret
LB_353:
;; ? 0'(= a13◂ [ {| l |}] ) ⊢ 1(<2)◂0'(= {| l |} )
;; rsp=0 , %449~0'(= {| l |} ) 
; ∎ 0'(= {| l |} )
; .mov_ptn2 0'(= {| l |} ) ⊢ 0'(= {| l |} )
	ret
ETR_100: ; pnt_dst_ptn_lst 0'(= a2◂ [ a8◂ [ a13◂ [ {| l |}]]] ) ⊢ 0'(= {| l |} ) : (_lst◂_t8◂_t13◂_s8→_s8)
;; rsp=0 , %450~0'(= a2◂ [ a8◂ [ a13◂ [ {| l |}]]] ) 
;; ? 0'(= a2◂ [ a8◂ [ a13◂ [ {| l |}]]] ) ⊢ 0(<2)◂{ 1'(= a8◂ [ a13◂ [ {| l |}]] ) 2'(= a2◂ [ a8◂ [ a13◂ [ {| l |}]]] ) }
	mov rdi,r13
	movzx rax,BYTE [rdi+6]
	cmp rax,0
	jnz LB_355
	mov rdi,r13
	mov rdi,QWORD [rdi+8+8*0]
	mov r14,rdi
	mov rdi,r13
	mov rdi,QWORD [rdi+8+8*1]
	mov r8,rdi
;; rsp=0 , %452~2'(= a2◂ [ a8◂ [ a13◂ [ {| l |}]]] ) %451~1'(= a8◂ [ a13◂ [ {| l |}]] ) 
; rsp_d=0, #99 1'(= a8◂ [ a13◂ [ {| l |}]] ) ⊢ 0'(= {| l |} )
	lea rsp,[rsp-8*1]
	mov QWORD [rsp+8*0],r8
; .mov_ptn2 1'(= a8◂ [ a13◂ [ {| l |}]] ) ⊢ 0'(= a8◂ [ a13◂ [ {| l |}]] )
; .mov_ptn 1'(= a8◂ [ a13◂ [ {| l |}]] ) ⊢ 0'(= a8◂ [ a13◂ [ {| l |}]] )
	mov rax,r14
	mov r13,rax
	call ETR_99

	mov r8,QWORD [rsp-8+8*1]
	lea rsp,[rsp+8*1]
;; rsp=0 , %453~0'(= {| l |} ) %452~2'(= a2◂ [ a8◂ [ a13◂ [ {| l |}]]] ) 
; rsp_d=0, #100 2'(= a2◂ [ a8◂ [ a13◂ [ {| l |}]]] ) ⊢ 1'(= {| l |} )
	lea rsp,[rsp-8*1]
	mov QWORD [rsp+8*0],r13
; .mov_ptn2 2'(= a2◂ [ a8◂ [ a13◂ [ {| l |}]]] ) ⊢ 0'(= a2◂ [ a8◂ [ a13◂ [ {| l |}]]] )
; .mov_ptn 2'(= a2◂ [ a8◂ [ a13◂ [ {| l |}]]] ) ⊢ 0'(= a2◂ [ a8◂ [ a13◂ [ {| l |}]]] )
	mov rax,r8
	mov r13,rax
	call ETR_100

	mov rax,QWORD [rsp-8+8*1]
	mov r14,r13
	mov r13,rax
	lea rsp,[rsp+8*1]
;; rsp=0 , %454~1'(= {| l |} ) %453~0'(= {| l |} ) 
; » _^ .. ⊢ ..
; .. //
	mov rdi,0
	mov rsi,r14
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[rsi] 
	add rdi,rax 
	push rax
	push rsi
	mov rsi,r13
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[rsi] 
	add rdi,rax 
	push rax
	push rsi
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	add rdi,1
	push rdi 
	and rdi,~111b
	add rdi,16
	mov rsi,rdi 
	mov rdi,1
	xor rax,rax 
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call calloc
	mov rsp,QWORD [rsp_tmp]  
	pop rdi 
	mov QWORD [rax],rdi
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	mov r8,rax
	lea rdi,[rax+7+rdi]
	std 
	mov QWORD [tmp],rcx 
	pop rsi 
	pop rcx
	lea rsi,[rsi+7+rcx]
	rep movsb
	jmp LB_356
	LB_357: db 32,0
LB_356:
	lea rsi,[LB_357+1-1]
	mov rcx,1
	rep movsb
	pop rsi 
	pop rcx
	lea rsi,[rsi+7+rcx]
	rep movsb
	mov rcx,QWORD [tmp] 
;; rsp=0 , %457~2'(= {| l |} ) %456~1'(= {| l |} ) %455~0'(= {| l |} ) 
; ∎ 2'(= {| l |} )
; .dlt.ptn 1'(= {| l |} )
	mov rdi,r14
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call free 
	mov rsp,QWORD [rsp_tmp] 
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
; .dlt.ptn 0'(= {| l |} )
	mov rdi,r13
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call free 
	mov rsp,QWORD [rsp_tmp] 
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
; .mov_ptn2 2'(= {| l |} ) ⊢ 0'(= {| l |} )
; .mov_ptn 2'(= {| l |} ) ⊢ 0'(= {| l |} )
	mov rax,r8
	mov r13,rax
	ret
LB_355:
;; ? 0'(= a2◂ [ a8◂ [ a13◂ [ {| l |}]]] ) ⊢ 1(<2)◂{ }
;; rsp=0 , 
	jmp LB_358
LB_358:
; $ %[ "" ] ⊢ %[ "" ]
;; rsp=0 , %458~%[ "" ] 
; ∎ %[ "" ]
; .mov_ptn2 %[ "" ] ⊢ 0'(= {| l |} )
; .mov_ptn %[ "" ] ⊢ 0'(= {| l |} )
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	mov rdi,1  
	mov rsi,16
	xor rax,rax
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call calloc
	mov rsp,QWORD [rsp_tmp]  
	mov rdi,0
	mov rsi,0x_40_00_0000_0000_0000
	or rdi,rsi
	mov QWORD [rax],rdi
	mov QWORD [rax+8*1],0
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	mov r13,rax
	ret
ETR_101: ; pnt_mtc_ptn 0'(= a8◂ [ a14◂ [ a9◂ [ ]{| l |}]] ) ⊢ 0'(= {| l |} ) : (_t8◂_t14◂_s8◂_t9→_s8)
;; rsp=0 , %459~0'(= a8◂ [ a14◂ [ a9◂ [ ]{| l |}]] ) 
;; ? 0'(= a8◂ [ a14◂ [ a9◂ [ ]{| l |}]] ) ⊢ 0(<2)◂1'(= a2◂ [ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]] )
	mov rdi,r13
	movzx rax,BYTE [rdi+6]
	cmp rax,0
	jnz LB_359
	mov rax,QWORD [rdi+8]
	mov r14,rax
;; rsp=0 , %461~1'(= a2◂ [ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]] ) 
	jmp LB_360
LB_361:
	movzx rsi,BYTE [rdi+6]
	jmp QWORD [LB_364+8*rsi]
LB_364: dq LB_362,LB_363
LB_362:
	mov rsi,[SS_RCD_2_TOP]
	mov rax,[rsi] 
	mov QWORD [SS_RCD_2_TOP],rax
	mov QWORD [rsi],0
	push rdi
	push rsi
	mov rdi,QWORD [rdi+8+8*0]
	call LB_366
	pop rsi  
	pop rdi 
	mov QWORD [rsi+8+8*0],rax
	push rdi
	push rsi
	mov rdi,QWORD [rdi+8+8*1]
	call LB_361
	pop rsi  
	pop rdi 
	mov QWORD [rsi+8+8*1],rax
	mov rax,rsi 
	mov BYTE [rax+6],0
	jmp LB_365
LB_363:
	mov rax,unt
	mov BYTE [rax+6],1
	jmp LB_365
LB_365:
	ret
LB_366:
	movzx rsi,BYTE [rdi+6]
	jmp QWORD [LB_369+8*rsi]
LB_369: dq LB_367,LB_368
LB_367:
	mov rdi,QWORD [rdi+8]
	call LB_361
	mov rsi,[SS_LN_TOP] 
	mov rdi,[rsi] 
	mov QWORD [SS_LN_TOP],rdi
	mov QWORD [rsi+8],rax
	mov BYTE [rsi+6],0
	mov rax,rsi
	jmp LB_370
LB_368:
	mov rdi,QWORD [rdi+8]
	call LB_371
	mov rsi,[SS_LN_TOP] 
	mov rdi,[rsi] 
	mov QWORD [SS_LN_TOP],rdi
	mov QWORD [rsi+8],rax
	mov BYTE [rsi+6],1
	mov rax,rsi
	jmp LB_370
LB_370:
	ret
LB_371:
	movzx rsi,BYTE [rdi+6]
	jmp QWORD [LB_376+8*rsi]
LB_376: dq LB_372,LB_373,LB_374,LB_375
LB_372:
	mov rsi,[SS_RCD_2_TOP]
	mov rax,[rsi] 
	mov QWORD [SS_RCD_2_TOP],rax
	mov QWORD [rsi],0
	push rdi
	push rsi
	mov rdi,QWORD [rdi+8+8*0]
	call LB_378
	pop rsi  
	pop rdi 
	mov QWORD [rsi+8+8*0],rax
	push rdi
	push rsi
	mov rdi,QWORD [rdi+8+8*1]
	call LB_366
	pop rsi  
	pop rdi 
	mov QWORD [rsi+8+8*1],rax
	mov rax,rsi 
	mov BYTE [rax+6],0
	jmp LB_377
LB_373:
	mov rdi,QWORD [rdi+8]
	call LB_379
	mov rsi,[SS_LN_TOP] 
	mov rdi,[rsi] 
	mov QWORD [SS_LN_TOP],rdi
	mov QWORD [rsi+8],rax
	mov BYTE [rsi+6],1
	mov rax,rsi
	jmp LB_377
LB_374:
	mov rdi,QWORD [rdi+8]
	call LB_380
	mov rsi,[SS_LN_TOP] 
	mov rdi,[rsi] 
	mov QWORD [SS_LN_TOP],rdi
	mov QWORD [rsi+8],rax
	mov BYTE [rsi+6],2
	mov rax,rsi
	jmp LB_377
LB_375:
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	call rpc_s8  
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	mov BYTE [rax+6],3
	jmp LB_377
LB_377:
	ret
LB_380:
	movzx rsi,BYTE [rdi+6]
	jmp QWORD [LB_383+8*rsi]
LB_383: dq LB_381,LB_382
LB_381:
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	call rpc_s8  
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	mov BYTE [rax+6],0
	jmp LB_384
LB_382:
	mov rax,unt
	mov BYTE [rax+6],1
	jmp LB_384
LB_384:
	ret
LB_379:
	movzx rsi,BYTE [rdi+6]
	jmp QWORD [LB_387+8*rsi]
LB_387: dq LB_385,LB_386
LB_385:
	mov rdi,QWORD [rdi+8]
	call LB_389
	mov rsi,[SS_LN_TOP] 
	mov rdi,[rsi] 
	mov QWORD [SS_LN_TOP],rdi
	mov QWORD [rsi+8],rax
	mov BYTE [rsi+6],0
	mov rax,rsi
	jmp LB_388
LB_386:
	mov rdi,QWORD [rdi+8]
	call LB_378
	mov rsi,[SS_LN_TOP] 
	mov rdi,[rsi] 
	mov QWORD [SS_LN_TOP],rdi
	mov QWORD [rsi+8],rax
	mov BYTE [rsi+6],1
	mov rax,rsi
	jmp LB_388
LB_388:
	ret
LB_389:
	movzx rsi,BYTE [rdi+6]
	jmp QWORD [LB_392+8*rsi]
LB_392: dq LB_390,LB_391
LB_390:
	mov rdi,QWORD [rdi+8]
	mov rax,rdi
	mov rsi,[SS_LN_TOP] 
	mov rdi,[rsi] 
	mov QWORD [SS_LN_TOP],rdi
	mov QWORD [rsi+8],rax
	mov BYTE [rsi+6],0
	mov rax,rsi
	jmp LB_393
LB_391:
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	call rpc_s8  
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	mov BYTE [rax+6],1
	jmp LB_393
LB_393:
	ret
LB_378:
	movzx rsi,BYTE [rdi+6]
	jmp QWORD [LB_396+8*rsi]
LB_396: dq LB_394,LB_395
LB_394:
	mov rsi,[SS_RCD_2_TOP]
	mov rax,[rsi] 
	mov QWORD [SS_RCD_2_TOP],rax
	mov QWORD [rsi],0
	push rdi
	push rsi
	mov rdi,QWORD [rdi+8+8*0]
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	call rpc_s8  
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	pop rsi  
	pop rdi 
	mov QWORD [rsi+8+8*0],rax
	push rdi
	push rsi
	mov rdi,QWORD [rdi+8+8*1]
	call LB_378
	pop rsi  
	pop rdi 
	mov QWORD [rsi+8+8*1],rax
	mov rax,rsi 
	mov BYTE [rax+6],0
	jmp LB_397
LB_395:
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	call rpc_s8  
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	mov BYTE [rax+6],1
	jmp LB_397
LB_397:
	ret
LB_360:
; $ 1'(= a2◂ [ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]] ) ⊢ 1'(= a2◂ [ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]] ),0'(= a2◂ [ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]] )
	mov rdi,r14
	call LB_361
	mov r13,rax
;; rsp=0 , %463~0'(= a2◂ [ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]] ) %462~1'(= a2◂ [ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]] ) 
; #79 0'(= a2◂ [ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]] ) ⊢ 0(<2)◂0'(= a2◂ [ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]] )
;; rsp=0 , %464~0(<2)◂0'(= a2◂ [ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]] ) %462~1'(= a2◂ [ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]] ) 
; rsp_d=0, #102 1'(= a2◂ [ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]] ) ⊢ 1'(= {| l |} )
	lea rsp,[rsp-8*1]
	mov QWORD [rsp+8*0],r13
; .mov_ptn2 1'(= a2◂ [ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]] ) ⊢ 0'(= a2◂ [ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]] )
; .mov_ptn 1'(= a2◂ [ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]] ) ⊢ 0'(= a2◂ [ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]] )
	mov rax,r14
	mov r13,rax
	call ETR_102

	mov rax,QWORD [rsp-8+8*1]
	mov r14,r13
	mov r13,rax
	lea rsp,[rsp+8*1]
;; rsp=0 , %465~1'(= {| l |} ) %464~0(<2)◂0'(= a2◂ [ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]] ) 
; » _^ .. ⊢ ..
; .. //
	mov rdi,0
	mov rsi,r14
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[rsi] 
	add rdi,rax 
	push rax
	push rsi
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	add rdi,3
	push rdi 
	and rdi,~111b
	add rdi,16
	mov rsi,rdi 
	mov rdi,1
	xor rax,rax 
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call calloc
	mov rsp,QWORD [rsp_tmp]  
	pop rdi 
	mov QWORD [rax],rdi
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	mov r8,rax
	lea rdi,[rax+7+rdi]
	std 
	mov QWORD [tmp],rcx 
	jmp LB_398
	LB_399: db 123,32,0
LB_398:
	lea rsi,[LB_399+2-1]
	mov rcx,2
	rep movsb
	pop rsi 
	pop rcx
	lea rsi,[rsi+7+rcx]
	rep movsb
	jmp LB_400
	LB_401: db 125,0
LB_400:
	lea rsi,[LB_401+1-1]
	mov rcx,1
	rep movsb
	mov rcx,QWORD [tmp] 
;; rsp=0 , %467~2'(= {| l |} ) %466~1'(= {| l |} ) %464~0(<2)◂0'(= a2◂ [ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]] ) 
; ∎ 2'(= {| l |} )
; .dlt.ptn 1'(= {| l |} )
	mov rdi,r14
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call free 
	mov rsp,QWORD [rsp_tmp] 
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
; .dlt.ptn 0(<2)◂0'(= a2◂ [ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]] )
;	.dlt adt ⊢ _  
; .mov_ptn2 2'(= {| l |} ) ⊢ 0'(= {| l |} )
; .mov_ptn 2'(= {| l |} ) ⊢ 0'(= {| l |} )
	mov rax,r8
	mov r13,rax
	ret
LB_359:
;; ? 0'(= a8◂ [ a14◂ [ a9◂ [ ]{| l |}]] ) ⊢ 1(<2)◂0'(= a14◂ [ a9◂ [ ]{| l |}] )
;; rsp=0 , %460~0'(= a14◂ [ a9◂ [ ]{| l |}] ) 
;; ? 0'(= a14◂ [ a9◂ [ ]{| l |}] ) ⊢ 1(<4)◂1'(= a11◂ [ a9◂ [ ]] )
	mov rdi,r13
	movzx rax,BYTE [rdi+6]
	cmp rax,1
	jnz LB_402
	mov rax,QWORD [rdi+8]
	mov r14,rax
;; rsp=0 , %472~1'(= a11◂ [ a9◂ [ ]] ) 
; rsp_d=0, #88 1'(= a11◂ [ a9◂ [ ]] ) ⊢ 0'(= {| l |} )
; .mov_ptn2 1'(= a11◂ [ a9◂ [ ]] ) ⊢ 0'(= a11◂ [ a9◂ [ ]] )
; .mov_ptn 1'(= a11◂ [ a9◂ [ ]] ) ⊢ 0'(= a11◂ [ a9◂ [ ]] )
	mov rax,r14
	mov r13,rax
	call ETR_88

;; rsp=0 , %473~0'(= {| l |} ) 
; » _^ .. ⊢ ..
; .. //
	mov rdi,0
	mov rsi,r13
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[rsi] 
	add rdi,rax 
	push rax
	push rsi
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	add rdi,6
	push rdi 
	and rdi,~111b
	add rdi,16
	mov rsi,rdi 
	mov rdi,1
	xor rax,rax 
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call calloc
	mov rsp,QWORD [rsp_tmp]  
	pop rdi 
	mov QWORD [rax],rdi
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	mov r14,rax
	lea rdi,[rax+7+rdi]
	std 
	mov QWORD [tmp],rcx 
	jmp LB_403
	LB_404: db 37,91,32,0
LB_403:
	lea rsi,[LB_404+3-1]
	mov rcx,3
	rep movsb
	pop rsi 
	pop rcx
	lea rsi,[rsi+7+rcx]
	rep movsb
	jmp LB_405
	LB_406: db 32,93,32,0
LB_405:
	lea rsi,[LB_406+3-1]
	mov rcx,3
	rep movsb
	mov rcx,QWORD [tmp] 
;; rsp=0 , %475~1'(= {| l |} ) %474~0'(= {| l |} ) 
; ∎ 1'(= {| l |} )
; .dlt.ptn 0'(= {| l |} )
	mov rdi,r13
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call free 
	mov rsp,QWORD [rsp_tmp] 
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
; .mov_ptn2 1'(= {| l |} ) ⊢ 0'(= {| l |} )
; .mov_ptn 1'(= {| l |} ) ⊢ 0'(= {| l |} )
	mov rax,r14
	mov r13,rax
	ret
LB_402:
;; ? 0'(= a14◂ [ a9◂ [ ]{| l |}] ) ⊢ 0(<4)◂{ 1'(= a9◂ [ ] ) 2'(= a8◂ [ a14◂ [ a9◂ [ ]{| l |}]] ) }
	mov rdi,r13
	movzx rax,BYTE [rdi+6]
	cmp rax,0
	jnz LB_407
	mov rdi,r13
	mov rdi,QWORD [rdi+8+8*0]
	mov r14,rdi
	mov rdi,r13
	mov rdi,QWORD [rdi+8+8*1]
	mov r8,rdi
;; rsp=0 , %471~2'(= a8◂ [ a14◂ [ a9◂ [ ]{| l |}]] ) %470~1'(= a9◂ [ ] ) 
; rsp_d=0, #101 2'(= a8◂ [ a14◂ [ a9◂ [ ]{| l |}]] ) ⊢ 0'(= {| l |} )
	lea rsp,[rsp-8*1]
	mov QWORD [rsp+8*0],r14
; .mov_ptn2 2'(= a8◂ [ a14◂ [ a9◂ [ ]{| l |}]] ) ⊢ 0'(= a8◂ [ a14◂ [ a9◂ [ ]{| l |}]] )
; .mov_ptn 2'(= a8◂ [ a14◂ [ a9◂ [ ]{| l |}]] ) ⊢ 0'(= a8◂ [ a14◂ [ a9◂ [ ]{| l |}]] )
	mov rax,r8
	mov r13,rax
	call ETR_101

	mov r14,QWORD [rsp-8+8*1]
	lea rsp,[rsp+8*1]
;; rsp=0 , %476~0'(= {| l |} ) %470~1'(= a9◂ [ ] ) 
; rsp_d=0, #82 1'(= a9◂ [ ] ) ⊢ 1'(= {| l |} )
	lea rsp,[rsp-8*1]
	mov QWORD [rsp+8*0],r13
; .mov_ptn2 1'(= a9◂ [ ] ) ⊢ 0'(= a9◂ [ ] )
; .mov_ptn 1'(= a9◂ [ ] ) ⊢ 0'(= a9◂ [ ] )
	mov rax,r14
	mov r13,rax
	call ETR_82

	mov rax,QWORD [rsp-8+8*1]
	mov r14,r13
	mov r13,rax
	lea rsp,[rsp+8*1]
;; rsp=0 , %477~1'(= {| l |} ) %476~0'(= {| l |} ) 
; » _^ .. ⊢ ..
; .. //
	mov rdi,0
	mov rsi,r13
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[rsi] 
	add rdi,rax 
	push rax
	push rsi
	mov rsi,r14
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[rsi] 
	add rdi,rax 
	push rax
	push rsi
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	add rdi,3
	push rdi 
	and rdi,~111b
	add rdi,16
	mov rsi,rdi 
	mov rdi,1
	xor rax,rax 
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call calloc
	mov rsp,QWORD [rsp_tmp]  
	pop rdi 
	mov QWORD [rax],rdi
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	mov r8,rax
	lea rdi,[rax+7+rdi]
	std 
	mov QWORD [tmp],rcx 
	pop rsi 
	pop rcx
	lea rsi,[rsi+7+rcx]
	rep movsb
	jmp LB_408
	LB_409: db 226,151,130,0
LB_408:
	lea rsi,[LB_409+3-1]
	mov rcx,3
	rep movsb
	pop rsi 
	pop rcx
	lea rsi,[rsi+7+rcx]
	rep movsb
	mov rcx,QWORD [tmp] 
;; rsp=0 , %480~2'(= {| l |} ) %479~0'(= {| l |} ) %478~1'(= {| l |} ) 
; ∎ 2'(= {| l |} )
; .dlt.ptn 0'(= {| l |} )
	mov rdi,r13
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call free 
	mov rsp,QWORD [rsp_tmp] 
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
; .dlt.ptn 1'(= {| l |} )
	mov rdi,r14
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call free 
	mov rsp,QWORD [rsp_tmp] 
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
; .mov_ptn2 2'(= {| l |} ) ⊢ 0'(= {| l |} )
; .mov_ptn 2'(= {| l |} ) ⊢ 0'(= {| l |} )
	mov rax,r8
	mov r13,rax
	ret
LB_407:
;; ? 0'(= a14◂ [ a9◂ [ ]{| l |}] ) ⊢ 3(<4)◂0'(= {| l |} )
	mov rdi,r13
	movzx rax,BYTE [rdi+6]
	cmp rax,3
	jnz LB_410
;; rsp=0 , %469~0'(= {| l |} ) 
; » _^ .. ⊢ ..
; .. //
	mov rdi,0
	mov rsi,r13
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[rsi] 
	add rdi,rax 
	push rax
	push rsi
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	add rdi,1
	push rdi 
	and rdi,~111b
	add rdi,16
	mov rsi,rdi 
	mov rdi,1
	xor rax,rax 
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call calloc
	mov rsp,QWORD [rsp_tmp]  
	pop rdi 
	mov QWORD [rax],rdi
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	mov r14,rax
	lea rdi,[rax+7+rdi]
	std 
	mov QWORD [tmp],rcx 
	jmp LB_411
	LB_412: db 37,0
LB_411:
	lea rsi,[LB_412+1-1]
	mov rcx,1
	rep movsb
	pop rsi 
	pop rcx
	lea rsi,[rsi+7+rcx]
	rep movsb
	mov rcx,QWORD [tmp] 
;; rsp=0 , %482~1'(= {| l |} ) %481~0'(= {| l |} ) 
; ∎ 1'(= {| l |} )
; .dlt.ptn 0'(= {| l |} )
	mov rdi,r13
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call free 
	mov rsp,QWORD [rsp_tmp] 
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
; .mov_ptn2 1'(= {| l |} ) ⊢ 0'(= {| l |} )
; .mov_ptn 1'(= {| l |} ) ⊢ 0'(= {| l |} )
	mov rax,r14
	mov r13,rax
	ret
LB_410:
;; ? 0'(= a14◂ [ a9◂ [ ]{| l |}] ) ⊢ 2(<4)◂0'(= a3◂ [ {| l |}] )
;; rsp=0 , %468~0'(= a3◂ [ {| l |}] ) 
	jmp LB_413
LB_413:
; $ %[ "_" ] ⊢ %[ "_" ]
;; rsp=0 , %483~%[ "_" ] %468~0'(= a3◂ [ {| l |}] ) 
; ∎ %[ "_" ]
; .dlt.ptn 0'(= a3◂ [ {| l |}] )
;	.dlt adt ⊢ _  
; .mov_ptn2 %[ "_" ] ⊢ 0'(= {| l |} )
; .mov_ptn %[ "_" ] ⊢ 0'(= {| l |} )
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	mov rdi,1  
	mov rsi,16
	xor rax,rax
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call calloc
	mov rsp,QWORD [rsp_tmp]  
	mov rdi,1
	mov rsi,0x_40_00_0000_0000_0000
	or rdi,rsi
	mov QWORD [rax],rdi
	mov QWORD [rax+8*1],0
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	mov BYTE [rax+8+0],95
	mov r13,rax
	ret
ETR_102: ; pnt_mtc_ptn_lst 0'(= a2◂ [ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]] ) ⊢ 0'(= {| l |} ) : (_lst◂_t8◂_t14◂_s8◂_t9→_s8)
;; rsp=0 , %484~0'(= a2◂ [ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]] ) 
;; ? 0'(= a2◂ [ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]] ) ⊢ 0(<2)◂{ 1'(= a8◂ [ a14◂ [ a9◂ [ ]{| l |}]] ) 2'(= a2◂ [ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]] ) }
	mov rdi,r13
	movzx rax,BYTE [rdi+6]
	cmp rax,0
	jnz LB_414
	mov rdi,r13
	mov rdi,QWORD [rdi+8+8*0]
	mov r14,rdi
	mov rdi,r13
	mov rdi,QWORD [rdi+8+8*1]
	mov r8,rdi
;; rsp=0 , %486~2'(= a2◂ [ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]] ) %485~1'(= a8◂ [ a14◂ [ a9◂ [ ]{| l |}]] ) 
; rsp_d=0, #101 1'(= a8◂ [ a14◂ [ a9◂ [ ]{| l |}]] ) ⊢ 0'(= {| l |} )
	lea rsp,[rsp-8*1]
	mov QWORD [rsp+8*0],r8
; .mov_ptn2 1'(= a8◂ [ a14◂ [ a9◂ [ ]{| l |}]] ) ⊢ 0'(= a8◂ [ a14◂ [ a9◂ [ ]{| l |}]] )
; .mov_ptn 1'(= a8◂ [ a14◂ [ a9◂ [ ]{| l |}]] ) ⊢ 0'(= a8◂ [ a14◂ [ a9◂ [ ]{| l |}]] )
	mov rax,r14
	mov r13,rax
	call ETR_101

	mov r8,QWORD [rsp-8+8*1]
	lea rsp,[rsp+8*1]
;; rsp=0 , %487~0'(= {| l |} ) %486~2'(= a2◂ [ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]] ) 
; rsp_d=0, #102 2'(= a2◂ [ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]] ) ⊢ 1'(= {| l |} )
	lea rsp,[rsp-8*1]
	mov QWORD [rsp+8*0],r13
; .mov_ptn2 2'(= a2◂ [ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]] ) ⊢ 0'(= a2◂ [ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]] )
; .mov_ptn 2'(= a2◂ [ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]] ) ⊢ 0'(= a2◂ [ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]] )
	mov rax,r8
	mov r13,rax
	call ETR_102

	mov rax,QWORD [rsp-8+8*1]
	mov r14,r13
	mov r13,rax
	lea rsp,[rsp+8*1]
;; rsp=0 , %488~1'(= {| l |} ) %487~0'(= {| l |} ) 
; » _^ .. ⊢ ..
; .. //
	mov rdi,0
	mov rsi,r14
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[rsi] 
	add rdi,rax 
	push rax
	push rsi
	mov rsi,r13
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[rsi] 
	add rdi,rax 
	push rax
	push rsi
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	add rdi,1
	push rdi 
	and rdi,~111b
	add rdi,16
	mov rsi,rdi 
	mov rdi,1
	xor rax,rax 
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call calloc
	mov rsp,QWORD [rsp_tmp]  
	pop rdi 
	mov QWORD [rax],rdi
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	mov r8,rax
	lea rdi,[rax+7+rdi]
	std 
	mov QWORD [tmp],rcx 
	pop rsi 
	pop rcx
	lea rsi,[rsi+7+rcx]
	rep movsb
	jmp LB_415
	LB_416: db 32,0
LB_415:
	lea rsi,[LB_416+1-1]
	mov rcx,1
	rep movsb
	pop rsi 
	pop rcx
	lea rsi,[rsi+7+rcx]
	rep movsb
	mov rcx,QWORD [tmp] 
;; rsp=0 , %491~2'(= {| l |} ) %490~1'(= {| l |} ) %489~0'(= {| l |} ) 
; ∎ 2'(= {| l |} )
; .dlt.ptn 1'(= {| l |} )
	mov rdi,r14
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call free 
	mov rsp,QWORD [rsp_tmp] 
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
; .dlt.ptn 0'(= {| l |} )
	mov rdi,r13
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call free 
	mov rsp,QWORD [rsp_tmp] 
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
; .mov_ptn2 2'(= {| l |} ) ⊢ 0'(= {| l |} )
; .mov_ptn 2'(= {| l |} ) ⊢ 0'(= {| l |} )
	mov rax,r8
	mov r13,rax
	ret
LB_414:
;; ? 0'(= a2◂ [ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]] ) ⊢ 1(<2)◂{ }
;; rsp=0 , 
	jmp LB_417
LB_417:
; $ %[ "" ] ⊢ %[ "" ]
;; rsp=0 , %492~%[ "" ] 
; ∎ %[ "" ]
; .mov_ptn2 %[ "" ] ⊢ 0'(= {| l |} )
; .mov_ptn %[ "" ] ⊢ 0'(= {| l |} )
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	mov rdi,1  
	mov rsi,16
	xor rax,rax
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call calloc
	mov rsp,QWORD [rsp_tmp]  
	mov rdi,0
	mov rsi,0x_40_00_0000_0000_0000
	or rdi,rsi
	mov QWORD [rax],rdi
	mov QWORD [rax+8*1],0
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	mov r13,rax
	ret
ETR_132: ; pnt_lc_code { 0'(= r ) 1'(= a17◂ [ a9◂ [ ]{| l |}] ) } ⊢ { 0'(= r ) 1'(= {| l |} ) } : ({ _r64 _t17◂_s8◂_t9 }→{ _r64 _s8 })
;; rsp=0 , %494~1'(= a17◂ [ a9◂ [ ]{| l |}] ) %493~0'(= r ) 
;; ? 1'(= a17◂ [ a9◂ [ ]{| l |}] ) ⊢ 0(<7)◂{ 2'(= a9◂ [ ] ) 3'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) }
	mov rdi,r14
	movzx rax,BYTE [rdi+6]
	cmp rax,0
	jnz LB_418
	mov rdi,r14
	mov rdi,QWORD [rdi+8+8*0]
	mov r8,rdi
	mov rdi,r14
	mov rdi,QWORD [rdi+8+8*1]
	mov r9,rdi
;; rsp=0 , %505~3'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) %504~2'(= a9◂ [ ] ) %493~0'(= r ) 
; rsp_d=0, #82 2'(= a9◂ [ ] ) ⊢ 1'(= {| l |} )
	lea rsp,[rsp-8*2]
	mov QWORD [rsp+8*0],r13
	mov QWORD [rsp+8*1],r9
; .mov_ptn2 2'(= a9◂ [ ] ) ⊢ 0'(= a9◂ [ ] )
; .mov_ptn 2'(= a9◂ [ ] ) ⊢ 0'(= a9◂ [ ] )
	mov rax,r8
	mov r13,rax
	call ETR_82

	mov r9,QWORD [rsp-8+8*2]
	mov rax,QWORD [rsp-8+8*1]
	mov r14,r13
	mov r13,rax
	lea rsp,[rsp+8*2]
;; rsp=0 , %506~1'(= {| l |} ) %505~3'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) %493~0'(= r ) 
; rsp_d=0, #97 3'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) ⊢ 2'(= {| l |} )
	lea rsp,[rsp-8*2]
	mov QWORD [rsp+8*0],r13
	mov QWORD [rsp+8*1],r14
; .mov_ptn2 3'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) ⊢ 0'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] )
; .mov_ptn 3'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) ⊢ 0'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] )
	mov rax,r9
	mov r13,rax
	call ETR_97

	mov r14,QWORD [rsp-8+8*2]
	mov rax,QWORD [rsp-8+8*1]
	mov r8,r13
	mov r13,rax
	lea rsp,[rsp+8*2]
;; rsp=0 , %507~2'(= {| l |} ) %506~1'(= {| l |} ) %493~0'(= r ) 
; » _^ .. ⊢ ..
; .. //
	mov rdi,0
	mov rsi,r8
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[rsi] 
	add rdi,rax 
	push rax
	push rsi
	mov rsi,r14
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[rsi] 
	add rdi,rax 
	push rax
	push rsi
	mov rsi,r13
	push rsi
	imul rsi,1
	add rdi,rsi 
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	add rdi,7
	push rdi 
	and rdi,~111b
	add rdi,16
	mov rsi,rdi 
	mov rdi,1
	xor rax,rax 
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call calloc
	mov rsp,QWORD [rsp_tmp]  
	pop rdi 
	mov QWORD [rax],rdi
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	mov r9,rax
	lea rdi,[rax+7+rdi]
	std 
	mov QWORD [tmp],rcx 
	jmp LB_419
	LB_420: db 9,0
LB_419:
	pop rax 
LB_421:
	lea rsi,[LB_420+1-1]
	mov rcx,1
	rep movsb 
	sub rax,1
	cmp rax,0
	jnz LB_421
	pop rsi 
	pop rcx
	lea rsi,[rsi+7+rcx]
	rep movsb
	jmp LB_422
	LB_423: db 32,0
LB_422:
	lea rsi,[LB_423+1-1]
	mov rcx,1
	rep movsb
	pop rsi 
	pop rcx
	lea rsi,[rsi+7+rcx]
	rep movsb
	jmp LB_424
	LB_425: db 32,226,138,162,124,10,0
LB_424:
	lea rsi,[LB_425+6-1]
	mov rcx,6
	rep movsb
	mov rcx,QWORD [tmp] 
;; rsp=0 , %511~3'(= {| l |} ) %510~2'(= {| l |} ) %509~1'(= {| l |} ) %508~0'(= r ) 
; ∎ { 0'(= r ) 3'(= {| l |} ) }
; .dlt.ptn 2'(= {| l |} )
	mov rdi,r8
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call free 
	mov rsp,QWORD [rsp_tmp] 
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
; .dlt.ptn 1'(= {| l |} )
	mov rdi,r14
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call free 
	mov rsp,QWORD [rsp_tmp] 
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
; .mov_ptn2 { 0'(= r ) 3'(= {| l |} ) } ⊢ { 0'(= r ) 1'(= {| l |} ) }
; .mov_ptn 3'(= {| l |} ) ⊢ 1'(= {| l |} )
	mov rax,r9
	mov r14,rax
	ret
LB_418:
;; ? 1'(= a17◂ [ a9◂ [ ]{| l |}] ) ⊢ 1(<7)◂{ 2'(= a12◂ [ a9◂ [ ]{| l |}] ) 3'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) }
	mov rdi,r14
	movzx rax,BYTE [rdi+6]
	cmp rax,1
	jnz LB_426
	mov rdi,r14
	mov rdi,QWORD [rdi+8+8*0]
	mov r8,rdi
	mov rdi,r14
	mov rdi,QWORD [rdi+8+8*1]
	mov r9,rdi
;; rsp=0 , %503~3'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) %502~2'(= a12◂ [ a9◂ [ ]{| l |}] ) %493~0'(= r ) 
; #78 2'(= a12◂ [ a9◂ [ ]{| l |}] ) ⊢ 1(<2)◂2'(= a12◂ [ a9◂ [ ]{| l |}] )
;; rsp=0 , %512~1(<2)◂2'(= a12◂ [ a9◂ [ ]{| l |}] ) %503~3'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) %493~0'(= r ) 
; rsp_d=0, #97 1(<2)◂2'(= a12◂ [ a9◂ [ ]{| l |}] ) ⊢ 1'(= {| l |} )
	lea rsp,[rsp-8*2]
	mov QWORD [rsp+8*0],r13
	mov QWORD [rsp+8*1],r9
; .mov_ptn2 1(<2)◂2'(= a12◂ [ a9◂ [ ]{| l |}] ) ⊢ 0'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] )
; .mov_ptn 1(<2)◂2'(= a12◂ [ a9◂ [ ]{| l |}] ) ⊢ 0'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] )
	mov rax,r8
	mov rdi,rax
	mov rax,[SS_LN_TOP]
	mov rsi,[rax]
	mov QWORD [SS_LN_TOP],rsi 
	mov QWORD [rax],0
	mov BYTE [rax+6],1
	mov QWORD [rax+8],rdi
	mov r13,rax
	call ETR_97

	mov r9,QWORD [rsp-8+8*2]
	mov rax,QWORD [rsp-8+8*1]
	mov r14,r13
	mov r13,rax
	lea rsp,[rsp+8*2]
;; rsp=0 , %513~1'(= {| l |} ) %503~3'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) %493~0'(= r ) 
; rsp_d=0, #97 3'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) ⊢ 2'(= {| l |} )
	lea rsp,[rsp-8*2]
	mov QWORD [rsp+8*0],r13
	mov QWORD [rsp+8*1],r14
; .mov_ptn2 3'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) ⊢ 0'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] )
; .mov_ptn 3'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) ⊢ 0'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] )
	mov rax,r9
	mov r13,rax
	call ETR_97

	mov r14,QWORD [rsp-8+8*2]
	mov rax,QWORD [rsp-8+8*1]
	mov r8,r13
	mov r13,rax
	lea rsp,[rsp+8*2]
;; rsp=0 , %514~2'(= {| l |} ) %513~1'(= {| l |} ) %493~0'(= r ) 
; » _^ .. ⊢ ..
; .. //
	mov rdi,0
	mov rsi,r8
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[rsi] 
	add rdi,rax 
	push rax
	push rsi
	mov rsi,r14
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[rsi] 
	add rdi,rax 
	push rax
	push rsi
	mov rsi,r13
	push rsi
	imul rsi,1
	add rdi,rsi 
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	add rdi,10
	push rdi 
	and rdi,~111b
	add rdi,16
	mov rsi,rdi 
	mov rdi,1
	xor rax,rax 
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call calloc
	mov rsp,QWORD [rsp_tmp]  
	pop rdi 
	mov QWORD [rax],rdi
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	mov r9,rax
	lea rdi,[rax+7+rdi]
	std 
	mov QWORD [tmp],rcx 
	jmp LB_427
	LB_428: db 9,0
LB_427:
	pop rax 
LB_429:
	lea rsi,[LB_428+1-1]
	mov rcx,1
	rep movsb 
	sub rax,1
	cmp rax,0
	jnz LB_429
	jmp LB_430
	LB_431: db 226,151,130,0
LB_430:
	lea rsi,[LB_431+3-1]
	mov rcx,3
	rep movsb
	pop rsi 
	pop rcx
	lea rsi,[rsi+7+rcx]
	rep movsb
	jmp LB_432
	LB_433: db 44,0
LB_432:
	lea rsi,[LB_433+1-1]
	mov rcx,1
	rep movsb
	pop rsi 
	pop rcx
	lea rsi,[rsi+7+rcx]
	rep movsb
	jmp LB_434
	LB_435: db 32,226,138,162,124,10,0
LB_434:
	lea rsi,[LB_435+6-1]
	mov rcx,6
	rep movsb
	mov rcx,QWORD [tmp] 
;; rsp=0 , %518~3'(= {| l |} ) %517~2'(= {| l |} ) %516~1'(= {| l |} ) %515~0'(= r ) 
; ∎ { 0'(= r ) 3'(= {| l |} ) }
; .dlt.ptn 2'(= {| l |} )
	mov rdi,r8
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call free 
	mov rsp,QWORD [rsp_tmp] 
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
; .dlt.ptn 1'(= {| l |} )
	mov rdi,r14
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call free 
	mov rsp,QWORD [rsp_tmp] 
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
; .mov_ptn2 { 0'(= r ) 3'(= {| l |} ) } ⊢ { 0'(= r ) 1'(= {| l |} ) }
; .mov_ptn 3'(= {| l |} ) ⊢ 1'(= {| l |} )
	mov rax,r9
	mov r14,rax
	ret
LB_426:
;; ? 1'(= a17◂ [ a9◂ [ ]{| l |}] ) ⊢ 2(<7)◂{ 2'(= a19◂ [ a9◂ [ ]{| l |}] ) 3'(= a17◂ [ a9◂ [ ]{| l |}] ) }
	mov rdi,r14
	movzx rax,BYTE [rdi+6]
	cmp rax,2
	jnz LB_436
	mov rdi,r14
	mov rdi,QWORD [rdi+8+8*0]
	mov r8,rdi
	mov rdi,r14
	mov rdi,QWORD [rdi+8+8*1]
	mov r9,rdi
;; rsp=0 , %501~3'(= a17◂ [ a9◂ [ ]{| l |}] ) %500~2'(= a19◂ [ a9◂ [ ]{| l |}] ) %493~0'(= r ) 
; rsp_d=0, #133 { 0'(= r ) 2'(= a19◂ [ a9◂ [ ]{| l |}] ) } ⊢ { 0'(= r ) 1'(= {| l |} ) }
	lea rsp,[rsp-8*1]
	mov QWORD [rsp+8*0],r9
; .mov_ptn2 { 0'(= r ) 2'(= a19◂ [ a9◂ [ ]{| l |}] ) } ⊢ { 0'(= r ) 1'(= a19◂ [ a9◂ [ ]{| l |}] ) }
; .mov_ptn 2'(= a19◂ [ a9◂ [ ]{| l |}] ) ⊢ 1'(= a19◂ [ a9◂ [ ]{| l |}] )
	mov rax,r8
	mov r14,rax
	call ETR_133

	mov r9,QWORD [rsp-8+8*1]
	lea rsp,[rsp+8*1]
;; rsp=0 , %520~1'(= {| l |} ) %519~0'(= r ) %501~3'(= a17◂ [ a9◂ [ ]{| l |}] ) 
; rsp_d=0, #132 { 0'(= r ) 3'(= a17◂ [ a9◂ [ ]{| l |}] ) } ⊢ { 0'(= r ) 2'(= {| l |} ) }
	lea rsp,[rsp-8*1]
	mov QWORD [rsp+8*0],r14
; .mov_ptn2 { 0'(= r ) 3'(= a17◂ [ a9◂ [ ]{| l |}] ) } ⊢ { 0'(= r ) 1'(= a17◂ [ a9◂ [ ]{| l |}] ) }
; .mov_ptn 3'(= a17◂ [ a9◂ [ ]{| l |}] ) ⊢ 1'(= a17◂ [ a9◂ [ ]{| l |}] )
	mov rax,r9
	mov r14,rax
	call ETR_132

	mov rax,QWORD [rsp-8+8*1]
	mov r8,r14
	mov r14,rax
	lea rsp,[rsp+8*1]
;; rsp=0 , %522~2'(= {| l |} ) %521~0'(= r ) %520~1'(= {| l |} ) 
; » _^ .. ⊢ ..
; .. //
	mov rdi,0
	mov rsi,r8
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[rsi] 
	add rdi,rax 
	push rax
	push rsi
	mov rsi,r14
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[rsi] 
	add rdi,rax 
	push rax
	push rsi
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	add rdi,0
	push rdi 
	and rdi,~111b
	add rdi,16
	mov rsi,rdi 
	mov rdi,1
	xor rax,rax 
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call calloc
	mov rsp,QWORD [rsp_tmp]  
	pop rdi 
	mov QWORD [rax],rdi
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	mov r9,rax
	lea rdi,[rax+7+rdi]
	std 
	mov QWORD [tmp],rcx 
	pop rsi 
	pop rcx
	lea rsi,[rsi+7+rcx]
	rep movsb
	pop rsi 
	pop rcx
	lea rsi,[rsi+7+rcx]
	rep movsb
	mov rcx,QWORD [tmp] 
;; rsp=0 , %525~3'(= {| l |} ) %524~2'(= {| l |} ) %523~1'(= {| l |} ) %521~0'(= r ) 
; ∎ { 0'(= r ) 3'(= {| l |} ) }
; .dlt.ptn 2'(= {| l |} )
	mov rdi,r8
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call free 
	mov rsp,QWORD [rsp_tmp] 
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
; .dlt.ptn 1'(= {| l |} )
	mov rdi,r14
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call free 
	mov rsp,QWORD [rsp_tmp] 
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
; .mov_ptn2 { 0'(= r ) 3'(= {| l |} ) } ⊢ { 0'(= r ) 1'(= {| l |} ) }
; .mov_ptn 3'(= {| l |} ) ⊢ 1'(= {| l |} )
	mov rax,r9
	mov r14,rax
	ret
LB_436:
;; ? 1'(= a17◂ [ a9◂ [ ]{| l |}] ) ⊢ 3(<7)◂2'(= a7◂ [ *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}] )
	mov rdi,r14
	movzx rax,BYTE [rdi+6]
	cmp rax,3
	jnz LB_437
	mov rax,QWORD [rdi+8]
	mov r8,rax
;; rsp=0 , %499~2'(= a7◂ [ *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}] ) %493~0'(= r ) 
; rsp_d=0, #134 { 0'(= r ) 2'(= a7◂ [ *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}] ) } ⊢ { 0'(= r ) 1'(= {| l |} ) }
; .mov_ptn2 { 0'(= r ) 2'(= a7◂ [ *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}] ) } ⊢ { 0'(= r ) 1'(= a7◂ [ *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}] ) }
; .mov_ptn 2'(= a7◂ [ *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}] ) ⊢ 1'(= a7◂ [ *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}] )
	mov rax,r8
	mov r14,rax
	call ETR_134

;; rsp=0 , %527~1'(= {| l |} ) %526~0'(= r ) 
; ∎ { 0'(= r ) 1'(= {| l |} ) }
; .mov_ptn2 { 0'(= r ) 1'(= {| l |} ) } ⊢ { 0'(= r ) 1'(= {| l |} ) }
	ret
LB_437:
;; ? 1'(= a17◂ [ a9◂ [ ]{| l |}] ) ⊢ 4(<7)◂{ 2'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) 3'(= a18◂ [ a9◂ [ ]{| l |}] ) }
	mov rdi,r14
	movzx rax,BYTE [rdi+6]
	cmp rax,4
	jnz LB_438
	mov rdi,r14
	mov rdi,QWORD [rdi+8+8*0]
	mov r8,rdi
	mov rdi,r14
	mov rdi,QWORD [rdi+8+8*1]
	mov r9,rdi
;; rsp=0 , %498~3'(= a18◂ [ a9◂ [ ]{| l |}] ) %497~2'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) %493~0'(= r ) 
; rsp_d=0, #97 2'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) ⊢ 1'(= {| l |} )
	lea rsp,[rsp-8*2]
	mov QWORD [rsp+8*0],r13
	mov QWORD [rsp+8*1],r9
; .mov_ptn2 2'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) ⊢ 0'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] )
; .mov_ptn 2'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) ⊢ 0'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] )
	mov rax,r8
	mov r13,rax
	call ETR_97

	mov r9,QWORD [rsp-8+8*2]
	mov rax,QWORD [rsp-8+8*1]
	mov r14,r13
	mov r13,rax
	lea rsp,[rsp+8*2]
;; rsp=0 , %528~1'(= {| l |} ) %498~3'(= a18◂ [ a9◂ [ ]{| l |}] ) %493~0'(= r ) 
;; ? 3'(= a18◂ [ a9◂ [ ]{| l |}] ) ⊢ 1(<2)◂{ 2'(= a2◂ [ a8◂ [ a13◂ [ {| l |}]]] ) 4'(= a17◂ [ a9◂ [ ]{| l |}] ) }
	mov rdi,r9
	movzx rax,BYTE [rdi+6]
	cmp rax,1
	jnz LB_439
	mov rdi,r9
	mov rdi,QWORD [rdi+8+8*0]
	mov r8,rdi
	mov rdi,r9
	mov rdi,QWORD [rdi+8+8*1]
	mov r10,rdi
;; rsp=0 , %531~4'(= a17◂ [ a9◂ [ ]{| l |}] ) %530~2'(= a2◂ [ a8◂ [ a13◂ [ {| l |}]]] ) %528~1'(= {| l |} ) %493~0'(= r ) 
; rsp_d=0, #100 2'(= a2◂ [ a8◂ [ a13◂ [ {| l |}]]] ) ⊢ 2'(= {| l |} )
	lea rsp,[rsp-8*3]
	mov QWORD [rsp+8*0],r13
	mov QWORD [rsp+8*1],r14
	mov QWORD [rsp+8*2],r10
; .mov_ptn2 2'(= a2◂ [ a8◂ [ a13◂ [ {| l |}]]] ) ⊢ 0'(= a2◂ [ a8◂ [ a13◂ [ {| l |}]]] )
; .mov_ptn 2'(= a2◂ [ a8◂ [ a13◂ [ {| l |}]]] ) ⊢ 0'(= a2◂ [ a8◂ [ a13◂ [ {| l |}]]] )
	mov rax,r8
	mov r13,rax
	call ETR_100

	mov r10,QWORD [rsp-8+8*3]
	mov r14,QWORD [rsp-8+8*2]
	mov rax,QWORD [rsp-8+8*1]
	mov r8,r13
	mov r13,rax
	lea rsp,[rsp+8*3]
;; rsp=0 , %532~2'(= {| l |} ) %531~4'(= a17◂ [ a9◂ [ ]{| l |}] ) %528~1'(= {| l |} ) %493~0'(= r ) 
; rsp_d=0, #132 { 0'(= r ) 4'(= a17◂ [ a9◂ [ ]{| l |}] ) } ⊢ { 0'(= r ) 3'(= {| l |} ) }
	lea rsp,[rsp-8*2]
	mov QWORD [rsp+8*0],r14
	mov QWORD [rsp+8*1],r8
; .mov_ptn2 { 0'(= r ) 4'(= a17◂ [ a9◂ [ ]{| l |}] ) } ⊢ { 0'(= r ) 1'(= a17◂ [ a9◂ [ ]{| l |}] ) }
; .mov_ptn 4'(= a17◂ [ a9◂ [ ]{| l |}] ) ⊢ 1'(= a17◂ [ a9◂ [ ]{| l |}] )
	mov rax,r10
	mov r14,rax
	call ETR_132

	mov r8,QWORD [rsp-8+8*2]
	mov rax,QWORD [rsp-8+8*1]
	mov r9,r14
	mov r14,rax
	lea rsp,[rsp+8*2]
;; rsp=0 , %534~3'(= {| l |} ) %533~0'(= r ) %532~2'(= {| l |} ) %528~1'(= {| l |} ) 
; » _^ .. ⊢ ..
; .. //
	mov rdi,0
	mov rsi,r9
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[rsi] 
	add rdi,rax 
	push rax
	push rsi
	mov rsi,r8
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[rsi] 
	add rdi,rax 
	push rax
	push rsi
	mov rsi,r14
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[rsi] 
	add rdi,rax 
	push rax
	push rsi
	mov rsi,r13
	push rsi
	imul rsi,1
	add rdi,rsi 
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	add rdi,8
	push rdi 
	and rdi,~111b
	add rdi,16
	mov rsi,rdi 
	mov rdi,1
	xor rax,rax 
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call calloc
	mov rsp,QWORD [rsp_tmp]  
	pop rdi 
	mov QWORD [rax],rdi
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	mov r10,rax
	lea rdi,[rax+7+rdi]
	std 
	mov QWORD [tmp],rcx 
	jmp LB_440
	LB_441: db 9,0
LB_440:
	pop rax 
LB_442:
	lea rsi,[LB_441+1-1]
	mov rcx,1
	rep movsb 
	sub rax,1
	cmp rax,0
	jnz LB_442
	jmp LB_443
	LB_444: db 36,32,0
LB_443:
	lea rsi,[LB_444+2-1]
	mov rcx,2
	rep movsb
	pop rsi 
	pop rcx
	lea rsi,[rsi+7+rcx]
	rep movsb
	jmp LB_445
	LB_446: db 32,226,138,162,32,0
LB_445:
	lea rsi,[LB_446+5-1]
	mov rcx,5
	rep movsb
	pop rsi 
	pop rcx
	lea rsi,[rsi+7+rcx]
	rep movsb
	jmp LB_447
	LB_448: db 10,0
LB_447:
	lea rsi,[LB_448+1-1]
	mov rcx,1
	rep movsb
	pop rsi 
	pop rcx
	lea rsi,[rsi+7+rcx]
	rep movsb
	mov rcx,QWORD [tmp] 
;; rsp=0 , %539~4'(= {| l |} ) %538~3'(= {| l |} ) %537~2'(= {| l |} ) %536~1'(= {| l |} ) %535~0'(= r ) 
; ∎ { 0'(= r ) 4'(= {| l |} ) }
; .dlt.ptn 3'(= {| l |} )
	mov rdi,r9
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call free 
	mov rsp,QWORD [rsp_tmp] 
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
; .dlt.ptn 2'(= {| l |} )
	mov rdi,r8
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call free 
	mov rsp,QWORD [rsp_tmp] 
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
; .dlt.ptn 1'(= {| l |} )
	mov rdi,r14
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call free 
	mov rsp,QWORD [rsp_tmp] 
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
; .mov_ptn2 { 0'(= r ) 4'(= {| l |} ) } ⊢ { 0'(= r ) 1'(= {| l |} ) }
; .mov_ptn 4'(= {| l |} ) ⊢ 1'(= {| l |} )
	mov rax,r10
	mov r14,rax
	ret
LB_439:
;; ? 3'(= a18◂ [ a9◂ [ ]{| l |}] ) ⊢ 0(<2)◂3'(= a7◂ [ *{ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}] )
;; rsp=0 , %529~3'(= a7◂ [ *{ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}] ) %528~1'(= {| l |} ) %493~0'(= r ) 
; rsp_d=0, #135 { 0'(= r ) 3'(= a7◂ [ *{ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}] ) } ⊢ { 0'(= r ) 2'(= {| l |} ) }
	lea rsp,[rsp-8*1]
	mov QWORD [rsp+8*0],r14
; .mov_ptn2 { 0'(= r ) 3'(= a7◂ [ *{ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}] ) } ⊢ { 0'(= r ) 1'(= a7◂ [ *{ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}] ) }
; .mov_ptn 3'(= a7◂ [ *{ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}] ) ⊢ 1'(= a7◂ [ *{ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}] )
	mov rax,r9
	mov r14,rax
	call ETR_135

	mov rax,QWORD [rsp-8+8*1]
	mov r8,r14
	mov r14,rax
	lea rsp,[rsp+8*1]
;; rsp=0 , %541~2'(= {| l |} ) %540~0'(= r ) %528~1'(= {| l |} ) 
; » _^ .. ⊢ ..
; .. //
	mov rdi,0
	mov rsi,r8
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[rsi] 
	add rdi,rax 
	push rax
	push rsi
	mov rsi,r14
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[rsi] 
	add rdi,rax 
	push rax
	push rsi
	mov rsi,r13
	push rsi
	imul rsi,1
	add rdi,rsi 
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	add rdi,7
	push rdi 
	and rdi,~111b
	add rdi,16
	mov rsi,rdi 
	mov rdi,1
	xor rax,rax 
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call calloc
	mov rsp,QWORD [rsp_tmp]  
	pop rdi 
	mov QWORD [rax],rdi
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	mov r9,rax
	lea rdi,[rax+7+rdi]
	std 
	mov QWORD [tmp],rcx 
	jmp LB_449
	LB_450: db 9,0
LB_449:
	pop rax 
LB_451:
	lea rsi,[LB_450+1-1]
	mov rcx,1
	rep movsb 
	sub rax,1
	cmp rax,0
	jnz LB_451
	jmp LB_452
	LB_453: db 36,32,0
LB_452:
	lea rsi,[LB_453+2-1]
	mov rcx,2
	rep movsb
	pop rsi 
	pop rcx
	lea rsi,[rsi+7+rcx]
	rep movsb
	jmp LB_454
	LB_455: db 32,226,138,162,10,0
LB_454:
	lea rsi,[LB_455+5-1]
	mov rcx,5
	rep movsb
	pop rsi 
	pop rcx
	lea rsi,[rsi+7+rcx]
	rep movsb
	mov rcx,QWORD [tmp] 
;; rsp=0 , %545~3'(= {| l |} ) %544~2'(= {| l |} ) %543~1'(= {| l |} ) %542~0'(= r ) 
; ∎ { 0'(= r ) 3'(= {| l |} ) }
; .dlt.ptn 2'(= {| l |} )
	mov rdi,r8
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call free 
	mov rsp,QWORD [rsp_tmp] 
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
; .dlt.ptn 1'(= {| l |} )
	mov rdi,r14
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call free 
	mov rsp,QWORD [rsp_tmp] 
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
; .mov_ptn2 { 0'(= r ) 3'(= {| l |} ) } ⊢ { 0'(= r ) 1'(= {| l |} ) }
; .mov_ptn 3'(= {| l |} ) ⊢ 1'(= {| l |} )
	mov rax,r9
	mov r14,rax
	ret
LB_438:
;; ? 1'(= a17◂ [ a9◂ [ ]{| l |}] ) ⊢ 5(<7)◂2'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] )
	mov rdi,r14
	movzx rax,BYTE [rdi+6]
	cmp rax,5
	jnz LB_456
	mov rax,QWORD [rdi+8]
	mov r8,rax
;; rsp=0 , %496~2'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) %493~0'(= r ) 
; » _^ .. ⊢ ..
; .. //
	mov rdi,0
	mov rsi,r13
	push rsi
	imul rsi,1
	add rdi,rsi 
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	add rdi,7
	push rdi 
	and rdi,~111b
	add rdi,16
	mov rsi,rdi 
	mov rdi,1
	xor rax,rax 
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call calloc
	mov rsp,QWORD [rsp_tmp]  
	pop rdi 
	mov QWORD [rax],rdi
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	mov r14,rax
	lea rdi,[rax+7+rdi]
	std 
	mov QWORD [tmp],rcx 
	jmp LB_457
	LB_458: db 9,0
LB_457:
	pop rax 
LB_459:
	lea rsi,[LB_458+1-1]
	mov rcx,1
	rep movsb 
	sub rax,1
	cmp rax,0
	jnz LB_459
	jmp LB_460
	LB_461: db 226,136,142,32,46,46,10,0
LB_460:
	lea rsi,[LB_461+7-1]
	mov rcx,7
	rep movsb
	mov rcx,QWORD [tmp] 
;; rsp=0 , %547~1'(= {| l |} ) %546~0'(= r ) %496~2'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) 
; ∎ { 0'(= r ) 1'(= {| l |} ) }
; .dlt.ptn 2'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] )
;	.dlt adt ⊢ _  
; .mov_ptn2 { 0'(= r ) 1'(= {| l |} ) } ⊢ { 0'(= r ) 1'(= {| l |} ) }
	ret
LB_456:
;; ? 1'(= a17◂ [ a9◂ [ ]{| l |}] ) ⊢ 6(<7)◂1'(= r )
;; rsp=0 , %495~1'(= r ) %493~0'(= r ) 
; » _^ .. ⊢ ..
; .. //
	mov rdi,0
	mov rsi,r13
	push rsi
	imul rsi,1
	add rdi,rsi 
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	add rdi,5
	push rdi 
	and rdi,~111b
	add rdi,16
	mov rsi,rdi 
	mov rdi,1
	xor rax,rax 
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call calloc
	mov rsp,QWORD [rsp_tmp]  
	pop rdi 
	mov QWORD [rax],rdi
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	mov r8,rax
	lea rdi,[rax+7+rdi]
	std 
	mov QWORD [tmp],rcx 
	jmp LB_462
	LB_463: db 9,0
LB_462:
	pop rax 
LB_464:
	lea rsi,[LB_463+1-1]
	mov rcx,1
	rep movsb 
	sub rax,1
	cmp rax,0
	jnz LB_464
	jmp LB_465
	LB_466: db 226,136,142,124,10,0
LB_465:
	lea rsi,[LB_466+5-1]
	mov rcx,5
	rep movsb
	mov rcx,QWORD [tmp] 
;; rsp=0 , %549~2'(= {| l |} ) %548~0'(= r ) %495~1'(= r ) 
; ∎ { 0'(= r ) 2'(= {| l |} ) }
; .dlt.ptn 1'(= r )
; .mov_ptn2 { 0'(= r ) 2'(= {| l |} ) } ⊢ { 0'(= r ) 1'(= {| l |} ) }
; .mov_ptn 2'(= {| l |} ) ⊢ 1'(= {| l |} )
	mov rax,r8
	mov r14,rax
	ret
ETR_133: ; pnt_lc_line { 0'(= r ) 1'(= a19◂ [ a9◂ [ ]{| l |}] ) } ⊢ { 0'(= r ) 1'(= {| l |} ) } : ({ _r64 _t19◂_s8◂_t9 }→{ _r64 _s8 })
;; rsp=0 , %551~1'(= a19◂ [ a9◂ [ ]{| l |}] ) %550~0'(= r ) 
;; ? 1'(= a19◂ [ a9◂ [ ]{| l |}] ) ⊢ 0(<4)◂{ 2'(= a9◂ [ ] ) 3'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) 4'(= a8◂ [ a13◂ [ {| l |}]] ) }
	mov rdi,r14
	movzx rax,BYTE [rdi+6]
	cmp rax,0
	jnz LB_467
	mov rdi,r14
	mov rdi,QWORD [rdi+8+8*0]
	mov r8,rdi
	mov rdi,r14
	mov rdi,QWORD [rdi+8+8*1]
	mov r9,rdi
	mov rdi,r14
	mov rdi,QWORD [rdi+8+8*2]
	mov r10,rdi
;; rsp=0 , %554~4'(= a8◂ [ a13◂ [ {| l |}]] ) %553~3'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) %552~2'(= a9◂ [ ] ) %550~0'(= r ) 
; rsp_d=0, #97 3'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) ⊢ 1'(= {| l |} )
	lea rsp,[rsp-8*3]
	mov QWORD [rsp+8*0],r13
	mov QWORD [rsp+8*1],r8
	mov QWORD [rsp+8*2],r10
; .mov_ptn2 3'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) ⊢ 0'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] )
; .mov_ptn 3'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) ⊢ 0'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] )
	mov rax,r9
	mov r13,rax
	call ETR_97

	mov r10,QWORD [rsp-8+8*3]
	mov r8,QWORD [rsp-8+8*2]
	mov rax,QWORD [rsp-8+8*1]
	mov r14,r13
	mov r13,rax
	lea rsp,[rsp+8*3]
;; rsp=0 , %555~1'(= {| l |} ) %554~4'(= a8◂ [ a13◂ [ {| l |}]] ) %552~2'(= a9◂ [ ] ) %550~0'(= r ) 
; rsp_d=0, #99 4'(= a8◂ [ a13◂ [ {| l |}]] ) ⊢ 3'(= {| l |} )
	lea rsp,[rsp-8*3]
	mov QWORD [rsp+8*0],r13
	mov QWORD [rsp+8*1],r14
	mov QWORD [rsp+8*2],r8
; .mov_ptn2 4'(= a8◂ [ a13◂ [ {| l |}]] ) ⊢ 0'(= a8◂ [ a13◂ [ {| l |}]] )
; .mov_ptn 4'(= a8◂ [ a13◂ [ {| l |}]] ) ⊢ 0'(= a8◂ [ a13◂ [ {| l |}]] )
	mov rax,r10
	mov r13,rax
	call ETR_99

	mov r8,QWORD [rsp-8+8*3]
	mov r14,QWORD [rsp-8+8*2]
	mov rax,QWORD [rsp-8+8*1]
	mov r9,r13
	mov r13,rax
	lea rsp,[rsp+8*3]
;; rsp=0 , %556~3'(= {| l |} ) %555~1'(= {| l |} ) %552~2'(= a9◂ [ ] ) %550~0'(= r ) 
; rsp_d=0, #82 2'(= a9◂ [ ] ) ⊢ 2'(= {| l |} )
	lea rsp,[rsp-8*3]
	mov QWORD [rsp+8*0],r13
	mov QWORD [rsp+8*1],r14
	mov QWORD [rsp+8*2],r9
; .mov_ptn2 2'(= a9◂ [ ] ) ⊢ 0'(= a9◂ [ ] )
; .mov_ptn 2'(= a9◂ [ ] ) ⊢ 0'(= a9◂ [ ] )
	mov rax,r8
	mov r13,rax
	call ETR_82

	mov r9,QWORD [rsp-8+8*3]
	mov r14,QWORD [rsp-8+8*2]
	mov rax,QWORD [rsp-8+8*1]
	mov r8,r13
	mov r13,rax
	lea rsp,[rsp+8*3]
;; rsp=0 , %557~2'(= {| l |} ) %556~3'(= {| l |} ) %555~1'(= {| l |} ) %550~0'(= r ) 
; » _^ .. ⊢ ..
; .. //
	mov rdi,0
	mov rsi,r9
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[rsi] 
	add rdi,rax 
	push rax
	push rsi
	mov rsi,r14
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[rsi] 
	add rdi,rax 
	push rax
	push rsi
	mov rsi,r8
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[rsi] 
	add rdi,rax 
	push rax
	push rsi
	mov rsi,r13
	push rsi
	imul rsi,1
	add rdi,rsi 
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	add rdi,7
	push rdi 
	and rdi,~111b
	add rdi,16
	mov rsi,rdi 
	mov rdi,1
	xor rax,rax 
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call calloc
	mov rsp,QWORD [rsp_tmp]  
	pop rdi 
	mov QWORD [rax],rdi
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	mov r10,rax
	lea rdi,[rax+7+rdi]
	std 
	mov QWORD [tmp],rcx 
	jmp LB_468
	LB_469: db 9,0
LB_468:
	pop rax 
LB_470:
	lea rsi,[LB_469+1-1]
	mov rcx,1
	rep movsb 
	sub rax,1
	cmp rax,0
	jnz LB_470
	pop rsi 
	pop rcx
	lea rsi,[rsi+7+rcx]
	rep movsb
	jmp LB_471
	LB_472: db 32,0
LB_471:
	lea rsi,[LB_472+1-1]
	mov rcx,1
	rep movsb
	pop rsi 
	pop rcx
	lea rsi,[rsi+7+rcx]
	rep movsb
	jmp LB_473
	LB_474: db 32,226,138,162,32,0
LB_473:
	lea rsi,[LB_474+5-1]
	mov rcx,5
	rep movsb
	pop rsi 
	pop rcx
	lea rsi,[rsi+7+rcx]
	rep movsb
	jmp LB_475
	LB_476: db 10,0
LB_475:
	lea rsi,[LB_476+1-1]
	mov rcx,1
	rep movsb
	mov rcx,QWORD [tmp] 
;; rsp=0 , %562~4'(= {| l |} ) %561~3'(= {| l |} ) %560~1'(= {| l |} ) %559~2'(= {| l |} ) %558~0'(= r ) 
; ∎ { 0'(= r ) 4'(= {| l |} ) }
; .dlt.ptn 3'(= {| l |} )
	mov rdi,r9
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call free 
	mov rsp,QWORD [rsp_tmp] 
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
; .dlt.ptn 1'(= {| l |} )
	mov rdi,r14
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call free 
	mov rsp,QWORD [rsp_tmp] 
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
; .dlt.ptn 2'(= {| l |} )
	mov rdi,r8
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call free 
	mov rsp,QWORD [rsp_tmp] 
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
; .mov_ptn2 { 0'(= r ) 4'(= {| l |} ) } ⊢ { 0'(= r ) 1'(= {| l |} ) }
; .mov_ptn 4'(= {| l |} ) ⊢ 1'(= {| l |} )
	mov rax,r10
	mov r14,rax
	ret
LB_467:
;; ? 1'(= a19◂ [ a9◂ [ ]{| l |}] ) ⊢ 1(<4)◂{ 2'(= a12◂ [ a9◂ [ ]{| l |}] ) 3'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) 4'(= a8◂ [ a13◂ [ {| l |}]] ) }
	mov rdi,r14
	movzx rax,BYTE [rdi+6]
	cmp rax,1
	jnz LB_477
	mov rdi,r14
	mov rdi,QWORD [rdi+8+8*0]
	mov r8,rdi
	mov rdi,r14
	mov rdi,QWORD [rdi+8+8*1]
	mov r9,rdi
	mov rdi,r14
	mov rdi,QWORD [rdi+8+8*2]
	mov r10,rdi
;; rsp=0 , %565~4'(= a8◂ [ a13◂ [ {| l |}]] ) %564~3'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) %563~2'(= a12◂ [ a9◂ [ ]{| l |}] ) %550~0'(= r ) 
; #78 2'(= a12◂ [ a9◂ [ ]{| l |}] ) ⊢ 1(<2)◂2'(= a12◂ [ a9◂ [ ]{| l |}] )
;; rsp=0 , %566~1(<2)◂2'(= a12◂ [ a9◂ [ ]{| l |}] ) %565~4'(= a8◂ [ a13◂ [ {| l |}]] ) %564~3'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) %550~0'(= r ) 
; rsp_d=0, #97 1(<2)◂2'(= a12◂ [ a9◂ [ ]{| l |}] ) ⊢ 1'(= {| l |} )
	lea rsp,[rsp-8*3]
	mov QWORD [rsp+8*0],r13
	mov QWORD [rsp+8*1],r9
	mov QWORD [rsp+8*2],r10
; .mov_ptn2 1(<2)◂2'(= a12◂ [ a9◂ [ ]{| l |}] ) ⊢ 0'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] )
; .mov_ptn 1(<2)◂2'(= a12◂ [ a9◂ [ ]{| l |}] ) ⊢ 0'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] )
	mov rax,r8
	mov rdi,rax
	mov rax,[SS_LN_TOP]
	mov rsi,[rax]
	mov QWORD [SS_LN_TOP],rsi 
	mov QWORD [rax],0
	mov BYTE [rax+6],1
	mov QWORD [rax+8],rdi
	mov r13,rax
	call ETR_97

	mov r10,QWORD [rsp-8+8*3]
	mov r9,QWORD [rsp-8+8*2]
	mov rax,QWORD [rsp-8+8*1]
	mov r14,r13
	mov r13,rax
	lea rsp,[rsp+8*3]
;; rsp=0 , %567~1'(= {| l |} ) %565~4'(= a8◂ [ a13◂ [ {| l |}]] ) %564~3'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) %550~0'(= r ) 
; rsp_d=0, #97 3'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) ⊢ 2'(= {| l |} )
	lea rsp,[rsp-8*3]
	mov QWORD [rsp+8*0],r13
	mov QWORD [rsp+8*1],r14
	mov QWORD [rsp+8*2],r10
; .mov_ptn2 3'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) ⊢ 0'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] )
; .mov_ptn 3'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) ⊢ 0'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] )
	mov rax,r9
	mov r13,rax
	call ETR_97

	mov r10,QWORD [rsp-8+8*3]
	mov r14,QWORD [rsp-8+8*2]
	mov rax,QWORD [rsp-8+8*1]
	mov r8,r13
	mov r13,rax
	lea rsp,[rsp+8*3]
;; rsp=0 , %568~2'(= {| l |} ) %567~1'(= {| l |} ) %565~4'(= a8◂ [ a13◂ [ {| l |}]] ) %550~0'(= r ) 
; rsp_d=0, #99 4'(= a8◂ [ a13◂ [ {| l |}]] ) ⊢ 3'(= {| l |} )
	lea rsp,[rsp-8*3]
	mov QWORD [rsp+8*0],r13
	mov QWORD [rsp+8*1],r14
	mov QWORD [rsp+8*2],r8
; .mov_ptn2 4'(= a8◂ [ a13◂ [ {| l |}]] ) ⊢ 0'(= a8◂ [ a13◂ [ {| l |}]] )
; .mov_ptn 4'(= a8◂ [ a13◂ [ {| l |}]] ) ⊢ 0'(= a8◂ [ a13◂ [ {| l |}]] )
	mov rax,r10
	mov r13,rax
	call ETR_99

	mov r8,QWORD [rsp-8+8*3]
	mov r14,QWORD [rsp-8+8*2]
	mov rax,QWORD [rsp-8+8*1]
	mov r9,r13
	mov r13,rax
	lea rsp,[rsp+8*3]
;; rsp=0 , %569~3'(= {| l |} ) %568~2'(= {| l |} ) %567~1'(= {| l |} ) %550~0'(= r ) 
; » _^ .. ⊢ ..
; .. //
	mov rdi,0
	mov rsi,r9
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[rsi] 
	add rdi,rax 
	push rax
	push rsi
	mov rsi,r8
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[rsi] 
	add rdi,rax 
	push rax
	push rsi
	mov rsi,r14
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[rsi] 
	add rdi,rax 
	push rax
	push rsi
	mov rsi,r13
	push rsi
	imul rsi,1
	add rdi,rsi 
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	add rdi,11
	push rdi 
	and rdi,~111b
	add rdi,16
	mov rsi,rdi 
	mov rdi,1
	xor rax,rax 
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call calloc
	mov rsp,QWORD [rsp_tmp]  
	pop rdi 
	mov QWORD [rax],rdi
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	mov r10,rax
	lea rdi,[rax+7+rdi]
	std 
	mov QWORD [tmp],rcx 
	jmp LB_478
	LB_479: db 9,0
LB_478:
	pop rax 
LB_480:
	lea rsi,[LB_479+1-1]
	mov rcx,1
	rep movsb 
	sub rax,1
	cmp rax,0
	jnz LB_480
	jmp LB_481
	LB_482: db 226,151,130,32,0
LB_481:
	lea rsi,[LB_482+4-1]
	mov rcx,4
	rep movsb
	pop rsi 
	pop rcx
	lea rsi,[rsi+7+rcx]
	rep movsb
	jmp LB_483
	LB_484: db 44,0
LB_483:
	lea rsi,[LB_484+1-1]
	mov rcx,1
	rep movsb
	pop rsi 
	pop rcx
	lea rsi,[rsi+7+rcx]
	rep movsb
	jmp LB_485
	LB_486: db 32,226,138,162,32,0
LB_485:
	lea rsi,[LB_486+5-1]
	mov rcx,5
	rep movsb
	pop rsi 
	pop rcx
	lea rsi,[rsi+7+rcx]
	rep movsb
	jmp LB_487
	LB_488: db 10,0
LB_487:
	lea rsi,[LB_488+1-1]
	mov rcx,1
	rep movsb
	mov rcx,QWORD [tmp] 
;; rsp=0 , %574~4'(= {| l |} ) %573~3'(= {| l |} ) %572~2'(= {| l |} ) %571~1'(= {| l |} ) %570~0'(= r ) 
; ∎ { 0'(= r ) 4'(= {| l |} ) }
; .dlt.ptn 3'(= {| l |} )
	mov rdi,r9
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call free 
	mov rsp,QWORD [rsp_tmp] 
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
; .dlt.ptn 2'(= {| l |} )
	mov rdi,r8
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call free 
	mov rsp,QWORD [rsp_tmp] 
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
; .dlt.ptn 1'(= {| l |} )
	mov rdi,r14
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call free 
	mov rsp,QWORD [rsp_tmp] 
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
; .mov_ptn2 { 0'(= r ) 4'(= {| l |} ) } ⊢ { 0'(= r ) 1'(= {| l |} ) }
; .mov_ptn 4'(= {| l |} ) ⊢ 1'(= {| l |} )
	mov rax,r10
	mov r14,rax
	ret
LB_477:
;; ? 1'(= a19◂ [ a9◂ [ ]{| l |}] ) ⊢ 2(<4)◂{ 2'(= a11◂ [ a9◂ [ ]] ) 3'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) 4'(= a8◂ [ a13◂ [ {| l |}]] ) }
	mov rdi,r14
	movzx rax,BYTE [rdi+6]
	cmp rax,2
	jnz LB_489
	mov rdi,r14
	mov rdi,QWORD [rdi+8+8*0]
	mov r8,rdi
	mov rdi,r14
	mov rdi,QWORD [rdi+8+8*1]
	mov r9,rdi
	mov rdi,r14
	mov rdi,QWORD [rdi+8+8*2]
	mov r10,rdi
;; rsp=0 , %577~4'(= a8◂ [ a13◂ [ {| l |}]] ) %576~3'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) %575~2'(= a11◂ [ a9◂ [ ]] ) %550~0'(= r ) 
; rsp_d=0, #97 3'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) ⊢ 1'(= {| l |} )
	lea rsp,[rsp-8*3]
	mov QWORD [rsp+8*0],r13
	mov QWORD [rsp+8*1],r8
	mov QWORD [rsp+8*2],r10
; .mov_ptn2 3'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) ⊢ 0'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] )
; .mov_ptn 3'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) ⊢ 0'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] )
	mov rax,r9
	mov r13,rax
	call ETR_97

	mov r10,QWORD [rsp-8+8*3]
	mov r8,QWORD [rsp-8+8*2]
	mov rax,QWORD [rsp-8+8*1]
	mov r14,r13
	mov r13,rax
	lea rsp,[rsp+8*3]
;; rsp=0 , %578~1'(= {| l |} ) %577~4'(= a8◂ [ a13◂ [ {| l |}]] ) %575~2'(= a11◂ [ a9◂ [ ]] ) %550~0'(= r ) 
; rsp_d=0, #99 4'(= a8◂ [ a13◂ [ {| l |}]] ) ⊢ 3'(= {| l |} )
	lea rsp,[rsp-8*3]
	mov QWORD [rsp+8*0],r13
	mov QWORD [rsp+8*1],r14
	mov QWORD [rsp+8*2],r8
; .mov_ptn2 4'(= a8◂ [ a13◂ [ {| l |}]] ) ⊢ 0'(= a8◂ [ a13◂ [ {| l |}]] )
; .mov_ptn 4'(= a8◂ [ a13◂ [ {| l |}]] ) ⊢ 0'(= a8◂ [ a13◂ [ {| l |}]] )
	mov rax,r10
	mov r13,rax
	call ETR_99

	mov r8,QWORD [rsp-8+8*3]
	mov r14,QWORD [rsp-8+8*2]
	mov rax,QWORD [rsp-8+8*1]
	mov r9,r13
	mov r13,rax
	lea rsp,[rsp+8*3]
;; rsp=0 , %579~3'(= {| l |} ) %578~1'(= {| l |} ) %575~2'(= a11◂ [ a9◂ [ ]] ) %550~0'(= r ) 
; rsp_d=0, #88 2'(= a11◂ [ a9◂ [ ]] ) ⊢ 2'(= {| l |} )
	lea rsp,[rsp-8*3]
	mov QWORD [rsp+8*0],r13
	mov QWORD [rsp+8*1],r14
	mov QWORD [rsp+8*2],r9
; .mov_ptn2 2'(= a11◂ [ a9◂ [ ]] ) ⊢ 0'(= a11◂ [ a9◂ [ ]] )
; .mov_ptn 2'(= a11◂ [ a9◂ [ ]] ) ⊢ 0'(= a11◂ [ a9◂ [ ]] )
	mov rax,r8
	mov r13,rax
	call ETR_88

	mov r9,QWORD [rsp-8+8*3]
	mov r14,QWORD [rsp-8+8*2]
	mov rax,QWORD [rsp-8+8*1]
	mov r8,r13
	mov r13,rax
	lea rsp,[rsp+8*3]
;; rsp=0 , %580~2'(= {| l |} ) %579~3'(= {| l |} ) %578~1'(= {| l |} ) %550~0'(= r ) 
; » _^ .. ⊢ ..
; .. //
	mov rdi,0
	mov rsi,r9
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[rsi] 
	add rdi,rax 
	push rax
	push rsi
	mov rsi,r14
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[rsi] 
	add rdi,rax 
	push rax
	push rsi
	mov rsi,r8
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[rsi] 
	add rdi,rax 
	push rax
	push rsi
	mov rsi,r13
	push rsi
	imul rsi,1
	add rdi,rsi 
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	add rdi,10
	push rdi 
	and rdi,~111b
	add rdi,16
	mov rsi,rdi 
	mov rdi,1
	xor rax,rax 
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call calloc
	mov rsp,QWORD [rsp_tmp]  
	pop rdi 
	mov QWORD [rax],rdi
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	mov r10,rax
	lea rdi,[rax+7+rdi]
	std 
	mov QWORD [tmp],rcx 
	jmp LB_490
	LB_491: db 9,0
LB_490:
	pop rax 
LB_492:
	lea rsi,[LB_491+1-1]
	mov rcx,1
	rep movsb 
	sub rax,1
	cmp rax,0
	jnz LB_492
	jmp LB_493
	LB_494: db 194,187,32,0
LB_493:
	lea rsi,[LB_494+3-1]
	mov rcx,3
	rep movsb
	pop rsi 
	pop rcx
	lea rsi,[rsi+7+rcx]
	rep movsb
	jmp LB_495
	LB_496: db 32,0
LB_495:
	lea rsi,[LB_496+1-1]
	mov rcx,1
	rep movsb
	pop rsi 
	pop rcx
	lea rsi,[rsi+7+rcx]
	rep movsb
	jmp LB_497
	LB_498: db 32,226,138,162,32,0
LB_497:
	lea rsi,[LB_498+5-1]
	mov rcx,5
	rep movsb
	pop rsi 
	pop rcx
	lea rsi,[rsi+7+rcx]
	rep movsb
	jmp LB_499
	LB_500: db 10,0
LB_499:
	lea rsi,[LB_500+1-1]
	mov rcx,1
	rep movsb
	mov rcx,QWORD [tmp] 
;; rsp=0 , %585~4'(= {| l |} ) %584~3'(= {| l |} ) %583~1'(= {| l |} ) %582~2'(= {| l |} ) %581~0'(= r ) 
; ∎ { 0'(= r ) 4'(= {| l |} ) }
; .dlt.ptn 3'(= {| l |} )
	mov rdi,r9
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call free 
	mov rsp,QWORD [rsp_tmp] 
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
; .dlt.ptn 1'(= {| l |} )
	mov rdi,r14
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call free 
	mov rsp,QWORD [rsp_tmp] 
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
; .dlt.ptn 2'(= {| l |} )
	mov rdi,r8
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call free 
	mov rsp,QWORD [rsp_tmp] 
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
; .mov_ptn2 { 0'(= r ) 4'(= {| l |} ) } ⊢ { 0'(= r ) 1'(= {| l |} ) }
; .mov_ptn 4'(= {| l |} ) ⊢ 1'(= {| l |} )
	mov rax,r10
	mov r14,rax
	ret
LB_489:
;; ? 1'(= a19◂ [ a9◂ [ ]{| l |}] ) ⊢ 3(<4)◂{ 2'(= a2◂ [ a16◂ [ a9◂ [ ]]] ) 3'(= a2◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) 4'(= a2◂ [ a13◂ [ {| l |}]] ) }
	mov rdi,r14
	mov rdi,QWORD [rdi+8+8*0]
	mov r8,rdi
	mov rdi,r14
	mov rdi,QWORD [rdi+8+8*1]
	mov r9,rdi
	mov rdi,r14
	mov rdi,QWORD [rdi+8+8*2]
	mov r10,rdi
;; rsp=0 , %588~4'(= a2◂ [ a13◂ [ {| l |}]] ) %587~3'(= a2◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) %586~2'(= a2◂ [ a16◂ [ a9◂ [ ]]] ) %550~0'(= r ) 
; » _^ .. ⊢ ..
; .. //
	mov rdi,0
	mov rsi,r13
	push rsi
	imul rsi,1
	add rdi,rsi 
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	add rdi,23
	push rdi 
	and rdi,~111b
	add rdi,16
	mov rsi,rdi 
	mov rdi,1
	xor rax,rax 
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call calloc
	mov rsp,QWORD [rsp_tmp]  
	pop rdi 
	mov QWORD [rax],rdi
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	mov r14,rax
	lea rdi,[rax+7+rdi]
	std 
	mov QWORD [tmp],rcx 
	jmp LB_501
	LB_502: db 9,0
LB_501:
	pop rax 
LB_503:
	lea rsi,[LB_502+1-1]
	mov rcx,1
	rep movsb 
	sub rax,1
	cmp rax,0
	jnz LB_503
	jmp LB_504
	LB_505: db 194,187,32,95,94,32,46,46,0
LB_504:
	lea rsi,[LB_505+8-1]
	mov rcx,8
	rep movsb
	jmp LB_506
	LB_507: db 32,226,138,162,32,46,46,0
LB_506:
	lea rsi,[LB_507+7-1]
	mov rcx,7
	rep movsb
	jmp LB_508
	LB_509: db 10,0
LB_508:
	lea rsi,[LB_509+1-1]
	mov rcx,1
	rep movsb
	jmp LB_510
	LB_511: db 32,46,46,32,47,47,10,0
LB_510:
	lea rsi,[LB_511+7-1]
	mov rcx,7
	rep movsb
	mov rcx,QWORD [tmp] 
;; rsp=0 , %590~1'(= {| l |} ) %589~0'(= r ) %588~4'(= a2◂ [ a13◂ [ {| l |}]] ) %587~3'(= a2◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) %586~2'(= a2◂ [ a16◂ [ a9◂ [ ]]] ) 
; ∎ { 0'(= r ) 1'(= {| l |} ) }
; .dlt.ptn 4'(= a2◂ [ a13◂ [ {| l |}]] )
;	.dlt adt ⊢ _  
; .dlt.ptn 3'(= a2◂ [ a12◂ [ a9◂ [ ]{| l |}]] )
;	.dlt adt ⊢ _  
; .dlt.ptn 2'(= a2◂ [ a16◂ [ a9◂ [ ]]] )
;	.dlt adt ⊢ _  
; .mov_ptn2 { 0'(= r ) 1'(= {| l |} ) } ⊢ { 0'(= r ) 1'(= {| l |} ) }
	ret
ETR_134: ; pnt_lc_mtc { 0'(= r ) 1'(= a7◂ [ *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}] ) } ⊢ { 0'(= r ) 1'(= {| l |} ) } : ({ _r64 _t7◂{ _lst◂_t21◂_s8◂_t9 _t20◂_s8◂_t9 } }→{ _r64 _s8 })
;; rsp=0 , %592~1'(= a7◂ [ *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}] ) %591~0'(= r ) 
;; ? 1'(= a7◂ [ *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}] ) ⊢ 0(<2)◂{ { 3'(= a2◂ [ a21◂ [ a9◂ [ ]{| l |}]] ) 4'(= a20◂ [ a9◂ [ ]{| l |}] ) } 5'(= a7◂ [ *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}] ) }
	mov rdi,r14
	movzx rax,BYTE [rdi+6]
	cmp rax,0
	jnz LB_512
	mov rdi,r14
	mov rdi,QWORD [rdi+8+8*0]
	mov r8,rdi
	mov rdi,r8
	mov rdi,QWORD [rdi+8+8*0]
	mov r9,rdi
	mov rdi,r8
	mov rdi,QWORD [rdi+8+8*1]
	mov r10,rdi
	mov rdi,r14
	mov rdi,QWORD [rdi+8+8*1]
	mov r11,rdi
;; rsp=0 , %595~5'(= a7◂ [ *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}] ) %594~4'(= a20◂ [ a9◂ [ ]{| l |}] ) %593~3'(= a2◂ [ a21◂ [ a9◂ [ ]{| l |}]] ) %591~0'(= r ) 
; rsp_d=0, #134 { 0'(= r ) 5'(= a7◂ [ *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}] ) } ⊢ { 0'(= r ) 1'(= {| l |} ) }
	lea rsp,[rsp-8*2]
	mov QWORD [rsp+8*0],r9
	mov QWORD [rsp+8*1],r10
; .mov_ptn2 { 0'(= r ) 5'(= a7◂ [ *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}] ) } ⊢ { 0'(= r ) 1'(= a7◂ [ *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}] ) }
; .mov_ptn 5'(= a7◂ [ *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}] ) ⊢ 1'(= a7◂ [ *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}] )
	mov rax,r11
	mov r14,rax
	call ETR_134

	mov r10,QWORD [rsp-8+8*2]
	mov r9,QWORD [rsp-8+8*1]
	lea rsp,[rsp+8*2]
;; rsp=0 , %597~1'(= {| l |} ) %596~0'(= r ) %594~4'(= a20◂ [ a9◂ [ ]{| l |}] ) %593~3'(= a2◂ [ a21◂ [ a9◂ [ ]{| l |}]] ) 
;; ? 4'(= a20◂ [ a9◂ [ ]{| l |}] ) ⊢ 0(<3)◂2'(= a7◂ [ *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}] )
	mov rdi,r10
	movzx rax,BYTE [rdi+6]
	cmp rax,0
	jnz LB_513
	mov rax,QWORD [rdi+8]
	mov r8,rax
;; rsp=0 , %601~2'(= a7◂ [ *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}] ) %597~1'(= {| l |} ) %596~0'(= r ) %593~3'(= a2◂ [ a21◂ [ a9◂ [ ]{| l |}]] ) 
; rsp_d=0, #134 { 0'(= r ) 2'(= a7◂ [ *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}] ) } ⊢ { 0'(= r ) 2'(= {| l |} ) }
	lea rsp,[rsp-8*2]
	mov QWORD [rsp+8*0],r14
	mov QWORD [rsp+8*1],r9
; .mov_ptn2 { 0'(= r ) 2'(= a7◂ [ *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}] ) } ⊢ { 0'(= r ) 1'(= a7◂ [ *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}] ) }
; .mov_ptn 2'(= a7◂ [ *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}] ) ⊢ 1'(= a7◂ [ *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}] )
	mov rax,r8
	mov r14,rax
	call ETR_134

	mov r9,QWORD [rsp-8+8*2]
	mov rax,QWORD [rsp-8+8*1]
	mov r8,r14
	mov r14,rax
	lea rsp,[rsp+8*2]
;; rsp=0 , %603~2'(= {| l |} ) %602~0'(= r ) %597~1'(= {| l |} ) %593~3'(= a2◂ [ a21◂ [ a9◂ [ ]{| l |}]] ) 
; » _^ .. ⊢ ..
; .. //
	mov rdi,0
	mov rsi,r14
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[rsi] 
	add rdi,rax 
	push rax
	push rsi
	mov rsi,r8
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[rsi] 
	add rdi,rax 
	push rax
	push rsi
	mov rsi,r13
	push rsi
	imul rsi,1
	add rdi,rsi 
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	add rdi,9
	push rdi 
	and rdi,~111b
	add rdi,16
	mov rsi,rdi 
	mov rdi,1
	xor rax,rax 
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call calloc
	mov rsp,QWORD [rsp_tmp]  
	pop rdi 
	mov QWORD [rax],rdi
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	mov r10,rax
	lea rdi,[rax+7+rdi]
	std 
	mov QWORD [tmp],rcx 
	jmp LB_514
	LB_515: db 9,0
LB_514:
	pop rax 
LB_516:
	lea rsi,[LB_515+1-1]
	mov rcx,1
	rep movsb 
	sub rax,1
	cmp rax,0
	jnz LB_516
	jmp LB_517
	LB_518: db 226,136,144,32,46,46,32,59,10,0
LB_517:
	lea rsi,[LB_518+9-1]
	mov rcx,9
	rep movsb
	pop rsi 
	pop rcx
	lea rsi,[rsi+7+rcx]
	rep movsb
	pop rsi 
	pop rcx
	lea rsi,[rsi+7+rcx]
	rep movsb
	mov rcx,QWORD [tmp] 
;; rsp=0 , %607~4'(= {| l |} ) %606~2'(= {| l |} ) %605~1'(= {| l |} ) %604~0'(= r ) %593~3'(= a2◂ [ a21◂ [ a9◂ [ ]{| l |}]] ) 
; ∎ { 0'(= r ) 4'(= {| l |} ) }
; .dlt.ptn 2'(= {| l |} )
	mov rdi,r8
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call free 
	mov rsp,QWORD [rsp_tmp] 
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
; .dlt.ptn 1'(= {| l |} )
	mov rdi,r14
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call free 
	mov rsp,QWORD [rsp_tmp] 
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
; .dlt.ptn 3'(= a2◂ [ a21◂ [ a9◂ [ ]{| l |}]] )
;	.dlt adt ⊢ _  
; .mov_ptn2 { 0'(= r ) 4'(= {| l |} ) } ⊢ { 0'(= r ) 1'(= {| l |} ) }
; .mov_ptn 4'(= {| l |} ) ⊢ 1'(= {| l |} )
	mov rax,r10
	mov r14,rax
	ret
LB_513:
;; ? 4'(= a20◂ [ a9◂ [ ]{| l |}] ) ⊢ 1(<3)◂{ 2'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) 5'(= a7◂ [ *{ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}] ) }
	mov rdi,r10
	movzx rax,BYTE [rdi+6]
	cmp rax,1
	jnz LB_519
	mov rdi,r10
	mov rdi,QWORD [rdi+8+8*0]
	mov r8,rdi
	mov rdi,r10
	mov rdi,QWORD [rdi+8+8*1]
	mov r11,rdi
;; rsp=0 , %600~5'(= a7◂ [ *{ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}] ) %599~2'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) %597~1'(= {| l |} ) %596~0'(= r ) %593~3'(= a2◂ [ a21◂ [ a9◂ [ ]{| l |}]] ) 
; rsp_d=0, #97 2'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) ⊢ 2'(= {| l |} )
	lea rsp,[rsp-8*4]
	mov QWORD [rsp+8*0],r13
	mov QWORD [rsp+8*1],r14
	mov QWORD [rsp+8*2],r9
	mov QWORD [rsp+8*3],r11
; .mov_ptn2 2'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) ⊢ 0'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] )
; .mov_ptn 2'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) ⊢ 0'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] )
	mov rax,r8
	mov r13,rax
	call ETR_97

	mov r11,QWORD [rsp-8+8*4]
	mov r9,QWORD [rsp-8+8*3]
	mov r14,QWORD [rsp-8+8*2]
	mov rax,QWORD [rsp-8+8*1]
	mov r8,r13
	mov r13,rax
	lea rsp,[rsp+8*4]
;; rsp=0 , %608~2'(= {| l |} ) %600~5'(= a7◂ [ *{ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}] ) %597~1'(= {| l |} ) %596~0'(= r ) %593~3'(= a2◂ [ a21◂ [ a9◂ [ ]{| l |}]] ) 
; rsp_d=0, #135 { 0'(= r ) 5'(= a7◂ [ *{ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}] ) } ⊢ { 0'(= r ) 4'(= {| l |} ) }
	lea rsp,[rsp-8*3]
	mov QWORD [rsp+8*0],r14
	mov QWORD [rsp+8*1],r8
	mov QWORD [rsp+8*2],r9
; .mov_ptn2 { 0'(= r ) 5'(= a7◂ [ *{ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}] ) } ⊢ { 0'(= r ) 1'(= a7◂ [ *{ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}] ) }
; .mov_ptn 5'(= a7◂ [ *{ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}] ) ⊢ 1'(= a7◂ [ *{ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}] )
	mov rax,r11
	mov r14,rax
	call ETR_135

	mov r9,QWORD [rsp-8+8*3]
	mov r8,QWORD [rsp-8+8*2]
	mov rax,QWORD [rsp-8+8*1]
	mov r10,r14
	mov r14,rax
	lea rsp,[rsp+8*3]
;; rsp=0 , %610~4'(= {| l |} ) %609~0'(= r ) %608~2'(= {| l |} ) %597~1'(= {| l |} ) %593~3'(= a2◂ [ a21◂ [ a9◂ [ ]{| l |}]] ) 
; » _^ .. ⊢ ..
; .. //
	mov rdi,0
	mov rsi,r14
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[rsi] 
	add rdi,rax 
	push rax
	push rsi
	mov rsi,r10
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[rsi] 
	add rdi,rax 
	push rax
	push rsi
	mov rsi,r8
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[rsi] 
	add rdi,rax 
	push rax
	push rsi
	mov rsi,r13
	push rsi
	imul rsi,1
	add rdi,rsi 
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	add rdi,14
	push rdi 
	and rdi,~111b
	add rdi,16
	mov rsi,rdi 
	mov rdi,1
	xor rax,rax 
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call calloc
	mov rsp,QWORD [rsp_tmp]  
	pop rdi 
	mov QWORD [rax],rdi
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	mov r11,rax
	lea rdi,[rax+7+rdi]
	std 
	mov QWORD [tmp],rcx 
	jmp LB_520
	LB_521: db 9,0
LB_520:
	pop rax 
LB_522:
	lea rsi,[LB_521+1-1]
	mov rcx,1
	rep movsb 
	sub rax,1
	cmp rax,0
	jnz LB_522
	jmp LB_523
	LB_524: db 226,136,144,32,46,46,32,59,32,0
LB_523:
	lea rsi,[LB_524+9-1]
	mov rcx,9
	rep movsb
	pop rsi 
	pop rcx
	lea rsi,[rsi+7+rcx]
	rep movsb
	jmp LB_525
	LB_526: db 226,138,162,32,10,0
LB_525:
	lea rsi,[LB_526+5-1]
	mov rcx,5
	rep movsb
	pop rsi 
	pop rcx
	lea rsi,[rsi+7+rcx]
	rep movsb
	pop rsi 
	pop rcx
	lea rsi,[rsi+7+rcx]
	rep movsb
	mov rcx,QWORD [tmp] 
;; rsp=0 , %615~5'(= {| l |} ) %614~4'(= {| l |} ) %613~1'(= {| l |} ) %612~2'(= {| l |} ) %611~0'(= r ) %593~3'(= a2◂ [ a21◂ [ a9◂ [ ]{| l |}]] ) 
; ∎ { 0'(= r ) 5'(= {| l |} ) }
; .dlt.ptn 4'(= {| l |} )
	mov rdi,r10
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call free 
	mov rsp,QWORD [rsp_tmp] 
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
; .dlt.ptn 1'(= {| l |} )
	mov rdi,r14
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call free 
	mov rsp,QWORD [rsp_tmp] 
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
; .dlt.ptn 2'(= {| l |} )
	mov rdi,r8
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call free 
	mov rsp,QWORD [rsp_tmp] 
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
; .dlt.ptn 3'(= a2◂ [ a21◂ [ a9◂ [ ]{| l |}]] )
;	.dlt adt ⊢ _  
; .mov_ptn2 { 0'(= r ) 5'(= {| l |} ) } ⊢ { 0'(= r ) 1'(= {| l |} ) }
; .mov_ptn 5'(= {| l |} ) ⊢ 1'(= {| l |} )
	mov rax,r11
	mov r14,rax
	ret
LB_519:
;; ? 4'(= a20◂ [ a9◂ [ ]{| l |}] ) ⊢ 2(<3)◂4'(= a17◂ [ a9◂ [ ]{| l |}] )
;; rsp=0 , %598~4'(= a17◂ [ a9◂ [ ]{| l |}] ) %597~1'(= {| l |} ) %596~0'(= r ) %593~3'(= a2◂ [ a21◂ [ a9◂ [ ]{| l |}]] ) 
; _inc 0'(= r ) ⊢ 0'(= r )
	add r13,1
;; rsp=0 , %616~0'(= r ) %598~4'(= a17◂ [ a9◂ [ ]{| l |}] ) %597~1'(= {| l |} ) %593~3'(= a2◂ [ a21◂ [ a9◂ [ ]{| l |}]] ) 
; rsp_d=0, #132 { 0'(= r ) 4'(= a17◂ [ a9◂ [ ]{| l |}] ) } ⊢ { 0'(= r ) 2'(= {| l |} ) }
	lea rsp,[rsp-8*2]
	mov QWORD [rsp+8*0],r14
	mov QWORD [rsp+8*1],r9
; .mov_ptn2 { 0'(= r ) 4'(= a17◂ [ a9◂ [ ]{| l |}] ) } ⊢ { 0'(= r ) 1'(= a17◂ [ a9◂ [ ]{| l |}] ) }
; .mov_ptn 4'(= a17◂ [ a9◂ [ ]{| l |}] ) ⊢ 1'(= a17◂ [ a9◂ [ ]{| l |}] )
	mov rax,r10
	mov r14,rax
	call ETR_132

	mov r9,QWORD [rsp-8+8*2]
	mov rax,QWORD [rsp-8+8*1]
	mov r8,r14
	mov r14,rax
	lea rsp,[rsp+8*2]
;; rsp=0 , %618~2'(= {| l |} ) %617~0'(= r ) %597~1'(= {| l |} ) %593~3'(= a2◂ [ a21◂ [ a9◂ [ ]{| l |}]] ) 
; _dec 0'(= r ) ⊢ 0'(= r )
	sub r13,1
;; rsp=0 , %619~0'(= r ) %618~2'(= {| l |} ) %597~1'(= {| l |} ) %593~3'(= a2◂ [ a21◂ [ a9◂ [ ]{| l |}]] ) 
; » _^ .. ⊢ ..
; .. //
	mov rdi,0
	mov rsi,r14
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[rsi] 
	add rdi,rax 
	push rax
	push rsi
	mov rsi,r8
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[rsi] 
	add rdi,rax 
	push rax
	push rsi
	mov rsi,r13
	push rsi
	imul rsi,1
	add rdi,rsi 
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	add rdi,9
	push rdi 
	and rdi,~111b
	add rdi,16
	mov rsi,rdi 
	mov rdi,1
	xor rax,rax 
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call calloc
	mov rsp,QWORD [rsp_tmp]  
	pop rdi 
	mov QWORD [rax],rdi
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	mov r10,rax
	lea rdi,[rax+7+rdi]
	std 
	mov QWORD [tmp],rcx 
	jmp LB_527
	LB_528: db 9,0
LB_527:
	pop rax 
LB_529:
	lea rsi,[LB_528+1-1]
	mov rcx,1
	rep movsb 
	sub rax,1
	cmp rax,0
	jnz LB_529
	jmp LB_530
	LB_531: db 226,136,144,32,46,46,32,46,10,0
LB_530:
	lea rsi,[LB_531+9-1]
	mov rcx,9
	rep movsb
	pop rsi 
	pop rcx
	lea rsi,[rsi+7+rcx]
	rep movsb
	pop rsi 
	pop rcx
	lea rsi,[rsi+7+rcx]
	rep movsb
	mov rcx,QWORD [tmp] 
;; rsp=0 , %623~4'(= {| l |} ) %622~2'(= {| l |} ) %621~1'(= {| l |} ) %620~0'(= r ) %593~3'(= a2◂ [ a21◂ [ a9◂ [ ]{| l |}]] ) 
; ∎ { 0'(= r ) 4'(= {| l |} ) }
; .dlt.ptn 2'(= {| l |} )
	mov rdi,r8
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call free 
	mov rsp,QWORD [rsp_tmp] 
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
; .dlt.ptn 1'(= {| l |} )
	mov rdi,r14
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call free 
	mov rsp,QWORD [rsp_tmp] 
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
; .dlt.ptn 3'(= a2◂ [ a21◂ [ a9◂ [ ]{| l |}]] )
;	.dlt adt ⊢ _  
; .mov_ptn2 { 0'(= r ) 4'(= {| l |} ) } ⊢ { 0'(= r ) 1'(= {| l |} ) }
; .mov_ptn 4'(= {| l |} ) ⊢ 1'(= {| l |} )
	mov rax,r10
	mov r14,rax
	ret
LB_512:
;; ? 1'(= a7◂ [ *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}] ) ⊢ 1(<2)◂{ 2'(= a2◂ [ a21◂ [ a9◂ [ ]{| l |}]] ) 3'(= a20◂ [ a9◂ [ ]{| l |}] ) }
	mov rdi,r14
	mov rdi,QWORD [rdi+8+8*0]
	mov r8,rdi
	mov rdi,r14
	mov rdi,QWORD [rdi+8+8*1]
	mov r9,rdi
;; rsp=0 , %625~3'(= a20◂ [ a9◂ [ ]{| l |}] ) %624~2'(= a2◂ [ a21◂ [ a9◂ [ ]{| l |}]] ) %591~0'(= r ) 
;; ? 3'(= a20◂ [ a9◂ [ ]{| l |}] ) ⊢ 0(<3)◂1'(= a7◂ [ *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}] )
	mov rdi,r9
	movzx rax,BYTE [rdi+6]
	cmp rax,0
	jnz LB_532
	mov rax,QWORD [rdi+8]
	mov r14,rax
;; rsp=0 , %626~1'(= a7◂ [ *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}] ) %624~2'(= a2◂ [ a21◂ [ a9◂ [ ]{| l |}]] ) %591~0'(= r ) 
; rsp_d=0, #134 { 0'(= r ) 1'(= a7◂ [ *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}] ) } ⊢ { 0'(= r ) 1'(= {| l |} ) }
	lea rsp,[rsp-8*1]
	mov QWORD [rsp+8*0],r8
; .mov_ptn2 { 0'(= r ) 1'(= a7◂ [ *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}] ) } ⊢ { 0'(= r ) 1'(= a7◂ [ *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}] ) }
	call ETR_134

	mov r8,QWORD [rsp-8+8*1]
	lea rsp,[rsp+8*1]
;; rsp=0 , %628~1'(= {| l |} ) %627~0'(= r ) %624~2'(= a2◂ [ a21◂ [ a9◂ [ ]{| l |}]] ) 
; » _^ .. ⊢ ..
; .. //
	mov rdi,0
	mov rsi,r14
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[rsi] 
	add rdi,rax 
	push rax
	push rsi
	mov rsi,r13
	push rsi
	imul rsi,1
	add rdi,rsi 
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	add rdi,10
	push rdi 
	and rdi,~111b
	add rdi,16
	mov rsi,rdi 
	mov rdi,1
	xor rax,rax 
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call calloc
	mov rsp,QWORD [rsp_tmp]  
	pop rdi 
	mov QWORD [rax],rdi
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	mov r9,rax
	lea rdi,[rax+7+rdi]
	std 
	mov QWORD [tmp],rcx 
	jmp LB_533
	LB_534: db 9,0
LB_533:
	pop rax 
LB_535:
	lea rsi,[LB_534+1-1]
	mov rcx,1
	rep movsb 
	sub rax,1
	cmp rax,0
	jnz LB_535
	jmp LB_536
	LB_537: db 226,136,144,46,32,46,46,32,46,10,0
LB_536:
	lea rsi,[LB_537+10-1]
	mov rcx,10
	rep movsb
	pop rsi 
	pop rcx
	lea rsi,[rsi+7+rcx]
	rep movsb
	mov rcx,QWORD [tmp] 
;; rsp=0 , %631~3'(= {| l |} ) %630~1'(= {| l |} ) %629~0'(= r ) %624~2'(= a2◂ [ a21◂ [ a9◂ [ ]{| l |}]] ) 
; ∎ { 0'(= r ) 3'(= {| l |} ) }
; .dlt.ptn 1'(= {| l |} )
	mov rdi,r14
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call free 
	mov rsp,QWORD [rsp_tmp] 
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
; .dlt.ptn 2'(= a2◂ [ a21◂ [ a9◂ [ ]{| l |}]] )
;	.dlt adt ⊢ _  
; .mov_ptn2 { 0'(= r ) 3'(= {| l |} ) } ⊢ { 0'(= r ) 1'(= {| l |} ) }
; .mov_ptn 3'(= {| l |} ) ⊢ 1'(= {| l |} )
	mov rax,r9
	mov r14,rax
	ret
LB_532:
;; ? 3'(= a20◂ [ a9◂ [ ]{| l |}] ) ⊢ 1(<3)◂{ 1'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) 4'(= a7◂ [ *{ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}] ) }
	mov rdi,r9
	movzx rax,BYTE [rdi+6]
	cmp rax,1
	jnz LB_538
	mov rdi,r9
	mov rdi,QWORD [rdi+8+8*0]
	mov r14,rdi
	mov rdi,r9
	mov rdi,QWORD [rdi+8+8*1]
	mov r10,rdi
;; rsp=0 , %633~4'(= a7◂ [ *{ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}] ) %632~1'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) %624~2'(= a2◂ [ a21◂ [ a9◂ [ ]{| l |}]] ) %591~0'(= r ) 
; rsp_d=0, #97 1'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) ⊢ 1'(= {| l |} )
	lea rsp,[rsp-8*3]
	mov QWORD [rsp+8*0],r13
	mov QWORD [rsp+8*1],r8
	mov QWORD [rsp+8*2],r10
; .mov_ptn2 1'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) ⊢ 0'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] )
; .mov_ptn 1'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) ⊢ 0'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] )
	mov rax,r14
	mov r13,rax
	call ETR_97

	mov r10,QWORD [rsp-8+8*3]
	mov r8,QWORD [rsp-8+8*2]
	mov rax,QWORD [rsp-8+8*1]
	mov r14,r13
	mov r13,rax
	lea rsp,[rsp+8*3]
;; rsp=0 , %634~1'(= {| l |} ) %633~4'(= a7◂ [ *{ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}] ) %624~2'(= a2◂ [ a21◂ [ a9◂ [ ]{| l |}]] ) %591~0'(= r ) 
; rsp_d=0, #135 { 0'(= r ) 4'(= a7◂ [ *{ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}] ) } ⊢ { 0'(= r ) 3'(= {| l |} ) }
	lea rsp,[rsp-8*2]
	mov QWORD [rsp+8*0],r14
	mov QWORD [rsp+8*1],r8
; .mov_ptn2 { 0'(= r ) 4'(= a7◂ [ *{ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}] ) } ⊢ { 0'(= r ) 1'(= a7◂ [ *{ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}] ) }
; .mov_ptn 4'(= a7◂ [ *{ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}] ) ⊢ 1'(= a7◂ [ *{ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}] )
	mov rax,r10
	mov r14,rax
	call ETR_135

	mov r8,QWORD [rsp-8+8*2]
	mov rax,QWORD [rsp-8+8*1]
	mov r9,r14
	mov r14,rax
	lea rsp,[rsp+8*2]
;; rsp=0 , %636~3'(= {| l |} ) %635~0'(= r ) %634~1'(= {| l |} ) %624~2'(= a2◂ [ a21◂ [ a9◂ [ ]{| l |}]] ) 
; » _^ .. ⊢ ..
; .. //
	mov rdi,0
	mov rsi,r9
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[rsi] 
	add rdi,rax 
	push rax
	push rsi
	mov rsi,r14
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[rsi] 
	add rdi,rax 
	push rax
	push rsi
	mov rsi,r13
	push rsi
	imul rsi,1
	add rdi,rsi 
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	add rdi,14
	push rdi 
	and rdi,~111b
	add rdi,16
	mov rsi,rdi 
	mov rdi,1
	xor rax,rax 
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call calloc
	mov rsp,QWORD [rsp_tmp]  
	pop rdi 
	mov QWORD [rax],rdi
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	mov r10,rax
	lea rdi,[rax+7+rdi]
	std 
	mov QWORD [tmp],rcx 
	jmp LB_539
	LB_540: db 9,0
LB_539:
	pop rax 
LB_541:
	lea rsi,[LB_540+1-1]
	mov rcx,1
	rep movsb 
	sub rax,1
	cmp rax,0
	jnz LB_541
	jmp LB_542
	LB_543: db 226,136,144,32,46,46,32,59,32,0
LB_542:
	lea rsi,[LB_543+9-1]
	mov rcx,9
	rep movsb
	pop rsi 
	pop rcx
	lea rsi,[rsi+7+rcx]
	rep movsb
	jmp LB_544
	LB_545: db 226,138,162,32,10,0
LB_544:
	lea rsi,[LB_545+5-1]
	mov rcx,5
	rep movsb
	pop rsi 
	pop rcx
	lea rsi,[rsi+7+rcx]
	rep movsb
	mov rcx,QWORD [tmp] 
;; rsp=0 , %640~4'(= {| l |} ) %639~3'(= {| l |} ) %638~1'(= {| l |} ) %637~0'(= r ) %624~2'(= a2◂ [ a21◂ [ a9◂ [ ]{| l |}]] ) 
; ∎ { 0'(= r ) 4'(= {| l |} ) }
; .dlt.ptn 3'(= {| l |} )
	mov rdi,r9
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call free 
	mov rsp,QWORD [rsp_tmp] 
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
; .dlt.ptn 1'(= {| l |} )
	mov rdi,r14
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call free 
	mov rsp,QWORD [rsp_tmp] 
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
; .dlt.ptn 2'(= a2◂ [ a21◂ [ a9◂ [ ]{| l |}]] )
;	.dlt adt ⊢ _  
; .mov_ptn2 { 0'(= r ) 4'(= {| l |} ) } ⊢ { 0'(= r ) 1'(= {| l |} ) }
; .mov_ptn 4'(= {| l |} ) ⊢ 1'(= {| l |} )
	mov rax,r10
	mov r14,rax
	ret
LB_538:
;; ? 3'(= a20◂ [ a9◂ [ ]{| l |}] ) ⊢ 2(<3)◂3'(= a17◂ [ a9◂ [ ]{| l |}] )
;; rsp=0 , %641~3'(= a17◂ [ a9◂ [ ]{| l |}] ) %624~2'(= a2◂ [ a21◂ [ a9◂ [ ]{| l |}]] ) %591~0'(= r ) 
; _inc 0'(= r ) ⊢ 0'(= r )
	add r13,1
;; rsp=0 , %642~0'(= r ) %641~3'(= a17◂ [ a9◂ [ ]{| l |}] ) %624~2'(= a2◂ [ a21◂ [ a9◂ [ ]{| l |}]] ) 
; rsp_d=0, #132 { 0'(= r ) 3'(= a17◂ [ a9◂ [ ]{| l |}] ) } ⊢ { 0'(= r ) 1'(= {| l |} ) }
	lea rsp,[rsp-8*1]
	mov QWORD [rsp+8*0],r8
; .mov_ptn2 { 0'(= r ) 3'(= a17◂ [ a9◂ [ ]{| l |}] ) } ⊢ { 0'(= r ) 1'(= a17◂ [ a9◂ [ ]{| l |}] ) }
; .mov_ptn 3'(= a17◂ [ a9◂ [ ]{| l |}] ) ⊢ 1'(= a17◂ [ a9◂ [ ]{| l |}] )
	mov rax,r9
	mov r14,rax
	call ETR_132

	mov r8,QWORD [rsp-8+8*1]
	lea rsp,[rsp+8*1]
;; rsp=0 , %644~1'(= {| l |} ) %643~0'(= r ) %624~2'(= a2◂ [ a21◂ [ a9◂ [ ]{| l |}]] ) 
; _dec 0'(= r ) ⊢ 0'(= r )
	sub r13,1
;; rsp=0 , %645~0'(= r ) %644~1'(= {| l |} ) %624~2'(= a2◂ [ a21◂ [ a9◂ [ ]{| l |}]] ) 
; » _^ .. ⊢ ..
; .. //
	mov rdi,0
	mov rsi,r14
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[rsi] 
	add rdi,rax 
	push rax
	push rsi
	mov rsi,r13
	push rsi
	imul rsi,1
	add rdi,rsi 
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	add rdi,10
	push rdi 
	and rdi,~111b
	add rdi,16
	mov rsi,rdi 
	mov rdi,1
	xor rax,rax 
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call calloc
	mov rsp,QWORD [rsp_tmp]  
	pop rdi 
	mov QWORD [rax],rdi
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	mov r9,rax
	lea rdi,[rax+7+rdi]
	std 
	mov QWORD [tmp],rcx 
	jmp LB_546
	LB_547: db 9,0
LB_546:
	pop rax 
LB_548:
	lea rsi,[LB_547+1-1]
	mov rcx,1
	rep movsb 
	sub rax,1
	cmp rax,0
	jnz LB_548
	jmp LB_549
	LB_550: db 226,136,144,46,32,46,46,32,46,10,0
LB_549:
	lea rsi,[LB_550+10-1]
	mov rcx,10
	rep movsb
	pop rsi 
	pop rcx
	lea rsi,[rsi+7+rcx]
	rep movsb
	mov rcx,QWORD [tmp] 
;; rsp=0 , %648~3'(= {| l |} ) %647~1'(= {| l |} ) %646~0'(= r ) %624~2'(= a2◂ [ a21◂ [ a9◂ [ ]{| l |}]] ) 
; ∎ { 0'(= r ) 3'(= {| l |} ) }
; .dlt.ptn 1'(= {| l |} )
	mov rdi,r14
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call free 
	mov rsp,QWORD [rsp_tmp] 
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
; .dlt.ptn 2'(= a2◂ [ a21◂ [ a9◂ [ ]{| l |}]] )
;	.dlt adt ⊢ _  
; .mov_ptn2 { 0'(= r ) 3'(= {| l |} ) } ⊢ { 0'(= r ) 1'(= {| l |} ) }
; .mov_ptn 3'(= {| l |} ) ⊢ 1'(= {| l |} )
	mov rax,r9
	mov r14,rax
	ret
ETR_135: ; pnt_lc_id_mtc { 0'(= r ) 1'(= a7◂ [ *{ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}] ) } ⊢ { 0'(= r ) 1'(= {| l |} ) } : ({ _r64 _t7◂{ _t8◂_t14◂_s8◂_t9 _lst◂_t21◂_s8◂_t9 _t20◂_s8◂_t9 } }→{ _r64 _s8 })
;; rsp=0 , %650~1'(= a7◂ [ *{ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}] ) %649~0'(= r ) 
;; ? 1'(= a7◂ [ *{ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}] ) ⊢ 0(<2)◂{ { 3'(= a8◂ [ a14◂ [ a9◂ [ ]{| l |}]] ) 4'(= a2◂ [ a21◂ [ a9◂ [ ]{| l |}]] ) 5'(= a20◂ [ a9◂ [ ]{| l |}] ) } 6'(= a7◂ [ *{ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}] ) }
	mov rdi,r14
	movzx rax,BYTE [rdi+6]
	cmp rax,0
	jnz LB_551
	mov rdi,r14
	mov rdi,QWORD [rdi+8+8*0]
	mov r8,rdi
	mov rdi,r8
	mov rdi,QWORD [rdi+8+8*0]
	mov r9,rdi
	mov rdi,r8
	mov rdi,QWORD [rdi+8+8*1]
	mov r10,rdi
	mov rdi,r8
	mov rdi,QWORD [rdi+8+8*2]
	mov r11,rdi
	mov rdi,r14
	mov rdi,QWORD [rdi+8+8*1]
	mov rcx,rdi
;; rsp=0 , %654~6'(= a7◂ [ *{ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}] ) %653~5'(= a20◂ [ a9◂ [ ]{| l |}] ) %652~4'(= a2◂ [ a21◂ [ a9◂ [ ]{| l |}]] ) %651~3'(= a8◂ [ a14◂ [ a9◂ [ ]{| l |}]] ) %649~0'(= r ) 
; rsp_d=0, #101 3'(= a8◂ [ a14◂ [ a9◂ [ ]{| l |}]] ) ⊢ 1'(= {| l |} )
	lea rsp,[rsp-8*4]
	mov QWORD [rsp+8*0],r13
	mov QWORD [rsp+8*1],r10
	mov QWORD [rsp+8*2],r11
	mov QWORD [rsp+8*3],rcx
; .mov_ptn2 3'(= a8◂ [ a14◂ [ a9◂ [ ]{| l |}]] ) ⊢ 0'(= a8◂ [ a14◂ [ a9◂ [ ]{| l |}]] )
; .mov_ptn 3'(= a8◂ [ a14◂ [ a9◂ [ ]{| l |}]] ) ⊢ 0'(= a8◂ [ a14◂ [ a9◂ [ ]{| l |}]] )
	mov rax,r9
	mov r13,rax
	call ETR_101

	mov rcx,QWORD [rsp-8+8*4]
	mov r11,QWORD [rsp-8+8*3]
	mov r10,QWORD [rsp-8+8*2]
	mov rax,QWORD [rsp-8+8*1]
	mov r14,r13
	mov r13,rax
	lea rsp,[rsp+8*4]
;; rsp=0 , %655~1'(= {| l |} ) %654~6'(= a7◂ [ *{ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}] ) %653~5'(= a20◂ [ a9◂ [ ]{| l |}] ) %652~4'(= a2◂ [ a21◂ [ a9◂ [ ]{| l |}]] ) %649~0'(= r ) 
; rsp_d=0, #135 { 0'(= r ) 6'(= a7◂ [ *{ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}] ) } ⊢ { 0'(= r ) 2'(= {| l |} ) }
	lea rsp,[rsp-8*3]
	mov QWORD [rsp+8*0],r14
	mov QWORD [rsp+8*1],r10
	mov QWORD [rsp+8*2],r11
; .mov_ptn2 { 0'(= r ) 6'(= a7◂ [ *{ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}] ) } ⊢ { 0'(= r ) 1'(= a7◂ [ *{ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}] ) }
; .mov_ptn 6'(= a7◂ [ *{ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}] ) ⊢ 1'(= a7◂ [ *{ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}] )
	mov rax,rcx
	mov r14,rax
	call ETR_135

	mov r11,QWORD [rsp-8+8*3]
	mov r10,QWORD [rsp-8+8*2]
	mov rax,QWORD [rsp-8+8*1]
	mov r8,r14
	mov r14,rax
	lea rsp,[rsp+8*3]
;; rsp=0 , %657~2'(= {| l |} ) %656~0'(= r ) %655~1'(= {| l |} ) %653~5'(= a20◂ [ a9◂ [ ]{| l |}] ) %652~4'(= a2◂ [ a21◂ [ a9◂ [ ]{| l |}]] ) 
;; ? 5'(= a20◂ [ a9◂ [ ]{| l |}] ) ⊢ 0(<3)◂3'(= a7◂ [ *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}] )
	mov rdi,r11
	movzx rax,BYTE [rdi+6]
	cmp rax,0
	jnz LB_552
	mov rax,QWORD [rdi+8]
	mov r9,rax
;; rsp=0 , %661~3'(= a7◂ [ *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}] ) %657~2'(= {| l |} ) %656~0'(= r ) %655~1'(= {| l |} ) %652~4'(= a2◂ [ a21◂ [ a9◂ [ ]{| l |}]] ) 
; rsp_d=0, #134 { 0'(= r ) 3'(= a7◂ [ *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}] ) } ⊢ { 0'(= r ) 3'(= {| l |} ) }
	lea rsp,[rsp-8*3]
	mov QWORD [rsp+8*0],r14
	mov QWORD [rsp+8*1],r8
	mov QWORD [rsp+8*2],r10
; .mov_ptn2 { 0'(= r ) 3'(= a7◂ [ *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}] ) } ⊢ { 0'(= r ) 1'(= a7◂ [ *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}] ) }
; .mov_ptn 3'(= a7◂ [ *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}] ) ⊢ 1'(= a7◂ [ *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}] )
	mov rax,r9
	mov r14,rax
	call ETR_134

	mov r10,QWORD [rsp-8+8*3]
	mov r8,QWORD [rsp-8+8*2]
	mov rax,QWORD [rsp-8+8*1]
	mov r9,r14
	mov r14,rax
	lea rsp,[rsp+8*3]
;; rsp=0 , %663~3'(= {| l |} ) %662~0'(= r ) %657~2'(= {| l |} ) %655~1'(= {| l |} ) %652~4'(= a2◂ [ a21◂ [ a9◂ [ ]{| l |}]] ) 
; » _^ .. ⊢ ..
; .. //
	mov rdi,0
	mov rsi,r8
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[rsi] 
	add rdi,rax 
	push rax
	push rsi
	mov rsi,r9
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[rsi] 
	add rdi,rax 
	push rax
	push rsi
	mov rsi,r14
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[rsi] 
	add rdi,rax 
	push rax
	push rsi
	mov rsi,r13
	push rsi
	imul rsi,1
	add rdi,rsi 
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	add rdi,9
	push rdi 
	and rdi,~111b
	add rdi,16
	mov rsi,rdi 
	mov rdi,1
	xor rax,rax 
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call calloc
	mov rsp,QWORD [rsp_tmp]  
	pop rdi 
	mov QWORD [rax],rdi
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	mov r11,rax
	lea rdi,[rax+7+rdi]
	std 
	mov QWORD [tmp],rcx 
	jmp LB_553
	LB_554: db 9,0
LB_553:
	pop rax 
LB_555:
	lea rsi,[LB_554+1-1]
	mov rcx,1
	rep movsb 
	sub rax,1
	cmp rax,0
	jnz LB_555
	jmp LB_556
	LB_557: db 226,136,144,32,0
LB_556:
	lea rsi,[LB_557+4-1]
	mov rcx,4
	rep movsb
	pop rsi 
	pop rcx
	lea rsi,[rsi+7+rcx]
	rep movsb
	jmp LB_558
	LB_559: db 46,46,32,59,10,0
LB_558:
	lea rsi,[LB_559+5-1]
	mov rcx,5
	rep movsb
	pop rsi 
	pop rcx
	lea rsi,[rsi+7+rcx]
	rep movsb
	pop rsi 
	pop rcx
	lea rsi,[rsi+7+rcx]
	rep movsb
	mov rcx,QWORD [tmp] 
;; rsp=0 , %668~5'(= {| l |} ) %667~3'(= {| l |} ) %666~2'(= {| l |} ) %665~1'(= {| l |} ) %664~0'(= r ) %652~4'(= a2◂ [ a21◂ [ a9◂ [ ]{| l |}]] ) 
; ∎ { 0'(= r ) 5'(= {| l |} ) }
; .dlt.ptn 3'(= {| l |} )
	mov rdi,r9
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call free 
	mov rsp,QWORD [rsp_tmp] 
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
; .dlt.ptn 2'(= {| l |} )
	mov rdi,r8
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call free 
	mov rsp,QWORD [rsp_tmp] 
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
; .dlt.ptn 1'(= {| l |} )
	mov rdi,r14
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call free 
	mov rsp,QWORD [rsp_tmp] 
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
; .dlt.ptn 4'(= a2◂ [ a21◂ [ a9◂ [ ]{| l |}]] )
;	.dlt adt ⊢ _  
; .mov_ptn2 { 0'(= r ) 5'(= {| l |} ) } ⊢ { 0'(= r ) 1'(= {| l |} ) }
; .mov_ptn 5'(= {| l |} ) ⊢ 1'(= {| l |} )
	mov rax,r11
	mov r14,rax
	ret
LB_552:
;; ? 5'(= a20◂ [ a9◂ [ ]{| l |}] ) ⊢ 1(<3)◂{ 3'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) 6'(= a7◂ [ *{ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}] ) }
	mov rdi,r11
	movzx rax,BYTE [rdi+6]
	cmp rax,1
	jnz LB_560
	mov rdi,r11
	mov rdi,QWORD [rdi+8+8*0]
	mov r9,rdi
	mov rdi,r11
	mov rdi,QWORD [rdi+8+8*1]
	mov rcx,rdi
;; rsp=0 , %660~6'(= a7◂ [ *{ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}] ) %659~3'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) %657~2'(= {| l |} ) %656~0'(= r ) %655~1'(= {| l |} ) %652~4'(= a2◂ [ a21◂ [ a9◂ [ ]{| l |}]] ) 
; rsp_d=0, #97 3'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) ⊢ 3'(= {| l |} )
	lea rsp,[rsp-8*5]
	mov QWORD [rsp+8*0],r13
	mov QWORD [rsp+8*1],r14
	mov QWORD [rsp+8*2],r8
	mov QWORD [rsp+8*3],r10
	mov QWORD [rsp+8*4],rcx
; .mov_ptn2 3'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) ⊢ 0'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] )
; .mov_ptn 3'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) ⊢ 0'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] )
	mov rax,r9
	mov r13,rax
	call ETR_97

	mov rcx,QWORD [rsp-8+8*5]
	mov r10,QWORD [rsp-8+8*4]
	mov r8,QWORD [rsp-8+8*3]
	mov r14,QWORD [rsp-8+8*2]
	mov rax,QWORD [rsp-8+8*1]
	mov r9,r13
	mov r13,rax
	lea rsp,[rsp+8*5]
;; rsp=0 , %669~3'(= {| l |} ) %660~6'(= a7◂ [ *{ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}] ) %657~2'(= {| l |} ) %656~0'(= r ) %655~1'(= {| l |} ) %652~4'(= a2◂ [ a21◂ [ a9◂ [ ]{| l |}]] ) 
; rsp_d=0, #135 { 0'(= r ) 6'(= a7◂ [ *{ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}] ) } ⊢ { 0'(= r ) 5'(= {| l |} ) }
	lea rsp,[rsp-8*4]
	mov QWORD [rsp+8*0],r14
	mov QWORD [rsp+8*1],r8
	mov QWORD [rsp+8*2],r9
	mov QWORD [rsp+8*3],r10
; .mov_ptn2 { 0'(= r ) 6'(= a7◂ [ *{ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}] ) } ⊢ { 0'(= r ) 1'(= a7◂ [ *{ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}] ) }
; .mov_ptn 6'(= a7◂ [ *{ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}] ) ⊢ 1'(= a7◂ [ *{ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}] )
	mov rax,rcx
	mov r14,rax
	call ETR_135

	mov r10,QWORD [rsp-8+8*4]
	mov r9,QWORD [rsp-8+8*3]
	mov r8,QWORD [rsp-8+8*2]
	mov rax,QWORD [rsp-8+8*1]
	mov r11,r14
	mov r14,rax
	lea rsp,[rsp+8*4]
;; rsp=0 , %671~5'(= {| l |} ) %670~0'(= r ) %669~3'(= {| l |} ) %657~2'(= {| l |} ) %655~1'(= {| l |} ) %652~4'(= a2◂ [ a21◂ [ a9◂ [ ]{| l |}]] ) 
; » _^ .. ⊢ ..
; .. //
	mov rdi,0
	mov rsi,r8
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[rsi] 
	add rdi,rax 
	push rax
	push rsi
	mov rsi,r11
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[rsi] 
	add rdi,rax 
	push rax
	push rsi
	mov rsi,r9
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[rsi] 
	add rdi,rax 
	push rax
	push rsi
	mov rsi,r13
	push rsi
	imul rsi,1
	add rdi,rsi 
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	add rdi,14
	push rdi 
	and rdi,~111b
	add rdi,16
	mov rsi,rdi 
	mov rdi,1
	xor rax,rax 
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call calloc
	mov rsp,QWORD [rsp_tmp]  
	pop rdi 
	mov QWORD [rax],rdi
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	mov rcx,rax
	lea rdi,[rax+7+rdi]
	std 
	mov QWORD [tmp],rcx 
	jmp LB_561
	LB_562: db 9,0
LB_561:
	pop rax 
LB_563:
	lea rsi,[LB_562+1-1]
	mov rcx,1
	rep movsb 
	sub rax,1
	cmp rax,0
	jnz LB_563
	jmp LB_564
	LB_565: db 226,136,144,32,46,46,32,59,32,0
LB_564:
	lea rsi,[LB_565+9-1]
	mov rcx,9
	rep movsb
	pop rsi 
	pop rcx
	lea rsi,[rsi+7+rcx]
	rep movsb
	jmp LB_566
	LB_567: db 226,138,162,32,10,0
LB_566:
	lea rsi,[LB_567+5-1]
	mov rcx,5
	rep movsb
	pop rsi 
	pop rcx
	lea rsi,[rsi+7+rcx]
	rep movsb
	pop rsi 
	pop rcx
	lea rsi,[rsi+7+rcx]
	rep movsb
	mov rcx,QWORD [tmp] 
;; rsp=0 , %676~6'(= {| l |} ) %675~5'(= {| l |} ) %674~2'(= {| l |} ) %673~3'(= {| l |} ) %672~0'(= r ) %655~1'(= {| l |} ) %652~4'(= a2◂ [ a21◂ [ a9◂ [ ]{| l |}]] ) 
; ∎ { 0'(= r ) 6'(= {| l |} ) }
; .dlt.ptn 5'(= {| l |} )
	mov rdi,r11
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call free 
	mov rsp,QWORD [rsp_tmp] 
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
; .dlt.ptn 2'(= {| l |} )
	mov rdi,r8
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call free 
	mov rsp,QWORD [rsp_tmp] 
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
; .dlt.ptn 3'(= {| l |} )
	mov rdi,r9
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call free 
	mov rsp,QWORD [rsp_tmp] 
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
; .dlt.ptn 1'(= {| l |} )
	mov rdi,r14
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call free 
	mov rsp,QWORD [rsp_tmp] 
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
; .dlt.ptn 4'(= a2◂ [ a21◂ [ a9◂ [ ]{| l |}]] )
;	.dlt adt ⊢ _  
; .mov_ptn2 { 0'(= r ) 6'(= {| l |} ) } ⊢ { 0'(= r ) 1'(= {| l |} ) }
; .mov_ptn 6'(= {| l |} ) ⊢ 1'(= {| l |} )
	mov rax,rcx
	mov r14,rax
	ret
LB_560:
;; ? 5'(= a20◂ [ a9◂ [ ]{| l |}] ) ⊢ 2(<3)◂5'(= a17◂ [ a9◂ [ ]{| l |}] )
;; rsp=0 , %658~5'(= a17◂ [ a9◂ [ ]{| l |}] ) %657~2'(= {| l |} ) %656~0'(= r ) %655~1'(= {| l |} ) %652~4'(= a2◂ [ a21◂ [ a9◂ [ ]{| l |}]] ) 
; _inc 0'(= r ) ⊢ 0'(= r )
	add r13,1
;; rsp=0 , %677~0'(= r ) %658~5'(= a17◂ [ a9◂ [ ]{| l |}] ) %657~2'(= {| l |} ) %655~1'(= {| l |} ) %652~4'(= a2◂ [ a21◂ [ a9◂ [ ]{| l |}]] ) 
; rsp_d=0, #132 { 0'(= r ) 5'(= a17◂ [ a9◂ [ ]{| l |}] ) } ⊢ { 0'(= r ) 3'(= {| l |} ) }
	lea rsp,[rsp-8*3]
	mov QWORD [rsp+8*0],r14
	mov QWORD [rsp+8*1],r8
	mov QWORD [rsp+8*2],r10
; .mov_ptn2 { 0'(= r ) 5'(= a17◂ [ a9◂ [ ]{| l |}] ) } ⊢ { 0'(= r ) 1'(= a17◂ [ a9◂ [ ]{| l |}] ) }
; .mov_ptn 5'(= a17◂ [ a9◂ [ ]{| l |}] ) ⊢ 1'(= a17◂ [ a9◂ [ ]{| l |}] )
	mov rax,r11
	mov r14,rax
	call ETR_132

	mov r10,QWORD [rsp-8+8*3]
	mov r8,QWORD [rsp-8+8*2]
	mov rax,QWORD [rsp-8+8*1]
	mov r9,r14
	mov r14,rax
	lea rsp,[rsp+8*3]
;; rsp=0 , %679~3'(= {| l |} ) %678~0'(= r ) %657~2'(= {| l |} ) %655~1'(= {| l |} ) %652~4'(= a2◂ [ a21◂ [ a9◂ [ ]{| l |}]] ) 
; _dec 0'(= r ) ⊢ 0'(= r )
	sub r13,1
;; rsp=0 , %680~0'(= r ) %679~3'(= {| l |} ) %657~2'(= {| l |} ) %655~1'(= {| l |} ) %652~4'(= a2◂ [ a21◂ [ a9◂ [ ]{| l |}]] ) 
; » _^ .. ⊢ ..
; .. //
	mov rdi,0
	mov rsi,r8
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[rsi] 
	add rdi,rax 
	push rax
	push rsi
	mov rsi,r9
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[rsi] 
	add rdi,rax 
	push rax
	push rsi
	mov rsi,r13
	push rsi
	imul rsi,1
	add rdi,rsi 
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	add rdi,9
	push rdi 
	and rdi,~111b
	add rdi,16
	mov rsi,rdi 
	mov rdi,1
	xor rax,rax 
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call calloc
	mov rsp,QWORD [rsp_tmp]  
	pop rdi 
	mov QWORD [rax],rdi
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	mov r11,rax
	lea rdi,[rax+7+rdi]
	std 
	mov QWORD [tmp],rcx 
	jmp LB_568
	LB_569: db 9,0
LB_568:
	pop rax 
LB_570:
	lea rsi,[LB_569+1-1]
	mov rcx,1
	rep movsb 
	sub rax,1
	cmp rax,0
	jnz LB_570
	jmp LB_571
	LB_572: db 226,136,144,32,46,46,32,46,10,0
LB_571:
	lea rsi,[LB_572+9-1]
	mov rcx,9
	rep movsb
	pop rsi 
	pop rcx
	lea rsi,[rsi+7+rcx]
	rep movsb
	pop rsi 
	pop rcx
	lea rsi,[rsi+7+rcx]
	rep movsb
	mov rcx,QWORD [tmp] 
;; rsp=0 , %684~5'(= {| l |} ) %683~3'(= {| l |} ) %682~2'(= {| l |} ) %681~0'(= r ) %655~1'(= {| l |} ) %652~4'(= a2◂ [ a21◂ [ a9◂ [ ]{| l |}]] ) 
; ∎ { 0'(= r ) 5'(= {| l |} ) }
; .dlt.ptn 3'(= {| l |} )
	mov rdi,r9
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call free 
	mov rsp,QWORD [rsp_tmp] 
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
; .dlt.ptn 2'(= {| l |} )
	mov rdi,r8
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call free 
	mov rsp,QWORD [rsp_tmp] 
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
; .dlt.ptn 1'(= {| l |} )
	mov rdi,r14
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call free 
	mov rsp,QWORD [rsp_tmp] 
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
; .dlt.ptn 4'(= a2◂ [ a21◂ [ a9◂ [ ]{| l |}]] )
;	.dlt adt ⊢ _  
; .mov_ptn2 { 0'(= r ) 5'(= {| l |} ) } ⊢ { 0'(= r ) 1'(= {| l |} ) }
; .mov_ptn 5'(= {| l |} ) ⊢ 1'(= {| l |} )
	mov rax,r11
	mov r14,rax
	ret
LB_551:
;; ? 1'(= a7◂ [ *{ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}] ) ⊢ 1(<2)◂{ 2'(= a8◂ [ a14◂ [ a9◂ [ ]{| l |}]] ) 3'(= a2◂ [ a21◂ [ a9◂ [ ]{| l |}]] ) 4'(= a20◂ [ a9◂ [ ]{| l |}] ) }
	mov rdi,r14
	mov rdi,QWORD [rdi+8+8*0]
	mov r8,rdi
	mov rdi,r14
	mov rdi,QWORD [rdi+8+8*1]
	mov r9,rdi
	mov rdi,r14
	mov rdi,QWORD [rdi+8+8*2]
	mov r10,rdi
;; rsp=0 , %687~4'(= a20◂ [ a9◂ [ ]{| l |}] ) %686~3'(= a2◂ [ a21◂ [ a9◂ [ ]{| l |}]] ) %685~2'(= a8◂ [ a14◂ [ a9◂ [ ]{| l |}]] ) %649~0'(= r ) 
;; ? 4'(= a20◂ [ a9◂ [ ]{| l |}] ) ⊢ 0(<3)◂1'(= a7◂ [ *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}] )
	mov rdi,r10
	movzx rax,BYTE [rdi+6]
	cmp rax,0
	jnz LB_573
	mov rax,QWORD [rdi+8]
	mov r14,rax
;; rsp=0 , %688~1'(= a7◂ [ *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}] ) %686~3'(= a2◂ [ a21◂ [ a9◂ [ ]{| l |}]] ) %685~2'(= a8◂ [ a14◂ [ a9◂ [ ]{| l |}]] ) %649~0'(= r ) 
; rsp_d=0, #101 2'(= a8◂ [ a14◂ [ a9◂ [ ]{| l |}]] ) ⊢ 2'(= {| l |} )
	lea rsp,[rsp-8*3]
	mov QWORD [rsp+8*0],r13
	mov QWORD [rsp+8*1],r14
	mov QWORD [rsp+8*2],r9
; .mov_ptn2 2'(= a8◂ [ a14◂ [ a9◂ [ ]{| l |}]] ) ⊢ 0'(= a8◂ [ a14◂ [ a9◂ [ ]{| l |}]] )
; .mov_ptn 2'(= a8◂ [ a14◂ [ a9◂ [ ]{| l |}]] ) ⊢ 0'(= a8◂ [ a14◂ [ a9◂ [ ]{| l |}]] )
	mov rax,r8
	mov r13,rax
	call ETR_101

	mov r9,QWORD [rsp-8+8*3]
	mov r14,QWORD [rsp-8+8*2]
	mov rax,QWORD [rsp-8+8*1]
	mov r8,r13
	mov r13,rax
	lea rsp,[rsp+8*3]
;; rsp=0 , %689~2'(= {| l |} ) %688~1'(= a7◂ [ *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}] ) %686~3'(= a2◂ [ a21◂ [ a9◂ [ ]{| l |}]] ) %649~0'(= r ) 
; rsp_d=0, #134 { 0'(= r ) 1'(= a7◂ [ *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}] ) } ⊢ { 0'(= r ) 1'(= {| l |} ) }
	lea rsp,[rsp-8*2]
	mov QWORD [rsp+8*0],r8
	mov QWORD [rsp+8*1],r9
; .mov_ptn2 { 0'(= r ) 1'(= a7◂ [ *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}] ) } ⊢ { 0'(= r ) 1'(= a7◂ [ *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}] ) }
	call ETR_134

	mov r9,QWORD [rsp-8+8*2]
	mov r8,QWORD [rsp-8+8*1]
	lea rsp,[rsp+8*2]
;; rsp=0 , %691~1'(= {| l |} ) %690~0'(= r ) %689~2'(= {| l |} ) %686~3'(= a2◂ [ a21◂ [ a9◂ [ ]{| l |}]] ) 
; » _^ .. ⊢ ..
; .. //
	mov rdi,0
	mov rsi,r14
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[rsi] 
	add rdi,rax 
	push rax
	push rsi
	mov rsi,r13
	push rsi
	imul rsi,1
	add rdi,rsi 
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	add rdi,10
	push rdi 
	and rdi,~111b
	add rdi,16
	mov rsi,rdi 
	mov rdi,1
	xor rax,rax 
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call calloc
	mov rsp,QWORD [rsp_tmp]  
	pop rdi 
	mov QWORD [rax],rdi
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	mov r10,rax
	lea rdi,[rax+7+rdi]
	std 
	mov QWORD [tmp],rcx 
	jmp LB_574
	LB_575: db 9,0
LB_574:
	pop rax 
LB_576:
	lea rsi,[LB_575+1-1]
	mov rcx,1
	rep movsb 
	sub rax,1
	cmp rax,0
	jnz LB_576
	jmp LB_577
	LB_578: db 226,136,144,46,32,46,46,32,59,10,0
LB_577:
	lea rsi,[LB_578+10-1]
	mov rcx,10
	rep movsb
	pop rsi 
	pop rcx
	lea rsi,[rsi+7+rcx]
	rep movsb
	mov rcx,QWORD [tmp] 
;; rsp=0 , %694~4'(= {| l |} ) %693~1'(= {| l |} ) %692~0'(= r ) %689~2'(= {| l |} ) %686~3'(= a2◂ [ a21◂ [ a9◂ [ ]{| l |}]] ) 
; ∎ { 0'(= r ) 4'(= {| l |} ) }
; .dlt.ptn 1'(= {| l |} )
	mov rdi,r14
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call free 
	mov rsp,QWORD [rsp_tmp] 
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
; .dlt.ptn 2'(= {| l |} )
	mov rdi,r8
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call free 
	mov rsp,QWORD [rsp_tmp] 
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
; .dlt.ptn 3'(= a2◂ [ a21◂ [ a9◂ [ ]{| l |}]] )
;	.dlt adt ⊢ _  
; .mov_ptn2 { 0'(= r ) 4'(= {| l |} ) } ⊢ { 0'(= r ) 1'(= {| l |} ) }
; .mov_ptn 4'(= {| l |} ) ⊢ 1'(= {| l |} )
	mov rax,r10
	mov r14,rax
	ret
LB_573:
;; ? 4'(= a20◂ [ a9◂ [ ]{| l |}] ) ⊢ 1(<3)◂{ 1'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) 5'(= a7◂ [ *{ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}] ) }
	mov rdi,r10
	movzx rax,BYTE [rdi+6]
	cmp rax,1
	jnz LB_579
	mov rdi,r10
	mov rdi,QWORD [rdi+8+8*0]
	mov r14,rdi
	mov rdi,r10
	mov rdi,QWORD [rdi+8+8*1]
	mov r11,rdi
;; rsp=0 , %696~5'(= a7◂ [ *{ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}] ) %695~1'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) %686~3'(= a2◂ [ a21◂ [ a9◂ [ ]{| l |}]] ) %685~2'(= a8◂ [ a14◂ [ a9◂ [ ]{| l |}]] ) %649~0'(= r ) 
; rsp_d=0, #97 1'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) ⊢ 1'(= {| l |} )
	lea rsp,[rsp-8*4]
	mov QWORD [rsp+8*0],r13
	mov QWORD [rsp+8*1],r8
	mov QWORD [rsp+8*2],r9
	mov QWORD [rsp+8*3],r11
; .mov_ptn2 1'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) ⊢ 0'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] )
; .mov_ptn 1'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) ⊢ 0'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] )
	mov rax,r14
	mov r13,rax
	call ETR_97

	mov r11,QWORD [rsp-8+8*4]
	mov r9,QWORD [rsp-8+8*3]
	mov r8,QWORD [rsp-8+8*2]
	mov rax,QWORD [rsp-8+8*1]
	mov r14,r13
	mov r13,rax
	lea rsp,[rsp+8*4]
;; rsp=0 , %697~1'(= {| l |} ) %696~5'(= a7◂ [ *{ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}] ) %686~3'(= a2◂ [ a21◂ [ a9◂ [ ]{| l |}]] ) %685~2'(= a8◂ [ a14◂ [ a9◂ [ ]{| l |}]] ) %649~0'(= r ) 
; rsp_d=0, #135 { 0'(= r ) 5'(= a7◂ [ *{ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}] ) } ⊢ { 0'(= r ) 4'(= {| l |} ) }
	lea rsp,[rsp-8*3]
	mov QWORD [rsp+8*0],r14
	mov QWORD [rsp+8*1],r8
	mov QWORD [rsp+8*2],r9
; .mov_ptn2 { 0'(= r ) 5'(= a7◂ [ *{ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}] ) } ⊢ { 0'(= r ) 1'(= a7◂ [ *{ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}] ) }
; .mov_ptn 5'(= a7◂ [ *{ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}] ) ⊢ 1'(= a7◂ [ *{ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}] )
	mov rax,r11
	mov r14,rax
	call ETR_135

	mov r9,QWORD [rsp-8+8*3]
	mov r8,QWORD [rsp-8+8*2]
	mov rax,QWORD [rsp-8+8*1]
	mov r10,r14
	mov r14,rax
	lea rsp,[rsp+8*3]
;; rsp=0 , %699~4'(= {| l |} ) %698~0'(= r ) %697~1'(= {| l |} ) %686~3'(= a2◂ [ a21◂ [ a9◂ [ ]{| l |}]] ) %685~2'(= a8◂ [ a14◂ [ a9◂ [ ]{| l |}]] ) 
; » _^ .. ⊢ ..
; .. //
	mov rdi,0
	mov rsi,r10
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[rsi] 
	add rdi,rax 
	push rax
	push rsi
	mov rsi,r14
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[rsi] 
	add rdi,rax 
	push rax
	push rsi
	mov rsi,r13
	push rsi
	imul rsi,1
	add rdi,rsi 
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	add rdi,14
	push rdi 
	and rdi,~111b
	add rdi,16
	mov rsi,rdi 
	mov rdi,1
	xor rax,rax 
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call calloc
	mov rsp,QWORD [rsp_tmp]  
	pop rdi 
	mov QWORD [rax],rdi
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	mov r11,rax
	lea rdi,[rax+7+rdi]
	std 
	mov QWORD [tmp],rcx 
	jmp LB_580
	LB_581: db 9,0
LB_580:
	pop rax 
LB_582:
	lea rsi,[LB_581+1-1]
	mov rcx,1
	rep movsb 
	sub rax,1
	cmp rax,0
	jnz LB_582
	jmp LB_583
	LB_584: db 226,136,144,32,46,46,32,59,32,0
LB_583:
	lea rsi,[LB_584+9-1]
	mov rcx,9
	rep movsb
	pop rsi 
	pop rcx
	lea rsi,[rsi+7+rcx]
	rep movsb
	jmp LB_585
	LB_586: db 226,138,162,32,10,0
LB_585:
	lea rsi,[LB_586+5-1]
	mov rcx,5
	rep movsb
	pop rsi 
	pop rcx
	lea rsi,[rsi+7+rcx]
	rep movsb
	mov rcx,QWORD [tmp] 
;; rsp=0 , %703~5'(= {| l |} ) %702~4'(= {| l |} ) %701~1'(= {| l |} ) %700~0'(= r ) %686~3'(= a2◂ [ a21◂ [ a9◂ [ ]{| l |}]] ) %685~2'(= a8◂ [ a14◂ [ a9◂ [ ]{| l |}]] ) 
; ∎ { 0'(= r ) 5'(= {| l |} ) }
; .dlt.ptn 4'(= {| l |} )
	mov rdi,r10
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call free 
	mov rsp,QWORD [rsp_tmp] 
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
; .dlt.ptn 1'(= {| l |} )
	mov rdi,r14
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call free 
	mov rsp,QWORD [rsp_tmp] 
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
; .dlt.ptn 3'(= a2◂ [ a21◂ [ a9◂ [ ]{| l |}]] )
;	.dlt adt ⊢ _  
; .dlt.ptn 2'(= a8◂ [ a14◂ [ a9◂ [ ]{| l |}]] )
;	.dlt adt ⊢ _  
; .mov_ptn2 { 0'(= r ) 5'(= {| l |} ) } ⊢ { 0'(= r ) 1'(= {| l |} ) }
; .mov_ptn 5'(= {| l |} ) ⊢ 1'(= {| l |} )
	mov rax,r11
	mov r14,rax
	ret
LB_579:
;; ? 4'(= a20◂ [ a9◂ [ ]{| l |}] ) ⊢ 2(<3)◂4'(= a17◂ [ a9◂ [ ]{| l |}] )
;; rsp=0 , %704~4'(= a17◂ [ a9◂ [ ]{| l |}] ) %686~3'(= a2◂ [ a21◂ [ a9◂ [ ]{| l |}]] ) %685~2'(= a8◂ [ a14◂ [ a9◂ [ ]{| l |}]] ) %649~0'(= r ) 
; _inc 0'(= r ) ⊢ 0'(= r )
	add r13,1
;; rsp=0 , %705~0'(= r ) %704~4'(= a17◂ [ a9◂ [ ]{| l |}] ) %686~3'(= a2◂ [ a21◂ [ a9◂ [ ]{| l |}]] ) %685~2'(= a8◂ [ a14◂ [ a9◂ [ ]{| l |}]] ) 
; rsp_d=0, #132 { 0'(= r ) 4'(= a17◂ [ a9◂ [ ]{| l |}] ) } ⊢ { 0'(= r ) 1'(= {| l |} ) }
	lea rsp,[rsp-8*2]
	mov QWORD [rsp+8*0],r8
	mov QWORD [rsp+8*1],r9
; .mov_ptn2 { 0'(= r ) 4'(= a17◂ [ a9◂ [ ]{| l |}] ) } ⊢ { 0'(= r ) 1'(= a17◂ [ a9◂ [ ]{| l |}] ) }
; .mov_ptn 4'(= a17◂ [ a9◂ [ ]{| l |}] ) ⊢ 1'(= a17◂ [ a9◂ [ ]{| l |}] )
	mov rax,r10
	mov r14,rax
	call ETR_132

	mov r9,QWORD [rsp-8+8*2]
	mov r8,QWORD [rsp-8+8*1]
	lea rsp,[rsp+8*2]
;; rsp=0 , %707~1'(= {| l |} ) %706~0'(= r ) %686~3'(= a2◂ [ a21◂ [ a9◂ [ ]{| l |}]] ) %685~2'(= a8◂ [ a14◂ [ a9◂ [ ]{| l |}]] ) 
; _dec 0'(= r ) ⊢ 0'(= r )
	sub r13,1
;; rsp=0 , %708~0'(= r ) %707~1'(= {| l |} ) %686~3'(= a2◂ [ a21◂ [ a9◂ [ ]{| l |}]] ) %685~2'(= a8◂ [ a14◂ [ a9◂ [ ]{| l |}]] ) 
; » _^ .. ⊢ ..
; .. //
	mov rdi,0
	mov rsi,r14
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[rsi] 
	add rdi,rax 
	push rax
	push rsi
	mov rsi,r13
	push rsi
	imul rsi,1
	add rdi,rsi 
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	add rdi,10
	push rdi 
	and rdi,~111b
	add rdi,16
	mov rsi,rdi 
	mov rdi,1
	xor rax,rax 
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call calloc
	mov rsp,QWORD [rsp_tmp]  
	pop rdi 
	mov QWORD [rax],rdi
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	mov r10,rax
	lea rdi,[rax+7+rdi]
	std 
	mov QWORD [tmp],rcx 
	jmp LB_587
	LB_588: db 9,0
LB_587:
	pop rax 
LB_589:
	lea rsi,[LB_588+1-1]
	mov rcx,1
	rep movsb 
	sub rax,1
	cmp rax,0
	jnz LB_589
	jmp LB_590
	LB_591: db 226,136,144,46,32,46,46,32,46,10,0
LB_590:
	lea rsi,[LB_591+10-1]
	mov rcx,10
	rep movsb
	pop rsi 
	pop rcx
	lea rsi,[rsi+7+rcx]
	rep movsb
	mov rcx,QWORD [tmp] 
;; rsp=0 , %711~4'(= {| l |} ) %710~1'(= {| l |} ) %709~0'(= r ) %686~3'(= a2◂ [ a21◂ [ a9◂ [ ]{| l |}]] ) %685~2'(= a8◂ [ a14◂ [ a9◂ [ ]{| l |}]] ) 
; ∎ { 0'(= r ) 4'(= {| l |} ) }
; .dlt.ptn 1'(= {| l |} )
	mov rdi,r14
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call free 
	mov rsp,QWORD [rsp_tmp] 
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
; .dlt.ptn 3'(= a2◂ [ a21◂ [ a9◂ [ ]{| l |}]] )
;	.dlt adt ⊢ _  
; .dlt.ptn 2'(= a8◂ [ a14◂ [ a9◂ [ ]{| l |}]] )
;	.dlt adt ⊢ _  
; .mov_ptn2 { 0'(= r ) 4'(= {| l |} ) } ⊢ { 0'(= r ) 1'(= {| l |} ) }
; .mov_ptn 4'(= {| l |} ) ⊢ 1'(= {| l |} )
	mov rax,r10
	mov r14,rax
	ret
ETR_157: ; pnt { 0'(= r ) 1'(= a2◂ [ *{ {| l |}a24◂ [ a9◂ [ ]{| l |}]}] ) } ⊢ { 0'(= r ) 1'(= {| l |} ) } : ({ _r64 _lst◂{ _s8 _t24◂_s8◂_t9 } }→{ _r64 _s8 })
;; rsp=0 , %713~1'(= a2◂ [ *{ {| l |}a24◂ [ a9◂ [ ]{| l |}]}] ) %712~0'(= r ) 
;; ? 1'(= a2◂ [ *{ {| l |}a24◂ [ a9◂ [ ]{| l |}]}] ) ⊢ 0(<2)◂{ { 3'(= {| l |} ) 4'(= a24◂ [ a9◂ [ ]{| l |}] ) } 5'(= a2◂ [ *{ {| l |}a24◂ [ a9◂ [ ]{| l |}]}] ) }
	mov rdi,r14
	movzx rax,BYTE [rdi+6]
	cmp rax,0
	jnz LB_592
	mov rdi,r14
	mov rdi,QWORD [rdi+8+8*0]
	mov r8,rdi
	mov rdi,r8
	mov rdi,QWORD [rdi+8+8*0]
	mov r9,rdi
	mov rdi,r8
	mov rdi,QWORD [rdi+8+8*1]
	mov r10,rdi
	mov rdi,r14
	mov rdi,QWORD [rdi+8+8*1]
	mov r11,rdi
;; rsp=0 , %716~5'(= a2◂ [ *{ {| l |}a24◂ [ a9◂ [ ]{| l |}]}] ) %715~4'(= a24◂ [ a9◂ [ ]{| l |}] ) %714~3'(= {| l |} ) %712~0'(= r ) 
; _inc 0'(= r ) ⊢ 0'(= r )
	add r13,1
;; rsp=0 , %717~0'(= r ) %716~5'(= a2◂ [ *{ {| l |}a24◂ [ a9◂ [ ]{| l |}]}] ) %715~4'(= a24◂ [ a9◂ [ ]{| l |}] ) %714~3'(= {| l |} ) 
; rsp_d=0, #158 { 0'(= r ) 4'(= a24◂ [ a9◂ [ ]{| l |}] ) } ⊢ { 0'(= r ) 1'(= {| l |} ) }
	lea rsp,[rsp-8*2]
	mov QWORD [rsp+8*0],r9
	mov QWORD [rsp+8*1],r11
; .mov_ptn2 { 0'(= r ) 4'(= a24◂ [ a9◂ [ ]{| l |}] ) } ⊢ { 0'(= r ) 1'(= a24◂ [ a9◂ [ ]{| l |}] ) }
; .mov_ptn 4'(= a24◂ [ a9◂ [ ]{| l |}] ) ⊢ 1'(= a24◂ [ a9◂ [ ]{| l |}] )
	mov rax,r10
	mov r14,rax
	call ETR_158

	mov r11,QWORD [rsp-8+8*2]
	mov r9,QWORD [rsp-8+8*1]
	lea rsp,[rsp+8*2]
;; rsp=0 , %719~1'(= {| l |} ) %718~0'(= r ) %716~5'(= a2◂ [ *{ {| l |}a24◂ [ a9◂ [ ]{| l |}]}] ) %714~3'(= {| l |} ) 
; _dec 0'(= r ) ⊢ 0'(= r )
	sub r13,1
;; rsp=0 , %720~0'(= r ) %719~1'(= {| l |} ) %716~5'(= a2◂ [ *{ {| l |}a24◂ [ a9◂ [ ]{| l |}]}] ) %714~3'(= {| l |} ) 
; rsp_d=0, #157 { 0'(= r ) 5'(= a2◂ [ *{ {| l |}a24◂ [ a9◂ [ ]{| l |}]}] ) } ⊢ { 0'(= r ) 2'(= {| l |} ) }
	lea rsp,[rsp-8*2]
	mov QWORD [rsp+8*0],r14
	mov QWORD [rsp+8*1],r9
; .mov_ptn2 { 0'(= r ) 5'(= a2◂ [ *{ {| l |}a24◂ [ a9◂ [ ]{| l |}]}] ) } ⊢ { 0'(= r ) 1'(= a2◂ [ *{ {| l |}a24◂ [ a9◂ [ ]{| l |}]}] ) }
; .mov_ptn 5'(= a2◂ [ *{ {| l |}a24◂ [ a9◂ [ ]{| l |}]}] ) ⊢ 1'(= a2◂ [ *{ {| l |}a24◂ [ a9◂ [ ]{| l |}]}] )
	mov rax,r11
	mov r14,rax
	call ETR_157

	mov r9,QWORD [rsp-8+8*2]
	mov rax,QWORD [rsp-8+8*1]
	mov r8,r14
	mov r14,rax
	lea rsp,[rsp+8*2]
;; rsp=0 , %722~2'(= {| l |} ) %721~0'(= r ) %719~1'(= {| l |} ) %714~3'(= {| l |} ) 
; » _^ .. ⊢ ..
; .. //
	mov rdi,0
	mov rsi,r8
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[rsi] 
	add rdi,rax 
	push rax
	push rsi
	mov rsi,r14
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[rsi] 
	add rdi,rax 
	push rax
	push rsi
	mov rsi,r9
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[rsi] 
	add rdi,rax 
	push rax
	push rsi
	mov rsi,r13
	push rsi
	imul rsi,1
	add rdi,rsi 
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	add rdi,3
	push rdi 
	and rdi,~111b
	add rdi,16
	mov rsi,rdi 
	mov rdi,1
	xor rax,rax 
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call calloc
	mov rsp,QWORD [rsp_tmp]  
	pop rdi 
	mov QWORD [rax],rdi
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	mov r10,rax
	lea rdi,[rax+7+rdi]
	std 
	mov QWORD [tmp],rcx 
	jmp LB_593
	LB_594: db 9,0
LB_593:
	pop rax 
LB_595:
	lea rsi,[LB_594+1-1]
	mov rcx,1
	rep movsb 
	sub rax,1
	cmp rax,0
	jnz LB_595
	jmp LB_596
	LB_597: db 64,46,0
LB_596:
	lea rsi,[LB_597+2-1]
	mov rcx,2
	rep movsb
	pop rsi 
	pop rcx
	lea rsi,[rsi+7+rcx]
	rep movsb
	jmp LB_598
	LB_599: db 10,0
LB_598:
	lea rsi,[LB_599+1-1]
	mov rcx,1
	rep movsb
	pop rsi 
	pop rcx
	lea rsi,[rsi+7+rcx]
	rep movsb
	pop rsi 
	pop rcx
	lea rsi,[rsi+7+rcx]
	rep movsb
	mov rcx,QWORD [tmp] 
;; rsp=0 , %727~4'(= {| l |} ) %726~2'(= {| l |} ) %725~1'(= {| l |} ) %724~3'(= {| l |} ) %723~0'(= r ) 
; ∎ { 0'(= r ) 4'(= {| l |} ) }
; .dlt.ptn 2'(= {| l |} )
	mov rdi,r8
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call free 
	mov rsp,QWORD [rsp_tmp] 
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
; .dlt.ptn 1'(= {| l |} )
	mov rdi,r14
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call free 
	mov rsp,QWORD [rsp_tmp] 
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
; .dlt.ptn 3'(= {| l |} )
	mov rdi,r9
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call free 
	mov rsp,QWORD [rsp_tmp] 
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
; .mov_ptn2 { 0'(= r ) 4'(= {| l |} ) } ⊢ { 0'(= r ) 1'(= {| l |} ) }
; .mov_ptn 4'(= {| l |} ) ⊢ 1'(= {| l |} )
	mov rax,r10
	mov r14,rax
	ret
LB_592:
;; ? 1'(= a2◂ [ *{ {| l |}a24◂ [ a9◂ [ ]{| l |}]}] ) ⊢ 1(<2)◂{ }
;; rsp=0 , %712~0'(= r ) 
	jmp LB_600
LB_600:
; $ %[ "" ] ⊢ %[ "" ]
;; rsp=0 , %728~%[ "" ] %712~0'(= r ) 
; ∎ { 0'(= r ) %[ "" ] }
; .mov_ptn2 { 0'(= r ) %[ "" ] } ⊢ { 0'(= r ) 1'(= {| l |} ) }
; .mov_ptn %[ "" ] ⊢ 1'(= {| l |} )
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	mov rdi,1  
	mov rsi,16
	xor rax,rax
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call calloc
	mov rsp,QWORD [rsp_tmp]  
	mov rdi,0
	mov rsi,0x_40_00_0000_0000_0000
	or rdi,rsi
	mov QWORD [rax],rdi
	mov QWORD [rax+8*1],0
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	mov r14,rax
	ret
ETR_158: ; pnt_etr { 0'(= r ) 1'(= a24◂ [ a9◂ [ ]{| l |}] ) } ⊢ { 0'(= r ) 1'(= {| l |} ) } : ({ _r64 _t24◂_s8◂_t9 }→{ _r64 _s8 })
;; rsp=0 , %730~1'(= a24◂ [ a9◂ [ ]{| l |}] ) %729~0'(= r ) 
;; ? 1'(= a24◂ [ a9◂ [ ]{| l |}] ) ⊢ 0(<2)◂2'(= a25◂ [ a9◂ [ ]{| l |}] )
	mov rdi,r14
	movzx rax,BYTE [rdi+6]
	cmp rax,0
	jnz LB_601
	mov rax,QWORD [rdi+8]
	mov r8,rax
;; rsp=0 , %731~2'(= a25◂ [ a9◂ [ ]{| l |}] ) %729~0'(= r ) 
; rsp_d=0, #159 { 0'(= r ) 2'(= a25◂ [ a9◂ [ ]{| l |}] ) } ⊢ { 0'(= r ) 1'(= {| l |} ) }
; .mov_ptn2 { 0'(= r ) 2'(= a25◂ [ a9◂ [ ]{| l |}] ) } ⊢ { 0'(= r ) 1'(= a25◂ [ a9◂ [ ]{| l |}] ) }
; .mov_ptn 2'(= a25◂ [ a9◂ [ ]{| l |}] ) ⊢ 1'(= a25◂ [ a9◂ [ ]{| l |}] )
	mov rax,r8
	mov r14,rax
	call ETR_159

;; rsp=0 , %733~1'(= {| l |} ) %732~0'(= r ) 
; ∎ { 0'(= r ) 1'(= {| l |} ) }
; .mov_ptn2 { 0'(= r ) 1'(= {| l |} ) } ⊢ { 0'(= r ) 1'(= {| l |} ) }
	ret
LB_601:
;; ? 1'(= a24◂ [ a9◂ [ ]{| l |}] ) ⊢ 1(<2)◂1'(= a26◂ [ a9◂ [ ]{| l |}] )
;; rsp=0 , %734~1'(= a26◂ [ a9◂ [ ]{| l |}] ) %729~0'(= r ) 
; rsp_d=0, #160 { 0'(= r ) 1'(= a26◂ [ a9◂ [ ]{| l |}] ) } ⊢ { 0'(= r ) 1'(= {| l |} ) }
; .mov_ptn2 { 0'(= r ) 1'(= a26◂ [ a9◂ [ ]{| l |}] ) } ⊢ { 0'(= r ) 1'(= a26◂ [ a9◂ [ ]{| l |}] ) }
	call ETR_160

;; rsp=0 , %736~1'(= {| l |} ) %735~0'(= r ) 
; ∎ { 0'(= r ) 1'(= {| l |} ) }
; .mov_ptn2 { 0'(= r ) 1'(= {| l |} ) } ⊢ { 0'(= r ) 1'(= {| l |} ) }
	ret
ETR_159: ; pnt_cnc { 0'(= r ) 1'(= a25◂ [ a9◂ [ ]{| l |}] ) } ⊢ { 0'(= r ) 1'(= {| l |} ) } : ({ _r64 _t25◂_s8◂_t9 }→{ _r64 _s8 })
;; rsp=0 , %738~1'(= a25◂ [ a9◂ [ ]{| l |}] ) %737~0'(= r ) 
;; ? 1'(= a25◂ [ a9◂ [ ]{| l |}] ) ⊢ 0(<2)◂{ 2'(= a3◂ [ {| l |}] ) 3'(= a27◂ [ ] ) 4'(= a28◂ [ a9◂ [ ]] ) 5'(= a3◂ [ a25◂ [ a9◂ [ ]{| l |}]] ) 6'(= a25◂ [ a9◂ [ ]{| l |}] ) }
	mov rdi,r14
	movzx rax,BYTE [rdi+6]
	cmp rax,0
	jnz LB_602
	mov rdi,r14
	mov rdi,QWORD [rdi+8+8*0]
	mov r8,rdi
	mov rdi,r14
	mov rdi,QWORD [rdi+8+8*1]
	mov r9,rdi
	mov rdi,r14
	mov rdi,QWORD [rdi+8+8*2]
	mov r10,rdi
	mov rdi,r14
	mov rdi,QWORD [rdi+8+8*3]
	mov r11,rdi
	mov rdi,r14
	mov rdi,QWORD [rdi+8+8*4]
	mov rcx,rdi
;; rsp=0 , %743~6'(= a25◂ [ a9◂ [ ]{| l |}] ) %742~5'(= a3◂ [ a25◂ [ a9◂ [ ]{| l |}]] ) %741~4'(= a28◂ [ a9◂ [ ]] ) %740~3'(= a27◂ [ ] ) %739~2'(= a3◂ [ {| l |}] ) %737~0'(= r ) 
; rsp_d=0, #159 { 0'(= r ) 6'(= a25◂ [ a9◂ [ ]{| l |}] ) } ⊢ { 0'(= r ) 1'(= {| l |} ) }
	lea rsp,[rsp-8*4]
	mov QWORD [rsp+8*0],r8
	mov QWORD [rsp+8*1],r9
	mov QWORD [rsp+8*2],r10
	mov QWORD [rsp+8*3],r11
; .mov_ptn2 { 0'(= r ) 6'(= a25◂ [ a9◂ [ ]{| l |}] ) } ⊢ { 0'(= r ) 1'(= a25◂ [ a9◂ [ ]{| l |}] ) }
; .mov_ptn 6'(= a25◂ [ a9◂ [ ]{| l |}] ) ⊢ 1'(= a25◂ [ a9◂ [ ]{| l |}] )
	mov rax,rcx
	mov r14,rax
	call ETR_159

	mov r11,QWORD [rsp-8+8*4]
	mov r10,QWORD [rsp-8+8*3]
	mov r9,QWORD [rsp-8+8*2]
	mov r8,QWORD [rsp-8+8*1]
	lea rsp,[rsp+8*4]
;; rsp=0 , %745~1'(= {| l |} ) %744~0'(= r ) %742~5'(= a3◂ [ a25◂ [ a9◂ [ ]{| l |}]] ) %741~4'(= a28◂ [ a9◂ [ ]] ) %740~3'(= a27◂ [ ] ) %739~2'(= a3◂ [ {| l |}] ) 
; » _^ .. ⊢ ..
; .. //
	mov rdi,0
	mov rsi,r14
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[rsi] 
	add rdi,rax 
	push rax
	push rsi
	mov rsi,r13
	push rsi
	imul rsi,1
	add rdi,rsi 
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	add rdi,7
	push rdi 
	and rdi,~111b
	add rdi,16
	mov rsi,rdi 
	mov rdi,1
	xor rax,rax 
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call calloc
	mov rsp,QWORD [rsp_tmp]  
	pop rdi 
	mov QWORD [rax],rdi
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	mov rcx,rax
	lea rdi,[rax+7+rdi]
	std 
	mov QWORD [tmp],rcx 
	jmp LB_603
	LB_604: db 9,0
LB_603:
	pop rax 
LB_605:
	lea rsi,[LB_604+1-1]
	mov rcx,1
	rep movsb 
	sub rax,1
	cmp rax,0
	jnz LB_605
	jmp LB_606
	LB_607: db 226,136,144,32,46,46,10,0
LB_606:
	lea rsi,[LB_607+7-1]
	mov rcx,7
	rep movsb
	pop rsi 
	pop rcx
	lea rsi,[rsi+7+rcx]
	rep movsb
	mov rcx,QWORD [tmp] 
;; rsp=0 , %748~6'(= {| l |} ) %747~1'(= {| l |} ) %746~0'(= r ) %742~5'(= a3◂ [ a25◂ [ a9◂ [ ]{| l |}]] ) %741~4'(= a28◂ [ a9◂ [ ]] ) %740~3'(= a27◂ [ ] ) %739~2'(= a3◂ [ {| l |}] ) 
; ∎ { 0'(= r ) 6'(= {| l |} ) }
; .dlt.ptn 1'(= {| l |} )
	mov rdi,r14
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call free 
	mov rsp,QWORD [rsp_tmp] 
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
; .dlt.ptn 5'(= a3◂ [ a25◂ [ a9◂ [ ]{| l |}]] )
;	.dlt adt ⊢ _  
; .dlt.ptn 4'(= a28◂ [ a9◂ [ ]] )
;	.dlt adt ⊢ _  
; .dlt.ptn 3'(= a27◂ [ ] )
;	.dlt adt ⊢ _  
; .dlt.ptn 2'(= a3◂ [ {| l |}] )
;	.dlt adt ⊢ _  
; .mov_ptn2 { 0'(= r ) 6'(= {| l |} ) } ⊢ { 0'(= r ) 1'(= {| l |} ) }
; .mov_ptn 6'(= {| l |} ) ⊢ 1'(= {| l |} )
	mov rax,rcx
	mov r14,rax
	ret
LB_602:
;; ? 1'(= a25◂ [ a9◂ [ ]{| l |}] ) ⊢ 1(<2)◂{ 2'(= a3◂ [ {| l |}] ) 3'(= a27◂ [ ] ) 4'(= a28◂ [ a9◂ [ ]] ) 5'(= a3◂ [ a25◂ [ a9◂ [ ]{| l |}]] ) }
	mov rdi,r14
	mov rdi,QWORD [rdi+8+8*0]
	mov r8,rdi
	mov rdi,r14
	mov rdi,QWORD [rdi+8+8*1]
	mov r9,rdi
	mov rdi,r14
	mov rdi,QWORD [rdi+8+8*2]
	mov r10,rdi
	mov rdi,r14
	mov rdi,QWORD [rdi+8+8*3]
	mov r11,rdi
;; rsp=0 , %752~5'(= a3◂ [ a25◂ [ a9◂ [ ]{| l |}]] ) %751~4'(= a28◂ [ a9◂ [ ]] ) %750~3'(= a27◂ [ ] ) %749~2'(= a3◂ [ {| l |}] ) %737~0'(= r ) 
; » _^ .. ⊢ ..
; .. //
	mov rdi,0
	mov rsi,r13
	push rsi
	imul rsi,1
	add rdi,rsi 
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	add rdi,9
	push rdi 
	and rdi,~111b
	add rdi,16
	mov rsi,rdi 
	mov rdi,1
	xor rax,rax 
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call calloc
	mov rsp,QWORD [rsp_tmp]  
	pop rdi 
	mov QWORD [rax],rdi
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	mov r14,rax
	lea rdi,[rax+7+rdi]
	std 
	mov QWORD [tmp],rcx 
	jmp LB_608
	LB_609: db 9,0
LB_608:
	pop rax 
LB_610:
	lea rsi,[LB_609+1-1]
	mov rcx,1
	rep movsb 
	sub rax,1
	cmp rax,0
	jnz LB_610
	jmp LB_611
	LB_612: db 226,136,144,46,32,46,46,32,10,0
LB_611:
	lea rsi,[LB_612+9-1]
	mov rcx,9
	rep movsb
	mov rcx,QWORD [tmp] 
;; rsp=0 , %754~1'(= {| l |} ) %753~0'(= r ) %752~5'(= a3◂ [ a25◂ [ a9◂ [ ]{| l |}]] ) %751~4'(= a28◂ [ a9◂ [ ]] ) %750~3'(= a27◂ [ ] ) %749~2'(= a3◂ [ {| l |}] ) 
; ∎ { 0'(= r ) 1'(= {| l |} ) }
; .dlt.ptn 5'(= a3◂ [ a25◂ [ a9◂ [ ]{| l |}]] )
;	.dlt adt ⊢ _  
; .dlt.ptn 4'(= a28◂ [ a9◂ [ ]] )
;	.dlt adt ⊢ _  
; .dlt.ptn 3'(= a27◂ [ ] )
;	.dlt adt ⊢ _  
; .dlt.ptn 2'(= a3◂ [ {| l |}] )
;	.dlt adt ⊢ _  
; .mov_ptn2 { 0'(= r ) 1'(= {| l |} ) } ⊢ { 0'(= r ) 1'(= {| l |} ) }
	ret
ETR_160: ; pnt_act { 0'(= r ) 1'(= a26◂ [ a9◂ [ ]{| l |}] ) } ⊢ { 0'(= r ) 1'(= {| l |} ) } : ({ _r64 _t26◂_s8◂_t9 }→{ _r64 _s8 })
;; rsp=0 , %756~1'(= a26◂ [ a9◂ [ ]{| l |}] ) %755~0'(= r ) 
;; ? 1'(= a26◂ [ a9◂ [ ]{| l |}] ) ⊢ 0(<2)◂{ 2'(= a2◂ [ a13◂ [ {| l |}]] ) 3'(= a8◂ [ a13◂ [ {| l |}]] ) 4'(= a17◂ [ a9◂ [ ]{| l |}] ) 5'(= a27◂ [ ] ) 6'(= a28◂ [ a9◂ [ ]] ) 7'(= a3◂ [ *{ a8◂ [ a13◂ [ {| l |}]]a26◂ [ a9◂ [ ]{| l |}]}] ) 8'(= a26◂ [ a9◂ [ ]{| l |}] ) }
	mov rdi,r14
	movzx rax,BYTE [rdi+6]
	cmp rax,0
	jnz LB_613
	mov rdi,r14
	mov rdi,QWORD [rdi+8+8*0]
	mov r8,rdi
	mov rdi,r14
	mov rdi,QWORD [rdi+8+8*1]
	mov r9,rdi
	mov rdi,r14
	mov rdi,QWORD [rdi+8+8*2]
	mov r10,rdi
	mov rdi,r14
	mov rdi,QWORD [rdi+8+8*3]
	mov r11,rdi
	mov rdi,r14
	mov rdi,QWORD [rdi+8+8*4]
	mov rcx,rdi
	mov rdi,r14
	mov rdi,QWORD [rdi+8+8*5]
	mov rdx,rdi
	lea rsp,[rsp-8*1]
	mov rdi,r14
	mov rdi,QWORD [rdi+8+8*6]
	mov QWORD [rsp-8+8*1],rdi
;; rsp=1 , %763~8'(= a26◂ [ a9◂ [ ]{| l |}] ) %762~7'(= a3◂ [ *{ a8◂ [ a13◂ [ {| l |}]]a26◂ [ a9◂ [ ]{| l |}]}] ) %761~6'(= a28◂ [ a9◂ [ ]] ) %760~5'(= a27◂ [ ] ) %759~4'(= a17◂ [ a9◂ [ ]{| l |}] ) %758~3'(= a8◂ [ a13◂ [ {| l |}]] ) %757~2'(= a2◂ [ a13◂ [ {| l |}]] ) %755~0'(= r ) 
; rsp_d=0, #99 3'(= a8◂ [ a13◂ [ {| l |}]] ) ⊢ 1'(= {| l |} )
	lea rsp,[rsp-8*6]
	mov QWORD [rsp+8*0],r13
	mov QWORD [rsp+8*1],r8
	mov QWORD [rsp+8*2],r10
	mov QWORD [rsp+8*3],r11
	mov QWORD [rsp+8*4],rcx
	mov QWORD [rsp+8*5],rdx
; .mov_ptn2 3'(= a8◂ [ a13◂ [ {| l |}]] ) ⊢ 0'(= a8◂ [ a13◂ [ {| l |}]] )
; .mov_ptn 3'(= a8◂ [ a13◂ [ {| l |}]] ) ⊢ 0'(= a8◂ [ a13◂ [ {| l |}]] )
	mov rax,r9
	mov r13,rax
	call ETR_99

	mov rdx,QWORD [rsp-8+8*6]
	mov rcx,QWORD [rsp-8+8*5]
	mov r11,QWORD [rsp-8+8*4]
	mov r10,QWORD [rsp-8+8*3]
	mov r8,QWORD [rsp-8+8*2]
	mov rax,QWORD [rsp-8+8*1]
	mov r14,r13
	mov r13,rax
	lea rsp,[rsp+8*6]
;; rsp=1 , %764~1'(= {| l |} ) %763~8'(= a26◂ [ a9◂ [ ]{| l |}] ) %762~7'(= a3◂ [ *{ a8◂ [ a13◂ [ {| l |}]]a26◂ [ a9◂ [ ]{| l |}]}] ) %761~6'(= a28◂ [ a9◂ [ ]] ) %760~5'(= a27◂ [ ] ) %759~4'(= a17◂ [ a9◂ [ ]{| l |}] ) %757~2'(= a2◂ [ a13◂ [ {| l |}]] ) %755~0'(= r ) 
; _inc 0'(= r ) ⊢ 0'(= r )
	add r13,1
;; rsp=1 , %765~0'(= r ) %764~1'(= {| l |} ) %763~8'(= a26◂ [ a9◂ [ ]{| l |}] ) %762~7'(= a3◂ [ *{ a8◂ [ a13◂ [ {| l |}]]a26◂ [ a9◂ [ ]{| l |}]}] ) %761~6'(= a28◂ [ a9◂ [ ]] ) %760~5'(= a27◂ [ ] ) %759~4'(= a17◂ [ a9◂ [ ]{| l |}] ) %757~2'(= a2◂ [ a13◂ [ {| l |}]] ) 
; rsp_d=0, #132 { 0'(= r ) 4'(= a17◂ [ a9◂ [ ]{| l |}] ) } ⊢ { 0'(= r ) 3'(= {| l |} ) }
	lea rsp,[rsp-8*5]
	mov QWORD [rsp+8*0],r14
	mov QWORD [rsp+8*1],r8
	mov QWORD [rsp+8*2],r11
	mov QWORD [rsp+8*3],rcx
	mov QWORD [rsp+8*4],rdx
; .mov_ptn2 { 0'(= r ) 4'(= a17◂ [ a9◂ [ ]{| l |}] ) } ⊢ { 0'(= r ) 1'(= a17◂ [ a9◂ [ ]{| l |}] ) }
; .mov_ptn 4'(= a17◂ [ a9◂ [ ]{| l |}] ) ⊢ 1'(= a17◂ [ a9◂ [ ]{| l |}] )
	mov rax,r10
	mov r14,rax
	call ETR_132

	mov rdx,QWORD [rsp-8+8*5]
	mov rcx,QWORD [rsp-8+8*4]
	mov r11,QWORD [rsp-8+8*3]
	mov r8,QWORD [rsp-8+8*2]
	mov rax,QWORD [rsp-8+8*1]
	mov r9,r14
	mov r14,rax
	lea rsp,[rsp+8*5]
;; rsp=1 , %767~3'(= {| l |} ) %766~0'(= r ) %764~1'(= {| l |} ) %763~8'(= a26◂ [ a9◂ [ ]{| l |}] ) %762~7'(= a3◂ [ *{ a8◂ [ a13◂ [ {| l |}]]a26◂ [ a9◂ [ ]{| l |}]}] ) %761~6'(= a28◂ [ a9◂ [ ]] ) %760~5'(= a27◂ [ ] ) %757~2'(= a2◂ [ a13◂ [ {| l |}]] ) 
; _dec 0'(= r ) ⊢ 0'(= r )
	sub r13,1
;; rsp=1 , %768~0'(= r ) %767~3'(= {| l |} ) %764~1'(= {| l |} ) %763~8'(= a26◂ [ a9◂ [ ]{| l |}] ) %762~7'(= a3◂ [ *{ a8◂ [ a13◂ [ {| l |}]]a26◂ [ a9◂ [ ]{| l |}]}] ) %761~6'(= a28◂ [ a9◂ [ ]] ) %760~5'(= a27◂ [ ] ) %757~2'(= a2◂ [ a13◂ [ {| l |}]] ) 
; rsp_d=0, #160 { 0'(= r ) 8'(= a26◂ [ a9◂ [ ]{| l |}] ) } ⊢ { 0'(= r ) 4'(= {| l |} ) }
	lea rsp,[rsp-8*6]
	mov QWORD [rsp+8*0],r14
	mov QWORD [rsp+8*1],r8
	mov QWORD [rsp+8*2],r9
	mov QWORD [rsp+8*3],r11
	mov QWORD [rsp+8*4],rcx
	mov QWORD [rsp+8*5],rdx
; .mov_ptn2 { 0'(= r ) 8'(= a26◂ [ a9◂ [ ]{| l |}] ) } ⊢ { 0'(= r ) 1'(= a26◂ [ a9◂ [ ]{| l |}] ) }
; .mov_ptn 8'(= a26◂ [ a9◂ [ ]{| l |}] ) ⊢ 1'(= a26◂ [ a9◂ [ ]{| l |}] )
	mov rax,QWORD [rsp-8+8*7]
	mov r14,rax
	call ETR_160

	mov rdx,QWORD [rsp-8+8*6]
	mov rcx,QWORD [rsp-8+8*5]
	mov r11,QWORD [rsp-8+8*4]
	mov r9,QWORD [rsp-8+8*3]
	mov r8,QWORD [rsp-8+8*2]
	mov rax,QWORD [rsp-8+8*1]
	mov r10,r14
	mov r14,rax
	lea rsp,[rsp+8*7]
;; rsp=0 , %770~4'(= {| l |} ) %769~0'(= r ) %767~3'(= {| l |} ) %764~1'(= {| l |} ) %762~7'(= a3◂ [ *{ a8◂ [ a13◂ [ {| l |}]]a26◂ [ a9◂ [ ]{| l |}]}] ) %761~6'(= a28◂ [ a9◂ [ ]] ) %760~5'(= a27◂ [ ] ) %757~2'(= a2◂ [ a13◂ [ {| l |}]] ) 
; » _^ .. ⊢ ..
; .. //
	lea rsp,[rsp-8*1]
	mov rdi,0
	mov rsi,r10
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[rsi] 
	add rdi,rax 
	push rax
	push rsi
	mov rsi,r9
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[rsi] 
	add rdi,rax 
	push rax
	push rsi
	mov rsi,r14
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[rsi] 
	add rdi,rax 
	push rax
	push rsi
	mov rsi,r13
	push rsi
	imul rsi,1
	add rdi,rsi 
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	add rdi,12
	push rdi 
	and rdi,~111b
	add rdi,16
	mov rsi,rdi 
	mov rdi,1
	xor rax,rax 
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call calloc
	mov rsp,QWORD [rsp_tmp]  
	pop rdi 
	mov QWORD [rax],rdi
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	mov QWORD [rsp-8+8*8],rax
	lea rdi,[rax+7+rdi]
	std 
	mov QWORD [tmp],rcx 
	jmp LB_614
	LB_615: db 9,0
LB_614:
	pop rax 
LB_616:
	lea rsi,[LB_615+1-1]
	mov rcx,1
	rep movsb 
	sub rax,1
	cmp rax,0
	jnz LB_616
	jmp LB_617
	LB_618: db 226,136,144,32,46,46,32,226,138,162,32,0
LB_617:
	lea rsi,[LB_618+11-1]
	mov rcx,11
	rep movsb
	pop rsi 
	pop rcx
	lea rsi,[rsi+7+rcx]
	rep movsb
	jmp LB_619
	LB_620: db 10,0
LB_619:
	lea rsi,[LB_620+1-1]
	mov rcx,1
	rep movsb
	pop rsi 
	pop rcx
	lea rsi,[rsi+7+rcx]
	rep movsb
	pop rsi 
	pop rcx
	lea rsi,[rsi+7+rcx]
	rep movsb
	mov rcx,QWORD [tmp] 
;; rsp=1 , %775~8'(= {| l |} ) %774~4'(= {| l |} ) %773~3'(= {| l |} ) %772~1'(= {| l |} ) %771~0'(= r ) %762~7'(= a3◂ [ *{ a8◂ [ a13◂ [ {| l |}]]a26◂ [ a9◂ [ ]{| l |}]}] ) %761~6'(= a28◂ [ a9◂ [ ]] ) %760~5'(= a27◂ [ ] ) %757~2'(= a2◂ [ a13◂ [ {| l |}]] ) 
; ∎ { 0'(= r ) 8'(= {| l |} ) }
; .dlt.ptn 4'(= {| l |} )
	mov rdi,r10
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call free 
	mov rsp,QWORD [rsp_tmp] 
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
; .dlt.ptn 3'(= {| l |} )
	mov rdi,r9
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call free 
	mov rsp,QWORD [rsp_tmp] 
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
; .dlt.ptn 1'(= {| l |} )
	mov rdi,r14
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call free 
	mov rsp,QWORD [rsp_tmp] 
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
; .dlt.ptn 7'(= a3◂ [ *{ a8◂ [ a13◂ [ {| l |}]]a26◂ [ a9◂ [ ]{| l |}]}] )
;	.dlt adt ⊢ _  
; .dlt.ptn 6'(= a28◂ [ a9◂ [ ]] )
;	.dlt adt ⊢ _  
; .dlt.ptn 5'(= a27◂ [ ] )
;	.dlt adt ⊢ _  
; .dlt.ptn 2'(= a2◂ [ a13◂ [ {| l |}]] )
;	.dlt adt ⊢ _  
; .mov_ptn2 { 0'(= r ) 8'(= {| l |} ) } ⊢ { 0'(= r ) 1'(= {| l |} ) }
; .mov_ptn 8'(= {| l |} ) ⊢ 1'(= {| l |} )
	mov rax,QWORD [rsp-8+8*1]
	mov r14,rax
	lea rsp,[rsp+8*1]
	ret
LB_613:
;; ? 1'(= a26◂ [ a9◂ [ ]{| l |}] ) ⊢ 1(<2)◂{ 2'(= a2◂ [ a13◂ [ {| l |}]] ) 3'(= a8◂ [ a13◂ [ {| l |}]] ) 4'(= a17◂ [ a9◂ [ ]{| l |}] ) 5'(= a27◂ [ ] ) 6'(= a28◂ [ a9◂ [ ]] ) 7'(= a3◂ [ *{ a8◂ [ a13◂ [ {| l |}]]a26◂ [ a9◂ [ ]{| l |}]}] ) }
	mov rdi,r14
	mov rdi,QWORD [rdi+8+8*0]
	mov r8,rdi
	mov rdi,r14
	mov rdi,QWORD [rdi+8+8*1]
	mov r9,rdi
	mov rdi,r14
	mov rdi,QWORD [rdi+8+8*2]
	mov r10,rdi
	mov rdi,r14
	mov rdi,QWORD [rdi+8+8*3]
	mov r11,rdi
	mov rdi,r14
	mov rdi,QWORD [rdi+8+8*4]
	mov rcx,rdi
	mov rdi,r14
	mov rdi,QWORD [rdi+8+8*5]
	mov rdx,rdi
;; rsp=1 , %781~7'(= a3◂ [ *{ a8◂ [ a13◂ [ {| l |}]]a26◂ [ a9◂ [ ]{| l |}]}] ) %780~6'(= a28◂ [ a9◂ [ ]] ) %779~5'(= a27◂ [ ] ) %778~4'(= a17◂ [ a9◂ [ ]{| l |}] ) %777~3'(= a8◂ [ a13◂ [ {| l |}]] ) %776~2'(= a2◂ [ a13◂ [ {| l |}]] ) %755~0'(= r ) 
; rsp_d=0, #99 3'(= a8◂ [ a13◂ [ {| l |}]] ) ⊢ 1'(= {| l |} )
	lea rsp,[rsp-8*6]
	mov QWORD [rsp+8*0],r13
	mov QWORD [rsp+8*1],r8
	mov QWORD [rsp+8*2],r10
	mov QWORD [rsp+8*3],r11
	mov QWORD [rsp+8*4],rcx
	mov QWORD [rsp+8*5],rdx
; .mov_ptn2 3'(= a8◂ [ a13◂ [ {| l |}]] ) ⊢ 0'(= a8◂ [ a13◂ [ {| l |}]] )
; .mov_ptn 3'(= a8◂ [ a13◂ [ {| l |}]] ) ⊢ 0'(= a8◂ [ a13◂ [ {| l |}]] )
	mov rax,r9
	mov r13,rax
	call ETR_99

	mov rdx,QWORD [rsp-8+8*6]
	mov rcx,QWORD [rsp-8+8*5]
	mov r11,QWORD [rsp-8+8*4]
	mov r10,QWORD [rsp-8+8*3]
	mov r8,QWORD [rsp-8+8*2]
	mov rax,QWORD [rsp-8+8*1]
	mov r14,r13
	mov r13,rax
	lea rsp,[rsp+8*7]
;; rsp=0 , %782~1'(= {| l |} ) %781~7'(= a3◂ [ *{ a8◂ [ a13◂ [ {| l |}]]a26◂ [ a9◂ [ ]{| l |}]}] ) %780~6'(= a28◂ [ a9◂ [ ]] ) %779~5'(= a27◂ [ ] ) %778~4'(= a17◂ [ a9◂ [ ]{| l |}] ) %776~2'(= a2◂ [ a13◂ [ {| l |}]] ) %755~0'(= r ) 
; _inc 0'(= r ) ⊢ 0'(= r )
	add r13,1
;; rsp=0 , %783~0'(= r ) %782~1'(= {| l |} ) %781~7'(= a3◂ [ *{ a8◂ [ a13◂ [ {| l |}]]a26◂ [ a9◂ [ ]{| l |}]}] ) %780~6'(= a28◂ [ a9◂ [ ]] ) %779~5'(= a27◂ [ ] ) %778~4'(= a17◂ [ a9◂ [ ]{| l |}] ) %776~2'(= a2◂ [ a13◂ [ {| l |}]] ) 
; rsp_d=0, #132 { 0'(= r ) 4'(= a17◂ [ a9◂ [ ]{| l |}] ) } ⊢ { 0'(= r ) 3'(= {| l |} ) }
	lea rsp,[rsp-8*5]
	mov QWORD [rsp+8*0],r14
	mov QWORD [rsp+8*1],r8
	mov QWORD [rsp+8*2],r11
	mov QWORD [rsp+8*3],rcx
	mov QWORD [rsp+8*4],rdx
; .mov_ptn2 { 0'(= r ) 4'(= a17◂ [ a9◂ [ ]{| l |}] ) } ⊢ { 0'(= r ) 1'(= a17◂ [ a9◂ [ ]{| l |}] ) }
; .mov_ptn 4'(= a17◂ [ a9◂ [ ]{| l |}] ) ⊢ 1'(= a17◂ [ a9◂ [ ]{| l |}] )
	mov rax,r10
	mov r14,rax
	call ETR_132

	mov rdx,QWORD [rsp-8+8*5]
	mov rcx,QWORD [rsp-8+8*4]
	mov r11,QWORD [rsp-8+8*3]
	mov r8,QWORD [rsp-8+8*2]
	mov rax,QWORD [rsp-8+8*1]
	mov r9,r14
	mov r14,rax
	lea rsp,[rsp+8*5]
;; rsp=0 , %785~3'(= {| l |} ) %784~0'(= r ) %782~1'(= {| l |} ) %781~7'(= a3◂ [ *{ a8◂ [ a13◂ [ {| l |}]]a26◂ [ a9◂ [ ]{| l |}]}] ) %780~6'(= a28◂ [ a9◂ [ ]] ) %779~5'(= a27◂ [ ] ) %776~2'(= a2◂ [ a13◂ [ {| l |}]] ) 
; _dec 0'(= r ) ⊢ 0'(= r )
	sub r13,1
;; rsp=0 , %786~0'(= r ) %785~3'(= {| l |} ) %782~1'(= {| l |} ) %781~7'(= a3◂ [ *{ a8◂ [ a13◂ [ {| l |}]]a26◂ [ a9◂ [ ]{| l |}]}] ) %780~6'(= a28◂ [ a9◂ [ ]] ) %779~5'(= a27◂ [ ] ) %776~2'(= a2◂ [ a13◂ [ {| l |}]] ) 
; » _^ .. ⊢ ..
; .. //
	mov rdi,0
	mov rsi,r9
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[rsi] 
	add rdi,rax 
	push rax
	push rsi
	mov rsi,r14
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[rsi] 
	add rdi,rax 
	push rax
	push rsi
	mov rsi,r13
	push rsi
	imul rsi,1
	add rdi,rsi 
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	add rdi,13
	push rdi 
	and rdi,~111b
	add rdi,16
	mov rsi,rdi 
	mov rdi,1
	xor rax,rax 
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call calloc
	mov rsp,QWORD [rsp_tmp]  
	pop rdi 
	mov QWORD [rax],rdi
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	mov r10,rax
	lea rdi,[rax+7+rdi]
	std 
	mov QWORD [tmp],rcx 
	jmp LB_621
	LB_622: db 9,0
LB_621:
	pop rax 
LB_623:
	lea rsi,[LB_622+1-1]
	mov rcx,1
	rep movsb 
	sub rax,1
	cmp rax,0
	jnz LB_623
	jmp LB_624
	LB_625: db 226,136,144,46,32,46,46,32,226,138,162,32,0
LB_624:
	lea rsi,[LB_625+12-1]
	mov rcx,12
	rep movsb
	pop rsi 
	pop rcx
	lea rsi,[rsi+7+rcx]
	rep movsb
	jmp LB_626
	LB_627: db 10,0
LB_626:
	lea rsi,[LB_627+1-1]
	mov rcx,1
	rep movsb
	pop rsi 
	pop rcx
	lea rsi,[rsi+7+rcx]
	rep movsb
	mov rcx,QWORD [tmp] 
;; rsp=0 , %790~4'(= {| l |} ) %789~3'(= {| l |} ) %788~1'(= {| l |} ) %787~0'(= r ) %781~7'(= a3◂ [ *{ a8◂ [ a13◂ [ {| l |}]]a26◂ [ a9◂ [ ]{| l |}]}] ) %780~6'(= a28◂ [ a9◂ [ ]] ) %779~5'(= a27◂ [ ] ) %776~2'(= a2◂ [ a13◂ [ {| l |}]] ) 
; ∎ { 0'(= r ) 4'(= {| l |} ) }
; .dlt.ptn 3'(= {| l |} )
	mov rdi,r9
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call free 
	mov rsp,QWORD [rsp_tmp] 
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
; .dlt.ptn 1'(= {| l |} )
	mov rdi,r14
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call free 
	mov rsp,QWORD [rsp_tmp] 
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
; .dlt.ptn 7'(= a3◂ [ *{ a8◂ [ a13◂ [ {| l |}]]a26◂ [ a9◂ [ ]{| l |}]}] )
;	.dlt adt ⊢ _  
; .dlt.ptn 6'(= a28◂ [ a9◂ [ ]] )
;	.dlt adt ⊢ _  
; .dlt.ptn 5'(= a27◂ [ ] )
;	.dlt adt ⊢ _  
; .dlt.ptn 2'(= a2◂ [ a13◂ [ {| l |}]] )
;	.dlt adt ⊢ _  
; .mov_ptn2 { 0'(= r ) 4'(= {| l |} ) } ⊢ { 0'(= r ) 1'(= {| l |} ) }
; .mov_ptn 4'(= {| l |} ) ⊢ 1'(= {| l |} )
	mov rax,r10
	mov r14,rax
	ret
ETR_163: ; act_regs { } ⊢ 0'(= a2◂ [ a13◂ [ {| l |}]] ) : ({ }→_lst◂_t13◂_s8)
;; rsp=0 , 
	jmp LB_628
LB_628:
; $ %[ "_r" ] ⊢ %[ "_r" ]
;; rsp=0 , %811~%[ "_r" ] 
	jmp LB_629
LB_629:
; $ %[ "_n" ] ⊢ %[ "_n" ]
;; rsp=0 , %812~%[ "_n" ] %811~%[ "_r" ] 
; #89 %[ "_r" ] ⊢ 1(<2)◂%[ "_r" ]
;; rsp=0 , %813~1(<2)◂%[ "_r" ] %812~%[ "_n" ] 
; #89 %[ "_n" ] ⊢ 1(<2)◂%[ "_n" ]
;; rsp=0 , %814~1(<2)◂%[ "_n" ] %813~1(<2)◂%[ "_r" ] 
; #20 { } ⊢ 1(<2)◂{ }
;; rsp=0 , %815~1(<2)◂{ } %814~1(<2)◂%[ "_n" ] %813~1(<2)◂%[ "_r" ] 
; #21 { 1(<2)◂%[ "_r" ] 1(<2)◂{ } } ⊢ 0(<2)◂{ 1(<2)◂%[ "_r" ] 1(<2)◂{ } }
;; rsp=0 , %816~0(<2)◂{ 1(<2)◂%[ "_r" ] 1(<2)◂{ } } %814~1(<2)◂%[ "_n" ] 
; #21 { 1(<2)◂%[ "_n" ] 0(<2)◂{ 1(<2)◂%[ "_r" ] 1(<2)◂{ } } } ⊢ 0(<2)◂{ 1(<2)◂%[ "_n" ] 0(<2)◂{ 1(<2)◂%[ "_r" ] 1(<2)◂{ } } }
;; rsp=0 , %817~0(<2)◂{ 1(<2)◂%[ "_n" ] 0(<2)◂{ 1(<2)◂%[ "_r" ] 1(<2)◂{ } } } 
; ∎ 0(<2)◂{ 1(<2)◂%[ "_n" ] 0(<2)◂{ 1(<2)◂%[ "_r" ] 1(<2)◂{ } } }
; .mov_ptn2 0(<2)◂{ 1(<2)◂%[ "_n" ] 0(<2)◂{ 1(<2)◂%[ "_r" ] 1(<2)◂{ } } } ⊢ 0'(= a2◂ [ a13◂ [ {| l |}]] )
; .mov_ptn 0(<2)◂{ 1(<2)◂%[ "_n" ] 0(<2)◂{ 1(<2)◂%[ "_r" ] 1(<2)◂{ } } } ⊢ 0'(= a2◂ [ a13◂ [ {| l |}]] )
	mov rax,[SS_RCD_2_TOP]
	mov rsi,[rax] 
	mov QWORD [SS_RCD_2_TOP],rsi
	mov QWORD [rax],0
	mov r14,rax
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	mov rdi,1  
	mov rsi,16
	xor rax,rax
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call calloc
	mov rsp,QWORD [rsp_tmp]  
	mov rdi,2
	mov rsi,0x_40_00_0000_0000_0000
	or rdi,rsi
	mov QWORD [rax],rdi
	mov QWORD [rax+8*1],0
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	mov BYTE [rax+8+0],95
	mov BYTE [rax+8+1],110
	mov BYTE [rax+6],1
	mov rdi,r14
	mov QWORD [rdi+8+8*0],rax
	mov rax,[SS_RCD_2_TOP]
	mov rsi,[rax] 
	mov QWORD [SS_RCD_2_TOP],rsi
	mov QWORD [rax],0
	mov r8,rax
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	mov rdi,1  
	mov rsi,16
	xor rax,rax
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call calloc
	mov rsp,QWORD [rsp_tmp]  
	mov rdi,2
	mov rsi,0x_40_00_0000_0000_0000
	or rdi,rsi
	mov QWORD [rax],rdi
	mov QWORD [rax+8*1],0
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	mov BYTE [rax+8+0],95
	mov BYTE [rax+8+1],114
	mov BYTE [rax+6],1
	mov rdi,r8
	mov QWORD [rdi+8+8*0],rax
	mov rax,unt 
	mov rax,unt_1
	mov rdi,r8
	mov QWORD [rdi+8+8*1],rax
	mov rax,r8
	mov BYTE [rax+6],0
	mov rdi,r14
	mov QWORD [rdi+8+8*1],rax
	mov rax,r14
	mov BYTE [rax+6],0
	mov r13,rax
	ret
ETR_177: ; pnt { 0'(= r ) 1'(= a2◂ [ a31◂ [ ]] ) } ⊢ { 0'(= r ) 1'(= {| l |} ) } : ({ _r64 _lst◂_t31 }→{ _r64 _s8 })
;; rsp=0 , %819~1'(= a2◂ [ a31◂ [ ]] ) %818~0'(= r ) 
;; ? 1'(= a2◂ [ a31◂ [ ]] ) ⊢ 1(<2)◂{ }
	mov rdi,r14
	movzx rax,BYTE [rdi+6]
	cmp rax,1
	jnz LB_630
;; rsp=0 , %818~0'(= r ) 
	jmp LB_631
LB_631:
; $ %[ "" ] ⊢ %[ "" ]
;; rsp=0 , %820~%[ "" ] %818~0'(= r ) 
; ∎ { 0'(= r ) %[ "" ] }
; .mov_ptn2 { 0'(= r ) %[ "" ] } ⊢ { 0'(= r ) 1'(= {| l |} ) }
; .mov_ptn %[ "" ] ⊢ 1'(= {| l |} )
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	mov rdi,1  
	mov rsi,16
	xor rax,rax
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call calloc
	mov rsp,QWORD [rsp_tmp]  
	mov rdi,0
	mov rsi,0x_40_00_0000_0000_0000
	or rdi,rsi
	mov QWORD [rax],rdi
	mov QWORD [rax+8*1],0
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	mov r14,rax
	ret
LB_630:
;; ? 1'(= a2◂ [ a31◂ [ ]] ) ⊢ 0(<2)◂{ 2'(= a31◂ [ ] ) 3'(= a2◂ [ a31◂ [ ]] ) }
	mov rdi,r14
	mov rdi,QWORD [rdi+8+8*0]
	mov r8,rdi
	mov rdi,r14
	mov rdi,QWORD [rdi+8+8*1]
	mov r9,rdi
;; rsp=0 , %822~3'(= a2◂ [ a31◂ [ ]] ) %821~2'(= a31◂ [ ] ) %818~0'(= r ) 
; rsp_d=0, #178 { 0'(= r ) 2'(= a31◂ [ ] ) } ⊢ { 0'(= r ) 1'(= {| l |} ) }
	lea rsp,[rsp-8*1]
	mov QWORD [rsp+8*0],r9
; .mov_ptn2 { 0'(= r ) 2'(= a31◂ [ ] ) } ⊢ { 0'(= r ) 1'(= a31◂ [ ] ) }
; .mov_ptn 2'(= a31◂ [ ] ) ⊢ 1'(= a31◂ [ ] )
	mov rax,r8
	mov r14,rax
	call ETR_178

	mov r9,QWORD [rsp-8+8*1]
	lea rsp,[rsp+8*1]
;; rsp=0 , %824~1'(= {| l |} ) %823~0'(= r ) %822~3'(= a2◂ [ a31◂ [ ]] ) 
; rsp_d=0, #177 { 0'(= r ) 3'(= a2◂ [ a31◂ [ ]] ) } ⊢ { 0'(= r ) 2'(= {| l |} ) }
	lea rsp,[rsp-8*1]
	mov QWORD [rsp+8*0],r14
; .mov_ptn2 { 0'(= r ) 3'(= a2◂ [ a31◂ [ ]] ) } ⊢ { 0'(= r ) 1'(= a2◂ [ a31◂ [ ]] ) }
; .mov_ptn 3'(= a2◂ [ a31◂ [ ]] ) ⊢ 1'(= a2◂ [ a31◂ [ ]] )
	mov rax,r9
	mov r14,rax
	call ETR_177

	mov rax,QWORD [rsp-8+8*1]
	mov r8,r14
	mov r14,rax
	lea rsp,[rsp+8*1]
;; rsp=0 , %826~2'(= {| l |} ) %825~0'(= r ) %824~1'(= {| l |} ) 
; » _^ .. ⊢ ..
; .. //
	mov rdi,0
	mov rsi,r8
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[rsi] 
	add rdi,rax 
	push rax
	push rsi
	mov rsi,r14
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[rsi] 
	add rdi,rax 
	push rax
	push rsi
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	add rdi,0
	push rdi 
	and rdi,~111b
	add rdi,16
	mov rsi,rdi 
	mov rdi,1
	xor rax,rax 
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call calloc
	mov rsp,QWORD [rsp_tmp]  
	pop rdi 
	mov QWORD [rax],rdi
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	mov r9,rax
	lea rdi,[rax+7+rdi]
	std 
	mov QWORD [tmp],rcx 
	pop rsi 
	pop rcx
	lea rsi,[rsi+7+rcx]
	rep movsb
	pop rsi 
	pop rcx
	lea rsi,[rsi+7+rcx]
	rep movsb
	mov rcx,QWORD [tmp] 
;; rsp=0 , %829~3'(= {| l |} ) %828~2'(= {| l |} ) %827~1'(= {| l |} ) %825~0'(= r ) 
; ∎ { 0'(= r ) 3'(= {| l |} ) }
; .dlt.ptn 2'(= {| l |} )
	mov rdi,r8
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call free 
	mov rsp,QWORD [rsp_tmp] 
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
; .dlt.ptn 1'(= {| l |} )
	mov rdi,r14
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call free 
	mov rsp,QWORD [rsp_tmp] 
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
; .mov_ptn2 { 0'(= r ) 3'(= {| l |} ) } ⊢ { 0'(= r ) 1'(= {| l |} ) }
; .mov_ptn 3'(= {| l |} ) ⊢ 1'(= {| l |} )
	mov rax,r9
	mov r14,rax
	ret
ETR_178: ; pnt_glb_etr { 0'(= r ) 1'(= a31◂ [ ] ) } ⊢ { 0'(= r ) 1'(= {| l |} ) } : ({ _r64 _t31 }→{ _r64 _s8 })
;; rsp=0 , %831~1'(= a31◂ [ ] ) %830~0'(= r ) 
;; ? 1'(= a31◂ [ ] ) ⊢ 0(<6)◂{ 2'(= {| l |} ) 3'(= a32◂ [ ] ) }
	mov rdi,r14
	movzx rax,BYTE [rdi+6]
	cmp rax,0
	jnz LB_632
	mov rdi,r14
	mov rdi,QWORD [rdi+8+8*0]
	mov r8,rdi
	mov rdi,r14
	mov rdi,QWORD [rdi+8+8*1]
	mov r9,rdi
;; rsp=0 , %833~3'(= a32◂ [ ] ) %832~2'(= {| l |} ) %830~0'(= r ) 
;; ? 3'(= a32◂ [ ] ) ⊢ 0(<2)◂1'(= a2◂ [ a31◂ [ ]] )
	mov rdi,r9
	movzx rax,BYTE [rdi+6]
	cmp rax,0
	jnz LB_633
	mov rax,QWORD [rdi+8]
	mov r14,rax
;; rsp=0 , %834~1'(= a2◂ [ a31◂ [ ]] ) %832~2'(= {| l |} ) %830~0'(= r ) 
; _inc 0'(= r ) ⊢ 0'(= r )
	add r13,1
;; rsp=0 , %835~0'(= r ) %834~1'(= a2◂ [ a31◂ [ ]] ) %832~2'(= {| l |} ) 
; rsp_d=0, #177 { 0'(= r ) 1'(= a2◂ [ a31◂ [ ]] ) } ⊢ { 0'(= r ) 1'(= {| l |} ) }
	lea rsp,[rsp-8*1]
	mov QWORD [rsp+8*0],r8
; .mov_ptn2 { 0'(= r ) 1'(= a2◂ [ a31◂ [ ]] ) } ⊢ { 0'(= r ) 1'(= a2◂ [ a31◂ [ ]] ) }
	call ETR_177

	mov r8,QWORD [rsp-8+8*1]
	lea rsp,[rsp+8*1]
;; rsp=0 , %837~1'(= {| l |} ) %836~0'(= r ) %832~2'(= {| l |} ) 
; _dec 0'(= r ) ⊢ 0'(= r )
	sub r13,1
;; rsp=0 , %838~0'(= r ) %837~1'(= {| l |} ) %832~2'(= {| l |} ) 
; » _^ .. ⊢ ..
; .. //
	mov rdi,0
	mov rsi,r13
	push rsi
	imul rsi,1
	add rdi,rsi 
	mov rsi,r14
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[rsi] 
	add rdi,rax 
	push rax
	push rsi
	mov rsi,r8
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[rsi] 
	add rdi,rax 
	push rax
	push rsi
	mov rsi,r13
	push rsi
	imul rsi,1
	add rdi,rsi 
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	add rdi,14
	push rdi 
	and rdi,~111b
	add rdi,16
	mov rsi,rdi 
	mov rdi,1
	xor rax,rax 
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call calloc
	mov rsp,QWORD [rsp_tmp]  
	pop rdi 
	mov QWORD [rax],rdi
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	mov r9,rax
	lea rdi,[rax+7+rdi]
	std 
	mov QWORD [tmp],rcx 
	jmp LB_634
	LB_635: db 9,0
LB_634:
	pop rax 
LB_636:
	lea rsi,[LB_635+1-1]
	mov rcx,1
	rep movsb 
	sub rax,1
	cmp rax,0
	jnz LB_636
	jmp LB_637
	LB_638: db 194,167,194,167,32,0
LB_637:
	lea rsi,[LB_638+5-1]
	mov rcx,5
	rep movsb
	pop rsi 
	pop rcx
	lea rsi,[rsi+7+rcx]
	rep movsb
	jmp LB_639
	LB_640: db 10,0
LB_639:
	lea rsi,[LB_640+1-1]
	mov rcx,1
	rep movsb
	pop rsi 
	pop rcx
	lea rsi,[rsi+7+rcx]
	rep movsb
	jmp LB_641
	LB_642: db 9,0
LB_641:
	pop rax 
LB_643:
	lea rsi,[LB_642+1-1]
	mov rcx,1
	rep movsb 
	sub rax,1
	cmp rax,0
	jnz LB_643
	jmp LB_644
	LB_645: db 9,0
LB_644:
	lea rsi,[LB_645+1-1]
	mov rcx,1
	rep movsb
	jmp LB_646
	LB_647: db 226,136,142,226,136,142,10,0
LB_646:
	lea rsi,[LB_647+7-1]
	mov rcx,7
	rep movsb
	mov rcx,QWORD [tmp] 
;; rsp=0 , %842~3'(= {| l |} ) %841~1'(= {| l |} ) %840~2'(= {| l |} ) %839~0'(= r ) 
; ∎ { 0'(= r ) 3'(= {| l |} ) }
; .dlt.ptn 1'(= {| l |} )
	mov rdi,r14
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call free 
	mov rsp,QWORD [rsp_tmp] 
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
; .dlt.ptn 2'(= {| l |} )
	mov rdi,r8
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call free 
	mov rsp,QWORD [rsp_tmp] 
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
; .mov_ptn2 { 0'(= r ) 3'(= {| l |} ) } ⊢ { 0'(= r ) 1'(= {| l |} ) }
; .mov_ptn 3'(= {| l |} ) ⊢ 1'(= {| l |} )
	mov rax,r9
	mov r14,rax
	ret
LB_633:
;; ? 3'(= a32◂ [ ] ) ⊢ 1(<2)◂3'(= a9◂ [ ] )
;; rsp=0 , %843~3'(= a9◂ [ ] ) %832~2'(= {| l |} ) %830~0'(= r ) 
; rsp_d=0, #82 3'(= a9◂ [ ] ) ⊢ 1'(= {| l |} )
	lea rsp,[rsp-8*2]
	mov QWORD [rsp+8*0],r13
	mov QWORD [rsp+8*1],r8
; .mov_ptn2 3'(= a9◂ [ ] ) ⊢ 0'(= a9◂ [ ] )
; .mov_ptn 3'(= a9◂ [ ] ) ⊢ 0'(= a9◂ [ ] )
	mov rax,r9
	mov r13,rax
	call ETR_82

	mov r8,QWORD [rsp-8+8*2]
	mov rax,QWORD [rsp-8+8*1]
	mov r14,r13
	mov r13,rax
	lea rsp,[rsp+8*2]
;; rsp=0 , %844~1'(= {| l |} ) %832~2'(= {| l |} ) %830~0'(= r ) 
; » _^ .. ⊢ ..
; .. //
	mov rdi,0
	mov rsi,r14
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[rsi] 
	add rdi,rax 
	push rax
	push rsi
	mov rsi,r8
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[rsi] 
	add rdi,rax 
	push rax
	push rsi
	mov rsi,r13
	push rsi
	imul rsi,1
	add rdi,rsi 
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	add rdi,9
	push rdi 
	and rdi,~111b
	add rdi,16
	mov rsi,rdi 
	mov rdi,1
	xor rax,rax 
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call calloc
	mov rsp,QWORD [rsp_tmp]  
	pop rdi 
	mov QWORD [rax],rdi
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	mov r9,rax
	lea rdi,[rax+7+rdi]
	std 
	mov QWORD [tmp],rcx 
	jmp LB_648
	LB_649: db 9,0
LB_648:
	pop rax 
LB_650:
	lea rsi,[LB_649+1-1]
	mov rcx,1
	rep movsb 
	sub rax,1
	cmp rax,0
	jnz LB_650
	jmp LB_651
	LB_652: db 194,167,194,167,32,0
LB_651:
	lea rsi,[LB_652+5-1]
	mov rcx,5
	rep movsb
	pop rsi 
	pop rcx
	lea rsi,[rsi+7+rcx]
	rep movsb
	jmp LB_653
	LB_654: db 32,61,32,0
LB_653:
	lea rsi,[LB_654+3-1]
	mov rcx,3
	rep movsb
	pop rsi 
	pop rcx
	lea rsi,[rsi+7+rcx]
	rep movsb
	jmp LB_655
	LB_656: db 10,0
LB_655:
	lea rsi,[LB_656+1-1]
	mov rcx,1
	rep movsb
	mov rcx,QWORD [tmp] 
;; rsp=0 , %848~3'(= {| l |} ) %847~1'(= {| l |} ) %846~2'(= {| l |} ) %845~0'(= r ) 
; ∎ { 0'(= r ) 3'(= {| l |} ) }
; .dlt.ptn 1'(= {| l |} )
	mov rdi,r14
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call free 
	mov rsp,QWORD [rsp_tmp] 
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
; .dlt.ptn 2'(= {| l |} )
	mov rdi,r8
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call free 
	mov rsp,QWORD [rsp_tmp] 
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
; .mov_ptn2 { 0'(= r ) 3'(= {| l |} ) } ⊢ { 0'(= r ) 1'(= {| l |} ) }
; .mov_ptn 3'(= {| l |} ) ⊢ 1'(= {| l |} )
	mov rax,r9
	mov r14,rax
	ret
LB_632:
;; ? 1'(= a31◂ [ ] ) ⊢ 1(<6)◂2'(= a2◂ [ *{ {| l |}a24◂ [ a9◂ [ ]{| l |}]}] )
	mov rdi,r14
	movzx rax,BYTE [rdi+6]
	cmp rax,1
	jnz LB_657
	mov rax,QWORD [rdi+8]
	mov r8,rax
;; rsp=0 , %849~2'(= a2◂ [ *{ {| l |}a24◂ [ a9◂ [ ]{| l |}]}] ) %830~0'(= r ) 
; _inc 0'(= r ) ⊢ 0'(= r )
	add r13,1
;; rsp=0 , %850~0'(= r ) %849~2'(= a2◂ [ *{ {| l |}a24◂ [ a9◂ [ ]{| l |}]}] ) 
; rsp_d=0, #157 { 0'(= r ) 2'(= a2◂ [ *{ {| l |}a24◂ [ a9◂ [ ]{| l |}]}] ) } ⊢ { 0'(= r ) 1'(= {| l |} ) }
; .mov_ptn2 { 0'(= r ) 2'(= a2◂ [ *{ {| l |}a24◂ [ a9◂ [ ]{| l |}]}] ) } ⊢ { 0'(= r ) 1'(= a2◂ [ *{ {| l |}a24◂ [ a9◂ [ ]{| l |}]}] ) }
; .mov_ptn 2'(= a2◂ [ *{ {| l |}a24◂ [ a9◂ [ ]{| l |}]}] ) ⊢ 1'(= a2◂ [ *{ {| l |}a24◂ [ a9◂ [ ]{| l |}]}] )
	mov rax,r8
	mov r14,rax
	call ETR_157

;; rsp=0 , %852~1'(= {| l |} ) %851~0'(= r ) 
; _dec 0'(= r ) ⊢ 0'(= r )
	sub r13,1
;; rsp=0 , %853~0'(= r ) %852~1'(= {| l |} ) 
; » _^ .. ⊢ ..
; .. //
	mov rdi,0
	mov rsi,r14
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[rsi] 
	add rdi,rax 
	push rax
	push rsi
	mov rsi,r13
	push rsi
	imul rsi,1
	add rdi,rsi 
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	add rdi,8
	push rdi 
	and rdi,~111b
	add rdi,16
	mov rsi,rdi 
	mov rdi,1
	xor rax,rax 
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call calloc
	mov rsp,QWORD [rsp_tmp]  
	pop rdi 
	mov QWORD [rax],rdi
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	mov r8,rax
	lea rdi,[rax+7+rdi]
	std 
	mov QWORD [tmp],rcx 
	jmp LB_658
	LB_659: db 9,0
LB_658:
	pop rax 
LB_660:
	lea rsi,[LB_659+1-1]
	mov rcx,1
	rep movsb 
	sub rax,1
	cmp rax,0
	jnz LB_660
	jmp LB_661
	LB_662: db 194,167,194,167,43,115,56,10,0
LB_661:
	lea rsi,[LB_662+8-1]
	mov rcx,8
	rep movsb
	pop rsi 
	pop rcx
	lea rsi,[rsi+7+rcx]
	rep movsb
	mov rcx,QWORD [tmp] 
;; rsp=0 , %856~2'(= {| l |} ) %855~1'(= {| l |} ) %854~0'(= r ) 
; ∎ { 0'(= r ) 2'(= {| l |} ) }
; .dlt.ptn 1'(= {| l |} )
	mov rdi,r14
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call free 
	mov rsp,QWORD [rsp_tmp] 
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
; .mov_ptn2 { 0'(= r ) 2'(= {| l |} ) } ⊢ { 0'(= r ) 1'(= {| l |} ) }
; .mov_ptn 2'(= {| l |} ) ⊢ 1'(= {| l |} )
	mov rax,r8
	mov r14,rax
	ret
LB_657:
;; ? 1'(= a31◂ [ ] ) ⊢ 2(<6)◂{ 2'(= {| l |} ) 3'(= a33◂ [ ] ) }
	mov rdi,r14
	movzx rax,BYTE [rdi+6]
	cmp rax,2
	jnz LB_663
	mov rdi,r14
	mov rdi,QWORD [rdi+8+8*0]
	mov r8,rdi
	mov rdi,r14
	mov rdi,QWORD [rdi+8+8*1]
	mov r9,rdi
;; rsp=0 , %858~3'(= a33◂ [ ] ) %857~2'(= {| l |} ) %830~0'(= r ) 
; _inc 0'(= r ) ⊢ 0'(= r )
	add r13,1
;; rsp=0 , %859~0'(= r ) %858~3'(= a33◂ [ ] ) %857~2'(= {| l |} ) 
; rsp_d=0, #184 { 0'(= r ) 3'(= a33◂ [ ] ) } ⊢ { 0'(= r ) 1'(= {| l |} ) }
	lea rsp,[rsp-8*1]
	mov QWORD [rsp+8*0],r8
; .mov_ptn2 { 0'(= r ) 3'(= a33◂ [ ] ) } ⊢ { 0'(= r ) 1'(= a33◂ [ ] ) }
; .mov_ptn 3'(= a33◂ [ ] ) ⊢ 1'(= a33◂ [ ] )
	mov rax,r9
	mov r14,rax
	call ETR_184

	mov r8,QWORD [rsp-8+8*1]
	lea rsp,[rsp+8*1]
;; rsp=0 , %861~1'(= {| l |} ) %860~0'(= r ) %857~2'(= {| l |} ) 
; _dec 0'(= r ) ⊢ 0'(= r )
	sub r13,1
;; rsp=0 , %862~0'(= r ) %861~1'(= {| l |} ) %857~2'(= {| l |} ) 
; » _^ .. ⊢ ..
; .. //
	mov rdi,0
	mov rsi,r14
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[rsi] 
	add rdi,rax 
	push rax
	push rsi
	mov rsi,r8
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[rsi] 
	add rdi,rax 
	push rax
	push rsi
	mov rsi,r13
	push rsi
	imul rsi,1
	add rdi,rsi 
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	add rdi,3
	push rdi 
	and rdi,~111b
	add rdi,16
	mov rsi,rdi 
	mov rdi,1
	xor rax,rax 
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call calloc
	mov rsp,QWORD [rsp_tmp]  
	pop rdi 
	mov QWORD [rax],rdi
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	mov r9,rax
	lea rdi,[rax+7+rdi]
	std 
	mov QWORD [tmp],rcx 
	jmp LB_664
	LB_665: db 9,0
LB_664:
	pop rax 
LB_666:
	lea rsi,[LB_665+1-1]
	mov rcx,1
	rep movsb 
	sub rax,1
	cmp rax,0
	jnz LB_666
	jmp LB_667
	LB_668: db 194,167,32,0
LB_667:
	lea rsi,[LB_668+3-1]
	mov rcx,3
	rep movsb
	pop rsi 
	pop rcx
	lea rsi,[rsi+7+rcx]
	rep movsb
	pop rsi 
	pop rcx
	lea rsi,[rsi+7+rcx]
	rep movsb
	mov rcx,QWORD [tmp] 
;; rsp=0 , %866~3'(= {| l |} ) %865~1'(= {| l |} ) %864~2'(= {| l |} ) %863~0'(= r ) 
; ∎ { 0'(= r ) 3'(= {| l |} ) }
; .dlt.ptn 1'(= {| l |} )
	mov rdi,r14
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call free 
	mov rsp,QWORD [rsp_tmp] 
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
; .dlt.ptn 2'(= {| l |} )
	mov rdi,r8
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call free 
	mov rsp,QWORD [rsp_tmp] 
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
; .mov_ptn2 { 0'(= r ) 3'(= {| l |} ) } ⊢ { 0'(= r ) 1'(= {| l |} ) }
; .mov_ptn 3'(= {| l |} ) ⊢ 1'(= {| l |} )
	mov rax,r9
	mov r14,rax
	ret
LB_663:
;; ? 1'(= a31◂ [ ] ) ⊢ 3(<6)◂2'(= a2◂ [ *{ {| l |}a8◂ [ a13◂ [ {| l |}]]a3◂ [ a23◂ [ ]]a17◂ [ a9◂ [ ]{| l |}]}] )
	mov rdi,r14
	movzx rax,BYTE [rdi+6]
	cmp rax,3
	jnz LB_669
	mov rax,QWORD [rdi+8]
	mov r8,rax
;; rsp=0 , %867~2'(= a2◂ [ *{ {| l |}a8◂ [ a13◂ [ {| l |}]]a3◂ [ a23◂ [ ]]a17◂ [ a9◂ [ ]{| l |}]}] ) %830~0'(= r ) 
; _inc 0'(= r ) ⊢ 0'(= r )
	add r13,1
;; rsp=0 , %868~0'(= r ) %867~2'(= a2◂ [ *{ {| l |}a8◂ [ a13◂ [ {| l |}]]a3◂ [ a23◂ [ ]]a17◂ [ a9◂ [ ]{| l |}]}] ) 
; rsp_d=0, #185 { 0'(= r ) 2'(= a2◂ [ *{ {| l |}a8◂ [ a13◂ [ {| l |}]]a3◂ [ a23◂ [ ]]a17◂ [ a9◂ [ ]{| l |}]}] ) } ⊢ { 0'(= r ) 1'(= {| l |} ) }
; .mov_ptn2 { 0'(= r ) 2'(= a2◂ [ *{ {| l |}a8◂ [ a13◂ [ {| l |}]]a3◂ [ a23◂ [ ]]a17◂ [ a9◂ [ ]{| l |}]}] ) } ⊢ { 0'(= r ) 1'(= a2◂ [ *{ {| l |}a8◂ [ a13◂ [ {| l |}]]a3◂ [ a23◂ [ ]]a17◂ [ a9◂ [ ]{| l |}]}] ) }
; .mov_ptn 2'(= a2◂ [ *{ {| l |}a8◂ [ a13◂ [ {| l |}]]a3◂ [ a23◂ [ ]]a17◂ [ a9◂ [ ]{| l |}]}] ) ⊢ 1'(= a2◂ [ *{ {| l |}a8◂ [ a13◂ [ {| l |}]]a3◂ [ a23◂ [ ]]a17◂ [ a9◂ [ ]{| l |}]}] )
	mov rax,r8
	mov r14,rax
	call ETR_185

;; rsp=0 , %870~1'(= {| l |} ) %869~0'(= r ) 
; _dec 0'(= r ) ⊢ 0'(= r )
	sub r13,1
;; rsp=0 , %871~0'(= r ) %870~1'(= {| l |} ) 
; » _^ .. ⊢ ..
; .. //
	mov rdi,0
	mov rsi,r14
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[rsi] 
	add rdi,rax 
	push rax
	push rsi
	mov rsi,r13
	push rsi
	imul rsi,1
	add rdi,rsi 
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	add rdi,4
	push rdi 
	and rdi,~111b
	add rdi,16
	mov rsi,rdi 
	mov rdi,1
	xor rax,rax 
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call calloc
	mov rsp,QWORD [rsp_tmp]  
	pop rdi 
	mov QWORD [rax],rdi
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	mov r8,rax
	lea rdi,[rax+7+rdi]
	std 
	mov QWORD [tmp],rcx 
	jmp LB_670
	LB_671: db 9,0
LB_670:
	pop rax 
LB_672:
	lea rsi,[LB_671+1-1]
	mov rcx,1
	rep movsb 
	sub rax,1
	cmp rax,0
	jnz LB_672
	jmp LB_673
	LB_674: db 194,167,32,10,0
LB_673:
	lea rsi,[LB_674+4-1]
	mov rcx,4
	rep movsb
	pop rsi 
	pop rcx
	lea rsi,[rsi+7+rcx]
	rep movsb
	mov rcx,QWORD [tmp] 
;; rsp=0 , %874~2'(= {| l |} ) %873~1'(= {| l |} ) %872~0'(= r ) 
; ∎ { 0'(= r ) 2'(= {| l |} ) }
; .dlt.ptn 1'(= {| l |} )
	mov rdi,r14
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call free 
	mov rsp,QWORD [rsp_tmp] 
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
; .mov_ptn2 { 0'(= r ) 2'(= {| l |} ) } ⊢ { 0'(= r ) 1'(= {| l |} ) }
; .mov_ptn 2'(= {| l |} ) ⊢ 1'(= {| l |} )
	mov rax,r8
	mov r14,rax
	ret
LB_669:
;; ? 1'(= a31◂ [ ] ) ⊢ 4(<6)◂{ 2'(= {| l |} ) 3'(= a34◂ [ ] ) }
	mov rdi,r14
	movzx rax,BYTE [rdi+6]
	cmp rax,4
	jnz LB_675
	mov rdi,r14
	mov rdi,QWORD [rdi+8+8*0]
	mov r8,rdi
	mov rdi,r14
	mov rdi,QWORD [rdi+8+8*1]
	mov r9,rdi
;; rsp=0 , %876~3'(= a34◂ [ ] ) %875~2'(= {| l |} ) %830~0'(= r ) 
;; ? 3'(= a34◂ [ ] ) ⊢ 0(<2)◂{ 1'(= a2◂ [ {| l |}] ) 4'(= a2◂ [ *{ {| l |}a23◂ [ ]}] ) }
	mov rdi,r9
	movzx rax,BYTE [rdi+6]
	cmp rax,0
	jnz LB_676
	mov rdi,r9
	mov rdi,QWORD [rdi+8+8*0]
	mov r14,rdi
	mov rdi,r9
	mov rdi,QWORD [rdi+8+8*1]
	mov r10,rdi
;; rsp=0 , %878~4'(= a2◂ [ *{ {| l |}a23◂ [ ]}] ) %877~1'(= a2◂ [ {| l |}] ) %875~2'(= {| l |} ) %830~0'(= r ) 
; _inc 0'(= r ) ⊢ 0'(= r )
	add r13,1
;; rsp=0 , %879~0'(= r ) %878~4'(= a2◂ [ *{ {| l |}a23◂ [ ]}] ) %877~1'(= a2◂ [ {| l |}] ) %875~2'(= {| l |} ) 
; rsp_d=0, #181 { 0'(= r ) 4'(= a2◂ [ *{ {| l |}a23◂ [ ]}] ) } ⊢ { 0'(= r ) 3'(= {| l |} ) }
	lea rsp,[rsp-8*2]
	mov QWORD [rsp+8*0],r14
	mov QWORD [rsp+8*1],r8
; .mov_ptn2 { 0'(= r ) 4'(= a2◂ [ *{ {| l |}a23◂ [ ]}] ) } ⊢ { 0'(= r ) 1'(= a2◂ [ *{ {| l |}a23◂ [ ]}] ) }
; .mov_ptn 4'(= a2◂ [ *{ {| l |}a23◂ [ ]}] ) ⊢ 1'(= a2◂ [ *{ {| l |}a23◂ [ ]}] )
	mov rax,r10
	mov r14,rax
	call ETR_181

	mov r8,QWORD [rsp-8+8*2]
	mov rax,QWORD [rsp-8+8*1]
	mov r9,r14
	mov r14,rax
	lea rsp,[rsp+8*2]
;; rsp=0 , %881~3'(= {| l |} ) %880~0'(= r ) %877~1'(= a2◂ [ {| l |}] ) %875~2'(= {| l |} ) 
; _dec 0'(= r ) ⊢ 0'(= r )
	sub r13,1
;; rsp=0 , %882~0'(= r ) %881~3'(= {| l |} ) %877~1'(= a2◂ [ {| l |}] ) %875~2'(= {| l |} ) 
; » _^ .. ⊢ ..
; .. //
	mov rdi,0
	mov rsi,r9
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[rsi] 
	add rdi,rax 
	push rax
	push rsi
	mov rsi,r8
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[rsi] 
	add rdi,rax 
	push rax
	push rsi
	mov rsi,r13
	push rsi
	imul rsi,1
	add rdi,rsi 
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	add rdi,4
	push rdi 
	and rdi,~111b
	add rdi,16
	mov rsi,rdi 
	mov rdi,1
	xor rax,rax 
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call calloc
	mov rsp,QWORD [rsp_tmp]  
	pop rdi 
	mov QWORD [rax],rdi
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	mov r10,rax
	lea rdi,[rax+7+rdi]
	std 
	mov QWORD [tmp],rcx 
	jmp LB_677
	LB_678: db 9,0
LB_677:
	pop rax 
LB_679:
	lea rsi,[LB_678+1-1]
	mov rcx,1
	rep movsb 
	sub rax,1
	cmp rax,0
	jnz LB_679
	jmp LB_680
	LB_681: db 194,182,32,0
LB_680:
	lea rsi,[LB_681+3-1]
	mov rcx,3
	rep movsb
	pop rsi 
	pop rcx
	lea rsi,[rsi+7+rcx]
	rep movsb
	jmp LB_682
	LB_683: db 10,0
LB_682:
	lea rsi,[LB_683+1-1]
	mov rcx,1
	rep movsb
	pop rsi 
	pop rcx
	lea rsi,[rsi+7+rcx]
	rep movsb
	mov rcx,QWORD [tmp] 
;; rsp=0 , %886~4'(= {| l |} ) %885~3'(= {| l |} ) %884~2'(= {| l |} ) %883~0'(= r ) %877~1'(= a2◂ [ {| l |}] ) 
; ∎ { 0'(= r ) 4'(= {| l |} ) }
; .dlt.ptn 3'(= {| l |} )
	mov rdi,r9
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call free 
	mov rsp,QWORD [rsp_tmp] 
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
; .dlt.ptn 2'(= {| l |} )
	mov rdi,r8
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call free 
	mov rsp,QWORD [rsp_tmp] 
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
; .dlt.ptn 1'(= a2◂ [ {| l |}] )
;	.dlt adt ⊢ _  
; .mov_ptn2 { 0'(= r ) 4'(= {| l |} ) } ⊢ { 0'(= r ) 1'(= {| l |} ) }
; .mov_ptn 4'(= {| l |} ) ⊢ 1'(= {| l |} )
	mov rax,r10
	mov r14,rax
	ret
LB_676:
;; ? 3'(= a34◂ [ ] ) ⊢ 1(<2)◂{ 1'(= a2◂ [ {| l |}] ) 4'(= a23◂ [ ] ) }
	mov rdi,r9
	mov rdi,QWORD [rdi+8+8*0]
	mov r14,rdi
	mov rdi,r9
	mov rdi,QWORD [rdi+8+8*1]
	mov r10,rdi
;; rsp=0 , %888~4'(= a23◂ [ ] ) %887~1'(= a2◂ [ {| l |}] ) %875~2'(= {| l |} ) %830~0'(= r ) 
; » _^ .. ⊢ ..
; .. //
	mov rdi,0
	mov rsi,r8
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[rsi] 
	add rdi,rax 
	push rax
	push rsi
	mov rsi,r13
	push rsi
	imul rsi,1
	add rdi,rsi 
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	add rdi,10
	push rdi 
	and rdi,~111b
	add rdi,16
	mov rsi,rdi 
	mov rdi,1
	xor rax,rax 
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call calloc
	mov rsp,QWORD [rsp_tmp]  
	pop rdi 
	mov QWORD [rax],rdi
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	mov r9,rax
	lea rdi,[rax+7+rdi]
	std 
	mov QWORD [tmp],rcx 
	jmp LB_684
	LB_685: db 9,0
LB_684:
	pop rax 
LB_686:
	lea rsi,[LB_685+1-1]
	mov rcx,1
	rep movsb 
	sub rax,1
	cmp rax,0
	jnz LB_686
	jmp LB_687
	LB_688: db 194,182,32,0
LB_687:
	lea rsi,[LB_688+3-1]
	mov rcx,3
	rep movsb
	pop rsi 
	pop rcx
	lea rsi,[rsi+7+rcx]
	rep movsb
	jmp LB_689
	LB_690: db 32,61,32,46,46,32,10,0
LB_689:
	lea rsi,[LB_690+7-1]
	mov rcx,7
	rep movsb
	mov rcx,QWORD [tmp] 
;; rsp=0 , %891~3'(= {| l |} ) %890~2'(= {| l |} ) %889~0'(= r ) %888~4'(= a23◂ [ ] ) %887~1'(= a2◂ [ {| l |}] ) 
; ∎ { 0'(= r ) 3'(= {| l |} ) }
; .dlt.ptn 2'(= {| l |} )
	mov rdi,r8
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call free 
	mov rsp,QWORD [rsp_tmp] 
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
; .dlt.ptn 4'(= a23◂ [ ] )
;	.dlt adt ⊢ _  
; .dlt.ptn 1'(= a2◂ [ {| l |}] )
;	.dlt adt ⊢ _  
; .mov_ptn2 { 0'(= r ) 3'(= {| l |} ) } ⊢ { 0'(= r ) 1'(= {| l |} ) }
; .mov_ptn 3'(= {| l |} ) ⊢ 1'(= {| l |} )
	mov rax,r9
	mov r14,rax
	ret
LB_675:
;; ? 1'(= a31◂ [ ] ) ⊢ 5(<6)◂1'(= a2◂ [ *{ {| l |}a34◂ [ ]}] )
;; rsp=0 , %892~1'(= a2◂ [ *{ {| l |}a34◂ [ ]}] ) %830~0'(= r ) 
; _inc 0'(= r ) ⊢ 0'(= r )
	add r13,1
;; rsp=0 , %893~0'(= r ) %892~1'(= a2◂ [ *{ {| l |}a34◂ [ ]}] ) 
; rsp_d=0, #179 { 0'(= r ) 1'(= a2◂ [ *{ {| l |}a34◂ [ ]}] ) } ⊢ { 0'(= r ) 1'(= {| l |} ) }
; .mov_ptn2 { 0'(= r ) 1'(= a2◂ [ *{ {| l |}a34◂ [ ]}] ) } ⊢ { 0'(= r ) 1'(= a2◂ [ *{ {| l |}a34◂ [ ]}] ) }
	call ETR_179

;; rsp=0 , %895~1'(= {| l |} ) %894~0'(= r ) 
; _dec 0'(= r ) ⊢ 0'(= r )
	sub r13,1
;; rsp=0 , %896~0'(= r ) %895~1'(= {| l |} ) 
; » _^ .. ⊢ ..
; .. //
	mov rdi,0
	mov rsi,r14
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[rsi] 
	add rdi,rax 
	push rax
	push rsi
	mov rsi,r13
	push rsi
	imul rsi,1
	add rdi,rsi 
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	add rdi,3
	push rdi 
	and rdi,~111b
	add rdi,16
	mov rsi,rdi 
	mov rdi,1
	xor rax,rax 
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call calloc
	mov rsp,QWORD [rsp_tmp]  
	pop rdi 
	mov QWORD [rax],rdi
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	mov r8,rax
	lea rdi,[rax+7+rdi]
	std 
	mov QWORD [tmp],rcx 
	jmp LB_691
	LB_692: db 9,0
LB_691:
	pop rax 
LB_693:
	lea rsi,[LB_692+1-1]
	mov rcx,1
	rep movsb 
	sub rax,1
	cmp rax,0
	jnz LB_693
	jmp LB_694
	LB_695: db 194,182,10,0
LB_694:
	lea rsi,[LB_695+3-1]
	mov rcx,3
	rep movsb
	pop rsi 
	pop rcx
	lea rsi,[rsi+7+rcx]
	rep movsb
	mov rcx,QWORD [tmp] 
;; rsp=0 , %899~2'(= {| l |} ) %898~1'(= {| l |} ) %897~0'(= r ) 
; ∎ { 0'(= r ) 2'(= {| l |} ) }
; .dlt.ptn 1'(= {| l |} )
	mov rdi,r14
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call free 
	mov rsp,QWORD [rsp_tmp] 
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
; .mov_ptn2 { 0'(= r ) 2'(= {| l |} ) } ⊢ { 0'(= r ) 1'(= {| l |} ) }
; .mov_ptn 2'(= {| l |} ) ⊢ 1'(= {| l |} )
	mov rax,r8
	mov r14,rax
	ret
ETR_179: ; pnt_dt_qlq_etr { 0'(= r ) 1'(= a2◂ [ *{ {| l |}a34◂ [ ]}] ) } ⊢ { 0'(= r ) 1'(= {| l |} ) } : ({ _r64 _lst◂{ _s8 _t34 } }→{ _r64 _s8 })
;; rsp=0 , %901~1'(= a2◂ [ *{ {| l |}a34◂ [ ]}] ) %900~0'(= r ) 
;; ? 1'(= a2◂ [ *{ {| l |}a34◂ [ ]}] ) ⊢ 0(<2)◂{ { 3'(= {| l |} ) 4'(= a34◂ [ ] ) } 5'(= a2◂ [ *{ {| l |}a34◂ [ ]}] ) }
	mov rdi,r14
	movzx rax,BYTE [rdi+6]
	cmp rax,0
	jnz LB_696
	mov rdi,r14
	mov rdi,QWORD [rdi+8+8*0]
	mov r8,rdi
	mov rdi,r8
	mov rdi,QWORD [rdi+8+8*0]
	mov r9,rdi
	mov rdi,r8
	mov rdi,QWORD [rdi+8+8*1]
	mov r10,rdi
	mov rdi,r14
	mov rdi,QWORD [rdi+8+8*1]
	mov r11,rdi
;; rsp=0 , %904~5'(= a2◂ [ *{ {| l |}a34◂ [ ]}] ) %903~4'(= a34◂ [ ] ) %902~3'(= {| l |} ) %900~0'(= r ) 
; rsp_d=0, #179 { 0'(= r ) 5'(= a2◂ [ *{ {| l |}a34◂ [ ]}] ) } ⊢ { 0'(= r ) 1'(= {| l |} ) }
	lea rsp,[rsp-8*2]
	mov QWORD [rsp+8*0],r9
	mov QWORD [rsp+8*1],r10
; .mov_ptn2 { 0'(= r ) 5'(= a2◂ [ *{ {| l |}a34◂ [ ]}] ) } ⊢ { 0'(= r ) 1'(= a2◂ [ *{ {| l |}a34◂ [ ]}] ) }
; .mov_ptn 5'(= a2◂ [ *{ {| l |}a34◂ [ ]}] ) ⊢ 1'(= a2◂ [ *{ {| l |}a34◂ [ ]}] )
	mov rax,r11
	mov r14,rax
	call ETR_179

	mov r10,QWORD [rsp-8+8*2]
	mov r9,QWORD [rsp-8+8*1]
	lea rsp,[rsp+8*2]
;; rsp=0 , %906~1'(= {| l |} ) %905~0'(= r ) %903~4'(= a34◂ [ ] ) %902~3'(= {| l |} ) 
;; ? 4'(= a34◂ [ ] ) ⊢ 0(<2)◂{ 2'(= a2◂ [ {| l |}] ) 5'(= a2◂ [ *{ {| l |}a23◂ [ ]}] ) }
	mov rdi,r10
	movzx rax,BYTE [rdi+6]
	cmp rax,0
	jnz LB_697
	mov rdi,r10
	mov rdi,QWORD [rdi+8+8*0]
	mov r8,rdi
	mov rdi,r10
	mov rdi,QWORD [rdi+8+8*1]
	mov r11,rdi
;; rsp=0 , %908~5'(= a2◂ [ *{ {| l |}a23◂ [ ]}] ) %907~2'(= a2◂ [ {| l |}] ) %906~1'(= {| l |} ) %905~0'(= r ) %902~3'(= {| l |} ) 
; _inc 0'(= r ) ⊢ 0'(= r )
	add r13,1
;; rsp=0 , %909~0'(= r ) %908~5'(= a2◂ [ *{ {| l |}a23◂ [ ]}] ) %907~2'(= a2◂ [ {| l |}] ) %906~1'(= {| l |} ) %902~3'(= {| l |} ) 
; rsp_d=0, #181 { 0'(= r ) 5'(= a2◂ [ *{ {| l |}a23◂ [ ]}] ) } ⊢ { 0'(= r ) 4'(= {| l |} ) }
	lea rsp,[rsp-8*3]
	mov QWORD [rsp+8*0],r14
	mov QWORD [rsp+8*1],r8
	mov QWORD [rsp+8*2],r9
; .mov_ptn2 { 0'(= r ) 5'(= a2◂ [ *{ {| l |}a23◂ [ ]}] ) } ⊢ { 0'(= r ) 1'(= a2◂ [ *{ {| l |}a23◂ [ ]}] ) }
; .mov_ptn 5'(= a2◂ [ *{ {| l |}a23◂ [ ]}] ) ⊢ 1'(= a2◂ [ *{ {| l |}a23◂ [ ]}] )
	mov rax,r11
	mov r14,rax
	call ETR_181

	mov r9,QWORD [rsp-8+8*3]
	mov r8,QWORD [rsp-8+8*2]
	mov rax,QWORD [rsp-8+8*1]
	mov r10,r14
	mov r14,rax
	lea rsp,[rsp+8*3]
;; rsp=0 , %911~4'(= {| l |} ) %910~0'(= r ) %907~2'(= a2◂ [ {| l |}] ) %906~1'(= {| l |} ) %902~3'(= {| l |} ) 
; _dec 0'(= r ) ⊢ 0'(= r )
	sub r13,1
;; rsp=0 , %912~0'(= r ) %911~4'(= {| l |} ) %907~2'(= a2◂ [ {| l |}] ) %906~1'(= {| l |} ) %902~3'(= {| l |} ) 
; » _^ .. ⊢ ..
; .. //
	mov rdi,0
	mov rsi,r14
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[rsi] 
	add rdi,rax 
	push rax
	push rsi
	mov rsi,r10
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[rsi] 
	add rdi,rax 
	push rax
	push rsi
	mov rsi,r9
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[rsi] 
	add rdi,rax 
	push rax
	push rsi
	mov rsi,r13
	push rsi
	imul rsi,1
	add rdi,rsi 
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	add rdi,3
	push rdi 
	and rdi,~111b
	add rdi,16
	mov rsi,rdi 
	mov rdi,1
	xor rax,rax 
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call calloc
	mov rsp,QWORD [rsp_tmp]  
	pop rdi 
	mov QWORD [rax],rdi
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	mov r11,rax
	lea rdi,[rax+7+rdi]
	std 
	mov QWORD [tmp],rcx 
	jmp LB_698
	LB_699: db 9,0
LB_698:
	pop rax 
LB_700:
	lea rsi,[LB_699+1-1]
	mov rcx,1
	rep movsb 
	sub rax,1
	cmp rax,0
	jnz LB_700
	jmp LB_701
	LB_702: db 64,46,0
LB_701:
	lea rsi,[LB_702+2-1]
	mov rcx,2
	rep movsb
	pop rsi 
	pop rcx
	lea rsi,[rsi+7+rcx]
	rep movsb
	jmp LB_703
	LB_704: db 10,0
LB_703:
	lea rsi,[LB_704+1-1]
	mov rcx,1
	rep movsb
	pop rsi 
	pop rcx
	lea rsi,[rsi+7+rcx]
	rep movsb
	pop rsi 
	pop rcx
	lea rsi,[rsi+7+rcx]
	rep movsb
	mov rcx,QWORD [tmp] 
;; rsp=0 , %917~5'(= {| l |} ) %916~1'(= {| l |} ) %915~4'(= {| l |} ) %914~3'(= {| l |} ) %913~0'(= r ) %907~2'(= a2◂ [ {| l |}] ) 
; ∎ { 0'(= r ) 5'(= {| l |} ) }
; .dlt.ptn 1'(= {| l |} )
	mov rdi,r14
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call free 
	mov rsp,QWORD [rsp_tmp] 
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
; .dlt.ptn 4'(= {| l |} )
	mov rdi,r10
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call free 
	mov rsp,QWORD [rsp_tmp] 
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
; .dlt.ptn 3'(= {| l |} )
	mov rdi,r9
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call free 
	mov rsp,QWORD [rsp_tmp] 
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
; .dlt.ptn 2'(= a2◂ [ {| l |}] )
;	.dlt adt ⊢ _  
; .mov_ptn2 { 0'(= r ) 5'(= {| l |} ) } ⊢ { 0'(= r ) 1'(= {| l |} ) }
; .mov_ptn 5'(= {| l |} ) ⊢ 1'(= {| l |} )
	mov rax,r11
	mov r14,rax
	ret
LB_697:
;; ? 4'(= a34◂ [ ] ) ⊢ 1(<2)◂{ 2'(= a2◂ [ {| l |}] ) 5'(= a23◂ [ ] ) }
	mov rdi,r10
	mov rdi,QWORD [rdi+8+8*0]
	mov r8,rdi
	mov rdi,r10
	mov rdi,QWORD [rdi+8+8*1]
	mov r11,rdi
;; rsp=0 , %919~5'(= a23◂ [ ] ) %918~2'(= a2◂ [ {| l |}] ) %906~1'(= {| l |} ) %905~0'(= r ) %902~3'(= {| l |} ) 
; » _^ .. ⊢ ..
; .. //
	mov rdi,0
	mov rsi,r14
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[rsi] 
	add rdi,rax 
	push rax
	push rsi
	mov rsi,r9
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[rsi] 
	add rdi,rax 
	push rax
	push rsi
	mov rsi,r13
	push rsi
	imul rsi,1
	add rdi,rsi 
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	add rdi,9
	push rdi 
	and rdi,~111b
	add rdi,16
	mov rsi,rdi 
	mov rdi,1
	xor rax,rax 
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call calloc
	mov rsp,QWORD [rsp_tmp]  
	pop rdi 
	mov QWORD [rax],rdi
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	mov r10,rax
	lea rdi,[rax+7+rdi]
	std 
	mov QWORD [tmp],rcx 
	jmp LB_705
	LB_706: db 9,0
LB_705:
	pop rax 
LB_707:
	lea rsi,[LB_706+1-1]
	mov rcx,1
	rep movsb 
	sub rax,1
	cmp rax,0
	jnz LB_707
	jmp LB_708
	LB_709: db 64,46,0
LB_708:
	lea rsi,[LB_709+2-1]
	mov rcx,2
	rep movsb
	pop rsi 
	pop rcx
	lea rsi,[rsi+7+rcx]
	rep movsb
	jmp LB_710
	LB_711: db 32,61,32,46,46,32,10,0
LB_710:
	lea rsi,[LB_711+7-1]
	mov rcx,7
	rep movsb
	pop rsi 
	pop rcx
	lea rsi,[rsi+7+rcx]
	rep movsb
	mov rcx,QWORD [tmp] 
;; rsp=0 , %923~4'(= {| l |} ) %922~1'(= {| l |} ) %921~3'(= {| l |} ) %920~0'(= r ) %919~5'(= a23◂ [ ] ) %918~2'(= a2◂ [ {| l |}] ) 
; ∎ { 0'(= r ) 4'(= {| l |} ) }
; .dlt.ptn 1'(= {| l |} )
	mov rdi,r14
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call free 
	mov rsp,QWORD [rsp_tmp] 
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
; .dlt.ptn 3'(= {| l |} )
	mov rdi,r9
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call free 
	mov rsp,QWORD [rsp_tmp] 
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
; .dlt.ptn 5'(= a23◂ [ ] )
;	.dlt adt ⊢ _  
; .dlt.ptn 2'(= a2◂ [ {| l |}] )
;	.dlt adt ⊢ _  
; .mov_ptn2 { 0'(= r ) 4'(= {| l |} ) } ⊢ { 0'(= r ) 1'(= {| l |} ) }
; .mov_ptn 4'(= {| l |} ) ⊢ 1'(= {| l |} )
	mov rax,r10
	mov r14,rax
	ret
LB_696:
;; ? 1'(= a2◂ [ *{ {| l |}a34◂ [ ]}] ) ⊢ 1(<2)◂{ }
;; rsp=0 , %900~0'(= r ) 
	jmp LB_712
LB_712:
; $ %[ "" ] ⊢ %[ "" ]
;; rsp=0 , %924~%[ "" ] %900~0'(= r ) 
; ∎ { 0'(= r ) %[ "" ] }
; .mov_ptn2 { 0'(= r ) %[ "" ] } ⊢ { 0'(= r ) 1'(= {| l |} ) }
; .mov_ptn %[ "" ] ⊢ 1'(= {| l |} )
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	mov rdi,1  
	mov rsi,16
	xor rax,rax
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call calloc
	mov rsp,QWORD [rsp_tmp]  
	mov rdi,0
	mov rsi,0x_40_00_0000_0000_0000
	or rdi,rsi
	mov QWORD [rax],rdi
	mov QWORD [rax+8*1],0
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	mov r14,rax
	ret
ETR_180: ; pnt_dt_etr { 0'(= r ) 1'(= a34◂ [ ] ) } ⊢ { 0'(= r ) 1'(= {| l |} ) } : ({ _r64 _t34 }→{ _r64 _s8 })
;; rsp=0 , %926~1'(= a34◂ [ ] ) %925~0'(= r ) 
;; ? 1'(= a34◂ [ ] ) ⊢ 0(<2)◂{ 2'(= a2◂ [ {| l |}] ) 3'(= a2◂ [ *{ {| l |}a23◂ [ ]}] ) }
	mov rdi,r14
	movzx rax,BYTE [rdi+6]
	cmp rax,0
	jnz LB_713
	mov rdi,r14
	mov rdi,QWORD [rdi+8+8*0]
	mov r8,rdi
	mov rdi,r14
	mov rdi,QWORD [rdi+8+8*1]
	mov r9,rdi
;; rsp=0 , %928~3'(= a2◂ [ *{ {| l |}a23◂ [ ]}] ) %927~2'(= a2◂ [ {| l |}] ) %925~0'(= r ) 
; _inc 0'(= r ) ⊢ 0'(= r )
	add r13,1
;; rsp=0 , %929~0'(= r ) %928~3'(= a2◂ [ *{ {| l |}a23◂ [ ]}] ) %927~2'(= a2◂ [ {| l |}] ) 
; rsp_d=0, #181 { 0'(= r ) 3'(= a2◂ [ *{ {| l |}a23◂ [ ]}] ) } ⊢ { 0'(= r ) 1'(= {| l |} ) }
	lea rsp,[rsp-8*1]
	mov QWORD [rsp+8*0],r8
; .mov_ptn2 { 0'(= r ) 3'(= a2◂ [ *{ {| l |}a23◂ [ ]}] ) } ⊢ { 0'(= r ) 1'(= a2◂ [ *{ {| l |}a23◂ [ ]}] ) }
; .mov_ptn 3'(= a2◂ [ *{ {| l |}a23◂ [ ]}] ) ⊢ 1'(= a2◂ [ *{ {| l |}a23◂ [ ]}] )
	mov rax,r9
	mov r14,rax
	call ETR_181

	mov r8,QWORD [rsp-8+8*1]
	lea rsp,[rsp+8*1]
;; rsp=0 , %931~1'(= {| l |} ) %930~0'(= r ) %927~2'(= a2◂ [ {| l |}] ) 
; _dec 0'(= r ) ⊢ 0'(= r )
	sub r13,1
;; rsp=0 , %932~0'(= r ) %931~1'(= {| l |} ) %927~2'(= a2◂ [ {| l |}] ) 
; » _^ .. ⊢ ..
; .. //
	mov rdi,0
	mov rsi,r14
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[rsi] 
	add rdi,rax 
	push rax
	push rsi
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	add rdi,1
	push rdi 
	and rdi,~111b
	add rdi,16
	mov rsi,rdi 
	mov rdi,1
	xor rax,rax 
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call calloc
	mov rsp,QWORD [rsp_tmp]  
	pop rdi 
	mov QWORD [rax],rdi
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	mov r9,rax
	lea rdi,[rax+7+rdi]
	std 
	mov QWORD [tmp],rcx 
	jmp LB_714
	LB_715: db 10,0
LB_714:
	lea rsi,[LB_715+1-1]
	mov rcx,1
	rep movsb
	pop rsi 
	pop rcx
	lea rsi,[rsi+7+rcx]
	rep movsb
	mov rcx,QWORD [tmp] 
;; rsp=0 , %934~3'(= {| l |} ) %933~1'(= {| l |} ) %932~0'(= r ) %927~2'(= a2◂ [ {| l |}] ) 
; ∎ { 0'(= r ) 1'(= {| l |} ) }
; .dlt.ptn 3'(= {| l |} )
	mov rdi,r9
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call free 
	mov rsp,QWORD [rsp_tmp] 
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
; .dlt.ptn 2'(= a2◂ [ {| l |}] )
;	.dlt adt ⊢ _  
; .mov_ptn2 { 0'(= r ) 1'(= {| l |} ) } ⊢ { 0'(= r ) 1'(= {| l |} ) }
	ret
LB_713:
;; ? 1'(= a34◂ [ ] ) ⊢ 1(<2)◂{ 2'(= a2◂ [ {| l |}] ) 3'(= a23◂ [ ] ) }
	mov rdi,r14
	mov rdi,QWORD [rdi+8+8*0]
	mov r8,rdi
	mov rdi,r14
	mov rdi,QWORD [rdi+8+8*1]
	mov r9,rdi
;; rsp=0 , %936~3'(= a23◂ [ ] ) %935~2'(= a2◂ [ {| l |}] ) %925~0'(= r ) 
; rsp_d=0, #182 3'(= a23◂ [ ] ) ⊢ 1'(= {| l |} )
	lea rsp,[rsp-8*2]
	mov QWORD [rsp+8*0],r13
	mov QWORD [rsp+8*1],r8
; .mov_ptn2 3'(= a23◂ [ ] ) ⊢ 0'(= a23◂ [ ] )
; .mov_ptn 3'(= a23◂ [ ] ) ⊢ 0'(= a23◂ [ ] )
	mov rax,r9
	mov r13,rax
	call ETR_182

	mov r8,QWORD [rsp-8+8*2]
	mov rax,QWORD [rsp-8+8*1]
	mov r14,r13
	mov r13,rax
	lea rsp,[rsp+8*2]
;; rsp=0 , %937~1'(= {| l |} ) %935~2'(= a2◂ [ {| l |}] ) %925~0'(= r ) 
; » _^ .. ⊢ ..
; .. //
	mov rdi,0
	mov rsi,r14
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[rsi] 
	add rdi,rax 
	push rax
	push rsi
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	add rdi,4
	push rdi 
	and rdi,~111b
	add rdi,16
	mov rsi,rdi 
	mov rdi,1
	xor rax,rax 
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call calloc
	mov rsp,QWORD [rsp_tmp]  
	pop rdi 
	mov QWORD [rax],rdi
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	mov r9,rax
	lea rdi,[rax+7+rdi]
	std 
	mov QWORD [tmp],rcx 
	jmp LB_716
	LB_717: db 32,61,32,0
LB_716:
	lea rsi,[LB_717+3-1]
	mov rcx,3
	rep movsb
	pop rsi 
	pop rcx
	lea rsi,[rsi+7+rcx]
	rep movsb
	jmp LB_718
	LB_719: db 10,0
LB_718:
	lea rsi,[LB_719+1-1]
	mov rcx,1
	rep movsb
	mov rcx,QWORD [tmp] 
;; rsp=0 , %939~3'(= {| l |} ) %938~1'(= {| l |} ) %935~2'(= a2◂ [ {| l |}] ) %925~0'(= r ) 
; ∎ { 0'(= r ) 3'(= {| l |} ) }
; .dlt.ptn 1'(= {| l |} )
	mov rdi,r14
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call free 
	mov rsp,QWORD [rsp_tmp] 
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
; .dlt.ptn 2'(= a2◂ [ {| l |}] )
;	.dlt adt ⊢ _  
; .mov_ptn2 { 0'(= r ) 3'(= {| l |} ) } ⊢ { 0'(= r ) 1'(= {| l |} ) }
; .mov_ptn 3'(= {| l |} ) ⊢ 1'(= {| l |} )
	mov rax,r9
	mov r14,rax
	ret
ETR_181: ; pnt_dt_def { 0'(= r ) 1'(= a2◂ [ *{ {| l |}a23◂ [ ]}] ) } ⊢ { 0'(= r ) 1'(= {| l |} ) } : ({ _r64 _lst◂{ _s8 _t23 } }→{ _r64 _s8 })
;; rsp=0 , %941~1'(= a2◂ [ *{ {| l |}a23◂ [ ]}] ) %940~0'(= r ) 
;; ? 1'(= a2◂ [ *{ {| l |}a23◂ [ ]}] ) ⊢ 0(<2)◂{ { 3'(= {| l |} ) 4'(= a23◂ [ ] ) } 5'(= a2◂ [ *{ {| l |}a23◂ [ ]}] ) }
	mov rdi,r14
	movzx rax,BYTE [rdi+6]
	cmp rax,0
	jnz LB_720
	mov rdi,r14
	mov rdi,QWORD [rdi+8+8*0]
	mov r8,rdi
	mov rdi,r8
	mov rdi,QWORD [rdi+8+8*0]
	mov r9,rdi
	mov rdi,r8
	mov rdi,QWORD [rdi+8+8*1]
	mov r10,rdi
	mov rdi,r14
	mov rdi,QWORD [rdi+8+8*1]
	mov r11,rdi
;; rsp=0 , %944~5'(= a2◂ [ *{ {| l |}a23◂ [ ]}] ) %943~4'(= a23◂ [ ] ) %942~3'(= {| l |} ) %940~0'(= r ) 
; rsp_d=0, #181 { 0'(= r ) 5'(= a2◂ [ *{ {| l |}a23◂ [ ]}] ) } ⊢ { 0'(= r ) 1'(= {| l |} ) }
	lea rsp,[rsp-8*2]
	mov QWORD [rsp+8*0],r9
	mov QWORD [rsp+8*1],r10
; .mov_ptn2 { 0'(= r ) 5'(= a2◂ [ *{ {| l |}a23◂ [ ]}] ) } ⊢ { 0'(= r ) 1'(= a2◂ [ *{ {| l |}a23◂ [ ]}] ) }
; .mov_ptn 5'(= a2◂ [ *{ {| l |}a23◂ [ ]}] ) ⊢ 1'(= a2◂ [ *{ {| l |}a23◂ [ ]}] )
	mov rax,r11
	mov r14,rax
	call ETR_181

	mov r10,QWORD [rsp-8+8*2]
	mov r9,QWORD [rsp-8+8*1]
	lea rsp,[rsp+8*2]
;; rsp=0 , %946~1'(= {| l |} ) %945~0'(= r ) %943~4'(= a23◂ [ ] ) %942~3'(= {| l |} ) 
; rsp_d=0, #182 4'(= a23◂ [ ] ) ⊢ 2'(= {| l |} )
	lea rsp,[rsp-8*3]
	mov QWORD [rsp+8*0],r13
	mov QWORD [rsp+8*1],r14
	mov QWORD [rsp+8*2],r9
; .mov_ptn2 4'(= a23◂ [ ] ) ⊢ 0'(= a23◂ [ ] )
; .mov_ptn 4'(= a23◂ [ ] ) ⊢ 0'(= a23◂ [ ] )
	mov rax,r10
	mov r13,rax
	call ETR_182

	mov r9,QWORD [rsp-8+8*3]
	mov r14,QWORD [rsp-8+8*2]
	mov rax,QWORD [rsp-8+8*1]
	mov r8,r13
	mov r13,rax
	lea rsp,[rsp+8*3]
;; rsp=0 , %947~2'(= {| l |} ) %946~1'(= {| l |} ) %945~0'(= r ) %942~3'(= {| l |} ) 
; » _^ .. ⊢ ..
; .. //
	mov rdi,0
	mov rsi,r14
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[rsi] 
	add rdi,rax 
	push rax
	push rsi
	mov rsi,r8
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[rsi] 
	add rdi,rax 
	push rax
	push rsi
	mov rsi,r9
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[rsi] 
	add rdi,rax 
	push rax
	push rsi
	mov rsi,r13
	push rsi
	imul rsi,1
	add rdi,rsi 
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	add rdi,8
	push rdi 
	and rdi,~111b
	add rdi,16
	mov rsi,rdi 
	mov rdi,1
	xor rax,rax 
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call calloc
	mov rsp,QWORD [rsp_tmp]  
	pop rdi 
	mov QWORD [rax],rdi
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	mov r10,rax
	lea rdi,[rax+7+rdi]
	std 
	mov QWORD [tmp],rcx 
	jmp LB_721
	LB_722: db 9,0
LB_721:
	pop rax 
LB_723:
	lea rsi,[LB_722+1-1]
	mov rcx,1
	rep movsb 
	sub rax,1
	cmp rax,0
	jnz LB_723
	jmp LB_724
	LB_725: db 226,136,144,32,0
LB_724:
	lea rsi,[LB_725+4-1]
	mov rcx,4
	rep movsb
	pop rsi 
	pop rcx
	lea rsi,[rsi+7+rcx]
	rep movsb
	jmp LB_726
	LB_727: db 32,58,32,0
LB_726:
	lea rsi,[LB_727+3-1]
	mov rcx,3
	rep movsb
	pop rsi 
	pop rcx
	lea rsi,[rsi+7+rcx]
	rep movsb
	jmp LB_728
	LB_729: db 10,0
LB_728:
	lea rsi,[LB_729+1-1]
	mov rcx,1
	rep movsb
	pop rsi 
	pop rcx
	lea rsi,[rsi+7+rcx]
	rep movsb
	mov rcx,QWORD [tmp] 
;; rsp=0 , %952~4'(= {| l |} ) %951~1'(= {| l |} ) %950~2'(= {| l |} ) %949~3'(= {| l |} ) %948~0'(= r ) 
; ∎ { 0'(= r ) 4'(= {| l |} ) }
; .dlt.ptn 1'(= {| l |} )
	mov rdi,r14
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call free 
	mov rsp,QWORD [rsp_tmp] 
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
; .dlt.ptn 2'(= {| l |} )
	mov rdi,r8
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call free 
	mov rsp,QWORD [rsp_tmp] 
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
; .dlt.ptn 3'(= {| l |} )
	mov rdi,r9
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call free 
	mov rsp,QWORD [rsp_tmp] 
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
; .mov_ptn2 { 0'(= r ) 4'(= {| l |} ) } ⊢ { 0'(= r ) 1'(= {| l |} ) }
; .mov_ptn 4'(= {| l |} ) ⊢ 1'(= {| l |} )
	mov rax,r10
	mov r14,rax
	ret
LB_720:
;; ? 1'(= a2◂ [ *{ {| l |}a23◂ [ ]}] ) ⊢ 1(<2)◂{ }
;; rsp=0 , %940~0'(= r ) 
	jmp LB_730
LB_730:
; $ %[ "" ] ⊢ %[ "" ]
;; rsp=0 , %953~%[ "" ] %940~0'(= r ) 
; ∎ { 0'(= r ) %[ "" ] }
; .mov_ptn2 { 0'(= r ) %[ "" ] } ⊢ { 0'(= r ) 1'(= {| l |} ) }
; .mov_ptn %[ "" ] ⊢ 1'(= {| l |} )
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	mov rdi,1  
	mov rsi,16
	xor rax,rax
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call calloc
	mov rsp,QWORD [rsp_tmp]  
	mov rdi,0
	mov rsi,0x_40_00_0000_0000_0000
	or rdi,rsi
	mov QWORD [rax],rdi
	mov QWORD [rax+8*1],0
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	mov r14,rax
	ret
ETR_182: ; pnt_type 0'(= a23◂ [ ] ) ⊢ 0'(= {| l |} ) : (_t23→_s8)
;; rsp=0 , %954~0'(= a23◂ [ ] ) 
;; ? 0'(= a23◂ [ ] ) ⊢ 0(<5)◂1'(= a2◂ [ a23◂ [ ]] )
	mov rdi,r13
	movzx rax,BYTE [rdi+6]
	cmp rax,0
	jnz LB_731
	mov rax,QWORD [rdi+8]
	mov r14,rax
;; rsp=0 , %955~1'(= a2◂ [ a23◂ [ ]] ) 
; rsp_d=0, #183 1'(= a2◂ [ a23◂ [ ]] ) ⊢ 0'(= {| l |} )
; .mov_ptn2 1'(= a2◂ [ a23◂ [ ]] ) ⊢ 0'(= a2◂ [ a23◂ [ ]] )
; .mov_ptn 1'(= a2◂ [ a23◂ [ ]] ) ⊢ 0'(= a2◂ [ a23◂ [ ]] )
	mov rax,r14
	mov r13,rax
	call ETR_183

;; rsp=0 , %956~0'(= {| l |} ) 
; » _^ .. ⊢ ..
; .. //
	mov rdi,0
	mov rsi,r13
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[rsi] 
	add rdi,rax 
	push rax
	push rsi
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	add rdi,3
	push rdi 
	and rdi,~111b
	add rdi,16
	mov rsi,rdi 
	mov rdi,1
	xor rax,rax 
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call calloc
	mov rsp,QWORD [rsp_tmp]  
	pop rdi 
	mov QWORD [rax],rdi
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	mov r14,rax
	lea rdi,[rax+7+rdi]
	std 
	mov QWORD [tmp],rcx 
	jmp LB_732
	LB_733: db 123,32,0
LB_732:
	lea rsi,[LB_733+2-1]
	mov rcx,2
	rep movsb
	pop rsi 
	pop rcx
	lea rsi,[rsi+7+rcx]
	rep movsb
	jmp LB_734
	LB_735: db 125,0
LB_734:
	lea rsi,[LB_735+1-1]
	mov rcx,1
	rep movsb
	mov rcx,QWORD [tmp] 
;; rsp=0 , %958~1'(= {| l |} ) %957~0'(= {| l |} ) 
; ∎ 1'(= {| l |} )
; .dlt.ptn 0'(= {| l |} )
	mov rdi,r13
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call free 
	mov rsp,QWORD [rsp_tmp] 
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
; .mov_ptn2 1'(= {| l |} ) ⊢ 0'(= {| l |} )
; .mov_ptn 1'(= {| l |} ) ⊢ 0'(= {| l |} )
	mov rax,r14
	mov r13,rax
	ret
LB_731:
;; ? 0'(= a23◂ [ ] ) ⊢ 1(<5)◂{ 1'(= a23◂ [ ] ) 2'(= a23◂ [ ] ) }
	mov rdi,r13
	movzx rax,BYTE [rdi+6]
	cmp rax,1
	jnz LB_736
	mov rdi,r13
	mov rdi,QWORD [rdi+8+8*0]
	mov r14,rdi
	mov rdi,r13
	mov rdi,QWORD [rdi+8+8*1]
	mov r8,rdi
;; rsp=0 , %960~2'(= a23◂ [ ] ) %959~1'(= a23◂ [ ] ) 
; rsp_d=0, #182 1'(= a23◂ [ ] ) ⊢ 0'(= {| l |} )
	lea rsp,[rsp-8*1]
	mov QWORD [rsp+8*0],r8
; .mov_ptn2 1'(= a23◂ [ ] ) ⊢ 0'(= a23◂ [ ] )
; .mov_ptn 1'(= a23◂ [ ] ) ⊢ 0'(= a23◂ [ ] )
	mov rax,r14
	mov r13,rax
	call ETR_182

	mov r8,QWORD [rsp-8+8*1]
	lea rsp,[rsp+8*1]
;; rsp=0 , %961~0'(= {| l |} ) %960~2'(= a23◂ [ ] ) 
; rsp_d=0, #182 2'(= a23◂ [ ] ) ⊢ 1'(= {| l |} )
	lea rsp,[rsp-8*1]
	mov QWORD [rsp+8*0],r13
; .mov_ptn2 2'(= a23◂ [ ] ) ⊢ 0'(= a23◂ [ ] )
; .mov_ptn 2'(= a23◂ [ ] ) ⊢ 0'(= a23◂ [ ] )
	mov rax,r8
	mov r13,rax
	call ETR_182

	mov rax,QWORD [rsp-8+8*1]
	mov r14,r13
	mov r13,rax
	lea rsp,[rsp+8*1]
;; rsp=0 , %962~1'(= {| l |} ) %961~0'(= {| l |} ) 
; » _^ .. ⊢ ..
; .. //
	mov rdi,0
	mov rsi,r14
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[rsi] 
	add rdi,rax 
	push rax
	push rsi
	mov rsi,r13
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[rsi] 
	add rdi,rax 
	push rax
	push rsi
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	add rdi,5
	push rdi 
	and rdi,~111b
	add rdi,16
	mov rsi,rdi 
	mov rdi,1
	xor rax,rax 
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call calloc
	mov rsp,QWORD [rsp_tmp]  
	pop rdi 
	mov QWORD [rax],rdi
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	mov r8,rax
	lea rdi,[rax+7+rdi]
	std 
	mov QWORD [tmp],rcx 
	pop rsi 
	pop rcx
	lea rsi,[rsi+7+rcx]
	rep movsb
	jmp LB_737
	LB_738: db 32,226,134,146,32,0
LB_737:
	lea rsi,[LB_738+5-1]
	mov rcx,5
	rep movsb
	pop rsi 
	pop rcx
	lea rsi,[rsi+7+rcx]
	rep movsb
	mov rcx,QWORD [tmp] 
;; rsp=0 , %965~2'(= {| l |} ) %964~1'(= {| l |} ) %963~0'(= {| l |} ) 
; ∎ 2'(= {| l |} )
; .dlt.ptn 1'(= {| l |} )
	mov rdi,r14
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call free 
	mov rsp,QWORD [rsp_tmp] 
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
; .dlt.ptn 0'(= {| l |} )
	mov rdi,r13
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call free 
	mov rsp,QWORD [rsp_tmp] 
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
; .mov_ptn2 2'(= {| l |} ) ⊢ 0'(= {| l |} )
; .mov_ptn 2'(= {| l |} ) ⊢ 0'(= {| l |} )
	mov rax,r8
	mov r13,rax
	ret
LB_736:
;; ? 0'(= a23◂ [ ] ) ⊢ 2(<5)◂{ 1'(= a23◂ [ ] ) 2'(= a23◂ [ ] ) }
	mov rdi,r13
	movzx rax,BYTE [rdi+6]
	cmp rax,2
	jnz LB_739
	mov rdi,r13
	mov rdi,QWORD [rdi+8+8*0]
	mov r14,rdi
	mov rdi,r13
	mov rdi,QWORD [rdi+8+8*1]
	mov r8,rdi
;; rsp=0 , %967~2'(= a23◂ [ ] ) %966~1'(= a23◂ [ ] ) 
; rsp_d=0, #182 1'(= a23◂ [ ] ) ⊢ 0'(= {| l |} )
	lea rsp,[rsp-8*1]
	mov QWORD [rsp+8*0],r8
; .mov_ptn2 1'(= a23◂ [ ] ) ⊢ 0'(= a23◂ [ ] )
; .mov_ptn 1'(= a23◂ [ ] ) ⊢ 0'(= a23◂ [ ] )
	mov rax,r14
	mov r13,rax
	call ETR_182

	mov r8,QWORD [rsp-8+8*1]
	lea rsp,[rsp+8*1]
;; rsp=0 , %968~0'(= {| l |} ) %967~2'(= a23◂ [ ] ) 
; rsp_d=0, #182 2'(= a23◂ [ ] ) ⊢ 1'(= {| l |} )
	lea rsp,[rsp-8*1]
	mov QWORD [rsp+8*0],r13
; .mov_ptn2 2'(= a23◂ [ ] ) ⊢ 0'(= a23◂ [ ] )
; .mov_ptn 2'(= a23◂ [ ] ) ⊢ 0'(= a23◂ [ ] )
	mov rax,r8
	mov r13,rax
	call ETR_182

	mov rax,QWORD [rsp-8+8*1]
	mov r14,r13
	mov r13,rax
	lea rsp,[rsp+8*1]
;; rsp=0 , %969~1'(= {| l |} ) %968~0'(= {| l |} ) 
; » _^ .. ⊢ ..
; .. //
	mov rdi,0
	mov rsi,r14
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[rsi] 
	add rdi,rax 
	push rax
	push rsi
	mov rsi,r13
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[rsi] 
	add rdi,rax 
	push rax
	push rsi
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	add rdi,3
	push rdi 
	and rdi,~111b
	add rdi,16
	mov rsi,rdi 
	mov rdi,1
	xor rax,rax 
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call calloc
	mov rsp,QWORD [rsp_tmp]  
	pop rdi 
	mov QWORD [rax],rdi
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	mov r8,rax
	lea rdi,[rax+7+rdi]
	std 
	mov QWORD [tmp],rcx 
	pop rsi 
	pop rcx
	lea rsi,[rsi+7+rcx]
	rep movsb
	jmp LB_740
	LB_741: db 226,151,130,0
LB_740:
	lea rsi,[LB_741+3-1]
	mov rcx,3
	rep movsb
	pop rsi 
	pop rcx
	lea rsi,[rsi+7+rcx]
	rep movsb
	mov rcx,QWORD [tmp] 
;; rsp=0 , %972~2'(= {| l |} ) %971~1'(= {| l |} ) %970~0'(= {| l |} ) 
; ∎ 2'(= {| l |} )
; .dlt.ptn 1'(= {| l |} )
	mov rdi,r14
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call free 
	mov rsp,QWORD [rsp_tmp] 
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
; .dlt.ptn 0'(= {| l |} )
	mov rdi,r13
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call free 
	mov rsp,QWORD [rsp_tmp] 
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
; .mov_ptn2 2'(= {| l |} ) ⊢ 0'(= {| l |} )
; .mov_ptn 2'(= {| l |} ) ⊢ 0'(= {| l |} )
	mov rax,r8
	mov r13,rax
	ret
LB_739:
;; ? 0'(= a23◂ [ ] ) ⊢ 3(<5)◂1'(= a9◂ [ ] )
	mov rdi,r13
	movzx rax,BYTE [rdi+6]
	cmp rax,3
	jnz LB_742
	mov rax,QWORD [rdi+8]
	mov r14,rax
;; rsp=0 , %973~1'(= a9◂ [ ] ) 
; rsp_d=0, #82 1'(= a9◂ [ ] ) ⊢ 0'(= {| l |} )
; .mov_ptn2 1'(= a9◂ [ ] ) ⊢ 0'(= a9◂ [ ] )
; .mov_ptn 1'(= a9◂ [ ] ) ⊢ 0'(= a9◂ [ ] )
	mov rax,r14
	mov r13,rax
	call ETR_82

;; rsp=0 , %974~0'(= {| l |} ) 
; ∎ 0'(= {| l |} )
; .mov_ptn2 0'(= {| l |} ) ⊢ 0'(= {| l |} )
	ret
LB_742:
;; ? 0'(= a23◂ [ ] ) ⊢ 4(<5)◂0'(= {| l |} )
;; rsp=0 , %975~0'(= {| l |} ) 
; » _^ .. ⊢ ..
; .. //
	mov rdi,0
	mov rsi,r13
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[rsi] 
	add rdi,rax 
	push rax
	push rsi
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	add rdi,1
	push rdi 
	and rdi,~111b
	add rdi,16
	mov rsi,rdi 
	mov rdi,1
	xor rax,rax 
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call calloc
	mov rsp,QWORD [rsp_tmp]  
	pop rdi 
	mov QWORD [rax],rdi
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	mov r14,rax
	lea rdi,[rax+7+rdi]
	std 
	mov QWORD [tmp],rcx 
	pop rsi 
	pop rcx
	lea rsi,[rsi+7+rcx]
	rep movsb
	jmp LB_743
	LB_744: db 39,0
LB_743:
	lea rsi,[LB_744+1-1]
	mov rcx,1
	rep movsb
	mov rcx,QWORD [tmp] 
;; rsp=0 , %977~1'(= {| l |} ) %976~0'(= {| l |} ) 
; ∎ 1'(= {| l |} )
; .dlt.ptn 0'(= {| l |} )
	mov rdi,r13
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call free 
	mov rsp,QWORD [rsp_tmp] 
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
; .mov_ptn2 1'(= {| l |} ) ⊢ 0'(= {| l |} )
; .mov_ptn 1'(= {| l |} ) ⊢ 0'(= {| l |} )
	mov rax,r14
	mov r13,rax
	ret
ETR_183: ; pnt_type_rcd 0'(= a2◂ [ a23◂ [ ]] ) ⊢ 0'(= {| l |} ) : (_lst◂_t23→_s8)
;; rsp=0 , %978~0'(= a2◂ [ a23◂ [ ]] ) 
;; ? 0'(= a2◂ [ a23◂ [ ]] ) ⊢ 0(<2)◂{ 1'(= a23◂ [ ] ) 2'(= a2◂ [ a23◂ [ ]] ) }
	mov rdi,r13
	movzx rax,BYTE [rdi+6]
	cmp rax,0
	jnz LB_745
	mov rdi,r13
	mov rdi,QWORD [rdi+8+8*0]
	mov r14,rdi
	mov rdi,r13
	mov rdi,QWORD [rdi+8+8*1]
	mov r8,rdi
;; rsp=0 , %980~2'(= a2◂ [ a23◂ [ ]] ) %979~1'(= a23◂ [ ] ) 
; rsp_d=0, #182 1'(= a23◂ [ ] ) ⊢ 0'(= {| l |} )
	lea rsp,[rsp-8*1]
	mov QWORD [rsp+8*0],r8
; .mov_ptn2 1'(= a23◂ [ ] ) ⊢ 0'(= a23◂ [ ] )
; .mov_ptn 1'(= a23◂ [ ] ) ⊢ 0'(= a23◂ [ ] )
	mov rax,r14
	mov r13,rax
	call ETR_182

	mov r8,QWORD [rsp-8+8*1]
	lea rsp,[rsp+8*1]
;; rsp=0 , %981~0'(= {| l |} ) %980~2'(= a2◂ [ a23◂ [ ]] ) 
; rsp_d=0, #183 2'(= a2◂ [ a23◂ [ ]] ) ⊢ 1'(= {| l |} )
	lea rsp,[rsp-8*1]
	mov QWORD [rsp+8*0],r13
; .mov_ptn2 2'(= a2◂ [ a23◂ [ ]] ) ⊢ 0'(= a2◂ [ a23◂ [ ]] )
; .mov_ptn 2'(= a2◂ [ a23◂ [ ]] ) ⊢ 0'(= a2◂ [ a23◂ [ ]] )
	mov rax,r8
	mov r13,rax
	call ETR_183

	mov rax,QWORD [rsp-8+8*1]
	mov r14,r13
	mov r13,rax
	lea rsp,[rsp+8*1]
;; rsp=0 , %982~1'(= {| l |} ) %981~0'(= {| l |} ) 
; » _^ .. ⊢ ..
; .. //
	mov rdi,0
	mov rsi,r14
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[rsi] 
	add rdi,rax 
	push rax
	push rsi
	mov rsi,r13
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[rsi] 
	add rdi,rax 
	push rax
	push rsi
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	add rdi,1
	push rdi 
	and rdi,~111b
	add rdi,16
	mov rsi,rdi 
	mov rdi,1
	xor rax,rax 
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call calloc
	mov rsp,QWORD [rsp_tmp]  
	pop rdi 
	mov QWORD [rax],rdi
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	mov r8,rax
	lea rdi,[rax+7+rdi]
	std 
	mov QWORD [tmp],rcx 
	pop rsi 
	pop rcx
	lea rsi,[rsi+7+rcx]
	rep movsb
	jmp LB_746
	LB_747: db 32,0
LB_746:
	lea rsi,[LB_747+1-1]
	mov rcx,1
	rep movsb
	pop rsi 
	pop rcx
	lea rsi,[rsi+7+rcx]
	rep movsb
	mov rcx,QWORD [tmp] 
;; rsp=0 , %985~2'(= {| l |} ) %984~1'(= {| l |} ) %983~0'(= {| l |} ) 
; ∎ 2'(= {| l |} )
; .dlt.ptn 1'(= {| l |} )
	mov rdi,r14
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call free 
	mov rsp,QWORD [rsp_tmp] 
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
; .dlt.ptn 0'(= {| l |} )
	mov rdi,r13
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call free 
	mov rsp,QWORD [rsp_tmp] 
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
; .mov_ptn2 2'(= {| l |} ) ⊢ 0'(= {| l |} )
; .mov_ptn 2'(= {| l |} ) ⊢ 0'(= {| l |} )
	mov rax,r8
	mov r13,rax
	ret
LB_745:
;; ? 0'(= a2◂ [ a23◂ [ ]] ) ⊢ 1(<2)◂{ }
;; rsp=0 , 
	jmp LB_748
LB_748:
; $ %[ "" ] ⊢ %[ "" ]
;; rsp=0 , %986~%[ "" ] 
; ∎ %[ "" ]
; .mov_ptn2 %[ "" ] ⊢ 0'(= {| l |} )
; .mov_ptn %[ "" ] ⊢ 0'(= {| l |} )
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	mov rdi,1  
	mov rsi,16
	xor rax,rax
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call calloc
	mov rsp,QWORD [rsp_tmp]  
	mov rdi,0
	mov rsi,0x_40_00_0000_0000_0000
	or rdi,rsi
	mov QWORD [rax],rdi
	mov QWORD [rax+8*1],0
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	mov r13,rax
	ret
ETR_184: ; pnt_lc_etr { 0'(= r ) 1'(= a33◂ [ ] ) } ⊢ { 0'(= r ) 1'(= {| l |} ) } : ({ _r64 _t33 }→{ _r64 _s8 })
;; rsp=0 , %988~1'(= a33◂ [ ] ) %987~0'(= r ) 
;; ? 1'(= a33◂ [ ] ) ⊢ 0(<3)◂{ 2'(= a8◂ [ a13◂ [ {| l |}]] ) 3'(= a3◂ [ a23◂ [ ]] ) 4'(= a17◂ [ a9◂ [ ]{| l |}] ) }
	mov rdi,r14
	movzx rax,BYTE [rdi+6]
	cmp rax,0
	jnz LB_749
	mov rdi,r14
	mov rdi,QWORD [rdi+8+8*0]
	mov r8,rdi
	mov rdi,r14
	mov rdi,QWORD [rdi+8+8*1]
	mov r9,rdi
	mov rdi,r14
	mov rdi,QWORD [rdi+8+8*2]
	mov r10,rdi
;; rsp=0 , %991~4'(= a17◂ [ a9◂ [ ]{| l |}] ) %990~3'(= a3◂ [ a23◂ [ ]] ) %989~2'(= a8◂ [ a13◂ [ {| l |}]] ) %987~0'(= r ) 
;; ? 3'(= a3◂ [ a23◂ [ ]] ) ⊢ 0(<2)◂1'(= a23◂ [ ] )
	mov rdi,r9
	movzx rax,BYTE [rdi+6]
	cmp rax,0
	jnz LB_750
	mov rax,QWORD [rdi+8]
	mov r14,rax
;; rsp=0 , %992~1'(= a23◂ [ ] ) %991~4'(= a17◂ [ a9◂ [ ]{| l |}] ) %989~2'(= a8◂ [ a13◂ [ {| l |}]] ) %987~0'(= r ) 
; rsp_d=0, #182 1'(= a23◂ [ ] ) ⊢ 1'(= {| l |} )
	lea rsp,[rsp-8*3]
	mov QWORD [rsp+8*0],r13
	mov QWORD [rsp+8*1],r8
	mov QWORD [rsp+8*2],r10
; .mov_ptn2 1'(= a23◂ [ ] ) ⊢ 0'(= a23◂ [ ] )
; .mov_ptn 1'(= a23◂ [ ] ) ⊢ 0'(= a23◂ [ ] )
	mov rax,r14
	mov r13,rax
	call ETR_182

	mov r10,QWORD [rsp-8+8*3]
	mov r8,QWORD [rsp-8+8*2]
	mov rax,QWORD [rsp-8+8*1]
	mov r14,r13
	mov r13,rax
	lea rsp,[rsp+8*3]
;; rsp=0 , %993~1'(= {| l |} ) %991~4'(= a17◂ [ a9◂ [ ]{| l |}] ) %989~2'(= a8◂ [ a13◂ [ {| l |}]] ) %987~0'(= r ) 
; rsp_d=0, #99 2'(= a8◂ [ a13◂ [ {| l |}]] ) ⊢ 2'(= {| l |} )
	lea rsp,[rsp-8*3]
	mov QWORD [rsp+8*0],r13
	mov QWORD [rsp+8*1],r14
	mov QWORD [rsp+8*2],r10
; .mov_ptn2 2'(= a8◂ [ a13◂ [ {| l |}]] ) ⊢ 0'(= a8◂ [ a13◂ [ {| l |}]] )
; .mov_ptn 2'(= a8◂ [ a13◂ [ {| l |}]] ) ⊢ 0'(= a8◂ [ a13◂ [ {| l |}]] )
	mov rax,r8
	mov r13,rax
	call ETR_99

	mov r10,QWORD [rsp-8+8*3]
	mov r14,QWORD [rsp-8+8*2]
	mov rax,QWORD [rsp-8+8*1]
	mov r8,r13
	mov r13,rax
	lea rsp,[rsp+8*3]
;; rsp=0 , %994~2'(= {| l |} ) %993~1'(= {| l |} ) %991~4'(= a17◂ [ a9◂ [ ]{| l |}] ) %987~0'(= r ) 
; _inc 0'(= r ) ⊢ 0'(= r )
	add r13,1
;; rsp=0 , %995~0'(= r ) %994~2'(= {| l |} ) %993~1'(= {| l |} ) %991~4'(= a17◂ [ a9◂ [ ]{| l |}] ) 
; rsp_d=0, #132 { 0'(= r ) 4'(= a17◂ [ a9◂ [ ]{| l |}] ) } ⊢ { 0'(= r ) 3'(= {| l |} ) }
	lea rsp,[rsp-8*2]
	mov QWORD [rsp+8*0],r14
	mov QWORD [rsp+8*1],r8
; .mov_ptn2 { 0'(= r ) 4'(= a17◂ [ a9◂ [ ]{| l |}] ) } ⊢ { 0'(= r ) 1'(= a17◂ [ a9◂ [ ]{| l |}] ) }
; .mov_ptn 4'(= a17◂ [ a9◂ [ ]{| l |}] ) ⊢ 1'(= a17◂ [ a9◂ [ ]{| l |}] )
	mov rax,r10
	mov r14,rax
	call ETR_132

	mov r8,QWORD [rsp-8+8*2]
	mov rax,QWORD [rsp-8+8*1]
	mov r9,r14
	mov r14,rax
	lea rsp,[rsp+8*2]
;; rsp=0 , %997~3'(= {| l |} ) %996~0'(= r ) %994~2'(= {| l |} ) %993~1'(= {| l |} ) 
; _dec 0'(= r ) ⊢ 0'(= r )
	sub r13,1
;; rsp=0 , %998~0'(= r ) %997~3'(= {| l |} ) %994~2'(= {| l |} ) %993~1'(= {| l |} ) 
; » _^ .. ⊢ ..
; .. //
	mov rdi,0
	mov rsi,r9
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[rsi] 
	add rdi,rax 
	push rax
	push rsi
	mov rsi,r14
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[rsi] 
	add rdi,rax 
	push rax
	push rsi
	mov rsi,r8
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[rsi] 
	add rdi,rax 
	push rax
	push rsi
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	add rdi,5
	push rdi 
	and rdi,~111b
	add rdi,16
	mov rsi,rdi 
	mov rdi,1
	xor rax,rax 
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call calloc
	mov rsp,QWORD [rsp_tmp]  
	pop rdi 
	mov QWORD [rax],rdi
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	mov r10,rax
	lea rdi,[rax+7+rdi]
	std 
	mov QWORD [tmp],rcx 
	jmp LB_751
	LB_752: db 32,0
LB_751:
	lea rsi,[LB_752+1-1]
	mov rcx,1
	rep movsb
	pop rsi 
	pop rcx
	lea rsi,[rsi+7+rcx]
	rep movsb
	jmp LB_753
	LB_754: db 32,58,32,0
LB_753:
	lea rsi,[LB_754+3-1]
	mov rcx,3
	rep movsb
	pop rsi 
	pop rcx
	lea rsi,[rsi+7+rcx]
	rep movsb
	jmp LB_755
	LB_756: db 10,0
LB_755:
	lea rsi,[LB_756+1-1]
	mov rcx,1
	rep movsb
	pop rsi 
	pop rcx
	lea rsi,[rsi+7+rcx]
	rep movsb
	mov rcx,QWORD [tmp] 
;; rsp=0 , %1002~4'(= {| l |} ) %1001~1'(= {| l |} ) %1000~3'(= {| l |} ) %999~2'(= {| l |} ) %998~0'(= r ) 
; ∎ { 0'(= r ) 4'(= {| l |} ) }
; .dlt.ptn 1'(= {| l |} )
	mov rdi,r14
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call free 
	mov rsp,QWORD [rsp_tmp] 
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
; .dlt.ptn 3'(= {| l |} )
	mov rdi,r9
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call free 
	mov rsp,QWORD [rsp_tmp] 
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
; .dlt.ptn 2'(= {| l |} )
	mov rdi,r8
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call free 
	mov rsp,QWORD [rsp_tmp] 
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
; .mov_ptn2 { 0'(= r ) 4'(= {| l |} ) } ⊢ { 0'(= r ) 1'(= {| l |} ) }
; .mov_ptn 4'(= {| l |} ) ⊢ 1'(= {| l |} )
	mov rax,r10
	mov r14,rax
	ret
LB_750:
;; rsp=0 , %991~4'(= a17◂ [ a9◂ [ ]{| l |}] ) %990~3'(= a3◂ [ a23◂ [ ]] ) %989~2'(= a8◂ [ a13◂ [ {| l |}]] ) %987~0'(= r ) 
; rsp_d=0, #99 2'(= a8◂ [ a13◂ [ {| l |}]] ) ⊢ 1'(= {| l |} )
	lea rsp,[rsp-8*3]
	mov QWORD [rsp+8*0],r13
	mov QWORD [rsp+8*1],r9
	mov QWORD [rsp+8*2],r10
; .mov_ptn2 2'(= a8◂ [ a13◂ [ {| l |}]] ) ⊢ 0'(= a8◂ [ a13◂ [ {| l |}]] )
; .mov_ptn 2'(= a8◂ [ a13◂ [ {| l |}]] ) ⊢ 0'(= a8◂ [ a13◂ [ {| l |}]] )
	mov rax,r8
	mov r13,rax
	call ETR_99

	mov r10,QWORD [rsp-8+8*3]
	mov r9,QWORD [rsp-8+8*2]
	mov rax,QWORD [rsp-8+8*1]
	mov r14,r13
	mov r13,rax
	lea rsp,[rsp+8*3]
;; rsp=0 , %1003~1'(= {| l |} ) %991~4'(= a17◂ [ a9◂ [ ]{| l |}] ) %990~3'(= a3◂ [ a23◂ [ ]] ) %987~0'(= r ) 
; _inc 0'(= r ) ⊢ 0'(= r )
	add r13,1
;; rsp=0 , %1004~0'(= r ) %1003~1'(= {| l |} ) %991~4'(= a17◂ [ a9◂ [ ]{| l |}] ) %990~3'(= a3◂ [ a23◂ [ ]] ) 
; rsp_d=0, #132 { 0'(= r ) 4'(= a17◂ [ a9◂ [ ]{| l |}] ) } ⊢ { 0'(= r ) 2'(= {| l |} ) }
	lea rsp,[rsp-8*2]
	mov QWORD [rsp+8*0],r14
	mov QWORD [rsp+8*1],r9
; .mov_ptn2 { 0'(= r ) 4'(= a17◂ [ a9◂ [ ]{| l |}] ) } ⊢ { 0'(= r ) 1'(= a17◂ [ a9◂ [ ]{| l |}] ) }
; .mov_ptn 4'(= a17◂ [ a9◂ [ ]{| l |}] ) ⊢ 1'(= a17◂ [ a9◂ [ ]{| l |}] )
	mov rax,r10
	mov r14,rax
	call ETR_132

	mov r9,QWORD [rsp-8+8*2]
	mov rax,QWORD [rsp-8+8*1]
	mov r8,r14
	mov r14,rax
	lea rsp,[rsp+8*2]
;; rsp=0 , %1006~2'(= {| l |} ) %1005~0'(= r ) %1003~1'(= {| l |} ) %990~3'(= a3◂ [ a23◂ [ ]] ) 
; _dec 0'(= r ) ⊢ 0'(= r )
	sub r13,1
;; rsp=0 , %1007~0'(= r ) %1006~2'(= {| l |} ) %1003~1'(= {| l |} ) %990~3'(= a3◂ [ a23◂ [ ]] ) 
; » _^ .. ⊢ ..
; .. //
	mov rdi,0
	mov rsi,r8
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[rsi] 
	add rdi,rax 
	push rax
	push rsi
	mov rsi,r14
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[rsi] 
	add rdi,rax 
	push rax
	push rsi
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	add rdi,2
	push rdi 
	and rdi,~111b
	add rdi,16
	mov rsi,rdi 
	mov rdi,1
	xor rax,rax 
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call calloc
	mov rsp,QWORD [rsp_tmp]  
	pop rdi 
	mov QWORD [rax],rdi
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	mov r10,rax
	lea rdi,[rax+7+rdi]
	std 
	mov QWORD [tmp],rcx 
	jmp LB_757
	LB_758: db 32,0
LB_757:
	lea rsi,[LB_758+1-1]
	mov rcx,1
	rep movsb
	pop rsi 
	pop rcx
	lea rsi,[rsi+7+rcx]
	rep movsb
	jmp LB_759
	LB_760: db 10,0
LB_759:
	lea rsi,[LB_760+1-1]
	mov rcx,1
	rep movsb
	pop rsi 
	pop rcx
	lea rsi,[rsi+7+rcx]
	rep movsb
	mov rcx,QWORD [tmp] 
;; rsp=0 , %1010~4'(= {| l |} ) %1009~2'(= {| l |} ) %1008~1'(= {| l |} ) %1007~0'(= r ) %990~3'(= a3◂ [ a23◂ [ ]] ) 
; ∎ { 0'(= r ) 4'(= {| l |} ) }
; .dlt.ptn 2'(= {| l |} )
	mov rdi,r8
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call free 
	mov rsp,QWORD [rsp_tmp] 
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
; .dlt.ptn 1'(= {| l |} )
	mov rdi,r14
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call free 
	mov rsp,QWORD [rsp_tmp] 
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
; .dlt.ptn 3'(= a3◂ [ a23◂ [ ]] )
;	.dlt adt ⊢ _  
; .mov_ptn2 { 0'(= r ) 4'(= {| l |} ) } ⊢ { 0'(= r ) 1'(= {| l |} ) }
; .mov_ptn 4'(= {| l |} ) ⊢ 1'(= {| l |} )
	mov rax,r10
	mov r14,rax
	ret
LB_749:
;; ? 1'(= a33◂ [ ] ) ⊢ 1(<3)◂2'(= a11◂ [ a9◂ [ ]] )
	mov rdi,r14
	movzx rax,BYTE [rdi+6]
	cmp rax,1
	jnz LB_761
	mov rax,QWORD [rdi+8]
	mov r8,rax
;; rsp=0 , %1011~2'(= a11◂ [ a9◂ [ ]] ) %987~0'(= r ) 
; rsp_d=0, #88 2'(= a11◂ [ a9◂ [ ]] ) ⊢ 1'(= {| l |} )
	lea rsp,[rsp-8*1]
	mov QWORD [rsp+8*0],r13
; .mov_ptn2 2'(= a11◂ [ a9◂ [ ]] ) ⊢ 0'(= a11◂ [ a9◂ [ ]] )
; .mov_ptn 2'(= a11◂ [ a9◂ [ ]] ) ⊢ 0'(= a11◂ [ a9◂ [ ]] )
	mov rax,r8
	mov r13,rax
	call ETR_88

	mov rax,QWORD [rsp-8+8*1]
	mov r14,r13
	mov r13,rax
	lea rsp,[rsp+8*1]
;; rsp=0 , %1012~1'(= {| l |} ) %987~0'(= r ) 
; » _^ .. ⊢ ..
; .. //
	mov rdi,0
	mov rsi,r14
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[rsi] 
	add rdi,rax 
	push rax
	push rsi
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	add rdi,4
	push rdi 
	and rdi,~111b
	add rdi,16
	mov rsi,rdi 
	mov rdi,1
	xor rax,rax 
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call calloc
	mov rsp,QWORD [rsp_tmp]  
	pop rdi 
	mov QWORD [rax],rdi
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	mov r8,rax
	lea rdi,[rax+7+rdi]
	std 
	mov QWORD [tmp],rcx 
	jmp LB_762
	LB_763: db 32,61,32,0
LB_762:
	lea rsi,[LB_763+3-1]
	mov rcx,3
	rep movsb
	pop rsi 
	pop rcx
	lea rsi,[rsi+7+rcx]
	rep movsb
	jmp LB_764
	LB_765: db 10,0
LB_764:
	lea rsi,[LB_765+1-1]
	mov rcx,1
	rep movsb
	mov rcx,QWORD [tmp] 
;; rsp=0 , %1014~2'(= {| l |} ) %1013~1'(= {| l |} ) %987~0'(= r ) 
; ∎ { 0'(= r ) 2'(= {| l |} ) }
; .dlt.ptn 1'(= {| l |} )
	mov rdi,r14
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call free 
	mov rsp,QWORD [rsp_tmp] 
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
; .mov_ptn2 { 0'(= r ) 2'(= {| l |} ) } ⊢ { 0'(= r ) 1'(= {| l |} ) }
; .mov_ptn 2'(= {| l |} ) ⊢ 1'(= {| l |} )
	mov rax,r8
	mov r14,rax
	ret
LB_761:
;; ? 1'(= a33◂ [ ] ) ⊢ 2(<3)◂1'(= a17◂ [ a9◂ [ ]{| l |}] )
;; rsp=0 , %1015~1'(= a17◂ [ a9◂ [ ]{| l |}] ) %987~0'(= r ) 
; _inc 0'(= r ) ⊢ 0'(= r )
	add r13,1
;; rsp=0 , %1016~0'(= r ) %1015~1'(= a17◂ [ a9◂ [ ]{| l |}] ) 
; rsp_d=0, #132 { 0'(= r ) 1'(= a17◂ [ a9◂ [ ]{| l |}] ) } ⊢ { 0'(= r ) 1'(= {| l |} ) }
; .mov_ptn2 { 0'(= r ) 1'(= a17◂ [ a9◂ [ ]{| l |}] ) } ⊢ { 0'(= r ) 1'(= a17◂ [ a9◂ [ ]{| l |}] ) }
	call ETR_132

;; rsp=0 , %1018~1'(= {| l |} ) %1017~0'(= r ) 
; _dec 0'(= r ) ⊢ 0'(= r )
	sub r13,1
;; rsp=0 , %1019~0'(= r ) %1018~1'(= {| l |} ) 
; » _^ .. ⊢ ..
; .. //
	mov rdi,0
	mov rsi,r14
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[rsi] 
	add rdi,rax 
	push rax
	push rsi
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	add rdi,5
	push rdi 
	and rdi,~111b
	add rdi,16
	mov rsi,rdi 
	mov rdi,1
	xor rax,rax 
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call calloc
	mov rsp,QWORD [rsp_tmp]  
	pop rdi 
	mov QWORD [rax],rdi
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	mov r8,rax
	lea rdi,[rax+7+rdi]
	std 
	mov QWORD [tmp],rcx 
	jmp LB_766
	LB_767: db 32,194,171,32,10,0
LB_766:
	lea rsi,[LB_767+5-1]
	mov rcx,5
	rep movsb
	pop rsi 
	pop rcx
	lea rsi,[rsi+7+rcx]
	rep movsb
	mov rcx,QWORD [tmp] 
;; rsp=0 , %1021~2'(= {| l |} ) %1020~1'(= {| l |} ) %1019~0'(= r ) 
; ∎ { 0'(= r ) 2'(= {| l |} ) }
; .dlt.ptn 1'(= {| l |} )
	mov rdi,r14
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call free 
	mov rsp,QWORD [rsp_tmp] 
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
; .mov_ptn2 { 0'(= r ) 2'(= {| l |} ) } ⊢ { 0'(= r ) 1'(= {| l |} ) }
; .mov_ptn 2'(= {| l |} ) ⊢ 1'(= {| l |} )
	mov rax,r8
	mov r14,rax
	ret
ETR_185: ; pnt_lc_qlq_etr { 0'(= r ) 1'(= a2◂ [ *{ {| l |}a8◂ [ a13◂ [ {| l |}]]a3◂ [ a23◂ [ ]]a17◂ [ a9◂ [ ]{| l |}]}] ) } ⊢ { 0'(= r ) 1'(= {| l |} ) } : ({ _r64 _lst◂{ _s8 _t8◂_t13◂_s8 _opn◂_t23 _t17◂_s8◂_t9 } }→{ _r64 _s8 })
;; rsp=0 , %1023~1'(= a2◂ [ *{ {| l |}a8◂ [ a13◂ [ {| l |}]]a3◂ [ a23◂ [ ]]a17◂ [ a9◂ [ ]{| l |}]}] ) %1022~0'(= r ) 
;; ? 1'(= a2◂ [ *{ {| l |}a8◂ [ a13◂ [ {| l |}]]a3◂ [ a23◂ [ ]]a17◂ [ a9◂ [ ]{| l |}]}] ) ⊢ 0(<2)◂{ { 3'(= {| l |} ) 4'(= a8◂ [ a13◂ [ {| l |}]] ) 5'(= a3◂ [ a23◂ [ ]] ) 6'(= a17◂ [ a9◂ [ ]{| l |}] ) } 7'(= a2◂ [ *{ {| l |}a8◂ [ a13◂ [ {| l |}]]a3◂ [ a23◂ [ ]]a17◂ [ a9◂ [ ]{| l |}]}] ) }
	mov rdi,r14
	movzx rax,BYTE [rdi+6]
	cmp rax,0
	jnz LB_768
	mov rdi,r14
	mov rdi,QWORD [rdi+8+8*0]
	mov r8,rdi
	mov rdi,r8
	mov rdi,QWORD [rdi+8+8*0]
	mov r9,rdi
	mov rdi,r8
	mov rdi,QWORD [rdi+8+8*1]
	mov r10,rdi
	mov rdi,r8
	mov rdi,QWORD [rdi+8+8*2]
	mov r11,rdi
	mov rdi,r8
	mov rdi,QWORD [rdi+8+8*3]
	mov rcx,rdi
	mov rdi,r14
	mov rdi,QWORD [rdi+8+8*1]
	mov rdx,rdi
;; rsp=0 , %1028~7'(= a2◂ [ *{ {| l |}a8◂ [ a13◂ [ {| l |}]]a3◂ [ a23◂ [ ]]a17◂ [ a9◂ [ ]{| l |}]}] ) %1027~6'(= a17◂ [ a9◂ [ ]{| l |}] ) %1026~5'(= a3◂ [ a23◂ [ ]] ) %1025~4'(= a8◂ [ a13◂ [ {| l |}]] ) %1024~3'(= {| l |} ) %1022~0'(= r ) 
;; ? 5'(= a3◂ [ a23◂ [ ]] ) ⊢ 0(<2)◂1'(= a23◂ [ ] )
	mov rdi,r11
	movzx rax,BYTE [rdi+6]
	cmp rax,0
	jnz LB_769
	mov rax,QWORD [rdi+8]
	mov r14,rax
;; rsp=0 , %1029~1'(= a23◂ [ ] ) %1028~7'(= a2◂ [ *{ {| l |}a8◂ [ a13◂ [ {| l |}]]a3◂ [ a23◂ [ ]]a17◂ [ a9◂ [ ]{| l |}]}] ) %1027~6'(= a17◂ [ a9◂ [ ]{| l |}] ) %1025~4'(= a8◂ [ a13◂ [ {| l |}]] ) %1024~3'(= {| l |} ) %1022~0'(= r ) 
; rsp_d=0, #182 1'(= a23◂ [ ] ) ⊢ 1'(= {| l |} )
	lea rsp,[rsp-8*5]
	mov QWORD [rsp+8*0],r13
	mov QWORD [rsp+8*1],r9
	mov QWORD [rsp+8*2],r10
	mov QWORD [rsp+8*3],rcx
	mov QWORD [rsp+8*4],rdx
; .mov_ptn2 1'(= a23◂ [ ] ) ⊢ 0'(= a23◂ [ ] )
; .mov_ptn 1'(= a23◂ [ ] ) ⊢ 0'(= a23◂ [ ] )
	mov rax,r14
	mov r13,rax
	call ETR_182

	mov rdx,QWORD [rsp-8+8*5]
	mov rcx,QWORD [rsp-8+8*4]
	mov r10,QWORD [rsp-8+8*3]
	mov r9,QWORD [rsp-8+8*2]
	mov rax,QWORD [rsp-8+8*1]
	mov r14,r13
	mov r13,rax
	lea rsp,[rsp+8*5]
;; rsp=0 , %1030~1'(= {| l |} ) %1028~7'(= a2◂ [ *{ {| l |}a8◂ [ a13◂ [ {| l |}]]a3◂ [ a23◂ [ ]]a17◂ [ a9◂ [ ]{| l |}]}] ) %1027~6'(= a17◂ [ a9◂ [ ]{| l |}] ) %1025~4'(= a8◂ [ a13◂ [ {| l |}]] ) %1024~3'(= {| l |} ) %1022~0'(= r ) 
; rsp_d=0, #99 4'(= a8◂ [ a13◂ [ {| l |}]] ) ⊢ 2'(= {| l |} )
	lea rsp,[rsp-8*5]
	mov QWORD [rsp+8*0],r13
	mov QWORD [rsp+8*1],r14
	mov QWORD [rsp+8*2],r9
	mov QWORD [rsp+8*3],rcx
	mov QWORD [rsp+8*4],rdx
; .mov_ptn2 4'(= a8◂ [ a13◂ [ {| l |}]] ) ⊢ 0'(= a8◂ [ a13◂ [ {| l |}]] )
; .mov_ptn 4'(= a8◂ [ a13◂ [ {| l |}]] ) ⊢ 0'(= a8◂ [ a13◂ [ {| l |}]] )
	mov rax,r10
	mov r13,rax
	call ETR_99

	mov rdx,QWORD [rsp-8+8*5]
	mov rcx,QWORD [rsp-8+8*4]
	mov r9,QWORD [rsp-8+8*3]
	mov r14,QWORD [rsp-8+8*2]
	mov rax,QWORD [rsp-8+8*1]
	mov r8,r13
	mov r13,rax
	lea rsp,[rsp+8*5]
;; rsp=0 , %1031~2'(= {| l |} ) %1030~1'(= {| l |} ) %1028~7'(= a2◂ [ *{ {| l |}a8◂ [ a13◂ [ {| l |}]]a3◂ [ a23◂ [ ]]a17◂ [ a9◂ [ ]{| l |}]}] ) %1027~6'(= a17◂ [ a9◂ [ ]{| l |}] ) %1024~3'(= {| l |} ) %1022~0'(= r ) 
; rsp_d=0, #185 { 0'(= r ) 7'(= a2◂ [ *{ {| l |}a8◂ [ a13◂ [ {| l |}]]a3◂ [ a23◂ [ ]]a17◂ [ a9◂ [ ]{| l |}]}] ) } ⊢ { 0'(= r ) 4'(= {| l |} ) }
	lea rsp,[rsp-8*4]
	mov QWORD [rsp+8*0],r14
	mov QWORD [rsp+8*1],r8
	mov QWORD [rsp+8*2],r9
	mov QWORD [rsp+8*3],rcx
; .mov_ptn2 { 0'(= r ) 7'(= a2◂ [ *{ {| l |}a8◂ [ a13◂ [ {| l |}]]a3◂ [ a23◂ [ ]]a17◂ [ a9◂ [ ]{| l |}]}] ) } ⊢ { 0'(= r ) 1'(= a2◂ [ *{ {| l |}a8◂ [ a13◂ [ {| l |}]]a3◂ [ a23◂ [ ]]a17◂ [ a9◂ [ ]{| l |}]}] ) }
; .mov_ptn 7'(= a2◂ [ *{ {| l |}a8◂ [ a13◂ [ {| l |}]]a3◂ [ a23◂ [ ]]a17◂ [ a9◂ [ ]{| l |}]}] ) ⊢ 1'(= a2◂ [ *{ {| l |}a8◂ [ a13◂ [ {| l |}]]a3◂ [ a23◂ [ ]]a17◂ [ a9◂ [ ]{| l |}]}] )
	mov rax,rdx
	mov r14,rax
	call ETR_185

	mov rcx,QWORD [rsp-8+8*4]
	mov r9,QWORD [rsp-8+8*3]
	mov r8,QWORD [rsp-8+8*2]
	mov rax,QWORD [rsp-8+8*1]
	mov r10,r14
	mov r14,rax
	lea rsp,[rsp+8*4]
;; rsp=0 , %1033~4'(= {| l |} ) %1032~0'(= r ) %1031~2'(= {| l |} ) %1030~1'(= {| l |} ) %1027~6'(= a17◂ [ a9◂ [ ]{| l |}] ) %1024~3'(= {| l |} ) 
; _inc 0'(= r ) ⊢ 0'(= r )
	add r13,1
;; rsp=0 , %1034~0'(= r ) %1033~4'(= {| l |} ) %1031~2'(= {| l |} ) %1030~1'(= {| l |} ) %1027~6'(= a17◂ [ a9◂ [ ]{| l |}] ) %1024~3'(= {| l |} ) 
; rsp_d=0, #132 { 0'(= r ) 6'(= a17◂ [ a9◂ [ ]{| l |}] ) } ⊢ { 0'(= r ) 5'(= {| l |} ) }
	lea rsp,[rsp-8*4]
	mov QWORD [rsp+8*0],r14
	mov QWORD [rsp+8*1],r8
	mov QWORD [rsp+8*2],r9
	mov QWORD [rsp+8*3],r10
; .mov_ptn2 { 0'(= r ) 6'(= a17◂ [ a9◂ [ ]{| l |}] ) } ⊢ { 0'(= r ) 1'(= a17◂ [ a9◂ [ ]{| l |}] ) }
; .mov_ptn 6'(= a17◂ [ a9◂ [ ]{| l |}] ) ⊢ 1'(= a17◂ [ a9◂ [ ]{| l |}] )
	mov rax,rcx
	mov r14,rax
	call ETR_132

	mov r10,QWORD [rsp-8+8*4]
	mov r9,QWORD [rsp-8+8*3]
	mov r8,QWORD [rsp-8+8*2]
	mov rax,QWORD [rsp-8+8*1]
	mov r11,r14
	mov r14,rax
	lea rsp,[rsp+8*4]
;; rsp=0 , %1036~5'(= {| l |} ) %1035~0'(= r ) %1033~4'(= {| l |} ) %1031~2'(= {| l |} ) %1030~1'(= {| l |} ) %1024~3'(= {| l |} ) 
; _dec 0'(= r ) ⊢ 0'(= r )
	sub r13,1
;; rsp=0 , %1037~0'(= r ) %1036~5'(= {| l |} ) %1033~4'(= {| l |} ) %1031~2'(= {| l |} ) %1030~1'(= {| l |} ) %1024~3'(= {| l |} ) 
; » _^ .. ⊢ ..
; .. //
	mov rdi,0
	mov rsi,r10
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[rsi] 
	add rdi,rax 
	push rax
	push rsi
	mov rsi,r11
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[rsi] 
	add rdi,rax 
	push rax
	push rsi
	mov rsi,r14
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[rsi] 
	add rdi,rax 
	push rax
	push rsi
	mov rsi,r8
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[rsi] 
	add rdi,rax 
	push rax
	push rsi
	mov rsi,r9
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[rsi] 
	add rdi,rax 
	push rax
	push rsi
	mov rsi,r13
	push rsi
	imul rsi,1
	add rdi,rsi 
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	add rdi,7
	push rdi 
	and rdi,~111b
	add rdi,16
	mov rsi,rdi 
	mov rdi,1
	xor rax,rax 
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call calloc
	mov rsp,QWORD [rsp_tmp]  
	pop rdi 
	mov QWORD [rax],rdi
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	mov rcx,rax
	lea rdi,[rax+7+rdi]
	std 
	mov QWORD [tmp],rcx 
	jmp LB_770
	LB_771: db 9,0
LB_770:
	pop rax 
LB_772:
	lea rsi,[LB_771+1-1]
	mov rcx,1
	rep movsb 
	sub rax,1
	cmp rax,0
	jnz LB_772
	jmp LB_773
	LB_774: db 64,46,0
LB_773:
	lea rsi,[LB_774+2-1]
	mov rcx,2
	rep movsb
	pop rsi 
	pop rcx
	lea rsi,[rsi+7+rcx]
	rep movsb
	jmp LB_775
	LB_776: db 32,0
LB_775:
	lea rsi,[LB_776+1-1]
	mov rcx,1
	rep movsb
	pop rsi 
	pop rcx
	lea rsi,[rsi+7+rcx]
	rep movsb
	jmp LB_777
	LB_778: db 32,58,32,0
LB_777:
	lea rsi,[LB_778+3-1]
	mov rcx,3
	rep movsb
	pop rsi 
	pop rcx
	lea rsi,[rsi+7+rcx]
	rep movsb
	jmp LB_779
	LB_780: db 10,0
LB_779:
	lea rsi,[LB_780+1-1]
	mov rcx,1
	rep movsb
	pop rsi 
	pop rcx
	lea rsi,[rsi+7+rcx]
	rep movsb
	pop rsi 
	pop rcx
	lea rsi,[rsi+7+rcx]
	rep movsb
	mov rcx,QWORD [tmp] 
;; rsp=0 , %1044~6'(= {| l |} ) %1043~1'(= {| l |} ) %1042~4'(= {| l |} ) %1041~5'(= {| l |} ) %1040~2'(= {| l |} ) %1039~3'(= {| l |} ) %1038~0'(= r ) 
; ∎ { 0'(= r ) 6'(= {| l |} ) }
; .dlt.ptn 1'(= {| l |} )
	mov rdi,r14
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call free 
	mov rsp,QWORD [rsp_tmp] 
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
; .dlt.ptn 4'(= {| l |} )
	mov rdi,r10
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call free 
	mov rsp,QWORD [rsp_tmp] 
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
; .dlt.ptn 5'(= {| l |} )
	mov rdi,r11
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call free 
	mov rsp,QWORD [rsp_tmp] 
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
; .dlt.ptn 2'(= {| l |} )
	mov rdi,r8
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call free 
	mov rsp,QWORD [rsp_tmp] 
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
; .dlt.ptn 3'(= {| l |} )
	mov rdi,r9
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call free 
	mov rsp,QWORD [rsp_tmp] 
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
; .mov_ptn2 { 0'(= r ) 6'(= {| l |} ) } ⊢ { 0'(= r ) 1'(= {| l |} ) }
; .mov_ptn 6'(= {| l |} ) ⊢ 1'(= {| l |} )
	mov rax,rcx
	mov r14,rax
	ret
LB_769:
;; rsp=0 , %1028~7'(= a2◂ [ *{ {| l |}a8◂ [ a13◂ [ {| l |}]]a3◂ [ a23◂ [ ]]a17◂ [ a9◂ [ ]{| l |}]}] ) %1027~6'(= a17◂ [ a9◂ [ ]{| l |}] ) %1026~5'(= a3◂ [ a23◂ [ ]] ) %1025~4'(= a8◂ [ a13◂ [ {| l |}]] ) %1024~3'(= {| l |} ) %1022~0'(= r ) 
; rsp_d=0, #99 4'(= a8◂ [ a13◂ [ {| l |}]] ) ⊢ 1'(= {| l |} )
	lea rsp,[rsp-8*5]
	mov QWORD [rsp+8*0],r13
	mov QWORD [rsp+8*1],r9
	mov QWORD [rsp+8*2],r11
	mov QWORD [rsp+8*3],rcx
	mov QWORD [rsp+8*4],rdx
; .mov_ptn2 4'(= a8◂ [ a13◂ [ {| l |}]] ) ⊢ 0'(= a8◂ [ a13◂ [ {| l |}]] )
; .mov_ptn 4'(= a8◂ [ a13◂ [ {| l |}]] ) ⊢ 0'(= a8◂ [ a13◂ [ {| l |}]] )
	mov rax,r10
	mov r13,rax
	call ETR_99

	mov rdx,QWORD [rsp-8+8*5]
	mov rcx,QWORD [rsp-8+8*4]
	mov r11,QWORD [rsp-8+8*3]
	mov r9,QWORD [rsp-8+8*2]
	mov rax,QWORD [rsp-8+8*1]
	mov r14,r13
	mov r13,rax
	lea rsp,[rsp+8*5]
;; rsp=0 , %1045~1'(= {| l |} ) %1028~7'(= a2◂ [ *{ {| l |}a8◂ [ a13◂ [ {| l |}]]a3◂ [ a23◂ [ ]]a17◂ [ a9◂ [ ]{| l |}]}] ) %1027~6'(= a17◂ [ a9◂ [ ]{| l |}] ) %1026~5'(= a3◂ [ a23◂ [ ]] ) %1024~3'(= {| l |} ) %1022~0'(= r ) 
; rsp_d=0, #185 { 0'(= r ) 7'(= a2◂ [ *{ {| l |}a8◂ [ a13◂ [ {| l |}]]a3◂ [ a23◂ [ ]]a17◂ [ a9◂ [ ]{| l |}]}] ) } ⊢ { 0'(= r ) 2'(= {| l |} ) }
	lea rsp,[rsp-8*4]
	mov QWORD [rsp+8*0],r14
	mov QWORD [rsp+8*1],r9
	mov QWORD [rsp+8*2],r11
	mov QWORD [rsp+8*3],rcx
; .mov_ptn2 { 0'(= r ) 7'(= a2◂ [ *{ {| l |}a8◂ [ a13◂ [ {| l |}]]a3◂ [ a23◂ [ ]]a17◂ [ a9◂ [ ]{| l |}]}] ) } ⊢ { 0'(= r ) 1'(= a2◂ [ *{ {| l |}a8◂ [ a13◂ [ {| l |}]]a3◂ [ a23◂ [ ]]a17◂ [ a9◂ [ ]{| l |}]}] ) }
; .mov_ptn 7'(= a2◂ [ *{ {| l |}a8◂ [ a13◂ [ {| l |}]]a3◂ [ a23◂ [ ]]a17◂ [ a9◂ [ ]{| l |}]}] ) ⊢ 1'(= a2◂ [ *{ {| l |}a8◂ [ a13◂ [ {| l |}]]a3◂ [ a23◂ [ ]]a17◂ [ a9◂ [ ]{| l |}]}] )
	mov rax,rdx
	mov r14,rax
	call ETR_185

	mov rcx,QWORD [rsp-8+8*4]
	mov r11,QWORD [rsp-8+8*3]
	mov r9,QWORD [rsp-8+8*2]
	mov rax,QWORD [rsp-8+8*1]
	mov r8,r14
	mov r14,rax
	lea rsp,[rsp+8*4]
;; rsp=0 , %1047~2'(= {| l |} ) %1046~0'(= r ) %1045~1'(= {| l |} ) %1027~6'(= a17◂ [ a9◂ [ ]{| l |}] ) %1026~5'(= a3◂ [ a23◂ [ ]] ) %1024~3'(= {| l |} ) 
; _inc 0'(= r ) ⊢ 0'(= r )
	add r13,1
;; rsp=0 , %1048~0'(= r ) %1047~2'(= {| l |} ) %1045~1'(= {| l |} ) %1027~6'(= a17◂ [ a9◂ [ ]{| l |}] ) %1026~5'(= a3◂ [ a23◂ [ ]] ) %1024~3'(= {| l |} ) 
; rsp_d=0, #132 { 0'(= r ) 6'(= a17◂ [ a9◂ [ ]{| l |}] ) } ⊢ { 0'(= r ) 4'(= {| l |} ) }
	lea rsp,[rsp-8*4]
	mov QWORD [rsp+8*0],r14
	mov QWORD [rsp+8*1],r8
	mov QWORD [rsp+8*2],r9
	mov QWORD [rsp+8*3],r11
; .mov_ptn2 { 0'(= r ) 6'(= a17◂ [ a9◂ [ ]{| l |}] ) } ⊢ { 0'(= r ) 1'(= a17◂ [ a9◂ [ ]{| l |}] ) }
; .mov_ptn 6'(= a17◂ [ a9◂ [ ]{| l |}] ) ⊢ 1'(= a17◂ [ a9◂ [ ]{| l |}] )
	mov rax,rcx
	mov r14,rax
	call ETR_132

	mov r11,QWORD [rsp-8+8*4]
	mov r9,QWORD [rsp-8+8*3]
	mov r8,QWORD [rsp-8+8*2]
	mov rax,QWORD [rsp-8+8*1]
	mov r10,r14
	mov r14,rax
	lea rsp,[rsp+8*4]
;; rsp=0 , %1050~4'(= {| l |} ) %1049~0'(= r ) %1047~2'(= {| l |} ) %1045~1'(= {| l |} ) %1026~5'(= a3◂ [ a23◂ [ ]] ) %1024~3'(= {| l |} ) 
; _dec 0'(= r ) ⊢ 0'(= r )
	sub r13,1
;; rsp=0 , %1051~0'(= r ) %1050~4'(= {| l |} ) %1047~2'(= {| l |} ) %1045~1'(= {| l |} ) %1026~5'(= a3◂ [ a23◂ [ ]] ) %1024~3'(= {| l |} ) 
; » _^ .. ⊢ ..
; .. //
	mov rdi,0
	mov rsi,r8
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[rsi] 
	add rdi,rax 
	push rax
	push rsi
	mov rsi,r10
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[rsi] 
	add rdi,rax 
	push rax
	push rsi
	mov rsi,r14
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[rsi] 
	add rdi,rax 
	push rax
	push rsi
	mov rsi,r9
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[rsi] 
	add rdi,rax 
	push rax
	push rsi
	mov rsi,r13
	push rsi
	imul rsi,1
	add rdi,rsi 
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	add rdi,4
	push rdi 
	and rdi,~111b
	add rdi,16
	mov rsi,rdi 
	mov rdi,1
	xor rax,rax 
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call calloc
	mov rsp,QWORD [rsp_tmp]  
	pop rdi 
	mov QWORD [rax],rdi
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	mov rcx,rax
	lea rdi,[rax+7+rdi]
	std 
	mov QWORD [tmp],rcx 
	jmp LB_781
	LB_782: db 9,0
LB_781:
	pop rax 
LB_783:
	lea rsi,[LB_782+1-1]
	mov rcx,1
	rep movsb 
	sub rax,1
	cmp rax,0
	jnz LB_783
	jmp LB_784
	LB_785: db 64,46,0
LB_784:
	lea rsi,[LB_785+2-1]
	mov rcx,2
	rep movsb
	pop rsi 
	pop rcx
	lea rsi,[rsi+7+rcx]
	rep movsb
	jmp LB_786
	LB_787: db 32,0
LB_786:
	lea rsi,[LB_787+1-1]
	mov rcx,1
	rep movsb
	pop rsi 
	pop rcx
	lea rsi,[rsi+7+rcx]
	rep movsb
	jmp LB_788
	LB_789: db 10,0
LB_788:
	lea rsi,[LB_789+1-1]
	mov rcx,1
	rep movsb
	pop rsi 
	pop rcx
	lea rsi,[rsi+7+rcx]
	rep movsb
	pop rsi 
	pop rcx
	lea rsi,[rsi+7+rcx]
	rep movsb
	mov rcx,QWORD [tmp] 
;; rsp=0 , %1057~6'(= {| l |} ) %1056~2'(= {| l |} ) %1055~4'(= {| l |} ) %1054~1'(= {| l |} ) %1053~3'(= {| l |} ) %1052~0'(= r ) %1026~5'(= a3◂ [ a23◂ [ ]] ) 
; ∎ { 0'(= r ) 6'(= {| l |} ) }
; .dlt.ptn 2'(= {| l |} )
	mov rdi,r8
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call free 
	mov rsp,QWORD [rsp_tmp] 
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
; .dlt.ptn 4'(= {| l |} )
	mov rdi,r10
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call free 
	mov rsp,QWORD [rsp_tmp] 
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
; .dlt.ptn 1'(= {| l |} )
	mov rdi,r14
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call free 
	mov rsp,QWORD [rsp_tmp] 
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
; .dlt.ptn 3'(= {| l |} )
	mov rdi,r9
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call free 
	mov rsp,QWORD [rsp_tmp] 
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
; .dlt.ptn 5'(= a3◂ [ a23◂ [ ]] )
;	.dlt adt ⊢ _  
; .mov_ptn2 { 0'(= r ) 6'(= {| l |} ) } ⊢ { 0'(= r ) 1'(= {| l |} ) }
; .mov_ptn 6'(= {| l |} ) ⊢ 1'(= {| l |} )
	mov rax,rcx
	mov r14,rax
	ret
LB_768:
;; ? 1'(= a2◂ [ *{ {| l |}a8◂ [ a13◂ [ {| l |}]]a3◂ [ a23◂ [ ]]a17◂ [ a9◂ [ ]{| l |}]}] ) ⊢ 1(<2)◂{ }
;; rsp=0 , %1022~0'(= r ) 
	jmp LB_790
LB_790:
; $ %[ "" ] ⊢ %[ "" ]
;; rsp=0 , %1058~%[ "" ] %1022~0'(= r ) 
; ∎ { 0'(= r ) %[ "" ] }
; .mov_ptn2 { 0'(= r ) %[ "" ] } ⊢ { 0'(= r ) 1'(= {| l |} ) }
; .mov_ptn %[ "" ] ⊢ 1'(= {| l |} )
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	mov rdi,1  
	mov rsi,16
	xor rax,rax
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call calloc
	mov rsp,QWORD [rsp_tmp]  
	mov rdi,0
	mov rsi,0x_40_00_0000_0000_0000
	or rdi,rsi
	mov QWORD [rax],rdi
	mov QWORD [rax+8*1],0
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	mov r14,rax
	ret
ETR_186: ; mk_app { 0'(= a23◂ [ ] ) 1'(= a2◂ [ a23◂ [ ]] ) } ⊢ 0'(= a23◂ [ ] ) : ({ _t23 _lst◂_t23 }→_t23)
;; rsp=0 , %1060~1'(= a2◂ [ a23◂ [ ]] ) %1059~0'(= a23◂ [ ] ) 
;; ? 1'(= a2◂ [ a23◂ [ ]] ) ⊢ 0(<2)◂{ 2'(= a23◂ [ ] ) 3'(= a2◂ [ a23◂ [ ]] ) }
	mov rdi,r14
	movzx rax,BYTE [rdi+6]
	cmp rax,0
	jnz LB_791
	mov rdi,r14
	mov rdi,QWORD [rdi+8+8*0]
	mov r8,rdi
	mov rdi,r14
	mov rdi,QWORD [rdi+8+8*1]
	mov r9,rdi
;; rsp=0 , %1062~3'(= a2◂ [ a23◂ [ ]] ) %1061~2'(= a23◂ [ ] ) %1059~0'(= a23◂ [ ] ) 
; #138 { 0'(= a23◂ [ ] ) 2'(= a23◂ [ ] ) } ⊢ 2(<5)◂{ 0'(= a23◂ [ ] ) 2'(= a23◂ [ ] ) }
;; rsp=0 , %1063~2(<5)◂{ 0'(= a23◂ [ ] ) 2'(= a23◂ [ ] ) } %1062~3'(= a2◂ [ a23◂ [ ]] ) 
; rsp_d=0, #186 { 2(<5)◂{ 0'(= a23◂ [ ] ) 2'(= a23◂ [ ] ) } 3'(= a2◂ [ a23◂ [ ]] ) } ⊢ 0'(= a23◂ [ ] )
; .mov_ptn2 { 2(<5)◂{ 0'(= a23◂ [ ] ) 2'(= a23◂ [ ] ) } 3'(= a2◂ [ a23◂ [ ]] ) } ⊢ { 0'(= a23◂ [ ] ) 1'(= a2◂ [ a23◂ [ ]] ) }
; .mov_ptn 3'(= a2◂ [ a23◂ [ ]] ) ⊢ 1'(= a2◂ [ a23◂ [ ]] )
	mov rax,r9
	mov r14,rax
	mov r10,r13
; .mov_ptn 2(<5)◂{ 4'(= a23◂ [ ] ) 2'(= a23◂ [ ] ) } ⊢ 0'(= a23◂ [ ] )
	mov rax,[SS_RCD_2_TOP]
	mov rsi,[rax] 
	mov QWORD [SS_RCD_2_TOP],rsi
	mov QWORD [rax],0
	mov r9,rax
	mov rax,r10
	mov rdi,r9
	mov QWORD [rdi+8+8*0],rax
	mov rax,r8
	mov rdi,r9
	mov QWORD [rdi+8+8*1],rax
	mov rax,r9
	mov BYTE [rax+6],2
	mov r13,rax
	call ETR_186

;; rsp=0 , %1064~0'(= a23◂ [ ] ) 
; ∎ 0'(= a23◂ [ ] )
; .mov_ptn2 0'(= a23◂ [ ] ) ⊢ 0'(= a23◂ [ ] )
	ret
LB_791:
;; ? 1'(= a2◂ [ a23◂ [ ]] ) ⊢ 1(<2)◂{ }
;; rsp=0 , %1059~0'(= a23◂ [ ] ) 
; ∎ 0'(= a23◂ [ ] )
; .mov_ptn2 0'(= a23◂ [ ] ) ⊢ 0'(= a23◂ [ ] )
	ret
ETR_187:
	mov r9,0x0000_ffff_ffff_ffff
	and r9,[r13]
	call GRM_187
	ret
GRM_187:
	sub rsp,32
	mov QWORD [rsp+24],r13
	mov QWORD [rsp+16],r14 
	mov QWORD [rsp+8],r9
	lea rax,[r14+1]
	cmp rax,r9
	jg LB_795
	jmp LB_796
LB_795:
	mov r8,unt_1
	jmp LB_793
LB_796:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],95
	jnz LB_797
	jmp LB_798
LB_797:
	mov r8,unt_1
	jmp LB_793
LB_798:
	add r14,1
	jmp LB_794
LB_793:
	lea rsp,[rsp+8*0]
	jmp LB_792
LB_794:
	sub rsp,32
	mov QWORD [rsp+24],r13
	mov QWORD [rsp+16],r14 
	mov QWORD [rsp+8],r9
	lea rax,[r14+1]
	cmp rax,r9
	jg LB_803
	jmp LB_804
LB_803:
	mov r8,unt_1
	jmp LB_801
LB_804:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],32
	jnz LB_805
	jmp LB_806
LB_805:
	mov r8,unt_1
	jmp LB_801
LB_806:
	add r14,1
	jmp LB_802
LB_801:
	lea rsp,[rsp+8*0]
	jmp LB_800
LB_802:
	mov QWORD [rsp+8*0],r14
	mov r13,QWORD [rsp+16+8*0]
	mov r14,QWORD [rsp+8*0]
	jmp LB_808
LB_808
;; rsp=0 , %1068~1'(= r ) %1067~0'(= r ) 
; #22 { } ⊢ 0(<2)◂{ }
;; rsp=0 , %1069~0(<2)◂{ } %1068~1'(= r ) %1067~0'(= r ) 
; ∎ 0(<2)◂{ }
; .dlt.ptn 1'(= r )
; .dlt.ptn 0'(= r )
; .mov_ptn2 0(<2)◂{ } ⊢ 2'(= a3◂ [ *{ }] )
; .mov_ptn 0(<2)◂{ } ⊢ 2'(= a3◂ [ *{ }] )
	mov rax,unt 
	mov rax,unt_0
	mov r8,rax
	jmp LB_807
LB_807:
	movzx rax,BYTE [r8+6]
	cmp rax,0
	jnz LB_800
	pop r14
	pop r9
	add rsp,8
	pop r13
	jmp LB_799
LB_800:
	lea rax,[r14+1]
	cmp rax,r9
	jg LB_812
	jmp LB_813
LB_812:
	mov r8,unt_1
	jmp LB_810
LB_813:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],9
	jnz LB_814
	jmp LB_815
LB_814:
	mov r8,unt_1
	jmp LB_810
LB_815:
	add r14,1
	jmp LB_811
LB_810:
	lea rsp,[rsp+8*0]
	jmp LB_809
LB_811:
	mov QWORD [rsp+8*0],r14
	mov r13,QWORD [rsp+16+8*0]
	mov r14,QWORD [rsp+8*0]
	jmp LB_817
LB_817
;; rsp=0 , %1071~1'(= r ) %1070~0'(= r ) 
; #22 { } ⊢ 0(<2)◂{ }
;; rsp=0 , %1072~0(<2)◂{ } %1071~1'(= r ) %1070~0'(= r ) 
; ∎ 0(<2)◂{ }
; .dlt.ptn 1'(= r )
; .dlt.ptn 0'(= r )
; .mov_ptn2 0(<2)◂{ } ⊢ 2'(= a3◂ [ *{ }] )
; .mov_ptn 0(<2)◂{ } ⊢ 2'(= a3◂ [ *{ }] )
	mov rax,unt 
	mov rax,unt_0
	mov r8,rax
	jmp LB_816
LB_816:
	movzx rax,BYTE [r8+6]
	cmp rax,0
	jnz LB_809
	pop r14
	pop r9
	add rsp,8
	pop r13
	jmp LB_799
LB_809:
	call GRM_188
	movzx rax,BYTE [r8+6]
	cmp rax,0
	jnz LB_821
	jmp LB_822
LB_821:
	jmp LB_819
LB_822:
; .mov_ptn2 2'(= *{ } ) ⊢ { }
; .mov_ptn 2'(= *{ } ) ⊢ { }
	jmp LB_820
LB_819:
	lea rsp,[rsp+8*0]
	jmp LB_818
LB_820:
	mov QWORD [rsp+8*0],r14
	mov r13,QWORD [rsp+16+8*0]
	mov r14,QWORD [rsp+8*0]
	jmp LB_824
LB_824
;; rsp=0 , %1075~1'(= r ) %1074~0'(= r ) %1073~{ } 
; #23 { } ⊢ 1(<2)◂{ }
;; rsp=0 , %1076~1(<2)◂{ } %1075~1'(= r ) %1074~0'(= r ) %1073~{ } 
; ∎ 1(<2)◂{ }
; .dlt.ptn 1'(= r )
; .dlt.ptn 0'(= r )
; .dlt.ptn { }
; .mov_ptn2 1(<2)◂{ } ⊢ 2'(= a3◂ [ *{ }] )
; .mov_ptn 1(<2)◂{ } ⊢ 2'(= a3◂ [ *{ }] )
	mov rax,unt 
	mov rax,unt_1
	mov r8,rax
	jmp LB_823
LB_823:
	movzx rax,BYTE [r8+6]
	cmp rax,0
	jnz LB_818
	pop r14
	pop r9
	add rsp,8
	pop r13
	jmp LB_799
LB_818:
	mov QWORD [rsp+8*0],r14
	mov r13,QWORD [rsp+16+8*0]
	mov r14,QWORD [rsp+8*0]
	jmp LB_827
LB_827
;; rsp=0 , %1078~1'(= r ) %1077~0'(= r ) 
; #22 { } ⊢ 0(<2)◂{ }
;; rsp=0 , %1079~0(<2)◂{ } %1078~1'(= r ) %1077~0'(= r ) 
; ∎ 0(<2)◂{ }
; .dlt.ptn 1'(= r )
; .dlt.ptn 0'(= r )
; .mov_ptn2 0(<2)◂{ } ⊢ 2'(= a3◂ [ *{ }] )
; .mov_ptn 0(<2)◂{ } ⊢ 2'(= a3◂ [ *{ }] )
	mov rax,unt 
	mov rax,unt_0
	mov r8,rax
	jmp LB_826
LB_826:
	movzx rax,BYTE [r8+6]
	cmp rax,0
	jnz LB_825
	pop r14
	pop r9
	add rsp,8
	pop r13
	jmp LB_799
LB_825:
	pop rdi
	pop r9 
	pop r14
	pop r13
	jmp LB_799
LB_799:
	movzx rax,BYTE [r8+6]
	cmp rax,0
	jnz LB_828
	jmp LB_829
LB_828:
	lea rsp,[rsp+8*0]
	add rsp,8
	pop r9 
	pop r14 
	pop r13
	ret
LB_829:
	mov QWORD [rsp+8*0],r14
; .mov_ptn2 2'(= *{ } ) ⊢ { }
; .mov_ptn 2'(= *{ } ) ⊢ { }
	mov r13,QWORD [rsp+16+8*0]
	mov r14,QWORD [rsp+8*0]
	jmp LB_831
LB_831
;; rsp=0 , %1080~{ } %1066~1'(= r ) %1065~0'(= r ) 
; #22 { } ⊢ 0(<2)◂{ }
;; rsp=0 , %1081~0(<2)◂{ } %1080~{ } %1066~1'(= r ) %1065~0'(= r ) 
; ∎ 0(<2)◂{ }
; .dlt.ptn { }
; .dlt.ptn 1'(= r )
; .dlt.ptn 0'(= r )
; .mov_ptn2 0(<2)◂{ } ⊢ 2'(= a3◂ [ *{ }] )
; .mov_ptn 0(<2)◂{ } ⊢ 2'(= a3◂ [ *{ }] )
	mov rax,unt 
	mov rax,unt_0
	mov r8,rax
	jmp LB_830
LB_830:
	movzx rax,BYTE [r8+6]
	cmp rax,0
	jnz LB_792
	pop r14
	pop r9
	add rsp,8
	pop r13
	ret
LB_792:
	pop rdi
	pop r9 
	pop r14
	pop r13
	ret
ETR_188:
	mov r9,0x0000_ffff_ffff_ffff
	and r9,[r13]
	call GRM_188
	ret
GRM_188:
	sub rsp,32
	mov QWORD [rsp+24],r13
	mov QWORD [rsp+16],r14 
	mov QWORD [rsp+8],r9
	lea rax,[r14+1]
	cmp rax,r9
	jg LB_835
	jmp LB_836
LB_835:
	mov r8,unt_1
	jmp LB_833
LB_836:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],44
	jnz LB_837
	jmp LB_838
LB_837:
	mov r8,unt_1
	jmp LB_833
LB_838:
	add r14,1
	jmp LB_834
LB_833:
	lea rsp,[rsp+8*0]
	jmp LB_832
LB_834:
	mov QWORD [rsp+8*0],r14
	mov r13,QWORD [rsp+16+8*0]
	mov r14,QWORD [rsp+8*0]
	jmp LB_840
LB_840
;; rsp=0 , %1083~1'(= r ) %1082~0'(= r ) 
; #23 { } ⊢ 1(<2)◂{ }
;; rsp=0 , %1084~1(<2)◂{ } %1083~1'(= r ) %1082~0'(= r ) 
; ∎ 1(<2)◂{ }
; .dlt.ptn 1'(= r )
; .dlt.ptn 0'(= r )
; .mov_ptn2 1(<2)◂{ } ⊢ 2'(= a3◂ [ *{ }] )
; .mov_ptn 1(<2)◂{ } ⊢ 2'(= a3◂ [ *{ }] )
	mov rax,unt 
	mov rax,unt_1
	mov r8,rax
	jmp LB_839
LB_839:
	movzx rax,BYTE [r8+6]
	cmp rax,0
	jnz LB_832
	pop r14
	pop r9
	add rsp,8
	pop r13
	ret
LB_832:
	mov QWORD [rsp+8*0],r14
	mov r13,QWORD [rsp+16+8*0]
	mov r14,QWORD [rsp+8*0]
	jmp LB_843
LB_843
;; rsp=0 , %1086~1'(= r ) %1085~0'(= r ) 
; #22 { } ⊢ 0(<2)◂{ }
;; rsp=0 , %1087~0(<2)◂{ } %1086~1'(= r ) %1085~0'(= r ) 
; ∎ 0(<2)◂{ }
; .dlt.ptn 1'(= r )
; .dlt.ptn 0'(= r )
; .mov_ptn2 0(<2)◂{ } ⊢ 2'(= a3◂ [ *{ }] )
; .mov_ptn 0(<2)◂{ } ⊢ 2'(= a3◂ [ *{ }] )
	mov rax,unt 
	mov rax,unt_0
	mov r8,rax
	jmp LB_842
LB_842:
	movzx rax,BYTE [r8+6]
	cmp rax,0
	jnz LB_841
	pop r14
	pop r9
	add rsp,8
	pop r13
	ret
LB_841:
	pop rdi
	pop r9 
	pop r14
	pop r13
	ret
ETR_189:
	mov r9,0x0000_ffff_ffff_ffff
	and r9,[r13]
	call GRM_189
	ret
GRM_189:
	sub rsp,32
	mov QWORD [rsp+24],r13
	mov QWORD [rsp+16],r14 
	mov QWORD [rsp+8],r9
	jmp LB_846
LB_845:
	add r14,1 
LB_846:
	cmp r14,r9
	jge LB_847
	movzx rax,BYTE [r13+8+r14]
	cmp rax,9 
	jz LB_845
	cmp rax,32 
	jz LB_845
LB_847
	call GRM_77
	movzx rax,BYTE [r8+6]
	cmp rax,0
	jnz LB_850
	jmp LB_851
LB_850:
	jmp LB_848
LB_851:
	lea rsp,[rsp-8*1]
; .mov_ptn2 2'(= {| l |} ) ⊢ 8'(= {| l |} )
; .mov_ptn 2'(= {| l |} ) ⊢ 8'(= {| l |} )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_849
LB_848:
	lea rsp,[rsp+8*0]
	jmp LB_844
LB_849:
	jmp LB_853
LB_852:
	add r14,1 
LB_853:
	cmp r14,r9
	jge LB_854
	movzx rax,BYTE [r13+8+r14]
	cmp rax,9 
	jz LB_852
	cmp rax,32 
	jz LB_852
LB_854
	lea rax,[r14+1]
	cmp rax,r9
	jg LB_857
	jmp LB_858
LB_857:
	mov r8,unt_1
	jmp LB_855
LB_858:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],46
	jnz LB_859
	jmp LB_860
LB_859:
	mov r8,unt_1
	jmp LB_855
LB_860:
	add r14,1
	jmp LB_856
LB_855:
	lea rsp,[rsp+8*1]
	jmp LB_844
LB_856:
	jmp LB_862
LB_861:
	add r14,1 
LB_862:
	cmp r14,r9
	jge LB_863
	movzx rax,BYTE [r13+8+r14]
	cmp rax,9 
	jz LB_861
	cmp rax,32 
	jz LB_861
LB_863
	call GRM_189
	movzx rax,BYTE [r8+6]
	cmp rax,0
	jnz LB_866
	jmp LB_867
LB_866:
	jmp LB_864
LB_867:
	lea rsp,[rsp-8*1]
	mov r8,[r8+8]
; .mov_ptn2 2'(= a9◂ [ ] ) ⊢ 9'(= a9◂ [ ] )
; .mov_ptn 2'(= a9◂ [ ] ) ⊢ 9'(= a9◂ [ ] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_865
LB_864:
	lea rsp,[rsp+8*1]
	jmp LB_844
LB_865:
	mov QWORD [rsp+8*2],r14
	mov r13,QWORD [rsp+16+8*2]
	mov r14,QWORD [rsp+8*2]
	jmp LB_869
LB_869
;; rsp=2 , %1091~1'(= r ) %1090~0'(= r ) %1089~9'(= a9◂ [ ] ) %1088~8'(= {| l |} ) 
; #81 { 8'(= {| l |} ) 9'(= a9◂ [ ] ) } ⊢ 0(<2)◂{ 8'(= {| l |} ) 9'(= a9◂ [ ] ) }
;; rsp=2 , %1092~0(<2)◂{ 8'(= {| l |} ) 9'(= a9◂ [ ] ) } %1091~1'(= r ) %1090~0'(= r ) 
; #22 0(<2)◂{ 8'(= {| l |} ) 9'(= a9◂ [ ] ) } ⊢ 0(<2)◂0(<2)◂{ 8'(= {| l |} ) 9'(= a9◂ [ ] ) }
;; rsp=2 , %1093~0(<2)◂0(<2)◂{ 8'(= {| l |} ) 9'(= a9◂ [ ] ) } %1091~1'(= r ) %1090~0'(= r ) 
; ∎ 0(<2)◂0(<2)◂{ 8'(= {| l |} ) 9'(= a9◂ [ ] ) }
; .dlt.ptn 1'(= r )
; .dlt.ptn 0'(= r )
; .mov_ptn2 0(<2)◂0(<2)◂{ 8'(= {| l |} ) 9'(= a9◂ [ ] ) } ⊢ 2'(= a3◂ [ a9◂ [ ]] )
; .mov_ptn 0(<2)◂0(<2)◂{ 8'(= {| l |} ) 9'(= a9◂ [ ] ) } ⊢ 2'(= a3◂ [ a9◂ [ ]] )
	mov rax,[SS_RCD_2_TOP]
	mov rsi,[rax] 
	mov QWORD [SS_RCD_2_TOP],rsi
	mov QWORD [rax],0
	mov r13,rax
	mov rax,QWORD [rsp-8+8*2]
	mov rdi,r13
	mov QWORD [rdi+8+8*0],rax
	mov rax,QWORD [rsp-8+8*1]
	mov rdi,r13
	mov QWORD [rdi+8+8*1],rax
	mov rax,r13
	mov BYTE [rax+6],0
	mov rdi,rax
	mov rax,[SS_LN_TOP]
	mov rsi,[rax]
	mov QWORD [SS_LN_TOP],rsi 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	lea rsp,[rsp+8*2]
	jmp LB_868
LB_868:
	movzx rax,BYTE [r8+6]
	cmp rax,0
	jnz LB_844
	pop r14
	pop r9
	add rsp,8
	pop r13
	ret
LB_844:
	jmp LB_872
LB_871:
	add r14,1 
LB_872:
	cmp r14,r9
	jge LB_873
	movzx rax,BYTE [r13+8+r14]
	cmp rax,9 
	jz LB_871
	cmp rax,32 
	jz LB_871
LB_873
	call GRM_77
	movzx rax,BYTE [r8+6]
	cmp rax,0
	jnz LB_876
	jmp LB_877
LB_876:
	jmp LB_874
LB_877:
	lea rsp,[rsp-8*1]
; .mov_ptn2 2'(= {| l |} ) ⊢ 8'(= {| l |} )
; .mov_ptn 2'(= {| l |} ) ⊢ 8'(= {| l |} )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_875
LB_874:
	lea rsp,[rsp+8*0]
	jmp LB_870
LB_875:
	mov QWORD [rsp+8*1],r14
	mov r13,QWORD [rsp+16+8*1]
	mov r14,QWORD [rsp+8*1]
	jmp LB_879
LB_879
;; rsp=1 , %1096~1'(= r ) %1095~0'(= r ) %1094~8'(= {| l |} ) 
; #80 8'(= {| l |} ) ⊢ 1(<2)◂8'(= {| l |} )
;; rsp=1 , %1097~1(<2)◂8'(= {| l |} ) %1096~1'(= r ) %1095~0'(= r ) 
; #22 1(<2)◂8'(= {| l |} ) ⊢ 0(<2)◂1(<2)◂8'(= {| l |} )
;; rsp=1 , %1098~0(<2)◂1(<2)◂8'(= {| l |} ) %1096~1'(= r ) %1095~0'(= r ) 
; ∎ 0(<2)◂1(<2)◂8'(= {| l |} )
; .dlt.ptn 1'(= r )
; .dlt.ptn 0'(= r )
; .mov_ptn2 0(<2)◂1(<2)◂8'(= {| l |} ) ⊢ 2'(= a3◂ [ a9◂ [ ]] )
; .mov_ptn 0(<2)◂1(<2)◂8'(= {| l |} ) ⊢ 2'(= a3◂ [ a9◂ [ ]] )
	mov rax,QWORD [rsp-8+8*1]
	mov BYTE [rax+6],1
	mov rdi,rax
	mov rax,[SS_LN_TOP]
	mov rsi,[rax]
	mov QWORD [SS_LN_TOP],rsi 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	lea rsp,[rsp+8*1]
	jmp LB_878
LB_878:
	movzx rax,BYTE [r8+6]
	cmp rax,0
	jnz LB_870
	pop r14
	pop r9
	add rsp,8
	pop r13
	ret
LB_870:
	pop rdi
	pop r9 
	pop r14
	pop r13
	ret
ETR_190:
	mov r9,0x0000_ffff_ffff_ffff
	and r9,[r13]
	call GRM_190
	ret
GRM_190:
	sub rsp,32
	mov QWORD [rsp+24],r13
	mov QWORD [rsp+16],r14 
	mov QWORD [rsp+8],r9
	cmp r14,r9
	jge LB_883
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
 lea rdi,[r13+8+r14] 
	call scf_d
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	cmp rax,0 
	jz LB_883
	add r14,rsi
	push rdi
	jmp LB_884
LB_883:
	mov r8,unt_1
	jmp LB_881
LB_884:
	jmp LB_882
LB_881:
	lea rsp,[rsp+8*0]
	jmp LB_880
LB_882:
	lea rax,[r14+1]
	cmp rax,r9
	jg LB_887
	jmp LB_888
LB_887:
	mov r8,unt_1
	jmp LB_885
LB_888:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],114
	jnz LB_889
	jmp LB_890
LB_889:
	mov r8,unt_1
	jmp LB_885
LB_890:
	add r14,1
	jmp LB_886
LB_885:
	lea rsp,[rsp+8*1]
	jmp LB_880
LB_886:
	mov QWORD [rsp+8*1],r14
	mov r13,QWORD [rsp+16+8*1]
	mov r14,QWORD [rsp+8*1]
	jmp LB_892
LB_892
;; rsp=1 , %1101~1'(= r ) %1100~0'(= r ) %1099~8'(= r ) 
; #84 8'(= r ) ⊢ 0(<2)◂8'(= r )
;; rsp=1 , %1102~0(<2)◂8'(= r ) %1101~1'(= r ) %1100~0'(= r ) 
; #86 0(<2)◂8'(= r ) ⊢ 0(<2)◂0(<2)◂8'(= r )
;; rsp=1 , %1103~0(<2)◂0(<2)◂8'(= r ) %1101~1'(= r ) %1100~0'(= r ) 
; #22 0(<2)◂0(<2)◂8'(= r ) ⊢ 0(<2)◂0(<2)◂0(<2)◂8'(= r )
;; rsp=1 , %1104~0(<2)◂0(<2)◂0(<2)◂8'(= r ) %1101~1'(= r ) %1100~0'(= r ) 
; ∎ 0(<2)◂0(<2)◂0(<2)◂8'(= r )
; .dlt.ptn 1'(= r )
; .dlt.ptn 0'(= r )
; .mov_ptn2 0(<2)◂0(<2)◂0(<2)◂8'(= r ) ⊢ 2'(= a3◂ [ a11◂ [ a9◂ [ ]]] )
; .mov_ptn 0(<2)◂0(<2)◂0(<2)◂8'(= r ) ⊢ 2'(= a3◂ [ a11◂ [ a9◂ [ ]]] )
	mov rax,QWORD [rsp-8+8*1]
	mov rdi,rax
	mov rax,[SS_LN_TOP]
	mov rsi,[rax]
	mov QWORD [SS_LN_TOP],rsi 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov rdi,rax
	mov rax,[SS_LN_TOP]
	mov rsi,[rax]
	mov QWORD [SS_LN_TOP],rsi 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov rdi,rax
	mov rax,[SS_LN_TOP]
	mov rsi,[rax]
	mov QWORD [SS_LN_TOP],rsi 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	lea rsp,[rsp+8*1]
	jmp LB_891
LB_891:
	movzx rax,BYTE [r8+6]
	cmp rax,0
	jnz LB_880
	pop r14
	pop r9
	add rsp,8
	pop r13
	ret
LB_880:
	lea rax,[r14+2]
	cmp rax,r9
	jg LB_896
	jmp LB_897
LB_896:
	mov r8,unt_1
	jmp LB_894
LB_897:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],48
	jnz LB_898
	cmp BYTE [rdi+1],120
	jnz LB_898
	jmp LB_899
LB_898:
	mov r8,unt_1
	jmp LB_894
LB_899:
	add r14,2
	jmp LB_895
LB_894:
	lea rsp,[rsp+8*0]
	jmp LB_893
LB_895:
	cmp r14,r9
	jge LB_902
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
 lea rdi,[r13+8+r14] 
	call scf_x
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	cmp rax,0 
	jz LB_902
	add r14,rsi
	push rdi
	jmp LB_903
LB_902:
	mov r8,unt_1
	jmp LB_900
LB_903:
	jmp LB_901
LB_900:
	lea rsp,[rsp+8*0]
	jmp LB_893
LB_901:
	lea rax,[r14+1]
	cmp rax,r9
	jg LB_906
	jmp LB_907
LB_906:
	mov r8,unt_1
	jmp LB_904
LB_907:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],114
	jnz LB_908
	jmp LB_909
LB_908:
	mov r8,unt_1
	jmp LB_904
LB_909:
	add r14,1
	jmp LB_905
LB_904:
	lea rsp,[rsp+8*1]
	jmp LB_893
LB_905:
	mov QWORD [rsp+8*1],r14
	mov r13,QWORD [rsp+16+8*1]
	mov r14,QWORD [rsp+8*1]
	jmp LB_911
LB_911
;; rsp=1 , %1107~1'(= r ) %1106~0'(= r ) %1105~8'(= r ) 
; #84 8'(= r ) ⊢ 0(<2)◂8'(= r )
;; rsp=1 , %1108~0(<2)◂8'(= r ) %1107~1'(= r ) %1106~0'(= r ) 
; #86 0(<2)◂8'(= r ) ⊢ 0(<2)◂0(<2)◂8'(= r )
;; rsp=1 , %1109~0(<2)◂0(<2)◂8'(= r ) %1107~1'(= r ) %1106~0'(= r ) 
; #22 0(<2)◂0(<2)◂8'(= r ) ⊢ 0(<2)◂0(<2)◂0(<2)◂8'(= r )
;; rsp=1 , %1110~0(<2)◂0(<2)◂0(<2)◂8'(= r ) %1107~1'(= r ) %1106~0'(= r ) 
; ∎ 0(<2)◂0(<2)◂0(<2)◂8'(= r )
; .dlt.ptn 1'(= r )
; .dlt.ptn 0'(= r )
; .mov_ptn2 0(<2)◂0(<2)◂0(<2)◂8'(= r ) ⊢ 2'(= a3◂ [ a11◂ [ a9◂ [ ]]] )
; .mov_ptn 0(<2)◂0(<2)◂0(<2)◂8'(= r ) ⊢ 2'(= a3◂ [ a11◂ [ a9◂ [ ]]] )
	mov rax,QWORD [rsp-8+8*1]
	mov rdi,rax
	mov rax,[SS_LN_TOP]
	mov rsi,[rax]
	mov QWORD [SS_LN_TOP],rsi 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov rdi,rax
	mov rax,[SS_LN_TOP]
	mov rsi,[rax]
	mov QWORD [SS_LN_TOP],rsi 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov rdi,rax
	mov rax,[SS_LN_TOP]
	mov rsi,[rax]
	mov QWORD [SS_LN_TOP],rsi 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	lea rsp,[rsp+8*1]
	jmp LB_910
LB_910:
	movzx rax,BYTE [r8+6]
	cmp rax,0
	jnz LB_893
	pop r14
	pop r9
	add rsp,8
	pop r13
	ret
LB_893:
	call GRM_67
	movzx rax,BYTE [r8+6]
	cmp rax,0
	jnz LB_915
	jmp LB_916
LB_915:
	jmp LB_913
LB_916:
	lea rsp,[rsp-8*1]
; .mov_ptn2 2'(= {| l |} ) ⊢ 8'(= {| l |} )
; .mov_ptn 2'(= {| l |} ) ⊢ 8'(= {| l |} )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_914
LB_913:
	lea rsp,[rsp+8*0]
	jmp LB_912
LB_914:
	mov QWORD [rsp+8*1],r14
	mov r13,QWORD [rsp+16+8*1]
	mov r14,QWORD [rsp+8*1]
	jmp LB_918
LB_918
;; rsp=1 , %1113~1'(= r ) %1112~0'(= r ) %1111~8'(= {| l |} ) 
; #83 8'(= {| l |} ) ⊢ 1(<2)◂8'(= {| l |} )
;; rsp=1 , %1114~1(<2)◂8'(= {| l |} ) %1113~1'(= r ) %1112~0'(= r ) 
; #86 1(<2)◂8'(= {| l |} ) ⊢ 0(<2)◂1(<2)◂8'(= {| l |} )
;; rsp=1 , %1115~0(<2)◂1(<2)◂8'(= {| l |} ) %1113~1'(= r ) %1112~0'(= r ) 
; #22 0(<2)◂1(<2)◂8'(= {| l |} ) ⊢ 0(<2)◂0(<2)◂1(<2)◂8'(= {| l |} )
;; rsp=1 , %1116~0(<2)◂0(<2)◂1(<2)◂8'(= {| l |} ) %1113~1'(= r ) %1112~0'(= r ) 
; ∎ 0(<2)◂0(<2)◂1(<2)◂8'(= {| l |} )
; .dlt.ptn 1'(= r )
; .dlt.ptn 0'(= r )
; .mov_ptn2 0(<2)◂0(<2)◂1(<2)◂8'(= {| l |} ) ⊢ 2'(= a3◂ [ a11◂ [ a9◂ [ ]]] )
; .mov_ptn 0(<2)◂0(<2)◂1(<2)◂8'(= {| l |} ) ⊢ 2'(= a3◂ [ a11◂ [ a9◂ [ ]]] )
	mov rax,QWORD [rsp-8+8*1]
	mov BYTE [rax+6],1
	mov rdi,rax
	mov rax,[SS_LN_TOP]
	mov rsi,[rax]
	mov QWORD [SS_LN_TOP],rsi 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov rdi,rax
	mov rax,[SS_LN_TOP]
	mov rsi,[rax]
	mov QWORD [SS_LN_TOP],rsi 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	lea rsp,[rsp+8*1]
	jmp LB_917
LB_917:
	movzx rax,BYTE [r8+6]
	cmp rax,0
	jnz LB_912
	pop r14
	pop r9
	add rsp,8
	pop r13
	ret
LB_912:
	call GRM_189
	movzx rax,BYTE [r8+6]
	cmp rax,0
	jnz LB_922
	jmp LB_923
LB_922:
	jmp LB_920
LB_923:
	lea rsp,[rsp-8*1]
	mov r8,[r8+8]
; .mov_ptn2 2'(= a9◂ [ ] ) ⊢ 8'(= a9◂ [ ] )
; .mov_ptn 2'(= a9◂ [ ] ) ⊢ 8'(= a9◂ [ ] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_921
LB_920:
	lea rsp,[rsp+8*0]
	jmp LB_919
LB_921:
	mov QWORD [rsp+8*1],r14
	mov r13,QWORD [rsp+16+8*1]
	mov r14,QWORD [rsp+8*1]
	jmp LB_925
LB_925
;; rsp=1 , %1119~1'(= r ) %1118~0'(= r ) %1117~8'(= a9◂ [ ] ) 
; #85 8'(= a9◂ [ ] ) ⊢ 1(<2)◂8'(= a9◂ [ ] )
;; rsp=1 , %1120~1(<2)◂8'(= a9◂ [ ] ) %1119~1'(= r ) %1118~0'(= r ) 
; #22 1(<2)◂8'(= a9◂ [ ] ) ⊢ 0(<2)◂1(<2)◂8'(= a9◂ [ ] )
;; rsp=1 , %1121~0(<2)◂1(<2)◂8'(= a9◂ [ ] ) %1119~1'(= r ) %1118~0'(= r ) 
; ∎ 0(<2)◂1(<2)◂8'(= a9◂ [ ] )
; .dlt.ptn 1'(= r )
; .dlt.ptn 0'(= r )
; .mov_ptn2 0(<2)◂1(<2)◂8'(= a9◂ [ ] ) ⊢ 2'(= a3◂ [ a11◂ [ a9◂ [ ]]] )
; .mov_ptn 0(<2)◂1(<2)◂8'(= a9◂ [ ] ) ⊢ 2'(= a3◂ [ a11◂ [ a9◂ [ ]]] )
	mov rax,QWORD [rsp-8+8*1]
	mov rdi,rax
	mov rax,[SS_LN_TOP]
	mov rsi,[rax]
	mov QWORD [SS_LN_TOP],rsi 
	mov QWORD [rax],0
	mov BYTE [rax+6],1
	mov QWORD [rax+8],rdi
	mov rdi,rax
	mov rax,[SS_LN_TOP]
	mov rsi,[rax]
	mov QWORD [SS_LN_TOP],rsi 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	lea rsp,[rsp+8*1]
	jmp LB_924
LB_924:
	movzx rax,BYTE [r8+6]
	cmp rax,0
	jnz LB_919
	pop r14
	pop r9
	add rsp,8
	pop r13
	ret
LB_919:
	pop rdi
	pop r9 
	pop r14
	pop r13
	ret
ETR_191:
	mov r9,0x0000_ffff_ffff_ffff
	and r9,[r13]
	call GRM_191
	ret
GRM_191:
	sub rsp,32
	mov QWORD [rsp+24],r13
	mov QWORD [rsp+16],r14 
	mov QWORD [rsp+8],r9
	jmp LB_928
LB_927:
	add r14,1 
LB_928:
	cmp r14,r9
	jge LB_929
	movzx rax,BYTE [r13+8+r14]
	cmp rax,9 
	jz LB_927
	cmp rax,32 
	jz LB_927
LB_929
	lea rax,[r14+1]
	cmp rax,r9
	jg LB_932
	jmp LB_933
LB_932:
	mov r8,unt_1
	jmp LB_930
LB_933:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],10
	jnz LB_934
	jmp LB_935
LB_934:
	mov r8,unt_1
	jmp LB_930
LB_935:
	add r14,1
	jmp LB_931
LB_930:
	lea rsp,[rsp+8*0]
	jmp LB_926
LB_931:
	jmp LB_937
LB_936:
	add r14,1 
LB_937:
	cmp r14,r9
	jge LB_938
	movzx rax,BYTE [r13+8+r14]
	cmp rax,9 
	jz LB_936
	cmp rax,32 
	jz LB_936
LB_938
	call GRM_191
	movzx rax,BYTE [r8+6]
	cmp rax,0
	jnz LB_941
	jmp LB_942
LB_941:
	jmp LB_939
LB_942:
	lea rsp,[rsp-8*1]
	mov r8,[r8+8]
; .mov_ptn2 2'(= r ) ⊢ 8'(= r )
; .mov_ptn 2'(= r ) ⊢ 8'(= r )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_940
LB_939:
	lea rsp,[rsp+8*0]
	jmp LB_926
LB_940:
	mov QWORD [rsp+8*1],r14
	mov r13,QWORD [rsp+16+8*1]
	mov r14,QWORD [rsp+8*1]
	jmp LB_944
LB_944
;; rsp=1 , %1124~1'(= r ) %1123~0'(= r ) %1122~8'(= r ) 
; _inc 8'(= r ) ⊢ 8'(= r )
	add QWORD [rsp-8+8*1],1
;; rsp=1 , %1125~8'(= r ) %1124~1'(= r ) %1123~0'(= r ) 
; #22 8'(= r ) ⊢ 0(<2)◂8'(= r )
;; rsp=1 , %1126~0(<2)◂8'(= r ) %1124~1'(= r ) %1123~0'(= r ) 
; ∎ 0(<2)◂8'(= r )
; .dlt.ptn 1'(= r )
; .dlt.ptn 0'(= r )
; .mov_ptn2 0(<2)◂8'(= r ) ⊢ 2'(= a3◂ [ r] )
; .mov_ptn 0(<2)◂8'(= r ) ⊢ 2'(= a3◂ [ r] )
	mov rax,QWORD [rsp-8+8*1]
	mov rdi,rax
	mov rax,[SS_LN_TOP]
	mov rsi,[rax]
	mov QWORD [SS_LN_TOP],rsi 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	lea rsp,[rsp+8*1]
	jmp LB_943
LB_943:
	movzx rax,BYTE [r8+6]
	cmp rax,0
	jnz LB_926
	pop r14
	pop r9
	add rsp,8
	pop r13
	ret
LB_926:
	jmp LB_947
LB_946:
	add r14,1 
LB_947:
	cmp r14,r9
	jge LB_948
	movzx rax,BYTE [r13+8+r14]
	cmp rax,9 
	jz LB_946
	cmp rax,32 
	jz LB_946
LB_948
	lea rax,[r14+1]
	cmp rax,r9
	jg LB_951
	jmp LB_952
LB_951:
	mov r8,unt_1
	jmp LB_949
LB_952:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],10
	jnz LB_953
	jmp LB_954
LB_953:
	mov r8,unt_1
	jmp LB_949
LB_954:
	add r14,1
	jmp LB_950
LB_949:
	lea rsp,[rsp+8*0]
	jmp LB_945
LB_950:
	mov QWORD [rsp+8*0],r14
	mov r13,QWORD [rsp+16+8*0]
	mov r14,QWORD [rsp+8*0]
	jmp LB_956
LB_956
;; rsp=0 , %1128~1'(= r ) %1127~0'(= r ) 
; #22 %[ 1r ] ⊢ 0(<2)◂%[ 1r ]
;; rsp=0 , %1129~0(<2)◂%[ 1r ] %1128~1'(= r ) %1127~0'(= r ) 
; ∎ 0(<2)◂%[ 1r ]
; .dlt.ptn 1'(= r )
; .dlt.ptn 0'(= r )
; .mov_ptn2 0(<2)◂%[ 1r ] ⊢ 2'(= a3◂ [ r] )
; .mov_ptn 0(<2)◂%[ 1r ] ⊢ 2'(= a3◂ [ r] )
	mov rax,1
	mov rdi,rax
	mov rax,[SS_LN_TOP]
	mov rsi,[rax]
	mov QWORD [SS_LN_TOP],rsi 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	jmp LB_955
LB_955:
	movzx rax,BYTE [r8+6]
	cmp rax,0
	jnz LB_945
	pop r14
	pop r9
	add rsp,8
	pop r13
	ret
LB_945:
	pop rdi
	pop r9 
	pop r14
	pop r13
	ret
ETR_195: ; mk_prs_err { 0'(= r ) 1'(= r ) 2'(= {| l |} ) } ⊢ 0'(= a35◂ [ q0] ) : ({ _r64 _r64 _s8 }→_t35◂2322'(1))
;; rsp=0 , %1145~2'(= {| l |} ) %1144~1'(= r ) %1143~0'(= r ) 
; #20 { } ⊢ 1(<2)◂{ }
;; rsp=0 , %1146~1(<2)◂{ } %1145~2'(= {| l |} ) %1144~1'(= r ) %1143~0'(= r ) 
; #21 { { 0'(= r ) 1'(= r ) 2'(= {| l |} ) } 1(<2)◂{ } } ⊢ 0(<2)◂{ { 0'(= r ) 1'(= r ) 2'(= {| l |} ) } 1(<2)◂{ } }
;; rsp=0 , %1147~0(<2)◂{ { 0'(= r ) 1'(= r ) 2'(= {| l |} ) } 1(<2)◂{ } } 
; #192 0(<2)◂{ { 0'(= r ) 1'(= r ) 2'(= {| l |} ) } 1(<2)◂{ } } ⊢ 1(<2)◂0(<2)◂{ { 0'(= r ) 1'(= r ) 2'(= {| l |} ) } 1(<2)◂{ } }
;; rsp=0 , %1148~1(<2)◂0(<2)◂{ { 0'(= r ) 1'(= r ) 2'(= {| l |} ) } 1(<2)◂{ } } 
; ∎ 1(<2)◂0(<2)◂{ { 0'(= r ) 1'(= r ) 2'(= {| l |} ) } 1(<2)◂{ } }
; .mov_ptn2 1(<2)◂0(<2)◂{ { 0'(= r ) 1'(= r ) 2'(= {| l |} ) } 1(<2)◂{ } } ⊢ 0'(= a35◂ [ q0] )
	mov r9,r13
; .mov_ptn 1(<2)◂0(<2)◂{ { 3'(= r ) 1'(= r ) 2'(= {| l |} ) } 1(<2)◂{ } } ⊢ 0'(= a35◂ [ q0] )
	mov rax,[SS_RCD_2_TOP]
	mov rsi,[rax] 
	mov QWORD [SS_RCD_2_TOP],rsi
	mov QWORD [rax],0
	mov r10,rax
	mov rax,[SS_RCD_3_TOP]
	mov rsi,[rax] 
	mov QWORD [SS_RCD_3_TOP],rsi
	mov QWORD [rax],0
	mov r11,rax
	mov rax,r9
	mov rdi,r11
	mov QWORD [rdi+8+8*0],rax
	mov rax,r14
	mov rdi,r11
	mov QWORD [rdi+8+8*1],rax
	mov rax,r8
	mov rdi,r11
	mov QWORD [rdi+8+8*2],rax
	mov rax,r11
	mov rdi,r10
	mov QWORD [rdi+8+8*0],rax
	mov rax,unt 
	mov rax,unt_1
	mov rdi,r10
	mov QWORD [rdi+8+8*1],rax
	mov rax,r10
	mov BYTE [rax+6],0
	mov rdi,rax
	mov rax,[SS_LN_TOP]
	mov rsi,[rax]
	mov QWORD [SS_LN_TOP],rsi 
	mov QWORD [rax],0
	mov BYTE [rax+6],1
	mov QWORD [rax+8],rdi
	mov r13,rax
	ret
ETR_196: ; pnt_prs_err 0'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 0'(= {| l |} ) : (_lst◂{ _r64 _r64 _s8 }→_s8)
;; rsp=0 , %1149~0'(= a2◂ [ *{ rr{| l |}}] ) 
;; ? 0'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 0(<2)◂{ { 2'(= r ) 3'(= r ) 4'(= {| l |} ) } 5'(= a2◂ [ *{ rr{| l |}}] ) }
	mov rdi,r13
	movzx rax,BYTE [rdi+6]
	cmp rax,0
	jnz LB_957
	mov rdi,r13
	mov rdi,QWORD [rdi+8+8*0]
	mov r14,rdi
	mov rdi,r14
	mov rdi,QWORD [rdi+8+8*0]
	mov r8,rdi
	mov rdi,r14
	mov rdi,QWORD [rdi+8+8*1]
	mov r9,rdi
	mov rdi,r14
	mov rdi,QWORD [rdi+8+8*2]
	mov r10,rdi
	mov rdi,r13
	mov rdi,QWORD [rdi+8+8*1]
	mov r11,rdi
;; rsp=0 , %1153~5'(= a2◂ [ *{ rr{| l |}}] ) %1152~4'(= {| l |} ) %1151~3'(= r ) %1150~2'(= r ) 
; rsp_d=0, #196 5'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 0'(= {| l |} )
	lea rsp,[rsp-8*3]
	mov QWORD [rsp+8*0],r8
	mov QWORD [rsp+8*1],r9
	mov QWORD [rsp+8*2],r10
; .mov_ptn2 5'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 0'(= a2◂ [ *{ rr{| l |}}] )
; .mov_ptn 5'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 0'(= a2◂ [ *{ rr{| l |}}] )
	mov rax,r11
	mov r13,rax
	call ETR_196

	mov r10,QWORD [rsp-8+8*3]
	mov r9,QWORD [rsp-8+8*2]
	mov r8,QWORD [rsp-8+8*1]
	lea rsp,[rsp+8*3]
;; rsp=0 , %1154~0'(= {| l |} ) %1152~4'(= {| l |} ) %1151~3'(= r ) %1150~2'(= r ) 
; » _^ .. ⊢ ..
; .. //
	mov rdi,0
	mov rsi,r13
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[rsi] 
	add rdi,rax 
	push rax
	push rsi
	mov rsi,r10
	mov rax,0x0000_ffff_ffff_ffff 
	and rax,[rsi] 
	add rdi,rax 
	push rax
	push rsi
	sub rsp,128
	mov rdi,rsp
	mov rsi,fmt_d
	mov rdx,r9
	mov QWORD [tmp],rdi
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call sprintf
	mov rsp,QWORD [rsp_tmp]  
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	push rax 
	add rax,QWORD [tmp]
	mov rdi,rax
	sub rsp,128
	mov rdi,rsp
	mov rsi,fmt_d
	mov rdx,r8
	mov QWORD [tmp],rdi
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call sprintf
	mov rsp,QWORD [rsp_tmp]  
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	push rax 
	add rax,QWORD [tmp]
	mov rdi,rax
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	add rdi,11
	push rdi 
	and rdi,~111b
	add rdi,16
	mov rsi,rdi 
	mov rdi,1
	xor rax,rax 
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call calloc
	mov rsp,QWORD [rsp_tmp]  
	pop rdi 
	mov QWORD [rax],rdi
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	mov r14,rax
	lea rdi,[rax+7+rdi]
	std 
	mov QWORD [tmp],rcx 
	jmp LB_958
	LB_959: db 112,114,115,95,101,114,114,32,0
LB_958:
	lea rsi,[LB_959+8-1]
	mov rcx,8
	rep movsb
	pop rcx
	lea rsi,[rsp+rcx-1]
	rep movsb
	add rsp,128
	jmp LB_960
	LB_961: db 45,0
LB_960:
	lea rsi,[LB_961+1-1]
	mov rcx,1
	rep movsb
	pop rcx
	lea rsi,[rsp+rcx-1]
	rep movsb
	add rsp,128
	jmp LB_962
	LB_963: db 58,0
LB_962:
	lea rsi,[LB_963+1-1]
	mov rcx,1
	rep movsb
	pop rsi 
	pop rcx
	lea rsi,[rsi+7+rcx]
	rep movsb
	jmp LB_964
	LB_965: db 10,0
LB_964:
	lea rsi,[LB_965+1-1]
	mov rcx,1
	rep movsb
	pop rsi 
	pop rcx
	lea rsi,[rsi+7+rcx]
	rep movsb
	mov rcx,QWORD [tmp] 
;; rsp=0 , %1159~1'(= {| l |} ) %1158~0'(= {| l |} ) %1157~4'(= {| l |} ) %1156~3'(= r ) %1155~2'(= r ) 
; ∎ 1'(= {| l |} )
; .dlt.ptn 0'(= {| l |} )
	mov rdi,r13
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call free 
	mov rsp,QWORD [rsp_tmp] 
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
; .dlt.ptn 4'(= {| l |} )
	mov rdi,r10
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call free 
	mov rsp,QWORD [rsp_tmp] 
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
; .dlt.ptn 3'(= r )
; .dlt.ptn 2'(= r )
; .mov_ptn2 1'(= {| l |} ) ⊢ 0'(= {| l |} )
; .mov_ptn 1'(= {| l |} ) ⊢ 0'(= {| l |} )
	mov rax,r14
	mov r13,rax
	ret
LB_957:
;; ? 0'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 1(<2)◂{ }
;; rsp=0 , 
	jmp LB_966
LB_966:
; $ %[ "" ] ⊢ %[ "" ]
;; rsp=0 , %1160~%[ "" ] 
; ∎ %[ "" ]
; .mov_ptn2 %[ "" ] ⊢ 0'(= {| l |} )
; .mov_ptn %[ "" ] ⊢ 0'(= {| l |} )
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	mov rdi,1  
	mov rsi,16
	xor rax,rax
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call calloc
	mov rsp,QWORD [rsp_tmp]  
	mov rdi,0
	mov rsi,0x_40_00_0000_0000_0000
	or rdi,rsi
	mov QWORD [rax],rdi
	mov QWORD [rax+8*1],0
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	mov r13,rax
	ret
ETR_197:
	mov r9,0x0000_ffff_ffff_ffff
	and r9,[r13]
	call GRM_197
	ret
GRM_197:
	sub rsp,32
	mov QWORD [rsp+24],r13
	mov QWORD [rsp+16],r14 
	mov QWORD [rsp+8],r9
	jmp LB_969
LB_968:
	add r14,1 
LB_969:
	cmp r14,r9
	jge LB_970
	movzx rax,BYTE [r13+8+r14]
	cmp rax,9 
	jz LB_968
	cmp rax,32 
	jz LB_968
LB_970
	lea rax,[r14+1]
	cmp rax,r9
	jg LB_973
	jmp LB_974
LB_973:
	mov r8,unt_1
	jmp LB_971
LB_974:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],123
	jnz LB_975
	jmp LB_976
LB_975:
	mov r8,unt_1
	jmp LB_971
LB_976:
	add r14,1
	jmp LB_972
LB_971:
	lea rsp,[rsp+8*0]
	jmp LB_967
LB_972:
	jmp LB_978
LB_977:
	add r14,1 
LB_978:
	cmp r14,r9
	jge LB_979
	movzx rax,BYTE [r13+8+r14]
	cmp rax,9 
	jz LB_977
	cmp rax,32 
	jz LB_977
LB_979
	call GRM_198
	movzx rax,BYTE [r8+6]
	cmp rax,0
	jnz LB_982
	jmp LB_983
LB_982:
	jmp LB_980
LB_983:
	lea rsp,[rsp-8*1]
	mov r8,[r8+8]
; .mov_ptn2 2'(= a2◂ [ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]] ) ⊢ 8'(= a2◂ [ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]] )
; .mov_ptn 2'(= a2◂ [ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]] ) ⊢ 8'(= a2◂ [ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_981
LB_980:
	lea rsp,[rsp+8*0]
	jmp LB_967
LB_981:
	jmp LB_985
LB_984:
	add r14,1 
LB_985:
	cmp r14,r9
	jge LB_986
	movzx rax,BYTE [r13+8+r14]
	cmp rax,9 
	jz LB_984
	cmp rax,32 
	jz LB_984
LB_986
	lea rax,[r14+1]
	cmp rax,r9
	jg LB_989
	jmp LB_990
LB_989:
	mov r8,unt_1
	jmp LB_987
LB_990:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],125
	jnz LB_991
	jmp LB_992
LB_991:
	mov r8,unt_1
	jmp LB_987
LB_992:
	add r14,1
	jmp LB_988
LB_987:
	lea rsp,[rsp+8*1]
	jmp LB_967
LB_988:
	mov QWORD [rsp+8*1],r14
	mov r13,QWORD [rsp+16+8*1]
	mov r14,QWORD [rsp+8*1]
	jmp LB_994
LB_994
;; rsp=1 , %1163~1'(= r ) %1162~0'(= r ) %1161~8'(= a2◂ [ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]] ) 
; #79 8'(= a2◂ [ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]] ) ⊢ 0(<2)◂8'(= a2◂ [ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]] )
;; rsp=1 , %1164~0(<2)◂8'(= a2◂ [ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]] ) %1163~1'(= r ) %1162~0'(= r ) 
; #22 0(<2)◂8'(= a2◂ [ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]] ) ⊢ 0(<2)◂0(<2)◂8'(= a2◂ [ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]] )
;; rsp=1 , %1165~0(<2)◂0(<2)◂8'(= a2◂ [ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]] ) %1163~1'(= r ) %1162~0'(= r ) 
; ∎ 0(<2)◂0(<2)◂8'(= a2◂ [ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]] )
; .dlt.ptn 1'(= r )
; .dlt.ptn 0'(= r )
; .mov_ptn2 0(<2)◂0(<2)◂8'(= a2◂ [ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]] ) ⊢ 2'(= a3◂ [ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]] )
; .mov_ptn 0(<2)◂0(<2)◂8'(= a2◂ [ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]] ) ⊢ 2'(= a3◂ [ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]] )
	mov rax,QWORD [rsp-8+8*1]
	mov rdi,rax
	mov rax,[SS_LN_TOP]
	mov rsi,[rax]
	mov QWORD [SS_LN_TOP],rsi 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov rdi,rax
	mov rax,[SS_LN_TOP]
	mov rsi,[rax]
	mov QWORD [SS_LN_TOP],rsi 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	lea rsp,[rsp+8*1]
	jmp LB_993
LB_993:
	movzx rax,BYTE [r8+6]
	cmp rax,0
	jnz LB_967
	pop r14
	pop r9
	add rsp,8
	pop r13
	ret
LB_967:
	jmp LB_997
LB_996:
	add r14,1 
LB_997:
	cmp r14,r9
	jge LB_998
	movzx rax,BYTE [r13+8+r14]
	cmp rax,9 
	jz LB_996
	cmp rax,32 
	jz LB_996
LB_998
	call GRM_200
	movzx rax,BYTE [r8+6]
	cmp rax,0
	jnz LB_1001
	jmp LB_1002
LB_1001:
	jmp LB_999
LB_1002:
	lea rsp,[rsp-8*1]
	mov r8,[r8+8]
; .mov_ptn2 2'(= a14◂ [ a9◂ [ ]{| l |}] ) ⊢ 8'(= a14◂ [ a9◂ [ ]{| l |}] )
; .mov_ptn 2'(= a14◂ [ a9◂ [ ]{| l |}] ) ⊢ 8'(= a14◂ [ a9◂ [ ]{| l |}] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_1000
LB_999:
	lea rsp,[rsp+8*0]
	jmp LB_995
LB_1000:
	mov QWORD [rsp+8*1],r14
	mov r13,QWORD [rsp+16+8*1]
	mov r14,QWORD [rsp+8*1]
	jmp LB_1004
LB_1004
;; rsp=1 , %1168~1'(= r ) %1167~0'(= r ) %1166~8'(= a14◂ [ a9◂ [ ]{| l |}] ) 
; #78 8'(= a14◂ [ a9◂ [ ]{| l |}] ) ⊢ 1(<2)◂8'(= a14◂ [ a9◂ [ ]{| l |}] )
;; rsp=1 , %1169~1(<2)◂8'(= a14◂ [ a9◂ [ ]{| l |}] ) %1168~1'(= r ) %1167~0'(= r ) 
; #22 1(<2)◂8'(= a14◂ [ a9◂ [ ]{| l |}] ) ⊢ 0(<2)◂1(<2)◂8'(= a14◂ [ a9◂ [ ]{| l |}] )
;; rsp=1 , %1170~0(<2)◂1(<2)◂8'(= a14◂ [ a9◂ [ ]{| l |}] ) %1168~1'(= r ) %1167~0'(= r ) 
; ∎ 0(<2)◂1(<2)◂8'(= a14◂ [ a9◂ [ ]{| l |}] )
; .dlt.ptn 1'(= r )
; .dlt.ptn 0'(= r )
; .mov_ptn2 0(<2)◂1(<2)◂8'(= a14◂ [ a9◂ [ ]{| l |}] ) ⊢ 2'(= a3◂ [ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]] )
; .mov_ptn 0(<2)◂1(<2)◂8'(= a14◂ [ a9◂ [ ]{| l |}] ) ⊢ 2'(= a3◂ [ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]] )
	mov rax,QWORD [rsp-8+8*1]
	mov rdi,rax
	mov rax,[SS_LN_TOP]
	mov rsi,[rax]
	mov QWORD [SS_LN_TOP],rsi 
	mov QWORD [rax],0
	mov BYTE [rax+6],1
	mov QWORD [rax+8],rdi
	mov rdi,rax
	mov rax,[SS_LN_TOP]
	mov rsi,[rax]
	mov QWORD [SS_LN_TOP],rsi 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	lea rsp,[rsp+8*1]
	jmp LB_1003
LB_1003:
	movzx rax,BYTE [r8+6]
	cmp rax,0
	jnz LB_995
	pop r14
	pop r9
	add rsp,8
	pop r13
	ret
LB_995:
	pop rdi
	pop r9 
	pop r14
	pop r13
	ret
ETR_198:
	mov r9,0x0000_ffff_ffff_ffff
	and r9,[r13]
	call GRM_198
	ret
GRM_198:
	sub rsp,32
	mov QWORD [rsp+24],r13
	mov QWORD [rsp+16],r14 
	mov QWORD [rsp+8],r9
	jmp LB_1007
LB_1006:
	add r14,1 
LB_1007:
	cmp r14,r9
	jge LB_1008
	movzx rax,BYTE [r13+8+r14]
	cmp rax,9 
	jz LB_1006
	cmp rax,32 
	jz LB_1006
LB_1008
	call GRM_197
	movzx rax,BYTE [r8+6]
	cmp rax,0
	jnz LB_1011
	jmp LB_1012
LB_1011:
	jmp LB_1009
LB_1012:
	lea rsp,[rsp-8*1]
	mov r8,[r8+8]
; .mov_ptn2 2'(= a8◂ [ a14◂ [ a9◂ [ ]{| l |}]] ) ⊢ 8'(= a8◂ [ a14◂ [ a9◂ [ ]{| l |}]] )
; .mov_ptn 2'(= a8◂ [ a14◂ [ a9◂ [ ]{| l |}]] ) ⊢ 8'(= a8◂ [ a14◂ [ a9◂ [ ]{| l |}]] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_1010
LB_1009:
	lea rsp,[rsp+8*0]
	jmp LB_1005
LB_1010:
	jmp LB_1014
LB_1013:
	add r14,1 
LB_1014:
	cmp r14,r9
	jge LB_1015
	movzx rax,BYTE [r13+8+r14]
	cmp rax,9 
	jz LB_1013
	cmp rax,32 
	jz LB_1013
LB_1015
	call GRM_198
	movzx rax,BYTE [r8+6]
	cmp rax,0
	jnz LB_1018
	jmp LB_1019
LB_1018:
	jmp LB_1016
LB_1019:
	lea rsp,[rsp-8*1]
	mov r8,[r8+8]
; .mov_ptn2 2'(= a2◂ [ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]] ) ⊢ 9'(= a2◂ [ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]] )
; .mov_ptn 2'(= a2◂ [ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]] ) ⊢ 9'(= a2◂ [ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_1017
LB_1016:
	lea rsp,[rsp+8*1]
	jmp LB_1005
LB_1017:
	mov QWORD [rsp+8*2],r14
	mov r13,QWORD [rsp+16+8*2]
	mov r14,QWORD [rsp+8*2]
	jmp LB_1021
LB_1021
;; rsp=2 , %1174~1'(= r ) %1173~0'(= r ) %1172~9'(= a2◂ [ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]] ) %1171~8'(= a8◂ [ a14◂ [ a9◂ [ ]{| l |}]] ) 
; #21 { 8'(= a8◂ [ a14◂ [ a9◂ [ ]{| l |}]] ) 9'(= a2◂ [ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]] ) } ⊢ 0(<2)◂{ 8'(= a8◂ [ a14◂ [ a9◂ [ ]{| l |}]] ) 9'(= a2◂ [ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]] ) }
;; rsp=2 , %1175~0(<2)◂{ 8'(= a8◂ [ a14◂ [ a9◂ [ ]{| l |}]] ) 9'(= a2◂ [ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]] ) } %1174~1'(= r ) %1173~0'(= r ) 
; #22 0(<2)◂{ 8'(= a8◂ [ a14◂ [ a9◂ [ ]{| l |}]] ) 9'(= a2◂ [ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]] ) } ⊢ 0(<2)◂0(<2)◂{ 8'(= a8◂ [ a14◂ [ a9◂ [ ]{| l |}]] ) 9'(= a2◂ [ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]] ) }
;; rsp=2 , %1176~0(<2)◂0(<2)◂{ 8'(= a8◂ [ a14◂ [ a9◂ [ ]{| l |}]] ) 9'(= a2◂ [ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]] ) } %1174~1'(= r ) %1173~0'(= r ) 
; ∎ 0(<2)◂0(<2)◂{ 8'(= a8◂ [ a14◂ [ a9◂ [ ]{| l |}]] ) 9'(= a2◂ [ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]] ) }
; .dlt.ptn 1'(= r )
; .dlt.ptn 0'(= r )
; .mov_ptn2 0(<2)◂0(<2)◂{ 8'(= a8◂ [ a14◂ [ a9◂ [ ]{| l |}]] ) 9'(= a2◂ [ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]] ) } ⊢ 2'(= a3◂ [ a2◂ [ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]]] )
; .mov_ptn 0(<2)◂0(<2)◂{ 8'(= a8◂ [ a14◂ [ a9◂ [ ]{| l |}]] ) 9'(= a2◂ [ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]] ) } ⊢ 2'(= a3◂ [ a2◂ [ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]]] )
	mov rax,[SS_RCD_2_TOP]
	mov rsi,[rax] 
	mov QWORD [SS_RCD_2_TOP],rsi
	mov QWORD [rax],0
	mov r13,rax
	mov rax,QWORD [rsp-8+8*2]
	mov rdi,r13
	mov QWORD [rdi+8+8*0],rax
	mov rax,QWORD [rsp-8+8*1]
	mov rdi,r13
	mov QWORD [rdi+8+8*1],rax
	mov rax,r13
	mov BYTE [rax+6],0
	mov rdi,rax
	mov rax,[SS_LN_TOP]
	mov rsi,[rax]
	mov QWORD [SS_LN_TOP],rsi 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	lea rsp,[rsp+8*2]
	jmp LB_1020
LB_1020:
	movzx rax,BYTE [r8+6]
	cmp rax,0
	jnz LB_1005
	pop r14
	pop r9
	add rsp,8
	pop r13
	ret
LB_1005:
	mov QWORD [rsp+8*0],r14
	mov r13,QWORD [rsp+16+8*0]
	mov r14,QWORD [rsp+8*0]
	jmp LB_1024
LB_1024
;; rsp=0 , %1178~1'(= r ) %1177~0'(= r ) 
; #20 { } ⊢ 1(<2)◂{ }
;; rsp=0 , %1179~1(<2)◂{ } %1178~1'(= r ) %1177~0'(= r ) 
; #22 1(<2)◂{ } ⊢ 0(<2)◂1(<2)◂{ }
;; rsp=0 , %1180~0(<2)◂1(<2)◂{ } %1178~1'(= r ) %1177~0'(= r ) 
; ∎ 0(<2)◂1(<2)◂{ }
; .dlt.ptn 1'(= r )
; .dlt.ptn 0'(= r )
; .mov_ptn2 0(<2)◂1(<2)◂{ } ⊢ 2'(= a3◂ [ a2◂ [ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]]] )
; .mov_ptn 0(<2)◂1(<2)◂{ } ⊢ 2'(= a3◂ [ a2◂ [ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]]] )
	mov rax,unt 
	mov rax,unt_1
	mov rdi,rax
	mov rax,[SS_LN_TOP]
	mov rsi,[rax]
	mov QWORD [SS_LN_TOP],rsi 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	jmp LB_1023
LB_1023:
	movzx rax,BYTE [r8+6]
	cmp rax,0
	jnz LB_1022
	pop r14
	pop r9
	add rsp,8
	pop r13
	ret
LB_1022:
	pop rdi
	pop r9 
	pop r14
	pop r13
	ret
ETR_199:
	mov r9,0x0000_ffff_ffff_ffff
	and r9,[r13]
	call GRM_199
	ret
GRM_199:
	sub rsp,32
	mov QWORD [rsp+24],r13
	mov QWORD [rsp+16],r14 
	mov QWORD [rsp+8],r9
	jmp LB_1027
LB_1026:
	add r14,1 
LB_1027:
	cmp r14,r9
	jge LB_1028
	movzx rax,BYTE [r13+8+r14]
	cmp rax,9 
	jz LB_1026
	cmp rax,32 
	jz LB_1026
LB_1028
	lea rax,[r14+1]
	cmp rax,r9
	jg LB_1031
	jmp LB_1032
LB_1031:
	mov r8,unt_1
	jmp LB_1029
LB_1032:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],44
	jnz LB_1033
	jmp LB_1034
LB_1033:
	mov r8,unt_1
	jmp LB_1029
LB_1034:
	add r14,1
	jmp LB_1030
LB_1029:
	lea rsp,[rsp+8*0]
	jmp LB_1025
LB_1030:
	jmp LB_1036
LB_1035:
	add r14,1 
LB_1036:
	cmp r14,r9
	jge LB_1037
	movzx rax,BYTE [r13+8+r14]
	cmp rax,9 
	jz LB_1035
	cmp rax,32 
	jz LB_1035
LB_1037
	call GRM_200
	movzx rax,BYTE [r8+6]
	cmp rax,0
	jnz LB_1040
	jmp LB_1041
LB_1040:
	jmp LB_1038
LB_1041:
	lea rsp,[rsp-8*1]
	mov r8,[r8+8]
; .mov_ptn2 2'(= a14◂ [ a9◂ [ ]{| l |}] ) ⊢ 8'(= a14◂ [ a9◂ [ ]{| l |}] )
; .mov_ptn 2'(= a14◂ [ a9◂ [ ]{| l |}] ) ⊢ 8'(= a14◂ [ a9◂ [ ]{| l |}] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_1039
LB_1038:
	lea rsp,[rsp+8*0]
	pop rdi
	pop r9 
	pop r14
	pop r13
	ret
LB_1039:
	jmp LB_1043
LB_1042:
	add r14,1 
LB_1043:
	cmp r14,r9
	jge LB_1044
	movzx rax,BYTE [r13+8+r14]
	cmp rax,9 
	jz LB_1042
	cmp rax,32 
	jz LB_1042
LB_1044
	call GRM_199
	movzx rax,BYTE [r8+6]
	cmp rax,0
	jnz LB_1047
	jmp LB_1048
LB_1047:
	jmp LB_1045
LB_1048:
	lea rsp,[rsp-8*1]
	mov r8,[r8+8]
; .mov_ptn2 2'(= a2◂ [ a14◂ [ a9◂ [ ]{| l |}]] ) ⊢ 9'(= a2◂ [ a14◂ [ a9◂ [ ]{| l |}]] )
; .mov_ptn 2'(= a2◂ [ a14◂ [ a9◂ [ ]{| l |}]] ) ⊢ 9'(= a2◂ [ a14◂ [ a9◂ [ ]{| l |}]] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_1046
LB_1045:
	lea rsp,[rsp+8*1]
	pop rdi
	pop r9 
	pop r14
	pop r13
	ret
LB_1046:
	mov QWORD [rsp+8*2],r14
	mov r13,QWORD [rsp+16+8*2]
	mov r14,QWORD [rsp+8*2]
	jmp LB_1050
LB_1050
;; rsp=2 , %1184~1'(= r ) %1183~0'(= r ) %1182~9'(= a2◂ [ a14◂ [ a9◂ [ ]{| l |}]] ) %1181~8'(= a14◂ [ a9◂ [ ]{| l |}] ) 
; #21 { 8'(= a14◂ [ a9◂ [ ]{| l |}] ) 9'(= a2◂ [ a14◂ [ a9◂ [ ]{| l |}]] ) } ⊢ 0(<2)◂{ 8'(= a14◂ [ a9◂ [ ]{| l |}] ) 9'(= a2◂ [ a14◂ [ a9◂ [ ]{| l |}]] ) }
;; rsp=2 , %1185~0(<2)◂{ 8'(= a14◂ [ a9◂ [ ]{| l |}] ) 9'(= a2◂ [ a14◂ [ a9◂ [ ]{| l |}]] ) } %1184~1'(= r ) %1183~0'(= r ) 
; #22 0(<2)◂{ 8'(= a14◂ [ a9◂ [ ]{| l |}] ) 9'(= a2◂ [ a14◂ [ a9◂ [ ]{| l |}]] ) } ⊢ 0(<2)◂0(<2)◂{ 8'(= a14◂ [ a9◂ [ ]{| l |}] ) 9'(= a2◂ [ a14◂ [ a9◂ [ ]{| l |}]] ) }
;; rsp=2 , %1186~0(<2)◂0(<2)◂{ 8'(= a14◂ [ a9◂ [ ]{| l |}] ) 9'(= a2◂ [ a14◂ [ a9◂ [ ]{| l |}]] ) } %1184~1'(= r ) %1183~0'(= r ) 
; ∎ 0(<2)◂0(<2)◂{ 8'(= a14◂ [ a9◂ [ ]{| l |}] ) 9'(= a2◂ [ a14◂ [ a9◂ [ ]{| l |}]] ) }
; .dlt.ptn 1'(= r )
; .dlt.ptn 0'(= r )
; .mov_ptn2 0(<2)◂0(<2)◂{ 8'(= a14◂ [ a9◂ [ ]{| l |}] ) 9'(= a2◂ [ a14◂ [ a9◂ [ ]{| l |}]] ) } ⊢ 2'(= a3◂ [ a2◂ [ a14◂ [ a9◂ [ ]{| l |}]]] )
; .mov_ptn 0(<2)◂0(<2)◂{ 8'(= a14◂ [ a9◂ [ ]{| l |}] ) 9'(= a2◂ [ a14◂ [ a9◂ [ ]{| l |}]] ) } ⊢ 2'(= a3◂ [ a2◂ [ a14◂ [ a9◂ [ ]{| l |}]]] )
	mov rax,[SS_RCD_2_TOP]
	mov rsi,[rax] 
	mov QWORD [SS_RCD_2_TOP],rsi
	mov QWORD [rax],0
	mov r13,rax
	mov rax,QWORD [rsp-8+8*2]
	mov rdi,r13
	mov QWORD [rdi+8+8*0],rax
	mov rax,QWORD [rsp-8+8*1]
	mov rdi,r13
	mov QWORD [rdi+8+8*1],rax
	mov rax,r13
	mov BYTE [rax+6],0
	mov rdi,rax
	mov rax,[SS_LN_TOP]
	mov rsi,[rax]
	mov QWORD [SS_LN_TOP],rsi 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	lea rsp,[rsp+8*2]
	jmp LB_1049
LB_1049:
	movzx rax,BYTE [r8+6]
	cmp rax,0
	jnz LB_1025
	pop r14
	pop r9
	add rsp,8
	pop r13
	ret
LB_1025:
	mov QWORD [rsp+8*0],r14
	mov r13,QWORD [rsp+16+8*0]
	mov r14,QWORD [rsp+8*0]
	jmp LB_1053
LB_1053
;; rsp=0 , %1188~1'(= r ) %1187~0'(= r ) 
; #20 { } ⊢ 1(<2)◂{ }
;; rsp=0 , %1189~1(<2)◂{ } %1188~1'(= r ) %1187~0'(= r ) 
; #22 1(<2)◂{ } ⊢ 0(<2)◂1(<2)◂{ }
;; rsp=0 , %1190~0(<2)◂1(<2)◂{ } %1188~1'(= r ) %1187~0'(= r ) 
; ∎ 0(<2)◂1(<2)◂{ }
; .dlt.ptn 1'(= r )
; .dlt.ptn 0'(= r )
; .mov_ptn2 0(<2)◂1(<2)◂{ } ⊢ 2'(= a3◂ [ a2◂ [ a14◂ [ a9◂ [ ]{| l |}]]] )
; .mov_ptn 0(<2)◂1(<2)◂{ } ⊢ 2'(= a3◂ [ a2◂ [ a14◂ [ a9◂ [ ]{| l |}]]] )
	mov rax,unt 
	mov rax,unt_1
	mov rdi,rax
	mov rax,[SS_LN_TOP]
	mov rsi,[rax]
	mov QWORD [SS_LN_TOP],rsi 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	jmp LB_1052
LB_1052:
	movzx rax,BYTE [r8+6]
	cmp rax,0
	jnz LB_1051
	pop r14
	pop r9
	add rsp,8
	pop r13
	ret
LB_1051:
	pop rdi
	pop r9 
	pop r14
	pop r13
	ret
ETR_200:
	mov r9,0x0000_ffff_ffff_ffff
	and r9,[r13]
	call GRM_200
	ret
GRM_200:
	sub rsp,32
	mov QWORD [rsp+24],r13
	mov QWORD [rsp+16],r14 
	mov QWORD [rsp+8],r9
	jmp LB_1056
LB_1055:
	add r14,1 
LB_1056:
	cmp r14,r9
	jge LB_1057
	movzx rax,BYTE [r13+8+r14]
	cmp rax,9 
	jz LB_1055
	cmp rax,32 
	jz LB_1055
LB_1057
	call GRM_189
	movzx rax,BYTE [r8+6]
	cmp rax,0
	jnz LB_1060
	jmp LB_1061
LB_1060:
	jmp LB_1058
LB_1061:
	lea rsp,[rsp-8*1]
	mov r8,[r8+8]
; .mov_ptn2 2'(= a9◂ [ ] ) ⊢ 8'(= a9◂ [ ] )
; .mov_ptn 2'(= a9◂ [ ] ) ⊢ 8'(= a9◂ [ ] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_1059
LB_1058:
	lea rsp,[rsp+8*0]
	jmp LB_1054
LB_1059:
	jmp LB_1063
LB_1062:
	add r14,1 
LB_1063:
	cmp r14,r9
	jge LB_1064
	movzx rax,BYTE [r13+8+r14]
	cmp rax,9 
	jz LB_1062
	cmp rax,32 
	jz LB_1062
LB_1064
	lea rax,[r14+3]
	cmp rax,r9
	jg LB_1067
	jmp LB_1068
LB_1067:
	mov r8,unt_1
	jmp LB_1065
LB_1068:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],226
	jnz LB_1069
	cmp BYTE [rdi+1],151
	jnz LB_1069
	cmp BYTE [rdi+2],130
	jnz LB_1069
	jmp LB_1070
LB_1069:
	mov r8,unt_1
	jmp LB_1065
LB_1070:
	add r14,3
	jmp LB_1066
LB_1065:
	lea rsp,[rsp+8*1]
	jmp LB_1054
LB_1066:
	jmp LB_1072
LB_1071:
	add r14,1 
LB_1072:
	cmp r14,r9
	jge LB_1073
	movzx rax,BYTE [r13+8+r14]
	cmp rax,9 
	jz LB_1071
	cmp rax,32 
	jz LB_1071
LB_1073
	call GRM_197
	movzx rax,BYTE [r8+6]
	cmp rax,0
	jnz LB_1076
	jmp LB_1077
LB_1076:
	jmp LB_1074
LB_1077:
	lea rsp,[rsp-8*1]
	mov r8,[r8+8]
; .mov_ptn2 2'(= a8◂ [ a14◂ [ a9◂ [ ]{| l |}]] ) ⊢ 9'(= a8◂ [ a14◂ [ a9◂ [ ]{| l |}]] )
; .mov_ptn 2'(= a8◂ [ a14◂ [ a9◂ [ ]{| l |}]] ) ⊢ 9'(= a8◂ [ a14◂ [ a9◂ [ ]{| l |}]] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_1075
LB_1074:
	lea rsp,[rsp+8*1]
	jmp LB_1054
LB_1075:
	mov QWORD [rsp+8*2],r14
	mov r13,QWORD [rsp+16+8*2]
	mov r14,QWORD [rsp+8*2]
	jmp LB_1079
LB_1079
;; rsp=2 , %1194~1'(= r ) %1193~0'(= r ) %1192~9'(= a8◂ [ a14◂ [ a9◂ [ ]{| l |}]] ) %1191~8'(= a9◂ [ ] ) 
; #96 { 8'(= a9◂ [ ] ) 9'(= a8◂ [ a14◂ [ a9◂ [ ]{| l |}]] ) } ⊢ 0(<4)◂{ 8'(= a9◂ [ ] ) 9'(= a8◂ [ a14◂ [ a9◂ [ ]{| l |}]] ) }
;; rsp=2 , %1195~0(<4)◂{ 8'(= a9◂ [ ] ) 9'(= a8◂ [ a14◂ [ a9◂ [ ]{| l |}]] ) } %1194~1'(= r ) %1193~0'(= r ) 
; #22 0(<4)◂{ 8'(= a9◂ [ ] ) 9'(= a8◂ [ a14◂ [ a9◂ [ ]{| l |}]] ) } ⊢ 0(<2)◂0(<4)◂{ 8'(= a9◂ [ ] ) 9'(= a8◂ [ a14◂ [ a9◂ [ ]{| l |}]] ) }
;; rsp=2 , %1196~0(<2)◂0(<4)◂{ 8'(= a9◂ [ ] ) 9'(= a8◂ [ a14◂ [ a9◂ [ ]{| l |}]] ) } %1194~1'(= r ) %1193~0'(= r ) 
; ∎ 0(<2)◂0(<4)◂{ 8'(= a9◂ [ ] ) 9'(= a8◂ [ a14◂ [ a9◂ [ ]{| l |}]] ) }
; .dlt.ptn 1'(= r )
; .dlt.ptn 0'(= r )
; .mov_ptn2 0(<2)◂0(<4)◂{ 8'(= a9◂ [ ] ) 9'(= a8◂ [ a14◂ [ a9◂ [ ]{| l |}]] ) } ⊢ 2'(= a3◂ [ a14◂ [ a9◂ [ ]{| l |}]] )
; .mov_ptn 0(<2)◂0(<4)◂{ 8'(= a9◂ [ ] ) 9'(= a8◂ [ a14◂ [ a9◂ [ ]{| l |}]] ) } ⊢ 2'(= a3◂ [ a14◂ [ a9◂ [ ]{| l |}]] )
	mov rax,[SS_RCD_2_TOP]
	mov rsi,[rax] 
	mov QWORD [SS_RCD_2_TOP],rsi
	mov QWORD [rax],0
	mov r13,rax
	mov rax,QWORD [rsp-8+8*2]
	mov rdi,r13
	mov QWORD [rdi+8+8*0],rax
	mov rax,QWORD [rsp-8+8*1]
	mov rdi,r13
	mov QWORD [rdi+8+8*1],rax
	mov rax,r13
	mov BYTE [rax+6],0
	mov rdi,rax
	mov rax,[SS_LN_TOP]
	mov rsi,[rax]
	mov QWORD [SS_LN_TOP],rsi 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	lea rsp,[rsp+8*2]
	jmp LB_1078
LB_1078:
	movzx rax,BYTE [r8+6]
	cmp rax,0
	jnz LB_1054
	pop r14
	pop r9
	add rsp,8
	pop r13
	ret
LB_1054:
	jmp LB_1082
LB_1081:
	add r14,1 
LB_1082:
	cmp r14,r9
	jge LB_1083
	movzx rax,BYTE [r13+8+r14]
	cmp rax,9 
	jz LB_1081
	cmp rax,32 
	jz LB_1081
LB_1083
	lea rax,[r14+2]
	cmp rax,r9
	jg LB_1086
	jmp LB_1087
LB_1086:
	mov r8,unt_1
	jmp LB_1084
LB_1087:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],37
	jnz LB_1088
	cmp BYTE [rdi+1],91
	jnz LB_1088
	jmp LB_1089
LB_1088:
	mov r8,unt_1
	jmp LB_1084
LB_1089:
	add r14,2
	jmp LB_1085
LB_1084:
	lea rsp,[rsp+8*0]
	jmp LB_1080
LB_1085:
	jmp LB_1091
LB_1090:
	add r14,1 
LB_1091:
	cmp r14,r9
	jge LB_1092
	movzx rax,BYTE [r13+8+r14]
	cmp rax,9 
	jz LB_1090
	cmp rax,32 
	jz LB_1090
LB_1092
	call GRM_190
	movzx rax,BYTE [r8+6]
	cmp rax,0
	jnz LB_1095
	jmp LB_1096
LB_1095:
	jmp LB_1093
LB_1096:
	lea rsp,[rsp-8*1]
	mov r8,[r8+8]
; .mov_ptn2 2'(= a11◂ [ a9◂ [ ]] ) ⊢ 8'(= a11◂ [ a9◂ [ ]] )
; .mov_ptn 2'(= a11◂ [ a9◂ [ ]] ) ⊢ 8'(= a11◂ [ a9◂ [ ]] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_1094
LB_1093:
	lea rsp,[rsp+8*0]
	pop rdi
	pop r9 
	pop r14
	pop r13
	ret
LB_1094:
	jmp LB_1098
LB_1097:
	add r14,1 
LB_1098:
	cmp r14,r9
	jge LB_1099
	movzx rax,BYTE [r13+8+r14]
	cmp rax,9 
	jz LB_1097
	cmp rax,32 
	jz LB_1097
LB_1099
	lea rax,[r14+1]
	cmp rax,r9
	jg LB_1102
	jmp LB_1103
LB_1102:
	mov r8,unt_1
	jmp LB_1100
LB_1103:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],93
	jnz LB_1104
	jmp LB_1105
LB_1104:
	mov r8,unt_1
	jmp LB_1100
LB_1105:
	add r14,1
	jmp LB_1101
LB_1100:
	lea rsp,[rsp+8*1]
	pop rdi
	pop r9 
	pop r14
	pop r13
	ret
LB_1101:
	mov QWORD [rsp+8*1],r14
	mov r13,QWORD [rsp+16+8*1]
	mov r14,QWORD [rsp+8*1]
	jmp LB_1107
LB_1107
;; rsp=1 , %1199~1'(= r ) %1198~0'(= r ) %1197~8'(= a11◂ [ a9◂ [ ]] ) 
; #95 8'(= a11◂ [ a9◂ [ ]] ) ⊢ 1(<4)◂8'(= a11◂ [ a9◂ [ ]] )
;; rsp=1 , %1200~1(<4)◂8'(= a11◂ [ a9◂ [ ]] ) %1199~1'(= r ) %1198~0'(= r ) 
; #22 1(<4)◂8'(= a11◂ [ a9◂ [ ]] ) ⊢ 0(<2)◂1(<4)◂8'(= a11◂ [ a9◂ [ ]] )
;; rsp=1 , %1201~0(<2)◂1(<4)◂8'(= a11◂ [ a9◂ [ ]] ) %1199~1'(= r ) %1198~0'(= r ) 
; ∎ 0(<2)◂1(<4)◂8'(= a11◂ [ a9◂ [ ]] )
; .dlt.ptn 1'(= r )
; .dlt.ptn 0'(= r )
; .mov_ptn2 0(<2)◂1(<4)◂8'(= a11◂ [ a9◂ [ ]] ) ⊢ 2'(= a3◂ [ a14◂ [ a9◂ [ ]{| l |}]] )
; .mov_ptn 0(<2)◂1(<4)◂8'(= a11◂ [ a9◂ [ ]] ) ⊢ 2'(= a3◂ [ a14◂ [ a9◂ [ ]{| l |}]] )
	mov rax,QWORD [rsp-8+8*1]
	mov rdi,rax
	mov rax,[SS_LN_TOP]
	mov rsi,[rax]
	mov QWORD [SS_LN_TOP],rsi 
	mov QWORD [rax],0
	mov BYTE [rax+6],1
	mov QWORD [rax+8],rdi
	mov rdi,rax
	mov rax,[SS_LN_TOP]
	mov rsi,[rax]
	mov QWORD [SS_LN_TOP],rsi 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	lea rsp,[rsp+8*1]
	jmp LB_1106
LB_1106:
	movzx rax,BYTE [r8+6]
	cmp rax,0
	jnz LB_1080
	pop r14
	pop r9
	add rsp,8
	pop r13
	ret
LB_1080:
	jmp LB_1110
LB_1109:
	add r14,1 
LB_1110:
	cmp r14,r9
	jge LB_1111
	movzx rax,BYTE [r13+8+r14]
	cmp rax,9 
	jz LB_1109
	cmp rax,32 
	jz LB_1109
LB_1111
	lea rax,[r14+1]
	cmp rax,r9
	jg LB_1114
	jmp LB_1115
LB_1114:
	mov r8,unt_1
	jmp LB_1112
LB_1115:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],37
	jnz LB_1116
	jmp LB_1117
LB_1116:
	mov r8,unt_1
	jmp LB_1112
LB_1117:
	add r14,1
	jmp LB_1113
LB_1112:
	lea rsp,[rsp+8*0]
	jmp LB_1108
LB_1113:
	jmp LB_1119
LB_1118:
	add r14,1 
LB_1119:
	cmp r14,r9
	jge LB_1120
	movzx rax,BYTE [r13+8+r14]
	cmp rax,9 
	jz LB_1118
	cmp rax,32 
	jz LB_1118
LB_1120
	call GRM_77
	movzx rax,BYTE [r8+6]
	cmp rax,0
	jnz LB_1123
	jmp LB_1124
LB_1123:
	jmp LB_1121
LB_1124:
	lea rsp,[rsp-8*1]
; .mov_ptn2 2'(= {| l |} ) ⊢ 8'(= {| l |} )
; .mov_ptn 2'(= {| l |} ) ⊢ 8'(= {| l |} )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_1122
LB_1121:
	lea rsp,[rsp+8*0]
	pop rdi
	pop r9 
	pop r14
	pop r13
	ret
LB_1122:
	mov QWORD [rsp+8*1],r14
	mov r13,QWORD [rsp+16+8*1]
	mov r14,QWORD [rsp+8*1]
	jmp LB_1126
LB_1126
;; rsp=1 , %1204~1'(= r ) %1203~0'(= r ) %1202~8'(= {| l |} ) 
; #93 8'(= {| l |} ) ⊢ 3(<4)◂8'(= {| l |} )
;; rsp=1 , %1205~3(<4)◂8'(= {| l |} ) %1204~1'(= r ) %1203~0'(= r ) 
; #22 3(<4)◂8'(= {| l |} ) ⊢ 0(<2)◂3(<4)◂8'(= {| l |} )
;; rsp=1 , %1206~0(<2)◂3(<4)◂8'(= {| l |} ) %1204~1'(= r ) %1203~0'(= r ) 
; ∎ 0(<2)◂3(<4)◂8'(= {| l |} )
; .dlt.ptn 1'(= r )
; .dlt.ptn 0'(= r )
; .mov_ptn2 0(<2)◂3(<4)◂8'(= {| l |} ) ⊢ 2'(= a3◂ [ a14◂ [ a9◂ [ ]{| l |}]] )
; .mov_ptn 0(<2)◂3(<4)◂8'(= {| l |} ) ⊢ 2'(= a3◂ [ a14◂ [ a9◂ [ ]{| l |}]] )
	mov rax,QWORD [rsp-8+8*1]
	mov BYTE [rax+6],3
	mov rdi,rax
	mov rax,[SS_LN_TOP]
	mov rsi,[rax]
	mov QWORD [SS_LN_TOP],rsi 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	lea rsp,[rsp+8*1]
	jmp LB_1125
LB_1125:
	movzx rax,BYTE [r8+6]
	cmp rax,0
	jnz LB_1108
	pop r14
	pop r9
	add rsp,8
	pop r13
	ret
LB_1108:
	jmp LB_1129
LB_1128:
	add r14,1 
LB_1129:
	cmp r14,r9
	jge LB_1130
	movzx rax,BYTE [r13+8+r14]
	cmp rax,9 
	jz LB_1128
	cmp rax,32 
	jz LB_1128
LB_1130
	call GRM_77
	movzx rax,BYTE [r8+6]
	cmp rax,0
	jnz LB_1133
	jmp LB_1134
LB_1133:
	jmp LB_1131
LB_1134:
	lea rsp,[rsp-8*1]
; .mov_ptn2 2'(= {| l |} ) ⊢ 8'(= {| l |} )
; .mov_ptn 2'(= {| l |} ) ⊢ 8'(= {| l |} )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_1132
LB_1131:
	lea rsp,[rsp+8*0]
	jmp LB_1127
LB_1132:
	mov QWORD [rsp+8*1],r14
	mov r13,QWORD [rsp+16+8*1]
	mov r14,QWORD [rsp+8*1]
	jmp LB_1136
LB_1136
;; rsp=1 , %1209~1'(= r ) %1208~0'(= r ) %1207~8'(= {| l |} ) 
; #93 8'(= {| l |} ) ⊢ 3(<4)◂8'(= {| l |} )
;; rsp=1 , %1210~3(<4)◂8'(= {| l |} ) %1209~1'(= r ) %1208~0'(= r ) 
; #22 3(<4)◂8'(= {| l |} ) ⊢ 0(<2)◂3(<4)◂8'(= {| l |} )
;; rsp=1 , %1211~0(<2)◂3(<4)◂8'(= {| l |} ) %1209~1'(= r ) %1208~0'(= r ) 
; ∎ 0(<2)◂3(<4)◂8'(= {| l |} )
; .dlt.ptn 1'(= r )
; .dlt.ptn 0'(= r )
; .mov_ptn2 0(<2)◂3(<4)◂8'(= {| l |} ) ⊢ 2'(= a3◂ [ a14◂ [ a9◂ [ ]{| l |}]] )
; .mov_ptn 0(<2)◂3(<4)◂8'(= {| l |} ) ⊢ 2'(= a3◂ [ a14◂ [ a9◂ [ ]{| l |}]] )
	mov rax,QWORD [rsp-8+8*1]
	mov BYTE [rax+6],3
	mov rdi,rax
	mov rax,[SS_LN_TOP]
	mov rsi,[rax]
	mov QWORD [SS_LN_TOP],rsi 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	lea rsp,[rsp+8*1]
	jmp LB_1135
LB_1135:
	movzx rax,BYTE [r8+6]
	cmp rax,0
	jnz LB_1127
	pop r14
	pop r9
	add rsp,8
	pop r13
	ret
LB_1127:
	jmp LB_1139
LB_1138:
	add r14,1 
LB_1139:
	cmp r14,r9
	jge LB_1140
	movzx rax,BYTE [r13+8+r14]
	cmp rax,9 
	jz LB_1138
	cmp rax,32 
	jz LB_1138
LB_1140
	lea rax,[r14+1]
	cmp rax,r9
	jg LB_1143
	jmp LB_1144
LB_1143:
	mov r8,unt_1
	jmp LB_1141
LB_1144:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],95
	jnz LB_1145
	jmp LB_1146
LB_1145:
	mov r8,unt_1
	jmp LB_1141
LB_1146:
	add r14,1
	jmp LB_1142
LB_1141:
	lea rsp,[rsp+8*0]
	jmp LB_1137
LB_1142:
	mov QWORD [rsp+8*0],r14
	mov r13,QWORD [rsp+16+8*0]
	mov r14,QWORD [rsp+8*0]
	jmp LB_1148
LB_1148
;; rsp=0 , %1213~1'(= r ) %1212~0'(= r ) 
; #23 { } ⊢ 1(<2)◂{ }
;; rsp=0 , %1214~1(<2)◂{ } %1213~1'(= r ) %1212~0'(= r ) 
; #94 1(<2)◂{ } ⊢ 2(<4)◂1(<2)◂{ }
;; rsp=0 , %1215~2(<4)◂1(<2)◂{ } %1213~1'(= r ) %1212~0'(= r ) 
; #22 2(<4)◂1(<2)◂{ } ⊢ 0(<2)◂2(<4)◂1(<2)◂{ }
;; rsp=0 , %1216~0(<2)◂2(<4)◂1(<2)◂{ } %1213~1'(= r ) %1212~0'(= r ) 
; ∎ 0(<2)◂2(<4)◂1(<2)◂{ }
; .dlt.ptn 1'(= r )
; .dlt.ptn 0'(= r )
; .mov_ptn2 0(<2)◂2(<4)◂1(<2)◂{ } ⊢ 2'(= a3◂ [ a14◂ [ a9◂ [ ]{| l |}]] )
; .mov_ptn 0(<2)◂2(<4)◂1(<2)◂{ } ⊢ 2'(= a3◂ [ a14◂ [ a9◂ [ ]{| l |}]] )
	mov rax,unt 
	mov rax,unt_1
	mov rdi,rax
	mov rax,[SS_LN_TOP]
	mov rsi,[rax]
	mov QWORD [SS_LN_TOP],rsi 
	mov QWORD [rax],0
	mov BYTE [rax+6],2
	mov QWORD [rax+8],rdi
	mov rdi,rax
	mov rax,[SS_LN_TOP]
	mov rsi,[rax]
	mov QWORD [SS_LN_TOP],rsi 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	jmp LB_1147
LB_1147:
	movzx rax,BYTE [r8+6]
	cmp rax,0
	jnz LB_1137
	pop r14
	pop r9
	add rsp,8
	pop r13
	ret
LB_1137:
	pop rdi
	pop r9 
	pop r14
	pop r13
	ret
ETR_201:
	mov r9,0x0000_ffff_ffff_ffff
	and r9,[r13]
	call GRM_201
	ret
GRM_201:
	sub rsp,32
	mov QWORD [rsp+24],r13
	mov QWORD [rsp+16],r14 
	mov QWORD [rsp+8],r9
	jmp LB_1151
LB_1150:
	add r14,1 
LB_1151:
	cmp r14,r9
	jge LB_1152
	movzx rax,BYTE [r13+8+r14]
	cmp rax,9 
	jz LB_1150
	cmp rax,32 
	jz LB_1150
LB_1152
	lea rax,[r14+1]
	cmp rax,r9
	jg LB_1155
	jmp LB_1156
LB_1155:
	mov r8,unt_1
	jmp LB_1153
LB_1156:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],123
	jnz LB_1157
	jmp LB_1158
LB_1157:
	mov r8,unt_1
	jmp LB_1153
LB_1158:
	add r14,1
	jmp LB_1154
LB_1153:
	lea rsp,[rsp+8*0]
	jmp LB_1149
LB_1154:
	jmp LB_1160
LB_1159:
	add r14,1 
LB_1160:
	cmp r14,r9
	jge LB_1161
	movzx rax,BYTE [r13+8+r14]
	cmp rax,9 
	jz LB_1159
	cmp rax,32 
	jz LB_1159
LB_1161
	call GRM_202
	movzx rax,BYTE [r8+6]
	cmp rax,0
	jnz LB_1164
	jmp LB_1165
LB_1164:
	jmp LB_1162
LB_1165:
	lea rsp,[rsp-8*1]
	mov r8,[r8+8]
; .mov_ptn2 2'(= a2◂ [ a8◂ [ a12◂ [ a9◂ [ ]{| l |}]]] ) ⊢ 8'(= a2◂ [ a8◂ [ a12◂ [ a9◂ [ ]{| l |}]]] )
; .mov_ptn 2'(= a2◂ [ a8◂ [ a12◂ [ a9◂ [ ]{| l |}]]] ) ⊢ 8'(= a2◂ [ a8◂ [ a12◂ [ a9◂ [ ]{| l |}]]] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_1163
LB_1162:
	lea rsp,[rsp+8*0]
	jmp LB_1149
LB_1163:
	jmp LB_1167
LB_1166:
	add r14,1 
LB_1167:
	cmp r14,r9
	jge LB_1168
	movzx rax,BYTE [r13+8+r14]
	cmp rax,9 
	jz LB_1166
	cmp rax,32 
	jz LB_1166
LB_1168
	lea rax,[r14+1]
	cmp rax,r9
	jg LB_1171
	jmp LB_1172
LB_1171:
	mov r8,unt_1
	jmp LB_1169
LB_1172:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],125
	jnz LB_1173
	jmp LB_1174
LB_1173:
	mov r8,unt_1
	jmp LB_1169
LB_1174:
	add r14,1
	jmp LB_1170
LB_1169:
	lea rsp,[rsp+8*1]
	jmp LB_1149
LB_1170:
	mov QWORD [rsp+8*1],r14
	mov r13,QWORD [rsp+16+8*1]
	mov r14,QWORD [rsp+8*1]
	jmp LB_1176
LB_1176
;; rsp=1 , %1219~1'(= r ) %1218~0'(= r ) %1217~8'(= a2◂ [ a8◂ [ a12◂ [ a9◂ [ ]{| l |}]]] ) 
; #79 8'(= a2◂ [ a8◂ [ a12◂ [ a9◂ [ ]{| l |}]]] ) ⊢ 0(<2)◂8'(= a2◂ [ a8◂ [ a12◂ [ a9◂ [ ]{| l |}]]] )
;; rsp=1 , %1220~0(<2)◂8'(= a2◂ [ a8◂ [ a12◂ [ a9◂ [ ]{| l |}]]] ) %1219~1'(= r ) %1218~0'(= r ) 
; #22 0(<2)◂8'(= a2◂ [ a8◂ [ a12◂ [ a9◂ [ ]{| l |}]]] ) ⊢ 0(<2)◂0(<2)◂8'(= a2◂ [ a8◂ [ a12◂ [ a9◂ [ ]{| l |}]]] )
;; rsp=1 , %1221~0(<2)◂0(<2)◂8'(= a2◂ [ a8◂ [ a12◂ [ a9◂ [ ]{| l |}]]] ) %1219~1'(= r ) %1218~0'(= r ) 
; ∎ 0(<2)◂0(<2)◂8'(= a2◂ [ a8◂ [ a12◂ [ a9◂ [ ]{| l |}]]] )
; .dlt.ptn 1'(= r )
; .dlt.ptn 0'(= r )
; .mov_ptn2 0(<2)◂0(<2)◂8'(= a2◂ [ a8◂ [ a12◂ [ a9◂ [ ]{| l |}]]] ) ⊢ 2'(= a3◂ [ a8◂ [ a12◂ [ a9◂ [ ]{| l |}]]] )
; .mov_ptn 0(<2)◂0(<2)◂8'(= a2◂ [ a8◂ [ a12◂ [ a9◂ [ ]{| l |}]]] ) ⊢ 2'(= a3◂ [ a8◂ [ a12◂ [ a9◂ [ ]{| l |}]]] )
	mov rax,QWORD [rsp-8+8*1]
	mov rdi,rax
	mov rax,[SS_LN_TOP]
	mov rsi,[rax]
	mov QWORD [SS_LN_TOP],rsi 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov rdi,rax
	mov rax,[SS_LN_TOP]
	mov rsi,[rax]
	mov QWORD [SS_LN_TOP],rsi 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	lea rsp,[rsp+8*1]
	jmp LB_1175
LB_1175:
	movzx rax,BYTE [r8+6]
	cmp rax,0
	jnz LB_1149
	pop r14
	pop r9
	add rsp,8
	pop r13
	ret
LB_1149:
	jmp LB_1179
LB_1178:
	add r14,1 
LB_1179:
	cmp r14,r9
	jge LB_1180
	movzx rax,BYTE [r13+8+r14]
	cmp rax,9 
	jz LB_1178
	cmp rax,32 
	jz LB_1178
LB_1180
	call GRM_204
	movzx rax,BYTE [r8+6]
	cmp rax,0
	jnz LB_1183
	jmp LB_1184
LB_1183:
	jmp LB_1181
LB_1184:
	lea rsp,[rsp-8*1]
	mov r8,[r8+8]
; .mov_ptn2 2'(= a12◂ [ a9◂ [ ]{| l |}] ) ⊢ 8'(= a12◂ [ a9◂ [ ]{| l |}] )
; .mov_ptn 2'(= a12◂ [ a9◂ [ ]{| l |}] ) ⊢ 8'(= a12◂ [ a9◂ [ ]{| l |}] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_1182
LB_1181:
	lea rsp,[rsp+8*0]
	jmp LB_1177
LB_1182:
	mov QWORD [rsp+8*1],r14
	mov r13,QWORD [rsp+16+8*1]
	mov r14,QWORD [rsp+8*1]
	jmp LB_1186
LB_1186
;; rsp=1 , %1224~1'(= r ) %1223~0'(= r ) %1222~8'(= a12◂ [ a9◂ [ ]{| l |}] ) 
; #78 8'(= a12◂ [ a9◂ [ ]{| l |}] ) ⊢ 1(<2)◂8'(= a12◂ [ a9◂ [ ]{| l |}] )
;; rsp=1 , %1225~1(<2)◂8'(= a12◂ [ a9◂ [ ]{| l |}] ) %1224~1'(= r ) %1223~0'(= r ) 
; #22 1(<2)◂8'(= a12◂ [ a9◂ [ ]{| l |}] ) ⊢ 0(<2)◂1(<2)◂8'(= a12◂ [ a9◂ [ ]{| l |}] )
;; rsp=1 , %1226~0(<2)◂1(<2)◂8'(= a12◂ [ a9◂ [ ]{| l |}] ) %1224~1'(= r ) %1223~0'(= r ) 
; ∎ 0(<2)◂1(<2)◂8'(= a12◂ [ a9◂ [ ]{| l |}] )
; .dlt.ptn 1'(= r )
; .dlt.ptn 0'(= r )
; .mov_ptn2 0(<2)◂1(<2)◂8'(= a12◂ [ a9◂ [ ]{| l |}] ) ⊢ 2'(= a3◂ [ a8◂ [ a12◂ [ a9◂ [ ]{| l |}]]] )
; .mov_ptn 0(<2)◂1(<2)◂8'(= a12◂ [ a9◂ [ ]{| l |}] ) ⊢ 2'(= a3◂ [ a8◂ [ a12◂ [ a9◂ [ ]{| l |}]]] )
	mov rax,QWORD [rsp-8+8*1]
	mov rdi,rax
	mov rax,[SS_LN_TOP]
	mov rsi,[rax]
	mov QWORD [SS_LN_TOP],rsi 
	mov QWORD [rax],0
	mov BYTE [rax+6],1
	mov QWORD [rax+8],rdi
	mov rdi,rax
	mov rax,[SS_LN_TOP]
	mov rsi,[rax]
	mov QWORD [SS_LN_TOP],rsi 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	lea rsp,[rsp+8*1]
	jmp LB_1185
LB_1185:
	movzx rax,BYTE [r8+6]
	cmp rax,0
	jnz LB_1177
	pop r14
	pop r9
	add rsp,8
	pop r13
	ret
LB_1177:
	pop rdi
	pop r9 
	pop r14
	pop r13
	ret
ETR_202:
	mov r9,0x0000_ffff_ffff_ffff
	and r9,[r13]
	call GRM_202
	ret
GRM_202:
	sub rsp,32
	mov QWORD [rsp+24],r13
	mov QWORD [rsp+16],r14 
	mov QWORD [rsp+8],r9
	jmp LB_1189
LB_1188:
	add r14,1 
LB_1189:
	cmp r14,r9
	jge LB_1190
	movzx rax,BYTE [r13+8+r14]
	cmp rax,9 
	jz LB_1188
	cmp rax,32 
	jz LB_1188
LB_1190
	call GRM_201
	movzx rax,BYTE [r8+6]
	cmp rax,0
	jnz LB_1193
	jmp LB_1194
LB_1193:
	jmp LB_1191
LB_1194:
	lea rsp,[rsp-8*1]
	mov r8,[r8+8]
; .mov_ptn2 2'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) ⊢ 8'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] )
; .mov_ptn 2'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) ⊢ 8'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_1192
LB_1191:
	lea rsp,[rsp+8*0]
	jmp LB_1187
LB_1192:
	jmp LB_1196
LB_1195:
	add r14,1 
LB_1196:
	cmp r14,r9
	jge LB_1197
	movzx rax,BYTE [r13+8+r14]
	cmp rax,9 
	jz LB_1195
	cmp rax,32 
	jz LB_1195
LB_1197
	call GRM_202
	movzx rax,BYTE [r8+6]
	cmp rax,0
	jnz LB_1200
	jmp LB_1201
LB_1200:
	jmp LB_1198
LB_1201:
	lea rsp,[rsp-8*1]
	mov r8,[r8+8]
; .mov_ptn2 2'(= a2◂ [ a8◂ [ a12◂ [ a9◂ [ ]{| l |}]]] ) ⊢ 9'(= a2◂ [ a8◂ [ a12◂ [ a9◂ [ ]{| l |}]]] )
; .mov_ptn 2'(= a2◂ [ a8◂ [ a12◂ [ a9◂ [ ]{| l |}]]] ) ⊢ 9'(= a2◂ [ a8◂ [ a12◂ [ a9◂ [ ]{| l |}]]] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_1199
LB_1198:
	lea rsp,[rsp+8*1]
	jmp LB_1187
LB_1199:
	mov QWORD [rsp+8*2],r14
	mov r13,QWORD [rsp+16+8*2]
	mov r14,QWORD [rsp+8*2]
	jmp LB_1203
LB_1203
;; rsp=2 , %1230~1'(= r ) %1229~0'(= r ) %1228~9'(= a2◂ [ a8◂ [ a12◂ [ a9◂ [ ]{| l |}]]] ) %1227~8'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) 
; #21 { 8'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) 9'(= a2◂ [ a8◂ [ a12◂ [ a9◂ [ ]{| l |}]]] ) } ⊢ 0(<2)◂{ 8'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) 9'(= a2◂ [ a8◂ [ a12◂ [ a9◂ [ ]{| l |}]]] ) }
;; rsp=2 , %1231~0(<2)◂{ 8'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) 9'(= a2◂ [ a8◂ [ a12◂ [ a9◂ [ ]{| l |}]]] ) } %1230~1'(= r ) %1229~0'(= r ) 
; #22 0(<2)◂{ 8'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) 9'(= a2◂ [ a8◂ [ a12◂ [ a9◂ [ ]{| l |}]]] ) } ⊢ 0(<2)◂0(<2)◂{ 8'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) 9'(= a2◂ [ a8◂ [ a12◂ [ a9◂ [ ]{| l |}]]] ) }
;; rsp=2 , %1232~0(<2)◂0(<2)◂{ 8'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) 9'(= a2◂ [ a8◂ [ a12◂ [ a9◂ [ ]{| l |}]]] ) } %1230~1'(= r ) %1229~0'(= r ) 
; ∎ 0(<2)◂0(<2)◂{ 8'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) 9'(= a2◂ [ a8◂ [ a12◂ [ a9◂ [ ]{| l |}]]] ) }
; .dlt.ptn 1'(= r )
; .dlt.ptn 0'(= r )
; .mov_ptn2 0(<2)◂0(<2)◂{ 8'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) 9'(= a2◂ [ a8◂ [ a12◂ [ a9◂ [ ]{| l |}]]] ) } ⊢ 2'(= a3◂ [ a2◂ [ a8◂ [ a12◂ [ a9◂ [ ]{| l |}]]]] )
; .mov_ptn 0(<2)◂0(<2)◂{ 8'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) 9'(= a2◂ [ a8◂ [ a12◂ [ a9◂ [ ]{| l |}]]] ) } ⊢ 2'(= a3◂ [ a2◂ [ a8◂ [ a12◂ [ a9◂ [ ]{| l |}]]]] )
	mov rax,[SS_RCD_2_TOP]
	mov rsi,[rax] 
	mov QWORD [SS_RCD_2_TOP],rsi
	mov QWORD [rax],0
	mov r13,rax
	mov rax,QWORD [rsp-8+8*2]
	mov rdi,r13
	mov QWORD [rdi+8+8*0],rax
	mov rax,QWORD [rsp-8+8*1]
	mov rdi,r13
	mov QWORD [rdi+8+8*1],rax
	mov rax,r13
	mov BYTE [rax+6],0
	mov rdi,rax
	mov rax,[SS_LN_TOP]
	mov rsi,[rax]
	mov QWORD [SS_LN_TOP],rsi 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	lea rsp,[rsp+8*2]
	jmp LB_1202
LB_1202:
	movzx rax,BYTE [r8+6]
	cmp rax,0
	jnz LB_1187
	pop r14
	pop r9
	add rsp,8
	pop r13
	ret
LB_1187:
	mov QWORD [rsp+8*0],r14
	mov r13,QWORD [rsp+16+8*0]
	mov r14,QWORD [rsp+8*0]
	jmp LB_1206
LB_1206
;; rsp=0 , %1234~1'(= r ) %1233~0'(= r ) 
; #20 { } ⊢ 1(<2)◂{ }
;; rsp=0 , %1235~1(<2)◂{ } %1234~1'(= r ) %1233~0'(= r ) 
; #22 1(<2)◂{ } ⊢ 0(<2)◂1(<2)◂{ }
;; rsp=0 , %1236~0(<2)◂1(<2)◂{ } %1234~1'(= r ) %1233~0'(= r ) 
; ∎ 0(<2)◂1(<2)◂{ }
; .dlt.ptn 1'(= r )
; .dlt.ptn 0'(= r )
; .mov_ptn2 0(<2)◂1(<2)◂{ } ⊢ 2'(= a3◂ [ a2◂ [ a8◂ [ a12◂ [ a9◂ [ ]{| l |}]]]] )
; .mov_ptn 0(<2)◂1(<2)◂{ } ⊢ 2'(= a3◂ [ a2◂ [ a8◂ [ a12◂ [ a9◂ [ ]{| l |}]]]] )
	mov rax,unt 
	mov rax,unt_1
	mov rdi,rax
	mov rax,[SS_LN_TOP]
	mov rsi,[rax]
	mov QWORD [SS_LN_TOP],rsi 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	jmp LB_1205
LB_1205:
	movzx rax,BYTE [r8+6]
	cmp rax,0
	jnz LB_1204
	pop r14
	pop r9
	add rsp,8
	pop r13
	ret
LB_1204:
	pop rdi
	pop r9 
	pop r14
	pop r13
	ret
ETR_203:
	mov r9,0x0000_ffff_ffff_ffff
	and r9,[r13]
	call GRM_203
	ret
GRM_203:
	sub rsp,32
	mov QWORD [rsp+24],r13
	mov QWORD [rsp+16],r14 
	mov QWORD [rsp+8],r9
	jmp LB_1209
LB_1208:
	add r14,1 
LB_1209:
	cmp r14,r9
	jge LB_1210
	movzx rax,BYTE [r13+8+r14]
	cmp rax,9 
	jz LB_1208
	cmp rax,32 
	jz LB_1208
LB_1210
	lea rax,[r14+1]
	cmp rax,r9
	jg LB_1213
	jmp LB_1214
LB_1213:
	mov r8,unt_1
	jmp LB_1211
LB_1214:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],44
	jnz LB_1215
	jmp LB_1216
LB_1215:
	mov r8,unt_1
	jmp LB_1211
LB_1216:
	add r14,1
	jmp LB_1212
LB_1211:
	lea rsp,[rsp+8*0]
	jmp LB_1207
LB_1212:
	jmp LB_1218
LB_1217:
	add r14,1 
LB_1218:
	cmp r14,r9
	jge LB_1219
	movzx rax,BYTE [r13+8+r14]
	cmp rax,9 
	jz LB_1217
	cmp rax,32 
	jz LB_1217
LB_1219
	call GRM_204
	movzx rax,BYTE [r8+6]
	cmp rax,0
	jnz LB_1222
	jmp LB_1223
LB_1222:
	jmp LB_1220
LB_1223:
	lea rsp,[rsp-8*1]
	mov r8,[r8+8]
; .mov_ptn2 2'(= a12◂ [ a9◂ [ ]{| l |}] ) ⊢ 8'(= a12◂ [ a9◂ [ ]{| l |}] )
; .mov_ptn 2'(= a12◂ [ a9◂ [ ]{| l |}] ) ⊢ 8'(= a12◂ [ a9◂ [ ]{| l |}] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_1221
LB_1220:
	lea rsp,[rsp+8*0]
	pop rdi
	pop r9 
	pop r14
	pop r13
	ret
LB_1221:
	jmp LB_1225
LB_1224:
	add r14,1 
LB_1225:
	cmp r14,r9
	jge LB_1226
	movzx rax,BYTE [r13+8+r14]
	cmp rax,9 
	jz LB_1224
	cmp rax,32 
	jz LB_1224
LB_1226
	call GRM_203
	movzx rax,BYTE [r8+6]
	cmp rax,0
	jnz LB_1229
	jmp LB_1230
LB_1229:
	jmp LB_1227
LB_1230:
	lea rsp,[rsp-8*1]
	mov r8,[r8+8]
; .mov_ptn2 2'(= a2◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) ⊢ 9'(= a2◂ [ a12◂ [ a9◂ [ ]{| l |}]] )
; .mov_ptn 2'(= a2◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) ⊢ 9'(= a2◂ [ a12◂ [ a9◂ [ ]{| l |}]] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_1228
LB_1227:
	lea rsp,[rsp+8*1]
	pop rdi
	pop r9 
	pop r14
	pop r13
	ret
LB_1228:
	mov QWORD [rsp+8*2],r14
	mov r13,QWORD [rsp+16+8*2]
	mov r14,QWORD [rsp+8*2]
	jmp LB_1232
LB_1232
;; rsp=2 , %1240~1'(= r ) %1239~0'(= r ) %1238~9'(= a2◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) %1237~8'(= a12◂ [ a9◂ [ ]{| l |}] ) 
; #21 { 8'(= a12◂ [ a9◂ [ ]{| l |}] ) 9'(= a2◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) } ⊢ 0(<2)◂{ 8'(= a12◂ [ a9◂ [ ]{| l |}] ) 9'(= a2◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) }
;; rsp=2 , %1241~0(<2)◂{ 8'(= a12◂ [ a9◂ [ ]{| l |}] ) 9'(= a2◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) } %1240~1'(= r ) %1239~0'(= r ) 
; #22 0(<2)◂{ 8'(= a12◂ [ a9◂ [ ]{| l |}] ) 9'(= a2◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) } ⊢ 0(<2)◂0(<2)◂{ 8'(= a12◂ [ a9◂ [ ]{| l |}] ) 9'(= a2◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) }
;; rsp=2 , %1242~0(<2)◂0(<2)◂{ 8'(= a12◂ [ a9◂ [ ]{| l |}] ) 9'(= a2◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) } %1240~1'(= r ) %1239~0'(= r ) 
; ∎ 0(<2)◂0(<2)◂{ 8'(= a12◂ [ a9◂ [ ]{| l |}] ) 9'(= a2◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) }
; .dlt.ptn 1'(= r )
; .dlt.ptn 0'(= r )
; .mov_ptn2 0(<2)◂0(<2)◂{ 8'(= a12◂ [ a9◂ [ ]{| l |}] ) 9'(= a2◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) } ⊢ 2'(= a3◂ [ a2◂ [ a12◂ [ a9◂ [ ]{| l |}]]] )
; .mov_ptn 0(<2)◂0(<2)◂{ 8'(= a12◂ [ a9◂ [ ]{| l |}] ) 9'(= a2◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) } ⊢ 2'(= a3◂ [ a2◂ [ a12◂ [ a9◂ [ ]{| l |}]]] )
	mov rax,[SS_RCD_2_TOP]
	mov rsi,[rax] 
	mov QWORD [SS_RCD_2_TOP],rsi
	mov QWORD [rax],0
	mov r13,rax
	mov rax,QWORD [rsp-8+8*2]
	mov rdi,r13
	mov QWORD [rdi+8+8*0],rax
	mov rax,QWORD [rsp-8+8*1]
	mov rdi,r13
	mov QWORD [rdi+8+8*1],rax
	mov rax,r13
	mov BYTE [rax+6],0
	mov rdi,rax
	mov rax,[SS_LN_TOP]
	mov rsi,[rax]
	mov QWORD [SS_LN_TOP],rsi 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	lea rsp,[rsp+8*2]
	jmp LB_1231
LB_1231:
	movzx rax,BYTE [r8+6]
	cmp rax,0
	jnz LB_1207
	pop r14
	pop r9
	add rsp,8
	pop r13
	ret
LB_1207:
	mov QWORD [rsp+8*0],r14
	mov r13,QWORD [rsp+16+8*0]
	mov r14,QWORD [rsp+8*0]
	jmp LB_1235
LB_1235
;; rsp=0 , %1244~1'(= r ) %1243~0'(= r ) 
; #20 { } ⊢ 1(<2)◂{ }
;; rsp=0 , %1245~1(<2)◂{ } %1244~1'(= r ) %1243~0'(= r ) 
; #22 1(<2)◂{ } ⊢ 0(<2)◂1(<2)◂{ }
;; rsp=0 , %1246~0(<2)◂1(<2)◂{ } %1244~1'(= r ) %1243~0'(= r ) 
; ∎ 0(<2)◂1(<2)◂{ }
; .dlt.ptn 1'(= r )
; .dlt.ptn 0'(= r )
; .mov_ptn2 0(<2)◂1(<2)◂{ } ⊢ 2'(= a3◂ [ a2◂ [ a12◂ [ a9◂ [ ]{| l |}]]] )
; .mov_ptn 0(<2)◂1(<2)◂{ } ⊢ 2'(= a3◂ [ a2◂ [ a12◂ [ a9◂ [ ]{| l |}]]] )
	mov rax,unt 
	mov rax,unt_1
	mov rdi,rax
	mov rax,[SS_LN_TOP]
	mov rsi,[rax]
	mov QWORD [SS_LN_TOP],rsi 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	jmp LB_1234
LB_1234:
	movzx rax,BYTE [r8+6]
	cmp rax,0
	jnz LB_1233
	pop r14
	pop r9
	add rsp,8
	pop r13
	ret
LB_1233:
	pop rdi
	pop r9 
	pop r14
	pop r13
	ret
ETR_204:
	mov r9,0x0000_ffff_ffff_ffff
	and r9,[r13]
	call GRM_204
	ret
GRM_204:
	sub rsp,32
	mov QWORD [rsp+24],r13
	mov QWORD [rsp+16],r14 
	mov QWORD [rsp+8],r9
	jmp LB_1238
LB_1237:
	add r14,1 
LB_1238:
	cmp r14,r9
	jge LB_1239
	movzx rax,BYTE [r13+8+r14]
	cmp rax,9 
	jz LB_1237
	cmp rax,32 
	jz LB_1237
LB_1239
	lea rax,[r14+2]
	cmp rax,r9
	jg LB_1242
	jmp LB_1243
LB_1242:
	mov r8,unt_1
	jmp LB_1240
LB_1243:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],37
	jnz LB_1244
	cmp BYTE [rdi+1],91
	jnz LB_1244
	jmp LB_1245
LB_1244:
	mov r8,unt_1
	jmp LB_1240
LB_1245:
	add r14,2
	jmp LB_1241
LB_1240:
	lea rsp,[rsp+8*0]
	jmp LB_1236
LB_1241:
	jmp LB_1247
LB_1246:
	add r14,1 
LB_1247:
	cmp r14,r9
	jge LB_1248
	movzx rax,BYTE [r13+8+r14]
	cmp rax,9 
	jz LB_1246
	cmp rax,32 
	jz LB_1246
LB_1248
	call GRM_190
	movzx rax,BYTE [r8+6]
	cmp rax,0
	jnz LB_1251
	jmp LB_1252
LB_1251:
	jmp LB_1249
LB_1252:
	lea rsp,[rsp-8*1]
	mov r8,[r8+8]
; .mov_ptn2 2'(= a11◂ [ a9◂ [ ]] ) ⊢ 8'(= a11◂ [ a9◂ [ ]] )
; .mov_ptn 2'(= a11◂ [ a9◂ [ ]] ) ⊢ 8'(= a11◂ [ a9◂ [ ]] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_1250
LB_1249:
	lea rsp,[rsp+8*0]
	jmp LB_1236
LB_1250:
	jmp LB_1254
LB_1253:
	add r14,1 
LB_1254:
	cmp r14,r9
	jge LB_1255
	movzx rax,BYTE [r13+8+r14]
	cmp rax,9 
	jz LB_1253
	cmp rax,32 
	jz LB_1253
LB_1255
	lea rax,[r14+1]
	cmp rax,r9
	jg LB_1258
	jmp LB_1259
LB_1258:
	mov r8,unt_1
	jmp LB_1256
LB_1259:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],93
	jnz LB_1260
	jmp LB_1261
LB_1260:
	mov r8,unt_1
	jmp LB_1256
LB_1261:
	add r14,1
	jmp LB_1257
LB_1256:
	lea rsp,[rsp+8*1]
	jmp LB_1236
LB_1257:
	mov QWORD [rsp+8*1],r14
	mov r13,QWORD [rsp+16+8*1]
	mov r14,QWORD [rsp+8*1]
	jmp LB_1263
LB_1263
;; rsp=1 , %1249~1'(= r ) %1248~0'(= r ) %1247~8'(= a11◂ [ a9◂ [ ]] ) 
; #92 8'(= a11◂ [ a9◂ [ ]] ) ⊢ 0(<2)◂8'(= a11◂ [ a9◂ [ ]] )
;; rsp=1 , %1250~0(<2)◂8'(= a11◂ [ a9◂ [ ]] ) %1249~1'(= r ) %1248~0'(= r ) 
; #22 0(<2)◂8'(= a11◂ [ a9◂ [ ]] ) ⊢ 0(<2)◂0(<2)◂8'(= a11◂ [ a9◂ [ ]] )
;; rsp=1 , %1251~0(<2)◂0(<2)◂8'(= a11◂ [ a9◂ [ ]] ) %1249~1'(= r ) %1248~0'(= r ) 
; ∎ 0(<2)◂0(<2)◂8'(= a11◂ [ a9◂ [ ]] )
; .dlt.ptn 1'(= r )
; .dlt.ptn 0'(= r )
; .mov_ptn2 0(<2)◂0(<2)◂8'(= a11◂ [ a9◂ [ ]] ) ⊢ 2'(= a3◂ [ a12◂ [ a9◂ [ ]{| l |}]] )
; .mov_ptn 0(<2)◂0(<2)◂8'(= a11◂ [ a9◂ [ ]] ) ⊢ 2'(= a3◂ [ a12◂ [ a9◂ [ ]{| l |}]] )
	mov rax,QWORD [rsp-8+8*1]
	mov rdi,rax
	mov rax,[SS_LN_TOP]
	mov rsi,[rax]
	mov QWORD [SS_LN_TOP],rsi 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov rdi,rax
	mov rax,[SS_LN_TOP]
	mov rsi,[rax]
	mov QWORD [SS_LN_TOP],rsi 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	lea rsp,[rsp+8*1]
	jmp LB_1262
LB_1262:
	movzx rax,BYTE [r8+6]
	cmp rax,0
	jnz LB_1236
	pop r14
	pop r9
	add rsp,8
	pop r13
	ret
LB_1236:
	lea rax,[r14+1]
	cmp rax,r9
	jg LB_1267
	jmp LB_1268
LB_1267:
	mov r8,unt_1
	jmp LB_1265
LB_1268:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],37
	jnz LB_1269
	jmp LB_1270
LB_1269:
	mov r8,unt_1
	jmp LB_1265
LB_1270:
	add r14,1
	jmp LB_1266
LB_1265:
	lea rsp,[rsp+8*0]
	jmp LB_1264
LB_1266:
	call GRM_77
	movzx rax,BYTE [r8+6]
	cmp rax,0
	jnz LB_1273
	jmp LB_1274
LB_1273:
	jmp LB_1271
LB_1274:
	lea rsp,[rsp-8*1]
; .mov_ptn2 2'(= {| l |} ) ⊢ 8'(= {| l |} )
; .mov_ptn 2'(= {| l |} ) ⊢ 8'(= {| l |} )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_1272
LB_1271:
	lea rsp,[rsp+8*0]
	pop rdi
	pop r9 
	pop r14
	pop r13
	ret
LB_1272:
	mov QWORD [rsp+8*1],r14
	mov r13,QWORD [rsp+16+8*1]
	mov r14,QWORD [rsp+8*1]
	jmp LB_1276
LB_1276
;; rsp=1 , %1254~1'(= r ) %1253~0'(= r ) %1252~8'(= {| l |} ) 
; #91 8'(= {| l |} ) ⊢ 1(<2)◂8'(= {| l |} )
;; rsp=1 , %1255~1(<2)◂8'(= {| l |} ) %1254~1'(= r ) %1253~0'(= r ) 
; #22 1(<2)◂8'(= {| l |} ) ⊢ 0(<2)◂1(<2)◂8'(= {| l |} )
;; rsp=1 , %1256~0(<2)◂1(<2)◂8'(= {| l |} ) %1254~1'(= r ) %1253~0'(= r ) 
; ∎ 0(<2)◂1(<2)◂8'(= {| l |} )
; .dlt.ptn 1'(= r )
; .dlt.ptn 0'(= r )
; .mov_ptn2 0(<2)◂1(<2)◂8'(= {| l |} ) ⊢ 2'(= a3◂ [ a12◂ [ a9◂ [ ]{| l |}]] )
; .mov_ptn 0(<2)◂1(<2)◂8'(= {| l |} ) ⊢ 2'(= a3◂ [ a12◂ [ a9◂ [ ]{| l |}]] )
	mov rax,QWORD [rsp-8+8*1]
	mov BYTE [rax+6],1
	mov rdi,rax
	mov rax,[SS_LN_TOP]
	mov rsi,[rax]
	mov QWORD [SS_LN_TOP],rsi 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	lea rsp,[rsp+8*1]
	jmp LB_1275
LB_1275:
	movzx rax,BYTE [r8+6]
	cmp rax,0
	jnz LB_1264
	pop r14
	pop r9
	add rsp,8
	pop r13
	ret
LB_1264:
	jmp LB_1279
LB_1278:
	add r14,1 
LB_1279:
	cmp r14,r9
	jge LB_1280
	movzx rax,BYTE [r13+8+r14]
	cmp rax,9 
	jz LB_1278
	cmp rax,32 
	jz LB_1278
LB_1280
	call GRM_77
	movzx rax,BYTE [r8+6]
	cmp rax,0
	jnz LB_1283
	jmp LB_1284
LB_1283:
	jmp LB_1281
LB_1284:
	lea rsp,[rsp-8*1]
; .mov_ptn2 2'(= {| l |} ) ⊢ 8'(= {| l |} )
; .mov_ptn 2'(= {| l |} ) ⊢ 8'(= {| l |} )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_1282
LB_1281:
	lea rsp,[rsp+8*0]
	jmp LB_1277
LB_1282:
	mov QWORD [rsp+8*1],r14
	mov r13,QWORD [rsp+16+8*1]
	mov r14,QWORD [rsp+8*1]
	jmp LB_1286
LB_1286
;; rsp=1 , %1259~1'(= r ) %1258~0'(= r ) %1257~8'(= {| l |} ) 
; #91 8'(= {| l |} ) ⊢ 1(<2)◂8'(= {| l |} )
;; rsp=1 , %1260~1(<2)◂8'(= {| l |} ) %1259~1'(= r ) %1258~0'(= r ) 
; #22 1(<2)◂8'(= {| l |} ) ⊢ 0(<2)◂1(<2)◂8'(= {| l |} )
;; rsp=1 , %1261~0(<2)◂1(<2)◂8'(= {| l |} ) %1259~1'(= r ) %1258~0'(= r ) 
; ∎ 0(<2)◂1(<2)◂8'(= {| l |} )
; .dlt.ptn 1'(= r )
; .dlt.ptn 0'(= r )
; .mov_ptn2 0(<2)◂1(<2)◂8'(= {| l |} ) ⊢ 2'(= a3◂ [ a12◂ [ a9◂ [ ]{| l |}]] )
; .mov_ptn 0(<2)◂1(<2)◂8'(= {| l |} ) ⊢ 2'(= a3◂ [ a12◂ [ a9◂ [ ]{| l |}]] )
	mov rax,QWORD [rsp-8+8*1]
	mov BYTE [rax+6],1
	mov rdi,rax
	mov rax,[SS_LN_TOP]
	mov rsi,[rax]
	mov QWORD [SS_LN_TOP],rsi 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	lea rsp,[rsp+8*1]
	jmp LB_1285
LB_1285:
	movzx rax,BYTE [r8+6]
	cmp rax,0
	jnz LB_1277
	pop r14
	pop r9
	add rsp,8
	pop r13
	ret
LB_1277:
	pop rdi
	pop r9 
	pop r14
	pop r13
	ret
ETR_205:
	mov r9,0x0000_ffff_ffff_ffff
	and r9,[r13]
	call GRM_205
	ret
GRM_205:
	sub rsp,32
	mov QWORD [rsp+24],r13
	mov QWORD [rsp+16],r14 
	mov QWORD [rsp+8],r9
	jmp LB_1289
LB_1288:
	add r14,1 
LB_1289:
	cmp r14,r9
	jge LB_1290
	movzx rax,BYTE [r13+8+r14]
	cmp rax,9 
	jz LB_1288
	cmp rax,32 
	jz LB_1288
LB_1290
	lea rax,[r14+1]
	cmp rax,r9
	jg LB_1293
	jmp LB_1294
LB_1293:
	mov r8,unt_1
	jmp LB_1291
LB_1294:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],123
	jnz LB_1295
	jmp LB_1296
LB_1295:
	mov r8,unt_1
	jmp LB_1291
LB_1296:
	add r14,1
	jmp LB_1292
LB_1291:
	lea rsp,[rsp+8*0]
	jmp LB_1287
LB_1292:
	jmp LB_1298
LB_1297:
	add r14,1 
LB_1298:
	cmp r14,r9
	jge LB_1299
	movzx rax,BYTE [r13+8+r14]
	cmp rax,9 
	jz LB_1297
	cmp rax,32 
	jz LB_1297
LB_1299
	call GRM_206
	movzx rax,BYTE [r8+6]
	cmp rax,0
	jnz LB_1302
	jmp LB_1303
LB_1302:
	jmp LB_1300
LB_1303:
	lea rsp,[rsp-8*1]
	mov r8,[r8+8]
; .mov_ptn2 2'(= a2◂ [ a8◂ [ a13◂ [ {| l |}]]] ) ⊢ 8'(= a2◂ [ a8◂ [ a13◂ [ {| l |}]]] )
; .mov_ptn 2'(= a2◂ [ a8◂ [ a13◂ [ {| l |}]]] ) ⊢ 8'(= a2◂ [ a8◂ [ a13◂ [ {| l |}]]] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_1301
LB_1300:
	lea rsp,[rsp+8*0]
	jmp LB_1287
LB_1301:
	jmp LB_1305
LB_1304:
	add r14,1 
LB_1305:
	cmp r14,r9
	jge LB_1306
	movzx rax,BYTE [r13+8+r14]
	cmp rax,9 
	jz LB_1304
	cmp rax,32 
	jz LB_1304
LB_1306
	lea rax,[r14+1]
	cmp rax,r9
	jg LB_1309
	jmp LB_1310
LB_1309:
	mov r8,unt_1
	jmp LB_1307
LB_1310:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],125
	jnz LB_1311
	jmp LB_1312
LB_1311:
	mov r8,unt_1
	jmp LB_1307
LB_1312:
	add r14,1
	jmp LB_1308
LB_1307:
	lea rsp,[rsp+8*1]
	jmp LB_1287
LB_1308:
	mov QWORD [rsp+8*1],r14
	mov r13,QWORD [rsp+16+8*1]
	mov r14,QWORD [rsp+8*1]
	jmp LB_1314
LB_1314
;; rsp=1 , %1264~1'(= r ) %1263~0'(= r ) %1262~8'(= a2◂ [ a8◂ [ a13◂ [ {| l |}]]] ) 
; #79 8'(= a2◂ [ a8◂ [ a13◂ [ {| l |}]]] ) ⊢ 0(<2)◂8'(= a2◂ [ a8◂ [ a13◂ [ {| l |}]]] )
;; rsp=1 , %1265~0(<2)◂8'(= a2◂ [ a8◂ [ a13◂ [ {| l |}]]] ) %1264~1'(= r ) %1263~0'(= r ) 
; #22 0(<2)◂8'(= a2◂ [ a8◂ [ a13◂ [ {| l |}]]] ) ⊢ 0(<2)◂0(<2)◂8'(= a2◂ [ a8◂ [ a13◂ [ {| l |}]]] )
;; rsp=1 , %1266~0(<2)◂0(<2)◂8'(= a2◂ [ a8◂ [ a13◂ [ {| l |}]]] ) %1264~1'(= r ) %1263~0'(= r ) 
; ∎ 0(<2)◂0(<2)◂8'(= a2◂ [ a8◂ [ a13◂ [ {| l |}]]] )
; .dlt.ptn 1'(= r )
; .dlt.ptn 0'(= r )
; .mov_ptn2 0(<2)◂0(<2)◂8'(= a2◂ [ a8◂ [ a13◂ [ {| l |}]]] ) ⊢ 2'(= a3◂ [ a8◂ [ a13◂ [ {| l |}]]] )
; .mov_ptn 0(<2)◂0(<2)◂8'(= a2◂ [ a8◂ [ a13◂ [ {| l |}]]] ) ⊢ 2'(= a3◂ [ a8◂ [ a13◂ [ {| l |}]]] )
	mov rax,QWORD [rsp-8+8*1]
	mov rdi,rax
	mov rax,[SS_LN_TOP]
	mov rsi,[rax]
	mov QWORD [SS_LN_TOP],rsi 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov rdi,rax
	mov rax,[SS_LN_TOP]
	mov rsi,[rax]
	mov QWORD [SS_LN_TOP],rsi 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	lea rsp,[rsp+8*1]
	jmp LB_1313
LB_1313:
	movzx rax,BYTE [r8+6]
	cmp rax,0
	jnz LB_1287
	pop r14
	pop r9
	add rsp,8
	pop r13
	ret
LB_1287:
	jmp LB_1317
LB_1316:
	add r14,1 
LB_1317:
	cmp r14,r9
	jge LB_1318
	movzx rax,BYTE [r13+8+r14]
	cmp rax,9 
	jz LB_1316
	cmp rax,32 
	jz LB_1316
LB_1318
	call GRM_209
	movzx rax,BYTE [r8+6]
	cmp rax,0
	jnz LB_1321
	jmp LB_1322
LB_1321:
	jmp LB_1319
LB_1322:
	lea rsp,[rsp-8*1]
	mov r8,[r8+8]
; .mov_ptn2 2'(= a13◂ [ {| l |}] ) ⊢ 8'(= a13◂ [ {| l |}] )
; .mov_ptn 2'(= a13◂ [ {| l |}] ) ⊢ 8'(= a13◂ [ {| l |}] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_1320
LB_1319:
	lea rsp,[rsp+8*0]
	jmp LB_1315
LB_1320:
	mov QWORD [rsp+8*1],r14
	mov r13,QWORD [rsp+16+8*1]
	mov r14,QWORD [rsp+8*1]
	jmp LB_1324
LB_1324
;; rsp=1 , %1269~1'(= r ) %1268~0'(= r ) %1267~8'(= a13◂ [ {| l |}] ) 
; #78 8'(= a13◂ [ {| l |}] ) ⊢ 1(<2)◂8'(= a13◂ [ {| l |}] )
;; rsp=1 , %1270~1(<2)◂8'(= a13◂ [ {| l |}] ) %1269~1'(= r ) %1268~0'(= r ) 
; #22 1(<2)◂8'(= a13◂ [ {| l |}] ) ⊢ 0(<2)◂1(<2)◂8'(= a13◂ [ {| l |}] )
;; rsp=1 , %1271~0(<2)◂1(<2)◂8'(= a13◂ [ {| l |}] ) %1269~1'(= r ) %1268~0'(= r ) 
; ∎ 0(<2)◂1(<2)◂8'(= a13◂ [ {| l |}] )
; .dlt.ptn 1'(= r )
; .dlt.ptn 0'(= r )
; .mov_ptn2 0(<2)◂1(<2)◂8'(= a13◂ [ {| l |}] ) ⊢ 2'(= a3◂ [ a8◂ [ a13◂ [ {| l |}]]] )
; .mov_ptn 0(<2)◂1(<2)◂8'(= a13◂ [ {| l |}] ) ⊢ 2'(= a3◂ [ a8◂ [ a13◂ [ {| l |}]]] )
	mov rax,QWORD [rsp-8+8*1]
	mov rdi,rax
	mov rax,[SS_LN_TOP]
	mov rsi,[rax]
	mov QWORD [SS_LN_TOP],rsi 
	mov QWORD [rax],0
	mov BYTE [rax+6],1
	mov QWORD [rax+8],rdi
	mov rdi,rax
	mov rax,[SS_LN_TOP]
	mov rsi,[rax]
	mov QWORD [SS_LN_TOP],rsi 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	lea rsp,[rsp+8*1]
	jmp LB_1323
LB_1323:
	movzx rax,BYTE [r8+6]
	cmp rax,0
	jnz LB_1315
	pop r14
	pop r9
	add rsp,8
	pop r13
	ret
LB_1315:
	pop rdi
	pop r9 
	pop r14
	pop r13
	ret
ETR_206:
	mov r9,0x0000_ffff_ffff_ffff
	and r9,[r13]
	call GRM_206
	ret
GRM_206:
	sub rsp,32
	mov QWORD [rsp+24],r13
	mov QWORD [rsp+16],r14 
	mov QWORD [rsp+8],r9
	jmp LB_1327
LB_1326:
	add r14,1 
LB_1327:
	cmp r14,r9
	jge LB_1328
	movzx rax,BYTE [r13+8+r14]
	cmp rax,9 
	jz LB_1326
	cmp rax,32 
	jz LB_1326
LB_1328
	call GRM_205
	movzx rax,BYTE [r8+6]
	cmp rax,0
	jnz LB_1331
	jmp LB_1332
LB_1331:
	jmp LB_1329
LB_1332:
	lea rsp,[rsp-8*1]
	mov r8,[r8+8]
; .mov_ptn2 2'(= a8◂ [ a13◂ [ {| l |}]] ) ⊢ 8'(= a8◂ [ a13◂ [ {| l |}]] )
; .mov_ptn 2'(= a8◂ [ a13◂ [ {| l |}]] ) ⊢ 8'(= a8◂ [ a13◂ [ {| l |}]] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_1330
LB_1329:
	lea rsp,[rsp+8*0]
	jmp LB_1325
LB_1330:
	jmp LB_1334
LB_1333:
	add r14,1 
LB_1334:
	cmp r14,r9
	jge LB_1335
	movzx rax,BYTE [r13+8+r14]
	cmp rax,9 
	jz LB_1333
	cmp rax,32 
	jz LB_1333
LB_1335
	call GRM_206
	movzx rax,BYTE [r8+6]
	cmp rax,0
	jnz LB_1338
	jmp LB_1339
LB_1338:
	jmp LB_1336
LB_1339:
	lea rsp,[rsp-8*1]
	mov r8,[r8+8]
; .mov_ptn2 2'(= a2◂ [ a8◂ [ a13◂ [ {| l |}]]] ) ⊢ 9'(= a2◂ [ a8◂ [ a13◂ [ {| l |}]]] )
; .mov_ptn 2'(= a2◂ [ a8◂ [ a13◂ [ {| l |}]]] ) ⊢ 9'(= a2◂ [ a8◂ [ a13◂ [ {| l |}]]] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_1337
LB_1336:
	lea rsp,[rsp+8*1]
	jmp LB_1325
LB_1337:
	mov QWORD [rsp+8*2],r14
	mov r13,QWORD [rsp+16+8*2]
	mov r14,QWORD [rsp+8*2]
	jmp LB_1341
LB_1341
;; rsp=2 , %1275~1'(= r ) %1274~0'(= r ) %1273~9'(= a2◂ [ a8◂ [ a13◂ [ {| l |}]]] ) %1272~8'(= a8◂ [ a13◂ [ {| l |}]] ) 
; #21 { 8'(= a8◂ [ a13◂ [ {| l |}]] ) 9'(= a2◂ [ a8◂ [ a13◂ [ {| l |}]]] ) } ⊢ 0(<2)◂{ 8'(= a8◂ [ a13◂ [ {| l |}]] ) 9'(= a2◂ [ a8◂ [ a13◂ [ {| l |}]]] ) }
;; rsp=2 , %1276~0(<2)◂{ 8'(= a8◂ [ a13◂ [ {| l |}]] ) 9'(= a2◂ [ a8◂ [ a13◂ [ {| l |}]]] ) } %1275~1'(= r ) %1274~0'(= r ) 
; #22 0(<2)◂{ 8'(= a8◂ [ a13◂ [ {| l |}]] ) 9'(= a2◂ [ a8◂ [ a13◂ [ {| l |}]]] ) } ⊢ 0(<2)◂0(<2)◂{ 8'(= a8◂ [ a13◂ [ {| l |}]] ) 9'(= a2◂ [ a8◂ [ a13◂ [ {| l |}]]] ) }
;; rsp=2 , %1277~0(<2)◂0(<2)◂{ 8'(= a8◂ [ a13◂ [ {| l |}]] ) 9'(= a2◂ [ a8◂ [ a13◂ [ {| l |}]]] ) } %1275~1'(= r ) %1274~0'(= r ) 
; ∎ 0(<2)◂0(<2)◂{ 8'(= a8◂ [ a13◂ [ {| l |}]] ) 9'(= a2◂ [ a8◂ [ a13◂ [ {| l |}]]] ) }
; .dlt.ptn 1'(= r )
; .dlt.ptn 0'(= r )
; .mov_ptn2 0(<2)◂0(<2)◂{ 8'(= a8◂ [ a13◂ [ {| l |}]] ) 9'(= a2◂ [ a8◂ [ a13◂ [ {| l |}]]] ) } ⊢ 2'(= a3◂ [ a2◂ [ a8◂ [ a13◂ [ {| l |}]]]] )
; .mov_ptn 0(<2)◂0(<2)◂{ 8'(= a8◂ [ a13◂ [ {| l |}]] ) 9'(= a2◂ [ a8◂ [ a13◂ [ {| l |}]]] ) } ⊢ 2'(= a3◂ [ a2◂ [ a8◂ [ a13◂ [ {| l |}]]]] )
	mov rax,[SS_RCD_2_TOP]
	mov rsi,[rax] 
	mov QWORD [SS_RCD_2_TOP],rsi
	mov QWORD [rax],0
	mov r13,rax
	mov rax,QWORD [rsp-8+8*2]
	mov rdi,r13
	mov QWORD [rdi+8+8*0],rax
	mov rax,QWORD [rsp-8+8*1]
	mov rdi,r13
	mov QWORD [rdi+8+8*1],rax
	mov rax,r13
	mov BYTE [rax+6],0
	mov rdi,rax
	mov rax,[SS_LN_TOP]
	mov rsi,[rax]
	mov QWORD [SS_LN_TOP],rsi 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	lea rsp,[rsp+8*2]
	jmp LB_1340
LB_1340:
	movzx rax,BYTE [r8+6]
	cmp rax,0
	jnz LB_1325
	pop r14
	pop r9
	add rsp,8
	pop r13
	ret
LB_1325:
	mov QWORD [rsp+8*0],r14
	mov r13,QWORD [rsp+16+8*0]
	mov r14,QWORD [rsp+8*0]
	jmp LB_1344
LB_1344
;; rsp=0 , %1279~1'(= r ) %1278~0'(= r ) 
; #20 { } ⊢ 1(<2)◂{ }
;; rsp=0 , %1280~1(<2)◂{ } %1279~1'(= r ) %1278~0'(= r ) 
; #22 1(<2)◂{ } ⊢ 0(<2)◂1(<2)◂{ }
;; rsp=0 , %1281~0(<2)◂1(<2)◂{ } %1279~1'(= r ) %1278~0'(= r ) 
; ∎ 0(<2)◂1(<2)◂{ }
; .dlt.ptn 1'(= r )
; .dlt.ptn 0'(= r )
; .mov_ptn2 0(<2)◂1(<2)◂{ } ⊢ 2'(= a3◂ [ a2◂ [ a8◂ [ a13◂ [ {| l |}]]]] )
; .mov_ptn 0(<2)◂1(<2)◂{ } ⊢ 2'(= a3◂ [ a2◂ [ a8◂ [ a13◂ [ {| l |}]]]] )
	mov rax,unt 
	mov rax,unt_1
	mov rdi,rax
	mov rax,[SS_LN_TOP]
	mov rsi,[rax]
	mov QWORD [SS_LN_TOP],rsi 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	jmp LB_1343
LB_1343:
	movzx rax,BYTE [r8+6]
	cmp rax,0
	jnz LB_1342
	pop r14
	pop r9
	add rsp,8
	pop r13
	ret
LB_1342:
	pop rdi
	pop r9 
	pop r14
	pop r13
	ret
ETR_207:
	mov r9,0x0000_ffff_ffff_ffff
	and r9,[r13]
	call GRM_207
	ret
GRM_207:
	sub rsp,32
	mov QWORD [rsp+24],r13
	mov QWORD [rsp+16],r14 
	mov QWORD [rsp+8],r9
	jmp LB_1347
LB_1346:
	add r14,1 
LB_1347:
	cmp r14,r9
	jge LB_1348
	movzx rax,BYTE [r13+8+r14]
	cmp rax,9 
	jz LB_1346
	cmp rax,32 
	jz LB_1346
LB_1348
	lea rax,[r14+1]
	cmp rax,r9
	jg LB_1351
	jmp LB_1352
LB_1351:
	mov r8,unt_1
	jmp LB_1349
LB_1352:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],44
	jnz LB_1353
	jmp LB_1354
LB_1353:
	mov r8,unt_1
	jmp LB_1349
LB_1354:
	add r14,1
	jmp LB_1350
LB_1349:
	lea rsp,[rsp+8*0]
	jmp LB_1345
LB_1350:
	jmp LB_1356
LB_1355:
	add r14,1 
LB_1356:
	cmp r14,r9
	jge LB_1357
	movzx rax,BYTE [r13+8+r14]
	cmp rax,9 
	jz LB_1355
	cmp rax,32 
	jz LB_1355
LB_1357
	call GRM_205
	movzx rax,BYTE [r8+6]
	cmp rax,0
	jnz LB_1360
	jmp LB_1361
LB_1360:
	jmp LB_1358
LB_1361:
	lea rsp,[rsp-8*1]
	mov r8,[r8+8]
; .mov_ptn2 2'(= a8◂ [ a13◂ [ {| l |}]] ) ⊢ 8'(= a8◂ [ a13◂ [ {| l |}]] )
; .mov_ptn 2'(= a8◂ [ a13◂ [ {| l |}]] ) ⊢ 8'(= a8◂ [ a13◂ [ {| l |}]] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_1359
LB_1358:
	lea rsp,[rsp+8*0]
	pop rdi
	pop r9 
	pop r14
	pop r13
	ret
LB_1359:
	jmp LB_1363
LB_1362:
	add r14,1 
LB_1363:
	cmp r14,r9
	jge LB_1364
	movzx rax,BYTE [r13+8+r14]
	cmp rax,9 
	jz LB_1362
	cmp rax,32 
	jz LB_1362
LB_1364
	call GRM_207
	movzx rax,BYTE [r8+6]
	cmp rax,0
	jnz LB_1367
	jmp LB_1368
LB_1367:
	jmp LB_1365
LB_1368:
	lea rsp,[rsp-8*1]
	mov r8,[r8+8]
; .mov_ptn2 2'(= a2◂ [ a8◂ [ a13◂ [ {| l |}]]] ) ⊢ 9'(= a2◂ [ a8◂ [ a13◂ [ {| l |}]]] )
; .mov_ptn 2'(= a2◂ [ a8◂ [ a13◂ [ {| l |}]]] ) ⊢ 9'(= a2◂ [ a8◂ [ a13◂ [ {| l |}]]] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_1366
LB_1365:
	lea rsp,[rsp+8*1]
	pop rdi
	pop r9 
	pop r14
	pop r13
	ret
LB_1366:
	mov QWORD [rsp+8*2],r14
	mov r13,QWORD [rsp+16+8*2]
	mov r14,QWORD [rsp+8*2]
	jmp LB_1370
LB_1370
;; rsp=2 , %1285~1'(= r ) %1284~0'(= r ) %1283~9'(= a2◂ [ a8◂ [ a13◂ [ {| l |}]]] ) %1282~8'(= a8◂ [ a13◂ [ {| l |}]] ) 
; #21 { 8'(= a8◂ [ a13◂ [ {| l |}]] ) 9'(= a2◂ [ a8◂ [ a13◂ [ {| l |}]]] ) } ⊢ 0(<2)◂{ 8'(= a8◂ [ a13◂ [ {| l |}]] ) 9'(= a2◂ [ a8◂ [ a13◂ [ {| l |}]]] ) }
;; rsp=2 , %1286~0(<2)◂{ 8'(= a8◂ [ a13◂ [ {| l |}]] ) 9'(= a2◂ [ a8◂ [ a13◂ [ {| l |}]]] ) } %1285~1'(= r ) %1284~0'(= r ) 
; #22 0(<2)◂{ 8'(= a8◂ [ a13◂ [ {| l |}]] ) 9'(= a2◂ [ a8◂ [ a13◂ [ {| l |}]]] ) } ⊢ 0(<2)◂0(<2)◂{ 8'(= a8◂ [ a13◂ [ {| l |}]] ) 9'(= a2◂ [ a8◂ [ a13◂ [ {| l |}]]] ) }
;; rsp=2 , %1287~0(<2)◂0(<2)◂{ 8'(= a8◂ [ a13◂ [ {| l |}]] ) 9'(= a2◂ [ a8◂ [ a13◂ [ {| l |}]]] ) } %1285~1'(= r ) %1284~0'(= r ) 
; ∎ 0(<2)◂0(<2)◂{ 8'(= a8◂ [ a13◂ [ {| l |}]] ) 9'(= a2◂ [ a8◂ [ a13◂ [ {| l |}]]] ) }
; .dlt.ptn 1'(= r )
; .dlt.ptn 0'(= r )
; .mov_ptn2 0(<2)◂0(<2)◂{ 8'(= a8◂ [ a13◂ [ {| l |}]] ) 9'(= a2◂ [ a8◂ [ a13◂ [ {| l |}]]] ) } ⊢ 2'(= a3◂ [ a2◂ [ a8◂ [ a13◂ [ {| l |}]]]] )
; .mov_ptn 0(<2)◂0(<2)◂{ 8'(= a8◂ [ a13◂ [ {| l |}]] ) 9'(= a2◂ [ a8◂ [ a13◂ [ {| l |}]]] ) } ⊢ 2'(= a3◂ [ a2◂ [ a8◂ [ a13◂ [ {| l |}]]]] )
	mov rax,[SS_RCD_2_TOP]
	mov rsi,[rax] 
	mov QWORD [SS_RCD_2_TOP],rsi
	mov QWORD [rax],0
	mov r13,rax
	mov rax,QWORD [rsp-8+8*2]
	mov rdi,r13
	mov QWORD [rdi+8+8*0],rax
	mov rax,QWORD [rsp-8+8*1]
	mov rdi,r13
	mov QWORD [rdi+8+8*1],rax
	mov rax,r13
	mov BYTE [rax+6],0
	mov rdi,rax
	mov rax,[SS_LN_TOP]
	mov rsi,[rax]
	mov QWORD [SS_LN_TOP],rsi 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	lea rsp,[rsp+8*2]
	jmp LB_1369
LB_1369:
	movzx rax,BYTE [r8+6]
	cmp rax,0
	jnz LB_1345
	pop r14
	pop r9
	add rsp,8
	pop r13
	ret
LB_1345:
	mov QWORD [rsp+8*0],r14
	mov r13,QWORD [rsp+16+8*0]
	mov r14,QWORD [rsp+8*0]
	jmp LB_1373
LB_1373
;; rsp=0 , %1289~1'(= r ) %1288~0'(= r ) 
; #20 { } ⊢ 1(<2)◂{ }
;; rsp=0 , %1290~1(<2)◂{ } %1289~1'(= r ) %1288~0'(= r ) 
; #22 1(<2)◂{ } ⊢ 0(<2)◂1(<2)◂{ }
;; rsp=0 , %1291~0(<2)◂1(<2)◂{ } %1289~1'(= r ) %1288~0'(= r ) 
; ∎ 0(<2)◂1(<2)◂{ }
; .dlt.ptn 1'(= r )
; .dlt.ptn 0'(= r )
; .mov_ptn2 0(<2)◂1(<2)◂{ } ⊢ 2'(= a3◂ [ a2◂ [ a8◂ [ a13◂ [ {| l |}]]]] )
; .mov_ptn 0(<2)◂1(<2)◂{ } ⊢ 2'(= a3◂ [ a2◂ [ a8◂ [ a13◂ [ {| l |}]]]] )
	mov rax,unt 
	mov rax,unt_1
	mov rdi,rax
	mov rax,[SS_LN_TOP]
	mov rsi,[rax]
	mov QWORD [SS_LN_TOP],rsi 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	jmp LB_1372
LB_1372:
	movzx rax,BYTE [r8+6]
	cmp rax,0
	jnz LB_1371
	pop r14
	pop r9
	add rsp,8
	pop r13
	ret
LB_1371:
	pop rdi
	pop r9 
	pop r14
	pop r13
	ret
ETR_208:
	mov r9,0x0000_ffff_ffff_ffff
	and r9,[r13]
	call GRM_208
	ret
GRM_208:
	sub rsp,32
	mov QWORD [rsp+24],r13
	mov QWORD [rsp+16],r14 
	mov QWORD [rsp+8],r9
	jmp LB_1376
LB_1375:
	add r14,1 
LB_1376:
	cmp r14,r9
	jge LB_1377
	movzx rax,BYTE [r13+8+r14]
	cmp rax,9 
	jz LB_1375
	cmp rax,32 
	jz LB_1375
LB_1377
	lea rax,[r14+1]
	cmp rax,r9
	jg LB_1380
	jmp LB_1381
LB_1380:
	mov r8,unt_1
	jmp LB_1378
LB_1381:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],44
	jnz LB_1382
	jmp LB_1383
LB_1382:
	mov r8,unt_1
	jmp LB_1378
LB_1383:
	add r14,1
	jmp LB_1379
LB_1378:
	lea rsp,[rsp+8*0]
	jmp LB_1374
LB_1379:
	jmp LB_1385
LB_1384:
	add r14,1 
LB_1385:
	cmp r14,r9
	jge LB_1386
	movzx rax,BYTE [r13+8+r14]
	cmp rax,9 
	jz LB_1384
	cmp rax,32 
	jz LB_1384
LB_1386
	call GRM_209
	movzx rax,BYTE [r8+6]
	cmp rax,0
	jnz LB_1389
	jmp LB_1390
LB_1389:
	jmp LB_1387
LB_1390:
	lea rsp,[rsp-8*1]
	mov r8,[r8+8]
; .mov_ptn2 2'(= a13◂ [ {| l |}] ) ⊢ 8'(= a13◂ [ {| l |}] )
; .mov_ptn 2'(= a13◂ [ {| l |}] ) ⊢ 8'(= a13◂ [ {| l |}] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_1388
LB_1387:
	lea rsp,[rsp+8*0]
	pop rdi
	pop r9 
	pop r14
	pop r13
	ret
LB_1388:
	jmp LB_1392
LB_1391:
	add r14,1 
LB_1392:
	cmp r14,r9
	jge LB_1393
	movzx rax,BYTE [r13+8+r14]
	cmp rax,9 
	jz LB_1391
	cmp rax,32 
	jz LB_1391
LB_1393
	call GRM_208
	movzx rax,BYTE [r8+6]
	cmp rax,0
	jnz LB_1396
	jmp LB_1397
LB_1396:
	jmp LB_1394
LB_1397:
	lea rsp,[rsp-8*1]
	mov r8,[r8+8]
; .mov_ptn2 2'(= a2◂ [ a13◂ [ {| l |}]] ) ⊢ 9'(= a2◂ [ a13◂ [ {| l |}]] )
; .mov_ptn 2'(= a2◂ [ a13◂ [ {| l |}]] ) ⊢ 9'(= a2◂ [ a13◂ [ {| l |}]] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_1395
LB_1394:
	lea rsp,[rsp+8*1]
	pop rdi
	pop r9 
	pop r14
	pop r13
	ret
LB_1395:
	mov QWORD [rsp+8*2],r14
	mov r13,QWORD [rsp+16+8*2]
	mov r14,QWORD [rsp+8*2]
	jmp LB_1399
LB_1399
;; rsp=2 , %1295~1'(= r ) %1294~0'(= r ) %1293~9'(= a2◂ [ a13◂ [ {| l |}]] ) %1292~8'(= a13◂ [ {| l |}] ) 
; #21 { 8'(= a13◂ [ {| l |}] ) 9'(= a2◂ [ a13◂ [ {| l |}]] ) } ⊢ 0(<2)◂{ 8'(= a13◂ [ {| l |}] ) 9'(= a2◂ [ a13◂ [ {| l |}]] ) }
;; rsp=2 , %1296~0(<2)◂{ 8'(= a13◂ [ {| l |}] ) 9'(= a2◂ [ a13◂ [ {| l |}]] ) } %1295~1'(= r ) %1294~0'(= r ) 
; #22 0(<2)◂{ 8'(= a13◂ [ {| l |}] ) 9'(= a2◂ [ a13◂ [ {| l |}]] ) } ⊢ 0(<2)◂0(<2)◂{ 8'(= a13◂ [ {| l |}] ) 9'(= a2◂ [ a13◂ [ {| l |}]] ) }
;; rsp=2 , %1297~0(<2)◂0(<2)◂{ 8'(= a13◂ [ {| l |}] ) 9'(= a2◂ [ a13◂ [ {| l |}]] ) } %1295~1'(= r ) %1294~0'(= r ) 
; ∎ 0(<2)◂0(<2)◂{ 8'(= a13◂ [ {| l |}] ) 9'(= a2◂ [ a13◂ [ {| l |}]] ) }
; .dlt.ptn 1'(= r )
; .dlt.ptn 0'(= r )
; .mov_ptn2 0(<2)◂0(<2)◂{ 8'(= a13◂ [ {| l |}] ) 9'(= a2◂ [ a13◂ [ {| l |}]] ) } ⊢ 2'(= a3◂ [ a2◂ [ a13◂ [ {| l |}]]] )
; .mov_ptn 0(<2)◂0(<2)◂{ 8'(= a13◂ [ {| l |}] ) 9'(= a2◂ [ a13◂ [ {| l |}]] ) } ⊢ 2'(= a3◂ [ a2◂ [ a13◂ [ {| l |}]]] )
	mov rax,[SS_RCD_2_TOP]
	mov rsi,[rax] 
	mov QWORD [SS_RCD_2_TOP],rsi
	mov QWORD [rax],0
	mov r13,rax
	mov rax,QWORD [rsp-8+8*2]
	mov rdi,r13
	mov QWORD [rdi+8+8*0],rax
	mov rax,QWORD [rsp-8+8*1]
	mov rdi,r13
	mov QWORD [rdi+8+8*1],rax
	mov rax,r13
	mov BYTE [rax+6],0
	mov rdi,rax
	mov rax,[SS_LN_TOP]
	mov rsi,[rax]
	mov QWORD [SS_LN_TOP],rsi 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	lea rsp,[rsp+8*2]
	jmp LB_1398
LB_1398:
	movzx rax,BYTE [r8+6]
	cmp rax,0
	jnz LB_1374
	pop r14
	pop r9
	add rsp,8
	pop r13
	ret
LB_1374:
	mov QWORD [rsp+8*0],r14
	mov r13,QWORD [rsp+16+8*0]
	mov r14,QWORD [rsp+8*0]
	jmp LB_1402
LB_1402
;; rsp=0 , %1299~1'(= r ) %1298~0'(= r ) 
; #20 { } ⊢ 1(<2)◂{ }
;; rsp=0 , %1300~1(<2)◂{ } %1299~1'(= r ) %1298~0'(= r ) 
; #22 1(<2)◂{ } ⊢ 0(<2)◂1(<2)◂{ }
;; rsp=0 , %1301~0(<2)◂1(<2)◂{ } %1299~1'(= r ) %1298~0'(= r ) 
; ∎ 0(<2)◂1(<2)◂{ }
; .dlt.ptn 1'(= r )
; .dlt.ptn 0'(= r )
; .mov_ptn2 0(<2)◂1(<2)◂{ } ⊢ 2'(= a3◂ [ a2◂ [ a13◂ [ {| l |}]]] )
; .mov_ptn 0(<2)◂1(<2)◂{ } ⊢ 2'(= a3◂ [ a2◂ [ a13◂ [ {| l |}]]] )
	mov rax,unt 
	mov rax,unt_1
	mov rdi,rax
	mov rax,[SS_LN_TOP]
	mov rsi,[rax]
	mov QWORD [SS_LN_TOP],rsi 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	jmp LB_1401
LB_1401:
	movzx rax,BYTE [r8+6]
	cmp rax,0
	jnz LB_1400
	pop r14
	pop r9
	add rsp,8
	pop r13
	ret
LB_1400:
	pop rdi
	pop r9 
	pop r14
	pop r13
	ret
ETR_209:
	mov r9,0x0000_ffff_ffff_ffff
	and r9,[r13]
	call GRM_209
	ret
GRM_209:
	sub rsp,32
	mov QWORD [rsp+24],r13
	mov QWORD [rsp+16],r14 
	mov QWORD [rsp+8],r9
	lea rax,[r14+1]
	cmp rax,r9
	jg LB_1406
	jmp LB_1407
LB_1406:
	mov r8,unt_1
	jmp LB_1404
LB_1407:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],37
	jnz LB_1408
	jmp LB_1409
LB_1408:
	mov r8,unt_1
	jmp LB_1404
LB_1409:
	add r14,1
	jmp LB_1405
LB_1404:
	lea rsp,[rsp+8*0]
	jmp LB_1403
LB_1405:
	call GRM_74
	movzx rax,BYTE [r8+6]
	cmp rax,0
	jnz LB_1412
	jmp LB_1413
LB_1412:
	jmp LB_1410
LB_1413:
	lea rsp,[rsp-8*1]
; .mov_ptn2 2'(= {| l |} ) ⊢ 8'(= {| l |} )
; .mov_ptn 2'(= {| l |} ) ⊢ 8'(= {| l |} )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_1411
LB_1410:
	lea rsp,[rsp+8*0]
	pop rdi
	pop r9 
	pop r14
	pop r13
	ret
LB_1411:
	mov QWORD [rsp+8*1],r14
	mov r13,QWORD [rsp+16+8*1]
	mov r14,QWORD [rsp+8*1]
	jmp LB_1415
LB_1415
;; rsp=1 , %1304~1'(= r ) %1303~0'(= r ) %1302~8'(= {| l |} ) 
; #89 8'(= {| l |} ) ⊢ 1(<2)◂8'(= {| l |} )
;; rsp=1 , %1305~1(<2)◂8'(= {| l |} ) %1304~1'(= r ) %1303~0'(= r ) 
; #22 1(<2)◂8'(= {| l |} ) ⊢ 0(<2)◂1(<2)◂8'(= {| l |} )
;; rsp=1 , %1306~0(<2)◂1(<2)◂8'(= {| l |} ) %1304~1'(= r ) %1303~0'(= r ) 
; ∎ 0(<2)◂1(<2)◂8'(= {| l |} )
; .dlt.ptn 1'(= r )
; .dlt.ptn 0'(= r )
; .mov_ptn2 0(<2)◂1(<2)◂8'(= {| l |} ) ⊢ 2'(= a3◂ [ a13◂ [ {| l |}]] )
; .mov_ptn 0(<2)◂1(<2)◂8'(= {| l |} ) ⊢ 2'(= a3◂ [ a13◂ [ {| l |}]] )
	mov rax,QWORD [rsp-8+8*1]
	mov BYTE [rax+6],1
	mov rdi,rax
	mov rax,[SS_LN_TOP]
	mov rsi,[rax]
	mov QWORD [SS_LN_TOP],rsi 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	lea rsp,[rsp+8*1]
	jmp LB_1414
LB_1414:
	movzx rax,BYTE [r8+6]
	cmp rax,0
	jnz LB_1403
	pop r14
	pop r9
	add rsp,8
	pop r13
	ret
LB_1403:
	call GRM_74
	movzx rax,BYTE [r8+6]
	cmp rax,0
	jnz LB_1419
	jmp LB_1420
LB_1419:
	jmp LB_1417
LB_1420:
	lea rsp,[rsp-8*1]
; .mov_ptn2 2'(= {| l |} ) ⊢ 8'(= {| l |} )
; .mov_ptn 2'(= {| l |} ) ⊢ 8'(= {| l |} )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_1418
LB_1417:
	lea rsp,[rsp+8*0]
	jmp LB_1416
LB_1418:
	mov QWORD [rsp+8*1],r14
	mov r13,QWORD [rsp+16+8*1]
	mov r14,QWORD [rsp+8*1]
	jmp LB_1422
LB_1422
;; rsp=1 , %1309~1'(= r ) %1308~0'(= r ) %1307~8'(= {| l |} ) 
; #89 8'(= {| l |} ) ⊢ 1(<2)◂8'(= {| l |} )
;; rsp=1 , %1310~1(<2)◂8'(= {| l |} ) %1309~1'(= r ) %1308~0'(= r ) 
; #22 1(<2)◂8'(= {| l |} ) ⊢ 0(<2)◂1(<2)◂8'(= {| l |} )
;; rsp=1 , %1311~0(<2)◂1(<2)◂8'(= {| l |} ) %1309~1'(= r ) %1308~0'(= r ) 
; ∎ 0(<2)◂1(<2)◂8'(= {| l |} )
; .dlt.ptn 1'(= r )
; .dlt.ptn 0'(= r )
; .mov_ptn2 0(<2)◂1(<2)◂8'(= {| l |} ) ⊢ 2'(= a3◂ [ a13◂ [ {| l |}]] )
; .mov_ptn 0(<2)◂1(<2)◂8'(= {| l |} ) ⊢ 2'(= a3◂ [ a13◂ [ {| l |}]] )
	mov rax,QWORD [rsp-8+8*1]
	mov BYTE [rax+6],1
	mov rdi,rax
	mov rax,[SS_LN_TOP]
	mov rsi,[rax]
	mov QWORD [SS_LN_TOP],rsi 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	lea rsp,[rsp+8*1]
	jmp LB_1421
LB_1421:
	movzx rax,BYTE [r8+6]
	cmp rax,0
	jnz LB_1416
	pop r14
	pop r9
	add rsp,8
	pop r13
	ret
LB_1416:
	lea rax,[r14+1]
	cmp rax,r9
	jg LB_1426
	jmp LB_1427
LB_1426:
	mov r8,unt_1
	jmp LB_1424
LB_1427:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],95
	jnz LB_1428
	jmp LB_1429
LB_1428:
	mov r8,unt_1
	jmp LB_1424
LB_1429:
	add r14,1
	jmp LB_1425
LB_1424:
	lea rsp,[rsp+8*0]
	jmp LB_1423
LB_1425:
	mov QWORD [rsp+8*0],r14
	mov r13,QWORD [rsp+16+8*0]
	mov r14,QWORD [rsp+8*0]
	jmp LB_1431
LB_1431
;; rsp=0 , %1313~1'(= r ) %1312~0'(= r ) 
; #23 { } ⊢ 1(<2)◂{ }
;; rsp=0 , %1314~1(<2)◂{ } %1313~1'(= r ) %1312~0'(= r ) 
; #90 1(<2)◂{ } ⊢ 0(<2)◂1(<2)◂{ }
;; rsp=0 , %1315~0(<2)◂1(<2)◂{ } %1313~1'(= r ) %1312~0'(= r ) 
; #22 0(<2)◂1(<2)◂{ } ⊢ 0(<2)◂0(<2)◂1(<2)◂{ }
;; rsp=0 , %1316~0(<2)◂0(<2)◂1(<2)◂{ } %1313~1'(= r ) %1312~0'(= r ) 
; ∎ 0(<2)◂0(<2)◂1(<2)◂{ }
; .dlt.ptn 1'(= r )
; .dlt.ptn 0'(= r )
; .mov_ptn2 0(<2)◂0(<2)◂1(<2)◂{ } ⊢ 2'(= a3◂ [ a13◂ [ {| l |}]] )
; .mov_ptn 0(<2)◂0(<2)◂1(<2)◂{ } ⊢ 2'(= a3◂ [ a13◂ [ {| l |}]] )
	mov rax,unt 
	mov rax,unt_1
	mov rdi,rax
	mov rax,[SS_LN_TOP]
	mov rsi,[rax]
	mov QWORD [SS_LN_TOP],rsi 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov rdi,rax
	mov rax,[SS_LN_TOP]
	mov rsi,[rax]
	mov QWORD [SS_LN_TOP],rsi 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	jmp LB_1430
LB_1430:
	movzx rax,BYTE [r8+6]
	cmp rax,0
	jnz LB_1423
	pop r14
	pop r9
	add rsp,8
	pop r13
	ret
LB_1423:
	pop rdi
	pop r9 
	pop r14
	pop r13
	ret
ETR_210:
	mov r9,0x0000_ffff_ffff_ffff
	and r9,[r13]
	call GRM_210
	ret
GRM_210:
	sub rsp,32
	mov QWORD [rsp+24],r13
	mov QWORD [rsp+16],r14 
	mov QWORD [rsp+8],r9
	jmp LB_1434
LB_1433:
	add r14,1 
LB_1434:
	cmp r14,r9
	jge LB_1435
	movzx rax,BYTE [r13+8+r14]
	cmp rax,9 
	jz LB_1433
	cmp rax,32 
	jz LB_1433
LB_1435
	call GRM_214
	movzx rax,BYTE [r8+6]
	cmp rax,0
	jnz LB_1438
	jmp LB_1439
LB_1438:
	jmp LB_1436
LB_1439:
	lea rsp,[rsp-8*1]
	mov r8,[r8+8]
; .mov_ptn2 2'(= a23◂ [ ] ) ⊢ 8'(= a23◂ [ ] )
; .mov_ptn 2'(= a23◂ [ ] ) ⊢ 8'(= a23◂ [ ] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_1437
LB_1436:
	lea rsp,[rsp+8*0]
	jmp LB_1432
LB_1437:
	jmp LB_1441
LB_1440:
	add r14,1 
LB_1441:
	cmp r14,r9
	jge LB_1442
	movzx rax,BYTE [r13+8+r14]
	cmp rax,9 
	jz LB_1440
	cmp rax,32 
	jz LB_1440
LB_1442
	call GRM_213
	movzx rax,BYTE [r8+6]
	cmp rax,0
	jnz LB_1445
	jmp LB_1446
LB_1445:
	jmp LB_1443
LB_1446:
	lea rsp,[rsp-8*1]
	mov r8,[r8+8]
; .mov_ptn2 2'(= a2◂ [ a23◂ [ ]] ) ⊢ 9'(= a2◂ [ a23◂ [ ]] )
; .mov_ptn 2'(= a2◂ [ a23◂ [ ]] ) ⊢ 9'(= a2◂ [ a23◂ [ ]] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_1444
LB_1443:
	lea rsp,[rsp+8*1]
	jmp LB_1432
LB_1444:
	jmp LB_1448
LB_1447:
	add r14,1 
LB_1448:
	cmp r14,r9
	jge LB_1449
	movzx rax,BYTE [r13+8+r14]
	cmp rax,9 
	jz LB_1447
	cmp rax,32 
	jz LB_1447
LB_1449
	call GRM_212
	movzx rax,BYTE [r8+6]
	cmp rax,0
	jnz LB_1452
	jmp LB_1453
LB_1452:
	jmp LB_1450
LB_1453:
	lea rsp,[rsp-8*1]
	mov r8,[r8+8]
; .mov_ptn2 2'(= a3◂ [ a23◂ [ ]] ) ⊢ 10'(= a3◂ [ a23◂ [ ]] )
; .mov_ptn 2'(= a3◂ [ a23◂ [ ]] ) ⊢ 10'(= a3◂ [ a23◂ [ ]] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_1451
LB_1450:
	lea rsp,[rsp+8*2]
	jmp LB_1432
LB_1451:
	mov QWORD [rsp+8*3],r14
	mov r13,QWORD [rsp+16+8*3]
	mov r14,QWORD [rsp+8*3]
	jmp LB_1455
LB_1455
;; rsp=3 , %1321~1'(= r ) %1320~0'(= r ) %1319~10'(= a3◂ [ a23◂ [ ]] ) %1318~9'(= a2◂ [ a23◂ [ ]] ) %1317~8'(= a23◂ [ ] ) 
; rsp_d=0, #186 { 8'(= a23◂ [ ] ) 9'(= a2◂ [ a23◂ [ ]] ) } ⊢ 2'(= a23◂ [ ] )
	lea rsp,[rsp-8*2]
	mov QWORD [rsp+8*0],r13
	mov QWORD [rsp+8*1],r14
; .mov_ptn2 { 8'(= a23◂ [ ] ) 9'(= a2◂ [ a23◂ [ ]] ) } ⊢ { 0'(= a23◂ [ ] ) 1'(= a2◂ [ a23◂ [ ]] ) }
; .mov_ptn 9'(= a2◂ [ a23◂ [ ]] ) ⊢ 1'(= a2◂ [ a23◂ [ ]] )
	mov rax,QWORD [rsp-8+8*4]
	mov r14,rax
; .mov_ptn 8'(= a23◂ [ ] ) ⊢ 0'(= a23◂ [ ] )
	mov rax,QWORD [rsp-8+8*5]
	mov r13,rax
	call ETR_186

	mov r14,QWORD [rsp-8+8*2]
	mov rax,QWORD [rsp-8+8*1]
	mov r8,r13
	mov r13,rax
	lea rsp,[rsp+8*2]
;; rsp=3 , %1322~2'(= a23◂ [ ] ) %1321~1'(= r ) %1320~0'(= r ) %1319~10'(= a3◂ [ a23◂ [ ]] ) 
;; ? 10'(= a3◂ [ a23◂ [ ]] ) ⊢ 0(<2)◂3'(= a23◂ [ ] )
	mov rdi,QWORD [rsp-8+8*1]
	movzx rax,BYTE [rdi+6]
	cmp rax,0
	jnz LB_1456
	mov rax,QWORD [rdi+8]
	mov r9,rax
;; rsp=3 , %1323~3'(= a23◂ [ ] ) %1322~2'(= a23◂ [ ] ) %1321~1'(= r ) %1320~0'(= r ) 
; #139 { 2'(= a23◂ [ ] ) 3'(= a23◂ [ ] ) } ⊢ 1(<5)◂{ 2'(= a23◂ [ ] ) 3'(= a23◂ [ ] ) }
;; rsp=3 , %1324~1(<5)◂{ 2'(= a23◂ [ ] ) 3'(= a23◂ [ ] ) } %1321~1'(= r ) %1320~0'(= r ) 
; #22 1(<5)◂{ 2'(= a23◂ [ ] ) 3'(= a23◂ [ ] ) } ⊢ 0(<2)◂1(<5)◂{ 2'(= a23◂ [ ] ) 3'(= a23◂ [ ] ) }
;; rsp=3 , %1325~0(<2)◂1(<5)◂{ 2'(= a23◂ [ ] ) 3'(= a23◂ [ ] ) } %1321~1'(= r ) %1320~0'(= r ) 
; ∎ 0(<2)◂1(<5)◂{ 2'(= a23◂ [ ] ) 3'(= a23◂ [ ] ) }
; .dlt.ptn 1'(= r )
; .dlt.ptn 0'(= r )
; .mov_ptn2 0(<2)◂1(<5)◂{ 2'(= a23◂ [ ] ) 3'(= a23◂ [ ] ) } ⊢ 2'(= a3◂ [ a23◂ [ ]] )
	mov r13,r8
; .mov_ptn 0(<2)◂1(<5)◂{ 0'(= a23◂ [ ] ) 3'(= a23◂ [ ] ) } ⊢ 2'(= a3◂ [ a23◂ [ ]] )
	mov rax,[SS_RCD_2_TOP]
	mov rsi,[rax] 
	mov QWORD [SS_RCD_2_TOP],rsi
	mov QWORD [rax],0
	mov r14,rax
	mov rax,r13
	mov rdi,r14
	mov QWORD [rdi+8+8*0],rax
	mov rax,r9
	mov rdi,r14
	mov QWORD [rdi+8+8*1],rax
	mov rax,r14
	mov BYTE [rax+6],1
	mov rdi,rax
	mov rax,[SS_LN_TOP]
	mov rsi,[rax]
	mov QWORD [SS_LN_TOP],rsi 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	lea rsp,[rsp+8*3]
	jmp LB_1454
LB_1456:
;; ? 10'(= a3◂ [ a23◂ [ ]] ) ⊢ 1(<2)◂{ }
;; rsp=3 , %1322~2'(= a23◂ [ ] ) %1321~1'(= r ) %1320~0'(= r ) 
; #22 2'(= a23◂ [ ] ) ⊢ 0(<2)◂2'(= a23◂ [ ] )
;; rsp=3 , %1326~0(<2)◂2'(= a23◂ [ ] ) %1321~1'(= r ) %1320~0'(= r ) 
; ∎ 0(<2)◂2'(= a23◂ [ ] )
; .dlt.ptn 1'(= r )
; .dlt.ptn 0'(= r )
; .mov_ptn2 0(<2)◂2'(= a23◂ [ ] ) ⊢ 2'(= a3◂ [ a23◂ [ ]] )
	mov r13,r8
; .mov_ptn 0(<2)◂0'(= a23◂ [ ] ) ⊢ 2'(= a3◂ [ a23◂ [ ]] )
	mov rax,r13
	mov rdi,rax
	mov rax,[SS_LN_TOP]
	mov rsi,[rax]
	mov QWORD [SS_LN_TOP],rsi 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	lea rsp,[rsp+8*3]
	jmp LB_1454
LB_1454:
	movzx rax,BYTE [r8+6]
	cmp rax,0
	jnz LB_1432
	pop r14
	pop r9
	add rsp,8
	pop r13
	ret
LB_1432:
	pop rdi
	pop r9 
	pop r14
	pop r13
	ret
ETR_211:
	mov r9,0x0000_ffff_ffff_ffff
	and r9,[r13]
	call GRM_211
	ret
GRM_211:
	sub rsp,32
	mov QWORD [rsp+24],r13
	mov QWORD [rsp+16],r14 
	mov QWORD [rsp+8],r9
	jmp LB_1459
LB_1458:
	add r14,1 
LB_1459:
	cmp r14,r9
	jge LB_1460
	movzx rax,BYTE [r13+8+r14]
	cmp rax,9 
	jz LB_1458
	cmp rax,32 
	jz LB_1458
LB_1460
	call GRM_210
	movzx rax,BYTE [r8+6]
	cmp rax,0
	jnz LB_1463
	jmp LB_1464
LB_1463:
	jmp LB_1461
LB_1464:
	lea rsp,[rsp-8*1]
	mov r8,[r8+8]
; .mov_ptn2 2'(= a23◂ [ ] ) ⊢ 8'(= a23◂ [ ] )
; .mov_ptn 2'(= a23◂ [ ] ) ⊢ 8'(= a23◂ [ ] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_1462
LB_1461:
	lea rsp,[rsp+8*0]
	jmp LB_1457
LB_1462:
	jmp LB_1466
LB_1465:
	add r14,1 
LB_1466:
	cmp r14,r9
	jge LB_1467
	movzx rax,BYTE [r13+8+r14]
	cmp rax,9 
	jz LB_1465
	cmp rax,32 
	jz LB_1465
LB_1467
	call GRM_211
	movzx rax,BYTE [r8+6]
	cmp rax,0
	jnz LB_1470
	jmp LB_1471
LB_1470:
	jmp LB_1468
LB_1471:
	lea rsp,[rsp-8*1]
	mov r8,[r8+8]
; .mov_ptn2 2'(= a2◂ [ a23◂ [ ]] ) ⊢ 9'(= a2◂ [ a23◂ [ ]] )
; .mov_ptn 2'(= a2◂ [ a23◂ [ ]] ) ⊢ 9'(= a2◂ [ a23◂ [ ]] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_1469
LB_1468:
	lea rsp,[rsp+8*1]
	jmp LB_1457
LB_1469:
	mov QWORD [rsp+8*2],r14
	mov r13,QWORD [rsp+16+8*2]
	mov r14,QWORD [rsp+8*2]
	jmp LB_1473
LB_1473
;; rsp=2 , %1330~1'(= r ) %1329~0'(= r ) %1328~9'(= a2◂ [ a23◂ [ ]] ) %1327~8'(= a23◂ [ ] ) 
; #21 { 8'(= a23◂ [ ] ) 9'(= a2◂ [ a23◂ [ ]] ) } ⊢ 0(<2)◂{ 8'(= a23◂ [ ] ) 9'(= a2◂ [ a23◂ [ ]] ) }
;; rsp=2 , %1331~0(<2)◂{ 8'(= a23◂ [ ] ) 9'(= a2◂ [ a23◂ [ ]] ) } %1330~1'(= r ) %1329~0'(= r ) 
; #22 0(<2)◂{ 8'(= a23◂ [ ] ) 9'(= a2◂ [ a23◂ [ ]] ) } ⊢ 0(<2)◂0(<2)◂{ 8'(= a23◂ [ ] ) 9'(= a2◂ [ a23◂ [ ]] ) }
;; rsp=2 , %1332~0(<2)◂0(<2)◂{ 8'(= a23◂ [ ] ) 9'(= a2◂ [ a23◂ [ ]] ) } %1330~1'(= r ) %1329~0'(= r ) 
; ∎ 0(<2)◂0(<2)◂{ 8'(= a23◂ [ ] ) 9'(= a2◂ [ a23◂ [ ]] ) }
; .dlt.ptn 1'(= r )
; .dlt.ptn 0'(= r )
; .mov_ptn2 0(<2)◂0(<2)◂{ 8'(= a23◂ [ ] ) 9'(= a2◂ [ a23◂ [ ]] ) } ⊢ 2'(= a3◂ [ a2◂ [ a23◂ [ ]]] )
; .mov_ptn 0(<2)◂0(<2)◂{ 8'(= a23◂ [ ] ) 9'(= a2◂ [ a23◂ [ ]] ) } ⊢ 2'(= a3◂ [ a2◂ [ a23◂ [ ]]] )
	mov rax,[SS_RCD_2_TOP]
	mov rsi,[rax] 
	mov QWORD [SS_RCD_2_TOP],rsi
	mov QWORD [rax],0
	mov r13,rax
	mov rax,QWORD [rsp-8+8*2]
	mov rdi,r13
	mov QWORD [rdi+8+8*0],rax
	mov rax,QWORD [rsp-8+8*1]
	mov rdi,r13
	mov QWORD [rdi+8+8*1],rax
	mov rax,r13
	mov BYTE [rax+6],0
	mov rdi,rax
	mov rax,[SS_LN_TOP]
	mov rsi,[rax]
	mov QWORD [SS_LN_TOP],rsi 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	lea rsp,[rsp+8*2]
	jmp LB_1472
LB_1472:
	movzx rax,BYTE [r8+6]
	cmp rax,0
	jnz LB_1457
	pop r14
	pop r9
	add rsp,8
	pop r13
	ret
LB_1457:
	mov QWORD [rsp+8*0],r14
	mov r13,QWORD [rsp+16+8*0]
	mov r14,QWORD [rsp+8*0]
	jmp LB_1476
LB_1476
;; rsp=0 , %1334~1'(= r ) %1333~0'(= r ) 
; #20 { } ⊢ 1(<2)◂{ }
;; rsp=0 , %1335~1(<2)◂{ } %1334~1'(= r ) %1333~0'(= r ) 
; #22 1(<2)◂{ } ⊢ 0(<2)◂1(<2)◂{ }
;; rsp=0 , %1336~0(<2)◂1(<2)◂{ } %1334~1'(= r ) %1333~0'(= r ) 
; ∎ 0(<2)◂1(<2)◂{ }
; .dlt.ptn 1'(= r )
; .dlt.ptn 0'(= r )
; .mov_ptn2 0(<2)◂1(<2)◂{ } ⊢ 2'(= a3◂ [ a2◂ [ a23◂ [ ]]] )
; .mov_ptn 0(<2)◂1(<2)◂{ } ⊢ 2'(= a3◂ [ a2◂ [ a23◂ [ ]]] )
	mov rax,unt 
	mov rax,unt_1
	mov rdi,rax
	mov rax,[SS_LN_TOP]
	mov rsi,[rax]
	mov QWORD [SS_LN_TOP],rsi 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	jmp LB_1475
LB_1475:
	movzx rax,BYTE [r8+6]
	cmp rax,0
	jnz LB_1474
	pop r14
	pop r9
	add rsp,8
	pop r13
	ret
LB_1474:
	pop rdi
	pop r9 
	pop r14
	pop r13
	ret
ETR_212:
	mov r9,0x0000_ffff_ffff_ffff
	and r9,[r13]
	call GRM_212
	ret
GRM_212:
	sub rsp,32
	mov QWORD [rsp+24],r13
	mov QWORD [rsp+16],r14 
	mov QWORD [rsp+8],r9
	jmp LB_1479
LB_1478:
	add r14,1 
LB_1479:
	cmp r14,r9
	jge LB_1480
	movzx rax,BYTE [r13+8+r14]
	cmp rax,9 
	jz LB_1478
	cmp rax,32 
	jz LB_1478
LB_1480
	lea rax,[r14+3]
	cmp rax,r9
	jg LB_1483
	jmp LB_1484
LB_1483:
	mov r8,unt_1
	jmp LB_1481
LB_1484:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],226
	jnz LB_1485
	cmp BYTE [rdi+1],134
	jnz LB_1485
	cmp BYTE [rdi+2],146
	jnz LB_1485
	jmp LB_1486
LB_1485:
	mov r8,unt_1
	jmp LB_1481
LB_1486:
	add r14,3
	jmp LB_1482
LB_1481:
	lea rsp,[rsp+8*0]
	jmp LB_1477
LB_1482:
	jmp LB_1488
LB_1487:
	add r14,1 
LB_1488:
	cmp r14,r9
	jge LB_1489
	movzx rax,BYTE [r13+8+r14]
	cmp rax,9 
	jz LB_1487
	cmp rax,32 
	jz LB_1487
LB_1489
	call GRM_210
	movzx rax,BYTE [r8+6]
	cmp rax,0
	jnz LB_1492
	jmp LB_1493
LB_1492:
	jmp LB_1490
LB_1493:
	lea rsp,[rsp-8*1]
	mov r8,[r8+8]
; .mov_ptn2 2'(= a23◂ [ ] ) ⊢ 8'(= a23◂ [ ] )
; .mov_ptn 2'(= a23◂ [ ] ) ⊢ 8'(= a23◂ [ ] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_1491
LB_1490:
	lea rsp,[rsp+8*0]
	jmp LB_1477
LB_1491:
	mov QWORD [rsp+8*1],r14
	mov r13,QWORD [rsp+16+8*1]
	mov r14,QWORD [rsp+8*1]
	jmp LB_1495
LB_1495
;; rsp=1 , %1339~1'(= r ) %1338~0'(= r ) %1337~8'(= a23◂ [ ] ) 
; #22 8'(= a23◂ [ ] ) ⊢ 0(<2)◂8'(= a23◂ [ ] )
;; rsp=1 , %1340~0(<2)◂8'(= a23◂ [ ] ) %1339~1'(= r ) %1338~0'(= r ) 
; #22 0(<2)◂8'(= a23◂ [ ] ) ⊢ 0(<2)◂0(<2)◂8'(= a23◂ [ ] )
;; rsp=1 , %1341~0(<2)◂0(<2)◂8'(= a23◂ [ ] ) %1339~1'(= r ) %1338~0'(= r ) 
; ∎ 0(<2)◂0(<2)◂8'(= a23◂ [ ] )
; .dlt.ptn 1'(= r )
; .dlt.ptn 0'(= r )
; .mov_ptn2 0(<2)◂0(<2)◂8'(= a23◂ [ ] ) ⊢ 2'(= a3◂ [ a3◂ [ a23◂ [ ]]] )
; .mov_ptn 0(<2)◂0(<2)◂8'(= a23◂ [ ] ) ⊢ 2'(= a3◂ [ a3◂ [ a23◂ [ ]]] )
	mov rax,QWORD [rsp-8+8*1]
	mov rdi,rax
	mov rax,[SS_LN_TOP]
	mov rsi,[rax]
	mov QWORD [SS_LN_TOP],rsi 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov rdi,rax
	mov rax,[SS_LN_TOP]
	mov rsi,[rax]
	mov QWORD [SS_LN_TOP],rsi 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	lea rsp,[rsp+8*1]
	jmp LB_1494
LB_1494:
	movzx rax,BYTE [r8+6]
	cmp rax,0
	jnz LB_1477
	pop r14
	pop r9
	add rsp,8
	pop r13
	ret
LB_1477:
	mov QWORD [rsp+8*0],r14
	mov r13,QWORD [rsp+16+8*0]
	mov r14,QWORD [rsp+8*0]
	jmp LB_1498
LB_1498
;; rsp=0 , %1343~1'(= r ) %1342~0'(= r ) 
; #23 { } ⊢ 1(<2)◂{ }
;; rsp=0 , %1344~1(<2)◂{ } %1343~1'(= r ) %1342~0'(= r ) 
; #22 1(<2)◂{ } ⊢ 0(<2)◂1(<2)◂{ }
;; rsp=0 , %1345~0(<2)◂1(<2)◂{ } %1343~1'(= r ) %1342~0'(= r ) 
; ∎ 0(<2)◂1(<2)◂{ }
; .dlt.ptn 1'(= r )
; .dlt.ptn 0'(= r )
; .mov_ptn2 0(<2)◂1(<2)◂{ } ⊢ 2'(= a3◂ [ a3◂ [ a23◂ [ ]]] )
; .mov_ptn 0(<2)◂1(<2)◂{ } ⊢ 2'(= a3◂ [ a3◂ [ a23◂ [ ]]] )
	mov rax,unt 
	mov rax,unt_1
	mov rdi,rax
	mov rax,[SS_LN_TOP]
	mov rsi,[rax]
	mov QWORD [SS_LN_TOP],rsi 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	jmp LB_1497
LB_1497:
	movzx rax,BYTE [r8+6]
	cmp rax,0
	jnz LB_1496
	pop r14
	pop r9
	add rsp,8
	pop r13
	ret
LB_1496:
	pop rdi
	pop r9 
	pop r14
	pop r13
	ret
ETR_213:
	mov r9,0x0000_ffff_ffff_ffff
	and r9,[r13]
	call GRM_213
	ret
GRM_213:
	sub rsp,32
	mov QWORD [rsp+24],r13
	mov QWORD [rsp+16],r14 
	mov QWORD [rsp+8],r9
	jmp LB_1501
LB_1500:
	add r14,1 
LB_1501:
	cmp r14,r9
	jge LB_1502
	movzx rax,BYTE [r13+8+r14]
	cmp rax,9 
	jz LB_1500
	cmp rax,32 
	jz LB_1500
LB_1502
	lea rax,[r14+3]
	cmp rax,r9
	jg LB_1505
	jmp LB_1506
LB_1505:
	mov r8,unt_1
	jmp LB_1503
LB_1506:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],226
	jnz LB_1507
	cmp BYTE [rdi+1],151
	jnz LB_1507
	cmp BYTE [rdi+2],130
	jnz LB_1507
	jmp LB_1508
LB_1507:
	mov r8,unt_1
	jmp LB_1503
LB_1508:
	add r14,3
	jmp LB_1504
LB_1503:
	lea rsp,[rsp+8*0]
	jmp LB_1499
LB_1504:
	jmp LB_1510
LB_1509:
	add r14,1 
LB_1510:
	cmp r14,r9
	jge LB_1511
	movzx rax,BYTE [r13+8+r14]
	cmp rax,9 
	jz LB_1509
	cmp rax,32 
	jz LB_1509
LB_1511
	call GRM_214
	movzx rax,BYTE [r8+6]
	cmp rax,0
	jnz LB_1514
	jmp LB_1515
LB_1514:
	jmp LB_1512
LB_1515:
	lea rsp,[rsp-8*1]
	mov r8,[r8+8]
; .mov_ptn2 2'(= a23◂ [ ] ) ⊢ 8'(= a23◂ [ ] )
; .mov_ptn 2'(= a23◂ [ ] ) ⊢ 8'(= a23◂ [ ] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_1513
LB_1512:
	lea rsp,[rsp+8*0]
	jmp LB_1499
LB_1513:
	jmp LB_1517
LB_1516:
	add r14,1 
LB_1517:
	cmp r14,r9
	jge LB_1518
	movzx rax,BYTE [r13+8+r14]
	cmp rax,9 
	jz LB_1516
	cmp rax,32 
	jz LB_1516
LB_1518
	call GRM_213
	movzx rax,BYTE [r8+6]
	cmp rax,0
	jnz LB_1521
	jmp LB_1522
LB_1521:
	jmp LB_1519
LB_1522:
	lea rsp,[rsp-8*1]
	mov r8,[r8+8]
; .mov_ptn2 2'(= a2◂ [ a23◂ [ ]] ) ⊢ 9'(= a2◂ [ a23◂ [ ]] )
; .mov_ptn 2'(= a2◂ [ a23◂ [ ]] ) ⊢ 9'(= a2◂ [ a23◂ [ ]] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_1520
LB_1519:
	lea rsp,[rsp+8*1]
	jmp LB_1499
LB_1520:
	mov QWORD [rsp+8*2],r14
	mov r13,QWORD [rsp+16+8*2]
	mov r14,QWORD [rsp+8*2]
	jmp LB_1524
LB_1524
;; rsp=2 , %1349~1'(= r ) %1348~0'(= r ) %1347~9'(= a2◂ [ a23◂ [ ]] ) %1346~8'(= a23◂ [ ] ) 
; #21 { 8'(= a23◂ [ ] ) 9'(= a2◂ [ a23◂ [ ]] ) } ⊢ 0(<2)◂{ 8'(= a23◂ [ ] ) 9'(= a2◂ [ a23◂ [ ]] ) }
;; rsp=2 , %1350~0(<2)◂{ 8'(= a23◂ [ ] ) 9'(= a2◂ [ a23◂ [ ]] ) } %1349~1'(= r ) %1348~0'(= r ) 
; #22 0(<2)◂{ 8'(= a23◂ [ ] ) 9'(= a2◂ [ a23◂ [ ]] ) } ⊢ 0(<2)◂0(<2)◂{ 8'(= a23◂ [ ] ) 9'(= a2◂ [ a23◂ [ ]] ) }
;; rsp=2 , %1351~0(<2)◂0(<2)◂{ 8'(= a23◂ [ ] ) 9'(= a2◂ [ a23◂ [ ]] ) } %1349~1'(= r ) %1348~0'(= r ) 
; ∎ 0(<2)◂0(<2)◂{ 8'(= a23◂ [ ] ) 9'(= a2◂ [ a23◂ [ ]] ) }
; .dlt.ptn 1'(= r )
; .dlt.ptn 0'(= r )
; .mov_ptn2 0(<2)◂0(<2)◂{ 8'(= a23◂ [ ] ) 9'(= a2◂ [ a23◂ [ ]] ) } ⊢ 2'(= a3◂ [ a2◂ [ a23◂ [ ]]] )
; .mov_ptn 0(<2)◂0(<2)◂{ 8'(= a23◂ [ ] ) 9'(= a2◂ [ a23◂ [ ]] ) } ⊢ 2'(= a3◂ [ a2◂ [ a23◂ [ ]]] )
	mov rax,[SS_RCD_2_TOP]
	mov rsi,[rax] 
	mov QWORD [SS_RCD_2_TOP],rsi
	mov QWORD [rax],0
	mov r13,rax
	mov rax,QWORD [rsp-8+8*2]
	mov rdi,r13
	mov QWORD [rdi+8+8*0],rax
	mov rax,QWORD [rsp-8+8*1]
	mov rdi,r13
	mov QWORD [rdi+8+8*1],rax
	mov rax,r13
	mov BYTE [rax+6],0
	mov rdi,rax
	mov rax,[SS_LN_TOP]
	mov rsi,[rax]
	mov QWORD [SS_LN_TOP],rsi 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	lea rsp,[rsp+8*2]
	jmp LB_1523
LB_1523:
	movzx rax,BYTE [r8+6]
	cmp rax,0
	jnz LB_1499
	pop r14
	pop r9
	add rsp,8
	pop r13
	ret
LB_1499:
	mov QWORD [rsp+8*0],r14
	mov r13,QWORD [rsp+16+8*0]
	mov r14,QWORD [rsp+8*0]
	jmp LB_1527
LB_1527
;; rsp=0 , %1353~1'(= r ) %1352~0'(= r ) 
; #20 { } ⊢ 1(<2)◂{ }
;; rsp=0 , %1354~1(<2)◂{ } %1353~1'(= r ) %1352~0'(= r ) 
; #22 1(<2)◂{ } ⊢ 0(<2)◂1(<2)◂{ }
;; rsp=0 , %1355~0(<2)◂1(<2)◂{ } %1353~1'(= r ) %1352~0'(= r ) 
; ∎ 0(<2)◂1(<2)◂{ }
; .dlt.ptn 1'(= r )
; .dlt.ptn 0'(= r )
; .mov_ptn2 0(<2)◂1(<2)◂{ } ⊢ 2'(= a3◂ [ a2◂ [ a23◂ [ ]]] )
; .mov_ptn 0(<2)◂1(<2)◂{ } ⊢ 2'(= a3◂ [ a2◂ [ a23◂ [ ]]] )
	mov rax,unt 
	mov rax,unt_1
	mov rdi,rax
	mov rax,[SS_LN_TOP]
	mov rsi,[rax]
	mov QWORD [SS_LN_TOP],rsi 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	jmp LB_1526
LB_1526:
	movzx rax,BYTE [r8+6]
	cmp rax,0
	jnz LB_1525
	pop r14
	pop r9
	add rsp,8
	pop r13
	ret
LB_1525:
	pop rdi
	pop r9 
	pop r14
	pop r13
	ret
ETR_214:
	mov r9,0x0000_ffff_ffff_ffff
	and r9,[r13]
	call GRM_214
	ret
GRM_214:
	sub rsp,32
	mov QWORD [rsp+24],r13
	mov QWORD [rsp+16],r14 
	mov QWORD [rsp+8],r9
	jmp LB_1530
LB_1529:
	add r14,1 
LB_1530:
	cmp r14,r9
	jge LB_1531
	movzx rax,BYTE [r13+8+r14]
	cmp rax,9 
	jz LB_1529
	cmp rax,32 
	jz LB_1529
LB_1531
	lea rax,[r14+1]
	cmp rax,r9
	jg LB_1534
	jmp LB_1535
LB_1534:
	mov r8,unt_1
	jmp LB_1532
LB_1535:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],123
	jnz LB_1536
	jmp LB_1537
LB_1536:
	mov r8,unt_1
	jmp LB_1532
LB_1537:
	add r14,1
	jmp LB_1533
LB_1532:
	lea rsp,[rsp+8*0]
	jmp LB_1528
LB_1533:
	jmp LB_1539
LB_1538:
	add r14,1 
LB_1539:
	cmp r14,r9
	jge LB_1540
	movzx rax,BYTE [r13+8+r14]
	cmp rax,9 
	jz LB_1538
	cmp rax,32 
	jz LB_1538
LB_1540
	call GRM_211
	movzx rax,BYTE [r8+6]
	cmp rax,0
	jnz LB_1543
	jmp LB_1544
LB_1543:
	jmp LB_1541
LB_1544:
	lea rsp,[rsp-8*1]
	mov r8,[r8+8]
; .mov_ptn2 2'(= a2◂ [ a23◂ [ ]] ) ⊢ 8'(= a2◂ [ a23◂ [ ]] )
; .mov_ptn 2'(= a2◂ [ a23◂ [ ]] ) ⊢ 8'(= a2◂ [ a23◂ [ ]] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_1542
LB_1541:
	lea rsp,[rsp+8*0]
	jmp LB_1528
LB_1542:
	jmp LB_1546
LB_1545:
	add r14,1 
LB_1546:
	cmp r14,r9
	jge LB_1547
	movzx rax,BYTE [r13+8+r14]
	cmp rax,9 
	jz LB_1545
	cmp rax,32 
	jz LB_1545
LB_1547
	lea rax,[r14+1]
	cmp rax,r9
	jg LB_1550
	jmp LB_1551
LB_1550:
	mov r8,unt_1
	jmp LB_1548
LB_1551:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],125
	jnz LB_1552
	jmp LB_1553
LB_1552:
	mov r8,unt_1
	jmp LB_1548
LB_1553:
	add r14,1
	jmp LB_1549
LB_1548:
	lea rsp,[rsp+8*1]
	jmp LB_1528
LB_1549:
	mov QWORD [rsp+8*1],r14
	mov r13,QWORD [rsp+16+8*1]
	mov r14,QWORD [rsp+8*1]
	jmp LB_1555
LB_1557: ; 51 { 0'(= a2◂ [ a23◂ [ ]] ) 1'(= a2◂ [ a23◂ [ ]] ) } ⊢ 0'(= a2◂ [ a23◂ [ ]] ) : ({ _lst◂2966'(=2967'(=_t23)) _lst◂_t23 }→_lst◂_t23)
;; rsp=0 , %116~1'(= a2◂ [ a23◂ [ ]] ) %115~0'(= a2◂ [ a23◂ [ ]] ) 
;; ? 1'(= a2◂ [ a23◂ [ ]] ) ⊢ 1(<2)◂{ }
	mov rdi,r14
	movzx rax,BYTE [rdi+6]
	cmp rax,1
	jnz LB_1558
;; rsp=0 , %115~0'(= a2◂ [ a23◂ [ ]] ) 
; ∎ 0'(= a2◂ [ a23◂ [ ]] )
; .mov_ptn2 0'(= a2◂ [ a23◂ [ ]] ) ⊢ 0'(= a2◂ [ a23◂ [ ]] )
	ret
LB_1558:
;; ? 1'(= a2◂ [ a23◂ [ ]] ) ⊢ 0(<2)◂{ 2'(= a23◂ [ ] ) 3'(= a2◂ [ a23◂ [ ]] ) }
	mov rdi,r14
	mov rdi,QWORD [rdi+8+8*0]
	mov r8,rdi
	mov rdi,r14
	mov rdi,QWORD [rdi+8+8*1]
	mov r9,rdi
;; rsp=0 , %118~3'(= a2◂ [ a23◂ [ ]] ) %117~2'(= a23◂ [ ] ) %115~0'(= a2◂ [ a23◂ [ ]] ) 
; #21 { 2'(= a23◂ [ ] ) 0'(= a2◂ [ a23◂ [ ]] ) } ⊢ 0(<2)◂{ 2'(= a23◂ [ ] ) 0'(= a2◂ [ a23◂ [ ]] ) }
;; rsp=0 , %119~0(<2)◂{ 2'(= a23◂ [ ] ) 0'(= a2◂ [ a23◂ [ ]] ) } %118~3'(= a2◂ [ a23◂ [ ]] ) 
; rsp_d=0, #51 { 0(<2)◂{ 2'(= a23◂ [ ] ) 0'(= a2◂ [ a23◂ [ ]] ) } 3'(= a2◂ [ a23◂ [ ]] ) } ⊢ 0'(= a2◂ [ a23◂ [ ]] )
; .mov_ptn2 { 0(<2)◂{ 2'(= a23◂ [ ] ) 0'(= a2◂ [ a23◂ [ ]] ) } 3'(= a2◂ [ a23◂ [ ]] ) } ⊢ { 0'(= a2◂ [ a23◂ [ ]] ) 1'(= a2◂ [ a23◂ [ ]] ) }
; .mov_ptn 3'(= a2◂ [ a23◂ [ ]] ) ⊢ 1'(= a2◂ [ a23◂ [ ]] )
	mov rax,r9
	mov r14,rax
	mov r10,r13
; .mov_ptn 0(<2)◂{ 2'(= a23◂ [ ] ) 4'(= a2◂ [ a23◂ [ ]] ) } ⊢ 0'(= a2◂ [ a23◂ [ ]] )
	mov rax,[SS_RCD_2_TOP]
	mov rsi,[rax] 
	mov QWORD [SS_RCD_2_TOP],rsi
	mov QWORD [rax],0
	mov r9,rax
	mov rax,r8
	mov rdi,r9
	mov QWORD [rdi+8+8*0],rax
	mov rax,r10
	mov rdi,r9
	mov QWORD [rdi+8+8*1],rax
	mov rax,r9
	mov BYTE [rax+6],0
	mov r13,rax
	call LB_1557

;; rsp=0 , %120~0'(= a2◂ [ a23◂ [ ]] ) 
; ∎ 0'(= a2◂ [ a23◂ [ ]] )
; .mov_ptn2 0'(= a2◂ [ a23◂ [ ]] ) ⊢ 0'(= a2◂ [ a23◂ [ ]] )
	ret
LB_1556: ; 52 0'(= a2◂ [ a23◂ [ ]] ) ⊢ 0'(= a2◂ [ a23◂ [ ]] ) : (_lst◂_t23→_lst◂_t23)
;; rsp=0 , %121~0'(= a2◂ [ a23◂ [ ]] ) 
; #20 { } ⊢ 1(<2)◂{ }
;; rsp=0 , %122~1(<2)◂{ } %121~0'(= a2◂ [ a23◂ [ ]] ) 
; rsp_d=0, #51 { 1(<2)◂{ } 0'(= a2◂ [ a23◂ [ ]] ) } ⊢ 0'(= a2◂ [ a23◂ [ ]] )
; .mov_ptn2 { 1(<2)◂{ } 0'(= a2◂ [ a23◂ [ ]] ) } ⊢ { 0'(= a2◂ [ a23◂ [ ]] ) 1'(= a2◂ [ a23◂ [ ]] ) }
; .mov_ptn 0'(= a2◂ [ a23◂ [ ]] ) ⊢ 1'(= a2◂ [ a23◂ [ ]] )
	mov rax,r13
	mov r14,rax
; .mov_ptn 1(<2)◂{ } ⊢ 0'(= a2◂ [ a23◂ [ ]] )
	mov rax,unt 
	mov rax,unt_1
	mov r13,rax
	call LB_1557

;; rsp=0 , %123~0'(= a2◂ [ a23◂ [ ]] ) 
; ∎ 0'(= a2◂ [ a23◂ [ ]] )
; .mov_ptn2 0'(= a2◂ [ a23◂ [ ]] ) ⊢ 0'(= a2◂ [ a23◂ [ ]] )
	ret
LB_1555
;; rsp=1 , %1358~1'(= r ) %1357~0'(= r ) %1356~8'(= a2◂ [ a23◂ [ ]] ) 
; rsp_d=0, #52 8'(= a2◂ [ a23◂ [ ]] ) ⊢ 2'(= a2◂ [ a23◂ [ ]] )
	lea rsp,[rsp-8*2]
	mov QWORD [rsp+8*0],r13
	mov QWORD [rsp+8*1],r14
; .mov_ptn2 8'(= a2◂ [ a23◂ [ ]] ) ⊢ 0'(= a2◂ [ a23◂ [ ]] )
; .mov_ptn 8'(= a2◂ [ a23◂ [ ]] ) ⊢ 0'(= a2◂ [ a23◂ [ ]] )
	mov rax,QWORD [rsp-8+8*3]
	mov r13,rax
	call LB_1556

	mov r14,QWORD [rsp-8+8*2]
	mov rax,QWORD [rsp-8+8*1]
	mov r8,r13
	mov r13,rax
	lea rsp,[rsp+8*3]
;; rsp=0 , %1359~2'(= a2◂ [ a23◂ [ ]] ) %1358~1'(= r ) %1357~0'(= r ) 
; #140 2'(= a2◂ [ a23◂ [ ]] ) ⊢ 0(<5)◂2'(= a2◂ [ a23◂ [ ]] )
;; rsp=0 , %1360~0(<5)◂2'(= a2◂ [ a23◂ [ ]] ) %1358~1'(= r ) %1357~0'(= r ) 
; #22 0(<5)◂2'(= a2◂ [ a23◂ [ ]] ) ⊢ 0(<2)◂0(<5)◂2'(= a2◂ [ a23◂ [ ]] )
;; rsp=0 , %1361~0(<2)◂0(<5)◂2'(= a2◂ [ a23◂ [ ]] ) %1358~1'(= r ) %1357~0'(= r ) 
; ∎ 0(<2)◂0(<5)◂2'(= a2◂ [ a23◂ [ ]] )
; .dlt.ptn 1'(= r )
; .dlt.ptn 0'(= r )
; .mov_ptn2 0(<2)◂0(<5)◂2'(= a2◂ [ a23◂ [ ]] ) ⊢ 2'(= a3◂ [ a23◂ [ ]] )
	mov r13,r8
; .mov_ptn 0(<2)◂0(<5)◂0'(= a2◂ [ a23◂ [ ]] ) ⊢ 2'(= a3◂ [ a23◂ [ ]] )
	mov rax,r13
	mov rdi,rax
	mov rax,[SS_LN_TOP]
	mov rsi,[rax]
	mov QWORD [SS_LN_TOP],rsi 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov rdi,rax
	mov rax,[SS_LN_TOP]
	mov rsi,[rax]
	mov QWORD [SS_LN_TOP],rsi 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	jmp LB_1554
LB_1554:
	movzx rax,BYTE [r8+6]
	cmp rax,0
	jnz LB_1528
	pop r14
	pop r9
	add rsp,8
	pop r13
	ret
LB_1528:
	jmp LB_1561
LB_1560:
	add r14,1 
LB_1561:
	cmp r14,r9
	jge LB_1562
	movzx rax,BYTE [r13+8+r14]
	cmp rax,9 
	jz LB_1560
	cmp rax,32 
	jz LB_1560
LB_1562
	lea rax,[r14+1]
	cmp rax,r9
	jg LB_1565
	jmp LB_1566
LB_1565:
	mov r8,unt_1
	jmp LB_1563
LB_1566:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],40
	jnz LB_1567
	jmp LB_1568
LB_1567:
	mov r8,unt_1
	jmp LB_1563
LB_1568:
	add r14,1
	jmp LB_1564
LB_1563:
	lea rsp,[rsp+8*0]
	jmp LB_1559
LB_1564:
	jmp LB_1570
LB_1569:
	add r14,1 
LB_1570:
	cmp r14,r9
	jge LB_1571
	movzx rax,BYTE [r13+8+r14]
	cmp rax,9 
	jz LB_1569
	cmp rax,32 
	jz LB_1569
LB_1571
	call GRM_210
	movzx rax,BYTE [r8+6]
	cmp rax,0
	jnz LB_1574
	jmp LB_1575
LB_1574:
	jmp LB_1572
LB_1575:
	lea rsp,[rsp-8*1]
	mov r8,[r8+8]
; .mov_ptn2 2'(= a23◂ [ ] ) ⊢ 8'(= a23◂ [ ] )
; .mov_ptn 2'(= a23◂ [ ] ) ⊢ 8'(= a23◂ [ ] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_1573
LB_1572:
	lea rsp,[rsp+8*0]
	jmp LB_1559
LB_1573:
	jmp LB_1577
LB_1576:
	add r14,1 
LB_1577:
	cmp r14,r9
	jge LB_1578
	movzx rax,BYTE [r13+8+r14]
	cmp rax,9 
	jz LB_1576
	cmp rax,32 
	jz LB_1576
LB_1578
	lea rax,[r14+1]
	cmp rax,r9
	jg LB_1581
	jmp LB_1582
LB_1581:
	mov r8,unt_1
	jmp LB_1579
LB_1582:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],41
	jnz LB_1583
	jmp LB_1584
LB_1583:
	mov r8,unt_1
	jmp LB_1579
LB_1584:
	add r14,1
	jmp LB_1580
LB_1579:
	lea rsp,[rsp+8*1]
	jmp LB_1559
LB_1580:
	mov QWORD [rsp+8*1],r14
	mov r13,QWORD [rsp+16+8*1]
	mov r14,QWORD [rsp+8*1]
	jmp LB_1586
LB_1586
;; rsp=1 , %1364~1'(= r ) %1363~0'(= r ) %1362~8'(= a23◂ [ ] ) 
; #22 8'(= a23◂ [ ] ) ⊢ 0(<2)◂8'(= a23◂ [ ] )
;; rsp=1 , %1365~0(<2)◂8'(= a23◂ [ ] ) %1364~1'(= r ) %1363~0'(= r ) 
; ∎ 0(<2)◂8'(= a23◂ [ ] )
; .dlt.ptn 1'(= r )
; .dlt.ptn 0'(= r )
; .mov_ptn2 0(<2)◂8'(= a23◂ [ ] ) ⊢ 2'(= a3◂ [ a23◂ [ ]] )
; .mov_ptn 0(<2)◂8'(= a23◂ [ ] ) ⊢ 2'(= a3◂ [ a23◂ [ ]] )
	mov rax,QWORD [rsp-8+8*1]
	mov rdi,rax
	mov rax,[SS_LN_TOP]
	mov rsi,[rax]
	mov QWORD [SS_LN_TOP],rsi 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	lea rsp,[rsp+8*1]
	jmp LB_1585
LB_1585:
	movzx rax,BYTE [r8+6]
	cmp rax,0
	jnz LB_1559
	pop r14
	pop r9
	add rsp,8
	pop r13
	ret
LB_1559:
	jmp LB_1589
LB_1588:
	add r14,1 
LB_1589:
	cmp r14,r9
	jge LB_1590
	movzx rax,BYTE [r13+8+r14]
	cmp rax,9 
	jz LB_1588
	cmp rax,32 
	jz LB_1588
LB_1590
	call GRM_215
	movzx rax,BYTE [r8+6]
	cmp rax,0
	jnz LB_1593
	jmp LB_1594
LB_1593:
	jmp LB_1591
LB_1594:
	lea rsp,[rsp-8*1]
; .mov_ptn2 2'(= {| l |} ) ⊢ 8'(= {| l |} )
; .mov_ptn 2'(= {| l |} ) ⊢ 8'(= {| l |} )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_1592
LB_1591:
	lea rsp,[rsp+8*0]
	jmp LB_1587
LB_1592:
	mov QWORD [rsp+8*1],r14
	mov r13,QWORD [rsp+16+8*1]
	mov r14,QWORD [rsp+8*1]
	jmp LB_1596
LB_1596
;; rsp=1 , %1368~1'(= r ) %1367~0'(= r ) %1366~8'(= {| l |} ) 
; #136 8'(= {| l |} ) ⊢ 4(<5)◂8'(= {| l |} )
;; rsp=1 , %1369~4(<5)◂8'(= {| l |} ) %1368~1'(= r ) %1367~0'(= r ) 
; #22 4(<5)◂8'(= {| l |} ) ⊢ 0(<2)◂4(<5)◂8'(= {| l |} )
;; rsp=1 , %1370~0(<2)◂4(<5)◂8'(= {| l |} ) %1368~1'(= r ) %1367~0'(= r ) 
; ∎ 0(<2)◂4(<5)◂8'(= {| l |} )
; .dlt.ptn 1'(= r )
; .dlt.ptn 0'(= r )
; .mov_ptn2 0(<2)◂4(<5)◂8'(= {| l |} ) ⊢ 2'(= a3◂ [ a23◂ [ ]] )
; .mov_ptn 0(<2)◂4(<5)◂8'(= {| l |} ) ⊢ 2'(= a3◂ [ a23◂ [ ]] )
	mov rax,QWORD [rsp-8+8*1]
	mov BYTE [rax+6],4
	mov rdi,rax
	mov rax,[SS_LN_TOP]
	mov rsi,[rax]
	mov QWORD [SS_LN_TOP],rsi 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	lea rsp,[rsp+8*1]
	jmp LB_1595
LB_1595:
	movzx rax,BYTE [r8+6]
	cmp rax,0
	jnz LB_1587
	pop r14
	pop r9
	add rsp,8
	pop r13
	ret
LB_1587:
	jmp LB_1599
LB_1598:
	add r14,1 
LB_1599:
	cmp r14,r9
	jge LB_1600
	movzx rax,BYTE [r13+8+r14]
	cmp rax,9 
	jz LB_1598
	cmp rax,32 
	jz LB_1598
LB_1600
	call GRM_189
	movzx rax,BYTE [r8+6]
	cmp rax,0
	jnz LB_1603
	jmp LB_1604
LB_1603:
	jmp LB_1601
LB_1604:
	lea rsp,[rsp-8*1]
	mov r8,[r8+8]
; .mov_ptn2 2'(= a9◂ [ ] ) ⊢ 8'(= a9◂ [ ] )
; .mov_ptn 2'(= a9◂ [ ] ) ⊢ 8'(= a9◂ [ ] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_1602
LB_1601:
	lea rsp,[rsp+8*0]
	jmp LB_1597
LB_1602:
	mov QWORD [rsp+8*1],r14
	mov r13,QWORD [rsp+16+8*1]
	mov r14,QWORD [rsp+8*1]
	jmp LB_1606
LB_1606
;; rsp=1 , %1373~1'(= r ) %1372~0'(= r ) %1371~8'(= a9◂ [ ] ) 
; #137 8'(= a9◂ [ ] ) ⊢ 3(<5)◂8'(= a9◂ [ ] )
;; rsp=1 , %1374~3(<5)◂8'(= a9◂ [ ] ) %1373~1'(= r ) %1372~0'(= r ) 
; #22 3(<5)◂8'(= a9◂ [ ] ) ⊢ 0(<2)◂3(<5)◂8'(= a9◂ [ ] )
;; rsp=1 , %1375~0(<2)◂3(<5)◂8'(= a9◂ [ ] ) %1373~1'(= r ) %1372~0'(= r ) 
; ∎ 0(<2)◂3(<5)◂8'(= a9◂ [ ] )
; .dlt.ptn 1'(= r )
; .dlt.ptn 0'(= r )
; .mov_ptn2 0(<2)◂3(<5)◂8'(= a9◂ [ ] ) ⊢ 2'(= a3◂ [ a23◂ [ ]] )
; .mov_ptn 0(<2)◂3(<5)◂8'(= a9◂ [ ] ) ⊢ 2'(= a3◂ [ a23◂ [ ]] )
	mov rax,QWORD [rsp-8+8*1]
	mov rdi,rax
	mov rax,[SS_LN_TOP]
	mov rsi,[rax]
	mov QWORD [SS_LN_TOP],rsi 
	mov QWORD [rax],0
	mov BYTE [rax+6],3
	mov QWORD [rax+8],rdi
	mov rdi,rax
	mov rax,[SS_LN_TOP]
	mov rsi,[rax]
	mov QWORD [SS_LN_TOP],rsi 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	lea rsp,[rsp+8*1]
	jmp LB_1605
LB_1605:
	movzx rax,BYTE [r8+6]
	cmp rax,0
	jnz LB_1597
	pop r14
	pop r9
	add rsp,8
	pop r13
	ret
LB_1597:
	pop rdi
	pop r9 
	pop r14
	pop r13
	ret
ETR_215:
	mov r9,0x0000_ffff_ffff_ffff
	and r9,[r13]
	call GRM_215
	ret
GRM_215:
	sub rsp,32
	mov QWORD [rsp+24],r13
	mov QWORD [rsp+16],r14 
	mov QWORD [rsp+8],r9
	call GRM_74
	movzx rax,BYTE [r8+6]
	cmp rax,0
	jnz LB_1610
	jmp LB_1611
LB_1610:
	jmp LB_1608
LB_1611:
	lea rsp,[rsp-8*1]
; .mov_ptn2 2'(= {| l |} ) ⊢ 8'(= {| l |} )
; .mov_ptn 2'(= {| l |} ) ⊢ 8'(= {| l |} )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_1609
LB_1608:
	lea rsp,[rsp+8*0]
	jmp LB_1607
LB_1609:
	lea rax,[r14+1]
	cmp rax,r9
	jg LB_1614
	jmp LB_1615
LB_1614:
	mov r8,unt_1
	jmp LB_1612
LB_1615:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],39
	jnz LB_1616
	jmp LB_1617
LB_1616:
	mov r8,unt_1
	jmp LB_1612
LB_1617:
	add r14,1
	jmp LB_1613
LB_1612:
	lea rsp,[rsp+8*1]
	jmp LB_1607
LB_1613:
	mov QWORD [rsp+8*1],r14
	mov r13,QWORD [rsp+16+8*1]
	mov r14,QWORD [rsp+8*1]
	jmp LB_1619
LB_1619
;; rsp=1 , %1378~1'(= r ) %1377~0'(= r ) %1376~8'(= {| l |} ) 
; #22 8'(= {| l |} ) ⊢ 0(<2)◂8'(= {| l |} )
;; rsp=1 , %1379~0(<2)◂8'(= {| l |} ) %1378~1'(= r ) %1377~0'(= r ) 
; ∎ 0(<2)◂8'(= {| l |} )
; .dlt.ptn 1'(= r )
; .dlt.ptn 0'(= r )
; .mov_ptn2 0(<2)◂8'(= {| l |} ) ⊢ 2'(= a3◂ [ {| l |}] )
; .mov_ptn 0(<2)◂8'(= {| l |} ) ⊢ 2'(= a3◂ [ {| l |}] )
	mov rax,QWORD [rsp-8+8*1]
	mov BYTE [rax+6],0
	mov r8,rax
	lea rsp,[rsp+8*1]
	jmp LB_1618
LB_1618:
	movzx rax,BYTE [r8+6]
	cmp rax,0
	jnz LB_1607
	pop r14
	pop r9
	add rsp,8
	pop r13
	ret
LB_1607:
	pop rdi
	pop r9 
	pop r14
	pop r13
	ret
ETR_217:
	mov r9,0x0000_ffff_ffff_ffff
	and r9,[r13]
	call GRM_217
	ret
GRM_217:
	sub rsp,32
	mov QWORD [rsp+24],r13
	mov QWORD [rsp+16],r14 
	mov QWORD [rsp+8],r9
	jmp LB_1622
LB_1621:
	add r14,1 
LB_1622:
	cmp r14,r9
	jge LB_1623
	movzx rax,BYTE [r13+8+r14]
	cmp rax,9 
	jz LB_1621
	cmp rax,32 
	jz LB_1621
LB_1623
	lea rax,[r14+1]
	cmp rax,r9
	jg LB_1626
	jmp LB_1627
LB_1626:
	mov r8,unt_1
	jmp LB_1624
LB_1627:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],10
	jnz LB_1628
	jmp LB_1629
LB_1628:
	mov r8,unt_1
	jmp LB_1624
LB_1629:
	add r14,1
	jmp LB_1625
LB_1624:
	lea rsp,[rsp+8*0]
	jmp LB_1620
LB_1625:
	jmp LB_1631
LB_1630:
	add r14,1 
LB_1631:
	cmp r14,r9
	jge LB_1632
	movzx rax,BYTE [r13+8+r14]
	cmp rax,9 
	jz LB_1630
	cmp rax,32 
	jz LB_1630
LB_1632
	call GRM_217
	movzx rax,BYTE [r8+6]
	cmp rax,0
	jnz LB_1635
	jmp LB_1636
LB_1635:
	jmp LB_1633
LB_1636:
	lea rsp,[rsp-8*1]
	mov r8,[r8+8]
; .mov_ptn2 2'(= a35◂ [ *{ }] ) ⊢ 8'(= a35◂ [ *{ }] )
; .mov_ptn 2'(= a35◂ [ *{ }] ) ⊢ 8'(= a35◂ [ *{ }] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_1634
LB_1633:
	lea rsp,[rsp+8*0]
	pop rdi
	pop r9 
	pop r14
	pop r13
	ret
LB_1634:
	mov QWORD [rsp+8*1],r14
	mov r13,QWORD [rsp+16+8*1]
	mov r14,QWORD [rsp+8*1]
	jmp LB_1638
LB_1638
;; rsp=1 , %1382~1'(= r ) %1381~0'(= r ) %1380~8'(= a35◂ [ *{ }] ) 
; #193 { } ⊢ 0(<2)◂{ }
;; rsp=1 , %1383~0(<2)◂{ } %1382~1'(= r ) %1381~0'(= r ) %1380~8'(= a35◂ [ *{ }] ) 
; #22 0(<2)◂{ } ⊢ 0(<2)◂0(<2)◂{ }
;; rsp=1 , %1384~0(<2)◂0(<2)◂{ } %1382~1'(= r ) %1381~0'(= r ) %1380~8'(= a35◂ [ *{ }] ) 
; ∎ 0(<2)◂0(<2)◂{ }
; .dlt.ptn 1'(= r )
; .dlt.ptn 0'(= r )
; .dlt.ptn 8'(= a35◂ [ *{ }] )
;	.dlt adt ⊢ _  
; .mov_ptn2 0(<2)◂0(<2)◂{ } ⊢ 2'(= a3◂ [ a35◂ [ *{ }]] )
; .mov_ptn 0(<2)◂0(<2)◂{ } ⊢ 2'(= a3◂ [ a35◂ [ *{ }]] )
	mov rax,unt 
	mov rax,unt_0
	mov rdi,rax
	mov rax,[SS_LN_TOP]
	mov rsi,[rax]
	mov QWORD [SS_LN_TOP],rsi 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	lea rsp,[rsp+8*1]
	jmp LB_1637
LB_1637:
	movzx rax,BYTE [r8+6]
	cmp rax,0
	jnz LB_1620
	pop r14
	pop r9
	add rsp,8
	pop r13
	ret
LB_1620:
	jmp LB_1641
LB_1640:
	add r14,1 
LB_1641:
	cmp r14,r9
	jge LB_1642
	movzx rax,BYTE [r13+8+r14]
	cmp rax,9 
	jz LB_1640
	cmp rax,32 
	jz LB_1640
LB_1642
	lea rax,[r14+2]
	cmp rax,r9
	jg LB_1645
	jmp LB_1646
LB_1645:
	mov r8,unt_1
	jmp LB_1643
LB_1646:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],35
	jnz LB_1647
	cmp BYTE [rdi+1],35
	jnz LB_1647
	jmp LB_1648
LB_1647:
	mov r8,unt_1
	jmp LB_1643
LB_1648:
	add r14,2
	jmp LB_1644
LB_1643:
	lea rsp,[rsp+8*0]
	jmp LB_1639
LB_1644:
	jmp LB_1650
LB_1649:
	add r14,1 
LB_1650:
	cmp r14,r9
	jge LB_1651
	movzx rax,BYTE [r13+8+r14]
	cmp rax,9 
	jz LB_1649
	cmp rax,32 
	jz LB_1649
LB_1651
	call GRM_220
	movzx rax,BYTE [r8+6]
	cmp rax,0
	jnz LB_1654
	jmp LB_1655
LB_1654:
	jmp LB_1652
LB_1655:
	lea rsp,[rsp-8*2]
; .mov_ptn2 2'(= *{ rr} ) ⊢ { 8'(= r ) 9'(= r ) }
; .mov_ptn 2'(= *{ rr} ) ⊢ { 8'(= r ) 9'(= r ) }
	mov rdi,r8
	mov rdi,QWORD [rdi+8+8*0]
	mov r10,rdi
	mov QWORD [rsp-8+8*2],r10
	mov rdi,r8
	mov rdi,QWORD [rdi+8+8*1]
	mov r11,rdi
	mov QWORD [rsp-8+8*1],r11
	jmp LB_1653
LB_1652:
	lea rsp,[rsp+8*0]
	pop rdi
	pop r9 
	pop r14
	pop r13
	ret
LB_1653:
	jmp LB_1657
LB_1656:
	add r14,1 
LB_1657:
	cmp r14,r9
	jge LB_1658
	movzx rax,BYTE [r13+8+r14]
	cmp rax,9 
	jz LB_1656
	cmp rax,32 
	jz LB_1656
LB_1658
	call GRM_217
	movzx rax,BYTE [r8+6]
	cmp rax,0
	jnz LB_1661
	jmp LB_1662
LB_1661:
	jmp LB_1659
LB_1662:
	lea rsp,[rsp-8*1]
	mov r8,[r8+8]
; .mov_ptn2 2'(= a35◂ [ *{ }] ) ⊢ 10'(= a35◂ [ *{ }] )
; .mov_ptn 2'(= a35◂ [ *{ }] ) ⊢ 10'(= a35◂ [ *{ }] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_1660
LB_1659:
	lea rsp,[rsp+8*2]
	pop rdi
	pop r9 
	pop r14
	pop r13
	ret
LB_1660:
	mov QWORD [rsp+8*3],r14
	mov r13,QWORD [rsp+16+8*3]
	mov r14,QWORD [rsp+8*3]
	jmp LB_1664
LB_1664
;; rsp=3 , %1388~1'(= r ) %1387~0'(= r ) %1386~10'(= a35◂ [ *{ }] ) %1385~{ 8'(= r ) 9'(= r ) } 
; #193 { } ⊢ 0(<2)◂{ }
;; rsp=3 , %1389~0(<2)◂{ } %1388~1'(= r ) %1387~0'(= r ) %1386~10'(= a35◂ [ *{ }] ) %1385~{ 8'(= r ) 9'(= r ) } 
; #22 0(<2)◂{ } ⊢ 0(<2)◂0(<2)◂{ }
;; rsp=3 , %1390~0(<2)◂0(<2)◂{ } %1388~1'(= r ) %1387~0'(= r ) %1386~10'(= a35◂ [ *{ }] ) %1385~{ 8'(= r ) 9'(= r ) } 
; ∎ 0(<2)◂0(<2)◂{ }
; .dlt.ptn 1'(= r )
; .dlt.ptn 0'(= r )
; .dlt.ptn 10'(= a35◂ [ *{ }] )
;	.dlt adt ⊢ _  
; .dlt.ptn { 8'(= r ) 9'(= r ) }
; .mov_ptn2 0(<2)◂0(<2)◂{ } ⊢ 2'(= a3◂ [ a35◂ [ *{ }]] )
; .mov_ptn 0(<2)◂0(<2)◂{ } ⊢ 2'(= a3◂ [ a35◂ [ *{ }]] )
	mov rax,unt 
	mov rax,unt_0
	mov rdi,rax
	mov rax,[SS_LN_TOP]
	mov rsi,[rax]
	mov QWORD [SS_LN_TOP],rsi 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	lea rsp,[rsp+8*3]
	jmp LB_1663
LB_1663:
	movzx rax,BYTE [r8+6]
	cmp rax,0
	jnz LB_1639
	pop r14
	pop r9
	add rsp,8
	pop r13
	ret
LB_1639:
	jmp LB_1667
LB_1666:
	add r14,1 
LB_1667:
	cmp r14,r9
	jge LB_1668
	movzx rax,BYTE [r13+8+r14]
	cmp rax,9 
	jz LB_1666
	cmp rax,32 
	jz LB_1666
LB_1668
	lea rax,[r14+2]
	cmp rax,r9
	jg LB_1671
	jmp LB_1672
LB_1671:
	mov r8,unt_1
	jmp LB_1669
LB_1672:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],92
	jnz LB_1673
	cmp BYTE [rdi+1],92
	jnz LB_1673
	jmp LB_1674
LB_1673:
	mov r8,unt_1
	jmp LB_1669
LB_1674:
	add r14,2
	jmp LB_1670
LB_1669:
	lea rsp,[rsp+8*0]
	jmp LB_1665
LB_1670:
	jmp LB_1676
LB_1675:
	add r14,1 
LB_1676:
	cmp r14,r9
	jge LB_1677
	movzx rax,BYTE [r13+8+r14]
	cmp rax,9 
	jz LB_1675
	cmp rax,32 
	jz LB_1675
LB_1677
	call GRM_220
	movzx rax,BYTE [r8+6]
	cmp rax,0
	jnz LB_1680
	jmp LB_1681
LB_1680:
	jmp LB_1678
LB_1681:
	lea rsp,[rsp-8*2]
; .mov_ptn2 2'(= *{ rr} ) ⊢ { 8'(= r ) 9'(= r ) }
; .mov_ptn 2'(= *{ rr} ) ⊢ { 8'(= r ) 9'(= r ) }
	mov rdi,r8
	mov rdi,QWORD [rdi+8+8*0]
	mov r10,rdi
	mov QWORD [rsp-8+8*2],r10
	mov rdi,r8
	mov rdi,QWORD [rdi+8+8*1]
	mov r11,rdi
	mov QWORD [rsp-8+8*1],r11
	jmp LB_1679
LB_1678:
	lea rsp,[rsp+8*0]
	pop rdi
	pop r9 
	pop r14
	pop r13
	ret
LB_1679:
	jmp LB_1683
LB_1682:
	add r14,1 
LB_1683:
	cmp r14,r9
	jge LB_1684
	movzx rax,BYTE [r13+8+r14]
	cmp rax,9 
	jz LB_1682
	cmp rax,32 
	jz LB_1682
LB_1684
	call GRM_217
	movzx rax,BYTE [r8+6]
	cmp rax,0
	jnz LB_1687
	jmp LB_1688
LB_1687:
	jmp LB_1685
LB_1688:
	lea rsp,[rsp-8*1]
	mov r8,[r8+8]
; .mov_ptn2 2'(= a35◂ [ *{ }] ) ⊢ 10'(= a35◂ [ *{ }] )
; .mov_ptn 2'(= a35◂ [ *{ }] ) ⊢ 10'(= a35◂ [ *{ }] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_1686
LB_1685:
	lea rsp,[rsp+8*2]
	pop rdi
	pop r9 
	pop r14
	pop r13
	ret
LB_1686:
	mov QWORD [rsp+8*3],r14
	mov r13,QWORD [rsp+16+8*3]
	mov r14,QWORD [rsp+8*3]
	jmp LB_1690
LB_1690
;; rsp=3 , %1394~1'(= r ) %1393~0'(= r ) %1392~10'(= a35◂ [ *{ }] ) %1391~{ 8'(= r ) 9'(= r ) } 
; #193 { } ⊢ 0(<2)◂{ }
;; rsp=3 , %1395~0(<2)◂{ } %1394~1'(= r ) %1393~0'(= r ) %1392~10'(= a35◂ [ *{ }] ) %1391~{ 8'(= r ) 9'(= r ) } 
; #22 0(<2)◂{ } ⊢ 0(<2)◂0(<2)◂{ }
;; rsp=3 , %1396~0(<2)◂0(<2)◂{ } %1394~1'(= r ) %1393~0'(= r ) %1392~10'(= a35◂ [ *{ }] ) %1391~{ 8'(= r ) 9'(= r ) } 
; ∎ 0(<2)◂0(<2)◂{ }
; .dlt.ptn 1'(= r )
; .dlt.ptn 0'(= r )
; .dlt.ptn 10'(= a35◂ [ *{ }] )
;	.dlt adt ⊢ _  
; .dlt.ptn { 8'(= r ) 9'(= r ) }
; .mov_ptn2 0(<2)◂0(<2)◂{ } ⊢ 2'(= a3◂ [ a35◂ [ *{ }]] )
; .mov_ptn 0(<2)◂0(<2)◂{ } ⊢ 2'(= a3◂ [ a35◂ [ *{ }]] )
	mov rax,unt 
	mov rax,unt_0
	mov rdi,rax
	mov rax,[SS_LN_TOP]
	mov rsi,[rax]
	mov QWORD [SS_LN_TOP],rsi 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	lea rsp,[rsp+8*3]
	jmp LB_1689
LB_1689:
	movzx rax,BYTE [r8+6]
	cmp rax,0
	jnz LB_1665
	pop r14
	pop r9
	add rsp,8
	pop r13
	ret
LB_1665:
	jmp LB_1693
LB_1692:
	add r14,1 
LB_1693:
	cmp r14,r9
	jge LB_1694
	movzx rax,BYTE [r13+8+r14]
	cmp rax,9 
	jz LB_1692
	cmp rax,32 
	jz LB_1692
LB_1694
	lea rax,[r14+2]
	cmp rax,r9
	jg LB_1697
	jmp LB_1698
LB_1697:
	mov r8,unt_1
	jmp LB_1695
LB_1698:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],92
	jnz LB_1699
	cmp BYTE [rdi+1],91
	jnz LB_1699
	jmp LB_1700
LB_1699:
	mov r8,unt_1
	jmp LB_1695
LB_1700:
	add r14,2
	jmp LB_1696
LB_1695:
	lea rsp,[rsp+8*0]
	jmp LB_1691
LB_1696:
	sub rsp,32
	mov QWORD [rsp+24],r13
	mov QWORD [rsp+16],r14 
	mov QWORD [rsp+8],r9
	jmp LB_1704
LB_1703:
	add r14,1 
LB_1704:
	cmp r14,r9
	jge LB_1705
	movzx rax,BYTE [r13+8+r14]
	cmp rax,9 
	jz LB_1703
	cmp rax,32 
	jz LB_1703
LB_1705
	lea rax,[r14+1]
	cmp rax,r9
	jg LB_1708
	jmp LB_1709
LB_1708:
	mov r8,unt_1
	jmp LB_1706
LB_1709:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],10
	jnz LB_1710
	jmp LB_1711
LB_1710:
	mov r8,unt_1
	jmp LB_1706
LB_1711:
	add r14,1
	jmp LB_1707
LB_1706:
	lea rsp,[rsp+8*0]
	jmp LB_1702
LB_1707:
	jmp LB_1713
LB_1712:
	add r14,1 
LB_1713:
	cmp r14,r9
	jge LB_1714
	movzx rax,BYTE [r13+8+r14]
	cmp rax,9 
	jz LB_1712
	cmp rax,32 
	jz LB_1712
LB_1714
	call GRM_218
	movzx rax,BYTE [r8+6]
	cmp rax,0
	jnz LB_1717
	jmp LB_1718
LB_1717:
	jmp LB_1715
LB_1718:
	lea rsp,[rsp-8*1]
	mov r8,[r8+8]
; .mov_ptn2 2'(= a35◂ [ *{ }] ) ⊢ 8'(= a35◂ [ *{ }] )
; .mov_ptn 2'(= a35◂ [ *{ }] ) ⊢ 8'(= a35◂ [ *{ }] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_1716
LB_1715:
	lea rsp,[rsp+8*0]
	jmp LB_1702
LB_1716:
	jmp LB_1720
LB_1719:
	add r14,1 
LB_1720:
	cmp r14,r9
	jge LB_1721
	movzx rax,BYTE [r13+8+r14]
	cmp rax,9 
	jz LB_1719
	cmp rax,32 
	jz LB_1719
LB_1721
	call GRM_217
	movzx rax,BYTE [r8+6]
	cmp rax,0
	jnz LB_1724
	jmp LB_1725
LB_1724:
	jmp LB_1722
LB_1725:
	lea rsp,[rsp-8*1]
	mov r8,[r8+8]
; .mov_ptn2 2'(= a35◂ [ *{ }] ) ⊢ 9'(= a35◂ [ *{ }] )
; .mov_ptn 2'(= a35◂ [ *{ }] ) ⊢ 9'(= a35◂ [ *{ }] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_1723
LB_1722:
	lea rsp,[rsp+8*1]
	jmp LB_1702
LB_1723:
	mov QWORD [rsp+8*2],r14
	mov r13,QWORD [rsp+16+8*2]
	mov r14,QWORD [rsp+8*2]
	jmp LB_1727
LB_1732: ; 53 { 0'(= a2◂ [ *{ rr{| l |}}] ) 1'(= a2◂ [ *{ rr{| l |}}] ) } ⊢ 0'(= a2◂ [ *{ rr{| l |}}] ) : ({ _lst◂{ _r64 _r64 _s8 } _lst◂{ _r64 _r64 _s8 } }→_lst◂{ _r64 _r64 _s8 })
;; rsp=0 , %125~1'(= a2◂ [ *{ rr{| l |}}] ) %124~0'(= a2◂ [ *{ rr{| l |}}] ) 
;; ? 0'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 0(<2)◂{ 2'(= *{ rr{| l |}} ) 3'(= a2◂ [ *{ rr{| l |}}] ) }
	mov rdi,r13
	movzx rax,BYTE [rdi+6]
	cmp rax,0
	jnz LB_1733
	mov rdi,r13
	mov rdi,QWORD [rdi+8+8*0]
	mov r8,rdi
	mov rdi,r13
	mov rdi,QWORD [rdi+8+8*1]
	mov r9,rdi
;; rsp=0 , %127~3'(= a2◂ [ *{ rr{| l |}}] ) %126~2'(= *{ rr{| l |}} ) %125~1'(= a2◂ [ *{ rr{| l |}}] ) 
; rsp_d=0, #53 { 3'(= a2◂ [ *{ rr{| l |}}] ) 1'(= a2◂ [ *{ rr{| l |}}] ) } ⊢ 0'(= a2◂ [ *{ rr{| l |}}] )
	lea rsp,[rsp-8*1]
	mov QWORD [rsp+8*0],r8
; .mov_ptn2 { 3'(= a2◂ [ *{ rr{| l |}}] ) 1'(= a2◂ [ *{ rr{| l |}}] ) } ⊢ { 0'(= a2◂ [ *{ rr{| l |}}] ) 1'(= a2◂ [ *{ rr{| l |}}] ) }
; .mov_ptn 3'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 0'(= a2◂ [ *{ rr{| l |}}] )
	mov rax,r9
	mov r13,rax
	call LB_1732

	mov r8,QWORD [rsp-8+8*1]
	lea rsp,[rsp+8*1]
;; rsp=0 , %128~0'(= a2◂ [ *{ rr{| l |}}] ) %126~2'(= *{ rr{| l |}} ) 
; #21 { 2'(= *{ rr{| l |}} ) 0'(= a2◂ [ *{ rr{| l |}}] ) } ⊢ 0(<2)◂{ 2'(= *{ rr{| l |}} ) 0'(= a2◂ [ *{ rr{| l |}}] ) }
;; rsp=0 , %129~0(<2)◂{ 2'(= *{ rr{| l |}} ) 0'(= a2◂ [ *{ rr{| l |}}] ) } 
; ∎ 0(<2)◂{ 2'(= *{ rr{| l |}} ) 0'(= a2◂ [ *{ rr{| l |}}] ) }
; .mov_ptn2 0(<2)◂{ 2'(= *{ rr{| l |}} ) 0'(= a2◂ [ *{ rr{| l |}}] ) } ⊢ 0'(= a2◂ [ *{ rr{| l |}}] )
	mov r14,r13
; .mov_ptn 0(<2)◂{ 2'(= *{ rr{| l |}} ) 1'(= a2◂ [ *{ rr{| l |}}] ) } ⊢ 0'(= a2◂ [ *{ rr{| l |}}] )
	mov rax,[SS_RCD_2_TOP]
	mov rsi,[rax] 
	mov QWORD [SS_RCD_2_TOP],rsi
	mov QWORD [rax],0
	mov r9,rax
	mov rax,r8
	mov rdi,r9
	mov QWORD [rdi+8+8*0],rax
	mov rax,r14
	mov rdi,r9
	mov QWORD [rdi+8+8*1],rax
	mov rax,r9
	mov BYTE [rax+6],0
	mov r13,rax
	ret
LB_1733:
;; ? 0'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 1(<2)◂{ }
;; rsp=0 , %125~1'(= a2◂ [ *{ rr{| l |}}] ) 
; ∎ 1'(= a2◂ [ *{ rr{| l |}}] )
; .mov_ptn2 1'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 0'(= a2◂ [ *{ rr{| l |}}] )
; .mov_ptn 1'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 0'(= a2◂ [ *{ rr{| l |}}] )
	mov rax,r14
	mov r13,rax
	ret
LB_1728: ; 194 { 0'(= a35◂ [ *{ }] ) 1'(= a35◂ [ *{ }] ) } ⊢ 0'(= a35◂ [ *{ *{ }*{ }}] ) : ({ _t35◂{ } _t35◂{ } }→_t35◂{ { } { } })
;; rsp=0 , %1131~1'(= a35◂ [ *{ }] ) %1130~0'(= a35◂ [ *{ }] ) 
;; ? 0'(= a35◂ [ *{ }] ) ⊢ 0(<2)◂0'(= *{ } )
	mov rdi,r13
	movzx rax,BYTE [rdi+6]
	cmp rax,0
	jnz LB_1729
;; rsp=0 , %1133~0'(= *{ } ) %1131~1'(= a35◂ [ *{ }] ) 
;; ? 1'(= a35◂ [ *{ }] ) ⊢ 0(<2)◂1'(= *{ } )
	mov rdi,r14
	movzx rax,BYTE [rdi+6]
	cmp rax,0
	jnz LB_1730
;; rsp=0 , %1135~1'(= *{ } ) %1133~0'(= *{ } ) 
; #193 { 0'(= *{ } ) 1'(= *{ } ) } ⊢ 0(<2)◂{ 0'(= *{ } ) 1'(= *{ } ) }
;; rsp=0 , %1136~0(<2)◂{ 0'(= *{ } ) 1'(= *{ } ) } 
; ∎ 0(<2)◂{ 0'(= *{ } ) 1'(= *{ } ) }
; .mov_ptn2 0(<2)◂{ 0'(= *{ } ) 1'(= *{ } ) } ⊢ 0'(= a35◂ [ *{ *{ }*{ }}] )
	mov r8,r13
; .mov_ptn 0(<2)◂{ 2'(= *{ } ) 1'(= *{ } ) } ⊢ 0'(= a35◂ [ *{ *{ }*{ }}] )
	mov rax,[SS_RCD_2_TOP]
	mov rsi,[rax] 
	mov QWORD [SS_RCD_2_TOP],rsi
	mov QWORD [rax],0
	mov r9,rax
	mov rax,r8
	mov rdi,r9
	mov QWORD [rdi+8+8*0],rax
	mov rax,r14
	mov rdi,r9
	mov QWORD [rdi+8+8*1],rax
	mov rax,r9
	mov BYTE [rax+6],0
	mov r13,rax
	ret
LB_1730:
;; ? 1'(= a35◂ [ *{ }] ) ⊢ 1(<2)◂1'(= a2◂ [ *{ rr{| l |}}] )
;; rsp=0 , %1134~1'(= a2◂ [ *{ rr{| l |}}] ) %1133~0'(= *{ } ) 
; #192 1'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 1(<2)◂1'(= a2◂ [ *{ rr{| l |}}] )
;; rsp=0 , %1137~1(<2)◂1'(= a2◂ [ *{ rr{| l |}}] ) %1133~0'(= *{ } ) 
; ∎ 1(<2)◂1'(= a2◂ [ *{ rr{| l |}}] )
; .dlt.ptn 0'(= *{ } )
; .dlt.hp rcd
; .mov_ptn2 1(<2)◂1'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 0'(= a35◂ [ *{ *{ }*{ }}] )
; .mov_ptn 1(<2)◂1'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 0'(= a35◂ [ *{ *{ }*{ }}] )
	mov rax,r14
	mov rdi,rax
	mov rax,[SS_LN_TOP]
	mov rsi,[rax]
	mov QWORD [SS_LN_TOP],rsi 
	mov QWORD [rax],0
	mov BYTE [rax+6],1
	mov QWORD [rax+8],rdi
	mov r13,rax
	ret
LB_1729:
;; ? 0'(= a35◂ [ *{ }] ) ⊢ 1(<2)◂0'(= a2◂ [ *{ rr{| l |}}] )
;; rsp=0 , %1132~0'(= a2◂ [ *{ rr{| l |}}] ) %1131~1'(= a35◂ [ *{ }] ) 
;; ? 1'(= a35◂ [ *{ }] ) ⊢ 0(<2)◂1'(= *{ } )
	mov rdi,r14
	movzx rax,BYTE [rdi+6]
	cmp rax,0
	jnz LB_1731
;; rsp=0 , %1139~1'(= *{ } ) %1132~0'(= a2◂ [ *{ rr{| l |}}] ) 
; #192 0'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 1(<2)◂0'(= a2◂ [ *{ rr{| l |}}] )
;; rsp=0 , %1140~1(<2)◂0'(= a2◂ [ *{ rr{| l |}}] ) %1139~1'(= *{ } ) 
; ∎ 1(<2)◂0'(= a2◂ [ *{ rr{| l |}}] )
; .dlt.ptn 1'(= *{ } )
; .dlt.hp rcd
; .mov_ptn2 1(<2)◂0'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 0'(= a35◂ [ *{ *{ }*{ }}] )
	mov r14,r13
; .mov_ptn 1(<2)◂1'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 0'(= a35◂ [ *{ *{ }*{ }}] )
	mov rax,r14
	mov rdi,rax
	mov rax,[SS_LN_TOP]
	mov rsi,[rax]
	mov QWORD [SS_LN_TOP],rsi 
	mov QWORD [rax],0
	mov BYTE [rax+6],1
	mov QWORD [rax+8],rdi
	mov r13,rax
	ret
LB_1731:
;; ? 1'(= a35◂ [ *{ }] ) ⊢ 1(<2)◂1'(= a2◂ [ *{ rr{| l |}}] )
;; rsp=0 , %1138~1'(= a2◂ [ *{ rr{| l |}}] ) %1132~0'(= a2◂ [ *{ rr{| l |}}] ) 
; rsp_d=0, #53 { 0'(= a2◂ [ *{ rr{| l |}}] ) 1'(= a2◂ [ *{ rr{| l |}}] ) } ⊢ 0'(= a2◂ [ *{ rr{| l |}}] )
; .mov_ptn2 { 0'(= a2◂ [ *{ rr{| l |}}] ) 1'(= a2◂ [ *{ rr{| l |}}] ) } ⊢ { 0'(= a2◂ [ *{ rr{| l |}}] ) 1'(= a2◂ [ *{ rr{| l |}}] ) }
	call LB_1732

;; rsp=0 , %1141~0'(= a2◂ [ *{ rr{| l |}}] ) 
; #192 0'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 1(<2)◂0'(= a2◂ [ *{ rr{| l |}}] )
;; rsp=0 , %1142~1(<2)◂0'(= a2◂ [ *{ rr{| l |}}] ) 
; ∎ 1(<2)◂0'(= a2◂ [ *{ rr{| l |}}] )
; .mov_ptn2 1(<2)◂0'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 0'(= a35◂ [ *{ *{ }*{ }}] )
	mov r14,r13
; .mov_ptn 1(<2)◂1'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 0'(= a35◂ [ *{ *{ }*{ }}] )
	mov rax,r14
	mov rdi,rax
	mov rax,[SS_LN_TOP]
	mov rsi,[rax]
	mov QWORD [SS_LN_TOP],rsi 
	mov QWORD [rax],0
	mov BYTE [rax+6],1
	mov QWORD [rax+8],rdi
	mov r13,rax
	ret
LB_1727
;; rsp=2 , %1402~1'(= r ) %1401~0'(= r ) %1400~9'(= a35◂ [ *{ }] ) %1399~8'(= a35◂ [ *{ }] ) 
; rsp_d=0, #194 { 8'(= a35◂ [ *{ }] ) 9'(= a35◂ [ *{ }] ) } ⊢ 2'(= a35◂ [ *{ *{ }*{ }}] )
	lea rsp,[rsp-8*2]
	mov QWORD [rsp+8*0],r13
	mov QWORD [rsp+8*1],r14
; .mov_ptn2 { 8'(= a35◂ [ *{ }] ) 9'(= a35◂ [ *{ }] ) } ⊢ { 0'(= a35◂ [ *{ }] ) 1'(= a35◂ [ *{ }] ) }
; .mov_ptn 9'(= a35◂ [ *{ }] ) ⊢ 1'(= a35◂ [ *{ }] )
	mov rax,QWORD [rsp-8+8*3]
	mov r14,rax
; .mov_ptn 8'(= a35◂ [ *{ }] ) ⊢ 0'(= a35◂ [ *{ }] )
	mov rax,QWORD [rsp-8+8*4]
	mov r13,rax
	call LB_1728

	mov r14,QWORD [rsp-8+8*2]
	mov rax,QWORD [rsp-8+8*1]
	mov r8,r13
	mov r13,rax
	lea rsp,[rsp+8*4]
;; rsp=0 , %1403~2'(= a35◂ [ *{ *{ }*{ }}] ) %1402~1'(= r ) %1401~0'(= r ) 
;; ? 2'(= a35◂ [ *{ *{ }*{ }}] ) ⊢ 0(<2)◂{ 3'(= *{ } ) 4'(= *{ } ) }
	mov rdi,r8
	movzx rax,BYTE [rdi+6]
	cmp rax,0
	jnz LB_1734
	mov rdi,r8
	mov rdi,QWORD [rdi+8+8*0]
	mov r9,rdi
	mov rdi,r8
	mov rdi,QWORD [rdi+8+8*1]
	mov r10,rdi
;; rsp=0 , %1406~4'(= *{ } ) %1405~3'(= *{ } ) %1402~1'(= r ) %1401~0'(= r ) 
; #193 { } ⊢ 0(<2)◂{ }
;; rsp=0 , %1407~0(<2)◂{ } %1406~4'(= *{ } ) %1405~3'(= *{ } ) %1402~1'(= r ) %1401~0'(= r ) 
; #22 0(<2)◂{ } ⊢ 0(<2)◂0(<2)◂{ }
;; rsp=0 , %1408~0(<2)◂0(<2)◂{ } %1406~4'(= *{ } ) %1405~3'(= *{ } ) %1402~1'(= r ) %1401~0'(= r ) 
; ∎ 0(<2)◂0(<2)◂{ }
; .dlt.ptn 4'(= *{ } )
; .dlt.hp rcd
; .dlt.ptn 3'(= *{ } )
; .dlt.hp rcd
; .dlt.ptn 1'(= r )
; .dlt.ptn 0'(= r )
; .mov_ptn2 0(<2)◂0(<2)◂{ } ⊢ 2'(= a3◂ [ a35◂ [ *{ }]] )
; .mov_ptn 0(<2)◂0(<2)◂{ } ⊢ 2'(= a3◂ [ a35◂ [ *{ }]] )
	mov rax,unt 
	mov rax,unt_0
	mov rdi,rax
	mov rax,[SS_LN_TOP]
	mov rsi,[rax]
	mov QWORD [SS_LN_TOP],rsi 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	jmp LB_1726
LB_1734:
;; ? 2'(= a35◂ [ *{ *{ }*{ }}] ) ⊢ 1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] )
;; rsp=0 , %1404~2'(= a2◂ [ *{ rr{| l |}}] ) %1402~1'(= r ) %1401~0'(= r ) 
; rsp_d=0, #196 2'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 2'(= {| l |} )
	lea rsp,[rsp-8*2]
	mov QWORD [rsp+8*0],r13
	mov QWORD [rsp+8*1],r14
; .mov_ptn2 2'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 0'(= a2◂ [ *{ rr{| l |}}] )
; .mov_ptn 2'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 0'(= a2◂ [ *{ rr{| l |}}] )
	mov rax,r8
	mov r13,rax
	call ETR_196

	mov r14,QWORD [rsp-8+8*2]
	mov rax,QWORD [rsp-8+8*1]
	mov r8,r13
	mov r13,rax
	lea rsp,[rsp+8*2]
;; rsp=0 , %1409~2'(= {| l |} ) %1402~1'(= r ) %1401~0'(= r ) 
; _emt 2'(= {| l |} ) ⊢ 2'(= {| l |} )
	jmp LB_1736
LB_1735: db 95,101,109,116,58,0
LB_1736:
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax  
	mov rdi,LB_1735
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call printf 
	mov rsp,QWORD [rsp_tmp]
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	mov rax,r8
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	mov r8,rax
	mov rsi,r8
	add rsi,8
	xor rax,rax  
	mov rdi,fmt_s8
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call printf 
	mov rsp,QWORD [rsp_tmp]
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	jmp LB_1738
LB_1737: db 10,0
LB_1738:
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax  
	mov rdi,LB_1737
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call printf 
	mov rsp,QWORD [rsp_tmp]
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	jmp LB_1739
LB_1739:
;; rsp=0 , %1410~2'(= {| l |} ) %1402~1'(= r ) %1401~0'(= r ) 
; ∎| 
	jmp LB_1741
LB_1740: db 101,120,110,32,51,52,49,53,57,58,10,0
LB_1741:
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax  
	mov rdi,LB_1740
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call printf 
	mov rsp,QWORD [rsp_tmp]
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	jmp err
LB_1726:
	movzx rax,BYTE [r8+6]
	cmp rax,0
	jnz LB_1702
	pop r14
	pop r9
	add rsp,8
	pop r13
	jmp LB_1701
LB_1702:
	mov QWORD [rsp+8*0],r14
	mov r13,QWORD [rsp+16+8*0]
	mov r14,QWORD [rsp+8*0]
	jmp LB_1744
LB_1744
;; rsp=0 , %1412~1'(= r ) %1411~0'(= r ) 
; » _^ .. ⊢ ..
; .. //
	mov rdi,0
	sub rsp,128
	mov rdi,rsp
	mov rsi,fmt_d
	mov rdx,r14
	mov QWORD [tmp],rdi
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call sprintf
	mov rsp,QWORD [rsp_tmp]  
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	push rax 
	add rax,QWORD [tmp]
	mov rdi,rax
	sub rsp,128
	mov rdi,rsp
	mov rsi,fmt_d
	mov rdx,r13
	mov QWORD [tmp],rdi
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call sprintf
	mov rsp,QWORD [rsp_tmp]  
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	push rax 
	add rax,QWORD [tmp]
	mov rdi,rax
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	add rdi,11
	push rdi 
	and rdi,~111b
	add rdi,16
	mov rsi,rdi 
	mov rdi,1
	xor rax,rax 
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call calloc
	mov rsp,QWORD [rsp_tmp]  
	pop rdi 
	mov QWORD [rax],rdi
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	mov r8,rax
	lea rdi,[rax+7+rdi]
	std 
	mov QWORD [tmp],rcx 
	jmp LB_1745
	LB_1746: db 110,108,115,95,101,114,114,32,0
LB_1745:
	lea rsi,[LB_1746+8-1]
	mov rcx,8
	rep movsb
	pop rcx
	lea rsi,[rsp+rcx-1]
	rep movsb
	add rsp,128
	jmp LB_1747
	LB_1748: db 45,0
LB_1747:
	lea rsi,[LB_1748+1-1]
	mov rcx,1
	rep movsb
	pop rcx
	lea rsi,[rsp+rcx-1]
	rep movsb
	add rsp,128
	jmp LB_1749
	LB_1750: db 58,10,0
LB_1749:
	lea rsi,[LB_1750+2-1]
	mov rcx,2
	rep movsb
	mov rcx,QWORD [tmp] 
;; rsp=0 , %1415~2'(= {| l |} ) %1414~1'(= r ) %1413~0'(= r ) 
; _emt 2'(= {| l |} ) ⊢ 2'(= {| l |} )
	jmp LB_1752
LB_1751: db 95,101,109,116,58,0
LB_1752:
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax  
	mov rdi,LB_1751
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call printf 
	mov rsp,QWORD [rsp_tmp]
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	mov rax,r8
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	mov r8,rax
	mov rsi,r8
	add rsi,8
	xor rax,rax  
	mov rdi,fmt_s8
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call printf 
	mov rsp,QWORD [rsp_tmp]
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	jmp LB_1754
LB_1753: db 10,0
LB_1754:
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax  
	mov rdi,LB_1753
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call printf 
	mov rsp,QWORD [rsp_tmp]
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	jmp LB_1755
LB_1755:
;; rsp=0 , %1416~2'(= {| l |} ) %1414~1'(= r ) %1413~0'(= r ) 
; ∎| 
	jmp LB_1757
LB_1756: db 101,120,110,32,51,52,51,48,56,58,10,0
LB_1757:
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax  
	mov rdi,LB_1756
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call printf 
	mov rsp,QWORD [rsp_tmp]
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	jmp err
LB_1743:
	movzx rax,BYTE [r8+6]
	cmp rax,0
	jnz LB_1742
	pop r14
	pop r9
	add rsp,8
	pop r13
	jmp LB_1701
LB_1742:
	pop rdi
	pop r9 
	pop r14
	pop r13
	jmp LB_1701
LB_1701:
	movzx rax,BYTE [r8+6]
	cmp rax,0
	jnz LB_1758
	jmp LB_1759
LB_1758:
	lea rsp,[rsp+8*0]
	add rsp,8
	pop r9 
	pop r14 
	pop r13
	ret
LB_1759:
	mov QWORD [rsp+8*0],r14
	mov r8,[r8+8]
; .mov_ptn2 2'(= a35◂ [ *{ }] ) ⊢ 3'(= a35◂ [ *{ }] )
	mov r10,r9
; .mov_ptn 2'(= a35◂ [ *{ }] ) ⊢ 3'(= a35◂ [ *{ }] )
	mov rax,r8
	mov r9,rax
	mov r13,QWORD [rsp+16+8*0]
	mov r14,QWORD [rsp+8*0]
	jmp LB_1761
LB_1761
;; rsp=0 , %1417~3'(= a35◂ [ *{ }] ) %1398~1'(= r ) %1397~0'(= r ) 
; #22 3'(= a35◂ [ *{ }] ) ⊢ 0(<2)◂3'(= a35◂ [ *{ }] )
;; rsp=0 , %1418~0(<2)◂3'(= a35◂ [ *{ }] ) %1398~1'(= r ) %1397~0'(= r ) 
; ∎ 0(<2)◂3'(= a35◂ [ *{ }] )
; .dlt.ptn 1'(= r )
; .dlt.ptn 0'(= r )
; .mov_ptn2 0(<2)◂3'(= a35◂ [ *{ }] ) ⊢ 2'(= a3◂ [ a35◂ [ *{ }]] )
; .mov_ptn 0(<2)◂3'(= a35◂ [ *{ }] ) ⊢ 2'(= a3◂ [ a35◂ [ *{ }]] )
	mov rax,r9
	mov rdi,rax
	mov rax,[SS_LN_TOP]
	mov rsi,[rax]
	mov QWORD [SS_LN_TOP],rsi 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	jmp LB_1760
LB_1760:
	movzx rax,BYTE [r8+6]
	cmp rax,0
	jnz LB_1691
	pop r14
	pop r9
	add rsp,8
	pop r13
	ret
LB_1691:
	mov QWORD [rsp+8*0],r14
	mov r13,QWORD [rsp+16+8*0]
	mov r14,QWORD [rsp+8*0]
	jmp LB_1764
LB_1764
;; rsp=0 , %1420~1'(= r ) %1419~0'(= r ) 
; #193 { } ⊢ 0(<2)◂{ }
;; rsp=0 , %1421~0(<2)◂{ } %1420~1'(= r ) %1419~0'(= r ) 
; #22 0(<2)◂{ } ⊢ 0(<2)◂0(<2)◂{ }
;; rsp=0 , %1422~0(<2)◂0(<2)◂{ } %1420~1'(= r ) %1419~0'(= r ) 
; ∎ 0(<2)◂0(<2)◂{ }
; .dlt.ptn 1'(= r )
; .dlt.ptn 0'(= r )
; .mov_ptn2 0(<2)◂0(<2)◂{ } ⊢ 2'(= a3◂ [ a35◂ [ *{ }]] )
; .mov_ptn 0(<2)◂0(<2)◂{ } ⊢ 2'(= a3◂ [ a35◂ [ *{ }]] )
	mov rax,unt 
	mov rax,unt_0
	mov rdi,rax
	mov rax,[SS_LN_TOP]
	mov rsi,[rax]
	mov QWORD [SS_LN_TOP],rsi 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	jmp LB_1763
LB_1763:
	movzx rax,BYTE [r8+6]
	cmp rax,0
	jnz LB_1762
	pop r14
	pop r9
	add rsp,8
	pop r13
	ret
LB_1762:
	pop rdi
	pop r9 
	pop r14
	pop r13
	ret
ETR_218:
	mov r9,0x0000_ffff_ffff_ffff
	and r9,[r13]
	call GRM_218
	ret
GRM_218:
	sub rsp,32
	mov QWORD [rsp+24],r13
	mov QWORD [rsp+16],r14 
	mov QWORD [rsp+8],r9
	jmp LB_1767
LB_1766:
	add r14,1 
LB_1767:
	cmp r14,r9
	jge LB_1768
	movzx rax,BYTE [r13+8+r14]
	cmp rax,9 
	jz LB_1766
	cmp rax,32 
	jz LB_1766
LB_1768
	lea rax,[r14+2]
	cmp rax,r9
	jg LB_1771
	jmp LB_1772
LB_1771:
	mov r8,unt_1
	jmp LB_1769
LB_1772:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],92
	jnz LB_1773
	cmp BYTE [rdi+1],91
	jnz LB_1773
	jmp LB_1774
LB_1773:
	mov r8,unt_1
	jmp LB_1769
LB_1774:
	add r14,2
	jmp LB_1770
LB_1769:
	lea rsp,[rsp+8*0]
	jmp LB_1765
LB_1770:
	sub rsp,32
	mov QWORD [rsp+24],r13
	mov QWORD [rsp+16],r14 
	mov QWORD [rsp+8],r9
	jmp LB_1778
LB_1777:
	add r14,1 
LB_1778:
	cmp r14,r9
	jge LB_1779
	movzx rax,BYTE [r13+8+r14]
	cmp rax,9 
	jz LB_1777
	cmp rax,32 
	jz LB_1777
LB_1779
	lea rax,[r14+1]
	cmp rax,r9
	jg LB_1782
	jmp LB_1783
LB_1782:
	mov r8,unt_1
	jmp LB_1780
LB_1783:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],10
	jnz LB_1784
	jmp LB_1785
LB_1784:
	mov r8,unt_1
	jmp LB_1780
LB_1785:
	add r14,1
	jmp LB_1781
LB_1780:
	lea rsp,[rsp+8*0]
	jmp LB_1776
LB_1781:
	jmp LB_1787
LB_1786:
	add r14,1 
LB_1787:
	cmp r14,r9
	jge LB_1788
	movzx rax,BYTE [r13+8+r14]
	cmp rax,9 
	jz LB_1786
	cmp rax,32 
	jz LB_1786
LB_1788
	call GRM_218
	movzx rax,BYTE [r8+6]
	cmp rax,0
	jnz LB_1791
	jmp LB_1792
LB_1791:
	jmp LB_1789
LB_1792:
	lea rsp,[rsp-8*1]
	mov r8,[r8+8]
; .mov_ptn2 2'(= a35◂ [ *{ }] ) ⊢ 8'(= a35◂ [ *{ }] )
; .mov_ptn 2'(= a35◂ [ *{ }] ) ⊢ 8'(= a35◂ [ *{ }] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_1790
LB_1789:
	lea rsp,[rsp+8*0]
	jmp LB_1776
LB_1790:
	jmp LB_1794
LB_1793:
	add r14,1 
LB_1794:
	cmp r14,r9
	jge LB_1795
	movzx rax,BYTE [r13+8+r14]
	cmp rax,9 
	jz LB_1793
	cmp rax,32 
	jz LB_1793
LB_1795
	call GRM_218
	movzx rax,BYTE [r8+6]
	cmp rax,0
	jnz LB_1798
	jmp LB_1799
LB_1798:
	jmp LB_1796
LB_1799:
	lea rsp,[rsp-8*1]
	mov r8,[r8+8]
; .mov_ptn2 2'(= a35◂ [ *{ }] ) ⊢ 9'(= a35◂ [ *{ }] )
; .mov_ptn 2'(= a35◂ [ *{ }] ) ⊢ 9'(= a35◂ [ *{ }] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_1797
LB_1796:
	lea rsp,[rsp+8*1]
	jmp LB_1776
LB_1797:
	mov QWORD [rsp+8*2],r14
	mov r13,QWORD [rsp+16+8*2]
	mov r14,QWORD [rsp+8*2]
	jmp LB_1801
LB_1801
;; rsp=2 , %1428~1'(= r ) %1427~0'(= r ) %1426~9'(= a35◂ [ *{ }] ) %1425~8'(= a35◂ [ *{ }] ) 
; rsp_d=0, #194 { 8'(= a35◂ [ *{ }] ) 9'(= a35◂ [ *{ }] ) } ⊢ 2'(= a35◂ [ *{ *{ }*{ }}] )
	lea rsp,[rsp-8*2]
	mov QWORD [rsp+8*0],r13
	mov QWORD [rsp+8*1],r14
; .mov_ptn2 { 8'(= a35◂ [ *{ }] ) 9'(= a35◂ [ *{ }] ) } ⊢ { 0'(= a35◂ [ *{ }] ) 1'(= a35◂ [ *{ }] ) }
; .mov_ptn 9'(= a35◂ [ *{ }] ) ⊢ 1'(= a35◂ [ *{ }] )
	mov rax,QWORD [rsp-8+8*3]
	mov r14,rax
; .mov_ptn 8'(= a35◂ [ *{ }] ) ⊢ 0'(= a35◂ [ *{ }] )
	mov rax,QWORD [rsp-8+8*4]
	mov r13,rax
	call LB_1728

	mov r14,QWORD [rsp-8+8*2]
	mov rax,QWORD [rsp-8+8*1]
	mov r8,r13
	mov r13,rax
	lea rsp,[rsp+8*4]
;; rsp=0 , %1429~2'(= a35◂ [ *{ *{ }*{ }}] ) %1428~1'(= r ) %1427~0'(= r ) 
;; ? 2'(= a35◂ [ *{ *{ }*{ }}] ) ⊢ 0(<2)◂{ 3'(= *{ } ) 4'(= *{ } ) }
	mov rdi,r8
	movzx rax,BYTE [rdi+6]
	cmp rax,0
	jnz LB_1802
	mov rdi,r8
	mov rdi,QWORD [rdi+8+8*0]
	mov r9,rdi
	mov rdi,r8
	mov rdi,QWORD [rdi+8+8*1]
	mov r10,rdi
;; rsp=0 , %1432~4'(= *{ } ) %1431~3'(= *{ } ) %1428~1'(= r ) %1427~0'(= r ) 
; #193 { } ⊢ 0(<2)◂{ }
;; rsp=0 , %1433~0(<2)◂{ } %1432~4'(= *{ } ) %1431~3'(= *{ } ) %1428~1'(= r ) %1427~0'(= r ) 
; #22 0(<2)◂{ } ⊢ 0(<2)◂0(<2)◂{ }
;; rsp=0 , %1434~0(<2)◂0(<2)◂{ } %1432~4'(= *{ } ) %1431~3'(= *{ } ) %1428~1'(= r ) %1427~0'(= r ) 
; ∎ 0(<2)◂0(<2)◂{ }
; .dlt.ptn 4'(= *{ } )
; .dlt.hp rcd
; .dlt.ptn 3'(= *{ } )
; .dlt.hp rcd
; .dlt.ptn 1'(= r )
; .dlt.ptn 0'(= r )
; .mov_ptn2 0(<2)◂0(<2)◂{ } ⊢ 2'(= a3◂ [ a35◂ [ *{ }]] )
; .mov_ptn 0(<2)◂0(<2)◂{ } ⊢ 2'(= a3◂ [ a35◂ [ *{ }]] )
	mov rax,unt 
	mov rax,unt_0
	mov rdi,rax
	mov rax,[SS_LN_TOP]
	mov rsi,[rax]
	mov QWORD [SS_LN_TOP],rsi 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	jmp LB_1800
LB_1802:
;; ? 2'(= a35◂ [ *{ *{ }*{ }}] ) ⊢ 1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] )
;; rsp=0 , %1430~2'(= a2◂ [ *{ rr{| l |}}] ) %1428~1'(= r ) %1427~0'(= r ) 
; rsp_d=0, #196 2'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 2'(= {| l |} )
	lea rsp,[rsp-8*2]
	mov QWORD [rsp+8*0],r13
	mov QWORD [rsp+8*1],r14
; .mov_ptn2 2'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 0'(= a2◂ [ *{ rr{| l |}}] )
; .mov_ptn 2'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 0'(= a2◂ [ *{ rr{| l |}}] )
	mov rax,r8
	mov r13,rax
	call ETR_196

	mov r14,QWORD [rsp-8+8*2]
	mov rax,QWORD [rsp-8+8*1]
	mov r8,r13
	mov r13,rax
	lea rsp,[rsp+8*2]
;; rsp=0 , %1435~2'(= {| l |} ) %1428~1'(= r ) %1427~0'(= r ) 
; _emt 2'(= {| l |} ) ⊢ 2'(= {| l |} )
	jmp LB_1804
LB_1803: db 95,101,109,116,58,0
LB_1804:
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax  
	mov rdi,LB_1803
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call printf 
	mov rsp,QWORD [rsp_tmp]
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	mov rax,r8
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	mov r8,rax
	mov rsi,r8
	add rsi,8
	xor rax,rax  
	mov rdi,fmt_s8
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call printf 
	mov rsp,QWORD [rsp_tmp]
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	jmp LB_1806
LB_1805: db 10,0
LB_1806:
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax  
	mov rdi,LB_1805
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call printf 
	mov rsp,QWORD [rsp_tmp]
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	jmp LB_1807
LB_1807:
;; rsp=0 , %1436~2'(= {| l |} ) %1428~1'(= r ) %1427~0'(= r ) 
; ∎| 
	jmp LB_1809
LB_1808: db 101,120,110,32,51,52,55,49,56,58,10,0
LB_1809:
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax  
	mov rdi,LB_1808
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call printf 
	mov rsp,QWORD [rsp_tmp]
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	jmp err
LB_1800:
	movzx rax,BYTE [r8+6]
	cmp rax,0
	jnz LB_1776
	pop r14
	pop r9
	add rsp,8
	pop r13
	jmp LB_1775
LB_1776:
	mov QWORD [rsp+8*0],r14
	mov r13,QWORD [rsp+16+8*0]
	mov r14,QWORD [rsp+8*0]
	jmp LB_1812
LB_1812
;; rsp=0 , %1438~1'(= r ) %1437~0'(= r ) 
; #20 { } ⊢ 1(<2)◂{ }
;; rsp=0 , %1439~1(<2)◂{ } %1438~1'(= r ) %1437~0'(= r ) 
	jmp LB_1813
LB_1813:
; $ %[ "blk_cmt 0" ] ⊢ %[ "blk_cmt 0" ]
;; rsp=0 , %1440~%[ "blk_cmt 0" ] %1439~1(<2)◂{ } %1438~1'(= r ) %1437~0'(= r ) 
; #21 { { 0'(= r ) 1'(= r ) %[ "blk_cmt 0" ] } 1(<2)◂{ } } ⊢ 0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "blk_cmt 0" ] } 1(<2)◂{ } }
;; rsp=0 , %1441~0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "blk_cmt 0" ] } 1(<2)◂{ } } 
; #192 0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "blk_cmt 0" ] } 1(<2)◂{ } } ⊢ 1(<2)◂0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "blk_cmt 0" ] } 1(<2)◂{ } }
;; rsp=0 , %1442~1(<2)◂0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "blk_cmt 0" ] } 1(<2)◂{ } } 
; #22 1(<2)◂0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "blk_cmt 0" ] } 1(<2)◂{ } } ⊢ 0(<2)◂1(<2)◂0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "blk_cmt 0" ] } 1(<2)◂{ } }
;; rsp=0 , %1443~0(<2)◂1(<2)◂0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "blk_cmt 0" ] } 1(<2)◂{ } } 
; ∎ 0(<2)◂1(<2)◂0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "blk_cmt 0" ] } 1(<2)◂{ } }
; .mov_ptn2 0(<2)◂1(<2)◂0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "blk_cmt 0" ] } 1(<2)◂{ } } ⊢ 2'(= a3◂ [ a35◂ [ *{ }]] )
; .mov_ptn 0(<2)◂1(<2)◂0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "blk_cmt 0" ] } 1(<2)◂{ } } ⊢ 2'(= a3◂ [ a35◂ [ *{ }]] )
	mov rax,[SS_RCD_2_TOP]
	mov rsi,[rax] 
	mov QWORD [SS_RCD_2_TOP],rsi
	mov QWORD [rax],0
	mov r9,rax
	mov rax,[SS_RCD_3_TOP]
	mov rsi,[rax] 
	mov QWORD [SS_RCD_3_TOP],rsi
	mov QWORD [rax],0
	mov r10,rax
	mov rax,r13
	mov rdi,r10
	mov QWORD [rdi+8+8*0],rax
	mov rax,r14
	mov rdi,r10
	mov QWORD [rdi+8+8*1],rax
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	mov rdi,1  
	mov rsi,24
	xor rax,rax
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call calloc
	mov rsp,QWORD [rsp_tmp]  
	mov rdi,9
	mov rsi,0x_40_00_0000_0000_0000
	or rdi,rsi
	mov QWORD [rax],rdi
	mov QWORD [rax+8*2],0
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	mov BYTE [rax+8+0],98
	mov BYTE [rax+8+1],108
	mov BYTE [rax+8+2],107
	mov BYTE [rax+8+3],95
	mov BYTE [rax+8+4],99
	mov BYTE [rax+8+5],109
	mov BYTE [rax+8+6],116
	mov BYTE [rax+8+7],32
	mov BYTE [rax+8+8],48
	mov rdi,r10
	mov QWORD [rdi+8+8*2],rax
	mov rax,r10
	mov rdi,r9
	mov QWORD [rdi+8+8*0],rax
	mov rax,unt 
	mov rax,unt_1
	mov rdi,r9
	mov QWORD [rdi+8+8*1],rax
	mov rax,r9
	mov BYTE [rax+6],0
	mov rdi,rax
	mov rax,[SS_LN_TOP]
	mov rsi,[rax]
	mov QWORD [SS_LN_TOP],rsi 
	mov QWORD [rax],0
	mov BYTE [rax+6],1
	mov QWORD [rax+8],rdi
	mov rdi,rax
	mov rax,[SS_LN_TOP]
	mov rsi,[rax]
	mov QWORD [SS_LN_TOP],rsi 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	jmp LB_1811
LB_1811:
	movzx rax,BYTE [r8+6]
	cmp rax,0
	jnz LB_1810
	pop r14
	pop r9
	add rsp,8
	pop r13
	jmp LB_1775
LB_1810:
	pop rdi
	pop r9 
	pop r14
	pop r13
	jmp LB_1775
LB_1775:
	movzx rax,BYTE [r8+6]
	cmp rax,0
	jnz LB_1814
	jmp LB_1815
LB_1814:
	lea rsp,[rsp+8*0]
	add rsp,8
	pop r9 
	pop r14 
	pop r13
	ret
LB_1815:
	mov QWORD [rsp+8*0],r14
	mov r8,[r8+8]
; .mov_ptn2 2'(= a35◂ [ *{ }] ) ⊢ 3'(= a35◂ [ *{ }] )
	mov r10,r9
; .mov_ptn 2'(= a35◂ [ *{ }] ) ⊢ 3'(= a35◂ [ *{ }] )
	mov rax,r8
	mov r9,rax
	mov r13,QWORD [rsp+16+8*0]
	mov r14,QWORD [rsp+8*0]
	jmp LB_1817
LB_1817
;; rsp=0 , %1444~3'(= a35◂ [ *{ }] ) %1424~1'(= r ) %1423~0'(= r ) 
; #22 3'(= a35◂ [ *{ }] ) ⊢ 0(<2)◂3'(= a35◂ [ *{ }] )
;; rsp=0 , %1445~0(<2)◂3'(= a35◂ [ *{ }] ) %1424~1'(= r ) %1423~0'(= r ) 
; ∎ 0(<2)◂3'(= a35◂ [ *{ }] )
; .dlt.ptn 1'(= r )
; .dlt.ptn 0'(= r )
; .mov_ptn2 0(<2)◂3'(= a35◂ [ *{ }] ) ⊢ 2'(= a3◂ [ a35◂ [ *{ }]] )
; .mov_ptn 0(<2)◂3'(= a35◂ [ *{ }] ) ⊢ 2'(= a3◂ [ a35◂ [ *{ }]] )
	mov rax,r9
	mov rdi,rax
	mov rax,[SS_LN_TOP]
	mov rsi,[rax]
	mov QWORD [SS_LN_TOP],rsi 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	jmp LB_1816
LB_1816:
	movzx rax,BYTE [r8+6]
	cmp rax,0
	jnz LB_1765
	pop r14
	pop r9
	add rsp,8
	pop r13
	ret
LB_1765:
	jmp LB_1820
LB_1819:
	add r14,1 
LB_1820:
	cmp r14,r9
	jge LB_1821
	movzx rax,BYTE [r13+8+r14]
	cmp rax,9 
	jz LB_1819
	cmp rax,32 
	jz LB_1819
LB_1821
	lea rax,[r14+2]
	cmp rax,r9
	jg LB_1824
	jmp LB_1825
LB_1824:
	mov r8,unt_1
	jmp LB_1822
LB_1825:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],92
	jnz LB_1826
	cmp BYTE [rdi+1],93
	jnz LB_1826
	jmp LB_1827
LB_1826:
	mov r8,unt_1
	jmp LB_1822
LB_1827:
	add r14,2
	jmp LB_1823
LB_1822:
	lea rsp,[rsp+8*0]
	jmp LB_1818
LB_1823:
	sub rsp,32
	mov QWORD [rsp+24],r13
	mov QWORD [rsp+16],r14 
	mov QWORD [rsp+8],r9
	jmp LB_1831
LB_1830:
	add r14,1 
LB_1831:
	cmp r14,r9
	jge LB_1832
	movzx rax,BYTE [r13+8+r14]
	cmp rax,9 
	jz LB_1830
	cmp rax,32 
	jz LB_1830
LB_1832
	lea rax,[r14+1]
	cmp rax,r9
	jg LB_1835
	jmp LB_1836
LB_1835:
	mov r8,unt_1
	jmp LB_1833
LB_1836:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],10
	jnz LB_1837
	jmp LB_1838
LB_1837:
	mov r8,unt_1
	jmp LB_1833
LB_1838:
	add r14,1
	jmp LB_1834
LB_1833:
	lea rsp,[rsp+8*0]
	jmp LB_1829
LB_1834:
	mov QWORD [rsp+8*0],r14
	mov r13,QWORD [rsp+16+8*0]
	mov r14,QWORD [rsp+8*0]
	jmp LB_1840
LB_1840
;; rsp=0 , %1449~1'(= r ) %1448~0'(= r ) 
; #22 { } ⊢ 0(<2)◂{ }
;; rsp=0 , %1450~0(<2)◂{ } %1449~1'(= r ) %1448~0'(= r ) 
; ∎ 0(<2)◂{ }
; .dlt.ptn 1'(= r )
; .dlt.ptn 0'(= r )
; .mov_ptn2 0(<2)◂{ } ⊢ 2'(= a3◂ [ *{ }] )
; .mov_ptn 0(<2)◂{ } ⊢ 2'(= a3◂ [ *{ }] )
	mov rax,unt 
	mov rax,unt_0
	mov r8,rax
	jmp LB_1839
LB_1839:
	movzx rax,BYTE [r8+6]
	cmp rax,0
	jnz LB_1829
	pop r14
	pop r9
	add rsp,8
	pop r13
	jmp LB_1828
LB_1829:
	jmp LB_1843
LB_1842:
	add r14,1 
LB_1843:
	cmp r14,r9
	jge LB_1844
	movzx rax,BYTE [r13+8+r14]
	cmp rax,9 
	jz LB_1842
	cmp rax,32 
	jz LB_1842
LB_1844
	cmp r14,r9
	jge LB_1847
	jmp LB_1848
LB_1847:
	mov r8,unt_1 
	jmp LB_1845
LB_1848:
	movzx rdi,BYTE [r13+8+r14]
	push rdi 
	add r14,1 
	jmp LB_1846
LB_1845:
	lea rsp,[rsp+8*0]
	pop rdi
	pop r9 
	pop r14
	pop r13
	jmp LB_1828
LB_1846:
	mov QWORD [rsp+8*1],r14
	mov r13,QWORD [rsp+16+8*1]
	mov r14,QWORD [rsp+8*1]
	jmp LB_1850
LB_1850
;; rsp=1 , %1453~1'(= r ) %1452~0'(= r ) %1451~8'(= r ) 
; #23 { } ⊢ 1(<2)◂{ }
;; rsp=1 , %1454~1(<2)◂{ } %1453~1'(= r ) %1452~0'(= r ) %1451~8'(= r ) 
; ∎ 1(<2)◂{ }
; .dlt.ptn 1'(= r )
; .dlt.ptn 0'(= r )
; .dlt.ptn 8'(= r )
; .mov_ptn2 1(<2)◂{ } ⊢ 2'(= a3◂ [ *{ }] )
; .mov_ptn 1(<2)◂{ } ⊢ 2'(= a3◂ [ *{ }] )
	mov rax,unt 
	mov rax,unt_1
	mov r8,rax
	lea rsp,[rsp+8*1]
	jmp LB_1849
LB_1849:
	movzx rax,BYTE [r8+6]
	cmp rax,0
	jnz LB_1841
	pop r14
	pop r9
	add rsp,8
	pop r13
	jmp LB_1828
LB_1841:
	mov QWORD [rsp+8*0],r14
	mov r13,QWORD [rsp+16+8*0]
	mov r14,QWORD [rsp+8*0]
	jmp LB_1853
LB_1853
;; rsp=0 , %1456~1'(= r ) %1455~0'(= r ) 
; #22 { } ⊢ 0(<2)◂{ }
;; rsp=0 , %1457~0(<2)◂{ } %1456~1'(= r ) %1455~0'(= r ) 
; ∎ 0(<2)◂{ }
; .dlt.ptn 1'(= r )
; .dlt.ptn 0'(= r )
; .mov_ptn2 0(<2)◂{ } ⊢ 2'(= a3◂ [ *{ }] )
; .mov_ptn 0(<2)◂{ } ⊢ 2'(= a3◂ [ *{ }] )
	mov rax,unt 
	mov rax,unt_0
	mov r8,rax
	jmp LB_1852
LB_1852:
	movzx rax,BYTE [r8+6]
	cmp rax,0
	jnz LB_1851
	pop r14
	pop r9
	add rsp,8
	pop r13
	jmp LB_1828
LB_1851:
	pop rdi
	pop r9 
	pop r14
	pop r13
	jmp LB_1828
LB_1828:
	movzx rax,BYTE [r8+6]
	cmp rax,0
	jnz LB_1854
	jmp LB_1855
LB_1854:
	lea rsp,[rsp+8*0]
	add rsp,8
	pop r9 
	pop r14 
	pop r13
	ret
LB_1855:
	mov QWORD [rsp+8*0],r14
; .mov_ptn2 2'(= *{ } ) ⊢ { }
; .mov_ptn 2'(= *{ } ) ⊢ { }
	mov r13,QWORD [rsp+16+8*0]
	mov r14,QWORD [rsp+8*0]
	jmp LB_1857
LB_1857
;; rsp=0 , %1458~{ } %1447~1'(= r ) %1446~0'(= r ) 
; #193 { } ⊢ 0(<2)◂{ }
;; rsp=0 , %1459~0(<2)◂{ } %1458~{ } %1447~1'(= r ) %1446~0'(= r ) 
; #22 0(<2)◂{ } ⊢ 0(<2)◂0(<2)◂{ }
;; rsp=0 , %1460~0(<2)◂0(<2)◂{ } %1458~{ } %1447~1'(= r ) %1446~0'(= r ) 
; ∎ 0(<2)◂0(<2)◂{ }
; .dlt.ptn { }
; .dlt.ptn 1'(= r )
; .dlt.ptn 0'(= r )
; .mov_ptn2 0(<2)◂0(<2)◂{ } ⊢ 2'(= a3◂ [ a35◂ [ *{ }]] )
; .mov_ptn 0(<2)◂0(<2)◂{ } ⊢ 2'(= a3◂ [ a35◂ [ *{ }]] )
	mov rax,unt 
	mov rax,unt_0
	mov rdi,rax
	mov rax,[SS_LN_TOP]
	mov rsi,[rax]
	mov QWORD [SS_LN_TOP],rsi 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	jmp LB_1856
LB_1856:
	movzx rax,BYTE [r8+6]
	cmp rax,0
	jnz LB_1818
	pop r14
	pop r9
	add rsp,8
	pop r13
	ret
LB_1818:
	jmp LB_1860
LB_1859:
	add r14,1 
LB_1860:
	cmp r14,r9
	jge LB_1861
	movzx rax,BYTE [r13+8+r14]
	cmp rax,9 
	jz LB_1859
	cmp rax,32 
	jz LB_1859
LB_1861
	call GRM_219
	movzx rax,BYTE [r8+6]
	cmp rax,0
	jnz LB_1864
	jmp LB_1865
LB_1864:
	jmp LB_1862
LB_1865:
	lea rsp,[rsp-8*1]
	mov r8,[r8+8]
; .mov_ptn2 2'(= a35◂ [ *{ }] ) ⊢ 8'(= a35◂ [ *{ }] )
; .mov_ptn 2'(= a35◂ [ *{ }] ) ⊢ 8'(= a35◂ [ *{ }] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_1863
LB_1862:
	lea rsp,[rsp+8*0]
	jmp LB_1858
LB_1863:
	mov QWORD [rsp+8*1],r14
	mov r13,QWORD [rsp+16+8*1]
	mov r14,QWORD [rsp+8*1]
	jmp LB_1867
LB_1867
;; rsp=1 , %1463~1'(= r ) %1462~0'(= r ) %1461~8'(= a35◂ [ *{ }] ) 
; #22 8'(= a35◂ [ *{ }] ) ⊢ 0(<2)◂8'(= a35◂ [ *{ }] )
;; rsp=1 , %1464~0(<2)◂8'(= a35◂ [ *{ }] ) %1463~1'(= r ) %1462~0'(= r ) 
; ∎ 0(<2)◂8'(= a35◂ [ *{ }] )
; .dlt.ptn 1'(= r )
; .dlt.ptn 0'(= r )
; .mov_ptn2 0(<2)◂8'(= a35◂ [ *{ }] ) ⊢ 2'(= a3◂ [ a35◂ [ *{ }]] )
; .mov_ptn 0(<2)◂8'(= a35◂ [ *{ }] ) ⊢ 2'(= a3◂ [ a35◂ [ *{ }]] )
	mov rax,QWORD [rsp-8+8*1]
	mov rdi,rax
	mov rax,[SS_LN_TOP]
	mov rsi,[rax]
	mov QWORD [SS_LN_TOP],rsi 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	lea rsp,[rsp+8*1]
	jmp LB_1866
LB_1866:
	movzx rax,BYTE [r8+6]
	cmp rax,0
	jnz LB_1858
	pop r14
	pop r9
	add rsp,8
	pop r13
	ret
LB_1858:
	mov QWORD [rsp+8*0],r14
	mov r13,QWORD [rsp+16+8*0]
	mov r14,QWORD [rsp+8*0]
	jmp LB_1870
LB_1870
;; rsp=0 , %1466~1'(= r ) %1465~0'(= r ) 
; #20 { } ⊢ 1(<2)◂{ }
;; rsp=0 , %1467~1(<2)◂{ } %1466~1'(= r ) %1465~0'(= r ) 
	jmp LB_1871
LB_1871:
; $ %[ "blk_cmt 1" ] ⊢ %[ "blk_cmt 1" ]
;; rsp=0 , %1468~%[ "blk_cmt 1" ] %1467~1(<2)◂{ } %1466~1'(= r ) %1465~0'(= r ) 
; #21 { { 0'(= r ) 1'(= r ) %[ "blk_cmt 1" ] } 1(<2)◂{ } } ⊢ 0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "blk_cmt 1" ] } 1(<2)◂{ } }
;; rsp=0 , %1469~0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "blk_cmt 1" ] } 1(<2)◂{ } } 
; #192 0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "blk_cmt 1" ] } 1(<2)◂{ } } ⊢ 1(<2)◂0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "blk_cmt 1" ] } 1(<2)◂{ } }
;; rsp=0 , %1470~1(<2)◂0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "blk_cmt 1" ] } 1(<2)◂{ } } 
; #22 1(<2)◂0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "blk_cmt 1" ] } 1(<2)◂{ } } ⊢ 0(<2)◂1(<2)◂0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "blk_cmt 1" ] } 1(<2)◂{ } }
;; rsp=0 , %1471~0(<2)◂1(<2)◂0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "blk_cmt 1" ] } 1(<2)◂{ } } 
; ∎ 0(<2)◂1(<2)◂0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "blk_cmt 1" ] } 1(<2)◂{ } }
; .mov_ptn2 0(<2)◂1(<2)◂0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "blk_cmt 1" ] } 1(<2)◂{ } } ⊢ 2'(= a3◂ [ a35◂ [ *{ }]] )
; .mov_ptn 0(<2)◂1(<2)◂0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "blk_cmt 1" ] } 1(<2)◂{ } } ⊢ 2'(= a3◂ [ a35◂ [ *{ }]] )
	mov rax,[SS_RCD_2_TOP]
	mov rsi,[rax] 
	mov QWORD [SS_RCD_2_TOP],rsi
	mov QWORD [rax],0
	mov r9,rax
	mov rax,[SS_RCD_3_TOP]
	mov rsi,[rax] 
	mov QWORD [SS_RCD_3_TOP],rsi
	mov QWORD [rax],0
	mov r10,rax
	mov rax,r13
	mov rdi,r10
	mov QWORD [rdi+8+8*0],rax
	mov rax,r14
	mov rdi,r10
	mov QWORD [rdi+8+8*1],rax
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	mov rdi,1  
	mov rsi,24
	xor rax,rax
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call calloc
	mov rsp,QWORD [rsp_tmp]  
	mov rdi,9
	mov rsi,0x_40_00_0000_0000_0000
	or rdi,rsi
	mov QWORD [rax],rdi
	mov QWORD [rax+8*2],0
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	mov BYTE [rax+8+0],98
	mov BYTE [rax+8+1],108
	mov BYTE [rax+8+2],107
	mov BYTE [rax+8+3],95
	mov BYTE [rax+8+4],99
	mov BYTE [rax+8+5],109
	mov BYTE [rax+8+6],116
	mov BYTE [rax+8+7],32
	mov BYTE [rax+8+8],49
	mov rdi,r10
	mov QWORD [rdi+8+8*2],rax
	mov rax,r10
	mov rdi,r9
	mov QWORD [rdi+8+8*0],rax
	mov rax,unt 
	mov rax,unt_1
	mov rdi,r9
	mov QWORD [rdi+8+8*1],rax
	mov rax,r9
	mov BYTE [rax+6],0
	mov rdi,rax
	mov rax,[SS_LN_TOP]
	mov rsi,[rax]
	mov QWORD [SS_LN_TOP],rsi 
	mov QWORD [rax],0
	mov BYTE [rax+6],1
	mov QWORD [rax+8],rdi
	mov rdi,rax
	mov rax,[SS_LN_TOP]
	mov rsi,[rax]
	mov QWORD [SS_LN_TOP],rsi 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	jmp LB_1869
LB_1869:
	movzx rax,BYTE [r8+6]
	cmp rax,0
	jnz LB_1868
	pop r14
	pop r9
	add rsp,8
	pop r13
	ret
LB_1868:
	pop rdi
	pop r9 
	pop r14
	pop r13
	ret
ETR_219:
	mov r9,0x0000_ffff_ffff_ffff
	and r9,[r13]
	call GRM_219
	ret
GRM_219:
	sub rsp,32
	mov QWORD [rsp+24],r13
	mov QWORD [rsp+16],r14 
	mov QWORD [rsp+8],r9
	jmp LB_1874
LB_1873:
	add r14,1 
LB_1874:
	cmp r14,r9
	jge LB_1875
	movzx rax,BYTE [r13+8+r14]
	cmp rax,9 
	jz LB_1873
	cmp rax,32 
	jz LB_1873
LB_1875
	lea rax,[r14+1]
	cmp rax,r9
	jg LB_1878
	jmp LB_1879
LB_1878:
	mov r8,unt_1
	jmp LB_1876
LB_1879:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],10
	jnz LB_1880
	jmp LB_1881
LB_1880:
	mov r8,unt_1
	jmp LB_1876
LB_1881:
	add r14,1
	jmp LB_1877
LB_1876:
	lea rsp,[rsp+8*0]
	jmp LB_1872
LB_1877:
	jmp LB_1883
LB_1882:
	add r14,1 
LB_1883:
	cmp r14,r9
	jge LB_1884
	movzx rax,BYTE [r13+8+r14]
	cmp rax,9 
	jz LB_1882
	cmp rax,32 
	jz LB_1882
LB_1884
	call GRM_218
	movzx rax,BYTE [r8+6]
	cmp rax,0
	jnz LB_1887
	jmp LB_1888
LB_1887:
	jmp LB_1885
LB_1888:
	lea rsp,[rsp-8*1]
	mov r8,[r8+8]
; .mov_ptn2 2'(= a35◂ [ *{ }] ) ⊢ 8'(= a35◂ [ *{ }] )
; .mov_ptn 2'(= a35◂ [ *{ }] ) ⊢ 8'(= a35◂ [ *{ }] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_1886
LB_1885:
	lea rsp,[rsp+8*0]
	jmp LB_1872
LB_1886:
	mov QWORD [rsp+8*1],r14
	mov r13,QWORD [rsp+16+8*1]
	mov r14,QWORD [rsp+8*1]
	jmp LB_1890
LB_1890
;; rsp=1 , %1474~1'(= r ) %1473~0'(= r ) %1472~8'(= a35◂ [ *{ }] ) 
; #22 8'(= a35◂ [ *{ }] ) ⊢ 0(<2)◂8'(= a35◂ [ *{ }] )
;; rsp=1 , %1475~0(<2)◂8'(= a35◂ [ *{ }] ) %1474~1'(= r ) %1473~0'(= r ) 
; ∎ 0(<2)◂8'(= a35◂ [ *{ }] )
; .dlt.ptn 1'(= r )
; .dlt.ptn 0'(= r )
; .mov_ptn2 0(<2)◂8'(= a35◂ [ *{ }] ) ⊢ 2'(= a3◂ [ a35◂ [ *{ }]] )
; .mov_ptn 0(<2)◂8'(= a35◂ [ *{ }] ) ⊢ 2'(= a3◂ [ a35◂ [ *{ }]] )
	mov rax,QWORD [rsp-8+8*1]
	mov rdi,rax
	mov rax,[SS_LN_TOP]
	mov rsi,[rax]
	mov QWORD [SS_LN_TOP],rsi 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	lea rsp,[rsp+8*1]
	jmp LB_1889
LB_1889:
	movzx rax,BYTE [r8+6]
	cmp rax,0
	jnz LB_1872
	pop r14
	pop r9
	add rsp,8
	pop r13
	ret
LB_1872:
	jmp LB_1893
LB_1892:
	add r14,1 
LB_1893:
	cmp r14,r9
	jge LB_1894
	movzx rax,BYTE [r13+8+r14]
	cmp rax,9 
	jz LB_1892
	cmp rax,32 
	jz LB_1892
LB_1894
	cmp r14,r9
	jge LB_1897
	jmp LB_1898
LB_1897:
	mov r8,unt_1 
	jmp LB_1895
LB_1898:
	movzx rdi,BYTE [r13+8+r14]
	push rdi 
	add r14,1 
	jmp LB_1896
LB_1895:
	lea rsp,[rsp+8*0]
	jmp LB_1891
LB_1896:
	jmp LB_1900
LB_1899:
	add r14,1 
LB_1900:
	cmp r14,r9
	jge LB_1901
	movzx rax,BYTE [r13+8+r14]
	cmp rax,9 
	jz LB_1899
	cmp rax,32 
	jz LB_1899
LB_1901
	call GRM_219
	movzx rax,BYTE [r8+6]
	cmp rax,0
	jnz LB_1904
	jmp LB_1905
LB_1904:
	jmp LB_1902
LB_1905:
	lea rsp,[rsp-8*1]
	mov r8,[r8+8]
; .mov_ptn2 2'(= a35◂ [ *{ }] ) ⊢ 9'(= a35◂ [ *{ }] )
; .mov_ptn 2'(= a35◂ [ *{ }] ) ⊢ 9'(= a35◂ [ *{ }] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_1903
LB_1902:
	lea rsp,[rsp+8*1]
	jmp LB_1891
LB_1903:
	mov QWORD [rsp+8*2],r14
	mov r13,QWORD [rsp+16+8*2]
	mov r14,QWORD [rsp+8*2]
	jmp LB_1907
LB_1907
;; rsp=2 , %1479~1'(= r ) %1478~0'(= r ) %1477~9'(= a35◂ [ *{ }] ) %1476~8'(= r ) 
; #22 9'(= a35◂ [ *{ }] ) ⊢ 0(<2)◂9'(= a35◂ [ *{ }] )
;; rsp=2 , %1480~0(<2)◂9'(= a35◂ [ *{ }] ) %1479~1'(= r ) %1478~0'(= r ) %1476~8'(= r ) 
; ∎ 0(<2)◂9'(= a35◂ [ *{ }] )
; .dlt.ptn 1'(= r )
; .dlt.ptn 0'(= r )
; .dlt.ptn 8'(= r )
; .mov_ptn2 0(<2)◂9'(= a35◂ [ *{ }] ) ⊢ 2'(= a3◂ [ a35◂ [ *{ }]] )
; .mov_ptn 0(<2)◂9'(= a35◂ [ *{ }] ) ⊢ 2'(= a3◂ [ a35◂ [ *{ }]] )
	mov rax,QWORD [rsp-8+8*1]
	mov rdi,rax
	mov rax,[SS_LN_TOP]
	mov rsi,[rax]
	mov QWORD [SS_LN_TOP],rsi 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	lea rsp,[rsp+8*2]
	jmp LB_1906
LB_1906:
	movzx rax,BYTE [r8+6]
	cmp rax,0
	jnz LB_1891
	pop r14
	pop r9
	add rsp,8
	pop r13
	ret
LB_1891:
	mov QWORD [rsp+8*0],r14
	mov r13,QWORD [rsp+16+8*0]
	mov r14,QWORD [rsp+8*0]
	jmp LB_1910
LB_1910
;; rsp=0 , %1482~1'(= r ) %1481~0'(= r ) 
	jmp LB_1911
LB_1911:
; $ %[ "line_res_c 0" ] ⊢ %[ "line_res_c 0" ]
;; rsp=0 , %1483~%[ "line_res_c 0" ] %1482~1'(= r ) %1481~0'(= r ) 
; _emt %[ "line_res_c 0" ] ⊢ %[ "line_res_c 0" ]
	jmp LB_1913
LB_1912: db 95,101,109,116,58,0
LB_1913:
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax  
	mov rdi,LB_1912
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call printf 
	mov rsp,QWORD [rsp_tmp]
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	jmp LB_1915
LB_1914: db 34,108,105,110,101,95,114,101,115,95,99,32,48,34,0
LB_1915:
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax  
	mov rdi,LB_1914
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call printf 
	mov rsp,QWORD [rsp_tmp]
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	jmp LB_1917
LB_1916: db 10,0
LB_1917:
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax  
	mov rdi,LB_1916
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call printf 
	mov rsp,QWORD [rsp_tmp]
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	jmp LB_1918
LB_1918:
;; rsp=0 , %1484~%[ "line_res_c 0" ] %1482~1'(= r ) %1481~0'(= r ) 
; ∎| 
	jmp LB_1920
LB_1919: db 101,120,110,32,51,53,53,55,54,58,10,0
LB_1920:
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax  
	mov rdi,LB_1919
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call printf 
	mov rsp,QWORD [rsp_tmp]
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	jmp err
LB_1909:
	movzx rax,BYTE [r8+6]
	cmp rax,0
	jnz LB_1908
	pop r14
	pop r9
	add rsp,8
	pop r13
	ret
LB_1908:
	pop rdi
	pop r9 
	pop r14
	pop r13
	ret
ETR_220:
	mov r9,0x0000_ffff_ffff_ffff
	and r9,[r13]
	call GRM_220
	ret
GRM_220:
	sub rsp,32
	mov QWORD [rsp+24],r13
	mov QWORD [rsp+16],r14 
	mov QWORD [rsp+8],r9
	jmp LB_1923
LB_1922:
	add r14,1 
LB_1923:
	cmp r14,r9
	jge LB_1924
	movzx rax,BYTE [r13+8+r14]
	cmp rax,9 
	jz LB_1922
	cmp rax,32 
	jz LB_1922
LB_1924
	lea rax,[r14+1]
	cmp rax,r9
	jg LB_1927
	jmp LB_1928
LB_1927:
	mov r8,unt_1
	jmp LB_1925
LB_1928:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],10
	jnz LB_1929
	jmp LB_1930
LB_1929:
	mov r8,unt_1
	jmp LB_1925
LB_1930:
	add r14,1
	jmp LB_1926
LB_1925:
	lea rsp,[rsp+8*0]
	jmp LB_1921
LB_1926:
	mov QWORD [rsp+8*0],r14
	mov r13,QWORD [rsp+16+8*0]
	mov r14,QWORD [rsp+8*0]
	jmp LB_1932
LB_1932
;; rsp=0 , %1486~1'(= r ) %1485~0'(= r ) 
; #22 { 0'(= r ) 1'(= r ) } ⊢ 0(<2)◂{ 0'(= r ) 1'(= r ) }
;; rsp=0 , %1487~0(<2)◂{ 0'(= r ) 1'(= r ) } 
; ∎ 0(<2)◂{ 0'(= r ) 1'(= r ) }
; .mov_ptn2 0(<2)◂{ 0'(= r ) 1'(= r ) } ⊢ 2'(= a3◂ [ *{ rr}] )
; .mov_ptn 0(<2)◂{ 0'(= r ) 1'(= r ) } ⊢ 2'(= a3◂ [ *{ rr}] )
	mov rax,[SS_RCD_2_TOP]
	mov rsi,[rax] 
	mov QWORD [SS_RCD_2_TOP],rsi
	mov QWORD [rax],0
	mov r9,rax
	mov rax,r13
	mov rdi,r9
	mov QWORD [rdi+8+8*0],rax
	mov rax,r14
	mov rdi,r9
	mov QWORD [rdi+8+8*1],rax
	mov rax,r9
	mov BYTE [rax+6],0
	mov r8,rax
	jmp LB_1931
LB_1931:
	movzx rax,BYTE [r8+6]
	cmp rax,0
	jnz LB_1921
	pop r14
	pop r9
	add rsp,8
	pop r13
	ret
LB_1921:
	jmp LB_1935
LB_1934:
	add r14,1 
LB_1935:
	cmp r14,r9
	jge LB_1936
	movzx rax,BYTE [r13+8+r14]
	cmp rax,9 
	jz LB_1934
	cmp rax,32 
	jz LB_1934
LB_1936
	cmp r14,r9
	jge LB_1939
	jmp LB_1940
LB_1939:
	mov r8,unt_1 
	jmp LB_1937
LB_1940:
	movzx rdi,BYTE [r13+8+r14]
	push rdi 
	add r14,1 
	jmp LB_1938
LB_1937:
	lea rsp,[rsp+8*0]
	jmp LB_1933
LB_1938:
	jmp LB_1942
LB_1941:
	add r14,1 
LB_1942:
	cmp r14,r9
	jge LB_1943
	movzx rax,BYTE [r13+8+r14]
	cmp rax,9 
	jz LB_1941
	cmp rax,32 
	jz LB_1941
LB_1943
	call GRM_220
	movzx rax,BYTE [r8+6]
	cmp rax,0
	jnz LB_1946
	jmp LB_1947
LB_1946:
	jmp LB_1944
LB_1947:
	lea rsp,[rsp-8*2]
; .mov_ptn2 2'(= *{ rr} ) ⊢ { 9'(= r ) 10'(= r ) }
; .mov_ptn 2'(= *{ rr} ) ⊢ { 9'(= r ) 10'(= r ) }
	mov rdi,r8
	mov rdi,QWORD [rdi+8+8*0]
	mov r10,rdi
	mov QWORD [rsp-8+8*2],r10
	mov rdi,r8
	mov rdi,QWORD [rdi+8+8*1]
	mov r11,rdi
	mov QWORD [rsp-8+8*1],r11
	jmp LB_1945
LB_1944:
	lea rsp,[rsp+8*1]
	jmp LB_1933
LB_1945:
	mov QWORD [rsp+8*3],r14
	mov r13,QWORD [rsp+16+8*3]
	mov r14,QWORD [rsp+8*3]
	jmp LB_1949
LB_1949
;; rsp=3 , %1492~1'(= r ) %1491~0'(= r ) %1490~10'(= r ) %1489~9'(= r ) %1488~8'(= r ) 
; #22 { 0'(= r ) 10'(= r ) } ⊢ 0(<2)◂{ 0'(= r ) 10'(= r ) }
;; rsp=3 , %1493~0(<2)◂{ 0'(= r ) 10'(= r ) } %1492~1'(= r ) %1489~9'(= r ) %1488~8'(= r ) 
; ∎ 0(<2)◂{ 0'(= r ) 10'(= r ) }
; .dlt.ptn 1'(= r )
; .dlt.ptn 9'(= r )
; .dlt.ptn 8'(= r )
; .mov_ptn2 0(<2)◂{ 0'(= r ) 10'(= r ) } ⊢ 2'(= a3◂ [ *{ rr}] )
; .mov_ptn 0(<2)◂{ 0'(= r ) 10'(= r ) } ⊢ 2'(= a3◂ [ *{ rr}] )
	mov rax,[SS_RCD_2_TOP]
	mov rsi,[rax] 
	mov QWORD [SS_RCD_2_TOP],rsi
	mov QWORD [rax],0
	mov r14,rax
	mov rax,r13
	mov rdi,r14
	mov QWORD [rdi+8+8*0],rax
	mov rax,QWORD [rsp-8+8*1]
	mov rdi,r14
	mov QWORD [rdi+8+8*1],rax
	mov rax,r14
	mov BYTE [rax+6],0
	mov r8,rax
	lea rsp,[rsp+8*3]
	jmp LB_1948
LB_1948:
	movzx rax,BYTE [r8+6]
	cmp rax,0
	jnz LB_1933
	pop r14
	pop r9
	add rsp,8
	pop r13
	ret
LB_1933:
	mov QWORD [rsp+8*0],r14
	mov r13,QWORD [rsp+16+8*0]
	mov r14,QWORD [rsp+8*0]
	jmp LB_1952
LB_1952
;; rsp=0 , %1495~1'(= r ) %1494~0'(= r ) 
; #22 { 0'(= r ) 1'(= r ) } ⊢ 0(<2)◂{ 0'(= r ) 1'(= r ) }
;; rsp=0 , %1496~0(<2)◂{ 0'(= r ) 1'(= r ) } 
; ∎ 0(<2)◂{ 0'(= r ) 1'(= r ) }
; .mov_ptn2 0(<2)◂{ 0'(= r ) 1'(= r ) } ⊢ 2'(= a3◂ [ *{ rr}] )
; .mov_ptn 0(<2)◂{ 0'(= r ) 1'(= r ) } ⊢ 2'(= a3◂ [ *{ rr}] )
	mov rax,[SS_RCD_2_TOP]
	mov rsi,[rax] 
	mov QWORD [SS_RCD_2_TOP],rsi
	mov QWORD [rax],0
	mov r9,rax
	mov rax,r13
	mov rdi,r9
	mov QWORD [rdi+8+8*0],rax
	mov rax,r14
	mov rdi,r9
	mov QWORD [rdi+8+8*1],rax
	mov rax,r9
	mov BYTE [rax+6],0
	mov r8,rax
	jmp LB_1951
LB_1951:
	movzx rax,BYTE [r8+6]
	cmp rax,0
	jnz LB_1950
	pop r14
	pop r9
	add rsp,8
	pop r13
	ret
LB_1950:
	pop rdi
	pop r9 
	pop r14
	pop r13
	ret
ETR_221:
	mov r9,0x0000_ffff_ffff_ffff
	and r9,[r13]
	call GRM_221
	ret
GRM_221:
	sub rsp,32
	mov QWORD [rsp+24],r13
	mov QWORD [rsp+16],r14 
	mov QWORD [rsp+8],r9
	jmp LB_1955
LB_1954:
	add r14,1 
LB_1955:
	cmp r14,r9
	jge LB_1956
	movzx rax,BYTE [r13+8+r14]
	cmp rax,9 
	jz LB_1954
	cmp rax,10 
	jz LB_1954
	cmp rax,32 
	jz LB_1954
LB_1956
	lea rax,[r14+7]
	cmp rax,r9
	jg LB_1959
	jmp LB_1960
LB_1959:
	mov r8,unt_1
	jmp LB_1957
LB_1960:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],194
	jnz LB_1961
	cmp BYTE [rdi+1],167
	jnz LB_1961
	cmp BYTE [rdi+2],194
	jnz LB_1961
	cmp BYTE [rdi+3],167
	jnz LB_1961
	cmp BYTE [rdi+4],43
	jnz LB_1961
	cmp BYTE [rdi+5],115
	jnz LB_1961
	cmp BYTE [rdi+6],56
	jnz LB_1961
	jmp LB_1962
LB_1961:
	mov r8,unt_1
	jmp LB_1957
LB_1962:
	add r14,7
	jmp LB_1958
LB_1957:
	lea rsp,[rsp+8*0]
	jmp LB_1953
LB_1958:
	mov QWORD [rsp+8*0],r14
	mov r13,QWORD [rsp+16+8*0]
	mov r14,QWORD [rsp+8*0]
	jmp LB_1964
LB_1964
;; rsp=0 , %1498~1'(= r ) %1497~0'(= r ) 
; #22 { } ⊢ 0(<2)◂{ }
;; rsp=0 , %1499~0(<2)◂{ } %1498~1'(= r ) %1497~0'(= r ) 
; ∎ 0(<2)◂{ }
; .dlt.ptn 1'(= r )
; .dlt.ptn 0'(= r )
; .mov_ptn2 0(<2)◂{ } ⊢ 2'(= a3◂ [ *{ }] )
; .mov_ptn 0(<2)◂{ } ⊢ 2'(= a3◂ [ *{ }] )
	mov rax,unt 
	mov rax,unt_0
	mov r8,rax
	jmp LB_1963
LB_1963:
	movzx rax,BYTE [r8+6]
	cmp rax,0
	jnz LB_1953
	pop r14
	pop r9
	add rsp,8
	pop r13
	ret
LB_1953:
	jmp LB_1967
LB_1966:
	add r14,1 
LB_1967:
	cmp r14,r9
	jge LB_1968
	movzx rax,BYTE [r13+8+r14]
	cmp rax,9 
	jz LB_1966
	cmp rax,10 
	jz LB_1966
	cmp rax,32 
	jz LB_1966
LB_1968
	lea rax,[r14+4]
	cmp rax,r9
	jg LB_1971
	jmp LB_1972
LB_1971:
	mov r8,unt_1
	jmp LB_1969
LB_1972:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],194
	jnz LB_1973
	cmp BYTE [rdi+1],167
	jnz LB_1973
	cmp BYTE [rdi+2],194
	jnz LB_1973
	cmp BYTE [rdi+3],167
	jnz LB_1973
	jmp LB_1974
LB_1973:
	mov r8,unt_1
	jmp LB_1969
LB_1974:
	add r14,4
	jmp LB_1970
LB_1969:
	lea rsp,[rsp+8*0]
	jmp LB_1965
LB_1970:
	mov QWORD [rsp+8*0],r14
	mov r13,QWORD [rsp+16+8*0]
	mov r14,QWORD [rsp+8*0]
	jmp LB_1976
LB_1976
;; rsp=0 , %1501~1'(= r ) %1500~0'(= r ) 
; #22 { } ⊢ 0(<2)◂{ }
;; rsp=0 , %1502~0(<2)◂{ } %1501~1'(= r ) %1500~0'(= r ) 
; ∎ 0(<2)◂{ }
; .dlt.ptn 1'(= r )
; .dlt.ptn 0'(= r )
; .mov_ptn2 0(<2)◂{ } ⊢ 2'(= a3◂ [ *{ }] )
; .mov_ptn 0(<2)◂{ } ⊢ 2'(= a3◂ [ *{ }] )
	mov rax,unt 
	mov rax,unt_0
	mov r8,rax
	jmp LB_1975
LB_1975:
	movzx rax,BYTE [r8+6]
	cmp rax,0
	jnz LB_1965
	pop r14
	pop r9
	add rsp,8
	pop r13
	ret
LB_1965:
	jmp LB_1979
LB_1978:
	add r14,1 
LB_1979:
	cmp r14,r9
	jge LB_1980
	movzx rax,BYTE [r13+8+r14]
	cmp rax,9 
	jz LB_1978
	cmp rax,10 
	jz LB_1978
	cmp rax,32 
	jz LB_1978
LB_1980
	lea rax,[r14+2]
	cmp rax,r9
	jg LB_1983
	jmp LB_1984
LB_1983:
	mov r8,unt_1
	jmp LB_1981
LB_1984:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],194
	jnz LB_1985
	cmp BYTE [rdi+1],167
	jnz LB_1985
	jmp LB_1986
LB_1985:
	mov r8,unt_1
	jmp LB_1981
LB_1986:
	add r14,2
	jmp LB_1982
LB_1981:
	lea rsp,[rsp+8*0]
	jmp LB_1977
LB_1982:
	mov QWORD [rsp+8*0],r14
	mov r13,QWORD [rsp+16+8*0]
	mov r14,QWORD [rsp+8*0]
	jmp LB_1988
LB_1988
;; rsp=0 , %1504~1'(= r ) %1503~0'(= r ) 
; #22 { } ⊢ 0(<2)◂{ }
;; rsp=0 , %1505~0(<2)◂{ } %1504~1'(= r ) %1503~0'(= r ) 
; ∎ 0(<2)◂{ }
; .dlt.ptn 1'(= r )
; .dlt.ptn 0'(= r )
; .mov_ptn2 0(<2)◂{ } ⊢ 2'(= a3◂ [ *{ }] )
; .mov_ptn 0(<2)◂{ } ⊢ 2'(= a3◂ [ *{ }] )
	mov rax,unt 
	mov rax,unt_0
	mov r8,rax
	jmp LB_1987
LB_1987:
	movzx rax,BYTE [r8+6]
	cmp rax,0
	jnz LB_1977
	pop r14
	pop r9
	add rsp,8
	pop r13
	ret
LB_1977:
	jmp LB_1991
LB_1990:
	add r14,1 
LB_1991:
	cmp r14,r9
	jge LB_1992
	movzx rax,BYTE [r13+8+r14]
	cmp rax,9 
	jz LB_1990
	cmp rax,10 
	jz LB_1990
	cmp rax,32 
	jz LB_1990
LB_1992
	lea rax,[r14+2]
	cmp rax,r9
	jg LB_1995
	jmp LB_1996
LB_1995:
	mov r8,unt_1
	jmp LB_1993
LB_1996:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],194
	jnz LB_1997
	cmp BYTE [rdi+1],182
	jnz LB_1997
	jmp LB_1998
LB_1997:
	mov r8,unt_1
	jmp LB_1993
LB_1998:
	add r14,2
	jmp LB_1994
LB_1993:
	lea rsp,[rsp+8*0]
	jmp LB_1989
LB_1994:
	mov QWORD [rsp+8*0],r14
	mov r13,QWORD [rsp+16+8*0]
	mov r14,QWORD [rsp+8*0]
	jmp LB_2000
LB_2000
;; rsp=0 , %1507~1'(= r ) %1506~0'(= r ) 
; #22 { } ⊢ 0(<2)◂{ }
;; rsp=0 , %1508~0(<2)◂{ } %1507~1'(= r ) %1506~0'(= r ) 
; ∎ 0(<2)◂{ }
; .dlt.ptn 1'(= r )
; .dlt.ptn 0'(= r )
; .mov_ptn2 0(<2)◂{ } ⊢ 2'(= a3◂ [ *{ }] )
; .mov_ptn 0(<2)◂{ } ⊢ 2'(= a3◂ [ *{ }] )
	mov rax,unt 
	mov rax,unt_0
	mov r8,rax
	jmp LB_1999
LB_1999:
	movzx rax,BYTE [r8+6]
	cmp rax,0
	jnz LB_1989
	pop r14
	pop r9
	add rsp,8
	pop r13
	ret
LB_1989:
	jmp LB_2003
LB_2002:
	add r14,1 
LB_2003:
	cmp r14,r9
	jge LB_2004
	movzx rax,BYTE [r13+8+r14]
	cmp rax,9 
	jz LB_2002
	cmp rax,10 
	jz LB_2002
	cmp rax,32 
	jz LB_2002
LB_2004
	lea rax,[r14+6]
	cmp rax,r9
	jg LB_2007
	jmp LB_2008
LB_2007:
	mov r8,unt_1
	jmp LB_2005
LB_2008:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],226
	jnz LB_2009
	cmp BYTE [rdi+1],136
	jnz LB_2009
	cmp BYTE [rdi+2],142
	jnz LB_2009
	cmp BYTE [rdi+3],226
	jnz LB_2009
	cmp BYTE [rdi+4],136
	jnz LB_2009
	cmp BYTE [rdi+5],142
	jnz LB_2009
	jmp LB_2010
LB_2009:
	mov r8,unt_1
	jmp LB_2005
LB_2010:
	add r14,6
	jmp LB_2006
LB_2005:
	lea rsp,[rsp+8*0]
	jmp LB_2001
LB_2006:
	mov QWORD [rsp+8*0],r14
	mov r13,QWORD [rsp+16+8*0]
	mov r14,QWORD [rsp+8*0]
	jmp LB_2012
LB_2012
;; rsp=0 , %1510~1'(= r ) %1509~0'(= r ) 
; #22 { } ⊢ 0(<2)◂{ }
;; rsp=0 , %1511~0(<2)◂{ } %1510~1'(= r ) %1509~0'(= r ) 
; ∎ 0(<2)◂{ }
; .dlt.ptn 1'(= r )
; .dlt.ptn 0'(= r )
; .mov_ptn2 0(<2)◂{ } ⊢ 2'(= a3◂ [ *{ }] )
; .mov_ptn 0(<2)◂{ } ⊢ 2'(= a3◂ [ *{ }] )
	mov rax,unt 
	mov rax,unt_0
	mov r8,rax
	jmp LB_2011
LB_2011:
	movzx rax,BYTE [r8+6]
	cmp rax,0
	jnz LB_2001
	pop r14
	pop r9
	add rsp,8
	pop r13
	ret
LB_2001:
	pop rdi
	pop r9 
	pop r14
	pop r13
	ret
ETR_222:
	mov r9,0x0000_ffff_ffff_ffff
	and r9,[r13]
	call GRM_222
	ret
GRM_222:
	sub rsp,32
	mov QWORD [rsp+24],r13
	mov QWORD [rsp+16],r14 
	mov QWORD [rsp+8],r9
	jmp LB_2015
LB_2014:
	add r14,1 
LB_2015:
	cmp r14,r9
	jge LB_2016
	movzx rax,BYTE [r13+8+r14]
	cmp rax,9 
	jz LB_2014
	cmp rax,10 
	jz LB_2014
	cmp rax,32 
	jz LB_2014
LB_2016
	call GRM_221
	movzx rax,BYTE [r8+6]
	cmp rax,0
	jnz LB_2019
	jmp LB_2020
LB_2019:
	jmp LB_2017
LB_2020:
; .mov_ptn2 2'(= *{ } ) ⊢ { }
; .mov_ptn 2'(= *{ } ) ⊢ { }
	jmp LB_2018
LB_2017:
	lea rsp,[rsp+8*0]
	jmp LB_2013
LB_2018:
	mov QWORD [rsp+8*0],r14
	mov r13,QWORD [rsp+16+8*0]
	mov r14,QWORD [rsp+8*0]
	jmp LB_2022
LB_2022
;; rsp=0 , %1514~1'(= r ) %1513~0'(= r ) %1512~{ } 
; #23 { } ⊢ 1(<2)◂{ }
;; rsp=0 , %1515~1(<2)◂{ } %1514~1'(= r ) %1513~0'(= r ) %1512~{ } 
; ∎ 1(<2)◂{ }
; .dlt.ptn 1'(= r )
; .dlt.ptn 0'(= r )
; .dlt.ptn { }
; .mov_ptn2 1(<2)◂{ } ⊢ 2'(= a3◂ [ *{ }] )
; .mov_ptn 1(<2)◂{ } ⊢ 2'(= a3◂ [ *{ }] )
	mov rax,unt 
	mov rax,unt_1
	mov r8,rax
	jmp LB_2021
LB_2021:
	movzx rax,BYTE [r8+6]
	cmp rax,0
	jnz LB_2013
	pop r14
	pop r9
	add rsp,8
	pop r13
	ret
LB_2013:
	jmp LB_2025
LB_2024:
	add r14,1 
LB_2025:
	cmp r14,r9
	jge LB_2026
	movzx rax,BYTE [r13+8+r14]
	cmp rax,9 
	jz LB_2024
	cmp rax,10 
	jz LB_2024
	cmp rax,32 
	jz LB_2024
LB_2026
	cmp r14,r9
	jge LB_2029
	jmp LB_2030
LB_2029:
	mov r8,unt_1 
	jmp LB_2027
LB_2030:
	movzx rdi,BYTE [r13+8+r14]
	push rdi 
	add r14,1 
	jmp LB_2028
LB_2027:
	lea rsp,[rsp+8*0]
	jmp LB_2023
LB_2028:
	mov QWORD [rsp+8*1],r14
	mov r13,QWORD [rsp+16+8*1]
	mov r14,QWORD [rsp+8*1]
	jmp LB_2032
LB_2032
;; rsp=1 , %1518~1'(= r ) %1517~0'(= r ) %1516~8'(= r ) 
; #22 { } ⊢ 0(<2)◂{ }
;; rsp=1 , %1519~0(<2)◂{ } %1518~1'(= r ) %1517~0'(= r ) %1516~8'(= r ) 
; ∎ 0(<2)◂{ }
; .dlt.ptn 1'(= r )
; .dlt.ptn 0'(= r )
; .dlt.ptn 8'(= r )
; .mov_ptn2 0(<2)◂{ } ⊢ 2'(= a3◂ [ *{ }] )
; .mov_ptn 0(<2)◂{ } ⊢ 2'(= a3◂ [ *{ }] )
	mov rax,unt 
	mov rax,unt_0
	mov r8,rax
	lea rsp,[rsp+8*1]
	jmp LB_2031
LB_2031:
	movzx rax,BYTE [r8+6]
	cmp rax,0
	jnz LB_2023
	pop r14
	pop r9
	add rsp,8
	pop r13
	ret
LB_2023:
	pop rdi
	pop r9 
	pop r14
	pop r13
	ret
ETR_223:
	mov r9,0x0000_ffff_ffff_ffff
	and r9,[r13]
	call GRM_223
	ret
GRM_223:
	sub rsp,32
	mov QWORD [rsp+24],r13
	mov QWORD [rsp+16],r14 
	mov QWORD [rsp+8],r9
	jmp LB_2035
LB_2034:
	add r14,1 
LB_2035:
	cmp r14,r9
	jge LB_2036
	movzx rax,BYTE [r13+8+r14]
	cmp rax,9 
	jz LB_2034
	cmp rax,10 
	jz LB_2034
	cmp rax,32 
	jz LB_2034
LB_2036
	lea rax,[r14+1]
	cmp rax,r9
	jg LB_2039
	jmp LB_2040
LB_2039:
	mov r8,unt_1
	jmp LB_2037
LB_2040:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],64
	jnz LB_2041
	jmp LB_2042
LB_2041:
	mov r8,unt_1
	jmp LB_2037
LB_2042:
	add r14,1
	jmp LB_2038
LB_2037:
	lea rsp,[rsp+8*0]
	jmp LB_2033
LB_2038:
	mov QWORD [rsp+8*0],r14
	mov r13,QWORD [rsp+16+8*0]
	mov r14,QWORD [rsp+8*0]
	jmp LB_2044
LB_2044
;; rsp=0 , %1522~1'(= r ) %1521~0'(= r ) %1520~{ } 
; #23 { } ⊢ 1(<2)◂{ }
;; rsp=0 , %1523~1(<2)◂{ } %1522~1'(= r ) %1521~0'(= r ) %1520~{ } 
; ∎ 1(<2)◂{ }
; .dlt.ptn 1'(= r )
; .dlt.ptn 0'(= r )
; .dlt.ptn { }
; .mov_ptn2 1(<2)◂{ } ⊢ 2'(= a3◂ [ *{ }] )
; .mov_ptn 1(<2)◂{ } ⊢ 2'(= a3◂ [ *{ }] )
	mov rax,unt 
	mov rax,unt_1
	mov r8,rax
	jmp LB_2043
LB_2043:
	movzx rax,BYTE [r8+6]
	cmp rax,0
	jnz LB_2033
	pop r14
	pop r9
	add rsp,8
	pop r13
	ret
LB_2033:
	jmp LB_2047
LB_2046:
	add r14,1 
LB_2047:
	cmp r14,r9
	jge LB_2048
	movzx rax,BYTE [r13+8+r14]
	cmp rax,9 
	jz LB_2046
	cmp rax,10 
	jz LB_2046
	cmp rax,32 
	jz LB_2046
LB_2048
	call GRM_221
	movzx rax,BYTE [r8+6]
	cmp rax,0
	jnz LB_2051
	jmp LB_2052
LB_2051:
	jmp LB_2049
LB_2052:
; .mov_ptn2 2'(= *{ } ) ⊢ { }
; .mov_ptn 2'(= *{ } ) ⊢ { }
	jmp LB_2050
LB_2049:
	lea rsp,[rsp+8*0]
	jmp LB_2045
LB_2050:
	mov QWORD [rsp+8*0],r14
	mov r13,QWORD [rsp+16+8*0]
	mov r14,QWORD [rsp+8*0]
	jmp LB_2054
LB_2054
;; rsp=0 , %1526~1'(= r ) %1525~0'(= r ) %1524~{ } 
; #23 { } ⊢ 1(<2)◂{ }
;; rsp=0 , %1527~1(<2)◂{ } %1526~1'(= r ) %1525~0'(= r ) %1524~{ } 
; ∎ 1(<2)◂{ }
; .dlt.ptn 1'(= r )
; .dlt.ptn 0'(= r )
; .dlt.ptn { }
; .mov_ptn2 1(<2)◂{ } ⊢ 2'(= a3◂ [ *{ }] )
; .mov_ptn 1(<2)◂{ } ⊢ 2'(= a3◂ [ *{ }] )
	mov rax,unt 
	mov rax,unt_1
	mov r8,rax
	jmp LB_2053
LB_2053:
	movzx rax,BYTE [r8+6]
	cmp rax,0
	jnz LB_2045
	pop r14
	pop r9
	add rsp,8
	pop r13
	ret
LB_2045:
	jmp LB_2057
LB_2056:
	add r14,1 
LB_2057:
	cmp r14,r9
	jge LB_2058
	movzx rax,BYTE [r13+8+r14]
	cmp rax,9 
	jz LB_2056
	cmp rax,10 
	jz LB_2056
	cmp rax,32 
	jz LB_2056
LB_2058
	cmp r14,r9
	jge LB_2061
	jmp LB_2062
LB_2061:
	mov r8,unt_1 
	jmp LB_2059
LB_2062:
	movzx rdi,BYTE [r13+8+r14]
	push rdi 
	add r14,1 
	jmp LB_2060
LB_2059:
	lea rsp,[rsp+8*0]
	jmp LB_2055
LB_2060:
	mov QWORD [rsp+8*1],r14
	mov r13,QWORD [rsp+16+8*1]
	mov r14,QWORD [rsp+8*1]
	jmp LB_2064
LB_2064
;; rsp=1 , %1530~1'(= r ) %1529~0'(= r ) %1528~8'(= r ) 
; #22 { } ⊢ 0(<2)◂{ }
;; rsp=1 , %1531~0(<2)◂{ } %1530~1'(= r ) %1529~0'(= r ) %1528~8'(= r ) 
; ∎ 0(<2)◂{ }
; .dlt.ptn 1'(= r )
; .dlt.ptn 0'(= r )
; .dlt.ptn 8'(= r )
; .mov_ptn2 0(<2)◂{ } ⊢ 2'(= a3◂ [ *{ }] )
; .mov_ptn 0(<2)◂{ } ⊢ 2'(= a3◂ [ *{ }] )
	mov rax,unt 
	mov rax,unt_0
	mov r8,rax
	lea rsp,[rsp+8*1]
	jmp LB_2063
LB_2063:
	movzx rax,BYTE [r8+6]
	cmp rax,0
	jnz LB_2055
	pop r14
	pop r9
	add rsp,8
	pop r13
	ret
LB_2055:
	pop rdi
	pop r9 
	pop r14
	pop r13
	ret
ETR_224:
	mov r9,0x0000_ffff_ffff_ffff
	and r9,[r13]
	call GRM_224
	ret
GRM_224:
	sub rsp,32
	mov QWORD [rsp+24],r13
	mov QWORD [rsp+16],r14 
	mov QWORD [rsp+8],r9
	jmp LB_2067
LB_2066:
	add r14,1 
LB_2067:
	cmp r14,r9
	jge LB_2068
	movzx rax,BYTE [r13+8+r14]
	cmp rax,9 
	jz LB_2066
	cmp rax,10 
	jz LB_2066
	cmp rax,32 
	jz LB_2066
LB_2068
	call GRM_223
	movzx rax,BYTE [r8+6]
	cmp rax,0
	jnz LB_2071
	jmp LB_2072
LB_2071:
	jmp LB_2069
LB_2072:
; .mov_ptn2 2'(= *{ } ) ⊢ { }
; .mov_ptn 2'(= *{ } ) ⊢ { }
	jmp LB_2070
LB_2069:
	lea rsp,[rsp+8*0]
	jmp LB_2065
LB_2070:
	jmp LB_2074
LB_2073:
	add r14,1 
LB_2074:
	cmp r14,r9
	jge LB_2075
	movzx rax,BYTE [r13+8+r14]
	cmp rax,9 
	jz LB_2073
	cmp rax,10 
	jz LB_2073
	cmp rax,32 
	jz LB_2073
LB_2075
	call GRM_224
	movzx rax,BYTE [r8+6]
	cmp rax,0
	jnz LB_2078
	jmp LB_2079
LB_2078:
	jmp LB_2076
LB_2079:
; .mov_ptn2 2'(= *{ } ) ⊢ { }
; .mov_ptn 2'(= *{ } ) ⊢ { }
	jmp LB_2077
LB_2076:
	lea rsp,[rsp+8*0]
	jmp LB_2065
LB_2077:
	mov QWORD [rsp+8*0],r14
	mov r13,QWORD [rsp+16+8*0]
	mov r14,QWORD [rsp+8*0]
	jmp LB_2081
LB_2081
;; rsp=0 , %1535~1'(= r ) %1534~0'(= r ) %1533~{ } %1532~{ } 
; #22 { } ⊢ 0(<2)◂{ }
;; rsp=0 , %1536~0(<2)◂{ } %1535~1'(= r ) %1534~0'(= r ) %1533~{ } %1532~{ } 
; ∎ 0(<2)◂{ }
; .dlt.ptn 1'(= r )
; .dlt.ptn 0'(= r )
; .dlt.ptn { }
; .dlt.ptn { }
; .mov_ptn2 0(<2)◂{ } ⊢ 2'(= a3◂ [ *{ }] )
; .mov_ptn 0(<2)◂{ } ⊢ 2'(= a3◂ [ *{ }] )
	mov rax,unt 
	mov rax,unt_0
	mov r8,rax
	jmp LB_2080
LB_2080:
	movzx rax,BYTE [r8+6]
	cmp rax,0
	jnz LB_2065
	pop r14
	pop r9
	add rsp,8
	pop r13
	ret
LB_2065:
	mov QWORD [rsp+8*0],r14
	mov r13,QWORD [rsp+16+8*0]
	mov r14,QWORD [rsp+8*0]
	jmp LB_2084
LB_2084
;; rsp=0 , %1538~1'(= r ) %1537~0'(= r ) 
; #22 { } ⊢ 0(<2)◂{ }
;; rsp=0 , %1539~0(<2)◂{ } %1538~1'(= r ) %1537~0'(= r ) 
; ∎ 0(<2)◂{ }
; .dlt.ptn 1'(= r )
; .dlt.ptn 0'(= r )
; .mov_ptn2 0(<2)◂{ } ⊢ 2'(= a3◂ [ *{ }] )
; .mov_ptn 0(<2)◂{ } ⊢ 2'(= a3◂ [ *{ }] )
	mov rax,unt 
	mov rax,unt_0
	mov r8,rax
	jmp LB_2083
LB_2083:
	movzx rax,BYTE [r8+6]
	cmp rax,0
	jnz LB_2082
	pop r14
	pop r9
	add rsp,8
	pop r13
	ret
LB_2082:
	pop rdi
	pop r9 
	pop r14
	pop r13
	ret
ETR_225:
	mov r9,0x0000_ffff_ffff_ffff
	and r9,[r13]
	call GRM_225
	ret
GRM_225:
	sub rsp,32
	mov QWORD [rsp+24],r13
	mov QWORD [rsp+16],r14 
	mov QWORD [rsp+8],r9
	jmp LB_2087
LB_2086:
	add r14,1 
LB_2087:
	cmp r14,r9
	jge LB_2088
	movzx rax,BYTE [r13+8+r14]
	cmp rax,9 
	jz LB_2086
	cmp rax,32 
	jz LB_2086
LB_2088
	lea rax,[r14+1]
	cmp rax,r9
	jg LB_2091
	jmp LB_2092
LB_2091:
	mov r8,unt_1
	jmp LB_2089
LB_2092:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],10
	jnz LB_2093
	jmp LB_2094
LB_2093:
	mov r8,unt_1
	jmp LB_2089
LB_2094:
	add r14,1
	jmp LB_2090
LB_2089:
	lea rsp,[rsp+8*0]
	jmp LB_2085
LB_2090:
	mov QWORD [rsp+8*0],r14
	mov r13,QWORD [rsp+16+8*0]
	mov r14,QWORD [rsp+8*0]
	jmp LB_2096
LB_2096
;; rsp=0 , %1542~1'(= r ) %1541~0'(= r ) %1540~{ } 
; #22 { } ⊢ 0(<2)◂{ }
;; rsp=0 , %1543~0(<2)◂{ } %1542~1'(= r ) %1541~0'(= r ) %1540~{ } 
; ∎ 0(<2)◂{ }
; .dlt.ptn 1'(= r )
; .dlt.ptn 0'(= r )
; .dlt.ptn { }
; .mov_ptn2 0(<2)◂{ } ⊢ 2'(= a3◂ [ *{ }] )
; .mov_ptn 0(<2)◂{ } ⊢ 2'(= a3◂ [ *{ }] )
	mov rax,unt 
	mov rax,unt_0
	mov r8,rax
	jmp LB_2095
LB_2095:
	movzx rax,BYTE [r8+6]
	cmp rax,0
	jnz LB_2085
	pop r14
	pop r9
	add rsp,8
	pop r13
	ret
LB_2085:
	jmp LB_2099
LB_2098:
	add r14,1 
LB_2099:
	cmp r14,r9
	jge LB_2100
	movzx rax,BYTE [r13+8+r14]
	cmp rax,9 
	jz LB_2098
	cmp rax,32 
	jz LB_2098
LB_2100
	call GRM_221
	movzx rax,BYTE [r8+6]
	cmp rax,0
	jnz LB_2103
	jmp LB_2104
LB_2103:
	jmp LB_2101
LB_2104:
; .mov_ptn2 2'(= *{ } ) ⊢ { }
; .mov_ptn 2'(= *{ } ) ⊢ { }
	jmp LB_2102
LB_2101:
	lea rsp,[rsp+8*0]
	jmp LB_2097
LB_2102:
	mov QWORD [rsp+8*0],r14
	mov r13,QWORD [rsp+16+8*0]
	mov r14,QWORD [rsp+8*0]
	jmp LB_2106
LB_2106
;; rsp=0 , %1546~1'(= r ) %1545~0'(= r ) %1544~{ } 
; #23 { } ⊢ 1(<2)◂{ }
;; rsp=0 , %1547~1(<2)◂{ } %1546~1'(= r ) %1545~0'(= r ) %1544~{ } 
; ∎ 1(<2)◂{ }
; .dlt.ptn 1'(= r )
; .dlt.ptn 0'(= r )
; .dlt.ptn { }
; .mov_ptn2 1(<2)◂{ } ⊢ 2'(= a3◂ [ *{ }] )
; .mov_ptn 1(<2)◂{ } ⊢ 2'(= a3◂ [ *{ }] )
	mov rax,unt 
	mov rax,unt_1
	mov r8,rax
	jmp LB_2105
LB_2105:
	movzx rax,BYTE [r8+6]
	cmp rax,0
	jnz LB_2097
	pop r14
	pop r9
	add rsp,8
	pop r13
	ret
LB_2097:
	jmp LB_2109
LB_2108:
	add r14,1 
LB_2109:
	cmp r14,r9
	jge LB_2110
	movzx rax,BYTE [r13+8+r14]
	cmp rax,9 
	jz LB_2108
	cmp rax,32 
	jz LB_2108
LB_2110
	lea rax,[r14+1]
	cmp rax,r9
	jg LB_2113
	jmp LB_2114
LB_2113:
	mov r8,unt_1
	jmp LB_2111
LB_2114:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],64
	jnz LB_2115
	jmp LB_2116
LB_2115:
	mov r8,unt_1
	jmp LB_2111
LB_2116:
	add r14,1
	jmp LB_2112
LB_2111:
	lea rsp,[rsp+8*0]
	jmp LB_2107
LB_2112:
	mov QWORD [rsp+8*0],r14
	mov r13,QWORD [rsp+16+8*0]
	mov r14,QWORD [rsp+8*0]
	jmp LB_2118
LB_2118
;; rsp=0 , %1550~1'(= r ) %1549~0'(= r ) %1548~{ } 
; #23 { } ⊢ 1(<2)◂{ }
;; rsp=0 , %1551~1(<2)◂{ } %1550~1'(= r ) %1549~0'(= r ) %1548~{ } 
; ∎ 1(<2)◂{ }
; .dlt.ptn 1'(= r )
; .dlt.ptn 0'(= r )
; .dlt.ptn { }
; .mov_ptn2 1(<2)◂{ } ⊢ 2'(= a3◂ [ *{ }] )
; .mov_ptn 1(<2)◂{ } ⊢ 2'(= a3◂ [ *{ }] )
	mov rax,unt 
	mov rax,unt_1
	mov r8,rax
	jmp LB_2117
LB_2117:
	movzx rax,BYTE [r8+6]
	cmp rax,0
	jnz LB_2107
	pop r14
	pop r9
	add rsp,8
	pop r13
	ret
LB_2107:
	jmp LB_2121
LB_2120:
	add r14,1 
LB_2121:
	cmp r14,r9
	jge LB_2122
	movzx rax,BYTE [r13+8+r14]
	cmp rax,9 
	jz LB_2120
	cmp rax,32 
	jz LB_2120
LB_2122
	cmp r14,r9
	jge LB_2125
	jmp LB_2126
LB_2125:
	mov r8,unt_1 
	jmp LB_2123
LB_2126:
	movzx rdi,BYTE [r13+8+r14]
	push rdi 
	add r14,1 
	jmp LB_2124
LB_2123:
	lea rsp,[rsp+8*0]
	jmp LB_2119
LB_2124:
	jmp LB_2128
LB_2127:
	add r14,1 
LB_2128:
	cmp r14,r9
	jge LB_2129
	movzx rax,BYTE [r13+8+r14]
	cmp rax,9 
	jz LB_2127
	cmp rax,32 
	jz LB_2127
LB_2129
	call GRM_225
	movzx rax,BYTE [r8+6]
	cmp rax,0
	jnz LB_2132
	jmp LB_2133
LB_2132:
	jmp LB_2130
LB_2133:
; .mov_ptn2 2'(= *{ } ) ⊢ { }
; .mov_ptn 2'(= *{ } ) ⊢ { }
	jmp LB_2131
LB_2130:
	lea rsp,[rsp+8*1]
	jmp LB_2119
LB_2131:
	mov QWORD [rsp+8*1],r14
	mov r13,QWORD [rsp+16+8*1]
	mov r14,QWORD [rsp+8*1]
	jmp LB_2135
LB_2135
;; rsp=1 , %1555~1'(= r ) %1554~0'(= r ) %1553~{ } %1552~8'(= r ) 
; #22 { } ⊢ 0(<2)◂{ }
;; rsp=1 , %1556~0(<2)◂{ } %1555~1'(= r ) %1554~0'(= r ) %1553~{ } %1552~8'(= r ) 
; ∎ 0(<2)◂{ }
; .dlt.ptn 1'(= r )
; .dlt.ptn 0'(= r )
; .dlt.ptn { }
; .dlt.ptn 8'(= r )
; .mov_ptn2 0(<2)◂{ } ⊢ 2'(= a3◂ [ *{ }] )
; .mov_ptn 0(<2)◂{ } ⊢ 2'(= a3◂ [ *{ }] )
	mov rax,unt 
	mov rax,unt_0
	mov r8,rax
	lea rsp,[rsp+8*1]
	jmp LB_2134
LB_2134:
	movzx rax,BYTE [r8+6]
	cmp rax,0
	jnz LB_2119
	pop r14
	pop r9
	add rsp,8
	pop r13
	ret
LB_2119:
	jmp LB_2138
LB_2137:
	add r14,1 
LB_2138:
	cmp r14,r9
	jge LB_2139
	movzx rax,BYTE [r13+8+r14]
	cmp rax,9 
	jz LB_2137
	cmp rax,32 
	jz LB_2137
LB_2139
	cmp r14,r9
	jge LB_2142
	jmp LB_2143
LB_2142:
	mov r8,unt_1 
	jmp LB_2140
LB_2143:
	movzx rdi,BYTE [r13+8+r14]
	push rdi 
	add r14,1 
	jmp LB_2141
LB_2140:
	lea rsp,[rsp+8*0]
	jmp LB_2136
LB_2141:
	mov QWORD [rsp+8*1],r14
	mov r13,QWORD [rsp+16+8*1]
	mov r14,QWORD [rsp+8*1]
	jmp LB_2145
LB_2145
;; rsp=1 , %1559~1'(= r ) %1558~0'(= r ) %1557~8'(= r ) 
; #22 { } ⊢ 0(<2)◂{ }
;; rsp=1 , %1560~0(<2)◂{ } %1559~1'(= r ) %1558~0'(= r ) %1557~8'(= r ) 
; ∎ 0(<2)◂{ }
; .dlt.ptn 1'(= r )
; .dlt.ptn 0'(= r )
; .dlt.ptn 8'(= r )
; .mov_ptn2 0(<2)◂{ } ⊢ 2'(= a3◂ [ *{ }] )
; .mov_ptn 0(<2)◂{ } ⊢ 2'(= a3◂ [ *{ }] )
	mov rax,unt 
	mov rax,unt_0
	mov r8,rax
	lea rsp,[rsp+8*1]
	jmp LB_2144
LB_2144:
	movzx rax,BYTE [r8+6]
	cmp rax,0
	jnz LB_2136
	pop r14
	pop r9
	add rsp,8
	pop r13
	ret
LB_2136:
	mov QWORD [rsp+8*0],r14
	mov r13,QWORD [rsp+16+8*0]
	mov r14,QWORD [rsp+8*0]
	jmp LB_2148
LB_2148
;; rsp=0 , %1562~1'(= r ) %1561~0'(= r ) 
; #22 { } ⊢ 0(<2)◂{ }
;; rsp=0 , %1563~0(<2)◂{ } %1562~1'(= r ) %1561~0'(= r ) 
; ∎ 0(<2)◂{ }
; .dlt.ptn 1'(= r )
; .dlt.ptn 0'(= r )
; .mov_ptn2 0(<2)◂{ } ⊢ 2'(= a3◂ [ *{ }] )
; .mov_ptn 0(<2)◂{ } ⊢ 2'(= a3◂ [ *{ }] )
	mov rax,unt 
	mov rax,unt_0
	mov r8,rax
	jmp LB_2147
LB_2147:
	movzx rax,BYTE [r8+6]
	cmp rax,0
	jnz LB_2146
	pop r14
	pop r9
	add rsp,8
	pop r13
	ret
LB_2146:
	pop rdi
	pop r9 
	pop r14
	pop r13
	ret
ETR_226:
	mov r9,0x0000_ffff_ffff_ffff
	and r9,[r13]
	call GRM_226
	ret
GRM_226:
	sub rsp,32
	mov QWORD [rsp+24],r13
	mov QWORD [rsp+16],r14 
	mov QWORD [rsp+8],r9
	jmp LB_2151
LB_2150:
	add r14,1 
LB_2151:
	cmp r14,r9
	jge LB_2152
	movzx rax,BYTE [r13+8+r14]
	cmp rax,9 
	jz LB_2150
	cmp rax,10 
	jz LB_2150
	cmp rax,32 
	jz LB_2150
LB_2152
	call GRM_227
	movzx rax,BYTE [r8+6]
	cmp rax,0
	jnz LB_2155
	jmp LB_2156
LB_2155:
	jmp LB_2153
LB_2156:
	lea rsp,[rsp-8*1]
	mov r8,[r8+8]
; .mov_ptn2 2'(= r ) ⊢ 8'(= r )
; .mov_ptn 2'(= r ) ⊢ 8'(= r )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_2154
LB_2153:
	lea rsp,[rsp+8*0]
	jmp LB_2149
LB_2154:
	jmp LB_2158
LB_2157:
	add r14,1 
LB_2158:
	cmp r14,r9
	jge LB_2159
	movzx rax,BYTE [r13+8+r14]
	cmp rax,9 
	jz LB_2157
	cmp rax,10 
	jz LB_2157
	cmp rax,32 
	jz LB_2157
LB_2159
	lea rax,[r14+1]
	cmp rax,r9
	jg LB_2162
	jmp LB_2163
LB_2162:
	mov r8,unt_1
	jmp LB_2160
LB_2163:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],42
	jnz LB_2164
	jmp LB_2165
LB_2164:
	mov r8,unt_1
	jmp LB_2160
LB_2165:
	add r14,1
	jmp LB_2161
LB_2160:
	lea rsp,[rsp+8*1]
	jmp LB_2149
LB_2161:
	jmp LB_2167
LB_2166:
	add r14,1 
LB_2167:
	cmp r14,r9
	jge LB_2168
	movzx rax,BYTE [r13+8+r14]
	cmp rax,9 
	jz LB_2166
	cmp rax,10 
	jz LB_2166
	cmp rax,32 
	jz LB_2166
LB_2168
	call GRM_67
	movzx rax,BYTE [r8+6]
	cmp rax,0
	jnz LB_2171
	jmp LB_2172
LB_2171:
	jmp LB_2169
LB_2172:
	lea rsp,[rsp-8*1]
; .mov_ptn2 2'(= {| l |} ) ⊢ 9'(= {| l |} )
; .mov_ptn 2'(= {| l |} ) ⊢ 9'(= {| l |} )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_2170
LB_2169:
	lea rsp,[rsp+8*1]
	pop rdi
	pop r9 
	pop r14
	pop r13
	ret
LB_2170:
	mov QWORD [rsp+8*2],r14
	mov r13,QWORD [rsp+16+8*2]
	mov r14,QWORD [rsp+8*2]
	jmp LB_2174
LB_2174
;; rsp=2 , %1567~1'(= r ) %1566~0'(= r ) %1565~9'(= {| l |} ) %1564~8'(= r ) 
; #107 { 8'(= r ) 9'(= {| l |} ) } ⊢ 3(<4)◂{ 8'(= r ) 9'(= {| l |} ) }
;; rsp=2 , %1568~3(<4)◂{ 8'(= r ) 9'(= {| l |} ) } %1567~1'(= r ) %1566~0'(= r ) 
; #22 3(<4)◂{ 8'(= r ) 9'(= {| l |} ) } ⊢ 0(<2)◂3(<4)◂{ 8'(= r ) 9'(= {| l |} ) }
;; rsp=2 , %1569~0(<2)◂3(<4)◂{ 8'(= r ) 9'(= {| l |} ) } %1567~1'(= r ) %1566~0'(= r ) 
; ∎ 0(<2)◂3(<4)◂{ 8'(= r ) 9'(= {| l |} ) }
; .dlt.ptn 1'(= r )
; .dlt.ptn 0'(= r )
; .mov_ptn2 0(<2)◂3(<4)◂{ 8'(= r ) 9'(= {| l |} ) } ⊢ 2'(= a3◂ [ a16◂ [ a9◂ [ ]]] )
; .mov_ptn 0(<2)◂3(<4)◂{ 8'(= r ) 9'(= {| l |} ) } ⊢ 2'(= a3◂ [ a16◂ [ a9◂ [ ]]] )
	mov rax,[SS_RCD_2_TOP]
	mov rsi,[rax] 
	mov QWORD [SS_RCD_2_TOP],rsi
	mov QWORD [rax],0
	mov r13,rax
	mov rax,QWORD [rsp-8+8*2]
	mov rdi,r13
	mov QWORD [rdi+8+8*0],rax
	mov rax,QWORD [rsp-8+8*1]
	mov rdi,r13
	mov QWORD [rdi+8+8*1],rax
	mov rax,r13
	mov BYTE [rax+6],3
	mov rdi,rax
	mov rax,[SS_LN_TOP]
	mov rsi,[rax]
	mov QWORD [SS_LN_TOP],rsi 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	lea rsp,[rsp+8*2]
	jmp LB_2173
LB_2173:
	movzx rax,BYTE [r8+6]
	cmp rax,0
	jnz LB_2149
	pop r14
	pop r9
	add rsp,8
	pop r13
	ret
LB_2149:
	jmp LB_2177
LB_2176:
	add r14,1 
LB_2177:
	cmp r14,r9
	jge LB_2178
	movzx rax,BYTE [r13+8+r14]
	cmp rax,9 
	jz LB_2176
	cmp rax,10 
	jz LB_2176
	cmp rax,32 
	jz LB_2176
LB_2178
	call GRM_229
	movzx rax,BYTE [r8+6]
	cmp rax,0
	jnz LB_2181
	jmp LB_2182
LB_2181:
	jmp LB_2179
LB_2182:
	lea rsp,[rsp-8*1]
; .mov_ptn2 2'(= {| l |} ) ⊢ 8'(= {| l |} )
; .mov_ptn 2'(= {| l |} ) ⊢ 8'(= {| l |} )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_2180
LB_2179:
	lea rsp,[rsp+8*0]
	jmp LB_2175
LB_2180:
	mov QWORD [rsp+8*1],r14
	mov r13,QWORD [rsp+16+8*1]
	mov r14,QWORD [rsp+8*1]
	jmp LB_2184
LB_2184
;; rsp=1 , %1572~1'(= r ) %1571~0'(= r ) %1570~8'(= {| l |} ) 
; #110 8'(= {| l |} ) ⊢ 0(<4)◂8'(= {| l |} )
;; rsp=1 , %1573~0(<4)◂8'(= {| l |} ) %1572~1'(= r ) %1571~0'(= r ) 
; #22 0(<4)◂8'(= {| l |} ) ⊢ 0(<2)◂0(<4)◂8'(= {| l |} )
;; rsp=1 , %1574~0(<2)◂0(<4)◂8'(= {| l |} ) %1572~1'(= r ) %1571~0'(= r ) 
; ∎ 0(<2)◂0(<4)◂8'(= {| l |} )
; .dlt.ptn 1'(= r )
; .dlt.ptn 0'(= r )
; .mov_ptn2 0(<2)◂0(<4)◂8'(= {| l |} ) ⊢ 2'(= a3◂ [ a16◂ [ a9◂ [ ]]] )
; .mov_ptn 0(<2)◂0(<4)◂8'(= {| l |} ) ⊢ 2'(= a3◂ [ a16◂ [ a9◂ [ ]]] )
	mov rax,QWORD [rsp-8+8*1]
	mov BYTE [rax+6],0
	mov rdi,rax
	mov rax,[SS_LN_TOP]
	mov rsi,[rax]
	mov QWORD [SS_LN_TOP],rsi 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	lea rsp,[rsp+8*1]
	jmp LB_2183
LB_2183:
	movzx rax,BYTE [r8+6]
	cmp rax,0
	jnz LB_2175
	pop r14
	pop r9
	add rsp,8
	pop r13
	ret
LB_2175:
	jmp LB_2187
LB_2186:
	add r14,1 
LB_2187:
	cmp r14,r9
	jge LB_2188
	movzx rax,BYTE [r13+8+r14]
	cmp rax,9 
	jz LB_2186
	cmp rax,10 
	jz LB_2186
	cmp rax,32 
	jz LB_2186
LB_2188
	call GRM_67
	movzx rax,BYTE [r8+6]
	cmp rax,0
	jnz LB_2191
	jmp LB_2192
LB_2191:
	jmp LB_2189
LB_2192:
	lea rsp,[rsp-8*1]
; .mov_ptn2 2'(= {| l |} ) ⊢ 8'(= {| l |} )
; .mov_ptn 2'(= {| l |} ) ⊢ 8'(= {| l |} )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_2190
LB_2189:
	lea rsp,[rsp+8*0]
	jmp LB_2185
LB_2190:
	mov QWORD [rsp+8*1],r14
	mov r13,QWORD [rsp+16+8*1]
	mov r14,QWORD [rsp+8*1]
	jmp LB_2194
LB_2194
;; rsp=1 , %1577~1'(= r ) %1576~0'(= r ) %1575~8'(= {| l |} ) 
; #110 8'(= {| l |} ) ⊢ 0(<4)◂8'(= {| l |} )
;; rsp=1 , %1578~0(<4)◂8'(= {| l |} ) %1577~1'(= r ) %1576~0'(= r ) 
; #22 0(<4)◂8'(= {| l |} ) ⊢ 0(<2)◂0(<4)◂8'(= {| l |} )
;; rsp=1 , %1579~0(<2)◂0(<4)◂8'(= {| l |} ) %1577~1'(= r ) %1576~0'(= r ) 
; ∎ 0(<2)◂0(<4)◂8'(= {| l |} )
; .dlt.ptn 1'(= r )
; .dlt.ptn 0'(= r )
; .mov_ptn2 0(<2)◂0(<4)◂8'(= {| l |} ) ⊢ 2'(= a3◂ [ a16◂ [ a9◂ [ ]]] )
; .mov_ptn 0(<2)◂0(<4)◂8'(= {| l |} ) ⊢ 2'(= a3◂ [ a16◂ [ a9◂ [ ]]] )
	mov rax,QWORD [rsp-8+8*1]
	mov BYTE [rax+6],0
	mov rdi,rax
	mov rax,[SS_LN_TOP]
	mov rsi,[rax]
	mov QWORD [SS_LN_TOP],rsi 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	lea rsp,[rsp+8*1]
	jmp LB_2193
LB_2193:
	movzx rax,BYTE [r8+6]
	cmp rax,0
	jnz LB_2185
	pop r14
	pop r9
	add rsp,8
	pop r13
	ret
LB_2185:
	jmp LB_2197
LB_2196:
	add r14,1 
LB_2197:
	cmp r14,r9
	jge LB_2198
	movzx rax,BYTE [r13+8+r14]
	cmp rax,9 
	jz LB_2196
	cmp rax,10 
	jz LB_2196
	cmp rax,32 
	jz LB_2196
LB_2198
	call GRM_189
	movzx rax,BYTE [r8+6]
	cmp rax,0
	jnz LB_2201
	jmp LB_2202
LB_2201:
	jmp LB_2199
LB_2202:
	lea rsp,[rsp-8*1]
	mov r8,[r8+8]
; .mov_ptn2 2'(= a9◂ [ ] ) ⊢ 8'(= a9◂ [ ] )
; .mov_ptn 2'(= a9◂ [ ] ) ⊢ 8'(= a9◂ [ ] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_2200
LB_2199:
	lea rsp,[rsp+8*0]
	jmp LB_2195
LB_2200:
	mov QWORD [rsp+8*1],r14
	mov r13,QWORD [rsp+16+8*1]
	mov r14,QWORD [rsp+8*1]
	jmp LB_2204
LB_2204
;; rsp=1 , %1582~1'(= r ) %1581~0'(= r ) %1580~8'(= a9◂ [ ] ) 
; #85 8'(= a9◂ [ ] ) ⊢ 1(<2)◂8'(= a9◂ [ ] )
;; rsp=1 , %1583~1(<2)◂8'(= a9◂ [ ] ) %1582~1'(= r ) %1581~0'(= r ) 
; #109 1(<2)◂8'(= a9◂ [ ] ) ⊢ 1(<4)◂1(<2)◂8'(= a9◂ [ ] )
;; rsp=1 , %1584~1(<4)◂1(<2)◂8'(= a9◂ [ ] ) %1582~1'(= r ) %1581~0'(= r ) 
; #22 1(<4)◂1(<2)◂8'(= a9◂ [ ] ) ⊢ 0(<2)◂1(<4)◂1(<2)◂8'(= a9◂ [ ] )
;; rsp=1 , %1585~0(<2)◂1(<4)◂1(<2)◂8'(= a9◂ [ ] ) %1582~1'(= r ) %1581~0'(= r ) 
; ∎ 0(<2)◂1(<4)◂1(<2)◂8'(= a9◂ [ ] )
; .dlt.ptn 1'(= r )
; .dlt.ptn 0'(= r )
; .mov_ptn2 0(<2)◂1(<4)◂1(<2)◂8'(= a9◂ [ ] ) ⊢ 2'(= a3◂ [ a16◂ [ a9◂ [ ]]] )
; .mov_ptn 0(<2)◂1(<4)◂1(<2)◂8'(= a9◂ [ ] ) ⊢ 2'(= a3◂ [ a16◂ [ a9◂ [ ]]] )
	mov rax,QWORD [rsp-8+8*1]
	mov rdi,rax
	mov rax,[SS_LN_TOP]
	mov rsi,[rax]
	mov QWORD [SS_LN_TOP],rsi 
	mov QWORD [rax],0
	mov BYTE [rax+6],1
	mov QWORD [rax+8],rdi
	mov rdi,rax
	mov rax,[SS_LN_TOP]
	mov rsi,[rax]
	mov QWORD [SS_LN_TOP],rsi 
	mov QWORD [rax],0
	mov BYTE [rax+6],1
	mov QWORD [rax+8],rdi
	mov rdi,rax
	mov rax,[SS_LN_TOP]
	mov rsi,[rax]
	mov QWORD [SS_LN_TOP],rsi 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	lea rsp,[rsp+8*1]
	jmp LB_2203
LB_2203:
	movzx rax,BYTE [r8+6]
	cmp rax,0
	jnz LB_2195
	pop r14
	pop r9
	add rsp,8
	pop r13
	ret
LB_2195:
	jmp LB_2207
LB_2206:
	add r14,1 
LB_2207:
	cmp r14,r9
	jge LB_2208
	movzx rax,BYTE [r13+8+r14]
	cmp rax,9 
	jz LB_2206
	cmp rax,10 
	jz LB_2206
	cmp rax,32 
	jz LB_2206
LB_2208
	call GRM_228
	movzx rax,BYTE [r8+6]
	cmp rax,0
	jnz LB_2211
	jmp LB_2212
LB_2211:
	jmp LB_2209
LB_2212:
	lea rsp,[rsp-8*2]
; .mov_ptn2 2'(= *{ a15◂ [ ]r} ) ⊢ { 8'(= a15◂ [ ] ) 9'(= r ) }
; .mov_ptn 2'(= *{ a15◂ [ ]r} ) ⊢ { 8'(= a15◂ [ ] ) 9'(= r ) }
	mov rdi,r8
	mov rdi,QWORD [rdi+8+8*0]
	mov r10,rdi
	mov QWORD [rsp-8+8*2],r10
	mov rdi,r8
	mov rdi,QWORD [rdi+8+8*1]
	mov r11,rdi
	mov QWORD [rsp-8+8*1],r11
	jmp LB_2210
LB_2209:
	lea rsp,[rsp+8*0]
	jmp LB_2205
LB_2210:
	mov QWORD [rsp+8*2],r14
	mov r13,QWORD [rsp+16+8*2]
	mov r14,QWORD [rsp+8*2]
	jmp LB_2214
LB_2214
;; rsp=2 , %1588~1'(= r ) %1587~0'(= r ) %1586~{ 8'(= a15◂ [ ] ) 9'(= r ) } 
; #108 { 8'(= a15◂ [ ] ) 9'(= r ) } ⊢ 2(<4)◂{ 8'(= a15◂ [ ] ) 9'(= r ) }
;; rsp=2 , %1589~2(<4)◂{ 8'(= a15◂ [ ] ) 9'(= r ) } %1588~1'(= r ) %1587~0'(= r ) 
; #22 2(<4)◂{ 8'(= a15◂ [ ] ) 9'(= r ) } ⊢ 0(<2)◂2(<4)◂{ 8'(= a15◂ [ ] ) 9'(= r ) }
;; rsp=2 , %1590~0(<2)◂2(<4)◂{ 8'(= a15◂ [ ] ) 9'(= r ) } %1588~1'(= r ) %1587~0'(= r ) 
; ∎ 0(<2)◂2(<4)◂{ 8'(= a15◂ [ ] ) 9'(= r ) }
; .dlt.ptn 1'(= r )
; .dlt.ptn 0'(= r )
; .mov_ptn2 0(<2)◂2(<4)◂{ 8'(= a15◂ [ ] ) 9'(= r ) } ⊢ 2'(= a3◂ [ a16◂ [ a9◂ [ ]]] )
; .mov_ptn 0(<2)◂2(<4)◂{ 8'(= a15◂ [ ] ) 9'(= r ) } ⊢ 2'(= a3◂ [ a16◂ [ a9◂ [ ]]] )
	mov rax,[SS_RCD_2_TOP]
	mov rsi,[rax] 
	mov QWORD [SS_RCD_2_TOP],rsi
	mov QWORD [rax],0
	mov r13,rax
	mov rax,QWORD [rsp-8+8*2]
	mov rdi,r13
	mov QWORD [rdi+8+8*0],rax
	mov rax,QWORD [rsp-8+8*1]
	mov rdi,r13
	mov QWORD [rdi+8+8*1],rax
	mov rax,r13
	mov BYTE [rax+6],2
	mov rdi,rax
	mov rax,[SS_LN_TOP]
	mov rsi,[rax]
	mov QWORD [SS_LN_TOP],rsi 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	lea rsp,[rsp+8*2]
	jmp LB_2213
LB_2213:
	movzx rax,BYTE [r8+6]
	cmp rax,0
	jnz LB_2205
	pop r14
	pop r9
	add rsp,8
	pop r13
	ret
LB_2205:
	pop rdi
	pop r9 
	pop r14
	pop r13
	ret
ETR_227:
	mov r9,0x0000_ffff_ffff_ffff
	and r9,[r13]
	call GRM_227
	ret
GRM_227:
	sub rsp,32
	mov QWORD [rsp+24],r13
	mov QWORD [rsp+16],r14 
	mov QWORD [rsp+8],r9
	cmp r14,r9
	jge LB_2218
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
 lea rdi,[r13+8+r14] 
	call scf_d
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	cmp rax,0 
	jz LB_2218
	add r14,rsi
	push rdi
	jmp LB_2219
LB_2218:
	mov r8,unt_1
	jmp LB_2216
LB_2219:
	jmp LB_2217
LB_2216:
	lea rsp,[rsp+8*0]
	jmp LB_2215
LB_2217:
	lea rax,[r14+1]
	cmp rax,r9
	jg LB_2222
	jmp LB_2223
LB_2222:
	mov r8,unt_1
	jmp LB_2220
LB_2223:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],39
	jnz LB_2224
	jmp LB_2225
LB_2224:
	mov r8,unt_1
	jmp LB_2220
LB_2225:
	add r14,1
	jmp LB_2221
LB_2220:
	lea rsp,[rsp+8*1]
	jmp LB_2215
LB_2221:
	mov QWORD [rsp+8*1],r14
	mov r13,QWORD [rsp+16+8*1]
	mov r14,QWORD [rsp+8*1]
	jmp LB_2227
LB_2227
;; rsp=1 , %1593~1'(= r ) %1592~0'(= r ) %1591~8'(= r ) 
; #22 8'(= r ) ⊢ 0(<2)◂8'(= r )
;; rsp=1 , %1594~0(<2)◂8'(= r ) %1593~1'(= r ) %1592~0'(= r ) 
; ∎ 0(<2)◂8'(= r )
; .dlt.ptn 1'(= r )
; .dlt.ptn 0'(= r )
; .mov_ptn2 0(<2)◂8'(= r ) ⊢ 2'(= a3◂ [ r] )
; .mov_ptn 0(<2)◂8'(= r ) ⊢ 2'(= a3◂ [ r] )
	mov rax,QWORD [rsp-8+8*1]
	mov rdi,rax
	mov rax,[SS_LN_TOP]
	mov rsi,[rax]
	mov QWORD [SS_LN_TOP],rsi 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	lea rsp,[rsp+8*1]
	jmp LB_2226
LB_2226:
	movzx rax,BYTE [r8+6]
	cmp rax,0
	jnz LB_2215
	pop r14
	pop r9
	add rsp,8
	pop r13
	ret
LB_2215:
	pop rdi
	pop r9 
	pop r14
	pop r13
	ret
ETR_228:
	mov r9,0x0000_ffff_ffff_ffff
	and r9,[r13]
	call GRM_228
	ret
GRM_228:
	sub rsp,32
	mov QWORD [rsp+24],r13
	mov QWORD [rsp+16],r14 
	mov QWORD [rsp+8],r9
	cmp r14,r9
	jge LB_2231
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
 lea rdi,[r13+8+r14] 
	call scf_d
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	cmp rax,0 
	jz LB_2231
	add r14,rsi
	push rdi
	jmp LB_2232
LB_2231:
	mov r8,unt_1
	jmp LB_2229
LB_2232:
	jmp LB_2230
LB_2229:
	lea rsp,[rsp+8*0]
	jmp LB_2228
LB_2230:
	lea rax,[r14+2]
	cmp rax,r9
	jg LB_2235
	jmp LB_2236
LB_2235:
	mov r8,unt_1
	jmp LB_2233
LB_2236:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],100
	jnz LB_2237
	cmp BYTE [rdi+1],39
	jnz LB_2237
	jmp LB_2238
LB_2237:
	mov r8,unt_1
	jmp LB_2233
LB_2238:
	add r14,2
	jmp LB_2234
LB_2233:
	lea rsp,[rsp+8*1]
	jmp LB_2228
LB_2234:
	mov QWORD [rsp+8*1],r14
	mov r13,QWORD [rsp+16+8*1]
	mov r14,QWORD [rsp+8*1]
	jmp LB_2240
LB_2240
;; rsp=1 , %1597~1'(= r ) %1596~0'(= r ) %1595~8'(= r ) 
; #105 { } ⊢ 1(<4)◂{ }
;; rsp=1 , %1598~1(<4)◂{ } %1597~1'(= r ) %1596~0'(= r ) %1595~8'(= r ) 
; #22 { 1(<4)◂{ } 8'(= r ) } ⊢ 0(<2)◂{ 1(<4)◂{ } 8'(= r ) }
;; rsp=1 , %1599~0(<2)◂{ 1(<4)◂{ } 8'(= r ) } %1597~1'(= r ) %1596~0'(= r ) 
; ∎ 0(<2)◂{ 1(<4)◂{ } 8'(= r ) }
; .dlt.ptn 1'(= r )
; .dlt.ptn 0'(= r )
; .mov_ptn2 0(<2)◂{ 1(<4)◂{ } 8'(= r ) } ⊢ 2'(= a3◂ [ *{ a15◂ [ ]r}] )
; .mov_ptn 0(<2)◂{ 1(<4)◂{ } 8'(= r ) } ⊢ 2'(= a3◂ [ *{ a15◂ [ ]r}] )
	mov rax,[SS_RCD_2_TOP]
	mov rsi,[rax] 
	mov QWORD [SS_RCD_2_TOP],rsi
	mov QWORD [rax],0
	mov r13,rax
	mov rax,unt 
	mov rax,unt_1
	mov rdi,r13
	mov QWORD [rdi+8+8*0],rax
	mov rax,QWORD [rsp-8+8*1]
	mov rdi,r13
	mov QWORD [rdi+8+8*1],rax
	mov rax,r13
	mov BYTE [rax+6],0
	mov r8,rax
	lea rsp,[rsp+8*1]
	jmp LB_2239
LB_2239:
	movzx rax,BYTE [r8+6]
	cmp rax,0
	jnz LB_2228
	pop r14
	pop r9
	add rsp,8
	pop r13
	ret
LB_2228:
	cmp r14,r9
	jge LB_2244
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
 lea rdi,[r13+8+r14] 
	call scf_d
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	cmp rax,0 
	jz LB_2244
	add r14,rsi
	push rdi
	jmp LB_2245
LB_2244:
	mov r8,unt_1
	jmp LB_2242
LB_2245:
	jmp LB_2243
LB_2242:
	lea rsp,[rsp+8*0]
	jmp LB_2241
LB_2243:
	lea rax,[r14+2]
	cmp rax,r9
	jg LB_2248
	jmp LB_2249
LB_2248:
	mov r8,unt_1
	jmp LB_2246
LB_2249:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],120
	jnz LB_2250
	cmp BYTE [rdi+1],39
	jnz LB_2250
	jmp LB_2251
LB_2250:
	mov r8,unt_1
	jmp LB_2246
LB_2251:
	add r14,2
	jmp LB_2247
LB_2246:
	lea rsp,[rsp+8*1]
	jmp LB_2241
LB_2247:
	mov QWORD [rsp+8*1],r14
	mov r13,QWORD [rsp+16+8*1]
	mov r14,QWORD [rsp+8*1]
	jmp LB_2253
LB_2253
;; rsp=1 , %1602~1'(= r ) %1601~0'(= r ) %1600~8'(= r ) 
; #104 { } ⊢ 2(<4)◂{ }
;; rsp=1 , %1603~2(<4)◂{ } %1602~1'(= r ) %1601~0'(= r ) %1600~8'(= r ) 
; #22 { 2(<4)◂{ } 8'(= r ) } ⊢ 0(<2)◂{ 2(<4)◂{ } 8'(= r ) }
;; rsp=1 , %1604~0(<2)◂{ 2(<4)◂{ } 8'(= r ) } %1602~1'(= r ) %1601~0'(= r ) 
; ∎ 0(<2)◂{ 2(<4)◂{ } 8'(= r ) }
; .dlt.ptn 1'(= r )
; .dlt.ptn 0'(= r )
; .mov_ptn2 0(<2)◂{ 2(<4)◂{ } 8'(= r ) } ⊢ 2'(= a3◂ [ *{ a15◂ [ ]r}] )
; .mov_ptn 0(<2)◂{ 2(<4)◂{ } 8'(= r ) } ⊢ 2'(= a3◂ [ *{ a15◂ [ ]r}] )
	mov rax,[SS_RCD_2_TOP]
	mov rsi,[rax] 
	mov QWORD [SS_RCD_2_TOP],rsi
	mov QWORD [rax],0
	mov r13,rax
	mov rax,unt 
	mov rax,unt_2
	mov rdi,r13
	mov QWORD [rdi+8+8*0],rax
	mov rax,QWORD [rsp-8+8*1]
	mov rdi,r13
	mov QWORD [rdi+8+8*1],rax
	mov rax,r13
	mov BYTE [rax+6],0
	mov r8,rax
	lea rsp,[rsp+8*1]
	jmp LB_2252
LB_2252:
	movzx rax,BYTE [r8+6]
	cmp rax,0
	jnz LB_2241
	pop r14
	pop r9
	add rsp,8
	pop r13
	ret
LB_2241:
	cmp r14,r9
	jge LB_2257
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
 lea rdi,[r13+8+r14] 
	call scf_d
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	cmp rax,0 
	jz LB_2257
	add r14,rsi
	push rdi
	jmp LB_2258
LB_2257:
	mov r8,unt_1
	jmp LB_2255
LB_2258:
	jmp LB_2256
LB_2255:
	lea rsp,[rsp+8*0]
	jmp LB_2254
LB_2256:
	lea rax,[r14+1]
	cmp rax,r9
	jg LB_2261
	jmp LB_2262
LB_2261:
	mov r8,unt_1
	jmp LB_2259
LB_2262:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],39
	jnz LB_2263
	jmp LB_2264
LB_2263:
	mov r8,unt_1
	jmp LB_2259
LB_2264:
	add r14,1
	jmp LB_2260
LB_2259:
	lea rsp,[rsp+8*1]
	jmp LB_2254
LB_2260:
	mov QWORD [rsp+8*1],r14
	mov r13,QWORD [rsp+16+8*1]
	mov r14,QWORD [rsp+8*1]
	jmp LB_2266
LB_2266
;; rsp=1 , %1607~1'(= r ) %1606~0'(= r ) %1605~8'(= r ) 
; #106 { } ⊢ 0(<4)◂{ }
;; rsp=1 , %1608~0(<4)◂{ } %1607~1'(= r ) %1606~0'(= r ) %1605~8'(= r ) 
; #22 { 0(<4)◂{ } 8'(= r ) } ⊢ 0(<2)◂{ 0(<4)◂{ } 8'(= r ) }
;; rsp=1 , %1609~0(<2)◂{ 0(<4)◂{ } 8'(= r ) } %1607~1'(= r ) %1606~0'(= r ) 
; ∎ 0(<2)◂{ 0(<4)◂{ } 8'(= r ) }
; .dlt.ptn 1'(= r )
; .dlt.ptn 0'(= r )
; .mov_ptn2 0(<2)◂{ 0(<4)◂{ } 8'(= r ) } ⊢ 2'(= a3◂ [ *{ a15◂ [ ]r}] )
; .mov_ptn 0(<2)◂{ 0(<4)◂{ } 8'(= r ) } ⊢ 2'(= a3◂ [ *{ a15◂ [ ]r}] )
	mov rax,[SS_RCD_2_TOP]
	mov rsi,[rax] 
	mov QWORD [SS_RCD_2_TOP],rsi
	mov QWORD [rax],0
	mov r13,rax
	mov rax,unt 
	mov rax,unt_0
	mov rdi,r13
	mov QWORD [rdi+8+8*0],rax
	mov rax,QWORD [rsp-8+8*1]
	mov rdi,r13
	mov QWORD [rdi+8+8*1],rax
	mov rax,r13
	mov BYTE [rax+6],0
	mov r8,rax
	lea rsp,[rsp+8*1]
	jmp LB_2265
LB_2265:
	movzx rax,BYTE [r8+6]
	cmp rax,0
	jnz LB_2254
	pop r14
	pop r9
	add rsp,8
	pop r13
	ret
LB_2254:
	pop rdi
	pop r9 
	pop r14
	pop r13
	ret
ETR_229:
	mov r9,0x0000_ffff_ffff_ffff
	and r9,[r13]
	call GRM_229
	ret
GRM_229:
	sub rsp,32
	mov QWORD [rsp+24],r13
	mov QWORD [rsp+16],r14 
	mov QWORD [rsp+8],r9
	lea rax,[r14+1]
	cmp rax,r9
	jg LB_2270
	jmp LB_2271
LB_2270:
	mov r8,unt_1
	jmp LB_2268
LB_2271:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],96
	jnz LB_2272
	jmp LB_2273
LB_2272:
	mov r8,unt_1
	jmp LB_2268
LB_2273:
	add r14,1
	jmp LB_2269
LB_2268:
	lea rsp,[rsp+8*0]
	jmp LB_2267
LB_2269:
	call GRM_230
	movzx rax,BYTE [r8+6]
	cmp rax,0
	jnz LB_2276
	jmp LB_2277
LB_2276:
	jmp LB_2274
LB_2277:
	lea rsp,[rsp-8*1]
	mov r8,[r8+8]
; .mov_ptn2 2'(= a5◂ [ ] ) ⊢ 8'(= a5◂ [ ] )
; .mov_ptn 2'(= a5◂ [ ] ) ⊢ 8'(= a5◂ [ ] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_2275
LB_2274:
	lea rsp,[rsp+8*0]
	jmp LB_2267
LB_2275:
	mov QWORD [rsp+8*1],r14
	mov r13,QWORD [rsp+16+8*1]
	mov r14,QWORD [rsp+8*1]
	jmp LB_2279
LB_2279
;; rsp=1 , %1612~1'(= r ) %1611~0'(= r ) %1610~8'(= a5◂ [ ] ) 
; rsp_d=0, #43 8'(= a5◂ [ ] ) ⊢ { 3'(= a5◂ [ ] ) 2'(= {| l |} ) }
	lea rsp,[rsp-8*2]
	mov QWORD [rsp+8*0],r13
	mov QWORD [rsp+8*1],r14
; .mov_ptn2 8'(= a5◂ [ ] ) ⊢ 0'(= a5◂ [ ] )
; .mov_ptn 8'(= a5◂ [ ] ) ⊢ 0'(= a5◂ [ ] )
	mov rax,QWORD [rsp-8+8*3]
	mov r13,rax
	call ETR_43

	mov rax,QWORD [rsp-8+8*2]
	mov r8,r14
	mov r14,rax
	mov rax,QWORD [rsp-8+8*1]
	mov r9,r13
	mov r13,rax
	lea rsp,[rsp+8*3]
;; rsp=0 , %1614~2'(= {| l |} ) %1613~3'(= a5◂ [ ] ) %1612~1'(= r ) %1611~0'(= r ) 
; #22 2'(= {| l |} ) ⊢ 0(<2)◂2'(= {| l |} )
;; rsp=0 , %1615~0(<2)◂2'(= {| l |} ) %1613~3'(= a5◂ [ ] ) %1612~1'(= r ) %1611~0'(= r ) 
; ∎ 0(<2)◂2'(= {| l |} )
; .dlt.ptn 3'(= a5◂ [ ] )
;	.dlt adt ⊢ _  
; .dlt.ptn 1'(= r )
; .dlt.ptn 0'(= r )
; .mov_ptn2 0(<2)◂2'(= {| l |} ) ⊢ 2'(= a3◂ [ {| l |}] )
	mov r13,r8
; .mov_ptn 0(<2)◂0'(= {| l |} ) ⊢ 2'(= a3◂ [ {| l |}] )
	mov rax,r13
	mov BYTE [rax+6],0
	mov r8,rax
	jmp LB_2278
LB_2278:
	movzx rax,BYTE [r8+6]
	cmp rax,0
	jnz LB_2267
	pop r14
	pop r9
	add rsp,8
	pop r13
	ret
LB_2267:
	pop rdi
	pop r9 
	pop r14
	pop r13
	ret
ETR_230:
	mov r9,0x0000_ffff_ffff_ffff
	and r9,[r13]
	call GRM_230
	ret
GRM_230:
	sub rsp,32
	mov QWORD [rsp+24],r13
	mov QWORD [rsp+16],r14 
	mov QWORD [rsp+8],r9
	lea rax,[r14+1]
	cmp rax,r9
	jg LB_2283
	jmp LB_2284
LB_2283:
	mov r8,unt_1
	jmp LB_2281
LB_2284:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],10
	jnz LB_2285
	jmp LB_2286
LB_2285:
	mov r8,unt_1
	jmp LB_2281
LB_2286:
	add r14,1
	jmp LB_2282
LB_2281:
	lea rsp,[rsp+8*0]
	jmp LB_2280
LB_2282:
	mov QWORD [rsp+8*0],r14
	mov r13,QWORD [rsp+16+8*0]
	mov r14,QWORD [rsp+8*0]
	jmp LB_2288
LB_2288
;; rsp=0 , %1617~1'(= r ) %1616~0'(= r ) 
	jmp LB_2289
LB_2289:
; $ %[ 10r ] ⊢ %[ 10r ]
;; rsp=0 , %1618~%[ 10r ] %1617~1'(= r ) %1616~0'(= r ) 
; #32 { } ⊢ 2(<4)◂{ }
;; rsp=0 , %1619~2(<4)◂{ } %1618~%[ 10r ] %1617~1'(= r ) %1616~0'(= r ) 
; rsp_d=0, #40 { %[ 10r ] 2(<4)◂{ } } ⊢ 2'(= a5◂ [ ] )
	lea rsp,[rsp-8*2]
	mov QWORD [rsp+8*0],r13
	mov QWORD [rsp+8*1],r14
; .mov_ptn2 { %[ 10r ] 2(<4)◂{ } } ⊢ { 0'(= r ) 1'(= a5◂ [ ] ) }
; .mov_ptn 2(<4)◂{ } ⊢ 1'(= a5◂ [ ] )
	mov rax,unt 
	mov rax,unt_2
	mov r14,rax
; .mov_ptn %[ 10r ] ⊢ 0'(= r )
	mov rax,10
	mov r13,rax
	call ETR_40

	mov r14,QWORD [rsp-8+8*2]
	mov rax,QWORD [rsp-8+8*1]
	mov r8,r13
	mov r13,rax
	lea rsp,[rsp+8*2]
;; rsp=0 , %1620~2'(= a5◂ [ ] ) %1617~1'(= r ) %1616~0'(= r ) 
; #22 2'(= a5◂ [ ] ) ⊢ 0(<2)◂2'(= a5◂ [ ] )
;; rsp=0 , %1621~0(<2)◂2'(= a5◂ [ ] ) %1617~1'(= r ) %1616~0'(= r ) 
; ∎ 0(<2)◂2'(= a5◂ [ ] )
; .dlt.ptn 1'(= r )
; .dlt.ptn 0'(= r )
; .mov_ptn2 0(<2)◂2'(= a5◂ [ ] ) ⊢ 2'(= a3◂ [ a5◂ [ ]] )
	mov r13,r8
; .mov_ptn 0(<2)◂0'(= a5◂ [ ] ) ⊢ 2'(= a3◂ [ a5◂ [ ]] )
	mov rax,r13
	mov rdi,rax
	mov rax,[SS_LN_TOP]
	mov rsi,[rax]
	mov QWORD [SS_LN_TOP],rsi 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	jmp LB_2287
LB_2287:
	movzx rax,BYTE [r8+6]
	cmp rax,0
	jnz LB_2280
	pop r14
	pop r9
	add rsp,8
	pop r13
	ret
LB_2280:
	cmp r14,r9
	jge LB_2293
	jmp LB_2294
LB_2293:
	mov r8,unt_1 
	jmp LB_2291
LB_2294:
	movzx rdi,BYTE [r13+8+r14]
	push rdi 
	add r14,1 
	jmp LB_2292
LB_2291:
	lea rsp,[rsp+8*0]
	jmp LB_2290
LB_2292:
	call GRM_230
	movzx rax,BYTE [r8+6]
	cmp rax,0
	jnz LB_2297
	jmp LB_2298
LB_2297:
	jmp LB_2295
LB_2298:
	lea rsp,[rsp-8*1]
	mov r8,[r8+8]
; .mov_ptn2 2'(= a5◂ [ ] ) ⊢ 9'(= a5◂ [ ] )
; .mov_ptn 2'(= a5◂ [ ] ) ⊢ 9'(= a5◂ [ ] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_2296
LB_2295:
	lea rsp,[rsp+8*1]
	jmp LB_2290
LB_2296:
	mov QWORD [rsp+8*2],r14
	mov r13,QWORD [rsp+16+8*2]
	mov r14,QWORD [rsp+8*2]
	jmp LB_2300
LB_2300
;; rsp=2 , %1625~1'(= r ) %1624~0'(= r ) %1623~9'(= a5◂ [ ] ) %1622~8'(= r ) 
; rsp_d=0, #40 { 8'(= r ) 9'(= a5◂ [ ] ) } ⊢ 2'(= a5◂ [ ] )
	lea rsp,[rsp-8*2]
	mov QWORD [rsp+8*0],r13
	mov QWORD [rsp+8*1],r14
; .mov_ptn2 { 8'(= r ) 9'(= a5◂ [ ] ) } ⊢ { 0'(= r ) 1'(= a5◂ [ ] ) }
; .mov_ptn 9'(= a5◂ [ ] ) ⊢ 1'(= a5◂ [ ] )
	mov rax,QWORD [rsp-8+8*3]
	mov r14,rax
; .mov_ptn 8'(= r ) ⊢ 0'(= r )
	mov rax,QWORD [rsp-8+8*4]
	mov r13,rax
	call ETR_40

	mov r14,QWORD [rsp-8+8*2]
	mov rax,QWORD [rsp-8+8*1]
	mov r8,r13
	mov r13,rax
	lea rsp,[rsp+8*4]
;; rsp=0 , %1626~2'(= a5◂ [ ] ) %1625~1'(= r ) %1624~0'(= r ) 
; #22 2'(= a5◂ [ ] ) ⊢ 0(<2)◂2'(= a5◂ [ ] )
;; rsp=0 , %1627~0(<2)◂2'(= a5◂ [ ] ) %1625~1'(= r ) %1624~0'(= r ) 
; ∎ 0(<2)◂2'(= a5◂ [ ] )
; .dlt.ptn 1'(= r )
; .dlt.ptn 0'(= r )
; .mov_ptn2 0(<2)◂2'(= a5◂ [ ] ) ⊢ 2'(= a3◂ [ a5◂ [ ]] )
	mov r13,r8
; .mov_ptn 0(<2)◂0'(= a5◂ [ ] ) ⊢ 2'(= a3◂ [ a5◂ [ ]] )
	mov rax,r13
	mov rdi,rax
	mov rax,[SS_LN_TOP]
	mov rsi,[rax]
	mov QWORD [SS_LN_TOP],rsi 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	jmp LB_2299
LB_2299:
	movzx rax,BYTE [r8+6]
	cmp rax,0
	jnz LB_2290
	pop r14
	pop r9
	add rsp,8
	pop r13
	ret
LB_2290:
	pop rdi
	pop r9 
	pop r14
	pop r13
	ret
ETR_231:
	mov r9,0x0000_ffff_ffff_ffff
	and r9,[r13]
	call GRM_231
	ret
GRM_231:
	sub rsp,32
	mov QWORD [rsp+24],r13
	mov QWORD [rsp+16],r14 
	mov QWORD [rsp+8],r9
	jmp LB_2303
LB_2302:
	add r14,1 
LB_2303:
	cmp r14,r9
	jge LB_2304
	movzx rax,BYTE [r13+8+r14]
	cmp rax,9 
	jz LB_2302
	cmp rax,32 
	jz LB_2302
LB_2304
	call GRM_217
	movzx rax,BYTE [r8+6]
	cmp rax,0
	jnz LB_2307
	jmp LB_2308
LB_2307:
	jmp LB_2305
LB_2308:
	lea rsp,[rsp-8*1]
	mov r8,[r8+8]
; .mov_ptn2 2'(= a35◂ [ *{ }] ) ⊢ 8'(= a35◂ [ *{ }] )
; .mov_ptn 2'(= a35◂ [ *{ }] ) ⊢ 8'(= a35◂ [ *{ }] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_2306
LB_2305:
	lea rsp,[rsp+8*0]
	jmp LB_2301
LB_2306:
	jmp LB_2310
LB_2309:
	add r14,1 
LB_2310:
	cmp r14,r9
	jge LB_2311
	movzx rax,BYTE [r13+8+r14]
	cmp rax,9 
	jz LB_2309
	cmp rax,32 
	jz LB_2309
LB_2311
	lea rax,[r14+2]
	cmp rax,r9
	jg LB_2314
	jmp LB_2315
LB_2314:
	mov r8,unt_1
	jmp LB_2312
LB_2315:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],47
	jnz LB_2316
	cmp BYTE [rdi+1],47
	jnz LB_2316
	jmp LB_2317
LB_2316:
	mov r8,unt_1
	jmp LB_2312
LB_2317:
	add r14,2
	jmp LB_2313
LB_2312:
	lea rsp,[rsp+8*1]
	jmp LB_2301
LB_2313:
	mov QWORD [rsp+8*1],r14
	mov r13,QWORD [rsp+16+8*1]
	mov r14,QWORD [rsp+8*1]
	jmp LB_2319
LB_2319
;; rsp=1 , %1630~1'(= r ) %1629~0'(= r ) %1628~8'(= a35◂ [ *{ }] ) 
; #20 { } ⊢ 1(<2)◂{ }
;; rsp=1 , %1631~1(<2)◂{ } %1630~1'(= r ) %1629~0'(= r ) %1628~8'(= a35◂ [ *{ }] ) 
; #22 1(<2)◂{ } ⊢ 0(<2)◂1(<2)◂{ }
;; rsp=1 , %1632~0(<2)◂1(<2)◂{ } %1630~1'(= r ) %1629~0'(= r ) %1628~8'(= a35◂ [ *{ }] ) 
; ∎ 0(<2)◂1(<2)◂{ }
; .dlt.ptn 1'(= r )
; .dlt.ptn 0'(= r )
; .dlt.ptn 8'(= a35◂ [ *{ }] )
;	.dlt adt ⊢ _  
; .mov_ptn2 0(<2)◂1(<2)◂{ } ⊢ 2'(= a3◂ [ a2◂ [ a16◂ [ a9◂ [ ]]]] )
; .mov_ptn 0(<2)◂1(<2)◂{ } ⊢ 2'(= a3◂ [ a2◂ [ a16◂ [ a9◂ [ ]]]] )
	mov rax,unt 
	mov rax,unt_1
	mov rdi,rax
	mov rax,[SS_LN_TOP]
	mov rsi,[rax]
	mov QWORD [SS_LN_TOP],rsi 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	lea rsp,[rsp+8*1]
	jmp LB_2318
LB_2318:
	movzx rax,BYTE [r8+6]
	cmp rax,0
	jnz LB_2301
	pop r14
	pop r9
	add rsp,8
	pop r13
	ret
LB_2301:
	jmp LB_2322
LB_2321:
	add r14,1 
LB_2322:
	cmp r14,r9
	jge LB_2323
	movzx rax,BYTE [r13+8+r14]
	cmp rax,9 
	jz LB_2321
	cmp rax,32 
	jz LB_2321
LB_2323
	call GRM_217
	movzx rax,BYTE [r8+6]
	cmp rax,0
	jnz LB_2326
	jmp LB_2327
LB_2326:
	jmp LB_2324
LB_2327:
	lea rsp,[rsp-8*1]
	mov r8,[r8+8]
; .mov_ptn2 2'(= a35◂ [ *{ }] ) ⊢ 8'(= a35◂ [ *{ }] )
; .mov_ptn 2'(= a35◂ [ *{ }] ) ⊢ 8'(= a35◂ [ *{ }] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_2325
LB_2324:
	lea rsp,[rsp+8*0]
	jmp LB_2320
LB_2325:
	jmp LB_2329
LB_2328:
	add r14,1 
LB_2329:
	cmp r14,r9
	jge LB_2330
	movzx rax,BYTE [r13+8+r14]
	cmp rax,9 
	jz LB_2328
	cmp rax,32 
	jz LB_2328
LB_2330
	call GRM_226
	movzx rax,BYTE [r8+6]
	cmp rax,0
	jnz LB_2333
	jmp LB_2334
LB_2333:
	jmp LB_2331
LB_2334:
	lea rsp,[rsp-8*1]
	mov r8,[r8+8]
; .mov_ptn2 2'(= a16◂ [ a9◂ [ ]] ) ⊢ 9'(= a16◂ [ a9◂ [ ]] )
; .mov_ptn 2'(= a16◂ [ a9◂ [ ]] ) ⊢ 9'(= a16◂ [ a9◂ [ ]] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_2332
LB_2331:
	lea rsp,[rsp+8*1]
	jmp LB_2320
LB_2332:
	jmp LB_2336
LB_2335:
	add r14,1 
LB_2336:
	cmp r14,r9
	jge LB_2337
	movzx rax,BYTE [r13+8+r14]
	cmp rax,9 
	jz LB_2335
	cmp rax,32 
	jz LB_2335
LB_2337
	call GRM_231
	movzx rax,BYTE [r8+6]
	cmp rax,0
	jnz LB_2340
	jmp LB_2341
LB_2340:
	jmp LB_2338
LB_2341:
	lea rsp,[rsp-8*1]
	mov r8,[r8+8]
; .mov_ptn2 2'(= a2◂ [ a16◂ [ a9◂ [ ]]] ) ⊢ 10'(= a2◂ [ a16◂ [ a9◂ [ ]]] )
; .mov_ptn 2'(= a2◂ [ a16◂ [ a9◂ [ ]]] ) ⊢ 10'(= a2◂ [ a16◂ [ a9◂ [ ]]] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_2339
LB_2338:
	lea rsp,[rsp+8*2]
	jmp LB_2320
LB_2339:
	mov QWORD [rsp+8*3],r14
	mov r13,QWORD [rsp+16+8*3]
	mov r14,QWORD [rsp+8*3]
	jmp LB_2343
LB_2343
;; rsp=3 , %1637~1'(= r ) %1636~0'(= r ) %1635~10'(= a2◂ [ a16◂ [ a9◂ [ ]]] ) %1634~9'(= a16◂ [ a9◂ [ ]] ) %1633~8'(= a35◂ [ *{ }] ) 
; #21 { 9'(= a16◂ [ a9◂ [ ]] ) 10'(= a2◂ [ a16◂ [ a9◂ [ ]]] ) } ⊢ 0(<2)◂{ 9'(= a16◂ [ a9◂ [ ]] ) 10'(= a2◂ [ a16◂ [ a9◂ [ ]]] ) }
;; rsp=3 , %1638~0(<2)◂{ 9'(= a16◂ [ a9◂ [ ]] ) 10'(= a2◂ [ a16◂ [ a9◂ [ ]]] ) } %1637~1'(= r ) %1636~0'(= r ) %1633~8'(= a35◂ [ *{ }] ) 
; #22 0(<2)◂{ 9'(= a16◂ [ a9◂ [ ]] ) 10'(= a2◂ [ a16◂ [ a9◂ [ ]]] ) } ⊢ 0(<2)◂0(<2)◂{ 9'(= a16◂ [ a9◂ [ ]] ) 10'(= a2◂ [ a16◂ [ a9◂ [ ]]] ) }
;; rsp=3 , %1639~0(<2)◂0(<2)◂{ 9'(= a16◂ [ a9◂ [ ]] ) 10'(= a2◂ [ a16◂ [ a9◂ [ ]]] ) } %1637~1'(= r ) %1636~0'(= r ) %1633~8'(= a35◂ [ *{ }] ) 
; ∎ 0(<2)◂0(<2)◂{ 9'(= a16◂ [ a9◂ [ ]] ) 10'(= a2◂ [ a16◂ [ a9◂ [ ]]] ) }
; .dlt.ptn 1'(= r )
; .dlt.ptn 0'(= r )
; .dlt.ptn 8'(= a35◂ [ *{ }] )
;	.dlt adt ⊢ _  
; .mov_ptn2 0(<2)◂0(<2)◂{ 9'(= a16◂ [ a9◂ [ ]] ) 10'(= a2◂ [ a16◂ [ a9◂ [ ]]] ) } ⊢ 2'(= a3◂ [ a2◂ [ a16◂ [ a9◂ [ ]]]] )
; .mov_ptn 0(<2)◂0(<2)◂{ 9'(= a16◂ [ a9◂ [ ]] ) 10'(= a2◂ [ a16◂ [ a9◂ [ ]]] ) } ⊢ 2'(= a3◂ [ a2◂ [ a16◂ [ a9◂ [ ]]]] )
	mov rax,[SS_RCD_2_TOP]
	mov rsi,[rax] 
	mov QWORD [SS_RCD_2_TOP],rsi
	mov QWORD [rax],0
	mov r13,rax
	mov rax,QWORD [rsp-8+8*2]
	mov rdi,r13
	mov QWORD [rdi+8+8*0],rax
	mov rax,QWORD [rsp-8+8*1]
	mov rdi,r13
	mov QWORD [rdi+8+8*1],rax
	mov rax,r13
	mov BYTE [rax+6],0
	mov rdi,rax
	mov rax,[SS_LN_TOP]
	mov rsi,[rax]
	mov QWORD [SS_LN_TOP],rsi 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	lea rsp,[rsp+8*3]
	jmp LB_2342
LB_2342:
	movzx rax,BYTE [r8+6]
	cmp rax,0
	jnz LB_2320
	pop r14
	pop r9
	add rsp,8
	pop r13
	ret
LB_2320:
	pop rdi
	pop r9 
	pop r14
	pop r13
	ret
ETR_232:
	mov r9,0x0000_ffff_ffff_ffff
	and r9,[r13]
	call GRM_232
	ret
GRM_232:
	sub rsp,32
	mov QWORD [rsp+24],r13
	mov QWORD [rsp+16],r14 
	mov QWORD [rsp+8],r9
	jmp LB_2346
LB_2345:
	add r14,1 
LB_2346:
	cmp r14,r9
	jge LB_2347
	movzx rax,BYTE [r13+8+r14]
	cmp rax,9 
	jz LB_2345
	cmp rax,10 
	jz LB_2345
	cmp rax,32 
	jz LB_2345
LB_2347
	lea rax,[r14+2]
	cmp rax,r9
	jg LB_2350
	jmp LB_2351
LB_2350:
	mov r8,unt_1
	jmp LB_2348
LB_2351:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],95
	jnz LB_2352
	cmp BYTE [rdi+1],94
	jnz LB_2352
	jmp LB_2353
LB_2352:
	mov r8,unt_1
	jmp LB_2348
LB_2353:
	add r14,2
	jmp LB_2349
LB_2348:
	lea rsp,[rsp+8*0]
	jmp LB_2344
LB_2349:
	jmp LB_2355
LB_2354:
	add r14,1 
LB_2355:
	cmp r14,r9
	jge LB_2356
	movzx rax,BYTE [r13+8+r14]
	cmp rax,9 
	jz LB_2354
	cmp rax,10 
	jz LB_2354
	cmp rax,32 
	jz LB_2354
LB_2356
	call GRM_233
	movzx rax,BYTE [r8+6]
	cmp rax,0
	jnz LB_2359
	jmp LB_2360
LB_2359:
	jmp LB_2357
LB_2360:
	lea rsp,[rsp-8*2]
; .mov_ptn2 2'(= *{ a2◂ [ a12◂ [ a9◂ [ ]{| l |}]]a2◂ [ a13◂ [ {| l |}]]} ) ⊢ { 8'(= a2◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) 9'(= a2◂ [ a13◂ [ {| l |}]] ) }
; .mov_ptn 2'(= *{ a2◂ [ a12◂ [ a9◂ [ ]{| l |}]]a2◂ [ a13◂ [ {| l |}]]} ) ⊢ { 8'(= a2◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) 9'(= a2◂ [ a13◂ [ {| l |}]] ) }
	mov rdi,r8
	mov rdi,QWORD [rdi+8+8*0]
	mov r10,rdi
	mov QWORD [rsp-8+8*2],r10
	mov rdi,r8
	mov rdi,QWORD [rdi+8+8*1]
	mov r11,rdi
	mov QWORD [rsp-8+8*1],r11
	jmp LB_2358
LB_2357:
	lea rsp,[rsp+8*0]
	pop rdi
	pop r9 
	pop r14
	pop r13
	ret
LB_2358:
	jmp LB_2362
LB_2361:
	add r14,1 
LB_2362:
	cmp r14,r9
	jge LB_2363
	movzx rax,BYTE [r13+8+r14]
	cmp rax,9 
	jz LB_2361
	cmp rax,10 
	jz LB_2361
	cmp rax,32 
	jz LB_2361
LB_2363
	call GRM_231
	movzx rax,BYTE [r8+6]
	cmp rax,0
	jnz LB_2366
	jmp LB_2367
LB_2366:
	jmp LB_2364
LB_2367:
	lea rsp,[rsp-8*1]
	mov r8,[r8+8]
; .mov_ptn2 2'(= a2◂ [ a16◂ [ a9◂ [ ]]] ) ⊢ 10'(= a2◂ [ a16◂ [ a9◂ [ ]]] )
; .mov_ptn 2'(= a2◂ [ a16◂ [ a9◂ [ ]]] ) ⊢ 10'(= a2◂ [ a16◂ [ a9◂ [ ]]] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_2365
LB_2364:
	lea rsp,[rsp+8*2]
	pop rdi
	pop r9 
	pop r14
	pop r13
	ret
LB_2365:
	mov QWORD [rsp+8*3],r14
	mov r13,QWORD [rsp+16+8*3]
	mov r14,QWORD [rsp+8*3]
	jmp LB_2369
LB_2369
;; rsp=3 , %1644~1'(= r ) %1643~0'(= r ) %1642~10'(= a2◂ [ a16◂ [ a9◂ [ ]]] ) %1641~9'(= a2◂ [ a13◂ [ {| l |}]] ) %1640~8'(= a2◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) 
; #119 { 10'(= a2◂ [ a16◂ [ a9◂ [ ]]] ) 8'(= a2◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) 9'(= a2◂ [ a13◂ [ {| l |}]] ) } ⊢ 3(<4)◂{ 10'(= a2◂ [ a16◂ [ a9◂ [ ]]] ) 8'(= a2◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) 9'(= a2◂ [ a13◂ [ {| l |}]] ) }
;; rsp=3 , %1645~3(<4)◂{ 10'(= a2◂ [ a16◂ [ a9◂ [ ]]] ) 8'(= a2◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) 9'(= a2◂ [ a13◂ [ {| l |}]] ) } %1644~1'(= r ) %1643~0'(= r ) 
; #22 3(<4)◂{ 10'(= a2◂ [ a16◂ [ a9◂ [ ]]] ) 8'(= a2◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) 9'(= a2◂ [ a13◂ [ {| l |}]] ) } ⊢ 0(<2)◂3(<4)◂{ 10'(= a2◂ [ a16◂ [ a9◂ [ ]]] ) 8'(= a2◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) 9'(= a2◂ [ a13◂ [ {| l |}]] ) }
;; rsp=3 , %1646~0(<2)◂3(<4)◂{ 10'(= a2◂ [ a16◂ [ a9◂ [ ]]] ) 8'(= a2◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) 9'(= a2◂ [ a13◂ [ {| l |}]] ) } %1644~1'(= r ) %1643~0'(= r ) 
; ∎ 0(<2)◂3(<4)◂{ 10'(= a2◂ [ a16◂ [ a9◂ [ ]]] ) 8'(= a2◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) 9'(= a2◂ [ a13◂ [ {| l |}]] ) }
; .dlt.ptn 1'(= r )
; .dlt.ptn 0'(= r )
; .mov_ptn2 0(<2)◂3(<4)◂{ 10'(= a2◂ [ a16◂ [ a9◂ [ ]]] ) 8'(= a2◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) 9'(= a2◂ [ a13◂ [ {| l |}]] ) } ⊢ 2'(= a3◂ [ a19◂ [ a9◂ [ ]{| l |}]] )
; .mov_ptn 0(<2)◂3(<4)◂{ 10'(= a2◂ [ a16◂ [ a9◂ [ ]]] ) 8'(= a2◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) 9'(= a2◂ [ a13◂ [ {| l |}]] ) } ⊢ 2'(= a3◂ [ a19◂ [ a9◂ [ ]{| l |}]] )
	mov rax,[SS_RCD_3_TOP]
	mov rsi,[rax] 
	mov QWORD [SS_RCD_3_TOP],rsi
	mov QWORD [rax],0
	mov r13,rax
	mov rax,QWORD [rsp-8+8*1]
	mov rdi,r13
	mov QWORD [rdi+8+8*0],rax
	mov rax,QWORD [rsp-8+8*3]
	mov rdi,r13
	mov QWORD [rdi+8+8*1],rax
	mov rax,QWORD [rsp-8+8*2]
	mov rdi,r13
	mov QWORD [rdi+8+8*2],rax
	mov rax,r13
	mov BYTE [rax+6],3
	mov rdi,rax
	mov rax,[SS_LN_TOP]
	mov rsi,[rax]
	mov QWORD [SS_LN_TOP],rsi 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	lea rsp,[rsp+8*3]
	jmp LB_2368
LB_2368:
	movzx rax,BYTE [r8+6]
	cmp rax,0
	jnz LB_2344
	pop r14
	pop r9
	add rsp,8
	pop r13
	ret
LB_2344:
	jmp LB_2372
LB_2371:
	add r14,1 
LB_2372:
	cmp r14,r9
	jge LB_2373
	movzx rax,BYTE [r13+8+r14]
	cmp rax,9 
	jz LB_2371
	cmp rax,10 
	jz LB_2371
	cmp rax,32 
	jz LB_2371
LB_2373
	call GRM_190
	movzx rax,BYTE [r8+6]
	cmp rax,0
	jnz LB_2376
	jmp LB_2377
LB_2376:
	jmp LB_2374
LB_2377:
	lea rsp,[rsp-8*1]
	mov r8,[r8+8]
; .mov_ptn2 2'(= a11◂ [ a9◂ [ ]] ) ⊢ 8'(= a11◂ [ a9◂ [ ]] )
; .mov_ptn 2'(= a11◂ [ a9◂ [ ]] ) ⊢ 8'(= a11◂ [ a9◂ [ ]] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_2375
LB_2374:
	lea rsp,[rsp+8*0]
	jmp LB_2370
LB_2375:
	jmp LB_2379
LB_2378:
	add r14,1 
LB_2379:
	cmp r14,r9
	jge LB_2380
	movzx rax,BYTE [r13+8+r14]
	cmp rax,9 
	jz LB_2378
	cmp rax,10 
	jz LB_2378
	cmp rax,32 
	jz LB_2378
LB_2380
	lea rax,[r14+1]
	cmp rax,r9
	jg LB_2383
	jmp LB_2384
LB_2383:
	mov r8,unt_1
	jmp LB_2381
LB_2384:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],95
	jnz LB_2385
	jmp LB_2386
LB_2385:
	mov r8,unt_1
	jmp LB_2381
LB_2386:
	add r14,1
	jmp LB_2382
LB_2381:
	lea rsp,[rsp+8*1]
	jmp LB_2370
LB_2382:
	jmp LB_2388
LB_2387:
	add r14,1 
LB_2388:
	cmp r14,r9
	jge LB_2389
	movzx rax,BYTE [r13+8+r14]
	cmp rax,9 
	jz LB_2387
	cmp rax,10 
	jz LB_2387
	cmp rax,32 
	jz LB_2387
LB_2389
	lea rax,[r14+3]
	cmp rax,r9
	jg LB_2392
	jmp LB_2393
LB_2392:
	mov r8,unt_1
	jmp LB_2390
LB_2393:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],226
	jnz LB_2394
	cmp BYTE [rdi+1],138
	jnz LB_2394
	cmp BYTE [rdi+2],162
	jnz LB_2394
	jmp LB_2395
LB_2394:
	mov r8,unt_1
	jmp LB_2390
LB_2395:
	add r14,3
	jmp LB_2391
LB_2390:
	lea rsp,[rsp+8*1]
	jmp LB_2370
LB_2391:
	jmp LB_2397
LB_2396:
	add r14,1 
LB_2397:
	cmp r14,r9
	jge LB_2398
	movzx rax,BYTE [r13+8+r14]
	cmp rax,9 
	jz LB_2396
	cmp rax,10 
	jz LB_2396
	cmp rax,32 
	jz LB_2396
LB_2398
	call GRM_205
	movzx rax,BYTE [r8+6]
	cmp rax,0
	jnz LB_2401
	jmp LB_2402
LB_2401:
	jmp LB_2399
LB_2402:
	lea rsp,[rsp-8*1]
	mov r8,[r8+8]
; .mov_ptn2 2'(= a8◂ [ a13◂ [ {| l |}]] ) ⊢ 9'(= a8◂ [ a13◂ [ {| l |}]] )
; .mov_ptn 2'(= a8◂ [ a13◂ [ {| l |}]] ) ⊢ 9'(= a8◂ [ a13◂ [ {| l |}]] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_2400
LB_2399:
	lea rsp,[rsp+8*1]
	jmp LB_2370
LB_2400:
	mov QWORD [rsp+8*2],r14
	mov r13,QWORD [rsp+16+8*2]
	mov r14,QWORD [rsp+8*2]
	jmp LB_2404
LB_2404
;; rsp=2 , %1650~1'(= r ) %1649~0'(= r ) %1648~9'(= a8◂ [ a13◂ [ {| l |}]] ) %1647~8'(= a11◂ [ a9◂ [ ]] ) 
; #20 { } ⊢ 1(<2)◂{ }
;; rsp=2 , %1651~1(<2)◂{ } %1650~1'(= r ) %1649~0'(= r ) %1648~9'(= a8◂ [ a13◂ [ {| l |}]] ) %1647~8'(= a11◂ [ a9◂ [ ]] ) 
; #79 1(<2)◂{ } ⊢ 0(<2)◂1(<2)◂{ }
;; rsp=2 , %1652~0(<2)◂1(<2)◂{ } %1650~1'(= r ) %1649~0'(= r ) %1648~9'(= a8◂ [ a13◂ [ {| l |}]] ) %1647~8'(= a11◂ [ a9◂ [ ]] ) 
; #120 { 8'(= a11◂ [ a9◂ [ ]] ) 0(<2)◂1(<2)◂{ } 9'(= a8◂ [ a13◂ [ {| l |}]] ) } ⊢ 2(<4)◂{ 8'(= a11◂ [ a9◂ [ ]] ) 0(<2)◂1(<2)◂{ } 9'(= a8◂ [ a13◂ [ {| l |}]] ) }
;; rsp=2 , %1653~2(<4)◂{ 8'(= a11◂ [ a9◂ [ ]] ) 0(<2)◂1(<2)◂{ } 9'(= a8◂ [ a13◂ [ {| l |}]] ) } %1650~1'(= r ) %1649~0'(= r ) 
; #22 2(<4)◂{ 8'(= a11◂ [ a9◂ [ ]] ) 0(<2)◂1(<2)◂{ } 9'(= a8◂ [ a13◂ [ {| l |}]] ) } ⊢ 0(<2)◂2(<4)◂{ 8'(= a11◂ [ a9◂ [ ]] ) 0(<2)◂1(<2)◂{ } 9'(= a8◂ [ a13◂ [ {| l |}]] ) }
;; rsp=2 , %1654~0(<2)◂2(<4)◂{ 8'(= a11◂ [ a9◂ [ ]] ) 0(<2)◂1(<2)◂{ } 9'(= a8◂ [ a13◂ [ {| l |}]] ) } %1650~1'(= r ) %1649~0'(= r ) 
; ∎ 0(<2)◂2(<4)◂{ 8'(= a11◂ [ a9◂ [ ]] ) 0(<2)◂1(<2)◂{ } 9'(= a8◂ [ a13◂ [ {| l |}]] ) }
; .dlt.ptn 1'(= r )
; .dlt.ptn 0'(= r )
; .mov_ptn2 0(<2)◂2(<4)◂{ 8'(= a11◂ [ a9◂ [ ]] ) 0(<2)◂1(<2)◂{ } 9'(= a8◂ [ a13◂ [ {| l |}]] ) } ⊢ 2'(= a3◂ [ a19◂ [ a9◂ [ ]{| l |}]] )
; .mov_ptn 0(<2)◂2(<4)◂{ 8'(= a11◂ [ a9◂ [ ]] ) 0(<2)◂1(<2)◂{ } 9'(= a8◂ [ a13◂ [ {| l |}]] ) } ⊢ 2'(= a3◂ [ a19◂ [ a9◂ [ ]{| l |}]] )
	mov rax,[SS_RCD_3_TOP]
	mov rsi,[rax] 
	mov QWORD [SS_RCD_3_TOP],rsi
	mov QWORD [rax],0
	mov r13,rax
	mov rax,QWORD [rsp-8+8*2]
	mov rdi,r13
	mov QWORD [rdi+8+8*0],rax
	mov rax,unt 
	mov rax,unt_1
	mov rdi,rax
	mov rax,[SS_LN_TOP]
	mov rsi,[rax]
	mov QWORD [SS_LN_TOP],rsi 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov rdi,r13
	mov QWORD [rdi+8+8*1],rax
	mov rax,QWORD [rsp-8+8*1]
	mov rdi,r13
	mov QWORD [rdi+8+8*2],rax
	mov rax,r13
	mov BYTE [rax+6],2
	mov rdi,rax
	mov rax,[SS_LN_TOP]
	mov rsi,[rax]
	mov QWORD [SS_LN_TOP],rsi 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	lea rsp,[rsp+8*2]
	jmp LB_2403
LB_2403:
	movzx rax,BYTE [r8+6]
	cmp rax,0
	jnz LB_2370
	pop r14
	pop r9
	add rsp,8
	pop r13
	ret
LB_2370:
	pop rdi
	pop r9 
	pop r14
	pop r13
	ret
ETR_233:
	mov r9,0x0000_ffff_ffff_ffff
	and r9,[r13]
	call GRM_233
	ret
GRM_233:
	sub rsp,32
	mov QWORD [rsp+24],r13
	mov QWORD [rsp+16],r14 
	mov QWORD [rsp+8],r9
	jmp LB_2407
LB_2406:
	add r14,1 
LB_2407:
	cmp r14,r9
	jge LB_2408
	movzx rax,BYTE [r13+8+r14]
	cmp rax,9 
	jz LB_2406
	cmp rax,10 
	jz LB_2406
	cmp rax,32 
	jz LB_2406
LB_2408
	call GRM_187
	movzx rax,BYTE [r8+6]
	cmp rax,0
	jnz LB_2411
	jmp LB_2412
LB_2411:
	jmp LB_2409
LB_2412:
; .mov_ptn2 2'(= *{ } ) ⊢ { }
; .mov_ptn 2'(= *{ } ) ⊢ { }
	jmp LB_2410
LB_2409:
	lea rsp,[rsp+8*0]
	jmp LB_2405
LB_2410:
	jmp LB_2414
LB_2413:
	add r14,1 
LB_2414:
	cmp r14,r9
	jge LB_2415
	movzx rax,BYTE [r13+8+r14]
	cmp rax,9 
	jz LB_2413
	cmp rax,10 
	jz LB_2413
	cmp rax,32 
	jz LB_2413
LB_2415
	lea rax,[r14+3]
	cmp rax,r9
	jg LB_2418
	jmp LB_2419
LB_2418:
	mov r8,unt_1
	jmp LB_2416
LB_2419:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],226
	jnz LB_2420
	cmp BYTE [rdi+1],138
	jnz LB_2420
	cmp BYTE [rdi+2],162
	jnz LB_2420
	jmp LB_2421
LB_2420:
	mov r8,unt_1
	jmp LB_2416
LB_2421:
	add r14,3
	jmp LB_2417
LB_2416:
	lea rsp,[rsp+8*0]
	pop rdi
	pop r9 
	pop r14
	pop r13
	ret
LB_2417:
	jmp LB_2423
LB_2422:
	add r14,1 
LB_2423:
	cmp r14,r9
	jge LB_2424
	movzx rax,BYTE [r13+8+r14]
	cmp rax,9 
	jz LB_2422
	cmp rax,10 
	jz LB_2422
	cmp rax,32 
	jz LB_2422
LB_2424
	call GRM_209
	movzx rax,BYTE [r8+6]
	cmp rax,0
	jnz LB_2427
	jmp LB_2428
LB_2427:
	jmp LB_2425
LB_2428:
	lea rsp,[rsp-8*1]
	mov r8,[r8+8]
; .mov_ptn2 2'(= a13◂ [ {| l |}] ) ⊢ 8'(= a13◂ [ {| l |}] )
; .mov_ptn 2'(= a13◂ [ {| l |}] ) ⊢ 8'(= a13◂ [ {| l |}] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_2426
LB_2425:
	lea rsp,[rsp+8*0]
	pop rdi
	pop r9 
	pop r14
	pop r13
	ret
LB_2426:
	mov QWORD [rsp+8*1],r14
	mov r13,QWORD [rsp+16+8*1]
	mov r14,QWORD [rsp+8*1]
	jmp LB_2430
LB_2430
;; rsp=1 , %1658~1'(= r ) %1657~0'(= r ) %1656~8'(= a13◂ [ {| l |}] ) %1655~{ } 
; #20 { } ⊢ 1(<2)◂{ }
;; rsp=1 , %1659~1(<2)◂{ } %1658~1'(= r ) %1657~0'(= r ) %1656~8'(= a13◂ [ {| l |}] ) %1655~{ } 
; #20 { } ⊢ 1(<2)◂{ }
;; rsp=1 , %1660~1(<2)◂{ } %1659~1(<2)◂{ } %1658~1'(= r ) %1657~0'(= r ) %1656~8'(= a13◂ [ {| l |}] ) %1655~{ } 
; #21 { 8'(= a13◂ [ {| l |}] ) 1(<2)◂{ } } ⊢ 0(<2)◂{ 8'(= a13◂ [ {| l |}] ) 1(<2)◂{ } }
;; rsp=1 , %1661~0(<2)◂{ 8'(= a13◂ [ {| l |}] ) 1(<2)◂{ } } %1659~1(<2)◂{ } %1658~1'(= r ) %1657~0'(= r ) %1655~{ } 
; #22 { 1(<2)◂{ } 0(<2)◂{ 8'(= a13◂ [ {| l |}] ) 1(<2)◂{ } } } ⊢ 0(<2)◂{ 1(<2)◂{ } 0(<2)◂{ 8'(= a13◂ [ {| l |}] ) 1(<2)◂{ } } }
;; rsp=1 , %1662~0(<2)◂{ 1(<2)◂{ } 0(<2)◂{ 8'(= a13◂ [ {| l |}] ) 1(<2)◂{ } } } %1658~1'(= r ) %1657~0'(= r ) %1655~{ } 
; ∎ 0(<2)◂{ 1(<2)◂{ } 0(<2)◂{ 8'(= a13◂ [ {| l |}] ) 1(<2)◂{ } } }
; .dlt.ptn 1'(= r )
; .dlt.ptn 0'(= r )
; .dlt.ptn { }
; .mov_ptn2 0(<2)◂{ 1(<2)◂{ } 0(<2)◂{ 8'(= a13◂ [ {| l |}] ) 1(<2)◂{ } } } ⊢ 2'(= a3◂ [ *{ a2◂ [ a12◂ [ a9◂ [ ]{| l |}]]a2◂ [ a13◂ [ {| l |}]]}] )
; .mov_ptn 0(<2)◂{ 1(<2)◂{ } 0(<2)◂{ 8'(= a13◂ [ {| l |}] ) 1(<2)◂{ } } } ⊢ 2'(= a3◂ [ *{ a2◂ [ a12◂ [ a9◂ [ ]{| l |}]]a2◂ [ a13◂ [ {| l |}]]}] )
	mov rax,[SS_RCD_2_TOP]
	mov rsi,[rax] 
	mov QWORD [SS_RCD_2_TOP],rsi
	mov QWORD [rax],0
	mov r13,rax
	mov rax,unt 
	mov rax,unt_1
	mov rdi,r13
	mov QWORD [rdi+8+8*0],rax
	mov rax,[SS_RCD_2_TOP]
	mov rsi,[rax] 
	mov QWORD [SS_RCD_2_TOP],rsi
	mov QWORD [rax],0
	mov r14,rax
	mov rax,QWORD [rsp-8+8*1]
	mov rdi,r14
	mov QWORD [rdi+8+8*0],rax
	mov rax,unt 
	mov rax,unt_1
	mov rdi,r14
	mov QWORD [rdi+8+8*1],rax
	mov rax,r14
	mov BYTE [rax+6],0
	mov rdi,r13
	mov QWORD [rdi+8+8*1],rax
	mov rax,r13
	mov BYTE [rax+6],0
	mov r8,rax
	lea rsp,[rsp+8*1]
	jmp LB_2429
LB_2429:
	movzx rax,BYTE [r8+6]
	cmp rax,0
	jnz LB_2405
	pop r14
	pop r9
	add rsp,8
	pop r13
	ret
LB_2405:
	jmp LB_2433
LB_2432:
	add r14,1 
LB_2433:
	cmp r14,r9
	jge LB_2434
	movzx rax,BYTE [r13+8+r14]
	cmp rax,9 
	jz LB_2432
	cmp rax,10 
	jz LB_2432
	cmp rax,32 
	jz LB_2432
LB_2434
	call GRM_204
	movzx rax,BYTE [r8+6]
	cmp rax,0
	jnz LB_2437
	jmp LB_2438
LB_2437:
	jmp LB_2435
LB_2438:
	lea rsp,[rsp-8*1]
	mov r8,[r8+8]
; .mov_ptn2 2'(= a12◂ [ a9◂ [ ]{| l |}] ) ⊢ 8'(= a12◂ [ a9◂ [ ]{| l |}] )
; .mov_ptn 2'(= a12◂ [ a9◂ [ ]{| l |}] ) ⊢ 8'(= a12◂ [ a9◂ [ ]{| l |}] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_2436
LB_2435:
	lea rsp,[rsp+8*0]
	jmp LB_2431
LB_2436:
	jmp LB_2440
LB_2439:
	add r14,1 
LB_2440:
	cmp r14,r9
	jge LB_2441
	movzx rax,BYTE [r13+8+r14]
	cmp rax,9 
	jz LB_2439
	cmp rax,10 
	jz LB_2439
	cmp rax,32 
	jz LB_2439
LB_2441
	call GRM_203
	movzx rax,BYTE [r8+6]
	cmp rax,0
	jnz LB_2444
	jmp LB_2445
LB_2444:
	jmp LB_2442
LB_2445:
	lea rsp,[rsp-8*1]
	mov r8,[r8+8]
; .mov_ptn2 2'(= a2◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) ⊢ 9'(= a2◂ [ a12◂ [ a9◂ [ ]{| l |}]] )
; .mov_ptn 2'(= a2◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) ⊢ 9'(= a2◂ [ a12◂ [ a9◂ [ ]{| l |}]] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_2443
LB_2442:
	lea rsp,[rsp+8*1]
	jmp LB_2431
LB_2443:
	jmp LB_2447
LB_2446:
	add r14,1 
LB_2447:
	cmp r14,r9
	jge LB_2448
	movzx rax,BYTE [r13+8+r14]
	cmp rax,9 
	jz LB_2446
	cmp rax,10 
	jz LB_2446
	cmp rax,32 
	jz LB_2446
LB_2448
	lea rax,[r14+3]
	cmp rax,r9
	jg LB_2451
	jmp LB_2452
LB_2451:
	mov r8,unt_1
	jmp LB_2449
LB_2452:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],226
	jnz LB_2453
	cmp BYTE [rdi+1],138
	jnz LB_2453
	cmp BYTE [rdi+2],162
	jnz LB_2453
	jmp LB_2454
LB_2453:
	mov r8,unt_1
	jmp LB_2449
LB_2454:
	add r14,3
	jmp LB_2450
LB_2449:
	lea rsp,[rsp+8*2]
	jmp LB_2431
LB_2450:
	jmp LB_2456
LB_2455:
	add r14,1 
LB_2456:
	cmp r14,r9
	jge LB_2457
	movzx rax,BYTE [r13+8+r14]
	cmp rax,9 
	jz LB_2455
	cmp rax,10 
	jz LB_2455
	cmp rax,32 
	jz LB_2455
LB_2457
	call GRM_209
	movzx rax,BYTE [r8+6]
	cmp rax,0
	jnz LB_2460
	jmp LB_2461
LB_2460:
	jmp LB_2458
LB_2461:
	lea rsp,[rsp-8*1]
	mov r8,[r8+8]
; .mov_ptn2 2'(= a13◂ [ {| l |}] ) ⊢ 10'(= a13◂ [ {| l |}] )
; .mov_ptn 2'(= a13◂ [ {| l |}] ) ⊢ 10'(= a13◂ [ {| l |}] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_2459
LB_2458:
	lea rsp,[rsp+8*2]
	jmp LB_2431
LB_2459:
	jmp LB_2463
LB_2462:
	add r14,1 
LB_2463:
	cmp r14,r9
	jge LB_2464
	movzx rax,BYTE [r13+8+r14]
	cmp rax,9 
	jz LB_2462
	cmp rax,10 
	jz LB_2462
	cmp rax,32 
	jz LB_2462
LB_2464
	call GRM_208
	movzx rax,BYTE [r8+6]
	cmp rax,0
	jnz LB_2467
	jmp LB_2468
LB_2467:
	jmp LB_2465
LB_2468:
	lea rsp,[rsp-8*1]
	mov r8,[r8+8]
; .mov_ptn2 2'(= a2◂ [ a13◂ [ {| l |}]] ) ⊢ 11'(= a2◂ [ a13◂ [ {| l |}]] )
; .mov_ptn 2'(= a2◂ [ a13◂ [ {| l |}]] ) ⊢ 11'(= a2◂ [ a13◂ [ {| l |}]] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_2466
LB_2465:
	lea rsp,[rsp+8*3]
	jmp LB_2431
LB_2466:
	mov QWORD [rsp+8*4],r14
	mov r13,QWORD [rsp+16+8*4]
	mov r14,QWORD [rsp+8*4]
	jmp LB_2470
LB_2470
;; rsp=4 , %1668~1'(= r ) %1667~0'(= r ) %1666~11'(= a2◂ [ a13◂ [ {| l |}]] ) %1665~10'(= a13◂ [ {| l |}] ) %1664~9'(= a2◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) %1663~8'(= a12◂ [ a9◂ [ ]{| l |}] ) 
; #21 { 8'(= a12◂ [ a9◂ [ ]{| l |}] ) 9'(= a2◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) } ⊢ 0(<2)◂{ 8'(= a12◂ [ a9◂ [ ]{| l |}] ) 9'(= a2◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) }
;; rsp=4 , %1669~0(<2)◂{ 8'(= a12◂ [ a9◂ [ ]{| l |}] ) 9'(= a2◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) } %1668~1'(= r ) %1667~0'(= r ) %1666~11'(= a2◂ [ a13◂ [ {| l |}]] ) %1665~10'(= a13◂ [ {| l |}] ) 
; #21 { 10'(= a13◂ [ {| l |}] ) 11'(= a2◂ [ a13◂ [ {| l |}]] ) } ⊢ 0(<2)◂{ 10'(= a13◂ [ {| l |}] ) 11'(= a2◂ [ a13◂ [ {| l |}]] ) }
;; rsp=4 , %1670~0(<2)◂{ 10'(= a13◂ [ {| l |}] ) 11'(= a2◂ [ a13◂ [ {| l |}]] ) } %1669~0(<2)◂{ 8'(= a12◂ [ a9◂ [ ]{| l |}] ) 9'(= a2◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) } %1668~1'(= r ) %1667~0'(= r ) 
; #22 { 0(<2)◂{ 8'(= a12◂ [ a9◂ [ ]{| l |}] ) 9'(= a2◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) } 0(<2)◂{ 10'(= a13◂ [ {| l |}] ) 11'(= a2◂ [ a13◂ [ {| l |}]] ) } } ⊢ 0(<2)◂{ 0(<2)◂{ 8'(= a12◂ [ a9◂ [ ]{| l |}] ) 9'(= a2◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) } 0(<2)◂{ 10'(= a13◂ [ {| l |}] ) 11'(= a2◂ [ a13◂ [ {| l |}]] ) } }
;; rsp=4 , %1671~0(<2)◂{ 0(<2)◂{ 8'(= a12◂ [ a9◂ [ ]{| l |}] ) 9'(= a2◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) } 0(<2)◂{ 10'(= a13◂ [ {| l |}] ) 11'(= a2◂ [ a13◂ [ {| l |}]] ) } } %1668~1'(= r ) %1667~0'(= r ) 
; ∎ 0(<2)◂{ 0(<2)◂{ 8'(= a12◂ [ a9◂ [ ]{| l |}] ) 9'(= a2◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) } 0(<2)◂{ 10'(= a13◂ [ {| l |}] ) 11'(= a2◂ [ a13◂ [ {| l |}]] ) } }
; .dlt.ptn 1'(= r )
; .dlt.ptn 0'(= r )
; .mov_ptn2 0(<2)◂{ 0(<2)◂{ 8'(= a12◂ [ a9◂ [ ]{| l |}] ) 9'(= a2◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) } 0(<2)◂{ 10'(= a13◂ [ {| l |}] ) 11'(= a2◂ [ a13◂ [ {| l |}]] ) } } ⊢ 2'(= a3◂ [ *{ a2◂ [ a12◂ [ a9◂ [ ]{| l |}]]a2◂ [ a13◂ [ {| l |}]]}] )
; .mov_ptn 0(<2)◂{ 0(<2)◂{ 8'(= a12◂ [ a9◂ [ ]{| l |}] ) 9'(= a2◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) } 0(<2)◂{ 10'(= a13◂ [ {| l |}] ) 11'(= a2◂ [ a13◂ [ {| l |}]] ) } } ⊢ 2'(= a3◂ [ *{ a2◂ [ a12◂ [ a9◂ [ ]{| l |}]]a2◂ [ a13◂ [ {| l |}]]}] )
	mov rax,[SS_RCD_2_TOP]
	mov rsi,[rax] 
	mov QWORD [SS_RCD_2_TOP],rsi
	mov QWORD [rax],0
	mov r13,rax
	mov rax,[SS_RCD_2_TOP]
	mov rsi,[rax] 
	mov QWORD [SS_RCD_2_TOP],rsi
	mov QWORD [rax],0
	mov r14,rax
	mov rax,QWORD [rsp-8+8*4]
	mov rdi,r14
	mov QWORD [rdi+8+8*0],rax
	mov rax,QWORD [rsp-8+8*3]
	mov rdi,r14
	mov QWORD [rdi+8+8*1],rax
	mov rax,r14
	mov BYTE [rax+6],0
	mov rdi,r13
	mov QWORD [rdi+8+8*0],rax
	mov rax,[SS_RCD_2_TOP]
	mov rsi,[rax] 
	mov QWORD [SS_RCD_2_TOP],rsi
	mov QWORD [rax],0
	mov r14,rax
	mov rax,QWORD [rsp-8+8*2]
	mov rdi,r14
	mov QWORD [rdi+8+8*0],rax
	mov rax,QWORD [rsp-8+8*1]
	mov rdi,r14
	mov QWORD [rdi+8+8*1],rax
	mov rax,r14
	mov BYTE [rax+6],0
	mov rdi,r13
	mov QWORD [rdi+8+8*1],rax
	mov rax,r13
	mov BYTE [rax+6],0
	mov r8,rax
	lea rsp,[rsp+8*4]
	jmp LB_2469
LB_2469:
	movzx rax,BYTE [r8+6]
	cmp rax,0
	jnz LB_2431
	pop r14
	pop r9
	add rsp,8
	pop r13
	ret
LB_2431:
	pop rdi
	pop r9 
	pop r14
	pop r13
	ret
ETR_234:
	mov r9,0x0000_ffff_ffff_ffff
	and r9,[r13]
	call GRM_234
	ret
GRM_234:
	sub rsp,32
	mov QWORD [rsp+24],r13
	mov QWORD [rsp+16],r14 
	mov QWORD [rsp+8],r9
	jmp LB_2473
LB_2472:
	add r14,1 
LB_2473:
	cmp r14,r9
	jge LB_2474
	movzx rax,BYTE [r13+8+r14]
	cmp rax,9 
	jz LB_2472
	cmp rax,10 
	jz LB_2472
	cmp rax,32 
	jz LB_2472
LB_2474
	call GRM_217
	movzx rax,BYTE [r8+6]
	cmp rax,0
	jnz LB_2477
	jmp LB_2478
LB_2477:
	jmp LB_2475
LB_2478:
	lea rsp,[rsp-8*1]
	mov r8,[r8+8]
; .mov_ptn2 2'(= a35◂ [ *{ }] ) ⊢ 8'(= a35◂ [ *{ }] )
; .mov_ptn 2'(= a35◂ [ *{ }] ) ⊢ 8'(= a35◂ [ *{ }] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_2476
LB_2475:
	lea rsp,[rsp+8*0]
	jmp LB_2471
LB_2476:
	jmp LB_2480
LB_2479:
	add r14,1 
LB_2480:
	cmp r14,r9
	jge LB_2481
	movzx rax,BYTE [r13+8+r14]
	cmp rax,9 
	jz LB_2479
	cmp rax,10 
	jz LB_2479
	cmp rax,32 
	jz LB_2479
LB_2481
	lea rax,[r14+4]
	cmp rax,r9
	jg LB_2484
	jmp LB_2485
LB_2484:
	mov r8,unt_1
	jmp LB_2482
LB_2485:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],226
	jnz LB_2486
	cmp BYTE [rdi+1],136
	jnz LB_2486
	cmp BYTE [rdi+2],142
	jnz LB_2486
	cmp BYTE [rdi+3],124
	jnz LB_2486
	jmp LB_2487
LB_2486:
	mov r8,unt_1
	jmp LB_2482
LB_2487:
	add r14,4
	jmp LB_2483
LB_2482:
	lea rsp,[rsp+8*1]
	jmp LB_2471
LB_2483:
	mov QWORD [rsp+8*1],r14
	mov r13,QWORD [rsp+16+8*1]
	mov r14,QWORD [rsp+8*1]
	jmp LB_2489
LB_2489
;; rsp=1 , %1674~1'(= r ) %1673~0'(= r ) %1672~8'(= a35◂ [ *{ }] ) 
; #125 0'(= r ) ⊢ 6(<7)◂0'(= r )
;; rsp=1 , %1675~6(<7)◂0'(= r ) %1674~1'(= r ) %1672~8'(= a35◂ [ *{ }] ) 
; #193 6(<7)◂0'(= r ) ⊢ 0(<2)◂6(<7)◂0'(= r )
;; rsp=1 , %1676~0(<2)◂6(<7)◂0'(= r ) %1674~1'(= r ) %1672~8'(= a35◂ [ *{ }] ) 
; #22 0(<2)◂6(<7)◂0'(= r ) ⊢ 0(<2)◂0(<2)◂6(<7)◂0'(= r )
;; rsp=1 , %1677~0(<2)◂0(<2)◂6(<7)◂0'(= r ) %1674~1'(= r ) %1672~8'(= a35◂ [ *{ }] ) 
; ∎ 0(<2)◂0(<2)◂6(<7)◂0'(= r )
; .dlt.ptn 1'(= r )
; .dlt.ptn 8'(= a35◂ [ *{ }] )
;	.dlt adt ⊢ _  
; .mov_ptn2 0(<2)◂0(<2)◂6(<7)◂0'(= r ) ⊢ 2'(= a3◂ [ a35◂ [ a17◂ [ a9◂ [ ]{| l |}]]] )
; .mov_ptn 0(<2)◂0(<2)◂6(<7)◂0'(= r ) ⊢ 2'(= a3◂ [ a35◂ [ a17◂ [ a9◂ [ ]{| l |}]]] )
	mov rax,r13
	mov rdi,rax
	mov rax,[SS_LN_TOP]
	mov rsi,[rax]
	mov QWORD [SS_LN_TOP],rsi 
	mov QWORD [rax],0
	mov BYTE [rax+6],6
	mov QWORD [rax+8],rdi
	mov rdi,rax
	mov rax,[SS_LN_TOP]
	mov rsi,[rax]
	mov QWORD [SS_LN_TOP],rsi 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov rdi,rax
	mov rax,[SS_LN_TOP]
	mov rsi,[rax]
	mov QWORD [SS_LN_TOP],rsi 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	lea rsp,[rsp+8*1]
	jmp LB_2488
LB_2488:
	movzx rax,BYTE [r8+6]
	cmp rax,0
	jnz LB_2471
	pop r14
	pop r9
	add rsp,8
	pop r13
	ret
LB_2471:
	jmp LB_2492
LB_2491:
	add r14,1 
LB_2492:
	cmp r14,r9
	jge LB_2493
	movzx rax,BYTE [r13+8+r14]
	cmp rax,9 
	jz LB_2491
	cmp rax,10 
	jz LB_2491
	cmp rax,32 
	jz LB_2491
LB_2493
	call GRM_217
	movzx rax,BYTE [r8+6]
	cmp rax,0
	jnz LB_2496
	jmp LB_2497
LB_2496:
	jmp LB_2494
LB_2497:
	lea rsp,[rsp-8*1]
	mov r8,[r8+8]
; .mov_ptn2 2'(= a35◂ [ *{ }] ) ⊢ 8'(= a35◂ [ *{ }] )
; .mov_ptn 2'(= a35◂ [ *{ }] ) ⊢ 8'(= a35◂ [ *{ }] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_2495
LB_2494:
	lea rsp,[rsp+8*0]
	jmp LB_2490
LB_2495:
	jmp LB_2499
LB_2498:
	add r14,1 
LB_2499:
	cmp r14,r9
	jge LB_2500
	movzx rax,BYTE [r13+8+r14]
	cmp rax,9 
	jz LB_2498
	cmp rax,10 
	jz LB_2498
	cmp rax,32 
	jz LB_2498
LB_2500
	lea rax,[r14+3]
	cmp rax,r9
	jg LB_2503
	jmp LB_2504
LB_2503:
	mov r8,unt_1
	jmp LB_2501
LB_2504:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],226
	jnz LB_2505
	cmp BYTE [rdi+1],136
	jnz LB_2505
	cmp BYTE [rdi+2],142
	jnz LB_2505
	jmp LB_2506
LB_2505:
	mov r8,unt_1
	jmp LB_2501
LB_2506:
	add r14,3
	jmp LB_2502
LB_2501:
	lea rsp,[rsp+8*1]
	jmp LB_2490
LB_2502:
	sub rsp,32
	mov QWORD [rsp+24],r13
	mov QWORD [rsp+16],r14 
	mov QWORD [rsp+8],r9
	jmp LB_2510
LB_2509:
	add r14,1 
LB_2510:
	cmp r14,r9
	jge LB_2511
	movzx rax,BYTE [r13+8+r14]
	cmp rax,9 
	jz LB_2509
	cmp rax,10 
	jz LB_2509
	cmp rax,32 
	jz LB_2509
LB_2511
	call GRM_201
	movzx rax,BYTE [r8+6]
	cmp rax,0
	jnz LB_2514
	jmp LB_2515
LB_2514:
	jmp LB_2512
LB_2515:
	lea rsp,[rsp-8*1]
	mov r8,[r8+8]
; .mov_ptn2 2'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) ⊢ 8'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] )
; .mov_ptn 2'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) ⊢ 8'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_2513
LB_2512:
	lea rsp,[rsp+8*0]
	jmp LB_2508
LB_2513:
	mov QWORD [rsp+8*1],r14
	mov r13,QWORD [rsp+16+8*1]
	mov r14,QWORD [rsp+8*1]
	jmp LB_2517
LB_2517
;; rsp=1 , %1683~1'(= r ) %1682~0'(= r ) %1681~8'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) 
; #126 8'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) ⊢ 5(<7)◂8'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] )
;; rsp=1 , %1684~5(<7)◂8'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) %1683~1'(= r ) %1682~0'(= r ) 
; #193 5(<7)◂8'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) ⊢ 0(<2)◂5(<7)◂8'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] )
;; rsp=1 , %1685~0(<2)◂5(<7)◂8'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) %1683~1'(= r ) %1682~0'(= r ) 
; #22 0(<2)◂5(<7)◂8'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) ⊢ 0(<2)◂0(<2)◂5(<7)◂8'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] )
;; rsp=1 , %1686~0(<2)◂0(<2)◂5(<7)◂8'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) %1683~1'(= r ) %1682~0'(= r ) 
; ∎ 0(<2)◂0(<2)◂5(<7)◂8'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] )
; .dlt.ptn 1'(= r )
; .dlt.ptn 0'(= r )
; .mov_ptn2 0(<2)◂0(<2)◂5(<7)◂8'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) ⊢ 2'(= a3◂ [ a35◂ [ a17◂ [ a9◂ [ ]{| l |}]]] )
; .mov_ptn 0(<2)◂0(<2)◂5(<7)◂8'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) ⊢ 2'(= a3◂ [ a35◂ [ a17◂ [ a9◂ [ ]{| l |}]]] )
	mov rax,QWORD [rsp-8+8*1]
	mov rdi,rax
	mov rax,[SS_LN_TOP]
	mov rsi,[rax]
	mov QWORD [SS_LN_TOP],rsi 
	mov QWORD [rax],0
	mov BYTE [rax+6],5
	mov QWORD [rax+8],rdi
	mov rdi,rax
	mov rax,[SS_LN_TOP]
	mov rsi,[rax]
	mov QWORD [SS_LN_TOP],rsi 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov rdi,rax
	mov rax,[SS_LN_TOP]
	mov rsi,[rax]
	mov QWORD [SS_LN_TOP],rsi 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	lea rsp,[rsp+8*1]
	jmp LB_2516
LB_2516:
	movzx rax,BYTE [r8+6]
	cmp rax,0
	jnz LB_2508
	pop r14
	pop r9
	add rsp,8
	pop r13
	jmp LB_2507
LB_2508:
	jmp LB_2520
LB_2519:
	add r14,1 
LB_2520:
	cmp r14,r9
	jge LB_2521
	movzx rax,BYTE [r13+8+r14]
	cmp rax,9 
	jz LB_2519
	cmp rax,10 
	jz LB_2519
	cmp rax,32 
	jz LB_2519
LB_2521
	call GRM_220
	movzx rax,BYTE [r8+6]
	cmp rax,0
	jnz LB_2524
	jmp LB_2525
LB_2524:
	jmp LB_2522
LB_2525:
	lea rsp,[rsp-8*2]
; .mov_ptn2 2'(= *{ rr} ) ⊢ { 8'(= r ) 9'(= r ) }
; .mov_ptn 2'(= *{ rr} ) ⊢ { 8'(= r ) 9'(= r ) }
	mov rdi,r8
	mov rdi,QWORD [rdi+8+8*0]
	mov r10,rdi
	mov QWORD [rsp-8+8*2],r10
	mov rdi,r8
	mov rdi,QWORD [rdi+8+8*1]
	mov r11,rdi
	mov QWORD [rsp-8+8*1],r11
	jmp LB_2523
LB_2522:
	lea rsp,[rsp+8*0]
	jmp LB_2518
LB_2523:
	mov QWORD [rsp+8*2],r14
	mov r13,QWORD [rsp+16+8*2]
	mov r14,QWORD [rsp+8*2]
	jmp LB_2527
LB_2527
;; rsp=2 , %1689~1'(= r ) %1688~0'(= r ) %1687~{ 8'(= r ) 9'(= r ) } 
	jmp LB_2528
LB_2528:
; $ %[ "lc_code ∎ .. " ] ⊢ %[ "lc_code ∎ .. " ]
;; rsp=2 , %1690~%[ "lc_code ∎ .. " ] %1689~1'(= r ) %1688~0'(= r ) %1687~{ 8'(= r ) 9'(= r ) } 
; #20 { } ⊢ 1(<2)◂{ }
;; rsp=2 , %1691~1(<2)◂{ } %1690~%[ "lc_code ∎ .. " ] %1689~1'(= r ) %1688~0'(= r ) %1687~{ 8'(= r ) 9'(= r ) } 
; #21 { { 0'(= r ) 1'(= r ) %[ "lc_code ∎ .. " ] } 1(<2)◂{ } } ⊢ 0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "lc_code ∎ .. " ] } 1(<2)◂{ } }
;; rsp=2 , %1692~0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "lc_code ∎ .. " ] } 1(<2)◂{ } } %1687~{ 8'(= r ) 9'(= r ) } 
; #192 0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "lc_code ∎ .. " ] } 1(<2)◂{ } } ⊢ 1(<2)◂0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "lc_code ∎ .. " ] } 1(<2)◂{ } }
;; rsp=2 , %1693~1(<2)◂0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "lc_code ∎ .. " ] } 1(<2)◂{ } } %1687~{ 8'(= r ) 9'(= r ) } 
; #22 1(<2)◂0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "lc_code ∎ .. " ] } 1(<2)◂{ } } ⊢ 0(<2)◂1(<2)◂0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "lc_code ∎ .. " ] } 1(<2)◂{ } }
;; rsp=2 , %1694~0(<2)◂1(<2)◂0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "lc_code ∎ .. " ] } 1(<2)◂{ } } %1687~{ 8'(= r ) 9'(= r ) } 
; ∎ 0(<2)◂1(<2)◂0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "lc_code ∎ .. " ] } 1(<2)◂{ } }
; .dlt.ptn { 8'(= r ) 9'(= r ) }
; .mov_ptn2 0(<2)◂1(<2)◂0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "lc_code ∎ .. " ] } 1(<2)◂{ } } ⊢ 2'(= a3◂ [ a35◂ [ a17◂ [ a9◂ [ ]{| l |}]]] )
; .mov_ptn 0(<2)◂1(<2)◂0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "lc_code ∎ .. " ] } 1(<2)◂{ } } ⊢ 2'(= a3◂ [ a35◂ [ a17◂ [ a9◂ [ ]{| l |}]]] )
	mov rax,[SS_RCD_2_TOP]
	mov rsi,[rax] 
	mov QWORD [SS_RCD_2_TOP],rsi
	mov QWORD [rax],0
	mov r9,rax
	mov rax,[SS_RCD_3_TOP]
	mov rsi,[rax] 
	mov QWORD [SS_RCD_3_TOP],rsi
	mov QWORD [rax],0
	mov r10,rax
	mov rax,r13
	mov rdi,r10
	mov QWORD [rdi+8+8*0],rax
	mov rax,r14
	mov rdi,r10
	mov QWORD [rdi+8+8*1],rax
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	mov rdi,1  
	mov rsi,24
	xor rax,rax
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call calloc
	mov rsp,QWORD [rsp_tmp]  
	mov rdi,15
	mov rsi,0x_40_00_0000_0000_0000
	or rdi,rsi
	mov QWORD [rax],rdi
	mov QWORD [rax+8*2],0
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	mov BYTE [rax+8+0],108
	mov BYTE [rax+8+1],99
	mov BYTE [rax+8+2],95
	mov BYTE [rax+8+3],99
	mov BYTE [rax+8+4],111
	mov BYTE [rax+8+5],100
	mov BYTE [rax+8+6],101
	mov BYTE [rax+8+7],32
	mov BYTE [rax+8+8],226
	mov BYTE [rax+8+9],136
	mov BYTE [rax+8+10],142
	mov BYTE [rax+8+11],32
	mov BYTE [rax+8+12],46
	mov BYTE [rax+8+13],46
	mov BYTE [rax+8+14],32
	mov rdi,r10
	mov QWORD [rdi+8+8*2],rax
	mov rax,r10
	mov rdi,r9
	mov QWORD [rdi+8+8*0],rax
	mov rax,unt 
	mov rax,unt_1
	mov rdi,r9
	mov QWORD [rdi+8+8*1],rax
	mov rax,r9
	mov BYTE [rax+6],0
	mov rdi,rax
	mov rax,[SS_LN_TOP]
	mov rsi,[rax]
	mov QWORD [SS_LN_TOP],rsi 
	mov QWORD [rax],0
	mov BYTE [rax+6],1
	mov QWORD [rax+8],rdi
	mov rdi,rax
	mov rax,[SS_LN_TOP]
	mov rsi,[rax]
	mov QWORD [SS_LN_TOP],rsi 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	lea rsp,[rsp+8*2]
	jmp LB_2526
LB_2526:
	movzx rax,BYTE [r8+6]
	cmp rax,0
	jnz LB_2518
	pop r14
	pop r9
	add rsp,8
	pop r13
	jmp LB_2507
LB_2518:
	pop rdi
	pop r9 
	pop r14
	pop r13
	jmp LB_2507
LB_2507:
	movzx rax,BYTE [r8+6]
	cmp rax,0
	jnz LB_2529
	jmp LB_2530
LB_2529:
	lea rsp,[rsp+8*1]
	add rsp,8
	pop r9 
	pop r14 
	pop r13
	ret
LB_2530:
	mov QWORD [rsp+8*1],r14
	mov r8,[r8+8]
; .mov_ptn2 2'(= a35◂ [ a17◂ [ a9◂ [ ]{| l |}]] ) ⊢ 3'(= a35◂ [ a17◂ [ a9◂ [ ]{| l |}]] )
	mov r10,r9
; .mov_ptn 2'(= a35◂ [ a17◂ [ a9◂ [ ]{| l |}]] ) ⊢ 3'(= a35◂ [ a17◂ [ a9◂ [ ]{| l |}]] )
	mov rax,r8
	mov r9,rax
	mov r13,QWORD [rsp+16+8*1]
	mov r14,QWORD [rsp+8*1]
	jmp LB_2532
LB_2532
;; rsp=1 , %1695~3'(= a35◂ [ a17◂ [ a9◂ [ ]{| l |}]] ) %1680~1'(= r ) %1679~0'(= r ) %1678~8'(= a35◂ [ *{ }] ) 
; #22 3'(= a35◂ [ a17◂ [ a9◂ [ ]{| l |}]] ) ⊢ 0(<2)◂3'(= a35◂ [ a17◂ [ a9◂ [ ]{| l |}]] )
;; rsp=1 , %1696~0(<2)◂3'(= a35◂ [ a17◂ [ a9◂ [ ]{| l |}]] ) %1680~1'(= r ) %1679~0'(= r ) %1678~8'(= a35◂ [ *{ }] ) 
; ∎ 0(<2)◂3'(= a35◂ [ a17◂ [ a9◂ [ ]{| l |}]] )
; .dlt.ptn 1'(= r )
; .dlt.ptn 0'(= r )
; .dlt.ptn 8'(= a35◂ [ *{ }] )
;	.dlt adt ⊢ _  
; .mov_ptn2 0(<2)◂3'(= a35◂ [ a17◂ [ a9◂ [ ]{| l |}]] ) ⊢ 2'(= a3◂ [ a35◂ [ a17◂ [ a9◂ [ ]{| l |}]]] )
; .mov_ptn 0(<2)◂3'(= a35◂ [ a17◂ [ a9◂ [ ]{| l |}]] ) ⊢ 2'(= a3◂ [ a35◂ [ a17◂ [ a9◂ [ ]{| l |}]]] )
	mov rax,r9
	mov rdi,rax
	mov rax,[SS_LN_TOP]
	mov rsi,[rax]
	mov QWORD [SS_LN_TOP],rsi 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	lea rsp,[rsp+8*1]
	jmp LB_2531
LB_2531:
	movzx rax,BYTE [r8+6]
	cmp rax,0
	jnz LB_2490
	pop r14
	pop r9
	add rsp,8
	pop r13
	ret
LB_2490:
	jmp LB_2535
LB_2534:
	add r14,1 
LB_2535:
	cmp r14,r9
	jge LB_2536
	movzx rax,BYTE [r13+8+r14]
	cmp rax,9 
	jz LB_2534
	cmp rax,32 
	jz LB_2534
LB_2536
	call GRM_217
	movzx rax,BYTE [r8+6]
	cmp rax,0
	jnz LB_2539
	jmp LB_2540
LB_2539:
	jmp LB_2537
LB_2540:
	lea rsp,[rsp-8*1]
	mov r8,[r8+8]
; .mov_ptn2 2'(= a35◂ [ *{ }] ) ⊢ 8'(= a35◂ [ *{ }] )
; .mov_ptn 2'(= a35◂ [ *{ }] ) ⊢ 8'(= a35◂ [ *{ }] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_2538
LB_2537:
	lea rsp,[rsp+8*0]
	jmp LB_2533
LB_2538:
	jmp LB_2542
LB_2541:
	add r14,1 
LB_2542:
	cmp r14,r9
	jge LB_2543
	movzx rax,BYTE [r13+8+r14]
	cmp rax,9 
	jz LB_2541
	cmp rax,32 
	jz LB_2541
LB_2543
	lea rax,[r14+1]
	cmp rax,r9
	jg LB_2546
	jmp LB_2547
LB_2546:
	mov r8,unt_1
	jmp LB_2544
LB_2547:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],94
	jnz LB_2548
	jmp LB_2549
LB_2548:
	mov r8,unt_1
	jmp LB_2544
LB_2549:
	add r14,1
	jmp LB_2545
LB_2544:
	lea rsp,[rsp+8*1]
	jmp LB_2533
LB_2545:
	jmp LB_2551
LB_2550:
	add r14,1 
LB_2551:
	cmp r14,r9
	jge LB_2552
	movzx rax,BYTE [r13+8+r14]
	cmp rax,9 
	jz LB_2550
	cmp rax,32 
	jz LB_2550
LB_2552
	call GRM_233
	movzx rax,BYTE [r8+6]
	cmp rax,0
	jnz LB_2555
	jmp LB_2556
LB_2555:
	jmp LB_2553
LB_2556:
	lea rsp,[rsp-8*2]
; .mov_ptn2 2'(= *{ a2◂ [ a12◂ [ a9◂ [ ]{| l |}]]a2◂ [ a13◂ [ {| l |}]]} ) ⊢ { 9'(= a2◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) 10'(= a2◂ [ a13◂ [ {| l |}]] ) }
; .mov_ptn 2'(= *{ a2◂ [ a12◂ [ a9◂ [ ]{| l |}]]a2◂ [ a13◂ [ {| l |}]]} ) ⊢ { 9'(= a2◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) 10'(= a2◂ [ a13◂ [ {| l |}]] ) }
	mov rdi,r8
	mov rdi,QWORD [rdi+8+8*0]
	mov r10,rdi
	mov QWORD [rsp-8+8*2],r10
	mov rdi,r8
	mov rdi,QWORD [rdi+8+8*1]
	mov r11,rdi
	mov QWORD [rsp-8+8*1],r11
	jmp LB_2554
LB_2553:
	lea rsp,[rsp+8*1]
	pop rdi
	pop r9 
	pop r14
	pop r13
	ret
LB_2554:
	jmp LB_2558
LB_2557:
	add r14,1 
LB_2558:
	cmp r14,r9
	jge LB_2559
	movzx rax,BYTE [r13+8+r14]
	cmp rax,9 
	jz LB_2557
	cmp rax,32 
	jz LB_2557
LB_2559
	lea rax,[r14+1]
	cmp rax,r9
	jg LB_2562
	jmp LB_2563
LB_2562:
	mov r8,unt_1
	jmp LB_2560
LB_2563:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],10
	jnz LB_2564
	jmp LB_2565
LB_2564:
	mov r8,unt_1
	jmp LB_2560
LB_2565:
	add r14,1
	jmp LB_2561
LB_2560:
	lea rsp,[rsp+8*3]
	pop rdi
	pop r9 
	pop r14
	pop r13
	ret
LB_2561:
	jmp LB_2567
LB_2566:
	add r14,1 
LB_2567:
	cmp r14,r9
	jge LB_2568
	movzx rax,BYTE [r13+8+r14]
	cmp rax,9 
	jz LB_2566
	cmp rax,32 
	jz LB_2566
LB_2568
	call GRM_231
	movzx rax,BYTE [r8+6]
	cmp rax,0
	jnz LB_2571
	jmp LB_2572
LB_2571:
	jmp LB_2569
LB_2572:
	lea rsp,[rsp-8*1]
	mov r8,[r8+8]
; .mov_ptn2 2'(= a2◂ [ a16◂ [ a9◂ [ ]]] ) ⊢ 11'(= a2◂ [ a16◂ [ a9◂ [ ]]] )
; .mov_ptn 2'(= a2◂ [ a16◂ [ a9◂ [ ]]] ) ⊢ 11'(= a2◂ [ a16◂ [ a9◂ [ ]]] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_2570
LB_2569:
	lea rsp,[rsp+8*3]
	pop rdi
	pop r9 
	pop r14
	pop r13
	ret
LB_2570:
	jmp LB_2574
LB_2573:
	add r14,1 
LB_2574:
	cmp r14,r9
	jge LB_2575
	movzx rax,BYTE [r13+8+r14]
	cmp rax,9 
	jz LB_2573
	cmp rax,32 
	jz LB_2573
LB_2575
	call GRM_234
	movzx rax,BYTE [r8+6]
	cmp rax,0
	jnz LB_2578
	jmp LB_2579
LB_2578:
	jmp LB_2576
LB_2579:
	lea rsp,[rsp-8*1]
	mov r8,[r8+8]
; .mov_ptn2 2'(= a35◂ [ a17◂ [ a9◂ [ ]{| l |}]] ) ⊢ 12'(= a35◂ [ a17◂ [ a9◂ [ ]{| l |}]] )
; .mov_ptn 2'(= a35◂ [ a17◂ [ a9◂ [ ]{| l |}]] ) ⊢ 12'(= a35◂ [ a17◂ [ a9◂ [ ]{| l |}]] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_2577
LB_2576:
	lea rsp,[rsp+8*4]
	pop rdi
	pop r9 
	pop r14
	pop r13
	ret
LB_2577:
	mov QWORD [rsp+8*5],r14
	mov r13,QWORD [rsp+16+8*5]
	mov r14,QWORD [rsp+8*5]
	jmp LB_2581
LB_2583: ; 51 { 0'(= a2◂ [ a16◂ [ a9◂ [ ]]] ) 1'(= a2◂ [ a16◂ [ a9◂ [ ]]] ) } ⊢ 0'(= a2◂ [ a16◂ [ a9◂ [ ]]] ) : ({ _lst◂4627'(=4628'(=_t16◂_t9)) _lst◂_t16◂_t9 }→_lst◂_t16◂_t9)
;; rsp=0 , %116~1'(= a2◂ [ a16◂ [ a9◂ [ ]]] ) %115~0'(= a2◂ [ a16◂ [ a9◂ [ ]]] ) 
;; ? 1'(= a2◂ [ a16◂ [ a9◂ [ ]]] ) ⊢ 1(<2)◂{ }
	mov rdi,r14
	movzx rax,BYTE [rdi+6]
	cmp rax,1
	jnz LB_2584
;; rsp=0 , %115~0'(= a2◂ [ a16◂ [ a9◂ [ ]]] ) 
; ∎ 0'(= a2◂ [ a16◂ [ a9◂ [ ]]] )
; .mov_ptn2 0'(= a2◂ [ a16◂ [ a9◂ [ ]]] ) ⊢ 0'(= a2◂ [ a16◂ [ a9◂ [ ]]] )
	ret
LB_2584:
;; ? 1'(= a2◂ [ a16◂ [ a9◂ [ ]]] ) ⊢ 0(<2)◂{ 2'(= a16◂ [ a9◂ [ ]] ) 3'(= a2◂ [ a16◂ [ a9◂ [ ]]] ) }
	mov rdi,r14
	mov rdi,QWORD [rdi+8+8*0]
	mov r8,rdi
	mov rdi,r14
	mov rdi,QWORD [rdi+8+8*1]
	mov r9,rdi
;; rsp=0 , %118~3'(= a2◂ [ a16◂ [ a9◂ [ ]]] ) %117~2'(= a16◂ [ a9◂ [ ]] ) %115~0'(= a2◂ [ a16◂ [ a9◂ [ ]]] ) 
; #21 { 2'(= a16◂ [ a9◂ [ ]] ) 0'(= a2◂ [ a16◂ [ a9◂ [ ]]] ) } ⊢ 0(<2)◂{ 2'(= a16◂ [ a9◂ [ ]] ) 0'(= a2◂ [ a16◂ [ a9◂ [ ]]] ) }
;; rsp=0 , %119~0(<2)◂{ 2'(= a16◂ [ a9◂ [ ]] ) 0'(= a2◂ [ a16◂ [ a9◂ [ ]]] ) } %118~3'(= a2◂ [ a16◂ [ a9◂ [ ]]] ) 
; rsp_d=0, #51 { 0(<2)◂{ 2'(= a16◂ [ a9◂ [ ]] ) 0'(= a2◂ [ a16◂ [ a9◂ [ ]]] ) } 3'(= a2◂ [ a16◂ [ a9◂ [ ]]] ) } ⊢ 0'(= a2◂ [ a16◂ [ a9◂ [ ]]] )
; .mov_ptn2 { 0(<2)◂{ 2'(= a16◂ [ a9◂ [ ]] ) 0'(= a2◂ [ a16◂ [ a9◂ [ ]]] ) } 3'(= a2◂ [ a16◂ [ a9◂ [ ]]] ) } ⊢ { 0'(= a2◂ [ a16◂ [ a9◂ [ ]]] ) 1'(= a2◂ [ a16◂ [ a9◂ [ ]]] ) }
; .mov_ptn 3'(= a2◂ [ a16◂ [ a9◂ [ ]]] ) ⊢ 1'(= a2◂ [ a16◂ [ a9◂ [ ]]] )
	mov rax,r9
	mov r14,rax
	mov r10,r13
; .mov_ptn 0(<2)◂{ 2'(= a16◂ [ a9◂ [ ]] ) 4'(= a2◂ [ a16◂ [ a9◂ [ ]]] ) } ⊢ 0'(= a2◂ [ a16◂ [ a9◂ [ ]]] )
	mov rax,[SS_RCD_2_TOP]
	mov rsi,[rax] 
	mov QWORD [SS_RCD_2_TOP],rsi
	mov QWORD [rax],0
	mov r9,rax
	mov rax,r8
	mov rdi,r9
	mov QWORD [rdi+8+8*0],rax
	mov rax,r10
	mov rdi,r9
	mov QWORD [rdi+8+8*1],rax
	mov rax,r9
	mov BYTE [rax+6],0
	mov r13,rax
	call LB_2583

;; rsp=0 , %120~0'(= a2◂ [ a16◂ [ a9◂ [ ]]] ) 
; ∎ 0'(= a2◂ [ a16◂ [ a9◂ [ ]]] )
; .mov_ptn2 0'(= a2◂ [ a16◂ [ a9◂ [ ]]] ) ⊢ 0'(= a2◂ [ a16◂ [ a9◂ [ ]]] )
	ret
LB_2582: ; 52 0'(= a2◂ [ a16◂ [ a9◂ [ ]]] ) ⊢ 0'(= a2◂ [ a16◂ [ a9◂ [ ]]] ) : (_lst◂_t16◂_t9→_lst◂_t16◂_t9)
;; rsp=0 , %121~0'(= a2◂ [ a16◂ [ a9◂ [ ]]] ) 
; #20 { } ⊢ 1(<2)◂{ }
;; rsp=0 , %122~1(<2)◂{ } %121~0'(= a2◂ [ a16◂ [ a9◂ [ ]]] ) 
; rsp_d=0, #51 { 1(<2)◂{ } 0'(= a2◂ [ a16◂ [ a9◂ [ ]]] ) } ⊢ 0'(= a2◂ [ a16◂ [ a9◂ [ ]]] )
; .mov_ptn2 { 1(<2)◂{ } 0'(= a2◂ [ a16◂ [ a9◂ [ ]]] ) } ⊢ { 0'(= a2◂ [ a16◂ [ a9◂ [ ]]] ) 1'(= a2◂ [ a16◂ [ a9◂ [ ]]] ) }
; .mov_ptn 0'(= a2◂ [ a16◂ [ a9◂ [ ]]] ) ⊢ 1'(= a2◂ [ a16◂ [ a9◂ [ ]]] )
	mov rax,r13
	mov r14,rax
; .mov_ptn 1(<2)◂{ } ⊢ 0'(= a2◂ [ a16◂ [ a9◂ [ ]]] )
	mov rax,unt 
	mov rax,unt_1
	mov r13,rax
	call LB_2583

;; rsp=0 , %123~0'(= a2◂ [ a16◂ [ a9◂ [ ]]] ) 
; ∎ 0'(= a2◂ [ a16◂ [ a9◂ [ ]]] )
; .mov_ptn2 0'(= a2◂ [ a16◂ [ a9◂ [ ]]] ) ⊢ 0'(= a2◂ [ a16◂ [ a9◂ [ ]]] )
	ret
LB_2581
;; rsp=5 , %1703~1'(= r ) %1702~0'(= r ) %1701~12'(= a35◂ [ a17◂ [ a9◂ [ ]{| l |}]] ) %1700~11'(= a2◂ [ a16◂ [ a9◂ [ ]]] ) %1699~10'(= a2◂ [ a13◂ [ {| l |}]] ) %1698~9'(= a2◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) %1697~8'(= a35◂ [ *{ }] ) 
; rsp_d=0, #52 11'(= a2◂ [ a16◂ [ a9◂ [ ]]] ) ⊢ 2'(= a2◂ [ a16◂ [ a9◂ [ ]]] )
	lea rsp,[rsp-8*2]
	mov QWORD [rsp+8*0],r13
	mov QWORD [rsp+8*1],r14
; .mov_ptn2 11'(= a2◂ [ a16◂ [ a9◂ [ ]]] ) ⊢ 0'(= a2◂ [ a16◂ [ a9◂ [ ]]] )
; .mov_ptn 11'(= a2◂ [ a16◂ [ a9◂ [ ]]] ) ⊢ 0'(= a2◂ [ a16◂ [ a9◂ [ ]]] )
	mov rax,QWORD [rsp-8+8*4]
	mov r13,rax
	call LB_2582

	mov r14,QWORD [rsp-8+8*2]
	mov rax,QWORD [rsp-8+8*1]
	mov r8,r13
	mov r13,rax
	lea rsp,[rsp+8*2]
;; rsp=5 , %1704~2'(= a2◂ [ a16◂ [ a9◂ [ ]]] ) %1703~1'(= r ) %1702~0'(= r ) %1701~12'(= a35◂ [ a17◂ [ a9◂ [ ]{| l |}]] ) %1699~10'(= a2◂ [ a13◂ [ {| l |}]] ) %1698~9'(= a2◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) %1697~8'(= a35◂ [ *{ }] ) 
; #119 { 2'(= a2◂ [ a16◂ [ a9◂ [ ]]] ) 9'(= a2◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) 10'(= a2◂ [ a13◂ [ {| l |}]] ) } ⊢ 3(<4)◂{ 2'(= a2◂ [ a16◂ [ a9◂ [ ]]] ) 9'(= a2◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) 10'(= a2◂ [ a13◂ [ {| l |}]] ) }
;; rsp=5 , %1705~3(<4)◂{ 2'(= a2◂ [ a16◂ [ a9◂ [ ]]] ) 9'(= a2◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) 10'(= a2◂ [ a13◂ [ {| l |}]] ) } %1703~1'(= r ) %1702~0'(= r ) %1701~12'(= a35◂ [ a17◂ [ a9◂ [ ]{| l |}]] ) %1697~8'(= a35◂ [ *{ }] ) 
;; ? 12'(= a35◂ [ a17◂ [ a9◂ [ ]{| l |}]] ) ⊢ 0(<2)◂3'(= a17◂ [ a9◂ [ ]{| l |}] )
	mov rdi,QWORD [rsp-8+8*1]
	movzx rax,BYTE [rdi+6]
	cmp rax,0
	jnz LB_2585
	mov rax,QWORD [rdi+8]
	mov r9,rax
;; rsp=5 , %1707~3'(= a17◂ [ a9◂ [ ]{| l |}] ) %1705~3(<4)◂{ 2'(= a2◂ [ a16◂ [ a9◂ [ ]]] ) 9'(= a2◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) 10'(= a2◂ [ a13◂ [ {| l |}]] ) } %1703~1'(= r ) %1702~0'(= r ) %1697~8'(= a35◂ [ *{ }] ) 
; #129 { 3(<4)◂{ 2'(= a2◂ [ a16◂ [ a9◂ [ ]]] ) 9'(= a2◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) 10'(= a2◂ [ a13◂ [ {| l |}]] ) } 3'(= a17◂ [ a9◂ [ ]{| l |}] ) } ⊢ 2(<7)◂{ 3(<4)◂{ 2'(= a2◂ [ a16◂ [ a9◂ [ ]]] ) 9'(= a2◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) 10'(= a2◂ [ a13◂ [ {| l |}]] ) } 3'(= a17◂ [ a9◂ [ ]{| l |}] ) }
;; rsp=5 , %1708~2(<7)◂{ 3(<4)◂{ 2'(= a2◂ [ a16◂ [ a9◂ [ ]]] ) 9'(= a2◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) 10'(= a2◂ [ a13◂ [ {| l |}]] ) } 3'(= a17◂ [ a9◂ [ ]{| l |}] ) } %1703~1'(= r ) %1702~0'(= r ) %1697~8'(= a35◂ [ *{ }] ) 
; #193 2(<7)◂{ 3(<4)◂{ 2'(= a2◂ [ a16◂ [ a9◂ [ ]]] ) 9'(= a2◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) 10'(= a2◂ [ a13◂ [ {| l |}]] ) } 3'(= a17◂ [ a9◂ [ ]{| l |}] ) } ⊢ 0(<2)◂2(<7)◂{ 3(<4)◂{ 2'(= a2◂ [ a16◂ [ a9◂ [ ]]] ) 9'(= a2◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) 10'(= a2◂ [ a13◂ [ {| l |}]] ) } 3'(= a17◂ [ a9◂ [ ]{| l |}] ) }
;; rsp=5 , %1709~0(<2)◂2(<7)◂{ 3(<4)◂{ 2'(= a2◂ [ a16◂ [ a9◂ [ ]]] ) 9'(= a2◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) 10'(= a2◂ [ a13◂ [ {| l |}]] ) } 3'(= a17◂ [ a9◂ [ ]{| l |}] ) } %1703~1'(= r ) %1702~0'(= r ) %1697~8'(= a35◂ [ *{ }] ) 
; #22 0(<2)◂2(<7)◂{ 3(<4)◂{ 2'(= a2◂ [ a16◂ [ a9◂ [ ]]] ) 9'(= a2◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) 10'(= a2◂ [ a13◂ [ {| l |}]] ) } 3'(= a17◂ [ a9◂ [ ]{| l |}] ) } ⊢ 0(<2)◂0(<2)◂2(<7)◂{ 3(<4)◂{ 2'(= a2◂ [ a16◂ [ a9◂ [ ]]] ) 9'(= a2◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) 10'(= a2◂ [ a13◂ [ {| l |}]] ) } 3'(= a17◂ [ a9◂ [ ]{| l |}] ) }
;; rsp=5 , %1710~0(<2)◂0(<2)◂2(<7)◂{ 3(<4)◂{ 2'(= a2◂ [ a16◂ [ a9◂ [ ]]] ) 9'(= a2◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) 10'(= a2◂ [ a13◂ [ {| l |}]] ) } 3'(= a17◂ [ a9◂ [ ]{| l |}] ) } %1703~1'(= r ) %1702~0'(= r ) %1697~8'(= a35◂ [ *{ }] ) 
; ∎ 0(<2)◂0(<2)◂2(<7)◂{ 3(<4)◂{ 2'(= a2◂ [ a16◂ [ a9◂ [ ]]] ) 9'(= a2◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) 10'(= a2◂ [ a13◂ [ {| l |}]] ) } 3'(= a17◂ [ a9◂ [ ]{| l |}] ) }
; .dlt.ptn 1'(= r )
; .dlt.ptn 0'(= r )
; .dlt.ptn 8'(= a35◂ [ *{ }] )
;	.dlt adt ⊢ _  
; .mov_ptn2 0(<2)◂0(<2)◂2(<7)◂{ 3(<4)◂{ 2'(= a2◂ [ a16◂ [ a9◂ [ ]]] ) 9'(= a2◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) 10'(= a2◂ [ a13◂ [ {| l |}]] ) } 3'(= a17◂ [ a9◂ [ ]{| l |}] ) } ⊢ 2'(= a3◂ [ a35◂ [ a17◂ [ a9◂ [ ]{| l |}]]] )
	mov r13,r8
; .mov_ptn 0(<2)◂0(<2)◂2(<7)◂{ 3(<4)◂{ 0'(= a2◂ [ a16◂ [ a9◂ [ ]]] ) 9'(= a2◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) 10'(= a2◂ [ a13◂ [ {| l |}]] ) } 3'(= a17◂ [ a9◂ [ ]{| l |}] ) } ⊢ 2'(= a3◂ [ a35◂ [ a17◂ [ a9◂ [ ]{| l |}]]] )
	mov rax,[SS_RCD_2_TOP]
	mov rsi,[rax] 
	mov QWORD [SS_RCD_2_TOP],rsi
	mov QWORD [rax],0
	mov r14,rax
	mov rax,[SS_RCD_3_TOP]
	mov rsi,[rax] 
	mov QWORD [SS_RCD_3_TOP],rsi
	mov QWORD [rax],0
	mov r10,rax
	mov rax,r13
	mov rdi,r10
	mov QWORD [rdi+8+8*0],rax
	mov rax,QWORD [rsp-8+8*4]
	mov rdi,r10
	mov QWORD [rdi+8+8*1],rax
	mov rax,QWORD [rsp-8+8*3]
	mov rdi,r10
	mov QWORD [rdi+8+8*2],rax
	mov rax,r10
	mov BYTE [rax+6],3
	mov rdi,r14
	mov QWORD [rdi+8+8*0],rax
	mov rax,r9
	mov rdi,r14
	mov QWORD [rdi+8+8*1],rax
	mov rax,r14
	mov BYTE [rax+6],2
	mov rdi,rax
	mov rax,[SS_LN_TOP]
	mov rsi,[rax]
	mov QWORD [SS_LN_TOP],rsi 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov rdi,rax
	mov rax,[SS_LN_TOP]
	mov rsi,[rax]
	mov QWORD [SS_LN_TOP],rsi 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	lea rsp,[rsp+8*5]
	jmp LB_2580
LB_2585:
;; ? 12'(= a35◂ [ a17◂ [ a9◂ [ ]{| l |}]] ) ⊢ 1(<2)◂12'(= a2◂ [ *{ rr{| l |}}] )
;; rsp=5 , %1706~12'(= a2◂ [ *{ rr{| l |}}] ) %1705~3(<4)◂{ 2'(= a2◂ [ a16◂ [ a9◂ [ ]]] ) 9'(= a2◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) 10'(= a2◂ [ a13◂ [ {| l |}]] ) } %1703~1'(= r ) %1702~0'(= r ) %1697~8'(= a35◂ [ *{ }] ) 
; #192 12'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 1(<2)◂12'(= a2◂ [ *{ rr{| l |}}] )
;; rsp=5 , %1711~1(<2)◂12'(= a2◂ [ *{ rr{| l |}}] ) %1705~3(<4)◂{ 2'(= a2◂ [ a16◂ [ a9◂ [ ]]] ) 9'(= a2◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) 10'(= a2◂ [ a13◂ [ {| l |}]] ) } %1703~1'(= r ) %1702~0'(= r ) %1697~8'(= a35◂ [ *{ }] ) 
; #22 1(<2)◂12'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 0(<2)◂1(<2)◂12'(= a2◂ [ *{ rr{| l |}}] )
;; rsp=5 , %1712~0(<2)◂1(<2)◂12'(= a2◂ [ *{ rr{| l |}}] ) %1705~3(<4)◂{ 2'(= a2◂ [ a16◂ [ a9◂ [ ]]] ) 9'(= a2◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) 10'(= a2◂ [ a13◂ [ {| l |}]] ) } %1703~1'(= r ) %1702~0'(= r ) %1697~8'(= a35◂ [ *{ }] ) 
; ∎ 0(<2)◂1(<2)◂12'(= a2◂ [ *{ rr{| l |}}] )
; .dlt.ptn 3(<4)◂{ 2'(= a2◂ [ a16◂ [ a9◂ [ ]]] ) 9'(= a2◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) 10'(= a2◂ [ a13◂ [ {| l |}]] ) }
;	.dlt adt ⊢ _  
;	.dlt adt ⊢ _  
;	.dlt adt ⊢ _  
; .dlt.ptn 1'(= r )
; .dlt.ptn 0'(= r )
; .dlt.ptn 8'(= a35◂ [ *{ }] )
;	.dlt adt ⊢ _  
; .mov_ptn2 0(<2)◂1(<2)◂12'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 2'(= a3◂ [ a35◂ [ a17◂ [ a9◂ [ ]{| l |}]]] )
; .mov_ptn 0(<2)◂1(<2)◂12'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 2'(= a3◂ [ a35◂ [ a17◂ [ a9◂ [ ]{| l |}]]] )
	mov rax,QWORD [rsp-8+8*1]
	mov rdi,rax
	mov rax,[SS_LN_TOP]
	mov rsi,[rax]
	mov QWORD [SS_LN_TOP],rsi 
	mov QWORD [rax],0
	mov BYTE [rax+6],1
	mov QWORD [rax+8],rdi
	mov rdi,rax
	mov rax,[SS_LN_TOP]
	mov rsi,[rax]
	mov QWORD [SS_LN_TOP],rsi 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	lea rsp,[rsp+8*5]
	jmp LB_2580
LB_2580:
	movzx rax,BYTE [r8+6]
	cmp rax,0
	jnz LB_2533
	pop r14
	pop r9
	add rsp,8
	pop r13
	ret
LB_2533:
	jmp LB_2588
LB_2587:
	add r14,1 
LB_2588:
	cmp r14,r9
	jge LB_2589
	movzx rax,BYTE [r13+8+r14]
	cmp rax,9 
	jz LB_2587
	cmp rax,10 
	jz LB_2587
	cmp rax,32 
	jz LB_2587
LB_2589
	call GRM_217
	movzx rax,BYTE [r8+6]
	cmp rax,0
	jnz LB_2592
	jmp LB_2593
LB_2592:
	jmp LB_2590
LB_2593:
	lea rsp,[rsp-8*1]
	mov r8,[r8+8]
; .mov_ptn2 2'(= a35◂ [ *{ }] ) ⊢ 8'(= a35◂ [ *{ }] )
; .mov_ptn 2'(= a35◂ [ *{ }] ) ⊢ 8'(= a35◂ [ *{ }] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_2591
LB_2590:
	lea rsp,[rsp+8*0]
	jmp LB_2586
LB_2591:
	jmp LB_2595
LB_2594:
	add r14,1 
LB_2595:
	cmp r14,r9
	jge LB_2596
	movzx rax,BYTE [r13+8+r14]
	cmp rax,9 
	jz LB_2594
	cmp rax,10 
	jz LB_2594
	cmp rax,32 
	jz LB_2594
LB_2596
	lea rax,[r14+3]
	cmp rax,r9
	jg LB_2599
	jmp LB_2600
LB_2599:
	mov r8,unt_1
	jmp LB_2597
LB_2600:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],226
	jnz LB_2601
	cmp BYTE [rdi+1],151
	jnz LB_2601
	cmp BYTE [rdi+2],130
	jnz LB_2601
	jmp LB_2602
LB_2601:
	mov r8,unt_1
	jmp LB_2597
LB_2602:
	add r14,3
	jmp LB_2598
LB_2597:
	lea rsp,[rsp+8*1]
	jmp LB_2586
LB_2598:
	jmp LB_2604
LB_2603:
	add r14,1 
LB_2604:
	cmp r14,r9
	jge LB_2605
	movzx rax,BYTE [r13+8+r14]
	cmp rax,9 
	jz LB_2603
	cmp rax,10 
	jz LB_2603
	cmp rax,32 
	jz LB_2603
LB_2605
	call GRM_204
	movzx rax,BYTE [r8+6]
	cmp rax,0
	jnz LB_2608
	jmp LB_2609
LB_2608:
	jmp LB_2606
LB_2609:
	lea rsp,[rsp-8*1]
	mov r8,[r8+8]
; .mov_ptn2 2'(= a12◂ [ a9◂ [ ]{| l |}] ) ⊢ 9'(= a12◂ [ a9◂ [ ]{| l |}] )
; .mov_ptn 2'(= a12◂ [ a9◂ [ ]{| l |}] ) ⊢ 9'(= a12◂ [ a9◂ [ ]{| l |}] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_2607
LB_2606:
	lea rsp,[rsp+8*1]
	pop rdi
	pop r9 
	pop r14
	pop r13
	ret
LB_2607:
	jmp LB_2611
LB_2610:
	add r14,1 
LB_2611:
	cmp r14,r9
	jge LB_2612
	movzx rax,BYTE [r13+8+r14]
	cmp rax,9 
	jz LB_2610
	cmp rax,10 
	jz LB_2610
	cmp rax,32 
	jz LB_2610
LB_2612
	lea rax,[r14+1]
	cmp rax,r9
	jg LB_2615
	jmp LB_2616
LB_2615:
	mov r8,unt_1
	jmp LB_2613
LB_2616:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],44
	jnz LB_2617
	jmp LB_2618
LB_2617:
	mov r8,unt_1
	jmp LB_2613
LB_2618:
	add r14,1
	jmp LB_2614
LB_2613:
	lea rsp,[rsp+8*2]
	pop rdi
	pop r9 
	pop r14
	pop r13
	ret
LB_2614:
	jmp LB_2620
LB_2619:
	add r14,1 
LB_2620:
	cmp r14,r9
	jge LB_2621
	movzx rax,BYTE [r13+8+r14]
	cmp rax,9 
	jz LB_2619
	cmp rax,10 
	jz LB_2619
	cmp rax,32 
	jz LB_2619
LB_2621
	call GRM_201
	movzx rax,BYTE [r8+6]
	cmp rax,0
	jnz LB_2624
	jmp LB_2625
LB_2624:
	jmp LB_2622
LB_2625:
	lea rsp,[rsp-8*1]
	mov r8,[r8+8]
; .mov_ptn2 2'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) ⊢ 10'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] )
; .mov_ptn 2'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) ⊢ 10'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_2623
LB_2622:
	lea rsp,[rsp+8*2]
	pop rdi
	pop r9 
	pop r14
	pop r13
	ret
LB_2623:
	sub rsp,32
	mov QWORD [rsp+24],r13
	mov QWORD [rsp+16],r14 
	mov QWORD [rsp+8],r9
	jmp LB_2629
LB_2628:
	add r14,1 
LB_2629:
	cmp r14,r9
	jge LB_2630
	movzx rax,BYTE [r13+8+r14]
	cmp rax,9 
	jz LB_2628
	cmp rax,10 
	jz LB_2628
	cmp rax,32 
	jz LB_2628
LB_2630
	lea rax,[r14+4]
	cmp rax,r9
	jg LB_2633
	jmp LB_2634
LB_2633:
	mov r8,unt_1
	jmp LB_2631
LB_2634:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],226
	jnz LB_2635
	cmp BYTE [rdi+1],138
	jnz LB_2635
	cmp BYTE [rdi+2],162
	jnz LB_2635
	cmp BYTE [rdi+3],124
	jnz LB_2635
	jmp LB_2636
LB_2635:
	mov r8,unt_1
	jmp LB_2631
LB_2636:
	add r14,4
	jmp LB_2632
LB_2631:
	lea rsp,[rsp+8*0]
	jmp LB_2627
LB_2632:
	mov QWORD [rsp+8*0],r14
	mov r13,QWORD [rsp+16+8*0]
	mov r14,QWORD [rsp+8*0]
	jmp LB_2638
LB_2638
;; rsp=0 , %1719~1'(= r ) %1718~0'(= r ) 
; #23 { } ⊢ 1(<2)◂{ }
;; rsp=0 , %1720~1(<2)◂{ } %1719~1'(= r ) %1718~0'(= r ) 
; #193 1(<2)◂{ } ⊢ 0(<2)◂1(<2)◂{ }
;; rsp=0 , %1721~0(<2)◂1(<2)◂{ } %1719~1'(= r ) %1718~0'(= r ) 
; #22 0(<2)◂1(<2)◂{ } ⊢ 0(<2)◂0(<2)◂1(<2)◂{ }
;; rsp=0 , %1722~0(<2)◂0(<2)◂1(<2)◂{ } %1719~1'(= r ) %1718~0'(= r ) 
; ∎ 0(<2)◂0(<2)◂1(<2)◂{ }
; .dlt.ptn 1'(= r )
; .dlt.ptn 0'(= r )
; .mov_ptn2 0(<2)◂0(<2)◂1(<2)◂{ } ⊢ 2'(= a3◂ [ a35◂ [ a3◂ [ *{ a8◂ [ a13◂ [ {| l |}]]a17◂ [ a9◂ [ ]{| l |}]}]]] )
; .mov_ptn 0(<2)◂0(<2)◂1(<2)◂{ } ⊢ 2'(= a3◂ [ a35◂ [ a3◂ [ *{ a8◂ [ a13◂ [ {| l |}]]a17◂ [ a9◂ [ ]{| l |}]}]]] )
	mov rax,unt 
	mov rax,unt_1
	mov rdi,rax
	mov rax,[SS_LN_TOP]
	mov rsi,[rax]
	mov QWORD [SS_LN_TOP],rsi 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov rdi,rax
	mov rax,[SS_LN_TOP]
	mov rsi,[rax]
	mov QWORD [SS_LN_TOP],rsi 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	jmp LB_2637
LB_2637:
	movzx rax,BYTE [r8+6]
	cmp rax,0
	jnz LB_2627
	pop r14
	pop r9
	add rsp,8
	pop r13
	jmp LB_2626
LB_2627:
	jmp LB_2641
LB_2640:
	add r14,1 
LB_2641:
	cmp r14,r9
	jge LB_2642
	movzx rax,BYTE [r13+8+r14]
	cmp rax,9 
	jz LB_2640
	cmp rax,10 
	jz LB_2640
	cmp rax,32 
	jz LB_2640
LB_2642
	lea rax,[r14+3]
	cmp rax,r9
	jg LB_2645
	jmp LB_2646
LB_2645:
	mov r8,unt_1
	jmp LB_2643
LB_2646:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],226
	jnz LB_2647
	cmp BYTE [rdi+1],138
	jnz LB_2647
	cmp BYTE [rdi+2],162
	jnz LB_2647
	jmp LB_2648
LB_2647:
	mov r8,unt_1
	jmp LB_2643
LB_2648:
	add r14,3
	jmp LB_2644
LB_2643:
	lea rsp,[rsp+8*0]
	jmp LB_2639
LB_2644:
	jmp LB_2650
LB_2649:
	add r14,1 
LB_2650:
	cmp r14,r9
	jge LB_2651
	movzx rax,BYTE [r13+8+r14]
	cmp rax,9 
	jz LB_2649
	cmp rax,10 
	jz LB_2649
	cmp rax,32 
	jz LB_2649
LB_2651
	call GRM_205
	movzx rax,BYTE [r8+6]
	cmp rax,0
	jnz LB_2654
	jmp LB_2655
LB_2654:
	jmp LB_2652
LB_2655:
	lea rsp,[rsp-8*1]
	mov r8,[r8+8]
; .mov_ptn2 2'(= a8◂ [ a13◂ [ {| l |}]] ) ⊢ 8'(= a8◂ [ a13◂ [ {| l |}]] )
; .mov_ptn 2'(= a8◂ [ a13◂ [ {| l |}]] ) ⊢ 8'(= a8◂ [ a13◂ [ {| l |}]] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_2653
LB_2652:
	lea rsp,[rsp+8*0]
	jmp LB_2639
LB_2653:
	jmp LB_2657
LB_2656:
	add r14,1 
LB_2657:
	cmp r14,r9
	jge LB_2658
	movzx rax,BYTE [r13+8+r14]
	cmp rax,9 
	jz LB_2656
	cmp rax,10 
	jz LB_2656
	cmp rax,32 
	jz LB_2656
LB_2658
	call GRM_234
	movzx rax,BYTE [r8+6]
	cmp rax,0
	jnz LB_2661
	jmp LB_2662
LB_2661:
	jmp LB_2659
LB_2662:
	lea rsp,[rsp-8*1]
	mov r8,[r8+8]
; .mov_ptn2 2'(= a35◂ [ a17◂ [ a9◂ [ ]{| l |}]] ) ⊢ 9'(= a35◂ [ a17◂ [ a9◂ [ ]{| l |}]] )
; .mov_ptn 2'(= a35◂ [ a17◂ [ a9◂ [ ]{| l |}]] ) ⊢ 9'(= a35◂ [ a17◂ [ a9◂ [ ]{| l |}]] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_2660
LB_2659:
	lea rsp,[rsp+8*1]
	jmp LB_2639
LB_2660:
	mov QWORD [rsp+8*2],r14
	mov r13,QWORD [rsp+16+8*2]
	mov r14,QWORD [rsp+8*2]
	jmp LB_2664
LB_2664
;; rsp=2 , %1726~1'(= r ) %1725~0'(= r ) %1724~9'(= a35◂ [ a17◂ [ a9◂ [ ]{| l |}]] ) %1723~8'(= a8◂ [ a13◂ [ {| l |}]] ) 
;; ? 9'(= a35◂ [ a17◂ [ a9◂ [ ]{| l |}]] ) ⊢ 0(<2)◂2'(= a17◂ [ a9◂ [ ]{| l |}] )
	mov rdi,QWORD [rsp-8+8*1]
	movzx rax,BYTE [rdi+6]
	cmp rax,0
	jnz LB_2665
	mov rax,QWORD [rdi+8]
	mov r8,rax
;; rsp=2 , %1728~2'(= a17◂ [ a9◂ [ ]{| l |}] ) %1726~1'(= r ) %1725~0'(= r ) %1723~8'(= a8◂ [ a13◂ [ {| l |}]] ) 
; #22 { 8'(= a8◂ [ a13◂ [ {| l |}]] ) 2'(= a17◂ [ a9◂ [ ]{| l |}] ) } ⊢ 0(<2)◂{ 8'(= a8◂ [ a13◂ [ {| l |}]] ) 2'(= a17◂ [ a9◂ [ ]{| l |}] ) }
;; rsp=2 , %1729~0(<2)◂{ 8'(= a8◂ [ a13◂ [ {| l |}]] ) 2'(= a17◂ [ a9◂ [ ]{| l |}] ) } %1726~1'(= r ) %1725~0'(= r ) 
; #193 0(<2)◂{ 8'(= a8◂ [ a13◂ [ {| l |}]] ) 2'(= a17◂ [ a9◂ [ ]{| l |}] ) } ⊢ 0(<2)◂0(<2)◂{ 8'(= a8◂ [ a13◂ [ {| l |}]] ) 2'(= a17◂ [ a9◂ [ ]{| l |}] ) }
;; rsp=2 , %1730~0(<2)◂0(<2)◂{ 8'(= a8◂ [ a13◂ [ {| l |}]] ) 2'(= a17◂ [ a9◂ [ ]{| l |}] ) } %1726~1'(= r ) %1725~0'(= r ) 
; #22 0(<2)◂0(<2)◂{ 8'(= a8◂ [ a13◂ [ {| l |}]] ) 2'(= a17◂ [ a9◂ [ ]{| l |}] ) } ⊢ 0(<2)◂0(<2)◂0(<2)◂{ 8'(= a8◂ [ a13◂ [ {| l |}]] ) 2'(= a17◂ [ a9◂ [ ]{| l |}] ) }
;; rsp=2 , %1731~0(<2)◂0(<2)◂0(<2)◂{ 8'(= a8◂ [ a13◂ [ {| l |}]] ) 2'(= a17◂ [ a9◂ [ ]{| l |}] ) } %1726~1'(= r ) %1725~0'(= r ) 
; ∎ 0(<2)◂0(<2)◂0(<2)◂{ 8'(= a8◂ [ a13◂ [ {| l |}]] ) 2'(= a17◂ [ a9◂ [ ]{| l |}] ) }
; .dlt.ptn 1'(= r )
; .dlt.ptn 0'(= r )
; .mov_ptn2 0(<2)◂0(<2)◂0(<2)◂{ 8'(= a8◂ [ a13◂ [ {| l |}]] ) 2'(= a17◂ [ a9◂ [ ]{| l |}] ) } ⊢ 2'(= a3◂ [ a35◂ [ a3◂ [ *{ a8◂ [ a13◂ [ {| l |}]]a17◂ [ a9◂ [ ]{| l |}]}]]] )
	mov r13,r8
; .mov_ptn 0(<2)◂0(<2)◂0(<2)◂{ 8'(= a8◂ [ a13◂ [ {| l |}]] ) 0'(= a17◂ [ a9◂ [ ]{| l |}] ) } ⊢ 2'(= a3◂ [ a35◂ [ a3◂ [ *{ a8◂ [ a13◂ [ {| l |}]]a17◂ [ a9◂ [ ]{| l |}]}]]] )
	mov rax,[SS_RCD_2_TOP]
	mov rsi,[rax] 
	mov QWORD [SS_RCD_2_TOP],rsi
	mov QWORD [rax],0
	mov r14,rax
	mov rax,QWORD [rsp-8+8*2]
	mov rdi,r14
	mov QWORD [rdi+8+8*0],rax
	mov rax,r13
	mov rdi,r14
	mov QWORD [rdi+8+8*1],rax
	mov rax,r14
	mov BYTE [rax+6],0
	mov rdi,rax
	mov rax,[SS_LN_TOP]
	mov rsi,[rax]
	mov QWORD [SS_LN_TOP],rsi 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov rdi,rax
	mov rax,[SS_LN_TOP]
	mov rsi,[rax]
	mov QWORD [SS_LN_TOP],rsi 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	lea rsp,[rsp+8*2]
	jmp LB_2663
LB_2665:
;; ? 9'(= a35◂ [ a17◂ [ a9◂ [ ]{| l |}]] ) ⊢ 1(<2)◂9'(= a2◂ [ *{ rr{| l |}}] )
;; rsp=2 , %1727~9'(= a2◂ [ *{ rr{| l |}}] ) %1726~1'(= r ) %1725~0'(= r ) %1723~8'(= a8◂ [ a13◂ [ {| l |}]] ) 
; #192 9'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 1(<2)◂9'(= a2◂ [ *{ rr{| l |}}] )
;; rsp=2 , %1732~1(<2)◂9'(= a2◂ [ *{ rr{| l |}}] ) %1726~1'(= r ) %1725~0'(= r ) %1723~8'(= a8◂ [ a13◂ [ {| l |}]] ) 
; #22 1(<2)◂9'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 0(<2)◂1(<2)◂9'(= a2◂ [ *{ rr{| l |}}] )
;; rsp=2 , %1733~0(<2)◂1(<2)◂9'(= a2◂ [ *{ rr{| l |}}] ) %1726~1'(= r ) %1725~0'(= r ) %1723~8'(= a8◂ [ a13◂ [ {| l |}]] ) 
; ∎ 0(<2)◂1(<2)◂9'(= a2◂ [ *{ rr{| l |}}] )
; .dlt.ptn 1'(= r )
; .dlt.ptn 0'(= r )
; .dlt.ptn 8'(= a8◂ [ a13◂ [ {| l |}]] )
;	.dlt adt ⊢ _  
; .mov_ptn2 0(<2)◂1(<2)◂9'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 2'(= a3◂ [ a35◂ [ a3◂ [ *{ a8◂ [ a13◂ [ {| l |}]]a17◂ [ a9◂ [ ]{| l |}]}]]] )
; .mov_ptn 0(<2)◂1(<2)◂9'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 2'(= a3◂ [ a35◂ [ a3◂ [ *{ a8◂ [ a13◂ [ {| l |}]]a17◂ [ a9◂ [ ]{| l |}]}]]] )
	mov rax,QWORD [rsp-8+8*1]
	mov rdi,rax
	mov rax,[SS_LN_TOP]
	mov rsi,[rax]
	mov QWORD [SS_LN_TOP],rsi 
	mov QWORD [rax],0
	mov BYTE [rax+6],1
	mov QWORD [rax+8],rdi
	mov rdi,rax
	mov rax,[SS_LN_TOP]
	mov rsi,[rax]
	mov QWORD [SS_LN_TOP],rsi 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	lea rsp,[rsp+8*2]
	jmp LB_2663
LB_2663:
	movzx rax,BYTE [r8+6]
	cmp rax,0
	jnz LB_2639
	pop r14
	pop r9
	add rsp,8
	pop r13
	jmp LB_2626
LB_2639:
	pop rdi
	pop r9 
	pop r14
	pop r13
	jmp LB_2626
LB_2626:
	movzx rax,BYTE [r8+6]
	cmp rax,0
	jnz LB_2666
	jmp LB_2667
LB_2666:
	lea rsp,[rsp+8*3]
	add rsp,8
	pop r9 
	pop r14 
	pop r13
	ret
LB_2667:
	mov QWORD [rsp+8*3],r14
	mov r8,[r8+8]
; .mov_ptn2 2'(= a35◂ [ a3◂ [ *{ a8◂ [ a13◂ [ {| l |}]]a17◂ [ a9◂ [ ]{| l |}]}]] ) ⊢ 3'(= a35◂ [ a3◂ [ *{ a8◂ [ a13◂ [ {| l |}]]a17◂ [ a9◂ [ ]{| l |}]}]] )
	mov r10,r9
; .mov_ptn 2'(= a35◂ [ a3◂ [ *{ a8◂ [ a13◂ [ {| l |}]]a17◂ [ a9◂ [ ]{| l |}]}]] ) ⊢ 3'(= a35◂ [ a3◂ [ *{ a8◂ [ a13◂ [ {| l |}]]a17◂ [ a9◂ [ ]{| l |}]}]] )
	mov rax,r8
	mov r9,rax
	mov r13,QWORD [rsp+16+8*3]
	mov r14,QWORD [rsp+8*3]
	jmp LB_2669
LB_2669
;; rsp=3 , %1734~3'(= a35◂ [ a3◂ [ *{ a8◂ [ a13◂ [ {| l |}]]a17◂ [ a9◂ [ ]{| l |}]}]] ) %1717~1'(= r ) %1716~0'(= r ) %1715~10'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) %1714~9'(= a12◂ [ a9◂ [ ]{| l |}] ) %1713~8'(= a35◂ [ *{ }] ) 
;; ? 3'(= a35◂ [ a3◂ [ *{ a8◂ [ a13◂ [ {| l |}]]a17◂ [ a9◂ [ ]{| l |}]}]] ) ⊢ 0(<2)◂2'(= a3◂ [ *{ a8◂ [ a13◂ [ {| l |}]]a17◂ [ a9◂ [ ]{| l |}]}] )
	mov rdi,r9
	movzx rax,BYTE [rdi+6]
	cmp rax,0
	jnz LB_2670
	mov rax,QWORD [rdi+8]
	mov r8,rax
;; rsp=3 , %1736~2'(= a3◂ [ *{ a8◂ [ a13◂ [ {| l |}]]a17◂ [ a9◂ [ ]{| l |}]}] ) %1717~1'(= r ) %1716~0'(= r ) %1715~10'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) %1714~9'(= a12◂ [ a9◂ [ ]{| l |}] ) %1713~8'(= a35◂ [ *{ }] ) 
;; ? 2'(= a3◂ [ *{ a8◂ [ a13◂ [ {| l |}]]a17◂ [ a9◂ [ ]{| l |}]}] ) ⊢ 0(<2)◂{ 3'(= a8◂ [ a13◂ [ {| l |}]] ) 4'(= a17◂ [ a9◂ [ ]{| l |}] ) }
	mov rdi,r8
	movzx rax,BYTE [rdi+6]
	cmp rax,0
	jnz LB_2671
	mov rdi,r8
	mov rdi,QWORD [rdi+8+8*0]
	mov r9,rdi
	mov rdi,r8
	mov rdi,QWORD [rdi+8+8*1]
	mov r10,rdi
;; rsp=3 , %1738~4'(= a17◂ [ a9◂ [ ]{| l |}] ) %1737~3'(= a8◂ [ a13◂ [ {| l |}]] ) %1717~1'(= r ) %1716~0'(= r ) %1715~10'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) %1714~9'(= a12◂ [ a9◂ [ ]{| l |}] ) %1713~8'(= a35◂ [ *{ }] ) 
; #121 { 9'(= a12◂ [ a9◂ [ ]{| l |}] ) 10'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) 3'(= a8◂ [ a13◂ [ {| l |}]] ) } ⊢ 1(<4)◂{ 9'(= a12◂ [ a9◂ [ ]{| l |}] ) 10'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) 3'(= a8◂ [ a13◂ [ {| l |}]] ) }
;; rsp=3 , %1739~1(<4)◂{ 9'(= a12◂ [ a9◂ [ ]{| l |}] ) 10'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) 3'(= a8◂ [ a13◂ [ {| l |}]] ) } %1738~4'(= a17◂ [ a9◂ [ ]{| l |}] ) %1717~1'(= r ) %1716~0'(= r ) %1713~8'(= a35◂ [ *{ }] ) 
; #129 { 1(<4)◂{ 9'(= a12◂ [ a9◂ [ ]{| l |}] ) 10'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) 3'(= a8◂ [ a13◂ [ {| l |}]] ) } 4'(= a17◂ [ a9◂ [ ]{| l |}] ) } ⊢ 2(<7)◂{ 1(<4)◂{ 9'(= a12◂ [ a9◂ [ ]{| l |}] ) 10'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) 3'(= a8◂ [ a13◂ [ {| l |}]] ) } 4'(= a17◂ [ a9◂ [ ]{| l |}] ) }
;; rsp=3 , %1740~2(<7)◂{ 1(<4)◂{ 9'(= a12◂ [ a9◂ [ ]{| l |}] ) 10'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) 3'(= a8◂ [ a13◂ [ {| l |}]] ) } 4'(= a17◂ [ a9◂ [ ]{| l |}] ) } %1717~1'(= r ) %1716~0'(= r ) %1713~8'(= a35◂ [ *{ }] ) 
; #193 2(<7)◂{ 1(<4)◂{ 9'(= a12◂ [ a9◂ [ ]{| l |}] ) 10'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) 3'(= a8◂ [ a13◂ [ {| l |}]] ) } 4'(= a17◂ [ a9◂ [ ]{| l |}] ) } ⊢ 0(<2)◂2(<7)◂{ 1(<4)◂{ 9'(= a12◂ [ a9◂ [ ]{| l |}] ) 10'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) 3'(= a8◂ [ a13◂ [ {| l |}]] ) } 4'(= a17◂ [ a9◂ [ ]{| l |}] ) }
;; rsp=3 , %1741~0(<2)◂2(<7)◂{ 1(<4)◂{ 9'(= a12◂ [ a9◂ [ ]{| l |}] ) 10'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) 3'(= a8◂ [ a13◂ [ {| l |}]] ) } 4'(= a17◂ [ a9◂ [ ]{| l |}] ) } %1717~1'(= r ) %1716~0'(= r ) %1713~8'(= a35◂ [ *{ }] ) 
; #22 0(<2)◂2(<7)◂{ 1(<4)◂{ 9'(= a12◂ [ a9◂ [ ]{| l |}] ) 10'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) 3'(= a8◂ [ a13◂ [ {| l |}]] ) } 4'(= a17◂ [ a9◂ [ ]{| l |}] ) } ⊢ 0(<2)◂0(<2)◂2(<7)◂{ 1(<4)◂{ 9'(= a12◂ [ a9◂ [ ]{| l |}] ) 10'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) 3'(= a8◂ [ a13◂ [ {| l |}]] ) } 4'(= a17◂ [ a9◂ [ ]{| l |}] ) }
;; rsp=3 , %1742~0(<2)◂0(<2)◂2(<7)◂{ 1(<4)◂{ 9'(= a12◂ [ a9◂ [ ]{| l |}] ) 10'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) 3'(= a8◂ [ a13◂ [ {| l |}]] ) } 4'(= a17◂ [ a9◂ [ ]{| l |}] ) } %1717~1'(= r ) %1716~0'(= r ) %1713~8'(= a35◂ [ *{ }] ) 
; ∎ 0(<2)◂0(<2)◂2(<7)◂{ 1(<4)◂{ 9'(= a12◂ [ a9◂ [ ]{| l |}] ) 10'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) 3'(= a8◂ [ a13◂ [ {| l |}]] ) } 4'(= a17◂ [ a9◂ [ ]{| l |}] ) }
; .dlt.ptn 1'(= r )
; .dlt.ptn 0'(= r )
; .dlt.ptn 8'(= a35◂ [ *{ }] )
;	.dlt adt ⊢ _  
; .mov_ptn2 0(<2)◂0(<2)◂2(<7)◂{ 1(<4)◂{ 9'(= a12◂ [ a9◂ [ ]{| l |}] ) 10'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) 3'(= a8◂ [ a13◂ [ {| l |}]] ) } 4'(= a17◂ [ a9◂ [ ]{| l |}] ) } ⊢ 2'(= a3◂ [ a35◂ [ a17◂ [ a9◂ [ ]{| l |}]]] )
; .mov_ptn 0(<2)◂0(<2)◂2(<7)◂{ 1(<4)◂{ 9'(= a12◂ [ a9◂ [ ]{| l |}] ) 10'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) 3'(= a8◂ [ a13◂ [ {| l |}]] ) } 4'(= a17◂ [ a9◂ [ ]{| l |}] ) } ⊢ 2'(= a3◂ [ a35◂ [ a17◂ [ a9◂ [ ]{| l |}]]] )
	mov rax,[SS_RCD_2_TOP]
	mov rsi,[rax] 
	mov QWORD [SS_RCD_2_TOP],rsi
	mov QWORD [rax],0
	mov r13,rax
	mov rax,[SS_RCD_3_TOP]
	mov rsi,[rax] 
	mov QWORD [SS_RCD_3_TOP],rsi
	mov QWORD [rax],0
	mov r14,rax
	mov rax,QWORD [rsp-8+8*2]
	mov rdi,r14
	mov QWORD [rdi+8+8*0],rax
	mov rax,QWORD [rsp-8+8*1]
	mov rdi,r14
	mov QWORD [rdi+8+8*1],rax
	mov rax,r9
	mov rdi,r14
	mov QWORD [rdi+8+8*2],rax
	mov rax,r14
	mov BYTE [rax+6],1
	mov rdi,r13
	mov QWORD [rdi+8+8*0],rax
	mov rax,r10
	mov rdi,r13
	mov QWORD [rdi+8+8*1],rax
	mov rax,r13
	mov BYTE [rax+6],2
	mov rdi,rax
	mov rax,[SS_LN_TOP]
	mov rsi,[rax]
	mov QWORD [SS_LN_TOP],rsi 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov rdi,rax
	mov rax,[SS_LN_TOP]
	mov rsi,[rax]
	mov QWORD [SS_LN_TOP],rsi 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	lea rsp,[rsp+8*3]
	jmp LB_2668
LB_2671:
;; ? 2'(= a3◂ [ *{ a8◂ [ a13◂ [ {| l |}]]a17◂ [ a9◂ [ ]{| l |}]}] ) ⊢ 1(<2)◂{ }
;; rsp=3 , %1717~1'(= r ) %1716~0'(= r ) %1715~10'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) %1714~9'(= a12◂ [ a9◂ [ ]{| l |}] ) %1713~8'(= a35◂ [ *{ }] ) 
; #130 { 9'(= a12◂ [ a9◂ [ ]{| l |}] ) 10'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) } ⊢ 1(<7)◂{ 9'(= a12◂ [ a9◂ [ ]{| l |}] ) 10'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) }
;; rsp=3 , %1743~1(<7)◂{ 9'(= a12◂ [ a9◂ [ ]{| l |}] ) 10'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) } %1717~1'(= r ) %1716~0'(= r ) %1713~8'(= a35◂ [ *{ }] ) 
; #193 1(<7)◂{ 9'(= a12◂ [ a9◂ [ ]{| l |}] ) 10'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) } ⊢ 0(<2)◂1(<7)◂{ 9'(= a12◂ [ a9◂ [ ]{| l |}] ) 10'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) }
;; rsp=3 , %1744~0(<2)◂1(<7)◂{ 9'(= a12◂ [ a9◂ [ ]{| l |}] ) 10'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) } %1717~1'(= r ) %1716~0'(= r ) %1713~8'(= a35◂ [ *{ }] ) 
; #22 0(<2)◂1(<7)◂{ 9'(= a12◂ [ a9◂ [ ]{| l |}] ) 10'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) } ⊢ 0(<2)◂0(<2)◂1(<7)◂{ 9'(= a12◂ [ a9◂ [ ]{| l |}] ) 10'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) }
;; rsp=3 , %1745~0(<2)◂0(<2)◂1(<7)◂{ 9'(= a12◂ [ a9◂ [ ]{| l |}] ) 10'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) } %1717~1'(= r ) %1716~0'(= r ) %1713~8'(= a35◂ [ *{ }] ) 
; ∎ 0(<2)◂0(<2)◂1(<7)◂{ 9'(= a12◂ [ a9◂ [ ]{| l |}] ) 10'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) }
; .dlt.ptn 1'(= r )
; .dlt.ptn 0'(= r )
; .dlt.ptn 8'(= a35◂ [ *{ }] )
;	.dlt adt ⊢ _  
; .mov_ptn2 0(<2)◂0(<2)◂1(<7)◂{ 9'(= a12◂ [ a9◂ [ ]{| l |}] ) 10'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) } ⊢ 2'(= a3◂ [ a35◂ [ a17◂ [ a9◂ [ ]{| l |}]]] )
; .mov_ptn 0(<2)◂0(<2)◂1(<7)◂{ 9'(= a12◂ [ a9◂ [ ]{| l |}] ) 10'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) } ⊢ 2'(= a3◂ [ a35◂ [ a17◂ [ a9◂ [ ]{| l |}]]] )
	mov rax,[SS_RCD_2_TOP]
	mov rsi,[rax] 
	mov QWORD [SS_RCD_2_TOP],rsi
	mov QWORD [rax],0
	mov r13,rax
	mov rax,QWORD [rsp-8+8*2]
	mov rdi,r13
	mov QWORD [rdi+8+8*0],rax
	mov rax,QWORD [rsp-8+8*1]
	mov rdi,r13
	mov QWORD [rdi+8+8*1],rax
	mov rax,r13
	mov BYTE [rax+6],1
	mov rdi,rax
	mov rax,[SS_LN_TOP]
	mov rsi,[rax]
	mov QWORD [SS_LN_TOP],rsi 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov rdi,rax
	mov rax,[SS_LN_TOP]
	mov rsi,[rax]
	mov QWORD [SS_LN_TOP],rsi 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	lea rsp,[rsp+8*3]
	jmp LB_2668
LB_2670:
;; ? 3'(= a35◂ [ a3◂ [ *{ a8◂ [ a13◂ [ {| l |}]]a17◂ [ a9◂ [ ]{| l |}]}]] ) ⊢ 1(<2)◂3'(= a2◂ [ *{ rr{| l |}}] )
;; rsp=3 , %1735~3'(= a2◂ [ *{ rr{| l |}}] ) %1717~1'(= r ) %1716~0'(= r ) %1715~10'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) %1714~9'(= a12◂ [ a9◂ [ ]{| l |}] ) %1713~8'(= a35◂ [ *{ }] ) 
; #192 3'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 1(<2)◂3'(= a2◂ [ *{ rr{| l |}}] )
;; rsp=3 , %1746~1(<2)◂3'(= a2◂ [ *{ rr{| l |}}] ) %1717~1'(= r ) %1716~0'(= r ) %1715~10'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) %1714~9'(= a12◂ [ a9◂ [ ]{| l |}] ) %1713~8'(= a35◂ [ *{ }] ) 
; #22 1(<2)◂3'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 0(<2)◂1(<2)◂3'(= a2◂ [ *{ rr{| l |}}] )
;; rsp=3 , %1747~0(<2)◂1(<2)◂3'(= a2◂ [ *{ rr{| l |}}] ) %1717~1'(= r ) %1716~0'(= r ) %1715~10'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) %1714~9'(= a12◂ [ a9◂ [ ]{| l |}] ) %1713~8'(= a35◂ [ *{ }] ) 
; ∎ 0(<2)◂1(<2)◂3'(= a2◂ [ *{ rr{| l |}}] )
; .dlt.ptn 1'(= r )
; .dlt.ptn 0'(= r )
; .dlt.ptn 10'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] )
;	.dlt adt ⊢ _  
; .dlt.ptn 9'(= a12◂ [ a9◂ [ ]{| l |}] )
;	.dlt adt ⊢ _  
; .dlt.ptn 8'(= a35◂ [ *{ }] )
;	.dlt adt ⊢ _  
; .mov_ptn2 0(<2)◂1(<2)◂3'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 2'(= a3◂ [ a35◂ [ a17◂ [ a9◂ [ ]{| l |}]]] )
; .mov_ptn 0(<2)◂1(<2)◂3'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 2'(= a3◂ [ a35◂ [ a17◂ [ a9◂ [ ]{| l |}]]] )
	mov rax,r9
	mov rdi,rax
	mov rax,[SS_LN_TOP]
	mov rsi,[rax]
	mov QWORD [SS_LN_TOP],rsi 
	mov QWORD [rax],0
	mov BYTE [rax+6],1
	mov QWORD [rax+8],rdi
	mov rdi,rax
	mov rax,[SS_LN_TOP]
	mov rsi,[rax]
	mov QWORD [SS_LN_TOP],rsi 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	lea rsp,[rsp+8*3]
	jmp LB_2668
LB_2668:
	movzx rax,BYTE [r8+6]
	cmp rax,0
	jnz LB_2586
	pop r14
	pop r9
	add rsp,8
	pop r13
	ret
LB_2586:
	jmp LB_2674
LB_2673:
	add r14,1 
LB_2674:
	cmp r14,r9
	jge LB_2675
	movzx rax,BYTE [r13+8+r14]
	cmp rax,9 
	jz LB_2673
	cmp rax,10 
	jz LB_2673
	cmp rax,32 
	jz LB_2673
LB_2675
	call GRM_217
	movzx rax,BYTE [r8+6]
	cmp rax,0
	jnz LB_2678
	jmp LB_2679
LB_2678:
	jmp LB_2676
LB_2679:
	lea rsp,[rsp-8*1]
	mov r8,[r8+8]
; .mov_ptn2 2'(= a35◂ [ *{ }] ) ⊢ 8'(= a35◂ [ *{ }] )
; .mov_ptn 2'(= a35◂ [ *{ }] ) ⊢ 8'(= a35◂ [ *{ }] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_2677
LB_2676:
	lea rsp,[rsp+8*0]
	jmp LB_2672
LB_2677:
	jmp LB_2681
LB_2680:
	add r14,1 
LB_2681:
	cmp r14,r9
	jge LB_2682
	movzx rax,BYTE [r13+8+r14]
	cmp rax,9 
	jz LB_2680
	cmp rax,10 
	jz LB_2680
	cmp rax,32 
	jz LB_2680
LB_2682
	lea rax,[r14+2]
	cmp rax,r9
	jg LB_2685
	jmp LB_2686
LB_2685:
	mov r8,unt_1
	jmp LB_2683
LB_2686:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],194
	jnz LB_2687
	cmp BYTE [rdi+1],187
	jnz LB_2687
	jmp LB_2688
LB_2687:
	mov r8,unt_1
	jmp LB_2683
LB_2688:
	add r14,2
	jmp LB_2684
LB_2683:
	lea rsp,[rsp+8*1]
	jmp LB_2672
LB_2684:
	jmp LB_2690
LB_2689:
	add r14,1 
LB_2690:
	cmp r14,r9
	jge LB_2691
	movzx rax,BYTE [r13+8+r14]
	cmp rax,9 
	jz LB_2689
	cmp rax,10 
	jz LB_2689
	cmp rax,32 
	jz LB_2689
LB_2691
	call GRM_232
	movzx rax,BYTE [r8+6]
	cmp rax,0
	jnz LB_2694
	jmp LB_2695
LB_2694:
	jmp LB_2692
LB_2695:
	lea rsp,[rsp-8*1]
	mov r8,[r8+8]
; .mov_ptn2 2'(= a19◂ [ a9◂ [ ]{| l |}] ) ⊢ 9'(= a19◂ [ a9◂ [ ]{| l |}] )
; .mov_ptn 2'(= a19◂ [ a9◂ [ ]{| l |}] ) ⊢ 9'(= a19◂ [ a9◂ [ ]{| l |}] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_2693
LB_2692:
	lea rsp,[rsp+8*1]
	pop rdi
	pop r9 
	pop r14
	pop r13
	ret
LB_2693:
	jmp LB_2697
LB_2696:
	add r14,1 
LB_2697:
	cmp r14,r9
	jge LB_2698
	movzx rax,BYTE [r13+8+r14]
	cmp rax,9 
	jz LB_2696
	cmp rax,10 
	jz LB_2696
	cmp rax,32 
	jz LB_2696
LB_2698
	call GRM_234
	movzx rax,BYTE [r8+6]
	cmp rax,0
	jnz LB_2701
	jmp LB_2702
LB_2701:
	jmp LB_2699
LB_2702:
	lea rsp,[rsp-8*1]
	mov r8,[r8+8]
; .mov_ptn2 2'(= a35◂ [ a17◂ [ a9◂ [ ]{| l |}]] ) ⊢ 10'(= a35◂ [ a17◂ [ a9◂ [ ]{| l |}]] )
; .mov_ptn 2'(= a35◂ [ a17◂ [ a9◂ [ ]{| l |}]] ) ⊢ 10'(= a35◂ [ a17◂ [ a9◂ [ ]{| l |}]] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_2700
LB_2699:
	lea rsp,[rsp+8*2]
	pop rdi
	pop r9 
	pop r14
	pop r13
	ret
LB_2700:
	mov QWORD [rsp+8*3],r14
	mov r13,QWORD [rsp+16+8*3]
	mov r14,QWORD [rsp+8*3]
	jmp LB_2704
LB_2704
;; rsp=3 , %1752~1'(= r ) %1751~0'(= r ) %1750~10'(= a35◂ [ a17◂ [ a9◂ [ ]{| l |}]] ) %1749~9'(= a19◂ [ a9◂ [ ]{| l |}] ) %1748~8'(= a35◂ [ *{ }] ) 
;; ? 10'(= a35◂ [ a17◂ [ a9◂ [ ]{| l |}]] ) ⊢ 0(<2)◂2'(= a17◂ [ a9◂ [ ]{| l |}] )
	mov rdi,QWORD [rsp-8+8*1]
	movzx rax,BYTE [rdi+6]
	cmp rax,0
	jnz LB_2705
	mov rax,QWORD [rdi+8]
	mov r8,rax
;; rsp=3 , %1754~2'(= a17◂ [ a9◂ [ ]{| l |}] ) %1752~1'(= r ) %1751~0'(= r ) %1749~9'(= a19◂ [ a9◂ [ ]{| l |}] ) %1748~8'(= a35◂ [ *{ }] ) 
;; ? 9'(= a19◂ [ a9◂ [ ]{| l |}] ) ⊢ 2(<4)◂{ 3'(= a11◂ [ a9◂ [ ]] ) 4'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) 5'(= a8◂ [ a13◂ [ {| l |}]] ) }
	mov rdi,QWORD [rsp-8+8*2]
	movzx rax,BYTE [rdi+6]
	cmp rax,2
	jnz LB_2706
	mov rdi,QWORD [rsp-8+8*2]
	mov rdi,QWORD [rdi+8+8*0]
	mov r9,rdi
	mov rdi,QWORD [rsp-8+8*2]
	mov rdi,QWORD [rdi+8+8*1]
	mov r10,rdi
	mov rdi,QWORD [rsp-8+8*2]
	mov rdi,QWORD [rdi+8+8*2]
	mov r11,rdi
;; rsp=3 , %1757~5'(= a8◂ [ a13◂ [ {| l |}]] ) %1756~4'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) %1755~3'(= a11◂ [ a9◂ [ ]] ) %1754~2'(= a17◂ [ a9◂ [ ]{| l |}] ) %1752~1'(= r ) %1751~0'(= r ) %1748~8'(= a35◂ [ *{ }] ) 
; #92 3'(= a11◂ [ a9◂ [ ]] ) ⊢ 0(<2)◂3'(= a11◂ [ a9◂ [ ]] )
;; rsp=3 , %1758~0(<2)◂3'(= a11◂ [ a9◂ [ ]] ) %1757~5'(= a8◂ [ a13◂ [ {| l |}]] ) %1756~4'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) %1754~2'(= a17◂ [ a9◂ [ ]{| l |}] ) %1752~1'(= r ) %1751~0'(= r ) %1748~8'(= a35◂ [ *{ }] ) 
; #78 0(<2)◂3'(= a11◂ [ a9◂ [ ]] ) ⊢ 1(<2)◂0(<2)◂3'(= a11◂ [ a9◂ [ ]] )
;; rsp=3 , %1759~1(<2)◂0(<2)◂3'(= a11◂ [ a9◂ [ ]] ) %1757~5'(= a8◂ [ a13◂ [ {| l |}]] ) %1756~4'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) %1754~2'(= a17◂ [ a9◂ [ ]{| l |}] ) %1752~1'(= r ) %1751~0'(= r ) %1748~8'(= a35◂ [ *{ }] ) 
; #20 { } ⊢ 1(<2)◂{ }
;; rsp=3 , %1760~1(<2)◂{ } %1759~1(<2)◂0(<2)◂3'(= a11◂ [ a9◂ [ ]] ) %1757~5'(= a8◂ [ a13◂ [ {| l |}]] ) %1756~4'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) %1754~2'(= a17◂ [ a9◂ [ ]{| l |}] ) %1752~1'(= r ) %1751~0'(= r ) %1748~8'(= a35◂ [ *{ }] ) 
; #21 { 5'(= a8◂ [ a13◂ [ {| l |}]] ) 1(<2)◂{ } } ⊢ 0(<2)◂{ 5'(= a8◂ [ a13◂ [ {| l |}]] ) 1(<2)◂{ } }
;; rsp=3 , %1761~0(<2)◂{ 5'(= a8◂ [ a13◂ [ {| l |}]] ) 1(<2)◂{ } } %1759~1(<2)◂0(<2)◂3'(= a11◂ [ a9◂ [ ]] ) %1756~4'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) %1754~2'(= a17◂ [ a9◂ [ ]{| l |}] ) %1752~1'(= r ) %1751~0'(= r ) %1748~8'(= a35◂ [ *{ }] ) 
; #123 { 0(<2)◂{ 5'(= a8◂ [ a13◂ [ {| l |}]] ) 1(<2)◂{ } } 2'(= a17◂ [ a9◂ [ ]{| l |}] ) } ⊢ 1(<2)◂{ 0(<2)◂{ 5'(= a8◂ [ a13◂ [ {| l |}]] ) 1(<2)◂{ } } 2'(= a17◂ [ a9◂ [ ]{| l |}] ) }
;; rsp=3 , %1762~1(<2)◂{ 0(<2)◂{ 5'(= a8◂ [ a13◂ [ {| l |}]] ) 1(<2)◂{ } } 2'(= a17◂ [ a9◂ [ ]{| l |}] ) } %1759~1(<2)◂0(<2)◂3'(= a11◂ [ a9◂ [ ]] ) %1756~4'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) %1752~1'(= r ) %1751~0'(= r ) %1748~8'(= a35◂ [ *{ }] ) 
; #127 { 1(<2)◂0(<2)◂3'(= a11◂ [ a9◂ [ ]] ) 1(<2)◂{ 0(<2)◂{ 5'(= a8◂ [ a13◂ [ {| l |}]] ) 1(<2)◂{ } } 2'(= a17◂ [ a9◂ [ ]{| l |}] ) } } ⊢ 4(<7)◂{ 1(<2)◂0(<2)◂3'(= a11◂ [ a9◂ [ ]] ) 1(<2)◂{ 0(<2)◂{ 5'(= a8◂ [ a13◂ [ {| l |}]] ) 1(<2)◂{ } } 2'(= a17◂ [ a9◂ [ ]{| l |}] ) } }
;; rsp=3 , %1763~4(<7)◂{ 1(<2)◂0(<2)◂3'(= a11◂ [ a9◂ [ ]] ) 1(<2)◂{ 0(<2)◂{ 5'(= a8◂ [ a13◂ [ {| l |}]] ) 1(<2)◂{ } } 2'(= a17◂ [ a9◂ [ ]{| l |}] ) } } %1756~4'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) %1752~1'(= r ) %1751~0'(= r ) %1748~8'(= a35◂ [ *{ }] ) 
; #193 4(<7)◂{ 1(<2)◂0(<2)◂3'(= a11◂ [ a9◂ [ ]] ) 1(<2)◂{ 0(<2)◂{ 5'(= a8◂ [ a13◂ [ {| l |}]] ) 1(<2)◂{ } } 2'(= a17◂ [ a9◂ [ ]{| l |}] ) } } ⊢ 0(<2)◂4(<7)◂{ 1(<2)◂0(<2)◂3'(= a11◂ [ a9◂ [ ]] ) 1(<2)◂{ 0(<2)◂{ 5'(= a8◂ [ a13◂ [ {| l |}]] ) 1(<2)◂{ } } 2'(= a17◂ [ a9◂ [ ]{| l |}] ) } }
;; rsp=3 , %1764~0(<2)◂4(<7)◂{ 1(<2)◂0(<2)◂3'(= a11◂ [ a9◂ [ ]] ) 1(<2)◂{ 0(<2)◂{ 5'(= a8◂ [ a13◂ [ {| l |}]] ) 1(<2)◂{ } } 2'(= a17◂ [ a9◂ [ ]{| l |}] ) } } %1756~4'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) %1752~1'(= r ) %1751~0'(= r ) %1748~8'(= a35◂ [ *{ }] ) 
; #22 0(<2)◂4(<7)◂{ 1(<2)◂0(<2)◂3'(= a11◂ [ a9◂ [ ]] ) 1(<2)◂{ 0(<2)◂{ 5'(= a8◂ [ a13◂ [ {| l |}]] ) 1(<2)◂{ } } 2'(= a17◂ [ a9◂ [ ]{| l |}] ) } } ⊢ 0(<2)◂0(<2)◂4(<7)◂{ 1(<2)◂0(<2)◂3'(= a11◂ [ a9◂ [ ]] ) 1(<2)◂{ 0(<2)◂{ 5'(= a8◂ [ a13◂ [ {| l |}]] ) 1(<2)◂{ } } 2'(= a17◂ [ a9◂ [ ]{| l |}] ) } }
;; rsp=3 , %1765~0(<2)◂0(<2)◂4(<7)◂{ 1(<2)◂0(<2)◂3'(= a11◂ [ a9◂ [ ]] ) 1(<2)◂{ 0(<2)◂{ 5'(= a8◂ [ a13◂ [ {| l |}]] ) 1(<2)◂{ } } 2'(= a17◂ [ a9◂ [ ]{| l |}] ) } } %1756~4'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) %1752~1'(= r ) %1751~0'(= r ) %1748~8'(= a35◂ [ *{ }] ) 
; ∎ 0(<2)◂0(<2)◂4(<7)◂{ 1(<2)◂0(<2)◂3'(= a11◂ [ a9◂ [ ]] ) 1(<2)◂{ 0(<2)◂{ 5'(= a8◂ [ a13◂ [ {| l |}]] ) 1(<2)◂{ } } 2'(= a17◂ [ a9◂ [ ]{| l |}] ) } }
; .dlt.ptn 4'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] )
;	.dlt adt ⊢ _  
; .dlt.ptn 1'(= r )
; .dlt.ptn 0'(= r )
; .dlt.ptn 8'(= a35◂ [ *{ }] )
;	.dlt adt ⊢ _  
; .mov_ptn2 0(<2)◂0(<2)◂4(<7)◂{ 1(<2)◂0(<2)◂3'(= a11◂ [ a9◂ [ ]] ) 1(<2)◂{ 0(<2)◂{ 5'(= a8◂ [ a13◂ [ {| l |}]] ) 1(<2)◂{ } } 2'(= a17◂ [ a9◂ [ ]{| l |}] ) } } ⊢ 2'(= a3◂ [ a35◂ [ a17◂ [ a9◂ [ ]{| l |}]]] )
	mov r13,r8
; .mov_ptn 0(<2)◂0(<2)◂4(<7)◂{ 1(<2)◂0(<2)◂3'(= a11◂ [ a9◂ [ ]] ) 1(<2)◂{ 0(<2)◂{ 5'(= a8◂ [ a13◂ [ {| l |}]] ) 1(<2)◂{ } } 0'(= a17◂ [ a9◂ [ ]{| l |}] ) } } ⊢ 2'(= a3◂ [ a35◂ [ a17◂ [ a9◂ [ ]{| l |}]]] )
	mov rax,[SS_RCD_2_TOP]
	mov rsi,[rax] 
	mov QWORD [SS_RCD_2_TOP],rsi
	mov QWORD [rax],0
	mov r14,rax
	mov rax,r9
	mov rdi,rax
	mov rax,[SS_LN_TOP]
	mov rsi,[rax]
	mov QWORD [SS_LN_TOP],rsi 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov rdi,rax
	mov rax,[SS_LN_TOP]
	mov rsi,[rax]
	mov QWORD [SS_LN_TOP],rsi 
	mov QWORD [rax],0
	mov BYTE [rax+6],1
	mov QWORD [rax+8],rdi
	mov rdi,r14
	mov QWORD [rdi+8+8*0],rax
	mov rax,[SS_RCD_2_TOP]
	mov rsi,[rax] 
	mov QWORD [SS_RCD_2_TOP],rsi
	mov QWORD [rax],0
	mov r10,rax
	mov rax,[SS_RCD_2_TOP]
	mov rsi,[rax] 
	mov QWORD [SS_RCD_2_TOP],rsi
	mov QWORD [rax],0
	mov rcx,rax
	mov rax,r11
	mov rdi,rcx
	mov QWORD [rdi+8+8*0],rax
	mov rax,unt 
	mov rax,unt_1
	mov rdi,rcx
	mov QWORD [rdi+8+8*1],rax
	mov rax,rcx
	mov BYTE [rax+6],0
	mov rdi,r10
	mov QWORD [rdi+8+8*0],rax
	mov rax,r13
	mov rdi,r10
	mov QWORD [rdi+8+8*1],rax
	mov rax,r10
	mov BYTE [rax+6],1
	mov rdi,r14
	mov QWORD [rdi+8+8*1],rax
	mov rax,r14
	mov BYTE [rax+6],4
	mov rdi,rax
	mov rax,[SS_LN_TOP]
	mov rsi,[rax]
	mov QWORD [SS_LN_TOP],rsi 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov rdi,rax
	mov rax,[SS_LN_TOP]
	mov rsi,[rax]
	mov QWORD [SS_LN_TOP],rsi 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	lea rsp,[rsp+8*3]
	jmp LB_2703
LB_2706:
;; rsp=3 , %1754~2'(= a17◂ [ a9◂ [ ]{| l |}] ) %1752~1'(= r ) %1751~0'(= r ) %1749~9'(= a19◂ [ a9◂ [ ]{| l |}] ) %1748~8'(= a35◂ [ *{ }] ) 
; #129 { 9'(= a19◂ [ a9◂ [ ]{| l |}] ) 2'(= a17◂ [ a9◂ [ ]{| l |}] ) } ⊢ 2(<7)◂{ 9'(= a19◂ [ a9◂ [ ]{| l |}] ) 2'(= a17◂ [ a9◂ [ ]{| l |}] ) }
;; rsp=3 , %1766~2(<7)◂{ 9'(= a19◂ [ a9◂ [ ]{| l |}] ) 2'(= a17◂ [ a9◂ [ ]{| l |}] ) } %1752~1'(= r ) %1751~0'(= r ) %1748~8'(= a35◂ [ *{ }] ) 
; #193 2(<7)◂{ 9'(= a19◂ [ a9◂ [ ]{| l |}] ) 2'(= a17◂ [ a9◂ [ ]{| l |}] ) } ⊢ 0(<2)◂2(<7)◂{ 9'(= a19◂ [ a9◂ [ ]{| l |}] ) 2'(= a17◂ [ a9◂ [ ]{| l |}] ) }
;; rsp=3 , %1767~0(<2)◂2(<7)◂{ 9'(= a19◂ [ a9◂ [ ]{| l |}] ) 2'(= a17◂ [ a9◂ [ ]{| l |}] ) } %1752~1'(= r ) %1751~0'(= r ) %1748~8'(= a35◂ [ *{ }] ) 
; #22 0(<2)◂2(<7)◂{ 9'(= a19◂ [ a9◂ [ ]{| l |}] ) 2'(= a17◂ [ a9◂ [ ]{| l |}] ) } ⊢ 0(<2)◂0(<2)◂2(<7)◂{ 9'(= a19◂ [ a9◂ [ ]{| l |}] ) 2'(= a17◂ [ a9◂ [ ]{| l |}] ) }
;; rsp=3 , %1768~0(<2)◂0(<2)◂2(<7)◂{ 9'(= a19◂ [ a9◂ [ ]{| l |}] ) 2'(= a17◂ [ a9◂ [ ]{| l |}] ) } %1752~1'(= r ) %1751~0'(= r ) %1748~8'(= a35◂ [ *{ }] ) 
; ∎ 0(<2)◂0(<2)◂2(<7)◂{ 9'(= a19◂ [ a9◂ [ ]{| l |}] ) 2'(= a17◂ [ a9◂ [ ]{| l |}] ) }
; .dlt.ptn 1'(= r )
; .dlt.ptn 0'(= r )
; .dlt.ptn 8'(= a35◂ [ *{ }] )
;	.dlt adt ⊢ _  
; .mov_ptn2 0(<2)◂0(<2)◂2(<7)◂{ 9'(= a19◂ [ a9◂ [ ]{| l |}] ) 2'(= a17◂ [ a9◂ [ ]{| l |}] ) } ⊢ 2'(= a3◂ [ a35◂ [ a17◂ [ a9◂ [ ]{| l |}]]] )
	mov r13,r8
; .mov_ptn 0(<2)◂0(<2)◂2(<7)◂{ 9'(= a19◂ [ a9◂ [ ]{| l |}] ) 0'(= a17◂ [ a9◂ [ ]{| l |}] ) } ⊢ 2'(= a3◂ [ a35◂ [ a17◂ [ a9◂ [ ]{| l |}]]] )
	mov rax,[SS_RCD_2_TOP]
	mov rsi,[rax] 
	mov QWORD [SS_RCD_2_TOP],rsi
	mov QWORD [rax],0
	mov r14,rax
	mov rax,QWORD [rsp-8+8*2]
	mov rdi,r14
	mov QWORD [rdi+8+8*0],rax
	mov rax,r13
	mov rdi,r14
	mov QWORD [rdi+8+8*1],rax
	mov rax,r14
	mov BYTE [rax+6],2
	mov rdi,rax
	mov rax,[SS_LN_TOP]
	mov rsi,[rax]
	mov QWORD [SS_LN_TOP],rsi 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov rdi,rax
	mov rax,[SS_LN_TOP]
	mov rsi,[rax]
	mov QWORD [SS_LN_TOP],rsi 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	lea rsp,[rsp+8*3]
	jmp LB_2703
LB_2705:
;; ? 10'(= a35◂ [ a17◂ [ a9◂ [ ]{| l |}]] ) ⊢ 1(<2)◂10'(= a2◂ [ *{ rr{| l |}}] )
;; rsp=3 , %1753~10'(= a2◂ [ *{ rr{| l |}}] ) %1752~1'(= r ) %1751~0'(= r ) %1749~9'(= a19◂ [ a9◂ [ ]{| l |}] ) %1748~8'(= a35◂ [ *{ }] ) 
; #192 10'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 1(<2)◂10'(= a2◂ [ *{ rr{| l |}}] )
;; rsp=3 , %1769~1(<2)◂10'(= a2◂ [ *{ rr{| l |}}] ) %1752~1'(= r ) %1751~0'(= r ) %1749~9'(= a19◂ [ a9◂ [ ]{| l |}] ) %1748~8'(= a35◂ [ *{ }] ) 
; #22 1(<2)◂10'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 0(<2)◂1(<2)◂10'(= a2◂ [ *{ rr{| l |}}] )
;; rsp=3 , %1770~0(<2)◂1(<2)◂10'(= a2◂ [ *{ rr{| l |}}] ) %1752~1'(= r ) %1751~0'(= r ) %1749~9'(= a19◂ [ a9◂ [ ]{| l |}] ) %1748~8'(= a35◂ [ *{ }] ) 
; ∎ 0(<2)◂1(<2)◂10'(= a2◂ [ *{ rr{| l |}}] )
; .dlt.ptn 1'(= r )
; .dlt.ptn 0'(= r )
; .dlt.ptn 9'(= a19◂ [ a9◂ [ ]{| l |}] )
;	.dlt adt ⊢ _  
; .dlt.ptn 8'(= a35◂ [ *{ }] )
;	.dlt adt ⊢ _  
; .mov_ptn2 0(<2)◂1(<2)◂10'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 2'(= a3◂ [ a35◂ [ a17◂ [ a9◂ [ ]{| l |}]]] )
; .mov_ptn 0(<2)◂1(<2)◂10'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 2'(= a3◂ [ a35◂ [ a17◂ [ a9◂ [ ]{| l |}]]] )
	mov rax,QWORD [rsp-8+8*1]
	mov rdi,rax
	mov rax,[SS_LN_TOP]
	mov rsi,[rax]
	mov QWORD [SS_LN_TOP],rsi 
	mov QWORD [rax],0
	mov BYTE [rax+6],1
	mov QWORD [rax+8],rdi
	mov rdi,rax
	mov rax,[SS_LN_TOP]
	mov rsi,[rax]
	mov QWORD [SS_LN_TOP],rsi 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	lea rsp,[rsp+8*3]
	jmp LB_2703
LB_2703:
	movzx rax,BYTE [r8+6]
	cmp rax,0
	jnz LB_2672
	pop r14
	pop r9
	add rsp,8
	pop r13
	ret
LB_2672:
	jmp LB_2709
LB_2708:
	add r14,1 
LB_2709:
	cmp r14,r9
	jge LB_2710
	movzx rax,BYTE [r13+8+r14]
	cmp rax,9 
	jz LB_2708
	cmp rax,32 
	jz LB_2708
LB_2710
	call GRM_217
	movzx rax,BYTE [r8+6]
	cmp rax,0
	jnz LB_2713
	jmp LB_2714
LB_2713:
	jmp LB_2711
LB_2714:
	lea rsp,[rsp-8*1]
	mov r8,[r8+8]
; .mov_ptn2 2'(= a35◂ [ *{ }] ) ⊢ 8'(= a35◂ [ *{ }] )
; .mov_ptn 2'(= a35◂ [ *{ }] ) ⊢ 8'(= a35◂ [ *{ }] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_2712
LB_2711:
	lea rsp,[rsp+8*0]
	jmp LB_2707
LB_2712:
	jmp LB_2716
LB_2715:
	add r14,1 
LB_2716:
	cmp r14,r9
	jge LB_2717
	movzx rax,BYTE [r13+8+r14]
	cmp rax,9 
	jz LB_2715
	cmp rax,32 
	jz LB_2715
LB_2717
	call GRM_189
	movzx rax,BYTE [r8+6]
	cmp rax,0
	jnz LB_2720
	jmp LB_2721
LB_2720:
	jmp LB_2718
LB_2721:
	lea rsp,[rsp-8*1]
	mov r8,[r8+8]
; .mov_ptn2 2'(= a9◂ [ ] ) ⊢ 9'(= a9◂ [ ] )
; .mov_ptn 2'(= a9◂ [ ] ) ⊢ 9'(= a9◂ [ ] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_2719
LB_2718:
	lea rsp,[rsp+8*1]
	jmp LB_2707
LB_2719:
	jmp LB_2723
LB_2722:
	add r14,1 
LB_2723:
	cmp r14,r9
	jge LB_2724
	movzx rax,BYTE [r13+8+r14]
	cmp rax,9 
	jz LB_2722
	cmp rax,32 
	jz LB_2722
LB_2724
	call GRM_201
	movzx rax,BYTE [r8+6]
	cmp rax,0
	jnz LB_2727
	jmp LB_2728
LB_2727:
	jmp LB_2725
LB_2728:
	lea rsp,[rsp-8*1]
	mov r8,[r8+8]
; .mov_ptn2 2'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) ⊢ 10'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] )
; .mov_ptn 2'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) ⊢ 10'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_2726
LB_2725:
	lea rsp,[rsp+8*2]
	jmp LB_2707
LB_2726:
	sub rsp,32
	mov QWORD [rsp+24],r13
	mov QWORD [rsp+16],r14 
	mov QWORD [rsp+8],r9
	jmp LB_2732
LB_2731:
	add r14,1 
LB_2732:
	cmp r14,r9
	jge LB_2733
	movzx rax,BYTE [r13+8+r14]
	cmp rax,9 
	jz LB_2731
	cmp rax,10 
	jz LB_2731
	cmp rax,32 
	jz LB_2731
LB_2733
	lea rax,[r14+4]
	cmp rax,r9
	jg LB_2736
	jmp LB_2737
LB_2736:
	mov r8,unt_1
	jmp LB_2734
LB_2737:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],226
	jnz LB_2738
	cmp BYTE [rdi+1],138
	jnz LB_2738
	cmp BYTE [rdi+2],162
	jnz LB_2738
	cmp BYTE [rdi+3],124
	jnz LB_2738
	jmp LB_2739
LB_2738:
	mov r8,unt_1
	jmp LB_2734
LB_2739:
	add r14,4
	jmp LB_2735
LB_2734:
	lea rsp,[rsp+8*0]
	jmp LB_2730
LB_2735:
	mov QWORD [rsp+8*0],r14
	mov r13,QWORD [rsp+16+8*0]
	mov r14,QWORD [rsp+8*0]
	jmp LB_2741
LB_2741
;; rsp=0 , %1777~1'(= r ) %1776~0'(= r ) 
; #23 { } ⊢ 1(<2)◂{ }
;; rsp=0 , %1778~1(<2)◂{ } %1777~1'(= r ) %1776~0'(= r ) 
; #193 1(<2)◂{ } ⊢ 0(<2)◂1(<2)◂{ }
;; rsp=0 , %1779~0(<2)◂1(<2)◂{ } %1777~1'(= r ) %1776~0'(= r ) 
; #22 0(<2)◂1(<2)◂{ } ⊢ 0(<2)◂0(<2)◂1(<2)◂{ }
;; rsp=0 , %1780~0(<2)◂0(<2)◂1(<2)◂{ } %1777~1'(= r ) %1776~0'(= r ) 
; ∎ 0(<2)◂0(<2)◂1(<2)◂{ }
; .dlt.ptn 1'(= r )
; .dlt.ptn 0'(= r )
; .mov_ptn2 0(<2)◂0(<2)◂1(<2)◂{ } ⊢ 2'(= a3◂ [ a35◂ [ a3◂ [ *{ a8◂ [ a13◂ [ {| l |}]]a17◂ [ a9◂ [ ]{| l |}]}]]] )
; .mov_ptn 0(<2)◂0(<2)◂1(<2)◂{ } ⊢ 2'(= a3◂ [ a35◂ [ a3◂ [ *{ a8◂ [ a13◂ [ {| l |}]]a17◂ [ a9◂ [ ]{| l |}]}]]] )
	mov rax,unt 
	mov rax,unt_1
	mov rdi,rax
	mov rax,[SS_LN_TOP]
	mov rsi,[rax]
	mov QWORD [SS_LN_TOP],rsi 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov rdi,rax
	mov rax,[SS_LN_TOP]
	mov rsi,[rax]
	mov QWORD [SS_LN_TOP],rsi 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	jmp LB_2740
LB_2740:
	movzx rax,BYTE [r8+6]
	cmp rax,0
	jnz LB_2730
	pop r14
	pop r9
	add rsp,8
	pop r13
	jmp LB_2729
LB_2730:
	jmp LB_2744
LB_2743:
	add r14,1 
LB_2744:
	cmp r14,r9
	jge LB_2745
	movzx rax,BYTE [r13+8+r14]
	cmp rax,9 
	jz LB_2743
	cmp rax,32 
	jz LB_2743
LB_2745
	lea rax,[r14+3]
	cmp rax,r9
	jg LB_2748
	jmp LB_2749
LB_2748:
	mov r8,unt_1
	jmp LB_2746
LB_2749:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],226
	jnz LB_2750
	cmp BYTE [rdi+1],138
	jnz LB_2750
	cmp BYTE [rdi+2],162
	jnz LB_2750
	jmp LB_2751
LB_2750:
	mov r8,unt_1
	jmp LB_2746
LB_2751:
	add r14,3
	jmp LB_2747
LB_2746:
	lea rsp,[rsp+8*0]
	jmp LB_2742
LB_2747:
	jmp LB_2753
LB_2752:
	add r14,1 
LB_2753:
	cmp r14,r9
	jge LB_2754
	movzx rax,BYTE [r13+8+r14]
	cmp rax,9 
	jz LB_2752
	cmp rax,32 
	jz LB_2752
LB_2754
	call GRM_205
	movzx rax,BYTE [r8+6]
	cmp rax,0
	jnz LB_2757
	jmp LB_2758
LB_2757:
	jmp LB_2755
LB_2758:
	lea rsp,[rsp-8*1]
	mov r8,[r8+8]
; .mov_ptn2 2'(= a8◂ [ a13◂ [ {| l |}]] ) ⊢ 8'(= a8◂ [ a13◂ [ {| l |}]] )
; .mov_ptn 2'(= a8◂ [ a13◂ [ {| l |}]] ) ⊢ 8'(= a8◂ [ a13◂ [ {| l |}]] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_2756
LB_2755:
	lea rsp,[rsp+8*0]
	pop rdi
	pop r9 
	pop r14
	pop r13
	jmp LB_2729
LB_2756:
	jmp LB_2760
LB_2759:
	add r14,1 
LB_2760:
	cmp r14,r9
	jge LB_2761
	movzx rax,BYTE [r13+8+r14]
	cmp rax,9 
	jz LB_2759
	cmp rax,32 
	jz LB_2759
LB_2761
	lea rax,[r14+1]
	cmp rax,r9
	jg LB_2764
	jmp LB_2765
LB_2764:
	mov r8,unt_1
	jmp LB_2762
LB_2765:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],10
	jnz LB_2766
	jmp LB_2767
LB_2766:
	mov r8,unt_1
	jmp LB_2762
LB_2767:
	add r14,1
	jmp LB_2763
LB_2762:
	lea rsp,[rsp+8*1]
	pop rdi
	pop r9 
	pop r14
	pop r13
	jmp LB_2729
LB_2763:
	jmp LB_2769
LB_2768:
	add r14,1 
LB_2769:
	cmp r14,r9
	jge LB_2770
	movzx rax,BYTE [r13+8+r14]
	cmp rax,9 
	jz LB_2768
	cmp rax,32 
	jz LB_2768
LB_2770
	call GRM_234
	movzx rax,BYTE [r8+6]
	cmp rax,0
	jnz LB_2773
	jmp LB_2774
LB_2773:
	jmp LB_2771
LB_2774:
	lea rsp,[rsp-8*1]
	mov r8,[r8+8]
; .mov_ptn2 2'(= a35◂ [ a17◂ [ a9◂ [ ]{| l |}]] ) ⊢ 9'(= a35◂ [ a17◂ [ a9◂ [ ]{| l |}]] )
; .mov_ptn 2'(= a35◂ [ a17◂ [ a9◂ [ ]{| l |}]] ) ⊢ 9'(= a35◂ [ a17◂ [ a9◂ [ ]{| l |}]] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_2772
LB_2771:
	lea rsp,[rsp+8*1]
	pop rdi
	pop r9 
	pop r14
	pop r13
	jmp LB_2729
LB_2772:
	mov QWORD [rsp+8*2],r14
	mov r13,QWORD [rsp+16+8*2]
	mov r14,QWORD [rsp+8*2]
	jmp LB_2776
LB_2776
;; rsp=2 , %1784~1'(= r ) %1783~0'(= r ) %1782~9'(= a35◂ [ a17◂ [ a9◂ [ ]{| l |}]] ) %1781~8'(= a8◂ [ a13◂ [ {| l |}]] ) 
;; ? 9'(= a35◂ [ a17◂ [ a9◂ [ ]{| l |}]] ) ⊢ 0(<2)◂2'(= a17◂ [ a9◂ [ ]{| l |}] )
	mov rdi,QWORD [rsp-8+8*1]
	movzx rax,BYTE [rdi+6]
	cmp rax,0
	jnz LB_2777
	mov rax,QWORD [rdi+8]
	mov r8,rax
;; rsp=2 , %1786~2'(= a17◂ [ a9◂ [ ]{| l |}] ) %1784~1'(= r ) %1783~0'(= r ) %1781~8'(= a8◂ [ a13◂ [ {| l |}]] ) 
; #22 { 8'(= a8◂ [ a13◂ [ {| l |}]] ) 2'(= a17◂ [ a9◂ [ ]{| l |}] ) } ⊢ 0(<2)◂{ 8'(= a8◂ [ a13◂ [ {| l |}]] ) 2'(= a17◂ [ a9◂ [ ]{| l |}] ) }
;; rsp=2 , %1787~0(<2)◂{ 8'(= a8◂ [ a13◂ [ {| l |}]] ) 2'(= a17◂ [ a9◂ [ ]{| l |}] ) } %1784~1'(= r ) %1783~0'(= r ) 
; #193 0(<2)◂{ 8'(= a8◂ [ a13◂ [ {| l |}]] ) 2'(= a17◂ [ a9◂ [ ]{| l |}] ) } ⊢ 0(<2)◂0(<2)◂{ 8'(= a8◂ [ a13◂ [ {| l |}]] ) 2'(= a17◂ [ a9◂ [ ]{| l |}] ) }
;; rsp=2 , %1788~0(<2)◂0(<2)◂{ 8'(= a8◂ [ a13◂ [ {| l |}]] ) 2'(= a17◂ [ a9◂ [ ]{| l |}] ) } %1784~1'(= r ) %1783~0'(= r ) 
; #22 0(<2)◂0(<2)◂{ 8'(= a8◂ [ a13◂ [ {| l |}]] ) 2'(= a17◂ [ a9◂ [ ]{| l |}] ) } ⊢ 0(<2)◂0(<2)◂0(<2)◂{ 8'(= a8◂ [ a13◂ [ {| l |}]] ) 2'(= a17◂ [ a9◂ [ ]{| l |}] ) }
;; rsp=2 , %1789~0(<2)◂0(<2)◂0(<2)◂{ 8'(= a8◂ [ a13◂ [ {| l |}]] ) 2'(= a17◂ [ a9◂ [ ]{| l |}] ) } %1784~1'(= r ) %1783~0'(= r ) 
; ∎ 0(<2)◂0(<2)◂0(<2)◂{ 8'(= a8◂ [ a13◂ [ {| l |}]] ) 2'(= a17◂ [ a9◂ [ ]{| l |}] ) }
; .dlt.ptn 1'(= r )
; .dlt.ptn 0'(= r )
; .mov_ptn2 0(<2)◂0(<2)◂0(<2)◂{ 8'(= a8◂ [ a13◂ [ {| l |}]] ) 2'(= a17◂ [ a9◂ [ ]{| l |}] ) } ⊢ 2'(= a3◂ [ a35◂ [ a3◂ [ *{ a8◂ [ a13◂ [ {| l |}]]a17◂ [ a9◂ [ ]{| l |}]}]]] )
	mov r13,r8
; .mov_ptn 0(<2)◂0(<2)◂0(<2)◂{ 8'(= a8◂ [ a13◂ [ {| l |}]] ) 0'(= a17◂ [ a9◂ [ ]{| l |}] ) } ⊢ 2'(= a3◂ [ a35◂ [ a3◂ [ *{ a8◂ [ a13◂ [ {| l |}]]a17◂ [ a9◂ [ ]{| l |}]}]]] )
	mov rax,[SS_RCD_2_TOP]
	mov rsi,[rax] 
	mov QWORD [SS_RCD_2_TOP],rsi
	mov QWORD [rax],0
	mov r14,rax
	mov rax,QWORD [rsp-8+8*2]
	mov rdi,r14
	mov QWORD [rdi+8+8*0],rax
	mov rax,r13
	mov rdi,r14
	mov QWORD [rdi+8+8*1],rax
	mov rax,r14
	mov BYTE [rax+6],0
	mov rdi,rax
	mov rax,[SS_LN_TOP]
	mov rsi,[rax]
	mov QWORD [SS_LN_TOP],rsi 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov rdi,rax
	mov rax,[SS_LN_TOP]
	mov rsi,[rax]
	mov QWORD [SS_LN_TOP],rsi 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	lea rsp,[rsp+8*2]
	jmp LB_2775
LB_2777:
;; ? 9'(= a35◂ [ a17◂ [ a9◂ [ ]{| l |}]] ) ⊢ 1(<2)◂9'(= a2◂ [ *{ rr{| l |}}] )
;; rsp=2 , %1785~9'(= a2◂ [ *{ rr{| l |}}] ) %1784~1'(= r ) %1783~0'(= r ) %1781~8'(= a8◂ [ a13◂ [ {| l |}]] ) 
; #192 9'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 1(<2)◂9'(= a2◂ [ *{ rr{| l |}}] )
;; rsp=2 , %1790~1(<2)◂9'(= a2◂ [ *{ rr{| l |}}] ) %1784~1'(= r ) %1783~0'(= r ) %1781~8'(= a8◂ [ a13◂ [ {| l |}]] ) 
; #22 1(<2)◂9'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 0(<2)◂1(<2)◂9'(= a2◂ [ *{ rr{| l |}}] )
;; rsp=2 , %1791~0(<2)◂1(<2)◂9'(= a2◂ [ *{ rr{| l |}}] ) %1784~1'(= r ) %1783~0'(= r ) %1781~8'(= a8◂ [ a13◂ [ {| l |}]] ) 
; ∎ 0(<2)◂1(<2)◂9'(= a2◂ [ *{ rr{| l |}}] )
; .dlt.ptn 1'(= r )
; .dlt.ptn 0'(= r )
; .dlt.ptn 8'(= a8◂ [ a13◂ [ {| l |}]] )
;	.dlt adt ⊢ _  
; .mov_ptn2 0(<2)◂1(<2)◂9'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 2'(= a3◂ [ a35◂ [ a3◂ [ *{ a8◂ [ a13◂ [ {| l |}]]a17◂ [ a9◂ [ ]{| l |}]}]]] )
; .mov_ptn 0(<2)◂1(<2)◂9'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 2'(= a3◂ [ a35◂ [ a3◂ [ *{ a8◂ [ a13◂ [ {| l |}]]a17◂ [ a9◂ [ ]{| l |}]}]]] )
	mov rax,QWORD [rsp-8+8*1]
	mov rdi,rax
	mov rax,[SS_LN_TOP]
	mov rsi,[rax]
	mov QWORD [SS_LN_TOP],rsi 
	mov QWORD [rax],0
	mov BYTE [rax+6],1
	mov QWORD [rax+8],rdi
	mov rdi,rax
	mov rax,[SS_LN_TOP]
	mov rsi,[rax]
	mov QWORD [SS_LN_TOP],rsi 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	lea rsp,[rsp+8*2]
	jmp LB_2775
LB_2775:
	movzx rax,BYTE [r8+6]
	cmp rax,0
	jnz LB_2742
	pop r14
	pop r9
	add rsp,8
	pop r13
	jmp LB_2729
LB_2742:
	jmp LB_2780
LB_2779:
	add r14,1 
LB_2780:
	cmp r14,r9
	jge LB_2781
	movzx rax,BYTE [r13+8+r14]
	cmp rax,9 
	jz LB_2779
	cmp rax,32 
	jz LB_2779
LB_2781
	call GRM_220
	movzx rax,BYTE [r8+6]
	cmp rax,0
	jnz LB_2784
	jmp LB_2785
LB_2784:
	jmp LB_2782
LB_2785:
	lea rsp,[rsp-8*2]
; .mov_ptn2 2'(= *{ rr} ) ⊢ { 8'(= r ) 9'(= r ) }
; .mov_ptn 2'(= *{ rr} ) ⊢ { 8'(= r ) 9'(= r ) }
	mov rdi,r8
	mov rdi,QWORD [rdi+8+8*0]
	mov r10,rdi
	mov QWORD [rsp-8+8*2],r10
	mov rdi,r8
	mov rdi,QWORD [rdi+8+8*1]
	mov r11,rdi
	mov QWORD [rsp-8+8*1],r11
	jmp LB_2783
LB_2782:
	lea rsp,[rsp+8*0]
	jmp LB_2778
LB_2783:
	jmp LB_2787
LB_2786:
	add r14,1 
LB_2787:
	cmp r14,r9
	jge LB_2788
	movzx rax,BYTE [r13+8+r14]
	cmp rax,9 
	jz LB_2786
	cmp rax,32 
	jz LB_2786
LB_2788
	call GRM_234
	movzx rax,BYTE [r8+6]
	cmp rax,0
	jnz LB_2791
	jmp LB_2792
LB_2791:
	jmp LB_2789
LB_2792:
	lea rsp,[rsp-8*1]
	mov r8,[r8+8]
; .mov_ptn2 2'(= a35◂ [ a17◂ [ a9◂ [ ]{| l |}]] ) ⊢ 10'(= a35◂ [ a17◂ [ a9◂ [ ]{| l |}]] )
; .mov_ptn 2'(= a35◂ [ a17◂ [ a9◂ [ ]{| l |}]] ) ⊢ 10'(= a35◂ [ a17◂ [ a9◂ [ ]{| l |}]] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_2790
LB_2789:
	lea rsp,[rsp+8*2]
	jmp LB_2778
LB_2790:
	mov QWORD [rsp+8*3],r14
	mov r13,QWORD [rsp+16+8*3]
	mov r14,QWORD [rsp+8*3]
	jmp LB_2794
LB_2794
;; rsp=3 , %1796~1'(= r ) %1795~0'(= r ) %1794~10'(= a35◂ [ a17◂ [ a9◂ [ ]{| l |}]] ) %1793~9'(= r ) %1792~8'(= r ) 
;; ? 10'(= a35◂ [ a17◂ [ a9◂ [ ]{| l |}]] ) ⊢ 0(<2)◂2'(= a17◂ [ a9◂ [ ]{| l |}] )
	mov rdi,QWORD [rsp-8+8*1]
	movzx rax,BYTE [rdi+6]
	cmp rax,0
	jnz LB_2795
	mov rax,QWORD [rdi+8]
	mov r8,rax
;; rsp=3 , %1798~2'(= a17◂ [ a9◂ [ ]{| l |}] ) %1796~1'(= r ) %1795~0'(= r ) %1793~9'(= r ) %1792~8'(= r ) 
	jmp LB_2796
LB_2796:
; $ %[ "lc_code 20" ] ⊢ %[ "lc_code 20" ]
;; rsp=3 , %1799~%[ "lc_code 20" ] %1798~2'(= a17◂ [ a9◂ [ ]{| l |}] ) %1796~1'(= r ) %1795~0'(= r ) %1793~9'(= r ) %1792~8'(= r ) 
; #20 { } ⊢ 1(<2)◂{ }
;; rsp=3 , %1800~1(<2)◂{ } %1799~%[ "lc_code 20" ] %1798~2'(= a17◂ [ a9◂ [ ]{| l |}] ) %1796~1'(= r ) %1795~0'(= r ) %1793~9'(= r ) %1792~8'(= r ) 
; #21 { { 8'(= r ) 9'(= r ) %[ "lc_code 20" ] } 1(<2)◂{ } } ⊢ 0(<2)◂{ { 8'(= r ) 9'(= r ) %[ "lc_code 20" ] } 1(<2)◂{ } }
;; rsp=3 , %1801~0(<2)◂{ { 8'(= r ) 9'(= r ) %[ "lc_code 20" ] } 1(<2)◂{ } } %1798~2'(= a17◂ [ a9◂ [ ]{| l |}] ) %1796~1'(= r ) %1795~0'(= r ) 
; #192 0(<2)◂{ { 8'(= r ) 9'(= r ) %[ "lc_code 20" ] } 1(<2)◂{ } } ⊢ 1(<2)◂0(<2)◂{ { 8'(= r ) 9'(= r ) %[ "lc_code 20" ] } 1(<2)◂{ } }
;; rsp=3 , %1802~1(<2)◂0(<2)◂{ { 8'(= r ) 9'(= r ) %[ "lc_code 20" ] } 1(<2)◂{ } } %1798~2'(= a17◂ [ a9◂ [ ]{| l |}] ) %1796~1'(= r ) %1795~0'(= r ) 
; #22 1(<2)◂0(<2)◂{ { 8'(= r ) 9'(= r ) %[ "lc_code 20" ] } 1(<2)◂{ } } ⊢ 0(<2)◂1(<2)◂0(<2)◂{ { 8'(= r ) 9'(= r ) %[ "lc_code 20" ] } 1(<2)◂{ } }
;; rsp=3 , %1803~0(<2)◂1(<2)◂0(<2)◂{ { 8'(= r ) 9'(= r ) %[ "lc_code 20" ] } 1(<2)◂{ } } %1798~2'(= a17◂ [ a9◂ [ ]{| l |}] ) %1796~1'(= r ) %1795~0'(= r ) 
; ∎ 0(<2)◂1(<2)◂0(<2)◂{ { 8'(= r ) 9'(= r ) %[ "lc_code 20" ] } 1(<2)◂{ } }
; .dlt.ptn 2'(= a17◂ [ a9◂ [ ]{| l |}] )
;	.dlt adt ⊢ _  
; .dlt.ptn 1'(= r )
; .dlt.ptn 0'(= r )
; .mov_ptn2 0(<2)◂1(<2)◂0(<2)◂{ { 8'(= r ) 9'(= r ) %[ "lc_code 20" ] } 1(<2)◂{ } } ⊢ 2'(= a3◂ [ a35◂ [ a3◂ [ *{ a8◂ [ a13◂ [ {| l |}]]a17◂ [ a9◂ [ ]{| l |}]}]]] )
; .mov_ptn 0(<2)◂1(<2)◂0(<2)◂{ { 8'(= r ) 9'(= r ) %[ "lc_code 20" ] } 1(<2)◂{ } } ⊢ 2'(= a3◂ [ a35◂ [ a3◂ [ *{ a8◂ [ a13◂ [ {| l |}]]a17◂ [ a9◂ [ ]{| l |}]}]]] )
	mov rax,[SS_RCD_2_TOP]
	mov rsi,[rax] 
	mov QWORD [SS_RCD_2_TOP],rsi
	mov QWORD [rax],0
	mov r13,rax
	mov rax,[SS_RCD_3_TOP]
	mov rsi,[rax] 
	mov QWORD [SS_RCD_3_TOP],rsi
	mov QWORD [rax],0
	mov r14,rax
	mov rax,QWORD [rsp-8+8*3]
	mov rdi,r14
	mov QWORD [rdi+8+8*0],rax
	mov rax,QWORD [rsp-8+8*2]
	mov rdi,r14
	mov QWORD [rdi+8+8*1],rax
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	mov rdi,1  
	mov rsi,24
	xor rax,rax
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call calloc
	mov rsp,QWORD [rsp_tmp]  
	mov rdi,10
	mov rsi,0x_40_00_0000_0000_0000
	or rdi,rsi
	mov QWORD [rax],rdi
	mov QWORD [rax+8*2],0
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	mov BYTE [rax+8+0],108
	mov BYTE [rax+8+1],99
	mov BYTE [rax+8+2],95
	mov BYTE [rax+8+3],99
	mov BYTE [rax+8+4],111
	mov BYTE [rax+8+5],100
	mov BYTE [rax+8+6],101
	mov BYTE [rax+8+7],32
	mov BYTE [rax+8+8],50
	mov BYTE [rax+8+9],48
	mov rdi,r14
	mov QWORD [rdi+8+8*2],rax
	mov rax,r14
	mov rdi,r13
	mov QWORD [rdi+8+8*0],rax
	mov rax,unt 
	mov rax,unt_1
	mov rdi,r13
	mov QWORD [rdi+8+8*1],rax
	mov rax,r13
	mov BYTE [rax+6],0
	mov rdi,rax
	mov rax,[SS_LN_TOP]
	mov rsi,[rax]
	mov QWORD [SS_LN_TOP],rsi 
	mov QWORD [rax],0
	mov BYTE [rax+6],1
	mov QWORD [rax+8],rdi
	mov rdi,rax
	mov rax,[SS_LN_TOP]
	mov rsi,[rax]
	mov QWORD [SS_LN_TOP],rsi 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	lea rsp,[rsp+8*3]
	jmp LB_2793
LB_2795:
;; ? 10'(= a35◂ [ a17◂ [ a9◂ [ ]{| l |}]] ) ⊢ 1(<2)◂10'(= a2◂ [ *{ rr{| l |}}] )
;; rsp=3 , %1797~10'(= a2◂ [ *{ rr{| l |}}] ) %1796~1'(= r ) %1795~0'(= r ) %1793~9'(= r ) %1792~8'(= r ) 
	jmp LB_2797
LB_2797:
; $ %[ "lc_code 21" ] ⊢ %[ "lc_code 21" ]
;; rsp=3 , %1804~%[ "lc_code 21" ] %1797~10'(= a2◂ [ *{ rr{| l |}}] ) %1796~1'(= r ) %1795~0'(= r ) %1793~9'(= r ) %1792~8'(= r ) 
; #21 { { 8'(= r ) 9'(= r ) %[ "lc_code 21" ] } 10'(= a2◂ [ *{ rr{| l |}}] ) } ⊢ 0(<2)◂{ { 8'(= r ) 9'(= r ) %[ "lc_code 21" ] } 10'(= a2◂ [ *{ rr{| l |}}] ) }
;; rsp=3 , %1805~0(<2)◂{ { 8'(= r ) 9'(= r ) %[ "lc_code 21" ] } 10'(= a2◂ [ *{ rr{| l |}}] ) } %1796~1'(= r ) %1795~0'(= r ) 
; #192 0(<2)◂{ { 8'(= r ) 9'(= r ) %[ "lc_code 21" ] } 10'(= a2◂ [ *{ rr{| l |}}] ) } ⊢ 1(<2)◂0(<2)◂{ { 8'(= r ) 9'(= r ) %[ "lc_code 21" ] } 10'(= a2◂ [ *{ rr{| l |}}] ) }
;; rsp=3 , %1806~1(<2)◂0(<2)◂{ { 8'(= r ) 9'(= r ) %[ "lc_code 21" ] } 10'(= a2◂ [ *{ rr{| l |}}] ) } %1796~1'(= r ) %1795~0'(= r ) 
; #22 1(<2)◂0(<2)◂{ { 8'(= r ) 9'(= r ) %[ "lc_code 21" ] } 10'(= a2◂ [ *{ rr{| l |}}] ) } ⊢ 0(<2)◂1(<2)◂0(<2)◂{ { 8'(= r ) 9'(= r ) %[ "lc_code 21" ] } 10'(= a2◂ [ *{ rr{| l |}}] ) }
;; rsp=3 , %1807~0(<2)◂1(<2)◂0(<2)◂{ { 8'(= r ) 9'(= r ) %[ "lc_code 21" ] } 10'(= a2◂ [ *{ rr{| l |}}] ) } %1796~1'(= r ) %1795~0'(= r ) 
; ∎ 0(<2)◂1(<2)◂0(<2)◂{ { 8'(= r ) 9'(= r ) %[ "lc_code 21" ] } 10'(= a2◂ [ *{ rr{| l |}}] ) }
; .dlt.ptn 1'(= r )
; .dlt.ptn 0'(= r )
; .mov_ptn2 0(<2)◂1(<2)◂0(<2)◂{ { 8'(= r ) 9'(= r ) %[ "lc_code 21" ] } 10'(= a2◂ [ *{ rr{| l |}}] ) } ⊢ 2'(= a3◂ [ a35◂ [ a3◂ [ *{ a8◂ [ a13◂ [ {| l |}]]a17◂ [ a9◂ [ ]{| l |}]}]]] )
; .mov_ptn 0(<2)◂1(<2)◂0(<2)◂{ { 8'(= r ) 9'(= r ) %[ "lc_code 21" ] } 10'(= a2◂ [ *{ rr{| l |}}] ) } ⊢ 2'(= a3◂ [ a35◂ [ a3◂ [ *{ a8◂ [ a13◂ [ {| l |}]]a17◂ [ a9◂ [ ]{| l |}]}]]] )
	mov rax,[SS_RCD_2_TOP]
	mov rsi,[rax] 
	mov QWORD [SS_RCD_2_TOP],rsi
	mov QWORD [rax],0
	mov r13,rax
	mov rax,[SS_RCD_3_TOP]
	mov rsi,[rax] 
	mov QWORD [SS_RCD_3_TOP],rsi
	mov QWORD [rax],0
	mov r14,rax
	mov rax,QWORD [rsp-8+8*3]
	mov rdi,r14
	mov QWORD [rdi+8+8*0],rax
	mov rax,QWORD [rsp-8+8*2]
	mov rdi,r14
	mov QWORD [rdi+8+8*1],rax
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	mov rdi,1  
	mov rsi,24
	xor rax,rax
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call calloc
	mov rsp,QWORD [rsp_tmp]  
	mov rdi,10
	mov rsi,0x_40_00_0000_0000_0000
	or rdi,rsi
	mov QWORD [rax],rdi
	mov QWORD [rax+8*2],0
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	mov BYTE [rax+8+0],108
	mov BYTE [rax+8+1],99
	mov BYTE [rax+8+2],95
	mov BYTE [rax+8+3],99
	mov BYTE [rax+8+4],111
	mov BYTE [rax+8+5],100
	mov BYTE [rax+8+6],101
	mov BYTE [rax+8+7],32
	mov BYTE [rax+8+8],50
	mov BYTE [rax+8+9],49
	mov rdi,r14
	mov QWORD [rdi+8+8*2],rax
	mov rax,r14
	mov rdi,r13
	mov QWORD [rdi+8+8*0],rax
	mov rax,QWORD [rsp-8+8*1]
	mov rdi,r13
	mov QWORD [rdi+8+8*1],rax
	mov rax,r13
	mov BYTE [rax+6],0
	mov rdi,rax
	mov rax,[SS_LN_TOP]
	mov rsi,[rax]
	mov QWORD [SS_LN_TOP],rsi 
	mov QWORD [rax],0
	mov BYTE [rax+6],1
	mov QWORD [rax+8],rdi
	mov rdi,rax
	mov rax,[SS_LN_TOP]
	mov rsi,[rax]
	mov QWORD [SS_LN_TOP],rsi 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	lea rsp,[rsp+8*3]
	jmp LB_2793
LB_2793:
	movzx rax,BYTE [r8+6]
	cmp rax,0
	jnz LB_2778
	pop r14
	pop r9
	add rsp,8
	pop r13
	jmp LB_2729
LB_2778:
	pop rdi
	pop r9 
	pop r14
	pop r13
	jmp LB_2729
LB_2729:
	movzx rax,BYTE [r8+6]
	cmp rax,0
	jnz LB_2798
	jmp LB_2799
LB_2798:
	lea rsp,[rsp+8*3]
	add rsp,8
	pop r9 
	pop r14 
	pop r13
	ret
LB_2799:
	mov QWORD [rsp+8*3],r14
	mov r8,[r8+8]
; .mov_ptn2 2'(= a35◂ [ a3◂ [ *{ a8◂ [ a13◂ [ {| l |}]]a17◂ [ a9◂ [ ]{| l |}]}]] ) ⊢ 3'(= a35◂ [ a3◂ [ *{ a8◂ [ a13◂ [ {| l |}]]a17◂ [ a9◂ [ ]{| l |}]}]] )
	mov r10,r9
; .mov_ptn 2'(= a35◂ [ a3◂ [ *{ a8◂ [ a13◂ [ {| l |}]]a17◂ [ a9◂ [ ]{| l |}]}]] ) ⊢ 3'(= a35◂ [ a3◂ [ *{ a8◂ [ a13◂ [ {| l |}]]a17◂ [ a9◂ [ ]{| l |}]}]] )
	mov rax,r8
	mov r9,rax
	mov r13,QWORD [rsp+16+8*3]
	mov r14,QWORD [rsp+8*3]
	jmp LB_2801
LB_2801
;; rsp=3 , %1808~3'(= a35◂ [ a3◂ [ *{ a8◂ [ a13◂ [ {| l |}]]a17◂ [ a9◂ [ ]{| l |}]}]] ) %1775~1'(= r ) %1774~0'(= r ) %1773~10'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) %1772~9'(= a9◂ [ ] ) %1771~8'(= a35◂ [ *{ }] ) 
;; ? 3'(= a35◂ [ a3◂ [ *{ a8◂ [ a13◂ [ {| l |}]]a17◂ [ a9◂ [ ]{| l |}]}]] ) ⊢ 0(<2)◂2'(= a3◂ [ *{ a8◂ [ a13◂ [ {| l |}]]a17◂ [ a9◂ [ ]{| l |}]}] )
	mov rdi,r9
	movzx rax,BYTE [rdi+6]
	cmp rax,0
	jnz LB_2802
	mov rax,QWORD [rdi+8]
	mov r8,rax
;; rsp=3 , %1810~2'(= a3◂ [ *{ a8◂ [ a13◂ [ {| l |}]]a17◂ [ a9◂ [ ]{| l |}]}] ) %1775~1'(= r ) %1774~0'(= r ) %1773~10'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) %1772~9'(= a9◂ [ ] ) %1771~8'(= a35◂ [ *{ }] ) 
;; ? 2'(= a3◂ [ *{ a8◂ [ a13◂ [ {| l |}]]a17◂ [ a9◂ [ ]{| l |}]}] ) ⊢ 0(<2)◂{ 3'(= a8◂ [ a13◂ [ {| l |}]] ) 4'(= a17◂ [ a9◂ [ ]{| l |}] ) }
	mov rdi,r8
	movzx rax,BYTE [rdi+6]
	cmp rax,0
	jnz LB_2803
	mov rdi,r8
	mov rdi,QWORD [rdi+8+8*0]
	mov r9,rdi
	mov rdi,r8
	mov rdi,QWORD [rdi+8+8*1]
	mov r10,rdi
;; rsp=3 , %1812~4'(= a17◂ [ a9◂ [ ]{| l |}] ) %1811~3'(= a8◂ [ a13◂ [ {| l |}]] ) %1775~1'(= r ) %1774~0'(= r ) %1773~10'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) %1772~9'(= a9◂ [ ] ) %1771~8'(= a35◂ [ *{ }] ) 
; #122 { 9'(= a9◂ [ ] ) 10'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) 3'(= a8◂ [ a13◂ [ {| l |}]] ) } ⊢ 0(<4)◂{ 9'(= a9◂ [ ] ) 10'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) 3'(= a8◂ [ a13◂ [ {| l |}]] ) }
;; rsp=3 , %1813~0(<4)◂{ 9'(= a9◂ [ ] ) 10'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) 3'(= a8◂ [ a13◂ [ {| l |}]] ) } %1812~4'(= a17◂ [ a9◂ [ ]{| l |}] ) %1775~1'(= r ) %1774~0'(= r ) %1771~8'(= a35◂ [ *{ }] ) 
; #129 { 0(<4)◂{ 9'(= a9◂ [ ] ) 10'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) 3'(= a8◂ [ a13◂ [ {| l |}]] ) } 4'(= a17◂ [ a9◂ [ ]{| l |}] ) } ⊢ 2(<7)◂{ 0(<4)◂{ 9'(= a9◂ [ ] ) 10'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) 3'(= a8◂ [ a13◂ [ {| l |}]] ) } 4'(= a17◂ [ a9◂ [ ]{| l |}] ) }
;; rsp=3 , %1814~2(<7)◂{ 0(<4)◂{ 9'(= a9◂ [ ] ) 10'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) 3'(= a8◂ [ a13◂ [ {| l |}]] ) } 4'(= a17◂ [ a9◂ [ ]{| l |}] ) } %1775~1'(= r ) %1774~0'(= r ) %1771~8'(= a35◂ [ *{ }] ) 
; #193 2(<7)◂{ 0(<4)◂{ 9'(= a9◂ [ ] ) 10'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) 3'(= a8◂ [ a13◂ [ {| l |}]] ) } 4'(= a17◂ [ a9◂ [ ]{| l |}] ) } ⊢ 0(<2)◂2(<7)◂{ 0(<4)◂{ 9'(= a9◂ [ ] ) 10'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) 3'(= a8◂ [ a13◂ [ {| l |}]] ) } 4'(= a17◂ [ a9◂ [ ]{| l |}] ) }
;; rsp=3 , %1815~0(<2)◂2(<7)◂{ 0(<4)◂{ 9'(= a9◂ [ ] ) 10'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) 3'(= a8◂ [ a13◂ [ {| l |}]] ) } 4'(= a17◂ [ a9◂ [ ]{| l |}] ) } %1775~1'(= r ) %1774~0'(= r ) %1771~8'(= a35◂ [ *{ }] ) 
; #22 0(<2)◂2(<7)◂{ 0(<4)◂{ 9'(= a9◂ [ ] ) 10'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) 3'(= a8◂ [ a13◂ [ {| l |}]] ) } 4'(= a17◂ [ a9◂ [ ]{| l |}] ) } ⊢ 0(<2)◂0(<2)◂2(<7)◂{ 0(<4)◂{ 9'(= a9◂ [ ] ) 10'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) 3'(= a8◂ [ a13◂ [ {| l |}]] ) } 4'(= a17◂ [ a9◂ [ ]{| l |}] ) }
;; rsp=3 , %1816~0(<2)◂0(<2)◂2(<7)◂{ 0(<4)◂{ 9'(= a9◂ [ ] ) 10'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) 3'(= a8◂ [ a13◂ [ {| l |}]] ) } 4'(= a17◂ [ a9◂ [ ]{| l |}] ) } %1775~1'(= r ) %1774~0'(= r ) %1771~8'(= a35◂ [ *{ }] ) 
; ∎ 0(<2)◂0(<2)◂2(<7)◂{ 0(<4)◂{ 9'(= a9◂ [ ] ) 10'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) 3'(= a8◂ [ a13◂ [ {| l |}]] ) } 4'(= a17◂ [ a9◂ [ ]{| l |}] ) }
; .dlt.ptn 1'(= r )
; .dlt.ptn 0'(= r )
; .dlt.ptn 8'(= a35◂ [ *{ }] )
;	.dlt adt ⊢ _  
; .mov_ptn2 0(<2)◂0(<2)◂2(<7)◂{ 0(<4)◂{ 9'(= a9◂ [ ] ) 10'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) 3'(= a8◂ [ a13◂ [ {| l |}]] ) } 4'(= a17◂ [ a9◂ [ ]{| l |}] ) } ⊢ 2'(= a3◂ [ a35◂ [ a17◂ [ a9◂ [ ]{| l |}]]] )
; .mov_ptn 0(<2)◂0(<2)◂2(<7)◂{ 0(<4)◂{ 9'(= a9◂ [ ] ) 10'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) 3'(= a8◂ [ a13◂ [ {| l |}]] ) } 4'(= a17◂ [ a9◂ [ ]{| l |}] ) } ⊢ 2'(= a3◂ [ a35◂ [ a17◂ [ a9◂ [ ]{| l |}]]] )
	mov rax,[SS_RCD_2_TOP]
	mov rsi,[rax] 
	mov QWORD [SS_RCD_2_TOP],rsi
	mov QWORD [rax],0
	mov r13,rax
	mov rax,[SS_RCD_3_TOP]
	mov rsi,[rax] 
	mov QWORD [SS_RCD_3_TOP],rsi
	mov QWORD [rax],0
	mov r14,rax
	mov rax,QWORD [rsp-8+8*2]
	mov rdi,r14
	mov QWORD [rdi+8+8*0],rax
	mov rax,QWORD [rsp-8+8*1]
	mov rdi,r14
	mov QWORD [rdi+8+8*1],rax
	mov rax,r9
	mov rdi,r14
	mov QWORD [rdi+8+8*2],rax
	mov rax,r14
	mov BYTE [rax+6],0
	mov rdi,r13
	mov QWORD [rdi+8+8*0],rax
	mov rax,r10
	mov rdi,r13
	mov QWORD [rdi+8+8*1],rax
	mov rax,r13
	mov BYTE [rax+6],2
	mov rdi,rax
	mov rax,[SS_LN_TOP]
	mov rsi,[rax]
	mov QWORD [SS_LN_TOP],rsi 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov rdi,rax
	mov rax,[SS_LN_TOP]
	mov rsi,[rax]
	mov QWORD [SS_LN_TOP],rsi 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	lea rsp,[rsp+8*3]
	jmp LB_2800
LB_2803:
;; ? 2'(= a3◂ [ *{ a8◂ [ a13◂ [ {| l |}]]a17◂ [ a9◂ [ ]{| l |}]}] ) ⊢ 1(<2)◂{ }
;; rsp=3 , %1775~1'(= r ) %1774~0'(= r ) %1773~10'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) %1772~9'(= a9◂ [ ] ) %1771~8'(= a35◂ [ *{ }] ) 
; #131 { 9'(= a9◂ [ ] ) 10'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) } ⊢ 0(<7)◂{ 9'(= a9◂ [ ] ) 10'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) }
;; rsp=3 , %1817~0(<7)◂{ 9'(= a9◂ [ ] ) 10'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) } %1775~1'(= r ) %1774~0'(= r ) %1771~8'(= a35◂ [ *{ }] ) 
; #193 0(<7)◂{ 9'(= a9◂ [ ] ) 10'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) } ⊢ 0(<2)◂0(<7)◂{ 9'(= a9◂ [ ] ) 10'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) }
;; rsp=3 , %1818~0(<2)◂0(<7)◂{ 9'(= a9◂ [ ] ) 10'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) } %1775~1'(= r ) %1774~0'(= r ) %1771~8'(= a35◂ [ *{ }] ) 
; #22 0(<2)◂0(<7)◂{ 9'(= a9◂ [ ] ) 10'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) } ⊢ 0(<2)◂0(<2)◂0(<7)◂{ 9'(= a9◂ [ ] ) 10'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) }
;; rsp=3 , %1819~0(<2)◂0(<2)◂0(<7)◂{ 9'(= a9◂ [ ] ) 10'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) } %1775~1'(= r ) %1774~0'(= r ) %1771~8'(= a35◂ [ *{ }] ) 
; ∎ 0(<2)◂0(<2)◂0(<7)◂{ 9'(= a9◂ [ ] ) 10'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) }
; .dlt.ptn 1'(= r )
; .dlt.ptn 0'(= r )
; .dlt.ptn 8'(= a35◂ [ *{ }] )
;	.dlt adt ⊢ _  
; .mov_ptn2 0(<2)◂0(<2)◂0(<7)◂{ 9'(= a9◂ [ ] ) 10'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) } ⊢ 2'(= a3◂ [ a35◂ [ a17◂ [ a9◂ [ ]{| l |}]]] )
; .mov_ptn 0(<2)◂0(<2)◂0(<7)◂{ 9'(= a9◂ [ ] ) 10'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) } ⊢ 2'(= a3◂ [ a35◂ [ a17◂ [ a9◂ [ ]{| l |}]]] )
	mov rax,[SS_RCD_2_TOP]
	mov rsi,[rax] 
	mov QWORD [SS_RCD_2_TOP],rsi
	mov QWORD [rax],0
	mov r13,rax
	mov rax,QWORD [rsp-8+8*2]
	mov rdi,r13
	mov QWORD [rdi+8+8*0],rax
	mov rax,QWORD [rsp-8+8*1]
	mov rdi,r13
	mov QWORD [rdi+8+8*1],rax
	mov rax,r13
	mov BYTE [rax+6],0
	mov rdi,rax
	mov rax,[SS_LN_TOP]
	mov rsi,[rax]
	mov QWORD [SS_LN_TOP],rsi 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov rdi,rax
	mov rax,[SS_LN_TOP]
	mov rsi,[rax]
	mov QWORD [SS_LN_TOP],rsi 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	lea rsp,[rsp+8*3]
	jmp LB_2800
LB_2802:
;; ? 3'(= a35◂ [ a3◂ [ *{ a8◂ [ a13◂ [ {| l |}]]a17◂ [ a9◂ [ ]{| l |}]}]] ) ⊢ 1(<2)◂3'(= a2◂ [ *{ rr{| l |}}] )
;; rsp=3 , %1809~3'(= a2◂ [ *{ rr{| l |}}] ) %1775~1'(= r ) %1774~0'(= r ) %1773~10'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) %1772~9'(= a9◂ [ ] ) %1771~8'(= a35◂ [ *{ }] ) 
; #192 3'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 1(<2)◂3'(= a2◂ [ *{ rr{| l |}}] )
;; rsp=3 , %1820~1(<2)◂3'(= a2◂ [ *{ rr{| l |}}] ) %1775~1'(= r ) %1774~0'(= r ) %1773~10'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) %1772~9'(= a9◂ [ ] ) %1771~8'(= a35◂ [ *{ }] ) 
; #22 1(<2)◂3'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 0(<2)◂1(<2)◂3'(= a2◂ [ *{ rr{| l |}}] )
;; rsp=3 , %1821~0(<2)◂1(<2)◂3'(= a2◂ [ *{ rr{| l |}}] ) %1775~1'(= r ) %1774~0'(= r ) %1773~10'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) %1772~9'(= a9◂ [ ] ) %1771~8'(= a35◂ [ *{ }] ) 
; ∎ 0(<2)◂1(<2)◂3'(= a2◂ [ *{ rr{| l |}}] )
; .dlt.ptn 1'(= r )
; .dlt.ptn 0'(= r )
; .dlt.ptn 10'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] )
;	.dlt adt ⊢ _  
; .dlt.ptn 9'(= a9◂ [ ] )
;	.dlt adt ⊢ _  
; .dlt.ptn 8'(= a35◂ [ *{ }] )
;	.dlt adt ⊢ _  
; .mov_ptn2 0(<2)◂1(<2)◂3'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 2'(= a3◂ [ a35◂ [ a17◂ [ a9◂ [ ]{| l |}]]] )
; .mov_ptn 0(<2)◂1(<2)◂3'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 2'(= a3◂ [ a35◂ [ a17◂ [ a9◂ [ ]{| l |}]]] )
	mov rax,r9
	mov rdi,rax
	mov rax,[SS_LN_TOP]
	mov rsi,[rax]
	mov QWORD [SS_LN_TOP],rsi 
	mov QWORD [rax],0
	mov BYTE [rax+6],1
	mov QWORD [rax+8],rdi
	mov rdi,rax
	mov rax,[SS_LN_TOP]
	mov rsi,[rax]
	mov QWORD [SS_LN_TOP],rsi 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	lea rsp,[rsp+8*3]
	jmp LB_2800
LB_2800:
	movzx rax,BYTE [r8+6]
	cmp rax,0
	jnz LB_2707
	pop r14
	pop r9
	add rsp,8
	pop r13
	ret
LB_2707:
	jmp LB_2806
LB_2805:
	add r14,1 
LB_2806:
	cmp r14,r9
	jge LB_2807
	movzx rax,BYTE [r13+8+r14]
	cmp rax,9 
	jz LB_2805
	cmp rax,10 
	jz LB_2805
	cmp rax,32 
	jz LB_2805
LB_2807
	call GRM_236
	movzx rax,BYTE [r8+6]
	cmp rax,0
	jnz LB_2810
	jmp LB_2811
LB_2810:
	jmp LB_2808
LB_2811:
	lea rsp,[rsp-8*1]
	mov r8,[r8+8]
; .mov_ptn2 2'(= a35◂ [ a7◂ [ *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}]] ) ⊢ 8'(= a35◂ [ a7◂ [ *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}]] )
; .mov_ptn 2'(= a35◂ [ a7◂ [ *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}]] ) ⊢ 8'(= a35◂ [ a7◂ [ *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}]] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_2809
LB_2808:
	lea rsp,[rsp+8*0]
	jmp LB_2804
LB_2809:
	mov QWORD [rsp+8*1],r14
	mov r13,QWORD [rsp+16+8*1]
	mov r14,QWORD [rsp+8*1]
	jmp LB_2813
LB_2813
;; rsp=1 , %1824~1'(= r ) %1823~0'(= r ) %1822~8'(= a35◂ [ a7◂ [ *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}]] ) 
;; ? 8'(= a35◂ [ a7◂ [ *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}]] ) ⊢ 0(<2)◂2'(= a7◂ [ *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}] )
	mov rdi,QWORD [rsp-8+8*1]
	movzx rax,BYTE [rdi+6]
	cmp rax,0
	jnz LB_2814
	mov rax,QWORD [rdi+8]
	mov r8,rax
;; rsp=1 , %1826~2'(= a7◂ [ *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}] ) %1824~1'(= r ) %1823~0'(= r ) 
; #128 2'(= a7◂ [ *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}] ) ⊢ 3(<7)◂2'(= a7◂ [ *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}] )
;; rsp=1 , %1827~3(<7)◂2'(= a7◂ [ *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}] ) %1824~1'(= r ) %1823~0'(= r ) 
; #193 3(<7)◂2'(= a7◂ [ *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}] ) ⊢ 0(<2)◂3(<7)◂2'(= a7◂ [ *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}] )
;; rsp=1 , %1828~0(<2)◂3(<7)◂2'(= a7◂ [ *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}] ) %1824~1'(= r ) %1823~0'(= r ) 
; #22 0(<2)◂3(<7)◂2'(= a7◂ [ *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}] ) ⊢ 0(<2)◂0(<2)◂3(<7)◂2'(= a7◂ [ *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}] )
;; rsp=1 , %1829~0(<2)◂0(<2)◂3(<7)◂2'(= a7◂ [ *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}] ) %1824~1'(= r ) %1823~0'(= r ) 
; ∎ 0(<2)◂0(<2)◂3(<7)◂2'(= a7◂ [ *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}] )
; .dlt.ptn 1'(= r )
; .dlt.ptn 0'(= r )
; .mov_ptn2 0(<2)◂0(<2)◂3(<7)◂2'(= a7◂ [ *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}] ) ⊢ 2'(= a3◂ [ a35◂ [ a17◂ [ a9◂ [ ]{| l |}]]] )
	mov r13,r8
; .mov_ptn 0(<2)◂0(<2)◂3(<7)◂0'(= a7◂ [ *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}] ) ⊢ 2'(= a3◂ [ a35◂ [ a17◂ [ a9◂ [ ]{| l |}]]] )
	mov rax,r13
	mov rdi,rax
	mov rax,[SS_LN_TOP]
	mov rsi,[rax]
	mov QWORD [SS_LN_TOP],rsi 
	mov QWORD [rax],0
	mov BYTE [rax+6],3
	mov QWORD [rax+8],rdi
	mov rdi,rax
	mov rax,[SS_LN_TOP]
	mov rsi,[rax]
	mov QWORD [SS_LN_TOP],rsi 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov rdi,rax
	mov rax,[SS_LN_TOP]
	mov rsi,[rax]
	mov QWORD [SS_LN_TOP],rsi 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	lea rsp,[rsp+8*1]
	jmp LB_2812
LB_2814:
;; ? 8'(= a35◂ [ a7◂ [ *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}]] ) ⊢ 1(<2)◂8'(= a2◂ [ *{ rr{| l |}}] )
;; rsp=1 , %1825~8'(= a2◂ [ *{ rr{| l |}}] ) %1824~1'(= r ) %1823~0'(= r ) 
; #192 8'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 1(<2)◂8'(= a2◂ [ *{ rr{| l |}}] )
;; rsp=1 , %1830~1(<2)◂8'(= a2◂ [ *{ rr{| l |}}] ) %1824~1'(= r ) %1823~0'(= r ) 
; #22 1(<2)◂8'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 0(<2)◂1(<2)◂8'(= a2◂ [ *{ rr{| l |}}] )
;; rsp=1 , %1831~0(<2)◂1(<2)◂8'(= a2◂ [ *{ rr{| l |}}] ) %1824~1'(= r ) %1823~0'(= r ) 
; ∎ 0(<2)◂1(<2)◂8'(= a2◂ [ *{ rr{| l |}}] )
; .dlt.ptn 1'(= r )
; .dlt.ptn 0'(= r )
; .mov_ptn2 0(<2)◂1(<2)◂8'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 2'(= a3◂ [ a35◂ [ a17◂ [ a9◂ [ ]{| l |}]]] )
; .mov_ptn 0(<2)◂1(<2)◂8'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 2'(= a3◂ [ a35◂ [ a17◂ [ a9◂ [ ]{| l |}]]] )
	mov rax,QWORD [rsp-8+8*1]
	mov rdi,rax
	mov rax,[SS_LN_TOP]
	mov rsi,[rax]
	mov QWORD [SS_LN_TOP],rsi 
	mov QWORD [rax],0
	mov BYTE [rax+6],1
	mov QWORD [rax+8],rdi
	mov rdi,rax
	mov rax,[SS_LN_TOP]
	mov rsi,[rax]
	mov QWORD [SS_LN_TOP],rsi 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	lea rsp,[rsp+8*1]
	jmp LB_2812
LB_2812:
	movzx rax,BYTE [r8+6]
	cmp rax,0
	jnz LB_2804
	pop r14
	pop r9
	add rsp,8
	pop r13
	ret
LB_2804:
	jmp LB_2817
LB_2816:
	add r14,1 
LB_2817:
	cmp r14,r9
	jge LB_2818
	movzx rax,BYTE [r13+8+r14]
	cmp rax,9 
	jz LB_2816
	cmp rax,32 
	jz LB_2816
LB_2818
	call GRM_217
	movzx rax,BYTE [r8+6]
	cmp rax,0
	jnz LB_2821
	jmp LB_2822
LB_2821:
	jmp LB_2819
LB_2822:
	lea rsp,[rsp-8*1]
	mov r8,[r8+8]
; .mov_ptn2 2'(= a35◂ [ *{ }] ) ⊢ 8'(= a35◂ [ *{ }] )
; .mov_ptn 2'(= a35◂ [ *{ }] ) ⊢ 8'(= a35◂ [ *{ }] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_2820
LB_2819:
	lea rsp,[rsp+8*0]
	jmp LB_2815
LB_2820:
	jmp LB_2824
LB_2823:
	add r14,1 
LB_2824:
	cmp r14,r9
	jge LB_2825
	movzx rax,BYTE [r13+8+r14]
	cmp rax,9 
	jz LB_2823
	cmp rax,32 
	jz LB_2823
LB_2825
	lea rax,[r14+1]
	cmp rax,r9
	jg LB_2828
	jmp LB_2829
LB_2828:
	mov r8,unt_1
	jmp LB_2826
LB_2829:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],36
	jnz LB_2830
	jmp LB_2831
LB_2830:
	mov r8,unt_1
	jmp LB_2826
LB_2831:
	add r14,1
	jmp LB_2827
LB_2826:
	lea rsp,[rsp+8*1]
	jmp LB_2815
LB_2827:
	sub rsp,32
	mov QWORD [rsp+24],r13
	mov QWORD [rsp+16],r14 
	mov QWORD [rsp+8],r9
	jmp LB_2835
LB_2834:
	add r14,1 
LB_2835:
	cmp r14,r9
	jge LB_2836
	movzx rax,BYTE [r13+8+r14]
	cmp rax,9 
	jz LB_2834
	cmp rax,32 
	jz LB_2834
LB_2836
	call GRM_201
	movzx rax,BYTE [r8+6]
	cmp rax,0
	jnz LB_2839
	jmp LB_2840
LB_2839:
	jmp LB_2837
LB_2840:
	lea rsp,[rsp-8*1]
	mov r8,[r8+8]
; .mov_ptn2 2'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) ⊢ 8'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] )
; .mov_ptn 2'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) ⊢ 8'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_2838
LB_2837:
	lea rsp,[rsp+8*0]
	jmp LB_2833
LB_2838:
	jmp LB_2842
LB_2841:
	add r14,1 
LB_2842:
	cmp r14,r9
	jge LB_2843
	movzx rax,BYTE [r13+8+r14]
	cmp rax,9 
	jz LB_2841
	cmp rax,32 
	jz LB_2841
LB_2843
	lea rax,[r14+3]
	cmp rax,r9
	jg LB_2846
	jmp LB_2847
LB_2846:
	mov r8,unt_1
	jmp LB_2844
LB_2847:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],226
	jnz LB_2848
	cmp BYTE [rdi+1],138
	jnz LB_2848
	cmp BYTE [rdi+2],162
	jnz LB_2848
	jmp LB_2849
LB_2848:
	mov r8,unt_1
	jmp LB_2844
LB_2849:
	add r14,3
	jmp LB_2845
LB_2844:
	lea rsp,[rsp+8*1]
	jmp LB_2833
LB_2845:
	sub rsp,32
	mov QWORD [rsp+24],r13
	mov QWORD [rsp+16],r14 
	mov QWORD [rsp+8],r9
	jmp LB_2853
LB_2852:
	add r14,1 
LB_2853:
	cmp r14,r9
	jge LB_2854
	movzx rax,BYTE [r13+8+r14]
	cmp rax,9 
	jz LB_2852
	cmp rax,32 
	jz LB_2852
LB_2854
	lea rax,[r14+1]
	cmp rax,r9
	jg LB_2857
	jmp LB_2858
LB_2857:
	mov r8,unt_1
	jmp LB_2855
LB_2858:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],10
	jnz LB_2859
	jmp LB_2860
LB_2859:
	mov r8,unt_1
	jmp LB_2855
LB_2860:
	add r14,1
	jmp LB_2856
LB_2855:
	lea rsp,[rsp+8*0]
	jmp LB_2851
LB_2856:
	jmp LB_2862
LB_2861:
	add r14,1 
LB_2862:
	cmp r14,r9
	jge LB_2863
	movzx rax,BYTE [r13+8+r14]
	cmp rax,9 
	jz LB_2861
	cmp rax,32 
	jz LB_2861
LB_2863
	call GRM_237
	movzx rax,BYTE [r8+6]
	cmp rax,0
	jnz LB_2866
	jmp LB_2867
LB_2866:
	jmp LB_2864
LB_2867:
	lea rsp,[rsp-8*1]
	mov r8,[r8+8]
; .mov_ptn2 2'(= a35◂ [ a7◂ [ *{ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}]] ) ⊢ 8'(= a35◂ [ a7◂ [ *{ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}]] )
; .mov_ptn 2'(= a35◂ [ a7◂ [ *{ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}]] ) ⊢ 8'(= a35◂ [ a7◂ [ *{ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}]] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_2865
LB_2864:
	lea rsp,[rsp+8*0]
	jmp LB_2851
LB_2865:
	mov QWORD [rsp+8*1],r14
	mov r13,QWORD [rsp+16+8*1]
	mov r14,QWORD [rsp+8*1]
	jmp LB_2869
LB_2869
;; rsp=1 , %1840~1'(= r ) %1839~0'(= r ) %1838~8'(= a35◂ [ a7◂ [ *{ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}]] ) 
;; ? 8'(= a35◂ [ a7◂ [ *{ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}]] ) ⊢ 0(<2)◂2'(= a7◂ [ *{ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}] )
	mov rdi,QWORD [rsp-8+8*1]
	movzx rax,BYTE [rdi+6]
	cmp rax,0
	jnz LB_2870
	mov rax,QWORD [rdi+8]
	mov r8,rax
;; rsp=1 , %1842~2'(= a7◂ [ *{ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}] ) %1840~1'(= r ) %1839~0'(= r ) 
; #124 2'(= a7◂ [ *{ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}] ) ⊢ 0(<2)◂2'(= a7◂ [ *{ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}] )
;; rsp=1 , %1843~0(<2)◂2'(= a7◂ [ *{ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}] ) %1840~1'(= r ) %1839~0'(= r ) 
; #193 0(<2)◂2'(= a7◂ [ *{ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}] ) ⊢ 0(<2)◂0(<2)◂2'(= a7◂ [ *{ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}] )
;; rsp=1 , %1844~0(<2)◂0(<2)◂2'(= a7◂ [ *{ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}] ) %1840~1'(= r ) %1839~0'(= r ) 
; #22 0(<2)◂0(<2)◂2'(= a7◂ [ *{ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}] ) ⊢ 0(<2)◂0(<2)◂0(<2)◂2'(= a7◂ [ *{ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}] )
;; rsp=1 , %1845~0(<2)◂0(<2)◂0(<2)◂2'(= a7◂ [ *{ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}] ) %1840~1'(= r ) %1839~0'(= r ) 
; ∎ 0(<2)◂0(<2)◂0(<2)◂2'(= a7◂ [ *{ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}] )
; .dlt.ptn 1'(= r )
; .dlt.ptn 0'(= r )
; .mov_ptn2 0(<2)◂0(<2)◂0(<2)◂2'(= a7◂ [ *{ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}] ) ⊢ 2'(= a3◂ [ a35◂ [ a18◂ [ a9◂ [ ]{| l |}]]] )
	mov r13,r8
; .mov_ptn 0(<2)◂0(<2)◂0(<2)◂0'(= a7◂ [ *{ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}] ) ⊢ 2'(= a3◂ [ a35◂ [ a18◂ [ a9◂ [ ]{| l |}]]] )
	mov rax,r13
	mov rdi,rax
	mov rax,[SS_LN_TOP]
	mov rsi,[rax]
	mov QWORD [SS_LN_TOP],rsi 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov rdi,rax
	mov rax,[SS_LN_TOP]
	mov rsi,[rax]
	mov QWORD [SS_LN_TOP],rsi 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov rdi,rax
	mov rax,[SS_LN_TOP]
	mov rsi,[rax]
	mov QWORD [SS_LN_TOP],rsi 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	lea rsp,[rsp+8*1]
	jmp LB_2868
LB_2870:
;; ? 8'(= a35◂ [ a7◂ [ *{ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}]] ) ⊢ 1(<2)◂8'(= a2◂ [ *{ rr{| l |}}] )
;; rsp=1 , %1841~8'(= a2◂ [ *{ rr{| l |}}] ) %1840~1'(= r ) %1839~0'(= r ) 
; #192 8'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 1(<2)◂8'(= a2◂ [ *{ rr{| l |}}] )
;; rsp=1 , %1846~1(<2)◂8'(= a2◂ [ *{ rr{| l |}}] ) %1840~1'(= r ) %1839~0'(= r ) 
; #22 1(<2)◂8'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 0(<2)◂1(<2)◂8'(= a2◂ [ *{ rr{| l |}}] )
;; rsp=1 , %1847~0(<2)◂1(<2)◂8'(= a2◂ [ *{ rr{| l |}}] ) %1840~1'(= r ) %1839~0'(= r ) 
; ∎ 0(<2)◂1(<2)◂8'(= a2◂ [ *{ rr{| l |}}] )
; .dlt.ptn 1'(= r )
; .dlt.ptn 0'(= r )
; .mov_ptn2 0(<2)◂1(<2)◂8'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 2'(= a3◂ [ a35◂ [ a18◂ [ a9◂ [ ]{| l |}]]] )
; .mov_ptn 0(<2)◂1(<2)◂8'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 2'(= a3◂ [ a35◂ [ a18◂ [ a9◂ [ ]{| l |}]]] )
	mov rax,QWORD [rsp-8+8*1]
	mov rdi,rax
	mov rax,[SS_LN_TOP]
	mov rsi,[rax]
	mov QWORD [SS_LN_TOP],rsi 
	mov QWORD [rax],0
	mov BYTE [rax+6],1
	mov QWORD [rax+8],rdi
	mov rdi,rax
	mov rax,[SS_LN_TOP]
	mov rsi,[rax]
	mov QWORD [SS_LN_TOP],rsi 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	lea rsp,[rsp+8*1]
	jmp LB_2868
LB_2868:
	movzx rax,BYTE [r8+6]
	cmp rax,0
	jnz LB_2851
	pop r14
	pop r9
	add rsp,8
	pop r13
	jmp LB_2850
LB_2851:
	jmp LB_2873
LB_2872:
	add r14,1 
LB_2873:
	cmp r14,r9
	jge LB_2874
	movzx rax,BYTE [r13+8+r14]
	cmp rax,9 
	jz LB_2872
	cmp rax,32 
	jz LB_2872
LB_2874
	call GRM_205
	movzx rax,BYTE [r8+6]
	cmp rax,0
	jnz LB_2877
	jmp LB_2878
LB_2877:
	jmp LB_2875
LB_2878:
	lea rsp,[rsp-8*1]
	mov r8,[r8+8]
; .mov_ptn2 2'(= a8◂ [ a13◂ [ {| l |}]] ) ⊢ 8'(= a8◂ [ a13◂ [ {| l |}]] )
; .mov_ptn 2'(= a8◂ [ a13◂ [ {| l |}]] ) ⊢ 8'(= a8◂ [ a13◂ [ {| l |}]] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_2876
LB_2875:
	lea rsp,[rsp+8*0]
	jmp LB_2871
LB_2876:
	jmp LB_2880
LB_2879:
	add r14,1 
LB_2880:
	cmp r14,r9
	jge LB_2881
	movzx rax,BYTE [r13+8+r14]
	cmp rax,9 
	jz LB_2879
	cmp rax,32 
	jz LB_2879
LB_2881
	call GRM_207
	movzx rax,BYTE [r8+6]
	cmp rax,0
	jnz LB_2884
	jmp LB_2885
LB_2884:
	jmp LB_2882
LB_2885:
	lea rsp,[rsp-8*1]
	mov r8,[r8+8]
; .mov_ptn2 2'(= a2◂ [ a8◂ [ a13◂ [ {| l |}]]] ) ⊢ 9'(= a2◂ [ a8◂ [ a13◂ [ {| l |}]]] )
; .mov_ptn 2'(= a2◂ [ a8◂ [ a13◂ [ {| l |}]]] ) ⊢ 9'(= a2◂ [ a8◂ [ a13◂ [ {| l |}]]] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_2883
LB_2882:
	lea rsp,[rsp+8*1]
	jmp LB_2871
LB_2883:
	jmp LB_2887
LB_2886:
	add r14,1 
LB_2887:
	cmp r14,r9
	jge LB_2888
	movzx rax,BYTE [r13+8+r14]
	cmp rax,9 
	jz LB_2886
	cmp rax,32 
	jz LB_2886
LB_2888
	lea rax,[r14+1]
	cmp rax,r9
	jg LB_2891
	jmp LB_2892
LB_2891:
	mov r8,unt_1
	jmp LB_2889
LB_2892:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],10
	jnz LB_2893
	jmp LB_2894
LB_2893:
	mov r8,unt_1
	jmp LB_2889
LB_2894:
	add r14,1
	jmp LB_2890
LB_2889:
	lea rsp,[rsp+8*2]
	jmp LB_2871
LB_2890:
	jmp LB_2896
LB_2895:
	add r14,1 
LB_2896:
	cmp r14,r9
	jge LB_2897
	movzx rax,BYTE [r13+8+r14]
	cmp rax,9 
	jz LB_2895
	cmp rax,32 
	jz LB_2895
LB_2897
	call GRM_234
	movzx rax,BYTE [r8+6]
	cmp rax,0
	jnz LB_2900
	jmp LB_2901
LB_2900:
	jmp LB_2898
LB_2901:
	lea rsp,[rsp-8*1]
	mov r8,[r8+8]
; .mov_ptn2 2'(= a35◂ [ a17◂ [ a9◂ [ ]{| l |}]] ) ⊢ 10'(= a35◂ [ a17◂ [ a9◂ [ ]{| l |}]] )
; .mov_ptn 2'(= a35◂ [ a17◂ [ a9◂ [ ]{| l |}]] ) ⊢ 10'(= a35◂ [ a17◂ [ a9◂ [ ]{| l |}]] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_2899
LB_2898:
	lea rsp,[rsp+8*2]
	jmp LB_2871
LB_2899:
	mov QWORD [rsp+8*3],r14
	mov r13,QWORD [rsp+16+8*3]
	mov r14,QWORD [rsp+8*3]
	jmp LB_2903
LB_2903
;; rsp=3 , %1852~1'(= r ) %1851~0'(= r ) %1850~10'(= a35◂ [ a17◂ [ a9◂ [ ]{| l |}]] ) %1849~9'(= a2◂ [ a8◂ [ a13◂ [ {| l |}]]] ) %1848~8'(= a8◂ [ a13◂ [ {| l |}]] ) 
;; ? 10'(= a35◂ [ a17◂ [ a9◂ [ ]{| l |}]] ) ⊢ 0(<2)◂2'(= a17◂ [ a9◂ [ ]{| l |}] )
	mov rdi,QWORD [rsp-8+8*1]
	movzx rax,BYTE [rdi+6]
	cmp rax,0
	jnz LB_2904
	mov rax,QWORD [rdi+8]
	mov r8,rax
;; rsp=3 , %1854~2'(= a17◂ [ a9◂ [ ]{| l |}] ) %1852~1'(= r ) %1851~0'(= r ) %1849~9'(= a2◂ [ a8◂ [ a13◂ [ {| l |}]]] ) %1848~8'(= a8◂ [ a13◂ [ {| l |}]] ) 
; #21 { 8'(= a8◂ [ a13◂ [ {| l |}]] ) 9'(= a2◂ [ a8◂ [ a13◂ [ {| l |}]]] ) } ⊢ 0(<2)◂{ 8'(= a8◂ [ a13◂ [ {| l |}]] ) 9'(= a2◂ [ a8◂ [ a13◂ [ {| l |}]]] ) }
;; rsp=3 , %1855~0(<2)◂{ 8'(= a8◂ [ a13◂ [ {| l |}]] ) 9'(= a2◂ [ a8◂ [ a13◂ [ {| l |}]]] ) } %1854~2'(= a17◂ [ a9◂ [ ]{| l |}] ) %1852~1'(= r ) %1851~0'(= r ) 
; #123 { 0(<2)◂{ 8'(= a8◂ [ a13◂ [ {| l |}]] ) 9'(= a2◂ [ a8◂ [ a13◂ [ {| l |}]]] ) } 2'(= a17◂ [ a9◂ [ ]{| l |}] ) } ⊢ 1(<2)◂{ 0(<2)◂{ 8'(= a8◂ [ a13◂ [ {| l |}]] ) 9'(= a2◂ [ a8◂ [ a13◂ [ {| l |}]]] ) } 2'(= a17◂ [ a9◂ [ ]{| l |}] ) }
;; rsp=3 , %1856~1(<2)◂{ 0(<2)◂{ 8'(= a8◂ [ a13◂ [ {| l |}]] ) 9'(= a2◂ [ a8◂ [ a13◂ [ {| l |}]]] ) } 2'(= a17◂ [ a9◂ [ ]{| l |}] ) } %1852~1'(= r ) %1851~0'(= r ) 
; #193 1(<2)◂{ 0(<2)◂{ 8'(= a8◂ [ a13◂ [ {| l |}]] ) 9'(= a2◂ [ a8◂ [ a13◂ [ {| l |}]]] ) } 2'(= a17◂ [ a9◂ [ ]{| l |}] ) } ⊢ 0(<2)◂1(<2)◂{ 0(<2)◂{ 8'(= a8◂ [ a13◂ [ {| l |}]] ) 9'(= a2◂ [ a8◂ [ a13◂ [ {| l |}]]] ) } 2'(= a17◂ [ a9◂ [ ]{| l |}] ) }
;; rsp=3 , %1857~0(<2)◂1(<2)◂{ 0(<2)◂{ 8'(= a8◂ [ a13◂ [ {| l |}]] ) 9'(= a2◂ [ a8◂ [ a13◂ [ {| l |}]]] ) } 2'(= a17◂ [ a9◂ [ ]{| l |}] ) } %1852~1'(= r ) %1851~0'(= r ) 
; #22 0(<2)◂1(<2)◂{ 0(<2)◂{ 8'(= a8◂ [ a13◂ [ {| l |}]] ) 9'(= a2◂ [ a8◂ [ a13◂ [ {| l |}]]] ) } 2'(= a17◂ [ a9◂ [ ]{| l |}] ) } ⊢ 0(<2)◂0(<2)◂1(<2)◂{ 0(<2)◂{ 8'(= a8◂ [ a13◂ [ {| l |}]] ) 9'(= a2◂ [ a8◂ [ a13◂ [ {| l |}]]] ) } 2'(= a17◂ [ a9◂ [ ]{| l |}] ) }
;; rsp=3 , %1858~0(<2)◂0(<2)◂1(<2)◂{ 0(<2)◂{ 8'(= a8◂ [ a13◂ [ {| l |}]] ) 9'(= a2◂ [ a8◂ [ a13◂ [ {| l |}]]] ) } 2'(= a17◂ [ a9◂ [ ]{| l |}] ) } %1852~1'(= r ) %1851~0'(= r ) 
; ∎ 0(<2)◂0(<2)◂1(<2)◂{ 0(<2)◂{ 8'(= a8◂ [ a13◂ [ {| l |}]] ) 9'(= a2◂ [ a8◂ [ a13◂ [ {| l |}]]] ) } 2'(= a17◂ [ a9◂ [ ]{| l |}] ) }
; .dlt.ptn 1'(= r )
; .dlt.ptn 0'(= r )
; .mov_ptn2 0(<2)◂0(<2)◂1(<2)◂{ 0(<2)◂{ 8'(= a8◂ [ a13◂ [ {| l |}]] ) 9'(= a2◂ [ a8◂ [ a13◂ [ {| l |}]]] ) } 2'(= a17◂ [ a9◂ [ ]{| l |}] ) } ⊢ 2'(= a3◂ [ a35◂ [ a18◂ [ a9◂ [ ]{| l |}]]] )
	mov r13,r8
; .mov_ptn 0(<2)◂0(<2)◂1(<2)◂{ 0(<2)◂{ 8'(= a8◂ [ a13◂ [ {| l |}]] ) 9'(= a2◂ [ a8◂ [ a13◂ [ {| l |}]]] ) } 0'(= a17◂ [ a9◂ [ ]{| l |}] ) } ⊢ 2'(= a3◂ [ a35◂ [ a18◂ [ a9◂ [ ]{| l |}]]] )
	mov rax,[SS_RCD_2_TOP]
	mov rsi,[rax] 
	mov QWORD [SS_RCD_2_TOP],rsi
	mov QWORD [rax],0
	mov r14,rax
	mov rax,[SS_RCD_2_TOP]
	mov rsi,[rax] 
	mov QWORD [SS_RCD_2_TOP],rsi
	mov QWORD [rax],0
	mov r9,rax
	mov rax,QWORD [rsp-8+8*3]
	mov rdi,r9
	mov QWORD [rdi+8+8*0],rax
	mov rax,QWORD [rsp-8+8*2]
	mov rdi,r9
	mov QWORD [rdi+8+8*1],rax
	mov rax,r9
	mov BYTE [rax+6],0
	mov rdi,r14
	mov QWORD [rdi+8+8*0],rax
	mov rax,r13
	mov rdi,r14
	mov QWORD [rdi+8+8*1],rax
	mov rax,r14
	mov BYTE [rax+6],1
	mov rdi,rax
	mov rax,[SS_LN_TOP]
	mov rsi,[rax]
	mov QWORD [SS_LN_TOP],rsi 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov rdi,rax
	mov rax,[SS_LN_TOP]
	mov rsi,[rax]
	mov QWORD [SS_LN_TOP],rsi 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	lea rsp,[rsp+8*3]
	jmp LB_2902
LB_2904:
;; ? 10'(= a35◂ [ a17◂ [ a9◂ [ ]{| l |}]] ) ⊢ 1(<2)◂10'(= a2◂ [ *{ rr{| l |}}] )
;; rsp=3 , %1853~10'(= a2◂ [ *{ rr{| l |}}] ) %1852~1'(= r ) %1851~0'(= r ) %1849~9'(= a2◂ [ a8◂ [ a13◂ [ {| l |}]]] ) %1848~8'(= a8◂ [ a13◂ [ {| l |}]] ) 
; #192 10'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 1(<2)◂10'(= a2◂ [ *{ rr{| l |}}] )
;; rsp=3 , %1859~1(<2)◂10'(= a2◂ [ *{ rr{| l |}}] ) %1852~1'(= r ) %1851~0'(= r ) %1849~9'(= a2◂ [ a8◂ [ a13◂ [ {| l |}]]] ) %1848~8'(= a8◂ [ a13◂ [ {| l |}]] ) 
; #22 1(<2)◂10'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 0(<2)◂1(<2)◂10'(= a2◂ [ *{ rr{| l |}}] )
;; rsp=3 , %1860~0(<2)◂1(<2)◂10'(= a2◂ [ *{ rr{| l |}}] ) %1852~1'(= r ) %1851~0'(= r ) %1849~9'(= a2◂ [ a8◂ [ a13◂ [ {| l |}]]] ) %1848~8'(= a8◂ [ a13◂ [ {| l |}]] ) 
; ∎ 0(<2)◂1(<2)◂10'(= a2◂ [ *{ rr{| l |}}] )
; .dlt.ptn 1'(= r )
; .dlt.ptn 0'(= r )
; .dlt.ptn 9'(= a2◂ [ a8◂ [ a13◂ [ {| l |}]]] )
;	.dlt adt ⊢ _  
; .dlt.ptn 8'(= a8◂ [ a13◂ [ {| l |}]] )
;	.dlt adt ⊢ _  
; .mov_ptn2 0(<2)◂1(<2)◂10'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 2'(= a3◂ [ a35◂ [ a18◂ [ a9◂ [ ]{| l |}]]] )
; .mov_ptn 0(<2)◂1(<2)◂10'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 2'(= a3◂ [ a35◂ [ a18◂ [ a9◂ [ ]{| l |}]]] )
	mov rax,QWORD [rsp-8+8*1]
	mov rdi,rax
	mov rax,[SS_LN_TOP]
	mov rsi,[rax]
	mov QWORD [SS_LN_TOP],rsi 
	mov QWORD [rax],0
	mov BYTE [rax+6],1
	mov QWORD [rax+8],rdi
	mov rdi,rax
	mov rax,[SS_LN_TOP]
	mov rsi,[rax]
	mov QWORD [SS_LN_TOP],rsi 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	lea rsp,[rsp+8*3]
	jmp LB_2902
LB_2902:
	movzx rax,BYTE [r8+6]
	cmp rax,0
	jnz LB_2871
	pop r14
	pop r9
	add rsp,8
	pop r13
	jmp LB_2850
LB_2871:
	pop rdi
	pop r9 
	pop r14
	pop r13
	jmp LB_2850
LB_2850:
	movzx rax,BYTE [r8+6]
	cmp rax,0
	jnz LB_2905
	jmp LB_2906
LB_2905:
	lea rsp,[rsp+8*1]
	add rsp,8
	pop r9 
	pop r14 
	pop r13
	jmp LB_2832
LB_2906:
	mov QWORD [rsp+8*1],r14
	mov r8,[r8+8]
; .mov_ptn2 2'(= a35◂ [ a18◂ [ a9◂ [ ]{| l |}]] ) ⊢ 3'(= a35◂ [ a18◂ [ a9◂ [ ]{| l |}]] )
	mov r10,r9
; .mov_ptn 2'(= a35◂ [ a18◂ [ a9◂ [ ]{| l |}]] ) ⊢ 3'(= a35◂ [ a18◂ [ a9◂ [ ]{| l |}]] )
	mov rax,r8
	mov r9,rax
	mov r13,QWORD [rsp+16+8*1]
	mov r14,QWORD [rsp+8*1]
	jmp LB_2908
LB_2908
;; rsp=1 , %1861~3'(= a35◂ [ a18◂ [ a9◂ [ ]{| l |}]] ) %1837~1'(= r ) %1836~0'(= r ) %1835~8'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) 
; #193 { 8'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) 3'(= a35◂ [ a18◂ [ a9◂ [ ]{| l |}]] ) } ⊢ 0(<2)◂{ 8'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) 3'(= a35◂ [ a18◂ [ a9◂ [ ]{| l |}]] ) }
;; rsp=1 , %1862~0(<2)◂{ 8'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) 3'(= a35◂ [ a18◂ [ a9◂ [ ]{| l |}]] ) } %1837~1'(= r ) %1836~0'(= r ) 
; #22 0(<2)◂{ 8'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) 3'(= a35◂ [ a18◂ [ a9◂ [ ]{| l |}]] ) } ⊢ 0(<2)◂0(<2)◂{ 8'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) 3'(= a35◂ [ a18◂ [ a9◂ [ ]{| l |}]] ) }
;; rsp=1 , %1863~0(<2)◂0(<2)◂{ 8'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) 3'(= a35◂ [ a18◂ [ a9◂ [ ]{| l |}]] ) } %1837~1'(= r ) %1836~0'(= r ) 
; ∎ 0(<2)◂0(<2)◂{ 8'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) 3'(= a35◂ [ a18◂ [ a9◂ [ ]{| l |}]] ) }
; .dlt.ptn 1'(= r )
; .dlt.ptn 0'(= r )
; .mov_ptn2 0(<2)◂0(<2)◂{ 8'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) 3'(= a35◂ [ a18◂ [ a9◂ [ ]{| l |}]] ) } ⊢ 2'(= a3◂ [ a35◂ [ *{ a8◂ [ a12◂ [ a9◂ [ ]{| l |}]]a35◂ [ a18◂ [ a9◂ [ ]{| l |}]]}]] )
; .mov_ptn 0(<2)◂0(<2)◂{ 8'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) 3'(= a35◂ [ a18◂ [ a9◂ [ ]{| l |}]] ) } ⊢ 2'(= a3◂ [ a35◂ [ *{ a8◂ [ a12◂ [ a9◂ [ ]{| l |}]]a35◂ [ a18◂ [ a9◂ [ ]{| l |}]]}]] )
	mov rax,[SS_RCD_2_TOP]
	mov rsi,[rax] 
	mov QWORD [SS_RCD_2_TOP],rsi
	mov QWORD [rax],0
	mov r13,rax
	mov rax,QWORD [rsp-8+8*1]
	mov rdi,r13
	mov QWORD [rdi+8+8*0],rax
	mov rax,r9
	mov rdi,r13
	mov QWORD [rdi+8+8*1],rax
	mov rax,r13
	mov BYTE [rax+6],0
	mov rdi,rax
	mov rax,[SS_LN_TOP]
	mov rsi,[rax]
	mov QWORD [SS_LN_TOP],rsi 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	lea rsp,[rsp+8*1]
	jmp LB_2907
LB_2907:
	movzx rax,BYTE [r8+6]
	cmp rax,0
	jnz LB_2833
	pop r14
	pop r9
	add rsp,8
	pop r13
	jmp LB_2832
LB_2833:
	jmp LB_2911
LB_2910:
	add r14,1 
LB_2911:
	cmp r14,r9
	jge LB_2912
	movzx rax,BYTE [r13+8+r14]
	cmp rax,9 
	jz LB_2910
	cmp rax,32 
	jz LB_2910
LB_2912
	call GRM_220
	movzx rax,BYTE [r8+6]
	cmp rax,0
	jnz LB_2915
	jmp LB_2916
LB_2915:
	jmp LB_2913
LB_2916:
	lea rsp,[rsp-8*2]
; .mov_ptn2 2'(= *{ rr} ) ⊢ { 8'(= r ) 9'(= r ) }
; .mov_ptn 2'(= *{ rr} ) ⊢ { 8'(= r ) 9'(= r ) }
	mov rdi,r8
	mov rdi,QWORD [rdi+8+8*0]
	mov r10,rdi
	mov QWORD [rsp-8+8*2],r10
	mov rdi,r8
	mov rdi,QWORD [rdi+8+8*1]
	mov r11,rdi
	mov QWORD [rsp-8+8*1],r11
	jmp LB_2914
LB_2913:
	lea rsp,[rsp+8*0]
	jmp LB_2909
LB_2914:
	jmp LB_2918
LB_2917:
	add r14,1 
LB_2918:
	cmp r14,r9
	jge LB_2919
	movzx rax,BYTE [r13+8+r14]
	cmp rax,9 
	jz LB_2917
	cmp rax,32 
	jz LB_2917
LB_2919
	call GRM_237
	movzx rax,BYTE [r8+6]
	cmp rax,0
	jnz LB_2922
	jmp LB_2923
LB_2922:
	jmp LB_2920
LB_2923:
	lea rsp,[rsp-8*1]
	mov r8,[r8+8]
; .mov_ptn2 2'(= a35◂ [ a7◂ [ *{ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}]] ) ⊢ 10'(= a35◂ [ a7◂ [ *{ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}]] )
; .mov_ptn 2'(= a35◂ [ a7◂ [ *{ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}]] ) ⊢ 10'(= a35◂ [ a7◂ [ *{ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}]] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_2921
LB_2920:
	lea rsp,[rsp+8*2]
	jmp LB_2909
LB_2921:
	mov QWORD [rsp+8*3],r14
	mov r13,QWORD [rsp+16+8*3]
	mov r14,QWORD [rsp+8*3]
	jmp LB_2925
LB_2925
;; rsp=3 , %1868~1'(= r ) %1867~0'(= r ) %1866~10'(= a35◂ [ a7◂ [ *{ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}]] ) %1865~9'(= r ) %1864~8'(= r ) 
;; ? 10'(= a35◂ [ a7◂ [ *{ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}]] ) ⊢ 0(<2)◂2'(= a7◂ [ *{ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}] )
	mov rdi,QWORD [rsp-8+8*1]
	movzx rax,BYTE [rdi+6]
	cmp rax,0
	jnz LB_2926
	mov rax,QWORD [rdi+8]
	mov r8,rax
;; rsp=3 , %1870~2'(= a7◂ [ *{ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}] ) %1868~1'(= r ) %1867~0'(= r ) %1865~9'(= r ) %1864~8'(= r ) 
; #20 { } ⊢ 1(<2)◂{ }
;; rsp=3 , %1871~1(<2)◂{ } %1870~2'(= a7◂ [ *{ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}] ) %1868~1'(= r ) %1867~0'(= r ) %1865~9'(= r ) %1864~8'(= r ) 
	jmp LB_2927
LB_2927:
; $ %[ "glb_etr id_line line_res 0" ] ⊢ %[ "glb_etr id_line line_res 0" ]
;; rsp=3 , %1872~%[ "glb_etr id_line line_res 0" ] %1871~1(<2)◂{ } %1870~2'(= a7◂ [ *{ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}] ) %1868~1'(= r ) %1867~0'(= r ) %1865~9'(= r ) %1864~8'(= r ) 
; #21 { { 8'(= r ) 9'(= r ) %[ "glb_etr id_line line_res 0" ] } 1(<2)◂{ } } ⊢ 0(<2)◂{ { 8'(= r ) 9'(= r ) %[ "glb_etr id_line line_res 0" ] } 1(<2)◂{ } }
;; rsp=3 , %1873~0(<2)◂{ { 8'(= r ) 9'(= r ) %[ "glb_etr id_line line_res 0" ] } 1(<2)◂{ } } %1870~2'(= a7◂ [ *{ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}] ) %1868~1'(= r ) %1867~0'(= r ) 
; #192 0(<2)◂{ { 8'(= r ) 9'(= r ) %[ "glb_etr id_line line_res 0" ] } 1(<2)◂{ } } ⊢ 1(<2)◂0(<2)◂{ { 8'(= r ) 9'(= r ) %[ "glb_etr id_line line_res 0" ] } 1(<2)◂{ } }
;; rsp=3 , %1874~1(<2)◂0(<2)◂{ { 8'(= r ) 9'(= r ) %[ "glb_etr id_line line_res 0" ] } 1(<2)◂{ } } %1870~2'(= a7◂ [ *{ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}] ) %1868~1'(= r ) %1867~0'(= r ) 
; #22 1(<2)◂0(<2)◂{ { 8'(= r ) 9'(= r ) %[ "glb_etr id_line line_res 0" ] } 1(<2)◂{ } } ⊢ 0(<2)◂1(<2)◂0(<2)◂{ { 8'(= r ) 9'(= r ) %[ "glb_etr id_line line_res 0" ] } 1(<2)◂{ } }
;; rsp=3 , %1875~0(<2)◂1(<2)◂0(<2)◂{ { 8'(= r ) 9'(= r ) %[ "glb_etr id_line line_res 0" ] } 1(<2)◂{ } } %1870~2'(= a7◂ [ *{ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}] ) %1868~1'(= r ) %1867~0'(= r ) 
; ∎ 0(<2)◂1(<2)◂0(<2)◂{ { 8'(= r ) 9'(= r ) %[ "glb_etr id_line line_res 0" ] } 1(<2)◂{ } }
; .dlt.ptn 2'(= a7◂ [ *{ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}] )
;	.dlt adt ⊢ _  
; .dlt.ptn 1'(= r )
; .dlt.ptn 0'(= r )
; .mov_ptn2 0(<2)◂1(<2)◂0(<2)◂{ { 8'(= r ) 9'(= r ) %[ "glb_etr id_line line_res 0" ] } 1(<2)◂{ } } ⊢ 2'(= a3◂ [ a35◂ [ *{ a8◂ [ a12◂ [ a9◂ [ ]{| l |}]]a35◂ [ a18◂ [ a9◂ [ ]{| l |}]]}]] )
; .mov_ptn 0(<2)◂1(<2)◂0(<2)◂{ { 8'(= r ) 9'(= r ) %[ "glb_etr id_line line_res 0" ] } 1(<2)◂{ } } ⊢ 2'(= a3◂ [ a35◂ [ *{ a8◂ [ a12◂ [ a9◂ [ ]{| l |}]]a35◂ [ a18◂ [ a9◂ [ ]{| l |}]]}]] )
	mov rax,[SS_RCD_2_TOP]
	mov rsi,[rax] 
	mov QWORD [SS_RCD_2_TOP],rsi
	mov QWORD [rax],0
	mov r13,rax
	mov rax,[SS_RCD_3_TOP]
	mov rsi,[rax] 
	mov QWORD [SS_RCD_3_TOP],rsi
	mov QWORD [rax],0
	mov r14,rax
	mov rax,QWORD [rsp-8+8*3]
	mov rdi,r14
	mov QWORD [rdi+8+8*0],rax
	mov rax,QWORD [rsp-8+8*2]
	mov rdi,r14
	mov QWORD [rdi+8+8*1],rax
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	mov rdi,1  
	mov rsi,40
	xor rax,rax
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call calloc
	mov rsp,QWORD [rsp_tmp]  
	mov rdi,26
	mov rsi,0x_40_00_0000_0000_0000
	or rdi,rsi
	mov QWORD [rax],rdi
	mov QWORD [rax+8*4],0
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	mov BYTE [rax+8+0],103
	mov BYTE [rax+8+1],108
	mov BYTE [rax+8+2],98
	mov BYTE [rax+8+3],95
	mov BYTE [rax+8+4],101
	mov BYTE [rax+8+5],116
	mov BYTE [rax+8+6],114
	mov BYTE [rax+8+7],32
	mov BYTE [rax+8+8],105
	mov BYTE [rax+8+9],100
	mov BYTE [rax+8+10],95
	mov BYTE [rax+8+11],108
	mov BYTE [rax+8+12],105
	mov BYTE [rax+8+13],110
	mov BYTE [rax+8+14],101
	mov BYTE [rax+8+15],32
	mov BYTE [rax+8+16],108
	mov BYTE [rax+8+17],105
	mov BYTE [rax+8+18],110
	mov BYTE [rax+8+19],101
	mov BYTE [rax+8+20],95
	mov BYTE [rax+8+21],114
	mov BYTE [rax+8+22],101
	mov BYTE [rax+8+23],115
	mov BYTE [rax+8+24],32
	mov BYTE [rax+8+25],48
	mov rdi,r14
	mov QWORD [rdi+8+8*2],rax
	mov rax,r14
	mov rdi,r13
	mov QWORD [rdi+8+8*0],rax
	mov rax,unt 
	mov rax,unt_1
	mov rdi,r13
	mov QWORD [rdi+8+8*1],rax
	mov rax,r13
	mov BYTE [rax+6],0
	mov rdi,rax
	mov rax,[SS_LN_TOP]
	mov rsi,[rax]
	mov QWORD [SS_LN_TOP],rsi 
	mov QWORD [rax],0
	mov BYTE [rax+6],1
	mov QWORD [rax+8],rdi
	mov rdi,rax
	mov rax,[SS_LN_TOP]
	mov rsi,[rax]
	mov QWORD [SS_LN_TOP],rsi 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	lea rsp,[rsp+8*3]
	jmp LB_2924
LB_2926:
;; ? 10'(= a35◂ [ a7◂ [ *{ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}]] ) ⊢ 1(<2)◂10'(= a2◂ [ *{ rr{| l |}}] )
;; rsp=3 , %1869~10'(= a2◂ [ *{ rr{| l |}}] ) %1868~1'(= r ) %1867~0'(= r ) %1865~9'(= r ) %1864~8'(= r ) 
	jmp LB_2928
LB_2928:
; $ %[ "glb_etr id_line line_res 1" ] ⊢ %[ "glb_etr id_line line_res 1" ]
;; rsp=3 , %1876~%[ "glb_etr id_line line_res 1" ] %1869~10'(= a2◂ [ *{ rr{| l |}}] ) %1868~1'(= r ) %1867~0'(= r ) %1865~9'(= r ) %1864~8'(= r ) 
; #21 { { 8'(= r ) 9'(= r ) %[ "glb_etr id_line line_res 1" ] } 10'(= a2◂ [ *{ rr{| l |}}] ) } ⊢ 0(<2)◂{ { 8'(= r ) 9'(= r ) %[ "glb_etr id_line line_res 1" ] } 10'(= a2◂ [ *{ rr{| l |}}] ) }
;; rsp=3 , %1877~0(<2)◂{ { 8'(= r ) 9'(= r ) %[ "glb_etr id_line line_res 1" ] } 10'(= a2◂ [ *{ rr{| l |}}] ) } %1868~1'(= r ) %1867~0'(= r ) 
; #192 0(<2)◂{ { 8'(= r ) 9'(= r ) %[ "glb_etr id_line line_res 1" ] } 10'(= a2◂ [ *{ rr{| l |}}] ) } ⊢ 1(<2)◂0(<2)◂{ { 8'(= r ) 9'(= r ) %[ "glb_etr id_line line_res 1" ] } 10'(= a2◂ [ *{ rr{| l |}}] ) }
;; rsp=3 , %1878~1(<2)◂0(<2)◂{ { 8'(= r ) 9'(= r ) %[ "glb_etr id_line line_res 1" ] } 10'(= a2◂ [ *{ rr{| l |}}] ) } %1868~1'(= r ) %1867~0'(= r ) 
; #22 1(<2)◂0(<2)◂{ { 8'(= r ) 9'(= r ) %[ "glb_etr id_line line_res 1" ] } 10'(= a2◂ [ *{ rr{| l |}}] ) } ⊢ 0(<2)◂1(<2)◂0(<2)◂{ { 8'(= r ) 9'(= r ) %[ "glb_etr id_line line_res 1" ] } 10'(= a2◂ [ *{ rr{| l |}}] ) }
;; rsp=3 , %1879~0(<2)◂1(<2)◂0(<2)◂{ { 8'(= r ) 9'(= r ) %[ "glb_etr id_line line_res 1" ] } 10'(= a2◂ [ *{ rr{| l |}}] ) } %1868~1'(= r ) %1867~0'(= r ) 
; ∎ 0(<2)◂1(<2)◂0(<2)◂{ { 8'(= r ) 9'(= r ) %[ "glb_etr id_line line_res 1" ] } 10'(= a2◂ [ *{ rr{| l |}}] ) }
; .dlt.ptn 1'(= r )
; .dlt.ptn 0'(= r )
; .mov_ptn2 0(<2)◂1(<2)◂0(<2)◂{ { 8'(= r ) 9'(= r ) %[ "glb_etr id_line line_res 1" ] } 10'(= a2◂ [ *{ rr{| l |}}] ) } ⊢ 2'(= a3◂ [ a35◂ [ *{ a8◂ [ a12◂ [ a9◂ [ ]{| l |}]]a35◂ [ a18◂ [ a9◂ [ ]{| l |}]]}]] )
; .mov_ptn 0(<2)◂1(<2)◂0(<2)◂{ { 8'(= r ) 9'(= r ) %[ "glb_etr id_line line_res 1" ] } 10'(= a2◂ [ *{ rr{| l |}}] ) } ⊢ 2'(= a3◂ [ a35◂ [ *{ a8◂ [ a12◂ [ a9◂ [ ]{| l |}]]a35◂ [ a18◂ [ a9◂ [ ]{| l |}]]}]] )
	mov rax,[SS_RCD_2_TOP]
	mov rsi,[rax] 
	mov QWORD [SS_RCD_2_TOP],rsi
	mov QWORD [rax],0
	mov r13,rax
	mov rax,[SS_RCD_3_TOP]
	mov rsi,[rax] 
	mov QWORD [SS_RCD_3_TOP],rsi
	mov QWORD [rax],0
	mov r14,rax
	mov rax,QWORD [rsp-8+8*3]
	mov rdi,r14
	mov QWORD [rdi+8+8*0],rax
	mov rax,QWORD [rsp-8+8*2]
	mov rdi,r14
	mov QWORD [rdi+8+8*1],rax
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	mov rdi,1  
	mov rsi,40
	xor rax,rax
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call calloc
	mov rsp,QWORD [rsp_tmp]  
	mov rdi,26
	mov rsi,0x_40_00_0000_0000_0000
	or rdi,rsi
	mov QWORD [rax],rdi
	mov QWORD [rax+8*4],0
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	mov BYTE [rax+8+0],103
	mov BYTE [rax+8+1],108
	mov BYTE [rax+8+2],98
	mov BYTE [rax+8+3],95
	mov BYTE [rax+8+4],101
	mov BYTE [rax+8+5],116
	mov BYTE [rax+8+6],114
	mov BYTE [rax+8+7],32
	mov BYTE [rax+8+8],105
	mov BYTE [rax+8+9],100
	mov BYTE [rax+8+10],95
	mov BYTE [rax+8+11],108
	mov BYTE [rax+8+12],105
	mov BYTE [rax+8+13],110
	mov BYTE [rax+8+14],101
	mov BYTE [rax+8+15],32
	mov BYTE [rax+8+16],108
	mov BYTE [rax+8+17],105
	mov BYTE [rax+8+18],110
	mov BYTE [rax+8+19],101
	mov BYTE [rax+8+20],95
	mov BYTE [rax+8+21],114
	mov BYTE [rax+8+22],101
	mov BYTE [rax+8+23],115
	mov BYTE [rax+8+24],32
	mov BYTE [rax+8+25],49
	mov rdi,r14
	mov QWORD [rdi+8+8*2],rax
	mov rax,r14
	mov rdi,r13
	mov QWORD [rdi+8+8*0],rax
	mov rax,QWORD [rsp-8+8*1]
	mov rdi,r13
	mov QWORD [rdi+8+8*1],rax
	mov rax,r13
	mov BYTE [rax+6],0
	mov rdi,rax
	mov rax,[SS_LN_TOP]
	mov rsi,[rax]
	mov QWORD [SS_LN_TOP],rsi 
	mov QWORD [rax],0
	mov BYTE [rax+6],1
	mov QWORD [rax+8],rdi
	mov rdi,rax
	mov rax,[SS_LN_TOP]
	mov rsi,[rax]
	mov QWORD [SS_LN_TOP],rsi 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	lea rsp,[rsp+8*3]
	jmp LB_2924
LB_2924:
	movzx rax,BYTE [r8+6]
	cmp rax,0
	jnz LB_2909
	pop r14
	pop r9
	add rsp,8
	pop r13
	jmp LB_2832
LB_2909:
	jmp LB_2931
LB_2930:
	add r14,1 
LB_2931:
	cmp r14,r9
	jge LB_2932
	movzx rax,BYTE [r13+8+r14]
	cmp rax,9 
	jz LB_2930
	cmp rax,32 
	jz LB_2930
LB_2932
	call GRM_220
	movzx rax,BYTE [r8+6]
	cmp rax,0
	jnz LB_2935
	jmp LB_2936
LB_2935:
	jmp LB_2933
LB_2936:
	lea rsp,[rsp-8*2]
; .mov_ptn2 2'(= *{ rr} ) ⊢ { 8'(= r ) 9'(= r ) }
; .mov_ptn 2'(= *{ rr} ) ⊢ { 8'(= r ) 9'(= r ) }
	mov rdi,r8
	mov rdi,QWORD [rdi+8+8*0]
	mov r10,rdi
	mov QWORD [rsp-8+8*2],r10
	mov rdi,r8
	mov rdi,QWORD [rdi+8+8*1]
	mov r11,rdi
	mov QWORD [rsp-8+8*1],r11
	jmp LB_2934
LB_2933:
	lea rsp,[rsp+8*0]
	jmp LB_2929
LB_2934:
	jmp LB_2938
LB_2937:
	add r14,1 
LB_2938:
	cmp r14,r9
	jge LB_2939
	movzx rax,BYTE [r13+8+r14]
	cmp rax,9 
	jz LB_2937
	cmp rax,32 
	jz LB_2937
LB_2939
	call GRM_234
	movzx rax,BYTE [r8+6]
	cmp rax,0
	jnz LB_2942
	jmp LB_2943
LB_2942:
	jmp LB_2940
LB_2943:
	lea rsp,[rsp-8*1]
	mov r8,[r8+8]
; .mov_ptn2 2'(= a35◂ [ a17◂ [ a9◂ [ ]{| l |}]] ) ⊢ 10'(= a35◂ [ a17◂ [ a9◂ [ ]{| l |}]] )
; .mov_ptn 2'(= a35◂ [ a17◂ [ a9◂ [ ]{| l |}]] ) ⊢ 10'(= a35◂ [ a17◂ [ a9◂ [ ]{| l |}]] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_2941
LB_2940:
	lea rsp,[rsp+8*2]
	jmp LB_2929
LB_2941:
	mov QWORD [rsp+8*3],r14
	mov r13,QWORD [rsp+16+8*3]
	mov r14,QWORD [rsp+8*3]
	jmp LB_2945
LB_2945
;; rsp=3 , %1884~1'(= r ) %1883~0'(= r ) %1882~10'(= a35◂ [ a17◂ [ a9◂ [ ]{| l |}]] ) %1881~9'(= r ) %1880~8'(= r ) 
;; ? 10'(= a35◂ [ a17◂ [ a9◂ [ ]{| l |}]] ) ⊢ 0(<2)◂2'(= a17◂ [ a9◂ [ ]{| l |}] )
	mov rdi,QWORD [rsp-8+8*1]
	movzx rax,BYTE [rdi+6]
	cmp rax,0
	jnz LB_2946
	mov rax,QWORD [rdi+8]
	mov r8,rax
;; rsp=3 , %1886~2'(= a17◂ [ a9◂ [ ]{| l |}] ) %1884~1'(= r ) %1883~0'(= r ) %1881~9'(= r ) %1880~8'(= r ) 
; #20 { } ⊢ 1(<2)◂{ }
;; rsp=3 , %1887~1(<2)◂{ } %1886~2'(= a17◂ [ a9◂ [ ]{| l |}] ) %1884~1'(= r ) %1883~0'(= r ) %1881~9'(= r ) %1880~8'(= r ) 
	jmp LB_2947
LB_2947:
; $ %[ "glb_etr id_line line_res 2" ] ⊢ %[ "glb_etr id_line line_res 2" ]
;; rsp=3 , %1888~%[ "glb_etr id_line line_res 2" ] %1887~1(<2)◂{ } %1886~2'(= a17◂ [ a9◂ [ ]{| l |}] ) %1884~1'(= r ) %1883~0'(= r ) %1881~9'(= r ) %1880~8'(= r ) 
; #21 { { 8'(= r ) 9'(= r ) %[ "glb_etr id_line line_res 2" ] } 1(<2)◂{ } } ⊢ 0(<2)◂{ { 8'(= r ) 9'(= r ) %[ "glb_etr id_line line_res 2" ] } 1(<2)◂{ } }
;; rsp=3 , %1889~0(<2)◂{ { 8'(= r ) 9'(= r ) %[ "glb_etr id_line line_res 2" ] } 1(<2)◂{ } } %1886~2'(= a17◂ [ a9◂ [ ]{| l |}] ) %1884~1'(= r ) %1883~0'(= r ) 
; #192 0(<2)◂{ { 8'(= r ) 9'(= r ) %[ "glb_etr id_line line_res 2" ] } 1(<2)◂{ } } ⊢ 1(<2)◂0(<2)◂{ { 8'(= r ) 9'(= r ) %[ "glb_etr id_line line_res 2" ] } 1(<2)◂{ } }
;; rsp=3 , %1890~1(<2)◂0(<2)◂{ { 8'(= r ) 9'(= r ) %[ "glb_etr id_line line_res 2" ] } 1(<2)◂{ } } %1886~2'(= a17◂ [ a9◂ [ ]{| l |}] ) %1884~1'(= r ) %1883~0'(= r ) 
; #22 1(<2)◂0(<2)◂{ { 8'(= r ) 9'(= r ) %[ "glb_etr id_line line_res 2" ] } 1(<2)◂{ } } ⊢ 0(<2)◂1(<2)◂0(<2)◂{ { 8'(= r ) 9'(= r ) %[ "glb_etr id_line line_res 2" ] } 1(<2)◂{ } }
;; rsp=3 , %1891~0(<2)◂1(<2)◂0(<2)◂{ { 8'(= r ) 9'(= r ) %[ "glb_etr id_line line_res 2" ] } 1(<2)◂{ } } %1886~2'(= a17◂ [ a9◂ [ ]{| l |}] ) %1884~1'(= r ) %1883~0'(= r ) 
; ∎ 0(<2)◂1(<2)◂0(<2)◂{ { 8'(= r ) 9'(= r ) %[ "glb_etr id_line line_res 2" ] } 1(<2)◂{ } }
; .dlt.ptn 2'(= a17◂ [ a9◂ [ ]{| l |}] )
;	.dlt adt ⊢ _  
; .dlt.ptn 1'(= r )
; .dlt.ptn 0'(= r )
; .mov_ptn2 0(<2)◂1(<2)◂0(<2)◂{ { 8'(= r ) 9'(= r ) %[ "glb_etr id_line line_res 2" ] } 1(<2)◂{ } } ⊢ 2'(= a3◂ [ a35◂ [ *{ a8◂ [ a12◂ [ a9◂ [ ]{| l |}]]a35◂ [ a18◂ [ a9◂ [ ]{| l |}]]}]] )
; .mov_ptn 0(<2)◂1(<2)◂0(<2)◂{ { 8'(= r ) 9'(= r ) %[ "glb_etr id_line line_res 2" ] } 1(<2)◂{ } } ⊢ 2'(= a3◂ [ a35◂ [ *{ a8◂ [ a12◂ [ a9◂ [ ]{| l |}]]a35◂ [ a18◂ [ a9◂ [ ]{| l |}]]}]] )
	mov rax,[SS_RCD_2_TOP]
	mov rsi,[rax] 
	mov QWORD [SS_RCD_2_TOP],rsi
	mov QWORD [rax],0
	mov r13,rax
	mov rax,[SS_RCD_3_TOP]
	mov rsi,[rax] 
	mov QWORD [SS_RCD_3_TOP],rsi
	mov QWORD [rax],0
	mov r14,rax
	mov rax,QWORD [rsp-8+8*3]
	mov rdi,r14
	mov QWORD [rdi+8+8*0],rax
	mov rax,QWORD [rsp-8+8*2]
	mov rdi,r14
	mov QWORD [rdi+8+8*1],rax
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	mov rdi,1  
	mov rsi,40
	xor rax,rax
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call calloc
	mov rsp,QWORD [rsp_tmp]  
	mov rdi,26
	mov rsi,0x_40_00_0000_0000_0000
	or rdi,rsi
	mov QWORD [rax],rdi
	mov QWORD [rax+8*4],0
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	mov BYTE [rax+8+0],103
	mov BYTE [rax+8+1],108
	mov BYTE [rax+8+2],98
	mov BYTE [rax+8+3],95
	mov BYTE [rax+8+4],101
	mov BYTE [rax+8+5],116
	mov BYTE [rax+8+6],114
	mov BYTE [rax+8+7],32
	mov BYTE [rax+8+8],105
	mov BYTE [rax+8+9],100
	mov BYTE [rax+8+10],95
	mov BYTE [rax+8+11],108
	mov BYTE [rax+8+12],105
	mov BYTE [rax+8+13],110
	mov BYTE [rax+8+14],101
	mov BYTE [rax+8+15],32
	mov BYTE [rax+8+16],108
	mov BYTE [rax+8+17],105
	mov BYTE [rax+8+18],110
	mov BYTE [rax+8+19],101
	mov BYTE [rax+8+20],95
	mov BYTE [rax+8+21],114
	mov BYTE [rax+8+22],101
	mov BYTE [rax+8+23],115
	mov BYTE [rax+8+24],32
	mov BYTE [rax+8+25],50
	mov rdi,r14
	mov QWORD [rdi+8+8*2],rax
	mov rax,r14
	mov rdi,r13
	mov QWORD [rdi+8+8*0],rax
	mov rax,unt 
	mov rax,unt_1
	mov rdi,r13
	mov QWORD [rdi+8+8*1],rax
	mov rax,r13
	mov BYTE [rax+6],0
	mov rdi,rax
	mov rax,[SS_LN_TOP]
	mov rsi,[rax]
	mov QWORD [SS_LN_TOP],rsi 
	mov QWORD [rax],0
	mov BYTE [rax+6],1
	mov QWORD [rax+8],rdi
	mov rdi,rax
	mov rax,[SS_LN_TOP]
	mov rsi,[rax]
	mov QWORD [SS_LN_TOP],rsi 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	lea rsp,[rsp+8*3]
	jmp LB_2944
LB_2946:
;; ? 10'(= a35◂ [ a17◂ [ a9◂ [ ]{| l |}]] ) ⊢ 1(<2)◂10'(= a2◂ [ *{ rr{| l |}}] )
;; rsp=3 , %1885~10'(= a2◂ [ *{ rr{| l |}}] ) %1884~1'(= r ) %1883~0'(= r ) %1881~9'(= r ) %1880~8'(= r ) 
	jmp LB_2948
LB_2948:
; $ %[ "glb_etr id_line line_res 3" ] ⊢ %[ "glb_etr id_line line_res 3" ]
;; rsp=3 , %1892~%[ "glb_etr id_line line_res 3" ] %1885~10'(= a2◂ [ *{ rr{| l |}}] ) %1884~1'(= r ) %1883~0'(= r ) %1881~9'(= r ) %1880~8'(= r ) 
; #21 { { 8'(= r ) 9'(= r ) %[ "glb_etr id_line line_res 3" ] } 10'(= a2◂ [ *{ rr{| l |}}] ) } ⊢ 0(<2)◂{ { 8'(= r ) 9'(= r ) %[ "glb_etr id_line line_res 3" ] } 10'(= a2◂ [ *{ rr{| l |}}] ) }
;; rsp=3 , %1893~0(<2)◂{ { 8'(= r ) 9'(= r ) %[ "glb_etr id_line line_res 3" ] } 10'(= a2◂ [ *{ rr{| l |}}] ) } %1884~1'(= r ) %1883~0'(= r ) 
; #192 0(<2)◂{ { 8'(= r ) 9'(= r ) %[ "glb_etr id_line line_res 3" ] } 10'(= a2◂ [ *{ rr{| l |}}] ) } ⊢ 1(<2)◂0(<2)◂{ { 8'(= r ) 9'(= r ) %[ "glb_etr id_line line_res 3" ] } 10'(= a2◂ [ *{ rr{| l |}}] ) }
;; rsp=3 , %1894~1(<2)◂0(<2)◂{ { 8'(= r ) 9'(= r ) %[ "glb_etr id_line line_res 3" ] } 10'(= a2◂ [ *{ rr{| l |}}] ) } %1884~1'(= r ) %1883~0'(= r ) 
; #22 1(<2)◂0(<2)◂{ { 8'(= r ) 9'(= r ) %[ "glb_etr id_line line_res 3" ] } 10'(= a2◂ [ *{ rr{| l |}}] ) } ⊢ 0(<2)◂1(<2)◂0(<2)◂{ { 8'(= r ) 9'(= r ) %[ "glb_etr id_line line_res 3" ] } 10'(= a2◂ [ *{ rr{| l |}}] ) }
;; rsp=3 , %1895~0(<2)◂1(<2)◂0(<2)◂{ { 8'(= r ) 9'(= r ) %[ "glb_etr id_line line_res 3" ] } 10'(= a2◂ [ *{ rr{| l |}}] ) } %1884~1'(= r ) %1883~0'(= r ) 
; ∎ 0(<2)◂1(<2)◂0(<2)◂{ { 8'(= r ) 9'(= r ) %[ "glb_etr id_line line_res 3" ] } 10'(= a2◂ [ *{ rr{| l |}}] ) }
; .dlt.ptn 1'(= r )
; .dlt.ptn 0'(= r )
; .mov_ptn2 0(<2)◂1(<2)◂0(<2)◂{ { 8'(= r ) 9'(= r ) %[ "glb_etr id_line line_res 3" ] } 10'(= a2◂ [ *{ rr{| l |}}] ) } ⊢ 2'(= a3◂ [ a35◂ [ *{ a8◂ [ a12◂ [ a9◂ [ ]{| l |}]]a35◂ [ a18◂ [ a9◂ [ ]{| l |}]]}]] )
; .mov_ptn 0(<2)◂1(<2)◂0(<2)◂{ { 8'(= r ) 9'(= r ) %[ "glb_etr id_line line_res 3" ] } 10'(= a2◂ [ *{ rr{| l |}}] ) } ⊢ 2'(= a3◂ [ a35◂ [ *{ a8◂ [ a12◂ [ a9◂ [ ]{| l |}]]a35◂ [ a18◂ [ a9◂ [ ]{| l |}]]}]] )
	mov rax,[SS_RCD_2_TOP]
	mov rsi,[rax] 
	mov QWORD [SS_RCD_2_TOP],rsi
	mov QWORD [rax],0
	mov r13,rax
	mov rax,[SS_RCD_3_TOP]
	mov rsi,[rax] 
	mov QWORD [SS_RCD_3_TOP],rsi
	mov QWORD [rax],0
	mov r14,rax
	mov rax,QWORD [rsp-8+8*3]
	mov rdi,r14
	mov QWORD [rdi+8+8*0],rax
	mov rax,QWORD [rsp-8+8*2]
	mov rdi,r14
	mov QWORD [rdi+8+8*1],rax
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	mov rdi,1  
	mov rsi,40
	xor rax,rax
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call calloc
	mov rsp,QWORD [rsp_tmp]  
	mov rdi,26
	mov rsi,0x_40_00_0000_0000_0000
	or rdi,rsi
	mov QWORD [rax],rdi
	mov QWORD [rax+8*4],0
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	mov BYTE [rax+8+0],103
	mov BYTE [rax+8+1],108
	mov BYTE [rax+8+2],98
	mov BYTE [rax+8+3],95
	mov BYTE [rax+8+4],101
	mov BYTE [rax+8+5],116
	mov BYTE [rax+8+6],114
	mov BYTE [rax+8+7],32
	mov BYTE [rax+8+8],105
	mov BYTE [rax+8+9],100
	mov BYTE [rax+8+10],95
	mov BYTE [rax+8+11],108
	mov BYTE [rax+8+12],105
	mov BYTE [rax+8+13],110
	mov BYTE [rax+8+14],101
	mov BYTE [rax+8+15],32
	mov BYTE [rax+8+16],108
	mov BYTE [rax+8+17],105
	mov BYTE [rax+8+18],110
	mov BYTE [rax+8+19],101
	mov BYTE [rax+8+20],95
	mov BYTE [rax+8+21],114
	mov BYTE [rax+8+22],101
	mov BYTE [rax+8+23],115
	mov BYTE [rax+8+24],32
	mov BYTE [rax+8+25],51
	mov rdi,r14
	mov QWORD [rdi+8+8*2],rax
	mov rax,r14
	mov rdi,r13
	mov QWORD [rdi+8+8*0],rax
	mov rax,QWORD [rsp-8+8*1]
	mov rdi,r13
	mov QWORD [rdi+8+8*1],rax
	mov rax,r13
	mov BYTE [rax+6],0
	mov rdi,rax
	mov rax,[SS_LN_TOP]
	mov rsi,[rax]
	mov QWORD [SS_LN_TOP],rsi 
	mov QWORD [rax],0
	mov BYTE [rax+6],1
	mov QWORD [rax+8],rdi
	mov rdi,rax
	mov rax,[SS_LN_TOP]
	mov rsi,[rax]
	mov QWORD [SS_LN_TOP],rsi 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	lea rsp,[rsp+8*3]
	jmp LB_2944
LB_2944:
	movzx rax,BYTE [r8+6]
	cmp rax,0
	jnz LB_2929
	pop r14
	pop r9
	add rsp,8
	pop r13
	jmp LB_2832
LB_2929:
	pop rdi
	pop r9 
	pop r14
	pop r13
	jmp LB_2832
LB_2832:
	movzx rax,BYTE [r8+6]
	cmp rax,0
	jnz LB_2949
	jmp LB_2950
LB_2949:
	lea rsp,[rsp+8*1]
	add rsp,8
	pop r9 
	pop r14 
	pop r13
	ret
LB_2950:
	mov QWORD [rsp+8*1],r14
	mov r8,[r8+8]
; .mov_ptn2 2'(= a35◂ [ *{ a8◂ [ a12◂ [ a9◂ [ ]{| l |}]]a35◂ [ a18◂ [ a9◂ [ ]{| l |}]]}] ) ⊢ 3'(= a35◂ [ *{ a8◂ [ a12◂ [ a9◂ [ ]{| l |}]]a35◂ [ a18◂ [ a9◂ [ ]{| l |}]]}] )
	mov r10,r9
; .mov_ptn 2'(= a35◂ [ *{ a8◂ [ a12◂ [ a9◂ [ ]{| l |}]]a35◂ [ a18◂ [ a9◂ [ ]{| l |}]]}] ) ⊢ 3'(= a35◂ [ *{ a8◂ [ a12◂ [ a9◂ [ ]{| l |}]]a35◂ [ a18◂ [ a9◂ [ ]{| l |}]]}] )
	mov rax,r8
	mov r9,rax
	mov r13,QWORD [rsp+16+8*1]
	mov r14,QWORD [rsp+8*1]
	jmp LB_2952
LB_2952
;; rsp=1 , %1896~3'(= a35◂ [ *{ a8◂ [ a12◂ [ a9◂ [ ]{| l |}]]a35◂ [ a18◂ [ a9◂ [ ]{| l |}]]}] ) %1834~1'(= r ) %1833~0'(= r ) %1832~8'(= a35◂ [ *{ }] ) 
;; ? 3'(= a35◂ [ *{ a8◂ [ a12◂ [ a9◂ [ ]{| l |}]]a35◂ [ a18◂ [ a9◂ [ ]{| l |}]]}] ) ⊢ 0(<2)◂{ 2'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) 4'(= a35◂ [ a18◂ [ a9◂ [ ]{| l |}]] ) }
	mov rdi,r9
	movzx rax,BYTE [rdi+6]
	cmp rax,0
	jnz LB_2953
	mov rdi,r9
	mov rdi,QWORD [rdi+8+8*0]
	mov r8,rdi
	mov rdi,r9
	mov rdi,QWORD [rdi+8+8*1]
	mov r10,rdi
;; rsp=1 , %1899~4'(= a35◂ [ a18◂ [ a9◂ [ ]{| l |}]] ) %1898~2'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) %1834~1'(= r ) %1833~0'(= r ) %1832~8'(= a35◂ [ *{ }] ) 
;; ? 4'(= a35◂ [ a18◂ [ a9◂ [ ]{| l |}]] ) ⊢ 0(<2)◂3'(= a18◂ [ a9◂ [ ]{| l |}] )
	mov rdi,r10
	movzx rax,BYTE [rdi+6]
	cmp rax,0
	jnz LB_2954
	mov rax,QWORD [rdi+8]
	mov r9,rax
;; rsp=1 , %1901~3'(= a18◂ [ a9◂ [ ]{| l |}] ) %1898~2'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) %1834~1'(= r ) %1833~0'(= r ) %1832~8'(= a35◂ [ *{ }] ) 
; #127 { 2'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) 3'(= a18◂ [ a9◂ [ ]{| l |}] ) } ⊢ 4(<7)◂{ 2'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) 3'(= a18◂ [ a9◂ [ ]{| l |}] ) }
;; rsp=1 , %1902~4(<7)◂{ 2'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) 3'(= a18◂ [ a9◂ [ ]{| l |}] ) } %1834~1'(= r ) %1833~0'(= r ) %1832~8'(= a35◂ [ *{ }] ) 
; #193 4(<7)◂{ 2'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) 3'(= a18◂ [ a9◂ [ ]{| l |}] ) } ⊢ 0(<2)◂4(<7)◂{ 2'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) 3'(= a18◂ [ a9◂ [ ]{| l |}] ) }
;; rsp=1 , %1903~0(<2)◂4(<7)◂{ 2'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) 3'(= a18◂ [ a9◂ [ ]{| l |}] ) } %1834~1'(= r ) %1833~0'(= r ) %1832~8'(= a35◂ [ *{ }] ) 
; #22 0(<2)◂4(<7)◂{ 2'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) 3'(= a18◂ [ a9◂ [ ]{| l |}] ) } ⊢ 0(<2)◂0(<2)◂4(<7)◂{ 2'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) 3'(= a18◂ [ a9◂ [ ]{| l |}] ) }
;; rsp=1 , %1904~0(<2)◂0(<2)◂4(<7)◂{ 2'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) 3'(= a18◂ [ a9◂ [ ]{| l |}] ) } %1834~1'(= r ) %1833~0'(= r ) %1832~8'(= a35◂ [ *{ }] ) 
; ∎ 0(<2)◂0(<2)◂4(<7)◂{ 2'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) 3'(= a18◂ [ a9◂ [ ]{| l |}] ) }
; .dlt.ptn 1'(= r )
; .dlt.ptn 0'(= r )
; .dlt.ptn 8'(= a35◂ [ *{ }] )
;	.dlt adt ⊢ _  
; .mov_ptn2 0(<2)◂0(<2)◂4(<7)◂{ 2'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) 3'(= a18◂ [ a9◂ [ ]{| l |}] ) } ⊢ 2'(= a3◂ [ a35◂ [ a17◂ [ a9◂ [ ]{| l |}]]] )
	mov r13,r8
; .mov_ptn 0(<2)◂0(<2)◂4(<7)◂{ 0'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) 3'(= a18◂ [ a9◂ [ ]{| l |}] ) } ⊢ 2'(= a3◂ [ a35◂ [ a17◂ [ a9◂ [ ]{| l |}]]] )
	mov rax,[SS_RCD_2_TOP]
	mov rsi,[rax] 
	mov QWORD [SS_RCD_2_TOP],rsi
	mov QWORD [rax],0
	mov r14,rax
	mov rax,r13
	mov rdi,r14
	mov QWORD [rdi+8+8*0],rax
	mov rax,r9
	mov rdi,r14
	mov QWORD [rdi+8+8*1],rax
	mov rax,r14
	mov BYTE [rax+6],4
	mov rdi,rax
	mov rax,[SS_LN_TOP]
	mov rsi,[rax]
	mov QWORD [SS_LN_TOP],rsi 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov rdi,rax
	mov rax,[SS_LN_TOP]
	mov rsi,[rax]
	mov QWORD [SS_LN_TOP],rsi 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	lea rsp,[rsp+8*1]
	jmp LB_2951
LB_2954:
;; ? 4'(= a35◂ [ a18◂ [ a9◂ [ ]{| l |}]] ) ⊢ 1(<2)◂4'(= a2◂ [ *{ rr{| l |}}] )
;; rsp=1 , %1900~4'(= a2◂ [ *{ rr{| l |}}] ) %1898~2'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) %1834~1'(= r ) %1833~0'(= r ) %1832~8'(= a35◂ [ *{ }] ) 
; #192 4'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 1(<2)◂4'(= a2◂ [ *{ rr{| l |}}] )
;; rsp=1 , %1905~1(<2)◂4'(= a2◂ [ *{ rr{| l |}}] ) %1898~2'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) %1834~1'(= r ) %1833~0'(= r ) %1832~8'(= a35◂ [ *{ }] ) 
; #22 1(<2)◂4'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 0(<2)◂1(<2)◂4'(= a2◂ [ *{ rr{| l |}}] )
;; rsp=1 , %1906~0(<2)◂1(<2)◂4'(= a2◂ [ *{ rr{| l |}}] ) %1898~2'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) %1834~1'(= r ) %1833~0'(= r ) %1832~8'(= a35◂ [ *{ }] ) 
; ∎ 0(<2)◂1(<2)◂4'(= a2◂ [ *{ rr{| l |}}] )
; .dlt.ptn 2'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] )
;	.dlt adt ⊢ _  
; .dlt.ptn 1'(= r )
; .dlt.ptn 0'(= r )
; .dlt.ptn 8'(= a35◂ [ *{ }] )
;	.dlt adt ⊢ _  
; .mov_ptn2 0(<2)◂1(<2)◂4'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 2'(= a3◂ [ a35◂ [ a17◂ [ a9◂ [ ]{| l |}]]] )
; .mov_ptn 0(<2)◂1(<2)◂4'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 2'(= a3◂ [ a35◂ [ a17◂ [ a9◂ [ ]{| l |}]]] )
	mov rax,r10
	mov rdi,rax
	mov rax,[SS_LN_TOP]
	mov rsi,[rax]
	mov QWORD [SS_LN_TOP],rsi 
	mov QWORD [rax],0
	mov BYTE [rax+6],1
	mov QWORD [rax+8],rdi
	mov rdi,rax
	mov rax,[SS_LN_TOP]
	mov rsi,[rax]
	mov QWORD [SS_LN_TOP],rsi 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	lea rsp,[rsp+8*1]
	jmp LB_2951
LB_2953:
;; ? 3'(= a35◂ [ *{ a8◂ [ a12◂ [ a9◂ [ ]{| l |}]]a35◂ [ a18◂ [ a9◂ [ ]{| l |}]]}] ) ⊢ 1(<2)◂3'(= a2◂ [ *{ rr{| l |}}] )
;; rsp=1 , %1897~3'(= a2◂ [ *{ rr{| l |}}] ) %1834~1'(= r ) %1833~0'(= r ) %1832~8'(= a35◂ [ *{ }] ) 
; #192 3'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 1(<2)◂3'(= a2◂ [ *{ rr{| l |}}] )
;; rsp=1 , %1907~1(<2)◂3'(= a2◂ [ *{ rr{| l |}}] ) %1834~1'(= r ) %1833~0'(= r ) %1832~8'(= a35◂ [ *{ }] ) 
; #22 1(<2)◂3'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 0(<2)◂1(<2)◂3'(= a2◂ [ *{ rr{| l |}}] )
;; rsp=1 , %1908~0(<2)◂1(<2)◂3'(= a2◂ [ *{ rr{| l |}}] ) %1834~1'(= r ) %1833~0'(= r ) %1832~8'(= a35◂ [ *{ }] ) 
; ∎ 0(<2)◂1(<2)◂3'(= a2◂ [ *{ rr{| l |}}] )
; .dlt.ptn 1'(= r )
; .dlt.ptn 0'(= r )
; .dlt.ptn 8'(= a35◂ [ *{ }] )
;	.dlt adt ⊢ _  
; .mov_ptn2 0(<2)◂1(<2)◂3'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 2'(= a3◂ [ a35◂ [ a17◂ [ a9◂ [ ]{| l |}]]] )
; .mov_ptn 0(<2)◂1(<2)◂3'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 2'(= a3◂ [ a35◂ [ a17◂ [ a9◂ [ ]{| l |}]]] )
	mov rax,r9
	mov rdi,rax
	mov rax,[SS_LN_TOP]
	mov rsi,[rax]
	mov QWORD [SS_LN_TOP],rsi 
	mov QWORD [rax],0
	mov BYTE [rax+6],1
	mov QWORD [rax+8],rdi
	mov rdi,rax
	mov rax,[SS_LN_TOP]
	mov rsi,[rax]
	mov QWORD [SS_LN_TOP],rsi 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	lea rsp,[rsp+8*1]
	jmp LB_2951
LB_2951:
	movzx rax,BYTE [r8+6]
	cmp rax,0
	jnz LB_2815
	pop r14
	pop r9
	add rsp,8
	pop r13
	ret
LB_2815:
	jmp LB_2957
LB_2956:
	add r14,1 
LB_2957:
	cmp r14,r9
	jge LB_2958
	movzx rax,BYTE [r13+8+r14]
	cmp rax,9 
	jz LB_2956
	cmp rax,10 
	jz LB_2956
	cmp rax,32 
	jz LB_2956
LB_2958
	call GRM_225
	movzx rax,BYTE [r8+6]
	cmp rax,0
	jnz LB_2961
	jmp LB_2962
LB_2961:
	jmp LB_2959
LB_2962:
; .mov_ptn2 2'(= *{ } ) ⊢ { }
; .mov_ptn 2'(= *{ } ) ⊢ { }
	jmp LB_2960
LB_2959:
	lea rsp,[rsp+8*0]
	jmp LB_2955
LB_2960:
	sub rsp,32
	mov QWORD [rsp+24],r13
	mov QWORD [rsp+16],r14 
	mov QWORD [rsp+8],r9
	jmp LB_2966
LB_2965:
	add r14,1 
LB_2966:
	cmp r14,r9
	jge LB_2967
	movzx rax,BYTE [r13+8+r14]
	cmp rax,9 
	jz LB_2965
	cmp rax,10 
	jz LB_2965
	cmp rax,32 
	jz LB_2965
LB_2967
	call GRM_234
	movzx rax,BYTE [r8+6]
	cmp rax,0
	jnz LB_2970
	jmp LB_2971
LB_2970:
	jmp LB_2968
LB_2971:
	lea rsp,[rsp-8*1]
	mov r8,[r8+8]
; .mov_ptn2 2'(= a35◂ [ a17◂ [ a9◂ [ ]{| l |}]] ) ⊢ 8'(= a35◂ [ a17◂ [ a9◂ [ ]{| l |}]] )
; .mov_ptn 2'(= a35◂ [ a17◂ [ a9◂ [ ]{| l |}]] ) ⊢ 8'(= a35◂ [ a17◂ [ a9◂ [ ]{| l |}]] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_2969
LB_2968:
	lea rsp,[rsp+8*0]
	jmp LB_2964
LB_2969:
	mov QWORD [rsp+8*1],r14
	mov r13,QWORD [rsp+16+8*1]
	mov r14,QWORD [rsp+8*1]
	jmp LB_2973
LB_2973
;; rsp=1 , %1914~1'(= r ) %1913~0'(= r ) %1912~8'(= a35◂ [ a17◂ [ a9◂ [ ]{| l |}]] ) 
; #22 8'(= a35◂ [ a17◂ [ a9◂ [ ]{| l |}]] ) ⊢ 0(<2)◂8'(= a35◂ [ a17◂ [ a9◂ [ ]{| l |}]] )
;; rsp=1 , %1915~0(<2)◂8'(= a35◂ [ a17◂ [ a9◂ [ ]{| l |}]] ) %1914~1'(= r ) %1913~0'(= r ) 
; ∎ 0(<2)◂8'(= a35◂ [ a17◂ [ a9◂ [ ]{| l |}]] )
; .dlt.ptn 1'(= r )
; .dlt.ptn 0'(= r )
; .mov_ptn2 0(<2)◂8'(= a35◂ [ a17◂ [ a9◂ [ ]{| l |}]] ) ⊢ 2'(= a3◂ [ a35◂ [ a17◂ [ a9◂ [ ]{| l |}]]] )
; .mov_ptn 0(<2)◂8'(= a35◂ [ a17◂ [ a9◂ [ ]{| l |}]] ) ⊢ 2'(= a3◂ [ a35◂ [ a17◂ [ a9◂ [ ]{| l |}]]] )
	mov rax,QWORD [rsp-8+8*1]
	mov rdi,rax
	mov rax,[SS_LN_TOP]
	mov rsi,[rax]
	mov QWORD [SS_LN_TOP],rsi 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	lea rsp,[rsp+8*1]
	jmp LB_2972
LB_2972:
	movzx rax,BYTE [r8+6]
	cmp rax,0
	jnz LB_2964
	pop r14
	pop r9
	add rsp,8
	pop r13
	jmp LB_2963
LB_2964:
	jmp LB_2976
LB_2975:
	add r14,1 
LB_2976:
	cmp r14,r9
	jge LB_2977
	movzx rax,BYTE [r13+8+r14]
	cmp rax,9 
	jz LB_2975
	cmp rax,10 
	jz LB_2975
	cmp rax,32 
	jz LB_2975
LB_2977
	call GRM_224
	movzx rax,BYTE [r8+6]
	cmp rax,0
	jnz LB_2980
	jmp LB_2981
LB_2980:
	jmp LB_2978
LB_2981:
; .mov_ptn2 2'(= *{ } ) ⊢ { }
; .mov_ptn 2'(= *{ } ) ⊢ { }
	jmp LB_2979
LB_2978:
	lea rsp,[rsp+8*0]
	jmp LB_2974
LB_2979:
	mov QWORD [rsp+8*0],r14
	mov r13,QWORD [rsp+16+8*0]
	mov r14,QWORD [rsp+8*0]
	jmp LB_2983
LB_2983
;; rsp=0 , %1918~1'(= r ) %1917~0'(= r ) %1916~{ } 
	jmp LB_2984
LB_2984:
; $ %[ "lc_code 11" ] ⊢ %[ "lc_code 11" ]
;; rsp=0 , %1919~%[ "lc_code 11" ] %1918~1'(= r ) %1917~0'(= r ) %1916~{ } 
; #20 { } ⊢ 1(<2)◂{ }
;; rsp=0 , %1920~1(<2)◂{ } %1919~%[ "lc_code 11" ] %1918~1'(= r ) %1917~0'(= r ) %1916~{ } 
; #21 { { 0'(= r ) 1'(= r ) %[ "lc_code 11" ] } 1(<2)◂{ } } ⊢ 0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "lc_code 11" ] } 1(<2)◂{ } }
;; rsp=0 , %1921~0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "lc_code 11" ] } 1(<2)◂{ } } %1916~{ } 
; #192 0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "lc_code 11" ] } 1(<2)◂{ } } ⊢ 1(<2)◂0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "lc_code 11" ] } 1(<2)◂{ } }
;; rsp=0 , %1922~1(<2)◂0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "lc_code 11" ] } 1(<2)◂{ } } %1916~{ } 
; #22 1(<2)◂0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "lc_code 11" ] } 1(<2)◂{ } } ⊢ 0(<2)◂1(<2)◂0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "lc_code 11" ] } 1(<2)◂{ } }
;; rsp=0 , %1923~0(<2)◂1(<2)◂0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "lc_code 11" ] } 1(<2)◂{ } } %1916~{ } 
; ∎ 0(<2)◂1(<2)◂0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "lc_code 11" ] } 1(<2)◂{ } }
; .dlt.ptn { }
; .mov_ptn2 0(<2)◂1(<2)◂0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "lc_code 11" ] } 1(<2)◂{ } } ⊢ 2'(= a3◂ [ a35◂ [ a17◂ [ a9◂ [ ]{| l |}]]] )
; .mov_ptn 0(<2)◂1(<2)◂0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "lc_code 11" ] } 1(<2)◂{ } } ⊢ 2'(= a3◂ [ a35◂ [ a17◂ [ a9◂ [ ]{| l |}]]] )
	mov rax,[SS_RCD_2_TOP]
	mov rsi,[rax] 
	mov QWORD [SS_RCD_2_TOP],rsi
	mov QWORD [rax],0
	mov r9,rax
	mov rax,[SS_RCD_3_TOP]
	mov rsi,[rax] 
	mov QWORD [SS_RCD_3_TOP],rsi
	mov QWORD [rax],0
	mov r10,rax
	mov rax,r13
	mov rdi,r10
	mov QWORD [rdi+8+8*0],rax
	mov rax,r14
	mov rdi,r10
	mov QWORD [rdi+8+8*1],rax
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	mov rdi,1  
	mov rsi,24
	xor rax,rax
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call calloc
	mov rsp,QWORD [rsp_tmp]  
	mov rdi,10
	mov rsi,0x_40_00_0000_0000_0000
	or rdi,rsi
	mov QWORD [rax],rdi
	mov QWORD [rax+8*2],0
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	mov BYTE [rax+8+0],108
	mov BYTE [rax+8+1],99
	mov BYTE [rax+8+2],95
	mov BYTE [rax+8+3],99
	mov BYTE [rax+8+4],111
	mov BYTE [rax+8+5],100
	mov BYTE [rax+8+6],101
	mov BYTE [rax+8+7],32
	mov BYTE [rax+8+8],49
	mov BYTE [rax+8+9],49
	mov rdi,r10
	mov QWORD [rdi+8+8*2],rax
	mov rax,r10
	mov rdi,r9
	mov QWORD [rdi+8+8*0],rax
	mov rax,unt 
	mov rax,unt_1
	mov rdi,r9
	mov QWORD [rdi+8+8*1],rax
	mov rax,r9
	mov BYTE [rax+6],0
	mov rdi,rax
	mov rax,[SS_LN_TOP]
	mov rsi,[rax]
	mov QWORD [SS_LN_TOP],rsi 
	mov QWORD [rax],0
	mov BYTE [rax+6],1
	mov QWORD [rax+8],rdi
	mov rdi,rax
	mov rax,[SS_LN_TOP]
	mov rsi,[rax]
	mov QWORD [SS_LN_TOP],rsi 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	jmp LB_2982
LB_2982:
	movzx rax,BYTE [r8+6]
	cmp rax,0
	jnz LB_2974
	pop r14
	pop r9
	add rsp,8
	pop r13
	jmp LB_2963
LB_2974:
	pop rdi
	pop r9 
	pop r14
	pop r13
	jmp LB_2963
LB_2963:
	movzx rax,BYTE [r8+6]
	cmp rax,0
	jnz LB_2985
	jmp LB_2986
LB_2985:
	lea rsp,[rsp+8*0]
	add rsp,8
	pop r9 
	pop r14 
	pop r13
	ret
LB_2986:
	mov QWORD [rsp+8*0],r14
	mov r8,[r8+8]
; .mov_ptn2 2'(= a35◂ [ a17◂ [ a9◂ [ ]{| l |}]] ) ⊢ 3'(= a35◂ [ a17◂ [ a9◂ [ ]{| l |}]] )
	mov r10,r9
; .mov_ptn 2'(= a35◂ [ a17◂ [ a9◂ [ ]{| l |}]] ) ⊢ 3'(= a35◂ [ a17◂ [ a9◂ [ ]{| l |}]] )
	mov rax,r8
	mov r9,rax
	mov r13,QWORD [rsp+16+8*0]
	mov r14,QWORD [rsp+8*0]
	jmp LB_2988
LB_2988
;; rsp=0 , %1924~3'(= a35◂ [ a17◂ [ a9◂ [ ]{| l |}]] ) %1911~1'(= r ) %1910~0'(= r ) %1909~{ } 
;; ? 3'(= a35◂ [ a17◂ [ a9◂ [ ]{| l |}]] ) ⊢ 0(<2)◂2'(= a17◂ [ a9◂ [ ]{| l |}] )
	mov rdi,r9
	movzx rax,BYTE [rdi+6]
	cmp rax,0
	jnz LB_2989
	mov rax,QWORD [rdi+8]
	mov r8,rax
;; rsp=0 , %1926~2'(= a17◂ [ a9◂ [ ]{| l |}] ) %1911~1'(= r ) %1910~0'(= r ) %1909~{ } 
	jmp LB_2990
LB_2990:
; $ %[ "lc_code 9" ] ⊢ %[ "lc_code 9" ]
;; rsp=0 , %1927~%[ "lc_code 9" ] %1926~2'(= a17◂ [ a9◂ [ ]{| l |}] ) %1911~1'(= r ) %1910~0'(= r ) %1909~{ } 
; rsp_d=0, #195 { 0'(= r ) 1'(= r ) %[ "lc_code 9" ] } ⊢ 0'(= a35◂ [ q0] )
	lea rsp,[rsp-8*1]
	mov QWORD [rsp+8*0],r8
; .mov_ptn2 { 0'(= r ) 1'(= r ) %[ "lc_code 9" ] } ⊢ { 0'(= r ) 1'(= r ) 2'(= {| l |} ) }
; .mov_ptn %[ "lc_code 9" ] ⊢ 2'(= {| l |} )
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	mov rdi,1  
	mov rsi,24
	xor rax,rax
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call calloc
	mov rsp,QWORD [rsp_tmp]  
	mov rdi,9
	mov rsi,0x_40_00_0000_0000_0000
	or rdi,rsi
	mov QWORD [rax],rdi
	mov QWORD [rax+8*2],0
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	mov BYTE [rax+8+0],108
	mov BYTE [rax+8+1],99
	mov BYTE [rax+8+2],95
	mov BYTE [rax+8+3],99
	mov BYTE [rax+8+4],111
	mov BYTE [rax+8+5],100
	mov BYTE [rax+8+6],101
	mov BYTE [rax+8+7],32
	mov BYTE [rax+8+8],57
	mov r8,rax
	call ETR_195

	mov r8,QWORD [rsp-8+8*1]
	lea rsp,[rsp+8*1]
;; rsp=0 , %1928~0'(= a35◂ [ q0] ) %1926~2'(= a17◂ [ a9◂ [ ]{| l |}] ) %1909~{ } 
; #22 0'(= a35◂ [ q0] ) ⊢ 0(<2)◂0'(= a35◂ [ q0] )
;; rsp=0 , %1929~0(<2)◂0'(= a35◂ [ q0] ) %1926~2'(= a17◂ [ a9◂ [ ]{| l |}] ) %1909~{ } 
; ∎ 0(<2)◂0'(= a35◂ [ q0] )
; .dlt.ptn 2'(= a17◂ [ a9◂ [ ]{| l |}] )
;	.dlt adt ⊢ _  
; .dlt.ptn { }
; .mov_ptn2 0(<2)◂0'(= a35◂ [ q0] ) ⊢ 2'(= a3◂ [ a35◂ [ a17◂ [ a9◂ [ ]{| l |}]]] )
; .mov_ptn 0(<2)◂0'(= a35◂ [ q0] ) ⊢ 2'(= a3◂ [ a35◂ [ a17◂ [ a9◂ [ ]{| l |}]]] )
	mov rax,r13
	mov rdi,rax
	mov rax,[SS_LN_TOP]
	mov rsi,[rax]
	mov QWORD [SS_LN_TOP],rsi 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	jmp LB_2987
LB_2989:
;; ? 3'(= a35◂ [ a17◂ [ a9◂ [ ]{| l |}]] ) ⊢ 1(<2)◂3'(= a2◂ [ *{ rr{| l |}}] )
;; rsp=0 , %1925~3'(= a2◂ [ *{ rr{| l |}}] ) %1911~1'(= r ) %1910~0'(= r ) %1909~{ } 
	jmp LB_2991
LB_2991:
; $ %[ "lc_code 10" ] ⊢ %[ "lc_code 10" ]
;; rsp=0 , %1930~%[ "lc_code 10" ] %1925~3'(= a2◂ [ *{ rr{| l |}}] ) %1911~1'(= r ) %1910~0'(= r ) %1909~{ } 
; #21 { { 0'(= r ) 1'(= r ) %[ "lc_code 10" ] } 3'(= a2◂ [ *{ rr{| l |}}] ) } ⊢ 0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "lc_code 10" ] } 3'(= a2◂ [ *{ rr{| l |}}] ) }
;; rsp=0 , %1931~0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "lc_code 10" ] } 3'(= a2◂ [ *{ rr{| l |}}] ) } %1909~{ } 
; #192 0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "lc_code 10" ] } 3'(= a2◂ [ *{ rr{| l |}}] ) } ⊢ 1(<2)◂0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "lc_code 10" ] } 3'(= a2◂ [ *{ rr{| l |}}] ) }
;; rsp=0 , %1932~1(<2)◂0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "lc_code 10" ] } 3'(= a2◂ [ *{ rr{| l |}}] ) } %1909~{ } 
; #22 1(<2)◂0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "lc_code 10" ] } 3'(= a2◂ [ *{ rr{| l |}}] ) } ⊢ 0(<2)◂1(<2)◂0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "lc_code 10" ] } 3'(= a2◂ [ *{ rr{| l |}}] ) }
;; rsp=0 , %1933~0(<2)◂1(<2)◂0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "lc_code 10" ] } 3'(= a2◂ [ *{ rr{| l |}}] ) } %1909~{ } 
; ∎ 0(<2)◂1(<2)◂0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "lc_code 10" ] } 3'(= a2◂ [ *{ rr{| l |}}] ) }
; .dlt.ptn { }
; .mov_ptn2 0(<2)◂1(<2)◂0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "lc_code 10" ] } 3'(= a2◂ [ *{ rr{| l |}}] ) } ⊢ 2'(= a3◂ [ a35◂ [ a17◂ [ a9◂ [ ]{| l |}]]] )
; .mov_ptn 0(<2)◂1(<2)◂0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "lc_code 10" ] } 3'(= a2◂ [ *{ rr{| l |}}] ) } ⊢ 2'(= a3◂ [ a35◂ [ a17◂ [ a9◂ [ ]{| l |}]]] )
	mov rax,[SS_RCD_2_TOP]
	mov rsi,[rax] 
	mov QWORD [SS_RCD_2_TOP],rsi
	mov QWORD [rax],0
	mov r10,rax
	mov rax,[SS_RCD_3_TOP]
	mov rsi,[rax] 
	mov QWORD [SS_RCD_3_TOP],rsi
	mov QWORD [rax],0
	mov r11,rax
	mov rax,r13
	mov rdi,r11
	mov QWORD [rdi+8+8*0],rax
	mov rax,r14
	mov rdi,r11
	mov QWORD [rdi+8+8*1],rax
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	mov rdi,1  
	mov rsi,24
	xor rax,rax
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call calloc
	mov rsp,QWORD [rsp_tmp]  
	mov rdi,10
	mov rsi,0x_40_00_0000_0000_0000
	or rdi,rsi
	mov QWORD [rax],rdi
	mov QWORD [rax+8*2],0
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	mov BYTE [rax+8+0],108
	mov BYTE [rax+8+1],99
	mov BYTE [rax+8+2],95
	mov BYTE [rax+8+3],99
	mov BYTE [rax+8+4],111
	mov BYTE [rax+8+5],100
	mov BYTE [rax+8+6],101
	mov BYTE [rax+8+7],32
	mov BYTE [rax+8+8],49
	mov BYTE [rax+8+9],48
	mov rdi,r11
	mov QWORD [rdi+8+8*2],rax
	mov rax,r11
	mov rdi,r10
	mov QWORD [rdi+8+8*0],rax
	mov rax,r9
	mov rdi,r10
	mov QWORD [rdi+8+8*1],rax
	mov rax,r10
	mov BYTE [rax+6],0
	mov rdi,rax
	mov rax,[SS_LN_TOP]
	mov rsi,[rax]
	mov QWORD [SS_LN_TOP],rsi 
	mov QWORD [rax],0
	mov BYTE [rax+6],1
	mov QWORD [rax+8],rdi
	mov rdi,rax
	mov rax,[SS_LN_TOP]
	mov rsi,[rax]
	mov QWORD [SS_LN_TOP],rsi 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	jmp LB_2987
LB_2987:
	movzx rax,BYTE [r8+6]
	cmp rax,0
	jnz LB_2955
	pop r14
	pop r9
	add rsp,8
	pop r13
	ret
LB_2955:
	pop rdi
	pop r9 
	pop r14
	pop r13
	ret
ETR_235:
	mov r9,0x0000_ffff_ffff_ffff
	and r9,[r13]
	call GRM_235
	ret
GRM_235:
	sub rsp,32
	mov QWORD [rsp+24],r13
	mov QWORD [rsp+16],r14 
	mov QWORD [rsp+8],r9
	jmp LB_2994
LB_2993:
	add r14,1 
LB_2994:
	cmp r14,r9
	jge LB_2995
	movzx rax,BYTE [r13+8+r14]
	cmp rax,9 
	jz LB_2993
	cmp rax,10 
	jz LB_2993
	cmp rax,32 
	jz LB_2993
LB_2995
	call GRM_237
	movzx rax,BYTE [r8+6]
	cmp rax,0
	jnz LB_2998
	jmp LB_2999
LB_2998:
	jmp LB_2996
LB_2999:
	lea rsp,[rsp-8*1]
	mov r8,[r8+8]
; .mov_ptn2 2'(= a35◂ [ a7◂ [ *{ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}]] ) ⊢ 8'(= a35◂ [ a7◂ [ *{ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}]] )
; .mov_ptn 2'(= a35◂ [ a7◂ [ *{ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}]] ) ⊢ 8'(= a35◂ [ a7◂ [ *{ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}]] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_2997
LB_2996:
	lea rsp,[rsp+8*0]
	jmp LB_2992
LB_2997:
	mov QWORD [rsp+8*1],r14
	mov r13,QWORD [rsp+16+8*1]
	mov r14,QWORD [rsp+8*1]
	jmp LB_3001
LB_3001
;; rsp=1 , %1936~1'(= r ) %1935~0'(= r ) %1934~8'(= a35◂ [ a7◂ [ *{ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}]] ) 
;; ? 8'(= a35◂ [ a7◂ [ *{ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}]] ) ⊢ 0(<2)◂2'(= a7◂ [ *{ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}] )
	mov rdi,QWORD [rsp-8+8*1]
	movzx rax,BYTE [rdi+6]
	cmp rax,0
	jnz LB_3002
	mov rax,QWORD [rdi+8]
	mov r8,rax
;; rsp=1 , %1938~2'(= a7◂ [ *{ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}] ) %1936~1'(= r ) %1935~0'(= r ) 
; #124 2'(= a7◂ [ *{ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}] ) ⊢ 0(<2)◂2'(= a7◂ [ *{ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}] )
;; rsp=1 , %1939~0(<2)◂2'(= a7◂ [ *{ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}] ) %1936~1'(= r ) %1935~0'(= r ) 
; #193 0(<2)◂2'(= a7◂ [ *{ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}] ) ⊢ 0(<2)◂0(<2)◂2'(= a7◂ [ *{ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}] )
;; rsp=1 , %1940~0(<2)◂0(<2)◂2'(= a7◂ [ *{ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}] ) %1936~1'(= r ) %1935~0'(= r ) 
; #22 0(<2)◂0(<2)◂2'(= a7◂ [ *{ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}] ) ⊢ 0(<2)◂0(<2)◂0(<2)◂2'(= a7◂ [ *{ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}] )
;; rsp=1 , %1941~0(<2)◂0(<2)◂0(<2)◂2'(= a7◂ [ *{ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}] ) %1936~1'(= r ) %1935~0'(= r ) 
; ∎ 0(<2)◂0(<2)◂0(<2)◂2'(= a7◂ [ *{ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}] )
; .dlt.ptn 1'(= r )
; .dlt.ptn 0'(= r )
; .mov_ptn2 0(<2)◂0(<2)◂0(<2)◂2'(= a7◂ [ *{ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}] ) ⊢ 2'(= a3◂ [ a35◂ [ a18◂ [ a9◂ [ ]{| l |}]]] )
	mov r13,r8
; .mov_ptn 0(<2)◂0(<2)◂0(<2)◂0'(= a7◂ [ *{ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}] ) ⊢ 2'(= a3◂ [ a35◂ [ a18◂ [ a9◂ [ ]{| l |}]]] )
	mov rax,r13
	mov rdi,rax
	mov rax,[SS_LN_TOP]
	mov rsi,[rax]
	mov QWORD [SS_LN_TOP],rsi 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov rdi,rax
	mov rax,[SS_LN_TOP]
	mov rsi,[rax]
	mov QWORD [SS_LN_TOP],rsi 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov rdi,rax
	mov rax,[SS_LN_TOP]
	mov rsi,[rax]
	mov QWORD [SS_LN_TOP],rsi 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	lea rsp,[rsp+8*1]
	jmp LB_3000
LB_3002:
;; ? 8'(= a35◂ [ a7◂ [ *{ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}]] ) ⊢ 1(<2)◂8'(= a2◂ [ *{ rr{| l |}}] )
;; rsp=1 , %1937~8'(= a2◂ [ *{ rr{| l |}}] ) %1936~1'(= r ) %1935~0'(= r ) 
; #192 8'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 1(<2)◂8'(= a2◂ [ *{ rr{| l |}}] )
;; rsp=1 , %1942~1(<2)◂8'(= a2◂ [ *{ rr{| l |}}] ) %1936~1'(= r ) %1935~0'(= r ) 
; #22 1(<2)◂8'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 0(<2)◂1(<2)◂8'(= a2◂ [ *{ rr{| l |}}] )
;; rsp=1 , %1943~0(<2)◂1(<2)◂8'(= a2◂ [ *{ rr{| l |}}] ) %1936~1'(= r ) %1935~0'(= r ) 
; ∎ 0(<2)◂1(<2)◂8'(= a2◂ [ *{ rr{| l |}}] )
; .dlt.ptn 1'(= r )
; .dlt.ptn 0'(= r )
; .mov_ptn2 0(<2)◂1(<2)◂8'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 2'(= a3◂ [ a35◂ [ a18◂ [ a9◂ [ ]{| l |}]]] )
; .mov_ptn 0(<2)◂1(<2)◂8'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 2'(= a3◂ [ a35◂ [ a18◂ [ a9◂ [ ]{| l |}]]] )
	mov rax,QWORD [rsp-8+8*1]
	mov rdi,rax
	mov rax,[SS_LN_TOP]
	mov rsi,[rax]
	mov QWORD [SS_LN_TOP],rsi 
	mov QWORD [rax],0
	mov BYTE [rax+6],1
	mov QWORD [rax+8],rdi
	mov rdi,rax
	mov rax,[SS_LN_TOP]
	mov rsi,[rax]
	mov QWORD [SS_LN_TOP],rsi 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	lea rsp,[rsp+8*1]
	jmp LB_3000
LB_3000:
	movzx rax,BYTE [r8+6]
	cmp rax,0
	jnz LB_2992
	pop r14
	pop r9
	add rsp,8
	pop r13
	ret
LB_2992:
	jmp LB_3005
LB_3004:
	add r14,1 
LB_3005:
	cmp r14,r9
	jge LB_3006
	movzx rax,BYTE [r13+8+r14]
	cmp rax,9 
	jz LB_3004
	cmp rax,10 
	jz LB_3004
	cmp rax,32 
	jz LB_3004
LB_3006
	call GRM_205
	movzx rax,BYTE [r8+6]
	cmp rax,0
	jnz LB_3009
	jmp LB_3010
LB_3009:
	jmp LB_3007
LB_3010:
	lea rsp,[rsp-8*1]
	mov r8,[r8+8]
; .mov_ptn2 2'(= a8◂ [ a13◂ [ {| l |}]] ) ⊢ 8'(= a8◂ [ a13◂ [ {| l |}]] )
; .mov_ptn 2'(= a8◂ [ a13◂ [ {| l |}]] ) ⊢ 8'(= a8◂ [ a13◂ [ {| l |}]] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_3008
LB_3007:
	lea rsp,[rsp+8*0]
	jmp LB_3003
LB_3008:
	jmp LB_3012
LB_3011:
	add r14,1 
LB_3012:
	cmp r14,r9
	jge LB_3013
	movzx rax,BYTE [r13+8+r14]
	cmp rax,9 
	jz LB_3011
	cmp rax,10 
	jz LB_3011
	cmp rax,32 
	jz LB_3011
LB_3013
	call GRM_207
	movzx rax,BYTE [r8+6]
	cmp rax,0
	jnz LB_3016
	jmp LB_3017
LB_3016:
	jmp LB_3014
LB_3017:
	lea rsp,[rsp-8*1]
	mov r8,[r8+8]
; .mov_ptn2 2'(= a2◂ [ a8◂ [ a13◂ [ {| l |}]]] ) ⊢ 9'(= a2◂ [ a8◂ [ a13◂ [ {| l |}]]] )
; .mov_ptn 2'(= a2◂ [ a8◂ [ a13◂ [ {| l |}]]] ) ⊢ 9'(= a2◂ [ a8◂ [ a13◂ [ {| l |}]]] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_3015
LB_3014:
	lea rsp,[rsp+8*1]
	jmp LB_3003
LB_3015:
	jmp LB_3019
LB_3018:
	add r14,1 
LB_3019:
	cmp r14,r9
	jge LB_3020
	movzx rax,BYTE [r13+8+r14]
	cmp rax,9 
	jz LB_3018
	cmp rax,10 
	jz LB_3018
	cmp rax,32 
	jz LB_3018
LB_3020
	call GRM_234
	movzx rax,BYTE [r8+6]
	cmp rax,0
	jnz LB_3023
	jmp LB_3024
LB_3023:
	jmp LB_3021
LB_3024:
	lea rsp,[rsp-8*1]
	mov r8,[r8+8]
; .mov_ptn2 2'(= a35◂ [ a17◂ [ a9◂ [ ]{| l |}]] ) ⊢ 10'(= a35◂ [ a17◂ [ a9◂ [ ]{| l |}]] )
; .mov_ptn 2'(= a35◂ [ a17◂ [ a9◂ [ ]{| l |}]] ) ⊢ 10'(= a35◂ [ a17◂ [ a9◂ [ ]{| l |}]] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_3022
LB_3021:
	lea rsp,[rsp+8*2]
	jmp LB_3003
LB_3022:
	mov QWORD [rsp+8*3],r14
	mov r13,QWORD [rsp+16+8*3]
	mov r14,QWORD [rsp+8*3]
	jmp LB_3026
LB_3026
;; rsp=3 , %1948~1'(= r ) %1947~0'(= r ) %1946~10'(= a35◂ [ a17◂ [ a9◂ [ ]{| l |}]] ) %1945~9'(= a2◂ [ a8◂ [ a13◂ [ {| l |}]]] ) %1944~8'(= a8◂ [ a13◂ [ {| l |}]] ) 
;; ? 10'(= a35◂ [ a17◂ [ a9◂ [ ]{| l |}]] ) ⊢ 0(<2)◂2'(= a17◂ [ a9◂ [ ]{| l |}] )
	mov rdi,QWORD [rsp-8+8*1]
	movzx rax,BYTE [rdi+6]
	cmp rax,0
	jnz LB_3027
	mov rax,QWORD [rdi+8]
	mov r8,rax
;; rsp=3 , %1950~2'(= a17◂ [ a9◂ [ ]{| l |}] ) %1948~1'(= r ) %1947~0'(= r ) %1945~9'(= a2◂ [ a8◂ [ a13◂ [ {| l |}]]] ) %1944~8'(= a8◂ [ a13◂ [ {| l |}]] ) 
; #21 { 8'(= a8◂ [ a13◂ [ {| l |}]] ) 9'(= a2◂ [ a8◂ [ a13◂ [ {| l |}]]] ) } ⊢ 0(<2)◂{ 8'(= a8◂ [ a13◂ [ {| l |}]] ) 9'(= a2◂ [ a8◂ [ a13◂ [ {| l |}]]] ) }
;; rsp=3 , %1951~0(<2)◂{ 8'(= a8◂ [ a13◂ [ {| l |}]] ) 9'(= a2◂ [ a8◂ [ a13◂ [ {| l |}]]] ) } %1950~2'(= a17◂ [ a9◂ [ ]{| l |}] ) %1948~1'(= r ) %1947~0'(= r ) 
; #123 { 0(<2)◂{ 8'(= a8◂ [ a13◂ [ {| l |}]] ) 9'(= a2◂ [ a8◂ [ a13◂ [ {| l |}]]] ) } 2'(= a17◂ [ a9◂ [ ]{| l |}] ) } ⊢ 1(<2)◂{ 0(<2)◂{ 8'(= a8◂ [ a13◂ [ {| l |}]] ) 9'(= a2◂ [ a8◂ [ a13◂ [ {| l |}]]] ) } 2'(= a17◂ [ a9◂ [ ]{| l |}] ) }
;; rsp=3 , %1952~1(<2)◂{ 0(<2)◂{ 8'(= a8◂ [ a13◂ [ {| l |}]] ) 9'(= a2◂ [ a8◂ [ a13◂ [ {| l |}]]] ) } 2'(= a17◂ [ a9◂ [ ]{| l |}] ) } %1948~1'(= r ) %1947~0'(= r ) 
; #193 1(<2)◂{ 0(<2)◂{ 8'(= a8◂ [ a13◂ [ {| l |}]] ) 9'(= a2◂ [ a8◂ [ a13◂ [ {| l |}]]] ) } 2'(= a17◂ [ a9◂ [ ]{| l |}] ) } ⊢ 0(<2)◂1(<2)◂{ 0(<2)◂{ 8'(= a8◂ [ a13◂ [ {| l |}]] ) 9'(= a2◂ [ a8◂ [ a13◂ [ {| l |}]]] ) } 2'(= a17◂ [ a9◂ [ ]{| l |}] ) }
;; rsp=3 , %1953~0(<2)◂1(<2)◂{ 0(<2)◂{ 8'(= a8◂ [ a13◂ [ {| l |}]] ) 9'(= a2◂ [ a8◂ [ a13◂ [ {| l |}]]] ) } 2'(= a17◂ [ a9◂ [ ]{| l |}] ) } %1948~1'(= r ) %1947~0'(= r ) 
; #22 0(<2)◂1(<2)◂{ 0(<2)◂{ 8'(= a8◂ [ a13◂ [ {| l |}]] ) 9'(= a2◂ [ a8◂ [ a13◂ [ {| l |}]]] ) } 2'(= a17◂ [ a9◂ [ ]{| l |}] ) } ⊢ 0(<2)◂0(<2)◂1(<2)◂{ 0(<2)◂{ 8'(= a8◂ [ a13◂ [ {| l |}]] ) 9'(= a2◂ [ a8◂ [ a13◂ [ {| l |}]]] ) } 2'(= a17◂ [ a9◂ [ ]{| l |}] ) }
;; rsp=3 , %1954~0(<2)◂0(<2)◂1(<2)◂{ 0(<2)◂{ 8'(= a8◂ [ a13◂ [ {| l |}]] ) 9'(= a2◂ [ a8◂ [ a13◂ [ {| l |}]]] ) } 2'(= a17◂ [ a9◂ [ ]{| l |}] ) } %1948~1'(= r ) %1947~0'(= r ) 
; ∎ 0(<2)◂0(<2)◂1(<2)◂{ 0(<2)◂{ 8'(= a8◂ [ a13◂ [ {| l |}]] ) 9'(= a2◂ [ a8◂ [ a13◂ [ {| l |}]]] ) } 2'(= a17◂ [ a9◂ [ ]{| l |}] ) }
; .dlt.ptn 1'(= r )
; .dlt.ptn 0'(= r )
; .mov_ptn2 0(<2)◂0(<2)◂1(<2)◂{ 0(<2)◂{ 8'(= a8◂ [ a13◂ [ {| l |}]] ) 9'(= a2◂ [ a8◂ [ a13◂ [ {| l |}]]] ) } 2'(= a17◂ [ a9◂ [ ]{| l |}] ) } ⊢ 2'(= a3◂ [ a35◂ [ a18◂ [ a9◂ [ ]{| l |}]]] )
	mov r13,r8
; .mov_ptn 0(<2)◂0(<2)◂1(<2)◂{ 0(<2)◂{ 8'(= a8◂ [ a13◂ [ {| l |}]] ) 9'(= a2◂ [ a8◂ [ a13◂ [ {| l |}]]] ) } 0'(= a17◂ [ a9◂ [ ]{| l |}] ) } ⊢ 2'(= a3◂ [ a35◂ [ a18◂ [ a9◂ [ ]{| l |}]]] )
	mov rax,[SS_RCD_2_TOP]
	mov rsi,[rax] 
	mov QWORD [SS_RCD_2_TOP],rsi
	mov QWORD [rax],0
	mov r14,rax
	mov rax,[SS_RCD_2_TOP]
	mov rsi,[rax] 
	mov QWORD [SS_RCD_2_TOP],rsi
	mov QWORD [rax],0
	mov r9,rax
	mov rax,QWORD [rsp-8+8*3]
	mov rdi,r9
	mov QWORD [rdi+8+8*0],rax
	mov rax,QWORD [rsp-8+8*2]
	mov rdi,r9
	mov QWORD [rdi+8+8*1],rax
	mov rax,r9
	mov BYTE [rax+6],0
	mov rdi,r14
	mov QWORD [rdi+8+8*0],rax
	mov rax,r13
	mov rdi,r14
	mov QWORD [rdi+8+8*1],rax
	mov rax,r14
	mov BYTE [rax+6],1
	mov rdi,rax
	mov rax,[SS_LN_TOP]
	mov rsi,[rax]
	mov QWORD [SS_LN_TOP],rsi 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov rdi,rax
	mov rax,[SS_LN_TOP]
	mov rsi,[rax]
	mov QWORD [SS_LN_TOP],rsi 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	lea rsp,[rsp+8*3]
	jmp LB_3025
LB_3027:
;; ? 10'(= a35◂ [ a17◂ [ a9◂ [ ]{| l |}]] ) ⊢ 1(<2)◂10'(= a2◂ [ *{ rr{| l |}}] )
;; rsp=3 , %1949~10'(= a2◂ [ *{ rr{| l |}}] ) %1948~1'(= r ) %1947~0'(= r ) %1945~9'(= a2◂ [ a8◂ [ a13◂ [ {| l |}]]] ) %1944~8'(= a8◂ [ a13◂ [ {| l |}]] ) 
; #192 10'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 1(<2)◂10'(= a2◂ [ *{ rr{| l |}}] )
;; rsp=3 , %1955~1(<2)◂10'(= a2◂ [ *{ rr{| l |}}] ) %1948~1'(= r ) %1947~0'(= r ) %1945~9'(= a2◂ [ a8◂ [ a13◂ [ {| l |}]]] ) %1944~8'(= a8◂ [ a13◂ [ {| l |}]] ) 
; #22 1(<2)◂10'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 0(<2)◂1(<2)◂10'(= a2◂ [ *{ rr{| l |}}] )
;; rsp=3 , %1956~0(<2)◂1(<2)◂10'(= a2◂ [ *{ rr{| l |}}] ) %1948~1'(= r ) %1947~0'(= r ) %1945~9'(= a2◂ [ a8◂ [ a13◂ [ {| l |}]]] ) %1944~8'(= a8◂ [ a13◂ [ {| l |}]] ) 
; ∎ 0(<2)◂1(<2)◂10'(= a2◂ [ *{ rr{| l |}}] )
; .dlt.ptn 1'(= r )
; .dlt.ptn 0'(= r )
; .dlt.ptn 9'(= a2◂ [ a8◂ [ a13◂ [ {| l |}]]] )
;	.dlt adt ⊢ _  
; .dlt.ptn 8'(= a8◂ [ a13◂ [ {| l |}]] )
;	.dlt adt ⊢ _  
; .mov_ptn2 0(<2)◂1(<2)◂10'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 2'(= a3◂ [ a35◂ [ a18◂ [ a9◂ [ ]{| l |}]]] )
; .mov_ptn 0(<2)◂1(<2)◂10'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 2'(= a3◂ [ a35◂ [ a18◂ [ a9◂ [ ]{| l |}]]] )
	mov rax,QWORD [rsp-8+8*1]
	mov rdi,rax
	mov rax,[SS_LN_TOP]
	mov rsi,[rax]
	mov QWORD [SS_LN_TOP],rsi 
	mov QWORD [rax],0
	mov BYTE [rax+6],1
	mov QWORD [rax+8],rdi
	mov rdi,rax
	mov rax,[SS_LN_TOP]
	mov rsi,[rax]
	mov QWORD [SS_LN_TOP],rsi 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	lea rsp,[rsp+8*3]
	jmp LB_3025
LB_3025:
	movzx rax,BYTE [r8+6]
	cmp rax,0
	jnz LB_3003
	pop r14
	pop r9
	add rsp,8
	pop r13
	ret
LB_3003:
	pop rdi
	pop r9 
	pop r14
	pop r13
	ret
ETR_236:
	mov r9,0x0000_ffff_ffff_ffff
	and r9,[r13]
	call GRM_236
	ret
GRM_236:
	sub rsp,32
	mov QWORD [rsp+24],r13
	mov QWORD [rsp+16],r14 
	mov QWORD [rsp+8],r9
	jmp LB_3030
LB_3029:
	add r14,1 
LB_3030:
	cmp r14,r9
	jge LB_3031
	movzx rax,BYTE [r13+8+r14]
	cmp rax,9 
	jz LB_3029
	cmp rax,10 
	jz LB_3029
	cmp rax,32 
	jz LB_3029
LB_3031
	call GRM_217
	movzx rax,BYTE [r8+6]
	cmp rax,0
	jnz LB_3034
	jmp LB_3035
LB_3034:
	jmp LB_3032
LB_3035:
	lea rsp,[rsp-8*1]
	mov r8,[r8+8]
; .mov_ptn2 2'(= a35◂ [ *{ }] ) ⊢ 8'(= a35◂ [ *{ }] )
; .mov_ptn 2'(= a35◂ [ *{ }] ) ⊢ 8'(= a35◂ [ *{ }] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_3033
LB_3032:
	lea rsp,[rsp+8*0]
	jmp LB_3028
LB_3033:
	jmp LB_3037
LB_3036:
	add r14,1 
LB_3037:
	cmp r14,r9
	jge LB_3038
	movzx rax,BYTE [r13+8+r14]
	cmp rax,9 
	jz LB_3036
	cmp rax,10 
	jz LB_3036
	cmp rax,32 
	jz LB_3036
LB_3038
	lea rax,[r14+4]
	cmp rax,r9
	jg LB_3041
	jmp LB_3042
LB_3041:
	mov r8,unt_1
	jmp LB_3039
LB_3042:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],226
	jnz LB_3043
	cmp BYTE [rdi+1],136
	jnz LB_3043
	cmp BYTE [rdi+2],144
	jnz LB_3043
	cmp BYTE [rdi+3],46
	jnz LB_3043
	jmp LB_3044
LB_3043:
	mov r8,unt_1
	jmp LB_3039
LB_3044:
	add r14,4
	jmp LB_3040
LB_3039:
	lea rsp,[rsp+8*1]
	jmp LB_3028
LB_3040:
	jmp LB_3046
LB_3045:
	add r14,1 
LB_3046:
	cmp r14,r9
	jge LB_3047
	movzx rax,BYTE [r13+8+r14]
	cmp rax,9 
	jz LB_3045
	cmp rax,10 
	jz LB_3045
	cmp rax,32 
	jz LB_3045
LB_3047
	call GRM_238
	movzx rax,BYTE [r8+6]
	cmp rax,0
	jnz LB_3050
	jmp LB_3051
LB_3050:
	jmp LB_3048
LB_3051:
	lea rsp,[rsp-8*1]
	mov r8,[r8+8]
; .mov_ptn2 2'(= a35◂ [ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]] ) ⊢ 9'(= a35◂ [ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]] )
; .mov_ptn 2'(= a35◂ [ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]] ) ⊢ 9'(= a35◂ [ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_3049
LB_3048:
	lea rsp,[rsp+8*1]
	pop rdi
	pop r9 
	pop r14
	pop r13
	ret
LB_3049:
	jmp LB_3053
LB_3052:
	add r14,1 
LB_3053:
	cmp r14,r9
	jge LB_3054
	movzx rax,BYTE [r13+8+r14]
	cmp rax,9 
	jz LB_3052
	cmp rax,10 
	jz LB_3052
	cmp rax,32 
	jz LB_3052
LB_3054
	call GRM_234
	movzx rax,BYTE [r8+6]
	cmp rax,0
	jnz LB_3057
	jmp LB_3058
LB_3057:
	jmp LB_3055
LB_3058:
	lea rsp,[rsp-8*1]
	mov r8,[r8+8]
; .mov_ptn2 2'(= a35◂ [ a17◂ [ a9◂ [ ]{| l |}]] ) ⊢ 10'(= a35◂ [ a17◂ [ a9◂ [ ]{| l |}]] )
; .mov_ptn 2'(= a35◂ [ a17◂ [ a9◂ [ ]{| l |}]] ) ⊢ 10'(= a35◂ [ a17◂ [ a9◂ [ ]{| l |}]] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_3056
LB_3055:
	lea rsp,[rsp+8*2]
	pop rdi
	pop r9 
	pop r14
	pop r13
	ret
LB_3056:
	mov QWORD [rsp+8*3],r14
	mov r13,QWORD [rsp+16+8*3]
	mov r14,QWORD [rsp+8*3]
	jmp LB_3060
LB_3061: ; 194 { 0'(= a35◂ [ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]] ) 1'(= a35◂ [ a17◂ [ a9◂ [ ]{| l |}]] ) } ⊢ 0'(= a35◂ [ *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a17◂ [ a9◂ [ ]{| l |}]}] ) : ({ _t35◂_lst◂_t21◂_s8◂_t9 _t35◂_t17◂_s8◂_t9 }→_t35◂{ _lst◂_t21◂_s8◂_t9 _t17◂_s8◂_t9 })
;; rsp=0 , %1131~1'(= a35◂ [ a17◂ [ a9◂ [ ]{| l |}]] ) %1130~0'(= a35◂ [ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]] ) 
;; ? 0'(= a35◂ [ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]] ) ⊢ 0(<2)◂2'(= a2◂ [ a21◂ [ a9◂ [ ]{| l |}]] )
	mov rdi,r13
	movzx rax,BYTE [rdi+6]
	cmp rax,0
	jnz LB_3062
	mov rax,QWORD [rdi+8]
	mov r8,rax
;; rsp=0 , %1133~2'(= a2◂ [ a21◂ [ a9◂ [ ]{| l |}]] ) %1131~1'(= a35◂ [ a17◂ [ a9◂ [ ]{| l |}]] ) 
;; ? 1'(= a35◂ [ a17◂ [ a9◂ [ ]{| l |}]] ) ⊢ 0(<2)◂0'(= a17◂ [ a9◂ [ ]{| l |}] )
	mov rdi,r14
	movzx rax,BYTE [rdi+6]
	cmp rax,0
	jnz LB_3063
	mov rax,QWORD [rdi+8]
	mov r13,rax
;; rsp=0 , %1135~0'(= a17◂ [ a9◂ [ ]{| l |}] ) %1133~2'(= a2◂ [ a21◂ [ a9◂ [ ]{| l |}]] ) 
; #193 { 2'(= a2◂ [ a21◂ [ a9◂ [ ]{| l |}]] ) 0'(= a17◂ [ a9◂ [ ]{| l |}] ) } ⊢ 0(<2)◂{ 2'(= a2◂ [ a21◂ [ a9◂ [ ]{| l |}]] ) 0'(= a17◂ [ a9◂ [ ]{| l |}] ) }
;; rsp=0 , %1136~0(<2)◂{ 2'(= a2◂ [ a21◂ [ a9◂ [ ]{| l |}]] ) 0'(= a17◂ [ a9◂ [ ]{| l |}] ) } 
; ∎ 0(<2)◂{ 2'(= a2◂ [ a21◂ [ a9◂ [ ]{| l |}]] ) 0'(= a17◂ [ a9◂ [ ]{| l |}] ) }
; .mov_ptn2 0(<2)◂{ 2'(= a2◂ [ a21◂ [ a9◂ [ ]{| l |}]] ) 0'(= a17◂ [ a9◂ [ ]{| l |}] ) } ⊢ 0'(= a35◂ [ *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a17◂ [ a9◂ [ ]{| l |}]}] )
	mov r14,r13
; .mov_ptn 0(<2)◂{ 2'(= a2◂ [ a21◂ [ a9◂ [ ]{| l |}]] ) 1'(= a17◂ [ a9◂ [ ]{| l |}] ) } ⊢ 0'(= a35◂ [ *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a17◂ [ a9◂ [ ]{| l |}]}] )
	mov rax,[SS_RCD_2_TOP]
	mov rsi,[rax] 
	mov QWORD [SS_RCD_2_TOP],rsi
	mov QWORD [rax],0
	mov r9,rax
	mov rax,r8
	mov rdi,r9
	mov QWORD [rdi+8+8*0],rax
	mov rax,r14
	mov rdi,r9
	mov QWORD [rdi+8+8*1],rax
	mov rax,r9
	mov BYTE [rax+6],0
	mov r13,rax
	ret
LB_3063:
;; ? 1'(= a35◂ [ a17◂ [ a9◂ [ ]{| l |}]] ) ⊢ 1(<2)◂1'(= a2◂ [ *{ rr{| l |}}] )
;; rsp=0 , %1134~1'(= a2◂ [ *{ rr{| l |}}] ) %1133~2'(= a2◂ [ a21◂ [ a9◂ [ ]{| l |}]] ) 
; #192 1'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 1(<2)◂1'(= a2◂ [ *{ rr{| l |}}] )
;; rsp=0 , %1137~1(<2)◂1'(= a2◂ [ *{ rr{| l |}}] ) %1133~2'(= a2◂ [ a21◂ [ a9◂ [ ]{| l |}]] ) 
; ∎ 1(<2)◂1'(= a2◂ [ *{ rr{| l |}}] )
; .dlt.ptn 2'(= a2◂ [ a21◂ [ a9◂ [ ]{| l |}]] )
;	.dlt adt ⊢ _  
; .mov_ptn2 1(<2)◂1'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 0'(= a35◂ [ *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a17◂ [ a9◂ [ ]{| l |}]}] )
; .mov_ptn 1(<2)◂1'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 0'(= a35◂ [ *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a17◂ [ a9◂ [ ]{| l |}]}] )
	mov rax,r14
	mov rdi,rax
	mov rax,[SS_LN_TOP]
	mov rsi,[rax]
	mov QWORD [SS_LN_TOP],rsi 
	mov QWORD [rax],0
	mov BYTE [rax+6],1
	mov QWORD [rax+8],rdi
	mov r13,rax
	ret
LB_3062:
;; ? 0'(= a35◂ [ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]] ) ⊢ 1(<2)◂0'(= a2◂ [ *{ rr{| l |}}] )
;; rsp=0 , %1132~0'(= a2◂ [ *{ rr{| l |}}] ) %1131~1'(= a35◂ [ a17◂ [ a9◂ [ ]{| l |}]] ) 
;; ? 1'(= a35◂ [ a17◂ [ a9◂ [ ]{| l |}]] ) ⊢ 0(<2)◂2'(= a17◂ [ a9◂ [ ]{| l |}] )
	mov rdi,r14
	movzx rax,BYTE [rdi+6]
	cmp rax,0
	jnz LB_3064
	mov rax,QWORD [rdi+8]
	mov r8,rax
;; rsp=0 , %1139~2'(= a17◂ [ a9◂ [ ]{| l |}] ) %1132~0'(= a2◂ [ *{ rr{| l |}}] ) 
; #192 0'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 1(<2)◂0'(= a2◂ [ *{ rr{| l |}}] )
;; rsp=0 , %1140~1(<2)◂0'(= a2◂ [ *{ rr{| l |}}] ) %1139~2'(= a17◂ [ a9◂ [ ]{| l |}] ) 
; ∎ 1(<2)◂0'(= a2◂ [ *{ rr{| l |}}] )
; .dlt.ptn 2'(= a17◂ [ a9◂ [ ]{| l |}] )
;	.dlt adt ⊢ _  
; .mov_ptn2 1(<2)◂0'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 0'(= a35◂ [ *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a17◂ [ a9◂ [ ]{| l |}]}] )
	mov r14,r13
; .mov_ptn 1(<2)◂1'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 0'(= a35◂ [ *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a17◂ [ a9◂ [ ]{| l |}]}] )
	mov rax,r14
	mov rdi,rax
	mov rax,[SS_LN_TOP]
	mov rsi,[rax]
	mov QWORD [SS_LN_TOP],rsi 
	mov QWORD [rax],0
	mov BYTE [rax+6],1
	mov QWORD [rax+8],rdi
	mov r13,rax
	ret
LB_3064:
;; ? 1'(= a35◂ [ a17◂ [ a9◂ [ ]{| l |}]] ) ⊢ 1(<2)◂1'(= a2◂ [ *{ rr{| l |}}] )
;; rsp=0 , %1138~1'(= a2◂ [ *{ rr{| l |}}] ) %1132~0'(= a2◂ [ *{ rr{| l |}}] ) 
; rsp_d=0, #53 { 0'(= a2◂ [ *{ rr{| l |}}] ) 1'(= a2◂ [ *{ rr{| l |}}] ) } ⊢ 0'(= a2◂ [ *{ rr{| l |}}] )
; .mov_ptn2 { 0'(= a2◂ [ *{ rr{| l |}}] ) 1'(= a2◂ [ *{ rr{| l |}}] ) } ⊢ { 0'(= a2◂ [ *{ rr{| l |}}] ) 1'(= a2◂ [ *{ rr{| l |}}] ) }
	call LB_1732

;; rsp=0 , %1141~0'(= a2◂ [ *{ rr{| l |}}] ) 
; #192 0'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 1(<2)◂0'(= a2◂ [ *{ rr{| l |}}] )
;; rsp=0 , %1142~1(<2)◂0'(= a2◂ [ *{ rr{| l |}}] ) 
; ∎ 1(<2)◂0'(= a2◂ [ *{ rr{| l |}}] )
; .mov_ptn2 1(<2)◂0'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 0'(= a35◂ [ *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a17◂ [ a9◂ [ ]{| l |}]}] )
	mov r14,r13
; .mov_ptn 1(<2)◂1'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 0'(= a35◂ [ *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a17◂ [ a9◂ [ ]{| l |}]}] )
	mov rax,r14
	mov rdi,rax
	mov rax,[SS_LN_TOP]
	mov rsi,[rax]
	mov QWORD [SS_LN_TOP],rsi 
	mov QWORD [rax],0
	mov BYTE [rax+6],1
	mov QWORD [rax+8],rdi
	mov r13,rax
	ret
LB_3060
;; rsp=3 , %1961~1'(= r ) %1960~0'(= r ) %1959~10'(= a35◂ [ a17◂ [ a9◂ [ ]{| l |}]] ) %1958~9'(= a35◂ [ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]] ) %1957~8'(= a35◂ [ *{ }] ) 
; rsp_d=0, #194 { 9'(= a35◂ [ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]] ) 10'(= a35◂ [ a17◂ [ a9◂ [ ]{| l |}]] ) } ⊢ 2'(= a35◂ [ *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a17◂ [ a9◂ [ ]{| l |}]}] )
	lea rsp,[rsp-8*2]
	mov QWORD [rsp+8*0],r13
	mov QWORD [rsp+8*1],r14
; .mov_ptn2 { 9'(= a35◂ [ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]] ) 10'(= a35◂ [ a17◂ [ a9◂ [ ]{| l |}]] ) } ⊢ { 0'(= a35◂ [ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]] ) 1'(= a35◂ [ a17◂ [ a9◂ [ ]{| l |}]] ) }
; .mov_ptn 10'(= a35◂ [ a17◂ [ a9◂ [ ]{| l |}]] ) ⊢ 1'(= a35◂ [ a17◂ [ a9◂ [ ]{| l |}]] )
	mov rax,QWORD [rsp-8+8*3]
	mov r14,rax
; .mov_ptn 9'(= a35◂ [ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]] ) ⊢ 0'(= a35◂ [ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]] )
	mov rax,QWORD [rsp-8+8*4]
	mov r13,rax
	call LB_3061

	mov r14,QWORD [rsp-8+8*2]
	mov rax,QWORD [rsp-8+8*1]
	mov r8,r13
	mov r13,rax
	lea rsp,[rsp+8*4]
;; rsp=1 , %1962~2'(= a35◂ [ *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a17◂ [ a9◂ [ ]{| l |}]}] ) %1961~1'(= r ) %1960~0'(= r ) %1957~8'(= a35◂ [ *{ }] ) 
;; ? 2'(= a35◂ [ *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a17◂ [ a9◂ [ ]{| l |}]}] ) ⊢ 0(<2)◂{ 3'(= a2◂ [ a21◂ [ a9◂ [ ]{| l |}]] ) 4'(= a17◂ [ a9◂ [ ]{| l |}] ) }
	mov rdi,r8
	movzx rax,BYTE [rdi+6]
	cmp rax,0
	jnz LB_3065
	mov rdi,r8
	mov rdi,QWORD [rdi+8+8*0]
	mov r9,rdi
	mov rdi,r8
	mov rdi,QWORD [rdi+8+8*1]
	mov r10,rdi
;; rsp=1 , %1965~4'(= a17◂ [ a9◂ [ ]{| l |}] ) %1964~3'(= a2◂ [ a21◂ [ a9◂ [ ]{| l |}]] ) %1961~1'(= r ) %1960~0'(= r ) %1957~8'(= a35◂ [ *{ }] ) 
; #116 4'(= a17◂ [ a9◂ [ ]{| l |}] ) ⊢ 2(<3)◂4'(= a17◂ [ a9◂ [ ]{| l |}] )
;; rsp=1 , %1966~2(<3)◂4'(= a17◂ [ a9◂ [ ]{| l |}] ) %1964~3'(= a2◂ [ a21◂ [ a9◂ [ ]{| l |}]] ) %1961~1'(= r ) %1960~0'(= r ) %1957~8'(= a35◂ [ *{ }] ) 
; #49 { 3'(= a2◂ [ a21◂ [ a9◂ [ ]{| l |}]] ) 2(<3)◂4'(= a17◂ [ a9◂ [ ]{| l |}] ) } ⊢ 1(<2)◂{ 3'(= a2◂ [ a21◂ [ a9◂ [ ]{| l |}]] ) 2(<3)◂4'(= a17◂ [ a9◂ [ ]{| l |}] ) }
;; rsp=1 , %1967~1(<2)◂{ 3'(= a2◂ [ a21◂ [ a9◂ [ ]{| l |}]] ) 2(<3)◂4'(= a17◂ [ a9◂ [ ]{| l |}] ) } %1961~1'(= r ) %1960~0'(= r ) %1957~8'(= a35◂ [ *{ }] ) 
; #193 1(<2)◂{ 3'(= a2◂ [ a21◂ [ a9◂ [ ]{| l |}]] ) 2(<3)◂4'(= a17◂ [ a9◂ [ ]{| l |}] ) } ⊢ 0(<2)◂1(<2)◂{ 3'(= a2◂ [ a21◂ [ a9◂ [ ]{| l |}]] ) 2(<3)◂4'(= a17◂ [ a9◂ [ ]{| l |}] ) }
;; rsp=1 , %1968~0(<2)◂1(<2)◂{ 3'(= a2◂ [ a21◂ [ a9◂ [ ]{| l |}]] ) 2(<3)◂4'(= a17◂ [ a9◂ [ ]{| l |}] ) } %1961~1'(= r ) %1960~0'(= r ) %1957~8'(= a35◂ [ *{ }] ) 
; #22 0(<2)◂1(<2)◂{ 3'(= a2◂ [ a21◂ [ a9◂ [ ]{| l |}]] ) 2(<3)◂4'(= a17◂ [ a9◂ [ ]{| l |}] ) } ⊢ 0(<2)◂0(<2)◂1(<2)◂{ 3'(= a2◂ [ a21◂ [ a9◂ [ ]{| l |}]] ) 2(<3)◂4'(= a17◂ [ a9◂ [ ]{| l |}] ) }
;; rsp=1 , %1969~0(<2)◂0(<2)◂1(<2)◂{ 3'(= a2◂ [ a21◂ [ a9◂ [ ]{| l |}]] ) 2(<3)◂4'(= a17◂ [ a9◂ [ ]{| l |}] ) } %1961~1'(= r ) %1960~0'(= r ) %1957~8'(= a35◂ [ *{ }] ) 
; ∎ 0(<2)◂0(<2)◂1(<2)◂{ 3'(= a2◂ [ a21◂ [ a9◂ [ ]{| l |}]] ) 2(<3)◂4'(= a17◂ [ a9◂ [ ]{| l |}] ) }
; .dlt.ptn 1'(= r )
; .dlt.ptn 0'(= r )
; .dlt.ptn 8'(= a35◂ [ *{ }] )
;	.dlt adt ⊢ _  
; .mov_ptn2 0(<2)◂0(<2)◂1(<2)◂{ 3'(= a2◂ [ a21◂ [ a9◂ [ ]{| l |}]] ) 2(<3)◂4'(= a17◂ [ a9◂ [ ]{| l |}] ) } ⊢ 2'(= a3◂ [ a35◂ [ a7◂ [ *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}]]] )
; .mov_ptn 0(<2)◂0(<2)◂1(<2)◂{ 3'(= a2◂ [ a21◂ [ a9◂ [ ]{| l |}]] ) 2(<3)◂4'(= a17◂ [ a9◂ [ ]{| l |}] ) } ⊢ 2'(= a3◂ [ a35◂ [ a7◂ [ *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}]]] )
	mov rax,[SS_RCD_2_TOP]
	mov rsi,[rax] 
	mov QWORD [SS_RCD_2_TOP],rsi
	mov QWORD [rax],0
	mov r13,rax
	mov rax,r9
	mov rdi,r13
	mov QWORD [rdi+8+8*0],rax
	mov rax,r10
	mov rdi,rax
	mov rax,[SS_LN_TOP]
	mov rsi,[rax]
	mov QWORD [SS_LN_TOP],rsi 
	mov QWORD [rax],0
	mov BYTE [rax+6],2
	mov QWORD [rax+8],rdi
	mov rdi,r13
	mov QWORD [rdi+8+8*1],rax
	mov rax,r13
	mov BYTE [rax+6],1
	mov rdi,rax
	mov rax,[SS_LN_TOP]
	mov rsi,[rax]
	mov QWORD [SS_LN_TOP],rsi 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov rdi,rax
	mov rax,[SS_LN_TOP]
	mov rsi,[rax]
	mov QWORD [SS_LN_TOP],rsi 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	lea rsp,[rsp+8*1]
	jmp LB_3059
LB_3065:
;; ? 2'(= a35◂ [ *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a17◂ [ a9◂ [ ]{| l |}]}] ) ⊢ 1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] )
;; rsp=1 , %1963~2'(= a2◂ [ *{ rr{| l |}}] ) %1961~1'(= r ) %1960~0'(= r ) %1957~8'(= a35◂ [ *{ }] ) 
; #192 2'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] )
;; rsp=1 , %1970~1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] ) %1961~1'(= r ) %1960~0'(= r ) %1957~8'(= a35◂ [ *{ }] ) 
; #22 1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 0(<2)◂1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] )
;; rsp=1 , %1971~0(<2)◂1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] ) %1961~1'(= r ) %1960~0'(= r ) %1957~8'(= a35◂ [ *{ }] ) 
; ∎ 0(<2)◂1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] )
; .dlt.ptn 1'(= r )
; .dlt.ptn 0'(= r )
; .dlt.ptn 8'(= a35◂ [ *{ }] )
;	.dlt adt ⊢ _  
; .mov_ptn2 0(<2)◂1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 2'(= a3◂ [ a35◂ [ a7◂ [ *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}]]] )
	mov r13,r8
; .mov_ptn 0(<2)◂1(<2)◂0'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 2'(= a3◂ [ a35◂ [ a7◂ [ *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}]]] )
	mov rax,r13
	mov rdi,rax
	mov rax,[SS_LN_TOP]
	mov rsi,[rax]
	mov QWORD [SS_LN_TOP],rsi 
	mov QWORD [rax],0
	mov BYTE [rax+6],1
	mov QWORD [rax+8],rdi
	mov rdi,rax
	mov rax,[SS_LN_TOP]
	mov rsi,[rax]
	mov QWORD [SS_LN_TOP],rsi 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	lea rsp,[rsp+8*1]
	jmp LB_3059
LB_3059:
	movzx rax,BYTE [r8+6]
	cmp rax,0
	jnz LB_3028
	pop r14
	pop r9
	add rsp,8
	pop r13
	ret
LB_3028:
	jmp LB_3068
LB_3067:
	add r14,1 
LB_3068:
	cmp r14,r9
	jge LB_3069
	movzx rax,BYTE [r13+8+r14]
	cmp rax,9 
	jz LB_3067
	cmp rax,10 
	jz LB_3067
	cmp rax,32 
	jz LB_3067
LB_3069
	call GRM_217
	movzx rax,BYTE [r8+6]
	cmp rax,0
	jnz LB_3072
	jmp LB_3073
LB_3072:
	jmp LB_3070
LB_3073:
	lea rsp,[rsp-8*1]
	mov r8,[r8+8]
; .mov_ptn2 2'(= a35◂ [ *{ }] ) ⊢ 8'(= a35◂ [ *{ }] )
; .mov_ptn 2'(= a35◂ [ *{ }] ) ⊢ 8'(= a35◂ [ *{ }] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_3071
LB_3070:
	lea rsp,[rsp+8*0]
	jmp LB_3066
LB_3071:
	jmp LB_3075
LB_3074:
	add r14,1 
LB_3075:
	cmp r14,r9
	jge LB_3076
	movzx rax,BYTE [r13+8+r14]
	cmp rax,9 
	jz LB_3074
	cmp rax,10 
	jz LB_3074
	cmp rax,32 
	jz LB_3074
LB_3076
	lea rax,[r14+3]
	cmp rax,r9
	jg LB_3079
	jmp LB_3080
LB_3079:
	mov r8,unt_1
	jmp LB_3077
LB_3080:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],226
	jnz LB_3081
	cmp BYTE [rdi+1],136
	jnz LB_3081
	cmp BYTE [rdi+2],144
	jnz LB_3081
	jmp LB_3082
LB_3081:
	mov r8,unt_1
	jmp LB_3077
LB_3082:
	add r14,3
	jmp LB_3078
LB_3077:
	lea rsp,[rsp+8*1]
	jmp LB_3066
LB_3078:
	jmp LB_3084
LB_3083:
	add r14,1 
LB_3084:
	cmp r14,r9
	jge LB_3085
	movzx rax,BYTE [r13+8+r14]
	cmp rax,9 
	jz LB_3083
	cmp rax,10 
	jz LB_3083
	cmp rax,32 
	jz LB_3083
LB_3085
	call GRM_238
	movzx rax,BYTE [r8+6]
	cmp rax,0
	jnz LB_3088
	jmp LB_3089
LB_3088:
	jmp LB_3086
LB_3089:
	lea rsp,[rsp-8*1]
	mov r8,[r8+8]
; .mov_ptn2 2'(= a35◂ [ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]] ) ⊢ 9'(= a35◂ [ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]] )
; .mov_ptn 2'(= a35◂ [ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]] ) ⊢ 9'(= a35◂ [ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_3087
LB_3086:
	lea rsp,[rsp+8*1]
	jmp LB_3066
LB_3087:
	jmp LB_3091
LB_3090:
	add r14,1 
LB_3091:
	cmp r14,r9
	jge LB_3092
	movzx rax,BYTE [r13+8+r14]
	cmp rax,9 
	jz LB_3090
	cmp rax,10 
	jz LB_3090
	cmp rax,32 
	jz LB_3090
LB_3092
	call GRM_234
	movzx rax,BYTE [r8+6]
	cmp rax,0
	jnz LB_3095
	jmp LB_3096
LB_3095:
	jmp LB_3093
LB_3096:
	lea rsp,[rsp-8*1]
	mov r8,[r8+8]
; .mov_ptn2 2'(= a35◂ [ a17◂ [ a9◂ [ ]{| l |}]] ) ⊢ 10'(= a35◂ [ a17◂ [ a9◂ [ ]{| l |}]] )
; .mov_ptn 2'(= a35◂ [ a17◂ [ a9◂ [ ]{| l |}]] ) ⊢ 10'(= a35◂ [ a17◂ [ a9◂ [ ]{| l |}]] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_3094
LB_3093:
	lea rsp,[rsp+8*2]
	jmp LB_3066
LB_3094:
	jmp LB_3098
LB_3097:
	add r14,1 
LB_3098:
	cmp r14,r9
	jge LB_3099
	movzx rax,BYTE [r13+8+r14]
	cmp rax,9 
	jz LB_3097
	cmp rax,10 
	jz LB_3097
	cmp rax,32 
	jz LB_3097
LB_3099
	call GRM_236
	movzx rax,BYTE [r8+6]
	cmp rax,0
	jnz LB_3102
	jmp LB_3103
LB_3102:
	jmp LB_3100
LB_3103:
	lea rsp,[rsp-8*1]
	mov r8,[r8+8]
; .mov_ptn2 2'(= a35◂ [ a7◂ [ *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}]] ) ⊢ 11'(= a35◂ [ a7◂ [ *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}]] )
; .mov_ptn 2'(= a35◂ [ a7◂ [ *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}]] ) ⊢ 11'(= a35◂ [ a7◂ [ *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}]] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_3101
LB_3100:
	lea rsp,[rsp+8*3]
	jmp LB_3066
LB_3101:
	mov QWORD [rsp+8*4],r14
	mov r13,QWORD [rsp+16+8*4]
	mov r14,QWORD [rsp+8*4]
	jmp LB_3105
LB_3106: ; 194 { 0'(= a35◂ [ *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a17◂ [ a9◂ [ ]{| l |}]}] ) 1'(= a35◂ [ a7◂ [ *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}]] ) } ⊢ 0'(= a35◂ [ *{ *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a17◂ [ a9◂ [ ]{| l |}]}a7◂ [ *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}]}] ) : ({ _t35◂{ _lst◂_t21◂_s8◂_t9 _t17◂_s8◂_t9 } _t35◂_t7◂{ _lst◂_t21◂_s8◂_t9 _t20◂_s8◂_t9 } }→_t35◂{ { _lst◂_t21◂_s8◂_t9 _t17◂_s8◂_t9 } _t7◂{ _lst◂_t21◂_s8◂_t9 _t20◂_s8◂_t9 } })
;; rsp=0 , %1131~1'(= a35◂ [ a7◂ [ *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}]] ) %1130~0'(= a35◂ [ *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a17◂ [ a9◂ [ ]{| l |}]}] ) 
;; ? 0'(= a35◂ [ *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a17◂ [ a9◂ [ ]{| l |}]}] ) ⊢ 0(<2)◂0'(= *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a17◂ [ a9◂ [ ]{| l |}]} )
	mov rdi,r13
	movzx rax,BYTE [rdi+6]
	cmp rax,0
	jnz LB_3107
;; rsp=0 , %1133~0'(= *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a17◂ [ a9◂ [ ]{| l |}]} ) %1131~1'(= a35◂ [ a7◂ [ *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}]] ) 
;; ? 1'(= a35◂ [ a7◂ [ *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}]] ) ⊢ 0(<2)◂2'(= a7◂ [ *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}] )
	mov rdi,r14
	movzx rax,BYTE [rdi+6]
	cmp rax,0
	jnz LB_3108
	mov rax,QWORD [rdi+8]
	mov r8,rax
;; rsp=0 , %1135~2'(= a7◂ [ *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}] ) %1133~0'(= *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a17◂ [ a9◂ [ ]{| l |}]} ) 
; #193 { 0'(= *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a17◂ [ a9◂ [ ]{| l |}]} ) 2'(= a7◂ [ *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}] ) } ⊢ 0(<2)◂{ 0'(= *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a17◂ [ a9◂ [ ]{| l |}]} ) 2'(= a7◂ [ *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}] ) }
;; rsp=0 , %1136~0(<2)◂{ 0'(= *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a17◂ [ a9◂ [ ]{| l |}]} ) 2'(= a7◂ [ *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}] ) } 
; ∎ 0(<2)◂{ 0'(= *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a17◂ [ a9◂ [ ]{| l |}]} ) 2'(= a7◂ [ *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}] ) }
; .mov_ptn2 0(<2)◂{ 0'(= *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a17◂ [ a9◂ [ ]{| l |}]} ) 2'(= a7◂ [ *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}] ) } ⊢ 0'(= a35◂ [ *{ *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a17◂ [ a9◂ [ ]{| l |}]}a7◂ [ *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}]}] )
	mov r14,r13
; .mov_ptn 0(<2)◂{ 1'(= *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a17◂ [ a9◂ [ ]{| l |}]} ) 2'(= a7◂ [ *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}] ) } ⊢ 0'(= a35◂ [ *{ *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a17◂ [ a9◂ [ ]{| l |}]}a7◂ [ *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}]}] )
	mov rax,[SS_RCD_2_TOP]
	mov rsi,[rax] 
	mov QWORD [SS_RCD_2_TOP],rsi
	mov QWORD [rax],0
	mov r9,rax
	mov rax,r14
	mov rdi,r9
	mov QWORD [rdi+8+8*0],rax
	mov rax,r8
	mov rdi,r9
	mov QWORD [rdi+8+8*1],rax
	mov rax,r9
	mov BYTE [rax+6],0
	mov r13,rax
	ret
LB_3108:
;; ? 1'(= a35◂ [ a7◂ [ *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}]] ) ⊢ 1(<2)◂1'(= a2◂ [ *{ rr{| l |}}] )
;; rsp=0 , %1134~1'(= a2◂ [ *{ rr{| l |}}] ) %1133~0'(= *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a17◂ [ a9◂ [ ]{| l |}]} ) 
; #192 1'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 1(<2)◂1'(= a2◂ [ *{ rr{| l |}}] )
;; rsp=0 , %1137~1(<2)◂1'(= a2◂ [ *{ rr{| l |}}] ) %1133~0'(= *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a17◂ [ a9◂ [ ]{| l |}]} ) 
; ∎ 1(<2)◂1'(= a2◂ [ *{ rr{| l |}}] )
; .dlt.ptn 0'(= *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a17◂ [ a9◂ [ ]{| l |}]} )
; .dlt.hp rcd
; .mov_ptn2 1(<2)◂1'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 0'(= a35◂ [ *{ *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a17◂ [ a9◂ [ ]{| l |}]}a7◂ [ *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}]}] )
; .mov_ptn 1(<2)◂1'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 0'(= a35◂ [ *{ *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a17◂ [ a9◂ [ ]{| l |}]}a7◂ [ *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}]}] )
	mov rax,r14
	mov rdi,rax
	mov rax,[SS_LN_TOP]
	mov rsi,[rax]
	mov QWORD [SS_LN_TOP],rsi 
	mov QWORD [rax],0
	mov BYTE [rax+6],1
	mov QWORD [rax+8],rdi
	mov r13,rax
	ret
LB_3107:
;; ? 0'(= a35◂ [ *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a17◂ [ a9◂ [ ]{| l |}]}] ) ⊢ 1(<2)◂0'(= a2◂ [ *{ rr{| l |}}] )
;; rsp=0 , %1132~0'(= a2◂ [ *{ rr{| l |}}] ) %1131~1'(= a35◂ [ a7◂ [ *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}]] ) 
;; ? 1'(= a35◂ [ a7◂ [ *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}]] ) ⊢ 0(<2)◂2'(= a7◂ [ *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}] )
	mov rdi,r14
	movzx rax,BYTE [rdi+6]
	cmp rax,0
	jnz LB_3109
	mov rax,QWORD [rdi+8]
	mov r8,rax
;; rsp=0 , %1139~2'(= a7◂ [ *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}] ) %1132~0'(= a2◂ [ *{ rr{| l |}}] ) 
; #192 0'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 1(<2)◂0'(= a2◂ [ *{ rr{| l |}}] )
;; rsp=0 , %1140~1(<2)◂0'(= a2◂ [ *{ rr{| l |}}] ) %1139~2'(= a7◂ [ *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}] ) 
; ∎ 1(<2)◂0'(= a2◂ [ *{ rr{| l |}}] )
; .dlt.ptn 2'(= a7◂ [ *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}] )
;	.dlt adt ⊢ _  
; .mov_ptn2 1(<2)◂0'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 0'(= a35◂ [ *{ *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a17◂ [ a9◂ [ ]{| l |}]}a7◂ [ *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}]}] )
	mov r14,r13
; .mov_ptn 1(<2)◂1'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 0'(= a35◂ [ *{ *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a17◂ [ a9◂ [ ]{| l |}]}a7◂ [ *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}]}] )
	mov rax,r14
	mov rdi,rax
	mov rax,[SS_LN_TOP]
	mov rsi,[rax]
	mov QWORD [SS_LN_TOP],rsi 
	mov QWORD [rax],0
	mov BYTE [rax+6],1
	mov QWORD [rax+8],rdi
	mov r13,rax
	ret
LB_3109:
;; ? 1'(= a35◂ [ a7◂ [ *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}]] ) ⊢ 1(<2)◂1'(= a2◂ [ *{ rr{| l |}}] )
;; rsp=0 , %1138~1'(= a2◂ [ *{ rr{| l |}}] ) %1132~0'(= a2◂ [ *{ rr{| l |}}] ) 
; rsp_d=0, #53 { 0'(= a2◂ [ *{ rr{| l |}}] ) 1'(= a2◂ [ *{ rr{| l |}}] ) } ⊢ 0'(= a2◂ [ *{ rr{| l |}}] )
; .mov_ptn2 { 0'(= a2◂ [ *{ rr{| l |}}] ) 1'(= a2◂ [ *{ rr{| l |}}] ) } ⊢ { 0'(= a2◂ [ *{ rr{| l |}}] ) 1'(= a2◂ [ *{ rr{| l |}}] ) }
	call LB_1732

;; rsp=0 , %1141~0'(= a2◂ [ *{ rr{| l |}}] ) 
; #192 0'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 1(<2)◂0'(= a2◂ [ *{ rr{| l |}}] )
;; rsp=0 , %1142~1(<2)◂0'(= a2◂ [ *{ rr{| l |}}] ) 
; ∎ 1(<2)◂0'(= a2◂ [ *{ rr{| l |}}] )
; .mov_ptn2 1(<2)◂0'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 0'(= a35◂ [ *{ *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a17◂ [ a9◂ [ ]{| l |}]}a7◂ [ *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}]}] )
	mov r14,r13
; .mov_ptn 1(<2)◂1'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 0'(= a35◂ [ *{ *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a17◂ [ a9◂ [ ]{| l |}]}a7◂ [ *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}]}] )
	mov rax,r14
	mov rdi,rax
	mov rax,[SS_LN_TOP]
	mov rsi,[rax]
	mov QWORD [SS_LN_TOP],rsi 
	mov QWORD [rax],0
	mov BYTE [rax+6],1
	mov QWORD [rax+8],rdi
	mov r13,rax
	ret
LB_3105
;; rsp=4 , %1977~1'(= r ) %1976~0'(= r ) %1975~11'(= a35◂ [ a7◂ [ *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}]] ) %1974~10'(= a35◂ [ a17◂ [ a9◂ [ ]{| l |}]] ) %1973~9'(= a35◂ [ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]] ) %1972~8'(= a35◂ [ *{ }] ) 
; rsp_d=0, #194 { 9'(= a35◂ [ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]] ) 10'(= a35◂ [ a17◂ [ a9◂ [ ]{| l |}]] ) } ⊢ 2'(= a35◂ [ *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a17◂ [ a9◂ [ ]{| l |}]}] )
	lea rsp,[rsp-8*2]
	mov QWORD [rsp+8*0],r13
	mov QWORD [rsp+8*1],r14
; .mov_ptn2 { 9'(= a35◂ [ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]] ) 10'(= a35◂ [ a17◂ [ a9◂ [ ]{| l |}]] ) } ⊢ { 0'(= a35◂ [ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]] ) 1'(= a35◂ [ a17◂ [ a9◂ [ ]{| l |}]] ) }
; .mov_ptn 10'(= a35◂ [ a17◂ [ a9◂ [ ]{| l |}]] ) ⊢ 1'(= a35◂ [ a17◂ [ a9◂ [ ]{| l |}]] )
	mov rax,QWORD [rsp-8+8*4]
	mov r14,rax
; .mov_ptn 9'(= a35◂ [ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]] ) ⊢ 0'(= a35◂ [ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]] )
	mov rax,QWORD [rsp-8+8*5]
	mov r13,rax
	call LB_3061

	mov r14,QWORD [rsp-8+8*2]
	mov rax,QWORD [rsp-8+8*1]
	mov r8,r13
	mov r13,rax
	lea rsp,[rsp+8*2]
;; rsp=4 , %1978~2'(= a35◂ [ *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a17◂ [ a9◂ [ ]{| l |}]}] ) %1977~1'(= r ) %1976~0'(= r ) %1975~11'(= a35◂ [ a7◂ [ *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}]] ) %1972~8'(= a35◂ [ *{ }] ) 
; rsp_d=0, #194 { 2'(= a35◂ [ *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a17◂ [ a9◂ [ ]{| l |}]}] ) 11'(= a35◂ [ a7◂ [ *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}]] ) } ⊢ 2'(= a35◂ [ *{ *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a17◂ [ a9◂ [ ]{| l |}]}a7◂ [ *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}]}] )
	lea rsp,[rsp-8*2]
	mov QWORD [rsp+8*0],r13
	mov QWORD [rsp+8*1],r14
; .mov_ptn2 { 2'(= a35◂ [ *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a17◂ [ a9◂ [ ]{| l |}]}] ) 11'(= a35◂ [ a7◂ [ *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}]] ) } ⊢ { 0'(= a35◂ [ *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a17◂ [ a9◂ [ ]{| l |}]}] ) 1'(= a35◂ [ a7◂ [ *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}]] ) }
; .mov_ptn 11'(= a35◂ [ a7◂ [ *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}]] ) ⊢ 1'(= a35◂ [ a7◂ [ *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}]] )
	mov rax,QWORD [rsp-8+8*3]
	mov r14,rax
; .mov_ptn 2'(= a35◂ [ *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a17◂ [ a9◂ [ ]{| l |}]}] ) ⊢ 0'(= a35◂ [ *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a17◂ [ a9◂ [ ]{| l |}]}] )
	mov rax,r8
	mov r13,rax
	call LB_3106

	mov r14,QWORD [rsp-8+8*2]
	mov rax,QWORD [rsp-8+8*1]
	mov r8,r13
	mov r13,rax
	lea rsp,[rsp+8*5]
;; rsp=1 , %1979~2'(= a35◂ [ *{ *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a17◂ [ a9◂ [ ]{| l |}]}a7◂ [ *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}]}] ) %1977~1'(= r ) %1976~0'(= r ) %1972~8'(= a35◂ [ *{ }] ) 
;; ? 2'(= a35◂ [ *{ *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a17◂ [ a9◂ [ ]{| l |}]}a7◂ [ *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}]}] ) ⊢ 0(<2)◂{ { 4'(= a2◂ [ a21◂ [ a9◂ [ ]{| l |}]] ) 5'(= a17◂ [ a9◂ [ ]{| l |}] ) } 6'(= a7◂ [ *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}] ) }
	mov rdi,r8
	movzx rax,BYTE [rdi+6]
	cmp rax,0
	jnz LB_3110
	mov rdi,r8
	mov rdi,QWORD [rdi+8+8*0]
	mov r9,rdi
	mov rdi,r9
	mov rdi,QWORD [rdi+8+8*0]
	mov r10,rdi
	mov rdi,r9
	mov rdi,QWORD [rdi+8+8*1]
	mov r11,rdi
	mov rdi,r8
	mov rdi,QWORD [rdi+8+8*1]
	mov rcx,rdi
;; rsp=1 , %1983~6'(= a7◂ [ *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}] ) %1982~5'(= a17◂ [ a9◂ [ ]{| l |}] ) %1981~4'(= a2◂ [ a21◂ [ a9◂ [ ]{| l |}]] ) %1977~1'(= r ) %1976~0'(= r ) %1972~8'(= a35◂ [ *{ }] ) 
; #116 5'(= a17◂ [ a9◂ [ ]{| l |}] ) ⊢ 2(<3)◂5'(= a17◂ [ a9◂ [ ]{| l |}] )
;; rsp=1 , %1984~2(<3)◂5'(= a17◂ [ a9◂ [ ]{| l |}] ) %1983~6'(= a7◂ [ *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}] ) %1981~4'(= a2◂ [ a21◂ [ a9◂ [ ]{| l |}]] ) %1977~1'(= r ) %1976~0'(= r ) %1972~8'(= a35◂ [ *{ }] ) 
; #50 { { 4'(= a2◂ [ a21◂ [ a9◂ [ ]{| l |}]] ) 2(<3)◂5'(= a17◂ [ a9◂ [ ]{| l |}] ) } 6'(= a7◂ [ *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}] ) } ⊢ 0(<2)◂{ { 4'(= a2◂ [ a21◂ [ a9◂ [ ]{| l |}]] ) 2(<3)◂5'(= a17◂ [ a9◂ [ ]{| l |}] ) } 6'(= a7◂ [ *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}] ) }
;; rsp=1 , %1985~0(<2)◂{ { 4'(= a2◂ [ a21◂ [ a9◂ [ ]{| l |}]] ) 2(<3)◂5'(= a17◂ [ a9◂ [ ]{| l |}] ) } 6'(= a7◂ [ *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}] ) } %1977~1'(= r ) %1976~0'(= r ) %1972~8'(= a35◂ [ *{ }] ) 
; #193 0(<2)◂{ { 4'(= a2◂ [ a21◂ [ a9◂ [ ]{| l |}]] ) 2(<3)◂5'(= a17◂ [ a9◂ [ ]{| l |}] ) } 6'(= a7◂ [ *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}] ) } ⊢ 0(<2)◂0(<2)◂{ { 4'(= a2◂ [ a21◂ [ a9◂ [ ]{| l |}]] ) 2(<3)◂5'(= a17◂ [ a9◂ [ ]{| l |}] ) } 6'(= a7◂ [ *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}] ) }
;; rsp=1 , %1986~0(<2)◂0(<2)◂{ { 4'(= a2◂ [ a21◂ [ a9◂ [ ]{| l |}]] ) 2(<3)◂5'(= a17◂ [ a9◂ [ ]{| l |}] ) } 6'(= a7◂ [ *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}] ) } %1977~1'(= r ) %1976~0'(= r ) %1972~8'(= a35◂ [ *{ }] ) 
; #22 0(<2)◂0(<2)◂{ { 4'(= a2◂ [ a21◂ [ a9◂ [ ]{| l |}]] ) 2(<3)◂5'(= a17◂ [ a9◂ [ ]{| l |}] ) } 6'(= a7◂ [ *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}] ) } ⊢ 0(<2)◂0(<2)◂0(<2)◂{ { 4'(= a2◂ [ a21◂ [ a9◂ [ ]{| l |}]] ) 2(<3)◂5'(= a17◂ [ a9◂ [ ]{| l |}] ) } 6'(= a7◂ [ *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}] ) }
;; rsp=1 , %1987~0(<2)◂0(<2)◂0(<2)◂{ { 4'(= a2◂ [ a21◂ [ a9◂ [ ]{| l |}]] ) 2(<3)◂5'(= a17◂ [ a9◂ [ ]{| l |}] ) } 6'(= a7◂ [ *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}] ) } %1977~1'(= r ) %1976~0'(= r ) %1972~8'(= a35◂ [ *{ }] ) 
; ∎ 0(<2)◂0(<2)◂0(<2)◂{ { 4'(= a2◂ [ a21◂ [ a9◂ [ ]{| l |}]] ) 2(<3)◂5'(= a17◂ [ a9◂ [ ]{| l |}] ) } 6'(= a7◂ [ *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}] ) }
; .dlt.ptn 1'(= r )
; .dlt.ptn 0'(= r )
; .dlt.ptn 8'(= a35◂ [ *{ }] )
;	.dlt adt ⊢ _  
; .mov_ptn2 0(<2)◂0(<2)◂0(<2)◂{ { 4'(= a2◂ [ a21◂ [ a9◂ [ ]{| l |}]] ) 2(<3)◂5'(= a17◂ [ a9◂ [ ]{| l |}] ) } 6'(= a7◂ [ *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}] ) } ⊢ 2'(= a3◂ [ a35◂ [ a7◂ [ *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}]]] )
; .mov_ptn 0(<2)◂0(<2)◂0(<2)◂{ { 4'(= a2◂ [ a21◂ [ a9◂ [ ]{| l |}]] ) 2(<3)◂5'(= a17◂ [ a9◂ [ ]{| l |}] ) } 6'(= a7◂ [ *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}] ) } ⊢ 2'(= a3◂ [ a35◂ [ a7◂ [ *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}]]] )
	mov rax,[SS_RCD_2_TOP]
	mov rsi,[rax] 
	mov QWORD [SS_RCD_2_TOP],rsi
	mov QWORD [rax],0
	mov r13,rax
	mov rax,[SS_RCD_2_TOP]
	mov rsi,[rax] 
	mov QWORD [SS_RCD_2_TOP],rsi
	mov QWORD [rax],0
	mov r14,rax
	mov rax,r10
	mov rdi,r14
	mov QWORD [rdi+8+8*0],rax
	mov rax,r11
	mov rdi,rax
	mov rax,[SS_LN_TOP]
	mov rsi,[rax]
	mov QWORD [SS_LN_TOP],rsi 
	mov QWORD [rax],0
	mov BYTE [rax+6],2
	mov QWORD [rax+8],rdi
	mov rdi,r14
	mov QWORD [rdi+8+8*1],rax
	mov rax,r14
	mov rdi,r13
	mov QWORD [rdi+8+8*0],rax
	mov rax,rcx
	mov rdi,r13
	mov QWORD [rdi+8+8*1],rax
	mov rax,r13
	mov BYTE [rax+6],0
	mov rdi,rax
	mov rax,[SS_LN_TOP]
	mov rsi,[rax]
	mov QWORD [SS_LN_TOP],rsi 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov rdi,rax
	mov rax,[SS_LN_TOP]
	mov rsi,[rax]
	mov QWORD [SS_LN_TOP],rsi 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	lea rsp,[rsp+8*1]
	jmp LB_3104
LB_3110:
;; ? 2'(= a35◂ [ *{ *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a17◂ [ a9◂ [ ]{| l |}]}a7◂ [ *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}]}] ) ⊢ 1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] )
;; rsp=1 , %1980~2'(= a2◂ [ *{ rr{| l |}}] ) %1977~1'(= r ) %1976~0'(= r ) %1972~8'(= a35◂ [ *{ }] ) 
; #192 2'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] )
;; rsp=1 , %1988~1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] ) %1977~1'(= r ) %1976~0'(= r ) %1972~8'(= a35◂ [ *{ }] ) 
; #22 1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 0(<2)◂1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] )
;; rsp=1 , %1989~0(<2)◂1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] ) %1977~1'(= r ) %1976~0'(= r ) %1972~8'(= a35◂ [ *{ }] ) 
; ∎ 0(<2)◂1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] )
; .dlt.ptn 1'(= r )
; .dlt.ptn 0'(= r )
; .dlt.ptn 8'(= a35◂ [ *{ }] )
;	.dlt adt ⊢ _  
; .mov_ptn2 0(<2)◂1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 2'(= a3◂ [ a35◂ [ a7◂ [ *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}]]] )
	mov r13,r8
; .mov_ptn 0(<2)◂1(<2)◂0'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 2'(= a3◂ [ a35◂ [ a7◂ [ *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}]]] )
	mov rax,r13
	mov rdi,rax
	mov rax,[SS_LN_TOP]
	mov rsi,[rax]
	mov QWORD [SS_LN_TOP],rsi 
	mov QWORD [rax],0
	mov BYTE [rax+6],1
	mov QWORD [rax+8],rdi
	mov rdi,rax
	mov rax,[SS_LN_TOP]
	mov rsi,[rax]
	mov QWORD [SS_LN_TOP],rsi 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	lea rsp,[rsp+8*1]
	jmp LB_3104
LB_3104:
	movzx rax,BYTE [r8+6]
	cmp rax,0
	jnz LB_3066
	pop r14
	pop r9
	add rsp,8
	pop r13
	ret
LB_3066:
	pop rdi
	pop r9 
	pop r14
	pop r13
	ret
ETR_237:
	mov r9,0x0000_ffff_ffff_ffff
	and r9,[r13]
	call GRM_237
	ret
GRM_237:
	sub rsp,32
	mov QWORD [rsp+24],r13
	mov QWORD [rsp+16],r14 
	mov QWORD [rsp+8],r9
	jmp LB_3113
LB_3112:
	add r14,1 
LB_3113:
	cmp r14,r9
	jge LB_3114
	movzx rax,BYTE [r13+8+r14]
	cmp rax,9 
	jz LB_3112
	cmp rax,32 
	jz LB_3112
LB_3114
	call GRM_217
	movzx rax,BYTE [r8+6]
	cmp rax,0
	jnz LB_3117
	jmp LB_3118
LB_3117:
	jmp LB_3115
LB_3118:
	lea rsp,[rsp-8*1]
	mov r8,[r8+8]
; .mov_ptn2 2'(= a35◂ [ *{ }] ) ⊢ 8'(= a35◂ [ *{ }] )
; .mov_ptn 2'(= a35◂ [ *{ }] ) ⊢ 8'(= a35◂ [ *{ }] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_3116
LB_3115:
	lea rsp,[rsp+8*0]
	jmp LB_3111
LB_3116:
	jmp LB_3120
LB_3119:
	add r14,1 
LB_3120:
	cmp r14,r9
	jge LB_3121
	movzx rax,BYTE [r13+8+r14]
	cmp rax,9 
	jz LB_3119
	cmp rax,32 
	jz LB_3119
LB_3121
	lea rax,[r14+4]
	cmp rax,r9
	jg LB_3124
	jmp LB_3125
LB_3124:
	mov r8,unt_1
	jmp LB_3122
LB_3125:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],226
	jnz LB_3126
	cmp BYTE [rdi+1],136
	jnz LB_3126
	cmp BYTE [rdi+2],144
	jnz LB_3126
	cmp BYTE [rdi+3],46
	jnz LB_3126
	jmp LB_3127
LB_3126:
	mov r8,unt_1
	jmp LB_3122
LB_3127:
	add r14,4
	jmp LB_3123
LB_3122:
	lea rsp,[rsp+8*1]
	jmp LB_3111
LB_3123:
	jmp LB_3129
LB_3128:
	add r14,1 
LB_3129:
	cmp r14,r9
	jge LB_3130
	movzx rax,BYTE [r13+8+r14]
	cmp rax,9 
	jz LB_3128
	cmp rax,32 
	jz LB_3128
LB_3130
	call GRM_197
	movzx rax,BYTE [r8+6]
	cmp rax,0
	jnz LB_3133
	jmp LB_3134
LB_3133:
	jmp LB_3131
LB_3134:
	lea rsp,[rsp-8*1]
	mov r8,[r8+8]
; .mov_ptn2 2'(= a8◂ [ a14◂ [ a9◂ [ ]{| l |}]] ) ⊢ 9'(= a8◂ [ a14◂ [ a9◂ [ ]{| l |}]] )
; .mov_ptn 2'(= a8◂ [ a14◂ [ a9◂ [ ]{| l |}]] ) ⊢ 9'(= a8◂ [ a14◂ [ a9◂ [ ]{| l |}]] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_3132
LB_3131:
	lea rsp,[rsp+8*1]
	pop rdi
	pop r9 
	pop r14
	pop r13
	ret
LB_3132:
	jmp LB_3136
LB_3135:
	add r14,1 
LB_3136:
	cmp r14,r9
	jge LB_3137
	movzx rax,BYTE [r13+8+r14]
	cmp rax,9 
	jz LB_3135
	cmp rax,32 
	jz LB_3135
LB_3137
	call GRM_241
	movzx rax,BYTE [r8+6]
	cmp rax,0
	jnz LB_3140
	jmp LB_3141
LB_3140:
	jmp LB_3138
LB_3141:
	lea rsp,[rsp-8*1]
	mov r8,[r8+8]
; .mov_ptn2 2'(= a35◂ [ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]] ) ⊢ 10'(= a35◂ [ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]] )
; .mov_ptn 2'(= a35◂ [ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]] ) ⊢ 10'(= a35◂ [ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_3139
LB_3138:
	lea rsp,[rsp+8*2]
	pop rdi
	pop r9 
	pop r14
	pop r13
	ret
LB_3139:
	jmp LB_3143
LB_3142:
	add r14,1 
LB_3143:
	cmp r14,r9
	jge LB_3144
	movzx rax,BYTE [r13+8+r14]
	cmp rax,9 
	jz LB_3142
	cmp rax,32 
	jz LB_3142
LB_3144
	call GRM_234
	movzx rax,BYTE [r8+6]
	cmp rax,0
	jnz LB_3147
	jmp LB_3148
LB_3147:
	jmp LB_3145
LB_3148:
	lea rsp,[rsp-8*1]
	mov r8,[r8+8]
; .mov_ptn2 2'(= a35◂ [ a17◂ [ a9◂ [ ]{| l |}]] ) ⊢ 11'(= a35◂ [ a17◂ [ a9◂ [ ]{| l |}]] )
; .mov_ptn 2'(= a35◂ [ a17◂ [ a9◂ [ ]{| l |}]] ) ⊢ 11'(= a35◂ [ a17◂ [ a9◂ [ ]{| l |}]] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_3146
LB_3145:
	lea rsp,[rsp+8*3]
	pop rdi
	pop r9 
	pop r14
	pop r13
	ret
LB_3146:
	mov QWORD [rsp+8*4],r14
	mov r13,QWORD [rsp+16+8*4]
	mov r14,QWORD [rsp+8*4]
	jmp LB_3150
LB_3150
;; rsp=4 , %1995~1'(= r ) %1994~0'(= r ) %1993~11'(= a35◂ [ a17◂ [ a9◂ [ ]{| l |}]] ) %1992~10'(= a35◂ [ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]] ) %1991~9'(= a8◂ [ a14◂ [ a9◂ [ ]{| l |}]] ) %1990~8'(= a35◂ [ *{ }] ) 
; rsp_d=0, #194 { 10'(= a35◂ [ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]] ) 11'(= a35◂ [ a17◂ [ a9◂ [ ]{| l |}]] ) } ⊢ 2'(= a35◂ [ *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a17◂ [ a9◂ [ ]{| l |}]}] )
	lea rsp,[rsp-8*2]
	mov QWORD [rsp+8*0],r13
	mov QWORD [rsp+8*1],r14
; .mov_ptn2 { 10'(= a35◂ [ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]] ) 11'(= a35◂ [ a17◂ [ a9◂ [ ]{| l |}]] ) } ⊢ { 0'(= a35◂ [ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]] ) 1'(= a35◂ [ a17◂ [ a9◂ [ ]{| l |}]] ) }
; .mov_ptn 11'(= a35◂ [ a17◂ [ a9◂ [ ]{| l |}]] ) ⊢ 1'(= a35◂ [ a17◂ [ a9◂ [ ]{| l |}]] )
	mov rax,QWORD [rsp-8+8*3]
	mov r14,rax
; .mov_ptn 10'(= a35◂ [ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]] ) ⊢ 0'(= a35◂ [ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]] )
	mov rax,QWORD [rsp-8+8*4]
	mov r13,rax
	call LB_3061

	mov r14,QWORD [rsp-8+8*2]
	mov rax,QWORD [rsp-8+8*1]
	mov r8,r13
	mov r13,rax
	lea rsp,[rsp+8*4]
;; rsp=2 , %1996~2'(= a35◂ [ *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a17◂ [ a9◂ [ ]{| l |}]}] ) %1995~1'(= r ) %1994~0'(= r ) %1991~9'(= a8◂ [ a14◂ [ a9◂ [ ]{| l |}]] ) %1990~8'(= a35◂ [ *{ }] ) 
;; ? 2'(= a35◂ [ *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a17◂ [ a9◂ [ ]{| l |}]}] ) ⊢ 0(<2)◂{ 3'(= a2◂ [ a21◂ [ a9◂ [ ]{| l |}]] ) 4'(= a17◂ [ a9◂ [ ]{| l |}] ) }
	mov rdi,r8
	movzx rax,BYTE [rdi+6]
	cmp rax,0
	jnz LB_3151
	mov rdi,r8
	mov rdi,QWORD [rdi+8+8*0]
	mov r9,rdi
	mov rdi,r8
	mov rdi,QWORD [rdi+8+8*1]
	mov r10,rdi
;; rsp=2 , %1999~4'(= a17◂ [ a9◂ [ ]{| l |}] ) %1998~3'(= a2◂ [ a21◂ [ a9◂ [ ]{| l |}]] ) %1995~1'(= r ) %1994~0'(= r ) %1991~9'(= a8◂ [ a14◂ [ a9◂ [ ]{| l |}]] ) %1990~8'(= a35◂ [ *{ }] ) 
; #116 4'(= a17◂ [ a9◂ [ ]{| l |}] ) ⊢ 2(<3)◂4'(= a17◂ [ a9◂ [ ]{| l |}] )
;; rsp=2 , %2000~2(<3)◂4'(= a17◂ [ a9◂ [ ]{| l |}] ) %1998~3'(= a2◂ [ a21◂ [ a9◂ [ ]{| l |}]] ) %1995~1'(= r ) %1994~0'(= r ) %1991~9'(= a8◂ [ a14◂ [ a9◂ [ ]{| l |}]] ) %1990~8'(= a35◂ [ *{ }] ) 
; #49 { 9'(= a8◂ [ a14◂ [ a9◂ [ ]{| l |}]] ) 3'(= a2◂ [ a21◂ [ a9◂ [ ]{| l |}]] ) 2(<3)◂4'(= a17◂ [ a9◂ [ ]{| l |}] ) } ⊢ 1(<2)◂{ 9'(= a8◂ [ a14◂ [ a9◂ [ ]{| l |}]] ) 3'(= a2◂ [ a21◂ [ a9◂ [ ]{| l |}]] ) 2(<3)◂4'(= a17◂ [ a9◂ [ ]{| l |}] ) }
;; rsp=2 , %2001~1(<2)◂{ 9'(= a8◂ [ a14◂ [ a9◂ [ ]{| l |}]] ) 3'(= a2◂ [ a21◂ [ a9◂ [ ]{| l |}]] ) 2(<3)◂4'(= a17◂ [ a9◂ [ ]{| l |}] ) } %1995~1'(= r ) %1994~0'(= r ) %1990~8'(= a35◂ [ *{ }] ) 
; #193 1(<2)◂{ 9'(= a8◂ [ a14◂ [ a9◂ [ ]{| l |}]] ) 3'(= a2◂ [ a21◂ [ a9◂ [ ]{| l |}]] ) 2(<3)◂4'(= a17◂ [ a9◂ [ ]{| l |}] ) } ⊢ 0(<2)◂1(<2)◂{ 9'(= a8◂ [ a14◂ [ a9◂ [ ]{| l |}]] ) 3'(= a2◂ [ a21◂ [ a9◂ [ ]{| l |}]] ) 2(<3)◂4'(= a17◂ [ a9◂ [ ]{| l |}] ) }
;; rsp=2 , %2002~0(<2)◂1(<2)◂{ 9'(= a8◂ [ a14◂ [ a9◂ [ ]{| l |}]] ) 3'(= a2◂ [ a21◂ [ a9◂ [ ]{| l |}]] ) 2(<3)◂4'(= a17◂ [ a9◂ [ ]{| l |}] ) } %1995~1'(= r ) %1994~0'(= r ) %1990~8'(= a35◂ [ *{ }] ) 
; #22 0(<2)◂1(<2)◂{ 9'(= a8◂ [ a14◂ [ a9◂ [ ]{| l |}]] ) 3'(= a2◂ [ a21◂ [ a9◂ [ ]{| l |}]] ) 2(<3)◂4'(= a17◂ [ a9◂ [ ]{| l |}] ) } ⊢ 0(<2)◂0(<2)◂1(<2)◂{ 9'(= a8◂ [ a14◂ [ a9◂ [ ]{| l |}]] ) 3'(= a2◂ [ a21◂ [ a9◂ [ ]{| l |}]] ) 2(<3)◂4'(= a17◂ [ a9◂ [ ]{| l |}] ) }
;; rsp=2 , %2003~0(<2)◂0(<2)◂1(<2)◂{ 9'(= a8◂ [ a14◂ [ a9◂ [ ]{| l |}]] ) 3'(= a2◂ [ a21◂ [ a9◂ [ ]{| l |}]] ) 2(<3)◂4'(= a17◂ [ a9◂ [ ]{| l |}] ) } %1995~1'(= r ) %1994~0'(= r ) %1990~8'(= a35◂ [ *{ }] ) 
; ∎ 0(<2)◂0(<2)◂1(<2)◂{ 9'(= a8◂ [ a14◂ [ a9◂ [ ]{| l |}]] ) 3'(= a2◂ [ a21◂ [ a9◂ [ ]{| l |}]] ) 2(<3)◂4'(= a17◂ [ a9◂ [ ]{| l |}] ) }
; .dlt.ptn 1'(= r )
; .dlt.ptn 0'(= r )
; .dlt.ptn 8'(= a35◂ [ *{ }] )
;	.dlt adt ⊢ _  
; .mov_ptn2 0(<2)◂0(<2)◂1(<2)◂{ 9'(= a8◂ [ a14◂ [ a9◂ [ ]{| l |}]] ) 3'(= a2◂ [ a21◂ [ a9◂ [ ]{| l |}]] ) 2(<3)◂4'(= a17◂ [ a9◂ [ ]{| l |}] ) } ⊢ 2'(= a3◂ [ a35◂ [ a7◂ [ *{ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}]]] )
; .mov_ptn 0(<2)◂0(<2)◂1(<2)◂{ 9'(= a8◂ [ a14◂ [ a9◂ [ ]{| l |}]] ) 3'(= a2◂ [ a21◂ [ a9◂ [ ]{| l |}]] ) 2(<3)◂4'(= a17◂ [ a9◂ [ ]{| l |}] ) } ⊢ 2'(= a3◂ [ a35◂ [ a7◂ [ *{ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}]]] )
	mov rax,[SS_RCD_3_TOP]
	mov rsi,[rax] 
	mov QWORD [SS_RCD_3_TOP],rsi
	mov QWORD [rax],0
	mov r13,rax
	mov rax,QWORD [rsp-8+8*1]
	mov rdi,r13
	mov QWORD [rdi+8+8*0],rax
	mov rax,r9
	mov rdi,r13
	mov QWORD [rdi+8+8*1],rax
	mov rax,r10
	mov rdi,rax
	mov rax,[SS_LN_TOP]
	mov rsi,[rax]
	mov QWORD [SS_LN_TOP],rsi 
	mov QWORD [rax],0
	mov BYTE [rax+6],2
	mov QWORD [rax+8],rdi
	mov rdi,r13
	mov QWORD [rdi+8+8*2],rax
	mov rax,r13
	mov BYTE [rax+6],1
	mov rdi,rax
	mov rax,[SS_LN_TOP]
	mov rsi,[rax]
	mov QWORD [SS_LN_TOP],rsi 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov rdi,rax
	mov rax,[SS_LN_TOP]
	mov rsi,[rax]
	mov QWORD [SS_LN_TOP],rsi 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	lea rsp,[rsp+8*2]
	jmp LB_3149
LB_3151:
;; ? 2'(= a35◂ [ *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a17◂ [ a9◂ [ ]{| l |}]}] ) ⊢ 1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] )
;; rsp=2 , %1997~2'(= a2◂ [ *{ rr{| l |}}] ) %1995~1'(= r ) %1994~0'(= r ) %1991~9'(= a8◂ [ a14◂ [ a9◂ [ ]{| l |}]] ) %1990~8'(= a35◂ [ *{ }] ) 
; #192 2'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] )
;; rsp=2 , %2004~1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] ) %1995~1'(= r ) %1994~0'(= r ) %1991~9'(= a8◂ [ a14◂ [ a9◂ [ ]{| l |}]] ) %1990~8'(= a35◂ [ *{ }] ) 
; #22 1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 0(<2)◂1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] )
;; rsp=2 , %2005~0(<2)◂1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] ) %1995~1'(= r ) %1994~0'(= r ) %1991~9'(= a8◂ [ a14◂ [ a9◂ [ ]{| l |}]] ) %1990~8'(= a35◂ [ *{ }] ) 
; ∎ 0(<2)◂1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] )
; .dlt.ptn 1'(= r )
; .dlt.ptn 0'(= r )
; .dlt.ptn 9'(= a8◂ [ a14◂ [ a9◂ [ ]{| l |}]] )
;	.dlt adt ⊢ _  
; .dlt.ptn 8'(= a35◂ [ *{ }] )
;	.dlt adt ⊢ _  
; .mov_ptn2 0(<2)◂1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 2'(= a3◂ [ a35◂ [ a7◂ [ *{ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}]]] )
	mov r13,r8
; .mov_ptn 0(<2)◂1(<2)◂0'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 2'(= a3◂ [ a35◂ [ a7◂ [ *{ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}]]] )
	mov rax,r13
	mov rdi,rax
	mov rax,[SS_LN_TOP]
	mov rsi,[rax]
	mov QWORD [SS_LN_TOP],rsi 
	mov QWORD [rax],0
	mov BYTE [rax+6],1
	mov QWORD [rax+8],rdi
	mov rdi,rax
	mov rax,[SS_LN_TOP]
	mov rsi,[rax]
	mov QWORD [SS_LN_TOP],rsi 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	lea rsp,[rsp+8*2]
	jmp LB_3149
LB_3149:
	movzx rax,BYTE [r8+6]
	cmp rax,0
	jnz LB_3111
	pop r14
	pop r9
	add rsp,8
	pop r13
	ret
LB_3111:
	jmp LB_3154
LB_3153:
	add r14,1 
LB_3154:
	cmp r14,r9
	jge LB_3155
	movzx rax,BYTE [r13+8+r14]
	cmp rax,9 
	jz LB_3153
	cmp rax,32 
	jz LB_3153
LB_3155
	call GRM_217
	movzx rax,BYTE [r8+6]
	cmp rax,0
	jnz LB_3158
	jmp LB_3159
LB_3158:
	jmp LB_3156
LB_3159:
	lea rsp,[rsp-8*1]
	mov r8,[r8+8]
; .mov_ptn2 2'(= a35◂ [ *{ }] ) ⊢ 8'(= a35◂ [ *{ }] )
; .mov_ptn 2'(= a35◂ [ *{ }] ) ⊢ 8'(= a35◂ [ *{ }] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_3157
LB_3156:
	lea rsp,[rsp+8*0]
	jmp LB_3152
LB_3157:
	jmp LB_3161
LB_3160:
	add r14,1 
LB_3161:
	cmp r14,r9
	jge LB_3162
	movzx rax,BYTE [r13+8+r14]
	cmp rax,9 
	jz LB_3160
	cmp rax,32 
	jz LB_3160
LB_3162
	lea rax,[r14+3]
	cmp rax,r9
	jg LB_3165
	jmp LB_3166
LB_3165:
	mov r8,unt_1
	jmp LB_3163
LB_3166:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],226
	jnz LB_3167
	cmp BYTE [rdi+1],136
	jnz LB_3167
	cmp BYTE [rdi+2],144
	jnz LB_3167
	jmp LB_3168
LB_3167:
	mov r8,unt_1
	jmp LB_3163
LB_3168:
	add r14,3
	jmp LB_3164
LB_3163:
	lea rsp,[rsp+8*1]
	jmp LB_3152
LB_3164:
	jmp LB_3170
LB_3169:
	add r14,1 
LB_3170:
	cmp r14,r9
	jge LB_3171
	movzx rax,BYTE [r13+8+r14]
	cmp rax,9 
	jz LB_3169
	cmp rax,32 
	jz LB_3169
LB_3171
	call GRM_197
	movzx rax,BYTE [r8+6]
	cmp rax,0
	jnz LB_3174
	jmp LB_3175
LB_3174:
	jmp LB_3172
LB_3175:
	lea rsp,[rsp-8*1]
	mov r8,[r8+8]
; .mov_ptn2 2'(= a8◂ [ a14◂ [ a9◂ [ ]{| l |}]] ) ⊢ 9'(= a8◂ [ a14◂ [ a9◂ [ ]{| l |}]] )
; .mov_ptn 2'(= a8◂ [ a14◂ [ a9◂ [ ]{| l |}]] ) ⊢ 9'(= a8◂ [ a14◂ [ a9◂ [ ]{| l |}]] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_3173
LB_3172:
	lea rsp,[rsp+8*1]
	jmp LB_3152
LB_3173:
	jmp LB_3177
LB_3176:
	add r14,1 
LB_3177:
	cmp r14,r9
	jge LB_3178
	movzx rax,BYTE [r13+8+r14]
	cmp rax,9 
	jz LB_3176
	cmp rax,32 
	jz LB_3176
LB_3178
	call GRM_241
	movzx rax,BYTE [r8+6]
	cmp rax,0
	jnz LB_3181
	jmp LB_3182
LB_3181:
	jmp LB_3179
LB_3182:
	lea rsp,[rsp-8*1]
	mov r8,[r8+8]
; .mov_ptn2 2'(= a35◂ [ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]] ) ⊢ 10'(= a35◂ [ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]] )
; .mov_ptn 2'(= a35◂ [ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]] ) ⊢ 10'(= a35◂ [ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_3180
LB_3179:
	lea rsp,[rsp+8*2]
	jmp LB_3152
LB_3180:
	jmp LB_3184
LB_3183:
	add r14,1 
LB_3184:
	cmp r14,r9
	jge LB_3185
	movzx rax,BYTE [r13+8+r14]
	cmp rax,9 
	jz LB_3183
	cmp rax,32 
	jz LB_3183
LB_3185
	call GRM_234
	movzx rax,BYTE [r8+6]
	cmp rax,0
	jnz LB_3188
	jmp LB_3189
LB_3188:
	jmp LB_3186
LB_3189:
	lea rsp,[rsp-8*1]
	mov r8,[r8+8]
; .mov_ptn2 2'(= a35◂ [ a17◂ [ a9◂ [ ]{| l |}]] ) ⊢ 11'(= a35◂ [ a17◂ [ a9◂ [ ]{| l |}]] )
; .mov_ptn 2'(= a35◂ [ a17◂ [ a9◂ [ ]{| l |}]] ) ⊢ 11'(= a35◂ [ a17◂ [ a9◂ [ ]{| l |}]] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_3187
LB_3186:
	lea rsp,[rsp+8*3]
	jmp LB_3152
LB_3187:
	jmp LB_3191
LB_3190:
	add r14,1 
LB_3191:
	cmp r14,r9
	jge LB_3192
	movzx rax,BYTE [r13+8+r14]
	cmp rax,9 
	jz LB_3190
	cmp rax,32 
	jz LB_3190
LB_3192
	call GRM_237
	movzx rax,BYTE [r8+6]
	cmp rax,0
	jnz LB_3195
	jmp LB_3196
LB_3195:
	jmp LB_3193
LB_3196:
	lea rsp,[rsp-8*1]
	mov r8,[r8+8]
; .mov_ptn2 2'(= a35◂ [ a7◂ [ *{ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}]] ) ⊢ 12'(= a35◂ [ a7◂ [ *{ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}]] )
; .mov_ptn 2'(= a35◂ [ a7◂ [ *{ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}]] ) ⊢ 12'(= a35◂ [ a7◂ [ *{ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}]] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_3194
LB_3193:
	lea rsp,[rsp+8*4]
	jmp LB_3152
LB_3194:
	mov QWORD [rsp+8*5],r14
	mov r13,QWORD [rsp+16+8*5]
	mov r14,QWORD [rsp+8*5]
	jmp LB_3198
LB_3199: ; 194 { 0'(= a35◂ [ *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a17◂ [ a9◂ [ ]{| l |}]}] ) 1'(= a35◂ [ a7◂ [ *{ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}]] ) } ⊢ 0'(= a35◂ [ *{ *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a17◂ [ a9◂ [ ]{| l |}]}a7◂ [ *{ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}]}] ) : ({ _t35◂{ _lst◂_t21◂_s8◂_t9 _t17◂_s8◂_t9 } _t35◂_t7◂{ _t8◂_t14◂_s8◂_t9 _lst◂_t21◂_s8◂_t9 _t20◂_s8◂_t9 } }→_t35◂{ { _lst◂_t21◂_s8◂_t9 _t17◂_s8◂_t9 } _t7◂{ _t8◂_t14◂_s8◂_t9 _lst◂_t21◂_s8◂_t9 _t20◂_s8◂_t9 } })
;; rsp=0 , %1131~1'(= a35◂ [ a7◂ [ *{ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}]] ) %1130~0'(= a35◂ [ *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a17◂ [ a9◂ [ ]{| l |}]}] ) 
;; ? 0'(= a35◂ [ *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a17◂ [ a9◂ [ ]{| l |}]}] ) ⊢ 0(<2)◂0'(= *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a17◂ [ a9◂ [ ]{| l |}]} )
	mov rdi,r13
	movzx rax,BYTE [rdi+6]
	cmp rax,0
	jnz LB_3200
;; rsp=0 , %1133~0'(= *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a17◂ [ a9◂ [ ]{| l |}]} ) %1131~1'(= a35◂ [ a7◂ [ *{ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}]] ) 
;; ? 1'(= a35◂ [ a7◂ [ *{ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}]] ) ⊢ 0(<2)◂2'(= a7◂ [ *{ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}] )
	mov rdi,r14
	movzx rax,BYTE [rdi+6]
	cmp rax,0
	jnz LB_3201
	mov rax,QWORD [rdi+8]
	mov r8,rax
;; rsp=0 , %1135~2'(= a7◂ [ *{ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}] ) %1133~0'(= *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a17◂ [ a9◂ [ ]{| l |}]} ) 
; #193 { 0'(= *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a17◂ [ a9◂ [ ]{| l |}]} ) 2'(= a7◂ [ *{ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}] ) } ⊢ 0(<2)◂{ 0'(= *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a17◂ [ a9◂ [ ]{| l |}]} ) 2'(= a7◂ [ *{ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}] ) }
;; rsp=0 , %1136~0(<2)◂{ 0'(= *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a17◂ [ a9◂ [ ]{| l |}]} ) 2'(= a7◂ [ *{ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}] ) } 
; ∎ 0(<2)◂{ 0'(= *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a17◂ [ a9◂ [ ]{| l |}]} ) 2'(= a7◂ [ *{ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}] ) }
; .mov_ptn2 0(<2)◂{ 0'(= *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a17◂ [ a9◂ [ ]{| l |}]} ) 2'(= a7◂ [ *{ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}] ) } ⊢ 0'(= a35◂ [ *{ *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a17◂ [ a9◂ [ ]{| l |}]}a7◂ [ *{ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}]}] )
	mov r14,r13
; .mov_ptn 0(<2)◂{ 1'(= *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a17◂ [ a9◂ [ ]{| l |}]} ) 2'(= a7◂ [ *{ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}] ) } ⊢ 0'(= a35◂ [ *{ *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a17◂ [ a9◂ [ ]{| l |}]}a7◂ [ *{ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}]}] )
	mov rax,[SS_RCD_2_TOP]
	mov rsi,[rax] 
	mov QWORD [SS_RCD_2_TOP],rsi
	mov QWORD [rax],0
	mov r9,rax
	mov rax,r14
	mov rdi,r9
	mov QWORD [rdi+8+8*0],rax
	mov rax,r8
	mov rdi,r9
	mov QWORD [rdi+8+8*1],rax
	mov rax,r9
	mov BYTE [rax+6],0
	mov r13,rax
	ret
LB_3201:
;; ? 1'(= a35◂ [ a7◂ [ *{ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}]] ) ⊢ 1(<2)◂1'(= a2◂ [ *{ rr{| l |}}] )
;; rsp=0 , %1134~1'(= a2◂ [ *{ rr{| l |}}] ) %1133~0'(= *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a17◂ [ a9◂ [ ]{| l |}]} ) 
; #192 1'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 1(<2)◂1'(= a2◂ [ *{ rr{| l |}}] )
;; rsp=0 , %1137~1(<2)◂1'(= a2◂ [ *{ rr{| l |}}] ) %1133~0'(= *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a17◂ [ a9◂ [ ]{| l |}]} ) 
; ∎ 1(<2)◂1'(= a2◂ [ *{ rr{| l |}}] )
; .dlt.ptn 0'(= *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a17◂ [ a9◂ [ ]{| l |}]} )
; .dlt.hp rcd
; .mov_ptn2 1(<2)◂1'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 0'(= a35◂ [ *{ *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a17◂ [ a9◂ [ ]{| l |}]}a7◂ [ *{ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}]}] )
; .mov_ptn 1(<2)◂1'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 0'(= a35◂ [ *{ *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a17◂ [ a9◂ [ ]{| l |}]}a7◂ [ *{ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}]}] )
	mov rax,r14
	mov rdi,rax
	mov rax,[SS_LN_TOP]
	mov rsi,[rax]
	mov QWORD [SS_LN_TOP],rsi 
	mov QWORD [rax],0
	mov BYTE [rax+6],1
	mov QWORD [rax+8],rdi
	mov r13,rax
	ret
LB_3200:
;; ? 0'(= a35◂ [ *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a17◂ [ a9◂ [ ]{| l |}]}] ) ⊢ 1(<2)◂0'(= a2◂ [ *{ rr{| l |}}] )
;; rsp=0 , %1132~0'(= a2◂ [ *{ rr{| l |}}] ) %1131~1'(= a35◂ [ a7◂ [ *{ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}]] ) 
;; ? 1'(= a35◂ [ a7◂ [ *{ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}]] ) ⊢ 0(<2)◂2'(= a7◂ [ *{ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}] )
	mov rdi,r14
	movzx rax,BYTE [rdi+6]
	cmp rax,0
	jnz LB_3202
	mov rax,QWORD [rdi+8]
	mov r8,rax
;; rsp=0 , %1139~2'(= a7◂ [ *{ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}] ) %1132~0'(= a2◂ [ *{ rr{| l |}}] ) 
; #192 0'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 1(<2)◂0'(= a2◂ [ *{ rr{| l |}}] )
;; rsp=0 , %1140~1(<2)◂0'(= a2◂ [ *{ rr{| l |}}] ) %1139~2'(= a7◂ [ *{ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}] ) 
; ∎ 1(<2)◂0'(= a2◂ [ *{ rr{| l |}}] )
; .dlt.ptn 2'(= a7◂ [ *{ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}] )
;	.dlt adt ⊢ _  
; .mov_ptn2 1(<2)◂0'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 0'(= a35◂ [ *{ *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a17◂ [ a9◂ [ ]{| l |}]}a7◂ [ *{ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}]}] )
	mov r14,r13
; .mov_ptn 1(<2)◂1'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 0'(= a35◂ [ *{ *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a17◂ [ a9◂ [ ]{| l |}]}a7◂ [ *{ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}]}] )
	mov rax,r14
	mov rdi,rax
	mov rax,[SS_LN_TOP]
	mov rsi,[rax]
	mov QWORD [SS_LN_TOP],rsi 
	mov QWORD [rax],0
	mov BYTE [rax+6],1
	mov QWORD [rax+8],rdi
	mov r13,rax
	ret
LB_3202:
;; ? 1'(= a35◂ [ a7◂ [ *{ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}]] ) ⊢ 1(<2)◂1'(= a2◂ [ *{ rr{| l |}}] )
;; rsp=0 , %1138~1'(= a2◂ [ *{ rr{| l |}}] ) %1132~0'(= a2◂ [ *{ rr{| l |}}] ) 
; rsp_d=0, #53 { 0'(= a2◂ [ *{ rr{| l |}}] ) 1'(= a2◂ [ *{ rr{| l |}}] ) } ⊢ 0'(= a2◂ [ *{ rr{| l |}}] )
; .mov_ptn2 { 0'(= a2◂ [ *{ rr{| l |}}] ) 1'(= a2◂ [ *{ rr{| l |}}] ) } ⊢ { 0'(= a2◂ [ *{ rr{| l |}}] ) 1'(= a2◂ [ *{ rr{| l |}}] ) }
	call LB_1732

;; rsp=0 , %1141~0'(= a2◂ [ *{ rr{| l |}}] ) 
; #192 0'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 1(<2)◂0'(= a2◂ [ *{ rr{| l |}}] )
;; rsp=0 , %1142~1(<2)◂0'(= a2◂ [ *{ rr{| l |}}] ) 
; ∎ 1(<2)◂0'(= a2◂ [ *{ rr{| l |}}] )
; .mov_ptn2 1(<2)◂0'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 0'(= a35◂ [ *{ *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a17◂ [ a9◂ [ ]{| l |}]}a7◂ [ *{ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}]}] )
	mov r14,r13
; .mov_ptn 1(<2)◂1'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 0'(= a35◂ [ *{ *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a17◂ [ a9◂ [ ]{| l |}]}a7◂ [ *{ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}]}] )
	mov rax,r14
	mov rdi,rax
	mov rax,[SS_LN_TOP]
	mov rsi,[rax]
	mov QWORD [SS_LN_TOP],rsi 
	mov QWORD [rax],0
	mov BYTE [rax+6],1
	mov QWORD [rax+8],rdi
	mov r13,rax
	ret
LB_3198
;; rsp=5 , %2012~1'(= r ) %2011~0'(= r ) %2010~12'(= a35◂ [ a7◂ [ *{ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}]] ) %2009~11'(= a35◂ [ a17◂ [ a9◂ [ ]{| l |}]] ) %2008~10'(= a35◂ [ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]] ) %2007~9'(= a8◂ [ a14◂ [ a9◂ [ ]{| l |}]] ) %2006~8'(= a35◂ [ *{ }] ) 
; rsp_d=0, #194 { 10'(= a35◂ [ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]] ) 11'(= a35◂ [ a17◂ [ a9◂ [ ]{| l |}]] ) } ⊢ 2'(= a35◂ [ *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a17◂ [ a9◂ [ ]{| l |}]}] )
	lea rsp,[rsp-8*2]
	mov QWORD [rsp+8*0],r13
	mov QWORD [rsp+8*1],r14
; .mov_ptn2 { 10'(= a35◂ [ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]] ) 11'(= a35◂ [ a17◂ [ a9◂ [ ]{| l |}]] ) } ⊢ { 0'(= a35◂ [ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]] ) 1'(= a35◂ [ a17◂ [ a9◂ [ ]{| l |}]] ) }
; .mov_ptn 11'(= a35◂ [ a17◂ [ a9◂ [ ]{| l |}]] ) ⊢ 1'(= a35◂ [ a17◂ [ a9◂ [ ]{| l |}]] )
	mov rax,QWORD [rsp-8+8*4]
	mov r14,rax
; .mov_ptn 10'(= a35◂ [ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]] ) ⊢ 0'(= a35◂ [ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]] )
	mov rax,QWORD [rsp-8+8*5]
	mov r13,rax
	call LB_3061

	mov r14,QWORD [rsp-8+8*2]
	mov rax,QWORD [rsp-8+8*1]
	mov r8,r13
	mov r13,rax
	lea rsp,[rsp+8*2]
;; rsp=5 , %2013~2'(= a35◂ [ *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a17◂ [ a9◂ [ ]{| l |}]}] ) %2012~1'(= r ) %2011~0'(= r ) %2010~12'(= a35◂ [ a7◂ [ *{ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}]] ) %2007~9'(= a8◂ [ a14◂ [ a9◂ [ ]{| l |}]] ) %2006~8'(= a35◂ [ *{ }] ) 
; rsp_d=0, #194 { 2'(= a35◂ [ *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a17◂ [ a9◂ [ ]{| l |}]}] ) 12'(= a35◂ [ a7◂ [ *{ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}]] ) } ⊢ 2'(= a35◂ [ *{ *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a17◂ [ a9◂ [ ]{| l |}]}a7◂ [ *{ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}]}] )
	lea rsp,[rsp-8*2]
	mov QWORD [rsp+8*0],r13
	mov QWORD [rsp+8*1],r14
; .mov_ptn2 { 2'(= a35◂ [ *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a17◂ [ a9◂ [ ]{| l |}]}] ) 12'(= a35◂ [ a7◂ [ *{ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}]] ) } ⊢ { 0'(= a35◂ [ *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a17◂ [ a9◂ [ ]{| l |}]}] ) 1'(= a35◂ [ a7◂ [ *{ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}]] ) }
; .mov_ptn 12'(= a35◂ [ a7◂ [ *{ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}]] ) ⊢ 1'(= a35◂ [ a7◂ [ *{ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}]] )
	mov rax,QWORD [rsp-8+8*3]
	mov r14,rax
; .mov_ptn 2'(= a35◂ [ *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a17◂ [ a9◂ [ ]{| l |}]}] ) ⊢ 0'(= a35◂ [ *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a17◂ [ a9◂ [ ]{| l |}]}] )
	mov rax,r8
	mov r13,rax
	call LB_3199

	mov r14,QWORD [rsp-8+8*2]
	mov rax,QWORD [rsp-8+8*1]
	mov r8,r13
	mov r13,rax
	lea rsp,[rsp+8*5]
;; rsp=2 , %2014~2'(= a35◂ [ *{ *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a17◂ [ a9◂ [ ]{| l |}]}a7◂ [ *{ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}]}] ) %2012~1'(= r ) %2011~0'(= r ) %2007~9'(= a8◂ [ a14◂ [ a9◂ [ ]{| l |}]] ) %2006~8'(= a35◂ [ *{ }] ) 
;; ? 2'(= a35◂ [ *{ *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a17◂ [ a9◂ [ ]{| l |}]}a7◂ [ *{ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}]}] ) ⊢ 0(<2)◂{ { 4'(= a2◂ [ a21◂ [ a9◂ [ ]{| l |}]] ) 5'(= a17◂ [ a9◂ [ ]{| l |}] ) } 6'(= a7◂ [ *{ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}] ) }
	mov rdi,r8
	movzx rax,BYTE [rdi+6]
	cmp rax,0
	jnz LB_3203
	mov rdi,r8
	mov rdi,QWORD [rdi+8+8*0]
	mov r9,rdi
	mov rdi,r9
	mov rdi,QWORD [rdi+8+8*0]
	mov r10,rdi
	mov rdi,r9
	mov rdi,QWORD [rdi+8+8*1]
	mov r11,rdi
	mov rdi,r8
	mov rdi,QWORD [rdi+8+8*1]
	mov rcx,rdi
;; rsp=2 , %2018~6'(= a7◂ [ *{ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}] ) %2017~5'(= a17◂ [ a9◂ [ ]{| l |}] ) %2016~4'(= a2◂ [ a21◂ [ a9◂ [ ]{| l |}]] ) %2012~1'(= r ) %2011~0'(= r ) %2007~9'(= a8◂ [ a14◂ [ a9◂ [ ]{| l |}]] ) %2006~8'(= a35◂ [ *{ }] ) 
; #116 5'(= a17◂ [ a9◂ [ ]{| l |}] ) ⊢ 2(<3)◂5'(= a17◂ [ a9◂ [ ]{| l |}] )
;; rsp=2 , %2019~2(<3)◂5'(= a17◂ [ a9◂ [ ]{| l |}] ) %2018~6'(= a7◂ [ *{ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}] ) %2016~4'(= a2◂ [ a21◂ [ a9◂ [ ]{| l |}]] ) %2012~1'(= r ) %2011~0'(= r ) %2007~9'(= a8◂ [ a14◂ [ a9◂ [ ]{| l |}]] ) %2006~8'(= a35◂ [ *{ }] ) 
; #50 { { 9'(= a8◂ [ a14◂ [ a9◂ [ ]{| l |}]] ) 4'(= a2◂ [ a21◂ [ a9◂ [ ]{| l |}]] ) 2(<3)◂5'(= a17◂ [ a9◂ [ ]{| l |}] ) } 6'(= a7◂ [ *{ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}] ) } ⊢ 0(<2)◂{ { 9'(= a8◂ [ a14◂ [ a9◂ [ ]{| l |}]] ) 4'(= a2◂ [ a21◂ [ a9◂ [ ]{| l |}]] ) 2(<3)◂5'(= a17◂ [ a9◂ [ ]{| l |}] ) } 6'(= a7◂ [ *{ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}] ) }
;; rsp=2 , %2020~0(<2)◂{ { 9'(= a8◂ [ a14◂ [ a9◂ [ ]{| l |}]] ) 4'(= a2◂ [ a21◂ [ a9◂ [ ]{| l |}]] ) 2(<3)◂5'(= a17◂ [ a9◂ [ ]{| l |}] ) } 6'(= a7◂ [ *{ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}] ) } %2012~1'(= r ) %2011~0'(= r ) %2006~8'(= a35◂ [ *{ }] ) 
; #193 0(<2)◂{ { 9'(= a8◂ [ a14◂ [ a9◂ [ ]{| l |}]] ) 4'(= a2◂ [ a21◂ [ a9◂ [ ]{| l |}]] ) 2(<3)◂5'(= a17◂ [ a9◂ [ ]{| l |}] ) } 6'(= a7◂ [ *{ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}] ) } ⊢ 0(<2)◂0(<2)◂{ { 9'(= a8◂ [ a14◂ [ a9◂ [ ]{| l |}]] ) 4'(= a2◂ [ a21◂ [ a9◂ [ ]{| l |}]] ) 2(<3)◂5'(= a17◂ [ a9◂ [ ]{| l |}] ) } 6'(= a7◂ [ *{ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}] ) }
;; rsp=2 , %2021~0(<2)◂0(<2)◂{ { 9'(= a8◂ [ a14◂ [ a9◂ [ ]{| l |}]] ) 4'(= a2◂ [ a21◂ [ a9◂ [ ]{| l |}]] ) 2(<3)◂5'(= a17◂ [ a9◂ [ ]{| l |}] ) } 6'(= a7◂ [ *{ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}] ) } %2012~1'(= r ) %2011~0'(= r ) %2006~8'(= a35◂ [ *{ }] ) 
; #22 0(<2)◂0(<2)◂{ { 9'(= a8◂ [ a14◂ [ a9◂ [ ]{| l |}]] ) 4'(= a2◂ [ a21◂ [ a9◂ [ ]{| l |}]] ) 2(<3)◂5'(= a17◂ [ a9◂ [ ]{| l |}] ) } 6'(= a7◂ [ *{ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}] ) } ⊢ 0(<2)◂0(<2)◂0(<2)◂{ { 9'(= a8◂ [ a14◂ [ a9◂ [ ]{| l |}]] ) 4'(= a2◂ [ a21◂ [ a9◂ [ ]{| l |}]] ) 2(<3)◂5'(= a17◂ [ a9◂ [ ]{| l |}] ) } 6'(= a7◂ [ *{ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}] ) }
;; rsp=2 , %2022~0(<2)◂0(<2)◂0(<2)◂{ { 9'(= a8◂ [ a14◂ [ a9◂ [ ]{| l |}]] ) 4'(= a2◂ [ a21◂ [ a9◂ [ ]{| l |}]] ) 2(<3)◂5'(= a17◂ [ a9◂ [ ]{| l |}] ) } 6'(= a7◂ [ *{ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}] ) } %2012~1'(= r ) %2011~0'(= r ) %2006~8'(= a35◂ [ *{ }] ) 
; ∎ 0(<2)◂0(<2)◂0(<2)◂{ { 9'(= a8◂ [ a14◂ [ a9◂ [ ]{| l |}]] ) 4'(= a2◂ [ a21◂ [ a9◂ [ ]{| l |}]] ) 2(<3)◂5'(= a17◂ [ a9◂ [ ]{| l |}] ) } 6'(= a7◂ [ *{ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}] ) }
; .dlt.ptn 1'(= r )
; .dlt.ptn 0'(= r )
; .dlt.ptn 8'(= a35◂ [ *{ }] )
;	.dlt adt ⊢ _  
; .mov_ptn2 0(<2)◂0(<2)◂0(<2)◂{ { 9'(= a8◂ [ a14◂ [ a9◂ [ ]{| l |}]] ) 4'(= a2◂ [ a21◂ [ a9◂ [ ]{| l |}]] ) 2(<3)◂5'(= a17◂ [ a9◂ [ ]{| l |}] ) } 6'(= a7◂ [ *{ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}] ) } ⊢ 2'(= a3◂ [ a35◂ [ a7◂ [ *{ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}]]] )
; .mov_ptn 0(<2)◂0(<2)◂0(<2)◂{ { 9'(= a8◂ [ a14◂ [ a9◂ [ ]{| l |}]] ) 4'(= a2◂ [ a21◂ [ a9◂ [ ]{| l |}]] ) 2(<3)◂5'(= a17◂ [ a9◂ [ ]{| l |}] ) } 6'(= a7◂ [ *{ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}] ) } ⊢ 2'(= a3◂ [ a35◂ [ a7◂ [ *{ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}]]] )
	mov rax,[SS_RCD_2_TOP]
	mov rsi,[rax] 
	mov QWORD [SS_RCD_2_TOP],rsi
	mov QWORD [rax],0
	mov r13,rax
	mov rax,[SS_RCD_3_TOP]
	mov rsi,[rax] 
	mov QWORD [SS_RCD_3_TOP],rsi
	mov QWORD [rax],0
	mov r14,rax
	mov rax,QWORD [rsp-8+8*1]
	mov rdi,r14
	mov QWORD [rdi+8+8*0],rax
	mov rax,r10
	mov rdi,r14
	mov QWORD [rdi+8+8*1],rax
	mov rax,r11
	mov rdi,rax
	mov rax,[SS_LN_TOP]
	mov rsi,[rax]
	mov QWORD [SS_LN_TOP],rsi 
	mov QWORD [rax],0
	mov BYTE [rax+6],2
	mov QWORD [rax+8],rdi
	mov rdi,r14
	mov QWORD [rdi+8+8*2],rax
	mov rax,r14
	mov rdi,r13
	mov QWORD [rdi+8+8*0],rax
	mov rax,rcx
	mov rdi,r13
	mov QWORD [rdi+8+8*1],rax
	mov rax,r13
	mov BYTE [rax+6],0
	mov rdi,rax
	mov rax,[SS_LN_TOP]
	mov rsi,[rax]
	mov QWORD [SS_LN_TOP],rsi 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov rdi,rax
	mov rax,[SS_LN_TOP]
	mov rsi,[rax]
	mov QWORD [SS_LN_TOP],rsi 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	lea rsp,[rsp+8*2]
	jmp LB_3197
LB_3203:
;; ? 2'(= a35◂ [ *{ *{ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a17◂ [ a9◂ [ ]{| l |}]}a7◂ [ *{ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}]}] ) ⊢ 1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] )
;; rsp=2 , %2015~2'(= a2◂ [ *{ rr{| l |}}] ) %2012~1'(= r ) %2011~0'(= r ) %2007~9'(= a8◂ [ a14◂ [ a9◂ [ ]{| l |}]] ) %2006~8'(= a35◂ [ *{ }] ) 
; #192 2'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] )
;; rsp=2 , %2023~1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] ) %2012~1'(= r ) %2011~0'(= r ) %2007~9'(= a8◂ [ a14◂ [ a9◂ [ ]{| l |}]] ) %2006~8'(= a35◂ [ *{ }] ) 
; #22 1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 0(<2)◂1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] )
;; rsp=2 , %2024~0(<2)◂1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] ) %2012~1'(= r ) %2011~0'(= r ) %2007~9'(= a8◂ [ a14◂ [ a9◂ [ ]{| l |}]] ) %2006~8'(= a35◂ [ *{ }] ) 
; ∎ 0(<2)◂1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] )
; .dlt.ptn 1'(= r )
; .dlt.ptn 0'(= r )
; .dlt.ptn 9'(= a8◂ [ a14◂ [ a9◂ [ ]{| l |}]] )
;	.dlt adt ⊢ _  
; .dlt.ptn 8'(= a35◂ [ *{ }] )
;	.dlt adt ⊢ _  
; .mov_ptn2 0(<2)◂1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 2'(= a3◂ [ a35◂ [ a7◂ [ *{ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}]]] )
	mov r13,r8
; .mov_ptn 0(<2)◂1(<2)◂0'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 2'(= a3◂ [ a35◂ [ a7◂ [ *{ a8◂ [ a14◂ [ a9◂ [ ]{| l |}]]a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]a20◂ [ a9◂ [ ]{| l |}]}]]] )
	mov rax,r13
	mov rdi,rax
	mov rax,[SS_LN_TOP]
	mov rsi,[rax]
	mov QWORD [SS_LN_TOP],rsi 
	mov QWORD [rax],0
	mov BYTE [rax+6],1
	mov QWORD [rax+8],rdi
	mov rdi,rax
	mov rax,[SS_LN_TOP]
	mov rsi,[rax]
	mov QWORD [SS_LN_TOP],rsi 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	lea rsp,[rsp+8*2]
	jmp LB_3197
LB_3197:
	movzx rax,BYTE [r8+6]
	cmp rax,0
	jnz LB_3152
	pop r14
	pop r9
	add rsp,8
	pop r13
	ret
LB_3152:
	pop rdi
	pop r9 
	pop r14
	pop r13
	ret
ETR_238:
	mov r9,0x0000_ffff_ffff_ffff
	and r9,[r13]
	call GRM_238
	ret
GRM_238:
	sub rsp,32
	mov QWORD [rsp+24],r13
	mov QWORD [rsp+16],r14 
	mov QWORD [rsp+8],r9
	jmp LB_3206
LB_3205:
	add r14,1 
LB_3206:
	cmp r14,r9
	jge LB_3207
	movzx rax,BYTE [r13+8+r14]
	cmp rax,9 
	jz LB_3205
	cmp rax,32 
	jz LB_3205
LB_3207
	call GRM_239
	movzx rax,BYTE [r8+6]
	cmp rax,0
	jnz LB_3210
	jmp LB_3211
LB_3210:
	jmp LB_3208
LB_3211:
	lea rsp,[rsp-8*1]
	mov r8,[r8+8]
; .mov_ptn2 2'(= a21◂ [ a9◂ [ ]{| l |}] ) ⊢ 8'(= a21◂ [ a9◂ [ ]{| l |}] )
; .mov_ptn 2'(= a21◂ [ a9◂ [ ]{| l |}] ) ⊢ 8'(= a21◂ [ a9◂ [ ]{| l |}] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_3209
LB_3208:
	lea rsp,[rsp+8*0]
	jmp LB_3204
LB_3209:
	jmp LB_3213
LB_3212:
	add r14,1 
LB_3213:
	cmp r14,r9
	jge LB_3214
	movzx rax,BYTE [r13+8+r14]
	cmp rax,9 
	jz LB_3212
	cmp rax,32 
	jz LB_3212
LB_3214
	call GRM_240
	movzx rax,BYTE [r8+6]
	cmp rax,0
	jnz LB_3217
	jmp LB_3218
LB_3217:
	jmp LB_3215
LB_3218:
	lea rsp,[rsp-8*1]
	mov r8,[r8+8]
; .mov_ptn2 2'(= a2◂ [ a21◂ [ a9◂ [ ]{| l |}]] ) ⊢ 9'(= a2◂ [ a21◂ [ a9◂ [ ]{| l |}]] )
; .mov_ptn 2'(= a2◂ [ a21◂ [ a9◂ [ ]{| l |}]] ) ⊢ 9'(= a2◂ [ a21◂ [ a9◂ [ ]{| l |}]] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_3216
LB_3215:
	lea rsp,[rsp+8*1]
	jmp LB_3204
LB_3216:
	mov QWORD [rsp+8*2],r14
	mov r13,QWORD [rsp+16+8*2]
	mov r14,QWORD [rsp+8*2]
	jmp LB_3220
LB_3220
;; rsp=2 , %2028~1'(= r ) %2027~0'(= r ) %2026~9'(= a2◂ [ a21◂ [ a9◂ [ ]{| l |}]] ) %2025~8'(= a21◂ [ a9◂ [ ]{| l |}] ) 
; #21 { 8'(= a21◂ [ a9◂ [ ]{| l |}] ) 9'(= a2◂ [ a21◂ [ a9◂ [ ]{| l |}]] ) } ⊢ 0(<2)◂{ 8'(= a21◂ [ a9◂ [ ]{| l |}] ) 9'(= a2◂ [ a21◂ [ a9◂ [ ]{| l |}]] ) }
;; rsp=2 , %2029~0(<2)◂{ 8'(= a21◂ [ a9◂ [ ]{| l |}] ) 9'(= a2◂ [ a21◂ [ a9◂ [ ]{| l |}]] ) } %2028~1'(= r ) %2027~0'(= r ) 
; #193 0(<2)◂{ 8'(= a21◂ [ a9◂ [ ]{| l |}] ) 9'(= a2◂ [ a21◂ [ a9◂ [ ]{| l |}]] ) } ⊢ 0(<2)◂0(<2)◂{ 8'(= a21◂ [ a9◂ [ ]{| l |}] ) 9'(= a2◂ [ a21◂ [ a9◂ [ ]{| l |}]] ) }
;; rsp=2 , %2030~0(<2)◂0(<2)◂{ 8'(= a21◂ [ a9◂ [ ]{| l |}] ) 9'(= a2◂ [ a21◂ [ a9◂ [ ]{| l |}]] ) } %2028~1'(= r ) %2027~0'(= r ) 
; #22 0(<2)◂0(<2)◂{ 8'(= a21◂ [ a9◂ [ ]{| l |}] ) 9'(= a2◂ [ a21◂ [ a9◂ [ ]{| l |}]] ) } ⊢ 0(<2)◂0(<2)◂0(<2)◂{ 8'(= a21◂ [ a9◂ [ ]{| l |}] ) 9'(= a2◂ [ a21◂ [ a9◂ [ ]{| l |}]] ) }
;; rsp=2 , %2031~0(<2)◂0(<2)◂0(<2)◂{ 8'(= a21◂ [ a9◂ [ ]{| l |}] ) 9'(= a2◂ [ a21◂ [ a9◂ [ ]{| l |}]] ) } %2028~1'(= r ) %2027~0'(= r ) 
; ∎ 0(<2)◂0(<2)◂0(<2)◂{ 8'(= a21◂ [ a9◂ [ ]{| l |}] ) 9'(= a2◂ [ a21◂ [ a9◂ [ ]{| l |}]] ) }
; .dlt.ptn 1'(= r )
; .dlt.ptn 0'(= r )
; .mov_ptn2 0(<2)◂0(<2)◂0(<2)◂{ 8'(= a21◂ [ a9◂ [ ]{| l |}] ) 9'(= a2◂ [ a21◂ [ a9◂ [ ]{| l |}]] ) } ⊢ 2'(= a3◂ [ a35◂ [ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]]] )
; .mov_ptn 0(<2)◂0(<2)◂0(<2)◂{ 8'(= a21◂ [ a9◂ [ ]{| l |}] ) 9'(= a2◂ [ a21◂ [ a9◂ [ ]{| l |}]] ) } ⊢ 2'(= a3◂ [ a35◂ [ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]]] )
	mov rax,[SS_RCD_2_TOP]
	mov rsi,[rax] 
	mov QWORD [SS_RCD_2_TOP],rsi
	mov QWORD [rax],0
	mov r13,rax
	mov rax,QWORD [rsp-8+8*2]
	mov rdi,r13
	mov QWORD [rdi+8+8*0],rax
	mov rax,QWORD [rsp-8+8*1]
	mov rdi,r13
	mov QWORD [rdi+8+8*1],rax
	mov rax,r13
	mov BYTE [rax+6],0
	mov rdi,rax
	mov rax,[SS_LN_TOP]
	mov rsi,[rax]
	mov QWORD [SS_LN_TOP],rsi 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov rdi,rax
	mov rax,[SS_LN_TOP]
	mov rsi,[rax]
	mov QWORD [SS_LN_TOP],rsi 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	lea rsp,[rsp+8*2]
	jmp LB_3219
LB_3219:
	movzx rax,BYTE [r8+6]
	cmp rax,0
	jnz LB_3204
	pop r14
	pop r9
	add rsp,8
	pop r13
	ret
LB_3204:
	jmp LB_3223
LB_3222:
	add r14,1 
LB_3223:
	cmp r14,r9
	jge LB_3224
	movzx rax,BYTE [r13+8+r14]
	cmp rax,9 
	jz LB_3222
	cmp rax,32 
	jz LB_3222
LB_3224
	lea rax,[r14+1]
	cmp rax,r9
	jg LB_3227
	jmp LB_3228
LB_3227:
	mov r8,unt_1
	jmp LB_3225
LB_3228:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],46
	jnz LB_3229
	jmp LB_3230
LB_3229:
	mov r8,unt_1
	jmp LB_3225
LB_3230:
	add r14,1
	jmp LB_3226
LB_3225:
	lea rsp,[rsp+8*0]
	jmp LB_3221
LB_3226:
	jmp LB_3232
LB_3231:
	add r14,1 
LB_3232:
	cmp r14,r9
	jge LB_3233
	movzx rax,BYTE [r13+8+r14]
	cmp rax,9 
	jz LB_3231
	cmp rax,32 
	jz LB_3231
LB_3233
	lea rax,[r14+1]
	cmp rax,r9
	jg LB_3236
	jmp LB_3237
LB_3236:
	mov r8,unt_1
	jmp LB_3234
LB_3237:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],10
	jnz LB_3238
	jmp LB_3239
LB_3238:
	mov r8,unt_1
	jmp LB_3234
LB_3239:
	add r14,1
	jmp LB_3235
LB_3234:
	lea rsp,[rsp+8*0]
	jmp LB_3221
LB_3235:
	mov QWORD [rsp+8*0],r14
	mov r13,QWORD [rsp+16+8*0]
	mov r14,QWORD [rsp+8*0]
	jmp LB_3241
LB_3241
;; rsp=0 , %2033~1'(= r ) %2032~0'(= r ) 
; #20 { } ⊢ 1(<2)◂{ }
;; rsp=0 , %2034~1(<2)◂{ } %2033~1'(= r ) %2032~0'(= r ) 
; #193 1(<2)◂{ } ⊢ 0(<2)◂1(<2)◂{ }
;; rsp=0 , %2035~0(<2)◂1(<2)◂{ } %2033~1'(= r ) %2032~0'(= r ) 
; #22 0(<2)◂1(<2)◂{ } ⊢ 0(<2)◂0(<2)◂1(<2)◂{ }
;; rsp=0 , %2036~0(<2)◂0(<2)◂1(<2)◂{ } %2033~1'(= r ) %2032~0'(= r ) 
; ∎ 0(<2)◂0(<2)◂1(<2)◂{ }
; .dlt.ptn 1'(= r )
; .dlt.ptn 0'(= r )
; .mov_ptn2 0(<2)◂0(<2)◂1(<2)◂{ } ⊢ 2'(= a3◂ [ a35◂ [ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]]] )
; .mov_ptn 0(<2)◂0(<2)◂1(<2)◂{ } ⊢ 2'(= a3◂ [ a35◂ [ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]]] )
	mov rax,unt 
	mov rax,unt_1
	mov rdi,rax
	mov rax,[SS_LN_TOP]
	mov rsi,[rax]
	mov QWORD [SS_LN_TOP],rsi 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov rdi,rax
	mov rax,[SS_LN_TOP]
	mov rsi,[rax]
	mov QWORD [SS_LN_TOP],rsi 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	jmp LB_3240
LB_3240:
	movzx rax,BYTE [r8+6]
	cmp rax,0
	jnz LB_3221
	pop r14
	pop r9
	add rsp,8
	pop r13
	ret
LB_3221:
	jmp LB_3244
LB_3243:
	add r14,1 
LB_3244:
	cmp r14,r9
	jge LB_3245
	movzx rax,BYTE [r13+8+r14]
	cmp rax,9 
	jz LB_3243
	cmp rax,32 
	jz LB_3243
LB_3245
	call GRM_220
	movzx rax,BYTE [r8+6]
	cmp rax,0
	jnz LB_3248
	jmp LB_3249
LB_3248:
	jmp LB_3246
LB_3249:
	lea rsp,[rsp-8*2]
; .mov_ptn2 2'(= *{ rr} ) ⊢ { 8'(= r ) 9'(= r ) }
; .mov_ptn 2'(= *{ rr} ) ⊢ { 8'(= r ) 9'(= r ) }
	mov rdi,r8
	mov rdi,QWORD [rdi+8+8*0]
	mov r10,rdi
	mov QWORD [rsp-8+8*2],r10
	mov rdi,r8
	mov rdi,QWORD [rdi+8+8*1]
	mov r11,rdi
	mov QWORD [rsp-8+8*1],r11
	jmp LB_3247
LB_3246:
	lea rsp,[rsp+8*0]
	jmp LB_3242
LB_3247:
	mov QWORD [rsp+8*2],r14
	mov r13,QWORD [rsp+16+8*2]
	mov r14,QWORD [rsp+8*2]
	jmp LB_3251
LB_3251
;; rsp=2 , %2039~1'(= r ) %2038~0'(= r ) %2037~{ 8'(= r ) 9'(= r ) } 
	jmp LB_3252
LB_3252:
; $ %[ "mtc_line 0" ] ⊢ %[ "mtc_line 0" ]
;; rsp=2 , %2040~%[ "mtc_line 0" ] %2039~1'(= r ) %2038~0'(= r ) %2037~{ 8'(= r ) 9'(= r ) } 
; #20 { } ⊢ 1(<2)◂{ }
;; rsp=2 , %2041~1(<2)◂{ } %2040~%[ "mtc_line 0" ] %2039~1'(= r ) %2038~0'(= r ) %2037~{ 8'(= r ) 9'(= r ) } 
; #21 { { 0'(= r ) 1'(= r ) %[ "mtc_line 0" ] } 1(<2)◂{ } } ⊢ 0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "mtc_line 0" ] } 1(<2)◂{ } }
;; rsp=2 , %2042~0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "mtc_line 0" ] } 1(<2)◂{ } } %2037~{ 8'(= r ) 9'(= r ) } 
; #192 0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "mtc_line 0" ] } 1(<2)◂{ } } ⊢ 1(<2)◂0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "mtc_line 0" ] } 1(<2)◂{ } }
;; rsp=2 , %2043~1(<2)◂0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "mtc_line 0" ] } 1(<2)◂{ } } %2037~{ 8'(= r ) 9'(= r ) } 
; #22 1(<2)◂0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "mtc_line 0" ] } 1(<2)◂{ } } ⊢ 0(<2)◂1(<2)◂0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "mtc_line 0" ] } 1(<2)◂{ } }
;; rsp=2 , %2044~0(<2)◂1(<2)◂0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "mtc_line 0" ] } 1(<2)◂{ } } %2037~{ 8'(= r ) 9'(= r ) } 
; ∎ 0(<2)◂1(<2)◂0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "mtc_line 0" ] } 1(<2)◂{ } }
; .dlt.ptn { 8'(= r ) 9'(= r ) }
; .mov_ptn2 0(<2)◂1(<2)◂0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "mtc_line 0" ] } 1(<2)◂{ } } ⊢ 2'(= a3◂ [ a35◂ [ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]]] )
; .mov_ptn 0(<2)◂1(<2)◂0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "mtc_line 0" ] } 1(<2)◂{ } } ⊢ 2'(= a3◂ [ a35◂ [ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]]] )
	mov rax,[SS_RCD_2_TOP]
	mov rsi,[rax] 
	mov QWORD [SS_RCD_2_TOP],rsi
	mov QWORD [rax],0
	mov r9,rax
	mov rax,[SS_RCD_3_TOP]
	mov rsi,[rax] 
	mov QWORD [SS_RCD_3_TOP],rsi
	mov QWORD [rax],0
	mov r10,rax
	mov rax,r13
	mov rdi,r10
	mov QWORD [rdi+8+8*0],rax
	mov rax,r14
	mov rdi,r10
	mov QWORD [rdi+8+8*1],rax
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	mov rdi,1  
	mov rsi,24
	xor rax,rax
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call calloc
	mov rsp,QWORD [rsp_tmp]  
	mov rdi,10
	mov rsi,0x_40_00_0000_0000_0000
	or rdi,rsi
	mov QWORD [rax],rdi
	mov QWORD [rax+8*2],0
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	mov BYTE [rax+8+0],109
	mov BYTE [rax+8+1],116
	mov BYTE [rax+8+2],99
	mov BYTE [rax+8+3],95
	mov BYTE [rax+8+4],108
	mov BYTE [rax+8+5],105
	mov BYTE [rax+8+6],110
	mov BYTE [rax+8+7],101
	mov BYTE [rax+8+8],32
	mov BYTE [rax+8+9],48
	mov rdi,r10
	mov QWORD [rdi+8+8*2],rax
	mov rax,r10
	mov rdi,r9
	mov QWORD [rdi+8+8*0],rax
	mov rax,unt 
	mov rax,unt_1
	mov rdi,r9
	mov QWORD [rdi+8+8*1],rax
	mov rax,r9
	mov BYTE [rax+6],0
	mov rdi,rax
	mov rax,[SS_LN_TOP]
	mov rsi,[rax]
	mov QWORD [SS_LN_TOP],rsi 
	mov QWORD [rax],0
	mov BYTE [rax+6],1
	mov QWORD [rax+8],rdi
	mov rdi,rax
	mov rax,[SS_LN_TOP]
	mov rsi,[rax]
	mov QWORD [SS_LN_TOP],rsi 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	lea rsp,[rsp+8*2]
	jmp LB_3250
LB_3250:
	movzx rax,BYTE [r8+6]
	cmp rax,0
	jnz LB_3242
	pop r14
	pop r9
	add rsp,8
	pop r13
	ret
LB_3242:
	pop rdi
	pop r9 
	pop r14
	pop r13
	ret
ETR_239:
	mov r9,0x0000_ffff_ffff_ffff
	and r9,[r13]
	call GRM_239
	ret
GRM_239:
	sub rsp,32
	mov QWORD [rsp+24],r13
	mov QWORD [rsp+16],r14 
	mov QWORD [rsp+8],r9
	jmp LB_3255
LB_3254:
	add r14,1 
LB_3255:
	cmp r14,r9
	jge LB_3256
	movzx rax,BYTE [r13+8+r14]
	cmp rax,9 
	jz LB_3254
	cmp rax,32 
	jz LB_3254
LB_3256
	call GRM_201
	movzx rax,BYTE [r8+6]
	cmp rax,0
	jnz LB_3259
	jmp LB_3260
LB_3259:
	jmp LB_3257
LB_3260:
	lea rsp,[rsp-8*1]
	mov r8,[r8+8]
; .mov_ptn2 2'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) ⊢ 8'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] )
; .mov_ptn 2'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) ⊢ 8'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_3258
LB_3257:
	lea rsp,[rsp+8*0]
	jmp LB_3253
LB_3258:
	jmp LB_3262
LB_3261:
	add r14,1 
LB_3262:
	cmp r14,r9
	jge LB_3263
	movzx rax,BYTE [r13+8+r14]
	cmp rax,9 
	jz LB_3261
	cmp rax,32 
	jz LB_3261
LB_3263
	lea rax,[r14+3]
	cmp rax,r9
	jg LB_3266
	jmp LB_3267
LB_3266:
	mov r8,unt_1
	jmp LB_3264
LB_3267:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],226
	jnz LB_3268
	cmp BYTE [rdi+1],138
	jnz LB_3268
	cmp BYTE [rdi+2],162
	jnz LB_3268
	jmp LB_3269
LB_3268:
	mov r8,unt_1
	jmp LB_3264
LB_3269:
	add r14,3
	jmp LB_3265
LB_3264:
	lea rsp,[rsp+8*1]
	jmp LB_3253
LB_3265:
	jmp LB_3271
LB_3270:
	add r14,1 
LB_3271:
	cmp r14,r9
	jge LB_3272
	movzx rax,BYTE [r13+8+r14]
	cmp rax,9 
	jz LB_3270
	cmp rax,32 
	jz LB_3270
LB_3272
	call GRM_189
	movzx rax,BYTE [r8+6]
	cmp rax,0
	jnz LB_3275
	jmp LB_3276
LB_3275:
	jmp LB_3273
LB_3276:
	lea rsp,[rsp-8*1]
	mov r8,[r8+8]
; .mov_ptn2 2'(= a9◂ [ ] ) ⊢ 9'(= a9◂ [ ] )
; .mov_ptn 2'(= a9◂ [ ] ) ⊢ 9'(= a9◂ [ ] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_3274
LB_3273:
	lea rsp,[rsp+8*1]
	pop rdi
	pop r9 
	pop r14
	pop r13
	ret
LB_3274:
	jmp LB_3278
LB_3277:
	add r14,1 
LB_3278:
	cmp r14,r9
	jge LB_3279
	movzx rax,BYTE [r13+8+r14]
	cmp rax,9 
	jz LB_3277
	cmp rax,32 
	jz LB_3277
LB_3279
	lea rax,[r14+3]
	cmp rax,r9
	jg LB_3282
	jmp LB_3283
LB_3282:
	mov r8,unt_1
	jmp LB_3280
LB_3283:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],226
	jnz LB_3284
	cmp BYTE [rdi+1],151
	jnz LB_3284
	cmp BYTE [rdi+2],130
	jnz LB_3284
	jmp LB_3285
LB_3284:
	mov r8,unt_1
	jmp LB_3280
LB_3285:
	add r14,3
	jmp LB_3281
LB_3280:
	lea rsp,[rsp+8*2]
	pop rdi
	pop r9 
	pop r14
	pop r13
	ret
LB_3281:
	jmp LB_3287
LB_3286:
	add r14,1 
LB_3287:
	cmp r14,r9
	jge LB_3288
	movzx rax,BYTE [r13+8+r14]
	cmp rax,9 
	jz LB_3286
	cmp rax,32 
	jz LB_3286
LB_3288
	call GRM_197
	movzx rax,BYTE [r8+6]
	cmp rax,0
	jnz LB_3291
	jmp LB_3292
LB_3291:
	jmp LB_3289
LB_3292:
	lea rsp,[rsp-8*1]
	mov r8,[r8+8]
; .mov_ptn2 2'(= a8◂ [ a14◂ [ a9◂ [ ]{| l |}]] ) ⊢ 10'(= a8◂ [ a14◂ [ a9◂ [ ]{| l |}]] )
; .mov_ptn 2'(= a8◂ [ a14◂ [ a9◂ [ ]{| l |}]] ) ⊢ 10'(= a8◂ [ a14◂ [ a9◂ [ ]{| l |}]] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_3290
LB_3289:
	lea rsp,[rsp+8*2]
	pop rdi
	pop r9 
	pop r14
	pop r13
	ret
LB_3290:
	mov QWORD [rsp+8*3],r14
	mov r13,QWORD [rsp+16+8*3]
	mov r14,QWORD [rsp+8*3]
	jmp LB_3294
LB_3294
;; rsp=3 , %2049~1'(= r ) %2048~0'(= r ) %2047~10'(= a8◂ [ a14◂ [ a9◂ [ ]{| l |}]] ) %2046~9'(= a9◂ [ ] ) %2045~8'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) 
; #96 { 9'(= a9◂ [ ] ) 10'(= a8◂ [ a14◂ [ a9◂ [ ]{| l |}]] ) } ⊢ 0(<4)◂{ 9'(= a9◂ [ ] ) 10'(= a8◂ [ a14◂ [ a9◂ [ ]{| l |}]] ) }
;; rsp=3 , %2050~0(<4)◂{ 9'(= a9◂ [ ] ) 10'(= a8◂ [ a14◂ [ a9◂ [ ]{| l |}]] ) } %2049~1'(= r ) %2048~0'(= r ) %2045~8'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) 
; #78 0(<4)◂{ 9'(= a9◂ [ ] ) 10'(= a8◂ [ a14◂ [ a9◂ [ ]{| l |}]] ) } ⊢ 1(<2)◂0(<4)◂{ 9'(= a9◂ [ ] ) 10'(= a8◂ [ a14◂ [ a9◂ [ ]{| l |}]] ) }
;; rsp=3 , %2051~1(<2)◂0(<4)◂{ 9'(= a9◂ [ ] ) 10'(= a8◂ [ a14◂ [ a9◂ [ ]{| l |}]] ) } %2049~1'(= r ) %2048~0'(= r ) %2045~8'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) 
; #115 { 8'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) 1(<2)◂0(<4)◂{ 9'(= a9◂ [ ] ) 10'(= a8◂ [ a14◂ [ a9◂ [ ]{| l |}]] ) } } ⊢ 0(<3)◂{ 8'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) 1(<2)◂0(<4)◂{ 9'(= a9◂ [ ] ) 10'(= a8◂ [ a14◂ [ a9◂ [ ]{| l |}]] ) } }
;; rsp=3 , %2052~0(<3)◂{ 8'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) 1(<2)◂0(<4)◂{ 9'(= a9◂ [ ] ) 10'(= a8◂ [ a14◂ [ a9◂ [ ]{| l |}]] ) } } %2049~1'(= r ) %2048~0'(= r ) 
; #22 0(<3)◂{ 8'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) 1(<2)◂0(<4)◂{ 9'(= a9◂ [ ] ) 10'(= a8◂ [ a14◂ [ a9◂ [ ]{| l |}]] ) } } ⊢ 0(<2)◂0(<3)◂{ 8'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) 1(<2)◂0(<4)◂{ 9'(= a9◂ [ ] ) 10'(= a8◂ [ a14◂ [ a9◂ [ ]{| l |}]] ) } }
;; rsp=3 , %2053~0(<2)◂0(<3)◂{ 8'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) 1(<2)◂0(<4)◂{ 9'(= a9◂ [ ] ) 10'(= a8◂ [ a14◂ [ a9◂ [ ]{| l |}]] ) } } %2049~1'(= r ) %2048~0'(= r ) 
; ∎ 0(<2)◂0(<3)◂{ 8'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) 1(<2)◂0(<4)◂{ 9'(= a9◂ [ ] ) 10'(= a8◂ [ a14◂ [ a9◂ [ ]{| l |}]] ) } }
; .dlt.ptn 1'(= r )
; .dlt.ptn 0'(= r )
; .mov_ptn2 0(<2)◂0(<3)◂{ 8'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) 1(<2)◂0(<4)◂{ 9'(= a9◂ [ ] ) 10'(= a8◂ [ a14◂ [ a9◂ [ ]{| l |}]] ) } } ⊢ 2'(= a3◂ [ a21◂ [ a9◂ [ ]{| l |}]] )
; .mov_ptn 0(<2)◂0(<3)◂{ 8'(= a8◂ [ a12◂ [ a9◂ [ ]{| l |}]] ) 1(<2)◂0(<4)◂{ 9'(= a9◂ [ ] ) 10'(= a8◂ [ a14◂ [ a9◂ [ ]{| l |}]] ) } } ⊢ 2'(= a3◂ [ a21◂ [ a9◂ [ ]{| l |}]] )
	mov rax,[SS_RCD_2_TOP]
	mov rsi,[rax] 
	mov QWORD [SS_RCD_2_TOP],rsi
	mov QWORD [rax],0
	mov r13,rax
	mov rax,QWORD [rsp-8+8*3]
	mov rdi,r13
	mov QWORD [rdi+8+8*0],rax
	mov rax,[SS_RCD_2_TOP]
	mov rsi,[rax] 
	mov QWORD [SS_RCD_2_TOP],rsi
	mov QWORD [rax],0
	mov r14,rax
	mov rax,QWORD [rsp-8+8*2]
	mov rdi,r14
	mov QWORD [rdi+8+8*0],rax
	mov rax,QWORD [rsp-8+8*1]
	mov rdi,r14
	mov QWORD [rdi+8+8*1],rax
	mov rax,r14
	mov BYTE [rax+6],0
	mov rdi,rax
	mov rax,[SS_LN_TOP]
	mov rsi,[rax]
	mov QWORD [SS_LN_TOP],rsi 
	mov QWORD [rax],0
	mov BYTE [rax+6],1
	mov QWORD [rax+8],rdi
	mov rdi,r13
	mov QWORD [rdi+8+8*1],rax
	mov rax,r13
	mov BYTE [rax+6],0
	mov rdi,rax
	mov rax,[SS_LN_TOP]
	mov rsi,[rax]
	mov QWORD [SS_LN_TOP],rsi 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	lea rsp,[rsp+8*3]
	jmp LB_3293
LB_3293:
	movzx rax,BYTE [r8+6]
	cmp rax,0
	jnz LB_3253
	pop r14
	pop r9
	add rsp,8
	pop r13
	ret
LB_3253:
	jmp LB_3297
LB_3296:
	add r14,1 
LB_3297:
	cmp r14,r9
	jge LB_3298
	movzx rax,BYTE [r13+8+r14]
	cmp rax,9 
	jz LB_3296
	cmp rax,32 
	jz LB_3296
LB_3298
	call GRM_242
	movzx rax,BYTE [r8+6]
	cmp rax,0
	jnz LB_3301
	jmp LB_3302
LB_3301:
	jmp LB_3299
LB_3302:
	lea rsp,[rsp-8*1]
	mov r8,[r8+8]
; .mov_ptn2 2'(= a22◂ [ a9◂ [ ]{| l |}] ) ⊢ 8'(= a22◂ [ a9◂ [ ]{| l |}] )
; .mov_ptn 2'(= a22◂ [ a9◂ [ ]{| l |}] ) ⊢ 8'(= a22◂ [ a9◂ [ ]{| l |}] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_3300
LB_3299:
	lea rsp,[rsp+8*0]
	jmp LB_3295
LB_3300:
	jmp LB_3304
LB_3303:
	add r14,1 
LB_3304:
	cmp r14,r9
	jge LB_3305
	movzx rax,BYTE [r13+8+r14]
	cmp rax,9 
	jz LB_3303
	cmp rax,32 
	jz LB_3303
LB_3305
	lea rax,[r14+2]
	cmp rax,r9
	jg LB_3308
	jmp LB_3309
LB_3308:
	mov r8,unt_1
	jmp LB_3306
LB_3309:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],61
	jnz LB_3310
	cmp BYTE [rdi+1],60
	jnz LB_3310
	jmp LB_3311
LB_3310:
	mov r8,unt_1
	jmp LB_3306
LB_3311:
	add r14,2
	jmp LB_3307
LB_3306:
	lea rsp,[rsp+8*1]
	jmp LB_3295
LB_3307:
	jmp LB_3313
LB_3312:
	add r14,1 
LB_3313:
	cmp r14,r9
	jge LB_3314
	movzx rax,BYTE [r13+8+r14]
	cmp rax,9 
	jz LB_3312
	cmp rax,32 
	jz LB_3312
LB_3314
	call GRM_242
	movzx rax,BYTE [r8+6]
	cmp rax,0
	jnz LB_3317
	jmp LB_3318
LB_3317:
	jmp LB_3315
LB_3318:
	lea rsp,[rsp-8*1]
	mov r8,[r8+8]
; .mov_ptn2 2'(= a22◂ [ a9◂ [ ]{| l |}] ) ⊢ 9'(= a22◂ [ a9◂ [ ]{| l |}] )
; .mov_ptn 2'(= a22◂ [ a9◂ [ ]{| l |}] ) ⊢ 9'(= a22◂ [ a9◂ [ ]{| l |}] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_3316
LB_3315:
	lea rsp,[rsp+8*1]
	jmp LB_3295
LB_3316:
	mov QWORD [rsp+8*2],r14
	mov r13,QWORD [rsp+16+8*2]
	mov r14,QWORD [rsp+8*2]
	jmp LB_3320
LB_3320
;; rsp=2 , %2057~1'(= r ) %2056~0'(= r ) %2055~9'(= a22◂ [ a9◂ [ ]{| l |}] ) %2054~8'(= a22◂ [ a9◂ [ ]{| l |}] ) 
; #113 { 8'(= a22◂ [ a9◂ [ ]{| l |}] ) 9'(= a22◂ [ a9◂ [ ]{| l |}] ) } ⊢ 2(<3)◂{ 8'(= a22◂ [ a9◂ [ ]{| l |}] ) 9'(= a22◂ [ a9◂ [ ]{| l |}] ) }
;; rsp=2 , %2058~2(<3)◂{ 8'(= a22◂ [ a9◂ [ ]{| l |}] ) 9'(= a22◂ [ a9◂ [ ]{| l |}] ) } %2057~1'(= r ) %2056~0'(= r ) 
; #22 2(<3)◂{ 8'(= a22◂ [ a9◂ [ ]{| l |}] ) 9'(= a22◂ [ a9◂ [ ]{| l |}] ) } ⊢ 0(<2)◂2(<3)◂{ 8'(= a22◂ [ a9◂ [ ]{| l |}] ) 9'(= a22◂ [ a9◂ [ ]{| l |}] ) }
;; rsp=2 , %2059~0(<2)◂2(<3)◂{ 8'(= a22◂ [ a9◂ [ ]{| l |}] ) 9'(= a22◂ [ a9◂ [ ]{| l |}] ) } %2057~1'(= r ) %2056~0'(= r ) 
; ∎ 0(<2)◂2(<3)◂{ 8'(= a22◂ [ a9◂ [ ]{| l |}] ) 9'(= a22◂ [ a9◂ [ ]{| l |}] ) }
; .dlt.ptn 1'(= r )
; .dlt.ptn 0'(= r )
; .mov_ptn2 0(<2)◂2(<3)◂{ 8'(= a22◂ [ a9◂ [ ]{| l |}] ) 9'(= a22◂ [ a9◂ [ ]{| l |}] ) } ⊢ 2'(= a3◂ [ a21◂ [ a9◂ [ ]{| l |}]] )
; .mov_ptn 0(<2)◂2(<3)◂{ 8'(= a22◂ [ a9◂ [ ]{| l |}] ) 9'(= a22◂ [ a9◂ [ ]{| l |}] ) } ⊢ 2'(= a3◂ [ a21◂ [ a9◂ [ ]{| l |}]] )
	mov rax,[SS_RCD_2_TOP]
	mov rsi,[rax] 
	mov QWORD [SS_RCD_2_TOP],rsi
	mov QWORD [rax],0
	mov r13,rax
	mov rax,QWORD [rsp-8+8*2]
	mov rdi,r13
	mov QWORD [rdi+8+8*0],rax
	mov rax,QWORD [rsp-8+8*1]
	mov rdi,r13
	mov QWORD [rdi+8+8*1],rax
	mov rax,r13
	mov BYTE [rax+6],2
	mov rdi,rax
	mov rax,[SS_LN_TOP]
	mov rsi,[rax]
	mov QWORD [SS_LN_TOP],rsi 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	lea rsp,[rsp+8*2]
	jmp LB_3319
LB_3319:
	movzx rax,BYTE [r8+6]
	cmp rax,0
	jnz LB_3295
	pop r14
	pop r9
	add rsp,8
	pop r13
	ret
LB_3295:
	jmp LB_3323
LB_3322:
	add r14,1 
LB_3323:
	cmp r14,r9
	jge LB_3324
	movzx rax,BYTE [r13+8+r14]
	cmp rax,9 
	jz LB_3322
	cmp rax,32 
	jz LB_3322
LB_3324
	call GRM_242
	movzx rax,BYTE [r8+6]
	cmp rax,0
	jnz LB_3327
	jmp LB_3328
LB_3327:
	jmp LB_3325
LB_3328:
	lea rsp,[rsp-8*1]
	mov r8,[r8+8]
; .mov_ptn2 2'(= a22◂ [ a9◂ [ ]{| l |}] ) ⊢ 8'(= a22◂ [ a9◂ [ ]{| l |}] )
; .mov_ptn 2'(= a22◂ [ a9◂ [ ]{| l |}] ) ⊢ 8'(= a22◂ [ a9◂ [ ]{| l |}] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_3326
LB_3325:
	lea rsp,[rsp+8*0]
	jmp LB_3321
LB_3326:
	jmp LB_3330
LB_3329:
	add r14,1 
LB_3330:
	cmp r14,r9
	jge LB_3331
	movzx rax,BYTE [r13+8+r14]
	cmp rax,9 
	jz LB_3329
	cmp rax,32 
	jz LB_3329
LB_3331
	lea rax,[r14+1]
	cmp rax,r9
	jg LB_3334
	jmp LB_3335
LB_3334:
	mov r8,unt_1
	jmp LB_3332
LB_3335:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],61
	jnz LB_3336
	jmp LB_3337
LB_3336:
	mov r8,unt_1
	jmp LB_3332
LB_3337:
	add r14,1
	jmp LB_3333
LB_3332:
	lea rsp,[rsp+8*1]
	jmp LB_3321
LB_3333:
	jmp LB_3339
LB_3338:
	add r14,1 
LB_3339:
	cmp r14,r9
	jge LB_3340
	movzx rax,BYTE [r13+8+r14]
	cmp rax,9 
	jz LB_3338
	cmp rax,32 
	jz LB_3338
LB_3340
	call GRM_242
	movzx rax,BYTE [r8+6]
	cmp rax,0
	jnz LB_3343
	jmp LB_3344
LB_3343:
	jmp LB_3341
LB_3344:
	lea rsp,[rsp-8*1]
	mov r8,[r8+8]
; .mov_ptn2 2'(= a22◂ [ a9◂ [ ]{| l |}] ) ⊢ 9'(= a22◂ [ a9◂ [ ]{| l |}] )
; .mov_ptn 2'(= a22◂ [ a9◂ [ ]{| l |}] ) ⊢ 9'(= a22◂ [ a9◂ [ ]{| l |}] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_3342
LB_3341:
	lea rsp,[rsp+8*1]
	jmp LB_3321
LB_3342:
	mov QWORD [rsp+8*2],r14
	mov r13,QWORD [rsp+16+8*2]
	mov r14,QWORD [rsp+8*2]
	jmp LB_3346
LB_3346
;; rsp=2 , %2063~1'(= r ) %2062~0'(= r ) %2061~9'(= a22◂ [ a9◂ [ ]{| l |}] ) %2060~8'(= a22◂ [ a9◂ [ ]{| l |}] ) 
; #114 { 8'(= a22◂ [ a9◂ [ ]{| l |}] ) 9'(= a22◂ [ a9◂ [ ]{| l |}] ) } ⊢ 1(<3)◂{ 8'(= a22◂ [ a9◂ [ ]{| l |}] ) 9'(= a22◂ [ a9◂ [ ]{| l |}] ) }
;; rsp=2 , %2064~1(<3)◂{ 8'(= a22◂ [ a9◂ [ ]{| l |}] ) 9'(= a22◂ [ a9◂ [ ]{| l |}] ) } %2063~1'(= r ) %2062~0'(= r ) 
; #22 1(<3)◂{ 8'(= a22◂ [ a9◂ [ ]{| l |}] ) 9'(= a22◂ [ a9◂ [ ]{| l |}] ) } ⊢ 0(<2)◂1(<3)◂{ 8'(= a22◂ [ a9◂ [ ]{| l |}] ) 9'(= a22◂ [ a9◂ [ ]{| l |}] ) }
;; rsp=2 , %2065~0(<2)◂1(<3)◂{ 8'(= a22◂ [ a9◂ [ ]{| l |}] ) 9'(= a22◂ [ a9◂ [ ]{| l |}] ) } %2063~1'(= r ) %2062~0'(= r ) 
; ∎ 0(<2)◂1(<3)◂{ 8'(= a22◂ [ a9◂ [ ]{| l |}] ) 9'(= a22◂ [ a9◂ [ ]{| l |}] ) }
; .dlt.ptn 1'(= r )
; .dlt.ptn 0'(= r )
; .mov_ptn2 0(<2)◂1(<3)◂{ 8'(= a22◂ [ a9◂ [ ]{| l |}] ) 9'(= a22◂ [ a9◂ [ ]{| l |}] ) } ⊢ 2'(= a3◂ [ a21◂ [ a9◂ [ ]{| l |}]] )
; .mov_ptn 0(<2)◂1(<3)◂{ 8'(= a22◂ [ a9◂ [ ]{| l |}] ) 9'(= a22◂ [ a9◂ [ ]{| l |}] ) } ⊢ 2'(= a3◂ [ a21◂ [ a9◂ [ ]{| l |}]] )
	mov rax,[SS_RCD_2_TOP]
	mov rsi,[rax] 
	mov QWORD [SS_RCD_2_TOP],rsi
	mov QWORD [rax],0
	mov r13,rax
	mov rax,QWORD [rsp-8+8*2]
	mov rdi,r13
	mov QWORD [rdi+8+8*0],rax
	mov rax,QWORD [rsp-8+8*1]
	mov rdi,r13
	mov QWORD [rdi+8+8*1],rax
	mov rax,r13
	mov BYTE [rax+6],1
	mov rdi,rax
	mov rax,[SS_LN_TOP]
	mov rsi,[rax]
	mov QWORD [SS_LN_TOP],rsi 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	lea rsp,[rsp+8*2]
	jmp LB_3345
LB_3345:
	movzx rax,BYTE [r8+6]
	cmp rax,0
	jnz LB_3321
	pop r14
	pop r9
	add rsp,8
	pop r13
	ret
LB_3321:
	pop rdi
	pop r9 
	pop r14
	pop r13
	ret
ETR_240:
	mov r9,0x0000_ffff_ffff_ffff
	and r9,[r13]
	call GRM_240
	ret
GRM_240:
	sub rsp,32
	mov QWORD [rsp+24],r13
	mov QWORD [rsp+16],r14 
	mov QWORD [rsp+8],r9
	jmp LB_3349
LB_3348:
	add r14,1 
LB_3349:
	cmp r14,r9
	jge LB_3350
	movzx rax,BYTE [r13+8+r14]
	cmp rax,9 
	jz LB_3348
	cmp rax,32 
	jz LB_3348
LB_3350
	lea rax,[r14+1]
	cmp rax,r9
	jg LB_3353
	jmp LB_3354
LB_3353:
	mov r8,unt_1
	jmp LB_3351
LB_3354:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],59
	jnz LB_3355
	jmp LB_3356
LB_3355:
	mov r8,unt_1
	jmp LB_3351
LB_3356:
	add r14,1
	jmp LB_3352
LB_3351:
	lea rsp,[rsp+8*0]
	jmp LB_3347
LB_3352:
	jmp LB_3358
LB_3357:
	add r14,1 
LB_3358:
	cmp r14,r9
	jge LB_3359
	movzx rax,BYTE [r13+8+r14]
	cmp rax,9 
	jz LB_3357
	cmp rax,32 
	jz LB_3357
LB_3359
	call GRM_239
	movzx rax,BYTE [r8+6]
	cmp rax,0
	jnz LB_3362
	jmp LB_3363
LB_3362:
	jmp LB_3360
LB_3363:
	lea rsp,[rsp-8*1]
	mov r8,[r8+8]
; .mov_ptn2 2'(= a21◂ [ a9◂ [ ]{| l |}] ) ⊢ 8'(= a21◂ [ a9◂ [ ]{| l |}] )
; .mov_ptn 2'(= a21◂ [ a9◂ [ ]{| l |}] ) ⊢ 8'(= a21◂ [ a9◂ [ ]{| l |}] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_3361
LB_3360:
	lea rsp,[rsp+8*0]
	pop rdi
	pop r9 
	pop r14
	pop r13
	ret
LB_3361:
	jmp LB_3365
LB_3364:
	add r14,1 
LB_3365:
	cmp r14,r9
	jge LB_3366
	movzx rax,BYTE [r13+8+r14]
	cmp rax,9 
	jz LB_3364
	cmp rax,32 
	jz LB_3364
LB_3366
	call GRM_240
	movzx rax,BYTE [r8+6]
	cmp rax,0
	jnz LB_3369
	jmp LB_3370
LB_3369:
	jmp LB_3367
LB_3370:
	lea rsp,[rsp-8*1]
	mov r8,[r8+8]
; .mov_ptn2 2'(= a2◂ [ a21◂ [ a9◂ [ ]{| l |}]] ) ⊢ 9'(= a2◂ [ a21◂ [ a9◂ [ ]{| l |}]] )
; .mov_ptn 2'(= a2◂ [ a21◂ [ a9◂ [ ]{| l |}]] ) ⊢ 9'(= a2◂ [ a21◂ [ a9◂ [ ]{| l |}]] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_3368
LB_3367:
	lea rsp,[rsp+8*1]
	pop rdi
	pop r9 
	pop r14
	pop r13
	ret
LB_3368:
	mov QWORD [rsp+8*2],r14
	mov r13,QWORD [rsp+16+8*2]
	mov r14,QWORD [rsp+8*2]
	jmp LB_3372
LB_3372
;; rsp=2 , %2069~1'(= r ) %2068~0'(= r ) %2067~9'(= a2◂ [ a21◂ [ a9◂ [ ]{| l |}]] ) %2066~8'(= a21◂ [ a9◂ [ ]{| l |}] ) 
; #21 { 8'(= a21◂ [ a9◂ [ ]{| l |}] ) 9'(= a2◂ [ a21◂ [ a9◂ [ ]{| l |}]] ) } ⊢ 0(<2)◂{ 8'(= a21◂ [ a9◂ [ ]{| l |}] ) 9'(= a2◂ [ a21◂ [ a9◂ [ ]{| l |}]] ) }
;; rsp=2 , %2070~0(<2)◂{ 8'(= a21◂ [ a9◂ [ ]{| l |}] ) 9'(= a2◂ [ a21◂ [ a9◂ [ ]{| l |}]] ) } %2069~1'(= r ) %2068~0'(= r ) 
; #22 0(<2)◂{ 8'(= a21◂ [ a9◂ [ ]{| l |}] ) 9'(= a2◂ [ a21◂ [ a9◂ [ ]{| l |}]] ) } ⊢ 0(<2)◂0(<2)◂{ 8'(= a21◂ [ a9◂ [ ]{| l |}] ) 9'(= a2◂ [ a21◂ [ a9◂ [ ]{| l |}]] ) }
;; rsp=2 , %2071~0(<2)◂0(<2)◂{ 8'(= a21◂ [ a9◂ [ ]{| l |}] ) 9'(= a2◂ [ a21◂ [ a9◂ [ ]{| l |}]] ) } %2069~1'(= r ) %2068~0'(= r ) 
; ∎ 0(<2)◂0(<2)◂{ 8'(= a21◂ [ a9◂ [ ]{| l |}] ) 9'(= a2◂ [ a21◂ [ a9◂ [ ]{| l |}]] ) }
; .dlt.ptn 1'(= r )
; .dlt.ptn 0'(= r )
; .mov_ptn2 0(<2)◂0(<2)◂{ 8'(= a21◂ [ a9◂ [ ]{| l |}] ) 9'(= a2◂ [ a21◂ [ a9◂ [ ]{| l |}]] ) } ⊢ 2'(= a3◂ [ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]] )
; .mov_ptn 0(<2)◂0(<2)◂{ 8'(= a21◂ [ a9◂ [ ]{| l |}] ) 9'(= a2◂ [ a21◂ [ a9◂ [ ]{| l |}]] ) } ⊢ 2'(= a3◂ [ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]] )
	mov rax,[SS_RCD_2_TOP]
	mov rsi,[rax] 
	mov QWORD [SS_RCD_2_TOP],rsi
	mov QWORD [rax],0
	mov r13,rax
	mov rax,QWORD [rsp-8+8*2]
	mov rdi,r13
	mov QWORD [rdi+8+8*0],rax
	mov rax,QWORD [rsp-8+8*1]
	mov rdi,r13
	mov QWORD [rdi+8+8*1],rax
	mov rax,r13
	mov BYTE [rax+6],0
	mov rdi,rax
	mov rax,[SS_LN_TOP]
	mov rsi,[rax]
	mov QWORD [SS_LN_TOP],rsi 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	lea rsp,[rsp+8*2]
	jmp LB_3371
LB_3371:
	movzx rax,BYTE [r8+6]
	cmp rax,0
	jnz LB_3347
	pop r14
	pop r9
	add rsp,8
	pop r13
	ret
LB_3347:
	jmp LB_3375
LB_3374:
	add r14,1 
LB_3375:
	cmp r14,r9
	jge LB_3376
	movzx rax,BYTE [r13+8+r14]
	cmp rax,9 
	jz LB_3374
	cmp rax,32 
	jz LB_3374
LB_3376
	lea rax,[r14+1]
	cmp rax,r9
	jg LB_3379
	jmp LB_3380
LB_3379:
	mov r8,unt_1
	jmp LB_3377
LB_3380:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],46
	jnz LB_3381
	jmp LB_3382
LB_3381:
	mov r8,unt_1
	jmp LB_3377
LB_3382:
	add r14,1
	jmp LB_3378
LB_3377:
	lea rsp,[rsp+8*0]
	jmp LB_3373
LB_3378:
	jmp LB_3384
LB_3383:
	add r14,1 
LB_3384:
	cmp r14,r9
	jge LB_3385
	movzx rax,BYTE [r13+8+r14]
	cmp rax,9 
	jz LB_3383
	cmp rax,32 
	jz LB_3383
LB_3385
	lea rax,[r14+1]
	cmp rax,r9
	jg LB_3388
	jmp LB_3389
LB_3388:
	mov r8,unt_1
	jmp LB_3386
LB_3389:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],10
	jnz LB_3390
	jmp LB_3391
LB_3390:
	mov r8,unt_1
	jmp LB_3386
LB_3391:
	add r14,1
	jmp LB_3387
LB_3386:
	lea rsp,[rsp+8*0]
	jmp LB_3373
LB_3387:
	mov QWORD [rsp+8*0],r14
	mov r13,QWORD [rsp+16+8*0]
	mov r14,QWORD [rsp+8*0]
	jmp LB_3393
LB_3393
;; rsp=0 , %2073~1'(= r ) %2072~0'(= r ) 
; #20 { } ⊢ 1(<2)◂{ }
;; rsp=0 , %2074~1(<2)◂{ } %2073~1'(= r ) %2072~0'(= r ) 
; #22 1(<2)◂{ } ⊢ 0(<2)◂1(<2)◂{ }
;; rsp=0 , %2075~0(<2)◂1(<2)◂{ } %2073~1'(= r ) %2072~0'(= r ) 
; ∎ 0(<2)◂1(<2)◂{ }
; .dlt.ptn 1'(= r )
; .dlt.ptn 0'(= r )
; .mov_ptn2 0(<2)◂1(<2)◂{ } ⊢ 2'(= a3◂ [ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]] )
; .mov_ptn 0(<2)◂1(<2)◂{ } ⊢ 2'(= a3◂ [ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]] )
	mov rax,unt 
	mov rax,unt_1
	mov rdi,rax
	mov rax,[SS_LN_TOP]
	mov rsi,[rax]
	mov QWORD [SS_LN_TOP],rsi 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	jmp LB_3392
LB_3392:
	movzx rax,BYTE [r8+6]
	cmp rax,0
	jnz LB_3373
	pop r14
	pop r9
	add rsp,8
	pop r13
	ret
LB_3373:
	pop rdi
	pop r9 
	pop r14
	pop r13
	ret
ETR_241:
	mov r9,0x0000_ffff_ffff_ffff
	and r9,[r13]
	call GRM_241
	ret
GRM_241:
	sub rsp,32
	mov QWORD [rsp+24],r13
	mov QWORD [rsp+16],r14 
	mov QWORD [rsp+8],r9
	jmp LB_3396
LB_3395:
	add r14,1 
LB_3396:
	cmp r14,r9
	jge LB_3397
	movzx rax,BYTE [r13+8+r14]
	cmp rax,9 
	jz LB_3395
	cmp rax,32 
	jz LB_3395
LB_3397
	lea rax,[r14+1]
	cmp rax,r9
	jg LB_3400
	jmp LB_3401
LB_3400:
	mov r8,unt_1
	jmp LB_3398
LB_3401:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],59
	jnz LB_3402
	jmp LB_3403
LB_3402:
	mov r8,unt_1
	jmp LB_3398
LB_3403:
	add r14,1
	jmp LB_3399
LB_3398:
	lea rsp,[rsp+8*0]
	jmp LB_3394
LB_3399:
	jmp LB_3405
LB_3404:
	add r14,1 
LB_3405:
	cmp r14,r9
	jge LB_3406
	movzx rax,BYTE [r13+8+r14]
	cmp rax,9 
	jz LB_3404
	cmp rax,32 
	jz LB_3404
LB_3406
	call GRM_239
	movzx rax,BYTE [r8+6]
	cmp rax,0
	jnz LB_3409
	jmp LB_3410
LB_3409:
	jmp LB_3407
LB_3410:
	lea rsp,[rsp-8*1]
	mov r8,[r8+8]
; .mov_ptn2 2'(= a21◂ [ a9◂ [ ]{| l |}] ) ⊢ 8'(= a21◂ [ a9◂ [ ]{| l |}] )
; .mov_ptn 2'(= a21◂ [ a9◂ [ ]{| l |}] ) ⊢ 8'(= a21◂ [ a9◂ [ ]{| l |}] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_3408
LB_3407:
	lea rsp,[rsp+8*0]
	pop rdi
	pop r9 
	pop r14
	pop r13
	ret
LB_3408:
	jmp LB_3412
LB_3411:
	add r14,1 
LB_3412:
	cmp r14,r9
	jge LB_3413
	movzx rax,BYTE [r13+8+r14]
	cmp rax,9 
	jz LB_3411
	cmp rax,32 
	jz LB_3411
LB_3413
	call GRM_240
	movzx rax,BYTE [r8+6]
	cmp rax,0
	jnz LB_3416
	jmp LB_3417
LB_3416:
	jmp LB_3414
LB_3417:
	lea rsp,[rsp-8*1]
	mov r8,[r8+8]
; .mov_ptn2 2'(= a2◂ [ a21◂ [ a9◂ [ ]{| l |}]] ) ⊢ 9'(= a2◂ [ a21◂ [ a9◂ [ ]{| l |}]] )
; .mov_ptn 2'(= a2◂ [ a21◂ [ a9◂ [ ]{| l |}]] ) ⊢ 9'(= a2◂ [ a21◂ [ a9◂ [ ]{| l |}]] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_3415
LB_3414:
	lea rsp,[rsp+8*1]
	pop rdi
	pop r9 
	pop r14
	pop r13
	ret
LB_3415:
	mov QWORD [rsp+8*2],r14
	mov r13,QWORD [rsp+16+8*2]
	mov r14,QWORD [rsp+8*2]
	jmp LB_3419
LB_3419
;; rsp=2 , %2079~1'(= r ) %2078~0'(= r ) %2077~9'(= a2◂ [ a21◂ [ a9◂ [ ]{| l |}]] ) %2076~8'(= a21◂ [ a9◂ [ ]{| l |}] ) 
; #21 { 8'(= a21◂ [ a9◂ [ ]{| l |}] ) 9'(= a2◂ [ a21◂ [ a9◂ [ ]{| l |}]] ) } ⊢ 0(<2)◂{ 8'(= a21◂ [ a9◂ [ ]{| l |}] ) 9'(= a2◂ [ a21◂ [ a9◂ [ ]{| l |}]] ) }
;; rsp=2 , %2080~0(<2)◂{ 8'(= a21◂ [ a9◂ [ ]{| l |}] ) 9'(= a2◂ [ a21◂ [ a9◂ [ ]{| l |}]] ) } %2079~1'(= r ) %2078~0'(= r ) 
; #193 0(<2)◂{ 8'(= a21◂ [ a9◂ [ ]{| l |}] ) 9'(= a2◂ [ a21◂ [ a9◂ [ ]{| l |}]] ) } ⊢ 0(<2)◂0(<2)◂{ 8'(= a21◂ [ a9◂ [ ]{| l |}] ) 9'(= a2◂ [ a21◂ [ a9◂ [ ]{| l |}]] ) }
;; rsp=2 , %2081~0(<2)◂0(<2)◂{ 8'(= a21◂ [ a9◂ [ ]{| l |}] ) 9'(= a2◂ [ a21◂ [ a9◂ [ ]{| l |}]] ) } %2079~1'(= r ) %2078~0'(= r ) 
; #22 0(<2)◂0(<2)◂{ 8'(= a21◂ [ a9◂ [ ]{| l |}] ) 9'(= a2◂ [ a21◂ [ a9◂ [ ]{| l |}]] ) } ⊢ 0(<2)◂0(<2)◂0(<2)◂{ 8'(= a21◂ [ a9◂ [ ]{| l |}] ) 9'(= a2◂ [ a21◂ [ a9◂ [ ]{| l |}]] ) }
;; rsp=2 , %2082~0(<2)◂0(<2)◂0(<2)◂{ 8'(= a21◂ [ a9◂ [ ]{| l |}] ) 9'(= a2◂ [ a21◂ [ a9◂ [ ]{| l |}]] ) } %2079~1'(= r ) %2078~0'(= r ) 
; ∎ 0(<2)◂0(<2)◂0(<2)◂{ 8'(= a21◂ [ a9◂ [ ]{| l |}] ) 9'(= a2◂ [ a21◂ [ a9◂ [ ]{| l |}]] ) }
; .dlt.ptn 1'(= r )
; .dlt.ptn 0'(= r )
; .mov_ptn2 0(<2)◂0(<2)◂0(<2)◂{ 8'(= a21◂ [ a9◂ [ ]{| l |}] ) 9'(= a2◂ [ a21◂ [ a9◂ [ ]{| l |}]] ) } ⊢ 2'(= a3◂ [ a35◂ [ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]]] )
; .mov_ptn 0(<2)◂0(<2)◂0(<2)◂{ 8'(= a21◂ [ a9◂ [ ]{| l |}] ) 9'(= a2◂ [ a21◂ [ a9◂ [ ]{| l |}]] ) } ⊢ 2'(= a3◂ [ a35◂ [ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]]] )
	mov rax,[SS_RCD_2_TOP]
	mov rsi,[rax] 
	mov QWORD [SS_RCD_2_TOP],rsi
	mov QWORD [rax],0
	mov r13,rax
	mov rax,QWORD [rsp-8+8*2]
	mov rdi,r13
	mov QWORD [rdi+8+8*0],rax
	mov rax,QWORD [rsp-8+8*1]
	mov rdi,r13
	mov QWORD [rdi+8+8*1],rax
	mov rax,r13
	mov BYTE [rax+6],0
	mov rdi,rax
	mov rax,[SS_LN_TOP]
	mov rsi,[rax]
	mov QWORD [SS_LN_TOP],rsi 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov rdi,rax
	mov rax,[SS_LN_TOP]
	mov rsi,[rax]
	mov QWORD [SS_LN_TOP],rsi 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	lea rsp,[rsp+8*2]
	jmp LB_3418
LB_3418:
	movzx rax,BYTE [r8+6]
	cmp rax,0
	jnz LB_3394
	pop r14
	pop r9
	add rsp,8
	pop r13
	ret
LB_3394:
	jmp LB_3422
LB_3421:
	add r14,1 
LB_3422:
	cmp r14,r9
	jge LB_3423
	movzx rax,BYTE [r13+8+r14]
	cmp rax,9 
	jz LB_3421
	cmp rax,32 
	jz LB_3421
LB_3423
	lea rax,[r14+1]
	cmp rax,r9
	jg LB_3426
	jmp LB_3427
LB_3426:
	mov r8,unt_1
	jmp LB_3424
LB_3427:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],46
	jnz LB_3428
	jmp LB_3429
LB_3428:
	mov r8,unt_1
	jmp LB_3424
LB_3429:
	add r14,1
	jmp LB_3425
LB_3424:
	lea rsp,[rsp+8*0]
	jmp LB_3420
LB_3425:
	jmp LB_3431
LB_3430:
	add r14,1 
LB_3431:
	cmp r14,r9
	jge LB_3432
	movzx rax,BYTE [r13+8+r14]
	cmp rax,9 
	jz LB_3430
	cmp rax,32 
	jz LB_3430
LB_3432
	lea rax,[r14+1]
	cmp rax,r9
	jg LB_3435
	jmp LB_3436
LB_3435:
	mov r8,unt_1
	jmp LB_3433
LB_3436:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],10
	jnz LB_3437
	jmp LB_3438
LB_3437:
	mov r8,unt_1
	jmp LB_3433
LB_3438:
	add r14,1
	jmp LB_3434
LB_3433:
	lea rsp,[rsp+8*0]
	jmp LB_3420
LB_3434:
	mov QWORD [rsp+8*0],r14
	mov r13,QWORD [rsp+16+8*0]
	mov r14,QWORD [rsp+8*0]
	jmp LB_3440
LB_3440
;; rsp=0 , %2084~1'(= r ) %2083~0'(= r ) 
; #20 { } ⊢ 1(<2)◂{ }
;; rsp=0 , %2085~1(<2)◂{ } %2084~1'(= r ) %2083~0'(= r ) 
; #193 1(<2)◂{ } ⊢ 0(<2)◂1(<2)◂{ }
;; rsp=0 , %2086~0(<2)◂1(<2)◂{ } %2084~1'(= r ) %2083~0'(= r ) 
; #22 0(<2)◂1(<2)◂{ } ⊢ 0(<2)◂0(<2)◂1(<2)◂{ }
;; rsp=0 , %2087~0(<2)◂0(<2)◂1(<2)◂{ } %2084~1'(= r ) %2083~0'(= r ) 
; ∎ 0(<2)◂0(<2)◂1(<2)◂{ }
; .dlt.ptn 1'(= r )
; .dlt.ptn 0'(= r )
; .mov_ptn2 0(<2)◂0(<2)◂1(<2)◂{ } ⊢ 2'(= a3◂ [ a35◂ [ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]]] )
; .mov_ptn 0(<2)◂0(<2)◂1(<2)◂{ } ⊢ 2'(= a3◂ [ a35◂ [ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]]] )
	mov rax,unt 
	mov rax,unt_1
	mov rdi,rax
	mov rax,[SS_LN_TOP]
	mov rsi,[rax]
	mov QWORD [SS_LN_TOP],rsi 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov rdi,rax
	mov rax,[SS_LN_TOP]
	mov rsi,[rax]
	mov QWORD [SS_LN_TOP],rsi 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	jmp LB_3439
LB_3439:
	movzx rax,BYTE [r8+6]
	cmp rax,0
	jnz LB_3420
	pop r14
	pop r9
	add rsp,8
	pop r13
	ret
LB_3420:
	jmp LB_3443
LB_3442:
	add r14,1 
LB_3443:
	cmp r14,r9
	jge LB_3444
	movzx rax,BYTE [r13+8+r14]
	cmp rax,9 
	jz LB_3442
	cmp rax,32 
	jz LB_3442
LB_3444
	call GRM_220
	movzx rax,BYTE [r8+6]
	cmp rax,0
	jnz LB_3447
	jmp LB_3448
LB_3447:
	jmp LB_3445
LB_3448:
	lea rsp,[rsp-8*2]
; .mov_ptn2 2'(= *{ rr} ) ⊢ { 8'(= r ) 9'(= r ) }
; .mov_ptn 2'(= *{ rr} ) ⊢ { 8'(= r ) 9'(= r ) }
	mov rdi,r8
	mov rdi,QWORD [rdi+8+8*0]
	mov r10,rdi
	mov QWORD [rsp-8+8*2],r10
	mov rdi,r8
	mov rdi,QWORD [rdi+8+8*1]
	mov r11,rdi
	mov QWORD [rsp-8+8*1],r11
	jmp LB_3446
LB_3445:
	lea rsp,[rsp+8*0]
	jmp LB_3441
LB_3446:
	mov QWORD [rsp+8*2],r14
	mov r13,QWORD [rsp+16+8*2]
	mov r14,QWORD [rsp+8*2]
	jmp LB_3450
LB_3450
;; rsp=2 , %2090~1'(= r ) %2089~0'(= r ) %2088~{ 8'(= r ) 9'(= r ) } 
	jmp LB_3451
LB_3451:
; $ %[ "mtc_line_tl 0" ] ⊢ %[ "mtc_line_tl 0" ]
;; rsp=2 , %2091~%[ "mtc_line_tl 0" ] %2090~1'(= r ) %2089~0'(= r ) %2088~{ 8'(= r ) 9'(= r ) } 
; #20 { } ⊢ 1(<2)◂{ }
;; rsp=2 , %2092~1(<2)◂{ } %2091~%[ "mtc_line_tl 0" ] %2090~1'(= r ) %2089~0'(= r ) %2088~{ 8'(= r ) 9'(= r ) } 
; #21 { { 0'(= r ) 1'(= r ) %[ "mtc_line_tl 0" ] } 1(<2)◂{ } } ⊢ 0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "mtc_line_tl 0" ] } 1(<2)◂{ } }
;; rsp=2 , %2093~0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "mtc_line_tl 0" ] } 1(<2)◂{ } } %2088~{ 8'(= r ) 9'(= r ) } 
; #192 0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "mtc_line_tl 0" ] } 1(<2)◂{ } } ⊢ 1(<2)◂0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "mtc_line_tl 0" ] } 1(<2)◂{ } }
;; rsp=2 , %2094~1(<2)◂0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "mtc_line_tl 0" ] } 1(<2)◂{ } } %2088~{ 8'(= r ) 9'(= r ) } 
; #22 1(<2)◂0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "mtc_line_tl 0" ] } 1(<2)◂{ } } ⊢ 0(<2)◂1(<2)◂0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "mtc_line_tl 0" ] } 1(<2)◂{ } }
;; rsp=2 , %2095~0(<2)◂1(<2)◂0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "mtc_line_tl 0" ] } 1(<2)◂{ } } %2088~{ 8'(= r ) 9'(= r ) } 
; ∎ 0(<2)◂1(<2)◂0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "mtc_line_tl 0" ] } 1(<2)◂{ } }
; .dlt.ptn { 8'(= r ) 9'(= r ) }
; .mov_ptn2 0(<2)◂1(<2)◂0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "mtc_line_tl 0" ] } 1(<2)◂{ } } ⊢ 2'(= a3◂ [ a35◂ [ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]]] )
; .mov_ptn 0(<2)◂1(<2)◂0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "mtc_line_tl 0" ] } 1(<2)◂{ } } ⊢ 2'(= a3◂ [ a35◂ [ a2◂ [ a21◂ [ a9◂ [ ]{| l |}]]]] )
	mov rax,[SS_RCD_2_TOP]
	mov rsi,[rax] 
	mov QWORD [SS_RCD_2_TOP],rsi
	mov QWORD [rax],0
	mov r9,rax
	mov rax,[SS_RCD_3_TOP]
	mov rsi,[rax] 
	mov QWORD [SS_RCD_3_TOP],rsi
	mov QWORD [rax],0
	mov r10,rax
	mov rax,r13
	mov rdi,r10
	mov QWORD [rdi+8+8*0],rax
	mov rax,r14
	mov rdi,r10
	mov QWORD [rdi+8+8*1],rax
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	mov rdi,1  
	mov rsi,24
	xor rax,rax
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call calloc
	mov rsp,QWORD [rsp_tmp]  
	mov rdi,13
	mov rsi,0x_40_00_0000_0000_0000
	or rdi,rsi
	mov QWORD [rax],rdi
	mov QWORD [rax+8*2],0
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	mov BYTE [rax+8+0],109
	mov BYTE [rax+8+1],116
	mov BYTE [rax+8+2],99
	mov BYTE [rax+8+3],95
	mov BYTE [rax+8+4],108
	mov BYTE [rax+8+5],105
	mov BYTE [rax+8+6],110
	mov BYTE [rax+8+7],101
	mov BYTE [rax+8+8],95
	mov BYTE [rax+8+9],116
	mov BYTE [rax+8+10],108
	mov BYTE [rax+8+11],32
	mov BYTE [rax+8+12],48
	mov rdi,r10
	mov QWORD [rdi+8+8*2],rax
	mov rax,r10
	mov rdi,r9
	mov QWORD [rdi+8+8*0],rax
	mov rax,unt 
	mov rax,unt_1
	mov rdi,r9
	mov QWORD [rdi+8+8*1],rax
	mov rax,r9
	mov BYTE [rax+6],0
	mov rdi,rax
	mov rax,[SS_LN_TOP]
	mov rsi,[rax]
	mov QWORD [SS_LN_TOP],rsi 
	mov QWORD [rax],0
	mov BYTE [rax+6],1
	mov QWORD [rax+8],rdi
	mov rdi,rax
	mov rax,[SS_LN_TOP]
	mov rsi,[rax]
	mov QWORD [SS_LN_TOP],rsi 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	lea rsp,[rsp+8*2]
	jmp LB_3449
LB_3449:
	movzx rax,BYTE [r8+6]
	cmp rax,0
	jnz LB_3441
	pop r14
	pop r9
	add rsp,8
	pop r13
	ret
LB_3441:
	pop rdi
	pop r9 
	pop r14
	pop r13
	ret
ETR_242:
	mov r9,0x0000_ffff_ffff_ffff
	and r9,[r13]
	call GRM_242
	ret
GRM_242:
	sub rsp,32
	mov QWORD [rsp+24],r13
	mov QWORD [rsp+16],r14 
	mov QWORD [rsp+8],r9
	call GRM_74
	movzx rax,BYTE [r8+6]
	cmp rax,0
	jnz LB_3455
	jmp LB_3456
LB_3455:
	jmp LB_3453
LB_3456:
	lea rsp,[rsp-8*1]
; .mov_ptn2 2'(= {| l |} ) ⊢ 8'(= {| l |} )
; .mov_ptn 2'(= {| l |} ) ⊢ 8'(= {| l |} )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_3454
LB_3453:
	lea rsp,[rsp+8*0]
	jmp LB_3452
LB_3454:
	lea rax,[r14+1]
	cmp rax,r9
	jg LB_3459
	jmp LB_3460
LB_3459:
	mov r8,unt_1
	jmp LB_3457
LB_3460:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],39
	jnz LB_3461
	jmp LB_3462
LB_3461:
	mov r8,unt_1
	jmp LB_3457
LB_3462:
	add r14,1
	jmp LB_3458
LB_3457:
	lea rsp,[rsp+8*1]
	jmp LB_3452
LB_3458:
	mov QWORD [rsp+8*1],r14
	mov r13,QWORD [rsp+16+8*1]
	mov r14,QWORD [rsp+8*1]
	jmp LB_3464
LB_3464
;; rsp=1 , %2098~1'(= r ) %2097~0'(= r ) %2096~8'(= {| l |} ) 
; #111 8'(= {| l |} ) ⊢ 1(<2)◂8'(= {| l |} )
;; rsp=1 , %2099~1(<2)◂8'(= {| l |} ) %2098~1'(= r ) %2097~0'(= r ) 
; #22 1(<2)◂8'(= {| l |} ) ⊢ 0(<2)◂1(<2)◂8'(= {| l |} )
;; rsp=1 , %2100~0(<2)◂1(<2)◂8'(= {| l |} ) %2098~1'(= r ) %2097~0'(= r ) 
; ∎ 0(<2)◂1(<2)◂8'(= {| l |} )
; .dlt.ptn 1'(= r )
; .dlt.ptn 0'(= r )
; .mov_ptn2 0(<2)◂1(<2)◂8'(= {| l |} ) ⊢ 2'(= a3◂ [ a22◂ [ a9◂ [ ]{| l |}]] )
; .mov_ptn 0(<2)◂1(<2)◂8'(= {| l |} ) ⊢ 2'(= a3◂ [ a22◂ [ a9◂ [ ]{| l |}]] )
	mov rax,QWORD [rsp-8+8*1]
	mov BYTE [rax+6],1
	mov rdi,rax
	mov rax,[SS_LN_TOP]
	mov rsi,[rax]
	mov QWORD [SS_LN_TOP],rsi 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	lea rsp,[rsp+8*1]
	jmp LB_3463
LB_3463:
	movzx rax,BYTE [r8+6]
	cmp rax,0
	jnz LB_3452
	pop r14
	pop r9
	add rsp,8
	pop r13
	ret
LB_3452:
	call GRM_190
	movzx rax,BYTE [r8+6]
	cmp rax,0
	jnz LB_3468
	jmp LB_3469
LB_3468:
	jmp LB_3466
LB_3469:
	lea rsp,[rsp-8*1]
	mov r8,[r8+8]
; .mov_ptn2 2'(= a11◂ [ a9◂ [ ]] ) ⊢ 8'(= a11◂ [ a9◂ [ ]] )
; .mov_ptn 2'(= a11◂ [ a9◂ [ ]] ) ⊢ 8'(= a11◂ [ a9◂ [ ]] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_3467
LB_3466:
	lea rsp,[rsp+8*0]
	jmp LB_3465
LB_3467:
	mov QWORD [rsp+8*1],r14
	mov r13,QWORD [rsp+16+8*1]
	mov r14,QWORD [rsp+8*1]
	jmp LB_3471
LB_3471
;; rsp=1 , %2103~1'(= r ) %2102~0'(= r ) %2101~8'(= a11◂ [ a9◂ [ ]] ) 
; #112 8'(= a11◂ [ a9◂ [ ]] ) ⊢ 0(<2)◂8'(= a11◂ [ a9◂ [ ]] )
;; rsp=1 , %2104~0(<2)◂8'(= a11◂ [ a9◂ [ ]] ) %2103~1'(= r ) %2102~0'(= r ) 
; #22 0(<2)◂8'(= a11◂ [ a9◂ [ ]] ) ⊢ 0(<2)◂0(<2)◂8'(= a11◂ [ a9◂ [ ]] )
;; rsp=1 , %2105~0(<2)◂0(<2)◂8'(= a11◂ [ a9◂ [ ]] ) %2103~1'(= r ) %2102~0'(= r ) 
; ∎ 0(<2)◂0(<2)◂8'(= a11◂ [ a9◂ [ ]] )
; .dlt.ptn 1'(= r )
; .dlt.ptn 0'(= r )
; .mov_ptn2 0(<2)◂0(<2)◂8'(= a11◂ [ a9◂ [ ]] ) ⊢ 2'(= a3◂ [ a22◂ [ a9◂ [ ]{| l |}]] )
; .mov_ptn 0(<2)◂0(<2)◂8'(= a11◂ [ a9◂ [ ]] ) ⊢ 2'(= a3◂ [ a22◂ [ a9◂ [ ]{| l |}]] )
	mov rax,QWORD [rsp-8+8*1]
	mov rdi,rax
	mov rax,[SS_LN_TOP]
	mov rsi,[rax]
	mov QWORD [SS_LN_TOP],rsi 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov rdi,rax
	mov rax,[SS_LN_TOP]
	mov rsi,[rax]
	mov QWORD [SS_LN_TOP],rsi 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	lea rsp,[rsp+8*1]
	jmp LB_3470
LB_3470:
	movzx rax,BYTE [r8+6]
	cmp rax,0
	jnz LB_3465
	pop r14
	pop r9
	add rsp,8
	pop r13
	ret
LB_3465:
	pop rdi
	pop r9 
	pop r14
	pop r13
	ret
ETR_243:
	mov r9,0x0000_ffff_ffff_ffff
	and r9,[r13]
	call GRM_243
	ret
GRM_243:
	sub rsp,32
	mov QWORD [rsp+24],r13
	mov QWORD [rsp+16],r14 
	mov QWORD [rsp+8],r9
	jmp LB_3474
LB_3473:
	add r14,1 
LB_3474:
	cmp r14,r9
	jge LB_3475
	movzx rax,BYTE [r13+8+r14]
	cmp rax,9 
	jz LB_3473
	cmp rax,10 
	jz LB_3473
	cmp rax,32 
	jz LB_3473
LB_3475
	call GRM_217
	movzx rax,BYTE [r8+6]
	cmp rax,0
	jnz LB_3478
	jmp LB_3479
LB_3478:
	jmp LB_3476
LB_3479:
	lea rsp,[rsp-8*1]
	mov r8,[r8+8]
; .mov_ptn2 2'(= a35◂ [ *{ }] ) ⊢ 8'(= a35◂ [ *{ }] )
; .mov_ptn 2'(= a35◂ [ *{ }] ) ⊢ 8'(= a35◂ [ *{ }] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_3477
LB_3476:
	lea rsp,[rsp+8*0]
	jmp LB_3472
LB_3477:
	jmp LB_3481
LB_3480:
	add r14,1 
LB_3481:
	cmp r14,r9
	jge LB_3482
	movzx rax,BYTE [r13+8+r14]
	cmp rax,9 
	jz LB_3480
	cmp rax,10 
	jz LB_3480
	cmp rax,32 
	jz LB_3480
LB_3482
	call GRM_244
	movzx rax,BYTE [r8+6]
	cmp rax,0
	jnz LB_3485
	jmp LB_3486
LB_3485:
	jmp LB_3483
LB_3486:
	lea rsp,[rsp-8*1]
	mov r8,[r8+8]
; .mov_ptn2 2'(= a35◂ [ a31◂ [ ]] ) ⊢ 9'(= a35◂ [ a31◂ [ ]] )
; .mov_ptn 2'(= a35◂ [ a31◂ [ ]] ) ⊢ 9'(= a35◂ [ a31◂ [ ]] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_3484
LB_3483:
	lea rsp,[rsp+8*1]
	jmp LB_3472
LB_3484:
	jmp LB_3488
LB_3487:
	add r14,1 
LB_3488:
	cmp r14,r9
	jge LB_3489
	movzx rax,BYTE [r13+8+r14]
	cmp rax,9 
	jz LB_3487
	cmp rax,10 
	jz LB_3487
	cmp rax,32 
	jz LB_3487
LB_3489
	call GRM_243
	movzx rax,BYTE [r8+6]
	cmp rax,0
	jnz LB_3492
	jmp LB_3493
LB_3492:
	jmp LB_3490
LB_3493:
	lea rsp,[rsp-8*1]
	mov r8,[r8+8]
; .mov_ptn2 2'(= a35◂ [ a2◂ [ a31◂ [ ]]] ) ⊢ 10'(= a35◂ [ a2◂ [ a31◂ [ ]]] )
; .mov_ptn 2'(= a35◂ [ a2◂ [ a31◂ [ ]]] ) ⊢ 10'(= a35◂ [ a2◂ [ a31◂ [ ]]] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_3491
LB_3490:
	lea rsp,[rsp+8*2]
	jmp LB_3472
LB_3491:
	mov QWORD [rsp+8*3],r14
	mov r13,QWORD [rsp+16+8*3]
	mov r14,QWORD [rsp+8*3]
	jmp LB_3495
LB_3496: ; 194 { 0'(= a35◂ [ a31◂ [ ]] ) 1'(= a35◂ [ a2◂ [ a31◂ [ ]]] ) } ⊢ 0'(= a35◂ [ *{ a31◂ [ ]a2◂ [ a31◂ [ ]]}] ) : ({ _t35◂_t31 _t35◂_lst◂_t31 }→_t35◂{ _t31 _lst◂_t31 })
;; rsp=0 , %1131~1'(= a35◂ [ a2◂ [ a31◂ [ ]]] ) %1130~0'(= a35◂ [ a31◂ [ ]] ) 
;; ? 0'(= a35◂ [ a31◂ [ ]] ) ⊢ 0(<2)◂2'(= a31◂ [ ] )
	mov rdi,r13
	movzx rax,BYTE [rdi+6]
	cmp rax,0
	jnz LB_3497
	mov rax,QWORD [rdi+8]
	mov r8,rax
;; rsp=0 , %1133~2'(= a31◂ [ ] ) %1131~1'(= a35◂ [ a2◂ [ a31◂ [ ]]] ) 
;; ? 1'(= a35◂ [ a2◂ [ a31◂ [ ]]] ) ⊢ 0(<2)◂0'(= a2◂ [ a31◂ [ ]] )
	mov rdi,r14
	movzx rax,BYTE [rdi+6]
	cmp rax,0
	jnz LB_3498
	mov rax,QWORD [rdi+8]
	mov r13,rax
;; rsp=0 , %1135~0'(= a2◂ [ a31◂ [ ]] ) %1133~2'(= a31◂ [ ] ) 
; #193 { 2'(= a31◂ [ ] ) 0'(= a2◂ [ a31◂ [ ]] ) } ⊢ 0(<2)◂{ 2'(= a31◂ [ ] ) 0'(= a2◂ [ a31◂ [ ]] ) }
;; rsp=0 , %1136~0(<2)◂{ 2'(= a31◂ [ ] ) 0'(= a2◂ [ a31◂ [ ]] ) } 
; ∎ 0(<2)◂{ 2'(= a31◂ [ ] ) 0'(= a2◂ [ a31◂ [ ]] ) }
; .mov_ptn2 0(<2)◂{ 2'(= a31◂ [ ] ) 0'(= a2◂ [ a31◂ [ ]] ) } ⊢ 0'(= a35◂ [ *{ a31◂ [ ]a2◂ [ a31◂ [ ]]}] )
	mov r14,r13
; .mov_ptn 0(<2)◂{ 2'(= a31◂ [ ] ) 1'(= a2◂ [ a31◂ [ ]] ) } ⊢ 0'(= a35◂ [ *{ a31◂ [ ]a2◂ [ a31◂ [ ]]}] )
	mov rax,[SS_RCD_2_TOP]
	mov rsi,[rax] 
	mov QWORD [SS_RCD_2_TOP],rsi
	mov QWORD [rax],0
	mov r9,rax
	mov rax,r8
	mov rdi,r9
	mov QWORD [rdi+8+8*0],rax
	mov rax,r14
	mov rdi,r9
	mov QWORD [rdi+8+8*1],rax
	mov rax,r9
	mov BYTE [rax+6],0
	mov r13,rax
	ret
LB_3498:
;; ? 1'(= a35◂ [ a2◂ [ a31◂ [ ]]] ) ⊢ 1(<2)◂1'(= a2◂ [ *{ rr{| l |}}] )
;; rsp=0 , %1134~1'(= a2◂ [ *{ rr{| l |}}] ) %1133~2'(= a31◂ [ ] ) 
; #192 1'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 1(<2)◂1'(= a2◂ [ *{ rr{| l |}}] )
;; rsp=0 , %1137~1(<2)◂1'(= a2◂ [ *{ rr{| l |}}] ) %1133~2'(= a31◂ [ ] ) 
; ∎ 1(<2)◂1'(= a2◂ [ *{ rr{| l |}}] )
; .dlt.ptn 2'(= a31◂ [ ] )
;	.dlt adt ⊢ _  
; .mov_ptn2 1(<2)◂1'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 0'(= a35◂ [ *{ a31◂ [ ]a2◂ [ a31◂ [ ]]}] )
; .mov_ptn 1(<2)◂1'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 0'(= a35◂ [ *{ a31◂ [ ]a2◂ [ a31◂ [ ]]}] )
	mov rax,r14
	mov rdi,rax
	mov rax,[SS_LN_TOP]
	mov rsi,[rax]
	mov QWORD [SS_LN_TOP],rsi 
	mov QWORD [rax],0
	mov BYTE [rax+6],1
	mov QWORD [rax+8],rdi
	mov r13,rax
	ret
LB_3497:
;; ? 0'(= a35◂ [ a31◂ [ ]] ) ⊢ 1(<2)◂0'(= a2◂ [ *{ rr{| l |}}] )
;; rsp=0 , %1132~0'(= a2◂ [ *{ rr{| l |}}] ) %1131~1'(= a35◂ [ a2◂ [ a31◂ [ ]]] ) 
;; ? 1'(= a35◂ [ a2◂ [ a31◂ [ ]]] ) ⊢ 0(<2)◂2'(= a2◂ [ a31◂ [ ]] )
	mov rdi,r14
	movzx rax,BYTE [rdi+6]
	cmp rax,0
	jnz LB_3499
	mov rax,QWORD [rdi+8]
	mov r8,rax
;; rsp=0 , %1139~2'(= a2◂ [ a31◂ [ ]] ) %1132~0'(= a2◂ [ *{ rr{| l |}}] ) 
; #192 0'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 1(<2)◂0'(= a2◂ [ *{ rr{| l |}}] )
;; rsp=0 , %1140~1(<2)◂0'(= a2◂ [ *{ rr{| l |}}] ) %1139~2'(= a2◂ [ a31◂ [ ]] ) 
; ∎ 1(<2)◂0'(= a2◂ [ *{ rr{| l |}}] )
; .dlt.ptn 2'(= a2◂ [ a31◂ [ ]] )
;	.dlt adt ⊢ _  
; .mov_ptn2 1(<2)◂0'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 0'(= a35◂ [ *{ a31◂ [ ]a2◂ [ a31◂ [ ]]}] )
	mov r14,r13
; .mov_ptn 1(<2)◂1'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 0'(= a35◂ [ *{ a31◂ [ ]a2◂ [ a31◂ [ ]]}] )
	mov rax,r14
	mov rdi,rax
	mov rax,[SS_LN_TOP]
	mov rsi,[rax]
	mov QWORD [SS_LN_TOP],rsi 
	mov QWORD [rax],0
	mov BYTE [rax+6],1
	mov QWORD [rax+8],rdi
	mov r13,rax
	ret
LB_3499:
;; ? 1'(= a35◂ [ a2◂ [ a31◂ [ ]]] ) ⊢ 1(<2)◂1'(= a2◂ [ *{ rr{| l |}}] )
;; rsp=0 , %1138~1'(= a2◂ [ *{ rr{| l |}}] ) %1132~0'(= a2◂ [ *{ rr{| l |}}] ) 
; rsp_d=0, #53 { 0'(= a2◂ [ *{ rr{| l |}}] ) 1'(= a2◂ [ *{ rr{| l |}}] ) } ⊢ 0'(= a2◂ [ *{ rr{| l |}}] )
; .mov_ptn2 { 0'(= a2◂ [ *{ rr{| l |}}] ) 1'(= a2◂ [ *{ rr{| l |}}] ) } ⊢ { 0'(= a2◂ [ *{ rr{| l |}}] ) 1'(= a2◂ [ *{ rr{| l |}}] ) }
	call LB_1732

;; rsp=0 , %1141~0'(= a2◂ [ *{ rr{| l |}}] ) 
; #192 0'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 1(<2)◂0'(= a2◂ [ *{ rr{| l |}}] )
;; rsp=0 , %1142~1(<2)◂0'(= a2◂ [ *{ rr{| l |}}] ) 
; ∎ 1(<2)◂0'(= a2◂ [ *{ rr{| l |}}] )
; .mov_ptn2 1(<2)◂0'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 0'(= a35◂ [ *{ a31◂ [ ]a2◂ [ a31◂ [ ]]}] )
	mov r14,r13
; .mov_ptn 1(<2)◂1'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 0'(= a35◂ [ *{ a31◂ [ ]a2◂ [ a31◂ [ ]]}] )
	mov rax,r14
	mov rdi,rax
	mov rax,[SS_LN_TOP]
	mov rsi,[rax]
	mov QWORD [SS_LN_TOP],rsi 
	mov QWORD [rax],0
	mov BYTE [rax+6],1
	mov QWORD [rax+8],rdi
	mov r13,rax
	ret
LB_3495
;; rsp=3 , %2110~1'(= r ) %2109~0'(= r ) %2108~10'(= a35◂ [ a2◂ [ a31◂ [ ]]] ) %2107~9'(= a35◂ [ a31◂ [ ]] ) %2106~8'(= a35◂ [ *{ }] ) 
; rsp_d=0, #194 { 9'(= a35◂ [ a31◂ [ ]] ) 10'(= a35◂ [ a2◂ [ a31◂ [ ]]] ) } ⊢ 2'(= a35◂ [ *{ a31◂ [ ]a2◂ [ a31◂ [ ]]}] )
	lea rsp,[rsp-8*2]
	mov QWORD [rsp+8*0],r13
	mov QWORD [rsp+8*1],r14
; .mov_ptn2 { 9'(= a35◂ [ a31◂ [ ]] ) 10'(= a35◂ [ a2◂ [ a31◂ [ ]]] ) } ⊢ { 0'(= a35◂ [ a31◂ [ ]] ) 1'(= a35◂ [ a2◂ [ a31◂ [ ]]] ) }
; .mov_ptn 10'(= a35◂ [ a2◂ [ a31◂ [ ]]] ) ⊢ 1'(= a35◂ [ a2◂ [ a31◂ [ ]]] )
	mov rax,QWORD [rsp-8+8*3]
	mov r14,rax
; .mov_ptn 9'(= a35◂ [ a31◂ [ ]] ) ⊢ 0'(= a35◂ [ a31◂ [ ]] )
	mov rax,QWORD [rsp-8+8*4]
	mov r13,rax
	call LB_3496

	mov r14,QWORD [rsp-8+8*2]
	mov rax,QWORD [rsp-8+8*1]
	mov r8,r13
	mov r13,rax
	lea rsp,[rsp+8*4]
;; rsp=1 , %2111~2'(= a35◂ [ *{ a31◂ [ ]a2◂ [ a31◂ [ ]]}] ) %2110~1'(= r ) %2109~0'(= r ) %2106~8'(= a35◂ [ *{ }] ) 
;; ? 2'(= a35◂ [ *{ a31◂ [ ]a2◂ [ a31◂ [ ]]}] ) ⊢ 0(<2)◂{ 3'(= a31◂ [ ] ) 4'(= a2◂ [ a31◂ [ ]] ) }
	mov rdi,r8
	movzx rax,BYTE [rdi+6]
	cmp rax,0
	jnz LB_3500
	mov rdi,r8
	mov rdi,QWORD [rdi+8+8*0]
	mov r9,rdi
	mov rdi,r8
	mov rdi,QWORD [rdi+8+8*1]
	mov r10,rdi
;; rsp=1 , %2114~4'(= a2◂ [ a31◂ [ ]] ) %2113~3'(= a31◂ [ ] ) %2110~1'(= r ) %2109~0'(= r ) %2106~8'(= a35◂ [ *{ }] ) 
; #21 { 3'(= a31◂ [ ] ) 4'(= a2◂ [ a31◂ [ ]] ) } ⊢ 0(<2)◂{ 3'(= a31◂ [ ] ) 4'(= a2◂ [ a31◂ [ ]] ) }
;; rsp=1 , %2115~0(<2)◂{ 3'(= a31◂ [ ] ) 4'(= a2◂ [ a31◂ [ ]] ) } %2110~1'(= r ) %2109~0'(= r ) %2106~8'(= a35◂ [ *{ }] ) 
; #193 0(<2)◂{ 3'(= a31◂ [ ] ) 4'(= a2◂ [ a31◂ [ ]] ) } ⊢ 0(<2)◂0(<2)◂{ 3'(= a31◂ [ ] ) 4'(= a2◂ [ a31◂ [ ]] ) }
;; rsp=1 , %2116~0(<2)◂0(<2)◂{ 3'(= a31◂ [ ] ) 4'(= a2◂ [ a31◂ [ ]] ) } %2110~1'(= r ) %2109~0'(= r ) %2106~8'(= a35◂ [ *{ }] ) 
; #22 0(<2)◂0(<2)◂{ 3'(= a31◂ [ ] ) 4'(= a2◂ [ a31◂ [ ]] ) } ⊢ 0(<2)◂0(<2)◂0(<2)◂{ 3'(= a31◂ [ ] ) 4'(= a2◂ [ a31◂ [ ]] ) }
;; rsp=1 , %2117~0(<2)◂0(<2)◂0(<2)◂{ 3'(= a31◂ [ ] ) 4'(= a2◂ [ a31◂ [ ]] ) } %2110~1'(= r ) %2109~0'(= r ) %2106~8'(= a35◂ [ *{ }] ) 
; ∎ 0(<2)◂0(<2)◂0(<2)◂{ 3'(= a31◂ [ ] ) 4'(= a2◂ [ a31◂ [ ]] ) }
; .dlt.ptn 1'(= r )
; .dlt.ptn 0'(= r )
; .dlt.ptn 8'(= a35◂ [ *{ }] )
;	.dlt adt ⊢ _  
; .mov_ptn2 0(<2)◂0(<2)◂0(<2)◂{ 3'(= a31◂ [ ] ) 4'(= a2◂ [ a31◂ [ ]] ) } ⊢ 2'(= a3◂ [ a35◂ [ a2◂ [ a31◂ [ ]]]] )
; .mov_ptn 0(<2)◂0(<2)◂0(<2)◂{ 3'(= a31◂ [ ] ) 4'(= a2◂ [ a31◂ [ ]] ) } ⊢ 2'(= a3◂ [ a35◂ [ a2◂ [ a31◂ [ ]]]] )
	mov rax,[SS_RCD_2_TOP]
	mov rsi,[rax] 
	mov QWORD [SS_RCD_2_TOP],rsi
	mov QWORD [rax],0
	mov r13,rax
	mov rax,r9
	mov rdi,r13
	mov QWORD [rdi+8+8*0],rax
	mov rax,r10
	mov rdi,r13
	mov QWORD [rdi+8+8*1],rax
	mov rax,r13
	mov BYTE [rax+6],0
	mov rdi,rax
	mov rax,[SS_LN_TOP]
	mov rsi,[rax]
	mov QWORD [SS_LN_TOP],rsi 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov rdi,rax
	mov rax,[SS_LN_TOP]
	mov rsi,[rax]
	mov QWORD [SS_LN_TOP],rsi 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	lea rsp,[rsp+8*1]
	jmp LB_3494
LB_3500:
;; ? 2'(= a35◂ [ *{ a31◂ [ ]a2◂ [ a31◂ [ ]]}] ) ⊢ 1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] )
;; rsp=1 , %2112~2'(= a2◂ [ *{ rr{| l |}}] ) %2110~1'(= r ) %2109~0'(= r ) %2106~8'(= a35◂ [ *{ }] ) 
; #192 2'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] )
;; rsp=1 , %2118~1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] ) %2110~1'(= r ) %2109~0'(= r ) %2106~8'(= a35◂ [ *{ }] ) 
; #22 1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 0(<2)◂1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] )
;; rsp=1 , %2119~0(<2)◂1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] ) %2110~1'(= r ) %2109~0'(= r ) %2106~8'(= a35◂ [ *{ }] ) 
; ∎ 0(<2)◂1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] )
; .dlt.ptn 1'(= r )
; .dlt.ptn 0'(= r )
; .dlt.ptn 8'(= a35◂ [ *{ }] )
;	.dlt adt ⊢ _  
; .mov_ptn2 0(<2)◂1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 2'(= a3◂ [ a35◂ [ a2◂ [ a31◂ [ ]]]] )
	mov r13,r8
; .mov_ptn 0(<2)◂1(<2)◂0'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 2'(= a3◂ [ a35◂ [ a2◂ [ a31◂ [ ]]]] )
	mov rax,r13
	mov rdi,rax
	mov rax,[SS_LN_TOP]
	mov rsi,[rax]
	mov QWORD [SS_LN_TOP],rsi 
	mov QWORD [rax],0
	mov BYTE [rax+6],1
	mov QWORD [rax+8],rdi
	mov rdi,rax
	mov rax,[SS_LN_TOP]
	mov rsi,[rax]
	mov QWORD [SS_LN_TOP],rsi 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	lea rsp,[rsp+8*1]
	jmp LB_3494
LB_3494:
	movzx rax,BYTE [r8+6]
	cmp rax,0
	jnz LB_3472
	pop r14
	pop r9
	add rsp,8
	pop r13
	ret
LB_3472:
	jmp LB_3503
LB_3502:
	add r14,1 
LB_3503:
	cmp r14,r9
	jge LB_3504
	movzx rax,BYTE [r13+8+r14]
	cmp rax,9 
	jz LB_3502
	cmp rax,10 
	jz LB_3502
	cmp rax,32 
	jz LB_3502
LB_3504
	call GRM_217
	movzx rax,BYTE [r8+6]
	cmp rax,0
	jnz LB_3507
	jmp LB_3508
LB_3507:
	jmp LB_3505
LB_3508:
	lea rsp,[rsp-8*1]
	mov r8,[r8+8]
; .mov_ptn2 2'(= a35◂ [ *{ }] ) ⊢ 8'(= a35◂ [ *{ }] )
; .mov_ptn 2'(= a35◂ [ *{ }] ) ⊢ 8'(= a35◂ [ *{ }] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_3506
LB_3505:
	lea rsp,[rsp+8*0]
	jmp LB_3501
LB_3506:
	sub rsp,32
	mov QWORD [rsp+24],r13
	mov QWORD [rsp+16],r14 
	mov QWORD [rsp+8],r9
	jmp LB_3512
LB_3511:
	add r14,1 
LB_3512:
	cmp r14,r9
	jge LB_3513
	movzx rax,BYTE [r13+8+r14]
	cmp rax,9 
	jz LB_3511
	cmp rax,10 
	jz LB_3511
	cmp rax,32 
	jz LB_3511
LB_3513
	cmp r14,r9
	jge LB_3516
	jmp LB_3517
LB_3516:
	mov r8,unt_1 
	jmp LB_3514
LB_3517:
	movzx rdi,BYTE [r13+8+r14]
	push rdi 
	add r14,1 
	jmp LB_3515
LB_3514:
	lea rsp,[rsp+8*0]
	jmp LB_3510
LB_3515:
	mov QWORD [rsp+8*1],r14
	mov r13,QWORD [rsp+16+8*1]
	mov r14,QWORD [rsp+8*1]
	jmp LB_3519
LB_3519
;; rsp=1 , %2125~1'(= r ) %2124~0'(= r ) %2123~8'(= r ) 
	jmp LB_3520
LB_3520:
; $ %[ "file end" ] ⊢ %[ "file end" ]
;; rsp=1 , %2126~%[ "file end" ] %2125~1'(= r ) %2124~0'(= r ) %2123~8'(= r ) 
; _emt %[ "file end" ] ⊢ %[ "file end" ]
	jmp LB_3522
LB_3521: db 95,101,109,116,58,0
LB_3522:
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax  
	mov rdi,LB_3521
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call printf 
	mov rsp,QWORD [rsp_tmp]
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	jmp LB_3524
LB_3523: db 34,102,105,108,101,32,101,110,100,34,0
LB_3524:
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax  
	mov rdi,LB_3523
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call printf 
	mov rsp,QWORD [rsp_tmp]
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	jmp LB_3526
LB_3525: db 10,0
LB_3526:
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax  
	mov rdi,LB_3525
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call printf 
	mov rsp,QWORD [rsp_tmp]
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	jmp LB_3527
LB_3527:
;; rsp=1 , %2127~%[ "file end" ] %2125~1'(= r ) %2124~0'(= r ) %2123~8'(= r ) 
; #23 { } ⊢ 1(<2)◂{ }
;; rsp=1 , %2128~1(<2)◂{ } %2127~%[ "file end" ] %2125~1'(= r ) %2124~0'(= r ) %2123~8'(= r ) 
; ∎ 1(<2)◂{ }
; .dlt.ptn %[ "file end" ]
; .dlt.ptn 1'(= r )
; .dlt.ptn 0'(= r )
; .dlt.ptn 8'(= r )
; .mov_ptn2 1(<2)◂{ } ⊢ 2'(= a3◂ [ *{ }] )
; .mov_ptn 1(<2)◂{ } ⊢ 2'(= a3◂ [ *{ }] )
	mov rax,unt 
	mov rax,unt_1
	mov r8,rax
	lea rsp,[rsp+8*1]
	jmp LB_3518
LB_3518:
	movzx rax,BYTE [r8+6]
	cmp rax,0
	jnz LB_3510
	pop r14
	pop r9
	add rsp,8
	pop r13
	jmp LB_3509
LB_3510:
	mov QWORD [rsp+8*0],r14
	mov r13,QWORD [rsp+16+8*0]
	mov r14,QWORD [rsp+8*0]
	jmp LB_3530
LB_3530
;; rsp=0 , %2130~1'(= r ) %2129~0'(= r ) 
	jmp LB_3531
LB_3531:
; $ %[ "file end nl" ] ⊢ %[ "file end nl" ]
;; rsp=0 , %2131~%[ "file end nl" ] %2130~1'(= r ) %2129~0'(= r ) 
; _emt %[ "file end nl" ] ⊢ %[ "file end nl" ]
	jmp LB_3533
LB_3532: db 95,101,109,116,58,0
LB_3533:
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax  
	mov rdi,LB_3532
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call printf 
	mov rsp,QWORD [rsp_tmp]
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	jmp LB_3535
LB_3534: db 34,102,105,108,101,32,101,110,100,32,110,108,34,0
LB_3535:
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax  
	mov rdi,LB_3534
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call printf 
	mov rsp,QWORD [rsp_tmp]
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	jmp LB_3537
LB_3536: db 10,0
LB_3537:
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax  
	mov rdi,LB_3536
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call printf 
	mov rsp,QWORD [rsp_tmp]
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	jmp LB_3538
LB_3538:
;; rsp=0 , %2132~%[ "file end nl" ] %2130~1'(= r ) %2129~0'(= r ) 
; #22 { } ⊢ 0(<2)◂{ }
;; rsp=0 , %2133~0(<2)◂{ } %2132~%[ "file end nl" ] %2130~1'(= r ) %2129~0'(= r ) 
; ∎ 0(<2)◂{ }
; .dlt.ptn %[ "file end nl" ]
; .dlt.ptn 1'(= r )
; .dlt.ptn 0'(= r )
; .mov_ptn2 0(<2)◂{ } ⊢ 2'(= a3◂ [ *{ }] )
; .mov_ptn 0(<2)◂{ } ⊢ 2'(= a3◂ [ *{ }] )
	mov rax,unt 
	mov rax,unt_0
	mov r8,rax
	jmp LB_3529
LB_3529:
	movzx rax,BYTE [r8+6]
	cmp rax,0
	jnz LB_3528
	pop r14
	pop r9
	add rsp,8
	pop r13
	jmp LB_3509
LB_3528:
	pop rdi
	pop r9 
	pop r14
	pop r13
	jmp LB_3509
LB_3509:
	movzx rax,BYTE [r8+6]
	cmp rax,0
	jnz LB_3539
	jmp LB_3540
LB_3539:
	lea rsp,[rsp+8*1]
	add rsp,8
	pop r9 
	pop r14 
	pop r13
	ret
LB_3540:
	mov QWORD [rsp+8*1],r14
; .mov_ptn2 2'(= *{ } ) ⊢ { }
; .mov_ptn 2'(= *{ } ) ⊢ { }
	mov r13,QWORD [rsp+16+8*1]
	mov r14,QWORD [rsp+8*1]
	jmp LB_3542
LB_3542
;; rsp=1 , %2134~{ } %2122~1'(= r ) %2121~0'(= r ) %2120~8'(= a35◂ [ *{ }] ) 
; #20 { } ⊢ 1(<2)◂{ }
;; rsp=1 , %2135~1(<2)◂{ } %2134~{ } %2122~1'(= r ) %2121~0'(= r ) %2120~8'(= a35◂ [ *{ }] ) 
; #193 1(<2)◂{ } ⊢ 0(<2)◂1(<2)◂{ }
;; rsp=1 , %2136~0(<2)◂1(<2)◂{ } %2134~{ } %2122~1'(= r ) %2121~0'(= r ) %2120~8'(= a35◂ [ *{ }] ) 
; #22 0(<2)◂1(<2)◂{ } ⊢ 0(<2)◂0(<2)◂1(<2)◂{ }
;; rsp=1 , %2137~0(<2)◂0(<2)◂1(<2)◂{ } %2134~{ } %2122~1'(= r ) %2121~0'(= r ) %2120~8'(= a35◂ [ *{ }] ) 
; ∎ 0(<2)◂0(<2)◂1(<2)◂{ }
; .dlt.ptn { }
; .dlt.ptn 1'(= r )
; .dlt.ptn 0'(= r )
; .dlt.ptn 8'(= a35◂ [ *{ }] )
;	.dlt adt ⊢ _  
; .mov_ptn2 0(<2)◂0(<2)◂1(<2)◂{ } ⊢ 2'(= a3◂ [ a35◂ [ a2◂ [ a31◂ [ ]]]] )
; .mov_ptn 0(<2)◂0(<2)◂1(<2)◂{ } ⊢ 2'(= a3◂ [ a35◂ [ a2◂ [ a31◂ [ ]]]] )
	mov rax,unt 
	mov rax,unt_1
	mov rdi,rax
	mov rax,[SS_LN_TOP]
	mov rsi,[rax]
	mov QWORD [SS_LN_TOP],rsi 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov rdi,rax
	mov rax,[SS_LN_TOP]
	mov rsi,[rax]
	mov QWORD [SS_LN_TOP],rsi 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	lea rsp,[rsp+8*1]
	jmp LB_3541
LB_3541:
	movzx rax,BYTE [r8+6]
	cmp rax,0
	jnz LB_3501
	pop r14
	pop r9
	add rsp,8
	pop r13
	ret
LB_3501:
	pop rdi
	pop r9 
	pop r14
	pop r13
	ret
ETR_244:
	mov r9,0x0000_ffff_ffff_ffff
	and r9,[r13]
	call GRM_244
	ret
GRM_244:
	sub rsp,32
	mov QWORD [rsp+24],r13
	mov QWORD [rsp+16],r14 
	mov QWORD [rsp+8],r9
	jmp LB_3545
LB_3544:
	add r14,1 
LB_3545:
	cmp r14,r9
	jge LB_3546
	movzx rax,BYTE [r13+8+r14]
	cmp rax,9 
	jz LB_3544
	cmp rax,10 
	jz LB_3544
	cmp rax,32 
	jz LB_3544
LB_3546
	lea rax,[r14+7]
	cmp rax,r9
	jg LB_3549
	jmp LB_3550
LB_3549:
	mov r8,unt_1
	jmp LB_3547
LB_3550:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],194
	jnz LB_3551
	cmp BYTE [rdi+1],167
	jnz LB_3551
	cmp BYTE [rdi+2],194
	jnz LB_3551
	cmp BYTE [rdi+3],167
	jnz LB_3551
	cmp BYTE [rdi+4],43
	jnz LB_3551
	cmp BYTE [rdi+5],115
	jnz LB_3551
	cmp BYTE [rdi+6],56
	jnz LB_3551
	jmp LB_3552
LB_3551:
	mov r8,unt_1
	jmp LB_3547
LB_3552:
	add r14,7
	jmp LB_3548
LB_3547:
	lea rsp,[rsp+8*0]
	jmp LB_3543
LB_3548:
	sub rsp,32
	mov QWORD [rsp+24],r13
	mov QWORD [rsp+16],r14 
	mov QWORD [rsp+8],r9
	jmp LB_3556
LB_3555:
	add r14,1 
LB_3556:
	cmp r14,r9
	jge LB_3557
	movzx rax,BYTE [r13+8+r14]
	cmp rax,9 
	jz LB_3555
	cmp rax,10 
	jz LB_3555
	cmp rax,32 
	jz LB_3555
LB_3557
	call GRM_259
	movzx rax,BYTE [r8+6]
	cmp rax,0
	jnz LB_3560
	jmp LB_3561
LB_3560:
	jmp LB_3558
LB_3561:
	lea rsp,[rsp-8*2]
; .mov_ptn2 2'(= *{ {| l |}a24◂ [ a9◂ [ ]{| l |}]} ) ⊢ { 8'(= {| l |} ) 9'(= a24◂ [ a9◂ [ ]{| l |}] ) }
; .mov_ptn 2'(= *{ {| l |}a24◂ [ a9◂ [ ]{| l |}]} ) ⊢ { 8'(= {| l |} ) 9'(= a24◂ [ a9◂ [ ]{| l |}] ) }
	mov rdi,r8
	mov rdi,QWORD [rdi+8+8*0]
	mov r10,rdi
	mov QWORD [rsp-8+8*2],r10
	mov rdi,r8
	mov rdi,QWORD [rdi+8+8*1]
	mov r11,rdi
	mov QWORD [rsp-8+8*1],r11
	jmp LB_3559
LB_3558:
	lea rsp,[rsp+8*0]
	jmp LB_3554
LB_3559:
	jmp LB_3563
LB_3562:
	add r14,1 
LB_3563:
	cmp r14,r9
	jge LB_3564
	movzx rax,BYTE [r13+8+r14]
	cmp rax,9 
	jz LB_3562
	cmp rax,10 
	jz LB_3562
	cmp rax,32 
	jz LB_3562
LB_3564
	call GRM_260
	movzx rax,BYTE [r8+6]
	cmp rax,0
	jnz LB_3567
	jmp LB_3568
LB_3567:
	jmp LB_3565
LB_3568:
	lea rsp,[rsp-8*1]
	mov r8,[r8+8]
; .mov_ptn2 2'(= a2◂ [ *{ {| l |}a24◂ [ a9◂ [ ]{| l |}]}] ) ⊢ 10'(= a2◂ [ *{ {| l |}a24◂ [ a9◂ [ ]{| l |}]}] )
; .mov_ptn 2'(= a2◂ [ *{ {| l |}a24◂ [ a9◂ [ ]{| l |}]}] ) ⊢ 10'(= a2◂ [ *{ {| l |}a24◂ [ a9◂ [ ]{| l |}]}] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_3566
LB_3565:
	lea rsp,[rsp+8*2]
	jmp LB_3554
LB_3566:
	mov QWORD [rsp+8*3],r14
	mov r13,QWORD [rsp+16+8*3]
	mov r14,QWORD [rsp+8*3]
	jmp LB_3570
LB_3570
;; rsp=3 , %2143~1'(= r ) %2142~0'(= r ) %2141~10'(= a2◂ [ *{ {| l |}a24◂ [ a9◂ [ ]{| l |}]}] ) %2140~{ 8'(= {| l |} ) 9'(= a24◂ [ a9◂ [ ]{| l |}] ) } 
; #21 { { 8'(= {| l |} ) 9'(= a24◂ [ a9◂ [ ]{| l |}] ) } 10'(= a2◂ [ *{ {| l |}a24◂ [ a9◂ [ ]{| l |}]}] ) } ⊢ 0(<2)◂{ { 8'(= {| l |} ) 9'(= a24◂ [ a9◂ [ ]{| l |}] ) } 10'(= a2◂ [ *{ {| l |}a24◂ [ a9◂ [ ]{| l |}]}] ) }
;; rsp=3 , %2144~0(<2)◂{ { 8'(= {| l |} ) 9'(= a24◂ [ a9◂ [ ]{| l |}] ) } 10'(= a2◂ [ *{ {| l |}a24◂ [ a9◂ [ ]{| l |}]}] ) } %2143~1'(= r ) %2142~0'(= r ) 
; #175 0(<2)◂{ { 8'(= {| l |} ) 9'(= a24◂ [ a9◂ [ ]{| l |}] ) } 10'(= a2◂ [ *{ {| l |}a24◂ [ a9◂ [ ]{| l |}]}] ) } ⊢ 1(<6)◂0(<2)◂{ { 8'(= {| l |} ) 9'(= a24◂ [ a9◂ [ ]{| l |}] ) } 10'(= a2◂ [ *{ {| l |}a24◂ [ a9◂ [ ]{| l |}]}] ) }
;; rsp=3 , %2145~1(<6)◂0(<2)◂{ { 8'(= {| l |} ) 9'(= a24◂ [ a9◂ [ ]{| l |}] ) } 10'(= a2◂ [ *{ {| l |}a24◂ [ a9◂ [ ]{| l |}]}] ) } %2143~1'(= r ) %2142~0'(= r ) 
; #193 1(<6)◂0(<2)◂{ { 8'(= {| l |} ) 9'(= a24◂ [ a9◂ [ ]{| l |}] ) } 10'(= a2◂ [ *{ {| l |}a24◂ [ a9◂ [ ]{| l |}]}] ) } ⊢ 0(<2)◂1(<6)◂0(<2)◂{ { 8'(= {| l |} ) 9'(= a24◂ [ a9◂ [ ]{| l |}] ) } 10'(= a2◂ [ *{ {| l |}a24◂ [ a9◂ [ ]{| l |}]}] ) }
;; rsp=3 , %2146~0(<2)◂1(<6)◂0(<2)◂{ { 8'(= {| l |} ) 9'(= a24◂ [ a9◂ [ ]{| l |}] ) } 10'(= a2◂ [ *{ {| l |}a24◂ [ a9◂ [ ]{| l |}]}] ) } %2143~1'(= r ) %2142~0'(= r ) 
; #22 0(<2)◂1(<6)◂0(<2)◂{ { 8'(= {| l |} ) 9'(= a24◂ [ a9◂ [ ]{| l |}] ) } 10'(= a2◂ [ *{ {| l |}a24◂ [ a9◂ [ ]{| l |}]}] ) } ⊢ 0(<2)◂0(<2)◂1(<6)◂0(<2)◂{ { 8'(= {| l |} ) 9'(= a24◂ [ a9◂ [ ]{| l |}] ) } 10'(= a2◂ [ *{ {| l |}a24◂ [ a9◂ [ ]{| l |}]}] ) }
;; rsp=3 , %2147~0(<2)◂0(<2)◂1(<6)◂0(<2)◂{ { 8'(= {| l |} ) 9'(= a24◂ [ a9◂ [ ]{| l |}] ) } 10'(= a2◂ [ *{ {| l |}a24◂ [ a9◂ [ ]{| l |}]}] ) } %2143~1'(= r ) %2142~0'(= r ) 
; ∎ 0(<2)◂0(<2)◂1(<6)◂0(<2)◂{ { 8'(= {| l |} ) 9'(= a24◂ [ a9◂ [ ]{| l |}] ) } 10'(= a2◂ [ *{ {| l |}a24◂ [ a9◂ [ ]{| l |}]}] ) }
; .dlt.ptn 1'(= r )
; .dlt.ptn 0'(= r )
; .mov_ptn2 0(<2)◂0(<2)◂1(<6)◂0(<2)◂{ { 8'(= {| l |} ) 9'(= a24◂ [ a9◂ [ ]{| l |}] ) } 10'(= a2◂ [ *{ {| l |}a24◂ [ a9◂ [ ]{| l |}]}] ) } ⊢ 2'(= a3◂ [ a35◂ [ a31◂ [ ]]] )
; .mov_ptn 0(<2)◂0(<2)◂1(<6)◂0(<2)◂{ { 8'(= {| l |} ) 9'(= a24◂ [ a9◂ [ ]{| l |}] ) } 10'(= a2◂ [ *{ {| l |}a24◂ [ a9◂ [ ]{| l |}]}] ) } ⊢ 2'(= a3◂ [ a35◂ [ a31◂ [ ]]] )
	mov rax,[SS_RCD_2_TOP]
	mov rsi,[rax] 
	mov QWORD [SS_RCD_2_TOP],rsi
	mov QWORD [rax],0
	mov r13,rax
	mov rax,[SS_RCD_2_TOP]
	mov rsi,[rax] 
	mov QWORD [SS_RCD_2_TOP],rsi
	mov QWORD [rax],0
	mov r14,rax
	mov rax,QWORD [rsp-8+8*3]
	mov rdi,r14
	mov QWORD [rdi+8+8*0],rax
	mov rax,QWORD [rsp-8+8*2]
	mov rdi,r14
	mov QWORD [rdi+8+8*1],rax
	mov rax,r14
	mov rdi,r13
	mov QWORD [rdi+8+8*0],rax
	mov rax,QWORD [rsp-8+8*1]
	mov rdi,r13
	mov QWORD [rdi+8+8*1],rax
	mov rax,r13
	mov BYTE [rax+6],0
	mov rdi,rax
	mov rax,[SS_LN_TOP]
	mov rsi,[rax]
	mov QWORD [SS_LN_TOP],rsi 
	mov QWORD [rax],0
	mov BYTE [rax+6],1
	mov QWORD [rax+8],rdi
	mov rdi,rax
	mov rax,[SS_LN_TOP]
	mov rsi,[rax]
	mov QWORD [SS_LN_TOP],rsi 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov rdi,rax
	mov rax,[SS_LN_TOP]
	mov rsi,[rax]
	mov QWORD [SS_LN_TOP],rsi 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	lea rsp,[rsp+8*3]
	jmp LB_3569
LB_3569:
	movzx rax,BYTE [r8+6]
	cmp rax,0
	jnz LB_3554
	pop r14
	pop r9
	add rsp,8
	pop r13
	jmp LB_3553
LB_3554:
	jmp LB_3573
LB_3572:
	add r14,1 
LB_3573:
	cmp r14,r9
	jge LB_3574
	movzx rax,BYTE [r13+8+r14]
	cmp rax,9 
	jz LB_3572
	cmp rax,10 
	jz LB_3572
	cmp rax,32 
	jz LB_3572
LB_3574
	call GRM_245
	movzx rax,BYTE [r8+6]
	cmp rax,0
	jnz LB_3577
	jmp LB_3578
LB_3577:
	jmp LB_3575
LB_3578:
; .mov_ptn2 2'(= *{ } ) ⊢ { }
; .mov_ptn 2'(= *{ } ) ⊢ { }
	jmp LB_3576
LB_3575:
	lea rsp,[rsp+8*0]
	jmp LB_3571
LB_3576:
	mov QWORD [rsp+8*0],r14
	mov r13,QWORD [rsp+16+8*0]
	mov r14,QWORD [rsp+8*0]
	jmp LB_3580
LB_3580
;; rsp=0 , %2150~1'(= r ) %2149~0'(= r ) %2148~{ } 
; #20 { } ⊢ 1(<2)◂{ }
;; rsp=0 , %2151~1(<2)◂{ } %2150~1'(= r ) %2149~0'(= r ) %2148~{ } 
	jmp LB_3581
LB_3581:
; $ %[ "grb_etr 1" ] ⊢ %[ "grb_etr 1" ]
;; rsp=0 , %2152~%[ "grb_etr 1" ] %2151~1(<2)◂{ } %2150~1'(= r ) %2149~0'(= r ) %2148~{ } 
; #21 { { 0'(= r ) 1'(= r ) %[ "grb_etr 1" ] } 1(<2)◂{ } } ⊢ 0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "grb_etr 1" ] } 1(<2)◂{ } }
;; rsp=0 , %2153~0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "grb_etr 1" ] } 1(<2)◂{ } } %2148~{ } 
; #192 0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "grb_etr 1" ] } 1(<2)◂{ } } ⊢ 1(<2)◂0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "grb_etr 1" ] } 1(<2)◂{ } }
;; rsp=0 , %2154~1(<2)◂0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "grb_etr 1" ] } 1(<2)◂{ } } %2148~{ } 
; #22 1(<2)◂0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "grb_etr 1" ] } 1(<2)◂{ } } ⊢ 0(<2)◂1(<2)◂0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "grb_etr 1" ] } 1(<2)◂{ } }
;; rsp=0 , %2155~0(<2)◂1(<2)◂0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "grb_etr 1" ] } 1(<2)◂{ } } %2148~{ } 
; ∎ 0(<2)◂1(<2)◂0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "grb_etr 1" ] } 1(<2)◂{ } }
; .dlt.ptn { }
; .mov_ptn2 0(<2)◂1(<2)◂0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "grb_etr 1" ] } 1(<2)◂{ } } ⊢ 2'(= a3◂ [ a35◂ [ a31◂ [ ]]] )
; .mov_ptn 0(<2)◂1(<2)◂0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "grb_etr 1" ] } 1(<2)◂{ } } ⊢ 2'(= a3◂ [ a35◂ [ a31◂ [ ]]] )
	mov rax,[SS_RCD_2_TOP]
	mov rsi,[rax] 
	mov QWORD [SS_RCD_2_TOP],rsi
	mov QWORD [rax],0
	mov r9,rax
	mov rax,[SS_RCD_3_TOP]
	mov rsi,[rax] 
	mov QWORD [SS_RCD_3_TOP],rsi
	mov QWORD [rax],0
	mov r10,rax
	mov rax,r13
	mov rdi,r10
	mov QWORD [rdi+8+8*0],rax
	mov rax,r14
	mov rdi,r10
	mov QWORD [rdi+8+8*1],rax
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	mov rdi,1  
	mov rsi,24
	xor rax,rax
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call calloc
	mov rsp,QWORD [rsp_tmp]  
	mov rdi,9
	mov rsi,0x_40_00_0000_0000_0000
	or rdi,rsi
	mov QWORD [rax],rdi
	mov QWORD [rax+8*2],0
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	mov BYTE [rax+8+0],103
	mov BYTE [rax+8+1],114
	mov BYTE [rax+8+2],98
	mov BYTE [rax+8+3],95
	mov BYTE [rax+8+4],101
	mov BYTE [rax+8+5],116
	mov BYTE [rax+8+6],114
	mov BYTE [rax+8+7],32
	mov BYTE [rax+8+8],49
	mov rdi,r10
	mov QWORD [rdi+8+8*2],rax
	mov rax,r10
	mov rdi,r9
	mov QWORD [rdi+8+8*0],rax
	mov rax,unt 
	mov rax,unt_1
	mov rdi,r9
	mov QWORD [rdi+8+8*1],rax
	mov rax,r9
	mov BYTE [rax+6],0
	mov rdi,rax
	mov rax,[SS_LN_TOP]
	mov rsi,[rax]
	mov QWORD [SS_LN_TOP],rsi 
	mov QWORD [rax],0
	mov BYTE [rax+6],1
	mov QWORD [rax+8],rdi
	mov rdi,rax
	mov rax,[SS_LN_TOP]
	mov rsi,[rax]
	mov QWORD [SS_LN_TOP],rsi 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	jmp LB_3579
LB_3579:
	movzx rax,BYTE [r8+6]
	cmp rax,0
	jnz LB_3571
	pop r14
	pop r9
	add rsp,8
	pop r13
	jmp LB_3553
LB_3571:
	pop rdi
	pop r9 
	pop r14
	pop r13
	jmp LB_3553
LB_3553:
	movzx rax,BYTE [r8+6]
	cmp rax,0
	jnz LB_3582
	jmp LB_3583
LB_3582:
	lea rsp,[rsp+8*0]
	add rsp,8
	pop r9 
	pop r14 
	pop r13
	ret
LB_3583:
	mov QWORD [rsp+8*0],r14
	mov r8,[r8+8]
; .mov_ptn2 2'(= a35◂ [ a31◂ [ ]] ) ⊢ 3'(= a35◂ [ a31◂ [ ]] )
	mov r10,r9
; .mov_ptn 2'(= a35◂ [ a31◂ [ ]] ) ⊢ 3'(= a35◂ [ a31◂ [ ]] )
	mov rax,r8
	mov r9,rax
	mov r13,QWORD [rsp+16+8*0]
	mov r14,QWORD [rsp+8*0]
	jmp LB_3585
LB_3585
;; rsp=0 , %2156~3'(= a35◂ [ a31◂ [ ]] ) %2139~1'(= r ) %2138~0'(= r ) 
; #22 3'(= a35◂ [ a31◂ [ ]] ) ⊢ 0(<2)◂3'(= a35◂ [ a31◂ [ ]] )
;; rsp=0 , %2157~0(<2)◂3'(= a35◂ [ a31◂ [ ]] ) %2139~1'(= r ) %2138~0'(= r ) 
; ∎ 0(<2)◂3'(= a35◂ [ a31◂ [ ]] )
; .dlt.ptn 1'(= r )
; .dlt.ptn 0'(= r )
; .mov_ptn2 0(<2)◂3'(= a35◂ [ a31◂ [ ]] ) ⊢ 2'(= a3◂ [ a35◂ [ a31◂ [ ]]] )
; .mov_ptn 0(<2)◂3'(= a35◂ [ a31◂ [ ]] ) ⊢ 2'(= a3◂ [ a35◂ [ a31◂ [ ]]] )
	mov rax,r9
	mov rdi,rax
	mov rax,[SS_LN_TOP]
	mov rsi,[rax]
	mov QWORD [SS_LN_TOP],rsi 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	jmp LB_3584
LB_3584:
	movzx rax,BYTE [r8+6]
	cmp rax,0
	jnz LB_3543
	pop r14
	pop r9
	add rsp,8
	pop r13
	ret
LB_3543:
	jmp LB_3588
LB_3587:
	add r14,1 
LB_3588:
	cmp r14,r9
	jge LB_3589
	movzx rax,BYTE [r13+8+r14]
	cmp rax,9 
	jz LB_3587
	cmp rax,10 
	jz LB_3587
	cmp rax,32 
	jz LB_3587
LB_3589
	call GRM_217
	movzx rax,BYTE [r8+6]
	cmp rax,0
	jnz LB_3592
	jmp LB_3593
LB_3592:
	jmp LB_3590
LB_3593:
	lea rsp,[rsp-8*1]
	mov r8,[r8+8]
; .mov_ptn2 2'(= a35◂ [ *{ }] ) ⊢ 8'(= a35◂ [ *{ }] )
; .mov_ptn 2'(= a35◂ [ *{ }] ) ⊢ 8'(= a35◂ [ *{ }] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_3591
LB_3590:
	lea rsp,[rsp+8*0]
	jmp LB_3586
LB_3591:
	jmp LB_3595
LB_3594:
	add r14,1 
LB_3595:
	cmp r14,r9
	jge LB_3596
	movzx rax,BYTE [r13+8+r14]
	cmp rax,9 
	jz LB_3594
	cmp rax,10 
	jz LB_3594
	cmp rax,32 
	jz LB_3594
LB_3596
	lea rax,[r14+4]
	cmp rax,r9
	jg LB_3599
	jmp LB_3600
LB_3599:
	mov r8,unt_1
	jmp LB_3597
LB_3600:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],194
	jnz LB_3601
	cmp BYTE [rdi+1],167
	jnz LB_3601
	cmp BYTE [rdi+2],194
	jnz LB_3601
	cmp BYTE [rdi+3],167
	jnz LB_3601
	jmp LB_3602
LB_3601:
	mov r8,unt_1
	jmp LB_3597
LB_3602:
	add r14,4
	jmp LB_3598
LB_3597:
	lea rsp,[rsp+8*1]
	jmp LB_3586
LB_3598:
	sub rsp,32
	mov QWORD [rsp+24],r13
	mov QWORD [rsp+16],r14 
	mov QWORD [rsp+8],r9
	jmp LB_3606
LB_3605:
	add r14,1 
LB_3606:
	cmp r14,r9
	jge LB_3607
	movzx rax,BYTE [r13+8+r14]
	cmp rax,9 
	jz LB_3605
	cmp rax,10 
	jz LB_3605
	cmp rax,32 
	jz LB_3605
LB_3607
	call GRM_74
	movzx rax,BYTE [r8+6]
	cmp rax,0
	jnz LB_3610
	jmp LB_3611
LB_3610:
	jmp LB_3608
LB_3611:
	lea rsp,[rsp-8*1]
; .mov_ptn2 2'(= {| l |} ) ⊢ 8'(= {| l |} )
; .mov_ptn 2'(= {| l |} ) ⊢ 8'(= {| l |} )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_3609
LB_3608:
	lea rsp,[rsp+8*0]
	jmp LB_3604
LB_3609:
	jmp LB_3613
LB_3612:
	add r14,1 
LB_3613:
	cmp r14,r9
	jge LB_3614
	movzx rax,BYTE [r13+8+r14]
	cmp rax,9 
	jz LB_3612
	cmp rax,10 
	jz LB_3612
	cmp rax,32 
	jz LB_3612
LB_3614
	call GRM_247
	movzx rax,BYTE [r8+6]
	cmp rax,0
	jnz LB_3617
	jmp LB_3618
LB_3617:
	jmp LB_3615
LB_3618:
	lea rsp,[rsp-8*1]
	mov r8,[r8+8]
; .mov_ptn2 2'(= a35◂ [ a32◂ [ ]] ) ⊢ 9'(= a35◂ [ a32◂ [ ]] )
; .mov_ptn 2'(= a35◂ [ a32◂ [ ]] ) ⊢ 9'(= a35◂ [ a32◂ [ ]] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_3616
LB_3615:
	lea rsp,[rsp+8*1]
	jmp LB_3604
LB_3616:
	mov QWORD [rsp+8*2],r14
	mov r13,QWORD [rsp+16+8*2]
	mov r14,QWORD [rsp+8*2]
	jmp LB_3620
LB_3620
;; rsp=2 , %2164~1'(= r ) %2163~0'(= r ) %2162~9'(= a35◂ [ a32◂ [ ]] ) %2161~8'(= {| l |} ) 
;; ? 9'(= a35◂ [ a32◂ [ ]] ) ⊢ 0(<2)◂2'(= a32◂ [ ] )
	mov rdi,QWORD [rsp-8+8*1]
	movzx rax,BYTE [rdi+6]
	cmp rax,0
	jnz LB_3621
	mov rax,QWORD [rdi+8]
	mov r8,rax
;; rsp=2 , %2166~2'(= a32◂ [ ] ) %2164~1'(= r ) %2163~0'(= r ) %2161~8'(= {| l |} ) 
; #176 { 8'(= {| l |} ) 2'(= a32◂ [ ] ) } ⊢ 0(<6)◂{ 8'(= {| l |} ) 2'(= a32◂ [ ] ) }
;; rsp=2 , %2167~0(<6)◂{ 8'(= {| l |} ) 2'(= a32◂ [ ] ) } %2164~1'(= r ) %2163~0'(= r ) 
; #193 0(<6)◂{ 8'(= {| l |} ) 2'(= a32◂ [ ] ) } ⊢ 0(<2)◂0(<6)◂{ 8'(= {| l |} ) 2'(= a32◂ [ ] ) }
;; rsp=2 , %2168~0(<2)◂0(<6)◂{ 8'(= {| l |} ) 2'(= a32◂ [ ] ) } %2164~1'(= r ) %2163~0'(= r ) 
; #22 0(<2)◂0(<6)◂{ 8'(= {| l |} ) 2'(= a32◂ [ ] ) } ⊢ 0(<2)◂0(<2)◂0(<6)◂{ 8'(= {| l |} ) 2'(= a32◂ [ ] ) }
;; rsp=2 , %2169~0(<2)◂0(<2)◂0(<6)◂{ 8'(= {| l |} ) 2'(= a32◂ [ ] ) } %2164~1'(= r ) %2163~0'(= r ) 
; ∎ 0(<2)◂0(<2)◂0(<6)◂{ 8'(= {| l |} ) 2'(= a32◂ [ ] ) }
; .dlt.ptn 1'(= r )
; .dlt.ptn 0'(= r )
; .mov_ptn2 0(<2)◂0(<2)◂0(<6)◂{ 8'(= {| l |} ) 2'(= a32◂ [ ] ) } ⊢ 2'(= a3◂ [ a35◂ [ a31◂ [ ]]] )
	mov r13,r8
; .mov_ptn 0(<2)◂0(<2)◂0(<6)◂{ 8'(= {| l |} ) 0'(= a32◂ [ ] ) } ⊢ 2'(= a3◂ [ a35◂ [ a31◂ [ ]]] )
	mov rax,[SS_RCD_2_TOP]
	mov rsi,[rax] 
	mov QWORD [SS_RCD_2_TOP],rsi
	mov QWORD [rax],0
	mov r14,rax
	mov rax,QWORD [rsp-8+8*2]
	mov rdi,r14
	mov QWORD [rdi+8+8*0],rax
	mov rax,r13
	mov rdi,r14
	mov QWORD [rdi+8+8*1],rax
	mov rax,r14
	mov BYTE [rax+6],0
	mov rdi,rax
	mov rax,[SS_LN_TOP]
	mov rsi,[rax]
	mov QWORD [SS_LN_TOP],rsi 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov rdi,rax
	mov rax,[SS_LN_TOP]
	mov rsi,[rax]
	mov QWORD [SS_LN_TOP],rsi 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	lea rsp,[rsp+8*2]
	jmp LB_3619
LB_3621:
;; ? 9'(= a35◂ [ a32◂ [ ]] ) ⊢ 1(<2)◂9'(= a2◂ [ *{ rr{| l |}}] )
;; rsp=2 , %2165~9'(= a2◂ [ *{ rr{| l |}}] ) %2164~1'(= r ) %2163~0'(= r ) %2161~8'(= {| l |} ) 
; #192 9'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 1(<2)◂9'(= a2◂ [ *{ rr{| l |}}] )
;; rsp=2 , %2170~1(<2)◂9'(= a2◂ [ *{ rr{| l |}}] ) %2164~1'(= r ) %2163~0'(= r ) %2161~8'(= {| l |} ) 
; #22 1(<2)◂9'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 0(<2)◂1(<2)◂9'(= a2◂ [ *{ rr{| l |}}] )
;; rsp=2 , %2171~0(<2)◂1(<2)◂9'(= a2◂ [ *{ rr{| l |}}] ) %2164~1'(= r ) %2163~0'(= r ) %2161~8'(= {| l |} ) 
; ∎ 0(<2)◂1(<2)◂9'(= a2◂ [ *{ rr{| l |}}] )
; .dlt.ptn 1'(= r )
; .dlt.ptn 0'(= r )
; .dlt.ptn 8'(= {| l |} )
	mov rdi,QWORD [rsp-8+8*2]
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call free 
	mov rsp,QWORD [rsp_tmp] 
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
; .mov_ptn2 0(<2)◂1(<2)◂9'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 2'(= a3◂ [ a35◂ [ a31◂ [ ]]] )
; .mov_ptn 0(<2)◂1(<2)◂9'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 2'(= a3◂ [ a35◂ [ a31◂ [ ]]] )
	mov rax,QWORD [rsp-8+8*1]
	mov rdi,rax
	mov rax,[SS_LN_TOP]
	mov rsi,[rax]
	mov QWORD [SS_LN_TOP],rsi 
	mov QWORD [rax],0
	mov BYTE [rax+6],1
	mov QWORD [rax+8],rdi
	mov rdi,rax
	mov rax,[SS_LN_TOP]
	mov rsi,[rax]
	mov QWORD [SS_LN_TOP],rsi 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	lea rsp,[rsp+8*2]
	jmp LB_3619
LB_3619:
	movzx rax,BYTE [r8+6]
	cmp rax,0
	jnz LB_3604
	pop r14
	pop r9
	add rsp,8
	pop r13
	jmp LB_3603
LB_3604:
	jmp LB_3624
LB_3623:
	add r14,1 
LB_3624:
	cmp r14,r9
	jge LB_3625
	movzx rax,BYTE [r13+8+r14]
	cmp rax,9 
	jz LB_3623
	cmp rax,10 
	jz LB_3623
	cmp rax,32 
	jz LB_3623
LB_3625
	call GRM_246
	movzx rax,BYTE [r8+6]
	cmp rax,0
	jnz LB_3628
	jmp LB_3629
LB_3628:
	jmp LB_3626
LB_3629:
; .mov_ptn2 2'(= *{ } ) ⊢ { }
; .mov_ptn 2'(= *{ } ) ⊢ { }
	jmp LB_3627
LB_3626:
	lea rsp,[rsp+8*0]
	jmp LB_3622
LB_3627:
	mov QWORD [rsp+8*0],r14
	mov r13,QWORD [rsp+16+8*0]
	mov r14,QWORD [rsp+8*0]
	jmp LB_3631
LB_3631
;; rsp=0 , %2174~1'(= r ) %2173~0'(= r ) %2172~{ } 
; #20 { } ⊢ 1(<2)◂{ }
;; rsp=0 , %2175~1(<2)◂{ } %2174~1'(= r ) %2173~0'(= r ) %2172~{ } 
	jmp LB_3632
LB_3632:
; $ %[ "glb_etr 0.1" ] ⊢ %[ "glb_etr 0.1" ]
;; rsp=0 , %2176~%[ "glb_etr 0.1" ] %2175~1(<2)◂{ } %2174~1'(= r ) %2173~0'(= r ) %2172~{ } 
; #21 { { 0'(= r ) 1'(= r ) %[ "glb_etr 0.1" ] } 1(<2)◂{ } } ⊢ 0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "glb_etr 0.1" ] } 1(<2)◂{ } }
;; rsp=0 , %2177~0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "glb_etr 0.1" ] } 1(<2)◂{ } } %2172~{ } 
; #192 0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "glb_etr 0.1" ] } 1(<2)◂{ } } ⊢ 1(<2)◂0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "glb_etr 0.1" ] } 1(<2)◂{ } }
;; rsp=0 , %2178~1(<2)◂0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "glb_etr 0.1" ] } 1(<2)◂{ } } %2172~{ } 
; #22 1(<2)◂0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "glb_etr 0.1" ] } 1(<2)◂{ } } ⊢ 0(<2)◂1(<2)◂0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "glb_etr 0.1" ] } 1(<2)◂{ } }
;; rsp=0 , %2179~0(<2)◂1(<2)◂0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "glb_etr 0.1" ] } 1(<2)◂{ } } %2172~{ } 
; ∎ 0(<2)◂1(<2)◂0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "glb_etr 0.1" ] } 1(<2)◂{ } }
; .dlt.ptn { }
; .mov_ptn2 0(<2)◂1(<2)◂0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "glb_etr 0.1" ] } 1(<2)◂{ } } ⊢ 2'(= a3◂ [ a35◂ [ a31◂ [ ]]] )
; .mov_ptn 0(<2)◂1(<2)◂0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "glb_etr 0.1" ] } 1(<2)◂{ } } ⊢ 2'(= a3◂ [ a35◂ [ a31◂ [ ]]] )
	mov rax,[SS_RCD_2_TOP]
	mov rsi,[rax] 
	mov QWORD [SS_RCD_2_TOP],rsi
	mov QWORD [rax],0
	mov r9,rax
	mov rax,[SS_RCD_3_TOP]
	mov rsi,[rax] 
	mov QWORD [SS_RCD_3_TOP],rsi
	mov QWORD [rax],0
	mov r10,rax
	mov rax,r13
	mov rdi,r10
	mov QWORD [rdi+8+8*0],rax
	mov rax,r14
	mov rdi,r10
	mov QWORD [rdi+8+8*1],rax
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	mov rdi,1  
	mov rsi,24
	xor rax,rax
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call calloc
	mov rsp,QWORD [rsp_tmp]  
	mov rdi,11
	mov rsi,0x_40_00_0000_0000_0000
	or rdi,rsi
	mov QWORD [rax],rdi
	mov QWORD [rax+8*2],0
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	mov BYTE [rax+8+0],103
	mov BYTE [rax+8+1],108
	mov BYTE [rax+8+2],98
	mov BYTE [rax+8+3],95
	mov BYTE [rax+8+4],101
	mov BYTE [rax+8+5],116
	mov BYTE [rax+8+6],114
	mov BYTE [rax+8+7],32
	mov BYTE [rax+8+8],48
	mov BYTE [rax+8+9],46
	mov BYTE [rax+8+10],49
	mov rdi,r10
	mov QWORD [rdi+8+8*2],rax
	mov rax,r10
	mov rdi,r9
	mov QWORD [rdi+8+8*0],rax
	mov rax,unt 
	mov rax,unt_1
	mov rdi,r9
	mov QWORD [rdi+8+8*1],rax
	mov rax,r9
	mov BYTE [rax+6],0
	mov rdi,rax
	mov rax,[SS_LN_TOP]
	mov rsi,[rax]
	mov QWORD [SS_LN_TOP],rsi 
	mov QWORD [rax],0
	mov BYTE [rax+6],1
	mov QWORD [rax+8],rdi
	mov rdi,rax
	mov rax,[SS_LN_TOP]
	mov rsi,[rax]
	mov QWORD [SS_LN_TOP],rsi 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	jmp LB_3630
LB_3630:
	movzx rax,BYTE [r8+6]
	cmp rax,0
	jnz LB_3622
	pop r14
	pop r9
	add rsp,8
	pop r13
	jmp LB_3603
LB_3622:
	pop rdi
	pop r9 
	pop r14
	pop r13
	jmp LB_3603
LB_3603:
	movzx rax,BYTE [r8+6]
	cmp rax,0
	jnz LB_3633
	jmp LB_3634
LB_3633:
	lea rsp,[rsp+8*1]
	add rsp,8
	pop r9 
	pop r14 
	pop r13
	ret
LB_3634:
	mov QWORD [rsp+8*1],r14
	mov r8,[r8+8]
; .mov_ptn2 2'(= a35◂ [ a31◂ [ ]] ) ⊢ 3'(= a35◂ [ a31◂ [ ]] )
	mov r10,r9
; .mov_ptn 2'(= a35◂ [ a31◂ [ ]] ) ⊢ 3'(= a35◂ [ a31◂ [ ]] )
	mov rax,r8
	mov r9,rax
	mov r13,QWORD [rsp+16+8*1]
	mov r14,QWORD [rsp+8*1]
	jmp LB_3636
LB_3636
;; rsp=1 , %2180~3'(= a35◂ [ a31◂ [ ]] ) %2160~1'(= r ) %2159~0'(= r ) %2158~8'(= a35◂ [ *{ }] ) 
; #22 3'(= a35◂ [ a31◂ [ ]] ) ⊢ 0(<2)◂3'(= a35◂ [ a31◂ [ ]] )
;; rsp=1 , %2181~0(<2)◂3'(= a35◂ [ a31◂ [ ]] ) %2160~1'(= r ) %2159~0'(= r ) %2158~8'(= a35◂ [ *{ }] ) 
; ∎ 0(<2)◂3'(= a35◂ [ a31◂ [ ]] )
; .dlt.ptn 1'(= r )
; .dlt.ptn 0'(= r )
; .dlt.ptn 8'(= a35◂ [ *{ }] )
;	.dlt adt ⊢ _  
; .mov_ptn2 0(<2)◂3'(= a35◂ [ a31◂ [ ]] ) ⊢ 2'(= a3◂ [ a35◂ [ a31◂ [ ]]] )
; .mov_ptn 0(<2)◂3'(= a35◂ [ a31◂ [ ]] ) ⊢ 2'(= a3◂ [ a35◂ [ a31◂ [ ]]] )
	mov rax,r9
	mov rdi,rax
	mov rax,[SS_LN_TOP]
	mov rsi,[rax]
	mov QWORD [SS_LN_TOP],rsi 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	lea rsp,[rsp+8*1]
	jmp LB_3635
LB_3635:
	movzx rax,BYTE [r8+6]
	cmp rax,0
	jnz LB_3586
	pop r14
	pop r9
	add rsp,8
	pop r13
	ret
LB_3586:
	jmp LB_3639
LB_3638:
	add r14,1 
LB_3639:
	cmp r14,r9
	jge LB_3640
	movzx rax,BYTE [r13+8+r14]
	cmp rax,9 
	jz LB_3638
	cmp rax,10 
	jz LB_3638
	cmp rax,32 
	jz LB_3638
LB_3640
	lea rax,[r14+2]
	cmp rax,r9
	jg LB_3643
	jmp LB_3644
LB_3643:
	mov r8,unt_1
	jmp LB_3641
LB_3644:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],194
	jnz LB_3645
	cmp BYTE [rdi+1],167
	jnz LB_3645
	jmp LB_3646
LB_3645:
	mov r8,unt_1
	jmp LB_3641
LB_3646:
	add r14,2
	jmp LB_3642
LB_3641:
	lea rsp,[rsp+8*0]
	jmp LB_3637
LB_3642:
	sub rsp,32
	mov QWORD [rsp+24],r13
	mov QWORD [rsp+16],r14 
	mov QWORD [rsp+8],r9
	jmp LB_3650
LB_3649:
	add r14,1 
LB_3650:
	cmp r14,r9
	jge LB_3651
	movzx rax,BYTE [r13+8+r14]
	cmp rax,9 
	jz LB_3649
	cmp rax,10 
	jz LB_3649
	cmp rax,32 
	jz LB_3649
LB_3651
	call GRM_255
	movzx rax,BYTE [r8+6]
	cmp rax,0
	jnz LB_3654
	jmp LB_3655
LB_3654:
	jmp LB_3652
LB_3655:
	lea rsp,[rsp-8*1]
	mov r8,[r8+8]
; .mov_ptn2 2'(= a35◂ [ a31◂ [ ]] ) ⊢ 8'(= a35◂ [ a31◂ [ ]] )
; .mov_ptn 2'(= a35◂ [ a31◂ [ ]] ) ⊢ 8'(= a35◂ [ a31◂ [ ]] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_3653
LB_3652:
	lea rsp,[rsp+8*0]
	jmp LB_3648
LB_3653:
	mov QWORD [rsp+8*1],r14
	mov r13,QWORD [rsp+16+8*1]
	mov r14,QWORD [rsp+8*1]
	jmp LB_3657
LB_3657
;; rsp=1 , %2186~1'(= r ) %2185~0'(= r ) %2184~8'(= a35◂ [ a31◂ [ ]] ) 
; #22 8'(= a35◂ [ a31◂ [ ]] ) ⊢ 0(<2)◂8'(= a35◂ [ a31◂ [ ]] )
;; rsp=1 , %2187~0(<2)◂8'(= a35◂ [ a31◂ [ ]] ) %2186~1'(= r ) %2185~0'(= r ) 
; ∎ 0(<2)◂8'(= a35◂ [ a31◂ [ ]] )
; .dlt.ptn 1'(= r )
; .dlt.ptn 0'(= r )
; .mov_ptn2 0(<2)◂8'(= a35◂ [ a31◂ [ ]] ) ⊢ 2'(= a3◂ [ a35◂ [ a31◂ [ ]]] )
; .mov_ptn 0(<2)◂8'(= a35◂ [ a31◂ [ ]] ) ⊢ 2'(= a3◂ [ a35◂ [ a31◂ [ ]]] )
	mov rax,QWORD [rsp-8+8*1]
	mov rdi,rax
	mov rax,[SS_LN_TOP]
	mov rsi,[rax]
	mov QWORD [SS_LN_TOP],rsi 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	lea rsp,[rsp+8*1]
	jmp LB_3656
LB_3656:
	movzx rax,BYTE [r8+6]
	cmp rax,0
	jnz LB_3648
	pop r14
	pop r9
	add rsp,8
	pop r13
	jmp LB_3647
LB_3648:
	jmp LB_3660
LB_3659:
	add r14,1 
LB_3660:
	cmp r14,r9
	jge LB_3661
	movzx rax,BYTE [r13+8+r14]
	cmp rax,9 
	jz LB_3659
	cmp rax,10 
	jz LB_3659
	cmp rax,32 
	jz LB_3659
LB_3661
	call GRM_245
	movzx rax,BYTE [r8+6]
	cmp rax,0
	jnz LB_3664
	jmp LB_3665
LB_3664:
	jmp LB_3662
LB_3665:
; .mov_ptn2 2'(= *{ } ) ⊢ { }
; .mov_ptn 2'(= *{ } ) ⊢ { }
	jmp LB_3663
LB_3662:
	lea rsp,[rsp+8*0]
	jmp LB_3658
LB_3663:
	mov QWORD [rsp+8*0],r14
	mov r13,QWORD [rsp+16+8*0]
	mov r14,QWORD [rsp+8*0]
	jmp LB_3667
LB_3667
;; rsp=0 , %2190~1'(= r ) %2189~0'(= r ) %2188~{ } 
; #20 { } ⊢ 1(<2)◂{ }
;; rsp=0 , %2191~1(<2)◂{ } %2190~1'(= r ) %2189~0'(= r ) %2188~{ } 
	jmp LB_3668
LB_3668:
; $ %[ "glb_etr 3" ] ⊢ %[ "glb_etr 3" ]
;; rsp=0 , %2192~%[ "glb_etr 3" ] %2191~1(<2)◂{ } %2190~1'(= r ) %2189~0'(= r ) %2188~{ } 
; #21 { { 0'(= r ) 1'(= r ) %[ "glb_etr 3" ] } 1(<2)◂{ } } ⊢ 0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "glb_etr 3" ] } 1(<2)◂{ } }
;; rsp=0 , %2193~0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "glb_etr 3" ] } 1(<2)◂{ } } %2188~{ } 
; #192 0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "glb_etr 3" ] } 1(<2)◂{ } } ⊢ 1(<2)◂0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "glb_etr 3" ] } 1(<2)◂{ } }
;; rsp=0 , %2194~1(<2)◂0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "glb_etr 3" ] } 1(<2)◂{ } } %2188~{ } 
; #22 1(<2)◂0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "glb_etr 3" ] } 1(<2)◂{ } } ⊢ 0(<2)◂1(<2)◂0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "glb_etr 3" ] } 1(<2)◂{ } }
;; rsp=0 , %2195~0(<2)◂1(<2)◂0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "glb_etr 3" ] } 1(<2)◂{ } } %2188~{ } 
; ∎ 0(<2)◂1(<2)◂0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "glb_etr 3" ] } 1(<2)◂{ } }
; .dlt.ptn { }
; .mov_ptn2 0(<2)◂1(<2)◂0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "glb_etr 3" ] } 1(<2)◂{ } } ⊢ 2'(= a3◂ [ a35◂ [ a31◂ [ ]]] )
; .mov_ptn 0(<2)◂1(<2)◂0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "glb_etr 3" ] } 1(<2)◂{ } } ⊢ 2'(= a3◂ [ a35◂ [ a31◂ [ ]]] )
	mov rax,[SS_RCD_2_TOP]
	mov rsi,[rax] 
	mov QWORD [SS_RCD_2_TOP],rsi
	mov QWORD [rax],0
	mov r9,rax
	mov rax,[SS_RCD_3_TOP]
	mov rsi,[rax] 
	mov QWORD [SS_RCD_3_TOP],rsi
	mov QWORD [rax],0
	mov r10,rax
	mov rax,r13
	mov rdi,r10
	mov QWORD [rdi+8+8*0],rax
	mov rax,r14
	mov rdi,r10
	mov QWORD [rdi+8+8*1],rax
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	mov rdi,1  
	mov rsi,24
	xor rax,rax
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call calloc
	mov rsp,QWORD [rsp_tmp]  
	mov rdi,9
	mov rsi,0x_40_00_0000_0000_0000
	or rdi,rsi
	mov QWORD [rax],rdi
	mov QWORD [rax+8*2],0
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	mov BYTE [rax+8+0],103
	mov BYTE [rax+8+1],108
	mov BYTE [rax+8+2],98
	mov BYTE [rax+8+3],95
	mov BYTE [rax+8+4],101
	mov BYTE [rax+8+5],116
	mov BYTE [rax+8+6],114
	mov BYTE [rax+8+7],32
	mov BYTE [rax+8+8],51
	mov rdi,r10
	mov QWORD [rdi+8+8*2],rax
	mov rax,r10
	mov rdi,r9
	mov QWORD [rdi+8+8*0],rax
	mov rax,unt 
	mov rax,unt_1
	mov rdi,r9
	mov QWORD [rdi+8+8*1],rax
	mov rax,r9
	mov BYTE [rax+6],0
	mov rdi,rax
	mov rax,[SS_LN_TOP]
	mov rsi,[rax]
	mov QWORD [SS_LN_TOP],rsi 
	mov QWORD [rax],0
	mov BYTE [rax+6],1
	mov QWORD [rax+8],rdi
	mov rdi,rax
	mov rax,[SS_LN_TOP]
	mov rsi,[rax]
	mov QWORD [SS_LN_TOP],rsi 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	jmp LB_3666
LB_3666:
	movzx rax,BYTE [r8+6]
	cmp rax,0
	jnz LB_3658
	pop r14
	pop r9
	add rsp,8
	pop r13
	jmp LB_3647
LB_3658:
	pop rdi
	pop r9 
	pop r14
	pop r13
	jmp LB_3647
LB_3647:
	movzx rax,BYTE [r8+6]
	cmp rax,0
	jnz LB_3669
	jmp LB_3670
LB_3669:
	lea rsp,[rsp+8*0]
	add rsp,8
	pop r9 
	pop r14 
	pop r13
	ret
LB_3670:
	mov QWORD [rsp+8*0],r14
	mov r8,[r8+8]
; .mov_ptn2 2'(= a35◂ [ a31◂ [ ]] ) ⊢ 3'(= a35◂ [ a31◂ [ ]] )
	mov r10,r9
; .mov_ptn 2'(= a35◂ [ a31◂ [ ]] ) ⊢ 3'(= a35◂ [ a31◂ [ ]] )
	mov rax,r8
	mov r9,rax
	mov r13,QWORD [rsp+16+8*0]
	mov r14,QWORD [rsp+8*0]
	jmp LB_3672
LB_3672
;; rsp=0 , %2196~3'(= a35◂ [ a31◂ [ ]] ) %2183~1'(= r ) %2182~0'(= r ) 
; #22 3'(= a35◂ [ a31◂ [ ]] ) ⊢ 0(<2)◂3'(= a35◂ [ a31◂ [ ]] )
;; rsp=0 , %2197~0(<2)◂3'(= a35◂ [ a31◂ [ ]] ) %2183~1'(= r ) %2182~0'(= r ) 
; ∎ 0(<2)◂3'(= a35◂ [ a31◂ [ ]] )
; .dlt.ptn 1'(= r )
; .dlt.ptn 0'(= r )
; .mov_ptn2 0(<2)◂3'(= a35◂ [ a31◂ [ ]] ) ⊢ 2'(= a3◂ [ a35◂ [ a31◂ [ ]]] )
; .mov_ptn 0(<2)◂3'(= a35◂ [ a31◂ [ ]] ) ⊢ 2'(= a3◂ [ a35◂ [ a31◂ [ ]]] )
	mov rax,r9
	mov rdi,rax
	mov rax,[SS_LN_TOP]
	mov rsi,[rax]
	mov QWORD [SS_LN_TOP],rsi 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	jmp LB_3671
LB_3671:
	movzx rax,BYTE [r8+6]
	cmp rax,0
	jnz LB_3637
	pop r14
	pop r9
	add rsp,8
	pop r13
	ret
LB_3637:
	jmp LB_3675
LB_3674:
	add r14,1 
LB_3675:
	cmp r14,r9
	jge LB_3676
	movzx rax,BYTE [r13+8+r14]
	cmp rax,9 
	jz LB_3674
	cmp rax,10 
	jz LB_3674
	cmp rax,32 
	jz LB_3674
LB_3676
	lea rax,[r14+2]
	cmp rax,r9
	jg LB_3679
	jmp LB_3680
LB_3679:
	mov r8,unt_1
	jmp LB_3677
LB_3680:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],194
	jnz LB_3681
	cmp BYTE [rdi+1],182
	jnz LB_3681
	jmp LB_3682
LB_3681:
	mov r8,unt_1
	jmp LB_3677
LB_3682:
	add r14,2
	jmp LB_3678
LB_3677:
	lea rsp,[rsp+8*0]
	jmp LB_3673
LB_3678:
	sub rsp,32
	mov QWORD [rsp+24],r13
	mov QWORD [rsp+16],r14 
	mov QWORD [rsp+8],r9
	jmp LB_3686
LB_3685:
	add r14,1 
LB_3686:
	cmp r14,r9
	jge LB_3687
	movzx rax,BYTE [r13+8+r14]
	cmp rax,9 
	jz LB_3685
	cmp rax,10 
	jz LB_3685
	cmp rax,32 
	jz LB_3685
LB_3687
	call GRM_249
	movzx rax,BYTE [r8+6]
	cmp rax,0
	jnz LB_3690
	jmp LB_3691
LB_3690:
	jmp LB_3688
LB_3691:
	lea rsp,[rsp-8*1]
	mov r8,[r8+8]
; .mov_ptn2 2'(= a31◂ [ ] ) ⊢ 8'(= a31◂ [ ] )
; .mov_ptn 2'(= a31◂ [ ] ) ⊢ 8'(= a31◂ [ ] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_3689
LB_3688:
	lea rsp,[rsp+8*0]
	jmp LB_3684
LB_3689:
	mov QWORD [rsp+8*1],r14
	mov r13,QWORD [rsp+16+8*1]
	mov r14,QWORD [rsp+8*1]
	jmp LB_3693
LB_3693
;; rsp=1 , %2202~1'(= r ) %2201~0'(= r ) %2200~8'(= a31◂ [ ] ) 
; #193 8'(= a31◂ [ ] ) ⊢ 0(<2)◂8'(= a31◂ [ ] )
;; rsp=1 , %2203~0(<2)◂8'(= a31◂ [ ] ) %2202~1'(= r ) %2201~0'(= r ) 
; #22 0(<2)◂8'(= a31◂ [ ] ) ⊢ 0(<2)◂0(<2)◂8'(= a31◂ [ ] )
;; rsp=1 , %2204~0(<2)◂0(<2)◂8'(= a31◂ [ ] ) %2202~1'(= r ) %2201~0'(= r ) 
; ∎ 0(<2)◂0(<2)◂8'(= a31◂ [ ] )
; .dlt.ptn 1'(= r )
; .dlt.ptn 0'(= r )
; .mov_ptn2 0(<2)◂0(<2)◂8'(= a31◂ [ ] ) ⊢ 2'(= a3◂ [ a35◂ [ a31◂ [ ]]] )
; .mov_ptn 0(<2)◂0(<2)◂8'(= a31◂ [ ] ) ⊢ 2'(= a3◂ [ a35◂ [ a31◂ [ ]]] )
	mov rax,QWORD [rsp-8+8*1]
	mov rdi,rax
	mov rax,[SS_LN_TOP]
	mov rsi,[rax]
	mov QWORD [SS_LN_TOP],rsi 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov rdi,rax
	mov rax,[SS_LN_TOP]
	mov rsi,[rax]
	mov QWORD [SS_LN_TOP],rsi 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	lea rsp,[rsp+8*1]
	jmp LB_3692
LB_3692:
	movzx rax,BYTE [r8+6]
	cmp rax,0
	jnz LB_3684
	pop r14
	pop r9
	add rsp,8
	pop r13
	jmp LB_3683
LB_3684:
	jmp LB_3696
LB_3695:
	add r14,1 
LB_3696:
	cmp r14,r9
	jge LB_3697
	movzx rax,BYTE [r13+8+r14]
	cmp rax,9 
	jz LB_3695
	cmp rax,10 
	jz LB_3695
	cmp rax,32 
	jz LB_3695
LB_3697
	call GRM_245
	movzx rax,BYTE [r8+6]
	cmp rax,0
	jnz LB_3700
	jmp LB_3701
LB_3700:
	jmp LB_3698
LB_3701:
; .mov_ptn2 2'(= *{ } ) ⊢ { }
; .mov_ptn 2'(= *{ } ) ⊢ { }
	jmp LB_3699
LB_3698:
	lea rsp,[rsp+8*0]
	jmp LB_3694
LB_3699:
	mov QWORD [rsp+8*0],r14
	mov r13,QWORD [rsp+16+8*0]
	mov r14,QWORD [rsp+8*0]
	jmp LB_3703
LB_3703
;; rsp=0 , %2207~1'(= r ) %2206~0'(= r ) %2205~{ } 
; #20 { } ⊢ 1(<2)◂{ }
;; rsp=0 , %2208~1(<2)◂{ } %2207~1'(= r ) %2206~0'(= r ) %2205~{ } 
	jmp LB_3704
LB_3704:
; $ %[ "glb_etr 4" ] ⊢ %[ "glb_etr 4" ]
;; rsp=0 , %2209~%[ "glb_etr 4" ] %2208~1(<2)◂{ } %2207~1'(= r ) %2206~0'(= r ) %2205~{ } 
; #21 { { 0'(= r ) 1'(= r ) %[ "glb_etr 4" ] } 1(<2)◂{ } } ⊢ 0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "glb_etr 4" ] } 1(<2)◂{ } }
;; rsp=0 , %2210~0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "glb_etr 4" ] } 1(<2)◂{ } } %2205~{ } 
; #192 0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "glb_etr 4" ] } 1(<2)◂{ } } ⊢ 1(<2)◂0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "glb_etr 4" ] } 1(<2)◂{ } }
;; rsp=0 , %2211~1(<2)◂0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "glb_etr 4" ] } 1(<2)◂{ } } %2205~{ } 
; #22 1(<2)◂0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "glb_etr 4" ] } 1(<2)◂{ } } ⊢ 0(<2)◂1(<2)◂0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "glb_etr 4" ] } 1(<2)◂{ } }
;; rsp=0 , %2212~0(<2)◂1(<2)◂0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "glb_etr 4" ] } 1(<2)◂{ } } %2205~{ } 
; ∎ 0(<2)◂1(<2)◂0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "glb_etr 4" ] } 1(<2)◂{ } }
; .dlt.ptn { }
; .mov_ptn2 0(<2)◂1(<2)◂0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "glb_etr 4" ] } 1(<2)◂{ } } ⊢ 2'(= a3◂ [ a35◂ [ a31◂ [ ]]] )
; .mov_ptn 0(<2)◂1(<2)◂0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "glb_etr 4" ] } 1(<2)◂{ } } ⊢ 2'(= a3◂ [ a35◂ [ a31◂ [ ]]] )
	mov rax,[SS_RCD_2_TOP]
	mov rsi,[rax] 
	mov QWORD [SS_RCD_2_TOP],rsi
	mov QWORD [rax],0
	mov r9,rax
	mov rax,[SS_RCD_3_TOP]
	mov rsi,[rax] 
	mov QWORD [SS_RCD_3_TOP],rsi
	mov QWORD [rax],0
	mov r10,rax
	mov rax,r13
	mov rdi,r10
	mov QWORD [rdi+8+8*0],rax
	mov rax,r14
	mov rdi,r10
	mov QWORD [rdi+8+8*1],rax
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	mov rdi,1  
	mov rsi,24
	xor rax,rax
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call calloc
	mov rsp,QWORD [rsp_tmp]  
	mov rdi,9
	mov rsi,0x_40_00_0000_0000_0000
	or rdi,rsi
	mov QWORD [rax],rdi
	mov QWORD [rax+8*2],0
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	mov BYTE [rax+8+0],103
	mov BYTE [rax+8+1],108
	mov BYTE [rax+8+2],98
	mov BYTE [rax+8+3],95
	mov BYTE [rax+8+4],101
	mov BYTE [rax+8+5],116
	mov BYTE [rax+8+6],114
	mov BYTE [rax+8+7],32
	mov BYTE [rax+8+8],52
	mov rdi,r10
	mov QWORD [rdi+8+8*2],rax
	mov rax,r10
	mov rdi,r9
	mov QWORD [rdi+8+8*0],rax
	mov rax,unt 
	mov rax,unt_1
	mov rdi,r9
	mov QWORD [rdi+8+8*1],rax
	mov rax,r9
	mov BYTE [rax+6],0
	mov rdi,rax
	mov rax,[SS_LN_TOP]
	mov rsi,[rax]
	mov QWORD [SS_LN_TOP],rsi 
	mov QWORD [rax],0
	mov BYTE [rax+6],1
	mov QWORD [rax+8],rdi
	mov rdi,rax
	mov rax,[SS_LN_TOP]
	mov rsi,[rax]
	mov QWORD [SS_LN_TOP],rsi 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	jmp LB_3702
LB_3702:
	movzx rax,BYTE [r8+6]
	cmp rax,0
	jnz LB_3694
	pop r14
	pop r9
	add rsp,8
	pop r13
	jmp LB_3683
LB_3694:
	pop rdi
	pop r9 
	pop r14
	pop r13
	jmp LB_3683
LB_3683:
	movzx rax,BYTE [r8+6]
	cmp rax,0
	jnz LB_3705
	jmp LB_3706
LB_3705:
	lea rsp,[rsp+8*0]
	add rsp,8
	pop r9 
	pop r14 
	pop r13
	ret
LB_3706:
	mov QWORD [rsp+8*0],r14
	mov r8,[r8+8]
; .mov_ptn2 2'(= a35◂ [ a31◂ [ ]] ) ⊢ 3'(= a35◂ [ a31◂ [ ]] )
	mov r10,r9
; .mov_ptn 2'(= a35◂ [ a31◂ [ ]] ) ⊢ 3'(= a35◂ [ a31◂ [ ]] )
	mov rax,r8
	mov r9,rax
	mov r13,QWORD [rsp+16+8*0]
	mov r14,QWORD [rsp+8*0]
	jmp LB_3708
LB_3708
;; rsp=0 , %2213~3'(= a35◂ [ a31◂ [ ]] ) %2199~1'(= r ) %2198~0'(= r ) 
; #22 3'(= a35◂ [ a31◂ [ ]] ) ⊢ 0(<2)◂3'(= a35◂ [ a31◂ [ ]] )
;; rsp=0 , %2214~0(<2)◂3'(= a35◂ [ a31◂ [ ]] ) %2199~1'(= r ) %2198~0'(= r ) 
; ∎ 0(<2)◂3'(= a35◂ [ a31◂ [ ]] )
; .dlt.ptn 1'(= r )
; .dlt.ptn 0'(= r )
; .mov_ptn2 0(<2)◂3'(= a35◂ [ a31◂ [ ]] ) ⊢ 2'(= a3◂ [ a35◂ [ a31◂ [ ]]] )
; .mov_ptn 0(<2)◂3'(= a35◂ [ a31◂ [ ]] ) ⊢ 2'(= a3◂ [ a35◂ [ a31◂ [ ]]] )
	mov rax,r9
	mov rdi,rax
	mov rax,[SS_LN_TOP]
	mov rsi,[rax]
	mov QWORD [SS_LN_TOP],rsi 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	jmp LB_3707
LB_3707:
	movzx rax,BYTE [r8+6]
	cmp rax,0
	jnz LB_3673
	pop r14
	pop r9
	add rsp,8
	pop r13
	ret
LB_3673:
	pop rdi
	pop r9 
	pop r14
	pop r13
	ret
ETR_245:
	mov r9,0x0000_ffff_ffff_ffff
	and r9,[r13]
	call GRM_245
	ret
GRM_245:
	sub rsp,32
	mov QWORD [rsp+24],r13
	mov QWORD [rsp+16],r14 
	mov QWORD [rsp+8],r9
	jmp LB_3711
LB_3710:
	add r14,1 
LB_3711:
	cmp r14,r9
	jge LB_3712
	movzx rax,BYTE [r13+8+r14]
	cmp rax,9 
	jz LB_3710
	cmp rax,10 
	jz LB_3710
	cmp rax,32 
	jz LB_3710
LB_3712
	call GRM_222
	movzx rax,BYTE [r8+6]
	cmp rax,0
	jnz LB_3715
	jmp LB_3716
LB_3715:
	jmp LB_3713
LB_3716:
; .mov_ptn2 2'(= *{ } ) ⊢ { }
; .mov_ptn 2'(= *{ } ) ⊢ { }
	jmp LB_3714
LB_3713:
	lea rsp,[rsp+8*0]
	jmp LB_3709
LB_3714:
	jmp LB_3718
LB_3717:
	add r14,1 
LB_3718:
	cmp r14,r9
	jge LB_3719
	movzx rax,BYTE [r13+8+r14]
	cmp rax,9 
	jz LB_3717
	cmp rax,10 
	jz LB_3717
	cmp rax,32 
	jz LB_3717
LB_3719
	call GRM_245
	movzx rax,BYTE [r8+6]
	cmp rax,0
	jnz LB_3722
	jmp LB_3723
LB_3722:
	jmp LB_3720
LB_3723:
; .mov_ptn2 2'(= *{ } ) ⊢ { }
; .mov_ptn 2'(= *{ } ) ⊢ { }
	jmp LB_3721
LB_3720:
	lea rsp,[rsp+8*0]
	jmp LB_3709
LB_3721:
	mov QWORD [rsp+8*0],r14
	mov r13,QWORD [rsp+16+8*0]
	mov r14,QWORD [rsp+8*0]
	jmp LB_3725
LB_3725
;; rsp=0 , %2218~1'(= r ) %2217~0'(= r ) %2216~{ } %2215~{ } 
; #22 { } ⊢ 0(<2)◂{ }
;; rsp=0 , %2219~0(<2)◂{ } %2218~1'(= r ) %2217~0'(= r ) %2216~{ } %2215~{ } 
; ∎ 0(<2)◂{ }
; .dlt.ptn 1'(= r )
; .dlt.ptn 0'(= r )
; .dlt.ptn { }
; .dlt.ptn { }
; .mov_ptn2 0(<2)◂{ } ⊢ 2'(= a3◂ [ *{ }] )
; .mov_ptn 0(<2)◂{ } ⊢ 2'(= a3◂ [ *{ }] )
	mov rax,unt 
	mov rax,unt_0
	mov r8,rax
	jmp LB_3724
LB_3724:
	movzx rax,BYTE [r8+6]
	cmp rax,0
	jnz LB_3709
	pop r14
	pop r9
	add rsp,8
	pop r13
	ret
LB_3709:
	mov QWORD [rsp+8*0],r14
	mov r13,QWORD [rsp+16+8*0]
	mov r14,QWORD [rsp+8*0]
	jmp LB_3728
LB_3728
;; rsp=0 , %2221~1'(= r ) %2220~0'(= r ) 
; #22 { } ⊢ 0(<2)◂{ }
;; rsp=0 , %2222~0(<2)◂{ } %2221~1'(= r ) %2220~0'(= r ) 
; ∎ 0(<2)◂{ }
; .dlt.ptn 1'(= r )
; .dlt.ptn 0'(= r )
; .mov_ptn2 0(<2)◂{ } ⊢ 2'(= a3◂ [ *{ }] )
; .mov_ptn 0(<2)◂{ } ⊢ 2'(= a3◂ [ *{ }] )
	mov rax,unt 
	mov rax,unt_0
	mov r8,rax
	jmp LB_3727
LB_3727:
	movzx rax,BYTE [r8+6]
	cmp rax,0
	jnz LB_3726
	pop r14
	pop r9
	add rsp,8
	pop r13
	ret
LB_3726:
	pop rdi
	pop r9 
	pop r14
	pop r13
	ret
ETR_246:
	mov r9,0x0000_ffff_ffff_ffff
	and r9,[r13]
	call GRM_246
	ret
GRM_246:
	sub rsp,32
	mov QWORD [rsp+24],r13
	mov QWORD [rsp+16],r14 
	mov QWORD [rsp+8],r9
	jmp LB_3731
LB_3730:
	add r14,1 
LB_3731:
	cmp r14,r9
	jge LB_3732
	movzx rax,BYTE [r13+8+r14]
	cmp rax,9 
	jz LB_3730
	cmp rax,10 
	jz LB_3730
	cmp rax,32 
	jz LB_3730
LB_3732
	lea rax,[r14+6]
	cmp rax,r9
	jg LB_3735
	jmp LB_3736
LB_3735:
	mov r8,unt_1
	jmp LB_3733
LB_3736:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],226
	jnz LB_3737
	cmp BYTE [rdi+1],136
	jnz LB_3737
	cmp BYTE [rdi+2],142
	jnz LB_3737
	cmp BYTE [rdi+3],226
	jnz LB_3737
	cmp BYTE [rdi+4],136
	jnz LB_3737
	cmp BYTE [rdi+5],142
	jnz LB_3737
	jmp LB_3738
LB_3737:
	mov r8,unt_1
	jmp LB_3733
LB_3738:
	add r14,6
	jmp LB_3734
LB_3733:
	lea rsp,[rsp+8*0]
	jmp LB_3729
LB_3734:
	mov QWORD [rsp+8*0],r14
	mov r13,QWORD [rsp+16+8*0]
	mov r14,QWORD [rsp+8*0]
	jmp LB_3740
LB_3740
;; rsp=0 , %2224~1'(= r ) %2223~0'(= r ) 
; #22 { } ⊢ 0(<2)◂{ }
;; rsp=0 , %2225~0(<2)◂{ } %2224~1'(= r ) %2223~0'(= r ) 
; ∎ 0(<2)◂{ }
; .dlt.ptn 1'(= r )
; .dlt.ptn 0'(= r )
; .mov_ptn2 0(<2)◂{ } ⊢ 2'(= a3◂ [ *{ }] )
; .mov_ptn 0(<2)◂{ } ⊢ 2'(= a3◂ [ *{ }] )
	mov rax,unt 
	mov rax,unt_0
	mov r8,rax
	jmp LB_3739
LB_3739:
	movzx rax,BYTE [r8+6]
	cmp rax,0
	jnz LB_3729
	pop r14
	pop r9
	add rsp,8
	pop r13
	ret
LB_3729:
	jmp LB_3743
LB_3742:
	add r14,1 
LB_3743:
	cmp r14,r9
	jge LB_3744
	movzx rax,BYTE [r13+8+r14]
	cmp rax,9 
	jz LB_3742
	cmp rax,10 
	jz LB_3742
	cmp rax,32 
	jz LB_3742
LB_3744
	lea rax,[r14+4]
	cmp rax,r9
	jg LB_3747
	jmp LB_3748
LB_3747:
	mov r8,unt_1
	jmp LB_3745
LB_3748:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],194
	jnz LB_3749
	cmp BYTE [rdi+1],167
	jnz LB_3749
	cmp BYTE [rdi+2],194
	jnz LB_3749
	cmp BYTE [rdi+3],167
	jnz LB_3749
	jmp LB_3750
LB_3749:
	mov r8,unt_1
	jmp LB_3745
LB_3750:
	add r14,4
	jmp LB_3746
LB_3745:
	lea rsp,[rsp+8*0]
	jmp LB_3741
LB_3746:
	sub rsp,32
	mov QWORD [rsp+24],r13
	mov QWORD [rsp+16],r14 
	mov QWORD [rsp+8],r9
	jmp LB_3754
LB_3753:
	add r14,1 
LB_3754:
	cmp r14,r9
	jge LB_3755
	movzx rax,BYTE [r13+8+r14]
	cmp rax,9 
	jz LB_3753
	cmp rax,10 
	jz LB_3753
	cmp rax,32 
	jz LB_3753
LB_3755
	call GRM_74
	movzx rax,BYTE [r8+6]
	cmp rax,0
	jnz LB_3758
	jmp LB_3759
LB_3758:
	jmp LB_3756
LB_3759:
	lea rsp,[rsp-8*1]
; .mov_ptn2 2'(= {| l |} ) ⊢ 8'(= {| l |} )
; .mov_ptn 2'(= {| l |} ) ⊢ 8'(= {| l |} )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_3757
LB_3756:
	lea rsp,[rsp+8*0]
	jmp LB_3752
LB_3757:
	jmp LB_3761
LB_3760:
	add r14,1 
LB_3761:
	cmp r14,r9
	jge LB_3762
	movzx rax,BYTE [r13+8+r14]
	cmp rax,9 
	jz LB_3760
	cmp rax,10 
	jz LB_3760
	cmp rax,32 
	jz LB_3760
LB_3762
	lea rax,[r14+1]
	cmp rax,r9
	jg LB_3765
	jmp LB_3766
LB_3765:
	mov r8,unt_1
	jmp LB_3763
LB_3766:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],61
	jnz LB_3767
	jmp LB_3768
LB_3767:
	mov r8,unt_1
	jmp LB_3763
LB_3768:
	add r14,1
	jmp LB_3764
LB_3763:
	lea rsp,[rsp+8*1]
	jmp LB_3752
LB_3764:
	jmp LB_3770
LB_3769:
	add r14,1 
LB_3770:
	cmp r14,r9
	jge LB_3771
	movzx rax,BYTE [r13+8+r14]
	cmp rax,9 
	jz LB_3769
	cmp rax,10 
	jz LB_3769
	cmp rax,32 
	jz LB_3769
LB_3771
	call GRM_189
	movzx rax,BYTE [r8+6]
	cmp rax,0
	jnz LB_3774
	jmp LB_3775
LB_3774:
	jmp LB_3772
LB_3775:
	lea rsp,[rsp-8*1]
	mov r8,[r8+8]
; .mov_ptn2 2'(= a9◂ [ ] ) ⊢ 9'(= a9◂ [ ] )
; .mov_ptn 2'(= a9◂ [ ] ) ⊢ 9'(= a9◂ [ ] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_3773
LB_3772:
	lea rsp,[rsp+8*1]
	jmp LB_3752
LB_3773:
	jmp LB_3777
LB_3776:
	add r14,1 
LB_3777:
	cmp r14,r9
	jge LB_3778
	movzx rax,BYTE [r13+8+r14]
	cmp rax,9 
	jz LB_3776
	cmp rax,10 
	jz LB_3776
	cmp rax,32 
	jz LB_3776
LB_3778
	call GRM_246
	movzx rax,BYTE [r8+6]
	cmp rax,0
	jnz LB_3781
	jmp LB_3782
LB_3781:
	jmp LB_3779
LB_3782:
; .mov_ptn2 2'(= *{ } ) ⊢ { }
; .mov_ptn 2'(= *{ } ) ⊢ { }
	jmp LB_3780
LB_3779:
	lea rsp,[rsp+8*2]
	jmp LB_3752
LB_3780:
	mov QWORD [rsp+8*2],r14
	mov r13,QWORD [rsp+16+8*2]
	mov r14,QWORD [rsp+8*2]
	jmp LB_3784
LB_3784
;; rsp=2 , %2232~1'(= r ) %2231~0'(= r ) %2230~{ } %2229~9'(= a9◂ [ ] ) %2228~8'(= {| l |} ) 
; #22 { } ⊢ 0(<2)◂{ }
;; rsp=2 , %2233~0(<2)◂{ } %2232~1'(= r ) %2231~0'(= r ) %2230~{ } %2229~9'(= a9◂ [ ] ) %2228~8'(= {| l |} ) 
; ∎ 0(<2)◂{ }
; .dlt.ptn 1'(= r )
; .dlt.ptn 0'(= r )
; .dlt.ptn { }
; .dlt.ptn 9'(= a9◂ [ ] )
;	.dlt adt ⊢ _  
; .dlt.ptn 8'(= {| l |} )
	mov rdi,QWORD [rsp-8+8*2]
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call free 
	mov rsp,QWORD [rsp_tmp] 
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
; .mov_ptn2 0(<2)◂{ } ⊢ 2'(= a3◂ [ *{ }] )
; .mov_ptn 0(<2)◂{ } ⊢ 2'(= a3◂ [ *{ }] )
	mov rax,unt 
	mov rax,unt_0
	mov r8,rax
	lea rsp,[rsp+8*2]
	jmp LB_3783
LB_3783:
	movzx rax,BYTE [r8+6]
	cmp rax,0
	jnz LB_3752
	pop r14
	pop r9
	add rsp,8
	pop r13
	jmp LB_3751
LB_3752:
	jmp LB_3787
LB_3786:
	add r14,1 
LB_3787:
	cmp r14,r9
	jge LB_3788
	movzx rax,BYTE [r13+8+r14]
	cmp rax,9 
	jz LB_3786
	cmp rax,10 
	jz LB_3786
	cmp rax,32 
	jz LB_3786
LB_3788
	call GRM_246
	movzx rax,BYTE [r8+6]
	cmp rax,0
	jnz LB_3791
	jmp LB_3792
LB_3791:
	jmp LB_3789
LB_3792:
; .mov_ptn2 2'(= *{ } ) ⊢ { }
; .mov_ptn 2'(= *{ } ) ⊢ { }
	jmp LB_3790
LB_3789:
	lea rsp,[rsp+8*0]
	jmp LB_3785
LB_3790:
	jmp LB_3794
LB_3793:
	add r14,1 
LB_3794:
	cmp r14,r9
	jge LB_3795
	movzx rax,BYTE [r13+8+r14]
	cmp rax,9 
	jz LB_3793
	cmp rax,10 
	jz LB_3793
	cmp rax,32 
	jz LB_3793
LB_3795
	call GRM_246
	movzx rax,BYTE [r8+6]
	cmp rax,0
	jnz LB_3798
	jmp LB_3799
LB_3798:
	jmp LB_3796
LB_3799:
; .mov_ptn2 2'(= *{ } ) ⊢ { }
; .mov_ptn 2'(= *{ } ) ⊢ { }
	jmp LB_3797
LB_3796:
	lea rsp,[rsp+8*0]
	jmp LB_3785
LB_3797:
	mov QWORD [rsp+8*0],r14
	mov r13,QWORD [rsp+16+8*0]
	mov r14,QWORD [rsp+8*0]
	jmp LB_3801
LB_3801
;; rsp=0 , %2237~1'(= r ) %2236~0'(= r ) %2235~{ } %2234~{ } 
; #22 { } ⊢ 0(<2)◂{ }
;; rsp=0 , %2238~0(<2)◂{ } %2237~1'(= r ) %2236~0'(= r ) %2235~{ } %2234~{ } 
; ∎ 0(<2)◂{ }
; .dlt.ptn 1'(= r )
; .dlt.ptn 0'(= r )
; .dlt.ptn { }
; .dlt.ptn { }
; .mov_ptn2 0(<2)◂{ } ⊢ 2'(= a3◂ [ *{ }] )
; .mov_ptn 0(<2)◂{ } ⊢ 2'(= a3◂ [ *{ }] )
	mov rax,unt 
	mov rax,unt_0
	mov r8,rax
	jmp LB_3800
LB_3800:
	movzx rax,BYTE [r8+6]
	cmp rax,0
	jnz LB_3785
	pop r14
	pop r9
	add rsp,8
	pop r13
	jmp LB_3751
LB_3785:
	pop rdi
	pop r9 
	pop r14
	pop r13
	jmp LB_3751
LB_3751:
	movzx rax,BYTE [r8+6]
	cmp rax,0
	jnz LB_3802
	jmp LB_3803
LB_3802:
	lea rsp,[rsp+8*0]
	add rsp,8
	pop r9 
	pop r14 
	pop r13
	ret
LB_3803:
	mov QWORD [rsp+8*0],r14
; .mov_ptn2 2'(= *{ } ) ⊢ { }
; .mov_ptn 2'(= *{ } ) ⊢ { }
	mov r13,QWORD [rsp+16+8*0]
	mov r14,QWORD [rsp+8*0]
	jmp LB_3805
LB_3805
;; rsp=0 , %2239~{ } %2227~1'(= r ) %2226~0'(= r ) 
; #22 { } ⊢ 0(<2)◂{ }
;; rsp=0 , %2240~0(<2)◂{ } %2239~{ } %2227~1'(= r ) %2226~0'(= r ) 
; ∎ 0(<2)◂{ }
; .dlt.ptn { }
; .dlt.ptn 1'(= r )
; .dlt.ptn 0'(= r )
; .mov_ptn2 0(<2)◂{ } ⊢ 2'(= a3◂ [ *{ }] )
; .mov_ptn 0(<2)◂{ } ⊢ 2'(= a3◂ [ *{ }] )
	mov rax,unt 
	mov rax,unt_0
	mov r8,rax
	jmp LB_3804
LB_3804:
	movzx rax,BYTE [r8+6]
	cmp rax,0
	jnz LB_3741
	pop r14
	pop r9
	add rsp,8
	pop r13
	ret
LB_3741:
	jmp LB_3808
LB_3807:
	add r14,1 
LB_3808:
	cmp r14,r9
	jge LB_3809
	movzx rax,BYTE [r13+8+r14]
	cmp rax,9 
	jz LB_3807
	cmp rax,10 
	jz LB_3807
	cmp rax,32 
	jz LB_3807
LB_3809
	cmp r14,r9
	jge LB_3812
	jmp LB_3813
LB_3812:
	mov r8,unt_1 
	jmp LB_3810
LB_3813:
	movzx rdi,BYTE [r13+8+r14]
	push rdi 
	add r14,1 
	jmp LB_3811
LB_3810:
	lea rsp,[rsp+8*0]
	jmp LB_3806
LB_3811:
	jmp LB_3815
LB_3814:
	add r14,1 
LB_3815:
	cmp r14,r9
	jge LB_3816
	movzx rax,BYTE [r13+8+r14]
	cmp rax,9 
	jz LB_3814
	cmp rax,10 
	jz LB_3814
	cmp rax,32 
	jz LB_3814
LB_3816
	call GRM_246
	movzx rax,BYTE [r8+6]
	cmp rax,0
	jnz LB_3819
	jmp LB_3820
LB_3819:
	jmp LB_3817
LB_3820:
; .mov_ptn2 2'(= *{ } ) ⊢ { }
; .mov_ptn 2'(= *{ } ) ⊢ { }
	jmp LB_3818
LB_3817:
	lea rsp,[rsp+8*1]
	jmp LB_3806
LB_3818:
	mov QWORD [rsp+8*1],r14
	mov r13,QWORD [rsp+16+8*1]
	mov r14,QWORD [rsp+8*1]
	jmp LB_3822
LB_3822
;; rsp=1 , %2244~1'(= r ) %2243~0'(= r ) %2242~{ } %2241~8'(= r ) 
; #22 { } ⊢ 0(<2)◂{ }
;; rsp=1 , %2245~0(<2)◂{ } %2244~1'(= r ) %2243~0'(= r ) %2242~{ } %2241~8'(= r ) 
; ∎ 0(<2)◂{ }
; .dlt.ptn 1'(= r )
; .dlt.ptn 0'(= r )
; .dlt.ptn { }
; .dlt.ptn 8'(= r )
; .mov_ptn2 0(<2)◂{ } ⊢ 2'(= a3◂ [ *{ }] )
; .mov_ptn 0(<2)◂{ } ⊢ 2'(= a3◂ [ *{ }] )
	mov rax,unt 
	mov rax,unt_0
	mov r8,rax
	lea rsp,[rsp+8*1]
	jmp LB_3821
LB_3821:
	movzx rax,BYTE [r8+6]
	cmp rax,0
	jnz LB_3806
	pop r14
	pop r9
	add rsp,8
	pop r13
	ret
LB_3806:
	mov QWORD [rsp+8*0],r14
	mov r13,QWORD [rsp+16+8*0]
	mov r14,QWORD [rsp+8*0]
	jmp LB_3825
LB_3825
;; rsp=0 , %2247~1'(= r ) %2246~0'(= r ) 
; #22 { } ⊢ 0(<2)◂{ }
;; rsp=0 , %2248~0(<2)◂{ } %2247~1'(= r ) %2246~0'(= r ) 
; ∎ 0(<2)◂{ }
; .dlt.ptn 1'(= r )
; .dlt.ptn 0'(= r )
; .mov_ptn2 0(<2)◂{ } ⊢ 2'(= a3◂ [ *{ }] )
; .mov_ptn 0(<2)◂{ } ⊢ 2'(= a3◂ [ *{ }] )
	mov rax,unt 
	mov rax,unt_0
	mov r8,rax
	jmp LB_3824
LB_3824:
	movzx rax,BYTE [r8+6]
	cmp rax,0
	jnz LB_3823
	pop r14
	pop r9
	add rsp,8
	pop r13
	ret
LB_3823:
	pop rdi
	pop r9 
	pop r14
	pop r13
	ret
ETR_247:
	mov r9,0x0000_ffff_ffff_ffff
	and r9,[r13]
	call GRM_247
	ret
GRM_247:
	sub rsp,32
	mov QWORD [rsp+24],r13
	mov QWORD [rsp+16],r14 
	mov QWORD [rsp+8],r9
	jmp LB_3828
LB_3827:
	add r14,1 
LB_3828:
	cmp r14,r9
	jge LB_3829
	movzx rax,BYTE [r13+8+r14]
	cmp rax,9 
	jz LB_3827
	cmp rax,10 
	jz LB_3827
	cmp rax,32 
	jz LB_3827
LB_3829
	lea rax,[r14+1]
	cmp rax,r9
	jg LB_3832
	jmp LB_3833
LB_3832:
	mov r8,unt_1
	jmp LB_3830
LB_3833:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],61
	jnz LB_3834
	jmp LB_3835
LB_3834:
	mov r8,unt_1
	jmp LB_3830
LB_3835:
	add r14,1
	jmp LB_3831
LB_3830:
	lea rsp,[rsp+8*0]
	jmp LB_3826
LB_3831:
	jmp LB_3837
LB_3836:
	add r14,1 
LB_3837:
	cmp r14,r9
	jge LB_3838
	movzx rax,BYTE [r13+8+r14]
	cmp rax,9 
	jz LB_3836
	cmp rax,10 
	jz LB_3836
	cmp rax,32 
	jz LB_3836
LB_3838
	call GRM_189
	movzx rax,BYTE [r8+6]
	cmp rax,0
	jnz LB_3841
	jmp LB_3842
LB_3841:
	jmp LB_3839
LB_3842:
	lea rsp,[rsp-8*1]
	mov r8,[r8+8]
; .mov_ptn2 2'(= a9◂ [ ] ) ⊢ 8'(= a9◂ [ ] )
; .mov_ptn 2'(= a9◂ [ ] ) ⊢ 8'(= a9◂ [ ] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_3840
LB_3839:
	lea rsp,[rsp+8*0]
	pop rdi
	pop r9 
	pop r14
	pop r13
	ret
LB_3840:
	jmp LB_3844
LB_3843:
	add r14,1 
LB_3844:
	cmp r14,r9
	jge LB_3845
	movzx rax,BYTE [r13+8+r14]
	cmp rax,9 
	jz LB_3843
	cmp rax,10 
	jz LB_3843
	cmp rax,32 
	jz LB_3843
LB_3845
	call GRM_217
	movzx rax,BYTE [r8+6]
	cmp rax,0
	jnz LB_3848
	jmp LB_3849
LB_3848:
	jmp LB_3846
LB_3849:
	lea rsp,[rsp-8*1]
	mov r8,[r8+8]
; .mov_ptn2 2'(= a35◂ [ *{ }] ) ⊢ 9'(= a35◂ [ *{ }] )
; .mov_ptn 2'(= a35◂ [ *{ }] ) ⊢ 9'(= a35◂ [ *{ }] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_3847
LB_3846:
	lea rsp,[rsp+8*1]
	pop rdi
	pop r9 
	pop r14
	pop r13
	ret
LB_3847:
	mov QWORD [rsp+8*2],r14
	mov r13,QWORD [rsp+16+8*2]
	mov r14,QWORD [rsp+8*2]
	jmp LB_3851
LB_3851
;; rsp=2 , %2252~1'(= r ) %2251~0'(= r ) %2250~9'(= a35◂ [ *{ }] ) %2249~8'(= a9◂ [ ] ) 
; #169 8'(= a9◂ [ ] ) ⊢ 1(<2)◂8'(= a9◂ [ ] )
;; rsp=2 , %2253~1(<2)◂8'(= a9◂ [ ] ) %2252~1'(= r ) %2251~0'(= r ) %2250~9'(= a35◂ [ *{ }] ) 
; #193 1(<2)◂8'(= a9◂ [ ] ) ⊢ 0(<2)◂1(<2)◂8'(= a9◂ [ ] )
;; rsp=2 , %2254~0(<2)◂1(<2)◂8'(= a9◂ [ ] ) %2252~1'(= r ) %2251~0'(= r ) %2250~9'(= a35◂ [ *{ }] ) 
; #22 0(<2)◂1(<2)◂8'(= a9◂ [ ] ) ⊢ 0(<2)◂0(<2)◂1(<2)◂8'(= a9◂ [ ] )
;; rsp=2 , %2255~0(<2)◂0(<2)◂1(<2)◂8'(= a9◂ [ ] ) %2252~1'(= r ) %2251~0'(= r ) %2250~9'(= a35◂ [ *{ }] ) 
; ∎ 0(<2)◂0(<2)◂1(<2)◂8'(= a9◂ [ ] )
; .dlt.ptn 1'(= r )
; .dlt.ptn 0'(= r )
; .dlt.ptn 9'(= a35◂ [ *{ }] )
;	.dlt adt ⊢ _  
; .mov_ptn2 0(<2)◂0(<2)◂1(<2)◂8'(= a9◂ [ ] ) ⊢ 2'(= a3◂ [ a35◂ [ a32◂ [ ]]] )
; .mov_ptn 0(<2)◂0(<2)◂1(<2)◂8'(= a9◂ [ ] ) ⊢ 2'(= a3◂ [ a35◂ [ a32◂ [ ]]] )
	mov rax,QWORD [rsp-8+8*2]
	mov rdi,rax
	mov rax,[SS_LN_TOP]
	mov rsi,[rax]
	mov QWORD [SS_LN_TOP],rsi 
	mov QWORD [rax],0
	mov BYTE [rax+6],1
	mov QWORD [rax+8],rdi
	mov rdi,rax
	mov rax,[SS_LN_TOP]
	mov rsi,[rax]
	mov QWORD [SS_LN_TOP],rsi 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov rdi,rax
	mov rax,[SS_LN_TOP]
	mov rsi,[rax]
	mov QWORD [SS_LN_TOP],rsi 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	lea rsp,[rsp+8*2]
	jmp LB_3850
LB_3850:
	movzx rax,BYTE [r8+6]
	cmp rax,0
	jnz LB_3826
	pop r14
	pop r9
	add rsp,8
	pop r13
	ret
LB_3826:
	jmp LB_3854
LB_3853:
	add r14,1 
LB_3854:
	cmp r14,r9
	jge LB_3855
	movzx rax,BYTE [r13+8+r14]
	cmp rax,9 
	jz LB_3853
	cmp rax,10 
	jz LB_3853
	cmp rax,32 
	jz LB_3853
LB_3855
	call GRM_217
	movzx rax,BYTE [r8+6]
	cmp rax,0
	jnz LB_3858
	jmp LB_3859
LB_3858:
	jmp LB_3856
LB_3859:
	lea rsp,[rsp-8*1]
	mov r8,[r8+8]
; .mov_ptn2 2'(= a35◂ [ *{ }] ) ⊢ 8'(= a35◂ [ *{ }] )
; .mov_ptn 2'(= a35◂ [ *{ }] ) ⊢ 8'(= a35◂ [ *{ }] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_3857
LB_3856:
	lea rsp,[rsp+8*0]
	jmp LB_3852
LB_3857:
	jmp LB_3861
LB_3860:
	add r14,1 
LB_3861:
	cmp r14,r9
	jge LB_3862
	movzx rax,BYTE [r13+8+r14]
	cmp rax,9 
	jz LB_3860
	cmp rax,10 
	jz LB_3860
	cmp rax,32 
	jz LB_3860
LB_3862
	call GRM_248
	movzx rax,BYTE [r8+6]
	cmp rax,0
	jnz LB_3865
	jmp LB_3866
LB_3865:
	jmp LB_3863
LB_3866:
	lea rsp,[rsp-8*1]
	mov r8,[r8+8]
; .mov_ptn2 2'(= a35◂ [ a2◂ [ a31◂ [ ]]] ) ⊢ 9'(= a35◂ [ a2◂ [ a31◂ [ ]]] )
; .mov_ptn 2'(= a35◂ [ a2◂ [ a31◂ [ ]]] ) ⊢ 9'(= a35◂ [ a2◂ [ a31◂ [ ]]] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_3864
LB_3863:
	lea rsp,[rsp+8*1]
	jmp LB_3852
LB_3864:
	mov QWORD [rsp+8*2],r14
	mov r13,QWORD [rsp+16+8*2]
	mov r14,QWORD [rsp+8*2]
	jmp LB_3868
LB_3868
;; rsp=2 , %2259~1'(= r ) %2258~0'(= r ) %2257~9'(= a35◂ [ a2◂ [ a31◂ [ ]]] ) %2256~8'(= a35◂ [ *{ }] ) 
;; ? 9'(= a35◂ [ a2◂ [ a31◂ [ ]]] ) ⊢ 0(<2)◂2'(= a2◂ [ a31◂ [ ]] )
	mov rdi,QWORD [rsp-8+8*1]
	movzx rax,BYTE [rdi+6]
	cmp rax,0
	jnz LB_3869
	mov rax,QWORD [rdi+8]
	mov r8,rax
;; rsp=2 , %2261~2'(= a2◂ [ a31◂ [ ]] ) %2259~1'(= r ) %2258~0'(= r ) %2256~8'(= a35◂ [ *{ }] ) 
; #170 2'(= a2◂ [ a31◂ [ ]] ) ⊢ 0(<2)◂2'(= a2◂ [ a31◂ [ ]] )
;; rsp=2 , %2262~0(<2)◂2'(= a2◂ [ a31◂ [ ]] ) %2259~1'(= r ) %2258~0'(= r ) %2256~8'(= a35◂ [ *{ }] ) 
; #193 0(<2)◂2'(= a2◂ [ a31◂ [ ]] ) ⊢ 0(<2)◂0(<2)◂2'(= a2◂ [ a31◂ [ ]] )
;; rsp=2 , %2263~0(<2)◂0(<2)◂2'(= a2◂ [ a31◂ [ ]] ) %2259~1'(= r ) %2258~0'(= r ) %2256~8'(= a35◂ [ *{ }] ) 
; #22 0(<2)◂0(<2)◂2'(= a2◂ [ a31◂ [ ]] ) ⊢ 0(<2)◂0(<2)◂0(<2)◂2'(= a2◂ [ a31◂ [ ]] )
;; rsp=2 , %2264~0(<2)◂0(<2)◂0(<2)◂2'(= a2◂ [ a31◂ [ ]] ) %2259~1'(= r ) %2258~0'(= r ) %2256~8'(= a35◂ [ *{ }] ) 
; ∎ 0(<2)◂0(<2)◂0(<2)◂2'(= a2◂ [ a31◂ [ ]] )
; .dlt.ptn 1'(= r )
; .dlt.ptn 0'(= r )
; .dlt.ptn 8'(= a35◂ [ *{ }] )
;	.dlt adt ⊢ _  
; .mov_ptn2 0(<2)◂0(<2)◂0(<2)◂2'(= a2◂ [ a31◂ [ ]] ) ⊢ 2'(= a3◂ [ a35◂ [ a32◂ [ ]]] )
	mov r13,r8
; .mov_ptn 0(<2)◂0(<2)◂0(<2)◂0'(= a2◂ [ a31◂ [ ]] ) ⊢ 2'(= a3◂ [ a35◂ [ a32◂ [ ]]] )
	mov rax,r13
	mov rdi,rax
	mov rax,[SS_LN_TOP]
	mov rsi,[rax]
	mov QWORD [SS_LN_TOP],rsi 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov rdi,rax
	mov rax,[SS_LN_TOP]
	mov rsi,[rax]
	mov QWORD [SS_LN_TOP],rsi 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov rdi,rax
	mov rax,[SS_LN_TOP]
	mov rsi,[rax]
	mov QWORD [SS_LN_TOP],rsi 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	lea rsp,[rsp+8*2]
	jmp LB_3867
LB_3869:
;; ? 9'(= a35◂ [ a2◂ [ a31◂ [ ]]] ) ⊢ 1(<2)◂9'(= a2◂ [ *{ rr{| l |}}] )
;; rsp=2 , %2260~9'(= a2◂ [ *{ rr{| l |}}] ) %2259~1'(= r ) %2258~0'(= r ) %2256~8'(= a35◂ [ *{ }] ) 
; #192 9'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 1(<2)◂9'(= a2◂ [ *{ rr{| l |}}] )
;; rsp=2 , %2265~1(<2)◂9'(= a2◂ [ *{ rr{| l |}}] ) %2259~1'(= r ) %2258~0'(= r ) %2256~8'(= a35◂ [ *{ }] ) 
; #22 1(<2)◂9'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 0(<2)◂1(<2)◂9'(= a2◂ [ *{ rr{| l |}}] )
;; rsp=2 , %2266~0(<2)◂1(<2)◂9'(= a2◂ [ *{ rr{| l |}}] ) %2259~1'(= r ) %2258~0'(= r ) %2256~8'(= a35◂ [ *{ }] ) 
; ∎ 0(<2)◂1(<2)◂9'(= a2◂ [ *{ rr{| l |}}] )
; .dlt.ptn 1'(= r )
; .dlt.ptn 0'(= r )
; .dlt.ptn 8'(= a35◂ [ *{ }] )
;	.dlt adt ⊢ _  
; .mov_ptn2 0(<2)◂1(<2)◂9'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 2'(= a3◂ [ a35◂ [ a32◂ [ ]]] )
; .mov_ptn 0(<2)◂1(<2)◂9'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 2'(= a3◂ [ a35◂ [ a32◂ [ ]]] )
	mov rax,QWORD [rsp-8+8*1]
	mov rdi,rax
	mov rax,[SS_LN_TOP]
	mov rsi,[rax]
	mov QWORD [SS_LN_TOP],rsi 
	mov QWORD [rax],0
	mov BYTE [rax+6],1
	mov QWORD [rax+8],rdi
	mov rdi,rax
	mov rax,[SS_LN_TOP]
	mov rsi,[rax]
	mov QWORD [SS_LN_TOP],rsi 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	lea rsp,[rsp+8*2]
	jmp LB_3867
LB_3867:
	movzx rax,BYTE [r8+6]
	cmp rax,0
	jnz LB_3852
	pop r14
	pop r9
	add rsp,8
	pop r13
	ret
LB_3852:
	pop rdi
	pop r9 
	pop r14
	pop r13
	ret
ETR_248:
	mov r9,0x0000_ffff_ffff_ffff
	and r9,[r13]
	call GRM_248
	ret
GRM_248:
	sub rsp,32
	mov QWORD [rsp+24],r13
	mov QWORD [rsp+16],r14 
	mov QWORD [rsp+8],r9
	jmp LB_3872
LB_3871:
	add r14,1 
LB_3872:
	cmp r14,r9
	jge LB_3873
	movzx rax,BYTE [r13+8+r14]
	cmp rax,9 
	jz LB_3871
	cmp rax,10 
	jz LB_3871
	cmp rax,32 
	jz LB_3871
LB_3873
	call GRM_217
	movzx rax,BYTE [r8+6]
	cmp rax,0
	jnz LB_3876
	jmp LB_3877
LB_3876:
	jmp LB_3874
LB_3877:
	lea rsp,[rsp-8*1]
	mov r8,[r8+8]
; .mov_ptn2 2'(= a35◂ [ *{ }] ) ⊢ 8'(= a35◂ [ *{ }] )
; .mov_ptn 2'(= a35◂ [ *{ }] ) ⊢ 8'(= a35◂ [ *{ }] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_3875
LB_3874:
	lea rsp,[rsp+8*0]
	jmp LB_3870
LB_3875:
	jmp LB_3879
LB_3878:
	add r14,1 
LB_3879:
	cmp r14,r9
	jge LB_3880
	movzx rax,BYTE [r13+8+r14]
	cmp rax,9 
	jz LB_3878
	cmp rax,10 
	jz LB_3878
	cmp rax,32 
	jz LB_3878
LB_3880
	lea rax,[r14+6]
	cmp rax,r9
	jg LB_3883
	jmp LB_3884
LB_3883:
	mov r8,unt_1
	jmp LB_3881
LB_3884:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],226
	jnz LB_3885
	cmp BYTE [rdi+1],136
	jnz LB_3885
	cmp BYTE [rdi+2],142
	jnz LB_3885
	cmp BYTE [rdi+3],226
	jnz LB_3885
	cmp BYTE [rdi+4],136
	jnz LB_3885
	cmp BYTE [rdi+5],142
	jnz LB_3885
	jmp LB_3886
LB_3885:
	mov r8,unt_1
	jmp LB_3881
LB_3886:
	add r14,6
	jmp LB_3882
LB_3881:
	lea rsp,[rsp+8*1]
	jmp LB_3870
LB_3882:
	jmp LB_3888
LB_3887:
	add r14,1 
LB_3888:
	cmp r14,r9
	jge LB_3889
	movzx rax,BYTE [r13+8+r14]
	cmp rax,9 
	jz LB_3887
	cmp rax,10 
	jz LB_3887
	cmp rax,32 
	jz LB_3887
LB_3889
	call GRM_217
	movzx rax,BYTE [r8+6]
	cmp rax,0
	jnz LB_3892
	jmp LB_3893
LB_3892:
	jmp LB_3890
LB_3893:
	lea rsp,[rsp-8*1]
	mov r8,[r8+8]
; .mov_ptn2 2'(= a35◂ [ *{ }] ) ⊢ 9'(= a35◂ [ *{ }] )
; .mov_ptn 2'(= a35◂ [ *{ }] ) ⊢ 9'(= a35◂ [ *{ }] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_3891
LB_3890:
	lea rsp,[rsp+8*1]
	jmp LB_3870
LB_3891:
	mov QWORD [rsp+8*2],r14
	mov r13,QWORD [rsp+16+8*2]
	mov r14,QWORD [rsp+8*2]
	jmp LB_3895
LB_3895
;; rsp=2 , %2270~1'(= r ) %2269~0'(= r ) %2268~9'(= a35◂ [ *{ }] ) %2267~8'(= a35◂ [ *{ }] ) 
; #20 { } ⊢ 1(<2)◂{ }
;; rsp=2 , %2271~1(<2)◂{ } %2270~1'(= r ) %2269~0'(= r ) %2268~9'(= a35◂ [ *{ }] ) %2267~8'(= a35◂ [ *{ }] ) 
; #193 1(<2)◂{ } ⊢ 0(<2)◂1(<2)◂{ }
;; rsp=2 , %2272~0(<2)◂1(<2)◂{ } %2270~1'(= r ) %2269~0'(= r ) %2268~9'(= a35◂ [ *{ }] ) %2267~8'(= a35◂ [ *{ }] ) 
; #22 0(<2)◂1(<2)◂{ } ⊢ 0(<2)◂0(<2)◂1(<2)◂{ }
;; rsp=2 , %2273~0(<2)◂0(<2)◂1(<2)◂{ } %2270~1'(= r ) %2269~0'(= r ) %2268~9'(= a35◂ [ *{ }] ) %2267~8'(= a35◂ [ *{ }] ) 
; ∎ 0(<2)◂0(<2)◂1(<2)◂{ }
; .dlt.ptn 1'(= r )
; .dlt.ptn 0'(= r )
; .dlt.ptn 9'(= a35◂ [ *{ }] )
;	.dlt adt ⊢ _  
; .dlt.ptn 8'(= a35◂ [ *{ }] )
;	.dlt adt ⊢ _  
; .mov_ptn2 0(<2)◂0(<2)◂1(<2)◂{ } ⊢ 2'(= a3◂ [ a35◂ [ a2◂ [ a31◂ [ ]]]] )
; .mov_ptn 0(<2)◂0(<2)◂1(<2)◂{ } ⊢ 2'(= a3◂ [ a35◂ [ a2◂ [ a31◂ [ ]]]] )
	mov rax,unt 
	mov rax,unt_1
	mov rdi,rax
	mov rax,[SS_LN_TOP]
	mov rsi,[rax]
	mov QWORD [SS_LN_TOP],rsi 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov rdi,rax
	mov rax,[SS_LN_TOP]
	mov rsi,[rax]
	mov QWORD [SS_LN_TOP],rsi 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	lea rsp,[rsp+8*2]
	jmp LB_3894
LB_3894:
	movzx rax,BYTE [r8+6]
	cmp rax,0
	jnz LB_3870
	pop r14
	pop r9
	add rsp,8
	pop r13
	ret
LB_3870:
	jmp LB_3898
LB_3897:
	add r14,1 
LB_3898:
	cmp r14,r9
	jge LB_3899
	movzx rax,BYTE [r13+8+r14]
	cmp rax,9 
	jz LB_3897
	cmp rax,10 
	jz LB_3897
	cmp rax,32 
	jz LB_3897
LB_3899
	call GRM_217
	movzx rax,BYTE [r8+6]
	cmp rax,0
	jnz LB_3902
	jmp LB_3903
LB_3902:
	jmp LB_3900
LB_3903:
	lea rsp,[rsp-8*1]
	mov r8,[r8+8]
; .mov_ptn2 2'(= a35◂ [ *{ }] ) ⊢ 8'(= a35◂ [ *{ }] )
; .mov_ptn 2'(= a35◂ [ *{ }] ) ⊢ 8'(= a35◂ [ *{ }] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_3901
LB_3900:
	lea rsp,[rsp+8*0]
	jmp LB_3896
LB_3901:
	jmp LB_3905
LB_3904:
	add r14,1 
LB_3905:
	cmp r14,r9
	jge LB_3906
	movzx rax,BYTE [r13+8+r14]
	cmp rax,9 
	jz LB_3904
	cmp rax,10 
	jz LB_3904
	cmp rax,32 
	jz LB_3904
LB_3906
	call GRM_244
	movzx rax,BYTE [r8+6]
	cmp rax,0
	jnz LB_3909
	jmp LB_3910
LB_3909:
	jmp LB_3907
LB_3910:
	lea rsp,[rsp-8*1]
	mov r8,[r8+8]
; .mov_ptn2 2'(= a35◂ [ a31◂ [ ]] ) ⊢ 9'(= a35◂ [ a31◂ [ ]] )
; .mov_ptn 2'(= a35◂ [ a31◂ [ ]] ) ⊢ 9'(= a35◂ [ a31◂ [ ]] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_3908
LB_3907:
	lea rsp,[rsp+8*1]
	jmp LB_3896
LB_3908:
	jmp LB_3912
LB_3911:
	add r14,1 
LB_3912:
	cmp r14,r9
	jge LB_3913
	movzx rax,BYTE [r13+8+r14]
	cmp rax,9 
	jz LB_3911
	cmp rax,10 
	jz LB_3911
	cmp rax,32 
	jz LB_3911
LB_3913
	call GRM_248
	movzx rax,BYTE [r8+6]
	cmp rax,0
	jnz LB_3916
	jmp LB_3917
LB_3916:
	jmp LB_3914
LB_3917:
	lea rsp,[rsp-8*1]
	mov r8,[r8+8]
; .mov_ptn2 2'(= a35◂ [ a2◂ [ a31◂ [ ]]] ) ⊢ 10'(= a35◂ [ a2◂ [ a31◂ [ ]]] )
; .mov_ptn 2'(= a35◂ [ a2◂ [ a31◂ [ ]]] ) ⊢ 10'(= a35◂ [ a2◂ [ a31◂ [ ]]] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_3915
LB_3914:
	lea rsp,[rsp+8*2]
	jmp LB_3896
LB_3915:
	mov QWORD [rsp+8*3],r14
	mov r13,QWORD [rsp+16+8*3]
	mov r14,QWORD [rsp+8*3]
	jmp LB_3919
LB_3919
;; rsp=3 , %2278~1'(= r ) %2277~0'(= r ) %2276~10'(= a35◂ [ a2◂ [ a31◂ [ ]]] ) %2275~9'(= a35◂ [ a31◂ [ ]] ) %2274~8'(= a35◂ [ *{ }] ) 
; rsp_d=0, #194 { 9'(= a35◂ [ a31◂ [ ]] ) 10'(= a35◂ [ a2◂ [ a31◂ [ ]]] ) } ⊢ 2'(= a35◂ [ *{ a31◂ [ ]a2◂ [ a31◂ [ ]]}] )
	lea rsp,[rsp-8*2]
	mov QWORD [rsp+8*0],r13
	mov QWORD [rsp+8*1],r14
; .mov_ptn2 { 9'(= a35◂ [ a31◂ [ ]] ) 10'(= a35◂ [ a2◂ [ a31◂ [ ]]] ) } ⊢ { 0'(= a35◂ [ a31◂ [ ]] ) 1'(= a35◂ [ a2◂ [ a31◂ [ ]]] ) }
; .mov_ptn 10'(= a35◂ [ a2◂ [ a31◂ [ ]]] ) ⊢ 1'(= a35◂ [ a2◂ [ a31◂ [ ]]] )
	mov rax,QWORD [rsp-8+8*3]
	mov r14,rax
; .mov_ptn 9'(= a35◂ [ a31◂ [ ]] ) ⊢ 0'(= a35◂ [ a31◂ [ ]] )
	mov rax,QWORD [rsp-8+8*4]
	mov r13,rax
	call LB_3496

	mov r14,QWORD [rsp-8+8*2]
	mov rax,QWORD [rsp-8+8*1]
	mov r8,r13
	mov r13,rax
	lea rsp,[rsp+8*4]
;; rsp=1 , %2279~2'(= a35◂ [ *{ a31◂ [ ]a2◂ [ a31◂ [ ]]}] ) %2278~1'(= r ) %2277~0'(= r ) %2274~8'(= a35◂ [ *{ }] ) 
;; ? 2'(= a35◂ [ *{ a31◂ [ ]a2◂ [ a31◂ [ ]]}] ) ⊢ 0(<2)◂{ 3'(= a31◂ [ ] ) 4'(= a2◂ [ a31◂ [ ]] ) }
	mov rdi,r8
	movzx rax,BYTE [rdi+6]
	cmp rax,0
	jnz LB_3920
	mov rdi,r8
	mov rdi,QWORD [rdi+8+8*0]
	mov r9,rdi
	mov rdi,r8
	mov rdi,QWORD [rdi+8+8*1]
	mov r10,rdi
;; rsp=1 , %2282~4'(= a2◂ [ a31◂ [ ]] ) %2281~3'(= a31◂ [ ] ) %2278~1'(= r ) %2277~0'(= r ) %2274~8'(= a35◂ [ *{ }] ) 
; #21 { 3'(= a31◂ [ ] ) 4'(= a2◂ [ a31◂ [ ]] ) } ⊢ 0(<2)◂{ 3'(= a31◂ [ ] ) 4'(= a2◂ [ a31◂ [ ]] ) }
;; rsp=1 , %2283~0(<2)◂{ 3'(= a31◂ [ ] ) 4'(= a2◂ [ a31◂ [ ]] ) } %2278~1'(= r ) %2277~0'(= r ) %2274~8'(= a35◂ [ *{ }] ) 
; #193 0(<2)◂{ 3'(= a31◂ [ ] ) 4'(= a2◂ [ a31◂ [ ]] ) } ⊢ 0(<2)◂0(<2)◂{ 3'(= a31◂ [ ] ) 4'(= a2◂ [ a31◂ [ ]] ) }
;; rsp=1 , %2284~0(<2)◂0(<2)◂{ 3'(= a31◂ [ ] ) 4'(= a2◂ [ a31◂ [ ]] ) } %2278~1'(= r ) %2277~0'(= r ) %2274~8'(= a35◂ [ *{ }] ) 
; #22 0(<2)◂0(<2)◂{ 3'(= a31◂ [ ] ) 4'(= a2◂ [ a31◂ [ ]] ) } ⊢ 0(<2)◂0(<2)◂0(<2)◂{ 3'(= a31◂ [ ] ) 4'(= a2◂ [ a31◂ [ ]] ) }
;; rsp=1 , %2285~0(<2)◂0(<2)◂0(<2)◂{ 3'(= a31◂ [ ] ) 4'(= a2◂ [ a31◂ [ ]] ) } %2278~1'(= r ) %2277~0'(= r ) %2274~8'(= a35◂ [ *{ }] ) 
; ∎ 0(<2)◂0(<2)◂0(<2)◂{ 3'(= a31◂ [ ] ) 4'(= a2◂ [ a31◂ [ ]] ) }
; .dlt.ptn 1'(= r )
; .dlt.ptn 0'(= r )
; .dlt.ptn 8'(= a35◂ [ *{ }] )
;	.dlt adt ⊢ _  
; .mov_ptn2 0(<2)◂0(<2)◂0(<2)◂{ 3'(= a31◂ [ ] ) 4'(= a2◂ [ a31◂ [ ]] ) } ⊢ 2'(= a3◂ [ a35◂ [ a2◂ [ a31◂ [ ]]]] )
; .mov_ptn 0(<2)◂0(<2)◂0(<2)◂{ 3'(= a31◂ [ ] ) 4'(= a2◂ [ a31◂ [ ]] ) } ⊢ 2'(= a3◂ [ a35◂ [ a2◂ [ a31◂ [ ]]]] )
	mov rax,[SS_RCD_2_TOP]
	mov rsi,[rax] 
	mov QWORD [SS_RCD_2_TOP],rsi
	mov QWORD [rax],0
	mov r13,rax
	mov rax,r9
	mov rdi,r13
	mov QWORD [rdi+8+8*0],rax
	mov rax,r10
	mov rdi,r13
	mov QWORD [rdi+8+8*1],rax
	mov rax,r13
	mov BYTE [rax+6],0
	mov rdi,rax
	mov rax,[SS_LN_TOP]
	mov rsi,[rax]
	mov QWORD [SS_LN_TOP],rsi 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov rdi,rax
	mov rax,[SS_LN_TOP]
	mov rsi,[rax]
	mov QWORD [SS_LN_TOP],rsi 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	lea rsp,[rsp+8*1]
	jmp LB_3918
LB_3920:
;; ? 2'(= a35◂ [ *{ a31◂ [ ]a2◂ [ a31◂ [ ]]}] ) ⊢ 1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] )
;; rsp=1 , %2280~2'(= a2◂ [ *{ rr{| l |}}] ) %2278~1'(= r ) %2277~0'(= r ) %2274~8'(= a35◂ [ *{ }] ) 
; #192 2'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] )
;; rsp=1 , %2286~1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] ) %2278~1'(= r ) %2277~0'(= r ) %2274~8'(= a35◂ [ *{ }] ) 
; #22 1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 0(<2)◂1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] )
;; rsp=1 , %2287~0(<2)◂1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] ) %2278~1'(= r ) %2277~0'(= r ) %2274~8'(= a35◂ [ *{ }] ) 
; ∎ 0(<2)◂1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] )
; .dlt.ptn 1'(= r )
; .dlt.ptn 0'(= r )
; .dlt.ptn 8'(= a35◂ [ *{ }] )
;	.dlt adt ⊢ _  
; .mov_ptn2 0(<2)◂1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 2'(= a3◂ [ a35◂ [ a2◂ [ a31◂ [ ]]]] )
	mov r13,r8
; .mov_ptn 0(<2)◂1(<2)◂0'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 2'(= a3◂ [ a35◂ [ a2◂ [ a31◂ [ ]]]] )
	mov rax,r13
	mov rdi,rax
	mov rax,[SS_LN_TOP]
	mov rsi,[rax]
	mov QWORD [SS_LN_TOP],rsi 
	mov QWORD [rax],0
	mov BYTE [rax+6],1
	mov QWORD [rax+8],rdi
	mov rdi,rax
	mov rax,[SS_LN_TOP]
	mov rsi,[rax]
	mov QWORD [SS_LN_TOP],rsi 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	lea rsp,[rsp+8*1]
	jmp LB_3918
LB_3918:
	movzx rax,BYTE [r8+6]
	cmp rax,0
	jnz LB_3896
	pop r14
	pop r9
	add rsp,8
	pop r13
	ret
LB_3896:
	call GRM_246
	movzx rax,BYTE [r8+6]
	cmp rax,0
	jnz LB_3924
	jmp LB_3925
LB_3924:
	jmp LB_3922
LB_3925:
; .mov_ptn2 2'(= *{ } ) ⊢ { }
; .mov_ptn 2'(= *{ } ) ⊢ { }
	jmp LB_3923
LB_3922:
	lea rsp,[rsp+8*0]
	jmp LB_3921
LB_3923:
	mov QWORD [rsp+8*0],r14
	mov r13,QWORD [rsp+16+8*0]
	mov r14,QWORD [rsp+8*0]
	jmp LB_3927
LB_3927
;; rsp=0 , %2290~1'(= r ) %2289~0'(= r ) %2288~{ } 
; #20 { } ⊢ 1(<2)◂{ }
;; rsp=0 , %2291~1(<2)◂{ } %2290~1'(= r ) %2289~0'(= r ) %2288~{ } 
	jmp LB_3928
LB_3928:
; $ %[ "glb_etr 7" ] ⊢ %[ "glb_etr 7" ]
;; rsp=0 , %2292~%[ "glb_etr 7" ] %2291~1(<2)◂{ } %2290~1'(= r ) %2289~0'(= r ) %2288~{ } 
; #21 { { 0'(= r ) 1'(= r ) %[ "glb_etr 7" ] } 1(<2)◂{ } } ⊢ 0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "glb_etr 7" ] } 1(<2)◂{ } }
;; rsp=0 , %2293~0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "glb_etr 7" ] } 1(<2)◂{ } } %2288~{ } 
; #192 0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "glb_etr 7" ] } 1(<2)◂{ } } ⊢ 1(<2)◂0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "glb_etr 7" ] } 1(<2)◂{ } }
;; rsp=0 , %2294~1(<2)◂0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "glb_etr 7" ] } 1(<2)◂{ } } %2288~{ } 
; #22 1(<2)◂0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "glb_etr 7" ] } 1(<2)◂{ } } ⊢ 0(<2)◂1(<2)◂0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "glb_etr 7" ] } 1(<2)◂{ } }
;; rsp=0 , %2295~0(<2)◂1(<2)◂0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "glb_etr 7" ] } 1(<2)◂{ } } %2288~{ } 
; ∎ 0(<2)◂1(<2)◂0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "glb_etr 7" ] } 1(<2)◂{ } }
; .dlt.ptn { }
; .mov_ptn2 0(<2)◂1(<2)◂0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "glb_etr 7" ] } 1(<2)◂{ } } ⊢ 2'(= a3◂ [ a35◂ [ a2◂ [ a31◂ [ ]]]] )
; .mov_ptn 0(<2)◂1(<2)◂0(<2)◂{ { 0'(= r ) 1'(= r ) %[ "glb_etr 7" ] } 1(<2)◂{ } } ⊢ 2'(= a3◂ [ a35◂ [ a2◂ [ a31◂ [ ]]]] )
	mov rax,[SS_RCD_2_TOP]
	mov rsi,[rax] 
	mov QWORD [SS_RCD_2_TOP],rsi
	mov QWORD [rax],0
	mov r9,rax
	mov rax,[SS_RCD_3_TOP]
	mov rsi,[rax] 
	mov QWORD [SS_RCD_3_TOP],rsi
	mov QWORD [rax],0
	mov r10,rax
	mov rax,r13
	mov rdi,r10
	mov QWORD [rdi+8+8*0],rax
	mov rax,r14
	mov rdi,r10
	mov QWORD [rdi+8+8*1],rax
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	mov rdi,1  
	mov rsi,24
	xor rax,rax
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call calloc
	mov rsp,QWORD [rsp_tmp]  
	mov rdi,9
	mov rsi,0x_40_00_0000_0000_0000
	or rdi,rsi
	mov QWORD [rax],rdi
	mov QWORD [rax+8*2],0
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	mov BYTE [rax+8+0],103
	mov BYTE [rax+8+1],108
	mov BYTE [rax+8+2],98
	mov BYTE [rax+8+3],95
	mov BYTE [rax+8+4],101
	mov BYTE [rax+8+5],116
	mov BYTE [rax+8+6],114
	mov BYTE [rax+8+7],32
	mov BYTE [rax+8+8],55
	mov rdi,r10
	mov QWORD [rdi+8+8*2],rax
	mov rax,r10
	mov rdi,r9
	mov QWORD [rdi+8+8*0],rax
	mov rax,unt 
	mov rax,unt_1
	mov rdi,r9
	mov QWORD [rdi+8+8*1],rax
	mov rax,r9
	mov BYTE [rax+6],0
	mov rdi,rax
	mov rax,[SS_LN_TOP]
	mov rsi,[rax]
	mov QWORD [SS_LN_TOP],rsi 
	mov QWORD [rax],0
	mov BYTE [rax+6],1
	mov QWORD [rax+8],rdi
	mov rdi,rax
	mov rax,[SS_LN_TOP]
	mov rsi,[rax]
	mov QWORD [SS_LN_TOP],rsi 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	jmp LB_3926
LB_3926:
	movzx rax,BYTE [r8+6]
	cmp rax,0
	jnz LB_3921
	pop r14
	pop r9
	add rsp,8
	pop r13
	ret
LB_3921:
	pop rdi
	pop r9 
	pop r14
	pop r13
	ret
ETR_249:
	mov r9,0x0000_ffff_ffff_ffff
	and r9,[r13]
	call GRM_249
	ret
GRM_249:
	sub rsp,32
	mov QWORD [rsp+24],r13
	mov QWORD [rsp+16],r14 
	mov QWORD [rsp+8],r9
	jmp LB_3931
LB_3930:
	add r14,1 
LB_3931:
	cmp r14,r9
	jge LB_3932
	movzx rax,BYTE [r13+8+r14]
	cmp rax,9 
	jz LB_3930
	cmp rax,10 
	jz LB_3930
	cmp rax,32 
	jz LB_3930
LB_3932
	lea rax,[r14+1]
	cmp rax,r9
	jg LB_3935
	jmp LB_3936
LB_3935:
	mov r8,unt_1
	jmp LB_3933
LB_3936:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],64
	jnz LB_3937
	jmp LB_3938
LB_3937:
	mov r8,unt_1
	jmp LB_3933
LB_3938:
	add r14,1
	jmp LB_3934
LB_3933:
	lea rsp,[rsp+8*0]
	jmp LB_3929
LB_3934:
	jmp LB_3940
LB_3939:
	add r14,1 
LB_3940:
	cmp r14,r9
	jge LB_3941
	movzx rax,BYTE [r13+8+r14]
	cmp rax,9 
	jz LB_3939
	cmp rax,10 
	jz LB_3939
	cmp rax,32 
	jz LB_3939
LB_3941
	lea rax,[r14+1]
	cmp rax,r9
	jg LB_3944
	jmp LB_3945
LB_3944:
	mov r8,unt_1
	jmp LB_3942
LB_3945:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],46
	jnz LB_3946
	jmp LB_3947
LB_3946:
	mov r8,unt_1
	jmp LB_3942
LB_3947:
	add r14,1
	jmp LB_3943
LB_3942:
	lea rsp,[rsp+8*0]
	pop rdi
	pop r9 
	pop r14
	pop r13
	ret
LB_3943:
	jmp LB_3949
LB_3948:
	add r14,1 
LB_3949:
	cmp r14,r9
	jge LB_3950
	movzx rax,BYTE [r13+8+r14]
	cmp rax,9 
	jz LB_3948
	cmp rax,10 
	jz LB_3948
	cmp rax,32 
	jz LB_3948
LB_3950
	call GRM_250
	movzx rax,BYTE [r8+6]
	cmp rax,0
	jnz LB_3953
	jmp LB_3954
LB_3953:
	jmp LB_3951
LB_3954:
	lea rsp,[rsp-8*2]
; .mov_ptn2 2'(= *{ {| l |}a34◂ [ ]} ) ⊢ { 8'(= {| l |} ) 9'(= a34◂ [ ] ) }
; .mov_ptn 2'(= *{ {| l |}a34◂ [ ]} ) ⊢ { 8'(= {| l |} ) 9'(= a34◂ [ ] ) }
	mov rdi,r8
	mov rdi,QWORD [rdi+8+8*0]
	mov r10,rdi
	mov QWORD [rsp-8+8*2],r10
	mov rdi,r8
	mov rdi,QWORD [rdi+8+8*1]
	mov r11,rdi
	mov QWORD [rsp-8+8*1],r11
	jmp LB_3952
LB_3951:
	lea rsp,[rsp+8*0]
	pop rdi
	pop r9 
	pop r14
	pop r13
	ret
LB_3952:
	jmp LB_3956
LB_3955:
	add r14,1 
LB_3956:
	cmp r14,r9
	jge LB_3957
	movzx rax,BYTE [r13+8+r14]
	cmp rax,9 
	jz LB_3955
	cmp rax,10 
	jz LB_3955
	cmp rax,32 
	jz LB_3955
LB_3957
	call GRM_253
	movzx rax,BYTE [r8+6]
	cmp rax,0
	jnz LB_3960
	jmp LB_3961
LB_3960:
	jmp LB_3958
LB_3961:
	lea rsp,[rsp-8*1]
	mov r8,[r8+8]
; .mov_ptn2 2'(= a2◂ [ *{ {| l |}a34◂ [ ]}] ) ⊢ 10'(= a2◂ [ *{ {| l |}a34◂ [ ]}] )
; .mov_ptn 2'(= a2◂ [ *{ {| l |}a34◂ [ ]}] ) ⊢ 10'(= a2◂ [ *{ {| l |}a34◂ [ ]}] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_3959
LB_3958:
	lea rsp,[rsp+8*2]
	pop rdi
	pop r9 
	pop r14
	pop r13
	ret
LB_3959:
	mov QWORD [rsp+8*3],r14
	mov r13,QWORD [rsp+16+8*3]
	mov r14,QWORD [rsp+8*3]
	jmp LB_3963
LB_3963
;; rsp=3 , %2299~1'(= r ) %2298~0'(= r ) %2297~10'(= a2◂ [ *{ {| l |}a34◂ [ ]}] ) %2296~{ 8'(= {| l |} ) 9'(= a34◂ [ ] ) } 
; #21 { { 8'(= {| l |} ) 9'(= a34◂ [ ] ) } 10'(= a2◂ [ *{ {| l |}a34◂ [ ]}] ) } ⊢ 0(<2)◂{ { 8'(= {| l |} ) 9'(= a34◂ [ ] ) } 10'(= a2◂ [ *{ {| l |}a34◂ [ ]}] ) }
;; rsp=3 , %2300~0(<2)◂{ { 8'(= {| l |} ) 9'(= a34◂ [ ] ) } 10'(= a2◂ [ *{ {| l |}a34◂ [ ]}] ) } %2299~1'(= r ) %2298~0'(= r ) 
; #171 0(<2)◂{ { 8'(= {| l |} ) 9'(= a34◂ [ ] ) } 10'(= a2◂ [ *{ {| l |}a34◂ [ ]}] ) } ⊢ 5(<6)◂0(<2)◂{ { 8'(= {| l |} ) 9'(= a34◂ [ ] ) } 10'(= a2◂ [ *{ {| l |}a34◂ [ ]}] ) }
;; rsp=3 , %2301~5(<6)◂0(<2)◂{ { 8'(= {| l |} ) 9'(= a34◂ [ ] ) } 10'(= a2◂ [ *{ {| l |}a34◂ [ ]}] ) } %2299~1'(= r ) %2298~0'(= r ) 
; #22 5(<6)◂0(<2)◂{ { 8'(= {| l |} ) 9'(= a34◂ [ ] ) } 10'(= a2◂ [ *{ {| l |}a34◂ [ ]}] ) } ⊢ 0(<2)◂5(<6)◂0(<2)◂{ { 8'(= {| l |} ) 9'(= a34◂ [ ] ) } 10'(= a2◂ [ *{ {| l |}a34◂ [ ]}] ) }
;; rsp=3 , %2302~0(<2)◂5(<6)◂0(<2)◂{ { 8'(= {| l |} ) 9'(= a34◂ [ ] ) } 10'(= a2◂ [ *{ {| l |}a34◂ [ ]}] ) } %2299~1'(= r ) %2298~0'(= r ) 
; ∎ 0(<2)◂5(<6)◂0(<2)◂{ { 8'(= {| l |} ) 9'(= a34◂ [ ] ) } 10'(= a2◂ [ *{ {| l |}a34◂ [ ]}] ) }
; .dlt.ptn 1'(= r )
; .dlt.ptn 0'(= r )
; .mov_ptn2 0(<2)◂5(<6)◂0(<2)◂{ { 8'(= {| l |} ) 9'(= a34◂ [ ] ) } 10'(= a2◂ [ *{ {| l |}a34◂ [ ]}] ) } ⊢ 2'(= a3◂ [ a31◂ [ ]] )
; .mov_ptn 0(<2)◂5(<6)◂0(<2)◂{ { 8'(= {| l |} ) 9'(= a34◂ [ ] ) } 10'(= a2◂ [ *{ {| l |}a34◂ [ ]}] ) } ⊢ 2'(= a3◂ [ a31◂ [ ]] )
	mov rax,[SS_RCD_2_TOP]
	mov rsi,[rax] 
	mov QWORD [SS_RCD_2_TOP],rsi
	mov QWORD [rax],0
	mov r13,rax
	mov rax,[SS_RCD_2_TOP]
	mov rsi,[rax] 
	mov QWORD [SS_RCD_2_TOP],rsi
	mov QWORD [rax],0
	mov r14,rax
	mov rax,QWORD [rsp-8+8*3]
	mov rdi,r14
	mov QWORD [rdi+8+8*0],rax
	mov rax,QWORD [rsp-8+8*2]
	mov rdi,r14
	mov QWORD [rdi+8+8*1],rax
	mov rax,r14
	mov rdi,r13
	mov QWORD [rdi+8+8*0],rax
	mov rax,QWORD [rsp-8+8*1]
	mov rdi,r13
	mov QWORD [rdi+8+8*1],rax
	mov rax,r13
	mov BYTE [rax+6],0
	mov rdi,rax
	mov rax,[SS_LN_TOP]
	mov rsi,[rax]
	mov QWORD [SS_LN_TOP],rsi 
	mov QWORD [rax],0
	mov BYTE [rax+6],5
	mov QWORD [rax+8],rdi
	mov rdi,rax
	mov rax,[SS_LN_TOP]
	mov rsi,[rax]
	mov QWORD [SS_LN_TOP],rsi 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	lea rsp,[rsp+8*3]
	jmp LB_3962
LB_3962:
	movzx rax,BYTE [r8+6]
	cmp rax,0
	jnz LB_3929
	pop r14
	pop r9
	add rsp,8
	pop r13
	ret
LB_3929:
	jmp LB_3966
LB_3965:
	add r14,1 
LB_3966:
	cmp r14,r9
	jge LB_3967
	movzx rax,BYTE [r13+8+r14]
	cmp rax,9 
	jz LB_3965
	cmp rax,10 
	jz LB_3965
	cmp rax,32 
	jz LB_3965
LB_3967
	call GRM_250
	movzx rax,BYTE [r8+6]
	cmp rax,0
	jnz LB_3970
	jmp LB_3971
LB_3970:
	jmp LB_3968
LB_3971:
	lea rsp,[rsp-8*2]
; .mov_ptn2 2'(= *{ {| l |}a34◂ [ ]} ) ⊢ { 8'(= {| l |} ) 9'(= a34◂ [ ] ) }
; .mov_ptn 2'(= *{ {| l |}a34◂ [ ]} ) ⊢ { 8'(= {| l |} ) 9'(= a34◂ [ ] ) }
	mov rdi,r8
	mov rdi,QWORD [rdi+8+8*0]
	mov r10,rdi
	mov QWORD [rsp-8+8*2],r10
	mov rdi,r8
	mov rdi,QWORD [rdi+8+8*1]
	mov r11,rdi
	mov QWORD [rsp-8+8*1],r11
	jmp LB_3969
LB_3968:
	lea rsp,[rsp+8*0]
	jmp LB_3964
LB_3969:
	mov QWORD [rsp+8*2],r14
	mov r13,QWORD [rsp+16+8*2]
	mov r14,QWORD [rsp+8*2]
	jmp LB_3973
LB_3973
;; rsp=2 , %2305~1'(= r ) %2304~0'(= r ) %2303~{ 8'(= {| l |} ) 9'(= a34◂ [ ] ) } 
; #172 { 8'(= {| l |} ) 9'(= a34◂ [ ] ) } ⊢ 4(<6)◂{ 8'(= {| l |} ) 9'(= a34◂ [ ] ) }
;; rsp=2 , %2306~4(<6)◂{ 8'(= {| l |} ) 9'(= a34◂ [ ] ) } %2305~1'(= r ) %2304~0'(= r ) 
; #22 4(<6)◂{ 8'(= {| l |} ) 9'(= a34◂ [ ] ) } ⊢ 0(<2)◂4(<6)◂{ 8'(= {| l |} ) 9'(= a34◂ [ ] ) }
;; rsp=2 , %2307~0(<2)◂4(<6)◂{ 8'(= {| l |} ) 9'(= a34◂ [ ] ) } %2305~1'(= r ) %2304~0'(= r ) 
; ∎ 0(<2)◂4(<6)◂{ 8'(= {| l |} ) 9'(= a34◂ [ ] ) }
; .dlt.ptn 1'(= r )
; .dlt.ptn 0'(= r )
; .mov_ptn2 0(<2)◂4(<6)◂{ 8'(= {| l |} ) 9'(= a34◂ [ ] ) } ⊢ 2'(= a3◂ [ a31◂ [ ]] )
; .mov_ptn 0(<2)◂4(<6)◂{ 8'(= {| l |} ) 9'(= a34◂ [ ] ) } ⊢ 2'(= a3◂ [ a31◂ [ ]] )
	mov rax,[SS_RCD_2_TOP]
	mov rsi,[rax] 
	mov QWORD [SS_RCD_2_TOP],rsi
	mov QWORD [rax],0
	mov r13,rax
	mov rax,QWORD [rsp-8+8*2]
	mov rdi,r13
	mov QWORD [rdi+8+8*0],rax
	mov rax,QWORD [rsp-8+8*1]
	mov rdi,r13
	mov QWORD [rdi+8+8*1],rax
	mov rax,r13
	mov BYTE [rax+6],4
	mov rdi,rax
	mov rax,[SS_LN_TOP]
	mov rsi,[rax]
	mov QWORD [SS_LN_TOP],rsi 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	lea rsp,[rsp+8*2]
	jmp LB_3972
LB_3972:
	movzx rax,BYTE [r8+6]
	cmp rax,0
	jnz LB_3964
	pop r14
	pop r9
	add rsp,8
	pop r13
	ret
LB_3964:
	mov QWORD [rsp+8*0],r14
	mov r13,QWORD [rsp+16+8*0]
	mov r14,QWORD [rsp+8*0]
	jmp LB_3976
LB_3976
;; rsp=0 , %2309~1'(= r ) %2308~0'(= r ) 
	jmp LB_3977
LB_3977:
; $ %[ "dt_etr 0" ] ⊢ %[ "dt_etr 0" ]
;; rsp=0 , %2310~%[ "dt_etr 0" ] %2309~1'(= r ) %2308~0'(= r ) 
; _emt %[ "dt_etr 0" ] ⊢ %[ "dt_etr 0" ]
	jmp LB_3979
LB_3978: db 95,101,109,116,58,0
LB_3979:
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax  
	mov rdi,LB_3978
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call printf 
	mov rsp,QWORD [rsp_tmp]
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	jmp LB_3981
LB_3980: db 34,100,116,95,101,116,114,32,48,34,0
LB_3981:
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax  
	mov rdi,LB_3980
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call printf 
	mov rsp,QWORD [rsp_tmp]
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	jmp LB_3983
LB_3982: db 10,0
LB_3983:
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax  
	mov rdi,LB_3982
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call printf 
	mov rsp,QWORD [rsp_tmp]
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	jmp LB_3984
LB_3984:
;; rsp=0 , %2311~%[ "dt_etr 0" ] %2309~1'(= r ) %2308~0'(= r ) 
; #23 { } ⊢ 1(<2)◂{ }
;; rsp=0 , %2312~1(<2)◂{ } %2311~%[ "dt_etr 0" ] %2309~1'(= r ) %2308~0'(= r ) 
; ∎ 1(<2)◂{ }
; .dlt.ptn %[ "dt_etr 0" ]
; .dlt.ptn 1'(= r )
; .dlt.ptn 0'(= r )
; .mov_ptn2 1(<2)◂{ } ⊢ 2'(= a3◂ [ a31◂ [ ]] )
; .mov_ptn 1(<2)◂{ } ⊢ 2'(= a3◂ [ a31◂ [ ]] )
	mov rax,unt 
	mov rax,unt_1
	mov r8,rax
	jmp LB_3975
LB_3975:
	movzx rax,BYTE [r8+6]
	cmp rax,0
	jnz LB_3974
	pop r14
	pop r9
	add rsp,8
	pop r13
	ret
LB_3974:
	pop rdi
	pop r9 
	pop r14
	pop r13
	ret
ETR_250:
	mov r9,0x0000_ffff_ffff_ffff
	and r9,[r13]
	call GRM_250
	ret
GRM_250:
	sub rsp,32
	mov QWORD [rsp+24],r13
	mov QWORD [rsp+16],r14 
	mov QWORD [rsp+8],r9
	jmp LB_3987
LB_3986:
	add r14,1 
LB_3987:
	cmp r14,r9
	jge LB_3988
	movzx rax,BYTE [r13+8+r14]
	cmp rax,9 
	jz LB_3986
	cmp rax,10 
	jz LB_3986
	cmp rax,32 
	jz LB_3986
LB_3988
	call GRM_74
	movzx rax,BYTE [r8+6]
	cmp rax,0
	jnz LB_3991
	jmp LB_3992
LB_3991:
	jmp LB_3989
LB_3992:
	lea rsp,[rsp-8*1]
; .mov_ptn2 2'(= {| l |} ) ⊢ 8'(= {| l |} )
; .mov_ptn 2'(= {| l |} ) ⊢ 8'(= {| l |} )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_3990
LB_3989:
	lea rsp,[rsp+8*0]
	jmp LB_3985
LB_3990:
	jmp LB_3994
LB_3993:
	add r14,1 
LB_3994:
	cmp r14,r9
	jge LB_3995
	movzx rax,BYTE [r13+8+r14]
	cmp rax,9 
	jz LB_3993
	cmp rax,10 
	jz LB_3993
	cmp rax,32 
	jz LB_3993
LB_3995
	call GRM_251
	movzx rax,BYTE [r8+6]
	cmp rax,0
	jnz LB_3998
	jmp LB_3999
LB_3998:
	jmp LB_3996
LB_3999:
	lea rsp,[rsp-8*1]
	mov r8,[r8+8]
; .mov_ptn2 2'(= a2◂ [ {| l |}] ) ⊢ 9'(= a2◂ [ {| l |}] )
; .mov_ptn 2'(= a2◂ [ {| l |}] ) ⊢ 9'(= a2◂ [ {| l |}] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_3997
LB_3996:
	lea rsp,[rsp+8*1]
	jmp LB_3985
LB_3997:
	jmp LB_4001
LB_4000:
	add r14,1 
LB_4001:
	cmp r14,r9
	jge LB_4002
	movzx rax,BYTE [r13+8+r14]
	cmp rax,9 
	jz LB_4000
	cmp rax,10 
	jz LB_4000
	cmp rax,32 
	jz LB_4000
LB_4002
	lea rax,[r14+1]
	cmp rax,r9
	jg LB_4005
	jmp LB_4006
LB_4005:
	mov r8,unt_1
	jmp LB_4003
LB_4006:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],61
	jnz LB_4007
	jmp LB_4008
LB_4007:
	mov r8,unt_1
	jmp LB_4003
LB_4008:
	add r14,1
	jmp LB_4004
LB_4003:
	lea rsp,[rsp+8*2]
	jmp LB_3985
LB_4004:
	jmp LB_4010
LB_4009:
	add r14,1 
LB_4010:
	cmp r14,r9
	jge LB_4011
	movzx rax,BYTE [r13+8+r14]
	cmp rax,9 
	jz LB_4009
	cmp rax,10 
	jz LB_4009
	cmp rax,32 
	jz LB_4009
LB_4011
	call GRM_210
	movzx rax,BYTE [r8+6]
	cmp rax,0
	jnz LB_4014
	jmp LB_4015
LB_4014:
	jmp LB_4012
LB_4015:
	lea rsp,[rsp-8*1]
	mov r8,[r8+8]
; .mov_ptn2 2'(= a23◂ [ ] ) ⊢ 10'(= a23◂ [ ] )
; .mov_ptn 2'(= a23◂ [ ] ) ⊢ 10'(= a23◂ [ ] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_4013
LB_4012:
	lea rsp,[rsp+8*2]
	pop rdi
	pop r9 
	pop r14
	pop r13
	ret
LB_4013:
	mov QWORD [rsp+8*3],r14
	mov r13,QWORD [rsp+16+8*3]
	mov r14,QWORD [rsp+8*3]
	jmp LB_4017
LB_4017
;; rsp=3 , %2317~1'(= r ) %2316~0'(= r ) %2315~10'(= a23◂ [ ] ) %2314~9'(= a2◂ [ {| l |}] ) %2313~8'(= {| l |} ) 
; #164 { 9'(= a2◂ [ {| l |}] ) 10'(= a23◂ [ ] ) } ⊢ 1(<2)◂{ 9'(= a2◂ [ {| l |}] ) 10'(= a23◂ [ ] ) }
;; rsp=3 , %2318~1(<2)◂{ 9'(= a2◂ [ {| l |}] ) 10'(= a23◂ [ ] ) } %2317~1'(= r ) %2316~0'(= r ) %2313~8'(= {| l |} ) 
; #22 { 8'(= {| l |} ) 1(<2)◂{ 9'(= a2◂ [ {| l |}] ) 10'(= a23◂ [ ] ) } } ⊢ 0(<2)◂{ 8'(= {| l |} ) 1(<2)◂{ 9'(= a2◂ [ {| l |}] ) 10'(= a23◂ [ ] ) } }
;; rsp=3 , %2319~0(<2)◂{ 8'(= {| l |} ) 1(<2)◂{ 9'(= a2◂ [ {| l |}] ) 10'(= a23◂ [ ] ) } } %2317~1'(= r ) %2316~0'(= r ) 
; ∎ 0(<2)◂{ 8'(= {| l |} ) 1(<2)◂{ 9'(= a2◂ [ {| l |}] ) 10'(= a23◂ [ ] ) } }
; .dlt.ptn 1'(= r )
; .dlt.ptn 0'(= r )
; .mov_ptn2 0(<2)◂{ 8'(= {| l |} ) 1(<2)◂{ 9'(= a2◂ [ {| l |}] ) 10'(= a23◂ [ ] ) } } ⊢ 2'(= a3◂ [ *{ {| l |}a34◂ [ ]}] )
; .mov_ptn 0(<2)◂{ 8'(= {| l |} ) 1(<2)◂{ 9'(= a2◂ [ {| l |}] ) 10'(= a23◂ [ ] ) } } ⊢ 2'(= a3◂ [ *{ {| l |}a34◂ [ ]}] )
	mov rax,[SS_RCD_2_TOP]
	mov rsi,[rax] 
	mov QWORD [SS_RCD_2_TOP],rsi
	mov QWORD [rax],0
	mov r13,rax
	mov rax,QWORD [rsp-8+8*3]
	mov rdi,r13
	mov QWORD [rdi+8+8*0],rax
	mov rax,[SS_RCD_2_TOP]
	mov rsi,[rax] 
	mov QWORD [SS_RCD_2_TOP],rsi
	mov QWORD [rax],0
	mov r14,rax
	mov rax,QWORD [rsp-8+8*2]
	mov rdi,r14
	mov QWORD [rdi+8+8*0],rax
	mov rax,QWORD [rsp-8+8*1]
	mov rdi,r14
	mov QWORD [rdi+8+8*1],rax
	mov rax,r14
	mov BYTE [rax+6],1
	mov rdi,r13
	mov QWORD [rdi+8+8*1],rax
	mov rax,r13
	mov BYTE [rax+6],0
	mov r8,rax
	lea rsp,[rsp+8*3]
	jmp LB_4016
LB_4016:
	movzx rax,BYTE [r8+6]
	cmp rax,0
	jnz LB_3985
	pop r14
	pop r9
	add rsp,8
	pop r13
	ret
LB_3985:
	jmp LB_4020
LB_4019:
	add r14,1 
LB_4020:
	cmp r14,r9
	jge LB_4021
	movzx rax,BYTE [r13+8+r14]
	cmp rax,9 
	jz LB_4019
	cmp rax,10 
	jz LB_4019
	cmp rax,32 
	jz LB_4019
LB_4021
	call GRM_74
	movzx rax,BYTE [r8+6]
	cmp rax,0
	jnz LB_4024
	jmp LB_4025
LB_4024:
	jmp LB_4022
LB_4025:
	lea rsp,[rsp-8*1]
; .mov_ptn2 2'(= {| l |} ) ⊢ 8'(= {| l |} )
; .mov_ptn 2'(= {| l |} ) ⊢ 8'(= {| l |} )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_4023
LB_4022:
	lea rsp,[rsp+8*0]
	jmp LB_4018
LB_4023:
	jmp LB_4027
LB_4026:
	add r14,1 
LB_4027:
	cmp r14,r9
	jge LB_4028
	movzx rax,BYTE [r13+8+r14]
	cmp rax,9 
	jz LB_4026
	cmp rax,10 
	jz LB_4026
	cmp rax,32 
	jz LB_4026
LB_4028
	call GRM_251
	movzx rax,BYTE [r8+6]
	cmp rax,0
	jnz LB_4031
	jmp LB_4032
LB_4031:
	jmp LB_4029
LB_4032:
	lea rsp,[rsp-8*1]
	mov r8,[r8+8]
; .mov_ptn2 2'(= a2◂ [ {| l |}] ) ⊢ 9'(= a2◂ [ {| l |}] )
; .mov_ptn 2'(= a2◂ [ {| l |}] ) ⊢ 9'(= a2◂ [ {| l |}] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_4030
LB_4029:
	lea rsp,[rsp+8*1]
	jmp LB_4018
LB_4030:
	jmp LB_4034
LB_4033:
	add r14,1 
LB_4034:
	cmp r14,r9
	jge LB_4035
	movzx rax,BYTE [r13+8+r14]
	cmp rax,9 
	jz LB_4033
	cmp rax,10 
	jz LB_4033
	cmp rax,32 
	jz LB_4033
LB_4035
	call GRM_217
	movzx rax,BYTE [r8+6]
	cmp rax,0
	jnz LB_4038
	jmp LB_4039
LB_4038:
	jmp LB_4036
LB_4039:
	lea rsp,[rsp-8*1]
	mov r8,[r8+8]
; .mov_ptn2 2'(= a35◂ [ *{ }] ) ⊢ 10'(= a35◂ [ *{ }] )
; .mov_ptn 2'(= a35◂ [ *{ }] ) ⊢ 10'(= a35◂ [ *{ }] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_4037
LB_4036:
	lea rsp,[rsp+8*2]
	jmp LB_4018
LB_4037:
	jmp LB_4041
LB_4040:
	add r14,1 
LB_4041:
	cmp r14,r9
	jge LB_4042
	movzx rax,BYTE [r13+8+r14]
	cmp rax,9 
	jz LB_4040
	cmp rax,10 
	jz LB_4040
	cmp rax,32 
	jz LB_4040
LB_4042
	lea rax,[r14+3]
	cmp rax,r9
	jg LB_4045
	jmp LB_4046
LB_4045:
	mov r8,unt_1
	jmp LB_4043
LB_4046:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],226
	jnz LB_4047
	cmp BYTE [rdi+1],136
	jnz LB_4047
	cmp BYTE [rdi+2],144
	jnz LB_4047
	jmp LB_4048
LB_4047:
	mov r8,unt_1
	jmp LB_4043
LB_4048:
	add r14,3
	jmp LB_4044
LB_4043:
	lea rsp,[rsp+8*3]
	jmp LB_4018
LB_4044:
	jmp LB_4050
LB_4049:
	add r14,1 
LB_4050:
	cmp r14,r9
	jge LB_4051
	movzx rax,BYTE [r13+8+r14]
	cmp rax,9 
	jz LB_4049
	cmp rax,10 
	jz LB_4049
	cmp rax,32 
	jz LB_4049
LB_4051
	call GRM_74
	movzx rax,BYTE [r8+6]
	cmp rax,0
	jnz LB_4054
	jmp LB_4055
LB_4054:
	jmp LB_4052
LB_4055:
	lea rsp,[rsp-8*1]
; .mov_ptn2 2'(= {| l |} ) ⊢ 11'(= {| l |} )
; .mov_ptn 2'(= {| l |} ) ⊢ 11'(= {| l |} )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_4053
LB_4052:
	lea rsp,[rsp+8*3]
	jmp LB_4018
LB_4053:
	jmp LB_4057
LB_4056:
	add r14,1 
LB_4057:
	cmp r14,r9
	jge LB_4058
	movzx rax,BYTE [r13+8+r14]
	cmp rax,9 
	jz LB_4056
	cmp rax,10 
	jz LB_4056
	cmp rax,32 
	jz LB_4056
LB_4058
	lea rax,[r14+1]
	cmp rax,r9
	jg LB_4061
	jmp LB_4062
LB_4061:
	mov r8,unt_1
	jmp LB_4059
LB_4062:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],58
	jnz LB_4063
	jmp LB_4064
LB_4063:
	mov r8,unt_1
	jmp LB_4059
LB_4064:
	add r14,1
	jmp LB_4060
LB_4059:
	lea rsp,[rsp+8*4]
	jmp LB_4018
LB_4060:
	jmp LB_4066
LB_4065:
	add r14,1 
LB_4066:
	cmp r14,r9
	jge LB_4067
	movzx rax,BYTE [r13+8+r14]
	cmp rax,9 
	jz LB_4065
	cmp rax,10 
	jz LB_4065
	cmp rax,32 
	jz LB_4065
LB_4067
	call GRM_210
	movzx rax,BYTE [r8+6]
	cmp rax,0
	jnz LB_4070
	jmp LB_4071
LB_4070:
	jmp LB_4068
LB_4071:
	lea rsp,[rsp-8*1]
	mov r8,[r8+8]
; .mov_ptn2 2'(= a23◂ [ ] ) ⊢ 12'(= a23◂ [ ] )
; .mov_ptn 2'(= a23◂ [ ] ) ⊢ 12'(= a23◂ [ ] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_4069
LB_4068:
	lea rsp,[rsp+8*4]
	jmp LB_4018
LB_4069:
	jmp LB_4073
LB_4072:
	add r14,1 
LB_4073:
	cmp r14,r9
	jge LB_4074
	movzx rax,BYTE [r13+8+r14]
	cmp rax,9 
	jz LB_4072
	cmp rax,10 
	jz LB_4072
	cmp rax,32 
	jz LB_4072
LB_4074
	call GRM_254
	movzx rax,BYTE [r8+6]
	cmp rax,0
	jnz LB_4077
	jmp LB_4078
LB_4077:
	jmp LB_4075
LB_4078:
	lea rsp,[rsp-8*1]
	mov r8,[r8+8]
; .mov_ptn2 2'(= a2◂ [ *{ {| l |}a23◂ [ ]}] ) ⊢ 13'(= a2◂ [ *{ {| l |}a23◂ [ ]}] )
; .mov_ptn 2'(= a2◂ [ *{ {| l |}a23◂ [ ]}] ) ⊢ 13'(= a2◂ [ *{ {| l |}a23◂ [ ]}] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_4076
LB_4075:
	lea rsp,[rsp+8*5]
	jmp LB_4018
LB_4076:
	mov QWORD [rsp+8*6],r14
	mov r13,QWORD [rsp+16+8*6]
	mov r14,QWORD [rsp+8*6]
	jmp LB_4080
LB_4080
;; rsp=6 , %2327~1'(= r ) %2326~0'(= r ) %2325~13'(= a2◂ [ *{ {| l |}a23◂ [ ]}] ) %2324~12'(= a23◂ [ ] ) %2323~11'(= {| l |} ) %2322~10'(= a35◂ [ *{ }] ) %2321~9'(= a2◂ [ {| l |}] ) %2320~8'(= {| l |} ) 
; #21 { { 11'(= {| l |} ) 12'(= a23◂ [ ] ) } 13'(= a2◂ [ *{ {| l |}a23◂ [ ]}] ) } ⊢ 0(<2)◂{ { 11'(= {| l |} ) 12'(= a23◂ [ ] ) } 13'(= a2◂ [ *{ {| l |}a23◂ [ ]}] ) }
;; rsp=6 , %2328~0(<2)◂{ { 11'(= {| l |} ) 12'(= a23◂ [ ] ) } 13'(= a2◂ [ *{ {| l |}a23◂ [ ]}] ) } %2327~1'(= r ) %2326~0'(= r ) %2322~10'(= a35◂ [ *{ }] ) %2321~9'(= a2◂ [ {| l |}] ) %2320~8'(= {| l |} ) 
; #165 { 9'(= a2◂ [ {| l |}] ) 0(<2)◂{ { 11'(= {| l |} ) 12'(= a23◂ [ ] ) } 13'(= a2◂ [ *{ {| l |}a23◂ [ ]}] ) } } ⊢ 0(<2)◂{ 9'(= a2◂ [ {| l |}] ) 0(<2)◂{ { 11'(= {| l |} ) 12'(= a23◂ [ ] ) } 13'(= a2◂ [ *{ {| l |}a23◂ [ ]}] ) } }
;; rsp=6 , %2329~0(<2)◂{ 9'(= a2◂ [ {| l |}] ) 0(<2)◂{ { 11'(= {| l |} ) 12'(= a23◂ [ ] ) } 13'(= a2◂ [ *{ {| l |}a23◂ [ ]}] ) } } %2327~1'(= r ) %2326~0'(= r ) %2322~10'(= a35◂ [ *{ }] ) %2320~8'(= {| l |} ) 
; #22 { 8'(= {| l |} ) 0(<2)◂{ 9'(= a2◂ [ {| l |}] ) 0(<2)◂{ { 11'(= {| l |} ) 12'(= a23◂ [ ] ) } 13'(= a2◂ [ *{ {| l |}a23◂ [ ]}] ) } } } ⊢ 0(<2)◂{ 8'(= {| l |} ) 0(<2)◂{ 9'(= a2◂ [ {| l |}] ) 0(<2)◂{ { 11'(= {| l |} ) 12'(= a23◂ [ ] ) } 13'(= a2◂ [ *{ {| l |}a23◂ [ ]}] ) } } }
;; rsp=6 , %2330~0(<2)◂{ 8'(= {| l |} ) 0(<2)◂{ 9'(= a2◂ [ {| l |}] ) 0(<2)◂{ { 11'(= {| l |} ) 12'(= a23◂ [ ] ) } 13'(= a2◂ [ *{ {| l |}a23◂ [ ]}] ) } } } %2327~1'(= r ) %2326~0'(= r ) %2322~10'(= a35◂ [ *{ }] ) 
; ∎ 0(<2)◂{ 8'(= {| l |} ) 0(<2)◂{ 9'(= a2◂ [ {| l |}] ) 0(<2)◂{ { 11'(= {| l |} ) 12'(= a23◂ [ ] ) } 13'(= a2◂ [ *{ {| l |}a23◂ [ ]}] ) } } }
; .dlt.ptn 1'(= r )
; .dlt.ptn 0'(= r )
; .dlt.ptn 10'(= a35◂ [ *{ }] )
;	.dlt adt ⊢ _  
; .mov_ptn2 0(<2)◂{ 8'(= {| l |} ) 0(<2)◂{ 9'(= a2◂ [ {| l |}] ) 0(<2)◂{ { 11'(= {| l |} ) 12'(= a23◂ [ ] ) } 13'(= a2◂ [ *{ {| l |}a23◂ [ ]}] ) } } } ⊢ 2'(= a3◂ [ *{ {| l |}a34◂ [ ]}] )
; .mov_ptn 0(<2)◂{ 8'(= {| l |} ) 0(<2)◂{ 9'(= a2◂ [ {| l |}] ) 0(<2)◂{ { 11'(= {| l |} ) 12'(= a23◂ [ ] ) } 13'(= a2◂ [ *{ {| l |}a23◂ [ ]}] ) } } } ⊢ 2'(= a3◂ [ *{ {| l |}a34◂ [ ]}] )
	mov rax,[SS_RCD_2_TOP]
	mov rsi,[rax] 
	mov QWORD [SS_RCD_2_TOP],rsi
	mov QWORD [rax],0
	mov r13,rax
	mov rax,QWORD [rsp-8+8*6]
	mov rdi,r13
	mov QWORD [rdi+8+8*0],rax
	mov rax,[SS_RCD_2_TOP]
	mov rsi,[rax] 
	mov QWORD [SS_RCD_2_TOP],rsi
	mov QWORD [rax],0
	mov r14,rax
	mov rax,QWORD [rsp-8+8*5]
	mov rdi,r14
	mov QWORD [rdi+8+8*0],rax
	mov rax,[SS_RCD_2_TOP]
	mov rsi,[rax] 
	mov QWORD [SS_RCD_2_TOP],rsi
	mov QWORD [rax],0
	mov r9,rax
	mov rax,[SS_RCD_2_TOP]
	mov rsi,[rax] 
	mov QWORD [SS_RCD_2_TOP],rsi
	mov QWORD [rax],0
	mov r10,rax
	mov rax,QWORD [rsp-8+8*3]
	mov rdi,r10
	mov QWORD [rdi+8+8*0],rax
	mov rax,QWORD [rsp-8+8*2]
	mov rdi,r10
	mov QWORD [rdi+8+8*1],rax
	mov rax,r10
	mov rdi,r9
	mov QWORD [rdi+8+8*0],rax
	mov rax,QWORD [rsp-8+8*1]
	mov rdi,r9
	mov QWORD [rdi+8+8*1],rax
	mov rax,r9
	mov BYTE [rax+6],0
	mov rdi,r14
	mov QWORD [rdi+8+8*1],rax
	mov rax,r14
	mov BYTE [rax+6],0
	mov rdi,r13
	mov QWORD [rdi+8+8*1],rax
	mov rax,r13
	mov BYTE [rax+6],0
	mov r8,rax
	lea rsp,[rsp+8*6]
	jmp LB_4079
LB_4079:
	movzx rax,BYTE [r8+6]
	cmp rax,0
	jnz LB_4018
	pop r14
	pop r9
	add rsp,8
	pop r13
	ret
LB_4018:
	pop rdi
	pop r9 
	pop r14
	pop r13
	ret
ETR_251:
	mov r9,0x0000_ffff_ffff_ffff
	and r9,[r13]
	call GRM_251
	ret
GRM_251:
	sub rsp,32
	mov QWORD [rsp+24],r13
	mov QWORD [rsp+16],r14 
	mov QWORD [rsp+8],r9
	jmp LB_4083
LB_4082:
	add r14,1 
LB_4083:
	cmp r14,r9
	jge LB_4084
	movzx rax,BYTE [r13+8+r14]
	cmp rax,9 
	jz LB_4082
	cmp rax,10 
	jz LB_4082
	cmp rax,32 
	jz LB_4082
LB_4084
	lea rax,[r14+3]
	cmp rax,r9
	jg LB_4087
	jmp LB_4088
LB_4087:
	mov r8,unt_1
	jmp LB_4085
LB_4088:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],226
	jnz LB_4089
	cmp BYTE [rdi+1],151
	jnz LB_4089
	cmp BYTE [rdi+2],130
	jnz LB_4089
	jmp LB_4090
LB_4089:
	mov r8,unt_1
	jmp LB_4085
LB_4090:
	add r14,3
	jmp LB_4086
LB_4085:
	lea rsp,[rsp+8*0]
	jmp LB_4081
LB_4086:
	jmp LB_4092
LB_4091:
	add r14,1 
LB_4092:
	cmp r14,r9
	jge LB_4093
	movzx rax,BYTE [r13+8+r14]
	cmp rax,9 
	jz LB_4091
	cmp rax,10 
	jz LB_4091
	cmp rax,32 
	jz LB_4091
LB_4093
	call GRM_215
	movzx rax,BYTE [r8+6]
	cmp rax,0
	jnz LB_4096
	jmp LB_4097
LB_4096:
	jmp LB_4094
LB_4097:
	lea rsp,[rsp-8*1]
; .mov_ptn2 2'(= {| l |} ) ⊢ 8'(= {| l |} )
; .mov_ptn 2'(= {| l |} ) ⊢ 8'(= {| l |} )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_4095
LB_4094:
	lea rsp,[rsp+8*0]
	pop rdi
	pop r9 
	pop r14
	pop r13
	ret
LB_4095:
	jmp LB_4099
LB_4098:
	add r14,1 
LB_4099:
	cmp r14,r9
	jge LB_4100
	movzx rax,BYTE [r13+8+r14]
	cmp rax,9 
	jz LB_4098
	cmp rax,10 
	jz LB_4098
	cmp rax,32 
	jz LB_4098
LB_4100
	call GRM_252
	movzx rax,BYTE [r8+6]
	cmp rax,0
	jnz LB_4103
	jmp LB_4104
LB_4103:
	jmp LB_4101
LB_4104:
	lea rsp,[rsp-8*1]
	mov r8,[r8+8]
; .mov_ptn2 2'(= a2◂ [ {| l |}] ) ⊢ 9'(= a2◂ [ {| l |}] )
; .mov_ptn 2'(= a2◂ [ {| l |}] ) ⊢ 9'(= a2◂ [ {| l |}] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_4102
LB_4101:
	lea rsp,[rsp+8*1]
	pop rdi
	pop r9 
	pop r14
	pop r13
	ret
LB_4102:
	mov QWORD [rsp+8*2],r14
	mov r13,QWORD [rsp+16+8*2]
	mov r14,QWORD [rsp+8*2]
	jmp LB_4106
LB_4106
;; rsp=2 , %2334~1'(= r ) %2333~0'(= r ) %2332~9'(= a2◂ [ {| l |}] ) %2331~8'(= {| l |} ) 
; #21 { 8'(= {| l |} ) 9'(= a2◂ [ {| l |}] ) } ⊢ 0(<2)◂{ 8'(= {| l |} ) 9'(= a2◂ [ {| l |}] ) }
;; rsp=2 , %2335~0(<2)◂{ 8'(= {| l |} ) 9'(= a2◂ [ {| l |}] ) } %2334~1'(= r ) %2333~0'(= r ) 
; #22 0(<2)◂{ 8'(= {| l |} ) 9'(= a2◂ [ {| l |}] ) } ⊢ 0(<2)◂0(<2)◂{ 8'(= {| l |} ) 9'(= a2◂ [ {| l |}] ) }
;; rsp=2 , %2336~0(<2)◂0(<2)◂{ 8'(= {| l |} ) 9'(= a2◂ [ {| l |}] ) } %2334~1'(= r ) %2333~0'(= r ) 
; ∎ 0(<2)◂0(<2)◂{ 8'(= {| l |} ) 9'(= a2◂ [ {| l |}] ) }
; .dlt.ptn 1'(= r )
; .dlt.ptn 0'(= r )
; .mov_ptn2 0(<2)◂0(<2)◂{ 8'(= {| l |} ) 9'(= a2◂ [ {| l |}] ) } ⊢ 2'(= a3◂ [ a2◂ [ {| l |}]] )
; .mov_ptn 0(<2)◂0(<2)◂{ 8'(= {| l |} ) 9'(= a2◂ [ {| l |}] ) } ⊢ 2'(= a3◂ [ a2◂ [ {| l |}]] )
	mov rax,[SS_RCD_2_TOP]
	mov rsi,[rax] 
	mov QWORD [SS_RCD_2_TOP],rsi
	mov QWORD [rax],0
	mov r13,rax
	mov rax,QWORD [rsp-8+8*2]
	mov rdi,r13
	mov QWORD [rdi+8+8*0],rax
	mov rax,QWORD [rsp-8+8*1]
	mov rdi,r13
	mov QWORD [rdi+8+8*1],rax
	mov rax,r13
	mov BYTE [rax+6],0
	mov rdi,rax
	mov rax,[SS_LN_TOP]
	mov rsi,[rax]
	mov QWORD [SS_LN_TOP],rsi 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	lea rsp,[rsp+8*2]
	jmp LB_4105
LB_4105:
	movzx rax,BYTE [r8+6]
	cmp rax,0
	jnz LB_4081
	pop r14
	pop r9
	add rsp,8
	pop r13
	ret
LB_4081:
	jmp LB_4109
LB_4108:
	add r14,1 
LB_4109:
	cmp r14,r9
	jge LB_4110
	movzx rax,BYTE [r13+8+r14]
	cmp rax,9 
	jz LB_4108
	cmp rax,10 
	jz LB_4108
	cmp rax,32 
	jz LB_4108
LB_4110
	call GRM_215
	movzx rax,BYTE [r8+6]
	cmp rax,0
	jnz LB_4113
	jmp LB_4114
LB_4113:
	jmp LB_4111
LB_4114:
	lea rsp,[rsp-8*1]
; .mov_ptn2 2'(= {| l |} ) ⊢ 8'(= {| l |} )
; .mov_ptn 2'(= {| l |} ) ⊢ 8'(= {| l |} )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_4112
LB_4111:
	lea rsp,[rsp+8*0]
	jmp LB_4107
LB_4112:
	jmp LB_4116
LB_4115:
	add r14,1 
LB_4116:
	cmp r14,r9
	jge LB_4117
	movzx rax,BYTE [r13+8+r14]
	cmp rax,9 
	jz LB_4115
	cmp rax,10 
	jz LB_4115
	cmp rax,32 
	jz LB_4115
LB_4117
	call GRM_252
	movzx rax,BYTE [r8+6]
	cmp rax,0
	jnz LB_4120
	jmp LB_4121
LB_4120:
	jmp LB_4118
LB_4121:
	lea rsp,[rsp-8*1]
	mov r8,[r8+8]
; .mov_ptn2 2'(= a2◂ [ {| l |}] ) ⊢ 9'(= a2◂ [ {| l |}] )
; .mov_ptn 2'(= a2◂ [ {| l |}] ) ⊢ 9'(= a2◂ [ {| l |}] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_4119
LB_4118:
	lea rsp,[rsp+8*1]
	pop rdi
	pop r9 
	pop r14
	pop r13
	ret
LB_4119:
	mov QWORD [rsp+8*2],r14
	mov r13,QWORD [rsp+16+8*2]
	mov r14,QWORD [rsp+8*2]
	jmp LB_4123
LB_4123
;; rsp=2 , %2340~1'(= r ) %2339~0'(= r ) %2338~9'(= a2◂ [ {| l |}] ) %2337~8'(= {| l |} ) 
; #21 { 8'(= {| l |} ) 9'(= a2◂ [ {| l |}] ) } ⊢ 0(<2)◂{ 8'(= {| l |} ) 9'(= a2◂ [ {| l |}] ) }
;; rsp=2 , %2341~0(<2)◂{ 8'(= {| l |} ) 9'(= a2◂ [ {| l |}] ) } %2340~1'(= r ) %2339~0'(= r ) 
; #22 0(<2)◂{ 8'(= {| l |} ) 9'(= a2◂ [ {| l |}] ) } ⊢ 0(<2)◂0(<2)◂{ 8'(= {| l |} ) 9'(= a2◂ [ {| l |}] ) }
;; rsp=2 , %2342~0(<2)◂0(<2)◂{ 8'(= {| l |} ) 9'(= a2◂ [ {| l |}] ) } %2340~1'(= r ) %2339~0'(= r ) 
; ∎ 0(<2)◂0(<2)◂{ 8'(= {| l |} ) 9'(= a2◂ [ {| l |}] ) }
; .dlt.ptn 1'(= r )
; .dlt.ptn 0'(= r )
; .mov_ptn2 0(<2)◂0(<2)◂{ 8'(= {| l |} ) 9'(= a2◂ [ {| l |}] ) } ⊢ 2'(= a3◂ [ a2◂ [ {| l |}]] )
; .mov_ptn 0(<2)◂0(<2)◂{ 8'(= {| l |} ) 9'(= a2◂ [ {| l |}] ) } ⊢ 2'(= a3◂ [ a2◂ [ {| l |}]] )
	mov rax,[SS_RCD_2_TOP]
	mov rsi,[rax] 
	mov QWORD [SS_RCD_2_TOP],rsi
	mov QWORD [rax],0
	mov r13,rax
	mov rax,QWORD [rsp-8+8*2]
	mov rdi,r13
	mov QWORD [rdi+8+8*0],rax
	mov rax,QWORD [rsp-8+8*1]
	mov rdi,r13
	mov QWORD [rdi+8+8*1],rax
	mov rax,r13
	mov BYTE [rax+6],0
	mov rdi,rax
	mov rax,[SS_LN_TOP]
	mov rsi,[rax]
	mov QWORD [SS_LN_TOP],rsi 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	lea rsp,[rsp+8*2]
	jmp LB_4122
LB_4122:
	movzx rax,BYTE [r8+6]
	cmp rax,0
	jnz LB_4107
	pop r14
	pop r9
	add rsp,8
	pop r13
	ret
LB_4107:
	mov QWORD [rsp+8*0],r14
	mov r13,QWORD [rsp+16+8*0]
	mov r14,QWORD [rsp+8*0]
	jmp LB_4126
LB_4126
;; rsp=0 , %2344~1'(= r ) %2343~0'(= r ) 
; #20 { } ⊢ 1(<2)◂{ }
;; rsp=0 , %2345~1(<2)◂{ } %2344~1'(= r ) %2343~0'(= r ) 
; #22 1(<2)◂{ } ⊢ 0(<2)◂1(<2)◂{ }
;; rsp=0 , %2346~0(<2)◂1(<2)◂{ } %2344~1'(= r ) %2343~0'(= r ) 
; ∎ 0(<2)◂1(<2)◂{ }
; .dlt.ptn 1'(= r )
; .dlt.ptn 0'(= r )
; .mov_ptn2 0(<2)◂1(<2)◂{ } ⊢ 2'(= a3◂ [ a2◂ [ {| l |}]] )
; .mov_ptn 0(<2)◂1(<2)◂{ } ⊢ 2'(= a3◂ [ a2◂ [ {| l |}]] )
	mov rax,unt 
	mov rax,unt_1
	mov rdi,rax
	mov rax,[SS_LN_TOP]
	mov rsi,[rax]
	mov QWORD [SS_LN_TOP],rsi 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	jmp LB_4125
LB_4125:
	movzx rax,BYTE [r8+6]
	cmp rax,0
	jnz LB_4124
	pop r14
	pop r9
	add rsp,8
	pop r13
	ret
LB_4124:
	pop rdi
	pop r9 
	pop r14
	pop r13
	ret
ETR_252:
	mov r9,0x0000_ffff_ffff_ffff
	and r9,[r13]
	call GRM_252
	ret
GRM_252:
	sub rsp,32
	mov QWORD [rsp+24],r13
	mov QWORD [rsp+16],r14 
	mov QWORD [rsp+8],r9
	jmp LB_4129
LB_4128:
	add r14,1 
LB_4129:
	cmp r14,r9
	jge LB_4130
	movzx rax,BYTE [r13+8+r14]
	cmp rax,9 
	jz LB_4128
	cmp rax,10 
	jz LB_4128
	cmp rax,32 
	jz LB_4128
LB_4130
	lea rax,[r14+1]
	cmp rax,r9
	jg LB_4133
	jmp LB_4134
LB_4133:
	mov r8,unt_1
	jmp LB_4131
LB_4134:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],44
	jnz LB_4135
	jmp LB_4136
LB_4135:
	mov r8,unt_1
	jmp LB_4131
LB_4136:
	add r14,1
	jmp LB_4132
LB_4131:
	lea rsp,[rsp+8*0]
	jmp LB_4127
LB_4132:
	jmp LB_4138
LB_4137:
	add r14,1 
LB_4138:
	cmp r14,r9
	jge LB_4139
	movzx rax,BYTE [r13+8+r14]
	cmp rax,9 
	jz LB_4137
	cmp rax,10 
	jz LB_4137
	cmp rax,32 
	jz LB_4137
LB_4139
	call GRM_215
	movzx rax,BYTE [r8+6]
	cmp rax,0
	jnz LB_4142
	jmp LB_4143
LB_4142:
	jmp LB_4140
LB_4143:
	lea rsp,[rsp-8*1]
; .mov_ptn2 2'(= {| l |} ) ⊢ 8'(= {| l |} )
; .mov_ptn 2'(= {| l |} ) ⊢ 8'(= {| l |} )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_4141
LB_4140:
	lea rsp,[rsp+8*0]
	pop rdi
	pop r9 
	pop r14
	pop r13
	ret
LB_4141:
	jmp LB_4145
LB_4144:
	add r14,1 
LB_4145:
	cmp r14,r9
	jge LB_4146
	movzx rax,BYTE [r13+8+r14]
	cmp rax,9 
	jz LB_4144
	cmp rax,10 
	jz LB_4144
	cmp rax,32 
	jz LB_4144
LB_4146
	call GRM_252
	movzx rax,BYTE [r8+6]
	cmp rax,0
	jnz LB_4149
	jmp LB_4150
LB_4149:
	jmp LB_4147
LB_4150:
	lea rsp,[rsp-8*1]
	mov r8,[r8+8]
; .mov_ptn2 2'(= a2◂ [ {| l |}] ) ⊢ 9'(= a2◂ [ {| l |}] )
; .mov_ptn 2'(= a2◂ [ {| l |}] ) ⊢ 9'(= a2◂ [ {| l |}] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_4148
LB_4147:
	lea rsp,[rsp+8*1]
	pop rdi
	pop r9 
	pop r14
	pop r13
	ret
LB_4148:
	mov QWORD [rsp+8*2],r14
	mov r13,QWORD [rsp+16+8*2]
	mov r14,QWORD [rsp+8*2]
	jmp LB_4152
LB_4152
;; rsp=2 , %2350~1'(= r ) %2349~0'(= r ) %2348~9'(= a2◂ [ {| l |}] ) %2347~8'(= {| l |} ) 
; #21 { 8'(= {| l |} ) 9'(= a2◂ [ {| l |}] ) } ⊢ 0(<2)◂{ 8'(= {| l |} ) 9'(= a2◂ [ {| l |}] ) }
;; rsp=2 , %2351~0(<2)◂{ 8'(= {| l |} ) 9'(= a2◂ [ {| l |}] ) } %2350~1'(= r ) %2349~0'(= r ) 
; #22 0(<2)◂{ 8'(= {| l |} ) 9'(= a2◂ [ {| l |}] ) } ⊢ 0(<2)◂0(<2)◂{ 8'(= {| l |} ) 9'(= a2◂ [ {| l |}] ) }
;; rsp=2 , %2352~0(<2)◂0(<2)◂{ 8'(= {| l |} ) 9'(= a2◂ [ {| l |}] ) } %2350~1'(= r ) %2349~0'(= r ) 
; ∎ 0(<2)◂0(<2)◂{ 8'(= {| l |} ) 9'(= a2◂ [ {| l |}] ) }
; .dlt.ptn 1'(= r )
; .dlt.ptn 0'(= r )
; .mov_ptn2 0(<2)◂0(<2)◂{ 8'(= {| l |} ) 9'(= a2◂ [ {| l |}] ) } ⊢ 2'(= a3◂ [ a2◂ [ {| l |}]] )
; .mov_ptn 0(<2)◂0(<2)◂{ 8'(= {| l |} ) 9'(= a2◂ [ {| l |}] ) } ⊢ 2'(= a3◂ [ a2◂ [ {| l |}]] )
	mov rax,[SS_RCD_2_TOP]
	mov rsi,[rax] 
	mov QWORD [SS_RCD_2_TOP],rsi
	mov QWORD [rax],0
	mov r13,rax
	mov rax,QWORD [rsp-8+8*2]
	mov rdi,r13
	mov QWORD [rdi+8+8*0],rax
	mov rax,QWORD [rsp-8+8*1]
	mov rdi,r13
	mov QWORD [rdi+8+8*1],rax
	mov rax,r13
	mov BYTE [rax+6],0
	mov rdi,rax
	mov rax,[SS_LN_TOP]
	mov rsi,[rax]
	mov QWORD [SS_LN_TOP],rsi 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	lea rsp,[rsp+8*2]
	jmp LB_4151
LB_4151:
	movzx rax,BYTE [r8+6]
	cmp rax,0
	jnz LB_4127
	pop r14
	pop r9
	add rsp,8
	pop r13
	ret
LB_4127:
	mov QWORD [rsp+8*0],r14
	mov r13,QWORD [rsp+16+8*0]
	mov r14,QWORD [rsp+8*0]
	jmp LB_4155
LB_4155
;; rsp=0 , %2354~1'(= r ) %2353~0'(= r ) 
; #20 { } ⊢ 1(<2)◂{ }
;; rsp=0 , %2355~1(<2)◂{ } %2354~1'(= r ) %2353~0'(= r ) 
; #22 1(<2)◂{ } ⊢ 0(<2)◂1(<2)◂{ }
;; rsp=0 , %2356~0(<2)◂1(<2)◂{ } %2354~1'(= r ) %2353~0'(= r ) 
; ∎ 0(<2)◂1(<2)◂{ }
; .dlt.ptn 1'(= r )
; .dlt.ptn 0'(= r )
; .mov_ptn2 0(<2)◂1(<2)◂{ } ⊢ 2'(= a3◂ [ a2◂ [ {| l |}]] )
; .mov_ptn 0(<2)◂1(<2)◂{ } ⊢ 2'(= a3◂ [ a2◂ [ {| l |}]] )
	mov rax,unt 
	mov rax,unt_1
	mov rdi,rax
	mov rax,[SS_LN_TOP]
	mov rsi,[rax]
	mov QWORD [SS_LN_TOP],rsi 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	jmp LB_4154
LB_4154:
	movzx rax,BYTE [r8+6]
	cmp rax,0
	jnz LB_4153
	pop r14
	pop r9
	add rsp,8
	pop r13
	ret
LB_4153:
	pop rdi
	pop r9 
	pop r14
	pop r13
	ret
ETR_253:
	mov r9,0x0000_ffff_ffff_ffff
	and r9,[r13]
	call GRM_253
	ret
GRM_253:
	sub rsp,32
	mov QWORD [rsp+24],r13
	mov QWORD [rsp+16],r14 
	mov QWORD [rsp+8],r9
	jmp LB_4158
LB_4157:
	add r14,1 
LB_4158:
	cmp r14,r9
	jge LB_4159
	movzx rax,BYTE [r13+8+r14]
	cmp rax,9 
	jz LB_4157
	cmp rax,10 
	jz LB_4157
	cmp rax,32 
	jz LB_4157
LB_4159
	call GRM_217
	movzx rax,BYTE [r8+6]
	cmp rax,0
	jnz LB_4162
	jmp LB_4163
LB_4162:
	jmp LB_4160
LB_4163:
	lea rsp,[rsp-8*1]
	mov r8,[r8+8]
; .mov_ptn2 2'(= a35◂ [ *{ }] ) ⊢ 8'(= a35◂ [ *{ }] )
; .mov_ptn 2'(= a35◂ [ *{ }] ) ⊢ 8'(= a35◂ [ *{ }] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_4161
LB_4160:
	lea rsp,[rsp+8*0]
	jmp LB_4156
LB_4161:
	jmp LB_4165
LB_4164:
	add r14,1 
LB_4165:
	cmp r14,r9
	jge LB_4166
	movzx rax,BYTE [r13+8+r14]
	cmp rax,9 
	jz LB_4164
	cmp rax,10 
	jz LB_4164
	cmp rax,32 
	jz LB_4164
LB_4166
	lea rax,[r14+1]
	cmp rax,r9
	jg LB_4169
	jmp LB_4170
LB_4169:
	mov r8,unt_1
	jmp LB_4167
LB_4170:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],64
	jnz LB_4171
	jmp LB_4172
LB_4171:
	mov r8,unt_1
	jmp LB_4167
LB_4172:
	add r14,1
	jmp LB_4168
LB_4167:
	lea rsp,[rsp+8*1]
	jmp LB_4156
LB_4168:
	jmp LB_4174
LB_4173:
	add r14,1 
LB_4174:
	cmp r14,r9
	jge LB_4175
	movzx rax,BYTE [r13+8+r14]
	cmp rax,9 
	jz LB_4173
	cmp rax,10 
	jz LB_4173
	cmp rax,32 
	jz LB_4173
LB_4175
	lea rax,[r14+1]
	cmp rax,r9
	jg LB_4178
	jmp LB_4179
LB_4178:
	mov r8,unt_1
	jmp LB_4176
LB_4179:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],46
	jnz LB_4180
	jmp LB_4181
LB_4180:
	mov r8,unt_1
	jmp LB_4176
LB_4181:
	add r14,1
	jmp LB_4177
LB_4176:
	lea rsp,[rsp+8*1]
	pop rdi
	pop r9 
	pop r14
	pop r13
	ret
LB_4177:
	jmp LB_4183
LB_4182:
	add r14,1 
LB_4183:
	cmp r14,r9
	jge LB_4184
	movzx rax,BYTE [r13+8+r14]
	cmp rax,9 
	jz LB_4182
	cmp rax,10 
	jz LB_4182
	cmp rax,32 
	jz LB_4182
LB_4184
	call GRM_250
	movzx rax,BYTE [r8+6]
	cmp rax,0
	jnz LB_4187
	jmp LB_4188
LB_4187:
	jmp LB_4185
LB_4188:
	lea rsp,[rsp-8*2]
; .mov_ptn2 2'(= *{ {| l |}a34◂ [ ]} ) ⊢ { 9'(= {| l |} ) 10'(= a34◂ [ ] ) }
; .mov_ptn 2'(= *{ {| l |}a34◂ [ ]} ) ⊢ { 9'(= {| l |} ) 10'(= a34◂ [ ] ) }
	mov rdi,r8
	mov rdi,QWORD [rdi+8+8*0]
	mov r10,rdi
	mov QWORD [rsp-8+8*2],r10
	mov rdi,r8
	mov rdi,QWORD [rdi+8+8*1]
	mov r11,rdi
	mov QWORD [rsp-8+8*1],r11
	jmp LB_4186
LB_4185:
	lea rsp,[rsp+8*1]
	pop rdi
	pop r9 
	pop r14
	pop r13
	ret
LB_4186:
	jmp LB_4190
LB_4189:
	add r14,1 
LB_4190:
	cmp r14,r9
	jge LB_4191
	movzx rax,BYTE [r13+8+r14]
	cmp rax,9 
	jz LB_4189
	cmp rax,10 
	jz LB_4189
	cmp rax,32 
	jz LB_4189
LB_4191
	call GRM_253
	movzx rax,BYTE [r8+6]
	cmp rax,0
	jnz LB_4194
	jmp LB_4195
LB_4194:
	jmp LB_4192
LB_4195:
	lea rsp,[rsp-8*1]
	mov r8,[r8+8]
; .mov_ptn2 2'(= a2◂ [ *{ {| l |}a34◂ [ ]}] ) ⊢ 11'(= a2◂ [ *{ {| l |}a34◂ [ ]}] )
; .mov_ptn 2'(= a2◂ [ *{ {| l |}a34◂ [ ]}] ) ⊢ 11'(= a2◂ [ *{ {| l |}a34◂ [ ]}] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_4193
LB_4192:
	lea rsp,[rsp+8*3]
	pop rdi
	pop r9 
	pop r14
	pop r13
	ret
LB_4193:
	mov QWORD [rsp+8*4],r14
	mov r13,QWORD [rsp+16+8*4]
	mov r14,QWORD [rsp+8*4]
	jmp LB_4197
LB_4197
;; rsp=4 , %2361~1'(= r ) %2360~0'(= r ) %2359~11'(= a2◂ [ *{ {| l |}a34◂ [ ]}] ) %2358~{ 9'(= {| l |} ) 10'(= a34◂ [ ] ) } %2357~8'(= a35◂ [ *{ }] ) 
; #21 { { 9'(= {| l |} ) 10'(= a34◂ [ ] ) } 11'(= a2◂ [ *{ {| l |}a34◂ [ ]}] ) } ⊢ 0(<2)◂{ { 9'(= {| l |} ) 10'(= a34◂ [ ] ) } 11'(= a2◂ [ *{ {| l |}a34◂ [ ]}] ) }
;; rsp=4 , %2362~0(<2)◂{ { 9'(= {| l |} ) 10'(= a34◂ [ ] ) } 11'(= a2◂ [ *{ {| l |}a34◂ [ ]}] ) } %2361~1'(= r ) %2360~0'(= r ) %2357~8'(= a35◂ [ *{ }] ) 
; #22 0(<2)◂{ { 9'(= {| l |} ) 10'(= a34◂ [ ] ) } 11'(= a2◂ [ *{ {| l |}a34◂ [ ]}] ) } ⊢ 0(<2)◂0(<2)◂{ { 9'(= {| l |} ) 10'(= a34◂ [ ] ) } 11'(= a2◂ [ *{ {| l |}a34◂ [ ]}] ) }
;; rsp=4 , %2363~0(<2)◂0(<2)◂{ { 9'(= {| l |} ) 10'(= a34◂ [ ] ) } 11'(= a2◂ [ *{ {| l |}a34◂ [ ]}] ) } %2361~1'(= r ) %2360~0'(= r ) %2357~8'(= a35◂ [ *{ }] ) 
; ∎ 0(<2)◂0(<2)◂{ { 9'(= {| l |} ) 10'(= a34◂ [ ] ) } 11'(= a2◂ [ *{ {| l |}a34◂ [ ]}] ) }
; .dlt.ptn 1'(= r )
; .dlt.ptn 0'(= r )
; .dlt.ptn 8'(= a35◂ [ *{ }] )
;	.dlt adt ⊢ _  
; .mov_ptn2 0(<2)◂0(<2)◂{ { 9'(= {| l |} ) 10'(= a34◂ [ ] ) } 11'(= a2◂ [ *{ {| l |}a34◂ [ ]}] ) } ⊢ 2'(= a3◂ [ a2◂ [ *{ {| l |}a34◂ [ ]}]] )
; .mov_ptn 0(<2)◂0(<2)◂{ { 9'(= {| l |} ) 10'(= a34◂ [ ] ) } 11'(= a2◂ [ *{ {| l |}a34◂ [ ]}] ) } ⊢ 2'(= a3◂ [ a2◂ [ *{ {| l |}a34◂ [ ]}]] )
	mov rax,[SS_RCD_2_TOP]
	mov rsi,[rax] 
	mov QWORD [SS_RCD_2_TOP],rsi
	mov QWORD [rax],0
	mov r13,rax
	mov rax,[SS_RCD_2_TOP]
	mov rsi,[rax] 
	mov QWORD [SS_RCD_2_TOP],rsi
	mov QWORD [rax],0
	mov r14,rax
	mov rax,QWORD [rsp-8+8*3]
	mov rdi,r14
	mov QWORD [rdi+8+8*0],rax
	mov rax,QWORD [rsp-8+8*2]
	mov rdi,r14
	mov QWORD [rdi+8+8*1],rax
	mov rax,r14
	mov rdi,r13
	mov QWORD [rdi+8+8*0],rax
	mov rax,QWORD [rsp-8+8*1]
	mov rdi,r13
	mov QWORD [rdi+8+8*1],rax
	mov rax,r13
	mov BYTE [rax+6],0
	mov rdi,rax
	mov rax,[SS_LN_TOP]
	mov rsi,[rax]
	mov QWORD [SS_LN_TOP],rsi 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	lea rsp,[rsp+8*4]
	jmp LB_4196
LB_4196:
	movzx rax,BYTE [r8+6]
	cmp rax,0
	jnz LB_4156
	pop r14
	pop r9
	add rsp,8
	pop r13
	ret
LB_4156:
	mov QWORD [rsp+8*0],r14
	mov r13,QWORD [rsp+16+8*0]
	mov r14,QWORD [rsp+8*0]
	jmp LB_4200
LB_4200
;; rsp=0 , %2365~1'(= r ) %2364~0'(= r ) 
; #20 { } ⊢ 1(<2)◂{ }
;; rsp=0 , %2366~1(<2)◂{ } %2365~1'(= r ) %2364~0'(= r ) 
; #22 1(<2)◂{ } ⊢ 0(<2)◂1(<2)◂{ }
;; rsp=0 , %2367~0(<2)◂1(<2)◂{ } %2365~1'(= r ) %2364~0'(= r ) 
; ∎ 0(<2)◂1(<2)◂{ }
; .dlt.ptn 1'(= r )
; .dlt.ptn 0'(= r )
; .mov_ptn2 0(<2)◂1(<2)◂{ } ⊢ 2'(= a3◂ [ a2◂ [ *{ {| l |}a34◂ [ ]}]] )
; .mov_ptn 0(<2)◂1(<2)◂{ } ⊢ 2'(= a3◂ [ a2◂ [ *{ {| l |}a34◂ [ ]}]] )
	mov rax,unt 
	mov rax,unt_1
	mov rdi,rax
	mov rax,[SS_LN_TOP]
	mov rsi,[rax]
	mov QWORD [SS_LN_TOP],rsi 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	jmp LB_4199
LB_4199:
	movzx rax,BYTE [r8+6]
	cmp rax,0
	jnz LB_4198
	pop r14
	pop r9
	add rsp,8
	pop r13
	ret
LB_4198:
	pop rdi
	pop r9 
	pop r14
	pop r13
	ret
ETR_254:
	mov r9,0x0000_ffff_ffff_ffff
	and r9,[r13]
	call GRM_254
	ret
GRM_254:
	sub rsp,32
	mov QWORD [rsp+24],r13
	mov QWORD [rsp+16],r14 
	mov QWORD [rsp+8],r9
	jmp LB_4203
LB_4202:
	add r14,1 
LB_4203:
	cmp r14,r9
	jge LB_4204
	movzx rax,BYTE [r13+8+r14]
	cmp rax,9 
	jz LB_4202
	cmp rax,10 
	jz LB_4202
	cmp rax,32 
	jz LB_4202
LB_4204
	call GRM_217
	movzx rax,BYTE [r8+6]
	cmp rax,0
	jnz LB_4207
	jmp LB_4208
LB_4207:
	jmp LB_4205
LB_4208:
	lea rsp,[rsp-8*1]
	mov r8,[r8+8]
; .mov_ptn2 2'(= a35◂ [ *{ }] ) ⊢ 8'(= a35◂ [ *{ }] )
; .mov_ptn 2'(= a35◂ [ *{ }] ) ⊢ 8'(= a35◂ [ *{ }] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_4206
LB_4205:
	lea rsp,[rsp+8*0]
	jmp LB_4201
LB_4206:
	jmp LB_4210
LB_4209:
	add r14,1 
LB_4210:
	cmp r14,r9
	jge LB_4211
	movzx rax,BYTE [r13+8+r14]
	cmp rax,9 
	jz LB_4209
	cmp rax,10 
	jz LB_4209
	cmp rax,32 
	jz LB_4209
LB_4211
	lea rax,[r14+3]
	cmp rax,r9
	jg LB_4214
	jmp LB_4215
LB_4214:
	mov r8,unt_1
	jmp LB_4212
LB_4215:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],226
	jnz LB_4216
	cmp BYTE [rdi+1],136
	jnz LB_4216
	cmp BYTE [rdi+2],144
	jnz LB_4216
	jmp LB_4217
LB_4216:
	mov r8,unt_1
	jmp LB_4212
LB_4217:
	add r14,3
	jmp LB_4213
LB_4212:
	lea rsp,[rsp+8*1]
	jmp LB_4201
LB_4213:
	jmp LB_4219
LB_4218:
	add r14,1 
LB_4219:
	cmp r14,r9
	jge LB_4220
	movzx rax,BYTE [r13+8+r14]
	cmp rax,9 
	jz LB_4218
	cmp rax,10 
	jz LB_4218
	cmp rax,32 
	jz LB_4218
LB_4220
	call GRM_74
	movzx rax,BYTE [r8+6]
	cmp rax,0
	jnz LB_4223
	jmp LB_4224
LB_4223:
	jmp LB_4221
LB_4224:
	lea rsp,[rsp-8*1]
; .mov_ptn2 2'(= {| l |} ) ⊢ 9'(= {| l |} )
; .mov_ptn 2'(= {| l |} ) ⊢ 9'(= {| l |} )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_4222
LB_4221:
	lea rsp,[rsp+8*1]
	pop rdi
	pop r9 
	pop r14
	pop r13
	ret
LB_4222:
	jmp LB_4226
LB_4225:
	add r14,1 
LB_4226:
	cmp r14,r9
	jge LB_4227
	movzx rax,BYTE [r13+8+r14]
	cmp rax,9 
	jz LB_4225
	cmp rax,10 
	jz LB_4225
	cmp rax,32 
	jz LB_4225
LB_4227
	lea rax,[r14+1]
	cmp rax,r9
	jg LB_4230
	jmp LB_4231
LB_4230:
	mov r8,unt_1
	jmp LB_4228
LB_4231:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],58
	jnz LB_4232
	jmp LB_4233
LB_4232:
	mov r8,unt_1
	jmp LB_4228
LB_4233:
	add r14,1
	jmp LB_4229
LB_4228:
	lea rsp,[rsp+8*2]
	pop rdi
	pop r9 
	pop r14
	pop r13
	ret
LB_4229:
	jmp LB_4235
LB_4234:
	add r14,1 
LB_4235:
	cmp r14,r9
	jge LB_4236
	movzx rax,BYTE [r13+8+r14]
	cmp rax,9 
	jz LB_4234
	cmp rax,10 
	jz LB_4234
	cmp rax,32 
	jz LB_4234
LB_4236
	call GRM_210
	movzx rax,BYTE [r8+6]
	cmp rax,0
	jnz LB_4239
	jmp LB_4240
LB_4239:
	jmp LB_4237
LB_4240:
	lea rsp,[rsp-8*1]
	mov r8,[r8+8]
; .mov_ptn2 2'(= a23◂ [ ] ) ⊢ 10'(= a23◂ [ ] )
; .mov_ptn 2'(= a23◂ [ ] ) ⊢ 10'(= a23◂ [ ] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_4238
LB_4237:
	lea rsp,[rsp+8*2]
	pop rdi
	pop r9 
	pop r14
	pop r13
	ret
LB_4238:
	jmp LB_4242
LB_4241:
	add r14,1 
LB_4242:
	cmp r14,r9
	jge LB_4243
	movzx rax,BYTE [r13+8+r14]
	cmp rax,9 
	jz LB_4241
	cmp rax,10 
	jz LB_4241
	cmp rax,32 
	jz LB_4241
LB_4243
	call GRM_254
	movzx rax,BYTE [r8+6]
	cmp rax,0
	jnz LB_4246
	jmp LB_4247
LB_4246:
	jmp LB_4244
LB_4247:
	lea rsp,[rsp-8*1]
	mov r8,[r8+8]
; .mov_ptn2 2'(= a2◂ [ *{ {| l |}a23◂ [ ]}] ) ⊢ 11'(= a2◂ [ *{ {| l |}a23◂ [ ]}] )
; .mov_ptn 2'(= a2◂ [ *{ {| l |}a23◂ [ ]}] ) ⊢ 11'(= a2◂ [ *{ {| l |}a23◂ [ ]}] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_4245
LB_4244:
	lea rsp,[rsp+8*3]
	pop rdi
	pop r9 
	pop r14
	pop r13
	ret
LB_4245:
	mov QWORD [rsp+8*4],r14
	mov r13,QWORD [rsp+16+8*4]
	mov r14,QWORD [rsp+8*4]
	jmp LB_4249
LB_4249
;; rsp=4 , %2373~1'(= r ) %2372~0'(= r ) %2371~11'(= a2◂ [ *{ {| l |}a23◂ [ ]}] ) %2370~10'(= a23◂ [ ] ) %2369~9'(= {| l |} ) %2368~8'(= a35◂ [ *{ }] ) 
; #21 { { 9'(= {| l |} ) 10'(= a23◂ [ ] ) } 11'(= a2◂ [ *{ {| l |}a23◂ [ ]}] ) } ⊢ 0(<2)◂{ { 9'(= {| l |} ) 10'(= a23◂ [ ] ) } 11'(= a2◂ [ *{ {| l |}a23◂ [ ]}] ) }
;; rsp=4 , %2374~0(<2)◂{ { 9'(= {| l |} ) 10'(= a23◂ [ ] ) } 11'(= a2◂ [ *{ {| l |}a23◂ [ ]}] ) } %2373~1'(= r ) %2372~0'(= r ) %2368~8'(= a35◂ [ *{ }] ) 
; #22 0(<2)◂{ { 9'(= {| l |} ) 10'(= a23◂ [ ] ) } 11'(= a2◂ [ *{ {| l |}a23◂ [ ]}] ) } ⊢ 0(<2)◂0(<2)◂{ { 9'(= {| l |} ) 10'(= a23◂ [ ] ) } 11'(= a2◂ [ *{ {| l |}a23◂ [ ]}] ) }
;; rsp=4 , %2375~0(<2)◂0(<2)◂{ { 9'(= {| l |} ) 10'(= a23◂ [ ] ) } 11'(= a2◂ [ *{ {| l |}a23◂ [ ]}] ) } %2373~1'(= r ) %2372~0'(= r ) %2368~8'(= a35◂ [ *{ }] ) 
; ∎ 0(<2)◂0(<2)◂{ { 9'(= {| l |} ) 10'(= a23◂ [ ] ) } 11'(= a2◂ [ *{ {| l |}a23◂ [ ]}] ) }
; .dlt.ptn 1'(= r )
; .dlt.ptn 0'(= r )
; .dlt.ptn 8'(= a35◂ [ *{ }] )
;	.dlt adt ⊢ _  
; .mov_ptn2 0(<2)◂0(<2)◂{ { 9'(= {| l |} ) 10'(= a23◂ [ ] ) } 11'(= a2◂ [ *{ {| l |}a23◂ [ ]}] ) } ⊢ 2'(= a3◂ [ a2◂ [ *{ {| l |}a23◂ [ ]}]] )
; .mov_ptn 0(<2)◂0(<2)◂{ { 9'(= {| l |} ) 10'(= a23◂ [ ] ) } 11'(= a2◂ [ *{ {| l |}a23◂ [ ]}] ) } ⊢ 2'(= a3◂ [ a2◂ [ *{ {| l |}a23◂ [ ]}]] )
	mov rax,[SS_RCD_2_TOP]
	mov rsi,[rax] 
	mov QWORD [SS_RCD_2_TOP],rsi
	mov QWORD [rax],0
	mov r13,rax
	mov rax,[SS_RCD_2_TOP]
	mov rsi,[rax] 
	mov QWORD [SS_RCD_2_TOP],rsi
	mov QWORD [rax],0
	mov r14,rax
	mov rax,QWORD [rsp-8+8*3]
	mov rdi,r14
	mov QWORD [rdi+8+8*0],rax
	mov rax,QWORD [rsp-8+8*2]
	mov rdi,r14
	mov QWORD [rdi+8+8*1],rax
	mov rax,r14
	mov rdi,r13
	mov QWORD [rdi+8+8*0],rax
	mov rax,QWORD [rsp-8+8*1]
	mov rdi,r13
	mov QWORD [rdi+8+8*1],rax
	mov rax,r13
	mov BYTE [rax+6],0
	mov rdi,rax
	mov rax,[SS_LN_TOP]
	mov rsi,[rax]
	mov QWORD [SS_LN_TOP],rsi 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	lea rsp,[rsp+8*4]
	jmp LB_4248
LB_4248:
	movzx rax,BYTE [r8+6]
	cmp rax,0
	jnz LB_4201
	pop r14
	pop r9
	add rsp,8
	pop r13
	ret
LB_4201:
	mov QWORD [rsp+8*0],r14
	mov r13,QWORD [rsp+16+8*0]
	mov r14,QWORD [rsp+8*0]
	jmp LB_4252
LB_4252
;; rsp=0 , %2377~1'(= r ) %2376~0'(= r ) 
; #20 { } ⊢ 1(<2)◂{ }
;; rsp=0 , %2378~1(<2)◂{ } %2377~1'(= r ) %2376~0'(= r ) 
; #22 1(<2)◂{ } ⊢ 0(<2)◂1(<2)◂{ }
;; rsp=0 , %2379~0(<2)◂1(<2)◂{ } %2377~1'(= r ) %2376~0'(= r ) 
; ∎ 0(<2)◂1(<2)◂{ }
; .dlt.ptn 1'(= r )
; .dlt.ptn 0'(= r )
; .mov_ptn2 0(<2)◂1(<2)◂{ } ⊢ 2'(= a3◂ [ a2◂ [ *{ {| l |}a23◂ [ ]}]] )
; .mov_ptn 0(<2)◂1(<2)◂{ } ⊢ 2'(= a3◂ [ a2◂ [ *{ {| l |}a23◂ [ ]}]] )
	mov rax,unt 
	mov rax,unt_1
	mov rdi,rax
	mov rax,[SS_LN_TOP]
	mov rsi,[rax]
	mov QWORD [SS_LN_TOP],rsi 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	jmp LB_4251
LB_4251:
	movzx rax,BYTE [r8+6]
	cmp rax,0
	jnz LB_4250
	pop r14
	pop r9
	add rsp,8
	pop r13
	ret
LB_4250:
	pop rdi
	pop r9 
	pop r14
	pop r13
	ret
ETR_255:
	mov r9,0x0000_ffff_ffff_ffff
	and r9,[r13]
	call GRM_255
	ret
GRM_255:
	sub rsp,32
	mov QWORD [rsp+24],r13
	mov QWORD [rsp+16],r14 
	mov QWORD [rsp+8],r9
	jmp LB_4255
LB_4254:
	add r14,1 
LB_4255:
	cmp r14,r9
	jge LB_4256
	movzx rax,BYTE [r13+8+r14]
	cmp rax,9 
	jz LB_4254
	cmp rax,32 
	jz LB_4254
LB_4256
	call GRM_217
	movzx rax,BYTE [r8+6]
	cmp rax,0
	jnz LB_4259
	jmp LB_4260
LB_4259:
	jmp LB_4257
LB_4260:
	lea rsp,[rsp-8*1]
	mov r8,[r8+8]
; .mov_ptn2 2'(= a35◂ [ *{ }] ) ⊢ 8'(= a35◂ [ *{ }] )
; .mov_ptn 2'(= a35◂ [ *{ }] ) ⊢ 8'(= a35◂ [ *{ }] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_4258
LB_4257:
	lea rsp,[rsp+8*0]
	jmp LB_4253
LB_4258:
	jmp LB_4262
LB_4261:
	add r14,1 
LB_4262:
	cmp r14,r9
	jge LB_4263
	movzx rax,BYTE [r13+8+r14]
	cmp rax,9 
	jz LB_4261
	cmp rax,32 
	jz LB_4261
LB_4263
	lea rax,[r14+1]
	cmp rax,r9
	jg LB_4266
	jmp LB_4267
LB_4266:
	mov r8,unt_1
	jmp LB_4264
LB_4267:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],64
	jnz LB_4268
	jmp LB_4269
LB_4268:
	mov r8,unt_1
	jmp LB_4264
LB_4269:
	add r14,1
	jmp LB_4265
LB_4264:
	lea rsp,[rsp+8*1]
	jmp LB_4253
LB_4265:
	jmp LB_4271
LB_4270:
	add r14,1 
LB_4271:
	cmp r14,r9
	jge LB_4272
	movzx rax,BYTE [r13+8+r14]
	cmp rax,9 
	jz LB_4270
	cmp rax,32 
	jz LB_4270
LB_4272
	lea rax,[r14+1]
	cmp rax,r9
	jg LB_4275
	jmp LB_4276
LB_4275:
	mov r8,unt_1
	jmp LB_4273
LB_4276:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],46
	jnz LB_4277
	jmp LB_4278
LB_4277:
	mov r8,unt_1
	jmp LB_4273
LB_4278:
	add r14,1
	jmp LB_4274
LB_4273:
	lea rsp,[rsp+8*1]
	pop rdi
	pop r9 
	pop r14
	pop r13
	ret
LB_4274:
	jmp LB_4280
LB_4279:
	add r14,1 
LB_4280:
	cmp r14,r9
	jge LB_4281
	movzx rax,BYTE [r13+8+r14]
	cmp rax,9 
	jz LB_4279
	cmp rax,32 
	jz LB_4279
LB_4281
	call GRM_74
	movzx rax,BYTE [r8+6]
	cmp rax,0
	jnz LB_4284
	jmp LB_4285
LB_4284:
	jmp LB_4282
LB_4285:
	lea rsp,[rsp-8*1]
; .mov_ptn2 2'(= {| l |} ) ⊢ 9'(= {| l |} )
; .mov_ptn 2'(= {| l |} ) ⊢ 9'(= {| l |} )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_4283
LB_4282:
	lea rsp,[rsp+8*1]
	pop rdi
	pop r9 
	pop r14
	pop r13
	ret
LB_4283:
	jmp LB_4287
LB_4286:
	add r14,1 
LB_4287:
	cmp r14,r9
	jge LB_4288
	movzx rax,BYTE [r13+8+r14]
	cmp rax,9 
	jz LB_4286
	cmp rax,32 
	jz LB_4286
LB_4288
	call GRM_205
	movzx rax,BYTE [r8+6]
	cmp rax,0
	jnz LB_4291
	jmp LB_4292
LB_4291:
	jmp LB_4289
LB_4292:
	lea rsp,[rsp-8*1]
	mov r8,[r8+8]
; .mov_ptn2 2'(= a8◂ [ a13◂ [ {| l |}]] ) ⊢ 10'(= a8◂ [ a13◂ [ {| l |}]] )
; .mov_ptn 2'(= a8◂ [ a13◂ [ {| l |}]] ) ⊢ 10'(= a8◂ [ a13◂ [ {| l |}]] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_4290
LB_4289:
	lea rsp,[rsp+8*2]
	pop rdi
	pop r9 
	pop r14
	pop r13
	ret
LB_4290:
	jmp LB_4294
LB_4293:
	add r14,1 
LB_4294:
	cmp r14,r9
	jge LB_4295
	movzx rax,BYTE [r13+8+r14]
	cmp rax,9 
	jz LB_4293
	cmp rax,32 
	jz LB_4293
LB_4295
	call GRM_257
	movzx rax,BYTE [r8+6]
	cmp rax,0
	jnz LB_4298
	jmp LB_4299
LB_4298:
	jmp LB_4296
LB_4299:
	lea rsp,[rsp-8*1]
	mov r8,[r8+8]
; .mov_ptn2 2'(= a3◂ [ a23◂ [ ]] ) ⊢ 11'(= a3◂ [ a23◂ [ ]] )
; .mov_ptn 2'(= a3◂ [ a23◂ [ ]] ) ⊢ 11'(= a3◂ [ a23◂ [ ]] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_4297
LB_4296:
	lea rsp,[rsp+8*3]
	pop rdi
	pop r9 
	pop r14
	pop r13
	ret
LB_4297:
	jmp LB_4301
LB_4300:
	add r14,1 
LB_4301:
	cmp r14,r9
	jge LB_4302
	movzx rax,BYTE [r13+8+r14]
	cmp rax,9 
	jz LB_4300
	cmp rax,32 
	jz LB_4300
LB_4302
	lea rax,[r14+1]
	cmp rax,r9
	jg LB_4305
	jmp LB_4306
LB_4305:
	mov r8,unt_1
	jmp LB_4303
LB_4306:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],10
	jnz LB_4307
	jmp LB_4308
LB_4307:
	mov r8,unt_1
	jmp LB_4303
LB_4308:
	add r14,1
	jmp LB_4304
LB_4303:
	lea rsp,[rsp+8*4]
	pop rdi
	pop r9 
	pop r14
	pop r13
	ret
LB_4304:
	jmp LB_4310
LB_4309:
	add r14,1 
LB_4310:
	cmp r14,r9
	jge LB_4311
	movzx rax,BYTE [r13+8+r14]
	cmp rax,9 
	jz LB_4309
	cmp rax,32 
	jz LB_4309
LB_4311
	call GRM_234
	movzx rax,BYTE [r8+6]
	cmp rax,0
	jnz LB_4314
	jmp LB_4315
LB_4314:
	jmp LB_4312
LB_4315:
	lea rsp,[rsp-8*1]
	mov r8,[r8+8]
; .mov_ptn2 2'(= a35◂ [ a17◂ [ a9◂ [ ]{| l |}]] ) ⊢ 12'(= a35◂ [ a17◂ [ a9◂ [ ]{| l |}]] )
; .mov_ptn 2'(= a35◂ [ a17◂ [ a9◂ [ ]{| l |}]] ) ⊢ 12'(= a35◂ [ a17◂ [ a9◂ [ ]{| l |}]] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_4313
LB_4312:
	lea rsp,[rsp+8*4]
	pop rdi
	pop r9 
	pop r14
	pop r13
	ret
LB_4313:
	jmp LB_4317
LB_4316:
	add r14,1 
LB_4317:
	cmp r14,r9
	jge LB_4318
	movzx rax,BYTE [r13+8+r14]
	cmp rax,9 
	jz LB_4316
	cmp rax,32 
	jz LB_4316
LB_4318
	call GRM_256
	movzx rax,BYTE [r8+6]
	cmp rax,0
	jnz LB_4321
	jmp LB_4322
LB_4321:
	jmp LB_4319
LB_4322:
	lea rsp,[rsp-8*1]
	mov r8,[r8+8]
; .mov_ptn2 2'(= a35◂ [ a2◂ [ *{ {| l |}a8◂ [ a13◂ [ {| l |}]]a3◂ [ a23◂ [ ]]a17◂ [ a9◂ [ ]{| l |}]}]] ) ⊢ 13'(= a35◂ [ a2◂ [ *{ {| l |}a8◂ [ a13◂ [ {| l |}]]a3◂ [ a23◂ [ ]]a17◂ [ a9◂ [ ]{| l |}]}]] )
; .mov_ptn 2'(= a35◂ [ a2◂ [ *{ {| l |}a8◂ [ a13◂ [ {| l |}]]a3◂ [ a23◂ [ ]]a17◂ [ a9◂ [ ]{| l |}]}]] ) ⊢ 13'(= a35◂ [ a2◂ [ *{ {| l |}a8◂ [ a13◂ [ {| l |}]]a3◂ [ a23◂ [ ]]a17◂ [ a9◂ [ ]{| l |}]}]] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_4320
LB_4319:
	lea rsp,[rsp+8*5]
	pop rdi
	pop r9 
	pop r14
	pop r13
	ret
LB_4320:
	mov QWORD [rsp+8*6],r14
	mov r13,QWORD [rsp+16+8*6]
	mov r14,QWORD [rsp+8*6]
	jmp LB_4324
LB_4324
;; rsp=6 , %2387~1'(= r ) %2386~0'(= r ) %2385~13'(= a35◂ [ a2◂ [ *{ {| l |}a8◂ [ a13◂ [ {| l |}]]a3◂ [ a23◂ [ ]]a17◂ [ a9◂ [ ]{| l |}]}]] ) %2384~12'(= a35◂ [ a17◂ [ a9◂ [ ]{| l |}]] ) %2383~11'(= a3◂ [ a23◂ [ ]] ) %2382~10'(= a8◂ [ a13◂ [ {| l |}]] ) %2381~9'(= {| l |} ) %2380~8'(= a35◂ [ *{ }] ) 
;; ? 13'(= a35◂ [ a2◂ [ *{ {| l |}a8◂ [ a13◂ [ {| l |}]]a3◂ [ a23◂ [ ]]a17◂ [ a9◂ [ ]{| l |}]}]] ) ⊢ 0(<2)◂2'(= a2◂ [ *{ {| l |}a8◂ [ a13◂ [ {| l |}]]a3◂ [ a23◂ [ ]]a17◂ [ a9◂ [ ]{| l |}]}] )
	mov rdi,QWORD [rsp-8+8*1]
	movzx rax,BYTE [rdi+6]
	cmp rax,0
	jnz LB_4325
	mov rax,QWORD [rdi+8]
	mov r8,rax
;; rsp=6 , %2389~2'(= a2◂ [ *{ {| l |}a8◂ [ a13◂ [ {| l |}]]a3◂ [ a23◂ [ ]]a17◂ [ a9◂ [ ]{| l |}]}] ) %2387~1'(= r ) %2386~0'(= r ) %2384~12'(= a35◂ [ a17◂ [ a9◂ [ ]{| l |}]] ) %2383~11'(= a3◂ [ a23◂ [ ]] ) %2382~10'(= a8◂ [ a13◂ [ {| l |}]] ) %2381~9'(= {| l |} ) %2380~8'(= a35◂ [ *{ }] ) 
;; ? 12'(= a35◂ [ a17◂ [ a9◂ [ ]{| l |}]] ) ⊢ 0(<2)◂3'(= a17◂ [ a9◂ [ ]{| l |}] )
	mov rdi,QWORD [rsp-8+8*2]
	movzx rax,BYTE [rdi+6]
	cmp rax,0
	jnz LB_4326
	mov rax,QWORD [rdi+8]
	mov r9,rax
;; rsp=6 , %2391~3'(= a17◂ [ a9◂ [ ]{| l |}] ) %2389~2'(= a2◂ [ *{ {| l |}a8◂ [ a13◂ [ {| l |}]]a3◂ [ a23◂ [ ]]a17◂ [ a9◂ [ ]{| l |}]}] ) %2387~1'(= r ) %2386~0'(= r ) %2383~11'(= a3◂ [ a23◂ [ ]] ) %2382~10'(= a8◂ [ a13◂ [ {| l |}]] ) %2381~9'(= {| l |} ) %2380~8'(= a35◂ [ *{ }] ) 
; #21 { { 9'(= {| l |} ) 10'(= a8◂ [ a13◂ [ {| l |}]] ) 11'(= a3◂ [ a23◂ [ ]] ) 3'(= a17◂ [ a9◂ [ ]{| l |}] ) } 2'(= a2◂ [ *{ {| l |}a8◂ [ a13◂ [ {| l |}]]a3◂ [ a23◂ [ ]]a17◂ [ a9◂ [ ]{| l |}]}] ) } ⊢ 0(<2)◂{ { 9'(= {| l |} ) 10'(= a8◂ [ a13◂ [ {| l |}]] ) 11'(= a3◂ [ a23◂ [ ]] ) 3'(= a17◂ [ a9◂ [ ]{| l |}] ) } 2'(= a2◂ [ *{ {| l |}a8◂ [ a13◂ [ {| l |}]]a3◂ [ a23◂ [ ]]a17◂ [ a9◂ [ ]{| l |}]}] ) }
;; rsp=6 , %2392~0(<2)◂{ { 9'(= {| l |} ) 10'(= a8◂ [ a13◂ [ {| l |}]] ) 11'(= a3◂ [ a23◂ [ ]] ) 3'(= a17◂ [ a9◂ [ ]{| l |}] ) } 2'(= a2◂ [ *{ {| l |}a8◂ [ a13◂ [ {| l |}]]a3◂ [ a23◂ [ ]]a17◂ [ a9◂ [ ]{| l |}]}] ) } %2387~1'(= r ) %2386~0'(= r ) %2380~8'(= a35◂ [ *{ }] ) 
; #173 0(<2)◂{ { 9'(= {| l |} ) 10'(= a8◂ [ a13◂ [ {| l |}]] ) 11'(= a3◂ [ a23◂ [ ]] ) 3'(= a17◂ [ a9◂ [ ]{| l |}] ) } 2'(= a2◂ [ *{ {| l |}a8◂ [ a13◂ [ {| l |}]]a3◂ [ a23◂ [ ]]a17◂ [ a9◂ [ ]{| l |}]}] ) } ⊢ 3(<6)◂0(<2)◂{ { 9'(= {| l |} ) 10'(= a8◂ [ a13◂ [ {| l |}]] ) 11'(= a3◂ [ a23◂ [ ]] ) 3'(= a17◂ [ a9◂ [ ]{| l |}] ) } 2'(= a2◂ [ *{ {| l |}a8◂ [ a13◂ [ {| l |}]]a3◂ [ a23◂ [ ]]a17◂ [ a9◂ [ ]{| l |}]}] ) }
;; rsp=6 , %2393~3(<6)◂0(<2)◂{ { 9'(= {| l |} ) 10'(= a8◂ [ a13◂ [ {| l |}]] ) 11'(= a3◂ [ a23◂ [ ]] ) 3'(= a17◂ [ a9◂ [ ]{| l |}] ) } 2'(= a2◂ [ *{ {| l |}a8◂ [ a13◂ [ {| l |}]]a3◂ [ a23◂ [ ]]a17◂ [ a9◂ [ ]{| l |}]}] ) } %2387~1'(= r ) %2386~0'(= r ) %2380~8'(= a35◂ [ *{ }] ) 
; #193 3(<6)◂0(<2)◂{ { 9'(= {| l |} ) 10'(= a8◂ [ a13◂ [ {| l |}]] ) 11'(= a3◂ [ a23◂ [ ]] ) 3'(= a17◂ [ a9◂ [ ]{| l |}] ) } 2'(= a2◂ [ *{ {| l |}a8◂ [ a13◂ [ {| l |}]]a3◂ [ a23◂ [ ]]a17◂ [ a9◂ [ ]{| l |}]}] ) } ⊢ 0(<2)◂3(<6)◂0(<2)◂{ { 9'(= {| l |} ) 10'(= a8◂ [ a13◂ [ {| l |}]] ) 11'(= a3◂ [ a23◂ [ ]] ) 3'(= a17◂ [ a9◂ [ ]{| l |}] ) } 2'(= a2◂ [ *{ {| l |}a8◂ [ a13◂ [ {| l |}]]a3◂ [ a23◂ [ ]]a17◂ [ a9◂ [ ]{| l |}]}] ) }
;; rsp=6 , %2394~0(<2)◂3(<6)◂0(<2)◂{ { 9'(= {| l |} ) 10'(= a8◂ [ a13◂ [ {| l |}]] ) 11'(= a3◂ [ a23◂ [ ]] ) 3'(= a17◂ [ a9◂ [ ]{| l |}] ) } 2'(= a2◂ [ *{ {| l |}a8◂ [ a13◂ [ {| l |}]]a3◂ [ a23◂ [ ]]a17◂ [ a9◂ [ ]{| l |}]}] ) } %2387~1'(= r ) %2386~0'(= r ) %2380~8'(= a35◂ [ *{ }] ) 
; #22 0(<2)◂3(<6)◂0(<2)◂{ { 9'(= {| l |} ) 10'(= a8◂ [ a13◂ [ {| l |}]] ) 11'(= a3◂ [ a23◂ [ ]] ) 3'(= a17◂ [ a9◂ [ ]{| l |}] ) } 2'(= a2◂ [ *{ {| l |}a8◂ [ a13◂ [ {| l |}]]a3◂ [ a23◂ [ ]]a17◂ [ a9◂ [ ]{| l |}]}] ) } ⊢ 0(<2)◂0(<2)◂3(<6)◂0(<2)◂{ { 9'(= {| l |} ) 10'(= a8◂ [ a13◂ [ {| l |}]] ) 11'(= a3◂ [ a23◂ [ ]] ) 3'(= a17◂ [ a9◂ [ ]{| l |}] ) } 2'(= a2◂ [ *{ {| l |}a8◂ [ a13◂ [ {| l |}]]a3◂ [ a23◂ [ ]]a17◂ [ a9◂ [ ]{| l |}]}] ) }
;; rsp=6 , %2395~0(<2)◂0(<2)◂3(<6)◂0(<2)◂{ { 9'(= {| l |} ) 10'(= a8◂ [ a13◂ [ {| l |}]] ) 11'(= a3◂ [ a23◂ [ ]] ) 3'(= a17◂ [ a9◂ [ ]{| l |}] ) } 2'(= a2◂ [ *{ {| l |}a8◂ [ a13◂ [ {| l |}]]a3◂ [ a23◂ [ ]]a17◂ [ a9◂ [ ]{| l |}]}] ) } %2387~1'(= r ) %2386~0'(= r ) %2380~8'(= a35◂ [ *{ }] ) 
; ∎ 0(<2)◂0(<2)◂3(<6)◂0(<2)◂{ { 9'(= {| l |} ) 10'(= a8◂ [ a13◂ [ {| l |}]] ) 11'(= a3◂ [ a23◂ [ ]] ) 3'(= a17◂ [ a9◂ [ ]{| l |}] ) } 2'(= a2◂ [ *{ {| l |}a8◂ [ a13◂ [ {| l |}]]a3◂ [ a23◂ [ ]]a17◂ [ a9◂ [ ]{| l |}]}] ) }
; .dlt.ptn 1'(= r )
; .dlt.ptn 0'(= r )
; .dlt.ptn 8'(= a35◂ [ *{ }] )
;	.dlt adt ⊢ _  
; .mov_ptn2 0(<2)◂0(<2)◂3(<6)◂0(<2)◂{ { 9'(= {| l |} ) 10'(= a8◂ [ a13◂ [ {| l |}]] ) 11'(= a3◂ [ a23◂ [ ]] ) 3'(= a17◂ [ a9◂ [ ]{| l |}] ) } 2'(= a2◂ [ *{ {| l |}a8◂ [ a13◂ [ {| l |}]]a3◂ [ a23◂ [ ]]a17◂ [ a9◂ [ ]{| l |}]}] ) } ⊢ 2'(= a3◂ [ a35◂ [ a31◂ [ ]]] )
	mov r13,r8
; .mov_ptn 0(<2)◂0(<2)◂3(<6)◂0(<2)◂{ { 9'(= {| l |} ) 10'(= a8◂ [ a13◂ [ {| l |}]] ) 11'(= a3◂ [ a23◂ [ ]] ) 3'(= a17◂ [ a9◂ [ ]{| l |}] ) } 0'(= a2◂ [ *{ {| l |}a8◂ [ a13◂ [ {| l |}]]a3◂ [ a23◂ [ ]]a17◂ [ a9◂ [ ]{| l |}]}] ) } ⊢ 2'(= a3◂ [ a35◂ [ a31◂ [ ]]] )
	mov rax,[SS_RCD_2_TOP]
	mov rsi,[rax] 
	mov QWORD [SS_RCD_2_TOP],rsi
	mov QWORD [rax],0
	mov r14,rax
	mov rax,[SS_RCD_4_TOP]
	mov rsi,[rax] 
	mov QWORD [SS_RCD_4_TOP],rsi
	mov QWORD [rax],0
	mov r10,rax
	mov rax,QWORD [rsp-8+8*5]
	mov rdi,r10
	mov QWORD [rdi+8+8*0],rax
	mov rax,QWORD [rsp-8+8*4]
	mov rdi,r10
	mov QWORD [rdi+8+8*1],rax
	mov rax,QWORD [rsp-8+8*3]
	mov rdi,r10
	mov QWORD [rdi+8+8*2],rax
	mov rax,r9
	mov rdi,r10
	mov QWORD [rdi+8+8*3],rax
	mov rax,r10
	mov rdi,r14
	mov QWORD [rdi+8+8*0],rax
	mov rax,r13
	mov rdi,r14
	mov QWORD [rdi+8+8*1],rax
	mov rax,r14
	mov BYTE [rax+6],0
	mov rdi,rax
	mov rax,[SS_LN_TOP]
	mov rsi,[rax]
	mov QWORD [SS_LN_TOP],rsi 
	mov QWORD [rax],0
	mov BYTE [rax+6],3
	mov QWORD [rax+8],rdi
	mov rdi,rax
	mov rax,[SS_LN_TOP]
	mov rsi,[rax]
	mov QWORD [SS_LN_TOP],rsi 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov rdi,rax
	mov rax,[SS_LN_TOP]
	mov rsi,[rax]
	mov QWORD [SS_LN_TOP],rsi 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	lea rsp,[rsp+8*6]
	jmp LB_4323
LB_4326:
;; ? 12'(= a35◂ [ a17◂ [ a9◂ [ ]{| l |}]] ) ⊢ 1(<2)◂12'(= a2◂ [ *{ rr{| l |}}] )
;; rsp=6 , %2390~12'(= a2◂ [ *{ rr{| l |}}] ) %2389~2'(= a2◂ [ *{ {| l |}a8◂ [ a13◂ [ {| l |}]]a3◂ [ a23◂ [ ]]a17◂ [ a9◂ [ ]{| l |}]}] ) %2387~1'(= r ) %2386~0'(= r ) %2383~11'(= a3◂ [ a23◂ [ ]] ) %2382~10'(= a8◂ [ a13◂ [ {| l |}]] ) %2381~9'(= {| l |} ) %2380~8'(= a35◂ [ *{ }] ) 
; #192 12'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 1(<2)◂12'(= a2◂ [ *{ rr{| l |}}] )
;; rsp=6 , %2396~1(<2)◂12'(= a2◂ [ *{ rr{| l |}}] ) %2389~2'(= a2◂ [ *{ {| l |}a8◂ [ a13◂ [ {| l |}]]a3◂ [ a23◂ [ ]]a17◂ [ a9◂ [ ]{| l |}]}] ) %2387~1'(= r ) %2386~0'(= r ) %2383~11'(= a3◂ [ a23◂ [ ]] ) %2382~10'(= a8◂ [ a13◂ [ {| l |}]] ) %2381~9'(= {| l |} ) %2380~8'(= a35◂ [ *{ }] ) 
; #22 1(<2)◂12'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 0(<2)◂1(<2)◂12'(= a2◂ [ *{ rr{| l |}}] )
;; rsp=6 , %2397~0(<2)◂1(<2)◂12'(= a2◂ [ *{ rr{| l |}}] ) %2389~2'(= a2◂ [ *{ {| l |}a8◂ [ a13◂ [ {| l |}]]a3◂ [ a23◂ [ ]]a17◂ [ a9◂ [ ]{| l |}]}] ) %2387~1'(= r ) %2386~0'(= r ) %2383~11'(= a3◂ [ a23◂ [ ]] ) %2382~10'(= a8◂ [ a13◂ [ {| l |}]] ) %2381~9'(= {| l |} ) %2380~8'(= a35◂ [ *{ }] ) 
; ∎ 0(<2)◂1(<2)◂12'(= a2◂ [ *{ rr{| l |}}] )
; .dlt.ptn 2'(= a2◂ [ *{ {| l |}a8◂ [ a13◂ [ {| l |}]]a3◂ [ a23◂ [ ]]a17◂ [ a9◂ [ ]{| l |}]}] )
;	.dlt adt ⊢ _  
; .dlt.ptn 1'(= r )
; .dlt.ptn 0'(= r )
; .dlt.ptn 11'(= a3◂ [ a23◂ [ ]] )
;	.dlt adt ⊢ _  
; .dlt.ptn 10'(= a8◂ [ a13◂ [ {| l |}]] )
;	.dlt adt ⊢ _  
; .dlt.ptn 9'(= {| l |} )
	mov rdi,QWORD [rsp-8+8*5]
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call free 
	mov rsp,QWORD [rsp_tmp] 
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
; .dlt.ptn 8'(= a35◂ [ *{ }] )
;	.dlt adt ⊢ _  
; .mov_ptn2 0(<2)◂1(<2)◂12'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 2'(= a3◂ [ a35◂ [ a31◂ [ ]]] )
; .mov_ptn 0(<2)◂1(<2)◂12'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 2'(= a3◂ [ a35◂ [ a31◂ [ ]]] )
	mov rax,QWORD [rsp-8+8*2]
	mov rdi,rax
	mov rax,[SS_LN_TOP]
	mov rsi,[rax]
	mov QWORD [SS_LN_TOP],rsi 
	mov QWORD [rax],0
	mov BYTE [rax+6],1
	mov QWORD [rax+8],rdi
	mov rdi,rax
	mov rax,[SS_LN_TOP]
	mov rsi,[rax]
	mov QWORD [SS_LN_TOP],rsi 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	lea rsp,[rsp+8*6]
	jmp LB_4323
LB_4325:
;; ? 13'(= a35◂ [ a2◂ [ *{ {| l |}a8◂ [ a13◂ [ {| l |}]]a3◂ [ a23◂ [ ]]a17◂ [ a9◂ [ ]{| l |}]}]] ) ⊢ 1(<2)◂13'(= a2◂ [ *{ rr{| l |}}] )
;; rsp=6 , %2388~13'(= a2◂ [ *{ rr{| l |}}] ) %2387~1'(= r ) %2386~0'(= r ) %2384~12'(= a35◂ [ a17◂ [ a9◂ [ ]{| l |}]] ) %2383~11'(= a3◂ [ a23◂ [ ]] ) %2382~10'(= a8◂ [ a13◂ [ {| l |}]] ) %2381~9'(= {| l |} ) %2380~8'(= a35◂ [ *{ }] ) 
;; ? 12'(= a35◂ [ a17◂ [ a9◂ [ ]{| l |}]] ) ⊢ 0(<2)◂2'(= a17◂ [ a9◂ [ ]{| l |}] )
	mov rdi,QWORD [rsp-8+8*2]
	movzx rax,BYTE [rdi+6]
	cmp rax,0
	jnz LB_4327
	mov rax,QWORD [rdi+8]
	mov r8,rax
;; rsp=6 , %2399~2'(= a17◂ [ a9◂ [ ]{| l |}] ) %2388~13'(= a2◂ [ *{ rr{| l |}}] ) %2387~1'(= r ) %2386~0'(= r ) %2383~11'(= a3◂ [ a23◂ [ ]] ) %2382~10'(= a8◂ [ a13◂ [ {| l |}]] ) %2381~9'(= {| l |} ) %2380~8'(= a35◂ [ *{ }] ) 
; #192 13'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 1(<2)◂13'(= a2◂ [ *{ rr{| l |}}] )
;; rsp=6 , %2400~1(<2)◂13'(= a2◂ [ *{ rr{| l |}}] ) %2399~2'(= a17◂ [ a9◂ [ ]{| l |}] ) %2387~1'(= r ) %2386~0'(= r ) %2383~11'(= a3◂ [ a23◂ [ ]] ) %2382~10'(= a8◂ [ a13◂ [ {| l |}]] ) %2381~9'(= {| l |} ) %2380~8'(= a35◂ [ *{ }] ) 
; #22 1(<2)◂13'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 0(<2)◂1(<2)◂13'(= a2◂ [ *{ rr{| l |}}] )
;; rsp=6 , %2401~0(<2)◂1(<2)◂13'(= a2◂ [ *{ rr{| l |}}] ) %2399~2'(= a17◂ [ a9◂ [ ]{| l |}] ) %2387~1'(= r ) %2386~0'(= r ) %2383~11'(= a3◂ [ a23◂ [ ]] ) %2382~10'(= a8◂ [ a13◂ [ {| l |}]] ) %2381~9'(= {| l |} ) %2380~8'(= a35◂ [ *{ }] ) 
; ∎ 0(<2)◂1(<2)◂13'(= a2◂ [ *{ rr{| l |}}] )
; .dlt.ptn 2'(= a17◂ [ a9◂ [ ]{| l |}] )
;	.dlt adt ⊢ _  
; .dlt.ptn 1'(= r )
; .dlt.ptn 0'(= r )
; .dlt.ptn 11'(= a3◂ [ a23◂ [ ]] )
;	.dlt adt ⊢ _  
; .dlt.ptn 10'(= a8◂ [ a13◂ [ {| l |}]] )
;	.dlt adt ⊢ _  
; .dlt.ptn 9'(= {| l |} )
	mov rdi,QWORD [rsp-8+8*5]
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call free 
	mov rsp,QWORD [rsp_tmp] 
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
; .dlt.ptn 8'(= a35◂ [ *{ }] )
;	.dlt adt ⊢ _  
; .mov_ptn2 0(<2)◂1(<2)◂13'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 2'(= a3◂ [ a35◂ [ a31◂ [ ]]] )
; .mov_ptn 0(<2)◂1(<2)◂13'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 2'(= a3◂ [ a35◂ [ a31◂ [ ]]] )
	mov rax,QWORD [rsp-8+8*1]
	mov rdi,rax
	mov rax,[SS_LN_TOP]
	mov rsi,[rax]
	mov QWORD [SS_LN_TOP],rsi 
	mov QWORD [rax],0
	mov BYTE [rax+6],1
	mov QWORD [rax+8],rdi
	mov rdi,rax
	mov rax,[SS_LN_TOP]
	mov rsi,[rax]
	mov QWORD [SS_LN_TOP],rsi 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	lea rsp,[rsp+8*6]
	jmp LB_4323
LB_4327:
;; ? 12'(= a35◂ [ a17◂ [ a9◂ [ ]{| l |}]] ) ⊢ 1(<2)◂12'(= a2◂ [ *{ rr{| l |}}] )
;; rsp=6 , %2398~12'(= a2◂ [ *{ rr{| l |}}] ) %2388~13'(= a2◂ [ *{ rr{| l |}}] ) %2387~1'(= r ) %2386~0'(= r ) %2383~11'(= a3◂ [ a23◂ [ ]] ) %2382~10'(= a8◂ [ a13◂ [ {| l |}]] ) %2381~9'(= {| l |} ) %2380~8'(= a35◂ [ *{ }] ) 
; rsp_d=0, #53 { 13'(= a2◂ [ *{ rr{| l |}}] ) 12'(= a2◂ [ *{ rr{| l |}}] ) } ⊢ 2'(= a2◂ [ *{ rr{| l |}}] )
	lea rsp,[rsp-8*2]
	mov QWORD [rsp+8*0],r13
	mov QWORD [rsp+8*1],r14
; .mov_ptn2 { 13'(= a2◂ [ *{ rr{| l |}}] ) 12'(= a2◂ [ *{ rr{| l |}}] ) } ⊢ { 0'(= a2◂ [ *{ rr{| l |}}] ) 1'(= a2◂ [ *{ rr{| l |}}] ) }
; .mov_ptn 12'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 1'(= a2◂ [ *{ rr{| l |}}] )
	mov rax,QWORD [rsp-8+8*4]
	mov r14,rax
; .mov_ptn 13'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 0'(= a2◂ [ *{ rr{| l |}}] )
	mov rax,QWORD [rsp-8+8*3]
	mov r13,rax
	call LB_1732

	mov r14,QWORD [rsp-8+8*2]
	mov rax,QWORD [rsp-8+8*1]
	mov r8,r13
	mov r13,rax
	lea rsp,[rsp+8*4]
;; rsp=4 , %2402~2'(= a2◂ [ *{ rr{| l |}}] ) %2387~1'(= r ) %2386~0'(= r ) %2383~11'(= a3◂ [ a23◂ [ ]] ) %2382~10'(= a8◂ [ a13◂ [ {| l |}]] ) %2381~9'(= {| l |} ) %2380~8'(= a35◂ [ *{ }] ) 
; #192 2'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] )
;; rsp=4 , %2403~1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] ) %2387~1'(= r ) %2386~0'(= r ) %2383~11'(= a3◂ [ a23◂ [ ]] ) %2382~10'(= a8◂ [ a13◂ [ {| l |}]] ) %2381~9'(= {| l |} ) %2380~8'(= a35◂ [ *{ }] ) 
; #22 1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 0(<2)◂1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] )
;; rsp=4 , %2404~0(<2)◂1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] ) %2387~1'(= r ) %2386~0'(= r ) %2383~11'(= a3◂ [ a23◂ [ ]] ) %2382~10'(= a8◂ [ a13◂ [ {| l |}]] ) %2381~9'(= {| l |} ) %2380~8'(= a35◂ [ *{ }] ) 
; ∎ 0(<2)◂1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] )
; .dlt.ptn 1'(= r )
; .dlt.ptn 0'(= r )
; .dlt.ptn 11'(= a3◂ [ a23◂ [ ]] )
;	.dlt adt ⊢ _  
; .dlt.ptn 10'(= a8◂ [ a13◂ [ {| l |}]] )
;	.dlt adt ⊢ _  
; .dlt.ptn 9'(= {| l |} )
	mov rdi,QWORD [rsp-8+8*3]
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call free 
	mov rsp,QWORD [rsp_tmp] 
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
; .dlt.ptn 8'(= a35◂ [ *{ }] )
;	.dlt adt ⊢ _  
; .mov_ptn2 0(<2)◂1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 2'(= a3◂ [ a35◂ [ a31◂ [ ]]] )
	mov r13,r8
; .mov_ptn 0(<2)◂1(<2)◂0'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 2'(= a3◂ [ a35◂ [ a31◂ [ ]]] )
	mov rax,r13
	mov rdi,rax
	mov rax,[SS_LN_TOP]
	mov rsi,[rax]
	mov QWORD [SS_LN_TOP],rsi 
	mov QWORD [rax],0
	mov BYTE [rax+6],1
	mov QWORD [rax+8],rdi
	mov rdi,rax
	mov rax,[SS_LN_TOP]
	mov rsi,[rax]
	mov QWORD [SS_LN_TOP],rsi 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	lea rsp,[rsp+8*4]
	jmp LB_4323
LB_4323:
	movzx rax,BYTE [r8+6]
	cmp rax,0
	jnz LB_4253
	pop r14
	pop r9
	add rsp,8
	pop r13
	ret
LB_4253:
	jmp LB_4330
LB_4329:
	add r14,1 
LB_4330:
	cmp r14,r9
	jge LB_4331
	movzx rax,BYTE [r13+8+r14]
	cmp rax,9 
	jz LB_4329
	cmp rax,10 
	jz LB_4329
	cmp rax,32 
	jz LB_4329
LB_4331
	call GRM_74
	movzx rax,BYTE [r8+6]
	cmp rax,0
	jnz LB_4334
	jmp LB_4335
LB_4334:
	jmp LB_4332
LB_4335:
	lea rsp,[rsp-8*1]
; .mov_ptn2 2'(= {| l |} ) ⊢ 8'(= {| l |} )
; .mov_ptn 2'(= {| l |} ) ⊢ 8'(= {| l |} )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_4333
LB_4332:
	lea rsp,[rsp+8*0]
	jmp LB_4328
LB_4333:
	jmp LB_4337
LB_4336:
	add r14,1 
LB_4337:
	cmp r14,r9
	jge LB_4338
	movzx rax,BYTE [r13+8+r14]
	cmp rax,9 
	jz LB_4336
	cmp rax,10 
	jz LB_4336
	cmp rax,32 
	jz LB_4336
LB_4338
	call GRM_258
	movzx rax,BYTE [r8+6]
	cmp rax,0
	jnz LB_4341
	jmp LB_4342
LB_4341:
	jmp LB_4339
LB_4342:
	lea rsp,[rsp-8*1]
	mov r8,[r8+8]
; .mov_ptn2 2'(= a35◂ [ a33◂ [ ]] ) ⊢ 9'(= a35◂ [ a33◂ [ ]] )
; .mov_ptn 2'(= a35◂ [ a33◂ [ ]] ) ⊢ 9'(= a35◂ [ a33◂ [ ]] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_4340
LB_4339:
	lea rsp,[rsp+8*1]
	jmp LB_4328
LB_4340:
	mov QWORD [rsp+8*2],r14
	mov r13,QWORD [rsp+16+8*2]
	mov r14,QWORD [rsp+8*2]
	jmp LB_4344
LB_4344
;; rsp=2 , %2408~1'(= r ) %2407~0'(= r ) %2406~9'(= a35◂ [ a33◂ [ ]] ) %2405~8'(= {| l |} ) 
;; ? 9'(= a35◂ [ a33◂ [ ]] ) ⊢ 0(<2)◂2'(= a33◂ [ ] )
	mov rdi,QWORD [rsp-8+8*1]
	movzx rax,BYTE [rdi+6]
	cmp rax,0
	jnz LB_4345
	mov rax,QWORD [rdi+8]
	mov r8,rax
;; rsp=2 , %2410~2'(= a33◂ [ ] ) %2408~1'(= r ) %2407~0'(= r ) %2405~8'(= {| l |} ) 
; #174 { 8'(= {| l |} ) 2'(= a33◂ [ ] ) } ⊢ 2(<6)◂{ 8'(= {| l |} ) 2'(= a33◂ [ ] ) }
;; rsp=2 , %2411~2(<6)◂{ 8'(= {| l |} ) 2'(= a33◂ [ ] ) } %2408~1'(= r ) %2407~0'(= r ) 
; #193 2(<6)◂{ 8'(= {| l |} ) 2'(= a33◂ [ ] ) } ⊢ 0(<2)◂2(<6)◂{ 8'(= {| l |} ) 2'(= a33◂ [ ] ) }
;; rsp=2 , %2412~0(<2)◂2(<6)◂{ 8'(= {| l |} ) 2'(= a33◂ [ ] ) } %2408~1'(= r ) %2407~0'(= r ) 
; #22 0(<2)◂2(<6)◂{ 8'(= {| l |} ) 2'(= a33◂ [ ] ) } ⊢ 0(<2)◂0(<2)◂2(<6)◂{ 8'(= {| l |} ) 2'(= a33◂ [ ] ) }
;; rsp=2 , %2413~0(<2)◂0(<2)◂2(<6)◂{ 8'(= {| l |} ) 2'(= a33◂ [ ] ) } %2408~1'(= r ) %2407~0'(= r ) 
; ∎ 0(<2)◂0(<2)◂2(<6)◂{ 8'(= {| l |} ) 2'(= a33◂ [ ] ) }
; .dlt.ptn 1'(= r )
; .dlt.ptn 0'(= r )
; .mov_ptn2 0(<2)◂0(<2)◂2(<6)◂{ 8'(= {| l |} ) 2'(= a33◂ [ ] ) } ⊢ 2'(= a3◂ [ a35◂ [ a31◂ [ ]]] )
	mov r13,r8
; .mov_ptn 0(<2)◂0(<2)◂2(<6)◂{ 8'(= {| l |} ) 0'(= a33◂ [ ] ) } ⊢ 2'(= a3◂ [ a35◂ [ a31◂ [ ]]] )
	mov rax,[SS_RCD_2_TOP]
	mov rsi,[rax] 
	mov QWORD [SS_RCD_2_TOP],rsi
	mov QWORD [rax],0
	mov r14,rax
	mov rax,QWORD [rsp-8+8*2]
	mov rdi,r14
	mov QWORD [rdi+8+8*0],rax
	mov rax,r13
	mov rdi,r14
	mov QWORD [rdi+8+8*1],rax
	mov rax,r14
	mov BYTE [rax+6],2
	mov rdi,rax
	mov rax,[SS_LN_TOP]
	mov rsi,[rax]
	mov QWORD [SS_LN_TOP],rsi 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov rdi,rax
	mov rax,[SS_LN_TOP]
	mov rsi,[rax]
	mov QWORD [SS_LN_TOP],rsi 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	lea rsp,[rsp+8*2]
	jmp LB_4343
LB_4345:
;; ? 9'(= a35◂ [ a33◂ [ ]] ) ⊢ 1(<2)◂9'(= a2◂ [ *{ rr{| l |}}] )
;; rsp=2 , %2409~9'(= a2◂ [ *{ rr{| l |}}] ) %2408~1'(= r ) %2407~0'(= r ) %2405~8'(= {| l |} ) 
; #192 9'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 1(<2)◂9'(= a2◂ [ *{ rr{| l |}}] )
;; rsp=2 , %2414~1(<2)◂9'(= a2◂ [ *{ rr{| l |}}] ) %2408~1'(= r ) %2407~0'(= r ) %2405~8'(= {| l |} ) 
; #22 1(<2)◂9'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 0(<2)◂1(<2)◂9'(= a2◂ [ *{ rr{| l |}}] )
;; rsp=2 , %2415~0(<2)◂1(<2)◂9'(= a2◂ [ *{ rr{| l |}}] ) %2408~1'(= r ) %2407~0'(= r ) %2405~8'(= {| l |} ) 
; ∎ 0(<2)◂1(<2)◂9'(= a2◂ [ *{ rr{| l |}}] )
; .dlt.ptn 1'(= r )
; .dlt.ptn 0'(= r )
; .dlt.ptn 8'(= {| l |} )
	mov rdi,QWORD [rsp-8+8*2]
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call free 
	mov rsp,QWORD [rsp_tmp] 
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
; .mov_ptn2 0(<2)◂1(<2)◂9'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 2'(= a3◂ [ a35◂ [ a31◂ [ ]]] )
; .mov_ptn 0(<2)◂1(<2)◂9'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 2'(= a3◂ [ a35◂ [ a31◂ [ ]]] )
	mov rax,QWORD [rsp-8+8*1]
	mov rdi,rax
	mov rax,[SS_LN_TOP]
	mov rsi,[rax]
	mov QWORD [SS_LN_TOP],rsi 
	mov QWORD [rax],0
	mov BYTE [rax+6],1
	mov QWORD [rax+8],rdi
	mov rdi,rax
	mov rax,[SS_LN_TOP]
	mov rsi,[rax]
	mov QWORD [SS_LN_TOP],rsi 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	lea rsp,[rsp+8*2]
	jmp LB_4343
LB_4343:
	movzx rax,BYTE [r8+6]
	cmp rax,0
	jnz LB_4328
	pop r14
	pop r9
	add rsp,8
	pop r13
	ret
LB_4328:
	mov QWORD [rsp+8*0],r14
	mov r13,QWORD [rsp+16+8*0]
	mov r14,QWORD [rsp+8*0]
	jmp LB_4348
LB_4348
;; rsp=0 , %2417~1'(= r ) %2416~0'(= r ) 
	jmp LB_4349
LB_4349:
; $ %[ "lc_etr_body 0" ] ⊢ %[ "lc_etr_body 0" ]
;; rsp=0 , %2418~%[ "lc_etr_body 0" ] %2417~1'(= r ) %2416~0'(= r ) 
; _emt %[ "lc_etr_body 0" ] ⊢ %[ "lc_etr_body 0" ]
	jmp LB_4351
LB_4350: db 95,101,109,116,58,0
LB_4351:
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax  
	mov rdi,LB_4350
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call printf 
	mov rsp,QWORD [rsp_tmp]
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	jmp LB_4353
LB_4352: db 34,108,99,95,101,116,114,95,98,111,100,121,32,48,34,0
LB_4353:
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax  
	mov rdi,LB_4352
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call printf 
	mov rsp,QWORD [rsp_tmp]
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	jmp LB_4355
LB_4354: db 10,0
LB_4355:
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax  
	mov rdi,LB_4354
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call printf 
	mov rsp,QWORD [rsp_tmp]
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	jmp LB_4356
LB_4356:
;; rsp=0 , %2419~%[ "lc_etr_body 0" ] %2417~1'(= r ) %2416~0'(= r ) 
; #23 { } ⊢ 1(<2)◂{ }
;; rsp=0 , %2420~1(<2)◂{ } %2419~%[ "lc_etr_body 0" ] %2417~1'(= r ) %2416~0'(= r ) 
; ∎ 1(<2)◂{ }
; .dlt.ptn %[ "lc_etr_body 0" ]
; .dlt.ptn 1'(= r )
; .dlt.ptn 0'(= r )
; .mov_ptn2 1(<2)◂{ } ⊢ 2'(= a3◂ [ a35◂ [ a31◂ [ ]]] )
; .mov_ptn 1(<2)◂{ } ⊢ 2'(= a3◂ [ a35◂ [ a31◂ [ ]]] )
	mov rax,unt 
	mov rax,unt_1
	mov r8,rax
	jmp LB_4347
LB_4347:
	movzx rax,BYTE [r8+6]
	cmp rax,0
	jnz LB_4346
	pop r14
	pop r9
	add rsp,8
	pop r13
	ret
LB_4346:
	pop rdi
	pop r9 
	pop r14
	pop r13
	ret
ETR_256:
	mov r9,0x0000_ffff_ffff_ffff
	and r9,[r13]
	call GRM_256
	ret
GRM_256:
	sub rsp,32
	mov QWORD [rsp+24],r13
	mov QWORD [rsp+16],r14 
	mov QWORD [rsp+8],r9
	jmp LB_4359
LB_4358:
	add r14,1 
LB_4359:
	cmp r14,r9
	jge LB_4360
	movzx rax,BYTE [r13+8+r14]
	cmp rax,9 
	jz LB_4358
	cmp rax,32 
	jz LB_4358
LB_4360
	call GRM_217
	movzx rax,BYTE [r8+6]
	cmp rax,0
	jnz LB_4363
	jmp LB_4364
LB_4363:
	jmp LB_4361
LB_4364:
	lea rsp,[rsp-8*1]
	mov r8,[r8+8]
; .mov_ptn2 2'(= a35◂ [ *{ }] ) ⊢ 8'(= a35◂ [ *{ }] )
; .mov_ptn 2'(= a35◂ [ *{ }] ) ⊢ 8'(= a35◂ [ *{ }] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_4362
LB_4361:
	lea rsp,[rsp+8*0]
	jmp LB_4357
LB_4362:
	jmp LB_4366
LB_4365:
	add r14,1 
LB_4366:
	cmp r14,r9
	jge LB_4367
	movzx rax,BYTE [r13+8+r14]
	cmp rax,9 
	jz LB_4365
	cmp rax,32 
	jz LB_4365
LB_4367
	lea rax,[r14+1]
	cmp rax,r9
	jg LB_4370
	jmp LB_4371
LB_4370:
	mov r8,unt_1
	jmp LB_4368
LB_4371:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],64
	jnz LB_4372
	jmp LB_4373
LB_4372:
	mov r8,unt_1
	jmp LB_4368
LB_4373:
	add r14,1
	jmp LB_4369
LB_4368:
	lea rsp,[rsp+8*1]
	jmp LB_4357
LB_4369:
	jmp LB_4375
LB_4374:
	add r14,1 
LB_4375:
	cmp r14,r9
	jge LB_4376
	movzx rax,BYTE [r13+8+r14]
	cmp rax,9 
	jz LB_4374
	cmp rax,32 
	jz LB_4374
LB_4376
	lea rax,[r14+1]
	cmp rax,r9
	jg LB_4379
	jmp LB_4380
LB_4379:
	mov r8,unt_1
	jmp LB_4377
LB_4380:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],46
	jnz LB_4381
	jmp LB_4382
LB_4381:
	mov r8,unt_1
	jmp LB_4377
LB_4382:
	add r14,1
	jmp LB_4378
LB_4377:
	lea rsp,[rsp+8*1]
	pop rdi
	pop r9 
	pop r14
	pop r13
	ret
LB_4378:
	jmp LB_4384
LB_4383:
	add r14,1 
LB_4384:
	cmp r14,r9
	jge LB_4385
	movzx rax,BYTE [r13+8+r14]
	cmp rax,9 
	jz LB_4383
	cmp rax,32 
	jz LB_4383
LB_4385
	call GRM_74
	movzx rax,BYTE [r8+6]
	cmp rax,0
	jnz LB_4388
	jmp LB_4389
LB_4388:
	jmp LB_4386
LB_4389:
	lea rsp,[rsp-8*1]
; .mov_ptn2 2'(= {| l |} ) ⊢ 9'(= {| l |} )
; .mov_ptn 2'(= {| l |} ) ⊢ 9'(= {| l |} )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_4387
LB_4386:
	lea rsp,[rsp+8*1]
	pop rdi
	pop r9 
	pop r14
	pop r13
	ret
LB_4387:
	jmp LB_4391
LB_4390:
	add r14,1 
LB_4391:
	cmp r14,r9
	jge LB_4392
	movzx rax,BYTE [r13+8+r14]
	cmp rax,9 
	jz LB_4390
	cmp rax,32 
	jz LB_4390
LB_4392
	call GRM_205
	movzx rax,BYTE [r8+6]
	cmp rax,0
	jnz LB_4395
	jmp LB_4396
LB_4395:
	jmp LB_4393
LB_4396:
	lea rsp,[rsp-8*1]
	mov r8,[r8+8]
; .mov_ptn2 2'(= a8◂ [ a13◂ [ {| l |}]] ) ⊢ 10'(= a8◂ [ a13◂ [ {| l |}]] )
; .mov_ptn 2'(= a8◂ [ a13◂ [ {| l |}]] ) ⊢ 10'(= a8◂ [ a13◂ [ {| l |}]] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_4394
LB_4393:
	lea rsp,[rsp+8*2]
	pop rdi
	pop r9 
	pop r14
	pop r13
	ret
LB_4394:
	jmp LB_4398
LB_4397:
	add r14,1 
LB_4398:
	cmp r14,r9
	jge LB_4399
	movzx rax,BYTE [r13+8+r14]
	cmp rax,9 
	jz LB_4397
	cmp rax,32 
	jz LB_4397
LB_4399
	call GRM_257
	movzx rax,BYTE [r8+6]
	cmp rax,0
	jnz LB_4402
	jmp LB_4403
LB_4402:
	jmp LB_4400
LB_4403:
	lea rsp,[rsp-8*1]
	mov r8,[r8+8]
; .mov_ptn2 2'(= a3◂ [ a23◂ [ ]] ) ⊢ 11'(= a3◂ [ a23◂ [ ]] )
; .mov_ptn 2'(= a3◂ [ a23◂ [ ]] ) ⊢ 11'(= a3◂ [ a23◂ [ ]] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_4401
LB_4400:
	lea rsp,[rsp+8*3]
	pop rdi
	pop r9 
	pop r14
	pop r13
	ret
LB_4401:
	jmp LB_4405
LB_4404:
	add r14,1 
LB_4405:
	cmp r14,r9
	jge LB_4406
	movzx rax,BYTE [r13+8+r14]
	cmp rax,9 
	jz LB_4404
	cmp rax,32 
	jz LB_4404
LB_4406
	lea rax,[r14+1]
	cmp rax,r9
	jg LB_4409
	jmp LB_4410
LB_4409:
	mov r8,unt_1
	jmp LB_4407
LB_4410:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],10
	jnz LB_4411
	jmp LB_4412
LB_4411:
	mov r8,unt_1
	jmp LB_4407
LB_4412:
	add r14,1
	jmp LB_4408
LB_4407:
	lea rsp,[rsp+8*4]
	pop rdi
	pop r9 
	pop r14
	pop r13
	ret
LB_4408:
	jmp LB_4414
LB_4413:
	add r14,1 
LB_4414:
	cmp r14,r9
	jge LB_4415
	movzx rax,BYTE [r13+8+r14]
	cmp rax,9 
	jz LB_4413
	cmp rax,32 
	jz LB_4413
LB_4415
	call GRM_234
	movzx rax,BYTE [r8+6]
	cmp rax,0
	jnz LB_4418
	jmp LB_4419
LB_4418:
	jmp LB_4416
LB_4419:
	lea rsp,[rsp-8*1]
	mov r8,[r8+8]
; .mov_ptn2 2'(= a35◂ [ a17◂ [ a9◂ [ ]{| l |}]] ) ⊢ 12'(= a35◂ [ a17◂ [ a9◂ [ ]{| l |}]] )
; .mov_ptn 2'(= a35◂ [ a17◂ [ a9◂ [ ]{| l |}]] ) ⊢ 12'(= a35◂ [ a17◂ [ a9◂ [ ]{| l |}]] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_4417
LB_4416:
	lea rsp,[rsp+8*4]
	pop rdi
	pop r9 
	pop r14
	pop r13
	ret
LB_4417:
	jmp LB_4421
LB_4420:
	add r14,1 
LB_4421:
	cmp r14,r9
	jge LB_4422
	movzx rax,BYTE [r13+8+r14]
	cmp rax,9 
	jz LB_4420
	cmp rax,32 
	jz LB_4420
LB_4422
	call GRM_256
	movzx rax,BYTE [r8+6]
	cmp rax,0
	jnz LB_4425
	jmp LB_4426
LB_4425:
	jmp LB_4423
LB_4426:
	lea rsp,[rsp-8*1]
	mov r8,[r8+8]
; .mov_ptn2 2'(= a35◂ [ a2◂ [ *{ {| l |}a8◂ [ a13◂ [ {| l |}]]a3◂ [ a23◂ [ ]]a17◂ [ a9◂ [ ]{| l |}]}]] ) ⊢ 13'(= a35◂ [ a2◂ [ *{ {| l |}a8◂ [ a13◂ [ {| l |}]]a3◂ [ a23◂ [ ]]a17◂ [ a9◂ [ ]{| l |}]}]] )
; .mov_ptn 2'(= a35◂ [ a2◂ [ *{ {| l |}a8◂ [ a13◂ [ {| l |}]]a3◂ [ a23◂ [ ]]a17◂ [ a9◂ [ ]{| l |}]}]] ) ⊢ 13'(= a35◂ [ a2◂ [ *{ {| l |}a8◂ [ a13◂ [ {| l |}]]a3◂ [ a23◂ [ ]]a17◂ [ a9◂ [ ]{| l |}]}]] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_4424
LB_4423:
	lea rsp,[rsp+8*5]
	pop rdi
	pop r9 
	pop r14
	pop r13
	ret
LB_4424:
	mov QWORD [rsp+8*6],r14
	mov r13,QWORD [rsp+16+8*6]
	mov r14,QWORD [rsp+8*6]
	jmp LB_4428
LB_4429: ; 194 { 0'(= a35◂ [ a2◂ [ *{ {| l |}a8◂ [ a13◂ [ {| l |}]]a3◂ [ a23◂ [ ]]a17◂ [ a9◂ [ ]{| l |}]}]] ) 1'(= a35◂ [ a17◂ [ a9◂ [ ]{| l |}]] ) } ⊢ 0'(= a35◂ [ *{ a2◂ [ *{ {| l |}a8◂ [ a13◂ [ {| l |}]]a3◂ [ a23◂ [ ]]a17◂ [ a9◂ [ ]{| l |}]}]a17◂ [ a9◂ [ ]{| l |}]}] ) : ({ _t35◂_lst◂{ _s8 _t8◂_t13◂_s8 _opn◂_t23 _t17◂_s8◂_t9 } _t35◂_t17◂_s8◂_t9 }→_t35◂{ _lst◂{ _s8 _t8◂_t13◂_s8 _opn◂_t23 _t17◂_s8◂_t9 } _t17◂_s8◂_t9 })
;; rsp=0 , %1131~1'(= a35◂ [ a17◂ [ a9◂ [ ]{| l |}]] ) %1130~0'(= a35◂ [ a2◂ [ *{ {| l |}a8◂ [ a13◂ [ {| l |}]]a3◂ [ a23◂ [ ]]a17◂ [ a9◂ [ ]{| l |}]}]] ) 
;; ? 0'(= a35◂ [ a2◂ [ *{ {| l |}a8◂ [ a13◂ [ {| l |}]]a3◂ [ a23◂ [ ]]a17◂ [ a9◂ [ ]{| l |}]}]] ) ⊢ 0(<2)◂2'(= a2◂ [ *{ {| l |}a8◂ [ a13◂ [ {| l |}]]a3◂ [ a23◂ [ ]]a17◂ [ a9◂ [ ]{| l |}]}] )
	mov rdi,r13
	movzx rax,BYTE [rdi+6]
	cmp rax,0
	jnz LB_4430
	mov rax,QWORD [rdi+8]
	mov r8,rax
;; rsp=0 , %1133~2'(= a2◂ [ *{ {| l |}a8◂ [ a13◂ [ {| l |}]]a3◂ [ a23◂ [ ]]a17◂ [ a9◂ [ ]{| l |}]}] ) %1131~1'(= a35◂ [ a17◂ [ a9◂ [ ]{| l |}]] ) 
;; ? 1'(= a35◂ [ a17◂ [ a9◂ [ ]{| l |}]] ) ⊢ 0(<2)◂0'(= a17◂ [ a9◂ [ ]{| l |}] )
	mov rdi,r14
	movzx rax,BYTE [rdi+6]
	cmp rax,0
	jnz LB_4431
	mov rax,QWORD [rdi+8]
	mov r13,rax
;; rsp=0 , %1135~0'(= a17◂ [ a9◂ [ ]{| l |}] ) %1133~2'(= a2◂ [ *{ {| l |}a8◂ [ a13◂ [ {| l |}]]a3◂ [ a23◂ [ ]]a17◂ [ a9◂ [ ]{| l |}]}] ) 
; #193 { 2'(= a2◂ [ *{ {| l |}a8◂ [ a13◂ [ {| l |}]]a3◂ [ a23◂ [ ]]a17◂ [ a9◂ [ ]{| l |}]}] ) 0'(= a17◂ [ a9◂ [ ]{| l |}] ) } ⊢ 0(<2)◂{ 2'(= a2◂ [ *{ {| l |}a8◂ [ a13◂ [ {| l |}]]a3◂ [ a23◂ [ ]]a17◂ [ a9◂ [ ]{| l |}]}] ) 0'(= a17◂ [ a9◂ [ ]{| l |}] ) }
;; rsp=0 , %1136~0(<2)◂{ 2'(= a2◂ [ *{ {| l |}a8◂ [ a13◂ [ {| l |}]]a3◂ [ a23◂ [ ]]a17◂ [ a9◂ [ ]{| l |}]}] ) 0'(= a17◂ [ a9◂ [ ]{| l |}] ) } 
; ∎ 0(<2)◂{ 2'(= a2◂ [ *{ {| l |}a8◂ [ a13◂ [ {| l |}]]a3◂ [ a23◂ [ ]]a17◂ [ a9◂ [ ]{| l |}]}] ) 0'(= a17◂ [ a9◂ [ ]{| l |}] ) }
; .mov_ptn2 0(<2)◂{ 2'(= a2◂ [ *{ {| l |}a8◂ [ a13◂ [ {| l |}]]a3◂ [ a23◂ [ ]]a17◂ [ a9◂ [ ]{| l |}]}] ) 0'(= a17◂ [ a9◂ [ ]{| l |}] ) } ⊢ 0'(= a35◂ [ *{ a2◂ [ *{ {| l |}a8◂ [ a13◂ [ {| l |}]]a3◂ [ a23◂ [ ]]a17◂ [ a9◂ [ ]{| l |}]}]a17◂ [ a9◂ [ ]{| l |}]}] )
	mov r14,r13
; .mov_ptn 0(<2)◂{ 2'(= a2◂ [ *{ {| l |}a8◂ [ a13◂ [ {| l |}]]a3◂ [ a23◂ [ ]]a17◂ [ a9◂ [ ]{| l |}]}] ) 1'(= a17◂ [ a9◂ [ ]{| l |}] ) } ⊢ 0'(= a35◂ [ *{ a2◂ [ *{ {| l |}a8◂ [ a13◂ [ {| l |}]]a3◂ [ a23◂ [ ]]a17◂ [ a9◂ [ ]{| l |}]}]a17◂ [ a9◂ [ ]{| l |}]}] )
	mov rax,[SS_RCD_2_TOP]
	mov rsi,[rax] 
	mov QWORD [SS_RCD_2_TOP],rsi
	mov QWORD [rax],0
	mov r9,rax
	mov rax,r8
	mov rdi,r9
	mov QWORD [rdi+8+8*0],rax
	mov rax,r14
	mov rdi,r9
	mov QWORD [rdi+8+8*1],rax
	mov rax,r9
	mov BYTE [rax+6],0
	mov r13,rax
	ret
LB_4431:
;; ? 1'(= a35◂ [ a17◂ [ a9◂ [ ]{| l |}]] ) ⊢ 1(<2)◂1'(= a2◂ [ *{ rr{| l |}}] )
;; rsp=0 , %1134~1'(= a2◂ [ *{ rr{| l |}}] ) %1133~2'(= a2◂ [ *{ {| l |}a8◂ [ a13◂ [ {| l |}]]a3◂ [ a23◂ [ ]]a17◂ [ a9◂ [ ]{| l |}]}] ) 
; #192 1'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 1(<2)◂1'(= a2◂ [ *{ rr{| l |}}] )
;; rsp=0 , %1137~1(<2)◂1'(= a2◂ [ *{ rr{| l |}}] ) %1133~2'(= a2◂ [ *{ {| l |}a8◂ [ a13◂ [ {| l |}]]a3◂ [ a23◂ [ ]]a17◂ [ a9◂ [ ]{| l |}]}] ) 
; ∎ 1(<2)◂1'(= a2◂ [ *{ rr{| l |}}] )
; .dlt.ptn 2'(= a2◂ [ *{ {| l |}a8◂ [ a13◂ [ {| l |}]]a3◂ [ a23◂ [ ]]a17◂ [ a9◂ [ ]{| l |}]}] )
;	.dlt adt ⊢ _  
; .mov_ptn2 1(<2)◂1'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 0'(= a35◂ [ *{ a2◂ [ *{ {| l |}a8◂ [ a13◂ [ {| l |}]]a3◂ [ a23◂ [ ]]a17◂ [ a9◂ [ ]{| l |}]}]a17◂ [ a9◂ [ ]{| l |}]}] )
; .mov_ptn 1(<2)◂1'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 0'(= a35◂ [ *{ a2◂ [ *{ {| l |}a8◂ [ a13◂ [ {| l |}]]a3◂ [ a23◂ [ ]]a17◂ [ a9◂ [ ]{| l |}]}]a17◂ [ a9◂ [ ]{| l |}]}] )
	mov rax,r14
	mov rdi,rax
	mov rax,[SS_LN_TOP]
	mov rsi,[rax]
	mov QWORD [SS_LN_TOP],rsi 
	mov QWORD [rax],0
	mov BYTE [rax+6],1
	mov QWORD [rax+8],rdi
	mov r13,rax
	ret
LB_4430:
;; ? 0'(= a35◂ [ a2◂ [ *{ {| l |}a8◂ [ a13◂ [ {| l |}]]a3◂ [ a23◂ [ ]]a17◂ [ a9◂ [ ]{| l |}]}]] ) ⊢ 1(<2)◂0'(= a2◂ [ *{ rr{| l |}}] )
;; rsp=0 , %1132~0'(= a2◂ [ *{ rr{| l |}}] ) %1131~1'(= a35◂ [ a17◂ [ a9◂ [ ]{| l |}]] ) 
;; ? 1'(= a35◂ [ a17◂ [ a9◂ [ ]{| l |}]] ) ⊢ 0(<2)◂2'(= a17◂ [ a9◂ [ ]{| l |}] )
	mov rdi,r14
	movzx rax,BYTE [rdi+6]
	cmp rax,0
	jnz LB_4432
	mov rax,QWORD [rdi+8]
	mov r8,rax
;; rsp=0 , %1139~2'(= a17◂ [ a9◂ [ ]{| l |}] ) %1132~0'(= a2◂ [ *{ rr{| l |}}] ) 
; #192 0'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 1(<2)◂0'(= a2◂ [ *{ rr{| l |}}] )
;; rsp=0 , %1140~1(<2)◂0'(= a2◂ [ *{ rr{| l |}}] ) %1139~2'(= a17◂ [ a9◂ [ ]{| l |}] ) 
; ∎ 1(<2)◂0'(= a2◂ [ *{ rr{| l |}}] )
; .dlt.ptn 2'(= a17◂ [ a9◂ [ ]{| l |}] )
;	.dlt adt ⊢ _  
; .mov_ptn2 1(<2)◂0'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 0'(= a35◂ [ *{ a2◂ [ *{ {| l |}a8◂ [ a13◂ [ {| l |}]]a3◂ [ a23◂ [ ]]a17◂ [ a9◂ [ ]{| l |}]}]a17◂ [ a9◂ [ ]{| l |}]}] )
	mov r14,r13
; .mov_ptn 1(<2)◂1'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 0'(= a35◂ [ *{ a2◂ [ *{ {| l |}a8◂ [ a13◂ [ {| l |}]]a3◂ [ a23◂ [ ]]a17◂ [ a9◂ [ ]{| l |}]}]a17◂ [ a9◂ [ ]{| l |}]}] )
	mov rax,r14
	mov rdi,rax
	mov rax,[SS_LN_TOP]
	mov rsi,[rax]
	mov QWORD [SS_LN_TOP],rsi 
	mov QWORD [rax],0
	mov BYTE [rax+6],1
	mov QWORD [rax+8],rdi
	mov r13,rax
	ret
LB_4432:
;; ? 1'(= a35◂ [ a17◂ [ a9◂ [ ]{| l |}]] ) ⊢ 1(<2)◂1'(= a2◂ [ *{ rr{| l |}}] )
;; rsp=0 , %1138~1'(= a2◂ [ *{ rr{| l |}}] ) %1132~0'(= a2◂ [ *{ rr{| l |}}] ) 
; rsp_d=0, #53 { 0'(= a2◂ [ *{ rr{| l |}}] ) 1'(= a2◂ [ *{ rr{| l |}}] ) } ⊢ 0'(= a2◂ [ *{ rr{| l |}}] )
; .mov_ptn2 { 0'(= a2◂ [ *{ rr{| l |}}] ) 1'(= a2◂ [ *{ rr{| l |}}] ) } ⊢ { 0'(= a2◂ [ *{ rr{| l |}}] ) 1'(= a2◂ [ *{ rr{| l |}}] ) }
	call LB_1732

;; rsp=0 , %1141~0'(= a2◂ [ *{ rr{| l |}}] ) 
; #192 0'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 1(<2)◂0'(= a2◂ [ *{ rr{| l |}}] )
;; rsp=0 , %1142~1(<2)◂0'(= a2◂ [ *{ rr{| l |}}] ) 
; ∎ 1(<2)◂0'(= a2◂ [ *{ rr{| l |}}] )
; .mov_ptn2 1(<2)◂0'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 0'(= a35◂ [ *{ a2◂ [ *{ {| l |}a8◂ [ a13◂ [ {| l |}]]a3◂ [ a23◂ [ ]]a17◂ [ a9◂ [ ]{| l |}]}]a17◂ [ a9◂ [ ]{| l |}]}] )
	mov r14,r13
; .mov_ptn 1(<2)◂1'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 0'(= a35◂ [ *{ a2◂ [ *{ {| l |}a8◂ [ a13◂ [ {| l |}]]a3◂ [ a23◂ [ ]]a17◂ [ a9◂ [ ]{| l |}]}]a17◂ [ a9◂ [ ]{| l |}]}] )
	mov rax,r14
	mov rdi,rax
	mov rax,[SS_LN_TOP]
	mov rsi,[rax]
	mov QWORD [SS_LN_TOP],rsi 
	mov QWORD [rax],0
	mov BYTE [rax+6],1
	mov QWORD [rax+8],rdi
	mov r13,rax
	ret
LB_4428
;; rsp=6 , %2428~1'(= r ) %2427~0'(= r ) %2426~13'(= a35◂ [ a2◂ [ *{ {| l |}a8◂ [ a13◂ [ {| l |}]]a3◂ [ a23◂ [ ]]a17◂ [ a9◂ [ ]{| l |}]}]] ) %2425~12'(= a35◂ [ a17◂ [ a9◂ [ ]{| l |}]] ) %2424~11'(= a3◂ [ a23◂ [ ]] ) %2423~10'(= a8◂ [ a13◂ [ {| l |}]] ) %2422~9'(= {| l |} ) %2421~8'(= a35◂ [ *{ }] ) 
; rsp_d=0, #194 { 13'(= a35◂ [ a2◂ [ *{ {| l |}a8◂ [ a13◂ [ {| l |}]]a3◂ [ a23◂ [ ]]a17◂ [ a9◂ [ ]{| l |}]}]] ) 12'(= a35◂ [ a17◂ [ a9◂ [ ]{| l |}]] ) } ⊢ 2'(= a35◂ [ *{ a2◂ [ *{ {| l |}a8◂ [ a13◂ [ {| l |}]]a3◂ [ a23◂ [ ]]a17◂ [ a9◂ [ ]{| l |}]}]a17◂ [ a9◂ [ ]{| l |}]}] )
	lea rsp,[rsp-8*2]
	mov QWORD [rsp+8*0],r13
	mov QWORD [rsp+8*1],r14
; .mov_ptn2 { 13'(= a35◂ [ a2◂ [ *{ {| l |}a8◂ [ a13◂ [ {| l |}]]a3◂ [ a23◂ [ ]]a17◂ [ a9◂ [ ]{| l |}]}]] ) 12'(= a35◂ [ a17◂ [ a9◂ [ ]{| l |}]] ) } ⊢ { 0'(= a35◂ [ a2◂ [ *{ {| l |}a8◂ [ a13◂ [ {| l |}]]a3◂ [ a23◂ [ ]]a17◂ [ a9◂ [ ]{| l |}]}]] ) 1'(= a35◂ [ a17◂ [ a9◂ [ ]{| l |}]] ) }
; .mov_ptn 12'(= a35◂ [ a17◂ [ a9◂ [ ]{| l |}]] ) ⊢ 1'(= a35◂ [ a17◂ [ a9◂ [ ]{| l |}]] )
	mov rax,QWORD [rsp-8+8*4]
	mov r14,rax
; .mov_ptn 13'(= a35◂ [ a2◂ [ *{ {| l |}a8◂ [ a13◂ [ {| l |}]]a3◂ [ a23◂ [ ]]a17◂ [ a9◂ [ ]{| l |}]}]] ) ⊢ 0'(= a35◂ [ a2◂ [ *{ {| l |}a8◂ [ a13◂ [ {| l |}]]a3◂ [ a23◂ [ ]]a17◂ [ a9◂ [ ]{| l |}]}]] )
	mov rax,QWORD [rsp-8+8*3]
	mov r13,rax
	call LB_4429

	mov r14,QWORD [rsp-8+8*2]
	mov rax,QWORD [rsp-8+8*1]
	mov r8,r13
	mov r13,rax
	lea rsp,[rsp+8*4]
;; rsp=4 , %2429~2'(= a35◂ [ *{ a2◂ [ *{ {| l |}a8◂ [ a13◂ [ {| l |}]]a3◂ [ a23◂ [ ]]a17◂ [ a9◂ [ ]{| l |}]}]a17◂ [ a9◂ [ ]{| l |}]}] ) %2428~1'(= r ) %2427~0'(= r ) %2424~11'(= a3◂ [ a23◂ [ ]] ) %2423~10'(= a8◂ [ a13◂ [ {| l |}]] ) %2422~9'(= {| l |} ) %2421~8'(= a35◂ [ *{ }] ) 
;; ? 2'(= a35◂ [ *{ a2◂ [ *{ {| l |}a8◂ [ a13◂ [ {| l |}]]a3◂ [ a23◂ [ ]]a17◂ [ a9◂ [ ]{| l |}]}]a17◂ [ a9◂ [ ]{| l |}]}] ) ⊢ 0(<2)◂{ 3'(= a2◂ [ *{ {| l |}a8◂ [ a13◂ [ {| l |}]]a3◂ [ a23◂ [ ]]a17◂ [ a9◂ [ ]{| l |}]}] ) 4'(= a17◂ [ a9◂ [ ]{| l |}] ) }
	mov rdi,r8
	movzx rax,BYTE [rdi+6]
	cmp rax,0
	jnz LB_4433
	mov rdi,r8
	mov rdi,QWORD [rdi+8+8*0]
	mov r9,rdi
	mov rdi,r8
	mov rdi,QWORD [rdi+8+8*1]
	mov r10,rdi
;; rsp=4 , %2432~4'(= a17◂ [ a9◂ [ ]{| l |}] ) %2431~3'(= a2◂ [ *{ {| l |}a8◂ [ a13◂ [ {| l |}]]a3◂ [ a23◂ [ ]]a17◂ [ a9◂ [ ]{| l |}]}] ) %2428~1'(= r ) %2427~0'(= r ) %2424~11'(= a3◂ [ a23◂ [ ]] ) %2423~10'(= a8◂ [ a13◂ [ {| l |}]] ) %2422~9'(= {| l |} ) %2421~8'(= a35◂ [ *{ }] ) 
; #21 { { 9'(= {| l |} ) 10'(= a8◂ [ a13◂ [ {| l |}]] ) 11'(= a3◂ [ a23◂ [ ]] ) 4'(= a17◂ [ a9◂ [ ]{| l |}] ) } 3'(= a2◂ [ *{ {| l |}a8◂ [ a13◂ [ {| l |}]]a3◂ [ a23◂ [ ]]a17◂ [ a9◂ [ ]{| l |}]}] ) } ⊢ 0(<2)◂{ { 9'(= {| l |} ) 10'(= a8◂ [ a13◂ [ {| l |}]] ) 11'(= a3◂ [ a23◂ [ ]] ) 4'(= a17◂ [ a9◂ [ ]{| l |}] ) } 3'(= a2◂ [ *{ {| l |}a8◂ [ a13◂ [ {| l |}]]a3◂ [ a23◂ [ ]]a17◂ [ a9◂ [ ]{| l |}]}] ) }
;; rsp=4 , %2433~0(<2)◂{ { 9'(= {| l |} ) 10'(= a8◂ [ a13◂ [ {| l |}]] ) 11'(= a3◂ [ a23◂ [ ]] ) 4'(= a17◂ [ a9◂ [ ]{| l |}] ) } 3'(= a2◂ [ *{ {| l |}a8◂ [ a13◂ [ {| l |}]]a3◂ [ a23◂ [ ]]a17◂ [ a9◂ [ ]{| l |}]}] ) } %2428~1'(= r ) %2427~0'(= r ) %2421~8'(= a35◂ [ *{ }] ) 
; #193 0(<2)◂{ { 9'(= {| l |} ) 10'(= a8◂ [ a13◂ [ {| l |}]] ) 11'(= a3◂ [ a23◂ [ ]] ) 4'(= a17◂ [ a9◂ [ ]{| l |}] ) } 3'(= a2◂ [ *{ {| l |}a8◂ [ a13◂ [ {| l |}]]a3◂ [ a23◂ [ ]]a17◂ [ a9◂ [ ]{| l |}]}] ) } ⊢ 0(<2)◂0(<2)◂{ { 9'(= {| l |} ) 10'(= a8◂ [ a13◂ [ {| l |}]] ) 11'(= a3◂ [ a23◂ [ ]] ) 4'(= a17◂ [ a9◂ [ ]{| l |}] ) } 3'(= a2◂ [ *{ {| l |}a8◂ [ a13◂ [ {| l |}]]a3◂ [ a23◂ [ ]]a17◂ [ a9◂ [ ]{| l |}]}] ) }
;; rsp=4 , %2434~0(<2)◂0(<2)◂{ { 9'(= {| l |} ) 10'(= a8◂ [ a13◂ [ {| l |}]] ) 11'(= a3◂ [ a23◂ [ ]] ) 4'(= a17◂ [ a9◂ [ ]{| l |}] ) } 3'(= a2◂ [ *{ {| l |}a8◂ [ a13◂ [ {| l |}]]a3◂ [ a23◂ [ ]]a17◂ [ a9◂ [ ]{| l |}]}] ) } %2428~1'(= r ) %2427~0'(= r ) %2421~8'(= a35◂ [ *{ }] ) 
; #22 0(<2)◂0(<2)◂{ { 9'(= {| l |} ) 10'(= a8◂ [ a13◂ [ {| l |}]] ) 11'(= a3◂ [ a23◂ [ ]] ) 4'(= a17◂ [ a9◂ [ ]{| l |}] ) } 3'(= a2◂ [ *{ {| l |}a8◂ [ a13◂ [ {| l |}]]a3◂ [ a23◂ [ ]]a17◂ [ a9◂ [ ]{| l |}]}] ) } ⊢ 0(<2)◂0(<2)◂0(<2)◂{ { 9'(= {| l |} ) 10'(= a8◂ [ a13◂ [ {| l |}]] ) 11'(= a3◂ [ a23◂ [ ]] ) 4'(= a17◂ [ a9◂ [ ]{| l |}] ) } 3'(= a2◂ [ *{ {| l |}a8◂ [ a13◂ [ {| l |}]]a3◂ [ a23◂ [ ]]a17◂ [ a9◂ [ ]{| l |}]}] ) }
;; rsp=4 , %2435~0(<2)◂0(<2)◂0(<2)◂{ { 9'(= {| l |} ) 10'(= a8◂ [ a13◂ [ {| l |}]] ) 11'(= a3◂ [ a23◂ [ ]] ) 4'(= a17◂ [ a9◂ [ ]{| l |}] ) } 3'(= a2◂ [ *{ {| l |}a8◂ [ a13◂ [ {| l |}]]a3◂ [ a23◂ [ ]]a17◂ [ a9◂ [ ]{| l |}]}] ) } %2428~1'(= r ) %2427~0'(= r ) %2421~8'(= a35◂ [ *{ }] ) 
; ∎ 0(<2)◂0(<2)◂0(<2)◂{ { 9'(= {| l |} ) 10'(= a8◂ [ a13◂ [ {| l |}]] ) 11'(= a3◂ [ a23◂ [ ]] ) 4'(= a17◂ [ a9◂ [ ]{| l |}] ) } 3'(= a2◂ [ *{ {| l |}a8◂ [ a13◂ [ {| l |}]]a3◂ [ a23◂ [ ]]a17◂ [ a9◂ [ ]{| l |}]}] ) }
; .dlt.ptn 1'(= r )
; .dlt.ptn 0'(= r )
; .dlt.ptn 8'(= a35◂ [ *{ }] )
;	.dlt adt ⊢ _  
; .mov_ptn2 0(<2)◂0(<2)◂0(<2)◂{ { 9'(= {| l |} ) 10'(= a8◂ [ a13◂ [ {| l |}]] ) 11'(= a3◂ [ a23◂ [ ]] ) 4'(= a17◂ [ a9◂ [ ]{| l |}] ) } 3'(= a2◂ [ *{ {| l |}a8◂ [ a13◂ [ {| l |}]]a3◂ [ a23◂ [ ]]a17◂ [ a9◂ [ ]{| l |}]}] ) } ⊢ 2'(= a3◂ [ a35◂ [ a2◂ [ *{ {| l |}a8◂ [ a13◂ [ {| l |}]]a3◂ [ a23◂ [ ]]a17◂ [ a9◂ [ ]{| l |}]}]]] )
; .mov_ptn 0(<2)◂0(<2)◂0(<2)◂{ { 9'(= {| l |} ) 10'(= a8◂ [ a13◂ [ {| l |}]] ) 11'(= a3◂ [ a23◂ [ ]] ) 4'(= a17◂ [ a9◂ [ ]{| l |}] ) } 3'(= a2◂ [ *{ {| l |}a8◂ [ a13◂ [ {| l |}]]a3◂ [ a23◂ [ ]]a17◂ [ a9◂ [ ]{| l |}]}] ) } ⊢ 2'(= a3◂ [ a35◂ [ a2◂ [ *{ {| l |}a8◂ [ a13◂ [ {| l |}]]a3◂ [ a23◂ [ ]]a17◂ [ a9◂ [ ]{| l |}]}]]] )
	mov rax,[SS_RCD_2_TOP]
	mov rsi,[rax] 
	mov QWORD [SS_RCD_2_TOP],rsi
	mov QWORD [rax],0
	mov r13,rax
	mov rax,[SS_RCD_4_TOP]
	mov rsi,[rax] 
	mov QWORD [SS_RCD_4_TOP],rsi
	mov QWORD [rax],0
	mov r14,rax
	mov rax,QWORD [rsp-8+8*3]
	mov rdi,r14
	mov QWORD [rdi+8+8*0],rax
	mov rax,QWORD [rsp-8+8*2]
	mov rdi,r14
	mov QWORD [rdi+8+8*1],rax
	mov rax,QWORD [rsp-8+8*1]
	mov rdi,r14
	mov QWORD [rdi+8+8*2],rax
	mov rax,r10
	mov rdi,r14
	mov QWORD [rdi+8+8*3],rax
	mov rax,r14
	mov rdi,r13
	mov QWORD [rdi+8+8*0],rax
	mov rax,r9
	mov rdi,r13
	mov QWORD [rdi+8+8*1],rax
	mov rax,r13
	mov BYTE [rax+6],0
	mov rdi,rax
	mov rax,[SS_LN_TOP]
	mov rsi,[rax]
	mov QWORD [SS_LN_TOP],rsi 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov rdi,rax
	mov rax,[SS_LN_TOP]
	mov rsi,[rax]
	mov QWORD [SS_LN_TOP],rsi 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	lea rsp,[rsp+8*4]
	jmp LB_4427
LB_4433:
;; ? 2'(= a35◂ [ *{ a2◂ [ *{ {| l |}a8◂ [ a13◂ [ {| l |}]]a3◂ [ a23◂ [ ]]a17◂ [ a9◂ [ ]{| l |}]}]a17◂ [ a9◂ [ ]{| l |}]}] ) ⊢ 1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] )
;; rsp=4 , %2430~2'(= a2◂ [ *{ rr{| l |}}] ) %2428~1'(= r ) %2427~0'(= r ) %2424~11'(= a3◂ [ a23◂ [ ]] ) %2423~10'(= a8◂ [ a13◂ [ {| l |}]] ) %2422~9'(= {| l |} ) %2421~8'(= a35◂ [ *{ }] ) 
; #192 2'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] )
;; rsp=4 , %2436~1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] ) %2428~1'(= r ) %2427~0'(= r ) %2424~11'(= a3◂ [ a23◂ [ ]] ) %2423~10'(= a8◂ [ a13◂ [ {| l |}]] ) %2422~9'(= {| l |} ) %2421~8'(= a35◂ [ *{ }] ) 
; #22 1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 0(<2)◂1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] )
;; rsp=4 , %2437~0(<2)◂1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] ) %2428~1'(= r ) %2427~0'(= r ) %2424~11'(= a3◂ [ a23◂ [ ]] ) %2423~10'(= a8◂ [ a13◂ [ {| l |}]] ) %2422~9'(= {| l |} ) %2421~8'(= a35◂ [ *{ }] ) 
; ∎ 0(<2)◂1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] )
; .dlt.ptn 1'(= r )
; .dlt.ptn 0'(= r )
; .dlt.ptn 11'(= a3◂ [ a23◂ [ ]] )
;	.dlt adt ⊢ _  
; .dlt.ptn 10'(= a8◂ [ a13◂ [ {| l |}]] )
;	.dlt adt ⊢ _  
; .dlt.ptn 9'(= {| l |} )
	mov rdi,QWORD [rsp-8+8*3]
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call free 
	mov rsp,QWORD [rsp_tmp] 
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
; .dlt.ptn 8'(= a35◂ [ *{ }] )
;	.dlt adt ⊢ _  
; .mov_ptn2 0(<2)◂1(<2)◂2'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 2'(= a3◂ [ a35◂ [ a2◂ [ *{ {| l |}a8◂ [ a13◂ [ {| l |}]]a3◂ [ a23◂ [ ]]a17◂ [ a9◂ [ ]{| l |}]}]]] )
	mov r13,r8
; .mov_ptn 0(<2)◂1(<2)◂0'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 2'(= a3◂ [ a35◂ [ a2◂ [ *{ {| l |}a8◂ [ a13◂ [ {| l |}]]a3◂ [ a23◂ [ ]]a17◂ [ a9◂ [ ]{| l |}]}]]] )
	mov rax,r13
	mov rdi,rax
	mov rax,[SS_LN_TOP]
	mov rsi,[rax]
	mov QWORD [SS_LN_TOP],rsi 
	mov QWORD [rax],0
	mov BYTE [rax+6],1
	mov QWORD [rax+8],rdi
	mov rdi,rax
	mov rax,[SS_LN_TOP]
	mov rsi,[rax]
	mov QWORD [SS_LN_TOP],rsi 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	lea rsp,[rsp+8*4]
	jmp LB_4427
LB_4427:
	movzx rax,BYTE [r8+6]
	cmp rax,0
	jnz LB_4357
	pop r14
	pop r9
	add rsp,8
	pop r13
	ret
LB_4357:
	mov QWORD [rsp+8*0],r14
	mov r13,QWORD [rsp+16+8*0]
	mov r14,QWORD [rsp+8*0]
	jmp LB_4436
LB_4436
;; rsp=0 , %2439~1'(= r ) %2438~0'(= r ) 
; #20 { } ⊢ 1(<2)◂{ }
;; rsp=0 , %2440~1(<2)◂{ } %2439~1'(= r ) %2438~0'(= r ) 
; #193 1(<2)◂{ } ⊢ 0(<2)◂1(<2)◂{ }
;; rsp=0 , %2441~0(<2)◂1(<2)◂{ } %2439~1'(= r ) %2438~0'(= r ) 
; #22 0(<2)◂1(<2)◂{ } ⊢ 0(<2)◂0(<2)◂1(<2)◂{ }
;; rsp=0 , %2442~0(<2)◂0(<2)◂1(<2)◂{ } %2439~1'(= r ) %2438~0'(= r ) 
; ∎ 0(<2)◂0(<2)◂1(<2)◂{ }
; .dlt.ptn 1'(= r )
; .dlt.ptn 0'(= r )
; .mov_ptn2 0(<2)◂0(<2)◂1(<2)◂{ } ⊢ 2'(= a3◂ [ a35◂ [ a2◂ [ *{ {| l |}a8◂ [ a13◂ [ {| l |}]]a3◂ [ a23◂ [ ]]a17◂ [ a9◂ [ ]{| l |}]}]]] )
; .mov_ptn 0(<2)◂0(<2)◂1(<2)◂{ } ⊢ 2'(= a3◂ [ a35◂ [ a2◂ [ *{ {| l |}a8◂ [ a13◂ [ {| l |}]]a3◂ [ a23◂ [ ]]a17◂ [ a9◂ [ ]{| l |}]}]]] )
	mov rax,unt 
	mov rax,unt_1
	mov rdi,rax
	mov rax,[SS_LN_TOP]
	mov rsi,[rax]
	mov QWORD [SS_LN_TOP],rsi 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov rdi,rax
	mov rax,[SS_LN_TOP]
	mov rsi,[rax]
	mov QWORD [SS_LN_TOP],rsi 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	jmp LB_4435
LB_4435:
	movzx rax,BYTE [r8+6]
	cmp rax,0
	jnz LB_4434
	pop r14
	pop r9
	add rsp,8
	pop r13
	ret
LB_4434:
	pop rdi
	pop r9 
	pop r14
	pop r13
	ret
ETR_257:
	mov r9,0x0000_ffff_ffff_ffff
	and r9,[r13]
	call GRM_257
	ret
GRM_257:
	sub rsp,32
	mov QWORD [rsp+24],r13
	mov QWORD [rsp+16],r14 
	mov QWORD [rsp+8],r9
	jmp LB_4439
LB_4438:
	add r14,1 
LB_4439:
	cmp r14,r9
	jge LB_4440
	movzx rax,BYTE [r13+8+r14]
	cmp rax,9 
	jz LB_4438
	cmp rax,32 
	jz LB_4438
LB_4440
	lea rax,[r14+1]
	cmp rax,r9
	jg LB_4443
	jmp LB_4444
LB_4443:
	mov r8,unt_1
	jmp LB_4441
LB_4444:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],58
	jnz LB_4445
	jmp LB_4446
LB_4445:
	mov r8,unt_1
	jmp LB_4441
LB_4446:
	add r14,1
	jmp LB_4442
LB_4441:
	lea rsp,[rsp+8*0]
	jmp LB_4437
LB_4442:
	jmp LB_4448
LB_4447:
	add r14,1 
LB_4448:
	cmp r14,r9
	jge LB_4449
	movzx rax,BYTE [r13+8+r14]
	cmp rax,9 
	jz LB_4447
	cmp rax,32 
	jz LB_4447
LB_4449
	call GRM_210
	movzx rax,BYTE [r8+6]
	cmp rax,0
	jnz LB_4452
	jmp LB_4453
LB_4452:
	jmp LB_4450
LB_4453:
	lea rsp,[rsp-8*1]
	mov r8,[r8+8]
; .mov_ptn2 2'(= a23◂ [ ] ) ⊢ 8'(= a23◂ [ ] )
; .mov_ptn 2'(= a23◂ [ ] ) ⊢ 8'(= a23◂ [ ] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_4451
LB_4450:
	lea rsp,[rsp+8*0]
	pop rdi
	pop r9 
	pop r14
	pop r13
	ret
LB_4451:
	mov QWORD [rsp+8*1],r14
	mov r13,QWORD [rsp+16+8*1]
	mov r14,QWORD [rsp+8*1]
	jmp LB_4455
LB_4455
;; rsp=1 , %2445~1'(= r ) %2444~0'(= r ) %2443~8'(= a23◂ [ ] ) 
; #22 8'(= a23◂ [ ] ) ⊢ 0(<2)◂8'(= a23◂ [ ] )
;; rsp=1 , %2446~0(<2)◂8'(= a23◂ [ ] ) %2445~1'(= r ) %2444~0'(= r ) 
; #22 0(<2)◂8'(= a23◂ [ ] ) ⊢ 0(<2)◂0(<2)◂8'(= a23◂ [ ] )
;; rsp=1 , %2447~0(<2)◂0(<2)◂8'(= a23◂ [ ] ) %2445~1'(= r ) %2444~0'(= r ) 
; ∎ 0(<2)◂0(<2)◂8'(= a23◂ [ ] )
; .dlt.ptn 1'(= r )
; .dlt.ptn 0'(= r )
; .mov_ptn2 0(<2)◂0(<2)◂8'(= a23◂ [ ] ) ⊢ 2'(= a3◂ [ a3◂ [ a23◂ [ ]]] )
; .mov_ptn 0(<2)◂0(<2)◂8'(= a23◂ [ ] ) ⊢ 2'(= a3◂ [ a3◂ [ a23◂ [ ]]] )
	mov rax,QWORD [rsp-8+8*1]
	mov rdi,rax
	mov rax,[SS_LN_TOP]
	mov rsi,[rax]
	mov QWORD [SS_LN_TOP],rsi 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov rdi,rax
	mov rax,[SS_LN_TOP]
	mov rsi,[rax]
	mov QWORD [SS_LN_TOP],rsi 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	lea rsp,[rsp+8*1]
	jmp LB_4454
LB_4454:
	movzx rax,BYTE [r8+6]
	cmp rax,0
	jnz LB_4437
	pop r14
	pop r9
	add rsp,8
	pop r13
	ret
LB_4437:
	mov QWORD [rsp+8*0],r14
	mov r13,QWORD [rsp+16+8*0]
	mov r14,QWORD [rsp+8*0]
	jmp LB_4458
LB_4458
;; rsp=0 , %2449~1'(= r ) %2448~0'(= r ) 
; #23 { } ⊢ 1(<2)◂{ }
;; rsp=0 , %2450~1(<2)◂{ } %2449~1'(= r ) %2448~0'(= r ) 
; #22 1(<2)◂{ } ⊢ 0(<2)◂1(<2)◂{ }
;; rsp=0 , %2451~0(<2)◂1(<2)◂{ } %2449~1'(= r ) %2448~0'(= r ) 
; ∎ 0(<2)◂1(<2)◂{ }
; .dlt.ptn 1'(= r )
; .dlt.ptn 0'(= r )
; .mov_ptn2 0(<2)◂1(<2)◂{ } ⊢ 2'(= a3◂ [ a3◂ [ a23◂ [ ]]] )
; .mov_ptn 0(<2)◂1(<2)◂{ } ⊢ 2'(= a3◂ [ a3◂ [ a23◂ [ ]]] )
	mov rax,unt 
	mov rax,unt_1
	mov rdi,rax
	mov rax,[SS_LN_TOP]
	mov rsi,[rax]
	mov QWORD [SS_LN_TOP],rsi 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	jmp LB_4457
LB_4457:
	movzx rax,BYTE [r8+6]
	cmp rax,0
	jnz LB_4456
	pop r14
	pop r9
	add rsp,8
	pop r13
	ret
LB_4456:
	pop rdi
	pop r9 
	pop r14
	pop r13
	ret
ETR_258:
	mov r9,0x0000_ffff_ffff_ffff
	and r9,[r13]
	call GRM_258
	ret
GRM_258:
	sub rsp,32
	mov QWORD [rsp+24],r13
	mov QWORD [rsp+16],r14 
	mov QWORD [rsp+8],r9
	jmp LB_4461
LB_4460:
	add r14,1 
LB_4461:
	cmp r14,r9
	jge LB_4462
	movzx rax,BYTE [r13+8+r14]
	cmp rax,9 
	jz LB_4460
	cmp rax,32 
	jz LB_4460
LB_4462
	lea rax,[r14+1]
	cmp rax,r9
	jg LB_4465
	jmp LB_4466
LB_4465:
	mov r8,unt_1
	jmp LB_4463
LB_4466:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],61
	jnz LB_4467
	jmp LB_4468
LB_4467:
	mov r8,unt_1
	jmp LB_4463
LB_4468:
	add r14,1
	jmp LB_4464
LB_4463:
	lea rsp,[rsp+8*0]
	jmp LB_4459
LB_4464:
	jmp LB_4470
LB_4469:
	add r14,1 
LB_4470:
	cmp r14,r9
	jge LB_4471
	movzx rax,BYTE [r13+8+r14]
	cmp rax,9 
	jz LB_4469
	cmp rax,32 
	jz LB_4469
LB_4471
	call GRM_190
	movzx rax,BYTE [r8+6]
	cmp rax,0
	jnz LB_4474
	jmp LB_4475
LB_4474:
	jmp LB_4472
LB_4475:
	lea rsp,[rsp-8*1]
	mov r8,[r8+8]
; .mov_ptn2 2'(= a11◂ [ a9◂ [ ]] ) ⊢ 8'(= a11◂ [ a9◂ [ ]] )
; .mov_ptn 2'(= a11◂ [ a9◂ [ ]] ) ⊢ 8'(= a11◂ [ a9◂ [ ]] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_4473
LB_4472:
	lea rsp,[rsp+8*0]
	pop rdi
	pop r9 
	pop r14
	pop r13
	ret
LB_4473:
	jmp LB_4477
LB_4476:
	add r14,1 
LB_4477:
	cmp r14,r9
	jge LB_4478
	movzx rax,BYTE [r13+8+r14]
	cmp rax,9 
	jz LB_4476
	cmp rax,32 
	jz LB_4476
LB_4478
	lea rax,[r14+1]
	cmp rax,r9
	jg LB_4481
	jmp LB_4482
LB_4481:
	mov r8,unt_1
	jmp LB_4479
LB_4482:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],10
	jnz LB_4483
	jmp LB_4484
LB_4483:
	mov r8,unt_1
	jmp LB_4479
LB_4484:
	add r14,1
	jmp LB_4480
LB_4479:
	lea rsp,[rsp+8*1]
	pop rdi
	pop r9 
	pop r14
	pop r13
	ret
LB_4480:
	mov QWORD [rsp+8*1],r14
	mov r13,QWORD [rsp+16+8*1]
	mov r14,QWORD [rsp+8*1]
	jmp LB_4486
LB_4486
;; rsp=1 , %2454~1'(= r ) %2453~0'(= r ) %2452~8'(= a11◂ [ a9◂ [ ]] ) 
; #167 8'(= a11◂ [ a9◂ [ ]] ) ⊢ 1(<3)◂8'(= a11◂ [ a9◂ [ ]] )
;; rsp=1 , %2455~1(<3)◂8'(= a11◂ [ a9◂ [ ]] ) %2454~1'(= r ) %2453~0'(= r ) 
; #193 1(<3)◂8'(= a11◂ [ a9◂ [ ]] ) ⊢ 0(<2)◂1(<3)◂8'(= a11◂ [ a9◂ [ ]] )
;; rsp=1 , %2456~0(<2)◂1(<3)◂8'(= a11◂ [ a9◂ [ ]] ) %2454~1'(= r ) %2453~0'(= r ) 
; #22 0(<2)◂1(<3)◂8'(= a11◂ [ a9◂ [ ]] ) ⊢ 0(<2)◂0(<2)◂1(<3)◂8'(= a11◂ [ a9◂ [ ]] )
;; rsp=1 , %2457~0(<2)◂0(<2)◂1(<3)◂8'(= a11◂ [ a9◂ [ ]] ) %2454~1'(= r ) %2453~0'(= r ) 
; ∎ 0(<2)◂0(<2)◂1(<3)◂8'(= a11◂ [ a9◂ [ ]] )
; .dlt.ptn 1'(= r )
; .dlt.ptn 0'(= r )
; .mov_ptn2 0(<2)◂0(<2)◂1(<3)◂8'(= a11◂ [ a9◂ [ ]] ) ⊢ 2'(= a3◂ [ a35◂ [ a33◂ [ ]]] )
; .mov_ptn 0(<2)◂0(<2)◂1(<3)◂8'(= a11◂ [ a9◂ [ ]] ) ⊢ 2'(= a3◂ [ a35◂ [ a33◂ [ ]]] )
	mov rax,QWORD [rsp-8+8*1]
	mov rdi,rax
	mov rax,[SS_LN_TOP]
	mov rsi,[rax]
	mov QWORD [SS_LN_TOP],rsi 
	mov QWORD [rax],0
	mov BYTE [rax+6],1
	mov QWORD [rax+8],rdi
	mov rdi,rax
	mov rax,[SS_LN_TOP]
	mov rsi,[rax]
	mov QWORD [SS_LN_TOP],rsi 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov rdi,rax
	mov rax,[SS_LN_TOP]
	mov rsi,[rax]
	mov QWORD [SS_LN_TOP],rsi 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	lea rsp,[rsp+8*1]
	jmp LB_4485
LB_4485:
	movzx rax,BYTE [r8+6]
	cmp rax,0
	jnz LB_4459
	pop r14
	pop r9
	add rsp,8
	pop r13
	ret
LB_4459:
	jmp LB_4489
LB_4488:
	add r14,1 
LB_4489:
	cmp r14,r9
	jge LB_4490
	movzx rax,BYTE [r13+8+r14]
	cmp rax,9 
	jz LB_4488
	cmp rax,32 
	jz LB_4488
LB_4490
	lea rax,[r14+2]
	cmp rax,r9
	jg LB_4493
	jmp LB_4494
LB_4493:
	mov r8,unt_1
	jmp LB_4491
LB_4494:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],194
	jnz LB_4495
	cmp BYTE [rdi+1],171
	jnz LB_4495
	jmp LB_4496
LB_4495:
	mov r8,unt_1
	jmp LB_4491
LB_4496:
	add r14,2
	jmp LB_4492
LB_4491:
	lea rsp,[rsp+8*0]
	jmp LB_4487
LB_4492:
	jmp LB_4498
LB_4497:
	add r14,1 
LB_4498:
	cmp r14,r9
	jge LB_4499
	movzx rax,BYTE [r13+8+r14]
	cmp rax,9 
	jz LB_4497
	cmp rax,32 
	jz LB_4497
LB_4499
	lea rax,[r14+1]
	cmp rax,r9
	jg LB_4502
	jmp LB_4503
LB_4502:
	mov r8,unt_1
	jmp LB_4500
LB_4503:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],10
	jnz LB_4504
	jmp LB_4505
LB_4504:
	mov r8,unt_1
	jmp LB_4500
LB_4505:
	add r14,1
	jmp LB_4501
LB_4500:
	lea rsp,[rsp+8*0]
	pop rdi
	pop r9 
	pop r14
	pop r13
	ret
LB_4501:
	jmp LB_4507
LB_4506:
	add r14,1 
LB_4507:
	cmp r14,r9
	jge LB_4508
	movzx rax,BYTE [r13+8+r14]
	cmp rax,9 
	jz LB_4506
	cmp rax,32 
	jz LB_4506
LB_4508
	call GRM_234
	movzx rax,BYTE [r8+6]
	cmp rax,0
	jnz LB_4511
	jmp LB_4512
LB_4511:
	jmp LB_4509
LB_4512:
	lea rsp,[rsp-8*1]
	mov r8,[r8+8]
; .mov_ptn2 2'(= a35◂ [ a17◂ [ a9◂ [ ]{| l |}]] ) ⊢ 8'(= a35◂ [ a17◂ [ a9◂ [ ]{| l |}]] )
; .mov_ptn 2'(= a35◂ [ a17◂ [ a9◂ [ ]{| l |}]] ) ⊢ 8'(= a35◂ [ a17◂ [ a9◂ [ ]{| l |}]] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_4510
LB_4509:
	lea rsp,[rsp+8*0]
	pop rdi
	pop r9 
	pop r14
	pop r13
	ret
LB_4510:
	mov QWORD [rsp+8*1],r14
	mov r13,QWORD [rsp+16+8*1]
	mov r14,QWORD [rsp+8*1]
	jmp LB_4514
LB_4514
;; rsp=1 , %2460~1'(= r ) %2459~0'(= r ) %2458~8'(= a35◂ [ a17◂ [ a9◂ [ ]{| l |}]] ) 
;; ? 8'(= a35◂ [ a17◂ [ a9◂ [ ]{| l |}]] ) ⊢ 0(<2)◂2'(= a17◂ [ a9◂ [ ]{| l |}] )
	mov rdi,QWORD [rsp-8+8*1]
	movzx rax,BYTE [rdi+6]
	cmp rax,0
	jnz LB_4515
	mov rax,QWORD [rdi+8]
	mov r8,rax
;; rsp=1 , %2462~2'(= a17◂ [ a9◂ [ ]{| l |}] ) %2460~1'(= r ) %2459~0'(= r ) 
; #166 2'(= a17◂ [ a9◂ [ ]{| l |}] ) ⊢ 2(<3)◂2'(= a17◂ [ a9◂ [ ]{| l |}] )
;; rsp=1 , %2463~2(<3)◂2'(= a17◂ [ a9◂ [ ]{| l |}] ) %2460~1'(= r ) %2459~0'(= r ) 
; #193 2(<3)◂2'(= a17◂ [ a9◂ [ ]{| l |}] ) ⊢ 0(<2)◂2(<3)◂2'(= a17◂ [ a9◂ [ ]{| l |}] )
;; rsp=1 , %2464~0(<2)◂2(<3)◂2'(= a17◂ [ a9◂ [ ]{| l |}] ) %2460~1'(= r ) %2459~0'(= r ) 
; #22 0(<2)◂2(<3)◂2'(= a17◂ [ a9◂ [ ]{| l |}] ) ⊢ 0(<2)◂0(<2)◂2(<3)◂2'(= a17◂ [ a9◂ [ ]{| l |}] )
;; rsp=1 , %2465~0(<2)◂0(<2)◂2(<3)◂2'(= a17◂ [ a9◂ [ ]{| l |}] ) %2460~1'(= r ) %2459~0'(= r ) 
; ∎ 0(<2)◂0(<2)◂2(<3)◂2'(= a17◂ [ a9◂ [ ]{| l |}] )
; .dlt.ptn 1'(= r )
; .dlt.ptn 0'(= r )
; .mov_ptn2 0(<2)◂0(<2)◂2(<3)◂2'(= a17◂ [ a9◂ [ ]{| l |}] ) ⊢ 2'(= a3◂ [ a35◂ [ a33◂ [ ]]] )
	mov r13,r8
; .mov_ptn 0(<2)◂0(<2)◂2(<3)◂0'(= a17◂ [ a9◂ [ ]{| l |}] ) ⊢ 2'(= a3◂ [ a35◂ [ a33◂ [ ]]] )
	mov rax,r13
	mov rdi,rax
	mov rax,[SS_LN_TOP]
	mov rsi,[rax]
	mov QWORD [SS_LN_TOP],rsi 
	mov QWORD [rax],0
	mov BYTE [rax+6],2
	mov QWORD [rax+8],rdi
	mov rdi,rax
	mov rax,[SS_LN_TOP]
	mov rsi,[rax]
	mov QWORD [SS_LN_TOP],rsi 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov rdi,rax
	mov rax,[SS_LN_TOP]
	mov rsi,[rax]
	mov QWORD [SS_LN_TOP],rsi 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	lea rsp,[rsp+8*1]
	jmp LB_4513
LB_4515:
;; ? 8'(= a35◂ [ a17◂ [ a9◂ [ ]{| l |}]] ) ⊢ 1(<2)◂8'(= a2◂ [ *{ rr{| l |}}] )
;; rsp=1 , %2461~8'(= a2◂ [ *{ rr{| l |}}] ) %2460~1'(= r ) %2459~0'(= r ) 
; #192 8'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 1(<2)◂8'(= a2◂ [ *{ rr{| l |}}] )
;; rsp=1 , %2466~1(<2)◂8'(= a2◂ [ *{ rr{| l |}}] ) %2460~1'(= r ) %2459~0'(= r ) 
; #22 1(<2)◂8'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 0(<2)◂1(<2)◂8'(= a2◂ [ *{ rr{| l |}}] )
;; rsp=1 , %2467~0(<2)◂1(<2)◂8'(= a2◂ [ *{ rr{| l |}}] ) %2460~1'(= r ) %2459~0'(= r ) 
; ∎ 0(<2)◂1(<2)◂8'(= a2◂ [ *{ rr{| l |}}] )
; .dlt.ptn 1'(= r )
; .dlt.ptn 0'(= r )
; .mov_ptn2 0(<2)◂1(<2)◂8'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 2'(= a3◂ [ a35◂ [ a33◂ [ ]]] )
; .mov_ptn 0(<2)◂1(<2)◂8'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 2'(= a3◂ [ a35◂ [ a33◂ [ ]]] )
	mov rax,QWORD [rsp-8+8*1]
	mov rdi,rax
	mov rax,[SS_LN_TOP]
	mov rsi,[rax]
	mov QWORD [SS_LN_TOP],rsi 
	mov QWORD [rax],0
	mov BYTE [rax+6],1
	mov QWORD [rax+8],rdi
	mov rdi,rax
	mov rax,[SS_LN_TOP]
	mov rsi,[rax]
	mov QWORD [SS_LN_TOP],rsi 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	lea rsp,[rsp+8*1]
	jmp LB_4513
LB_4513:
	movzx rax,BYTE [r8+6]
	cmp rax,0
	jnz LB_4487
	pop r14
	pop r9
	add rsp,8
	pop r13
	ret
LB_4487:
	jmp LB_4518
LB_4517:
	add r14,1 
LB_4518:
	cmp r14,r9
	jge LB_4519
	movzx rax,BYTE [r13+8+r14]
	cmp rax,9 
	jz LB_4517
	cmp rax,32 
	jz LB_4517
LB_4519
	call GRM_205
	movzx rax,BYTE [r8+6]
	cmp rax,0
	jnz LB_4522
	jmp LB_4523
LB_4522:
	jmp LB_4520
LB_4523:
	lea rsp,[rsp-8*1]
	mov r8,[r8+8]
; .mov_ptn2 2'(= a8◂ [ a13◂ [ {| l |}]] ) ⊢ 8'(= a8◂ [ a13◂ [ {| l |}]] )
; .mov_ptn 2'(= a8◂ [ a13◂ [ {| l |}]] ) ⊢ 8'(= a8◂ [ a13◂ [ {| l |}]] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_4521
LB_4520:
	lea rsp,[rsp+8*0]
	jmp LB_4516
LB_4521:
	jmp LB_4525
LB_4524:
	add r14,1 
LB_4525:
	cmp r14,r9
	jge LB_4526
	movzx rax,BYTE [r13+8+r14]
	cmp rax,9 
	jz LB_4524
	cmp rax,32 
	jz LB_4524
LB_4526
	call GRM_257
	movzx rax,BYTE [r8+6]
	cmp rax,0
	jnz LB_4529
	jmp LB_4530
LB_4529:
	jmp LB_4527
LB_4530:
	lea rsp,[rsp-8*1]
	mov r8,[r8+8]
; .mov_ptn2 2'(= a3◂ [ a23◂ [ ]] ) ⊢ 9'(= a3◂ [ a23◂ [ ]] )
; .mov_ptn 2'(= a3◂ [ a23◂ [ ]] ) ⊢ 9'(= a3◂ [ a23◂ [ ]] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_4528
LB_4527:
	lea rsp,[rsp+8*1]
	jmp LB_4516
LB_4528:
	jmp LB_4532
LB_4531:
	add r14,1 
LB_4532:
	cmp r14,r9
	jge LB_4533
	movzx rax,BYTE [r13+8+r14]
	cmp rax,9 
	jz LB_4531
	cmp rax,32 
	jz LB_4531
LB_4533
	lea rax,[r14+1]
	cmp rax,r9
	jg LB_4536
	jmp LB_4537
LB_4536:
	mov r8,unt_1
	jmp LB_4534
LB_4537:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],10
	jnz LB_4538
	jmp LB_4539
LB_4538:
	mov r8,unt_1
	jmp LB_4534
LB_4539:
	add r14,1
	jmp LB_4535
LB_4534:
	lea rsp,[rsp+8*2]
	jmp LB_4516
LB_4535:
	jmp LB_4541
LB_4540:
	add r14,1 
LB_4541:
	cmp r14,r9
	jge LB_4542
	movzx rax,BYTE [r13+8+r14]
	cmp rax,9 
	jz LB_4540
	cmp rax,32 
	jz LB_4540
LB_4542
	call GRM_234
	movzx rax,BYTE [r8+6]
	cmp rax,0
	jnz LB_4545
	jmp LB_4546
LB_4545:
	jmp LB_4543
LB_4546:
	lea rsp,[rsp-8*1]
	mov r8,[r8+8]
; .mov_ptn2 2'(= a35◂ [ a17◂ [ a9◂ [ ]{| l |}]] ) ⊢ 10'(= a35◂ [ a17◂ [ a9◂ [ ]{| l |}]] )
; .mov_ptn 2'(= a35◂ [ a17◂ [ a9◂ [ ]{| l |}]] ) ⊢ 10'(= a35◂ [ a17◂ [ a9◂ [ ]{| l |}]] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_4544
LB_4543:
	lea rsp,[rsp+8*2]
	jmp LB_4516
LB_4544:
	mov QWORD [rsp+8*3],r14
	mov r13,QWORD [rsp+16+8*3]
	mov r14,QWORD [rsp+8*3]
	jmp LB_4548
LB_4548
;; rsp=3 , %2472~1'(= r ) %2471~0'(= r ) %2470~10'(= a35◂ [ a17◂ [ a9◂ [ ]{| l |}]] ) %2469~9'(= a3◂ [ a23◂ [ ]] ) %2468~8'(= a8◂ [ a13◂ [ {| l |}]] ) 
;; ? 10'(= a35◂ [ a17◂ [ a9◂ [ ]{| l |}]] ) ⊢ 0(<2)◂2'(= a17◂ [ a9◂ [ ]{| l |}] )
	mov rdi,QWORD [rsp-8+8*1]
	movzx rax,BYTE [rdi+6]
	cmp rax,0
	jnz LB_4549
	mov rax,QWORD [rdi+8]
	mov r8,rax
;; rsp=3 , %2474~2'(= a17◂ [ a9◂ [ ]{| l |}] ) %2472~1'(= r ) %2471~0'(= r ) %2469~9'(= a3◂ [ a23◂ [ ]] ) %2468~8'(= a8◂ [ a13◂ [ {| l |}]] ) 
; #168 { 8'(= a8◂ [ a13◂ [ {| l |}]] ) 9'(= a3◂ [ a23◂ [ ]] ) 2'(= a17◂ [ a9◂ [ ]{| l |}] ) } ⊢ 0(<3)◂{ 8'(= a8◂ [ a13◂ [ {| l |}]] ) 9'(= a3◂ [ a23◂ [ ]] ) 2'(= a17◂ [ a9◂ [ ]{| l |}] ) }
;; rsp=3 , %2475~0(<3)◂{ 8'(= a8◂ [ a13◂ [ {| l |}]] ) 9'(= a3◂ [ a23◂ [ ]] ) 2'(= a17◂ [ a9◂ [ ]{| l |}] ) } %2472~1'(= r ) %2471~0'(= r ) 
; #193 0(<3)◂{ 8'(= a8◂ [ a13◂ [ {| l |}]] ) 9'(= a3◂ [ a23◂ [ ]] ) 2'(= a17◂ [ a9◂ [ ]{| l |}] ) } ⊢ 0(<2)◂0(<3)◂{ 8'(= a8◂ [ a13◂ [ {| l |}]] ) 9'(= a3◂ [ a23◂ [ ]] ) 2'(= a17◂ [ a9◂ [ ]{| l |}] ) }
;; rsp=3 , %2476~0(<2)◂0(<3)◂{ 8'(= a8◂ [ a13◂ [ {| l |}]] ) 9'(= a3◂ [ a23◂ [ ]] ) 2'(= a17◂ [ a9◂ [ ]{| l |}] ) } %2472~1'(= r ) %2471~0'(= r ) 
; #22 0(<2)◂0(<3)◂{ 8'(= a8◂ [ a13◂ [ {| l |}]] ) 9'(= a3◂ [ a23◂ [ ]] ) 2'(= a17◂ [ a9◂ [ ]{| l |}] ) } ⊢ 0(<2)◂0(<2)◂0(<3)◂{ 8'(= a8◂ [ a13◂ [ {| l |}]] ) 9'(= a3◂ [ a23◂ [ ]] ) 2'(= a17◂ [ a9◂ [ ]{| l |}] ) }
;; rsp=3 , %2477~0(<2)◂0(<2)◂0(<3)◂{ 8'(= a8◂ [ a13◂ [ {| l |}]] ) 9'(= a3◂ [ a23◂ [ ]] ) 2'(= a17◂ [ a9◂ [ ]{| l |}] ) } %2472~1'(= r ) %2471~0'(= r ) 
; ∎ 0(<2)◂0(<2)◂0(<3)◂{ 8'(= a8◂ [ a13◂ [ {| l |}]] ) 9'(= a3◂ [ a23◂ [ ]] ) 2'(= a17◂ [ a9◂ [ ]{| l |}] ) }
; .dlt.ptn 1'(= r )
; .dlt.ptn 0'(= r )
; .mov_ptn2 0(<2)◂0(<2)◂0(<3)◂{ 8'(= a8◂ [ a13◂ [ {| l |}]] ) 9'(= a3◂ [ a23◂ [ ]] ) 2'(= a17◂ [ a9◂ [ ]{| l |}] ) } ⊢ 2'(= a3◂ [ a35◂ [ a33◂ [ ]]] )
	mov r13,r8
; .mov_ptn 0(<2)◂0(<2)◂0(<3)◂{ 8'(= a8◂ [ a13◂ [ {| l |}]] ) 9'(= a3◂ [ a23◂ [ ]] ) 0'(= a17◂ [ a9◂ [ ]{| l |}] ) } ⊢ 2'(= a3◂ [ a35◂ [ a33◂ [ ]]] )
	mov rax,[SS_RCD_3_TOP]
	mov rsi,[rax] 
	mov QWORD [SS_RCD_3_TOP],rsi
	mov QWORD [rax],0
	mov r14,rax
	mov rax,QWORD [rsp-8+8*3]
	mov rdi,r14
	mov QWORD [rdi+8+8*0],rax
	mov rax,QWORD [rsp-8+8*2]
	mov rdi,r14
	mov QWORD [rdi+8+8*1],rax
	mov rax,r13
	mov rdi,r14
	mov QWORD [rdi+8+8*2],rax
	mov rax,r14
	mov BYTE [rax+6],0
	mov rdi,rax
	mov rax,[SS_LN_TOP]
	mov rsi,[rax]
	mov QWORD [SS_LN_TOP],rsi 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov rdi,rax
	mov rax,[SS_LN_TOP]
	mov rsi,[rax]
	mov QWORD [SS_LN_TOP],rsi 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	lea rsp,[rsp+8*3]
	jmp LB_4547
LB_4549:
;; ? 10'(= a35◂ [ a17◂ [ a9◂ [ ]{| l |}]] ) ⊢ 1(<2)◂10'(= a2◂ [ *{ rr{| l |}}] )
;; rsp=3 , %2473~10'(= a2◂ [ *{ rr{| l |}}] ) %2472~1'(= r ) %2471~0'(= r ) %2469~9'(= a3◂ [ a23◂ [ ]] ) %2468~8'(= a8◂ [ a13◂ [ {| l |}]] ) 
; #192 10'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 1(<2)◂10'(= a2◂ [ *{ rr{| l |}}] )
;; rsp=3 , %2478~1(<2)◂10'(= a2◂ [ *{ rr{| l |}}] ) %2472~1'(= r ) %2471~0'(= r ) %2469~9'(= a3◂ [ a23◂ [ ]] ) %2468~8'(= a8◂ [ a13◂ [ {| l |}]] ) 
; #22 1(<2)◂10'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 0(<2)◂1(<2)◂10'(= a2◂ [ *{ rr{| l |}}] )
;; rsp=3 , %2479~0(<2)◂1(<2)◂10'(= a2◂ [ *{ rr{| l |}}] ) %2472~1'(= r ) %2471~0'(= r ) %2469~9'(= a3◂ [ a23◂ [ ]] ) %2468~8'(= a8◂ [ a13◂ [ {| l |}]] ) 
; ∎ 0(<2)◂1(<2)◂10'(= a2◂ [ *{ rr{| l |}}] )
; .dlt.ptn 1'(= r )
; .dlt.ptn 0'(= r )
; .dlt.ptn 9'(= a3◂ [ a23◂ [ ]] )
;	.dlt adt ⊢ _  
; .dlt.ptn 8'(= a8◂ [ a13◂ [ {| l |}]] )
;	.dlt adt ⊢ _  
; .mov_ptn2 0(<2)◂1(<2)◂10'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 2'(= a3◂ [ a35◂ [ a33◂ [ ]]] )
; .mov_ptn 0(<2)◂1(<2)◂10'(= a2◂ [ *{ rr{| l |}}] ) ⊢ 2'(= a3◂ [ a35◂ [ a33◂ [ ]]] )
	mov rax,QWORD [rsp-8+8*1]
	mov rdi,rax
	mov rax,[SS_LN_TOP]
	mov rsi,[rax]
	mov QWORD [SS_LN_TOP],rsi 
	mov QWORD [rax],0
	mov BYTE [rax+6],1
	mov QWORD [rax+8],rdi
	mov rdi,rax
	mov rax,[SS_LN_TOP]
	mov rsi,[rax]
	mov QWORD [SS_LN_TOP],rsi 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	lea rsp,[rsp+8*3]
	jmp LB_4547
LB_4547:
	movzx rax,BYTE [r8+6]
	cmp rax,0
	jnz LB_4516
	pop r14
	pop r9
	add rsp,8
	pop r13
	ret
LB_4516:
	pop rdi
	pop r9 
	pop r14
	pop r13
	ret
ETR_259:
	mov r9,0x0000_ffff_ffff_ffff
	and r9,[r13]
	call GRM_259
	ret
GRM_259:
	sub rsp,32
	mov QWORD [rsp+24],r13
	mov QWORD [rsp+16],r14 
	mov QWORD [rsp+8],r9
	jmp LB_4552
LB_4551:
	add r14,1 
LB_4552:
	cmp r14,r9
	jge LB_4553
	movzx rax,BYTE [r13+8+r14]
	cmp rax,9 
	jz LB_4551
	cmp rax,10 
	jz LB_4551
	cmp rax,32 
	jz LB_4551
LB_4553
	lea rax,[r14+1]
	cmp rax,r9
	jg LB_4556
	jmp LB_4557
LB_4556:
	mov r8,unt_1
	jmp LB_4554
LB_4557:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],64
	jnz LB_4558
	jmp LB_4559
LB_4558:
	mov r8,unt_1
	jmp LB_4554
LB_4559:
	add r14,1
	jmp LB_4555
LB_4554:
	lea rsp,[rsp+8*0]
	jmp LB_4550
LB_4555:
	jmp LB_4561
LB_4560:
	add r14,1 
LB_4561:
	cmp r14,r9
	jge LB_4562
	movzx rax,BYTE [r13+8+r14]
	cmp rax,9 
	jz LB_4560
	cmp rax,10 
	jz LB_4560
	cmp rax,32 
	jz LB_4560
LB_4562
	lea rax,[r14+1]
	cmp rax,r9
	jg LB_4565
	jmp LB_4566
LB_4565:
	mov r8,unt_1
	jmp LB_4563
LB_4566:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],46
	jnz LB_4567
	jmp LB_4568
LB_4567:
	mov r8,unt_1
	jmp LB_4563
LB_4568:
	add r14,1
	jmp LB_4564
LB_4563:
	lea rsp,[rsp+8*0]
	jmp LB_4550
LB_4564:
	jmp LB_4570
LB_4569:
	add r14,1 
LB_4570:
	cmp r14,r9
	jge LB_4571
	movzx rax,BYTE [r13+8+r14]
	cmp rax,9 
	jz LB_4569
	cmp rax,10 
	jz LB_4569
	cmp rax,32 
	jz LB_4569
LB_4571
	call GRM_74
	movzx rax,BYTE [r8+6]
	cmp rax,0
	jnz LB_4574
	jmp LB_4575
LB_4574:
	jmp LB_4572
LB_4575:
	lea rsp,[rsp-8*1]
; .mov_ptn2 2'(= {| l |} ) ⊢ 8'(= {| l |} )
; .mov_ptn 2'(= {| l |} ) ⊢ 8'(= {| l |} )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_4573
LB_4572:
	lea rsp,[rsp+8*0]
	jmp LB_4550
LB_4573:
	jmp LB_4577
LB_4576:
	add r14,1 
LB_4577:
	cmp r14,r9
	jge LB_4578
	movzx rax,BYTE [r13+8+r14]
	cmp rax,9 
	jz LB_4576
	cmp rax,10 
	jz LB_4576
	cmp rax,32 
	jz LB_4576
LB_4578
	call GRM_261
	movzx rax,BYTE [r8+6]
	cmp rax,0
	jnz LB_4581
	jmp LB_4582
LB_4581:
	jmp LB_4579
LB_4582:
	lea rsp,[rsp-8*1]
	mov r8,[r8+8]
; .mov_ptn2 2'(= a24◂ [ a9◂ [ ]{| l |}] ) ⊢ 9'(= a24◂ [ a9◂ [ ]{| l |}] )
; .mov_ptn 2'(= a24◂ [ a9◂ [ ]{| l |}] ) ⊢ 9'(= a24◂ [ a9◂ [ ]{| l |}] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_4580
LB_4579:
	lea rsp,[rsp+8*1]
	jmp LB_4550
LB_4580:
	mov QWORD [rsp+8*2],r14
	mov r13,QWORD [rsp+16+8*2]
	mov r14,QWORD [rsp+8*2]
	jmp LB_4584
LB_4584
;; rsp=2 , %2483~1'(= r ) %2482~0'(= r ) %2481~9'(= a24◂ [ a9◂ [ ]{| l |}] ) %2480~8'(= {| l |} ) 
; #22 { 8'(= {| l |} ) 9'(= a24◂ [ a9◂ [ ]{| l |}] ) } ⊢ 0(<2)◂{ 8'(= {| l |} ) 9'(= a24◂ [ a9◂ [ ]{| l |}] ) }
;; rsp=2 , %2484~0(<2)◂{ 8'(= {| l |} ) 9'(= a24◂ [ a9◂ [ ]{| l |}] ) } %2483~1'(= r ) %2482~0'(= r ) 
; ∎ 0(<2)◂{ 8'(= {| l |} ) 9'(= a24◂ [ a9◂ [ ]{| l |}] ) }
; .dlt.ptn 1'(= r )
; .dlt.ptn 0'(= r )
; .mov_ptn2 0(<2)◂{ 8'(= {| l |} ) 9'(= a24◂ [ a9◂ [ ]{| l |}] ) } ⊢ 2'(= a3◂ [ *{ {| l |}a24◂ [ a9◂ [ ]{| l |}]}] )
; .mov_ptn 0(<2)◂{ 8'(= {| l |} ) 9'(= a24◂ [ a9◂ [ ]{| l |}] ) } ⊢ 2'(= a3◂ [ *{ {| l |}a24◂ [ a9◂ [ ]{| l |}]}] )
	mov rax,[SS_RCD_2_TOP]
	mov rsi,[rax] 
	mov QWORD [SS_RCD_2_TOP],rsi
	mov QWORD [rax],0
	mov r13,rax
	mov rax,QWORD [rsp-8+8*2]
	mov rdi,r13
	mov QWORD [rdi+8+8*0],rax
	mov rax,QWORD [rsp-8+8*1]
	mov rdi,r13
	mov QWORD [rdi+8+8*1],rax
	mov rax,r13
	mov BYTE [rax+6],0
	mov r8,rax
	lea rsp,[rsp+8*2]
	jmp LB_4583
LB_4583:
	movzx rax,BYTE [r8+6]
	cmp rax,0
	jnz LB_4550
	pop r14
	pop r9
	add rsp,8
	pop r13
	ret
LB_4550:
	pop rdi
	pop r9 
	pop r14
	pop r13
	ret
ETR_260:
	mov r9,0x0000_ffff_ffff_ffff
	and r9,[r13]
	call GRM_260
	ret
GRM_260:
	sub rsp,32
	mov QWORD [rsp+24],r13
	mov QWORD [rsp+16],r14 
	mov QWORD [rsp+8],r9
	jmp LB_4587
LB_4586:
	add r14,1 
LB_4587:
	cmp r14,r9
	jge LB_4588
	movzx rax,BYTE [r13+8+r14]
	cmp rax,9 
	jz LB_4586
	cmp rax,10 
	jz LB_4586
	cmp rax,32 
	jz LB_4586
LB_4588
	call GRM_259
	movzx rax,BYTE [r8+6]
	cmp rax,0
	jnz LB_4591
	jmp LB_4592
LB_4591:
	jmp LB_4589
LB_4592:
	lea rsp,[rsp-8*2]
; .mov_ptn2 2'(= *{ {| l |}a24◂ [ a9◂ [ ]{| l |}]} ) ⊢ { 8'(= {| l |} ) 9'(= a24◂ [ a9◂ [ ]{| l |}] ) }
; .mov_ptn 2'(= *{ {| l |}a24◂ [ a9◂ [ ]{| l |}]} ) ⊢ { 8'(= {| l |} ) 9'(= a24◂ [ a9◂ [ ]{| l |}] ) }
	mov rdi,r8
	mov rdi,QWORD [rdi+8+8*0]
	mov r10,rdi
	mov QWORD [rsp-8+8*2],r10
	mov rdi,r8
	mov rdi,QWORD [rdi+8+8*1]
	mov r11,rdi
	mov QWORD [rsp-8+8*1],r11
	jmp LB_4590
LB_4589:
	lea rsp,[rsp+8*0]
	jmp LB_4585
LB_4590:
	jmp LB_4594
LB_4593:
	add r14,1 
LB_4594:
	cmp r14,r9
	jge LB_4595
	movzx rax,BYTE [r13+8+r14]
	cmp rax,9 
	jz LB_4593
	cmp rax,10 
	jz LB_4593
	cmp rax,32 
	jz LB_4593
LB_4595
	call GRM_260
	movzx rax,BYTE [r8+6]
	cmp rax,0
	jnz LB_4598
	jmp LB_4599
LB_4598:
	jmp LB_4596
LB_4599:
	lea rsp,[rsp-8*1]
	mov r8,[r8+8]
; .mov_ptn2 2'(= a2◂ [ *{ {| l |}a24◂ [ a9◂ [ ]{| l |}]}] ) ⊢ 10'(= a2◂ [ *{ {| l |}a24◂ [ a9◂ [ ]{| l |}]}] )
; .mov_ptn 2'(= a2◂ [ *{ {| l |}a24◂ [ a9◂ [ ]{| l |}]}] ) ⊢ 10'(= a2◂ [ *{ {| l |}a24◂ [ a9◂ [ ]{| l |}]}] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_4597
LB_4596:
	lea rsp,[rsp+8*2]
	jmp LB_4585
LB_4597:
	mov QWORD [rsp+8*3],r14
	mov r13,QWORD [rsp+16+8*3]
	mov r14,QWORD [rsp+8*3]
	jmp LB_4601
LB_4601
;; rsp=3 , %2488~1'(= r ) %2487~0'(= r ) %2486~10'(= a2◂ [ *{ {| l |}a24◂ [ a9◂ [ ]{| l |}]}] ) %2485~{ 8'(= {| l |} ) 9'(= a24◂ [ a9◂ [ ]{| l |}] ) } 
; #21 { { 8'(= {| l |} ) 9'(= a24◂ [ a9◂ [ ]{| l |}] ) } 10'(= a2◂ [ *{ {| l |}a24◂ [ a9◂ [ ]{| l |}]}] ) } ⊢ 0(<2)◂{ { 8'(= {| l |} ) 9'(= a24◂ [ a9◂ [ ]{| l |}] ) } 10'(= a2◂ [ *{ {| l |}a24◂ [ a9◂ [ ]{| l |}]}] ) }
;; rsp=3 , %2489~0(<2)◂{ { 8'(= {| l |} ) 9'(= a24◂ [ a9◂ [ ]{| l |}] ) } 10'(= a2◂ [ *{ {| l |}a24◂ [ a9◂ [ ]{| l |}]}] ) } %2488~1'(= r ) %2487~0'(= r ) 
; #22 0(<2)◂{ { 8'(= {| l |} ) 9'(= a24◂ [ a9◂ [ ]{| l |}] ) } 10'(= a2◂ [ *{ {| l |}a24◂ [ a9◂ [ ]{| l |}]}] ) } ⊢ 0(<2)◂0(<2)◂{ { 8'(= {| l |} ) 9'(= a24◂ [ a9◂ [ ]{| l |}] ) } 10'(= a2◂ [ *{ {| l |}a24◂ [ a9◂ [ ]{| l |}]}] ) }
;; rsp=3 , %2490~0(<2)◂0(<2)◂{ { 8'(= {| l |} ) 9'(= a24◂ [ a9◂ [ ]{| l |}] ) } 10'(= a2◂ [ *{ {| l |}a24◂ [ a9◂ [ ]{| l |}]}] ) } %2488~1'(= r ) %2487~0'(= r ) 
; ∎ 0(<2)◂0(<2)◂{ { 8'(= {| l |} ) 9'(= a24◂ [ a9◂ [ ]{| l |}] ) } 10'(= a2◂ [ *{ {| l |}a24◂ [ a9◂ [ ]{| l |}]}] ) }
; .dlt.ptn 1'(= r )
; .dlt.ptn 0'(= r )
; .mov_ptn2 0(<2)◂0(<2)◂{ { 8'(= {| l |} ) 9'(= a24◂ [ a9◂ [ ]{| l |}] ) } 10'(= a2◂ [ *{ {| l |}a24◂ [ a9◂ [ ]{| l |}]}] ) } ⊢ 2'(= a3◂ [ a2◂ [ *{ {| l |}a24◂ [ a9◂ [ ]{| l |}]}]] )
; .mov_ptn 0(<2)◂0(<2)◂{ { 8'(= {| l |} ) 9'(= a24◂ [ a9◂ [ ]{| l |}] ) } 10'(= a2◂ [ *{ {| l |}a24◂ [ a9◂ [ ]{| l |}]}] ) } ⊢ 2'(= a3◂ [ a2◂ [ *{ {| l |}a24◂ [ a9◂ [ ]{| l |}]}]] )
	mov rax,[SS_RCD_2_TOP]
	mov rsi,[rax] 
	mov QWORD [SS_RCD_2_TOP],rsi
	mov QWORD [rax],0
	mov r13,rax
	mov rax,[SS_RCD_2_TOP]
	mov rsi,[rax] 
	mov QWORD [SS_RCD_2_TOP],rsi
	mov QWORD [rax],0
	mov r14,rax
	mov rax,QWORD [rsp-8+8*3]
	mov rdi,r14
	mov QWORD [rdi+8+8*0],rax
	mov rax,QWORD [rsp-8+8*2]
	mov rdi,r14
	mov QWORD [rdi+8+8*1],rax
	mov rax,r14
	mov rdi,r13
	mov QWORD [rdi+8+8*0],rax
	mov rax,QWORD [rsp-8+8*1]
	mov rdi,r13
	mov QWORD [rdi+8+8*1],rax
	mov rax,r13
	mov BYTE [rax+6],0
	mov rdi,rax
	mov rax,[SS_LN_TOP]
	mov rsi,[rax]
	mov QWORD [SS_LN_TOP],rsi 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	lea rsp,[rsp+8*3]
	jmp LB_4600
LB_4600:
	movzx rax,BYTE [r8+6]
	cmp rax,0
	jnz LB_4585
	pop r14
	pop r9
	add rsp,8
	pop r13
	ret
LB_4585:
	mov QWORD [rsp+8*0],r14
	mov r13,QWORD [rsp+16+8*0]
	mov r14,QWORD [rsp+8*0]
	jmp LB_4604
LB_4604
;; rsp=0 , %2492~1'(= r ) %2491~0'(= r ) 
; #20 { } ⊢ 1(<2)◂{ }
;; rsp=0 , %2493~1(<2)◂{ } %2492~1'(= r ) %2491~0'(= r ) 
; #22 1(<2)◂{ } ⊢ 0(<2)◂1(<2)◂{ }
;; rsp=0 , %2494~0(<2)◂1(<2)◂{ } %2492~1'(= r ) %2491~0'(= r ) 
; ∎ 0(<2)◂1(<2)◂{ }
; .dlt.ptn 1'(= r )
; .dlt.ptn 0'(= r )
; .mov_ptn2 0(<2)◂1(<2)◂{ } ⊢ 2'(= a3◂ [ a2◂ [ *{ {| l |}a24◂ [ a9◂ [ ]{| l |}]}]] )
; .mov_ptn 0(<2)◂1(<2)◂{ } ⊢ 2'(= a3◂ [ a2◂ [ *{ {| l |}a24◂ [ a9◂ [ ]{| l |}]}]] )
	mov rax,unt 
	mov rax,unt_1
	mov rdi,rax
	mov rax,[SS_LN_TOP]
	mov rsi,[rax]
	mov QWORD [SS_LN_TOP],rsi 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	jmp LB_4603
LB_4603:
	movzx rax,BYTE [r8+6]
	cmp rax,0
	jnz LB_4602
	pop r14
	pop r9
	add rsp,8
	pop r13
	ret
LB_4602:
	pop rdi
	pop r9 
	pop r14
	pop r13
	ret
ETR_261:
	mov r9,0x0000_ffff_ffff_ffff
	and r9,[r13]
	call GRM_261
	ret
GRM_261:
	sub rsp,32
	mov QWORD [rsp+24],r13
	mov QWORD [rsp+16],r14 
	mov QWORD [rsp+8],r9
	jmp LB_4607
LB_4606:
	add r14,1 
LB_4607:
	cmp r14,r9
	jge LB_4608
	movzx rax,BYTE [r13+8+r14]
	cmp rax,9 
	jz LB_4606
	cmp rax,10 
	jz LB_4606
	cmp rax,32 
	jz LB_4606
LB_4608
	call GRM_262
	movzx rax,BYTE [r8+6]
	cmp rax,0
	jnz LB_4611
	jmp LB_4612
LB_4611:
	jmp LB_4609
LB_4612:
	lea rsp,[rsp-8*1]
	mov r8,[r8+8]
; .mov_ptn2 2'(= a26◂ [ a9◂ [ ]{| l |}] ) ⊢ 8'(= a26◂ [ a9◂ [ ]{| l |}] )
; .mov_ptn 2'(= a26◂ [ a9◂ [ ]{| l |}] ) ⊢ 8'(= a26◂ [ a9◂ [ ]{| l |}] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_4610
LB_4609:
	lea rsp,[rsp+8*0]
	jmp LB_4605
LB_4610:
	mov QWORD [rsp+8*1],r14
	mov r13,QWORD [rsp+16+8*1]
	mov r14,QWORD [rsp+8*1]
	jmp LB_4614
LB_4614
;; rsp=1 , %2497~1'(= r ) %2496~0'(= r ) %2495~8'(= a26◂ [ a9◂ [ ]{| l |}] ) 
; #155 8'(= a26◂ [ a9◂ [ ]{| l |}] ) ⊢ 1(<2)◂8'(= a26◂ [ a9◂ [ ]{| l |}] )
;; rsp=1 , %2498~1(<2)◂8'(= a26◂ [ a9◂ [ ]{| l |}] ) %2497~1'(= r ) %2496~0'(= r ) 
; #22 1(<2)◂8'(= a26◂ [ a9◂ [ ]{| l |}] ) ⊢ 0(<2)◂1(<2)◂8'(= a26◂ [ a9◂ [ ]{| l |}] )
;; rsp=1 , %2499~0(<2)◂1(<2)◂8'(= a26◂ [ a9◂ [ ]{| l |}] ) %2497~1'(= r ) %2496~0'(= r ) 
; ∎ 0(<2)◂1(<2)◂8'(= a26◂ [ a9◂ [ ]{| l |}] )
; .dlt.ptn 1'(= r )
; .dlt.ptn 0'(= r )
; .mov_ptn2 0(<2)◂1(<2)◂8'(= a26◂ [ a9◂ [ ]{| l |}] ) ⊢ 2'(= a3◂ [ a24◂ [ a9◂ [ ]{| l |}]] )
; .mov_ptn 0(<2)◂1(<2)◂8'(= a26◂ [ a9◂ [ ]{| l |}] ) ⊢ 2'(= a3◂ [ a24◂ [ a9◂ [ ]{| l |}]] )
	mov rax,QWORD [rsp-8+8*1]
	mov rdi,rax
	mov rax,[SS_LN_TOP]
	mov rsi,[rax]
	mov QWORD [SS_LN_TOP],rsi 
	mov QWORD [rax],0
	mov BYTE [rax+6],1
	mov QWORD [rax+8],rdi
	mov rdi,rax
	mov rax,[SS_LN_TOP]
	mov rsi,[rax]
	mov QWORD [SS_LN_TOP],rsi 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	lea rsp,[rsp+8*1]
	jmp LB_4613
LB_4613:
	movzx rax,BYTE [r8+6]
	cmp rax,0
	jnz LB_4605
	pop r14
	pop r9
	add rsp,8
	pop r13
	ret
LB_4605:
	jmp LB_4617
LB_4616:
	add r14,1 
LB_4617:
	cmp r14,r9
	jge LB_4618
	movzx rax,BYTE [r13+8+r14]
	cmp rax,9 
	jz LB_4616
	cmp rax,10 
	jz LB_4616
	cmp rax,32 
	jz LB_4616
LB_4618
	call GRM_270
	movzx rax,BYTE [r8+6]
	cmp rax,0
	jnz LB_4621
	jmp LB_4622
LB_4621:
	jmp LB_4619
LB_4622:
	lea rsp,[rsp-8*1]
	mov r8,[r8+8]
; .mov_ptn2 2'(= a25◂ [ a9◂ [ ]{| l |}] ) ⊢ 8'(= a25◂ [ a9◂ [ ]{| l |}] )
; .mov_ptn 2'(= a25◂ [ a9◂ [ ]{| l |}] ) ⊢ 8'(= a25◂ [ a9◂ [ ]{| l |}] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_4620
LB_4619:
	lea rsp,[rsp+8*0]
	jmp LB_4615
LB_4620:
	mov QWORD [rsp+8*1],r14
	mov r13,QWORD [rsp+16+8*1]
	mov r14,QWORD [rsp+8*1]
	jmp LB_4624
LB_4624
;; rsp=1 , %2502~1'(= r ) %2501~0'(= r ) %2500~8'(= a25◂ [ a9◂ [ ]{| l |}] ) 
; #156 8'(= a25◂ [ a9◂ [ ]{| l |}] ) ⊢ 0(<2)◂8'(= a25◂ [ a9◂ [ ]{| l |}] )
;; rsp=1 , %2503~0(<2)◂8'(= a25◂ [ a9◂ [ ]{| l |}] ) %2502~1'(= r ) %2501~0'(= r ) 
; #22 0(<2)◂8'(= a25◂ [ a9◂ [ ]{| l |}] ) ⊢ 0(<2)◂0(<2)◂8'(= a25◂ [ a9◂ [ ]{| l |}] )
;; rsp=1 , %2504~0(<2)◂0(<2)◂8'(= a25◂ [ a9◂ [ ]{| l |}] ) %2502~1'(= r ) %2501~0'(= r ) 
; ∎ 0(<2)◂0(<2)◂8'(= a25◂ [ a9◂ [ ]{| l |}] )
; .dlt.ptn 1'(= r )
; .dlt.ptn 0'(= r )
; .mov_ptn2 0(<2)◂0(<2)◂8'(= a25◂ [ a9◂ [ ]{| l |}] ) ⊢ 2'(= a3◂ [ a24◂ [ a9◂ [ ]{| l |}]] )
; .mov_ptn 0(<2)◂0(<2)◂8'(= a25◂ [ a9◂ [ ]{| l |}] ) ⊢ 2'(= a3◂ [ a24◂ [ a9◂ [ ]{| l |}]] )
	mov rax,QWORD [rsp-8+8*1]
	mov rdi,rax
	mov rax,[SS_LN_TOP]
	mov rsi,[rax]
	mov QWORD [SS_LN_TOP],rsi 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov rdi,rax
	mov rax,[SS_LN_TOP]
	mov rsi,[rax]
	mov QWORD [SS_LN_TOP],rsi 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	lea rsp,[rsp+8*1]
	jmp LB_4623
LB_4623:
	movzx rax,BYTE [r8+6]
	cmp rax,0
	jnz LB_4615
	pop r14
	pop r9
	add rsp,8
	pop r13
	ret
LB_4615:
	pop rdi
	pop r9 
	pop r14
	pop r13
	ret
ETR_262:
	mov r9,0x0000_ffff_ffff_ffff
	and r9,[r13]
	call GRM_262
	ret
GRM_262:
	sub rsp,32
	mov QWORD [rsp+24],r13
	mov QWORD [rsp+16],r14 
	mov QWORD [rsp+8],r9
	jmp LB_4627
LB_4626:
	add r14,1 
LB_4627:
	cmp r14,r9
	jge LB_4628
	movzx rax,BYTE [r13+8+r14]
	cmp rax,9 
	jz LB_4626
	cmp rax,10 
	jz LB_4626
	cmp rax,32 
	jz LB_4626
LB_4628
	call GRM_269
	movzx rax,BYTE [r8+6]
	cmp rax,0
	jnz LB_4631
	jmp LB_4632
LB_4631:
	jmp LB_4629
LB_4632:
	lea rsp,[rsp-8*1]
	mov r8,[r8+8]
; .mov_ptn2 2'(= a27◂ [ ] ) ⊢ 8'(= a27◂ [ ] )
; .mov_ptn 2'(= a27◂ [ ] ) ⊢ 8'(= a27◂ [ ] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_4630
LB_4629:
	lea rsp,[rsp+8*0]
	jmp LB_4625
LB_4630:
	jmp LB_4634
LB_4633:
	add r14,1 
LB_4634:
	cmp r14,r9
	jge LB_4635
	movzx rax,BYTE [r13+8+r14]
	cmp rax,9 
	jz LB_4633
	cmp rax,10 
	jz LB_4633
	cmp rax,32 
	jz LB_4633
LB_4635
	call GRM_264
	movzx rax,BYTE [r8+6]
	cmp rax,0
	jnz LB_4638
	jmp LB_4639
LB_4638:
	jmp LB_4636
LB_4639:
	lea rsp,[rsp-8*1]
	mov r8,[r8+8]
; .mov_ptn2 2'(= a28◂ [ a9◂ [ ]] ) ⊢ 9'(= a28◂ [ a9◂ [ ]] )
; .mov_ptn 2'(= a28◂ [ a9◂ [ ]] ) ⊢ 9'(= a28◂ [ a9◂ [ ]] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_4637
LB_4636:
	lea rsp,[rsp+8*1]
	pop rdi
	pop r9 
	pop r14
	pop r13
	ret
LB_4637:
	jmp LB_4641
LB_4640:
	add r14,1 
LB_4641:
	cmp r14,r9
	jge LB_4642
	movzx rax,BYTE [r13+8+r14]
	cmp rax,9 
	jz LB_4640
	cmp rax,10 
	jz LB_4640
	cmp rax,32 
	jz LB_4640
LB_4642
	call GRM_263
	movzx rax,BYTE [r8+6]
	cmp rax,0
	jnz LB_4645
	jmp LB_4646
LB_4645:
	jmp LB_4643
LB_4646:
	lea rsp,[rsp-8*3]
; .mov_ptn2 2'(= *{ a8◂ [ a13◂ [ {| l |}]]a17◂ [ a9◂ [ ]{| l |}]a3◂ [ *{ a8◂ [ a13◂ [ {| l |}]]a26◂ [ a9◂ [ ]{| l |}]}]} ) ⊢ { 10'(= a8◂ [ a13◂ [ {| l |}]] ) 11'(= a17◂ [ a9◂ [ ]{| l |}] ) 12'(= a3◂ [ *{ a8◂ [ a13◂ [ {| l |}]]a26◂ [ a9◂ [ ]{| l |}]}] ) }
; .mov_ptn 2'(= *{ a8◂ [ a13◂ [ {| l |}]]a17◂ [ a9◂ [ ]{| l |}]a3◂ [ *{ a8◂ [ a13◂ [ {| l |}]]a26◂ [ a9◂ [ ]{| l |}]}]} ) ⊢ { 10'(= a8◂ [ a13◂ [ {| l |}]] ) 11'(= a17◂ [ a9◂ [ ]{| l |}] ) 12'(= a3◂ [ *{ a8◂ [ a13◂ [ {| l |}]]a26◂ [ a9◂ [ ]{| l |}]}] ) }
	mov rdi,r8
	mov rdi,QWORD [rdi+8+8*0]
	mov r10,rdi
	mov QWORD [rsp-8+8*3],r10
	mov rdi,r8
	mov rdi,QWORD [rdi+8+8*1]
	mov r11,rdi
	mov QWORD [rsp-8+8*2],r11
	mov rdi,r8
	mov rdi,QWORD [rdi+8+8*2]
	mov rcx,rdi
	mov QWORD [rsp-8+8*1],rcx
	jmp LB_4644
LB_4643:
	lea rsp,[rsp+8*2]
	pop rdi
	pop r9 
	pop r14
	pop r13
	ret
LB_4644:
	mov QWORD [rsp+8*5],r14
	mov r13,QWORD [rsp+16+8*5]
	mov r14,QWORD [rsp+8*5]
	jmp LB_4648
LB_4648
;; rsp=5 , %2511~1'(= r ) %2510~0'(= r ) %2509~12'(= a3◂ [ *{ a8◂ [ a13◂ [ {| l |}]]a26◂ [ a9◂ [ ]{| l |}]}] ) %2508~11'(= a17◂ [ a9◂ [ ]{| l |}] ) %2507~10'(= a8◂ [ a13◂ [ {| l |}]] ) %2506~9'(= a28◂ [ a9◂ [ ]] ) %2505~8'(= a27◂ [ ] ) 
; rsp_d=0, #163 { } ⊢ 2'(= a2◂ [ a13◂ [ {| l |}]] )
	lea rsp,[rsp-8*2]
	mov QWORD [rsp+8*0],r13
	mov QWORD [rsp+8*1],r14
; .mov_ptn2 { } ⊢ { }
	call ETR_163

	mov r14,QWORD [rsp-8+8*2]
	mov rax,QWORD [rsp-8+8*1]
	mov r8,r13
	mov r13,rax
	lea rsp,[rsp+8*2]
;; rsp=5 , %2512~2'(= a2◂ [ a13◂ [ {| l |}]] ) %2511~1'(= r ) %2510~0'(= r ) %2509~12'(= a3◂ [ *{ a8◂ [ a13◂ [ {| l |}]]a26◂ [ a9◂ [ ]{| l |}]}] ) %2508~11'(= a17◂ [ a9◂ [ ]{| l |}] ) %2507~10'(= a8◂ [ a13◂ [ {| l |}]] ) %2506~9'(= a28◂ [ a9◂ [ ]] ) %2505~8'(= a27◂ [ ] ) 
; #151 { 2'(= a2◂ [ a13◂ [ {| l |}]] ) 10'(= a8◂ [ a13◂ [ {| l |}]] ) 11'(= a17◂ [ a9◂ [ ]{| l |}] ) 8'(= a27◂ [ ] ) 9'(= a28◂ [ a9◂ [ ]] ) 12'(= a3◂ [ *{ a8◂ [ a13◂ [ {| l |}]]a26◂ [ a9◂ [ ]{| l |}]}] ) } ⊢ 1(<2)◂{ 2'(= a2◂ [ a13◂ [ {| l |}]] ) 10'(= a8◂ [ a13◂ [ {| l |}]] ) 11'(= a17◂ [ a9◂ [ ]{| l |}] ) 8'(= a27◂ [ ] ) 9'(= a28◂ [ a9◂ [ ]] ) 12'(= a3◂ [ *{ a8◂ [ a13◂ [ {| l |}]]a26◂ [ a9◂ [ ]{| l |}]}] ) }
;; rsp=5 , %2513~1(<2)◂{ 2'(= a2◂ [ a13◂ [ {| l |}]] ) 10'(= a8◂ [ a13◂ [ {| l |}]] ) 11'(= a17◂ [ a9◂ [ ]{| l |}] ) 8'(= a27◂ [ ] ) 9'(= a28◂ [ a9◂ [ ]] ) 12'(= a3◂ [ *{ a8◂ [ a13◂ [ {| l |}]]a26◂ [ a9◂ [ ]{| l |}]}] ) } %2511~1'(= r ) %2510~0'(= r ) 
; #22 1(<2)◂{ 2'(= a2◂ [ a13◂ [ {| l |}]] ) 10'(= a8◂ [ a13◂ [ {| l |}]] ) 11'(= a17◂ [ a9◂ [ ]{| l |}] ) 8'(= a27◂ [ ] ) 9'(= a28◂ [ a9◂ [ ]] ) 12'(= a3◂ [ *{ a8◂ [ a13◂ [ {| l |}]]a26◂ [ a9◂ [ ]{| l |}]}] ) } ⊢ 0(<2)◂1(<2)◂{ 2'(= a2◂ [ a13◂ [ {| l |}]] ) 10'(= a8◂ [ a13◂ [ {| l |}]] ) 11'(= a17◂ [ a9◂ [ ]{| l |}] ) 8'(= a27◂ [ ] ) 9'(= a28◂ [ a9◂ [ ]] ) 12'(= a3◂ [ *{ a8◂ [ a13◂ [ {| l |}]]a26◂ [ a9◂ [ ]{| l |}]}] ) }
;; rsp=5 , %2514~0(<2)◂1(<2)◂{ 2'(= a2◂ [ a13◂ [ {| l |}]] ) 10'(= a8◂ [ a13◂ [ {| l |}]] ) 11'(= a17◂ [ a9◂ [ ]{| l |}] ) 8'(= a27◂ [ ] ) 9'(= a28◂ [ a9◂ [ ]] ) 12'(= a3◂ [ *{ a8◂ [ a13◂ [ {| l |}]]a26◂ [ a9◂ [ ]{| l |}]}] ) } %2511~1'(= r ) %2510~0'(= r ) 
; ∎ 0(<2)◂1(<2)◂{ 2'(= a2◂ [ a13◂ [ {| l |}]] ) 10'(= a8◂ [ a13◂ [ {| l |}]] ) 11'(= a17◂ [ a9◂ [ ]{| l |}] ) 8'(= a27◂ [ ] ) 9'(= a28◂ [ a9◂ [ ]] ) 12'(= a3◂ [ *{ a8◂ [ a13◂ [ {| l |}]]a26◂ [ a9◂ [ ]{| l |}]}] ) }
; .dlt.ptn 1'(= r )
; .dlt.ptn 0'(= r )
; .mov_ptn2 0(<2)◂1(<2)◂{ 2'(= a2◂ [ a13◂ [ {| l |}]] ) 10'(= a8◂ [ a13◂ [ {| l |}]] ) 11'(= a17◂ [ a9◂ [ ]{| l |}] ) 8'(= a27◂ [ ] ) 9'(= a28◂ [ a9◂ [ ]] ) 12'(= a3◂ [ *{ a8◂ [ a13◂ [ {| l |}]]a26◂ [ a9◂ [ ]{| l |}]}] ) } ⊢ 2'(= a3◂ [ a26◂ [ a9◂ [ ]{| l |}]] )
	mov r13,r8
; .mov_ptn 0(<2)◂1(<2)◂{ 0'(= a2◂ [ a13◂ [ {| l |}]] ) 10'(= a8◂ [ a13◂ [ {| l |}]] ) 11'(= a17◂ [ a9◂ [ ]{| l |}] ) 8'(= a27◂ [ ] ) 9'(= a28◂ [ a9◂ [ ]] ) 12'(= a3◂ [ *{ a8◂ [ a13◂ [ {| l |}]]a26◂ [ a9◂ [ ]{| l |}]}] ) } ⊢ 2'(= a3◂ [ a26◂ [ a9◂ [ ]{| l |}]] )
	mov rax,[SS_RCD_6_TOP]
	mov rsi,[rax] 
	mov QWORD [SS_RCD_6_TOP],rsi
	mov QWORD [rax],0
	mov r14,rax
	mov rax,r13
	mov rdi,r14
	mov QWORD [rdi+8+8*0],rax
	mov rax,QWORD [rsp-8+8*3]
	mov rdi,r14
	mov QWORD [rdi+8+8*1],rax
	mov rax,QWORD [rsp-8+8*2]
	mov rdi,r14
	mov QWORD [rdi+8+8*2],rax
	mov rax,QWORD [rsp-8+8*5]
	mov rdi,r14
	mov QWORD [rdi+8+8*3],rax
	mov rax,QWORD [rsp-8+8*4]
	mov rdi,r14
	mov QWORD [rdi+8+8*4],rax
	mov rax,QWORD [rsp-8+8*1]
	mov rdi,r14
	mov QWORD [rdi+8+8*5],rax
	mov rax,r14
	mov BYTE [rax+6],1
	mov rdi,rax
	mov rax,[SS_LN_TOP]
	mov rsi,[rax]
	mov QWORD [SS_LN_TOP],rsi 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	lea rsp,[rsp+8*5]
	jmp LB_4647
LB_4647:
	movzx rax,BYTE [r8+6]
	cmp rax,0
	jnz LB_4625
	pop r14
	pop r9
	add rsp,8
	pop r13
	ret
LB_4625:
	jmp LB_4651
LB_4650:
	add r14,1 
LB_4651:
	cmp r14,r9
	jge LB_4652
	movzx rax,BYTE [r13+8+r14]
	cmp rax,9 
	jz LB_4650
	cmp rax,10 
	jz LB_4650
	cmp rax,32 
	jz LB_4650
LB_4652
	call GRM_268
	movzx rax,BYTE [r8+6]
	cmp rax,0
	jnz LB_4655
	jmp LB_4656
LB_4655:
	jmp LB_4653
LB_4656:
	lea rsp,[rsp-8*1]
	mov r8,[r8+8]
; .mov_ptn2 2'(= a27◂ [ ] ) ⊢ 8'(= a27◂ [ ] )
; .mov_ptn 2'(= a27◂ [ ] ) ⊢ 8'(= a27◂ [ ] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_4654
LB_4653:
	lea rsp,[rsp+8*0]
	jmp LB_4649
LB_4654:
	jmp LB_4658
LB_4657:
	add r14,1 
LB_4658:
	cmp r14,r9
	jge LB_4659
	movzx rax,BYTE [r13+8+r14]
	cmp rax,9 
	jz LB_4657
	cmp rax,10 
	jz LB_4657
	cmp rax,32 
	jz LB_4657
LB_4659
	call GRM_264
	movzx rax,BYTE [r8+6]
	cmp rax,0
	jnz LB_4662
	jmp LB_4663
LB_4662:
	jmp LB_4660
LB_4663:
	lea rsp,[rsp-8*1]
	mov r8,[r8+8]
; .mov_ptn2 2'(= a28◂ [ a9◂ [ ]] ) ⊢ 9'(= a28◂ [ a9◂ [ ]] )
; .mov_ptn 2'(= a28◂ [ a9◂ [ ]] ) ⊢ 9'(= a28◂ [ a9◂ [ ]] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_4661
LB_4660:
	lea rsp,[rsp+8*1]
	jmp LB_4649
LB_4661:
	jmp LB_4665
LB_4664:
	add r14,1 
LB_4665:
	cmp r14,r9
	jge LB_4666
	movzx rax,BYTE [r13+8+r14]
	cmp rax,9 
	jz LB_4664
	cmp rax,10 
	jz LB_4664
	cmp rax,32 
	jz LB_4664
LB_4666
	call GRM_263
	movzx rax,BYTE [r8+6]
	cmp rax,0
	jnz LB_4669
	jmp LB_4670
LB_4669:
	jmp LB_4667
LB_4670:
	lea rsp,[rsp-8*3]
; .mov_ptn2 2'(= *{ a8◂ [ a13◂ [ {| l |}]]a17◂ [ a9◂ [ ]{| l |}]a3◂ [ *{ a8◂ [ a13◂ [ {| l |}]]a26◂ [ a9◂ [ ]{| l |}]}]} ) ⊢ { 10'(= a8◂ [ a13◂ [ {| l |}]] ) 11'(= a17◂ [ a9◂ [ ]{| l |}] ) 12'(= a3◂ [ *{ a8◂ [ a13◂ [ {| l |}]]a26◂ [ a9◂ [ ]{| l |}]}] ) }
; .mov_ptn 2'(= *{ a8◂ [ a13◂ [ {| l |}]]a17◂ [ a9◂ [ ]{| l |}]a3◂ [ *{ a8◂ [ a13◂ [ {| l |}]]a26◂ [ a9◂ [ ]{| l |}]}]} ) ⊢ { 10'(= a8◂ [ a13◂ [ {| l |}]] ) 11'(= a17◂ [ a9◂ [ ]{| l |}] ) 12'(= a3◂ [ *{ a8◂ [ a13◂ [ {| l |}]]a26◂ [ a9◂ [ ]{| l |}]}] ) }
	mov rdi,r8
	mov rdi,QWORD [rdi+8+8*0]
	mov r10,rdi
	mov QWORD [rsp-8+8*3],r10
	mov rdi,r8
	mov rdi,QWORD [rdi+8+8*1]
	mov r11,rdi
	mov QWORD [rsp-8+8*2],r11
	mov rdi,r8
	mov rdi,QWORD [rdi+8+8*2]
	mov rcx,rdi
	mov QWORD [rsp-8+8*1],rcx
	jmp LB_4668
LB_4667:
	lea rsp,[rsp+8*2]
	jmp LB_4649
LB_4668:
	jmp LB_4672
LB_4671:
	add r14,1 
LB_4672:
	cmp r14,r9
	jge LB_4673
	movzx rax,BYTE [r13+8+r14]
	cmp rax,9 
	jz LB_4671
	cmp rax,10 
	jz LB_4671
	cmp rax,32 
	jz LB_4671
LB_4673
	call GRM_262
	movzx rax,BYTE [r8+6]
	cmp rax,0
	jnz LB_4676
	jmp LB_4677
LB_4676:
	jmp LB_4674
LB_4677:
	lea rsp,[rsp-8*1]
	mov r8,[r8+8]
; .mov_ptn2 2'(= a26◂ [ a9◂ [ ]{| l |}] ) ⊢ 13'(= a26◂ [ a9◂ [ ]{| l |}] )
; .mov_ptn 2'(= a26◂ [ a9◂ [ ]{| l |}] ) ⊢ 13'(= a26◂ [ a9◂ [ ]{| l |}] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_4675
LB_4674:
	lea rsp,[rsp+8*5]
	jmp LB_4649
LB_4675:
	mov QWORD [rsp+8*6],r14
	mov r13,QWORD [rsp+16+8*6]
	mov r14,QWORD [rsp+8*6]
	jmp LB_4679
LB_4679
;; rsp=6 , %2522~1'(= r ) %2521~0'(= r ) %2520~13'(= a26◂ [ a9◂ [ ]{| l |}] ) %2519~12'(= a3◂ [ *{ a8◂ [ a13◂ [ {| l |}]]a26◂ [ a9◂ [ ]{| l |}]}] ) %2518~11'(= a17◂ [ a9◂ [ ]{| l |}] ) %2517~10'(= a8◂ [ a13◂ [ {| l |}]] ) %2516~9'(= a28◂ [ a9◂ [ ]] ) %2515~8'(= a27◂ [ ] ) 
; rsp_d=0, #163 { } ⊢ 2'(= a2◂ [ a13◂ [ {| l |}]] )
	lea rsp,[rsp-8*2]
	mov QWORD [rsp+8*0],r13
	mov QWORD [rsp+8*1],r14
; .mov_ptn2 { } ⊢ { }
	call ETR_163

	mov r14,QWORD [rsp-8+8*2]
	mov rax,QWORD [rsp-8+8*1]
	mov r8,r13
	mov r13,rax
	lea rsp,[rsp+8*2]
;; rsp=6 , %2523~2'(= a2◂ [ a13◂ [ {| l |}]] ) %2522~1'(= r ) %2521~0'(= r ) %2520~13'(= a26◂ [ a9◂ [ ]{| l |}] ) %2519~12'(= a3◂ [ *{ a8◂ [ a13◂ [ {| l |}]]a26◂ [ a9◂ [ ]{| l |}]}] ) %2518~11'(= a17◂ [ a9◂ [ ]{| l |}] ) %2517~10'(= a8◂ [ a13◂ [ {| l |}]] ) %2516~9'(= a28◂ [ a9◂ [ ]] ) %2515~8'(= a27◂ [ ] ) 
; #152 { 2'(= a2◂ [ a13◂ [ {| l |}]] ) 10'(= a8◂ [ a13◂ [ {| l |}]] ) 11'(= a17◂ [ a9◂ [ ]{| l |}] ) 8'(= a27◂ [ ] ) 9'(= a28◂ [ a9◂ [ ]] ) 12'(= a3◂ [ *{ a8◂ [ a13◂ [ {| l |}]]a26◂ [ a9◂ [ ]{| l |}]}] ) 13'(= a26◂ [ a9◂ [ ]{| l |}] ) } ⊢ 0(<2)◂{ 2'(= a2◂ [ a13◂ [ {| l |}]] ) 10'(= a8◂ [ a13◂ [ {| l |}]] ) 11'(= a17◂ [ a9◂ [ ]{| l |}] ) 8'(= a27◂ [ ] ) 9'(= a28◂ [ a9◂ [ ]] ) 12'(= a3◂ [ *{ a8◂ [ a13◂ [ {| l |}]]a26◂ [ a9◂ [ ]{| l |}]}] ) 13'(= a26◂ [ a9◂ [ ]{| l |}] ) }
;; rsp=6 , %2524~0(<2)◂{ 2'(= a2◂ [ a13◂ [ {| l |}]] ) 10'(= a8◂ [ a13◂ [ {| l |}]] ) 11'(= a17◂ [ a9◂ [ ]{| l |}] ) 8'(= a27◂ [ ] ) 9'(= a28◂ [ a9◂ [ ]] ) 12'(= a3◂ [ *{ a8◂ [ a13◂ [ {| l |}]]a26◂ [ a9◂ [ ]{| l |}]}] ) 13'(= a26◂ [ a9◂ [ ]{| l |}] ) } %2522~1'(= r ) %2521~0'(= r ) 
; #22 0(<2)◂{ 2'(= a2◂ [ a13◂ [ {| l |}]] ) 10'(= a8◂ [ a13◂ [ {| l |}]] ) 11'(= a17◂ [ a9◂ [ ]{| l |}] ) 8'(= a27◂ [ ] ) 9'(= a28◂ [ a9◂ [ ]] ) 12'(= a3◂ [ *{ a8◂ [ a13◂ [ {| l |}]]a26◂ [ a9◂ [ ]{| l |}]}] ) 13'(= a26◂ [ a9◂ [ ]{| l |}] ) } ⊢ 0(<2)◂0(<2)◂{ 2'(= a2◂ [ a13◂ [ {| l |}]] ) 10'(= a8◂ [ a13◂ [ {| l |}]] ) 11'(= a17◂ [ a9◂ [ ]{| l |}] ) 8'(= a27◂ [ ] ) 9'(= a28◂ [ a9◂ [ ]] ) 12'(= a3◂ [ *{ a8◂ [ a13◂ [ {| l |}]]a26◂ [ a9◂ [ ]{| l |}]}] ) 13'(= a26◂ [ a9◂ [ ]{| l |}] ) }
;; rsp=6 , %2525~0(<2)◂0(<2)◂{ 2'(= a2◂ [ a13◂ [ {| l |}]] ) 10'(= a8◂ [ a13◂ [ {| l |}]] ) 11'(= a17◂ [ a9◂ [ ]{| l |}] ) 8'(= a27◂ [ ] ) 9'(= a28◂ [ a9◂ [ ]] ) 12'(= a3◂ [ *{ a8◂ [ a13◂ [ {| l |}]]a26◂ [ a9◂ [ ]{| l |}]}] ) 13'(= a26◂ [ a9◂ [ ]{| l |}] ) } %2522~1'(= r ) %2521~0'(= r ) 
; ∎ 0(<2)◂0(<2)◂{ 2'(= a2◂ [ a13◂ [ {| l |}]] ) 10'(= a8◂ [ a13◂ [ {| l |}]] ) 11'(= a17◂ [ a9◂ [ ]{| l |}] ) 8'(= a27◂ [ ] ) 9'(= a28◂ [ a9◂ [ ]] ) 12'(= a3◂ [ *{ a8◂ [ a13◂ [ {| l |}]]a26◂ [ a9◂ [ ]{| l |}]}] ) 13'(= a26◂ [ a9◂ [ ]{| l |}] ) }
; .dlt.ptn 1'(= r )
; .dlt.ptn 0'(= r )
; .mov_ptn2 0(<2)◂0(<2)◂{ 2'(= a2◂ [ a13◂ [ {| l |}]] ) 10'(= a8◂ [ a13◂ [ {| l |}]] ) 11'(= a17◂ [ a9◂ [ ]{| l |}] ) 8'(= a27◂ [ ] ) 9'(= a28◂ [ a9◂ [ ]] ) 12'(= a3◂ [ *{ a8◂ [ a13◂ [ {| l |}]]a26◂ [ a9◂ [ ]{| l |}]}] ) 13'(= a26◂ [ a9◂ [ ]{| l |}] ) } ⊢ 2'(= a3◂ [ a26◂ [ a9◂ [ ]{| l |}]] )
	mov r13,r8
; .mov_ptn 0(<2)◂0(<2)◂{ 0'(= a2◂ [ a13◂ [ {| l |}]] ) 10'(= a8◂ [ a13◂ [ {| l |}]] ) 11'(= a17◂ [ a9◂ [ ]{| l |}] ) 8'(= a27◂ [ ] ) 9'(= a28◂ [ a9◂ [ ]] ) 12'(= a3◂ [ *{ a8◂ [ a13◂ [ {| l |}]]a26◂ [ a9◂ [ ]{| l |}]}] ) 13'(= a26◂ [ a9◂ [ ]{| l |}] ) } ⊢ 2'(= a3◂ [ a26◂ [ a9◂ [ ]{| l |}]] )
	mov rax,[SS_RCD_7_TOP]
	mov rsi,[rax] 
	mov QWORD [SS_RCD_7_TOP],rsi
	mov QWORD [rax],0
	mov r14,rax
	mov rax,r13
	mov rdi,r14
	mov QWORD [rdi+8+8*0],rax
	mov rax,QWORD [rsp-8+8*4]
	mov rdi,r14
	mov QWORD [rdi+8+8*1],rax
	mov rax,QWORD [rsp-8+8*3]
	mov rdi,r14
	mov QWORD [rdi+8+8*2],rax
	mov rax,QWORD [rsp-8+8*6]
	mov rdi,r14
	mov QWORD [rdi+8+8*3],rax
	mov rax,QWORD [rsp-8+8*5]
	mov rdi,r14
	mov QWORD [rdi+8+8*4],rax
	mov rax,QWORD [rsp-8+8*2]
	mov rdi,r14
	mov QWORD [rdi+8+8*5],rax
	mov rax,QWORD [rsp-8+8*1]
	mov rdi,r14
	mov QWORD [rdi+8+8*6],rax
	mov rax,r14
	mov BYTE [rax+6],0
	mov rdi,rax
	mov rax,[SS_LN_TOP]
	mov rsi,[rax]
	mov QWORD [SS_LN_TOP],rsi 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	lea rsp,[rsp+8*6]
	jmp LB_4678
LB_4678:
	movzx rax,BYTE [r8+6]
	cmp rax,0
	jnz LB_4649
	pop r14
	pop r9
	add rsp,8
	pop r13
	ret
LB_4649:
	pop rdi
	pop r9 
	pop r14
	pop r13
	ret
ETR_263:
	mov r9,0x0000_ffff_ffff_ffff
	and r9,[r13]
	call GRM_263
	ret
GRM_263:
	sub rsp,32
	mov QWORD [rsp+24],r13
	mov QWORD [rsp+16],r14 
	mov QWORD [rsp+8],r9
	jmp LB_4682
LB_4681:
	add r14,1 
LB_4682:
	cmp r14,r9
	jge LB_4683
	movzx rax,BYTE [r13+8+r14]
	cmp rax,9 
	jz LB_4681
	cmp rax,10 
	jz LB_4681
	cmp rax,32 
	jz LB_4681
LB_4683
	lea rax,[r14+1]
	cmp rax,r9
	jg LB_4686
	jmp LB_4687
LB_4686:
	mov r8,unt_1
	jmp LB_4684
LB_4687:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],59
	jnz LB_4688
	jmp LB_4689
LB_4688:
	mov r8,unt_1
	jmp LB_4684
LB_4689:
	add r14,1
	jmp LB_4685
LB_4684:
	lea rsp,[rsp+8*0]
	jmp LB_4680
LB_4685:
	jmp LB_4691
LB_4690:
	add r14,1 
LB_4691:
	cmp r14,r9
	jge LB_4692
	movzx rax,BYTE [r13+8+r14]
	cmp rax,9 
	jz LB_4690
	cmp rax,10 
	jz LB_4690
	cmp rax,32 
	jz LB_4690
LB_4692
	lea rax,[r14+3]
	cmp rax,r9
	jg LB_4695
	jmp LB_4696
LB_4695:
	mov r8,unt_1
	jmp LB_4693
LB_4696:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],226
	jnz LB_4697
	cmp BYTE [rdi+1],138
	jnz LB_4697
	cmp BYTE [rdi+2],162
	jnz LB_4697
	jmp LB_4698
LB_4697:
	mov r8,unt_1
	jmp LB_4693
LB_4698:
	add r14,3
	jmp LB_4694
LB_4693:
	lea rsp,[rsp+8*0]
	jmp LB_4680
LB_4694:
	jmp LB_4700
LB_4699:
	add r14,1 
LB_4700:
	cmp r14,r9
	jge LB_4701
	movzx rax,BYTE [r13+8+r14]
	cmp rax,9 
	jz LB_4699
	cmp rax,10 
	jz LB_4699
	cmp rax,32 
	jz LB_4699
LB_4701
	call GRM_205
	movzx rax,BYTE [r8+6]
	cmp rax,0
	jnz LB_4704
	jmp LB_4705
LB_4704:
	jmp LB_4702
LB_4705:
	lea rsp,[rsp-8*1]
	mov r8,[r8+8]
; .mov_ptn2 2'(= a8◂ [ a13◂ [ {| l |}]] ) ⊢ 8'(= a8◂ [ a13◂ [ {| l |}]] )
; .mov_ptn 2'(= a8◂ [ a13◂ [ {| l |}]] ) ⊢ 8'(= a8◂ [ a13◂ [ {| l |}]] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_4703
LB_4702:
	lea rsp,[rsp+8*0]
	pop rdi
	pop r9 
	pop r14
	pop r13
	ret
LB_4703:
	jmp LB_4707
LB_4706:
	add r14,1 
LB_4707:
	cmp r14,r9
	jge LB_4708
	movzx rax,BYTE [r13+8+r14]
	cmp rax,9 
	jz LB_4706
	cmp rax,10 
	jz LB_4706
	cmp rax,32 
	jz LB_4706
LB_4708
	lea rax,[r14+1]
	cmp rax,r9
	jg LB_4711
	jmp LB_4712
LB_4711:
	mov r8,unt_1
	jmp LB_4709
LB_4712:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],44
	jnz LB_4713
	jmp LB_4714
LB_4713:
	mov r8,unt_1
	jmp LB_4709
LB_4714:
	add r14,1
	jmp LB_4710
LB_4709:
	lea rsp,[rsp+8*1]
	pop rdi
	pop r9 
	pop r14
	pop r13
	ret
LB_4710:
	jmp LB_4716
LB_4715:
	add r14,1 
LB_4716:
	cmp r14,r9
	jge LB_4717
	movzx rax,BYTE [r13+8+r14]
	cmp rax,9 
	jz LB_4715
	cmp rax,10 
	jz LB_4715
	cmp rax,32 
	jz LB_4715
LB_4717
	call GRM_205
	movzx rax,BYTE [r8+6]
	cmp rax,0
	jnz LB_4720
	jmp LB_4721
LB_4720:
	jmp LB_4718
LB_4721:
	lea rsp,[rsp-8*1]
	mov r8,[r8+8]
; .mov_ptn2 2'(= a8◂ [ a13◂ [ {| l |}]] ) ⊢ 9'(= a8◂ [ a13◂ [ {| l |}]] )
; .mov_ptn 2'(= a8◂ [ a13◂ [ {| l |}]] ) ⊢ 9'(= a8◂ [ a13◂ [ {| l |}]] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_4719
LB_4718:
	lea rsp,[rsp+8*1]
	pop rdi
	pop r9 
	pop r14
	pop r13
	ret
LB_4719:
	jmp LB_4723
LB_4722:
	add r14,1 
LB_4723:
	cmp r14,r9
	jge LB_4724
	movzx rax,BYTE [r13+8+r14]
	cmp rax,9 
	jz LB_4722
	cmp rax,10 
	jz LB_4722
	cmp rax,32 
	jz LB_4722
LB_4724
	call GRM_234
	movzx rax,BYTE [r8+6]
	cmp rax,0
	jnz LB_4727
	jmp LB_4728
LB_4727:
	jmp LB_4725
LB_4728:
	lea rsp,[rsp-8*1]
	mov r8,[r8+8]
; .mov_ptn2 2'(= a35◂ [ a17◂ [ a9◂ [ ]{| l |}]] ) ⊢ 10'(= a35◂ [ a17◂ [ a9◂ [ ]{| l |}]] )
; .mov_ptn 2'(= a35◂ [ a17◂ [ a9◂ [ ]{| l |}]] ) ⊢ 10'(= a35◂ [ a17◂ [ a9◂ [ ]{| l |}]] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_4726
LB_4725:
	lea rsp,[rsp+8*2]
	pop rdi
	pop r9 
	pop r14
	pop r13
	ret
LB_4726:
	jmp LB_4730
LB_4729:
	add r14,1 
LB_4730:
	cmp r14,r9
	jge LB_4731
	movzx rax,BYTE [r13+8+r14]
	cmp rax,9 
	jz LB_4729
	cmp rax,10 
	jz LB_4729
	cmp rax,32 
	jz LB_4729
LB_4731
	call GRM_262
	movzx rax,BYTE [r8+6]
	cmp rax,0
	jnz LB_4734
	jmp LB_4735
LB_4734:
	jmp LB_4732
LB_4735:
	lea rsp,[rsp-8*1]
	mov r8,[r8+8]
; .mov_ptn2 2'(= a26◂ [ a9◂ [ ]{| l |}] ) ⊢ 11'(= a26◂ [ a9◂ [ ]{| l |}] )
; .mov_ptn 2'(= a26◂ [ a9◂ [ ]{| l |}] ) ⊢ 11'(= a26◂ [ a9◂ [ ]{| l |}] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_4733
LB_4732:
	lea rsp,[rsp+8*3]
	pop rdi
	pop r9 
	pop r14
	pop r13
	ret
LB_4733:
	mov QWORD [rsp+8*4],r14
	mov r13,QWORD [rsp+16+8*4]
	mov r14,QWORD [rsp+8*4]
	jmp LB_4737
LB_4737
;; rsp=4 , %2531~1'(= r ) %2530~0'(= r ) %2529~11'(= a26◂ [ a9◂ [ ]{| l |}] ) %2528~10'(= a35◂ [ a17◂ [ a9◂ [ ]{| l |}]] ) %2527~9'(= a8◂ [ a13◂ [ {| l |}]] ) %2526~8'(= a8◂ [ a13◂ [ {| l |}]] ) 
;; ? 10'(= a35◂ [ a17◂ [ a9◂ [ ]{| l |}]] ) ⊢ 0(<2)◂2'(= a17◂ [ a9◂ [ ]{| l |}] )
	mov rdi,QWORD [rsp-8+8*2]
	movzx rax,BYTE [rdi+6]
	cmp rax,0
	jnz LB_4738
	mov rax,QWORD [rdi+8]
	mov r8,rax
;; rsp=4 , %2533~2'(= a17◂ [ a9◂ [ ]{| l |}] ) %2531~1'(= r ) %2530~0'(= r ) %2529~11'(= a26◂ [ a9◂ [ ]{| l |}] ) %2527~9'(= a8◂ [ a13◂ [ {| l |}]] ) %2526~8'(= a8◂ [ a13◂ [ {| l |}]] ) 
; #22 { 9'(= a8◂ [ a13◂ [ {| l |}]] ) 11'(= a26◂ [ a9◂ [ ]{| l |}] ) } ⊢ 0(<2)◂{ 9'(= a8◂ [ a13◂ [ {| l |}]] ) 11'(= a26◂ [ a9◂ [ ]{| l |}] ) }
;; rsp=4 , %2534~0(<2)◂{ 9'(= a8◂ [ a13◂ [ {| l |}]] ) 11'(= a26◂ [ a9◂ [ ]{| l |}] ) } %2533~2'(= a17◂ [ a9◂ [ ]{| l |}] ) %2531~1'(= r ) %2530~0'(= r ) %2526~8'(= a8◂ [ a13◂ [ {| l |}]] ) 
; #22 { 8'(= a8◂ [ a13◂ [ {| l |}]] ) 2'(= a17◂ [ a9◂ [ ]{| l |}] ) 0(<2)◂{ 9'(= a8◂ [ a13◂ [ {| l |}]] ) 11'(= a26◂ [ a9◂ [ ]{| l |}] ) } } ⊢ 0(<2)◂{ 8'(= a8◂ [ a13◂ [ {| l |}]] ) 2'(= a17◂ [ a9◂ [ ]{| l |}] ) 0(<2)◂{ 9'(= a8◂ [ a13◂ [ {| l |}]] ) 11'(= a26◂ [ a9◂ [ ]{| l |}] ) } }
;; rsp=4 , %2535~0(<2)◂{ 8'(= a8◂ [ a13◂ [ {| l |}]] ) 2'(= a17◂ [ a9◂ [ ]{| l |}] ) 0(<2)◂{ 9'(= a8◂ [ a13◂ [ {| l |}]] ) 11'(= a26◂ [ a9◂ [ ]{| l |}] ) } } %2531~1'(= r ) %2530~0'(= r ) 
; ∎ 0(<2)◂{ 8'(= a8◂ [ a13◂ [ {| l |}]] ) 2'(= a17◂ [ a9◂ [ ]{| l |}] ) 0(<2)◂{ 9'(= a8◂ [ a13◂ [ {| l |}]] ) 11'(= a26◂ [ a9◂ [ ]{| l |}] ) } }
; .dlt.ptn 1'(= r )
; .dlt.ptn 0'(= r )
; .mov_ptn2 0(<2)◂{ 8'(= a8◂ [ a13◂ [ {| l |}]] ) 2'(= a17◂ [ a9◂ [ ]{| l |}] ) 0(<2)◂{ 9'(= a8◂ [ a13◂ [ {| l |}]] ) 11'(= a26◂ [ a9◂ [ ]{| l |}] ) } } ⊢ 2'(= a3◂ [ *{ a8◂ [ a13◂ [ {| l |}]]a17◂ [ a9◂ [ ]{| l |}]a3◂ [ *{ a8◂ [ a13◂ [ {| l |}]]a26◂ [ a9◂ [ ]{| l |}]}]}] )
	mov r13,r8
; .mov_ptn 0(<2)◂{ 8'(= a8◂ [ a13◂ [ {| l |}]] ) 0'(= a17◂ [ a9◂ [ ]{| l |}] ) 0(<2)◂{ 9'(= a8◂ [ a13◂ [ {| l |}]] ) 11'(= a26◂ [ a9◂ [ ]{| l |}] ) } } ⊢ 2'(= a3◂ [ *{ a8◂ [ a13◂ [ {| l |}]]a17◂ [ a9◂ [ ]{| l |}]a3◂ [ *{ a8◂ [ a13◂ [ {| l |}]]a26◂ [ a9◂ [ ]{| l |}]}]}] )
	mov rax,[SS_RCD_3_TOP]
	mov rsi,[rax] 
	mov QWORD [SS_RCD_3_TOP],rsi
	mov QWORD [rax],0
	mov r14,rax
	mov rax,QWORD [rsp-8+8*4]
	mov rdi,r14
	mov QWORD [rdi+8+8*0],rax
	mov rax,r13
	mov rdi,r14
	mov QWORD [rdi+8+8*1],rax
	mov rax,[SS_RCD_2_TOP]
	mov rsi,[rax] 
	mov QWORD [SS_RCD_2_TOP],rsi
	mov QWORD [rax],0
	mov r9,rax
	mov rax,QWORD [rsp-8+8*3]
	mov rdi,r9
	mov QWORD [rdi+8+8*0],rax
	mov rax,QWORD [rsp-8+8*1]
	mov rdi,r9
	mov QWORD [rdi+8+8*1],rax
	mov rax,r9
	mov BYTE [rax+6],0
	mov rdi,r14
	mov QWORD [rdi+8+8*2],rax
	mov rax,r14
	mov BYTE [rax+6],0
	mov r8,rax
	lea rsp,[rsp+8*4]
	jmp LB_4736
LB_4738:
;; ? 10'(= a35◂ [ a17◂ [ a9◂ [ ]{| l |}]] ) ⊢ 1(<2)◂10'(= a2◂ [ *{ rr{| l |}}] )
;; rsp=4 , %2532~10'(= a2◂ [ *{ rr{| l |}}] ) %2531~1'(= r ) %2530~0'(= r ) %2529~11'(= a26◂ [ a9◂ [ ]{| l |}] ) %2527~9'(= a8◂ [ a13◂ [ {| l |}]] ) %2526~8'(= a8◂ [ a13◂ [ {| l |}]] ) 
	jmp LB_4739
LB_4739:
; $ %[ "grm_etr_act_act 0" ] ⊢ %[ "grm_etr_act_act 0" ]
;; rsp=4 , %2536~%[ "grm_etr_act_act 0" ] %2532~10'(= a2◂ [ *{ rr{| l |}}] ) %2531~1'(= r ) %2530~0'(= r ) %2529~11'(= a26◂ [ a9◂ [ ]{| l |}] ) %2527~9'(= a8◂ [ a13◂ [ {| l |}]] ) %2526~8'(= a8◂ [ a13◂ [ {| l |}]] ) 
; _emt %[ "grm_etr_act_act 0" ] ⊢ %[ "grm_etr_act_act 0" ]
	jmp LB_4741
LB_4740: db 95,101,109,116,58,0
LB_4741:
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax  
	mov rdi,LB_4740
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call printf 
	mov rsp,QWORD [rsp_tmp]
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	jmp LB_4743
LB_4742: db 34,103,114,109,95,101,116,114,95,97,99,116,95,97,99,116,32,48,34,0
LB_4743:
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax  
	mov rdi,LB_4742
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call printf 
	mov rsp,QWORD [rsp_tmp]
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	jmp LB_4745
LB_4744: db 10,0
LB_4745:
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax  
	mov rdi,LB_4744
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call printf 
	mov rsp,QWORD [rsp_tmp]
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	jmp LB_4746
LB_4746:
;; rsp=4 , %2537~%[ "grm_etr_act_act 0" ] %2532~10'(= a2◂ [ *{ rr{| l |}}] ) %2531~1'(= r ) %2530~0'(= r ) %2529~11'(= a26◂ [ a9◂ [ ]{| l |}] ) %2527~9'(= a8◂ [ a13◂ [ {| l |}]] ) %2526~8'(= a8◂ [ a13◂ [ {| l |}]] ) 
; _emt { 0'(= r ) 1'(= r ) } ⊢ { 0'(= r ) 1'(= r ) }
	jmp LB_4748
LB_4747: db 95,101,109,116,58,0
LB_4748:
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax  
	mov rdi,LB_4747
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call printf 
	mov rsp,QWORD [rsp_tmp]
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	jmp LB_4750
LB_4749: db 123,32,0
LB_4750:
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax  
	mov rdi,LB_4749
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call printf 
	mov rsp,QWORD [rsp_tmp]
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	mov rax,r13
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	mov r8,rax
	mov rsi,r8
	xor rax,rax  
	mov rdi,fmt_r64
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call printf 
	mov rsp,QWORD [rsp_tmp]
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	jmp LB_4752
LB_4751: db 32,0
LB_4752:
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax  
	mov rdi,LB_4751
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call printf 
	mov rsp,QWORD [rsp_tmp]
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	mov rax,r14
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	mov r8,rax
	mov rsi,r8
	xor rax,rax  
	mov rdi,fmt_r64
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call printf 
	mov rsp,QWORD [rsp_tmp]
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	jmp LB_4754
LB_4753: db 32,0
LB_4754:
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax  
	mov rdi,LB_4753
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call printf 
	mov rsp,QWORD [rsp_tmp]
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	jmp LB_4756
LB_4755: db 125,32,0
LB_4756:
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax  
	mov rdi,LB_4755
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call printf 
	mov rsp,QWORD [rsp_tmp]
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	jmp LB_4758
LB_4757: db 10,0
LB_4758:
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax  
	mov rdi,LB_4757
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call printf 
	mov rsp,QWORD [rsp_tmp]
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	jmp LB_4759
LB_4759:
;; rsp=4 , %2538~{ 0'(= r ) 1'(= r ) } %2537~%[ "grm_etr_act_act 0" ] %2532~10'(= a2◂ [ *{ rr{| l |}}] ) %2529~11'(= a26◂ [ a9◂ [ ]{| l |}] ) %2527~9'(= a8◂ [ a13◂ [ {| l |}]] ) %2526~8'(= a8◂ [ a13◂ [ {| l |}]] ) 
; ∎| 
	jmp LB_4761
LB_4760: db 101,120,110,32,53,55,54,57,54,58,10,0
LB_4761:
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax  
	mov rdi,LB_4760
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call printf 
	mov rsp,QWORD [rsp_tmp]
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	jmp err
LB_4736:
	movzx rax,BYTE [r8+6]
	cmp rax,0
	jnz LB_4680
	pop r14
	pop r9
	add rsp,8
	pop r13
	ret
LB_4680:
	jmp LB_4764
LB_4763:
	add r14,1 
LB_4764:
	cmp r14,r9
	jge LB_4765
	movzx rax,BYTE [r13+8+r14]
	cmp rax,9 
	jz LB_4763
	cmp rax,10 
	jz LB_4763
	cmp rax,32 
	jz LB_4763
LB_4765
	lea rax,[r14+3]
	cmp rax,r9
	jg LB_4768
	jmp LB_4769
LB_4768:
	mov r8,unt_1
	jmp LB_4766
LB_4769:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],226
	jnz LB_4770
	cmp BYTE [rdi+1],138
	jnz LB_4770
	cmp BYTE [rdi+2],162
	jnz LB_4770
	jmp LB_4771
LB_4770:
	mov r8,unt_1
	jmp LB_4766
LB_4771:
	add r14,3
	jmp LB_4767
LB_4766:
	lea rsp,[rsp+8*0]
	jmp LB_4762
LB_4767:
	jmp LB_4773
LB_4772:
	add r14,1 
LB_4773:
	cmp r14,r9
	jge LB_4774
	movzx rax,BYTE [r13+8+r14]
	cmp rax,9 
	jz LB_4772
	cmp rax,10 
	jz LB_4772
	cmp rax,32 
	jz LB_4772
LB_4774
	call GRM_205
	movzx rax,BYTE [r8+6]
	cmp rax,0
	jnz LB_4777
	jmp LB_4778
LB_4777:
	jmp LB_4775
LB_4778:
	lea rsp,[rsp-8*1]
	mov r8,[r8+8]
; .mov_ptn2 2'(= a8◂ [ a13◂ [ {| l |}]] ) ⊢ 8'(= a8◂ [ a13◂ [ {| l |}]] )
; .mov_ptn 2'(= a8◂ [ a13◂ [ {| l |}]] ) ⊢ 8'(= a8◂ [ a13◂ [ {| l |}]] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_4776
LB_4775:
	lea rsp,[rsp+8*0]
	pop rdi
	pop r9 
	pop r14
	pop r13
	ret
LB_4776:
	jmp LB_4780
LB_4779:
	add r14,1 
LB_4780:
	cmp r14,r9
	jge LB_4781
	movzx rax,BYTE [r13+8+r14]
	cmp rax,9 
	jz LB_4779
	cmp rax,10 
	jz LB_4779
	cmp rax,32 
	jz LB_4779
LB_4781
	call GRM_234
	movzx rax,BYTE [r8+6]
	cmp rax,0
	jnz LB_4784
	jmp LB_4785
LB_4784:
	jmp LB_4782
LB_4785:
	lea rsp,[rsp-8*1]
	mov r8,[r8+8]
; .mov_ptn2 2'(= a35◂ [ a17◂ [ a9◂ [ ]{| l |}]] ) ⊢ 9'(= a35◂ [ a17◂ [ a9◂ [ ]{| l |}]] )
; .mov_ptn 2'(= a35◂ [ a17◂ [ a9◂ [ ]{| l |}]] ) ⊢ 9'(= a35◂ [ a17◂ [ a9◂ [ ]{| l |}]] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_4783
LB_4782:
	lea rsp,[rsp+8*1]
	pop rdi
	pop r9 
	pop r14
	pop r13
	ret
LB_4783:
	mov QWORD [rsp+8*2],r14
	mov r13,QWORD [rsp+16+8*2]
	mov r14,QWORD [rsp+8*2]
	jmp LB_4787
LB_4787
;; rsp=2 , %2542~1'(= r ) %2541~0'(= r ) %2540~9'(= a35◂ [ a17◂ [ a9◂ [ ]{| l |}]] ) %2539~8'(= a8◂ [ a13◂ [ {| l |}]] ) 
;; ? 9'(= a35◂ [ a17◂ [ a9◂ [ ]{| l |}]] ) ⊢ 0(<2)◂2'(= a17◂ [ a9◂ [ ]{| l |}] )
	mov rdi,QWORD [rsp-8+8*1]
	movzx rax,BYTE [rdi+6]
	cmp rax,0
	jnz LB_4788
	mov rax,QWORD [rdi+8]
	mov r8,rax
;; rsp=2 , %2544~2'(= a17◂ [ a9◂ [ ]{| l |}] ) %2542~1'(= r ) %2541~0'(= r ) %2539~8'(= a8◂ [ a13◂ [ {| l |}]] ) 
; #23 { } ⊢ 1(<2)◂{ }
;; rsp=2 , %2545~1(<2)◂{ } %2544~2'(= a17◂ [ a9◂ [ ]{| l |}] ) %2542~1'(= r ) %2541~0'(= r ) %2539~8'(= a8◂ [ a13◂ [ {| l |}]] ) 
; #22 { 8'(= a8◂ [ a13◂ [ {| l |}]] ) 2'(= a17◂ [ a9◂ [ ]{| l |}] ) 1(<2)◂{ } } ⊢ 0(<2)◂{ 8'(= a8◂ [ a13◂ [ {| l |}]] ) 2'(= a17◂ [ a9◂ [ ]{| l |}] ) 1(<2)◂{ } }
;; rsp=2 , %2546~0(<2)◂{ 8'(= a8◂ [ a13◂ [ {| l |}]] ) 2'(= a17◂ [ a9◂ [ ]{| l |}] ) 1(<2)◂{ } } %2542~1'(= r ) %2541~0'(= r ) 
; ∎ 0(<2)◂{ 8'(= a8◂ [ a13◂ [ {| l |}]] ) 2'(= a17◂ [ a9◂ [ ]{| l |}] ) 1(<2)◂{ } }
; .dlt.ptn 1'(= r )
; .dlt.ptn 0'(= r )
; .mov_ptn2 0(<2)◂{ 8'(= a8◂ [ a13◂ [ {| l |}]] ) 2'(= a17◂ [ a9◂ [ ]{| l |}] ) 1(<2)◂{ } } ⊢ 2'(= a3◂ [ *{ a8◂ [ a13◂ [ {| l |}]]a17◂ [ a9◂ [ ]{| l |}]a3◂ [ *{ a8◂ [ a13◂ [ {| l |}]]a26◂ [ a9◂ [ ]{| l |}]}]}] )
	mov r13,r8
; .mov_ptn 0(<2)◂{ 8'(= a8◂ [ a13◂ [ {| l |}]] ) 0'(= a17◂ [ a9◂ [ ]{| l |}] ) 1(<2)◂{ } } ⊢ 2'(= a3◂ [ *{ a8◂ [ a13◂ [ {| l |}]]a17◂ [ a9◂ [ ]{| l |}]a3◂ [ *{ a8◂ [ a13◂ [ {| l |}]]a26◂ [ a9◂ [ ]{| l |}]}]}] )
	mov rax,[SS_RCD_3_TOP]
	mov rsi,[rax] 
	mov QWORD [SS_RCD_3_TOP],rsi
	mov QWORD [rax],0
	mov r14,rax
	mov rax,QWORD [rsp-8+8*2]
	mov rdi,r14
	mov QWORD [rdi+8+8*0],rax
	mov rax,r13
	mov rdi,r14
	mov QWORD [rdi+8+8*1],rax
	mov rax,unt 
	mov rax,unt_1
	mov rdi,r14
	mov QWORD [rdi+8+8*2],rax
	mov rax,r14
	mov BYTE [rax+6],0
	mov r8,rax
	lea rsp,[rsp+8*2]
	jmp LB_4786
LB_4788:
;; ? 9'(= a35◂ [ a17◂ [ a9◂ [ ]{| l |}]] ) ⊢ 1(<2)◂9'(= a2◂ [ *{ rr{| l |}}] )
;; rsp=2 , %2543~9'(= a2◂ [ *{ rr{| l |}}] ) %2542~1'(= r ) %2541~0'(= r ) %2539~8'(= a8◂ [ a13◂ [ {| l |}]] ) 
	jmp LB_4789
LB_4789:
; $ %[ "grm_etr_act_act 1" ] ⊢ %[ "grm_etr_act_act 1" ]
;; rsp=2 , %2547~%[ "grm_etr_act_act 1" ] %2543~9'(= a2◂ [ *{ rr{| l |}}] ) %2542~1'(= r ) %2541~0'(= r ) %2539~8'(= a8◂ [ a13◂ [ {| l |}]] ) 
; _emt %[ "grm_etr_act_act 1" ] ⊢ %[ "grm_etr_act_act 1" ]
	jmp LB_4791
LB_4790: db 95,101,109,116,58,0
LB_4791:
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax  
	mov rdi,LB_4790
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call printf 
	mov rsp,QWORD [rsp_tmp]
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	jmp LB_4793
LB_4792: db 34,103,114,109,95,101,116,114,95,97,99,116,95,97,99,116,32,49,34,0
LB_4793:
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax  
	mov rdi,LB_4792
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call printf 
	mov rsp,QWORD [rsp_tmp]
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	jmp LB_4795
LB_4794: db 10,0
LB_4795:
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax  
	mov rdi,LB_4794
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call printf 
	mov rsp,QWORD [rsp_tmp]
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	jmp LB_4796
LB_4796:
;; rsp=2 , %2548~%[ "grm_etr_act_act 1" ] %2543~9'(= a2◂ [ *{ rr{| l |}}] ) %2542~1'(= r ) %2541~0'(= r ) %2539~8'(= a8◂ [ a13◂ [ {| l |}]] ) 
; _emt { 0'(= r ) 1'(= r ) } ⊢ { 0'(= r ) 1'(= r ) }
	jmp LB_4798
LB_4797: db 95,101,109,116,58,0
LB_4798:
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax  
	mov rdi,LB_4797
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call printf 
	mov rsp,QWORD [rsp_tmp]
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	jmp LB_4800
LB_4799: db 123,32,0
LB_4800:
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax  
	mov rdi,LB_4799
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call printf 
	mov rsp,QWORD [rsp_tmp]
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	mov rax,r13
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	mov r8,rax
	mov rsi,r8
	xor rax,rax  
	mov rdi,fmt_r64
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call printf 
	mov rsp,QWORD [rsp_tmp]
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	jmp LB_4802
LB_4801: db 32,0
LB_4802:
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax  
	mov rdi,LB_4801
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call printf 
	mov rsp,QWORD [rsp_tmp]
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	mov rax,r14
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	mov r8,rax
	mov rsi,r8
	xor rax,rax  
	mov rdi,fmt_r64
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call printf 
	mov rsp,QWORD [rsp_tmp]
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	jmp LB_4804
LB_4803: db 32,0
LB_4804:
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax  
	mov rdi,LB_4803
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call printf 
	mov rsp,QWORD [rsp_tmp]
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	jmp LB_4806
LB_4805: db 125,32,0
LB_4806:
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax  
	mov rdi,LB_4805
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call printf 
	mov rsp,QWORD [rsp_tmp]
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	jmp LB_4808
LB_4807: db 10,0
LB_4808:
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax  
	mov rdi,LB_4807
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call printf 
	mov rsp,QWORD [rsp_tmp]
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	jmp LB_4809
LB_4809:
;; rsp=2 , %2549~{ 0'(= r ) 1'(= r ) } %2548~%[ "grm_etr_act_act 1" ] %2543~9'(= a2◂ [ *{ rr{| l |}}] ) %2539~8'(= a8◂ [ a13◂ [ {| l |}]] ) 
; ∎| 
	jmp LB_4811
LB_4810: db 101,120,110,32,53,55,57,54,53,58,10,0
LB_4811:
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax  
	mov rdi,LB_4810
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call printf 
	mov rsp,QWORD [rsp_tmp]
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	jmp err
LB_4786:
	movzx rax,BYTE [r8+6]
	cmp rax,0
	jnz LB_4762
	pop r14
	pop r9
	add rsp,8
	pop r13
	ret
LB_4762:
	pop rdi
	pop r9 
	pop r14
	pop r13
	ret
ETR_264:
	mov r9,0x0000_ffff_ffff_ffff
	and r9,[r13]
	call GRM_264
	ret
GRM_264:
	sub rsp,32
	mov QWORD [rsp+24],r13
	mov QWORD [rsp+16],r14 
	mov QWORD [rsp+8],r9
	jmp LB_4814
LB_4813:
	add r14,1 
LB_4814:
	cmp r14,r9
	jge LB_4815
	movzx rax,BYTE [r13+8+r14]
	cmp rax,9 
	jz LB_4813
	cmp rax,10 
	jz LB_4813
	cmp rax,32 
	jz LB_4813
LB_4815
	lea rax,[r14+2]
	cmp rax,r9
	jg LB_4818
	jmp LB_4819
LB_4818:
	mov r8,unt_1
	jmp LB_4816
LB_4819:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],33
	jnz LB_4820
	cmp BYTE [rdi+1],124
	jnz LB_4820
	jmp LB_4821
LB_4820:
	mov r8,unt_1
	jmp LB_4816
LB_4821:
	add r14,2
	jmp LB_4817
LB_4816:
	lea rsp,[rsp+8*0]
	jmp LB_4812
LB_4817:
	jmp LB_4823
LB_4822:
	add r14,1 
LB_4823:
	cmp r14,r9
	jge LB_4824
	movzx rax,BYTE [r13+8+r14]
	cmp rax,9 
	jz LB_4822
	cmp rax,10 
	jz LB_4822
	cmp rax,32 
	jz LB_4822
LB_4824
	call GRM_265
	movzx rax,BYTE [r8+6]
	cmp rax,0
	jnz LB_4827
	jmp LB_4828
LB_4827:
	jmp LB_4825
LB_4828:
	lea rsp,[rsp-8*1]
	mov r8,[r8+8]
; .mov_ptn2 2'(= a2◂ [ a29◂ [ a9◂ [ ]]] ) ⊢ 8'(= a2◂ [ a29◂ [ a9◂ [ ]]] )
; .mov_ptn 2'(= a2◂ [ a29◂ [ a9◂ [ ]]] ) ⊢ 8'(= a2◂ [ a29◂ [ a9◂ [ ]]] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_4826
LB_4825:
	lea rsp,[rsp+8*0]
	pop rdi
	pop r9 
	pop r14
	pop r13
	ret
LB_4826:
	mov QWORD [rsp+8*1],r14
	mov r13,QWORD [rsp+16+8*1]
	mov r14,QWORD [rsp+8*1]
	jmp LB_4830
LB_4830
;; rsp=1 , %2552~1'(= r ) %2551~0'(= r ) %2550~8'(= a2◂ [ a29◂ [ a9◂ [ ]]] ) 
; #147 8'(= a2◂ [ a29◂ [ a9◂ [ ]]] ) ⊢ 0(<3)◂8'(= a2◂ [ a29◂ [ a9◂ [ ]]] )
;; rsp=1 , %2553~0(<3)◂8'(= a2◂ [ a29◂ [ a9◂ [ ]]] ) %2552~1'(= r ) %2551~0'(= r ) 
; #22 0(<3)◂8'(= a2◂ [ a29◂ [ a9◂ [ ]]] ) ⊢ 0(<2)◂0(<3)◂8'(= a2◂ [ a29◂ [ a9◂ [ ]]] )
;; rsp=1 , %2554~0(<2)◂0(<3)◂8'(= a2◂ [ a29◂ [ a9◂ [ ]]] ) %2552~1'(= r ) %2551~0'(= r ) 
; ∎ 0(<2)◂0(<3)◂8'(= a2◂ [ a29◂ [ a9◂ [ ]]] )
; .dlt.ptn 1'(= r )
; .dlt.ptn 0'(= r )
; .mov_ptn2 0(<2)◂0(<3)◂8'(= a2◂ [ a29◂ [ a9◂ [ ]]] ) ⊢ 2'(= a3◂ [ a28◂ [ a9◂ [ ]]] )
; .mov_ptn 0(<2)◂0(<3)◂8'(= a2◂ [ a29◂ [ a9◂ [ ]]] ) ⊢ 2'(= a3◂ [ a28◂ [ a9◂ [ ]]] )
	mov rax,QWORD [rsp-8+8*1]
	mov rdi,rax
	mov rax,[SS_LN_TOP]
	mov rsi,[rax]
	mov QWORD [SS_LN_TOP],rsi 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov rdi,rax
	mov rax,[SS_LN_TOP]
	mov rsi,[rax]
	mov QWORD [SS_LN_TOP],rsi 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	lea rsp,[rsp+8*1]
	jmp LB_4829
LB_4829:
	movzx rax,BYTE [r8+6]
	cmp rax,0
	jnz LB_4812
	pop r14
	pop r9
	add rsp,8
	pop r13
	ret
LB_4812:
	jmp LB_4833
LB_4832:
	add r14,1 
LB_4833:
	cmp r14,r9
	jge LB_4834
	movzx rax,BYTE [r13+8+r14]
	cmp rax,9 
	jz LB_4832
	cmp rax,10 
	jz LB_4832
	cmp rax,32 
	jz LB_4832
LB_4834
	call GRM_266
	movzx rax,BYTE [r8+6]
	cmp rax,0
	jnz LB_4837
	jmp LB_4838
LB_4837:
	jmp LB_4835
LB_4838:
	lea rsp,[rsp-8*1]
	mov r8,[r8+8]
; .mov_ptn2 2'(= a29◂ [ a9◂ [ ]] ) ⊢ 8'(= a29◂ [ a9◂ [ ]] )
; .mov_ptn 2'(= a29◂ [ a9◂ [ ]] ) ⊢ 8'(= a29◂ [ a9◂ [ ]] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_4836
LB_4835:
	lea rsp,[rsp+8*0]
	jmp LB_4831
LB_4836:
	jmp LB_4840
LB_4839:
	add r14,1 
LB_4840:
	cmp r14,r9
	jge LB_4841
	movzx rax,BYTE [r13+8+r14]
	cmp rax,9 
	jz LB_4839
	cmp rax,10 
	jz LB_4839
	cmp rax,32 
	jz LB_4839
LB_4841
	call GRM_264
	movzx rax,BYTE [r8+6]
	cmp rax,0
	jnz LB_4844
	jmp LB_4845
LB_4844:
	jmp LB_4842
LB_4845:
	lea rsp,[rsp-8*1]
	mov r8,[r8+8]
; .mov_ptn2 2'(= a28◂ [ a9◂ [ ]] ) ⊢ 9'(= a28◂ [ a9◂ [ ]] )
; .mov_ptn 2'(= a28◂ [ a9◂ [ ]] ) ⊢ 9'(= a28◂ [ a9◂ [ ]] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_4843
LB_4842:
	lea rsp,[rsp+8*1]
	jmp LB_4831
LB_4843:
	mov QWORD [rsp+8*2],r14
	mov r13,QWORD [rsp+16+8*2]
	mov r14,QWORD [rsp+8*2]
	jmp LB_4847
LB_4847
;; rsp=2 , %2558~1'(= r ) %2557~0'(= r ) %2556~9'(= a28◂ [ a9◂ [ ]] ) %2555~8'(= a29◂ [ a9◂ [ ]] ) 
; #146 { 8'(= a29◂ [ a9◂ [ ]] ) 9'(= a28◂ [ a9◂ [ ]] ) } ⊢ 1(<3)◂{ 8'(= a29◂ [ a9◂ [ ]] ) 9'(= a28◂ [ a9◂ [ ]] ) }
;; rsp=2 , %2559~1(<3)◂{ 8'(= a29◂ [ a9◂ [ ]] ) 9'(= a28◂ [ a9◂ [ ]] ) } %2558~1'(= r ) %2557~0'(= r ) 
; #22 1(<3)◂{ 8'(= a29◂ [ a9◂ [ ]] ) 9'(= a28◂ [ a9◂ [ ]] ) } ⊢ 0(<2)◂1(<3)◂{ 8'(= a29◂ [ a9◂ [ ]] ) 9'(= a28◂ [ a9◂ [ ]] ) }
;; rsp=2 , %2560~0(<2)◂1(<3)◂{ 8'(= a29◂ [ a9◂ [ ]] ) 9'(= a28◂ [ a9◂ [ ]] ) } %2558~1'(= r ) %2557~0'(= r ) 
; ∎ 0(<2)◂1(<3)◂{ 8'(= a29◂ [ a9◂ [ ]] ) 9'(= a28◂ [ a9◂ [ ]] ) }
; .dlt.ptn 1'(= r )
; .dlt.ptn 0'(= r )
; .mov_ptn2 0(<2)◂1(<3)◂{ 8'(= a29◂ [ a9◂ [ ]] ) 9'(= a28◂ [ a9◂ [ ]] ) } ⊢ 2'(= a3◂ [ a28◂ [ a9◂ [ ]]] )
; .mov_ptn 0(<2)◂1(<3)◂{ 8'(= a29◂ [ a9◂ [ ]] ) 9'(= a28◂ [ a9◂ [ ]] ) } ⊢ 2'(= a3◂ [ a28◂ [ a9◂ [ ]]] )
	mov rax,[SS_RCD_2_TOP]
	mov rsi,[rax] 
	mov QWORD [SS_RCD_2_TOP],rsi
	mov QWORD [rax],0
	mov r13,rax
	mov rax,QWORD [rsp-8+8*2]
	mov rdi,r13
	mov QWORD [rdi+8+8*0],rax
	mov rax,QWORD [rsp-8+8*1]
	mov rdi,r13
	mov QWORD [rdi+8+8*1],rax
	mov rax,r13
	mov BYTE [rax+6],1
	mov rdi,rax
	mov rax,[SS_LN_TOP]
	mov rsi,[rax]
	mov QWORD [SS_LN_TOP],rsi 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	lea rsp,[rsp+8*2]
	jmp LB_4846
LB_4846:
	movzx rax,BYTE [r8+6]
	cmp rax,0
	jnz LB_4831
	pop r14
	pop r9
	add rsp,8
	pop r13
	ret
LB_4831:
	mov QWORD [rsp+8*0],r14
	mov r13,QWORD [rsp+16+8*0]
	mov r14,QWORD [rsp+8*0]
	jmp LB_4850
LB_4850
;; rsp=0 , %2562~1'(= r ) %2561~0'(= r ) 
; #145 { } ⊢ 2(<3)◂{ }
;; rsp=0 , %2563~2(<3)◂{ } %2562~1'(= r ) %2561~0'(= r ) 
; #22 2(<3)◂{ } ⊢ 0(<2)◂2(<3)◂{ }
;; rsp=0 , %2564~0(<2)◂2(<3)◂{ } %2562~1'(= r ) %2561~0'(= r ) 
; ∎ 0(<2)◂2(<3)◂{ }
; .dlt.ptn 1'(= r )
; .dlt.ptn 0'(= r )
; .mov_ptn2 0(<2)◂2(<3)◂{ } ⊢ 2'(= a3◂ [ a28◂ [ a9◂ [ ]]] )
; .mov_ptn 0(<2)◂2(<3)◂{ } ⊢ 2'(= a3◂ [ a28◂ [ a9◂ [ ]]] )
	mov rax,unt 
	mov rax,unt_2
	mov rdi,rax
	mov rax,[SS_LN_TOP]
	mov rsi,[rax]
	mov QWORD [SS_LN_TOP],rsi 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	jmp LB_4849
LB_4849:
	movzx rax,BYTE [r8+6]
	cmp rax,0
	jnz LB_4848
	pop r14
	pop r9
	add rsp,8
	pop r13
	ret
LB_4848:
	pop rdi
	pop r9 
	pop r14
	pop r13
	ret
ETR_265:
	mov r9,0x0000_ffff_ffff_ffff
	and r9,[r13]
	call GRM_265
	ret
GRM_265:
	sub rsp,32
	mov QWORD [rsp+24],r13
	mov QWORD [rsp+16],r14 
	mov QWORD [rsp+8],r9
	jmp LB_4853
LB_4852:
	add r14,1 
LB_4853:
	cmp r14,r9
	jge LB_4854
	movzx rax,BYTE [r13+8+r14]
	cmp rax,9 
	jz LB_4852
	cmp rax,10 
	jz LB_4852
	cmp rax,32 
	jz LB_4852
LB_4854
	call GRM_266
	movzx rax,BYTE [r8+6]
	cmp rax,0
	jnz LB_4857
	jmp LB_4858
LB_4857:
	jmp LB_4855
LB_4858:
	lea rsp,[rsp-8*1]
	mov r8,[r8+8]
; .mov_ptn2 2'(= a29◂ [ a9◂ [ ]] ) ⊢ 8'(= a29◂ [ a9◂ [ ]] )
; .mov_ptn 2'(= a29◂ [ a9◂ [ ]] ) ⊢ 8'(= a29◂ [ a9◂ [ ]] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_4856
LB_4855:
	lea rsp,[rsp+8*0]
	jmp LB_4851
LB_4856:
	jmp LB_4860
LB_4859:
	add r14,1 
LB_4860:
	cmp r14,r9
	jge LB_4861
	movzx rax,BYTE [r13+8+r14]
	cmp rax,9 
	jz LB_4859
	cmp rax,10 
	jz LB_4859
	cmp rax,32 
	jz LB_4859
LB_4861
	call GRM_265
	movzx rax,BYTE [r8+6]
	cmp rax,0
	jnz LB_4864
	jmp LB_4865
LB_4864:
	jmp LB_4862
LB_4865:
	lea rsp,[rsp-8*1]
	mov r8,[r8+8]
; .mov_ptn2 2'(= a2◂ [ a29◂ [ a9◂ [ ]]] ) ⊢ 9'(= a2◂ [ a29◂ [ a9◂ [ ]]] )
; .mov_ptn 2'(= a2◂ [ a29◂ [ a9◂ [ ]]] ) ⊢ 9'(= a2◂ [ a29◂ [ a9◂ [ ]]] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_4863
LB_4862:
	lea rsp,[rsp+8*1]
	jmp LB_4851
LB_4863:
	mov QWORD [rsp+8*2],r14
	mov r13,QWORD [rsp+16+8*2]
	mov r14,QWORD [rsp+8*2]
	jmp LB_4867
LB_4867
;; rsp=2 , %2568~1'(= r ) %2567~0'(= r ) %2566~9'(= a2◂ [ a29◂ [ a9◂ [ ]]] ) %2565~8'(= a29◂ [ a9◂ [ ]] ) 
; #21 { 8'(= a29◂ [ a9◂ [ ]] ) 9'(= a2◂ [ a29◂ [ a9◂ [ ]]] ) } ⊢ 0(<2)◂{ 8'(= a29◂ [ a9◂ [ ]] ) 9'(= a2◂ [ a29◂ [ a9◂ [ ]]] ) }
;; rsp=2 , %2569~0(<2)◂{ 8'(= a29◂ [ a9◂ [ ]] ) 9'(= a2◂ [ a29◂ [ a9◂ [ ]]] ) } %2568~1'(= r ) %2567~0'(= r ) 
; #22 0(<2)◂{ 8'(= a29◂ [ a9◂ [ ]] ) 9'(= a2◂ [ a29◂ [ a9◂ [ ]]] ) } ⊢ 0(<2)◂0(<2)◂{ 8'(= a29◂ [ a9◂ [ ]] ) 9'(= a2◂ [ a29◂ [ a9◂ [ ]]] ) }
;; rsp=2 , %2570~0(<2)◂0(<2)◂{ 8'(= a29◂ [ a9◂ [ ]] ) 9'(= a2◂ [ a29◂ [ a9◂ [ ]]] ) } %2568~1'(= r ) %2567~0'(= r ) 
; ∎ 0(<2)◂0(<2)◂{ 8'(= a29◂ [ a9◂ [ ]] ) 9'(= a2◂ [ a29◂ [ a9◂ [ ]]] ) }
; .dlt.ptn 1'(= r )
; .dlt.ptn 0'(= r )
; .mov_ptn2 0(<2)◂0(<2)◂{ 8'(= a29◂ [ a9◂ [ ]] ) 9'(= a2◂ [ a29◂ [ a9◂ [ ]]] ) } ⊢ 2'(= a3◂ [ a2◂ [ a29◂ [ a9◂ [ ]]]] )
; .mov_ptn 0(<2)◂0(<2)◂{ 8'(= a29◂ [ a9◂ [ ]] ) 9'(= a2◂ [ a29◂ [ a9◂ [ ]]] ) } ⊢ 2'(= a3◂ [ a2◂ [ a29◂ [ a9◂ [ ]]]] )
	mov rax,[SS_RCD_2_TOP]
	mov rsi,[rax] 
	mov QWORD [SS_RCD_2_TOP],rsi
	mov QWORD [rax],0
	mov r13,rax
	mov rax,QWORD [rsp-8+8*2]
	mov rdi,r13
	mov QWORD [rdi+8+8*0],rax
	mov rax,QWORD [rsp-8+8*1]
	mov rdi,r13
	mov QWORD [rdi+8+8*1],rax
	mov rax,r13
	mov BYTE [rax+6],0
	mov rdi,rax
	mov rax,[SS_LN_TOP]
	mov rsi,[rax]
	mov QWORD [SS_LN_TOP],rsi 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	lea rsp,[rsp+8*2]
	jmp LB_4866
LB_4866:
	movzx rax,BYTE [r8+6]
	cmp rax,0
	jnz LB_4851
	pop r14
	pop r9
	add rsp,8
	pop r13
	ret
LB_4851:
	mov QWORD [rsp+8*0],r14
	mov r13,QWORD [rsp+16+8*0]
	mov r14,QWORD [rsp+8*0]
	jmp LB_4870
LB_4870
;; rsp=0 , %2572~1'(= r ) %2571~0'(= r ) 
; #20 { } ⊢ 1(<2)◂{ }
;; rsp=0 , %2573~1(<2)◂{ } %2572~1'(= r ) %2571~0'(= r ) 
; #22 1(<2)◂{ } ⊢ 0(<2)◂1(<2)◂{ }
;; rsp=0 , %2574~0(<2)◂1(<2)◂{ } %2572~1'(= r ) %2571~0'(= r ) 
; ∎ 0(<2)◂1(<2)◂{ }
; .dlt.ptn 1'(= r )
; .dlt.ptn 0'(= r )
; .mov_ptn2 0(<2)◂1(<2)◂{ } ⊢ 2'(= a3◂ [ a2◂ [ a29◂ [ a9◂ [ ]]]] )
; .mov_ptn 0(<2)◂1(<2)◂{ } ⊢ 2'(= a3◂ [ a2◂ [ a29◂ [ a9◂ [ ]]]] )
	mov rax,unt 
	mov rax,unt_1
	mov rdi,rax
	mov rax,[SS_LN_TOP]
	mov rsi,[rax]
	mov QWORD [SS_LN_TOP],rsi 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	jmp LB_4869
LB_4869:
	movzx rax,BYTE [r8+6]
	cmp rax,0
	jnz LB_4868
	pop r14
	pop r9
	add rsp,8
	pop r13
	ret
LB_4868:
	pop rdi
	pop r9 
	pop r14
	pop r13
	ret
ETR_266:
	mov r9,0x0000_ffff_ffff_ffff
	and r9,[r13]
	call GRM_266
	ret
GRM_266:
	sub rsp,32
	mov QWORD [rsp+24],r13
	mov QWORD [rsp+16],r14 
	mov QWORD [rsp+8],r9
	jmp LB_4873
LB_4872:
	add r14,1 
LB_4873:
	cmp r14,r9
	jge LB_4874
	movzx rax,BYTE [r13+8+r14]
	cmp rax,9 
	jz LB_4872
	cmp rax,10 
	jz LB_4872
	cmp rax,32 
	jz LB_4872
LB_4874
	lea rax,[r14+3]
	cmp rax,r9
	jg LB_4877
	jmp LB_4878
LB_4877:
	mov r8,unt_1
	jmp LB_4875
LB_4878:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],226
	jnz LB_4879
	cmp BYTE [rdi+1],159
	jnz LB_4879
	cmp BYTE [rdi+2],166
	jnz LB_4879
	jmp LB_4880
LB_4879:
	mov r8,unt_1
	jmp LB_4875
LB_4880:
	add r14,3
	jmp LB_4876
LB_4875:
	lea rsp,[rsp+8*0]
	jmp LB_4871
LB_4876:
	jmp LB_4882
LB_4881:
	add r14,1 
LB_4882:
	cmp r14,r9
	jge LB_4883
	movzx rax,BYTE [r13+8+r14]
	cmp rax,9 
	jz LB_4881
	cmp rax,10 
	jz LB_4881
	cmp rax,32 
	jz LB_4881
LB_4883
	call GRM_267
	movzx rax,BYTE [r8+6]
	cmp rax,0
	jnz LB_4886
	jmp LB_4887
LB_4886:
	jmp LB_4884
LB_4887:
	lea rsp,[rsp-8*1]
	mov r8,[r8+8]
; .mov_ptn2 2'(= a30◂ [ a9◂ [ ]] ) ⊢ 8'(= a30◂ [ a9◂ [ ]] )
; .mov_ptn 2'(= a30◂ [ a9◂ [ ]] ) ⊢ 8'(= a30◂ [ a9◂ [ ]] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_4885
LB_4884:
	lea rsp,[rsp+8*0]
	jmp LB_4871
LB_4885:
	jmp LB_4889
LB_4888:
	add r14,1 
LB_4889:
	cmp r14,r9
	jge LB_4890
	movzx rax,BYTE [r13+8+r14]
	cmp rax,9 
	jz LB_4888
	cmp rax,10 
	jz LB_4888
	cmp rax,32 
	jz LB_4888
LB_4890
	lea rax,[r14+3]
	cmp rax,r9
	jg LB_4893
	jmp LB_4894
LB_4893:
	mov r8,unt_1
	jmp LB_4891
LB_4894:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],226
	jnz LB_4895
	cmp BYTE [rdi+1],159
	jnz LB_4895
	cmp BYTE [rdi+2],167
	jnz LB_4895
	jmp LB_4896
LB_4895:
	mov r8,unt_1
	jmp LB_4891
LB_4896:
	add r14,3
	jmp LB_4892
LB_4891:
	lea rsp,[rsp+8*1]
	jmp LB_4871
LB_4892:
	mov QWORD [rsp+8*1],r14
	mov r13,QWORD [rsp+16+8*1]
	mov r14,QWORD [rsp+8*1]
	jmp LB_4898
LB_4898
;; rsp=1 , %2577~1'(= r ) %2576~0'(= r ) %2575~8'(= a30◂ [ a9◂ [ ]] ) 
; #144 8'(= a30◂ [ a9◂ [ ]] ) ⊢ 0(<2)◂8'(= a30◂ [ a9◂ [ ]] )
;; rsp=1 , %2578~0(<2)◂8'(= a30◂ [ a9◂ [ ]] ) %2577~1'(= r ) %2576~0'(= r ) 
; #22 0(<2)◂8'(= a30◂ [ a9◂ [ ]] ) ⊢ 0(<2)◂0(<2)◂8'(= a30◂ [ a9◂ [ ]] )
;; rsp=1 , %2579~0(<2)◂0(<2)◂8'(= a30◂ [ a9◂ [ ]] ) %2577~1'(= r ) %2576~0'(= r ) 
; ∎ 0(<2)◂0(<2)◂8'(= a30◂ [ a9◂ [ ]] )
; .dlt.ptn 1'(= r )
; .dlt.ptn 0'(= r )
; .mov_ptn2 0(<2)◂0(<2)◂8'(= a30◂ [ a9◂ [ ]] ) ⊢ 2'(= a3◂ [ a29◂ [ a9◂ [ ]]] )
; .mov_ptn 0(<2)◂0(<2)◂8'(= a30◂ [ a9◂ [ ]] ) ⊢ 2'(= a3◂ [ a29◂ [ a9◂ [ ]]] )
	mov rax,QWORD [rsp-8+8*1]
	mov rdi,rax
	mov rax,[SS_LN_TOP]
	mov rsi,[rax]
	mov QWORD [SS_LN_TOP],rsi 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov rdi,rax
	mov rax,[SS_LN_TOP]
	mov rsi,[rax]
	mov QWORD [SS_LN_TOP],rsi 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	lea rsp,[rsp+8*1]
	jmp LB_4897
LB_4897:
	movzx rax,BYTE [r8+6]
	cmp rax,0
	jnz LB_4871
	pop r14
	pop r9
	add rsp,8
	pop r13
	ret
LB_4871:
	jmp LB_4901
LB_4900:
	add r14,1 
LB_4901:
	cmp r14,r9
	jge LB_4902
	movzx rax,BYTE [r13+8+r14]
	cmp rax,9 
	jz LB_4900
	cmp rax,10 
	jz LB_4900
	cmp rax,32 
	jz LB_4900
LB_4902
	call GRM_267
	movzx rax,BYTE [r8+6]
	cmp rax,0
	jnz LB_4905
	jmp LB_4906
LB_4905:
	jmp LB_4903
LB_4906:
	lea rsp,[rsp-8*1]
	mov r8,[r8+8]
; .mov_ptn2 2'(= a30◂ [ a9◂ [ ]] ) ⊢ 8'(= a30◂ [ a9◂ [ ]] )
; .mov_ptn 2'(= a30◂ [ a9◂ [ ]] ) ⊢ 8'(= a30◂ [ a9◂ [ ]] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_4904
LB_4903:
	lea rsp,[rsp+8*0]
	jmp LB_4899
LB_4904:
	mov QWORD [rsp+8*1],r14
	mov r13,QWORD [rsp+16+8*1]
	mov r14,QWORD [rsp+8*1]
	jmp LB_4908
LB_4908
;; rsp=1 , %2582~1'(= r ) %2581~0'(= r ) %2580~8'(= a30◂ [ a9◂ [ ]] ) 
; #143 8'(= a30◂ [ a9◂ [ ]] ) ⊢ 1(<2)◂8'(= a30◂ [ a9◂ [ ]] )
;; rsp=1 , %2583~1(<2)◂8'(= a30◂ [ a9◂ [ ]] ) %2582~1'(= r ) %2581~0'(= r ) 
; #22 1(<2)◂8'(= a30◂ [ a9◂ [ ]] ) ⊢ 0(<2)◂1(<2)◂8'(= a30◂ [ a9◂ [ ]] )
;; rsp=1 , %2584~0(<2)◂1(<2)◂8'(= a30◂ [ a9◂ [ ]] ) %2582~1'(= r ) %2581~0'(= r ) 
; ∎ 0(<2)◂1(<2)◂8'(= a30◂ [ a9◂ [ ]] )
; .dlt.ptn 1'(= r )
; .dlt.ptn 0'(= r )
; .mov_ptn2 0(<2)◂1(<2)◂8'(= a30◂ [ a9◂ [ ]] ) ⊢ 2'(= a3◂ [ a29◂ [ a9◂ [ ]]] )
; .mov_ptn 0(<2)◂1(<2)◂8'(= a30◂ [ a9◂ [ ]] ) ⊢ 2'(= a3◂ [ a29◂ [ a9◂ [ ]]] )
	mov rax,QWORD [rsp-8+8*1]
	mov rdi,rax
	mov rax,[SS_LN_TOP]
	mov rsi,[rax]
	mov QWORD [SS_LN_TOP],rsi 
	mov QWORD [rax],0
	mov BYTE [rax+6],1
	mov QWORD [rax+8],rdi
	mov rdi,rax
	mov rax,[SS_LN_TOP]
	mov rsi,[rax]
	mov QWORD [SS_LN_TOP],rsi 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	lea rsp,[rsp+8*1]
	jmp LB_4907
LB_4907:
	movzx rax,BYTE [r8+6]
	cmp rax,0
	jnz LB_4899
	pop r14
	pop r9
	add rsp,8
	pop r13
	ret
LB_4899:
	pop rdi
	pop r9 
	pop r14
	pop r13
	ret
ETR_267:
	mov r9,0x0000_ffff_ffff_ffff
	and r9,[r13]
	call GRM_267
	ret
GRM_267:
	sub rsp,32
	mov QWORD [rsp+24],r13
	mov QWORD [rsp+16],r14 
	mov QWORD [rsp+8],r9
	jmp LB_4911
LB_4910:
	add r14,1 
LB_4911:
	cmp r14,r9
	jge LB_4912
	movzx rax,BYTE [r13+8+r14]
	cmp rax,9 
	jz LB_4910
	cmp rax,10 
	jz LB_4910
	cmp rax,32 
	jz LB_4910
LB_4912
	call GRM_67
	movzx rax,BYTE [r8+6]
	cmp rax,0
	jnz LB_4915
	jmp LB_4916
LB_4915:
	jmp LB_4913
LB_4916:
	lea rsp,[rsp-8*1]
; .mov_ptn2 2'(= {| l |} ) ⊢ 8'(= {| l |} )
; .mov_ptn 2'(= {| l |} ) ⊢ 8'(= {| l |} )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_4914
LB_4913:
	lea rsp,[rsp+8*0]
	jmp LB_4909
LB_4914:
	mov QWORD [rsp+8*1],r14
	mov r13,QWORD [rsp+16+8*1]
	mov r14,QWORD [rsp+8*1]
	jmp LB_4918
LB_4918
;; rsp=1 , %2587~1'(= r ) %2586~0'(= r ) %2585~8'(= {| l |} ) 
; #141 8'(= {| l |} ) ⊢ 1(<2)◂8'(= {| l |} )
;; rsp=1 , %2588~1(<2)◂8'(= {| l |} ) %2587~1'(= r ) %2586~0'(= r ) 
; #22 1(<2)◂8'(= {| l |} ) ⊢ 0(<2)◂1(<2)◂8'(= {| l |} )
;; rsp=1 , %2589~0(<2)◂1(<2)◂8'(= {| l |} ) %2587~1'(= r ) %2586~0'(= r ) 
; ∎ 0(<2)◂1(<2)◂8'(= {| l |} )
; .dlt.ptn 1'(= r )
; .dlt.ptn 0'(= r )
; .mov_ptn2 0(<2)◂1(<2)◂8'(= {| l |} ) ⊢ 2'(= a3◂ [ a30◂ [ a9◂ [ ]]] )
; .mov_ptn 0(<2)◂1(<2)◂8'(= {| l |} ) ⊢ 2'(= a3◂ [ a30◂ [ a9◂ [ ]]] )
	mov rax,QWORD [rsp-8+8*1]
	mov BYTE [rax+6],1
	mov rdi,rax
	mov rax,[SS_LN_TOP]
	mov rsi,[rax]
	mov QWORD [SS_LN_TOP],rsi 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	lea rsp,[rsp+8*1]
	jmp LB_4917
LB_4917:
	movzx rax,BYTE [r8+6]
	cmp rax,0
	jnz LB_4909
	pop r14
	pop r9
	add rsp,8
	pop r13
	ret
LB_4909:
	jmp LB_4921
LB_4920:
	add r14,1 
LB_4921:
	cmp r14,r9
	jge LB_4922
	movzx rax,BYTE [r13+8+r14]
	cmp rax,9 
	jz LB_4920
	cmp rax,10 
	jz LB_4920
	cmp rax,32 
	jz LB_4920
LB_4922
	call GRM_189
	movzx rax,BYTE [r8+6]
	cmp rax,0
	jnz LB_4925
	jmp LB_4926
LB_4925:
	jmp LB_4923
LB_4926:
	lea rsp,[rsp-8*1]
	mov r8,[r8+8]
; .mov_ptn2 2'(= a9◂ [ ] ) ⊢ 8'(= a9◂ [ ] )
; .mov_ptn 2'(= a9◂ [ ] ) ⊢ 8'(= a9◂ [ ] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_4924
LB_4923:
	lea rsp,[rsp+8*0]
	jmp LB_4919
LB_4924:
	mov QWORD [rsp+8*1],r14
	mov r13,QWORD [rsp+16+8*1]
	mov r14,QWORD [rsp+8*1]
	jmp LB_4928
LB_4928
;; rsp=1 , %2592~1'(= r ) %2591~0'(= r ) %2590~8'(= a9◂ [ ] ) 
; #142 8'(= a9◂ [ ] ) ⊢ 0(<2)◂8'(= a9◂ [ ] )
;; rsp=1 , %2593~0(<2)◂8'(= a9◂ [ ] ) %2592~1'(= r ) %2591~0'(= r ) 
; #22 0(<2)◂8'(= a9◂ [ ] ) ⊢ 0(<2)◂0(<2)◂8'(= a9◂ [ ] )
;; rsp=1 , %2594~0(<2)◂0(<2)◂8'(= a9◂ [ ] ) %2592~1'(= r ) %2591~0'(= r ) 
; ∎ 0(<2)◂0(<2)◂8'(= a9◂ [ ] )
; .dlt.ptn 1'(= r )
; .dlt.ptn 0'(= r )
; .mov_ptn2 0(<2)◂0(<2)◂8'(= a9◂ [ ] ) ⊢ 2'(= a3◂ [ a30◂ [ a9◂ [ ]]] )
; .mov_ptn 0(<2)◂0(<2)◂8'(= a9◂ [ ] ) ⊢ 2'(= a3◂ [ a30◂ [ a9◂ [ ]]] )
	mov rax,QWORD [rsp-8+8*1]
	mov rdi,rax
	mov rax,[SS_LN_TOP]
	mov rsi,[rax]
	mov QWORD [SS_LN_TOP],rsi 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov rdi,rax
	mov rax,[SS_LN_TOP]
	mov rsi,[rax]
	mov QWORD [SS_LN_TOP],rsi 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	lea rsp,[rsp+8*1]
	jmp LB_4927
LB_4927:
	movzx rax,BYTE [r8+6]
	cmp rax,0
	jnz LB_4919
	pop r14
	pop r9
	add rsp,8
	pop r13
	ret
LB_4919:
	pop rdi
	pop r9 
	pop r14
	pop r13
	ret
ETR_268:
	mov r9,0x0000_ffff_ffff_ffff
	and r9,[r13]
	call GRM_268
	ret
GRM_268:
	sub rsp,32
	mov QWORD [rsp+24],r13
	mov QWORD [rsp+16],r14 
	mov QWORD [rsp+8],r9
	jmp LB_4931
LB_4930:
	add r14,1 
LB_4931:
	cmp r14,r9
	jge LB_4932
	movzx rax,BYTE [r13+8+r14]
	cmp rax,9 
	jz LB_4930
	cmp rax,10 
	jz LB_4930
	cmp rax,32 
	jz LB_4930
LB_4932
	lea rax,[r14+4]
	cmp rax,r9
	jg LB_4935
	jmp LB_4936
LB_4935:
	mov r8,unt_1
	jmp LB_4933
LB_4936:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],226
	jnz LB_4937
	cmp BYTE [rdi+1],136
	jnz LB_4937
	cmp BYTE [rdi+2],144
	jnz LB_4937
	cmp BYTE [rdi+3],42
	jnz LB_4937
	jmp LB_4938
LB_4937:
	mov r8,unt_1
	jmp LB_4933
LB_4938:
	add r14,4
	jmp LB_4934
LB_4933:
	lea rsp,[rsp+8*0]
	jmp LB_4929
LB_4934:
	mov QWORD [rsp+8*0],r14
	mov r13,QWORD [rsp+16+8*0]
	mov r14,QWORD [rsp+8*0]
	jmp LB_4940
LB_4940
;; rsp=0 , %2596~1'(= r ) %2595~0'(= r ) 
; #149 { } ⊢ 1(<3)◂{ }
;; rsp=0 , %2597~1(<3)◂{ } %2596~1'(= r ) %2595~0'(= r ) 
; #22 1(<3)◂{ } ⊢ 0(<2)◂1(<3)◂{ }
;; rsp=0 , %2598~0(<2)◂1(<3)◂{ } %2596~1'(= r ) %2595~0'(= r ) 
; ∎ 0(<2)◂1(<3)◂{ }
; .dlt.ptn 1'(= r )
; .dlt.ptn 0'(= r )
; .mov_ptn2 0(<2)◂1(<3)◂{ } ⊢ 2'(= a3◂ [ a27◂ [ ]] )
; .mov_ptn 0(<2)◂1(<3)◂{ } ⊢ 2'(= a3◂ [ a27◂ [ ]] )
	mov rax,unt 
	mov rax,unt_1
	mov rdi,rax
	mov rax,[SS_LN_TOP]
	mov rsi,[rax]
	mov QWORD [SS_LN_TOP],rsi 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	jmp LB_4939
LB_4939:
	movzx rax,BYTE [r8+6]
	cmp rax,0
	jnz LB_4929
	pop r14
	pop r9
	add rsp,8
	pop r13
	ret
LB_4929:
	jmp LB_4943
LB_4942:
	add r14,1 
LB_4943:
	cmp r14,r9
	jge LB_4944
	movzx rax,BYTE [r13+8+r14]
	cmp rax,9 
	jz LB_4942
	cmp rax,10 
	jz LB_4942
	cmp rax,32 
	jz LB_4942
LB_4944
	lea rax,[r14+4]
	cmp rax,r9
	jg LB_4947
	jmp LB_4948
LB_4947:
	mov r8,unt_1
	jmp LB_4945
LB_4948:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],226
	jnz LB_4949
	cmp BYTE [rdi+1],136
	jnz LB_4949
	cmp BYTE [rdi+2],144
	jnz LB_4949
	cmp BYTE [rdi+3],35
	jnz LB_4949
	jmp LB_4950
LB_4949:
	mov r8,unt_1
	jmp LB_4945
LB_4950:
	add r14,4
	jmp LB_4946
LB_4945:
	lea rsp,[rsp+8*0]
	jmp LB_4941
LB_4946:
	mov QWORD [rsp+8*0],r14
	mov r13,QWORD [rsp+16+8*0]
	mov r14,QWORD [rsp+8*0]
	jmp LB_4952
LB_4952
;; rsp=0 , %2600~1'(= r ) %2599~0'(= r ) 
; #148 { } ⊢ 2(<3)◂{ }
;; rsp=0 , %2601~2(<3)◂{ } %2600~1'(= r ) %2599~0'(= r ) 
; #22 2(<3)◂{ } ⊢ 0(<2)◂2(<3)◂{ }
;; rsp=0 , %2602~0(<2)◂2(<3)◂{ } %2600~1'(= r ) %2599~0'(= r ) 
; ∎ 0(<2)◂2(<3)◂{ }
; .dlt.ptn 1'(= r )
; .dlt.ptn 0'(= r )
; .mov_ptn2 0(<2)◂2(<3)◂{ } ⊢ 2'(= a3◂ [ a27◂ [ ]] )
; .mov_ptn 0(<2)◂2(<3)◂{ } ⊢ 2'(= a3◂ [ a27◂ [ ]] )
	mov rax,unt 
	mov rax,unt_2
	mov rdi,rax
	mov rax,[SS_LN_TOP]
	mov rsi,[rax]
	mov QWORD [SS_LN_TOP],rsi 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	jmp LB_4951
LB_4951:
	movzx rax,BYTE [r8+6]
	cmp rax,0
	jnz LB_4941
	pop r14
	pop r9
	add rsp,8
	pop r13
	ret
LB_4941:
	jmp LB_4955
LB_4954:
	add r14,1 
LB_4955:
	cmp r14,r9
	jge LB_4956
	movzx rax,BYTE [r13+8+r14]
	cmp rax,9 
	jz LB_4954
	cmp rax,10 
	jz LB_4954
	cmp rax,32 
	jz LB_4954
LB_4956
	lea rax,[r14+3]
	cmp rax,r9
	jg LB_4959
	jmp LB_4960
LB_4959:
	mov r8,unt_1
	jmp LB_4957
LB_4960:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],226
	jnz LB_4961
	cmp BYTE [rdi+1],136
	jnz LB_4961
	cmp BYTE [rdi+2],144
	jnz LB_4961
	jmp LB_4962
LB_4961:
	mov r8,unt_1
	jmp LB_4957
LB_4962:
	add r14,3
	jmp LB_4958
LB_4957:
	lea rsp,[rsp+8*0]
	jmp LB_4953
LB_4958:
	mov QWORD [rsp+8*0],r14
	mov r13,QWORD [rsp+16+8*0]
	mov r14,QWORD [rsp+8*0]
	jmp LB_4964
LB_4964
;; rsp=0 , %2604~1'(= r ) %2603~0'(= r ) 
; #150 { } ⊢ 0(<3)◂{ }
;; rsp=0 , %2605~0(<3)◂{ } %2604~1'(= r ) %2603~0'(= r ) 
; #22 0(<3)◂{ } ⊢ 0(<2)◂0(<3)◂{ }
;; rsp=0 , %2606~0(<2)◂0(<3)◂{ } %2604~1'(= r ) %2603~0'(= r ) 
; ∎ 0(<2)◂0(<3)◂{ }
; .dlt.ptn 1'(= r )
; .dlt.ptn 0'(= r )
; .mov_ptn2 0(<2)◂0(<3)◂{ } ⊢ 2'(= a3◂ [ a27◂ [ ]] )
; .mov_ptn 0(<2)◂0(<3)◂{ } ⊢ 2'(= a3◂ [ a27◂ [ ]] )
	mov rax,unt 
	mov rax,unt_0
	mov rdi,rax
	mov rax,[SS_LN_TOP]
	mov rsi,[rax]
	mov QWORD [SS_LN_TOP],rsi 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	jmp LB_4963
LB_4963:
	movzx rax,BYTE [r8+6]
	cmp rax,0
	jnz LB_4953
	pop r14
	pop r9
	add rsp,8
	pop r13
	ret
LB_4953:
	pop rdi
	pop r9 
	pop r14
	pop r13
	ret
ETR_269:
	mov r9,0x0000_ffff_ffff_ffff
	and r9,[r13]
	call GRM_269
	ret
GRM_269:
	sub rsp,32
	mov QWORD [rsp+24],r13
	mov QWORD [rsp+16],r14 
	mov QWORD [rsp+8],r9
	jmp LB_4967
LB_4966:
	add r14,1 
LB_4967:
	cmp r14,r9
	jge LB_4968
	movzx rax,BYTE [r13+8+r14]
	cmp rax,9 
	jz LB_4966
	cmp rax,10 
	jz LB_4966
	cmp rax,32 
	jz LB_4966
LB_4968
	lea rax,[r14+5]
	cmp rax,r9
	jg LB_4971
	jmp LB_4972
LB_4971:
	mov r8,unt_1
	jmp LB_4969
LB_4972:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],226
	jnz LB_4973
	cmp BYTE [rdi+1],136
	jnz LB_4973
	cmp BYTE [rdi+2],144
	jnz LB_4973
	cmp BYTE [rdi+3],46
	jnz LB_4973
	cmp BYTE [rdi+4],42
	jnz LB_4973
	jmp LB_4974
LB_4973:
	mov r8,unt_1
	jmp LB_4969
LB_4974:
	add r14,5
	jmp LB_4970
LB_4969:
	lea rsp,[rsp+8*0]
	jmp LB_4965
LB_4970:
	mov QWORD [rsp+8*0],r14
	mov r13,QWORD [rsp+16+8*0]
	mov r14,QWORD [rsp+8*0]
	jmp LB_4976
LB_4976
;; rsp=0 , %2608~1'(= r ) %2607~0'(= r ) 
; #149 { } ⊢ 1(<3)◂{ }
;; rsp=0 , %2609~1(<3)◂{ } %2608~1'(= r ) %2607~0'(= r ) 
; #22 1(<3)◂{ } ⊢ 0(<2)◂1(<3)◂{ }
;; rsp=0 , %2610~0(<2)◂1(<3)◂{ } %2608~1'(= r ) %2607~0'(= r ) 
; ∎ 0(<2)◂1(<3)◂{ }
; .dlt.ptn 1'(= r )
; .dlt.ptn 0'(= r )
; .mov_ptn2 0(<2)◂1(<3)◂{ } ⊢ 2'(= a3◂ [ a27◂ [ ]] )
; .mov_ptn 0(<2)◂1(<3)◂{ } ⊢ 2'(= a3◂ [ a27◂ [ ]] )
	mov rax,unt 
	mov rax,unt_1
	mov rdi,rax
	mov rax,[SS_LN_TOP]
	mov rsi,[rax]
	mov QWORD [SS_LN_TOP],rsi 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	jmp LB_4975
LB_4975:
	movzx rax,BYTE [r8+6]
	cmp rax,0
	jnz LB_4965
	pop r14
	pop r9
	add rsp,8
	pop r13
	ret
LB_4965:
	jmp LB_4979
LB_4978:
	add r14,1 
LB_4979:
	cmp r14,r9
	jge LB_4980
	movzx rax,BYTE [r13+8+r14]
	cmp rax,9 
	jz LB_4978
	cmp rax,10 
	jz LB_4978
	cmp rax,32 
	jz LB_4978
LB_4980
	lea rax,[r14+5]
	cmp rax,r9
	jg LB_4983
	jmp LB_4984
LB_4983:
	mov r8,unt_1
	jmp LB_4981
LB_4984:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],226
	jnz LB_4985
	cmp BYTE [rdi+1],136
	jnz LB_4985
	cmp BYTE [rdi+2],144
	jnz LB_4985
	cmp BYTE [rdi+3],46
	jnz LB_4985
	cmp BYTE [rdi+4],35
	jnz LB_4985
	jmp LB_4986
LB_4985:
	mov r8,unt_1
	jmp LB_4981
LB_4986:
	add r14,5
	jmp LB_4982
LB_4981:
	lea rsp,[rsp+8*0]
	jmp LB_4977
LB_4982:
	mov QWORD [rsp+8*0],r14
	mov r13,QWORD [rsp+16+8*0]
	mov r14,QWORD [rsp+8*0]
	jmp LB_4988
LB_4988
;; rsp=0 , %2612~1'(= r ) %2611~0'(= r ) 
; #148 { } ⊢ 2(<3)◂{ }
;; rsp=0 , %2613~2(<3)◂{ } %2612~1'(= r ) %2611~0'(= r ) 
; #22 2(<3)◂{ } ⊢ 0(<2)◂2(<3)◂{ }
;; rsp=0 , %2614~0(<2)◂2(<3)◂{ } %2612~1'(= r ) %2611~0'(= r ) 
; ∎ 0(<2)◂2(<3)◂{ }
; .dlt.ptn 1'(= r )
; .dlt.ptn 0'(= r )
; .mov_ptn2 0(<2)◂2(<3)◂{ } ⊢ 2'(= a3◂ [ a27◂ [ ]] )
; .mov_ptn 0(<2)◂2(<3)◂{ } ⊢ 2'(= a3◂ [ a27◂ [ ]] )
	mov rax,unt 
	mov rax,unt_2
	mov rdi,rax
	mov rax,[SS_LN_TOP]
	mov rsi,[rax]
	mov QWORD [SS_LN_TOP],rsi 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	jmp LB_4987
LB_4987:
	movzx rax,BYTE [r8+6]
	cmp rax,0
	jnz LB_4977
	pop r14
	pop r9
	add rsp,8
	pop r13
	ret
LB_4977:
	jmp LB_4991
LB_4990:
	add r14,1 
LB_4991:
	cmp r14,r9
	jge LB_4992
	movzx rax,BYTE [r13+8+r14]
	cmp rax,9 
	jz LB_4990
	cmp rax,10 
	jz LB_4990
	cmp rax,32 
	jz LB_4990
LB_4992
	lea rax,[r14+4]
	cmp rax,r9
	jg LB_4995
	jmp LB_4996
LB_4995:
	mov r8,unt_1
	jmp LB_4993
LB_4996:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],226
	jnz LB_4997
	cmp BYTE [rdi+1],136
	jnz LB_4997
	cmp BYTE [rdi+2],144
	jnz LB_4997
	cmp BYTE [rdi+3],46
	jnz LB_4997
	jmp LB_4998
LB_4997:
	mov r8,unt_1
	jmp LB_4993
LB_4998:
	add r14,4
	jmp LB_4994
LB_4993:
	lea rsp,[rsp+8*0]
	jmp LB_4989
LB_4994:
	mov QWORD [rsp+8*0],r14
	mov r13,QWORD [rsp+16+8*0]
	mov r14,QWORD [rsp+8*0]
	jmp LB_5000
LB_5000
;; rsp=0 , %2616~1'(= r ) %2615~0'(= r ) 
; #150 { } ⊢ 0(<3)◂{ }
;; rsp=0 , %2617~0(<3)◂{ } %2616~1'(= r ) %2615~0'(= r ) 
; #22 0(<3)◂{ } ⊢ 0(<2)◂0(<3)◂{ }
;; rsp=0 , %2618~0(<2)◂0(<3)◂{ } %2616~1'(= r ) %2615~0'(= r ) 
; ∎ 0(<2)◂0(<3)◂{ }
; .dlt.ptn 1'(= r )
; .dlt.ptn 0'(= r )
; .mov_ptn2 0(<2)◂0(<3)◂{ } ⊢ 2'(= a3◂ [ a27◂ [ ]] )
; .mov_ptn 0(<2)◂0(<3)◂{ } ⊢ 2'(= a3◂ [ a27◂ [ ]] )
	mov rax,unt 
	mov rax,unt_0
	mov rdi,rax
	mov rax,[SS_LN_TOP]
	mov rsi,[rax]
	mov QWORD [SS_LN_TOP],rsi 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	jmp LB_4999
LB_4999:
	movzx rax,BYTE [r8+6]
	cmp rax,0
	jnz LB_4989
	pop r14
	pop r9
	add rsp,8
	pop r13
	ret
LB_4989:
	pop rdi
	pop r9 
	pop r14
	pop r13
	ret
ETR_270:
	mov r9,0x0000_ffff_ffff_ffff
	and r9,[r13]
	call GRM_270
	ret
GRM_270:
	sub rsp,32
	mov QWORD [rsp+24],r13
	mov QWORD [rsp+16],r14 
	mov QWORD [rsp+8],r9
	jmp LB_5003
LB_5002:
	add r14,1 
LB_5003:
	cmp r14,r9
	jge LB_5004
	movzx rax,BYTE [r13+8+r14]
	cmp rax,9 
	jz LB_5002
	cmp rax,10 
	jz LB_5002
	cmp rax,32 
	jz LB_5002
LB_5004
	call GRM_269
	movzx rax,BYTE [r8+6]
	cmp rax,0
	jnz LB_5007
	jmp LB_5008
LB_5007:
	jmp LB_5005
LB_5008:
	lea rsp,[rsp-8*1]
	mov r8,[r8+8]
; .mov_ptn2 2'(= a27◂ [ ] ) ⊢ 8'(= a27◂ [ ] )
; .mov_ptn 2'(= a27◂ [ ] ) ⊢ 8'(= a27◂ [ ] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_5006
LB_5005:
	lea rsp,[rsp+8*0]
	jmp LB_5001
LB_5006:
	jmp LB_5010
LB_5009:
	add r14,1 
LB_5010:
	cmp r14,r9
	jge LB_5011
	movzx rax,BYTE [r13+8+r14]
	cmp rax,9 
	jz LB_5009
	cmp rax,10 
	jz LB_5009
	cmp rax,32 
	jz LB_5009
LB_5011
	call GRM_272
	movzx rax,BYTE [r8+6]
	cmp rax,0
	jnz LB_5014
	jmp LB_5015
LB_5014:
	jmp LB_5012
LB_5015:
	lea rsp,[rsp-8*1]
	mov r8,[r8+8]
; .mov_ptn2 2'(= a3◂ [ {| l |}] ) ⊢ 9'(= a3◂ [ {| l |}] )
; .mov_ptn 2'(= a3◂ [ {| l |}] ) ⊢ 9'(= a3◂ [ {| l |}] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_5013
LB_5012:
	lea rsp,[rsp+8*1]
	pop rdi
	pop r9 
	pop r14
	pop r13
	ret
LB_5013:
	jmp LB_5017
LB_5016:
	add r14,1 
LB_5017:
	cmp r14,r9
	jge LB_5018
	movzx rax,BYTE [r13+8+r14]
	cmp rax,9 
	jz LB_5016
	cmp rax,10 
	jz LB_5016
	cmp rax,32 
	jz LB_5016
LB_5018
	call GRM_264
	movzx rax,BYTE [r8+6]
	cmp rax,0
	jnz LB_5021
	jmp LB_5022
LB_5021:
	jmp LB_5019
LB_5022:
	lea rsp,[rsp-8*1]
	mov r8,[r8+8]
; .mov_ptn2 2'(= a28◂ [ a9◂ [ ]] ) ⊢ 10'(= a28◂ [ a9◂ [ ]] )
; .mov_ptn 2'(= a28◂ [ a9◂ [ ]] ) ⊢ 10'(= a28◂ [ a9◂ [ ]] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_5020
LB_5019:
	lea rsp,[rsp+8*2]
	pop rdi
	pop r9 
	pop r14
	pop r13
	ret
LB_5020:
	jmp LB_5024
LB_5023:
	add r14,1 
LB_5024:
	cmp r14,r9
	jge LB_5025
	movzx rax,BYTE [r13+8+r14]
	cmp rax,9 
	jz LB_5023
	cmp rax,10 
	jz LB_5023
	cmp rax,32 
	jz LB_5023
LB_5025
	call GRM_271
	movzx rax,BYTE [r8+6]
	cmp rax,0
	jnz LB_5028
	jmp LB_5029
LB_5028:
	jmp LB_5026
LB_5029:
	lea rsp,[rsp-8*1]
	mov r8,[r8+8]
; .mov_ptn2 2'(= a3◂ [ a25◂ [ a9◂ [ ]{| l |}]] ) ⊢ 11'(= a3◂ [ a25◂ [ a9◂ [ ]{| l |}]] )
; .mov_ptn 2'(= a3◂ [ a25◂ [ a9◂ [ ]{| l |}]] ) ⊢ 11'(= a3◂ [ a25◂ [ a9◂ [ ]{| l |}]] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_5027
LB_5026:
	lea rsp,[rsp+8*3]
	pop rdi
	pop r9 
	pop r14
	pop r13
	ret
LB_5027:
	mov QWORD [rsp+8*4],r14
	mov r13,QWORD [rsp+16+8*4]
	mov r14,QWORD [rsp+8*4]
	jmp LB_5031
LB_5031
;; rsp=4 , %2624~1'(= r ) %2623~0'(= r ) %2622~11'(= a3◂ [ a25◂ [ a9◂ [ ]{| l |}]] ) %2621~10'(= a28◂ [ a9◂ [ ]] ) %2620~9'(= a3◂ [ {| l |}] ) %2619~8'(= a27◂ [ ] ) 
; #153 { 9'(= a3◂ [ {| l |}] ) 8'(= a27◂ [ ] ) 10'(= a28◂ [ a9◂ [ ]] ) 11'(= a3◂ [ a25◂ [ a9◂ [ ]{| l |}]] ) } ⊢ 1(<2)◂{ 9'(= a3◂ [ {| l |}] ) 8'(= a27◂ [ ] ) 10'(= a28◂ [ a9◂ [ ]] ) 11'(= a3◂ [ a25◂ [ a9◂ [ ]{| l |}]] ) }
;; rsp=4 , %2625~1(<2)◂{ 9'(= a3◂ [ {| l |}] ) 8'(= a27◂ [ ] ) 10'(= a28◂ [ a9◂ [ ]] ) 11'(= a3◂ [ a25◂ [ a9◂ [ ]{| l |}]] ) } %2624~1'(= r ) %2623~0'(= r ) 
; #22 1(<2)◂{ 9'(= a3◂ [ {| l |}] ) 8'(= a27◂ [ ] ) 10'(= a28◂ [ a9◂ [ ]] ) 11'(= a3◂ [ a25◂ [ a9◂ [ ]{| l |}]] ) } ⊢ 0(<2)◂1(<2)◂{ 9'(= a3◂ [ {| l |}] ) 8'(= a27◂ [ ] ) 10'(= a28◂ [ a9◂ [ ]] ) 11'(= a3◂ [ a25◂ [ a9◂ [ ]{| l |}]] ) }
;; rsp=4 , %2626~0(<2)◂1(<2)◂{ 9'(= a3◂ [ {| l |}] ) 8'(= a27◂ [ ] ) 10'(= a28◂ [ a9◂ [ ]] ) 11'(= a3◂ [ a25◂ [ a9◂ [ ]{| l |}]] ) } %2624~1'(= r ) %2623~0'(= r ) 
; ∎ 0(<2)◂1(<2)◂{ 9'(= a3◂ [ {| l |}] ) 8'(= a27◂ [ ] ) 10'(= a28◂ [ a9◂ [ ]] ) 11'(= a3◂ [ a25◂ [ a9◂ [ ]{| l |}]] ) }
; .dlt.ptn 1'(= r )
; .dlt.ptn 0'(= r )
; .mov_ptn2 0(<2)◂1(<2)◂{ 9'(= a3◂ [ {| l |}] ) 8'(= a27◂ [ ] ) 10'(= a28◂ [ a9◂ [ ]] ) 11'(= a3◂ [ a25◂ [ a9◂ [ ]{| l |}]] ) } ⊢ 2'(= a3◂ [ a25◂ [ a9◂ [ ]{| l |}]] )
; .mov_ptn 0(<2)◂1(<2)◂{ 9'(= a3◂ [ {| l |}] ) 8'(= a27◂ [ ] ) 10'(= a28◂ [ a9◂ [ ]] ) 11'(= a3◂ [ a25◂ [ a9◂ [ ]{| l |}]] ) } ⊢ 2'(= a3◂ [ a25◂ [ a9◂ [ ]{| l |}]] )
	mov rax,[SS_RCD_4_TOP]
	mov rsi,[rax] 
	mov QWORD [SS_RCD_4_TOP],rsi
	mov QWORD [rax],0
	mov r13,rax
	mov rax,QWORD [rsp-8+8*3]
	mov rdi,r13
	mov QWORD [rdi+8+8*0],rax
	mov rax,QWORD [rsp-8+8*4]
	mov rdi,r13
	mov QWORD [rdi+8+8*1],rax
	mov rax,QWORD [rsp-8+8*2]
	mov rdi,r13
	mov QWORD [rdi+8+8*2],rax
	mov rax,QWORD [rsp-8+8*1]
	mov rdi,r13
	mov QWORD [rdi+8+8*3],rax
	mov rax,r13
	mov BYTE [rax+6],1
	mov rdi,rax
	mov rax,[SS_LN_TOP]
	mov rsi,[rax]
	mov QWORD [SS_LN_TOP],rsi 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	lea rsp,[rsp+8*4]
	jmp LB_5030
LB_5030:
	movzx rax,BYTE [r8+6]
	cmp rax,0
	jnz LB_5001
	pop r14
	pop r9
	add rsp,8
	pop r13
	ret
LB_5001:
	jmp LB_5034
LB_5033:
	add r14,1 
LB_5034:
	cmp r14,r9
	jge LB_5035
	movzx rax,BYTE [r13+8+r14]
	cmp rax,9 
	jz LB_5033
	cmp rax,10 
	jz LB_5033
	cmp rax,32 
	jz LB_5033
LB_5035
	call GRM_268
	movzx rax,BYTE [r8+6]
	cmp rax,0
	jnz LB_5038
	jmp LB_5039
LB_5038:
	jmp LB_5036
LB_5039:
	lea rsp,[rsp-8*1]
	mov r8,[r8+8]
; .mov_ptn2 2'(= a27◂ [ ] ) ⊢ 8'(= a27◂ [ ] )
; .mov_ptn 2'(= a27◂ [ ] ) ⊢ 8'(= a27◂ [ ] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_5037
LB_5036:
	lea rsp,[rsp+8*0]
	jmp LB_5032
LB_5037:
	jmp LB_5041
LB_5040:
	add r14,1 
LB_5041:
	cmp r14,r9
	jge LB_5042
	movzx rax,BYTE [r13+8+r14]
	cmp rax,9 
	jz LB_5040
	cmp rax,10 
	jz LB_5040
	cmp rax,32 
	jz LB_5040
LB_5042
	call GRM_272
	movzx rax,BYTE [r8+6]
	cmp rax,0
	jnz LB_5045
	jmp LB_5046
LB_5045:
	jmp LB_5043
LB_5046:
	lea rsp,[rsp-8*1]
	mov r8,[r8+8]
; .mov_ptn2 2'(= a3◂ [ {| l |}] ) ⊢ 9'(= a3◂ [ {| l |}] )
; .mov_ptn 2'(= a3◂ [ {| l |}] ) ⊢ 9'(= a3◂ [ {| l |}] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_5044
LB_5043:
	lea rsp,[rsp+8*1]
	jmp LB_5032
LB_5044:
	jmp LB_5048
LB_5047:
	add r14,1 
LB_5048:
	cmp r14,r9
	jge LB_5049
	movzx rax,BYTE [r13+8+r14]
	cmp rax,9 
	jz LB_5047
	cmp rax,10 
	jz LB_5047
	cmp rax,32 
	jz LB_5047
LB_5049
	call GRM_264
	movzx rax,BYTE [r8+6]
	cmp rax,0
	jnz LB_5052
	jmp LB_5053
LB_5052:
	jmp LB_5050
LB_5053:
	lea rsp,[rsp-8*1]
	mov r8,[r8+8]
; .mov_ptn2 2'(= a28◂ [ a9◂ [ ]] ) ⊢ 10'(= a28◂ [ a9◂ [ ]] )
; .mov_ptn 2'(= a28◂ [ a9◂ [ ]] ) ⊢ 10'(= a28◂ [ a9◂ [ ]] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_5051
LB_5050:
	lea rsp,[rsp+8*2]
	jmp LB_5032
LB_5051:
	jmp LB_5055
LB_5054:
	add r14,1 
LB_5055:
	cmp r14,r9
	jge LB_5056
	movzx rax,BYTE [r13+8+r14]
	cmp rax,9 
	jz LB_5054
	cmp rax,10 
	jz LB_5054
	cmp rax,32 
	jz LB_5054
LB_5056
	call GRM_271
	movzx rax,BYTE [r8+6]
	cmp rax,0
	jnz LB_5059
	jmp LB_5060
LB_5059:
	jmp LB_5057
LB_5060:
	lea rsp,[rsp-8*1]
	mov r8,[r8+8]
; .mov_ptn2 2'(= a3◂ [ a25◂ [ a9◂ [ ]{| l |}]] ) ⊢ 11'(= a3◂ [ a25◂ [ a9◂ [ ]{| l |}]] )
; .mov_ptn 2'(= a3◂ [ a25◂ [ a9◂ [ ]{| l |}]] ) ⊢ 11'(= a3◂ [ a25◂ [ a9◂ [ ]{| l |}]] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_5058
LB_5057:
	lea rsp,[rsp+8*3]
	jmp LB_5032
LB_5058:
	jmp LB_5062
LB_5061:
	add r14,1 
LB_5062:
	cmp r14,r9
	jge LB_5063
	movzx rax,BYTE [r13+8+r14]
	cmp rax,9 
	jz LB_5061
	cmp rax,10 
	jz LB_5061
	cmp rax,32 
	jz LB_5061
LB_5063
	call GRM_270
	movzx rax,BYTE [r8+6]
	cmp rax,0
	jnz LB_5066
	jmp LB_5067
LB_5066:
	jmp LB_5064
LB_5067:
	lea rsp,[rsp-8*1]
	mov r8,[r8+8]
; .mov_ptn2 2'(= a25◂ [ a9◂ [ ]{| l |}] ) ⊢ 12'(= a25◂ [ a9◂ [ ]{| l |}] )
; .mov_ptn 2'(= a25◂ [ a9◂ [ ]{| l |}] ) ⊢ 12'(= a25◂ [ a9◂ [ ]{| l |}] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_5065
LB_5064:
	lea rsp,[rsp+8*4]
	jmp LB_5032
LB_5065:
	mov QWORD [rsp+8*5],r14
	mov r13,QWORD [rsp+16+8*5]
	mov r14,QWORD [rsp+8*5]
	jmp LB_5069
LB_5069
;; rsp=5 , %2633~1'(= r ) %2632~0'(= r ) %2631~12'(= a25◂ [ a9◂ [ ]{| l |}] ) %2630~11'(= a3◂ [ a25◂ [ a9◂ [ ]{| l |}]] ) %2629~10'(= a28◂ [ a9◂ [ ]] ) %2628~9'(= a3◂ [ {| l |}] ) %2627~8'(= a27◂ [ ] ) 
; #154 { 9'(= a3◂ [ {| l |}] ) 8'(= a27◂ [ ] ) 10'(= a28◂ [ a9◂ [ ]] ) 11'(= a3◂ [ a25◂ [ a9◂ [ ]{| l |}]] ) 12'(= a25◂ [ a9◂ [ ]{| l |}] ) } ⊢ 0(<2)◂{ 9'(= a3◂ [ {| l |}] ) 8'(= a27◂ [ ] ) 10'(= a28◂ [ a9◂ [ ]] ) 11'(= a3◂ [ a25◂ [ a9◂ [ ]{| l |}]] ) 12'(= a25◂ [ a9◂ [ ]{| l |}] ) }
;; rsp=5 , %2634~0(<2)◂{ 9'(= a3◂ [ {| l |}] ) 8'(= a27◂ [ ] ) 10'(= a28◂ [ a9◂ [ ]] ) 11'(= a3◂ [ a25◂ [ a9◂ [ ]{| l |}]] ) 12'(= a25◂ [ a9◂ [ ]{| l |}] ) } %2633~1'(= r ) %2632~0'(= r ) 
; #22 0(<2)◂{ 9'(= a3◂ [ {| l |}] ) 8'(= a27◂ [ ] ) 10'(= a28◂ [ a9◂ [ ]] ) 11'(= a3◂ [ a25◂ [ a9◂ [ ]{| l |}]] ) 12'(= a25◂ [ a9◂ [ ]{| l |}] ) } ⊢ 0(<2)◂0(<2)◂{ 9'(= a3◂ [ {| l |}] ) 8'(= a27◂ [ ] ) 10'(= a28◂ [ a9◂ [ ]] ) 11'(= a3◂ [ a25◂ [ a9◂ [ ]{| l |}]] ) 12'(= a25◂ [ a9◂ [ ]{| l |}] ) }
;; rsp=5 , %2635~0(<2)◂0(<2)◂{ 9'(= a3◂ [ {| l |}] ) 8'(= a27◂ [ ] ) 10'(= a28◂ [ a9◂ [ ]] ) 11'(= a3◂ [ a25◂ [ a9◂ [ ]{| l |}]] ) 12'(= a25◂ [ a9◂ [ ]{| l |}] ) } %2633~1'(= r ) %2632~0'(= r ) 
; ∎ 0(<2)◂0(<2)◂{ 9'(= a3◂ [ {| l |}] ) 8'(= a27◂ [ ] ) 10'(= a28◂ [ a9◂ [ ]] ) 11'(= a3◂ [ a25◂ [ a9◂ [ ]{| l |}]] ) 12'(= a25◂ [ a9◂ [ ]{| l |}] ) }
; .dlt.ptn 1'(= r )
; .dlt.ptn 0'(= r )
; .mov_ptn2 0(<2)◂0(<2)◂{ 9'(= a3◂ [ {| l |}] ) 8'(= a27◂ [ ] ) 10'(= a28◂ [ a9◂ [ ]] ) 11'(= a3◂ [ a25◂ [ a9◂ [ ]{| l |}]] ) 12'(= a25◂ [ a9◂ [ ]{| l |}] ) } ⊢ 2'(= a3◂ [ a25◂ [ a9◂ [ ]{| l |}]] )
; .mov_ptn 0(<2)◂0(<2)◂{ 9'(= a3◂ [ {| l |}] ) 8'(= a27◂ [ ] ) 10'(= a28◂ [ a9◂ [ ]] ) 11'(= a3◂ [ a25◂ [ a9◂ [ ]{| l |}]] ) 12'(= a25◂ [ a9◂ [ ]{| l |}] ) } ⊢ 2'(= a3◂ [ a25◂ [ a9◂ [ ]{| l |}]] )
	mov rax,[SS_RCD_5_TOP]
	mov rsi,[rax] 
	mov QWORD [SS_RCD_5_TOP],rsi
	mov QWORD [rax],0
	mov r13,rax
	mov rax,QWORD [rsp-8+8*4]
	mov rdi,r13
	mov QWORD [rdi+8+8*0],rax
	mov rax,QWORD [rsp-8+8*5]
	mov rdi,r13
	mov QWORD [rdi+8+8*1],rax
	mov rax,QWORD [rsp-8+8*3]
	mov rdi,r13
	mov QWORD [rdi+8+8*2],rax
	mov rax,QWORD [rsp-8+8*2]
	mov rdi,r13
	mov QWORD [rdi+8+8*3],rax
	mov rax,QWORD [rsp-8+8*1]
	mov rdi,r13
	mov QWORD [rdi+8+8*4],rax
	mov rax,r13
	mov BYTE [rax+6],0
	mov rdi,rax
	mov rax,[SS_LN_TOP]
	mov rsi,[rax]
	mov QWORD [SS_LN_TOP],rsi 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	lea rsp,[rsp+8*5]
	jmp LB_5068
LB_5068:
	movzx rax,BYTE [r8+6]
	cmp rax,0
	jnz LB_5032
	pop r14
	pop r9
	add rsp,8
	pop r13
	ret
LB_5032:
	pop rdi
	pop r9 
	pop r14
	pop r13
	ret
ETR_271:
	mov r9,0x0000_ffff_ffff_ffff
	and r9,[r13]
	call GRM_271
	ret
GRM_271:
	sub rsp,32
	mov QWORD [rsp+24],r13
	mov QWORD [rsp+16],r14 
	mov QWORD [rsp+8],r9
	jmp LB_5072
LB_5071:
	add r14,1 
LB_5072:
	cmp r14,r9
	jge LB_5073
	movzx rax,BYTE [r13+8+r14]
	cmp rax,9 
	jz LB_5071
	cmp rax,10 
	jz LB_5071
	cmp rax,32 
	jz LB_5071
LB_5073
	lea rax,[r14+1]
	cmp rax,r9
	jg LB_5076
	jmp LB_5077
LB_5076:
	mov r8,unt_1
	jmp LB_5074
LB_5077:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],59
	jnz LB_5078
	jmp LB_5079
LB_5078:
	mov r8,unt_1
	jmp LB_5074
LB_5079:
	add r14,1
	jmp LB_5075
LB_5074:
	lea rsp,[rsp+8*0]
	jmp LB_5070
LB_5075:
	jmp LB_5081
LB_5080:
	add r14,1 
LB_5081:
	cmp r14,r9
	jge LB_5082
	movzx rax,BYTE [r13+8+r14]
	cmp rax,9 
	jz LB_5080
	cmp rax,10 
	jz LB_5080
	cmp rax,32 
	jz LB_5080
LB_5082
	call GRM_270
	movzx rax,BYTE [r8+6]
	cmp rax,0
	jnz LB_5085
	jmp LB_5086
LB_5085:
	jmp LB_5083
LB_5086:
	lea rsp,[rsp-8*1]
	mov r8,[r8+8]
; .mov_ptn2 2'(= a25◂ [ a9◂ [ ]{| l |}] ) ⊢ 8'(= a25◂ [ a9◂ [ ]{| l |}] )
; .mov_ptn 2'(= a25◂ [ a9◂ [ ]{| l |}] ) ⊢ 8'(= a25◂ [ a9◂ [ ]{| l |}] )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_5084
LB_5083:
	lea rsp,[rsp+8*0]
	jmp LB_5070
LB_5084:
	mov QWORD [rsp+8*1],r14
	mov r13,QWORD [rsp+16+8*1]
	mov r14,QWORD [rsp+8*1]
	jmp LB_5088
LB_5088
;; rsp=1 , %2638~1'(= r ) %2637~0'(= r ) %2636~8'(= a25◂ [ a9◂ [ ]{| l |}] ) 
; #22 8'(= a25◂ [ a9◂ [ ]{| l |}] ) ⊢ 0(<2)◂8'(= a25◂ [ a9◂ [ ]{| l |}] )
;; rsp=1 , %2639~0(<2)◂8'(= a25◂ [ a9◂ [ ]{| l |}] ) %2638~1'(= r ) %2637~0'(= r ) 
; #22 0(<2)◂8'(= a25◂ [ a9◂ [ ]{| l |}] ) ⊢ 0(<2)◂0(<2)◂8'(= a25◂ [ a9◂ [ ]{| l |}] )
;; rsp=1 , %2640~0(<2)◂0(<2)◂8'(= a25◂ [ a9◂ [ ]{| l |}] ) %2638~1'(= r ) %2637~0'(= r ) 
; ∎ 0(<2)◂0(<2)◂8'(= a25◂ [ a9◂ [ ]{| l |}] )
; .dlt.ptn 1'(= r )
; .dlt.ptn 0'(= r )
; .mov_ptn2 0(<2)◂0(<2)◂8'(= a25◂ [ a9◂ [ ]{| l |}] ) ⊢ 2'(= a3◂ [ a3◂ [ a25◂ [ a9◂ [ ]{| l |}]]] )
; .mov_ptn 0(<2)◂0(<2)◂8'(= a25◂ [ a9◂ [ ]{| l |}] ) ⊢ 2'(= a3◂ [ a3◂ [ a25◂ [ a9◂ [ ]{| l |}]]] )
	mov rax,QWORD [rsp-8+8*1]
	mov rdi,rax
	mov rax,[SS_LN_TOP]
	mov rsi,[rax]
	mov QWORD [SS_LN_TOP],rsi 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov rdi,rax
	mov rax,[SS_LN_TOP]
	mov rsi,[rax]
	mov QWORD [SS_LN_TOP],rsi 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	lea rsp,[rsp+8*1]
	jmp LB_5087
LB_5087:
	movzx rax,BYTE [r8+6]
	cmp rax,0
	jnz LB_5070
	pop r14
	pop r9
	add rsp,8
	pop r13
	ret
LB_5070:
	mov QWORD [rsp+8*0],r14
	mov r13,QWORD [rsp+16+8*0]
	mov r14,QWORD [rsp+8*0]
	jmp LB_5091
LB_5091
;; rsp=0 , %2642~1'(= r ) %2641~0'(= r ) 
; #23 { } ⊢ 1(<2)◂{ }
;; rsp=0 , %2643~1(<2)◂{ } %2642~1'(= r ) %2641~0'(= r ) 
; #22 1(<2)◂{ } ⊢ 0(<2)◂1(<2)◂{ }
;; rsp=0 , %2644~0(<2)◂1(<2)◂{ } %2642~1'(= r ) %2641~0'(= r ) 
; ∎ 0(<2)◂1(<2)◂{ }
; .dlt.ptn 1'(= r )
; .dlt.ptn 0'(= r )
; .mov_ptn2 0(<2)◂1(<2)◂{ } ⊢ 2'(= a3◂ [ a3◂ [ a25◂ [ a9◂ [ ]{| l |}]]] )
; .mov_ptn 0(<2)◂1(<2)◂{ } ⊢ 2'(= a3◂ [ a3◂ [ a25◂ [ a9◂ [ ]{| l |}]]] )
	mov rax,unt 
	mov rax,unt_1
	mov rdi,rax
	mov rax,[SS_LN_TOP]
	mov rsi,[rax]
	mov QWORD [SS_LN_TOP],rsi 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	jmp LB_5090
LB_5090:
	movzx rax,BYTE [r8+6]
	cmp rax,0
	jnz LB_5089
	pop r14
	pop r9
	add rsp,8
	pop r13
	ret
LB_5089:
	pop rdi
	pop r9 
	pop r14
	pop r13
	ret
ETR_272:
	mov r9,0x0000_ffff_ffff_ffff
	and r9,[r13]
	call GRM_272
	ret
GRM_272:
	sub rsp,32
	mov QWORD [rsp+24],r13
	mov QWORD [rsp+16],r14 
	mov QWORD [rsp+8],r9
	jmp LB_5094
LB_5093:
	add r14,1 
LB_5094:
	cmp r14,r9
	jge LB_5095
	movzx rax,BYTE [r13+8+r14]
	cmp rax,9 
	jz LB_5093
	cmp rax,10 
	jz LB_5093
	cmp rax,32 
	jz LB_5093
LB_5095
	call GRM_74
	movzx rax,BYTE [r8+6]
	cmp rax,0
	jnz LB_5098
	jmp LB_5099
LB_5098:
	jmp LB_5096
LB_5099:
	lea rsp,[rsp-8*1]
; .mov_ptn2 2'(= {| l |} ) ⊢ 8'(= {| l |} )
; .mov_ptn 2'(= {| l |} ) ⊢ 8'(= {| l |} )
	mov rax,r8
	mov QWORD [rsp-8+8*1],rax
	jmp LB_5097
LB_5096:
	lea rsp,[rsp+8*0]
	jmp LB_5092
LB_5097:
	jmp LB_5101
LB_5100:
	add r14,1 
LB_5101:
	cmp r14,r9
	jge LB_5102
	movzx rax,BYTE [r13+8+r14]
	cmp rax,9 
	jz LB_5100
	cmp rax,10 
	jz LB_5100
	cmp rax,32 
	jz LB_5100
LB_5102
	lea rax,[r14+1]
	cmp rax,r9
	jg LB_5105
	jmp LB_5106
LB_5105:
	mov r8,unt_1
	jmp LB_5103
LB_5106:
	lea rdi,[r13+8+r14]
	cmp BYTE [rdi+0],58
	jnz LB_5107
	jmp LB_5108
LB_5107:
	mov r8,unt_1
	jmp LB_5103
LB_5108:
	add r14,1
	jmp LB_5104
LB_5103:
	lea rsp,[rsp+8*1]
	jmp LB_5092
LB_5104:
	mov QWORD [rsp+8*1],r14
	mov r13,QWORD [rsp+16+8*1]
	mov r14,QWORD [rsp+8*1]
	jmp LB_5110
LB_5110
;; rsp=1 , %2647~1'(= r ) %2646~0'(= r ) %2645~8'(= {| l |} ) 
; #22 8'(= {| l |} ) ⊢ 0(<2)◂8'(= {| l |} )
;; rsp=1 , %2648~0(<2)◂8'(= {| l |} ) %2647~1'(= r ) %2646~0'(= r ) 
; #22 0(<2)◂8'(= {| l |} ) ⊢ 0(<2)◂0(<2)◂8'(= {| l |} )
;; rsp=1 , %2649~0(<2)◂0(<2)◂8'(= {| l |} ) %2647~1'(= r ) %2646~0'(= r ) 
; ∎ 0(<2)◂0(<2)◂8'(= {| l |} )
; .dlt.ptn 1'(= r )
; .dlt.ptn 0'(= r )
; .mov_ptn2 0(<2)◂0(<2)◂8'(= {| l |} ) ⊢ 2'(= a3◂ [ a3◂ [ {| l |}]] )
; .mov_ptn 0(<2)◂0(<2)◂8'(= {| l |} ) ⊢ 2'(= a3◂ [ a3◂ [ {| l |}]] )
	mov rax,QWORD [rsp-8+8*1]
	mov BYTE [rax+6],0
	mov rdi,rax
	mov rax,[SS_LN_TOP]
	mov rsi,[rax]
	mov QWORD [SS_LN_TOP],rsi 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	lea rsp,[rsp+8*1]
	jmp LB_5109
LB_5109:
	movzx rax,BYTE [r8+6]
	cmp rax,0
	jnz LB_5092
	pop r14
	pop r9
	add rsp,8
	pop r13
	ret
LB_5092:
	mov QWORD [rsp+8*0],r14
	mov r13,QWORD [rsp+16+8*0]
	mov r14,QWORD [rsp+8*0]
	jmp LB_5113
LB_5113
;; rsp=0 , %2651~1'(= r ) %2650~0'(= r ) 
; #23 { } ⊢ 1(<2)◂{ }
;; rsp=0 , %2652~1(<2)◂{ } %2651~1'(= r ) %2650~0'(= r ) 
; #22 1(<2)◂{ } ⊢ 0(<2)◂1(<2)◂{ }
;; rsp=0 , %2653~0(<2)◂1(<2)◂{ } %2651~1'(= r ) %2650~0'(= r ) 
; ∎ 0(<2)◂1(<2)◂{ }
; .dlt.ptn 1'(= r )
; .dlt.ptn 0'(= r )
; .mov_ptn2 0(<2)◂1(<2)◂{ } ⊢ 2'(= a3◂ [ a3◂ [ {| l |}]] )
; .mov_ptn 0(<2)◂1(<2)◂{ } ⊢ 2'(= a3◂ [ a3◂ [ {| l |}]] )
	mov rax,unt 
	mov rax,unt_1
	mov rdi,rax
	mov rax,[SS_LN_TOP]
	mov rsi,[rax]
	mov QWORD [SS_LN_TOP],rsi 
	mov QWORD [rax],0
	mov BYTE [rax+6],0
	mov QWORD [rax+8],rdi
	mov r8,rax
	jmp LB_5112
LB_5112:
	movzx rax,BYTE [r8+6]
	cmp rax,0
	jnz LB_5111
	pop r14
	pop r9
	add rsp,8
	pop r13
	ret
LB_5111:
	pop rdi
	pop r9 
	pop r14
	pop r13
	ret
ETR_273: ; E { } ⊢ { } : ({ }→{ })
;; rsp=0 , 
; » _^ .. ⊢ ..
; .. //
	mov rdi,0
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	add rdi,17
	push rdi 
	and rdi,~111b
	add rdi,16
	mov rsi,rdi 
	mov rdi,1
	xor rax,rax 
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call calloc
	mov rsp,QWORD [rsp_tmp]  
	pop rdi 
	mov QWORD [rax],rdi
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	mov r13,rax
	lea rdi,[rax+7+rdi]
	std 
	mov QWORD [tmp],rcx 
	jmp LB_5114
	LB_5115: db 194,167,194,167,32,77,48,10,0
LB_5114:
	lea rsi,[LB_5115+8-1]
	mov rcx,8
	rep movsb
	jmp LB_5116
	LB_5117: db 9,226,136,142,226,136,142,32,10,0
LB_5116:
	lea rsi,[LB_5117+9-1]
	mov rcx,9
	rep movsb
	mov rcx,QWORD [tmp] 
;; rsp=0 , %2654~0'(= {| l |} ) 
; » _^ .. ⊢ ..
; .. //
	mov rdi,0
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	add rdi,16
	push rdi 
	and rdi,~111b
	add rdi,16
	mov rsi,rdi 
	mov rdi,1
	xor rax,rax 
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call calloc
	mov rsp,QWORD [rsp_tmp]  
	pop rdi 
	mov QWORD [rax],rdi
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	mov r14,rax
	lea rdi,[rax+7+rdi]
	std 
	mov QWORD [tmp],rcx 
	jmp LB_5118
	LB_5119: db 194,167,194,167,32,77,48,10,0
LB_5118:
	lea rsi,[LB_5119+8-1]
	mov rcx,8
	rep movsb
	jmp LB_5120
	LB_5121: db 9,226,136,142,226,136,142,10,0
LB_5120:
	lea rsi,[LB_5121+8-1]
	mov rcx,8
	rep movsb
	mov rcx,QWORD [tmp] 
;; rsp=0 , %2655~1'(= {| l |} ) %2654~0'(= {| l |} ) 
; _emt 1'(= {| l |} ) ⊢ 1'(= {| l |} )
	jmp LB_5123
LB_5122: db 95,101,109,116,58,0
LB_5123:
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax  
	mov rdi,LB_5122
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call printf 
	mov rsp,QWORD [rsp_tmp]
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	mov rax,r14
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	mov r8,rax
	mov rsi,r8
	add rsi,8
	xor rax,rax  
	mov rdi,fmt_s8
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call printf 
	mov rsp,QWORD [rsp_tmp]
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	jmp LB_5125
LB_5124: db 10,0
LB_5125:
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax  
	mov rdi,LB_5124
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call printf 
	mov rsp,QWORD [rsp_tmp]
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	jmp LB_5126
LB_5126:
;; rsp=0 , %2656~1'(= {| l |} ) %2654~0'(= {| l |} ) 
; _emt 0'(= {| l |} ) ⊢ 0'(= {| l |} )
	jmp LB_5128
LB_5127: db 95,101,109,116,58,0
LB_5128:
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax  
	mov rdi,LB_5127
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call printf 
	mov rsp,QWORD [rsp_tmp]
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	mov rax,r13
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	mov r8,rax
	mov rsi,r8
	add rsi,8
	xor rax,rax  
	mov rdi,fmt_s8
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call printf 
	mov rsp,QWORD [rsp_tmp]
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	jmp LB_5130
LB_5129: db 10,0
LB_5130:
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax  
	mov rdi,LB_5129
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call printf 
	mov rsp,QWORD [rsp_tmp]
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	jmp LB_5131
LB_5131:
;; rsp=0 , %2657~0'(= {| l |} ) %2656~1'(= {| l |} ) 
; rsp_d=0, #243 { 0'(= {| l |} ) %[ 0r ] } ⊢ { 0'(= {| l |} ) 3'(= r ) 2'(= a3◂ [ a35◂ [ a2◂ [ a31◂ [ ]]]] ) }
	lea rsp,[rsp-8*1]
	mov QWORD [rsp+8*0],r14
; .mov_ptn2 { 0'(= {| l |} ) %[ 0r ] } ⊢ { 0'(= {| l |} ) 1'(= r ) }
; .mov_ptn %[ 0r ] ⊢ 1'(= r )
	mov rax,0
	mov r14,rax
	call ETR_243

	mov rax,QWORD [rsp-8+8*1]
	mov r9,r14
	mov r14,rax
	lea rsp,[rsp+8*1]
;; rsp=0 , %2660~2'(= a3◂ [ a35◂ [ a2◂ [ a31◂ [ ]]]] ) %2659~3'(= r ) %2658~0'(= {| l |} ) %2656~1'(= {| l |} ) 
; _emt 3'(= r ) ⊢ 3'(= r )
	jmp LB_5133
LB_5132: db 95,101,109,116,58,0
LB_5133:
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax  
	mov rdi,LB_5132
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call printf 
	mov rsp,QWORD [rsp_tmp]
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	mov rax,r9
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	mov r8,rax
	mov rsi,r8
	xor rax,rax  
	mov rdi,fmt_r64
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call printf 
	mov rsp,QWORD [rsp_tmp]
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	jmp LB_5135
LB_5134: db 10,0
LB_5135:
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax  
	mov rdi,LB_5134
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call printf 
	mov rsp,QWORD [rsp_tmp]
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	jmp LB_5136
LB_5136:
; .dlt.ptn 3'(= r )
;; rsp=0 , %2660~2'(= a3◂ [ a35◂ [ a2◂ [ a31◂ [ ]]]] ) %2658~0'(= {| l |} ) %2656~1'(= {| l |} ) 
; _emt 2'(= a3◂ [ a35◂ [ a2◂ [ a31◂ [ ]]]] ) ⊢ 2'(= a3◂ [ a35◂ [ a2◂ [ a31◂ [ ]]]] )
	jmp LB_5138
LB_5137: db 95,101,109,116,58,0
LB_5138:
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax  
	mov rdi,LB_5137
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call printf 
	mov rsp,QWORD [rsp_tmp]
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	mov rax,r8
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	mov r8,rax
	call LB_5139
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	jmp LB_5141
LB_5140: db 10,0
LB_5141:
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax  
	mov rdi,LB_5140
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call printf 
	mov rsp,QWORD [rsp_tmp]
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	jmp LB_5142
LB_5139:
	movzx rax,BYTE [r8+6]
	jmp QWORD [LB_5145+8*rax]
LB_5145: dq LB_5143,LB_5144
LB_5143:
	jmp LB_5148
LB_5147: db 39,48,226,151,130,0
LB_5148:
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax  
	mov rdi,LB_5147
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call printf 
	mov rsp,QWORD [rsp_tmp]
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	mov r8,QWORD [r8+8]
	call LB_5149
	jmp LB_5146
LB_5144:
	jmp LB_5151
LB_5150: db 39,49,226,151,130,0
LB_5151:
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax  
	mov rdi,LB_5150
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call printf 
	mov rsp,QWORD [rsp_tmp]
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	jmp LB_5153
LB_5152: db 42,123,32,0
LB_5153:
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax  
	mov rdi,LB_5152
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call printf 
	mov rsp,QWORD [rsp_tmp]
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	jmp LB_5155
LB_5154: db 125,32,0
LB_5155:
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax  
	mov rdi,LB_5154
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call printf 
	mov rsp,QWORD [rsp_tmp]
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	jmp LB_5146
LB_5146:
	ret
LB_5149:
	movzx rax,BYTE [r8+6]
	jmp QWORD [LB_5158+8*rax]
LB_5158: dq LB_5156,LB_5157
LB_5156:
	jmp LB_5161
LB_5160: db 39,48,226,151,130,0
LB_5161:
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax  
	mov rdi,LB_5160
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call printf 
	mov rsp,QWORD [rsp_tmp]
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	mov r8,QWORD [r8+8]
	call LB_5162
	jmp LB_5159
LB_5157:
	jmp LB_5164
LB_5163: db 39,49,226,151,130,0
LB_5164:
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax  
	mov rdi,LB_5163
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call printf 
	mov rsp,QWORD [rsp_tmp]
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	mov r8,QWORD [r8+8]
	call LB_5165
	jmp LB_5159
LB_5159:
	ret
LB_5165:
	movzx rax,BYTE [r8+6]
	jmp QWORD [LB_5168+8*rax]
LB_5168: dq LB_5166,LB_5167
LB_5166:
	jmp LB_5171
LB_5170: db 39,48,226,151,130,0
LB_5171:
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax  
	mov rdi,LB_5170
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call printf 
	mov rsp,QWORD [rsp_tmp]
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	jmp LB_5173
LB_5172: db 42,123,32,0
LB_5173:
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax  
	mov rdi,LB_5172
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call printf 
	mov rsp,QWORD [rsp_tmp]
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	push r8
	mov r8,QWORD [r8+8+8*0]
	jmp LB_5175
LB_5174: db 42,123,32,0
LB_5175:
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax  
	mov rdi,LB_5174
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call printf 
	mov rsp,QWORD [rsp_tmp]
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	push r8
	mov r8,QWORD [r8+8+8*0]
	mov rsi,r8
	xor rax,rax  
	mov rdi,fmt_r64
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call printf 
	mov rsp,QWORD [rsp_tmp]
	pop r8 
	jmp LB_5177
LB_5176: db 32,0
LB_5177:
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax  
	mov rdi,LB_5176
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call printf 
	mov rsp,QWORD [rsp_tmp]
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	push r8
	mov r8,QWORD [r8+8+8*1]
	mov rsi,r8
	xor rax,rax  
	mov rdi,fmt_r64
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call printf 
	mov rsp,QWORD [rsp_tmp]
	pop r8 
	jmp LB_5179
LB_5178: db 32,0
LB_5179:
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax  
	mov rdi,LB_5178
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call printf 
	mov rsp,QWORD [rsp_tmp]
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	push r8
	mov r8,QWORD [r8+8+8*2]
	mov rsi,r8
	add rsi,8
	xor rax,rax  
	mov rdi,fmt_s8
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call printf 
	mov rsp,QWORD [rsp_tmp]
	pop r8 
	jmp LB_5181
LB_5180: db 32,0
LB_5181:
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax  
	mov rdi,LB_5180
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call printf 
	mov rsp,QWORD [rsp_tmp]
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	jmp LB_5183
LB_5182: db 125,32,0
LB_5183:
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax  
	mov rdi,LB_5182
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call printf 
	mov rsp,QWORD [rsp_tmp]
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	pop r8 
	jmp LB_5185
LB_5184: db 32,0
LB_5185:
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax  
	mov rdi,LB_5184
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call printf 
	mov rsp,QWORD [rsp_tmp]
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	push r8
	mov r8,QWORD [r8+8+8*1]
	call LB_5165
	pop r8 
	jmp LB_5187
LB_5186: db 32,0
LB_5187:
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax  
	mov rdi,LB_5186
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call printf 
	mov rsp,QWORD [rsp_tmp]
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	jmp LB_5189
LB_5188: db 125,32,0
LB_5189:
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax  
	mov rdi,LB_5188
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call printf 
	mov rsp,QWORD [rsp_tmp]
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	jmp LB_5169
LB_5167:
	jmp LB_5191
LB_5190: db 39,49,226,151,130,0
LB_5191:
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax  
	mov rdi,LB_5190
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call printf 
	mov rsp,QWORD [rsp_tmp]
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	jmp LB_5193
LB_5192: db 42,123,32,0
LB_5193:
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax  
	mov rdi,LB_5192
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call printf 
	mov rsp,QWORD [rsp_tmp]
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	jmp LB_5195
LB_5194: db 125,32,0
LB_5195:
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax  
	mov rdi,LB_5194
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call printf 
	mov rsp,QWORD [rsp_tmp]
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	jmp LB_5169
LB_5169:
	ret
LB_5162:
	movzx rax,BYTE [r8+6]
	jmp QWORD [LB_5198+8*rax]
LB_5198: dq LB_5196,LB_5197
LB_5196:
	jmp LB_5201
LB_5200: db 39,48,226,151,130,0
LB_5201:
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax  
	mov rdi,LB_5200
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call printf 
	mov rsp,QWORD [rsp_tmp]
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	jmp LB_5203
LB_5202: db 42,123,32,0
LB_5203:
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax  
	mov rdi,LB_5202
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call printf 
	mov rsp,QWORD [rsp_tmp]
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	push r8
	mov r8,QWORD [r8+8+8*0]
	call LB_5204
	pop r8 
	jmp LB_5206
LB_5205: db 32,0
LB_5206:
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax  
	mov rdi,LB_5205
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call printf 
	mov rsp,QWORD [rsp_tmp]
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	push r8
	mov r8,QWORD [r8+8+8*1]
	call LB_5162
	pop r8 
	jmp LB_5208
LB_5207: db 32,0
LB_5208:
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax  
	mov rdi,LB_5207
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call printf 
	mov rsp,QWORD [rsp_tmp]
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	jmp LB_5210
LB_5209: db 125,32,0
LB_5210:
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax  
	mov rdi,LB_5209
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call printf 
	mov rsp,QWORD [rsp_tmp]
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	jmp LB_5199
LB_5197:
	jmp LB_5212
LB_5211: db 39,49,226,151,130,0
LB_5212:
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax  
	mov rdi,LB_5211
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call printf 
	mov rsp,QWORD [rsp_tmp]
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	jmp LB_5214
LB_5213: db 42,123,32,0
LB_5214:
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax  
	mov rdi,LB_5213
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call printf 
	mov rsp,QWORD [rsp_tmp]
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	jmp LB_5216
LB_5215: db 125,32,0
LB_5216:
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax  
	mov rdi,LB_5215
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call printf 
	mov rsp,QWORD [rsp_tmp]
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	jmp LB_5199
LB_5199:
	ret
LB_5204:
	movzx rax,BYTE [r8+6]
	jmp QWORD [LB_5223+8*rax]
LB_5223: dq LB_5217,LB_5218,LB_5219,LB_5220,LB_5221,LB_5222
LB_5217:
	jmp LB_5226
LB_5225: db 39,48,226,151,130,0
LB_5226:
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax  
	mov rdi,LB_5225
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call printf 
	mov rsp,QWORD [rsp_tmp]
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	jmp LB_5228
LB_5227: db 42,123,32,0
LB_5228:
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax  
	mov rdi,LB_5227
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call printf 
	mov rsp,QWORD [rsp_tmp]
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	push r8
	mov r8,QWORD [r8+8+8*0]
	mov rsi,r8
	add rsi,8
	xor rax,rax  
	mov rdi,fmt_s8
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call printf 
	mov rsp,QWORD [rsp_tmp]
	pop r8 
	jmp LB_5230
LB_5229: db 32,0
LB_5230:
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax  
	mov rdi,LB_5229
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call printf 
	mov rsp,QWORD [rsp_tmp]
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	push r8
	mov r8,QWORD [r8+8+8*1]
	call LB_5231
	pop r8 
	jmp LB_5233
LB_5232: db 32,0
LB_5233:
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax  
	mov rdi,LB_5232
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call printf 
	mov rsp,QWORD [rsp_tmp]
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	jmp LB_5235
LB_5234: db 125,32,0
LB_5235:
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax  
	mov rdi,LB_5234
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call printf 
	mov rsp,QWORD [rsp_tmp]
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	jmp LB_5224
LB_5218:
	jmp LB_5237
LB_5236: db 39,49,226,151,130,0
LB_5237:
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax  
	mov rdi,LB_5236
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call printf 
	mov rsp,QWORD [rsp_tmp]
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	mov r8,QWORD [r8+8]
	call LB_5238
	jmp LB_5224
LB_5219:
	jmp LB_5240
LB_5239: db 39,50,226,151,130,0
LB_5240:
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax  
	mov rdi,LB_5239
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call printf 
	mov rsp,QWORD [rsp_tmp]
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	jmp LB_5242
LB_5241: db 42,123,32,0
LB_5242:
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax  
	mov rdi,LB_5241
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call printf 
	mov rsp,QWORD [rsp_tmp]
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	push r8
	mov r8,QWORD [r8+8+8*0]
	mov rsi,r8
	add rsi,8
	xor rax,rax  
	mov rdi,fmt_s8
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call printf 
	mov rsp,QWORD [rsp_tmp]
	pop r8 
	jmp LB_5244
LB_5243: db 32,0
LB_5244:
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax  
	mov rdi,LB_5243
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call printf 
	mov rsp,QWORD [rsp_tmp]
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	push r8
	mov r8,QWORD [r8+8+8*1]
	call LB_5245
	pop r8 
	jmp LB_5247
LB_5246: db 32,0
LB_5247:
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax  
	mov rdi,LB_5246
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call printf 
	mov rsp,QWORD [rsp_tmp]
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	jmp LB_5249
LB_5248: db 125,32,0
LB_5249:
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax  
	mov rdi,LB_5248
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call printf 
	mov rsp,QWORD [rsp_tmp]
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	jmp LB_5224
LB_5220:
	jmp LB_5251
LB_5250: db 39,51,226,151,130,0
LB_5251:
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax  
	mov rdi,LB_5250
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call printf 
	mov rsp,QWORD [rsp_tmp]
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	mov r8,QWORD [r8+8]
	call LB_5252
	jmp LB_5224
LB_5221:
	jmp LB_5254
LB_5253: db 39,52,226,151,130,0
LB_5254:
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax  
	mov rdi,LB_5253
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call printf 
	mov rsp,QWORD [rsp_tmp]
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	jmp LB_5256
LB_5255: db 42,123,32,0
LB_5256:
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax  
	mov rdi,LB_5255
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call printf 
	mov rsp,QWORD [rsp_tmp]
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	push r8
	mov r8,QWORD [r8+8+8*0]
	mov rsi,r8
	add rsi,8
	xor rax,rax  
	mov rdi,fmt_s8
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call printf 
	mov rsp,QWORD [rsp_tmp]
	pop r8 
	jmp LB_5258
LB_5257: db 32,0
LB_5258:
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax  
	mov rdi,LB_5257
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call printf 
	mov rsp,QWORD [rsp_tmp]
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	push r8
	mov r8,QWORD [r8+8+8*1]
	call LB_5259
	pop r8 
	jmp LB_5261
LB_5260: db 32,0
LB_5261:
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax  
	mov rdi,LB_5260
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call printf 
	mov rsp,QWORD [rsp_tmp]
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	jmp LB_5263
LB_5262: db 125,32,0
LB_5263:
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax  
	mov rdi,LB_5262
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call printf 
	mov rsp,QWORD [rsp_tmp]
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	jmp LB_5224
LB_5222:
	jmp LB_5265
LB_5264: db 39,53,226,151,130,0
LB_5265:
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax  
	mov rdi,LB_5264
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call printf 
	mov rsp,QWORD [rsp_tmp]
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	mov r8,QWORD [r8+8]
	call LB_5266
	jmp LB_5224
LB_5224:
	ret
LB_5266:
	movzx rax,BYTE [r8+6]
	jmp QWORD [LB_5269+8*rax]
LB_5269: dq LB_5267,LB_5268
LB_5267:
	jmp LB_5272
LB_5271: db 39,48,226,151,130,0
LB_5272:
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax  
	mov rdi,LB_5271
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call printf 
	mov rsp,QWORD [rsp_tmp]
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	jmp LB_5274
LB_5273: db 42,123,32,0
LB_5274:
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax  
	mov rdi,LB_5273
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call printf 
	mov rsp,QWORD [rsp_tmp]
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	push r8
	mov r8,QWORD [r8+8+8*0]
	jmp LB_5276
LB_5275: db 42,123,32,0
LB_5276:
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax  
	mov rdi,LB_5275
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call printf 
	mov rsp,QWORD [rsp_tmp]
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	push r8
	mov r8,QWORD [r8+8+8*0]
	mov rsi,r8
	add rsi,8
	xor rax,rax  
	mov rdi,fmt_s8
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call printf 
	mov rsp,QWORD [rsp_tmp]
	pop r8 
	jmp LB_5278
LB_5277: db 32,0
LB_5278:
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax  
	mov rdi,LB_5277
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call printf 
	mov rsp,QWORD [rsp_tmp]
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	push r8
	mov r8,QWORD [r8+8+8*1]
	call LB_5259
	pop r8 
	jmp LB_5280
LB_5279: db 32,0
LB_5280:
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax  
	mov rdi,LB_5279
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call printf 
	mov rsp,QWORD [rsp_tmp]
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	jmp LB_5282
LB_5281: db 125,32,0
LB_5282:
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax  
	mov rdi,LB_5281
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call printf 
	mov rsp,QWORD [rsp_tmp]
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	pop r8 
	jmp LB_5284
LB_5283: db 32,0
LB_5284:
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax  
	mov rdi,LB_5283
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call printf 
	mov rsp,QWORD [rsp_tmp]
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	push r8
	mov r8,QWORD [r8+8+8*1]
	call LB_5266
	pop r8 
	jmp LB_5286
LB_5285: db 32,0
LB_5286:
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax  
	mov rdi,LB_5285
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call printf 
	mov rsp,QWORD [rsp_tmp]
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	jmp LB_5288
LB_5287: db 125,32,0
LB_5288:
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax  
	mov rdi,LB_5287
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call printf 
	mov rsp,QWORD [rsp_tmp]
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	jmp LB_5270
LB_5268:
	jmp LB_5290
LB_5289: db 39,49,226,151,130,0
LB_5290:
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax  
	mov rdi,LB_5289
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call printf 
	mov rsp,QWORD [rsp_tmp]
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	jmp LB_5292
LB_5291: db 42,123,32,0
LB_5292:
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax  
	mov rdi,LB_5291
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call printf 
	mov rsp,QWORD [rsp_tmp]
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	jmp LB_5294
LB_5293: db 125,32,0
LB_5294:
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax  
	mov rdi,LB_5293
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call printf 
	mov rsp,QWORD [rsp_tmp]
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	jmp LB_5270
LB_5270:
	ret
LB_5259:
	movzx rax,BYTE [r8+6]
	jmp QWORD [LB_5297+8*rax]
LB_5297: dq LB_5295,LB_5296
LB_5295:
	jmp LB_5300
LB_5299: db 39,48,226,151,130,0
LB_5300:
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax  
	mov rdi,LB_5299
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call printf 
	mov rsp,QWORD [rsp_tmp]
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	jmp LB_5302
LB_5301: db 42,123,32,0
LB_5302:
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax  
	mov rdi,LB_5301
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call printf 
	mov rsp,QWORD [rsp_tmp]
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	push r8
	mov r8,QWORD [r8+8+8*0]
	call LB_5303
	pop r8 
	jmp LB_5305
LB_5304: db 32,0
LB_5305:
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax  
	mov rdi,LB_5304
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call printf 
	mov rsp,QWORD [rsp_tmp]
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	push r8
	mov r8,QWORD [r8+8+8*1]
	call LB_5306
	pop r8 
	jmp LB_5308
LB_5307: db 32,0
LB_5308:
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax  
	mov rdi,LB_5307
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call printf 
	mov rsp,QWORD [rsp_tmp]
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	jmp LB_5310
LB_5309: db 125,32,0
LB_5310:
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax  
	mov rdi,LB_5309
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call printf 
	mov rsp,QWORD [rsp_tmp]
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	jmp LB_5298
LB_5296:
	jmp LB_5312
LB_5311: db 39,49,226,151,130,0
LB_5312:
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax  
	mov rdi,LB_5311
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call printf 
	mov rsp,QWORD [rsp_tmp]
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	jmp LB_5314
LB_5313: db 42,123,32,0
LB_5314:
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax  
	mov rdi,LB_5313
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call printf 
	mov rsp,QWORD [rsp_tmp]
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	push r8
	mov r8,QWORD [r8+8+8*0]
	call LB_5303
	pop r8 
	jmp LB_5316
LB_5315: db 32,0
LB_5316:
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax  
	mov rdi,LB_5315
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call printf 
	mov rsp,QWORD [rsp_tmp]
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	push r8
	mov r8,QWORD [r8+8+8*1]
	call LB_5317
	pop r8 
	jmp LB_5319
LB_5318: db 32,0
LB_5319:
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax  
	mov rdi,LB_5318
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call printf 
	mov rsp,QWORD [rsp_tmp]
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	jmp LB_5321
LB_5320: db 125,32,0
LB_5321:
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax  
	mov rdi,LB_5320
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call printf 
	mov rsp,QWORD [rsp_tmp]
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	jmp LB_5298
LB_5298:
	ret
LB_5317:
	movzx rax,BYTE [r8+6]
	jmp QWORD [LB_5327+8*rax]
LB_5327: dq LB_5322,LB_5323,LB_5324,LB_5325,LB_5326
LB_5322:
	jmp LB_5330
LB_5329: db 39,48,226,151,130,0
LB_5330:
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax  
	mov rdi,LB_5329
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call printf 
	mov rsp,QWORD [rsp_tmp]
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	mov r8,QWORD [r8+8]
	call LB_5331
	jmp LB_5328
LB_5323:
	jmp LB_5333
LB_5332: db 39,49,226,151,130,0
LB_5333:
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax  
	mov rdi,LB_5332
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call printf 
	mov rsp,QWORD [rsp_tmp]
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	jmp LB_5335
LB_5334: db 42,123,32,0
LB_5335:
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax  
	mov rdi,LB_5334
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call printf 
	mov rsp,QWORD [rsp_tmp]
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	push r8
	mov r8,QWORD [r8+8+8*0]
	call LB_5317
	pop r8 
	jmp LB_5337
LB_5336: db 32,0
LB_5337:
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax  
	mov rdi,LB_5336
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call printf 
	mov rsp,QWORD [rsp_tmp]
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	push r8
	mov r8,QWORD [r8+8+8*1]
	call LB_5317
	pop r8 
	jmp LB_5339
LB_5338: db 32,0
LB_5339:
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax  
	mov rdi,LB_5338
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call printf 
	mov rsp,QWORD [rsp_tmp]
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	jmp LB_5341
LB_5340: db 125,32,0
LB_5341:
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax  
	mov rdi,LB_5340
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call printf 
	mov rsp,QWORD [rsp_tmp]
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	jmp LB_5328
LB_5324:
	jmp LB_5343
LB_5342: db 39,50,226,151,130,0
LB_5343:
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax  
	mov rdi,LB_5342
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call printf 
	mov rsp,QWORD [rsp_tmp]
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	jmp LB_5345
LB_5344: db 42,123,32,0
LB_5345:
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax  
	mov rdi,LB_5344
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call printf 
	mov rsp,QWORD [rsp_tmp]
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	push r8
	mov r8,QWORD [r8+8+8*0]
	call LB_5317
	pop r8 
	jmp LB_5347
LB_5346: db 32,0
LB_5347:
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax  
	mov rdi,LB_5346
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call printf 
	mov rsp,QWORD [rsp_tmp]
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	push r8
	mov r8,QWORD [r8+8+8*1]
	call LB_5317
	pop r8 
	jmp LB_5349
LB_5348: db 32,0
LB_5349:
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax  
	mov rdi,LB_5348
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call printf 
	mov rsp,QWORD [rsp_tmp]
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	jmp LB_5351
LB_5350: db 125,32,0
LB_5351:
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax  
	mov rdi,LB_5350
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call printf 
	mov rsp,QWORD [rsp_tmp]
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	jmp LB_5328
LB_5325:
	jmp LB_5353
LB_5352: db 39,51,226,151,130,0
LB_5353:
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax  
	mov rdi,LB_5352
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call printf 
	mov rsp,QWORD [rsp_tmp]
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	mov r8,QWORD [r8+8]
	call LB_5354
	jmp LB_5328
LB_5326:
	jmp LB_5356
LB_5355: db 39,52,226,151,130,0
LB_5356:
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax  
	mov rdi,LB_5355
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call printf 
	mov rsp,QWORD [rsp_tmp]
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	mov rsi,r8
	add rsi,8
	xor rax,rax  
	mov rdi,fmt_s8
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call printf 
	mov rsp,QWORD [rsp_tmp]
	jmp LB_5328
LB_5328:
	ret
LB_5354:
	movzx rax,BYTE [r8+6]
	jmp QWORD [LB_5359+8*rax]
LB_5359: dq LB_5357,LB_5358
LB_5357:
	jmp LB_5362
LB_5361: db 39,48,226,151,130,0
LB_5362:
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax  
	mov rdi,LB_5361
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call printf 
	mov rsp,QWORD [rsp_tmp]
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	jmp LB_5364
LB_5363: db 42,123,32,0
LB_5364:
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax  
	mov rdi,LB_5363
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call printf 
	mov rsp,QWORD [rsp_tmp]
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	push r8
	mov r8,QWORD [r8+8+8*0]
	mov rsi,r8
	add rsi,8
	xor rax,rax  
	mov rdi,fmt_s8
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call printf 
	mov rsp,QWORD [rsp_tmp]
	pop r8 
	jmp LB_5366
LB_5365: db 32,0
LB_5366:
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax  
	mov rdi,LB_5365
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call printf 
	mov rsp,QWORD [rsp_tmp]
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	push r8
	mov r8,QWORD [r8+8+8*1]
	call LB_5354
	pop r8 
	jmp LB_5368
LB_5367: db 32,0
LB_5368:
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax  
	mov rdi,LB_5367
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call printf 
	mov rsp,QWORD [rsp_tmp]
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	jmp LB_5370
LB_5369: db 125,32,0
LB_5370:
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax  
	mov rdi,LB_5369
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call printf 
	mov rsp,QWORD [rsp_tmp]
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	jmp LB_5360
LB_5358:
	jmp LB_5372
LB_5371: db 39,49,226,151,130,0
LB_5372:
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax  
	mov rdi,LB_5371
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call printf 
	mov rsp,QWORD [rsp_tmp]
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	mov rsi,r8
	add rsi,8
	xor rax,rax  
	mov rdi,fmt_s8
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call printf 
	mov rsp,QWORD [rsp_tmp]
	jmp LB_5360
LB_5360:
	ret
LB_5331:
	movzx rax,BYTE [r8+6]
	jmp QWORD [LB_5375+8*rax]
LB_5375: dq LB_5373,LB_5374
LB_5373:
	jmp LB_5378
LB_5377: db 39,48,226,151,130,0
LB_5378:
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax  
	mov rdi,LB_5377
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call printf 
	mov rsp,QWORD [rsp_tmp]
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	jmp LB_5380
LB_5379: db 42,123,32,0
LB_5380:
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax  
	mov rdi,LB_5379
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call printf 
	mov rsp,QWORD [rsp_tmp]
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	push r8
	mov r8,QWORD [r8+8+8*0]
	call LB_5317
	pop r8 
	jmp LB_5382
LB_5381: db 32,0
LB_5382:
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax  
	mov rdi,LB_5381
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call printf 
	mov rsp,QWORD [rsp_tmp]
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	push r8
	mov r8,QWORD [r8+8+8*1]
	call LB_5331
	pop r8 
	jmp LB_5384
LB_5383: db 32,0
LB_5384:
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax  
	mov rdi,LB_5383
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call printf 
	mov rsp,QWORD [rsp_tmp]
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	jmp LB_5386
LB_5385: db 125,32,0
LB_5386:
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax  
	mov rdi,LB_5385
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call printf 
	mov rsp,QWORD [rsp_tmp]
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	jmp LB_5376
LB_5374:
	jmp LB_5388
LB_5387: db 39,49,226,151,130,0
LB_5388:
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax  
	mov rdi,LB_5387
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call printf 
	mov rsp,QWORD [rsp_tmp]
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	jmp LB_5390
LB_5389: db 42,123,32,0
LB_5390:
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax  
	mov rdi,LB_5389
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call printf 
	mov rsp,QWORD [rsp_tmp]
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	jmp LB_5392
LB_5391: db 125,32,0
LB_5392:
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax  
	mov rdi,LB_5391
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call printf 
	mov rsp,QWORD [rsp_tmp]
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	jmp LB_5376
LB_5376:
	ret
LB_5306:
	movzx rax,BYTE [r8+6]
	jmp QWORD [LB_5395+8*rax]
LB_5395: dq LB_5393,LB_5394
LB_5393:
	jmp LB_5398
LB_5397: db 39,48,226,151,130,0
LB_5398:
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax  
	mov rdi,LB_5397
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call printf 
	mov rsp,QWORD [rsp_tmp]
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	jmp LB_5400
LB_5399: db 42,123,32,0
LB_5400:
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax  
	mov rdi,LB_5399
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call printf 
	mov rsp,QWORD [rsp_tmp]
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	push r8
	mov r8,QWORD [r8+8+8*0]
	jmp LB_5402
LB_5401: db 42,123,32,0
LB_5402:
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax  
	mov rdi,LB_5401
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call printf 
	mov rsp,QWORD [rsp_tmp]
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	push r8
	mov r8,QWORD [r8+8+8*0]
	mov rsi,r8
	add rsi,8
	xor rax,rax  
	mov rdi,fmt_s8
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call printf 
	mov rsp,QWORD [rsp_tmp]
	pop r8 
	jmp LB_5404
LB_5403: db 32,0
LB_5404:
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax  
	mov rdi,LB_5403
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call printf 
	mov rsp,QWORD [rsp_tmp]
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	push r8
	mov r8,QWORD [r8+8+8*1]
	call LB_5317
	pop r8 
	jmp LB_5406
LB_5405: db 32,0
LB_5406:
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax  
	mov rdi,LB_5405
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call printf 
	mov rsp,QWORD [rsp_tmp]
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	jmp LB_5408
LB_5407: db 125,32,0
LB_5408:
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax  
	mov rdi,LB_5407
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call printf 
	mov rsp,QWORD [rsp_tmp]
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	pop r8 
	jmp LB_5410
LB_5409: db 32,0
LB_5410:
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax  
	mov rdi,LB_5409
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call printf 
	mov rsp,QWORD [rsp_tmp]
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	push r8
	mov r8,QWORD [r8+8+8*1]
	call LB_5306
	pop r8 
	jmp LB_5412
LB_5411: db 32,0
LB_5412:
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax  
	mov rdi,LB_5411
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call printf 
	mov rsp,QWORD [rsp_tmp]
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	jmp LB_5414
LB_5413: db 125,32,0
LB_5414:
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax  
	mov rdi,LB_5413
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call printf 
	mov rsp,QWORD [rsp_tmp]
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	jmp LB_5396
LB_5394:
	jmp LB_5416
LB_5415: db 39,49,226,151,130,0
LB_5416:
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax  
	mov rdi,LB_5415
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call printf 
	mov rsp,QWORD [rsp_tmp]
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	jmp LB_5418
LB_5417: db 42,123,32,0
LB_5418:
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax  
	mov rdi,LB_5417
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call printf 
	mov rsp,QWORD [rsp_tmp]
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	jmp LB_5420
LB_5419: db 125,32,0
LB_5420:
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax  
	mov rdi,LB_5419
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call printf 
	mov rsp,QWORD [rsp_tmp]
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	jmp LB_5396
LB_5396:
	ret
LB_5303:
	movzx rax,BYTE [r8+6]
	jmp QWORD [LB_5423+8*rax]
LB_5423: dq LB_5421,LB_5422
LB_5421:
	jmp LB_5426
LB_5425: db 39,48,226,151,130,0
LB_5426:
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax  
	mov rdi,LB_5425
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call printf 
	mov rsp,QWORD [rsp_tmp]
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	jmp LB_5428
LB_5427: db 42,123,32,0
LB_5428:
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax  
	mov rdi,LB_5427
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call printf 
	mov rsp,QWORD [rsp_tmp]
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	push r8
	mov r8,QWORD [r8+8+8*0]
	mov rsi,r8
	add rsi,8
	xor rax,rax  
	mov rdi,fmt_s8
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call printf 
	mov rsp,QWORD [rsp_tmp]
	pop r8 
	jmp LB_5430
LB_5429: db 32,0
LB_5430:
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax  
	mov rdi,LB_5429
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call printf 
	mov rsp,QWORD [rsp_tmp]
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	push r8
	mov r8,QWORD [r8+8+8*1]
	call LB_5303
	pop r8 
	jmp LB_5432
LB_5431: db 32,0
LB_5432:
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax  
	mov rdi,LB_5431
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call printf 
	mov rsp,QWORD [rsp_tmp]
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	jmp LB_5434
LB_5433: db 125,32,0
LB_5434:
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax  
	mov rdi,LB_5433
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call printf 
	mov rsp,QWORD [rsp_tmp]
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	jmp LB_5424
LB_5422:
	jmp LB_5436
LB_5435: db 39,49,226,151,130,0
LB_5436:
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax  
	mov rdi,LB_5435
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call printf 
	mov rsp,QWORD [rsp_tmp]
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	jmp LB_5438
LB_5437: db 42,123,32,0
LB_5438:
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax  
	mov rdi,LB_5437
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call printf 
	mov rsp,QWORD [rsp_tmp]
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	jmp LB_5440
LB_5439: db 125,32,0
LB_5440:
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax  
	mov rdi,LB_5439
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call printf 
	mov rsp,QWORD [rsp_tmp]
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	jmp LB_5424
LB_5424:
	ret
LB_5252:
	movzx rax,BYTE [r8+6]
	jmp QWORD [LB_5443+8*rax]
LB_5443: dq LB_5441,LB_5442
LB_5441:
	jmp LB_5446
LB_5445: db 39,48,226,151,130,0
LB_5446:
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax  
	mov rdi,LB_5445
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call printf 
	mov rsp,QWORD [rsp_tmp]
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	jmp LB_5448
LB_5447: db 42,123,32,0
LB_5448:
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax  
	mov rdi,LB_5447
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call printf 
	mov rsp,QWORD [rsp_tmp]
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	push r8
	mov r8,QWORD [r8+8+8*0]
	jmp LB_5450
LB_5449: db 42,123,32,0
LB_5450:
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax  
	mov rdi,LB_5449
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call printf 
	mov rsp,QWORD [rsp_tmp]
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	push r8
	mov r8,QWORD [r8+8+8*0]
	mov rsi,r8
	add rsi,8
	xor rax,rax  
	mov rdi,fmt_s8
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call printf 
	mov rsp,QWORD [rsp_tmp]
	pop r8 
	jmp LB_5452
LB_5451: db 32,0
LB_5452:
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax  
	mov rdi,LB_5451
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call printf 
	mov rsp,QWORD [rsp_tmp]
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	push r8
	mov r8,QWORD [r8+8+8*1]
	call LB_5453
	pop r8 
	jmp LB_5455
LB_5454: db 32,0
LB_5455:
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax  
	mov rdi,LB_5454
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call printf 
	mov rsp,QWORD [rsp_tmp]
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	push r8
	mov r8,QWORD [r8+8+8*2]
	call LB_5456
	pop r8 
	jmp LB_5458
LB_5457: db 32,0
LB_5458:
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax  
	mov rdi,LB_5457
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call printf 
	mov rsp,QWORD [rsp_tmp]
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	push r8
	mov r8,QWORD [r8+8+8*3]
	call LB_5459
	pop r8 
	jmp LB_5461
LB_5460: db 32,0
LB_5461:
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax  
	mov rdi,LB_5460
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call printf 
	mov rsp,QWORD [rsp_tmp]
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	jmp LB_5463
LB_5462: db 125,32,0
LB_5463:
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax  
	mov rdi,LB_5462
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call printf 
	mov rsp,QWORD [rsp_tmp]
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	pop r8 
	jmp LB_5465
LB_5464: db 32,0
LB_5465:
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax  
	mov rdi,LB_5464
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call printf 
	mov rsp,QWORD [rsp_tmp]
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	push r8
	mov r8,QWORD [r8+8+8*1]
	call LB_5252
	pop r8 
	jmp LB_5467
LB_5466: db 32,0
LB_5467:
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax  
	mov rdi,LB_5466
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call printf 
	mov rsp,QWORD [rsp_tmp]
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	jmp LB_5469
LB_5468: db 125,32,0
LB_5469:
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax  
	mov rdi,LB_5468
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call printf 
	mov rsp,QWORD [rsp_tmp]
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	jmp LB_5444
LB_5442:
	jmp LB_5471
LB_5470: db 39,49,226,151,130,0
LB_5471:
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax  
	mov rdi,LB_5470
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call printf 
	mov rsp,QWORD [rsp_tmp]
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	jmp LB_5473
LB_5472: db 42,123,32,0
LB_5473:
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax  
	mov rdi,LB_5472
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call printf 
	mov rsp,QWORD [rsp_tmp]
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	jmp LB_5475
LB_5474: db 125,32,0
LB_5475:
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax  
	mov rdi,LB_5474
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call printf 
	mov rsp,QWORD [rsp_tmp]
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	jmp LB_5444
LB_5444:
	ret
LB_5459:
	movzx rax,BYTE [r8+6]
	jmp QWORD [LB_5483+8*rax]
LB_5483: dq LB_5476,LB_5477,LB_5478,LB_5479,LB_5480,LB_5481,LB_5482
LB_5476:
	jmp LB_5486
LB_5485: db 39,48,226,151,130,0
LB_5486:
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax  
	mov rdi,LB_5485
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call printf 
	mov rsp,QWORD [rsp_tmp]
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	jmp LB_5488
LB_5487: db 42,123,32,0
LB_5488:
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax  
	mov rdi,LB_5487
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call printf 
	mov rsp,QWORD [rsp_tmp]
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	push r8
	mov r8,QWORD [r8+8+8*0]
	call LB_5354
	pop r8 
	jmp LB_5490
LB_5489: db 32,0
LB_5490:
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax  
	mov rdi,LB_5489
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call printf 
	mov rsp,QWORD [rsp_tmp]
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	push r8
	mov r8,QWORD [r8+8+8*1]
	call LB_5491
	pop r8 
	jmp LB_5493
LB_5492: db 32,0
LB_5493:
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax  
	mov rdi,LB_5492
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call printf 
	mov rsp,QWORD [rsp_tmp]
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	jmp LB_5495
LB_5494: db 125,32,0
LB_5495:
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax  
	mov rdi,LB_5494
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call printf 
	mov rsp,QWORD [rsp_tmp]
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	jmp LB_5484
LB_5477:
	jmp LB_5497
LB_5496: db 39,49,226,151,130,0
LB_5497:
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax  
	mov rdi,LB_5496
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call printf 
	mov rsp,QWORD [rsp_tmp]
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	jmp LB_5499
LB_5498: db 42,123,32,0
LB_5499:
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax  
	mov rdi,LB_5498
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call printf 
	mov rsp,QWORD [rsp_tmp]
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	push r8
	mov r8,QWORD [r8+8+8*0]
	call LB_5500
	pop r8 
	jmp LB_5502
LB_5501: db 32,0
LB_5502:
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax  
	mov rdi,LB_5501
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call printf 
	mov rsp,QWORD [rsp_tmp]
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	push r8
	mov r8,QWORD [r8+8+8*1]
	call LB_5491
	pop r8 
	jmp LB_5504
LB_5503: db 32,0
LB_5504:
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax  
	mov rdi,LB_5503
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call printf 
	mov rsp,QWORD [rsp_tmp]
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	jmp LB_5506
LB_5505: db 125,32,0
LB_5506:
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax  
	mov rdi,LB_5505
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call printf 
	mov rsp,QWORD [rsp_tmp]
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	jmp LB_5484
LB_5478:
	jmp LB_5508
LB_5507: db 39,50,226,151,130,0
LB_5508:
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax  
	mov rdi,LB_5507
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call printf 
	mov rsp,QWORD [rsp_tmp]
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	jmp LB_5510
LB_5509: db 42,123,32,0
LB_5510:
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax  
	mov rdi,LB_5509
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call printf 
	mov rsp,QWORD [rsp_tmp]
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	push r8
	mov r8,QWORD [r8+8+8*0]
	call LB_5511
	pop r8 
	jmp LB_5513
LB_5512: db 32,0
LB_5513:
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax  
	mov rdi,LB_5512
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call printf 
	mov rsp,QWORD [rsp_tmp]
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	push r8
	mov r8,QWORD [r8+8+8*1]
	call LB_5459
	pop r8 
	jmp LB_5515
LB_5514: db 32,0
LB_5515:
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax  
	mov rdi,LB_5514
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call printf 
	mov rsp,QWORD [rsp_tmp]
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	jmp LB_5517
LB_5516: db 125,32,0
LB_5517:
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax  
	mov rdi,LB_5516
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call printf 
	mov rsp,QWORD [rsp_tmp]
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	jmp LB_5484
LB_5479:
	jmp LB_5519
LB_5518: db 39,51,226,151,130,0
LB_5519:
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax  
	mov rdi,LB_5518
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call printf 
	mov rsp,QWORD [rsp_tmp]
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	mov r8,QWORD [r8+8]
	call LB_5520
	jmp LB_5484
LB_5480:
	jmp LB_5522
LB_5521: db 39,52,226,151,130,0
LB_5522:
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax  
	mov rdi,LB_5521
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call printf 
	mov rsp,QWORD [rsp_tmp]
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	jmp LB_5524
LB_5523: db 42,123,32,0
LB_5524:
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax  
	mov rdi,LB_5523
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call printf 
	mov rsp,QWORD [rsp_tmp]
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	push r8
	mov r8,QWORD [r8+8+8*0]
	call LB_5491
	pop r8 
	jmp LB_5526
LB_5525: db 32,0
LB_5526:
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax  
	mov rdi,LB_5525
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call printf 
	mov rsp,QWORD [rsp_tmp]
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	push r8
	mov r8,QWORD [r8+8+8*1]
	call LB_5527
	pop r8 
	jmp LB_5529
LB_5528: db 32,0
LB_5529:
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax  
	mov rdi,LB_5528
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call printf 
	mov rsp,QWORD [rsp_tmp]
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	jmp LB_5531
LB_5530: db 125,32,0
LB_5531:
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax  
	mov rdi,LB_5530
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call printf 
	mov rsp,QWORD [rsp_tmp]
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	jmp LB_5484
LB_5481:
	jmp LB_5533
LB_5532: db 39,53,226,151,130,0
LB_5533:
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax  
	mov rdi,LB_5532
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call printf 
	mov rsp,QWORD [rsp_tmp]
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	mov r8,QWORD [r8+8]
	call LB_5491
	jmp LB_5484
LB_5482:
	jmp LB_5535
LB_5534: db 39,54,226,151,130,0
LB_5535:
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax  
	mov rdi,LB_5534
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call printf 
	mov rsp,QWORD [rsp_tmp]
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	mov r8,QWORD [r8+8]
	mov rsi,r8
	xor rax,rax  
	mov rdi,fmt_r64
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call printf 
	mov rsp,QWORD [rsp_tmp]
	jmp LB_5484
LB_5484:
	ret
LB_5527:
	movzx rax,BYTE [r8+6]
	jmp QWORD [LB_5538+8*rax]
LB_5538: dq LB_5536,LB_5537
LB_5536:
	jmp LB_5541
LB_5540: db 39,48,226,151,130,0
LB_5541:
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax  
	mov rdi,LB_5540
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call printf 
	mov rsp,QWORD [rsp_tmp]
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	mov r8,QWORD [r8+8]
	call LB_5542
	jmp LB_5539
LB_5537:
	jmp LB_5544
LB_5543: db 39,49,226,151,130,0
LB_5544:
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax  
	mov rdi,LB_5543
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call printf 
	mov rsp,QWORD [rsp_tmp]
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	jmp LB_5546
LB_5545: db 42,123,32,0
LB_5546:
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax  
	mov rdi,LB_5545
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call printf 
	mov rsp,QWORD [rsp_tmp]
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	push r8
	mov r8,QWORD [r8+8+8*0]
	call LB_5547
	pop r8 
	jmp LB_5549
LB_5548: db 32,0
LB_5549:
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax  
	mov rdi,LB_5548
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call printf 
	mov rsp,QWORD [rsp_tmp]
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	push r8
	mov r8,QWORD [r8+8+8*1]
	call LB_5459
	pop r8 
	jmp LB_5551
LB_5550: db 32,0
LB_5551:
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax  
	mov rdi,LB_5550
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call printf 
	mov rsp,QWORD [rsp_tmp]
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	jmp LB_5553
LB_5552: db 125,32,0
LB_5553:
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax  
	mov rdi,LB_5552
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call printf 
	mov rsp,QWORD [rsp_tmp]
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	jmp LB_5539
LB_5539:
	ret
LB_5547:
	movzx rax,BYTE [r8+6]
	jmp QWORD [LB_5556+8*rax]
LB_5556: dq LB_5554,LB_5555
LB_5554:
	jmp LB_5559
LB_5558: db 39,48,226,151,130,0
LB_5559:
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax  
	mov rdi,LB_5558
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call printf 
	mov rsp,QWORD [rsp_tmp]
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	jmp LB_5561
LB_5560: db 42,123,32,0
LB_5561:
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax  
	mov rdi,LB_5560
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call printf 
	mov rsp,QWORD [rsp_tmp]
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	push r8
	mov r8,QWORD [r8+8+8*0]
	call LB_5453
	pop r8 
	jmp LB_5563
LB_5562: db 32,0
LB_5563:
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax  
	mov rdi,LB_5562
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call printf 
	mov rsp,QWORD [rsp_tmp]
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	push r8
	mov r8,QWORD [r8+8+8*1]
	call LB_5547
	pop r8 
	jmp LB_5565
LB_5564: db 32,0
LB_5565:
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax  
	mov rdi,LB_5564
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call printf 
	mov rsp,QWORD [rsp_tmp]
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	jmp LB_5567
LB_5566: db 125,32,0
LB_5567:
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax  
	mov rdi,LB_5566
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call printf 
	mov rsp,QWORD [rsp_tmp]
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	jmp LB_5557
LB_5555:
	jmp LB_5569
LB_5568: db 39,49,226,151,130,0
LB_5569:
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax  
	mov rdi,LB_5568
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call printf 
	mov rsp,QWORD [rsp_tmp]
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	jmp LB_5571
LB_5570: db 42,123,32,0
LB_5571:
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax  
	mov rdi,LB_5570
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call printf 
	mov rsp,QWORD [rsp_tmp]
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	jmp LB_5573
LB_5572: db 125,32,0
LB_5573:
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax  
	mov rdi,LB_5572
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call printf 
	mov rsp,QWORD [rsp_tmp]
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	jmp LB_5557
LB_5557:
	ret
LB_5542:
	movzx rax,BYTE [r8+6]
	jmp QWORD [LB_5576+8*rax]
LB_5576: dq LB_5574,LB_5575
LB_5574:
	jmp LB_5579
LB_5578: db 39,48,226,151,130,0
LB_5579:
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax  
	mov rdi,LB_5578
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call printf 
	mov rsp,QWORD [rsp_tmp]
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	jmp LB_5581
LB_5580: db 42,123,32,0
LB_5581:
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax  
	mov rdi,LB_5580
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call printf 
	mov rsp,QWORD [rsp_tmp]
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	push r8
	mov r8,QWORD [r8+8+8*0]
	jmp LB_5583
LB_5582: db 42,123,32,0
LB_5583:
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax  
	mov rdi,LB_5582
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call printf 
	mov rsp,QWORD [rsp_tmp]
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	push r8
	mov r8,QWORD [r8+8+8*0]
	call LB_5584
	pop r8 
	jmp LB_5586
LB_5585: db 32,0
LB_5586:
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax  
	mov rdi,LB_5585
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call printf 
	mov rsp,QWORD [rsp_tmp]
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	push r8
	mov r8,QWORD [r8+8+8*1]
	call LB_5587
	pop r8 
	jmp LB_5589
LB_5588: db 32,0
LB_5589:
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax  
	mov rdi,LB_5588
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call printf 
	mov rsp,QWORD [rsp_tmp]
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	push r8
	mov r8,QWORD [r8+8+8*2]
	call LB_5590
	pop r8 
	jmp LB_5592
LB_5591: db 32,0
LB_5592:
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax  
	mov rdi,LB_5591
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call printf 
	mov rsp,QWORD [rsp_tmp]
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	jmp LB_5594
LB_5593: db 125,32,0
LB_5594:
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax  
	mov rdi,LB_5593
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call printf 
	mov rsp,QWORD [rsp_tmp]
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	pop r8 
	jmp LB_5596
LB_5595: db 32,0
LB_5596:
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax  
	mov rdi,LB_5595
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call printf 
	mov rsp,QWORD [rsp_tmp]
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	push r8
	mov r8,QWORD [r8+8+8*1]
	call LB_5542
	pop r8 
	jmp LB_5598
LB_5597: db 32,0
LB_5598:
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax  
	mov rdi,LB_5597
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call printf 
	mov rsp,QWORD [rsp_tmp]
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	jmp LB_5600
LB_5599: db 125,32,0
LB_5600:
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax  
	mov rdi,LB_5599
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call printf 
	mov rsp,QWORD [rsp_tmp]
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	jmp LB_5577
LB_5575:
	jmp LB_5602
LB_5601: db 39,49,226,151,130,0
LB_5602:
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax  
	mov rdi,LB_5601
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call printf 
	mov rsp,QWORD [rsp_tmp]
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	jmp LB_5604
LB_5603: db 42,123,32,0
LB_5604:
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax  
	mov rdi,LB_5603
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call printf 
	mov rsp,QWORD [rsp_tmp]
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	push r8
	mov r8,QWORD [r8+8+8*0]
	call LB_5584
	pop r8 
	jmp LB_5606
LB_5605: db 32,0
LB_5606:
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax  
	mov rdi,LB_5605
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call printf 
	mov rsp,QWORD [rsp_tmp]
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	push r8
	mov r8,QWORD [r8+8+8*1]
	call LB_5587
	pop r8 
	jmp LB_5608
LB_5607: db 32,0
LB_5608:
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax  
	mov rdi,LB_5607
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call printf 
	mov rsp,QWORD [rsp_tmp]
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	push r8
	mov r8,QWORD [r8+8+8*2]
	call LB_5590
	pop r8 
	jmp LB_5610
LB_5609: db 32,0
LB_5610:
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax  
	mov rdi,LB_5609
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call printf 
	mov rsp,QWORD [rsp_tmp]
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	jmp LB_5612
LB_5611: db 125,32,0
LB_5612:
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax  
	mov rdi,LB_5611
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call printf 
	mov rsp,QWORD [rsp_tmp]
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	jmp LB_5577
LB_5577:
	ret
LB_5590:
	movzx rax,BYTE [r8+6]
	jmp QWORD [LB_5616+8*rax]
LB_5616: dq LB_5613,LB_5614,LB_5615
LB_5613:
	jmp LB_5619
LB_5618: db 39,48,226,151,130,0
LB_5619:
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax  
	mov rdi,LB_5618
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call printf 
	mov rsp,QWORD [rsp_tmp]
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	mov r8,QWORD [r8+8]
	call LB_5520
	jmp LB_5617
LB_5614:
	jmp LB_5621
LB_5620: db 39,49,226,151,130,0
LB_5621:
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax  
	mov rdi,LB_5620
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call printf 
	mov rsp,QWORD [rsp_tmp]
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	jmp LB_5623
LB_5622: db 42,123,32,0
LB_5623:
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax  
	mov rdi,LB_5622
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call printf 
	mov rsp,QWORD [rsp_tmp]
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	push r8
	mov r8,QWORD [r8+8+8*0]
	call LB_5491
	pop r8 
	jmp LB_5625
LB_5624: db 32,0
LB_5625:
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax  
	mov rdi,LB_5624
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call printf 
	mov rsp,QWORD [rsp_tmp]
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	push r8
	mov r8,QWORD [r8+8+8*1]
	call LB_5542
	pop r8 
	jmp LB_5627
LB_5626: db 32,0
LB_5627:
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax  
	mov rdi,LB_5626
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call printf 
	mov rsp,QWORD [rsp_tmp]
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	jmp LB_5629
LB_5628: db 125,32,0
LB_5629:
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax  
	mov rdi,LB_5628
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call printf 
	mov rsp,QWORD [rsp_tmp]
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	jmp LB_5617
LB_5615:
	jmp LB_5631
LB_5630: db 39,50,226,151,130,0
LB_5631:
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax  
	mov rdi,LB_5630
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call printf 
	mov rsp,QWORD [rsp_tmp]
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	mov r8,QWORD [r8+8]
	call LB_5459
	jmp LB_5617
LB_5617:
	ret
LB_5587:
	movzx rax,BYTE [r8+6]
	jmp QWORD [LB_5634+8*rax]
LB_5634: dq LB_5632,LB_5633
LB_5632:
	jmp LB_5637
LB_5636: db 39,48,226,151,130,0
LB_5637:
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax  
	mov rdi,LB_5636
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call printf 
	mov rsp,QWORD [rsp_tmp]
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	jmp LB_5639
LB_5638: db 42,123,32,0
LB_5639:
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax  
	mov rdi,LB_5638
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call printf 
	mov rsp,QWORD [rsp_tmp]
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	push r8
	mov r8,QWORD [r8+8+8*0]
	call LB_5640
	pop r8 
	jmp LB_5642
LB_5641: db 32,0
LB_5642:
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax  
	mov rdi,LB_5641
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call printf 
	mov rsp,QWORD [rsp_tmp]
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	push r8
	mov r8,QWORD [r8+8+8*1]
	call LB_5587
	pop r8 
	jmp LB_5644
LB_5643: db 32,0
LB_5644:
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax  
	mov rdi,LB_5643
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call printf 
	mov rsp,QWORD [rsp_tmp]
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	jmp LB_5646
LB_5645: db 125,32,0
LB_5646:
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax  
	mov rdi,LB_5645
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call printf 
	mov rsp,QWORD [rsp_tmp]
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	jmp LB_5635
LB_5633:
	jmp LB_5648
LB_5647: db 39,49,226,151,130,0
LB_5648:
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax  
	mov rdi,LB_5647
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call printf 
	mov rsp,QWORD [rsp_tmp]
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	jmp LB_5650
LB_5649: db 42,123,32,0
LB_5650:
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax  
	mov rdi,LB_5649
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call printf 
	mov rsp,QWORD [rsp_tmp]
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	jmp LB_5652
LB_5651: db 125,32,0
LB_5652:
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax  
	mov rdi,LB_5651
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call printf 
	mov rsp,QWORD [rsp_tmp]
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	jmp LB_5635
LB_5635:
	ret
LB_5640:
	movzx rax,BYTE [r8+6]
	jmp QWORD [LB_5656+8*rax]
LB_5656: dq LB_5653,LB_5654,LB_5655
LB_5653:
	jmp LB_5659
LB_5658: db 39,48,226,151,130,0
LB_5659:
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax  
	mov rdi,LB_5658
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call printf 
	mov rsp,QWORD [rsp_tmp]
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	jmp LB_5661
LB_5660: db 42,123,32,0
LB_5661:
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax  
	mov rdi,LB_5660
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call printf 
	mov rsp,QWORD [rsp_tmp]
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	push r8
	mov r8,QWORD [r8+8+8*0]
	call LB_5491
	pop r8 
	jmp LB_5663
LB_5662: db 32,0
LB_5663:
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax  
	mov rdi,LB_5662
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call printf 
	mov rsp,QWORD [rsp_tmp]
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	push r8
	mov r8,QWORD [r8+8+8*1]
	call LB_5584
	pop r8 
	jmp LB_5665
LB_5664: db 32,0
LB_5665:
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax  
	mov rdi,LB_5664
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call printf 
	mov rsp,QWORD [rsp_tmp]
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	jmp LB_5667
LB_5666: db 125,32,0
LB_5667:
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax  
	mov rdi,LB_5666
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call printf 
	mov rsp,QWORD [rsp_tmp]
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	jmp LB_5657
LB_5654:
	jmp LB_5669
LB_5668: db 39,49,226,151,130,0
LB_5669:
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax  
	mov rdi,LB_5668
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call printf 
	mov rsp,QWORD [rsp_tmp]
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	jmp LB_5671
LB_5670: db 42,123,32,0
LB_5671:
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax  
	mov rdi,LB_5670
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call printf 
	mov rsp,QWORD [rsp_tmp]
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	push r8
	mov r8,QWORD [r8+8+8*0]
	call LB_5672
	pop r8 
	jmp LB_5674
LB_5673: db 32,0
LB_5674:
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax  
	mov rdi,LB_5673
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call printf 
	mov rsp,QWORD [rsp_tmp]
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	push r8
	mov r8,QWORD [r8+8+8*1]
	call LB_5672
	pop r8 
	jmp LB_5676
LB_5675: db 32,0
LB_5676:
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax  
	mov rdi,LB_5675
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call printf 
	mov rsp,QWORD [rsp_tmp]
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	jmp LB_5678
LB_5677: db 125,32,0
LB_5678:
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax  
	mov rdi,LB_5677
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call printf 
	mov rsp,QWORD [rsp_tmp]
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	jmp LB_5657
LB_5655:
	jmp LB_5680
LB_5679: db 39,50,226,151,130,0
LB_5680:
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax  
	mov rdi,LB_5679
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call printf 
	mov rsp,QWORD [rsp_tmp]
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	jmp LB_5682
LB_5681: db 42,123,32,0
LB_5682:
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax  
	mov rdi,LB_5681
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call printf 
	mov rsp,QWORD [rsp_tmp]
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	push r8
	mov r8,QWORD [r8+8+8*0]
	call LB_5672
	pop r8 
	jmp LB_5684
LB_5683: db 32,0
LB_5684:
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax  
	mov rdi,LB_5683
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call printf 
	mov rsp,QWORD [rsp_tmp]
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	push r8
	mov r8,QWORD [r8+8+8*1]
	call LB_5672
	pop r8 
	jmp LB_5686
LB_5685: db 32,0
LB_5686:
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax  
	mov rdi,LB_5685
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call printf 
	mov rsp,QWORD [rsp_tmp]
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	jmp LB_5688
LB_5687: db 125,32,0
LB_5688:
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax  
	mov rdi,LB_5687
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call printf 
	mov rsp,QWORD [rsp_tmp]
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	jmp LB_5657
LB_5657:
	ret
LB_5672:
	movzx rax,BYTE [r8+6]
	jmp QWORD [LB_5691+8*rax]
LB_5691: dq LB_5689,LB_5690
LB_5689:
	jmp LB_5694
LB_5693: db 39,48,226,151,130,0
LB_5694:
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax  
	mov rdi,LB_5693
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call printf 
	mov rsp,QWORD [rsp_tmp]
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	mov r8,QWORD [r8+8]
	call LB_5695
	jmp LB_5692
LB_5690:
	jmp LB_5697
LB_5696: db 39,49,226,151,130,0
LB_5697:
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax  
	mov rdi,LB_5696
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call printf 
	mov rsp,QWORD [rsp_tmp]
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	mov rsi,r8
	add rsi,8
	xor rax,rax  
	mov rdi,fmt_s8
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call printf 
	mov rsp,QWORD [rsp_tmp]
	jmp LB_5692
LB_5692:
	ret
LB_5695:
	movzx rax,BYTE [r8+6]
	jmp QWORD [LB_5700+8*rax]
LB_5700: dq LB_5698,LB_5699
LB_5698:
	jmp LB_5703
LB_5702: db 39,48,226,151,130,0
LB_5703:
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax  
	mov rdi,LB_5702
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call printf 
	mov rsp,QWORD [rsp_tmp]
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	mov r8,QWORD [r8+8]
	call LB_5704
	jmp LB_5701
LB_5699:
	jmp LB_5706
LB_5705: db 39,49,226,151,130,0
LB_5706:
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax  
	mov rdi,LB_5705
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call printf 
	mov rsp,QWORD [rsp_tmp]
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	mov r8,QWORD [r8+8]
	call LB_5354
	jmp LB_5701
LB_5701:
	ret
LB_5704:
	movzx rax,BYTE [r8+6]
	jmp QWORD [LB_5709+8*rax]
LB_5709: dq LB_5707,LB_5708
LB_5707:
	jmp LB_5712
LB_5711: db 39,48,226,151,130,0
LB_5712:
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax  
	mov rdi,LB_5711
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call printf 
	mov rsp,QWORD [rsp_tmp]
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	mov r8,QWORD [r8+8]
	mov rsi,r8
	xor rax,rax  
	mov rdi,fmt_r64
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call printf 
	mov rsp,QWORD [rsp_tmp]
	jmp LB_5710
LB_5708:
	jmp LB_5714
LB_5713: db 39,49,226,151,130,0
LB_5714:
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax  
	mov rdi,LB_5713
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call printf 
	mov rsp,QWORD [rsp_tmp]
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	mov rsi,r8
	add rsi,8
	xor rax,rax  
	mov rdi,fmt_s8
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call printf 
	mov rsp,QWORD [rsp_tmp]
	jmp LB_5710
LB_5710:
	ret
LB_5584:
	movzx rax,BYTE [r8+6]
	jmp QWORD [LB_5717+8*rax]
LB_5717: dq LB_5715,LB_5716
LB_5715:
	jmp LB_5720
LB_5719: db 39,48,226,151,130,0
LB_5720:
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax  
	mov rdi,LB_5719
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call printf 
	mov rsp,QWORD [rsp_tmp]
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	mov r8,QWORD [r8+8]
	call LB_5721
	jmp LB_5718
LB_5716:
	jmp LB_5723
LB_5722: db 39,49,226,151,130,0
LB_5723:
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax  
	mov rdi,LB_5722
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call printf 
	mov rsp,QWORD [rsp_tmp]
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	mov r8,QWORD [r8+8]
	call LB_5724
	jmp LB_5718
LB_5718:
	ret
LB_5724:
	movzx rax,BYTE [r8+6]
	jmp QWORD [LB_5729+8*rax]
LB_5729: dq LB_5725,LB_5726,LB_5727,LB_5728
LB_5725:
	jmp LB_5732
LB_5731: db 39,48,226,151,130,0
LB_5732:
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax  
	mov rdi,LB_5731
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call printf 
	mov rsp,QWORD [rsp_tmp]
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	jmp LB_5734
LB_5733: db 42,123,32,0
LB_5734:
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax  
	mov rdi,LB_5733
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call printf 
	mov rsp,QWORD [rsp_tmp]
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	push r8
	mov r8,QWORD [r8+8+8*0]
	call LB_5354
	pop r8 
	jmp LB_5736
LB_5735: db 32,0
LB_5736:
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax  
	mov rdi,LB_5735
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call printf 
	mov rsp,QWORD [rsp_tmp]
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	push r8
	mov r8,QWORD [r8+8+8*1]
	call LB_5584
	pop r8 
	jmp LB_5738
LB_5737: db 32,0
LB_5738:
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax  
	mov rdi,LB_5737
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call printf 
	mov rsp,QWORD [rsp_tmp]
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	jmp LB_5740
LB_5739: db 125,32,0
LB_5740:
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax  
	mov rdi,LB_5739
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call printf 
	mov rsp,QWORD [rsp_tmp]
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	jmp LB_5730
LB_5726:
	jmp LB_5742
LB_5741: db 39,49,226,151,130,0
LB_5742:
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax  
	mov rdi,LB_5741
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call printf 
	mov rsp,QWORD [rsp_tmp]
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	mov r8,QWORD [r8+8]
	call LB_5695
	jmp LB_5730
LB_5727:
	jmp LB_5744
LB_5743: db 39,50,226,151,130,0
LB_5744:
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax  
	mov rdi,LB_5743
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call printf 
	mov rsp,QWORD [rsp_tmp]
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	mov r8,QWORD [r8+8]
	call LB_5745
	jmp LB_5730
LB_5728:
	jmp LB_5747
LB_5746: db 39,51,226,151,130,0
LB_5747:
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax  
	mov rdi,LB_5746
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call printf 
	mov rsp,QWORD [rsp_tmp]
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	mov rsi,r8
	add rsi,8
	xor rax,rax  
	mov rdi,fmt_s8
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call printf 
	mov rsp,QWORD [rsp_tmp]
	jmp LB_5730
LB_5730:
	ret
LB_5745:
	movzx rax,BYTE [r8+6]
	jmp QWORD [LB_5750+8*rax]
LB_5750: dq LB_5748,LB_5749
LB_5748:
	jmp LB_5753
LB_5752: db 39,48,226,151,130,0
LB_5753:
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax  
	mov rdi,LB_5752
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call printf 
	mov rsp,QWORD [rsp_tmp]
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	mov rsi,r8
	add rsi,8
	xor rax,rax  
	mov rdi,fmt_s8
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call printf 
	mov rsp,QWORD [rsp_tmp]
	jmp LB_5751
LB_5749:
	jmp LB_5755
LB_5754: db 39,49,226,151,130,0
LB_5755:
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax  
	mov rdi,LB_5754
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call printf 
	mov rsp,QWORD [rsp_tmp]
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	jmp LB_5757
LB_5756: db 42,123,32,0
LB_5757:
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax  
	mov rdi,LB_5756
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call printf 
	mov rsp,QWORD [rsp_tmp]
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	jmp LB_5759
LB_5758: db 125,32,0
LB_5759:
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax  
	mov rdi,LB_5758
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call printf 
	mov rsp,QWORD [rsp_tmp]
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	jmp LB_5751
LB_5751:
	ret
LB_5721:
	movzx rax,BYTE [r8+6]
	jmp QWORD [LB_5762+8*rax]
LB_5762: dq LB_5760,LB_5761
LB_5760:
	jmp LB_5765
LB_5764: db 39,48,226,151,130,0
LB_5765:
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax  
	mov rdi,LB_5764
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call printf 
	mov rsp,QWORD [rsp_tmp]
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	jmp LB_5767
LB_5766: db 42,123,32,0
LB_5767:
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax  
	mov rdi,LB_5766
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call printf 
	mov rsp,QWORD [rsp_tmp]
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	push r8
	mov r8,QWORD [r8+8+8*0]
	call LB_5584
	pop r8 
	jmp LB_5769
LB_5768: db 32,0
LB_5769:
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax  
	mov rdi,LB_5768
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call printf 
	mov rsp,QWORD [rsp_tmp]
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	push r8
	mov r8,QWORD [r8+8+8*1]
	call LB_5721
	pop r8 
	jmp LB_5771
LB_5770: db 32,0
LB_5771:
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax  
	mov rdi,LB_5770
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call printf 
	mov rsp,QWORD [rsp_tmp]
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	jmp LB_5773
LB_5772: db 125,32,0
LB_5773:
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax  
	mov rdi,LB_5772
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call printf 
	mov rsp,QWORD [rsp_tmp]
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	jmp LB_5763
LB_5761:
	jmp LB_5775
LB_5774: db 39,49,226,151,130,0
LB_5775:
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax  
	mov rdi,LB_5774
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call printf 
	mov rsp,QWORD [rsp_tmp]
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	jmp LB_5777
LB_5776: db 42,123,32,0
LB_5777:
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax  
	mov rdi,LB_5776
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call printf 
	mov rsp,QWORD [rsp_tmp]
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	jmp LB_5779
LB_5778: db 125,32,0
LB_5779:
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax  
	mov rdi,LB_5778
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call printf 
	mov rsp,QWORD [rsp_tmp]
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	jmp LB_5763
LB_5763:
	ret
LB_5520:
	movzx rax,BYTE [r8+6]
	jmp QWORD [LB_5782+8*rax]
LB_5782: dq LB_5780,LB_5781
LB_5780:
	jmp LB_5785
LB_5784: db 39,48,226,151,130,0
LB_5785:
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax  
	mov rdi,LB_5784
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call printf 
	mov rsp,QWORD [rsp_tmp]
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	jmp LB_5787
LB_5786: db 42,123,32,0
LB_5787:
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax  
	mov rdi,LB_5786
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call printf 
	mov rsp,QWORD [rsp_tmp]
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	push r8
	mov r8,QWORD [r8+8+8*0]
	jmp LB_5789
LB_5788: db 42,123,32,0
LB_5789:
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax  
	mov rdi,LB_5788
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call printf 
	mov rsp,QWORD [rsp_tmp]
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	push r8
	mov r8,QWORD [r8+8+8*0]
	call LB_5587
	pop r8 
	jmp LB_5791
LB_5790: db 32,0
LB_5791:
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax  
	mov rdi,LB_5790
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call printf 
	mov rsp,QWORD [rsp_tmp]
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	push r8
	mov r8,QWORD [r8+8+8*1]
	call LB_5590
	pop r8 
	jmp LB_5793
LB_5792: db 32,0
LB_5793:
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax  
	mov rdi,LB_5792
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call printf 
	mov rsp,QWORD [rsp_tmp]
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	jmp LB_5795
LB_5794: db 125,32,0
LB_5795:
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax  
	mov rdi,LB_5794
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call printf 
	mov rsp,QWORD [rsp_tmp]
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	pop r8 
	jmp LB_5797
LB_5796: db 32,0
LB_5797:
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax  
	mov rdi,LB_5796
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call printf 
	mov rsp,QWORD [rsp_tmp]
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	push r8
	mov r8,QWORD [r8+8+8*1]
	call LB_5520
	pop r8 
	jmp LB_5799
LB_5798: db 32,0
LB_5799:
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax  
	mov rdi,LB_5798
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call printf 
	mov rsp,QWORD [rsp_tmp]
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	jmp LB_5801
LB_5800: db 125,32,0
LB_5801:
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax  
	mov rdi,LB_5800
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call printf 
	mov rsp,QWORD [rsp_tmp]
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	jmp LB_5783
LB_5781:
	jmp LB_5803
LB_5802: db 39,49,226,151,130,0
LB_5803:
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax  
	mov rdi,LB_5802
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call printf 
	mov rsp,QWORD [rsp_tmp]
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	jmp LB_5805
LB_5804: db 42,123,32,0
LB_5805:
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax  
	mov rdi,LB_5804
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call printf 
	mov rsp,QWORD [rsp_tmp]
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	push r8
	mov r8,QWORD [r8+8+8*0]
	call LB_5587
	pop r8 
	jmp LB_5807
LB_5806: db 32,0
LB_5807:
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax  
	mov rdi,LB_5806
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call printf 
	mov rsp,QWORD [rsp_tmp]
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	push r8
	mov r8,QWORD [r8+8+8*1]
	call LB_5590
	pop r8 
	jmp LB_5809
LB_5808: db 32,0
LB_5809:
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax  
	mov rdi,LB_5808
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call printf 
	mov rsp,QWORD [rsp_tmp]
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	jmp LB_5811
LB_5810: db 125,32,0
LB_5811:
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax  
	mov rdi,LB_5810
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call printf 
	mov rsp,QWORD [rsp_tmp]
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	jmp LB_5783
LB_5783:
	ret
LB_5511:
	movzx rax,BYTE [r8+6]
	jmp QWORD [LB_5816+8*rax]
LB_5816: dq LB_5812,LB_5813,LB_5814,LB_5815
LB_5812:
	jmp LB_5819
LB_5818: db 39,48,226,151,130,0
LB_5819:
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax  
	mov rdi,LB_5818
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call printf 
	mov rsp,QWORD [rsp_tmp]
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	jmp LB_5821
LB_5820: db 42,123,32,0
LB_5821:
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax  
	mov rdi,LB_5820
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call printf 
	mov rsp,QWORD [rsp_tmp]
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	push r8
	mov r8,QWORD [r8+8+8*0]
	call LB_5354
	pop r8 
	jmp LB_5823
LB_5822: db 32,0
LB_5823:
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax  
	mov rdi,LB_5822
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call printf 
	mov rsp,QWORD [rsp_tmp]
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	push r8
	mov r8,QWORD [r8+8+8*1]
	call LB_5491
	pop r8 
	jmp LB_5825
LB_5824: db 32,0
LB_5825:
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax  
	mov rdi,LB_5824
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call printf 
	mov rsp,QWORD [rsp_tmp]
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	push r8
	mov r8,QWORD [r8+8+8*2]
	call LB_5453
	pop r8 
	jmp LB_5827
LB_5826: db 32,0
LB_5827:
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax  
	mov rdi,LB_5826
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call printf 
	mov rsp,QWORD [rsp_tmp]
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	jmp LB_5829
LB_5828: db 125,32,0
LB_5829:
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax  
	mov rdi,LB_5828
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call printf 
	mov rsp,QWORD [rsp_tmp]
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	jmp LB_5817
LB_5813:
	jmp LB_5831
LB_5830: db 39,49,226,151,130,0
LB_5831:
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax  
	mov rdi,LB_5830
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call printf 
	mov rsp,QWORD [rsp_tmp]
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	jmp LB_5833
LB_5832: db 42,123,32,0
LB_5833:
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax  
	mov rdi,LB_5832
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call printf 
	mov rsp,QWORD [rsp_tmp]
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	push r8
	mov r8,QWORD [r8+8+8*0]
	call LB_5500
	pop r8 
	jmp LB_5835
LB_5834: db 32,0
LB_5835:
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax  
	mov rdi,LB_5834
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call printf 
	mov rsp,QWORD [rsp_tmp]
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	push r8
	mov r8,QWORD [r8+8+8*1]
	call LB_5491
	pop r8 
	jmp LB_5837
LB_5836: db 32,0
LB_5837:
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax  
	mov rdi,LB_5836
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call printf 
	mov rsp,QWORD [rsp_tmp]
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	push r8
	mov r8,QWORD [r8+8+8*2]
	call LB_5453
	pop r8 
	jmp LB_5839
LB_5838: db 32,0
LB_5839:
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax  
	mov rdi,LB_5838
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call printf 
	mov rsp,QWORD [rsp_tmp]
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	jmp LB_5841
LB_5840: db 125,32,0
LB_5841:
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax  
	mov rdi,LB_5840
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call printf 
	mov rsp,QWORD [rsp_tmp]
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	jmp LB_5817
LB_5814:
	jmp LB_5843
LB_5842: db 39,50,226,151,130,0
LB_5843:
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax  
	mov rdi,LB_5842
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call printf 
	mov rsp,QWORD [rsp_tmp]
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	jmp LB_5845
LB_5844: db 42,123,32,0
LB_5845:
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax  
	mov rdi,LB_5844
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call printf 
	mov rsp,QWORD [rsp_tmp]
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	push r8
	mov r8,QWORD [r8+8+8*0]
	call LB_5695
	pop r8 
	jmp LB_5847
LB_5846: db 32,0
LB_5847:
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax  
	mov rdi,LB_5846
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call printf 
	mov rsp,QWORD [rsp_tmp]
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	push r8
	mov r8,QWORD [r8+8+8*1]
	call LB_5491
	pop r8 
	jmp LB_5849
LB_5848: db 32,0
LB_5849:
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax  
	mov rdi,LB_5848
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call printf 
	mov rsp,QWORD [rsp_tmp]
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	push r8
	mov r8,QWORD [r8+8+8*2]
	call LB_5453
	pop r8 
	jmp LB_5851
LB_5850: db 32,0
LB_5851:
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax  
	mov rdi,LB_5850
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call printf 
	mov rsp,QWORD [rsp_tmp]
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	jmp LB_5853
LB_5852: db 125,32,0
LB_5853:
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax  
	mov rdi,LB_5852
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call printf 
	mov rsp,QWORD [rsp_tmp]
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	jmp LB_5817
LB_5815:
	jmp LB_5855
LB_5854: db 39,51,226,151,130,0
LB_5855:
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax  
	mov rdi,LB_5854
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call printf 
	mov rsp,QWORD [rsp_tmp]
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	jmp LB_5857
LB_5856: db 42,123,32,0
LB_5857:
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax  
	mov rdi,LB_5856
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call printf 
	mov rsp,QWORD [rsp_tmp]
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	push r8
	mov r8,QWORD [r8+8+8*0]
	call LB_5858
	pop r8 
	jmp LB_5860
LB_5859: db 32,0
LB_5860:
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax  
	mov rdi,LB_5859
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call printf 
	mov rsp,QWORD [rsp_tmp]
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	push r8
	mov r8,QWORD [r8+8+8*1]
	call LB_5861
	pop r8 
	jmp LB_5863
LB_5862: db 32,0
LB_5863:
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax  
	mov rdi,LB_5862
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call printf 
	mov rsp,QWORD [rsp_tmp]
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	push r8
	mov r8,QWORD [r8+8+8*2]
	call LB_5864
	pop r8 
	jmp LB_5866
LB_5865: db 32,0
LB_5866:
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax  
	mov rdi,LB_5865
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call printf 
	mov rsp,QWORD [rsp_tmp]
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	jmp LB_5868
LB_5867: db 125,32,0
LB_5868:
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax  
	mov rdi,LB_5867
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call printf 
	mov rsp,QWORD [rsp_tmp]
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	jmp LB_5817
LB_5817:
	ret
LB_5864:
	movzx rax,BYTE [r8+6]
	jmp QWORD [LB_5871+8*rax]
LB_5871: dq LB_5869,LB_5870
LB_5869:
	jmp LB_5874
LB_5873: db 39,48,226,151,130,0
LB_5874:
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax  
	mov rdi,LB_5873
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call printf 
	mov rsp,QWORD [rsp_tmp]
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	jmp LB_5876
LB_5875: db 42,123,32,0
LB_5876:
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax  
	mov rdi,LB_5875
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call printf 
	mov rsp,QWORD [rsp_tmp]
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	push r8
	mov r8,QWORD [r8+8+8*0]
	call LB_5877
	pop r8 
	jmp LB_5879
LB_5878: db 32,0
LB_5879:
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax  
	mov rdi,LB_5878
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call printf 
	mov rsp,QWORD [rsp_tmp]
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	push r8
	mov r8,QWORD [r8+8+8*1]
	call LB_5864
	pop r8 
	jmp LB_5881
LB_5880: db 32,0
LB_5881:
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax  
	mov rdi,LB_5880
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call printf 
	mov rsp,QWORD [rsp_tmp]
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	jmp LB_5883
LB_5882: db 125,32,0
LB_5883:
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax  
	mov rdi,LB_5882
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call printf 
	mov rsp,QWORD [rsp_tmp]
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	jmp LB_5872
LB_5870:
	jmp LB_5885
LB_5884: db 39,49,226,151,130,0
LB_5885:
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax  
	mov rdi,LB_5884
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call printf 
	mov rsp,QWORD [rsp_tmp]
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	jmp LB_5887
LB_5886: db 42,123,32,0
LB_5887:
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax  
	mov rdi,LB_5886
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call printf 
	mov rsp,QWORD [rsp_tmp]
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	jmp LB_5889
LB_5888: db 125,32,0
LB_5889:
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax  
	mov rdi,LB_5888
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call printf 
	mov rsp,QWORD [rsp_tmp]
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	jmp LB_5872
LB_5872:
	ret
LB_5877:
	movzx rax,BYTE [r8+6]
	jmp QWORD [LB_5892+8*rax]
LB_5892: dq LB_5890,LB_5891
LB_5890:
	jmp LB_5895
LB_5894: db 39,48,226,151,130,0
LB_5895:
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax  
	mov rdi,LB_5894
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call printf 
	mov rsp,QWORD [rsp_tmp]
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	mov r8,QWORD [r8+8]
	call LB_5745
	jmp LB_5893
LB_5891:
	jmp LB_5897
LB_5896: db 39,49,226,151,130,0
LB_5897:
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax  
	mov rdi,LB_5896
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call printf 
	mov rsp,QWORD [rsp_tmp]
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	mov rsi,r8
	add rsi,8
	xor rax,rax  
	mov rdi,fmt_s8
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call printf 
	mov rsp,QWORD [rsp_tmp]
	jmp LB_5893
LB_5893:
	ret
LB_5861:
	movzx rax,BYTE [r8+6]
	jmp QWORD [LB_5900+8*rax]
LB_5900: dq LB_5898,LB_5899
LB_5898:
	jmp LB_5903
LB_5902: db 39,48,226,151,130,0
LB_5903:
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax  
	mov rdi,LB_5902
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call printf 
	mov rsp,QWORD [rsp_tmp]
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	jmp LB_5905
LB_5904: db 42,123,32,0
LB_5905:
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax  
	mov rdi,LB_5904
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call printf 
	mov rsp,QWORD [rsp_tmp]
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	push r8
	mov r8,QWORD [r8+8+8*0]
	call LB_5500
	pop r8 
	jmp LB_5907
LB_5906: db 32,0
LB_5907:
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax  
	mov rdi,LB_5906
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call printf 
	mov rsp,QWORD [rsp_tmp]
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	push r8
	mov r8,QWORD [r8+8+8*1]
	call LB_5861
	pop r8 
	jmp LB_5909
LB_5908: db 32,0
LB_5909:
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax  
	mov rdi,LB_5908
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call printf 
	mov rsp,QWORD [rsp_tmp]
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	jmp LB_5911
LB_5910: db 125,32,0
LB_5911:
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax  
	mov rdi,LB_5910
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call printf 
	mov rsp,QWORD [rsp_tmp]
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	jmp LB_5901
LB_5899:
	jmp LB_5913
LB_5912: db 39,49,226,151,130,0
LB_5913:
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax  
	mov rdi,LB_5912
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call printf 
	mov rsp,QWORD [rsp_tmp]
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	jmp LB_5915
LB_5914: db 42,123,32,0
LB_5915:
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax  
	mov rdi,LB_5914
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call printf 
	mov rsp,QWORD [rsp_tmp]
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	jmp LB_5917
LB_5916: db 125,32,0
LB_5917:
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax  
	mov rdi,LB_5916
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call printf 
	mov rsp,QWORD [rsp_tmp]
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	jmp LB_5901
LB_5901:
	ret
LB_5858:
	movzx rax,BYTE [r8+6]
	jmp QWORD [LB_5920+8*rax]
LB_5920: dq LB_5918,LB_5919
LB_5918:
	jmp LB_5923
LB_5922: db 39,48,226,151,130,0
LB_5923:
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax  
	mov rdi,LB_5922
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call printf 
	mov rsp,QWORD [rsp_tmp]
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	jmp LB_5925
LB_5924: db 42,123,32,0
LB_5925:
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax  
	mov rdi,LB_5924
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call printf 
	mov rsp,QWORD [rsp_tmp]
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	push r8
	mov r8,QWORD [r8+8+8*0]
	call LB_5926
	pop r8 
	jmp LB_5928
LB_5927: db 32,0
LB_5928:
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax  
	mov rdi,LB_5927
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call printf 
	mov rsp,QWORD [rsp_tmp]
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	push r8
	mov r8,QWORD [r8+8+8*1]
	call LB_5858
	pop r8 
	jmp LB_5930
LB_5929: db 32,0
LB_5930:
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax  
	mov rdi,LB_5929
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call printf 
	mov rsp,QWORD [rsp_tmp]
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	jmp LB_5932
LB_5931: db 125,32,0
LB_5932:
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax  
	mov rdi,LB_5931
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call printf 
	mov rsp,QWORD [rsp_tmp]
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	jmp LB_5921
LB_5919:
	jmp LB_5934
LB_5933: db 39,49,226,151,130,0
LB_5934:
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax  
	mov rdi,LB_5933
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call printf 
	mov rsp,QWORD [rsp_tmp]
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	jmp LB_5936
LB_5935: db 42,123,32,0
LB_5936:
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax  
	mov rdi,LB_5935
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call printf 
	mov rsp,QWORD [rsp_tmp]
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	jmp LB_5938
LB_5937: db 125,32,0
LB_5938:
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax  
	mov rdi,LB_5937
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call printf 
	mov rsp,QWORD [rsp_tmp]
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	jmp LB_5921
LB_5921:
	ret
LB_5926:
	movzx rax,BYTE [r8+6]
	jmp QWORD [LB_5943+8*rax]
LB_5943: dq LB_5939,LB_5940,LB_5941,LB_5942
LB_5939:
	jmp LB_5946
LB_5945: db 39,48,226,151,130,0
LB_5946:
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax  
	mov rdi,LB_5945
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call printf 
	mov rsp,QWORD [rsp_tmp]
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	mov rsi,r8
	add rsi,8
	xor rax,rax  
	mov rdi,fmt_s8
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call printf 
	mov rsp,QWORD [rsp_tmp]
	jmp LB_5944
LB_5940:
	jmp LB_5948
LB_5947: db 39,49,226,151,130,0
LB_5948:
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax  
	mov rdi,LB_5947
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call printf 
	mov rsp,QWORD [rsp_tmp]
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	mov r8,QWORD [r8+8]
	call LB_5695
	jmp LB_5944
LB_5941:
	jmp LB_5950
LB_5949: db 39,50,226,151,130,0
LB_5950:
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax  
	mov rdi,LB_5949
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call printf 
	mov rsp,QWORD [rsp_tmp]
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	jmp LB_5952
LB_5951: db 42,123,32,0
LB_5952:
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax  
	mov rdi,LB_5951
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call printf 
	mov rsp,QWORD [rsp_tmp]
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	push r8
	mov r8,QWORD [r8+8+8*0]
	call LB_5953
	pop r8 
	jmp LB_5955
LB_5954: db 32,0
LB_5955:
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax  
	mov rdi,LB_5954
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call printf 
	mov rsp,QWORD [rsp_tmp]
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	push r8
	mov r8,QWORD [r8+8+8*1]
	mov rsi,r8
	xor rax,rax  
	mov rdi,fmt_r64
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call printf 
	mov rsp,QWORD [rsp_tmp]
	pop r8 
	jmp LB_5957
LB_5956: db 32,0
LB_5957:
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax  
	mov rdi,LB_5956
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call printf 
	mov rsp,QWORD [rsp_tmp]
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	jmp LB_5959
LB_5958: db 125,32,0
LB_5959:
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax  
	mov rdi,LB_5958
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call printf 
	mov rsp,QWORD [rsp_tmp]
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	jmp LB_5944
LB_5942:
	jmp LB_5961
LB_5960: db 39,51,226,151,130,0
LB_5961:
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax  
	mov rdi,LB_5960
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call printf 
	mov rsp,QWORD [rsp_tmp]
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	jmp LB_5963
LB_5962: db 42,123,32,0
LB_5963:
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax  
	mov rdi,LB_5962
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call printf 
	mov rsp,QWORD [rsp_tmp]
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	push r8
	mov r8,QWORD [r8+8+8*0]
	mov rsi,r8
	xor rax,rax  
	mov rdi,fmt_r64
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call printf 
	mov rsp,QWORD [rsp_tmp]
	pop r8 
	jmp LB_5965
LB_5964: db 32,0
LB_5965:
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax  
	mov rdi,LB_5964
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call printf 
	mov rsp,QWORD [rsp_tmp]
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	push r8
	mov r8,QWORD [r8+8+8*1]
	mov rsi,r8
	add rsi,8
	xor rax,rax  
	mov rdi,fmt_s8
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call printf 
	mov rsp,QWORD [rsp_tmp]
	pop r8 
	jmp LB_5967
LB_5966: db 32,0
LB_5967:
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax  
	mov rdi,LB_5966
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call printf 
	mov rsp,QWORD [rsp_tmp]
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	jmp LB_5969
LB_5968: db 125,32,0
LB_5969:
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax  
	mov rdi,LB_5968
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call printf 
	mov rsp,QWORD [rsp_tmp]
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	jmp LB_5944
LB_5944:
	ret
LB_5953:
	movzx rax,BYTE [r8+6]
	jmp QWORD [LB_5974+8*rax]
LB_5974: dq LB_5970,LB_5971,LB_5972,LB_5973
LB_5970:
	jmp LB_5977
LB_5976: db 39,48,226,151,130,0
LB_5977:
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax  
	mov rdi,LB_5976
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call printf 
	mov rsp,QWORD [rsp_tmp]
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	jmp LB_5979
LB_5978: db 42,123,32,0
LB_5979:
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax  
	mov rdi,LB_5978
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call printf 
	mov rsp,QWORD [rsp_tmp]
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	jmp LB_5981
LB_5980: db 125,32,0
LB_5981:
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax  
	mov rdi,LB_5980
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call printf 
	mov rsp,QWORD [rsp_tmp]
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	jmp LB_5975
LB_5971:
	jmp LB_5983
LB_5982: db 39,49,226,151,130,0
LB_5983:
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax  
	mov rdi,LB_5982
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call printf 
	mov rsp,QWORD [rsp_tmp]
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	jmp LB_5985
LB_5984: db 42,123,32,0
LB_5985:
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax  
	mov rdi,LB_5984
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call printf 
	mov rsp,QWORD [rsp_tmp]
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	jmp LB_5987
LB_5986: db 125,32,0
LB_5987:
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax  
	mov rdi,LB_5986
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call printf 
	mov rsp,QWORD [rsp_tmp]
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	jmp LB_5975
LB_5972:
	jmp LB_5989
LB_5988: db 39,50,226,151,130,0
LB_5989:
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax  
	mov rdi,LB_5988
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call printf 
	mov rsp,QWORD [rsp_tmp]
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	jmp LB_5991
LB_5990: db 42,123,32,0
LB_5991:
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax  
	mov rdi,LB_5990
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call printf 
	mov rsp,QWORD [rsp_tmp]
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	jmp LB_5993
LB_5992: db 125,32,0
LB_5993:
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax  
	mov rdi,LB_5992
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call printf 
	mov rsp,QWORD [rsp_tmp]
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	jmp LB_5975
LB_5973:
	jmp LB_5995
LB_5994: db 39,51,226,151,130,0
LB_5995:
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax  
	mov rdi,LB_5994
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call printf 
	mov rsp,QWORD [rsp_tmp]
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	jmp LB_5997
LB_5996: db 42,123,32,0
LB_5997:
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax  
	mov rdi,LB_5996
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call printf 
	mov rsp,QWORD [rsp_tmp]
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	jmp LB_5999
LB_5998: db 125,32,0
LB_5999:
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax  
	mov rdi,LB_5998
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call printf 
	mov rsp,QWORD [rsp_tmp]
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	jmp LB_5975
LB_5975:
	ret
LB_5500:
	movzx rax,BYTE [r8+6]
	jmp QWORD [LB_6002+8*rax]
LB_6002: dq LB_6000,LB_6001
LB_6000:
	jmp LB_6005
LB_6004: db 39,48,226,151,130,0
LB_6005:
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax  
	mov rdi,LB_6004
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call printf 
	mov rsp,QWORD [rsp_tmp]
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	mov r8,QWORD [r8+8]
	call LB_5695
	jmp LB_6003
LB_6001:
	jmp LB_6007
LB_6006: db 39,49,226,151,130,0
LB_6007:
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax  
	mov rdi,LB_6006
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call printf 
	mov rsp,QWORD [rsp_tmp]
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	mov rsi,r8
	add rsi,8
	xor rax,rax  
	mov rdi,fmt_s8
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call printf 
	mov rsp,QWORD [rsp_tmp]
	jmp LB_6003
LB_6003:
	ret
LB_5491:
	movzx rax,BYTE [r8+6]
	jmp QWORD [LB_6010+8*rax]
LB_6010: dq LB_6008,LB_6009
LB_6008:
	jmp LB_6013
LB_6012: db 39,48,226,151,130,0
LB_6013:
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax  
	mov rdi,LB_6012
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call printf 
	mov rsp,QWORD [rsp_tmp]
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	mov r8,QWORD [r8+8]
	call LB_6014
	jmp LB_6011
LB_6009:
	jmp LB_6016
LB_6015: db 39,49,226,151,130,0
LB_6016:
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax  
	mov rdi,LB_6015
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call printf 
	mov rsp,QWORD [rsp_tmp]
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	mov r8,QWORD [r8+8]
	call LB_5500
	jmp LB_6011
LB_6011:
	ret
LB_6014:
	movzx rax,BYTE [r8+6]
	jmp QWORD [LB_6019+8*rax]
LB_6019: dq LB_6017,LB_6018
LB_6017:
	jmp LB_6022
LB_6021: db 39,48,226,151,130,0
LB_6022:
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax  
	mov rdi,LB_6021
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call printf 
	mov rsp,QWORD [rsp_tmp]
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	jmp LB_6024
LB_6023: db 42,123,32,0
LB_6024:
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax  
	mov rdi,LB_6023
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call printf 
	mov rsp,QWORD [rsp_tmp]
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	push r8
	mov r8,QWORD [r8+8+8*0]
	call LB_5491
	pop r8 
	jmp LB_6026
LB_6025: db 32,0
LB_6026:
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax  
	mov rdi,LB_6025
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call printf 
	mov rsp,QWORD [rsp_tmp]
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	push r8
	mov r8,QWORD [r8+8+8*1]
	call LB_6014
	pop r8 
	jmp LB_6028
LB_6027: db 32,0
LB_6028:
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax  
	mov rdi,LB_6027
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call printf 
	mov rsp,QWORD [rsp_tmp]
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	jmp LB_6030
LB_6029: db 125,32,0
LB_6030:
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax  
	mov rdi,LB_6029
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call printf 
	mov rsp,QWORD [rsp_tmp]
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	jmp LB_6020
LB_6018:
	jmp LB_6032
LB_6031: db 39,49,226,151,130,0
LB_6032:
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax  
	mov rdi,LB_6031
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call printf 
	mov rsp,QWORD [rsp_tmp]
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	jmp LB_6034
LB_6033: db 42,123,32,0
LB_6034:
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax  
	mov rdi,LB_6033
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call printf 
	mov rsp,QWORD [rsp_tmp]
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	jmp LB_6036
LB_6035: db 125,32,0
LB_6036:
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax  
	mov rdi,LB_6035
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call printf 
	mov rsp,QWORD [rsp_tmp]
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	jmp LB_6020
LB_6020:
	ret
LB_5456:
	movzx rax,BYTE [r8+6]
	jmp QWORD [LB_6039+8*rax]
LB_6039: dq LB_6037,LB_6038
LB_6037:
	jmp LB_6042
LB_6041: db 39,48,226,151,130,0
LB_6042:
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax  
	mov rdi,LB_6041
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call printf 
	mov rsp,QWORD [rsp_tmp]
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	mov r8,QWORD [r8+8]
	call LB_5317
	jmp LB_6040
LB_6038:
	jmp LB_6044
LB_6043: db 39,49,226,151,130,0
LB_6044:
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax  
	mov rdi,LB_6043
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call printf 
	mov rsp,QWORD [rsp_tmp]
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	jmp LB_6046
LB_6045: db 42,123,32,0
LB_6046:
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax  
	mov rdi,LB_6045
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call printf 
	mov rsp,QWORD [rsp_tmp]
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	jmp LB_6048
LB_6047: db 125,32,0
LB_6048:
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax  
	mov rdi,LB_6047
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call printf 
	mov rsp,QWORD [rsp_tmp]
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	jmp LB_6040
LB_6040:
	ret
LB_5453:
	movzx rax,BYTE [r8+6]
	jmp QWORD [LB_6051+8*rax]
LB_6051: dq LB_6049,LB_6050
LB_6049:
	jmp LB_6054
LB_6053: db 39,48,226,151,130,0
LB_6054:
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax  
	mov rdi,LB_6053
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call printf 
	mov rsp,QWORD [rsp_tmp]
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	mov r8,QWORD [r8+8]
	call LB_5547
	jmp LB_6052
LB_6050:
	jmp LB_6056
LB_6055: db 39,49,226,151,130,0
LB_6056:
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax  
	mov rdi,LB_6055
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call printf 
	mov rsp,QWORD [rsp_tmp]
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	mov r8,QWORD [r8+8]
	call LB_5877
	jmp LB_6052
LB_6052:
	ret
LB_5245:
	movzx rax,BYTE [r8+6]
	jmp QWORD [LB_6060+8*rax]
LB_6060: dq LB_6057,LB_6058,LB_6059
LB_6057:
	jmp LB_6063
LB_6062: db 39,48,226,151,130,0
LB_6063:
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax  
	mov rdi,LB_6062
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call printf 
	mov rsp,QWORD [rsp_tmp]
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	jmp LB_6065
LB_6064: db 42,123,32,0
LB_6065:
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax  
	mov rdi,LB_6064
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call printf 
	mov rsp,QWORD [rsp_tmp]
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	push r8
	mov r8,QWORD [r8+8+8*0]
	call LB_5453
	pop r8 
	jmp LB_6067
LB_6066: db 32,0
LB_6067:
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax  
	mov rdi,LB_6066
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call printf 
	mov rsp,QWORD [rsp_tmp]
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	push r8
	mov r8,QWORD [r8+8+8*1]
	call LB_5456
	pop r8 
	jmp LB_6069
LB_6068: db 32,0
LB_6069:
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax  
	mov rdi,LB_6068
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call printf 
	mov rsp,QWORD [rsp_tmp]
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	push r8
	mov r8,QWORD [r8+8+8*2]
	call LB_5459
	pop r8 
	jmp LB_6071
LB_6070: db 32,0
LB_6071:
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax  
	mov rdi,LB_6070
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call printf 
	mov rsp,QWORD [rsp_tmp]
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	jmp LB_6073
LB_6072: db 125,32,0
LB_6073:
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax  
	mov rdi,LB_6072
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call printf 
	mov rsp,QWORD [rsp_tmp]
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	jmp LB_6061
LB_6058:
	jmp LB_6075
LB_6074: db 39,49,226,151,130,0
LB_6075:
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax  
	mov rdi,LB_6074
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call printf 
	mov rsp,QWORD [rsp_tmp]
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	mov r8,QWORD [r8+8]
	call LB_5695
	jmp LB_6061
LB_6059:
	jmp LB_6077
LB_6076: db 39,50,226,151,130,0
LB_6077:
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax  
	mov rdi,LB_6076
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call printf 
	mov rsp,QWORD [rsp_tmp]
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	mov r8,QWORD [r8+8]
	call LB_5459
	jmp LB_6061
LB_6061:
	ret
LB_5238:
	movzx rax,BYTE [r8+6]
	jmp QWORD [LB_6080+8*rax]
LB_6080: dq LB_6078,LB_6079
LB_6078:
	jmp LB_6083
LB_6082: db 39,48,226,151,130,0
LB_6083:
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax  
	mov rdi,LB_6082
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call printf 
	mov rsp,QWORD [rsp_tmp]
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	jmp LB_6085
LB_6084: db 42,123,32,0
LB_6085:
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax  
	mov rdi,LB_6084
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call printf 
	mov rsp,QWORD [rsp_tmp]
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	push r8
	mov r8,QWORD [r8+8+8*0]
	jmp LB_6087
LB_6086: db 42,123,32,0
LB_6087:
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax  
	mov rdi,LB_6086
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call printf 
	mov rsp,QWORD [rsp_tmp]
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	push r8
	mov r8,QWORD [r8+8+8*0]
	mov rsi,r8
	add rsi,8
	xor rax,rax  
	mov rdi,fmt_s8
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call printf 
	mov rsp,QWORD [rsp_tmp]
	pop r8 
	jmp LB_6089
LB_6088: db 32,0
LB_6089:
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax  
	mov rdi,LB_6088
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call printf 
	mov rsp,QWORD [rsp_tmp]
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	push r8
	mov r8,QWORD [r8+8+8*1]
	call LB_6090
	pop r8 
	jmp LB_6092
LB_6091: db 32,0
LB_6092:
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax  
	mov rdi,LB_6091
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call printf 
	mov rsp,QWORD [rsp_tmp]
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	jmp LB_6094
LB_6093: db 125,32,0
LB_6094:
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax  
	mov rdi,LB_6093
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call printf 
	mov rsp,QWORD [rsp_tmp]
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	pop r8 
	jmp LB_6096
LB_6095: db 32,0
LB_6096:
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax  
	mov rdi,LB_6095
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call printf 
	mov rsp,QWORD [rsp_tmp]
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	push r8
	mov r8,QWORD [r8+8+8*1]
	call LB_5238
	pop r8 
	jmp LB_6098
LB_6097: db 32,0
LB_6098:
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax  
	mov rdi,LB_6097
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call printf 
	mov rsp,QWORD [rsp_tmp]
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	jmp LB_6100
LB_6099: db 125,32,0
LB_6100:
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax  
	mov rdi,LB_6099
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call printf 
	mov rsp,QWORD [rsp_tmp]
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	jmp LB_6081
LB_6079:
	jmp LB_6102
LB_6101: db 39,49,226,151,130,0
LB_6102:
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax  
	mov rdi,LB_6101
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call printf 
	mov rsp,QWORD [rsp_tmp]
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	jmp LB_6104
LB_6103: db 42,123,32,0
LB_6104:
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax  
	mov rdi,LB_6103
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call printf 
	mov rsp,QWORD [rsp_tmp]
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	jmp LB_6106
LB_6105: db 125,32,0
LB_6106:
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax  
	mov rdi,LB_6105
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call printf 
	mov rsp,QWORD [rsp_tmp]
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	jmp LB_6081
LB_6081:
	ret
LB_6090:
	movzx rax,BYTE [r8+6]
	jmp QWORD [LB_6109+8*rax]
LB_6109: dq LB_6107,LB_6108
LB_6107:
	jmp LB_6112
LB_6111: db 39,48,226,151,130,0
LB_6112:
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax  
	mov rdi,LB_6111
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call printf 
	mov rsp,QWORD [rsp_tmp]
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	mov r8,QWORD [r8+8]
	call LB_6113
	jmp LB_6110
LB_6108:
	jmp LB_6115
LB_6114: db 39,49,226,151,130,0
LB_6115:
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax  
	mov rdi,LB_6114
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call printf 
	mov rsp,QWORD [rsp_tmp]
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	mov r8,QWORD [r8+8]
	call LB_6116
	jmp LB_6110
LB_6110:
	ret
LB_6116:
	movzx rax,BYTE [r8+6]
	jmp QWORD [LB_6119+8*rax]
LB_6119: dq LB_6117,LB_6118
LB_6117:
	jmp LB_6122
LB_6121: db 39,48,226,151,130,0
LB_6122:
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax  
	mov rdi,LB_6121
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call printf 
	mov rsp,QWORD [rsp_tmp]
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	jmp LB_6124
LB_6123: db 42,123,32,0
LB_6124:
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax  
	mov rdi,LB_6123
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call printf 
	mov rsp,QWORD [rsp_tmp]
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	push r8
	mov r8,QWORD [r8+8+8*0]
	call LB_5864
	pop r8 
	jmp LB_6126
LB_6125: db 32,0
LB_6126:
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax  
	mov rdi,LB_6125
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call printf 
	mov rsp,QWORD [rsp_tmp]
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	push r8
	mov r8,QWORD [r8+8+8*1]
	call LB_5453
	pop r8 
	jmp LB_6128
LB_6127: db 32,0
LB_6128:
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax  
	mov rdi,LB_6127
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call printf 
	mov rsp,QWORD [rsp_tmp]
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	push r8
	mov r8,QWORD [r8+8+8*2]
	call LB_5459
	pop r8 
	jmp LB_6130
LB_6129: db 32,0
LB_6130:
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax  
	mov rdi,LB_6129
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call printf 
	mov rsp,QWORD [rsp_tmp]
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	push r8
	mov r8,QWORD [r8+8+8*3]
	call LB_6131
	pop r8 
	jmp LB_6133
LB_6132: db 32,0
LB_6133:
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax  
	mov rdi,LB_6132
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call printf 
	mov rsp,QWORD [rsp_tmp]
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	push r8
	mov r8,QWORD [r8+8+8*4]
	call LB_6134
	pop r8 
	jmp LB_6136
LB_6135: db 32,0
LB_6136:
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax  
	mov rdi,LB_6135
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call printf 
	mov rsp,QWORD [rsp_tmp]
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	push r8
	mov r8,QWORD [r8+8+8*5]
	call LB_6137
	pop r8 
	jmp LB_6139
LB_6138: db 32,0
LB_6139:
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax  
	mov rdi,LB_6138
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call printf 
	mov rsp,QWORD [rsp_tmp]
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	push r8
	mov r8,QWORD [r8+8+8*6]
	call LB_6116
	pop r8 
	jmp LB_6141
LB_6140: db 32,0
LB_6141:
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax  
	mov rdi,LB_6140
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call printf 
	mov rsp,QWORD [rsp_tmp]
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	jmp LB_6143
LB_6142: db 125,32,0
LB_6143:
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax  
	mov rdi,LB_6142
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call printf 
	mov rsp,QWORD [rsp_tmp]
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	jmp LB_6120
LB_6118:
	jmp LB_6145
LB_6144: db 39,49,226,151,130,0
LB_6145:
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax  
	mov rdi,LB_6144
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call printf 
	mov rsp,QWORD [rsp_tmp]
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	jmp LB_6147
LB_6146: db 42,123,32,0
LB_6147:
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax  
	mov rdi,LB_6146
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call printf 
	mov rsp,QWORD [rsp_tmp]
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	push r8
	mov r8,QWORD [r8+8+8*0]
	call LB_5864
	pop r8 
	jmp LB_6149
LB_6148: db 32,0
LB_6149:
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax  
	mov rdi,LB_6148
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call printf 
	mov rsp,QWORD [rsp_tmp]
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	push r8
	mov r8,QWORD [r8+8+8*1]
	call LB_5453
	pop r8 
	jmp LB_6151
LB_6150: db 32,0
LB_6151:
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax  
	mov rdi,LB_6150
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call printf 
	mov rsp,QWORD [rsp_tmp]
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	push r8
	mov r8,QWORD [r8+8+8*2]
	call LB_5459
	pop r8 
	jmp LB_6153
LB_6152: db 32,0
LB_6153:
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax  
	mov rdi,LB_6152
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call printf 
	mov rsp,QWORD [rsp_tmp]
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	push r8
	mov r8,QWORD [r8+8+8*3]
	call LB_6131
	pop r8 
	jmp LB_6155
LB_6154: db 32,0
LB_6155:
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax  
	mov rdi,LB_6154
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call printf 
	mov rsp,QWORD [rsp_tmp]
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	push r8
	mov r8,QWORD [r8+8+8*4]
	call LB_6134
	pop r8 
	jmp LB_6157
LB_6156: db 32,0
LB_6157:
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax  
	mov rdi,LB_6156
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call printf 
	mov rsp,QWORD [rsp_tmp]
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	push r8
	mov r8,QWORD [r8+8+8*5]
	call LB_6137
	pop r8 
	jmp LB_6159
LB_6158: db 32,0
LB_6159:
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax  
	mov rdi,LB_6158
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call printf 
	mov rsp,QWORD [rsp_tmp]
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	jmp LB_6161
LB_6160: db 125,32,0
LB_6161:
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax  
	mov rdi,LB_6160
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call printf 
	mov rsp,QWORD [rsp_tmp]
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	jmp LB_6120
LB_6120:
	ret
LB_6137:
	movzx rax,BYTE [r8+6]
	jmp QWORD [LB_6164+8*rax]
LB_6164: dq LB_6162,LB_6163
LB_6162:
	jmp LB_6167
LB_6166: db 39,48,226,151,130,0
LB_6167:
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax  
	mov rdi,LB_6166
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call printf 
	mov rsp,QWORD [rsp_tmp]
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	jmp LB_6169
LB_6168: db 42,123,32,0
LB_6169:
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax  
	mov rdi,LB_6168
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call printf 
	mov rsp,QWORD [rsp_tmp]
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	push r8
	mov r8,QWORD [r8+8+8*0]
	call LB_5453
	pop r8 
	jmp LB_6171
LB_6170: db 32,0
LB_6171:
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax  
	mov rdi,LB_6170
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call printf 
	mov rsp,QWORD [rsp_tmp]
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	push r8
	mov r8,QWORD [r8+8+8*1]
	call LB_6116
	pop r8 
	jmp LB_6173
LB_6172: db 32,0
LB_6173:
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax  
	mov rdi,LB_6172
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call printf 
	mov rsp,QWORD [rsp_tmp]
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	jmp LB_6175
LB_6174: db 125,32,0
LB_6175:
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax  
	mov rdi,LB_6174
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call printf 
	mov rsp,QWORD [rsp_tmp]
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	jmp LB_6165
LB_6163:
	jmp LB_6177
LB_6176: db 39,49,226,151,130,0
LB_6177:
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax  
	mov rdi,LB_6176
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call printf 
	mov rsp,QWORD [rsp_tmp]
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	jmp LB_6179
LB_6178: db 42,123,32,0
LB_6179:
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax  
	mov rdi,LB_6178
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call printf 
	mov rsp,QWORD [rsp_tmp]
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	jmp LB_6181
LB_6180: db 125,32,0
LB_6181:
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax  
	mov rdi,LB_6180
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call printf 
	mov rsp,QWORD [rsp_tmp]
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	jmp LB_6165
LB_6165:
	ret
LB_6134:
	movzx rax,BYTE [r8+6]
	jmp QWORD [LB_6185+8*rax]
LB_6185: dq LB_6182,LB_6183,LB_6184
LB_6182:
	jmp LB_6188
LB_6187: db 39,48,226,151,130,0
LB_6188:
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax  
	mov rdi,LB_6187
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call printf 
	mov rsp,QWORD [rsp_tmp]
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	mov r8,QWORD [r8+8]
	call LB_6189
	jmp LB_6186
LB_6183:
	jmp LB_6191
LB_6190: db 39,49,226,151,130,0
LB_6191:
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax  
	mov rdi,LB_6190
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call printf 
	mov rsp,QWORD [rsp_tmp]
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	jmp LB_6193
LB_6192: db 42,123,32,0
LB_6193:
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax  
	mov rdi,LB_6192
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call printf 
	mov rsp,QWORD [rsp_tmp]
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	push r8
	mov r8,QWORD [r8+8+8*0]
	call LB_6194
	pop r8 
	jmp LB_6196
LB_6195: db 32,0
LB_6196:
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax  
	mov rdi,LB_6195
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call printf 
	mov rsp,QWORD [rsp_tmp]
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	push r8
	mov r8,QWORD [r8+8+8*1]
	call LB_6134
	pop r8 
	jmp LB_6198
LB_6197: db 32,0
LB_6198:
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax  
	mov rdi,LB_6197
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call printf 
	mov rsp,QWORD [rsp_tmp]
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	jmp LB_6200
LB_6199: db 125,32,0
LB_6200:
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax  
	mov rdi,LB_6199
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call printf 
	mov rsp,QWORD [rsp_tmp]
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	jmp LB_6186
LB_6184:
	jmp LB_6202
LB_6201: db 39,50,226,151,130,0
LB_6202:
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax  
	mov rdi,LB_6201
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call printf 
	mov rsp,QWORD [rsp_tmp]
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	jmp LB_6204
LB_6203: db 42,123,32,0
LB_6204:
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax  
	mov rdi,LB_6203
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call printf 
	mov rsp,QWORD [rsp_tmp]
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	jmp LB_6206
LB_6205: db 125,32,0
LB_6206:
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax  
	mov rdi,LB_6205
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call printf 
	mov rsp,QWORD [rsp_tmp]
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	jmp LB_6186
LB_6186:
	ret
LB_6194:
	movzx rax,BYTE [r8+6]
	jmp QWORD [LB_6209+8*rax]
LB_6209: dq LB_6207,LB_6208
LB_6207:
	jmp LB_6212
LB_6211: db 39,48,226,151,130,0
LB_6212:
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax  
	mov rdi,LB_6211
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call printf 
	mov rsp,QWORD [rsp_tmp]
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	mov r8,QWORD [r8+8]
	call LB_6213
	jmp LB_6210
LB_6208:
	jmp LB_6215
LB_6214: db 39,49,226,151,130,0
LB_6215:
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax  
	mov rdi,LB_6214
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call printf 
	mov rsp,QWORD [rsp_tmp]
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	mov r8,QWORD [r8+8]
	call LB_6213
	jmp LB_6210
LB_6210:
	ret
LB_6213:
	movzx rax,BYTE [r8+6]
	jmp QWORD [LB_6218+8*rax]
LB_6218: dq LB_6216,LB_6217
LB_6216:
	jmp LB_6221
LB_6220: db 39,48,226,151,130,0
LB_6221:
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax  
	mov rdi,LB_6220
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call printf 
	mov rsp,QWORD [rsp_tmp]
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	mov r8,QWORD [r8+8]
	call LB_5354
	jmp LB_6219
LB_6217:
	jmp LB_6223
LB_6222: db 39,49,226,151,130,0
LB_6223:
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax  
	mov rdi,LB_6222
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call printf 
	mov rsp,QWORD [rsp_tmp]
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	mov rsi,r8
	add rsi,8
	xor rax,rax  
	mov rdi,fmt_s8
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call printf 
	mov rsp,QWORD [rsp_tmp]
	jmp LB_6219
LB_6219:
	ret
LB_6189:
	movzx rax,BYTE [r8+6]
	jmp QWORD [LB_6226+8*rax]
LB_6226: dq LB_6224,LB_6225
LB_6224:
	jmp LB_6229
LB_6228: db 39,48,226,151,130,0
LB_6229:
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax  
	mov rdi,LB_6228
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call printf 
	mov rsp,QWORD [rsp_tmp]
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	jmp LB_6231
LB_6230: db 42,123,32,0
LB_6231:
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax  
	mov rdi,LB_6230
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call printf 
	mov rsp,QWORD [rsp_tmp]
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	push r8
	mov r8,QWORD [r8+8+8*0]
	call LB_6194
	pop r8 
	jmp LB_6233
LB_6232: db 32,0
LB_6233:
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax  
	mov rdi,LB_6232
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call printf 
	mov rsp,QWORD [rsp_tmp]
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	push r8
	mov r8,QWORD [r8+8+8*1]
	call LB_6189
	pop r8 
	jmp LB_6235
LB_6234: db 32,0
LB_6235:
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax  
	mov rdi,LB_6234
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call printf 
	mov rsp,QWORD [rsp_tmp]
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	jmp LB_6237
LB_6236: db 125,32,0
LB_6237:
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax  
	mov rdi,LB_6236
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call printf 
	mov rsp,QWORD [rsp_tmp]
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	jmp LB_6227
LB_6225:
	jmp LB_6239
LB_6238: db 39,49,226,151,130,0
LB_6239:
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax  
	mov rdi,LB_6238
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call printf 
	mov rsp,QWORD [rsp_tmp]
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	jmp LB_6241
LB_6240: db 42,123,32,0
LB_6241:
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax  
	mov rdi,LB_6240
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call printf 
	mov rsp,QWORD [rsp_tmp]
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	jmp LB_6243
LB_6242: db 125,32,0
LB_6243:
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax  
	mov rdi,LB_6242
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call printf 
	mov rsp,QWORD [rsp_tmp]
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	jmp LB_6227
LB_6227:
	ret
LB_6131:
	movzx rax,BYTE [r8+6]
	jmp QWORD [LB_6247+8*rax]
LB_6247: dq LB_6244,LB_6245,LB_6246
LB_6244:
	jmp LB_6250
LB_6249: db 39,48,226,151,130,0
LB_6250:
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax  
	mov rdi,LB_6249
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call printf 
	mov rsp,QWORD [rsp_tmp]
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	jmp LB_6252
LB_6251: db 42,123,32,0
LB_6252:
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax  
	mov rdi,LB_6251
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call printf 
	mov rsp,QWORD [rsp_tmp]
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	jmp LB_6254
LB_6253: db 125,32,0
LB_6254:
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax  
	mov rdi,LB_6253
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call printf 
	mov rsp,QWORD [rsp_tmp]
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	jmp LB_6248
LB_6245:
	jmp LB_6256
LB_6255: db 39,49,226,151,130,0
LB_6256:
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax  
	mov rdi,LB_6255
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call printf 
	mov rsp,QWORD [rsp_tmp]
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	jmp LB_6258
LB_6257: db 42,123,32,0
LB_6258:
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax  
	mov rdi,LB_6257
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call printf 
	mov rsp,QWORD [rsp_tmp]
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	jmp LB_6260
LB_6259: db 125,32,0
LB_6260:
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax  
	mov rdi,LB_6259
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call printf 
	mov rsp,QWORD [rsp_tmp]
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	jmp LB_6248
LB_6246:
	jmp LB_6262
LB_6261: db 39,50,226,151,130,0
LB_6262:
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax  
	mov rdi,LB_6261
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call printf 
	mov rsp,QWORD [rsp_tmp]
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	jmp LB_6264
LB_6263: db 42,123,32,0
LB_6264:
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax  
	mov rdi,LB_6263
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call printf 
	mov rsp,QWORD [rsp_tmp]
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	jmp LB_6266
LB_6265: db 125,32,0
LB_6266:
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax  
	mov rdi,LB_6265
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call printf 
	mov rsp,QWORD [rsp_tmp]
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	jmp LB_6248
LB_6248:
	ret
LB_6113:
	movzx rax,BYTE [r8+6]
	jmp QWORD [LB_6269+8*rax]
LB_6269: dq LB_6267,LB_6268
LB_6267:
	jmp LB_6272
LB_6271: db 39,48,226,151,130,0
LB_6272:
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax  
	mov rdi,LB_6271
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call printf 
	mov rsp,QWORD [rsp_tmp]
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	jmp LB_6274
LB_6273: db 42,123,32,0
LB_6274:
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax  
	mov rdi,LB_6273
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call printf 
	mov rsp,QWORD [rsp_tmp]
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	push r8
	mov r8,QWORD [r8+8+8*0]
	call LB_5745
	pop r8 
	jmp LB_6276
LB_6275: db 32,0
LB_6276:
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax  
	mov rdi,LB_6275
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call printf 
	mov rsp,QWORD [rsp_tmp]
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	push r8
	mov r8,QWORD [r8+8+8*1]
	call LB_6131
	pop r8 
	jmp LB_6278
LB_6277: db 32,0
LB_6278:
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax  
	mov rdi,LB_6277
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call printf 
	mov rsp,QWORD [rsp_tmp]
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	push r8
	mov r8,QWORD [r8+8+8*2]
	call LB_6134
	pop r8 
	jmp LB_6280
LB_6279: db 32,0
LB_6280:
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax  
	mov rdi,LB_6279
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call printf 
	mov rsp,QWORD [rsp_tmp]
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	push r8
	mov r8,QWORD [r8+8+8*3]
	call LB_6281
	pop r8 
	jmp LB_6283
LB_6282: db 32,0
LB_6283:
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax  
	mov rdi,LB_6282
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call printf 
	mov rsp,QWORD [rsp_tmp]
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	push r8
	mov r8,QWORD [r8+8+8*4]
	call LB_6113
	pop r8 
	jmp LB_6285
LB_6284: db 32,0
LB_6285:
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax  
	mov rdi,LB_6284
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call printf 
	mov rsp,QWORD [rsp_tmp]
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	jmp LB_6287
LB_6286: db 125,32,0
LB_6287:
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax  
	mov rdi,LB_6286
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call printf 
	mov rsp,QWORD [rsp_tmp]
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	jmp LB_6270
LB_6268:
	jmp LB_6289
LB_6288: db 39,49,226,151,130,0
LB_6289:
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax  
	mov rdi,LB_6288
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call printf 
	mov rsp,QWORD [rsp_tmp]
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	jmp LB_6291
LB_6290: db 42,123,32,0
LB_6291:
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax  
	mov rdi,LB_6290
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call printf 
	mov rsp,QWORD [rsp_tmp]
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	push r8
	mov r8,QWORD [r8+8+8*0]
	call LB_5745
	pop r8 
	jmp LB_6293
LB_6292: db 32,0
LB_6293:
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax  
	mov rdi,LB_6292
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call printf 
	mov rsp,QWORD [rsp_tmp]
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	push r8
	mov r8,QWORD [r8+8+8*1]
	call LB_6131
	pop r8 
	jmp LB_6295
LB_6294: db 32,0
LB_6295:
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax  
	mov rdi,LB_6294
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call printf 
	mov rsp,QWORD [rsp_tmp]
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	push r8
	mov r8,QWORD [r8+8+8*2]
	call LB_6134
	pop r8 
	jmp LB_6297
LB_6296: db 32,0
LB_6297:
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax  
	mov rdi,LB_6296
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call printf 
	mov rsp,QWORD [rsp_tmp]
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	push r8
	mov r8,QWORD [r8+8+8*3]
	call LB_6281
	pop r8 
	jmp LB_6299
LB_6298: db 32,0
LB_6299:
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax  
	mov rdi,LB_6298
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call printf 
	mov rsp,QWORD [rsp_tmp]
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	jmp LB_6301
LB_6300: db 125,32,0
LB_6301:
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax  
	mov rdi,LB_6300
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call printf 
	mov rsp,QWORD [rsp_tmp]
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	jmp LB_6270
LB_6270:
	ret
LB_6281:
	movzx rax,BYTE [r8+6]
	jmp QWORD [LB_6304+8*rax]
LB_6304: dq LB_6302,LB_6303
LB_6302:
	jmp LB_6307
LB_6306: db 39,48,226,151,130,0
LB_6307:
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax  
	mov rdi,LB_6306
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call printf 
	mov rsp,QWORD [rsp_tmp]
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	mov r8,QWORD [r8+8]
	call LB_6113
	jmp LB_6305
LB_6303:
	jmp LB_6309
LB_6308: db 39,49,226,151,130,0
LB_6309:
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax  
	mov rdi,LB_6308
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call printf 
	mov rsp,QWORD [rsp_tmp]
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	jmp LB_6311
LB_6310: db 42,123,32,0
LB_6311:
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax  
	mov rdi,LB_6310
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call printf 
	mov rsp,QWORD [rsp_tmp]
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	jmp LB_6313
LB_6312: db 125,32,0
LB_6313:
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax  
	mov rdi,LB_6312
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call printf 
	mov rsp,QWORD [rsp_tmp]
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	jmp LB_6305
LB_6305:
	ret
LB_5231:
	movzx rax,BYTE [r8+6]
	jmp QWORD [LB_6316+8*rax]
LB_6316: dq LB_6314,LB_6315
LB_6314:
	jmp LB_6319
LB_6318: db 39,48,226,151,130,0
LB_6319:
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax  
	mov rdi,LB_6318
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call printf 
	mov rsp,QWORD [rsp_tmp]
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	mov r8,QWORD [r8+8]
	call LB_5162
	jmp LB_6317
LB_6315:
	jmp LB_6321
LB_6320: db 39,49,226,151,130,0
LB_6321:
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax  
	mov rdi,LB_6320
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call printf 
	mov rsp,QWORD [rsp_tmp]
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	mov r8,QWORD [r8+8]
	call LB_5354
	jmp LB_6317
LB_6317:
	ret
LB_5142:
;; rsp=0 , %2662~2'(= a3◂ [ a35◂ [ a2◂ [ a31◂ [ ]]]] ) %2658~0'(= {| l |} ) %2656~1'(= {| l |} ) 
;; ? 2'(= a3◂ [ a35◂ [ a2◂ [ a31◂ [ ]]]] ) ⊢ 0(<2)◂3'(= a35◂ [ a2◂ [ a31◂ [ ]]] )
	mov rdi,r8
	movzx rax,BYTE [rdi+6]
	cmp rax,0
	jnz LB_6322
	mov rax,QWORD [rdi+8]
	mov r9,rax
;; rsp=0 , %2663~3'(= a35◂ [ a2◂ [ a31◂ [ ]]] ) %2658~0'(= {| l |} ) %2656~1'(= {| l |} ) 
;; ? 3'(= a35◂ [ a2◂ [ a31◂ [ ]]] ) ⊢ 0(<2)◂2'(= a2◂ [ a31◂ [ ]] )
	mov rdi,r9
	movzx rax,BYTE [rdi+6]
	cmp rax,0
	jnz LB_6323
	mov rax,QWORD [rdi+8]
	mov r8,rax
;; rsp=0 , %2665~2'(= a2◂ [ a31◂ [ ]] ) %2658~0'(= {| l |} ) %2656~1'(= {| l |} ) 
; _emt %[ "D0" ] ⊢ %[ "D0" ]
	jmp LB_6325
LB_6324: db 95,101,109,116,58,0
LB_6325:
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax  
	mov rdi,LB_6324
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call printf 
	mov rsp,QWORD [rsp_tmp]
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	jmp LB_6327
LB_6326: db 34,68,48,34,0
LB_6327:
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax  
	mov rdi,LB_6326
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call printf 
	mov rsp,QWORD [rsp_tmp]
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	jmp LB_6329
LB_6328: db 10,0
LB_6329:
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax  
	mov rdi,LB_6328
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call printf 
	mov rsp,QWORD [rsp_tmp]
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	jmp LB_6330
LB_6330:
; .dlt.ptn %[ "D0" ]
;; rsp=0 , %2665~2'(= a2◂ [ a31◂ [ ]] ) %2658~0'(= {| l |} ) %2656~1'(= {| l |} ) 
; rsp_d=0, #177 { %[ 0r ] 2'(= a2◂ [ a31◂ [ ]] ) } ⊢ { 3'(= r ) 2'(= {| l |} ) }
	lea rsp,[rsp-8*2]
	mov QWORD [rsp+8*0],r13
	mov QWORD [rsp+8*1],r14
; .mov_ptn2 { %[ 0r ] 2'(= a2◂ [ a31◂ [ ]] ) } ⊢ { 0'(= r ) 1'(= a2◂ [ a31◂ [ ]] ) }
; .mov_ptn 2'(= a2◂ [ a31◂ [ ]] ) ⊢ 1'(= a2◂ [ a31◂ [ ]] )
	mov rax,r8
	mov r14,rax
; .mov_ptn %[ 0r ] ⊢ 0'(= r )
	mov rax,0
	mov r13,rax
	call ETR_177

	mov rax,QWORD [rsp-8+8*2]
	mov r8,r14
	mov r14,rax
	mov rax,QWORD [rsp-8+8*1]
	mov r9,r13
	mov r13,rax
	lea rsp,[rsp+8*2]
;; rsp=0 , %2668~2'(= {| l |} ) %2667~3'(= r ) %2658~0'(= {| l |} ) %2656~1'(= {| l |} ) 
; _emt 3'(= r ) ⊢ 3'(= r )
	jmp LB_6332
LB_6331: db 95,101,109,116,58,0
LB_6332:
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax  
	mov rdi,LB_6331
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call printf 
	mov rsp,QWORD [rsp_tmp]
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	mov rax,r9
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	mov r8,rax
	mov rsi,r8
	xor rax,rax  
	mov rdi,fmt_r64
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call printf 
	mov rsp,QWORD [rsp_tmp]
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	jmp LB_6334
LB_6333: db 10,0
LB_6334:
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax  
	mov rdi,LB_6333
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call printf 
	mov rsp,QWORD [rsp_tmp]
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	jmp LB_6335
LB_6335:
; .dlt.ptn 3'(= r )
;; rsp=0 , %2668~2'(= {| l |} ) %2658~0'(= {| l |} ) %2656~1'(= {| l |} ) 
; _emt 2'(= {| l |} ) ⊢ 2'(= {| l |} )
	jmp LB_6337
LB_6336: db 95,101,109,116,58,0
LB_6337:
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax  
	mov rdi,LB_6336
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call printf 
	mov rsp,QWORD [rsp_tmp]
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	mov rax,r8
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	mov r8,rax
	mov rsi,r8
	add rsi,8
	xor rax,rax  
	mov rdi,fmt_s8
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call printf 
	mov rsp,QWORD [rsp_tmp]
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	jmp LB_6339
LB_6338: db 10,0
LB_6339:
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax  
	mov rdi,LB_6338
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call printf 
	mov rsp,QWORD [rsp_tmp]
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	jmp LB_6340
LB_6340:
; .dlt.ptn 2'(= {| l |} )
	mov rdi,r8
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call free 
	mov rsp,QWORD [rsp_tmp] 
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
;; rsp=0 , %2658~0'(= {| l |} ) %2656~1'(= {| l |} ) 
; ∎ { }
; .dlt.ptn 0'(= {| l |} )
	mov rdi,r13
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call free 
	mov rsp,QWORD [rsp_tmp] 
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
; .dlt.ptn 1'(= {| l |} )
	mov rdi,r14
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call free 
	mov rsp,QWORD [rsp_tmp] 
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
; .mov_ptn2 { } ⊢ { }
	ret
LB_6323:
;; ? 3'(= a35◂ [ a2◂ [ a31◂ [ ]]] ) ⊢ 1(<2)◂3'(= a2◂ [ *{ rr{| l |}}] )
;; rsp=0 , %2664~3'(= a2◂ [ *{ rr{| l |}}] ) %2658~0'(= {| l |} ) %2656~1'(= {| l |} ) 
; ∎| 
	jmp LB_6342
LB_6341: db 101,120,110,32,54,48,52,49,54,58,10,0
LB_6342:
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax  
	mov rdi,LB_6341
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call printf 
	mov rsp,QWORD [rsp_tmp]
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	jmp err
LB_6322:
;; ? 2'(= a3◂ [ a35◂ [ a2◂ [ a31◂ [ ]]]] ) ⊢ 1(<2)◂{ }
;; rsp=0 , %2658~0'(= {| l |} ) %2656~1'(= {| l |} ) 
; ∎| 
	jmp LB_6344
LB_6343: db 101,120,110,32,54,48,52,52,51,58,10,0
LB_6344:
	push rdx
	push rcx
	push r8
	push r9
	push r10
	push r11
	xor rax,rax  
	mov rdi,LB_6343
	mov QWORD [rsp_tmp],rsp 
	and rsp,~0xf 
	call printf 
	mov rsp,QWORD [rsp_tmp]
	pop r11
	pop r10
	pop r9
	pop r8
	pop rcx
	pop rdx
	jmp err
RTM_0:
	push RTM_1
;; rsp=0 , %0~0'(= {| {| l |}|} ) 
; rsp_d=0, #273 { } ⊢ { }
	lea rsp,[rsp-8*1]
	mov QWORD [rsp+8*0],r13
; .mov_ptn2 { } ⊢ { }
	call ETR_273

	mov r13,QWORD [rsp-8+8*1]
	lea rsp,[rsp+8*1]
; .dlt.ptn { }
;; rsp=0 , %0~0'(= {| {| l |}|} ) 
; ∎
RTM_1:
	mov rdi,0
	mov QWORD rdi,rsp
	and rsp,~0xf
	push rdi
	call exit
	pop rdi
	mov rsp,rdi

err: 
	mov rdi,fmt_err_line
	mov rsi,QWORD [err_n]
	xor rax,rax
	mov QWORD [rsp_tmp],rsp
	and rsp,~0xf
	call printf
	mov rsp,QWORD [rsp_tmp]
	mov rax,1
	mov rbx,0
	int 0x80
