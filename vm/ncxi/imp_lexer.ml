# 1 "imp_lexer.mll"
 
    open Imp_parser
    exception Error of string

# 7 "imp_lexer.ml"
let __ocaml_lex_tables = {
  Lexing.lex_base =
   "\000\000\143\255\144\255\118\000\090\000\091\000\153\255\085\000\
    \160\255\161\255\162\255\170\255\171\255\172\255\173\255\174\255\
    \176\255\181\255\182\255\202\255\040\000\205\255\076\000\219\255\
    \220\255\011\000\012\000\192\000\020\001\078\001\009\000\234\255\
    \104\000\000\000\162\001\181\001\200\001\081\000\169\000\170\000\
    \079\001\142\000\159\255\144\000\149\000\254\255\127\000\080\001\
    \253\255\173\000\169\255\111\000\051\000\251\255\150\255\231\001\
    \147\000\246\255\159\000\000\002\055\002\078\002\247\255\050\000\
    \245\255\248\255\210\255\025\000\032\000\039\000\237\255\201\001\
    \002\000\116\000\242\255\243\255\240\255\143\000\050\000\238\255\
    \117\000\236\255\235\255\053\000\216\255\241\255\049\000\068\000\
    \007\000\018\000\077\000\058\000\059\000\097\000\130\001\191\255\
    \192\255\094\000\197\255\134\000\224\001\233\255\154\255\199\255\
    \137\000\223\255\198\255\198\000\110\002\185\255\094\000\195\255\
    \089\000\193\255\167\255\109\000\226\255\190\255\222\255\184\255\
    \110\000\211\255\183\255\144\000\145\000\133\002\143\002\187\255\
    \156\002\166\002\186\255\179\255\180\255\177\255\178\255\163\255\
    \164\255\165\255\158\255\195\002\014\003\231\255\098\003\156\255\
    \173\003\248\003\053\000\081\001\225\255\183\000\099\000\080\000\
    \153\000\227\255\228\255\212\255\194\255\215\255\224\255\208\255\
    \168\255\155\255\021\001\254\255\255\255";
  Lexing.lex_backtrk =
   "\255\255\255\255\255\255\109\000\104\000\103\000\255\255\112\000\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\052\000\255\255\046\000\255\255\
    \255\255\034\000\048\000\067\000\025\000\112\000\112\000\255\255\
    \080\000\112\000\108\000\108\000\108\000\051\000\003\000\066\000\
    \112\000\106\000\255\255\255\255\000\000\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \007\000\255\255\005\000\255\255\255\255\006\000\255\255\007\000\
    \255\255\255\255\255\255\038\000\037\000\098\000\255\255\011\000\
    \255\255\255\255\255\255\255\255\255\255\016\000\255\255\255\255\
    \255\255\255\255\255\255\041\000\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\059\000\255\255\049\000\054\000\255\255\255\255\255\255\
    \055\000\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\089\000\255\255\255\255\255\255\255\255\
    \042\000\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\023\000\023\000\255\255\025\000\255\255\
    \026\000\026\000\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255";
  Lexing.lex_default =
   "\001\000\000\000\000\000\255\255\255\255\255\255\000\000\255\255\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\255\255\000\000\255\255\000\000\
    \000\000\255\255\255\255\255\255\255\255\255\255\255\255\000\000\
    \255\255\255\255\255\255\255\255\255\255\255\255\038\000\049\000\
    \047\000\255\255\000\000\255\255\255\255\000\000\255\255\047\000\
    \000\000\049\000\000\000\051\000\255\255\000\000\000\000\255\255\
    \255\255\000\000\255\255\255\255\255\255\255\255\000\000\255\255\
    \000\000\000\000\000\000\255\255\255\255\255\255\000\000\255\255\
    \255\255\255\255\000\000\000\000\000\000\255\255\255\255\000\000\
    \255\255\000\000\000\000\255\255\000\000\000\000\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\000\000\
    \000\000\255\255\000\000\255\255\255\255\000\000\000\000\000\000\
    \255\255\000\000\000\000\255\255\255\255\000\000\255\255\000\000\
    \255\255\000\000\000\000\255\255\000\000\000\000\000\000\000\000\
    \255\255\000\000\000\000\255\255\255\255\255\255\255\255\000\000\
    \255\255\255\255\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\255\255\255\255\000\000\255\255\000\000\
    \255\255\255\255\255\255\255\255\000\000\255\255\255\255\255\255\
    \255\255\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\163\000\000\000\000\000";
  Lexing.lex_trans =
   "\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\003\000\003\000\000\000\000\000\003\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \003\000\011\000\040\000\032\000\005\000\029\000\016\000\013\000\
    \015\000\014\000\009\000\010\000\006\000\008\000\041\000\007\000\
    \036\000\035\000\034\000\034\000\034\000\034\000\034\000\034\000\
    \034\000\034\000\022\000\038\000\024\000\012\000\023\000\019\000\
    \004\000\028\000\028\000\028\000\028\000\028\000\028\000\028\000\
    \028\000\028\000\028\000\028\000\028\000\028\000\028\000\028\000\
    \028\000\028\000\028\000\028\000\028\000\028\000\028\000\028\000\
    \028\000\028\000\028\000\037\000\031\000\021\000\020\000\027\000\
    \039\000\028\000\028\000\028\000\028\000\028\000\028\000\028\000\
    \028\000\028\000\028\000\028\000\028\000\028\000\028\000\028\000\
    \028\000\028\000\028\000\028\000\028\000\028\000\028\000\028\000\
    \028\000\028\000\028\000\018\000\026\000\017\000\025\000\003\000\
    \003\000\004\000\005\000\003\000\161\000\160\000\159\000\158\000\
    \147\000\088\000\148\000\085\000\051\000\087\000\086\000\090\000\
    \053\000\094\000\092\000\091\000\064\000\084\000\003\000\043\000\
    \044\000\043\000\044\000\043\000\083\000\043\000\043\000\044\000\
    \093\000\047\000\043\000\082\000\076\000\080\000\047\000\071\000\
    \089\000\077\000\052\000\067\000\069\000\081\000\043\000\050\000\
    \043\000\083\000\138\000\255\255\048\000\043\000\070\000\048\000\
    \132\000\131\000\078\000\068\000\042\000\079\000\118\000\066\000\
    \134\000\133\000\033\000\058\000\058\000\058\000\058\000\058\000\
    \058\000\058\000\058\000\058\000\058\000\117\000\146\000\058\000\
    \058\000\058\000\058\000\058\000\058\000\058\000\058\000\058\000\
    \058\000\136\000\111\000\047\000\120\000\135\000\124\000\122\000\
    \123\000\107\000\030\000\114\000\115\000\106\000\112\000\113\000\
    \137\000\116\000\121\000\128\000\125\000\047\000\149\000\119\000\
    \157\000\156\000\155\000\047\000\000\000\057\000\108\000\108\000\
    \108\000\108\000\108\000\108\000\108\000\108\000\108\000\108\000\
    \002\000\144\000\144\000\144\000\144\000\144\000\144\000\144\000\
    \144\000\144\000\144\000\144\000\144\000\144\000\144\000\144\000\
    \144\000\144\000\144\000\144\000\144\000\144\000\144\000\144\000\
    \144\000\144\000\144\000\154\000\153\000\000\000\143\000\164\000\
    \000\000\144\000\144\000\144\000\144\000\144\000\144\000\144\000\
    \144\000\144\000\144\000\144\000\144\000\144\000\144\000\144\000\
    \144\000\144\000\144\000\144\000\144\000\144\000\144\000\144\000\
    \144\000\144\000\144\000\141\000\000\000\000\000\000\000\150\000\
    \110\000\151\000\000\000\000\000\142\000\142\000\142\000\142\000\
    \142\000\142\000\142\000\142\000\142\000\142\000\152\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\028\000\028\000\028\000\
    \028\000\028\000\028\000\028\000\028\000\028\000\028\000\028\000\
    \028\000\028\000\028\000\028\000\028\000\028\000\028\000\028\000\
    \028\000\028\000\028\000\028\000\028\000\028\000\028\000\255\255\
    \000\000\045\000\045\000\142\000\000\000\028\000\028\000\028\000\
    \028\000\028\000\028\000\028\000\028\000\028\000\028\000\028\000\
    \028\000\028\000\028\000\028\000\028\000\028\000\028\000\028\000\
    \028\000\028\000\028\000\028\000\028\000\028\000\028\000\139\000\
    \139\000\139\000\139\000\139\000\139\000\139\000\139\000\139\000\
    \139\000\139\000\139\000\139\000\139\000\139\000\139\000\139\000\
    \139\000\139\000\139\000\139\000\139\000\139\000\139\000\139\000\
    \139\000\255\255\255\255\046\000\046\000\255\255\000\000\139\000\
    \139\000\139\000\139\000\139\000\139\000\139\000\139\000\139\000\
    \139\000\139\000\139\000\139\000\139\000\139\000\139\000\139\000\
    \139\000\139\000\139\000\139\000\139\000\139\000\139\000\139\000\
    \139\000\054\000\000\000\000\000\000\000\147\000\000\000\000\000\
    \000\000\000\000\034\000\034\000\034\000\034\000\034\000\034\000\
    \034\000\034\000\034\000\034\000\054\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\034\000\034\000\034\000\
    \034\000\034\000\034\000\034\000\034\000\034\000\034\000\054\000\
    \000\000\000\000\000\000\000\000\073\000\000\000\000\000\000\000\
    \034\000\034\000\034\000\034\000\034\000\034\000\034\000\034\000\
    \034\000\034\000\101\000\105\000\000\000\000\000\075\000\000\000\
    \095\000\096\000\102\000\000\000\000\000\000\000\104\000\000\000\
    \097\000\098\000\100\000\146\000\065\000\255\255\000\000\059\000\
    \059\000\059\000\059\000\059\000\059\000\059\000\059\000\059\000\
    \059\000\000\000\099\000\000\000\000\000\000\000\000\000\063\000\
    \059\000\059\000\059\000\059\000\059\000\059\000\000\000\000\000\
    \059\000\059\000\059\000\059\000\059\000\059\000\059\000\059\000\
    \059\000\059\000\056\000\000\000\103\000\000\000\000\000\000\000\
    \055\000\059\000\059\000\059\000\059\000\059\000\059\000\074\000\
    \059\000\059\000\059\000\059\000\059\000\059\000\000\000\255\255\
    \255\255\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\060\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\059\000\059\000\059\000\059\000\059\000\059\000\061\000\
    \061\000\061\000\061\000\061\000\061\000\061\000\061\000\061\000\
    \061\000\000\000\062\000\000\000\000\000\000\000\000\000\000\000\
    \061\000\061\000\061\000\061\000\061\000\061\000\061\000\061\000\
    \061\000\061\000\061\000\061\000\061\000\061\000\061\000\061\000\
    \000\000\000\000\000\000\072\000\000\000\000\000\000\000\061\000\
    \061\000\061\000\061\000\061\000\061\000\000\000\000\000\000\000\
    \061\000\061\000\061\000\061\000\061\000\061\000\108\000\108\000\
    \108\000\108\000\108\000\108\000\108\000\108\000\108\000\108\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\061\000\
    \061\000\061\000\061\000\061\000\061\000\126\000\126\000\126\000\
    \126\000\126\000\126\000\126\000\126\000\126\000\126\000\126\000\
    \126\000\126\000\126\000\126\000\126\000\126\000\126\000\126\000\
    \126\000\000\000\000\000\109\000\129\000\129\000\129\000\129\000\
    \129\000\129\000\129\000\129\000\129\000\129\000\129\000\129\000\
    \129\000\129\000\129\000\129\000\129\000\129\000\129\000\129\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\127\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\140\000\140\000\140\000\140\000\140\000\
    \140\000\140\000\140\000\140\000\140\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\130\000\139\000\139\000\139\000\139\000\
    \139\000\139\000\139\000\139\000\139\000\139\000\139\000\139\000\
    \139\000\139\000\139\000\139\000\139\000\139\000\139\000\139\000\
    \139\000\139\000\139\000\139\000\139\000\139\000\000\000\000\000\
    \000\000\000\000\140\000\000\000\139\000\139\000\139\000\139\000\
    \139\000\139\000\139\000\139\000\139\000\139\000\139\000\139\000\
    \139\000\139\000\139\000\139\000\139\000\139\000\139\000\139\000\
    \139\000\139\000\139\000\139\000\139\000\139\000\140\000\140\000\
    \140\000\140\000\140\000\140\000\140\000\140\000\140\000\140\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\140\000\
    \140\000\140\000\140\000\140\000\140\000\140\000\140\000\140\000\
    \140\000\140\000\140\000\140\000\140\000\140\000\140\000\140\000\
    \140\000\140\000\140\000\140\000\140\000\140\000\140\000\140\000\
    \140\000\000\000\000\000\000\000\000\000\140\000\000\000\140\000\
    \140\000\140\000\140\000\140\000\140\000\140\000\140\000\140\000\
    \140\000\140\000\140\000\140\000\140\000\140\000\140\000\140\000\
    \140\000\140\000\140\000\140\000\140\000\140\000\140\000\140\000\
    \140\000\141\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\142\000\142\000\142\000\142\000\142\000\142\000\
    \142\000\142\000\142\000\142\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\142\000\142\000\142\000\142\000\142\000\
    \142\000\142\000\142\000\142\000\142\000\142\000\142\000\142\000\
    \142\000\142\000\142\000\142\000\142\000\142\000\142\000\142\000\
    \142\000\142\000\142\000\142\000\142\000\000\000\000\000\000\000\
    \000\000\142\000\000\000\142\000\142\000\142\000\142\000\142\000\
    \142\000\142\000\142\000\142\000\142\000\142\000\142\000\142\000\
    \142\000\142\000\142\000\142\000\142\000\142\000\142\000\142\000\
    \142\000\142\000\142\000\142\000\142\000\145\000\145\000\145\000\
    \145\000\145\000\145\000\145\000\145\000\145\000\145\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\144\000\144\000\
    \144\000\144\000\144\000\144\000\144\000\144\000\144\000\144\000\
    \144\000\144\000\144\000\144\000\144\000\144\000\144\000\144\000\
    \144\000\144\000\144\000\144\000\144\000\144\000\144\000\144\000\
    \000\000\000\000\000\000\000\000\145\000\000\000\144\000\144\000\
    \144\000\144\000\144\000\144\000\144\000\144\000\144\000\144\000\
    \144\000\144\000\144\000\144\000\144\000\144\000\144\000\144\000\
    \144\000\144\000\144\000\144\000\144\000\144\000\144\000\144\000\
    \145\000\145\000\145\000\145\000\145\000\145\000\145\000\145\000\
    \145\000\145\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\145\000\145\000\145\000\145\000\145\000\145\000\145\000\
    \145\000\145\000\145\000\145\000\145\000\145\000\145\000\145\000\
    \145\000\145\000\145\000\145\000\145\000\145\000\145\000\145\000\
    \145\000\145\000\145\000\000\000\000\000\000\000\000\000\145\000\
    \000\000\145\000\145\000\145\000\145\000\145\000\145\000\145\000\
    \145\000\145\000\145\000\145\000\145\000\145\000\145\000\145\000\
    \145\000\145\000\145\000\145\000\145\000\145\000\145\000\145\000\
    \145\000\145\000\145\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000";
  Lexing.lex_check =
   "\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\000\000\000\000\255\255\255\255\000\000\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\003\000\
    \003\000\004\000\005\000\003\000\007\000\020\000\022\000\025\000\
    \026\000\030\000\026\000\032\000\037\000\030\000\030\000\030\000\
    \052\000\030\000\030\000\030\000\063\000\067\000\003\000\041\000\
    \041\000\043\000\043\000\041\000\068\000\043\000\044\000\044\000\
    \030\000\046\000\044\000\069\000\073\000\078\000\046\000\033\000\
    \030\000\072\000\051\000\033\000\033\000\080\000\041\000\037\000\
    \043\000\083\000\086\000\038\000\039\000\044\000\033\000\049\000\
    \089\000\089\000\077\000\033\000\041\000\077\000\092\000\033\000\
    \088\000\088\000\000\000\056\000\056\000\056\000\056\000\056\000\
    \056\000\056\000\056\000\056\000\056\000\092\000\026\000\058\000\
    \058\000\058\000\058\000\058\000\058\000\058\000\058\000\058\000\
    \058\000\087\000\097\000\046\000\091\000\087\000\090\000\090\000\
    \090\000\099\000\000\000\093\000\093\000\104\000\110\000\112\000\
    \087\000\115\000\120\000\123\000\124\000\046\000\026\000\091\000\
    \146\000\150\000\151\000\046\000\255\255\056\000\107\000\107\000\
    \107\000\107\000\107\000\107\000\107\000\107\000\107\000\107\000\
    \000\000\027\000\027\000\027\000\027\000\027\000\027\000\027\000\
    \027\000\027\000\027\000\027\000\027\000\027\000\027\000\027\000\
    \027\000\027\000\027\000\027\000\027\000\027\000\027\000\027\000\
    \027\000\027\000\027\000\152\000\152\000\255\255\027\000\162\000\
    \255\255\027\000\027\000\027\000\027\000\027\000\027\000\027\000\
    \027\000\027\000\027\000\027\000\027\000\027\000\027\000\027\000\
    \027\000\027\000\027\000\027\000\027\000\027\000\027\000\027\000\
    \027\000\027\000\027\000\028\000\255\255\255\255\255\255\149\000\
    \097\000\149\000\255\255\255\255\028\000\028\000\028\000\028\000\
    \028\000\028\000\028\000\028\000\028\000\028\000\149\000\255\255\
    \255\255\255\255\255\255\255\255\255\255\028\000\028\000\028\000\
    \028\000\028\000\028\000\028\000\028\000\028\000\028\000\028\000\
    \028\000\028\000\028\000\028\000\028\000\028\000\028\000\028\000\
    \028\000\028\000\028\000\028\000\028\000\028\000\028\000\051\000\
    \255\255\040\000\047\000\028\000\255\255\028\000\028\000\028\000\
    \028\000\028\000\028\000\028\000\028\000\028\000\028\000\028\000\
    \028\000\028\000\028\000\028\000\028\000\028\000\028\000\028\000\
    \028\000\028\000\028\000\028\000\028\000\028\000\028\000\029\000\
    \029\000\029\000\029\000\029\000\029\000\029\000\029\000\029\000\
    \029\000\029\000\029\000\029\000\029\000\029\000\029\000\029\000\
    \029\000\029\000\029\000\029\000\029\000\029\000\029\000\029\000\
    \029\000\038\000\039\000\040\000\047\000\049\000\255\255\029\000\
    \029\000\029\000\029\000\029\000\029\000\029\000\029\000\029\000\
    \029\000\029\000\029\000\029\000\029\000\029\000\029\000\029\000\
    \029\000\029\000\029\000\029\000\029\000\029\000\029\000\029\000\
    \029\000\034\000\255\255\255\255\255\255\147\000\255\255\255\255\
    \255\255\255\255\034\000\034\000\034\000\034\000\034\000\034\000\
    \034\000\034\000\034\000\034\000\035\000\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\035\000\035\000\035\000\
    \035\000\035\000\035\000\035\000\035\000\035\000\035\000\036\000\
    \255\255\255\255\255\255\255\255\071\000\255\255\255\255\255\255\
    \036\000\036\000\036\000\036\000\036\000\036\000\036\000\036\000\
    \036\000\036\000\094\000\100\000\255\255\255\255\071\000\255\255\
    \094\000\094\000\100\000\255\255\255\255\255\255\100\000\255\255\
    \094\000\094\000\094\000\147\000\034\000\162\000\255\255\055\000\
    \055\000\055\000\055\000\055\000\055\000\055\000\055\000\055\000\
    \055\000\255\255\094\000\255\255\255\255\255\255\255\255\035\000\
    \055\000\055\000\055\000\055\000\055\000\055\000\255\255\255\255\
    \059\000\059\000\059\000\059\000\059\000\059\000\059\000\059\000\
    \059\000\059\000\036\000\255\255\100\000\255\255\255\255\255\255\
    \036\000\059\000\059\000\059\000\059\000\059\000\059\000\071\000\
    \055\000\055\000\055\000\055\000\055\000\055\000\255\255\040\000\
    \047\000\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\055\000\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\059\000\059\000\059\000\059\000\059\000\059\000\060\000\
    \060\000\060\000\060\000\060\000\060\000\060\000\060\000\060\000\
    \060\000\255\255\059\000\255\255\255\255\255\255\255\255\255\255\
    \060\000\060\000\060\000\060\000\060\000\060\000\061\000\061\000\
    \061\000\061\000\061\000\061\000\061\000\061\000\061\000\061\000\
    \255\255\255\255\255\255\071\000\255\255\255\255\255\255\061\000\
    \061\000\061\000\061\000\061\000\061\000\255\255\255\255\255\255\
    \060\000\060\000\060\000\060\000\060\000\060\000\108\000\108\000\
    \108\000\108\000\108\000\108\000\108\000\108\000\108\000\108\000\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\061\000\
    \061\000\061\000\061\000\061\000\061\000\125\000\125\000\125\000\
    \125\000\125\000\125\000\125\000\125\000\125\000\125\000\126\000\
    \126\000\126\000\126\000\126\000\126\000\126\000\126\000\126\000\
    \126\000\255\255\255\255\108\000\128\000\128\000\128\000\128\000\
    \128\000\128\000\128\000\128\000\128\000\128\000\129\000\129\000\
    \129\000\129\000\129\000\129\000\129\000\129\000\129\000\129\000\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\126\000\255\255\255\255\255\255\
    \255\255\255\255\255\255\139\000\139\000\139\000\139\000\139\000\
    \139\000\139\000\139\000\139\000\139\000\255\255\255\255\255\255\
    \255\255\255\255\255\255\129\000\139\000\139\000\139\000\139\000\
    \139\000\139\000\139\000\139\000\139\000\139\000\139\000\139\000\
    \139\000\139\000\139\000\139\000\139\000\139\000\139\000\139\000\
    \139\000\139\000\139\000\139\000\139\000\139\000\255\255\255\255\
    \255\255\255\255\139\000\255\255\139\000\139\000\139\000\139\000\
    \139\000\139\000\139\000\139\000\139\000\139\000\139\000\139\000\
    \139\000\139\000\139\000\139\000\139\000\139\000\139\000\139\000\
    \139\000\139\000\139\000\139\000\139\000\139\000\140\000\140\000\
    \140\000\140\000\140\000\140\000\140\000\140\000\140\000\140\000\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\140\000\
    \140\000\140\000\140\000\140\000\140\000\140\000\140\000\140\000\
    \140\000\140\000\140\000\140\000\140\000\140\000\140\000\140\000\
    \140\000\140\000\140\000\140\000\140\000\140\000\140\000\140\000\
    \140\000\255\255\255\255\255\255\255\255\140\000\255\255\140\000\
    \140\000\140\000\140\000\140\000\140\000\140\000\140\000\140\000\
    \140\000\140\000\140\000\140\000\140\000\140\000\140\000\140\000\
    \140\000\140\000\140\000\140\000\140\000\140\000\140\000\140\000\
    \140\000\142\000\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\142\000\142\000\142\000\142\000\142\000\142\000\
    \142\000\142\000\142\000\142\000\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\142\000\142\000\142\000\142\000\142\000\
    \142\000\142\000\142\000\142\000\142\000\142\000\142\000\142\000\
    \142\000\142\000\142\000\142\000\142\000\142\000\142\000\142\000\
    \142\000\142\000\142\000\142\000\142\000\255\255\255\255\255\255\
    \255\255\142\000\255\255\142\000\142\000\142\000\142\000\142\000\
    \142\000\142\000\142\000\142\000\142\000\142\000\142\000\142\000\
    \142\000\142\000\142\000\142\000\142\000\142\000\142\000\142\000\
    \142\000\142\000\142\000\142\000\142\000\144\000\144\000\144\000\
    \144\000\144\000\144\000\144\000\144\000\144\000\144\000\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\144\000\144\000\
    \144\000\144\000\144\000\144\000\144\000\144\000\144\000\144\000\
    \144\000\144\000\144\000\144\000\144\000\144\000\144\000\144\000\
    \144\000\144\000\144\000\144\000\144\000\144\000\144\000\144\000\
    \255\255\255\255\255\255\255\255\144\000\255\255\144\000\144\000\
    \144\000\144\000\144\000\144\000\144\000\144\000\144\000\144\000\
    \144\000\144\000\144\000\144\000\144\000\144\000\144\000\144\000\
    \144\000\144\000\144\000\144\000\144\000\144\000\144\000\144\000\
    \145\000\145\000\145\000\145\000\145\000\145\000\145\000\145\000\
    \145\000\145\000\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\145\000\145\000\145\000\145\000\145\000\145\000\145\000\
    \145\000\145\000\145\000\145\000\145\000\145\000\145\000\145\000\
    \145\000\145\000\145\000\145\000\145\000\145\000\145\000\145\000\
    \145\000\145\000\145\000\255\255\255\255\255\255\255\255\145\000\
    \255\255\145\000\145\000\145\000\145\000\145\000\145\000\145\000\
    \145\000\145\000\145\000\145\000\145\000\145\000\145\000\145\000\
    \145\000\145\000\145\000\145\000\145\000\145\000\145\000\145\000\
    \145\000\145\000\145\000\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255";
  Lexing.lex_base_code =
   "";
  Lexing.lex_backtrk_code =
   "";
  Lexing.lex_default_code =
   "";
  Lexing.lex_trans_code =
   "";
  Lexing.lex_check_code =
   "";
  Lexing.lex_code =
   "";
}

let rec token lexbuf =
   __ocaml_lex_token_rec lexbuf 0
and __ocaml_lex_token_rec lexbuf __ocaml_lex_state =
  match Lexing.engine __ocaml_lex_tables __ocaml_lex_state lexbuf with
      | 0 ->
# 20 "imp_lexer.mll"
                      ( DOT_END )
# 418 "imp_lexer.ml"

  | 1 ->
let
# 21 "imp_lexer.mll"
                                                                 lxm
# 424 "imp_lexer.ml"
= Lexing.sub_lexeme lexbuf (lexbuf.Lexing.lex_start_pos + 1) (lexbuf.Lexing.lex_curr_pos + -1) in
# 21 "imp_lexer.mll"
                                                                           ( STG(Scanf.unescaped lxm) )
# 428 "imp_lexer.ml"

  | 2 ->
let
# 22 "imp_lexer.mll"
                               lxm
# 434 "imp_lexer.ml"
= Lexing.sub_lexeme lexbuf (lexbuf.Lexing.lex_start_pos + 1) lexbuf.Lexing.lex_curr_pos in
# 22 "imp_lexer.mll"
                                    ( LINE(lxm) )
# 438 "imp_lexer.ml"

  | 3 ->
# 23 "imp_lexer.mll"
                    ( Util.pnt true "start line comment\n"; token lexbuf )
# 443 "imp_lexer.ml"

  | 4 ->
# 24 "imp_lexer.mll"
                          ( token lexbuf )
# 448 "imp_lexer.ml"

  | 5 ->
let
# 25 "imp_lexer.mll"
                      lxm
# 454 "imp_lexer.ml"
= Lexing.sub_lexeme lexbuf (lexbuf.Lexing.lex_start_pos + 2) lexbuf.Lexing.lex_curr_pos in
# 25 "imp_lexer.mll"
                           ( R64(Int64.of_string lxm) )
# 458 "imp_lexer.ml"

  | 6 ->
let
# 26 "imp_lexer.mll"
                     lxm
# 464 "imp_lexer.ml"
= Lexing.sub_lexeme lexbuf (lexbuf.Lexing.lex_start_pos + 3) lexbuf.Lexing.lex_curr_pos in
# 26 "imp_lexer.mll"
                          ( R64(Int64.of_string ("0x"^lxm)) )
# 468 "imp_lexer.ml"

  | 7 ->
let
# 27 "imp_lexer.mll"
                 lxm
# 474 "imp_lexer.ml"
= Lexing.sub_lexeme lexbuf lexbuf.Lexing.lex_start_pos (lexbuf.Lexing.lex_curr_pos + -1) in
# 27 "imp_lexer.mll"
                          ( R64(Int64.of_string lxm) )
# 478 "imp_lexer.ml"

  | 8 ->
let
# 28 "imp_lexer.mll"
                    lxm
# 484 "imp_lexer.ml"
= Lexing.sub_lexeme lexbuf (lexbuf.Lexing.lex_start_pos + 2) (lexbuf.Lexing.lex_curr_pos + -1) in
# 28 "imp_lexer.mll"
                             ( R64(Int64.of_string ("0x"^lxm)) )
# 488 "imp_lexer.ml"

  | 9 ->
# 29 "imp_lexer.mll"
            ( R2(false) )
# 493 "imp_lexer.ml"

  | 10 ->
# 30 "imp_lexer.mll"
            ( R2(true) )
# 498 "imp_lexer.ml"

  | 11 ->
# 31 "imp_lexer.mll"
            ( LCE )
# 503 "imp_lexer.ml"

  | 12 ->
# 32 "imp_lexer.mll"
            ( LCE_EQ )
# 508 "imp_lexer.ml"

  | 13 ->
# 33 "imp_lexer.mll"
            ( LCE_EXEC )
# 513 "imp_lexer.ml"

  | 14 ->
# 34 "imp_lexer.mll"
           ( ENV )
# 518 "imp_lexer.ml"

  | 15 ->
# 35 "imp_lexer.mll"
             ( LCE_IR  )
# 523 "imp_lexer.ml"

  | 16 ->
# 36 "imp_lexer.mll"
              ( MDL )
# 528 "imp_lexer.ml"

  | 17 ->
# 37 "imp_lexer.mll"
              ( MDL_END )
# 533 "imp_lexer.ml"

  | 18 ->
# 38 "imp_lexer.mll"
           ( DTA )
# 538 "imp_lexer.ml"

  | 19 ->
# 39 "imp_lexer.mll"
                ( DTA_GRM )
# 543 "imp_lexer.ml"

  | 20 ->
# 40 "imp_lexer.mll"
             ( NOT_SPL )
# 548 "imp_lexer.ml"

  | 21 ->
# 41 "imp_lexer.mll"
            ( SLH )
# 553 "imp_lexer.ml"

  | 22 ->
# 42 "imp_lexer.mll"
            ( FOR_ALL )
# 558 "imp_lexer.ml"

  | 23 ->
let
# 43 "imp_lexer.mll"
                   lxm
# 564 "imp_lexer.ml"
= Lexing.sub_lexeme lexbuf (lexbuf.Lexing.lex_start_pos + 1) lexbuf.Lexing.lex_curr_pos in
# 43 "imp_lexer.mll"
                        ( REG(lxm) )
# 568 "imp_lexer.ml"

  | 24 ->
let
# 45 "imp_lexer.mll"
               lxm
# 574 "imp_lexer.ml"
= Lexing.sub_lexeme lexbuf lexbuf.Lexing.lex_start_pos (lexbuf.Lexing.lex_curr_pos + -1) in
# 45 "imp_lexer.mll"
                         ( VAL(lxm) )
# 578 "imp_lexer.ml"

  | 25 ->
let
# 46 "imp_lexer.mll"
              lxm
# 584 "imp_lexer.ml"
= Lexing.sub_lexeme lexbuf lexbuf.Lexing.lex_start_pos lexbuf.Lexing.lex_curr_pos in
# 46 "imp_lexer.mll"
                  ( NAM(lxm) )
# 588 "imp_lexer.ml"

  | 26 ->
let
# 47 "imp_lexer.mll"
                    lxm
# 594 "imp_lexer.ml"
= Lexing.sub_lexeme lexbuf lexbuf.Lexing.lex_start_pos lexbuf.Lexing.lex_curr_pos in
# 47 "imp_lexer.mll"
                        ( PRM(lxm) )
# 598 "imp_lexer.ml"

  | 27 ->
# 48 "imp_lexer.mll"
              ( OUT_IR )
# 603 "imp_lexer.ml"

  | 28 ->
# 49 "imp_lexer.mll"
              ( PRJ_IR  )
# 608 "imp_lexer.ml"

  | 29 ->
# 50 "imp_lexer.mll"
              ( CNS_IR  )
# 613 "imp_lexer.ml"

  | 30 ->
# 51 "imp_lexer.mll"
            ( INI_IR )
# 618 "imp_lexer.ml"

  | 31 ->
# 52 "imp_lexer.mll"
            ( MTC_IR )
# 623 "imp_lexer.ml"

  | 32 ->
# 53 "imp_lexer.mll"
             ( SYNT_COPRD )
# 628 "imp_lexer.ml"

  | 33 ->
# 54 "imp_lexer.mll"
            ( ISO )
# 633 "imp_lexer.ml"

  | 34 ->
# 55 "imp_lexer.mll"
          ( LET )
# 638 "imp_lexer.ml"

  | 35 ->
# 56 "imp_lexer.mll"
          ( OP )
# 643 "imp_lexer.ml"

  | 36 ->
# 57 "imp_lexer.mll"
          ( LB )
# 648 "imp_lexer.ml"

  | 37 ->
# 58 "imp_lexer.mll"
           ( ARR )
# 653 "imp_lexer.ml"

  | 38 ->
# 59 "imp_lexer.mll"
           ( ARR_REV )
# 658 "imp_lexer.ml"

  | 39 ->
# 60 "imp_lexer.mll"
             ( ARR_REV_IN )
# 663 "imp_lexer.ml"

  | 40 ->
let
# 61 "imp_lexer.mll"
                 lxm
# 669 "imp_lexer.ml"
= Lexing.sub_lexeme lexbuf lexbuf.Lexing.lex_start_pos (lexbuf.Lexing.lex_curr_pos + -2) in
# 61 "imp_lexer.mll"
                           ( IN(String.length lxm) )
# 673 "imp_lexer.ml"

  | 41 ->
let
# 62 "imp_lexer.mll"
                      lxm
# 679 "imp_lexer.ml"
= Lexing.sub_lexeme lexbuf (lexbuf.Lexing.lex_start_pos + 2) lexbuf.Lexing.lex_curr_pos in
# 62 "imp_lexer.mll"
                            ( OUT(String.length lxm) )
# 683 "imp_lexer.ml"

  | 42 ->
# 63 "imp_lexer.mll"
            ( SRC )
# 688 "imp_lexer.ml"

  | 43 ->
# 64 "imp_lexer.mll"
              ( SRC_OUT )
# 693 "imp_lexer.ml"

  | 44 ->
# 65 "imp_lexer.mll"
              ( SRC_IL )
# 698 "imp_lexer.ml"

  | 45 ->
# 66 "imp_lexer.mll"
           ( EXN )
# 703 "imp_lexer.ml"

  | 46 ->
# 67 "imp_lexer.mll"
          ( CLN )
# 708 "imp_lexer.ml"

  | 47 ->
# 68 "imp_lexer.mll"
           ( CLN2 )
# 713 "imp_lexer.ml"

  | 48 ->
# 69 "imp_lexer.mll"
          ( SPL )
# 718 "imp_lexer.ml"

  | 49 ->
# 70 "imp_lexer.mll"
             ( AGL )
# 723 "imp_lexer.ml"

  | 50 ->
# 71 "imp_lexer.mll"
          ( R_BLK )
# 728 "imp_lexer.ml"

  | 51 ->
# 72 "imp_lexer.mll"
          ( L_BLK )
# 733 "imp_lexer.ml"

  | 52 ->
# 73 "imp_lexer.mll"
          ( SEQ )
# 738 "imp_lexer.ml"

  | 53 ->
# 74 "imp_lexer.mll"
           ( MTC )
# 743 "imp_lexer.ml"

  | 54 ->
# 75 "imp_lexer.mll"
              ( COPRD )
# 748 "imp_lexer.ml"

  | 55 ->
# 76 "imp_lexer.mll"
             ( COPRD_END )
# 753 "imp_lexer.ml"

  | 56 ->
# 77 "imp_lexer.mll"
              ( COPRD_PTN )
# 758 "imp_lexer.ml"

  | 57 ->
# 78 "imp_lexer.mll"
               ( COPRD_PTN_END )
# 763 "imp_lexer.ml"

  | 58 ->
# 79 "imp_lexer.mll"
              ( PRD )
# 768 "imp_lexer.ml"

  | 59 ->
# 80 "imp_lexer.mll"
            ( EOP )
# 773 "imp_lexer.ml"

  | 60 ->
# 81 "imp_lexer.mll"
             ( EOP_EXN )
# 778 "imp_lexer.ml"

  | 61 ->
# 82 "imp_lexer.mll"
             ( EOP_OUT )
# 783 "imp_lexer.ml"

  | 62 ->
# 83 "imp_lexer.mll"
               ( MDL_EOP )
# 788 "imp_lexer.ml"

  | 63 ->
# 84 "imp_lexer.mll"
            ( COPRD_END )
# 793 "imp_lexer.ml"

  | 64 ->
# 85 "imp_lexer.mll"
            ( PRD_END )
# 798 "imp_lexer.ml"

  | 65 ->
# 86 "imp_lexer.mll"
            ( DEF )
# 803 "imp_lexer.ml"

  | 66 ->
# 87 "imp_lexer.mll"
          ( ACT )
# 808 "imp_lexer.ml"

  | 67 ->
# 89 "imp_lexer.mll"
          ( WC )
# 813 "imp_lexer.ml"

  | 68 ->
let
# 90 "imp_lexer.mll"
                        lxm
# 819 "imp_lexer.ml"
= Lexing.sub_lexeme lexbuf (lexbuf.Lexing.lex_start_pos + 4) (lexbuf.Lexing.lex_curr_pos + -1) in
# 90 "imp_lexer.mll"
                                 ( INJ(int_of_string lxm) )
# 823 "imp_lexer.ml"

  | 69 ->
let
# 91 "imp_lexer.mll"
                        lxm
# 829 "imp_lexer.ml"
= Lexing.sub_lexeme lexbuf (lexbuf.Lexing.lex_start_pos + 4) (lexbuf.Lexing.lex_curr_pos + -1) in
# 91 "imp_lexer.mll"
                                 ( CHO(int_of_string lxm) )
# 833 "imp_lexer.ml"

  | 70 ->
let
# 92 "imp_lexer.mll"
                        lxm
# 839 "imp_lexer.ml"
= Lexing.sub_lexeme lexbuf (lexbuf.Lexing.lex_start_pos + 4) (lexbuf.Lexing.lex_curr_pos + -1) in
# 92 "imp_lexer.mll"
                                 ( AGL_OP(int_of_string lxm) )
# 843 "imp_lexer.ml"

  | 71 ->
# 93 "imp_lexer.mll"
            ( VCT )
# 848 "imp_lexer.ml"

  | 72 ->
# 94 "imp_lexer.mll"
            ( IMP )
# 853 "imp_lexer.ml"

  | 73 ->
# 95 "imp_lexer.mll"
          ( L_RCD )
# 858 "imp_lexer.ml"

  | 74 ->
# 96 "imp_lexer.mll"
          ( R_RCD )
# 863 "imp_lexer.ml"

  | 75 ->
# 97 "imp_lexer.mll"
            ( L_LST )
# 868 "imp_lexer.ml"

  | 76 ->
# 98 "imp_lexer.mll"
            ( R_LST )
# 873 "imp_lexer.ml"

  | 77 ->
# 99 "imp_lexer.mll"
            ( L_OPN )
# 878 "imp_lexer.ml"

  | 78 ->
# 100 "imp_lexer.mll"
            ( R_OPN )
# 883 "imp_lexer.ml"

  | 79 ->
# 101 "imp_lexer.mll"
          ( SGN )
# 888 "imp_lexer.ml"

  | 80 ->
# 102 "imp_lexer.mll"
          ( VCT_INI )
# 893 "imp_lexer.ml"

  | 81 ->
# 103 "imp_lexer.mll"
          ( L_PRN )
# 898 "imp_lexer.ml"

  | 82 ->
# 104 "imp_lexer.mll"
          ( R_PRN )
# 903 "imp_lexer.ml"

  | 83 ->
# 105 "imp_lexer.mll"
           ( DSH )
# 908 "imp_lexer.ml"

  | 84 ->
# 106 "imp_lexer.mll"
          ( EQ )
# 913 "imp_lexer.ml"

  | 85 ->
# 107 "imp_lexer.mll"
          ( EXP )
# 918 "imp_lexer.ml"

  | 86 ->
# 108 "imp_lexer.mll"
           ( S8_STT )
# 923 "imp_lexer.ml"

  | 87 ->
# 109 "imp_lexer.mll"
           ( S8_END )
# 928 "imp_lexer.ml"

  | 88 ->
# 110 "imp_lexer.mll"
            ( APP )
# 933 "imp_lexer.ml"

  | 89 ->
# 111 "imp_lexer.mll"
            ( PRJ )
# 938 "imp_lexer.ml"

  | 90 ->
# 112 "imp_lexer.mll"
            ( Z )
# 943 "imp_lexer.ml"

  | 91 ->
# 113 "imp_lexer.mll"
            ( N )
# 948 "imp_lexer.ml"

  | 92 ->
# 114 "imp_lexer.mll"
            ( TYP_STG )
# 953 "imp_lexer.ml"

  | 93 ->
# 115 "imp_lexer.mll"
          ( PLS )
# 958 "imp_lexer.ml"

  | 94 ->
# 116 "imp_lexer.mll"
          ( MLT )
# 963 "imp_lexer.ml"

  | 95 ->
# 117 "imp_lexer.mll"
          ( MNS )
# 968 "imp_lexer.ml"

  | 96 ->
# 118 "imp_lexer.mll"
           ( BYTE )
# 973 "imp_lexer.ml"

  | 97 ->
# 119 "imp_lexer.mll"
            ( GRM )
# 978 "imp_lexer.ml"

  | 98 ->
# 120 "imp_lexer.mll"
           ( NOT )
# 983 "imp_lexer.ml"

  | 99 ->
# 121 "imp_lexer.mll"
           ( S8_E )
# 988 "imp_lexer.ml"

  | 100 ->
# 122 "imp_lexer.mll"
           ( S8_P )
# 993 "imp_lexer.ml"

  | 101 ->
# 123 "imp_lexer.mll"
              ( ORD_LEX_COPRD )
# 998 "imp_lexer.ml"

  | 102 ->
# 124 "imp_lexer.mll"
          ( CMM )
# 1003 "imp_lexer.ml"

  | 103 ->
let
# 125 "imp_lexer.mll"
                      lxm
# 1009 "imp_lexer.ml"
= Lexing.sub_lexeme lexbuf (lexbuf.Lexing.lex_start_pos + 1) lexbuf.Lexing.lex_curr_pos in
# 125 "imp_lexer.mll"
                           ( ROT (String.length lxm) )
# 1013 "imp_lexer.ml"

  | 104 ->
let
# 126 "imp_lexer.mll"
                      lxm
# 1019 "imp_lexer.ml"
= Lexing.sub_lexeme lexbuf (lexbuf.Lexing.lex_start_pos + 1) lexbuf.Lexing.lex_curr_pos in
# 126 "imp_lexer.mll"
                           ( SLF (String.length lxm) )
# 1023 "imp_lexer.ml"

  | 105 ->
let
# 127 "imp_lexer.mll"
                 lxm
# 1029 "imp_lexer.ml"
= Lexing.sub_lexeme lexbuf lexbuf.Lexing.lex_start_pos (lexbuf.Lexing.lex_curr_pos + -1) in
# 127 "imp_lexer.mll"
                           ( IDX (int_of_string lxm) )
# 1033 "imp_lexer.ml"

  | 106 ->
# 128 "imp_lexer.mll"
          ( DOT )
# 1038 "imp_lexer.ml"

  | 107 ->
# 129 "imp_lexer.mll"
             ( AGL )
# 1043 "imp_lexer.ml"

  | 108 ->
let
# 130 "imp_lexer.mll"
                lxm
# 1049 "imp_lexer.ml"
= Lexing.sub_lexeme lexbuf lexbuf.Lexing.lex_start_pos lexbuf.Lexing.lex_curr_pos in
# 130 "imp_lexer.mll"
                     ( INT (int_of_string lxm) )
# 1053 "imp_lexer.ml"

  | 109 ->
# 131 "imp_lexer.mll"
                    ( token lexbuf                         )
# 1058 "imp_lexer.ml"

  | 110 ->
# 132 "imp_lexer.mll"
            ( NL )
# 1063 "imp_lexer.ml"

  | 111 ->
# 133 "imp_lexer.mll"
                    ( EOF               )
# 1068 "imp_lexer.ml"

  | 112 ->
# 134 "imp_lexer.mll"
                    ( raise (Error (Printf.sprintf
                      "At offset %d: unexpected character.\n"
                      (Lexing.lexeme_start lexbuf))) )
# 1075 "imp_lexer.ml"

  | __ocaml_lex_state -> lexbuf.Lexing.refill_buff lexbuf;
      __ocaml_lex_token_rec lexbuf __ocaml_lex_state

and line_comment lexbuf =
   __ocaml_lex_line_comment_rec lexbuf 162
and __ocaml_lex_line_comment_rec lexbuf __ocaml_lex_state =
  match Lexing.engine __ocaml_lex_tables __ocaml_lex_state lexbuf with
      | 0 ->
# 138 "imp_lexer.mll"
          ( Util.pnt true "end line comment\n"; token lexbuf )
# 1087 "imp_lexer.ml"

  | 1 ->
# 139 "imp_lexer.mll"
      ( line_comment lexbuf )
# 1092 "imp_lexer.ml"

  | __ocaml_lex_state -> lexbuf.Lexing.refill_buff lexbuf;
      __ocaml_lex_line_comment_rec lexbuf __ocaml_lex_state

;;

