§ @.L0 { a l i } 
	∐ l'=i' . 
		∎ { a l } 
	∐. . 
		_lod_q { a i } ⊢ { a i fn } 
		^ fn ⊢ _,xc0 
			"cat " 0' " >> SH.mdls\n" // 
		_cd xc0 ⊢ _ 
		_inc i ⊢ i 
		L0 { a l i } ⊢| 
§ E fn0
	_in_fn fn0 ⊢ { _ sf1 } 
	##_emt sf1 ⊢ sf1 
	_prs◂◂OpADL.syntax.file { sf1 %[ 0r ] } ⊢ { _ r0 a0 } 
	\\OpADL.syntax.file.prs { sf1 %[ 0r ] } ⊢ { _ r0 a0 } 
	_emt r0 ⊢ _ 
	##_emt a0 ⊢ a0  
	$ a0 ⊢ 
	∐ _some◂a0 . 
		$ a0 ⊢ 
		∐ OpADL.syntax.prs_vld◂a0 . 
			_emt %[ "opxcc:prs_vld" ] ⊢ _ 
			OpADL.ns.emt_rtm a0 ⊢ { i il { hpv hpv_n } { rv rv_n ev ev_n tv tv_n } irv tav evv tx_n { dd ec0 rtm_n lb_n } }		
			_emt %[ "start_sh D2" ] ⊢ _ 
			rp8.to_s8 ec0 ⊢ sec0
			_emt_s8_to { %[ "SH.mdls.s" ] sec0 } ⊢ _
			
			» _^ _ ⊢ sx0 
				`yasm -g dwarf2 -f elf64 SH.mdls.s -o out.o
    		`gcc -Wall stub.c out.o -nostartfiles -no-pie -pg -g -O0 -o out.exe 
				// 
			_cd sx0 ⊢ sx0  
			\\_info {} ⊢ {} 
			∎ {} 
		∐. OpADL.syntax.prs_err◂e0 .
			OpADL.syntax.pnt_prs_err e0 ⊢ es0 
			_emt es0 ⊢ _  
			∎|
	∐. _none◂{} . 
		∎| 

§% 
	_emt _args ⊢ args
	\\_lod_q { args %[ 1r ] } ⊢ { _ _ fn0 } 
	_arr_len args ⊢ { args l } 
	» "rm -f SH.mdls\n" _ ⊢ xc0 
	_cd xc0 ⊢ _ 
	L0 { args l %[ 1r ] } ⊢ _
	E %[ "SH.mdls" ] ⊢ _
	\\_info {} ⊢ {}
	
	∎ 
