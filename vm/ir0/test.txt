"AA"
\"AA\"

¶ t0 < t1 ≃
  ∐ .. : ..
  ∐ .. : ..
  ∐<

%[4]◂432
¶ f +≃ a b c d e

|» { r0 r1 r2 r3 }
∇ { r0 r1 ∠r2 } ⊢ { r3 r4 }
  ∐ { c0 c1 { c2 c3 c4} }
  $ c2 ⊢ c2_0,c2_1,c2_2
  ◂ c2_0,c3 ⊢ d0
  ∎ { c3 c4 d0 }
  ∐
§ @.fact -: ℤ ⊢ ℤ
  |» x0
  $ x0 ⊢ x1,x2
  ∇ { x1 ∠x2 } ⊢ y
    ∐ { x1 _ }
    » 1 |~ y
    ∎ y
    ∐ { x1 _ }
    » $*(fact◂($-1))  |~ x1 ⊢ y
    ∎ y
  ∎ y

§ @.fact -: ℤ ⊢ ℤ
  |» x0
  $ x0 ⊢ x1,x2
  ∇ { x1 ∠x2 } ⊢|
    ∐ { x1 _ }
    » 1 |~ _ ⊢| ∎
    ∐ { x1 _ }
    » $*(fact◂($-1))  |~ x1 ⊢| ∎
;
§ @.fact -: ℤ ⊢ ℤ
  |» x
  ∇ ∠x ⊢|
    ∐ _
    » 1 |~ _ ⊢|
    ∐ x
    » ($+1)*(fact◂$) |~ x ⊢|
;
§ @.fact -: ℤ ⊢ ℤ
  |» x
  ∠ x
    ∐ _
    » 1 |~ _ ⊢|
    ∐ x
    » ($+1)*(fact◂$) |~ x ⊢|
;
§ @.fact -: ℤ ⊢ ℤ
  |» x
  $ x ⊢ x0,x1
  ∠ x0
    ∐ _
    » ! 1 |~ _ ⊢|
    ∐ _
    » ! $*(fact◂($-1)) |~ x1 ⊢|
;
§ @.fact -: ℤ ⊢ ℤ
  |» x
  $ x ⊢ x0,x1
  ∠ x0
    ∐ _
    » ! 1 |~ _ ⊢ y
    ∎ y
    ∐ _
    » ! $*(fact◂($-1)) |~ x1 ⊢ y
    ∎ y
§ @.fact_i -: { ℤ ℤ } ⊢ ℤ
  |» { x y }
  $ x ⊢ x0,x1
  ∠ x0
    ∐ _
    ∎ y
    ∐ _
    » (0'-1) (0'*1') |~ { x1 y } ⊢ { x y }
    fact_i  { x y } ⊢|
    ∐|
    ∐.? e

  ? x
  ∐ x
  ∐ e
  ∐|
@.[_].+[ a b c <]◂_ ≃∐[ .. <]
 = a +< (b +< (c +< d'))
± : -{> evo~({> in~a' st~e' }→‹e'›) init~(-a'→e') } ; create callback
{ ± &'◂a' a' }

$-syntax
+0-syntax
Σ◂g0


a|→b
{a|→b a}→(a|→b) : in
(a|→b)→‹{a|→b b}› : out

kinds
_ : toplevel types
{} : record types
{> x y .. } : restricted labeled record types
ℤ : z types
Σ : grammar types
@ : iso recursive types
a'→b' : type constructor
  ‹›::_→_  ⟦⟧::_→_
{ a0 .. an } : record kind

 l0::{> z~| w~| <} ∀ {> x~t0' y~t1' < l0' } {> s~ℤ < l0' }
 r0::{<} ∀ { ℤ ℙ < r0' }
 z0::ℤ ∀ { ℤn◂z0' ℤn◂z0' }→ℤn◂z0'
 (→)::{ _ _ }→_


 \\ { x y }
 ∐\ { a' "A" }
 ∐\ { 3 _ }
 ∐\ _
 ∐|

 |» { v0 v1 v2 }
 » _ |~ { l~v0 s~v1 } ⊢ r
 ![
 mov a,b
 usr0 ◂ { l' s' }
 xor r0,r1
 "# Hello , World !!"
 and rx,[rb],(f◂$)',rcx

 ]!
 \\ r0
  ∐\ ∠[0]◂(∠[1]◂x')
  ..
  ∎ ..
  ∐\ ⟦ "!" "ab" < tl' ⟧
  ∐\ ⟦ "L" < tl' ⟧
  ∐\ _
 ∇
§+ nt0
  |« { x y { z w } }
  +» { x y } , st0
  ..
  @.x r2 |⊢
  ∎ out , st1
  +» y z
  ..
  ∎ ⟦⟧ , { 10 "TX33" ‹› }
  +» z { w x }
  ..
  ∎ ⟦ p0 p1 p2 p3 ⟧ , {}

pkt :

§ main
  |» {}
  ..
  ∎ { .. }
nc test.mdls main



0xSffa0033cdedf
0bS0000110110010110

↑.Lb0
↑[Lb0]
`Lb0
  $ x ⊢ x,x0
  ? x
    \ ⟦⟧ ; nil◂{]
    ..
    ∎
    \ ⟦ x_hd' < x_tl' ⟧ ; = cns◂{ x_hd' x_tl' }
    ..
    ∎

a'→b' as a'
@.a' ≃∐[ a'→b' ]

§ @.fact x
  $ x ⊢ x,x0
  ? x0
    ∐\ 0 | † ‡
    » 0r1 | _ ⊢ t0
    $ x ⊢ x,x0
    sub { x0 t0 } ⊢ x0
    fact x0 ⊢ y1
    mul { x y1 } ⊢ y1
    ∎ y1
    |∐\ _ |
    » 0r1 | _ ⊢ y
    ∎ y

unification of pattern
p0 ~ p1
negation
!p0
and
p0,p1
or
p0|p1

  ? x
    ∐\ p0 , eq0 , eq1 , eq2 |
    ∐\ p1 , eq .. |
    ..
    |∐\ pn , .. |
    \
    \.
§ f : ..
¶ K0x,K0y,K0z :: K0
¶ tY ◂ a'
  ..
¶ tX ◂ { a' b' }
  ∐ ..
  ..
¶ a'::K0 ∀ tY ◂ a',b'
  ..
tY :: _ → _
tX :: { _ _ } → _
tY :: K0 → _ → _
tZ :: {> < x,y~| } → _
